command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1901429	File	data/converged/CVE-2015-8617_php-src/ext_snmp_snmp.c								
ANR	1901430	DeclStmt									
ANR	1901431	Decl							extern netsnmp_log_handler	extern netsnmp_log_handler *	logh_head
ANR	1901432	Function	shutdown_snmp_logging	86:1:2620:2757							
ANR	1901433	FunctionDef	shutdown_snmp_logging ()		1901432	0					
ANR	1901434	CompoundStatement		87:1:2654:2757	1901432	0					
ANR	1901435	ExpressionStatement	snmp_disable_log ( )	88:2:2660:2678	1901432	0	True				
ANR	1901436	CallExpression	snmp_disable_log ( )		1901432	0					
ANR	1901437	Callee	snmp_disable_log		1901432	0					
ANR	1901438	Identifier	snmp_disable_log		1901432	0					
ANR	1901439	ArgumentList			1901432	1					
ANR	1901440	WhileStatement	while ( NULL != logh_head )		1901432	1					
ANR	1901441	Condition	NULL != logh_head	89:8:2690:2706	1901432	0	True				
ANR	1901442	EqualityExpression	NULL != logh_head		1901432	0		!=			
ANR	1901443	Identifier	NULL		1901432	0					
ANR	1901444	Identifier	logh_head		1901432	1					
ANR	1901445	ExpressionStatement	netsnmp_remove_loghandler ( logh_head )	90:3:2714:2752	1901432	1	True				
ANR	1901446	CallExpression	netsnmp_remove_loghandler ( logh_head )		1901432	0					
ANR	1901447	Callee	netsnmp_remove_loghandler		1901432	0					
ANR	1901448	Identifier	netsnmp_remove_loghandler		1901432	0					
ANR	1901449	ArgumentList	logh_head		1901432	1					
ANR	1901450	Argument	logh_head		1901432	0					
ANR	1901451	Identifier	logh_head		1901432	0					
ANR	1901452	ReturnType	define		1901432	1					
ANR	1901453	Identifier	shutdown_snmp_logging		1901432	2					
ANR	1901454	ParameterList			1901432	3					
ANR	1901455	CFGEntryNode	ENTRY		1901432		True				
ANR	1901456	CFGExitNode	EXIT		1901432		True				
ANR	1901457	Symbol	NULL		1901432						
ANR	1901458	Symbol	logh_head		1901432						
ANR	1901459	DeclStmt									
ANR	1901460	Decl							struct snmp_session	struct snmp_session	php_snmp_session
ANR	1901461	DeclStmt									
ANR	1901462	Decl							int	int	i
ANR	1901463	DeclStmt									
ANR	1901464	Decl							oid	oid [ ]	objid_mib
ANR	1901465	DeclStmt									
ANR	1901466	Decl							int	int	le_snmp_session
ANR	1901467	DeclStmt									
ANR	1901468	Decl							zend_object_handlers	zend_object_handlers	php_snmp_object_handlers
ANR	1901469	DeclStmt									
ANR	1901470	Decl							zend_class_entry	zend_class_entry *	php_snmp_ce
ANR	1901471	DeclStmt									
ANR	1901472	Decl							zend_class_entry	zend_class_entry *	php_snmp_exception_ce
ANR	1901473	DeclStmt									
ANR	1901474	Decl							HashTable	HashTable	php_snmp_properties
ANR	1901475	ClassDef	objid_query	373:0:10322:10519							
ANR	1901476	DeclStmt									
ANR	1901477	Decl							int	int	count
ANR	1901478	DeclStmt									
ANR	1901479	Decl							int	int	offset
ANR	1901480	DeclStmt									
ANR	1901481	Decl							int	int	step
ANR	1901482	DeclStmt									
ANR	1901483	Decl							zend_long	zend_long	non_repeaters
ANR	1901484	DeclStmt									
ANR	1901485	Decl							zend_long	zend_long	max_repetitions
ANR	1901486	DeclStmt									
ANR	1901487	Decl							int	int	valueretrieval
ANR	1901488	DeclStmt									
ANR	1901489	Decl							int	int	array_output
ANR	1901490	DeclStmt									
ANR	1901491	Decl							int	int	oid_increasing_check
ANR	1901492	DeclStmt									
ANR	1901493	Decl							snmpobjarg	snmpobjarg *	vars
ANR	1901494	DeclStmt									
ANR	1901495	Decl							const zend_function_entry	const zend_function_entry [ ]	snmp_functions
ANR	1901496	Function	netsnmp_session_free	455:0:12856:13139							
ANR	1901497	FunctionDef	netsnmp_session_free (php_snmp_session * * session)		1901496	0					
ANR	1901498	CompoundStatement		456:0:12927:13139	1901496	0					
ANR	1901499	IfStatement	if ( * session )		1901496	0					
ANR	1901500	Condition	* session	457:5:12934:12941	1901496	0	True				
ANR	1901501	UnaryOperationExpression	* session		1901496	0					
ANR	1901502	UnaryOperator	*		1901496	0					
ANR	1901503	Identifier	session		1901496	1					
ANR	1901504	CompoundStatement		2:15:16:16	1901496	1					
ANR	1901505	ExpressionStatement	PHP_SNMP_SESSION_FREE ( peername )	458:2:12948:12979	1901496	0	True				
ANR	1901506	CallExpression	PHP_SNMP_SESSION_FREE ( peername )		1901496	0					
ANR	1901507	Callee	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901508	Identifier	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901509	ArgumentList	peername		1901496	1					
ANR	1901510	Argument	peername		1901496	0					
ANR	1901511	Identifier	peername		1901496	0					
ANR	1901512	ExpressionStatement	PHP_SNMP_SESSION_FREE ( community )	459:2:12983:13015	1901496	1	True				
ANR	1901513	CallExpression	PHP_SNMP_SESSION_FREE ( community )		1901496	0					
ANR	1901514	Callee	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901515	Identifier	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901516	ArgumentList	community		1901496	1					
ANR	1901517	Argument	community		1901496	0					
ANR	1901518	Identifier	community		1901496	0					
ANR	1901519	ExpressionStatement	PHP_SNMP_SESSION_FREE ( securityName )	460:2:13019:13054	1901496	2	True				
ANR	1901520	CallExpression	PHP_SNMP_SESSION_FREE ( securityName )		1901496	0					
ANR	1901521	Callee	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901522	Identifier	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901523	ArgumentList	securityName		1901496	1					
ANR	1901524	Argument	securityName		1901496	0					
ANR	1901525	Identifier	securityName		1901496	0					
ANR	1901526	ExpressionStatement	PHP_SNMP_SESSION_FREE ( contextEngineID )	461:2:13058:13096	1901496	3	True				
ANR	1901527	CallExpression	PHP_SNMP_SESSION_FREE ( contextEngineID )		1901496	0					
ANR	1901528	Callee	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901529	Identifier	PHP_SNMP_SESSION_FREE		1901496	0					
ANR	1901530	ArgumentList	contextEngineID		1901496	1					
ANR	1901531	Argument	contextEngineID		1901496	0					
ANR	1901532	Identifier	contextEngineID		1901496	0					
ANR	1901533	ExpressionStatement	efree ( * session )	462:2:13100:13115	1901496	4	True				
ANR	1901534	CallExpression	efree ( * session )		1901496	0					
ANR	1901535	Callee	efree		1901496	0					
ANR	1901536	Identifier	efree		1901496	0					
ANR	1901537	ArgumentList	* session		1901496	1					
ANR	1901538	Argument	* session		1901496	0					
ANR	1901539	UnaryOperationExpression	* session		1901496	0					
ANR	1901540	UnaryOperator	*		1901496	0					
ANR	1901541	Identifier	session		1901496	1					
ANR	1901542	ExpressionStatement	* session = NULL	463:2:13119:13134	1901496	5	True				
ANR	1901543	AssignmentExpression	* session = NULL		1901496	0		=			
ANR	1901544	UnaryOperationExpression	* session		1901496	0					
ANR	1901545	UnaryOperator	*		1901496	0					
ANR	1901546	Identifier	session		1901496	1					
ANR	1901547	Identifier	NULL		1901496	1					
ANR	1901548	ReturnType	static void		1901496	1					
ANR	1901549	Identifier	netsnmp_session_free		1901496	2					
ANR	1901550	ParameterList	php_snmp_session * * session		1901496	3					
ANR	1901551	Parameter	php_snmp_session * * session	455:33:12889:12914	1901496	0	True				
ANR	1901552	ParameterType	php_snmp_session * *		1901496	0					
ANR	1901553	Identifier	session		1901496	1					
ANR	1901554	CFGEntryNode	ENTRY		1901496		True				
ANR	1901555	CFGExitNode	EXIT		1901496		True				
ANR	1901556	Symbol	* session		1901496						
ANR	1901557	Symbol	peername		1901496						
ANR	1901558	Symbol	securityName		1901496						
ANR	1901559	Symbol	NULL		1901496						
ANR	1901560	Symbol	session		1901496						
ANR	1901561	Symbol	contextEngineID		1901496						
ANR	1901562	Symbol	community		1901496						
ANR	1901563	Function	php_snmp_session_destructor	468:0:13152:13318							
ANR	1901564	FunctionDef	php_snmp_session_destructor (zend_resource * rsrc)		1901563	0					
ANR	1901565	CompoundStatement		469:0:13223:13318	1901563	0					
ANR	1901566	IdentifierDeclStatement	php_snmp_session * session = ( php_snmp_session * ) rsrc -> ptr ;	470:1:13226:13283	1901563	0	True				
ANR	1901567	IdentifierDecl	* session = ( php_snmp_session * ) rsrc -> ptr		1901563	0					
ANR	1901568	IdentifierDeclType	php_snmp_session *		1901563	0					
ANR	1901569	Identifier	session		1901563	1					
ANR	1901570	AssignmentExpression	* session = ( php_snmp_session * ) rsrc -> ptr		1901563	2		=			
ANR	1901571	Identifier	session		1901563	0					
ANR	1901572	CastExpression	( php_snmp_session * ) rsrc -> ptr		1901563	1					
ANR	1901573	CastTarget	php_snmp_session *		1901563	0					
ANR	1901574	PtrMemberAccess	rsrc -> ptr		1901563	1					
ANR	1901575	Identifier	rsrc		1901563	0					
ANR	1901576	Identifier	ptr		1901563	1					
ANR	1901577	ExpressionStatement	netsnmp_session_free ( & session )	471:1:13286:13316	1901563	1	True				
ANR	1901578	CallExpression	netsnmp_session_free ( & session )		1901563	0					
ANR	1901579	Callee	netsnmp_session_free		1901563	0					
ANR	1901580	Identifier	netsnmp_session_free		1901563	0					
ANR	1901581	ArgumentList	& session		1901563	1					
ANR	1901582	Argument	& session		1901563	0					
ANR	1901583	UnaryOperationExpression	& session		1901563	0					
ANR	1901584	UnaryOperator	&		1901563	0					
ANR	1901585	Identifier	session		1901563	1					
ANR	1901586	ReturnType	static void		1901563	1					
ANR	1901587	Identifier	php_snmp_session_destructor		1901563	2					
ANR	1901588	ParameterList	zend_resource * rsrc		1901563	3					
ANR	1901589	Parameter	zend_resource * rsrc	468:40:13192:13210	1901563	0	True				
ANR	1901590	ParameterType	zend_resource *		1901563	0					
ANR	1901591	Identifier	rsrc		1901563	1					
ANR	1901592	CFGEntryNode	ENTRY		1901563		True				
ANR	1901593	CFGExitNode	EXIT		1901563		True				
ANR	1901594	Symbol	& session		1901563						
ANR	1901595	Symbol	rsrc -> ptr		1901563						
ANR	1901596	Symbol	session		1901563						
ANR	1901597	Symbol	rsrc		1901563						
ANR	1901598	Symbol	* rsrc		1901563						
ANR	1901599	Function	php_snmp_object_free_storage	475:0:13331:13574							
ANR	1901600	FunctionDef	php_snmp_object_free_storage (zend_object * object)		1901599	0					
ANR	1901601	CompoundStatement		476:0:13403:13574	1901599	0					
ANR	1901602	IdentifierDeclStatement	php_snmp_object * intern = php_snmp_fetch_object ( object ) ;	477:1:13406:13461	1901599	0	True				
ANR	1901603	IdentifierDecl	* intern = php_snmp_fetch_object ( object )		1901599	0					
ANR	1901604	IdentifierDeclType	php_snmp_object *		1901599	0					
ANR	1901605	Identifier	intern		1901599	1					
ANR	1901606	AssignmentExpression	* intern = php_snmp_fetch_object ( object )		1901599	2		=			
ANR	1901607	Identifier	intern		1901599	0					
ANR	1901608	CallExpression	php_snmp_fetch_object ( object )		1901599	1					
ANR	1901609	Callee	php_snmp_fetch_object		1901599	0					
ANR	1901610	Identifier	php_snmp_fetch_object		1901599	0					
ANR	1901611	ArgumentList	object		1901599	1					
ANR	1901612	Argument	object		1901599	0					
ANR	1901613	Identifier	object		1901599	0					
ANR	1901614	IfStatement	if ( ! intern )		1901599	1					
ANR	1901615	Condition	! intern	479:5:13469:13475	1901599	0	True				
ANR	1901616	UnaryOperationExpression	! intern		1901599	0					
ANR	1901617	UnaryOperator	!		1901599	0					
ANR	1901618	Identifier	intern		1901599	1					
ANR	1901619	CompoundStatement		4:14:74:74	1901599	1					
ANR	1901620	ReturnStatement	return ;	480:2:13482:13488	1901599	0	True				
ANR	1901621	ExpressionStatement	netsnmp_session_free ( & ( intern -> session ) )	483:1:13495:13535	1901599	2	True				
ANR	1901622	CallExpression	netsnmp_session_free ( & ( intern -> session ) )		1901599	0					
ANR	1901623	Callee	netsnmp_session_free		1901599	0					
ANR	1901624	Identifier	netsnmp_session_free		1901599	0					
ANR	1901625	ArgumentList	& ( intern -> session )		1901599	1					
ANR	1901626	Argument	& ( intern -> session )		1901599	0					
ANR	1901627	UnaryOperationExpression	& ( intern -> session )		1901599	0					
ANR	1901628	UnaryOperator	&		1901599	0					
ANR	1901629	PtrMemberAccess	intern -> session		1901599	1					
ANR	1901630	Identifier	intern		1901599	0					
ANR	1901631	Identifier	session		1901599	1					
ANR	1901632	ExpressionStatement	zend_object_std_dtor ( & intern -> zo )	485:1:13539:13572	1901599	3	True				
ANR	1901633	CallExpression	zend_object_std_dtor ( & intern -> zo )		1901599	0					
ANR	1901634	Callee	zend_object_std_dtor		1901599	0					
ANR	1901635	Identifier	zend_object_std_dtor		1901599	0					
ANR	1901636	ArgumentList	& intern -> zo		1901599	1					
ANR	1901637	Argument	& intern -> zo		1901599	0					
ANR	1901638	UnaryOperationExpression	& intern -> zo		1901599	0					
ANR	1901639	UnaryOperator	&		1901599	0					
ANR	1901640	PtrMemberAccess	intern -> zo		1901599	1					
ANR	1901641	Identifier	intern		1901599	0					
ANR	1901642	Identifier	zo		1901599	1					
ANR	1901643	ReturnType	static void		1901599	1					
ANR	1901644	Identifier	php_snmp_object_free_storage		1901599	2					
ANR	1901645	ParameterList	zend_object * object		1901599	3					
ANR	1901646	Parameter	zend_object * object	475:41:13372:13390	1901599	0	True				
ANR	1901647	ParameterType	zend_object *		1901599	0					
ANR	1901648	Identifier	object		1901599	1					
ANR	1901649	CFGEntryNode	ENTRY		1901599		True				
ANR	1901650	CFGExitNode	EXIT		1901599		True				
ANR	1901651	Symbol	intern		1901599						
ANR	1901652	Symbol	& intern -> session		1901599						
ANR	1901653	Symbol	& intern -> zo		1901599						
ANR	1901654	Symbol	php_snmp_fetch_object		1901599						
ANR	1901655	Symbol	object		1901599						
ANR	1901656	Function	php_snmp_object_new	489:0:13587:13988							
ANR	1901657	FunctionDef	php_snmp_object_new (zend_class_entry * class_type)		1901656	0					
ANR	1901658	CompoundStatement		490:0:13667:13988	1901656	0					
ANR	1901659	IdentifierDeclStatement	php_snmp_object * intern ;	491:1:13670:13693	1901656	0	True				
ANR	1901660	IdentifierDecl	* intern		1901656	0					
ANR	1901661	IdentifierDeclType	php_snmp_object *		1901656	0					
ANR	1901662	Identifier	intern		1901656	1					
ANR	1901663	ExpressionStatement	"intern = ecalloc ( 1 , sizeof ( php_snmp_object ) + zend_object_properties_size ( class_type ) )"	494:1:13727:13813	1901656	1	True				
ANR	1901664	AssignmentExpression	"intern = ecalloc ( 1 , sizeof ( php_snmp_object ) + zend_object_properties_size ( class_type ) )"		1901656	0		=			
ANR	1901665	Identifier	intern		1901656	0					
ANR	1901666	CallExpression	"ecalloc ( 1 , sizeof ( php_snmp_object ) + zend_object_properties_size ( class_type ) )"		1901656	1					
ANR	1901667	Callee	ecalloc		1901656	0					
ANR	1901668	Identifier	ecalloc		1901656	0					
ANR	1901669	ArgumentList	1		1901656	1					
ANR	1901670	Argument	1		1901656	0					
ANR	1901671	PrimaryExpression	1		1901656	0					
ANR	1901672	Argument	sizeof ( php_snmp_object ) + zend_object_properties_size ( class_type )		1901656	1					
ANR	1901673	AdditiveExpression	sizeof ( php_snmp_object ) + zend_object_properties_size ( class_type )		1901656	0		+			
ANR	1901674	SizeofExpression	sizeof ( php_snmp_object )		1901656	0					
ANR	1901675	Sizeof	sizeof		1901656	0					
ANR	1901676	SizeofOperand	php_snmp_object		1901656	1					
ANR	1901677	CallExpression	zend_object_properties_size ( class_type )		1901656	1					
ANR	1901678	Callee	zend_object_properties_size		1901656	0					
ANR	1901679	Identifier	zend_object_properties_size		1901656	0					
ANR	1901680	ArgumentList	class_type		1901656	1					
ANR	1901681	Argument	class_type		1901656	0					
ANR	1901682	Identifier	class_type		1901656	0					
ANR	1901683	ExpressionStatement	"zend_object_std_init ( & intern -> zo , class_type )"	496:1:13817:13862	1901656	2	True				
ANR	1901684	CallExpression	"zend_object_std_init ( & intern -> zo , class_type )"		1901656	0					
ANR	1901685	Callee	zend_object_std_init		1901656	0					
ANR	1901686	Identifier	zend_object_std_init		1901656	0					
ANR	1901687	ArgumentList	& intern -> zo		1901656	1					
ANR	1901688	Argument	& intern -> zo		1901656	0					
ANR	1901689	UnaryOperationExpression	& intern -> zo		1901656	0					
ANR	1901690	UnaryOperator	&		1901656	0					
ANR	1901691	PtrMemberAccess	intern -> zo		1901656	1					
ANR	1901692	Identifier	intern		1901656	0					
ANR	1901693	Identifier	zo		1901656	1					
ANR	1901694	Argument	class_type		1901656	1					
ANR	1901695	Identifier	class_type		1901656	0					
ANR	1901696	ExpressionStatement	"object_properties_init ( & intern -> zo , class_type )"	497:1:13865:13912	1901656	3	True				
ANR	1901697	CallExpression	"object_properties_init ( & intern -> zo , class_type )"		1901656	0					
ANR	1901698	Callee	object_properties_init		1901656	0					
ANR	1901699	Identifier	object_properties_init		1901656	0					
ANR	1901700	ArgumentList	& intern -> zo		1901656	1					
ANR	1901701	Argument	& intern -> zo		1901656	0					
ANR	1901702	UnaryOperationExpression	& intern -> zo		1901656	0					
ANR	1901703	UnaryOperator	&		1901656	0					
ANR	1901704	PtrMemberAccess	intern -> zo		1901656	1					
ANR	1901705	Identifier	intern		1901656	0					
ANR	1901706	Identifier	zo		1901656	1					
ANR	1901707	Argument	class_type		1901656	1					
ANR	1901708	Identifier	class_type		1901656	0					
ANR	1901709	ExpressionStatement	intern -> zo . handlers = & php_snmp_object_handlers	499:1:13916:13963	1901656	4	True				
ANR	1901710	AssignmentExpression	intern -> zo . handlers = & php_snmp_object_handlers		1901656	0		=			
ANR	1901711	MemberAccess	intern -> zo . handlers		1901656	0					
ANR	1901712	PtrMemberAccess	intern -> zo		1901656	0					
ANR	1901713	Identifier	intern		1901656	0					
ANR	1901714	Identifier	zo		1901656	1					
ANR	1901715	Identifier	handlers		1901656	1					
ANR	1901716	UnaryOperationExpression	& php_snmp_object_handlers		1901656	1					
ANR	1901717	UnaryOperator	&		1901656	0					
ANR	1901718	Identifier	php_snmp_object_handlers		1901656	1					
ANR	1901719	ReturnStatement	return & intern -> zo ;	501:1:13967:13985	1901656	5	True				
ANR	1901720	UnaryOperationExpression	& intern -> zo		1901656	0					
ANR	1901721	UnaryOperator	&		1901656	0					
ANR	1901722	PtrMemberAccess	intern -> zo		1901656	1					
ANR	1901723	Identifier	intern		1901656	0					
ANR	1901724	Identifier	zo		1901656	1					
ANR	1901725	ReturnType	static zend_object *		1901656	1					
ANR	1901726	Identifier	php_snmp_object_new		1901656	2					
ANR	1901727	ParameterList	zend_class_entry * class_type		1901656	3					
ANR	1901728	Parameter	zend_class_entry * class_type	489:40:13627:13654	1901656	0	True				
ANR	1901729	ParameterType	zend_class_entry *		1901656	0					
ANR	1901730	Identifier	class_type		1901656	1					
ANR	1901731	CFGEntryNode	ENTRY		1901656		True				
ANR	1901732	CFGExitNode	EXIT		1901656		True				
ANR	1901733	Symbol	* intern		1901656						
ANR	1901734	Symbol	class_type		1901656						
ANR	1901735	Symbol	intern		1901656						
ANR	1901736	Symbol	zend_object_properties_size		1901656						
ANR	1901737	Symbol	& php_snmp_object_handlers		1901656						
ANR	1901738	Symbol	intern -> zo . handlers		1901656						
ANR	1901739	Symbol	intern -> zo		1901656						
ANR	1901740	Symbol	ecalloc		1901656						
ANR	1901741	Symbol	& intern -> zo		1901656						
ANR	1901742	Function	php_snmp_error	511:0:14077:14881							
ANR	1901743	FunctionDef	"php_snmp_error (zval * object , const char * docref , int type , const char * format)"		1901742	0					
ANR	1901744	CompoundStatement		512:0:14173:14881	1901742	0					
ANR	1901745	IdentifierDeclStatement	va_list args ;	513:1:14176:14188	1901742	0	True				
ANR	1901746	IdentifierDecl	args		1901742	0					
ANR	1901747	IdentifierDeclType	va_list		1901742	0					
ANR	1901748	Identifier	args		1901742	1					
ANR	1901749	IdentifierDeclStatement	php_snmp_object * snmp_object = NULL ;	514:1:14191:14226	1901742	1	True				
ANR	1901750	IdentifierDecl	* snmp_object = NULL		1901742	0					
ANR	1901751	IdentifierDeclType	php_snmp_object *		1901742	0					
ANR	1901752	Identifier	snmp_object		1901742	1					
ANR	1901753	AssignmentExpression	* snmp_object = NULL		1901742	2		=			
ANR	1901754	Identifier	NULL		1901742	0					
ANR	1901755	Identifier	NULL		1901742	1					
ANR	1901756	IfStatement	if ( object )		1901742	2					
ANR	1901757	Condition	object	516:5:14234:14239	1901742	0	True				
ANR	1901758	Identifier	object		1901742	0					
ANR	1901759	CompoundStatement		5:13:68:68	1901742	1					
ANR	1901760	ExpressionStatement	snmp_object = Z_SNMP_P ( object )	517:2:14246:14276	1901742	0	True				
ANR	1901761	AssignmentExpression	snmp_object = Z_SNMP_P ( object )		1901742	0		=			
ANR	1901762	Identifier	snmp_object		1901742	0					
ANR	1901763	CallExpression	Z_SNMP_P ( object )		1901742	1					
ANR	1901764	Callee	Z_SNMP_P		1901742	0					
ANR	1901765	Identifier	Z_SNMP_P		1901742	0					
ANR	1901766	ArgumentList	object		1901742	1					
ANR	1901767	Argument	object		1901742	0					
ANR	1901768	Identifier	object		1901742	0					
ANR	1901769	IfStatement	if ( type == PHP_SNMP_ERRNO_NOERROR )		1901742	1					
ANR	1901770	Condition	type == PHP_SNMP_ERRNO_NOERROR	518:6:14284:14313	1901742	0	True				
ANR	1901771	EqualityExpression	type == PHP_SNMP_ERRNO_NOERROR		1901742	0		==			
ANR	1901772	Identifier	type		1901742	0					
ANR	1901773	Identifier	PHP_SNMP_ERRNO_NOERROR		1901742	1					
ANR	1901774	CompoundStatement		7:38:142:142	1901742	1					
ANR	1901775	ExpressionStatement	"memset ( snmp_object -> snmp_errstr , 0 , sizeof ( snmp_object -> snmp_errstr ) )"	519:3:14321:14390	1901742	0	True				
ANR	1901776	CallExpression	"memset ( snmp_object -> snmp_errstr , 0 , sizeof ( snmp_object -> snmp_errstr ) )"		1901742	0					
ANR	1901777	Callee	memset		1901742	0					
ANR	1901778	Identifier	memset		1901742	0					
ANR	1901779	ArgumentList	snmp_object -> snmp_errstr		1901742	1					
ANR	1901780	Argument	snmp_object -> snmp_errstr		1901742	0					
ANR	1901781	PtrMemberAccess	snmp_object -> snmp_errstr		1901742	0					
ANR	1901782	Identifier	snmp_object		1901742	0					
ANR	1901783	Identifier	snmp_errstr		1901742	1					
ANR	1901784	Argument	0		1901742	1					
ANR	1901785	PrimaryExpression	0		1901742	0					
ANR	1901786	Argument	sizeof ( snmp_object -> snmp_errstr )		1901742	2					
ANR	1901787	SizeofExpression	sizeof ( snmp_object -> snmp_errstr )		1901742	0					
ANR	1901788	Sizeof	sizeof		1901742	0					
ANR	1901789	PtrMemberAccess	snmp_object -> snmp_errstr		1901742	1					
ANR	1901790	Identifier	snmp_object		1901742	0					
ANR	1901791	Identifier	snmp_errstr		1901742	1					
ANR	1901792	ElseStatement	else		1901742	0					
ANR	1901793	CompoundStatement		9:9:227:227	1901742	0					
ANR	1901794	ExpressionStatement	"va_start ( args , format )"	521:3:14406:14428	1901742	0	True				
ANR	1901795	CallExpression	"va_start ( args , format )"		1901742	0					
ANR	1901796	Callee	va_start		1901742	0					
ANR	1901797	Identifier	va_start		1901742	0					
ANR	1901798	ArgumentList	args		1901742	1					
ANR	1901799	Argument	args		1901742	0					
ANR	1901800	Identifier	args		1901742	0					
ANR	1901801	Argument	format		1901742	1					
ANR	1901802	Identifier	format		1901742	0					
ANR	1901803	ExpressionStatement	"vsnprintf ( snmp_object -> snmp_errstr , sizeof ( snmp_object -> snmp_errstr ) - 1 , format , args )"	522:3:14433:14520	1901742	1	True				
ANR	1901804	CallExpression	"vsnprintf ( snmp_object -> snmp_errstr , sizeof ( snmp_object -> snmp_errstr ) - 1 , format , args )"		1901742	0					
ANR	1901805	Callee	vsnprintf		1901742	0					
ANR	1901806	Identifier	vsnprintf		1901742	0					
ANR	1901807	ArgumentList	snmp_object -> snmp_errstr		1901742	1					
ANR	1901808	Argument	snmp_object -> snmp_errstr		1901742	0					
ANR	1901809	PtrMemberAccess	snmp_object -> snmp_errstr		1901742	0					
ANR	1901810	Identifier	snmp_object		1901742	0					
ANR	1901811	Identifier	snmp_errstr		1901742	1					
ANR	1901812	Argument	sizeof ( snmp_object -> snmp_errstr ) - 1		1901742	1					
ANR	1901813	AdditiveExpression	sizeof ( snmp_object -> snmp_errstr ) - 1		1901742	0		-			
ANR	1901814	SizeofExpression	sizeof ( snmp_object -> snmp_errstr )		1901742	0					
ANR	1901815	Sizeof	sizeof		1901742	0					
ANR	1901816	PtrMemberAccess	snmp_object -> snmp_errstr		1901742	1					
ANR	1901817	Identifier	snmp_object		1901742	0					
ANR	1901818	Identifier	snmp_errstr		1901742	1					
ANR	1901819	PrimaryExpression	1		1901742	1					
ANR	1901820	Argument	format		1901742	2					
ANR	1901821	Identifier	format		1901742	0					
ANR	1901822	Argument	args		1901742	3					
ANR	1901823	Identifier	args		1901742	0					
ANR	1901824	ExpressionStatement	va_end ( args )	523:3:14525:14537	1901742	2	True				
ANR	1901825	CallExpression	va_end ( args )		1901742	0					
ANR	1901826	Callee	va_end		1901742	0					
ANR	1901827	Identifier	va_end		1901742	0					
ANR	1901828	ArgumentList	args		1901742	1					
ANR	1901829	Argument	args		1901742	0					
ANR	1901830	Identifier	args		1901742	0					
ANR	1901831	ExpressionStatement	snmp_object -> snmp_errno = type	525:2:14545:14575	1901742	2	True				
ANR	1901832	AssignmentExpression	snmp_object -> snmp_errno = type		1901742	0		=			
ANR	1901833	PtrMemberAccess	snmp_object -> snmp_errno		1901742	0					
ANR	1901834	Identifier	snmp_object		1901742	0					
ANR	1901835	Identifier	snmp_errno		1901742	1					
ANR	1901836	Identifier	type		1901742	1					
ANR	1901837	IfStatement	if ( type == PHP_SNMP_ERRNO_NOERROR )		1901742	3					
ANR	1901838	Condition	type == PHP_SNMP_ERRNO_NOERROR	528:5:14586:14615	1901742	0	True				
ANR	1901839	EqualityExpression	type == PHP_SNMP_ERRNO_NOERROR		1901742	0		==			
ANR	1901840	Identifier	type		1901742	0					
ANR	1901841	Identifier	PHP_SNMP_ERRNO_NOERROR		1901742	1					
ANR	1901842	CompoundStatement		17:37:444:444	1901742	1					
ANR	1901843	ReturnStatement	return ;	529:2:14622:14628	1901742	0	True				
ANR	1901844	IfStatement	if ( object && ( snmp_object -> exceptions_enabled & type ) )		1901742	4					
ANR	1901845	Condition	object && ( snmp_object -> exceptions_enabled & type )	532:5:14639:14688	1901742	0	True				
ANR	1901846	AndExpression	object && ( snmp_object -> exceptions_enabled & type )		1901742	0		&&			
ANR	1901847	Identifier	object		1901742	0					
ANR	1901848	BitAndExpression	snmp_object -> exceptions_enabled & type		1901742	1		&			
ANR	1901849	PtrMemberAccess	snmp_object -> exceptions_enabled		1901742	0					
ANR	1901850	Identifier	snmp_object		1901742	0					
ANR	1901851	Identifier	exceptions_enabled		1901742	1					
ANR	1901852	Identifier	type		1901742	1					
ANR	1901853	CompoundStatement		21:57:517:517	1901742	1					
ANR	1901854	ExpressionStatement	"zend_throw_exception_ex ( php_snmp_exception_ce , type , snmp_object -> snmp_errstr )"	533:2:14695:14773	1901742	0	True				
ANR	1901855	CallExpression	"zend_throw_exception_ex ( php_snmp_exception_ce , type , snmp_object -> snmp_errstr )"		1901742	0					
ANR	1901856	Callee	zend_throw_exception_ex		1901742	0					
ANR	1901857	Identifier	zend_throw_exception_ex		1901742	0					
ANR	1901858	ArgumentList	php_snmp_exception_ce		1901742	1					
ANR	1901859	Argument	php_snmp_exception_ce		1901742	0					
ANR	1901860	Identifier	php_snmp_exception_ce		1901742	0					
ANR	1901861	Argument	type		1901742	1					
ANR	1901862	Identifier	type		1901742	0					
ANR	1901863	Argument	snmp_object -> snmp_errstr		1901742	2					
ANR	1901864	PtrMemberAccess	snmp_object -> snmp_errstr		1901742	0					
ANR	1901865	Identifier	snmp_object		1901742	0					
ANR	1901866	Identifier	snmp_errstr		1901742	1					
ANR	1901867	ElseStatement	else		1901742	0					
ANR	1901868	CompoundStatement		23:8:609:609	1901742	0					
ANR	1901869	ExpressionStatement	"va_start ( args , format )"	535:2:14787:14809	1901742	0	True				
ANR	1901870	CallExpression	"va_start ( args , format )"		1901742	0					
ANR	1901871	Callee	va_start		1901742	0					
ANR	1901872	Identifier	va_start		1901742	0					
ANR	1901873	ArgumentList	args		1901742	1					
ANR	1901874	Argument	args		1901742	0					
ANR	1901875	Identifier	args		1901742	0					
ANR	1901876	Argument	format		1901742	1					
ANR	1901877	Identifier	format		1901742	0					
ANR	1901878	ExpressionStatement	"php_verror ( docref , """" , E_WARNING , format , args )"	536:2:14813:14860	1901742	1	True				
ANR	1901879	CallExpression	"php_verror ( docref , """" , E_WARNING , format , args )"		1901742	0					
ANR	1901880	Callee	php_verror		1901742	0					
ANR	1901881	Identifier	php_verror		1901742	0					
ANR	1901882	ArgumentList	docref		1901742	1					
ANR	1901883	Argument	docref		1901742	0					
ANR	1901884	Identifier	docref		1901742	0					
ANR	1901885	Argument	""""""		1901742	1					
ANR	1901886	PrimaryExpression	""""""		1901742	0					
ANR	1901887	Argument	E_WARNING		1901742	2					
ANR	1901888	Identifier	E_WARNING		1901742	0					
ANR	1901889	Argument	format		1901742	3					
ANR	1901890	Identifier	format		1901742	0					
ANR	1901891	Argument	args		1901742	4					
ANR	1901892	Identifier	args		1901742	0					
ANR	1901893	ExpressionStatement	va_end ( args )	537:2:14864:14876	1901742	2	True				
ANR	1901894	CallExpression	va_end ( args )		1901742	0					
ANR	1901895	Callee	va_end		1901742	0					
ANR	1901896	Identifier	va_end		1901742	0					
ANR	1901897	ArgumentList	args		1901742	1					
ANR	1901898	Argument	args		1901742	0					
ANR	1901899	Identifier	args		1901742	0					
ANR	1901900	ReturnType	static void		1901742	1					
ANR	1901901	Identifier	php_snmp_error		1901742	2					
ANR	1901902	ParameterList	"zval * object , const char * docref , int type , const char * format"		1901742	3					
ANR	1901903	Parameter	zval * object	511:27:14104:14115	1901742	0	True				
ANR	1901904	ParameterType	zval *		1901742	0					
ANR	1901905	Identifier	object		1901742	1					
ANR	1901906	Parameter	const char * docref	511:41:14118:14135	1901742	1	True				
ANR	1901907	ParameterType	const char *		1901742	0					
ANR	1901908	Identifier	docref		1901742	1					
ANR	1901909	Parameter	int type	511:61:14138:14145	1901742	2	True				
ANR	1901910	ParameterType	int		1901742	0					
ANR	1901911	Identifier	type		1901742	1					
ANR	1901912	Parameter	const char * format	511:71:14148:14165	1901742	3	True				
ANR	1901913	ParameterType	const char *		1901742	0					
ANR	1901914	Identifier	format		1901742	1					
ANR	1901915	CFGEntryNode	ENTRY		1901742		True				
ANR	1901916	CFGExitNode	EXIT		1901742		True				
ANR	1901917	Symbol	snmp_object -> exceptions_enabled		1901742						
ANR	1901918	Symbol	snmp_object		1901742						
ANR	1901919	Symbol	NULL		1901742						
ANR	1901920	Symbol	snmp_object -> snmp_errstr		1901742						
ANR	1901921	Symbol	php_snmp_exception_ce		1901742						
ANR	1901922	Symbol	format		1901742						
ANR	1901923	Symbol	type		1901742						
ANR	1901924	Symbol	PHP_SNMP_ERRNO_NOERROR		1901742						
ANR	1901925	Symbol	args		1901742						
ANR	1901926	Symbol	E_WARNING		1901742						
ANR	1901927	Symbol	snmp_object -> snmp_errno		1901742						
ANR	1901928	Symbol	docref		1901742						
ANR	1901929	Symbol	* snmp_object		1901742						
ANR	1901930	Symbol	object		1901742						
ANR	1901931	Symbol	Z_SNMP_P		1901742						
ANR	1901932	Function	php_snmp_getvalue	548:0:14958:18964							
ANR	1901933	FunctionDef	"php_snmp_getvalue (struct variable_list * vars , zval * snmpval , int valueretrieval)"		1901932	0					
ANR	1901934	CompoundStatement		549:0:15051:18964	1901932	0					
ANR	1901935	IdentifierDeclStatement	zval val ;	550:1:15054:15062	1901932	0	True				
ANR	1901936	IdentifierDecl	val		1901932	0					
ANR	1901937	IdentifierDeclType	zval		1901932	0					
ANR	1901938	Identifier	val		1901932	1					
ANR	1901939	IdentifierDeclStatement	char sbuf [ 512 ] ;	551:1:15065:15079	1901932	1	True				
ANR	1901940	IdentifierDecl	sbuf [ 512 ]		1901932	0					
ANR	1901941	IdentifierDeclType	char [ 512 ]		1901932	0					
ANR	1901942	Identifier	sbuf		1901932	1					
ANR	1901943	PrimaryExpression	512		1901932	2					
ANR	1901944	IdentifierDeclStatement	char * buf = & ( sbuf [ 0 ] ) ;	552:1:15082:15104	1901932	2	True				
ANR	1901945	IdentifierDecl	* buf = & ( sbuf [ 0 ] )		1901932	0					
ANR	1901946	IdentifierDeclType	char *		1901932	0					
ANR	1901947	Identifier	buf		1901932	1					
ANR	1901948	AssignmentExpression	* buf = & ( sbuf [ 0 ] )		1901932	2		=			
ANR	1901949	Identifier	buf		1901932	0					
ANR	1901950	UnaryOperationExpression	& ( sbuf [ 0 ] )		1901932	1					
ANR	1901951	UnaryOperator	&		1901932	0					
ANR	1901952	ArrayIndexing	sbuf [ 0 ]		1901932	1					
ANR	1901953	Identifier	sbuf		1901932	0					
ANR	1901954	PrimaryExpression	0		1901932	1					
ANR	1901955	IdentifierDeclStatement	char * dbuf = ( char * ) NULL ;	553:1:15107:15132	1901932	3	True				
ANR	1901956	IdentifierDecl	* dbuf = ( char * ) NULL		1901932	0					
ANR	1901957	IdentifierDeclType	char *		1901932	0					
ANR	1901958	Identifier	dbuf		1901932	1					
ANR	1901959	AssignmentExpression	* dbuf = ( char * ) NULL		1901932	2		=			
ANR	1901960	Identifier	dbuf		1901932	0					
ANR	1901961	CastExpression	( char * ) NULL		1901932	1					
ANR	1901962	CastTarget	char *		1901932	0					
ANR	1901963	Identifier	NULL		1901932	1					
ANR	1901964	IdentifierDeclStatement	int buflen = sizeof ( sbuf ) - 1 ;	554:1:15135:15164	1901932	4	True				
ANR	1901965	IdentifierDecl	buflen = sizeof ( sbuf ) - 1		1901932	0					
ANR	1901966	IdentifierDeclType	int		1901932	0					
ANR	1901967	Identifier	buflen		1901932	1					
ANR	1901968	AssignmentExpression	buflen = sizeof ( sbuf ) - 1		1901932	2		=			
ANR	1901969	Identifier	buflen		1901932	0					
ANR	1901970	AdditiveExpression	sizeof ( sbuf ) - 1		1901932	1		-			
ANR	1901971	SizeofExpression	sizeof ( sbuf )		1901932	0					
ANR	1901972	Sizeof	sizeof		1901932	0					
ANR	1901973	SizeofOperand	sbuf		1901932	1					
ANR	1901974	PrimaryExpression	1		1901932	1					
ANR	1901975	IdentifierDeclStatement	int val_len = vars -> val_len ;	555:1:15167:15194	1901932	5	True				
ANR	1901976	IdentifierDecl	val_len = vars -> val_len		1901932	0					
ANR	1901977	IdentifierDeclType	int		1901932	0					
ANR	1901978	Identifier	val_len		1901932	1					
ANR	1901979	AssignmentExpression	val_len = vars -> val_len		1901932	2		=			
ANR	1901980	Identifier	val_len		1901932	0					
ANR	1901981	PtrMemberAccess	vars -> val_len		1901932	1					
ANR	1901982	Identifier	vars		1901932	0					
ANR	1901983	Identifier	val_len		1901932	1					
ANR	1901984	WhileStatement	while ( ( valueretrieval & SNMP_VALUE_PLAIN ) == 0 )		1901932	6					
ANR	1901985	Condition	( valueretrieval & SNMP_VALUE_PLAIN ) == 0	562:8:15412:15451	1901932	0	True				
ANR	1901986	EqualityExpression	( valueretrieval & SNMP_VALUE_PLAIN ) == 0		1901932	0		==			
ANR	1901987	BitAndExpression	valueretrieval & SNMP_VALUE_PLAIN		1901932	0		&			
ANR	1901988	Identifier	valueretrieval		1901932	0					
ANR	1901989	Identifier	SNMP_VALUE_PLAIN		1901932	1					
ANR	1901990	PrimaryExpression	0		1901932	1					
ANR	1901991	CompoundStatement		14:50:402:402	1901932	1					
ANR	1901992	ExpressionStatement	* buf = '\\0'	563:2:15458:15469	1901932	0	True				
ANR	1901993	AssignmentExpression	* buf = '\\0'		1901932	0		=			
ANR	1901994	UnaryOperationExpression	* buf		1901932	0					
ANR	1901995	UnaryOperator	*		1901932	0					
ANR	1901996	Identifier	buf		1901932	1					
ANR	1901997	PrimaryExpression	'\\0'		1901932	1					
ANR	1901998	IfStatement	"if ( snprint_value ( buf , buflen , vars -> name , vars -> name_length , vars ) == - 1 )"		1901932	1					
ANR	1901999	Condition	"snprint_value ( buf , buflen , vars -> name , vars -> name_length , vars ) == - 1"	564:6:15477:15545	1901932	0	True				
ANR	1902000	EqualityExpression	"snprint_value ( buf , buflen , vars -> name , vars -> name_length , vars ) == - 1"		1901932	0		==			
ANR	1902001	CallExpression	"snprint_value ( buf , buflen , vars -> name , vars -> name_length , vars )"		1901932	0					
ANR	1902002	Callee	snprint_value		1901932	0					
ANR	1902003	Identifier	snprint_value		1901932	0					
ANR	1902004	ArgumentList	buf		1901932	1					
ANR	1902005	Argument	buf		1901932	0					
ANR	1902006	Identifier	buf		1901932	0					
ANR	1902007	Argument	buflen		1901932	1					
ANR	1902008	Identifier	buflen		1901932	0					
ANR	1902009	Argument	vars -> name		1901932	2					
ANR	1902010	PtrMemberAccess	vars -> name		1901932	0					
ANR	1902011	Identifier	vars		1901932	0					
ANR	1902012	Identifier	name		1901932	1					
ANR	1902013	Argument	vars -> name_length		1901932	3					
ANR	1902014	PtrMemberAccess	vars -> name_length		1901932	0					
ANR	1902015	Identifier	vars		1901932	0					
ANR	1902016	Identifier	name_length		1901932	1					
ANR	1902017	Argument	vars		1901932	4					
ANR	1902018	Identifier	vars		1901932	0					
ANR	1902019	UnaryOperationExpression	- 1		1901932	1					
ANR	1902020	UnaryOperator	-		1901932	0					
ANR	1902021	PrimaryExpression	1		1901932	1					
ANR	1902022	CompoundStatement		16:77:496:496	1901932	1					
ANR	1902023	IfStatement	if ( val_len > 512 * 1024 )		1901932	0					
ANR	1902024	Condition	val_len > 512 * 1024	565:7:15557:15574	1901932	0	True				
ANR	1902025	RelationalExpression	val_len > 512 * 1024		1901932	0		>			
ANR	1902026	Identifier	val_len		1901932	0					
ANR	1902027	MultiplicativeExpression	512 * 1024		1901932	1		*			
ANR	1902028	PrimaryExpression	512		1901932	0					
ANR	1902029	PrimaryExpression	1024		1901932	1					
ANR	1902030	CompoundStatement		17:27:525:525	1901932	1					
ANR	1902031	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""snprint_value() asks for a buffer more than 512k, Net-SNMP bug?"" )"	566:4:15583:15683	1901932	0	True				
ANR	1902032	CallExpression	"php_error_docref ( NULL , E_WARNING , ""snprint_value() asks for a buffer more than 512k, Net-SNMP bug?"" )"		1901932	0					
ANR	1902033	Callee	php_error_docref		1901932	0					
ANR	1902034	Identifier	php_error_docref		1901932	0					
ANR	1902035	ArgumentList	NULL		1901932	1					
ANR	1902036	Argument	NULL		1901932	0					
ANR	1902037	Identifier	NULL		1901932	0					
ANR	1902038	Argument	E_WARNING		1901932	1					
ANR	1902039	Identifier	E_WARNING		1901932	0					
ANR	1902040	Argument	"""snprint_value() asks for a buffer more than 512k, Net-SNMP bug?"""		1901932	2					
ANR	1902041	PrimaryExpression	"""snprint_value() asks for a buffer more than 512k, Net-SNMP bug?"""		1901932	0					
ANR	1902042	BreakStatement	break ;	567:4:15689:15694	1901932	1	True				
ANR	1902043	ExpressionStatement	val_len *= 2	570:3:15771:15783	1901932	1	True				
ANR	1902044	AssignmentExpression	val_len *= 2		1901932	0		*=			
ANR	1902045	Identifier	val_len		1901932	0					
ANR	1902046	PrimaryExpression	2		1901932	1					
ANR	1902047	ElseStatement	else		1901932	0					
ANR	1902048	CompoundStatement		23:9:742:742	1901932	0					
ANR	1902049	BreakStatement	break ;	572:3:15799:15804	1901932	0	True				
ANR	1902050	IfStatement	if ( buf == dbuf )		1901932	2					
ANR	1902051	Condition	buf == dbuf	575:6:15817:15827	1901932	0	True				
ANR	1902052	EqualityExpression	buf == dbuf		1901932	0		==			
ANR	1902053	Identifier	buf		1901932	0					
ANR	1902054	Identifier	dbuf		1901932	1					
ANR	1902055	CompoundStatement		27:19:778:778	1901932	1					
ANR	1902056	ExpressionStatement	"dbuf = ( char * ) erealloc ( dbuf , val_len + 1 )"	576:3:15835:15877	1901932	0	True				
ANR	1902057	AssignmentExpression	"dbuf = ( char * ) erealloc ( dbuf , val_len + 1 )"		1901932	0		=			
ANR	1902058	Identifier	dbuf		1901932	0					
ANR	1902059	CastExpression	"( char * ) erealloc ( dbuf , val_len + 1 )"		1901932	1					
ANR	1902060	CastTarget	char *		1901932	0					
ANR	1902061	CallExpression	"erealloc ( dbuf , val_len + 1 )"		1901932	1					
ANR	1902062	Callee	erealloc		1901932	0					
ANR	1902063	Identifier	erealloc		1901932	0					
ANR	1902064	ArgumentList	dbuf		1901932	1					
ANR	1902065	Argument	dbuf		1901932	0					
ANR	1902066	Identifier	dbuf		1901932	0					
ANR	1902067	Argument	val_len + 1		1901932	1					
ANR	1902068	AdditiveExpression	val_len + 1		1901932	0		+			
ANR	1902069	Identifier	val_len		1901932	0					
ANR	1902070	PrimaryExpression	1		1901932	1					
ANR	1902071	ElseStatement	else		1901932	0					
ANR	1902072	CompoundStatement		29:9:836:836	1901932	0					
ANR	1902073	ExpressionStatement	dbuf = ( char * ) emalloc ( val_len + 1 )	578:3:15893:15928	1901932	0	True				
ANR	1902074	AssignmentExpression	dbuf = ( char * ) emalloc ( val_len + 1 )		1901932	0		=			
ANR	1902075	Identifier	dbuf		1901932	0					
ANR	1902076	CastExpression	( char * ) emalloc ( val_len + 1 )		1901932	1					
ANR	1902077	CastTarget	char *		1901932	0					
ANR	1902078	CallExpression	emalloc ( val_len + 1 )		1901932	1					
ANR	1902079	Callee	emalloc		1901932	0					
ANR	1902080	Identifier	emalloc		1901932	0					
ANR	1902081	ArgumentList	val_len + 1		1901932	1					
ANR	1902082	Argument	val_len + 1		1901932	0					
ANR	1902083	AdditiveExpression	val_len + 1		1901932	0		+			
ANR	1902084	Identifier	val_len		1901932	0					
ANR	1902085	PrimaryExpression	1		1901932	1					
ANR	1902086	IfStatement	if ( ! dbuf )		1901932	3					
ANR	1902087	Condition	! dbuf	581:6:15941:15945	1901932	0	True				
ANR	1902088	UnaryOperationExpression	! dbuf		1901932	0					
ANR	1902089	UnaryOperator	!		1901932	0					
ANR	1902090	Identifier	dbuf		1901932	1					
ANR	1902091	CompoundStatement		33:13:896:896	1901932	1					
ANR	1902092	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed: %s, fallback to static buffer"" , strerror ( errno ) )"	582:3:15953:16054	1901932	0	True				
ANR	1902093	CallExpression	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed: %s, fallback to static buffer"" , strerror ( errno ) )"		1901932	0					
ANR	1902094	Callee	php_error_docref		1901932	0					
ANR	1902095	Identifier	php_error_docref		1901932	0					
ANR	1902096	ArgumentList	NULL		1901932	1					
ANR	1902097	Argument	NULL		1901932	0					
ANR	1902098	Identifier	NULL		1901932	0					
ANR	1902099	Argument	E_WARNING		1901932	1					
ANR	1902100	Identifier	E_WARNING		1901932	0					
ANR	1902101	Argument	"""emalloc() failed: %s, fallback to static buffer"""		1901932	2					
ANR	1902102	PrimaryExpression	"""emalloc() failed: %s, fallback to static buffer"""		1901932	0					
ANR	1902103	Argument	strerror ( errno )		1901932	3					
ANR	1902104	CallExpression	strerror ( errno )		1901932	0					
ANR	1902105	Callee	strerror		1901932	0					
ANR	1902106	Identifier	strerror		1901932	0					
ANR	1902107	ArgumentList	errno		1901932	1					
ANR	1902108	Argument	errno		1901932	0					
ANR	1902109	Identifier	errno		1901932	0					
ANR	1902110	ExpressionStatement	buf = & ( sbuf [ 0 ] )	583:3:16059:16075	1901932	1	True				
ANR	1902111	AssignmentExpression	buf = & ( sbuf [ 0 ] )		1901932	0		=			
ANR	1902112	Identifier	buf		1901932	0					
ANR	1902113	UnaryOperationExpression	& ( sbuf [ 0 ] )		1901932	1					
ANR	1902114	UnaryOperator	&		1901932	0					
ANR	1902115	ArrayIndexing	sbuf [ 0 ]		1901932	1					
ANR	1902116	Identifier	sbuf		1901932	0					
ANR	1902117	PrimaryExpression	0		1901932	1					
ANR	1902118	ExpressionStatement	buflen = sizeof ( sbuf ) - 1	584:3:16080:16105	1901932	2	True				
ANR	1902119	AssignmentExpression	buflen = sizeof ( sbuf ) - 1		1901932	0		=			
ANR	1902120	Identifier	buflen		1901932	0					
ANR	1902121	AdditiveExpression	sizeof ( sbuf ) - 1		1901932	1		-			
ANR	1902122	SizeofExpression	sizeof ( sbuf )		1901932	0					
ANR	1902123	Sizeof	sizeof		1901932	0					
ANR	1902124	SizeofOperand	sbuf		1901932	1					
ANR	1902125	PrimaryExpression	1		1901932	1					
ANR	1902126	BreakStatement	break ;	585:3:16110:16115	1901932	3	True				
ANR	1902127	ExpressionStatement	buf = dbuf	588:2:16124:16134	1901932	4	True				
ANR	1902128	AssignmentExpression	buf = dbuf		1901932	0		=			
ANR	1902129	Identifier	buf		1901932	0					
ANR	1902130	Identifier	dbuf		1901932	1					
ANR	1902131	ExpressionStatement	buflen = val_len	589:2:16138:16154	1901932	5	True				
ANR	1902132	AssignmentExpression	buflen = val_len		1901932	0		=			
ANR	1902133	Identifier	buflen		1901932	0					
ANR	1902134	Identifier	val_len		1901932	1					
ANR	1902135	IfStatement	if ( ( valueretrieval & SNMP_VALUE_PLAIN ) && val_len > buflen )		1901932	7					
ANR	1902136	Condition	( valueretrieval & SNMP_VALUE_PLAIN ) && val_len > buflen	592:4:16164:16218	1901932	0	True				
ANR	1902137	AndExpression	( valueretrieval & SNMP_VALUE_PLAIN ) && val_len > buflen		1901932	0		&&			
ANR	1902138	BitAndExpression	valueretrieval & SNMP_VALUE_PLAIN		1901932	0		&			
ANR	1902139	Identifier	valueretrieval		1901932	0					
ANR	1902140	Identifier	SNMP_VALUE_PLAIN		1901932	1					
ANR	1902141	RelationalExpression	val_len > buflen		1901932	1		>			
ANR	1902142	Identifier	val_len		1901932	0					
ANR	1902143	Identifier	buflen		1901932	1					
ANR	1902144	CompoundStatement		44:60:1168:1168	1901932	1					
ANR	1902145	IfStatement	if ( ( dbuf = ( char * ) emalloc ( val_len + 1 ) ) )		1901932	0					
ANR	1902146	Condition	dbuf = ( char * ) emalloc ( val_len + 1 )	593:6:16228:16264	1901932	0	True				
ANR	1902147	AssignmentExpression	dbuf = ( char * ) emalloc ( val_len + 1 )		1901932	0		=			
ANR	1902148	Identifier	dbuf		1901932	0					
ANR	1902149	CastExpression	( char * ) emalloc ( val_len + 1 )		1901932	1					
ANR	1902150	CastTarget	char *		1901932	0					
ANR	1902151	CallExpression	emalloc ( val_len + 1 )		1901932	1					
ANR	1902152	Callee	emalloc		1901932	0					
ANR	1902153	Identifier	emalloc		1901932	0					
ANR	1902154	ArgumentList	val_len + 1		1901932	1					
ANR	1902155	Argument	val_len + 1		1901932	0					
ANR	1902156	AdditiveExpression	val_len + 1		1901932	0		+			
ANR	1902157	Identifier	val_len		1901932	0					
ANR	1902158	PrimaryExpression	1		1901932	1					
ANR	1902159	CompoundStatement		45:45:1215:1215	1901932	1					
ANR	1902160	ExpressionStatement	buf = dbuf	594:3:16272:16282	1901932	0	True				
ANR	1902161	AssignmentExpression	buf = dbuf		1901932	0		=			
ANR	1902162	Identifier	buf		1901932	0					
ANR	1902163	Identifier	dbuf		1901932	1					
ANR	1902164	ExpressionStatement	buflen = val_len	595:3:16287:16303	1901932	1	True				
ANR	1902165	AssignmentExpression	buflen = val_len		1901932	0		=			
ANR	1902166	Identifier	buflen		1901932	0					
ANR	1902167	Identifier	val_len		1901932	1					
ANR	1902168	ElseStatement	else		1901932	0					
ANR	1902169	CompoundStatement		48:9:1262:1262	1901932	0					
ANR	1902170	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed: %s, fallback to static buffer"" , strerror ( errno ) )"	597:3:16319:16420	1901932	0	True				
ANR	1902171	CallExpression	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed: %s, fallback to static buffer"" , strerror ( errno ) )"		1901932	0					
ANR	1902172	Callee	php_error_docref		1901932	0					
ANR	1902173	Identifier	php_error_docref		1901932	0					
ANR	1902174	ArgumentList	NULL		1901932	1					
ANR	1902175	Argument	NULL		1901932	0					
ANR	1902176	Identifier	NULL		1901932	0					
ANR	1902177	Argument	E_WARNING		1901932	1					
ANR	1902178	Identifier	E_WARNING		1901932	0					
ANR	1902179	Argument	"""emalloc() failed: %s, fallback to static buffer"""		1901932	2					
ANR	1902180	PrimaryExpression	"""emalloc() failed: %s, fallback to static buffer"""		1901932	0					
ANR	1902181	Argument	strerror ( errno )		1901932	3					
ANR	1902182	CallExpression	strerror ( errno )		1901932	0					
ANR	1902183	Callee	strerror		1901932	0					
ANR	1902184	Identifier	strerror		1901932	0					
ANR	1902185	ArgumentList	errno		1901932	1					
ANR	1902186	Argument	errno		1901932	0					
ANR	1902187	Identifier	errno		1901932	0					
ANR	1902188	IfStatement	if ( valueretrieval & SNMP_VALUE_PLAIN )		1901932	8					
ANR	1902189	Condition	valueretrieval & SNMP_VALUE_PLAIN	601:5:16435:16467	1901932	0	True				
ANR	1902190	BitAndExpression	valueretrieval & SNMP_VALUE_PLAIN		1901932	0		&			
ANR	1902191	Identifier	valueretrieval		1901932	0					
ANR	1902192	Identifier	SNMP_VALUE_PLAIN		1901932	1					
ANR	1902193	CompoundStatement		53:40:1418:1418	1901932	1					
ANR	1902194	ExpressionStatement	* buf = 0	602:2:16474:16482	1901932	0	True				
ANR	1902195	AssignmentExpression	* buf = 0		1901932	0		=			
ANR	1902196	UnaryOperationExpression	* buf		1901932	0					
ANR	1902197	UnaryOperator	*		1901932	0					
ANR	1902198	Identifier	buf		1901932	1					
ANR	1902199	PrimaryExpression	0		1901932	1					
ANR	1902200	SwitchStatement	switch ( vars -> type )		1901932	1					
ANR	1902201	Condition	vars -> type	603:10:16494:16503	1901932	0	True				
ANR	1902202	PtrMemberAccess	vars -> type		1901932	0					
ANR	1902203	Identifier	vars		1901932	0					
ANR	1902204	Identifier	type		1901932	1					
ANR	1902205	CompoundStatement		55:22:1454:1454	1901932	1					
ANR	1902206	Label	case ASN_BIT_STR :	604:2:16510:16526	1901932	0	True				
ANR	1902207	Identifier	ASN_BIT_STR		1901932	0					
ANR	1902208	ExpressionStatement	"ZVAL_STRINGL ( & val , ( char * ) vars -> val . bitstring , vars -> val_len )"	605:3:16551:16613	1901932	1	True				
ANR	1902209	CallExpression	"ZVAL_STRINGL ( & val , ( char * ) vars -> val . bitstring , vars -> val_len )"		1901932	0					
ANR	1902210	Callee	ZVAL_STRINGL		1901932	0					
ANR	1902211	Identifier	ZVAL_STRINGL		1901932	0					
ANR	1902212	ArgumentList	& val		1901932	1					
ANR	1902213	Argument	& val		1901932	0					
ANR	1902214	UnaryOperationExpression	& val		1901932	0					
ANR	1902215	UnaryOperator	&		1901932	0					
ANR	1902216	Identifier	val		1901932	1					
ANR	1902217	Argument	( char * ) vars -> val . bitstring		1901932	1					
ANR	1902218	CastExpression	( char * ) vars -> val . bitstring		1901932	0					
ANR	1902219	CastTarget	char *		1901932	0					
ANR	1902220	MemberAccess	vars -> val . bitstring		1901932	1					
ANR	1902221	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902222	Identifier	vars		1901932	0					
ANR	1902223	Identifier	val		1901932	1					
ANR	1902224	Identifier	bitstring		1901932	1					
ANR	1902225	Argument	vars -> val_len		1901932	2					
ANR	1902226	PtrMemberAccess	vars -> val_len		1901932	0					
ANR	1902227	Identifier	vars		1901932	0					
ANR	1902228	Identifier	val_len		1901932	1					
ANR	1902229	BreakStatement	break ;	606:3:16618:16623	1901932	2	True				
ANR	1902230	Label	case ASN_OCTET_STR :	608:2:16628:16646	1901932	3	True				
ANR	1902231	Identifier	ASN_OCTET_STR		1901932	0					
ANR	1902232	Label	case ASN_OPAQUE :	609:2:16670:16685	1901932	4	True				
ANR	1902233	Identifier	ASN_OPAQUE		1901932	0					
ANR	1902234	ExpressionStatement	"ZVAL_STRINGL ( & val , ( char * ) vars -> val . string , vars -> val_len )"	610:3:16715:16774	1901932	5	True				
ANR	1902235	CallExpression	"ZVAL_STRINGL ( & val , ( char * ) vars -> val . string , vars -> val_len )"		1901932	0					
ANR	1902236	Callee	ZVAL_STRINGL		1901932	0					
ANR	1902237	Identifier	ZVAL_STRINGL		1901932	0					
ANR	1902238	ArgumentList	& val		1901932	1					
ANR	1902239	Argument	& val		1901932	0					
ANR	1902240	UnaryOperationExpression	& val		1901932	0					
ANR	1902241	UnaryOperator	&		1901932	0					
ANR	1902242	Identifier	val		1901932	1					
ANR	1902243	Argument	( char * ) vars -> val . string		1901932	1					
ANR	1902244	CastExpression	( char * ) vars -> val . string		1901932	0					
ANR	1902245	CastTarget	char *		1901932	0					
ANR	1902246	MemberAccess	vars -> val . string		1901932	1					
ANR	1902247	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902248	Identifier	vars		1901932	0					
ANR	1902249	Identifier	val		1901932	1					
ANR	1902250	Identifier	string		1901932	1					
ANR	1902251	Argument	vars -> val_len		1901932	2					
ANR	1902252	PtrMemberAccess	vars -> val_len		1901932	0					
ANR	1902253	Identifier	vars		1901932	0					
ANR	1902254	Identifier	val_len		1901932	1					
ANR	1902255	BreakStatement	break ;	611:3:16779:16784	1901932	6	True				
ANR	1902256	Label	case ASN_NULL :	613:2:16789:16802	1901932	7	True				
ANR	1902257	Identifier	ASN_NULL		1901932	0					
ANR	1902258	ExpressionStatement	ZVAL_NULL ( & val )	614:3:16828:16843	1901932	8	True				
ANR	1902259	CallExpression	ZVAL_NULL ( & val )		1901932	0					
ANR	1902260	Callee	ZVAL_NULL		1901932	0					
ANR	1902261	Identifier	ZVAL_NULL		1901932	0					
ANR	1902262	ArgumentList	& val		1901932	1					
ANR	1902263	Argument	& val		1901932	0					
ANR	1902264	UnaryOperationExpression	& val		1901932	0					
ANR	1902265	UnaryOperator	&		1901932	0					
ANR	1902266	Identifier	val		1901932	1					
ANR	1902267	BreakStatement	break ;	615:3:16848:16853	1901932	9	True				
ANR	1902268	Label	case ASN_OBJECT_ID :	617:2:16858:16876	1901932	10	True				
ANR	1902269	Identifier	ASN_OBJECT_ID		1901932	0					
ANR	1902270	ExpressionStatement	"snprint_objid ( buf , buflen , vars -> val . objid , vars -> val_len / sizeof ( oid ) )"	618:3:16901:16973	1901932	11	True				
ANR	1902271	CallExpression	"snprint_objid ( buf , buflen , vars -> val . objid , vars -> val_len / sizeof ( oid ) )"		1901932	0					
ANR	1902272	Callee	snprint_objid		1901932	0					
ANR	1902273	Identifier	snprint_objid		1901932	0					
ANR	1902274	ArgumentList	buf		1901932	1					
ANR	1902275	Argument	buf		1901932	0					
ANR	1902276	Identifier	buf		1901932	0					
ANR	1902277	Argument	buflen		1901932	1					
ANR	1902278	Identifier	buflen		1901932	0					
ANR	1902279	Argument	vars -> val . objid		1901932	2					
ANR	1902280	MemberAccess	vars -> val . objid		1901932	0					
ANR	1902281	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902282	Identifier	vars		1901932	0					
ANR	1902283	Identifier	val		1901932	1					
ANR	1902284	Identifier	objid		1901932	1					
ANR	1902285	Argument	vars -> val_len / sizeof ( oid )		1901932	3					
ANR	1902286	MultiplicativeExpression	vars -> val_len / sizeof ( oid )		1901932	0		/			
ANR	1902287	PtrMemberAccess	vars -> val_len		1901932	0					
ANR	1902288	Identifier	vars		1901932	0					
ANR	1902289	Identifier	val_len		1901932	1					
ANR	1902290	SizeofExpression	sizeof ( oid )		1901932	1					
ANR	1902291	Sizeof	sizeof		1901932	0					
ANR	1902292	SizeofOperand	oid		1901932	1					
ANR	1902293	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	619:3:16978:17000	1901932	12	True				
ANR	1902294	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902295	Callee	ZVAL_STRING		1901932	0					
ANR	1902296	Identifier	ZVAL_STRING		1901932	0					
ANR	1902297	ArgumentList	& val		1901932	1					
ANR	1902298	Argument	& val		1901932	0					
ANR	1902299	UnaryOperationExpression	& val		1901932	0					
ANR	1902300	UnaryOperator	&		1901932	0					
ANR	1902301	Identifier	val		1901932	1					
ANR	1902302	Argument	buf		1901932	1					
ANR	1902303	Identifier	buf		1901932	0					
ANR	1902304	BreakStatement	break ;	620:3:17005:17010	1901932	13	True				
ANR	1902305	Label	case ASN_IPADDRESS :	622:2:17015:17033	1901932	14	True				
ANR	1902306	Identifier	ASN_IPADDRESS		1901932	0					
ANR	1902307	ExpressionStatement	"snprintf ( buf , buflen , ""%d.%d.%d.%d"" , ( vars -> val . string ) [ 0 ] , ( vars -> val . string ) [ 1 ] , ( vars -> val . string ) [ 2 ] , ( vars -> val . string ) [ 3 ] )"	623:3:17063:17201	1901932	15	True				
ANR	1902308	CallExpression	"snprintf ( buf , buflen , ""%d.%d.%d.%d"" , ( vars -> val . string ) [ 0 ] , ( vars -> val . string ) [ 1 ] , ( vars -> val . string ) [ 2 ] , ( vars -> val . string ) [ 3 ] )"		1901932	0					
ANR	1902309	Callee	snprintf		1901932	0					
ANR	1902310	Identifier	snprintf		1901932	0					
ANR	1902311	ArgumentList	buf		1901932	1					
ANR	1902312	Argument	buf		1901932	0					
ANR	1902313	Identifier	buf		1901932	0					
ANR	1902314	Argument	buflen		1901932	1					
ANR	1902315	Identifier	buflen		1901932	0					
ANR	1902316	Argument	"""%d.%d.%d.%d"""		1901932	2					
ANR	1902317	PrimaryExpression	"""%d.%d.%d.%d"""		1901932	0					
ANR	1902318	Argument	( vars -> val . string ) [ 0 ]		1901932	3					
ANR	1902319	ArrayIndexing	( vars -> val . string ) [ 0 ]		1901932	0					
ANR	1902320	MemberAccess	vars -> val . string		1901932	0					
ANR	1902321	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902322	Identifier	vars		1901932	0					
ANR	1902323	Identifier	val		1901932	1					
ANR	1902324	Identifier	string		1901932	1					
ANR	1902325	PrimaryExpression	0		1901932	1					
ANR	1902326	Argument	( vars -> val . string ) [ 1 ]		1901932	4					
ANR	1902327	ArrayIndexing	( vars -> val . string ) [ 1 ]		1901932	0					
ANR	1902328	MemberAccess	vars -> val . string		1901932	0					
ANR	1902329	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902330	Identifier	vars		1901932	0					
ANR	1902331	Identifier	val		1901932	1					
ANR	1902332	Identifier	string		1901932	1					
ANR	1902333	PrimaryExpression	1		1901932	1					
ANR	1902334	Argument	( vars -> val . string ) [ 2 ]		1901932	5					
ANR	1902335	ArrayIndexing	( vars -> val . string ) [ 2 ]		1901932	0					
ANR	1902336	MemberAccess	vars -> val . string		1901932	0					
ANR	1902337	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902338	Identifier	vars		1901932	0					
ANR	1902339	Identifier	val		1901932	1					
ANR	1902340	Identifier	string		1901932	1					
ANR	1902341	PrimaryExpression	2		1901932	1					
ANR	1902342	Argument	( vars -> val . string ) [ 3 ]		1901932	6					
ANR	1902343	ArrayIndexing	( vars -> val . string ) [ 3 ]		1901932	0					
ANR	1902344	MemberAccess	vars -> val . string		1901932	0					
ANR	1902345	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902346	Identifier	vars		1901932	0					
ANR	1902347	Identifier	val		1901932	1					
ANR	1902348	Identifier	string		1901932	1					
ANR	1902349	PrimaryExpression	3		1901932	1					
ANR	1902350	ExpressionStatement	buf [ buflen ] = 0	626:3:17206:17219	1901932	16	True				
ANR	1902351	AssignmentExpression	buf [ buflen ] = 0		1901932	0		=			
ANR	1902352	ArrayIndexing	buf [ buflen ]		1901932	0					
ANR	1902353	Identifier	buf		1901932	0					
ANR	1902354	Identifier	buflen		1901932	1					
ANR	1902355	PrimaryExpression	0		1901932	1					
ANR	1902356	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	627:3:17224:17246	1901932	17	True				
ANR	1902357	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902358	Callee	ZVAL_STRING		1901932	0					
ANR	1902359	Identifier	ZVAL_STRING		1901932	0					
ANR	1902360	ArgumentList	& val		1901932	1					
ANR	1902361	Argument	& val		1901932	0					
ANR	1902362	UnaryOperationExpression	& val		1901932	0					
ANR	1902363	UnaryOperator	&		1901932	0					
ANR	1902364	Identifier	val		1901932	1					
ANR	1902365	Argument	buf		1901932	1					
ANR	1902366	Identifier	buf		1901932	0					
ANR	1902367	BreakStatement	break ;	628:3:17251:17256	1901932	18	True				
ANR	1902368	Label	case ASN_COUNTER :	630:2:17261:17277	1901932	19	True				
ANR	1902369	Identifier	ASN_COUNTER		1901932	0					
ANR	1902370	Label	case ASN_GAUGE :	631:2:17306:17320	1901932	20	True				
ANR	1902371	Identifier	ASN_GAUGE		1901932	0					
ANR	1902372	Label	case ASN_TIMETICKS :	633:2:17396:17414	1901932	21	True				
ANR	1902373	Identifier	ASN_TIMETICKS		1901932	0					
ANR	1902374	Label	case ASN_UINTEGER :	634:2:17443:17460	1901932	22	True				
ANR	1902375	Identifier	ASN_UINTEGER		1901932	0					
ANR	1902376	ExpressionStatement	"snprintf ( buf , buflen , ""%lu"" , * vars -> val . integer )"	635:3:17490:17538	1901932	23	True				
ANR	1902377	CallExpression	"snprintf ( buf , buflen , ""%lu"" , * vars -> val . integer )"		1901932	0					
ANR	1902378	Callee	snprintf		1901932	0					
ANR	1902379	Identifier	snprintf		1901932	0					
ANR	1902380	ArgumentList	buf		1901932	1					
ANR	1902381	Argument	buf		1901932	0					
ANR	1902382	Identifier	buf		1901932	0					
ANR	1902383	Argument	buflen		1901932	1					
ANR	1902384	Identifier	buflen		1901932	0					
ANR	1902385	Argument	"""%lu"""		1901932	2					
ANR	1902386	PrimaryExpression	"""%lu"""		1901932	0					
ANR	1902387	Argument	* vars -> val . integer		1901932	3					
ANR	1902388	UnaryOperationExpression	* vars -> val . integer		1901932	0					
ANR	1902389	UnaryOperator	*		1901932	0					
ANR	1902390	MemberAccess	vars -> val . integer		1901932	1					
ANR	1902391	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902392	Identifier	vars		1901932	0					
ANR	1902393	Identifier	val		1901932	1					
ANR	1902394	Identifier	integer		1901932	1					
ANR	1902395	ExpressionStatement	buf [ buflen ] = 0	636:3:17543:17556	1901932	24	True				
ANR	1902396	AssignmentExpression	buf [ buflen ] = 0		1901932	0		=			
ANR	1902397	ArrayIndexing	buf [ buflen ]		1901932	0					
ANR	1902398	Identifier	buf		1901932	0					
ANR	1902399	Identifier	buflen		1901932	1					
ANR	1902400	PrimaryExpression	0		1901932	1					
ANR	1902401	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	637:3:17561:17583	1901932	25	True				
ANR	1902402	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902403	Callee	ZVAL_STRING		1901932	0					
ANR	1902404	Identifier	ZVAL_STRING		1901932	0					
ANR	1902405	ArgumentList	& val		1901932	1					
ANR	1902406	Argument	& val		1901932	0					
ANR	1902407	UnaryOperationExpression	& val		1901932	0					
ANR	1902408	UnaryOperator	&		1901932	0					
ANR	1902409	Identifier	val		1901932	1					
ANR	1902410	Argument	buf		1901932	1					
ANR	1902411	Identifier	buf		1901932	0					
ANR	1902412	BreakStatement	break ;	638:3:17588:17593	1901932	26	True				
ANR	1902413	Label	case ASN_INTEGER :	640:2:17598:17614	1901932	27	True				
ANR	1902414	Identifier	ASN_INTEGER		1901932	0					
ANR	1902415	ExpressionStatement	"snprintf ( buf , buflen , ""%ld"" , * vars -> val . integer )"	641:3:17639:17687	1901932	28	True				
ANR	1902416	CallExpression	"snprintf ( buf , buflen , ""%ld"" , * vars -> val . integer )"		1901932	0					
ANR	1902417	Callee	snprintf		1901932	0					
ANR	1902418	Identifier	snprintf		1901932	0					
ANR	1902419	ArgumentList	buf		1901932	1					
ANR	1902420	Argument	buf		1901932	0					
ANR	1902421	Identifier	buf		1901932	0					
ANR	1902422	Argument	buflen		1901932	1					
ANR	1902423	Identifier	buflen		1901932	0					
ANR	1902424	Argument	"""%ld"""		1901932	2					
ANR	1902425	PrimaryExpression	"""%ld"""		1901932	0					
ANR	1902426	Argument	* vars -> val . integer		1901932	3					
ANR	1902427	UnaryOperationExpression	* vars -> val . integer		1901932	0					
ANR	1902428	UnaryOperator	*		1901932	0					
ANR	1902429	MemberAccess	vars -> val . integer		1901932	1					
ANR	1902430	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902431	Identifier	vars		1901932	0					
ANR	1902432	Identifier	val		1901932	1					
ANR	1902433	Identifier	integer		1901932	1					
ANR	1902434	ExpressionStatement	buf [ buflen ] = 0	642:3:17692:17705	1901932	29	True				
ANR	1902435	AssignmentExpression	buf [ buflen ] = 0		1901932	0		=			
ANR	1902436	ArrayIndexing	buf [ buflen ]		1901932	0					
ANR	1902437	Identifier	buf		1901932	0					
ANR	1902438	Identifier	buflen		1901932	1					
ANR	1902439	PrimaryExpression	0		1901932	1					
ANR	1902440	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	643:3:17710:17732	1901932	30	True				
ANR	1902441	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902442	Callee	ZVAL_STRING		1901932	0					
ANR	1902443	Identifier	ZVAL_STRING		1901932	0					
ANR	1902444	ArgumentList	& val		1901932	1					
ANR	1902445	Argument	& val		1901932	0					
ANR	1902446	UnaryOperationExpression	& val		1901932	0					
ANR	1902447	UnaryOperator	&		1901932	0					
ANR	1902448	Identifier	val		1901932	1					
ANR	1902449	Argument	buf		1901932	1					
ANR	1902450	Identifier	buf		1901932	0					
ANR	1902451	BreakStatement	break ;	644:3:17737:17742	1901932	31	True				
ANR	1902452	Label	case ASN_OPAQUE_FLOAT :	647:2:17827:17848	1901932	32	True				
ANR	1902453	Identifier	ASN_OPAQUE_FLOAT		1901932	0					
ANR	1902454	ExpressionStatement	"snprintf ( buf , buflen , ""%f"" , * vars -> val . floatVal )"	648:3:17873:17921	1901932	33	True				
ANR	1902455	CallExpression	"snprintf ( buf , buflen , ""%f"" , * vars -> val . floatVal )"		1901932	0					
ANR	1902456	Callee	snprintf		1901932	0					
ANR	1902457	Identifier	snprintf		1901932	0					
ANR	1902458	ArgumentList	buf		1901932	1					
ANR	1902459	Argument	buf		1901932	0					
ANR	1902460	Identifier	buf		1901932	0					
ANR	1902461	Argument	buflen		1901932	1					
ANR	1902462	Identifier	buflen		1901932	0					
ANR	1902463	Argument	"""%f"""		1901932	2					
ANR	1902464	PrimaryExpression	"""%f"""		1901932	0					
ANR	1902465	Argument	* vars -> val . floatVal		1901932	3					
ANR	1902466	UnaryOperationExpression	* vars -> val . floatVal		1901932	0					
ANR	1902467	UnaryOperator	*		1901932	0					
ANR	1902468	MemberAccess	vars -> val . floatVal		1901932	1					
ANR	1902469	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902470	Identifier	vars		1901932	0					
ANR	1902471	Identifier	val		1901932	1					
ANR	1902472	Identifier	floatVal		1901932	1					
ANR	1902473	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	649:3:17926:17948	1901932	34	True				
ANR	1902474	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902475	Callee	ZVAL_STRING		1901932	0					
ANR	1902476	Identifier	ZVAL_STRING		1901932	0					
ANR	1902477	ArgumentList	& val		1901932	1					
ANR	1902478	Argument	& val		1901932	0					
ANR	1902479	UnaryOperationExpression	& val		1901932	0					
ANR	1902480	UnaryOperator	&		1901932	0					
ANR	1902481	Identifier	val		1901932	1					
ANR	1902482	Argument	buf		1901932	1					
ANR	1902483	Identifier	buf		1901932	0					
ANR	1902484	BreakStatement	break ;	650:3:17953:17958	1901932	35	True				
ANR	1902485	Label	case ASN_OPAQUE_DOUBLE :	652:2:17963:17985	1901932	36	True				
ANR	1902486	Identifier	ASN_OPAQUE_DOUBLE		1901932	0					
ANR	1902487	ExpressionStatement	"snprintf ( buf , buflen , ""%Lf"" , * vars -> val . doubleVal )"	653:3:18010:18060	1901932	37	True				
ANR	1902488	CallExpression	"snprintf ( buf , buflen , ""%Lf"" , * vars -> val . doubleVal )"		1901932	0					
ANR	1902489	Callee	snprintf		1901932	0					
ANR	1902490	Identifier	snprintf		1901932	0					
ANR	1902491	ArgumentList	buf		1901932	1					
ANR	1902492	Argument	buf		1901932	0					
ANR	1902493	Identifier	buf		1901932	0					
ANR	1902494	Argument	buflen		1901932	1					
ANR	1902495	Identifier	buflen		1901932	0					
ANR	1902496	Argument	"""%Lf"""		1901932	2					
ANR	1902497	PrimaryExpression	"""%Lf"""		1901932	0					
ANR	1902498	Argument	* vars -> val . doubleVal		1901932	3					
ANR	1902499	UnaryOperationExpression	* vars -> val . doubleVal		1901932	0					
ANR	1902500	UnaryOperator	*		1901932	0					
ANR	1902501	MemberAccess	vars -> val . doubleVal		1901932	1					
ANR	1902502	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902503	Identifier	vars		1901932	0					
ANR	1902504	Identifier	val		1901932	1					
ANR	1902505	Identifier	doubleVal		1901932	1					
ANR	1902506	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	654:3:18065:18087	1901932	38	True				
ANR	1902507	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902508	Callee	ZVAL_STRING		1901932	0					
ANR	1902509	Identifier	ZVAL_STRING		1901932	0					
ANR	1902510	ArgumentList	& val		1901932	1					
ANR	1902511	Argument	& val		1901932	0					
ANR	1902512	UnaryOperationExpression	& val		1901932	0					
ANR	1902513	UnaryOperator	&		1901932	0					
ANR	1902514	Identifier	val		1901932	1					
ANR	1902515	Argument	buf		1901932	1					
ANR	1902516	Identifier	buf		1901932	0					
ANR	1902517	BreakStatement	break ;	655:3:18092:18097	1901932	39	True				
ANR	1902518	Label	case ASN_OPAQUE_I64 :	657:2:18102:18121	1901932	40	True				
ANR	1902519	Identifier	ASN_OPAQUE_I64		1901932	0					
ANR	1902520	ExpressionStatement	"printI64 ( buf , vars -> val . counter64 )"	658:3:18146:18180	1901932	41	True				
ANR	1902521	CallExpression	"printI64 ( buf , vars -> val . counter64 )"		1901932	0					
ANR	1902522	Callee	printI64		1901932	0					
ANR	1902523	Identifier	printI64		1901932	0					
ANR	1902524	ArgumentList	buf		1901932	1					
ANR	1902525	Argument	buf		1901932	0					
ANR	1902526	Identifier	buf		1901932	0					
ANR	1902527	Argument	vars -> val . counter64		1901932	1					
ANR	1902528	MemberAccess	vars -> val . counter64		1901932	0					
ANR	1902529	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902530	Identifier	vars		1901932	0					
ANR	1902531	Identifier	val		1901932	1					
ANR	1902532	Identifier	counter64		1901932	1					
ANR	1902533	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	659:3:18185:18207	1901932	42	True				
ANR	1902534	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902535	Callee	ZVAL_STRING		1901932	0					
ANR	1902536	Identifier	ZVAL_STRING		1901932	0					
ANR	1902537	ArgumentList	& val		1901932	1					
ANR	1902538	Argument	& val		1901932	0					
ANR	1902539	UnaryOperationExpression	& val		1901932	0					
ANR	1902540	UnaryOperator	&		1901932	0					
ANR	1902541	Identifier	val		1901932	1					
ANR	1902542	Argument	buf		1901932	1					
ANR	1902543	Identifier	buf		1901932	0					
ANR	1902544	BreakStatement	break ;	660:3:18212:18217	1901932	43	True				
ANR	1902545	Label	case ASN_OPAQUE_U64 :	662:2:18222:18241	1901932	44	True				
ANR	1902546	Identifier	ASN_OPAQUE_U64		1901932	0					
ANR	1902547	Label	case ASN_COUNTER64 :	664:2:18272:18290	1901932	45	True				
ANR	1902548	Identifier	ASN_COUNTER64		1901932	0					
ANR	1902549	ExpressionStatement	"printU64 ( buf , vars -> val . counter64 )"	665:3:18320:18354	1901932	46	True				
ANR	1902550	CallExpression	"printU64 ( buf , vars -> val . counter64 )"		1901932	0					
ANR	1902551	Callee	printU64		1901932	0					
ANR	1902552	Identifier	printU64		1901932	0					
ANR	1902553	ArgumentList	buf		1901932	1					
ANR	1902554	Argument	buf		1901932	0					
ANR	1902555	Identifier	buf		1901932	0					
ANR	1902556	Argument	vars -> val . counter64		1901932	1					
ANR	1902557	MemberAccess	vars -> val . counter64		1901932	0					
ANR	1902558	PtrMemberAccess	vars -> val		1901932	0					
ANR	1902559	Identifier	vars		1901932	0					
ANR	1902560	Identifier	val		1901932	1					
ANR	1902561	Identifier	counter64		1901932	1					
ANR	1902562	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	666:3:18359:18381	1901932	47	True				
ANR	1902563	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902564	Callee	ZVAL_STRING		1901932	0					
ANR	1902565	Identifier	ZVAL_STRING		1901932	0					
ANR	1902566	ArgumentList	& val		1901932	1					
ANR	1902567	Argument	& val		1901932	0					
ANR	1902568	UnaryOperationExpression	& val		1901932	0					
ANR	1902569	UnaryOperator	&		1901932	0					
ANR	1902570	Identifier	val		1901932	1					
ANR	1902571	Argument	buf		1901932	1					
ANR	1902572	Identifier	buf		1901932	0					
ANR	1902573	BreakStatement	break ;	667:3:18386:18391	1901932	48	True				
ANR	1902574	Label	default :	669:2:18396:18403	1901932	49	True				
ANR	1902575	Identifier	default		1901932	0					
ANR	1902576	ExpressionStatement	"ZVAL_STRING ( & val , ""Unknown value type"" )"	670:3:18408:18447	1901932	50	True				
ANR	1902577	CallExpression	"ZVAL_STRING ( & val , ""Unknown value type"" )"		1901932	0					
ANR	1902578	Callee	ZVAL_STRING		1901932	0					
ANR	1902579	Identifier	ZVAL_STRING		1901932	0					
ANR	1902580	ArgumentList	& val		1901932	1					
ANR	1902581	Argument	& val		1901932	0					
ANR	1902582	UnaryOperationExpression	& val		1901932	0					
ANR	1902583	UnaryOperator	&		1901932	0					
ANR	1902584	Identifier	val		1901932	1					
ANR	1902585	Argument	"""Unknown value type"""		1901932	1					
ANR	1902586	PrimaryExpression	"""Unknown value type"""		1901932	0					
ANR	1902587	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown value type: %u"" , vars -> type )"	671:3:18452:18523	1901932	51	True				
ANR	1902588	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown value type: %u"" , vars -> type )"		1901932	0					
ANR	1902589	Callee	php_error_docref		1901932	0					
ANR	1902590	Identifier	php_error_docref		1901932	0					
ANR	1902591	ArgumentList	NULL		1901932	1					
ANR	1902592	Argument	NULL		1901932	0					
ANR	1902593	Identifier	NULL		1901932	0					
ANR	1902594	Argument	E_WARNING		1901932	1					
ANR	1902595	Identifier	E_WARNING		1901932	0					
ANR	1902596	Argument	"""Unknown value type: %u"""		1901932	2					
ANR	1902597	PrimaryExpression	"""Unknown value type: %u"""		1901932	0					
ANR	1902598	Argument	vars -> type		1901932	3					
ANR	1902599	PtrMemberAccess	vars -> type		1901932	0					
ANR	1902600	Identifier	vars		1901932	0					
ANR	1902601	Identifier	type		1901932	1					
ANR	1902602	BreakStatement	break ;	672:3:18528:18533	1901932	52	True				
ANR	1902603	ElseStatement	else		1901932	0					
ANR	1902604	CompoundStatement		126:45:3532:3532	1901932	0					
ANR	1902605	ExpressionStatement	"ZVAL_STRING ( & val , buf )"	676:2:18642:18664	1901932	0	True				
ANR	1902606	CallExpression	"ZVAL_STRING ( & val , buf )"		1901932	0					
ANR	1902607	Callee	ZVAL_STRING		1901932	0					
ANR	1902608	Identifier	ZVAL_STRING		1901932	0					
ANR	1902609	ArgumentList	& val		1901932	1					
ANR	1902610	Argument	& val		1901932	0					
ANR	1902611	UnaryOperationExpression	& val		1901932	0					
ANR	1902612	UnaryOperator	&		1901932	0					
ANR	1902613	Identifier	val		1901932	1					
ANR	1902614	Argument	buf		1901932	1					
ANR	1902615	Identifier	buf		1901932	0					
ANR	1902616	IfStatement	if ( valueretrieval & SNMP_VALUE_OBJECT )		1901932	9					
ANR	1902617	Condition	valueretrieval & SNMP_VALUE_OBJECT	679:5:18675:18708	1901932	0	True				
ANR	1902618	BitAndExpression	valueretrieval & SNMP_VALUE_OBJECT		1901932	0		&			
ANR	1902619	Identifier	valueretrieval		1901932	0					
ANR	1902620	Identifier	SNMP_VALUE_OBJECT		1901932	1					
ANR	1902621	CompoundStatement		131:41:3659:3659	1901932	1					
ANR	1902622	ExpressionStatement	object_init ( snmpval )	680:2:18715:18735	1901932	0	True				
ANR	1902623	CallExpression	object_init ( snmpval )		1901932	0					
ANR	1902624	Callee	object_init		1901932	0					
ANR	1902625	Identifier	object_init		1901932	0					
ANR	1902626	ArgumentList	snmpval		1901932	1					
ANR	1902627	Argument	snmpval		1901932	0					
ANR	1902628	Identifier	snmpval		1901932	0					
ANR	1902629	ExpressionStatement	"add_property_long ( snmpval , ""type"" , vars -> type )"	681:2:18739:18785	1901932	1	True				
ANR	1902630	CallExpression	"add_property_long ( snmpval , ""type"" , vars -> type )"		1901932	0					
ANR	1902631	Callee	add_property_long		1901932	0					
ANR	1902632	Identifier	add_property_long		1901932	0					
ANR	1902633	ArgumentList	snmpval		1901932	1					
ANR	1902634	Argument	snmpval		1901932	0					
ANR	1902635	Identifier	snmpval		1901932	0					
ANR	1902636	Argument	"""type"""		1901932	1					
ANR	1902637	PrimaryExpression	"""type"""		1901932	0					
ANR	1902638	Argument	vars -> type		1901932	2					
ANR	1902639	PtrMemberAccess	vars -> type		1901932	0					
ANR	1902640	Identifier	vars		1901932	0					
ANR	1902641	Identifier	type		1901932	1					
ANR	1902642	ExpressionStatement	"add_property_zval ( snmpval , ""value"" , & val )"	682:2:18789:18830	1901932	2	True				
ANR	1902643	CallExpression	"add_property_zval ( snmpval , ""value"" , & val )"		1901932	0					
ANR	1902644	Callee	add_property_zval		1901932	0					
ANR	1902645	Identifier	add_property_zval		1901932	0					
ANR	1902646	ArgumentList	snmpval		1901932	1					
ANR	1902647	Argument	snmpval		1901932	0					
ANR	1902648	Identifier	snmpval		1901932	0					
ANR	1902649	Argument	"""value"""		1901932	1					
ANR	1902650	PrimaryExpression	"""value"""		1901932	0					
ANR	1902651	Argument	& val		1901932	2					
ANR	1902652	UnaryOperationExpression	& val		1901932	0					
ANR	1902653	UnaryOperator	&		1901932	0					
ANR	1902654	Identifier	val		1901932	1					
ANR	1902655	ElseStatement	else		1901932	0					
ANR	1902656	CompoundStatement		135:9:3789:3789	1901932	0					
ANR	1902657	ExpressionStatement	"ZVAL_COPY ( snmpval , & val )"	684:2:18845:18869	1901932	0	True				
ANR	1902658	CallExpression	"ZVAL_COPY ( snmpval , & val )"		1901932	0					
ANR	1902659	Callee	ZVAL_COPY		1901932	0					
ANR	1902660	Identifier	ZVAL_COPY		1901932	0					
ANR	1902661	ArgumentList	snmpval		1901932	1					
ANR	1902662	Argument	snmpval		1901932	0					
ANR	1902663	Identifier	snmpval		1901932	0					
ANR	1902664	Argument	& val		1901932	1					
ANR	1902665	UnaryOperationExpression	& val		1901932	0					
ANR	1902666	UnaryOperator	&		1901932	0					
ANR	1902667	Identifier	val		1901932	1					
ANR	1902668	ExpressionStatement	zval_ptr_dtor ( & val )	686:1:18875:18894	1901932	10	True				
ANR	1902669	CallExpression	zval_ptr_dtor ( & val )		1901932	0					
ANR	1902670	Callee	zval_ptr_dtor		1901932	0					
ANR	1902671	Identifier	zval_ptr_dtor		1901932	0					
ANR	1902672	ArgumentList	& val		1901932	1					
ANR	1902673	Argument	& val		1901932	0					
ANR	1902674	UnaryOperationExpression	& val		1901932	0					
ANR	1902675	UnaryOperator	&		1901932	0					
ANR	1902676	Identifier	val		1901932	1					
ANR	1902677	IfStatement	if ( dbuf )		1901932	11					
ANR	1902678	Condition	dbuf	688:5:18902:18905	1901932	0	True				
ANR	1902679	Identifier	dbuf		1901932	0					
ANR	1902680	CompoundStatement		140:10:3855:3855	1901932	1					
ANR	1902681	ExpressionStatement	efree ( dbuf )	689:2:18948:18959	1901932	0	True				
ANR	1902682	CallExpression	efree ( dbuf )		1901932	0					
ANR	1902683	Callee	efree		1901932	0					
ANR	1902684	Identifier	efree		1901932	0					
ANR	1902685	ArgumentList	dbuf		1901932	1					
ANR	1902686	Argument	dbuf		1901932	0					
ANR	1902687	Identifier	dbuf		1901932	0					
ANR	1902688	ReturnType	static void		1901932	1					
ANR	1902689	Identifier	php_snmp_getvalue		1901932	2					
ANR	1902690	ParameterList	"struct variable_list * vars , zval * snmpval , int valueretrieval"		1901932	3					
ANR	1902691	Parameter	struct variable_list * vars	548:30:14988:15013	1901932	0	True				
ANR	1902692	ParameterType	struct variable_list *		1901932	0					
ANR	1902693	Identifier	vars		1901932	1					
ANR	1902694	Parameter	zval * snmpval	548:58:15016:15028	1901932	1	True				
ANR	1902695	ParameterType	zval *		1901932	0					
ANR	1902696	Identifier	snmpval		1901932	1					
ANR	1902697	Parameter	int valueretrieval	548:73:15031:15048	1901932	2	True				
ANR	1902698	ParameterType	int		1901932	0					
ANR	1902699	Identifier	valueretrieval		1901932	1					
ANR	1902700	CFGEntryNode	ENTRY		1901932		True				
ANR	1902701	CFGExitNode	EXIT		1901932		True				
ANR	1902702	Symbol	& val		1901932						
ANR	1902703	Symbol	vars -> val . string		1901932						
ANR	1902704	Symbol	SNMP_VALUE_PLAIN		1901932						
ANR	1902705	Symbol	snprint_value		1901932						
ANR	1902706	Symbol	* * vars		1901932						
ANR	1902707	Symbol	* vars -> val . doubleVal		1901932						
ANR	1902708	Symbol	* vars		1901932						
ANR	1902709	Symbol	* vars -> val . integer		1901932						
ANR	1902710	Symbol	vars -> val		1901932						
ANR	1902711	Symbol	E_WARNING		1901932						
ANR	1902712	Symbol	emalloc		1901932						
ANR	1902713	Symbol	sbuf		1901932						
ANR	1902714	Symbol	valueretrieval		1901932						
ANR	1902715	Symbol	vars -> val . floatVal		1901932						
ANR	1902716	Symbol	buflen		1901932						
ANR	1902717	Symbol	vars		1901932						
ANR	1902718	Symbol	erealloc		1901932						
ANR	1902719	Symbol	val		1901932						
ANR	1902720	Symbol	dbuf		1901932						
ANR	1902721	Symbol	* buf		1901932						
ANR	1902722	Symbol	errno		1901932						
ANR	1902723	Symbol	SNMP_VALUE_OBJECT		1901932						
ANR	1902724	Symbol	NULL		1901932						
ANR	1902725	Symbol	* buflen		1901932						
ANR	1902726	Symbol	* vars -> val		1901932						
ANR	1902727	Symbol	vars -> val . doubleVal		1901932						
ANR	1902728	Symbol	vars -> val . integer		1901932						
ANR	1902729	Symbol	strerror		1901932						
ANR	1902730	Symbol	buf		1901932						
ANR	1902731	Symbol	vars -> val_len		1901932						
ANR	1902732	Symbol	val_len		1901932						
ANR	1902733	Symbol	snmpval		1901932						
ANR	1902734	Symbol	vars -> type		1901932						
ANR	1902735	Symbol	vars -> name_length		1901932						
ANR	1902736	Symbol	vars -> val . objid		1901932						
ANR	1902737	Symbol	vars -> name		1901932						
ANR	1902738	Symbol	* vars -> val . string		1901932						
ANR	1902739	Symbol	* vars -> val . floatVal		1901932						
ANR	1902740	Symbol	vars -> val . bitstring		1901932						
ANR	1902741	Symbol	vars -> val . counter64		1901932						
ANR	1902742	DeclStmt									
ANR	1902743	Decl							struct snmp_session	struct snmp_session *	ss
ANR	1902744	DeclStmt									
ANR	1902745	Decl							struct snmp_pdu	struct snmp_pdu *	pdu
ANR	1902746	Decl							struct snmp_pdu	struct snmp_pdu *	response
ANR	1902747	DeclStmt									
ANR	1902748	Decl							struct variable_list	struct variable_list *	vars
ANR	1902749	DeclStmt									
ANR	1902750	Decl							oid	oid [ MAX_NAME_LEN ]	root
ANR	1902751	DeclStmt									
ANR	1902752	Decl							size_t	size_t	rootlen
ANR	1902753	DeclStmt									
ANR	1902754	Decl							int	int	status
ANR	1902755	Decl							int	int	count
ANR	1902756	Decl							int	int	found
ANR	1902757	DeclStmt									
ANR	1902758	Decl							char	char [ 2048 ]	buf
ANR	1902759	DeclStmt									
ANR	1902760	Decl							char	char [ 2048 ]	buf2
ANR	1902761	DeclStmt									
ANR	1902762	Decl							int	int	keepwalking
ANR	1902763	DeclStmt									
ANR	1902764	Decl							char	char *	err
ANR	1902765	DeclStmt									
ANR	1902766	Decl							zval	zval	snmpval
ANR	1902767	DeclStmt									
ANR	1902768	Decl							int	int	snmp_errno
ANR	1902769	Function	php_snmp_parse_oid	962:0:29101:34696							
ANR	1902770	FunctionDef	"php_snmp_parse_oid (zval * object , int st , struct objid_query * objid_query , zval * oid , zval * type , zval * value)"		1902769	0					
ANR	1902771	CompoundStatement		963:0:29222:34696	1902769	0					
ANR	1902772	IdentifierDeclStatement	char * pptr ;	964:1:29225:29235	1902769	0	True				
ANR	1902773	IdentifierDecl	* pptr		1902769	0					
ANR	1902774	IdentifierDeclType	char *		1902769	0					
ANR	1902775	Identifier	pptr		1902769	1					
ANR	1902776	IdentifierDeclStatement	"uint32_t idx_type = 0 , idx_value = 0 ;"	965:1:29238:29274	1902769	1	True				
ANR	1902777	IdentifierDecl	idx_type = 0		1902769	0					
ANR	1902778	IdentifierDeclType	uint32_t		1902769	0					
ANR	1902779	Identifier	idx_type		1902769	1					
ANR	1902780	AssignmentExpression	idx_type = 0		1902769	2		=			
ANR	1902781	Identifier	idx_type		1902769	0					
ANR	1902782	PrimaryExpression	0		1902769	1					
ANR	1902783	IdentifierDecl	idx_value = 0		1902769	1					
ANR	1902784	IdentifierDeclType	uint32_t		1902769	0					
ANR	1902785	Identifier	idx_value		1902769	1					
ANR	1902786	AssignmentExpression	idx_value = 0		1902769	2		=			
ANR	1902787	Identifier	idx_value		1902769	0					
ANR	1902788	PrimaryExpression	0		1902769	1					
ANR	1902789	IdentifierDeclStatement	"zval * tmp_oid , * tmp_type , * tmp_value ;"	966:1:29277:29313	1902769	2	True				
ANR	1902790	IdentifierDecl	* tmp_oid		1902769	0					
ANR	1902791	IdentifierDeclType	zval *		1902769	0					
ANR	1902792	Identifier	tmp_oid		1902769	1					
ANR	1902793	IdentifierDecl	* tmp_type		1902769	1					
ANR	1902794	IdentifierDeclType	zval *		1902769	0					
ANR	1902795	Identifier	tmp_type		1902769	1					
ANR	1902796	IdentifierDecl	* tmp_value		1902769	2					
ANR	1902797	IdentifierDeclType	zval *		1902769	0					
ANR	1902798	Identifier	tmp_value		1902769	1					
ANR	1902799	IfStatement	if ( Z_TYPE_P ( oid ) != IS_ARRAY )		1902769	3					
ANR	1902800	Condition	Z_TYPE_P ( oid ) != IS_ARRAY	968:5:29321:29345	1902769	0	True				
ANR	1902801	EqualityExpression	Z_TYPE_P ( oid ) != IS_ARRAY		1902769	0		!=			
ANR	1902802	CallExpression	Z_TYPE_P ( oid )		1902769	0					
ANR	1902803	Callee	Z_TYPE_P		1902769	0					
ANR	1902804	Identifier	Z_TYPE_P		1902769	0					
ANR	1902805	ArgumentList	oid		1902769	1					
ANR	1902806	Argument	oid		1902769	0					
ANR	1902807	Identifier	oid		1902769	0					
ANR	1902808	Identifier	IS_ARRAY		1902769	1					
ANR	1902809	CompoundStatement		6:32:125:125	1902769	1					
ANR	1902810	ExpressionStatement	convert_to_string_ex ( oid )	969:2:29352:29377	1902769	0	True				
ANR	1902811	CallExpression	convert_to_string_ex ( oid )		1902769	0					
ANR	1902812	Callee	convert_to_string_ex		1902769	0					
ANR	1902813	Identifier	convert_to_string_ex		1902769	0					
ANR	1902814	ArgumentList	oid		1902769	1					
ANR	1902815	Argument	oid		1902769	0					
ANR	1902816	Identifier	oid		1902769	0					
ANR	1902817	IfStatement	if ( st & SNMP_CMD_SET )		1902769	4					
ANR	1902818	Condition	st & SNMP_CMD_SET	972:5:29388:29404	1902769	0	True				
ANR	1902819	BitAndExpression	st & SNMP_CMD_SET		1902769	0		&			
ANR	1902820	Identifier	st		1902769	0					
ANR	1902821	Identifier	SNMP_CMD_SET		1902769	1					
ANR	1902822	CompoundStatement		10:24:184:184	1902769	1					
ANR	1902823	IfStatement	if ( Z_TYPE_P ( type ) != IS_ARRAY )		1902769	0					
ANR	1902824	Condition	Z_TYPE_P ( type ) != IS_ARRAY	973:6:29415:29440	1902769	0	True				
ANR	1902825	EqualityExpression	Z_TYPE_P ( type ) != IS_ARRAY		1902769	0		!=			
ANR	1902826	CallExpression	Z_TYPE_P ( type )		1902769	0					
ANR	1902827	Callee	Z_TYPE_P		1902769	0					
ANR	1902828	Identifier	Z_TYPE_P		1902769	0					
ANR	1902829	ArgumentList	type		1902769	1					
ANR	1902830	Argument	type		1902769	0					
ANR	1902831	Identifier	type		1902769	0					
ANR	1902832	Identifier	IS_ARRAY		1902769	1					
ANR	1902833	CompoundStatement		11:34:220:220	1902769	1					
ANR	1902834	ExpressionStatement	convert_to_string_ex ( type )	974:3:29448:29474	1902769	0	True				
ANR	1902835	CallExpression	convert_to_string_ex ( type )		1902769	0					
ANR	1902836	Callee	convert_to_string_ex		1902769	0					
ANR	1902837	Identifier	convert_to_string_ex		1902769	0					
ANR	1902838	ArgumentList	type		1902769	1					
ANR	1902839	Argument	type		1902769	0					
ANR	1902840	Identifier	type		1902769	0					
ANR	1902841	IfStatement	if ( Z_TYPE_P ( value ) != IS_ARRAY )		1902769	1					
ANR	1902842	Condition	Z_TYPE_P ( value ) != IS_ARRAY	977:6:29487:29513	1902769	0	True				
ANR	1902843	EqualityExpression	Z_TYPE_P ( value ) != IS_ARRAY		1902769	0		!=			
ANR	1902844	CallExpression	Z_TYPE_P ( value )		1902769	0					
ANR	1902845	Callee	Z_TYPE_P		1902769	0					
ANR	1902846	Identifier	Z_TYPE_P		1902769	0					
ANR	1902847	ArgumentList	value		1902769	1					
ANR	1902848	Argument	value		1902769	0					
ANR	1902849	Identifier	value		1902769	0					
ANR	1902850	Identifier	IS_ARRAY		1902769	1					
ANR	1902851	CompoundStatement		15:35:293:293	1902769	1					
ANR	1902852	ExpressionStatement	convert_to_string_ex ( value )	978:3:29521:29548	1902769	0	True				
ANR	1902853	CallExpression	convert_to_string_ex ( value )		1902769	0					
ANR	1902854	Callee	convert_to_string_ex		1902769	0					
ANR	1902855	Identifier	convert_to_string_ex		1902769	0					
ANR	1902856	ArgumentList	value		1902769	1					
ANR	1902857	Argument	value		1902769	0					
ANR	1902858	Identifier	value		1902769	0					
ANR	1902859	ExpressionStatement	objid_query -> count = 0	982:1:29559:29581	1902769	5	True				
ANR	1902860	AssignmentExpression	objid_query -> count = 0		1902769	0		=			
ANR	1902861	PtrMemberAccess	objid_query -> count		1902769	0					
ANR	1902862	Identifier	objid_query		1902769	0					
ANR	1902863	Identifier	count		1902769	1					
ANR	1902864	PrimaryExpression	0		1902769	1					
ANR	1902865	ExpressionStatement	objid_query -> array_output = ( ( st & SNMP_CMD_WALK ) ? TRUE : FALSE )	983:1:29584:29649	1902769	6	True				
ANR	1902866	AssignmentExpression	objid_query -> array_output = ( ( st & SNMP_CMD_WALK ) ? TRUE : FALSE )		1902769	0		=			
ANR	1902867	PtrMemberAccess	objid_query -> array_output		1902769	0					
ANR	1902868	Identifier	objid_query		1902769	0					
ANR	1902869	Identifier	array_output		1902769	1					
ANR	1902870	ConditionalExpression	( st & SNMP_CMD_WALK ) ? TRUE : FALSE		1902769	1					
ANR	1902871	Condition	st & SNMP_CMD_WALK		1902769	0					
ANR	1902872	BitAndExpression	st & SNMP_CMD_WALK		1902769	0		&			
ANR	1902873	Identifier	st		1902769	0					
ANR	1902874	Identifier	SNMP_CMD_WALK		1902769	1					
ANR	1902875	Identifier	TRUE		1902769	1					
ANR	1902876	Identifier	FALSE		1902769	2					
ANR	1902877	IfStatement	if ( Z_TYPE_P ( oid ) == IS_STRING )		1902769	7					
ANR	1902878	Condition	Z_TYPE_P ( oid ) == IS_STRING	984:5:29656:29681	1902769	0	True				
ANR	1902879	EqualityExpression	Z_TYPE_P ( oid ) == IS_STRING		1902769	0		==			
ANR	1902880	CallExpression	Z_TYPE_P ( oid )		1902769	0					
ANR	1902881	Callee	Z_TYPE_P		1902769	0					
ANR	1902882	Identifier	Z_TYPE_P		1902769	0					
ANR	1902883	ArgumentList	oid		1902769	1					
ANR	1902884	Argument	oid		1902769	0					
ANR	1902885	Identifier	oid		1902769	0					
ANR	1902886	Identifier	IS_STRING		1902769	1					
ANR	1902887	CompoundStatement		22:33:461:461	1902769	1					
ANR	1902888	ExpressionStatement	objid_query -> vars = ( snmpobjarg * ) emalloc ( sizeof ( snmpobjarg ) )	985:2:29688:29749	1902769	0	True				
ANR	1902889	AssignmentExpression	objid_query -> vars = ( snmpobjarg * ) emalloc ( sizeof ( snmpobjarg ) )		1902769	0		=			
ANR	1902890	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1902891	Identifier	objid_query		1902769	0					
ANR	1902892	Identifier	vars		1902769	1					
ANR	1902893	CastExpression	( snmpobjarg * ) emalloc ( sizeof ( snmpobjarg ) )		1902769	1					
ANR	1902894	CastTarget	snmpobjarg *		1902769	0					
ANR	1902895	CallExpression	emalloc ( sizeof ( snmpobjarg ) )		1902769	1					
ANR	1902896	Callee	emalloc		1902769	0					
ANR	1902897	Identifier	emalloc		1902769	0					
ANR	1902898	ArgumentList	sizeof ( snmpobjarg )		1902769	1					
ANR	1902899	Argument	sizeof ( snmpobjarg )		1902769	0					
ANR	1902900	SizeofExpression	sizeof ( snmpobjarg )		1902769	0					
ANR	1902901	Sizeof	sizeof		1902769	0					
ANR	1902902	SizeofOperand	snmpobjarg		1902769	1					
ANR	1902903	IfStatement	if ( objid_query -> vars == NULL )		1902769	1					
ANR	1902904	Condition	objid_query -> vars == NULL	986:6:29757:29781	1902769	0	True				
ANR	1902905	EqualityExpression	objid_query -> vars == NULL		1902769	0		==			
ANR	1902906	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1902907	Identifier	objid_query		1902769	0					
ANR	1902908	Identifier	vars		1902769	1					
ANR	1902909	Identifier	NULL		1902769	1					
ANR	1902910	CompoundStatement		24:33:561:561	1902769	1					
ANR	1902911	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed while parsing oid: %s"" , strerror ( errno ) )"	987:3:29789:29881	1902769	0	True				
ANR	1902912	CallExpression	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed while parsing oid: %s"" , strerror ( errno ) )"		1902769	0					
ANR	1902913	Callee	php_error_docref		1902769	0					
ANR	1902914	Identifier	php_error_docref		1902769	0					
ANR	1902915	ArgumentList	NULL		1902769	1					
ANR	1902916	Argument	NULL		1902769	0					
ANR	1902917	Identifier	NULL		1902769	0					
ANR	1902918	Argument	E_WARNING		1902769	1					
ANR	1902919	Identifier	E_WARNING		1902769	0					
ANR	1902920	Argument	"""emalloc() failed while parsing oid: %s"""		1902769	2					
ANR	1902921	PrimaryExpression	"""emalloc() failed while parsing oid: %s"""		1902769	0					
ANR	1902922	Argument	strerror ( errno )		1902769	3					
ANR	1902923	CallExpression	strerror ( errno )		1902769	0					
ANR	1902924	Callee	strerror		1902769	0					
ANR	1902925	Identifier	strerror		1902769	0					
ANR	1902926	ArgumentList	errno		1902769	1					
ANR	1902927	Argument	errno		1902769	0					
ANR	1902928	Identifier	errno		1902769	0					
ANR	1902929	ExpressionStatement	efree ( objid_query -> vars )	988:3:29886:29910	1902769	1	True				
ANR	1902930	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1902931	Callee	efree		1902769	0					
ANR	1902932	Identifier	efree		1902769	0					
ANR	1902933	ArgumentList	objid_query -> vars		1902769	1					
ANR	1902934	Argument	objid_query -> vars		1902769	0					
ANR	1902935	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1902936	Identifier	objid_query		1902769	0					
ANR	1902937	Identifier	vars		1902769	1					
ANR	1902938	ReturnStatement	return FALSE ;	989:3:29915:29927	1902769	2	True				
ANR	1902939	Identifier	FALSE		1902769	0					
ANR	1902940	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . oid = Z_STRVAL_P ( oid )	991:2:29935:29994	1902769	2	True				
ANR	1902941	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . oid = Z_STRVAL_P ( oid )		1902769	0		=			
ANR	1902942	MemberAccess	objid_query -> vars [ objid_query -> count ] . oid		1902769	0					
ANR	1902943	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1902944	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1902945	Identifier	objid_query		1902769	0					
ANR	1902946	Identifier	vars		1902769	1					
ANR	1902947	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1902948	Identifier	objid_query		1902769	0					
ANR	1902949	Identifier	count		1902769	1					
ANR	1902950	Identifier	oid		1902769	1					
ANR	1902951	CallExpression	Z_STRVAL_P ( oid )		1902769	1					
ANR	1902952	Callee	Z_STRVAL_P		1902769	0					
ANR	1902953	Identifier	Z_STRVAL_P		1902769	0					
ANR	1902954	ArgumentList	oid		1902769	1					
ANR	1902955	Argument	oid		1902769	0					
ANR	1902956	Identifier	oid		1902769	0					
ANR	1902957	IfStatement	if ( st & SNMP_CMD_SET )		1902769	3					
ANR	1902958	Condition	st & SNMP_CMD_SET	992:6:30002:30018	1902769	0	True				
ANR	1902959	BitAndExpression	st & SNMP_CMD_SET		1902769	0		&			
ANR	1902960	Identifier	st		1902769	0					
ANR	1902961	Identifier	SNMP_CMD_SET		1902769	1					
ANR	1902962	CompoundStatement		30:25:798:798	1902769	1					
ANR	1902963	IfStatement	if ( Z_TYPE_P ( type ) == IS_STRING && Z_TYPE_P ( value ) == IS_STRING )		1902769	0					
ANR	1902964	Condition	Z_TYPE_P ( type ) == IS_STRING && Z_TYPE_P ( value ) == IS_STRING	993:7:30030:30088	1902769	0	True				
ANR	1902965	AndExpression	Z_TYPE_P ( type ) == IS_STRING && Z_TYPE_P ( value ) == IS_STRING		1902769	0		&&			
ANR	1902966	EqualityExpression	Z_TYPE_P ( type ) == IS_STRING		1902769	0		==			
ANR	1902967	CallExpression	Z_TYPE_P ( type )		1902769	0					
ANR	1902968	Callee	Z_TYPE_P		1902769	0					
ANR	1902969	Identifier	Z_TYPE_P		1902769	0					
ANR	1902970	ArgumentList	type		1902769	1					
ANR	1902971	Argument	type		1902769	0					
ANR	1902972	Identifier	type		1902769	0					
ANR	1902973	Identifier	IS_STRING		1902769	1					
ANR	1902974	EqualityExpression	Z_TYPE_P ( value ) == IS_STRING		1902769	1		==			
ANR	1902975	CallExpression	Z_TYPE_P ( value )		1902769	0					
ANR	1902976	Callee	Z_TYPE_P		1902769	0					
ANR	1902977	Identifier	Z_TYPE_P		1902769	0					
ANR	1902978	ArgumentList	value		1902769	1					
ANR	1902979	Argument	value		1902769	0					
ANR	1902980	Identifier	value		1902769	0					
ANR	1902981	Identifier	IS_STRING		1902769	1					
ANR	1902982	CompoundStatement		31:68:868:868	1902769	1					
ANR	1902983	IfStatement	if ( Z_STRLEN_P ( type ) != 1 )		1902769	0					
ANR	1902984	Condition	Z_STRLEN_P ( type ) != 1	994:8:30101:30121	1902769	0	True				
ANR	1902985	EqualityExpression	Z_STRLEN_P ( type ) != 1		1902769	0		!=			
ANR	1902986	CallExpression	Z_STRLEN_P ( type )		1902769	0					
ANR	1902987	Callee	Z_STRLEN_P		1902769	0					
ANR	1902988	Identifier	Z_STRLEN_P		1902769	0					
ANR	1902989	ArgumentList	type		1902769	1					
ANR	1902990	Argument	type		1902769	0					
ANR	1902991	Identifier	type		1902769	0					
ANR	1902992	PrimaryExpression	1		1902769	1					
ANR	1902993	CompoundStatement		32:31:901:901	1902769	1					
ANR	1902994	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Bogus type '%s', should be single char, got %u"" , Z_STRVAL_P ( type ) , Z_STRLEN_P ( type ) )"	995:5:30131:30250	1902769	0	True				
ANR	1902995	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Bogus type '%s', should be single char, got %u"" , Z_STRVAL_P ( type ) , Z_STRLEN_P ( type ) )"		1902769	0					
ANR	1902996	Callee	php_error_docref		1902769	0					
ANR	1902997	Identifier	php_error_docref		1902769	0					
ANR	1902998	ArgumentList	NULL		1902769	1					
ANR	1902999	Argument	NULL		1902769	0					
ANR	1903000	Identifier	NULL		1902769	0					
ANR	1903001	Argument	E_WARNING		1902769	1					
ANR	1903002	Identifier	E_WARNING		1902769	0					
ANR	1903003	Argument	"""Bogus type '%s', should be single char, got %u"""		1902769	2					
ANR	1903004	PrimaryExpression	"""Bogus type '%s', should be single char, got %u"""		1902769	0					
ANR	1903005	Argument	Z_STRVAL_P ( type )		1902769	3					
ANR	1903006	CallExpression	Z_STRVAL_P ( type )		1902769	0					
ANR	1903007	Callee	Z_STRVAL_P		1902769	0					
ANR	1903008	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903009	ArgumentList	type		1902769	1					
ANR	1903010	Argument	type		1902769	0					
ANR	1903011	Identifier	type		1902769	0					
ANR	1903012	Argument	Z_STRLEN_P ( type )		1902769	4					
ANR	1903013	CallExpression	Z_STRLEN_P ( type )		1902769	0					
ANR	1903014	Callee	Z_STRLEN_P		1902769	0					
ANR	1903015	Identifier	Z_STRLEN_P		1902769	0					
ANR	1903016	ArgumentList	type		1902769	1					
ANR	1903017	Argument	type		1902769	0					
ANR	1903018	Identifier	type		1902769	0					
ANR	1903019	ExpressionStatement	efree ( objid_query -> vars )	996:5:30257:30281	1902769	1	True				
ANR	1903020	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903021	Callee	efree		1902769	0					
ANR	1903022	Identifier	efree		1902769	0					
ANR	1903023	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903024	Argument	objid_query -> vars		1902769	0					
ANR	1903025	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903026	Identifier	objid_query		1902769	0					
ANR	1903027	Identifier	vars		1902769	1					
ANR	1903028	ReturnStatement	return FALSE ;	997:5:30288:30300	1902769	2	True				
ANR	1903029	Identifier	FALSE		1902769	0					
ANR	1903030	ExpressionStatement	pptr = Z_STRVAL_P ( type )	999:4:30312:30335	1902769	1	True				
ANR	1903031	AssignmentExpression	pptr = Z_STRVAL_P ( type )		1902769	0		=			
ANR	1903032	Identifier	pptr		1902769	0					
ANR	1903033	CallExpression	Z_STRVAL_P ( type )		1902769	1					
ANR	1903034	Callee	Z_STRVAL_P		1902769	0					
ANR	1903035	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903036	ArgumentList	type		1902769	1					
ANR	1903037	Argument	type		1902769	0					
ANR	1903038	Identifier	type		1902769	0					
ANR	1903039	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . type = * pptr	1000:4:30341:30391	1902769	2	True				
ANR	1903040	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . type = * pptr		1902769	0		=			
ANR	1903041	MemberAccess	objid_query -> vars [ objid_query -> count ] . type		1902769	0					
ANR	1903042	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1903043	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903044	Identifier	objid_query		1902769	0					
ANR	1903045	Identifier	vars		1902769	1					
ANR	1903046	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903047	Identifier	objid_query		1902769	0					
ANR	1903048	Identifier	count		1902769	1					
ANR	1903049	Identifier	type		1902769	1					
ANR	1903050	UnaryOperationExpression	* pptr		1902769	1					
ANR	1903051	UnaryOperator	*		1902769	0					
ANR	1903052	Identifier	pptr		1902769	1					
ANR	1903053	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . value = Z_STRVAL_P ( value )	1001:4:30397:30460	1902769	3	True				
ANR	1903054	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . value = Z_STRVAL_P ( value )		1902769	0		=			
ANR	1903055	MemberAccess	objid_query -> vars [ objid_query -> count ] . value		1902769	0					
ANR	1903056	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1903057	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903058	Identifier	objid_query		1902769	0					
ANR	1903059	Identifier	vars		1902769	1					
ANR	1903060	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903061	Identifier	objid_query		1902769	0					
ANR	1903062	Identifier	count		1902769	1					
ANR	1903063	Identifier	value		1902769	1					
ANR	1903064	CallExpression	Z_STRVAL_P ( value )		1902769	1					
ANR	1903065	Callee	Z_STRVAL_P		1902769	0					
ANR	1903066	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903067	ArgumentList	value		1902769	1					
ANR	1903068	Argument	value		1902769	0					
ANR	1903069	Identifier	value		1902769	0					
ANR	1903070	ElseStatement	else		1902769	0					
ANR	1903071	CompoundStatement		40:10:1249:1249	1902769	0					
ANR	1903072	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Single objid and multiple type or values are not supported"" )"	1003:4:30478:30573	1902769	0	True				
ANR	1903073	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Single objid and multiple type or values are not supported"" )"		1902769	0					
ANR	1903074	Callee	php_error_docref		1902769	0					
ANR	1903075	Identifier	php_error_docref		1902769	0					
ANR	1903076	ArgumentList	NULL		1902769	1					
ANR	1903077	Argument	NULL		1902769	0					
ANR	1903078	Identifier	NULL		1902769	0					
ANR	1903079	Argument	E_WARNING		1902769	1					
ANR	1903080	Identifier	E_WARNING		1902769	0					
ANR	1903081	Argument	"""Single objid and multiple type or values are not supported"""		1902769	2					
ANR	1903082	PrimaryExpression	"""Single objid and multiple type or values are not supported"""		1902769	0					
ANR	1903083	ExpressionStatement	efree ( objid_query -> vars )	1004:4:30579:30603	1902769	1	True				
ANR	1903084	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903085	Callee	efree		1902769	0					
ANR	1903086	Identifier	efree		1902769	0					
ANR	1903087	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903088	Argument	objid_query -> vars		1902769	0					
ANR	1903089	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903090	Identifier	objid_query		1902769	0					
ANR	1903091	Identifier	vars		1902769	1					
ANR	1903092	ReturnStatement	return FALSE ;	1005:4:30609:30621	1902769	2	True				
ANR	1903093	Identifier	FALSE		1902769	0					
ANR	1903094	ExpressionStatement	objid_query -> count ++	1008:2:30634:30654	1902769	4	True				
ANR	1903095	PostIncDecOperationExpression	objid_query -> count ++		1902769	0					
ANR	1903096	PtrMemberAccess	objid_query -> count		1902769	0					
ANR	1903097	Identifier	objid_query		1902769	0					
ANR	1903098	Identifier	count		1902769	1					
ANR	1903099	IncDec	++		1902769	1					
ANR	1903100	ElseStatement	else		1902769	0					
ANR	1903101	IfStatement	if ( Z_TYPE_P ( oid ) == IS_ARRAY )		1902769	0					
ANR	1903102	Condition	Z_TYPE_P ( oid ) == IS_ARRAY	1009:12:30668:30692	1902769	0	True				
ANR	1903103	EqualityExpression	Z_TYPE_P ( oid ) == IS_ARRAY		1902769	0		==			
ANR	1903104	CallExpression	Z_TYPE_P ( oid )		1902769	0					
ANR	1903105	Callee	Z_TYPE_P		1902769	0					
ANR	1903106	Identifier	Z_TYPE_P		1902769	0					
ANR	1903107	ArgumentList	oid		1902769	1					
ANR	1903108	Argument	oid		1902769	0					
ANR	1903109	Identifier	oid		1902769	0					
ANR	1903110	Identifier	IS_ARRAY		1902769	1					
ANR	1903111	CompoundStatement		47:39:1472:1472	1902769	1					
ANR	1903112	IfStatement	if ( zend_hash_num_elements ( Z_ARRVAL_P ( oid ) ) == 0 )		1902769	0					
ANR	1903113	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( oid ) ) == 0	1010:6:30728:30771	1902769	0	True				
ANR	1903114	EqualityExpression	zend_hash_num_elements ( Z_ARRVAL_P ( oid ) ) == 0		1902769	0		==			
ANR	1903115	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( oid ) )		1902769	0					
ANR	1903116	Callee	zend_hash_num_elements		1902769	0					
ANR	1903117	Identifier	zend_hash_num_elements		1902769	0					
ANR	1903118	ArgumentList	Z_ARRVAL_P ( oid )		1902769	1					
ANR	1903119	Argument	Z_ARRVAL_P ( oid )		1902769	0					
ANR	1903120	CallExpression	Z_ARRVAL_P ( oid )		1902769	0					
ANR	1903121	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903122	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903123	ArgumentList	oid		1902769	1					
ANR	1903124	Argument	oid		1902769	0					
ANR	1903125	Identifier	oid		1902769	0					
ANR	1903126	PrimaryExpression	0		1902769	1					
ANR	1903127	CompoundStatement		48:52:1551:1551	1902769	1					
ANR	1903128	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Got empty OID array"" )"	1011:3:30779:30835	1902769	0	True				
ANR	1903129	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Got empty OID array"" )"		1902769	0					
ANR	1903130	Callee	php_error_docref		1902769	0					
ANR	1903131	Identifier	php_error_docref		1902769	0					
ANR	1903132	ArgumentList	NULL		1902769	1					
ANR	1903133	Argument	NULL		1902769	0					
ANR	1903134	Identifier	NULL		1902769	0					
ANR	1903135	Argument	E_WARNING		1902769	1					
ANR	1903136	Identifier	E_WARNING		1902769	0					
ANR	1903137	Argument	"""Got empty OID array"""		1902769	2					
ANR	1903138	PrimaryExpression	"""Got empty OID array"""		1902769	0					
ANR	1903139	ReturnStatement	return FALSE ;	1012:3:30840:30852	1902769	1	True				
ANR	1903140	Identifier	FALSE		1902769	0					
ANR	1903141	ExpressionStatement	objid_query -> vars = ( snmpobjarg * ) emalloc ( sizeof ( snmpobjarg ) * zend_hash_num_elements ( Z_ARRVAL_P ( oid ) ) )	1014:2:30860:30963	1902769	1	True				
ANR	1903142	AssignmentExpression	objid_query -> vars = ( snmpobjarg * ) emalloc ( sizeof ( snmpobjarg ) * zend_hash_num_elements ( Z_ARRVAL_P ( oid ) ) )		1902769	0		=			
ANR	1903143	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903144	Identifier	objid_query		1902769	0					
ANR	1903145	Identifier	vars		1902769	1					
ANR	1903146	CastExpression	( snmpobjarg * ) emalloc ( sizeof ( snmpobjarg ) * zend_hash_num_elements ( Z_ARRVAL_P ( oid ) ) )		1902769	1					
ANR	1903147	CastTarget	snmpobjarg *		1902769	0					
ANR	1903148	CallExpression	emalloc ( sizeof ( snmpobjarg ) * zend_hash_num_elements ( Z_ARRVAL_P ( oid ) ) )		1902769	1					
ANR	1903149	Callee	emalloc		1902769	0					
ANR	1903150	Identifier	emalloc		1902769	0					
ANR	1903151	ArgumentList	sizeof ( snmpobjarg ) * zend_hash_num_elements ( Z_ARRVAL_P ( oid ) )		1902769	1					
ANR	1903152	Argument	sizeof ( snmpobjarg ) * zend_hash_num_elements ( Z_ARRVAL_P ( oid ) )		1902769	0					
ANR	1903153	MultiplicativeExpression	sizeof ( snmpobjarg ) * zend_hash_num_elements ( Z_ARRVAL_P ( oid ) )		1902769	0		*			
ANR	1903154	SizeofExpression	sizeof ( snmpobjarg )		1902769	0					
ANR	1903155	Sizeof	sizeof		1902769	0					
ANR	1903156	SizeofOperand	snmpobjarg		1902769	1					
ANR	1903157	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( oid ) )		1902769	1					
ANR	1903158	Callee	zend_hash_num_elements		1902769	0					
ANR	1903159	Identifier	zend_hash_num_elements		1902769	0					
ANR	1903160	ArgumentList	Z_ARRVAL_P ( oid )		1902769	1					
ANR	1903161	Argument	Z_ARRVAL_P ( oid )		1902769	0					
ANR	1903162	CallExpression	Z_ARRVAL_P ( oid )		1902769	0					
ANR	1903163	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903164	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903165	ArgumentList	oid		1902769	1					
ANR	1903166	Argument	oid		1902769	0					
ANR	1903167	Identifier	oid		1902769	0					
ANR	1903168	IfStatement	if ( objid_query -> vars == NULL )		1902769	2					
ANR	1903169	Condition	objid_query -> vars == NULL	1015:6:30971:30995	1902769	0	True				
ANR	1903170	EqualityExpression	objid_query -> vars == NULL		1902769	0		==			
ANR	1903171	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903172	Identifier	objid_query		1902769	0					
ANR	1903173	Identifier	vars		1902769	1					
ANR	1903174	Identifier	NULL		1902769	1					
ANR	1903175	CompoundStatement		53:33:1775:1775	1902769	1					
ANR	1903176	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed while parsing oid array: %s"" , strerror ( errno ) )"	1016:3:31003:31101	1902769	0	True				
ANR	1903177	CallExpression	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed while parsing oid array: %s"" , strerror ( errno ) )"		1902769	0					
ANR	1903178	Callee	php_error_docref		1902769	0					
ANR	1903179	Identifier	php_error_docref		1902769	0					
ANR	1903180	ArgumentList	NULL		1902769	1					
ANR	1903181	Argument	NULL		1902769	0					
ANR	1903182	Identifier	NULL		1902769	0					
ANR	1903183	Argument	E_WARNING		1902769	1					
ANR	1903184	Identifier	E_WARNING		1902769	0					
ANR	1903185	Argument	"""emalloc() failed while parsing oid array: %s"""		1902769	2					
ANR	1903186	PrimaryExpression	"""emalloc() failed while parsing oid array: %s"""		1902769	0					
ANR	1903187	Argument	strerror ( errno )		1902769	3					
ANR	1903188	CallExpression	strerror ( errno )		1902769	0					
ANR	1903189	Callee	strerror		1902769	0					
ANR	1903190	Identifier	strerror		1902769	0					
ANR	1903191	ArgumentList	errno		1902769	1					
ANR	1903192	Argument	errno		1902769	0					
ANR	1903193	Identifier	errno		1902769	0					
ANR	1903194	ExpressionStatement	efree ( objid_query -> vars )	1017:3:31106:31130	1902769	1	True				
ANR	1903195	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903196	Callee	efree		1902769	0					
ANR	1903197	Identifier	efree		1902769	0					
ANR	1903198	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903199	Argument	objid_query -> vars		1902769	0					
ANR	1903200	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903201	Identifier	objid_query		1902769	0					
ANR	1903202	Identifier	vars		1902769	1					
ANR	1903203	ReturnStatement	return FALSE ;	1018:3:31135:31147	1902769	2	True				
ANR	1903204	Identifier	FALSE		1902769	0					
ANR	1903205	ExpressionStatement	objid_query -> array_output = ( ( st & SNMP_CMD_SET ) ? FALSE : TRUE )	1020:2:31155:31221	1902769	3	True				
ANR	1903206	AssignmentExpression	objid_query -> array_output = ( ( st & SNMP_CMD_SET ) ? FALSE : TRUE )		1902769	0		=			
ANR	1903207	PtrMemberAccess	objid_query -> array_output		1902769	0					
ANR	1903208	Identifier	objid_query		1902769	0					
ANR	1903209	Identifier	array_output		1902769	1					
ANR	1903210	ConditionalExpression	( st & SNMP_CMD_SET ) ? FALSE : TRUE		1902769	1					
ANR	1903211	Condition	st & SNMP_CMD_SET		1902769	0					
ANR	1903212	BitAndExpression	st & SNMP_CMD_SET		1902769	0		&			
ANR	1903213	Identifier	st		1902769	0					
ANR	1903214	Identifier	SNMP_CMD_SET		1902769	1					
ANR	1903215	Identifier	FALSE		1902769	1					
ANR	1903216	Identifier	TRUE		1902769	2					
ANR	1903217	Statement	ZEND_HASH_FOREACH_VAL	1021:2:31225:31245	1902769	4	True				
ANR	1903218	Statement	(	1021:23:31246:31246	1902769	5	True				
ANR	1903219	Statement	Z_ARRVAL_P	1021:24:31247:31256	1902769	6	True				
ANR	1903220	Statement	(	1021:34:31257:31257	1902769	7	True				
ANR	1903221	Statement	oid	1021:35:31258:31260	1902769	8	True				
ANR	1903222	Statement	)	1021:38:31261:31261	1902769	9	True				
ANR	1903223	Statement	","	1021:39:31262:31262	1902769	10	True				
ANR	1903224	Statement	tmp_oid	1021:41:31264:31270	1902769	11	True				
ANR	1903225	Statement	)	1021:48:31271:31271	1902769	12	True				
ANR	1903226	CompoundStatement		59:50:2050:2050	1902769	13					
ANR	1903227	ExpressionStatement	convert_to_string_ex ( tmp_oid )	1022:3:31278:31307	1902769	0	True				
ANR	1903228	CallExpression	convert_to_string_ex ( tmp_oid )		1902769	0					
ANR	1903229	Callee	convert_to_string_ex		1902769	0					
ANR	1903230	Identifier	convert_to_string_ex		1902769	0					
ANR	1903231	ArgumentList	tmp_oid		1902769	1					
ANR	1903232	Argument	tmp_oid		1902769	0					
ANR	1903233	Identifier	tmp_oid		1902769	0					
ANR	1903234	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . oid = Z_STRVAL_P ( tmp_oid )	1023:3:31312:31375	1902769	1	True				
ANR	1903235	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . oid = Z_STRVAL_P ( tmp_oid )		1902769	0		=			
ANR	1903236	MemberAccess	objid_query -> vars [ objid_query -> count ] . oid		1902769	0					
ANR	1903237	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1903238	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903239	Identifier	objid_query		1902769	0					
ANR	1903240	Identifier	vars		1902769	1					
ANR	1903241	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903242	Identifier	objid_query		1902769	0					
ANR	1903243	Identifier	count		1902769	1					
ANR	1903244	Identifier	oid		1902769	1					
ANR	1903245	CallExpression	Z_STRVAL_P ( tmp_oid )		1902769	1					
ANR	1903246	Callee	Z_STRVAL_P		1902769	0					
ANR	1903247	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903248	ArgumentList	tmp_oid		1902769	1					
ANR	1903249	Argument	tmp_oid		1902769	0					
ANR	1903250	Identifier	tmp_oid		1902769	0					
ANR	1903251	IfStatement	if ( st & SNMP_CMD_SET )		1902769	2					
ANR	1903252	Condition	st & SNMP_CMD_SET	1024:7:31384:31400	1902769	0	True				
ANR	1903253	BitAndExpression	st & SNMP_CMD_SET		1902769	0		&			
ANR	1903254	Identifier	st		1902769	0					
ANR	1903255	Identifier	SNMP_CMD_SET		1902769	1					
ANR	1903256	CompoundStatement		62:26:2180:2180	1902769	1					
ANR	1903257	IfStatement	if ( Z_TYPE_P ( type ) == IS_STRING )		1902769	0					
ANR	1903258	Condition	Z_TYPE_P ( type ) == IS_STRING	1025:8:31413:31439	1902769	0	True				
ANR	1903259	EqualityExpression	Z_TYPE_P ( type ) == IS_STRING		1902769	0		==			
ANR	1903260	CallExpression	Z_TYPE_P ( type )		1902769	0					
ANR	1903261	Callee	Z_TYPE_P		1902769	0					
ANR	1903262	Identifier	Z_TYPE_P		1902769	0					
ANR	1903263	ArgumentList	type		1902769	1					
ANR	1903264	Argument	type		1902769	0					
ANR	1903265	Identifier	type		1902769	0					
ANR	1903266	Identifier	IS_STRING		1902769	1					
ANR	1903267	CompoundStatement		63:37:2219:2219	1902769	1					
ANR	1903268	ExpressionStatement	pptr = Z_STRVAL_P ( type )	1026:5:31449:31472	1902769	0	True				
ANR	1903269	AssignmentExpression	pptr = Z_STRVAL_P ( type )		1902769	0		=			
ANR	1903270	Identifier	pptr		1902769	0					
ANR	1903271	CallExpression	Z_STRVAL_P ( type )		1902769	1					
ANR	1903272	Callee	Z_STRVAL_P		1902769	0					
ANR	1903273	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903274	ArgumentList	type		1902769	1					
ANR	1903275	Argument	type		1902769	0					
ANR	1903276	Identifier	type		1902769	0					
ANR	1903277	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . type = * pptr	1027:5:31479:31529	1902769	1	True				
ANR	1903278	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . type = * pptr		1902769	0		=			
ANR	1903279	MemberAccess	objid_query -> vars [ objid_query -> count ] . type		1902769	0					
ANR	1903280	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1903281	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903282	Identifier	objid_query		1902769	0					
ANR	1903283	Identifier	vars		1902769	1					
ANR	1903284	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903285	Identifier	objid_query		1902769	0					
ANR	1903286	Identifier	count		1902769	1					
ANR	1903287	Identifier	type		1902769	1					
ANR	1903288	UnaryOperationExpression	* pptr		1902769	1					
ANR	1903289	UnaryOperator	*		1902769	0					
ANR	1903290	Identifier	pptr		1902769	1					
ANR	1903291	ElseStatement	else		1902769	0					
ANR	1903292	IfStatement	if ( Z_TYPE_P ( type ) == IS_ARRAY )		1902769	0					
ANR	1903293	Condition	Z_TYPE_P ( type ) == IS_ARRAY	1028:15:31546:31571	1902769	0	True				
ANR	1903294	EqualityExpression	Z_TYPE_P ( type ) == IS_ARRAY		1902769	0		==			
ANR	1903295	CallExpression	Z_TYPE_P ( type )		1902769	0					
ANR	1903296	Callee	Z_TYPE_P		1902769	0					
ANR	1903297	Identifier	Z_TYPE_P		1902769	0					
ANR	1903298	ArgumentList	type		1902769	1					
ANR	1903299	Argument	type		1902769	0					
ANR	1903300	Identifier	type		1902769	0					
ANR	1903301	Identifier	IS_ARRAY		1902769	1					
ANR	1903302	CompoundStatement		66:43:2351:2351	1902769	1					
ANR	1903303	WhileStatement	while ( idx_type < Z_ARRVAL_P ( type ) -> nNumUsed )		1902769	0					
ANR	1903304	Condition	idx_type < Z_ARRVAL_P ( type ) -> nNumUsed	1029:12:31588:31624	1902769	0	True				
ANR	1903305	RelationalExpression	idx_type < Z_ARRVAL_P ( type ) -> nNumUsed		1902769	0		<			
ANR	1903306	Identifier	idx_type		1902769	0					
ANR	1903307	PtrMemberAccess	Z_ARRVAL_P ( type ) -> nNumUsed		1902769	1					
ANR	1903308	CallExpression	Z_ARRVAL_P ( type )		1902769	0					
ANR	1903309	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903310	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903311	ArgumentList	type		1902769	1					
ANR	1903312	Argument	type		1902769	0					
ANR	1903313	Identifier	type		1902769	0					
ANR	1903314	Identifier	nNumUsed		1902769	1					
ANR	1903315	CompoundStatement		67:51:2404:2404	1902769	1					
ANR	1903316	ExpressionStatement	tmp_type = & Z_ARRVAL_P ( type ) -> arData [ idx_type ] . val	1030:6:31635:31685	1902769	0	True				
ANR	1903317	AssignmentExpression	tmp_type = & Z_ARRVAL_P ( type ) -> arData [ idx_type ] . val		1902769	0		=			
ANR	1903318	Identifier	tmp_type		1902769	0					
ANR	1903319	UnaryOperationExpression	& Z_ARRVAL_P ( type ) -> arData [ idx_type ] . val		1902769	1					
ANR	1903320	UnaryOperator	&		1902769	0					
ANR	1903321	MemberAccess	Z_ARRVAL_P ( type ) -> arData [ idx_type ] . val		1902769	1					
ANR	1903322	ArrayIndexing	Z_ARRVAL_P ( type ) -> arData [ idx_type ]		1902769	0					
ANR	1903323	PtrMemberAccess	Z_ARRVAL_P ( type ) -> arData		1902769	0					
ANR	1903324	CallExpression	Z_ARRVAL_P ( type )		1902769	0					
ANR	1903325	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903326	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903327	ArgumentList	type		1902769	1					
ANR	1903328	Argument	type		1902769	0					
ANR	1903329	Identifier	type		1902769	0					
ANR	1903330	Identifier	arData		1902769	1					
ANR	1903331	Identifier	idx_type		1902769	1					
ANR	1903332	Identifier	val		1902769	1					
ANR	1903333	IfStatement	if ( Z_TYPE_P ( tmp_type ) != IS_UNDEF )		1902769	1					
ANR	1903334	Condition	Z_TYPE_P ( tmp_type ) != IS_UNDEF	1031:10:31697:31726	1902769	0	True				
ANR	1903335	EqualityExpression	Z_TYPE_P ( tmp_type ) != IS_UNDEF		1902769	0		!=			
ANR	1903336	CallExpression	Z_TYPE_P ( tmp_type )		1902769	0					
ANR	1903337	Callee	Z_TYPE_P		1902769	0					
ANR	1903338	Identifier	Z_TYPE_P		1902769	0					
ANR	1903339	ArgumentList	tmp_type		1902769	1					
ANR	1903340	Argument	tmp_type		1902769	0					
ANR	1903341	Identifier	tmp_type		1902769	0					
ANR	1903342	Identifier	IS_UNDEF		1902769	1					
ANR	1903343	CompoundStatement		69:42:2506:2506	1902769	1					
ANR	1903344	BreakStatement	break ;	1032:7:31738:31743	1902769	0	True				
ANR	1903345	ExpressionStatement	idx_type ++	1034:6:31759:31769	1902769	2	True				
ANR	1903346	PostIncDecOperationExpression	idx_type ++		1902769	0					
ANR	1903347	Identifier	idx_type		1902769	0					
ANR	1903348	IncDec	++		1902769	1					
ANR	1903349	IfStatement	if ( idx_type < Z_ARRVAL_P ( type ) -> nNumUsed )		1902769	1					
ANR	1903350	Condition	idx_type < Z_ARRVAL_P ( type ) -> nNumUsed	1036:9:31787:31823	1902769	0	True				
ANR	1903351	RelationalExpression	idx_type < Z_ARRVAL_P ( type ) -> nNumUsed		1902769	0		<			
ANR	1903352	Identifier	idx_type		1902769	0					
ANR	1903353	PtrMemberAccess	Z_ARRVAL_P ( type ) -> nNumUsed		1902769	1					
ANR	1903354	CallExpression	Z_ARRVAL_P ( type )		1902769	0					
ANR	1903355	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903356	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903357	ArgumentList	type		1902769	1					
ANR	1903358	Argument	type		1902769	0					
ANR	1903359	Identifier	type		1902769	0					
ANR	1903360	Identifier	nNumUsed		1902769	1					
ANR	1903361	CompoundStatement		74:48:2603:2603	1902769	1					
ANR	1903362	ExpressionStatement	convert_to_string_ex ( tmp_type )	1037:6:31834:31864	1902769	0	True				
ANR	1903363	CallExpression	convert_to_string_ex ( tmp_type )		1902769	0					
ANR	1903364	Callee	convert_to_string_ex		1902769	0					
ANR	1903365	Identifier	convert_to_string_ex		1902769	0					
ANR	1903366	ArgumentList	tmp_type		1902769	1					
ANR	1903367	Argument	tmp_type		1902769	0					
ANR	1903368	Identifier	tmp_type		1902769	0					
ANR	1903369	IfStatement	if ( Z_STRLEN_P ( tmp_type ) != 1 )		1902769	1					
ANR	1903370	Condition	Z_STRLEN_P ( tmp_type ) != 1	1038:10:31876:31900	1902769	0	True				
ANR	1903371	EqualityExpression	Z_STRLEN_P ( tmp_type ) != 1		1902769	0		!=			
ANR	1903372	CallExpression	Z_STRLEN_P ( tmp_type )		1902769	0					
ANR	1903373	Callee	Z_STRLEN_P		1902769	0					
ANR	1903374	Identifier	Z_STRLEN_P		1902769	0					
ANR	1903375	ArgumentList	tmp_type		1902769	1					
ANR	1903376	Argument	tmp_type		1902769	0					
ANR	1903377	Identifier	tmp_type		1902769	0					
ANR	1903378	PrimaryExpression	1		1902769	1					
ANR	1903379	CompoundStatement		76:37:2680:2680	1902769	1					
ANR	1903380	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""'%s': bogus type '%s', should be single char, got %u"" , Z_STRVAL_P ( tmp_oid ) , Z_STRVAL_P ( tmp_type ) , Z_STRLEN_P ( tmp_type ) )"	1039:7:31912:32066	1902769	0	True				
ANR	1903381	CallExpression	"php_error_docref ( NULL , E_WARNING , ""'%s': bogus type '%s', should be single char, got %u"" , Z_STRVAL_P ( tmp_oid ) , Z_STRVAL_P ( tmp_type ) , Z_STRLEN_P ( tmp_type ) )"		1902769	0					
ANR	1903382	Callee	php_error_docref		1902769	0					
ANR	1903383	Identifier	php_error_docref		1902769	0					
ANR	1903384	ArgumentList	NULL		1902769	1					
ANR	1903385	Argument	NULL		1902769	0					
ANR	1903386	Identifier	NULL		1902769	0					
ANR	1903387	Argument	E_WARNING		1902769	1					
ANR	1903388	Identifier	E_WARNING		1902769	0					
ANR	1903389	Argument	"""'%s': bogus type '%s', should be single char, got %u"""		1902769	2					
ANR	1903390	PrimaryExpression	"""'%s': bogus type '%s', should be single char, got %u"""		1902769	0					
ANR	1903391	Argument	Z_STRVAL_P ( tmp_oid )		1902769	3					
ANR	1903392	CallExpression	Z_STRVAL_P ( tmp_oid )		1902769	0					
ANR	1903393	Callee	Z_STRVAL_P		1902769	0					
ANR	1903394	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903395	ArgumentList	tmp_oid		1902769	1					
ANR	1903396	Argument	tmp_oid		1902769	0					
ANR	1903397	Identifier	tmp_oid		1902769	0					
ANR	1903398	Argument	Z_STRVAL_P ( tmp_type )		1902769	4					
ANR	1903399	CallExpression	Z_STRVAL_P ( tmp_type )		1902769	0					
ANR	1903400	Callee	Z_STRVAL_P		1902769	0					
ANR	1903401	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903402	ArgumentList	tmp_type		1902769	1					
ANR	1903403	Argument	tmp_type		1902769	0					
ANR	1903404	Identifier	tmp_type		1902769	0					
ANR	1903405	Argument	Z_STRLEN_P ( tmp_type )		1902769	5					
ANR	1903406	CallExpression	Z_STRLEN_P ( tmp_type )		1902769	0					
ANR	1903407	Callee	Z_STRLEN_P		1902769	0					
ANR	1903408	Identifier	Z_STRLEN_P		1902769	0					
ANR	1903409	ArgumentList	tmp_type		1902769	1					
ANR	1903410	Argument	tmp_type		1902769	0					
ANR	1903411	Identifier	tmp_type		1902769	0					
ANR	1903412	ExpressionStatement	efree ( objid_query -> vars )	1040:7:32075:32099	1902769	1	True				
ANR	1903413	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903414	Callee	efree		1902769	0					
ANR	1903415	Identifier	efree		1902769	0					
ANR	1903416	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903417	Argument	objid_query -> vars		1902769	0					
ANR	1903418	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903419	Identifier	objid_query		1902769	0					
ANR	1903420	Identifier	vars		1902769	1					
ANR	1903421	ReturnStatement	return FALSE ;	1041:7:32108:32120	1902769	2	True				
ANR	1903422	Identifier	FALSE		1902769	0					
ANR	1903423	ExpressionStatement	pptr = Z_STRVAL_P ( tmp_type )	1043:6:32136:32163	1902769	2	True				
ANR	1903424	AssignmentExpression	pptr = Z_STRVAL_P ( tmp_type )		1902769	0		=			
ANR	1903425	Identifier	pptr		1902769	0					
ANR	1903426	CallExpression	Z_STRVAL_P ( tmp_type )		1902769	1					
ANR	1903427	Callee	Z_STRVAL_P		1902769	0					
ANR	1903428	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903429	ArgumentList	tmp_type		1902769	1					
ANR	1903430	Argument	tmp_type		1902769	0					
ANR	1903431	Identifier	tmp_type		1902769	0					
ANR	1903432	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . type = * pptr	1044:6:32171:32221	1902769	3	True				
ANR	1903433	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . type = * pptr		1902769	0		=			
ANR	1903434	MemberAccess	objid_query -> vars [ objid_query -> count ] . type		1902769	0					
ANR	1903435	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1903436	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903437	Identifier	objid_query		1902769	0					
ANR	1903438	Identifier	vars		1902769	1					
ANR	1903439	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903440	Identifier	objid_query		1902769	0					
ANR	1903441	Identifier	count		1902769	1					
ANR	1903442	Identifier	type		1902769	1					
ANR	1903443	UnaryOperationExpression	* pptr		1902769	1					
ANR	1903444	UnaryOperator	*		1902769	0					
ANR	1903445	Identifier	pptr		1902769	1					
ANR	1903446	ExpressionStatement	idx_type ++	1045:6:32229:32239	1902769	4	True				
ANR	1903447	PostIncDecOperationExpression	idx_type ++		1902769	0					
ANR	1903448	Identifier	idx_type		1902769	0					
ANR	1903449	IncDec	++		1902769	1					
ANR	1903450	ElseStatement	else		1902769	0					
ANR	1903451	CompoundStatement		84:12:3030:3030	1902769	0					
ANR	1903452	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""'%s': no type set"" , Z_STRVAL_P ( tmp_oid ) )"	1047:6:32261:32336	1902769	0	True				
ANR	1903453	CallExpression	"php_error_docref ( NULL , E_WARNING , ""'%s': no type set"" , Z_STRVAL_P ( tmp_oid ) )"		1902769	0					
ANR	1903454	Callee	php_error_docref		1902769	0					
ANR	1903455	Identifier	php_error_docref		1902769	0					
ANR	1903456	ArgumentList	NULL		1902769	1					
ANR	1903457	Argument	NULL		1902769	0					
ANR	1903458	Identifier	NULL		1902769	0					
ANR	1903459	Argument	E_WARNING		1902769	1					
ANR	1903460	Identifier	E_WARNING		1902769	0					
ANR	1903461	Argument	"""'%s': no type set"""		1902769	2					
ANR	1903462	PrimaryExpression	"""'%s': no type set"""		1902769	0					
ANR	1903463	Argument	Z_STRVAL_P ( tmp_oid )		1902769	3					
ANR	1903464	CallExpression	Z_STRVAL_P ( tmp_oid )		1902769	0					
ANR	1903465	Callee	Z_STRVAL_P		1902769	0					
ANR	1903466	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903467	ArgumentList	tmp_oid		1902769	1					
ANR	1903468	Argument	tmp_oid		1902769	0					
ANR	1903469	Identifier	tmp_oid		1902769	0					
ANR	1903470	ExpressionStatement	efree ( objid_query -> vars )	1048:6:32344:32368	1902769	1	True				
ANR	1903471	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903472	Callee	efree		1902769	0					
ANR	1903473	Identifier	efree		1902769	0					
ANR	1903474	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903475	Argument	objid_query -> vars		1902769	0					
ANR	1903476	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903477	Identifier	objid_query		1902769	0					
ANR	1903478	Identifier	vars		1902769	1					
ANR	1903479	ReturnStatement	return FALSE ;	1049:6:32376:32388	1902769	2	True				
ANR	1903480	Identifier	FALSE		1902769	0					
ANR	1903481	IfStatement	if ( Z_TYPE_P ( value ) == IS_STRING )		1902769	1					
ANR	1903482	Condition	Z_TYPE_P ( value ) == IS_STRING	1053:8:32412:32439	1902769	0	True				
ANR	1903483	EqualityExpression	Z_TYPE_P ( value ) == IS_STRING		1902769	0		==			
ANR	1903484	CallExpression	Z_TYPE_P ( value )		1902769	0					
ANR	1903485	Callee	Z_TYPE_P		1902769	0					
ANR	1903486	Identifier	Z_TYPE_P		1902769	0					
ANR	1903487	ArgumentList	value		1902769	1					
ANR	1903488	Argument	value		1902769	0					
ANR	1903489	Identifier	value		1902769	0					
ANR	1903490	Identifier	IS_STRING		1902769	1					
ANR	1903491	CompoundStatement		91:38:3219:3219	1902769	1					
ANR	1903492	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . value = Z_STRVAL_P ( value )	1054:5:32449:32512	1902769	0	True				
ANR	1903493	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . value = Z_STRVAL_P ( value )		1902769	0		=			
ANR	1903494	MemberAccess	objid_query -> vars [ objid_query -> count ] . value		1902769	0					
ANR	1903495	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1903496	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903497	Identifier	objid_query		1902769	0					
ANR	1903498	Identifier	vars		1902769	1					
ANR	1903499	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903500	Identifier	objid_query		1902769	0					
ANR	1903501	Identifier	count		1902769	1					
ANR	1903502	Identifier	value		1902769	1					
ANR	1903503	CallExpression	Z_STRVAL_P ( value )		1902769	1					
ANR	1903504	Callee	Z_STRVAL_P		1902769	0					
ANR	1903505	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903506	ArgumentList	value		1902769	1					
ANR	1903507	Argument	value		1902769	0					
ANR	1903508	Identifier	value		1902769	0					
ANR	1903509	ElseStatement	else		1902769	0					
ANR	1903510	IfStatement	if ( Z_TYPE_P ( value ) == IS_ARRAY )		1902769	0					
ANR	1903511	Condition	Z_TYPE_P ( value ) == IS_ARRAY	1055:15:32529:32555	1902769	0	True				
ANR	1903512	EqualityExpression	Z_TYPE_P ( value ) == IS_ARRAY		1902769	0		==			
ANR	1903513	CallExpression	Z_TYPE_P ( value )		1902769	0					
ANR	1903514	Callee	Z_TYPE_P		1902769	0					
ANR	1903515	Identifier	Z_TYPE_P		1902769	0					
ANR	1903516	ArgumentList	value		1902769	1					
ANR	1903517	Argument	value		1902769	0					
ANR	1903518	Identifier	value		1902769	0					
ANR	1903519	Identifier	IS_ARRAY		1902769	1					
ANR	1903520	CompoundStatement		93:44:3335:3335	1902769	1					
ANR	1903521	WhileStatement	while ( idx_value < Z_ARRVAL_P ( value ) -> nNumUsed )		1902769	0					
ANR	1903522	Condition	idx_value < Z_ARRVAL_P ( value ) -> nNumUsed	1056:12:32572:32610	1902769	0	True				
ANR	1903523	RelationalExpression	idx_value < Z_ARRVAL_P ( value ) -> nNumUsed		1902769	0		<			
ANR	1903524	Identifier	idx_value		1902769	0					
ANR	1903525	PtrMemberAccess	Z_ARRVAL_P ( value ) -> nNumUsed		1902769	1					
ANR	1903526	CallExpression	Z_ARRVAL_P ( value )		1902769	0					
ANR	1903527	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903528	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903529	ArgumentList	value		1902769	1					
ANR	1903530	Argument	value		1902769	0					
ANR	1903531	Identifier	value		1902769	0					
ANR	1903532	Identifier	nNumUsed		1902769	1					
ANR	1903533	CompoundStatement		94:53:3390:3390	1902769	1					
ANR	1903534	ExpressionStatement	tmp_value = & Z_ARRVAL_P ( value ) -> arData [ idx_value ] . val	1057:6:32621:32674	1902769	0	True				
ANR	1903535	AssignmentExpression	tmp_value = & Z_ARRVAL_P ( value ) -> arData [ idx_value ] . val		1902769	0		=			
ANR	1903536	Identifier	tmp_value		1902769	0					
ANR	1903537	UnaryOperationExpression	& Z_ARRVAL_P ( value ) -> arData [ idx_value ] . val		1902769	1					
ANR	1903538	UnaryOperator	&		1902769	0					
ANR	1903539	MemberAccess	Z_ARRVAL_P ( value ) -> arData [ idx_value ] . val		1902769	1					
ANR	1903540	ArrayIndexing	Z_ARRVAL_P ( value ) -> arData [ idx_value ]		1902769	0					
ANR	1903541	PtrMemberAccess	Z_ARRVAL_P ( value ) -> arData		1902769	0					
ANR	1903542	CallExpression	Z_ARRVAL_P ( value )		1902769	0					
ANR	1903543	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903544	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903545	ArgumentList	value		1902769	1					
ANR	1903546	Argument	value		1902769	0					
ANR	1903547	Identifier	value		1902769	0					
ANR	1903548	Identifier	arData		1902769	1					
ANR	1903549	Identifier	idx_value		1902769	1					
ANR	1903550	Identifier	val		1902769	1					
ANR	1903551	IfStatement	if ( Z_TYPE_P ( tmp_value ) != IS_UNDEF )		1902769	1					
ANR	1903552	Condition	Z_TYPE_P ( tmp_value ) != IS_UNDEF	1058:10:32686:32716	1902769	0	True				
ANR	1903553	EqualityExpression	Z_TYPE_P ( tmp_value ) != IS_UNDEF		1902769	0		!=			
ANR	1903554	CallExpression	Z_TYPE_P ( tmp_value )		1902769	0					
ANR	1903555	Callee	Z_TYPE_P		1902769	0					
ANR	1903556	Identifier	Z_TYPE_P		1902769	0					
ANR	1903557	ArgumentList	tmp_value		1902769	1					
ANR	1903558	Argument	tmp_value		1902769	0					
ANR	1903559	Identifier	tmp_value		1902769	0					
ANR	1903560	Identifier	IS_UNDEF		1902769	1					
ANR	1903561	CompoundStatement		96:43:3496:3496	1902769	1					
ANR	1903562	BreakStatement	break ;	1059:7:32728:32733	1902769	0	True				
ANR	1903563	ExpressionStatement	idx_value ++	1061:6:32749:32760	1902769	2	True				
ANR	1903564	PostIncDecOperationExpression	idx_value ++		1902769	0					
ANR	1903565	Identifier	idx_value		1902769	0					
ANR	1903566	IncDec	++		1902769	1					
ANR	1903567	IfStatement	if ( idx_value < Z_ARRVAL_P ( value ) -> nNumUsed )		1902769	1					
ANR	1903568	Condition	idx_value < Z_ARRVAL_P ( value ) -> nNumUsed	1063:9:32778:32816	1902769	0	True				
ANR	1903569	RelationalExpression	idx_value < Z_ARRVAL_P ( value ) -> nNumUsed		1902769	0		<			
ANR	1903570	Identifier	idx_value		1902769	0					
ANR	1903571	PtrMemberAccess	Z_ARRVAL_P ( value ) -> nNumUsed		1902769	1					
ANR	1903572	CallExpression	Z_ARRVAL_P ( value )		1902769	0					
ANR	1903573	Callee	Z_ARRVAL_P		1902769	0					
ANR	1903574	Identifier	Z_ARRVAL_P		1902769	0					
ANR	1903575	ArgumentList	value		1902769	1					
ANR	1903576	Argument	value		1902769	0					
ANR	1903577	Identifier	value		1902769	0					
ANR	1903578	Identifier	nNumUsed		1902769	1					
ANR	1903579	CompoundStatement		101:50:3596:3596	1902769	1					
ANR	1903580	ExpressionStatement	convert_to_string_ex ( tmp_value )	1064:6:32827:32858	1902769	0	True				
ANR	1903581	CallExpression	convert_to_string_ex ( tmp_value )		1902769	0					
ANR	1903582	Callee	convert_to_string_ex		1902769	0					
ANR	1903583	Identifier	convert_to_string_ex		1902769	0					
ANR	1903584	ArgumentList	tmp_value		1902769	1					
ANR	1903585	Argument	tmp_value		1902769	0					
ANR	1903586	Identifier	tmp_value		1902769	0					
ANR	1903587	ExpressionStatement	objid_query -> vars [ objid_query -> count ] . value = Z_STRVAL_P ( tmp_value )	1065:6:32866:32933	1902769	1	True				
ANR	1903588	AssignmentExpression	objid_query -> vars [ objid_query -> count ] . value = Z_STRVAL_P ( tmp_value )		1902769	0		=			
ANR	1903589	MemberAccess	objid_query -> vars [ objid_query -> count ] . value		1902769	0					
ANR	1903590	ArrayIndexing	objid_query -> vars [ objid_query -> count ]		1902769	0					
ANR	1903591	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903592	Identifier	objid_query		1902769	0					
ANR	1903593	Identifier	vars		1902769	1					
ANR	1903594	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903595	Identifier	objid_query		1902769	0					
ANR	1903596	Identifier	count		1902769	1					
ANR	1903597	Identifier	value		1902769	1					
ANR	1903598	CallExpression	Z_STRVAL_P ( tmp_value )		1902769	1					
ANR	1903599	Callee	Z_STRVAL_P		1902769	0					
ANR	1903600	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903601	ArgumentList	tmp_value		1902769	1					
ANR	1903602	Argument	tmp_value		1902769	0					
ANR	1903603	Identifier	tmp_value		1902769	0					
ANR	1903604	ExpressionStatement	idx_value ++	1066:6:32941:32952	1902769	2	True				
ANR	1903605	PostIncDecOperationExpression	idx_value ++		1902769	0					
ANR	1903606	Identifier	idx_value		1902769	0					
ANR	1903607	IncDec	++		1902769	1					
ANR	1903608	ElseStatement	else		1902769	0					
ANR	1903609	CompoundStatement		105:12:3743:3743	1902769	0					
ANR	1903610	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""'%s': no value set"" , Z_STRVAL_P ( tmp_oid ) )"	1068:6:32974:33050	1902769	0	True				
ANR	1903611	CallExpression	"php_error_docref ( NULL , E_WARNING , ""'%s': no value set"" , Z_STRVAL_P ( tmp_oid ) )"		1902769	0					
ANR	1903612	Callee	php_error_docref		1902769	0					
ANR	1903613	Identifier	php_error_docref		1902769	0					
ANR	1903614	ArgumentList	NULL		1902769	1					
ANR	1903615	Argument	NULL		1902769	0					
ANR	1903616	Identifier	NULL		1902769	0					
ANR	1903617	Argument	E_WARNING		1902769	1					
ANR	1903618	Identifier	E_WARNING		1902769	0					
ANR	1903619	Argument	"""'%s': no value set"""		1902769	2					
ANR	1903620	PrimaryExpression	"""'%s': no value set"""		1902769	0					
ANR	1903621	Argument	Z_STRVAL_P ( tmp_oid )		1902769	3					
ANR	1903622	CallExpression	Z_STRVAL_P ( tmp_oid )		1902769	0					
ANR	1903623	Callee	Z_STRVAL_P		1902769	0					
ANR	1903624	Identifier	Z_STRVAL_P		1902769	0					
ANR	1903625	ArgumentList	tmp_oid		1902769	1					
ANR	1903626	Argument	tmp_oid		1902769	0					
ANR	1903627	Identifier	tmp_oid		1902769	0					
ANR	1903628	ExpressionStatement	efree ( objid_query -> vars )	1069:6:33058:33082	1902769	1	True				
ANR	1903629	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903630	Callee	efree		1902769	0					
ANR	1903631	Identifier	efree		1902769	0					
ANR	1903632	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903633	Argument	objid_query -> vars		1902769	0					
ANR	1903634	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903635	Identifier	objid_query		1902769	0					
ANR	1903636	Identifier	vars		1902769	1					
ANR	1903637	ReturnStatement	return FALSE ;	1070:6:33090:33102	1902769	2	True				
ANR	1903638	Identifier	FALSE		1902769	0					
ANR	1903639	ExpressionStatement	objid_query -> count ++	1074:3:33125:33145	1902769	3	True				
ANR	1903640	PostIncDecOperationExpression	objid_query -> count ++		1902769	0					
ANR	1903641	PtrMemberAccess	objid_query -> count		1902769	0					
ANR	1903642	Identifier	objid_query		1902769	0					
ANR	1903643	Identifier	count		1902769	1					
ANR	1903644	IncDec	++		1902769	1					
ANR	1903645	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1075:4:33151:33174	1902769	14	True				
ANR	1903646	CallExpression	ZEND_HASH_FOREACH_END ( )		1902769	0					
ANR	1903647	Callee	ZEND_HASH_FOREACH_END		1902769	0					
ANR	1903648	Identifier	ZEND_HASH_FOREACH_END		1902769	0					
ANR	1903649	ArgumentList			1902769	1					
ANR	1903650	IfStatement	if ( st & SNMP_CMD_WALK )		1902769	8					
ANR	1903651	Condition	st & SNMP_CMD_WALK	1079:5:33211:33228	1902769	0	True				
ANR	1903652	BitAndExpression	st & SNMP_CMD_WALK		1902769	0		&			
ANR	1903653	Identifier	st		1902769	0					
ANR	1903654	Identifier	SNMP_CMD_WALK		1902769	1					
ANR	1903655	CompoundStatement		117:25:4008:4008	1902769	1					
ANR	1903656	IfStatement	if ( objid_query -> count > 1 )		1902769	0					
ANR	1903657	Condition	objid_query -> count > 1	1080:6:33239:33260	1902769	0	True				
ANR	1903658	RelationalExpression	objid_query -> count > 1		1902769	0		>			
ANR	1903659	PtrMemberAccess	objid_query -> count		1902769	0					
ANR	1903660	Identifier	objid_query		1902769	0					
ANR	1903661	Identifier	count		1902769	1					
ANR	1903662	PrimaryExpression	1		1902769	1					
ANR	1903663	CompoundStatement		118:30:4040:4040	1902769	1					
ANR	1903664	ExpressionStatement	"php_snmp_error ( object , NULL , PHP_SNMP_ERRNO_OID_PARSING_ERROR , ""Multi OID walks are not supported!"" )"	1081:3:33268:33368	1902769	0	True				
ANR	1903665	CallExpression	"php_snmp_error ( object , NULL , PHP_SNMP_ERRNO_OID_PARSING_ERROR , ""Multi OID walks are not supported!"" )"		1902769	0					
ANR	1903666	Callee	php_snmp_error		1902769	0					
ANR	1903667	Identifier	php_snmp_error		1902769	0					
ANR	1903668	ArgumentList	object		1902769	1					
ANR	1903669	Argument	object		1902769	0					
ANR	1903670	Identifier	object		1902769	0					
ANR	1903671	Argument	NULL		1902769	1					
ANR	1903672	Identifier	NULL		1902769	0					
ANR	1903673	Argument	PHP_SNMP_ERRNO_OID_PARSING_ERROR		1902769	2					
ANR	1903674	Identifier	PHP_SNMP_ERRNO_OID_PARSING_ERROR		1902769	0					
ANR	1903675	Argument	"""Multi OID walks are not supported!"""		1902769	3					
ANR	1903676	PrimaryExpression	"""Multi OID walks are not supported!"""		1902769	0					
ANR	1903677	ExpressionStatement	efree ( objid_query -> vars )	1082:3:33373:33397	1902769	1	True				
ANR	1903678	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903679	Callee	efree		1902769	0					
ANR	1903680	Identifier	efree		1902769	0					
ANR	1903681	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903682	Argument	objid_query -> vars		1902769	0					
ANR	1903683	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903684	Identifier	objid_query		1902769	0					
ANR	1903685	Identifier	vars		1902769	1					
ANR	1903686	ReturnStatement	return FALSE ;	1083:3:33402:33414	1902769	2	True				
ANR	1903687	Identifier	FALSE		1902769	0					
ANR	1903688	ExpressionStatement	objid_query -> vars [ 0 ] . name_length = MAX_NAME_LEN	1085:2:33422:33469	1902769	1	True				
ANR	1903689	AssignmentExpression	objid_query -> vars [ 0 ] . name_length = MAX_NAME_LEN		1902769	0		=			
ANR	1903690	MemberAccess	objid_query -> vars [ 0 ] . name_length		1902769	0					
ANR	1903691	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903692	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903693	Identifier	objid_query		1902769	0					
ANR	1903694	Identifier	vars		1902769	1					
ANR	1903695	PrimaryExpression	0		1902769	1					
ANR	1903696	Identifier	name_length		1902769	1					
ANR	1903697	Identifier	MAX_NAME_LEN		1902769	1					
ANR	1903698	IfStatement	if ( strlen ( objid_query -> vars [ 0 ] . oid ) )		1902769	2					
ANR	1903699	Condition	strlen ( objid_query -> vars [ 0 ] . oid )	1086:6:33477:33508	1902769	0	True				
ANR	1903700	CallExpression	strlen ( objid_query -> vars [ 0 ] . oid )		1902769	0					
ANR	1903701	Callee	strlen		1902769	0					
ANR	1903702	Identifier	strlen		1902769	0					
ANR	1903703	ArgumentList	objid_query -> vars [ 0 ] . oid		1902769	1					
ANR	1903704	Argument	objid_query -> vars [ 0 ] . oid		1902769	0					
ANR	1903705	MemberAccess	objid_query -> vars [ 0 ] . oid		1902769	0					
ANR	1903706	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903707	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903708	Identifier	objid_query		1902769	0					
ANR	1903709	Identifier	vars		1902769	1					
ANR	1903710	PrimaryExpression	0		1902769	1					
ANR	1903711	Identifier	oid		1902769	1					
ANR	1903712	CompoundStatement		124:40:4288:4288	1902769	1					
ANR	1903713	IfStatement	"if ( ! snmp_parse_oid ( objid_query -> vars [ 0 ] . oid , objid_query -> vars [ 0 ] . name , & ( objid_query -> vars [ 0 ] . name_length ) ) )"		1902769	0					
ANR	1903714	Condition	"! snmp_parse_oid ( objid_query -> vars [ 0 ] . oid , objid_query -> vars [ 0 ] . name , & ( objid_query -> vars [ 0 ] . name_length ) )"	1087:7:33582:33686	1902769	0	True				
ANR	1903715	UnaryOperationExpression	"! snmp_parse_oid ( objid_query -> vars [ 0 ] . oid , objid_query -> vars [ 0 ] . name , & ( objid_query -> vars [ 0 ] . name_length ) )"		1902769	0					
ANR	1903716	UnaryOperator	!		1902769	0					
ANR	1903717	CallExpression	"snmp_parse_oid ( objid_query -> vars [ 0 ] . oid , objid_query -> vars [ 0 ] . name , & ( objid_query -> vars [ 0 ] . name_length ) )"		1902769	1					
ANR	1903718	Callee	snmp_parse_oid		1902769	0					
ANR	1903719	Identifier	snmp_parse_oid		1902769	0					
ANR	1903720	ArgumentList	objid_query -> vars [ 0 ] . oid		1902769	1					
ANR	1903721	Argument	objid_query -> vars [ 0 ] . oid		1902769	0					
ANR	1903722	MemberAccess	objid_query -> vars [ 0 ] . oid		1902769	0					
ANR	1903723	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903724	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903725	Identifier	objid_query		1902769	0					
ANR	1903726	Identifier	vars		1902769	1					
ANR	1903727	PrimaryExpression	0		1902769	1					
ANR	1903728	Identifier	oid		1902769	1					
ANR	1903729	Argument	objid_query -> vars [ 0 ] . name		1902769	1					
ANR	1903730	MemberAccess	objid_query -> vars [ 0 ] . name		1902769	0					
ANR	1903731	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903732	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903733	Identifier	objid_query		1902769	0					
ANR	1903734	Identifier	vars		1902769	1					
ANR	1903735	PrimaryExpression	0		1902769	1					
ANR	1903736	Identifier	name		1902769	1					
ANR	1903737	Argument	& ( objid_query -> vars [ 0 ] . name_length )		1902769	2					
ANR	1903738	UnaryOperationExpression	& ( objid_query -> vars [ 0 ] . name_length )		1902769	0					
ANR	1903739	UnaryOperator	&		1902769	0					
ANR	1903740	MemberAccess	objid_query -> vars [ 0 ] . name_length		1902769	1					
ANR	1903741	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903742	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903743	Identifier	objid_query		1902769	0					
ANR	1903744	Identifier	vars		1902769	1					
ANR	1903745	PrimaryExpression	0		1902769	1					
ANR	1903746	Identifier	name_length		1902769	1					
ANR	1903747	CompoundStatement		125:114:4466:4466	1902769	1					
ANR	1903748	ExpressionStatement	"php_snmp_error ( object , NULL , PHP_SNMP_ERRNO_OID_PARSING_ERROR , ""Invalid object identifier: %s"" , objid_query -> vars [ 0 ] . oid )"	1088:4:33695:33816	1902769	0	True				
ANR	1903749	CallExpression	"php_snmp_error ( object , NULL , PHP_SNMP_ERRNO_OID_PARSING_ERROR , ""Invalid object identifier: %s"" , objid_query -> vars [ 0 ] . oid )"		1902769	0					
ANR	1903750	Callee	php_snmp_error		1902769	0					
ANR	1903751	Identifier	php_snmp_error		1902769	0					
ANR	1903752	ArgumentList	object		1902769	1					
ANR	1903753	Argument	object		1902769	0					
ANR	1903754	Identifier	object		1902769	0					
ANR	1903755	Argument	NULL		1902769	1					
ANR	1903756	Identifier	NULL		1902769	0					
ANR	1903757	Argument	PHP_SNMP_ERRNO_OID_PARSING_ERROR		1902769	2					
ANR	1903758	Identifier	PHP_SNMP_ERRNO_OID_PARSING_ERROR		1902769	0					
ANR	1903759	Argument	"""Invalid object identifier: %s"""		1902769	3					
ANR	1903760	PrimaryExpression	"""Invalid object identifier: %s"""		1902769	0					
ANR	1903761	Argument	objid_query -> vars [ 0 ] . oid		1902769	4					
ANR	1903762	MemberAccess	objid_query -> vars [ 0 ] . oid		1902769	0					
ANR	1903763	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903764	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903765	Identifier	objid_query		1902769	0					
ANR	1903766	Identifier	vars		1902769	1					
ANR	1903767	PrimaryExpression	0		1902769	1					
ANR	1903768	Identifier	oid		1902769	1					
ANR	1903769	ExpressionStatement	efree ( objid_query -> vars )	1089:4:33822:33846	1902769	1	True				
ANR	1903770	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903771	Callee	efree		1902769	0					
ANR	1903772	Identifier	efree		1902769	0					
ANR	1903773	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903774	Argument	objid_query -> vars		1902769	0					
ANR	1903775	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903776	Identifier	objid_query		1902769	0					
ANR	1903777	Identifier	vars		1902769	1					
ANR	1903778	ReturnStatement	return FALSE ;	1090:4:33852:33864	1902769	2	True				
ANR	1903779	Identifier	FALSE		1902769	0					
ANR	1903780	ElseStatement	else		1902769	0					
ANR	1903781	CompoundStatement		130:9:4657:4657	1902769	0					
ANR	1903782	ExpressionStatement	"memmove ( ( char * ) objid_query -> vars [ 0 ] . name , ( char * ) objid_mib , sizeof ( objid_mib ) )"	1093:3:33885:33965	1902769	0	True				
ANR	1903783	CallExpression	"memmove ( ( char * ) objid_query -> vars [ 0 ] . name , ( char * ) objid_mib , sizeof ( objid_mib ) )"		1902769	0					
ANR	1903784	Callee	memmove		1902769	0					
ANR	1903785	Identifier	memmove		1902769	0					
ANR	1903786	ArgumentList	( char * ) objid_query -> vars [ 0 ] . name		1902769	1					
ANR	1903787	Argument	( char * ) objid_query -> vars [ 0 ] . name		1902769	0					
ANR	1903788	CastExpression	( char * ) objid_query -> vars [ 0 ] . name		1902769	0					
ANR	1903789	CastTarget	char *		1902769	0					
ANR	1903790	MemberAccess	objid_query -> vars [ 0 ] . name		1902769	1					
ANR	1903791	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903792	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903793	Identifier	objid_query		1902769	0					
ANR	1903794	Identifier	vars		1902769	1					
ANR	1903795	PrimaryExpression	0		1902769	1					
ANR	1903796	Identifier	name		1902769	1					
ANR	1903797	Argument	( char * ) objid_mib		1902769	1					
ANR	1903798	CastExpression	( char * ) objid_mib		1902769	0					
ANR	1903799	CastTarget	char *		1902769	0					
ANR	1903800	Identifier	objid_mib		1902769	1					
ANR	1903801	Argument	sizeof ( objid_mib )		1902769	2					
ANR	1903802	SizeofExpression	sizeof ( objid_mib )		1902769	0					
ANR	1903803	Sizeof	sizeof		1902769	0					
ANR	1903804	SizeofOperand	objid_mib		1902769	1					
ANR	1903805	ExpressionStatement	objid_query -> vars [ 0 ] . name_length = sizeof ( objid_mib ) / sizeof ( oid )	1094:3:33970:34036	1902769	1	True				
ANR	1903806	AssignmentExpression	objid_query -> vars [ 0 ] . name_length = sizeof ( objid_mib ) / sizeof ( oid )		1902769	0		=			
ANR	1903807	MemberAccess	objid_query -> vars [ 0 ] . name_length		1902769	0					
ANR	1903808	ArrayIndexing	objid_query -> vars [ 0 ]		1902769	0					
ANR	1903809	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903810	Identifier	objid_query		1902769	0					
ANR	1903811	Identifier	vars		1902769	1					
ANR	1903812	PrimaryExpression	0		1902769	1					
ANR	1903813	Identifier	name_length		1902769	1					
ANR	1903814	MultiplicativeExpression	sizeof ( objid_mib ) / sizeof ( oid )		1902769	1		/			
ANR	1903815	SizeofExpression	sizeof ( objid_mib )		1902769	0					
ANR	1903816	Sizeof	sizeof		1902769	0					
ANR	1903817	SizeofOperand	objid_mib		1902769	1					
ANR	1903818	SizeofExpression	sizeof ( oid )		1902769	1					
ANR	1903819	Sizeof	sizeof		1902769	0					
ANR	1903820	SizeofOperand	oid		1902769	1					
ANR	1903821	ElseStatement	else		1902769	0					
ANR	1903822	CompoundStatement		134:8:4827:4827	1902769	0					
ANR	1903823	ForStatement	for ( objid_query -> offset = 0 ; objid_query -> offset < objid_query -> count ; objid_query -> offset ++ )		1902769	0					
ANR	1903824	ForInit	objid_query -> offset = 0 ;	1097:7:34059:34082	1902769	0	True				
ANR	1903825	AssignmentExpression	objid_query -> offset = 0		1902769	0		=			
ANR	1903826	PtrMemberAccess	objid_query -> offset		1902769	0					
ANR	1903827	Identifier	objid_query		1902769	0					
ANR	1903828	Identifier	offset		1902769	1					
ANR	1903829	PrimaryExpression	0		1902769	1					
ANR	1903830	Condition	objid_query -> offset < objid_query -> count	1097:32:34084:34123	1902769	1	True				
ANR	1903831	RelationalExpression	objid_query -> offset < objid_query -> count		1902769	0		<			
ANR	1903832	PtrMemberAccess	objid_query -> offset		1902769	0					
ANR	1903833	Identifier	objid_query		1902769	0					
ANR	1903834	Identifier	offset		1902769	1					
ANR	1903835	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903836	Identifier	objid_query		1902769	0					
ANR	1903837	Identifier	count		1902769	1					
ANR	1903838	PostIncDecOperationExpression	objid_query -> offset ++	1097:74:34126:34146	1902769	2	True				
ANR	1903839	PtrMemberAccess	objid_query -> offset		1902769	0					
ANR	1903840	Identifier	objid_query		1902769	0					
ANR	1903841	Identifier	offset		1902769	1					
ANR	1903842	IncDec	++		1902769	1					
ANR	1903843	CompoundStatement		135:97:4926:4926	1902769	3					
ANR	1903844	ExpressionStatement	objid_query -> vars [ objid_query -> offset ] . name_length = MAX_OID_LEN	1098:3:34154:34218	1902769	0	True				
ANR	1903845	AssignmentExpression	objid_query -> vars [ objid_query -> offset ] . name_length = MAX_OID_LEN		1902769	0		=			
ANR	1903846	MemberAccess	objid_query -> vars [ objid_query -> offset ] . name_length		1902769	0					
ANR	1903847	ArrayIndexing	objid_query -> vars [ objid_query -> offset ]		1902769	0					
ANR	1903848	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903849	Identifier	objid_query		1902769	0					
ANR	1903850	Identifier	vars		1902769	1					
ANR	1903851	PtrMemberAccess	objid_query -> offset		1902769	1					
ANR	1903852	Identifier	objid_query		1902769	0					
ANR	1903853	Identifier	offset		1902769	1					
ANR	1903854	Identifier	name_length		1902769	1					
ANR	1903855	Identifier	MAX_OID_LEN		1902769	1					
ANR	1903856	IfStatement	"if ( ! snmp_parse_oid ( objid_query -> vars [ objid_query -> offset ] . oid , objid_query -> vars [ objid_query -> offset ] . name , & ( objid_query -> vars [ objid_query -> offset ] . name_length ) ) )"		1902769	1					
ANR	1903857	Condition	"! snmp_parse_oid ( objid_query -> vars [ objid_query -> offset ] . oid , objid_query -> vars [ objid_query -> offset ] . name , & ( objid_query -> vars [ objid_query -> offset ] . name_length ) )"	1099:7:34227:34385	1902769	0	True				
ANR	1903858	UnaryOperationExpression	"! snmp_parse_oid ( objid_query -> vars [ objid_query -> offset ] . oid , objid_query -> vars [ objid_query -> offset ] . name , & ( objid_query -> vars [ objid_query -> offset ] . name_length ) )"		1902769	0					
ANR	1903859	UnaryOperator	!		1902769	0					
ANR	1903860	CallExpression	"snmp_parse_oid ( objid_query -> vars [ objid_query -> offset ] . oid , objid_query -> vars [ objid_query -> offset ] . name , & ( objid_query -> vars [ objid_query -> offset ] . name_length ) )"		1902769	1					
ANR	1903861	Callee	snmp_parse_oid		1902769	0					
ANR	1903862	Identifier	snmp_parse_oid		1902769	0					
ANR	1903863	ArgumentList	objid_query -> vars [ objid_query -> offset ] . oid		1902769	1					
ANR	1903864	Argument	objid_query -> vars [ objid_query -> offset ] . oid		1902769	0					
ANR	1903865	MemberAccess	objid_query -> vars [ objid_query -> offset ] . oid		1902769	0					
ANR	1903866	ArrayIndexing	objid_query -> vars [ objid_query -> offset ]		1902769	0					
ANR	1903867	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903868	Identifier	objid_query		1902769	0					
ANR	1903869	Identifier	vars		1902769	1					
ANR	1903870	PtrMemberAccess	objid_query -> offset		1902769	1					
ANR	1903871	Identifier	objid_query		1902769	0					
ANR	1903872	Identifier	offset		1902769	1					
ANR	1903873	Identifier	oid		1902769	1					
ANR	1903874	Argument	objid_query -> vars [ objid_query -> offset ] . name		1902769	1					
ANR	1903875	MemberAccess	objid_query -> vars [ objid_query -> offset ] . name		1902769	0					
ANR	1903876	ArrayIndexing	objid_query -> vars [ objid_query -> offset ]		1902769	0					
ANR	1903877	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903878	Identifier	objid_query		1902769	0					
ANR	1903879	Identifier	vars		1902769	1					
ANR	1903880	PtrMemberAccess	objid_query -> offset		1902769	1					
ANR	1903881	Identifier	objid_query		1902769	0					
ANR	1903882	Identifier	offset		1902769	1					
ANR	1903883	Identifier	name		1902769	1					
ANR	1903884	Argument	& ( objid_query -> vars [ objid_query -> offset ] . name_length )		1902769	2					
ANR	1903885	UnaryOperationExpression	& ( objid_query -> vars [ objid_query -> offset ] . name_length )		1902769	0					
ANR	1903886	UnaryOperator	&		1902769	0					
ANR	1903887	MemberAccess	objid_query -> vars [ objid_query -> offset ] . name_length		1902769	1					
ANR	1903888	ArrayIndexing	objid_query -> vars [ objid_query -> offset ]		1902769	0					
ANR	1903889	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903890	Identifier	objid_query		1902769	0					
ANR	1903891	Identifier	vars		1902769	1					
ANR	1903892	PtrMemberAccess	objid_query -> offset		1902769	1					
ANR	1903893	Identifier	objid_query		1902769	0					
ANR	1903894	Identifier	offset		1902769	1					
ANR	1903895	Identifier	name_length		1902769	1					
ANR	1903896	CompoundStatement		137:168:5165:5165	1902769	1					
ANR	1903897	ExpressionStatement	"php_snmp_error ( object , NULL , PHP_SNMP_ERRNO_OID_PARSING_ERROR , ""Invalid object identifier: %s"" , objid_query -> vars [ objid_query -> offset ] . oid )"	1100:4:34394:34533	1902769	0	True				
ANR	1903898	CallExpression	"php_snmp_error ( object , NULL , PHP_SNMP_ERRNO_OID_PARSING_ERROR , ""Invalid object identifier: %s"" , objid_query -> vars [ objid_query -> offset ] . oid )"		1902769	0					
ANR	1903899	Callee	php_snmp_error		1902769	0					
ANR	1903900	Identifier	php_snmp_error		1902769	0					
ANR	1903901	ArgumentList	object		1902769	1					
ANR	1903902	Argument	object		1902769	0					
ANR	1903903	Identifier	object		1902769	0					
ANR	1903904	Argument	NULL		1902769	1					
ANR	1903905	Identifier	NULL		1902769	0					
ANR	1903906	Argument	PHP_SNMP_ERRNO_OID_PARSING_ERROR		1902769	2					
ANR	1903907	Identifier	PHP_SNMP_ERRNO_OID_PARSING_ERROR		1902769	0					
ANR	1903908	Argument	"""Invalid object identifier: %s"""		1902769	3					
ANR	1903909	PrimaryExpression	"""Invalid object identifier: %s"""		1902769	0					
ANR	1903910	Argument	objid_query -> vars [ objid_query -> offset ] . oid		1902769	4					
ANR	1903911	MemberAccess	objid_query -> vars [ objid_query -> offset ] . oid		1902769	0					
ANR	1903912	ArrayIndexing	objid_query -> vars [ objid_query -> offset ]		1902769	0					
ANR	1903913	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903914	Identifier	objid_query		1902769	0					
ANR	1903915	Identifier	vars		1902769	1					
ANR	1903916	PtrMemberAccess	objid_query -> offset		1902769	1					
ANR	1903917	Identifier	objid_query		1902769	0					
ANR	1903918	Identifier	offset		1902769	1					
ANR	1903919	Identifier	oid		1902769	1					
ANR	1903920	ExpressionStatement	efree ( objid_query -> vars )	1101:4:34539:34563	1902769	1	True				
ANR	1903921	CallExpression	efree ( objid_query -> vars )		1902769	0					
ANR	1903922	Callee	efree		1902769	0					
ANR	1903923	Identifier	efree		1902769	0					
ANR	1903924	ArgumentList	objid_query -> vars		1902769	1					
ANR	1903925	Argument	objid_query -> vars		1902769	0					
ANR	1903926	PtrMemberAccess	objid_query -> vars		1902769	0					
ANR	1903927	Identifier	objid_query		1902769	0					
ANR	1903928	Identifier	vars		1902769	1					
ANR	1903929	ReturnStatement	return FALSE ;	1102:4:34569:34581	1902769	2	True				
ANR	1903930	Identifier	FALSE		1902769	0					
ANR	1903931	ExpressionStatement	objid_query -> offset = 0	1106:1:34596:34619	1902769	9	True				
ANR	1903932	AssignmentExpression	objid_query -> offset = 0		1902769	0		=			
ANR	1903933	PtrMemberAccess	objid_query -> offset		1902769	0					
ANR	1903934	Identifier	objid_query		1902769	0					
ANR	1903935	Identifier	offset		1902769	1					
ANR	1903936	PrimaryExpression	0		1902769	1					
ANR	1903937	ExpressionStatement	objid_query -> step = objid_query -> count	1107:1:34622:34660	1902769	10	True				
ANR	1903938	AssignmentExpression	objid_query -> step = objid_query -> count		1902769	0		=			
ANR	1903939	PtrMemberAccess	objid_query -> step		1902769	0					
ANR	1903940	Identifier	objid_query		1902769	0					
ANR	1903941	Identifier	step		1902769	1					
ANR	1903942	PtrMemberAccess	objid_query -> count		1902769	1					
ANR	1903943	Identifier	objid_query		1902769	0					
ANR	1903944	Identifier	count		1902769	1					
ANR	1903945	ReturnStatement	return ( objid_query -> count > 0 ) ;	1108:1:34663:34694	1902769	11	True				
ANR	1903946	RelationalExpression	objid_query -> count > 0		1902769	0		>			
ANR	1903947	PtrMemberAccess	objid_query -> count		1902769	0					
ANR	1903948	Identifier	objid_query		1902769	0					
ANR	1903949	Identifier	count		1902769	1					
ANR	1903950	PrimaryExpression	0		1902769	1					
ANR	1903951	ReturnType	static int		1902769	1					
ANR	1903952	Identifier	php_snmp_parse_oid		1902769	2					
ANR	1903953	ParameterList	"zval * object , int st , struct objid_query * objid_query , zval * oid , zval * type , zval * value"		1902769	3					
ANR	1903954	Parameter	zval * object	962:30:29131:29142	1902769	0	True				
ANR	1903955	ParameterType	zval *		1902769	0					
ANR	1903956	Identifier	object		1902769	1					
ANR	1903957	Parameter	int st	962:44:29145:29150	1902769	1	True				
ANR	1903958	ParameterType	int		1902769	0					
ANR	1903959	Identifier	st		1902769	1					
ANR	1903960	Parameter	struct objid_query * objid_query	962:52:29153:29183	1902769	2	True				
ANR	1903961	ParameterType	struct objid_query *		1902769	0					
ANR	1903962	Identifier	objid_query		1902769	1					
ANR	1903963	Parameter	zval * oid	962:85:29186:29194	1902769	3	True				
ANR	1903964	ParameterType	zval *		1902769	0					
ANR	1903965	Identifier	oid		1902769	1					
ANR	1903966	Parameter	zval * type	962:96:29197:29206	1902769	4	True				
ANR	1903967	ParameterType	zval *		1902769	0					
ANR	1903968	Identifier	type		1902769	1					
ANR	1903969	Parameter	zval * value	962:108:29209:29219	1902769	5	True				
ANR	1903970	ParameterType	zval *		1902769	0					
ANR	1903971	Identifier	value		1902769	1					
ANR	1903972	CFGEntryNode	ENTRY		1902769		True				
ANR	1903973	CFGExitNode	EXIT		1902769		True				
ANR	1903974	Symbol	* objid_query		1902769						
ANR	1903975	Symbol	tmp_oid		1902769						
ANR	1903976	Symbol	type		1902769						
ANR	1903977	Symbol	strlen		1902769						
ANR	1903978	Symbol	Z_ARRVAL_P ( value ) -> nNumUsed		1902769						
ANR	1903979	Symbol	* idx_value		1902769						
ANR	1903980	Symbol	* pptr		1902769						
ANR	1903981	Symbol	IS_STRING		1902769						
ANR	1903982	Symbol	IS_UNDEF		1902769						
ANR	1903983	Symbol	errno		1902769						
ANR	1903984	Symbol	NULL		1902769						
ANR	1903985	Symbol	objid_query -> vars [ objid_query -> offset ] . name		1902769						
ANR	1903986	Symbol	objid_query -> vars [ 0 ] . name_length		1902769						
ANR	1903987	Symbol	TRUE		1902769						
ANR	1903988	Symbol	* idx_type		1902769						
ANR	1903989	Symbol	& objid_query -> vars [ 0 ] . name_length		1902769						
ANR	1903990	Symbol	* objid_query -> vars		1902769						
ANR	1903991	Symbol	tmp_value		1902769						
ANR	1903992	Symbol	objid_query -> vars [ 0 ] . oid		1902769						
ANR	1903993	Symbol	objid_query -> vars		1902769						
ANR	1903994	Symbol	strerror		1902769						
ANR	1903995	Symbol	objid_query -> count		1902769						
ANR	1903996	Symbol	* Z_ARRVAL_P ( type ) -> arData		1902769						
ANR	1903997	Symbol	objid_query -> vars [ 0 ] . name		1902769						
ANR	1903998	Symbol	objid_query -> vars [ objid_query -> count ] . type		1902769						
ANR	1903999	Symbol	object		1902769						
ANR	1904000	Symbol	objid_query -> array_output		1902769						
ANR	1904001	Symbol	& Z_ARRVAL_P ( value ) -> arData [ idx_value ] . val		1902769						
ANR	1904002	Symbol	objid_query -> step		1902769						
ANR	1904003	Symbol	* Z_ARRVAL_P		1902769						
ANR	1904004	Symbol	pptr		1902769						
ANR	1904005	Symbol	oid		1902769						
ANR	1904006	Symbol	* * Z_ARRVAL_P		1902769						
ANR	1904007	Symbol	MAX_NAME_LEN		1902769						
ANR	1904008	Symbol	E_WARNING		1902769						
ANR	1904009	Symbol	emalloc		1902769						
ANR	1904010	Symbol	Z_ARRVAL_P ( type ) -> arData		1902769						
ANR	1904011	Symbol	idx_value		1902769						
ANR	1904012	Symbol	Z_ARRVAL_P ( value ) -> arData		1902769						
ANR	1904013	Symbol	IS_ARRAY		1902769						
ANR	1904014	Symbol	PHP_SNMP_ERRNO_OID_PARSING_ERROR		1902769						
ANR	1904015	Symbol	objid_mib		1902769						
ANR	1904016	Symbol	Z_STRLEN_P		1902769						
ANR	1904017	Symbol	Z_ARRVAL_P ( type ) -> nNumUsed		1902769						
ANR	1904018	Symbol	Z_ARRVAL_P		1902769						
ANR	1904019	Symbol	value		1902769						
ANR	1904020	Symbol	snmp_parse_oid		1902769						
ANR	1904021	Symbol	objid_query -> vars [ objid_query -> offset ] . name_length		1902769						
ANR	1904022	Symbol	st		1902769						
ANR	1904023	Symbol	* Z_ARRVAL_P ( value ) -> arData		1902769						
ANR	1904024	Symbol	objid_query -> offset		1902769						
ANR	1904025	Symbol	& Z_ARRVAL_P ( type ) -> arData [ idx_type ] . val		1902769						
ANR	1904026	Symbol	& objid_query -> vars [ objid_query -> offset ] . name_length		1902769						
ANR	1904027	Symbol	zend_hash_num_elements		1902769						
ANR	1904028	Symbol	MAX_OID_LEN		1902769						
ANR	1904029	Symbol	objid_query		1902769						
ANR	1904030	Symbol	Z_TYPE_P		1902769						
ANR	1904031	Symbol	Z_STRVAL_P		1902769						
ANR	1904032	Symbol	* * objid_query		1902769						
ANR	1904033	Symbol	objid_query -> vars [ objid_query -> offset ] . oid		1902769						
ANR	1904034	Symbol	SNMP_CMD_WALK		1902769						
ANR	1904035	Symbol	* objid_query -> count		1902769						
ANR	1904036	Symbol	FALSE		1902769						
ANR	1904037	Symbol	objid_query -> vars [ objid_query -> count ] . oid		1902769						
ANR	1904038	Symbol	objid_query -> vars [ objid_query -> count ] . value		1902769						
ANR	1904039	Symbol	idx_type		1902769						
ANR	1904040	Symbol	tmp_type		1902769						
ANR	1904041	Symbol	SNMP_CMD_SET		1902769						
ANR	1904042	Symbol	* objid_query -> offset		1902769						
ANR	1904043	Function	netsnmp_session_init	1115:0:34865:38410							
ANR	1904044	FunctionDef	"netsnmp_session_init (php_snmp_session * * session_p , int version , char * hostname , char * community , int timeout , int retries)"		1904043	0					
ANR	1904045	CompoundStatement		1116:0:34999:38410	1904043	0					
ANR	1904046	IdentifierDeclStatement	php_snmp_session * session ;	1117:1:35002:35027	1904043	0	True				
ANR	1904047	IdentifierDecl	* session		1904043	0					
ANR	1904048	IdentifierDeclType	php_snmp_session *		1904043	0					
ANR	1904049	Identifier	session		1904043	1					
ANR	1904050	IdentifierDeclStatement	"char * pptr , * host_ptr ;"	1118:1:35030:35051	1904043	1	True				
ANR	1904051	IdentifierDecl	* pptr		1904043	0					
ANR	1904052	IdentifierDeclType	char *		1904043	0					
ANR	1904053	Identifier	pptr		1904043	1					
ANR	1904054	IdentifierDecl	* host_ptr		1904043	1					
ANR	1904055	IdentifierDeclType	char *		1904043	0					
ANR	1904056	Identifier	host_ptr		1904043	1					
ANR	1904057	IdentifierDeclStatement	int force_ipv6 = FALSE ;	1119:1:35054:35076	1904043	2	True				
ANR	1904058	IdentifierDecl	force_ipv6 = FALSE		1904043	0					
ANR	1904059	IdentifierDeclType	int		1904043	0					
ANR	1904060	Identifier	force_ipv6		1904043	1					
ANR	1904061	AssignmentExpression	force_ipv6 = FALSE		1904043	2		=			
ANR	1904062	Identifier	FALSE		1904043	0					
ANR	1904063	Identifier	FALSE		1904043	1					
ANR	1904064	IdentifierDeclStatement	int n ;	1120:1:35079:35084	1904043	3	True				
ANR	1904065	IdentifierDecl	n		1904043	0					
ANR	1904066	IdentifierDeclType	int		1904043	0					
ANR	1904067	Identifier	n		1904043	1					
ANR	1904068	IdentifierDeclStatement	struct sockaddr * * psal ;	1121:1:35087:35109	1904043	4	True				
ANR	1904069	IdentifierDecl	* * psal		1904043	0					
ANR	1904070	IdentifierDeclType	struct sockaddr * *		1904043	0					
ANR	1904071	Identifier	psal		1904043	1					
ANR	1904072	IdentifierDeclStatement	struct sockaddr * * res ;	1122:1:35112:35133	1904043	5	True				
ANR	1904073	IdentifierDecl	* * res		1904043	0					
ANR	1904074	IdentifierDeclType	struct sockaddr * *		1904043	0					
ANR	1904075	Identifier	res		1904043	1					
ANR	1904076	ExpressionStatement	* session_p = ( php_snmp_session * ) emalloc ( sizeof ( php_snmp_session ) )	1124:1:35137:35203	1904043	6	True				
ANR	1904077	AssignmentExpression	* session_p = ( php_snmp_session * ) emalloc ( sizeof ( php_snmp_session ) )		1904043	0		=			
ANR	1904078	UnaryOperationExpression	* session_p		1904043	0					
ANR	1904079	UnaryOperator	*		1904043	0					
ANR	1904080	Identifier	session_p		1904043	1					
ANR	1904081	CastExpression	( php_snmp_session * ) emalloc ( sizeof ( php_snmp_session ) )		1904043	1					
ANR	1904082	CastTarget	php_snmp_session *		1904043	0					
ANR	1904083	CallExpression	emalloc ( sizeof ( php_snmp_session ) )		1904043	1					
ANR	1904084	Callee	emalloc		1904043	0					
ANR	1904085	Identifier	emalloc		1904043	0					
ANR	1904086	ArgumentList	sizeof ( php_snmp_session )		1904043	1					
ANR	1904087	Argument	sizeof ( php_snmp_session )		1904043	0					
ANR	1904088	SizeofExpression	sizeof ( php_snmp_session )		1904043	0					
ANR	1904089	Sizeof	sizeof		1904043	0					
ANR	1904090	SizeofOperand	php_snmp_session		1904043	1					
ANR	1904091	ExpressionStatement	session = * session_p	1125:1:35206:35226	1904043	7	True				
ANR	1904092	AssignmentExpression	session = * session_p		1904043	0		=			
ANR	1904093	Identifier	session		1904043	0					
ANR	1904094	UnaryOperationExpression	* session_p		1904043	1					
ANR	1904095	UnaryOperator	*		1904043	0					
ANR	1904096	Identifier	session_p		1904043	1					
ANR	1904097	IfStatement	if ( session == NULL )		1904043	8					
ANR	1904098	Condition	session == NULL	1126:5:35233:35247	1904043	0	True				
ANR	1904099	EqualityExpression	session == NULL		1904043	0		==			
ANR	1904100	Identifier	session		1904043	0					
ANR	1904101	Identifier	NULL		1904043	1					
ANR	1904102	CompoundStatement		11:22:250:250	1904043	1					
ANR	1904103	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed allocating session"" )"	1127:2:35254:35326	1904043	0	True				
ANR	1904104	CallExpression	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed allocating session"" )"		1904043	0					
ANR	1904105	Callee	php_error_docref		1904043	0					
ANR	1904106	Identifier	php_error_docref		1904043	0					
ANR	1904107	ArgumentList	NULL		1904043	1					
ANR	1904108	Argument	NULL		1904043	0					
ANR	1904109	Identifier	NULL		1904043	0					
ANR	1904110	Argument	E_WARNING		1904043	1					
ANR	1904111	Identifier	E_WARNING		1904043	0					
ANR	1904112	Argument	"""emalloc() failed allocating session"""		1904043	2					
ANR	1904113	PrimaryExpression	"""emalloc() failed allocating session"""		1904043	0					
ANR	1904114	ReturnStatement	return ( - 1 ) ;	1128:2:35330:35341	1904043	1	True				
ANR	1904115	UnaryOperationExpression	- 1		1904043	0					
ANR	1904116	UnaryOperator	-		1904043	0					
ANR	1904117	PrimaryExpression	1		1904043	1					
ANR	1904118	ExpressionStatement	"memset ( session , 0 , sizeof ( php_snmp_session ) )"	1130:1:35347:35391	1904043	9	True				
ANR	1904119	CallExpression	"memset ( session , 0 , sizeof ( php_snmp_session ) )"		1904043	0					
ANR	1904120	Callee	memset		1904043	0					
ANR	1904121	Identifier	memset		1904043	0					
ANR	1904122	ArgumentList	session		1904043	1					
ANR	1904123	Argument	session		1904043	0					
ANR	1904124	Identifier	session		1904043	0					
ANR	1904125	Argument	0		1904043	1					
ANR	1904126	PrimaryExpression	0		1904043	0					
ANR	1904127	Argument	sizeof ( php_snmp_session )		1904043	2					
ANR	1904128	SizeofExpression	sizeof ( php_snmp_session )		1904043	0					
ANR	1904129	Sizeof	sizeof		1904043	0					
ANR	1904130	SizeofOperand	php_snmp_session		1904043	1					
ANR	1904131	ExpressionStatement	snmp_sess_init ( session )	1132:1:35395:35418	1904043	10	True				
ANR	1904132	CallExpression	snmp_sess_init ( session )		1904043	0					
ANR	1904133	Callee	snmp_sess_init		1904043	0					
ANR	1904134	Identifier	snmp_sess_init		1904043	0					
ANR	1904135	ArgumentList	session		1904043	1					
ANR	1904136	Argument	session		1904043	0					
ANR	1904137	Identifier	session		1904043	0					
ANR	1904138	ExpressionStatement	session -> version = version	1134:1:35422:35448	1904043	11	True				
ANR	1904139	AssignmentExpression	session -> version = version		1904043	0		=			
ANR	1904140	PtrMemberAccess	session -> version		1904043	0					
ANR	1904141	Identifier	session		1904043	0					
ANR	1904142	Identifier	version		1904043	1					
ANR	1904143	Identifier	version		1904043	1					
ANR	1904144	ExpressionStatement	session -> remote_port = SNMP_PORT	1135:1:35451:35483	1904043	12	True				
ANR	1904145	AssignmentExpression	session -> remote_port = SNMP_PORT		1904043	0		=			
ANR	1904146	PtrMemberAccess	session -> remote_port		1904043	0					
ANR	1904147	Identifier	session		1904043	0					
ANR	1904148	Identifier	remote_port		1904043	1					
ANR	1904149	Identifier	SNMP_PORT		1904043	1					
ANR	1904150	ExpressionStatement	session -> peername = emalloc ( MAX_NAME_LEN )	1137:1:35487:35528	1904043	13	True				
ANR	1904151	AssignmentExpression	session -> peername = emalloc ( MAX_NAME_LEN )		1904043	0		=			
ANR	1904152	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904153	Identifier	session		1904043	0					
ANR	1904154	Identifier	peername		1904043	1					
ANR	1904155	CallExpression	emalloc ( MAX_NAME_LEN )		1904043	1					
ANR	1904156	Callee	emalloc		1904043	0					
ANR	1904157	Identifier	emalloc		1904043	0					
ANR	1904158	ArgumentList	MAX_NAME_LEN		1904043	1					
ANR	1904159	Argument	MAX_NAME_LEN		1904043	0					
ANR	1904160	Identifier	MAX_NAME_LEN		1904043	0					
ANR	1904161	IfStatement	if ( session -> peername == NULL )		1904043	14					
ANR	1904162	Condition	session -> peername == NULL	1138:5:35535:35559	1904043	0	True				
ANR	1904163	EqualityExpression	session -> peername == NULL		1904043	0		==			
ANR	1904164	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904165	Identifier	session		1904043	0					
ANR	1904166	Identifier	peername		1904043	1					
ANR	1904167	Identifier	NULL		1904043	1					
ANR	1904168	CompoundStatement		23:32:562:562	1904043	1					
ANR	1904169	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed while copying hostname"" )"	1139:2:35566:35642	1904043	0	True				
ANR	1904170	CallExpression	"php_error_docref ( NULL , E_WARNING , ""emalloc() failed while copying hostname"" )"		1904043	0					
ANR	1904171	Callee	php_error_docref		1904043	0					
ANR	1904172	Identifier	php_error_docref		1904043	0					
ANR	1904173	ArgumentList	NULL		1904043	1					
ANR	1904174	Argument	NULL		1904043	0					
ANR	1904175	Identifier	NULL		1904043	0					
ANR	1904176	Argument	E_WARNING		1904043	1					
ANR	1904177	Identifier	E_WARNING		1904043	0					
ANR	1904178	Argument	"""emalloc() failed while copying hostname"""		1904043	2					
ANR	1904179	PrimaryExpression	"""emalloc() failed while copying hostname"""		1904043	0					
ANR	1904180	ReturnStatement	return ( - 1 ) ;	1140:2:35646:35657	1904043	1	True				
ANR	1904181	UnaryOperationExpression	- 1		1904043	0					
ANR	1904182	UnaryOperator	-		1904043	0					
ANR	1904183	PrimaryExpression	1		1904043	1					
ANR	1904184	ExpressionStatement	"strlcpy ( session -> peername , hostname , MAX_NAME_LEN )"	1143:1:35719:35769	1904043	15	True				
ANR	1904185	CallExpression	"strlcpy ( session -> peername , hostname , MAX_NAME_LEN )"		1904043	0					
ANR	1904186	Callee	strlcpy		1904043	0					
ANR	1904187	Identifier	strlcpy		1904043	0					
ANR	1904188	ArgumentList	session -> peername		1904043	1					
ANR	1904189	Argument	session -> peername		1904043	0					
ANR	1904190	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904191	Identifier	session		1904043	0					
ANR	1904192	Identifier	peername		1904043	1					
ANR	1904193	Argument	hostname		1904043	1					
ANR	1904194	Identifier	hostname		1904043	0					
ANR	1904195	Argument	MAX_NAME_LEN		1904043	2					
ANR	1904196	Identifier	MAX_NAME_LEN		1904043	0					
ANR	1904197	ExpressionStatement	host_ptr = session -> peername	1144:1:35772:35800	1904043	16	True				
ANR	1904198	AssignmentExpression	host_ptr = session -> peername		1904043	0		=			
ANR	1904199	Identifier	host_ptr		1904043	0					
ANR	1904200	PtrMemberAccess	session -> peername		1904043	1					
ANR	1904201	Identifier	session		1904043	0					
ANR	1904202	Identifier	peername		1904043	1					
ANR	1904203	IfStatement	if ( * host_ptr == '[' )		1904043	17					
ANR	1904204	Condition	* host_ptr == '['	1147:5:35877:35892	1904043	0	True				
ANR	1904205	EqualityExpression	* host_ptr == '['		1904043	0		==			
ANR	1904206	UnaryOperationExpression	* host_ptr		1904043	0					
ANR	1904207	UnaryOperator	*		1904043	0					
ANR	1904208	Identifier	host_ptr		1904043	1					
ANR	1904209	PrimaryExpression	'['		1904043	1					
ANR	1904210	CompoundStatement		32:23:895:895	1904043	1					
ANR	1904211	ExpressionStatement	force_ipv6 = TRUE	1148:2:35918:35935	1904043	0	True				
ANR	1904212	AssignmentExpression	force_ipv6 = TRUE		1904043	0		=			
ANR	1904213	Identifier	force_ipv6		1904043	0					
ANR	1904214	Identifier	TRUE		1904043	1					
ANR	1904215	ExpressionStatement	host_ptr ++	1149:2:35939:35949	1904043	1	True				
ANR	1904216	PostIncDecOperationExpression	host_ptr ++		1904043	0					
ANR	1904217	Identifier	host_ptr		1904043	0					
ANR	1904218	IncDec	++		1904043	1					
ANR	1904219	IfStatement	"if ( ( pptr = strchr ( host_ptr , ']' ) ) )"		1904043	2					
ANR	1904220	Condition	"pptr = strchr ( host_ptr , ']' )"	1150:6:35957:35986	1904043	0	True				
ANR	1904221	AssignmentExpression	"pptr = strchr ( host_ptr , ']' )"		1904043	0		=			
ANR	1904222	Identifier	pptr		1904043	0					
ANR	1904223	CallExpression	"strchr ( host_ptr , ']' )"		1904043	1					
ANR	1904224	Callee	strchr		1904043	0					
ANR	1904225	Identifier	strchr		1904043	0					
ANR	1904226	ArgumentList	host_ptr		1904043	1					
ANR	1904227	Argument	host_ptr		1904043	0					
ANR	1904228	Identifier	host_ptr		1904043	0					
ANR	1904229	Argument	']'		1904043	1					
ANR	1904230	PrimaryExpression	']'		1904043	0					
ANR	1904231	CompoundStatement		35:38:989:989	1904043	1					
ANR	1904232	IfStatement	if ( pptr [ 1 ] == ':' )		1904043	0					
ANR	1904233	Condition	pptr [ 1 ] == ':'	1151:7:35998:36011	1904043	0	True				
ANR	1904234	EqualityExpression	pptr [ 1 ] == ':'		1904043	0		==			
ANR	1904235	ArrayIndexing	pptr [ 1 ]		1904043	0					
ANR	1904236	Identifier	pptr		1904043	0					
ANR	1904237	PrimaryExpression	1		1904043	1					
ANR	1904238	PrimaryExpression	':'		1904043	1					
ANR	1904239	CompoundStatement		36:23:1014:1014	1904043	1					
ANR	1904240	ExpressionStatement	session -> remote_port = atoi ( pptr + 2 )	1152:4:36020:36057	1904043	0	True				
ANR	1904241	AssignmentExpression	session -> remote_port = atoi ( pptr + 2 )		1904043	0		=			
ANR	1904242	PtrMemberAccess	session -> remote_port		1904043	0					
ANR	1904243	Identifier	session		1904043	0					
ANR	1904244	Identifier	remote_port		1904043	1					
ANR	1904245	CallExpression	atoi ( pptr + 2 )		1904043	1					
ANR	1904246	Callee	atoi		1904043	0					
ANR	1904247	Identifier	atoi		1904043	0					
ANR	1904248	ArgumentList	pptr + 2		1904043	1					
ANR	1904249	Argument	pptr + 2		1904043	0					
ANR	1904250	AdditiveExpression	pptr + 2		1904043	0		+			
ANR	1904251	Identifier	pptr		1904043	0					
ANR	1904252	PrimaryExpression	2		1904043	1					
ANR	1904253	ExpressionStatement	* pptr = '\\0'	1154:3:36067:36079	1904043	1	True				
ANR	1904254	AssignmentExpression	* pptr = '\\0'		1904043	0		=			
ANR	1904255	UnaryOperationExpression	* pptr		1904043	0					
ANR	1904256	UnaryOperator	*		1904043	0					
ANR	1904257	Identifier	pptr		1904043	1					
ANR	1904258	PrimaryExpression	'\\0'		1904043	1					
ANR	1904259	ElseStatement	else		1904043	0					
ANR	1904260	CompoundStatement		40:9:1090:1090	1904043	0					
ANR	1904261	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""malformed IPv6 address, closing square bracket missing"" )"	1156:3:36095:36186	1904043	0	True				
ANR	1904262	CallExpression	"php_error_docref ( NULL , E_WARNING , ""malformed IPv6 address, closing square bracket missing"" )"		1904043	0					
ANR	1904263	Callee	php_error_docref		1904043	0					
ANR	1904264	Identifier	php_error_docref		1904043	0					
ANR	1904265	ArgumentList	NULL		1904043	1					
ANR	1904266	Argument	NULL		1904043	0					
ANR	1904267	Identifier	NULL		1904043	0					
ANR	1904268	Argument	E_WARNING		1904043	1					
ANR	1904269	Identifier	E_WARNING		1904043	0					
ANR	1904270	Argument	"""malformed IPv6 address, closing square bracket missing"""		1904043	2					
ANR	1904271	PrimaryExpression	"""malformed IPv6 address, closing square bracket missing"""		1904043	0					
ANR	1904272	ReturnStatement	return ( - 1 ) ;	1157:3:36191:36202	1904043	1	True				
ANR	1904273	UnaryOperationExpression	- 1		1904043	0					
ANR	1904274	UnaryOperator	-		1904043	0					
ANR	1904275	PrimaryExpression	1		1904043	1					
ANR	1904276	ElseStatement	else		1904043	0					
ANR	1904277	CompoundStatement		44:8:1216:1216	1904043	0					
ANR	1904278	IfStatement	"if ( ( pptr = strchr ( host_ptr , ':' ) ) )"		1904043	0					
ANR	1904279	Condition	"pptr = strchr ( host_ptr , ':' )"	1160:6:36243:36272	1904043	0	True				
ANR	1904280	AssignmentExpression	"pptr = strchr ( host_ptr , ':' )"		1904043	0		=			
ANR	1904281	Identifier	pptr		1904043	0					
ANR	1904282	CallExpression	"strchr ( host_ptr , ':' )"		1904043	1					
ANR	1904283	Callee	strchr		1904043	0					
ANR	1904284	Identifier	strchr		1904043	0					
ANR	1904285	ArgumentList	host_ptr		1904043	1					
ANR	1904286	Argument	host_ptr		1904043	0					
ANR	1904287	Identifier	host_ptr		1904043	0					
ANR	1904288	Argument	':'		1904043	1					
ANR	1904289	PrimaryExpression	':'		1904043	0					
ANR	1904290	CompoundStatement		45:38:1275:1275	1904043	1					
ANR	1904291	ExpressionStatement	session -> remote_port = atoi ( pptr + 1 )	1161:3:36280:36317	1904043	0	True				
ANR	1904292	AssignmentExpression	session -> remote_port = atoi ( pptr + 1 )		1904043	0		=			
ANR	1904293	PtrMemberAccess	session -> remote_port		1904043	0					
ANR	1904294	Identifier	session		1904043	0					
ANR	1904295	Identifier	remote_port		1904043	1					
ANR	1904296	CallExpression	atoi ( pptr + 1 )		1904043	1					
ANR	1904297	Callee	atoi		1904043	0					
ANR	1904298	Identifier	atoi		1904043	0					
ANR	1904299	ArgumentList	pptr + 1		1904043	1					
ANR	1904300	Argument	pptr + 1		1904043	0					
ANR	1904301	AdditiveExpression	pptr + 1		1904043	0		+			
ANR	1904302	Identifier	pptr		1904043	0					
ANR	1904303	PrimaryExpression	1		1904043	1					
ANR	1904304	ExpressionStatement	* pptr = '\\0'	1162:3:36322:36334	1904043	1	True				
ANR	1904305	AssignmentExpression	* pptr = '\\0'		1904043	0		=			
ANR	1904306	UnaryOperationExpression	* pptr		1904043	0					
ANR	1904307	UnaryOperator	*		1904043	0					
ANR	1904308	Identifier	pptr		1904043	1					
ANR	1904309	PrimaryExpression	'\\0'		1904043	1					
ANR	1904310	IfStatement	"if ( ( n = php_network_getaddresses ( host_ptr , SOCK_DGRAM , & psal , NULL ) ) == 0 )"		1904043	18					
ANR	1904311	Condition	"( n = php_network_getaddresses ( host_ptr , SOCK_DGRAM , & psal , NULL ) ) == 0"	1168:5:36525:36594	1904043	0	True				
ANR	1904312	EqualityExpression	"( n = php_network_getaddresses ( host_ptr , SOCK_DGRAM , & psal , NULL ) ) == 0"		1904043	0		==			
ANR	1904313	AssignmentExpression	"n = php_network_getaddresses ( host_ptr , SOCK_DGRAM , & psal , NULL )"		1904043	0		=			
ANR	1904314	Identifier	n		1904043	0					
ANR	1904315	CallExpression	"php_network_getaddresses ( host_ptr , SOCK_DGRAM , & psal , NULL )"		1904043	1					
ANR	1904316	Callee	php_network_getaddresses		1904043	0					
ANR	1904317	Identifier	php_network_getaddresses		1904043	0					
ANR	1904318	ArgumentList	host_ptr		1904043	1					
ANR	1904319	Argument	host_ptr		1904043	0					
ANR	1904320	Identifier	host_ptr		1904043	0					
ANR	1904321	Argument	SOCK_DGRAM		1904043	1					
ANR	1904322	Identifier	SOCK_DGRAM		1904043	0					
ANR	1904323	Argument	& psal		1904043	2					
ANR	1904324	UnaryOperationExpression	& psal		1904043	0					
ANR	1904325	UnaryOperator	&		1904043	0					
ANR	1904326	Identifier	psal		1904043	1					
ANR	1904327	Argument	NULL		1904043	3					
ANR	1904328	Identifier	NULL		1904043	0					
ANR	1904329	PrimaryExpression	0		1904043	1					
ANR	1904330	CompoundStatement		53:77:1597:1597	1904043	1					
ANR	1904331	ReturnStatement	return ( - 1 ) ;	1170:2:36662:36673	1904043	0	True				
ANR	1904332	UnaryOperationExpression	- 1		1904043	0					
ANR	1904333	UnaryOperator	-		1904043	0					
ANR	1904334	PrimaryExpression	1		1904043	1					
ANR	1904335	ExpressionStatement	* ( session -> peername ) = '\\0'	1174:1:36759:36786	1904043	19	True				
ANR	1904336	AssignmentExpression	* ( session -> peername ) = '\\0'		1904043	0		=			
ANR	1904337	UnaryOperationExpression	* ( session -> peername )		1904043	0					
ANR	1904338	UnaryOperator	*		1904043	0					
ANR	1904339	PtrMemberAccess	session -> peername		1904043	1					
ANR	1904340	Identifier	session		1904043	0					
ANR	1904341	Identifier	peername		1904043	1					
ANR	1904342	PrimaryExpression	'\\0'		1904043	1					
ANR	1904343	ExpressionStatement	res = psal	1175:1:36789:36799	1904043	20	True				
ANR	1904344	AssignmentExpression	res = psal		1904043	0		=			
ANR	1904345	Identifier	res		1904043	0					
ANR	1904346	Identifier	psal		1904043	1					
ANR	1904347	WhileStatement	while ( n -- > 0 )		1904043	21					
ANR	1904348	Condition	n -- > 0	1176:8:36809:36815	1904043	0	True				
ANR	1904349	RelationalExpression	n -- > 0		1904043	0		>			
ANR	1904350	PostIncDecOperationExpression	n --		1904043	0					
ANR	1904351	Identifier	n		1904043	0					
ANR	1904352	IncDec	--		1904043	1					
ANR	1904353	PrimaryExpression	0		1904043	1					
ANR	1904354	CompoundStatement		61:17:1818:1818	1904043	1					
ANR	1904355	ExpressionStatement	pptr = session -> peername	1177:2:36822:36846	1904043	0	True				
ANR	1904356	AssignmentExpression	pptr = session -> peername		1904043	0		=			
ANR	1904357	Identifier	pptr		1904043	0					
ANR	1904358	PtrMemberAccess	session -> peername		1904043	1					
ANR	1904359	Identifier	session		1904043	0					
ANR	1904360	Identifier	peername		1904043	1					
ANR	1904361	IfStatement	if ( force_ipv6 && ( * res ) -> sa_family != AF_INET6 )		1904043	1					
ANR	1904362	Condition	force_ipv6 && ( * res ) -> sa_family != AF_INET6	1179:6:36906:36948	1904043	0	True				
ANR	1904363	AndExpression	force_ipv6 && ( * res ) -> sa_family != AF_INET6		1904043	0		&&			
ANR	1904364	Identifier	force_ipv6		1904043	0					
ANR	1904365	EqualityExpression	( * res ) -> sa_family != AF_INET6		1904043	1		!=			
ANR	1904366	PtrMemberAccess	( * res ) -> sa_family		1904043	0					
ANR	1904367	UnaryOperationExpression	* res		1904043	0					
ANR	1904368	UnaryOperator	*		1904043	0					
ANR	1904369	Identifier	res		1904043	1					
ANR	1904370	Identifier	sa_family		1904043	1					
ANR	1904371	Identifier	AF_INET6		1904043	1					
ANR	1904372	CompoundStatement		64:51:1951:1951	1904043	1					
ANR	1904373	ExpressionStatement	res ++	1180:3:36956:36961	1904043	0	True				
ANR	1904374	PostIncDecOperationExpression	res ++		1904043	0					
ANR	1904375	Identifier	res		1904043	0					
ANR	1904376	IncDec	++		1904043	1					
ANR	1904377	ContinueStatement	continue ;	1181:3:36966:36974	1904043	1	True				
ANR	1904378	IfStatement	if ( ( * res ) -> sa_family == AF_INET6 )		1904043	2					
ANR	1904379	Condition	( * res ) -> sa_family == AF_INET6	1183:6:36986:37014	1904043	0	True				
ANR	1904380	EqualityExpression	( * res ) -> sa_family == AF_INET6		1904043	0		==			
ANR	1904381	PtrMemberAccess	( * res ) -> sa_family		1904043	0					
ANR	1904382	UnaryOperationExpression	* res		1904043	0					
ANR	1904383	UnaryOperator	*		1904043	0					
ANR	1904384	Identifier	res		1904043	1					
ANR	1904385	Identifier	sa_family		1904043	1					
ANR	1904386	Identifier	AF_INET6		1904043	1					
ANR	1904387	CompoundStatement		68:37:2017:2017	1904043	1					
ANR	1904388	ExpressionStatement	"strcpy ( session -> peername , ""udp6:["" )"	1184:3:37022:37057	1904043	0	True				
ANR	1904389	CallExpression	"strcpy ( session -> peername , ""udp6:["" )"		1904043	0					
ANR	1904390	Callee	strcpy		1904043	0					
ANR	1904391	Identifier	strcpy		1904043	0					
ANR	1904392	ArgumentList	session -> peername		1904043	1					
ANR	1904393	Argument	session -> peername		1904043	0					
ANR	1904394	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904395	Identifier	session		1904043	0					
ANR	1904396	Identifier	peername		1904043	1					
ANR	1904397	Argument	"""udp6:["""		1904043	1					
ANR	1904398	PrimaryExpression	"""udp6:["""		1904043	0					
ANR	1904399	ExpressionStatement	pptr = session -> peername + strlen ( session -> peername )	1185:3:37062:37114	1904043	1	True				
ANR	1904400	AssignmentExpression	pptr = session -> peername + strlen ( session -> peername )		1904043	0		=			
ANR	1904401	Identifier	pptr		1904043	0					
ANR	1904402	AdditiveExpression	session -> peername + strlen ( session -> peername )		1904043	1		+			
ANR	1904403	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904404	Identifier	session		1904043	0					
ANR	1904405	Identifier	peername		1904043	1					
ANR	1904406	CallExpression	strlen ( session -> peername )		1904043	1					
ANR	1904407	Callee	strlen		1904043	0					
ANR	1904408	Identifier	strlen		1904043	0					
ANR	1904409	ArgumentList	session -> peername		1904043	1					
ANR	1904410	Argument	session -> peername		1904043	0					
ANR	1904411	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904412	Identifier	session		1904043	0					
ANR	1904413	Identifier	peername		1904043	1					
ANR	1904414	ExpressionStatement	"inet_ntop ( ( * res ) -> sa_family , & ( ( ( struct sockaddr_in6 * ) ( * res ) ) -> sin6_addr ) , pptr , MAX_NAME_LEN )"	1186:3:37119:37213	1904043	2	True				
ANR	1904415	CallExpression	"inet_ntop ( ( * res ) -> sa_family , & ( ( ( struct sockaddr_in6 * ) ( * res ) ) -> sin6_addr ) , pptr , MAX_NAME_LEN )"		1904043	0					
ANR	1904416	Callee	inet_ntop		1904043	0					
ANR	1904417	Identifier	inet_ntop		1904043	0					
ANR	1904418	ArgumentList	( * res ) -> sa_family		1904043	1					
ANR	1904419	Argument	( * res ) -> sa_family		1904043	0					
ANR	1904420	PtrMemberAccess	( * res ) -> sa_family		1904043	0					
ANR	1904421	UnaryOperationExpression	* res		1904043	0					
ANR	1904422	UnaryOperator	*		1904043	0					
ANR	1904423	Identifier	res		1904043	1					
ANR	1904424	Identifier	sa_family		1904043	1					
ANR	1904425	Argument	& ( ( ( struct sockaddr_in6 * ) ( * res ) ) -> sin6_addr )		1904043	1					
ANR	1904426	UnaryOperationExpression	& ( ( ( struct sockaddr_in6 * ) ( * res ) ) -> sin6_addr )		1904043	0					
ANR	1904427	UnaryOperator	&		1904043	0					
ANR	1904428	PtrMemberAccess	( ( struct sockaddr_in6 * ) ( * res ) ) -> sin6_addr		1904043	1					
ANR	1904429	CastExpression	( struct sockaddr_in6 * ) ( * res )		1904043	0					
ANR	1904430	CastTarget	struct sockaddr_in6 *		1904043	0					
ANR	1904431	UnaryOperationExpression	* res		1904043	1					
ANR	1904432	UnaryOperator	*		1904043	0					
ANR	1904433	Identifier	res		1904043	1					
ANR	1904434	Identifier	sin6_addr		1904043	1					
ANR	1904435	Argument	pptr		1904043	2					
ANR	1904436	Identifier	pptr		1904043	0					
ANR	1904437	Argument	MAX_NAME_LEN		1904043	3					
ANR	1904438	Identifier	MAX_NAME_LEN		1904043	0					
ANR	1904439	ExpressionStatement	"strcat ( pptr , ""]"" )"	1187:3:37218:37235	1904043	3	True				
ANR	1904440	CallExpression	"strcat ( pptr , ""]"" )"		1904043	0					
ANR	1904441	Callee	strcat		1904043	0					
ANR	1904442	Identifier	strcat		1904043	0					
ANR	1904443	ArgumentList	pptr		1904043	1					
ANR	1904444	Argument	pptr		1904043	0					
ANR	1904445	Identifier	pptr		1904043	0					
ANR	1904446	Argument	"""]"""		1904043	1					
ANR	1904447	PrimaryExpression	"""]"""		1904043	0					
ANR	1904448	ElseStatement	else		1904043	0					
ANR	1904449	IfStatement	if ( ( * res ) -> sa_family == AF_INET )		1904043	0					
ANR	1904450	Condition	( * res ) -> sa_family == AF_INET	1188:13:37250:37277	1904043	0	True				
ANR	1904451	EqualityExpression	( * res ) -> sa_family == AF_INET		1904043	0		==			
ANR	1904452	PtrMemberAccess	( * res ) -> sa_family		1904043	0					
ANR	1904453	UnaryOperationExpression	* res		1904043	0					
ANR	1904454	UnaryOperator	*		1904043	0					
ANR	1904455	Identifier	res		1904043	1					
ANR	1904456	Identifier	sa_family		1904043	1					
ANR	1904457	Identifier	AF_INET		1904043	1					
ANR	1904458	CompoundStatement		73:43:2280:2280	1904043	1					
ANR	1904459	ExpressionStatement	"inet_ntop ( ( * res ) -> sa_family , & ( ( ( struct sockaddr_in * ) ( * res ) ) -> sin_addr ) , pptr , MAX_NAME_LEN )"	1189:3:37285:37377	1904043	0	True				
ANR	1904460	CallExpression	"inet_ntop ( ( * res ) -> sa_family , & ( ( ( struct sockaddr_in * ) ( * res ) ) -> sin_addr ) , pptr , MAX_NAME_LEN )"		1904043	0					
ANR	1904461	Callee	inet_ntop		1904043	0					
ANR	1904462	Identifier	inet_ntop		1904043	0					
ANR	1904463	ArgumentList	( * res ) -> sa_family		1904043	1					
ANR	1904464	Argument	( * res ) -> sa_family		1904043	0					
ANR	1904465	PtrMemberAccess	( * res ) -> sa_family		1904043	0					
ANR	1904466	UnaryOperationExpression	* res		1904043	0					
ANR	1904467	UnaryOperator	*		1904043	0					
ANR	1904468	Identifier	res		1904043	1					
ANR	1904469	Identifier	sa_family		1904043	1					
ANR	1904470	Argument	& ( ( ( struct sockaddr_in * ) ( * res ) ) -> sin_addr )		1904043	1					
ANR	1904471	UnaryOperationExpression	& ( ( ( struct sockaddr_in * ) ( * res ) ) -> sin_addr )		1904043	0					
ANR	1904472	UnaryOperator	&		1904043	0					
ANR	1904473	PtrMemberAccess	( ( struct sockaddr_in * ) ( * res ) ) -> sin_addr		1904043	1					
ANR	1904474	CastExpression	( struct sockaddr_in * ) ( * res )		1904043	0					
ANR	1904475	CastTarget	struct sockaddr_in *		1904043	0					
ANR	1904476	UnaryOperationExpression	* res		1904043	1					
ANR	1904477	UnaryOperator	*		1904043	0					
ANR	1904478	Identifier	res		1904043	1					
ANR	1904479	Identifier	sin_addr		1904043	1					
ANR	1904480	Argument	pptr		1904043	2					
ANR	1904481	Identifier	pptr		1904043	0					
ANR	1904482	Argument	MAX_NAME_LEN		1904043	3					
ANR	1904483	Identifier	MAX_NAME_LEN		1904043	0					
ANR	1904484	ElseStatement	else		1904043	0					
ANR	1904485	CompoundStatement		75:9:2388:2388	1904043	0					
ANR	1904486	ExpressionStatement	res ++	1191:3:37393:37398	1904043	0	True				
ANR	1904487	PostIncDecOperationExpression	res ++		1904043	0					
ANR	1904488	Identifier	res		1904043	0					
ANR	1904489	IncDec	++		1904043	1					
ANR	1904490	ContinueStatement	continue ;	1192:3:37403:37411	1904043	1	True				
ANR	1904491	BreakStatement	break ;	1201:2:37565:37570	1904043	3	True				
ANR	1904492	IfStatement	if ( strlen ( session -> peername ) == 0 )		1904043	22					
ANR	1904493	Condition	strlen ( session -> peername ) == 0	1204:5:37581:37610	1904043	0	True				
ANR	1904494	EqualityExpression	strlen ( session -> peername ) == 0		1904043	0		==			
ANR	1904495	CallExpression	strlen ( session -> peername )		1904043	0					
ANR	1904496	Callee	strlen		1904043	0					
ANR	1904497	Identifier	strlen		1904043	0					
ANR	1904498	ArgumentList	session -> peername		1904043	1					
ANR	1904499	Argument	session -> peername		1904043	0					
ANR	1904500	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904501	Identifier	session		1904043	0					
ANR	1904502	Identifier	peername		1904043	1					
ANR	1904503	PrimaryExpression	0		1904043	1					
ANR	1904504	CompoundStatement		89:37:2613:2613	1904043	1					
ANR	1904505	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown failure while resolving '%s'"" , hostname )"	1205:2:37617:37700	1904043	0	True				
ANR	1904506	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown failure while resolving '%s'"" , hostname )"		1904043	0					
ANR	1904507	Callee	php_error_docref		1904043	0					
ANR	1904508	Identifier	php_error_docref		1904043	0					
ANR	1904509	ArgumentList	NULL		1904043	1					
ANR	1904510	Argument	NULL		1904043	0					
ANR	1904511	Identifier	NULL		1904043	0					
ANR	1904512	Argument	E_WARNING		1904043	1					
ANR	1904513	Identifier	E_WARNING		1904043	0					
ANR	1904514	Argument	"""Unknown failure while resolving '%s'"""		1904043	2					
ANR	1904515	PrimaryExpression	"""Unknown failure while resolving '%s'"""		1904043	0					
ANR	1904516	Argument	hostname		1904043	3					
ANR	1904517	Identifier	hostname		1904043	0					
ANR	1904518	ReturnStatement	return ( - 1 ) ;	1206:2:37704:37715	1904043	1	True				
ANR	1904519	UnaryOperationExpression	- 1		1904043	0					
ANR	1904520	UnaryOperator	-		1904043	0					
ANR	1904521	PrimaryExpression	1		1904043	1					
ANR	1904522	IfStatement	if ( session -> remote_port != SNMP_PORT )		1904043	23					
ANR	1904523	Condition	session -> remote_port != SNMP_PORT	1213:5:37840:37872	1904043	0	True				
ANR	1904524	EqualityExpression	session -> remote_port != SNMP_PORT		1904043	0		!=			
ANR	1904525	PtrMemberAccess	session -> remote_port		1904043	0					
ANR	1904526	Identifier	session		1904043	0					
ANR	1904527	Identifier	remote_port		1904043	1					
ANR	1904528	Identifier	SNMP_PORT		1904043	1					
ANR	1904529	CompoundStatement		98:40:2875:2875	1904043	1					
ANR	1904530	ExpressionStatement	pptr = session -> peername + strlen ( session -> peername )	1214:2:37879:37931	1904043	0	True				
ANR	1904531	AssignmentExpression	pptr = session -> peername + strlen ( session -> peername )		1904043	0		=			
ANR	1904532	Identifier	pptr		1904043	0					
ANR	1904533	AdditiveExpression	session -> peername + strlen ( session -> peername )		1904043	1		+			
ANR	1904534	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904535	Identifier	session		1904043	0					
ANR	1904536	Identifier	peername		1904043	1					
ANR	1904537	CallExpression	strlen ( session -> peername )		1904043	1					
ANR	1904538	Callee	strlen		1904043	0					
ANR	1904539	Identifier	strlen		1904043	0					
ANR	1904540	ArgumentList	session -> peername		1904043	1					
ANR	1904541	Argument	session -> peername		1904043	0					
ANR	1904542	PtrMemberAccess	session -> peername		1904043	0					
ANR	1904543	Identifier	session		1904043	0					
ANR	1904544	Identifier	peername		1904043	1					
ANR	1904545	ExpressionStatement	"sprintf ( pptr , "":%d"" , session -> remote_port )"	1215:2:37935:37977	1904043	1	True				
ANR	1904546	CallExpression	"sprintf ( pptr , "":%d"" , session -> remote_port )"		1904043	0					
ANR	1904547	Callee	sprintf		1904043	0					
ANR	1904548	Identifier	sprintf		1904043	0					
ANR	1904549	ArgumentList	pptr		1904043	1					
ANR	1904550	Argument	pptr		1904043	0					
ANR	1904551	Identifier	pptr		1904043	0					
ANR	1904552	Argument	""":%d"""		1904043	1					
ANR	1904553	PrimaryExpression	""":%d"""		1904043	0					
ANR	1904554	Argument	session -> remote_port		1904043	2					
ANR	1904555	PtrMemberAccess	session -> remote_port		1904043	0					
ANR	1904556	Identifier	session		1904043	0					
ANR	1904557	Identifier	remote_port		1904043	1					
ANR	1904558	ExpressionStatement	php_network_freeaddresses ( psal )	1218:1:37984:38015	1904043	24	True				
ANR	1904559	CallExpression	php_network_freeaddresses ( psal )		1904043	0					
ANR	1904560	Callee	php_network_freeaddresses		1904043	0					
ANR	1904561	Identifier	php_network_freeaddresses		1904043	0					
ANR	1904562	ArgumentList	psal		1904043	1					
ANR	1904563	Argument	psal		1904043	0					
ANR	1904564	Identifier	psal		1904043	0					
ANR	1904565	IfStatement	if ( version == SNMP_VERSION_3 )		1904043	25					
ANR	1904566	Condition	version == SNMP_VERSION_3	1220:5:38023:38047	1904043	0	True				
ANR	1904567	EqualityExpression	version == SNMP_VERSION_3		1904043	0		==			
ANR	1904568	Identifier	version		1904043	0					
ANR	1904569	Identifier	SNMP_VERSION_3		1904043	1					
ANR	1904570	CompoundStatement		105:32:3050:3050	1904043	1					
ANR	1904571	ExpressionStatement	session -> securityName = estrdup ( community )	1222:2:38089:38131	1904043	0	True				
ANR	1904572	AssignmentExpression	session -> securityName = estrdup ( community )		1904043	0		=			
ANR	1904573	PtrMemberAccess	session -> securityName		1904043	0					
ANR	1904574	Identifier	session		1904043	0					
ANR	1904575	Identifier	securityName		1904043	1					
ANR	1904576	CallExpression	estrdup ( community )		1904043	1					
ANR	1904577	Callee	estrdup		1904043	0					
ANR	1904578	Identifier	estrdup		1904043	0					
ANR	1904579	ArgumentList	community		1904043	1					
ANR	1904580	Argument	community		1904043	0					
ANR	1904581	Identifier	community		1904043	0					
ANR	1904582	ExpressionStatement	session -> securityNameLen = strlen ( session -> securityName )	1223:2:38135:38191	1904043	1	True				
ANR	1904583	AssignmentExpression	session -> securityNameLen = strlen ( session -> securityName )		1904043	0		=			
ANR	1904584	PtrMemberAccess	session -> securityNameLen		1904043	0					
ANR	1904585	Identifier	session		1904043	0					
ANR	1904586	Identifier	securityNameLen		1904043	1					
ANR	1904587	CallExpression	strlen ( session -> securityName )		1904043	1					
ANR	1904588	Callee	strlen		1904043	0					
ANR	1904589	Identifier	strlen		1904043	0					
ANR	1904590	ArgumentList	session -> securityName		1904043	1					
ANR	1904591	Argument	session -> securityName		1904043	0					
ANR	1904592	PtrMemberAccess	session -> securityName		1904043	0					
ANR	1904593	Identifier	session		1904043	0					
ANR	1904594	Identifier	securityName		1904043	1					
ANR	1904595	ElseStatement	else		1904043	0					
ANR	1904596	CompoundStatement		109:8:3201:3201	1904043	0					
ANR	1904597	ExpressionStatement	session -> authenticator = NULL	1225:2:38205:38234	1904043	0	True				
ANR	1904598	AssignmentExpression	session -> authenticator = NULL		1904043	0		=			
ANR	1904599	PtrMemberAccess	session -> authenticator		1904043	0					
ANR	1904600	Identifier	session		1904043	0					
ANR	1904601	Identifier	authenticator		1904043	1					
ANR	1904602	Identifier	NULL		1904043	1					
ANR	1904603	ExpressionStatement	session -> community = ( u_char * ) estrdup ( community )	1226:2:38238:38287	1904043	1	True				
ANR	1904604	AssignmentExpression	session -> community = ( u_char * ) estrdup ( community )		1904043	0		=			
ANR	1904605	PtrMemberAccess	session -> community		1904043	0					
ANR	1904606	Identifier	session		1904043	0					
ANR	1904607	Identifier	community		1904043	1					
ANR	1904608	CastExpression	( u_char * ) estrdup ( community )		1904043	1					
ANR	1904609	CastTarget	u_char *		1904043	0					
ANR	1904610	CallExpression	estrdup ( community )		1904043	1					
ANR	1904611	Callee	estrdup		1904043	0					
ANR	1904612	Identifier	estrdup		1904043	0					
ANR	1904613	ArgumentList	community		1904043	1					
ANR	1904614	Argument	community		1904043	0					
ANR	1904615	Identifier	community		1904043	0					
ANR	1904616	ExpressionStatement	session -> community_len = strlen ( community )	1227:2:38291:38333	1904043	2	True				
ANR	1904617	AssignmentExpression	session -> community_len = strlen ( community )		1904043	0		=			
ANR	1904618	PtrMemberAccess	session -> community_len		1904043	0					
ANR	1904619	Identifier	session		1904043	0					
ANR	1904620	Identifier	community_len		1904043	1					
ANR	1904621	CallExpression	strlen ( community )		1904043	1					
ANR	1904622	Callee	strlen		1904043	0					
ANR	1904623	Identifier	strlen		1904043	0					
ANR	1904624	ArgumentList	community		1904043	1					
ANR	1904625	Argument	community		1904043	0					
ANR	1904626	Identifier	community		1904043	0					
ANR	1904627	ExpressionStatement	session -> retries = retries	1230:1:38340:38366	1904043	26	True				
ANR	1904628	AssignmentExpression	session -> retries = retries		1904043	0		=			
ANR	1904629	PtrMemberAccess	session -> retries		1904043	0					
ANR	1904630	Identifier	session		1904043	0					
ANR	1904631	Identifier	retries		1904043	1					
ANR	1904632	Identifier	retries		1904043	1					
ANR	1904633	ExpressionStatement	session -> timeout = timeout	1231:1:38369:38395	1904043	27	True				
ANR	1904634	AssignmentExpression	session -> timeout = timeout		1904043	0		=			
ANR	1904635	PtrMemberAccess	session -> timeout		1904043	0					
ANR	1904636	Identifier	session		1904043	0					
ANR	1904637	Identifier	timeout		1904043	1					
ANR	1904638	Identifier	timeout		1904043	1					
ANR	1904639	ReturnStatement	return ( 0 ) ;	1232:1:38398:38408	1904043	28	True				
ANR	1904640	PrimaryExpression	0		1904043	0					
ANR	1904641	ReturnType	static int		1904043	1					
ANR	1904642	Identifier	netsnmp_session_init		1904043	2					
ANR	1904643	ParameterList	"php_snmp_session * * session_p , int version , char * hostname , char * community , int timeout , int retries"		1904043	3					
ANR	1904644	Parameter	php_snmp_session * * session_p	1115:32:34897:34924	1904043	0	True				
ANR	1904645	ParameterType	php_snmp_session * *		1904043	0					
ANR	1904646	Identifier	session_p		1904043	1					
ANR	1904647	Parameter	int version	1115:62:34927:34937	1904043	1	True				
ANR	1904648	ParameterType	int		1904043	0					
ANR	1904649	Identifier	version		1904043	1					
ANR	1904650	Parameter	char * hostname	1115:75:34940:34953	1904043	2	True				
ANR	1904651	ParameterType	char *		1904043	0					
ANR	1904652	Identifier	hostname		1904043	1					
ANR	1904653	Parameter	char * community	1115:91:34956:34970	1904043	3	True				
ANR	1904654	ParameterType	char *		1904043	0					
ANR	1904655	Identifier	community		1904043	1					
ANR	1904656	Parameter	int timeout	1115:108:34973:34983	1904043	4	True				
ANR	1904657	ParameterType	int		1904043	0					
ANR	1904658	Identifier	timeout		1904043	1					
ANR	1904659	Parameter	int retries	1115:121:34986:34996	1904043	5	True				
ANR	1904660	ParameterType	int		1904043	0					
ANR	1904661	Identifier	retries		1904043	1					
ANR	1904662	CFGEntryNode	ENTRY		1904043		True				
ANR	1904663	CFGExitNode	EXIT		1904043		True				
ANR	1904664	Symbol	strchr		1904043						
ANR	1904665	Symbol	session -> community_len		1904043						
ANR	1904666	Symbol	* ( session -> peername )		1904043						
ANR	1904667	Symbol	SNMP_PORT		1904043						
ANR	1904668	Symbol	* session		1904043						
ANR	1904669	Symbol	strlen		1904043						
ANR	1904670	Symbol	hostname		1904043						
ANR	1904671	Symbol	session -> timeout		1904043						
ANR	1904672	Symbol	* pptr		1904043						
ANR	1904673	Symbol	( * res ) -> sa_family		1904043						
ANR	1904674	Symbol	SNMP_VERSION_3		1904043						
ANR	1904675	Symbol	res		1904043						
ANR	1904676	Symbol	NULL		1904043						
ANR	1904677	Symbol	& ( ( struct sockaddr_in6 * ) ( * res ) ) -> sin6_addr		1904043						
ANR	1904678	Symbol	TRUE		1904043						
ANR	1904679	Symbol	php_network_getaddresses		1904043						
ANR	1904680	Symbol	AF_INET		1904043						
ANR	1904681	Symbol	community		1904043						
ANR	1904682	Symbol	SOCK_DGRAM		1904043						
ANR	1904683	Symbol	version		1904043						
ANR	1904684	Symbol	retries		1904043						
ANR	1904685	Symbol	force_ipv6		1904043						
ANR	1904686	Symbol	* host_ptr		1904043						
ANR	1904687	Symbol	session_p		1904043						
ANR	1904688	Symbol	session -> peername		1904043						
ANR	1904689	Symbol	session		1904043						
ANR	1904690	Symbol	* * session		1904043						
ANR	1904691	Symbol	pptr		1904043						
ANR	1904692	Symbol	* res		1904043						
ANR	1904693	Symbol	host_ptr		1904043						
ANR	1904694	Symbol	timeout		1904043						
ANR	1904695	Symbol	MAX_NAME_LEN		1904043						
ANR	1904696	Symbol	E_WARNING		1904043						
ANR	1904697	Symbol	session -> retries		1904043						
ANR	1904698	Symbol	emalloc		1904043						
ANR	1904699	Symbol	session -> securityName		1904043						
ANR	1904700	Symbol	psal		1904043						
ANR	1904701	Symbol	session -> version		1904043						
ANR	1904702	Symbol	* session -> peername		1904043						
ANR	1904703	Symbol	atoi		1904043						
ANR	1904704	Symbol	session -> securityNameLen		1904043						
ANR	1904705	Symbol	& psal		1904043						
ANR	1904706	Symbol	session -> authenticator		1904043						
ANR	1904707	Symbol	session -> remote_port		1904043						
ANR	1904708	Symbol	n		1904043						
ANR	1904709	Symbol	AF_INET6		1904043						
ANR	1904710	Symbol	* * res		1904043						
ANR	1904711	Symbol	& ( ( struct sockaddr_in * ) ( * res ) ) -> sin_addr		1904043						
ANR	1904712	Symbol	estrdup		1904043						
ANR	1904713	Symbol	FALSE		1904043						
ANR	1904714	Symbol	* session_p		1904043						
ANR	1904715	Symbol	session -> community		1904043						
ANR	1904716	Function	netsnmp_session_set_sec_level	1238:0:38552:39035							
ANR	1904717	FunctionDef	"netsnmp_session_set_sec_level (struct snmp_session * s , char * level)"		1904716	0					
ANR	1904718	CompoundStatement		1239:0:38630:39035	1904716	0					
ANR	1904719	IfStatement	"if ( ! strcasecmp ( level , ""noAuthNoPriv"" ) || ! strcasecmp ( level , ""nanp"" ) )"		1904716	0					
ANR	1904720	Condition	"! strcasecmp ( level , ""noAuthNoPriv"" ) || ! strcasecmp ( level , ""nanp"" )"	1240:5:38637:38700	1904716	0	True				
ANR	1904721	OrExpression	"! strcasecmp ( level , ""noAuthNoPriv"" ) || ! strcasecmp ( level , ""nanp"" )"		1904716	0		||			
ANR	1904722	UnaryOperationExpression	"! strcasecmp ( level , ""noAuthNoPriv"" )"		1904716	0					
ANR	1904723	UnaryOperator	!		1904716	0					
ANR	1904724	CallExpression	"strcasecmp ( level , ""noAuthNoPriv"" )"		1904716	1					
ANR	1904725	Callee	strcasecmp		1904716	0					
ANR	1904726	Identifier	strcasecmp		1904716	0					
ANR	1904727	ArgumentList	level		1904716	1					
ANR	1904728	Argument	level		1904716	0					
ANR	1904729	Identifier	level		1904716	0					
ANR	1904730	Argument	"""noAuthNoPriv"""		1904716	1					
ANR	1904731	PrimaryExpression	"""noAuthNoPriv"""		1904716	0					
ANR	1904732	UnaryOperationExpression	"! strcasecmp ( level , ""nanp"" )"		1904716	1					
ANR	1904733	UnaryOperator	!		1904716	0					
ANR	1904734	CallExpression	"strcasecmp ( level , ""nanp"" )"		1904716	1					
ANR	1904735	Callee	strcasecmp		1904716	0					
ANR	1904736	Identifier	strcasecmp		1904716	0					
ANR	1904737	ArgumentList	level		1904716	1					
ANR	1904738	Argument	level		1904716	0					
ANR	1904739	Identifier	level		1904716	0					
ANR	1904740	Argument	"""nanp"""		1904716	1					
ANR	1904741	PrimaryExpression	"""nanp"""		1904716	0					
ANR	1904742	CompoundStatement		2:71:72:72	1904716	1					
ANR	1904743	ExpressionStatement	s -> securityLevel = SNMP_SEC_LEVEL_NOAUTH	1241:2:38707:38747	1904716	0	True				
ANR	1904744	AssignmentExpression	s -> securityLevel = SNMP_SEC_LEVEL_NOAUTH		1904716	0		=			
ANR	1904745	PtrMemberAccess	s -> securityLevel		1904716	0					
ANR	1904746	Identifier	s		1904716	0					
ANR	1904747	Identifier	securityLevel		1904716	1					
ANR	1904748	Identifier	SNMP_SEC_LEVEL_NOAUTH		1904716	1					
ANR	1904749	ElseStatement	else		1904716	0					
ANR	1904750	IfStatement	"if ( ! strcasecmp ( level , ""authNoPriv"" ) || ! strcasecmp ( level , ""anp"" ) )"		1904716	0					
ANR	1904751	Condition	"! strcasecmp ( level , ""authNoPriv"" ) || ! strcasecmp ( level , ""anp"" )"	1242:12:38761:38821	1904716	0	True				
ANR	1904752	OrExpression	"! strcasecmp ( level , ""authNoPriv"" ) || ! strcasecmp ( level , ""anp"" )"		1904716	0		||			
ANR	1904753	UnaryOperationExpression	"! strcasecmp ( level , ""authNoPriv"" )"		1904716	0					
ANR	1904754	UnaryOperator	!		1904716	0					
ANR	1904755	CallExpression	"strcasecmp ( level , ""authNoPriv"" )"		1904716	1					
ANR	1904756	Callee	strcasecmp		1904716	0					
ANR	1904757	Identifier	strcasecmp		1904716	0					
ANR	1904758	ArgumentList	level		1904716	1					
ANR	1904759	Argument	level		1904716	0					
ANR	1904760	Identifier	level		1904716	0					
ANR	1904761	Argument	"""authNoPriv"""		1904716	1					
ANR	1904762	PrimaryExpression	"""authNoPriv"""		1904716	0					
ANR	1904763	UnaryOperationExpression	"! strcasecmp ( level , ""anp"" )"		1904716	1					
ANR	1904764	UnaryOperator	!		1904716	0					
ANR	1904765	CallExpression	"strcasecmp ( level , ""anp"" )"		1904716	1					
ANR	1904766	Callee	strcasecmp		1904716	0					
ANR	1904767	Identifier	strcasecmp		1904716	0					
ANR	1904768	ArgumentList	level		1904716	1					
ANR	1904769	Argument	level		1904716	0					
ANR	1904770	Identifier	level		1904716	0					
ANR	1904771	Argument	"""anp"""		1904716	1					
ANR	1904772	PrimaryExpression	"""anp"""		1904716	0					
ANR	1904773	CompoundStatement		4:75:193:193	1904716	1					
ANR	1904774	ExpressionStatement	s -> securityLevel = SNMP_SEC_LEVEL_AUTHNOPRIV	1243:2:38828:38872	1904716	0	True				
ANR	1904775	AssignmentExpression	s -> securityLevel = SNMP_SEC_LEVEL_AUTHNOPRIV		1904716	0		=			
ANR	1904776	PtrMemberAccess	s -> securityLevel		1904716	0					
ANR	1904777	Identifier	s		1904716	0					
ANR	1904778	Identifier	securityLevel		1904716	1					
ANR	1904779	Identifier	SNMP_SEC_LEVEL_AUTHNOPRIV		1904716	1					
ANR	1904780	ElseStatement	else		1904716	0					
ANR	1904781	IfStatement	"if ( ! strcasecmp ( level , ""authPriv"" ) || ! strcasecmp ( level , ""ap"" ) )"		1904716	0					
ANR	1904782	Condition	"! strcasecmp ( level , ""authPriv"" ) || ! strcasecmp ( level , ""ap"" )"	1244:12:38886:38943	1904716	0	True				
ANR	1904783	OrExpression	"! strcasecmp ( level , ""authPriv"" ) || ! strcasecmp ( level , ""ap"" )"		1904716	0		||			
ANR	1904784	UnaryOperationExpression	"! strcasecmp ( level , ""authPriv"" )"		1904716	0					
ANR	1904785	UnaryOperator	!		1904716	0					
ANR	1904786	CallExpression	"strcasecmp ( level , ""authPriv"" )"		1904716	1					
ANR	1904787	Callee	strcasecmp		1904716	0					
ANR	1904788	Identifier	strcasecmp		1904716	0					
ANR	1904789	ArgumentList	level		1904716	1					
ANR	1904790	Argument	level		1904716	0					
ANR	1904791	Identifier	level		1904716	0					
ANR	1904792	Argument	"""authPriv"""		1904716	1					
ANR	1904793	PrimaryExpression	"""authPriv"""		1904716	0					
ANR	1904794	UnaryOperationExpression	"! strcasecmp ( level , ""ap"" )"		1904716	1					
ANR	1904795	UnaryOperator	!		1904716	0					
ANR	1904796	CallExpression	"strcasecmp ( level , ""ap"" )"		1904716	1					
ANR	1904797	Callee	strcasecmp		1904716	0					
ANR	1904798	Identifier	strcasecmp		1904716	0					
ANR	1904799	ArgumentList	level		1904716	1					
ANR	1904800	Argument	level		1904716	0					
ANR	1904801	Identifier	level		1904716	0					
ANR	1904802	Argument	"""ap"""		1904716	1					
ANR	1904803	PrimaryExpression	"""ap"""		1904716	0					
ANR	1904804	CompoundStatement		6:72:315:315	1904716	1					
ANR	1904805	ExpressionStatement	s -> securityLevel = SNMP_SEC_LEVEL_AUTHPRIV	1245:2:38950:38992	1904716	0	True				
ANR	1904806	AssignmentExpression	s -> securityLevel = SNMP_SEC_LEVEL_AUTHPRIV		1904716	0		=			
ANR	1904807	PtrMemberAccess	s -> securityLevel		1904716	0					
ANR	1904808	Identifier	s		1904716	0					
ANR	1904809	Identifier	securityLevel		1904716	1					
ANR	1904810	Identifier	SNMP_SEC_LEVEL_AUTHPRIV		1904716	1					
ANR	1904811	ElseStatement	else		1904716	0					
ANR	1904812	CompoundStatement		8:8:371:371	1904716	0					
ANR	1904813	ReturnStatement	return ( - 1 ) ;	1247:2:39006:39017	1904716	0	True				
ANR	1904814	UnaryOperationExpression	- 1		1904716	0					
ANR	1904815	UnaryOperator	-		1904716	0					
ANR	1904816	PrimaryExpression	1		1904716	1					
ANR	1904817	ReturnStatement	return ( 0 ) ;	1249:1:39023:39033	1904716	1	True				
ANR	1904818	PrimaryExpression	0		1904716	0					
ANR	1904819	ReturnType	static int		1904716	1					
ANR	1904820	Identifier	netsnmp_session_set_sec_level		1904716	2					
ANR	1904821	ParameterList	"struct snmp_session * s , char * level"		1904716	3					
ANR	1904822	Parameter	struct snmp_session * s	1238:41:38593:38614	1904716	0	True				
ANR	1904823	ParameterType	struct snmp_session *		1904716	0					
ANR	1904824	Identifier	s		1904716	1					
ANR	1904825	Parameter	char * level	1238:65:38617:38627	1904716	1	True				
ANR	1904826	ParameterType	char *		1904716	0					
ANR	1904827	Identifier	level		1904716	1					
ANR	1904828	CFGEntryNode	ENTRY		1904716		True				
ANR	1904829	CFGExitNode	EXIT		1904716		True				
ANR	1904830	Symbol	s		1904716						
ANR	1904831	Symbol	SNMP_SEC_LEVEL_AUTHNOPRIV		1904716						
ANR	1904832	Symbol	level		1904716						
ANR	1904833	Symbol	s -> securityLevel		1904716						
ANR	1904834	Symbol	SNMP_SEC_LEVEL_NOAUTH		1904716						
ANR	1904835	Symbol	strcasecmp		1904716						
ANR	1904836	Symbol	* s		1904716						
ANR	1904837	Symbol	SNMP_SEC_LEVEL_AUTHPRIV		1904716						
ANR	1904838	Function	netsnmp_session_set_auth_protocol	1255:0:39189:39672							
ANR	1904839	FunctionDef	"netsnmp_session_set_auth_protocol (struct snmp_session * s , char * prot)"		1904838	0					
ANR	1904840	CompoundStatement		1256:0:39270:39672	1904838	0					
ANR	1904841	IfStatement	"if ( ! strcasecmp ( prot , ""MD5"" ) )"		1904838	0					
ANR	1904842	Condition	"! strcasecmp ( prot , ""MD5"" )"	1257:5:39277:39300	1904838	0	True				
ANR	1904843	UnaryOperationExpression	"! strcasecmp ( prot , ""MD5"" )"		1904838	0					
ANR	1904844	UnaryOperator	!		1904838	0					
ANR	1904845	CallExpression	"strcasecmp ( prot , ""MD5"" )"		1904838	1					
ANR	1904846	Callee	strcasecmp		1904838	0					
ANR	1904847	Identifier	strcasecmp		1904838	0					
ANR	1904848	ArgumentList	prot		1904838	1					
ANR	1904849	Argument	prot		1904838	0					
ANR	1904850	Identifier	prot		1904838	0					
ANR	1904851	Argument	"""MD5"""		1904838	1					
ANR	1904852	PrimaryExpression	"""MD5"""		1904838	0					
ANR	1904853	CompoundStatement		2:31:32:32	1904838	1					
ANR	1904854	ExpressionStatement	s -> securityAuthProto = usmHMACMD5AuthProtocol	1258:2:39307:39352	1904838	0	True				
ANR	1904855	AssignmentExpression	s -> securityAuthProto = usmHMACMD5AuthProtocol		1904838	0		=			
ANR	1904856	PtrMemberAccess	s -> securityAuthProto		1904838	0					
ANR	1904857	Identifier	s		1904838	0					
ANR	1904858	Identifier	securityAuthProto		1904838	1					
ANR	1904859	Identifier	usmHMACMD5AuthProtocol		1904838	1					
ANR	1904860	ExpressionStatement	s -> securityAuthProtoLen = USM_AUTH_PROTO_MD5_LEN	1259:2:39356:39404	1904838	1	True				
ANR	1904861	AssignmentExpression	s -> securityAuthProtoLen = USM_AUTH_PROTO_MD5_LEN		1904838	0		=			
ANR	1904862	PtrMemberAccess	s -> securityAuthProtoLen		1904838	0					
ANR	1904863	Identifier	s		1904838	0					
ANR	1904864	Identifier	securityAuthProtoLen		1904838	1					
ANR	1904865	Identifier	USM_AUTH_PROTO_MD5_LEN		1904838	1					
ANR	1904866	ElseStatement	else		1904838	0					
ANR	1904867	IfStatement	"if ( ! strcasecmp ( prot , ""SHA"" ) )"		1904838	0					
ANR	1904868	Condition	"! strcasecmp ( prot , ""SHA"" )"	1260:12:39418:39441	1904838	0	True				
ANR	1904869	UnaryOperationExpression	"! strcasecmp ( prot , ""SHA"" )"		1904838	0					
ANR	1904870	UnaryOperator	!		1904838	0					
ANR	1904871	CallExpression	"strcasecmp ( prot , ""SHA"" )"		1904838	1					
ANR	1904872	Callee	strcasecmp		1904838	0					
ANR	1904873	Identifier	strcasecmp		1904838	0					
ANR	1904874	ArgumentList	prot		1904838	1					
ANR	1904875	Argument	prot		1904838	0					
ANR	1904876	Identifier	prot		1904838	0					
ANR	1904877	Argument	"""SHA"""		1904838	1					
ANR	1904878	PrimaryExpression	"""SHA"""		1904838	0					
ANR	1904879	CompoundStatement		5:38:173:173	1904838	1					
ANR	1904880	ExpressionStatement	s -> securityAuthProto = usmHMACSHA1AuthProtocol	1261:2:39448:39494	1904838	0	True				
ANR	1904881	AssignmentExpression	s -> securityAuthProto = usmHMACSHA1AuthProtocol		1904838	0		=			
ANR	1904882	PtrMemberAccess	s -> securityAuthProto		1904838	0					
ANR	1904883	Identifier	s		1904838	0					
ANR	1904884	Identifier	securityAuthProto		1904838	1					
ANR	1904885	Identifier	usmHMACSHA1AuthProtocol		1904838	1					
ANR	1904886	ExpressionStatement	s -> securityAuthProtoLen = USM_AUTH_PROTO_SHA_LEN	1262:2:39498:39546	1904838	1	True				
ANR	1904887	AssignmentExpression	s -> securityAuthProtoLen = USM_AUTH_PROTO_SHA_LEN		1904838	0		=			
ANR	1904888	PtrMemberAccess	s -> securityAuthProtoLen		1904838	0					
ANR	1904889	Identifier	s		1904838	0					
ANR	1904890	Identifier	securityAuthProtoLen		1904838	1					
ANR	1904891	Identifier	USM_AUTH_PROTO_SHA_LEN		1904838	1					
ANR	1904892	ElseStatement	else		1904838	0					
ANR	1904893	CompoundStatement		8:8:285:285	1904838	0					
ANR	1904894	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown authentication protocol '%s'"" , prot )"	1264:2:39560:39639	1904838	0	True				
ANR	1904895	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown authentication protocol '%s'"" , prot )"		1904838	0					
ANR	1904896	Callee	php_error_docref		1904838	0					
ANR	1904897	Identifier	php_error_docref		1904838	0					
ANR	1904898	ArgumentList	NULL		1904838	1					
ANR	1904899	Argument	NULL		1904838	0					
ANR	1904900	Identifier	NULL		1904838	0					
ANR	1904901	Argument	E_WARNING		1904838	1					
ANR	1904902	Identifier	E_WARNING		1904838	0					
ANR	1904903	Argument	"""Unknown authentication protocol '%s'"""		1904838	2					
ANR	1904904	PrimaryExpression	"""Unknown authentication protocol '%s'"""		1904838	0					
ANR	1904905	Argument	prot		1904838	3					
ANR	1904906	Identifier	prot		1904838	0					
ANR	1904907	ReturnStatement	return ( - 1 ) ;	1265:2:39643:39654	1904838	1	True				
ANR	1904908	UnaryOperationExpression	- 1		1904838	0					
ANR	1904909	UnaryOperator	-		1904838	0					
ANR	1904910	PrimaryExpression	1		1904838	1					
ANR	1904911	ReturnStatement	return ( 0 ) ;	1267:1:39660:39670	1904838	1	True				
ANR	1904912	PrimaryExpression	0		1904838	0					
ANR	1904913	ReturnType	static int		1904838	1					
ANR	1904914	Identifier	netsnmp_session_set_auth_protocol		1904838	2					
ANR	1904915	ParameterList	"struct snmp_session * s , char * prot"		1904838	3					
ANR	1904916	Parameter	struct snmp_session * s	1255:45:39234:39255	1904838	0	True				
ANR	1904917	ParameterType	struct snmp_session *		1904838	0					
ANR	1904918	Identifier	s		1904838	1					
ANR	1904919	Parameter	char * prot	1255:69:39258:39267	1904838	1	True				
ANR	1904920	ParameterType	char *		1904838	0					
ANR	1904921	Identifier	prot		1904838	1					
ANR	1904922	CFGEntryNode	ENTRY		1904838		True				
ANR	1904923	CFGExitNode	EXIT		1904838		True				
ANR	1904924	Symbol	E_WARNING		1904838						
ANR	1904925	Symbol	usmHMACMD5AuthProtocol		1904838						
ANR	1904926	Symbol	s		1904838						
ANR	1904927	Symbol	prot		1904838						
ANR	1904928	Symbol	NULL		1904838						
ANR	1904929	Symbol	s -> securityAuthProtoLen		1904838						
ANR	1904930	Symbol	USM_AUTH_PROTO_SHA_LEN		1904838						
ANR	1904931	Symbol	s -> securityAuthProto		1904838						
ANR	1904932	Symbol	usmHMACSHA1AuthProtocol		1904838						
ANR	1904933	Symbol	strcasecmp		1904838						
ANR	1904934	Symbol	* s		1904838						
ANR	1904935	Symbol	USM_AUTH_PROTO_MD5_LEN		1904838						
ANR	1904936	Function	netsnmp_session_set_sec_protocol	1273:0:39819:40340							
ANR	1904937	FunctionDef	"netsnmp_session_set_sec_protocol (struct snmp_session * s , char * prot)"		1904936	0					
ANR	1904938	CompoundStatement		1274:0:39899:40340	1904936	0					
ANR	1904939	IfStatement	"if ( ! strcasecmp ( prot , ""DES"" ) )"		1904936	0					
ANR	1904940	Condition	"! strcasecmp ( prot , ""DES"" )"	1275:5:39906:39929	1904936	0	True				
ANR	1904941	UnaryOperationExpression	"! strcasecmp ( prot , ""DES"" )"		1904936	0					
ANR	1904942	UnaryOperator	!		1904936	0					
ANR	1904943	CallExpression	"strcasecmp ( prot , ""DES"" )"		1904936	1					
ANR	1904944	Callee	strcasecmp		1904936	0					
ANR	1904945	Identifier	strcasecmp		1904936	0					
ANR	1904946	ArgumentList	prot		1904936	1					
ANR	1904947	Argument	prot		1904936	0					
ANR	1904948	Identifier	prot		1904936	0					
ANR	1904949	Argument	"""DES"""		1904936	1					
ANR	1904950	PrimaryExpression	"""DES"""		1904936	0					
ANR	1904951	CompoundStatement		2:31:32:32	1904936	1					
ANR	1904952	ExpressionStatement	s -> securityPrivProto = usmDESPrivProtocol	1276:2:39936:39977	1904936	0	True				
ANR	1904953	AssignmentExpression	s -> securityPrivProto = usmDESPrivProtocol		1904936	0		=			
ANR	1904954	PtrMemberAccess	s -> securityPrivProto		1904936	0					
ANR	1904955	Identifier	s		1904936	0					
ANR	1904956	Identifier	securityPrivProto		1904936	1					
ANR	1904957	Identifier	usmDESPrivProtocol		1904936	1					
ANR	1904958	ExpressionStatement	s -> securityPrivProtoLen = USM_PRIV_PROTO_DES_LEN	1277:2:39981:40029	1904936	1	True				
ANR	1904959	AssignmentExpression	s -> securityPrivProtoLen = USM_PRIV_PROTO_DES_LEN		1904936	0		=			
ANR	1904960	PtrMemberAccess	s -> securityPrivProtoLen		1904936	0					
ANR	1904961	Identifier	s		1904936	0					
ANR	1904962	Identifier	securityPrivProtoLen		1904936	1					
ANR	1904963	Identifier	USM_PRIV_PROTO_DES_LEN		1904936	1					
ANR	1904964	ElseStatement	else		1904936	0					
ANR	1904965	IfStatement	"if ( ! strcasecmp ( prot , ""AES128"" ) || ! strcasecmp ( prot , ""AES"" ) )"		1904936	0					
ANR	1904966	Condition	"! strcasecmp ( prot , ""AES128"" ) || ! strcasecmp ( prot , ""AES"" )"	1279:12:40059:40113	1904936	0	True				
ANR	1904967	OrExpression	"! strcasecmp ( prot , ""AES128"" ) || ! strcasecmp ( prot , ""AES"" )"		1904936	0		||			
ANR	1904968	UnaryOperationExpression	"! strcasecmp ( prot , ""AES128"" )"		1904936	0					
ANR	1904969	UnaryOperator	!		1904936	0					
ANR	1904970	CallExpression	"strcasecmp ( prot , ""AES128"" )"		1904936	1					
ANR	1904971	Callee	strcasecmp		1904936	0					
ANR	1904972	Identifier	strcasecmp		1904936	0					
ANR	1904973	ArgumentList	prot		1904936	1					
ANR	1904974	Argument	prot		1904936	0					
ANR	1904975	Identifier	prot		1904936	0					
ANR	1904976	Argument	"""AES128"""		1904936	1					
ANR	1904977	PrimaryExpression	"""AES128"""		1904936	0					
ANR	1904978	UnaryOperationExpression	"! strcasecmp ( prot , ""AES"" )"		1904936	1					
ANR	1904979	UnaryOperator	!		1904936	0					
ANR	1904980	CallExpression	"strcasecmp ( prot , ""AES"" )"		1904936	1					
ANR	1904981	Callee	strcasecmp		1904936	0					
ANR	1904982	Identifier	strcasecmp		1904936	0					
ANR	1904983	ArgumentList	prot		1904936	1					
ANR	1904984	Argument	prot		1904936	0					
ANR	1904985	Identifier	prot		1904936	0					
ANR	1904986	Argument	"""AES"""		1904936	1					
ANR	1904987	PrimaryExpression	"""AES"""		1904936	0					
ANR	1904988	CompoundStatement		6:69:216:216	1904936	1					
ANR	1904989	ExpressionStatement	s -> securityPrivProto = usmAESPrivProtocol	1280:2:40120:40161	1904936	0	True				
ANR	1904990	AssignmentExpression	s -> securityPrivProto = usmAESPrivProtocol		1904936	0		=			
ANR	1904991	PtrMemberAccess	s -> securityPrivProto		1904936	0					
ANR	1904992	Identifier	s		1904936	0					
ANR	1904993	Identifier	securityPrivProto		1904936	1					
ANR	1904994	Identifier	usmAESPrivProtocol		1904936	1					
ANR	1904995	ExpressionStatement	s -> securityPrivProtoLen = USM_PRIV_PROTO_AES_LEN	1281:2:40165:40213	1904936	1	True				
ANR	1904996	AssignmentExpression	s -> securityPrivProtoLen = USM_PRIV_PROTO_AES_LEN		1904936	0		=			
ANR	1904997	PtrMemberAccess	s -> securityPrivProtoLen		1904936	0					
ANR	1904998	Identifier	s		1904936	0					
ANR	1904999	Identifier	securityPrivProtoLen		1904936	1					
ANR	1905000	Identifier	USM_PRIV_PROTO_AES_LEN		1904936	1					
ANR	1905001	ElseStatement	else		1904936	0					
ANR	1905002	CompoundStatement		10:8:330:330	1904936	0					
ANR	1905003	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown security protocol '%s'"" , prot )"	1284:2:40234:40307	1904936	0	True				
ANR	1905004	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown security protocol '%s'"" , prot )"		1904936	0					
ANR	1905005	Callee	php_error_docref		1904936	0					
ANR	1905006	Identifier	php_error_docref		1904936	0					
ANR	1905007	ArgumentList	NULL		1904936	1					
ANR	1905008	Argument	NULL		1904936	0					
ANR	1905009	Identifier	NULL		1904936	0					
ANR	1905010	Argument	E_WARNING		1904936	1					
ANR	1905011	Identifier	E_WARNING		1904936	0					
ANR	1905012	Argument	"""Unknown security protocol '%s'"""		1904936	2					
ANR	1905013	PrimaryExpression	"""Unknown security protocol '%s'"""		1904936	0					
ANR	1905014	Argument	prot		1904936	3					
ANR	1905015	Identifier	prot		1904936	0					
ANR	1905016	ReturnStatement	return ( - 1 ) ;	1285:2:40311:40322	1904936	1	True				
ANR	1905017	UnaryOperationExpression	- 1		1904936	0					
ANR	1905018	UnaryOperator	-		1904936	0					
ANR	1905019	PrimaryExpression	1		1904936	1					
ANR	1905020	ReturnStatement	return ( 0 ) ;	1287:1:40328:40338	1904936	1	True				
ANR	1905021	PrimaryExpression	0		1904936	0					
ANR	1905022	ReturnType	static int		1904936	1					
ANR	1905023	Identifier	netsnmp_session_set_sec_protocol		1904936	2					
ANR	1905024	ParameterList	"struct snmp_session * s , char * prot"		1904936	3					
ANR	1905025	Parameter	struct snmp_session * s	1273:44:39863:39884	1904936	0	True				
ANR	1905026	ParameterType	struct snmp_session *		1904936	0					
ANR	1905027	Identifier	s		1904936	1					
ANR	1905028	Parameter	char * prot	1273:68:39887:39896	1904936	1	True				
ANR	1905029	ParameterType	char *		1904936	0					
ANR	1905030	Identifier	prot		1904936	1					
ANR	1905031	CFGEntryNode	ENTRY		1904936		True				
ANR	1905032	CFGExitNode	EXIT		1904936		True				
ANR	1905033	Symbol	E_WARNING		1904936						
ANR	1905034	Symbol	s		1904936						
ANR	1905035	Symbol	prot		1904936						
ANR	1905036	Symbol	NULL		1904936						
ANR	1905037	Symbol	s -> securityPrivProto		1904936						
ANR	1905038	Symbol	usmDESPrivProtocol		1904936						
ANR	1905039	Symbol	USM_PRIV_PROTO_DES_LEN		1904936						
ANR	1905040	Symbol	USM_PRIV_PROTO_AES_LEN		1904936						
ANR	1905041	Symbol	strcasecmp		1904936						
ANR	1905042	Symbol	s -> securityPrivProtoLen		1904936						
ANR	1905043	Symbol	* s		1904936						
ANR	1905044	Symbol	usmAESPrivProtocol		1904936						
ANR	1905045	Function	netsnmp_session_gen_auth_key	1293:0:40483:40957							
ANR	1905046	FunctionDef	"netsnmp_session_gen_auth_key (struct snmp_session * s , char * pass)"		1905045	0					
ANR	1905047	CompoundStatement		1294:0:40559:40957	1905045	0					
ANR	1905048	IdentifierDeclStatement	int snmp_errno ;	1295:1:40562:40576	1905045	0	True				
ANR	1905049	IdentifierDecl	snmp_errno		1905045	0					
ANR	1905050	IdentifierDeclType	int		1905045	0					
ANR	1905051	Identifier	snmp_errno		1905045	1					
ANR	1905052	ExpressionStatement	s -> securityAuthKeyLen = USM_AUTH_KU_LEN	1296:1:40579:40618	1905045	1	True				
ANR	1905053	AssignmentExpression	s -> securityAuthKeyLen = USM_AUTH_KU_LEN		1905045	0		=			
ANR	1905054	PtrMemberAccess	s -> securityAuthKeyLen		1905045	0					
ANR	1905055	Identifier	s		1905045	0					
ANR	1905056	Identifier	securityAuthKeyLen		1905045	1					
ANR	1905057	Identifier	USM_AUTH_KU_LEN		1905045	1					
ANR	1905058	IfStatement	"if ( ( snmp_errno = generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityAuthKey , & ( s -> securityAuthKeyLen ) ) ) )"		1905045	2					
ANR	1905059	Condition	"snmp_errno = generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityAuthKey , & ( s -> securityAuthKeyLen ) )"	1297:5:40625:40780	1905045	0	True				
ANR	1905060	AssignmentExpression	"snmp_errno = generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityAuthKey , & ( s -> securityAuthKeyLen ) )"		1905045	0		=			
ANR	1905061	Identifier	snmp_errno		1905045	0					
ANR	1905062	CallExpression	"generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityAuthKey , & ( s -> securityAuthKeyLen ) )"		1905045	1					
ANR	1905063	Callee	generate_Ku		1905045	0					
ANR	1905064	Identifier	generate_Ku		1905045	0					
ANR	1905065	ArgumentList	s -> securityAuthProto		1905045	1					
ANR	1905066	Argument	s -> securityAuthProto		1905045	0					
ANR	1905067	PtrMemberAccess	s -> securityAuthProto		1905045	0					
ANR	1905068	Identifier	s		1905045	0					
ANR	1905069	Identifier	securityAuthProto		1905045	1					
ANR	1905070	Argument	s -> securityAuthProtoLen		1905045	1					
ANR	1905071	PtrMemberAccess	s -> securityAuthProtoLen		1905045	0					
ANR	1905072	Identifier	s		1905045	0					
ANR	1905073	Identifier	securityAuthProtoLen		1905045	1					
ANR	1905074	Argument	( u_char * ) pass		1905045	2					
ANR	1905075	CastExpression	( u_char * ) pass		1905045	0					
ANR	1905076	CastTarget	u_char *		1905045	0					
ANR	1905077	Identifier	pass		1905045	1					
ANR	1905078	Argument	strlen ( pass )		1905045	3					
ANR	1905079	CallExpression	strlen ( pass )		1905045	0					
ANR	1905080	Callee	strlen		1905045	0					
ANR	1905081	Identifier	strlen		1905045	0					
ANR	1905082	ArgumentList	pass		1905045	1					
ANR	1905083	Argument	pass		1905045	0					
ANR	1905084	Identifier	pass		1905045	0					
ANR	1905085	Argument	s -> securityAuthKey		1905045	4					
ANR	1905086	PtrMemberAccess	s -> securityAuthKey		1905045	0					
ANR	1905087	Identifier	s		1905045	0					
ANR	1905088	Identifier	securityAuthKey		1905045	1					
ANR	1905089	Argument	& ( s -> securityAuthKeyLen )		1905045	5					
ANR	1905090	UnaryOperationExpression	& ( s -> securityAuthKeyLen )		1905045	0					
ANR	1905091	UnaryOperator	&		1905045	0					
ANR	1905092	PtrMemberAccess	s -> securityAuthKeyLen		1905045	1					
ANR	1905093	Identifier	s		1905045	0					
ANR	1905094	Identifier	securityAuthKeyLen		1905045	1					
ANR	1905095	CompoundStatement		6:51:223:223	1905045	1					
ANR	1905096	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Error generating a key for authentication pass phrase '%s': %s"" , pass , snmp_api_errstring ( snmp_errno ) )"	1300:2:40787:40924	1905045	0	True				
ANR	1905097	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Error generating a key for authentication pass phrase '%s': %s"" , pass , snmp_api_errstring ( snmp_errno ) )"		1905045	0					
ANR	1905098	Callee	php_error_docref		1905045	0					
ANR	1905099	Identifier	php_error_docref		1905045	0					
ANR	1905100	ArgumentList	NULL		1905045	1					
ANR	1905101	Argument	NULL		1905045	0					
ANR	1905102	Identifier	NULL		1905045	0					
ANR	1905103	Argument	E_WARNING		1905045	1					
ANR	1905104	Identifier	E_WARNING		1905045	0					
ANR	1905105	Argument	"""Error generating a key for authentication pass phrase '%s': %s"""		1905045	2					
ANR	1905106	PrimaryExpression	"""Error generating a key for authentication pass phrase '%s': %s"""		1905045	0					
ANR	1905107	Argument	pass		1905045	3					
ANR	1905108	Identifier	pass		1905045	0					
ANR	1905109	Argument	snmp_api_errstring ( snmp_errno )		1905045	4					
ANR	1905110	CallExpression	snmp_api_errstring ( snmp_errno )		1905045	0					
ANR	1905111	Callee	snmp_api_errstring		1905045	0					
ANR	1905112	Identifier	snmp_api_errstring		1905045	0					
ANR	1905113	ArgumentList	snmp_errno		1905045	1					
ANR	1905114	Argument	snmp_errno		1905045	0					
ANR	1905115	Identifier	snmp_errno		1905045	0					
ANR	1905116	ReturnStatement	return ( - 1 ) ;	1301:2:40928:40939	1905045	1	True				
ANR	1905117	UnaryOperationExpression	- 1		1905045	0					
ANR	1905118	UnaryOperator	-		1905045	0					
ANR	1905119	PrimaryExpression	1		1905045	1					
ANR	1905120	ReturnStatement	return ( 0 ) ;	1303:1:40945:40955	1905045	3	True				
ANR	1905121	PrimaryExpression	0		1905045	0					
ANR	1905122	ReturnType	static int		1905045	1					
ANR	1905123	Identifier	netsnmp_session_gen_auth_key		1905045	2					
ANR	1905124	ParameterList	"struct snmp_session * s , char * pass"		1905045	3					
ANR	1905125	Parameter	struct snmp_session * s	1293:40:40523:40544	1905045	0	True				
ANR	1905126	ParameterType	struct snmp_session *		1905045	0					
ANR	1905127	Identifier	s		1905045	1					
ANR	1905128	Parameter	char * pass	1293:64:40547:40556	1905045	1	True				
ANR	1905129	ParameterType	char *		1905045	0					
ANR	1905130	Identifier	pass		1905045	1					
ANR	1905131	CFGEntryNode	ENTRY		1905045		True				
ANR	1905132	CFGExitNode	EXIT		1905045		True				
ANR	1905133	Symbol	NULL		1905045						
ANR	1905134	Symbol	pass		1905045						
ANR	1905135	Symbol	snmp_errno		1905045						
ANR	1905136	Symbol	s -> securityAuthProtoLen		1905045						
ANR	1905137	Symbol	s -> securityAuthProto		1905045						
ANR	1905138	Symbol	snmp_api_errstring		1905045						
ANR	1905139	Symbol	generate_Ku		1905045						
ANR	1905140	Symbol	E_WARNING		1905045						
ANR	1905141	Symbol	strlen		1905045						
ANR	1905142	Symbol	s -> securityAuthKey		1905045						
ANR	1905143	Symbol	s		1905045						
ANR	1905144	Symbol	& s -> securityAuthKeyLen		1905045						
ANR	1905145	Symbol	s -> securityAuthKeyLen		1905045						
ANR	1905146	Symbol	* s		1905045						
ANR	1905147	Symbol	USM_AUTH_KU_LEN		1905045						
ANR	1905148	Function	netsnmp_session_gen_sec_key	1309:0:41101:41567							
ANR	1905149	FunctionDef	"netsnmp_session_gen_sec_key (struct snmp_session * s , char * pass)"		1905148	0					
ANR	1905150	CompoundStatement		1310:0:41176:41567	1905148	0					
ANR	1905151	IdentifierDeclStatement	int snmp_errno ;	1311:1:41179:41193	1905148	0	True				
ANR	1905152	IdentifierDecl	snmp_errno		1905148	0					
ANR	1905153	IdentifierDeclType	int		1905148	0					
ANR	1905154	Identifier	snmp_errno		1905148	1					
ANR	1905155	ExpressionStatement	s -> securityPrivKeyLen = USM_PRIV_KU_LEN	1313:1:41197:41236	1905148	1	True				
ANR	1905156	AssignmentExpression	s -> securityPrivKeyLen = USM_PRIV_KU_LEN		1905148	0		=			
ANR	1905157	PtrMemberAccess	s -> securityPrivKeyLen		1905148	0					
ANR	1905158	Identifier	s		1905148	0					
ANR	1905159	Identifier	securityPrivKeyLen		1905148	1					
ANR	1905160	Identifier	USM_PRIV_KU_LEN		1905148	1					
ANR	1905161	IfStatement	"if ( ( snmp_errno = generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityPrivKey , & ( s -> securityPrivKeyLen ) ) ) )"		1905148	2					
ANR	1905162	Condition	"snmp_errno = generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityPrivKey , & ( s -> securityPrivKeyLen ) )"	1314:5:41243:41397	1905148	0	True				
ANR	1905163	AssignmentExpression	"snmp_errno = generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityPrivKey , & ( s -> securityPrivKeyLen ) )"		1905148	0		=			
ANR	1905164	Identifier	snmp_errno		1905148	0					
ANR	1905165	CallExpression	"generate_Ku ( s -> securityAuthProto , s -> securityAuthProtoLen , ( u_char * ) pass , strlen ( pass ) , s -> securityPrivKey , & ( s -> securityPrivKeyLen ) )"		1905148	1					
ANR	1905166	Callee	generate_Ku		1905148	0					
ANR	1905167	Identifier	generate_Ku		1905148	0					
ANR	1905168	ArgumentList	s -> securityAuthProto		1905148	1					
ANR	1905169	Argument	s -> securityAuthProto		1905148	0					
ANR	1905170	PtrMemberAccess	s -> securityAuthProto		1905148	0					
ANR	1905171	Identifier	s		1905148	0					
ANR	1905172	Identifier	securityAuthProto		1905148	1					
ANR	1905173	Argument	s -> securityAuthProtoLen		1905148	1					
ANR	1905174	PtrMemberAccess	s -> securityAuthProtoLen		1905148	0					
ANR	1905175	Identifier	s		1905148	0					
ANR	1905176	Identifier	securityAuthProtoLen		1905148	1					
ANR	1905177	Argument	( u_char * ) pass		1905148	2					
ANR	1905178	CastExpression	( u_char * ) pass		1905148	0					
ANR	1905179	CastTarget	u_char *		1905148	0					
ANR	1905180	Identifier	pass		1905148	1					
ANR	1905181	Argument	strlen ( pass )		1905148	3					
ANR	1905182	CallExpression	strlen ( pass )		1905148	0					
ANR	1905183	Callee	strlen		1905148	0					
ANR	1905184	Identifier	strlen		1905148	0					
ANR	1905185	ArgumentList	pass		1905148	1					
ANR	1905186	Argument	pass		1905148	0					
ANR	1905187	Identifier	pass		1905148	0					
ANR	1905188	Argument	s -> securityPrivKey		1905148	4					
ANR	1905189	PtrMemberAccess	s -> securityPrivKey		1905148	0					
ANR	1905190	Identifier	s		1905148	0					
ANR	1905191	Identifier	securityPrivKey		1905148	1					
ANR	1905192	Argument	& ( s -> securityPrivKeyLen )		1905148	5					
ANR	1905193	UnaryOperationExpression	& ( s -> securityPrivKeyLen )		1905148	0					
ANR	1905194	UnaryOperator	&		1905148	0					
ANR	1905195	PtrMemberAccess	s -> securityPrivKeyLen		1905148	1					
ANR	1905196	Identifier	s		1905148	0					
ANR	1905197	Identifier	securityPrivKeyLen		1905148	1					
ANR	1905198	CompoundStatement		7:51:223:223	1905148	1					
ANR	1905199	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Error generating a key for privacy pass phrase '%s': %s"" , pass , snmp_api_errstring ( snmp_errno ) )"	1317:2:41404:41534	1905148	0	True				
ANR	1905200	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Error generating a key for privacy pass phrase '%s': %s"" , pass , snmp_api_errstring ( snmp_errno ) )"		1905148	0					
ANR	1905201	Callee	php_error_docref		1905148	0					
ANR	1905202	Identifier	php_error_docref		1905148	0					
ANR	1905203	ArgumentList	NULL		1905148	1					
ANR	1905204	Argument	NULL		1905148	0					
ANR	1905205	Identifier	NULL		1905148	0					
ANR	1905206	Argument	E_WARNING		1905148	1					
ANR	1905207	Identifier	E_WARNING		1905148	0					
ANR	1905208	Argument	"""Error generating a key for privacy pass phrase '%s': %s"""		1905148	2					
ANR	1905209	PrimaryExpression	"""Error generating a key for privacy pass phrase '%s': %s"""		1905148	0					
ANR	1905210	Argument	pass		1905148	3					
ANR	1905211	Identifier	pass		1905148	0					
ANR	1905212	Argument	snmp_api_errstring ( snmp_errno )		1905148	4					
ANR	1905213	CallExpression	snmp_api_errstring ( snmp_errno )		1905148	0					
ANR	1905214	Callee	snmp_api_errstring		1905148	0					
ANR	1905215	Identifier	snmp_api_errstring		1905148	0					
ANR	1905216	ArgumentList	snmp_errno		1905148	1					
ANR	1905217	Argument	snmp_errno		1905148	0					
ANR	1905218	Identifier	snmp_errno		1905148	0					
ANR	1905219	ReturnStatement	return ( - 2 ) ;	1318:2:41538:41549	1905148	1	True				
ANR	1905220	UnaryOperationExpression	- 2		1905148	0					
ANR	1905221	UnaryOperator	-		1905148	0					
ANR	1905222	PrimaryExpression	2		1905148	1					
ANR	1905223	ReturnStatement	return ( 0 ) ;	1320:1:41555:41565	1905148	3	True				
ANR	1905224	PrimaryExpression	0		1905148	0					
ANR	1905225	ReturnType	static int		1905148	1					
ANR	1905226	Identifier	netsnmp_session_gen_sec_key		1905148	2					
ANR	1905227	ParameterList	"struct snmp_session * s , char * pass"		1905148	3					
ANR	1905228	Parameter	struct snmp_session * s	1309:39:41140:41161	1905148	0	True				
ANR	1905229	ParameterType	struct snmp_session *		1905148	0					
ANR	1905230	Identifier	s		1905148	1					
ANR	1905231	Parameter	char * pass	1309:63:41164:41173	1905148	1	True				
ANR	1905232	ParameterType	char *		1905148	0					
ANR	1905233	Identifier	pass		1905148	1					
ANR	1905234	CFGEntryNode	ENTRY		1905148		True				
ANR	1905235	CFGExitNode	EXIT		1905148		True				
ANR	1905236	Symbol	NULL		1905148						
ANR	1905237	Symbol	USM_PRIV_KU_LEN		1905148						
ANR	1905238	Symbol	pass		1905148						
ANR	1905239	Symbol	snmp_errno		1905148						
ANR	1905240	Symbol	s -> securityPrivKeyLen		1905148						
ANR	1905241	Symbol	s -> securityAuthProtoLen		1905148						
ANR	1905242	Symbol	s -> securityAuthProto		1905148						
ANR	1905243	Symbol	snmp_api_errstring		1905148						
ANR	1905244	Symbol	generate_Ku		1905148						
ANR	1905245	Symbol	E_WARNING		1905148						
ANR	1905246	Symbol	strlen		1905148						
ANR	1905247	Symbol	s		1905148						
ANR	1905248	Symbol	& s -> securityPrivKeyLen		1905148						
ANR	1905249	Symbol	s -> securityPrivKey		1905148						
ANR	1905250	Symbol	* s		1905148						
ANR	1905251	Function	netsnmp_session_set_contextEngineID	1326:0:41726:42354							
ANR	1905252	FunctionDef	"netsnmp_session_set_contextEngineID (struct snmp_session * s , char * contextEngineID)"		1905251	0					
ANR	1905253	CompoundStatement		1327:0:41821:42354	1905251	0					
ANR	1905254	IdentifierDeclStatement	"size_t ebuf_len = 32 , eout_len = 0 ;"	1328:1:41824:41858	1905251	0	True				
ANR	1905255	IdentifierDecl	ebuf_len = 32		1905251	0					
ANR	1905256	IdentifierDeclType	size_t		1905251	0					
ANR	1905257	Identifier	ebuf_len		1905251	1					
ANR	1905258	AssignmentExpression	ebuf_len = 32		1905251	2		=			
ANR	1905259	Identifier	ebuf_len		1905251	0					
ANR	1905260	PrimaryExpression	32		1905251	1					
ANR	1905261	IdentifierDecl	eout_len = 0		1905251	1					
ANR	1905262	IdentifierDeclType	size_t		1905251	0					
ANR	1905263	Identifier	eout_len		1905251	1					
ANR	1905264	AssignmentExpression	eout_len = 0		1905251	2		=			
ANR	1905265	Identifier	eout_len		1905251	0					
ANR	1905266	PrimaryExpression	0		1905251	1					
ANR	1905267	IdentifierDeclStatement	u_char * ebuf = ( u_char * ) emalloc ( ebuf_len ) ;	1329:1:41861:41904	1905251	1	True				
ANR	1905268	IdentifierDecl	* ebuf = ( u_char * ) emalloc ( ebuf_len )		1905251	0					
ANR	1905269	IdentifierDeclType	u_char *		1905251	0					
ANR	1905270	Identifier	ebuf		1905251	1					
ANR	1905271	AssignmentExpression	* ebuf = ( u_char * ) emalloc ( ebuf_len )		1905251	2		=			
ANR	1905272	Identifier	ebuf		1905251	0					
ANR	1905273	CastExpression	( u_char * ) emalloc ( ebuf_len )		1905251	1					
ANR	1905274	CastTarget	u_char *		1905251	0					
ANR	1905275	CallExpression	emalloc ( ebuf_len )		1905251	1					
ANR	1905276	Callee	emalloc		1905251	0					
ANR	1905277	Identifier	emalloc		1905251	0					
ANR	1905278	ArgumentList	ebuf_len		1905251	1					
ANR	1905279	Argument	ebuf_len		1905251	0					
ANR	1905280	Identifier	ebuf_len		1905251	0					
ANR	1905281	IfStatement	if ( ebuf == NULL )		1905251	2					
ANR	1905282	Condition	ebuf == NULL	1331:5:41912:41923	1905251	0	True				
ANR	1905283	EqualityExpression	ebuf == NULL		1905251	0		==			
ANR	1905284	Identifier	ebuf		1905251	0					
ANR	1905285	Identifier	NULL		1905251	1					
ANR	1905286	CompoundStatement		5:19:104:104	1905251	1					
ANR	1905287	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""malloc failure setting contextEngineID"" )"	1332:2:41930:42005	1905251	0	True				
ANR	1905288	CallExpression	"php_error_docref ( NULL , E_WARNING , ""malloc failure setting contextEngineID"" )"		1905251	0					
ANR	1905289	Callee	php_error_docref		1905251	0					
ANR	1905290	Identifier	php_error_docref		1905251	0					
ANR	1905291	ArgumentList	NULL		1905251	1					
ANR	1905292	Argument	NULL		1905251	0					
ANR	1905293	Identifier	NULL		1905251	0					
ANR	1905294	Argument	E_WARNING		1905251	1					
ANR	1905295	Identifier	E_WARNING		1905251	0					
ANR	1905296	Argument	"""malloc failure setting contextEngineID"""		1905251	2					
ANR	1905297	PrimaryExpression	"""malloc failure setting contextEngineID"""		1905251	0					
ANR	1905298	ReturnStatement	return ( - 1 ) ;	1333:2:42009:42020	1905251	1	True				
ANR	1905299	UnaryOperationExpression	- 1		1905251	0					
ANR	1905300	UnaryOperator	-		1905251	0					
ANR	1905301	PrimaryExpression	1		1905251	1					
ANR	1905302	IfStatement	"if ( ! snmp_hex_to_binary ( & ebuf , & ebuf_len , & eout_len , 1 , contextEngineID ) )"		1905251	3					
ANR	1905303	Condition	"! snmp_hex_to_binary ( & ebuf , & ebuf_len , & eout_len , 1 , contextEngineID )"	1335:5:42030:42097	1905251	0	True				
ANR	1905304	UnaryOperationExpression	"! snmp_hex_to_binary ( & ebuf , & ebuf_len , & eout_len , 1 , contextEngineID )"		1905251	0					
ANR	1905305	UnaryOperator	!		1905251	0					
ANR	1905306	CallExpression	"snmp_hex_to_binary ( & ebuf , & ebuf_len , & eout_len , 1 , contextEngineID )"		1905251	1					
ANR	1905307	Callee	snmp_hex_to_binary		1905251	0					
ANR	1905308	Identifier	snmp_hex_to_binary		1905251	0					
ANR	1905309	ArgumentList	& ebuf		1905251	1					
ANR	1905310	Argument	& ebuf		1905251	0					
ANR	1905311	UnaryOperationExpression	& ebuf		1905251	0					
ANR	1905312	UnaryOperator	&		1905251	0					
ANR	1905313	Identifier	ebuf		1905251	1					
ANR	1905314	Argument	& ebuf_len		1905251	1					
ANR	1905315	UnaryOperationExpression	& ebuf_len		1905251	0					
ANR	1905316	UnaryOperator	&		1905251	0					
ANR	1905317	Identifier	ebuf_len		1905251	1					
ANR	1905318	Argument	& eout_len		1905251	2					
ANR	1905319	UnaryOperationExpression	& eout_len		1905251	0					
ANR	1905320	UnaryOperator	&		1905251	0					
ANR	1905321	Identifier	eout_len		1905251	1					
ANR	1905322	Argument	1		1905251	3					
ANR	1905323	PrimaryExpression	1		1905251	0					
ANR	1905324	Argument	contextEngineID		1905251	4					
ANR	1905325	Identifier	contextEngineID		1905251	0					
ANR	1905326	CompoundStatement		9:75:278:278	1905251	1					
ANR	1905327	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Bad engine ID value '%s'"" , contextEngineID )"	1336:2:42104:42182	1905251	0	True				
ANR	1905328	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Bad engine ID value '%s'"" , contextEngineID )"		1905251	0					
ANR	1905329	Callee	php_error_docref		1905251	0					
ANR	1905330	Identifier	php_error_docref		1905251	0					
ANR	1905331	ArgumentList	NULL		1905251	1					
ANR	1905332	Argument	NULL		1905251	0					
ANR	1905333	Identifier	NULL		1905251	0					
ANR	1905334	Argument	E_WARNING		1905251	1					
ANR	1905335	Identifier	E_WARNING		1905251	0					
ANR	1905336	Argument	"""Bad engine ID value '%s'"""		1905251	2					
ANR	1905337	PrimaryExpression	"""Bad engine ID value '%s'"""		1905251	0					
ANR	1905338	Argument	contextEngineID		1905251	3					
ANR	1905339	Identifier	contextEngineID		1905251	0					
ANR	1905340	ExpressionStatement	efree ( ebuf )	1337:2:42186:42197	1905251	1	True				
ANR	1905341	CallExpression	efree ( ebuf )		1905251	0					
ANR	1905342	Callee	efree		1905251	0					
ANR	1905343	Identifier	efree		1905251	0					
ANR	1905344	ArgumentList	ebuf		1905251	1					
ANR	1905345	Argument	ebuf		1905251	0					
ANR	1905346	Identifier	ebuf		1905251	0					
ANR	1905347	ReturnStatement	return ( - 1 ) ;	1338:2:42201:42212	1905251	2	True				
ANR	1905348	UnaryOperationExpression	- 1		1905251	0					
ANR	1905349	UnaryOperator	-		1905251	0					
ANR	1905350	PrimaryExpression	1		1905251	1					
ANR	1905351	IfStatement	if ( s -> contextEngineID )		1905251	4					
ANR	1905352	Condition	s -> contextEngineID	1341:5:42223:42240	1905251	0	True				
ANR	1905353	PtrMemberAccess	s -> contextEngineID		1905251	0					
ANR	1905354	Identifier	s		1905251	0					
ANR	1905355	Identifier	contextEngineID		1905251	1					
ANR	1905356	CompoundStatement		15:25:421:421	1905251	1					
ANR	1905357	ExpressionStatement	efree ( s -> contextEngineID )	1342:2:42247:42272	1905251	0	True				
ANR	1905358	CallExpression	efree ( s -> contextEngineID )		1905251	0					
ANR	1905359	Callee	efree		1905251	0					
ANR	1905360	Identifier	efree		1905251	0					
ANR	1905361	ArgumentList	s -> contextEngineID		1905251	1					
ANR	1905362	Argument	s -> contextEngineID		1905251	0					
ANR	1905363	PtrMemberAccess	s -> contextEngineID		1905251	0					
ANR	1905364	Identifier	s		1905251	0					
ANR	1905365	Identifier	contextEngineID		1905251	1					
ANR	1905366	ExpressionStatement	s -> contextEngineID = ebuf	1345:1:42279:42304	1905251	5	True				
ANR	1905367	AssignmentExpression	s -> contextEngineID = ebuf		1905251	0		=			
ANR	1905368	PtrMemberAccess	s -> contextEngineID		1905251	0					
ANR	1905369	Identifier	s		1905251	0					
ANR	1905370	Identifier	contextEngineID		1905251	1					
ANR	1905371	Identifier	ebuf		1905251	1					
ANR	1905372	ExpressionStatement	s -> contextEngineIDLen = eout_len	1346:1:42307:42339	1905251	6	True				
ANR	1905373	AssignmentExpression	s -> contextEngineIDLen = eout_len		1905251	0		=			
ANR	1905374	PtrMemberAccess	s -> contextEngineIDLen		1905251	0					
ANR	1905375	Identifier	s		1905251	0					
ANR	1905376	Identifier	contextEngineIDLen		1905251	1					
ANR	1905377	Identifier	eout_len		1905251	1					
ANR	1905378	ReturnStatement	return ( 0 ) ;	1347:1:42342:42352	1905251	7	True				
ANR	1905379	PrimaryExpression	0		1905251	0					
ANR	1905380	ReturnType	static int		1905251	1					
ANR	1905381	Identifier	netsnmp_session_set_contextEngineID		1905251	2					
ANR	1905382	ParameterList	"struct snmp_session * s , char * contextEngineID"		1905251	3					
ANR	1905383	Parameter	struct snmp_session * s	1326:47:41773:41794	1905251	0	True				
ANR	1905384	ParameterType	struct snmp_session *		1905251	0					
ANR	1905385	Identifier	s		1905251	1					
ANR	1905386	Parameter	char * contextEngineID	1326:71:41797:41818	1905251	1	True				
ANR	1905387	ParameterType	char *		1905251	0					
ANR	1905388	Identifier	contextEngineID		1905251	1					
ANR	1905389	CFGEntryNode	ENTRY		1905251		True				
ANR	1905390	CFGExitNode	EXIT		1905251		True				
ANR	1905391	Symbol	ebuf		1905251						
ANR	1905392	Symbol	& ebuf_len		1905251						
ANR	1905393	Symbol	& ebuf		1905251						
ANR	1905394	Symbol	NULL		1905251						
ANR	1905395	Symbol	& eout_len		1905251						
ANR	1905396	Symbol	ebuf_len		1905251						
ANR	1905397	Symbol	E_WARNING		1905251						
ANR	1905398	Symbol	s -> contextEngineID		1905251						
ANR	1905399	Symbol	emalloc		1905251						
ANR	1905400	Symbol	s		1905251						
ANR	1905401	Symbol	s -> contextEngineIDLen		1905251						
ANR	1905402	Symbol	contextEngineID		1905251						
ANR	1905403	Symbol	* s		1905251						
ANR	1905404	Symbol	snmp_hex_to_binary		1905251						
ANR	1905405	Symbol	eout_len		1905251						
ANR	1905406	Function	netsnmp_session_set_security	1353:0:42614:44347							
ANR	1905407	FunctionDef	"netsnmp_session_set_security (struct snmp_session * session , char * sec_level , char * auth_protocol , char * auth_passphrase , char * priv_protocol , char * priv_passphrase , char * contextName , char * contextEngineID)"		1905406	0					
ANR	1905408	CompoundStatement		1354:0:42831:44347	1905406	0					
ANR	1905409	IfStatement	"if ( netsnmp_session_set_sec_level ( session , sec_level ) )"		1905406	0					
ANR	1905410	Condition	"netsnmp_session_set_sec_level ( session , sec_level )"	1357:5:42874:42922	1905406	0	True				
ANR	1905411	CallExpression	"netsnmp_session_set_sec_level ( session , sec_level )"		1905406	0					
ANR	1905412	Callee	netsnmp_session_set_sec_level		1905406	0					
ANR	1905413	Identifier	netsnmp_session_set_sec_level		1905406	0					
ANR	1905414	ArgumentList	session		1905406	1					
ANR	1905415	Argument	session		1905406	0					
ANR	1905416	Identifier	session		1905406	0					
ANR	1905417	Argument	sec_level		1905406	1					
ANR	1905418	Identifier	sec_level		1905406	0					
ANR	1905419	CompoundStatement		4:56:93:93	1905406	1					
ANR	1905420	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid security level '%s'"" , sec_level )"	1358:2:42929:43004	1905406	0	True				
ANR	1905421	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid security level '%s'"" , sec_level )"		1905406	0					
ANR	1905422	Callee	php_error_docref		1905406	0					
ANR	1905423	Identifier	php_error_docref		1905406	0					
ANR	1905424	ArgumentList	NULL		1905406	1					
ANR	1905425	Argument	NULL		1905406	0					
ANR	1905426	Identifier	NULL		1905406	0					
ANR	1905427	Argument	E_WARNING		1905406	1					
ANR	1905428	Identifier	E_WARNING		1905406	0					
ANR	1905429	Argument	"""Invalid security level '%s'"""		1905406	2					
ANR	1905430	PrimaryExpression	"""Invalid security level '%s'"""		1905406	0					
ANR	1905431	Argument	sec_level		1905406	3					
ANR	1905432	Identifier	sec_level		1905406	0					
ANR	1905433	ReturnStatement	return ( - 1 ) ;	1359:2:43008:43019	1905406	1	True				
ANR	1905434	UnaryOperationExpression	- 1		1905406	0					
ANR	1905435	UnaryOperator	-		1905406	0					
ANR	1905436	PrimaryExpression	1		1905406	1					
ANR	1905437	IfStatement	if ( session -> securityLevel == SNMP_SEC_LEVEL_AUTHNOPRIV || session -> securityLevel == SNMP_SEC_LEVEL_AUTHPRIV )		1905406	1					
ANR	1905438	Condition	session -> securityLevel == SNMP_SEC_LEVEL_AUTHNOPRIV || session -> securityLevel == SNMP_SEC_LEVEL_AUTHPRIV	1362:5:43030:43133	1905406	0	True				
ANR	1905439	OrExpression	session -> securityLevel == SNMP_SEC_LEVEL_AUTHNOPRIV || session -> securityLevel == SNMP_SEC_LEVEL_AUTHPRIV		1905406	0		||			
ANR	1905440	EqualityExpression	session -> securityLevel == SNMP_SEC_LEVEL_AUTHNOPRIV		1905406	0		==			
ANR	1905441	PtrMemberAccess	session -> securityLevel		1905406	0					
ANR	1905442	Identifier	session		1905406	0					
ANR	1905443	Identifier	securityLevel		1905406	1					
ANR	1905444	Identifier	SNMP_SEC_LEVEL_AUTHNOPRIV		1905406	1					
ANR	1905445	EqualityExpression	session -> securityLevel == SNMP_SEC_LEVEL_AUTHPRIV		1905406	1		==			
ANR	1905446	PtrMemberAccess	session -> securityLevel		1905406	0					
ANR	1905447	Identifier	session		1905406	0					
ANR	1905448	Identifier	securityLevel		1905406	1					
ANR	1905449	Identifier	SNMP_SEC_LEVEL_AUTHPRIV		1905406	1					
ANR	1905450	CompoundStatement		9:111:304:304	1905406	1					
ANR	1905451	IfStatement	"if ( netsnmp_session_set_auth_protocol ( session , auth_protocol ) )"		1905406	0					
ANR	1905452	Condition	"netsnmp_session_set_auth_protocol ( session , auth_protocol )"	1365:6:43190:43246	1905406	0	True				
ANR	1905453	CallExpression	"netsnmp_session_set_auth_protocol ( session , auth_protocol )"		1905406	0					
ANR	1905454	Callee	netsnmp_session_set_auth_protocol		1905406	0					
ANR	1905455	Identifier	netsnmp_session_set_auth_protocol		1905406	0					
ANR	1905456	ArgumentList	session		1905406	1					
ANR	1905457	Argument	session		1905406	0					
ANR	1905458	Identifier	session		1905406	0					
ANR	1905459	Argument	auth_protocol		1905406	1					
ANR	1905460	Identifier	auth_protocol		1905406	0					
ANR	1905461	CompoundStatement		12:65:417:417	1905406	1					
ANR	1905462	ReturnStatement	return ( - 1 ) ;	1367:3:43307:43318	1905406	0	True				
ANR	1905463	UnaryOperationExpression	- 1		1905406	0					
ANR	1905464	UnaryOperator	-		1905406	0					
ANR	1905465	PrimaryExpression	1		1905406	1					
ANR	1905466	IfStatement	"if ( netsnmp_session_gen_auth_key ( session , auth_passphrase ) )"		1905406	1					
ANR	1905467	Condition	"netsnmp_session_gen_auth_key ( session , auth_passphrase )"	1371:6:43378:43431	1905406	0	True				
ANR	1905468	CallExpression	"netsnmp_session_gen_auth_key ( session , auth_passphrase )"		1905406	0					
ANR	1905469	Callee	netsnmp_session_gen_auth_key		1905406	0					
ANR	1905470	Identifier	netsnmp_session_gen_auth_key		1905406	0					
ANR	1905471	ArgumentList	session		1905406	1					
ANR	1905472	Argument	session		1905406	0					
ANR	1905473	Identifier	session		1905406	0					
ANR	1905474	Argument	auth_passphrase		1905406	1					
ANR	1905475	Identifier	auth_passphrase		1905406	0					
ANR	1905476	CompoundStatement		18:62:602:602	1905406	1					
ANR	1905477	ReturnStatement	return ( - 1 ) ;	1373:3:43492:43503	1905406	0	True				
ANR	1905478	UnaryOperationExpression	- 1		1905406	0					
ANR	1905479	UnaryOperator	-		1905406	0					
ANR	1905480	PrimaryExpression	1		1905406	1					
ANR	1905481	IfStatement	if ( session -> securityLevel == SNMP_SEC_LEVEL_AUTHPRIV )		1905406	2					
ANR	1905482	Condition	session -> securityLevel == SNMP_SEC_LEVEL_AUTHPRIV	1376:6:43516:43564	1905406	0	True				
ANR	1905483	EqualityExpression	session -> securityLevel == SNMP_SEC_LEVEL_AUTHPRIV		1905406	0		==			
ANR	1905484	PtrMemberAccess	session -> securityLevel		1905406	0					
ANR	1905485	Identifier	session		1905406	0					
ANR	1905486	Identifier	securityLevel		1905406	1					
ANR	1905487	Identifier	SNMP_SEC_LEVEL_AUTHPRIV		1905406	1					
ANR	1905488	CompoundStatement		23:57:735:735	1905406	1					
ANR	1905489	IfStatement	"if ( netsnmp_session_set_sec_protocol ( session , priv_protocol ) )"		1905406	0					
ANR	1905490	Condition	"netsnmp_session_set_sec_protocol ( session , priv_protocol )"	1378:7:43616:43671	1905406	0	True				
ANR	1905491	CallExpression	"netsnmp_session_set_sec_protocol ( session , priv_protocol )"		1905406	0					
ANR	1905492	Callee	netsnmp_session_set_sec_protocol		1905406	0					
ANR	1905493	Identifier	netsnmp_session_set_sec_protocol		1905406	0					
ANR	1905494	ArgumentList	session		1905406	1					
ANR	1905495	Argument	session		1905406	0					
ANR	1905496	Identifier	session		1905406	0					
ANR	1905497	Argument	priv_protocol		1905406	1					
ANR	1905498	Identifier	priv_protocol		1905406	0					
ANR	1905499	CompoundStatement		25:65:842:842	1905406	1					
ANR	1905500	ReturnStatement	return ( - 1 ) ;	1380:4:43734:43745	1905406	0	True				
ANR	1905501	UnaryOperationExpression	- 1		1905406	0					
ANR	1905502	UnaryOperator	-		1905406	0					
ANR	1905503	PrimaryExpression	1		1905406	1					
ANR	1905504	IfStatement	"if ( netsnmp_session_gen_sec_key ( session , priv_passphrase ) )"		1905406	1					
ANR	1905505	Condition	"netsnmp_session_gen_sec_key ( session , priv_passphrase )"	1384:7:43811:43863	1905406	0	True				
ANR	1905506	CallExpression	"netsnmp_session_gen_sec_key ( session , priv_passphrase )"		1905406	0					
ANR	1905507	Callee	netsnmp_session_gen_sec_key		1905406	0					
ANR	1905508	Identifier	netsnmp_session_gen_sec_key		1905406	0					
ANR	1905509	ArgumentList	session		1905406	1					
ANR	1905510	Argument	session		1905406	0					
ANR	1905511	Identifier	session		1905406	0					
ANR	1905512	Argument	priv_passphrase		1905406	1					
ANR	1905513	Identifier	priv_passphrase		1905406	0					
ANR	1905514	CompoundStatement		31:62:1034:1034	1905406	1					
ANR	1905515	ReturnStatement	return ( - 1 ) ;	1386:4:43926:43937	1905406	0	True				
ANR	1905516	UnaryOperationExpression	- 1		1905406	0					
ANR	1905517	UnaryOperator	-		1905406	0					
ANR	1905518	PrimaryExpression	1		1905406	1					
ANR	1905519	IfStatement	if ( contextName )		1905406	2					
ANR	1905520	Condition	contextName	1392:5:43997:44007	1905406	0	True				
ANR	1905521	Identifier	contextName		1905406	0					
ANR	1905522	CompoundStatement		39:18:1178:1178	1905406	1					
ANR	1905523	ExpressionStatement	session -> contextName = contextName	1393:2:44014:44048	1905406	0	True				
ANR	1905524	AssignmentExpression	session -> contextName = contextName		1905406	0		=			
ANR	1905525	PtrMemberAccess	session -> contextName		1905406	0					
ANR	1905526	Identifier	session		1905406	0					
ANR	1905527	Identifier	contextName		1905406	1					
ANR	1905528	Identifier	contextName		1905406	1					
ANR	1905529	ExpressionStatement	session -> contextNameLen = strlen ( contextName )	1394:2:44052:44097	1905406	1	True				
ANR	1905530	AssignmentExpression	session -> contextNameLen = strlen ( contextName )		1905406	0		=			
ANR	1905531	PtrMemberAccess	session -> contextNameLen		1905406	0					
ANR	1905532	Identifier	session		1905406	0					
ANR	1905533	Identifier	contextNameLen		1905406	1					
ANR	1905534	CallExpression	strlen ( contextName )		1905406	1					
ANR	1905535	Callee	strlen		1905406	0					
ANR	1905536	Identifier	strlen		1905406	0					
ANR	1905537	ArgumentList	contextName		1905406	1					
ANR	1905538	Argument	contextName		1905406	0					
ANR	1905539	Identifier	contextName		1905406	0					
ANR	1905540	IfStatement	"if ( contextEngineID && strlen ( contextEngineID ) && netsnmp_session_set_contextEngineID ( session , contextEngineID ) )"		1905406	3					
ANR	1905541	Condition	"contextEngineID && strlen ( contextEngineID ) && netsnmp_session_set_contextEngineID ( session , contextEngineID )"	1398:5:44152:44258	1905406	0	True				
ANR	1905542	AndExpression	"contextEngineID && strlen ( contextEngineID ) && netsnmp_session_set_contextEngineID ( session , contextEngineID )"		1905406	0		&&			
ANR	1905543	Identifier	contextEngineID		1905406	0					
ANR	1905544	AndExpression	"strlen ( contextEngineID ) && netsnmp_session_set_contextEngineID ( session , contextEngineID )"		1905406	1		&&			
ANR	1905545	CallExpression	strlen ( contextEngineID )		1905406	0					
ANR	1905546	Callee	strlen		1905406	0					
ANR	1905547	Identifier	strlen		1905406	0					
ANR	1905548	ArgumentList	contextEngineID		1905406	1					
ANR	1905549	Argument	contextEngineID		1905406	0					
ANR	1905550	Identifier	contextEngineID		1905406	0					
ANR	1905551	CallExpression	"netsnmp_session_set_contextEngineID ( session , contextEngineID )"		1905406	1					
ANR	1905552	Callee	netsnmp_session_set_contextEngineID		1905406	0					
ANR	1905553	Identifier	netsnmp_session_set_contextEngineID		1905406	0					
ANR	1905554	ArgumentList	session		1905406	1					
ANR	1905555	Argument	session		1905406	0					
ANR	1905556	Identifier	session		1905406	0					
ANR	1905557	Argument	contextEngineID		1905406	1					
ANR	1905558	Identifier	contextEngineID		1905406	0					
ANR	1905559	CompoundStatement		45:114:1429:1429	1905406	1					
ANR	1905560	ReturnStatement	return ( - 1 ) ;	1400:2:44317:44328	1905406	0	True				
ANR	1905561	UnaryOperationExpression	- 1		1905406	0					
ANR	1905562	UnaryOperator	-		1905406	0					
ANR	1905563	PrimaryExpression	1		1905406	1					
ANR	1905564	ReturnStatement	return ( 0 ) ;	1403:1:44335:44345	1905406	4	True				
ANR	1905565	PrimaryExpression	0		1905406	0					
ANR	1905566	ReturnType	static int		1905406	1					
ANR	1905567	Identifier	netsnmp_session_set_security		1905406	2					
ANR	1905568	ParameterList	"struct snmp_session * session , char * sec_level , char * auth_protocol , char * auth_passphrase , char * priv_protocol , char * priv_passphrase , char * contextName , char * contextEngineID"		1905406	3					
ANR	1905569	Parameter	struct snmp_session * session	1353:40:42654:42681	1905406	0	True				
ANR	1905570	ParameterType	struct snmp_session *		1905406	0					
ANR	1905571	Identifier	session		1905406	1					
ANR	1905572	Parameter	char * sec_level	1353:70:42684:42698	1905406	1	True				
ANR	1905573	ParameterType	char *		1905406	0					
ANR	1905574	Identifier	sec_level		1905406	1					
ANR	1905575	Parameter	char * auth_protocol	1353:87:42701:42719	1905406	2	True				
ANR	1905576	ParameterType	char *		1905406	0					
ANR	1905577	Identifier	auth_protocol		1905406	1					
ANR	1905578	Parameter	char * auth_passphrase	1353:108:42722:42742	1905406	3	True				
ANR	1905579	ParameterType	char *		1905406	0					
ANR	1905580	Identifier	auth_passphrase		1905406	1					
ANR	1905581	Parameter	char * priv_protocol	1353:131:42745:42763	1905406	4	True				
ANR	1905582	ParameterType	char *		1905406	0					
ANR	1905583	Identifier	priv_protocol		1905406	1					
ANR	1905584	Parameter	char * priv_passphrase	1353:152:42766:42786	1905406	5	True				
ANR	1905585	ParameterType	char *		1905406	0					
ANR	1905586	Identifier	priv_passphrase		1905406	1					
ANR	1905587	Parameter	char * contextName	1353:175:42789:42805	1905406	6	True				
ANR	1905588	ParameterType	char *		1905406	0					
ANR	1905589	Identifier	contextName		1905406	1					
ANR	1905590	Parameter	char * contextEngineID	1353:194:42808:42828	1905406	7	True				
ANR	1905591	ParameterType	char *		1905406	0					
ANR	1905592	Identifier	contextEngineID		1905406	1					
ANR	1905593	CFGEntryNode	ENTRY		1905406		True				
ANR	1905594	CFGExitNode	EXIT		1905406		True				
ANR	1905595	Symbol	contextName		1905406						
ANR	1905596	Symbol	NULL		1905406						
ANR	1905597	Symbol	session		1905406						
ANR	1905598	Symbol	priv_passphrase		1905406						
ANR	1905599	Symbol	sec_level		1905406						
ANR	1905600	Symbol	priv_protocol		1905406						
ANR	1905601	Symbol	SNMP_SEC_LEVEL_AUTHPRIV		1905406						
ANR	1905602	Symbol	E_WARNING		1905406						
ANR	1905603	Symbol	* session		1905406						
ANR	1905604	Symbol	session -> securityLevel		1905406						
ANR	1905605	Symbol	strlen		1905406						
ANR	1905606	Symbol	netsnmp_session_set_auth_protocol		1905406						
ANR	1905607	Symbol	auth_protocol		1905406						
ANR	1905608	Symbol	SNMP_SEC_LEVEL_AUTHNOPRIV		1905406						
ANR	1905609	Symbol	netsnmp_session_set_sec_level		1905406						
ANR	1905610	Symbol	netsnmp_session_set_sec_protocol		1905406						
ANR	1905611	Symbol	auth_passphrase		1905406						
ANR	1905612	Symbol	netsnmp_session_gen_sec_key		1905406						
ANR	1905613	Symbol	contextEngineID		1905406						
ANR	1905614	Symbol	netsnmp_session_gen_auth_key		1905406						
ANR	1905615	Symbol	session -> contextName		1905406						
ANR	1905616	Symbol	session -> contextNameLen		1905406						
ANR	1905617	Symbol	netsnmp_session_set_contextEngineID		1905406						
ANR	1905618	DeclStmt									
ANR	1905619	Decl							zval	zval *	oid
ANR	1905620	Decl							zval	zval *	value
ANR	1905621	Decl							zval	zval *	type
ANR	1905622	DeclStmt									
ANR	1905623	Decl							char	char *	a1
ANR	1905624	Decl							char	char *	a2
ANR	1905625	Decl							char	char *	a3
ANR	1905626	Decl							char	char *	a4
ANR	1905627	Decl							char	char *	a5
ANR	1905628	Decl							char	char *	a6
ANR	1905629	Decl							char	char *	a7
ANR	1905630	DeclStmt									
ANR	1905631	Decl							size_t	size_t	a1_len
ANR	1905632	Decl							size_t	size_t	a2_len
ANR	1905633	Decl							size_t	size_t	a3_len
ANR	1905634	Decl							size_t	size_t	a4_len
ANR	1905635	Decl							size_t	size_t	a5_len
ANR	1905636	Decl							size_t	size_t	a6_len
ANR	1905637	Decl							size_t	size_t	a7_len
ANR	1905638	DeclStmt									
ANR	1905639	Decl							zend_bool	zend_bool	use_orignames
ANR	1905640	Decl							zend_bool	zend_bool	suffix_keys
ANR	1905641	DeclStmt									
ANR	1905642	Decl							zend_long	zend_long	timeout
ANR	1905643	DeclStmt									
ANR	1905644	Decl							zend_long	zend_long	retries
ANR	1905645	DeclStmt									
ANR	1905646	Decl							int	int	argc
ANR	1905647	DeclStmt									
ANR	1905648	Decl							struct objid_query	struct objid_query	objid_query
ANR	1905649	DeclStmt									
ANR	1905650	Decl							php_snmp_session	php_snmp_session *	session
ANR	1905651	DeclStmt									
ANR	1905652	Decl							int	int	session_less_mode
ANR	1905653	DeclStmt									
ANR	1905654	Decl							php_snmp_object	php_snmp_object *	snmp_object
ANR	1905655	DeclStmt									
ANR	1905656	Decl							php_snmp_object	php_snmp_object	glob_snmp_object
ANR	1905657	DeclStmt									
ANR	1905658	Decl							zval	zval *	object
ANR	1905659	DeclStmt									
ANR	1905660	Decl							zend_long	zend_long	a1
ANR	1905661	DeclStmt									
ANR	1905662	Decl							zend_long	zend_long	a1
ANR	1905663	DeclStmt									
ANR	1905664	Decl							zend_long	zend_long	a1
ANR	1905665	DeclStmt									
ANR	1905666	Decl							zend_long	zend_long	method
ANR	1905667	DeclStmt									
ANR	1905668	Decl							char	char *	filename
ANR	1905669	DeclStmt									
ANR	1905670	Decl							size_t	size_t	filename_len
ANR	1905671	DeclStmt									
ANR	1905672	Decl							char	char *	error
ANR	1905673	DeclStmt									
ANR	1905674	Decl							php_snmp_object	php_snmp_object *	snmp_object
ANR	1905675	DeclStmt									
ANR	1905676	Decl							zval	zval *	object
ANR	1905677	DeclStmt									
ANR	1905678	Decl							char	char *	a1
ANR	1905679	Decl							char	char *	a2
ANR	1905680	DeclStmt									
ANR	1905681	Decl							size_t	size_t	a1_len
ANR	1905682	Decl							size_t	size_t	a2_len
ANR	1905683	DeclStmt									
ANR	1905684	Decl							zend_long	zend_long	timeout
ANR	1905685	DeclStmt									
ANR	1905686	Decl							zend_long	zend_long	retries
ANR	1905687	DeclStmt									
ANR	1905688	Decl							zend_long	zend_long	version
ANR	1905689	DeclStmt									
ANR	1905690	Decl							int	int	argc
ANR	1905691	DeclStmt									
ANR	1905692	Decl							php_snmp_object	php_snmp_object *	snmp_object
ANR	1905693	DeclStmt									
ANR	1905694	Decl							zval	zval *	object
ANR	1905695	DeclStmt									
ANR	1905696	Decl							php_snmp_object	php_snmp_object *	snmp_object
ANR	1905697	DeclStmt									
ANR	1905698	Decl							zval	zval *	object
ANR	1905699	DeclStmt									
ANR	1905700	Decl							char	char *	a1
ANR	1905701	Decl							char	char *	a2
ANR	1905702	Decl							char	char *	a3
ANR	1905703	Decl							char	char *	a4
ANR	1905704	Decl							char	char *	a5
ANR	1905705	Decl							char	char *	a6
ANR	1905706	Decl							char	char *	a7
ANR	1905707	DeclStmt									
ANR	1905708	Decl							size_t	size_t	a1_len
ANR	1905709	Decl							size_t	size_t	a2_len
ANR	1905710	Decl							size_t	size_t	a3_len
ANR	1905711	Decl							size_t	size_t	a4_len
ANR	1905712	Decl							size_t	size_t	a5_len
ANR	1905713	Decl							size_t	size_t	a6_len
ANR	1905714	Decl							size_t	size_t	a7_len
ANR	1905715	DeclStmt									
ANR	1905716	Decl							int	int	argc
ANR	1905717	DeclStmt									
ANR	1905718	Decl							php_snmp_object	php_snmp_object *	snmp_object
ANR	1905719	DeclStmt									
ANR	1905720	Decl							zval	zval *	object
ANR	1905721	DeclStmt									
ANR	1905722	Decl							php_snmp_object	php_snmp_object *	snmp_object
ANR	1905723	DeclStmt									
ANR	1905724	Decl							zval	zval *	object
ANR	1905725	Function	php_snmp_add_property	1947:0:61764:62168							
ANR	1905726	FunctionDef	"php_snmp_add_property (HashTable * h , const char * name , size_t name_length , php_snmp_read_t read_func , php_snmp_write_t write_func)"		1905725	0					
ANR	1905727	CompoundStatement		1948:0:61899:62168	1905725	0					
ANR	1905728	IdentifierDeclStatement	php_snmp_prop_handler p ;	1949:1:61902:61925	1905725	0	True				
ANR	1905729	IdentifierDecl	p		1905725	0					
ANR	1905730	IdentifierDeclType	php_snmp_prop_handler		1905725	0					
ANR	1905731	Identifier	p		1905725	1					
ANR	1905732	ExpressionStatement	p . name = ( char * ) name	1951:1:61929:61950	1905725	1	True				
ANR	1905733	AssignmentExpression	p . name = ( char * ) name		1905725	0		=			
ANR	1905734	MemberAccess	p . name		1905725	0					
ANR	1905735	Identifier	p		1905725	0					
ANR	1905736	Identifier	name		1905725	1					
ANR	1905737	CastExpression	( char * ) name		1905725	1					
ANR	1905738	CastTarget	char *		1905725	0					
ANR	1905739	Identifier	name		1905725	1					
ANR	1905740	ExpressionStatement	p . name_length = name_length	1952:1:61953:61980	1905725	2	True				
ANR	1905741	AssignmentExpression	p . name_length = name_length		1905725	0		=			
ANR	1905742	MemberAccess	p . name_length		1905725	0					
ANR	1905743	Identifier	p		1905725	0					
ANR	1905744	Identifier	name_length		1905725	1					
ANR	1905745	Identifier	name_length		1905725	1					
ANR	1905746	ExpressionStatement	p . read_func = ( read_func ) ? read_func : NULL	1953:1:61983:62027	1905725	3	True				
ANR	1905747	AssignmentExpression	p . read_func = ( read_func ) ? read_func : NULL		1905725	0		=			
ANR	1905748	MemberAccess	p . read_func		1905725	0					
ANR	1905749	Identifier	p		1905725	0					
ANR	1905750	Identifier	read_func		1905725	1					
ANR	1905751	ConditionalExpression	( read_func ) ? read_func : NULL		1905725	1					
ANR	1905752	Condition	read_func		1905725	0					
ANR	1905753	Identifier	read_func		1905725	0					
ANR	1905754	Identifier	read_func		1905725	1					
ANR	1905755	Identifier	NULL		1905725	2					
ANR	1905756	ExpressionStatement	p . write_func = ( write_func ) ? write_func : NULL	1954:1:62030:62077	1905725	4	True				
ANR	1905757	AssignmentExpression	p . write_func = ( write_func ) ? write_func : NULL		1905725	0		=			
ANR	1905758	MemberAccess	p . write_func		1905725	0					
ANR	1905759	Identifier	p		1905725	0					
ANR	1905760	Identifier	write_func		1905725	1					
ANR	1905761	ConditionalExpression	( write_func ) ? write_func : NULL		1905725	1					
ANR	1905762	Condition	write_func		1905725	0					
ANR	1905763	Identifier	write_func		1905725	0					
ANR	1905764	Identifier	write_func		1905725	1					
ANR	1905765	Identifier	NULL		1905725	2					
ANR	1905766	ExpressionStatement	"zend_hash_str_add_mem ( h , ( char * ) name , name_length , & p , sizeof ( php_snmp_prop_handler ) )"	1955:1:62080:62166	1905725	5	True				
ANR	1905767	CallExpression	"zend_hash_str_add_mem ( h , ( char * ) name , name_length , & p , sizeof ( php_snmp_prop_handler ) )"		1905725	0					
ANR	1905768	Callee	zend_hash_str_add_mem		1905725	0					
ANR	1905769	Identifier	zend_hash_str_add_mem		1905725	0					
ANR	1905770	ArgumentList	h		1905725	1					
ANR	1905771	Argument	h		1905725	0					
ANR	1905772	Identifier	h		1905725	0					
ANR	1905773	Argument	( char * ) name		1905725	1					
ANR	1905774	CastExpression	( char * ) name		1905725	0					
ANR	1905775	CastTarget	char *		1905725	0					
ANR	1905776	Identifier	name		1905725	1					
ANR	1905777	Argument	name_length		1905725	2					
ANR	1905778	Identifier	name_length		1905725	0					
ANR	1905779	Argument	& p		1905725	3					
ANR	1905780	UnaryOperationExpression	& p		1905725	0					
ANR	1905781	UnaryOperator	&		1905725	0					
ANR	1905782	Identifier	p		1905725	1					
ANR	1905783	Argument	sizeof ( php_snmp_prop_handler )		1905725	4					
ANR	1905784	SizeofExpression	sizeof ( php_snmp_prop_handler )		1905725	0					
ANR	1905785	Sizeof	sizeof		1905725	0					
ANR	1905786	SizeofOperand	php_snmp_prop_handler		1905725	1					
ANR	1905787	ReturnType	void		1905725	1					
ANR	1905788	Identifier	php_snmp_add_property		1905725	2					
ANR	1905789	ParameterList	"HashTable * h , const char * name , size_t name_length , php_snmp_read_t read_func , php_snmp_write_t write_func"		1905725	3					
ANR	1905790	Parameter	HashTable * h	1947:27:61791:61802	1905725	0	True				
ANR	1905791	ParameterType	HashTable *		1905725	0					
ANR	1905792	Identifier	h		1905725	1					
ANR	1905793	Parameter	const char * name	1947:41:61805:61820	1905725	1	True				
ANR	1905794	ParameterType	const char *		1905725	0					
ANR	1905795	Identifier	name		1905725	1					
ANR	1905796	Parameter	size_t name_length	1947:59:61823:61840	1905725	2	True				
ANR	1905797	ParameterType	size_t		1905725	0					
ANR	1905798	Identifier	name_length		1905725	1					
ANR	1905799	Parameter	php_snmp_read_t read_func	1947:79:61843:61867	1905725	3	True				
ANR	1905800	ParameterType	php_snmp_read_t		1905725	0					
ANR	1905801	Identifier	read_func		1905725	1					
ANR	1905802	Parameter	php_snmp_write_t write_func	1947:106:61870:61896	1905725	4	True				
ANR	1905803	ParameterType	php_snmp_write_t		1905725	0					
ANR	1905804	Identifier	write_func		1905725	1					
ANR	1905805	CFGEntryNode	ENTRY		1905725		True				
ANR	1905806	CFGExitNode	EXIT		1905725		True				
ANR	1905807	Symbol	p		1905725						
ANR	1905808	Symbol	p . name_length		1905725						
ANR	1905809	Symbol	read_func		1905725						
ANR	1905810	Symbol	p . read_func		1905725						
ANR	1905811	Symbol	NULL		1905725						
ANR	1905812	Symbol	& p		1905725						
ANR	1905813	Symbol	h		1905725						
ANR	1905814	Symbol	name		1905725						
ANR	1905815	Symbol	name_length		1905725						
ANR	1905816	Symbol	write_func		1905725						
ANR	1905817	Symbol	p . write_func		1905725						
ANR	1905818	Symbol	p . name		1905725						
ANR	1905819	Function	php_snmp_read_property	1961:0:62313:63118							
ANR	1905820	FunctionDef	"php_snmp_read_property (zval * object , zval * member , int type , void * * cache_slot , zval * rv)"		1905819	0					
ANR	1905821	CompoundStatement		1962:0:62409:63118	1905819	0					
ANR	1905822	IdentifierDeclStatement	zval tmp_member ;	1963:1:62412:62427	1905819	0	True				
ANR	1905823	IdentifierDecl	tmp_member		1905819	0					
ANR	1905824	IdentifierDeclType	zval		1905819	0					
ANR	1905825	Identifier	tmp_member		1905819	1					
ANR	1905826	IdentifierDeclStatement	zval * retval ;	1964:1:62430:62442	1905819	1	True				
ANR	1905827	IdentifierDecl	* retval		1905819	0					
ANR	1905828	IdentifierDeclType	zval *		1905819	0					
ANR	1905829	Identifier	retval		1905819	1					
ANR	1905830	IdentifierDeclStatement	php_snmp_object * obj ;	1965:1:62445:62465	1905819	2	True				
ANR	1905831	IdentifierDecl	* obj		1905819	0					
ANR	1905832	IdentifierDeclType	php_snmp_object *		1905819	0					
ANR	1905833	Identifier	obj		1905819	1					
ANR	1905834	IdentifierDeclStatement	php_snmp_prop_handler * hnd ;	1966:1:62468:62494	1905819	3	True				
ANR	1905835	IdentifierDecl	* hnd		1905819	0					
ANR	1905836	IdentifierDeclType	php_snmp_prop_handler *		1905819	0					
ANR	1905837	Identifier	hnd		1905819	1					
ANR	1905838	IdentifierDeclStatement	int ret ;	1967:1:62497:62504	1905819	4	True				
ANR	1905839	IdentifierDecl	ret		1905819	0					
ANR	1905840	IdentifierDeclType	int		1905819	0					
ANR	1905841	Identifier	ret		1905819	1					
ANR	1905842	ExpressionStatement	obj = Z_SNMP_P ( object )	1969:1:62508:62530	1905819	5	True				
ANR	1905843	AssignmentExpression	obj = Z_SNMP_P ( object )		1905819	0		=			
ANR	1905844	Identifier	obj		1905819	0					
ANR	1905845	CallExpression	Z_SNMP_P ( object )		1905819	1					
ANR	1905846	Callee	Z_SNMP_P		1905819	0					
ANR	1905847	Identifier	Z_SNMP_P		1905819	0					
ANR	1905848	ArgumentList	object		1905819	1					
ANR	1905849	Argument	object		1905819	0					
ANR	1905850	Identifier	object		1905819	0					
ANR	1905851	IfStatement	if ( Z_TYPE_P ( member ) != IS_STRING )		1905819	6					
ANR	1905852	Condition	Z_TYPE_P ( member ) != IS_STRING	1971:5:62538:62566	1905819	0	True				
ANR	1905853	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		1905819	0		!=			
ANR	1905854	CallExpression	Z_TYPE_P ( member )		1905819	0					
ANR	1905855	Callee	Z_TYPE_P		1905819	0					
ANR	1905856	Identifier	Z_TYPE_P		1905819	0					
ANR	1905857	ArgumentList	member		1905819	1					
ANR	1905858	Argument	member		1905819	0					
ANR	1905859	Identifier	member		1905819	0					
ANR	1905860	Identifier	IS_STRING		1905819	1					
ANR	1905861	CompoundStatement		10:36:159:159	1905819	1					
ANR	1905862	ExpressionStatement	"ZVAL_COPY ( & tmp_member , member )"	1972:2:62573:62603	1905819	0	True				
ANR	1905863	CallExpression	"ZVAL_COPY ( & tmp_member , member )"		1905819	0					
ANR	1905864	Callee	ZVAL_COPY		1905819	0					
ANR	1905865	Identifier	ZVAL_COPY		1905819	0					
ANR	1905866	ArgumentList	& tmp_member		1905819	1					
ANR	1905867	Argument	& tmp_member		1905819	0					
ANR	1905868	UnaryOperationExpression	& tmp_member		1905819	0					
ANR	1905869	UnaryOperator	&		1905819	0					
ANR	1905870	Identifier	tmp_member		1905819	1					
ANR	1905871	Argument	member		1905819	1					
ANR	1905872	Identifier	member		1905819	0					
ANR	1905873	ExpressionStatement	convert_to_string ( & tmp_member )	1973:2:62607:62637	1905819	1	True				
ANR	1905874	CallExpression	convert_to_string ( & tmp_member )		1905819	0					
ANR	1905875	Callee	convert_to_string		1905819	0					
ANR	1905876	Identifier	convert_to_string		1905819	0					
ANR	1905877	ArgumentList	& tmp_member		1905819	1					
ANR	1905878	Argument	& tmp_member		1905819	0					
ANR	1905879	UnaryOperationExpression	& tmp_member		1905819	0					
ANR	1905880	UnaryOperator	&		1905819	0					
ANR	1905881	Identifier	tmp_member		1905819	1					
ANR	1905882	ExpressionStatement	member = & tmp_member	1974:2:62641:62661	1905819	2	True				
ANR	1905883	AssignmentExpression	member = & tmp_member		1905819	0		=			
ANR	1905884	Identifier	member		1905819	0					
ANR	1905885	UnaryOperationExpression	& tmp_member		1905819	1					
ANR	1905886	UnaryOperator	&		1905819	0					
ANR	1905887	Identifier	tmp_member		1905819	1					
ANR	1905888	ExpressionStatement	"hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"	1977:1:62668:62731	1905819	7	True				
ANR	1905889	AssignmentExpression	"hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"		1905819	0		=			
ANR	1905890	Identifier	hnd		1905819	0					
ANR	1905891	CallExpression	"zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"		1905819	1					
ANR	1905892	Callee	zend_hash_find_ptr		1905819	0					
ANR	1905893	Identifier	zend_hash_find_ptr		1905819	0					
ANR	1905894	ArgumentList	& php_snmp_properties		1905819	1					
ANR	1905895	Argument	& php_snmp_properties		1905819	0					
ANR	1905896	UnaryOperationExpression	& php_snmp_properties		1905819	0					
ANR	1905897	UnaryOperator	&		1905819	0					
ANR	1905898	Identifier	php_snmp_properties		1905819	1					
ANR	1905899	Argument	Z_STR_P ( member )		1905819	1					
ANR	1905900	CallExpression	Z_STR_P ( member )		1905819	0					
ANR	1905901	Callee	Z_STR_P		1905819	0					
ANR	1905902	Identifier	Z_STR_P		1905819	0					
ANR	1905903	ArgumentList	member		1905819	1					
ANR	1905904	Argument	member		1905819	0					
ANR	1905905	Identifier	member		1905819	0					
ANR	1905906	IfStatement	if ( hnd && hnd -> read_func )		1905819	8					
ANR	1905907	Condition	hnd && hnd -> read_func	1979:5:62739:62759	1905819	0	True				
ANR	1905908	AndExpression	hnd && hnd -> read_func		1905819	0		&&			
ANR	1905909	Identifier	hnd		1905819	0					
ANR	1905910	PtrMemberAccess	hnd -> read_func		1905819	1					
ANR	1905911	Identifier	hnd		1905819	0					
ANR	1905912	Identifier	read_func		1905819	1					
ANR	1905913	CompoundStatement		18:28:352:352	1905819	1					
ANR	1905914	ExpressionStatement	"ret = hnd -> read_func ( obj , rv )"	1980:2:62766:62795	1905819	0	True				
ANR	1905915	AssignmentExpression	"ret = hnd -> read_func ( obj , rv )"		1905819	0		=			
ANR	1905916	Identifier	ret		1905819	0					
ANR	1905917	CallExpression	"hnd -> read_func ( obj , rv )"		1905819	1					
ANR	1905918	Callee	hnd -> read_func		1905819	0					
ANR	1905919	PtrMemberAccess	hnd -> read_func		1905819	0					
ANR	1905920	Identifier	hnd		1905819	0					
ANR	1905921	Identifier	read_func		1905819	1					
ANR	1905922	ArgumentList	obj		1905819	1					
ANR	1905923	Argument	obj		1905819	0					
ANR	1905924	Identifier	obj		1905819	0					
ANR	1905925	Argument	rv		1905819	1					
ANR	1905926	Identifier	rv		1905819	0					
ANR	1905927	IfStatement	if ( ret == SUCCESS )		1905819	1					
ANR	1905928	Condition	ret == SUCCESS	1981:6:62803:62816	1905819	0	True				
ANR	1905929	EqualityExpression	ret == SUCCESS		1905819	0		==			
ANR	1905930	Identifier	ret		1905819	0					
ANR	1905931	Identifier	SUCCESS		1905819	1					
ANR	1905932	CompoundStatement		20:22:409:409	1905819	1					
ANR	1905933	ExpressionStatement	retval = rv	1982:3:62824:62835	1905819	0	True				
ANR	1905934	AssignmentExpression	retval = rv		1905819	0		=			
ANR	1905935	Identifier	retval		1905819	0					
ANR	1905936	Identifier	rv		1905819	1					
ANR	1905937	ElseStatement	else		1905819	0					
ANR	1905938	CompoundStatement		22:9:436:436	1905819	0					
ANR	1905939	ExpressionStatement	retval = & EG ( uninitialized_zval )	1984:3:62851:62883	1905819	0	True				
ANR	1905940	AssignmentExpression	retval = & EG ( uninitialized_zval )		1905819	0		=			
ANR	1905941	Identifier	retval		1905819	0					
ANR	1905942	UnaryOperationExpression	& EG ( uninitialized_zval )		1905819	1					
ANR	1905943	UnaryOperator	&		1905819	0					
ANR	1905944	CallExpression	EG ( uninitialized_zval )		1905819	1					
ANR	1905945	Callee	EG		1905819	0					
ANR	1905946	Identifier	EG		1905819	0					
ANR	1905947	ArgumentList	uninitialized_zval		1905819	1					
ANR	1905948	Argument	uninitialized_zval		1905819	0					
ANR	1905949	Identifier	uninitialized_zval		1905819	0					
ANR	1905950	ElseStatement	else		1905819	0					
ANR	1905951	CompoundStatement		26:2:491:554	1905819	0					
ANR	1905952	IdentifierDeclStatement	zend_object_handlers * std_hnd = zend_get_std_object_handlers ( ) ;	1987:2:62901:62964	1905819	0	True				
ANR	1905953	IdentifierDecl	* std_hnd = zend_get_std_object_handlers ( )		1905819	0					
ANR	1905954	IdentifierDeclType	zend_object_handlers *		1905819	0					
ANR	1905955	Identifier	std_hnd		1905819	1					
ANR	1905956	AssignmentExpression	* std_hnd = zend_get_std_object_handlers ( )		1905819	2		=			
ANR	1905957	Identifier	std_hnd		1905819	0					
ANR	1905958	CallExpression	zend_get_std_object_handlers ( )		1905819	1					
ANR	1905959	Callee	zend_get_std_object_handlers		1905819	0					
ANR	1905960	Identifier	zend_get_std_object_handlers		1905819	0					
ANR	1905961	ArgumentList			1905819	1					
ANR	1905962	ExpressionStatement	"retval = std_hnd -> read_property ( object , member , type , cache_slot , rv )"	1988:2:62968:63037	1905819	1	True				
ANR	1905963	AssignmentExpression	"retval = std_hnd -> read_property ( object , member , type , cache_slot , rv )"		1905819	0		=			
ANR	1905964	Identifier	retval		1905819	0					
ANR	1905965	CallExpression	"std_hnd -> read_property ( object , member , type , cache_slot , rv )"		1905819	1					
ANR	1905966	Callee	std_hnd -> read_property		1905819	0					
ANR	1905967	PtrMemberAccess	std_hnd -> read_property		1905819	0					
ANR	1905968	Identifier	std_hnd		1905819	0					
ANR	1905969	Identifier	read_property		1905819	1					
ANR	1905970	ArgumentList	object		1905819	1					
ANR	1905971	Argument	object		1905819	0					
ANR	1905972	Identifier	object		1905819	0					
ANR	1905973	Argument	member		1905819	1					
ANR	1905974	Identifier	member		1905819	0					
ANR	1905975	Argument	type		1905819	2					
ANR	1905976	Identifier	type		1905819	0					
ANR	1905977	Argument	cache_slot		1905819	3					
ANR	1905978	Identifier	cache_slot		1905819	0					
ANR	1905979	Argument	rv		1905819	4					
ANR	1905980	Identifier	rv		1905819	0					
ANR	1905981	IfStatement	if ( member == & tmp_member )		1905819	9					
ANR	1905982	Condition	member == & tmp_member	1991:5:63048:63068	1905819	0	True				
ANR	1905983	EqualityExpression	member == & tmp_member		1905819	0		==			
ANR	1905984	Identifier	member		1905819	0					
ANR	1905985	UnaryOperationExpression	& tmp_member		1905819	1					
ANR	1905986	UnaryOperator	&		1905819	0					
ANR	1905987	Identifier	tmp_member		1905819	1					
ANR	1905988	CompoundStatement		30:28:661:661	1905819	1					
ANR	1905989	ExpressionStatement	zval_ptr_dtor ( member )	1992:2:63075:63096	1905819	0	True				
ANR	1905990	CallExpression	zval_ptr_dtor ( member )		1905819	0					
ANR	1905991	Callee	zval_ptr_dtor		1905819	0					
ANR	1905992	Identifier	zval_ptr_dtor		1905819	0					
ANR	1905993	ArgumentList	member		1905819	1					
ANR	1905994	Argument	member		1905819	0					
ANR	1905995	Identifier	member		1905819	0					
ANR	1905996	ReturnStatement	return retval ;	1995:1:63103:63116	1905819	10	True				
ANR	1905997	Identifier	retval		1905819	0					
ANR	1905998	ReturnType	zval *		1905819	1					
ANR	1905999	Identifier	php_snmp_read_property		1905819	2					
ANR	1906000	ParameterList	"zval * object , zval * member , int type , void * * cache_slot , zval * rv"		1905819	3					
ANR	1906001	Parameter	zval * object	1961:29:62342:62353	1905819	0	True				
ANR	1906002	ParameterType	zval *		1905819	0					
ANR	1906003	Identifier	object		1905819	1					
ANR	1906004	Parameter	zval * member	1961:43:62356:62367	1905819	1	True				
ANR	1906005	ParameterType	zval *		1905819	0					
ANR	1906006	Identifier	member		1905819	1					
ANR	1906007	Parameter	int type	1961:57:62370:62377	1905819	2	True				
ANR	1906008	ParameterType	int		1905819	0					
ANR	1906009	Identifier	type		1905819	1					
ANR	1906010	Parameter	void * * cache_slot	1961:67:62380:62396	1905819	3	True				
ANR	1906011	ParameterType	void * *		1905819	0					
ANR	1906012	Identifier	cache_slot		1905819	1					
ANR	1906013	Parameter	zval * rv	1961:86:62399:62406	1905819	4	True				
ANR	1906014	ParameterType	zval *		1905819	0					
ANR	1906015	Identifier	rv		1905819	1					
ANR	1906016	CFGEntryNode	ENTRY		1905819		True				
ANR	1906017	CFGExitNode	EXIT		1905819		True				
ANR	1906018	Symbol	rv		1905819						
ANR	1906019	Symbol	zend_get_std_object_handlers		1905819						
ANR	1906020	Symbol	type		1905819						
ANR	1906021	Symbol	& EG		1905819						
ANR	1906022	Symbol	std_hnd		1905819						
ANR	1906023	Symbol	hnd -> read_func		1905819						
ANR	1906024	Symbol	member		1905819						
ANR	1906025	Symbol	std_hnd -> read_property		1905819						
ANR	1906026	Symbol	IS_STRING		1905819						
ANR	1906027	Symbol	zend_hash_find_ptr		1905819						
ANR	1906028	Symbol	hnd		1905819						
ANR	1906029	Symbol	cache_slot		1905819						
ANR	1906030	Symbol	ret		1905819						
ANR	1906031	Symbol	uninitialized_zval		1905819						
ANR	1906032	Symbol	* std_hnd		1905819						
ANR	1906033	Symbol	tmp_member		1905819						
ANR	1906034	Symbol	SUCCESS		1905819						
ANR	1906035	Symbol	& php_snmp_properties		1905819						
ANR	1906036	Symbol	& tmp_member		1905819						
ANR	1906037	Symbol	Z_TYPE_P		1905819						
ANR	1906038	Symbol	retval		1905819						
ANR	1906039	Symbol	obj		1905819						
ANR	1906040	Symbol	* hnd		1905819						
ANR	1906041	Symbol	Z_STR_P		1905819						
ANR	1906042	Symbol	object		1905819						
ANR	1906043	Symbol	Z_SNMP_P		1905819						
ANR	1906044	Function	php_snmp_write_property	2001:0:63267:64039							
ANR	1906045	FunctionDef	"php_snmp_write_property (zval * object , zval * member , zval * value , void * * cache_slot)"		1906044	0					
ANR	1906046	CompoundStatement		2002:0:63356:64039	1906044	0					
ANR	1906047	IdentifierDeclStatement	zval tmp_member ;	2003:1:63359:63374	1906044	0	True				
ANR	1906048	IdentifierDecl	tmp_member		1906044	0					
ANR	1906049	IdentifierDeclType	zval		1906044	0					
ANR	1906050	Identifier	tmp_member		1906044	1					
ANR	1906051	IdentifierDeclStatement	php_snmp_object * obj ;	2004:1:63377:63397	1906044	1	True				
ANR	1906052	IdentifierDecl	* obj		1906044	0					
ANR	1906053	IdentifierDeclType	php_snmp_object *		1906044	0					
ANR	1906054	Identifier	obj		1906044	1					
ANR	1906055	IdentifierDeclStatement	php_snmp_prop_handler * hnd ;	2005:1:63400:63426	1906044	2	True				
ANR	1906056	IdentifierDecl	* hnd		1906044	0					
ANR	1906057	IdentifierDeclType	php_snmp_prop_handler *		1906044	0					
ANR	1906058	Identifier	hnd		1906044	1					
ANR	1906059	IfStatement	if ( Z_TYPE_P ( member ) != IS_STRING )		1906044	3					
ANR	1906060	Condition	Z_TYPE_P ( member ) != IS_STRING	2007:5:63434:63462	1906044	0	True				
ANR	1906061	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		1906044	0		!=			
ANR	1906062	CallExpression	Z_TYPE_P ( member )		1906044	0					
ANR	1906063	Callee	Z_TYPE_P		1906044	0					
ANR	1906064	Identifier	Z_TYPE_P		1906044	0					
ANR	1906065	ArgumentList	member		1906044	1					
ANR	1906066	Argument	member		1906044	0					
ANR	1906067	Identifier	member		1906044	0					
ANR	1906068	Identifier	IS_STRING		1906044	1					
ANR	1906069	CompoundStatement		6:36:108:108	1906044	1					
ANR	1906070	ExpressionStatement	"ZVAL_COPY ( & tmp_member , member )"	2008:2:63469:63499	1906044	0	True				
ANR	1906071	CallExpression	"ZVAL_COPY ( & tmp_member , member )"		1906044	0					
ANR	1906072	Callee	ZVAL_COPY		1906044	0					
ANR	1906073	Identifier	ZVAL_COPY		1906044	0					
ANR	1906074	ArgumentList	& tmp_member		1906044	1					
ANR	1906075	Argument	& tmp_member		1906044	0					
ANR	1906076	UnaryOperationExpression	& tmp_member		1906044	0					
ANR	1906077	UnaryOperator	&		1906044	0					
ANR	1906078	Identifier	tmp_member		1906044	1					
ANR	1906079	Argument	member		1906044	1					
ANR	1906080	Identifier	member		1906044	0					
ANR	1906081	ExpressionStatement	convert_to_string ( & tmp_member )	2009:2:63503:63533	1906044	1	True				
ANR	1906082	CallExpression	convert_to_string ( & tmp_member )		1906044	0					
ANR	1906083	Callee	convert_to_string		1906044	0					
ANR	1906084	Identifier	convert_to_string		1906044	0					
ANR	1906085	ArgumentList	& tmp_member		1906044	1					
ANR	1906086	Argument	& tmp_member		1906044	0					
ANR	1906087	UnaryOperationExpression	& tmp_member		1906044	0					
ANR	1906088	UnaryOperator	&		1906044	0					
ANR	1906089	Identifier	tmp_member		1906044	1					
ANR	1906090	ExpressionStatement	member = & tmp_member	2010:2:63537:63557	1906044	2	True				
ANR	1906091	AssignmentExpression	member = & tmp_member		1906044	0		=			
ANR	1906092	Identifier	member		1906044	0					
ANR	1906093	UnaryOperationExpression	& tmp_member		1906044	1					
ANR	1906094	UnaryOperator	&		1906044	0					
ANR	1906095	Identifier	tmp_member		1906044	1					
ANR	1906096	ExpressionStatement	obj = Z_SNMP_P ( object )	2013:1:63564:63586	1906044	4	True				
ANR	1906097	AssignmentExpression	obj = Z_SNMP_P ( object )		1906044	0		=			
ANR	1906098	Identifier	obj		1906044	0					
ANR	1906099	CallExpression	Z_SNMP_P ( object )		1906044	1					
ANR	1906100	Callee	Z_SNMP_P		1906044	0					
ANR	1906101	Identifier	Z_SNMP_P		1906044	0					
ANR	1906102	ArgumentList	object		1906044	1					
ANR	1906103	Argument	object		1906044	0					
ANR	1906104	Identifier	object		1906044	0					
ANR	1906105	ExpressionStatement	"hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"	2015:1:63590:63653	1906044	5	True				
ANR	1906106	AssignmentExpression	"hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"		1906044	0		=			
ANR	1906107	Identifier	hnd		1906044	0					
ANR	1906108	CallExpression	"zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"		1906044	1					
ANR	1906109	Callee	zend_hash_find_ptr		1906044	0					
ANR	1906110	Identifier	zend_hash_find_ptr		1906044	0					
ANR	1906111	ArgumentList	& php_snmp_properties		1906044	1					
ANR	1906112	Argument	& php_snmp_properties		1906044	0					
ANR	1906113	UnaryOperationExpression	& php_snmp_properties		1906044	0					
ANR	1906114	UnaryOperator	&		1906044	0					
ANR	1906115	Identifier	php_snmp_properties		1906044	1					
ANR	1906116	Argument	Z_STR_P ( member )		1906044	1					
ANR	1906117	CallExpression	Z_STR_P ( member )		1906044	0					
ANR	1906118	Callee	Z_STR_P		1906044	0					
ANR	1906119	Identifier	Z_STR_P		1906044	0					
ANR	1906120	ArgumentList	member		1906044	1					
ANR	1906121	Argument	member		1906044	0					
ANR	1906122	Identifier	member		1906044	0					
ANR	1906123	IfStatement	if ( hnd && hnd -> write_func )		1906044	6					
ANR	1906124	Condition	hnd && hnd -> write_func	2017:5:63661:63682	1906044	0	True				
ANR	1906125	AndExpression	hnd && hnd -> write_func		1906044	0		&&			
ANR	1906126	Identifier	hnd		1906044	0					
ANR	1906127	PtrMemberAccess	hnd -> write_func		1906044	1					
ANR	1906128	Identifier	hnd		1906044	0					
ANR	1906129	Identifier	write_func		1906044	1					
ANR	1906130	CompoundStatement		16:29:328:328	1906044	1					
ANR	1906131	ExpressionStatement	"hnd -> write_func ( obj , value )"	2018:2:63689:63716	1906044	0	True				
ANR	1906132	CallExpression	"hnd -> write_func ( obj , value )"		1906044	0					
ANR	1906133	Callee	hnd -> write_func		1906044	0					
ANR	1906134	PtrMemberAccess	hnd -> write_func		1906044	0					
ANR	1906135	Identifier	hnd		1906044	0					
ANR	1906136	Identifier	write_func		1906044	1					
ANR	1906137	ArgumentList	obj		1906044	1					
ANR	1906138	Argument	obj		1906044	0					
ANR	1906139	Identifier	obj		1906044	0					
ANR	1906140	Argument	value		1906044	1					
ANR	1906141	Identifier	value		1906044	0					
ANR	1906142	ElseStatement	else		1906044	0					
ANR	1906143	CompoundStatement		25:2:493:556	1906044	0					
ANR	1906144	IdentifierDeclStatement	zend_object_handlers * std_hnd = zend_get_std_object_handlers ( ) ;	2026:2:63850:63913	1906044	0	True				
ANR	1906145	IdentifierDecl	* std_hnd = zend_get_std_object_handlers ( )		1906044	0					
ANR	1906146	IdentifierDeclType	zend_object_handlers *		1906044	0					
ANR	1906147	Identifier	std_hnd		1906044	1					
ANR	1906148	AssignmentExpression	* std_hnd = zend_get_std_object_handlers ( )		1906044	2		=			
ANR	1906149	Identifier	std_hnd		1906044	0					
ANR	1906150	CallExpression	zend_get_std_object_handlers ( )		1906044	1					
ANR	1906151	Callee	zend_get_std_object_handlers		1906044	0					
ANR	1906152	Identifier	zend_get_std_object_handlers		1906044	0					
ANR	1906153	ArgumentList			1906044	1					
ANR	1906154	ExpressionStatement	"std_hnd -> write_property ( object , member , value , cache_slot )"	2027:2:63917:63975	1906044	1	True				
ANR	1906155	CallExpression	"std_hnd -> write_property ( object , member , value , cache_slot )"		1906044	0					
ANR	1906156	Callee	std_hnd -> write_property		1906044	0					
ANR	1906157	PtrMemberAccess	std_hnd -> write_property		1906044	0					
ANR	1906158	Identifier	std_hnd		1906044	0					
ANR	1906159	Identifier	write_property		1906044	1					
ANR	1906160	ArgumentList	object		1906044	1					
ANR	1906161	Argument	object		1906044	0					
ANR	1906162	Identifier	object		1906044	0					
ANR	1906163	Argument	member		1906044	1					
ANR	1906164	Identifier	member		1906044	0					
ANR	1906165	Argument	value		1906044	2					
ANR	1906166	Identifier	value		1906044	0					
ANR	1906167	Argument	cache_slot		1906044	3					
ANR	1906168	Identifier	cache_slot		1906044	0					
ANR	1906169	IfStatement	if ( member == & tmp_member )		1906044	7					
ANR	1906170	Condition	member == & tmp_member	2030:5:63986:64006	1906044	0	True				
ANR	1906171	EqualityExpression	member == & tmp_member		1906044	0		==			
ANR	1906172	Identifier	member		1906044	0					
ANR	1906173	UnaryOperationExpression	& tmp_member		1906044	1					
ANR	1906174	UnaryOperator	&		1906044	0					
ANR	1906175	Identifier	tmp_member		1906044	1					
ANR	1906176	CompoundStatement		29:28:652:652	1906044	1					
ANR	1906177	ExpressionStatement	zval_ptr_dtor ( member )	2031:2:64013:64034	1906044	0	True				
ANR	1906178	CallExpression	zval_ptr_dtor ( member )		1906044	0					
ANR	1906179	Callee	zval_ptr_dtor		1906044	0					
ANR	1906180	Identifier	zval_ptr_dtor		1906044	0					
ANR	1906181	ArgumentList	member		1906044	1					
ANR	1906182	Argument	member		1906044	0					
ANR	1906183	Identifier	member		1906044	0					
ANR	1906184	ReturnType	void		1906044	1					
ANR	1906185	Identifier	php_snmp_write_property		1906044	2					
ANR	1906186	ParameterList	"zval * object , zval * member , zval * value , void * * cache_slot"		1906044	3					
ANR	1906187	Parameter	zval * object	2001:29:63296:63307	1906044	0	True				
ANR	1906188	ParameterType	zval *		1906044	0					
ANR	1906189	Identifier	object		1906044	1					
ANR	1906190	Parameter	zval * member	2001:43:63310:63321	1906044	1	True				
ANR	1906191	ParameterType	zval *		1906044	0					
ANR	1906192	Identifier	member		1906044	1					
ANR	1906193	Parameter	zval * value	2001:57:63324:63334	1906044	2	True				
ANR	1906194	ParameterType	zval *		1906044	0					
ANR	1906195	Identifier	value		1906044	1					
ANR	1906196	Parameter	void * * cache_slot	2001:70:63337:63353	1906044	3	True				
ANR	1906197	ParameterType	void * *		1906044	0					
ANR	1906198	Identifier	cache_slot		1906044	1					
ANR	1906199	CFGEntryNode	ENTRY		1906044		True				
ANR	1906200	CFGExitNode	EXIT		1906044		True				
ANR	1906201	Symbol	cache_slot		1906044						
ANR	1906202	Symbol	tmp_member		1906044						
ANR	1906203	Symbol	hnd -> write_func		1906044						
ANR	1906204	Symbol	zend_get_std_object_handlers		1906044						
ANR	1906205	Symbol	& php_snmp_properties		1906044						
ANR	1906206	Symbol	& tmp_member		1906044						
ANR	1906207	Symbol	Z_TYPE_P		1906044						
ANR	1906208	Symbol	std_hnd		1906044						
ANR	1906209	Symbol	obj		1906044						
ANR	1906210	Symbol	* hnd		1906044						
ANR	1906211	Symbol	member		1906044						
ANR	1906212	Symbol	IS_STRING		1906044						
ANR	1906213	Symbol	Z_STR_P		1906044						
ANR	1906214	Symbol	value		1906044						
ANR	1906215	Symbol	zend_hash_find_ptr		1906044						
ANR	1906216	Symbol	object		1906044						
ANR	1906217	Symbol	hnd		1906044						
ANR	1906218	Symbol	Z_SNMP_P		1906044						
ANR	1906219	Function	php_snmp_has_property	2038:0:64194:65146							
ANR	1906220	FunctionDef	"php_snmp_has_property (zval * object , zval * member , int has_set_exists , void * * cache_slot)"		1906219	0					
ANR	1906221	CompoundStatement		2039:0:64294:65146	1906219	0					
ANR	1906222	IdentifierDeclStatement	zval rv ;	2040:1:64297:64304	1906219	0	True				
ANR	1906223	IdentifierDecl	rv		1906219	0					
ANR	1906224	IdentifierDeclType	zval		1906219	0					
ANR	1906225	Identifier	rv		1906219	1					
ANR	1906226	IdentifierDeclStatement	php_snmp_prop_handler * hnd ;	2041:1:64307:64333	1906219	1	True				
ANR	1906227	IdentifierDecl	* hnd		1906219	0					
ANR	1906228	IdentifierDeclType	php_snmp_prop_handler *		1906219	0					
ANR	1906229	Identifier	hnd		1906219	1					
ANR	1906230	IdentifierDeclStatement	int ret = 0 ;	2042:1:64336:64347	1906219	2	True				
ANR	1906231	IdentifierDecl	ret = 0		1906219	0					
ANR	1906232	IdentifierDeclType	int		1906219	0					
ANR	1906233	Identifier	ret		1906219	1					
ANR	1906234	AssignmentExpression	ret = 0		1906219	2		=			
ANR	1906235	Identifier	ret		1906219	0					
ANR	1906236	PrimaryExpression	0		1906219	1					
ANR	1906237	IfStatement	"if ( ( hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) ) ) != NULL )"		1906219	3					
ANR	1906238	Condition	"( hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) ) ) != NULL"	2044:5:64355:64427	1906219	0	True				
ANR	1906239	EqualityExpression	"( hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) ) ) != NULL"		1906219	0		!=			
ANR	1906240	AssignmentExpression	"hnd = zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"		1906219	0		=			
ANR	1906241	Identifier	hnd		1906219	0					
ANR	1906242	CallExpression	"zend_hash_find_ptr ( & php_snmp_properties , Z_STR_P ( member ) )"		1906219	1					
ANR	1906243	Callee	zend_hash_find_ptr		1906219	0					
ANR	1906244	Identifier	zend_hash_find_ptr		1906219	0					
ANR	1906245	ArgumentList	& php_snmp_properties		1906219	1					
ANR	1906246	Argument	& php_snmp_properties		1906219	0					
ANR	1906247	UnaryOperationExpression	& php_snmp_properties		1906219	0					
ANR	1906248	UnaryOperator	&		1906219	0					
ANR	1906249	Identifier	php_snmp_properties		1906219	1					
ANR	1906250	Argument	Z_STR_P ( member )		1906219	1					
ANR	1906251	CallExpression	Z_STR_P ( member )		1906219	0					
ANR	1906252	Callee	Z_STR_P		1906219	0					
ANR	1906253	Identifier	Z_STR_P		1906219	0					
ANR	1906254	ArgumentList	member		1906219	1					
ANR	1906255	Argument	member		1906219	0					
ANR	1906256	Identifier	member		1906219	0					
ANR	1906257	Identifier	NULL		1906219	1					
ANR	1906258	CompoundStatement		6:80:135:135	1906219	1					
ANR	1906259	SwitchStatement	switch ( has_set_exists )		1906219	0					
ANR	1906260	Condition	has_set_exists	2045:10:64442:64455	1906219	0	True				
ANR	1906261	Identifier	has_set_exists		1906219	0					
ANR	1906262	CompoundStatement		7:26:163:163	1906219	1					
ANR	1906263	Label	case 2 :	2046:3:64463:64469	1906219	0	True				
ANR	1906264	ExpressionStatement	ret = 1	2047:4:64475:64482	1906219	1	True				
ANR	1906265	AssignmentExpression	ret = 1		1906219	0		=			
ANR	1906266	Identifier	ret		1906219	0					
ANR	1906267	PrimaryExpression	1		1906219	1					
ANR	1906268	BreakStatement	break ;	2048:4:64488:64493	1906219	2	True				
ANR	1906269	Label	case 0 :	2049:3:64498:64504	1906219	3	True				
ANR	1906270	CompoundStatement		12:4:217:297	1906219	4					
ANR	1906271	IdentifierDeclStatement	"zval * value = php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv ) ;"	2050:4:64512:64592	1906219	0	True				
ANR	1906272	IdentifierDecl	"* value = php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv )"		1906219	0					
ANR	1906273	IdentifierDeclType	zval *		1906219	0					
ANR	1906274	Identifier	value		1906219	1					
ANR	1906275	AssignmentExpression	"* value = php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv )"		1906219	2		=			
ANR	1906276	Identifier	value		1906219	0					
ANR	1906277	CallExpression	"php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv )"		1906219	1					
ANR	1906278	Callee	php_snmp_read_property		1906219	0					
ANR	1906279	Identifier	php_snmp_read_property		1906219	0					
ANR	1906280	ArgumentList	object		1906219	1					
ANR	1906281	Argument	object		1906219	0					
ANR	1906282	Identifier	object		1906219	0					
ANR	1906283	Argument	member		1906219	1					
ANR	1906284	Identifier	member		1906219	0					
ANR	1906285	Argument	BP_VAR_IS		1906219	2					
ANR	1906286	Identifier	BP_VAR_IS		1906219	0					
ANR	1906287	Argument	cache_slot		1906219	3					
ANR	1906288	Identifier	cache_slot		1906219	0					
ANR	1906289	Argument	& rv		1906219	4					
ANR	1906290	UnaryOperationExpression	& rv		1906219	0					
ANR	1906291	UnaryOperator	&		1906219	0					
ANR	1906292	Identifier	rv		1906219	1					
ANR	1906293	IfStatement	if ( value != & EG ( uninitialized_zval ) )		1906219	1					
ANR	1906294	Condition	value != & EG ( uninitialized_zval )	2051:8:64602:64633	1906219	0	True				
ANR	1906295	EqualityExpression	value != & EG ( uninitialized_zval )		1906219	0		!=			
ANR	1906296	Identifier	value		1906219	0					
ANR	1906297	UnaryOperationExpression	& EG ( uninitialized_zval )		1906219	1					
ANR	1906298	UnaryOperator	&		1906219	0					
ANR	1906299	CallExpression	EG ( uninitialized_zval )		1906219	1					
ANR	1906300	Callee	EG		1906219	0					
ANR	1906301	Identifier	EG		1906219	0					
ANR	1906302	ArgumentList	uninitialized_zval		1906219	1					
ANR	1906303	Argument	uninitialized_zval		1906219	0					
ANR	1906304	Identifier	uninitialized_zval		1906219	0					
ANR	1906305	CompoundStatement		13:42:341:341	1906219	1					
ANR	1906306	ExpressionStatement	ret = Z_TYPE_P ( value ) != IS_NULL ? 1 : 0	2052:5:64643:64682	1906219	0	True				
ANR	1906307	AssignmentExpression	ret = Z_TYPE_P ( value ) != IS_NULL ? 1 : 0		1906219	0		=			
ANR	1906308	Identifier	ret		1906219	0					
ANR	1906309	ConditionalExpression	Z_TYPE_P ( value ) != IS_NULL ? 1 : 0		1906219	1					
ANR	1906310	Condition	Z_TYPE_P ( value ) != IS_NULL		1906219	0					
ANR	1906311	EqualityExpression	Z_TYPE_P ( value ) != IS_NULL		1906219	0		!=			
ANR	1906312	CallExpression	Z_TYPE_P ( value )		1906219	0					
ANR	1906313	Callee	Z_TYPE_P		1906219	0					
ANR	1906314	Identifier	Z_TYPE_P		1906219	0					
ANR	1906315	ArgumentList	value		1906219	1					
ANR	1906316	Argument	value		1906219	0					
ANR	1906317	Identifier	value		1906219	0					
ANR	1906318	Identifier	IS_NULL		1906219	1					
ANR	1906319	PrimaryExpression	1		1906219	1					
ANR	1906320	PrimaryExpression	0		1906219	2					
ANR	1906321	ExpressionStatement	zval_ptr_dtor ( value )	2053:5:64689:64709	1906219	1	True				
ANR	1906322	CallExpression	zval_ptr_dtor ( value )		1906219	0					
ANR	1906323	Callee	zval_ptr_dtor		1906219	0					
ANR	1906324	Identifier	zval_ptr_dtor		1906219	0					
ANR	1906325	ArgumentList	value		1906219	1					
ANR	1906326	Argument	value		1906219	0					
ANR	1906327	Identifier	value		1906219	0					
ANR	1906328	BreakStatement	break ;	2055:4:64721:64726	1906219	2	True				
ANR	1906329	Label	default :	2057:3:64736:64743	1906219	5	True				
ANR	1906330	Identifier	default		1906219	0					
ANR	1906331	CompoundStatement		20:4:456:536	1906219	6					
ANR	1906332	IdentifierDeclStatement	"zval * value = php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv ) ;"	2058:4:64751:64831	1906219	0	True				
ANR	1906333	IdentifierDecl	"* value = php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv )"		1906219	0					
ANR	1906334	IdentifierDeclType	zval *		1906219	0					
ANR	1906335	Identifier	value		1906219	1					
ANR	1906336	AssignmentExpression	"* value = php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv )"		1906219	2		=			
ANR	1906337	Identifier	value		1906219	0					
ANR	1906338	CallExpression	"php_snmp_read_property ( object , member , BP_VAR_IS , cache_slot , & rv )"		1906219	1					
ANR	1906339	Callee	php_snmp_read_property		1906219	0					
ANR	1906340	Identifier	php_snmp_read_property		1906219	0					
ANR	1906341	ArgumentList	object		1906219	1					
ANR	1906342	Argument	object		1906219	0					
ANR	1906343	Identifier	object		1906219	0					
ANR	1906344	Argument	member		1906219	1					
ANR	1906345	Identifier	member		1906219	0					
ANR	1906346	Argument	BP_VAR_IS		1906219	2					
ANR	1906347	Identifier	BP_VAR_IS		1906219	0					
ANR	1906348	Argument	cache_slot		1906219	3					
ANR	1906349	Identifier	cache_slot		1906219	0					
ANR	1906350	Argument	& rv		1906219	4					
ANR	1906351	UnaryOperationExpression	& rv		1906219	0					
ANR	1906352	UnaryOperator	&		1906219	0					
ANR	1906353	Identifier	rv		1906219	1					
ANR	1906354	IfStatement	if ( value != & EG ( uninitialized_zval ) )		1906219	1					
ANR	1906355	Condition	value != & EG ( uninitialized_zval )	2059:8:64841:64872	1906219	0	True				
ANR	1906356	EqualityExpression	value != & EG ( uninitialized_zval )		1906219	0		!=			
ANR	1906357	Identifier	value		1906219	0					
ANR	1906358	UnaryOperationExpression	& EG ( uninitialized_zval )		1906219	1					
ANR	1906359	UnaryOperator	&		1906219	0					
ANR	1906360	CallExpression	EG ( uninitialized_zval )		1906219	1					
ANR	1906361	Callee	EG		1906219	0					
ANR	1906362	Identifier	EG		1906219	0					
ANR	1906363	ArgumentList	uninitialized_zval		1906219	1					
ANR	1906364	Argument	uninitialized_zval		1906219	0					
ANR	1906365	Identifier	uninitialized_zval		1906219	0					
ANR	1906366	CompoundStatement		21:42:580:580	1906219	1					
ANR	1906367	ExpressionStatement	convert_to_boolean ( value )	2060:5:64882:64907	1906219	0	True				
ANR	1906368	CallExpression	convert_to_boolean ( value )		1906219	0					
ANR	1906369	Callee	convert_to_boolean		1906219	0					
ANR	1906370	Identifier	convert_to_boolean		1906219	0					
ANR	1906371	ArgumentList	value		1906219	1					
ANR	1906372	Argument	value		1906219	0					
ANR	1906373	Identifier	value		1906219	0					
ANR	1906374	ExpressionStatement	ret = Z_TYPE_P ( value ) == IS_TRUE ? 1 : 0	2061:5:64914:64951	1906219	1	True				
ANR	1906375	AssignmentExpression	ret = Z_TYPE_P ( value ) == IS_TRUE ? 1 : 0		1906219	0		=			
ANR	1906376	Identifier	ret		1906219	0					
ANR	1906377	ConditionalExpression	Z_TYPE_P ( value ) == IS_TRUE ? 1 : 0		1906219	1					
ANR	1906378	Condition	Z_TYPE_P ( value ) == IS_TRUE		1906219	0					
ANR	1906379	EqualityExpression	Z_TYPE_P ( value ) == IS_TRUE		1906219	0		==			
ANR	1906380	CallExpression	Z_TYPE_P ( value )		1906219	0					
ANR	1906381	Callee	Z_TYPE_P		1906219	0					
ANR	1906382	Identifier	Z_TYPE_P		1906219	0					
ANR	1906383	ArgumentList	value		1906219	1					
ANR	1906384	Argument	value		1906219	0					
ANR	1906385	Identifier	value		1906219	0					
ANR	1906386	Identifier	IS_TRUE		1906219	1					
ANR	1906387	PrimaryExpression	1		1906219	1					
ANR	1906388	PrimaryExpression	0		1906219	2					
ANR	1906389	BreakStatement	break ;	2063:4:64963:64968	1906219	2	True				
ANR	1906390	ElseStatement	else		1906219	0					
ANR	1906391	CompoundStatement		29:2:696:758	1906219	0					
ANR	1906392	IdentifierDeclStatement	zend_object_handlers * std_hnd = zend_get_std_object_handlers ( ) ;	2067:2:64991:65053	1906219	0	True				
ANR	1906393	IdentifierDecl	* std_hnd = zend_get_std_object_handlers ( )		1906219	0					
ANR	1906394	IdentifierDeclType	zend_object_handlers *		1906219	0					
ANR	1906395	Identifier	std_hnd		1906219	1					
ANR	1906396	AssignmentExpression	* std_hnd = zend_get_std_object_handlers ( )		1906219	2		=			
ANR	1906397	Identifier	std_hnd		1906219	0					
ANR	1906398	CallExpression	zend_get_std_object_handlers ( )		1906219	1					
ANR	1906399	Callee	zend_get_std_object_handlers		1906219	0					
ANR	1906400	Identifier	zend_get_std_object_handlers		1906219	0					
ANR	1906401	ArgumentList			1906219	1					
ANR	1906402	ExpressionStatement	"ret = std_hnd -> has_property ( object , member , has_set_exists , cache_slot )"	2068:2:65057:65128	1906219	1	True				
ANR	1906403	AssignmentExpression	"ret = std_hnd -> has_property ( object , member , has_set_exists , cache_slot )"		1906219	0		=			
ANR	1906404	Identifier	ret		1906219	0					
ANR	1906405	CallExpression	"std_hnd -> has_property ( object , member , has_set_exists , cache_slot )"		1906219	1					
ANR	1906406	Callee	std_hnd -> has_property		1906219	0					
ANR	1906407	PtrMemberAccess	std_hnd -> has_property		1906219	0					
ANR	1906408	Identifier	std_hnd		1906219	0					
ANR	1906409	Identifier	has_property		1906219	1					
ANR	1906410	ArgumentList	object		1906219	1					
ANR	1906411	Argument	object		1906219	0					
ANR	1906412	Identifier	object		1906219	0					
ANR	1906413	Argument	member		1906219	1					
ANR	1906414	Identifier	member		1906219	0					
ANR	1906415	Argument	has_set_exists		1906219	2					
ANR	1906416	Identifier	has_set_exists		1906219	0					
ANR	1906417	Argument	cache_slot		1906219	3					
ANR	1906418	Identifier	cache_slot		1906219	0					
ANR	1906419	ReturnStatement	return ret ;	2070:1:65134:65144	1906219	4	True				
ANR	1906420	Identifier	ret		1906219	0					
ANR	1906421	ReturnType	static int		1906219	1					
ANR	1906422	Identifier	php_snmp_has_property		1906219	2					
ANR	1906423	ParameterList	"zval * object , zval * member , int has_set_exists , void * * cache_slot"		1906219	3					
ANR	1906424	Parameter	zval * object	2038:33:64227:64238	1906219	0	True				
ANR	1906425	ParameterType	zval *		1906219	0					
ANR	1906426	Identifier	object		1906219	1					
ANR	1906427	Parameter	zval * member	2038:47:64241:64252	1906219	1	True				
ANR	1906428	ParameterType	zval *		1906219	0					
ANR	1906429	Identifier	member		1906219	1					
ANR	1906430	Parameter	int has_set_exists	2038:61:64255:64272	1906219	2	True				
ANR	1906431	ParameterType	int		1906219	0					
ANR	1906432	Identifier	has_set_exists		1906219	1					
ANR	1906433	Parameter	void * * cache_slot	2038:81:64275:64291	1906219	3	True				
ANR	1906434	ParameterType	void * *		1906219	0					
ANR	1906435	Identifier	cache_slot		1906219	1					
ANR	1906436	CFGEntryNode	ENTRY		1906219		True				
ANR	1906437	CFGExitNode	EXIT		1906219		True				
ANR	1906438	Symbol	cache_slot		1906219						
ANR	1906439	Symbol	ret		1906219						
ANR	1906440	Symbol	uninitialized_zval		1906219						
ANR	1906441	Symbol	* std_hnd		1906219						
ANR	1906442	Symbol	NULL		1906219						
ANR	1906443	Symbol	rv		1906219						
ANR	1906444	Symbol	zend_get_std_object_handlers		1906219						
ANR	1906445	Symbol	& php_snmp_properties		1906219						
ANR	1906446	Symbol	IS_TRUE		1906219						
ANR	1906447	Symbol	Z_TYPE_P		1906219						
ANR	1906448	Symbol	& EG		1906219						
ANR	1906449	Symbol	std_hnd		1906219						
ANR	1906450	Symbol	& rv		1906219						
ANR	1906451	Symbol	php_snmp_read_property		1906219						
ANR	1906452	Symbol	std_hnd -> has_property		1906219						
ANR	1906453	Symbol	IS_NULL		1906219						
ANR	1906454	Symbol	member		1906219						
ANR	1906455	Symbol	has_set_exists		1906219						
ANR	1906456	Symbol	Z_STR_P		1906219						
ANR	1906457	Symbol	zend_hash_find_ptr		1906219						
ANR	1906458	Symbol	value		1906219						
ANR	1906459	Symbol	BP_VAR_IS		1906219						
ANR	1906460	Symbol	object		1906219						
ANR	1906461	Symbol	hnd		1906219						
ANR	1906462	Function	php_snmp_get_properties	2076:0:65291:65790							
ANR	1906463	FunctionDef	php_snmp_get_properties (zval * object)		1906462	0					
ANR	1906464	CompoundStatement		2077:0:65347:65790	1906462	0					
ANR	1906465	IdentifierDeclStatement	php_snmp_object * obj ;	2078:1:65350:65370	1906462	0	True				
ANR	1906466	IdentifierDecl	* obj		1906462	0					
ANR	1906467	IdentifierDeclType	php_snmp_object *		1906462	0					
ANR	1906468	Identifier	obj		1906462	1					
ANR	1906469	IdentifierDeclStatement	php_snmp_prop_handler * hnd ;	2079:1:65373:65399	1906462	1	True				
ANR	1906470	IdentifierDecl	* hnd		1906462	0					
ANR	1906471	IdentifierDeclType	php_snmp_prop_handler *		1906462	0					
ANR	1906472	Identifier	hnd		1906462	1					
ANR	1906473	IdentifierDeclStatement	HashTable * props ;	2080:1:65402:65418	1906462	2	True				
ANR	1906474	IdentifierDecl	* props		1906462	0					
ANR	1906475	IdentifierDeclType	HashTable *		1906462	0					
ANR	1906476	Identifier	props		1906462	1					
ANR	1906477	IdentifierDeclStatement	zval rv ;	2081:1:65421:65428	1906462	3	True				
ANR	1906478	IdentifierDecl	rv		1906462	0					
ANR	1906479	IdentifierDeclType	zval		1906462	0					
ANR	1906480	Identifier	rv		1906462	1					
ANR	1906481	IdentifierDeclStatement	zend_string * key ;	2082:1:65431:65447	1906462	4	True				
ANR	1906482	IdentifierDecl	* key		1906462	0					
ANR	1906483	IdentifierDeclType	zend_string *		1906462	0					
ANR	1906484	Identifier	key		1906462	1					
ANR	1906485	IdentifierDeclStatement	zend_ulong num_key ;	2083:1:65450:65468	1906462	5	True				
ANR	1906486	IdentifierDecl	num_key		1906462	0					
ANR	1906487	IdentifierDeclType	zend_ulong		1906462	0					
ANR	1906488	Identifier	num_key		1906462	1					
ANR	1906489	ExpressionStatement	obj = Z_SNMP_P ( object )	2085:1:65472:65494	1906462	6	True				
ANR	1906490	AssignmentExpression	obj = Z_SNMP_P ( object )		1906462	0		=			
ANR	1906491	Identifier	obj		1906462	0					
ANR	1906492	CallExpression	Z_SNMP_P ( object )		1906462	1					
ANR	1906493	Callee	Z_SNMP_P		1906462	0					
ANR	1906494	Identifier	Z_SNMP_P		1906462	0					
ANR	1906495	ArgumentList	object		1906462	1					
ANR	1906496	Argument	object		1906462	0					
ANR	1906497	Identifier	object		1906462	0					
ANR	1906498	ExpressionStatement	props = zend_std_get_properties ( object )	2086:1:65497:65536	1906462	7	True				
ANR	1906499	AssignmentExpression	props = zend_std_get_properties ( object )		1906462	0		=			
ANR	1906500	Identifier	props		1906462	0					
ANR	1906501	CallExpression	zend_std_get_properties ( object )		1906462	1					
ANR	1906502	Callee	zend_std_get_properties		1906462	0					
ANR	1906503	Identifier	zend_std_get_properties		1906462	0					
ANR	1906504	ArgumentList	object		1906462	1					
ANR	1906505	Argument	object		1906462	0					
ANR	1906506	Identifier	object		1906462	0					
ANR	1906507	Statement	ZEND_HASH_FOREACH_KEY_PTR	2088:1:65540:65564	1906462	8	True				
ANR	1906508	Statement	(	2088:26:65565:65565	1906462	9	True				
ANR	1906509	Statement	&	2088:27:65566:65566	1906462	10	True				
ANR	1906510	Statement	php_snmp_properties	2088:28:65567:65585	1906462	11	True				
ANR	1906511	Statement	","	2088:47:65586:65586	1906462	12	True				
ANR	1906512	Statement	num_key	2088:49:65588:65594	1906462	13	True				
ANR	1906513	Statement	","	2088:56:65595:65595	1906462	14	True				
ANR	1906514	Statement	key	2088:58:65597:65599	1906462	15	True				
ANR	1906515	Statement	","	2088:61:65600:65600	1906462	16	True				
ANR	1906516	Statement	hnd	2088:63:65602:65604	1906462	17	True				
ANR	1906517	Statement	)	2088:66:65605:65605	1906462	18	True				
ANR	1906518	CompoundStatement		12:68:259:259	1906462	19					
ANR	1906519	IfStatement	"if ( ! hnd -> read_func || hnd -> read_func ( obj , & rv ) != SUCCESS )"		1906462	0					
ANR	1906520	Condition	"! hnd -> read_func || hnd -> read_func ( obj , & rv ) != SUCCESS"	2089:6:65615:65668	1906462	0	True				
ANR	1906521	OrExpression	"! hnd -> read_func || hnd -> read_func ( obj , & rv ) != SUCCESS"		1906462	0		||			
ANR	1906522	UnaryOperationExpression	! hnd -> read_func		1906462	0					
ANR	1906523	UnaryOperator	!		1906462	0					
ANR	1906524	PtrMemberAccess	hnd -> read_func		1906462	1					
ANR	1906525	Identifier	hnd		1906462	0					
ANR	1906526	Identifier	read_func		1906462	1					
ANR	1906527	EqualityExpression	"hnd -> read_func ( obj , & rv ) != SUCCESS"		1906462	1		!=			
ANR	1906528	CallExpression	"hnd -> read_func ( obj , & rv )"		1906462	0					
ANR	1906529	Callee	hnd -> read_func		1906462	0					
ANR	1906530	PtrMemberAccess	hnd -> read_func		1906462	0					
ANR	1906531	Identifier	hnd		1906462	0					
ANR	1906532	Identifier	read_func		1906462	1					
ANR	1906533	ArgumentList	obj		1906462	1					
ANR	1906534	Argument	obj		1906462	0					
ANR	1906535	Identifier	obj		1906462	0					
ANR	1906536	Argument	& rv		1906462	1					
ANR	1906537	UnaryOperationExpression	& rv		1906462	0					
ANR	1906538	UnaryOperator	&		1906462	0					
ANR	1906539	Identifier	rv		1906462	1					
ANR	1906540	Identifier	SUCCESS		1906462	1					
ANR	1906541	CompoundStatement		13:62:323:323	1906462	1					
ANR	1906542	ExpressionStatement	ZVAL_NULL ( & rv )	2090:3:65676:65690	1906462	0	True				
ANR	1906543	CallExpression	ZVAL_NULL ( & rv )		1906462	0					
ANR	1906544	Callee	ZVAL_NULL		1906462	0					
ANR	1906545	Identifier	ZVAL_NULL		1906462	0					
ANR	1906546	ArgumentList	& rv		1906462	1					
ANR	1906547	Argument	& rv		1906462	0					
ANR	1906548	UnaryOperationExpression	& rv		1906462	0					
ANR	1906549	UnaryOperator	&		1906462	0					
ANR	1906550	Identifier	rv		1906462	1					
ANR	1906551	ExpressionStatement	"zend_hash_update ( props , key , & rv )"	2092:2:65698:65731	1906462	1	True				
ANR	1906552	CallExpression	"zend_hash_update ( props , key , & rv )"		1906462	0					
ANR	1906553	Callee	zend_hash_update		1906462	0					
ANR	1906554	Identifier	zend_hash_update		1906462	0					
ANR	1906555	ArgumentList	props		1906462	1					
ANR	1906556	Argument	props		1906462	0					
ANR	1906557	Identifier	props		1906462	0					
ANR	1906558	Argument	key		1906462	1					
ANR	1906559	Identifier	key		1906462	0					
ANR	1906560	Argument	& rv		1906462	2					
ANR	1906561	UnaryOperationExpression	& rv		1906462	0					
ANR	1906562	UnaryOperator	&		1906462	0					
ANR	1906563	Identifier	rv		1906462	1					
ANR	1906564	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2093:3:65736:65759	1906462	20	True				
ANR	1906565	CallExpression	ZEND_HASH_FOREACH_END ( )		1906462	0					
ANR	1906566	Callee	ZEND_HASH_FOREACH_END		1906462	0					
ANR	1906567	Identifier	ZEND_HASH_FOREACH_END		1906462	0					
ANR	1906568	ArgumentList			1906462	1					
ANR	1906569	ReturnStatement	return obj -> zo . properties ;	2095:1:65763:65788	1906462	21	True				
ANR	1906570	MemberAccess	obj -> zo . properties		1906462	0					
ANR	1906571	PtrMemberAccess	obj -> zo		1906462	0					
ANR	1906572	Identifier	obj		1906462	0					
ANR	1906573	Identifier	zo		1906462	1					
ANR	1906574	Identifier	properties		1906462	1					
ANR	1906575	ReturnType	static HashTable *		1906462	1					
ANR	1906576	Identifier	php_snmp_get_properties		1906462	2					
ANR	1906577	ParameterList	zval * object		1906462	3					
ANR	1906578	Parameter	zval * object	2076:42:65333:65344	1906462	0	True				
ANR	1906579	ParameterType	zval *		1906462	0					
ANR	1906580	Identifier	object		1906462	1					
ANR	1906581	CFGEntryNode	ENTRY		1906462		True				
ANR	1906582	CFGExitNode	EXIT		1906462		True				
ANR	1906583	Symbol	* obj		1906462						
ANR	1906584	Symbol	obj -> zo . properties		1906462						
ANR	1906585	Symbol	SUCCESS		1906462						
ANR	1906586	Symbol	rv		1906462						
ANR	1906587	Symbol	num_key		1906462						
ANR	1906588	Symbol	zend_std_get_properties		1906462						
ANR	1906589	Symbol	props		1906462						
ANR	1906590	Symbol	& rv		1906462						
ANR	1906591	Symbol	hnd -> read_func		1906462						
ANR	1906592	Symbol	obj		1906462						
ANR	1906593	Symbol	* hnd		1906462						
ANR	1906594	Symbol	key		1906462						
ANR	1906595	Symbol	obj -> zo		1906462						
ANR	1906596	Symbol	object		1906462						
ANR	1906597	Symbol	hnd		1906462						
ANR	1906598	Symbol	Z_SNMP_P		1906462						
ANR	1906599	Function	php_snmp_read_info	2100:0:65813:66413							
ANR	1906600	FunctionDef	"php_snmp_read_info (php_snmp_object * snmp_object , zval * retval)"		1906599	0					
ANR	1906601	CompoundStatement		2101:0:65887:66413	1906599	0					
ANR	1906602	IdentifierDeclStatement	zval val ;	2102:1:65890:65898	1906599	0	True				
ANR	1906603	IdentifierDecl	val		1906599	0					
ANR	1906604	IdentifierDeclType	zval		1906599	0					
ANR	1906605	Identifier	val		1906599	1					
ANR	1906606	ExpressionStatement	array_init ( retval )	2104:1:65902:65920	1906599	1	True				
ANR	1906607	CallExpression	array_init ( retval )		1906599	0					
ANR	1906608	Callee	array_init		1906599	0					
ANR	1906609	Identifier	array_init		1906599	0					
ANR	1906610	ArgumentList	retval		1906599	1					
ANR	1906611	Argument	retval		1906599	0					
ANR	1906612	Identifier	retval		1906599	0					
ANR	1906613	IfStatement	if ( snmp_object -> session == NULL )		1906599	2					
ANR	1906614	Condition	snmp_object -> session == NULL	2106:5:65928:65955	1906599	0	True				
ANR	1906615	EqualityExpression	snmp_object -> session == NULL		1906599	0		==			
ANR	1906616	PtrMemberAccess	snmp_object -> session		1906599	0					
ANR	1906617	Identifier	snmp_object		1906599	0					
ANR	1906618	Identifier	session		1906599	1					
ANR	1906619	Identifier	NULL		1906599	1					
ANR	1906620	CompoundStatement		6:35:70:70	1906599	1					
ANR	1906621	ReturnStatement	return SUCCESS ;	2107:2:65962:65976	1906599	0	True				
ANR	1906622	Identifier	SUCCESS		1906599	0					
ANR	1906623	ExpressionStatement	"ZVAL_STRINGL ( & val , snmp_object -> session -> peername , strlen ( snmp_object -> session -> peername ) )"	2110:1:65983:66073	1906599	3	True				
ANR	1906624	CallExpression	"ZVAL_STRINGL ( & val , snmp_object -> session -> peername , strlen ( snmp_object -> session -> peername ) )"		1906599	0					
ANR	1906625	Callee	ZVAL_STRINGL		1906599	0					
ANR	1906626	Identifier	ZVAL_STRINGL		1906599	0					
ANR	1906627	ArgumentList	& val		1906599	1					
ANR	1906628	Argument	& val		1906599	0					
ANR	1906629	UnaryOperationExpression	& val		1906599	0					
ANR	1906630	UnaryOperator	&		1906599	0					
ANR	1906631	Identifier	val		1906599	1					
ANR	1906632	Argument	snmp_object -> session -> peername		1906599	1					
ANR	1906633	PtrMemberAccess	snmp_object -> session -> peername		1906599	0					
ANR	1906634	PtrMemberAccess	snmp_object -> session		1906599	0					
ANR	1906635	Identifier	snmp_object		1906599	0					
ANR	1906636	Identifier	session		1906599	1					
ANR	1906637	Identifier	peername		1906599	1					
ANR	1906638	Argument	strlen ( snmp_object -> session -> peername )		1906599	2					
ANR	1906639	CallExpression	strlen ( snmp_object -> session -> peername )		1906599	0					
ANR	1906640	Callee	strlen		1906599	0					
ANR	1906641	Identifier	strlen		1906599	0					
ANR	1906642	ArgumentList	snmp_object -> session -> peername		1906599	1					
ANR	1906643	Argument	snmp_object -> session -> peername		1906599	0					
ANR	1906644	PtrMemberAccess	snmp_object -> session -> peername		1906599	0					
ANR	1906645	PtrMemberAccess	snmp_object -> session		1906599	0					
ANR	1906646	Identifier	snmp_object		1906599	0					
ANR	1906647	Identifier	session		1906599	1					
ANR	1906648	Identifier	peername		1906599	1					
ANR	1906649	ExpressionStatement	"add_assoc_zval ( retval , ""hostname"" , & val )"	2111:1:66076:66116	1906599	4	True				
ANR	1906650	CallExpression	"add_assoc_zval ( retval , ""hostname"" , & val )"		1906599	0					
ANR	1906651	Callee	add_assoc_zval		1906599	0					
ANR	1906652	Identifier	add_assoc_zval		1906599	0					
ANR	1906653	ArgumentList	retval		1906599	1					
ANR	1906654	Argument	retval		1906599	0					
ANR	1906655	Identifier	retval		1906599	0					
ANR	1906656	Argument	"""hostname"""		1906599	1					
ANR	1906657	PrimaryExpression	"""hostname"""		1906599	0					
ANR	1906658	Argument	& val		1906599	2					
ANR	1906659	UnaryOperationExpression	& val		1906599	0					
ANR	1906660	UnaryOperator	&		1906599	0					
ANR	1906661	Identifier	val		1906599	1					
ANR	1906662	ExpressionStatement	"ZVAL_LONG ( & val , snmp_object -> session -> remote_port )"	2113:1:66120:66170	1906599	5	True				
ANR	1906663	CallExpression	"ZVAL_LONG ( & val , snmp_object -> session -> remote_port )"		1906599	0					
ANR	1906664	Callee	ZVAL_LONG		1906599	0					
ANR	1906665	Identifier	ZVAL_LONG		1906599	0					
ANR	1906666	ArgumentList	& val		1906599	1					
ANR	1906667	Argument	& val		1906599	0					
ANR	1906668	UnaryOperationExpression	& val		1906599	0					
ANR	1906669	UnaryOperator	&		1906599	0					
ANR	1906670	Identifier	val		1906599	1					
ANR	1906671	Argument	snmp_object -> session -> remote_port		1906599	1					
ANR	1906672	PtrMemberAccess	snmp_object -> session -> remote_port		1906599	0					
ANR	1906673	PtrMemberAccess	snmp_object -> session		1906599	0					
ANR	1906674	Identifier	snmp_object		1906599	0					
ANR	1906675	Identifier	session		1906599	1					
ANR	1906676	Identifier	remote_port		1906599	1					
ANR	1906677	ExpressionStatement	"add_assoc_zval ( retval , ""port"" , & val )"	2114:1:66173:66209	1906599	6	True				
ANR	1906678	CallExpression	"add_assoc_zval ( retval , ""port"" , & val )"		1906599	0					
ANR	1906679	Callee	add_assoc_zval		1906599	0					
ANR	1906680	Identifier	add_assoc_zval		1906599	0					
ANR	1906681	ArgumentList	retval		1906599	1					
ANR	1906682	Argument	retval		1906599	0					
ANR	1906683	Identifier	retval		1906599	0					
ANR	1906684	Argument	"""port"""		1906599	1					
ANR	1906685	PrimaryExpression	"""port"""		1906599	0					
ANR	1906686	Argument	& val		1906599	2					
ANR	1906687	UnaryOperationExpression	& val		1906599	0					
ANR	1906688	UnaryOperator	&		1906599	0					
ANR	1906689	Identifier	val		1906599	1					
ANR	1906690	ExpressionStatement	"ZVAL_LONG ( & val , snmp_object -> session -> timeout )"	2116:1:66213:66259	1906599	7	True				
ANR	1906691	CallExpression	"ZVAL_LONG ( & val , snmp_object -> session -> timeout )"		1906599	0					
ANR	1906692	Callee	ZVAL_LONG		1906599	0					
ANR	1906693	Identifier	ZVAL_LONG		1906599	0					
ANR	1906694	ArgumentList	& val		1906599	1					
ANR	1906695	Argument	& val		1906599	0					
ANR	1906696	UnaryOperationExpression	& val		1906599	0					
ANR	1906697	UnaryOperator	&		1906599	0					
ANR	1906698	Identifier	val		1906599	1					
ANR	1906699	Argument	snmp_object -> session -> timeout		1906599	1					
ANR	1906700	PtrMemberAccess	snmp_object -> session -> timeout		1906599	0					
ANR	1906701	PtrMemberAccess	snmp_object -> session		1906599	0					
ANR	1906702	Identifier	snmp_object		1906599	0					
ANR	1906703	Identifier	session		1906599	1					
ANR	1906704	Identifier	timeout		1906599	1					
ANR	1906705	ExpressionStatement	"add_assoc_zval ( retval , ""timeout"" , & val )"	2117:1:66262:66301	1906599	8	True				
ANR	1906706	CallExpression	"add_assoc_zval ( retval , ""timeout"" , & val )"		1906599	0					
ANR	1906707	Callee	add_assoc_zval		1906599	0					
ANR	1906708	Identifier	add_assoc_zval		1906599	0					
ANR	1906709	ArgumentList	retval		1906599	1					
ANR	1906710	Argument	retval		1906599	0					
ANR	1906711	Identifier	retval		1906599	0					
ANR	1906712	Argument	"""timeout"""		1906599	1					
ANR	1906713	PrimaryExpression	"""timeout"""		1906599	0					
ANR	1906714	Argument	& val		1906599	2					
ANR	1906715	UnaryOperationExpression	& val		1906599	0					
ANR	1906716	UnaryOperator	&		1906599	0					
ANR	1906717	Identifier	val		1906599	1					
ANR	1906718	ExpressionStatement	"ZVAL_LONG ( & val , snmp_object -> session -> retries )"	2119:1:66305:66351	1906599	9	True				
ANR	1906719	CallExpression	"ZVAL_LONG ( & val , snmp_object -> session -> retries )"		1906599	0					
ANR	1906720	Callee	ZVAL_LONG		1906599	0					
ANR	1906721	Identifier	ZVAL_LONG		1906599	0					
ANR	1906722	ArgumentList	& val		1906599	1					
ANR	1906723	Argument	& val		1906599	0					
ANR	1906724	UnaryOperationExpression	& val		1906599	0					
ANR	1906725	UnaryOperator	&		1906599	0					
ANR	1906726	Identifier	val		1906599	1					
ANR	1906727	Argument	snmp_object -> session -> retries		1906599	1					
ANR	1906728	PtrMemberAccess	snmp_object -> session -> retries		1906599	0					
ANR	1906729	PtrMemberAccess	snmp_object -> session		1906599	0					
ANR	1906730	Identifier	snmp_object		1906599	0					
ANR	1906731	Identifier	session		1906599	1					
ANR	1906732	Identifier	retries		1906599	1					
ANR	1906733	ExpressionStatement	"add_assoc_zval ( retval , ""retries"" , & val )"	2120:1:66354:66393	1906599	10	True				
ANR	1906734	CallExpression	"add_assoc_zval ( retval , ""retries"" , & val )"		1906599	0					
ANR	1906735	Callee	add_assoc_zval		1906599	0					
ANR	1906736	Identifier	add_assoc_zval		1906599	0					
ANR	1906737	ArgumentList	retval		1906599	1					
ANR	1906738	Argument	retval		1906599	0					
ANR	1906739	Identifier	retval		1906599	0					
ANR	1906740	Argument	"""retries"""		1906599	1					
ANR	1906741	PrimaryExpression	"""retries"""		1906599	0					
ANR	1906742	Argument	& val		1906599	2					
ANR	1906743	UnaryOperationExpression	& val		1906599	0					
ANR	1906744	UnaryOperator	&		1906599	0					
ANR	1906745	Identifier	val		1906599	1					
ANR	1906746	ReturnStatement	return SUCCESS ;	2122:1:66397:66411	1906599	11	True				
ANR	1906747	Identifier	SUCCESS		1906599	0					
ANR	1906748	ReturnType	static int		1906599	1					
ANR	1906749	Identifier	php_snmp_read_info		1906599	2					
ANR	1906750	ParameterList	"php_snmp_object * snmp_object , zval * retval"		1906599	3					
ANR	1906751	Parameter	php_snmp_object * snmp_object	2100:30:65843:65870	1906599	0	True				
ANR	1906752	ParameterType	php_snmp_object *		1906599	0					
ANR	1906753	Identifier	snmp_object		1906599	1					
ANR	1906754	Parameter	zval * retval	2100:60:65873:65884	1906599	1	True				
ANR	1906755	ParameterType	zval *		1906599	0					
ANR	1906756	Identifier	retval		1906599	1					
ANR	1906757	CFGEntryNode	ENTRY		1906599		True				
ANR	1906758	CFGExitNode	EXIT		1906599		True				
ANR	1906759	Symbol	val		1906599						
ANR	1906760	Symbol	& val		1906599						
ANR	1906761	Symbol	snmp_object -> session -> remote_port		1906599						
ANR	1906762	Symbol	snmp_object		1906599						
ANR	1906763	Symbol	NULL		1906599						
ANR	1906764	Symbol	SUCCESS		1906599						
ANR	1906765	Symbol	snmp_object -> session		1906599						
ANR	1906766	Symbol	retval		1906599						
ANR	1906767	Symbol	snmp_object -> session -> peername		1906599						
ANR	1906768	Symbol	strlen		1906599						
ANR	1906769	Symbol	snmp_object -> session -> retries		1906599						
ANR	1906770	Symbol	snmp_object -> session -> timeout		1906599						
ANR	1906771	Symbol	* * snmp_object		1906599						
ANR	1906772	Symbol	* snmp_object		1906599						
ANR	1906773	Symbol	* snmp_object -> session		1906599						
ANR	1906774	Function	php_snmp_read_max_oids	2127:0:66436:66645							
ANR	1906775	FunctionDef	"php_snmp_read_max_oids (php_snmp_object * snmp_object , zval * retval)"		1906774	0					
ANR	1906776	CompoundStatement		2128:0:66514:66645	1906774	0					
ANR	1906777	IfStatement	if ( snmp_object -> max_oids > 0 )		1906774	0					
ANR	1906778	Condition	snmp_object -> max_oids > 0	2129:5:66521:66545	1906774	0	True				
ANR	1906779	RelationalExpression	snmp_object -> max_oids > 0		1906774	0		>			
ANR	1906780	PtrMemberAccess	snmp_object -> max_oids		1906774	0					
ANR	1906781	Identifier	snmp_object		1906774	0					
ANR	1906782	Identifier	max_oids		1906774	1					
ANR	1906783	PrimaryExpression	0		1906774	1					
ANR	1906784	CompoundStatement		2:32:33:33	1906774	1					
ANR	1906785	ExpressionStatement	"ZVAL_LONG ( retval , snmp_object -> max_oids )"	2130:2:66552:66592	1906774	0	True				
ANR	1906786	CallExpression	"ZVAL_LONG ( retval , snmp_object -> max_oids )"		1906774	0					
ANR	1906787	Callee	ZVAL_LONG		1906774	0					
ANR	1906788	Identifier	ZVAL_LONG		1906774	0					
ANR	1906789	ArgumentList	retval		1906774	1					
ANR	1906790	Argument	retval		1906774	0					
ANR	1906791	Identifier	retval		1906774	0					
ANR	1906792	Argument	snmp_object -> max_oids		1906774	1					
ANR	1906793	PtrMemberAccess	snmp_object -> max_oids		1906774	0					
ANR	1906794	Identifier	snmp_object		1906774	0					
ANR	1906795	Identifier	max_oids		1906774	1					
ANR	1906796	ElseStatement	else		1906774	0					
ANR	1906797	CompoundStatement		4:8:87:87	1906774	0					
ANR	1906798	ExpressionStatement	ZVAL_NULL ( retval )	2132:2:66606:66623	1906774	0	True				
ANR	1906799	CallExpression	ZVAL_NULL ( retval )		1906774	0					
ANR	1906800	Callee	ZVAL_NULL		1906774	0					
ANR	1906801	Identifier	ZVAL_NULL		1906774	0					
ANR	1906802	ArgumentList	retval		1906774	1					
ANR	1906803	Argument	retval		1906774	0					
ANR	1906804	Identifier	retval		1906774	0					
ANR	1906805	ReturnStatement	return SUCCESS ;	2134:1:66629:66643	1906774	1	True				
ANR	1906806	Identifier	SUCCESS		1906774	0					
ANR	1906807	ReturnType	static int		1906774	1					
ANR	1906808	Identifier	php_snmp_read_max_oids		1906774	2					
ANR	1906809	ParameterList	"php_snmp_object * snmp_object , zval * retval"		1906774	3					
ANR	1906810	Parameter	php_snmp_object * snmp_object	2127:34:66470:66497	1906774	0	True				
ANR	1906811	ParameterType	php_snmp_object *		1906774	0					
ANR	1906812	Identifier	snmp_object		1906774	1					
ANR	1906813	Parameter	zval * retval	2127:64:66500:66511	1906774	1	True				
ANR	1906814	ParameterType	zval *		1906774	0					
ANR	1906815	Identifier	retval		1906774	1					
ANR	1906816	CFGEntryNode	ENTRY		1906774		True				
ANR	1906817	CFGExitNode	EXIT		1906774		True				
ANR	1906818	Symbol	snmp_object		1906774						
ANR	1906819	Symbol	SUCCESS		1906774						
ANR	1906820	Symbol	snmp_object -> max_oids		1906774						
ANR	1906821	Symbol	* snmp_object		1906774						
ANR	1906822	Symbol	retval		1906774						
ANR	1906823	Function	name	2139:1:66714:66860							
ANR	1906824	FunctionDef	"name (php_snmp_object * snmp_object , zval * retval)"		1906823	0					
ANR	1906825	CompoundStatement		2140:1:66793:66860	1906823	0					
ANR	1906826	ExpressionStatement	"ZVAL_BOOL ( retval , snmp_object -> name )"	2141:2:66799:66835	1906823	0	True				
ANR	1906827	CallExpression	"ZVAL_BOOL ( retval , snmp_object -> name )"		1906823	0					
ANR	1906828	Callee	ZVAL_BOOL		1906823	0					
ANR	1906829	Identifier	ZVAL_BOOL		1906823	0					
ANR	1906830	ArgumentList	retval		1906823	1					
ANR	1906831	Argument	retval		1906823	0					
ANR	1906832	Identifier	retval		1906823	0					
ANR	1906833	Argument	snmp_object -> name		1906823	1					
ANR	1906834	PtrMemberAccess	snmp_object -> name		1906823	0					
ANR	1906835	Identifier	snmp_object		1906823	0					
ANR	1906836	Identifier	name		1906823	1					
ANR	1906837	ReturnStatement	return SUCCESS ;	2142:2:66841:66855	1906823	1	True				
ANR	1906838	Identifier	SUCCESS		1906823	0					
ANR	1906839	ReturnType	static int php_snmp_read_		1906823	1					
ANR	1906840	Identifier	name		1906823	2					
ANR	1906841	ParameterList	"php_snmp_object * snmp_object , zval * retval"		1906823	3					
ANR	1906842	Parameter	php_snmp_object * snmp_object	2139:33:66746:66773	1906823	0	True				
ANR	1906843	ParameterType	php_snmp_object *		1906823	0					
ANR	1906844	Identifier	snmp_object		1906823	1					
ANR	1906845	Parameter	zval * retval	2139:63:66776:66787	1906823	1	True				
ANR	1906846	ParameterType	zval *		1906823	0					
ANR	1906847	Identifier	retval		1906823	1					
ANR	1906848	CFGEntryNode	ENTRY		1906823		True				
ANR	1906849	CFGExitNode	EXIT		1906823		True				
ANR	1906850	Symbol	snmp_object		1906823						
ANR	1906851	Symbol	SUCCESS		1906823						
ANR	1906852	Symbol	snmp_object -> name		1906823						
ANR	1906853	Symbol	* snmp_object		1906823						
ANR	1906854	Symbol	retval		1906823						
ANR	1906855	Function	name	2150:1:67084:67230							
ANR	1906856	FunctionDef	"name (php_snmp_object * snmp_object , zval * retval)"		1906855	0					
ANR	1906857	CompoundStatement		2151:1:67163:67230	1906855	0					
ANR	1906858	ExpressionStatement	"ZVAL_LONG ( retval , snmp_object -> name )"	2152:2:67169:67205	1906855	0	True				
ANR	1906859	CallExpression	"ZVAL_LONG ( retval , snmp_object -> name )"		1906855	0					
ANR	1906860	Callee	ZVAL_LONG		1906855	0					
ANR	1906861	Identifier	ZVAL_LONG		1906855	0					
ANR	1906862	ArgumentList	retval		1906855	1					
ANR	1906863	Argument	retval		1906855	0					
ANR	1906864	Identifier	retval		1906855	0					
ANR	1906865	Argument	snmp_object -> name		1906855	1					
ANR	1906866	PtrMemberAccess	snmp_object -> name		1906855	0					
ANR	1906867	Identifier	snmp_object		1906855	0					
ANR	1906868	Identifier	name		1906855	1					
ANR	1906869	ReturnStatement	return SUCCESS ;	2153:2:67211:67225	1906855	1	True				
ANR	1906870	Identifier	SUCCESS		1906855	0					
ANR	1906871	ReturnType	static int php_snmp_read_		1906855	1					
ANR	1906872	Identifier	name		1906855	2					
ANR	1906873	ParameterList	"php_snmp_object * snmp_object , zval * retval"		1906855	3					
ANR	1906874	Parameter	php_snmp_object * snmp_object	2150:33:67116:67143	1906855	0	True				
ANR	1906875	ParameterType	php_snmp_object *		1906855	0					
ANR	1906876	Identifier	snmp_object		1906855	1					
ANR	1906877	Parameter	zval * retval	2150:63:67146:67157	1906855	1	True				
ANR	1906878	ParameterType	zval *		1906855	0					
ANR	1906879	Identifier	retval		1906855	1					
ANR	1906880	CFGEntryNode	ENTRY		1906855		True				
ANR	1906881	CFGExitNode	EXIT		1906855		True				
ANR	1906882	Symbol	snmp_object		1906855						
ANR	1906883	Symbol	SUCCESS		1906855						
ANR	1906884	Symbol	snmp_object -> name		1906855						
ANR	1906885	Symbol	* snmp_object		1906855						
ANR	1906886	Symbol	retval		1906855						
ANR	1906887	Function	php_snmp_write_info	2161:0:67416:67576							
ANR	1906888	FunctionDef	"php_snmp_write_info (php_snmp_object * snmp_object , zval * newval)"		1906887	0					
ANR	1906889	CompoundStatement		2162:0:67491:67576	1906887	0					
ANR	1906890	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""info property is read-only"" )"	2163:1:67494:67557	1906887	0	True				
ANR	1906891	CallExpression	"php_error_docref ( NULL , E_WARNING , ""info property is read-only"" )"		1906887	0					
ANR	1906892	Callee	php_error_docref		1906887	0					
ANR	1906893	Identifier	php_error_docref		1906887	0					
ANR	1906894	ArgumentList	NULL		1906887	1					
ANR	1906895	Argument	NULL		1906887	0					
ANR	1906896	Identifier	NULL		1906887	0					
ANR	1906897	Argument	E_WARNING		1906887	1					
ANR	1906898	Identifier	E_WARNING		1906887	0					
ANR	1906899	Argument	"""info property is read-only"""		1906887	2					
ANR	1906900	PrimaryExpression	"""info property is read-only"""		1906887	0					
ANR	1906901	ReturnStatement	return FAILURE ;	2164:1:67560:67574	1906887	1	True				
ANR	1906902	Identifier	FAILURE		1906887	0					
ANR	1906903	ReturnType	static int		1906887	1					
ANR	1906904	Identifier	php_snmp_write_info		1906887	2					
ANR	1906905	ParameterList	"php_snmp_object * snmp_object , zval * newval"		1906887	3					
ANR	1906906	Parameter	php_snmp_object * snmp_object	2161:31:67447:67474	1906887	0	True				
ANR	1906907	ParameterType	php_snmp_object *		1906887	0					
ANR	1906908	Identifier	snmp_object		1906887	1					
ANR	1906909	Parameter	zval * newval	2161:61:67477:67488	1906887	1	True				
ANR	1906910	ParameterType	zval *		1906887	0					
ANR	1906911	Identifier	newval		1906887	1					
ANR	1906912	CFGEntryNode	ENTRY		1906887		True				
ANR	1906913	CFGExitNode	EXIT		1906887		True				
ANR	1906914	Symbol	E_WARNING		1906887						
ANR	1906915	Symbol	snmp_object		1906887						
ANR	1906916	Symbol	NULL		1906887						
ANR	1906917	Symbol	newval		1906887						
ANR	1906918	Symbol	FAILURE		1906887						
ANR	1906919	Function	php_snmp_write_max_oids	2169:0:67599:68183							
ANR	1906920	FunctionDef	"php_snmp_write_max_oids (php_snmp_object * snmp_object , zval * newval)"		1906919	0					
ANR	1906921	CompoundStatement		2170:0:67678:68183	1906919	0					
ANR	1906922	IdentifierDeclStatement	zval ztmp ;	2171:1:67681:67690	1906919	0	True				
ANR	1906923	IdentifierDecl	ztmp		1906919	0					
ANR	1906924	IdentifierDeclType	zval		1906919	0					
ANR	1906925	Identifier	ztmp		1906919	1					
ANR	1906926	IdentifierDeclStatement	int ret = SUCCESS ;	2172:1:67693:67710	1906919	1	True				
ANR	1906927	IdentifierDecl	ret = SUCCESS		1906919	0					
ANR	1906928	IdentifierDeclType	int		1906919	0					
ANR	1906929	Identifier	ret		1906919	1					
ANR	1906930	AssignmentExpression	ret = SUCCESS		1906919	2		=			
ANR	1906931	Identifier	SUCCESS		1906919	0					
ANR	1906932	Identifier	SUCCESS		1906919	1					
ANR	1906933	IfStatement	if ( Z_TYPE_P ( newval ) == IS_NULL )		1906919	2					
ANR	1906934	Condition	Z_TYPE_P ( newval ) == IS_NULL	2174:5:67718:67744	1906919	0	True				
ANR	1906935	EqualityExpression	Z_TYPE_P ( newval ) == IS_NULL		1906919	0		==			
ANR	1906936	CallExpression	Z_TYPE_P ( newval )		1906919	0					
ANR	1906937	Callee	Z_TYPE_P		1906919	0					
ANR	1906938	Identifier	Z_TYPE_P		1906919	0					
ANR	1906939	ArgumentList	newval		1906919	1					
ANR	1906940	Argument	newval		1906919	0					
ANR	1906941	Identifier	newval		1906919	0					
ANR	1906942	Identifier	IS_NULL		1906919	1					
ANR	1906943	CompoundStatement		5:34:68:68	1906919	1					
ANR	1906944	ExpressionStatement	snmp_object -> max_oids = 0	2175:2:67751:67776	1906919	0	True				
ANR	1906945	AssignmentExpression	snmp_object -> max_oids = 0		1906919	0		=			
ANR	1906946	PtrMemberAccess	snmp_object -> max_oids		1906919	0					
ANR	1906947	Identifier	snmp_object		1906919	0					
ANR	1906948	Identifier	max_oids		1906919	1					
ANR	1906949	PrimaryExpression	0		1906919	1					
ANR	1906950	ReturnStatement	return ret ;	2176:2:67780:67790	1906919	1	True				
ANR	1906951	Identifier	ret		1906919	0					
ANR	1906952	IfStatement	if ( Z_TYPE_P ( newval ) != IS_LONG )		1906919	3					
ANR	1906953	Condition	Z_TYPE_P ( newval ) != IS_LONG	2179:5:67801:67827	1906919	0	True				
ANR	1906954	EqualityExpression	Z_TYPE_P ( newval ) != IS_LONG		1906919	0		!=			
ANR	1906955	CallExpression	Z_TYPE_P ( newval )		1906919	0					
ANR	1906956	Callee	Z_TYPE_P		1906919	0					
ANR	1906957	Identifier	Z_TYPE_P		1906919	0					
ANR	1906958	ArgumentList	newval		1906919	1					
ANR	1906959	Argument	newval		1906919	0					
ANR	1906960	Identifier	newval		1906919	0					
ANR	1906961	Identifier	IS_LONG		1906919	1					
ANR	1906962	CompoundStatement		10:34:151:151	1906919	1					
ANR	1906963	ExpressionStatement	ztmp = * newval	2180:2:67834:67848	1906919	0	True				
ANR	1906964	AssignmentExpression	ztmp = * newval		1906919	0		=			
ANR	1906965	Identifier	ztmp		1906919	0					
ANR	1906966	UnaryOperationExpression	* newval		1906919	1					
ANR	1906967	UnaryOperator	*		1906919	0					
ANR	1906968	Identifier	newval		1906919	1					
ANR	1906969	ExpressionStatement	zval_copy_ctor ( & ztmp )	2181:2:67852:67873	1906919	1	True				
ANR	1906970	CallExpression	zval_copy_ctor ( & ztmp )		1906919	0					
ANR	1906971	Callee	zval_copy_ctor		1906919	0					
ANR	1906972	Identifier	zval_copy_ctor		1906919	0					
ANR	1906973	ArgumentList	& ztmp		1906919	1					
ANR	1906974	Argument	& ztmp		1906919	0					
ANR	1906975	UnaryOperationExpression	& ztmp		1906919	0					
ANR	1906976	UnaryOperator	&		1906919	0					
ANR	1906977	Identifier	ztmp		1906919	1					
ANR	1906978	ExpressionStatement	convert_to_long ( & ztmp )	2182:2:67877:67899	1906919	2	True				
ANR	1906979	CallExpression	convert_to_long ( & ztmp )		1906919	0					
ANR	1906980	Callee	convert_to_long		1906919	0					
ANR	1906981	Identifier	convert_to_long		1906919	0					
ANR	1906982	ArgumentList	& ztmp		1906919	1					
ANR	1906983	Argument	& ztmp		1906919	0					
ANR	1906984	UnaryOperationExpression	& ztmp		1906919	0					
ANR	1906985	UnaryOperator	&		1906919	0					
ANR	1906986	Identifier	ztmp		1906919	1					
ANR	1906987	ExpressionStatement	newval = & ztmp	2183:2:67903:67917	1906919	3	True				
ANR	1906988	AssignmentExpression	newval = & ztmp		1906919	0		=			
ANR	1906989	Identifier	newval		1906919	0					
ANR	1906990	UnaryOperationExpression	& ztmp		1906919	1					
ANR	1906991	UnaryOperator	&		1906919	0					
ANR	1906992	Identifier	ztmp		1906919	1					
ANR	1906993	IfStatement	if ( Z_LVAL_P ( newval ) > 0 )		1906919	4					
ANR	1906994	Condition	Z_LVAL_P ( newval ) > 0	2186:5:67928:67947	1906919	0	True				
ANR	1906995	RelationalExpression	Z_LVAL_P ( newval ) > 0		1906919	0		>			
ANR	1906996	CallExpression	Z_LVAL_P ( newval )		1906919	0					
ANR	1906997	Callee	Z_LVAL_P		1906919	0					
ANR	1906998	Identifier	Z_LVAL_P		1906919	0					
ANR	1906999	ArgumentList	newval		1906919	1					
ANR	1907000	Argument	newval		1906919	0					
ANR	1907001	Identifier	newval		1906919	0					
ANR	1907002	PrimaryExpression	0		1906919	1					
ANR	1907003	CompoundStatement		17:27:271:271	1906919	1					
ANR	1907004	ExpressionStatement	snmp_object -> max_oids = Z_LVAL_P ( newval )	2187:2:67954:67994	1906919	0	True				
ANR	1907005	AssignmentExpression	snmp_object -> max_oids = Z_LVAL_P ( newval )		1906919	0		=			
ANR	1907006	PtrMemberAccess	snmp_object -> max_oids		1906919	0					
ANR	1907007	Identifier	snmp_object		1906919	0					
ANR	1907008	Identifier	max_oids		1906919	1					
ANR	1907009	CallExpression	Z_LVAL_P ( newval )		1906919	1					
ANR	1907010	Callee	Z_LVAL_P		1906919	0					
ANR	1907011	Identifier	Z_LVAL_P		1906919	0					
ANR	1907012	ArgumentList	newval		1906919	1					
ANR	1907013	Argument	newval		1906919	0					
ANR	1907014	Identifier	newval		1906919	0					
ANR	1907015	ElseStatement	else		1906919	0					
ANR	1907016	CompoundStatement		19:8:325:325	1906919	0					
ANR	1907017	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""max_oids should be positive integer or NULL, got %pd"" , Z_LVAL_P ( newval ) )"	2189:2:68008:68115	1906919	0	True				
ANR	1907018	CallExpression	"php_error_docref ( NULL , E_WARNING , ""max_oids should be positive integer or NULL, got %pd"" , Z_LVAL_P ( newval ) )"		1906919	0					
ANR	1907019	Callee	php_error_docref		1906919	0					
ANR	1907020	Identifier	php_error_docref		1906919	0					
ANR	1907021	ArgumentList	NULL		1906919	1					
ANR	1907022	Argument	NULL		1906919	0					
ANR	1907023	Identifier	NULL		1906919	0					
ANR	1907024	Argument	E_WARNING		1906919	1					
ANR	1907025	Identifier	E_WARNING		1906919	0					
ANR	1907026	Argument	"""max_oids should be positive integer or NULL, got %pd"""		1906919	2					
ANR	1907027	PrimaryExpression	"""max_oids should be positive integer or NULL, got %pd"""		1906919	0					
ANR	1907028	Argument	Z_LVAL_P ( newval )		1906919	3					
ANR	1907029	CallExpression	Z_LVAL_P ( newval )		1906919	0					
ANR	1907030	Callee	Z_LVAL_P		1906919	0					
ANR	1907031	Identifier	Z_LVAL_P		1906919	0					
ANR	1907032	ArgumentList	newval		1906919	1					
ANR	1907033	Argument	newval		1906919	0					
ANR	1907034	Identifier	newval		1906919	0					
ANR	1907035	IfStatement	if ( newval == & ztmp )		1906919	5					
ANR	1907036	Condition	newval == & ztmp	2192:5:68126:68140	1906919	0	True				
ANR	1907037	EqualityExpression	newval == & ztmp		1906919	0		==			
ANR	1907038	Identifier	newval		1906919	0					
ANR	1907039	UnaryOperationExpression	& ztmp		1906919	1					
ANR	1907040	UnaryOperator	&		1906919	0					
ANR	1907041	Identifier	ztmp		1906919	1					
ANR	1907042	CompoundStatement		23:22:464:464	1906919	1					
ANR	1907043	ExpressionStatement	zval_dtor ( newval )	2193:2:68147:68164	1906919	0	True				
ANR	1907044	CallExpression	zval_dtor ( newval )		1906919	0					
ANR	1907045	Callee	zval_dtor		1906919	0					
ANR	1907046	Identifier	zval_dtor		1906919	0					
ANR	1907047	ArgumentList	newval		1906919	1					
ANR	1907048	Argument	newval		1906919	0					
ANR	1907049	Identifier	newval		1906919	0					
ANR	1907050	ReturnStatement	return ret ;	2196:1:68171:68181	1906919	6	True				
ANR	1907051	Identifier	ret		1906919	0					
ANR	1907052	ReturnType	static int		1906919	1					
ANR	1907053	Identifier	php_snmp_write_max_oids		1906919	2					
ANR	1907054	ParameterList	"php_snmp_object * snmp_object , zval * newval"		1906919	3					
ANR	1907055	Parameter	php_snmp_object * snmp_object	2169:35:67634:67661	1906919	0	True				
ANR	1907056	ParameterType	php_snmp_object *		1906919	0					
ANR	1907057	Identifier	snmp_object		1906919	1					
ANR	1907058	Parameter	zval * newval	2169:65:67664:67675	1906919	1	True				
ANR	1907059	ParameterType	zval *		1906919	0					
ANR	1907060	Identifier	newval		1906919	1					
ANR	1907061	CFGEntryNode	ENTRY		1906919		True				
ANR	1907062	CFGExitNode	EXIT		1906919		True				
ANR	1907063	Symbol	ret		1906919						
ANR	1907064	Symbol	snmp_object		1906919						
ANR	1907065	Symbol	SUCCESS		1906919						
ANR	1907066	Symbol	* newval		1906919						
ANR	1907067	Symbol	& ztmp		1906919						
ANR	1907068	Symbol	NULL		1906919						
ANR	1907069	Symbol	ztmp		1906919						
ANR	1907070	Symbol	snmp_object -> max_oids		1906919						
ANR	1907071	Symbol	Z_TYPE_P		1906919						
ANR	1907072	Symbol	Z_LVAL_P		1906919						
ANR	1907073	Symbol	E_WARNING		1906919						
ANR	1907074	Symbol	IS_NULL		1906919						
ANR	1907075	Symbol	IS_LONG		1906919						
ANR	1907076	Symbol	* snmp_object		1906919						
ANR	1907077	Symbol	newval		1906919						
ANR	1907078	Function	php_snmp_write_valueretrieval	2201:0:68206:68805							
ANR	1907079	FunctionDef	"php_snmp_write_valueretrieval (php_snmp_object * snmp_object , zval * newval)"		1907078	0					
ANR	1907080	CompoundStatement		2202:0:68291:68805	1907078	0					
ANR	1907081	IdentifierDeclStatement	zval ztmp ;	2203:1:68294:68303	1907078	0	True				
ANR	1907082	IdentifierDecl	ztmp		1907078	0					
ANR	1907083	IdentifierDeclType	zval		1907078	0					
ANR	1907084	Identifier	ztmp		1907078	1					
ANR	1907085	IdentifierDeclStatement	int ret = SUCCESS ;	2204:1:68306:68323	1907078	1	True				
ANR	1907086	IdentifierDecl	ret = SUCCESS		1907078	0					
ANR	1907087	IdentifierDeclType	int		1907078	0					
ANR	1907088	Identifier	ret		1907078	1					
ANR	1907089	AssignmentExpression	ret = SUCCESS		1907078	2		=			
ANR	1907090	Identifier	SUCCESS		1907078	0					
ANR	1907091	Identifier	SUCCESS		1907078	1					
ANR	1907092	IfStatement	if ( Z_TYPE_P ( newval ) != IS_LONG )		1907078	2					
ANR	1907093	Condition	Z_TYPE_P ( newval ) != IS_LONG	2206:5:68331:68357	1907078	0	True				
ANR	1907094	EqualityExpression	Z_TYPE_P ( newval ) != IS_LONG		1907078	0		!=			
ANR	1907095	CallExpression	Z_TYPE_P ( newval )		1907078	0					
ANR	1907096	Callee	Z_TYPE_P		1907078	0					
ANR	1907097	Identifier	Z_TYPE_P		1907078	0					
ANR	1907098	ArgumentList	newval		1907078	1					
ANR	1907099	Argument	newval		1907078	0					
ANR	1907100	Identifier	newval		1907078	0					
ANR	1907101	Identifier	IS_LONG		1907078	1					
ANR	1907102	CompoundStatement		5:34:68:68	1907078	1					
ANR	1907103	ExpressionStatement	ztmp = * newval	2207:2:68364:68378	1907078	0	True				
ANR	1907104	AssignmentExpression	ztmp = * newval		1907078	0		=			
ANR	1907105	Identifier	ztmp		1907078	0					
ANR	1907106	UnaryOperationExpression	* newval		1907078	1					
ANR	1907107	UnaryOperator	*		1907078	0					
ANR	1907108	Identifier	newval		1907078	1					
ANR	1907109	ExpressionStatement	zval_copy_ctor ( & ztmp )	2208:2:68382:68403	1907078	1	True				
ANR	1907110	CallExpression	zval_copy_ctor ( & ztmp )		1907078	0					
ANR	1907111	Callee	zval_copy_ctor		1907078	0					
ANR	1907112	Identifier	zval_copy_ctor		1907078	0					
ANR	1907113	ArgumentList	& ztmp		1907078	1					
ANR	1907114	Argument	& ztmp		1907078	0					
ANR	1907115	UnaryOperationExpression	& ztmp		1907078	0					
ANR	1907116	UnaryOperator	&		1907078	0					
ANR	1907117	Identifier	ztmp		1907078	1					
ANR	1907118	ExpressionStatement	convert_to_long ( & ztmp )	2209:2:68407:68429	1907078	2	True				
ANR	1907119	CallExpression	convert_to_long ( & ztmp )		1907078	0					
ANR	1907120	Callee	convert_to_long		1907078	0					
ANR	1907121	Identifier	convert_to_long		1907078	0					
ANR	1907122	ArgumentList	& ztmp		1907078	1					
ANR	1907123	Argument	& ztmp		1907078	0					
ANR	1907124	UnaryOperationExpression	& ztmp		1907078	0					
ANR	1907125	UnaryOperator	&		1907078	0					
ANR	1907126	Identifier	ztmp		1907078	1					
ANR	1907127	ExpressionStatement	newval = & ztmp	2210:2:68433:68447	1907078	3	True				
ANR	1907128	AssignmentExpression	newval = & ztmp		1907078	0		=			
ANR	1907129	Identifier	newval		1907078	0					
ANR	1907130	UnaryOperationExpression	& ztmp		1907078	1					
ANR	1907131	UnaryOperator	&		1907078	0					
ANR	1907132	Identifier	ztmp		1907078	1					
ANR	1907133	IfStatement	if ( Z_LVAL_P ( newval ) >= 0 && Z_LVAL_P ( newval ) <= ( SNMP_VALUE_LIBRARY | SNMP_VALUE_PLAIN | SNMP_VALUE_OBJECT ) )		1907078	3					
ANR	1907134	Condition	Z_LVAL_P ( newval ) >= 0 && Z_LVAL_P ( newval ) <= ( SNMP_VALUE_LIBRARY | SNMP_VALUE_PLAIN | SNMP_VALUE_OBJECT )	2213:5:68458:68557	1907078	0	True				
ANR	1907135	AndExpression	Z_LVAL_P ( newval ) >= 0 && Z_LVAL_P ( newval ) <= ( SNMP_VALUE_LIBRARY | SNMP_VALUE_PLAIN | SNMP_VALUE_OBJECT )		1907078	0		&&			
ANR	1907136	RelationalExpression	Z_LVAL_P ( newval ) >= 0		1907078	0		>=			
ANR	1907137	CallExpression	Z_LVAL_P ( newval )		1907078	0					
ANR	1907138	Callee	Z_LVAL_P		1907078	0					
ANR	1907139	Identifier	Z_LVAL_P		1907078	0					
ANR	1907140	ArgumentList	newval		1907078	1					
ANR	1907141	Argument	newval		1907078	0					
ANR	1907142	Identifier	newval		1907078	0					
ANR	1907143	PrimaryExpression	0		1907078	1					
ANR	1907144	RelationalExpression	Z_LVAL_P ( newval ) <= ( SNMP_VALUE_LIBRARY | SNMP_VALUE_PLAIN | SNMP_VALUE_OBJECT )		1907078	1		<=			
ANR	1907145	CallExpression	Z_LVAL_P ( newval )		1907078	0					
ANR	1907146	Callee	Z_LVAL_P		1907078	0					
ANR	1907147	Identifier	Z_LVAL_P		1907078	0					
ANR	1907148	ArgumentList	newval		1907078	1					
ANR	1907149	Argument	newval		1907078	0					
ANR	1907150	Identifier	newval		1907078	0					
ANR	1907151	InclusiveOrExpression	SNMP_VALUE_LIBRARY | SNMP_VALUE_PLAIN | SNMP_VALUE_OBJECT		1907078	1		|			
ANR	1907152	Identifier	SNMP_VALUE_LIBRARY		1907078	0					
ANR	1907153	InclusiveOrExpression	SNMP_VALUE_PLAIN | SNMP_VALUE_OBJECT		1907078	1		|			
ANR	1907154	Identifier	SNMP_VALUE_PLAIN		1907078	0					
ANR	1907155	Identifier	SNMP_VALUE_OBJECT		1907078	1					
ANR	1907156	CompoundStatement		12:107:268:268	1907078	1					
ANR	1907157	ExpressionStatement	snmp_object -> valueretrieval = Z_LVAL_P ( newval )	2214:2:68564:68610	1907078	0	True				
ANR	1907158	AssignmentExpression	snmp_object -> valueretrieval = Z_LVAL_P ( newval )		1907078	0		=			
ANR	1907159	PtrMemberAccess	snmp_object -> valueretrieval		1907078	0					
ANR	1907160	Identifier	snmp_object		1907078	0					
ANR	1907161	Identifier	valueretrieval		1907078	1					
ANR	1907162	CallExpression	Z_LVAL_P ( newval )		1907078	1					
ANR	1907163	Callee	Z_LVAL_P		1907078	0					
ANR	1907164	Identifier	Z_LVAL_P		1907078	0					
ANR	1907165	ArgumentList	newval		1907078	1					
ANR	1907166	Argument	newval		1907078	0					
ANR	1907167	Identifier	newval		1907078	0					
ANR	1907168	ElseStatement	else		1907078	0					
ANR	1907169	CompoundStatement		14:8:328:328	1907078	0					
ANR	1907170	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown SNMP value retrieval method '%pd'"" , Z_LVAL_P ( newval ) )"	2216:2:68624:68720	1907078	0	True				
ANR	1907171	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown SNMP value retrieval method '%pd'"" , Z_LVAL_P ( newval ) )"		1907078	0					
ANR	1907172	Callee	php_error_docref		1907078	0					
ANR	1907173	Identifier	php_error_docref		1907078	0					
ANR	1907174	ArgumentList	NULL		1907078	1					
ANR	1907175	Argument	NULL		1907078	0					
ANR	1907176	Identifier	NULL		1907078	0					
ANR	1907177	Argument	E_WARNING		1907078	1					
ANR	1907178	Identifier	E_WARNING		1907078	0					
ANR	1907179	Argument	"""Unknown SNMP value retrieval method '%pd'"""		1907078	2					
ANR	1907180	PrimaryExpression	"""Unknown SNMP value retrieval method '%pd'"""		1907078	0					
ANR	1907181	Argument	Z_LVAL_P ( newval )		1907078	3					
ANR	1907182	CallExpression	Z_LVAL_P ( newval )		1907078	0					
ANR	1907183	Callee	Z_LVAL_P		1907078	0					
ANR	1907184	Identifier	Z_LVAL_P		1907078	0					
ANR	1907185	ArgumentList	newval		1907078	1					
ANR	1907186	Argument	newval		1907078	0					
ANR	1907187	Identifier	newval		1907078	0					
ANR	1907188	ExpressionStatement	ret = FAILURE	2217:2:68724:68737	1907078	1	True				
ANR	1907189	AssignmentExpression	ret = FAILURE		1907078	0		=			
ANR	1907190	Identifier	ret		1907078	0					
ANR	1907191	Identifier	FAILURE		1907078	1					
ANR	1907192	IfStatement	if ( newval == & ztmp )		1907078	4					
ANR	1907193	Condition	newval == & ztmp	2220:5:68748:68762	1907078	0	True				
ANR	1907194	EqualityExpression	newval == & ztmp		1907078	0		==			
ANR	1907195	Identifier	newval		1907078	0					
ANR	1907196	UnaryOperationExpression	& ztmp		1907078	1					
ANR	1907197	UnaryOperator	&		1907078	0					
ANR	1907198	Identifier	ztmp		1907078	1					
ANR	1907199	CompoundStatement		19:22:473:473	1907078	1					
ANR	1907200	ExpressionStatement	zval_dtor ( newval )	2221:2:68769:68786	1907078	0	True				
ANR	1907201	CallExpression	zval_dtor ( newval )		1907078	0					
ANR	1907202	Callee	zval_dtor		1907078	0					
ANR	1907203	Identifier	zval_dtor		1907078	0					
ANR	1907204	ArgumentList	newval		1907078	1					
ANR	1907205	Argument	newval		1907078	0					
ANR	1907206	Identifier	newval		1907078	0					
ANR	1907207	ReturnStatement	return ret ;	2224:1:68793:68803	1907078	5	True				
ANR	1907208	Identifier	ret		1907078	0					
ANR	1907209	ReturnType	static int		1907078	1					
ANR	1907210	Identifier	php_snmp_write_valueretrieval		1907078	2					
ANR	1907211	ParameterList	"php_snmp_object * snmp_object , zval * newval"		1907078	3					
ANR	1907212	Parameter	php_snmp_object * snmp_object	2201:41:68247:68274	1907078	0	True				
ANR	1907213	ParameterType	php_snmp_object *		1907078	0					
ANR	1907214	Identifier	snmp_object		1907078	1					
ANR	1907215	Parameter	zval * newval	2201:71:68277:68288	1907078	1	True				
ANR	1907216	ParameterType	zval *		1907078	0					
ANR	1907217	Identifier	newval		1907078	1					
ANR	1907218	CFGEntryNode	ENTRY		1907078		True				
ANR	1907219	CFGExitNode	EXIT		1907078		True				
ANR	1907220	Symbol	ret		1907078						
ANR	1907221	Symbol	snmp_object -> valueretrieval		1907078						
ANR	1907222	Symbol	snmp_object		1907078						
ANR	1907223	Symbol	SNMP_VALUE_OBJECT		1907078						
ANR	1907224	Symbol	SUCCESS		1907078						
ANR	1907225	Symbol	* newval		1907078						
ANR	1907226	Symbol	& ztmp		1907078						
ANR	1907227	Symbol	NULL		1907078						
ANR	1907228	Symbol	ztmp		1907078						
ANR	1907229	Symbol	SNMP_VALUE_LIBRARY		1907078						
ANR	1907230	Symbol	SNMP_VALUE_PLAIN		1907078						
ANR	1907231	Symbol	Z_TYPE_P		1907078						
ANR	1907232	Symbol	FAILURE		1907078						
ANR	1907233	Symbol	Z_LVAL_P		1907078						
ANR	1907234	Symbol	E_WARNING		1907078						
ANR	1907235	Symbol	IS_LONG		1907078						
ANR	1907236	Symbol	* snmp_object		1907078						
ANR	1907237	Symbol	newval		1907078						
ANR	1907238	Function	name	2229:0:68873:69130							
ANR	1907239	FunctionDef	"name (php_snmp_object * snmp_object , zval * newval)"		1907238	0					
ANR	1907240	CompoundStatement		2230:0:68952:69130	1907238	0					
ANR	1907241	IdentifierDeclStatement	zval ztmp ;	2231:1:68957:68966	1907238	0	True				
ANR	1907242	IdentifierDecl	ztmp		1907238	0					
ANR	1907243	IdentifierDeclType	zval		1907238	0					
ANR	1907244	Identifier	ztmp		1907238	1					
ANR	1907245	ExpressionStatement	"ZVAL_COPY ( & ztmp , newval )"	2232:1:68971:68995	1907238	1	True				
ANR	1907246	CallExpression	"ZVAL_COPY ( & ztmp , newval )"		1907238	0					
ANR	1907247	Callee	ZVAL_COPY		1907238	0					
ANR	1907248	Identifier	ZVAL_COPY		1907238	0					
ANR	1907249	ArgumentList	& ztmp		1907238	1					
ANR	1907250	Argument	& ztmp		1907238	0					
ANR	1907251	UnaryOperationExpression	& ztmp		1907238	0					
ANR	1907252	UnaryOperator	&		1907238	0					
ANR	1907253	Identifier	ztmp		1907238	1					
ANR	1907254	Argument	newval		1907238	1					
ANR	1907255	Identifier	newval		1907238	0					
ANR	1907256	ExpressionStatement	convert_to_boolean ( & ztmp )	2233:1:69000:69025	1907238	2	True				
ANR	1907257	CallExpression	convert_to_boolean ( & ztmp )		1907238	0					
ANR	1907258	Callee	convert_to_boolean		1907238	0					
ANR	1907259	Identifier	convert_to_boolean		1907238	0					
ANR	1907260	ArgumentList	& ztmp		1907238	1					
ANR	1907261	Argument	& ztmp		1907238	0					
ANR	1907262	UnaryOperationExpression	& ztmp		1907238	0					
ANR	1907263	UnaryOperator	&		1907238	0					
ANR	1907264	Identifier	ztmp		1907238	1					
ANR	1907265	ExpressionStatement	newval = & ztmp	2234:1:69030:69044	1907238	3	True				
ANR	1907266	AssignmentExpression	newval = & ztmp		1907238	0		=			
ANR	1907267	Identifier	newval		1907238	0					
ANR	1907268	UnaryOperationExpression	& ztmp		1907238	1					
ANR	1907269	UnaryOperator	&		1907238	0					
ANR	1907270	Identifier	ztmp		1907238	1					
ANR	1907271	ExpressionStatement	snmp_object -> name = Z_TYPE_P ( newval ) == IS_TRUE ? 1 : 0	2236:1:69051:69105	1907238	4	True				
ANR	1907272	AssignmentExpression	snmp_object -> name = Z_TYPE_P ( newval ) == IS_TRUE ? 1 : 0		1907238	0		=			
ANR	1907273	PtrMemberAccess	snmp_object -> name		1907238	0					
ANR	1907274	Identifier	snmp_object		1907238	0					
ANR	1907275	Identifier	name		1907238	1					
ANR	1907276	ConditionalExpression	Z_TYPE_P ( newval ) == IS_TRUE ? 1 : 0		1907238	1					
ANR	1907277	Condition	Z_TYPE_P ( newval ) == IS_TRUE		1907238	0					
ANR	1907278	EqualityExpression	Z_TYPE_P ( newval ) == IS_TRUE		1907238	0		==			
ANR	1907279	CallExpression	Z_TYPE_P ( newval )		1907238	0					
ANR	1907280	Callee	Z_TYPE_P		1907238	0					
ANR	1907281	Identifier	Z_TYPE_P		1907238	0					
ANR	1907282	ArgumentList	newval		1907238	1					
ANR	1907283	Argument	newval		1907238	0					
ANR	1907284	Identifier	newval		1907238	0					
ANR	1907285	Identifier	IS_TRUE		1907238	1					
ANR	1907286	PrimaryExpression	1		1907238	1					
ANR	1907287	PrimaryExpression	0		1907238	2					
ANR	1907288	ReturnStatement	return SUCCESS ;	2238:1:69112:69126	1907238	5	True				
ANR	1907289	Identifier	SUCCESS		1907238	0					
ANR	1907290	ReturnType	static int php_snmp_write_		1907238	1					
ANR	1907291	Identifier	name		1907238	2					
ANR	1907292	ParameterList	"php_snmp_object * snmp_object , zval * newval"		1907238	3					
ANR	1907293	Parameter	php_snmp_object * snmp_object	2229:33:68906:68933	1907238	0	True				
ANR	1907294	ParameterType	php_snmp_object *		1907238	0					
ANR	1907295	Identifier	snmp_object		1907238	1					
ANR	1907296	Parameter	zval * newval	2229:63:68936:68947	1907238	1	True				
ANR	1907297	ParameterType	zval *		1907238	0					
ANR	1907298	Identifier	newval		1907238	1					
ANR	1907299	CFGEntryNode	ENTRY		1907238		True				
ANR	1907300	CFGExitNode	EXIT		1907238		True				
ANR	1907301	Symbol	snmp_object		1907238						
ANR	1907302	Symbol	& ztmp		1907238						
ANR	1907303	Symbol	SUCCESS		1907238						
ANR	1907304	Symbol	ztmp		1907238						
ANR	1907305	Symbol	snmp_object -> name		1907238						
ANR	1907306	Symbol	IS_TRUE		1907238						
ANR	1907307	Symbol	Z_TYPE_P		1907238						
ANR	1907308	Symbol	* snmp_object		1907238						
ANR	1907309	Symbol	newval		1907238						
ANR	1907310	Function	php_snmp_write_oid_output_format	2246:0:69308:70038							
ANR	1907311	FunctionDef	"php_snmp_write_oid_output_format (php_snmp_object * snmp_object , zval * newval)"		1907310	0					
ANR	1907312	CompoundStatement		2247:0:69396:70038	1907310	0					
ANR	1907313	IdentifierDeclStatement	zval ztmp ;	2248:1:69399:69408	1907310	0	True				
ANR	1907314	IdentifierDecl	ztmp		1907310	0					
ANR	1907315	IdentifierDeclType	zval		1907310	0					
ANR	1907316	Identifier	ztmp		1907310	1					
ANR	1907317	IdentifierDeclStatement	int ret = SUCCESS ;	2249:1:69411:69428	1907310	1	True				
ANR	1907318	IdentifierDecl	ret = SUCCESS		1907310	0					
ANR	1907319	IdentifierDeclType	int		1907310	0					
ANR	1907320	Identifier	ret		1907310	1					
ANR	1907321	AssignmentExpression	ret = SUCCESS		1907310	2		=			
ANR	1907322	Identifier	SUCCESS		1907310	0					
ANR	1907323	Identifier	SUCCESS		1907310	1					
ANR	1907324	IfStatement	if ( Z_TYPE_P ( newval ) != IS_LONG )		1907310	2					
ANR	1907325	Condition	Z_TYPE_P ( newval ) != IS_LONG	2250:5:69435:69461	1907310	0	True				
ANR	1907326	EqualityExpression	Z_TYPE_P ( newval ) != IS_LONG		1907310	0		!=			
ANR	1907327	CallExpression	Z_TYPE_P ( newval )		1907310	0					
ANR	1907328	Callee	Z_TYPE_P		1907310	0					
ANR	1907329	Identifier	Z_TYPE_P		1907310	0					
ANR	1907330	ArgumentList	newval		1907310	1					
ANR	1907331	Argument	newval		1907310	0					
ANR	1907332	Identifier	newval		1907310	0					
ANR	1907333	Identifier	IS_LONG		1907310	1					
ANR	1907334	CompoundStatement		4:34:67:67	1907310	1					
ANR	1907335	ExpressionStatement	"ZVAL_COPY ( & ztmp , newval )"	2251:2:69468:69492	1907310	0	True				
ANR	1907336	CallExpression	"ZVAL_COPY ( & ztmp , newval )"		1907310	0					
ANR	1907337	Callee	ZVAL_COPY		1907310	0					
ANR	1907338	Identifier	ZVAL_COPY		1907310	0					
ANR	1907339	ArgumentList	& ztmp		1907310	1					
ANR	1907340	Argument	& ztmp		1907310	0					
ANR	1907341	UnaryOperationExpression	& ztmp		1907310	0					
ANR	1907342	UnaryOperator	&		1907310	0					
ANR	1907343	Identifier	ztmp		1907310	1					
ANR	1907344	Argument	newval		1907310	1					
ANR	1907345	Identifier	newval		1907310	0					
ANR	1907346	ExpressionStatement	convert_to_long ( & ztmp )	2252:2:69496:69518	1907310	1	True				
ANR	1907347	CallExpression	convert_to_long ( & ztmp )		1907310	0					
ANR	1907348	Callee	convert_to_long		1907310	0					
ANR	1907349	Identifier	convert_to_long		1907310	0					
ANR	1907350	ArgumentList	& ztmp		1907310	1					
ANR	1907351	Argument	& ztmp		1907310	0					
ANR	1907352	UnaryOperationExpression	& ztmp		1907310	0					
ANR	1907353	UnaryOperator	&		1907310	0					
ANR	1907354	Identifier	ztmp		1907310	1					
ANR	1907355	ExpressionStatement	newval = & ztmp	2253:2:69522:69536	1907310	2	True				
ANR	1907356	AssignmentExpression	newval = & ztmp		1907310	0		=			
ANR	1907357	Identifier	newval		1907310	0					
ANR	1907358	UnaryOperationExpression	& ztmp		1907310	1					
ANR	1907359	UnaryOperator	&		1907310	0					
ANR	1907360	Identifier	ztmp		1907310	1					
ANR	1907361	SwitchStatement	switch ( Z_LVAL_P ( newval ) )		1907310	3					
ANR	1907362	Condition	Z_LVAL_P ( newval )	2256:8:69550:69565	1907310	0	True				
ANR	1907363	CallExpression	Z_LVAL_P ( newval )		1907310	0					
ANR	1907364	Callee	Z_LVAL_P		1907310	0					
ANR	1907365	Identifier	Z_LVAL_P		1907310	0					
ANR	1907366	ArgumentList	newval		1907310	1					
ANR	1907367	Argument	newval		1907310	0					
ANR	1907368	Identifier	newval		1907310	0					
ANR	1907369	CompoundStatement		10:26:171:171	1907310	1					
ANR	1907370	Label	case NETSNMP_OID_OUTPUT_SUFFIX :	2257:2:69572:69602	1907310	0	True				
ANR	1907371	Identifier	NETSNMP_OID_OUTPUT_SUFFIX		1907310	0					
ANR	1907372	Label	case NETSNMP_OID_OUTPUT_MODULE :	2258:2:69606:69636	1907310	1	True				
ANR	1907373	Identifier	NETSNMP_OID_OUTPUT_MODULE		1907310	0					
ANR	1907374	Label	case NETSNMP_OID_OUTPUT_FULL :	2259:2:69640:69668	1907310	2	True				
ANR	1907375	Identifier	NETSNMP_OID_OUTPUT_FULL		1907310	0					
ANR	1907376	Label	case NETSNMP_OID_OUTPUT_NUMERIC :	2260:2:69672:69703	1907310	3	True				
ANR	1907377	Identifier	NETSNMP_OID_OUTPUT_NUMERIC		1907310	0					
ANR	1907378	Label	case NETSNMP_OID_OUTPUT_UCD :	2261:2:69707:69734	1907310	4	True				
ANR	1907379	Identifier	NETSNMP_OID_OUTPUT_UCD		1907310	0					
ANR	1907380	Label	case NETSNMP_OID_OUTPUT_NONE :	2262:2:69738:69766	1907310	5	True				
ANR	1907381	Identifier	NETSNMP_OID_OUTPUT_NONE		1907310	0					
ANR	1907382	ExpressionStatement	snmp_object -> oid_output_format = Z_LVAL_P ( newval )	2263:3:69771:69820	1907310	6	True				
ANR	1907383	AssignmentExpression	snmp_object -> oid_output_format = Z_LVAL_P ( newval )		1907310	0		=			
ANR	1907384	PtrMemberAccess	snmp_object -> oid_output_format		1907310	0					
ANR	1907385	Identifier	snmp_object		1907310	0					
ANR	1907386	Identifier	oid_output_format		1907310	1					
ANR	1907387	CallExpression	Z_LVAL_P ( newval )		1907310	1					
ANR	1907388	Callee	Z_LVAL_P		1907310	0					
ANR	1907389	Identifier	Z_LVAL_P		1907310	0					
ANR	1907390	ArgumentList	newval		1907310	1					
ANR	1907391	Argument	newval		1907310	0					
ANR	1907392	Identifier	newval		1907310	0					
ANR	1907393	BreakStatement	break ;	2264:3:69825:69830	1907310	7	True				
ANR	1907394	Label	default :	2265:2:69834:69841	1907310	8	True				
ANR	1907395	Identifier	default		1907310	0					
ANR	1907396	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown SNMP output print format '%pd'"" , Z_LVAL_P ( newval ) )"	2266:3:69846:69939	1907310	9	True				
ANR	1907397	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown SNMP output print format '%pd'"" , Z_LVAL_P ( newval ) )"		1907310	0					
ANR	1907398	Callee	php_error_docref		1907310	0					
ANR	1907399	Identifier	php_error_docref		1907310	0					
ANR	1907400	ArgumentList	NULL		1907310	1					
ANR	1907401	Argument	NULL		1907310	0					
ANR	1907402	Identifier	NULL		1907310	0					
ANR	1907403	Argument	E_WARNING		1907310	1					
ANR	1907404	Identifier	E_WARNING		1907310	0					
ANR	1907405	Argument	"""Unknown SNMP output print format '%pd'"""		1907310	2					
ANR	1907406	PrimaryExpression	"""Unknown SNMP output print format '%pd'"""		1907310	0					
ANR	1907407	Argument	Z_LVAL_P ( newval )		1907310	3					
ANR	1907408	CallExpression	Z_LVAL_P ( newval )		1907310	0					
ANR	1907409	Callee	Z_LVAL_P		1907310	0					
ANR	1907410	Identifier	Z_LVAL_P		1907310	0					
ANR	1907411	ArgumentList	newval		1907310	1					
ANR	1907412	Argument	newval		1907310	0					
ANR	1907413	Identifier	newval		1907310	0					
ANR	1907414	ExpressionStatement	ret = FAILURE	2267:3:69944:69957	1907310	10	True				
ANR	1907415	AssignmentExpression	ret = FAILURE		1907310	0		=			
ANR	1907416	Identifier	ret		1907310	0					
ANR	1907417	Identifier	FAILURE		1907310	1					
ANR	1907418	BreakStatement	break ;	2268:3:69962:69967	1907310	11	True				
ANR	1907419	IfStatement	if ( newval == & ztmp )		1907310	4					
ANR	1907420	Condition	newval == & ztmp	2271:5:69978:69992	1907310	0	True				
ANR	1907421	EqualityExpression	newval == & ztmp		1907310	0		==			
ANR	1907422	Identifier	newval		1907310	0					
ANR	1907423	UnaryOperationExpression	& ztmp		1907310	1					
ANR	1907424	UnaryOperator	&		1907310	0					
ANR	1907425	Identifier	ztmp		1907310	1					
ANR	1907426	CompoundStatement		25:22:598:598	1907310	1					
ANR	1907427	ExpressionStatement	zval_ptr_dtor ( newval )	2272:2:69999:70020	1907310	0	True				
ANR	1907428	CallExpression	zval_ptr_dtor ( newval )		1907310	0					
ANR	1907429	Callee	zval_ptr_dtor		1907310	0					
ANR	1907430	Identifier	zval_ptr_dtor		1907310	0					
ANR	1907431	ArgumentList	newval		1907310	1					
ANR	1907432	Argument	newval		1907310	0					
ANR	1907433	Identifier	newval		1907310	0					
ANR	1907434	ReturnStatement	return ret ;	2274:1:70026:70036	1907310	5	True				
ANR	1907435	Identifier	ret		1907310	0					
ANR	1907436	ReturnType	static int		1907310	1					
ANR	1907437	Identifier	php_snmp_write_oid_output_format		1907310	2					
ANR	1907438	ParameterList	"php_snmp_object * snmp_object , zval * newval"		1907310	3					
ANR	1907439	Parameter	php_snmp_object * snmp_object	2246:44:69352:69379	1907310	0	True				
ANR	1907440	ParameterType	php_snmp_object *		1907310	0					
ANR	1907441	Identifier	snmp_object		1907310	1					
ANR	1907442	Parameter	zval * newval	2246:74:69382:69393	1907310	1	True				
ANR	1907443	ParameterType	zval *		1907310	0					
ANR	1907444	Identifier	newval		1907310	1					
ANR	1907445	CFGEntryNode	ENTRY		1907310		True				
ANR	1907446	CFGExitNode	EXIT		1907310		True				
ANR	1907447	Symbol	ret		1907310						
ANR	1907448	Symbol	snmp_object		1907310						
ANR	1907449	Symbol	SUCCESS		1907310						
ANR	1907450	Symbol	& ztmp		1907310						
ANR	1907451	Symbol	NULL		1907310						
ANR	1907452	Symbol	ztmp		1907310						
ANR	1907453	Symbol	Z_TYPE_P		1907310						
ANR	1907454	Symbol	FAILURE		1907310						
ANR	1907455	Symbol	Z_LVAL_P		1907310						
ANR	1907456	Symbol	E_WARNING		1907310						
ANR	1907457	Symbol	IS_LONG		1907310						
ANR	1907458	Symbol	snmp_object -> oid_output_format		1907310						
ANR	1907459	Symbol	* snmp_object		1907310						
ANR	1907460	Symbol	newval		1907310						
ANR	1907461	Function	php_snmp_write_exceptions_enabled	2279:0:70061:70415							
ANR	1907462	FunctionDef	"php_snmp_write_exceptions_enabled (php_snmp_object * snmp_object , zval * newval)"		1907461	0					
ANR	1907463	CompoundStatement		2280:0:70150:70415	1907461	0					
ANR	1907464	IdentifierDeclStatement	zval ztmp ;	2281:1:70153:70162	1907461	0	True				
ANR	1907465	IdentifierDecl	ztmp		1907461	0					
ANR	1907466	IdentifierDeclType	zval		1907461	0					
ANR	1907467	Identifier	ztmp		1907461	1					
ANR	1907468	IdentifierDeclStatement	int ret = SUCCESS ;	2282:1:70165:70182	1907461	1	True				
ANR	1907469	IdentifierDecl	ret = SUCCESS		1907461	0					
ANR	1907470	IdentifierDeclType	int		1907461	0					
ANR	1907471	Identifier	ret		1907461	1					
ANR	1907472	AssignmentExpression	ret = SUCCESS		1907461	2		=			
ANR	1907473	Identifier	SUCCESS		1907461	0					
ANR	1907474	Identifier	SUCCESS		1907461	1					
ANR	1907475	IfStatement	if ( Z_TYPE_P ( newval ) != IS_LONG )		1907461	2					
ANR	1907476	Condition	Z_TYPE_P ( newval ) != IS_LONG	2283:5:70189:70215	1907461	0	True				
ANR	1907477	EqualityExpression	Z_TYPE_P ( newval ) != IS_LONG		1907461	0		!=			
ANR	1907478	CallExpression	Z_TYPE_P ( newval )		1907461	0					
ANR	1907479	Callee	Z_TYPE_P		1907461	0					
ANR	1907480	Identifier	Z_TYPE_P		1907461	0					
ANR	1907481	ArgumentList	newval		1907461	1					
ANR	1907482	Argument	newval		1907461	0					
ANR	1907483	Identifier	newval		1907461	0					
ANR	1907484	Identifier	IS_LONG		1907461	1					
ANR	1907485	CompoundStatement		4:34:67:67	1907461	1					
ANR	1907486	ExpressionStatement	"ZVAL_COPY ( & ztmp , newval )"	2284:2:70222:70246	1907461	0	True				
ANR	1907487	CallExpression	"ZVAL_COPY ( & ztmp , newval )"		1907461	0					
ANR	1907488	Callee	ZVAL_COPY		1907461	0					
ANR	1907489	Identifier	ZVAL_COPY		1907461	0					
ANR	1907490	ArgumentList	& ztmp		1907461	1					
ANR	1907491	Argument	& ztmp		1907461	0					
ANR	1907492	UnaryOperationExpression	& ztmp		1907461	0					
ANR	1907493	UnaryOperator	&		1907461	0					
ANR	1907494	Identifier	ztmp		1907461	1					
ANR	1907495	Argument	newval		1907461	1					
ANR	1907496	Identifier	newval		1907461	0					
ANR	1907497	ExpressionStatement	convert_to_long ( & ztmp )	2285:2:70250:70272	1907461	1	True				
ANR	1907498	CallExpression	convert_to_long ( & ztmp )		1907461	0					
ANR	1907499	Callee	convert_to_long		1907461	0					
ANR	1907500	Identifier	convert_to_long		1907461	0					
ANR	1907501	ArgumentList	& ztmp		1907461	1					
ANR	1907502	Argument	& ztmp		1907461	0					
ANR	1907503	UnaryOperationExpression	& ztmp		1907461	0					
ANR	1907504	UnaryOperator	&		1907461	0					
ANR	1907505	Identifier	ztmp		1907461	1					
ANR	1907506	ExpressionStatement	newval = & ztmp	2286:2:70276:70290	1907461	2	True				
ANR	1907507	AssignmentExpression	newval = & ztmp		1907461	0		=			
ANR	1907508	Identifier	newval		1907461	0					
ANR	1907509	UnaryOperationExpression	& ztmp		1907461	1					
ANR	1907510	UnaryOperator	&		1907461	0					
ANR	1907511	Identifier	ztmp		1907461	1					
ANR	1907512	ExpressionStatement	snmp_object -> exceptions_enabled = Z_LVAL_P ( newval )	2289:1:70297:70347	1907461	3	True				
ANR	1907513	AssignmentExpression	snmp_object -> exceptions_enabled = Z_LVAL_P ( newval )		1907461	0		=			
ANR	1907514	PtrMemberAccess	snmp_object -> exceptions_enabled		1907461	0					
ANR	1907515	Identifier	snmp_object		1907461	0					
ANR	1907516	Identifier	exceptions_enabled		1907461	1					
ANR	1907517	CallExpression	Z_LVAL_P ( newval )		1907461	1					
ANR	1907518	Callee	Z_LVAL_P		1907461	0					
ANR	1907519	Identifier	Z_LVAL_P		1907461	0					
ANR	1907520	ArgumentList	newval		1907461	1					
ANR	1907521	Argument	newval		1907461	0					
ANR	1907522	Identifier	newval		1907461	0					
ANR	1907523	IfStatement	if ( newval == & ztmp )		1907461	4					
ANR	1907524	Condition	newval == & ztmp	2291:5:70355:70369	1907461	0	True				
ANR	1907525	EqualityExpression	newval == & ztmp		1907461	0		==			
ANR	1907526	Identifier	newval		1907461	0					
ANR	1907527	UnaryOperationExpression	& ztmp		1907461	1					
ANR	1907528	UnaryOperator	&		1907461	0					
ANR	1907529	Identifier	ztmp		1907461	1					
ANR	1907530	CompoundStatement		12:22:221:221	1907461	1					
ANR	1907531	ExpressionStatement	zval_ptr_dtor ( newval )	2292:2:70376:70397	1907461	0	True				
ANR	1907532	CallExpression	zval_ptr_dtor ( newval )		1907461	0					
ANR	1907533	Callee	zval_ptr_dtor		1907461	0					
ANR	1907534	Identifier	zval_ptr_dtor		1907461	0					
ANR	1907535	ArgumentList	newval		1907461	1					
ANR	1907536	Argument	newval		1907461	0					
ANR	1907537	Identifier	newval		1907461	0					
ANR	1907538	ReturnStatement	return ret ;	2294:1:70403:70413	1907461	5	True				
ANR	1907539	Identifier	ret		1907461	0					
ANR	1907540	ReturnType	static int		1907461	1					
ANR	1907541	Identifier	php_snmp_write_exceptions_enabled		1907461	2					
ANR	1907542	ParameterList	"php_snmp_object * snmp_object , zval * newval"		1907461	3					
ANR	1907543	Parameter	php_snmp_object * snmp_object	2279:45:70106:70133	1907461	0	True				
ANR	1907544	ParameterType	php_snmp_object *		1907461	0					
ANR	1907545	Identifier	snmp_object		1907461	1					
ANR	1907546	Parameter	zval * newval	2279:75:70136:70147	1907461	1	True				
ANR	1907547	ParameterType	zval *		1907461	0					
ANR	1907548	Identifier	newval		1907461	1					
ANR	1907549	CFGEntryNode	ENTRY		1907461		True				
ANR	1907550	CFGExitNode	EXIT		1907461		True				
ANR	1907551	Symbol	ret		1907461						
ANR	1907552	Symbol	snmp_object -> exceptions_enabled		1907461						
ANR	1907553	Symbol	snmp_object		1907461						
ANR	1907554	Symbol	SUCCESS		1907461						
ANR	1907555	Symbol	& ztmp		1907461						
ANR	1907556	Symbol	ztmp		1907461						
ANR	1907557	Symbol	IS_LONG		1907461						
ANR	1907558	Symbol	Z_TYPE_P		1907461						
ANR	1907559	Symbol	* snmp_object		1907461						
ANR	1907560	Symbol	newval		1907461						
ANR	1907561	Symbol	Z_LVAL_P		1907461						
ANR	1907562	Function	free_php_snmp_properties	2298:0:70428:70513							
ANR	1907563	FunctionDef	free_php_snmp_properties (zval * el)		1907562	0					
ANR	1907564	CompoundStatement		2299:0:70486:70513	1907562	0					
ANR	1907565	ExpressionStatement	"pefree ( Z_PTR_P ( el ) , 1 )"	2300:1:70489:70511	1907562	0	True				
ANR	1907566	CallExpression	"pefree ( Z_PTR_P ( el ) , 1 )"		1907562	0					
ANR	1907567	Callee	pefree		1907562	0					
ANR	1907568	Identifier	pefree		1907562	0					
ANR	1907569	ArgumentList	Z_PTR_P ( el )		1907562	1					
ANR	1907570	Argument	Z_PTR_P ( el )		1907562	0					
ANR	1907571	CallExpression	Z_PTR_P ( el )		1907562	0					
ANR	1907572	Callee	Z_PTR_P		1907562	0					
ANR	1907573	Identifier	Z_PTR_P		1907562	0					
ANR	1907574	ArgumentList	el		1907562	1					
ANR	1907575	Argument	el		1907562	0					
ANR	1907576	Identifier	el		1907562	0					
ANR	1907577	Argument	1		1907562	1					
ANR	1907578	PrimaryExpression	1		1907562	0					
ANR	1907579	ReturnType	static void		1907562	1					
ANR	1907580	Identifier	free_php_snmp_properties		1907562	2					
ANR	1907581	ParameterList	zval * el		1907562	3					
ANR	1907582	Parameter	zval * el	2298:37:70465:70472	1907562	0	True				
ANR	1907583	ParameterType	zval *		1907562	0					
ANR	1907584	Identifier	el		1907562	1					
ANR	1907585	CFGEntryNode	ENTRY		1907562		True				
ANR	1907586	CFGExitNode	EXIT		1907562		True				
ANR	1907587	Symbol	Z_PTR_P		1907562						
ANR	1907588	Symbol	el		1907562						
ANR	1907589	DeclStmt									
ANR	1907590	Decl							zend_function_entry	zend_function_entry [ ]	php_snmp_class_methods
ANR	1907591	DeclStmt									
ANR	1907592	Decl							const php_snmp_prop_handler	const php_snmp_prop_handler [ ]	php_snmp_property_entries
ANR	1907593	DeclStmt									
ANR	1907594	Decl							netsnmp_log_handler	netsnmp_log_handler *	logh
ANR	1907595	DeclStmt									
ANR	1907596	Decl							zend_class_entry	zend_class_entry	ce
ANR	1907597	Decl							zend_class_entry	zend_class_entry	cex
ANR	1907598	DeclStmt									
ANR	1907599	Decl							const zend_module_dep	const zend_module_dep [ ]	snmp_module_deps
ANR	1907600	DeclStmt									
ANR	1907601	Decl							zend_module_entry	zend_module_entry	snmp_module_entry
