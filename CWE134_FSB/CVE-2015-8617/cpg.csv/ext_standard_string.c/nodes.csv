command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2789200	File	data/converged/CVE-2015-8617_php-src/ext_standard_string.c								
ANR	2789201	DeclStmt									
ANR	2789202	Decl							endif	endif	REGISTER_LONG_CONSTANT
ANR	2789203	DeclStmt									
ANR	2789204	Decl							ifdef LC_MESSAGES	ifdef LC_MESSAGES	REGISTER_LONG_CONSTANT
ANR	2789205	DeclStmt									
ANR	2789206	Decl							int	"int ( char * tag , size_t len , const char * set )"	php_tag_find
ANR	2789207	DeclStmt									
ANR	2789208	Decl							MUTEX_T	MUTEX_T	locale_mutex
ANR	2789209	Function	php_bin2hex	138:0:5011:5383							
ANR	2789210	FunctionDef	"php_bin2hex (const unsigned char * old , const size_t oldlen)"		2789209	0					
ANR	2789211	CompoundStatement		139:0:5090:5383	2789209	0					
ANR	2789212	IdentifierDeclStatement	zend_string * result ;	140:1:5093:5112	2789209	0	True				
ANR	2789213	IdentifierDecl	* result		2789209	0					
ANR	2789214	IdentifierDeclType	zend_string *		2789209	0					
ANR	2789215	Identifier	result		2789209	1					
ANR	2789216	IdentifierDeclStatement	"size_t i , j ;"	141:1:5115:5126	2789209	1	True				
ANR	2789217	IdentifierDecl	i		2789209	0					
ANR	2789218	IdentifierDeclType	size_t		2789209	0					
ANR	2789219	Identifier	i		2789209	1					
ANR	2789220	IdentifierDecl	j		2789209	1					
ANR	2789221	IdentifierDeclType	size_t		2789209	0					
ANR	2789222	Identifier	j		2789209	1					
ANR	2789223	ExpressionStatement	"result = zend_string_safe_alloc ( oldlen , 2 * sizeof ( char ) , 0 , 0 )"	143:1:5130:5193	2789209	2	True				
ANR	2789224	AssignmentExpression	"result = zend_string_safe_alloc ( oldlen , 2 * sizeof ( char ) , 0 , 0 )"		2789209	0		=			
ANR	2789225	Identifier	result		2789209	0					
ANR	2789226	CallExpression	"zend_string_safe_alloc ( oldlen , 2 * sizeof ( char ) , 0 , 0 )"		2789209	1					
ANR	2789227	Callee	zend_string_safe_alloc		2789209	0					
ANR	2789228	Identifier	zend_string_safe_alloc		2789209	0					
ANR	2789229	ArgumentList	oldlen		2789209	1					
ANR	2789230	Argument	oldlen		2789209	0					
ANR	2789231	Identifier	oldlen		2789209	0					
ANR	2789232	Argument	2 * sizeof ( char )		2789209	1					
ANR	2789233	MultiplicativeExpression	2 * sizeof ( char )		2789209	0		*			
ANR	2789234	PrimaryExpression	2		2789209	0					
ANR	2789235	SizeofExpression	sizeof ( char )		2789209	1					
ANR	2789236	Sizeof	sizeof		2789209	0					
ANR	2789237	SizeofOperand	char		2789209	1					
ANR	2789238	Argument	0		2789209	2					
ANR	2789239	PrimaryExpression	0		2789209	0					
ANR	2789240	Argument	0		2789209	3					
ANR	2789241	PrimaryExpression	0		2789209	0					
ANR	2789242	ForStatement	for ( i = j = 0 ; i < oldlen ; i ++ )		2789209	3					
ANR	2789243	ForInit	i = j = 0 ;	145:6:5202:5211	2789209	0	True				
ANR	2789244	AssignmentExpression	i = j = 0		2789209	0		=			
ANR	2789245	Identifier	i		2789209	0					
ANR	2789246	AssignmentExpression	j = 0		2789209	1		=			
ANR	2789247	Identifier	j		2789209	0					
ANR	2789248	PrimaryExpression	0		2789209	1					
ANR	2789249	Condition	i < oldlen	145:17:5213:5222	2789209	1	True				
ANR	2789250	RelationalExpression	i < oldlen		2789209	0		<			
ANR	2789251	Identifier	i		2789209	0					
ANR	2789252	Identifier	oldlen		2789209	1					
ANR	2789253	PostIncDecOperationExpression	i ++	145:29:5225:5227	2789209	2	True				
ANR	2789254	Identifier	i		2789209	0					
ANR	2789255	IncDec	++		2789209	1					
ANR	2789256	CompoundStatement		7:34:139:139	2789209	3					
ANR	2789257	ExpressionStatement	ZSTR_VAL ( result ) [ j ++ ] = hexconvtab [ old [ i ] >> 4 ]	146:2:5234:5281	2789209	0	True				
ANR	2789258	AssignmentExpression	ZSTR_VAL ( result ) [ j ++ ] = hexconvtab [ old [ i ] >> 4 ]		2789209	0		=			
ANR	2789259	ArrayIndexing	ZSTR_VAL ( result ) [ j ++ ]		2789209	0					
ANR	2789260	CallExpression	ZSTR_VAL ( result )		2789209	0					
ANR	2789261	Callee	ZSTR_VAL		2789209	0					
ANR	2789262	Identifier	ZSTR_VAL		2789209	0					
ANR	2789263	ArgumentList	result		2789209	1					
ANR	2789264	Argument	result		2789209	0					
ANR	2789265	Identifier	result		2789209	0					
ANR	2789266	PostIncDecOperationExpression	j ++		2789209	1					
ANR	2789267	Identifier	j		2789209	0					
ANR	2789268	IncDec	++		2789209	1					
ANR	2789269	ArrayIndexing	hexconvtab [ old [ i ] >> 4 ]		2789209	1					
ANR	2789270	Identifier	hexconvtab		2789209	0					
ANR	2789271	ShiftExpression	old [ i ] >> 4		2789209	1		>>			
ANR	2789272	ArrayIndexing	old [ i ]		2789209	0					
ANR	2789273	Identifier	old		2789209	0					
ANR	2789274	Identifier	i		2789209	1					
ANR	2789275	PrimaryExpression	4		2789209	1					
ANR	2789276	ExpressionStatement	ZSTR_VAL ( result ) [ j ++ ] = hexconvtab [ old [ i ] & 15 ]	147:2:5285:5332	2789209	1	True				
ANR	2789277	AssignmentExpression	ZSTR_VAL ( result ) [ j ++ ] = hexconvtab [ old [ i ] & 15 ]		2789209	0		=			
ANR	2789278	ArrayIndexing	ZSTR_VAL ( result ) [ j ++ ]		2789209	0					
ANR	2789279	CallExpression	ZSTR_VAL ( result )		2789209	0					
ANR	2789280	Callee	ZSTR_VAL		2789209	0					
ANR	2789281	Identifier	ZSTR_VAL		2789209	0					
ANR	2789282	ArgumentList	result		2789209	1					
ANR	2789283	Argument	result		2789209	0					
ANR	2789284	Identifier	result		2789209	0					
ANR	2789285	PostIncDecOperationExpression	j ++		2789209	1					
ANR	2789286	Identifier	j		2789209	0					
ANR	2789287	IncDec	++		2789209	1					
ANR	2789288	ArrayIndexing	hexconvtab [ old [ i ] & 15 ]		2789209	1					
ANR	2789289	Identifier	hexconvtab		2789209	0					
ANR	2789290	BitAndExpression	old [ i ] & 15		2789209	1		&			
ANR	2789291	ArrayIndexing	old [ i ]		2789209	0					
ANR	2789292	Identifier	old		2789209	0					
ANR	2789293	Identifier	i		2789209	1					
ANR	2789294	PrimaryExpression	15		2789209	1					
ANR	2789295	ExpressionStatement	ZSTR_VAL ( result ) [ j ] = '\\0'	149:1:5338:5364	2789209	4	True				
ANR	2789296	AssignmentExpression	ZSTR_VAL ( result ) [ j ] = '\\0'		2789209	0		=			
ANR	2789297	ArrayIndexing	ZSTR_VAL ( result ) [ j ]		2789209	0					
ANR	2789298	CallExpression	ZSTR_VAL ( result )		2789209	0					
ANR	2789299	Callee	ZSTR_VAL		2789209	0					
ANR	2789300	Identifier	ZSTR_VAL		2789209	0					
ANR	2789301	ArgumentList	result		2789209	1					
ANR	2789302	Argument	result		2789209	0					
ANR	2789303	Identifier	result		2789209	0					
ANR	2789304	Identifier	j		2789209	1					
ANR	2789305	PrimaryExpression	'\\0'		2789209	1					
ANR	2789306	ReturnStatement	return result ;	151:1:5368:5381	2789209	5	True				
ANR	2789307	Identifier	result		2789209	0					
ANR	2789308	ReturnType	static zend_string *		2789209	1					
ANR	2789309	Identifier	php_bin2hex		2789209	2					
ANR	2789310	ParameterList	"const unsigned char * old , const size_t oldlen"		2789209	3					
ANR	2789311	Parameter	const unsigned char * old	138:32:5043:5066	2789209	0	True				
ANR	2789312	ParameterType	const unsigned char *		2789209	0					
ANR	2789313	Identifier	old		2789209	1					
ANR	2789314	Parameter	const size_t oldlen	138:58:5069:5087	2789209	1	True				
ANR	2789315	ParameterType	const size_t		2789209	0					
ANR	2789316	Identifier	oldlen		2789209	1					
ANR	2789317	CFGEntryNode	ENTRY		2789209		True				
ANR	2789318	CFGExitNode	EXIT		2789209		True				
ANR	2789319	Symbol	* * i		2789209						
ANR	2789320	Symbol	oldlen		2789209						
ANR	2789321	Symbol	old		2789209						
ANR	2789322	Symbol	i		2789209						
ANR	2789323	Symbol	j		2789209						
ANR	2789324	Symbol	* hexconvtab		2789209						
ANR	2789325	Symbol	ZSTR_VAL		2789209						
ANR	2789326	Symbol	result		2789209						
ANR	2789327	Symbol	* old		2789209						
ANR	2789328	Symbol	* i		2789209						
ANR	2789329	Symbol	zend_string_safe_alloc		2789209						
ANR	2789330	Symbol	* j		2789209						
ANR	2789331	Symbol	* * old		2789209						
ANR	2789332	Symbol	hexconvtab		2789209						
ANR	2789333	Symbol	* ZSTR_VAL		2789209						
ANR	2789334	Function	php_hex2bin	157:0:5419:6489							
ANR	2789335	FunctionDef	"php_hex2bin (const unsigned char * old , const size_t oldlen)"		2789334	0					
ANR	2789336	CompoundStatement		158:0:5498:6489	2789334	0					
ANR	2789337	IdentifierDeclStatement	size_t target_length = oldlen >> 1 ;	159:1:5501:5535	2789334	0	True				
ANR	2789338	IdentifierDecl	target_length = oldlen >> 1		2789334	0					
ANR	2789339	IdentifierDeclType	size_t		2789334	0					
ANR	2789340	Identifier	target_length		2789334	1					
ANR	2789341	AssignmentExpression	target_length = oldlen >> 1		2789334	2		=			
ANR	2789342	Identifier	target_length		2789334	0					
ANR	2789343	ShiftExpression	oldlen >> 1		2789334	1		>>			
ANR	2789344	Identifier	oldlen		2789334	0					
ANR	2789345	PrimaryExpression	1		2789334	1					
ANR	2789346	IdentifierDeclStatement	"zend_string * str = zend_string_alloc ( target_length , 0 ) ;"	160:1:5538:5592	2789334	1	True				
ANR	2789347	IdentifierDecl	"* str = zend_string_alloc ( target_length , 0 )"		2789334	0					
ANR	2789348	IdentifierDeclType	zend_string *		2789334	0					
ANR	2789349	Identifier	str		2789334	1					
ANR	2789350	AssignmentExpression	"* str = zend_string_alloc ( target_length , 0 )"		2789334	2		=			
ANR	2789351	Identifier	str		2789334	0					
ANR	2789352	CallExpression	"zend_string_alloc ( target_length , 0 )"		2789334	1					
ANR	2789353	Callee	zend_string_alloc		2789334	0					
ANR	2789354	Identifier	zend_string_alloc		2789334	0					
ANR	2789355	ArgumentList	target_length		2789334	1					
ANR	2789356	Argument	target_length		2789334	0					
ANR	2789357	Identifier	target_length		2789334	0					
ANR	2789358	Argument	0		2789334	1					
ANR	2789359	PrimaryExpression	0		2789334	0					
ANR	2789360	IdentifierDeclStatement	unsigned char * ret = ( unsigned char * ) ZSTR_VAL ( str ) ;	161:1:5595:5646	2789334	2	True				
ANR	2789361	IdentifierDecl	* ret = ( unsigned char * ) ZSTR_VAL ( str )		2789334	0					
ANR	2789362	IdentifierDeclType	unsigned char *		2789334	0					
ANR	2789363	Identifier	ret		2789334	1					
ANR	2789364	AssignmentExpression	* ret = ( unsigned char * ) ZSTR_VAL ( str )		2789334	2		=			
ANR	2789365	Identifier	ret		2789334	0					
ANR	2789366	CastExpression	( unsigned char * ) ZSTR_VAL ( str )		2789334	1					
ANR	2789367	CastTarget	unsigned char *		2789334	0					
ANR	2789368	CallExpression	ZSTR_VAL ( str )		2789334	1					
ANR	2789369	Callee	ZSTR_VAL		2789334	0					
ANR	2789370	Identifier	ZSTR_VAL		2789334	0					
ANR	2789371	ArgumentList	str		2789334	1					
ANR	2789372	Argument	str		2789334	0					
ANR	2789373	Identifier	str		2789334	0					
ANR	2789374	IdentifierDeclStatement	"size_t i , j ;"	162:1:5649:5660	2789334	3	True				
ANR	2789375	IdentifierDecl	i		2789334	0					
ANR	2789376	IdentifierDeclType	size_t		2789334	0					
ANR	2789377	Identifier	i		2789334	1					
ANR	2789378	IdentifierDecl	j		2789334	1					
ANR	2789379	IdentifierDeclType	size_t		2789334	0					
ANR	2789380	Identifier	j		2789334	1					
ANR	2789381	ForStatement	for ( i = j = 0 ; i < target_length ; i ++ )		2789334	4					
ANR	2789382	ForInit	i = j = 0 ;	164:6:5669:5678	2789334	0	True				
ANR	2789383	AssignmentExpression	i = j = 0		2789334	0		=			
ANR	2789384	Identifier	i		2789334	0					
ANR	2789385	AssignmentExpression	j = 0		2789334	1		=			
ANR	2789386	Identifier	j		2789334	0					
ANR	2789387	PrimaryExpression	0		2789334	1					
ANR	2789388	Condition	i < target_length	164:17:5680:5696	2789334	1	True				
ANR	2789389	RelationalExpression	i < target_length		2789334	0		<			
ANR	2789390	Identifier	i		2789334	0					
ANR	2789391	Identifier	target_length		2789334	1					
ANR	2789392	PostIncDecOperationExpression	i ++	164:36:5699:5701	2789334	2	True				
ANR	2789393	Identifier	i		2789334	0					
ANR	2789394	IncDec	++		2789334	1					
ANR	2789395	CompoundStatement		11:2:368:383	2789334	3					
ANR	2789396	IdentifierDeclStatement	unsigned char c = old [ j ++ ] ;	165:2:5708:5734	2789334	0	True				
ANR	2789397	IdentifierDecl	c = old [ j ++ ]		2789334	0					
ANR	2789398	IdentifierDeclType	unsigned char		2789334	0					
ANR	2789399	Identifier	c		2789334	1					
ANR	2789400	AssignmentExpression	c = old [ j ++ ]		2789334	2		=			
ANR	2789401	Identifier	c		2789334	0					
ANR	2789402	ArrayIndexing	old [ j ++ ]		2789334	1					
ANR	2789403	Identifier	old		2789334	0					
ANR	2789404	PostIncDecOperationExpression	j ++		2789334	1					
ANR	2789405	Identifier	j		2789334	0					
ANR	2789406	IncDec	++		2789334	1					
ANR	2789407	IdentifierDeclStatement	unsigned char l = c & ~0x20 ;	166:2:5738:5765	2789334	1	True				
ANR	2789408	IdentifierDecl	l = c & ~0x20		2789334	0					
ANR	2789409	IdentifierDeclType	unsigned char		2789334	0					
ANR	2789410	Identifier	l		2789334	1					
ANR	2789411	AssignmentExpression	l = c & ~0x20		2789334	2		=			
ANR	2789412	Identifier	l		2789334	0					
ANR	2789413	BitAndExpression	c & ~0x20		2789334	1		&			
ANR	2789414	Identifier	c		2789334	0					
ANR	2789415	Identifier	~0x20		2789334	1					
ANR	2789416	IdentifierDeclStatement	int is_letter = ( ( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) ) ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ;	167:2:5769:5863	2789334	2	True				
ANR	2789417	IdentifierDecl	is_letter = ( ( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) ) ) >> ( 8 * sizeof ( unsigned int ) - 1 )		2789334	0					
ANR	2789418	IdentifierDeclType	int		2789334	0					
ANR	2789419	Identifier	is_letter		2789334	1					
ANR	2789420	AssignmentExpression	is_letter = ( ( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) ) ) >> ( 8 * sizeof ( unsigned int ) - 1 )		2789334	2		=			
ANR	2789421	Identifier	is_letter		2789334	0					
ANR	2789422	ShiftExpression	( ( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) ) ) >> ( 8 * sizeof ( unsigned int ) - 1 )		2789334	1		>>			
ANR	2789423	CastExpression	( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) )		2789334	0					
ANR	2789424	CastTarget	unsigned int		2789334	0					
ANR	2789425	ExclusiveOrExpression	( l - 'A' ) ^ ( l - 'F' - 1 )		2789334	1		^			
ANR	2789426	AdditiveExpression	l - 'A'		2789334	0		-			
ANR	2789427	Identifier	l		2789334	0					
ANR	2789428	PrimaryExpression	'A'		2789334	1					
ANR	2789429	AdditiveExpression	l - 'F' - 1		2789334	1		-			
ANR	2789430	Identifier	l		2789334	0					
ANR	2789431	AdditiveExpression	'F' - 1		2789334	1		-			
ANR	2789432	PrimaryExpression	'F'		2789334	0					
ANR	2789433	PrimaryExpression	1		2789334	1					
ANR	2789434	AdditiveExpression	8 * sizeof ( unsigned int ) - 1		2789334	1		-			
ANR	2789435	MultiplicativeExpression	8 * sizeof ( unsigned int )		2789334	0		*			
ANR	2789436	PrimaryExpression	8		2789334	0					
ANR	2789437	SizeofExpression	sizeof ( unsigned int )		2789334	1					
ANR	2789438	Sizeof	sizeof		2789334	0					
ANR	2789439	SizeofOperand	unsigned int		2789334	1					
ANR	2789440	PrimaryExpression	1		2789334	1					
ANR	2789441	IdentifierDeclStatement	unsigned char d ;	168:2:5867:5882	2789334	3	True				
ANR	2789442	IdentifierDecl	d		2789334	0					
ANR	2789443	IdentifierDeclType	unsigned char		2789334	0					
ANR	2789444	Identifier	d		2789334	1					
ANR	2789445	IfStatement	if ( EXPECTED ( ( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter ) )		2789334	4					
ANR	2789446	Condition	EXPECTED ( ( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter )	171:6:5959:6032	2789334	0	True				
ANR	2789447	CallExpression	EXPECTED ( ( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter )		2789334	0					
ANR	2789448	Callee	EXPECTED		2789334	0					
ANR	2789449	Identifier	EXPECTED		2789334	0					
ANR	2789450	ArgumentList	( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter		2789334	1					
ANR	2789451	Argument	( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter		2789334	0					
ANR	2789452	InclusiveOrExpression	( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter		2789334	0		|			
ANR	2789453	ShiftExpression	( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 )		2789334	0		>>			
ANR	2789454	AdditiveExpression	( c ^ '0' ) - 10		2789334	0		-			
ANR	2789455	ExclusiveOrExpression	c ^ '0'		2789334	0		^			
ANR	2789456	Identifier	c		2789334	0					
ANR	2789457	PrimaryExpression	'0'		2789334	1					
ANR	2789458	PrimaryExpression	10		2789334	1					
ANR	2789459	AdditiveExpression	8 * sizeof ( unsigned int ) - 1		2789334	1		-			
ANR	2789460	MultiplicativeExpression	8 * sizeof ( unsigned int )		2789334	0		*			
ANR	2789461	PrimaryExpression	8		2789334	0					
ANR	2789462	SizeofExpression	sizeof ( unsigned int )		2789334	1					
ANR	2789463	Sizeof	sizeof		2789334	0					
ANR	2789464	SizeofOperand	unsigned int		2789334	1					
ANR	2789465	PrimaryExpression	1		2789334	1					
ANR	2789466	Identifier	is_letter		2789334	1					
ANR	2789467	CompoundStatement		14:82:536:536	2789334	1					
ANR	2789468	ExpressionStatement	d = ( l - 0x10 - 0x27 * is_letter ) << 4	172:3:6040:6078	2789334	0	True				
ANR	2789469	AssignmentExpression	d = ( l - 0x10 - 0x27 * is_letter ) << 4		2789334	0		=			
ANR	2789470	Identifier	d		2789334	0					
ANR	2789471	ShiftExpression	( l - 0x10 - 0x27 * is_letter ) << 4		2789334	1		<<			
ANR	2789472	AdditiveExpression	l - 0x10 - 0x27 * is_letter		2789334	0		-			
ANR	2789473	Identifier	l		2789334	0					
ANR	2789474	AdditiveExpression	0x10 - 0x27 * is_letter		2789334	1		-			
ANR	2789475	PrimaryExpression	0x10		2789334	0					
ANR	2789476	MultiplicativeExpression	0x27 * is_letter		2789334	1		*			
ANR	2789477	PrimaryExpression	0x27		2789334	0					
ANR	2789478	Identifier	is_letter		2789334	1					
ANR	2789479	PrimaryExpression	4		2789334	1					
ANR	2789480	ElseStatement	else		2789334	0					
ANR	2789481	CompoundStatement		16:9:590:590	2789334	0					
ANR	2789482	ExpressionStatement	zend_string_free ( str )	174:3:6094:6115	2789334	0	True				
ANR	2789483	CallExpression	zend_string_free ( str )		2789334	0					
ANR	2789484	Callee	zend_string_free		2789334	0					
ANR	2789485	Identifier	zend_string_free		2789334	0					
ANR	2789486	ArgumentList	str		2789334	1					
ANR	2789487	Argument	str		2789334	0					
ANR	2789488	Identifier	str		2789334	0					
ANR	2789489	ReturnStatement	return NULL ;	175:3:6120:6131	2789334	1	True				
ANR	2789490	Identifier	NULL		2789334	0					
ANR	2789491	ExpressionStatement	c = old [ j ++ ]	177:2:6139:6151	2789334	5	True				
ANR	2789492	AssignmentExpression	c = old [ j ++ ]		2789334	0		=			
ANR	2789493	Identifier	c		2789334	0					
ANR	2789494	ArrayIndexing	old [ j ++ ]		2789334	1					
ANR	2789495	Identifier	old		2789334	0					
ANR	2789496	PostIncDecOperationExpression	j ++		2789334	1					
ANR	2789497	Identifier	j		2789334	0					
ANR	2789498	IncDec	++		2789334	1					
ANR	2789499	ExpressionStatement	l = c & ~0x20	178:2:6155:6168	2789334	6	True				
ANR	2789500	AssignmentExpression	l = c & ~0x20		2789334	0		=			
ANR	2789501	Identifier	l		2789334	0					
ANR	2789502	BitAndExpression	c & ~0x20		2789334	1		&			
ANR	2789503	Identifier	c		2789334	0					
ANR	2789504	Identifier	~0x20		2789334	1					
ANR	2789505	ExpressionStatement	is_letter = ( ( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) ) ) >> ( 8 * sizeof ( unsigned int ) - 1 )	179:2:6172:6262	2789334	7	True				
ANR	2789506	AssignmentExpression	is_letter = ( ( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) ) ) >> ( 8 * sizeof ( unsigned int ) - 1 )		2789334	0		=			
ANR	2789507	Identifier	is_letter		2789334	0					
ANR	2789508	ShiftExpression	( ( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) ) ) >> ( 8 * sizeof ( unsigned int ) - 1 )		2789334	1		>>			
ANR	2789509	CastExpression	( unsigned int ) ( ( l - 'A' ) ^ ( l - 'F' - 1 ) )		2789334	0					
ANR	2789510	CastTarget	unsigned int		2789334	0					
ANR	2789511	ExclusiveOrExpression	( l - 'A' ) ^ ( l - 'F' - 1 )		2789334	1		^			
ANR	2789512	AdditiveExpression	l - 'A'		2789334	0		-			
ANR	2789513	Identifier	l		2789334	0					
ANR	2789514	PrimaryExpression	'A'		2789334	1					
ANR	2789515	AdditiveExpression	l - 'F' - 1		2789334	1		-			
ANR	2789516	Identifier	l		2789334	0					
ANR	2789517	AdditiveExpression	'F' - 1		2789334	1		-			
ANR	2789518	PrimaryExpression	'F'		2789334	0					
ANR	2789519	PrimaryExpression	1		2789334	1					
ANR	2789520	AdditiveExpression	8 * sizeof ( unsigned int ) - 1		2789334	1		-			
ANR	2789521	MultiplicativeExpression	8 * sizeof ( unsigned int )		2789334	0		*			
ANR	2789522	PrimaryExpression	8		2789334	0					
ANR	2789523	SizeofExpression	sizeof ( unsigned int )		2789334	1					
ANR	2789524	Sizeof	sizeof		2789334	0					
ANR	2789525	SizeofOperand	unsigned int		2789334	1					
ANR	2789526	PrimaryExpression	1		2789334	1					
ANR	2789527	IfStatement	if ( EXPECTED ( ( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter ) )		2789334	8					
ANR	2789528	Condition	EXPECTED ( ( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter )	180:6:6270:6343	2789334	0	True				
ANR	2789529	CallExpression	EXPECTED ( ( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter )		2789334	0					
ANR	2789530	Callee	EXPECTED		2789334	0					
ANR	2789531	Identifier	EXPECTED		2789334	0					
ANR	2789532	ArgumentList	( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter		2789334	1					
ANR	2789533	Argument	( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter		2789334	0					
ANR	2789534	InclusiveOrExpression	( ( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 ) ) | is_letter		2789334	0		|			
ANR	2789535	ShiftExpression	( ( c ^ '0' ) - 10 ) >> ( 8 * sizeof ( unsigned int ) - 1 )		2789334	0		>>			
ANR	2789536	AdditiveExpression	( c ^ '0' ) - 10		2789334	0		-			
ANR	2789537	ExclusiveOrExpression	c ^ '0'		2789334	0		^			
ANR	2789538	Identifier	c		2789334	0					
ANR	2789539	PrimaryExpression	'0'		2789334	1					
ANR	2789540	PrimaryExpression	10		2789334	1					
ANR	2789541	AdditiveExpression	8 * sizeof ( unsigned int ) - 1		2789334	1		-			
ANR	2789542	MultiplicativeExpression	8 * sizeof ( unsigned int )		2789334	0		*			
ANR	2789543	PrimaryExpression	8		2789334	0					
ANR	2789544	SizeofExpression	sizeof ( unsigned int )		2789334	1					
ANR	2789545	Sizeof	sizeof		2789334	0					
ANR	2789546	SizeofOperand	unsigned int		2789334	1					
ANR	2789547	PrimaryExpression	1		2789334	1					
ANR	2789548	Identifier	is_letter		2789334	1					
ANR	2789549	CompoundStatement		23:82:847:847	2789334	1					
ANR	2789550	ExpressionStatement	d |= l - 0x10 - 0x27 * is_letter	181:3:6351:6383	2789334	0	True				
ANR	2789551	AssignmentExpression	d |= l - 0x10 - 0x27 * is_letter		2789334	0		|=			
ANR	2789552	Identifier	d		2789334	0					
ANR	2789553	AdditiveExpression	l - 0x10 - 0x27 * is_letter		2789334	1		-			
ANR	2789554	Identifier	l		2789334	0					
ANR	2789555	AdditiveExpression	0x10 - 0x27 * is_letter		2789334	1		-			
ANR	2789556	PrimaryExpression	0x10		2789334	0					
ANR	2789557	MultiplicativeExpression	0x27 * is_letter		2789334	1		*			
ANR	2789558	PrimaryExpression	0x27		2789334	0					
ANR	2789559	Identifier	is_letter		2789334	1					
ANR	2789560	ElseStatement	else		2789334	0					
ANR	2789561	CompoundStatement		25:9:895:895	2789334	0					
ANR	2789562	ExpressionStatement	zend_string_free ( str )	183:3:6399:6420	2789334	0	True				
ANR	2789563	CallExpression	zend_string_free ( str )		2789334	0					
ANR	2789564	Callee	zend_string_free		2789334	0					
ANR	2789565	Identifier	zend_string_free		2789334	0					
ANR	2789566	ArgumentList	str		2789334	1					
ANR	2789567	Argument	str		2789334	0					
ANR	2789568	Identifier	str		2789334	0					
ANR	2789569	ReturnStatement	return NULL ;	184:3:6425:6436	2789334	1	True				
ANR	2789570	Identifier	NULL		2789334	0					
ANR	2789571	ExpressionStatement	ret [ i ] = d	186:2:6444:6454	2789334	9	True				
ANR	2789572	AssignmentExpression	ret [ i ] = d		2789334	0		=			
ANR	2789573	ArrayIndexing	ret [ i ]		2789334	0					
ANR	2789574	Identifier	ret		2789334	0					
ANR	2789575	Identifier	i		2789334	1					
ANR	2789576	Identifier	d		2789334	1					
ANR	2789577	ExpressionStatement	ret [ i ] = '\\0'	188:1:6460:6473	2789334	5	True				
ANR	2789578	AssignmentExpression	ret [ i ] = '\\0'		2789334	0		=			
ANR	2789579	ArrayIndexing	ret [ i ]		2789334	0					
ANR	2789580	Identifier	ret		2789334	0					
ANR	2789581	Identifier	i		2789334	1					
ANR	2789582	PrimaryExpression	'\\0'		2789334	1					
ANR	2789583	ReturnStatement	return str ;	190:1:6477:6487	2789334	6	True				
ANR	2789584	Identifier	str		2789334	0					
ANR	2789585	ReturnType	static zend_string *		2789334	1					
ANR	2789586	Identifier	php_hex2bin		2789334	2					
ANR	2789587	ParameterList	"const unsigned char * old , const size_t oldlen"		2789334	3					
ANR	2789588	Parameter	const unsigned char * old	157:32:5451:5474	2789334	0	True				
ANR	2789589	ParameterType	const unsigned char *		2789334	0					
ANR	2789590	Identifier	old		2789334	1					
ANR	2789591	Parameter	const size_t oldlen	157:58:5477:5495	2789334	1	True				
ANR	2789592	ParameterType	const size_t		2789334	0					
ANR	2789593	Identifier	oldlen		2789334	1					
ANR	2789594	CFGEntryNode	ENTRY		2789334		True				
ANR	2789595	CFGExitNode	EXIT		2789334		True				
ANR	2789596	Symbol	ret		2789334						
ANR	2789597	Symbol	zend_string_alloc		2789334						
ANR	2789598	Symbol	is_letter		2789334						
ANR	2789599	Symbol	c		2789334						
ANR	2789600	Symbol	~0x20		2789334						
ANR	2789601	Symbol	NULL		2789334						
ANR	2789602	Symbol	oldlen		2789334						
ANR	2789603	Symbol	d		2789334						
ANR	2789604	Symbol	old		2789334						
ANR	2789605	Symbol	i		2789334						
ANR	2789606	Symbol	j		2789334						
ANR	2789607	Symbol	* ret		2789334						
ANR	2789608	Symbol	l		2789334						
ANR	2789609	Symbol	target_length		2789334						
ANR	2789610	Symbol	ZSTR_VAL		2789334						
ANR	2789611	Symbol	str		2789334						
ANR	2789612	Symbol	* old		2789334						
ANR	2789613	Symbol	* i		2789334						
ANR	2789614	Symbol	EXPECTED		2789334						
ANR	2789615	Function	localeconv_r	197:7:6624:7326							
ANR	2789616	FunctionDef	localeconv_r (struct lconv * out)		2789615	0					
ANR	2789617	CompoundStatement		198:0:6670:7326	2789615	0					
ANR	2789618	IdentifierDeclStatement	struct lconv * res ;	199:1:6673:6690	2789615	0	True				
ANR	2789619	IdentifierDecl	* res		2789615	0					
ANR	2789620	IdentifierDeclType	struct lconv *		2789615	0					
ANR	2789621	Identifier	res		2789615	1					
ANR	2789622	IdentifierDeclStatement	ifdef ZTS tsrm_mutex_lock ( locale_mutex ) ;	201:2:6695:6737	2789615	1	True				
ANR	2789623	IdentifierDecl	tsrm_mutex_lock ( locale_mutex )		2789615	0					
ANR	2789624	IdentifierDeclType	ifdef ZTS		2789615	0					
ANR	2789625	Identifier	tsrm_mutex_lock		2789615	1					
ANR	2789626	Identifier	locale_mutex		2789615	2					
ANR	2789627	Statement	endif	203:2:6741:6745	2789615	2	True				
ANR	2789628	CompoundStatement		15:2:411:448	2789615	3					
ANR	2789629	IdentifierDeclStatement	_locale_t cur = _get_current_locale ( ) ;	212:2:7082:7119	2789615	0	True				
ANR	2789630	IdentifierDecl	cur = _get_current_locale ( )		2789615	0					
ANR	2789631	IdentifierDeclType	_locale_t		2789615	0					
ANR	2789632	Identifier	cur		2789615	1					
ANR	2789633	AssignmentExpression	cur = _get_current_locale ( )		2789615	2		=			
ANR	2789634	Identifier	cur		2789615	0					
ANR	2789635	CallExpression	_get_current_locale ( )		2789615	1					
ANR	2789636	Callee	_get_current_locale		2789615	0					
ANR	2789637	Identifier	_get_current_locale		2789615	0					
ANR	2789638	ArgumentList			2789615	1					
ANR	2789639	ExpressionStatement	res = cur -> locinfo -> lconv	214:2:7124:7149	2789615	1	True				
ANR	2789640	AssignmentExpression	res = cur -> locinfo -> lconv		2789615	0		=			
ANR	2789641	Identifier	res		2789615	0					
ANR	2789642	PtrMemberAccess	cur -> locinfo -> lconv		2789615	1					
ANR	2789643	PtrMemberAccess	cur -> locinfo		2789615	0					
ANR	2789644	Identifier	cur		2789615	0					
ANR	2789645	Identifier	locinfo		2789615	1					
ANR	2789646	Identifier	lconv		2789615	1					
ANR	2789647	ExpressionStatement	* out = * res	221:1:7242:7253	2789615	4	True				
ANR	2789648	AssignmentExpression	* out = * res		2789615	0		=			
ANR	2789649	UnaryOperationExpression	* out		2789615	0					
ANR	2789650	UnaryOperator	*		2789615	0					
ANR	2789651	Identifier	out		2789615	1					
ANR	2789652	UnaryOperationExpression	* res		2789615	1					
ANR	2789653	UnaryOperator	*		2789615	0					
ANR	2789654	Identifier	res		2789615	1					
ANR	2789655	IdentifierDeclStatement	ifdef ZTS tsrm_mutex_unlock ( locale_mutex ) ;	223:2:7258:7302	2789615	5	True				
ANR	2789656	IdentifierDecl	tsrm_mutex_unlock ( locale_mutex )		2789615	0					
ANR	2789657	IdentifierDeclType	ifdef ZTS		2789615	0					
ANR	2789658	Identifier	tsrm_mutex_unlock		2789615	1					
ANR	2789659	Identifier	locale_mutex		2789615	2					
ANR	2789660	Statement	endif	225:2:7306:7310	2789615	6	True				
ANR	2789661	ReturnStatement	return out ;	227:1:7314:7324	2789615	7	True				
ANR	2789662	Identifier	out		2789615	0					
ANR	2789663	ReturnType	struct lconv *		2789615	1					
ANR	2789664	Identifier	localeconv_r		2789615	2					
ANR	2789665	ParameterList	struct lconv * out		2789615	3					
ANR	2789666	Parameter	struct lconv * out	197:34:6651:6667	2789615	0	True				
ANR	2789667	ParameterType	struct lconv *		2789615	0					
ANR	2789668	Identifier	out		2789615	1					
ANR	2789669	CFGEntryNode	ENTRY		2789615		True				
ANR	2789670	CFGExitNode	EXIT		2789615		True				
ANR	2789671	Symbol	res		2789615						
ANR	2789672	Symbol	cur		2789615						
ANR	2789673	Symbol	* res		2789615						
ANR	2789674	Symbol	out		2789615						
ANR	2789675	Symbol	* cur -> locinfo		2789615						
ANR	2789676	Symbol	* * cur		2789615						
ANR	2789677	Symbol	tsrm_mutex_lock		2789615						
ANR	2789678	Symbol	* cur		2789615						
ANR	2789679	Symbol	cur -> locinfo -> lconv		2789615						
ANR	2789680	Symbol	cur -> locinfo		2789615						
ANR	2789681	Symbol	_get_current_locale		2789615						
ANR	2789682	Symbol	* out		2789615						
ANR	2789683	Symbol	tsrm_mutex_unlock		2789615						
ANR	2789684	DeclStmt									
ANR	2789685	Decl							zend_string	zend_string *	result
ANR	2789686	DeclStmt									
ANR	2789687	Decl							zend_string	zend_string *	data
ANR	2789688	DeclStmt									
ANR	2789689	Decl							zend_string	zend_string *	result
ANR	2789690	Decl							zend_string	zend_string *	data
ANR	2789691	DeclStmt									
ANR	2789692	Decl							zend_string	zend_string *	s11
ANR	2789693	Decl							zend_string	zend_string *	s22
ANR	2789694	DeclStmt									
ANR	2789695	Decl							zend_long	zend_long	start
ANR	2789696	Decl							zend_long	zend_long	len
ANR	2789697	DeclStmt									
ANR	2789698	Decl							zend_long	zend_long	item
ANR	2789699	DeclStmt									
ANR	2789700	Decl							char	char *	value
ANR	2789701	DeclStmt									
ANR	2789702	Decl							zend_string	zend_string *	s1
ANR	2789703	Decl							zend_string	zend_string *	s2
ANR	2789704	Function	php_charmask	750:0:18535:19866							
ANR	2789705	FunctionDef	"php_charmask (unsigned char * input , size_t len , char * mask)"		2789704	0					
ANR	2789706	CompoundStatement		751:0:18612:19866	2789704	0					
ANR	2789707	IdentifierDeclStatement	unsigned char * end ;	752:1:18615:18633	2789704	0	True				
ANR	2789708	IdentifierDecl	* end		2789704	0					
ANR	2789709	IdentifierDeclType	unsigned char *		2789704	0					
ANR	2789710	Identifier	end		2789704	1					
ANR	2789711	IdentifierDeclStatement	unsigned char c ;	753:1:18636:18651	2789704	1	True				
ANR	2789712	IdentifierDecl	c		2789704	0					
ANR	2789713	IdentifierDeclType	unsigned char		2789704	0					
ANR	2789714	Identifier	c		2789704	1					
ANR	2789715	IdentifierDeclStatement	int result = SUCCESS ;	754:1:18654:18674	2789704	2	True				
ANR	2789716	IdentifierDecl	result = SUCCESS		2789704	0					
ANR	2789717	IdentifierDeclType	int		2789704	0					
ANR	2789718	Identifier	result		2789704	1					
ANR	2789719	AssignmentExpression	result = SUCCESS		2789704	2		=			
ANR	2789720	Identifier	SUCCESS		2789704	0					
ANR	2789721	Identifier	SUCCESS		2789704	1					
ANR	2789722	ExpressionStatement	"memset ( mask , 0 , 256 )"	756:1:18678:18698	2789704	3	True				
ANR	2789723	CallExpression	"memset ( mask , 0 , 256 )"		2789704	0					
ANR	2789724	Callee	memset		2789704	0					
ANR	2789725	Identifier	memset		2789704	0					
ANR	2789726	ArgumentList	mask		2789704	1					
ANR	2789727	Argument	mask		2789704	0					
ANR	2789728	Identifier	mask		2789704	0					
ANR	2789729	Argument	0		2789704	1					
ANR	2789730	PrimaryExpression	0		2789704	0					
ANR	2789731	Argument	256		2789704	2					
ANR	2789732	PrimaryExpression	256		2789704	0					
ANR	2789733	ForStatement	for ( end = input + len ; input < end ; input ++ )		2789704	4					
ANR	2789734	ForInit	end = input + len ;	757:6:18706:18721	2789704	0	True				
ANR	2789735	AssignmentExpression	end = input + len		2789704	0		=			
ANR	2789736	Identifier	end		2789704	0					
ANR	2789737	AdditiveExpression	input + len		2789704	1		+			
ANR	2789738	Identifier	input		2789704	0					
ANR	2789739	Identifier	len		2789704	1					
ANR	2789740	Condition	input < end	757:23:18723:18733	2789704	1	True				
ANR	2789741	RelationalExpression	input < end		2789704	0		<			
ANR	2789742	Identifier	input		2789704	0					
ANR	2789743	Identifier	end		2789704	1					
ANR	2789744	PostIncDecOperationExpression	input ++	757:36:18736:18742	2789704	2	True				
ANR	2789745	Identifier	input		2789704	0					
ANR	2789746	IncDec	++		2789704	1					
ANR	2789747	CompoundStatement		7:45:132:132	2789704	3					
ANR	2789748	ExpressionStatement	c = * input	758:2:18749:18757	2789704	0	True				
ANR	2789749	AssignmentExpression	c = * input		2789704	0		=			
ANR	2789750	Identifier	c		2789704	0					
ANR	2789751	UnaryOperationExpression	* input		2789704	1					
ANR	2789752	UnaryOperator	*		2789704	0					
ANR	2789753	Identifier	input		2789704	1					
ANR	2789754	IfStatement	if ( ( input + 3 < end ) && input [ 1 ] == '.' && input [ 2 ] == '.' && input [ 3 ] >= c )		2789704	1					
ANR	2789755	Condition	( input + 3 < end ) && input [ 1 ] == '.' && input [ 2 ] == '.' && input [ 3 ] >= c	759:6:18765:18838	2789704	0	True				
ANR	2789756	AndExpression	( input + 3 < end ) && input [ 1 ] == '.' && input [ 2 ] == '.' && input [ 3 ] >= c		2789704	0		&&			
ANR	2789757	RelationalExpression	input + 3 < end		2789704	0		<			
ANR	2789758	AdditiveExpression	input + 3		2789704	0		+			
ANR	2789759	Identifier	input		2789704	0					
ANR	2789760	PrimaryExpression	3		2789704	1					
ANR	2789761	Identifier	end		2789704	1					
ANR	2789762	AndExpression	input [ 1 ] == '.' && input [ 2 ] == '.' && input [ 3 ] >= c		2789704	1		&&			
ANR	2789763	EqualityExpression	input [ 1 ] == '.'		2789704	0		==			
ANR	2789764	ArrayIndexing	input [ 1 ]		2789704	0					
ANR	2789765	Identifier	input		2789704	0					
ANR	2789766	PrimaryExpression	1		2789704	1					
ANR	2789767	PrimaryExpression	'.'		2789704	1					
ANR	2789768	AndExpression	input [ 2 ] == '.' && input [ 3 ] >= c		2789704	1		&&			
ANR	2789769	EqualityExpression	input [ 2 ] == '.'		2789704	0		==			
ANR	2789770	ArrayIndexing	input [ 2 ]		2789704	0					
ANR	2789771	Identifier	input		2789704	0					
ANR	2789772	PrimaryExpression	2		2789704	1					
ANR	2789773	PrimaryExpression	'.'		2789704	1					
ANR	2789774	RelationalExpression	input [ 3 ] >= c		2789704	1		>=			
ANR	2789775	ArrayIndexing	input [ 3 ]		2789704	0					
ANR	2789776	Identifier	input		2789704	0					
ANR	2789777	PrimaryExpression	3		2789704	1					
ANR	2789778	Identifier	c		2789704	1					
ANR	2789779	CompoundStatement		10:22:228:228	2789704	1					
ANR	2789780	ExpressionStatement	"memset ( mask + c , 1 , input [ 3 ] - c + 1 )"	761:3:18846:18881	2789704	0	True				
ANR	2789781	CallExpression	"memset ( mask + c , 1 , input [ 3 ] - c + 1 )"		2789704	0					
ANR	2789782	Callee	memset		2789704	0					
ANR	2789783	Identifier	memset		2789704	0					
ANR	2789784	ArgumentList	mask + c		2789704	1					
ANR	2789785	Argument	mask + c		2789704	0					
ANR	2789786	AdditiveExpression	mask + c		2789704	0		+			
ANR	2789787	Identifier	mask		2789704	0					
ANR	2789788	Identifier	c		2789704	1					
ANR	2789789	Argument	1		2789704	1					
ANR	2789790	PrimaryExpression	1		2789704	0					
ANR	2789791	Argument	input [ 3 ] - c + 1		2789704	2					
ANR	2789792	AdditiveExpression	input [ 3 ] - c + 1		2789704	0		-			
ANR	2789793	ArrayIndexing	input [ 3 ]		2789704	0					
ANR	2789794	Identifier	input		2789704	0					
ANR	2789795	PrimaryExpression	3		2789704	1					
ANR	2789796	AdditiveExpression	c + 1		2789704	1		+			
ANR	2789797	Identifier	c		2789704	0					
ANR	2789798	PrimaryExpression	1		2789704	1					
ANR	2789799	ExpressionStatement	input += 3	762:3:18886:18894	2789704	1	True				
ANR	2789800	AssignmentExpression	input += 3		2789704	0		+=			
ANR	2789801	Identifier	input		2789704	0					
ANR	2789802	PrimaryExpression	3		2789704	1					
ANR	2789803	ElseStatement	else		2789704	0					
ANR	2789804	IfStatement	if ( ( input + 1 < end ) && input [ 0 ] == '.' && input [ 1 ] == '.' )		2789704	0					
ANR	2789805	Condition	( input + 1 < end ) && input [ 0 ] == '.' && input [ 1 ] == '.'	763:13:18909:18961	2789704	0	True				
ANR	2789806	AndExpression	( input + 1 < end ) && input [ 0 ] == '.' && input [ 1 ] == '.'		2789704	0		&&			
ANR	2789807	RelationalExpression	input + 1 < end		2789704	0		<			
ANR	2789808	AdditiveExpression	input + 1		2789704	0		+			
ANR	2789809	Identifier	input		2789704	0					
ANR	2789810	PrimaryExpression	1		2789704	1					
ANR	2789811	Identifier	end		2789704	1					
ANR	2789812	AndExpression	input [ 0 ] == '.' && input [ 1 ] == '.'		2789704	1		&&			
ANR	2789813	EqualityExpression	input [ 0 ] == '.'		2789704	0		==			
ANR	2789814	ArrayIndexing	input [ 0 ]		2789704	0					
ANR	2789815	Identifier	input		2789704	0					
ANR	2789816	PrimaryExpression	0		2789704	1					
ANR	2789817	PrimaryExpression	'.'		2789704	1					
ANR	2789818	EqualityExpression	input [ 1 ] == '.'		2789704	1		==			
ANR	2789819	ArrayIndexing	input [ 1 ]		2789704	0					
ANR	2789820	Identifier	input		2789704	0					
ANR	2789821	PrimaryExpression	1		2789704	1					
ANR	2789822	PrimaryExpression	'.'		2789704	1					
ANR	2789823	CompoundStatement		13:68:351:351	2789704	1					
ANR	2789824	IfStatement	if ( end - len >= input )		2789704	0					
ANR	2789825	Condition	end - len >= input	766:7:19087:19102	2789704	0	True				
ANR	2789826	RelationalExpression	end - len >= input		2789704	0		>=			
ANR	2789827	AdditiveExpression	end - len		2789704	0		-			
ANR	2789828	Identifier	end		2789704	0					
ANR	2789829	Identifier	len		2789704	1					
ANR	2789830	Identifier	input		2789704	1					
ANR	2789831	CompoundStatement		16:25:492:492	2789704	1					
ANR	2789832	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range, no character to the left of '..'"" )"	767:4:19142:19231	2789704	0	True				
ANR	2789833	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range, no character to the left of '..'"" )"		2789704	0					
ANR	2789834	Callee	php_error_docref		2789704	0					
ANR	2789835	Identifier	php_error_docref		2789704	0					
ANR	2789836	ArgumentList	NULL		2789704	1					
ANR	2789837	Argument	NULL		2789704	0					
ANR	2789838	Identifier	NULL		2789704	0					
ANR	2789839	Argument	E_WARNING		2789704	1					
ANR	2789840	Identifier	E_WARNING		2789704	0					
ANR	2789841	Argument	"""Invalid '..'-range, no character to the left of '..'"""		2789704	2					
ANR	2789842	PrimaryExpression	"""Invalid '..'-range, no character to the left of '..'"""		2789704	0					
ANR	2789843	ExpressionStatement	result = FAILURE	768:4:19237:19253	2789704	1	True				
ANR	2789844	AssignmentExpression	result = FAILURE		2789704	0		=			
ANR	2789845	Identifier	result		2789704	0					
ANR	2789846	Identifier	FAILURE		2789704	1					
ANR	2789847	ContinueStatement	continue ;	769:4:19259:19267	2789704	2	True				
ANR	2789848	IfStatement	if ( input + 2 >= end )		2789704	1					
ANR	2789849	Condition	input + 2 >= end	771:7:19281:19294	2789704	0	True				
ANR	2789850	RelationalExpression	input + 2 >= end		2789704	0		>=			
ANR	2789851	AdditiveExpression	input + 2		2789704	0		+			
ANR	2789852	Identifier	input		2789704	0					
ANR	2789853	PrimaryExpression	2		2789704	1					
ANR	2789854	Identifier	end		2789704	1					
ANR	2789855	CompoundStatement		21:23:684:684	2789704	1					
ANR	2789856	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range, no character to the right of '..'"" )"	772:4:19334:19424	2789704	0	True				
ANR	2789857	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range, no character to the right of '..'"" )"		2789704	0					
ANR	2789858	Callee	php_error_docref		2789704	0					
ANR	2789859	Identifier	php_error_docref		2789704	0					
ANR	2789860	ArgumentList	NULL		2789704	1					
ANR	2789861	Argument	NULL		2789704	0					
ANR	2789862	Identifier	NULL		2789704	0					
ANR	2789863	Argument	E_WARNING		2789704	1					
ANR	2789864	Identifier	E_WARNING		2789704	0					
ANR	2789865	Argument	"""Invalid '..'-range, no character to the right of '..'"""		2789704	2					
ANR	2789866	PrimaryExpression	"""Invalid '..'-range, no character to the right of '..'"""		2789704	0					
ANR	2789867	ExpressionStatement	result = FAILURE	773:4:19430:19446	2789704	1	True				
ANR	2789868	AssignmentExpression	result = FAILURE		2789704	0		=			
ANR	2789869	Identifier	result		2789704	0					
ANR	2789870	Identifier	FAILURE		2789704	1					
ANR	2789871	ContinueStatement	continue ;	774:4:19452:19460	2789704	2	True				
ANR	2789872	IfStatement	if ( input [ - 1 ] > input [ 2 ] )		2789704	2					
ANR	2789873	Condition	input [ - 1 ] > input [ 2 ]	776:7:19474:19493	2789704	0	True				
ANR	2789874	RelationalExpression	input [ - 1 ] > input [ 2 ]		2789704	0		>			
ANR	2789875	ArrayIndexing	input [ - 1 ]		2789704	0					
ANR	2789876	Identifier	input		2789704	0					
ANR	2789877	UnaryOperationExpression	- 1		2789704	1					
ANR	2789878	UnaryOperator	-		2789704	0					
ANR	2789879	PrimaryExpression	1		2789704	1					
ANR	2789880	ArrayIndexing	input [ 2 ]		2789704	1					
ANR	2789881	Identifier	input		2789704	0					
ANR	2789882	PrimaryExpression	2		2789704	1					
ANR	2789883	CompoundStatement		26:29:883:883	2789704	1					
ANR	2789884	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range, '..'-range needs to be incrementing"" )"	777:4:19520:19612	2789704	0	True				
ANR	2789885	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range, '..'-range needs to be incrementing"" )"		2789704	0					
ANR	2789886	Callee	php_error_docref		2789704	0					
ANR	2789887	Identifier	php_error_docref		2789704	0					
ANR	2789888	ArgumentList	NULL		2789704	1					
ANR	2789889	Argument	NULL		2789704	0					
ANR	2789890	Identifier	NULL		2789704	0					
ANR	2789891	Argument	E_WARNING		2789704	1					
ANR	2789892	Identifier	E_WARNING		2789704	0					
ANR	2789893	Argument	"""Invalid '..'-range, '..'-range needs to be incrementing"""		2789704	2					
ANR	2789894	PrimaryExpression	"""Invalid '..'-range, '..'-range needs to be incrementing"""		2789704	0					
ANR	2789895	ExpressionStatement	result = FAILURE	778:4:19618:19634	2789704	1	True				
ANR	2789896	AssignmentExpression	result = FAILURE		2789704	0		=			
ANR	2789897	Identifier	result		2789704	0					
ANR	2789898	Identifier	FAILURE		2789704	1					
ANR	2789899	ContinueStatement	continue ;	779:4:19640:19648	2789704	2	True				
ANR	2789900	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range"" )"	782:3:19727:19782	2789704	3	True				
ANR	2789901	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid '..'-range"" )"		2789704	0					
ANR	2789902	Callee	php_error_docref		2789704	0					
ANR	2789903	Identifier	php_error_docref		2789704	0					
ANR	2789904	ArgumentList	NULL		2789704	1					
ANR	2789905	Argument	NULL		2789704	0					
ANR	2789906	Identifier	NULL		2789704	0					
ANR	2789907	Argument	E_WARNING		2789704	1					
ANR	2789908	Identifier	E_WARNING		2789704	0					
ANR	2789909	Argument	"""Invalid '..'-range"""		2789704	2					
ANR	2789910	PrimaryExpression	"""Invalid '..'-range"""		2789704	0					
ANR	2789911	ExpressionStatement	result = FAILURE	783:3:19787:19803	2789704	4	True				
ANR	2789912	AssignmentExpression	result = FAILURE		2789704	0		=			
ANR	2789913	Identifier	result		2789704	0					
ANR	2789914	Identifier	FAILURE		2789704	1					
ANR	2789915	ContinueStatement	continue ;	784:3:19808:19816	2789704	5	True				
ANR	2789916	ElseStatement	else		2789704	0					
ANR	2789917	CompoundStatement		35:9:1214:1214	2789704	0					
ANR	2789918	ExpressionStatement	mask [ c ] = 1	786:3:19832:19841	2789704	0	True				
ANR	2789919	AssignmentExpression	mask [ c ] = 1		2789704	0		=			
ANR	2789920	ArrayIndexing	mask [ c ]		2789704	0					
ANR	2789921	Identifier	mask		2789704	0					
ANR	2789922	Identifier	c		2789704	1					
ANR	2789923	PrimaryExpression	1		2789704	1					
ANR	2789924	ReturnStatement	return result ;	789:1:19851:19864	2789704	5	True				
ANR	2789925	Identifier	result		2789704	0					
ANR	2789926	ReturnType	static inline int		2789704	1					
ANR	2789927	Identifier	php_charmask		2789704	2					
ANR	2789928	ParameterList	"unsigned char * input , size_t len , char * mask"		2789704	3					
ANR	2789929	Parameter	unsigned char * input	750:31:18566:18585	2789704	0	True				
ANR	2789930	ParameterType	unsigned char *		2789704	0					
ANR	2789931	Identifier	input		2789704	1					
ANR	2789932	Parameter	size_t len	750:53:18588:18597	2789704	1	True				
ANR	2789933	ParameterType	size_t		2789704	0					
ANR	2789934	Identifier	len		2789704	1					
ANR	2789935	Parameter	char * mask	750:65:18600:18609	2789704	2	True				
ANR	2789936	ParameterType	char *		2789704	0					
ANR	2789937	Identifier	mask		2789704	1					
ANR	2789938	CFGEntryNode	ENTRY		2789704		True				
ANR	2789939	CFGExitNode	EXIT		2789704		True				
ANR	2789940	Symbol	c		2789704						
ANR	2789941	Symbol	SUCCESS		2789704						
ANR	2789942	Symbol	NULL		2789704						
ANR	2789943	Symbol	* mask		2789704						
ANR	2789944	Symbol	* input		2789704						
ANR	2789945	Symbol	FAILURE		2789704						
ANR	2789946	Symbol	* c		2789704						
ANR	2789947	Symbol	result		2789704						
ANR	2789948	Symbol	E_WARNING		2789704						
ANR	2789949	Symbol	input		2789704						
ANR	2789950	Symbol	len		2789704						
ANR	2789951	Symbol	end		2789704						
ANR	2789952	Symbol	mask		2789704						
ANR	2789953	Function	php_trim	799:0:20057:21818							
ANR	2789954	FunctionDef	"php_trim (zend_string * str , char * what , size_t what_len , int mode)"		2789953	0					
ANR	2789955	CompoundStatement		800:0:20143:21818	2789953	0					
ANR	2789956	IdentifierDeclStatement	const char * c = ZSTR_VAL ( str ) ;	801:1:20146:20175	2789953	0	True				
ANR	2789957	IdentifierDecl	* c = ZSTR_VAL ( str )		2789953	0					
ANR	2789958	IdentifierDeclType	const char *		2789953	0					
ANR	2789959	Identifier	c		2789953	1					
ANR	2789960	AssignmentExpression	* c = ZSTR_VAL ( str )		2789953	2		=			
ANR	2789961	Identifier	c		2789953	0					
ANR	2789962	CallExpression	ZSTR_VAL ( str )		2789953	1					
ANR	2789963	Callee	ZSTR_VAL		2789953	0					
ANR	2789964	Identifier	ZSTR_VAL		2789953	0					
ANR	2789965	ArgumentList	str		2789953	1					
ANR	2789966	Argument	str		2789953	0					
ANR	2789967	Identifier	str		2789953	0					
ANR	2789968	IdentifierDeclStatement	size_t len = ZSTR_LEN ( str ) ;	802:1:20178:20204	2789953	1	True				
ANR	2789969	IdentifierDecl	len = ZSTR_LEN ( str )		2789953	0					
ANR	2789970	IdentifierDeclType	size_t		2789953	0					
ANR	2789971	Identifier	len		2789953	1					
ANR	2789972	AssignmentExpression	len = ZSTR_LEN ( str )		2789953	2		=			
ANR	2789973	Identifier	len		2789953	0					
ANR	2789974	CallExpression	ZSTR_LEN ( str )		2789953	1					
ANR	2789975	Callee	ZSTR_LEN		2789953	0					
ANR	2789976	Identifier	ZSTR_LEN		2789953	0					
ANR	2789977	ArgumentList	str		2789953	1					
ANR	2789978	Argument	str		2789953	0					
ANR	2789979	Identifier	str		2789953	0					
ANR	2789980	Statement	register	803:1:20207:20214	2789953	2	True				
ANR	2789981	IdentifierDeclStatement	size_t i ;	803:10:20216:20224	2789953	3	True				
ANR	2789982	IdentifierDecl	i		2789953	0					
ANR	2789983	IdentifierDeclType	size_t		2789953	0					
ANR	2789984	Identifier	i		2789953	1					
ANR	2789985	IdentifierDeclStatement	size_t trimmed = 0 ;	804:1:20227:20245	2789953	4	True				
ANR	2789986	IdentifierDecl	trimmed = 0		2789953	0					
ANR	2789987	IdentifierDeclType	size_t		2789953	0					
ANR	2789988	Identifier	trimmed		2789953	1					
ANR	2789989	AssignmentExpression	trimmed = 0		2789953	2		=			
ANR	2789990	Identifier	trimmed		2789953	0					
ANR	2789991	PrimaryExpression	0		2789953	1					
ANR	2789992	IdentifierDeclStatement	char mask [ 256 ] ;	805:1:20248:20262	2789953	5	True				
ANR	2789993	IdentifierDecl	mask [ 256 ]		2789953	0					
ANR	2789994	IdentifierDeclType	char [ 256 ]		2789953	0					
ANR	2789995	Identifier	mask		2789953	1					
ANR	2789996	PrimaryExpression	256		2789953	2					
ANR	2789997	IfStatement	if ( what )		2789953	6					
ANR	2789998	Condition	what	807:5:20270:20273	2789953	0	True				
ANR	2789999	Identifier	what		2789953	0					
ANR	2790000	CompoundStatement		8:11:132:132	2789953	1					
ANR	2790001	IfStatement	if ( what_len == 1 )		2789953	0					
ANR	2790002	Condition	what_len == 1	808:6:20284:20296	2789953	0	True				
ANR	2790003	EqualityExpression	what_len == 1		2789953	0		==			
ANR	2790004	Identifier	what_len		2789953	0					
ANR	2790005	PrimaryExpression	1		2789953	1					
ANR	2790006	CompoundStatement		10:3:160:174	2789953	1					
ANR	2790007	IdentifierDeclStatement	char p = * what ;	809:3:20304:20318	2789953	0	True				
ANR	2790008	IdentifierDecl	p = * what		2789953	0					
ANR	2790009	IdentifierDeclType	char		2789953	0					
ANR	2790010	Identifier	p		2789953	1					
ANR	2790011	AssignmentExpression	p = * what		2789953	2		=			
ANR	2790012	Identifier	p		2789953	0					
ANR	2790013	UnaryOperationExpression	* what		2789953	1					
ANR	2790014	UnaryOperator	*		2789953	0					
ANR	2790015	Identifier	what		2789953	1					
ANR	2790016	IfStatement	if ( mode & 1 )		2789953	1					
ANR	2790017	Condition	mode & 1	810:7:20327:20334	2789953	0	True				
ANR	2790018	BitAndExpression	mode & 1		2789953	0		&			
ANR	2790019	Identifier	mode		2789953	0					
ANR	2790020	PrimaryExpression	1		2789953	1					
ANR	2790021	CompoundStatement		11:17:193:193	2789953	1					
ANR	2790022	ForStatement	for ( i = 0 ; i < len ; i ++ )		2789953	0					
ANR	2790023	ForInit	i = 0 ;	811:9:20348:20353	2789953	0	True				
ANR	2790024	AssignmentExpression	i = 0		2789953	0		=			
ANR	2790025	Identifier	i		2789953	0					
ANR	2790026	PrimaryExpression	0		2789953	1					
ANR	2790027	Condition	i < len	811:16:20355:20361	2789953	1	True				
ANR	2790028	RelationalExpression	i < len		2789953	0		<			
ANR	2790029	Identifier	i		2789953	0					
ANR	2790030	Identifier	len		2789953	1					
ANR	2790031	PostIncDecOperationExpression	i ++	811:25:20364:20366	2789953	2	True				
ANR	2790032	Identifier	i		2789953	0					
ANR	2790033	IncDec	++		2789953	1					
ANR	2790034	CompoundStatement		12:30:225:225	2789953	3					
ANR	2790035	IfStatement	if ( c [ i ] == p )		2789953	0					
ANR	2790036	Condition	c [ i ] == p	812:9:20380:20388	2789953	0	True				
ANR	2790037	EqualityExpression	c [ i ] == p		2789953	0		==			
ANR	2790038	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790039	Identifier	c		2789953	0					
ANR	2790040	Identifier	i		2789953	1					
ANR	2790041	Identifier	p		2789953	1					
ANR	2790042	CompoundStatement		13:20:247:247	2789953	1					
ANR	2790043	ExpressionStatement	trimmed ++	813:6:20399:20408	2789953	0	True				
ANR	2790044	PostIncDecOperationExpression	trimmed ++		2789953	0					
ANR	2790045	Identifier	trimmed		2789953	0					
ANR	2790046	IncDec	++		2789953	1					
ANR	2790047	ElseStatement	else		2789953	0					
ANR	2790048	CompoundStatement		15:12:278:278	2789953	0					
ANR	2790049	BreakStatement	break ;	815:6:20430:20435	2789953	0	True				
ANR	2790050	ExpressionStatement	len -= trimmed	818:4:20454:20468	2789953	1	True				
ANR	2790051	AssignmentExpression	len -= trimmed		2789953	0		-=			
ANR	2790052	Identifier	len		2789953	0					
ANR	2790053	Identifier	trimmed		2789953	1					
ANR	2790054	ExpressionStatement	c += trimmed	819:4:20474:20486	2789953	2	True				
ANR	2790055	AssignmentExpression	c += trimmed		2789953	0		+=			
ANR	2790056	Identifier	c		2789953	0					
ANR	2790057	Identifier	trimmed		2789953	1					
ANR	2790058	IfStatement	if ( mode & 2 )		2789953	2					
ANR	2790059	Condition	mode & 2	821:7:20500:20507	2789953	0	True				
ANR	2790060	BitAndExpression	mode & 2		2789953	0		&			
ANR	2790061	Identifier	mode		2789953	0					
ANR	2790062	PrimaryExpression	2		2789953	1					
ANR	2790063	CompoundStatement		22:17:366:366	2789953	1					
ANR	2790064	IfStatement	if ( len > 0 )		2789953	0					
ANR	2790065	Condition	len > 0	822:8:20520:20526	2789953	0	True				
ANR	2790066	RelationalExpression	len > 0		2789953	0		>			
ANR	2790067	Identifier	len		2789953	0					
ANR	2790068	PrimaryExpression	0		2789953	1					
ANR	2790069	CompoundStatement		23:17:385:385	2789953	1					
ANR	2790070	ExpressionStatement	i = len - 1	823:5:20536:20547	2789953	0	True				
ANR	2790071	AssignmentExpression	i = len - 1		2789953	0		=			
ANR	2790072	Identifier	i		2789953	0					
ANR	2790073	AdditiveExpression	len - 1		2789953	1		-			
ANR	2790074	Identifier	len		2789953	0					
ANR	2790075	PrimaryExpression	1		2789953	1					
ANR	2790076	DoStatement	do		2789953	1					
ANR	2790077	CompoundStatement		25:8:413:413	2789953	0					
ANR	2790078	IfStatement	if ( c [ i ] == p )		2789953	0					
ANR	2790079	Condition	c [ i ] == p	825:10:20569:20577	2789953	0	True				
ANR	2790080	EqualityExpression	c [ i ] == p		2789953	0		==			
ANR	2790081	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790082	Identifier	c		2789953	0					
ANR	2790083	Identifier	i		2789953	1					
ANR	2790084	Identifier	p		2789953	1					
ANR	2790085	CompoundStatement		26:21:436:436	2789953	1					
ANR	2790086	ExpressionStatement	len --	826:7:20589:20594	2789953	0	True				
ANR	2790087	PostIncDecOperationExpression	len --		2789953	0					
ANR	2790088	Identifier	len		2789953	0					
ANR	2790089	IncDec	--		2789953	1					
ANR	2790090	ElseStatement	else		2789953	0					
ANR	2790091	CompoundStatement		28:13:465:465	2789953	0					
ANR	2790092	BreakStatement	break ;	828:7:20618:20623	2789953	0	True				
ANR	2790093	Condition	i -- != 0	830:14:20647:20654	2789953	1	True				
ANR	2790094	EqualityExpression	i -- != 0		2789953	0		!=			
ANR	2790095	PostIncDecOperationExpression	i --		2789953	0					
ANR	2790096	Identifier	i		2789953	0					
ANR	2790097	IncDec	--		2789953	1					
ANR	2790098	PrimaryExpression	0		2789953	1					
ANR	2790099	ElseStatement	else		2789953	0					
ANR	2790100	CompoundStatement		34:9:534:534	2789953	0					
ANR	2790101	ExpressionStatement	"php_charmask ( ( unsigned char * ) what , what_len , mask )"	834:3:20683:20733	2789953	0	True				
ANR	2790102	CallExpression	"php_charmask ( ( unsigned char * ) what , what_len , mask )"		2789953	0					
ANR	2790103	Callee	php_charmask		2789953	0					
ANR	2790104	Identifier	php_charmask		2789953	0					
ANR	2790105	ArgumentList	( unsigned char * ) what		2789953	1					
ANR	2790106	Argument	( unsigned char * ) what		2789953	0					
ANR	2790107	CastExpression	( unsigned char * ) what		2789953	0					
ANR	2790108	CastTarget	unsigned char *		2789953	0					
ANR	2790109	Identifier	what		2789953	1					
ANR	2790110	Argument	what_len		2789953	1					
ANR	2790111	Identifier	what_len		2789953	0					
ANR	2790112	Argument	mask		2789953	2					
ANR	2790113	Identifier	mask		2789953	0					
ANR	2790114	IfStatement	if ( mode & 1 )		2789953	1					
ANR	2790115	Condition	mode & 1	836:7:20743:20750	2789953	0	True				
ANR	2790116	BitAndExpression	mode & 1		2789953	0		&			
ANR	2790117	Identifier	mode		2789953	0					
ANR	2790118	PrimaryExpression	1		2789953	1					
ANR	2790119	CompoundStatement		37:17:609:609	2789953	1					
ANR	2790120	ForStatement	for ( i = 0 ; i < len ; i ++ )		2789953	0					
ANR	2790121	ForInit	i = 0 ;	837:9:20764:20769	2789953	0	True				
ANR	2790122	AssignmentExpression	i = 0		2789953	0		=			
ANR	2790123	Identifier	i		2789953	0					
ANR	2790124	PrimaryExpression	0		2789953	1					
ANR	2790125	Condition	i < len	837:16:20771:20777	2789953	1	True				
ANR	2790126	RelationalExpression	i < len		2789953	0		<			
ANR	2790127	Identifier	i		2789953	0					
ANR	2790128	Identifier	len		2789953	1					
ANR	2790129	PostIncDecOperationExpression	i ++	837:25:20780:20782	2789953	2	True				
ANR	2790130	Identifier	i		2789953	0					
ANR	2790131	IncDec	++		2789953	1					
ANR	2790132	CompoundStatement		38:30:641:641	2789953	3					
ANR	2790133	IfStatement	if ( mask [ ( unsigned char ) c [ i ] ] )		2789953	0					
ANR	2790134	Condition	mask [ ( unsigned char ) c [ i ] ]	838:9:20796:20820	2789953	0	True				
ANR	2790135	ArrayIndexing	mask [ ( unsigned char ) c [ i ] ]		2789953	0					
ANR	2790136	Identifier	mask		2789953	0					
ANR	2790137	CastExpression	( unsigned char ) c [ i ]		2789953	1					
ANR	2790138	CastTarget	unsigned char		2789953	0					
ANR	2790139	ArrayIndexing	c [ i ]		2789953	1					
ANR	2790140	Identifier	c		2789953	0					
ANR	2790141	Identifier	i		2789953	1					
ANR	2790142	CompoundStatement		39:36:679:679	2789953	1					
ANR	2790143	ExpressionStatement	trimmed ++	839:6:20831:20840	2789953	0	True				
ANR	2790144	PostIncDecOperationExpression	trimmed ++		2789953	0					
ANR	2790145	Identifier	trimmed		2789953	0					
ANR	2790146	IncDec	++		2789953	1					
ANR	2790147	ElseStatement	else		2789953	0					
ANR	2790148	CompoundStatement		41:12:710:710	2789953	0					
ANR	2790149	BreakStatement	break ;	841:6:20862:20867	2789953	0	True				
ANR	2790150	ExpressionStatement	len -= trimmed	844:4:20886:20900	2789953	1	True				
ANR	2790151	AssignmentExpression	len -= trimmed		2789953	0		-=			
ANR	2790152	Identifier	len		2789953	0					
ANR	2790153	Identifier	trimmed		2789953	1					
ANR	2790154	ExpressionStatement	c += trimmed	845:4:20906:20918	2789953	2	True				
ANR	2790155	AssignmentExpression	c += trimmed		2789953	0		+=			
ANR	2790156	Identifier	c		2789953	0					
ANR	2790157	Identifier	trimmed		2789953	1					
ANR	2790158	IfStatement	if ( mode & 2 )		2789953	2					
ANR	2790159	Condition	mode & 2	847:7:20932:20939	2789953	0	True				
ANR	2790160	BitAndExpression	mode & 2		2789953	0		&			
ANR	2790161	Identifier	mode		2789953	0					
ANR	2790162	PrimaryExpression	2		2789953	1					
ANR	2790163	CompoundStatement		48:17:798:798	2789953	1					
ANR	2790164	IfStatement	if ( len > 0 )		2789953	0					
ANR	2790165	Condition	len > 0	848:8:20952:20958	2789953	0	True				
ANR	2790166	RelationalExpression	len > 0		2789953	0		>			
ANR	2790167	Identifier	len		2789953	0					
ANR	2790168	PrimaryExpression	0		2789953	1					
ANR	2790169	CompoundStatement		49:17:817:817	2789953	1					
ANR	2790170	ExpressionStatement	i = len - 1	849:5:20968:20979	2789953	0	True				
ANR	2790171	AssignmentExpression	i = len - 1		2789953	0		=			
ANR	2790172	Identifier	i		2789953	0					
ANR	2790173	AdditiveExpression	len - 1		2789953	1		-			
ANR	2790174	Identifier	len		2789953	0					
ANR	2790175	PrimaryExpression	1		2789953	1					
ANR	2790176	DoStatement	do		2789953	1					
ANR	2790177	CompoundStatement		51:8:845:845	2789953	0					
ANR	2790178	IfStatement	if ( mask [ ( unsigned char ) c [ i ] ] )		2789953	0					
ANR	2790179	Condition	mask [ ( unsigned char ) c [ i ] ]	851:10:21001:21025	2789953	0	True				
ANR	2790180	ArrayIndexing	mask [ ( unsigned char ) c [ i ] ]		2789953	0					
ANR	2790181	Identifier	mask		2789953	0					
ANR	2790182	CastExpression	( unsigned char ) c [ i ]		2789953	1					
ANR	2790183	CastTarget	unsigned char		2789953	0					
ANR	2790184	ArrayIndexing	c [ i ]		2789953	1					
ANR	2790185	Identifier	c		2789953	0					
ANR	2790186	Identifier	i		2789953	1					
ANR	2790187	CompoundStatement		52:37:884:884	2789953	1					
ANR	2790188	ExpressionStatement	len --	852:7:21037:21042	2789953	0	True				
ANR	2790189	PostIncDecOperationExpression	len --		2789953	0					
ANR	2790190	Identifier	len		2789953	0					
ANR	2790191	IncDec	--		2789953	1					
ANR	2790192	ElseStatement	else		2789953	0					
ANR	2790193	CompoundStatement		54:13:913:913	2789953	0					
ANR	2790194	BreakStatement	break ;	854:7:21066:21071	2789953	0	True				
ANR	2790195	Condition	i -- != 0	856:14:21095:21102	2789953	1	True				
ANR	2790196	EqualityExpression	i -- != 0		2789953	0		!=			
ANR	2790197	PostIncDecOperationExpression	i --		2789953	0					
ANR	2790198	Identifier	i		2789953	0					
ANR	2790199	IncDec	--		2789953	1					
ANR	2790200	PrimaryExpression	0		2789953	1					
ANR	2790201	ElseStatement	else		2789953	0					
ANR	2790202	CompoundStatement		61:8:985:985	2789953	0					
ANR	2790203	IfStatement	if ( mode & 1 )		2789953	0					
ANR	2790204	Condition	mode & 1	861:6:21137:21144	2789953	0	True				
ANR	2790205	BitAndExpression	mode & 1		2789953	0		&			
ANR	2790206	Identifier	mode		2789953	0					
ANR	2790207	PrimaryExpression	1		2789953	1					
ANR	2790208	CompoundStatement		62:16:1003:1003	2789953	1					
ANR	2790209	ForStatement	for ( i = 0 ; i < len ; i ++ )		2789953	0					
ANR	2790210	ForInit	i = 0 ;	862:8:21157:21162	2789953	0	True				
ANR	2790211	AssignmentExpression	i = 0		2789953	0		=			
ANR	2790212	Identifier	i		2789953	0					
ANR	2790213	PrimaryExpression	0		2789953	1					
ANR	2790214	Condition	i < len	862:15:21164:21170	2789953	1	True				
ANR	2790215	RelationalExpression	i < len		2789953	0		<			
ANR	2790216	Identifier	i		2789953	0					
ANR	2790217	Identifier	len		2789953	1					
ANR	2790218	PostIncDecOperationExpression	i ++	862:24:21173:21175	2789953	2	True				
ANR	2790219	Identifier	i		2789953	0					
ANR	2790220	IncDec	++		2789953	1					
ANR	2790221	CompoundStatement		63:29:1034:1034	2789953	3					
ANR	2790222	IfStatement	if ( ( unsigned char ) c [ i ] <= ' ' && ( c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0' ) )		2789953	0					
ANR	2790223	Condition	( unsigned char ) c [ i ] <= ' ' && ( c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0' )	863:8:21188:21318	2789953	0	True				
ANR	2790224	AndExpression	( unsigned char ) c [ i ] <= ' ' && ( c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0' )		2789953	0		&&			
ANR	2790225	RelationalExpression	( unsigned char ) c [ i ] <= ' '		2789953	0		<=			
ANR	2790226	CastExpression	( unsigned char ) c [ i ]		2789953	0					
ANR	2790227	CastTarget	unsigned char		2789953	0					
ANR	2790228	ArrayIndexing	c [ i ]		2789953	1					
ANR	2790229	Identifier	c		2789953	0					
ANR	2790230	Identifier	i		2789953	1					
ANR	2790231	PrimaryExpression	' '		2789953	1					
ANR	2790232	OrExpression	c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790233	EqualityExpression	c [ i ] == ' '		2789953	0		==			
ANR	2790234	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790235	Identifier	c		2789953	0					
ANR	2790236	Identifier	i		2789953	1					
ANR	2790237	PrimaryExpression	' '		2789953	1					
ANR	2790238	OrExpression	c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790239	EqualityExpression	c [ i ] == '\\n'		2789953	0		==			
ANR	2790240	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790241	Identifier	c		2789953	0					
ANR	2790242	Identifier	i		2789953	1					
ANR	2790243	PrimaryExpression	'\\n'		2789953	1					
ANR	2790244	OrExpression	c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790245	EqualityExpression	c [ i ] == '\\r'		2789953	0		==			
ANR	2790246	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790247	Identifier	c		2789953	0					
ANR	2790248	Identifier	i		2789953	1					
ANR	2790249	PrimaryExpression	'\\r'		2789953	1					
ANR	2790250	OrExpression	c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790251	EqualityExpression	c [ i ] == '\\t'		2789953	0		==			
ANR	2790252	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790253	Identifier	c		2789953	0					
ANR	2790254	Identifier	i		2789953	1					
ANR	2790255	PrimaryExpression	'\\t'		2789953	1					
ANR	2790256	OrExpression	c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790257	EqualityExpression	c [ i ] == '\\v'		2789953	0		==			
ANR	2790258	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790259	Identifier	c		2789953	0					
ANR	2790260	Identifier	i		2789953	1					
ANR	2790261	PrimaryExpression	'\\v'		2789953	1					
ANR	2790262	EqualityExpression	c [ i ] == '\\0'		2789953	1		==			
ANR	2790263	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790264	Identifier	c		2789953	0					
ANR	2790265	Identifier	i		2789953	1					
ANR	2790266	PrimaryExpression	'\\0'		2789953	1					
ANR	2790267	CompoundStatement		65:103:1177:1177	2789953	1					
ANR	2790268	ExpressionStatement	trimmed ++	865:5:21328:21337	2789953	0	True				
ANR	2790269	PostIncDecOperationExpression	trimmed ++		2789953	0					
ANR	2790270	Identifier	trimmed		2789953	0					
ANR	2790271	IncDec	++		2789953	1					
ANR	2790272	ElseStatement	else		2789953	0					
ANR	2790273	CompoundStatement		67:11:1206:1206	2789953	0					
ANR	2790274	BreakStatement	break ;	867:5:21357:21362	2789953	0	True				
ANR	2790275	ExpressionStatement	len -= trimmed	870:3:21378:21392	2789953	1	True				
ANR	2790276	AssignmentExpression	len -= trimmed		2789953	0		-=			
ANR	2790277	Identifier	len		2789953	0					
ANR	2790278	Identifier	trimmed		2789953	1					
ANR	2790279	ExpressionStatement	c += trimmed	871:3:21397:21409	2789953	2	True				
ANR	2790280	AssignmentExpression	c += trimmed		2789953	0		+=			
ANR	2790281	Identifier	c		2789953	0					
ANR	2790282	Identifier	trimmed		2789953	1					
ANR	2790283	IfStatement	if ( mode & 2 )		2789953	1					
ANR	2790284	Condition	mode & 2	873:6:21421:21428	2789953	0	True				
ANR	2790285	BitAndExpression	mode & 2		2789953	0		&			
ANR	2790286	Identifier	mode		2789953	0					
ANR	2790287	PrimaryExpression	2		2789953	1					
ANR	2790288	CompoundStatement		74:16:1287:1287	2789953	1					
ANR	2790289	IfStatement	if ( len > 0 )		2789953	0					
ANR	2790290	Condition	len > 0	874:7:21440:21446	2789953	0	True				
ANR	2790291	RelationalExpression	len > 0		2789953	0		>			
ANR	2790292	Identifier	len		2789953	0					
ANR	2790293	PrimaryExpression	0		2789953	1					
ANR	2790294	CompoundStatement		75:16:1305:1305	2789953	1					
ANR	2790295	ExpressionStatement	i = len - 1	875:4:21455:21466	2789953	0	True				
ANR	2790296	AssignmentExpression	i = len - 1		2789953	0		=			
ANR	2790297	Identifier	i		2789953	0					
ANR	2790298	AdditiveExpression	len - 1		2789953	1		-			
ANR	2790299	Identifier	len		2789953	0					
ANR	2790300	PrimaryExpression	1		2789953	1					
ANR	2790301	DoStatement	do		2789953	1					
ANR	2790302	CompoundStatement		77:7:1331:1331	2789953	0					
ANR	2790303	IfStatement	if ( ( unsigned char ) c [ i ] <= ' ' && ( c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0' ) )		2789953	0					
ANR	2790304	Condition	( unsigned char ) c [ i ] <= ' ' && ( c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0' )	877:9:21486:21617	2789953	0	True				
ANR	2790305	AndExpression	( unsigned char ) c [ i ] <= ' ' && ( c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0' )		2789953	0		&&			
ANR	2790306	RelationalExpression	( unsigned char ) c [ i ] <= ' '		2789953	0		<=			
ANR	2790307	CastExpression	( unsigned char ) c [ i ]		2789953	0					
ANR	2790308	CastTarget	unsigned char		2789953	0					
ANR	2790309	ArrayIndexing	c [ i ]		2789953	1					
ANR	2790310	Identifier	c		2789953	0					
ANR	2790311	Identifier	i		2789953	1					
ANR	2790312	PrimaryExpression	' '		2789953	1					
ANR	2790313	OrExpression	c [ i ] == ' ' || c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790314	EqualityExpression	c [ i ] == ' '		2789953	0		==			
ANR	2790315	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790316	Identifier	c		2789953	0					
ANR	2790317	Identifier	i		2789953	1					
ANR	2790318	PrimaryExpression	' '		2789953	1					
ANR	2790319	OrExpression	c [ i ] == '\\n' || c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790320	EqualityExpression	c [ i ] == '\\n'		2789953	0		==			
ANR	2790321	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790322	Identifier	c		2789953	0					
ANR	2790323	Identifier	i		2789953	1					
ANR	2790324	PrimaryExpression	'\\n'		2789953	1					
ANR	2790325	OrExpression	c [ i ] == '\\r' || c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790326	EqualityExpression	c [ i ] == '\\r'		2789953	0		==			
ANR	2790327	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790328	Identifier	c		2789953	0					
ANR	2790329	Identifier	i		2789953	1					
ANR	2790330	PrimaryExpression	'\\r'		2789953	1					
ANR	2790331	OrExpression	c [ i ] == '\\t' || c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790332	EqualityExpression	c [ i ] == '\\t'		2789953	0		==			
ANR	2790333	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790334	Identifier	c		2789953	0					
ANR	2790335	Identifier	i		2789953	1					
ANR	2790336	PrimaryExpression	'\\t'		2789953	1					
ANR	2790337	OrExpression	c [ i ] == '\\v' || c [ i ] == '\\0'		2789953	1		||			
ANR	2790338	EqualityExpression	c [ i ] == '\\v'		2789953	0		==			
ANR	2790339	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790340	Identifier	c		2789953	0					
ANR	2790341	Identifier	i		2789953	1					
ANR	2790342	PrimaryExpression	'\\v'		2789953	1					
ANR	2790343	EqualityExpression	c [ i ] == '\\0'		2789953	1		==			
ANR	2790344	ArrayIndexing	c [ i ]		2789953	0					
ANR	2790345	Identifier	c		2789953	0					
ANR	2790346	Identifier	i		2789953	1					
ANR	2790347	PrimaryExpression	'\\0'		2789953	1					
ANR	2790348	CompoundStatement		79:104:1476:1476	2789953	1					
ANR	2790349	ExpressionStatement	len --	879:6:21628:21633	2789953	0	True				
ANR	2790350	PostIncDecOperationExpression	len --		2789953	0					
ANR	2790351	Identifier	len		2789953	0					
ANR	2790352	IncDec	--		2789953	1					
ANR	2790353	ElseStatement	else		2789953	0					
ANR	2790354	CompoundStatement		81:12:1503:1503	2789953	0					
ANR	2790355	BreakStatement	break ;	881:6:21655:21660	2789953	0	True				
ANR	2790356	Condition	i -- != 0	883:13:21682:21689	2789953	1	True				
ANR	2790357	EqualityExpression	i -- != 0		2789953	0		!=			
ANR	2790358	PostIncDecOperationExpression	i --		2789953	0					
ANR	2790359	Identifier	i		2789953	0					
ANR	2790360	IncDec	--		2789953	1					
ANR	2790361	PrimaryExpression	0		2789953	1					
ANR	2790362	IfStatement	if ( ZSTR_LEN ( str ) == len )		2789953	7					
ANR	2790363	Condition	ZSTR_LEN ( str ) == len	888:5:21711:21730	2789953	0	True				
ANR	2790364	EqualityExpression	ZSTR_LEN ( str ) == len		2789953	0		==			
ANR	2790365	CallExpression	ZSTR_LEN ( str )		2789953	0					
ANR	2790366	Callee	ZSTR_LEN		2789953	0					
ANR	2790367	Identifier	ZSTR_LEN		2789953	0					
ANR	2790368	ArgumentList	str		2789953	1					
ANR	2790369	Argument	str		2789953	0					
ANR	2790370	Identifier	str		2789953	0					
ANR	2790371	Identifier	len		2789953	1					
ANR	2790372	CompoundStatement		89:27:1589:1589	2789953	1					
ANR	2790373	ReturnStatement	return zend_string_copy ( str ) ;	889:2:21737:21765	2789953	0	True				
ANR	2790374	CallExpression	zend_string_copy ( str )		2789953	0					
ANR	2790375	Callee	zend_string_copy		2789953	0					
ANR	2790376	Identifier	zend_string_copy		2789953	0					
ANR	2790377	ArgumentList	str		2789953	1					
ANR	2790378	Argument	str		2789953	0					
ANR	2790379	Identifier	str		2789953	0					
ANR	2790380	ElseStatement	else		2789953	0					
ANR	2790381	CompoundStatement		91:8:1631:1631	2789953	0					
ANR	2790382	ReturnStatement	"return zend_string_init ( c , len , 0 ) ;"	891:2:21779:21813	2789953	0	True				
ANR	2790383	CallExpression	"zend_string_init ( c , len , 0 )"		2789953	0					
ANR	2790384	Callee	zend_string_init		2789953	0					
ANR	2790385	Identifier	zend_string_init		2789953	0					
ANR	2790386	ArgumentList	c		2789953	1					
ANR	2790387	Argument	c		2789953	0					
ANR	2790388	Identifier	c		2789953	0					
ANR	2790389	Argument	len		2789953	1					
ANR	2790390	Identifier	len		2789953	0					
ANR	2790391	Argument	0		2789953	2					
ANR	2790392	PrimaryExpression	0		2789953	0					
ANR	2790393	ReturnType	PHPAPI zend_string *		2789953	1					
ANR	2790394	Identifier	php_trim		2789953	2					
ANR	2790395	ParameterList	"zend_string * str , char * what , size_t what_len , int mode"		2789953	3					
ANR	2790396	Parameter	zend_string * str	799:29:20086:20101	2789953	0	True				
ANR	2790397	ParameterType	zend_string *		2789953	0					
ANR	2790398	Identifier	str		2789953	1					
ANR	2790399	Parameter	char * what	799:47:20104:20113	2789953	1	True				
ANR	2790400	ParameterType	char *		2789953	0					
ANR	2790401	Identifier	what		2789953	1					
ANR	2790402	Parameter	size_t what_len	799:59:20116:20130	2789953	2	True				
ANR	2790403	ParameterType	size_t		2789953	0					
ANR	2790404	Identifier	what_len		2789953	1					
ANR	2790405	Parameter	int mode	799:76:20133:20140	2789953	3	True				
ANR	2790406	ParameterType	int		2789953	0					
ANR	2790407	Identifier	mode		2789953	1					
ANR	2790408	CFGEntryNode	ENTRY		2789953		True				
ANR	2790409	CFGExitNode	EXIT		2789953		True				
ANR	2790410	Symbol	* * i		2789953						
ANR	2790411	Symbol	c		2789953						
ANR	2790412	Symbol	* mask		2789953						
ANR	2790413	Symbol	* * c		2789953						
ANR	2790414	Symbol	i		2789953						
ANR	2790415	Symbol	zend_string_copy		2789953						
ANR	2790416	Symbol	* c		2789953						
ANR	2790417	Symbol	ZSTR_VAL		2789953						
ANR	2790418	Symbol	str		2789953						
ANR	2790419	Symbol	mode		2789953						
ANR	2790420	Symbol	p		2789953						
ANR	2790421	Symbol	zend_string_init		2789953						
ANR	2790422	Symbol	what		2789953						
ANR	2790423	Symbol	what_len		2789953						
ANR	2790424	Symbol	* i		2789953						
ANR	2790425	Symbol	len		2789953						
ANR	2790426	Symbol	ZSTR_LEN		2789953						
ANR	2790427	Symbol	trimmed		2789953						
ANR	2790428	Symbol	* what		2789953						
ANR	2790429	Symbol	mask		2789953						
ANR	2790430	DeclStmt									
ANR	2790431	Decl							zend_string	zend_string *	str
ANR	2790432	DeclStmt									
ANR	2790433	Decl							zend_string	zend_string *	what
ANR	2790434	DeclStmt									
ANR	2790435	Decl							zend_string	zend_string *	text
ANR	2790436	DeclStmt									
ANR	2790437	Decl							char	char *	breakchar
ANR	2790438	DeclStmt									
ANR	2790439	Decl							size_t	size_t	newtextlen
ANR	2790440	Decl							size_t	size_t	chk
ANR	2790441	Decl							size_t	size_t	breakchar_len
ANR	2790442	DeclStmt									
ANR	2790443	Decl							size_t	size_t	alloced
ANR	2790444	DeclStmt									
ANR	2790445	Decl							zend_long	zend_long	current
ANR	2790446	Decl							zend_long	zend_long	laststart
ANR	2790447	Decl							zend_long	zend_long	lastspace
ANR	2790448	DeclStmt									
ANR	2790449	Decl							zend_long	zend_long	linelength
ANR	2790450	DeclStmt									
ANR	2790451	Decl							zend_bool	zend_bool	docut
ANR	2790452	DeclStmt									
ANR	2790453	Decl							zend_string	zend_string *	newtext
ANR	2790454	Function	php_explode	1086:0:27940:28733							
ANR	2790455	FunctionDef	"php_explode (const zend_string * delim , zend_string * str , zval * return_value , zend_long limit)"		2790454	0					
ANR	2790456	CompoundStatement		1087:0:28045:28733	2790454	0					
ANR	2790457	IdentifierDeclStatement	char * p1 = ZSTR_VAL ( str ) ;	1088:1:28048:28072	2790454	0	True				
ANR	2790458	IdentifierDecl	* p1 = ZSTR_VAL ( str )		2790454	0					
ANR	2790459	IdentifierDeclType	char *		2790454	0					
ANR	2790460	Identifier	p1		2790454	1					
ANR	2790461	AssignmentExpression	* p1 = ZSTR_VAL ( str )		2790454	2		=			
ANR	2790462	Identifier	p1		2790454	0					
ANR	2790463	CallExpression	ZSTR_VAL ( str )		2790454	1					
ANR	2790464	Callee	ZSTR_VAL		2790454	0					
ANR	2790465	Identifier	ZSTR_VAL		2790454	0					
ANR	2790466	ArgumentList	str		2790454	1					
ANR	2790467	Argument	str		2790454	0					
ANR	2790468	Identifier	str		2790454	0					
ANR	2790469	IdentifierDeclStatement	char * endp = ZSTR_VAL ( str ) + ZSTR_LEN ( str ) ;	1089:1:28075:28117	2790454	1	True				
ANR	2790470	IdentifierDecl	* endp = ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2790454	0					
ANR	2790471	IdentifierDeclType	char *		2790454	0					
ANR	2790472	Identifier	endp		2790454	1					
ANR	2790473	AssignmentExpression	* endp = ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2790454	2		=			
ANR	2790474	Identifier	endp		2790454	0					
ANR	2790475	AdditiveExpression	ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2790454	1		+			
ANR	2790476	CallExpression	ZSTR_VAL ( str )		2790454	0					
ANR	2790477	Callee	ZSTR_VAL		2790454	0					
ANR	2790478	Identifier	ZSTR_VAL		2790454	0					
ANR	2790479	ArgumentList	str		2790454	1					
ANR	2790480	Argument	str		2790454	0					
ANR	2790481	Identifier	str		2790454	0					
ANR	2790482	CallExpression	ZSTR_LEN ( str )		2790454	1					
ANR	2790483	Callee	ZSTR_LEN		2790454	0					
ANR	2790484	Identifier	ZSTR_LEN		2790454	0					
ANR	2790485	ArgumentList	str		2790454	1					
ANR	2790486	Argument	str		2790454	0					
ANR	2790487	Identifier	str		2790454	0					
ANR	2790488	IdentifierDeclStatement	"char * p2 = ( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp ) ;"	1090:1:28120:28206	2790454	2	True				
ANR	2790489	IdentifierDecl	"* p2 = ( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790454	0					
ANR	2790490	IdentifierDeclType	char *		2790454	0					
ANR	2790491	Identifier	p2		2790454	1					
ANR	2790492	AssignmentExpression	"* p2 = ( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790454	2		=			
ANR	2790493	Identifier	p2		2790454	0					
ANR	2790494	CastExpression	"( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790454	1					
ANR	2790495	CastTarget	char *		2790454	0					
ANR	2790496	CallExpression	"php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790454	1					
ANR	2790497	Callee	php_memnstr		2790454	0					
ANR	2790498	Identifier	php_memnstr		2790454	0					
ANR	2790499	ArgumentList	ZSTR_VAL ( str )		2790454	1					
ANR	2790500	Argument	ZSTR_VAL ( str )		2790454	0					
ANR	2790501	CallExpression	ZSTR_VAL ( str )		2790454	0					
ANR	2790502	Callee	ZSTR_VAL		2790454	0					
ANR	2790503	Identifier	ZSTR_VAL		2790454	0					
ANR	2790504	ArgumentList	str		2790454	1					
ANR	2790505	Argument	str		2790454	0					
ANR	2790506	Identifier	str		2790454	0					
ANR	2790507	Argument	ZSTR_VAL ( delim )		2790454	1					
ANR	2790508	CallExpression	ZSTR_VAL ( delim )		2790454	0					
ANR	2790509	Callee	ZSTR_VAL		2790454	0					
ANR	2790510	Identifier	ZSTR_VAL		2790454	0					
ANR	2790511	ArgumentList	delim		2790454	1					
ANR	2790512	Argument	delim		2790454	0					
ANR	2790513	Identifier	delim		2790454	0					
ANR	2790514	Argument	ZSTR_LEN ( delim )		2790454	2					
ANR	2790515	CallExpression	ZSTR_LEN ( delim )		2790454	0					
ANR	2790516	Callee	ZSTR_LEN		2790454	0					
ANR	2790517	Identifier	ZSTR_LEN		2790454	0					
ANR	2790518	ArgumentList	delim		2790454	1					
ANR	2790519	Argument	delim		2790454	0					
ANR	2790520	Identifier	delim		2790454	0					
ANR	2790521	Argument	endp		2790454	3					
ANR	2790522	Identifier	endp		2790454	0					
ANR	2790523	IdentifierDeclStatement	zval tmp ;	1091:1:28209:28218	2790454	3	True				
ANR	2790524	IdentifierDecl	tmp		2790454	0					
ANR	2790525	IdentifierDeclType	zval		2790454	0					
ANR	2790526	Identifier	tmp		2790454	1					
ANR	2790527	IfStatement	if ( p2 == NULL )		2790454	4					
ANR	2790528	Condition	p2 == NULL	1093:5:28226:28235	2790454	0	True				
ANR	2790529	EqualityExpression	p2 == NULL		2790454	0		==			
ANR	2790530	Identifier	p2		2790454	0					
ANR	2790531	Identifier	NULL		2790454	1					
ANR	2790532	CompoundStatement		7:17:192:192	2790454	1					
ANR	2790533	ExpressionStatement	"ZVAL_STR_COPY ( & tmp , str )"	1094:2:28242:28266	2790454	0	True				
ANR	2790534	CallExpression	"ZVAL_STR_COPY ( & tmp , str )"		2790454	0					
ANR	2790535	Callee	ZVAL_STR_COPY		2790454	0					
ANR	2790536	Identifier	ZVAL_STR_COPY		2790454	0					
ANR	2790537	ArgumentList	& tmp		2790454	1					
ANR	2790538	Argument	& tmp		2790454	0					
ANR	2790539	UnaryOperationExpression	& tmp		2790454	0					
ANR	2790540	UnaryOperator	&		2790454	0					
ANR	2790541	Identifier	tmp		2790454	1					
ANR	2790542	Argument	str		2790454	1					
ANR	2790543	Identifier	str		2790454	0					
ANR	2790544	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"	1095:2:28270:28333	2790454	1	True				
ANR	2790545	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"		2790454	0					
ANR	2790546	Callee	zend_hash_next_index_insert_new		2790454	0					
ANR	2790547	Identifier	zend_hash_next_index_insert_new		2790454	0					
ANR	2790548	ArgumentList	Z_ARRVAL_P ( return_value )		2790454	1					
ANR	2790549	Argument	Z_ARRVAL_P ( return_value )		2790454	0					
ANR	2790550	CallExpression	Z_ARRVAL_P ( return_value )		2790454	0					
ANR	2790551	Callee	Z_ARRVAL_P		2790454	0					
ANR	2790552	Identifier	Z_ARRVAL_P		2790454	0					
ANR	2790553	ArgumentList	return_value		2790454	1					
ANR	2790554	Argument	return_value		2790454	0					
ANR	2790555	Identifier	return_value		2790454	0					
ANR	2790556	Argument	& tmp		2790454	1					
ANR	2790557	UnaryOperationExpression	& tmp		2790454	0					
ANR	2790558	UnaryOperator	&		2790454	0					
ANR	2790559	Identifier	tmp		2790454	1					
ANR	2790560	ElseStatement	else		2790454	0					
ANR	2790561	CompoundStatement		10:8:297:297	2790454	0					
ANR	2790562	DoStatement	do		2790454	0					
ANR	2790563	CompoundStatement		11:5:304:304	2790454	0					
ANR	2790564	ExpressionStatement	"ZVAL_STRINGL ( & tmp , p1 , p2 - p1 )"	1098:3:28355:28386	2790454	0	True				
ANR	2790565	CallExpression	"ZVAL_STRINGL ( & tmp , p1 , p2 - p1 )"		2790454	0					
ANR	2790566	Callee	ZVAL_STRINGL		2790454	0					
ANR	2790567	Identifier	ZVAL_STRINGL		2790454	0					
ANR	2790568	ArgumentList	& tmp		2790454	1					
ANR	2790569	Argument	& tmp		2790454	0					
ANR	2790570	UnaryOperationExpression	& tmp		2790454	0					
ANR	2790571	UnaryOperator	&		2790454	0					
ANR	2790572	Identifier	tmp		2790454	1					
ANR	2790573	Argument	p1		2790454	1					
ANR	2790574	Identifier	p1		2790454	0					
ANR	2790575	Argument	p2 - p1		2790454	2					
ANR	2790576	AdditiveExpression	p2 - p1		2790454	0		-			
ANR	2790577	Identifier	p2		2790454	0					
ANR	2790578	Identifier	p1		2790454	1					
ANR	2790579	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"	1099:3:28391:28454	2790454	1	True				
ANR	2790580	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"		2790454	0					
ANR	2790581	Callee	zend_hash_next_index_insert_new		2790454	0					
ANR	2790582	Identifier	zend_hash_next_index_insert_new		2790454	0					
ANR	2790583	ArgumentList	Z_ARRVAL_P ( return_value )		2790454	1					
ANR	2790584	Argument	Z_ARRVAL_P ( return_value )		2790454	0					
ANR	2790585	CallExpression	Z_ARRVAL_P ( return_value )		2790454	0					
ANR	2790586	Callee	Z_ARRVAL_P		2790454	0					
ANR	2790587	Identifier	Z_ARRVAL_P		2790454	0					
ANR	2790588	ArgumentList	return_value		2790454	1					
ANR	2790589	Argument	return_value		2790454	0					
ANR	2790590	Identifier	return_value		2790454	0					
ANR	2790591	Argument	& tmp		2790454	1					
ANR	2790592	UnaryOperationExpression	& tmp		2790454	0					
ANR	2790593	UnaryOperator	&		2790454	0					
ANR	2790594	Identifier	tmp		2790454	1					
ANR	2790595	ExpressionStatement	p1 = p2 + ZSTR_LEN ( delim )	1100:3:28459:28484	2790454	2	True				
ANR	2790596	AssignmentExpression	p1 = p2 + ZSTR_LEN ( delim )		2790454	0		=			
ANR	2790597	Identifier	p1		2790454	0					
ANR	2790598	AdditiveExpression	p2 + ZSTR_LEN ( delim )		2790454	1		+			
ANR	2790599	Identifier	p2		2790454	0					
ANR	2790600	CallExpression	ZSTR_LEN ( delim )		2790454	1					
ANR	2790601	Callee	ZSTR_LEN		2790454	0					
ANR	2790602	Identifier	ZSTR_LEN		2790454	0					
ANR	2790603	ArgumentList	delim		2790454	1					
ANR	2790604	Argument	delim		2790454	0					
ANR	2790605	Identifier	delim		2790454	0					
ANR	2790606	ExpressionStatement	"p2 = ( char * ) php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"	1101:3:28489:28558	2790454	3	True				
ANR	2790607	AssignmentExpression	"p2 = ( char * ) php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790454	0		=			
ANR	2790608	Identifier	p2		2790454	0					
ANR	2790609	CastExpression	"( char * ) php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790454	1					
ANR	2790610	CastTarget	char *		2790454	0					
ANR	2790611	CallExpression	"php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790454	1					
ANR	2790612	Callee	php_memnstr		2790454	0					
ANR	2790613	Identifier	php_memnstr		2790454	0					
ANR	2790614	ArgumentList	p1		2790454	1					
ANR	2790615	Argument	p1		2790454	0					
ANR	2790616	Identifier	p1		2790454	0					
ANR	2790617	Argument	ZSTR_VAL ( delim )		2790454	1					
ANR	2790618	CallExpression	ZSTR_VAL ( delim )		2790454	0					
ANR	2790619	Callee	ZSTR_VAL		2790454	0					
ANR	2790620	Identifier	ZSTR_VAL		2790454	0					
ANR	2790621	ArgumentList	delim		2790454	1					
ANR	2790622	Argument	delim		2790454	0					
ANR	2790623	Identifier	delim		2790454	0					
ANR	2790624	Argument	ZSTR_LEN ( delim )		2790454	2					
ANR	2790625	CallExpression	ZSTR_LEN ( delim )		2790454	0					
ANR	2790626	Callee	ZSTR_LEN		2790454	0					
ANR	2790627	Identifier	ZSTR_LEN		2790454	0					
ANR	2790628	ArgumentList	delim		2790454	1					
ANR	2790629	Argument	delim		2790454	0					
ANR	2790630	Identifier	delim		2790454	0					
ANR	2790631	Argument	endp		2790454	3					
ANR	2790632	Identifier	endp		2790454	0					
ANR	2790633	Condition	p2 != NULL && -- limit > 1	1102:11:28571:28595	2790454	1	True				
ANR	2790634	AndExpression	p2 != NULL && -- limit > 1		2790454	0		&&			
ANR	2790635	EqualityExpression	p2 != NULL		2790454	0		!=			
ANR	2790636	Identifier	p2		2790454	0					
ANR	2790637	Identifier	NULL		2790454	1					
ANR	2790638	RelationalExpression	-- limit > 1		2790454	1		>			
ANR	2790639	UnaryExpression	-- limit		2790454	0					
ANR	2790640	IncDec	--		2790454	0					
ANR	2790641	Identifier	limit		2790454	1					
ANR	2790642	PrimaryExpression	1		2790454	1					
ANR	2790643	IfStatement	if ( p1 <= endp )		2790454	1					
ANR	2790644	Condition	p1 <= endp	1104:6:28606:28615	2790454	0	True				
ANR	2790645	RelationalExpression	p1 <= endp		2790454	0		<=			
ANR	2790646	Identifier	p1		2790454	0					
ANR	2790647	Identifier	endp		2790454	1					
ANR	2790648	CompoundStatement		18:18:572:572	2790454	1					
ANR	2790649	ExpressionStatement	"ZVAL_STRINGL ( & tmp , p1 , endp - p1 )"	1105:3:28623:28656	2790454	0	True				
ANR	2790650	CallExpression	"ZVAL_STRINGL ( & tmp , p1 , endp - p1 )"		2790454	0					
ANR	2790651	Callee	ZVAL_STRINGL		2790454	0					
ANR	2790652	Identifier	ZVAL_STRINGL		2790454	0					
ANR	2790653	ArgumentList	& tmp		2790454	1					
ANR	2790654	Argument	& tmp		2790454	0					
ANR	2790655	UnaryOperationExpression	& tmp		2790454	0					
ANR	2790656	UnaryOperator	&		2790454	0					
ANR	2790657	Identifier	tmp		2790454	1					
ANR	2790658	Argument	p1		2790454	1					
ANR	2790659	Identifier	p1		2790454	0					
ANR	2790660	Argument	endp - p1		2790454	2					
ANR	2790661	AdditiveExpression	endp - p1		2790454	0		-			
ANR	2790662	Identifier	endp		2790454	0					
ANR	2790663	Identifier	p1		2790454	1					
ANR	2790664	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"	1106:3:28661:28724	2790454	1	True				
ANR	2790665	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"		2790454	0					
ANR	2790666	Callee	zend_hash_next_index_insert_new		2790454	0					
ANR	2790667	Identifier	zend_hash_next_index_insert_new		2790454	0					
ANR	2790668	ArgumentList	Z_ARRVAL_P ( return_value )		2790454	1					
ANR	2790669	Argument	Z_ARRVAL_P ( return_value )		2790454	0					
ANR	2790670	CallExpression	Z_ARRVAL_P ( return_value )		2790454	0					
ANR	2790671	Callee	Z_ARRVAL_P		2790454	0					
ANR	2790672	Identifier	Z_ARRVAL_P		2790454	0					
ANR	2790673	ArgumentList	return_value		2790454	1					
ANR	2790674	Argument	return_value		2790454	0					
ANR	2790675	Identifier	return_value		2790454	0					
ANR	2790676	Argument	& tmp		2790454	1					
ANR	2790677	UnaryOperationExpression	& tmp		2790454	0					
ANR	2790678	UnaryOperator	&		2790454	0					
ANR	2790679	Identifier	tmp		2790454	1					
ANR	2790680	ReturnType	PHPAPI void		2790454	1					
ANR	2790681	Identifier	php_explode		2790454	2					
ANR	2790682	ParameterList	"const zend_string * delim , zend_string * str , zval * return_value , zend_long limit"		2790454	3					
ANR	2790683	Parameter	const zend_string * delim	1086:24:27964:27987	2790454	0	True				
ANR	2790684	ParameterType	const zend_string *		2790454	0					
ANR	2790685	Identifier	delim		2790454	1					
ANR	2790686	Parameter	zend_string * str	1086:50:27990:28005	2790454	1	True				
ANR	2790687	ParameterType	zend_string *		2790454	0					
ANR	2790688	Identifier	str		2790454	1					
ANR	2790689	Parameter	zval * return_value	1086:68:28008:28025	2790454	2	True				
ANR	2790690	ParameterType	zval *		2790454	0					
ANR	2790691	Identifier	return_value		2790454	1					
ANR	2790692	Parameter	zend_long limit	1086:88:28028:28042	2790454	3	True				
ANR	2790693	ParameterType	zend_long		2790454	0					
ANR	2790694	Identifier	limit		2790454	1					
ANR	2790695	CFGEntryNode	ENTRY		2790454		True				
ANR	2790696	CFGExitNode	EXIT		2790454		True				
ANR	2790697	Symbol	p1		2790454						
ANR	2790698	Symbol	return_value		2790454						
ANR	2790699	Symbol	p2		2790454						
ANR	2790700	Symbol	NULL		2790454						
ANR	2790701	Symbol	php_memnstr		2790454						
ANR	2790702	Symbol	ZSTR_VAL		2790454						
ANR	2790703	Symbol	str		2790454						
ANR	2790704	Symbol	tmp		2790454						
ANR	2790705	Symbol	limit		2790454						
ANR	2790706	Symbol	ZSTR_LEN		2790454						
ANR	2790707	Symbol	endp		2790454						
ANR	2790708	Symbol	& tmp		2790454						
ANR	2790709	Symbol	Z_ARRVAL_P		2790454						
ANR	2790710	Symbol	delim		2790454						
ANR	2790711	Function	php_explode_negative_limit	1114:0:28784:30179							
ANR	2790712	FunctionDef	"php_explode_negative_limit (const zend_string * delim , zend_string * str , zval * return_value , zend_long limit)"		2790711	0					
ANR	2790713	CompoundStatement		1115:0:28904:30179	2790711	0					
ANR	2790714	Statement	define	1116:1:28907:28912	2790711	0	True				
ANR	2790715	Statement	EXPLODE_ALLOC_STEP	1116:8:28914:28931	2790711	1	True				
ANR	2790716	Statement	64	1116:27:28933:28934	2790711	2	True				
ANR	2790717	IdentifierDeclStatement	char * p1 = ZSTR_VAL ( str ) ;	1117:1:28937:28961	2790711	3	True				
ANR	2790718	IdentifierDecl	* p1 = ZSTR_VAL ( str )		2790711	0					
ANR	2790719	IdentifierDeclType	char *		2790711	0					
ANR	2790720	Identifier	p1		2790711	1					
ANR	2790721	AssignmentExpression	* p1 = ZSTR_VAL ( str )		2790711	2		=			
ANR	2790722	Identifier	p1		2790711	0					
ANR	2790723	CallExpression	ZSTR_VAL ( str )		2790711	1					
ANR	2790724	Callee	ZSTR_VAL		2790711	0					
ANR	2790725	Identifier	ZSTR_VAL		2790711	0					
ANR	2790726	ArgumentList	str		2790711	1					
ANR	2790727	Argument	str		2790711	0					
ANR	2790728	Identifier	str		2790711	0					
ANR	2790729	IdentifierDeclStatement	char * endp = ZSTR_VAL ( str ) + ZSTR_LEN ( str ) ;	1118:1:28964:29006	2790711	4	True				
ANR	2790730	IdentifierDecl	* endp = ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2790711	0					
ANR	2790731	IdentifierDeclType	char *		2790711	0					
ANR	2790732	Identifier	endp		2790711	1					
ANR	2790733	AssignmentExpression	* endp = ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2790711	2		=			
ANR	2790734	Identifier	endp		2790711	0					
ANR	2790735	AdditiveExpression	ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2790711	1		+			
ANR	2790736	CallExpression	ZSTR_VAL ( str )		2790711	0					
ANR	2790737	Callee	ZSTR_VAL		2790711	0					
ANR	2790738	Identifier	ZSTR_VAL		2790711	0					
ANR	2790739	ArgumentList	str		2790711	1					
ANR	2790740	Argument	str		2790711	0					
ANR	2790741	Identifier	str		2790711	0					
ANR	2790742	CallExpression	ZSTR_LEN ( str )		2790711	1					
ANR	2790743	Callee	ZSTR_LEN		2790711	0					
ANR	2790744	Identifier	ZSTR_LEN		2790711	0					
ANR	2790745	ArgumentList	str		2790711	1					
ANR	2790746	Argument	str		2790711	0					
ANR	2790747	Identifier	str		2790711	0					
ANR	2790748	IdentifierDeclStatement	"char * p2 = ( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp ) ;"	1119:1:29009:29095	2790711	5	True				
ANR	2790749	IdentifierDecl	"* p2 = ( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790711	0					
ANR	2790750	IdentifierDeclType	char *		2790711	0					
ANR	2790751	Identifier	p2		2790711	1					
ANR	2790752	AssignmentExpression	"* p2 = ( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790711	2		=			
ANR	2790753	Identifier	p2		2790711	0					
ANR	2790754	CastExpression	"( char * ) php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790711	1					
ANR	2790755	CastTarget	char *		2790711	0					
ANR	2790756	CallExpression	"php_memnstr ( ZSTR_VAL ( str ) , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790711	1					
ANR	2790757	Callee	php_memnstr		2790711	0					
ANR	2790758	Identifier	php_memnstr		2790711	0					
ANR	2790759	ArgumentList	ZSTR_VAL ( str )		2790711	1					
ANR	2790760	Argument	ZSTR_VAL ( str )		2790711	0					
ANR	2790761	CallExpression	ZSTR_VAL ( str )		2790711	0					
ANR	2790762	Callee	ZSTR_VAL		2790711	0					
ANR	2790763	Identifier	ZSTR_VAL		2790711	0					
ANR	2790764	ArgumentList	str		2790711	1					
ANR	2790765	Argument	str		2790711	0					
ANR	2790766	Identifier	str		2790711	0					
ANR	2790767	Argument	ZSTR_VAL ( delim )		2790711	1					
ANR	2790768	CallExpression	ZSTR_VAL ( delim )		2790711	0					
ANR	2790769	Callee	ZSTR_VAL		2790711	0					
ANR	2790770	Identifier	ZSTR_VAL		2790711	0					
ANR	2790771	ArgumentList	delim		2790711	1					
ANR	2790772	Argument	delim		2790711	0					
ANR	2790773	Identifier	delim		2790711	0					
ANR	2790774	Argument	ZSTR_LEN ( delim )		2790711	2					
ANR	2790775	CallExpression	ZSTR_LEN ( delim )		2790711	0					
ANR	2790776	Callee	ZSTR_LEN		2790711	0					
ANR	2790777	Identifier	ZSTR_LEN		2790711	0					
ANR	2790778	ArgumentList	delim		2790711	1					
ANR	2790779	Argument	delim		2790711	0					
ANR	2790780	Identifier	delim		2790711	0					
ANR	2790781	Argument	endp		2790711	3					
ANR	2790782	Identifier	endp		2790711	0					
ANR	2790783	IdentifierDeclStatement	zval tmp ;	1120:1:29098:29107	2790711	6	True				
ANR	2790784	IdentifierDecl	tmp		2790711	0					
ANR	2790785	IdentifierDeclType	zval		2790711	0					
ANR	2790786	Identifier	tmp		2790711	1					
ANR	2790787	IfStatement	if ( p2 == NULL )		2790711	7					
ANR	2790788	Condition	p2 == NULL	1122:5:29115:29124	2790711	0	True				
ANR	2790789	EqualityExpression	p2 == NULL		2790711	0		==			
ANR	2790790	Identifier	p2		2790711	0					
ANR	2790791	Identifier	NULL		2790711	1					
ANR	2790792	CompoundStatement		8:17:222:222	2790711	1					
ANR	2790793	ElseStatement	else		2790711	0					
ANR	2790794	CompoundStatement		16:2:439:493	2790711	0					
ANR	2790795	IdentifierDeclStatement	"size_t allocated = EXPLODE_ALLOC_STEP , found = 0 ;"	1128:2:29266:29314	2790711	0	True				
ANR	2790796	IdentifierDecl	allocated = EXPLODE_ALLOC_STEP		2790711	0					
ANR	2790797	IdentifierDeclType	size_t		2790711	0					
ANR	2790798	Identifier	allocated		2790711	1					
ANR	2790799	AssignmentExpression	allocated = EXPLODE_ALLOC_STEP		2790711	2		=			
ANR	2790800	Identifier	EXPLODE_ALLOC_STEP		2790711	0					
ANR	2790801	Identifier	EXPLODE_ALLOC_STEP		2790711	1					
ANR	2790802	IdentifierDecl	found = 0		2790711	1					
ANR	2790803	IdentifierDeclType	size_t		2790711	0					
ANR	2790804	Identifier	found		2790711	1					
ANR	2790805	AssignmentExpression	found = 0		2790711	2		=			
ANR	2790806	Identifier	found		2790711	0					
ANR	2790807	PrimaryExpression	0		2790711	1					
ANR	2790808	IdentifierDeclStatement	"zend_long i , to_return ;"	1129:2:29318:29340	2790711	1	True				
ANR	2790809	IdentifierDecl	i		2790711	0					
ANR	2790810	IdentifierDeclType	zend_long		2790711	0					
ANR	2790811	Identifier	i		2790711	1					
ANR	2790812	IdentifierDecl	to_return		2790711	1					
ANR	2790813	IdentifierDeclType	zend_long		2790711	0					
ANR	2790814	Identifier	to_return		2790711	1					
ANR	2790815	IdentifierDeclStatement	char * * positions = emalloc ( allocated * sizeof ( char * ) ) ;	1130:2:29344:29398	2790711	2	True				
ANR	2790816	IdentifierDecl	* * positions = emalloc ( allocated * sizeof ( char * ) )		2790711	0					
ANR	2790817	IdentifierDeclType	char * *		2790711	0					
ANR	2790818	Identifier	positions		2790711	1					
ANR	2790819	AssignmentExpression	* * positions = emalloc ( allocated * sizeof ( char * ) )		2790711	2		=			
ANR	2790820	Identifier	positions		2790711	0					
ANR	2790821	CallExpression	emalloc ( allocated * sizeof ( char * ) )		2790711	1					
ANR	2790822	Callee	emalloc		2790711	0					
ANR	2790823	Identifier	emalloc		2790711	0					
ANR	2790824	ArgumentList	allocated * sizeof ( char * )		2790711	1					
ANR	2790825	Argument	allocated * sizeof ( char * )		2790711	0					
ANR	2790826	MultiplicativeExpression	allocated * sizeof ( char * )		2790711	0		*			
ANR	2790827	Identifier	allocated		2790711	0					
ANR	2790828	SizeofExpression	sizeof ( char * )		2790711	1					
ANR	2790829	Sizeof	sizeof		2790711	0					
ANR	2790830	SizeofOperand	char *		2790711	1					
ANR	2790831	ExpressionStatement	positions [ found ++ ] = p1	1132:2:29403:29426	2790711	3	True				
ANR	2790832	AssignmentExpression	positions [ found ++ ] = p1		2790711	0		=			
ANR	2790833	ArrayIndexing	positions [ found ++ ]		2790711	0					
ANR	2790834	Identifier	positions		2790711	0					
ANR	2790835	PostIncDecOperationExpression	found ++		2790711	1					
ANR	2790836	Identifier	found		2790711	0					
ANR	2790837	IncDec	++		2790711	1					
ANR	2790838	Identifier	p1		2790711	1					
ANR	2790839	DoStatement	do		2790711	4					
ANR	2790840	CompoundStatement		19:5:528:528	2790711	0					
ANR	2790841	IfStatement	if ( found >= allocated )		2790711	0					
ANR	2790842	Condition	found >= allocated	1134:7:29442:29459	2790711	0	True				
ANR	2790843	RelationalExpression	found >= allocated		2790711	0		>=			
ANR	2790844	Identifier	found		2790711	0					
ANR	2790845	Identifier	allocated		2790711	1					
ANR	2790846	CompoundStatement		20:27:557:557	2790711	1					
ANR	2790847	ExpressionStatement	allocated = found + EXPLODE_ALLOC_STEP	1135:4:29468:29506	2790711	0	True				
ANR	2790848	AssignmentExpression	allocated = found + EXPLODE_ALLOC_STEP		2790711	0		=			
ANR	2790849	Identifier	allocated		2790711	0					
ANR	2790850	AdditiveExpression	found + EXPLODE_ALLOC_STEP		2790711	1		+			
ANR	2790851	Identifier	found		2790711	0					
ANR	2790852	Identifier	EXPLODE_ALLOC_STEP		2790711	1					
ANR	2790853	ExpressionStatement	"positions = erealloc ( positions , allocated * sizeof ( char * ) )"	1136:4:29549:29606	2790711	1	True				
ANR	2790854	AssignmentExpression	"positions = erealloc ( positions , allocated * sizeof ( char * ) )"		2790711	0		=			
ANR	2790855	Identifier	positions		2790711	0					
ANR	2790856	CallExpression	"erealloc ( positions , allocated * sizeof ( char * ) )"		2790711	1					
ANR	2790857	Callee	erealloc		2790711	0					
ANR	2790858	Identifier	erealloc		2790711	0					
ANR	2790859	ArgumentList	positions		2790711	1					
ANR	2790860	Argument	positions		2790711	0					
ANR	2790861	Identifier	positions		2790711	0					
ANR	2790862	Argument	allocated * sizeof ( char * )		2790711	1					
ANR	2790863	MultiplicativeExpression	allocated * sizeof ( char * )		2790711	0		*			
ANR	2790864	Identifier	allocated		2790711	0					
ANR	2790865	SizeofExpression	sizeof ( char * )		2790711	1					
ANR	2790866	Sizeof	sizeof		2790711	0					
ANR	2790867	SizeofOperand	char *		2790711	1					
ANR	2790868	ExpressionStatement	positions [ found ++ ] = p1 = p2 + ZSTR_LEN ( delim )	1138:3:29616:29662	2790711	1	True				
ANR	2790869	AssignmentExpression	positions [ found ++ ] = p1 = p2 + ZSTR_LEN ( delim )		2790711	0		=			
ANR	2790870	ArrayIndexing	positions [ found ++ ]		2790711	0					
ANR	2790871	Identifier	positions		2790711	0					
ANR	2790872	PostIncDecOperationExpression	found ++		2790711	1					
ANR	2790873	Identifier	found		2790711	0					
ANR	2790874	IncDec	++		2790711	1					
ANR	2790875	AssignmentExpression	p1 = p2 + ZSTR_LEN ( delim )		2790711	1		=			
ANR	2790876	Identifier	p1		2790711	0					
ANR	2790877	AdditiveExpression	p2 + ZSTR_LEN ( delim )		2790711	1		+			
ANR	2790878	Identifier	p2		2790711	0					
ANR	2790879	CallExpression	ZSTR_LEN ( delim )		2790711	1					
ANR	2790880	Callee	ZSTR_LEN		2790711	0					
ANR	2790881	Identifier	ZSTR_LEN		2790711	0					
ANR	2790882	ArgumentList	delim		2790711	1					
ANR	2790883	Argument	delim		2790711	0					
ANR	2790884	Identifier	delim		2790711	0					
ANR	2790885	ExpressionStatement	"p2 = ( char * ) php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"	1139:3:29667:29736	2790711	2	True				
ANR	2790886	AssignmentExpression	"p2 = ( char * ) php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790711	0		=			
ANR	2790887	Identifier	p2		2790711	0					
ANR	2790888	CastExpression	"( char * ) php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790711	1					
ANR	2790889	CastTarget	char *		2790711	0					
ANR	2790890	CallExpression	"php_memnstr ( p1 , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) , endp )"		2790711	1					
ANR	2790891	Callee	php_memnstr		2790711	0					
ANR	2790892	Identifier	php_memnstr		2790711	0					
ANR	2790893	ArgumentList	p1		2790711	1					
ANR	2790894	Argument	p1		2790711	0					
ANR	2790895	Identifier	p1		2790711	0					
ANR	2790896	Argument	ZSTR_VAL ( delim )		2790711	1					
ANR	2790897	CallExpression	ZSTR_VAL ( delim )		2790711	0					
ANR	2790898	Callee	ZSTR_VAL		2790711	0					
ANR	2790899	Identifier	ZSTR_VAL		2790711	0					
ANR	2790900	ArgumentList	delim		2790711	1					
ANR	2790901	Argument	delim		2790711	0					
ANR	2790902	Identifier	delim		2790711	0					
ANR	2790903	Argument	ZSTR_LEN ( delim )		2790711	2					
ANR	2790904	CallExpression	ZSTR_LEN ( delim )		2790711	0					
ANR	2790905	Callee	ZSTR_LEN		2790711	0					
ANR	2790906	Identifier	ZSTR_LEN		2790711	0					
ANR	2790907	ArgumentList	delim		2790711	1					
ANR	2790908	Argument	delim		2790711	0					
ANR	2790909	Identifier	delim		2790711	0					
ANR	2790910	Argument	endp		2790711	3					
ANR	2790911	Identifier	endp		2790711	0					
ANR	2790912	Condition	p2 != NULL	1140:11:29749:29758	2790711	1	True				
ANR	2790913	EqualityExpression	p2 != NULL		2790711	0		!=			
ANR	2790914	Identifier	p2		2790711	0					
ANR	2790915	Identifier	NULL		2790711	1					
ANR	2790916	ExpressionStatement	to_return = limit + found	1142:2:29765:29790	2790711	5	True				
ANR	2790917	AssignmentExpression	to_return = limit + found		2790711	0		=			
ANR	2790918	Identifier	to_return		2790711	0					
ANR	2790919	AdditiveExpression	limit + found		2790711	1		+			
ANR	2790920	Identifier	limit		2790711	0					
ANR	2790921	Identifier	found		2790711	1					
ANR	2790922	ForStatement	for ( i = 0 ; i < to_return ; i ++ )		2790711	6					
ANR	2790923	ForInit	i = 0 ;	1144:7:29900:29905	2790711	0	True				
ANR	2790924	AssignmentExpression	i = 0		2790711	0		=			
ANR	2790925	Identifier	i		2790711	0					
ANR	2790926	PrimaryExpression	0		2790711	1					
ANR	2790927	Condition	i < to_return	1144:14:29907:29919	2790711	1	True				
ANR	2790928	RelationalExpression	i < to_return		2790711	0		<			
ANR	2790929	Identifier	i		2790711	0					
ANR	2790930	Identifier	to_return		2790711	1					
ANR	2790931	PostIncDecOperationExpression	i ++	1144:29:29922:29924	2790711	2	True				
ANR	2790932	Identifier	i		2790711	0					
ANR	2790933	IncDec	++		2790711	1					
ANR	2790934	CompoundStatement		30:34:1022:1022	2790711	3					
ANR	2790935	ExpressionStatement	"ZVAL_STRINGL ( & tmp , positions [ i ] , ( positions [ i + 1 ] - ZSTR_LEN ( delim ) ) - positions [ i ] )"	1145:3:29973:30056	2790711	0	True				
ANR	2790936	CallExpression	"ZVAL_STRINGL ( & tmp , positions [ i ] , ( positions [ i + 1 ] - ZSTR_LEN ( delim ) ) - positions [ i ] )"		2790711	0					
ANR	2790937	Callee	ZVAL_STRINGL		2790711	0					
ANR	2790938	Identifier	ZVAL_STRINGL		2790711	0					
ANR	2790939	ArgumentList	& tmp		2790711	1					
ANR	2790940	Argument	& tmp		2790711	0					
ANR	2790941	UnaryOperationExpression	& tmp		2790711	0					
ANR	2790942	UnaryOperator	&		2790711	0					
ANR	2790943	Identifier	tmp		2790711	1					
ANR	2790944	Argument	positions [ i ]		2790711	1					
ANR	2790945	ArrayIndexing	positions [ i ]		2790711	0					
ANR	2790946	Identifier	positions		2790711	0					
ANR	2790947	Identifier	i		2790711	1					
ANR	2790948	Argument	( positions [ i + 1 ] - ZSTR_LEN ( delim ) ) - positions [ i ]		2790711	2					
ANR	2790949	AdditiveExpression	( positions [ i + 1 ] - ZSTR_LEN ( delim ) ) - positions [ i ]		2790711	0		-			
ANR	2790950	AdditiveExpression	positions [ i + 1 ] - ZSTR_LEN ( delim )		2790711	0		-			
ANR	2790951	ArrayIndexing	positions [ i + 1 ]		2790711	0					
ANR	2790952	Identifier	positions		2790711	0					
ANR	2790953	AdditiveExpression	i + 1		2790711	1		+			
ANR	2790954	Identifier	i		2790711	0					
ANR	2790955	PrimaryExpression	1		2790711	1					
ANR	2790956	CallExpression	ZSTR_LEN ( delim )		2790711	1					
ANR	2790957	Callee	ZSTR_LEN		2790711	0					
ANR	2790958	Identifier	ZSTR_LEN		2790711	0					
ANR	2790959	ArgumentList	delim		2790711	1					
ANR	2790960	Argument	delim		2790711	0					
ANR	2790961	Identifier	delim		2790711	0					
ANR	2790962	ArrayIndexing	positions [ i ]		2790711	1					
ANR	2790963	Identifier	positions		2790711	0					
ANR	2790964	Identifier	i		2790711	1					
ANR	2790965	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"	1146:3:30061:30124	2790711	1	True				
ANR	2790966	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"		2790711	0					
ANR	2790967	Callee	zend_hash_next_index_insert_new		2790711	0					
ANR	2790968	Identifier	zend_hash_next_index_insert_new		2790711	0					
ANR	2790969	ArgumentList	Z_ARRVAL_P ( return_value )		2790711	1					
ANR	2790970	Argument	Z_ARRVAL_P ( return_value )		2790711	0					
ANR	2790971	CallExpression	Z_ARRVAL_P ( return_value )		2790711	0					
ANR	2790972	Callee	Z_ARRVAL_P		2790711	0					
ANR	2790973	Identifier	Z_ARRVAL_P		2790711	0					
ANR	2790974	ArgumentList	return_value		2790711	1					
ANR	2790975	Argument	return_value		2790711	0					
ANR	2790976	Identifier	return_value		2790711	0					
ANR	2790977	Argument	& tmp		2790711	1					
ANR	2790978	UnaryOperationExpression	& tmp		2790711	0					
ANR	2790979	UnaryOperator	&		2790711	0					
ANR	2790980	Identifier	tmp		2790711	1					
ANR	2790981	ExpressionStatement	efree ( positions )	1148:2:30132:30148	2790711	7	True				
ANR	2790982	CallExpression	efree ( positions )		2790711	0					
ANR	2790983	Callee	efree		2790711	0					
ANR	2790984	Identifier	efree		2790711	0					
ANR	2790985	ArgumentList	positions		2790711	1					
ANR	2790986	Argument	positions		2790711	0					
ANR	2790987	Identifier	positions		2790711	0					
ANR	2790988	Statement	undef	1150:1:30154:30158	2790711	8	True				
ANR	2790989	Statement	EXPLODE_ALLOC_STEP	1150:7:30160:30177	2790711	9	True				
ANR	2790990	ReturnType	PHPAPI void		2790711	1					
ANR	2790991	Identifier	php_explode_negative_limit		2790711	2					
ANR	2790992	ParameterList	"const zend_string * delim , zend_string * str , zval * return_value , zend_long limit"		2790711	3					
ANR	2790993	Parameter	const zend_string * delim	1114:39:28823:28846	2790711	0	True				
ANR	2790994	ParameterType	const zend_string *		2790711	0					
ANR	2790995	Identifier	delim		2790711	1					
ANR	2790996	Parameter	zend_string * str	1114:65:28849:28864	2790711	1	True				
ANR	2790997	ParameterType	zend_string *		2790711	0					
ANR	2790998	Identifier	str		2790711	1					
ANR	2790999	Parameter	zval * return_value	1114:83:28867:28884	2790711	2	True				
ANR	2791000	ParameterType	zval *		2790711	0					
ANR	2791001	Identifier	return_value		2790711	1					
ANR	2791002	Parameter	zend_long limit	1114:103:28887:28901	2790711	3	True				
ANR	2791003	ParameterType	zend_long		2790711	0					
ANR	2791004	Identifier	limit		2790711	1					
ANR	2791005	CFGEntryNode	ENTRY		2790711		True				
ANR	2791006	CFGExitNode	EXIT		2790711		True				
ANR	2791007	Symbol	* positions		2790711						
ANR	2791008	Symbol	p1		2790711						
ANR	2791009	Symbol	return_value		2790711						
ANR	2791010	Symbol	p2		2790711						
ANR	2791011	Symbol	NULL		2790711						
ANR	2791012	Symbol	php_memnstr		2790711						
ANR	2791013	Symbol	i		2790711						
ANR	2791014	Symbol	positions		2790711						
ANR	2791015	Symbol	ZSTR_VAL		2790711						
ANR	2791016	Symbol	str		2790711						
ANR	2791017	Symbol	emalloc		2790711						
ANR	2791018	Symbol	found		2790711						
ANR	2791019	Symbol	* i		2790711						
ANR	2791020	Symbol	EXPLODE_ALLOC_STEP		2790711						
ANR	2791021	Symbol	tmp		2790711						
ANR	2791022	Symbol	to_return		2790711						
ANR	2791023	Symbol	limit		2790711						
ANR	2791024	Symbol	ZSTR_LEN		2790711						
ANR	2791025	Symbol	endp		2790711						
ANR	2791026	Symbol	& tmp		2790711						
ANR	2791027	Symbol	Z_ARRVAL_P		2790711						
ANR	2791028	Symbol	erealloc		2790711						
ANR	2791029	Symbol	delim		2790711						
ANR	2791030	Symbol	allocated		2790711						
ANR	2791031	DeclStmt									
ANR	2791032	Decl							zend_string	zend_string *	str
ANR	2791033	Decl							zend_string	zend_string *	delim
ANR	2791034	DeclStmt									
ANR	2791035	Decl							zend_long	zend_long	limit
ANR	2791036	DeclStmt									
ANR	2791037	Decl							zval	zval	tmp
ANR	2791038	Function	php_implode	1207:0:31541:33521							
ANR	2791039	FunctionDef	"php_implode (const zend_string * delim , zval * arr , zval * return_value)"		2791038	0					
ANR	2791040	CompoundStatement		1208:0:31622:33521	2791038	0					
ANR	2791041	IdentifierDeclStatement	zval * tmp ;	1209:1:31625:31642	2791038	0	True				
ANR	2791042	IdentifierDecl	* tmp		2791038	0					
ANR	2791043	IdentifierDeclType	zval *		2791038	0					
ANR	2791044	Identifier	tmp		2791038	1					
ANR	2791045	IdentifierDeclStatement	int numelems ;	1210:1:31645:31667	2791038	1	True				
ANR	2791046	IdentifierDecl	numelems		2791038	0					
ANR	2791047	IdentifierDeclType	int		2791038	0					
ANR	2791048	Identifier	numelems		2791038	1					
ANR	2791049	IdentifierDeclStatement	zend_string * str ;	1211:1:31670:31687	2791038	2	True				
ANR	2791050	IdentifierDecl	* str		2791038	0					
ANR	2791051	IdentifierDeclType	zend_string *		2791038	0					
ANR	2791052	Identifier	str		2791038	1					
ANR	2791053	IdentifierDeclStatement	char * cptr ;	1212:1:31690:31708	2791038	3	True				
ANR	2791054	IdentifierDecl	* cptr		2791038	0					
ANR	2791055	IdentifierDeclType	char *		2791038	0					
ANR	2791056	Identifier	cptr		2791038	1					
ANR	2791057	IdentifierDeclStatement	size_t len = 0 ;	1213:1:31711:31732	2791038	4	True				
ANR	2791058	IdentifierDecl	len = 0		2791038	0					
ANR	2791059	IdentifierDeclType	size_t		2791038	0					
ANR	2791060	Identifier	len		2791038	1					
ANR	2791061	AssignmentExpression	len = 0		2791038	2		=			
ANR	2791062	Identifier	len		2791038	0					
ANR	2791063	PrimaryExpression	0		2791038	1					
ANR	2791064	IdentifierDeclStatement	"zend_string * * strings , * * strptr ;"	1214:1:31735:31766	2791038	5	True				
ANR	2791065	IdentifierDecl	* * strings		2791038	0					
ANR	2791066	IdentifierDeclType	zend_string * *		2791038	0					
ANR	2791067	Identifier	strings		2791038	1					
ANR	2791068	IdentifierDecl	* * strptr		2791038	1					
ANR	2791069	IdentifierDeclType	zend_string * *		2791038	0					
ANR	2791070	Identifier	strptr		2791038	1					
ANR	2791071	ExpressionStatement	numelems = zend_hash_num_elements ( Z_ARRVAL_P ( arr ) )	1216:1:31770:31820	2791038	6	True				
ANR	2791072	AssignmentExpression	numelems = zend_hash_num_elements ( Z_ARRVAL_P ( arr ) )		2791038	0		=			
ANR	2791073	Identifier	numelems		2791038	0					
ANR	2791074	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( arr ) )		2791038	1					
ANR	2791075	Callee	zend_hash_num_elements		2791038	0					
ANR	2791076	Identifier	zend_hash_num_elements		2791038	0					
ANR	2791077	ArgumentList	Z_ARRVAL_P ( arr )		2791038	1					
ANR	2791078	Argument	Z_ARRVAL_P ( arr )		2791038	0					
ANR	2791079	CallExpression	Z_ARRVAL_P ( arr )		2791038	0					
ANR	2791080	Callee	Z_ARRVAL_P		2791038	0					
ANR	2791081	Identifier	Z_ARRVAL_P		2791038	0					
ANR	2791082	ArgumentList	arr		2791038	1					
ANR	2791083	Argument	arr		2791038	0					
ANR	2791084	Identifier	arr		2791038	0					
ANR	2791085	IfStatement	if ( numelems == 0 )		2791038	7					
ANR	2791086	Condition	numelems == 0	1218:5:31828:31840	2791038	0	True				
ANR	2791087	EqualityExpression	numelems == 0		2791038	0		==			
ANR	2791088	Identifier	numelems		2791038	0					
ANR	2791089	PrimaryExpression	0		2791038	1					
ANR	2791090	CompoundStatement		11:20:220:220	2791038	1					
ANR	2791091	ExpressionStatement	RETURN_EMPTY_STRING ( )	1219:2:31847:31868	2791038	0	True				
ANR	2791092	CallExpression	RETURN_EMPTY_STRING ( )		2791038	0					
ANR	2791093	Callee	RETURN_EMPTY_STRING		2791038	0					
ANR	2791094	Identifier	RETURN_EMPTY_STRING		2791038	0					
ANR	2791095	ArgumentList			2791038	1					
ANR	2791096	ElseStatement	else		2791038	0					
ANR	2791097	IfStatement	if ( numelems == 1 )		2791038	0					
ANR	2791098	Condition	numelems == 1	1220:12:31882:31894	2791038	0	True				
ANR	2791099	EqualityExpression	numelems == 1		2791038	0		==			
ANR	2791100	Identifier	numelems		2791038	0					
ANR	2791101	PrimaryExpression	1		2791038	1					
ANR	2791102	CompoundStatement		13:27:274:274	2791038	1					
ANR	2791103	Statement	ZEND_HASH_FOREACH_VAL	1222:2:31959:31979	2791038	0	True				
ANR	2791104	Statement	(	1222:23:31980:31980	2791038	1	True				
ANR	2791105	Statement	Z_ARRVAL_P	1222:24:31981:31990	2791038	2	True				
ANR	2791106	Statement	(	1222:34:31991:31991	2791038	3	True				
ANR	2791107	Statement	arr	1222:35:31992:31994	2791038	4	True				
ANR	2791108	Statement	)	1222:38:31995:31995	2791038	5	True				
ANR	2791109	Statement	","	1222:39:31996:31996	2791038	6	True				
ANR	2791110	Statement	tmp	1222:41:31998:32000	2791038	7	True				
ANR	2791111	Statement	)	1222:44:32001:32001	2791038	8	True				
ANR	2791112	CompoundStatement		15:46:380:380	2791038	9					
ANR	2791113	ExpressionStatement	RETURN_STR ( zval_get_string ( tmp ) )	1223:3:32008:32040	2791038	0	True				
ANR	2791114	CallExpression	RETURN_STR ( zval_get_string ( tmp ) )		2791038	0					
ANR	2791115	Callee	RETURN_STR		2791038	0					
ANR	2791116	Identifier	RETURN_STR		2791038	0					
ANR	2791117	ArgumentList	zval_get_string ( tmp )		2791038	1					
ANR	2791118	Argument	zval_get_string ( tmp )		2791038	0					
ANR	2791119	CallExpression	zval_get_string ( tmp )		2791038	0					
ANR	2791120	Callee	zval_get_string		2791038	0					
ANR	2791121	Identifier	zval_get_string		2791038	0					
ANR	2791122	ArgumentList	tmp		2791038	1					
ANR	2791123	Argument	tmp		2791038	0					
ANR	2791124	Identifier	tmp		2791038	0					
ANR	2791125	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1224:4:32046:32069	2791038	10	True				
ANR	2791126	CallExpression	ZEND_HASH_FOREACH_END ( )		2791038	0					
ANR	2791127	Callee	ZEND_HASH_FOREACH_END		2791038	0					
ANR	2791128	Identifier	ZEND_HASH_FOREACH_END		2791038	0					
ANR	2791129	ArgumentList			2791038	1					
ANR	2791130	ExpressionStatement	strings = emalloc ( ( sizeof ( zend_long ) + sizeof ( zend_string * ) ) * numelems )	1227:1:32076:32149	2791038	8	True				
ANR	2791131	AssignmentExpression	strings = emalloc ( ( sizeof ( zend_long ) + sizeof ( zend_string * ) ) * numelems )		2791038	0		=			
ANR	2791132	Identifier	strings		2791038	0					
ANR	2791133	CallExpression	emalloc ( ( sizeof ( zend_long ) + sizeof ( zend_string * ) ) * numelems )		2791038	1					
ANR	2791134	Callee	emalloc		2791038	0					
ANR	2791135	Identifier	emalloc		2791038	0					
ANR	2791136	ArgumentList	( sizeof ( zend_long ) + sizeof ( zend_string * ) ) * numelems		2791038	1					
ANR	2791137	Argument	( sizeof ( zend_long ) + sizeof ( zend_string * ) ) * numelems		2791038	0					
ANR	2791138	MultiplicativeExpression	( sizeof ( zend_long ) + sizeof ( zend_string * ) ) * numelems		2791038	0		*			
ANR	2791139	AdditiveExpression	sizeof ( zend_long ) + sizeof ( zend_string * )		2791038	0		+			
ANR	2791140	SizeofExpression	sizeof ( zend_long )		2791038	0					
ANR	2791141	Sizeof	sizeof		2791038	0					
ANR	2791142	SizeofOperand	zend_long		2791038	1					
ANR	2791143	SizeofExpression	sizeof ( zend_string * )		2791038	1					
ANR	2791144	Sizeof	sizeof		2791038	0					
ANR	2791145	SizeofOperand	zend_string *		2791038	1					
ANR	2791146	Identifier	numelems		2791038	1					
ANR	2791147	ExpressionStatement	strptr = strings - 1	1228:1:32152:32172	2791038	9	True				
ANR	2791148	AssignmentExpression	strptr = strings - 1		2791038	0		=			
ANR	2791149	Identifier	strptr		2791038	0					
ANR	2791150	AdditiveExpression	strings - 1		2791038	1		-			
ANR	2791151	Identifier	strings		2791038	0					
ANR	2791152	PrimaryExpression	1		2791038	1					
ANR	2791153	Statement	ZEND_HASH_FOREACH_VAL	1230:1:32176:32196	2791038	10	True				
ANR	2791154	Statement	(	1230:22:32197:32197	2791038	11	True				
ANR	2791155	Statement	Z_ARRVAL_P	1230:23:32198:32207	2791038	12	True				
ANR	2791156	Statement	(	1230:33:32208:32208	2791038	13	True				
ANR	2791157	Statement	arr	1230:34:32209:32211	2791038	14	True				
ANR	2791158	Statement	)	1230:37:32212:32212	2791038	15	True				
ANR	2791159	Statement	","	1230:38:32213:32213	2791038	16	True				
ANR	2791160	Statement	tmp	1230:40:32215:32217	2791038	17	True				
ANR	2791161	Statement	)	1230:43:32218:32218	2791038	18	True				
ANR	2791162	CompoundStatement		23:45:597:597	2791038	19					
ANR	2791163	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_LONG )		2791038	0					
ANR	2791164	Condition	Z_TYPE_P ( tmp ) == IS_LONG	1231:6:32228:32251	2791038	0	True				
ANR	2791165	EqualityExpression	Z_TYPE_P ( tmp ) == IS_LONG		2791038	0		==			
ANR	2791166	CallExpression	Z_TYPE_P ( tmp )		2791038	0					
ANR	2791167	Callee	Z_TYPE_P		2791038	0					
ANR	2791168	Identifier	Z_TYPE_P		2791038	0					
ANR	2791169	ArgumentList	tmp		2791038	1					
ANR	2791170	Argument	tmp		2791038	0					
ANR	2791171	Identifier	tmp		2791038	0					
ANR	2791172	Identifier	IS_LONG		2791038	1					
ANR	2791173	CompoundStatement		25:3:636:662	2791038	1					
ANR	2791174	IdentifierDeclStatement	double val = Z_LVAL_P ( tmp ) ;	1232:3:32259:32285	2791038	0	True				
ANR	2791175	IdentifierDecl	val = Z_LVAL_P ( tmp )		2791038	0					
ANR	2791176	IdentifierDeclType	double		2791038	0					
ANR	2791177	Identifier	val		2791038	1					
ANR	2791178	AssignmentExpression	val = Z_LVAL_P ( tmp )		2791038	2		=			
ANR	2791179	Identifier	val		2791038	0					
ANR	2791180	CallExpression	Z_LVAL_P ( tmp )		2791038	1					
ANR	2791181	Callee	Z_LVAL_P		2791038	0					
ANR	2791182	Identifier	Z_LVAL_P		2791038	0					
ANR	2791183	ArgumentList	tmp		2791038	1					
ANR	2791184	Argument	tmp		2791038	0					
ANR	2791185	Identifier	tmp		2791038	0					
ANR	2791186	ExpressionStatement	* ++ strptr = NULL	1233:3:32290:32306	2791038	1	True				
ANR	2791187	AssignmentExpression	* ++ strptr = NULL		2791038	0		=			
ANR	2791188	UnaryOperationExpression	* ++ strptr		2791038	0					
ANR	2791189	UnaryOperator	*		2791038	0					
ANR	2791190	UnaryExpression	++ strptr		2791038	1					
ANR	2791191	IncDec	++		2791038	0					
ANR	2791192	Identifier	strptr		2791038	1					
ANR	2791193	Identifier	NULL		2791038	1					
ANR	2791194	ExpressionStatement	( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ] = Z_LVAL_P ( tmp )	1234:3:32311:32381	2791038	2	True				
ANR	2791195	AssignmentExpression	( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ] = Z_LVAL_P ( tmp )		2791038	0		=			
ANR	2791196	ArrayIndexing	( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ]		2791038	0					
ANR	2791197	CastExpression	( zend_long * ) ( strings + numelems )		2791038	0					
ANR	2791198	CastTarget	zend_long *		2791038	0					
ANR	2791199	AdditiveExpression	strings + numelems		2791038	1		+			
ANR	2791200	Identifier	strings		2791038	0					
ANR	2791201	Identifier	numelems		2791038	1					
ANR	2791202	AdditiveExpression	strptr - strings		2791038	1		-			
ANR	2791203	Identifier	strptr		2791038	0					
ANR	2791204	Identifier	strings		2791038	1					
ANR	2791205	CallExpression	Z_LVAL_P ( tmp )		2791038	1					
ANR	2791206	Callee	Z_LVAL_P		2791038	0					
ANR	2791207	Identifier	Z_LVAL_P		2791038	0					
ANR	2791208	ArgumentList	tmp		2791038	1					
ANR	2791209	Argument	tmp		2791038	0					
ANR	2791210	Identifier	tmp		2791038	0					
ANR	2791211	IfStatement	if ( val < 0 )		2791038	3					
ANR	2791212	Condition	val < 0	1235:7:32390:32396	2791038	0	True				
ANR	2791213	RelationalExpression	val < 0		2791038	0		<			
ANR	2791214	Identifier	val		2791038	0					
ANR	2791215	PrimaryExpression	0		2791038	1					
ANR	2791216	CompoundStatement		28:16:776:776	2791038	1					
ANR	2791217	ExpressionStatement	val = - 10 * val	1236:4:32405:32420	2791038	0	True				
ANR	2791218	AssignmentExpression	val = - 10 * val		2791038	0		=			
ANR	2791219	Identifier	val		2791038	0					
ANR	2791220	MultiplicativeExpression	- 10 * val		2791038	1		*			
ANR	2791221	UnaryOperationExpression	- 10		2791038	0					
ANR	2791222	UnaryOperator	-		2791038	0					
ANR	2791223	PrimaryExpression	10		2791038	1					
ANR	2791224	Identifier	val		2791038	1					
ANR	2791225	IfStatement	if ( val < 10 )		2791038	4					
ANR	2791226	Condition	val < 10	1238:7:32434:32441	2791038	0	True				
ANR	2791227	RelationalExpression	val < 10		2791038	0		<			
ANR	2791228	Identifier	val		2791038	0					
ANR	2791229	PrimaryExpression	10		2791038	1					
ANR	2791230	CompoundStatement		31:17:821:821	2791038	1					
ANR	2791231	ExpressionStatement	len ++	1239:4:32450:32455	2791038	0	True				
ANR	2791232	PostIncDecOperationExpression	len ++		2791038	0					
ANR	2791233	Identifier	len		2791038	0					
ANR	2791234	IncDec	++		2791038	1					
ANR	2791235	ElseStatement	else		2791038	0					
ANR	2791236	CompoundStatement		33:10:844:844	2791038	0					
ANR	2791237	ExpressionStatement	len += ( int ) log10 ( 10 * ( double ) val )	1241:4:32473:32510	2791038	0	True				
ANR	2791238	AssignmentExpression	len += ( int ) log10 ( 10 * ( double ) val )		2791038	0		+=			
ANR	2791239	Identifier	len		2791038	0					
ANR	2791240	CastExpression	( int ) log10 ( 10 * ( double ) val )		2791038	1					
ANR	2791241	CastTarget	int		2791038	0					
ANR	2791242	CallExpression	log10 ( 10 * ( double ) val )		2791038	1					
ANR	2791243	Callee	log10		2791038	0					
ANR	2791244	Identifier	log10		2791038	0					
ANR	2791245	ArgumentList	10 * ( double ) val		2791038	1					
ANR	2791246	Argument	10 * ( double ) val		2791038	0					
ANR	2791247	MultiplicativeExpression	10 * ( double ) val		2791038	0		*			
ANR	2791248	PrimaryExpression	10		2791038	0					
ANR	2791249	CastExpression	( double ) val		2791038	1					
ANR	2791250	CastTarget	double		2791038	0					
ANR	2791251	Identifier	val		2791038	1					
ANR	2791252	ElseStatement	else		2791038	0					
ANR	2791253	CompoundStatement		36:9:903:903	2791038	0					
ANR	2791254	ExpressionStatement	* ++ strptr = zval_get_string ( tmp )	1244:3:32531:32563	2791038	0	True				
ANR	2791255	AssignmentExpression	* ++ strptr = zval_get_string ( tmp )		2791038	0		=			
ANR	2791256	UnaryOperationExpression	* ++ strptr		2791038	0					
ANR	2791257	UnaryOperator	*		2791038	0					
ANR	2791258	UnaryExpression	++ strptr		2791038	1					
ANR	2791259	IncDec	++		2791038	0					
ANR	2791260	Identifier	strptr		2791038	1					
ANR	2791261	CallExpression	zval_get_string ( tmp )		2791038	1					
ANR	2791262	Callee	zval_get_string		2791038	0					
ANR	2791263	Identifier	zval_get_string		2791038	0					
ANR	2791264	ArgumentList	tmp		2791038	1					
ANR	2791265	Argument	tmp		2791038	0					
ANR	2791266	Identifier	tmp		2791038	0					
ANR	2791267	ExpressionStatement	len += ZSTR_LEN ( * strptr )	1245:3:32568:32592	2791038	1	True				
ANR	2791268	AssignmentExpression	len += ZSTR_LEN ( * strptr )		2791038	0		+=			
ANR	2791269	Identifier	len		2791038	0					
ANR	2791270	CallExpression	ZSTR_LEN ( * strptr )		2791038	1					
ANR	2791271	Callee	ZSTR_LEN		2791038	0					
ANR	2791272	Identifier	ZSTR_LEN		2791038	0					
ANR	2791273	ArgumentList	* strptr		2791038	1					
ANR	2791274	Argument	* strptr		2791038	0					
ANR	2791275	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791276	UnaryOperator	*		2791038	0					
ANR	2791277	Identifier	strptr		2791038	1					
ANR	2791278	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1247:3:32601:32624	2791038	20	True				
ANR	2791279	CallExpression	ZEND_HASH_FOREACH_END ( )		2791038	0					
ANR	2791280	Callee	ZEND_HASH_FOREACH_END		2791038	0					
ANR	2791281	Identifier	ZEND_HASH_FOREACH_END		2791038	0					
ANR	2791282	ArgumentList			2791038	1					
ANR	2791283	ExpressionStatement	"str = zend_string_alloc ( len + ( numelems - 1 ) * ZSTR_LEN ( delim ) , 0 )"	1249:1:32628:32694	2791038	21	True				
ANR	2791284	AssignmentExpression	"str = zend_string_alloc ( len + ( numelems - 1 ) * ZSTR_LEN ( delim ) , 0 )"		2791038	0		=			
ANR	2791285	Identifier	str		2791038	0					
ANR	2791286	CallExpression	"zend_string_alloc ( len + ( numelems - 1 ) * ZSTR_LEN ( delim ) , 0 )"		2791038	1					
ANR	2791287	Callee	zend_string_alloc		2791038	0					
ANR	2791288	Identifier	zend_string_alloc		2791038	0					
ANR	2791289	ArgumentList	len + ( numelems - 1 ) * ZSTR_LEN ( delim )		2791038	1					
ANR	2791290	Argument	len + ( numelems - 1 ) * ZSTR_LEN ( delim )		2791038	0					
ANR	2791291	AdditiveExpression	len + ( numelems - 1 ) * ZSTR_LEN ( delim )		2791038	0		+			
ANR	2791292	Identifier	len		2791038	0					
ANR	2791293	MultiplicativeExpression	( numelems - 1 ) * ZSTR_LEN ( delim )		2791038	1		*			
ANR	2791294	AdditiveExpression	numelems - 1		2791038	0		-			
ANR	2791295	Identifier	numelems		2791038	0					
ANR	2791296	PrimaryExpression	1		2791038	1					
ANR	2791297	CallExpression	ZSTR_LEN ( delim )		2791038	1					
ANR	2791298	Callee	ZSTR_LEN		2791038	0					
ANR	2791299	Identifier	ZSTR_LEN		2791038	0					
ANR	2791300	ArgumentList	delim		2791038	1					
ANR	2791301	Argument	delim		2791038	0					
ANR	2791302	Identifier	delim		2791038	0					
ANR	2791303	Argument	0		2791038	1					
ANR	2791304	PrimaryExpression	0		2791038	0					
ANR	2791305	ExpressionStatement	cptr = ZSTR_VAL ( str ) + ZSTR_LEN ( str )	1250:1:32697:32733	2791038	22	True				
ANR	2791306	AssignmentExpression	cptr = ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2791038	0		=			
ANR	2791307	Identifier	cptr		2791038	0					
ANR	2791308	AdditiveExpression	ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2791038	1		+			
ANR	2791309	CallExpression	ZSTR_VAL ( str )		2791038	0					
ANR	2791310	Callee	ZSTR_VAL		2791038	0					
ANR	2791311	Identifier	ZSTR_VAL		2791038	0					
ANR	2791312	ArgumentList	str		2791038	1					
ANR	2791313	Argument	str		2791038	0					
ANR	2791314	Identifier	str		2791038	0					
ANR	2791315	CallExpression	ZSTR_LEN ( str )		2791038	1					
ANR	2791316	Callee	ZSTR_LEN		2791038	0					
ANR	2791317	Identifier	ZSTR_LEN		2791038	0					
ANR	2791318	ArgumentList	str		2791038	1					
ANR	2791319	Argument	str		2791038	0					
ANR	2791320	Identifier	str		2791038	0					
ANR	2791321	ExpressionStatement	* cptr = 0	1251:1:32736:32745	2791038	23	True				
ANR	2791322	AssignmentExpression	* cptr = 0		2791038	0		=			
ANR	2791323	UnaryOperationExpression	* cptr		2791038	0					
ANR	2791324	UnaryOperator	*		2791038	0					
ANR	2791325	Identifier	cptr		2791038	1					
ANR	2791326	PrimaryExpression	0		2791038	1					
ANR	2791327	DoStatement	do		2791038	24					
ANR	2791328	CompoundStatement		46:4:1129:1129	2791038	0					
ANR	2791329	IfStatement	if ( * strptr )		2791038	0					
ANR	2791330	Condition	* strptr	1254:6:32760:32766	2791038	0	True				
ANR	2791331	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791332	UnaryOperator	*		2791038	0					
ANR	2791333	Identifier	strptr		2791038	1					
ANR	2791334	CompoundStatement		47:15:1146:1146	2791038	1					
ANR	2791335	ExpressionStatement	cptr -= ZSTR_LEN ( * strptr )	1255:3:32774:32799	2791038	0	True				
ANR	2791336	AssignmentExpression	cptr -= ZSTR_LEN ( * strptr )		2791038	0		-=			
ANR	2791337	Identifier	cptr		2791038	0					
ANR	2791338	CallExpression	ZSTR_LEN ( * strptr )		2791038	1					
ANR	2791339	Callee	ZSTR_LEN		2791038	0					
ANR	2791340	Identifier	ZSTR_LEN		2791038	0					
ANR	2791341	ArgumentList	* strptr		2791038	1					
ANR	2791342	Argument	* strptr		2791038	0					
ANR	2791343	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791344	UnaryOperator	*		2791038	0					
ANR	2791345	Identifier	strptr		2791038	1					
ANR	2791346	ExpressionStatement	"memcpy ( cptr , ZSTR_VAL ( * strptr ) , ZSTR_LEN ( * strptr ) )"	1256:3:32804:32854	2791038	1	True				
ANR	2791347	CallExpression	"memcpy ( cptr , ZSTR_VAL ( * strptr ) , ZSTR_LEN ( * strptr ) )"		2791038	0					
ANR	2791348	Callee	memcpy		2791038	0					
ANR	2791349	Identifier	memcpy		2791038	0					
ANR	2791350	ArgumentList	cptr		2791038	1					
ANR	2791351	Argument	cptr		2791038	0					
ANR	2791352	Identifier	cptr		2791038	0					
ANR	2791353	Argument	ZSTR_VAL ( * strptr )		2791038	1					
ANR	2791354	CallExpression	ZSTR_VAL ( * strptr )		2791038	0					
ANR	2791355	Callee	ZSTR_VAL		2791038	0					
ANR	2791356	Identifier	ZSTR_VAL		2791038	0					
ANR	2791357	ArgumentList	* strptr		2791038	1					
ANR	2791358	Argument	* strptr		2791038	0					
ANR	2791359	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791360	UnaryOperator	*		2791038	0					
ANR	2791361	Identifier	strptr		2791038	1					
ANR	2791362	Argument	ZSTR_LEN ( * strptr )		2791038	2					
ANR	2791363	CallExpression	ZSTR_LEN ( * strptr )		2791038	0					
ANR	2791364	Callee	ZSTR_LEN		2791038	0					
ANR	2791365	Identifier	ZSTR_LEN		2791038	0					
ANR	2791366	ArgumentList	* strptr		2791038	1					
ANR	2791367	Argument	* strptr		2791038	0					
ANR	2791368	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791369	UnaryOperator	*		2791038	0					
ANR	2791370	Identifier	strptr		2791038	1					
ANR	2791371	ExpressionStatement	zend_string_release ( * strptr )	1257:3:32859:32887	2791038	2	True				
ANR	2791372	CallExpression	zend_string_release ( * strptr )		2791038	0					
ANR	2791373	Callee	zend_string_release		2791038	0					
ANR	2791374	Identifier	zend_string_release		2791038	0					
ANR	2791375	ArgumentList	* strptr		2791038	1					
ANR	2791376	Argument	* strptr		2791038	0					
ANR	2791377	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791378	UnaryOperator	*		2791038	0					
ANR	2791379	Identifier	strptr		2791038	1					
ANR	2791380	ElseStatement	else		2791038	0					
ANR	2791381	CompoundStatement		54:3:1328:1398	2791038	0					
ANR	2791382	IdentifierDeclStatement	char * oldPtr = cptr ;	1259:3:32903:32922	2791038	0	True				
ANR	2791383	IdentifierDecl	* oldPtr = cptr		2791038	0					
ANR	2791384	IdentifierDeclType	char *		2791038	0					
ANR	2791385	Identifier	oldPtr		2791038	1					
ANR	2791386	AssignmentExpression	* oldPtr = cptr		2791038	2		=			
ANR	2791387	Identifier	cptr		2791038	0					
ANR	2791388	Identifier	cptr		2791038	1					
ANR	2791389	IdentifierDeclStatement	char oldVal = * cptr ;	1260:3:32927:32946	2791038	1	True				
ANR	2791390	IdentifierDecl	oldVal = * cptr		2791038	0					
ANR	2791391	IdentifierDeclType	char		2791038	0					
ANR	2791392	Identifier	oldVal		2791038	1					
ANR	2791393	AssignmentExpression	oldVal = * cptr		2791038	2		=			
ANR	2791394	Identifier	oldVal		2791038	0					
ANR	2791395	UnaryOperationExpression	* cptr		2791038	1					
ANR	2791396	UnaryOperator	*		2791038	0					
ANR	2791397	Identifier	cptr		2791038	1					
ANR	2791398	IdentifierDeclStatement	zend_long val = ( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ] ;	1261:3:32951:33021	2791038	2	True				
ANR	2791399	IdentifierDecl	val = ( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ]		2791038	0					
ANR	2791400	IdentifierDeclType	zend_long		2791038	0					
ANR	2791401	Identifier	val		2791038	1					
ANR	2791402	AssignmentExpression	val = ( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ]		2791038	2		=			
ANR	2791403	Identifier	val		2791038	0					
ANR	2791404	ArrayIndexing	( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ]		2791038	1					
ANR	2791405	CastExpression	( zend_long * ) ( strings + numelems )		2791038	0					
ANR	2791406	CastTarget	zend_long *		2791038	0					
ANR	2791407	AdditiveExpression	strings + numelems		2791038	1		+			
ANR	2791408	Identifier	strings		2791038	0					
ANR	2791409	Identifier	numelems		2791038	1					
ANR	2791410	AdditiveExpression	strptr - strings		2791038	1		-			
ANR	2791411	Identifier	strptr		2791038	0					
ANR	2791412	Identifier	strings		2791038	1					
ANR	2791413	ExpressionStatement	"cptr = zend_print_long_to_buf ( cptr , val )"	1262:3:33026:33066	2791038	3	True				
ANR	2791414	AssignmentExpression	"cptr = zend_print_long_to_buf ( cptr , val )"		2791038	0		=			
ANR	2791415	Identifier	cptr		2791038	0					
ANR	2791416	CallExpression	"zend_print_long_to_buf ( cptr , val )"		2791038	1					
ANR	2791417	Callee	zend_print_long_to_buf		2791038	0					
ANR	2791418	Identifier	zend_print_long_to_buf		2791038	0					
ANR	2791419	ArgumentList	cptr		2791038	1					
ANR	2791420	Argument	cptr		2791038	0					
ANR	2791421	Identifier	cptr		2791038	0					
ANR	2791422	Argument	val		2791038	1					
ANR	2791423	Identifier	val		2791038	0					
ANR	2791424	ExpressionStatement	* oldPtr = oldVal	1263:3:33071:33087	2791038	4	True				
ANR	2791425	AssignmentExpression	* oldPtr = oldVal		2791038	0		=			
ANR	2791426	UnaryOperationExpression	* oldPtr		2791038	0					
ANR	2791427	UnaryOperator	*		2791038	0					
ANR	2791428	Identifier	oldPtr		2791038	1					
ANR	2791429	Identifier	oldVal		2791038	1					
ANR	2791430	ExpressionStatement	cptr -= ZSTR_LEN ( delim )	1266:2:33096:33119	2791038	1	True				
ANR	2791431	AssignmentExpression	cptr -= ZSTR_LEN ( delim )		2791038	0		-=			
ANR	2791432	Identifier	cptr		2791038	0					
ANR	2791433	CallExpression	ZSTR_LEN ( delim )		2791038	1					
ANR	2791434	Callee	ZSTR_LEN		2791038	0					
ANR	2791435	Identifier	ZSTR_LEN		2791038	0					
ANR	2791436	ArgumentList	delim		2791038	1					
ANR	2791437	Argument	delim		2791038	0					
ANR	2791438	Identifier	delim		2791038	0					
ANR	2791439	ExpressionStatement	"memcpy ( cptr , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) )"	1267:2:33123:33169	2791038	2	True				
ANR	2791440	CallExpression	"memcpy ( cptr , ZSTR_VAL ( delim ) , ZSTR_LEN ( delim ) )"		2791038	0					
ANR	2791441	Callee	memcpy		2791038	0					
ANR	2791442	Identifier	memcpy		2791038	0					
ANR	2791443	ArgumentList	cptr		2791038	1					
ANR	2791444	Argument	cptr		2791038	0					
ANR	2791445	Identifier	cptr		2791038	0					
ANR	2791446	Argument	ZSTR_VAL ( delim )		2791038	1					
ANR	2791447	CallExpression	ZSTR_VAL ( delim )		2791038	0					
ANR	2791448	Callee	ZSTR_VAL		2791038	0					
ANR	2791449	Identifier	ZSTR_VAL		2791038	0					
ANR	2791450	ArgumentList	delim		2791038	1					
ANR	2791451	Argument	delim		2791038	0					
ANR	2791452	Identifier	delim		2791038	0					
ANR	2791453	Argument	ZSTR_LEN ( delim )		2791038	2					
ANR	2791454	CallExpression	ZSTR_LEN ( delim )		2791038	0					
ANR	2791455	Callee	ZSTR_LEN		2791038	0					
ANR	2791456	Identifier	ZSTR_LEN		2791038	0					
ANR	2791457	ArgumentList	delim		2791038	1					
ANR	2791458	Argument	delim		2791038	0					
ANR	2791459	Identifier	delim		2791038	0					
ANR	2791460	Condition	-- strptr > strings	1268:10:33181:33198	2791038	1	True				
ANR	2791461	RelationalExpression	-- strptr > strings		2791038	0		>			
ANR	2791462	UnaryExpression	-- strptr		2791038	0					
ANR	2791463	IncDec	--		2791038	0					
ANR	2791464	Identifier	strptr		2791038	1					
ANR	2791465	Identifier	strings		2791038	1					
ANR	2791466	IfStatement	if ( * strptr )		2791038	25					
ANR	2791467	Condition	* strptr	1270:5:33208:33214	2791038	0	True				
ANR	2791468	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791469	UnaryOperator	*		2791038	0					
ANR	2791470	Identifier	strptr		2791038	1					
ANR	2791471	CompoundStatement		63:14:1594:1594	2791038	1					
ANR	2791472	ExpressionStatement	"memcpy ( ZSTR_VAL ( str ) , ZSTR_VAL ( * strptr ) , ZSTR_LEN ( * strptr ) )"	1271:2:33221:33280	2791038	0	True				
ANR	2791473	CallExpression	"memcpy ( ZSTR_VAL ( str ) , ZSTR_VAL ( * strptr ) , ZSTR_LEN ( * strptr ) )"		2791038	0					
ANR	2791474	Callee	memcpy		2791038	0					
ANR	2791475	Identifier	memcpy		2791038	0					
ANR	2791476	ArgumentList	ZSTR_VAL ( str )		2791038	1					
ANR	2791477	Argument	ZSTR_VAL ( str )		2791038	0					
ANR	2791478	CallExpression	ZSTR_VAL ( str )		2791038	0					
ANR	2791479	Callee	ZSTR_VAL		2791038	0					
ANR	2791480	Identifier	ZSTR_VAL		2791038	0					
ANR	2791481	ArgumentList	str		2791038	1					
ANR	2791482	Argument	str		2791038	0					
ANR	2791483	Identifier	str		2791038	0					
ANR	2791484	Argument	ZSTR_VAL ( * strptr )		2791038	1					
ANR	2791485	CallExpression	ZSTR_VAL ( * strptr )		2791038	0					
ANR	2791486	Callee	ZSTR_VAL		2791038	0					
ANR	2791487	Identifier	ZSTR_VAL		2791038	0					
ANR	2791488	ArgumentList	* strptr		2791038	1					
ANR	2791489	Argument	* strptr		2791038	0					
ANR	2791490	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791491	UnaryOperator	*		2791038	0					
ANR	2791492	Identifier	strptr		2791038	1					
ANR	2791493	Argument	ZSTR_LEN ( * strptr )		2791038	2					
ANR	2791494	CallExpression	ZSTR_LEN ( * strptr )		2791038	0					
ANR	2791495	Callee	ZSTR_LEN		2791038	0					
ANR	2791496	Identifier	ZSTR_LEN		2791038	0					
ANR	2791497	ArgumentList	* strptr		2791038	1					
ANR	2791498	Argument	* strptr		2791038	0					
ANR	2791499	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791500	UnaryOperator	*		2791038	0					
ANR	2791501	Identifier	strptr		2791038	1					
ANR	2791502	ExpressionStatement	zend_string_release ( * strptr )	1272:2:33284:33312	2791038	1	True				
ANR	2791503	CallExpression	zend_string_release ( * strptr )		2791038	0					
ANR	2791504	Callee	zend_string_release		2791038	0					
ANR	2791505	Identifier	zend_string_release		2791038	0					
ANR	2791506	ArgumentList	* strptr		2791038	1					
ANR	2791507	Argument	* strptr		2791038	0					
ANR	2791508	UnaryOperationExpression	* strptr		2791038	0					
ANR	2791509	UnaryOperator	*		2791038	0					
ANR	2791510	Identifier	strptr		2791038	1					
ANR	2791511	ElseStatement	else		2791038	0					
ANR	2791512	CompoundStatement		68:2:1726:1745	2791038	0					
ANR	2791513	IdentifierDeclStatement	char * oldPtr = cptr ;	1274:2:33326:33345	2791038	0	True				
ANR	2791514	IdentifierDecl	* oldPtr = cptr		2791038	0					
ANR	2791515	IdentifierDeclType	char *		2791038	0					
ANR	2791516	Identifier	oldPtr		2791038	1					
ANR	2791517	AssignmentExpression	* oldPtr = cptr		2791038	2		=			
ANR	2791518	Identifier	cptr		2791038	0					
ANR	2791519	Identifier	cptr		2791038	1					
ANR	2791520	IdentifierDeclStatement	char oldVal = * cptr ;	1275:2:33349:33368	2791038	1	True				
ANR	2791521	IdentifierDecl	oldVal = * cptr		2791038	0					
ANR	2791522	IdentifierDeclType	char		2791038	0					
ANR	2791523	Identifier	oldVal		2791038	1					
ANR	2791524	AssignmentExpression	oldVal = * cptr		2791038	2		=			
ANR	2791525	Identifier	oldVal		2791038	0					
ANR	2791526	UnaryOperationExpression	* cptr		2791038	1					
ANR	2791527	UnaryOperator	*		2791038	0					
ANR	2791528	Identifier	cptr		2791038	1					
ANR	2791529	ExpressionStatement	"zend_print_long_to_buf ( cptr , ( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ] )"	1276:2:33372:33456	2791038	2	True				
ANR	2791530	CallExpression	"zend_print_long_to_buf ( cptr , ( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ] )"		2791038	0					
ANR	2791531	Callee	zend_print_long_to_buf		2791038	0					
ANR	2791532	Identifier	zend_print_long_to_buf		2791038	0					
ANR	2791533	ArgumentList	cptr		2791038	1					
ANR	2791534	Argument	cptr		2791038	0					
ANR	2791535	Identifier	cptr		2791038	0					
ANR	2791536	Argument	( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ]		2791038	1					
ANR	2791537	ArrayIndexing	( ( zend_long * ) ( strings + numelems ) ) [ strptr - strings ]		2791038	0					
ANR	2791538	CastExpression	( zend_long * ) ( strings + numelems )		2791038	0					
ANR	2791539	CastTarget	zend_long *		2791038	0					
ANR	2791540	AdditiveExpression	strings + numelems		2791038	1		+			
ANR	2791541	Identifier	strings		2791038	0					
ANR	2791542	Identifier	numelems		2791038	1					
ANR	2791543	AdditiveExpression	strptr - strings		2791038	1		-			
ANR	2791544	Identifier	strptr		2791038	0					
ANR	2791545	Identifier	strings		2791038	1					
ANR	2791546	ExpressionStatement	* oldPtr = oldVal	1277:2:33460:33476	2791038	3	True				
ANR	2791547	AssignmentExpression	* oldPtr = oldVal		2791038	0		=			
ANR	2791548	UnaryOperationExpression	* oldPtr		2791038	0					
ANR	2791549	UnaryOperator	*		2791038	0					
ANR	2791550	Identifier	oldPtr		2791038	1					
ANR	2791551	Identifier	oldVal		2791038	1					
ANR	2791552	ExpressionStatement	efree ( strings )	1280:1:33483:33497	2791038	26	True				
ANR	2791553	CallExpression	efree ( strings )		2791038	0					
ANR	2791554	Callee	efree		2791038	0					
ANR	2791555	Identifier	efree		2791038	0					
ANR	2791556	ArgumentList	strings		2791038	1					
ANR	2791557	Argument	strings		2791038	0					
ANR	2791558	Identifier	strings		2791038	0					
ANR	2791559	ExpressionStatement	RETURN_NEW_STR ( str )	1281:1:33500:33519	2791038	27	True				
ANR	2791560	CallExpression	RETURN_NEW_STR ( str )		2791038	0					
ANR	2791561	Callee	RETURN_NEW_STR		2791038	0					
ANR	2791562	Identifier	RETURN_NEW_STR		2791038	0					
ANR	2791563	ArgumentList	str		2791038	1					
ANR	2791564	Argument	str		2791038	0					
ANR	2791565	Identifier	str		2791038	0					
ANR	2791566	ReturnType	PHPAPI void		2791038	1					
ANR	2791567	Identifier	php_implode		2791038	2					
ANR	2791568	ParameterList	"const zend_string * delim , zval * arr , zval * return_value"		2791038	3					
ANR	2791569	Parameter	const zend_string * delim	1207:24:31565:31588	2791038	0	True				
ANR	2791570	ParameterType	const zend_string *		2791038	0					
ANR	2791571	Identifier	delim		2791038	1					
ANR	2791572	Parameter	zval * arr	1207:50:31591:31599	2791038	1	True				
ANR	2791573	ParameterType	zval *		2791038	0					
ANR	2791574	Identifier	arr		2791038	1					
ANR	2791575	Parameter	zval * return_value	1207:61:31602:31619	2791038	2	True				
ANR	2791576	ParameterType	zval *		2791038	0					
ANR	2791577	Identifier	return_value		2791038	1					
ANR	2791578	CFGEntryNode	ENTRY		2791038		True				
ANR	2791579	CFGExitNode	EXIT		2791038		True				
ANR	2791580	Symbol	return_value		2791038						
ANR	2791581	Symbol	numelems		2791038						
ANR	2791582	Symbol	cptr		2791038						
ANR	2791583	Symbol	* ++ strptr		2791038						
ANR	2791584	Symbol	log10		2791038						
ANR	2791585	Symbol	strptr		2791038						
ANR	2791586	Symbol	zend_print_long_to_buf		2791038						
ANR	2791587	Symbol	oldPtr		2791038						
ANR	2791588	Symbol	emalloc		2791038						
ANR	2791589	Symbol	len		2791038						
ANR	2791590	Symbol	strings		2791038						
ANR	2791591	Symbol	tmp		2791038						
ANR	2791592	Symbol	IS_LONG		2791038						
ANR	2791593	Symbol	Z_ARRVAL_P		2791038						
ANR	2791594	Symbol	* strptr		2791038						
ANR	2791595	Symbol	delim		2791038						
ANR	2791596	Symbol	arr		2791038						
ANR	2791597	Symbol	val		2791038						
ANR	2791598	Symbol	* numelems		2791038						
ANR	2791599	Symbol	zend_string_alloc		2791038						
ANR	2791600	Symbol	NULL		2791038						
ANR	2791601	Symbol	zend_hash_num_elements		2791038						
ANR	2791602	Symbol	zval_get_string		2791038						
ANR	2791603	Symbol	Z_TYPE_P		2791038						
ANR	2791604	Symbol	Z_LVAL_P		2791038						
ANR	2791605	Symbol	ZSTR_VAL		2791038						
ANR	2791606	Symbol	str		2791038						
ANR	2791607	Symbol	oldVal		2791038						
ANR	2791608	Symbol	ZSTR_LEN		2791038						
ANR	2791609	Symbol	* strings		2791038						
ANR	2791610	Symbol	* cptr		2791038						
ANR	2791611	Symbol	* oldPtr		2791038						
ANR	2791612	DeclStmt									
ANR	2791613	Decl							zval	zval *	arg1
ANR	2791614	Decl							zval	zval *	arg2
ANR	2791615	Decl							zval	zval *	arr
ANR	2791616	DeclStmt									
ANR	2791617	Decl							zend_string	zend_string *	delim
ANR	2791618	DeclStmt									
ANR	2791619	Decl							zend_string	zend_string *	str
ANR	2791620	Decl							zend_string	zend_string *	tok
ANR	2791621	DeclStmt									
ANR	2791622	Decl							char	char *	token
ANR	2791623	DeclStmt									
ANR	2791624	Decl							char	char *	token_end
ANR	2791625	DeclStmt									
ANR	2791626	Decl							char	char *	p
ANR	2791627	DeclStmt									
ANR	2791628	Decl							char	char *	pe
ANR	2791629	DeclStmt									
ANR	2791630	Decl							size_t	size_t	skipped
ANR	2791631	Function	php_strtoupper	1417:0:36332:36520							
ANR	2791632	FunctionDef	"php_strtoupper (char * s , size_t len)"		2791631	0					
ANR	2791633	CompoundStatement		1418:0:36381:36520	2791631	0					
ANR	2791634	IdentifierDeclStatement	"unsigned char * c , * e ;"	1419:1:36384:36404	2791631	0	True				
ANR	2791635	IdentifierDecl	* c		2791631	0					
ANR	2791636	IdentifierDeclType	unsigned char *		2791631	0					
ANR	2791637	Identifier	c		2791631	1					
ANR	2791638	IdentifierDecl	* e		2791631	1					
ANR	2791639	IdentifierDeclType	unsigned char *		2791631	0					
ANR	2791640	Identifier	e		2791631	1					
ANR	2791641	ExpressionStatement	c = ( unsigned char * ) s	1421:1:36408:36430	2791631	1	True				
ANR	2791642	AssignmentExpression	c = ( unsigned char * ) s		2791631	0		=			
ANR	2791643	Identifier	c		2791631	0					
ANR	2791644	CastExpression	( unsigned char * ) s		2791631	1					
ANR	2791645	CastTarget	unsigned char *		2791631	0					
ANR	2791646	Identifier	s		2791631	1					
ANR	2791647	ExpressionStatement	e = ( unsigned char * ) c + len	1422:1:36433:36459	2791631	2	True				
ANR	2791648	AssignmentExpression	e = ( unsigned char * ) c + len		2791631	0		=			
ANR	2791649	Identifier	e		2791631	0					
ANR	2791650	AdditiveExpression	( unsigned char * ) c + len		2791631	1		+			
ANR	2791651	CastExpression	( unsigned char * ) c		2791631	0					
ANR	2791652	CastTarget	unsigned char *		2791631	0					
ANR	2791653	Identifier	c		2791631	1					
ANR	2791654	Identifier	len		2791631	1					
ANR	2791655	WhileStatement	while ( c < e )		2791631	3					
ANR	2791656	Condition	c < e	1424:8:36470:36474	2791631	0	True				
ANR	2791657	RelationalExpression	c < e		2791631	0		<			
ANR	2791658	Identifier	c		2791631	0					
ANR	2791659	Identifier	e		2791631	1					
ANR	2791660	CompoundStatement		7:15:95:95	2791631	1					
ANR	2791661	ExpressionStatement	* c = toupper ( * c )	1425:2:36481:36497	2791631	0	True				
ANR	2791662	AssignmentExpression	* c = toupper ( * c )		2791631	0		=			
ANR	2791663	UnaryOperationExpression	* c		2791631	0					
ANR	2791664	UnaryOperator	*		2791631	0					
ANR	2791665	Identifier	c		2791631	1					
ANR	2791666	CallExpression	toupper ( * c )		2791631	1					
ANR	2791667	Callee	toupper		2791631	0					
ANR	2791668	Identifier	toupper		2791631	0					
ANR	2791669	ArgumentList	* c		2791631	1					
ANR	2791670	Argument	* c		2791631	0					
ANR	2791671	UnaryOperationExpression	* c		2791631	0					
ANR	2791672	UnaryOperator	*		2791631	0					
ANR	2791673	Identifier	c		2791631	1					
ANR	2791674	ExpressionStatement	c ++	1426:2:36501:36504	2791631	1	True				
ANR	2791675	PostIncDecOperationExpression	c ++		2791631	0					
ANR	2791676	Identifier	c		2791631	0					
ANR	2791677	IncDec	++		2791631	1					
ANR	2791678	ReturnStatement	return s ;	1428:1:36510:36518	2791631	4	True				
ANR	2791679	Identifier	s		2791631	0					
ANR	2791680	ReturnType	PHPAPI char *		2791631	1					
ANR	2791681	Identifier	php_strtoupper		2791631	2					
ANR	2791682	ParameterList	"char * s , size_t len"		2791631	3					
ANR	2791683	Parameter	char * s	1417:28:36360:36366	2791631	0	True				
ANR	2791684	ParameterType	char *		2791631	0					
ANR	2791685	Identifier	s		2791631	1					
ANR	2791686	Parameter	size_t len	1417:37:36369:36378	2791631	1	True				
ANR	2791687	ParameterType	size_t		2791631	0					
ANR	2791688	Identifier	len		2791631	1					
ANR	2791689	CFGEntryNode	ENTRY		2791631		True				
ANR	2791690	CFGExitNode	EXIT		2791631		True				
ANR	2791691	Symbol	s		2791631						
ANR	2791692	Symbol	c		2791631						
ANR	2791693	Symbol	len		2791631						
ANR	2791694	Symbol	e		2791631						
ANR	2791695	Symbol	toupper		2791631						
ANR	2791696	Symbol	* c		2791631						
ANR	2791697	Function	php_string_toupper	1434:0:36563:37128							
ANR	2791698	FunctionDef	php_string_toupper (zend_string * s)		2791697	0					
ANR	2791699	CompoundStatement		1435:0:36618:37128	2791697	0					
ANR	2791700	IdentifierDeclStatement	"unsigned char * c , * e ;"	1436:1:36621:36641	2791697	0	True				
ANR	2791701	IdentifierDecl	* c		2791697	0					
ANR	2791702	IdentifierDeclType	unsigned char *		2791697	0					
ANR	2791703	Identifier	c		2791697	1					
ANR	2791704	IdentifierDecl	* e		2791697	1					
ANR	2791705	IdentifierDeclType	unsigned char *		2791697	0					
ANR	2791706	Identifier	e		2791697	1					
ANR	2791707	ExpressionStatement	c = ( unsigned char * ) ZSTR_VAL ( s )	1438:1:36645:36677	2791697	1	True				
ANR	2791708	AssignmentExpression	c = ( unsigned char * ) ZSTR_VAL ( s )		2791697	0		=			
ANR	2791709	Identifier	c		2791697	0					
ANR	2791710	CastExpression	( unsigned char * ) ZSTR_VAL ( s )		2791697	1					
ANR	2791711	CastTarget	unsigned char *		2791697	0					
ANR	2791712	CallExpression	ZSTR_VAL ( s )		2791697	1					
ANR	2791713	Callee	ZSTR_VAL		2791697	0					
ANR	2791714	Identifier	ZSTR_VAL		2791697	0					
ANR	2791715	ArgumentList	s		2791697	1					
ANR	2791716	Argument	s		2791697	0					
ANR	2791717	Identifier	s		2791697	0					
ANR	2791718	ExpressionStatement	e = c + ZSTR_LEN ( s )	1439:1:36680:36699	2791697	2	True				
ANR	2791719	AssignmentExpression	e = c + ZSTR_LEN ( s )		2791697	0		=			
ANR	2791720	Identifier	e		2791697	0					
ANR	2791721	AdditiveExpression	c + ZSTR_LEN ( s )		2791697	1		+			
ANR	2791722	Identifier	c		2791697	0					
ANR	2791723	CallExpression	ZSTR_LEN ( s )		2791697	1					
ANR	2791724	Callee	ZSTR_LEN		2791697	0					
ANR	2791725	Identifier	ZSTR_LEN		2791697	0					
ANR	2791726	ArgumentList	s		2791697	1					
ANR	2791727	Argument	s		2791697	0					
ANR	2791728	Identifier	s		2791697	0					
ANR	2791729	WhileStatement	while ( c < e )		2791697	3					
ANR	2791730	Condition	c < e	1441:8:36710:36714	2791697	0	True				
ANR	2791731	RelationalExpression	c < e		2791697	0		<			
ANR	2791732	Identifier	c		2791697	0					
ANR	2791733	Identifier	e		2791697	1					
ANR	2791734	CompoundStatement		7:15:98:98	2791697	1					
ANR	2791735	IfStatement	if ( ! isupper ( * c ) )		2791697	0					
ANR	2791736	Condition	! isupper ( * c )	1442:6:36725:36736	2791697	0	True				
ANR	2791737	UnaryOperationExpression	! isupper ( * c )		2791697	0					
ANR	2791738	UnaryOperator	!		2791697	0					
ANR	2791739	CallExpression	isupper ( * c )		2791697	1					
ANR	2791740	Callee	isupper		2791697	0					
ANR	2791741	Identifier	isupper		2791697	0					
ANR	2791742	ArgumentList	* c		2791697	1					
ANR	2791743	Argument	* c		2791697	0					
ANR	2791744	UnaryOperationExpression	* c		2791697	0					
ANR	2791745	UnaryOperator	*		2791697	0					
ANR	2791746	Identifier	c		2791697	1					
ANR	2791747	CompoundStatement		10:3:155:207	2791697	1					
ANR	2791748	Statement	register	1443:3:36744:36751	2791697	0	True				
ANR	2791749	IdentifierDeclStatement	unsigned char * r ;	1443:12:36753:36769	2791697	1	True				
ANR	2791750	IdentifierDecl	* r		2791697	0					
ANR	2791751	IdentifierDeclType	unsigned char *		2791697	0					
ANR	2791752	Identifier	r		2791697	1					
ANR	2791753	IdentifierDeclStatement	"zend_string * res = zend_string_alloc ( ZSTR_LEN ( s ) , 0 ) ;"	1444:3:36774:36826	2791697	2	True				
ANR	2791754	IdentifierDecl	"* res = zend_string_alloc ( ZSTR_LEN ( s ) , 0 )"		2791697	0					
ANR	2791755	IdentifierDeclType	zend_string *		2791697	0					
ANR	2791756	Identifier	res		2791697	1					
ANR	2791757	AssignmentExpression	"* res = zend_string_alloc ( ZSTR_LEN ( s ) , 0 )"		2791697	2		=			
ANR	2791758	Identifier	res		2791697	0					
ANR	2791759	CallExpression	"zend_string_alloc ( ZSTR_LEN ( s ) , 0 )"		2791697	1					
ANR	2791760	Callee	zend_string_alloc		2791697	0					
ANR	2791761	Identifier	zend_string_alloc		2791697	0					
ANR	2791762	ArgumentList	ZSTR_LEN ( s )		2791697	1					
ANR	2791763	Argument	ZSTR_LEN ( s )		2791697	0					
ANR	2791764	CallExpression	ZSTR_LEN ( s )		2791697	0					
ANR	2791765	Callee	ZSTR_LEN		2791697	0					
ANR	2791766	Identifier	ZSTR_LEN		2791697	0					
ANR	2791767	ArgumentList	s		2791697	1					
ANR	2791768	Argument	s		2791697	0					
ANR	2791769	Identifier	s		2791697	0					
ANR	2791770	Argument	0		2791697	1					
ANR	2791771	PrimaryExpression	0		2791697	0					
ANR	2791772	IfStatement	if ( c != ( unsigned char * ) ZSTR_VAL ( s ) )		2791697	3					
ANR	2791773	Condition	c != ( unsigned char * ) ZSTR_VAL ( s )	1446:7:36836:36867	2791697	0	True				
ANR	2791774	EqualityExpression	c != ( unsigned char * ) ZSTR_VAL ( s )		2791697	0		!=			
ANR	2791775	Identifier	c		2791697	0					
ANR	2791776	CastExpression	( unsigned char * ) ZSTR_VAL ( s )		2791697	1					
ANR	2791777	CastTarget	unsigned char *		2791697	0					
ANR	2791778	CallExpression	ZSTR_VAL ( s )		2791697	1					
ANR	2791779	Callee	ZSTR_VAL		2791697	0					
ANR	2791780	Identifier	ZSTR_VAL		2791697	0					
ANR	2791781	ArgumentList	s		2791697	1					
ANR	2791782	Argument	s		2791697	0					
ANR	2791783	Identifier	s		2791697	0					
ANR	2791784	CompoundStatement		12:41:251:251	2791697	1					
ANR	2791785	ExpressionStatement	"memcpy ( ZSTR_VAL ( res ) , ZSTR_VAL ( s ) , c - ( unsigned char * ) ZSTR_VAL ( s ) )"	1447:4:36876:36943	2791697	0	True				
ANR	2791786	CallExpression	"memcpy ( ZSTR_VAL ( res ) , ZSTR_VAL ( s ) , c - ( unsigned char * ) ZSTR_VAL ( s ) )"		2791697	0					
ANR	2791787	Callee	memcpy		2791697	0					
ANR	2791788	Identifier	memcpy		2791697	0					
ANR	2791789	ArgumentList	ZSTR_VAL ( res )		2791697	1					
ANR	2791790	Argument	ZSTR_VAL ( res )		2791697	0					
ANR	2791791	CallExpression	ZSTR_VAL ( res )		2791697	0					
ANR	2791792	Callee	ZSTR_VAL		2791697	0					
ANR	2791793	Identifier	ZSTR_VAL		2791697	0					
ANR	2791794	ArgumentList	res		2791697	1					
ANR	2791795	Argument	res		2791697	0					
ANR	2791796	Identifier	res		2791697	0					
ANR	2791797	Argument	ZSTR_VAL ( s )		2791697	1					
ANR	2791798	CallExpression	ZSTR_VAL ( s )		2791697	0					
ANR	2791799	Callee	ZSTR_VAL		2791697	0					
ANR	2791800	Identifier	ZSTR_VAL		2791697	0					
ANR	2791801	ArgumentList	s		2791697	1					
ANR	2791802	Argument	s		2791697	0					
ANR	2791803	Identifier	s		2791697	0					
ANR	2791804	Argument	c - ( unsigned char * ) ZSTR_VAL ( s )		2791697	2					
ANR	2791805	AdditiveExpression	c - ( unsigned char * ) ZSTR_VAL ( s )		2791697	0		-			
ANR	2791806	Identifier	c		2791697	0					
ANR	2791807	CastExpression	( unsigned char * ) ZSTR_VAL ( s )		2791697	1					
ANR	2791808	CastTarget	unsigned char *		2791697	0					
ANR	2791809	CallExpression	ZSTR_VAL ( s )		2791697	1					
ANR	2791810	Callee	ZSTR_VAL		2791697	0					
ANR	2791811	Identifier	ZSTR_VAL		2791697	0					
ANR	2791812	ArgumentList	s		2791697	1					
ANR	2791813	Argument	s		2791697	0					
ANR	2791814	Identifier	s		2791697	0					
ANR	2791815	ExpressionStatement	r = c + ( ZSTR_VAL ( res ) - ZSTR_VAL ( s ) )	1449:3:36953:36990	2791697	4	True				
ANR	2791816	AssignmentExpression	r = c + ( ZSTR_VAL ( res ) - ZSTR_VAL ( s ) )		2791697	0		=			
ANR	2791817	Identifier	r		2791697	0					
ANR	2791818	AdditiveExpression	c + ( ZSTR_VAL ( res ) - ZSTR_VAL ( s ) )		2791697	1		+			
ANR	2791819	Identifier	c		2791697	0					
ANR	2791820	AdditiveExpression	ZSTR_VAL ( res ) - ZSTR_VAL ( s )		2791697	1		-			
ANR	2791821	CallExpression	ZSTR_VAL ( res )		2791697	0					
ANR	2791822	Callee	ZSTR_VAL		2791697	0					
ANR	2791823	Identifier	ZSTR_VAL		2791697	0					
ANR	2791824	ArgumentList	res		2791697	1					
ANR	2791825	Argument	res		2791697	0					
ANR	2791826	Identifier	res		2791697	0					
ANR	2791827	CallExpression	ZSTR_VAL ( s )		2791697	1					
ANR	2791828	Callee	ZSTR_VAL		2791697	0					
ANR	2791829	Identifier	ZSTR_VAL		2791697	0					
ANR	2791830	ArgumentList	s		2791697	1					
ANR	2791831	Argument	s		2791697	0					
ANR	2791832	Identifier	s		2791697	0					
ANR	2791833	WhileStatement	while ( c < e )		2791697	5					
ANR	2791834	Condition	c < e	1450:10:37002:37006	2791697	0	True				
ANR	2791835	RelationalExpression	c < e		2791697	0		<			
ANR	2791836	Identifier	c		2791697	0					
ANR	2791837	Identifier	e		2791697	1					
ANR	2791838	CompoundStatement		16:17:390:390	2791697	1					
ANR	2791839	ExpressionStatement	* r = toupper ( * c )	1451:4:37015:37031	2791697	0	True				
ANR	2791840	AssignmentExpression	* r = toupper ( * c )		2791697	0		=			
ANR	2791841	UnaryOperationExpression	* r		2791697	0					
ANR	2791842	UnaryOperator	*		2791697	0					
ANR	2791843	Identifier	r		2791697	1					
ANR	2791844	CallExpression	toupper ( * c )		2791697	1					
ANR	2791845	Callee	toupper		2791697	0					
ANR	2791846	Identifier	toupper		2791697	0					
ANR	2791847	ArgumentList	* c		2791697	1					
ANR	2791848	Argument	* c		2791697	0					
ANR	2791849	UnaryOperationExpression	* c		2791697	0					
ANR	2791850	UnaryOperator	*		2791697	0					
ANR	2791851	Identifier	c		2791697	1					
ANR	2791852	ExpressionStatement	r ++	1452:4:37037:37040	2791697	1	True				
ANR	2791853	PostIncDecOperationExpression	r ++		2791697	0					
ANR	2791854	Identifier	r		2791697	0					
ANR	2791855	IncDec	++		2791697	1					
ANR	2791856	ExpressionStatement	c ++	1453:4:37046:37049	2791697	2	True				
ANR	2791857	PostIncDecOperationExpression	c ++		2791697	0					
ANR	2791858	Identifier	c		2791697	0					
ANR	2791859	IncDec	++		2791697	1					
ANR	2791860	ExpressionStatement	* r = '\\0'	1455:3:37059:37068	2791697	6	True				
ANR	2791861	AssignmentExpression	* r = '\\0'		2791697	0		=			
ANR	2791862	UnaryOperationExpression	* r		2791697	0					
ANR	2791863	UnaryOperator	*		2791697	0					
ANR	2791864	Identifier	r		2791697	1					
ANR	2791865	PrimaryExpression	'\\0'		2791697	1					
ANR	2791866	ReturnStatement	return res ;	1456:3:37073:37083	2791697	7	True				
ANR	2791867	Identifier	res		2791697	0					
ANR	2791868	ExpressionStatement	c ++	1458:2:37091:37094	2791697	1	True				
ANR	2791869	PostIncDecOperationExpression	c ++		2791697	0					
ANR	2791870	Identifier	c		2791697	0					
ANR	2791871	IncDec	++		2791697	1					
ANR	2791872	ReturnStatement	return zend_string_copy ( s ) ;	1460:1:37100:37126	2791697	4	True				
ANR	2791873	CallExpression	zend_string_copy ( s )		2791697	0					
ANR	2791874	Callee	zend_string_copy		2791697	0					
ANR	2791875	Identifier	zend_string_copy		2791697	0					
ANR	2791876	ArgumentList	s		2791697	1					
ANR	2791877	Argument	s		2791697	0					
ANR	2791878	Identifier	s		2791697	0					
ANR	2791879	ReturnType	PHPAPI zend_string *		2791697	1					
ANR	2791880	Identifier	php_string_toupper		2791697	2					
ANR	2791881	ParameterList	zend_string * s		2791697	3					
ANR	2791882	Parameter	zend_string * s	1434:39:36602:36615	2791697	0	True				
ANR	2791883	ParameterType	zend_string *		2791697	0					
ANR	2791884	Identifier	s		2791697	1					
ANR	2791885	CFGEntryNode	ENTRY		2791697		True				
ANR	2791886	CFGExitNode	EXIT		2791697		True				
ANR	2791887	Symbol	res		2791697						
ANR	2791888	Symbol	zend_string_alloc		2791697						
ANR	2791889	Symbol	c		2791697						
ANR	2791890	Symbol	e		2791697						
ANR	2791891	Symbol	toupper		2791697						
ANR	2791892	Symbol	isupper		2791697						
ANR	2791893	Symbol	zend_string_copy		2791697						
ANR	2791894	Symbol	* c		2791697						
ANR	2791895	Symbol	ZSTR_VAL		2791697						
ANR	2791896	Symbol	r		2791697						
ANR	2791897	Symbol	s		2791697						
ANR	2791898	Symbol	ZSTR_LEN		2791697						
ANR	2791899	Symbol	* r		2791697						
ANR	2791900	DeclStmt									
ANR	2791901	Decl							zend_string	zend_string *	arg
ANR	2791902	Function	php_strtolower	1486:0:37536:37707							
ANR	2791903	FunctionDef	"php_strtolower (char * s , size_t len)"		2791902	0					
ANR	2791904	CompoundStatement		1487:0:37585:37707	2791902	0					
ANR	2791905	IdentifierDeclStatement	"unsigned char * c , * e ;"	1488:1:37588:37608	2791902	0	True				
ANR	2791906	IdentifierDecl	* c		2791902	0					
ANR	2791907	IdentifierDeclType	unsigned char *		2791902	0					
ANR	2791908	Identifier	c		2791902	1					
ANR	2791909	IdentifierDecl	* e		2791902	1					
ANR	2791910	IdentifierDeclType	unsigned char *		2791902	0					
ANR	2791911	Identifier	e		2791902	1					
ANR	2791912	ExpressionStatement	c = ( unsigned char * ) s	1490:1:37612:37634	2791902	1	True				
ANR	2791913	AssignmentExpression	c = ( unsigned char * ) s		2791902	0		=			
ANR	2791914	Identifier	c		2791902	0					
ANR	2791915	CastExpression	( unsigned char * ) s		2791902	1					
ANR	2791916	CastTarget	unsigned char *		2791902	0					
ANR	2791917	Identifier	s		2791902	1					
ANR	2791918	ExpressionStatement	e = c + len	1491:1:37637:37646	2791902	2	True				
ANR	2791919	AssignmentExpression	e = c + len		2791902	0		=			
ANR	2791920	Identifier	e		2791902	0					
ANR	2791921	AdditiveExpression	c + len		2791902	1		+			
ANR	2791922	Identifier	c		2791902	0					
ANR	2791923	Identifier	len		2791902	1					
ANR	2791924	WhileStatement	while ( c < e )		2791902	3					
ANR	2791925	Condition	c < e	1493:8:37657:37661	2791902	0	True				
ANR	2791926	RelationalExpression	c < e		2791902	0		<			
ANR	2791927	Identifier	c		2791902	0					
ANR	2791928	Identifier	e		2791902	1					
ANR	2791929	CompoundStatement		7:15:78:78	2791902	1					
ANR	2791930	ExpressionStatement	* c = tolower ( * c )	1494:2:37668:37684	2791902	0	True				
ANR	2791931	AssignmentExpression	* c = tolower ( * c )		2791902	0		=			
ANR	2791932	UnaryOperationExpression	* c		2791902	0					
ANR	2791933	UnaryOperator	*		2791902	0					
ANR	2791934	Identifier	c		2791902	1					
ANR	2791935	CallExpression	tolower ( * c )		2791902	1					
ANR	2791936	Callee	tolower		2791902	0					
ANR	2791937	Identifier	tolower		2791902	0					
ANR	2791938	ArgumentList	* c		2791902	1					
ANR	2791939	Argument	* c		2791902	0					
ANR	2791940	UnaryOperationExpression	* c		2791902	0					
ANR	2791941	UnaryOperator	*		2791902	0					
ANR	2791942	Identifier	c		2791902	1					
ANR	2791943	ExpressionStatement	c ++	1495:2:37688:37691	2791902	1	True				
ANR	2791944	PostIncDecOperationExpression	c ++		2791902	0					
ANR	2791945	Identifier	c		2791902	0					
ANR	2791946	IncDec	++		2791902	1					
ANR	2791947	ReturnStatement	return s ;	1497:1:37697:37705	2791902	4	True				
ANR	2791948	Identifier	s		2791902	0					
ANR	2791949	ReturnType	PHPAPI char *		2791902	1					
ANR	2791950	Identifier	php_strtolower		2791902	2					
ANR	2791951	ParameterList	"char * s , size_t len"		2791902	3					
ANR	2791952	Parameter	char * s	1486:28:37564:37570	2791902	0	True				
ANR	2791953	ParameterType	char *		2791902	0					
ANR	2791954	Identifier	s		2791902	1					
ANR	2791955	Parameter	size_t len	1486:37:37573:37582	2791902	1	True				
ANR	2791956	ParameterType	size_t		2791902	0					
ANR	2791957	Identifier	len		2791902	1					
ANR	2791958	CFGEntryNode	ENTRY		2791902		True				
ANR	2791959	CFGExitNode	EXIT		2791902		True				
ANR	2791960	Symbol	s		2791902						
ANR	2791961	Symbol	c		2791902						
ANR	2791962	Symbol	len		2791902						
ANR	2791963	Symbol	tolower		2791902						
ANR	2791964	Symbol	e		2791902						
ANR	2791965	Symbol	* c		2791902						
ANR	2791966	Function	php_string_tolower	1503:0:37750:38315							
ANR	2791967	FunctionDef	php_string_tolower (zend_string * s)		2791966	0					
ANR	2791968	CompoundStatement		1504:0:37805:38315	2791966	0					
ANR	2791969	IdentifierDeclStatement	"unsigned char * c , * e ;"	1505:1:37808:37828	2791966	0	True				
ANR	2791970	IdentifierDecl	* c		2791966	0					
ANR	2791971	IdentifierDeclType	unsigned char *		2791966	0					
ANR	2791972	Identifier	c		2791966	1					
ANR	2791973	IdentifierDecl	* e		2791966	1					
ANR	2791974	IdentifierDeclType	unsigned char *		2791966	0					
ANR	2791975	Identifier	e		2791966	1					
ANR	2791976	ExpressionStatement	c = ( unsigned char * ) ZSTR_VAL ( s )	1507:1:37832:37864	2791966	1	True				
ANR	2791977	AssignmentExpression	c = ( unsigned char * ) ZSTR_VAL ( s )		2791966	0		=			
ANR	2791978	Identifier	c		2791966	0					
ANR	2791979	CastExpression	( unsigned char * ) ZSTR_VAL ( s )		2791966	1					
ANR	2791980	CastTarget	unsigned char *		2791966	0					
ANR	2791981	CallExpression	ZSTR_VAL ( s )		2791966	1					
ANR	2791982	Callee	ZSTR_VAL		2791966	0					
ANR	2791983	Identifier	ZSTR_VAL		2791966	0					
ANR	2791984	ArgumentList	s		2791966	1					
ANR	2791985	Argument	s		2791966	0					
ANR	2791986	Identifier	s		2791966	0					
ANR	2791987	ExpressionStatement	e = c + ZSTR_LEN ( s )	1508:1:37867:37886	2791966	2	True				
ANR	2791988	AssignmentExpression	e = c + ZSTR_LEN ( s )		2791966	0		=			
ANR	2791989	Identifier	e		2791966	0					
ANR	2791990	AdditiveExpression	c + ZSTR_LEN ( s )		2791966	1		+			
ANR	2791991	Identifier	c		2791966	0					
ANR	2791992	CallExpression	ZSTR_LEN ( s )		2791966	1					
ANR	2791993	Callee	ZSTR_LEN		2791966	0					
ANR	2791994	Identifier	ZSTR_LEN		2791966	0					
ANR	2791995	ArgumentList	s		2791966	1					
ANR	2791996	Argument	s		2791966	0					
ANR	2791997	Identifier	s		2791966	0					
ANR	2791998	WhileStatement	while ( c < e )		2791966	3					
ANR	2791999	Condition	c < e	1510:8:37897:37901	2791966	0	True				
ANR	2792000	RelationalExpression	c < e		2791966	0		<			
ANR	2792001	Identifier	c		2791966	0					
ANR	2792002	Identifier	e		2791966	1					
ANR	2792003	CompoundStatement		7:15:98:98	2791966	1					
ANR	2792004	IfStatement	if ( ! islower ( * c ) )		2791966	0					
ANR	2792005	Condition	! islower ( * c )	1511:6:37912:37923	2791966	0	True				
ANR	2792006	UnaryOperationExpression	! islower ( * c )		2791966	0					
ANR	2792007	UnaryOperator	!		2791966	0					
ANR	2792008	CallExpression	islower ( * c )		2791966	1					
ANR	2792009	Callee	islower		2791966	0					
ANR	2792010	Identifier	islower		2791966	0					
ANR	2792011	ArgumentList	* c		2791966	1					
ANR	2792012	Argument	* c		2791966	0					
ANR	2792013	UnaryOperationExpression	* c		2791966	0					
ANR	2792014	UnaryOperator	*		2791966	0					
ANR	2792015	Identifier	c		2791966	1					
ANR	2792016	CompoundStatement		10:3:155:207	2791966	1					
ANR	2792017	Statement	register	1512:3:37931:37938	2791966	0	True				
ANR	2792018	IdentifierDeclStatement	unsigned char * r ;	1512:12:37940:37956	2791966	1	True				
ANR	2792019	IdentifierDecl	* r		2791966	0					
ANR	2792020	IdentifierDeclType	unsigned char *		2791966	0					
ANR	2792021	Identifier	r		2791966	1					
ANR	2792022	IdentifierDeclStatement	"zend_string * res = zend_string_alloc ( ZSTR_LEN ( s ) , 0 ) ;"	1513:3:37961:38013	2791966	2	True				
ANR	2792023	IdentifierDecl	"* res = zend_string_alloc ( ZSTR_LEN ( s ) , 0 )"		2791966	0					
ANR	2792024	IdentifierDeclType	zend_string *		2791966	0					
ANR	2792025	Identifier	res		2791966	1					
ANR	2792026	AssignmentExpression	"* res = zend_string_alloc ( ZSTR_LEN ( s ) , 0 )"		2791966	2		=			
ANR	2792027	Identifier	res		2791966	0					
ANR	2792028	CallExpression	"zend_string_alloc ( ZSTR_LEN ( s ) , 0 )"		2791966	1					
ANR	2792029	Callee	zend_string_alloc		2791966	0					
ANR	2792030	Identifier	zend_string_alloc		2791966	0					
ANR	2792031	ArgumentList	ZSTR_LEN ( s )		2791966	1					
ANR	2792032	Argument	ZSTR_LEN ( s )		2791966	0					
ANR	2792033	CallExpression	ZSTR_LEN ( s )		2791966	0					
ANR	2792034	Callee	ZSTR_LEN		2791966	0					
ANR	2792035	Identifier	ZSTR_LEN		2791966	0					
ANR	2792036	ArgumentList	s		2791966	1					
ANR	2792037	Argument	s		2791966	0					
ANR	2792038	Identifier	s		2791966	0					
ANR	2792039	Argument	0		2791966	1					
ANR	2792040	PrimaryExpression	0		2791966	0					
ANR	2792041	IfStatement	if ( c != ( unsigned char * ) ZSTR_VAL ( s ) )		2791966	3					
ANR	2792042	Condition	c != ( unsigned char * ) ZSTR_VAL ( s )	1515:7:38023:38054	2791966	0	True				
ANR	2792043	EqualityExpression	c != ( unsigned char * ) ZSTR_VAL ( s )		2791966	0		!=			
ANR	2792044	Identifier	c		2791966	0					
ANR	2792045	CastExpression	( unsigned char * ) ZSTR_VAL ( s )		2791966	1					
ANR	2792046	CastTarget	unsigned char *		2791966	0					
ANR	2792047	CallExpression	ZSTR_VAL ( s )		2791966	1					
ANR	2792048	Callee	ZSTR_VAL		2791966	0					
ANR	2792049	Identifier	ZSTR_VAL		2791966	0					
ANR	2792050	ArgumentList	s		2791966	1					
ANR	2792051	Argument	s		2791966	0					
ANR	2792052	Identifier	s		2791966	0					
ANR	2792053	CompoundStatement		12:41:251:251	2791966	1					
ANR	2792054	ExpressionStatement	"memcpy ( ZSTR_VAL ( res ) , ZSTR_VAL ( s ) , c - ( unsigned char * ) ZSTR_VAL ( s ) )"	1516:4:38063:38130	2791966	0	True				
ANR	2792055	CallExpression	"memcpy ( ZSTR_VAL ( res ) , ZSTR_VAL ( s ) , c - ( unsigned char * ) ZSTR_VAL ( s ) )"		2791966	0					
ANR	2792056	Callee	memcpy		2791966	0					
ANR	2792057	Identifier	memcpy		2791966	0					
ANR	2792058	ArgumentList	ZSTR_VAL ( res )		2791966	1					
ANR	2792059	Argument	ZSTR_VAL ( res )		2791966	0					
ANR	2792060	CallExpression	ZSTR_VAL ( res )		2791966	0					
ANR	2792061	Callee	ZSTR_VAL		2791966	0					
ANR	2792062	Identifier	ZSTR_VAL		2791966	0					
ANR	2792063	ArgumentList	res		2791966	1					
ANR	2792064	Argument	res		2791966	0					
ANR	2792065	Identifier	res		2791966	0					
ANR	2792066	Argument	ZSTR_VAL ( s )		2791966	1					
ANR	2792067	CallExpression	ZSTR_VAL ( s )		2791966	0					
ANR	2792068	Callee	ZSTR_VAL		2791966	0					
ANR	2792069	Identifier	ZSTR_VAL		2791966	0					
ANR	2792070	ArgumentList	s		2791966	1					
ANR	2792071	Argument	s		2791966	0					
ANR	2792072	Identifier	s		2791966	0					
ANR	2792073	Argument	c - ( unsigned char * ) ZSTR_VAL ( s )		2791966	2					
ANR	2792074	AdditiveExpression	c - ( unsigned char * ) ZSTR_VAL ( s )		2791966	0		-			
ANR	2792075	Identifier	c		2791966	0					
ANR	2792076	CastExpression	( unsigned char * ) ZSTR_VAL ( s )		2791966	1					
ANR	2792077	CastTarget	unsigned char *		2791966	0					
ANR	2792078	CallExpression	ZSTR_VAL ( s )		2791966	1					
ANR	2792079	Callee	ZSTR_VAL		2791966	0					
ANR	2792080	Identifier	ZSTR_VAL		2791966	0					
ANR	2792081	ArgumentList	s		2791966	1					
ANR	2792082	Argument	s		2791966	0					
ANR	2792083	Identifier	s		2791966	0					
ANR	2792084	ExpressionStatement	r = c + ( ZSTR_VAL ( res ) - ZSTR_VAL ( s ) )	1518:3:38140:38177	2791966	4	True				
ANR	2792085	AssignmentExpression	r = c + ( ZSTR_VAL ( res ) - ZSTR_VAL ( s ) )		2791966	0		=			
ANR	2792086	Identifier	r		2791966	0					
ANR	2792087	AdditiveExpression	c + ( ZSTR_VAL ( res ) - ZSTR_VAL ( s ) )		2791966	1		+			
ANR	2792088	Identifier	c		2791966	0					
ANR	2792089	AdditiveExpression	ZSTR_VAL ( res ) - ZSTR_VAL ( s )		2791966	1		-			
ANR	2792090	CallExpression	ZSTR_VAL ( res )		2791966	0					
ANR	2792091	Callee	ZSTR_VAL		2791966	0					
ANR	2792092	Identifier	ZSTR_VAL		2791966	0					
ANR	2792093	ArgumentList	res		2791966	1					
ANR	2792094	Argument	res		2791966	0					
ANR	2792095	Identifier	res		2791966	0					
ANR	2792096	CallExpression	ZSTR_VAL ( s )		2791966	1					
ANR	2792097	Callee	ZSTR_VAL		2791966	0					
ANR	2792098	Identifier	ZSTR_VAL		2791966	0					
ANR	2792099	ArgumentList	s		2791966	1					
ANR	2792100	Argument	s		2791966	0					
ANR	2792101	Identifier	s		2791966	0					
ANR	2792102	WhileStatement	while ( c < e )		2791966	5					
ANR	2792103	Condition	c < e	1519:10:38189:38193	2791966	0	True				
ANR	2792104	RelationalExpression	c < e		2791966	0		<			
ANR	2792105	Identifier	c		2791966	0					
ANR	2792106	Identifier	e		2791966	1					
ANR	2792107	CompoundStatement		16:17:390:390	2791966	1					
ANR	2792108	ExpressionStatement	* r = tolower ( * c )	1520:4:38202:38218	2791966	0	True				
ANR	2792109	AssignmentExpression	* r = tolower ( * c )		2791966	0		=			
ANR	2792110	UnaryOperationExpression	* r		2791966	0					
ANR	2792111	UnaryOperator	*		2791966	0					
ANR	2792112	Identifier	r		2791966	1					
ANR	2792113	CallExpression	tolower ( * c )		2791966	1					
ANR	2792114	Callee	tolower		2791966	0					
ANR	2792115	Identifier	tolower		2791966	0					
ANR	2792116	ArgumentList	* c		2791966	1					
ANR	2792117	Argument	* c		2791966	0					
ANR	2792118	UnaryOperationExpression	* c		2791966	0					
ANR	2792119	UnaryOperator	*		2791966	0					
ANR	2792120	Identifier	c		2791966	1					
ANR	2792121	ExpressionStatement	r ++	1521:4:38224:38227	2791966	1	True				
ANR	2792122	PostIncDecOperationExpression	r ++		2791966	0					
ANR	2792123	Identifier	r		2791966	0					
ANR	2792124	IncDec	++		2791966	1					
ANR	2792125	ExpressionStatement	c ++	1522:4:38233:38236	2791966	2	True				
ANR	2792126	PostIncDecOperationExpression	c ++		2791966	0					
ANR	2792127	Identifier	c		2791966	0					
ANR	2792128	IncDec	++		2791966	1					
ANR	2792129	ExpressionStatement	* r = '\\0'	1524:3:38246:38255	2791966	6	True				
ANR	2792130	AssignmentExpression	* r = '\\0'		2791966	0		=			
ANR	2792131	UnaryOperationExpression	* r		2791966	0					
ANR	2792132	UnaryOperator	*		2791966	0					
ANR	2792133	Identifier	r		2791966	1					
ANR	2792134	PrimaryExpression	'\\0'		2791966	1					
ANR	2792135	ReturnStatement	return res ;	1525:3:38260:38270	2791966	7	True				
ANR	2792136	Identifier	res		2791966	0					
ANR	2792137	ExpressionStatement	c ++	1527:2:38278:38281	2791966	1	True				
ANR	2792138	PostIncDecOperationExpression	c ++		2791966	0					
ANR	2792139	Identifier	c		2791966	0					
ANR	2792140	IncDec	++		2791966	1					
ANR	2792141	ReturnStatement	return zend_string_copy ( s ) ;	1529:1:38287:38313	2791966	4	True				
ANR	2792142	CallExpression	zend_string_copy ( s )		2791966	0					
ANR	2792143	Callee	zend_string_copy		2791966	0					
ANR	2792144	Identifier	zend_string_copy		2791966	0					
ANR	2792145	ArgumentList	s		2791966	1					
ANR	2792146	Argument	s		2791966	0					
ANR	2792147	Identifier	s		2791966	0					
ANR	2792148	ReturnType	PHPAPI zend_string *		2791966	1					
ANR	2792149	Identifier	php_string_tolower		2791966	2					
ANR	2792150	ParameterList	zend_string * s		2791966	3					
ANR	2792151	Parameter	zend_string * s	1503:39:37789:37802	2791966	0	True				
ANR	2792152	ParameterType	zend_string *		2791966	0					
ANR	2792153	Identifier	s		2791966	1					
ANR	2792154	CFGEntryNode	ENTRY		2791966		True				
ANR	2792155	CFGExitNode	EXIT		2791966		True				
ANR	2792156	Symbol	res		2791966						
ANR	2792157	Symbol	zend_string_alloc		2791966						
ANR	2792158	Symbol	c		2791966						
ANR	2792159	Symbol	tolower		2791966						
ANR	2792160	Symbol	e		2791966						
ANR	2792161	Symbol	islower		2791966						
ANR	2792162	Symbol	zend_string_copy		2791966						
ANR	2792163	Symbol	* c		2791966						
ANR	2792164	Symbol	ZSTR_VAL		2791966						
ANR	2792165	Symbol	r		2791966						
ANR	2792166	Symbol	s		2791966						
ANR	2792167	Symbol	ZSTR_LEN		2791966						
ANR	2792168	Symbol	* r		2791966						
ANR	2792169	DeclStmt									
ANR	2792170	Decl							zend_string	zend_string *	str
ANR	2792171	Function	php_basename	1555:0:38721:40177							
ANR	2792172	FunctionDef	"php_basename (const char * s , size_t len , char * suffix , size_t sufflen)"		2792171	0					
ANR	2792173	CompoundStatement		1556:0:38811:40177	2792171	0					
ANR	2792174	IdentifierDeclStatement	"char * c , * comp , * cend ;"	1557:1:38814:38835	2792171	0	True				
ANR	2792175	IdentifierDecl	* c		2792171	0					
ANR	2792176	IdentifierDeclType	char *		2792171	0					
ANR	2792177	Identifier	c		2792171	1					
ANR	2792178	IdentifierDecl	* comp		2792171	1					
ANR	2792179	IdentifierDeclType	char *		2792171	0					
ANR	2792180	Identifier	comp		2792171	1					
ANR	2792181	IdentifierDecl	* cend		2792171	2					
ANR	2792182	IdentifierDeclType	char *		2792171	0					
ANR	2792183	Identifier	cend		2792171	1					
ANR	2792184	IdentifierDeclStatement	"size_t inc_len , cnt ;"	1558:1:38838:38857	2792171	1	True				
ANR	2792185	IdentifierDecl	inc_len		2792171	0					
ANR	2792186	IdentifierDeclType	size_t		2792171	0					
ANR	2792187	Identifier	inc_len		2792171	1					
ANR	2792188	IdentifierDecl	cnt		2792171	1					
ANR	2792189	IdentifierDeclType	size_t		2792171	0					
ANR	2792190	Identifier	cnt		2792171	1					
ANR	2792191	IdentifierDeclStatement	int state ;	1559:1:38860:38869	2792171	2	True				
ANR	2792192	IdentifierDecl	state		2792171	0					
ANR	2792193	IdentifierDeclType	int		2792171	0					
ANR	2792194	Identifier	state		2792171	1					
ANR	2792195	IdentifierDeclStatement	zend_string * ret ;	1560:1:38872:38888	2792171	3	True				
ANR	2792196	IdentifierDecl	* ret		2792171	0					
ANR	2792197	IdentifierDeclType	zend_string *		2792171	0					
ANR	2792198	Identifier	ret		2792171	1					
ANR	2792199	ExpressionStatement	c = comp = cend = ( char * ) s	1562:1:38892:38918	2792171	4	True				
ANR	2792200	AssignmentExpression	c = comp = cend = ( char * ) s		2792171	0		=			
ANR	2792201	Identifier	c		2792171	0					
ANR	2792202	AssignmentExpression	comp = cend = ( char * ) s		2792171	1		=			
ANR	2792203	Identifier	comp		2792171	0					
ANR	2792204	AssignmentExpression	cend = ( char * ) s		2792171	1		=			
ANR	2792205	Identifier	cend		2792171	0					
ANR	2792206	CastExpression	( char * ) s		2792171	1					
ANR	2792207	CastTarget	char *		2792171	0					
ANR	2792208	Identifier	s		2792171	1					
ANR	2792209	ExpressionStatement	cnt = len	1563:1:38921:38930	2792171	5	True				
ANR	2792210	AssignmentExpression	cnt = len		2792171	0		=			
ANR	2792211	Identifier	cnt		2792171	0					
ANR	2792212	Identifier	len		2792171	1					
ANR	2792213	ExpressionStatement	state = 0	1564:1:38933:38942	2792171	6	True				
ANR	2792214	AssignmentExpression	state = 0		2792171	0		=			
ANR	2792215	Identifier	state		2792171	0					
ANR	2792216	PrimaryExpression	0		2792171	1					
ANR	2792217	WhileStatement	while ( cnt > 0 )		2792171	7					
ANR	2792218	Condition	cnt > 0	1565:8:38952:38958	2792171	0	True				
ANR	2792219	RelationalExpression	cnt > 0		2792171	0		>			
ANR	2792220	Identifier	cnt		2792171	0					
ANR	2792221	PrimaryExpression	0		2792171	1					
ANR	2792222	CompoundStatement		10:17:149:149	2792171	1					
ANR	2792223	ExpressionStatement	"inc_len = ( * c == '\\0' ? 1 : php_mblen ( c , cnt ) )"	1566:2:38965:39011	2792171	0	True				
ANR	2792224	AssignmentExpression	"inc_len = ( * c == '\\0' ? 1 : php_mblen ( c , cnt ) )"		2792171	0		=			
ANR	2792225	Identifier	inc_len		2792171	0					
ANR	2792226	ConditionalExpression	"* c == '\\0' ? 1 : php_mblen ( c , cnt )"		2792171	1					
ANR	2792227	Condition	* c == '\\0'		2792171	0					
ANR	2792228	EqualityExpression	* c == '\\0'		2792171	0		==			
ANR	2792229	UnaryOperationExpression	* c		2792171	0					
ANR	2792230	UnaryOperator	*		2792171	0					
ANR	2792231	Identifier	c		2792171	1					
ANR	2792232	PrimaryExpression	'\\0'		2792171	1					
ANR	2792233	PrimaryExpression	1		2792171	1					
ANR	2792234	CallExpression	"php_mblen ( c , cnt )"		2792171	2					
ANR	2792235	Callee	php_mblen		2792171	0					
ANR	2792236	Identifier	php_mblen		2792171	0					
ANR	2792237	ArgumentList	c		2792171	1					
ANR	2792238	Argument	c		2792171	0					
ANR	2792239	Identifier	c		2792171	0					
ANR	2792240	Argument	cnt		2792171	1					
ANR	2792241	Identifier	cnt		2792171	0					
ANR	2792242	SwitchStatement	switch ( inc_len )		2792171	1					
ANR	2792243	Condition	inc_len	1568:10:39024:39030	2792171	0	True				
ANR	2792244	Identifier	inc_len		2792171	0					
ANR	2792245	CompoundStatement		13:19:221:221	2792171	1					
ANR	2792246	Statement	case	1569:3:39038:39041	2792171	0	True				
ANR	2792247	Statement	-	1569:8:39043:39043	2792171	1	True				
ANR	2792248	Label	2 :	1569:9:39044:39045	2792171	2	True				
ANR	2792249	Statement	case	1570:3:39050:39053	2792171	3	True				
ANR	2792250	Statement	-	1570:8:39055:39055	2792171	4	True				
ANR	2792251	Label	1 :	1570:9:39056:39057	2792171	5	True				
ANR	2792252	ExpressionStatement	inc_len = 1	1571:4:39063:39074	2792171	6	True				
ANR	2792253	AssignmentExpression	inc_len = 1		2792171	0		=			
ANR	2792254	Identifier	inc_len		2792171	0					
ANR	2792255	PrimaryExpression	1		2792171	1					
ANR	2792256	ExpressionStatement	php_mb_reset ( )	1572:4:39080:39094	2792171	7	True				
ANR	2792257	CallExpression	php_mb_reset ( )		2792171	0					
ANR	2792258	Callee	php_mb_reset		2792171	0					
ANR	2792259	Identifier	php_mb_reset		2792171	0					
ANR	2792260	ArgumentList			2792171	1					
ANR	2792261	BreakStatement	break ;	1573:4:39100:39105	2792171	8	True				
ANR	2792262	Label	case 0 :	1574:3:39110:39116	2792171	9	True				
ANR	2792263	GotoStatement	goto quit_loop ;	1575:4:39122:39136	2792171	10	True				
ANR	2792264	Identifier	quit_loop		2792171	0					
ANR	2792265	Label	case 1 :	1576:3:39141:39147	2792171	11	True				
ANR	2792266	IfStatement	if ( * c == '/' || * c == '\\\\' )		2792171	12					
ANR	2792267	Condition	* c == '/' || * c == '\\\\'	1578:8:39200:39222	2792171	0	True				
ANR	2792268	OrExpression	* c == '/' || * c == '\\\\'		2792171	0		||			
ANR	2792269	EqualityExpression	* c == '/'		2792171	0		==			
ANR	2792270	UnaryOperationExpression	* c		2792171	0					
ANR	2792271	UnaryOperator	*		2792171	0					
ANR	2792272	Identifier	c		2792171	1					
ANR	2792273	PrimaryExpression	'/'		2792171	1					
ANR	2792274	EqualityExpression	* c == '\\\\'		2792171	1		==			
ANR	2792275	UnaryOperationExpression	* c		2792171	0					
ANR	2792276	UnaryOperator	*		2792171	0					
ANR	2792277	Identifier	c		2792171	1					
ANR	2792278	PrimaryExpression	'\\\\'		2792171	1					
ANR	2792279	CompoundStatement		23:33:413:413	2792171	1					
ANR	2792280	IfStatement	if ( state == 1 )		2792171	0					
ANR	2792281	Condition	state == 1	1582:9:39270:39279	2792171	0	True				
ANR	2792282	EqualityExpression	state == 1		2792171	0		==			
ANR	2792283	Identifier	state		2792171	0					
ANR	2792284	PrimaryExpression	1		2792171	1					
ANR	2792285	CompoundStatement		27:21:470:470	2792171	1					
ANR	2792286	ExpressionStatement	state = 0	1583:6:39290:39299	2792171	0	True				
ANR	2792287	AssignmentExpression	state = 0		2792171	0		=			
ANR	2792288	Identifier	state		2792171	0					
ANR	2792289	PrimaryExpression	0		2792171	1					
ANR	2792290	ExpressionStatement	cend = c	1584:6:39307:39315	2792171	1	True				
ANR	2792291	AssignmentExpression	cend = c		2792171	0		=			
ANR	2792292	Identifier	cend		2792171	0					
ANR	2792293	Identifier	c		2792171	1					
ANR	2792294	ElseStatement	else		2792171	0					
ANR	2792295	IfStatement	if ( ( * c == ':' && ( c - comp == 1 ) ) )		2792171	0					
ANR	2792296	Condition	* c == ':' && ( c - comp == 1 )	1590:15:39559:39588	2792171	0	True				
ANR	2792297	AndExpression	* c == ':' && ( c - comp == 1 )		2792171	0		&&			
ANR	2792298	EqualityExpression	* c == ':'		2792171	0		==			
ANR	2792299	UnaryOperationExpression	* c		2792171	0					
ANR	2792300	UnaryOperator	*		2792171	0					
ANR	2792301	Identifier	c		2792171	1					
ANR	2792302	PrimaryExpression	':'		2792171	1					
ANR	2792303	EqualityExpression	c - comp == 1		2792171	1		==			
ANR	2792304	AdditiveExpression	c - comp		2792171	0		-			
ANR	2792305	Identifier	c		2792171	0					
ANR	2792306	Identifier	comp		2792171	1					
ANR	2792307	PrimaryExpression	1		2792171	1					
ANR	2792308	CompoundStatement		35:47:779:779	2792171	1					
ANR	2792309	IfStatement	if ( state == 0 )		2792171	0					
ANR	2792310	Condition	state == 0	1591:9:39602:39611	2792171	0	True				
ANR	2792311	EqualityExpression	state == 0		2792171	0		==			
ANR	2792312	Identifier	state		2792171	0					
ANR	2792313	PrimaryExpression	0		2792171	1					
ANR	2792314	CompoundStatement		36:21:802:802	2792171	1					
ANR	2792315	ExpressionStatement	comp = c	1592:6:39622:39630	2792171	0	True				
ANR	2792316	AssignmentExpression	comp = c		2792171	0		=			
ANR	2792317	Identifier	comp		2792171	0					
ANR	2792318	Identifier	c		2792171	1					
ANR	2792319	ExpressionStatement	state = 1	1593:6:39638:39647	2792171	1	True				
ANR	2792320	AssignmentExpression	state = 1		2792171	0		=			
ANR	2792321	Identifier	state		2792171	0					
ANR	2792322	PrimaryExpression	1		2792171	1					
ANR	2792323	ElseStatement	else		2792171	0					
ANR	2792324	CompoundStatement		39:12:849:849	2792171	0					
ANR	2792325	ExpressionStatement	cend = c	1595:6:39669:39677	2792171	0	True				
ANR	2792326	AssignmentExpression	cend = c		2792171	0		=			
ANR	2792327	Identifier	cend		2792171	0					
ANR	2792328	Identifier	c		2792171	1					
ANR	2792329	ExpressionStatement	state = 0	1596:6:39685:39694	2792171	1	True				
ANR	2792330	AssignmentExpression	state = 0		2792171	0		=			
ANR	2792331	Identifier	state		2792171	0					
ANR	2792332	PrimaryExpression	0		2792171	1					
ANR	2792333	ElseStatement	else		2792171	0					
ANR	2792334	CompoundStatement		44:11:909:909	2792171	0					
ANR	2792335	IfStatement	if ( state == 0 )		2792171	0					
ANR	2792336	Condition	state == 0	1600:9:39732:39741	2792171	0	True				
ANR	2792337	EqualityExpression	state == 0		2792171	0		==			
ANR	2792338	Identifier	state		2792171	0					
ANR	2792339	PrimaryExpression	0		2792171	1					
ANR	2792340	CompoundStatement		45:21:932:932	2792171	1					
ANR	2792341	ExpressionStatement	comp = c	1601:6:39752:39760	2792171	0	True				
ANR	2792342	AssignmentExpression	comp = c		2792171	0		=			
ANR	2792343	Identifier	comp		2792171	0					
ANR	2792344	Identifier	c		2792171	1					
ANR	2792345	ExpressionStatement	state = 1	1602:6:39768:39777	2792171	1	True				
ANR	2792346	AssignmentExpression	state = 1		2792171	0		=			
ANR	2792347	Identifier	state		2792171	0					
ANR	2792348	PrimaryExpression	1		2792171	1					
ANR	2792349	BreakStatement	break ;	1605:4:39796:39801	2792171	13	True				
ANR	2792350	Label	default :	1606:3:39806:39813	2792171	14	True				
ANR	2792351	Identifier	default		2792171	0					
ANR	2792352	IfStatement	if ( state == 0 )		2792171	15					
ANR	2792353	Condition	state == 0	1607:8:39823:39832	2792171	0	True				
ANR	2792354	EqualityExpression	state == 0		2792171	0		==			
ANR	2792355	Identifier	state		2792171	0					
ANR	2792356	PrimaryExpression	0		2792171	1					
ANR	2792357	CompoundStatement		52:20:1023:1023	2792171	1					
ANR	2792358	ExpressionStatement	comp = c	1608:5:39842:39850	2792171	0	True				
ANR	2792359	AssignmentExpression	comp = c		2792171	0		=			
ANR	2792360	Identifier	comp		2792171	0					
ANR	2792361	Identifier	c		2792171	1					
ANR	2792362	ExpressionStatement	state = 1	1609:5:39857:39866	2792171	1	True				
ANR	2792363	AssignmentExpression	state = 1		2792171	0		=			
ANR	2792364	Identifier	state		2792171	0					
ANR	2792365	PrimaryExpression	1		2792171	1					
ANR	2792366	BreakStatement	break ;	1611:4:39878:39883	2792171	16	True				
ANR	2792367	ExpressionStatement	c += inc_len	1613:2:39891:39903	2792171	2	True				
ANR	2792368	AssignmentExpression	c += inc_len		2792171	0		+=			
ANR	2792369	Identifier	c		2792171	0					
ANR	2792370	Identifier	inc_len		2792171	1					
ANR	2792371	ExpressionStatement	cnt -= inc_len	1614:2:39907:39921	2792171	3	True				
ANR	2792372	AssignmentExpression	cnt -= inc_len		2792171	0		-=			
ANR	2792373	Identifier	cnt		2792171	0					
ANR	2792374	Identifier	inc_len		2792171	1					
ANR	2792375	Label	quit_loop :	1617:0:39927:39936	2792171	8	True				
ANR	2792376	Identifier	quit_loop		2792171	0					
ANR	2792377	IfStatement	if ( state == 1 )		2792171	9					
ANR	2792378	Condition	state == 1	1618:5:39943:39952	2792171	0	True				
ANR	2792379	EqualityExpression	state == 1		2792171	0		==			
ANR	2792380	Identifier	state		2792171	0					
ANR	2792381	PrimaryExpression	1		2792171	1					
ANR	2792382	CompoundStatement		63:17:1143:1143	2792171	1					
ANR	2792383	ExpressionStatement	cend = c	1619:2:39959:39967	2792171	0	True				
ANR	2792384	AssignmentExpression	cend = c		2792171	0		=			
ANR	2792385	Identifier	cend		2792171	0					
ANR	2792386	Identifier	c		2792171	1					
ANR	2792387	IfStatement	"if ( suffix != NULL && sufflen < ( size_t ) ( cend - comp ) && memcmp ( cend - sufflen , suffix , sufflen ) == 0 )"		2792171	10					
ANR	2792388	Condition	"suffix != NULL && sufflen < ( size_t ) ( cend - comp ) && memcmp ( cend - sufflen , suffix , sufflen ) == 0"	1621:5:39977:40076	2792171	0	True				
ANR	2792389	AndExpression	"suffix != NULL && sufflen < ( size_t ) ( cend - comp ) && memcmp ( cend - sufflen , suffix , sufflen ) == 0"		2792171	0		&&			
ANR	2792390	EqualityExpression	suffix != NULL		2792171	0		!=			
ANR	2792391	Identifier	suffix		2792171	0					
ANR	2792392	Identifier	NULL		2792171	1					
ANR	2792393	AndExpression	"sufflen < ( size_t ) ( cend - comp ) && memcmp ( cend - sufflen , suffix , sufflen ) == 0"		2792171	1		&&			
ANR	2792394	RelationalExpression	sufflen < ( size_t ) ( cend - comp )		2792171	0		<			
ANR	2792395	Identifier	sufflen		2792171	0					
ANR	2792396	CastExpression	( size_t ) ( cend - comp )		2792171	1					
ANR	2792397	CastTarget	size_t		2792171	0					
ANR	2792398	AdditiveExpression	cend - comp		2792171	1		-			
ANR	2792399	Identifier	cend		2792171	0					
ANR	2792400	Identifier	comp		2792171	1					
ANR	2792401	EqualityExpression	"memcmp ( cend - sufflen , suffix , sufflen ) == 0"		2792171	1		==			
ANR	2792402	CallExpression	"memcmp ( cend - sufflen , suffix , sufflen )"		2792171	0					
ANR	2792403	Callee	memcmp		2792171	0					
ANR	2792404	Identifier	memcmp		2792171	0					
ANR	2792405	ArgumentList	cend - sufflen		2792171	1					
ANR	2792406	Argument	cend - sufflen		2792171	0					
ANR	2792407	AdditiveExpression	cend - sufflen		2792171	0		-			
ANR	2792408	Identifier	cend		2792171	0					
ANR	2792409	Identifier	sufflen		2792171	1					
ANR	2792410	Argument	suffix		2792171	1					
ANR	2792411	Identifier	suffix		2792171	0					
ANR	2792412	Argument	sufflen		2792171	2					
ANR	2792413	Identifier	sufflen		2792171	0					
ANR	2792414	PrimaryExpression	0		2792171	1					
ANR	2792415	CompoundStatement		67:49:1267:1267	2792171	1					
ANR	2792416	ExpressionStatement	cend -= sufflen	1623:2:40083:40098	2792171	0	True				
ANR	2792417	AssignmentExpression	cend -= sufflen		2792171	0		-=			
ANR	2792418	Identifier	cend		2792171	0					
ANR	2792419	Identifier	sufflen		2792171	1					
ANR	2792420	ExpressionStatement	len = cend - comp	1626:1:40105:40122	2792171	11	True				
ANR	2792421	AssignmentExpression	len = cend - comp		2792171	0		=			
ANR	2792422	Identifier	len		2792171	0					
ANR	2792423	AdditiveExpression	cend - comp		2792171	1		-			
ANR	2792424	Identifier	cend		2792171	0					
ANR	2792425	Identifier	comp		2792171	1					
ANR	2792426	ExpressionStatement	"ret = zend_string_init ( comp , len , 0 )"	1628:1:40126:40162	2792171	12	True				
ANR	2792427	AssignmentExpression	"ret = zend_string_init ( comp , len , 0 )"		2792171	0		=			
ANR	2792428	Identifier	ret		2792171	0					
ANR	2792429	CallExpression	"zend_string_init ( comp , len , 0 )"		2792171	1					
ANR	2792430	Callee	zend_string_init		2792171	0					
ANR	2792431	Identifier	zend_string_init		2792171	0					
ANR	2792432	ArgumentList	comp		2792171	1					
ANR	2792433	Argument	comp		2792171	0					
ANR	2792434	Identifier	comp		2792171	0					
ANR	2792435	Argument	len		2792171	1					
ANR	2792436	Identifier	len		2792171	0					
ANR	2792437	Argument	0		2792171	2					
ANR	2792438	PrimaryExpression	0		2792171	0					
ANR	2792439	ReturnStatement	return ret ;	1629:1:40165:40175	2792171	13	True				
ANR	2792440	Identifier	ret		2792171	0					
ANR	2792441	ReturnType	PHPAPI zend_string *		2792171	1					
ANR	2792442	Identifier	php_basename		2792171	2					
ANR	2792443	ParameterList	"const char * s , size_t len , char * suffix , size_t sufflen"		2792171	3					
ANR	2792444	Parameter	const char * s	1555:33:38754:38766	2792171	0	True				
ANR	2792445	ParameterType	const char *		2792171	0					
ANR	2792446	Identifier	s		2792171	1					
ANR	2792447	Parameter	size_t len	1555:48:38769:38778	2792171	1	True				
ANR	2792448	ParameterType	size_t		2792171	0					
ANR	2792449	Identifier	len		2792171	1					
ANR	2792450	Parameter	char * suffix	1555:60:38781:38792	2792171	2	True				
ANR	2792451	ParameterType	char *		2792171	0					
ANR	2792452	Identifier	suffix		2792171	1					
ANR	2792453	Parameter	size_t sufflen	1555:74:38795:38808	2792171	3	True				
ANR	2792454	ParameterType	size_t		2792171	0					
ANR	2792455	Identifier	sufflen		2792171	1					
ANR	2792456	CFGEntryNode	ENTRY		2792171		True				
ANR	2792457	CFGExitNode	EXIT		2792171		True				
ANR	2792458	Symbol	ret		2792171						
ANR	2792459	Symbol	comp		2792171						
ANR	2792460	Symbol	c		2792171						
ANR	2792461	Symbol	NULL		2792171						
ANR	2792462	Symbol	cnt		2792171						
ANR	2792463	Symbol	suffix		2792171						
ANR	2792464	Symbol	* c		2792171						
ANR	2792465	Symbol	zend_string_init		2792171						
ANR	2792466	Symbol	s		2792171						
ANR	2792467	Symbol	sufflen		2792171						
ANR	2792468	Symbol	memcmp		2792171						
ANR	2792469	Symbol	len		2792171						
ANR	2792470	Symbol	cend		2792171						
ANR	2792471	Symbol	php_mblen		2792171						
ANR	2792472	Symbol	inc_len		2792171						
ANR	2792473	Symbol	state		2792171						
ANR	2792474	DeclStmt									
ANR	2792475	Decl							char	char *	string
ANR	2792476	Decl							char	char *	suffix
ANR	2792477	DeclStmt									
ANR	2792478	Decl							size_t	size_t	string_len
ANR	2792479	Decl							size_t	size_t	suffix_len
ANR	2792480	Function	php_dirname	1650:0:40663:40748							
ANR	2792481	FunctionDef	"php_dirname (char * path , size_t len)"		2792480	0					
ANR	2792482	CompoundStatement		1651:0:40713:40748	2792480	0					
ANR	2792483	ReturnStatement	"return zend_dirname ( path , len ) ;"	1652:1:40716:40746	2792480	0	True				
ANR	2792484	CallExpression	"zend_dirname ( path , len )"		2792480	0					
ANR	2792485	Callee	zend_dirname		2792480	0					
ANR	2792486	Identifier	zend_dirname		2792480	0					
ANR	2792487	ArgumentList	path		2792480	1					
ANR	2792488	Argument	path		2792480	0					
ANR	2792489	Identifier	path		2792480	0					
ANR	2792490	Argument	len		2792480	1					
ANR	2792491	Identifier	len		2792480	0					
ANR	2792492	ReturnType	PHPAPI size_t		2792480	1					
ANR	2792493	Identifier	php_dirname		2792480	2					
ANR	2792494	ParameterList	"char * path , size_t len"		2792480	3					
ANR	2792495	Parameter	char * path	1650:26:40689:40698	2792480	0	True				
ANR	2792496	ParameterType	char *		2792480	0					
ANR	2792497	Identifier	path		2792480	1					
ANR	2792498	Parameter	size_t len	1650:38:40701:40710	2792480	1	True				
ANR	2792499	ParameterType	size_t		2792480	0					
ANR	2792500	Identifier	len		2792480	1					
ANR	2792501	CFGEntryNode	ENTRY		2792480		True				
ANR	2792502	CFGExitNode	EXIT		2792480		True				
ANR	2792503	Symbol	path		2792480						
ANR	2792504	Symbol	len		2792480						
ANR	2792505	Symbol	zend_dirname		2792480						
ANR	2792506	DeclStmt									
ANR	2792507	Decl							char	char *	str
ANR	2792508	DeclStmt									
ANR	2792509	Decl							size_t	size_t	str_len
ANR	2792510	DeclStmt									
ANR	2792511	Decl							zend_string	zend_string *	ret
ANR	2792512	DeclStmt									
ANR	2792513	Decl							zend_long	zend_long	levels
ANR	2792514	DeclStmt									
ANR	2792515	Decl							zval	zval	tmp
ANR	2792516	DeclStmt									
ANR	2792517	Decl							char	char *	path
ANR	2792518	Decl							char	char *	dirname
ANR	2792519	DeclStmt									
ANR	2792520	Decl							size_t	size_t	path_len
ANR	2792521	DeclStmt									
ANR	2792522	Decl							int	int	have_basename
ANR	2792523	DeclStmt									
ANR	2792524	Decl							zend_long	zend_long	opt
ANR	2792525	DeclStmt									
ANR	2792526	Decl							zend_string	zend_string *	ret
ANR	2792527	DeclStmt									
ANR	2792528	Decl							const char	const char *	p
ANR	2792529	DeclStmt									
ANR	2792530	Decl							ptrdiff_t	ptrdiff_t	idx
ANR	2792531	DeclStmt									
ANR	2792532	Decl							const char	const char *	p
ANR	2792533	DeclStmt									
ANR	2792534	Decl							ptrdiff_t	ptrdiff_t	idx
ANR	2792535	DeclStmt									
ANR	2792536	Decl							zval	zval *	element
ANR	2792537	Function	php_stristr	1774:0:43550:43729							
ANR	2792538	FunctionDef	"php_stristr (char * s , char * t , size_t s_len , size_t t_len)"		2792537	0					
ANR	2792539	CompoundStatement		1775:0:43621:43729	2792537	0					
ANR	2792540	ExpressionStatement	"php_strtolower ( s , s_len )"	1776:1:43624:43648	2792537	0	True				
ANR	2792541	CallExpression	"php_strtolower ( s , s_len )"		2792537	0					
ANR	2792542	Callee	php_strtolower		2792537	0					
ANR	2792543	Identifier	php_strtolower		2792537	0					
ANR	2792544	ArgumentList	s		2792537	1					
ANR	2792545	Argument	s		2792537	0					
ANR	2792546	Identifier	s		2792537	0					
ANR	2792547	Argument	s_len		2792537	1					
ANR	2792548	Identifier	s_len		2792537	0					
ANR	2792549	ExpressionStatement	"php_strtolower ( t , t_len )"	1777:1:43651:43675	2792537	1	True				
ANR	2792550	CallExpression	"php_strtolower ( t , t_len )"		2792537	0					
ANR	2792551	Callee	php_strtolower		2792537	0					
ANR	2792552	Identifier	php_strtolower		2792537	0					
ANR	2792553	ArgumentList	t		2792537	1					
ANR	2792554	Argument	t		2792537	0					
ANR	2792555	Identifier	t		2792537	0					
ANR	2792556	Argument	t_len		2792537	1					
ANR	2792557	Identifier	t_len		2792537	0					
ANR	2792558	ReturnStatement	"return ( char * ) php_memnstr ( s , t , t_len , s + s_len ) ;"	1778:1:43678:43727	2792537	2	True				
ANR	2792559	CastExpression	"( char * ) php_memnstr ( s , t , t_len , s + s_len )"		2792537	0					
ANR	2792560	CastTarget	char *		2792537	0					
ANR	2792561	CallExpression	"php_memnstr ( s , t , t_len , s + s_len )"		2792537	1					
ANR	2792562	Callee	php_memnstr		2792537	0					
ANR	2792563	Identifier	php_memnstr		2792537	0					
ANR	2792564	ArgumentList	s		2792537	1					
ANR	2792565	Argument	s		2792537	0					
ANR	2792566	Identifier	s		2792537	0					
ANR	2792567	Argument	t		2792537	1					
ANR	2792568	Identifier	t		2792537	0					
ANR	2792569	Argument	t_len		2792537	2					
ANR	2792570	Identifier	t_len		2792537	0					
ANR	2792571	Argument	s + s_len		2792537	3					
ANR	2792572	AdditiveExpression	s + s_len		2792537	0		+			
ANR	2792573	Identifier	s		2792537	0					
ANR	2792574	Identifier	s_len		2792537	1					
ANR	2792575	ReturnType	PHPAPI char *		2792537	1					
ANR	2792576	Identifier	php_stristr		2792537	2					
ANR	2792577	ParameterList	"char * s , char * t , size_t s_len , size_t t_len"		2792537	3					
ANR	2792578	Parameter	char * s	1774:25:43575:43581	2792537	0	True				
ANR	2792579	ParameterType	char *		2792537	0					
ANR	2792580	Identifier	s		2792537	1					
ANR	2792581	Parameter	char * t	1774:34:43584:43590	2792537	1	True				
ANR	2792582	ParameterType	char *		2792537	0					
ANR	2792583	Identifier	t		2792537	1					
ANR	2792584	Parameter	size_t s_len	1774:43:43593:43604	2792537	2	True				
ANR	2792585	ParameterType	size_t		2792537	0					
ANR	2792586	Identifier	s_len		2792537	1					
ANR	2792587	Parameter	size_t t_len	1774:57:43607:43618	2792537	3	True				
ANR	2792588	ParameterType	size_t		2792537	0					
ANR	2792589	Identifier	t_len		2792537	1					
ANR	2792590	CFGEntryNode	ENTRY		2792537		True				
ANR	2792591	CFGExitNode	EXIT		2792537		True				
ANR	2792592	Symbol	s		2792537						
ANR	2792593	Symbol	t		2792537						
ANR	2792594	Symbol	t_len		2792537						
ANR	2792595	Symbol	s_len		2792537						
ANR	2792596	Symbol	php_memnstr		2792537						
ANR	2792597	Function	php_strspn	1784:0:43764:44037							
ANR	2792598	FunctionDef	"php_strspn (char * s1 , char * s2 , char * s1_end , char * s2_end)"		2792597	0					
ANR	2792599	CompoundStatement		1785:0:43837:44037	2792597	0					
ANR	2792600	Statement	register	1786:1:43840:43847	2792597	0	True				
ANR	2792601	IdentifierDeclStatement	"const char * p = s1 , * spanp ;"	1786:10:43849:43875	2792597	1	True				
ANR	2792602	IdentifierDecl	* p = s1		2792597	0					
ANR	2792603	IdentifierDeclType	const char *		2792597	0					
ANR	2792604	Identifier	p		2792597	1					
ANR	2792605	AssignmentExpression	* p = s1		2792597	2		=			
ANR	2792606	Identifier	s1		2792597	0					
ANR	2792607	Identifier	s1		2792597	1					
ANR	2792608	IdentifierDecl	* spanp		2792597	1					
ANR	2792609	IdentifierDeclType	const char *		2792597	0					
ANR	2792610	Identifier	spanp		2792597	1					
ANR	2792611	Statement	register	1787:1:43878:43885	2792597	2	True				
ANR	2792612	IdentifierDeclStatement	char c = * p ;	1787:10:43887:43898	2792597	3	True				
ANR	2792613	IdentifierDecl	c = * p		2792597	0					
ANR	2792614	IdentifierDeclType	char		2792597	0					
ANR	2792615	Identifier	c		2792597	1					
ANR	2792616	AssignmentExpression	c = * p		2792597	2		=			
ANR	2792617	Identifier	c		2792597	0					
ANR	2792618	UnaryOperationExpression	* p		2792597	1					
ANR	2792619	UnaryOperator	*		2792597	0					
ANR	2792620	Identifier	p		2792597	1					
ANR	2792621	Label	cont :	1789:0:43901:43905	2792597	4	True				
ANR	2792622	Identifier	cont		2792597	0					
ANR	2792623	ForStatement	for ( spanp = s2 ; p != s1_end && spanp != s2_end ; )		2792597	5					
ANR	2792624	ForInit	spanp = s2 ;	1790:6:43913:43923	2792597	0	True				
ANR	2792625	AssignmentExpression	spanp = s2		2792597	0		=			
ANR	2792626	Identifier	spanp		2792597	0					
ANR	2792627	Identifier	s2		2792597	1					
ANR	2792628	Condition	p != s1_end && spanp != s2_end	1790:18:43925:43954	2792597	1	True				
ANR	2792629	AndExpression	p != s1_end && spanp != s2_end		2792597	0		&&			
ANR	2792630	EqualityExpression	p != s1_end		2792597	0		!=			
ANR	2792631	Identifier	p		2792597	0					
ANR	2792632	Identifier	s1_end		2792597	1					
ANR	2792633	EqualityExpression	spanp != s2_end		2792597	1		!=			
ANR	2792634	Identifier	spanp		2792597	0					
ANR	2792635	Identifier	s2_end		2792597	1					
ANR	2792636	CompoundStatement		6:51:120:120	2792597	2					
ANR	2792637	IfStatement	if ( * spanp ++ == c )		2792597	0					
ANR	2792638	Condition	* spanp ++ == c	1791:6:43966:43978	2792597	0	True				
ANR	2792639	EqualityExpression	* spanp ++ == c		2792597	0		==			
ANR	2792640	UnaryOperationExpression	* spanp ++		2792597	0					
ANR	2792641	UnaryOperator	*		2792597	0					
ANR	2792642	PostIncDecOperationExpression	spanp ++		2792597	1					
ANR	2792643	Identifier	spanp		2792597	0					
ANR	2792644	IncDec	++		2792597	1					
ANR	2792645	Identifier	c		2792597	1					
ANR	2792646	CompoundStatement		7:21:143:143	2792597	1					
ANR	2792647	ExpressionStatement	c = * ( ++ p )	1792:3:43986:43996	2792597	0	True				
ANR	2792648	AssignmentExpression	c = * ( ++ p )		2792597	0		=			
ANR	2792649	Identifier	c		2792597	0					
ANR	2792650	UnaryOperationExpression	* ( ++ p )		2792597	1					
ANR	2792651	UnaryOperator	*		2792597	0					
ANR	2792652	UnaryExpression	++ p		2792597	1					
ANR	2792653	IncDec	++		2792597	0					
ANR	2792654	Identifier	p		2792597	1					
ANR	2792655	GotoStatement	goto cont ;	1793:3:44001:44010	2792597	1	True				
ANR	2792656	Identifier	cont		2792597	0					
ANR	2792657	ReturnStatement	return ( p - s1 ) ;	1796:1:44020:44035	2792597	6	True				
ANR	2792658	AdditiveExpression	p - s1		2792597	0		-			
ANR	2792659	Identifier	p		2792597	0					
ANR	2792660	Identifier	s1		2792597	1					
ANR	2792661	ReturnType	PHPAPI size_t		2792597	1					
ANR	2792662	Identifier	php_strspn		2792597	2					
ANR	2792663	ParameterList	"char * s1 , char * s2 , char * s1_end , char * s2_end"		2792597	3					
ANR	2792664	Parameter	char * s1	1784:25:43789:43796	2792597	0	True				
ANR	2792665	ParameterType	char *		2792597	0					
ANR	2792666	Identifier	s1		2792597	1					
ANR	2792667	Parameter	char * s2	1784:35:43799:43806	2792597	1	True				
ANR	2792668	ParameterType	char *		2792597	0					
ANR	2792669	Identifier	s2		2792597	1					
ANR	2792670	Parameter	char * s1_end	1784:45:43809:43820	2792597	2	True				
ANR	2792671	ParameterType	char *		2792597	0					
ANR	2792672	Identifier	s1_end		2792597	1					
ANR	2792673	Parameter	char * s2_end	1784:59:43823:43834	2792597	3	True				
ANR	2792674	ParameterType	char *		2792597	0					
ANR	2792675	Identifier	s2_end		2792597	1					
ANR	2792676	CFGEntryNode	ENTRY		2792597		True				
ANR	2792677	CFGExitNode	EXIT		2792597		True				
ANR	2792678	Symbol	p		2792597						
ANR	2792679	Symbol	s2_end		2792597						
ANR	2792680	Symbol	c		2792597						
ANR	2792681	Symbol	* spanp ++		2792597						
ANR	2792682	Symbol	s1_end		2792597						
ANR	2792683	Symbol	* ( ++ p )		2792597						
ANR	2792684	Symbol	* p		2792597						
ANR	2792685	Symbol	s1		2792597						
ANR	2792686	Symbol	spanp		2792597						
ANR	2792687	Symbol	s2		2792597						
ANR	2792688	Function	php_strcspn	1802:0:44073:44376							
ANR	2792689	FunctionDef	"php_strcspn (char * s1 , char * s2 , char * s1_end , char * s2_end)"		2792688	0					
ANR	2792690	CompoundStatement		1803:0:44147:44376	2792688	0					
ANR	2792691	Statement	register	1804:1:44150:44157	2792688	0	True				
ANR	2792692	IdentifierDeclStatement	"const char * p , * spanp ;"	1804:10:44159:44180	2792688	1	True				
ANR	2792693	IdentifierDecl	* p		2792688	0					
ANR	2792694	IdentifierDeclType	const char *		2792688	0					
ANR	2792695	Identifier	p		2792688	1					
ANR	2792696	IdentifierDecl	* spanp		2792688	1					
ANR	2792697	IdentifierDeclType	const char *		2792688	0					
ANR	2792698	Identifier	spanp		2792688	1					
ANR	2792699	Statement	register	1805:1:44183:44190	2792688	2	True				
ANR	2792700	IdentifierDeclStatement	char c = * s1 ;	1805:10:44192:44204	2792688	3	True				
ANR	2792701	IdentifierDecl	c = * s1		2792688	0					
ANR	2792702	IdentifierDeclType	char		2792688	0					
ANR	2792703	Identifier	c		2792688	1					
ANR	2792704	AssignmentExpression	c = * s1		2792688	2		=			
ANR	2792705	Identifier	c		2792688	0					
ANR	2792706	UnaryOperationExpression	* s1		2792688	1					
ANR	2792707	UnaryOperator	*		2792688	0					
ANR	2792708	Identifier	s1		2792688	1					
ANR	2792709	ForStatement	for ( p = s1 ; ; )		2792688	4					
ANR	2792710	ForInit	p = s1 ;	1807:6:44213:44219	2792688	0	True				
ANR	2792711	AssignmentExpression	p = s1		2792688	0		=			
ANR	2792712	Identifier	p		2792688	0					
ANR	2792713	Identifier	s1		2792688	1					
ANR	2792714	CompoundStatement		5:16:75:75	2792688	1					
ANR	2792715	ExpressionStatement	spanp = s2	1808:2:44227:44237	2792688	0	True				
ANR	2792716	AssignmentExpression	spanp = s2		2792688	0		=			
ANR	2792717	Identifier	spanp		2792688	0					
ANR	2792718	Identifier	s2		2792688	1					
ANR	2792719	DoStatement	do		2792688	1					
ANR	2792720	CompoundStatement		7:5:96:96	2792688	0					
ANR	2792721	IfStatement	if ( * spanp == c || p == s1_end )		2792688	0					
ANR	2792722	Condition	* spanp == c || p == s1_end	1810:7:44253:44278	2792688	0	True				
ANR	2792723	OrExpression	* spanp == c || p == s1_end		2792688	0		||			
ANR	2792724	EqualityExpression	* spanp == c		2792688	0		==			
ANR	2792725	UnaryOperationExpression	* spanp		2792688	0					
ANR	2792726	UnaryOperator	*		2792688	0					
ANR	2792727	Identifier	spanp		2792688	1					
ANR	2792728	Identifier	c		2792688	1					
ANR	2792729	EqualityExpression	p == s1_end		2792688	1		==			
ANR	2792730	Identifier	p		2792688	0					
ANR	2792731	Identifier	s1_end		2792688	1					
ANR	2792732	CompoundStatement		8:35:133:133	2792688	1					
ANR	2792733	ReturnStatement	return p - s1 ;	1811:4:44287:44300	2792688	0	True				
ANR	2792734	AdditiveExpression	p - s1		2792688	0		-			
ANR	2792735	Identifier	p		2792688	0					
ANR	2792736	Identifier	s1		2792688	1					
ANR	2792737	Condition	spanp ++ < ( s2_end - 1 )	1813:11:44318:44339	2792688	1	True				
ANR	2792738	RelationalExpression	spanp ++ < ( s2_end - 1 )		2792688	0		<			
ANR	2792739	PostIncDecOperationExpression	spanp ++		2792688	0					
ANR	2792740	Identifier	spanp		2792688	0					
ANR	2792741	IncDec	++		2792688	1					
ANR	2792742	AdditiveExpression	s2_end - 1		2792688	1		-			
ANR	2792743	Identifier	s2_end		2792688	0					
ANR	2792744	PrimaryExpression	1		2792688	1					
ANR	2792745	ExpressionStatement	c = * ++ p	1814:2:44345:44353	2792688	2	True				
ANR	2792746	AssignmentExpression	c = * ++ p		2792688	0		=			
ANR	2792747	Identifier	c		2792688	0					
ANR	2792748	UnaryOperationExpression	* ++ p		2792688	1					
ANR	2792749	UnaryOperator	*		2792688	0					
ANR	2792750	UnaryExpression	++ p		2792688	1					
ANR	2792751	IncDec	++		2792688	0					
ANR	2792752	Identifier	p		2792688	1					
ANR	2792753	ReturnType	PHPAPI size_t		2792688	1					
ANR	2792754	Identifier	php_strcspn		2792688	2					
ANR	2792755	ParameterList	"char * s1 , char * s2 , char * s1_end , char * s2_end"		2792688	3					
ANR	2792756	Parameter	char * s1	1802:26:44099:44106	2792688	0	True				
ANR	2792757	ParameterType	char *		2792688	0					
ANR	2792758	Identifier	s1		2792688	1					
ANR	2792759	Parameter	char * s2	1802:36:44109:44116	2792688	1	True				
ANR	2792760	ParameterType	char *		2792688	0					
ANR	2792761	Identifier	s2		2792688	1					
ANR	2792762	Parameter	char * s1_end	1802:46:44119:44130	2792688	2	True				
ANR	2792763	ParameterType	char *		2792688	0					
ANR	2792764	Identifier	s1_end		2792688	1					
ANR	2792765	Parameter	char * s2_end	1802:60:44133:44144	2792688	3	True				
ANR	2792766	ParameterType	char *		2792688	0					
ANR	2792767	Identifier	s2_end		2792688	1					
ANR	2792768	CFGEntryNode	ENTRY		2792688		True				
ANR	2792769	CFGExitNode	EXIT		2792688		True				
ANR	2792770	InfiniteForNode	true		2792688		True				
ANR	2792771	Symbol	p		2792688						
ANR	2792772	Symbol	s2_end		2792688						
ANR	2792773	Symbol	c		2792688						
ANR	2792774	Symbol	* ++ p		2792688						
ANR	2792775	Symbol	s1_end		2792688						
ANR	2792776	Symbol	* s1		2792688						
ANR	2792777	Symbol	* spanp		2792688						
ANR	2792778	Symbol	* p		2792688						
ANR	2792779	Symbol	s1		2792688						
ANR	2792780	Symbol	spanp		2792688						
ANR	2792781	Symbol	s2		2792688						
ANR	2792782	Function	php_needle_char	1822:0:44416:44969							
ANR	2792783	FunctionDef	"php_needle_char (zval * needle , char * target)"		2792782	0					
ANR	2792784	CompoundStatement		1823:0:44471:44969	2792782	0					
ANR	2792785	SwitchStatement	switch ( Z_TYPE_P ( needle ) )		2792782	0					
ANR	2792786	Condition	Z_TYPE_P ( needle )	1824:9:44482:44497	2792782	0	True				
ANR	2792787	CallExpression	Z_TYPE_P ( needle )		2792782	0					
ANR	2792788	Callee	Z_TYPE_P		2792782	0					
ANR	2792789	Identifier	Z_TYPE_P		2792782	0					
ANR	2792790	ArgumentList	needle		2792782	1					
ANR	2792791	Argument	needle		2792782	0					
ANR	2792792	Identifier	needle		2792782	0					
ANR	2792793	CompoundStatement		2:27:28:28	2792782	1					
ANR	2792794	Label	case IS_LONG :	1825:2:44504:44516	2792782	0	True				
ANR	2792795	Identifier	IS_LONG		2792782	0					
ANR	2792796	ExpressionStatement	* target = ( char ) Z_LVAL_P ( needle )	1826:3:44521:44553	2792782	1	True				
ANR	2792797	AssignmentExpression	* target = ( char ) Z_LVAL_P ( needle )		2792782	0		=			
ANR	2792798	UnaryOperationExpression	* target		2792782	0					
ANR	2792799	UnaryOperator	*		2792782	0					
ANR	2792800	Identifier	target		2792782	1					
ANR	2792801	CastExpression	( char ) Z_LVAL_P ( needle )		2792782	1					
ANR	2792802	CastTarget	char		2792782	0					
ANR	2792803	CallExpression	Z_LVAL_P ( needle )		2792782	1					
ANR	2792804	Callee	Z_LVAL_P		2792782	0					
ANR	2792805	Identifier	Z_LVAL_P		2792782	0					
ANR	2792806	ArgumentList	needle		2792782	1					
ANR	2792807	Argument	needle		2792782	0					
ANR	2792808	Identifier	needle		2792782	0					
ANR	2792809	ReturnStatement	return SUCCESS ;	1827:3:44558:44572	2792782	2	True				
ANR	2792810	Identifier	SUCCESS		2792782	0					
ANR	2792811	Label	case IS_NULL :	1828:2:44576:44588	2792782	3	True				
ANR	2792812	Identifier	IS_NULL		2792782	0					
ANR	2792813	Label	case IS_FALSE :	1829:2:44592:44605	2792782	4	True				
ANR	2792814	Identifier	IS_FALSE		2792782	0					
ANR	2792815	ExpressionStatement	* target = '\\0'	1830:3:44610:44624	2792782	5	True				
ANR	2792816	AssignmentExpression	* target = '\\0'		2792782	0		=			
ANR	2792817	UnaryOperationExpression	* target		2792782	0					
ANR	2792818	UnaryOperator	*		2792782	0					
ANR	2792819	Identifier	target		2792782	1					
ANR	2792820	PrimaryExpression	'\\0'		2792782	1					
ANR	2792821	ReturnStatement	return SUCCESS ;	1831:3:44629:44643	2792782	6	True				
ANR	2792822	Identifier	SUCCESS		2792782	0					
ANR	2792823	Label	case IS_TRUE :	1832:2:44647:44659	2792782	7	True				
ANR	2792824	Identifier	IS_TRUE		2792782	0					
ANR	2792825	ExpressionStatement	* target = '\\1'	1833:3:44664:44678	2792782	8	True				
ANR	2792826	AssignmentExpression	* target = '\\1'		2792782	0		=			
ANR	2792827	UnaryOperationExpression	* target		2792782	0					
ANR	2792828	UnaryOperator	*		2792782	0					
ANR	2792829	Identifier	target		2792782	1					
ANR	2792830	PrimaryExpression	'\\1'		2792782	1					
ANR	2792831	ReturnStatement	return SUCCESS ;	1834:3:44683:44697	2792782	9	True				
ANR	2792832	Identifier	SUCCESS		2792782	0					
ANR	2792833	Label	case IS_DOUBLE :	1835:2:44701:44715	2792782	10	True				
ANR	2792834	Identifier	IS_DOUBLE		2792782	0					
ANR	2792835	ExpressionStatement	* target = ( char ) ( int ) Z_DVAL_P ( needle )	1836:3:44720:44757	2792782	11	True				
ANR	2792836	AssignmentExpression	* target = ( char ) ( int ) Z_DVAL_P ( needle )		2792782	0		=			
ANR	2792837	UnaryOperationExpression	* target		2792782	0					
ANR	2792838	UnaryOperator	*		2792782	0					
ANR	2792839	Identifier	target		2792782	1					
ANR	2792840	CastExpression	( char ) ( int ) Z_DVAL_P ( needle )		2792782	1					
ANR	2792841	CastTarget	char		2792782	0					
ANR	2792842	CastExpression	( int ) Z_DVAL_P ( needle )		2792782	1					
ANR	2792843	CastTarget	int		2792782	0					
ANR	2792844	CallExpression	Z_DVAL_P ( needle )		2792782	1					
ANR	2792845	Callee	Z_DVAL_P		2792782	0					
ANR	2792846	Identifier	Z_DVAL_P		2792782	0					
ANR	2792847	ArgumentList	needle		2792782	1					
ANR	2792848	Argument	needle		2792782	0					
ANR	2792849	Identifier	needle		2792782	0					
ANR	2792850	ReturnStatement	return SUCCESS ;	1837:3:44762:44776	2792782	12	True				
ANR	2792851	Identifier	SUCCESS		2792782	0					
ANR	2792852	Label	case IS_OBJECT :	1838:2:44780:44794	2792782	13	True				
ANR	2792853	Identifier	IS_OBJECT		2792782	0					
ANR	2792854	ExpressionStatement	* target = ( char ) zval_get_long ( needle )	1839:3:44799:44837	2792782	14	True				
ANR	2792855	AssignmentExpression	* target = ( char ) zval_get_long ( needle )		2792782	0		=			
ANR	2792856	UnaryOperationExpression	* target		2792782	0					
ANR	2792857	UnaryOperator	*		2792782	0					
ANR	2792858	Identifier	target		2792782	1					
ANR	2792859	CastExpression	( char ) zval_get_long ( needle )		2792782	1					
ANR	2792860	CastTarget	char		2792782	0					
ANR	2792861	CallExpression	zval_get_long ( needle )		2792782	1					
ANR	2792862	Callee	zval_get_long		2792782	0					
ANR	2792863	Identifier	zval_get_long		2792782	0					
ANR	2792864	ArgumentList	needle		2792782	1					
ANR	2792865	Argument	needle		2792782	0					
ANR	2792866	Identifier	needle		2792782	0					
ANR	2792867	ReturnStatement	return SUCCESS ;	1840:3:44842:44856	2792782	15	True				
ANR	2792868	Identifier	SUCCESS		2792782	0					
ANR	2792869	Label	default :	1841:2:44860:44867	2792782	16	True				
ANR	2792870	Identifier	default		2792782	0					
ANR	2792871	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""needle is not a string or an integer"" )"	1842:3:44872:44945	2792782	17	True				
ANR	2792872	CallExpression	"php_error_docref ( NULL , E_WARNING , ""needle is not a string or an integer"" )"		2792782	0					
ANR	2792873	Callee	php_error_docref		2792782	0					
ANR	2792874	Identifier	php_error_docref		2792782	0					
ANR	2792875	ArgumentList	NULL		2792782	1					
ANR	2792876	Argument	NULL		2792782	0					
ANR	2792877	Identifier	NULL		2792782	0					
ANR	2792878	Argument	E_WARNING		2792782	1					
ANR	2792879	Identifier	E_WARNING		2792782	0					
ANR	2792880	Argument	"""needle is not a string or an integer"""		2792782	2					
ANR	2792881	PrimaryExpression	"""needle is not a string or an integer"""		2792782	0					
ANR	2792882	ReturnStatement	return FAILURE ;	1843:3:44950:44964	2792782	18	True				
ANR	2792883	Identifier	FAILURE		2792782	0					
ANR	2792884	ReturnType	static int		2792782	1					
ANR	2792885	Identifier	php_needle_char		2792782	2					
ANR	2792886	ParameterList	"zval * needle , char * target"		2792782	3					
ANR	2792887	Parameter	zval * needle	1822:27:44443:44454	2792782	0	True				
ANR	2792888	ParameterType	zval *		2792782	0					
ANR	2792889	Identifier	needle		2792782	1					
ANR	2792890	Parameter	char * target	1822:41:44457:44468	2792782	1	True				
ANR	2792891	ParameterType	char *		2792782	0					
ANR	2792892	Identifier	target		2792782	1					
ANR	2792893	CFGEntryNode	ENTRY		2792782		True				
ANR	2792894	CFGExitNode	EXIT		2792782		True				
ANR	2792895	Symbol	* target		2792782						
ANR	2792896	Symbol	E_WARNING		2792782						
ANR	2792897	Symbol	SUCCESS		2792782						
ANR	2792898	Symbol	NULL		2792782						
ANR	2792899	Symbol	zval_get_long		2792782						
ANR	2792900	Symbol	needle		2792782						
ANR	2792901	Symbol	Z_TYPE_P		2792782						
ANR	2792902	Symbol	FAILURE		2792782						
ANR	2792903	Symbol	Z_DVAL_P		2792782						
ANR	2792904	Symbol	target		2792782						
ANR	2792905	Symbol	Z_LVAL_P		2792782						
ANR	2792906	DeclStmt									
ANR	2792907	Decl							zval	zval *	needle
ANR	2792908	DeclStmt									
ANR	2792909	Decl							zend_string	zend_string *	haystack
ANR	2792910	DeclStmt									
ANR	2792911	Decl							char	char *	found
ANR	2792912	DeclStmt									
ANR	2792913	Decl							size_t	size_t	found_offset
ANR	2792914	DeclStmt									
ANR	2792915	Decl							char	char *	haystack_dup
ANR	2792916	DeclStmt									
ANR	2792917	Decl							char	char [ 2 ]	needle_char
ANR	2792918	DeclStmt									
ANR	2792919	Decl							zend_bool	zend_bool	part
ANR	2792920	DeclStmt									
ANR	2792921	Decl							char	char *	orig_needle
ANR	2792922	DeclStmt									
ANR	2792923	Decl							zval	zval *	needle
ANR	2792924	DeclStmt									
ANR	2792925	Decl							zend_string	zend_string *	haystack
ANR	2792926	DeclStmt									
ANR	2792927	Decl							char	char *	found
ANR	2792928	DeclStmt									
ANR	2792929	Decl							char	char [ 2 ]	needle_char
ANR	2792930	DeclStmt									
ANR	2792931	Decl							zend_long	zend_long	found_offset
ANR	2792932	DeclStmt									
ANR	2792933	Decl							zend_bool	zend_bool	part
ANR	2792934	DeclStmt									
ANR	2792935	Decl							zval	zval *	needle
ANR	2792936	DeclStmt									
ANR	2792937	Decl							zend_string	zend_string *	haystack
ANR	2792938	DeclStmt									
ANR	2792939	Decl							char	char *	found
ANR	2792940	DeclStmt									
ANR	2792941	Decl							char	char [ 2 ]	needle_char
ANR	2792942	DeclStmt									
ANR	2792943	Decl							zend_long	zend_long	offset
ANR	2792944	DeclStmt									
ANR	2792945	Decl							char	char *	found
ANR	2792946	DeclStmt									
ANR	2792947	Decl							zend_string	zend_string *	haystack
ANR	2792948	DeclStmt									
ANR	2792949	Decl							zend_long	zend_long	offset
ANR	2792950	DeclStmt									
ANR	2792951	Decl							char	char [ 2 ]	needle_char
ANR	2792952	DeclStmt									
ANR	2792953	Decl							zval	zval *	needle
ANR	2792954	DeclStmt									
ANR	2792955	Decl							zend_string	zend_string *	needle_dup
ANR	2792956	Decl							zend_string	zend_string *	haystack_dup
ANR	2792957	DeclStmt									
ANR	2792958	Decl							zval	zval *	zneedle
ANR	2792959	DeclStmt									
ANR	2792960	Decl							char	char *	needle
ANR	2792961	DeclStmt									
ANR	2792962	Decl							zend_string	zend_string *	haystack
ANR	2792963	DeclStmt									
ANR	2792964	Decl							size_t	size_t	needle_len
ANR	2792965	DeclStmt									
ANR	2792966	Decl							zend_long	zend_long	offset
ANR	2792967	DeclStmt									
ANR	2792968	Decl							char	char *	p
ANR	2792969	Decl							char	char *	e
ANR	2792970	Decl							char	char [ 2 ]	ord_needle
ANR	2792971	DeclStmt									
ANR	2792972	Decl							char	char *	found
ANR	2792973	DeclStmt									
ANR	2792974	Decl							zval	zval *	zneedle
ANR	2792975	DeclStmt									
ANR	2792976	Decl							zend_string	zend_string *	needle
ANR	2792977	DeclStmt									
ANR	2792978	Decl							zend_string	zend_string *	haystack
ANR	2792979	DeclStmt									
ANR	2792980	Decl							zend_long	zend_long	offset
ANR	2792981	DeclStmt									
ANR	2792982	Decl							char	char *	p
ANR	2792983	Decl							char	char *	e
ANR	2792984	DeclStmt									
ANR	2792985	Decl							char	char *	found
ANR	2792986	DeclStmt									
ANR	2792987	Decl							zend_string	zend_string *	needle_dup
ANR	2792988	Decl							zend_string	zend_string *	haystack_dup
ANR	2792989	Decl							zend_string	zend_string *	ord_needle
ANR	2792990	DeclStmt									
ANR	2792991	Decl							zval	zval *	needle
ANR	2792992	DeclStmt									
ANR	2792993	Decl							zend_string	zend_string *	haystack
ANR	2792994	DeclStmt									
ANR	2792995	Decl							const char	const char *	found
ANR	2792996	DeclStmt									
ANR	2792997	Decl							zend_long	zend_long	found_offset
ANR	2792998	DeclStmt									
ANR	2792999	Decl							char	char	needle_chr
ANR	2793000	Function	php_chunk_split	2278:0:56615:57561							
ANR	2793001	FunctionDef	"php_chunk_split (char * src , size_t srclen , char * end , size_t endlen , size_t chunklen)"		2793000	0					
ANR	2793002	CompoundStatement		2279:0:56720:57561	2793000	0					
ANR	2793003	IdentifierDeclStatement	"char * p , * q ;"	2280:1:56723:56734	2793000	0	True				
ANR	2793004	IdentifierDecl	* p		2793000	0					
ANR	2793005	IdentifierDeclType	char *		2793000	0					
ANR	2793006	Identifier	p		2793000	1					
ANR	2793007	IdentifierDecl	* q		2793000	1					
ANR	2793008	IdentifierDeclType	char *		2793000	0					
ANR	2793009	Identifier	q		2793000	1					
ANR	2793010	IdentifierDeclStatement	size_t chunks ;	2281:1:56737:56750	2793000	1	True				
ANR	2793011	IdentifierDecl	chunks		2793000	0					
ANR	2793012	IdentifierDeclType	size_t		2793000	0					
ANR	2793013	Identifier	chunks		2793000	1					
ANR	2793014	IdentifierDeclStatement	size_t restlen ;	2282:1:56776:56790	2793000	2	True				
ANR	2793015	IdentifierDecl	restlen		2793000	0					
ANR	2793016	IdentifierDeclType	size_t		2793000	0					
ANR	2793017	Identifier	restlen		2793000	1					
ANR	2793018	IdentifierDeclStatement	size_t out_len ;	2283:1:56793:56807	2793000	3	True				
ANR	2793019	IdentifierDecl	out_len		2793000	0					
ANR	2793020	IdentifierDeclType	size_t		2793000	0					
ANR	2793021	Identifier	out_len		2793000	1					
ANR	2793022	IdentifierDeclStatement	zend_string * dest ;	2284:1:56810:56827	2793000	4	True				
ANR	2793023	IdentifierDecl	* dest		2793000	0					
ANR	2793024	IdentifierDeclType	zend_string *		2793000	0					
ANR	2793025	Identifier	dest		2793000	1					
ANR	2793026	ExpressionStatement	chunks = srclen / chunklen	2286:1:56831:56857	2793000	5	True				
ANR	2793027	AssignmentExpression	chunks = srclen / chunklen		2793000	0		=			
ANR	2793028	Identifier	chunks		2793000	0					
ANR	2793029	MultiplicativeExpression	srclen / chunklen		2793000	1		/			
ANR	2793030	Identifier	srclen		2793000	0					
ANR	2793031	Identifier	chunklen		2793000	1					
ANR	2793032	ExpressionStatement	restlen = srclen - chunks * chunklen	2287:1:56860:56896	2793000	6	True				
ANR	2793033	AssignmentExpression	restlen = srclen - chunks * chunklen		2793000	0		=			
ANR	2793034	Identifier	restlen		2793000	0					
ANR	2793035	AdditiveExpression	srclen - chunks * chunklen		2793000	1		-			
ANR	2793036	Identifier	srclen		2793000	0					
ANR	2793037	MultiplicativeExpression	chunks * chunklen		2793000	1		*			
ANR	2793038	Identifier	chunks		2793000	0					
ANR	2793039	Identifier	chunklen		2793000	1					
ANR	2793040	IfStatement	if ( chunks > INT_MAX - 1 )		2793000	7					
ANR	2793041	Condition	chunks > INT_MAX - 1	2289:5:56928:56947	2793000	0	True				
ANR	2793042	RelationalExpression	chunks > INT_MAX - 1		2793000	0		>			
ANR	2793043	Identifier	chunks		2793000	0					
ANR	2793044	AdditiveExpression	INT_MAX - 1		2793000	1		-			
ANR	2793045	Identifier	INT_MAX		2793000	0					
ANR	2793046	PrimaryExpression	1		2793000	1					
ANR	2793047	CompoundStatement		11:27:229:229	2793000	1					
ANR	2793048	ReturnStatement	return NULL ;	2290:2:56954:56965	2793000	0	True				
ANR	2793049	Identifier	NULL		2793000	0					
ANR	2793050	ExpressionStatement	out_len = chunks + 1	2292:1:56971:56991	2793000	8	True				
ANR	2793051	AssignmentExpression	out_len = chunks + 1		2793000	0		=			
ANR	2793052	Identifier	out_len		2793000	0					
ANR	2793053	AdditiveExpression	chunks + 1		2793000	1		+			
ANR	2793054	Identifier	chunks		2793000	0					
ANR	2793055	PrimaryExpression	1		2793000	1					
ANR	2793056	IfStatement	if ( endlen != 0 && out_len > INT_MAX / endlen )		2793000	9					
ANR	2793057	Condition	endlen != 0 && out_len > INT_MAX / endlen	2293:5:56998:57035	2793000	0	True				
ANR	2793058	AndExpression	endlen != 0 && out_len > INT_MAX / endlen		2793000	0		&&			
ANR	2793059	EqualityExpression	endlen != 0		2793000	0		!=			
ANR	2793060	Identifier	endlen		2793000	0					
ANR	2793061	PrimaryExpression	0		2793000	1					
ANR	2793062	RelationalExpression	out_len > INT_MAX / endlen		2793000	1		>			
ANR	2793063	Identifier	out_len		2793000	0					
ANR	2793064	MultiplicativeExpression	INT_MAX / endlen		2793000	1		/			
ANR	2793065	Identifier	INT_MAX		2793000	0					
ANR	2793066	Identifier	endlen		2793000	1					
ANR	2793067	CompoundStatement		15:45:317:317	2793000	1					
ANR	2793068	ReturnStatement	return NULL ;	2294:2:57042:57053	2793000	0	True				
ANR	2793069	Identifier	NULL		2793000	0					
ANR	2793070	ExpressionStatement	out_len *= endlen	2296:1:57059:57076	2793000	10	True				
ANR	2793071	AssignmentExpression	out_len *= endlen		2793000	0		*=			
ANR	2793072	Identifier	out_len		2793000	0					
ANR	2793073	Identifier	endlen		2793000	1					
ANR	2793074	IfStatement	if ( out_len > INT_MAX - srclen - 1 )		2793000	11					
ANR	2793075	Condition	out_len > INT_MAX - srclen - 1	2297:5:57083:57112	2793000	0	True				
ANR	2793076	RelationalExpression	out_len > INT_MAX - srclen - 1		2793000	0		>			
ANR	2793077	Identifier	out_len		2793000	0					
ANR	2793078	AdditiveExpression	INT_MAX - srclen - 1		2793000	1		-			
ANR	2793079	Identifier	INT_MAX		2793000	0					
ANR	2793080	AdditiveExpression	srclen - 1		2793000	1		-			
ANR	2793081	Identifier	srclen		2793000	0					
ANR	2793082	PrimaryExpression	1		2793000	1					
ANR	2793083	CompoundStatement		19:37:394:394	2793000	1					
ANR	2793084	ReturnStatement	return NULL ;	2298:2:57119:57130	2793000	0	True				
ANR	2793085	Identifier	NULL		2793000	0					
ANR	2793086	ExpressionStatement	out_len += srclen + 1	2300:1:57136:57157	2793000	12	True				
ANR	2793087	AssignmentExpression	out_len += srclen + 1		2793000	0		+=			
ANR	2793088	Identifier	out_len		2793000	0					
ANR	2793089	AdditiveExpression	srclen + 1		2793000	1		+			
ANR	2793090	Identifier	srclen		2793000	0					
ANR	2793091	PrimaryExpression	1		2793000	1					
ANR	2793092	ExpressionStatement	"dest = zend_string_alloc ( out_len * sizeof ( char ) , 0 )"	2302:1:57161:57212	2793000	13	True				
ANR	2793093	AssignmentExpression	"dest = zend_string_alloc ( out_len * sizeof ( char ) , 0 )"		2793000	0		=			
ANR	2793094	Identifier	dest		2793000	0					
ANR	2793095	CallExpression	"zend_string_alloc ( out_len * sizeof ( char ) , 0 )"		2793000	1					
ANR	2793096	Callee	zend_string_alloc		2793000	0					
ANR	2793097	Identifier	zend_string_alloc		2793000	0					
ANR	2793098	ArgumentList	out_len * sizeof ( char )		2793000	1					
ANR	2793099	Argument	out_len * sizeof ( char )		2793000	0					
ANR	2793100	MultiplicativeExpression	out_len * sizeof ( char )		2793000	0		*			
ANR	2793101	Identifier	out_len		2793000	0					
ANR	2793102	SizeofExpression	sizeof ( char )		2793000	1					
ANR	2793103	Sizeof	sizeof		2793000	0					
ANR	2793104	SizeofOperand	char		2793000	1					
ANR	2793105	Argument	0		2793000	1					
ANR	2793106	PrimaryExpression	0		2793000	0					
ANR	2793107	ForStatement	"for ( p = src , q = ZSTR_VAL ( dest ) ; p < ( src + srclen - chunklen + 1 ) ; )"		2793000	14					
ANR	2793108	ForInit	"p = src , q = ZSTR_VAL ( dest ) ;"	2304:6:57221:57248	2793000	0	True				
ANR	2793109	Expression	"p = src , q = ZSTR_VAL ( dest )"		2793000	0					
ANR	2793110	AssignmentExpression	p = src		2793000	0		=			
ANR	2793111	Identifier	p		2793000	0					
ANR	2793112	Identifier	src		2793000	1					
ANR	2793113	AssignmentExpression	q = ZSTR_VAL ( dest )		2793000	1		=			
ANR	2793114	Identifier	q		2793000	0					
ANR	2793115	CallExpression	ZSTR_VAL ( dest )		2793000	1					
ANR	2793116	Callee	ZSTR_VAL		2793000	0					
ANR	2793117	Identifier	ZSTR_VAL		2793000	0					
ANR	2793118	ArgumentList	dest		2793000	1					
ANR	2793119	Argument	dest		2793000	0					
ANR	2793120	Identifier	dest		2793000	0					
ANR	2793121	Condition	p < ( src + srclen - chunklen + 1 )	2304:35:57250:57282	2793000	1	True				
ANR	2793122	RelationalExpression	p < ( src + srclen - chunklen + 1 )		2793000	0		<			
ANR	2793123	Identifier	p		2793000	0					
ANR	2793124	AdditiveExpression	src + srclen - chunklen + 1		2793000	1		+			
ANR	2793125	Identifier	src		2793000	0					
ANR	2793126	AdditiveExpression	srclen - chunklen + 1		2793000	1		-			
ANR	2793127	Identifier	srclen		2793000	0					
ANR	2793128	AdditiveExpression	chunklen + 1		2793000	1		+			
ANR	2793129	Identifier	chunklen		2793000	0					
ANR	2793130	PrimaryExpression	1		2793000	1					
ANR	2793131	CompoundStatement		26:72:566:566	2793000	2					
ANR	2793132	ExpressionStatement	"memcpy ( q , p , chunklen )"	2305:2:57291:57313	2793000	0	True				
ANR	2793133	CallExpression	"memcpy ( q , p , chunklen )"		2793000	0					
ANR	2793134	Callee	memcpy		2793000	0					
ANR	2793135	Identifier	memcpy		2793000	0					
ANR	2793136	ArgumentList	q		2793000	1					
ANR	2793137	Argument	q		2793000	0					
ANR	2793138	Identifier	q		2793000	0					
ANR	2793139	Argument	p		2793000	1					
ANR	2793140	Identifier	p		2793000	0					
ANR	2793141	Argument	chunklen		2793000	2					
ANR	2793142	Identifier	chunklen		2793000	0					
ANR	2793143	ExpressionStatement	q += chunklen	2306:2:57317:57330	2793000	1	True				
ANR	2793144	AssignmentExpression	q += chunklen		2793000	0		+=			
ANR	2793145	Identifier	q		2793000	0					
ANR	2793146	Identifier	chunklen		2793000	1					
ANR	2793147	ExpressionStatement	"memcpy ( q , end , endlen )"	2307:2:57334:57356	2793000	2	True				
ANR	2793148	CallExpression	"memcpy ( q , end , endlen )"		2793000	0					
ANR	2793149	Callee	memcpy		2793000	0					
ANR	2793150	Identifier	memcpy		2793000	0					
ANR	2793151	ArgumentList	q		2793000	1					
ANR	2793152	Argument	q		2793000	0					
ANR	2793153	Identifier	q		2793000	0					
ANR	2793154	Argument	end		2793000	1					
ANR	2793155	Identifier	end		2793000	0					
ANR	2793156	Argument	endlen		2793000	2					
ANR	2793157	Identifier	endlen		2793000	0					
ANR	2793158	ExpressionStatement	q += endlen	2308:2:57360:57371	2793000	3	True				
ANR	2793159	AssignmentExpression	q += endlen		2793000	0		+=			
ANR	2793160	Identifier	q		2793000	0					
ANR	2793161	Identifier	endlen		2793000	1					
ANR	2793162	ExpressionStatement	p += chunklen	2309:2:57375:57388	2793000	4	True				
ANR	2793163	AssignmentExpression	p += chunklen		2793000	0		+=			
ANR	2793164	Identifier	p		2793000	0					
ANR	2793165	Identifier	chunklen		2793000	1					
ANR	2793166	IfStatement	if ( restlen )		2793000	15					
ANR	2793167	Condition	restlen	2312:5:57399:57405	2793000	0	True				
ANR	2793168	Identifier	restlen		2793000	0					
ANR	2793169	CompoundStatement		34:14:687:687	2793000	1					
ANR	2793170	ExpressionStatement	"memcpy ( q , p , restlen )"	2313:2:57412:57433	2793000	0	True				
ANR	2793171	CallExpression	"memcpy ( q , p , restlen )"		2793000	0					
ANR	2793172	Callee	memcpy		2793000	0					
ANR	2793173	Identifier	memcpy		2793000	0					
ANR	2793174	ArgumentList	q		2793000	1					
ANR	2793175	Argument	q		2793000	0					
ANR	2793176	Identifier	q		2793000	0					
ANR	2793177	Argument	p		2793000	1					
ANR	2793178	Identifier	p		2793000	0					
ANR	2793179	Argument	restlen		2793000	2					
ANR	2793180	Identifier	restlen		2793000	0					
ANR	2793181	ExpressionStatement	q += restlen	2314:2:57437:57449	2793000	1	True				
ANR	2793182	AssignmentExpression	q += restlen		2793000	0		+=			
ANR	2793183	Identifier	q		2793000	0					
ANR	2793184	Identifier	restlen		2793000	1					
ANR	2793185	ExpressionStatement	"memcpy ( q , end , endlen )"	2315:2:57453:57475	2793000	2	True				
ANR	2793186	CallExpression	"memcpy ( q , end , endlen )"		2793000	0					
ANR	2793187	Callee	memcpy		2793000	0					
ANR	2793188	Identifier	memcpy		2793000	0					
ANR	2793189	ArgumentList	q		2793000	1					
ANR	2793190	Argument	q		2793000	0					
ANR	2793191	Identifier	q		2793000	0					
ANR	2793192	Argument	end		2793000	1					
ANR	2793193	Identifier	end		2793000	0					
ANR	2793194	Argument	endlen		2793000	2					
ANR	2793195	Identifier	endlen		2793000	0					
ANR	2793196	ExpressionStatement	q += endlen	2316:2:57479:57490	2793000	3	True				
ANR	2793197	AssignmentExpression	q += endlen		2793000	0		+=			
ANR	2793198	Identifier	q		2793000	0					
ANR	2793199	Identifier	endlen		2793000	1					
ANR	2793200	ExpressionStatement	* q = '\\0'	2319:1:57497:57506	2793000	16	True				
ANR	2793201	AssignmentExpression	* q = '\\0'		2793000	0		=			
ANR	2793202	UnaryOperationExpression	* q		2793000	0					
ANR	2793203	UnaryOperator	*		2793000	0					
ANR	2793204	Identifier	q		2793000	1					
ANR	2793205	PrimaryExpression	'\\0'		2793000	1					
ANR	2793206	ExpressionStatement	ZSTR_LEN ( dest ) = q - ZSTR_VAL ( dest )	2320:1:57509:57544	2793000	17	True				
ANR	2793207	AssignmentExpression	ZSTR_LEN ( dest ) = q - ZSTR_VAL ( dest )		2793000	0		=			
ANR	2793208	CallExpression	ZSTR_LEN ( dest )		2793000	0					
ANR	2793209	Callee	ZSTR_LEN		2793000	0					
ANR	2793210	Identifier	ZSTR_LEN		2793000	0					
ANR	2793211	ArgumentList	dest		2793000	1					
ANR	2793212	Argument	dest		2793000	0					
ANR	2793213	Identifier	dest		2793000	0					
ANR	2793214	AdditiveExpression	q - ZSTR_VAL ( dest )		2793000	1		-			
ANR	2793215	Identifier	q		2793000	0					
ANR	2793216	CallExpression	ZSTR_VAL ( dest )		2793000	1					
ANR	2793217	Callee	ZSTR_VAL		2793000	0					
ANR	2793218	Identifier	ZSTR_VAL		2793000	0					
ANR	2793219	ArgumentList	dest		2793000	1					
ANR	2793220	Argument	dest		2793000	0					
ANR	2793221	Identifier	dest		2793000	0					
ANR	2793222	ReturnStatement	return dest ;	2322:1:57548:57559	2793000	18	True				
ANR	2793223	Identifier	dest		2793000	0					
ANR	2793224	ReturnType	static zend_string *		2793000	1					
ANR	2793225	Identifier	php_chunk_split		2793000	2					
ANR	2793226	ParameterList	"char * src , size_t srclen , char * end , size_t endlen , size_t chunklen"		2793000	3					
ANR	2793227	Parameter	char * src	2278:36:56651:56659	2793000	0	True				
ANR	2793228	ParameterType	char *		2793000	0					
ANR	2793229	Identifier	src		2793000	1					
ANR	2793230	Parameter	size_t srclen	2278:47:56662:56674	2793000	1	True				
ANR	2793231	ParameterType	size_t		2793000	0					
ANR	2793232	Identifier	srclen		2793000	1					
ANR	2793233	Parameter	char * end	2278:62:56677:56685	2793000	2	True				
ANR	2793234	ParameterType	char *		2793000	0					
ANR	2793235	Identifier	end		2793000	1					
ANR	2793236	Parameter	size_t endlen	2278:73:56688:56700	2793000	3	True				
ANR	2793237	ParameterType	size_t		2793000	0					
ANR	2793238	Identifier	endlen		2793000	1					
ANR	2793239	Parameter	size_t chunklen	2278:88:56703:56717	2793000	4	True				
ANR	2793240	ParameterType	size_t		2793000	0					
ANR	2793241	Identifier	chunklen		2793000	1					
ANR	2793242	CFGEntryNode	ENTRY		2793000		True				
ANR	2793243	CFGExitNode	EXIT		2793000		True				
ANR	2793244	Symbol	zend_string_alloc		2793000						
ANR	2793245	Symbol	srclen		2793000						
ANR	2793246	Symbol	NULL		2793000						
ANR	2793247	Symbol	src		2793000						
ANR	2793248	Symbol	chunks		2793000						
ANR	2793249	Symbol	chunklen		2793000						
ANR	2793250	Symbol	restlen		2793000						
ANR	2793251	Symbol	endlen		2793000						
ANR	2793252	Symbol	dest		2793000						
ANR	2793253	Symbol	out_len		2793000						
ANR	2793254	Symbol	ZSTR_VAL		2793000						
ANR	2793255	Symbol	p		2793000						
ANR	2793256	Symbol	q		2793000						
ANR	2793257	Symbol	INT_MAX		2793000						
ANR	2793258	Symbol	ZSTR_LEN		2793000						
ANR	2793259	Symbol	end		2793000						
ANR	2793260	Symbol	* q		2793000						
ANR	2793261	DeclStmt									
ANR	2793262	Decl							zend_string	zend_string *	str
ANR	2793263	DeclStmt									
ANR	2793264	Decl							char	char *	end
ANR	2793265	DeclStmt									
ANR	2793266	Decl							size_t	size_t	endlen
ANR	2793267	DeclStmt									
ANR	2793268	Decl							zend_long	zend_long	chunklen
ANR	2793269	DeclStmt									
ANR	2793270	Decl							zend_string	zend_string *	result
ANR	2793271	DeclStmt									
ANR	2793272	Decl							zend_string	zend_string *	str
ANR	2793273	DeclStmt									
ANR	2793274	Decl							zend_long	zend_long	l
ANR	2793275	Decl							zend_long	zend_long	f
ANR	2793276	DeclStmt									
ANR	2793277	Decl							int	int	argc
ANR	2793278	DeclStmt									
ANR	2793279	Decl							zval	zval *	str
ANR	2793280	DeclStmt									
ANR	2793281	Decl							zval	zval *	from
ANR	2793282	DeclStmt									
ANR	2793283	Decl							zval	zval *	len
ANR	2793284	DeclStmt									
ANR	2793285	Decl							zval	zval *	repl
ANR	2793286	DeclStmt									
ANR	2793287	Decl							zend_long	zend_long	l
ANR	2793288	DeclStmt									
ANR	2793289	Decl							zend_long	zend_long	f
ANR	2793290	DeclStmt									
ANR	2793291	Decl							int	int	argc
ANR	2793292	DeclStmt									
ANR	2793293	Decl							zend_string	zend_string *	result
ANR	2793294	DeclStmt									
ANR	2793295	Decl							HashPosition	HashPosition	from_idx
ANR	2793296	Decl							HashPosition	HashPosition	repl_idx
ANR	2793297	Decl							HashPosition	HashPosition	len_idx
ANR	2793298	DeclStmt									
ANR	2793299	Decl							zval	zval *	tmp_str
ANR	2793300	Decl							zval	zval *	tmp_from
ANR	2793301	Decl							zval	zval *	tmp_repl
ANR	2793302	Decl							zval	zval *	tmp_len
ANR	2793303	DeclStmt									
ANR	2793304	Decl							size_t	size_t	repl_len
ANR	2793305	DeclStmt									
ANR	2793306	Decl							zend_string	zend_string *	str_index
ANR	2793307	DeclStmt									
ANR	2793308	Decl							size_t	size_t	result_len
ANR	2793309	DeclStmt									
ANR	2793310	Decl							zend_ulong	zend_ulong	num_index
ANR	2793311	DeclStmt									
ANR	2793312	Decl							zend_string	zend_string *	orig_str
ANR	2793313	DeclStmt									
ANR	2793314	Decl							zend_string	zend_string *	repl_str
ANR	2793315	DeclStmt									
ANR	2793316	Decl							zval	zval	tmp
ANR	2793317	DeclStmt									
ANR	2793318	Decl							zend_string	zend_string *	old
ANR	2793319	DeclStmt									
ANR	2793320	Decl							char	char *	old_end
ANR	2793321	DeclStmt									
ANR	2793322	Decl							char	char *	p
ANR	2793323	Decl							char	char *	q
ANR	2793324	DeclStmt									
ANR	2793325	Decl							char	char	c
ANR	2793326	DeclStmt									
ANR	2793327	Decl							zend_string	zend_string *	str
ANR	2793328	DeclStmt									
ANR	2793329	Decl							char	char *	str
ANR	2793330	DeclStmt									
ANR	2793331	Decl							size_t	size_t	str_len
ANR	2793332	DeclStmt									
ANR	2793333	Decl							zend_long	zend_long	c
ANR	2793334	Function	php_ucfirst	2795:0:68724:68825							
ANR	2793335	FunctionDef	php_ucfirst (char * str)		2793334	0					
ANR	2793336	CompoundStatement		2796:0:68759:68825	2793334	0					
ANR	2793337	Statement	register	2797:1:68762:68769	2793334	0	True				
ANR	2793338	IdentifierDeclStatement	char * r ;	2797:10:68771:68778	2793334	1	True				
ANR	2793339	IdentifierDecl	* r		2793334	0					
ANR	2793340	IdentifierDeclType	char *		2793334	0					
ANR	2793341	Identifier	r		2793334	1					
ANR	2793342	ExpressionStatement	r = str	2798:1:68781:68788	2793334	2	True				
ANR	2793343	AssignmentExpression	r = str		2793334	0		=			
ANR	2793344	Identifier	r		2793334	0					
ANR	2793345	Identifier	str		2793334	1					
ANR	2793346	ExpressionStatement	* r = toupper ( ( unsigned char ) * r )	2799:1:68791:68823	2793334	3	True				
ANR	2793347	AssignmentExpression	* r = toupper ( ( unsigned char ) * r )		2793334	0		=			
ANR	2793348	UnaryOperationExpression	* r		2793334	0					
ANR	2793349	UnaryOperator	*		2793334	0					
ANR	2793350	Identifier	r		2793334	1					
ANR	2793351	CallExpression	toupper ( ( unsigned char ) * r )		2793334	1					
ANR	2793352	Callee	toupper		2793334	0					
ANR	2793353	Identifier	toupper		2793334	0					
ANR	2793354	ArgumentList	( unsigned char ) * r		2793334	1					
ANR	2793355	Argument	( unsigned char ) * r		2793334	0					
ANR	2793356	CastExpression	( unsigned char ) * r		2793334	0					
ANR	2793357	CastTarget	unsigned char		2793334	0					
ANR	2793358	UnaryOperationExpression	* r		2793334	1					
ANR	2793359	UnaryOperator	*		2793334	0					
ANR	2793360	Identifier	r		2793334	1					
ANR	2793361	ReturnType	static void		2793334	1					
ANR	2793362	Identifier	php_ucfirst		2793334	2					
ANR	2793363	ParameterList	char * str		2793334	3					
ANR	2793364	Parameter	char * str	2795:24:68748:68756	2793334	0	True				
ANR	2793365	ParameterType	char *		2793334	0					
ANR	2793366	Identifier	str		2793334	1					
ANR	2793367	CFGEntryNode	ENTRY		2793334		True				
ANR	2793368	CFGExitNode	EXIT		2793334		True				
ANR	2793369	Symbol	str		2793334						
ANR	2793370	Symbol	r		2793334						
ANR	2793371	Symbol	toupper		2793334						
ANR	2793372	Symbol	* r		2793334						
ANR	2793373	DeclStmt									
ANR	2793374	Decl							zend_string	zend_string *	str
ANR	2793375	Function	php_lcfirst	2830:0:69406:69507							
ANR	2793376	FunctionDef	php_lcfirst (char * str)		2793375	0					
ANR	2793377	CompoundStatement		2831:0:69441:69507	2793375	0					
ANR	2793378	Statement	register	2832:1:69444:69451	2793375	0	True				
ANR	2793379	IdentifierDeclStatement	char * r ;	2832:10:69453:69460	2793375	1	True				
ANR	2793380	IdentifierDecl	* r		2793375	0					
ANR	2793381	IdentifierDeclType	char *		2793375	0					
ANR	2793382	Identifier	r		2793375	1					
ANR	2793383	ExpressionStatement	r = str	2833:1:69463:69470	2793375	2	True				
ANR	2793384	AssignmentExpression	r = str		2793375	0		=			
ANR	2793385	Identifier	r		2793375	0					
ANR	2793386	Identifier	str		2793375	1					
ANR	2793387	ExpressionStatement	* r = tolower ( ( unsigned char ) * r )	2834:1:69473:69505	2793375	3	True				
ANR	2793388	AssignmentExpression	* r = tolower ( ( unsigned char ) * r )		2793375	0		=			
ANR	2793389	UnaryOperationExpression	* r		2793375	0					
ANR	2793390	UnaryOperator	*		2793375	0					
ANR	2793391	Identifier	r		2793375	1					
ANR	2793392	CallExpression	tolower ( ( unsigned char ) * r )		2793375	1					
ANR	2793393	Callee	tolower		2793375	0					
ANR	2793394	Identifier	tolower		2793375	0					
ANR	2793395	ArgumentList	( unsigned char ) * r		2793375	1					
ANR	2793396	Argument	( unsigned char ) * r		2793375	0					
ANR	2793397	CastExpression	( unsigned char ) * r		2793375	0					
ANR	2793398	CastTarget	unsigned char		2793375	0					
ANR	2793399	UnaryOperationExpression	* r		2793375	1					
ANR	2793400	UnaryOperator	*		2793375	0					
ANR	2793401	Identifier	r		2793375	1					
ANR	2793402	ReturnType	static void		2793375	1					
ANR	2793403	Identifier	php_lcfirst		2793375	2					
ANR	2793404	ParameterList	char * str		2793375	3					
ANR	2793405	Parameter	char * str	2830:24:69430:69438	2793375	0	True				
ANR	2793406	ParameterType	char *		2793375	0					
ANR	2793407	Identifier	str		2793375	1					
ANR	2793408	CFGEntryNode	ENTRY		2793375		True				
ANR	2793409	CFGExitNode	EXIT		2793375		True				
ANR	2793410	Symbol	str		2793375						
ANR	2793411	Symbol	r		2793375						
ANR	2793412	Symbol	tolower		2793375						
ANR	2793413	Symbol	* r		2793375						
ANR	2793414	DeclStmt									
ANR	2793415	Decl							zend_string	zend_string *	str
ANR	2793416	DeclStmt									
ANR	2793417	Decl							zend_string	zend_string *	str
ANR	2793418	DeclStmt									
ANR	2793419	Decl							char	char *	delims
ANR	2793420	DeclStmt									
ANR	2793421	Decl							char	char *	r
ANR	2793422	Decl							char	char *	r_end
ANR	2793423	DeclStmt									
ANR	2793424	Decl							size_t	size_t	delims_len
ANR	2793425	DeclStmt									
ANR	2793426	Decl							char	char [ 256 ]	mask
ANR	2793427	Function	php_strtr	2899:0:70853:71451							
ANR	2793428	FunctionDef	"php_strtr (char * str , size_t len , char * str_from , char * str_to , size_t trlen)"		2793427	0					
ANR	2793429	CompoundStatement		2900:0:70943:71451	2793427	0					
ANR	2793430	IdentifierDeclStatement	size_t i ;	2901:1:70946:70954	2793427	0	True				
ANR	2793431	IdentifierDecl	i		2793427	0					
ANR	2793432	IdentifierDeclType	size_t		2793427	0					
ANR	2793433	Identifier	i		2793427	1					
ANR	2793434	IfStatement	if ( UNEXPECTED ( trlen < 1 ) )		2793427	1					
ANR	2793435	Condition	UNEXPECTED ( trlen < 1 )	2903:5:70962:70982	2793427	0	True				
ANR	2793436	CallExpression	UNEXPECTED ( trlen < 1 )		2793427	0					
ANR	2793437	Callee	UNEXPECTED		2793427	0					
ANR	2793438	Identifier	UNEXPECTED		2793427	0					
ANR	2793439	ArgumentList	trlen < 1		2793427	1					
ANR	2793440	Argument	trlen < 1		2793427	0					
ANR	2793441	RelationalExpression	trlen < 1		2793427	0		<			
ANR	2793442	Identifier	trlen		2793427	0					
ANR	2793443	PrimaryExpression	1		2793427	1					
ANR	2793444	CompoundStatement		4:28:41:41	2793427	1					
ANR	2793445	ReturnStatement	return str ;	2904:2:70989:70999	2793427	0	True				
ANR	2793446	Identifier	str		2793427	0					
ANR	2793447	ElseStatement	else		2793427	0					
ANR	2793448	IfStatement	if ( trlen == 1 )		2793427	0					
ANR	2793449	Condition	trlen == 1	2905:12:71013:71022	2793427	0	True				
ANR	2793450	EqualityExpression	trlen == 1		2793427	0		==			
ANR	2793451	Identifier	trlen		2793427	0					
ANR	2793452	PrimaryExpression	1		2793427	1					
ANR	2793453	CompoundStatement		8:2:113:133	2793427	1					
ANR	2793454	IdentifierDeclStatement	char ch_from = * str_from ;	2906:2:71029:71053	2793427	0	True				
ANR	2793455	IdentifierDecl	ch_from = * str_from		2793427	0					
ANR	2793456	IdentifierDeclType	char		2793427	0					
ANR	2793457	Identifier	ch_from		2793427	1					
ANR	2793458	AssignmentExpression	ch_from = * str_from		2793427	2		=			
ANR	2793459	Identifier	ch_from		2793427	0					
ANR	2793460	UnaryOperationExpression	* str_from		2793427	1					
ANR	2793461	UnaryOperator	*		2793427	0					
ANR	2793462	Identifier	str_from		2793427	1					
ANR	2793463	IdentifierDeclStatement	char ch_to = * str_to ;	2907:2:71057:71077	2793427	1	True				
ANR	2793464	IdentifierDecl	ch_to = * str_to		2793427	0					
ANR	2793465	IdentifierDeclType	char		2793427	0					
ANR	2793466	Identifier	ch_to		2793427	1					
ANR	2793467	AssignmentExpression	ch_to = * str_to		2793427	2		=			
ANR	2793468	Identifier	ch_to		2793427	0					
ANR	2793469	UnaryOperationExpression	* str_to		2793427	1					
ANR	2793470	UnaryOperator	*		2793427	0					
ANR	2793471	Identifier	str_to		2793427	1					
ANR	2793472	ForStatement	for ( i = 0 ; i < len ; i ++ )		2793427	2					
ANR	2793473	ForInit	i = 0 ;	2909:7:71087:71092	2793427	0	True				
ANR	2793474	AssignmentExpression	i = 0		2793427	0		=			
ANR	2793475	Identifier	i		2793427	0					
ANR	2793476	PrimaryExpression	0		2793427	1					
ANR	2793477	Condition	i < len	2909:14:71094:71100	2793427	1	True				
ANR	2793478	RelationalExpression	i < len		2793427	0		<			
ANR	2793479	Identifier	i		2793427	0					
ANR	2793480	Identifier	len		2793427	1					
ANR	2793481	PostIncDecOperationExpression	i ++	2909:23:71103:71105	2793427	2	True				
ANR	2793482	Identifier	i		2793427	0					
ANR	2793483	IncDec	++		2793427	1					
ANR	2793484	CompoundStatement		10:28:164:164	2793427	3					
ANR	2793485	IfStatement	if ( str [ i ] == ch_from )		2793427	0					
ANR	2793486	Condition	str [ i ] == ch_from	2910:7:71117:71133	2793427	0	True				
ANR	2793487	EqualityExpression	str [ i ] == ch_from		2793427	0		==			
ANR	2793488	ArrayIndexing	str [ i ]		2793427	0					
ANR	2793489	Identifier	str		2793427	0					
ANR	2793490	Identifier	i		2793427	1					
ANR	2793491	Identifier	ch_from		2793427	1					
ANR	2793492	CompoundStatement		11:26:192:192	2793427	1					
ANR	2793493	ExpressionStatement	str [ i ] = ch_to	2911:4:71142:71156	2793427	0	True				
ANR	2793494	AssignmentExpression	str [ i ] = ch_to		2793427	0		=			
ANR	2793495	ArrayIndexing	str [ i ]		2793427	0					
ANR	2793496	Identifier	str		2793427	0					
ANR	2793497	Identifier	i		2793427	1					
ANR	2793498	Identifier	ch_to		2793427	1					
ANR	2793499	ElseStatement	else		2793427	0					
ANR	2793500	CompoundStatement		16:2:235:265	2793427	0					
ANR	2793501	IdentifierDeclStatement	"unsigned char xlat [ 256 ] , j = 0 ;"	2915:2:71179:71209	2793427	0	True				
ANR	2793502	IdentifierDecl	xlat [ 256 ]		2793427	0					
ANR	2793503	IdentifierDeclType	unsigned char [ 256 ]		2793427	0					
ANR	2793504	Identifier	xlat		2793427	1					
ANR	2793505	PrimaryExpression	256		2793427	2					
ANR	2793506	IdentifierDecl	j = 0		2793427	1					
ANR	2793507	IdentifierDeclType	unsigned char		2793427	0					
ANR	2793508	Identifier	j		2793427	1					
ANR	2793509	AssignmentExpression	j = 0		2793427	2		=			
ANR	2793510	Identifier	j		2793427	0					
ANR	2793511	PrimaryExpression	0		2793427	1					
ANR	2793512	DoStatement	do		2793427	1					
ANR	2793513	CompoundStatement		18:5:273:273	2793427	0					
ANR	2793514	ExpressionStatement	xlat [ j ] = j	2917:7:71219:71230	2793427	0	True				
ANR	2793515	AssignmentExpression	xlat [ j ] = j		2793427	0		=			
ANR	2793516	ArrayIndexing	xlat [ j ]		2793427	0					
ANR	2793517	Identifier	xlat		2793427	0					
ANR	2793518	Identifier	j		2793427	1					
ANR	2793519	Identifier	j		2793427	1					
ANR	2793520	Condition	++ j != 0	2917:29:71241:71248	2793427	1	True				
ANR	2793521	EqualityExpression	++ j != 0		2793427	0		!=			
ANR	2793522	UnaryExpression	++ j		2793427	0					
ANR	2793523	IncDec	++		2793427	0					
ANR	2793524	Identifier	j		2793427	1					
ANR	2793525	PrimaryExpression	0		2793427	1					
ANR	2793526	ForStatement	for ( i = 0 ; i < trlen ; i ++ )		2793427	2					
ANR	2793527	ForInit	i = 0 ;	2919:7:71260:71265	2793427	0	True				
ANR	2793528	AssignmentExpression	i = 0		2793427	0		=			
ANR	2793529	Identifier	i		2793427	0					
ANR	2793530	PrimaryExpression	0		2793427	1					
ANR	2793531	Condition	i < trlen	2919:14:71267:71275	2793427	1	True				
ANR	2793532	RelationalExpression	i < trlen		2793427	0		<			
ANR	2793533	Identifier	i		2793427	0					
ANR	2793534	Identifier	trlen		2793427	1					
ANR	2793535	PostIncDecOperationExpression	i ++	2919:25:71278:71280	2793427	2	True				
ANR	2793536	Identifier	i		2793427	0					
ANR	2793537	IncDec	++		2793427	1					
ANR	2793538	CompoundStatement		20:30:339:339	2793427	3					
ANR	2793539	ExpressionStatement	xlat [ ( size_t ) ( unsigned char ) str_from [ i ] ] = str_to [ i ]	2920:3:71288:71341	2793427	0	True				
ANR	2793540	AssignmentExpression	xlat [ ( size_t ) ( unsigned char ) str_from [ i ] ] = str_to [ i ]		2793427	0		=			
ANR	2793541	ArrayIndexing	xlat [ ( size_t ) ( unsigned char ) str_from [ i ] ]		2793427	0					
ANR	2793542	Identifier	xlat		2793427	0					
ANR	2793543	CastExpression	( size_t ) ( unsigned char ) str_from [ i ]		2793427	1					
ANR	2793544	CastTarget	size_t		2793427	0					
ANR	2793545	CastExpression	( unsigned char ) str_from [ i ]		2793427	1					
ANR	2793546	CastTarget	unsigned char		2793427	0					
ANR	2793547	ArrayIndexing	str_from [ i ]		2793427	1					
ANR	2793548	Identifier	str_from		2793427	0					
ANR	2793549	Identifier	i		2793427	1					
ANR	2793550	ArrayIndexing	str_to [ i ]		2793427	1					
ANR	2793551	Identifier	str_to		2793427	0					
ANR	2793552	Identifier	i		2793427	1					
ANR	2793553	ForStatement	for ( i = 0 ; i < len ; i ++ )		2793427	3					
ANR	2793554	ForInit	i = 0 ;	2923:7:71357:71362	2793427	0	True				
ANR	2793555	AssignmentExpression	i = 0		2793427	0		=			
ANR	2793556	Identifier	i		2793427	0					
ANR	2793557	PrimaryExpression	0		2793427	1					
ANR	2793558	Condition	i < len	2923:14:71364:71370	2793427	1	True				
ANR	2793559	RelationalExpression	i < len		2793427	0		<			
ANR	2793560	Identifier	i		2793427	0					
ANR	2793561	Identifier	len		2793427	1					
ANR	2793562	PostIncDecOperationExpression	i ++	2923:23:71373:71375	2793427	2	True				
ANR	2793563	Identifier	i		2793427	0					
ANR	2793564	IncDec	++		2793427	1					
ANR	2793565	CompoundStatement		24:28:434:434	2793427	3					
ANR	2793566	ExpressionStatement	str [ i ] = xlat [ ( size_t ) ( unsigned char ) str [ i ] ]	2924:3:71383:71428	2793427	0	True				
ANR	2793567	AssignmentExpression	str [ i ] = xlat [ ( size_t ) ( unsigned char ) str [ i ] ]		2793427	0		=			
ANR	2793568	ArrayIndexing	str [ i ]		2793427	0					
ANR	2793569	Identifier	str		2793427	0					
ANR	2793570	Identifier	i		2793427	1					
ANR	2793571	ArrayIndexing	xlat [ ( size_t ) ( unsigned char ) str [ i ] ]		2793427	1					
ANR	2793572	Identifier	xlat		2793427	0					
ANR	2793573	CastExpression	( size_t ) ( unsigned char ) str [ i ]		2793427	1					
ANR	2793574	CastTarget	size_t		2793427	0					
ANR	2793575	CastExpression	( unsigned char ) str [ i ]		2793427	1					
ANR	2793576	CastTarget	unsigned char		2793427	0					
ANR	2793577	ArrayIndexing	str [ i ]		2793427	1					
ANR	2793578	Identifier	str		2793427	0					
ANR	2793579	Identifier	i		2793427	1					
ANR	2793580	ReturnStatement	return str ;	2928:1:71439:71449	2793427	2	True				
ANR	2793581	Identifier	str		2793427	0					
ANR	2793582	ReturnType	PHPAPI char *		2793427	1					
ANR	2793583	Identifier	php_strtr		2793427	2					
ANR	2793584	ParameterList	"char * str , size_t len , char * str_from , char * str_to , size_t trlen"		2793427	3					
ANR	2793585	Parameter	char * str	2899:23:70876:70884	2793427	0	True				
ANR	2793586	ParameterType	char *		2793427	0					
ANR	2793587	Identifier	str		2793427	1					
ANR	2793588	Parameter	size_t len	2899:34:70887:70896	2793427	1	True				
ANR	2793589	ParameterType	size_t		2793427	0					
ANR	2793590	Identifier	len		2793427	1					
ANR	2793591	Parameter	char * str_from	2899:46:70899:70912	2793427	2	True				
ANR	2793592	ParameterType	char *		2793427	0					
ANR	2793593	Identifier	str_from		2793427	1					
ANR	2793594	Parameter	char * str_to	2899:62:70915:70926	2793427	3	True				
ANR	2793595	ParameterType	char *		2793427	0					
ANR	2793596	Identifier	str_to		2793427	1					
ANR	2793597	Parameter	size_t trlen	2899:76:70929:70940	2793427	4	True				
ANR	2793598	ParameterType	size_t		2793427	0					
ANR	2793599	Identifier	trlen		2793427	1					
ANR	2793600	CFGEntryNode	ENTRY		2793427		True				
ANR	2793601	CFGExitNode	EXIT		2793427		True				
ANR	2793602	Symbol	* * i		2793427						
ANR	2793603	Symbol	* * str		2793427						
ANR	2793604	Symbol	* * str_from		2793427						
ANR	2793605	Symbol	i		2793427						
ANR	2793606	Symbol	* str_from		2793427						
ANR	2793607	Symbol	j		2793427						
ANR	2793608	Symbol	trlen		2793427						
ANR	2793609	Symbol	ch_from		2793427						
ANR	2793610	Symbol	str		2793427						
ANR	2793611	Symbol	UNEXPECTED		2793427						
ANR	2793612	Symbol	* str_to		2793427						
ANR	2793613	Symbol	* i		2793427						
ANR	2793614	Symbol	len		2793427						
ANR	2793615	Symbol	* j		2793427						
ANR	2793616	Symbol	str_from		2793427						
ANR	2793617	Symbol	ch_to		2793427						
ANR	2793618	Symbol	* str		2793427						
ANR	2793619	Symbol	* xlat		2793427						
ANR	2793620	Symbol	str_to		2793427						
ANR	2793621	Symbol	xlat		2793427						
ANR	2793622	Function	php_strtr_ex	2934:0:71488:72846							
ANR	2793623	FunctionDef	"php_strtr_ex (zend_string * str , char * str_from , char * str_to , size_t trlen)"		2793622	0					
ANR	2793624	CompoundStatement		2935:0:71583:72846	2793622	0					
ANR	2793625	IdentifierDeclStatement	zend_string * new_str = NULL ;	2936:1:71586:71613	2793622	0	True				
ANR	2793626	IdentifierDecl	* new_str = NULL		2793622	0					
ANR	2793627	IdentifierDeclType	zend_string *		2793622	0					
ANR	2793628	Identifier	new_str		2793622	1					
ANR	2793629	AssignmentExpression	* new_str = NULL		2793622	2		=			
ANR	2793630	Identifier	NULL		2793622	0					
ANR	2793631	Identifier	NULL		2793622	1					
ANR	2793632	IdentifierDeclStatement	size_t i ;	2937:1:71616:71624	2793622	1	True				
ANR	2793633	IdentifierDecl	i		2793622	0					
ANR	2793634	IdentifierDeclType	size_t		2793622	0					
ANR	2793635	Identifier	i		2793622	1					
ANR	2793636	IfStatement	if ( UNEXPECTED ( trlen < 1 ) )		2793622	2					
ANR	2793637	Condition	UNEXPECTED ( trlen < 1 )	2939:5:71632:71652	2793622	0	True				
ANR	2793638	CallExpression	UNEXPECTED ( trlen < 1 )		2793622	0					
ANR	2793639	Callee	UNEXPECTED		2793622	0					
ANR	2793640	Identifier	UNEXPECTED		2793622	0					
ANR	2793641	ArgumentList	trlen < 1		2793622	1					
ANR	2793642	Argument	trlen < 1		2793622	0					
ANR	2793643	RelationalExpression	trlen < 1		2793622	0		<			
ANR	2793644	Identifier	trlen		2793622	0					
ANR	2793645	PrimaryExpression	1		2793622	1					
ANR	2793646	CompoundStatement		5:28:71:71	2793622	1					
ANR	2793647	ReturnStatement	return zend_string_copy ( str ) ;	2940:2:71659:71687	2793622	0	True				
ANR	2793648	CallExpression	zend_string_copy ( str )		2793622	0					
ANR	2793649	Callee	zend_string_copy		2793622	0					
ANR	2793650	Identifier	zend_string_copy		2793622	0					
ANR	2793651	ArgumentList	str		2793622	1					
ANR	2793652	Argument	str		2793622	0					
ANR	2793653	Identifier	str		2793622	0					
ANR	2793654	ElseStatement	else		2793622	0					
ANR	2793655	IfStatement	if ( trlen == 1 )		2793622	0					
ANR	2793656	Condition	trlen == 1	2941:12:71701:71710	2793622	0	True				
ANR	2793657	EqualityExpression	trlen == 1		2793622	0		==			
ANR	2793658	Identifier	trlen		2793622	0					
ANR	2793659	PrimaryExpression	1		2793622	1					
ANR	2793660	CompoundStatement		9:2:161:181	2793622	1					
ANR	2793661	IdentifierDeclStatement	char ch_from = * str_from ;	2942:2:71717:71741	2793622	0	True				
ANR	2793662	IdentifierDecl	ch_from = * str_from		2793622	0					
ANR	2793663	IdentifierDeclType	char		2793622	0					
ANR	2793664	Identifier	ch_from		2793622	1					
ANR	2793665	AssignmentExpression	ch_from = * str_from		2793622	2		=			
ANR	2793666	Identifier	ch_from		2793622	0					
ANR	2793667	UnaryOperationExpression	* str_from		2793622	1					
ANR	2793668	UnaryOperator	*		2793622	0					
ANR	2793669	Identifier	str_from		2793622	1					
ANR	2793670	IdentifierDeclStatement	char ch_to = * str_to ;	2943:2:71745:71765	2793622	1	True				
ANR	2793671	IdentifierDecl	ch_to = * str_to		2793622	0					
ANR	2793672	IdentifierDeclType	char		2793622	0					
ANR	2793673	Identifier	ch_to		2793622	1					
ANR	2793674	AssignmentExpression	ch_to = * str_to		2793622	2		=			
ANR	2793675	Identifier	ch_to		2793622	0					
ANR	2793676	UnaryOperationExpression	* str_to		2793622	1					
ANR	2793677	UnaryOperator	*		2793622	0					
ANR	2793678	Identifier	str_to		2793622	1					
ANR	2793679	ForStatement	for ( i = 0 ; i < ZSTR_LEN ( str ) ; i ++ )		2793622	2					
ANR	2793680	ForInit	i = 0 ;	2945:7:71775:71780	2793622	0	True				
ANR	2793681	AssignmentExpression	i = 0		2793622	0		=			
ANR	2793682	Identifier	i		2793622	0					
ANR	2793683	PrimaryExpression	0		2793622	1					
ANR	2793684	Condition	i < ZSTR_LEN ( str )	2945:14:71782:71798	2793622	1	True				
ANR	2793685	RelationalExpression	i < ZSTR_LEN ( str )		2793622	0		<			
ANR	2793686	Identifier	i		2793622	0					
ANR	2793687	CallExpression	ZSTR_LEN ( str )		2793622	1					
ANR	2793688	Callee	ZSTR_LEN		2793622	0					
ANR	2793689	Identifier	ZSTR_LEN		2793622	0					
ANR	2793690	ArgumentList	str		2793622	1					
ANR	2793691	Argument	str		2793622	0					
ANR	2793692	Identifier	str		2793622	0					
ANR	2793693	PostIncDecOperationExpression	i ++	2945:33:71801:71803	2793622	2	True				
ANR	2793694	Identifier	i		2793622	0					
ANR	2793695	IncDec	++		2793622	1					
ANR	2793696	CompoundStatement		11:38:222:222	2793622	3					
ANR	2793697	IfStatement	if ( ZSTR_VAL ( str ) [ i ] == ch_from )		2793622	0					
ANR	2793698	Condition	ZSTR_VAL ( str ) [ i ] == ch_from	2946:7:71815:71841	2793622	0	True				
ANR	2793699	EqualityExpression	ZSTR_VAL ( str ) [ i ] == ch_from		2793622	0		==			
ANR	2793700	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2793622	0					
ANR	2793701	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793702	Callee	ZSTR_VAL		2793622	0					
ANR	2793703	Identifier	ZSTR_VAL		2793622	0					
ANR	2793704	ArgumentList	str		2793622	1					
ANR	2793705	Argument	str		2793622	0					
ANR	2793706	Identifier	str		2793622	0					
ANR	2793707	Identifier	i		2793622	1					
ANR	2793708	Identifier	ch_from		2793622	1					
ANR	2793709	CompoundStatement		12:36:260:260	2793622	1					
ANR	2793710	ExpressionStatement	"new_str = zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"	2947:4:71850:71895	2793622	0	True				
ANR	2793711	AssignmentExpression	"new_str = zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"		2793622	0		=			
ANR	2793712	Identifier	new_str		2793622	0					
ANR	2793713	CallExpression	"zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"		2793622	1					
ANR	2793714	Callee	zend_string_alloc		2793622	0					
ANR	2793715	Identifier	zend_string_alloc		2793622	0					
ANR	2793716	ArgumentList	ZSTR_LEN ( str )		2793622	1					
ANR	2793717	Argument	ZSTR_LEN ( str )		2793622	0					
ANR	2793718	CallExpression	ZSTR_LEN ( str )		2793622	0					
ANR	2793719	Callee	ZSTR_LEN		2793622	0					
ANR	2793720	Identifier	ZSTR_LEN		2793622	0					
ANR	2793721	ArgumentList	str		2793622	1					
ANR	2793722	Argument	str		2793622	0					
ANR	2793723	Identifier	str		2793622	0					
ANR	2793724	Argument	0		2793622	1					
ANR	2793725	PrimaryExpression	0		2793622	0					
ANR	2793726	ExpressionStatement	"memcpy ( ZSTR_VAL ( new_str ) , ZSTR_VAL ( str ) , i )"	2948:4:71901:71944	2793622	1	True				
ANR	2793727	CallExpression	"memcpy ( ZSTR_VAL ( new_str ) , ZSTR_VAL ( str ) , i )"		2793622	0					
ANR	2793728	Callee	memcpy		2793622	0					
ANR	2793729	Identifier	memcpy		2793622	0					
ANR	2793730	ArgumentList	ZSTR_VAL ( new_str )		2793622	1					
ANR	2793731	Argument	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793732	CallExpression	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793733	Callee	ZSTR_VAL		2793622	0					
ANR	2793734	Identifier	ZSTR_VAL		2793622	0					
ANR	2793735	ArgumentList	new_str		2793622	1					
ANR	2793736	Argument	new_str		2793622	0					
ANR	2793737	Identifier	new_str		2793622	0					
ANR	2793738	Argument	ZSTR_VAL ( str )		2793622	1					
ANR	2793739	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793740	Callee	ZSTR_VAL		2793622	0					
ANR	2793741	Identifier	ZSTR_VAL		2793622	0					
ANR	2793742	ArgumentList	str		2793622	1					
ANR	2793743	Argument	str		2793622	0					
ANR	2793744	Identifier	str		2793622	0					
ANR	2793745	Argument	i		2793622	2					
ANR	2793746	Identifier	i		2793622	0					
ANR	2793747	ExpressionStatement	ZSTR_VAL ( new_str ) [ i ] = ch_to	2949:4:71950:71978	2793622	2	True				
ANR	2793748	AssignmentExpression	ZSTR_VAL ( new_str ) [ i ] = ch_to		2793622	0		=			
ANR	2793749	ArrayIndexing	ZSTR_VAL ( new_str ) [ i ]		2793622	0					
ANR	2793750	CallExpression	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793751	Callee	ZSTR_VAL		2793622	0					
ANR	2793752	Identifier	ZSTR_VAL		2793622	0					
ANR	2793753	ArgumentList	new_str		2793622	1					
ANR	2793754	Argument	new_str		2793622	0					
ANR	2793755	Identifier	new_str		2793622	0					
ANR	2793756	Identifier	i		2793622	1					
ANR	2793757	Identifier	ch_to		2793622	1					
ANR	2793758	BreakStatement	break ;	2950:4:71984:71989	2793622	3	True				
ANR	2793759	ForStatement	for ( ; i < ZSTR_LEN ( str ) ; i ++ )		2793622	3					
ANR	2793760	Condition	i < ZSTR_LEN ( str )	2953:9:72009:72025	2793622	0	True				
ANR	2793761	RelationalExpression	i < ZSTR_LEN ( str )		2793622	0		<			
ANR	2793762	Identifier	i		2793622	0					
ANR	2793763	CallExpression	ZSTR_LEN ( str )		2793622	1					
ANR	2793764	Callee	ZSTR_LEN		2793622	0					
ANR	2793765	Identifier	ZSTR_LEN		2793622	0					
ANR	2793766	ArgumentList	str		2793622	1					
ANR	2793767	Argument	str		2793622	0					
ANR	2793768	Identifier	str		2793622	0					
ANR	2793769	PostIncDecOperationExpression	i ++	2953:28:72028:72030	2793622	1	True				
ANR	2793770	Identifier	i		2793622	0					
ANR	2793771	IncDec	++		2793622	1					
ANR	2793772	CompoundStatement		19:33:449:449	2793622	2					
ANR	2793773	ExpressionStatement	ZSTR_VAL ( new_str ) [ i ] = ( ZSTR_VAL ( str ) [ i ] != ch_from ) ? ZSTR_VAL ( str ) [ i ] : ch_to	2954:3:72038:72117	2793622	0	True				
ANR	2793774	AssignmentExpression	ZSTR_VAL ( new_str ) [ i ] = ( ZSTR_VAL ( str ) [ i ] != ch_from ) ? ZSTR_VAL ( str ) [ i ] : ch_to		2793622	0		=			
ANR	2793775	ArrayIndexing	ZSTR_VAL ( new_str ) [ i ]		2793622	0					
ANR	2793776	CallExpression	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793777	Callee	ZSTR_VAL		2793622	0					
ANR	2793778	Identifier	ZSTR_VAL		2793622	0					
ANR	2793779	ArgumentList	new_str		2793622	1					
ANR	2793780	Argument	new_str		2793622	0					
ANR	2793781	Identifier	new_str		2793622	0					
ANR	2793782	Identifier	i		2793622	1					
ANR	2793783	ConditionalExpression	( ZSTR_VAL ( str ) [ i ] != ch_from ) ? ZSTR_VAL ( str ) [ i ] : ch_to		2793622	1					
ANR	2793784	Condition	ZSTR_VAL ( str ) [ i ] != ch_from		2793622	0					
ANR	2793785	EqualityExpression	ZSTR_VAL ( str ) [ i ] != ch_from		2793622	0		!=			
ANR	2793786	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2793622	0					
ANR	2793787	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793788	Callee	ZSTR_VAL		2793622	0					
ANR	2793789	Identifier	ZSTR_VAL		2793622	0					
ANR	2793790	ArgumentList	str		2793622	1					
ANR	2793791	Argument	str		2793622	0					
ANR	2793792	Identifier	str		2793622	0					
ANR	2793793	Identifier	i		2793622	1					
ANR	2793794	Identifier	ch_from		2793622	1					
ANR	2793795	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793796	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793797	Callee	ZSTR_VAL		2793622	0					
ANR	2793798	Identifier	ZSTR_VAL		2793622	0					
ANR	2793799	ArgumentList	str		2793622	1					
ANR	2793800	Argument	str		2793622	0					
ANR	2793801	Identifier	str		2793622	0					
ANR	2793802	Identifier	i		2793622	1					
ANR	2793803	Identifier	ch_to		2793622	2					
ANR	2793804	ElseStatement	else		2793622	0					
ANR	2793805	CompoundStatement		23:2:551:581	2793622	0					
ANR	2793806	IdentifierDeclStatement	"unsigned char xlat [ 256 ] , j = 0 ;"	2957:2:72135:72165	2793622	0	True				
ANR	2793807	IdentifierDecl	xlat [ 256 ]		2793622	0					
ANR	2793808	IdentifierDeclType	unsigned char [ 256 ]		2793622	0					
ANR	2793809	Identifier	xlat		2793622	1					
ANR	2793810	PrimaryExpression	256		2793622	2					
ANR	2793811	IdentifierDecl	j = 0		2793622	1					
ANR	2793812	IdentifierDeclType	unsigned char		2793622	0					
ANR	2793813	Identifier	j		2793622	1					
ANR	2793814	AssignmentExpression	j = 0		2793622	2		=			
ANR	2793815	Identifier	j		2793622	0					
ANR	2793816	PrimaryExpression	0		2793622	1					
ANR	2793817	DoStatement	do		2793622	1					
ANR	2793818	CompoundStatement		25:5:589:589	2793622	0					
ANR	2793819	ExpressionStatement	xlat [ j ] = j	2959:7:72175:72186	2793622	0	True				
ANR	2793820	AssignmentExpression	xlat [ j ] = j		2793622	0		=			
ANR	2793821	ArrayIndexing	xlat [ j ]		2793622	0					
ANR	2793822	Identifier	xlat		2793622	0					
ANR	2793823	Identifier	j		2793622	1					
ANR	2793824	Identifier	j		2793622	1					
ANR	2793825	Condition	++ j != 0	2959:29:72197:72204	2793622	1	True				
ANR	2793826	EqualityExpression	++ j != 0		2793622	0		!=			
ANR	2793827	UnaryExpression	++ j		2793622	0					
ANR	2793828	IncDec	++		2793622	0					
ANR	2793829	Identifier	j		2793622	1					
ANR	2793830	PrimaryExpression	0		2793622	1					
ANR	2793831	ForStatement	for ( i = 0 ; i < trlen ; i ++ )		2793622	2					
ANR	2793832	ForInit	i = 0 ;	2961:7:72216:72221	2793622	0	True				
ANR	2793833	AssignmentExpression	i = 0		2793622	0		=			
ANR	2793834	Identifier	i		2793622	0					
ANR	2793835	PrimaryExpression	0		2793622	1					
ANR	2793836	Condition	i < trlen	2961:14:72223:72231	2793622	1	True				
ANR	2793837	RelationalExpression	i < trlen		2793622	0		<			
ANR	2793838	Identifier	i		2793622	0					
ANR	2793839	Identifier	trlen		2793622	1					
ANR	2793840	PostIncDecOperationExpression	i ++	2961:25:72234:72236	2793622	2	True				
ANR	2793841	Identifier	i		2793622	0					
ANR	2793842	IncDec	++		2793622	1					
ANR	2793843	CompoundStatement		27:30:655:655	2793622	3					
ANR	2793844	ExpressionStatement	xlat [ ( size_t ) ( unsigned char ) str_from [ i ] ] = str_to [ i ]	2962:3:72244:72297	2793622	0	True				
ANR	2793845	AssignmentExpression	xlat [ ( size_t ) ( unsigned char ) str_from [ i ] ] = str_to [ i ]		2793622	0		=			
ANR	2793846	ArrayIndexing	xlat [ ( size_t ) ( unsigned char ) str_from [ i ] ]		2793622	0					
ANR	2793847	Identifier	xlat		2793622	0					
ANR	2793848	CastExpression	( size_t ) ( unsigned char ) str_from [ i ]		2793622	1					
ANR	2793849	CastTarget	size_t		2793622	0					
ANR	2793850	CastExpression	( unsigned char ) str_from [ i ]		2793622	1					
ANR	2793851	CastTarget	unsigned char		2793622	0					
ANR	2793852	ArrayIndexing	str_from [ i ]		2793622	1					
ANR	2793853	Identifier	str_from		2793622	0					
ANR	2793854	Identifier	i		2793622	1					
ANR	2793855	ArrayIndexing	str_to [ i ]		2793622	1					
ANR	2793856	Identifier	str_to		2793622	0					
ANR	2793857	Identifier	i		2793622	1					
ANR	2793858	ForStatement	for ( i = 0 ; i < ZSTR_LEN ( str ) ; i ++ )		2793622	3					
ANR	2793859	ForInit	i = 0 ;	2965:7:72311:72316	2793622	0	True				
ANR	2793860	AssignmentExpression	i = 0		2793622	0		=			
ANR	2793861	Identifier	i		2793622	0					
ANR	2793862	PrimaryExpression	0		2793622	1					
ANR	2793863	Condition	i < ZSTR_LEN ( str )	2965:14:72318:72334	2793622	1	True				
ANR	2793864	RelationalExpression	i < ZSTR_LEN ( str )		2793622	0		<			
ANR	2793865	Identifier	i		2793622	0					
ANR	2793866	CallExpression	ZSTR_LEN ( str )		2793622	1					
ANR	2793867	Callee	ZSTR_LEN		2793622	0					
ANR	2793868	Identifier	ZSTR_LEN		2793622	0					
ANR	2793869	ArgumentList	str		2793622	1					
ANR	2793870	Argument	str		2793622	0					
ANR	2793871	Identifier	str		2793622	0					
ANR	2793872	PostIncDecOperationExpression	i ++	2965:33:72337:72339	2793622	2	True				
ANR	2793873	Identifier	i		2793622	0					
ANR	2793874	IncDec	++		2793622	1					
ANR	2793875	CompoundStatement		31:38:758:758	2793622	3					
ANR	2793876	IfStatement	if ( ZSTR_VAL ( str ) [ i ] != xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ] )		2793622	0					
ANR	2793877	Condition	ZSTR_VAL ( str ) [ i ] != xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]	2966:7:72351:72416	2793622	0	True				
ANR	2793878	EqualityExpression	ZSTR_VAL ( str ) [ i ] != xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]		2793622	0		!=			
ANR	2793879	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2793622	0					
ANR	2793880	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793881	Callee	ZSTR_VAL		2793622	0					
ANR	2793882	Identifier	ZSTR_VAL		2793622	0					
ANR	2793883	ArgumentList	str		2793622	1					
ANR	2793884	Argument	str		2793622	0					
ANR	2793885	Identifier	str		2793622	0					
ANR	2793886	Identifier	i		2793622	1					
ANR	2793887	ArrayIndexing	xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]		2793622	1					
ANR	2793888	Identifier	xlat		2793622	0					
ANR	2793889	CastExpression	( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793890	CastTarget	size_t		2793622	0					
ANR	2793891	CastExpression	( unsigned char ) ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793892	CastTarget	unsigned char		2793622	0					
ANR	2793893	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793894	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793895	Callee	ZSTR_VAL		2793622	0					
ANR	2793896	Identifier	ZSTR_VAL		2793622	0					
ANR	2793897	ArgumentList	str		2793622	1					
ANR	2793898	Argument	str		2793622	0					
ANR	2793899	Identifier	str		2793622	0					
ANR	2793900	Identifier	i		2793622	1					
ANR	2793901	CompoundStatement		32:75:835:835	2793622	1					
ANR	2793902	ExpressionStatement	"new_str = zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"	2967:4:72425:72470	2793622	0	True				
ANR	2793903	AssignmentExpression	"new_str = zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"		2793622	0		=			
ANR	2793904	Identifier	new_str		2793622	0					
ANR	2793905	CallExpression	"zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"		2793622	1					
ANR	2793906	Callee	zend_string_alloc		2793622	0					
ANR	2793907	Identifier	zend_string_alloc		2793622	0					
ANR	2793908	ArgumentList	ZSTR_LEN ( str )		2793622	1					
ANR	2793909	Argument	ZSTR_LEN ( str )		2793622	0					
ANR	2793910	CallExpression	ZSTR_LEN ( str )		2793622	0					
ANR	2793911	Callee	ZSTR_LEN		2793622	0					
ANR	2793912	Identifier	ZSTR_LEN		2793622	0					
ANR	2793913	ArgumentList	str		2793622	1					
ANR	2793914	Argument	str		2793622	0					
ANR	2793915	Identifier	str		2793622	0					
ANR	2793916	Argument	0		2793622	1					
ANR	2793917	PrimaryExpression	0		2793622	0					
ANR	2793918	ExpressionStatement	"memcpy ( ZSTR_VAL ( new_str ) , ZSTR_VAL ( str ) , i )"	2968:4:72476:72519	2793622	1	True				
ANR	2793919	CallExpression	"memcpy ( ZSTR_VAL ( new_str ) , ZSTR_VAL ( str ) , i )"		2793622	0					
ANR	2793920	Callee	memcpy		2793622	0					
ANR	2793921	Identifier	memcpy		2793622	0					
ANR	2793922	ArgumentList	ZSTR_VAL ( new_str )		2793622	1					
ANR	2793923	Argument	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793924	CallExpression	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793925	Callee	ZSTR_VAL		2793622	0					
ANR	2793926	Identifier	ZSTR_VAL		2793622	0					
ANR	2793927	ArgumentList	new_str		2793622	1					
ANR	2793928	Argument	new_str		2793622	0					
ANR	2793929	Identifier	new_str		2793622	0					
ANR	2793930	Argument	ZSTR_VAL ( str )		2793622	1					
ANR	2793931	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793932	Callee	ZSTR_VAL		2793622	0					
ANR	2793933	Identifier	ZSTR_VAL		2793622	0					
ANR	2793934	ArgumentList	str		2793622	1					
ANR	2793935	Argument	str		2793622	0					
ANR	2793936	Identifier	str		2793622	0					
ANR	2793937	Argument	i		2793622	2					
ANR	2793938	Identifier	i		2793622	0					
ANR	2793939	ExpressionStatement	ZSTR_VAL ( new_str ) [ i ] = xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]	2969:4:72525:72594	2793622	2	True				
ANR	2793940	AssignmentExpression	ZSTR_VAL ( new_str ) [ i ] = xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]		2793622	0		=			
ANR	2793941	ArrayIndexing	ZSTR_VAL ( new_str ) [ i ]		2793622	0					
ANR	2793942	CallExpression	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793943	Callee	ZSTR_VAL		2793622	0					
ANR	2793944	Identifier	ZSTR_VAL		2793622	0					
ANR	2793945	ArgumentList	new_str		2793622	1					
ANR	2793946	Argument	new_str		2793622	0					
ANR	2793947	Identifier	new_str		2793622	0					
ANR	2793948	Identifier	i		2793622	1					
ANR	2793949	ArrayIndexing	xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]		2793622	1					
ANR	2793950	Identifier	xlat		2793622	0					
ANR	2793951	CastExpression	( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793952	CastTarget	size_t		2793622	0					
ANR	2793953	CastExpression	( unsigned char ) ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793954	CastTarget	unsigned char		2793622	0					
ANR	2793955	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793956	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793957	Callee	ZSTR_VAL		2793622	0					
ANR	2793958	Identifier	ZSTR_VAL		2793622	0					
ANR	2793959	ArgumentList	str		2793622	1					
ANR	2793960	Argument	str		2793622	0					
ANR	2793961	Identifier	str		2793622	0					
ANR	2793962	Identifier	i		2793622	1					
ANR	2793963	BreakStatement	break ;	2970:4:72600:72605	2793622	3	True				
ANR	2793964	ForStatement	for ( ; i < ZSTR_LEN ( str ) ; i ++ )		2793622	4					
ANR	2793965	Condition	i < ZSTR_LEN ( str )	2974:8:72625:72641	2793622	0	True				
ANR	2793966	RelationalExpression	i < ZSTR_LEN ( str )		2793622	0		<			
ANR	2793967	Identifier	i		2793622	0					
ANR	2793968	CallExpression	ZSTR_LEN ( str )		2793622	1					
ANR	2793969	Callee	ZSTR_LEN		2793622	0					
ANR	2793970	Identifier	ZSTR_LEN		2793622	0					
ANR	2793971	ArgumentList	str		2793622	1					
ANR	2793972	Argument	str		2793622	0					
ANR	2793973	Identifier	str		2793622	0					
ANR	2793974	PostIncDecOperationExpression	i ++	2974:27:72644:72646	2793622	1	True				
ANR	2793975	Identifier	i		2793622	0					
ANR	2793976	IncDec	++		2793622	1					
ANR	2793977	CompoundStatement		40:32:1065:1065	2793622	2					
ANR	2793978	ExpressionStatement	ZSTR_VAL ( new_str ) [ i ] = xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]	2975:3:72654:72723	2793622	0	True				
ANR	2793979	AssignmentExpression	ZSTR_VAL ( new_str ) [ i ] = xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]		2793622	0		=			
ANR	2793980	ArrayIndexing	ZSTR_VAL ( new_str ) [ i ]		2793622	0					
ANR	2793981	CallExpression	ZSTR_VAL ( new_str )		2793622	0					
ANR	2793982	Callee	ZSTR_VAL		2793622	0					
ANR	2793983	Identifier	ZSTR_VAL		2793622	0					
ANR	2793984	ArgumentList	new_str		2793622	1					
ANR	2793985	Argument	new_str		2793622	0					
ANR	2793986	Identifier	new_str		2793622	0					
ANR	2793987	Identifier	i		2793622	1					
ANR	2793988	ArrayIndexing	xlat [ ( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ] ]		2793622	1					
ANR	2793989	Identifier	xlat		2793622	0					
ANR	2793990	CastExpression	( size_t ) ( unsigned char ) ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793991	CastTarget	size_t		2793622	0					
ANR	2793992	CastExpression	( unsigned char ) ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793993	CastTarget	unsigned char		2793622	0					
ANR	2793994	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2793622	1					
ANR	2793995	CallExpression	ZSTR_VAL ( str )		2793622	0					
ANR	2793996	Callee	ZSTR_VAL		2793622	0					
ANR	2793997	Identifier	ZSTR_VAL		2793622	0					
ANR	2793998	ArgumentList	str		2793622	1					
ANR	2793999	Argument	str		2793622	0					
ANR	2794000	Identifier	str		2793622	0					
ANR	2794001	Identifier	i		2793622	1					
ANR	2794002	IfStatement	if ( ! new_str )		2793622	3					
ANR	2794003	Condition	! new_str	2979:5:72738:72745	2793622	0	True				
ANR	2794004	UnaryOperationExpression	! new_str		2793622	0					
ANR	2794005	UnaryOperator	!		2793622	0					
ANR	2794006	Identifier	new_str		2793622	1					
ANR	2794007	CompoundStatement		45:15:1164:1164	2793622	1					
ANR	2794008	ReturnStatement	return zend_string_copy ( str ) ;	2980:2:72752:72780	2793622	0	True				
ANR	2794009	CallExpression	zend_string_copy ( str )		2793622	0					
ANR	2794010	Callee	zend_string_copy		2793622	0					
ANR	2794011	Identifier	zend_string_copy		2793622	0					
ANR	2794012	ArgumentList	str		2793622	1					
ANR	2794013	Argument	str		2793622	0					
ANR	2794014	Identifier	str		2793622	0					
ANR	2794015	ExpressionStatement	ZSTR_VAL ( new_str ) [ ZSTR_LEN ( new_str ) ] = 0	2983:1:72787:72827	2793622	4	True				
ANR	2794016	AssignmentExpression	ZSTR_VAL ( new_str ) [ ZSTR_LEN ( new_str ) ] = 0		2793622	0		=			
ANR	2794017	ArrayIndexing	ZSTR_VAL ( new_str ) [ ZSTR_LEN ( new_str ) ]		2793622	0					
ANR	2794018	CallExpression	ZSTR_VAL ( new_str )		2793622	0					
ANR	2794019	Callee	ZSTR_VAL		2793622	0					
ANR	2794020	Identifier	ZSTR_VAL		2793622	0					
ANR	2794021	ArgumentList	new_str		2793622	1					
ANR	2794022	Argument	new_str		2793622	0					
ANR	2794023	Identifier	new_str		2793622	0					
ANR	2794024	CallExpression	ZSTR_LEN ( new_str )		2793622	1					
ANR	2794025	Callee	ZSTR_LEN		2793622	0					
ANR	2794026	Identifier	ZSTR_LEN		2793622	0					
ANR	2794027	ArgumentList	new_str		2793622	1					
ANR	2794028	Argument	new_str		2793622	0					
ANR	2794029	Identifier	new_str		2793622	0					
ANR	2794030	PrimaryExpression	0		2793622	1					
ANR	2794031	ReturnStatement	return new_str ;	2984:1:72830:72844	2793622	5	True				
ANR	2794032	Identifier	new_str		2793622	0					
ANR	2794033	ReturnType	static zend_string *		2793622	1					
ANR	2794034	Identifier	php_strtr_ex		2793622	2					
ANR	2794035	ParameterList	"zend_string * str , char * str_from , char * str_to , size_t trlen"		2793622	3					
ANR	2794036	Parameter	zend_string * str	2934:33:71521:71536	2793622	0	True				
ANR	2794037	ParameterType	zend_string *		2793622	0					
ANR	2794038	Identifier	str		2793622	1					
ANR	2794039	Parameter	char * str_from	2934:51:71539:71552	2793622	1	True				
ANR	2794040	ParameterType	char *		2793622	0					
ANR	2794041	Identifier	str_from		2793622	1					
ANR	2794042	Parameter	char * str_to	2934:67:71555:71566	2793622	2	True				
ANR	2794043	ParameterType	char *		2793622	0					
ANR	2794044	Identifier	str_to		2793622	1					
ANR	2794045	Parameter	size_t trlen	2934:81:71569:71580	2793622	3	True				
ANR	2794046	ParameterType	size_t		2793622	0					
ANR	2794047	Identifier	trlen		2793622	1					
ANR	2794048	CFGEntryNode	ENTRY		2793622		True				
ANR	2794049	CFGExitNode	EXIT		2793622		True				
ANR	2794050	Symbol	* * ZSTR_VAL		2793622						
ANR	2794051	Symbol	trlen		2793622						
ANR	2794052	Symbol	UNEXPECTED		2793622						
ANR	2794053	Symbol	new_str		2793622						
ANR	2794054	Symbol	* ZSTR_LEN		2793622						
ANR	2794055	Symbol	str_from		2793622						
ANR	2794056	Symbol	str_to		2793622						
ANR	2794057	Symbol	* ZSTR_VAL		2793622						
ANR	2794058	Symbol	xlat		2793622						
ANR	2794059	Symbol	zend_string_alloc		2793622						
ANR	2794060	Symbol	* * i		2793622						
ANR	2794061	Symbol	NULL		2793622						
ANR	2794062	Symbol	* * str_from		2793622						
ANR	2794063	Symbol	i		2793622						
ANR	2794064	Symbol	* str_from		2793622						
ANR	2794065	Symbol	j		2793622						
ANR	2794066	Symbol	zend_string_copy		2793622						
ANR	2794067	Symbol	ch_from		2793622						
ANR	2794068	Symbol	ZSTR_VAL		2793622						
ANR	2794069	Symbol	str		2793622						
ANR	2794070	Symbol	* str_to		2793622						
ANR	2794071	Symbol	* i		2793622						
ANR	2794072	Symbol	* j		2793622						
ANR	2794073	Symbol	ch_to		2793622						
ANR	2794074	Symbol	ZSTR_LEN		2793622						
ANR	2794075	Symbol	* xlat		2793622						
ANR	2794076	Function	php_strtr_array	2989:0:72885:76535							
ANR	2794077	FunctionDef	"php_strtr_array (zval * return_value , zend_string * input , HashTable * pats)"		2794076	0					
ANR	2794078	CompoundStatement		2990:0:72970:76535	2794076	0					
ANR	2794079	IdentifierDeclStatement	char * str = ZSTR_VAL ( input ) ;	2991:1:72973:73000	2794076	0	True				
ANR	2794080	IdentifierDecl	* str = ZSTR_VAL ( input )		2794076	0					
ANR	2794081	IdentifierDeclType	char *		2794076	0					
ANR	2794082	Identifier	str		2794076	1					
ANR	2794083	AssignmentExpression	* str = ZSTR_VAL ( input )		2794076	2		=			
ANR	2794084	Identifier	str		2794076	0					
ANR	2794085	CallExpression	ZSTR_VAL ( input )		2794076	1					
ANR	2794086	Callee	ZSTR_VAL		2794076	0					
ANR	2794087	Identifier	ZSTR_VAL		2794076	0					
ANR	2794088	ArgumentList	input		2794076	1					
ANR	2794089	Argument	input		2794076	0					
ANR	2794090	Identifier	input		2794076	0					
ANR	2794091	IdentifierDeclStatement	size_t slen = ZSTR_LEN ( input ) ;	2992:1:73003:73032	2794076	1	True				
ANR	2794092	IdentifierDecl	slen = ZSTR_LEN ( input )		2794076	0					
ANR	2794093	IdentifierDeclType	size_t		2794076	0					
ANR	2794094	Identifier	slen		2794076	1					
ANR	2794095	AssignmentExpression	slen = ZSTR_LEN ( input )		2794076	2		=			
ANR	2794096	Identifier	slen		2794076	0					
ANR	2794097	CallExpression	ZSTR_LEN ( input )		2794076	1					
ANR	2794098	Callee	ZSTR_LEN		2794076	0					
ANR	2794099	Identifier	ZSTR_LEN		2794076	0					
ANR	2794100	ArgumentList	input		2794076	1					
ANR	2794101	Argument	input		2794076	0					
ANR	2794102	Identifier	input		2794076	0					
ANR	2794103	IdentifierDeclStatement	zend_ulong num_key ;	2993:1:73035:73053	2794076	2	True				
ANR	2794104	IdentifierDecl	num_key		2794076	0					
ANR	2794105	IdentifierDeclType	zend_ulong		2794076	0					
ANR	2794106	Identifier	num_key		2794076	1					
ANR	2794107	IdentifierDeclStatement	zend_string * str_key ;	2994:1:73056:73076	2794076	3	True				
ANR	2794108	IdentifierDecl	* str_key		2794076	0					
ANR	2794109	IdentifierDeclType	zend_string *		2794076	0					
ANR	2794110	Identifier	str_key		2794076	1					
ANR	2794111	IdentifierDeclStatement	"size_t len , pos , old_pos ;"	2995:1:73079:73103	2794076	4	True				
ANR	2794112	IdentifierDecl	len		2794076	0					
ANR	2794113	IdentifierDeclType	size_t		2794076	0					
ANR	2794114	Identifier	len		2794076	1					
ANR	2794115	IdentifierDecl	pos		2794076	1					
ANR	2794116	IdentifierDeclType	size_t		2794076	0					
ANR	2794117	Identifier	pos		2794076	1					
ANR	2794118	IdentifierDecl	old_pos		2794076	2					
ANR	2794119	IdentifierDeclType	size_t		2794076	0					
ANR	2794120	Identifier	old_pos		2794076	1					
ANR	2794121	IdentifierDeclStatement	int num_keys = 0 ;	2996:1:73106:73122	2794076	5	True				
ANR	2794122	IdentifierDecl	num_keys = 0		2794076	0					
ANR	2794123	IdentifierDeclType	int		2794076	0					
ANR	2794124	Identifier	num_keys		2794076	1					
ANR	2794125	AssignmentExpression	num_keys = 0		2794076	2		=			
ANR	2794126	Identifier	num_keys		2794076	0					
ANR	2794127	PrimaryExpression	0		2794076	1					
ANR	2794128	IdentifierDeclStatement	size_t minlen = 128 * 1024 ;	2997:1:73125:73149	2794076	6	True				
ANR	2794129	IdentifierDecl	minlen = 128 * 1024		2794076	0					
ANR	2794130	IdentifierDeclType	size_t		2794076	0					
ANR	2794131	Identifier	minlen		2794076	1					
ANR	2794132	AssignmentExpression	minlen = 128 * 1024		2794076	2		=			
ANR	2794133	Identifier	minlen		2794076	0					
ANR	2794134	MultiplicativeExpression	128 * 1024		2794076	1		*			
ANR	2794135	PrimaryExpression	128		2794076	0					
ANR	2794136	PrimaryExpression	1024		2794076	1					
ANR	2794137	IdentifierDeclStatement	size_t maxlen = 0 ;	2998:1:73152:73169	2794076	7	True				
ANR	2794138	IdentifierDecl	maxlen = 0		2794076	0					
ANR	2794139	IdentifierDeclType	size_t		2794076	0					
ANR	2794140	Identifier	maxlen		2794076	1					
ANR	2794141	AssignmentExpression	maxlen = 0		2794076	2		=			
ANR	2794142	Identifier	maxlen		2794076	0					
ANR	2794143	PrimaryExpression	0		2794076	1					
ANR	2794144	IdentifierDeclStatement	HashTable str_hash ;	2999:1:73172:73190	2794076	8	True				
ANR	2794145	IdentifierDecl	str_hash		2794076	0					
ANR	2794146	IdentifierDeclType	HashTable		2794076	0					
ANR	2794147	Identifier	str_hash		2794076	1					
ANR	2794148	IdentifierDeclStatement	zval * entry ;	3000:1:73193:73204	2794076	9	True				
ANR	2794149	IdentifierDecl	* entry		2794076	0					
ANR	2794150	IdentifierDeclType	zval *		2794076	0					
ANR	2794151	Identifier	entry		2794076	1					
ANR	2794152	IdentifierDeclStatement	char * key ;	3001:1:73207:73216	2794076	10	True				
ANR	2794153	IdentifierDecl	* key		2794076	0					
ANR	2794154	IdentifierDeclType	char *		2794076	0					
ANR	2794155	Identifier	key		2794076	1					
ANR	2794156	IdentifierDeclStatement	smart_str result = { 0 } ;	3002:1:73219:73241	2794076	11	True				
ANR	2794157	IdentifierDecl	result = { 0 }		2794076	0					
ANR	2794158	IdentifierDeclType	smart_str		2794076	0					
ANR	2794159	Identifier	result		2794076	1					
ANR	2794160	AssignmentExpression	result = { 0 }		2794076	2		=			
ANR	2794161	Identifier	result		2794076	0					
ANR	2794162	InitializerList	0		2794076	1					
ANR	2794163	PrimaryExpression	0		2794076	0					
ANR	2794164	IdentifierDeclStatement	zend_ulong bitset [ 256 / sizeof ( zend_ulong ) ] ;	3003:1:73244:73285	2794076	12	True				
ANR	2794165	IdentifierDecl	bitset [ 256 / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794166	IdentifierDeclType	zend_ulong [ 256 / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794167	Identifier	bitset		2794076	1					
ANR	2794168	MultiplicativeExpression	256 / sizeof ( zend_ulong )		2794076	2		/			
ANR	2794169	PrimaryExpression	256		2794076	0					
ANR	2794170	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794171	Sizeof	sizeof		2794076	0					
ANR	2794172	SizeofOperand	zend_ulong		2794076	1					
ANR	2794173	IdentifierDeclStatement	zend_ulong * num_bitset ;	3004:1:73288:73310	2794076	13	True				
ANR	2794174	IdentifierDecl	* num_bitset		2794076	0					
ANR	2794175	IdentifierDeclType	zend_ulong *		2794076	0					
ANR	2794176	Identifier	num_bitset		2794076	1					
ANR	2794177	ExpressionStatement	"num_bitset = ecalloc ( ( slen + sizeof ( zend_ulong ) ) / sizeof ( zend_ulong ) , sizeof ( zend_ulong ) )"	3007:1:73362:73452	2794076	14	True				
ANR	2794178	AssignmentExpression	"num_bitset = ecalloc ( ( slen + sizeof ( zend_ulong ) ) / sizeof ( zend_ulong ) , sizeof ( zend_ulong ) )"		2794076	0		=			
ANR	2794179	Identifier	num_bitset		2794076	0					
ANR	2794180	CallExpression	"ecalloc ( ( slen + sizeof ( zend_ulong ) ) / sizeof ( zend_ulong ) , sizeof ( zend_ulong ) )"		2794076	1					
ANR	2794181	Callee	ecalloc		2794076	0					
ANR	2794182	Identifier	ecalloc		2794076	0					
ANR	2794183	ArgumentList	( slen + sizeof ( zend_ulong ) ) / sizeof ( zend_ulong )		2794076	1					
ANR	2794184	Argument	( slen + sizeof ( zend_ulong ) ) / sizeof ( zend_ulong )		2794076	0					
ANR	2794185	MultiplicativeExpression	( slen + sizeof ( zend_ulong ) ) / sizeof ( zend_ulong )		2794076	0		/			
ANR	2794186	AdditiveExpression	slen + sizeof ( zend_ulong )		2794076	0		+			
ANR	2794187	Identifier	slen		2794076	0					
ANR	2794188	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794189	Sizeof	sizeof		2794076	0					
ANR	2794190	SizeofOperand	zend_ulong		2794076	1					
ANR	2794191	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794192	Sizeof	sizeof		2794076	0					
ANR	2794193	SizeofOperand	zend_ulong		2794076	1					
ANR	2794194	Argument	sizeof ( zend_ulong )		2794076	1					
ANR	2794195	SizeofExpression	sizeof ( zend_ulong )		2794076	0					
ANR	2794196	Sizeof	sizeof		2794076	0					
ANR	2794197	SizeofOperand	zend_ulong		2794076	1					
ANR	2794198	ExpressionStatement	"memset ( bitset , 0 , sizeof ( bitset ) )"	3008:1:73455:73488	2794076	15	True				
ANR	2794199	CallExpression	"memset ( bitset , 0 , sizeof ( bitset ) )"		2794076	0					
ANR	2794200	Callee	memset		2794076	0					
ANR	2794201	Identifier	memset		2794076	0					
ANR	2794202	ArgumentList	bitset		2794076	1					
ANR	2794203	Argument	bitset		2794076	0					
ANR	2794204	Identifier	bitset		2794076	0					
ANR	2794205	Argument	0		2794076	1					
ANR	2794206	PrimaryExpression	0		2794076	0					
ANR	2794207	Argument	sizeof ( bitset )		2794076	2					
ANR	2794208	SizeofExpression	sizeof ( bitset )		2794076	0					
ANR	2794209	Sizeof	sizeof		2794076	0					
ANR	2794210	SizeofOperand	bitset		2794076	1					
ANR	2794211	Statement	ZEND_HASH_FOREACH_STR_KEY	3011:1:73540:73564	2794076	16	True				
ANR	2794212	Statement	(	3011:26:73565:73565	2794076	17	True				
ANR	2794213	Statement	pats	3011:27:73566:73569	2794076	18	True				
ANR	2794214	Statement	","	3011:31:73570:73570	2794076	19	True				
ANR	2794215	Statement	str_key	3011:33:73572:73578	2794076	20	True				
ANR	2794216	Statement	)	3011:40:73579:73579	2794076	21	True				
ANR	2794217	CompoundStatement		22:42:610:610	2794076	22					
ANR	2794218	IfStatement	if ( UNEXPECTED ( ! str_key ) )		2794076	0					
ANR	2794219	Condition	UNEXPECTED ( ! str_key )	3012:6:73589:73608	2794076	0	True				
ANR	2794220	CallExpression	UNEXPECTED ( ! str_key )		2794076	0					
ANR	2794221	Callee	UNEXPECTED		2794076	0					
ANR	2794222	Identifier	UNEXPECTED		2794076	0					
ANR	2794223	ArgumentList	! str_key		2794076	1					
ANR	2794224	Argument	! str_key		2794076	0					
ANR	2794225	UnaryOperationExpression	! str_key		2794076	0					
ANR	2794226	UnaryOperator	!		2794076	0					
ANR	2794227	Identifier	str_key		2794076	1					
ANR	2794228	CompoundStatement		23:28:640:640	2794076	1					
ANR	2794229	ExpressionStatement	num_keys = 1	3013:3:73616:73628	2794076	0	True				
ANR	2794230	AssignmentExpression	num_keys = 1		2794076	0		=			
ANR	2794231	Identifier	num_keys		2794076	0					
ANR	2794232	PrimaryExpression	1		2794076	1					
ANR	2794233	ElseStatement	else		2794076	0					
ANR	2794234	CompoundStatement		25:9:668:668	2794076	0					
ANR	2794235	ExpressionStatement	len = ZSTR_LEN ( str_key )	3015:3:73644:73667	2794076	0	True				
ANR	2794236	AssignmentExpression	len = ZSTR_LEN ( str_key )		2794076	0		=			
ANR	2794237	Identifier	len		2794076	0					
ANR	2794238	CallExpression	ZSTR_LEN ( str_key )		2794076	1					
ANR	2794239	Callee	ZSTR_LEN		2794076	0					
ANR	2794240	Identifier	ZSTR_LEN		2794076	0					
ANR	2794241	ArgumentList	str_key		2794076	1					
ANR	2794242	Argument	str_key		2794076	0					
ANR	2794243	Identifier	str_key		2794076	0					
ANR	2794244	IfStatement	if ( UNEXPECTED ( len < 1 ) )		2794076	1					
ANR	2794245	Condition	UNEXPECTED ( len < 1 )	3016:7:73676:73694	2794076	0	True				
ANR	2794246	CallExpression	UNEXPECTED ( len < 1 )		2794076	0					
ANR	2794247	Callee	UNEXPECTED		2794076	0					
ANR	2794248	Identifier	UNEXPECTED		2794076	0					
ANR	2794249	ArgumentList	len < 1		2794076	1					
ANR	2794250	Argument	len < 1		2794076	0					
ANR	2794251	RelationalExpression	len < 1		2794076	0		<			
ANR	2794252	Identifier	len		2794076	0					
ANR	2794253	PrimaryExpression	1		2794076	1					
ANR	2794254	CompoundStatement		27:28:726:726	2794076	1					
ANR	2794255	ExpressionStatement	RETURN_FALSE	3017:4:73703:73715	2794076	0	True				
ANR	2794256	Identifier	RETURN_FALSE		2794076	0					
ANR	2794257	ElseStatement	else		2794076	0					
ANR	2794258	IfStatement	if ( UNEXPECTED ( len > slen ) )		2794076	0					
ANR	2794259	Condition	UNEXPECTED ( len > slen )	3018:14:73731:73752	2794076	0	True				
ANR	2794260	CallExpression	UNEXPECTED ( len > slen )		2794076	0					
ANR	2794261	Callee	UNEXPECTED		2794076	0					
ANR	2794262	Identifier	UNEXPECTED		2794076	0					
ANR	2794263	ArgumentList	len > slen		2794076	1					
ANR	2794264	Argument	len > slen		2794076	0					
ANR	2794265	RelationalExpression	len > slen		2794076	0		>			
ANR	2794266	Identifier	len		2794076	0					
ANR	2794267	Identifier	slen		2794076	1					
ANR	2794268	CompoundStatement		29:38:784:784	2794076	1					
ANR	2794269	ContinueStatement	continue ;	3020:4:73790:73798	2794076	0	True				
ANR	2794270	IfStatement	if ( len > maxlen )		2794076	2					
ANR	2794271	Condition	len > maxlen	3022:7:73812:73823	2794076	0	True				
ANR	2794272	RelationalExpression	len > maxlen		2794076	0		>			
ANR	2794273	Identifier	len		2794076	0					
ANR	2794274	Identifier	maxlen		2794076	1					
ANR	2794275	CompoundStatement		33:21:855:855	2794076	1					
ANR	2794276	ExpressionStatement	maxlen = len	3023:4:73832:73844	2794076	0	True				
ANR	2794277	AssignmentExpression	maxlen = len		2794076	0		=			
ANR	2794278	Identifier	maxlen		2794076	0					
ANR	2794279	Identifier	len		2794076	1					
ANR	2794280	IfStatement	if ( len < minlen )		2794076	3					
ANR	2794281	Condition	len < minlen	3025:7:73858:73869	2794076	0	True				
ANR	2794282	RelationalExpression	len < minlen		2794076	0		<			
ANR	2794283	Identifier	len		2794076	0					
ANR	2794284	Identifier	minlen		2794076	1					
ANR	2794285	CompoundStatement		36:21:901:901	2794076	1					
ANR	2794286	ExpressionStatement	minlen = len	3026:4:73878:73890	2794076	0	True				
ANR	2794287	AssignmentExpression	minlen = len		2794076	0		=			
ANR	2794288	Identifier	minlen		2794076	0					
ANR	2794289	Identifier	len		2794076	1					
ANR	2794290	ExpressionStatement	num_bitset [ len / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) )	3029:3:73938:74015	2794076	4	True				
ANR	2794291	AssignmentExpression	num_bitset [ len / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) )		2794076	0		|=			
ANR	2794292	ArrayIndexing	num_bitset [ len / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794293	Identifier	num_bitset		2794076	0					
ANR	2794294	MultiplicativeExpression	len / sizeof ( zend_ulong )		2794076	1		/			
ANR	2794295	Identifier	len		2794076	0					
ANR	2794296	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794297	Sizeof	sizeof		2794076	0					
ANR	2794298	SizeofOperand	zend_ulong		2794076	1					
ANR	2794299	ShiftExpression	Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) )		2794076	1		<<			
ANR	2794300	CallExpression	Z_UL ( 1 )		2794076	0					
ANR	2794301	Callee	Z_UL		2794076	0					
ANR	2794302	Identifier	Z_UL		2794076	0					
ANR	2794303	ArgumentList	1		2794076	1					
ANR	2794304	Argument	1		2794076	0					
ANR	2794305	PrimaryExpression	1		2794076	0					
ANR	2794306	MultiplicativeExpression	len % sizeof ( zend_ulong )		2794076	1		%			
ANR	2794307	Identifier	len		2794076	0					
ANR	2794308	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794309	Sizeof	sizeof		2794076	0					
ANR	2794310	SizeofOperand	zend_ulong		2794076	1					
ANR	2794311	ExpressionStatement	bitset [ ( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( ( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) % sizeof ( zend_ulong ) )	3030:3:74020:74161	2794076	5	True				
ANR	2794312	AssignmentExpression	bitset [ ( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( ( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) % sizeof ( zend_ulong ) )		2794076	0		|=			
ANR	2794313	ArrayIndexing	bitset [ ( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794314	Identifier	bitset		2794076	0					
ANR	2794315	MultiplicativeExpression	( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) / sizeof ( zend_ulong )		2794076	1		/			
ANR	2794316	CastExpression	( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ]		2794076	0					
ANR	2794317	CastTarget	unsigned char		2794076	0					
ANR	2794318	ArrayIndexing	ZSTR_VAL ( str_key ) [ 0 ]		2794076	1					
ANR	2794319	CallExpression	ZSTR_VAL ( str_key )		2794076	0					
ANR	2794320	Callee	ZSTR_VAL		2794076	0					
ANR	2794321	Identifier	ZSTR_VAL		2794076	0					
ANR	2794322	ArgumentList	str_key		2794076	1					
ANR	2794323	Argument	str_key		2794076	0					
ANR	2794324	Identifier	str_key		2794076	0					
ANR	2794325	PrimaryExpression	0		2794076	1					
ANR	2794326	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794327	Sizeof	sizeof		2794076	0					
ANR	2794328	SizeofOperand	zend_ulong		2794076	1					
ANR	2794329	ShiftExpression	Z_UL ( 1 ) << ( ( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) % sizeof ( zend_ulong ) )		2794076	1		<<			
ANR	2794330	CallExpression	Z_UL ( 1 )		2794076	0					
ANR	2794331	Callee	Z_UL		2794076	0					
ANR	2794332	Identifier	Z_UL		2794076	0					
ANR	2794333	ArgumentList	1		2794076	1					
ANR	2794334	Argument	1		2794076	0					
ANR	2794335	PrimaryExpression	1		2794076	0					
ANR	2794336	MultiplicativeExpression	( ( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ] ) % sizeof ( zend_ulong )		2794076	1		%			
ANR	2794337	CastExpression	( unsigned char ) ZSTR_VAL ( str_key ) [ 0 ]		2794076	0					
ANR	2794338	CastTarget	unsigned char		2794076	0					
ANR	2794339	ArrayIndexing	ZSTR_VAL ( str_key ) [ 0 ]		2794076	1					
ANR	2794340	CallExpression	ZSTR_VAL ( str_key )		2794076	0					
ANR	2794341	Callee	ZSTR_VAL		2794076	0					
ANR	2794342	Identifier	ZSTR_VAL		2794076	0					
ANR	2794343	ArgumentList	str_key		2794076	1					
ANR	2794344	Argument	str_key		2794076	0					
ANR	2794345	Identifier	str_key		2794076	0					
ANR	2794346	PrimaryExpression	0		2794076	1					
ANR	2794347	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794348	Sizeof	sizeof		2794076	0					
ANR	2794349	SizeofOperand	zend_ulong		2794076	1					
ANR	2794350	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3032:3:74170:74193	2794076	23	True				
ANR	2794351	CallExpression	ZEND_HASH_FOREACH_END ( )		2794076	0					
ANR	2794352	Callee	ZEND_HASH_FOREACH_END		2794076	0					
ANR	2794353	Identifier	ZEND_HASH_FOREACH_END		2794076	0					
ANR	2794354	ArgumentList			2794076	1					
ANR	2794355	IfStatement	if ( UNEXPECTED ( num_keys ) )		2794076	24					
ANR	2794356	Condition	UNEXPECTED ( num_keys )	3034:5:74201:74220	2794076	0	True				
ANR	2794357	CallExpression	UNEXPECTED ( num_keys )		2794076	0					
ANR	2794358	Callee	UNEXPECTED		2794076	0					
ANR	2794359	Identifier	UNEXPECTED		2794076	0					
ANR	2794360	ArgumentList	num_keys		2794076	1					
ANR	2794361	Argument	num_keys		2794076	0					
ANR	2794362	Identifier	num_keys		2794076	0					
ANR	2794363	CompoundStatement		46:2:1256:1277	2794076	1					
ANR	2794364	IdentifierDeclStatement	zend_string * key_used ;	3035:2:74227:74248	2794076	0	True				
ANR	2794365	IdentifierDecl	* key_used		2794076	0					
ANR	2794366	IdentifierDeclType	zend_string *		2794076	0					
ANR	2794367	Identifier	key_used		2794076	1					
ANR	2794368	ExpressionStatement	"zend_hash_init ( & str_hash , zend_hash_num_elements ( pats ) , NULL , NULL , 0 )"	3037:2:74307:74377	2794076	1	True				
ANR	2794369	CallExpression	"zend_hash_init ( & str_hash , zend_hash_num_elements ( pats ) , NULL , NULL , 0 )"		2794076	0					
ANR	2794370	Callee	zend_hash_init		2794076	0					
ANR	2794371	Identifier	zend_hash_init		2794076	0					
ANR	2794372	ArgumentList	& str_hash		2794076	1					
ANR	2794373	Argument	& str_hash		2794076	0					
ANR	2794374	UnaryOperationExpression	& str_hash		2794076	0					
ANR	2794375	UnaryOperator	&		2794076	0					
ANR	2794376	Identifier	str_hash		2794076	1					
ANR	2794377	Argument	zend_hash_num_elements ( pats )		2794076	1					
ANR	2794378	CallExpression	zend_hash_num_elements ( pats )		2794076	0					
ANR	2794379	Callee	zend_hash_num_elements		2794076	0					
ANR	2794380	Identifier	zend_hash_num_elements		2794076	0					
ANR	2794381	ArgumentList	pats		2794076	1					
ANR	2794382	Argument	pats		2794076	0					
ANR	2794383	Identifier	pats		2794076	0					
ANR	2794384	Argument	NULL		2794076	2					
ANR	2794385	Identifier	NULL		2794076	0					
ANR	2794386	Argument	NULL		2794076	3					
ANR	2794387	Identifier	NULL		2794076	0					
ANR	2794388	Argument	0		2794076	4					
ANR	2794389	PrimaryExpression	0		2794076	0					
ANR	2794390	Statement	ZEND_HASH_FOREACH_KEY_VAL	3038:2:74381:74405	2794076	2	True				
ANR	2794391	Statement	(	3038:27:74406:74406	2794076	3	True				
ANR	2794392	Statement	pats	3038:28:74407:74410	2794076	4	True				
ANR	2794393	Statement	","	3038:32:74411:74411	2794076	5	True				
ANR	2794394	Statement	num_key	3038:34:74413:74419	2794076	6	True				
ANR	2794395	Statement	","	3038:41:74420:74420	2794076	7	True				
ANR	2794396	Statement	str_key	3038:43:74422:74428	2794076	8	True				
ANR	2794397	Statement	","	3038:50:74429:74429	2794076	9	True				
ANR	2794398	Statement	entry	3038:52:74431:74435	2794076	10	True				
ANR	2794399	Statement	)	3038:57:74436:74436	2794076	11	True				
ANR	2794400	CompoundStatement		49:59:1467:1467	2794076	12					
ANR	2794401	IfStatement	if ( UNEXPECTED ( ! str_key ) )		2794076	0					
ANR	2794402	Condition	UNEXPECTED ( ! str_key )	3039:7:74447:74466	2794076	0	True				
ANR	2794403	CallExpression	UNEXPECTED ( ! str_key )		2794076	0					
ANR	2794404	Callee	UNEXPECTED		2794076	0					
ANR	2794405	Identifier	UNEXPECTED		2794076	0					
ANR	2794406	ArgumentList	! str_key		2794076	1					
ANR	2794407	Argument	! str_key		2794076	0					
ANR	2794408	UnaryOperationExpression	! str_key		2794076	0					
ANR	2794409	UnaryOperator	!		2794076	0					
ANR	2794410	Identifier	str_key		2794076	1					
ANR	2794411	CompoundStatement		50:29:1498:1498	2794076	1					
ANR	2794412	ExpressionStatement	key_used = zend_long_to_str ( num_key )	3040:4:74475:74511	2794076	0	True				
ANR	2794413	AssignmentExpression	key_used = zend_long_to_str ( num_key )		2794076	0		=			
ANR	2794414	Identifier	key_used		2794076	0					
ANR	2794415	CallExpression	zend_long_to_str ( num_key )		2794076	1					
ANR	2794416	Callee	zend_long_to_str		2794076	0					
ANR	2794417	Identifier	zend_long_to_str		2794076	0					
ANR	2794418	ArgumentList	num_key		2794076	1					
ANR	2794419	Argument	num_key		2794076	0					
ANR	2794420	Identifier	num_key		2794076	0					
ANR	2794421	ExpressionStatement	len = ZSTR_LEN ( key_used )	3041:4:74517:74541	2794076	1	True				
ANR	2794422	AssignmentExpression	len = ZSTR_LEN ( key_used )		2794076	0		=			
ANR	2794423	Identifier	len		2794076	0					
ANR	2794424	CallExpression	ZSTR_LEN ( key_used )		2794076	1					
ANR	2794425	Callee	ZSTR_LEN		2794076	0					
ANR	2794426	Identifier	ZSTR_LEN		2794076	0					
ANR	2794427	ArgumentList	key_used		2794076	1					
ANR	2794428	Argument	key_used		2794076	0					
ANR	2794429	Identifier	key_used		2794076	0					
ANR	2794430	IfStatement	if ( UNEXPECTED ( len > slen ) )		2794076	2					
ANR	2794431	Condition	UNEXPECTED ( len > slen )	3042:8:74551:74572	2794076	0	True				
ANR	2794432	CallExpression	UNEXPECTED ( len > slen )		2794076	0					
ANR	2794433	Callee	UNEXPECTED		2794076	0					
ANR	2794434	Identifier	UNEXPECTED		2794076	0					
ANR	2794435	ArgumentList	len > slen		2794076	1					
ANR	2794436	Argument	len > slen		2794076	0					
ANR	2794437	RelationalExpression	len > slen		2794076	0		>			
ANR	2794438	Identifier	len		2794076	0					
ANR	2794439	Identifier	slen		2794076	1					
ANR	2794440	CompoundStatement		53:32:1604:1604	2794076	1					
ANR	2794441	ContinueStatement	continue ;	3044:5:74612:74620	2794076	0	True				
ANR	2794442	IfStatement	if ( len > maxlen )		2794076	3					
ANR	2794443	Condition	len > maxlen	3046:8:74636:74647	2794076	0	True				
ANR	2794444	RelationalExpression	len > maxlen		2794076	0		>			
ANR	2794445	Identifier	len		2794076	0					
ANR	2794446	Identifier	maxlen		2794076	1					
ANR	2794447	CompoundStatement		57:22:1679:1679	2794076	1					
ANR	2794448	ExpressionStatement	maxlen = len	3047:5:74657:74669	2794076	0	True				
ANR	2794449	AssignmentExpression	maxlen = len		2794076	0		=			
ANR	2794450	Identifier	maxlen		2794076	0					
ANR	2794451	Identifier	len		2794076	1					
ANR	2794452	IfStatement	if ( len < minlen )		2794076	4					
ANR	2794453	Condition	len < minlen	3049:8:74685:74696	2794076	0	True				
ANR	2794454	RelationalExpression	len < minlen		2794076	0		<			
ANR	2794455	Identifier	len		2794076	0					
ANR	2794456	Identifier	minlen		2794076	1					
ANR	2794457	CompoundStatement		60:22:1728:1728	2794076	1					
ANR	2794458	ExpressionStatement	minlen = len	3050:5:74706:74718	2794076	0	True				
ANR	2794459	AssignmentExpression	minlen = len		2794076	0		=			
ANR	2794460	Identifier	minlen		2794076	0					
ANR	2794461	Identifier	len		2794076	1					
ANR	2794462	ExpressionStatement	num_bitset [ len / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) )	3053:4:74769:74846	2794076	5	True				
ANR	2794463	AssignmentExpression	num_bitset [ len / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) )		2794076	0		|=			
ANR	2794464	ArrayIndexing	num_bitset [ len / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794465	Identifier	num_bitset		2794076	0					
ANR	2794466	MultiplicativeExpression	len / sizeof ( zend_ulong )		2794076	1		/			
ANR	2794467	Identifier	len		2794076	0					
ANR	2794468	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794469	Sizeof	sizeof		2794076	0					
ANR	2794470	SizeofOperand	zend_ulong		2794076	1					
ANR	2794471	ShiftExpression	Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) )		2794076	1		<<			
ANR	2794472	CallExpression	Z_UL ( 1 )		2794076	0					
ANR	2794473	Callee	Z_UL		2794076	0					
ANR	2794474	Identifier	Z_UL		2794076	0					
ANR	2794475	ArgumentList	1		2794076	1					
ANR	2794476	Argument	1		2794076	0					
ANR	2794477	PrimaryExpression	1		2794076	0					
ANR	2794478	MultiplicativeExpression	len % sizeof ( zend_ulong )		2794076	1		%			
ANR	2794479	Identifier	len		2794076	0					
ANR	2794480	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794481	Sizeof	sizeof		2794076	0					
ANR	2794482	SizeofOperand	zend_ulong		2794076	1					
ANR	2794483	ExpressionStatement	bitset [ ( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( ( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) % sizeof ( zend_ulong ) )	3054:4:74852:74995	2794076	6	True				
ANR	2794484	AssignmentExpression	bitset [ ( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) / sizeof ( zend_ulong ) ] |= Z_UL ( 1 ) << ( ( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) % sizeof ( zend_ulong ) )		2794076	0		|=			
ANR	2794485	ArrayIndexing	bitset [ ( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794486	Identifier	bitset		2794076	0					
ANR	2794487	MultiplicativeExpression	( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) / sizeof ( zend_ulong )		2794076	1		/			
ANR	2794488	CastExpression	( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ]		2794076	0					
ANR	2794489	CastTarget	unsigned char		2794076	0					
ANR	2794490	ArrayIndexing	ZSTR_VAL ( key_used ) [ 0 ]		2794076	1					
ANR	2794491	CallExpression	ZSTR_VAL ( key_used )		2794076	0					
ANR	2794492	Callee	ZSTR_VAL		2794076	0					
ANR	2794493	Identifier	ZSTR_VAL		2794076	0					
ANR	2794494	ArgumentList	key_used		2794076	1					
ANR	2794495	Argument	key_used		2794076	0					
ANR	2794496	Identifier	key_used		2794076	0					
ANR	2794497	PrimaryExpression	0		2794076	1					
ANR	2794498	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794499	Sizeof	sizeof		2794076	0					
ANR	2794500	SizeofOperand	zend_ulong		2794076	1					
ANR	2794501	ShiftExpression	Z_UL ( 1 ) << ( ( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) % sizeof ( zend_ulong ) )		2794076	1		<<			
ANR	2794502	CallExpression	Z_UL ( 1 )		2794076	0					
ANR	2794503	Callee	Z_UL		2794076	0					
ANR	2794504	Identifier	Z_UL		2794076	0					
ANR	2794505	ArgumentList	1		2794076	1					
ANR	2794506	Argument	1		2794076	0					
ANR	2794507	PrimaryExpression	1		2794076	0					
ANR	2794508	MultiplicativeExpression	( ( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ] ) % sizeof ( zend_ulong )		2794076	1		%			
ANR	2794509	CastExpression	( unsigned char ) ZSTR_VAL ( key_used ) [ 0 ]		2794076	0					
ANR	2794510	CastTarget	unsigned char		2794076	0					
ANR	2794511	ArrayIndexing	ZSTR_VAL ( key_used ) [ 0 ]		2794076	1					
ANR	2794512	CallExpression	ZSTR_VAL ( key_used )		2794076	0					
ANR	2794513	Callee	ZSTR_VAL		2794076	0					
ANR	2794514	Identifier	ZSTR_VAL		2794076	0					
ANR	2794515	ArgumentList	key_used		2794076	1					
ANR	2794516	Argument	key_used		2794076	0					
ANR	2794517	Identifier	key_used		2794076	0					
ANR	2794518	PrimaryExpression	0		2794076	1					
ANR	2794519	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794520	Sizeof	sizeof		2794076	0					
ANR	2794521	SizeofOperand	zend_ulong		2794076	1					
ANR	2794522	ElseStatement	else		2794076	0					
ANR	2794523	CompoundStatement		66:10:2036:2036	2794076	0					
ANR	2794524	ExpressionStatement	key_used = str_key	3056:4:75013:75031	2794076	0	True				
ANR	2794525	AssignmentExpression	key_used = str_key		2794076	0		=			
ANR	2794526	Identifier	key_used		2794076	0					
ANR	2794527	Identifier	str_key		2794076	1					
ANR	2794528	ExpressionStatement	len = ZSTR_LEN ( key_used )	3057:4:75037:75061	2794076	1	True				
ANR	2794529	AssignmentExpression	len = ZSTR_LEN ( key_used )		2794076	0		=			
ANR	2794530	Identifier	len		2794076	0					
ANR	2794531	CallExpression	ZSTR_LEN ( key_used )		2794076	1					
ANR	2794532	Callee	ZSTR_LEN		2794076	0					
ANR	2794533	Identifier	ZSTR_LEN		2794076	0					
ANR	2794534	ArgumentList	key_used		2794076	1					
ANR	2794535	Argument	key_used		2794076	0					
ANR	2794536	Identifier	key_used		2794076	0					
ANR	2794537	IfStatement	if ( UNEXPECTED ( len > slen ) )		2794076	2					
ANR	2794538	Condition	UNEXPECTED ( len > slen )	3058:8:75071:75092	2794076	0	True				
ANR	2794539	CallExpression	UNEXPECTED ( len > slen )		2794076	0					
ANR	2794540	Callee	UNEXPECTED		2794076	0					
ANR	2794541	Identifier	UNEXPECTED		2794076	0					
ANR	2794542	ArgumentList	len > slen		2794076	1					
ANR	2794543	Argument	len > slen		2794076	0					
ANR	2794544	RelationalExpression	len > slen		2794076	0		>			
ANR	2794545	Identifier	len		2794076	0					
ANR	2794546	Identifier	slen		2794076	1					
ANR	2794547	CompoundStatement		69:32:2124:2124	2794076	1					
ANR	2794548	ContinueStatement	continue ;	3060:5:75132:75140	2794076	0	True				
ANR	2794549	ExpressionStatement	"zend_hash_add ( & str_hash , key_used , entry )"	3063:3:75156:75197	2794076	1	True				
ANR	2794550	CallExpression	"zend_hash_add ( & str_hash , key_used , entry )"		2794076	0					
ANR	2794551	Callee	zend_hash_add		2794076	0					
ANR	2794552	Identifier	zend_hash_add		2794076	0					
ANR	2794553	ArgumentList	& str_hash		2794076	1					
ANR	2794554	Argument	& str_hash		2794076	0					
ANR	2794555	UnaryOperationExpression	& str_hash		2794076	0					
ANR	2794556	UnaryOperator	&		2794076	0					
ANR	2794557	Identifier	str_hash		2794076	1					
ANR	2794558	Argument	key_used		2794076	1					
ANR	2794559	Identifier	key_used		2794076	0					
ANR	2794560	Argument	entry		2794076	2					
ANR	2794561	Identifier	entry		2794076	0					
ANR	2794562	IfStatement	if ( UNEXPECTED ( ! str_key ) )		2794076	2					
ANR	2794563	Condition	UNEXPECTED ( ! str_key )	3064:7:75206:75225	2794076	0	True				
ANR	2794564	CallExpression	UNEXPECTED ( ! str_key )		2794076	0					
ANR	2794565	Callee	UNEXPECTED		2794076	0					
ANR	2794566	Identifier	UNEXPECTED		2794076	0					
ANR	2794567	ArgumentList	! str_key		2794076	1					
ANR	2794568	Argument	! str_key		2794076	0					
ANR	2794569	UnaryOperationExpression	! str_key		2794076	0					
ANR	2794570	UnaryOperator	!		2794076	0					
ANR	2794571	Identifier	str_key		2794076	1					
ANR	2794572	CompoundStatement		75:29:2257:2257	2794076	1					
ANR	2794573	ExpressionStatement	zend_string_release ( key_used )	3065:4:75234:75263	2794076	0	True				
ANR	2794574	CallExpression	zend_string_release ( key_used )		2794076	0					
ANR	2794575	Callee	zend_string_release		2794076	0					
ANR	2794576	Identifier	zend_string_release		2794076	0					
ANR	2794577	ArgumentList	key_used		2794076	1					
ANR	2794578	Argument	key_used		2794076	0					
ANR	2794579	Identifier	key_used		2794076	0					
ANR	2794580	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3067:4:75274:75297	2794076	13	True				
ANR	2794581	CallExpression	ZEND_HASH_FOREACH_END ( )		2794076	0					
ANR	2794582	Callee	ZEND_HASH_FOREACH_END		2794076	0					
ANR	2794583	Identifier	ZEND_HASH_FOREACH_END		2794076	0					
ANR	2794584	ArgumentList			2794076	1					
ANR	2794585	ExpressionStatement	pats = & str_hash	3068:2:75301:75317	2794076	14	True				
ANR	2794586	AssignmentExpression	pats = & str_hash		2794076	0		=			
ANR	2794587	Identifier	pats		2794076	0					
ANR	2794588	UnaryOperationExpression	& str_hash		2794076	1					
ANR	2794589	UnaryOperator	&		2794076	0					
ANR	2794590	Identifier	str_hash		2794076	1					
ANR	2794591	IfStatement	if ( UNEXPECTED ( minlen > maxlen ) )		2794076	25					
ANR	2794592	Condition	UNEXPECTED ( minlen > maxlen )	3071:5:75328:75354	2794076	0	True				
ANR	2794593	CallExpression	UNEXPECTED ( minlen > maxlen )		2794076	0					
ANR	2794594	Callee	UNEXPECTED		2794076	0					
ANR	2794595	Identifier	UNEXPECTED		2794076	0					
ANR	2794596	ArgumentList	minlen > maxlen		2794076	1					
ANR	2794597	Argument	minlen > maxlen		2794076	0					
ANR	2794598	RelationalExpression	minlen > maxlen		2794076	0		>			
ANR	2794599	Identifier	minlen		2794076	0					
ANR	2794600	Identifier	maxlen		2794076	1					
ANR	2794601	CompoundStatement		82:34:2386:2386	2794076	1					
ANR	2794602	IfStatement	if ( pats == & str_hash )		2794076	0					
ANR	2794603	Condition	pats == & str_hash	3073:6:75400:75416	2794076	0	True				
ANR	2794604	EqualityExpression	pats == & str_hash		2794076	0		==			
ANR	2794605	Identifier	pats		2794076	0					
ANR	2794606	UnaryOperationExpression	& str_hash		2794076	1					
ANR	2794607	UnaryOperator	&		2794076	0					
ANR	2794608	Identifier	str_hash		2794076	1					
ANR	2794609	CompoundStatement		84:25:2448:2448	2794076	1					
ANR	2794610	ExpressionStatement	zend_hash_destroy ( & str_hash )	3074:3:75424:75452	2794076	0	True				
ANR	2794611	CallExpression	zend_hash_destroy ( & str_hash )		2794076	0					
ANR	2794612	Callee	zend_hash_destroy		2794076	0					
ANR	2794613	Identifier	zend_hash_destroy		2794076	0					
ANR	2794614	ArgumentList	& str_hash		2794076	1					
ANR	2794615	Argument	& str_hash		2794076	0					
ANR	2794616	UnaryOperationExpression	& str_hash		2794076	0					
ANR	2794617	UnaryOperator	&		2794076	0					
ANR	2794618	Identifier	str_hash		2794076	1					
ANR	2794619	ExpressionStatement	efree ( num_bitset )	3076:2:75460:75477	2794076	1	True				
ANR	2794620	CallExpression	efree ( num_bitset )		2794076	0					
ANR	2794621	Callee	efree		2794076	0					
ANR	2794622	Identifier	efree		2794076	0					
ANR	2794623	ArgumentList	num_bitset		2794076	1					
ANR	2794624	Argument	num_bitset		2794076	0					
ANR	2794625	Identifier	num_bitset		2794076	0					
ANR	2794626	ExpressionStatement	RETURN_STR_COPY ( input )	3077:2:75481:75503	2794076	2	True				
ANR	2794627	CallExpression	RETURN_STR_COPY ( input )		2794076	0					
ANR	2794628	Callee	RETURN_STR_COPY		2794076	0					
ANR	2794629	Identifier	RETURN_STR_COPY		2794076	0					
ANR	2794630	ArgumentList	input		2794076	1					
ANR	2794631	Argument	input		2794076	0					
ANR	2794632	Identifier	input		2794076	0					
ANR	2794633	ExpressionStatement	old_pos = pos = 0	3080:1:75510:75527	2794076	26	True				
ANR	2794634	AssignmentExpression	old_pos = pos = 0		2794076	0		=			
ANR	2794635	Identifier	old_pos		2794076	0					
ANR	2794636	AssignmentExpression	pos = 0		2794076	1		=			
ANR	2794637	Identifier	pos		2794076	0					
ANR	2794638	PrimaryExpression	0		2794076	1					
ANR	2794639	WhileStatement	while ( pos <= slen - minlen )		2794076	27					
ANR	2794640	Condition	pos <= slen - minlen	3081:8:75537:75556	2794076	0	True				
ANR	2794641	RelationalExpression	pos <= slen - minlen		2794076	0		<=			
ANR	2794642	Identifier	pos		2794076	0					
ANR	2794643	AdditiveExpression	slen - minlen		2794076	1		-			
ANR	2794644	Identifier	slen		2794076	0					
ANR	2794645	Identifier	minlen		2794076	1					
ANR	2794646	CompoundStatement		92:30:2588:2588	2794076	1					
ANR	2794647	ExpressionStatement	key = str + pos	3082:2:75563:75578	2794076	0	True				
ANR	2794648	AssignmentExpression	key = str + pos		2794076	0		=			
ANR	2794649	Identifier	key		2794076	0					
ANR	2794650	AdditiveExpression	str + pos		2794076	1		+			
ANR	2794651	Identifier	str		2794076	0					
ANR	2794652	Identifier	pos		2794076	1					
ANR	2794653	IfStatement	if ( bitset [ ( ( unsigned char ) key [ 0 ] ) / sizeof ( zend_ulong ) ] & ( Z_UL ( 1 ) << ( ( ( unsigned char ) key [ 0 ] ) % sizeof ( zend_ulong ) ) ) )		2794076	1					
ANR	2794654	Condition	bitset [ ( ( unsigned char ) key [ 0 ] ) / sizeof ( zend_ulong ) ] & ( Z_UL ( 1 ) << ( ( ( unsigned char ) key [ 0 ] ) % sizeof ( zend_ulong ) ) )	3083:6:75586:75699	2794076	0	True				
ANR	2794655	BitAndExpression	bitset [ ( ( unsigned char ) key [ 0 ] ) / sizeof ( zend_ulong ) ] & ( Z_UL ( 1 ) << ( ( ( unsigned char ) key [ 0 ] ) % sizeof ( zend_ulong ) ) )		2794076	0		&			
ANR	2794656	ArrayIndexing	bitset [ ( ( unsigned char ) key [ 0 ] ) / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794657	Identifier	bitset		2794076	0					
ANR	2794658	MultiplicativeExpression	( ( unsigned char ) key [ 0 ] ) / sizeof ( zend_ulong )		2794076	1		/			
ANR	2794659	CastExpression	( unsigned char ) key [ 0 ]		2794076	0					
ANR	2794660	CastTarget	unsigned char		2794076	0					
ANR	2794661	ArrayIndexing	key [ 0 ]		2794076	1					
ANR	2794662	Identifier	key		2794076	0					
ANR	2794663	PrimaryExpression	0		2794076	1					
ANR	2794664	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794665	Sizeof	sizeof		2794076	0					
ANR	2794666	SizeofOperand	zend_ulong		2794076	1					
ANR	2794667	ShiftExpression	Z_UL ( 1 ) << ( ( ( unsigned char ) key [ 0 ] ) % sizeof ( zend_ulong ) )		2794076	1		<<			
ANR	2794668	CallExpression	Z_UL ( 1 )		2794076	0					
ANR	2794669	Callee	Z_UL		2794076	0					
ANR	2794670	Identifier	Z_UL		2794076	0					
ANR	2794671	ArgumentList	1		2794076	1					
ANR	2794672	Argument	1		2794076	0					
ANR	2794673	PrimaryExpression	1		2794076	0					
ANR	2794674	MultiplicativeExpression	( ( unsigned char ) key [ 0 ] ) % sizeof ( zend_ulong )		2794076	1		%			
ANR	2794675	CastExpression	( unsigned char ) key [ 0 ]		2794076	0					
ANR	2794676	CastTarget	unsigned char		2794076	0					
ANR	2794677	ArrayIndexing	key [ 0 ]		2794076	1					
ANR	2794678	Identifier	key		2794076	0					
ANR	2794679	PrimaryExpression	0		2794076	1					
ANR	2794680	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794681	Sizeof	sizeof		2794076	0					
ANR	2794682	SizeofOperand	zend_ulong		2794076	1					
ANR	2794683	CompoundStatement		94:122:2731:2731	2794076	1					
ANR	2794684	ExpressionStatement	len = maxlen	3084:3:75707:75719	2794076	0	True				
ANR	2794685	AssignmentExpression	len = maxlen		2794076	0		=			
ANR	2794686	Identifier	len		2794076	0					
ANR	2794687	Identifier	maxlen		2794076	1					
ANR	2794688	IfStatement	if ( len > slen - pos )		2794076	1					
ANR	2794689	Condition	len > slen - pos	3085:7:75728:75743	2794076	0	True				
ANR	2794690	RelationalExpression	len > slen - pos		2794076	0		>			
ANR	2794691	Identifier	len		2794076	0					
ANR	2794692	AdditiveExpression	slen - pos		2794076	1		-			
ANR	2794693	Identifier	slen		2794076	0					
ANR	2794694	Identifier	pos		2794076	1					
ANR	2794695	CompoundStatement		96:25:2775:2775	2794076	1					
ANR	2794696	ExpressionStatement	len = slen - pos	3086:4:75752:75768	2794076	0	True				
ANR	2794697	AssignmentExpression	len = slen - pos		2794076	0		=			
ANR	2794698	Identifier	len		2794076	0					
ANR	2794699	AdditiveExpression	slen - pos		2794076	1		-			
ANR	2794700	Identifier	slen		2794076	0					
ANR	2794701	Identifier	pos		2794076	1					
ANR	2794702	WhileStatement	while ( len >= minlen )		2794076	2					
ANR	2794703	Condition	len >= minlen	3088:10:75785:75797	2794076	0	True				
ANR	2794704	RelationalExpression	len >= minlen		2794076	0		>=			
ANR	2794705	Identifier	len		2794076	0					
ANR	2794706	Identifier	minlen		2794076	1					
ANR	2794707	CompoundStatement		99:25:2829:2829	2794076	1					
ANR	2794708	IfStatement	if ( ( num_bitset [ len / sizeof ( zend_ulong ) ] & ( Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) ) ) ) )		2794076	0					
ANR	2794709	Condition	num_bitset [ len / sizeof ( zend_ulong ) ] & ( Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) ) )	3089:8:75810:75889	2794076	0	True				
ANR	2794710	BitAndExpression	num_bitset [ len / sizeof ( zend_ulong ) ] & ( Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) ) )		2794076	0		&			
ANR	2794711	ArrayIndexing	num_bitset [ len / sizeof ( zend_ulong ) ]		2794076	0					
ANR	2794712	Identifier	num_bitset		2794076	0					
ANR	2794713	MultiplicativeExpression	len / sizeof ( zend_ulong )		2794076	1		/			
ANR	2794714	Identifier	len		2794076	0					
ANR	2794715	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794716	Sizeof	sizeof		2794076	0					
ANR	2794717	SizeofOperand	zend_ulong		2794076	1					
ANR	2794718	ShiftExpression	Z_UL ( 1 ) << ( len % sizeof ( zend_ulong ) )		2794076	1		<<			
ANR	2794719	CallExpression	Z_UL ( 1 )		2794076	0					
ANR	2794720	Callee	Z_UL		2794076	0					
ANR	2794721	Identifier	Z_UL		2794076	0					
ANR	2794722	ArgumentList	1		2794076	1					
ANR	2794723	Argument	1		2794076	0					
ANR	2794724	PrimaryExpression	1		2794076	0					
ANR	2794725	MultiplicativeExpression	len % sizeof ( zend_ulong )		2794076	1		%			
ANR	2794726	Identifier	len		2794076	0					
ANR	2794727	SizeofExpression	sizeof ( zend_ulong )		2794076	1					
ANR	2794728	Sizeof	sizeof		2794076	0					
ANR	2794729	SizeofOperand	zend_ulong		2794076	1					
ANR	2794730	CompoundStatement		100:90:2921:2921	2794076	1					
ANR	2794731	ExpressionStatement	"entry = zend_hash_str_find ( pats , key , len )"	3090:5:75899:75941	2794076	0	True				
ANR	2794732	AssignmentExpression	"entry = zend_hash_str_find ( pats , key , len )"		2794076	0		=			
ANR	2794733	Identifier	entry		2794076	0					
ANR	2794734	CallExpression	"zend_hash_str_find ( pats , key , len )"		2794076	1					
ANR	2794735	Callee	zend_hash_str_find		2794076	0					
ANR	2794736	Identifier	zend_hash_str_find		2794076	0					
ANR	2794737	ArgumentList	pats		2794076	1					
ANR	2794738	Argument	pats		2794076	0					
ANR	2794739	Identifier	pats		2794076	0					
ANR	2794740	Argument	key		2794076	1					
ANR	2794741	Identifier	key		2794076	0					
ANR	2794742	Argument	len		2794076	2					
ANR	2794743	Identifier	len		2794076	0					
ANR	2794744	IfStatement	if ( entry != NULL )		2794076	1					
ANR	2794745	Condition	entry != NULL	3091:9:75952:75964	2794076	0	True				
ANR	2794746	EqualityExpression	entry != NULL		2794076	0		!=			
ANR	2794747	Identifier	entry		2794076	0					
ANR	2794748	Identifier	NULL		2794076	1					
ANR	2794749	CompoundStatement		103:6:3004:3043	2794076	1					
ANR	2794750	IdentifierDeclStatement	zend_string * s = zval_get_string ( entry ) ;	3092:6:75975:76014	2794076	0	True				
ANR	2794751	IdentifierDecl	* s = zval_get_string ( entry )		2794076	0					
ANR	2794752	IdentifierDeclType	zend_string *		2794076	0					
ANR	2794753	Identifier	s		2794076	1					
ANR	2794754	AssignmentExpression	* s = zval_get_string ( entry )		2794076	2		=			
ANR	2794755	Identifier	s		2794076	0					
ANR	2794756	CallExpression	zval_get_string ( entry )		2794076	1					
ANR	2794757	Callee	zval_get_string		2794076	0					
ANR	2794758	Identifier	zval_get_string		2794076	0					
ANR	2794759	ArgumentList	entry		2794076	1					
ANR	2794760	Argument	entry		2794076	0					
ANR	2794761	Identifier	entry		2794076	0					
ANR	2794762	ExpressionStatement	"smart_str_appendl ( & result , str + old_pos , pos - old_pos )"	3093:6:76022:76078	2794076	1	True				
ANR	2794763	CallExpression	"smart_str_appendl ( & result , str + old_pos , pos - old_pos )"		2794076	0					
ANR	2794764	Callee	smart_str_appendl		2794076	0					
ANR	2794765	Identifier	smart_str_appendl		2794076	0					
ANR	2794766	ArgumentList	& result		2794076	1					
ANR	2794767	Argument	& result		2794076	0					
ANR	2794768	UnaryOperationExpression	& result		2794076	0					
ANR	2794769	UnaryOperator	&		2794076	0					
ANR	2794770	Identifier	result		2794076	1					
ANR	2794771	Argument	str + old_pos		2794076	1					
ANR	2794772	AdditiveExpression	str + old_pos		2794076	0		+			
ANR	2794773	Identifier	str		2794076	0					
ANR	2794774	Identifier	old_pos		2794076	1					
ANR	2794775	Argument	pos - old_pos		2794076	2					
ANR	2794776	AdditiveExpression	pos - old_pos		2794076	0		-			
ANR	2794777	Identifier	pos		2794076	0					
ANR	2794778	Identifier	old_pos		2794076	1					
ANR	2794779	ExpressionStatement	"smart_str_append ( & result , s )"	3094:6:76086:76114	2794076	2	True				
ANR	2794780	CallExpression	"smart_str_append ( & result , s )"		2794076	0					
ANR	2794781	Callee	smart_str_append		2794076	0					
ANR	2794782	Identifier	smart_str_append		2794076	0					
ANR	2794783	ArgumentList	& result		2794076	1					
ANR	2794784	Argument	& result		2794076	0					
ANR	2794785	UnaryOperationExpression	& result		2794076	0					
ANR	2794786	UnaryOperator	&		2794076	0					
ANR	2794787	Identifier	result		2794076	1					
ANR	2794788	Argument	s		2794076	1					
ANR	2794789	Identifier	s		2794076	0					
ANR	2794790	ExpressionStatement	old_pos = pos + len	3095:6:76122:76141	2794076	3	True				
ANR	2794791	AssignmentExpression	old_pos = pos + len		2794076	0		=			
ANR	2794792	Identifier	old_pos		2794076	0					
ANR	2794793	AdditiveExpression	pos + len		2794076	1		+			
ANR	2794794	Identifier	pos		2794076	0					
ANR	2794795	Identifier	len		2794076	1					
ANR	2794796	ExpressionStatement	pos = old_pos - 1	3096:6:76149:76166	2794076	4	True				
ANR	2794797	AssignmentExpression	pos = old_pos - 1		2794076	0		=			
ANR	2794798	Identifier	pos		2794076	0					
ANR	2794799	AdditiveExpression	old_pos - 1		2794076	1		-			
ANR	2794800	Identifier	old_pos		2794076	0					
ANR	2794801	PrimaryExpression	1		2794076	1					
ANR	2794802	ExpressionStatement	zend_string_release ( s )	3097:6:76174:76196	2794076	5	True				
ANR	2794803	CallExpression	zend_string_release ( s )		2794076	0					
ANR	2794804	Callee	zend_string_release		2794076	0					
ANR	2794805	Identifier	zend_string_release		2794076	0					
ANR	2794806	ArgumentList	s		2794076	1					
ANR	2794807	Argument	s		2794076	0					
ANR	2794808	Identifier	s		2794076	0					
ANR	2794809	BreakStatement	break ;	3098:6:76204:76209	2794076	6	True				
ANR	2794810	ExpressionStatement	len --	3101:4:76228:76233	2794076	1	True				
ANR	2794811	PostIncDecOperationExpression	len --		2794076	0					
ANR	2794812	Identifier	len		2794076	0					
ANR	2794813	IncDec	--		2794076	1					
ANR	2794814	ExpressionStatement	pos ++	3104:2:76246:76251	2794076	2	True				
ANR	2794815	PostIncDecOperationExpression	pos ++		2794076	0					
ANR	2794816	Identifier	pos		2794076	0					
ANR	2794817	IncDec	++		2794076	1					
ANR	2794818	IfStatement	if ( result . s )		2794076	28					
ANR	2794819	Condition	result . s	3107:5:76262:76269	2794076	0	True				
ANR	2794820	MemberAccess	result . s		2794076	0					
ANR	2794821	Identifier	result		2794076	0					
ANR	2794822	Identifier	s		2794076	1					
ANR	2794823	CompoundStatement		118:15:3301:3301	2794076	1					
ANR	2794824	ExpressionStatement	"smart_str_appendl ( & result , str + old_pos , slen - old_pos )"	3108:2:76276:76333	2794076	0	True				
ANR	2794825	CallExpression	"smart_str_appendl ( & result , str + old_pos , slen - old_pos )"		2794076	0					
ANR	2794826	Callee	smart_str_appendl		2794076	0					
ANR	2794827	Identifier	smart_str_appendl		2794076	0					
ANR	2794828	ArgumentList	& result		2794076	1					
ANR	2794829	Argument	& result		2794076	0					
ANR	2794830	UnaryOperationExpression	& result		2794076	0					
ANR	2794831	UnaryOperator	&		2794076	0					
ANR	2794832	Identifier	result		2794076	1					
ANR	2794833	Argument	str + old_pos		2794076	1					
ANR	2794834	AdditiveExpression	str + old_pos		2794076	0		+			
ANR	2794835	Identifier	str		2794076	0					
ANR	2794836	Identifier	old_pos		2794076	1					
ANR	2794837	Argument	slen - old_pos		2794076	2					
ANR	2794838	AdditiveExpression	slen - old_pos		2794076	0		-			
ANR	2794839	Identifier	slen		2794076	0					
ANR	2794840	Identifier	old_pos		2794076	1					
ANR	2794841	ExpressionStatement	smart_str_0 ( & result )	3109:2:76337:76357	2794076	1	True				
ANR	2794842	CallExpression	smart_str_0 ( & result )		2794076	0					
ANR	2794843	Callee	smart_str_0		2794076	0					
ANR	2794844	Identifier	smart_str_0		2794076	0					
ANR	2794845	ArgumentList	& result		2794076	1					
ANR	2794846	Argument	& result		2794076	0					
ANR	2794847	UnaryOperationExpression	& result		2794076	0					
ANR	2794848	UnaryOperator	&		2794076	0					
ANR	2794849	Identifier	result		2794076	1					
ANR	2794850	ExpressionStatement	RETVAL_NEW_STR ( result . s )	3110:2:76361:76385	2794076	2	True				
ANR	2794851	CallExpression	RETVAL_NEW_STR ( result . s )		2794076	0					
ANR	2794852	Callee	RETVAL_NEW_STR		2794076	0					
ANR	2794853	Identifier	RETVAL_NEW_STR		2794076	0					
ANR	2794854	ArgumentList	result . s		2794076	1					
ANR	2794855	Argument	result . s		2794076	0					
ANR	2794856	MemberAccess	result . s		2794076	0					
ANR	2794857	Identifier	result		2794076	0					
ANR	2794858	Identifier	s		2794076	1					
ANR	2794859	ElseStatement	else		2794076	0					
ANR	2794860	CompoundStatement		122:8:3424:3424	2794076	0					
ANR	2794861	ExpressionStatement	smart_str_free ( & result )	3112:2:76399:76422	2794076	0	True				
ANR	2794862	CallExpression	smart_str_free ( & result )		2794076	0					
ANR	2794863	Callee	smart_str_free		2794076	0					
ANR	2794864	Identifier	smart_str_free		2794076	0					
ANR	2794865	ArgumentList	& result		2794076	1					
ANR	2794866	Argument	& result		2794076	0					
ANR	2794867	UnaryOperationExpression	& result		2794076	0					
ANR	2794868	UnaryOperator	&		2794076	0					
ANR	2794869	Identifier	result		2794076	1					
ANR	2794870	ExpressionStatement	RETVAL_STR_COPY ( input )	3113:2:76426:76448	2794076	1	True				
ANR	2794871	CallExpression	RETVAL_STR_COPY ( input )		2794076	0					
ANR	2794872	Callee	RETVAL_STR_COPY		2794076	0					
ANR	2794873	Identifier	RETVAL_STR_COPY		2794076	0					
ANR	2794874	ArgumentList	input		2794076	1					
ANR	2794875	Argument	input		2794076	0					
ANR	2794876	Identifier	input		2794076	0					
ANR	2794877	IfStatement	if ( pats == & str_hash )		2794076	29					
ANR	2794878	Condition	pats == & str_hash	3116:5:76459:76475	2794076	0	True				
ANR	2794879	EqualityExpression	pats == & str_hash		2794076	0		==			
ANR	2794880	Identifier	pats		2794076	0					
ANR	2794881	UnaryOperationExpression	& str_hash		2794076	1					
ANR	2794882	UnaryOperator	&		2794076	0					
ANR	2794883	Identifier	str_hash		2794076	1					
ANR	2794884	CompoundStatement		127:24:3507:3507	2794076	1					
ANR	2794885	ExpressionStatement	zend_hash_destroy ( & str_hash )	3117:2:76482:76510	2794076	0	True				
ANR	2794886	CallExpression	zend_hash_destroy ( & str_hash )		2794076	0					
ANR	2794887	Callee	zend_hash_destroy		2794076	0					
ANR	2794888	Identifier	zend_hash_destroy		2794076	0					
ANR	2794889	ArgumentList	& str_hash		2794076	1					
ANR	2794890	Argument	& str_hash		2794076	0					
ANR	2794891	UnaryOperationExpression	& str_hash		2794076	0					
ANR	2794892	UnaryOperator	&		2794076	0					
ANR	2794893	Identifier	str_hash		2794076	1					
ANR	2794894	ExpressionStatement	efree ( num_bitset )	3119:1:76516:76533	2794076	30	True				
ANR	2794895	CallExpression	efree ( num_bitset )		2794076	0					
ANR	2794896	Callee	efree		2794076	0					
ANR	2794897	Identifier	efree		2794076	0					
ANR	2794898	ArgumentList	num_bitset		2794076	1					
ANR	2794899	Argument	num_bitset		2794076	0					
ANR	2794900	Identifier	num_bitset		2794076	0					
ANR	2794901	ReturnType	static void		2794076	1					
ANR	2794902	Identifier	php_strtr_array		2794076	2					
ANR	2794903	ParameterList	"zval * return_value , zend_string * input , HashTable * pats"		2794076	3					
ANR	2794904	Parameter	zval * return_value	2989:28:72913:72930	2794076	0	True				
ANR	2794905	ParameterType	zval *		2794076	0					
ANR	2794906	Identifier	return_value		2794076	1					
ANR	2794907	Parameter	zend_string * input	2989:48:72933:72950	2794076	1	True				
ANR	2794908	ParameterType	zend_string *		2794076	0					
ANR	2794909	Identifier	input		2794076	1					
ANR	2794910	Parameter	HashTable * pats	2989:68:72953:72967	2794076	2	True				
ANR	2794911	ParameterType	HashTable *		2794076	0					
ANR	2794912	Identifier	pats		2794076	1					
ANR	2794913	CFGEntryNode	ENTRY		2794076		True				
ANR	2794914	CFGExitNode	EXIT		2794076		True				
ANR	2794915	CFGErrorNode	ERROR		2794076		True				
ANR	2794916	Symbol	return_value		2794076						
ANR	2794917	Symbol	key_used		2794076						
ANR	2794918	Symbol	str_key		2794076						
ANR	2794919	Symbol	pats		2794076						
ANR	2794920	Symbol	zend_long_to_str		2794076						
ANR	2794921	Symbol	* key		2794076						
ANR	2794922	Symbol	bitset		2794076						
ANR	2794923	Symbol	* * ZSTR_VAL		2794076						
ANR	2794924	Symbol	result		2794076						
ANR	2794925	Symbol	num_bitset		2794076						
ANR	2794926	Symbol	UNEXPECTED		2794076						
ANR	2794927	Symbol	zend_hash_str_find		2794076						
ANR	2794928	Symbol	len		2794076						
ANR	2794929	Symbol	pos		2794076						
ANR	2794930	Symbol	& result		2794076						
ANR	2794931	Symbol	ecalloc		2794076						
ANR	2794932	Symbol	* bitset		2794076						
ANR	2794933	Symbol	* num_bitset		2794076						
ANR	2794934	Symbol	key		2794076						
ANR	2794935	Symbol	* ZSTR_VAL		2794076						
ANR	2794936	Symbol	NULL		2794076						
ANR	2794937	Symbol	zend_hash_num_elements		2794076						
ANR	2794938	Symbol	num_key		2794076						
ANR	2794939	Symbol	zval_get_string		2794076						
ANR	2794940	Symbol	num_keys		2794076						
ANR	2794941	Symbol	ZSTR_VAL		2794076						
ANR	2794942	Symbol	result . s		2794076						
ANR	2794943	Symbol	str		2794076						
ANR	2794944	Symbol	input		2794076						
ANR	2794945	Symbol	old_pos		2794076						
ANR	2794946	Symbol	str_hash		2794076						
ANR	2794947	Symbol	entry		2794076						
ANR	2794948	Symbol	* * key		2794076						
ANR	2794949	Symbol	s		2794076						
ANR	2794950	Symbol	& str_hash		2794076						
ANR	2794951	Symbol	Z_UL		2794076						
ANR	2794952	Symbol	slen		2794076						
ANR	2794953	Symbol	ZSTR_LEN		2794076						
ANR	2794954	Symbol	minlen		2794076						
ANR	2794955	Symbol	maxlen		2794076						
ANR	2794956	Symbol	* len		2794076						
ANR	2794957	Function	php_char_to_str_ex	3125:0:76578:78134							
ANR	2794958	FunctionDef	"php_char_to_str_ex (zend_string * str , char from , char * to , size_t to_len , int case_sensitivity , zend_long * replace_count)"		2794957	0					
ANR	2794959	CompoundStatement		3126:0:76719:78134	2794957	0					
ANR	2794960	IdentifierDeclStatement	zend_string * result ;	3127:1:76722:76741	2794957	0	True				
ANR	2794961	IdentifierDecl	* result		2794957	0					
ANR	2794962	IdentifierDeclType	zend_string *		2794957	0					
ANR	2794963	Identifier	result		2794957	1					
ANR	2794964	IdentifierDeclStatement	size_t char_count = 0 ;	3128:1:76744:76765	2794957	1	True				
ANR	2794965	IdentifierDecl	char_count = 0		2794957	0					
ANR	2794966	IdentifierDeclType	size_t		2794957	0					
ANR	2794967	Identifier	char_count		2794957	1					
ANR	2794968	AssignmentExpression	char_count = 0		2794957	2		=			
ANR	2794969	Identifier	char_count		2794957	0					
ANR	2794970	PrimaryExpression	0		2794957	1					
ANR	2794971	IdentifierDeclStatement	char lc_from = 0 ;	3129:1:76768:76784	2794957	2	True				
ANR	2794972	IdentifierDecl	lc_from = 0		2794957	0					
ANR	2794973	IdentifierDeclType	char		2794957	0					
ANR	2794974	Identifier	lc_from		2794957	1					
ANR	2794975	AssignmentExpression	lc_from = 0		2794957	2		=			
ANR	2794976	Identifier	lc_from		2794957	0					
ANR	2794977	PrimaryExpression	0		2794957	1					
ANR	2794978	IdentifierDeclStatement	"char * source , * target , * source_end = ZSTR_VAL ( str ) + ZSTR_LEN ( str ) ;"	3130:1:76787:76852	2794957	3	True				
ANR	2794979	IdentifierDecl	* source		2794957	0					
ANR	2794980	IdentifierDeclType	char *		2794957	0					
ANR	2794981	Identifier	source		2794957	1					
ANR	2794982	IdentifierDecl	* target		2794957	1					
ANR	2794983	IdentifierDeclType	char *		2794957	0					
ANR	2794984	Identifier	target		2794957	1					
ANR	2794985	IdentifierDecl	* source_end = ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2794957	2					
ANR	2794986	IdentifierDeclType	char *		2794957	0					
ANR	2794987	Identifier	source_end		2794957	1					
ANR	2794988	AssignmentExpression	* source_end = ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2794957	2		=			
ANR	2794989	Identifier	source_end		2794957	0					
ANR	2794990	AdditiveExpression	ZSTR_VAL ( str ) + ZSTR_LEN ( str )		2794957	1		+			
ANR	2794991	CallExpression	ZSTR_VAL ( str )		2794957	0					
ANR	2794992	Callee	ZSTR_VAL		2794957	0					
ANR	2794993	Identifier	ZSTR_VAL		2794957	0					
ANR	2794994	ArgumentList	str		2794957	1					
ANR	2794995	Argument	str		2794957	0					
ANR	2794996	Identifier	str		2794957	0					
ANR	2794997	CallExpression	ZSTR_LEN ( str )		2794957	1					
ANR	2794998	Callee	ZSTR_LEN		2794957	0					
ANR	2794999	Identifier	ZSTR_LEN		2794957	0					
ANR	2795000	ArgumentList	str		2794957	1					
ANR	2795001	Argument	str		2794957	0					
ANR	2795002	Identifier	str		2794957	0					
ANR	2795003	IfStatement	if ( case_sensitivity )		2794957	4					
ANR	2795004	Condition	case_sensitivity	3132:5:76860:76875	2794957	0	True				
ANR	2795005	Identifier	case_sensitivity		2794957	0					
ANR	2795006	CompoundStatement		8:2:162:209	2794957	1					
ANR	2795007	IdentifierDeclStatement	"char * p = ZSTR_VAL ( str ) , * e = p + ZSTR_LEN ( str ) ;"	3133:2:76882:76929	2794957	0	True				
ANR	2795008	IdentifierDecl	* p = ZSTR_VAL ( str )		2794957	0					
ANR	2795009	IdentifierDeclType	char *		2794957	0					
ANR	2795010	Identifier	p		2794957	1					
ANR	2795011	AssignmentExpression	* p = ZSTR_VAL ( str )		2794957	2		=			
ANR	2795012	Identifier	p		2794957	0					
ANR	2795013	CallExpression	ZSTR_VAL ( str )		2794957	1					
ANR	2795014	Callee	ZSTR_VAL		2794957	0					
ANR	2795015	Identifier	ZSTR_VAL		2794957	0					
ANR	2795016	ArgumentList	str		2794957	1					
ANR	2795017	Argument	str		2794957	0					
ANR	2795018	Identifier	str		2794957	0					
ANR	2795019	IdentifierDecl	* e = p + ZSTR_LEN ( str )		2794957	1					
ANR	2795020	IdentifierDeclType	char *		2794957	0					
ANR	2795021	Identifier	e		2794957	1					
ANR	2795022	AssignmentExpression	* e = p + ZSTR_LEN ( str )		2794957	2		=			
ANR	2795023	Identifier	e		2794957	0					
ANR	2795024	AdditiveExpression	p + ZSTR_LEN ( str )		2794957	1		+			
ANR	2795025	Identifier	p		2794957	0					
ANR	2795026	CallExpression	ZSTR_LEN ( str )		2794957	1					
ANR	2795027	Callee	ZSTR_LEN		2794957	0					
ANR	2795028	Identifier	ZSTR_LEN		2794957	0					
ANR	2795029	ArgumentList	str		2794957	1					
ANR	2795030	Argument	str		2794957	0					
ANR	2795031	Identifier	str		2794957	0					
ANR	2795032	WhileStatement	"while ( ( p = memchr ( p , from , ( e - p ) ) ) )"		2794957	1					
ANR	2795033	Condition	"p = memchr ( p , from , ( e - p ) )"	3134:9:76940:76969	2794957	0	True				
ANR	2795034	AssignmentExpression	"p = memchr ( p , from , ( e - p ) )"		2794957	0		=			
ANR	2795035	Identifier	p		2794957	0					
ANR	2795036	CallExpression	"memchr ( p , from , ( e - p ) )"		2794957	1					
ANR	2795037	Callee	memchr		2794957	0					
ANR	2795038	Identifier	memchr		2794957	0					
ANR	2795039	ArgumentList	p		2794957	1					
ANR	2795040	Argument	p		2794957	0					
ANR	2795041	Identifier	p		2794957	0					
ANR	2795042	Argument	from		2794957	1					
ANR	2795043	Identifier	from		2794957	0					
ANR	2795044	Argument	e - p		2794957	2					
ANR	2795045	AdditiveExpression	e - p		2794957	0		-			
ANR	2795046	Identifier	e		2794957	0					
ANR	2795047	Identifier	p		2794957	1					
ANR	2795048	CompoundStatement		9:41:252:252	2794957	1					
ANR	2795049	ExpressionStatement	char_count ++	3135:3:76977:76989	2794957	0	True				
ANR	2795050	PostIncDecOperationExpression	char_count ++		2794957	0					
ANR	2795051	Identifier	char_count		2794957	0					
ANR	2795052	IncDec	++		2794957	1					
ANR	2795053	ExpressionStatement	p ++	3136:3:76994:76997	2794957	1	True				
ANR	2795054	PostIncDecOperationExpression	p ++		2794957	0					
ANR	2795055	Identifier	p		2794957	0					
ANR	2795056	IncDec	++		2794957	1					
ANR	2795057	ElseStatement	else		2794957	0					
ANR	2795058	CompoundStatement		13:8:291:291	2794957	0					
ANR	2795059	ExpressionStatement	lc_from = tolower ( from )	3139:2:77015:77038	2794957	0	True				
ANR	2795060	AssignmentExpression	lc_from = tolower ( from )		2794957	0		=			
ANR	2795061	Identifier	lc_from		2794957	0					
ANR	2795062	CallExpression	tolower ( from )		2794957	1					
ANR	2795063	Callee	tolower		2794957	0					
ANR	2795064	Identifier	tolower		2794957	0					
ANR	2795065	ArgumentList	from		2794957	1					
ANR	2795066	Argument	from		2794957	0					
ANR	2795067	Identifier	from		2794957	0					
ANR	2795068	ForStatement	for ( source = ZSTR_VAL ( str ) ; source < source_end ; source ++ )		2794957	1					
ANR	2795069	ForInit	source = ZSTR_VAL ( str ) ;	3140:7:77047:77069	2794957	0	True				
ANR	2795070	AssignmentExpression	source = ZSTR_VAL ( str )		2794957	0		=			
ANR	2795071	Identifier	source		2794957	0					
ANR	2795072	CallExpression	ZSTR_VAL ( str )		2794957	1					
ANR	2795073	Callee	ZSTR_VAL		2794957	0					
ANR	2795074	Identifier	ZSTR_VAL		2794957	0					
ANR	2795075	ArgumentList	str		2794957	1					
ANR	2795076	Argument	str		2794957	0					
ANR	2795077	Identifier	str		2794957	0					
ANR	2795078	Condition	source < source_end	3140:31:77071:77089	2794957	1	True				
ANR	2795079	RelationalExpression	source < source_end		2794957	0		<			
ANR	2795080	Identifier	source		2794957	0					
ANR	2795081	Identifier	source_end		2794957	1					
ANR	2795082	PostIncDecOperationExpression	source ++	3140:52:77092:77099	2794957	2	True				
ANR	2795083	Identifier	source		2794957	0					
ANR	2795084	IncDec	++		2794957	1					
ANR	2795085	CompoundStatement		15:62:382:382	2794957	3					
ANR	2795086	IfStatement	if ( tolower ( * source ) == lc_from )		2794957	0					
ANR	2795087	Condition	tolower ( * source ) == lc_from	3141:7:77111:77137	2794957	0	True				
ANR	2795088	EqualityExpression	tolower ( * source ) == lc_from		2794957	0		==			
ANR	2795089	CallExpression	tolower ( * source )		2794957	0					
ANR	2795090	Callee	tolower		2794957	0					
ANR	2795091	Identifier	tolower		2794957	0					
ANR	2795092	ArgumentList	* source		2794957	1					
ANR	2795093	Argument	* source		2794957	0					
ANR	2795094	UnaryOperationExpression	* source		2794957	0					
ANR	2795095	UnaryOperator	*		2794957	0					
ANR	2795096	Identifier	source		2794957	1					
ANR	2795097	Identifier	lc_from		2794957	1					
ANR	2795098	CompoundStatement		16:36:420:420	2794957	1					
ANR	2795099	ExpressionStatement	char_count ++	3142:4:77146:77158	2794957	0	True				
ANR	2795100	PostIncDecOperationExpression	char_count ++		2794957	0					
ANR	2795101	Identifier	char_count		2794957	0					
ANR	2795102	IncDec	++		2794957	1					
ANR	2795103	IfStatement	if ( char_count == 0 )		2794957	5					
ANR	2795104	Condition	char_count == 0	3147:5:77178:77192	2794957	0	True				
ANR	2795105	EqualityExpression	char_count == 0		2794957	0		==			
ANR	2795106	Identifier	char_count		2794957	0					
ANR	2795107	PrimaryExpression	0		2794957	1					
ANR	2795108	CompoundStatement		22:22:475:475	2794957	1					
ANR	2795109	ReturnStatement	return zend_string_copy ( str ) ;	3148:2:77199:77227	2794957	0	True				
ANR	2795110	CallExpression	zend_string_copy ( str )		2794957	0					
ANR	2795111	Callee	zend_string_copy		2794957	0					
ANR	2795112	Identifier	zend_string_copy		2794957	0					
ANR	2795113	ArgumentList	str		2794957	1					
ANR	2795114	Argument	str		2794957	0					
ANR	2795115	Identifier	str		2794957	0					
ANR	2795116	IfStatement	if ( to_len > 0 )		2794957	6					
ANR	2795117	Condition	to_len > 0	3151:5:77238:77247	2794957	0	True				
ANR	2795118	RelationalExpression	to_len > 0		2794957	0		>			
ANR	2795119	Identifier	to_len		2794957	0					
ANR	2795120	PrimaryExpression	0		2794957	1					
ANR	2795121	CompoundStatement		26:17:530:530	2794957	1					
ANR	2795122	ExpressionStatement	"result = zend_string_safe_alloc ( char_count , to_len - 1 , ZSTR_LEN ( str ) , 0 )"	3152:2:77254:77327	2794957	0	True				
ANR	2795123	AssignmentExpression	"result = zend_string_safe_alloc ( char_count , to_len - 1 , ZSTR_LEN ( str ) , 0 )"		2794957	0		=			
ANR	2795124	Identifier	result		2794957	0					
ANR	2795125	CallExpression	"zend_string_safe_alloc ( char_count , to_len - 1 , ZSTR_LEN ( str ) , 0 )"		2794957	1					
ANR	2795126	Callee	zend_string_safe_alloc		2794957	0					
ANR	2795127	Identifier	zend_string_safe_alloc		2794957	0					
ANR	2795128	ArgumentList	char_count		2794957	1					
ANR	2795129	Argument	char_count		2794957	0					
ANR	2795130	Identifier	char_count		2794957	0					
ANR	2795131	Argument	to_len - 1		2794957	1					
ANR	2795132	AdditiveExpression	to_len - 1		2794957	0		-			
ANR	2795133	Identifier	to_len		2794957	0					
ANR	2795134	PrimaryExpression	1		2794957	1					
ANR	2795135	Argument	ZSTR_LEN ( str )		2794957	2					
ANR	2795136	CallExpression	ZSTR_LEN ( str )		2794957	0					
ANR	2795137	Callee	ZSTR_LEN		2794957	0					
ANR	2795138	Identifier	ZSTR_LEN		2794957	0					
ANR	2795139	ArgumentList	str		2794957	1					
ANR	2795140	Argument	str		2794957	0					
ANR	2795141	Identifier	str		2794957	0					
ANR	2795142	Argument	0		2794957	3					
ANR	2795143	PrimaryExpression	0		2794957	0					
ANR	2795144	ElseStatement	else		2794957	0					
ANR	2795145	CompoundStatement		28:8:617:617	2794957	0					
ANR	2795146	ExpressionStatement	"result = zend_string_alloc ( ZSTR_LEN ( str ) - char_count , 0 )"	3154:2:77341:77398	2794957	0	True				
ANR	2795147	AssignmentExpression	"result = zend_string_alloc ( ZSTR_LEN ( str ) - char_count , 0 )"		2794957	0		=			
ANR	2795148	Identifier	result		2794957	0					
ANR	2795149	CallExpression	"zend_string_alloc ( ZSTR_LEN ( str ) - char_count , 0 )"		2794957	1					
ANR	2795150	Callee	zend_string_alloc		2794957	0					
ANR	2795151	Identifier	zend_string_alloc		2794957	0					
ANR	2795152	ArgumentList	ZSTR_LEN ( str ) - char_count		2794957	1					
ANR	2795153	Argument	ZSTR_LEN ( str ) - char_count		2794957	0					
ANR	2795154	AdditiveExpression	ZSTR_LEN ( str ) - char_count		2794957	0		-			
ANR	2795155	CallExpression	ZSTR_LEN ( str )		2794957	0					
ANR	2795156	Callee	ZSTR_LEN		2794957	0					
ANR	2795157	Identifier	ZSTR_LEN		2794957	0					
ANR	2795158	ArgumentList	str		2794957	1					
ANR	2795159	Argument	str		2794957	0					
ANR	2795160	Identifier	str		2794957	0					
ANR	2795161	Identifier	char_count		2794957	1					
ANR	2795162	Argument	0		2794957	1					
ANR	2795163	PrimaryExpression	0		2794957	0					
ANR	2795164	ExpressionStatement	target = ZSTR_VAL ( result )	3156:1:77404:77429	2794957	7	True				
ANR	2795165	AssignmentExpression	target = ZSTR_VAL ( result )		2794957	0		=			
ANR	2795166	Identifier	target		2794957	0					
ANR	2795167	CallExpression	ZSTR_VAL ( result )		2794957	1					
ANR	2795168	Callee	ZSTR_VAL		2794957	0					
ANR	2795169	Identifier	ZSTR_VAL		2794957	0					
ANR	2795170	ArgumentList	result		2794957	1					
ANR	2795171	Argument	result		2794957	0					
ANR	2795172	Identifier	result		2794957	0					
ANR	2795173	IfStatement	if ( case_sensitivity )		2794957	8					
ANR	2795174	Condition	case_sensitivity	3158:5:77437:77452	2794957	0	True				
ANR	2795175	Identifier	case_sensitivity		2794957	0					
ANR	2795176	CompoundStatement		34:2:739:806	2794957	1					
ANR	2795177	IdentifierDeclStatement	"char * p = ZSTR_VAL ( str ) , * e = p + ZSTR_LEN ( str ) , * s = ZSTR_VAL ( str ) ;"	3159:2:77459:77526	2794957	0	True				
ANR	2795178	IdentifierDecl	* p = ZSTR_VAL ( str )		2794957	0					
ANR	2795179	IdentifierDeclType	char *		2794957	0					
ANR	2795180	Identifier	p		2794957	1					
ANR	2795181	AssignmentExpression	* p = ZSTR_VAL ( str )		2794957	2		=			
ANR	2795182	Identifier	p		2794957	0					
ANR	2795183	CallExpression	ZSTR_VAL ( str )		2794957	1					
ANR	2795184	Callee	ZSTR_VAL		2794957	0					
ANR	2795185	Identifier	ZSTR_VAL		2794957	0					
ANR	2795186	ArgumentList	str		2794957	1					
ANR	2795187	Argument	str		2794957	0					
ANR	2795188	Identifier	str		2794957	0					
ANR	2795189	IdentifierDecl	* e = p + ZSTR_LEN ( str )		2794957	1					
ANR	2795190	IdentifierDeclType	char *		2794957	0					
ANR	2795191	Identifier	e		2794957	1					
ANR	2795192	AssignmentExpression	* e = p + ZSTR_LEN ( str )		2794957	2		=			
ANR	2795193	Identifier	e		2794957	0					
ANR	2795194	AdditiveExpression	p + ZSTR_LEN ( str )		2794957	1		+			
ANR	2795195	Identifier	p		2794957	0					
ANR	2795196	CallExpression	ZSTR_LEN ( str )		2794957	1					
ANR	2795197	Callee	ZSTR_LEN		2794957	0					
ANR	2795198	Identifier	ZSTR_LEN		2794957	0					
ANR	2795199	ArgumentList	str		2794957	1					
ANR	2795200	Argument	str		2794957	0					
ANR	2795201	Identifier	str		2794957	0					
ANR	2795202	IdentifierDecl	* s = ZSTR_VAL ( str )		2794957	2					
ANR	2795203	IdentifierDeclType	char *		2794957	0					
ANR	2795204	Identifier	s		2794957	1					
ANR	2795205	AssignmentExpression	* s = ZSTR_VAL ( str )		2794957	2		=			
ANR	2795206	Identifier	s		2794957	0					
ANR	2795207	CallExpression	ZSTR_VAL ( str )		2794957	1					
ANR	2795208	Callee	ZSTR_VAL		2794957	0					
ANR	2795209	Identifier	ZSTR_VAL		2794957	0					
ANR	2795210	ArgumentList	str		2794957	1					
ANR	2795211	Argument	str		2794957	0					
ANR	2795212	Identifier	str		2794957	0					
ANR	2795213	WhileStatement	"while ( ( p = memchr ( p , from , ( e - p ) ) ) )"		2794957	1					
ANR	2795214	Condition	"p = memchr ( p , from , ( e - p ) )"	3160:9:77537:77566	2794957	0	True				
ANR	2795215	AssignmentExpression	"p = memchr ( p , from , ( e - p ) )"		2794957	0		=			
ANR	2795216	Identifier	p		2794957	0					
ANR	2795217	CallExpression	"memchr ( p , from , ( e - p ) )"		2794957	1					
ANR	2795218	Callee	memchr		2794957	0					
ANR	2795219	Identifier	memchr		2794957	0					
ANR	2795220	ArgumentList	p		2794957	1					
ANR	2795221	Argument	p		2794957	0					
ANR	2795222	Identifier	p		2794957	0					
ANR	2795223	Argument	from		2794957	1					
ANR	2795224	Identifier	from		2794957	0					
ANR	2795225	Argument	e - p		2794957	2					
ANR	2795226	AdditiveExpression	e - p		2794957	0		-			
ANR	2795227	Identifier	e		2794957	0					
ANR	2795228	Identifier	p		2794957	1					
ANR	2795229	CompoundStatement		35:41:849:849	2794957	1					
ANR	2795230	ExpressionStatement	"memcpy ( target , s , ( p - s ) )"	3161:3:77574:77600	2794957	0	True				
ANR	2795231	CallExpression	"memcpy ( target , s , ( p - s ) )"		2794957	0					
ANR	2795232	Callee	memcpy		2794957	0					
ANR	2795233	Identifier	memcpy		2794957	0					
ANR	2795234	ArgumentList	target		2794957	1					
ANR	2795235	Argument	target		2794957	0					
ANR	2795236	Identifier	target		2794957	0					
ANR	2795237	Argument	s		2794957	1					
ANR	2795238	Identifier	s		2794957	0					
ANR	2795239	Argument	p - s		2794957	2					
ANR	2795240	AdditiveExpression	p - s		2794957	0		-			
ANR	2795241	Identifier	p		2794957	0					
ANR	2795242	Identifier	s		2794957	1					
ANR	2795243	ExpressionStatement	target += p - s	3162:3:77605:77620	2794957	1	True				
ANR	2795244	AssignmentExpression	target += p - s		2794957	0		+=			
ANR	2795245	Identifier	target		2794957	0					
ANR	2795246	AdditiveExpression	p - s		2794957	1		-			
ANR	2795247	Identifier	p		2794957	0					
ANR	2795248	Identifier	s		2794957	1					
ANR	2795249	ExpressionStatement	"memcpy ( target , to , to_len )"	3163:3:77625:77651	2794957	2	True				
ANR	2795250	CallExpression	"memcpy ( target , to , to_len )"		2794957	0					
ANR	2795251	Callee	memcpy		2794957	0					
ANR	2795252	Identifier	memcpy		2794957	0					
ANR	2795253	ArgumentList	target		2794957	1					
ANR	2795254	Argument	target		2794957	0					
ANR	2795255	Identifier	target		2794957	0					
ANR	2795256	Argument	to		2794957	1					
ANR	2795257	Identifier	to		2794957	0					
ANR	2795258	Argument	to_len		2794957	2					
ANR	2795259	Identifier	to_len		2794957	0					
ANR	2795260	ExpressionStatement	target += to_len	3164:3:77656:77672	2794957	3	True				
ANR	2795261	AssignmentExpression	target += to_len		2794957	0		+=			
ANR	2795262	Identifier	target		2794957	0					
ANR	2795263	Identifier	to_len		2794957	1					
ANR	2795264	ExpressionStatement	p ++	3165:3:77677:77680	2794957	4	True				
ANR	2795265	PostIncDecOperationExpression	p ++		2794957	0					
ANR	2795266	Identifier	p		2794957	0					
ANR	2795267	IncDec	++		2794957	1					
ANR	2795268	ExpressionStatement	s = p	3166:3:77685:77690	2794957	5	True				
ANR	2795269	AssignmentExpression	s = p		2794957	0		=			
ANR	2795270	Identifier	s		2794957	0					
ANR	2795271	Identifier	p		2794957	1					
ANR	2795272	IfStatement	if ( replace_count )		2794957	6					
ANR	2795273	Condition	replace_count	3167:7:77699:77711	2794957	0	True				
ANR	2795274	Identifier	replace_count		2794957	0					
ANR	2795275	CompoundStatement		42:22:994:994	2794957	1					
ANR	2795276	ExpressionStatement	* replace_count += 1	3168:4:77720:77739	2794957	0	True				
ANR	2795277	AssignmentExpression	* replace_count += 1		2794957	0		+=			
ANR	2795278	UnaryOperationExpression	* replace_count		2794957	0					
ANR	2795279	UnaryOperator	*		2794957	0					
ANR	2795280	Identifier	replace_count		2794957	1					
ANR	2795281	PrimaryExpression	1		2794957	1					
ANR	2795282	IfStatement	if ( s < e )		2794957	2					
ANR	2795283	Condition	s < e	3171:6:77756:77760	2794957	0	True				
ANR	2795284	RelationalExpression	s < e		2794957	0		<			
ANR	2795285	Identifier	s		2794957	0					
ANR	2795286	Identifier	e		2794957	1					
ANR	2795287	CompoundStatement		46:13:1043:1043	2794957	1					
ANR	2795288	ExpressionStatement	"memcpy ( target , s , ( e - s ) )"	3172:3:77768:77794	2794957	0	True				
ANR	2795289	CallExpression	"memcpy ( target , s , ( e - s ) )"		2794957	0					
ANR	2795290	Callee	memcpy		2794957	0					
ANR	2795291	Identifier	memcpy		2794957	0					
ANR	2795292	ArgumentList	target		2794957	1					
ANR	2795293	Argument	target		2794957	0					
ANR	2795294	Identifier	target		2794957	0					
ANR	2795295	Argument	s		2794957	1					
ANR	2795296	Identifier	s		2794957	0					
ANR	2795297	Argument	e - s		2794957	2					
ANR	2795298	AdditiveExpression	e - s		2794957	0		-			
ANR	2795299	Identifier	e		2794957	0					
ANR	2795300	Identifier	s		2794957	1					
ANR	2795301	ExpressionStatement	target += e - s	3173:3:77799:77814	2794957	1	True				
ANR	2795302	AssignmentExpression	target += e - s		2794957	0		+=			
ANR	2795303	Identifier	target		2794957	0					
ANR	2795304	AdditiveExpression	e - s		2794957	1		-			
ANR	2795305	Identifier	e		2794957	0					
ANR	2795306	Identifier	s		2794957	1					
ANR	2795307	ElseStatement	else		2794957	0					
ANR	2795308	CompoundStatement		50:8:1108:1108	2794957	0					
ANR	2795309	ForStatement	for ( source = ZSTR_VAL ( str ) ; source < source_end ; source ++ )		2794957	0					
ANR	2795310	ForInit	source = ZSTR_VAL ( str ) ;	3176:7:77837:77859	2794957	0	True				
ANR	2795311	AssignmentExpression	source = ZSTR_VAL ( str )		2794957	0		=			
ANR	2795312	Identifier	source		2794957	0					
ANR	2795313	CallExpression	ZSTR_VAL ( str )		2794957	1					
ANR	2795314	Callee	ZSTR_VAL		2794957	0					
ANR	2795315	Identifier	ZSTR_VAL		2794957	0					
ANR	2795316	ArgumentList	str		2794957	1					
ANR	2795317	Argument	str		2794957	0					
ANR	2795318	Identifier	str		2794957	0					
ANR	2795319	Condition	source < source_end	3176:31:77861:77879	2794957	1	True				
ANR	2795320	RelationalExpression	source < source_end		2794957	0		<			
ANR	2795321	Identifier	source		2794957	0					
ANR	2795322	Identifier	source_end		2794957	1					
ANR	2795323	PostIncDecOperationExpression	source ++	3176:52:77882:77889	2794957	2	True				
ANR	2795324	Identifier	source		2794957	0					
ANR	2795325	IncDec	++		2794957	1					
ANR	2795326	CompoundStatement		51:62:1172:1172	2794957	3					
ANR	2795327	IfStatement	if ( tolower ( * source ) == lc_from )		2794957	0					
ANR	2795328	Condition	tolower ( * source ) == lc_from	3177:7:77901:77927	2794957	0	True				
ANR	2795329	EqualityExpression	tolower ( * source ) == lc_from		2794957	0		==			
ANR	2795330	CallExpression	tolower ( * source )		2794957	0					
ANR	2795331	Callee	tolower		2794957	0					
ANR	2795332	Identifier	tolower		2794957	0					
ANR	2795333	ArgumentList	* source		2794957	1					
ANR	2795334	Argument	* source		2794957	0					
ANR	2795335	UnaryOperationExpression	* source		2794957	0					
ANR	2795336	UnaryOperator	*		2794957	0					
ANR	2795337	Identifier	source		2794957	1					
ANR	2795338	Identifier	lc_from		2794957	1					
ANR	2795339	CompoundStatement		52:36:1210:1210	2794957	1					
ANR	2795340	IfStatement	if ( replace_count )		2794957	0					
ANR	2795341	Condition	replace_count	3178:8:77940:77952	2794957	0	True				
ANR	2795342	Identifier	replace_count		2794957	0					
ANR	2795343	CompoundStatement		53:23:1235:1235	2794957	1					
ANR	2795344	ExpressionStatement	* replace_count += 1	3179:5:77962:77981	2794957	0	True				
ANR	2795345	AssignmentExpression	* replace_count += 1		2794957	0		+=			
ANR	2795346	UnaryOperationExpression	* replace_count		2794957	0					
ANR	2795347	UnaryOperator	*		2794957	0					
ANR	2795348	Identifier	replace_count		2794957	1					
ANR	2795349	PrimaryExpression	1		2794957	1					
ANR	2795350	ExpressionStatement	"memcpy ( target , to , to_len )"	3181:4:77993:78019	2794957	1	True				
ANR	2795351	CallExpression	"memcpy ( target , to , to_len )"		2794957	0					
ANR	2795352	Callee	memcpy		2794957	0					
ANR	2795353	Identifier	memcpy		2794957	0					
ANR	2795354	ArgumentList	target		2794957	1					
ANR	2795355	Argument	target		2794957	0					
ANR	2795356	Identifier	target		2794957	0					
ANR	2795357	Argument	to		2794957	1					
ANR	2795358	Identifier	to		2794957	0					
ANR	2795359	Argument	to_len		2794957	2					
ANR	2795360	Identifier	to_len		2794957	0					
ANR	2795361	ExpressionStatement	target += to_len	3182:4:78025:78041	2794957	2	True				
ANR	2795362	AssignmentExpression	target += to_len		2794957	0		+=			
ANR	2795363	Identifier	target		2794957	0					
ANR	2795364	Identifier	to_len		2794957	1					
ANR	2795365	ElseStatement	else		2794957	0					
ANR	2795366	CompoundStatement		58:10:1333:1333	2794957	0					
ANR	2795367	ExpressionStatement	* target = * source	3184:4:78059:78076	2794957	0	True				
ANR	2795368	AssignmentExpression	* target = * source		2794957	0		=			
ANR	2795369	UnaryOperationExpression	* target		2794957	0					
ANR	2795370	UnaryOperator	*		2794957	0					
ANR	2795371	Identifier	target		2794957	1					
ANR	2795372	UnaryOperationExpression	* source		2794957	1					
ANR	2795373	UnaryOperator	*		2794957	0					
ANR	2795374	Identifier	source		2794957	1					
ANR	2795375	ExpressionStatement	target ++	3185:4:78082:78090	2794957	1	True				
ANR	2795376	PostIncDecOperationExpression	target ++		2794957	0					
ANR	2795377	Identifier	target		2794957	0					
ANR	2795378	IncDec	++		2794957	1					
ANR	2795379	ExpressionStatement	* target = 0	3189:1:78105:78116	2794957	9	True				
ANR	2795380	AssignmentExpression	* target = 0		2794957	0		=			
ANR	2795381	UnaryOperationExpression	* target		2794957	0					
ANR	2795382	UnaryOperator	*		2794957	0					
ANR	2795383	Identifier	target		2794957	1					
ANR	2795384	PrimaryExpression	0		2794957	1					
ANR	2795385	ReturnStatement	return result ;	3190:1:78119:78132	2794957	10	True				
ANR	2795386	Identifier	result		2794957	0					
ANR	2795387	ReturnType	static zend_string *		2794957	1					
ANR	2795388	Identifier	php_char_to_str_ex		2794957	2					
ANR	2795389	ParameterList	"zend_string * str , char from , char * to , size_t to_len , int case_sensitivity , zend_long * replace_count"		2794957	3					
ANR	2795390	Parameter	zend_string * str	3125:39:76617:76632	2794957	0	True				
ANR	2795391	ParameterType	zend_string *		2794957	0					
ANR	2795392	Identifier	str		2794957	1					
ANR	2795393	Parameter	char from	3125:57:76635:76643	2794957	1	True				
ANR	2795394	ParameterType	char		2794957	0					
ANR	2795395	Identifier	from		2794957	1					
ANR	2795396	Parameter	char * to	3125:68:76646:76653	2794957	2	True				
ANR	2795397	ParameterType	char *		2794957	0					
ANR	2795398	Identifier	to		2794957	1					
ANR	2795399	Parameter	size_t to_len	3125:78:76656:76668	2794957	3	True				
ANR	2795400	ParameterType	size_t		2794957	0					
ANR	2795401	Identifier	to_len		2794957	1					
ANR	2795402	Parameter	int case_sensitivity	3125:93:76671:76690	2794957	4	True				
ANR	2795403	ParameterType	int		2794957	0					
ANR	2795404	Identifier	case_sensitivity		2794957	1					
ANR	2795405	Parameter	zend_long * replace_count	3125:115:76693:76716	2794957	5	True				
ANR	2795406	ParameterType	zend_long *		2794957	0					
ANR	2795407	Identifier	replace_count		2794957	1					
ANR	2795408	CFGEntryNode	ENTRY		2794957		True				
ANR	2795409	CFGExitNode	EXIT		2794957		True				
ANR	2795410	Symbol	* replace_count		2794957						
ANR	2795411	Symbol	tolower		2794957						
ANR	2795412	Symbol	lc_from		2794957						
ANR	2795413	Symbol	source		2794957						
ANR	2795414	Symbol	replace_count		2794957						
ANR	2795415	Symbol	result		2794957						
ANR	2795416	Symbol	* source		2794957						
ANR	2795417	Symbol	from		2794957						
ANR	2795418	Symbol	zend_string_alloc		2794957						
ANR	2795419	Symbol	e		2794957						
ANR	2795420	Symbol	char_count		2794957						
ANR	2795421	Symbol	to_len		2794957						
ANR	2795422	Symbol	zend_string_copy		2794957						
ANR	2795423	Symbol	target		2794957						
ANR	2795424	Symbol	ZSTR_VAL		2794957						
ANR	2795425	Symbol	str		2794957						
ANR	2795426	Symbol	p		2794957						
ANR	2795427	Symbol	* target		2794957						
ANR	2795428	Symbol	source_end		2794957						
ANR	2795429	Symbol	s		2794957						
ANR	2795430	Symbol	zend_string_safe_alloc		2794957						
ANR	2795431	Symbol	ZSTR_LEN		2794957						
ANR	2795432	Symbol	memchr		2794957						
ANR	2795433	Symbol	to		2794957						
ANR	2795434	Symbol	case_sensitivity		2794957						
ANR	2795435	Function	php_str_to_str_ex	3196:0:78176:80007							
ANR	2795436	FunctionDef	"php_str_to_str_ex (zend_string * haystack , char * needle , size_t needle_len , char * str , size_t str_len , zend_long * replace_count)"		2795435	0					
ANR	2795437	CompoundStatement		3198:0:78324:80007	2795435	0					
ANR	2795438	IdentifierDeclStatement	zend_string * new_str ;	3199:1:78327:78347	2795435	0	True				
ANR	2795439	IdentifierDecl	* new_str		2795435	0					
ANR	2795440	IdentifierDeclType	zend_string *		2795435	0					
ANR	2795441	Identifier	new_str		2795435	1					
ANR	2795442	IfStatement	if ( needle_len < ZSTR_LEN ( haystack ) )		2795435	1					
ANR	2795443	Condition	needle_len < ZSTR_LEN ( haystack )	3201:5:78355:78385	2795435	0	True				
ANR	2795444	RelationalExpression	needle_len < ZSTR_LEN ( haystack )		2795435	0		<			
ANR	2795445	Identifier	needle_len		2795435	0					
ANR	2795446	CallExpression	ZSTR_LEN ( haystack )		2795435	1					
ANR	2795447	Callee	ZSTR_LEN		2795435	0					
ANR	2795448	Identifier	ZSTR_LEN		2795435	0					
ANR	2795449	ArgumentList	haystack		2795435	1					
ANR	2795450	Argument	haystack		2795435	0					
ANR	2795451	Identifier	haystack		2795435	0					
ANR	2795452	CompoundStatement		6:2:80:99	2795435	1					
ANR	2795453	IdentifierDeclStatement	char * end ;	3202:2:78392:78401	2795435	0	True				
ANR	2795454	IdentifierDecl	* end		2795435	0					
ANR	2795455	IdentifierDeclType	char *		2795435	0					
ANR	2795456	Identifier	end		2795435	1					
ANR	2795457	IdentifierDeclStatement	"char * e , * s , * p , * r ;"	3203:2:78405:78424	2795435	1	True				
ANR	2795458	IdentifierDecl	* e		2795435	0					
ANR	2795459	IdentifierDeclType	char *		2795435	0					
ANR	2795460	Identifier	e		2795435	1					
ANR	2795461	IdentifierDecl	* s		2795435	1					
ANR	2795462	IdentifierDeclType	char *		2795435	0					
ANR	2795463	Identifier	s		2795435	1					
ANR	2795464	IdentifierDecl	* p		2795435	2					
ANR	2795465	IdentifierDeclType	char *		2795435	0					
ANR	2795466	Identifier	p		2795435	1					
ANR	2795467	IdentifierDecl	* r		2795435	3					
ANR	2795468	IdentifierDeclType	char *		2795435	0					
ANR	2795469	Identifier	r		2795435	1					
ANR	2795470	IfStatement	if ( needle_len == str_len )		2795435	2					
ANR	2795471	Condition	needle_len == str_len	3205:6:78433:78453	2795435	0	True				
ANR	2795472	EqualityExpression	needle_len == str_len		2795435	0		==			
ANR	2795473	Identifier	needle_len		2795435	0					
ANR	2795474	Identifier	str_len		2795435	1					
ANR	2795475	CompoundStatement		8:29:131:131	2795435	1					
ANR	2795476	ExpressionStatement	new_str = NULL	3206:3:78461:78475	2795435	0	True				
ANR	2795477	AssignmentExpression	new_str = NULL		2795435	0		=			
ANR	2795478	Identifier	new_str		2795435	0					
ANR	2795479	Identifier	NULL		2795435	1					
ANR	2795480	ExpressionStatement	end = ZSTR_VAL ( haystack ) + ZSTR_LEN ( haystack )	3207:3:78480:78525	2795435	1	True				
ANR	2795481	AssignmentExpression	end = ZSTR_VAL ( haystack ) + ZSTR_LEN ( haystack )		2795435	0		=			
ANR	2795482	Identifier	end		2795435	0					
ANR	2795483	AdditiveExpression	ZSTR_VAL ( haystack ) + ZSTR_LEN ( haystack )		2795435	1		+			
ANR	2795484	CallExpression	ZSTR_VAL ( haystack )		2795435	0					
ANR	2795485	Callee	ZSTR_VAL		2795435	0					
ANR	2795486	Identifier	ZSTR_VAL		2795435	0					
ANR	2795487	ArgumentList	haystack		2795435	1					
ANR	2795488	Argument	haystack		2795435	0					
ANR	2795489	Identifier	haystack		2795435	0					
ANR	2795490	CallExpression	ZSTR_LEN ( haystack )		2795435	1					
ANR	2795491	Callee	ZSTR_LEN		2795435	0					
ANR	2795492	Identifier	ZSTR_LEN		2795435	0					
ANR	2795493	ArgumentList	haystack		2795435	1					
ANR	2795494	Argument	haystack		2795435	0					
ANR	2795495	Identifier	haystack		2795435	0					
ANR	2795496	ForStatement	"for ( p = ZSTR_VAL ( haystack ) ; ( r = ( char * ) php_memnstr ( p , needle , needle_len , end ) ) ; p = r + needle_len )"		2795435	2					
ANR	2795497	ForInit	p = ZSTR_VAL ( haystack ) ;	3208:8:78535:78557	2795435	0	True				
ANR	2795498	AssignmentExpression	p = ZSTR_VAL ( haystack )		2795435	0		=			
ANR	2795499	Identifier	p		2795435	0					
ANR	2795500	CallExpression	ZSTR_VAL ( haystack )		2795435	1					
ANR	2795501	Callee	ZSTR_VAL		2795435	0					
ANR	2795502	Identifier	ZSTR_VAL		2795435	0					
ANR	2795503	ArgumentList	haystack		2795435	1					
ANR	2795504	Argument	haystack		2795435	0					
ANR	2795505	Identifier	haystack		2795435	0					
ANR	2795506	Condition	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"	3208:32:78559:78610	2795435	1	True				
ANR	2795507	AssignmentExpression	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"		2795435	0		=			
ANR	2795508	Identifier	r		2795435	0					
ANR	2795509	CastExpression	"( char * ) php_memnstr ( p , needle , needle_len , end )"		2795435	1					
ANR	2795510	CastTarget	char *		2795435	0					
ANR	2795511	CallExpression	"php_memnstr ( p , needle , needle_len , end )"		2795435	1					
ANR	2795512	Callee	php_memnstr		2795435	0					
ANR	2795513	Identifier	php_memnstr		2795435	0					
ANR	2795514	ArgumentList	p		2795435	1					
ANR	2795515	Argument	p		2795435	0					
ANR	2795516	Identifier	p		2795435	0					
ANR	2795517	Argument	needle		2795435	1					
ANR	2795518	Identifier	needle		2795435	0					
ANR	2795519	Argument	needle_len		2795435	2					
ANR	2795520	Identifier	needle_len		2795435	0					
ANR	2795521	Argument	end		2795435	3					
ANR	2795522	Identifier	end		2795435	0					
ANR	2795523	AssignmentExpression	p = r + needle_len	3208:86:78613:78630	2795435	2	True	=			
ANR	2795524	Identifier	p		2795435	0					
ANR	2795525	AdditiveExpression	r + needle_len		2795435	1		+			
ANR	2795526	Identifier	r		2795435	0					
ANR	2795527	Identifier	needle_len		2795435	1					
ANR	2795528	CompoundStatement		11:106:308:308	2795435	3					
ANR	2795529	IfStatement	if ( ! new_str )		2795435	0					
ANR	2795530	Condition	! new_str	3209:8:78643:78650	2795435	0	True				
ANR	2795531	UnaryOperationExpression	! new_str		2795435	0					
ANR	2795532	UnaryOperator	!		2795435	0					
ANR	2795533	Identifier	new_str		2795435	1					
ANR	2795534	CompoundStatement		12:18:328:328	2795435	1					
ANR	2795535	ExpressionStatement	"new_str = zend_string_init ( ZSTR_VAL ( haystack ) , ZSTR_LEN ( haystack ) , 0 )"	3210:5:78660:78729	2795435	0	True				
ANR	2795536	AssignmentExpression	"new_str = zend_string_init ( ZSTR_VAL ( haystack ) , ZSTR_LEN ( haystack ) , 0 )"		2795435	0		=			
ANR	2795537	Identifier	new_str		2795435	0					
ANR	2795538	CallExpression	"zend_string_init ( ZSTR_VAL ( haystack ) , ZSTR_LEN ( haystack ) , 0 )"		2795435	1					
ANR	2795539	Callee	zend_string_init		2795435	0					
ANR	2795540	Identifier	zend_string_init		2795435	0					
ANR	2795541	ArgumentList	ZSTR_VAL ( haystack )		2795435	1					
ANR	2795542	Argument	ZSTR_VAL ( haystack )		2795435	0					
ANR	2795543	CallExpression	ZSTR_VAL ( haystack )		2795435	0					
ANR	2795544	Callee	ZSTR_VAL		2795435	0					
ANR	2795545	Identifier	ZSTR_VAL		2795435	0					
ANR	2795546	ArgumentList	haystack		2795435	1					
ANR	2795547	Argument	haystack		2795435	0					
ANR	2795548	Identifier	haystack		2795435	0					
ANR	2795549	Argument	ZSTR_LEN ( haystack )		2795435	1					
ANR	2795550	CallExpression	ZSTR_LEN ( haystack )		2795435	0					
ANR	2795551	Callee	ZSTR_LEN		2795435	0					
ANR	2795552	Identifier	ZSTR_LEN		2795435	0					
ANR	2795553	ArgumentList	haystack		2795435	1					
ANR	2795554	Argument	haystack		2795435	0					
ANR	2795555	Identifier	haystack		2795435	0					
ANR	2795556	Argument	0		2795435	2					
ANR	2795557	PrimaryExpression	0		2795435	0					
ANR	2795558	ExpressionStatement	"memcpy ( ZSTR_VAL ( new_str ) + ( r - ZSTR_VAL ( haystack ) ) , str , str_len )"	3212:4:78741:78807	2795435	1	True				
ANR	2795559	CallExpression	"memcpy ( ZSTR_VAL ( new_str ) + ( r - ZSTR_VAL ( haystack ) ) , str , str_len )"		2795435	0					
ANR	2795560	Callee	memcpy		2795435	0					
ANR	2795561	Identifier	memcpy		2795435	0					
ANR	2795562	ArgumentList	ZSTR_VAL ( new_str ) + ( r - ZSTR_VAL ( haystack ) )		2795435	1					
ANR	2795563	Argument	ZSTR_VAL ( new_str ) + ( r - ZSTR_VAL ( haystack ) )		2795435	0					
ANR	2795564	AdditiveExpression	ZSTR_VAL ( new_str ) + ( r - ZSTR_VAL ( haystack ) )		2795435	0		+			
ANR	2795565	CallExpression	ZSTR_VAL ( new_str )		2795435	0					
ANR	2795566	Callee	ZSTR_VAL		2795435	0					
ANR	2795567	Identifier	ZSTR_VAL		2795435	0					
ANR	2795568	ArgumentList	new_str		2795435	1					
ANR	2795569	Argument	new_str		2795435	0					
ANR	2795570	Identifier	new_str		2795435	0					
ANR	2795571	AdditiveExpression	r - ZSTR_VAL ( haystack )		2795435	1		-			
ANR	2795572	Identifier	r		2795435	0					
ANR	2795573	CallExpression	ZSTR_VAL ( haystack )		2795435	1					
ANR	2795574	Callee	ZSTR_VAL		2795435	0					
ANR	2795575	Identifier	ZSTR_VAL		2795435	0					
ANR	2795576	ArgumentList	haystack		2795435	1					
ANR	2795577	Argument	haystack		2795435	0					
ANR	2795578	Identifier	haystack		2795435	0					
ANR	2795579	Argument	str		2795435	1					
ANR	2795580	Identifier	str		2795435	0					
ANR	2795581	Argument	str_len		2795435	2					
ANR	2795582	Identifier	str_len		2795435	0					
ANR	2795583	ExpressionStatement	( * replace_count ) ++	3213:4:78813:78831	2795435	2	True				
ANR	2795584	PostIncDecOperationExpression	( * replace_count ) ++		2795435	0					
ANR	2795585	UnaryOperationExpression	* replace_count		2795435	0					
ANR	2795586	UnaryOperator	*		2795435	0					
ANR	2795587	Identifier	replace_count		2795435	1					
ANR	2795588	IncDec	++		2795435	1					
ANR	2795589	IfStatement	if ( ! new_str )		2795435	3					
ANR	2795590	Condition	! new_str	3215:7:78845:78852	2795435	0	True				
ANR	2795591	UnaryOperationExpression	! new_str		2795435	0					
ANR	2795592	UnaryOperator	!		2795435	0					
ANR	2795593	Identifier	new_str		2795435	1					
ANR	2795594	CompoundStatement		18:17:530:530	2795435	1					
ANR	2795595	GotoStatement	goto nothing_todo ;	3216:4:78861:78878	2795435	0	True				
ANR	2795596	Identifier	nothing_todo		2795435	0					
ANR	2795597	ReturnStatement	return new_str ;	3218:3:78888:78902	2795435	4	True				
ANR	2795598	Identifier	new_str		2795435	0					
ANR	2795599	ElseStatement	else		2795435	0					
ANR	2795600	CompoundStatement		26:3:668:703	2795435	0					
ANR	2795601	IdentifierDeclStatement	size_t count = 0 ;	3220:3:78918:78934	2795435	0	True				
ANR	2795602	IdentifierDecl	count = 0		2795435	0					
ANR	2795603	IdentifierDeclType	size_t		2795435	0					
ANR	2795604	Identifier	count		2795435	1					
ANR	2795605	AssignmentExpression	count = 0		2795435	2		=			
ANR	2795606	Identifier	count		2795435	0					
ANR	2795607	PrimaryExpression	0		2795435	1					
ANR	2795608	IdentifierDeclStatement	char * o = ZSTR_VAL ( haystack ) ;	3221:3:78939:78967	2795435	1	True				
ANR	2795609	IdentifierDecl	* o = ZSTR_VAL ( haystack )		2795435	0					
ANR	2795610	IdentifierDeclType	char *		2795435	0					
ANR	2795611	Identifier	o		2795435	1					
ANR	2795612	AssignmentExpression	* o = ZSTR_VAL ( haystack )		2795435	2		=			
ANR	2795613	Identifier	o		2795435	0					
ANR	2795614	CallExpression	ZSTR_VAL ( haystack )		2795435	1					
ANR	2795615	Callee	ZSTR_VAL		2795435	0					
ANR	2795616	Identifier	ZSTR_VAL		2795435	0					
ANR	2795617	ArgumentList	haystack		2795435	1					
ANR	2795618	Argument	haystack		2795435	0					
ANR	2795619	Identifier	haystack		2795435	0					
ANR	2795620	IdentifierDeclStatement	char * n = needle ;	3222:3:78972:78988	2795435	2	True				
ANR	2795621	IdentifierDecl	* n = needle		2795435	0					
ANR	2795622	IdentifierDeclType	char *		2795435	0					
ANR	2795623	Identifier	n		2795435	1					
ANR	2795624	AssignmentExpression	* n = needle		2795435	2		=			
ANR	2795625	Identifier	needle		2795435	0					
ANR	2795626	Identifier	needle		2795435	1					
ANR	2795627	IdentifierDeclStatement	char * endp = o + ZSTR_LEN ( haystack ) ;	3223:3:78993:79028	2795435	3	True				
ANR	2795628	IdentifierDecl	* endp = o + ZSTR_LEN ( haystack )		2795435	0					
ANR	2795629	IdentifierDeclType	char *		2795435	0					
ANR	2795630	Identifier	endp		2795435	1					
ANR	2795631	AssignmentExpression	* endp = o + ZSTR_LEN ( haystack )		2795435	2		=			
ANR	2795632	Identifier	endp		2795435	0					
ANR	2795633	AdditiveExpression	o + ZSTR_LEN ( haystack )		2795435	1		+			
ANR	2795634	Identifier	o		2795435	0					
ANR	2795635	CallExpression	ZSTR_LEN ( haystack )		2795435	1					
ANR	2795636	Callee	ZSTR_LEN		2795435	0					
ANR	2795637	Identifier	ZSTR_LEN		2795435	0					
ANR	2795638	ArgumentList	haystack		2795435	1					
ANR	2795639	Argument	haystack		2795435	0					
ANR	2795640	Identifier	haystack		2795435	0					
ANR	2795641	WhileStatement	"while ( ( o = ( char * ) php_memnstr ( o , n , needle_len , endp ) ) )"		2795435	4					
ANR	2795642	Condition	"o = ( char * ) php_memnstr ( o , n , needle_len , endp )"	3225:10:79041:79088	2795435	0	True				
ANR	2795643	AssignmentExpression	"o = ( char * ) php_memnstr ( o , n , needle_len , endp )"		2795435	0		=			
ANR	2795644	Identifier	o		2795435	0					
ANR	2795645	CastExpression	"( char * ) php_memnstr ( o , n , needle_len , endp )"		2795435	1					
ANR	2795646	CastTarget	char *		2795435	0					
ANR	2795647	CallExpression	"php_memnstr ( o , n , needle_len , endp )"		2795435	1					
ANR	2795648	Callee	php_memnstr		2795435	0					
ANR	2795649	Identifier	php_memnstr		2795435	0					
ANR	2795650	ArgumentList	o		2795435	1					
ANR	2795651	Argument	o		2795435	0					
ANR	2795652	Identifier	o		2795435	0					
ANR	2795653	Argument	n		2795435	1					
ANR	2795654	Identifier	n		2795435	0					
ANR	2795655	Argument	needle_len		2795435	2					
ANR	2795656	Identifier	needle_len		2795435	0					
ANR	2795657	Argument	endp		2795435	3					
ANR	2795658	Identifier	endp		2795435	0					
ANR	2795659	CompoundStatement		28:60:766:766	2795435	1					
ANR	2795660	ExpressionStatement	o += needle_len	3226:4:79097:79112	2795435	0	True				
ANR	2795661	AssignmentExpression	o += needle_len		2795435	0		+=			
ANR	2795662	Identifier	o		2795435	0					
ANR	2795663	Identifier	needle_len		2795435	1					
ANR	2795664	ExpressionStatement	count ++	3227:4:79118:79125	2795435	1	True				
ANR	2795665	PostIncDecOperationExpression	count ++		2795435	0					
ANR	2795666	Identifier	count		2795435	0					
ANR	2795667	IncDec	++		2795435	1					
ANR	2795668	IfStatement	if ( count == 0 )		2795435	5					
ANR	2795669	Condition	count == 0	3229:7:79139:79148	2795435	0	True				
ANR	2795670	EqualityExpression	count == 0		2795435	0		==			
ANR	2795671	Identifier	count		2795435	0					
ANR	2795672	PrimaryExpression	0		2795435	1					
ANR	2795673	CompoundStatement		32:19:826:826	2795435	1					
ANR	2795674	GotoStatement	goto nothing_todo ;	3231:4:79226:79243	2795435	0	True				
ANR	2795675	Identifier	nothing_todo		2795435	0					
ANR	2795676	ExpressionStatement	"new_str = zend_string_alloc ( count * ( str_len - needle_len ) + ZSTR_LEN ( haystack ) , 0 )"	3233:3:79253:79336	2795435	6	True				
ANR	2795677	AssignmentExpression	"new_str = zend_string_alloc ( count * ( str_len - needle_len ) + ZSTR_LEN ( haystack ) , 0 )"		2795435	0		=			
ANR	2795678	Identifier	new_str		2795435	0					
ANR	2795679	CallExpression	"zend_string_alloc ( count * ( str_len - needle_len ) + ZSTR_LEN ( haystack ) , 0 )"		2795435	1					
ANR	2795680	Callee	zend_string_alloc		2795435	0					
ANR	2795681	Identifier	zend_string_alloc		2795435	0					
ANR	2795682	ArgumentList	count * ( str_len - needle_len ) + ZSTR_LEN ( haystack )		2795435	1					
ANR	2795683	Argument	count * ( str_len - needle_len ) + ZSTR_LEN ( haystack )		2795435	0					
ANR	2795684	AdditiveExpression	count * ( str_len - needle_len ) + ZSTR_LEN ( haystack )		2795435	0		+			
ANR	2795685	MultiplicativeExpression	count * ( str_len - needle_len )		2795435	0		*			
ANR	2795686	Identifier	count		2795435	0					
ANR	2795687	AdditiveExpression	str_len - needle_len		2795435	1		-			
ANR	2795688	Identifier	str_len		2795435	0					
ANR	2795689	Identifier	needle_len		2795435	1					
ANR	2795690	CallExpression	ZSTR_LEN ( haystack )		2795435	1					
ANR	2795691	Callee	ZSTR_LEN		2795435	0					
ANR	2795692	Identifier	ZSTR_LEN		2795435	0					
ANR	2795693	ArgumentList	haystack		2795435	1					
ANR	2795694	Argument	haystack		2795435	0					
ANR	2795695	Identifier	haystack		2795435	0					
ANR	2795696	Argument	0		2795435	1					
ANR	2795697	PrimaryExpression	0		2795435	0					
ANR	2795698	ExpressionStatement	e = s = ZSTR_VAL ( new_str )	3235:3:79342:79367	2795435	7	True				
ANR	2795699	AssignmentExpression	e = s = ZSTR_VAL ( new_str )		2795435	0		=			
ANR	2795700	Identifier	e		2795435	0					
ANR	2795701	AssignmentExpression	s = ZSTR_VAL ( new_str )		2795435	1		=			
ANR	2795702	Identifier	s		2795435	0					
ANR	2795703	CallExpression	ZSTR_VAL ( new_str )		2795435	1					
ANR	2795704	Callee	ZSTR_VAL		2795435	0					
ANR	2795705	Identifier	ZSTR_VAL		2795435	0					
ANR	2795706	ArgumentList	new_str		2795435	1					
ANR	2795707	Argument	new_str		2795435	0					
ANR	2795708	Identifier	new_str		2795435	0					
ANR	2795709	ExpressionStatement	end = ZSTR_VAL ( haystack ) + ZSTR_LEN ( haystack )	3236:3:79372:79417	2795435	8	True				
ANR	2795710	AssignmentExpression	end = ZSTR_VAL ( haystack ) + ZSTR_LEN ( haystack )		2795435	0		=			
ANR	2795711	Identifier	end		2795435	0					
ANR	2795712	AdditiveExpression	ZSTR_VAL ( haystack ) + ZSTR_LEN ( haystack )		2795435	1		+			
ANR	2795713	CallExpression	ZSTR_VAL ( haystack )		2795435	0					
ANR	2795714	Callee	ZSTR_VAL		2795435	0					
ANR	2795715	Identifier	ZSTR_VAL		2795435	0					
ANR	2795716	ArgumentList	haystack		2795435	1					
ANR	2795717	Argument	haystack		2795435	0					
ANR	2795718	Identifier	haystack		2795435	0					
ANR	2795719	CallExpression	ZSTR_LEN ( haystack )		2795435	1					
ANR	2795720	Callee	ZSTR_LEN		2795435	0					
ANR	2795721	Identifier	ZSTR_LEN		2795435	0					
ANR	2795722	ArgumentList	haystack		2795435	1					
ANR	2795723	Argument	haystack		2795435	0					
ANR	2795724	Identifier	haystack		2795435	0					
ANR	2795725	ForStatement	"for ( p = ZSTR_VAL ( haystack ) ; ( r = ( char * ) php_memnstr ( p , needle , needle_len , end ) ) ; p = r + needle_len )"		2795435	9					
ANR	2795726	ForInit	p = ZSTR_VAL ( haystack ) ;	3237:8:79427:79449	2795435	0	True				
ANR	2795727	AssignmentExpression	p = ZSTR_VAL ( haystack )		2795435	0		=			
ANR	2795728	Identifier	p		2795435	0					
ANR	2795729	CallExpression	ZSTR_VAL ( haystack )		2795435	1					
ANR	2795730	Callee	ZSTR_VAL		2795435	0					
ANR	2795731	Identifier	ZSTR_VAL		2795435	0					
ANR	2795732	ArgumentList	haystack		2795435	1					
ANR	2795733	Argument	haystack		2795435	0					
ANR	2795734	Identifier	haystack		2795435	0					
ANR	2795735	Condition	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"	3237:32:79451:79502	2795435	1	True				
ANR	2795736	AssignmentExpression	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"		2795435	0		=			
ANR	2795737	Identifier	r		2795435	0					
ANR	2795738	CastExpression	"( char * ) php_memnstr ( p , needle , needle_len , end )"		2795435	1					
ANR	2795739	CastTarget	char *		2795435	0					
ANR	2795740	CallExpression	"php_memnstr ( p , needle , needle_len , end )"		2795435	1					
ANR	2795741	Callee	php_memnstr		2795435	0					
ANR	2795742	Identifier	php_memnstr		2795435	0					
ANR	2795743	ArgumentList	p		2795435	1					
ANR	2795744	Argument	p		2795435	0					
ANR	2795745	Identifier	p		2795435	0					
ANR	2795746	Argument	needle		2795435	1					
ANR	2795747	Identifier	needle		2795435	0					
ANR	2795748	Argument	needle_len		2795435	2					
ANR	2795749	Identifier	needle_len		2795435	0					
ANR	2795750	Argument	end		2795435	3					
ANR	2795751	Identifier	end		2795435	0					
ANR	2795752	AssignmentExpression	p = r + needle_len	3237:86:79505:79522	2795435	2	True	=			
ANR	2795753	Identifier	p		2795435	0					
ANR	2795754	AdditiveExpression	r + needle_len		2795435	1		+			
ANR	2795755	Identifier	r		2795435	0					
ANR	2795756	Identifier	needle_len		2795435	1					
ANR	2795757	CompoundStatement		40:106:1200:1200	2795435	3					
ANR	2795758	ExpressionStatement	"memcpy ( e , p , r - p )"	3238:4:79531:79550	2795435	0	True				
ANR	2795759	CallExpression	"memcpy ( e , p , r - p )"		2795435	0					
ANR	2795760	Callee	memcpy		2795435	0					
ANR	2795761	Identifier	memcpy		2795435	0					
ANR	2795762	ArgumentList	e		2795435	1					
ANR	2795763	Argument	e		2795435	0					
ANR	2795764	Identifier	e		2795435	0					
ANR	2795765	Argument	p		2795435	1					
ANR	2795766	Identifier	p		2795435	0					
ANR	2795767	Argument	r - p		2795435	2					
ANR	2795768	AdditiveExpression	r - p		2795435	0		-			
ANR	2795769	Identifier	r		2795435	0					
ANR	2795770	Identifier	p		2795435	1					
ANR	2795771	ExpressionStatement	e += r - p	3239:4:79556:79566	2795435	1	True				
ANR	2795772	AssignmentExpression	e += r - p		2795435	0		+=			
ANR	2795773	Identifier	e		2795435	0					
ANR	2795774	AdditiveExpression	r - p		2795435	1		-			
ANR	2795775	Identifier	r		2795435	0					
ANR	2795776	Identifier	p		2795435	1					
ANR	2795777	ExpressionStatement	"memcpy ( e , str , str_len )"	3240:4:79572:79595	2795435	2	True				
ANR	2795778	CallExpression	"memcpy ( e , str , str_len )"		2795435	0					
ANR	2795779	Callee	memcpy		2795435	0					
ANR	2795780	Identifier	memcpy		2795435	0					
ANR	2795781	ArgumentList	e		2795435	1					
ANR	2795782	Argument	e		2795435	0					
ANR	2795783	Identifier	e		2795435	0					
ANR	2795784	Argument	str		2795435	1					
ANR	2795785	Identifier	str		2795435	0					
ANR	2795786	Argument	str_len		2795435	2					
ANR	2795787	Identifier	str_len		2795435	0					
ANR	2795788	ExpressionStatement	e += str_len	3241:4:79601:79613	2795435	3	True				
ANR	2795789	AssignmentExpression	e += str_len		2795435	0		+=			
ANR	2795790	Identifier	e		2795435	0					
ANR	2795791	Identifier	str_len		2795435	1					
ANR	2795792	ExpressionStatement	( * replace_count ) ++	3242:4:79619:79637	2795435	4	True				
ANR	2795793	PostIncDecOperationExpression	( * replace_count ) ++		2795435	0					
ANR	2795794	UnaryOperationExpression	* replace_count		2795435	0					
ANR	2795795	UnaryOperator	*		2795435	0					
ANR	2795796	Identifier	replace_count		2795435	1					
ANR	2795797	IncDec	++		2795435	1					
ANR	2795798	IfStatement	if ( p < end )		2795435	10					
ANR	2795799	Condition	p < end	3245:7:79652:79658	2795435	0	True				
ANR	2795800	RelationalExpression	p < end		2795435	0		<			
ANR	2795801	Identifier	p		2795435	0					
ANR	2795802	Identifier	end		2795435	1					
ANR	2795803	CompoundStatement		48:16:1336:1336	2795435	1					
ANR	2795804	ExpressionStatement	"memcpy ( e , p , end - p )"	3246:4:79667:79688	2795435	0	True				
ANR	2795805	CallExpression	"memcpy ( e , p , end - p )"		2795435	0					
ANR	2795806	Callee	memcpy		2795435	0					
ANR	2795807	Identifier	memcpy		2795435	0					
ANR	2795808	ArgumentList	e		2795435	1					
ANR	2795809	Argument	e		2795435	0					
ANR	2795810	Identifier	e		2795435	0					
ANR	2795811	Argument	p		2795435	1					
ANR	2795812	Identifier	p		2795435	0					
ANR	2795813	Argument	end - p		2795435	2					
ANR	2795814	AdditiveExpression	end - p		2795435	0		-			
ANR	2795815	Identifier	end		2795435	0					
ANR	2795816	Identifier	p		2795435	1					
ANR	2795817	ExpressionStatement	e += end - p	3247:4:79694:79706	2795435	1	True				
ANR	2795818	AssignmentExpression	e += end - p		2795435	0		+=			
ANR	2795819	Identifier	e		2795435	0					
ANR	2795820	AdditiveExpression	end - p		2795435	1		-			
ANR	2795821	Identifier	end		2795435	0					
ANR	2795822	Identifier	p		2795435	1					
ANR	2795823	ExpressionStatement	* e = '\\0'	3250:3:79717:79726	2795435	11	True				
ANR	2795824	AssignmentExpression	* e = '\\0'		2795435	0		=			
ANR	2795825	UnaryOperationExpression	* e		2795435	0					
ANR	2795826	UnaryOperator	*		2795435	0					
ANR	2795827	Identifier	e		2795435	1					
ANR	2795828	PrimaryExpression	'\\0'		2795435	1					
ANR	2795829	ReturnStatement	return new_str ;	3251:3:79731:79745	2795435	12	True				
ANR	2795830	Identifier	new_str		2795435	0					
ANR	2795831	ElseStatement	else		2795435	0					
ANR	2795832	IfStatement	"if ( needle_len > ZSTR_LEN ( haystack ) || memcmp ( ZSTR_VAL ( haystack ) , needle , ZSTR_LEN ( haystack ) ) )"		2795435	0					
ANR	2795833	Condition	"needle_len > ZSTR_LEN ( haystack ) || memcmp ( ZSTR_VAL ( haystack ) , needle , ZSTR_LEN ( haystack ) )"	3253:12:79763:79851	2795435	0	True				
ANR	2795834	OrExpression	"needle_len > ZSTR_LEN ( haystack ) || memcmp ( ZSTR_VAL ( haystack ) , needle , ZSTR_LEN ( haystack ) )"		2795435	0		||			
ANR	2795835	RelationalExpression	needle_len > ZSTR_LEN ( haystack )		2795435	0		>			
ANR	2795836	Identifier	needle_len		2795435	0					
ANR	2795837	CallExpression	ZSTR_LEN ( haystack )		2795435	1					
ANR	2795838	Callee	ZSTR_LEN		2795435	0					
ANR	2795839	Identifier	ZSTR_LEN		2795435	0					
ANR	2795840	ArgumentList	haystack		2795435	1					
ANR	2795841	Argument	haystack		2795435	0					
ANR	2795842	Identifier	haystack		2795435	0					
ANR	2795843	CallExpression	"memcmp ( ZSTR_VAL ( haystack ) , needle , ZSTR_LEN ( haystack ) )"		2795435	1					
ANR	2795844	Callee	memcmp		2795435	0					
ANR	2795845	Identifier	memcmp		2795435	0					
ANR	2795846	ArgumentList	ZSTR_VAL ( haystack )		2795435	1					
ANR	2795847	Argument	ZSTR_VAL ( haystack )		2795435	0					
ANR	2795848	CallExpression	ZSTR_VAL ( haystack )		2795435	0					
ANR	2795849	Callee	ZSTR_VAL		2795435	0					
ANR	2795850	Identifier	ZSTR_VAL		2795435	0					
ANR	2795851	ArgumentList	haystack		2795435	1					
ANR	2795852	Argument	haystack		2795435	0					
ANR	2795853	Identifier	haystack		2795435	0					
ANR	2795854	Argument	needle		2795435	1					
ANR	2795855	Identifier	needle		2795435	0					
ANR	2795856	Argument	ZSTR_LEN ( haystack )		2795435	2					
ANR	2795857	CallExpression	ZSTR_LEN ( haystack )		2795435	0					
ANR	2795858	Callee	ZSTR_LEN		2795435	0					
ANR	2795859	Identifier	ZSTR_LEN		2795435	0					
ANR	2795860	ArgumentList	haystack		2795435	1					
ANR	2795861	Argument	haystack		2795435	0					
ANR	2795862	Identifier	haystack		2795435	0					
ANR	2795863	CompoundStatement		56:103:1529:1529	2795435	1					
ANR	2795864	Label	nothing_todo :	3254:0:79856:79868	2795435	0	True				
ANR	2795865	Identifier	nothing_todo		2795435	0					
ANR	2795866	ReturnStatement	return zend_string_copy ( haystack ) ;	3255:2:79872:79905	2795435	1	True				
ANR	2795867	CallExpression	zend_string_copy ( haystack )		2795435	0					
ANR	2795868	Callee	zend_string_copy		2795435	0					
ANR	2795869	Identifier	zend_string_copy		2795435	0					
ANR	2795870	ArgumentList	haystack		2795435	1					
ANR	2795871	Argument	haystack		2795435	0					
ANR	2795872	Identifier	haystack		2795435	0					
ANR	2795873	ElseStatement	else		2795435	0					
ANR	2795874	CompoundStatement		59:8:1590:1590	2795435	0					
ANR	2795875	ExpressionStatement	"new_str = zend_string_init ( str , str_len , 0 )"	3257:2:79919:79962	2795435	0	True				
ANR	2795876	AssignmentExpression	"new_str = zend_string_init ( str , str_len , 0 )"		2795435	0		=			
ANR	2795877	Identifier	new_str		2795435	0					
ANR	2795878	CallExpression	"zend_string_init ( str , str_len , 0 )"		2795435	1					
ANR	2795879	Callee	zend_string_init		2795435	0					
ANR	2795880	Identifier	zend_string_init		2795435	0					
ANR	2795881	ArgumentList	str		2795435	1					
ANR	2795882	Argument	str		2795435	0					
ANR	2795883	Identifier	str		2795435	0					
ANR	2795884	Argument	str_len		2795435	1					
ANR	2795885	Identifier	str_len		2795435	0					
ANR	2795886	Argument	0		2795435	2					
ANR	2795887	PrimaryExpression	0		2795435	0					
ANR	2795888	ExpressionStatement	( * replace_count ) ++	3258:2:79966:79984	2795435	1	True				
ANR	2795889	PostIncDecOperationExpression	( * replace_count ) ++		2795435	0					
ANR	2795890	UnaryOperationExpression	* replace_count		2795435	0					
ANR	2795891	UnaryOperator	*		2795435	0					
ANR	2795892	Identifier	replace_count		2795435	1					
ANR	2795893	IncDec	++		2795435	1					
ANR	2795894	ReturnStatement	return new_str ;	3259:2:79988:80002	2795435	2	True				
ANR	2795895	Identifier	new_str		2795435	0					
ANR	2795896	ReturnType	static zend_string *		2795435	1					
ANR	2795897	Identifier	php_str_to_str_ex		2795435	2					
ANR	2795898	ParameterList	"zend_string * haystack , char * needle , size_t needle_len , char * str , size_t str_len , zend_long * replace_count"		2795435	3					
ANR	2795899	Parameter	zend_string * haystack	3196:38:78214:78234	2795435	0	True				
ANR	2795900	ParameterType	zend_string *		2795435	0					
ANR	2795901	Identifier	haystack		2795435	1					
ANR	2795902	Parameter	char * needle	3197:1:78238:78249	2795435	1	True				
ANR	2795903	ParameterType	char *		2795435	0					
ANR	2795904	Identifier	needle		2795435	1					
ANR	2795905	Parameter	size_t needle_len	3197:15:78252:78268	2795435	2	True				
ANR	2795906	ParameterType	size_t		2795435	0					
ANR	2795907	Identifier	needle_len		2795435	1					
ANR	2795908	Parameter	char * str	3197:34:78271:78279	2795435	3	True				
ANR	2795909	ParameterType	char *		2795435	0					
ANR	2795910	Identifier	str		2795435	1					
ANR	2795911	Parameter	size_t str_len	3197:45:78282:78295	2795435	4	True				
ANR	2795912	ParameterType	size_t		2795435	0					
ANR	2795913	Identifier	str_len		2795435	1					
ANR	2795914	Parameter	zend_long * replace_count	3197:61:78298:78321	2795435	5	True				
ANR	2795915	ParameterType	zend_long *		2795435	0					
ANR	2795916	Identifier	replace_count		2795435	1					
ANR	2795917	CFGEntryNode	ENTRY		2795435		True				
ANR	2795918	CFGExitNode	EXIT		2795435		True				
ANR	2795919	Symbol	* replace_count		2795435						
ANR	2795920	Symbol	replace_count		2795435						
ANR	2795921	Symbol	zend_string_init		2795435						
ANR	2795922	Symbol	new_str		2795435						
ANR	2795923	Symbol	haystack		2795435						
ANR	2795924	Symbol	memcmp		2795435						
ANR	2795925	Symbol	str_len		2795435						
ANR	2795926	Symbol	end		2795435						
ANR	2795927	Symbol	endp		2795435						
ANR	2795928	Symbol	zend_string_alloc		2795435						
ANR	2795929	Symbol	NULL		2795435						
ANR	2795930	Symbol	e		2795435						
ANR	2795931	Symbol	count		2795435						
ANR	2795932	Symbol	php_memnstr		2795435						
ANR	2795933	Symbol	zend_string_copy		2795435						
ANR	2795934	Symbol	n		2795435						
ANR	2795935	Symbol	ZSTR_VAL		2795435						
ANR	2795936	Symbol	o		2795435						
ANR	2795937	Symbol	* e		2795435						
ANR	2795938	Symbol	str		2795435						
ANR	2795939	Symbol	p		2795435						
ANR	2795940	Symbol	r		2795435						
ANR	2795941	Symbol	s		2795435						
ANR	2795942	Symbol	ZSTR_LEN		2795435						
ANR	2795943	Symbol	needle		2795435						
ANR	2795944	Symbol	needle_len		2795435						
ANR	2795945	Function	php_str_to_str_i_ex	3266:0:80051:82412							
ANR	2795946	FunctionDef	"php_str_to_str_i_ex (zend_string * haystack , char * lc_haystack , zend_string * needle , char * str , size_t str_len , zend_long * replace_count)"		2795945	0					
ANR	2795947	CompoundStatement		3268:0:80208:82412	2795945	0					
ANR	2795948	IdentifierDeclStatement	zend_string * new_str = NULL ;	3269:1:80211:80238	2795945	0	True				
ANR	2795949	IdentifierDecl	* new_str = NULL		2795945	0					
ANR	2795950	IdentifierDeclType	zend_string *		2795945	0					
ANR	2795951	Identifier	new_str		2795945	1					
ANR	2795952	AssignmentExpression	* new_str = NULL		2795945	2		=			
ANR	2795953	Identifier	NULL		2795945	0					
ANR	2795954	Identifier	NULL		2795945	1					
ANR	2795955	IdentifierDeclStatement	zend_string * lc_needle ;	3270:1:80241:80263	2795945	1	True				
ANR	2795956	IdentifierDecl	* lc_needle		2795945	0					
ANR	2795957	IdentifierDeclType	zend_string *		2795945	0					
ANR	2795958	Identifier	lc_needle		2795945	1					
ANR	2795959	IfStatement	if ( ZSTR_LEN ( needle ) < ZSTR_LEN ( haystack ) )		2795945	2					
ANR	2795960	Condition	ZSTR_LEN ( needle ) < ZSTR_LEN ( haystack )	3272:5:80271:80307	2795945	0	True				
ANR	2795961	RelationalExpression	ZSTR_LEN ( needle ) < ZSTR_LEN ( haystack )		2795945	0		<			
ANR	2795962	CallExpression	ZSTR_LEN ( needle )		2795945	0					
ANR	2795963	Callee	ZSTR_LEN		2795945	0					
ANR	2795964	Identifier	ZSTR_LEN		2795945	0					
ANR	2795965	ArgumentList	needle		2795945	1					
ANR	2795966	Argument	needle		2795945	0					
ANR	2795967	Identifier	needle		2795945	0					
ANR	2795968	CallExpression	ZSTR_LEN ( haystack )		2795945	1					
ANR	2795969	Callee	ZSTR_LEN		2795945	0					
ANR	2795970	Identifier	ZSTR_LEN		2795945	0					
ANR	2795971	ArgumentList	haystack		2795945	1					
ANR	2795972	Argument	haystack		2795945	0					
ANR	2795973	Identifier	haystack		2795945	0					
ANR	2795974	CompoundStatement		7:2:118:137	2795945	1					
ANR	2795975	IdentifierDeclStatement	char * end ;	3273:2:80314:80323	2795945	0	True				
ANR	2795976	IdentifierDecl	* end		2795945	0					
ANR	2795977	IdentifierDeclType	char *		2795945	0					
ANR	2795978	Identifier	end		2795945	1					
ANR	2795979	IdentifierDeclStatement	"char * e , * s , * p , * r ;"	3274:2:80327:80346	2795945	1	True				
ANR	2795980	IdentifierDecl	* e		2795945	0					
ANR	2795981	IdentifierDeclType	char *		2795945	0					
ANR	2795982	Identifier	e		2795945	1					
ANR	2795983	IdentifierDecl	* s		2795945	1					
ANR	2795984	IdentifierDeclType	char *		2795945	0					
ANR	2795985	Identifier	s		2795945	1					
ANR	2795986	IdentifierDecl	* p		2795945	2					
ANR	2795987	IdentifierDeclType	char *		2795945	0					
ANR	2795988	Identifier	p		2795945	1					
ANR	2795989	IdentifierDecl	* r		2795945	3					
ANR	2795990	IdentifierDeclType	char *		2795945	0					
ANR	2795991	Identifier	r		2795945	1					
ANR	2795992	IfStatement	if ( ZSTR_LEN ( needle ) == str_len )		2795945	2					
ANR	2795993	Condition	ZSTR_LEN ( needle ) == str_len	3276:6:80355:80381	2795945	0	True				
ANR	2795994	EqualityExpression	ZSTR_LEN ( needle ) == str_len		2795945	0		==			
ANR	2795995	CallExpression	ZSTR_LEN ( needle )		2795945	0					
ANR	2795996	Callee	ZSTR_LEN		2795945	0					
ANR	2795997	Identifier	ZSTR_LEN		2795945	0					
ANR	2795998	ArgumentList	needle		2795945	1					
ANR	2795999	Argument	needle		2795945	0					
ANR	2796000	Identifier	needle		2795945	0					
ANR	2796001	Identifier	str_len		2795945	1					
ANR	2796002	CompoundStatement		9:35:175:175	2795945	1					
ANR	2796003	ExpressionStatement	lc_needle = php_string_tolower ( needle )	3277:3:80389:80427	2795945	0	True				
ANR	2796004	AssignmentExpression	lc_needle = php_string_tolower ( needle )		2795945	0		=			
ANR	2796005	Identifier	lc_needle		2795945	0					
ANR	2796006	CallExpression	php_string_tolower ( needle )		2795945	1					
ANR	2796007	Callee	php_string_tolower		2795945	0					
ANR	2796008	Identifier	php_string_tolower		2795945	0					
ANR	2796009	ArgumentList	needle		2795945	1					
ANR	2796010	Argument	needle		2795945	0					
ANR	2796011	Identifier	needle		2795945	0					
ANR	2796012	ExpressionStatement	end = lc_haystack + ZSTR_LEN ( haystack )	3278:3:80432:80470	2795945	1	True				
ANR	2796013	AssignmentExpression	end = lc_haystack + ZSTR_LEN ( haystack )		2795945	0		=			
ANR	2796014	Identifier	end		2795945	0					
ANR	2796015	AdditiveExpression	lc_haystack + ZSTR_LEN ( haystack )		2795945	1		+			
ANR	2796016	Identifier	lc_haystack		2795945	0					
ANR	2796017	CallExpression	ZSTR_LEN ( haystack )		2795945	1					
ANR	2796018	Callee	ZSTR_LEN		2795945	0					
ANR	2796019	Identifier	ZSTR_LEN		2795945	0					
ANR	2796020	ArgumentList	haystack		2795945	1					
ANR	2796021	Argument	haystack		2795945	0					
ANR	2796022	Identifier	haystack		2795945	0					
ANR	2796023	ForStatement	"for ( p = lc_haystack ; ( r = ( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end ) ) ; p = r + ZSTR_LEN ( lc_needle ) )"		2795945	2					
ANR	2796024	ForInit	p = lc_haystack ;	3279:8:80480:80495	2795945	0	True				
ANR	2796025	AssignmentExpression	p = lc_haystack		2795945	0		=			
ANR	2796026	Identifier	p		2795945	0					
ANR	2796027	Identifier	lc_haystack		2795945	1					
ANR	2796028	Condition	"r = ( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"	3279:25:80497:80570	2795945	1	True				
ANR	2796029	AssignmentExpression	"r = ( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"		2795945	0		=			
ANR	2796030	Identifier	r		2795945	0					
ANR	2796031	CastExpression	"( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"		2795945	1					
ANR	2796032	CastTarget	char *		2795945	0					
ANR	2796033	CallExpression	"php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"		2795945	1					
ANR	2796034	Callee	php_memnstr		2795945	0					
ANR	2796035	Identifier	php_memnstr		2795945	0					
ANR	2796036	ArgumentList	p		2795945	1					
ANR	2796037	Argument	p		2795945	0					
ANR	2796038	Identifier	p		2795945	0					
ANR	2796039	Argument	ZSTR_VAL ( lc_needle )		2795945	1					
ANR	2796040	CallExpression	ZSTR_VAL ( lc_needle )		2795945	0					
ANR	2796041	Callee	ZSTR_VAL		2795945	0					
ANR	2796042	Identifier	ZSTR_VAL		2795945	0					
ANR	2796043	ArgumentList	lc_needle		2795945	1					
ANR	2796044	Argument	lc_needle		2795945	0					
ANR	2796045	Identifier	lc_needle		2795945	0					
ANR	2796046	Argument	ZSTR_LEN ( lc_needle )		2795945	2					
ANR	2796047	CallExpression	ZSTR_LEN ( lc_needle )		2795945	0					
ANR	2796048	Callee	ZSTR_LEN		2795945	0					
ANR	2796049	Identifier	ZSTR_LEN		2795945	0					
ANR	2796050	ArgumentList	lc_needle		2795945	1					
ANR	2796051	Argument	lc_needle		2795945	0					
ANR	2796052	Identifier	lc_needle		2795945	0					
ANR	2796053	Argument	end		2795945	3					
ANR	2796054	Identifier	end		2795945	0					
ANR	2796055	AssignmentExpression	p = r + ZSTR_LEN ( lc_needle )	3279:101:80573:80599	2795945	2	True	=			
ANR	2796056	Identifier	p		2795945	0					
ANR	2796057	AdditiveExpression	r + ZSTR_LEN ( lc_needle )		2795945	1		+			
ANR	2796058	Identifier	r		2795945	0					
ANR	2796059	CallExpression	ZSTR_LEN ( lc_needle )		2795945	1					
ANR	2796060	Callee	ZSTR_LEN		2795945	0					
ANR	2796061	Identifier	ZSTR_LEN		2795945	0					
ANR	2796062	ArgumentList	lc_needle		2795945	1					
ANR	2796063	Argument	lc_needle		2795945	0					
ANR	2796064	Identifier	lc_needle		2795945	0					
ANR	2796065	CompoundStatement		12:130:393:393	2795945	3					
ANR	2796066	IfStatement	if ( ! new_str )		2795945	0					
ANR	2796067	Condition	! new_str	3280:8:80612:80619	2795945	0	True				
ANR	2796068	UnaryOperationExpression	! new_str		2795945	0					
ANR	2796069	UnaryOperator	!		2795945	0					
ANR	2796070	Identifier	new_str		2795945	1					
ANR	2796071	CompoundStatement		13:18:413:413	2795945	1					
ANR	2796072	ExpressionStatement	"new_str = zend_string_init ( ZSTR_VAL ( haystack ) , ZSTR_LEN ( haystack ) , 0 )"	3281:5:80629:80698	2795945	0	True				
ANR	2796073	AssignmentExpression	"new_str = zend_string_init ( ZSTR_VAL ( haystack ) , ZSTR_LEN ( haystack ) , 0 )"		2795945	0		=			
ANR	2796074	Identifier	new_str		2795945	0					
ANR	2796075	CallExpression	"zend_string_init ( ZSTR_VAL ( haystack ) , ZSTR_LEN ( haystack ) , 0 )"		2795945	1					
ANR	2796076	Callee	zend_string_init		2795945	0					
ANR	2796077	Identifier	zend_string_init		2795945	0					
ANR	2796078	ArgumentList	ZSTR_VAL ( haystack )		2795945	1					
ANR	2796079	Argument	ZSTR_VAL ( haystack )		2795945	0					
ANR	2796080	CallExpression	ZSTR_VAL ( haystack )		2795945	0					
ANR	2796081	Callee	ZSTR_VAL		2795945	0					
ANR	2796082	Identifier	ZSTR_VAL		2795945	0					
ANR	2796083	ArgumentList	haystack		2795945	1					
ANR	2796084	Argument	haystack		2795945	0					
ANR	2796085	Identifier	haystack		2795945	0					
ANR	2796086	Argument	ZSTR_LEN ( haystack )		2795945	1					
ANR	2796087	CallExpression	ZSTR_LEN ( haystack )		2795945	0					
ANR	2796088	Callee	ZSTR_LEN		2795945	0					
ANR	2796089	Identifier	ZSTR_LEN		2795945	0					
ANR	2796090	ArgumentList	haystack		2795945	1					
ANR	2796091	Argument	haystack		2795945	0					
ANR	2796092	Identifier	haystack		2795945	0					
ANR	2796093	Argument	0		2795945	2					
ANR	2796094	PrimaryExpression	0		2795945	0					
ANR	2796095	ExpressionStatement	"memcpy ( ZSTR_VAL ( new_str ) + ( r - lc_haystack ) , str , str_len )"	3283:4:80710:80769	2795945	1	True				
ANR	2796096	CallExpression	"memcpy ( ZSTR_VAL ( new_str ) + ( r - lc_haystack ) , str , str_len )"		2795945	0					
ANR	2796097	Callee	memcpy		2795945	0					
ANR	2796098	Identifier	memcpy		2795945	0					
ANR	2796099	ArgumentList	ZSTR_VAL ( new_str ) + ( r - lc_haystack )		2795945	1					
ANR	2796100	Argument	ZSTR_VAL ( new_str ) + ( r - lc_haystack )		2795945	0					
ANR	2796101	AdditiveExpression	ZSTR_VAL ( new_str ) + ( r - lc_haystack )		2795945	0		+			
ANR	2796102	CallExpression	ZSTR_VAL ( new_str )		2795945	0					
ANR	2796103	Callee	ZSTR_VAL		2795945	0					
ANR	2796104	Identifier	ZSTR_VAL		2795945	0					
ANR	2796105	ArgumentList	new_str		2795945	1					
ANR	2796106	Argument	new_str		2795945	0					
ANR	2796107	Identifier	new_str		2795945	0					
ANR	2796108	AdditiveExpression	r - lc_haystack		2795945	1		-			
ANR	2796109	Identifier	r		2795945	0					
ANR	2796110	Identifier	lc_haystack		2795945	1					
ANR	2796111	Argument	str		2795945	1					
ANR	2796112	Identifier	str		2795945	0					
ANR	2796113	Argument	str_len		2795945	2					
ANR	2796114	Identifier	str_len		2795945	0					
ANR	2796115	ExpressionStatement	( * replace_count ) ++	3284:4:80775:80793	2795945	2	True				
ANR	2796116	PostIncDecOperationExpression	( * replace_count ) ++		2795945	0					
ANR	2796117	UnaryOperationExpression	* replace_count		2795945	0					
ANR	2796118	UnaryOperator	*		2795945	0					
ANR	2796119	Identifier	replace_count		2795945	1					
ANR	2796120	IncDec	++		2795945	1					
ANR	2796121	ExpressionStatement	zend_string_release ( lc_needle )	3286:3:80803:80833	2795945	3	True				
ANR	2796122	CallExpression	zend_string_release ( lc_needle )		2795945	0					
ANR	2796123	Callee	zend_string_release		2795945	0					
ANR	2796124	Identifier	zend_string_release		2795945	0					
ANR	2796125	ArgumentList	lc_needle		2795945	1					
ANR	2796126	Argument	lc_needle		2795945	0					
ANR	2796127	Identifier	lc_needle		2795945	0					
ANR	2796128	IfStatement	if ( ! new_str )		2795945	4					
ANR	2796129	Condition	! new_str	3288:7:80843:80850	2795945	0	True				
ANR	2796130	UnaryOperationExpression	! new_str		2795945	0					
ANR	2796131	UnaryOperator	!		2795945	0					
ANR	2796132	Identifier	new_str		2795945	1					
ANR	2796133	CompoundStatement		21:17:644:644	2795945	1					
ANR	2796134	GotoStatement	goto nothing_todo ;	3289:4:80859:80876	2795945	0	True				
ANR	2796135	Identifier	nothing_todo		2795945	0					
ANR	2796136	ReturnStatement	return new_str ;	3291:3:80886:80900	2795945	5	True				
ANR	2796137	Identifier	new_str		2795945	0					
ANR	2796138	ElseStatement	else		2795945	0					
ANR	2796139	CompoundStatement		29:3:766:801	2795945	0					
ANR	2796140	IdentifierDeclStatement	size_t count = 0 ;	3293:3:80916:80932	2795945	0	True				
ANR	2796141	IdentifierDecl	count = 0		2795945	0					
ANR	2796142	IdentifierDeclType	size_t		2795945	0					
ANR	2796143	Identifier	count		2795945	1					
ANR	2796144	AssignmentExpression	count = 0		2795945	2		=			
ANR	2796145	Identifier	count		2795945	0					
ANR	2796146	PrimaryExpression	0		2795945	1					
ANR	2796147	IdentifierDeclStatement	char * o = lc_haystack ;	3294:3:80937:80958	2795945	1	True				
ANR	2796148	IdentifierDecl	* o = lc_haystack		2795945	0					
ANR	2796149	IdentifierDeclType	char *		2795945	0					
ANR	2796150	Identifier	o		2795945	1					
ANR	2796151	AssignmentExpression	* o = lc_haystack		2795945	2		=			
ANR	2796152	Identifier	lc_haystack		2795945	0					
ANR	2796153	Identifier	lc_haystack		2795945	1					
ANR	2796154	IdentifierDeclStatement	char * n ;	3295:3:80963:80970	2795945	2	True				
ANR	2796155	IdentifierDecl	* n		2795945	0					
ANR	2796156	IdentifierDeclType	char *		2795945	0					
ANR	2796157	Identifier	n		2795945	1					
ANR	2796158	IdentifierDeclStatement	char * endp = o + ZSTR_LEN ( haystack ) ;	3296:3:80975:81010	2795945	3	True				
ANR	2796159	IdentifierDecl	* endp = o + ZSTR_LEN ( haystack )		2795945	0					
ANR	2796160	IdentifierDeclType	char *		2795945	0					
ANR	2796161	Identifier	endp		2795945	1					
ANR	2796162	AssignmentExpression	* endp = o + ZSTR_LEN ( haystack )		2795945	2		=			
ANR	2796163	Identifier	endp		2795945	0					
ANR	2796164	AdditiveExpression	o + ZSTR_LEN ( haystack )		2795945	1		+			
ANR	2796165	Identifier	o		2795945	0					
ANR	2796166	CallExpression	ZSTR_LEN ( haystack )		2795945	1					
ANR	2796167	Callee	ZSTR_LEN		2795945	0					
ANR	2796168	Identifier	ZSTR_LEN		2795945	0					
ANR	2796169	ArgumentList	haystack		2795945	1					
ANR	2796170	Argument	haystack		2795945	0					
ANR	2796171	Identifier	haystack		2795945	0					
ANR	2796172	ExpressionStatement	lc_needle = php_string_tolower ( needle )	3298:3:81016:81054	2795945	4	True				
ANR	2796173	AssignmentExpression	lc_needle = php_string_tolower ( needle )		2795945	0		=			
ANR	2796174	Identifier	lc_needle		2795945	0					
ANR	2796175	CallExpression	php_string_tolower ( needle )		2795945	1					
ANR	2796176	Callee	php_string_tolower		2795945	0					
ANR	2796177	Identifier	php_string_tolower		2795945	0					
ANR	2796178	ArgumentList	needle		2795945	1					
ANR	2796179	Argument	needle		2795945	0					
ANR	2796180	Identifier	needle		2795945	0					
ANR	2796181	ExpressionStatement	n = ZSTR_VAL ( lc_needle )	3299:3:81059:81082	2795945	5	True				
ANR	2796182	AssignmentExpression	n = ZSTR_VAL ( lc_needle )		2795945	0		=			
ANR	2796183	Identifier	n		2795945	0					
ANR	2796184	CallExpression	ZSTR_VAL ( lc_needle )		2795945	1					
ANR	2796185	Callee	ZSTR_VAL		2795945	0					
ANR	2796186	Identifier	ZSTR_VAL		2795945	0					
ANR	2796187	ArgumentList	lc_needle		2795945	1					
ANR	2796188	Argument	lc_needle		2795945	0					
ANR	2796189	Identifier	lc_needle		2795945	0					
ANR	2796190	WhileStatement	"while ( ( o = ( char * ) php_memnstr ( o , n , ZSTR_LEN ( lc_needle ) , endp ) ) )"		2795945	6					
ANR	2796191	Condition	"o = ( char * ) php_memnstr ( o , n , ZSTR_LEN ( lc_needle ) , endp )"	3301:10:81095:81151	2795945	0	True				
ANR	2796192	AssignmentExpression	"o = ( char * ) php_memnstr ( o , n , ZSTR_LEN ( lc_needle ) , endp )"		2795945	0		=			
ANR	2796193	Identifier	o		2795945	0					
ANR	2796194	CastExpression	"( char * ) php_memnstr ( o , n , ZSTR_LEN ( lc_needle ) , endp )"		2795945	1					
ANR	2796195	CastTarget	char *		2795945	0					
ANR	2796196	CallExpression	"php_memnstr ( o , n , ZSTR_LEN ( lc_needle ) , endp )"		2795945	1					
ANR	2796197	Callee	php_memnstr		2795945	0					
ANR	2796198	Identifier	php_memnstr		2795945	0					
ANR	2796199	ArgumentList	o		2795945	1					
ANR	2796200	Argument	o		2795945	0					
ANR	2796201	Identifier	o		2795945	0					
ANR	2796202	Argument	n		2795945	1					
ANR	2796203	Identifier	n		2795945	0					
ANR	2796204	Argument	ZSTR_LEN ( lc_needle )		2795945	2					
ANR	2796205	CallExpression	ZSTR_LEN ( lc_needle )		2795945	0					
ANR	2796206	Callee	ZSTR_LEN		2795945	0					
ANR	2796207	Identifier	ZSTR_LEN		2795945	0					
ANR	2796208	ArgumentList	lc_needle		2795945	1					
ANR	2796209	Argument	lc_needle		2795945	0					
ANR	2796210	Identifier	lc_needle		2795945	0					
ANR	2796211	Argument	endp		2795945	3					
ANR	2796212	Identifier	endp		2795945	0					
ANR	2796213	CompoundStatement		34:69:945:945	2795945	1					
ANR	2796214	ExpressionStatement	o += ZSTR_LEN ( lc_needle )	3302:4:81160:81184	2795945	0	True				
ANR	2796215	AssignmentExpression	o += ZSTR_LEN ( lc_needle )		2795945	0		+=			
ANR	2796216	Identifier	o		2795945	0					
ANR	2796217	CallExpression	ZSTR_LEN ( lc_needle )		2795945	1					
ANR	2796218	Callee	ZSTR_LEN		2795945	0					
ANR	2796219	Identifier	ZSTR_LEN		2795945	0					
ANR	2796220	ArgumentList	lc_needle		2795945	1					
ANR	2796221	Argument	lc_needle		2795945	0					
ANR	2796222	Identifier	lc_needle		2795945	0					
ANR	2796223	ExpressionStatement	count ++	3303:4:81190:81197	2795945	1	True				
ANR	2796224	PostIncDecOperationExpression	count ++		2795945	0					
ANR	2796225	Identifier	count		2795945	0					
ANR	2796226	IncDec	++		2795945	1					
ANR	2796227	IfStatement	if ( count == 0 )		2795945	7					
ANR	2796228	Condition	count == 0	3305:7:81211:81220	2795945	0	True				
ANR	2796229	EqualityExpression	count == 0		2795945	0		==			
ANR	2796230	Identifier	count		2795945	0					
ANR	2796231	PrimaryExpression	0		2795945	1					
ANR	2796232	CompoundStatement		38:19:1014:1014	2795945	1					
ANR	2796233	ExpressionStatement	zend_string_release ( lc_needle )	3307:4:81298:81328	2795945	0	True				
ANR	2796234	CallExpression	zend_string_release ( lc_needle )		2795945	0					
ANR	2796235	Callee	zend_string_release		2795945	0					
ANR	2796236	Identifier	zend_string_release		2795945	0					
ANR	2796237	ArgumentList	lc_needle		2795945	1					
ANR	2796238	Argument	lc_needle		2795945	0					
ANR	2796239	Identifier	lc_needle		2795945	0					
ANR	2796240	GotoStatement	goto nothing_todo ;	3308:4:81334:81351	2795945	1	True				
ANR	2796241	Identifier	nothing_todo		2795945	0					
ANR	2796242	ExpressionStatement	"new_str = zend_string_alloc ( count * ( str_len - ZSTR_LEN ( lc_needle ) ) + ZSTR_LEN ( haystack ) , 0 )"	3311:3:81362:81454	2795945	8	True				
ANR	2796243	AssignmentExpression	"new_str = zend_string_alloc ( count * ( str_len - ZSTR_LEN ( lc_needle ) ) + ZSTR_LEN ( haystack ) , 0 )"		2795945	0		=			
ANR	2796244	Identifier	new_str		2795945	0					
ANR	2796245	CallExpression	"zend_string_alloc ( count * ( str_len - ZSTR_LEN ( lc_needle ) ) + ZSTR_LEN ( haystack ) , 0 )"		2795945	1					
ANR	2796246	Callee	zend_string_alloc		2795945	0					
ANR	2796247	Identifier	zend_string_alloc		2795945	0					
ANR	2796248	ArgumentList	count * ( str_len - ZSTR_LEN ( lc_needle ) ) + ZSTR_LEN ( haystack )		2795945	1					
ANR	2796249	Argument	count * ( str_len - ZSTR_LEN ( lc_needle ) ) + ZSTR_LEN ( haystack )		2795945	0					
ANR	2796250	AdditiveExpression	count * ( str_len - ZSTR_LEN ( lc_needle ) ) + ZSTR_LEN ( haystack )		2795945	0		+			
ANR	2796251	MultiplicativeExpression	count * ( str_len - ZSTR_LEN ( lc_needle ) )		2795945	0		*			
ANR	2796252	Identifier	count		2795945	0					
ANR	2796253	AdditiveExpression	str_len - ZSTR_LEN ( lc_needle )		2795945	1		-			
ANR	2796254	Identifier	str_len		2795945	0					
ANR	2796255	CallExpression	ZSTR_LEN ( lc_needle )		2795945	1					
ANR	2796256	Callee	ZSTR_LEN		2795945	0					
ANR	2796257	Identifier	ZSTR_LEN		2795945	0					
ANR	2796258	ArgumentList	lc_needle		2795945	1					
ANR	2796259	Argument	lc_needle		2795945	0					
ANR	2796260	Identifier	lc_needle		2795945	0					
ANR	2796261	CallExpression	ZSTR_LEN ( haystack )		2795945	1					
ANR	2796262	Callee	ZSTR_LEN		2795945	0					
ANR	2796263	Identifier	ZSTR_LEN		2795945	0					
ANR	2796264	ArgumentList	haystack		2795945	1					
ANR	2796265	Argument	haystack		2795945	0					
ANR	2796266	Identifier	haystack		2795945	0					
ANR	2796267	Argument	0		2795945	1					
ANR	2796268	PrimaryExpression	0		2795945	0					
ANR	2796269	ExpressionStatement	e = s = ZSTR_VAL ( new_str )	3313:3:81460:81485	2795945	9	True				
ANR	2796270	AssignmentExpression	e = s = ZSTR_VAL ( new_str )		2795945	0		=			
ANR	2796271	Identifier	e		2795945	0					
ANR	2796272	AssignmentExpression	s = ZSTR_VAL ( new_str )		2795945	1		=			
ANR	2796273	Identifier	s		2795945	0					
ANR	2796274	CallExpression	ZSTR_VAL ( new_str )		2795945	1					
ANR	2796275	Callee	ZSTR_VAL		2795945	0					
ANR	2796276	Identifier	ZSTR_VAL		2795945	0					
ANR	2796277	ArgumentList	new_str		2795945	1					
ANR	2796278	Argument	new_str		2795945	0					
ANR	2796279	Identifier	new_str		2795945	0					
ANR	2796280	ExpressionStatement	end = lc_haystack + ZSTR_LEN ( haystack )	3314:3:81490:81528	2795945	10	True				
ANR	2796281	AssignmentExpression	end = lc_haystack + ZSTR_LEN ( haystack )		2795945	0		=			
ANR	2796282	Identifier	end		2795945	0					
ANR	2796283	AdditiveExpression	lc_haystack + ZSTR_LEN ( haystack )		2795945	1		+			
ANR	2796284	Identifier	lc_haystack		2795945	0					
ANR	2796285	CallExpression	ZSTR_LEN ( haystack )		2795945	1					
ANR	2796286	Callee	ZSTR_LEN		2795945	0					
ANR	2796287	Identifier	ZSTR_LEN		2795945	0					
ANR	2796288	ArgumentList	haystack		2795945	1					
ANR	2796289	Argument	haystack		2795945	0					
ANR	2796290	Identifier	haystack		2795945	0					
ANR	2796291	ForStatement	"for ( p = lc_haystack ; ( r = ( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end ) ) ; p = r + ZSTR_LEN ( lc_needle ) )"		2795945	11					
ANR	2796292	ForInit	p = lc_haystack ;	3316:8:81539:81554	2795945	0	True				
ANR	2796293	AssignmentExpression	p = lc_haystack		2795945	0		=			
ANR	2796294	Identifier	p		2795945	0					
ANR	2796295	Identifier	lc_haystack		2795945	1					
ANR	2796296	Condition	"r = ( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"	3316:25:81556:81629	2795945	1	True				
ANR	2796297	AssignmentExpression	"r = ( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"		2795945	0		=			
ANR	2796298	Identifier	r		2795945	0					
ANR	2796299	CastExpression	"( char * ) php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"		2795945	1					
ANR	2796300	CastTarget	char *		2795945	0					
ANR	2796301	CallExpression	"php_memnstr ( p , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) , end )"		2795945	1					
ANR	2796302	Callee	php_memnstr		2795945	0					
ANR	2796303	Identifier	php_memnstr		2795945	0					
ANR	2796304	ArgumentList	p		2795945	1					
ANR	2796305	Argument	p		2795945	0					
ANR	2796306	Identifier	p		2795945	0					
ANR	2796307	Argument	ZSTR_VAL ( lc_needle )		2795945	1					
ANR	2796308	CallExpression	ZSTR_VAL ( lc_needle )		2795945	0					
ANR	2796309	Callee	ZSTR_VAL		2795945	0					
ANR	2796310	Identifier	ZSTR_VAL		2795945	0					
ANR	2796311	ArgumentList	lc_needle		2795945	1					
ANR	2796312	Argument	lc_needle		2795945	0					
ANR	2796313	Identifier	lc_needle		2795945	0					
ANR	2796314	Argument	ZSTR_LEN ( lc_needle )		2795945	2					
ANR	2796315	CallExpression	ZSTR_LEN ( lc_needle )		2795945	0					
ANR	2796316	Callee	ZSTR_LEN		2795945	0					
ANR	2796317	Identifier	ZSTR_LEN		2795945	0					
ANR	2796318	ArgumentList	lc_needle		2795945	1					
ANR	2796319	Argument	lc_needle		2795945	0					
ANR	2796320	Identifier	lc_needle		2795945	0					
ANR	2796321	Argument	end		2795945	3					
ANR	2796322	Identifier	end		2795945	0					
ANR	2796323	AssignmentExpression	p = r + ZSTR_LEN ( lc_needle )	3316:101:81632:81658	2795945	2	True	=			
ANR	2796324	Identifier	p		2795945	0					
ANR	2796325	AdditiveExpression	r + ZSTR_LEN ( lc_needle )		2795945	1		+			
ANR	2796326	Identifier	r		2795945	0					
ANR	2796327	CallExpression	ZSTR_LEN ( lc_needle )		2795945	1					
ANR	2796328	Callee	ZSTR_LEN		2795945	0					
ANR	2796329	Identifier	ZSTR_LEN		2795945	0					
ANR	2796330	ArgumentList	lc_needle		2795945	1					
ANR	2796331	Argument	lc_needle		2795945	0					
ANR	2796332	Identifier	lc_needle		2795945	0					
ANR	2796333	CompoundStatement		49:130:1452:1452	2795945	3					
ANR	2796334	ExpressionStatement	"memcpy ( e , ZSTR_VAL ( haystack ) + ( p - lc_haystack ) , r - p )"	3317:4:81667:81723	2795945	0	True				
ANR	2796335	CallExpression	"memcpy ( e , ZSTR_VAL ( haystack ) + ( p - lc_haystack ) , r - p )"		2795945	0					
ANR	2796336	Callee	memcpy		2795945	0					
ANR	2796337	Identifier	memcpy		2795945	0					
ANR	2796338	ArgumentList	e		2795945	1					
ANR	2796339	Argument	e		2795945	0					
ANR	2796340	Identifier	e		2795945	0					
ANR	2796341	Argument	ZSTR_VAL ( haystack ) + ( p - lc_haystack )		2795945	1					
ANR	2796342	AdditiveExpression	ZSTR_VAL ( haystack ) + ( p - lc_haystack )		2795945	0		+			
ANR	2796343	CallExpression	ZSTR_VAL ( haystack )		2795945	0					
ANR	2796344	Callee	ZSTR_VAL		2795945	0					
ANR	2796345	Identifier	ZSTR_VAL		2795945	0					
ANR	2796346	ArgumentList	haystack		2795945	1					
ANR	2796347	Argument	haystack		2795945	0					
ANR	2796348	Identifier	haystack		2795945	0					
ANR	2796349	AdditiveExpression	p - lc_haystack		2795945	1		-			
ANR	2796350	Identifier	p		2795945	0					
ANR	2796351	Identifier	lc_haystack		2795945	1					
ANR	2796352	Argument	r - p		2795945	2					
ANR	2796353	AdditiveExpression	r - p		2795945	0		-			
ANR	2796354	Identifier	r		2795945	0					
ANR	2796355	Identifier	p		2795945	1					
ANR	2796356	ExpressionStatement	e += r - p	3318:4:81729:81739	2795945	1	True				
ANR	2796357	AssignmentExpression	e += r - p		2795945	0		+=			
ANR	2796358	Identifier	e		2795945	0					
ANR	2796359	AdditiveExpression	r - p		2795945	1		-			
ANR	2796360	Identifier	r		2795945	0					
ANR	2796361	Identifier	p		2795945	1					
ANR	2796362	ExpressionStatement	"memcpy ( e , str , str_len )"	3319:4:81745:81768	2795945	2	True				
ANR	2796363	CallExpression	"memcpy ( e , str , str_len )"		2795945	0					
ANR	2796364	Callee	memcpy		2795945	0					
ANR	2796365	Identifier	memcpy		2795945	0					
ANR	2796366	ArgumentList	e		2795945	1					
ANR	2796367	Argument	e		2795945	0					
ANR	2796368	Identifier	e		2795945	0					
ANR	2796369	Argument	str		2795945	1					
ANR	2796370	Identifier	str		2795945	0					
ANR	2796371	Argument	str_len		2795945	2					
ANR	2796372	Identifier	str_len		2795945	0					
ANR	2796373	ExpressionStatement	e += str_len	3320:4:81774:81786	2795945	3	True				
ANR	2796374	AssignmentExpression	e += str_len		2795945	0		+=			
ANR	2796375	Identifier	e		2795945	0					
ANR	2796376	Identifier	str_len		2795945	1					
ANR	2796377	ExpressionStatement	( * replace_count ) ++	3321:4:81792:81810	2795945	4	True				
ANR	2796378	PostIncDecOperationExpression	( * replace_count ) ++		2795945	0					
ANR	2796379	UnaryOperationExpression	* replace_count		2795945	0					
ANR	2796380	UnaryOperator	*		2795945	0					
ANR	2796381	Identifier	replace_count		2795945	1					
ANR	2796382	IncDec	++		2795945	1					
ANR	2796383	IfStatement	if ( p < end )		2795945	12					
ANR	2796384	Condition	p < end	3324:7:81825:81831	2795945	0	True				
ANR	2796385	RelationalExpression	p < end		2795945	0		<			
ANR	2796386	Identifier	p		2795945	0					
ANR	2796387	Identifier	end		2795945	1					
ANR	2796388	CompoundStatement		57:16:1625:1625	2795945	1					
ANR	2796389	ExpressionStatement	"memcpy ( e , ZSTR_VAL ( haystack ) + ( p - lc_haystack ) , end - p )"	3325:4:81840:81898	2795945	0	True				
ANR	2796390	CallExpression	"memcpy ( e , ZSTR_VAL ( haystack ) + ( p - lc_haystack ) , end - p )"		2795945	0					
ANR	2796391	Callee	memcpy		2795945	0					
ANR	2796392	Identifier	memcpy		2795945	0					
ANR	2796393	ArgumentList	e		2795945	1					
ANR	2796394	Argument	e		2795945	0					
ANR	2796395	Identifier	e		2795945	0					
ANR	2796396	Argument	ZSTR_VAL ( haystack ) + ( p - lc_haystack )		2795945	1					
ANR	2796397	AdditiveExpression	ZSTR_VAL ( haystack ) + ( p - lc_haystack )		2795945	0		+			
ANR	2796398	CallExpression	ZSTR_VAL ( haystack )		2795945	0					
ANR	2796399	Callee	ZSTR_VAL		2795945	0					
ANR	2796400	Identifier	ZSTR_VAL		2795945	0					
ANR	2796401	ArgumentList	haystack		2795945	1					
ANR	2796402	Argument	haystack		2795945	0					
ANR	2796403	Identifier	haystack		2795945	0					
ANR	2796404	AdditiveExpression	p - lc_haystack		2795945	1		-			
ANR	2796405	Identifier	p		2795945	0					
ANR	2796406	Identifier	lc_haystack		2795945	1					
ANR	2796407	Argument	end - p		2795945	2					
ANR	2796408	AdditiveExpression	end - p		2795945	0		-			
ANR	2796409	Identifier	end		2795945	0					
ANR	2796410	Identifier	p		2795945	1					
ANR	2796411	ExpressionStatement	e += end - p	3326:4:81904:81916	2795945	1	True				
ANR	2796412	AssignmentExpression	e += end - p		2795945	0		+=			
ANR	2796413	Identifier	e		2795945	0					
ANR	2796414	AdditiveExpression	end - p		2795945	1		-			
ANR	2796415	Identifier	end		2795945	0					
ANR	2796416	Identifier	p		2795945	1					
ANR	2796417	ExpressionStatement	* e = '\\0'	3328:3:81926:81935	2795945	13	True				
ANR	2796418	AssignmentExpression	* e = '\\0'		2795945	0		=			
ANR	2796419	UnaryOperationExpression	* e		2795945	0					
ANR	2796420	UnaryOperator	*		2795945	0					
ANR	2796421	Identifier	e		2795945	1					
ANR	2796422	PrimaryExpression	'\\0'		2795945	1					
ANR	2796423	ExpressionStatement	zend_string_release ( lc_needle )	3330:3:81941:81971	2795945	14	True				
ANR	2796424	CallExpression	zend_string_release ( lc_needle )		2795945	0					
ANR	2796425	Callee	zend_string_release		2795945	0					
ANR	2796426	Identifier	zend_string_release		2795945	0					
ANR	2796427	ArgumentList	lc_needle		2795945	1					
ANR	2796428	Argument	lc_needle		2795945	0					
ANR	2796429	Identifier	lc_needle		2795945	0					
ANR	2796430	ReturnStatement	return new_str ;	3332:3:81977:81991	2795945	15	True				
ANR	2796431	Identifier	new_str		2795945	0					
ANR	2796432	ElseStatement	else		2795945	0					
ANR	2796433	IfStatement	if ( ZSTR_LEN ( needle ) > ZSTR_LEN ( haystack ) )		2795945	0					
ANR	2796434	Condition	ZSTR_LEN ( needle ) > ZSTR_LEN ( haystack )	3334:12:82009:82045	2795945	0	True				
ANR	2796435	RelationalExpression	ZSTR_LEN ( needle ) > ZSTR_LEN ( haystack )		2795945	0		>			
ANR	2796436	CallExpression	ZSTR_LEN ( needle )		2795945	0					
ANR	2796437	Callee	ZSTR_LEN		2795945	0					
ANR	2796438	Identifier	ZSTR_LEN		2795945	0					
ANR	2796439	ArgumentList	needle		2795945	1					
ANR	2796440	Argument	needle		2795945	0					
ANR	2796441	Identifier	needle		2795945	0					
ANR	2796442	CallExpression	ZSTR_LEN ( haystack )		2795945	1					
ANR	2796443	Callee	ZSTR_LEN		2795945	0					
ANR	2796444	Identifier	ZSTR_LEN		2795945	0					
ANR	2796445	ArgumentList	haystack		2795945	1					
ANR	2796446	Argument	haystack		2795945	0					
ANR	2796447	Identifier	haystack		2795945	0					
ANR	2796448	CompoundStatement		67:51:1839:1839	2795945	1					
ANR	2796449	Label	nothing_todo :	3335:0:82050:82062	2795945	0	True				
ANR	2796450	Identifier	nothing_todo		2795945	0					
ANR	2796451	ReturnStatement	return zend_string_copy ( haystack ) ;	3336:2:82066:82099	2795945	1	True				
ANR	2796452	CallExpression	zend_string_copy ( haystack )		2795945	0					
ANR	2796453	Callee	zend_string_copy		2795945	0					
ANR	2796454	Identifier	zend_string_copy		2795945	0					
ANR	2796455	ArgumentList	haystack		2795945	1					
ANR	2796456	Argument	haystack		2795945	0					
ANR	2796457	Identifier	haystack		2795945	0					
ANR	2796458	ElseStatement	else		2795945	0					
ANR	2796459	CompoundStatement		70:8:1900:1900	2795945	0					
ANR	2796460	ExpressionStatement	lc_needle = php_string_tolower ( needle )	3338:2:82113:82151	2795945	0	True				
ANR	2796461	AssignmentExpression	lc_needle = php_string_tolower ( needle )		2795945	0		=			
ANR	2796462	Identifier	lc_needle		2795945	0					
ANR	2796463	CallExpression	php_string_tolower ( needle )		2795945	1					
ANR	2796464	Callee	php_string_tolower		2795945	0					
ANR	2796465	Identifier	php_string_tolower		2795945	0					
ANR	2796466	ArgumentList	needle		2795945	1					
ANR	2796467	Argument	needle		2795945	0					
ANR	2796468	Identifier	needle		2795945	0					
ANR	2796469	IfStatement	"if ( memcmp ( lc_haystack , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) ) )"		2795945	1					
ANR	2796470	Condition	"memcmp ( lc_haystack , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) )"	3340:6:82160:82220	2795945	0	True				
ANR	2796471	CallExpression	"memcmp ( lc_haystack , ZSTR_VAL ( lc_needle ) , ZSTR_LEN ( lc_needle ) )"		2795945	0					
ANR	2796472	Callee	memcmp		2795945	0					
ANR	2796473	Identifier	memcmp		2795945	0					
ANR	2796474	ArgumentList	lc_haystack		2795945	1					
ANR	2796475	Argument	lc_haystack		2795945	0					
ANR	2796476	Identifier	lc_haystack		2795945	0					
ANR	2796477	Argument	ZSTR_VAL ( lc_needle )		2795945	1					
ANR	2796478	CallExpression	ZSTR_VAL ( lc_needle )		2795945	0					
ANR	2796479	Callee	ZSTR_VAL		2795945	0					
ANR	2796480	Identifier	ZSTR_VAL		2795945	0					
ANR	2796481	ArgumentList	lc_needle		2795945	1					
ANR	2796482	Argument	lc_needle		2795945	0					
ANR	2796483	Identifier	lc_needle		2795945	0					
ANR	2796484	Argument	ZSTR_LEN ( lc_needle )		2795945	2					
ANR	2796485	CallExpression	ZSTR_LEN ( lc_needle )		2795945	0					
ANR	2796486	Callee	ZSTR_LEN		2795945	0					
ANR	2796487	Identifier	ZSTR_LEN		2795945	0					
ANR	2796488	ArgumentList	lc_needle		2795945	1					
ANR	2796489	Argument	lc_needle		2795945	0					
ANR	2796490	Identifier	lc_needle		2795945	0					
ANR	2796491	CompoundStatement		73:69:2014:2014	2795945	1					
ANR	2796492	ExpressionStatement	zend_string_release ( lc_needle )	3341:3:82228:82258	2795945	0	True				
ANR	2796493	CallExpression	zend_string_release ( lc_needle )		2795945	0					
ANR	2796494	Callee	zend_string_release		2795945	0					
ANR	2796495	Identifier	zend_string_release		2795945	0					
ANR	2796496	ArgumentList	lc_needle		2795945	1					
ANR	2796497	Argument	lc_needle		2795945	0					
ANR	2796498	Identifier	lc_needle		2795945	0					
ANR	2796499	GotoStatement	goto nothing_todo ;	3342:3:82263:82280	2795945	1	True				
ANR	2796500	Identifier	nothing_todo		2795945	0					
ANR	2796501	ExpressionStatement	zend_string_release ( lc_needle )	3344:2:82288:82318	2795945	2	True				
ANR	2796502	CallExpression	zend_string_release ( lc_needle )		2795945	0					
ANR	2796503	Callee	zend_string_release		2795945	0					
ANR	2796504	Identifier	zend_string_release		2795945	0					
ANR	2796505	ArgumentList	lc_needle		2795945	1					
ANR	2796506	Argument	lc_needle		2795945	0					
ANR	2796507	Identifier	lc_needle		2795945	0					
ANR	2796508	ExpressionStatement	"new_str = zend_string_init ( str , str_len , 0 )"	3346:2:82323:82366	2795945	3	True				
ANR	2796509	AssignmentExpression	"new_str = zend_string_init ( str , str_len , 0 )"		2795945	0		=			
ANR	2796510	Identifier	new_str		2795945	0					
ANR	2796511	CallExpression	"zend_string_init ( str , str_len , 0 )"		2795945	1					
ANR	2796512	Callee	zend_string_init		2795945	0					
ANR	2796513	Identifier	zend_string_init		2795945	0					
ANR	2796514	ArgumentList	str		2795945	1					
ANR	2796515	Argument	str		2795945	0					
ANR	2796516	Identifier	str		2795945	0					
ANR	2796517	Argument	str_len		2795945	1					
ANR	2796518	Identifier	str_len		2795945	0					
ANR	2796519	Argument	0		2795945	2					
ANR	2796520	PrimaryExpression	0		2795945	0					
ANR	2796521	ExpressionStatement	( * replace_count ) ++	3348:2:82371:82389	2795945	4	True				
ANR	2796522	PostIncDecOperationExpression	( * replace_count ) ++		2795945	0					
ANR	2796523	UnaryOperationExpression	* replace_count		2795945	0					
ANR	2796524	UnaryOperator	*		2795945	0					
ANR	2796525	Identifier	replace_count		2795945	1					
ANR	2796526	IncDec	++		2795945	1					
ANR	2796527	ReturnStatement	return new_str ;	3349:2:82393:82407	2795945	5	True				
ANR	2796528	Identifier	new_str		2795945	0					
ANR	2796529	ReturnType	static zend_string *		2795945	1					
ANR	2796530	Identifier	php_str_to_str_i_ex		2795945	2					
ANR	2796531	ParameterList	"zend_string * haystack , char * lc_haystack , zend_string * needle , char * str , size_t str_len , zend_long * replace_count"		2795945	3					
ANR	2796532	Parameter	zend_string * haystack	3266:40:80091:80111	2795945	0	True				
ANR	2796533	ParameterType	zend_string *		2795945	0					
ANR	2796534	Identifier	haystack		2795945	1					
ANR	2796535	Parameter	char * lc_haystack	3266:63:80114:80130	2795945	1	True				
ANR	2796536	ParameterType	char *		2795945	0					
ANR	2796537	Identifier	lc_haystack		2795945	1					
ANR	2796538	Parameter	zend_string * needle	3267:1:80134:80152	2795945	2	True				
ANR	2796539	ParameterType	zend_string *		2795945	0					
ANR	2796540	Identifier	needle		2795945	1					
ANR	2796541	Parameter	char * str	3267:22:80155:80163	2795945	3	True				
ANR	2796542	ParameterType	char *		2795945	0					
ANR	2796543	Identifier	str		2795945	1					
ANR	2796544	Parameter	size_t str_len	3267:33:80166:80179	2795945	4	True				
ANR	2796545	ParameterType	size_t		2795945	0					
ANR	2796546	Identifier	str_len		2795945	1					
ANR	2796547	Parameter	zend_long * replace_count	3267:49:80182:80205	2795945	5	True				
ANR	2796548	ParameterType	zend_long *		2795945	0					
ANR	2796549	Identifier	replace_count		2795945	1					
ANR	2796550	CFGEntryNode	ENTRY		2795945		True				
ANR	2796551	CFGExitNode	EXIT		2795945		True				
ANR	2796552	Symbol	lc_needle		2795945						
ANR	2796553	Symbol	* replace_count		2795945						
ANR	2796554	Symbol	replace_count		2795945						
ANR	2796555	Symbol	zend_string_init		2795945						
ANR	2796556	Symbol	new_str		2795945						
ANR	2796557	Symbol	haystack		2795945						
ANR	2796558	Symbol	memcmp		2795945						
ANR	2796559	Symbol	str_len		2795945						
ANR	2796560	Symbol	end		2795945						
ANR	2796561	Symbol	php_string_tolower		2795945						
ANR	2796562	Symbol	endp		2795945						
ANR	2796563	Symbol	zend_string_alloc		2795945						
ANR	2796564	Symbol	NULL		2795945						
ANR	2796565	Symbol	e		2795945						
ANR	2796566	Symbol	count		2795945						
ANR	2796567	Symbol	php_memnstr		2795945						
ANR	2796568	Symbol	zend_string_copy		2795945						
ANR	2796569	Symbol	n		2795945						
ANR	2796570	Symbol	ZSTR_VAL		2795945						
ANR	2796571	Symbol	o		2795945						
ANR	2796572	Symbol	* e		2795945						
ANR	2796573	Symbol	str		2795945						
ANR	2796574	Symbol	p		2795945						
ANR	2796575	Symbol	r		2795945						
ANR	2796576	Symbol	lc_haystack		2795945						
ANR	2796577	Symbol	s		2795945						
ANR	2796578	Symbol	ZSTR_LEN		2795945						
ANR	2796579	Symbol	needle		2795945						
ANR	2796580	Function	php_str_to_str	3356:0:82451:84148							
ANR	2796581	FunctionDef	"php_str_to_str (char * haystack , size_t length , char * needle , size_t needle_len , char * str , size_t str_len)"		2796580	0					
ANR	2796582	CompoundStatement		3357:0:82577:84148	2796580	0					
ANR	2796583	IdentifierDeclStatement	zend_string * new_str ;	3358:1:82580:82600	2796580	0	True				
ANR	2796584	IdentifierDecl	* new_str		2796580	0					
ANR	2796585	IdentifierDeclType	zend_string *		2796580	0					
ANR	2796586	Identifier	new_str		2796580	1					
ANR	2796587	IfStatement	if ( needle_len < length )		2796580	1					
ANR	2796588	Condition	needle_len < length	3360:5:82608:82626	2796580	0	True				
ANR	2796589	RelationalExpression	needle_len < length		2796580	0		<			
ANR	2796590	Identifier	needle_len		2796580	0					
ANR	2796591	Identifier	length		2796580	1					
ANR	2796592	CompoundStatement		6:2:68:87	2796580	1					
ANR	2796593	IdentifierDeclStatement	char * end ;	3361:2:82633:82642	2796580	0	True				
ANR	2796594	IdentifierDecl	* end		2796580	0					
ANR	2796595	IdentifierDeclType	char *		2796580	0					
ANR	2796596	Identifier	end		2796580	1					
ANR	2796597	IdentifierDeclStatement	"char * e , * s , * p , * r ;"	3362:2:82646:82665	2796580	1	True				
ANR	2796598	IdentifierDecl	* e		2796580	0					
ANR	2796599	IdentifierDeclType	char *		2796580	0					
ANR	2796600	Identifier	e		2796580	1					
ANR	2796601	IdentifierDecl	* s		2796580	1					
ANR	2796602	IdentifierDeclType	char *		2796580	0					
ANR	2796603	Identifier	s		2796580	1					
ANR	2796604	IdentifierDecl	* p		2796580	2					
ANR	2796605	IdentifierDeclType	char *		2796580	0					
ANR	2796606	Identifier	p		2796580	1					
ANR	2796607	IdentifierDecl	* r		2796580	3					
ANR	2796608	IdentifierDeclType	char *		2796580	0					
ANR	2796609	Identifier	r		2796580	1					
ANR	2796610	IfStatement	if ( needle_len == str_len )		2796580	2					
ANR	2796611	Condition	needle_len == str_len	3364:6:82674:82694	2796580	0	True				
ANR	2796612	EqualityExpression	needle_len == str_len		2796580	0		==			
ANR	2796613	Identifier	needle_len		2796580	0					
ANR	2796614	Identifier	str_len		2796580	1					
ANR	2796615	CompoundStatement		8:29:119:119	2796580	1					
ANR	2796616	ExpressionStatement	"new_str = zend_string_init ( haystack , length , 0 )"	3365:3:82702:82749	2796580	0	True				
ANR	2796617	AssignmentExpression	"new_str = zend_string_init ( haystack , length , 0 )"		2796580	0		=			
ANR	2796618	Identifier	new_str		2796580	0					
ANR	2796619	CallExpression	"zend_string_init ( haystack , length , 0 )"		2796580	1					
ANR	2796620	Callee	zend_string_init		2796580	0					
ANR	2796621	Identifier	zend_string_init		2796580	0					
ANR	2796622	ArgumentList	haystack		2796580	1					
ANR	2796623	Argument	haystack		2796580	0					
ANR	2796624	Identifier	haystack		2796580	0					
ANR	2796625	Argument	length		2796580	1					
ANR	2796626	Identifier	length		2796580	0					
ANR	2796627	Argument	0		2796580	2					
ANR	2796628	PrimaryExpression	0		2796580	0					
ANR	2796629	ExpressionStatement	end = ZSTR_VAL ( new_str ) + length	3366:3:82754:82786	2796580	1	True				
ANR	2796630	AssignmentExpression	end = ZSTR_VAL ( new_str ) + length		2796580	0		=			
ANR	2796631	Identifier	end		2796580	0					
ANR	2796632	AdditiveExpression	ZSTR_VAL ( new_str ) + length		2796580	1		+			
ANR	2796633	CallExpression	ZSTR_VAL ( new_str )		2796580	0					
ANR	2796634	Callee	ZSTR_VAL		2796580	0					
ANR	2796635	Identifier	ZSTR_VAL		2796580	0					
ANR	2796636	ArgumentList	new_str		2796580	1					
ANR	2796637	Argument	new_str		2796580	0					
ANR	2796638	Identifier	new_str		2796580	0					
ANR	2796639	Identifier	length		2796580	1					
ANR	2796640	ForStatement	"for ( p = ZSTR_VAL ( new_str ) ; ( r = ( char * ) php_memnstr ( p , needle , needle_len , end ) ) ; p = r + needle_len )"		2796580	2					
ANR	2796641	ForInit	p = ZSTR_VAL ( new_str ) ;	3367:8:82796:82817	2796580	0	True				
ANR	2796642	AssignmentExpression	p = ZSTR_VAL ( new_str )		2796580	0		=			
ANR	2796643	Identifier	p		2796580	0					
ANR	2796644	CallExpression	ZSTR_VAL ( new_str )		2796580	1					
ANR	2796645	Callee	ZSTR_VAL		2796580	0					
ANR	2796646	Identifier	ZSTR_VAL		2796580	0					
ANR	2796647	ArgumentList	new_str		2796580	1					
ANR	2796648	Argument	new_str		2796580	0					
ANR	2796649	Identifier	new_str		2796580	0					
ANR	2796650	Condition	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"	3367:31:82819:82870	2796580	1	True				
ANR	2796651	AssignmentExpression	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"		2796580	0		=			
ANR	2796652	Identifier	r		2796580	0					
ANR	2796653	CastExpression	"( char * ) php_memnstr ( p , needle , needle_len , end )"		2796580	1					
ANR	2796654	CastTarget	char *		2796580	0					
ANR	2796655	CallExpression	"php_memnstr ( p , needle , needle_len , end )"		2796580	1					
ANR	2796656	Callee	php_memnstr		2796580	0					
ANR	2796657	Identifier	php_memnstr		2796580	0					
ANR	2796658	ArgumentList	p		2796580	1					
ANR	2796659	Argument	p		2796580	0					
ANR	2796660	Identifier	p		2796580	0					
ANR	2796661	Argument	needle		2796580	1					
ANR	2796662	Identifier	needle		2796580	0					
ANR	2796663	Argument	needle_len		2796580	2					
ANR	2796664	Identifier	needle_len		2796580	0					
ANR	2796665	Argument	end		2796580	3					
ANR	2796666	Identifier	end		2796580	0					
ANR	2796667	AssignmentExpression	p = r + needle_len	3367:85:82873:82890	2796580	2	True	=			
ANR	2796668	Identifier	p		2796580	0					
ANR	2796669	AdditiveExpression	r + needle_len		2796580	1		+			
ANR	2796670	Identifier	r		2796580	0					
ANR	2796671	Identifier	needle_len		2796580	1					
ANR	2796672	CompoundStatement		11:105:315:315	2796580	3					
ANR	2796673	ExpressionStatement	"memcpy ( r , str , str_len )"	3368:4:82899:82922	2796580	0	True				
ANR	2796674	CallExpression	"memcpy ( r , str , str_len )"		2796580	0					
ANR	2796675	Callee	memcpy		2796580	0					
ANR	2796676	Identifier	memcpy		2796580	0					
ANR	2796677	ArgumentList	r		2796580	1					
ANR	2796678	Argument	r		2796580	0					
ANR	2796679	Identifier	r		2796580	0					
ANR	2796680	Argument	str		2796580	1					
ANR	2796681	Identifier	str		2796580	0					
ANR	2796682	Argument	str_len		2796580	2					
ANR	2796683	Identifier	str_len		2796580	0					
ANR	2796684	ReturnStatement	return new_str ;	3370:3:82932:82946	2796580	3	True				
ANR	2796685	Identifier	new_str		2796580	0					
ANR	2796686	ElseStatement	else		2796580	0					
ANR	2796687	CompoundStatement		15:9:379:379	2796580	0					
ANR	2796688	IfStatement	if ( str_len < needle_len )		2796580	0					
ANR	2796689	Condition	str_len < needle_len	3372:7:82966:82985	2796580	0	True				
ANR	2796690	RelationalExpression	str_len < needle_len		2796580	0		<			
ANR	2796691	Identifier	str_len		2796580	0					
ANR	2796692	Identifier	needle_len		2796580	1					
ANR	2796693	CompoundStatement		16:29:410:410	2796580	1					
ANR	2796694	ExpressionStatement	"new_str = zend_string_alloc ( length , 0 )"	3373:4:82994:83032	2796580	0	True				
ANR	2796695	AssignmentExpression	"new_str = zend_string_alloc ( length , 0 )"		2796580	0		=			
ANR	2796696	Identifier	new_str		2796580	0					
ANR	2796697	CallExpression	"zend_string_alloc ( length , 0 )"		2796580	1					
ANR	2796698	Callee	zend_string_alloc		2796580	0					
ANR	2796699	Identifier	zend_string_alloc		2796580	0					
ANR	2796700	ArgumentList	length		2796580	1					
ANR	2796701	Argument	length		2796580	0					
ANR	2796702	Identifier	length		2796580	0					
ANR	2796703	Argument	0		2796580	1					
ANR	2796704	PrimaryExpression	0		2796580	0					
ANR	2796705	ElseStatement	else		2796580	0					
ANR	2796706	CompoundStatement		22:4:540:563	2796580	0					
ANR	2796707	IdentifierDeclStatement	size_t count = 0 ;	3375:4:83050:83066	2796580	0	True				
ANR	2796708	IdentifierDecl	count = 0		2796580	0					
ANR	2796709	IdentifierDeclType	size_t		2796580	0					
ANR	2796710	Identifier	count		2796580	1					
ANR	2796711	AssignmentExpression	count = 0		2796580	2		=			
ANR	2796712	Identifier	count		2796580	0					
ANR	2796713	PrimaryExpression	0		2796580	1					
ANR	2796714	IdentifierDeclStatement	char * o = haystack ;	3376:4:83072:83090	2796580	1	True				
ANR	2796715	IdentifierDecl	* o = haystack		2796580	0					
ANR	2796716	IdentifierDeclType	char *		2796580	0					
ANR	2796717	Identifier	o		2796580	1					
ANR	2796718	AssignmentExpression	* o = haystack		2796580	2		=			
ANR	2796719	Identifier	haystack		2796580	0					
ANR	2796720	Identifier	haystack		2796580	1					
ANR	2796721	IdentifierDeclStatement	char * n = needle ;	3377:4:83096:83112	2796580	2	True				
ANR	2796722	IdentifierDecl	* n = needle		2796580	0					
ANR	2796723	IdentifierDeclType	char *		2796580	0					
ANR	2796724	Identifier	n		2796580	1					
ANR	2796725	AssignmentExpression	* n = needle		2796580	2		=			
ANR	2796726	Identifier	needle		2796580	0					
ANR	2796727	Identifier	needle		2796580	1					
ANR	2796728	IdentifierDeclStatement	char * endp = o + length ;	3378:4:83118:83141	2796580	3	True				
ANR	2796729	IdentifierDecl	* endp = o + length		2796580	0					
ANR	2796730	IdentifierDeclType	char *		2796580	0					
ANR	2796731	Identifier	endp		2796580	1					
ANR	2796732	AssignmentExpression	* endp = o + length		2796580	2		=			
ANR	2796733	Identifier	endp		2796580	0					
ANR	2796734	AdditiveExpression	o + length		2796580	1		+			
ANR	2796735	Identifier	o		2796580	0					
ANR	2796736	Identifier	length		2796580	1					
ANR	2796737	WhileStatement	"while ( ( o = ( char * ) php_memnstr ( o , n , needle_len , endp ) ) )"		2796580	4					
ANR	2796738	Condition	"o = ( char * ) php_memnstr ( o , n , needle_len , endp )"	3380:11:83155:83202	2796580	0	True				
ANR	2796739	AssignmentExpression	"o = ( char * ) php_memnstr ( o , n , needle_len , endp )"		2796580	0		=			
ANR	2796740	Identifier	o		2796580	0					
ANR	2796741	CastExpression	"( char * ) php_memnstr ( o , n , needle_len , endp )"		2796580	1					
ANR	2796742	CastTarget	char *		2796580	0					
ANR	2796743	CallExpression	"php_memnstr ( o , n , needle_len , endp )"		2796580	1					
ANR	2796744	Callee	php_memnstr		2796580	0					
ANR	2796745	Identifier	php_memnstr		2796580	0					
ANR	2796746	ArgumentList	o		2796580	1					
ANR	2796747	Argument	o		2796580	0					
ANR	2796748	Identifier	o		2796580	0					
ANR	2796749	Argument	n		2796580	1					
ANR	2796750	Identifier	n		2796580	0					
ANR	2796751	Argument	needle_len		2796580	2					
ANR	2796752	Identifier	needle_len		2796580	0					
ANR	2796753	Argument	endp		2796580	3					
ANR	2796754	Identifier	endp		2796580	0					
ANR	2796755	CompoundStatement		24:61:627:627	2796580	1					
ANR	2796756	ExpressionStatement	o += needle_len	3381:5:83212:83227	2796580	0	True				
ANR	2796757	AssignmentExpression	o += needle_len		2796580	0		+=			
ANR	2796758	Identifier	o		2796580	0					
ANR	2796759	Identifier	needle_len		2796580	1					
ANR	2796760	ExpressionStatement	count ++	3382:5:83234:83241	2796580	1	True				
ANR	2796761	PostIncDecOperationExpression	count ++		2796580	0					
ANR	2796762	Identifier	count		2796580	0					
ANR	2796763	IncDec	++		2796580	1					
ANR	2796764	IfStatement	if ( count == 0 )		2796580	5					
ANR	2796765	Condition	count == 0	3384:8:83257:83266	2796580	0	True				
ANR	2796766	EqualityExpression	count == 0		2796580	0		==			
ANR	2796767	Identifier	count		2796580	0					
ANR	2796768	PrimaryExpression	0		2796580	1					
ANR	2796769	CompoundStatement		28:20:691:691	2796580	1					
ANR	2796770	ExpressionStatement	"new_str = zend_string_init ( haystack , length , 0 )"	3386:5:83346:83393	2796580	0	True				
ANR	2796771	AssignmentExpression	"new_str = zend_string_init ( haystack , length , 0 )"		2796580	0		=			
ANR	2796772	Identifier	new_str		2796580	0					
ANR	2796773	CallExpression	"zend_string_init ( haystack , length , 0 )"		2796580	1					
ANR	2796774	Callee	zend_string_init		2796580	0					
ANR	2796775	Identifier	zend_string_init		2796580	0					
ANR	2796776	ArgumentList	haystack		2796580	1					
ANR	2796777	Argument	haystack		2796580	0					
ANR	2796778	Identifier	haystack		2796580	0					
ANR	2796779	Argument	length		2796580	1					
ANR	2796780	Identifier	length		2796580	0					
ANR	2796781	Argument	0		2796580	2					
ANR	2796782	PrimaryExpression	0		2796580	0					
ANR	2796783	ReturnStatement	return new_str ;	3387:5:83400:83414	2796580	1	True				
ANR	2796784	Identifier	new_str		2796580	0					
ANR	2796785	ElseStatement	else		2796580	0					
ANR	2796786	CompoundStatement		32:11:849:849	2796580	0					
ANR	2796787	ExpressionStatement	"new_str = zend_string_alloc ( count * ( str_len - needle_len ) + length , 0 )"	3389:5:83434:83505	2796580	0	True				
ANR	2796788	AssignmentExpression	"new_str = zend_string_alloc ( count * ( str_len - needle_len ) + length , 0 )"		2796580	0		=			
ANR	2796789	Identifier	new_str		2796580	0					
ANR	2796790	CallExpression	"zend_string_alloc ( count * ( str_len - needle_len ) + length , 0 )"		2796580	1					
ANR	2796791	Callee	zend_string_alloc		2796580	0					
ANR	2796792	Identifier	zend_string_alloc		2796580	0					
ANR	2796793	ArgumentList	count * ( str_len - needle_len ) + length		2796580	1					
ANR	2796794	Argument	count * ( str_len - needle_len ) + length		2796580	0					
ANR	2796795	AdditiveExpression	count * ( str_len - needle_len ) + length		2796580	0		+			
ANR	2796796	MultiplicativeExpression	count * ( str_len - needle_len )		2796580	0		*			
ANR	2796797	Identifier	count		2796580	0					
ANR	2796798	AdditiveExpression	str_len - needle_len		2796580	1		-			
ANR	2796799	Identifier	str_len		2796580	0					
ANR	2796800	Identifier	needle_len		2796580	1					
ANR	2796801	Identifier	length		2796580	1					
ANR	2796802	Argument	0		2796580	1					
ANR	2796803	PrimaryExpression	0		2796580	0					
ANR	2796804	ExpressionStatement	e = s = ZSTR_VAL ( new_str )	3393:3:83522:83547	2796580	1	True				
ANR	2796805	AssignmentExpression	e = s = ZSTR_VAL ( new_str )		2796580	0		=			
ANR	2796806	Identifier	e		2796580	0					
ANR	2796807	AssignmentExpression	s = ZSTR_VAL ( new_str )		2796580	1		=			
ANR	2796808	Identifier	s		2796580	0					
ANR	2796809	CallExpression	ZSTR_VAL ( new_str )		2796580	1					
ANR	2796810	Callee	ZSTR_VAL		2796580	0					
ANR	2796811	Identifier	ZSTR_VAL		2796580	0					
ANR	2796812	ArgumentList	new_str		2796580	1					
ANR	2796813	Argument	new_str		2796580	0					
ANR	2796814	Identifier	new_str		2796580	0					
ANR	2796815	ExpressionStatement	end = haystack + length	3394:3:83552:83575	2796580	2	True				
ANR	2796816	AssignmentExpression	end = haystack + length		2796580	0		=			
ANR	2796817	Identifier	end		2796580	0					
ANR	2796818	AdditiveExpression	haystack + length		2796580	1		+			
ANR	2796819	Identifier	haystack		2796580	0					
ANR	2796820	Identifier	length		2796580	1					
ANR	2796821	ForStatement	"for ( p = haystack ; ( r = ( char * ) php_memnstr ( p , needle , needle_len , end ) ) ; p = r + needle_len )"		2796580	3					
ANR	2796822	ForInit	p = haystack ;	3395:8:83585:83597	2796580	0	True				
ANR	2796823	AssignmentExpression	p = haystack		2796580	0		=			
ANR	2796824	Identifier	p		2796580	0					
ANR	2796825	Identifier	haystack		2796580	1					
ANR	2796826	Condition	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"	3395:22:83599:83650	2796580	1	True				
ANR	2796827	AssignmentExpression	"r = ( char * ) php_memnstr ( p , needle , needle_len , end )"		2796580	0		=			
ANR	2796828	Identifier	r		2796580	0					
ANR	2796829	CastExpression	"( char * ) php_memnstr ( p , needle , needle_len , end )"		2796580	1					
ANR	2796830	CastTarget	char *		2796580	0					
ANR	2796831	CallExpression	"php_memnstr ( p , needle , needle_len , end )"		2796580	1					
ANR	2796832	Callee	php_memnstr		2796580	0					
ANR	2796833	Identifier	php_memnstr		2796580	0					
ANR	2796834	ArgumentList	p		2796580	1					
ANR	2796835	Argument	p		2796580	0					
ANR	2796836	Identifier	p		2796580	0					
ANR	2796837	Argument	needle		2796580	1					
ANR	2796838	Identifier	needle		2796580	0					
ANR	2796839	Argument	needle_len		2796580	2					
ANR	2796840	Identifier	needle_len		2796580	0					
ANR	2796841	Argument	end		2796580	3					
ANR	2796842	Identifier	end		2796580	0					
ANR	2796843	AssignmentExpression	p = r + needle_len	3395:76:83653:83670	2796580	2	True	=			
ANR	2796844	Identifier	p		2796580	0					
ANR	2796845	AdditiveExpression	r + needle_len		2796580	1		+			
ANR	2796846	Identifier	r		2796580	0					
ANR	2796847	Identifier	needle_len		2796580	1					
ANR	2796848	CompoundStatement		39:96:1095:1095	2796580	3					
ANR	2796849	ExpressionStatement	"memcpy ( e , p , r - p )"	3396:4:83679:83698	2796580	0	True				
ANR	2796850	CallExpression	"memcpy ( e , p , r - p )"		2796580	0					
ANR	2796851	Callee	memcpy		2796580	0					
ANR	2796852	Identifier	memcpy		2796580	0					
ANR	2796853	ArgumentList	e		2796580	1					
ANR	2796854	Argument	e		2796580	0					
ANR	2796855	Identifier	e		2796580	0					
ANR	2796856	Argument	p		2796580	1					
ANR	2796857	Identifier	p		2796580	0					
ANR	2796858	Argument	r - p		2796580	2					
ANR	2796859	AdditiveExpression	r - p		2796580	0		-			
ANR	2796860	Identifier	r		2796580	0					
ANR	2796861	Identifier	p		2796580	1					
ANR	2796862	ExpressionStatement	e += r - p	3397:4:83704:83714	2796580	1	True				
ANR	2796863	AssignmentExpression	e += r - p		2796580	0		+=			
ANR	2796864	Identifier	e		2796580	0					
ANR	2796865	AdditiveExpression	r - p		2796580	1		-			
ANR	2796866	Identifier	r		2796580	0					
ANR	2796867	Identifier	p		2796580	1					
ANR	2796868	ExpressionStatement	"memcpy ( e , str , str_len )"	3398:4:83720:83743	2796580	2	True				
ANR	2796869	CallExpression	"memcpy ( e , str , str_len )"		2796580	0					
ANR	2796870	Callee	memcpy		2796580	0					
ANR	2796871	Identifier	memcpy		2796580	0					
ANR	2796872	ArgumentList	e		2796580	1					
ANR	2796873	Argument	e		2796580	0					
ANR	2796874	Identifier	e		2796580	0					
ANR	2796875	Argument	str		2796580	1					
ANR	2796876	Identifier	str		2796580	0					
ANR	2796877	Argument	str_len		2796580	2					
ANR	2796878	Identifier	str_len		2796580	0					
ANR	2796879	ExpressionStatement	e += str_len	3399:4:83749:83761	2796580	3	True				
ANR	2796880	AssignmentExpression	e += str_len		2796580	0		+=			
ANR	2796881	Identifier	e		2796580	0					
ANR	2796882	Identifier	str_len		2796580	1					
ANR	2796883	IfStatement	if ( p < end )		2796580	4					
ANR	2796884	Condition	p < end	3402:7:83776:83782	2796580	0	True				
ANR	2796885	RelationalExpression	p < end		2796580	0		<			
ANR	2796886	Identifier	p		2796580	0					
ANR	2796887	Identifier	end		2796580	1					
ANR	2796888	CompoundStatement		46:16:1207:1207	2796580	1					
ANR	2796889	ExpressionStatement	"memcpy ( e , p , end - p )"	3403:4:83791:83812	2796580	0	True				
ANR	2796890	CallExpression	"memcpy ( e , p , end - p )"		2796580	0					
ANR	2796891	Callee	memcpy		2796580	0					
ANR	2796892	Identifier	memcpy		2796580	0					
ANR	2796893	ArgumentList	e		2796580	1					
ANR	2796894	Argument	e		2796580	0					
ANR	2796895	Identifier	e		2796580	0					
ANR	2796896	Argument	p		2796580	1					
ANR	2796897	Identifier	p		2796580	0					
ANR	2796898	Argument	end - p		2796580	2					
ANR	2796899	AdditiveExpression	end - p		2796580	0		-			
ANR	2796900	Identifier	end		2796580	0					
ANR	2796901	Identifier	p		2796580	1					
ANR	2796902	ExpressionStatement	e += end - p	3404:4:83818:83830	2796580	1	True				
ANR	2796903	AssignmentExpression	e += end - p		2796580	0		+=			
ANR	2796904	Identifier	e		2796580	0					
ANR	2796905	AdditiveExpression	end - p		2796580	1		-			
ANR	2796906	Identifier	end		2796580	0					
ANR	2796907	Identifier	p		2796580	1					
ANR	2796908	ExpressionStatement	* e = '\\0'	3407:3:83841:83850	2796580	5	True				
ANR	2796909	AssignmentExpression	* e = '\\0'		2796580	0		=			
ANR	2796910	UnaryOperationExpression	* e		2796580	0					
ANR	2796911	UnaryOperator	*		2796580	0					
ANR	2796912	Identifier	e		2796580	1					
ANR	2796913	PrimaryExpression	'\\0'		2796580	1					
ANR	2796914	ExpressionStatement	"new_str = zend_string_truncate ( new_str , e - s , 0 )"	3408:3:83855:83904	2796580	6	True				
ANR	2796915	AssignmentExpression	"new_str = zend_string_truncate ( new_str , e - s , 0 )"		2796580	0		=			
ANR	2796916	Identifier	new_str		2796580	0					
ANR	2796917	CallExpression	"zend_string_truncate ( new_str , e - s , 0 )"		2796580	1					
ANR	2796918	Callee	zend_string_truncate		2796580	0					
ANR	2796919	Identifier	zend_string_truncate		2796580	0					
ANR	2796920	ArgumentList	new_str		2796580	1					
ANR	2796921	Argument	new_str		2796580	0					
ANR	2796922	Identifier	new_str		2796580	0					
ANR	2796923	Argument	e - s		2796580	1					
ANR	2796924	AdditiveExpression	e - s		2796580	0		-			
ANR	2796925	Identifier	e		2796580	0					
ANR	2796926	Identifier	s		2796580	1					
ANR	2796927	Argument	0		2796580	2					
ANR	2796928	PrimaryExpression	0		2796580	0					
ANR	2796929	ReturnStatement	return new_str ;	3409:3:83909:83923	2796580	7	True				
ANR	2796930	Identifier	new_str		2796580	0					
ANR	2796931	ElseStatement	else		2796580	0					
ANR	2796932	IfStatement	"if ( needle_len > length || memcmp ( haystack , needle , length ) )"		2796580	0					
ANR	2796933	Condition	"needle_len > length || memcmp ( haystack , needle , length )"	3411:12:83941:83995	2796580	0	True				
ANR	2796934	OrExpression	"needle_len > length || memcmp ( haystack , needle , length )"		2796580	0		||			
ANR	2796935	RelationalExpression	needle_len > length		2796580	0		>			
ANR	2796936	Identifier	needle_len		2796580	0					
ANR	2796937	Identifier	length		2796580	1					
ANR	2796938	CallExpression	"memcmp ( haystack , needle , length )"		2796580	1					
ANR	2796939	Callee	memcmp		2796580	0					
ANR	2796940	Identifier	memcmp		2796580	0					
ANR	2796941	ArgumentList	haystack		2796580	1					
ANR	2796942	Argument	haystack		2796580	0					
ANR	2796943	Identifier	haystack		2796580	0					
ANR	2796944	Argument	needle		2796580	1					
ANR	2796945	Identifier	needle		2796580	0					
ANR	2796946	Argument	length		2796580	2					
ANR	2796947	Identifier	length		2796580	0					
ANR	2796948	CompoundStatement		55:69:1420:1420	2796580	1					
ANR	2796949	ExpressionStatement	"new_str = zend_string_init ( haystack , length , 0 )"	3412:2:84002:84049	2796580	0	True				
ANR	2796950	AssignmentExpression	"new_str = zend_string_init ( haystack , length , 0 )"		2796580	0		=			
ANR	2796951	Identifier	new_str		2796580	0					
ANR	2796952	CallExpression	"zend_string_init ( haystack , length , 0 )"		2796580	1					
ANR	2796953	Callee	zend_string_init		2796580	0					
ANR	2796954	Identifier	zend_string_init		2796580	0					
ANR	2796955	ArgumentList	haystack		2796580	1					
ANR	2796956	Argument	haystack		2796580	0					
ANR	2796957	Identifier	haystack		2796580	0					
ANR	2796958	Argument	length		2796580	1					
ANR	2796959	Identifier	length		2796580	0					
ANR	2796960	Argument	0		2796580	2					
ANR	2796961	PrimaryExpression	0		2796580	0					
ANR	2796962	ReturnStatement	return new_str ;	3413:2:84053:84067	2796580	1	True				
ANR	2796963	Identifier	new_str		2796580	0					
ANR	2796964	ElseStatement	else		2796580	0					
ANR	2796965	CompoundStatement		58:8:1499:1499	2796580	0					
ANR	2796966	ExpressionStatement	"new_str = zend_string_init ( str , str_len , 0 )"	3415:2:84081:84124	2796580	0	True				
ANR	2796967	AssignmentExpression	"new_str = zend_string_init ( str , str_len , 0 )"		2796580	0		=			
ANR	2796968	Identifier	new_str		2796580	0					
ANR	2796969	CallExpression	"zend_string_init ( str , str_len , 0 )"		2796580	1					
ANR	2796970	Callee	zend_string_init		2796580	0					
ANR	2796971	Identifier	zend_string_init		2796580	0					
ANR	2796972	ArgumentList	str		2796580	1					
ANR	2796973	Argument	str		2796580	0					
ANR	2796974	Identifier	str		2796580	0					
ANR	2796975	Argument	str_len		2796580	1					
ANR	2796976	Identifier	str_len		2796580	0					
ANR	2796977	Argument	0		2796580	2					
ANR	2796978	PrimaryExpression	0		2796580	0					
ANR	2796979	ReturnStatement	return new_str ;	3417:2:84129:84143	2796580	1	True				
ANR	2796980	Identifier	new_str		2796580	0					
ANR	2796981	ReturnType	PHPAPI zend_string *		2796580	1					
ANR	2796982	Identifier	php_str_to_str		2796580	2					
ANR	2796983	ParameterList	"char * haystack , size_t length , char * needle , size_t needle_len , char * str , size_t str_len"		2796580	3					
ANR	2796984	Parameter	char * haystack	3356:35:82486:82499	2796580	0	True				
ANR	2796985	ParameterType	char *		2796580	0					
ANR	2796986	Identifier	haystack		2796580	1					
ANR	2796987	Parameter	size_t length	3356:51:82502:82514	2796580	1	True				
ANR	2796988	ParameterType	size_t		2796580	0					
ANR	2796989	Identifier	length		2796580	1					
ANR	2796990	Parameter	char * needle	3356:66:82517:82528	2796580	2	True				
ANR	2796991	ParameterType	char *		2796580	0					
ANR	2796992	Identifier	needle		2796580	1					
ANR	2796993	Parameter	size_t needle_len	3356:80:82531:82547	2796580	3	True				
ANR	2796994	ParameterType	size_t		2796580	0					
ANR	2796995	Identifier	needle_len		2796580	1					
ANR	2796996	Parameter	char * str	3356:99:82550:82558	2796580	4	True				
ANR	2796997	ParameterType	char *		2796580	0					
ANR	2796998	Identifier	str		2796580	1					
ANR	2796999	Parameter	size_t str_len	3356:110:82561:82574	2796580	5	True				
ANR	2797000	ParameterType	size_t		2796580	0					
ANR	2797001	Identifier	str_len		2796580	1					
ANR	2797002	CFGEntryNode	ENTRY		2796580		True				
ANR	2797003	CFGExitNode	EXIT		2796580		True				
ANR	2797004	Symbol	zend_string_alloc		2796580						
ANR	2797005	Symbol	zend_string_truncate		2796580						
ANR	2797006	Symbol	e		2796580						
ANR	2797007	Symbol	length		2796580						
ANR	2797008	Symbol	count		2796580						
ANR	2797009	Symbol	php_memnstr		2796580						
ANR	2797010	Symbol	n		2796580						
ANR	2797011	Symbol	ZSTR_VAL		2796580						
ANR	2797012	Symbol	o		2796580						
ANR	2797013	Symbol	* e		2796580						
ANR	2797014	Symbol	str		2796580						
ANR	2797015	Symbol	p		2796580						
ANR	2797016	Symbol	zend_string_init		2796580						
ANR	2797017	Symbol	new_str		2796580						
ANR	2797018	Symbol	r		2796580						
ANR	2797019	Symbol	haystack		2796580						
ANR	2797020	Symbol	s		2796580						
ANR	2797021	Symbol	memcmp		2796580						
ANR	2797022	Symbol	str_len		2796580						
ANR	2797023	Symbol	end		2796580						
ANR	2797024	Symbol	endp		2796580						
ANR	2797025	Symbol	needle		2796580						
ANR	2797026	Symbol	needle_len		2796580						
ANR	2797027	DeclStmt									
ANR	2797028	Decl							zval	zval *	from
ANR	2797029	DeclStmt									
ANR	2797030	Decl							zend_string	zend_string *	str
ANR	2797031	DeclStmt									
ANR	2797032	Decl							char	char *	to
ANR	2797033	DeclStmt									
ANR	2797034	Decl							size_t	size_t	to_len
ANR	2797035	DeclStmt									
ANR	2797036	Decl							int	int	ac
ANR	2797037	DeclStmt									
ANR	2797038	Decl							HashTable	HashTable *	pats
ANR	2797039	DeclStmt									
ANR	2797040	Decl							zend_long	zend_long	num_key
ANR	2797041	DeclStmt									
ANR	2797042	Decl							zend_string	zend_string *	str_key
ANR	2797043	Decl							zend_string	zend_string *	replace
ANR	2797044	DeclStmt									
ANR	2797045	Decl							zval	zval *	entry
ANR	2797046	Decl							zval	zval	tmp
ANR	2797047	DeclStmt									
ANR	2797048	Decl							zend_long	zend_long	dummy
ANR	2797049	DeclStmt									
ANR	2797050	Decl							zend_string	zend_string *	str
ANR	2797051	DeclStmt									
ANR	2797052	Decl							char	char *	e
ANR	2797053	Decl							char	char *	p
ANR	2797054	DeclStmt									
ANR	2797055	Decl							zend_string	zend_string *	n
ANR	2797056	Function	php_similar_str	3535:0:86624:87113							
ANR	2797057	FunctionDef	"php_similar_str (const char * txt1 , size_t len1 , const char * txt2 , size_t len2 , size_t * pos1 , size_t * pos2 , size_t * max)"		2797056	0					
ANR	2797058	CompoundStatement		3536:0:86755:87113	2797056	0					
ANR	2797059	IdentifierDeclStatement	"char * p , * q ;"	3537:1:86758:86769	2797056	0	True				
ANR	2797060	IdentifierDecl	* p		2797056	0					
ANR	2797061	IdentifierDeclType	char *		2797056	0					
ANR	2797062	Identifier	p		2797056	1					
ANR	2797063	IdentifierDecl	* q		2797056	1					
ANR	2797064	IdentifierDeclType	char *		2797056	0					
ANR	2797065	Identifier	q		2797056	1					
ANR	2797066	IdentifierDeclStatement	char * end1 = ( char * ) txt1 + len1 ;	3538:1:86772:86805	2797056	1	True				
ANR	2797067	IdentifierDecl	* end1 = ( char * ) txt1 + len1		2797056	0					
ANR	2797068	IdentifierDeclType	char *		2797056	0					
ANR	2797069	Identifier	end1		2797056	1					
ANR	2797070	AssignmentExpression	* end1 = ( char * ) txt1 + len1		2797056	2		=			
ANR	2797071	Identifier	end1		2797056	0					
ANR	2797072	AdditiveExpression	( char * ) txt1 + len1		2797056	1		+			
ANR	2797073	CastExpression	( char * ) txt1		2797056	0					
ANR	2797074	CastTarget	char *		2797056	0					
ANR	2797075	Identifier	txt1		2797056	1					
ANR	2797076	Identifier	len1		2797056	1					
ANR	2797077	IdentifierDeclStatement	char * end2 = ( char * ) txt2 + len2 ;	3539:1:86808:86841	2797056	2	True				
ANR	2797078	IdentifierDecl	* end2 = ( char * ) txt2 + len2		2797056	0					
ANR	2797079	IdentifierDeclType	char *		2797056	0					
ANR	2797080	Identifier	end2		2797056	1					
ANR	2797081	AssignmentExpression	* end2 = ( char * ) txt2 + len2		2797056	2		=			
ANR	2797082	Identifier	end2		2797056	0					
ANR	2797083	AdditiveExpression	( char * ) txt2 + len2		2797056	1		+			
ANR	2797084	CastExpression	( char * ) txt2		2797056	0					
ANR	2797085	CastTarget	char *		2797056	0					
ANR	2797086	Identifier	txt2		2797056	1					
ANR	2797087	Identifier	len2		2797056	1					
ANR	2797088	IdentifierDeclStatement	size_t l ;	3540:1:86844:86852	2797056	3	True				
ANR	2797089	IdentifierDecl	l		2797056	0					
ANR	2797090	IdentifierDeclType	size_t		2797056	0					
ANR	2797091	Identifier	l		2797056	1					
ANR	2797092	ExpressionStatement	* max = 0	3542:1:86856:86864	2797056	4	True				
ANR	2797093	AssignmentExpression	* max = 0		2797056	0		=			
ANR	2797094	UnaryOperationExpression	* max		2797056	0					
ANR	2797095	UnaryOperator	*		2797056	0					
ANR	2797096	Identifier	max		2797056	1					
ANR	2797097	PrimaryExpression	0		2797056	1					
ANR	2797098	ForStatement	for ( p = ( char * ) txt1 ; p < end1 ; p ++ )		2797056	5					
ANR	2797099	ForInit	p = ( char * ) txt1 ;	3543:6:86872:86889	2797056	0	True				
ANR	2797100	AssignmentExpression	p = ( char * ) txt1		2797056	0		=			
ANR	2797101	Identifier	p		2797056	0					
ANR	2797102	CastExpression	( char * ) txt1		2797056	1					
ANR	2797103	CastTarget	char *		2797056	0					
ANR	2797104	Identifier	txt1		2797056	1					
ANR	2797105	Condition	p < end1	3543:25:86891:86898	2797056	1	True				
ANR	2797106	RelationalExpression	p < end1		2797056	0		<			
ANR	2797107	Identifier	p		2797056	0					
ANR	2797108	Identifier	end1		2797056	1					
ANR	2797109	PostIncDecOperationExpression	p ++	3543:35:86901:86903	2797056	2	True				
ANR	2797110	Identifier	p		2797056	0					
ANR	2797111	IncDec	++		2797056	1					
ANR	2797112	CompoundStatement		8:40:150:150	2797056	3					
ANR	2797113	ForStatement	for ( q = ( char * ) txt2 ; q < end2 ; q ++ )		2797056	0					
ANR	2797114	ForInit	q = ( char * ) txt2 ;	3544:7:86915:86932	2797056	0	True				
ANR	2797115	AssignmentExpression	q = ( char * ) txt2		2797056	0		=			
ANR	2797116	Identifier	q		2797056	0					
ANR	2797117	CastExpression	( char * ) txt2		2797056	1					
ANR	2797118	CastTarget	char *		2797056	0					
ANR	2797119	Identifier	txt2		2797056	1					
ANR	2797120	Condition	q < end2	3544:26:86934:86941	2797056	1	True				
ANR	2797121	RelationalExpression	q < end2		2797056	0		<			
ANR	2797122	Identifier	q		2797056	0					
ANR	2797123	Identifier	end2		2797056	1					
ANR	2797124	PostIncDecOperationExpression	q ++	3544:36:86944:86946	2797056	2	True				
ANR	2797125	Identifier	q		2797056	0					
ANR	2797126	IncDec	++		2797056	1					
ANR	2797127	CompoundStatement		9:41:193:193	2797056	3					
ANR	2797128	ForStatement	for ( l = 0 ; ( p + l < end1 ) && ( q + l < end2 ) && ( p [ l ] == q [ l ] ) ; l ++ )		2797056	0					
ANR	2797129	ForInit	l = 0 ;	3545:8:86959:86964	2797056	0	True				
ANR	2797130	AssignmentExpression	l = 0		2797056	0		=			
ANR	2797131	Identifier	l		2797056	0					
ANR	2797132	PrimaryExpression	0		2797056	1					
ANR	2797133	Condition	( p + l < end1 ) && ( q + l < end2 ) && ( p [ l ] == q [ l ] )	3545:15:86966:87015	2797056	1	True				
ANR	2797134	AndExpression	( p + l < end1 ) && ( q + l < end2 ) && ( p [ l ] == q [ l ] )		2797056	0		&&			
ANR	2797135	RelationalExpression	p + l < end1		2797056	0		<			
ANR	2797136	AdditiveExpression	p + l		2797056	0		+			
ANR	2797137	Identifier	p		2797056	0					
ANR	2797138	Identifier	l		2797056	1					
ANR	2797139	Identifier	end1		2797056	1					
ANR	2797140	AndExpression	( q + l < end2 ) && ( p [ l ] == q [ l ] )		2797056	1		&&			
ANR	2797141	RelationalExpression	q + l < end2		2797056	0		<			
ANR	2797142	AdditiveExpression	q + l		2797056	0		+			
ANR	2797143	Identifier	q		2797056	0					
ANR	2797144	Identifier	l		2797056	1					
ANR	2797145	Identifier	end2		2797056	1					
ANR	2797146	EqualityExpression	p [ l ] == q [ l ]		2797056	1		==			
ANR	2797147	ArrayIndexing	p [ l ]		2797056	0					
ANR	2797148	Identifier	p		2797056	0					
ANR	2797149	Identifier	l		2797056	1					
ANR	2797150	ArrayIndexing	q [ l ]		2797056	1					
ANR	2797151	Identifier	q		2797056	0					
ANR	2797152	Identifier	l		2797056	1					
ANR	2797153	PostIncDecOperationExpression	l ++	3545:67:87018:87020	2797056	2	True				
ANR	2797154	Identifier	l		2797056	0					
ANR	2797155	IncDec	++		2797056	1					
ANR	2797156	ExpressionStatement		3545:71:87022:87022	2797056	3	True				
ANR	2797157	IfStatement	if ( l > * max )		2797056	1					
ANR	2797158	Condition	l > * max	3546:7:87031:87038	2797056	0	True				
ANR	2797159	RelationalExpression	l > * max		2797056	0		>			
ANR	2797160	Identifier	l		2797056	0					
ANR	2797161	UnaryOperationExpression	* max		2797056	1					
ANR	2797162	UnaryOperator	*		2797056	0					
ANR	2797163	Identifier	max		2797056	1					
ANR	2797164	CompoundStatement		11:17:285:285	2797056	1					
ANR	2797165	ExpressionStatement	* max = l	3547:4:87047:87055	2797056	0	True				
ANR	2797166	AssignmentExpression	* max = l		2797056	0		=			
ANR	2797167	UnaryOperationExpression	* max		2797056	0					
ANR	2797168	UnaryOperator	*		2797056	0					
ANR	2797169	Identifier	max		2797056	1					
ANR	2797170	Identifier	l		2797056	1					
ANR	2797171	ExpressionStatement	* pos1 = p - txt1	3548:4:87061:87077	2797056	1	True				
ANR	2797172	AssignmentExpression	* pos1 = p - txt1		2797056	0		=			
ANR	2797173	UnaryOperationExpression	* pos1		2797056	0					
ANR	2797174	UnaryOperator	*		2797056	0					
ANR	2797175	Identifier	pos1		2797056	1					
ANR	2797176	AdditiveExpression	p - txt1		2797056	1		-			
ANR	2797177	Identifier	p		2797056	0					
ANR	2797178	Identifier	txt1		2797056	1					
ANR	2797179	ExpressionStatement	* pos2 = q - txt2	3549:4:87083:87099	2797056	2	True				
ANR	2797180	AssignmentExpression	* pos2 = q - txt2		2797056	0		=			
ANR	2797181	UnaryOperationExpression	* pos2		2797056	0					
ANR	2797182	UnaryOperator	*		2797056	0					
ANR	2797183	Identifier	pos2		2797056	1					
ANR	2797184	AdditiveExpression	q - txt2		2797056	1		-			
ANR	2797185	Identifier	q		2797056	0					
ANR	2797186	Identifier	txt2		2797056	1					
ANR	2797187	ReturnType	static void		2797056	1					
ANR	2797188	Identifier	php_similar_str		2797056	2					
ANR	2797189	ParameterList	"const char * txt1 , size_t len1 , const char * txt2 , size_t len2 , size_t * pos1 , size_t * pos2 , size_t * max"		2797056	3					
ANR	2797190	Parameter	const char * txt1	3535:28:86652:86667	2797056	0	True				
ANR	2797191	ParameterType	const char *		2797056	0					
ANR	2797192	Identifier	txt1		2797056	1					
ANR	2797193	Parameter	size_t len1	3535:46:86670:86680	2797056	1	True				
ANR	2797194	ParameterType	size_t		2797056	0					
ANR	2797195	Identifier	len1		2797056	1					
ANR	2797196	Parameter	const char * txt2	3535:59:86683:86698	2797056	2	True				
ANR	2797197	ParameterType	const char *		2797056	0					
ANR	2797198	Identifier	txt2		2797056	1					
ANR	2797199	Parameter	size_t len2	3535:77:86701:86711	2797056	3	True				
ANR	2797200	ParameterType	size_t		2797056	0					
ANR	2797201	Identifier	len2		2797056	1					
ANR	2797202	Parameter	size_t * pos1	3535:90:86714:86725	2797056	4	True				
ANR	2797203	ParameterType	size_t *		2797056	0					
ANR	2797204	Identifier	pos1		2797056	1					
ANR	2797205	Parameter	size_t * pos2	3535:104:86728:86739	2797056	5	True				
ANR	2797206	ParameterType	size_t *		2797056	0					
ANR	2797207	Identifier	pos2		2797056	1					
ANR	2797208	Parameter	size_t * max	3535:118:86742:86752	2797056	6	True				
ANR	2797209	ParameterType	size_t *		2797056	0					
ANR	2797210	Identifier	max		2797056	1					
ANR	2797211	CFGEntryNode	ENTRY		2797056		True				
ANR	2797212	CFGExitNode	EXIT		2797056		True				
ANR	2797213	Symbol	max		2797056						
ANR	2797214	Symbol	pos1		2797056						
ANR	2797215	Symbol	pos2		2797056						
ANR	2797216	Symbol	l		2797056						
ANR	2797217	Symbol	len1		2797056						
ANR	2797218	Symbol	* max		2797056						
ANR	2797219	Symbol	len2		2797056						
ANR	2797220	Symbol	p		2797056						
ANR	2797221	Symbol	* pos1		2797056						
ANR	2797222	Symbol	q		2797056						
ANR	2797223	Symbol	txt2		2797056						
ANR	2797224	Symbol	* l		2797056						
ANR	2797225	Symbol	txt1		2797056						
ANR	2797226	Symbol	* pos2		2797056						
ANR	2797227	Symbol	end2		2797056						
ANR	2797228	Symbol	end1		2797056						
ANR	2797229	Symbol	* p		2797056						
ANR	2797230	Symbol	* q		2797056						
ANR	2797231	Function	php_similar_char	3558:0:87154:87651							
ANR	2797232	FunctionDef	"php_similar_char (const char * txt1 , size_t len1 , const char * txt2 , size_t len2)"		2797231	0					
ANR	2797233	CompoundStatement		3559:0:87247:87651	2797231	0					
ANR	2797234	IdentifierDeclStatement	size_t sum ;	3560:1:87250:87260	2797231	0	True				
ANR	2797235	IdentifierDecl	sum		2797231	0					
ANR	2797236	IdentifierDeclType	size_t		2797231	0					
ANR	2797237	Identifier	sum		2797231	1					
ANR	2797238	IdentifierDeclStatement	"size_t pos1 = 0 , pos2 = 0 , max ;"	3561:1:87263:87293	2797231	1	True				
ANR	2797239	IdentifierDecl	pos1 = 0		2797231	0					
ANR	2797240	IdentifierDeclType	size_t		2797231	0					
ANR	2797241	Identifier	pos1		2797231	1					
ANR	2797242	AssignmentExpression	pos1 = 0		2797231	2		=			
ANR	2797243	Identifier	pos1		2797231	0					
ANR	2797244	PrimaryExpression	0		2797231	1					
ANR	2797245	IdentifierDecl	pos2 = 0		2797231	1					
ANR	2797246	IdentifierDeclType	size_t		2797231	0					
ANR	2797247	Identifier	pos2		2797231	1					
ANR	2797248	AssignmentExpression	pos2 = 0		2797231	2		=			
ANR	2797249	Identifier	pos2		2797231	0					
ANR	2797250	PrimaryExpression	0		2797231	1					
ANR	2797251	IdentifierDecl	max		2797231	2					
ANR	2797252	IdentifierDeclType	size_t		2797231	0					
ANR	2797253	Identifier	max		2797231	1					
ANR	2797254	ExpressionStatement	"php_similar_str ( txt1 , len1 , txt2 , len2 , & pos1 , & pos2 , & max )"	3563:1:87297:87356	2797231	2	True				
ANR	2797255	CallExpression	"php_similar_str ( txt1 , len1 , txt2 , len2 , & pos1 , & pos2 , & max )"		2797231	0					
ANR	2797256	Callee	php_similar_str		2797231	0					
ANR	2797257	Identifier	php_similar_str		2797231	0					
ANR	2797258	ArgumentList	txt1		2797231	1					
ANR	2797259	Argument	txt1		2797231	0					
ANR	2797260	Identifier	txt1		2797231	0					
ANR	2797261	Argument	len1		2797231	1					
ANR	2797262	Identifier	len1		2797231	0					
ANR	2797263	Argument	txt2		2797231	2					
ANR	2797264	Identifier	txt2		2797231	0					
ANR	2797265	Argument	len2		2797231	3					
ANR	2797266	Identifier	len2		2797231	0					
ANR	2797267	Argument	& pos1		2797231	4					
ANR	2797268	UnaryOperationExpression	& pos1		2797231	0					
ANR	2797269	UnaryOperator	&		2797231	0					
ANR	2797270	Identifier	pos1		2797231	1					
ANR	2797271	Argument	& pos2		2797231	5					
ANR	2797272	UnaryOperationExpression	& pos2		2797231	0					
ANR	2797273	UnaryOperator	&		2797231	0					
ANR	2797274	Identifier	pos2		2797231	1					
ANR	2797275	Argument	& max		2797231	6					
ANR	2797276	UnaryOperationExpression	& max		2797231	0					
ANR	2797277	UnaryOperator	&		2797231	0					
ANR	2797278	Identifier	max		2797231	1					
ANR	2797279	IfStatement	if ( ( sum = max ) )		2797231	3					
ANR	2797280	Condition	sum = max	3564:5:87363:87373	2797231	0	True				
ANR	2797281	AssignmentExpression	sum = max		2797231	0		=			
ANR	2797282	Identifier	sum		2797231	0					
ANR	2797283	Identifier	max		2797231	1					
ANR	2797284	CompoundStatement		6:18:128:128	2797231	1					
ANR	2797285	IfStatement	if ( pos1 && pos2 )		2797231	0					
ANR	2797286	Condition	pos1 && pos2	3565:6:87384:87395	2797231	0	True				
ANR	2797287	AndExpression	pos1 && pos2		2797231	0		&&			
ANR	2797288	Identifier	pos1		2797231	0					
ANR	2797289	Identifier	pos2		2797231	1					
ANR	2797290	CompoundStatement		7:20:150:150	2797231	1					
ANR	2797291	ExpressionStatement	"sum += php_similar_char ( txt1 , pos1 , txt2 , pos2 )"	3566:3:87403:87459	2797231	0	True				
ANR	2797292	AssignmentExpression	"sum += php_similar_char ( txt1 , pos1 , txt2 , pos2 )"		2797231	0		+=			
ANR	2797293	Identifier	sum		2797231	0					
ANR	2797294	CallExpression	"php_similar_char ( txt1 , pos1 , txt2 , pos2 )"		2797231	1					
ANR	2797295	Callee	php_similar_char		2797231	0					
ANR	2797296	Identifier	php_similar_char		2797231	0					
ANR	2797297	ArgumentList	txt1		2797231	1					
ANR	2797298	Argument	txt1		2797231	0					
ANR	2797299	Identifier	txt1		2797231	0					
ANR	2797300	Argument	pos1		2797231	1					
ANR	2797301	Identifier	pos1		2797231	0					
ANR	2797302	Argument	txt2		2797231	2					
ANR	2797303	Identifier	txt2		2797231	0					
ANR	2797304	Argument	pos2		2797231	3					
ANR	2797305	Identifier	pos2		2797231	0					
ANR	2797306	IfStatement	if ( ( pos1 + max < len1 ) && ( pos2 + max < len2 ) )		2797231	1					
ANR	2797307	Condition	( pos1 + max < len1 ) && ( pos2 + max < len2 )	3569:6:87471:87512	2797231	0	True				
ANR	2797308	AndExpression	( pos1 + max < len1 ) && ( pos2 + max < len2 )		2797231	0		&&			
ANR	2797309	RelationalExpression	pos1 + max < len1		2797231	0		<			
ANR	2797310	AdditiveExpression	pos1 + max		2797231	0		+			
ANR	2797311	Identifier	pos1		2797231	0					
ANR	2797312	Identifier	max		2797231	1					
ANR	2797313	Identifier	len1		2797231	1					
ANR	2797314	RelationalExpression	pos2 + max < len2		2797231	1		<			
ANR	2797315	AdditiveExpression	pos2 + max		2797231	0		+			
ANR	2797316	Identifier	pos2		2797231	0					
ANR	2797317	Identifier	max		2797231	1					
ANR	2797318	Identifier	len2		2797231	1					
ANR	2797319	CompoundStatement		11:50:267:267	2797231	1					
ANR	2797320	ExpressionStatement	"sum += php_similar_char ( txt1 + pos1 + max , len1 - pos1 - max , txt2 + pos2 + max , len2 - pos2 - max )"	3570:3:87520:87628	2797231	0	True				
ANR	2797321	AssignmentExpression	"sum += php_similar_char ( txt1 + pos1 + max , len1 - pos1 - max , txt2 + pos2 + max , len2 - pos2 - max )"		2797231	0		+=			
ANR	2797322	Identifier	sum		2797231	0					
ANR	2797323	CallExpression	"php_similar_char ( txt1 + pos1 + max , len1 - pos1 - max , txt2 + pos2 + max , len2 - pos2 - max )"		2797231	1					
ANR	2797324	Callee	php_similar_char		2797231	0					
ANR	2797325	Identifier	php_similar_char		2797231	0					
ANR	2797326	ArgumentList	txt1 + pos1 + max		2797231	1					
ANR	2797327	Argument	txt1 + pos1 + max		2797231	0					
ANR	2797328	AdditiveExpression	txt1 + pos1 + max		2797231	0		+			
ANR	2797329	Identifier	txt1		2797231	0					
ANR	2797330	AdditiveExpression	pos1 + max		2797231	1		+			
ANR	2797331	Identifier	pos1		2797231	0					
ANR	2797332	Identifier	max		2797231	1					
ANR	2797333	Argument	len1 - pos1 - max		2797231	1					
ANR	2797334	AdditiveExpression	len1 - pos1 - max		2797231	0		-			
ANR	2797335	Identifier	len1		2797231	0					
ANR	2797336	AdditiveExpression	pos1 - max		2797231	1		-			
ANR	2797337	Identifier	pos1		2797231	0					
ANR	2797338	Identifier	max		2797231	1					
ANR	2797339	Argument	txt2 + pos2 + max		2797231	2					
ANR	2797340	AdditiveExpression	txt2 + pos2 + max		2797231	0		+			
ANR	2797341	Identifier	txt2		2797231	0					
ANR	2797342	AdditiveExpression	pos2 + max		2797231	1		+			
ANR	2797343	Identifier	pos2		2797231	0					
ANR	2797344	Identifier	max		2797231	1					
ANR	2797345	Argument	len2 - pos2 - max		2797231	3					
ANR	2797346	AdditiveExpression	len2 - pos2 - max		2797231	0		-			
ANR	2797347	Identifier	len2		2797231	0					
ANR	2797348	AdditiveExpression	pos2 - max		2797231	1		-			
ANR	2797349	Identifier	pos2		2797231	0					
ANR	2797350	Identifier	max		2797231	1					
ANR	2797351	ReturnStatement	return sum ;	3575:1:87639:87649	2797231	4	True				
ANR	2797352	Identifier	sum		2797231	0					
ANR	2797353	ReturnType	static size_t		2797231	1					
ANR	2797354	Identifier	php_similar_char		2797231	2					
ANR	2797355	ParameterList	"const char * txt1 , size_t len1 , const char * txt2 , size_t len2"		2797231	3					
ANR	2797356	Parameter	const char * txt1	3558:31:87185:87200	2797231	0	True				
ANR	2797357	ParameterType	const char *		2797231	0					
ANR	2797358	Identifier	txt1		2797231	1					
ANR	2797359	Parameter	size_t len1	3558:49:87203:87213	2797231	1	True				
ANR	2797360	ParameterType	size_t		2797231	0					
ANR	2797361	Identifier	len1		2797231	1					
ANR	2797362	Parameter	const char * txt2	3558:62:87216:87231	2797231	2	True				
ANR	2797363	ParameterType	const char *		2797231	0					
ANR	2797364	Identifier	txt2		2797231	1					
ANR	2797365	Parameter	size_t len2	3558:80:87234:87244	2797231	3	True				
ANR	2797366	ParameterType	size_t		2797231	0					
ANR	2797367	Identifier	len2		2797231	1					
ANR	2797368	CFGEntryNode	ENTRY		2797231		True				
ANR	2797369	CFGExitNode	EXIT		2797231		True				
ANR	2797370	Symbol	txt2		2797231						
ANR	2797371	Symbol	max		2797231						
ANR	2797372	Symbol	txt1		2797231						
ANR	2797373	Symbol	& pos2		2797231						
ANR	2797374	Symbol	& pos1		2797231						
ANR	2797375	Symbol	pos1		2797231						
ANR	2797376	Symbol	sum		2797231						
ANR	2797377	Symbol	pos2		2797231						
ANR	2797378	Symbol	php_similar_char		2797231						
ANR	2797379	Symbol	& max		2797231						
ANR	2797380	Symbol	len1		2797231						
ANR	2797381	Symbol	len2		2797231						
ANR	2797382	DeclStmt									
ANR	2797383	Decl							zend_string	zend_string *	t1
ANR	2797384	Decl							zend_string	zend_string *	t2
ANR	2797385	DeclStmt									
ANR	2797386	Decl							zval	zval *	percent
ANR	2797387	DeclStmt									
ANR	2797388	Decl							int	int	ac
ANR	2797389	DeclStmt									
ANR	2797390	Decl							size_t	size_t	sim
ANR	2797391	Function	php_stripslashes	3617:0:88445:88899							
ANR	2797392	FunctionDef	php_stripslashes (zend_string * str)		2797391	0					
ANR	2797393	CompoundStatement		3618:0:88492:88899	2797391	0					
ANR	2797394	IdentifierDeclStatement	"char * s , * t ;"	3619:1:88495:88506	2797391	0	True				
ANR	2797395	IdentifierDecl	* s		2797391	0					
ANR	2797396	IdentifierDeclType	char *		2797391	0					
ANR	2797397	Identifier	s		2797391	1					
ANR	2797398	IdentifierDecl	* t		2797391	1					
ANR	2797399	IdentifierDeclType	char *		2797391	0					
ANR	2797400	Identifier	t		2797391	1					
ANR	2797401	IdentifierDeclStatement	size_t l ;	3620:1:88509:88517	2797391	1	True				
ANR	2797402	IdentifierDecl	l		2797391	0					
ANR	2797403	IdentifierDeclType	size_t		2797391	0					
ANR	2797404	Identifier	l		2797391	1					
ANR	2797405	ExpressionStatement	s = ZSTR_VAL ( str )	3622:1:88521:88538	2797391	2	True				
ANR	2797406	AssignmentExpression	s = ZSTR_VAL ( str )		2797391	0		=			
ANR	2797407	Identifier	s		2797391	0					
ANR	2797408	CallExpression	ZSTR_VAL ( str )		2797391	1					
ANR	2797409	Callee	ZSTR_VAL		2797391	0					
ANR	2797410	Identifier	ZSTR_VAL		2797391	0					
ANR	2797411	ArgumentList	str		2797391	1					
ANR	2797412	Argument	str		2797391	0					
ANR	2797413	Identifier	str		2797391	0					
ANR	2797414	ExpressionStatement	t = ZSTR_VAL ( str )	3623:1:88541:88558	2797391	3	True				
ANR	2797415	AssignmentExpression	t = ZSTR_VAL ( str )		2797391	0		=			
ANR	2797416	Identifier	t		2797391	0					
ANR	2797417	CallExpression	ZSTR_VAL ( str )		2797391	1					
ANR	2797418	Callee	ZSTR_VAL		2797391	0					
ANR	2797419	Identifier	ZSTR_VAL		2797391	0					
ANR	2797420	ArgumentList	str		2797391	1					
ANR	2797421	Argument	str		2797391	0					
ANR	2797422	Identifier	str		2797391	0					
ANR	2797423	ExpressionStatement	l = ZSTR_LEN ( str )	3624:1:88561:88578	2797391	4	True				
ANR	2797424	AssignmentExpression	l = ZSTR_LEN ( str )		2797391	0		=			
ANR	2797425	Identifier	l		2797391	0					
ANR	2797426	CallExpression	ZSTR_LEN ( str )		2797391	1					
ANR	2797427	Callee	ZSTR_LEN		2797391	0					
ANR	2797428	Identifier	ZSTR_LEN		2797391	0					
ANR	2797429	ArgumentList	str		2797391	1					
ANR	2797430	Argument	str		2797391	0					
ANR	2797431	Identifier	str		2797391	0					
ANR	2797432	WhileStatement	while ( l > 0 )		2797391	5					
ANR	2797433	Condition	l > 0	3626:8:88589:88593	2797391	0	True				
ANR	2797434	RelationalExpression	l > 0		2797391	0		>			
ANR	2797435	Identifier	l		2797391	0					
ANR	2797436	PrimaryExpression	0		2797391	1					
ANR	2797437	CompoundStatement		9:15:103:103	2797391	1					
ANR	2797438	IfStatement	if ( * t == '\\\\' )		2797391	0					
ANR	2797439	Condition	* t == '\\\\'	3627:6:88604:88613	2797391	0	True				
ANR	2797440	EqualityExpression	* t == '\\\\'		2797391	0		==			
ANR	2797441	UnaryOperationExpression	* t		2797391	0					
ANR	2797442	UnaryOperator	*		2797391	0					
ANR	2797443	Identifier	t		2797391	1					
ANR	2797444	PrimaryExpression	'\\\\'		2797391	1					
ANR	2797445	CompoundStatement		10:18:123:123	2797391	1					
ANR	2797446	ExpressionStatement	t ++	3628:3:88621:88624	2797391	0	True				
ANR	2797447	PostIncDecOperationExpression	t ++		2797391	0					
ANR	2797448	Identifier	t		2797391	0					
ANR	2797449	IncDec	++		2797391	1					
ANR	2797450	ExpressionStatement	ZSTR_LEN ( str ) --	3629:3:88653:88668	2797391	1	True				
ANR	2797451	PostIncDecOperationExpression	ZSTR_LEN ( str ) --		2797391	0					
ANR	2797452	CallExpression	ZSTR_LEN ( str )		2797391	0					
ANR	2797453	Callee	ZSTR_LEN		2797391	0					
ANR	2797454	Identifier	ZSTR_LEN		2797391	0					
ANR	2797455	ArgumentList	str		2797391	1					
ANR	2797456	Argument	str		2797391	0					
ANR	2797457	Identifier	str		2797391	0					
ANR	2797458	IncDec	--		2797391	1					
ANR	2797459	ExpressionStatement	l --	3630:3:88673:88676	2797391	2	True				
ANR	2797460	PostIncDecOperationExpression	l --		2797391	0					
ANR	2797461	Identifier	l		2797391	0					
ANR	2797462	IncDec	--		2797391	1					
ANR	2797463	IfStatement	if ( l > 0 )		2797391	3					
ANR	2797464	Condition	l > 0	3631:7:88685:88689	2797391	0	True				
ANR	2797465	RelationalExpression	l > 0		2797391	0		>			
ANR	2797466	Identifier	l		2797391	0					
ANR	2797467	PrimaryExpression	0		2797391	1					
ANR	2797468	CompoundStatement		14:14:199:199	2797391	1					
ANR	2797469	IfStatement	if ( * t == '0' )		2797391	0					
ANR	2797470	Condition	* t == '0'	3632:8:88702:88710	2797391	0	True				
ANR	2797471	EqualityExpression	* t == '0'		2797391	0		==			
ANR	2797472	UnaryOperationExpression	* t		2797391	0					
ANR	2797473	UnaryOperator	*		2797391	0					
ANR	2797474	Identifier	t		2797391	1					
ANR	2797475	PrimaryExpression	'0'		2797391	1					
ANR	2797476	CompoundStatement		15:19:220:220	2797391	1					
ANR	2797477	ExpressionStatement	* s ++ = '\\0'	3633:5:88720:88729	2797391	0	True				
ANR	2797478	AssignmentExpression	* s ++ = '\\0'		2797391	0		=			
ANR	2797479	UnaryOperationExpression	* s ++		2797391	0					
ANR	2797480	UnaryOperator	*		2797391	0					
ANR	2797481	PostIncDecOperationExpression	s ++		2797391	1					
ANR	2797482	Identifier	s		2797391	0					
ANR	2797483	IncDec	++		2797391	1					
ANR	2797484	PrimaryExpression	'\\0'		2797391	1					
ANR	2797485	ExpressionStatement	t ++	3634:5:88736:88739	2797391	1	True				
ANR	2797486	PostIncDecOperationExpression	t ++		2797391	0					
ANR	2797487	Identifier	t		2797391	0					
ANR	2797488	IncDec	++		2797391	1					
ANR	2797489	ElseStatement	else		2797391	0					
ANR	2797490	CompoundStatement		18:11:259:259	2797391	0					
ANR	2797491	ExpressionStatement	* s ++ = * t ++	3636:5:88759:88770	2797391	0	True				
ANR	2797492	AssignmentExpression	* s ++ = * t ++		2797391	0		=			
ANR	2797493	UnaryOperationExpression	* s ++		2797391	0					
ANR	2797494	UnaryOperator	*		2797391	0					
ANR	2797495	PostIncDecOperationExpression	s ++		2797391	1					
ANR	2797496	Identifier	s		2797391	0					
ANR	2797497	IncDec	++		2797391	1					
ANR	2797498	UnaryOperationExpression	* t ++		2797391	1					
ANR	2797499	UnaryOperator	*		2797391	0					
ANR	2797500	PostIncDecOperationExpression	t ++		2797391	1					
ANR	2797501	Identifier	t		2797391	0					
ANR	2797502	IncDec	++		2797391	1					
ANR	2797503	ExpressionStatement	l --	3638:4:88816:88819	2797391	1	True				
ANR	2797504	PostIncDecOperationExpression	l --		2797391	0					
ANR	2797505	Identifier	l		2797391	0					
ANR	2797506	IncDec	--		2797391	1					
ANR	2797507	ElseStatement	else		2797391	0					
ANR	2797508	CompoundStatement		23:9:342:342	2797391	0					
ANR	2797509	ExpressionStatement	* s ++ = * t ++	3641:3:88840:88851	2797391	0	True				
ANR	2797510	AssignmentExpression	* s ++ = * t ++		2797391	0		=			
ANR	2797511	UnaryOperationExpression	* s ++		2797391	0					
ANR	2797512	UnaryOperator	*		2797391	0					
ANR	2797513	PostIncDecOperationExpression	s ++		2797391	1					
ANR	2797514	Identifier	s		2797391	0					
ANR	2797515	IncDec	++		2797391	1					
ANR	2797516	UnaryOperationExpression	* t ++		2797391	1					
ANR	2797517	UnaryOperator	*		2797391	0					
ANR	2797518	PostIncDecOperationExpression	t ++		2797391	1					
ANR	2797519	Identifier	t		2797391	0					
ANR	2797520	IncDec	++		2797391	1					
ANR	2797521	ExpressionStatement	l --	3642:3:88856:88859	2797391	1	True				
ANR	2797522	PostIncDecOperationExpression	l --		2797391	0					
ANR	2797523	Identifier	l		2797391	0					
ANR	2797524	IncDec	--		2797391	1					
ANR	2797525	IfStatement	if ( s != t )		2797391	6					
ANR	2797526	Condition	s != t	3645:5:88873:88878	2797391	0	True				
ANR	2797527	EqualityExpression	s != t		2797391	0		!=			
ANR	2797528	Identifier	s		2797391	0					
ANR	2797529	Identifier	t		2797391	1					
ANR	2797530	CompoundStatement		28:13:388:388	2797391	1					
ANR	2797531	ExpressionStatement	* s = '\\0'	3646:2:88885:88894	2797391	0	True				
ANR	2797532	AssignmentExpression	* s = '\\0'		2797391	0		=			
ANR	2797533	UnaryOperationExpression	* s		2797391	0					
ANR	2797534	UnaryOperator	*		2797391	0					
ANR	2797535	Identifier	s		2797391	1					
ANR	2797536	PrimaryExpression	'\\0'		2797391	1					
ANR	2797537	ReturnType	PHPAPI void		2797391	1					
ANR	2797538	Identifier	php_stripslashes		2797391	2					
ANR	2797539	ParameterList	zend_string * str		2797391	3					
ANR	2797540	Parameter	zend_string * str	3617:29:88474:88489	2797391	0	True				
ANR	2797541	ParameterType	zend_string *		2797391	0					
ANR	2797542	Identifier	str		2797391	1					
ANR	2797543	CFGEntryNode	ENTRY		2797391		True				
ANR	2797544	CFGExitNode	EXIT		2797391		True				
ANR	2797545	Symbol	str		2797391						
ANR	2797546	Symbol	* s ++		2797391						
ANR	2797547	Symbol	* t ++		2797391						
ANR	2797548	Symbol	s		2797391						
ANR	2797549	Symbol	t		2797391						
ANR	2797550	Symbol	ZSTR_LEN		2797391						
ANR	2797551	Symbol	l		2797391						
ANR	2797552	Symbol	* s		2797391						
ANR	2797553	Symbol	* t		2797391						
ANR	2797554	Symbol	ZSTR_VAL		2797391						
ANR	2797555	DeclStmt									
ANR	2797556	Decl							zend_string	zend_string *	str
ANR	2797557	Decl							zend_string	zend_string *	what
ANR	2797558	DeclStmt									
ANR	2797559	Decl							zend_string	zend_string *	str
ANR	2797560	DeclStmt									
ANR	2797561	Decl							zend_string	zend_string *	str
ANR	2797562	DeclStmt									
ANR	2797563	Decl							zend_string	zend_string *	str
ANR	2797564	Function	php_strerror	3730:0:90757:91038							
ANR	2797565	FunctionDef	php_strerror (int errnum)		2797564	0					
ANR	2797566	CompoundStatement		3731:0:90788:91038	2797564	0					
ANR	2797567	IdentifierDeclStatement	extern int sys_nerr ;	3732:1:90791:90810	2797564	0	True				
ANR	2797568	IdentifierDecl	sys_nerr		2797564	0					
ANR	2797569	IdentifierDeclType	extern int		2797564	0					
ANR	2797570	Identifier	sys_nerr		2797564	1					
ANR	2797571	IdentifierDeclStatement	extern char * sys_errlist [ ] ;	3733:1:90813:90839	2797564	1	True				
ANR	2797572	IdentifierDecl	* sys_errlist [ ]		2797564	0					
ANR	2797573	IdentifierDeclType	extern char * [ ]		2797564	0					
ANR	2797574	Identifier	sys_errlist		2797564	1					
ANR	2797575	IfStatement	if ( ( unsigned int ) errnum < sys_nerr )		2797564	2					
ANR	2797576	Condition	( unsigned int ) errnum < sys_nerr	3735:5:90847:90878	2797564	0	True				
ANR	2797577	RelationalExpression	( unsigned int ) errnum < sys_nerr		2797564	0		<			
ANR	2797578	CastExpression	( unsigned int ) errnum		2797564	0					
ANR	2797579	CastTarget	unsigned int		2797564	0					
ANR	2797580	Identifier	errnum		2797564	1					
ANR	2797581	Identifier	sys_nerr		2797564	1					
ANR	2797582	CompoundStatement		5:39:92:92	2797564	1					
ANR	2797583	ReturnStatement	return ( sys_errlist [ errnum ] ) ;	3736:2:90885:90912	2797564	0	True				
ANR	2797584	ArrayIndexing	sys_errlist [ errnum ]		2797564	0					
ANR	2797585	Identifier	sys_errlist		2797564	0					
ANR	2797586	Identifier	errnum		2797564	1					
ANR	2797587	ExpressionStatement	"( void ) snprintf ( BG ( str_ebuf ) , sizeof ( php_basic_globals . str_ebuf ) , ""Unknown error: %d"" , errnum )"	3739:1:90919:91013	2797564	3	True				
ANR	2797588	CastExpression	"( void ) snprintf ( BG ( str_ebuf ) , sizeof ( php_basic_globals . str_ebuf ) , ""Unknown error: %d"" , errnum )"		2797564	0					
ANR	2797589	CastTarget	void		2797564	0					
ANR	2797590	CallExpression	"snprintf ( BG ( str_ebuf ) , sizeof ( php_basic_globals . str_ebuf ) , ""Unknown error: %d"" , errnum )"		2797564	1					
ANR	2797591	Callee	snprintf		2797564	0					
ANR	2797592	Identifier	snprintf		2797564	0					
ANR	2797593	ArgumentList	BG ( str_ebuf )		2797564	1					
ANR	2797594	Argument	BG ( str_ebuf )		2797564	0					
ANR	2797595	CallExpression	BG ( str_ebuf )		2797564	0					
ANR	2797596	Callee	BG		2797564	0					
ANR	2797597	Identifier	BG		2797564	0					
ANR	2797598	ArgumentList	str_ebuf		2797564	1					
ANR	2797599	Argument	str_ebuf		2797564	0					
ANR	2797600	Identifier	str_ebuf		2797564	0					
ANR	2797601	Argument	sizeof ( php_basic_globals . str_ebuf )		2797564	1					
ANR	2797602	SizeofExpression	sizeof ( php_basic_globals . str_ebuf )		2797564	0					
ANR	2797603	Sizeof	sizeof		2797564	0					
ANR	2797604	MemberAccess	php_basic_globals . str_ebuf		2797564	1					
ANR	2797605	Identifier	php_basic_globals		2797564	0					
ANR	2797606	Identifier	str_ebuf		2797564	1					
ANR	2797607	Argument	"""Unknown error: %d"""		2797564	2					
ANR	2797608	PrimaryExpression	"""Unknown error: %d"""		2797564	0					
ANR	2797609	Argument	errnum		2797564	3					
ANR	2797610	Identifier	errnum		2797564	0					
ANR	2797611	ReturnStatement	return ( BG ( str_ebuf ) ) ;	3740:1:91016:91036	2797564	4	True				
ANR	2797612	CallExpression	BG ( str_ebuf )		2797564	0					
ANR	2797613	Callee	BG		2797564	0					
ANR	2797614	Identifier	BG		2797564	0					
ANR	2797615	ArgumentList	str_ebuf		2797564	1					
ANR	2797616	Argument	str_ebuf		2797564	0					
ANR	2797617	Identifier	str_ebuf		2797564	0					
ANR	2797618	ReturnType	char *		2797564	1					
ANR	2797619	Identifier	php_strerror		2797564	2					
ANR	2797620	ParameterList	int errnum		2797564	3					
ANR	2797621	Parameter	int errnum	3730:19:90776:90785	2797564	0	True				
ANR	2797622	ParameterType	int		2797564	0					
ANR	2797623	Identifier	errnum		2797564	1					
ANR	2797624	CFGEntryNode	ENTRY		2797564		True				
ANR	2797625	CFGExitNode	EXIT		2797564		True				
ANR	2797626	Symbol	* sys_errlist		2797564						
ANR	2797627	Symbol	str_ebuf		2797564						
ANR	2797628	Symbol	errnum		2797564						
ANR	2797629	Symbol	BG		2797564						
ANR	2797630	Symbol	sys_errlist		2797564						
ANR	2797631	Symbol	php_basic_globals . str_ebuf		2797564						
ANR	2797632	Symbol	* errnum		2797564						
ANR	2797633	Symbol	php_basic_globals		2797564						
ANR	2797634	Symbol	sys_nerr		2797564						
ANR	2797635	Function	php_stripcslashes	3747:0:91087:92601							
ANR	2797636	FunctionDef	php_stripcslashes (zend_string * str)		2797635	0					
ANR	2797637	CompoundStatement		3748:0:91135:92601	2797635	0					
ANR	2797638	IdentifierDeclStatement	"char * source , * target , * end ;"	3749:1:91138:91165	2797635	0	True				
ANR	2797639	IdentifierDecl	* source		2797635	0					
ANR	2797640	IdentifierDeclType	char *		2797635	0					
ANR	2797641	Identifier	source		2797635	1					
ANR	2797642	IdentifierDecl	* target		2797635	1					
ANR	2797643	IdentifierDeclType	char *		2797635	0					
ANR	2797644	Identifier	target		2797635	1					
ANR	2797645	IdentifierDecl	* end		2797635	2					
ANR	2797646	IdentifierDeclType	char *		2797635	0					
ANR	2797647	Identifier	end		2797635	1					
ANR	2797648	IdentifierDeclStatement	"size_t nlen = ZSTR_LEN ( str ) , i ;"	3750:1:91168:91199	2797635	1	True				
ANR	2797649	IdentifierDecl	nlen = ZSTR_LEN ( str )		2797635	0					
ANR	2797650	IdentifierDeclType	size_t		2797635	0					
ANR	2797651	Identifier	nlen		2797635	1					
ANR	2797652	AssignmentExpression	nlen = ZSTR_LEN ( str )		2797635	2		=			
ANR	2797653	Identifier	nlen		2797635	0					
ANR	2797654	CallExpression	ZSTR_LEN ( str )		2797635	1					
ANR	2797655	Callee	ZSTR_LEN		2797635	0					
ANR	2797656	Identifier	ZSTR_LEN		2797635	0					
ANR	2797657	ArgumentList	str		2797635	1					
ANR	2797658	Argument	str		2797635	0					
ANR	2797659	Identifier	str		2797635	0					
ANR	2797660	IdentifierDecl	i		2797635	1					
ANR	2797661	IdentifierDeclType	size_t		2797635	0					
ANR	2797662	Identifier	i		2797635	1					
ANR	2797663	IdentifierDeclStatement	char numtmp [ 4 ] ;	3751:1:91202:91216	2797635	2	True				
ANR	2797664	IdentifierDecl	numtmp [ 4 ]		2797635	0					
ANR	2797665	IdentifierDeclType	char [ 4 ]		2797635	0					
ANR	2797666	Identifier	numtmp		2797635	1					
ANR	2797667	PrimaryExpression	4		2797635	2					
ANR	2797668	ForStatement	"for ( source = ( char * ) ZSTR_VAL ( str ) , end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( str ) ; source < end ; source ++ )"		2797635	3					
ANR	2797669	ForInit	"source = ( char * ) ZSTR_VAL ( str ) , end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( str ) ;"	3753:6:91225:91308	2797635	0	True				
ANR	2797670	Expression	"source = ( char * ) ZSTR_VAL ( str ) , end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( str )"		2797635	0					
ANR	2797671	AssignmentExpression	source = ( char * ) ZSTR_VAL ( str )		2797635	0		=			
ANR	2797672	Identifier	source		2797635	0					
ANR	2797673	CastExpression	( char * ) ZSTR_VAL ( str )		2797635	1					
ANR	2797674	CastTarget	char *		2797635	0					
ANR	2797675	CallExpression	ZSTR_VAL ( str )		2797635	1					
ANR	2797676	Callee	ZSTR_VAL		2797635	0					
ANR	2797677	Identifier	ZSTR_VAL		2797635	0					
ANR	2797678	ArgumentList	str		2797635	1					
ANR	2797679	Argument	str		2797635	0					
ANR	2797680	Identifier	str		2797635	0					
ANR	2797681	Expression	"end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( str )"		2797635	1					
ANR	2797682	AssignmentExpression	end = source + ZSTR_LEN ( str )		2797635	0		=			
ANR	2797683	Identifier	end		2797635	0					
ANR	2797684	AdditiveExpression	source + ZSTR_LEN ( str )		2797635	1		+			
ANR	2797685	Identifier	source		2797635	0					
ANR	2797686	CallExpression	ZSTR_LEN ( str )		2797635	1					
ANR	2797687	Callee	ZSTR_LEN		2797635	0					
ANR	2797688	Identifier	ZSTR_LEN		2797635	0					
ANR	2797689	ArgumentList	str		2797635	1					
ANR	2797690	Argument	str		2797635	0					
ANR	2797691	Identifier	str		2797635	0					
ANR	2797692	AssignmentExpression	target = ZSTR_VAL ( str )		2797635	1		=			
ANR	2797693	Identifier	target		2797635	0					
ANR	2797694	CallExpression	ZSTR_VAL ( str )		2797635	1					
ANR	2797695	Callee	ZSTR_VAL		2797635	0					
ANR	2797696	Identifier	ZSTR_VAL		2797635	0					
ANR	2797697	ArgumentList	str		2797635	1					
ANR	2797698	Argument	str		2797635	0					
ANR	2797699	Identifier	str		2797635	0					
ANR	2797700	Condition	source < end	3753:91:91310:91321	2797635	1	True				
ANR	2797701	RelationalExpression	source < end		2797635	0		<			
ANR	2797702	Identifier	source		2797635	0					
ANR	2797703	Identifier	end		2797635	1					
ANR	2797704	PostIncDecOperationExpression	source ++	3753:105:91324:91331	2797635	2	True				
ANR	2797705	Identifier	source		2797635	0					
ANR	2797706	IncDec	++		2797635	1					
ANR	2797707	CompoundStatement		6:115:198:198	2797635	3					
ANR	2797708	IfStatement	if ( * source == '\\\\' && source + 1 < end )		2797635	0					
ANR	2797709	Condition	* source == '\\\\' && source + 1 < end	3754:6:91342:91376	2797635	0	True				
ANR	2797710	AndExpression	* source == '\\\\' && source + 1 < end		2797635	0		&&			
ANR	2797711	EqualityExpression	* source == '\\\\'		2797635	0		==			
ANR	2797712	UnaryOperationExpression	* source		2797635	0					
ANR	2797713	UnaryOperator	*		2797635	0					
ANR	2797714	Identifier	source		2797635	1					
ANR	2797715	PrimaryExpression	'\\\\'		2797635	1					
ANR	2797716	RelationalExpression	source + 1 < end		2797635	1		<			
ANR	2797717	AdditiveExpression	source + 1		2797635	0		+			
ANR	2797718	Identifier	source		2797635	0					
ANR	2797719	PrimaryExpression	1		2797635	1					
ANR	2797720	Identifier	end		2797635	1					
ANR	2797721	CompoundStatement		7:43:243:243	2797635	1					
ANR	2797722	ExpressionStatement	source ++	3755:3:91384:91392	2797635	0	True				
ANR	2797723	PostIncDecOperationExpression	source ++		2797635	0					
ANR	2797724	Identifier	source		2797635	0					
ANR	2797725	IncDec	++		2797635	1					
ANR	2797726	SwitchStatement	switch ( * source )		2797635	1					
ANR	2797727	Condition	* source	3756:11:91405:91411	2797635	0	True				
ANR	2797728	UnaryOperationExpression	* source		2797635	0					
ANR	2797729	UnaryOperator	*		2797635	0					
ANR	2797730	Identifier	source		2797635	1					
ANR	2797731	CompoundStatement		9:20:278:278	2797635	1					
ANR	2797732	Label	case 'n' :	3757:4:91420:91428	2797635	0	True				
ANR	2797733	ExpressionStatement	* target ++ = '\\n'	3757:15:91431:91445	2797635	1	True				
ANR	2797734	AssignmentExpression	* target ++ = '\\n'		2797635	0		=			
ANR	2797735	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797736	UnaryOperator	*		2797635	0					
ANR	2797737	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797738	Identifier	target		2797635	0					
ANR	2797739	IncDec	++		2797635	1					
ANR	2797740	PrimaryExpression	'\\n'		2797635	1					
ANR	2797741	ExpressionStatement	nlen --	3757:31:91447:91453	2797635	2	True				
ANR	2797742	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797743	Identifier	nlen		2797635	0					
ANR	2797744	IncDec	--		2797635	1					
ANR	2797745	BreakStatement	break ;	3757:39:91455:91460	2797635	3	True				
ANR	2797746	Label	case 'r' :	3758:4:91466:91474	2797635	4	True				
ANR	2797747	ExpressionStatement	* target ++ = '\\r'	3758:15:91477:91491	2797635	5	True				
ANR	2797748	AssignmentExpression	* target ++ = '\\r'		2797635	0		=			
ANR	2797749	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797750	UnaryOperator	*		2797635	0					
ANR	2797751	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797752	Identifier	target		2797635	0					
ANR	2797753	IncDec	++		2797635	1					
ANR	2797754	PrimaryExpression	'\\r'		2797635	1					
ANR	2797755	ExpressionStatement	nlen --	3758:31:91493:91499	2797635	6	True				
ANR	2797756	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797757	Identifier	nlen		2797635	0					
ANR	2797758	IncDec	--		2797635	1					
ANR	2797759	BreakStatement	break ;	3758:39:91501:91506	2797635	7	True				
ANR	2797760	Label	case 'a' :	3759:4:91512:91520	2797635	8	True				
ANR	2797761	ExpressionStatement	* target ++ = '\\a'	3759:15:91523:91537	2797635	9	True				
ANR	2797762	AssignmentExpression	* target ++ = '\\a'		2797635	0		=			
ANR	2797763	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797764	UnaryOperator	*		2797635	0					
ANR	2797765	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797766	Identifier	target		2797635	0					
ANR	2797767	IncDec	++		2797635	1					
ANR	2797768	PrimaryExpression	'\\a'		2797635	1					
ANR	2797769	ExpressionStatement	nlen --	3759:31:91539:91545	2797635	10	True				
ANR	2797770	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797771	Identifier	nlen		2797635	0					
ANR	2797772	IncDec	--		2797635	1					
ANR	2797773	BreakStatement	break ;	3759:39:91547:91552	2797635	11	True				
ANR	2797774	Label	case 't' :	3760:4:91558:91566	2797635	12	True				
ANR	2797775	ExpressionStatement	* target ++ = '\\t'	3760:15:91569:91583	2797635	13	True				
ANR	2797776	AssignmentExpression	* target ++ = '\\t'		2797635	0		=			
ANR	2797777	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797778	UnaryOperator	*		2797635	0					
ANR	2797779	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797780	Identifier	target		2797635	0					
ANR	2797781	IncDec	++		2797635	1					
ANR	2797782	PrimaryExpression	'\\t'		2797635	1					
ANR	2797783	ExpressionStatement	nlen --	3760:31:91585:91591	2797635	14	True				
ANR	2797784	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797785	Identifier	nlen		2797635	0					
ANR	2797786	IncDec	--		2797635	1					
ANR	2797787	BreakStatement	break ;	3760:39:91593:91598	2797635	15	True				
ANR	2797788	Label	case 'v' :	3761:4:91604:91612	2797635	16	True				
ANR	2797789	ExpressionStatement	* target ++ = '\\v'	3761:15:91615:91629	2797635	17	True				
ANR	2797790	AssignmentExpression	* target ++ = '\\v'		2797635	0		=			
ANR	2797791	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797792	UnaryOperator	*		2797635	0					
ANR	2797793	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797794	Identifier	target		2797635	0					
ANR	2797795	IncDec	++		2797635	1					
ANR	2797796	PrimaryExpression	'\\v'		2797635	1					
ANR	2797797	ExpressionStatement	nlen --	3761:31:91631:91637	2797635	18	True				
ANR	2797798	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797799	Identifier	nlen		2797635	0					
ANR	2797800	IncDec	--		2797635	1					
ANR	2797801	BreakStatement	break ;	3761:39:91639:91644	2797635	19	True				
ANR	2797802	Label	case 'b' :	3762:4:91650:91658	2797635	20	True				
ANR	2797803	ExpressionStatement	* target ++ = '\\b'	3762:15:91661:91675	2797635	21	True				
ANR	2797804	AssignmentExpression	* target ++ = '\\b'		2797635	0		=			
ANR	2797805	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797806	UnaryOperator	*		2797635	0					
ANR	2797807	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797808	Identifier	target		2797635	0					
ANR	2797809	IncDec	++		2797635	1					
ANR	2797810	PrimaryExpression	'\\b'		2797635	1					
ANR	2797811	ExpressionStatement	nlen --	3762:31:91677:91683	2797635	22	True				
ANR	2797812	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797813	Identifier	nlen		2797635	0					
ANR	2797814	IncDec	--		2797635	1					
ANR	2797815	BreakStatement	break ;	3762:39:91685:91690	2797635	23	True				
ANR	2797816	Label	case 'f' :	3763:4:91696:91704	2797635	24	True				
ANR	2797817	ExpressionStatement	* target ++ = '\\f'	3763:15:91707:91721	2797635	25	True				
ANR	2797818	AssignmentExpression	* target ++ = '\\f'		2797635	0		=			
ANR	2797819	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797820	UnaryOperator	*		2797635	0					
ANR	2797821	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797822	Identifier	target		2797635	0					
ANR	2797823	IncDec	++		2797635	1					
ANR	2797824	PrimaryExpression	'\\f'		2797635	1					
ANR	2797825	ExpressionStatement	nlen --	3763:31:91723:91729	2797635	26	True				
ANR	2797826	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797827	Identifier	nlen		2797635	0					
ANR	2797828	IncDec	--		2797635	1					
ANR	2797829	BreakStatement	break ;	3763:39:91731:91736	2797635	27	True				
ANR	2797830	Label	case '\\\\' :	3764:4:91742:91751	2797635	28	True				
ANR	2797831	ExpressionStatement	* target ++ = '\\\\'	3764:15:91753:91767	2797635	29	True				
ANR	2797832	AssignmentExpression	* target ++ = '\\\\'		2797635	0		=			
ANR	2797833	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797834	UnaryOperator	*		2797635	0					
ANR	2797835	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797836	Identifier	target		2797635	0					
ANR	2797837	IncDec	++		2797635	1					
ANR	2797838	PrimaryExpression	'\\\\'		2797635	1					
ANR	2797839	ExpressionStatement	nlen --	3764:31:91769:91775	2797635	30	True				
ANR	2797840	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2797841	Identifier	nlen		2797635	0					
ANR	2797842	IncDec	--		2797635	1					
ANR	2797843	BreakStatement	break ;	3764:39:91777:91782	2797635	31	True				
ANR	2797844	Label	case 'x' :	3765:4:91788:91796	2797635	32	True				
ANR	2797845	IfStatement	if ( source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) ) )		2797635	33					
ANR	2797846	Condition	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )	3766:9:91807:91852	2797635	0	True				
ANR	2797847	AndExpression	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )		2797635	0		&&			
ANR	2797848	RelationalExpression	source + 1 < end		2797635	0		<			
ANR	2797849	AdditiveExpression	source + 1		2797635	0		+			
ANR	2797850	Identifier	source		2797635	0					
ANR	2797851	PrimaryExpression	1		2797635	1					
ANR	2797852	Identifier	end		2797635	1					
ANR	2797853	CallExpression	isxdigit ( ( int ) ( * ( source + 1 ) ) )		2797635	1					
ANR	2797854	Callee	isxdigit		2797635	0					
ANR	2797855	Identifier	isxdigit		2797635	0					
ANR	2797856	ArgumentList	( int ) ( * ( source + 1 ) )		2797635	1					
ANR	2797857	Argument	( int ) ( * ( source + 1 ) )		2797635	0					
ANR	2797858	CastExpression	( int ) ( * ( source + 1 ) )		2797635	0					
ANR	2797859	CastTarget	int		2797635	0					
ANR	2797860	UnaryOperationExpression	* ( source + 1 )		2797635	1					
ANR	2797861	UnaryOperator	*		2797635	0					
ANR	2797862	AdditiveExpression	source + 1		2797635	1		+			
ANR	2797863	Identifier	source		2797635	0					
ANR	2797864	PrimaryExpression	1		2797635	1					
ANR	2797865	CompoundStatement		19:57:719:719	2797635	1					
ANR	2797866	ExpressionStatement	numtmp [ 0 ] = * ++ source	3767:6:91863:91884	2797635	0	True				
ANR	2797867	AssignmentExpression	numtmp [ 0 ] = * ++ source		2797635	0		=			
ANR	2797868	ArrayIndexing	numtmp [ 0 ]		2797635	0					
ANR	2797869	Identifier	numtmp		2797635	0					
ANR	2797870	PrimaryExpression	0		2797635	1					
ANR	2797871	UnaryOperationExpression	* ++ source		2797635	1					
ANR	2797872	UnaryOperator	*		2797635	0					
ANR	2797873	UnaryExpression	++ source		2797635	1					
ANR	2797874	IncDec	++		2797635	0					
ANR	2797875	Identifier	source		2797635	1					
ANR	2797876	IfStatement	if ( source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) ) )		2797635	1					
ANR	2797877	Condition	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )	3768:10:91896:91941	2797635	0	True				
ANR	2797878	AndExpression	source + 1 < end && isxdigit ( ( int ) ( * ( source + 1 ) ) )		2797635	0		&&			
ANR	2797879	RelationalExpression	source + 1 < end		2797635	0		<			
ANR	2797880	AdditiveExpression	source + 1		2797635	0		+			
ANR	2797881	Identifier	source		2797635	0					
ANR	2797882	PrimaryExpression	1		2797635	1					
ANR	2797883	Identifier	end		2797635	1					
ANR	2797884	CallExpression	isxdigit ( ( int ) ( * ( source + 1 ) ) )		2797635	1					
ANR	2797885	Callee	isxdigit		2797635	0					
ANR	2797886	Identifier	isxdigit		2797635	0					
ANR	2797887	ArgumentList	( int ) ( * ( source + 1 ) )		2797635	1					
ANR	2797888	Argument	( int ) ( * ( source + 1 ) )		2797635	0					
ANR	2797889	CastExpression	( int ) ( * ( source + 1 ) )		2797635	0					
ANR	2797890	CastTarget	int		2797635	0					
ANR	2797891	UnaryOperationExpression	* ( source + 1 )		2797635	1					
ANR	2797892	UnaryOperator	*		2797635	0					
ANR	2797893	AdditiveExpression	source + 1		2797635	1		+			
ANR	2797894	Identifier	source		2797635	0					
ANR	2797895	PrimaryExpression	1		2797635	1					
ANR	2797896	CompoundStatement		21:58:808:808	2797635	1					
ANR	2797897	ExpressionStatement	numtmp [ 1 ] = * ++ source	3769:7:91953:91974	2797635	0	True				
ANR	2797898	AssignmentExpression	numtmp [ 1 ] = * ++ source		2797635	0		=			
ANR	2797899	ArrayIndexing	numtmp [ 1 ]		2797635	0					
ANR	2797900	Identifier	numtmp		2797635	0					
ANR	2797901	PrimaryExpression	1		2797635	1					
ANR	2797902	UnaryOperationExpression	* ++ source		2797635	1					
ANR	2797903	UnaryOperator	*		2797635	0					
ANR	2797904	UnaryExpression	++ source		2797635	1					
ANR	2797905	IncDec	++		2797635	0					
ANR	2797906	Identifier	source		2797635	1					
ANR	2797907	ExpressionStatement	numtmp [ 2 ] = '\\0'	3770:7:91983:91999	2797635	1	True				
ANR	2797908	AssignmentExpression	numtmp [ 2 ] = '\\0'		2797635	0		=			
ANR	2797909	ArrayIndexing	numtmp [ 2 ]		2797635	0					
ANR	2797910	Identifier	numtmp		2797635	0					
ANR	2797911	PrimaryExpression	2		2797635	1					
ANR	2797912	PrimaryExpression	'\\0'		2797635	1					
ANR	2797913	ExpressionStatement	nlen -= 3	3771:7:92008:92015	2797635	2	True				
ANR	2797914	AssignmentExpression	nlen -= 3		2797635	0		-=			
ANR	2797915	Identifier	nlen		2797635	0					
ANR	2797916	PrimaryExpression	3		2797635	1					
ANR	2797917	ElseStatement	else		2797635	0					
ANR	2797918	CompoundStatement		25:13:894:894	2797635	0					
ANR	2797919	ExpressionStatement	numtmp [ 1 ] = '\\0'	3773:7:92039:92055	2797635	0	True				
ANR	2797920	AssignmentExpression	numtmp [ 1 ] = '\\0'		2797635	0		=			
ANR	2797921	ArrayIndexing	numtmp [ 1 ]		2797635	0					
ANR	2797922	Identifier	numtmp		2797635	0					
ANR	2797923	PrimaryExpression	1		2797635	1					
ANR	2797924	PrimaryExpression	'\\0'		2797635	1					
ANR	2797925	ExpressionStatement	nlen -= 2	3774:7:92064:92071	2797635	1	True				
ANR	2797926	AssignmentExpression	nlen -= 2		2797635	0		-=			
ANR	2797927	Identifier	nlen		2797635	0					
ANR	2797928	PrimaryExpression	2		2797635	1					
ANR	2797929	ExpressionStatement	"* target ++ = ( char ) strtol ( numtmp , NULL , 16 )"	3776:6:92087:92127	2797635	2	True				
ANR	2797930	AssignmentExpression	"* target ++ = ( char ) strtol ( numtmp , NULL , 16 )"		2797635	0		=			
ANR	2797931	UnaryOperationExpression	* target ++		2797635	0					
ANR	2797932	UnaryOperator	*		2797635	0					
ANR	2797933	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2797934	Identifier	target		2797635	0					
ANR	2797935	IncDec	++		2797635	1					
ANR	2797936	CastExpression	"( char ) strtol ( numtmp , NULL , 16 )"		2797635	1					
ANR	2797937	CastTarget	char		2797635	0					
ANR	2797938	CallExpression	"strtol ( numtmp , NULL , 16 )"		2797635	1					
ANR	2797939	Callee	strtol		2797635	0					
ANR	2797940	Identifier	strtol		2797635	0					
ANR	2797941	ArgumentList	numtmp		2797635	1					
ANR	2797942	Argument	numtmp		2797635	0					
ANR	2797943	Identifier	numtmp		2797635	0					
ANR	2797944	Argument	NULL		2797635	1					
ANR	2797945	Identifier	NULL		2797635	0					
ANR	2797946	Argument	16		2797635	2					
ANR	2797947	PrimaryExpression	16		2797635	0					
ANR	2797948	BreakStatement	break ;	3777:6:92135:92140	2797635	3	True				
ANR	2797949	Label	default :	3780:4:92192:92199	2797635	34	True				
ANR	2797950	Identifier	default		2797635	0					
ANR	2797951	ExpressionStatement	i = 0	3781:5:92206:92209	2797635	35	True				
ANR	2797952	AssignmentExpression	i = 0		2797635	0		=			
ANR	2797953	Identifier	i		2797635	0					
ANR	2797954	PrimaryExpression	0		2797635	1					
ANR	2797955	WhileStatement	while ( source < end && * source >= '0' && * source <= '7' && i < 3 )		2797635	36					
ANR	2797956	Condition	source < end && * source >= '0' && * source <= '7' && i < 3	3782:12:92223:92277	2797635	0	True				
ANR	2797957	AndExpression	source < end && * source >= '0' && * source <= '7' && i < 3		2797635	0		&&			
ANR	2797958	RelationalExpression	source < end		2797635	0		<			
ANR	2797959	Identifier	source		2797635	0					
ANR	2797960	Identifier	end		2797635	1					
ANR	2797961	AndExpression	* source >= '0' && * source <= '7' && i < 3		2797635	1		&&			
ANR	2797962	RelationalExpression	* source >= '0'		2797635	0		>=			
ANR	2797963	UnaryOperationExpression	* source		2797635	0					
ANR	2797964	UnaryOperator	*		2797635	0					
ANR	2797965	Identifier	source		2797635	1					
ANR	2797966	PrimaryExpression	'0'		2797635	1					
ANR	2797967	AndExpression	* source <= '7' && i < 3		2797635	1		&&			
ANR	2797968	RelationalExpression	* source <= '7'		2797635	0		<=			
ANR	2797969	UnaryOperationExpression	* source		2797635	0					
ANR	2797970	UnaryOperator	*		2797635	0					
ANR	2797971	Identifier	source		2797635	1					
ANR	2797972	PrimaryExpression	'7'		2797635	1					
ANR	2797973	RelationalExpression	i < 3		2797635	1		<			
ANR	2797974	Identifier	i		2797635	0					
ANR	2797975	PrimaryExpression	3		2797635	1					
ANR	2797976	CompoundStatement		35:69:1144:1144	2797635	1					
ANR	2797977	ExpressionStatement	numtmp [ i ++ ] = * source ++	3783:6:92288:92311	2797635	0	True				
ANR	2797978	AssignmentExpression	numtmp [ i ++ ] = * source ++		2797635	0		=			
ANR	2797979	ArrayIndexing	numtmp [ i ++ ]		2797635	0					
ANR	2797980	Identifier	numtmp		2797635	0					
ANR	2797981	PostIncDecOperationExpression	i ++		2797635	1					
ANR	2797982	Identifier	i		2797635	0					
ANR	2797983	IncDec	++		2797635	1					
ANR	2797984	UnaryOperationExpression	* source ++		2797635	1					
ANR	2797985	UnaryOperator	*		2797635	0					
ANR	2797986	PostIncDecOperationExpression	source ++		2797635	1					
ANR	2797987	Identifier	source		2797635	0					
ANR	2797988	IncDec	++		2797635	1					
ANR	2797989	IfStatement	if ( i )		2797635	37					
ANR	2797990	Condition	i	3785:9:92329:92329	2797635	0	True				
ANR	2797991	Identifier	i		2797635	0					
ANR	2797992	CompoundStatement		38:12:1196:1196	2797635	1					
ANR	2797993	ExpressionStatement	numtmp [ i ] = '\\0'	3786:6:92340:92354	2797635	0	True				
ANR	2797994	AssignmentExpression	numtmp [ i ] = '\\0'		2797635	0		=			
ANR	2797995	ArrayIndexing	numtmp [ i ]		2797635	0					
ANR	2797996	Identifier	numtmp		2797635	0					
ANR	2797997	Identifier	i		2797635	1					
ANR	2797998	PrimaryExpression	'\\0'		2797635	1					
ANR	2797999	ExpressionStatement	"* target ++ = ( char ) strtol ( numtmp , NULL , 8 )"	3787:6:92362:92401	2797635	1	True				
ANR	2798000	AssignmentExpression	"* target ++ = ( char ) strtol ( numtmp , NULL , 8 )"		2797635	0		=			
ANR	2798001	UnaryOperationExpression	* target ++		2797635	0					
ANR	2798002	UnaryOperator	*		2797635	0					
ANR	2798003	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2798004	Identifier	target		2797635	0					
ANR	2798005	IncDec	++		2797635	1					
ANR	2798006	CastExpression	"( char ) strtol ( numtmp , NULL , 8 )"		2797635	1					
ANR	2798007	CastTarget	char		2797635	0					
ANR	2798008	CallExpression	"strtol ( numtmp , NULL , 8 )"		2797635	1					
ANR	2798009	Callee	strtol		2797635	0					
ANR	2798010	Identifier	strtol		2797635	0					
ANR	2798011	ArgumentList	numtmp		2797635	1					
ANR	2798012	Argument	numtmp		2797635	0					
ANR	2798013	Identifier	numtmp		2797635	0					
ANR	2798014	Argument	NULL		2797635	1					
ANR	2798015	Identifier	NULL		2797635	0					
ANR	2798016	Argument	8		2797635	2					
ANR	2798017	PrimaryExpression	8		2797635	0					
ANR	2798018	ExpressionStatement	nlen -= i	3788:6:92409:92416	2797635	2	True				
ANR	2798019	AssignmentExpression	nlen -= i		2797635	0		-=			
ANR	2798020	Identifier	nlen		2797635	0					
ANR	2798021	Identifier	i		2797635	1					
ANR	2798022	ExpressionStatement	source --	3789:6:92424:92432	2797635	3	True				
ANR	2798023	PostIncDecOperationExpression	source --		2797635	0					
ANR	2798024	Identifier	source		2797635	0					
ANR	2798025	IncDec	--		2797635	1					
ANR	2798026	ElseStatement	else		2797635	0					
ANR	2798027	CompoundStatement		43:12:1310:1310	2797635	0					
ANR	2798028	ExpressionStatement	* target ++ = * source	3791:6:92454:92471	2797635	0	True				
ANR	2798029	AssignmentExpression	* target ++ = * source		2797635	0		=			
ANR	2798030	UnaryOperationExpression	* target ++		2797635	0					
ANR	2798031	UnaryOperator	*		2797635	0					
ANR	2798032	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2798033	Identifier	target		2797635	0					
ANR	2798034	IncDec	++		2797635	1					
ANR	2798035	UnaryOperationExpression	* source		2797635	1					
ANR	2798036	UnaryOperator	*		2797635	0					
ANR	2798037	Identifier	source		2797635	1					
ANR	2798038	ExpressionStatement	nlen --	3792:6:92479:92485	2797635	1	True				
ANR	2798039	PostIncDecOperationExpression	nlen --		2797635	0					
ANR	2798040	Identifier	nlen		2797635	0					
ANR	2798041	IncDec	--		2797635	1					
ANR	2798042	ElseStatement	else		2797635	0					
ANR	2798043	CompoundStatement		48:9:1372:1372	2797635	0					
ANR	2798044	ExpressionStatement	* target ++ = * source	3796:3:92513:92530	2797635	0	True				
ANR	2798045	AssignmentExpression	* target ++ = * source		2797635	0		=			
ANR	2798046	UnaryOperationExpression	* target ++		2797635	0					
ANR	2798047	UnaryOperator	*		2797635	0					
ANR	2798048	PostIncDecOperationExpression	target ++		2797635	1					
ANR	2798049	Identifier	target		2797635	0					
ANR	2798050	IncDec	++		2797635	1					
ANR	2798051	UnaryOperationExpression	* source		2797635	1					
ANR	2798052	UnaryOperator	*		2797635	0					
ANR	2798053	Identifier	source		2797635	1					
ANR	2798054	IfStatement	if ( nlen != 0 )		2797635	4					
ANR	2798055	Condition	nlen != 0	3800:5:92545:92553	2797635	0	True				
ANR	2798056	EqualityExpression	nlen != 0		2797635	0		!=			
ANR	2798057	Identifier	nlen		2797635	0					
ANR	2798058	PrimaryExpression	0		2797635	1					
ANR	2798059	CompoundStatement		53:16:1420:1420	2797635	1					
ANR	2798060	ExpressionStatement	* target = '\\0'	3801:2:92560:92572	2797635	0	True				
ANR	2798061	AssignmentExpression	* target = '\\0'		2797635	0		=			
ANR	2798062	UnaryOperationExpression	* target		2797635	0					
ANR	2798063	UnaryOperator	*		2797635	0					
ANR	2798064	Identifier	target		2797635	1					
ANR	2798065	PrimaryExpression	'\\0'		2797635	1					
ANR	2798066	ExpressionStatement	ZSTR_LEN ( str ) = nlen	3804:1:92579:92599	2797635	5	True				
ANR	2798067	AssignmentExpression	ZSTR_LEN ( str ) = nlen		2797635	0		=			
ANR	2798068	CallExpression	ZSTR_LEN ( str )		2797635	0					
ANR	2798069	Callee	ZSTR_LEN		2797635	0					
ANR	2798070	Identifier	ZSTR_LEN		2797635	0					
ANR	2798071	ArgumentList	str		2797635	1					
ANR	2798072	Argument	str		2797635	0					
ANR	2798073	Identifier	str		2797635	0					
ANR	2798074	Identifier	nlen		2797635	1					
ANR	2798075	ReturnType	PHPAPI void		2797635	1					
ANR	2798076	Identifier	php_stripcslashes		2797635	2					
ANR	2798077	ParameterList	zend_string * str		2797635	3					
ANR	2798078	Parameter	zend_string * str	3747:30:91117:91132	2797635	0	True				
ANR	2798079	ParameterType	zend_string *		2797635	0					
ANR	2798080	Identifier	str		2797635	1					
ANR	2798081	CFGEntryNode	ENTRY		2797635		True				
ANR	2798082	CFGExitNode	EXIT		2797635		True				
ANR	2798083	Symbol	NULL		2797635						
ANR	2798084	Symbol	numtmp		2797635						
ANR	2798085	Symbol	i		2797635						
ANR	2798086	Symbol	source		2797635						
ANR	2798087	Symbol	* target ++		2797635						
ANR	2798088	Symbol	target		2797635						
ANR	2798089	Symbol	ZSTR_VAL		2797635						
ANR	2798090	Symbol	str		2797635						
ANR	2798091	Symbol	* target		2797635						
ANR	2798092	Symbol	* i		2797635						
ANR	2798093	Symbol	nlen		2797635						
ANR	2798094	Symbol	strtol		2797635						
ANR	2798095	Symbol	* numtmp		2797635						
ANR	2798096	Symbol	ZSTR_LEN		2797635						
ANR	2798097	Symbol	* source		2797635						
ANR	2798098	Symbol	* ( source + 1 )		2797635						
ANR	2798099	Symbol	* ++ source		2797635						
ANR	2798100	Symbol	* source ++		2797635						
ANR	2798101	Symbol	end		2797635						
ANR	2798102	Symbol	isxdigit		2797635						
ANR	2798103	Function	php_addcslashes	3810:0:92641:93841							
ANR	2798104	FunctionDef	"php_addcslashes (zend_string * str , int should_free , char * what , size_t wlength)"		2798103	0					
ANR	2798105	CompoundStatement		3811:0:92740:93841	2798103	0					
ANR	2798106	IdentifierDeclStatement	char flags [ 256 ] ;	3812:1:92743:92758	2798103	0	True				
ANR	2798107	IdentifierDecl	flags [ 256 ]		2798103	0					
ANR	2798108	IdentifierDeclType	char [ 256 ]		2798103	0					
ANR	2798109	Identifier	flags		2798103	1					
ANR	2798110	PrimaryExpression	256		2798103	2					
ANR	2798111	IdentifierDeclStatement	"char * source , * target ;"	3813:1:92761:92782	2798103	1	True				
ANR	2798112	IdentifierDecl	* source		2798103	0					
ANR	2798113	IdentifierDeclType	char *		2798103	0					
ANR	2798114	Identifier	source		2798103	1					
ANR	2798115	IdentifierDecl	* target		2798103	1					
ANR	2798116	IdentifierDeclType	char *		2798103	0					
ANR	2798117	Identifier	target		2798103	1					
ANR	2798118	IdentifierDeclStatement	char * end ;	3814:1:92785:92794	2798103	2	True				
ANR	2798119	IdentifierDecl	* end		2798103	0					
ANR	2798120	IdentifierDeclType	char *		2798103	0					
ANR	2798121	Identifier	end		2798103	1					
ANR	2798122	IdentifierDeclStatement	char c ;	3815:1:92797:92803	2798103	3	True				
ANR	2798123	IdentifierDecl	c		2798103	0					
ANR	2798124	IdentifierDeclType	char		2798103	0					
ANR	2798125	Identifier	c		2798103	1					
ANR	2798126	IdentifierDeclStatement	size_t newlen ;	3816:1:92806:92820	2798103	4	True				
ANR	2798127	IdentifierDecl	newlen		2798103	0					
ANR	2798128	IdentifierDeclType	size_t		2798103	0					
ANR	2798129	Identifier	newlen		2798103	1					
ANR	2798130	IdentifierDeclStatement	"zend_string * new_str = zend_string_alloc ( 4 * ZSTR_LEN ( str ) , 0 ) ;"	3817:1:92823:92885	2798103	5	True				
ANR	2798131	IdentifierDecl	"* new_str = zend_string_alloc ( 4 * ZSTR_LEN ( str ) , 0 )"		2798103	0					
ANR	2798132	IdentifierDeclType	zend_string *		2798103	0					
ANR	2798133	Identifier	new_str		2798103	1					
ANR	2798134	AssignmentExpression	"* new_str = zend_string_alloc ( 4 * ZSTR_LEN ( str ) , 0 )"		2798103	2		=			
ANR	2798135	Identifier	new_str		2798103	0					
ANR	2798136	CallExpression	"zend_string_alloc ( 4 * ZSTR_LEN ( str ) , 0 )"		2798103	1					
ANR	2798137	Callee	zend_string_alloc		2798103	0					
ANR	2798138	Identifier	zend_string_alloc		2798103	0					
ANR	2798139	ArgumentList	4 * ZSTR_LEN ( str )		2798103	1					
ANR	2798140	Argument	4 * ZSTR_LEN ( str )		2798103	0					
ANR	2798141	MultiplicativeExpression	4 * ZSTR_LEN ( str )		2798103	0		*			
ANR	2798142	PrimaryExpression	4		2798103	0					
ANR	2798143	CallExpression	ZSTR_LEN ( str )		2798103	1					
ANR	2798144	Callee	ZSTR_LEN		2798103	0					
ANR	2798145	Identifier	ZSTR_LEN		2798103	0					
ANR	2798146	ArgumentList	str		2798103	1					
ANR	2798147	Argument	str		2798103	0					
ANR	2798148	Identifier	str		2798103	0					
ANR	2798149	Argument	0		2798103	1					
ANR	2798150	PrimaryExpression	0		2798103	0					
ANR	2798151	ExpressionStatement	"php_charmask ( ( unsigned char * ) what , wlength , flags )"	3819:1:92889:92940	2798103	6	True				
ANR	2798152	CallExpression	"php_charmask ( ( unsigned char * ) what , wlength , flags )"		2798103	0					
ANR	2798153	Callee	php_charmask		2798103	0					
ANR	2798154	Identifier	php_charmask		2798103	0					
ANR	2798155	ArgumentList	( unsigned char * ) what		2798103	1					
ANR	2798156	Argument	( unsigned char * ) what		2798103	0					
ANR	2798157	CastExpression	( unsigned char * ) what		2798103	0					
ANR	2798158	CastTarget	unsigned char *		2798103	0					
ANR	2798159	Identifier	what		2798103	1					
ANR	2798160	Argument	wlength		2798103	1					
ANR	2798161	Identifier	wlength		2798103	0					
ANR	2798162	Argument	flags		2798103	2					
ANR	2798163	Identifier	flags		2798103	0					
ANR	2798164	ForStatement	"for ( source = ( char * ) ZSTR_VAL ( str ) , end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( new_str ) ; source < end ; source ++ )"		2798103	7					
ANR	2798165	ForInit	"source = ( char * ) ZSTR_VAL ( str ) , end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( new_str ) ;"	3821:6:92949:93036	2798103	0	True				
ANR	2798166	Expression	"source = ( char * ) ZSTR_VAL ( str ) , end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( new_str )"		2798103	0					
ANR	2798167	AssignmentExpression	source = ( char * ) ZSTR_VAL ( str )		2798103	0		=			
ANR	2798168	Identifier	source		2798103	0					
ANR	2798169	CastExpression	( char * ) ZSTR_VAL ( str )		2798103	1					
ANR	2798170	CastTarget	char *		2798103	0					
ANR	2798171	CallExpression	ZSTR_VAL ( str )		2798103	1					
ANR	2798172	Callee	ZSTR_VAL		2798103	0					
ANR	2798173	Identifier	ZSTR_VAL		2798103	0					
ANR	2798174	ArgumentList	str		2798103	1					
ANR	2798175	Argument	str		2798103	0					
ANR	2798176	Identifier	str		2798103	0					
ANR	2798177	Expression	"end = source + ZSTR_LEN ( str ) , target = ZSTR_VAL ( new_str )"		2798103	1					
ANR	2798178	AssignmentExpression	end = source + ZSTR_LEN ( str )		2798103	0		=			
ANR	2798179	Identifier	end		2798103	0					
ANR	2798180	AdditiveExpression	source + ZSTR_LEN ( str )		2798103	1		+			
ANR	2798181	Identifier	source		2798103	0					
ANR	2798182	CallExpression	ZSTR_LEN ( str )		2798103	1					
ANR	2798183	Callee	ZSTR_LEN		2798103	0					
ANR	2798184	Identifier	ZSTR_LEN		2798103	0					
ANR	2798185	ArgumentList	str		2798103	1					
ANR	2798186	Argument	str		2798103	0					
ANR	2798187	Identifier	str		2798103	0					
ANR	2798188	AssignmentExpression	target = ZSTR_VAL ( new_str )		2798103	1		=			
ANR	2798189	Identifier	target		2798103	0					
ANR	2798190	CallExpression	ZSTR_VAL ( new_str )		2798103	1					
ANR	2798191	Callee	ZSTR_VAL		2798103	0					
ANR	2798192	Identifier	ZSTR_VAL		2798103	0					
ANR	2798193	ArgumentList	new_str		2798103	1					
ANR	2798194	Argument	new_str		2798103	0					
ANR	2798195	Identifier	new_str		2798103	0					
ANR	2798196	Condition	source < end	3821:95:93038:93049	2798103	1	True				
ANR	2798197	RelationalExpression	source < end		2798103	0		<			
ANR	2798198	Identifier	source		2798103	0					
ANR	2798199	Identifier	end		2798103	1					
ANR	2798200	PostIncDecOperationExpression	source ++	3821:109:93052:93059	2798103	2	True				
ANR	2798201	Identifier	source		2798103	0					
ANR	2798202	IncDec	++		2798103	1					
ANR	2798203	CompoundStatement		11:119:321:321	2798103	3					
ANR	2798204	ExpressionStatement	c = * source	3822:2:93066:93077	2798103	0	True				
ANR	2798205	AssignmentExpression	c = * source		2798103	0		=			
ANR	2798206	Identifier	c		2798103	0					
ANR	2798207	UnaryOperationExpression	* source		2798103	1					
ANR	2798208	UnaryOperator	*		2798103	0					
ANR	2798209	Identifier	source		2798103	1					
ANR	2798210	IfStatement	if ( flags [ ( unsigned char ) c ] )		2798103	1					
ANR	2798211	Condition	flags [ ( unsigned char ) c ]	3823:6:93085:93107	2798103	0	True				
ANR	2798212	ArrayIndexing	flags [ ( unsigned char ) c ]		2798103	0					
ANR	2798213	Identifier	flags		2798103	0					
ANR	2798214	CastExpression	( unsigned char ) c		2798103	1					
ANR	2798215	CastTarget	unsigned char		2798103	0					
ANR	2798216	Identifier	c		2798103	1					
ANR	2798217	CompoundStatement		13:31:369:369	2798103	1					
ANR	2798218	IfStatement	if ( ( unsigned char ) c < 32 || ( unsigned char ) c > 126 )		2798103	0					
ANR	2798219	Condition	( unsigned char ) c < 32 || ( unsigned char ) c > 126	3824:7:93119:93167	2798103	0	True				
ANR	2798220	OrExpression	( unsigned char ) c < 32 || ( unsigned char ) c > 126		2798103	0		||			
ANR	2798221	RelationalExpression	( unsigned char ) c < 32		2798103	0		<			
ANR	2798222	CastExpression	( unsigned char ) c		2798103	0					
ANR	2798223	CastTarget	unsigned char		2798103	0					
ANR	2798224	Identifier	c		2798103	1					
ANR	2798225	PrimaryExpression	32		2798103	1					
ANR	2798226	RelationalExpression	( unsigned char ) c > 126		2798103	1		>			
ANR	2798227	CastExpression	( unsigned char ) c		2798103	0					
ANR	2798228	CastTarget	unsigned char		2798103	0					
ANR	2798229	Identifier	c		2798103	1					
ANR	2798230	PrimaryExpression	126		2798103	1					
ANR	2798231	CompoundStatement		14:58:429:429	2798103	1					
ANR	2798232	ExpressionStatement	* target ++ = '\\\\'	3825:4:93176:93192	2798103	0	True				
ANR	2798233	AssignmentExpression	* target ++ = '\\\\'		2798103	0		=			
ANR	2798234	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798235	UnaryOperator	*		2798103	0					
ANR	2798236	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798237	Identifier	target		2798103	0					
ANR	2798238	IncDec	++		2798103	1					
ANR	2798239	PrimaryExpression	'\\\\'		2798103	1					
ANR	2798240	SwitchStatement	switch ( c )		2798103	1					
ANR	2798241	Condition	c	3826:12:93206:93206	2798103	0	True				
ANR	2798242	Identifier	c		2798103	0					
ANR	2798243	CompoundStatement		16:15:468:468	2798103	1					
ANR	2798244	Label	case '\\n' :	3827:5:93216:93225	2798103	0	True				
ANR	2798245	ExpressionStatement	* target ++ = 'n'	3827:16:93227:93242	2798103	1	True				
ANR	2798246	AssignmentExpression	* target ++ = 'n'		2798103	0		=			
ANR	2798247	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798248	UnaryOperator	*		2798103	0					
ANR	2798249	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798250	Identifier	target		2798103	0					
ANR	2798251	IncDec	++		2798103	1					
ANR	2798252	PrimaryExpression	'n'		2798103	1					
ANR	2798253	BreakStatement	break ;	3827:33:93244:93249	2798103	2	True				
ANR	2798254	Label	case '\\t' :	3828:5:93256:93265	2798103	3	True				
ANR	2798255	ExpressionStatement	* target ++ = 't'	3828:16:93267:93282	2798103	4	True				
ANR	2798256	AssignmentExpression	* target ++ = 't'		2798103	0		=			
ANR	2798257	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798258	UnaryOperator	*		2798103	0					
ANR	2798259	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798260	Identifier	target		2798103	0					
ANR	2798261	IncDec	++		2798103	1					
ANR	2798262	PrimaryExpression	't'		2798103	1					
ANR	2798263	BreakStatement	break ;	3828:33:93284:93289	2798103	5	True				
ANR	2798264	Label	case '\\r' :	3829:5:93296:93305	2798103	6	True				
ANR	2798265	ExpressionStatement	* target ++ = 'r'	3829:16:93307:93322	2798103	7	True				
ANR	2798266	AssignmentExpression	* target ++ = 'r'		2798103	0		=			
ANR	2798267	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798268	UnaryOperator	*		2798103	0					
ANR	2798269	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798270	Identifier	target		2798103	0					
ANR	2798271	IncDec	++		2798103	1					
ANR	2798272	PrimaryExpression	'r'		2798103	1					
ANR	2798273	BreakStatement	break ;	3829:33:93324:93329	2798103	8	True				
ANR	2798274	Label	case '\\a' :	3830:5:93336:93345	2798103	9	True				
ANR	2798275	ExpressionStatement	* target ++ = 'a'	3830:16:93347:93362	2798103	10	True				
ANR	2798276	AssignmentExpression	* target ++ = 'a'		2798103	0		=			
ANR	2798277	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798278	UnaryOperator	*		2798103	0					
ANR	2798279	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798280	Identifier	target		2798103	0					
ANR	2798281	IncDec	++		2798103	1					
ANR	2798282	PrimaryExpression	'a'		2798103	1					
ANR	2798283	BreakStatement	break ;	3830:33:93364:93369	2798103	11	True				
ANR	2798284	Label	case '\\v' :	3831:5:93376:93385	2798103	12	True				
ANR	2798285	ExpressionStatement	* target ++ = 'v'	3831:16:93387:93402	2798103	13	True				
ANR	2798286	AssignmentExpression	* target ++ = 'v'		2798103	0		=			
ANR	2798287	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798288	UnaryOperator	*		2798103	0					
ANR	2798289	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798290	Identifier	target		2798103	0					
ANR	2798291	IncDec	++		2798103	1					
ANR	2798292	PrimaryExpression	'v'		2798103	1					
ANR	2798293	BreakStatement	break ;	3831:33:93404:93409	2798103	14	True				
ANR	2798294	Label	case '\\b' :	3832:5:93416:93425	2798103	15	True				
ANR	2798295	ExpressionStatement	* target ++ = 'b'	3832:16:93427:93442	2798103	16	True				
ANR	2798296	AssignmentExpression	* target ++ = 'b'		2798103	0		=			
ANR	2798297	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798298	UnaryOperator	*		2798103	0					
ANR	2798299	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798300	Identifier	target		2798103	0					
ANR	2798301	IncDec	++		2798103	1					
ANR	2798302	PrimaryExpression	'b'		2798103	1					
ANR	2798303	BreakStatement	break ;	3832:33:93444:93449	2798103	17	True				
ANR	2798304	Label	case '\\f' :	3833:5:93456:93465	2798103	18	True				
ANR	2798305	ExpressionStatement	* target ++ = 'f'	3833:16:93467:93482	2798103	19	True				
ANR	2798306	AssignmentExpression	* target ++ = 'f'		2798103	0		=			
ANR	2798307	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798308	UnaryOperator	*		2798103	0					
ANR	2798309	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798310	Identifier	target		2798103	0					
ANR	2798311	IncDec	++		2798103	1					
ANR	2798312	PrimaryExpression	'f'		2798103	1					
ANR	2798313	BreakStatement	break ;	3833:33:93484:93489	2798103	20	True				
ANR	2798314	Label	default :	3834:5:93496:93503	2798103	21	True				
ANR	2798315	Identifier	default		2798103	0					
ANR	2798316	ExpressionStatement	"target += sprintf ( target , ""%03o"" , ( unsigned char ) c )"	3834:14:93505:93557	2798103	22	True				
ANR	2798317	AssignmentExpression	"target += sprintf ( target , ""%03o"" , ( unsigned char ) c )"		2798103	0		+=			
ANR	2798318	Identifier	target		2798103	0					
ANR	2798319	CallExpression	"sprintf ( target , ""%03o"" , ( unsigned char ) c )"		2798103	1					
ANR	2798320	Callee	sprintf		2798103	0					
ANR	2798321	Identifier	sprintf		2798103	0					
ANR	2798322	ArgumentList	target		2798103	1					
ANR	2798323	Argument	target		2798103	0					
ANR	2798324	Identifier	target		2798103	0					
ANR	2798325	Argument	"""%03o"""		2798103	1					
ANR	2798326	PrimaryExpression	"""%03o"""		2798103	0					
ANR	2798327	Argument	( unsigned char ) c		2798103	2					
ANR	2798328	CastExpression	( unsigned char ) c		2798103	0					
ANR	2798329	CastTarget	unsigned char		2798103	0					
ANR	2798330	Identifier	c		2798103	1					
ANR	2798331	ContinueStatement	continue ;	3836:4:93569:93577	2798103	2	True				
ANR	2798332	ExpressionStatement	* target ++ = '\\\\'	3838:3:93587:93603	2798103	1	True				
ANR	2798333	AssignmentExpression	* target ++ = '\\\\'		2798103	0		=			
ANR	2798334	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798335	UnaryOperator	*		2798103	0					
ANR	2798336	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798337	Identifier	target		2798103	0					
ANR	2798338	IncDec	++		2798103	1					
ANR	2798339	PrimaryExpression	'\\\\'		2798103	1					
ANR	2798340	ExpressionStatement	* target ++ = c	3840:2:93611:93624	2798103	2	True				
ANR	2798341	AssignmentExpression	* target ++ = c		2798103	0		=			
ANR	2798342	UnaryOperationExpression	* target ++		2798103	0					
ANR	2798343	UnaryOperator	*		2798103	0					
ANR	2798344	PostIncDecOperationExpression	target ++		2798103	1					
ANR	2798345	Identifier	target		2798103	0					
ANR	2798346	IncDec	++		2798103	1					
ANR	2798347	Identifier	c		2798103	1					
ANR	2798348	ExpressionStatement	* target = 0	3842:1:93630:93641	2798103	8	True				
ANR	2798349	AssignmentExpression	* target = 0		2798103	0		=			
ANR	2798350	UnaryOperationExpression	* target		2798103	0					
ANR	2798351	UnaryOperator	*		2798103	0					
ANR	2798352	Identifier	target		2798103	1					
ANR	2798353	PrimaryExpression	0		2798103	1					
ANR	2798354	ExpressionStatement	newlen = target - ZSTR_VAL ( new_str )	3843:1:93644:93679	2798103	9	True				
ANR	2798355	AssignmentExpression	newlen = target - ZSTR_VAL ( new_str )		2798103	0		=			
ANR	2798356	Identifier	newlen		2798103	0					
ANR	2798357	AdditiveExpression	target - ZSTR_VAL ( new_str )		2798103	1		-			
ANR	2798358	Identifier	target		2798103	0					
ANR	2798359	CallExpression	ZSTR_VAL ( new_str )		2798103	1					
ANR	2798360	Callee	ZSTR_VAL		2798103	0					
ANR	2798361	Identifier	ZSTR_VAL		2798103	0					
ANR	2798362	ArgumentList	new_str		2798103	1					
ANR	2798363	Argument	new_str		2798103	0					
ANR	2798364	Identifier	new_str		2798103	0					
ANR	2798365	IfStatement	if ( newlen < ZSTR_LEN ( str ) * 4 )		2798103	10					
ANR	2798366	Condition	newlen < ZSTR_LEN ( str ) * 4	3844:5:93686:93711	2798103	0	True				
ANR	2798367	RelationalExpression	newlen < ZSTR_LEN ( str ) * 4		2798103	0		<			
ANR	2798368	Identifier	newlen		2798103	0					
ANR	2798369	MultiplicativeExpression	ZSTR_LEN ( str ) * 4		2798103	1		*			
ANR	2798370	CallExpression	ZSTR_LEN ( str )		2798103	0					
ANR	2798371	Callee	ZSTR_LEN		2798103	0					
ANR	2798372	Identifier	ZSTR_LEN		2798103	0					
ANR	2798373	ArgumentList	str		2798103	1					
ANR	2798374	Argument	str		2798103	0					
ANR	2798375	Identifier	str		2798103	0					
ANR	2798376	PrimaryExpression	4		2798103	1					
ANR	2798377	CompoundStatement		34:33:973:973	2798103	1					
ANR	2798378	ExpressionStatement	"new_str = zend_string_truncate ( new_str , newlen , 0 )"	3845:2:93718:93768	2798103	0	True				
ANR	2798379	AssignmentExpression	"new_str = zend_string_truncate ( new_str , newlen , 0 )"		2798103	0		=			
ANR	2798380	Identifier	new_str		2798103	0					
ANR	2798381	CallExpression	"zend_string_truncate ( new_str , newlen , 0 )"		2798103	1					
ANR	2798382	Callee	zend_string_truncate		2798103	0					
ANR	2798383	Identifier	zend_string_truncate		2798103	0					
ANR	2798384	ArgumentList	new_str		2798103	1					
ANR	2798385	Argument	new_str		2798103	0					
ANR	2798386	Identifier	new_str		2798103	0					
ANR	2798387	Argument	newlen		2798103	1					
ANR	2798388	Identifier	newlen		2798103	0					
ANR	2798389	Argument	0		2798103	2					
ANR	2798390	PrimaryExpression	0		2798103	0					
ANR	2798391	IfStatement	if ( should_free )		2798103	11					
ANR	2798392	Condition	should_free	3847:5:93778:93788	2798103	0	True				
ANR	2798393	Identifier	should_free		2798103	0					
ANR	2798394	CompoundStatement		37:18:1050:1050	2798103	1					
ANR	2798395	ExpressionStatement	zend_string_release ( str )	3848:2:93795:93819	2798103	0	True				
ANR	2798396	CallExpression	zend_string_release ( str )		2798103	0					
ANR	2798397	Callee	zend_string_release		2798103	0					
ANR	2798398	Identifier	zend_string_release		2798103	0					
ANR	2798399	ArgumentList	str		2798103	1					
ANR	2798400	Argument	str		2798103	0					
ANR	2798401	Identifier	str		2798103	0					
ANR	2798402	ReturnStatement	return new_str ;	3850:1:93825:93839	2798103	12	True				
ANR	2798403	Identifier	new_str		2798103	0					
ANR	2798404	ReturnType	PHPAPI zend_string *		2798103	1					
ANR	2798405	Identifier	php_addcslashes		2798103	2					
ANR	2798406	ParameterList	"zend_string * str , int should_free , char * what , size_t wlength"		2798103	3					
ANR	2798407	Parameter	zend_string * str	3810:36:92677:92692	2798103	0	True				
ANR	2798408	ParameterType	zend_string *		2798103	0					
ANR	2798409	Identifier	str		2798103	1					
ANR	2798410	Parameter	int should_free	3810:54:92695:92709	2798103	1	True				
ANR	2798411	ParameterType	int		2798103	0					
ANR	2798412	Identifier	should_free		2798103	1					
ANR	2798413	Parameter	char * what	3810:71:92712:92721	2798103	2	True				
ANR	2798414	ParameterType	char *		2798103	0					
ANR	2798415	Identifier	what		2798103	1					
ANR	2798416	Parameter	size_t wlength	3810:83:92724:92737	2798103	3	True				
ANR	2798417	ParameterType	size_t		2798103	0					
ANR	2798418	Identifier	wlength		2798103	1					
ANR	2798419	CFGEntryNode	ENTRY		2798103		True				
ANR	2798420	CFGExitNode	EXIT		2798103		True				
ANR	2798421	Symbol	should_free		2798103						
ANR	2798422	Symbol	* flags		2798103						
ANR	2798423	Symbol	zend_string_alloc		2798103						
ANR	2798424	Symbol	c		2798103						
ANR	2798425	Symbol	zend_string_truncate		2798103						
ANR	2798426	Symbol	flags		2798103						
ANR	2798427	Symbol	newlen		2798103						
ANR	2798428	Symbol	source		2798103						
ANR	2798429	Symbol	* target ++		2798103						
ANR	2798430	Symbol	* c		2798103						
ANR	2798431	Symbol	wlength		2798103						
ANR	2798432	Symbol	target		2798103						
ANR	2798433	Symbol	ZSTR_VAL		2798103						
ANR	2798434	Symbol	sprintf		2798103						
ANR	2798435	Symbol	str		2798103						
ANR	2798436	Symbol	* target		2798103						
ANR	2798437	Symbol	new_str		2798103						
ANR	2798438	Symbol	what		2798103						
ANR	2798439	Symbol	ZSTR_LEN		2798103						
ANR	2798440	Symbol	* source		2798103						
ANR	2798441	Symbol	end		2798103						
ANR	2798442	Function	php_addslashes	3856:0:93880:95209							
ANR	2798443	FunctionDef	"php_addslashes (zend_string * str , int should_free)"		2798442	0					
ANR	2798444	CompoundStatement		3857:0:93950:95209	2798442	0					
ANR	2798445	IdentifierDeclStatement	"char * source , * target ;"	3859:1:94004:94025	2798442	0	True				
ANR	2798446	IdentifierDecl	* source		2798442	0					
ANR	2798447	IdentifierDeclType	char *		2798442	0					
ANR	2798448	Identifier	source		2798442	1					
ANR	2798449	IdentifierDecl	* target		2798442	1					
ANR	2798450	IdentifierDeclType	char *		2798442	0					
ANR	2798451	Identifier	target		2798442	1					
ANR	2798452	IdentifierDeclStatement	char * end ;	3860:1:94028:94037	2798442	1	True				
ANR	2798453	IdentifierDecl	* end		2798442	0					
ANR	2798454	IdentifierDeclType	char *		2798442	0					
ANR	2798455	Identifier	end		2798442	1					
ANR	2798456	IdentifierDeclStatement	size_t offset ;	3861:1:94040:94053	2798442	2	True				
ANR	2798457	IdentifierDecl	offset		2798442	0					
ANR	2798458	IdentifierDeclType	size_t		2798442	0					
ANR	2798459	Identifier	offset		2798442	1					
ANR	2798460	IdentifierDeclStatement	zend_string * new_str ;	3862:1:94056:94076	2798442	3	True				
ANR	2798461	IdentifierDecl	* new_str		2798442	0					
ANR	2798462	IdentifierDeclType	zend_string *		2798442	0					
ANR	2798463	Identifier	new_str		2798442	1					
ANR	2798464	IfStatement	if ( ! str )		2798442	4					
ANR	2798465	Condition	! str	3864:5:94084:94087	2798442	0	True				
ANR	2798466	UnaryOperationExpression	! str		2798442	0					
ANR	2798467	UnaryOperator	!		2798442	0					
ANR	2798468	Identifier	str		2798442	1					
ANR	2798469	CompoundStatement		8:11:139:139	2798442	1					
ANR	2798470	ReturnStatement	return ZSTR_EMPTY_ALLOC ( ) ;	3865:2:94094:94119	2798442	0	True				
ANR	2798471	CallExpression	ZSTR_EMPTY_ALLOC ( )		2798442	0					
ANR	2798472	Callee	ZSTR_EMPTY_ALLOC		2798442	0					
ANR	2798473	Identifier	ZSTR_EMPTY_ALLOC		2798442	0					
ANR	2798474	ArgumentList			2798442	1					
ANR	2798475	ExpressionStatement	source = ZSTR_VAL ( str )	3868:1:94126:94148	2798442	5	True				
ANR	2798476	AssignmentExpression	source = ZSTR_VAL ( str )		2798442	0		=			
ANR	2798477	Identifier	source		2798442	0					
ANR	2798478	CallExpression	ZSTR_VAL ( str )		2798442	1					
ANR	2798479	Callee	ZSTR_VAL		2798442	0					
ANR	2798480	Identifier	ZSTR_VAL		2798442	0					
ANR	2798481	ArgumentList	str		2798442	1					
ANR	2798482	Argument	str		2798442	0					
ANR	2798483	Identifier	str		2798442	0					
ANR	2798484	ExpressionStatement	end = source + ZSTR_LEN ( str )	3869:1:94151:94179	2798442	6	True				
ANR	2798485	AssignmentExpression	end = source + ZSTR_LEN ( str )		2798442	0		=			
ANR	2798486	Identifier	end		2798442	0					
ANR	2798487	AdditiveExpression	source + ZSTR_LEN ( str )		2798442	1		+			
ANR	2798488	Identifier	source		2798442	0					
ANR	2798489	CallExpression	ZSTR_LEN ( str )		2798442	1					
ANR	2798490	Callee	ZSTR_LEN		2798442	0					
ANR	2798491	Identifier	ZSTR_LEN		2798442	0					
ANR	2798492	ArgumentList	str		2798442	1					
ANR	2798493	Argument	str		2798442	0					
ANR	2798494	Identifier	str		2798442	0					
ANR	2798495	WhileStatement	while ( source < end )		2798442	7					
ANR	2798496	Condition	source < end	3871:8:94190:94201	2798442	0	True				
ANR	2798497	RelationalExpression	source < end		2798442	0		<			
ANR	2798498	Identifier	source		2798442	0					
ANR	2798499	Identifier	end		2798442	1					
ANR	2798500	CompoundStatement		15:22:253:253	2798442	1					
ANR	2798501	SwitchStatement	switch ( * source )		2798442	0					
ANR	2798502	Condition	* source	3872:10:94216:94222	2798442	0	True				
ANR	2798503	UnaryOperationExpression	* source		2798442	0					
ANR	2798504	UnaryOperator	*		2798442	0					
ANR	2798505	Identifier	source		2798442	1					
ANR	2798506	CompoundStatement		16:19:274:274	2798442	1					
ANR	2798507	Label	case '\\0' :	3873:3:94230:94239	2798442	0	True				
ANR	2798508	Label	case '\\'' :	3874:3:94244:94253	2798442	1	True				
ANR	2798509	Label	"case '\\""' :"	3875:3:94258:94267	2798442	2	True				
ANR	2798510	Label	case '\\\\' :	3876:3:94272:94281	2798442	3	True				
ANR	2798511	GotoStatement	goto do_escape ;	3877:4:94287:94301	2798442	4	True				
ANR	2798512	Identifier	do_escape		2798442	0					
ANR	2798513	Label	default :	3878:3:94306:94313	2798442	5	True				
ANR	2798514	Identifier	default		2798442	0					
ANR	2798515	ExpressionStatement	source ++	3879:4:94319:94327	2798442	6	True				
ANR	2798516	PostIncDecOperationExpression	source ++		2798442	0					
ANR	2798517	Identifier	source		2798442	0					
ANR	2798518	IncDec	++		2798442	1					
ANR	2798519	BreakStatement	break ;	3880:4:94333:94338	2798442	7	True				
ANR	2798520	IfStatement	if ( ! should_free )		2798442	8					
ANR	2798521	Condition	! should_free	3884:5:94353:94364	2798442	0	True				
ANR	2798522	UnaryOperationExpression	! should_free		2798442	0					
ANR	2798523	UnaryOperator	!		2798442	0					
ANR	2798524	Identifier	should_free		2798442	1					
ANR	2798525	CompoundStatement		28:19:416:416	2798442	1					
ANR	2798526	ReturnStatement	return zend_string_copy ( str ) ;	3885:2:94371:94399	2798442	0	True				
ANR	2798527	CallExpression	zend_string_copy ( str )		2798442	0					
ANR	2798528	Callee	zend_string_copy		2798442	0					
ANR	2798529	Identifier	zend_string_copy		2798442	0					
ANR	2798530	ArgumentList	str		2798442	1					
ANR	2798531	Argument	str		2798442	0					
ANR	2798532	Identifier	str		2798442	0					
ANR	2798533	ReturnStatement	return str ;	3888:1:94406:94416	2798442	9	True				
ANR	2798534	Identifier	str		2798442	0					
ANR	2798535	Label	do_escape :	3890:0:94419:94428	2798442	10	True				
ANR	2798536	Identifier	do_escape		2798442	0					
ANR	2798537	ExpressionStatement	offset = source - ( char * ) ZSTR_VAL ( str )	3891:1:94431:94470	2798442	11	True				
ANR	2798538	AssignmentExpression	offset = source - ( char * ) ZSTR_VAL ( str )		2798442	0		=			
ANR	2798539	Identifier	offset		2798442	0					
ANR	2798540	AdditiveExpression	source - ( char * ) ZSTR_VAL ( str )		2798442	1		-			
ANR	2798541	Identifier	source		2798442	0					
ANR	2798542	CastExpression	( char * ) ZSTR_VAL ( str )		2798442	1					
ANR	2798543	CastTarget	char *		2798442	0					
ANR	2798544	CallExpression	ZSTR_VAL ( str )		2798442	1					
ANR	2798545	Callee	ZSTR_VAL		2798442	0					
ANR	2798546	Identifier	ZSTR_VAL		2798442	0					
ANR	2798547	ArgumentList	str		2798442	1					
ANR	2798548	Argument	str		2798442	0					
ANR	2798549	Identifier	str		2798442	0					
ANR	2798550	ExpressionStatement	"new_str = zend_string_alloc ( offset + ( 2 * ( ZSTR_LEN ( str ) - offset ) ) , 0 )"	3892:1:94473:94545	2798442	12	True				
ANR	2798551	AssignmentExpression	"new_str = zend_string_alloc ( offset + ( 2 * ( ZSTR_LEN ( str ) - offset ) ) , 0 )"		2798442	0		=			
ANR	2798552	Identifier	new_str		2798442	0					
ANR	2798553	CallExpression	"zend_string_alloc ( offset + ( 2 * ( ZSTR_LEN ( str ) - offset ) ) , 0 )"		2798442	1					
ANR	2798554	Callee	zend_string_alloc		2798442	0					
ANR	2798555	Identifier	zend_string_alloc		2798442	0					
ANR	2798556	ArgumentList	offset + ( 2 * ( ZSTR_LEN ( str ) - offset ) )		2798442	1					
ANR	2798557	Argument	offset + ( 2 * ( ZSTR_LEN ( str ) - offset ) )		2798442	0					
ANR	2798558	AdditiveExpression	offset + ( 2 * ( ZSTR_LEN ( str ) - offset ) )		2798442	0		+			
ANR	2798559	Identifier	offset		2798442	0					
ANR	2798560	MultiplicativeExpression	2 * ( ZSTR_LEN ( str ) - offset )		2798442	1		*			
ANR	2798561	PrimaryExpression	2		2798442	0					
ANR	2798562	AdditiveExpression	ZSTR_LEN ( str ) - offset		2798442	1		-			
ANR	2798563	CallExpression	ZSTR_LEN ( str )		2798442	0					
ANR	2798564	Callee	ZSTR_LEN		2798442	0					
ANR	2798565	Identifier	ZSTR_LEN		2798442	0					
ANR	2798566	ArgumentList	str		2798442	1					
ANR	2798567	Argument	str		2798442	0					
ANR	2798568	Identifier	str		2798442	0					
ANR	2798569	Identifier	offset		2798442	1					
ANR	2798570	Argument	0		2798442	1					
ANR	2798571	PrimaryExpression	0		2798442	0					
ANR	2798572	ExpressionStatement	"memcpy ( ZSTR_VAL ( new_str ) , ZSTR_VAL ( str ) , offset )"	3893:1:94548:94596	2798442	13	True				
ANR	2798573	CallExpression	"memcpy ( ZSTR_VAL ( new_str ) , ZSTR_VAL ( str ) , offset )"		2798442	0					
ANR	2798574	Callee	memcpy		2798442	0					
ANR	2798575	Identifier	memcpy		2798442	0					
ANR	2798576	ArgumentList	ZSTR_VAL ( new_str )		2798442	1					
ANR	2798577	Argument	ZSTR_VAL ( new_str )		2798442	0					
ANR	2798578	CallExpression	ZSTR_VAL ( new_str )		2798442	0					
ANR	2798579	Callee	ZSTR_VAL		2798442	0					
ANR	2798580	Identifier	ZSTR_VAL		2798442	0					
ANR	2798581	ArgumentList	new_str		2798442	1					
ANR	2798582	Argument	new_str		2798442	0					
ANR	2798583	Identifier	new_str		2798442	0					
ANR	2798584	Argument	ZSTR_VAL ( str )		2798442	1					
ANR	2798585	CallExpression	ZSTR_VAL ( str )		2798442	0					
ANR	2798586	Callee	ZSTR_VAL		2798442	0					
ANR	2798587	Identifier	ZSTR_VAL		2798442	0					
ANR	2798588	ArgumentList	str		2798442	1					
ANR	2798589	Argument	str		2798442	0					
ANR	2798590	Identifier	str		2798442	0					
ANR	2798591	Argument	offset		2798442	2					
ANR	2798592	Identifier	offset		2798442	0					
ANR	2798593	ExpressionStatement	target = ZSTR_VAL ( new_str ) + offset	3894:1:94599:94634	2798442	14	True				
ANR	2798594	AssignmentExpression	target = ZSTR_VAL ( new_str ) + offset		2798442	0		=			
ANR	2798595	Identifier	target		2798442	0					
ANR	2798596	AdditiveExpression	ZSTR_VAL ( new_str ) + offset		2798442	1		+			
ANR	2798597	CallExpression	ZSTR_VAL ( new_str )		2798442	0					
ANR	2798598	Callee	ZSTR_VAL		2798442	0					
ANR	2798599	Identifier	ZSTR_VAL		2798442	0					
ANR	2798600	ArgumentList	new_str		2798442	1					
ANR	2798601	Argument	new_str		2798442	0					
ANR	2798602	Identifier	new_str		2798442	0					
ANR	2798603	Identifier	offset		2798442	1					
ANR	2798604	WhileStatement	while ( source < end )		2798442	15					
ANR	2798605	Condition	source < end	3896:8:94645:94656	2798442	0	True				
ANR	2798606	RelationalExpression	source < end		2798442	0		<			
ANR	2798607	Identifier	source		2798442	0					
ANR	2798608	Identifier	end		2798442	1					
ANR	2798609	CompoundStatement		40:22:708:708	2798442	1					
ANR	2798610	SwitchStatement	switch ( * source )		2798442	0					
ANR	2798611	Condition	* source	3897:10:94671:94677	2798442	0	True				
ANR	2798612	UnaryOperationExpression	* source		2798442	0					
ANR	2798613	UnaryOperator	*		2798442	0					
ANR	2798614	Identifier	source		2798442	1					
ANR	2798615	CompoundStatement		41:19:729:729	2798442	1					
ANR	2798616	Label	case '\\0' :	3898:3:94685:94694	2798442	0	True				
ANR	2798617	ExpressionStatement	* target ++ = '\\\\'	3899:4:94700:94716	2798442	1	True				
ANR	2798618	AssignmentExpression	* target ++ = '\\\\'		2798442	0		=			
ANR	2798619	UnaryOperationExpression	* target ++		2798442	0					
ANR	2798620	UnaryOperator	*		2798442	0					
ANR	2798621	PostIncDecOperationExpression	target ++		2798442	1					
ANR	2798622	Identifier	target		2798442	0					
ANR	2798623	IncDec	++		2798442	1					
ANR	2798624	PrimaryExpression	'\\\\'		2798442	1					
ANR	2798625	ExpressionStatement	* target ++ = '0'	3900:4:94722:94737	2798442	2	True				
ANR	2798626	AssignmentExpression	* target ++ = '0'		2798442	0		=			
ANR	2798627	UnaryOperationExpression	* target ++		2798442	0					
ANR	2798628	UnaryOperator	*		2798442	0					
ANR	2798629	PostIncDecOperationExpression	target ++		2798442	1					
ANR	2798630	Identifier	target		2798442	0					
ANR	2798631	IncDec	++		2798442	1					
ANR	2798632	PrimaryExpression	'0'		2798442	1					
ANR	2798633	BreakStatement	break ;	3901:4:94743:94748	2798442	3	True				
ANR	2798634	Label	case '\\'' :	3902:3:94753:94762	2798442	4	True				
ANR	2798635	Label	"case '\\""' :"	3903:3:94767:94776	2798442	5	True				
ANR	2798636	Label	case '\\\\' :	3904:3:94781:94790	2798442	6	True				
ANR	2798637	ExpressionStatement	* target ++ = '\\\\'	3905:4:94796:94812	2798442	7	True				
ANR	2798638	AssignmentExpression	* target ++ = '\\\\'		2798442	0		=			
ANR	2798639	UnaryOperationExpression	* target ++		2798442	0					
ANR	2798640	UnaryOperator	*		2798442	0					
ANR	2798641	PostIncDecOperationExpression	target ++		2798442	1					
ANR	2798642	Identifier	target		2798442	0					
ANR	2798643	IncDec	++		2798442	1					
ANR	2798644	PrimaryExpression	'\\\\'		2798442	1					
ANR	2798645	Label	default :	3907:3:94860:94867	2798442	8	True				
ANR	2798646	Identifier	default		2798442	0					
ANR	2798647	ExpressionStatement	* target ++ = * source	3908:4:94873:94892	2798442	9	True				
ANR	2798648	AssignmentExpression	* target ++ = * source		2798442	0		=			
ANR	2798649	UnaryOperationExpression	* target ++		2798442	0					
ANR	2798650	UnaryOperator	*		2798442	0					
ANR	2798651	PostIncDecOperationExpression	target ++		2798442	1					
ANR	2798652	Identifier	target		2798442	0					
ANR	2798653	IncDec	++		2798442	1					
ANR	2798654	UnaryOperationExpression	* source		2798442	1					
ANR	2798655	UnaryOperator	*		2798442	0					
ANR	2798656	Identifier	source		2798442	1					
ANR	2798657	BreakStatement	break ;	3909:4:94898:94903	2798442	10	True				
ANR	2798658	ExpressionStatement	source ++	3912:2:94912:94920	2798442	1	True				
ANR	2798659	PostIncDecOperationExpression	source ++		2798442	0					
ANR	2798660	Identifier	source		2798442	0					
ANR	2798661	IncDec	++		2798442	1					
ANR	2798662	ExpressionStatement	* target = 0	3915:1:94927:94938	2798442	16	True				
ANR	2798663	AssignmentExpression	* target = 0		2798442	0		=			
ANR	2798664	UnaryOperationExpression	* target		2798442	0					
ANR	2798665	UnaryOperator	*		2798442	0					
ANR	2798666	Identifier	target		2798442	1					
ANR	2798667	PrimaryExpression	0		2798442	1					
ANR	2798668	IfStatement	if ( should_free )		2798442	17					
ANR	2798669	Condition	should_free	3916:5:94945:94955	2798442	0	True				
ANR	2798670	Identifier	should_free		2798442	0					
ANR	2798671	CompoundStatement		60:18:1007:1007	2798442	1					
ANR	2798672	ExpressionStatement	zend_string_release ( str )	3917:2:94962:94986	2798442	0	True				
ANR	2798673	CallExpression	zend_string_release ( str )		2798442	0					
ANR	2798674	Callee	zend_string_release		2798442	0					
ANR	2798675	Identifier	zend_string_release		2798442	0					
ANR	2798676	ArgumentList	str		2798442	1					
ANR	2798677	Argument	str		2798442	0					
ANR	2798678	Identifier	str		2798442	0					
ANR	2798679	IfStatement	if ( ZSTR_LEN ( new_str ) - ( target - ZSTR_VAL ( new_str ) ) > 16 )		2798442	18					
ANR	2798680	Condition	ZSTR_LEN ( new_str ) - ( target - ZSTR_VAL ( new_str ) ) > 16	3920:5:94997:95049	2798442	0	True				
ANR	2798681	RelationalExpression	ZSTR_LEN ( new_str ) - ( target - ZSTR_VAL ( new_str ) ) > 16		2798442	0		>			
ANR	2798682	AdditiveExpression	ZSTR_LEN ( new_str ) - ( target - ZSTR_VAL ( new_str ) )		2798442	0		-			
ANR	2798683	CallExpression	ZSTR_LEN ( new_str )		2798442	0					
ANR	2798684	Callee	ZSTR_LEN		2798442	0					
ANR	2798685	Identifier	ZSTR_LEN		2798442	0					
ANR	2798686	ArgumentList	new_str		2798442	1					
ANR	2798687	Argument	new_str		2798442	0					
ANR	2798688	Identifier	new_str		2798442	0					
ANR	2798689	AdditiveExpression	target - ZSTR_VAL ( new_str )		2798442	1		-			
ANR	2798690	Identifier	target		2798442	0					
ANR	2798691	CallExpression	ZSTR_VAL ( new_str )		2798442	1					
ANR	2798692	Callee	ZSTR_VAL		2798442	0					
ANR	2798693	Identifier	ZSTR_VAL		2798442	0					
ANR	2798694	ArgumentList	new_str		2798442	1					
ANR	2798695	Argument	new_str		2798442	0					
ANR	2798696	Identifier	new_str		2798442	0					
ANR	2798697	PrimaryExpression	16		2798442	1					
ANR	2798698	CompoundStatement		64:60:1101:1101	2798442	1					
ANR	2798699	ExpressionStatement	"new_str = zend_string_truncate ( new_str , target - ZSTR_VAL ( new_str ) , 0 )"	3921:2:95056:95126	2798442	0	True				
ANR	2798700	AssignmentExpression	"new_str = zend_string_truncate ( new_str , target - ZSTR_VAL ( new_str ) , 0 )"		2798442	0		=			
ANR	2798701	Identifier	new_str		2798442	0					
ANR	2798702	CallExpression	"zend_string_truncate ( new_str , target - ZSTR_VAL ( new_str ) , 0 )"		2798442	1					
ANR	2798703	Callee	zend_string_truncate		2798442	0					
ANR	2798704	Identifier	zend_string_truncate		2798442	0					
ANR	2798705	ArgumentList	new_str		2798442	1					
ANR	2798706	Argument	new_str		2798442	0					
ANR	2798707	Identifier	new_str		2798442	0					
ANR	2798708	Argument	target - ZSTR_VAL ( new_str )		2798442	1					
ANR	2798709	AdditiveExpression	target - ZSTR_VAL ( new_str )		2798442	0		-			
ANR	2798710	Identifier	target		2798442	0					
ANR	2798711	CallExpression	ZSTR_VAL ( new_str )		2798442	1					
ANR	2798712	Callee	ZSTR_VAL		2798442	0					
ANR	2798713	Identifier	ZSTR_VAL		2798442	0					
ANR	2798714	ArgumentList	new_str		2798442	1					
ANR	2798715	Argument	new_str		2798442	0					
ANR	2798716	Identifier	new_str		2798442	0					
ANR	2798717	Argument	0		2798442	2					
ANR	2798718	PrimaryExpression	0		2798442	0					
ANR	2798719	ElseStatement	else		2798442	0					
ANR	2798720	CompoundStatement		66:8:1185:1185	2798442	0					
ANR	2798721	ExpressionStatement	ZSTR_LEN ( new_str ) = target - ZSTR_VAL ( new_str )	3923:2:95140:95186	2798442	0	True				
ANR	2798722	AssignmentExpression	ZSTR_LEN ( new_str ) = target - ZSTR_VAL ( new_str )		2798442	0		=			
ANR	2798723	CallExpression	ZSTR_LEN ( new_str )		2798442	0					
ANR	2798724	Callee	ZSTR_LEN		2798442	0					
ANR	2798725	Identifier	ZSTR_LEN		2798442	0					
ANR	2798726	ArgumentList	new_str		2798442	1					
ANR	2798727	Argument	new_str		2798442	0					
ANR	2798728	Identifier	new_str		2798442	0					
ANR	2798729	AdditiveExpression	target - ZSTR_VAL ( new_str )		2798442	1		-			
ANR	2798730	Identifier	target		2798442	0					
ANR	2798731	CallExpression	ZSTR_VAL ( new_str )		2798442	1					
ANR	2798732	Callee	ZSTR_VAL		2798442	0					
ANR	2798733	Identifier	ZSTR_VAL		2798442	0					
ANR	2798734	ArgumentList	new_str		2798442	1					
ANR	2798735	Argument	new_str		2798442	0					
ANR	2798736	Identifier	new_str		2798442	0					
ANR	2798737	ReturnStatement	return new_str ;	3926:1:95193:95207	2798442	19	True				
ANR	2798738	Identifier	new_str		2798442	0					
ANR	2798739	ReturnType	PHPAPI zend_string *		2798442	1					
ANR	2798740	Identifier	php_addslashes		2798442	2					
ANR	2798741	ParameterList	"zend_string * str , int should_free"		2798442	3					
ANR	2798742	Parameter	zend_string * str	3856:35:93915:93930	2798442	0	True				
ANR	2798743	ParameterType	zend_string *		2798442	0					
ANR	2798744	Identifier	str		2798442	1					
ANR	2798745	Parameter	int should_free	3856:53:93933:93947	2798442	1	True				
ANR	2798746	ParameterType	int		2798442	0					
ANR	2798747	Identifier	should_free		2798442	1					
ANR	2798748	CFGEntryNode	ENTRY		2798442		True				
ANR	2798749	CFGExitNode	EXIT		2798442		True				
ANR	2798750	Symbol	should_free		2798442						
ANR	2798751	Symbol	zend_string_alloc		2798442						
ANR	2798752	Symbol	offset		2798442						
ANR	2798753	Symbol	zend_string_truncate		2798442						
ANR	2798754	Symbol	source		2798442						
ANR	2798755	Symbol	zend_string_copy		2798442						
ANR	2798756	Symbol	* target ++		2798442						
ANR	2798757	Symbol	ZSTR_EMPTY_ALLOC		2798442						
ANR	2798758	Symbol	target		2798442						
ANR	2798759	Symbol	ZSTR_VAL		2798442						
ANR	2798760	Symbol	str		2798442						
ANR	2798761	Symbol	* target		2798442						
ANR	2798762	Symbol	new_str		2798442						
ANR	2798763	Symbol	ZSTR_LEN		2798442						
ANR	2798764	Symbol	* source		2798442						
ANR	2798765	Symbol	end		2798442						
ANR	2798766	Function	php_str_replace_in_subject	3938:0:95606:100175							
ANR	2798767	FunctionDef	"php_str_replace_in_subject (zval * search , zval * replace , zval * subject , zval * result , int case_sensitivity)"		2798766	0					
ANR	2798768	CompoundStatement		3939:0:95730:100175	2798766	0					
ANR	2798769	IdentifierDeclStatement	"zval * search_entry , * replace_entry = NULL ;"	3940:1:95733:95779	2798766	0	True				
ANR	2798770	IdentifierDecl	* search_entry		2798766	0					
ANR	2798771	IdentifierDeclType	zval *		2798766	0					
ANR	2798772	Identifier	search_entry		2798766	1					
ANR	2798773	IdentifierDecl	* replace_entry = NULL		2798766	1					
ANR	2798774	IdentifierDeclType	zval *		2798766	0					
ANR	2798775	Identifier	replace_entry		2798766	1					
ANR	2798776	AssignmentExpression	* replace_entry = NULL		2798766	2		=			
ANR	2798777	Identifier	NULL		2798766	0					
ANR	2798778	Identifier	NULL		2798766	1					
ANR	2798779	IdentifierDeclStatement	"zend_string * tmp_result , * replace_entry_str = NULL ;"	3942:1:95782:95836	2798766	1	True				
ANR	2798780	IdentifierDecl	* tmp_result		2798766	0					
ANR	2798781	IdentifierDeclType	zend_string *		2798766	0					
ANR	2798782	Identifier	tmp_result		2798766	1					
ANR	2798783	IdentifierDecl	* replace_entry_str = NULL		2798766	1					
ANR	2798784	IdentifierDeclType	zend_string *		2798766	0					
ANR	2798785	Identifier	replace_entry_str		2798766	1					
ANR	2798786	AssignmentExpression	* replace_entry_str = NULL		2798766	2		=			
ANR	2798787	Identifier	NULL		2798766	0					
ANR	2798788	Identifier	NULL		2798766	1					
ANR	2798789	IdentifierDeclStatement	char * replace_value = NULL ;	3944:1:95839:95866	2798766	2	True				
ANR	2798790	IdentifierDecl	* replace_value = NULL		2798766	0					
ANR	2798791	IdentifierDeclType	char *		2798766	0					
ANR	2798792	Identifier	replace_value		2798766	1					
ANR	2798793	AssignmentExpression	* replace_value = NULL		2798766	2		=			
ANR	2798794	Identifier	NULL		2798766	0					
ANR	2798795	Identifier	NULL		2798766	1					
ANR	2798796	IdentifierDeclStatement	size_t replace_len = 0 ;	3945:1:95869:95893	2798766	3	True				
ANR	2798797	IdentifierDecl	replace_len = 0		2798766	0					
ANR	2798798	IdentifierDeclType	size_t		2798766	0					
ANR	2798799	Identifier	replace_len		2798766	1					
ANR	2798800	AssignmentExpression	replace_len = 0		2798766	2		=			
ANR	2798801	Identifier	replace_len		2798766	0					
ANR	2798802	PrimaryExpression	0		2798766	1					
ANR	2798803	IdentifierDeclStatement	zend_long replace_count = 0 ;	3946:1:95896:95924	2798766	4	True				
ANR	2798804	IdentifierDecl	replace_count = 0		2798766	0					
ANR	2798805	IdentifierDeclType	zend_long		2798766	0					
ANR	2798806	Identifier	replace_count		2798766	1					
ANR	2798807	AssignmentExpression	replace_count = 0		2798766	2		=			
ANR	2798808	Identifier	replace_count		2798766	0					
ANR	2798809	PrimaryExpression	0		2798766	1					
ANR	2798810	IdentifierDeclStatement	zend_string * subject_str ;	3947:1:95927:95951	2798766	5	True				
ANR	2798811	IdentifierDecl	* subject_str		2798766	0					
ANR	2798812	IdentifierDeclType	zend_string *		2798766	0					
ANR	2798813	Identifier	subject_str		2798766	1					
ANR	2798814	IdentifierDeclStatement	zend_string * lc_subject_str = NULL ;	3948:1:95954:95988	2798766	6	True				
ANR	2798815	IdentifierDecl	* lc_subject_str = NULL		2798766	0					
ANR	2798816	IdentifierDeclType	zend_string *		2798766	0					
ANR	2798817	Identifier	lc_subject_str		2798766	1					
ANR	2798818	AssignmentExpression	* lc_subject_str = NULL		2798766	2		=			
ANR	2798819	Identifier	NULL		2798766	0					
ANR	2798820	Identifier	NULL		2798766	1					
ANR	2798821	IdentifierDeclStatement	uint32_t replace_idx ;	3949:1:95991:96015	2798766	7	True				
ANR	2798822	IdentifierDecl	replace_idx		2798766	0					
ANR	2798823	IdentifierDeclType	uint32_t		2798766	0					
ANR	2798824	Identifier	replace_idx		2798766	1					
ANR	2798825	ExpressionStatement	subject_str = zval_get_string ( subject )	3952:1:96064:96102	2798766	8	True				
ANR	2798826	AssignmentExpression	subject_str = zval_get_string ( subject )		2798766	0		=			
ANR	2798827	Identifier	subject_str		2798766	0					
ANR	2798828	CallExpression	zval_get_string ( subject )		2798766	1					
ANR	2798829	Callee	zval_get_string		2798766	0					
ANR	2798830	Identifier	zval_get_string		2798766	0					
ANR	2798831	ArgumentList	subject		2798766	1					
ANR	2798832	Argument	subject		2798766	0					
ANR	2798833	Identifier	subject		2798766	0					
ANR	2798834	IfStatement	if ( ZSTR_LEN ( subject_str ) == 0 )		2798766	9					
ANR	2798835	Condition	ZSTR_LEN ( subject_str ) == 0	3953:5:96109:96134	2798766	0	True				
ANR	2798836	EqualityExpression	ZSTR_LEN ( subject_str ) == 0		2798766	0		==			
ANR	2798837	CallExpression	ZSTR_LEN ( subject_str )		2798766	0					
ANR	2798838	Callee	ZSTR_LEN		2798766	0					
ANR	2798839	Identifier	ZSTR_LEN		2798766	0					
ANR	2798840	ArgumentList	subject_str		2798766	1					
ANR	2798841	Argument	subject_str		2798766	0					
ANR	2798842	Identifier	subject_str		2798766	0					
ANR	2798843	PrimaryExpression	0		2798766	1					
ANR	2798844	CompoundStatement		15:33:406:406	2798766	1					
ANR	2798845	ExpressionStatement	zend_string_release ( subject_str )	3954:2:96141:96173	2798766	0	True				
ANR	2798846	CallExpression	zend_string_release ( subject_str )		2798766	0					
ANR	2798847	Callee	zend_string_release		2798766	0					
ANR	2798848	Identifier	zend_string_release		2798766	0					
ANR	2798849	ArgumentList	subject_str		2798766	1					
ANR	2798850	Argument	subject_str		2798766	0					
ANR	2798851	Identifier	subject_str		2798766	0					
ANR	2798852	ExpressionStatement	ZVAL_EMPTY_STRING ( result )	3955:2:96177:96202	2798766	1	True				
ANR	2798853	CallExpression	ZVAL_EMPTY_STRING ( result )		2798766	0					
ANR	2798854	Callee	ZVAL_EMPTY_STRING		2798766	0					
ANR	2798855	Identifier	ZVAL_EMPTY_STRING		2798766	0					
ANR	2798856	ArgumentList	result		2798766	1					
ANR	2798857	Argument	result		2798766	0					
ANR	2798858	Identifier	result		2798766	0					
ANR	2798859	ReturnStatement	return 0 ;	3956:2:96206:96214	2798766	2	True				
ANR	2798860	PrimaryExpression	0		2798766	0					
ANR	2798861	IfStatement	if ( Z_TYPE_P ( search ) == IS_ARRAY )		2798766	10					
ANR	2798862	Condition	Z_TYPE_P ( search ) == IS_ARRAY	3960:5:96254:96281	2798766	0	True				
ANR	2798863	EqualityExpression	Z_TYPE_P ( search ) == IS_ARRAY		2798766	0		==			
ANR	2798864	CallExpression	Z_TYPE_P ( search )		2798766	0					
ANR	2798865	Callee	Z_TYPE_P		2798766	0					
ANR	2798866	Identifier	Z_TYPE_P		2798766	0					
ANR	2798867	ArgumentList	search		2798766	1					
ANR	2798868	Argument	search		2798766	0					
ANR	2798869	Identifier	search		2798766	0					
ANR	2798870	Identifier	IS_ARRAY		2798766	1					
ANR	2798871	CompoundStatement		22:35:553:553	2798766	1					
ANR	2798872	ExpressionStatement	"ZVAL_STR_COPY ( result , subject_str )"	3962:2:96346:96380	2798766	0	True				
ANR	2798873	CallExpression	"ZVAL_STR_COPY ( result , subject_str )"		2798766	0					
ANR	2798874	Callee	ZVAL_STR_COPY		2798766	0					
ANR	2798875	Identifier	ZVAL_STR_COPY		2798766	0					
ANR	2798876	ArgumentList	result		2798766	1					
ANR	2798877	Argument	result		2798766	0					
ANR	2798878	Identifier	result		2798766	0					
ANR	2798879	Argument	subject_str		2798766	1					
ANR	2798880	Identifier	subject_str		2798766	0					
ANR	2798881	IfStatement	if ( Z_TYPE_P ( replace ) == IS_ARRAY )		2798766	1					
ANR	2798882	Condition	Z_TYPE_P ( replace ) == IS_ARRAY	3964:6:96389:96417	2798766	0	True				
ANR	2798883	EqualityExpression	Z_TYPE_P ( replace ) == IS_ARRAY		2798766	0		==			
ANR	2798884	CallExpression	Z_TYPE_P ( replace )		2798766	0					
ANR	2798885	Callee	Z_TYPE_P		2798766	0					
ANR	2798886	Identifier	Z_TYPE_P		2798766	0					
ANR	2798887	ArgumentList	replace		2798766	1					
ANR	2798888	Argument	replace		2798766	0					
ANR	2798889	Identifier	replace		2798766	0					
ANR	2798890	Identifier	IS_ARRAY		2798766	1					
ANR	2798891	CompoundStatement		26:37:689:689	2798766	1					
ANR	2798892	ExpressionStatement	replace_idx = 0	3965:3:96425:96440	2798766	0	True				
ANR	2798893	AssignmentExpression	replace_idx = 0		2798766	0		=			
ANR	2798894	Identifier	replace_idx		2798766	0					
ANR	2798895	PrimaryExpression	0		2798766	1					
ANR	2798896	ElseStatement	else		2798766	0					
ANR	2798897	CompoundStatement		28:9:720:720	2798766	0					
ANR	2798898	ExpressionStatement	replace_value = Z_STRVAL_P ( replace )	3968:3:96505:96540	2798766	0	True				
ANR	2798899	AssignmentExpression	replace_value = Z_STRVAL_P ( replace )		2798766	0		=			
ANR	2798900	Identifier	replace_value		2798766	0					
ANR	2798901	CallExpression	Z_STRVAL_P ( replace )		2798766	1					
ANR	2798902	Callee	Z_STRVAL_P		2798766	0					
ANR	2798903	Identifier	Z_STRVAL_P		2798766	0					
ANR	2798904	ArgumentList	replace		2798766	1					
ANR	2798905	Argument	replace		2798766	0					
ANR	2798906	Identifier	replace		2798766	0					
ANR	2798907	ExpressionStatement	replace_len = Z_STRLEN_P ( replace )	3969:3:96545:96578	2798766	1	True				
ANR	2798908	AssignmentExpression	replace_len = Z_STRLEN_P ( replace )		2798766	0		=			
ANR	2798909	Identifier	replace_len		2798766	0					
ANR	2798910	CallExpression	Z_STRLEN_P ( replace )		2798766	1					
ANR	2798911	Callee	Z_STRLEN_P		2798766	0					
ANR	2798912	Identifier	Z_STRLEN_P		2798766	0					
ANR	2798913	ArgumentList	replace		2798766	1					
ANR	2798914	Argument	replace		2798766	0					
ANR	2798915	Identifier	replace		2798766	0					
ANR	2798916	Statement	ZEND_HASH_FOREACH_VAL	3973:2:96645:96665	2798766	2	True				
ANR	2798917	Statement	(	3973:23:96666:96666	2798766	3	True				
ANR	2798918	Statement	Z_ARRVAL_P	3973:24:96667:96676	2798766	4	True				
ANR	2798919	Statement	(	3973:34:96677:96677	2798766	5	True				
ANR	2798920	Statement	search	3973:35:96678:96683	2798766	6	True				
ANR	2798921	Statement	)	3973:41:96684:96684	2798766	7	True				
ANR	2798922	Statement	","	3973:42:96685:96685	2798766	8	True				
ANR	2798923	Statement	search_entry	3973:44:96687:96698	2798766	9	True				
ANR	2798924	Statement	)	3973:56:96699:96699	2798766	10	True				
ANR	2798925	CompoundStatement		35:58:970:970	2798766	11					
ANR	2798926	ExpressionStatement	ZVAL_DEREF ( search_entry )	3975:3:96753:96777	2798766	0	True				
ANR	2798927	CallExpression	ZVAL_DEREF ( search_entry )		2798766	0					
ANR	2798928	Callee	ZVAL_DEREF		2798766	0					
ANR	2798929	Identifier	ZVAL_DEREF		2798766	0					
ANR	2798930	ArgumentList	search_entry		2798766	1					
ANR	2798931	Argument	search_entry		2798766	0					
ANR	2798932	Identifier	search_entry		2798766	0					
ANR	2798933	ExpressionStatement	convert_to_string ( search_entry )	3976:3:96782:96813	2798766	1	True				
ANR	2798934	CallExpression	convert_to_string ( search_entry )		2798766	0					
ANR	2798935	Callee	convert_to_string		2798766	0					
ANR	2798936	Identifier	convert_to_string		2798766	0					
ANR	2798937	ArgumentList	search_entry		2798766	1					
ANR	2798938	Argument	search_entry		2798766	0					
ANR	2798939	Identifier	search_entry		2798766	0					
ANR	2798940	IfStatement	if ( Z_STRLEN_P ( search_entry ) == 0 )		2798766	2					
ANR	2798941	Condition	Z_STRLEN_P ( search_entry ) == 0	3977:7:96822:96850	2798766	0	True				
ANR	2798942	EqualityExpression	Z_STRLEN_P ( search_entry ) == 0		2798766	0		==			
ANR	2798943	CallExpression	Z_STRLEN_P ( search_entry )		2798766	0					
ANR	2798944	Callee	Z_STRLEN_P		2798766	0					
ANR	2798945	Identifier	Z_STRLEN_P		2798766	0					
ANR	2798946	ArgumentList	search_entry		2798766	1					
ANR	2798947	Argument	search_entry		2798766	0					
ANR	2798948	Identifier	search_entry		2798766	0					
ANR	2798949	PrimaryExpression	0		2798766	1					
ANR	2798950	CompoundStatement		39:38:1122:1122	2798766	1					
ANR	2798951	IfStatement	if ( Z_TYPE_P ( replace ) == IS_ARRAY )		2798766	0					
ANR	2798952	Condition	Z_TYPE_P ( replace ) == IS_ARRAY	3978:8:96863:96891	2798766	0	True				
ANR	2798953	EqualityExpression	Z_TYPE_P ( replace ) == IS_ARRAY		2798766	0		==			
ANR	2798954	CallExpression	Z_TYPE_P ( replace )		2798766	0					
ANR	2798955	Callee	Z_TYPE_P		2798766	0					
ANR	2798956	Identifier	Z_TYPE_P		2798766	0					
ANR	2798957	ArgumentList	replace		2798766	1					
ANR	2798958	Argument	replace		2798766	0					
ANR	2798959	Identifier	replace		2798766	0					
ANR	2798960	Identifier	IS_ARRAY		2798766	1					
ANR	2798961	CompoundStatement		40:39:1163:1163	2798766	1					
ANR	2798962	ExpressionStatement	replace_idx ++	3979:5:96901:96914	2798766	0	True				
ANR	2798963	PostIncDecOperationExpression	replace_idx ++		2798766	0					
ANR	2798964	Identifier	replace_idx		2798766	0					
ANR	2798965	IncDec	++		2798766	1					
ANR	2798966	ContinueStatement	continue ;	3981:4:96926:96934	2798766	1	True				
ANR	2798967	IfStatement	if ( Z_TYPE_P ( replace ) == IS_ARRAY )		2798766	3					
ANR	2798968	Condition	Z_TYPE_P ( replace ) == IS_ARRAY	3985:7:96982:97010	2798766	0	True				
ANR	2798969	EqualityExpression	Z_TYPE_P ( replace ) == IS_ARRAY		2798766	0		==			
ANR	2798970	CallExpression	Z_TYPE_P ( replace )		2798766	0					
ANR	2798971	Callee	Z_TYPE_P		2798766	0					
ANR	2798972	Identifier	Z_TYPE_P		2798766	0					
ANR	2798973	ArgumentList	replace		2798766	1					
ANR	2798974	Argument	replace		2798766	0					
ANR	2798975	Identifier	replace		2798766	0					
ANR	2798976	Identifier	IS_ARRAY		2798766	1					
ANR	2798977	CompoundStatement		47:38:1282:1282	2798766	1					
ANR	2798978	WhileStatement	while ( replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed )		2798766	0					
ANR	2798979	Condition	replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed	3987:11:97054:97096	2798766	0	True				
ANR	2798980	RelationalExpression	replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed		2798766	0		<			
ANR	2798981	Identifier	replace_idx		2798766	0					
ANR	2798982	PtrMemberAccess	Z_ARRVAL_P ( replace ) -> nNumUsed		2798766	1					
ANR	2798983	CallExpression	Z_ARRVAL_P ( replace )		2798766	0					
ANR	2798984	Callee	Z_ARRVAL_P		2798766	0					
ANR	2798985	Identifier	Z_ARRVAL_P		2798766	0					
ANR	2798986	ArgumentList	replace		2798766	1					
ANR	2798987	Argument	replace		2798766	0					
ANR	2798988	Identifier	replace		2798766	0					
ANR	2798989	Identifier	nNumUsed		2798766	1					
ANR	2798990	CompoundStatement		49:56:1368:1368	2798766	1					
ANR	2798991	ExpressionStatement	replace_entry = & Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val	3988:5:97106:97167	2798766	0	True				
ANR	2798992	AssignmentExpression	replace_entry = & Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		2798766	0		=			
ANR	2798993	Identifier	replace_entry		2798766	0					
ANR	2798994	UnaryOperationExpression	& Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		2798766	1					
ANR	2798995	UnaryOperator	&		2798766	0					
ANR	2798996	MemberAccess	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		2798766	1					
ANR	2798997	ArrayIndexing	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ]		2798766	0					
ANR	2798998	PtrMemberAccess	Z_ARRVAL_P ( replace ) -> arData		2798766	0					
ANR	2798999	CallExpression	Z_ARRVAL_P ( replace )		2798766	0					
ANR	2799000	Callee	Z_ARRVAL_P		2798766	0					
ANR	2799001	Identifier	Z_ARRVAL_P		2798766	0					
ANR	2799002	ArgumentList	replace		2798766	1					
ANR	2799003	Argument	replace		2798766	0					
ANR	2799004	Identifier	replace		2798766	0					
ANR	2799005	Identifier	arData		2798766	1					
ANR	2799006	Identifier	replace_idx		2798766	1					
ANR	2799007	Identifier	val		2798766	1					
ANR	2799008	IfStatement	if ( Z_TYPE_P ( replace_entry ) != IS_UNDEF )		2798766	1					
ANR	2799009	Condition	Z_TYPE_P ( replace_entry ) != IS_UNDEF	3989:9:97178:97212	2798766	0	True				
ANR	2799010	EqualityExpression	Z_TYPE_P ( replace_entry ) != IS_UNDEF		2798766	0		!=			
ANR	2799011	CallExpression	Z_TYPE_P ( replace_entry )		2798766	0					
ANR	2799012	Callee	Z_TYPE_P		2798766	0					
ANR	2799013	Identifier	Z_TYPE_P		2798766	0					
ANR	2799014	ArgumentList	replace_entry		2798766	1					
ANR	2799015	Argument	replace_entry		2798766	0					
ANR	2799016	Identifier	replace_entry		2798766	0					
ANR	2799017	Identifier	IS_UNDEF		2798766	1					
ANR	2799018	CompoundStatement		51:46:1484:1484	2798766	1					
ANR	2799019	BreakStatement	break ;	3990:6:97223:97228	2798766	0	True				
ANR	2799020	ExpressionStatement	replace_idx ++	3992:5:97242:97255	2798766	2	True				
ANR	2799021	PostIncDecOperationExpression	replace_idx ++		2798766	0					
ANR	2799022	Identifier	replace_idx		2798766	0					
ANR	2799023	IncDec	++		2798766	1					
ANR	2799024	IfStatement	if ( replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed )		2798766	1					
ANR	2799025	Condition	replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed	3994:8:97271:97313	2798766	0	True				
ANR	2799026	RelationalExpression	replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed		2798766	0		<			
ANR	2799027	Identifier	replace_idx		2798766	0					
ANR	2799028	PtrMemberAccess	Z_ARRVAL_P ( replace ) -> nNumUsed		2798766	1					
ANR	2799029	CallExpression	Z_ARRVAL_P ( replace )		2798766	0					
ANR	2799030	Callee	Z_ARRVAL_P		2798766	0					
ANR	2799031	Identifier	Z_ARRVAL_P		2798766	0					
ANR	2799032	ArgumentList	replace		2798766	1					
ANR	2799033	Argument	replace		2798766	0					
ANR	2799034	Identifier	replace		2798766	0					
ANR	2799035	Identifier	nNumUsed		2798766	1					
ANR	2799036	CompoundStatement		56:53:1585:1585	2798766	1					
ANR	2799037	ExpressionStatement	replace_entry_str = zval_get_string ( replace_entry )	3996:5:97372:97422	2798766	0	True				
ANR	2799038	AssignmentExpression	replace_entry_str = zval_get_string ( replace_entry )		2798766	0		=			
ANR	2799039	Identifier	replace_entry_str		2798766	0					
ANR	2799040	CallExpression	zval_get_string ( replace_entry )		2798766	1					
ANR	2799041	Callee	zval_get_string		2798766	0					
ANR	2799042	Identifier	zval_get_string		2798766	0					
ANR	2799043	ArgumentList	replace_entry		2798766	1					
ANR	2799044	Argument	replace_entry		2798766	0					
ANR	2799045	Identifier	replace_entry		2798766	0					
ANR	2799046	ExpressionStatement	replace_value = ZSTR_VAL ( replace_entry_str )	3999:5:97492:97535	2798766	1	True				
ANR	2799047	AssignmentExpression	replace_value = ZSTR_VAL ( replace_entry_str )		2798766	0		=			
ANR	2799048	Identifier	replace_value		2798766	0					
ANR	2799049	CallExpression	ZSTR_VAL ( replace_entry_str )		2798766	1					
ANR	2799050	Callee	ZSTR_VAL		2798766	0					
ANR	2799051	Identifier	ZSTR_VAL		2798766	0					
ANR	2799052	ArgumentList	replace_entry_str		2798766	1					
ANR	2799053	Argument	replace_entry_str		2798766	0					
ANR	2799054	Identifier	replace_entry_str		2798766	0					
ANR	2799055	ExpressionStatement	replace_len = ZSTR_LEN ( replace_entry_str )	4000:5:97542:97583	2798766	2	True				
ANR	2799056	AssignmentExpression	replace_len = ZSTR_LEN ( replace_entry_str )		2798766	0		=			
ANR	2799057	Identifier	replace_len		2798766	0					
ANR	2799058	CallExpression	ZSTR_LEN ( replace_entry_str )		2798766	1					
ANR	2799059	Callee	ZSTR_LEN		2798766	0					
ANR	2799060	Identifier	ZSTR_LEN		2798766	0					
ANR	2799061	ArgumentList	replace_entry_str		2798766	1					
ANR	2799062	Argument	replace_entry_str		2798766	0					
ANR	2799063	Identifier	replace_entry_str		2798766	0					
ANR	2799064	ExpressionStatement	replace_idx ++	4002:5:97591:97604	2798766	3	True				
ANR	2799065	PostIncDecOperationExpression	replace_idx ++		2798766	0					
ANR	2799066	Identifier	replace_idx		2798766	0					
ANR	2799067	IncDec	++		2798766	1					
ANR	2799068	ElseStatement	else		2798766	0					
ANR	2799069	CompoundStatement		65:11:1886:1886	2798766	0					
ANR	2799070	ExpressionStatement	"replace_value = """""	4005:5:97694:97712	2798766	0	True				
ANR	2799071	AssignmentExpression	"replace_value = """""		2798766	0		=			
ANR	2799072	Identifier	replace_value		2798766	0					
ANR	2799073	PrimaryExpression	""""""		2798766	1					
ANR	2799074	ExpressionStatement	replace_len = 0	4006:5:97719:97734	2798766	1	True				
ANR	2799075	AssignmentExpression	replace_len = 0		2798766	0		=			
ANR	2799076	Identifier	replace_len		2798766	0					
ANR	2799077	PrimaryExpression	0		2798766	1					
ANR	2799078	IfStatement	if ( Z_STRLEN_P ( search_entry ) == 1 )		2798766	4					
ANR	2799079	Condition	Z_STRLEN_P ( search_entry ) == 1	4010:7:97755:97783	2798766	0	True				
ANR	2799080	EqualityExpression	Z_STRLEN_P ( search_entry ) == 1		2798766	0		==			
ANR	2799081	CallExpression	Z_STRLEN_P ( search_entry )		2798766	0					
ANR	2799082	Callee	Z_STRLEN_P		2798766	0					
ANR	2799083	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799084	ArgumentList	search_entry		2798766	1					
ANR	2799085	Argument	search_entry		2798766	0					
ANR	2799086	Identifier	search_entry		2798766	0					
ANR	2799087	PrimaryExpression	1		2798766	1					
ANR	2799088	CompoundStatement		73:4:2061:2104	2798766	1					
ANR	2799089	IdentifierDeclStatement	zend_long old_replace_count = replace_count ;	4011:4:97792:97835	2798766	0	True				
ANR	2799090	IdentifierDecl	old_replace_count = replace_count		2798766	0					
ANR	2799091	IdentifierDeclType	zend_long		2798766	0					
ANR	2799092	Identifier	old_replace_count		2798766	1					
ANR	2799093	AssignmentExpression	old_replace_count = replace_count		2798766	2		=			
ANR	2799094	Identifier	replace_count		2798766	0					
ANR	2799095	Identifier	replace_count		2798766	1					
ANR	2799096	ExpressionStatement	"tmp_result = php_char_to_str_ex ( Z_STR_P ( result ) , Z_STRVAL_P ( search_entry ) [ 0 ] , replace_value , replace_len , case_sensitivity , & replace_count )"	4013:4:97842:98021	2798766	1	True				
ANR	2799097	AssignmentExpression	"tmp_result = php_char_to_str_ex ( Z_STR_P ( result ) , Z_STRVAL_P ( search_entry ) [ 0 ] , replace_value , replace_len , case_sensitivity , & replace_count )"		2798766	0		=			
ANR	2799098	Identifier	tmp_result		2798766	0					
ANR	2799099	CallExpression	"php_char_to_str_ex ( Z_STR_P ( result ) , Z_STRVAL_P ( search_entry ) [ 0 ] , replace_value , replace_len , case_sensitivity , & replace_count )"		2798766	1					
ANR	2799100	Callee	php_char_to_str_ex		2798766	0					
ANR	2799101	Identifier	php_char_to_str_ex		2798766	0					
ANR	2799102	ArgumentList	Z_STR_P ( result )		2798766	1					
ANR	2799103	Argument	Z_STR_P ( result )		2798766	0					
ANR	2799104	CallExpression	Z_STR_P ( result )		2798766	0					
ANR	2799105	Callee	Z_STR_P		2798766	0					
ANR	2799106	Identifier	Z_STR_P		2798766	0					
ANR	2799107	ArgumentList	result		2798766	1					
ANR	2799108	Argument	result		2798766	0					
ANR	2799109	Identifier	result		2798766	0					
ANR	2799110	Argument	Z_STRVAL_P ( search_entry ) [ 0 ]		2798766	1					
ANR	2799111	ArrayIndexing	Z_STRVAL_P ( search_entry ) [ 0 ]		2798766	0					
ANR	2799112	CallExpression	Z_STRVAL_P ( search_entry )		2798766	0					
ANR	2799113	Callee	Z_STRVAL_P		2798766	0					
ANR	2799114	Identifier	Z_STRVAL_P		2798766	0					
ANR	2799115	ArgumentList	search_entry		2798766	1					
ANR	2799116	Argument	search_entry		2798766	0					
ANR	2799117	Identifier	search_entry		2798766	0					
ANR	2799118	PrimaryExpression	0		2798766	1					
ANR	2799119	Argument	replace_value		2798766	2					
ANR	2799120	Identifier	replace_value		2798766	0					
ANR	2799121	Argument	replace_len		2798766	3					
ANR	2799122	Identifier	replace_len		2798766	0					
ANR	2799123	Argument	case_sensitivity		2798766	4					
ANR	2799124	Identifier	case_sensitivity		2798766	0					
ANR	2799125	Argument	& replace_count		2798766	5					
ANR	2799126	UnaryOperationExpression	& replace_count		2798766	0					
ANR	2799127	UnaryOperator	&		2798766	0					
ANR	2799128	Identifier	replace_count		2798766	1					
ANR	2799129	IfStatement	if ( lc_subject_str && replace_count != old_replace_count )		2798766	2					
ANR	2799130	Condition	lc_subject_str && replace_count != old_replace_count	4019:8:98031:98082	2798766	0	True				
ANR	2799131	AndExpression	lc_subject_str && replace_count != old_replace_count		2798766	0		&&			
ANR	2799132	Identifier	lc_subject_str		2798766	0					
ANR	2799133	EqualityExpression	replace_count != old_replace_count		2798766	1		!=			
ANR	2799134	Identifier	replace_count		2798766	0					
ANR	2799135	Identifier	old_replace_count		2798766	1					
ANR	2799136	CompoundStatement		81:62:2354:2354	2798766	1					
ANR	2799137	ExpressionStatement	zend_string_release ( lc_subject_str )	4020:5:98092:98127	2798766	0	True				
ANR	2799138	CallExpression	zend_string_release ( lc_subject_str )		2798766	0					
ANR	2799139	Callee	zend_string_release		2798766	0					
ANR	2799140	Identifier	zend_string_release		2798766	0					
ANR	2799141	ArgumentList	lc_subject_str		2798766	1					
ANR	2799142	Argument	lc_subject_str		2798766	0					
ANR	2799143	Identifier	lc_subject_str		2798766	0					
ANR	2799144	ExpressionStatement	lc_subject_str = NULL	4021:5:98134:98155	2798766	1	True				
ANR	2799145	AssignmentExpression	lc_subject_str = NULL		2798766	0		=			
ANR	2799146	Identifier	lc_subject_str		2798766	0					
ANR	2799147	Identifier	NULL		2798766	1					
ANR	2799148	ElseStatement	else		2798766	0					
ANR	2799149	IfStatement	if ( Z_STRLEN_P ( search_entry ) > 1 )		2798766	0					
ANR	2799150	Condition	Z_STRLEN_P ( search_entry ) > 1	4023:14:98177:98204	2798766	0	True				
ANR	2799151	RelationalExpression	Z_STRLEN_P ( search_entry ) > 1		2798766	0		>			
ANR	2799152	CallExpression	Z_STRLEN_P ( search_entry )		2798766	0					
ANR	2799153	Callee	Z_STRLEN_P		2798766	0					
ANR	2799154	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799155	ArgumentList	search_entry		2798766	1					
ANR	2799156	Argument	search_entry		2798766	0					
ANR	2799157	Identifier	search_entry		2798766	0					
ANR	2799158	PrimaryExpression	1		2798766	1					
ANR	2799159	CompoundStatement		85:44:2476:2476	2798766	1					
ANR	2799160	IfStatement	if ( case_sensitivity )		2798766	0					
ANR	2799161	Condition	case_sensitivity	4024:8:98217:98232	2798766	0	True				
ANR	2799162	Identifier	case_sensitivity		2798766	0					
ANR	2799163	CompoundStatement		86:26:2504:2504	2798766	1					
ANR	2799164	ExpressionStatement	"tmp_result = php_str_to_str_ex ( Z_STR_P ( result ) , Z_STRVAL_P ( search_entry ) , Z_STRLEN_P ( search_entry ) , replace_value , replace_len , & replace_count )"	4025:5:98242:98399	2798766	0	True				
ANR	2799165	AssignmentExpression	"tmp_result = php_str_to_str_ex ( Z_STR_P ( result ) , Z_STRVAL_P ( search_entry ) , Z_STRLEN_P ( search_entry ) , replace_value , replace_len , & replace_count )"		2798766	0		=			
ANR	2799166	Identifier	tmp_result		2798766	0					
ANR	2799167	CallExpression	"php_str_to_str_ex ( Z_STR_P ( result ) , Z_STRVAL_P ( search_entry ) , Z_STRLEN_P ( search_entry ) , replace_value , replace_len , & replace_count )"		2798766	1					
ANR	2799168	Callee	php_str_to_str_ex		2798766	0					
ANR	2799169	Identifier	php_str_to_str_ex		2798766	0					
ANR	2799170	ArgumentList	Z_STR_P ( result )		2798766	1					
ANR	2799171	Argument	Z_STR_P ( result )		2798766	0					
ANR	2799172	CallExpression	Z_STR_P ( result )		2798766	0					
ANR	2799173	Callee	Z_STR_P		2798766	0					
ANR	2799174	Identifier	Z_STR_P		2798766	0					
ANR	2799175	ArgumentList	result		2798766	1					
ANR	2799176	Argument	result		2798766	0					
ANR	2799177	Identifier	result		2798766	0					
ANR	2799178	Argument	Z_STRVAL_P ( search_entry )		2798766	1					
ANR	2799179	CallExpression	Z_STRVAL_P ( search_entry )		2798766	0					
ANR	2799180	Callee	Z_STRVAL_P		2798766	0					
ANR	2799181	Identifier	Z_STRVAL_P		2798766	0					
ANR	2799182	ArgumentList	search_entry		2798766	1					
ANR	2799183	Argument	search_entry		2798766	0					
ANR	2799184	Identifier	search_entry		2798766	0					
ANR	2799185	Argument	Z_STRLEN_P ( search_entry )		2798766	2					
ANR	2799186	CallExpression	Z_STRLEN_P ( search_entry )		2798766	0					
ANR	2799187	Callee	Z_STRLEN_P		2798766	0					
ANR	2799188	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799189	ArgumentList	search_entry		2798766	1					
ANR	2799190	Argument	search_entry		2798766	0					
ANR	2799191	Identifier	search_entry		2798766	0					
ANR	2799192	Argument	replace_value		2798766	3					
ANR	2799193	Identifier	replace_value		2798766	0					
ANR	2799194	Argument	replace_len		2798766	4					
ANR	2799195	Identifier	replace_len		2798766	0					
ANR	2799196	Argument	& replace_count		2798766	5					
ANR	2799197	UnaryOperationExpression	& replace_count		2798766	0					
ANR	2799198	UnaryOperator	&		2798766	0					
ANR	2799199	Identifier	replace_count		2798766	1					
ANR	2799200	ElseStatement	else		2798766	0					
ANR	2799201	CompoundStatement		91:5:2688:2731	2798766	0					
ANR	2799202	IdentifierDeclStatement	zend_long old_replace_count = replace_count ;	4029:5:98419:98462	2798766	0	True				
ANR	2799203	IdentifierDecl	old_replace_count = replace_count		2798766	0					
ANR	2799204	IdentifierDeclType	zend_long		2798766	0					
ANR	2799205	Identifier	old_replace_count		2798766	1					
ANR	2799206	AssignmentExpression	old_replace_count = replace_count		2798766	2		=			
ANR	2799207	Identifier	replace_count		2798766	0					
ANR	2799208	Identifier	replace_count		2798766	1					
ANR	2799209	IfStatement	if ( ! lc_subject_str )		2798766	1					
ANR	2799210	Condition	! lc_subject_str	4031:9:98474:98488	2798766	0	True				
ANR	2799211	UnaryOperationExpression	! lc_subject_str		2798766	0					
ANR	2799212	UnaryOperator	!		2798766	0					
ANR	2799213	Identifier	lc_subject_str		2798766	1					
ANR	2799214	CompoundStatement		93:26:2760:2760	2798766	1					
ANR	2799215	ExpressionStatement	lc_subject_str = php_string_tolower ( Z_STR_P ( result ) )	4032:6:98499:98551	2798766	0	True				
ANR	2799216	AssignmentExpression	lc_subject_str = php_string_tolower ( Z_STR_P ( result ) )		2798766	0		=			
ANR	2799217	Identifier	lc_subject_str		2798766	0					
ANR	2799218	CallExpression	php_string_tolower ( Z_STR_P ( result ) )		2798766	1					
ANR	2799219	Callee	php_string_tolower		2798766	0					
ANR	2799220	Identifier	php_string_tolower		2798766	0					
ANR	2799221	ArgumentList	Z_STR_P ( result )		2798766	1					
ANR	2799222	Argument	Z_STR_P ( result )		2798766	0					
ANR	2799223	CallExpression	Z_STR_P ( result )		2798766	0					
ANR	2799224	Callee	Z_STR_P		2798766	0					
ANR	2799225	Identifier	Z_STR_P		2798766	0					
ANR	2799226	ArgumentList	result		2798766	1					
ANR	2799227	Argument	result		2798766	0					
ANR	2799228	Identifier	result		2798766	0					
ANR	2799229	ExpressionStatement	"tmp_result = php_str_to_str_i_ex ( Z_STR_P ( result ) , ZSTR_VAL ( lc_subject_str ) , Z_STR_P ( search_entry ) , replace_value , replace_len , & replace_count )"	4034:5:98565:98714	2798766	2	True				
ANR	2799230	AssignmentExpression	"tmp_result = php_str_to_str_i_ex ( Z_STR_P ( result ) , ZSTR_VAL ( lc_subject_str ) , Z_STR_P ( search_entry ) , replace_value , replace_len , & replace_count )"		2798766	0		=			
ANR	2799231	Identifier	tmp_result		2798766	0					
ANR	2799232	CallExpression	"php_str_to_str_i_ex ( Z_STR_P ( result ) , ZSTR_VAL ( lc_subject_str ) , Z_STR_P ( search_entry ) , replace_value , replace_len , & replace_count )"		2798766	1					
ANR	2799233	Callee	php_str_to_str_i_ex		2798766	0					
ANR	2799234	Identifier	php_str_to_str_i_ex		2798766	0					
ANR	2799235	ArgumentList	Z_STR_P ( result )		2798766	1					
ANR	2799236	Argument	Z_STR_P ( result )		2798766	0					
ANR	2799237	CallExpression	Z_STR_P ( result )		2798766	0					
ANR	2799238	Callee	Z_STR_P		2798766	0					
ANR	2799239	Identifier	Z_STR_P		2798766	0					
ANR	2799240	ArgumentList	result		2798766	1					
ANR	2799241	Argument	result		2798766	0					
ANR	2799242	Identifier	result		2798766	0					
ANR	2799243	Argument	ZSTR_VAL ( lc_subject_str )		2798766	1					
ANR	2799244	CallExpression	ZSTR_VAL ( lc_subject_str )		2798766	0					
ANR	2799245	Callee	ZSTR_VAL		2798766	0					
ANR	2799246	Identifier	ZSTR_VAL		2798766	0					
ANR	2799247	ArgumentList	lc_subject_str		2798766	1					
ANR	2799248	Argument	lc_subject_str		2798766	0					
ANR	2799249	Identifier	lc_subject_str		2798766	0					
ANR	2799250	Argument	Z_STR_P ( search_entry )		2798766	2					
ANR	2799251	CallExpression	Z_STR_P ( search_entry )		2798766	0					
ANR	2799252	Callee	Z_STR_P		2798766	0					
ANR	2799253	Identifier	Z_STR_P		2798766	0					
ANR	2799254	ArgumentList	search_entry		2798766	1					
ANR	2799255	Argument	search_entry		2798766	0					
ANR	2799256	Identifier	search_entry		2798766	0					
ANR	2799257	Argument	replace_value		2798766	3					
ANR	2799258	Identifier	replace_value		2798766	0					
ANR	2799259	Argument	replace_len		2798766	4					
ANR	2799260	Identifier	replace_len		2798766	0					
ANR	2799261	Argument	& replace_count		2798766	5					
ANR	2799262	UnaryOperationExpression	& replace_count		2798766	0					
ANR	2799263	UnaryOperator	&		2798766	0					
ANR	2799264	Identifier	replace_count		2798766	1					
ANR	2799265	IfStatement	if ( replace_count != old_replace_count )		2798766	3					
ANR	2799266	Condition	replace_count != old_replace_count	4036:9:98725:98758	2798766	0	True				
ANR	2799267	EqualityExpression	replace_count != old_replace_count		2798766	0		!=			
ANR	2799268	Identifier	replace_count		2798766	0					
ANR	2799269	Identifier	old_replace_count		2798766	1					
ANR	2799270	CompoundStatement		98:45:3030:3030	2798766	1					
ANR	2799271	ExpressionStatement	zend_string_release ( lc_subject_str )	4037:6:98769:98804	2798766	0	True				
ANR	2799272	CallExpression	zend_string_release ( lc_subject_str )		2798766	0					
ANR	2799273	Callee	zend_string_release		2798766	0					
ANR	2799274	Identifier	zend_string_release		2798766	0					
ANR	2799275	ArgumentList	lc_subject_str		2798766	1					
ANR	2799276	Argument	lc_subject_str		2798766	0					
ANR	2799277	Identifier	lc_subject_str		2798766	0					
ANR	2799278	ExpressionStatement	lc_subject_str = NULL	4038:6:98812:98833	2798766	1	True				
ANR	2799279	AssignmentExpression	lc_subject_str = NULL		2798766	0		=			
ANR	2799280	Identifier	lc_subject_str		2798766	0					
ANR	2799281	Identifier	NULL		2798766	1					
ANR	2799282	IfStatement	if ( replace_entry_str )		2798766	5					
ANR	2799283	Condition	replace_entry_str	4043:7:98865:98881	2798766	0	True				
ANR	2799284	Identifier	replace_entry_str		2798766	0					
ANR	2799285	CompoundStatement		105:26:3153:3153	2798766	1					
ANR	2799286	ExpressionStatement	zend_string_release ( replace_entry_str )	4044:4:98890:98928	2798766	0	True				
ANR	2799287	CallExpression	zend_string_release ( replace_entry_str )		2798766	0					
ANR	2799288	Callee	zend_string_release		2798766	0					
ANR	2799289	Identifier	zend_string_release		2798766	0					
ANR	2799290	ArgumentList	replace_entry_str		2798766	1					
ANR	2799291	Argument	replace_entry_str		2798766	0					
ANR	2799292	Identifier	replace_entry_str		2798766	0					
ANR	2799293	ExpressionStatement	replace_entry_str = NULL	4045:4:98934:98958	2798766	1	True				
ANR	2799294	AssignmentExpression	replace_entry_str = NULL		2798766	0		=			
ANR	2799295	Identifier	replace_entry_str		2798766	0					
ANR	2799296	Identifier	NULL		2798766	1					
ANR	2799297	ExpressionStatement	zend_string_release ( Z_STR_P ( result ) )	4047:3:98968:99004	2798766	6	True				
ANR	2799298	CallExpression	zend_string_release ( Z_STR_P ( result ) )		2798766	0					
ANR	2799299	Callee	zend_string_release		2798766	0					
ANR	2799300	Identifier	zend_string_release		2798766	0					
ANR	2799301	ArgumentList	Z_STR_P ( result )		2798766	1					
ANR	2799302	Argument	Z_STR_P ( result )		2798766	0					
ANR	2799303	CallExpression	Z_STR_P ( result )		2798766	0					
ANR	2799304	Callee	Z_STR_P		2798766	0					
ANR	2799305	Identifier	Z_STR_P		2798766	0					
ANR	2799306	ArgumentList	result		2798766	1					
ANR	2799307	Argument	result		2798766	0					
ANR	2799308	Identifier	result		2798766	0					
ANR	2799309	ExpressionStatement	"ZVAL_STR ( result , tmp_result )"	4048:3:99009:99037	2798766	7	True				
ANR	2799310	CallExpression	"ZVAL_STR ( result , tmp_result )"		2798766	0					
ANR	2799311	Callee	ZVAL_STR		2798766	0					
ANR	2799312	Identifier	ZVAL_STR		2798766	0					
ANR	2799313	ArgumentList	result		2798766	1					
ANR	2799314	Argument	result		2798766	0					
ANR	2799315	Identifier	result		2798766	0					
ANR	2799316	Argument	tmp_result		2798766	1					
ANR	2799317	Identifier	tmp_result		2798766	0					
ANR	2799318	IfStatement	if ( Z_STRLEN_P ( result ) == 0 )		2798766	8					
ANR	2799319	Condition	Z_STRLEN_P ( result ) == 0	4050:7:99047:99069	2798766	0	True				
ANR	2799320	EqualityExpression	Z_STRLEN_P ( result ) == 0		2798766	0		==			
ANR	2799321	CallExpression	Z_STRLEN_P ( result )		2798766	0					
ANR	2799322	Callee	Z_STRLEN_P		2798766	0					
ANR	2799323	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799324	ArgumentList	result		2798766	1					
ANR	2799325	Argument	result		2798766	0					
ANR	2799326	Identifier	result		2798766	0					
ANR	2799327	PrimaryExpression	0		2798766	1					
ANR	2799328	CompoundStatement		112:32:3341:3341	2798766	1					
ANR	2799329	IfStatement	if ( lc_subject_str )		2798766	0					
ANR	2799330	Condition	lc_subject_str	4051:8:99082:99095	2798766	0	True				
ANR	2799331	Identifier	lc_subject_str		2798766	0					
ANR	2799332	CompoundStatement		113:24:3367:3367	2798766	1					
ANR	2799333	ExpressionStatement	zend_string_release ( lc_subject_str )	4052:5:99105:99140	2798766	0	True				
ANR	2799334	CallExpression	zend_string_release ( lc_subject_str )		2798766	0					
ANR	2799335	Callee	zend_string_release		2798766	0					
ANR	2799336	Identifier	zend_string_release		2798766	0					
ANR	2799337	ArgumentList	lc_subject_str		2798766	1					
ANR	2799338	Argument	lc_subject_str		2798766	0					
ANR	2799339	Identifier	lc_subject_str		2798766	0					
ANR	2799340	ExpressionStatement	zend_string_release ( subject_str )	4054:4:99152:99184	2798766	1	True				
ANR	2799341	CallExpression	zend_string_release ( subject_str )		2798766	0					
ANR	2799342	Callee	zend_string_release		2798766	0					
ANR	2799343	Identifier	zend_string_release		2798766	0					
ANR	2799344	ArgumentList	subject_str		2798766	1					
ANR	2799345	Argument	subject_str		2798766	0					
ANR	2799346	Identifier	subject_str		2798766	0					
ANR	2799347	ReturnStatement	return replace_count ;	4055:4:99190:99210	2798766	2	True				
ANR	2799348	Identifier	replace_count		2798766	0					
ANR	2799349	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4057:4:99221:99244	2798766	12	True				
ANR	2799350	CallExpression	ZEND_HASH_FOREACH_END ( )		2798766	0					
ANR	2799351	Callee	ZEND_HASH_FOREACH_END		2798766	0					
ANR	2799352	Identifier	ZEND_HASH_FOREACH_END		2798766	0					
ANR	2799353	ArgumentList			2798766	1					
ANR	2799354	IfStatement	if ( lc_subject_str )		2798766	13					
ANR	2799355	Condition	lc_subject_str	4058:6:99252:99265	2798766	0	True				
ANR	2799356	Identifier	lc_subject_str		2798766	0					
ANR	2799357	CompoundStatement		120:22:3537:3537	2798766	1					
ANR	2799358	ExpressionStatement	zend_string_release ( lc_subject_str )	4059:3:99273:99308	2798766	0	True				
ANR	2799359	CallExpression	zend_string_release ( lc_subject_str )		2798766	0					
ANR	2799360	Callee	zend_string_release		2798766	0					
ANR	2799361	Identifier	zend_string_release		2798766	0					
ANR	2799362	ArgumentList	lc_subject_str		2798766	1					
ANR	2799363	Argument	lc_subject_str		2798766	0					
ANR	2799364	Identifier	lc_subject_str		2798766	0					
ANR	2799365	ElseStatement	else		2798766	0					
ANR	2799366	CompoundStatement		123:8:3591:3591	2798766	0					
ANR	2799367	IfStatement	if ( Z_STRLEN_P ( search ) == 1 )		2798766	0					
ANR	2799368	Condition	Z_STRLEN_P ( search ) == 1	4062:6:99330:99352	2798766	0	True				
ANR	2799369	EqualityExpression	Z_STRLEN_P ( search ) == 1		2798766	0		==			
ANR	2799370	CallExpression	Z_STRLEN_P ( search )		2798766	0					
ANR	2799371	Callee	Z_STRLEN_P		2798766	0					
ANR	2799372	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799373	ArgumentList	search		2798766	1					
ANR	2799374	Argument	search		2798766	0					
ANR	2799375	Identifier	search		2798766	0					
ANR	2799376	PrimaryExpression	1		2798766	1					
ANR	2799377	CompoundStatement		124:31:3624:3624	2798766	1					
ANR	2799378	ExpressionStatement	"ZVAL_STR ( result , php_char_to_str_ex ( subject_str , Z_STRVAL_P ( search ) [ 0 ] , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , case_sensitivity , & replace_count ) )"	4063:3:99360:99547	2798766	0	True				
ANR	2799379	CallExpression	"ZVAL_STR ( result , php_char_to_str_ex ( subject_str , Z_STRVAL_P ( search ) [ 0 ] , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , case_sensitivity , & replace_count ) )"		2798766	0					
ANR	2799380	Callee	ZVAL_STR		2798766	0					
ANR	2799381	Identifier	ZVAL_STR		2798766	0					
ANR	2799382	ArgumentList	result		2798766	1					
ANR	2799383	Argument	result		2798766	0					
ANR	2799384	Identifier	result		2798766	0					
ANR	2799385	Argument	"php_char_to_str_ex ( subject_str , Z_STRVAL_P ( search ) [ 0 ] , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , case_sensitivity , & replace_count )"		2798766	1					
ANR	2799386	CallExpression	"php_char_to_str_ex ( subject_str , Z_STRVAL_P ( search ) [ 0 ] , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , case_sensitivity , & replace_count )"		2798766	0					
ANR	2799387	Callee	php_char_to_str_ex		2798766	0					
ANR	2799388	Identifier	php_char_to_str_ex		2798766	0					
ANR	2799389	ArgumentList	subject_str		2798766	1					
ANR	2799390	Argument	subject_str		2798766	0					
ANR	2799391	Identifier	subject_str		2798766	0					
ANR	2799392	Argument	Z_STRVAL_P ( search ) [ 0 ]		2798766	1					
ANR	2799393	ArrayIndexing	Z_STRVAL_P ( search ) [ 0 ]		2798766	0					
ANR	2799394	CallExpression	Z_STRVAL_P ( search )		2798766	0					
ANR	2799395	Callee	Z_STRVAL_P		2798766	0					
ANR	2799396	Identifier	Z_STRVAL_P		2798766	0					
ANR	2799397	ArgumentList	search		2798766	1					
ANR	2799398	Argument	search		2798766	0					
ANR	2799399	Identifier	search		2798766	0					
ANR	2799400	PrimaryExpression	0		2798766	1					
ANR	2799401	Argument	Z_STRVAL_P ( replace )		2798766	2					
ANR	2799402	CallExpression	Z_STRVAL_P ( replace )		2798766	0					
ANR	2799403	Callee	Z_STRVAL_P		2798766	0					
ANR	2799404	Identifier	Z_STRVAL_P		2798766	0					
ANR	2799405	ArgumentList	replace		2798766	1					
ANR	2799406	Argument	replace		2798766	0					
ANR	2799407	Identifier	replace		2798766	0					
ANR	2799408	Argument	Z_STRLEN_P ( replace )		2798766	3					
ANR	2799409	CallExpression	Z_STRLEN_P ( replace )		2798766	0					
ANR	2799410	Callee	Z_STRLEN_P		2798766	0					
ANR	2799411	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799412	ArgumentList	replace		2798766	1					
ANR	2799413	Argument	replace		2798766	0					
ANR	2799414	Identifier	replace		2798766	0					
ANR	2799415	Argument	case_sensitivity		2798766	4					
ANR	2799416	Identifier	case_sensitivity		2798766	0					
ANR	2799417	Argument	& replace_count		2798766	5					
ANR	2799418	UnaryOperationExpression	& replace_count		2798766	0					
ANR	2799419	UnaryOperator	&		2798766	0					
ANR	2799420	Identifier	replace_count		2798766	1					
ANR	2799421	ElseStatement	else		2798766	0					
ANR	2799422	IfStatement	if ( Z_STRLEN_P ( search ) > 1 )		2798766	0					
ANR	2799423	Condition	Z_STRLEN_P ( search ) > 1	4070:13:99562:99583	2798766	0	True				
ANR	2799424	RelationalExpression	Z_STRLEN_P ( search ) > 1		2798766	0		>			
ANR	2799425	CallExpression	Z_STRLEN_P ( search )		2798766	0					
ANR	2799426	Callee	Z_STRLEN_P		2798766	0					
ANR	2799427	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799428	ArgumentList	search		2798766	1					
ANR	2799429	Argument	search		2798766	0					
ANR	2799430	Identifier	search		2798766	0					
ANR	2799431	PrimaryExpression	1		2798766	1					
ANR	2799432	CompoundStatement		132:37:3855:3855	2798766	1					
ANR	2799433	IfStatement	if ( case_sensitivity )		2798766	0					
ANR	2799434	Condition	case_sensitivity	4071:7:99595:99610	2798766	0	True				
ANR	2799435	Identifier	case_sensitivity		2798766	0					
ANR	2799436	CompoundStatement		133:25:3882:3882	2798766	1					
ANR	2799437	ExpressionStatement	"ZVAL_STR ( result , php_str_to_str_ex ( subject_str , Z_STRVAL_P ( search ) , Z_STRLEN_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count ) )"	4072:4:99619:99777	2798766	0	True				
ANR	2799438	CallExpression	"ZVAL_STR ( result , php_str_to_str_ex ( subject_str , Z_STRVAL_P ( search ) , Z_STRLEN_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count ) )"		2798766	0					
ANR	2799439	Callee	ZVAL_STR		2798766	0					
ANR	2799440	Identifier	ZVAL_STR		2798766	0					
ANR	2799441	ArgumentList	result		2798766	1					
ANR	2799442	Argument	result		2798766	0					
ANR	2799443	Identifier	result		2798766	0					
ANR	2799444	Argument	"php_str_to_str_ex ( subject_str , Z_STRVAL_P ( search ) , Z_STRLEN_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count )"		2798766	1					
ANR	2799445	CallExpression	"php_str_to_str_ex ( subject_str , Z_STRVAL_P ( search ) , Z_STRLEN_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count )"		2798766	0					
ANR	2799446	Callee	php_str_to_str_ex		2798766	0					
ANR	2799447	Identifier	php_str_to_str_ex		2798766	0					
ANR	2799448	ArgumentList	subject_str		2798766	1					
ANR	2799449	Argument	subject_str		2798766	0					
ANR	2799450	Identifier	subject_str		2798766	0					
ANR	2799451	Argument	Z_STRVAL_P ( search )		2798766	1					
ANR	2799452	CallExpression	Z_STRVAL_P ( search )		2798766	0					
ANR	2799453	Callee	Z_STRVAL_P		2798766	0					
ANR	2799454	Identifier	Z_STRVAL_P		2798766	0					
ANR	2799455	ArgumentList	search		2798766	1					
ANR	2799456	Argument	search		2798766	0					
ANR	2799457	Identifier	search		2798766	0					
ANR	2799458	Argument	Z_STRLEN_P ( search )		2798766	2					
ANR	2799459	CallExpression	Z_STRLEN_P ( search )		2798766	0					
ANR	2799460	Callee	Z_STRLEN_P		2798766	0					
ANR	2799461	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799462	ArgumentList	search		2798766	1					
ANR	2799463	Argument	search		2798766	0					
ANR	2799464	Identifier	search		2798766	0					
ANR	2799465	Argument	Z_STRVAL_P ( replace )		2798766	3					
ANR	2799466	CallExpression	Z_STRVAL_P ( replace )		2798766	0					
ANR	2799467	Callee	Z_STRVAL_P		2798766	0					
ANR	2799468	Identifier	Z_STRVAL_P		2798766	0					
ANR	2799469	ArgumentList	replace		2798766	1					
ANR	2799470	Argument	replace		2798766	0					
ANR	2799471	Identifier	replace		2798766	0					
ANR	2799472	Argument	Z_STRLEN_P ( replace )		2798766	4					
ANR	2799473	CallExpression	Z_STRLEN_P ( replace )		2798766	0					
ANR	2799474	Callee	Z_STRLEN_P		2798766	0					
ANR	2799475	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799476	ArgumentList	replace		2798766	1					
ANR	2799477	Argument	replace		2798766	0					
ANR	2799478	Identifier	replace		2798766	0					
ANR	2799479	Argument	& replace_count		2798766	5					
ANR	2799480	UnaryOperationExpression	& replace_count		2798766	0					
ANR	2799481	UnaryOperator	&		2798766	0					
ANR	2799482	Identifier	replace_count		2798766	1					
ANR	2799483	ElseStatement	else		2798766	0					
ANR	2799484	CompoundStatement		137:10:4058:4058	2798766	0					
ANR	2799485	ExpressionStatement	lc_subject_str = php_string_tolower ( subject_str )	4076:4:99795:99843	2798766	0	True				
ANR	2799486	AssignmentExpression	lc_subject_str = php_string_tolower ( subject_str )		2798766	0		=			
ANR	2799487	Identifier	lc_subject_str		2798766	0					
ANR	2799488	CallExpression	php_string_tolower ( subject_str )		2798766	1					
ANR	2799489	Callee	php_string_tolower		2798766	0					
ANR	2799490	Identifier	php_string_tolower		2798766	0					
ANR	2799491	ArgumentList	subject_str		2798766	1					
ANR	2799492	Argument	subject_str		2798766	0					
ANR	2799493	Identifier	subject_str		2798766	0					
ANR	2799494	ExpressionStatement	"ZVAL_STR ( result , php_str_to_str_i_ex ( subject_str , ZSTR_VAL ( lc_subject_str ) , Z_STR_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count ) )"	4077:4:99849:100012	2798766	1	True				
ANR	2799495	CallExpression	"ZVAL_STR ( result , php_str_to_str_i_ex ( subject_str , ZSTR_VAL ( lc_subject_str ) , Z_STR_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count ) )"		2798766	0					
ANR	2799496	Callee	ZVAL_STR		2798766	0					
ANR	2799497	Identifier	ZVAL_STR		2798766	0					
ANR	2799498	ArgumentList	result		2798766	1					
ANR	2799499	Argument	result		2798766	0					
ANR	2799500	Identifier	result		2798766	0					
ANR	2799501	Argument	"php_str_to_str_i_ex ( subject_str , ZSTR_VAL ( lc_subject_str ) , Z_STR_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count )"		2798766	1					
ANR	2799502	CallExpression	"php_str_to_str_i_ex ( subject_str , ZSTR_VAL ( lc_subject_str ) , Z_STR_P ( search ) , Z_STRVAL_P ( replace ) , Z_STRLEN_P ( replace ) , & replace_count )"		2798766	0					
ANR	2799503	Callee	php_str_to_str_i_ex		2798766	0					
ANR	2799504	Identifier	php_str_to_str_i_ex		2798766	0					
ANR	2799505	ArgumentList	subject_str		2798766	1					
ANR	2799506	Argument	subject_str		2798766	0					
ANR	2799507	Identifier	subject_str		2798766	0					
ANR	2799508	Argument	ZSTR_VAL ( lc_subject_str )		2798766	1					
ANR	2799509	CallExpression	ZSTR_VAL ( lc_subject_str )		2798766	0					
ANR	2799510	Callee	ZSTR_VAL		2798766	0					
ANR	2799511	Identifier	ZSTR_VAL		2798766	0					
ANR	2799512	ArgumentList	lc_subject_str		2798766	1					
ANR	2799513	Argument	lc_subject_str		2798766	0					
ANR	2799514	Identifier	lc_subject_str		2798766	0					
ANR	2799515	Argument	Z_STR_P ( search )		2798766	2					
ANR	2799516	CallExpression	Z_STR_P ( search )		2798766	0					
ANR	2799517	Callee	Z_STR_P		2798766	0					
ANR	2799518	Identifier	Z_STR_P		2798766	0					
ANR	2799519	ArgumentList	search		2798766	1					
ANR	2799520	Argument	search		2798766	0					
ANR	2799521	Identifier	search		2798766	0					
ANR	2799522	Argument	Z_STRVAL_P ( replace )		2798766	3					
ANR	2799523	CallExpression	Z_STRVAL_P ( replace )		2798766	0					
ANR	2799524	Callee	Z_STRVAL_P		2798766	0					
ANR	2799525	Identifier	Z_STRVAL_P		2798766	0					
ANR	2799526	ArgumentList	replace		2798766	1					
ANR	2799527	Argument	replace		2798766	0					
ANR	2799528	Identifier	replace		2798766	0					
ANR	2799529	Argument	Z_STRLEN_P ( replace )		2798766	4					
ANR	2799530	CallExpression	Z_STRLEN_P ( replace )		2798766	0					
ANR	2799531	Callee	Z_STRLEN_P		2798766	0					
ANR	2799532	Identifier	Z_STRLEN_P		2798766	0					
ANR	2799533	ArgumentList	replace		2798766	1					
ANR	2799534	Argument	replace		2798766	0					
ANR	2799535	Identifier	replace		2798766	0					
ANR	2799536	Argument	& replace_count		2798766	5					
ANR	2799537	UnaryOperationExpression	& replace_count		2798766	0					
ANR	2799538	UnaryOperator	&		2798766	0					
ANR	2799539	Identifier	replace_count		2798766	1					
ANR	2799540	ExpressionStatement	zend_string_release ( lc_subject_str )	4080:4:100018:100053	2798766	2	True				
ANR	2799541	CallExpression	zend_string_release ( lc_subject_str )		2798766	0					
ANR	2799542	Callee	zend_string_release		2798766	0					
ANR	2799543	Identifier	zend_string_release		2798766	0					
ANR	2799544	ArgumentList	lc_subject_str		2798766	1					
ANR	2799545	Argument	lc_subject_str		2798766	0					
ANR	2799546	Identifier	lc_subject_str		2798766	0					
ANR	2799547	ElseStatement	else		2798766	0					
ANR	2799548	CompoundStatement		144:9:4338:4338	2798766	0					
ANR	2799549	ExpressionStatement	"ZVAL_STR_COPY ( result , subject_str )"	4083:3:100074:100108	2798766	0	True				
ANR	2799550	CallExpression	"ZVAL_STR_COPY ( result , subject_str )"		2798766	0					
ANR	2799551	Callee	ZVAL_STR_COPY		2798766	0					
ANR	2799552	Identifier	ZVAL_STR_COPY		2798766	0					
ANR	2799553	ArgumentList	result		2798766	1					
ANR	2799554	Argument	result		2798766	0					
ANR	2799555	Identifier	result		2798766	0					
ANR	2799556	Argument	subject_str		2798766	1					
ANR	2799557	Identifier	subject_str		2798766	0					
ANR	2799558	ExpressionStatement	zend_string_release ( subject_str )	4086:1:100118:100150	2798766	11	True				
ANR	2799559	CallExpression	zend_string_release ( subject_str )		2798766	0					
ANR	2799560	Callee	zend_string_release		2798766	0					
ANR	2799561	Identifier	zend_string_release		2798766	0					
ANR	2799562	ArgumentList	subject_str		2798766	1					
ANR	2799563	Argument	subject_str		2798766	0					
ANR	2799564	Identifier	subject_str		2798766	0					
ANR	2799565	ReturnStatement	return replace_count ;	4087:1:100153:100173	2798766	12	True				
ANR	2799566	Identifier	replace_count		2798766	0					
ANR	2799567	ReturnType	static zend_long		2798766	1					
ANR	2799568	Identifier	php_str_replace_in_subject		2798766	2					
ANR	2799569	ParameterList	"zval * search , zval * replace , zval * subject , zval * result , int case_sensitivity"		2798766	3					
ANR	2799570	Parameter	zval * search	3938:44:95650:95661	2798766	0	True				
ANR	2799571	ParameterType	zval *		2798766	0					
ANR	2799572	Identifier	search		2798766	1					
ANR	2799573	Parameter	zval * replace	3938:58:95664:95676	2798766	1	True				
ANR	2799574	ParameterType	zval *		2798766	0					
ANR	2799575	Identifier	replace		2798766	1					
ANR	2799576	Parameter	zval * subject	3938:73:95679:95691	2798766	2	True				
ANR	2799577	ParameterType	zval *		2798766	0					
ANR	2799578	Identifier	subject		2798766	1					
ANR	2799579	Parameter	zval * result	3938:88:95694:95705	2798766	3	True				
ANR	2799580	ParameterType	zval *		2798766	0					
ANR	2799581	Identifier	result		2798766	1					
ANR	2799582	Parameter	int case_sensitivity	3938:102:95708:95727	2798766	4	True				
ANR	2799583	ParameterType	int		2798766	0					
ANR	2799584	Identifier	case_sensitivity		2798766	1					
ANR	2799585	CFGEntryNode	ENTRY		2798766		True				
ANR	2799586	CFGExitNode	EXIT		2798766		True				
ANR	2799587	CFGErrorNode	ERROR		2798766		True				
ANR	2799588	Symbol	subject		2798766						
ANR	2799589	Symbol	replace		2798766						
ANR	2799590	Symbol	* Z_ARRVAL_P		2798766						
ANR	2799591	Symbol	search_entry		2798766						
ANR	2799592	Symbol	* * Z_ARRVAL_P		2798766						
ANR	2799593	Symbol	php_str_to_str_ex		2798766						
ANR	2799594	Symbol	subject_str		2798766						
ANR	2799595	Symbol	result		2798766						
ANR	2799596	Symbol	replace_count		2798766						
ANR	2799597	Symbol	search		2798766						
ANR	2799598	Symbol	IS_ARRAY		2798766						
ANR	2799599	Symbol	& replace_count		2798766						
ANR	2799600	Symbol	Z_ARRVAL_P ( replace ) -> nNumUsed		2798766						
ANR	2799601	Symbol	Z_ARRVAL_P ( replace ) -> arData		2798766						
ANR	2799602	Symbol	replace_entry		2798766						
ANR	2799603	Symbol	replace_idx		2798766						
ANR	2799604	Symbol	Z_STRLEN_P		2798766						
ANR	2799605	Symbol	php_string_tolower		2798766						
ANR	2799606	Symbol	* Z_STRVAL_P		2798766						
ANR	2799607	Symbol	Z_ARRVAL_P		2798766						
ANR	2799608	Symbol	replace_entry_str		2798766						
ANR	2799609	Symbol	IS_UNDEF		2798766						
ANR	2799610	Symbol	* replace_idx		2798766						
ANR	2799611	Symbol	NULL		2798766						
ANR	2799612	Symbol	replace_len		2798766						
ANR	2799613	Symbol	old_replace_count		2798766						
ANR	2799614	Symbol	php_str_to_str_i_ex		2798766						
ANR	2799615	Symbol	php_char_to_str_ex		2798766						
ANR	2799616	Symbol	zval_get_string		2798766						
ANR	2799617	Symbol	Z_TYPE_P		2798766						
ANR	2799618	Symbol	Z_STRVAL_P		2798766						
ANR	2799619	Symbol	tmp_result		2798766						
ANR	2799620	Symbol	lc_subject_str		2798766						
ANR	2799621	Symbol	ZSTR_VAL		2798766						
ANR	2799622	Symbol	& Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		2798766						
ANR	2799623	Symbol	ZSTR_LEN		2798766						
ANR	2799624	Symbol	* Z_ARRVAL_P ( replace ) -> arData		2798766						
ANR	2799625	Symbol	Z_STR_P		2798766						
ANR	2799626	Symbol	case_sensitivity		2798766						
ANR	2799627	Symbol	replace_value		2798766						
ANR	2799628	DeclStmt									
ANR	2799629	Decl							zval	zval *	subject
ANR	2799630	Decl							zval	zval *	search
ANR	2799631	Decl							zval	zval *	replace
ANR	2799632	Decl							zval	zval *	subject_entry
ANR	2799633	Decl							zval	zval *	zcount
ANR	2799634	DeclStmt									
ANR	2799635	Decl							zval	zval	result
ANR	2799636	DeclStmt									
ANR	2799637	Decl							zend_string	zend_string *	string_key
ANR	2799638	DeclStmt									
ANR	2799639	Decl							zend_ulong	zend_ulong	num_key
ANR	2799640	DeclStmt									
ANR	2799641	Decl							zend_long	zend_long	count
ANR	2799642	DeclStmt									
ANR	2799643	Decl							int	int	argc
ANR	2799644	DeclStmt									
ANR	2799645	Decl							char	char *	str
ANR	2799646	DeclStmt									
ANR	2799647	Decl							char	char *	heb_str
ANR	2799648	Decl							char	char *	tmp
ANR	2799649	Decl							char	char *	target
ANR	2799650	DeclStmt									
ANR	2799651	Decl							size_t	size_t	block_start
ANR	2799652	Decl							size_t	size_t	block_end
ANR	2799653	Decl							size_t	size_t	block_type
ANR	2799654	Decl							size_t	size_t	block_length
ANR	2799655	Decl							size_t	size_t	i
ANR	2799656	DeclStmt									
ANR	2799657	Decl							zend_long	zend_long	max_chars
ANR	2799658	DeclStmt									
ANR	2799659	Decl							size_t	size_t	begin
ANR	2799660	Decl							size_t	size_t	end
ANR	2799661	Decl							size_t	size_t	char_count
ANR	2799662	Decl							size_t	size_t	orig_begin
ANR	2799663	DeclStmt									
ANR	2799664	Decl							size_t	size_t	str_len
ANR	2799665	DeclStmt									
ANR	2799666	Decl							zend_string	zend_string *	broken_str
ANR	2799667	DeclStmt									
ANR	2799668	Decl							size_t	size_t	new_char_count
ANR	2799669	Decl							size_t	size_t	new_begin
ANR	2799670	DeclStmt									
ANR	2799671	Decl							char	char *	tmp
ANR	2799672	DeclStmt									
ANR	2799673	Decl							zend_string	zend_string *	str
ANR	2799674	DeclStmt									
ANR	2799675	Decl							char	char *	end
ANR	2799676	Decl							char	char *	target
ANR	2799677	DeclStmt									
ANR	2799678	Decl							size_t	size_t	repl_cnt
ANR	2799679	DeclStmt									
ANR	2799680	Decl							zend_bool	zend_bool	is_xhtml
ANR	2799681	DeclStmt									
ANR	2799682	Decl							zend_string	zend_string *	result
ANR	2799683	DeclStmt									
ANR	2799684	Decl							size_t	size_t	repl_len
ANR	2799685	DeclStmt									
ANR	2799686	Decl							zend_string	zend_string *	buf
ANR	2799687	DeclStmt									
ANR	2799688	Decl							zend_string	zend_string *	str
ANR	2799689	DeclStmt									
ANR	2799690	Decl							zval	zval *	allow
ANR	2799691	DeclStmt									
ANR	2799692	Decl							char	char *	allowed_tags
ANR	2799693	DeclStmt									
ANR	2799694	Decl							size_t	size_t	allowed_tags_len
ANR	2799695	DeclStmt									
ANR	2799696	Decl							zval	zval *	args
ANR	2799697	DeclStmt									
ANR	2799698	Decl							zval	zval *	plocale
ANR	2799699	DeclStmt									
ANR	2799700	Decl							zend_string	zend_string *	loc
ANR	2799701	DeclStmt									
ANR	2799702	Decl							char	char *	retval
ANR	2799703	DeclStmt									
ANR	2799704	Decl							zend_long	zend_long	cat
ANR	2799705	DeclStmt									
ANR	2799706	Decl							int	int	num_args
ANR	2799707	Decl							int	int	i
ANR	2799708	DeclStmt									
ANR	2799709	Decl							uint32_t	uint32_t	idx
ANR	2799710	DeclStmt									
ANR	2799711	Decl							size_t	size_t	len
ANR	2799712	DeclStmt									
ANR	2799713	Decl							char	char *	arg
ANR	2799714	DeclStmt									
ANR	2799715	Decl							zval	zval *	arrayArg
ANR	2799716	DeclStmt									
ANR	2799717	Decl							char	char *	res
ANR	2799718	DeclStmt									
ANR	2799719	Decl							size_t	size_t	arglen
ANR	2799720	DeclStmt									
ANR	2799721	Decl							zval	zval	tmp
ANR	2799722	DeclStmt									
ANR	2799723	Decl							zend_array	zend_array *	symbol_table
ANR	2799724	DeclStmt									
ANR	2799725	Decl							zval	zval	ret
ANR	2799726	Function	php_tag_find	4609:0:112269:113075							
ANR	2799727	FunctionDef	"php_tag_find (char * tag , size_t len , const char * set)"		2799726	0					
ANR	2799728	CompoundStatement		4609:57:112326:113075	2799726	0					
ANR	2799729	IdentifierDeclStatement	"char c , * n , * t ;"	4610:1:112329:112343	2799726	0	True				
ANR	2799730	IdentifierDecl	c		2799726	0					
ANR	2799731	IdentifierDeclType	char		2799726	0					
ANR	2799732	Identifier	c		2799726	1					
ANR	2799733	IdentifierDecl	* n		2799726	1					
ANR	2799734	IdentifierDeclType	char *		2799726	0					
ANR	2799735	Identifier	n		2799726	1					
ANR	2799736	IdentifierDecl	* t		2799726	2					
ANR	2799737	IdentifierDeclType	char *		2799726	0					
ANR	2799738	Identifier	t		2799726	1					
ANR	2799739	IdentifierDeclStatement	"int state = 0 , done = 0 ;"	4611:1:112346:112365	2799726	1	True				
ANR	2799740	IdentifierDecl	state = 0		2799726	0					
ANR	2799741	IdentifierDeclType	int		2799726	0					
ANR	2799742	Identifier	state		2799726	1					
ANR	2799743	AssignmentExpression	state = 0		2799726	2		=			
ANR	2799744	Identifier	state		2799726	0					
ANR	2799745	PrimaryExpression	0		2799726	1					
ANR	2799746	IdentifierDecl	done = 0		2799726	1					
ANR	2799747	IdentifierDeclType	int		2799726	0					
ANR	2799748	Identifier	done		2799726	1					
ANR	2799749	AssignmentExpression	done = 0		2799726	2		=			
ANR	2799750	Identifier	done		2799726	0					
ANR	2799751	PrimaryExpression	0		2799726	1					
ANR	2799752	IdentifierDeclStatement	char * norm ;	4612:1:112368:112378	2799726	2	True				
ANR	2799753	IdentifierDecl	* norm		2799726	0					
ANR	2799754	IdentifierDeclType	char *		2799726	0					
ANR	2799755	Identifier	norm		2799726	1					
ANR	2799756	IfStatement	if ( len <= 0 )		2799726	3					
ANR	2799757	Condition	len <= 0	4614:5:112386:112393	2799726	0	True				
ANR	2799758	RelationalExpression	len <= 0		2799726	0		<=			
ANR	2799759	Identifier	len		2799726	0					
ANR	2799760	PrimaryExpression	0		2799726	1					
ANR	2799761	CompoundStatement		6:15:69:69	2799726	1					
ANR	2799762	ReturnStatement	return 0 ;	4615:2:112400:112408	2799726	0	True				
ANR	2799763	PrimaryExpression	0		2799726	0					
ANR	2799764	ExpressionStatement	norm = emalloc ( len + 1 )	4618:1:112415:112436	2799726	4	True				
ANR	2799765	AssignmentExpression	norm = emalloc ( len + 1 )		2799726	0		=			
ANR	2799766	Identifier	norm		2799726	0					
ANR	2799767	CallExpression	emalloc ( len + 1 )		2799726	1					
ANR	2799768	Callee	emalloc		2799726	0					
ANR	2799769	Identifier	emalloc		2799726	0					
ANR	2799770	ArgumentList	len + 1		2799726	1					
ANR	2799771	Argument	len + 1		2799726	0					
ANR	2799772	AdditiveExpression	len + 1		2799726	0		+			
ANR	2799773	Identifier	len		2799726	0					
ANR	2799774	PrimaryExpression	1		2799726	1					
ANR	2799775	ExpressionStatement	n = norm	4620:1:112440:112448	2799726	5	True				
ANR	2799776	AssignmentExpression	n = norm		2799726	0		=			
ANR	2799777	Identifier	n		2799726	0					
ANR	2799778	Identifier	norm		2799726	1					
ANR	2799779	ExpressionStatement	t = tag	4621:1:112451:112458	2799726	6	True				
ANR	2799780	AssignmentExpression	t = tag		2799726	0		=			
ANR	2799781	Identifier	t		2799726	0					
ANR	2799782	Identifier	tag		2799726	1					
ANR	2799783	ExpressionStatement	c = tolower ( * t )	4622:1:112461:112476	2799726	7	True				
ANR	2799784	AssignmentExpression	c = tolower ( * t )		2799726	0		=			
ANR	2799785	Identifier	c		2799726	0					
ANR	2799786	CallExpression	tolower ( * t )		2799726	1					
ANR	2799787	Callee	tolower		2799726	0					
ANR	2799788	Identifier	tolower		2799726	0					
ANR	2799789	ArgumentList	* t		2799726	1					
ANR	2799790	Argument	* t		2799726	0					
ANR	2799791	UnaryOperationExpression	* t		2799726	0					
ANR	2799792	UnaryOperator	*		2799726	0					
ANR	2799793	Identifier	t		2799726	1					
ANR	2799794	WhileStatement	while ( ! done )		2799726	8					
ANR	2799795	Condition	! done	4628:8:112634:112638	2799726	0	True				
ANR	2799796	UnaryOperationExpression	! done		2799726	0					
ANR	2799797	UnaryOperator	!		2799726	0					
ANR	2799798	Identifier	done		2799726	1					
ANR	2799799	CompoundStatement		20:15:314:314	2799726	1					
ANR	2799800	SwitchStatement	switch ( c )		2799726	0					
ANR	2799801	Condition	c	4629:10:112653:112653	2799726	0	True				
ANR	2799802	Identifier	c		2799726	0					
ANR	2799803	CompoundStatement		21:13:329:329	2799726	1					
ANR	2799804	Label	case '<' :	4630:3:112661:112669	2799726	0	True				
ANR	2799805	ExpressionStatement	* ( n ++ ) = c	4631:4:112675:112685	2799726	1	True				
ANR	2799806	AssignmentExpression	* ( n ++ ) = c		2799726	0		=			
ANR	2799807	UnaryOperationExpression	* ( n ++ )		2799726	0					
ANR	2799808	UnaryOperator	*		2799726	0					
ANR	2799809	PostIncDecOperationExpression	n ++		2799726	1					
ANR	2799810	Identifier	n		2799726	0					
ANR	2799811	IncDec	++		2799726	1					
ANR	2799812	Identifier	c		2799726	1					
ANR	2799813	BreakStatement	break ;	4632:4:112691:112696	2799726	2	True				
ANR	2799814	Label	case '>' :	4633:3:112701:112709	2799726	3	True				
ANR	2799815	ExpressionStatement	done = 1	4634:4:112715:112722	2799726	4	True				
ANR	2799816	AssignmentExpression	done = 1		2799726	0		=			
ANR	2799817	Identifier	done		2799726	0					
ANR	2799818	PrimaryExpression	1		2799726	1					
ANR	2799819	BreakStatement	break ;	4635:4:112728:112733	2799726	5	True				
ANR	2799820	Label	default :	4636:3:112738:112745	2799726	6	True				
ANR	2799821	Identifier	default		2799726	0					
ANR	2799822	IfStatement	if ( ! isspace ( ( int ) c ) )		2799726	7					
ANR	2799823	Condition	! isspace ( ( int ) c )	4637:8:112755:112770	2799726	0	True				
ANR	2799824	UnaryOperationExpression	! isspace ( ( int ) c )		2799726	0					
ANR	2799825	UnaryOperator	!		2799726	0					
ANR	2799826	CallExpression	isspace ( ( int ) c )		2799726	1					
ANR	2799827	Callee	isspace		2799726	0					
ANR	2799828	Identifier	isspace		2799726	0					
ANR	2799829	ArgumentList	( int ) c		2799726	1					
ANR	2799830	Argument	( int ) c		2799726	0					
ANR	2799831	CastExpression	( int ) c		2799726	0					
ANR	2799832	CastTarget	int		2799726	0					
ANR	2799833	Identifier	c		2799726	1					
ANR	2799834	CompoundStatement		29:26:446:446	2799726	1					
ANR	2799835	IfStatement	if ( state == 0 )		2799726	0					
ANR	2799836	Condition	state == 0	4638:9:112784:112793	2799726	0	True				
ANR	2799837	EqualityExpression	state == 0		2799726	0		==			
ANR	2799838	Identifier	state		2799726	0					
ANR	2799839	PrimaryExpression	0		2799726	1					
ANR	2799840	CompoundStatement		30:21:469:469	2799726	1					
ANR	2799841	ExpressionStatement	state = 1	4639:6:112804:112811	2799726	0	True				
ANR	2799842	AssignmentExpression	state = 1		2799726	0		=			
ANR	2799843	Identifier	state		2799726	0					
ANR	2799844	PrimaryExpression	1		2799726	1					
ANR	2799845	IfStatement	if ( c != '/' )		2799726	1					
ANR	2799846	Condition	c != '/'	4641:9:112829:112836	2799726	0	True				
ANR	2799847	EqualityExpression	c != '/'		2799726	0		!=			
ANR	2799848	Identifier	c		2799726	0					
ANR	2799849	PrimaryExpression	'/'		2799726	1					
ANR	2799850	CompoundStatement		33:19:512:512	2799726	1					
ANR	2799851	ExpressionStatement	* ( n ++ ) = c	4642:6:112847:112857	2799726	0	True				
ANR	2799852	AssignmentExpression	* ( n ++ ) = c		2799726	0		=			
ANR	2799853	UnaryOperationExpression	* ( n ++ )		2799726	0					
ANR	2799854	UnaryOperator	*		2799726	0					
ANR	2799855	PostIncDecOperationExpression	n ++		2799726	1					
ANR	2799856	Identifier	n		2799726	0					
ANR	2799857	IncDec	++		2799726	1					
ANR	2799858	Identifier	c		2799726	1					
ANR	2799859	ElseStatement	else		2799726	0					
ANR	2799860	CompoundStatement		36:11:550:550	2799726	0					
ANR	2799861	IfStatement	if ( state == 1 )		2799726	0					
ANR	2799862	Condition	state == 1	4645:9:112888:112897	2799726	0	True				
ANR	2799863	EqualityExpression	state == 1		2799726	0		==			
ANR	2799864	Identifier	state		2799726	0					
ANR	2799865	PrimaryExpression	1		2799726	1					
ANR	2799866	ExpressionStatement	done = 1	4646:6:112906:112912	2799726	1	True				
ANR	2799867	AssignmentExpression	done = 1		2799726	0		=			
ANR	2799868	Identifier	done		2799726	0					
ANR	2799869	PrimaryExpression	1		2799726	1					
ANR	2799870	BreakStatement	break ;	4648:4:112924:112929	2799726	8	True				
ANR	2799871	ExpressionStatement	c = tolower ( * ( ++ t ) )	4650:2:112937:112956	2799726	1	True				
ANR	2799872	AssignmentExpression	c = tolower ( * ( ++ t ) )		2799726	0		=			
ANR	2799873	Identifier	c		2799726	0					
ANR	2799874	CallExpression	tolower ( * ( ++ t ) )		2799726	1					
ANR	2799875	Callee	tolower		2799726	0					
ANR	2799876	Identifier	tolower		2799726	0					
ANR	2799877	ArgumentList	* ( ++ t )		2799726	1					
ANR	2799878	Argument	* ( ++ t )		2799726	0					
ANR	2799879	UnaryOperationExpression	* ( ++ t )		2799726	0					
ANR	2799880	UnaryOperator	*		2799726	0					
ANR	2799881	UnaryExpression	++ t		2799726	1					
ANR	2799882	IncDec	++		2799726	0					
ANR	2799883	Identifier	t		2799726	1					
ANR	2799884	ExpressionStatement	* ( n ++ ) = '>'	4652:1:112962:112974	2799726	9	True				
ANR	2799885	AssignmentExpression	* ( n ++ ) = '>'		2799726	0		=			
ANR	2799886	UnaryOperationExpression	* ( n ++ )		2799726	0					
ANR	2799887	UnaryOperator	*		2799726	0					
ANR	2799888	PostIncDecOperationExpression	n ++		2799726	1					
ANR	2799889	Identifier	n		2799726	0					
ANR	2799890	IncDec	++		2799726	1					
ANR	2799891	PrimaryExpression	'>'		2799726	1					
ANR	2799892	ExpressionStatement	* n = '\\0'	4653:1:112977:112986	2799726	10	True				
ANR	2799893	AssignmentExpression	* n = '\\0'		2799726	0		=			
ANR	2799894	UnaryOperationExpression	* n		2799726	0					
ANR	2799895	UnaryOperator	*		2799726	0					
ANR	2799896	Identifier	n		2799726	1					
ANR	2799897	PrimaryExpression	'\\0'		2799726	1					
ANR	2799898	IfStatement	"if ( strstr ( set , norm ) )"		2799726	11					
ANR	2799899	Condition	"strstr ( set , norm )"	4654:5:112993:113009	2799726	0	True				
ANR	2799900	CallExpression	"strstr ( set , norm )"		2799726	0					
ANR	2799901	Callee	strstr		2799726	0					
ANR	2799902	Identifier	strstr		2799726	0					
ANR	2799903	ArgumentList	set		2799726	1					
ANR	2799904	Argument	set		2799726	0					
ANR	2799905	Identifier	set		2799726	0					
ANR	2799906	Argument	norm		2799726	1					
ANR	2799907	Identifier	norm		2799726	0					
ANR	2799908	CompoundStatement		46:24:685:685	2799726	1					
ANR	2799909	ExpressionStatement	done = 1	4655:2:113016:113022	2799726	0	True				
ANR	2799910	AssignmentExpression	done = 1		2799726	0		=			
ANR	2799911	Identifier	done		2799726	0					
ANR	2799912	PrimaryExpression	1		2799726	1					
ANR	2799913	ElseStatement	else		2799726	0					
ANR	2799914	CompoundStatement		48:8:705:705	2799726	0					
ANR	2799915	ExpressionStatement	done = 0	4657:2:113036:113042	2799726	0	True				
ANR	2799916	AssignmentExpression	done = 0		2799726	0		=			
ANR	2799917	Identifier	done		2799726	0					
ANR	2799918	PrimaryExpression	0		2799726	1					
ANR	2799919	ExpressionStatement	efree ( norm )	4659:1:113048:113059	2799726	12	True				
ANR	2799920	CallExpression	efree ( norm )		2799726	0					
ANR	2799921	Callee	efree		2799726	0					
ANR	2799922	Identifier	efree		2799726	0					
ANR	2799923	ArgumentList	norm		2799726	1					
ANR	2799924	Argument	norm		2799726	0					
ANR	2799925	Identifier	norm		2799726	0					
ANR	2799926	ReturnStatement	return done ;	4660:1:113062:113073	2799726	13	True				
ANR	2799927	Identifier	done		2799726	0					
ANR	2799928	ReturnType	int		2799726	1					
ANR	2799929	Identifier	php_tag_find		2799726	2					
ANR	2799930	ParameterList	"char * tag , size_t len , const char * set"		2799726	3					
ANR	2799931	Parameter	char * tag	4609:17:112286:112294	2799726	0	True				
ANR	2799932	ParameterType	char *		2799726	0					
ANR	2799933	Identifier	tag		2799726	1					
ANR	2799934	Parameter	size_t len	4609:28:112297:112306	2799726	1	True				
ANR	2799935	ParameterType	size_t		2799726	0					
ANR	2799936	Identifier	len		2799726	1					
ANR	2799937	Parameter	const char * set	4609:40:112309:112323	2799726	2	True				
ANR	2799938	ParameterType	const char *		2799726	0					
ANR	2799939	Identifier	set		2799726	1					
ANR	2799940	CFGEntryNode	ENTRY		2799726		True				
ANR	2799941	CFGExitNode	EXIT		2799726		True				
ANR	2799942	Symbol	set		2799726						
ANR	2799943	Symbol	c		2799726						
ANR	2799944	Symbol	tolower		2799726						
ANR	2799945	Symbol	isspace		2799726						
ANR	2799946	Symbol	done		2799726						
ANR	2799947	Symbol	n		2799726						
ANR	2799948	Symbol	norm		2799726						
ANR	2799949	Symbol	emalloc		2799726						
ANR	2799950	Symbol	len		2799726						
ANR	2799951	Symbol	t		2799726						
ANR	2799952	Symbol	* ( n ++ )		2799726						
ANR	2799953	Symbol	* ( ++ t )		2799726						
ANR	2799954	Symbol	strstr		2799726						
ANR	2799955	Symbol	* n		2799726						
ANR	2799956	Symbol	tag		2799726						
ANR	2799957	Symbol	state		2799726						
ANR	2799958	Symbol	* t		2799726						
ANR	2799959	Function	php_strip_tags	4664:0:113088:113274							
ANR	2799960	FunctionDef	"php_strip_tags (char * rbuf , size_t len , int * stateptr , const char * allow , size_t allow_len)"		2799959	0					
ANR	2799961	CompoundStatement		4665:0:113203:113274	2799959	0					
ANR	2799962	ReturnStatement	"return php_strip_tags_ex ( rbuf , len , stateptr , allow , allow_len , 0 ) ;"	4666:1:113206:113272	2799959	0	True				
ANR	2799963	CallExpression	"php_strip_tags_ex ( rbuf , len , stateptr , allow , allow_len , 0 )"		2799959	0					
ANR	2799964	Callee	php_strip_tags_ex		2799959	0					
ANR	2799965	Identifier	php_strip_tags_ex		2799959	0					
ANR	2799966	ArgumentList	rbuf		2799959	1					
ANR	2799967	Argument	rbuf		2799959	0					
ANR	2799968	Identifier	rbuf		2799959	0					
ANR	2799969	Argument	len		2799959	1					
ANR	2799970	Identifier	len		2799959	0					
ANR	2799971	Argument	stateptr		2799959	2					
ANR	2799972	Identifier	stateptr		2799959	0					
ANR	2799973	Argument	allow		2799959	3					
ANR	2799974	Identifier	allow		2799959	0					
ANR	2799975	Argument	allow_len		2799959	4					
ANR	2799976	Identifier	allow_len		2799959	0					
ANR	2799977	Argument	0		2799959	5					
ANR	2799978	PrimaryExpression	0		2799959	0					
ANR	2799979	ReturnType	PHPAPI size_t		2799959	1					
ANR	2799980	Identifier	php_strip_tags		2799959	2					
ANR	2799981	ParameterList	"char * rbuf , size_t len , int * stateptr , const char * allow , size_t allow_len"		2799959	3					
ANR	2799982	Parameter	char * rbuf	4664:29:113117:113126	2799959	0	True				
ANR	2799983	ParameterType	char *		2799959	0					
ANR	2799984	Identifier	rbuf		2799959	1					
ANR	2799985	Parameter	size_t len	4664:41:113129:113138	2799959	1	True				
ANR	2799986	ParameterType	size_t		2799959	0					
ANR	2799987	Identifier	len		2799959	1					
ANR	2799988	Parameter	int * stateptr	4664:53:113141:113153	2799959	2	True				
ANR	2799989	ParameterType	int *		2799959	0					
ANR	2799990	Identifier	stateptr		2799959	1					
ANR	2799991	Parameter	const char * allow	4664:68:113156:113172	2799959	3	True				
ANR	2799992	ParameterType	const char *		2799959	0					
ANR	2799993	Identifier	allow		2799959	1					
ANR	2799994	Parameter	size_t allow_len	4664:87:113175:113190	2799959	4	True				
ANR	2799995	ParameterType	size_t		2799959	0					
ANR	2799996	Identifier	allow_len		2799959	1					
ANR	2799997	CFGEntryNode	ENTRY		2799959		True				
ANR	2799998	CFGExitNode	EXIT		2799959		True				
ANR	2799999	Symbol	allow		2799959						
ANR	2800000	Symbol	php_strip_tags_ex		2799959						
ANR	2800001	Symbol	rbuf		2799959						
ANR	2800002	Symbol	len		2799959						
ANR	2800003	Symbol	allow_len		2799959						
ANR	2800004	Symbol	stateptr		2799959						
ANR	2800005	Function	php_strip_tags_ex	4690:0:113928:119371							
ANR	2800006	FunctionDef	"php_strip_tags_ex (char * rbuf , size_t len , int * stateptr , const char * allow , size_t allow_len , zend_bool allow_tag_spaces)"		2800005	0					
ANR	2800007	CompoundStatement		4691:0:114064:119371	2800005	0					
ANR	2800008	IdentifierDeclStatement	"char * tbuf , * buf , * p , * tp , * rp , c , lc ;"	4692:1:114067:114104	2800005	0	True				
ANR	2800009	IdentifierDecl	* tbuf		2800005	0					
ANR	2800010	IdentifierDeclType	char *		2800005	0					
ANR	2800011	Identifier	tbuf		2800005	1					
ANR	2800012	IdentifierDecl	* buf		2800005	1					
ANR	2800013	IdentifierDeclType	char *		2800005	0					
ANR	2800014	Identifier	buf		2800005	1					
ANR	2800015	IdentifierDecl	* p		2800005	2					
ANR	2800016	IdentifierDeclType	char *		2800005	0					
ANR	2800017	Identifier	p		2800005	1					
ANR	2800018	IdentifierDecl	* tp		2800005	3					
ANR	2800019	IdentifierDeclType	char *		2800005	0					
ANR	2800020	Identifier	tp		2800005	1					
ANR	2800021	IdentifierDecl	* rp		2800005	4					
ANR	2800022	IdentifierDeclType	char *		2800005	0					
ANR	2800023	Identifier	rp		2800005	1					
ANR	2800024	IdentifierDecl	c		2800005	5					
ANR	2800025	IdentifierDeclType	char		2800005	0					
ANR	2800026	Identifier	c		2800005	1					
ANR	2800027	IdentifierDecl	lc		2800005	6					
ANR	2800028	IdentifierDeclType	char		2800005	0					
ANR	2800029	Identifier	lc		2800005	1					
ANR	2800030	IdentifierDeclStatement	"int br , depth = 0 , in_q = 0 ;"	4693:1:114107:114132	2800005	1	True				
ANR	2800031	IdentifierDecl	br		2800005	0					
ANR	2800032	IdentifierDeclType	int		2800005	0					
ANR	2800033	Identifier	br		2800005	1					
ANR	2800034	IdentifierDecl	depth = 0		2800005	1					
ANR	2800035	IdentifierDeclType	int		2800005	0					
ANR	2800036	Identifier	depth		2800005	1					
ANR	2800037	AssignmentExpression	depth = 0		2800005	2		=			
ANR	2800038	Identifier	depth		2800005	0					
ANR	2800039	PrimaryExpression	0		2800005	1					
ANR	2800040	IdentifierDecl	in_q = 0		2800005	2					
ANR	2800041	IdentifierDeclType	int		2800005	0					
ANR	2800042	Identifier	in_q		2800005	1					
ANR	2800043	AssignmentExpression	in_q = 0		2800005	2		=			
ANR	2800044	Identifier	in_q		2800005	0					
ANR	2800045	PrimaryExpression	0		2800005	1					
ANR	2800046	IdentifierDeclStatement	int state = 0 ;	4694:1:114135:114148	2800005	2	True				
ANR	2800047	IdentifierDecl	state = 0		2800005	0					
ANR	2800048	IdentifierDeclType	int		2800005	0					
ANR	2800049	Identifier	state		2800005	1					
ANR	2800050	AssignmentExpression	state = 0		2800005	2		=			
ANR	2800051	Identifier	state		2800005	0					
ANR	2800052	PrimaryExpression	0		2800005	1					
ANR	2800053	IdentifierDeclStatement	"size_t pos , i = 0 ;"	4695:1:114151:114168	2800005	3	True				
ANR	2800054	IdentifierDecl	pos		2800005	0					
ANR	2800055	IdentifierDeclType	size_t		2800005	0					
ANR	2800056	Identifier	pos		2800005	1					
ANR	2800057	IdentifierDecl	i = 0		2800005	1					
ANR	2800058	IdentifierDeclType	size_t		2800005	0					
ANR	2800059	Identifier	i		2800005	1					
ANR	2800060	AssignmentExpression	i = 0		2800005	2		=			
ANR	2800061	Identifier	i		2800005	0					
ANR	2800062	PrimaryExpression	0		2800005	1					
ANR	2800063	IdentifierDeclStatement	char * allow_free = NULL ;	4696:1:114171:114194	2800005	4	True				
ANR	2800064	IdentifierDecl	* allow_free = NULL		2800005	0					
ANR	2800065	IdentifierDeclType	char *		2800005	0					
ANR	2800066	Identifier	allow_free		2800005	1					
ANR	2800067	AssignmentExpression	* allow_free = NULL		2800005	2		=			
ANR	2800068	Identifier	NULL		2800005	0					
ANR	2800069	Identifier	NULL		2800005	1					
ANR	2800070	IdentifierDeclStatement	const char * allow_actual ;	4697:1:114197:114221	2800005	5	True				
ANR	2800071	IdentifierDecl	* allow_actual		2800005	0					
ANR	2800072	IdentifierDeclType	const char *		2800005	0					
ANR	2800073	Identifier	allow_actual		2800005	1					
ANR	2800074	IfStatement	if ( stateptr )		2800005	6					
ANR	2800075	Condition	stateptr	4699:5:114229:114236	2800005	0	True				
ANR	2800076	Identifier	stateptr		2800005	0					
ANR	2800077	ExpressionStatement	state = * stateptr	4700:2:114241:114258	2800005	1	True				
ANR	2800078	AssignmentExpression	state = * stateptr		2800005	0		=			
ANR	2800079	Identifier	state		2800005	0					
ANR	2800080	UnaryOperationExpression	* stateptr		2800005	1					
ANR	2800081	UnaryOperator	*		2800005	0					
ANR	2800082	Identifier	stateptr		2800005	1					
ANR	2800083	ExpressionStatement	"buf = estrndup ( rbuf , len )"	4702:1:114262:114287	2800005	7	True				
ANR	2800084	AssignmentExpression	"buf = estrndup ( rbuf , len )"		2800005	0		=			
ANR	2800085	Identifier	buf		2800005	0					
ANR	2800086	CallExpression	"estrndup ( rbuf , len )"		2800005	1					
ANR	2800087	Callee	estrndup		2800005	0					
ANR	2800088	Identifier	estrndup		2800005	0					
ANR	2800089	ArgumentList	rbuf		2800005	1					
ANR	2800090	Argument	rbuf		2800005	0					
ANR	2800091	Identifier	rbuf		2800005	0					
ANR	2800092	Argument	len		2800005	1					
ANR	2800093	Identifier	len		2800005	0					
ANR	2800094	ExpressionStatement	c = * buf	4703:1:114290:114298	2800005	8	True				
ANR	2800095	AssignmentExpression	c = * buf		2800005	0		=			
ANR	2800096	Identifier	c		2800005	0					
ANR	2800097	UnaryOperationExpression	* buf		2800005	1					
ANR	2800098	UnaryOperator	*		2800005	0					
ANR	2800099	Identifier	buf		2800005	1					
ANR	2800100	ExpressionStatement	lc = '\\0'	4704:1:114301:114310	2800005	9	True				
ANR	2800101	AssignmentExpression	lc = '\\0'		2800005	0		=			
ANR	2800102	Identifier	lc		2800005	0					
ANR	2800103	PrimaryExpression	'\\0'		2800005	1					
ANR	2800104	ExpressionStatement	p = buf	4705:1:114313:114320	2800005	10	True				
ANR	2800105	AssignmentExpression	p = buf		2800005	0		=			
ANR	2800106	Identifier	p		2800005	0					
ANR	2800107	Identifier	buf		2800005	1					
ANR	2800108	ExpressionStatement	rp = rbuf	4706:1:114323:114332	2800005	11	True				
ANR	2800109	AssignmentExpression	rp = rbuf		2800005	0		=			
ANR	2800110	Identifier	rp		2800005	0					
ANR	2800111	Identifier	rbuf		2800005	1					
ANR	2800112	ExpressionStatement	br = 0	4707:1:114335:114341	2800005	12	True				
ANR	2800113	AssignmentExpression	br = 0		2800005	0		=			
ANR	2800114	Identifier	br		2800005	0					
ANR	2800115	PrimaryExpression	0		2800005	1					
ANR	2800116	IfStatement	if ( allow )		2800005	13					
ANR	2800117	Condition	allow	4708:5:114348:114352	2800005	0	True				
ANR	2800118	Identifier	allow		2800005	0					
ANR	2800119	CompoundStatement		18:12:290:290	2800005	1					
ANR	2800120	ExpressionStatement	"allow_free = zend_str_tolower_dup_ex ( allow , allow_len )"	4709:2:114359:114413	2800005	0	True				
ANR	2800121	AssignmentExpression	"allow_free = zend_str_tolower_dup_ex ( allow , allow_len )"		2800005	0		=			
ANR	2800122	Identifier	allow_free		2800005	0					
ANR	2800123	CallExpression	"zend_str_tolower_dup_ex ( allow , allow_len )"		2800005	1					
ANR	2800124	Callee	zend_str_tolower_dup_ex		2800005	0					
ANR	2800125	Identifier	zend_str_tolower_dup_ex		2800005	0					
ANR	2800126	ArgumentList	allow		2800005	1					
ANR	2800127	Argument	allow		2800005	0					
ANR	2800128	Identifier	allow		2800005	0					
ANR	2800129	Argument	allow_len		2800005	1					
ANR	2800130	Identifier	allow_len		2800005	0					
ANR	2800131	ExpressionStatement	allow_actual = allow_free ? allow_free : allow	4710:2:114417:114463	2800005	1	True				
ANR	2800132	AssignmentExpression	allow_actual = allow_free ? allow_free : allow		2800005	0		=			
ANR	2800133	Identifier	allow_actual		2800005	0					
ANR	2800134	ConditionalExpression	allow_free ? allow_free : allow		2800005	1					
ANR	2800135	Condition	allow_free		2800005	0					
ANR	2800136	Identifier	allow_free		2800005	0					
ANR	2800137	Identifier	allow_free		2800005	1					
ANR	2800138	Identifier	allow		2800005	2					
ANR	2800139	ExpressionStatement	tbuf = emalloc ( PHP_TAG_BUF_SIZE + 1 )	4711:2:114467:114503	2800005	2	True				
ANR	2800140	AssignmentExpression	tbuf = emalloc ( PHP_TAG_BUF_SIZE + 1 )		2800005	0		=			
ANR	2800141	Identifier	tbuf		2800005	0					
ANR	2800142	CallExpression	emalloc ( PHP_TAG_BUF_SIZE + 1 )		2800005	1					
ANR	2800143	Callee	emalloc		2800005	0					
ANR	2800144	Identifier	emalloc		2800005	0					
ANR	2800145	ArgumentList	PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2800146	Argument	PHP_TAG_BUF_SIZE + 1		2800005	0					
ANR	2800147	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2800148	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2800149	PrimaryExpression	1		2800005	1					
ANR	2800150	ExpressionStatement	tp = tbuf	4712:2:114507:114516	2800005	3	True				
ANR	2800151	AssignmentExpression	tp = tbuf		2800005	0		=			
ANR	2800152	Identifier	tp		2800005	0					
ANR	2800153	Identifier	tbuf		2800005	1					
ANR	2800154	ElseStatement	else		2800005	0					
ANR	2800155	CompoundStatement		23:8:461:461	2800005	0					
ANR	2800156	ExpressionStatement	tbuf = tp = NULL	4714:2:114530:114546	2800005	0	True				
ANR	2800157	AssignmentExpression	tbuf = tp = NULL		2800005	0		=			
ANR	2800158	Identifier	tbuf		2800005	0					
ANR	2800159	AssignmentExpression	tp = NULL		2800005	1		=			
ANR	2800160	Identifier	tp		2800005	0					
ANR	2800161	Identifier	NULL		2800005	1					
ANR	2800162	WhileStatement	while ( i < len )		2800005	14					
ANR	2800163	Condition	i < len	4717:8:114560:114566	2800005	0	True				
ANR	2800164	RelationalExpression	i < len		2800005	0		<			
ANR	2800165	Identifier	i		2800005	0					
ANR	2800166	Identifier	len		2800005	1					
ANR	2800167	CompoundStatement		27:17:504:504	2800005	1					
ANR	2800168	SwitchStatement	switch ( c )		2800005	0					
ANR	2800169	Condition	c	4718:10:114581:114581	2800005	0	True				
ANR	2800170	Identifier	c		2800005	0					
ANR	2800171	CompoundStatement		28:13:519:519	2800005	1					
ANR	2800172	Label	case '\\0' :	4719:3:114589:114598	2800005	0	True				
ANR	2800173	BreakStatement	break ;	4720:4:114604:114609	2800005	1	True				
ANR	2800174	Label	case '<' :	4721:3:114614:114622	2800005	2	True				
ANR	2800175	IfStatement	if ( in_q )		2800005	3					
ANR	2800176	Condition	in_q	4722:8:114632:114635	2800005	0	True				
ANR	2800177	Identifier	in_q		2800005	0					
ANR	2800178	CompoundStatement		32:14:573:573	2800005	1					
ANR	2800179	BreakStatement	break ;	4723:5:114645:114650	2800005	0	True				
ANR	2800180	IfStatement	if ( isspace ( * ( p + 1 ) ) && ! allow_tag_spaces )		2800005	4					
ANR	2800181	Condition	isspace ( * ( p + 1 ) ) && ! allow_tag_spaces	4725:8:114666:114703	2800005	0	True				
ANR	2800182	AndExpression	isspace ( * ( p + 1 ) ) && ! allow_tag_spaces		2800005	0		&&			
ANR	2800183	CallExpression	isspace ( * ( p + 1 ) )		2800005	0					
ANR	2800184	Callee	isspace		2800005	0					
ANR	2800185	Identifier	isspace		2800005	0					
ANR	2800186	ArgumentList	* ( p + 1 )		2800005	1					
ANR	2800187	Argument	* ( p + 1 )		2800005	0					
ANR	2800188	UnaryOperationExpression	* ( p + 1 )		2800005	0					
ANR	2800189	UnaryOperator	*		2800005	0					
ANR	2800190	AdditiveExpression	p + 1		2800005	1		+			
ANR	2800191	Identifier	p		2800005	0					
ANR	2800192	PrimaryExpression	1		2800005	1					
ANR	2800193	UnaryOperationExpression	! allow_tag_spaces		2800005	1					
ANR	2800194	UnaryOperator	!		2800005	0					
ANR	2800195	Identifier	allow_tag_spaces		2800005	1					
ANR	2800196	CompoundStatement		35:48:641:641	2800005	1					
ANR	2800197	GotoStatement	goto reg_char ;	4726:5:114713:114726	2800005	0	True				
ANR	2800198	Identifier	reg_char		2800005	0					
ANR	2800199	IfStatement	if ( state == 0 )		2800005	5					
ANR	2800200	Condition	state == 0	4728:8:114742:114751	2800005	0	True				
ANR	2800201	EqualityExpression	state == 0		2800005	0		==			
ANR	2800202	Identifier	state		2800005	0					
ANR	2800203	PrimaryExpression	0		2800005	1					
ANR	2800204	CompoundStatement		38:20:689:689	2800005	1					
ANR	2800205	ExpressionStatement	lc = '<'	4729:5:114761:114769	2800005	0	True				
ANR	2800206	AssignmentExpression	lc = '<'		2800005	0		=			
ANR	2800207	Identifier	lc		2800005	0					
ANR	2800208	PrimaryExpression	'<'		2800005	1					
ANR	2800209	ExpressionStatement	state = 1	4730:5:114776:114785	2800005	1	True				
ANR	2800210	AssignmentExpression	state = 1		2800005	0		=			
ANR	2800211	Identifier	state		2800005	0					
ANR	2800212	PrimaryExpression	1		2800005	1					
ANR	2800213	IfStatement	if ( allow )		2800005	2					
ANR	2800214	Condition	allow	4731:9:114796:114800	2800005	0	True				
ANR	2800215	Identifier	allow		2800005	0					
ANR	2800216	CompoundStatement		41:16:738:738	2800005	1					
ANR	2800217	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2800005	0					
ANR	2800218	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4732:10:114815:114843	2800005	0	True				
ANR	2800219	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2800005	0		>=			
ANR	2800220	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800221	Identifier	tp		2800005	0					
ANR	2800222	Identifier	tbuf		2800005	1					
ANR	2800223	Identifier	PHP_TAG_BUF_SIZE		2800005	1					
ANR	2800224	CompoundStatement		42:41:781:781	2800005	1					
ANR	2800225	ExpressionStatement	pos = tp - tbuf	4733:7:114855:114870	2800005	0	True				
ANR	2800226	AssignmentExpression	pos = tp - tbuf		2800005	0		=			
ANR	2800227	Identifier	pos		2800005	0					
ANR	2800228	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2800229	Identifier	tp		2800005	0					
ANR	2800230	Identifier	tbuf		2800005	1					
ANR	2800231	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4734:7:114879:114936	2800005	1	True				
ANR	2800232	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	0		=			
ANR	2800233	Identifier	tbuf		2800005	0					
ANR	2800234	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	1					
ANR	2800235	Callee	erealloc		2800005	0					
ANR	2800236	Identifier	erealloc		2800005	0					
ANR	2800237	ArgumentList	tbuf		2800005	1					
ANR	2800238	Argument	tbuf		2800005	0					
ANR	2800239	Identifier	tbuf		2800005	0					
ANR	2800240	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2800241	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2800242	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800243	Identifier	tp		2800005	0					
ANR	2800244	Identifier	tbuf		2800005	1					
ANR	2800245	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	1		+			
ANR	2800246	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2800247	PrimaryExpression	1		2800005	1					
ANR	2800248	ExpressionStatement	tp = tbuf + pos	4735:7:114945:114960	2800005	2	True				
ANR	2800249	AssignmentExpression	tp = tbuf + pos		2800005	0		=			
ANR	2800250	Identifier	tp		2800005	0					
ANR	2800251	AdditiveExpression	tbuf + pos		2800005	1		+			
ANR	2800252	Identifier	tbuf		2800005	0					
ANR	2800253	Identifier	pos		2800005	1					
ANR	2800254	ExpressionStatement	* ( tp ++ ) = '<'	4737:6:114976:114989	2800005	1	True				
ANR	2800255	AssignmentExpression	* ( tp ++ ) = '<'		2800005	0		=			
ANR	2800256	UnaryOperationExpression	* ( tp ++ )		2800005	0					
ANR	2800257	UnaryOperator	*		2800005	0					
ANR	2800258	PostIncDecOperationExpression	tp ++		2800005	1					
ANR	2800259	Identifier	tp		2800005	0					
ANR	2800260	IncDec	++		2800005	1					
ANR	2800261	PrimaryExpression	'<'		2800005	1					
ANR	2800262	ElseStatement	else		2800005	0					
ANR	2800263	IfStatement	if ( state == 1 )		2800005	0					
ANR	2800264	Condition	state == 1	4739:15:115014:115023	2800005	0	True				
ANR	2800265	EqualityExpression	state == 1		2800005	0		==			
ANR	2800266	Identifier	state		2800005	0					
ANR	2800267	PrimaryExpression	1		2800005	1					
ANR	2800268	CompoundStatement		49:27:961:961	2800005	1					
ANR	2800269	ExpressionStatement	depth ++	4740:5:115033:115040	2800005	0	True				
ANR	2800270	PostIncDecOperationExpression	depth ++		2800005	0					
ANR	2800271	Identifier	depth		2800005	0					
ANR	2800272	IncDec	++		2800005	1					
ANR	2800273	BreakStatement	break ;	4742:4:115052:115057	2800005	6	True				
ANR	2800274	Label	case '(' :	4744:3:115063:115071	2800005	7	True				
ANR	2800275	IfStatement	if ( state == 2 )		2800005	8					
ANR	2800276	Condition	state == 2	4745:8:115081:115090	2800005	0	True				
ANR	2800277	EqualityExpression	state == 2		2800005	0		==			
ANR	2800278	Identifier	state		2800005	0					
ANR	2800279	PrimaryExpression	2		2800005	1					
ANR	2800280	CompoundStatement		55:20:1028:1028	2800005	1					
ANR	2800281	IfStatement	"if ( lc != '""' && lc != '\\'' )"		2800005	0					
ANR	2800282	Condition	"lc != '""' && lc != '\\''"	4746:9:115104:115126	2800005	0	True				
ANR	2800283	AndExpression	"lc != '""' && lc != '\\''"		2800005	0		&&			
ANR	2800284	EqualityExpression	"lc != '""'"		2800005	0		!=			
ANR	2800285	Identifier	lc		2800005	0					
ANR	2800286	PrimaryExpression	"'""'"		2800005	1					
ANR	2800287	EqualityExpression	lc != '\\''		2800005	1		!=			
ANR	2800288	Identifier	lc		2800005	0					
ANR	2800289	PrimaryExpression	'\\''		2800005	1					
ANR	2800290	CompoundStatement		56:34:1064:1064	2800005	1					
ANR	2800291	ExpressionStatement	lc = '('	4747:6:115137:115145	2800005	0	True				
ANR	2800292	AssignmentExpression	lc = '('		2800005	0		=			
ANR	2800293	Identifier	lc		2800005	0					
ANR	2800294	PrimaryExpression	'('		2800005	1					
ANR	2800295	ExpressionStatement	br ++	4748:6:115153:115157	2800005	1	True				
ANR	2800296	PostIncDecOperationExpression	br ++		2800005	0					
ANR	2800297	Identifier	br		2800005	0					
ANR	2800298	IncDec	++		2800005	1					
ANR	2800299	ElseStatement	else		2800005	0					
ANR	2800300	IfStatement	if ( allow && state == 1 )		2800005	0					
ANR	2800301	Condition	allow && state == 1	4750:15:115181:115199	2800005	0	True				
ANR	2800302	AndExpression	allow && state == 1		2800005	0		&&			
ANR	2800303	Identifier	allow		2800005	0					
ANR	2800304	EqualityExpression	state == 1		2800005	1		==			
ANR	2800305	Identifier	state		2800005	0					
ANR	2800306	PrimaryExpression	1		2800005	1					
ANR	2800307	CompoundStatement		60:36:1137:1137	2800005	1					
ANR	2800308	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2800005	0					
ANR	2800309	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4751:9:115213:115241	2800005	0	True				
ANR	2800310	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2800005	0		>=			
ANR	2800311	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800312	Identifier	tp		2800005	0					
ANR	2800313	Identifier	tbuf		2800005	1					
ANR	2800314	Identifier	PHP_TAG_BUF_SIZE		2800005	1					
ANR	2800315	CompoundStatement		61:40:1179:1179	2800005	1					
ANR	2800316	ExpressionStatement	pos = tp - tbuf	4752:6:115252:115267	2800005	0	True				
ANR	2800317	AssignmentExpression	pos = tp - tbuf		2800005	0		=			
ANR	2800318	Identifier	pos		2800005	0					
ANR	2800319	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2800320	Identifier	tp		2800005	0					
ANR	2800321	Identifier	tbuf		2800005	1					
ANR	2800322	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4753:6:115275:115332	2800005	1	True				
ANR	2800323	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	0		=			
ANR	2800324	Identifier	tbuf		2800005	0					
ANR	2800325	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	1					
ANR	2800326	Callee	erealloc		2800005	0					
ANR	2800327	Identifier	erealloc		2800005	0					
ANR	2800328	ArgumentList	tbuf		2800005	1					
ANR	2800329	Argument	tbuf		2800005	0					
ANR	2800330	Identifier	tbuf		2800005	0					
ANR	2800331	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2800332	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2800333	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800334	Identifier	tp		2800005	0					
ANR	2800335	Identifier	tbuf		2800005	1					
ANR	2800336	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	1		+			
ANR	2800337	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2800338	PrimaryExpression	1		2800005	1					
ANR	2800339	ExpressionStatement	tp = tbuf + pos	4754:6:115340:115355	2800005	2	True				
ANR	2800340	AssignmentExpression	tp = tbuf + pos		2800005	0		=			
ANR	2800341	Identifier	tp		2800005	0					
ANR	2800342	AdditiveExpression	tbuf + pos		2800005	1		+			
ANR	2800343	Identifier	tbuf		2800005	0					
ANR	2800344	Identifier	pos		2800005	1					
ANR	2800345	ExpressionStatement	* ( tp ++ ) = c	4756:5:115369:115380	2800005	1	True				
ANR	2800346	AssignmentExpression	* ( tp ++ ) = c		2800005	0		=			
ANR	2800347	UnaryOperationExpression	* ( tp ++ )		2800005	0					
ANR	2800348	UnaryOperator	*		2800005	0					
ANR	2800349	PostIncDecOperationExpression	tp ++		2800005	1					
ANR	2800350	Identifier	tp		2800005	0					
ANR	2800351	IncDec	++		2800005	1					
ANR	2800352	Identifier	c		2800005	1					
ANR	2800353	ElseStatement	else		2800005	0					
ANR	2800354	IfStatement	if ( state == 0 )		2800005	0					
ANR	2800355	Condition	state == 0	4757:15:115397:115406	2800005	0	True				
ANR	2800356	EqualityExpression	state == 0		2800005	0		==			
ANR	2800357	Identifier	state		2800005	0					
ANR	2800358	PrimaryExpression	0		2800005	1					
ANR	2800359	CompoundStatement		67:27:1344:1344	2800005	1					
ANR	2800360	ExpressionStatement	* ( rp ++ ) = c	4758:5:115416:115427	2800005	0	True				
ANR	2800361	AssignmentExpression	* ( rp ++ ) = c		2800005	0		=			
ANR	2800362	UnaryOperationExpression	* ( rp ++ )		2800005	0					
ANR	2800363	UnaryOperator	*		2800005	0					
ANR	2800364	PostIncDecOperationExpression	rp ++		2800005	1					
ANR	2800365	Identifier	rp		2800005	0					
ANR	2800366	IncDec	++		2800005	1					
ANR	2800367	Identifier	c		2800005	1					
ANR	2800368	BreakStatement	break ;	4760:4:115439:115444	2800005	9	True				
ANR	2800369	Label	case ')' :	4762:3:115450:115458	2800005	10	True				
ANR	2800370	IfStatement	if ( state == 2 )		2800005	11					
ANR	2800371	Condition	state == 2	4763:8:115468:115477	2800005	0	True				
ANR	2800372	EqualityExpression	state == 2		2800005	0		==			
ANR	2800373	Identifier	state		2800005	0					
ANR	2800374	PrimaryExpression	2		2800005	1					
ANR	2800375	CompoundStatement		73:20:1415:1415	2800005	1					
ANR	2800376	IfStatement	"if ( lc != '""' && lc != '\\'' )"		2800005	0					
ANR	2800377	Condition	"lc != '""' && lc != '\\''"	4764:9:115491:115513	2800005	0	True				
ANR	2800378	AndExpression	"lc != '""' && lc != '\\''"		2800005	0		&&			
ANR	2800379	EqualityExpression	"lc != '""'"		2800005	0		!=			
ANR	2800380	Identifier	lc		2800005	0					
ANR	2800381	PrimaryExpression	"'""'"		2800005	1					
ANR	2800382	EqualityExpression	lc != '\\''		2800005	1		!=			
ANR	2800383	Identifier	lc		2800005	0					
ANR	2800384	PrimaryExpression	'\\''		2800005	1					
ANR	2800385	CompoundStatement		74:34:1451:1451	2800005	1					
ANR	2800386	ExpressionStatement	lc = ')'	4765:6:115524:115532	2800005	0	True				
ANR	2800387	AssignmentExpression	lc = ')'		2800005	0		=			
ANR	2800388	Identifier	lc		2800005	0					
ANR	2800389	PrimaryExpression	')'		2800005	1					
ANR	2800390	ExpressionStatement	br --	4766:6:115540:115544	2800005	1	True				
ANR	2800391	PostIncDecOperationExpression	br --		2800005	0					
ANR	2800392	Identifier	br		2800005	0					
ANR	2800393	IncDec	--		2800005	1					
ANR	2800394	ElseStatement	else		2800005	0					
ANR	2800395	IfStatement	if ( allow && state == 1 )		2800005	0					
ANR	2800396	Condition	allow && state == 1	4768:15:115568:115586	2800005	0	True				
ANR	2800397	AndExpression	allow && state == 1		2800005	0		&&			
ANR	2800398	Identifier	allow		2800005	0					
ANR	2800399	EqualityExpression	state == 1		2800005	1		==			
ANR	2800400	Identifier	state		2800005	0					
ANR	2800401	PrimaryExpression	1		2800005	1					
ANR	2800402	CompoundStatement		78:36:1524:1524	2800005	1					
ANR	2800403	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2800005	0					
ANR	2800404	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4769:9:115600:115628	2800005	0	True				
ANR	2800405	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2800005	0		>=			
ANR	2800406	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800407	Identifier	tp		2800005	0					
ANR	2800408	Identifier	tbuf		2800005	1					
ANR	2800409	Identifier	PHP_TAG_BUF_SIZE		2800005	1					
ANR	2800410	CompoundStatement		79:40:1566:1566	2800005	1					
ANR	2800411	ExpressionStatement	pos = tp - tbuf	4770:6:115639:115654	2800005	0	True				
ANR	2800412	AssignmentExpression	pos = tp - tbuf		2800005	0		=			
ANR	2800413	Identifier	pos		2800005	0					
ANR	2800414	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2800415	Identifier	tp		2800005	0					
ANR	2800416	Identifier	tbuf		2800005	1					
ANR	2800417	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4771:6:115662:115719	2800005	1	True				
ANR	2800418	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	0		=			
ANR	2800419	Identifier	tbuf		2800005	0					
ANR	2800420	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	1					
ANR	2800421	Callee	erealloc		2800005	0					
ANR	2800422	Identifier	erealloc		2800005	0					
ANR	2800423	ArgumentList	tbuf		2800005	1					
ANR	2800424	Argument	tbuf		2800005	0					
ANR	2800425	Identifier	tbuf		2800005	0					
ANR	2800426	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2800427	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2800428	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800429	Identifier	tp		2800005	0					
ANR	2800430	Identifier	tbuf		2800005	1					
ANR	2800431	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	1		+			
ANR	2800432	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2800433	PrimaryExpression	1		2800005	1					
ANR	2800434	ExpressionStatement	tp = tbuf + pos	4772:6:115727:115742	2800005	2	True				
ANR	2800435	AssignmentExpression	tp = tbuf + pos		2800005	0		=			
ANR	2800436	Identifier	tp		2800005	0					
ANR	2800437	AdditiveExpression	tbuf + pos		2800005	1		+			
ANR	2800438	Identifier	tbuf		2800005	0					
ANR	2800439	Identifier	pos		2800005	1					
ANR	2800440	ExpressionStatement	* ( tp ++ ) = c	4774:5:115756:115767	2800005	1	True				
ANR	2800441	AssignmentExpression	* ( tp ++ ) = c		2800005	0		=			
ANR	2800442	UnaryOperationExpression	* ( tp ++ )		2800005	0					
ANR	2800443	UnaryOperator	*		2800005	0					
ANR	2800444	PostIncDecOperationExpression	tp ++		2800005	1					
ANR	2800445	Identifier	tp		2800005	0					
ANR	2800446	IncDec	++		2800005	1					
ANR	2800447	Identifier	c		2800005	1					
ANR	2800448	ElseStatement	else		2800005	0					
ANR	2800449	IfStatement	if ( state == 0 )		2800005	0					
ANR	2800450	Condition	state == 0	4775:15:115784:115793	2800005	0	True				
ANR	2800451	EqualityExpression	state == 0		2800005	0		==			
ANR	2800452	Identifier	state		2800005	0					
ANR	2800453	PrimaryExpression	0		2800005	1					
ANR	2800454	CompoundStatement		85:27:1731:1731	2800005	1					
ANR	2800455	ExpressionStatement	* ( rp ++ ) = c	4776:5:115803:115814	2800005	0	True				
ANR	2800456	AssignmentExpression	* ( rp ++ ) = c		2800005	0		=			
ANR	2800457	UnaryOperationExpression	* ( rp ++ )		2800005	0					
ANR	2800458	UnaryOperator	*		2800005	0					
ANR	2800459	PostIncDecOperationExpression	rp ++		2800005	1					
ANR	2800460	Identifier	rp		2800005	0					
ANR	2800461	IncDec	++		2800005	1					
ANR	2800462	Identifier	c		2800005	1					
ANR	2800463	BreakStatement	break ;	4778:4:115826:115831	2800005	12	True				
ANR	2800464	Label	case '>' :	4780:3:115837:115845	2800005	13	True				
ANR	2800465	IfStatement	if ( depth )		2800005	14					
ANR	2800466	Condition	depth	4781:8:115855:115859	2800005	0	True				
ANR	2800467	Identifier	depth		2800005	0					
ANR	2800468	CompoundStatement		91:15:1797:1797	2800005	1					
ANR	2800469	ExpressionStatement	depth --	4782:5:115869:115876	2800005	0	True				
ANR	2800470	PostIncDecOperationExpression	depth --		2800005	0					
ANR	2800471	Identifier	depth		2800005	0					
ANR	2800472	IncDec	--		2800005	1					
ANR	2800473	BreakStatement	break ;	4783:5:115883:115888	2800005	1	True				
ANR	2800474	IfStatement	if ( in_q )		2800005	15					
ANR	2800475	Condition	in_q	4786:8:115905:115908	2800005	0	True				
ANR	2800476	Identifier	in_q		2800005	0					
ANR	2800477	CompoundStatement		96:14:1846:1846	2800005	1					
ANR	2800478	BreakStatement	break ;	4787:5:115918:115923	2800005	0	True				
ANR	2800479	SwitchStatement	switch ( state )		2800005	16					
ANR	2800480	Condition	state	4790:12:115944:115948	2800005	0	True				
ANR	2800481	Identifier	state		2800005	0					
ANR	2800482	CompoundStatement		100:19:1886:1886	2800005	1					
ANR	2800483	Label	case 1 :	4791:5:115958:115964	2800005	0	True				
ANR	2800484	ExpressionStatement	lc = '>'	4792:6:115987:115995	2800005	1	True				
ANR	2800485	AssignmentExpression	lc = '>'		2800005	0		=			
ANR	2800486	Identifier	lc		2800005	0					
ANR	2800487	PrimaryExpression	'>'		2800005	1					
ANR	2800488	ExpressionStatement	in_q = state = 0	4793:6:116003:116019	2800005	2	True				
ANR	2800489	AssignmentExpression	in_q = state = 0		2800005	0		=			
ANR	2800490	Identifier	in_q		2800005	0					
ANR	2800491	AssignmentExpression	state = 0		2800005	1		=			
ANR	2800492	Identifier	state		2800005	0					
ANR	2800493	PrimaryExpression	0		2800005	1					
ANR	2800494	IfStatement	if ( allow )		2800005	3					
ANR	2800495	Condition	allow	4794:10:116031:116035	2800005	0	True				
ANR	2800496	Identifier	allow		2800005	0					
ANR	2800497	CompoundStatement		104:17:1973:1973	2800005	1					
ANR	2800498	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2800005	0					
ANR	2800499	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4795:11:116051:116079	2800005	0	True				
ANR	2800500	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2800005	0		>=			
ANR	2800501	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800502	Identifier	tp		2800005	0					
ANR	2800503	Identifier	tbuf		2800005	1					
ANR	2800504	Identifier	PHP_TAG_BUF_SIZE		2800005	1					
ANR	2800505	CompoundStatement		105:42:2017:2017	2800005	1					
ANR	2800506	ExpressionStatement	pos = tp - tbuf	4796:8:116092:116107	2800005	0	True				
ANR	2800507	AssignmentExpression	pos = tp - tbuf		2800005	0		=			
ANR	2800508	Identifier	pos		2800005	0					
ANR	2800509	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2800510	Identifier	tp		2800005	0					
ANR	2800511	Identifier	tbuf		2800005	1					
ANR	2800512	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4797:8:116117:116174	2800005	1	True				
ANR	2800513	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	0		=			
ANR	2800514	Identifier	tbuf		2800005	0					
ANR	2800515	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	1					
ANR	2800516	Callee	erealloc		2800005	0					
ANR	2800517	Identifier	erealloc		2800005	0					
ANR	2800518	ArgumentList	tbuf		2800005	1					
ANR	2800519	Argument	tbuf		2800005	0					
ANR	2800520	Identifier	tbuf		2800005	0					
ANR	2800521	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2800522	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2800523	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800524	Identifier	tp		2800005	0					
ANR	2800525	Identifier	tbuf		2800005	1					
ANR	2800526	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	1		+			
ANR	2800527	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2800528	PrimaryExpression	1		2800005	1					
ANR	2800529	ExpressionStatement	tp = tbuf + pos	4798:8:116184:116199	2800005	2	True				
ANR	2800530	AssignmentExpression	tp = tbuf + pos		2800005	0		=			
ANR	2800531	Identifier	tp		2800005	0					
ANR	2800532	AdditiveExpression	tbuf + pos		2800005	1		+			
ANR	2800533	Identifier	tbuf		2800005	0					
ANR	2800534	Identifier	pos		2800005	1					
ANR	2800535	ExpressionStatement	* ( tp ++ ) = '>'	4800:7:116217:116230	2800005	1	True				
ANR	2800536	AssignmentExpression	* ( tp ++ ) = '>'		2800005	0		=			
ANR	2800537	UnaryOperationExpression	* ( tp ++ )		2800005	0					
ANR	2800538	UnaryOperator	*		2800005	0					
ANR	2800539	PostIncDecOperationExpression	tp ++		2800005	1					
ANR	2800540	Identifier	tp		2800005	0					
ANR	2800541	IncDec	++		2800005	1					
ANR	2800542	PrimaryExpression	'>'		2800005	1					
ANR	2800543	ExpressionStatement	* tp = '\\0'	4801:7:116239:116247	2800005	2	True				
ANR	2800544	AssignmentExpression	* tp = '\\0'		2800005	0		=			
ANR	2800545	UnaryOperationExpression	* tp		2800005	0					
ANR	2800546	UnaryOperator	*		2800005	0					
ANR	2800547	Identifier	tp		2800005	1					
ANR	2800548	PrimaryExpression	'\\0'		2800005	1					
ANR	2800549	IfStatement	"if ( php_tag_find ( tbuf , tp - tbuf , allow_actual ) )"		2800005	3					
ANR	2800550	Condition	"php_tag_find ( tbuf , tp - tbuf , allow_actual )"	4802:11:116260:116300	2800005	0	True				
ANR	2800551	CallExpression	"php_tag_find ( tbuf , tp - tbuf , allow_actual )"		2800005	0					
ANR	2800552	Callee	php_tag_find		2800005	0					
ANR	2800553	Identifier	php_tag_find		2800005	0					
ANR	2800554	ArgumentList	tbuf		2800005	1					
ANR	2800555	Argument	tbuf		2800005	0					
ANR	2800556	Identifier	tbuf		2800005	0					
ANR	2800557	Argument	tp - tbuf		2800005	1					
ANR	2800558	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800559	Identifier	tp		2800005	0					
ANR	2800560	Identifier	tbuf		2800005	1					
ANR	2800561	Argument	allow_actual		2800005	2					
ANR	2800562	Identifier	allow_actual		2800005	0					
ANR	2800563	CompoundStatement		112:54:2238:2238	2800005	1					
ANR	2800564	ExpressionStatement	"memcpy ( rp , tbuf , tp - tbuf )"	4803:8:116313:116338	2800005	0	True				
ANR	2800565	CallExpression	"memcpy ( rp , tbuf , tp - tbuf )"		2800005	0					
ANR	2800566	Callee	memcpy		2800005	0					
ANR	2800567	Identifier	memcpy		2800005	0					
ANR	2800568	ArgumentList	rp		2800005	1					
ANR	2800569	Argument	rp		2800005	0					
ANR	2800570	Identifier	rp		2800005	0					
ANR	2800571	Argument	tbuf		2800005	1					
ANR	2800572	Identifier	tbuf		2800005	0					
ANR	2800573	Argument	tp - tbuf		2800005	2					
ANR	2800574	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800575	Identifier	tp		2800005	0					
ANR	2800576	Identifier	tbuf		2800005	1					
ANR	2800577	ExpressionStatement	rp += tp - tbuf	4804:8:116348:116361	2800005	1	True				
ANR	2800578	AssignmentExpression	rp += tp - tbuf		2800005	0		+=			
ANR	2800579	Identifier	rp		2800005	0					
ANR	2800580	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2800581	Identifier	tp		2800005	0					
ANR	2800582	Identifier	tbuf		2800005	1					
ANR	2800583	ExpressionStatement	tp = tbuf	4806:7:116379:116388	2800005	4	True				
ANR	2800584	AssignmentExpression	tp = tbuf		2800005	0		=			
ANR	2800585	Identifier	tp		2800005	0					
ANR	2800586	Identifier	tbuf		2800005	1					
ANR	2800587	BreakStatement	break ;	4808:6:116404:116409	2800005	4	True				
ANR	2800588	Label	case 2 :	4810:5:116417:116423	2800005	5	True				
ANR	2800589	IfStatement	"if ( ! br && lc != '\\""' && * ( p - 1 ) == '?' )"		2800005	6					
ANR	2800590	Condition	"! br && lc != '\\""' && * ( p - 1 ) == '?'"	4811:10:116445:116478	2800005	0	True				
ANR	2800591	AndExpression	"! br && lc != '\\""' && * ( p - 1 ) == '?'"		2800005	0		&&			
ANR	2800592	UnaryOperationExpression	! br		2800005	0					
ANR	2800593	UnaryOperator	!		2800005	0					
ANR	2800594	Identifier	br		2800005	1					
ANR	2800595	AndExpression	"lc != '\\""' && * ( p - 1 ) == '?'"		2800005	1		&&			
ANR	2800596	EqualityExpression	"lc != '\\""'"		2800005	0		!=			
ANR	2800597	Identifier	lc		2800005	0					
ANR	2800598	PrimaryExpression	"'\\""'"		2800005	1					
ANR	2800599	EqualityExpression	* ( p - 1 ) == '?'		2800005	1		==			
ANR	2800600	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2800601	UnaryOperator	*		2800005	0					
ANR	2800602	AdditiveExpression	p - 1		2800005	1		-			
ANR	2800603	Identifier	p		2800005	0					
ANR	2800604	PrimaryExpression	1		2800005	1					
ANR	2800605	PrimaryExpression	'?'		2800005	1					
ANR	2800606	CompoundStatement		121:46:2416:2416	2800005	1					
ANR	2800607	ExpressionStatement	in_q = state = 0	4812:7:116490:116506	2800005	0	True				
ANR	2800608	AssignmentExpression	in_q = state = 0		2800005	0		=			
ANR	2800609	Identifier	in_q		2800005	0					
ANR	2800610	AssignmentExpression	state = 0		2800005	1		=			
ANR	2800611	Identifier	state		2800005	0					
ANR	2800612	PrimaryExpression	0		2800005	1					
ANR	2800613	ExpressionStatement	tp = tbuf	4813:7:116515:116524	2800005	1	True				
ANR	2800614	AssignmentExpression	tp = tbuf		2800005	0		=			
ANR	2800615	Identifier	tp		2800005	0					
ANR	2800616	Identifier	tbuf		2800005	1					
ANR	2800617	BreakStatement	break ;	4815:6:116540:116545	2800005	7	True				
ANR	2800618	Label	case 3 :	4817:5:116553:116559	2800005	8	True				
ANR	2800619	ExpressionStatement	in_q = state = 0	4818:6:116567:116583	2800005	9	True				
ANR	2800620	AssignmentExpression	in_q = state = 0		2800005	0		=			
ANR	2800621	Identifier	in_q		2800005	0					
ANR	2800622	AssignmentExpression	state = 0		2800005	1		=			
ANR	2800623	Identifier	state		2800005	0					
ANR	2800624	PrimaryExpression	0		2800005	1					
ANR	2800625	ExpressionStatement	tp = tbuf	4819:6:116591:116600	2800005	10	True				
ANR	2800626	AssignmentExpression	tp = tbuf		2800005	0		=			
ANR	2800627	Identifier	tp		2800005	0					
ANR	2800628	Identifier	tbuf		2800005	1					
ANR	2800629	BreakStatement	break ;	4820:6:116608:116613	2800005	11	True				
ANR	2800630	Label	case 4 :	4822:5:116621:116627	2800005	12	True				
ANR	2800631	IfStatement	if ( p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '-' )		2800005	13					
ANR	2800632	Condition	p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '-'	4823:10:116667:116712	2800005	0	True				
ANR	2800633	AndExpression	p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '-'		2800005	0		&&			
ANR	2800634	RelationalExpression	p >= buf + 2		2800005	0		>=			
ANR	2800635	Identifier	p		2800005	0					
ANR	2800636	AdditiveExpression	buf + 2		2800005	1		+			
ANR	2800637	Identifier	buf		2800005	0					
ANR	2800638	PrimaryExpression	2		2800005	1					
ANR	2800639	AndExpression	* ( p - 1 ) == '-' && * ( p - 2 ) == '-'		2800005	1		&&			
ANR	2800640	EqualityExpression	* ( p - 1 ) == '-'		2800005	0		==			
ANR	2800641	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2800642	UnaryOperator	*		2800005	0					
ANR	2800643	AdditiveExpression	p - 1		2800005	1		-			
ANR	2800644	Identifier	p		2800005	0					
ANR	2800645	PrimaryExpression	1		2800005	1					
ANR	2800646	PrimaryExpression	'-'		2800005	1					
ANR	2800647	EqualityExpression	* ( p - 2 ) == '-'		2800005	1		==			
ANR	2800648	UnaryOperationExpression	* ( p - 2 )		2800005	0					
ANR	2800649	UnaryOperator	*		2800005	0					
ANR	2800650	AdditiveExpression	p - 2		2800005	1		-			
ANR	2800651	Identifier	p		2800005	0					
ANR	2800652	PrimaryExpression	2		2800005	1					
ANR	2800653	PrimaryExpression	'-'		2800005	1					
ANR	2800654	CompoundStatement		133:58:2650:2650	2800005	1					
ANR	2800655	ExpressionStatement	in_q = state = 0	4824:7:116724:116740	2800005	0	True				
ANR	2800656	AssignmentExpression	in_q = state = 0		2800005	0		=			
ANR	2800657	Identifier	in_q		2800005	0					
ANR	2800658	AssignmentExpression	state = 0		2800005	1		=			
ANR	2800659	Identifier	state		2800005	0					
ANR	2800660	PrimaryExpression	0		2800005	1					
ANR	2800661	ExpressionStatement	tp = tbuf	4825:7:116749:116758	2800005	1	True				
ANR	2800662	AssignmentExpression	tp = tbuf		2800005	0		=			
ANR	2800663	Identifier	tp		2800005	0					
ANR	2800664	Identifier	tbuf		2800005	1					
ANR	2800665	BreakStatement	break ;	4827:6:116774:116779	2800005	14	True				
ANR	2800666	Label	default :	4829:5:116787:116794	2800005	15	True				
ANR	2800667	Identifier	default		2800005	0					
ANR	2800668	ExpressionStatement	* ( rp ++ ) = c	4830:6:116802:116813	2800005	16	True				
ANR	2800669	AssignmentExpression	* ( rp ++ ) = c		2800005	0		=			
ANR	2800670	UnaryOperationExpression	* ( rp ++ )		2800005	0					
ANR	2800671	UnaryOperator	*		2800005	0					
ANR	2800672	PostIncDecOperationExpression	rp ++		2800005	1					
ANR	2800673	Identifier	rp		2800005	0					
ANR	2800674	IncDec	++		2800005	1					
ANR	2800675	Identifier	c		2800005	1					
ANR	2800676	BreakStatement	break ;	4831:6:116821:116826	2800005	17	True				
ANR	2800677	BreakStatement	break ;	4833:4:116838:116843	2800005	17	True				
ANR	2800678	Label	"case '""' :"	4835:3:116849:116857	2800005	18	True				
ANR	2800679	Label	case '\\'' :	4836:3:116862:116871	2800005	19	True				
ANR	2800680	IfStatement	if ( state == 4 )		2800005	20					
ANR	2800681	Condition	state == 4	4837:8:116881:116890	2800005	0	True				
ANR	2800682	EqualityExpression	state == 4		2800005	0		==			
ANR	2800683	Identifier	state		2800005	0					
ANR	2800684	PrimaryExpression	4		2800005	1					
ANR	2800685	CompoundStatement		147:20:2828:2828	2800005	1					
ANR	2800686	BreakStatement	break ;	4839:5:116935:116940	2800005	0	True				
ANR	2800687	ElseStatement	else		2800005	0					
ANR	2800688	IfStatement	if ( state == 2 && * ( p - 1 ) != '\\\\' )		2800005	0					
ANR	2800689	Condition	state == 2 && * ( p - 1 ) != '\\\\'	4840:15:116957:116984	2800005	0	True				
ANR	2800690	AndExpression	state == 2 && * ( p - 1 ) != '\\\\'		2800005	0		&&			
ANR	2800691	EqualityExpression	state == 2		2800005	0		==			
ANR	2800692	Identifier	state		2800005	0					
ANR	2800693	PrimaryExpression	2		2800005	1					
ANR	2800694	EqualityExpression	* ( p - 1 ) != '\\\\'		2800005	1		!=			
ANR	2800695	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2800696	UnaryOperator	*		2800005	0					
ANR	2800697	AdditiveExpression	p - 1		2800005	1		-			
ANR	2800698	Identifier	p		2800005	0					
ANR	2800699	PrimaryExpression	1		2800005	1					
ANR	2800700	PrimaryExpression	'\\\\'		2800005	1					
ANR	2800701	CompoundStatement		150:45:2922:2922	2800005	1					
ANR	2800702	IfStatement	if ( lc == c )		2800005	0					
ANR	2800703	Condition	lc == c	4841:9:116998:117004	2800005	0	True				
ANR	2800704	EqualityExpression	lc == c		2800005	0		==			
ANR	2800705	Identifier	lc		2800005	0					
ANR	2800706	Identifier	c		2800005	1					
ANR	2800707	CompoundStatement		151:18:2942:2942	2800005	1					
ANR	2800708	ExpressionStatement	lc = '\\0'	4842:6:117015:117024	2800005	0	True				
ANR	2800709	AssignmentExpression	lc = '\\0'		2800005	0		=			
ANR	2800710	Identifier	lc		2800005	0					
ANR	2800711	PrimaryExpression	'\\0'		2800005	1					
ANR	2800712	ElseStatement	else		2800005	0					
ANR	2800713	IfStatement	if ( lc != '\\\\' )		2800005	0					
ANR	2800714	Condition	lc != '\\\\'	4843:16:117042:117051	2800005	0	True				
ANR	2800715	EqualityExpression	lc != '\\\\'		2800005	0		!=			
ANR	2800716	Identifier	lc		2800005	0					
ANR	2800717	PrimaryExpression	'\\\\'		2800005	1					
ANR	2800718	CompoundStatement		153:28:2989:2989	2800005	1					
ANR	2800719	ExpressionStatement	lc = c	4844:6:117062:117068	2800005	0	True				
ANR	2800720	AssignmentExpression	lc = c		2800005	0		=			
ANR	2800721	Identifier	lc		2800005	0					
ANR	2800722	Identifier	c		2800005	1					
ANR	2800723	ElseStatement	else		2800005	0					
ANR	2800724	IfStatement	if ( state == 0 )		2800005	0					
ANR	2800725	Condition	state == 0	4846:15:117092:117101	2800005	0	True				
ANR	2800726	EqualityExpression	state == 0		2800005	0		==			
ANR	2800727	Identifier	state		2800005	0					
ANR	2800728	PrimaryExpression	0		2800005	1					
ANR	2800729	CompoundStatement		156:27:3039:3039	2800005	1					
ANR	2800730	ExpressionStatement	* ( rp ++ ) = c	4847:5:117111:117122	2800005	0	True				
ANR	2800731	AssignmentExpression	* ( rp ++ ) = c		2800005	0		=			
ANR	2800732	UnaryOperationExpression	* ( rp ++ )		2800005	0					
ANR	2800733	UnaryOperator	*		2800005	0					
ANR	2800734	PostIncDecOperationExpression	rp ++		2800005	1					
ANR	2800735	Identifier	rp		2800005	0					
ANR	2800736	IncDec	++		2800005	1					
ANR	2800737	Identifier	c		2800005	1					
ANR	2800738	ElseStatement	else		2800005	0					
ANR	2800739	IfStatement	if ( allow && state == 1 )		2800005	0					
ANR	2800740	Condition	allow && state == 1	4848:15:117139:117157	2800005	0	True				
ANR	2800741	AndExpression	allow && state == 1		2800005	0		&&			
ANR	2800742	Identifier	allow		2800005	0					
ANR	2800743	EqualityExpression	state == 1		2800005	1		==			
ANR	2800744	Identifier	state		2800005	0					
ANR	2800745	PrimaryExpression	1		2800005	1					
ANR	2800746	CompoundStatement		158:36:3095:3095	2800005	1					
ANR	2800747	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2800005	0					
ANR	2800748	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4849:9:117171:117199	2800005	0	True				
ANR	2800749	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2800005	0		>=			
ANR	2800750	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800751	Identifier	tp		2800005	0					
ANR	2800752	Identifier	tbuf		2800005	1					
ANR	2800753	Identifier	PHP_TAG_BUF_SIZE		2800005	1					
ANR	2800754	CompoundStatement		159:40:3137:3137	2800005	1					
ANR	2800755	ExpressionStatement	pos = tp - tbuf	4850:6:117210:117225	2800005	0	True				
ANR	2800756	AssignmentExpression	pos = tp - tbuf		2800005	0		=			
ANR	2800757	Identifier	pos		2800005	0					
ANR	2800758	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2800759	Identifier	tp		2800005	0					
ANR	2800760	Identifier	tbuf		2800005	1					
ANR	2800761	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4851:6:117233:117290	2800005	1	True				
ANR	2800762	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	0		=			
ANR	2800763	Identifier	tbuf		2800005	0					
ANR	2800764	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	1					
ANR	2800765	Callee	erealloc		2800005	0					
ANR	2800766	Identifier	erealloc		2800005	0					
ANR	2800767	ArgumentList	tbuf		2800005	1					
ANR	2800768	Argument	tbuf		2800005	0					
ANR	2800769	Identifier	tbuf		2800005	0					
ANR	2800770	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2800771	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2800772	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800773	Identifier	tp		2800005	0					
ANR	2800774	Identifier	tbuf		2800005	1					
ANR	2800775	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	1		+			
ANR	2800776	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2800777	PrimaryExpression	1		2800005	1					
ANR	2800778	ExpressionStatement	tp = tbuf + pos	4852:6:117298:117313	2800005	2	True				
ANR	2800779	AssignmentExpression	tp = tbuf + pos		2800005	0		=			
ANR	2800780	Identifier	tp		2800005	0					
ANR	2800781	AdditiveExpression	tbuf + pos		2800005	1		+			
ANR	2800782	Identifier	tbuf		2800005	0					
ANR	2800783	Identifier	pos		2800005	1					
ANR	2800784	ExpressionStatement	* ( tp ++ ) = c	4854:5:117327:117338	2800005	1	True				
ANR	2800785	AssignmentExpression	* ( tp ++ ) = c		2800005	0		=			
ANR	2800786	UnaryOperationExpression	* ( tp ++ )		2800005	0					
ANR	2800787	UnaryOperator	*		2800005	0					
ANR	2800788	PostIncDecOperationExpression	tp ++		2800005	1					
ANR	2800789	Identifier	tp		2800005	0					
ANR	2800790	IncDec	++		2800005	1					
ANR	2800791	Identifier	c		2800005	1					
ANR	2800792	IfStatement	if ( state && p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q ) )		2800005	21					
ANR	2800793	Condition	state && p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )	4856:8:117354:117429	2800005	0	True				
ANR	2800794	AndExpression	state && p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )		2800005	0		&&			
ANR	2800795	Identifier	state		2800005	0					
ANR	2800796	AndExpression	p != buf && ( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )		2800005	1		&&			
ANR	2800797	EqualityExpression	p != buf		2800005	0		!=			
ANR	2800798	Identifier	p		2800005	0					
ANR	2800799	Identifier	buf		2800005	1					
ANR	2800800	AndExpression	( state == 1 || * ( p - 1 ) != '\\\\' ) && ( ! in_q || * p == in_q )		2800005	1		&&			
ANR	2800801	OrExpression	state == 1 || * ( p - 1 ) != '\\\\'		2800005	0		||			
ANR	2800802	EqualityExpression	state == 1		2800005	0		==			
ANR	2800803	Identifier	state		2800005	0					
ANR	2800804	PrimaryExpression	1		2800005	1					
ANR	2800805	EqualityExpression	* ( p - 1 ) != '\\\\'		2800005	1		!=			
ANR	2800806	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2800807	UnaryOperator	*		2800005	0					
ANR	2800808	AdditiveExpression	p - 1		2800005	1		-			
ANR	2800809	Identifier	p		2800005	0					
ANR	2800810	PrimaryExpression	1		2800005	1					
ANR	2800811	PrimaryExpression	'\\\\'		2800005	1					
ANR	2800812	OrExpression	! in_q || * p == in_q		2800005	1		||			
ANR	2800813	UnaryOperationExpression	! in_q		2800005	0					
ANR	2800814	UnaryOperator	!		2800005	0					
ANR	2800815	Identifier	in_q		2800005	1					
ANR	2800816	EqualityExpression	* p == in_q		2800005	1		==			
ANR	2800817	UnaryOperationExpression	* p		2800005	0					
ANR	2800818	UnaryOperator	*		2800005	0					
ANR	2800819	Identifier	p		2800005	1					
ANR	2800820	Identifier	in_q		2800005	1					
ANR	2800821	CompoundStatement		166:86:3367:3367	2800005	1					
ANR	2800822	IfStatement	if ( in_q )		2800005	0					
ANR	2800823	Condition	in_q	4857:9:117443:117446	2800005	0	True				
ANR	2800824	Identifier	in_q		2800005	0					
ANR	2800825	CompoundStatement		167:15:3384:3384	2800005	1					
ANR	2800826	ExpressionStatement	in_q = 0	4858:6:117457:117465	2800005	0	True				
ANR	2800827	AssignmentExpression	in_q = 0		2800005	0		=			
ANR	2800828	Identifier	in_q		2800005	0					
ANR	2800829	PrimaryExpression	0		2800005	1					
ANR	2800830	ElseStatement	else		2800005	0					
ANR	2800831	CompoundStatement		169:12:3414:3414	2800005	0					
ANR	2800832	ExpressionStatement	in_q = * p	4860:6:117487:117496	2800005	0	True				
ANR	2800833	AssignmentExpression	in_q = * p		2800005	0		=			
ANR	2800834	Identifier	in_q		2800005	0					
ANR	2800835	UnaryOperationExpression	* p		2800005	1					
ANR	2800836	UnaryOperator	*		2800005	0					
ANR	2800837	Identifier	p		2800005	1					
ANR	2800838	BreakStatement	break ;	4863:4:117515:117520	2800005	22	True				
ANR	2800839	Label	case '!' :	4865:3:117526:117534	2800005	23	True				
ANR	2800840	IfStatement	if ( state == 1 && * ( p - 1 ) == '<' )		2800005	24					
ANR	2800841	Condition	state == 1 && * ( p - 1 ) == '<'	4867:8:117598:117624	2800005	0	True				
ANR	2800842	AndExpression	state == 1 && * ( p - 1 ) == '<'		2800005	0		&&			
ANR	2800843	EqualityExpression	state == 1		2800005	0		==			
ANR	2800844	Identifier	state		2800005	0					
ANR	2800845	PrimaryExpression	1		2800005	1					
ANR	2800846	EqualityExpression	* ( p - 1 ) == '<'		2800005	1		==			
ANR	2800847	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2800848	UnaryOperator	*		2800005	0					
ANR	2800849	AdditiveExpression	p - 1		2800005	1		-			
ANR	2800850	Identifier	p		2800005	0					
ANR	2800851	PrimaryExpression	1		2800005	1					
ANR	2800852	PrimaryExpression	'<'		2800005	1					
ANR	2800853	CompoundStatement		177:37:3562:3562	2800005	1					
ANR	2800854	ExpressionStatement	state = 3	4868:5:117634:117643	2800005	0	True				
ANR	2800855	AssignmentExpression	state = 3		2800005	0		=			
ANR	2800856	Identifier	state		2800005	0					
ANR	2800857	PrimaryExpression	3		2800005	1					
ANR	2800858	ExpressionStatement	lc = c	4869:5:117650:117656	2800005	1	True				
ANR	2800859	AssignmentExpression	lc = c		2800005	0		=			
ANR	2800860	Identifier	lc		2800005	0					
ANR	2800861	Identifier	c		2800005	1					
ANR	2800862	ElseStatement	else		2800005	0					
ANR	2800863	CompoundStatement		180:11:3604:3604	2800005	0					
ANR	2800864	IfStatement	if ( state == 0 )		2800005	0					
ANR	2800865	Condition	state == 0	4871:9:117680:117689	2800005	0	True				
ANR	2800866	EqualityExpression	state == 0		2800005	0		==			
ANR	2800867	Identifier	state		2800005	0					
ANR	2800868	PrimaryExpression	0		2800005	1					
ANR	2800869	CompoundStatement		181:21:3627:3627	2800005	1					
ANR	2800870	ExpressionStatement	* ( rp ++ ) = c	4872:6:117700:117711	2800005	0	True				
ANR	2800871	AssignmentExpression	* ( rp ++ ) = c		2800005	0		=			
ANR	2800872	UnaryOperationExpression	* ( rp ++ )		2800005	0					
ANR	2800873	UnaryOperator	*		2800005	0					
ANR	2800874	PostIncDecOperationExpression	rp ++		2800005	1					
ANR	2800875	Identifier	rp		2800005	0					
ANR	2800876	IncDec	++		2800005	1					
ANR	2800877	Identifier	c		2800005	1					
ANR	2800878	ElseStatement	else		2800005	0					
ANR	2800879	IfStatement	if ( allow && state == 1 )		2800005	0					
ANR	2800880	Condition	allow && state == 1	4873:16:117729:117747	2800005	0	True				
ANR	2800881	AndExpression	allow && state == 1		2800005	0		&&			
ANR	2800882	Identifier	allow		2800005	0					
ANR	2800883	EqualityExpression	state == 1		2800005	1		==			
ANR	2800884	Identifier	state		2800005	0					
ANR	2800885	PrimaryExpression	1		2800005	1					
ANR	2800886	CompoundStatement		183:37:3685:3685	2800005	1					
ANR	2800887	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2800005	0					
ANR	2800888	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4874:10:117762:117790	2800005	0	True				
ANR	2800889	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2800005	0		>=			
ANR	2800890	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800891	Identifier	tp		2800005	0					
ANR	2800892	Identifier	tbuf		2800005	1					
ANR	2800893	Identifier	PHP_TAG_BUF_SIZE		2800005	1					
ANR	2800894	CompoundStatement		184:41:3728:3728	2800005	1					
ANR	2800895	ExpressionStatement	pos = tp - tbuf	4875:7:117802:117817	2800005	0	True				
ANR	2800896	AssignmentExpression	pos = tp - tbuf		2800005	0		=			
ANR	2800897	Identifier	pos		2800005	0					
ANR	2800898	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2800899	Identifier	tp		2800005	0					
ANR	2800900	Identifier	tbuf		2800005	1					
ANR	2800901	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4876:7:117826:117883	2800005	1	True				
ANR	2800902	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	0		=			
ANR	2800903	Identifier	tbuf		2800005	0					
ANR	2800904	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	1					
ANR	2800905	Callee	erealloc		2800005	0					
ANR	2800906	Identifier	erealloc		2800005	0					
ANR	2800907	ArgumentList	tbuf		2800005	1					
ANR	2800908	Argument	tbuf		2800005	0					
ANR	2800909	Identifier	tbuf		2800005	0					
ANR	2800910	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2800911	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2800912	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2800913	Identifier	tp		2800005	0					
ANR	2800914	Identifier	tbuf		2800005	1					
ANR	2800915	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	1		+			
ANR	2800916	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2800917	PrimaryExpression	1		2800005	1					
ANR	2800918	ExpressionStatement	tp = tbuf + pos	4877:7:117892:117907	2800005	2	True				
ANR	2800919	AssignmentExpression	tp = tbuf + pos		2800005	0		=			
ANR	2800920	Identifier	tp		2800005	0					
ANR	2800921	AdditiveExpression	tbuf + pos		2800005	1		+			
ANR	2800922	Identifier	tbuf		2800005	0					
ANR	2800923	Identifier	pos		2800005	1					
ANR	2800924	ExpressionStatement	* ( tp ++ ) = c	4879:6:117923:117934	2800005	1	True				
ANR	2800925	AssignmentExpression	* ( tp ++ ) = c		2800005	0		=			
ANR	2800926	UnaryOperationExpression	* ( tp ++ )		2800005	0					
ANR	2800927	UnaryOperator	*		2800005	0					
ANR	2800928	PostIncDecOperationExpression	tp ++		2800005	1					
ANR	2800929	Identifier	tp		2800005	0					
ANR	2800930	IncDec	++		2800005	1					
ANR	2800931	Identifier	c		2800005	1					
ANR	2800932	BreakStatement	break ;	4882:4:117953:117958	2800005	25	True				
ANR	2800933	Label	case '-' :	4884:3:117964:117972	2800005	26	True				
ANR	2800934	IfStatement	if ( state == 3 && p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!' )		2800005	27					
ANR	2800935	Condition	state == 3 && p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!'	4885:8:117982:118041	2800005	0	True				
ANR	2800936	AndExpression	state == 3 && p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!'		2800005	0		&&			
ANR	2800937	EqualityExpression	state == 3		2800005	0		==			
ANR	2800938	Identifier	state		2800005	0					
ANR	2800939	PrimaryExpression	3		2800005	1					
ANR	2800940	AndExpression	p >= buf + 2 && * ( p - 1 ) == '-' && * ( p - 2 ) == '!'		2800005	1		&&			
ANR	2800941	RelationalExpression	p >= buf + 2		2800005	0		>=			
ANR	2800942	Identifier	p		2800005	0					
ANR	2800943	AdditiveExpression	buf + 2		2800005	1		+			
ANR	2800944	Identifier	buf		2800005	0					
ANR	2800945	PrimaryExpression	2		2800005	1					
ANR	2800946	AndExpression	* ( p - 1 ) == '-' && * ( p - 2 ) == '!'		2800005	1		&&			
ANR	2800947	EqualityExpression	* ( p - 1 ) == '-'		2800005	0		==			
ANR	2800948	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2800949	UnaryOperator	*		2800005	0					
ANR	2800950	AdditiveExpression	p - 1		2800005	1		-			
ANR	2800951	Identifier	p		2800005	0					
ANR	2800952	PrimaryExpression	1		2800005	1					
ANR	2800953	PrimaryExpression	'-'		2800005	1					
ANR	2800954	EqualityExpression	* ( p - 2 ) == '!'		2800005	1		==			
ANR	2800955	UnaryOperationExpression	* ( p - 2 )		2800005	0					
ANR	2800956	UnaryOperator	*		2800005	0					
ANR	2800957	AdditiveExpression	p - 2		2800005	1		-			
ANR	2800958	Identifier	p		2800005	0					
ANR	2800959	PrimaryExpression	2		2800005	1					
ANR	2800960	PrimaryExpression	'!'		2800005	1					
ANR	2800961	CompoundStatement		195:70:3979:3979	2800005	1					
ANR	2800962	ExpressionStatement	state = 4	4886:5:118051:118060	2800005	0	True				
ANR	2800963	AssignmentExpression	state = 4		2800005	0		=			
ANR	2800964	Identifier	state		2800005	0					
ANR	2800965	PrimaryExpression	4		2800005	1					
ANR	2800966	ElseStatement	else		2800005	0					
ANR	2800967	CompoundStatement		197:11:4008:4008	2800005	0					
ANR	2800968	GotoStatement	goto reg_char ;	4888:5:118080:118093	2800005	0	True				
ANR	2800969	Identifier	reg_char		2800005	0					
ANR	2800970	BreakStatement	break ;	4890:4:118105:118110	2800005	28	True				
ANR	2800971	Label	case '?' :	4892:3:118116:118124	2800005	29	True				
ANR	2800972	IfStatement	if ( state == 1 && * ( p - 1 ) == '<' )		2800005	30					
ANR	2800973	Condition	state == 1 && * ( p - 1 ) == '<'	4894:8:118135:118161	2800005	0	True				
ANR	2800974	AndExpression	state == 1 && * ( p - 1 ) == '<'		2800005	0		&&			
ANR	2800975	EqualityExpression	state == 1		2800005	0		==			
ANR	2800976	Identifier	state		2800005	0					
ANR	2800977	PrimaryExpression	1		2800005	1					
ANR	2800978	EqualityExpression	* ( p - 1 ) == '<'		2800005	1		==			
ANR	2800979	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2800980	UnaryOperator	*		2800005	0					
ANR	2800981	AdditiveExpression	p - 1		2800005	1		-			
ANR	2800982	Identifier	p		2800005	0					
ANR	2800983	PrimaryExpression	1		2800005	1					
ANR	2800984	PrimaryExpression	'<'		2800005	1					
ANR	2800985	CompoundStatement		204:37:4099:4099	2800005	1					
ANR	2800986	ExpressionStatement	br = 0	4895:5:118171:118175	2800005	0	True				
ANR	2800987	AssignmentExpression	br = 0		2800005	0		=			
ANR	2800988	Identifier	br		2800005	0					
ANR	2800989	PrimaryExpression	0		2800005	1					
ANR	2800990	ExpressionStatement	state = 2	4896:5:118182:118189	2800005	1	True				
ANR	2800991	AssignmentExpression	state = 2		2800005	0		=			
ANR	2800992	Identifier	state		2800005	0					
ANR	2800993	PrimaryExpression	2		2800005	1					
ANR	2800994	BreakStatement	break ;	4897:5:118196:118201	2800005	2	True				
ANR	2800995	Label	case 'E' :	4900:3:118213:118221	2800005	31	True				
ANR	2800996	Label	case 'e' :	4901:3:118226:118234	2800005	32	True				
ANR	2800997	IfStatement	if ( state == 3 && p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd' )		2800005	33					
ANR	2800998	Condition	state == 3 && p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'	4903:8:118273:118518	2800005	0	True				
ANR	2800999	AndExpression	state == 3 && p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2800005	0		&&			
ANR	2801000	EqualityExpression	state == 3		2800005	0		==			
ANR	2801001	Identifier	state		2800005	0					
ANR	2801002	PrimaryExpression	3		2800005	1					
ANR	2801003	AndExpression	p > buf + 6 && tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2800005	1		&&			
ANR	2801004	RelationalExpression	p > buf + 6		2800005	0		>			
ANR	2801005	Identifier	p		2800005	0					
ANR	2801006	AdditiveExpression	buf + 6		2800005	1		+			
ANR	2801007	Identifier	buf		2800005	0					
ANR	2801008	PrimaryExpression	6		2800005	1					
ANR	2801009	AndExpression	tolower ( * ( p - 1 ) ) == 'p' && tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2800005	1		&&			
ANR	2801010	EqualityExpression	tolower ( * ( p - 1 ) ) == 'p'		2800005	0		==			
ANR	2801011	CallExpression	tolower ( * ( p - 1 ) )		2800005	0					
ANR	2801012	Callee	tolower		2800005	0					
ANR	2801013	Identifier	tolower		2800005	0					
ANR	2801014	ArgumentList	* ( p - 1 )		2800005	1					
ANR	2801015	Argument	* ( p - 1 )		2800005	0					
ANR	2801016	UnaryOperationExpression	* ( p - 1 )		2800005	0					
ANR	2801017	UnaryOperator	*		2800005	0					
ANR	2801018	AdditiveExpression	p - 1		2800005	1		-			
ANR	2801019	Identifier	p		2800005	0					
ANR	2801020	PrimaryExpression	1		2800005	1					
ANR	2801021	PrimaryExpression	'p'		2800005	1					
ANR	2801022	AndExpression	tolower ( * ( p - 2 ) ) == 'y' && tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2800005	1		&&			
ANR	2801023	EqualityExpression	tolower ( * ( p - 2 ) ) == 'y'		2800005	0		==			
ANR	2801024	CallExpression	tolower ( * ( p - 2 ) )		2800005	0					
ANR	2801025	Callee	tolower		2800005	0					
ANR	2801026	Identifier	tolower		2800005	0					
ANR	2801027	ArgumentList	* ( p - 2 )		2800005	1					
ANR	2801028	Argument	* ( p - 2 )		2800005	0					
ANR	2801029	UnaryOperationExpression	* ( p - 2 )		2800005	0					
ANR	2801030	UnaryOperator	*		2800005	0					
ANR	2801031	AdditiveExpression	p - 2		2800005	1		-			
ANR	2801032	Identifier	p		2800005	0					
ANR	2801033	PrimaryExpression	2		2800005	1					
ANR	2801034	PrimaryExpression	'y'		2800005	1					
ANR	2801035	AndExpression	tolower ( * ( p - 3 ) ) == 't' && tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2800005	1		&&			
ANR	2801036	EqualityExpression	tolower ( * ( p - 3 ) ) == 't'		2800005	0		==			
ANR	2801037	CallExpression	tolower ( * ( p - 3 ) )		2800005	0					
ANR	2801038	Callee	tolower		2800005	0					
ANR	2801039	Identifier	tolower		2800005	0					
ANR	2801040	ArgumentList	* ( p - 3 )		2800005	1					
ANR	2801041	Argument	* ( p - 3 )		2800005	0					
ANR	2801042	UnaryOperationExpression	* ( p - 3 )		2800005	0					
ANR	2801043	UnaryOperator	*		2800005	0					
ANR	2801044	AdditiveExpression	p - 3		2800005	1		-			
ANR	2801045	Identifier	p		2800005	0					
ANR	2801046	PrimaryExpression	3		2800005	1					
ANR	2801047	PrimaryExpression	't'		2800005	1					
ANR	2801048	AndExpression	tolower ( * ( p - 4 ) ) == 'c' && tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2800005	1		&&			
ANR	2801049	EqualityExpression	tolower ( * ( p - 4 ) ) == 'c'		2800005	0		==			
ANR	2801050	CallExpression	tolower ( * ( p - 4 ) )		2800005	0					
ANR	2801051	Callee	tolower		2800005	0					
ANR	2801052	Identifier	tolower		2800005	0					
ANR	2801053	ArgumentList	* ( p - 4 )		2800005	1					
ANR	2801054	Argument	* ( p - 4 )		2800005	0					
ANR	2801055	UnaryOperationExpression	* ( p - 4 )		2800005	0					
ANR	2801056	UnaryOperator	*		2800005	0					
ANR	2801057	AdditiveExpression	p - 4		2800005	1		-			
ANR	2801058	Identifier	p		2800005	0					
ANR	2801059	PrimaryExpression	4		2800005	1					
ANR	2801060	PrimaryExpression	'c'		2800005	1					
ANR	2801061	AndExpression	tolower ( * ( p - 5 ) ) == 'o' && tolower ( * ( p - 6 ) ) == 'd'		2800005	1		&&			
ANR	2801062	EqualityExpression	tolower ( * ( p - 5 ) ) == 'o'		2800005	0		==			
ANR	2801063	CallExpression	tolower ( * ( p - 5 ) )		2800005	0					
ANR	2801064	Callee	tolower		2800005	0					
ANR	2801065	Identifier	tolower		2800005	0					
ANR	2801066	ArgumentList	* ( p - 5 )		2800005	1					
ANR	2801067	Argument	* ( p - 5 )		2800005	0					
ANR	2801068	UnaryOperationExpression	* ( p - 5 )		2800005	0					
ANR	2801069	UnaryOperator	*		2800005	0					
ANR	2801070	AdditiveExpression	p - 5		2800005	1		-			
ANR	2801071	Identifier	p		2800005	0					
ANR	2801072	PrimaryExpression	5		2800005	1					
ANR	2801073	PrimaryExpression	'o'		2800005	1					
ANR	2801074	EqualityExpression	tolower ( * ( p - 6 ) ) == 'd'		2800005	1		==			
ANR	2801075	CallExpression	tolower ( * ( p - 6 ) )		2800005	0					
ANR	2801076	Callee	tolower		2800005	0					
ANR	2801077	Identifier	tolower		2800005	0					
ANR	2801078	ArgumentList	* ( p - 6 )		2800005	1					
ANR	2801079	Argument	* ( p - 6 )		2800005	0					
ANR	2801080	UnaryOperationExpression	* ( p - 6 )		2800005	0					
ANR	2801081	UnaryOperator	*		2800005	0					
ANR	2801082	AdditiveExpression	p - 6		2800005	1		-			
ANR	2801083	Identifier	p		2800005	0					
ANR	2801084	PrimaryExpression	6		2800005	1					
ANR	2801085	PrimaryExpression	'd'		2800005	1					
ANR	2801086	CompoundStatement		219:38:4456:4456	2800005	1					
ANR	2801087	ExpressionStatement	state = 1	4910:5:118528:118537	2800005	0	True				
ANR	2801088	AssignmentExpression	state = 1		2800005	0		=			
ANR	2801089	Identifier	state		2800005	0					
ANR	2801090	PrimaryExpression	1		2800005	1					
ANR	2801091	BreakStatement	break ;	4911:5:118544:118549	2800005	1	True				
ANR	2801092	Label	case 'l' :	4915:3:118584:118592	2800005	34	True				
ANR	2801093	Label	case 'L' :	4916:3:118597:118605	2800005	35	True				
ANR	2801094	IfStatement	"if ( state == 2 && p > buf + 2 && strncasecmp ( p - 2 , ""xm"" , 2 ) == 0 )"		2800005	36					
ANR	2801095	Condition	"state == 2 && p > buf + 2 && strncasecmp ( p - 2 , ""xm"" , 2 ) == 0"	4922:8:118731:118787	2800005	0	True				
ANR	2801096	AndExpression	"state == 2 && p > buf + 2 && strncasecmp ( p - 2 , ""xm"" , 2 ) == 0"		2800005	0		&&			
ANR	2801097	EqualityExpression	state == 2		2800005	0		==			
ANR	2801098	Identifier	state		2800005	0					
ANR	2801099	PrimaryExpression	2		2800005	1					
ANR	2801100	AndExpression	"p > buf + 2 && strncasecmp ( p - 2 , ""xm"" , 2 ) == 0"		2800005	1		&&			
ANR	2801101	RelationalExpression	p > buf + 2		2800005	0		>			
ANR	2801102	Identifier	p		2800005	0					
ANR	2801103	AdditiveExpression	buf + 2		2800005	1		+			
ANR	2801104	Identifier	buf		2800005	0					
ANR	2801105	PrimaryExpression	2		2800005	1					
ANR	2801106	EqualityExpression	"strncasecmp ( p - 2 , ""xm"" , 2 ) == 0"		2800005	1		==			
ANR	2801107	CallExpression	"strncasecmp ( p - 2 , ""xm"" , 2 )"		2800005	0					
ANR	2801108	Callee	strncasecmp		2800005	0					
ANR	2801109	Identifier	strncasecmp		2800005	0					
ANR	2801110	ArgumentList	p - 2		2800005	1					
ANR	2801111	Argument	p - 2		2800005	0					
ANR	2801112	AdditiveExpression	p - 2		2800005	0		-			
ANR	2801113	Identifier	p		2800005	0					
ANR	2801114	PrimaryExpression	2		2800005	1					
ANR	2801115	Argument	"""xm"""		2800005	1					
ANR	2801116	PrimaryExpression	"""xm"""		2800005	0					
ANR	2801117	Argument	2		2800005	2					
ANR	2801118	PrimaryExpression	2		2800005	0					
ANR	2801119	PrimaryExpression	0		2800005	1					
ANR	2801120	CompoundStatement		232:67:4725:4725	2800005	1					
ANR	2801121	ExpressionStatement	state = 1	4923:5:118797:118806	2800005	0	True				
ANR	2801122	AssignmentExpression	state = 1		2800005	0		=			
ANR	2801123	Identifier	state		2800005	0					
ANR	2801124	PrimaryExpression	1		2800005	1					
ANR	2801125	BreakStatement	break ;	4924:5:118813:118818	2800005	1	True				
ANR	2801126	Label	default :	4928:3:118853:118860	2800005	37	True				
ANR	2801127	Identifier	default		2800005	0					
ANR	2801128	Label	reg_char :	4929:0:118862:118870	2800005	38	True				
ANR	2801129	Identifier	reg_char		2800005	0					
ANR	2801130	IfStatement	if ( state == 0 )		2800005	39					
ANR	2801131	Condition	state == 0	4930:8:118880:118889	2800005	0	True				
ANR	2801132	EqualityExpression	state == 0		2800005	0		==			
ANR	2801133	Identifier	state		2800005	0					
ANR	2801134	PrimaryExpression	0		2800005	1					
ANR	2801135	CompoundStatement		240:20:4827:4827	2800005	1					
ANR	2801136	ExpressionStatement	* ( rp ++ ) = c	4931:5:118899:118910	2800005	0	True				
ANR	2801137	AssignmentExpression	* ( rp ++ ) = c		2800005	0		=			
ANR	2801138	UnaryOperationExpression	* ( rp ++ )		2800005	0					
ANR	2801139	UnaryOperator	*		2800005	0					
ANR	2801140	PostIncDecOperationExpression	rp ++		2800005	1					
ANR	2801141	Identifier	rp		2800005	0					
ANR	2801142	IncDec	++		2800005	1					
ANR	2801143	Identifier	c		2800005	1					
ANR	2801144	ElseStatement	else		2800005	0					
ANR	2801145	IfStatement	if ( allow && state == 1 )		2800005	0					
ANR	2801146	Condition	allow && state == 1	4932:15:118927:118945	2800005	0	True				
ANR	2801147	AndExpression	allow && state == 1		2800005	0		&&			
ANR	2801148	Identifier	allow		2800005	0					
ANR	2801149	EqualityExpression	state == 1		2800005	1		==			
ANR	2801150	Identifier	state		2800005	0					
ANR	2801151	PrimaryExpression	1		2800005	1					
ANR	2801152	CompoundStatement		242:36:4883:4883	2800005	1					
ANR	2801153	IfStatement	if ( tp - tbuf >= PHP_TAG_BUF_SIZE )		2800005	0					
ANR	2801154	Condition	tp - tbuf >= PHP_TAG_BUF_SIZE	4933:9:118959:118987	2800005	0	True				
ANR	2801155	RelationalExpression	tp - tbuf >= PHP_TAG_BUF_SIZE		2800005	0		>=			
ANR	2801156	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2801157	Identifier	tp		2800005	0					
ANR	2801158	Identifier	tbuf		2800005	1					
ANR	2801159	Identifier	PHP_TAG_BUF_SIZE		2800005	1					
ANR	2801160	CompoundStatement		243:40:4925:4925	2800005	1					
ANR	2801161	ExpressionStatement	pos = tp - tbuf	4934:6:118998:119013	2800005	0	True				
ANR	2801162	AssignmentExpression	pos = tp - tbuf		2800005	0		=			
ANR	2801163	Identifier	pos		2800005	0					
ANR	2801164	AdditiveExpression	tp - tbuf		2800005	1		-			
ANR	2801165	Identifier	tp		2800005	0					
ANR	2801166	Identifier	tbuf		2800005	1					
ANR	2801167	ExpressionStatement	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"	4935:6:119021:119078	2800005	1	True				
ANR	2801168	AssignmentExpression	"tbuf = erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	0		=			
ANR	2801169	Identifier	tbuf		2800005	0					
ANR	2801170	CallExpression	"erealloc ( tbuf , ( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1 )"		2800005	1					
ANR	2801171	Callee	erealloc		2800005	0					
ANR	2801172	Identifier	erealloc		2800005	0					
ANR	2801173	ArgumentList	tbuf		2800005	1					
ANR	2801174	Argument	tbuf		2800005	0					
ANR	2801175	Identifier	tbuf		2800005	0					
ANR	2801176	Argument	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	1					
ANR	2801177	AdditiveExpression	( tp - tbuf ) + PHP_TAG_BUF_SIZE + 1		2800005	0		+			
ANR	2801178	AdditiveExpression	tp - tbuf		2800005	0		-			
ANR	2801179	Identifier	tp		2800005	0					
ANR	2801180	Identifier	tbuf		2800005	1					
ANR	2801181	AdditiveExpression	PHP_TAG_BUF_SIZE + 1		2800005	1		+			
ANR	2801182	Identifier	PHP_TAG_BUF_SIZE		2800005	0					
ANR	2801183	PrimaryExpression	1		2800005	1					
ANR	2801184	ExpressionStatement	tp = tbuf + pos	4936:6:119086:119101	2800005	2	True				
ANR	2801185	AssignmentExpression	tp = tbuf + pos		2800005	0		=			
ANR	2801186	Identifier	tp		2800005	0					
ANR	2801187	AdditiveExpression	tbuf + pos		2800005	1		+			
ANR	2801188	Identifier	tbuf		2800005	0					
ANR	2801189	Identifier	pos		2800005	1					
ANR	2801190	ExpressionStatement	* ( tp ++ ) = c	4938:5:119115:119126	2800005	1	True				
ANR	2801191	AssignmentExpression	* ( tp ++ ) = c		2800005	0		=			
ANR	2801192	UnaryOperationExpression	* ( tp ++ )		2800005	0					
ANR	2801193	UnaryOperator	*		2800005	0					
ANR	2801194	PostIncDecOperationExpression	tp ++		2800005	1					
ANR	2801195	Identifier	tp		2800005	0					
ANR	2801196	IncDec	++		2800005	1					
ANR	2801197	Identifier	c		2800005	1					
ANR	2801198	BreakStatement	break ;	4940:4:119138:119143	2800005	40	True				
ANR	2801199	ExpressionStatement	c = * ( ++ p )	4942:2:119151:119161	2800005	1	True				
ANR	2801200	AssignmentExpression	c = * ( ++ p )		2800005	0		=			
ANR	2801201	Identifier	c		2800005	0					
ANR	2801202	UnaryOperationExpression	* ( ++ p )		2800005	1					
ANR	2801203	UnaryOperator	*		2800005	0					
ANR	2801204	UnaryExpression	++ p		2800005	1					
ANR	2801205	IncDec	++		2800005	0					
ANR	2801206	Identifier	p		2800005	1					
ANR	2801207	ExpressionStatement	i ++	4943:2:119165:119168	2800005	2	True				
ANR	2801208	PostIncDecOperationExpression	i ++		2800005	0					
ANR	2801209	Identifier	i		2800005	0					
ANR	2801210	IncDec	++		2800005	1					
ANR	2801211	IfStatement	if ( rp < rbuf + len )		2800005	15					
ANR	2801212	Condition	rp < rbuf + len	4945:5:119178:119192	2800005	0	True				
ANR	2801213	RelationalExpression	rp < rbuf + len		2800005	0		<			
ANR	2801214	Identifier	rp		2800005	0					
ANR	2801215	AdditiveExpression	rbuf + len		2800005	1		+			
ANR	2801216	Identifier	rbuf		2800005	0					
ANR	2801217	Identifier	len		2800005	1					
ANR	2801218	CompoundStatement		255:22:5130:5130	2800005	1					
ANR	2801219	ExpressionStatement	* rp = '\\0'	4946:2:119199:119209	2800005	0	True				
ANR	2801220	AssignmentExpression	* rp = '\\0'		2800005	0		=			
ANR	2801221	UnaryOperationExpression	* rp		2800005	0					
ANR	2801222	UnaryOperator	*		2800005	0					
ANR	2801223	Identifier	rp		2800005	1					
ANR	2801224	PrimaryExpression	'\\0'		2800005	1					
ANR	2801225	ExpressionStatement	efree ( buf )	4948:1:119215:119225	2800005	16	True				
ANR	2801226	CallExpression	efree ( buf )		2800005	0					
ANR	2801227	Callee	efree		2800005	0					
ANR	2801228	Identifier	efree		2800005	0					
ANR	2801229	ArgumentList	buf		2800005	1					
ANR	2801230	Argument	buf		2800005	0					
ANR	2801231	Identifier	buf		2800005	0					
ANR	2801232	IfStatement	if ( allow )		2800005	17					
ANR	2801233	Condition	allow	4949:5:119232:119236	2800005	0	True				
ANR	2801234	Identifier	allow		2800005	0					
ANR	2801235	CompoundStatement		259:12:5174:5174	2800005	1					
ANR	2801236	ExpressionStatement	efree ( tbuf )	4950:2:119243:119254	2800005	0	True				
ANR	2801237	CallExpression	efree ( tbuf )		2800005	0					
ANR	2801238	Callee	efree		2800005	0					
ANR	2801239	Identifier	efree		2800005	0					
ANR	2801240	ArgumentList	tbuf		2800005	1					
ANR	2801241	Argument	tbuf		2800005	0					
ANR	2801242	Identifier	tbuf		2800005	0					
ANR	2801243	IfStatement	if ( allow_free )		2800005	1					
ANR	2801244	Condition	allow_free	4951:6:119262:119271	2800005	0	True				
ANR	2801245	Identifier	allow_free		2800005	0					
ANR	2801246	CompoundStatement		261:18:5209:5209	2800005	1					
ANR	2801247	ExpressionStatement	efree ( allow_free )	4952:3:119279:119296	2800005	0	True				
ANR	2801248	CallExpression	efree ( allow_free )		2800005	0					
ANR	2801249	Callee	efree		2800005	0					
ANR	2801250	Identifier	efree		2800005	0					
ANR	2801251	ArgumentList	allow_free		2800005	1					
ANR	2801252	Argument	allow_free		2800005	0					
ANR	2801253	Identifier	allow_free		2800005	0					
ANR	2801254	IfStatement	if ( stateptr )		2800005	18					
ANR	2801255	Condition	stateptr	4955:5:119310:119317	2800005	0	True				
ANR	2801256	Identifier	stateptr		2800005	0					
ANR	2801257	ExpressionStatement	* stateptr = state	4956:2:119322:119339	2800005	1	True				
ANR	2801258	AssignmentExpression	* stateptr = state		2800005	0		=			
ANR	2801259	UnaryOperationExpression	* stateptr		2800005	0					
ANR	2801260	UnaryOperator	*		2800005	0					
ANR	2801261	Identifier	stateptr		2800005	1					
ANR	2801262	Identifier	state		2800005	1					
ANR	2801263	ReturnStatement	return ( size_t ) ( rp - rbuf ) ;	4958:1:119343:119369	2800005	19	True				
ANR	2801264	CastExpression	( size_t ) ( rp - rbuf )		2800005	0					
ANR	2801265	CastTarget	size_t		2800005	0					
ANR	2801266	AdditiveExpression	rp - rbuf		2800005	1		-			
ANR	2801267	Identifier	rp		2800005	0					
ANR	2801268	Identifier	rbuf		2800005	1					
ANR	2801269	ReturnType	PHPAPI size_t		2800005	1					
ANR	2801270	Identifier	php_strip_tags_ex		2800005	2					
ANR	2801271	ParameterList	"char * rbuf , size_t len , int * stateptr , const char * allow , size_t allow_len , zend_bool allow_tag_spaces"		2800005	3					
ANR	2801272	Parameter	char * rbuf	4690:32:113960:113969	2800005	0	True				
ANR	2801273	ParameterType	char *		2800005	0					
ANR	2801274	Identifier	rbuf		2800005	1					
ANR	2801275	Parameter	size_t len	4690:44:113972:113981	2800005	1	True				
ANR	2801276	ParameterType	size_t		2800005	0					
ANR	2801277	Identifier	len		2800005	1					
ANR	2801278	Parameter	int * stateptr	4690:56:113984:113996	2800005	2	True				
ANR	2801279	ParameterType	int *		2800005	0					
ANR	2801280	Identifier	stateptr		2800005	1					
ANR	2801281	Parameter	const char * allow	4690:71:113999:114015	2800005	3	True				
ANR	2801282	ParameterType	const char *		2800005	0					
ANR	2801283	Identifier	allow		2800005	1					
ANR	2801284	Parameter	size_t allow_len	4690:90:114018:114033	2800005	4	True				
ANR	2801285	ParameterType	size_t		2800005	0					
ANR	2801286	Identifier	allow_len		2800005	1					
ANR	2801287	Parameter	zend_bool allow_tag_spaces	4690:108:114036:114061	2800005	5	True				
ANR	2801288	ParameterType	zend_bool		2800005	0					
ANR	2801289	Identifier	allow_tag_spaces		2800005	1					
ANR	2801290	CFGEntryNode	ENTRY		2800005		True				
ANR	2801291	CFGExitNode	EXIT		2800005		True				
ANR	2801292	Symbol	allow		2800005						
ANR	2801293	Symbol	* ( p - 1 )		2800005						
ANR	2801294	Symbol	* ( p - 2 )		2800005						
ANR	2801295	Symbol	* ( p - 3 )		2800005						
ANR	2801296	Symbol	tolower		2800005						
ANR	2801297	Symbol	* ( p - 4 )		2800005						
ANR	2801298	Symbol	* ( p - 5 )		2800005						
ANR	2801299	Symbol	* ( p - 6 )		2800005						
ANR	2801300	Symbol	strncasecmp		2800005						
ANR	2801301	Symbol	tbuf		2800005						
ANR	2801302	Symbol	* ( tp ++ )		2800005						
ANR	2801303	Symbol	br		2800005						
ANR	2801304	Symbol	estrndup		2800005						
ANR	2801305	Symbol	emalloc		2800005						
ANR	2801306	Symbol	len		2800005						
ANR	2801307	Symbol	allow_tag_spaces		2800005						
ANR	2801308	Symbol	pos		2800005						
ANR	2801309	Symbol	zend_str_tolower_dup_ex		2800005						
ANR	2801310	Symbol	state		2800005						
ANR	2801311	Symbol	* ( rp ++ )		2800005						
ANR	2801312	Symbol	erealloc		2800005						
ANR	2801313	Symbol	* stateptr		2800005						
ANR	2801314	Symbol	* tp		2800005						
ANR	2801315	Symbol	allow_free		2800005						
ANR	2801316	Symbol	* buf		2800005						
ANR	2801317	Symbol	c		2800005						
ANR	2801318	Symbol	NULL		2800005						
ANR	2801319	Symbol	in_q		2800005						
ANR	2801320	Symbol	* rp		2800005						
ANR	2801321	Symbol	isspace		2800005						
ANR	2801322	Symbol	i		2800005						
ANR	2801323	Symbol	* ( p + 1 )		2800005						
ANR	2801324	Symbol	allow_len		2800005						
ANR	2801325	Symbol	stateptr		2800005						
ANR	2801326	Symbol	p		2800005						
ANR	2801327	Symbol	buf		2800005						
ANR	2801328	Symbol	depth		2800005						
ANR	2801329	Symbol	rbuf		2800005						
ANR	2801330	Symbol	PHP_TAG_BUF_SIZE		2800005						
ANR	2801331	Symbol	lc		2800005						
ANR	2801332	Symbol	* ( ++ p )		2800005						
ANR	2801333	Symbol	allow_actual		2800005						
ANR	2801334	Symbol	* p		2800005						
ANR	2801335	Symbol	tp		2800005						
ANR	2801336	Symbol	rp		2800005						
ANR	2801337	Symbol	php_tag_find		2800005						
ANR	2801338	DeclStmt									
ANR	2801339	Decl							zend_string	zend_string *	str
ANR	2801340	DeclStmt									
ANR	2801341	Decl							char	char	delim
ANR	2801342	Decl							char	char	enc
ANR	2801343	Decl							char	char	esc
ANR	2801344	DeclStmt									
ANR	2801345	Decl							char	char *	delim_str
ANR	2801346	Decl							char	char *	enc_str
ANR	2801347	Decl							char	char *	esc_str
ANR	2801348	DeclStmt									
ANR	2801349	Decl							size_t	size_t	delim_len
ANR	2801350	Decl							size_t	size_t	enc_len
ANR	2801351	Decl							size_t	size_t	esc_len
ANR	2801352	DeclStmt									
ANR	2801353	Decl							zend_string	zend_string *	input_str
ANR	2801354	DeclStmt									
ANR	2801355	Decl							zend_long	zend_long	mult
ANR	2801356	DeclStmt									
ANR	2801357	Decl							zend_string	zend_string *	result
ANR	2801358	DeclStmt									
ANR	2801359	Decl							size_t	size_t	result_len
ANR	2801360	DeclStmt									
ANR	2801361	Decl							char	char *	s
ANR	2801362	Decl							char	char *	e
ANR	2801363	Decl							char	char *	ee
ANR	2801364	DeclStmt									
ANR	2801365	Decl							ptrdiff_t	ptrdiff_t	l
ANR	2801366	DeclStmt									
ANR	2801367	Decl							zend_string	zend_string *	input
ANR	2801368	DeclStmt									
ANR	2801369	Decl							int	int [ 256 ]	chars
ANR	2801370	DeclStmt									
ANR	2801371	Decl							zend_long	zend_long	mymode
ANR	2801372	DeclStmt									
ANR	2801373	Decl							unsigned char	unsigned char *	buf
ANR	2801374	DeclStmt									
ANR	2801375	Decl							int	int	inx
ANR	2801376	DeclStmt									
ANR	2801377	Decl							char	char [ 256 ]	retstr
ANR	2801378	DeclStmt									
ANR	2801379	Decl							size_t	size_t	retlen
ANR	2801380	DeclStmt									
ANR	2801381	Decl							size_t	size_t	tmp
ANR	2801382	DeclStmt									
ANR	2801383	Decl							zend_string	zend_string *	s1
ANR	2801384	Decl							zend_string	zend_string *	s2
ANR	2801385	Function	string_natural_compare_function_ex	5120:0:123128:123527							
ANR	2801386	FunctionDef	"string_natural_compare_function_ex (zval * result , zval * op1 , zval * op2 , zend_bool case_insensitive)"		2801385	0					
ANR	2801387	CompoundStatement		5121:0:123248:123527	2801385	0					
ANR	2801388	IdentifierDeclStatement	zend_string * str1 = zval_get_string ( op1 ) ;	5122:1:123251:123291	2801385	0	True				
ANR	2801389	IdentifierDecl	* str1 = zval_get_string ( op1 )		2801385	0					
ANR	2801390	IdentifierDeclType	zend_string *		2801385	0					
ANR	2801391	Identifier	str1		2801385	1					
ANR	2801392	AssignmentExpression	* str1 = zval_get_string ( op1 )		2801385	2		=			
ANR	2801393	Identifier	str1		2801385	0					
ANR	2801394	CallExpression	zval_get_string ( op1 )		2801385	1					
ANR	2801395	Callee	zval_get_string		2801385	0					
ANR	2801396	Identifier	zval_get_string		2801385	0					
ANR	2801397	ArgumentList	op1		2801385	1					
ANR	2801398	Argument	op1		2801385	0					
ANR	2801399	Identifier	op1		2801385	0					
ANR	2801400	IdentifierDeclStatement	zend_string * str2 = zval_get_string ( op2 ) ;	5123:1:123294:123334	2801385	1	True				
ANR	2801401	IdentifierDecl	* str2 = zval_get_string ( op2 )		2801385	0					
ANR	2801402	IdentifierDeclType	zend_string *		2801385	0					
ANR	2801403	Identifier	str2		2801385	1					
ANR	2801404	AssignmentExpression	* str2 = zval_get_string ( op2 )		2801385	2		=			
ANR	2801405	Identifier	str2		2801385	0					
ANR	2801406	CallExpression	zval_get_string ( op2 )		2801385	1					
ANR	2801407	Callee	zval_get_string		2801385	0					
ANR	2801408	Identifier	zval_get_string		2801385	0					
ANR	2801409	ArgumentList	op2		2801385	1					
ANR	2801410	Argument	op2		2801385	0					
ANR	2801411	Identifier	op2		2801385	0					
ANR	2801412	ExpressionStatement	"ZVAL_LONG ( result , strnatcmp_ex ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) , case_insensitive ) )"	5125:1:123338:123451	2801385	2	True				
ANR	2801413	CallExpression	"ZVAL_LONG ( result , strnatcmp_ex ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) , case_insensitive ) )"		2801385	0					
ANR	2801414	Callee	ZVAL_LONG		2801385	0					
ANR	2801415	Identifier	ZVAL_LONG		2801385	0					
ANR	2801416	ArgumentList	result		2801385	1					
ANR	2801417	Argument	result		2801385	0					
ANR	2801418	Identifier	result		2801385	0					
ANR	2801419	Argument	"strnatcmp_ex ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) , case_insensitive )"		2801385	1					
ANR	2801420	CallExpression	"strnatcmp_ex ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) , case_insensitive )"		2801385	0					
ANR	2801421	Callee	strnatcmp_ex		2801385	0					
ANR	2801422	Identifier	strnatcmp_ex		2801385	0					
ANR	2801423	ArgumentList	ZSTR_VAL ( str1 )		2801385	1					
ANR	2801424	Argument	ZSTR_VAL ( str1 )		2801385	0					
ANR	2801425	CallExpression	ZSTR_VAL ( str1 )		2801385	0					
ANR	2801426	Callee	ZSTR_VAL		2801385	0					
ANR	2801427	Identifier	ZSTR_VAL		2801385	0					
ANR	2801428	ArgumentList	str1		2801385	1					
ANR	2801429	Argument	str1		2801385	0					
ANR	2801430	Identifier	str1		2801385	0					
ANR	2801431	Argument	ZSTR_LEN ( str1 )		2801385	1					
ANR	2801432	CallExpression	ZSTR_LEN ( str1 )		2801385	0					
ANR	2801433	Callee	ZSTR_LEN		2801385	0					
ANR	2801434	Identifier	ZSTR_LEN		2801385	0					
ANR	2801435	ArgumentList	str1		2801385	1					
ANR	2801436	Argument	str1		2801385	0					
ANR	2801437	Identifier	str1		2801385	0					
ANR	2801438	Argument	ZSTR_VAL ( str2 )		2801385	2					
ANR	2801439	CallExpression	ZSTR_VAL ( str2 )		2801385	0					
ANR	2801440	Callee	ZSTR_VAL		2801385	0					
ANR	2801441	Identifier	ZSTR_VAL		2801385	0					
ANR	2801442	ArgumentList	str2		2801385	1					
ANR	2801443	Argument	str2		2801385	0					
ANR	2801444	Identifier	str2		2801385	0					
ANR	2801445	Argument	ZSTR_LEN ( str2 )		2801385	3					
ANR	2801446	CallExpression	ZSTR_LEN ( str2 )		2801385	0					
ANR	2801447	Callee	ZSTR_LEN		2801385	0					
ANR	2801448	Identifier	ZSTR_LEN		2801385	0					
ANR	2801449	ArgumentList	str2		2801385	1					
ANR	2801450	Argument	str2		2801385	0					
ANR	2801451	Identifier	str2		2801385	0					
ANR	2801452	Argument	case_insensitive		2801385	4					
ANR	2801453	Identifier	case_insensitive		2801385	0					
ANR	2801454	ExpressionStatement	zend_string_release ( str1 )	5127:1:123455:123480	2801385	3	True				
ANR	2801455	CallExpression	zend_string_release ( str1 )		2801385	0					
ANR	2801456	Callee	zend_string_release		2801385	0					
ANR	2801457	Identifier	zend_string_release		2801385	0					
ANR	2801458	ArgumentList	str1		2801385	1					
ANR	2801459	Argument	str1		2801385	0					
ANR	2801460	Identifier	str1		2801385	0					
ANR	2801461	ExpressionStatement	zend_string_release ( str2 )	5128:1:123483:123508	2801385	4	True				
ANR	2801462	CallExpression	zend_string_release ( str2 )		2801385	0					
ANR	2801463	Callee	zend_string_release		2801385	0					
ANR	2801464	Identifier	zend_string_release		2801385	0					
ANR	2801465	ArgumentList	str2		2801385	1					
ANR	2801466	Argument	str2		2801385	0					
ANR	2801467	Identifier	str2		2801385	0					
ANR	2801468	ReturnStatement	return SUCCESS ;	5129:1:123511:123525	2801385	5	True				
ANR	2801469	Identifier	SUCCESS		2801385	0					
ANR	2801470	ReturnType	PHPAPI int		2801385	1					
ANR	2801471	Identifier	string_natural_compare_function_ex		2801385	2					
ANR	2801472	ParameterList	"zval * result , zval * op1 , zval * op2 , zend_bool case_insensitive"		2801385	3					
ANR	2801473	Parameter	zval * result	5120:46:123174:123185	2801385	0	True				
ANR	2801474	ParameterType	zval *		2801385	0					
ANR	2801475	Identifier	result		2801385	1					
ANR	2801476	Parameter	zval * op1	5120:60:123188:123196	2801385	1	True				
ANR	2801477	ParameterType	zval *		2801385	0					
ANR	2801478	Identifier	op1		2801385	1					
ANR	2801479	Parameter	zval * op2	5120:71:123199:123207	2801385	2	True				
ANR	2801480	ParameterType	zval *		2801385	0					
ANR	2801481	Identifier	op2		2801385	1					
ANR	2801482	Parameter	zend_bool case_insensitive	5120:82:123210:123235	2801385	3	True				
ANR	2801483	ParameterType	zend_bool		2801385	0					
ANR	2801484	Identifier	case_insensitive		2801385	1					
ANR	2801485	CFGEntryNode	ENTRY		2801385		True				
ANR	2801486	CFGExitNode	EXIT		2801385		True				
ANR	2801487	Symbol	result		2801385						
ANR	2801488	Symbol	op2		2801385						
ANR	2801489	Symbol	op1		2801385						
ANR	2801490	Symbol	SUCCESS		2801385						
ANR	2801491	Symbol	case_insensitive		2801385						
ANR	2801492	Symbol	str1		2801385						
ANR	2801493	Symbol	str2		2801385						
ANR	2801494	Symbol	ZSTR_LEN		2801385						
ANR	2801495	Symbol	zval_get_string		2801385						
ANR	2801496	Symbol	ZSTR_VAL		2801385						
ANR	2801497	Symbol	strnatcmp_ex		2801385						
ANR	2801498	Function	string_natural_case_compare_function	5133:0:123540:123701							
ANR	2801499	FunctionDef	"string_natural_case_compare_function (zval * result , zval * op1 , zval * op2)"		2801498	0					
ANR	2801500	CompoundStatement		5134:0:123634:123701	2801498	0					
ANR	2801501	ReturnStatement	"return string_natural_compare_function_ex ( result , op1 , op2 , 1 ) ;"	5135:1:123637:123699	2801498	0	True				
ANR	2801502	CallExpression	"string_natural_compare_function_ex ( result , op1 , op2 , 1 )"		2801498	0					
ANR	2801503	Callee	string_natural_compare_function_ex		2801498	0					
ANR	2801504	Identifier	string_natural_compare_function_ex		2801498	0					
ANR	2801505	ArgumentList	result		2801498	1					
ANR	2801506	Argument	result		2801498	0					
ANR	2801507	Identifier	result		2801498	0					
ANR	2801508	Argument	op1		2801498	1					
ANR	2801509	Identifier	op1		2801498	0					
ANR	2801510	Argument	op2		2801498	2					
ANR	2801511	Identifier	op2		2801498	0					
ANR	2801512	Argument	1		2801498	3					
ANR	2801513	PrimaryExpression	1		2801498	0					
ANR	2801514	ReturnType	PHPAPI int		2801498	1					
ANR	2801515	Identifier	string_natural_case_compare_function		2801498	2					
ANR	2801516	ParameterList	"zval * result , zval * op1 , zval * op2"		2801498	3					
ANR	2801517	Parameter	zval * result	5133:48:123588:123599	2801498	0	True				
ANR	2801518	ParameterType	zval *		2801498	0					
ANR	2801519	Identifier	result		2801498	1					
ANR	2801520	Parameter	zval * op1	5133:62:123602:123610	2801498	1	True				
ANR	2801521	ParameterType	zval *		2801498	0					
ANR	2801522	Identifier	op1		2801498	1					
ANR	2801523	Parameter	zval * op2	5133:73:123613:123621	2801498	2	True				
ANR	2801524	ParameterType	zval *		2801498	0					
ANR	2801525	Identifier	op2		2801498	1					
ANR	2801526	CFGEntryNode	ENTRY		2801498		True				
ANR	2801527	CFGExitNode	EXIT		2801498		True				
ANR	2801528	Symbol	result		2801498						
ANR	2801529	Symbol	op2		2801498						
ANR	2801530	Symbol	op1		2801498						
ANR	2801531	Symbol	string_natural_compare_function_ex		2801498						
ANR	2801532	Function	string_natural_compare_function	5139:0:123714:123870							
ANR	2801533	FunctionDef	"string_natural_compare_function (zval * result , zval * op1 , zval * op2)"		2801532	0					
ANR	2801534	CompoundStatement		5140:0:123803:123870	2801532	0					
ANR	2801535	ReturnStatement	"return string_natural_compare_function_ex ( result , op1 , op2 , 0 ) ;"	5141:1:123806:123868	2801532	0	True				
ANR	2801536	CallExpression	"string_natural_compare_function_ex ( result , op1 , op2 , 0 )"		2801532	0					
ANR	2801537	Callee	string_natural_compare_function_ex		2801532	0					
ANR	2801538	Identifier	string_natural_compare_function_ex		2801532	0					
ANR	2801539	ArgumentList	result		2801532	1					
ANR	2801540	Argument	result		2801532	0					
ANR	2801541	Identifier	result		2801532	0					
ANR	2801542	Argument	op1		2801532	1					
ANR	2801543	Identifier	op1		2801532	0					
ANR	2801544	Argument	op2		2801532	2					
ANR	2801545	Identifier	op2		2801532	0					
ANR	2801546	Argument	0		2801532	3					
ANR	2801547	PrimaryExpression	0		2801532	0					
ANR	2801548	ReturnType	PHPAPI int		2801532	1					
ANR	2801549	Identifier	string_natural_compare_function		2801532	2					
ANR	2801550	ParameterList	"zval * result , zval * op1 , zval * op2"		2801532	3					
ANR	2801551	Parameter	zval * result	5139:43:123757:123768	2801532	0	True				
ANR	2801552	ParameterType	zval *		2801532	0					
ANR	2801553	Identifier	result		2801532	1					
ANR	2801554	Parameter	zval * op1	5139:57:123771:123779	2801532	1	True				
ANR	2801555	ParameterType	zval *		2801532	0					
ANR	2801556	Identifier	op1		2801532	1					
ANR	2801557	Parameter	zval * op2	5139:68:123782:123790	2801532	2	True				
ANR	2801558	ParameterType	zval *		2801532	0					
ANR	2801559	Identifier	op2		2801532	1					
ANR	2801560	CFGEntryNode	ENTRY		2801532		True				
ANR	2801561	CFGExitNode	EXIT		2801532		True				
ANR	2801562	Symbol	result		2801532						
ANR	2801563	Symbol	op2		2801532						
ANR	2801564	Symbol	op1		2801532						
ANR	2801565	Symbol	string_natural_compare_function_ex		2801532						
ANR	2801566	DeclStmt									
ANR	2801567	Decl							zval	zval	grouping
ANR	2801568	Decl							zval	zval	mon_grouping
ANR	2801569	DeclStmt									
ANR	2801570	Decl							int	int	len
ANR	2801571	Decl							int	int	i
ANR	2801572	DeclStmt									
ANR	2801573	Decl							struct lconv	struct lconv	currlocdata
ANR	2801574	DeclStmt									
ANR	2801575	Decl							char	char *	haystack
ANR	2801576	Decl							char	char *	needle
ANR	2801577	DeclStmt									
ANR	2801578	Decl							zend_long	zend_long	offset
ANR	2801579	Decl							zend_long	zend_long	length
ANR	2801580	DeclStmt									
ANR	2801581	Decl							int	int	ac
ANR	2801582	DeclStmt									
ANR	2801583	Decl							int	int	count
ANR	2801584	DeclStmt									
ANR	2801585	Decl							size_t	size_t	haystack_len
ANR	2801586	Decl							size_t	size_t	needle_len
ANR	2801587	DeclStmt									
ANR	2801588	Decl							char	char *	p
ANR	2801589	Decl							char	char *	endp
ANR	2801590	Decl							char	char	cmp
ANR	2801591	DeclStmt									
ANR	2801592	Decl							zend_string	zend_string *	input
ANR	2801593	DeclStmt									
ANR	2801594	Decl							zend_long	zend_long	pad_length
ANR	2801595	DeclStmt									
ANR	2801596	Decl							size_t	size_t	num_pad_chars
ANR	2801597	DeclStmt									
ANR	2801598	Decl							char	char *	pad_str
ANR	2801599	DeclStmt									
ANR	2801600	Decl							size_t	size_t	pad_str_len
ANR	2801601	DeclStmt									
ANR	2801602	Decl							zend_long	zend_long	pad_type_val
ANR	2801603	DeclStmt									
ANR	2801604	Decl							size_t	size_t	i
ANR	2801605	Decl							size_t	size_t	left_pad
ANR	2801606	Decl							size_t	size_t	right_pad
ANR	2801607	DeclStmt									
ANR	2801608	Decl							zend_string	zend_string *	result
ANR	2801609	DeclStmt									
ANR	2801610	Decl							zval	zval *	args
ANR	2801611	DeclStmt									
ANR	2801612	Decl							char	char *	str
ANR	2801613	Decl							char	char *	format
ANR	2801614	DeclStmt									
ANR	2801615	Decl							size_t	size_t	str_len
ANR	2801616	Decl							size_t	size_t	format_len
ANR	2801617	DeclStmt									
ANR	2801618	Decl							int	int	result
ANR	2801619	Decl							int	int	num_args
ANR	2801620	DeclStmt									
ANR	2801621	Decl							char	char [ ]	rot13_from
ANR	2801622	DeclStmt									
ANR	2801623	Decl							char	char [ ]	rot13_to
ANR	2801624	DeclStmt									
ANR	2801625	Decl							zend_string	zend_string *	arg
ANR	2801626	Function	php_string_shuffle	5433:0:132984:133510							
ANR	2801627	FunctionDef	"php_string_shuffle (char * str , zend_long len)"		2801626	0					
ANR	2801628	CompoundStatement		5434:0:133051:133510	2801626	0					
ANR	2801629	IdentifierDeclStatement	"zend_long n_elems , rnd_idx , n_left ;"	5435:1:133054:133088	2801626	0	True				
ANR	2801630	IdentifierDecl	n_elems		2801626	0					
ANR	2801631	IdentifierDeclType	zend_long		2801626	0					
ANR	2801632	Identifier	n_elems		2801626	1					
ANR	2801633	IdentifierDecl	rnd_idx		2801626	1					
ANR	2801634	IdentifierDeclType	zend_long		2801626	0					
ANR	2801635	Identifier	rnd_idx		2801626	1					
ANR	2801636	IdentifierDecl	n_left		2801626	2					
ANR	2801637	IdentifierDeclType	zend_long		2801626	0					
ANR	2801638	Identifier	n_left		2801626	1					
ANR	2801639	IdentifierDeclStatement	char temp ;	5436:1:133091:133100	2801626	1	True				
ANR	2801640	IdentifierDecl	temp		2801626	0					
ANR	2801641	IdentifierDeclType	char		2801626	0					
ANR	2801642	Identifier	temp		2801626	1					
ANR	2801643	ExpressionStatement	n_elems = len	5439:1:133235:133248	2801626	2	True				
ANR	2801644	AssignmentExpression	n_elems = len		2801626	0		=			
ANR	2801645	Identifier	n_elems		2801626	0					
ANR	2801646	Identifier	len		2801626	1					
ANR	2801647	IfStatement	if ( n_elems <= 1 )		2801626	3					
ANR	2801648	Condition	n_elems <= 1	5441:5:133256:133267	2801626	0	True				
ANR	2801649	RelationalExpression	n_elems <= 1		2801626	0		<=			
ANR	2801650	Identifier	n_elems		2801626	0					
ANR	2801651	PrimaryExpression	1		2801626	1					
ANR	2801652	CompoundStatement		8:19:218:218	2801626	1					
ANR	2801653	ReturnStatement	return ;	5442:2:133274:133280	2801626	0	True				
ANR	2801654	ExpressionStatement	n_left = n_elems	5445:1:133287:133303	2801626	4	True				
ANR	2801655	AssignmentExpression	n_left = n_elems		2801626	0		=			
ANR	2801656	Identifier	n_left		2801626	0					
ANR	2801657	Identifier	n_elems		2801626	1					
ANR	2801658	WhileStatement	while ( -- n_left )		2801626	5					
ANR	2801659	Condition	-- n_left	5447:8:133314:133321	2801626	0	True				
ANR	2801660	UnaryExpression	-- n_left		2801626	0					
ANR	2801661	IncDec	--		2801626	0					
ANR	2801662	Identifier	n_left		2801626	1					
ANR	2801663	CompoundStatement		14:18:272:272	2801626	1					
ANR	2801664	ExpressionStatement	rnd_idx = php_rand ( )	5448:2:133328:133348	2801626	0	True				
ANR	2801665	AssignmentExpression	rnd_idx = php_rand ( )		2801626	0		=			
ANR	2801666	Identifier	rnd_idx		2801626	0					
ANR	2801667	CallExpression	php_rand ( )		2801626	1					
ANR	2801668	Callee	php_rand		2801626	0					
ANR	2801669	Identifier	php_rand		2801626	0					
ANR	2801670	ArgumentList			2801626	1					
ANR	2801671	ExpressionStatement	"RAND_RANGE ( rnd_idx , 0 , n_left , PHP_RAND_MAX )"	5449:2:133352:133396	2801626	1	True				
ANR	2801672	CallExpression	"RAND_RANGE ( rnd_idx , 0 , n_left , PHP_RAND_MAX )"		2801626	0					
ANR	2801673	Callee	RAND_RANGE		2801626	0					
ANR	2801674	Identifier	RAND_RANGE		2801626	0					
ANR	2801675	ArgumentList	rnd_idx		2801626	1					
ANR	2801676	Argument	rnd_idx		2801626	0					
ANR	2801677	Identifier	rnd_idx		2801626	0					
ANR	2801678	Argument	0		2801626	1					
ANR	2801679	PrimaryExpression	0		2801626	0					
ANR	2801680	Argument	n_left		2801626	2					
ANR	2801681	Identifier	n_left		2801626	0					
ANR	2801682	Argument	PHP_RAND_MAX		2801626	3					
ANR	2801683	Identifier	PHP_RAND_MAX		2801626	0					
ANR	2801684	IfStatement	if ( rnd_idx != n_left )		2801626	2					
ANR	2801685	Condition	rnd_idx != n_left	5450:6:133404:133420	2801626	0	True				
ANR	2801686	EqualityExpression	rnd_idx != n_left		2801626	0		!=			
ANR	2801687	Identifier	rnd_idx		2801626	0					
ANR	2801688	Identifier	n_left		2801626	1					
ANR	2801689	CompoundStatement		17:25:371:371	2801626	1					
ANR	2801690	ExpressionStatement	temp = str [ n_left ]	5451:3:133428:133446	2801626	0	True				
ANR	2801691	AssignmentExpression	temp = str [ n_left ]		2801626	0		=			
ANR	2801692	Identifier	temp		2801626	0					
ANR	2801693	ArrayIndexing	str [ n_left ]		2801626	1					
ANR	2801694	Identifier	str		2801626	0					
ANR	2801695	Identifier	n_left		2801626	1					
ANR	2801696	ExpressionStatement	str [ n_left ] = str [ rnd_idx ]	5452:3:133451:133477	2801626	1	True				
ANR	2801697	AssignmentExpression	str [ n_left ] = str [ rnd_idx ]		2801626	0		=			
ANR	2801698	ArrayIndexing	str [ n_left ]		2801626	0					
ANR	2801699	Identifier	str		2801626	0					
ANR	2801700	Identifier	n_left		2801626	1					
ANR	2801701	ArrayIndexing	str [ rnd_idx ]		2801626	1					
ANR	2801702	Identifier	str		2801626	0					
ANR	2801703	Identifier	rnd_idx		2801626	1					
ANR	2801704	ExpressionStatement	str [ rnd_idx ] = temp	5453:3:133482:133501	2801626	2	True				
ANR	2801705	AssignmentExpression	str [ rnd_idx ] = temp		2801626	0		=			
ANR	2801706	ArrayIndexing	str [ rnd_idx ]		2801626	0					
ANR	2801707	Identifier	str		2801626	0					
ANR	2801708	Identifier	rnd_idx		2801626	1					
ANR	2801709	Identifier	temp		2801626	1					
ANR	2801710	ReturnType	static void		2801626	1					
ANR	2801711	Identifier	php_string_shuffle		2801626	2					
ANR	2801712	ParameterList	"char * str , zend_long len"		2801626	3					
ANR	2801713	Parameter	char * str	5433:31:133015:133023	2801626	0	True				
ANR	2801714	ParameterType	char *		2801626	0					
ANR	2801715	Identifier	str		2801626	1					
ANR	2801716	Parameter	zend_long len	5433:42:133026:133038	2801626	1	True				
ANR	2801717	ParameterType	zend_long		2801626	0					
ANR	2801718	Identifier	len		2801626	1					
ANR	2801719	CFGEntryNode	ENTRY		2801626		True				
ANR	2801720	CFGExitNode	EXIT		2801626		True				
ANR	2801721	Symbol	str		2801626						
ANR	2801722	Symbol	temp		2801626						
ANR	2801723	Symbol	len		2801626						
ANR	2801724	Symbol	* n_left		2801626						
ANR	2801725	Symbol	php_rand		2801626						
ANR	2801726	Symbol	n_elems		2801626						
ANR	2801727	Symbol	PHP_RAND_MAX		2801626						
ANR	2801728	Symbol	* rnd_idx		2801626						
ANR	2801729	Symbol	n_left		2801626						
ANR	2801730	Symbol	* str		2801626						
ANR	2801731	Symbol	rnd_idx		2801626						
ANR	2801732	DeclStmt									
ANR	2801733	Decl							zend_string	zend_string *	arg
ANR	2801734	DeclStmt									
ANR	2801735	Decl							zend_string	zend_string *	str
ANR	2801736	DeclStmt									
ANR	2801737	Decl							char	char *	char_list
ANR	2801738	Decl							char	char *	p
ANR	2801739	Decl							char	char *	e
ANR	2801740	Decl							char	char *	s
ANR	2801741	Decl							char	char [ 256 ]	ch
ANR	2801742	DeclStmt									
ANR	2801743	Decl							size_t	size_t	char_list_len
ANR	2801744	Decl							size_t	size_t	word_count
ANR	2801745	DeclStmt									
ANR	2801746	Decl							zend_long	zend_long	type
ANR	2801747	DeclStmt									
ANR	2801748	Decl							size_t	size_t	format_len
ANR	2801749	DeclStmt									
ANR	2801750	Decl							char	char *	format
ANR	2801751	Decl							char	char *	p
ANR	2801752	Decl							char	char *	e
ANR	2801753	DeclStmt									
ANR	2801754	Decl							double	double	value
ANR	2801755	DeclStmt									
ANR	2801756	Decl							zend_bool	zend_bool	check
ANR	2801757	DeclStmt									
ANR	2801758	Decl							zend_string	zend_string *	str
ANR	2801759	DeclStmt									
ANR	2801760	Decl							ssize_t	ssize_t	res_len
ANR	2801761	DeclStmt									
ANR	2801762	Decl							zend_string	zend_string *	str
ANR	2801763	DeclStmt									
ANR	2801764	Decl							zend_long	zend_long	split_length
ANR	2801765	DeclStmt									
ANR	2801766	Decl							char	char *	p
ANR	2801767	DeclStmt									
ANR	2801768	Decl							size_t	size_t	n_reg_segments
ANR	2801769	DeclStmt									
ANR	2801770	Decl							zend_string	zend_string *	haystack
ANR	2801771	Decl							zend_string	zend_string *	char_list
ANR	2801772	DeclStmt									
ANR	2801773	Decl							char	char *	haystack_ptr
ANR	2801774	Decl							char	char *	cl_ptr
ANR	2801775	DeclStmt									
ANR	2801776	Decl							zend_string	zend_string *	s1
ANR	2801777	Decl							zend_string	zend_string *	s2
ANR	2801778	DeclStmt									
ANR	2801779	Decl							zend_long	zend_long	offset
ANR	2801780	Decl							zend_long	zend_long	len
ANR	2801781	DeclStmt									
ANR	2801782	Decl							zend_bool	zend_bool	cs
ANR	2801783	DeclStmt									
ANR	2801784	Decl							size_t	size_t	cmp_len
