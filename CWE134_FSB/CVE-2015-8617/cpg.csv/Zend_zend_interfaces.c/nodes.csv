command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	248692	File	data/converged/CVE-2015-8617_php-src/Zend_zend_interfaces.c								
ANR	248693	DeclStmt									
ANR	248694	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_traversable
ANR	248695	DeclStmt									
ANR	248696	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_aggregate
ANR	248697	DeclStmt									
ANR	248698	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_iterator
ANR	248699	DeclStmt									
ANR	248700	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_arrayaccess
ANR	248701	DeclStmt									
ANR	248702	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_serializable
ANR	248703	Function	zend_call_method	34:0:1576:4578							
ANR	248704	FunctionDef	"zend_call_method (zval * object , zend_class_entry * obj_ce , zend_function * * fn_proxy , const char * function_name , size_t function_name_len , zval * retval_ptr , int param_count , zval * arg1 , zval * arg2)"		248703	0					
ANR	248705	CompoundStatement		35:0:1786:4578	248703	0					
ANR	248706	IdentifierDeclStatement	int result ;	36:1:1789:1799	248703	0	True				
ANR	248707	IdentifierDecl	result		248703	0					
ANR	248708	IdentifierDeclType	int		248703	0					
ANR	248709	Identifier	result		248703	1					
ANR	248710	IdentifierDeclStatement	zend_fcall_info fci ;	37:1:1802:1821	248703	1	True				
ANR	248711	IdentifierDecl	fci		248703	0					
ANR	248712	IdentifierDeclType	zend_fcall_info		248703	0					
ANR	248713	Identifier	fci		248703	1					
ANR	248714	IdentifierDeclStatement	zval retval ;	38:1:1824:1835	248703	2	True				
ANR	248715	IdentifierDecl	retval		248703	0					
ANR	248716	IdentifierDeclType	zval		248703	0					
ANR	248717	Identifier	retval		248703	1					
ANR	248718	IdentifierDeclStatement	HashTable * function_table ;	39:1:1838:1863	248703	3	True				
ANR	248719	IdentifierDecl	* function_table		248703	0					
ANR	248720	IdentifierDeclType	HashTable *		248703	0					
ANR	248721	Identifier	function_table		248703	1					
ANR	248722	IdentifierDeclStatement	zval params [ 2 ] ;	41:1:1867:1881	248703	4	True				
ANR	248723	IdentifierDecl	params [ 2 ]		248703	0					
ANR	248724	IdentifierDeclType	zval [ 2 ]		248703	0					
ANR	248725	Identifier	params		248703	1					
ANR	248726	PrimaryExpression	2		248703	2					
ANR	248727	IfStatement	if ( param_count > 0 )		248703	5					
ANR	248728	Condition	param_count > 0	43:5:1889:1903	248703	0	True				
ANR	248729	RelationalExpression	param_count > 0		248703	0		>			
ANR	248730	Identifier	param_count		248703	0					
ANR	248731	PrimaryExpression	0		248703	1					
ANR	248732	CompoundStatement		9:22:119:119	248703	1					
ANR	248733	ExpressionStatement	"ZVAL_COPY_VALUE ( & params [ 0 ] , arg1 )"	44:2:1910:1943	248703	0	True				
ANR	248734	CallExpression	"ZVAL_COPY_VALUE ( & params [ 0 ] , arg1 )"		248703	0					
ANR	248735	Callee	ZVAL_COPY_VALUE		248703	0					
ANR	248736	Identifier	ZVAL_COPY_VALUE		248703	0					
ANR	248737	ArgumentList	& params [ 0 ]		248703	1					
ANR	248738	Argument	& params [ 0 ]		248703	0					
ANR	248739	UnaryOperationExpression	& params [ 0 ]		248703	0					
ANR	248740	UnaryOperator	&		248703	0					
ANR	248741	ArrayIndexing	params [ 0 ]		248703	1					
ANR	248742	Identifier	params		248703	0					
ANR	248743	PrimaryExpression	0		248703	1					
ANR	248744	Argument	arg1		248703	1					
ANR	248745	Identifier	arg1		248703	0					
ANR	248746	IfStatement	if ( param_count > 1 )		248703	6					
ANR	248747	Condition	param_count > 1	46:5:1953:1967	248703	0	True				
ANR	248748	RelationalExpression	param_count > 1		248703	0		>			
ANR	248749	Identifier	param_count		248703	0					
ANR	248750	PrimaryExpression	1		248703	1					
ANR	248751	CompoundStatement		12:22:183:183	248703	1					
ANR	248752	ExpressionStatement	"ZVAL_COPY_VALUE ( & params [ 1 ] , arg2 )"	47:2:1974:2007	248703	0	True				
ANR	248753	CallExpression	"ZVAL_COPY_VALUE ( & params [ 1 ] , arg2 )"		248703	0					
ANR	248754	Callee	ZVAL_COPY_VALUE		248703	0					
ANR	248755	Identifier	ZVAL_COPY_VALUE		248703	0					
ANR	248756	ArgumentList	& params [ 1 ]		248703	1					
ANR	248757	Argument	& params [ 1 ]		248703	0					
ANR	248758	UnaryOperationExpression	& params [ 1 ]		248703	0					
ANR	248759	UnaryOperator	&		248703	0					
ANR	248760	ArrayIndexing	params [ 1 ]		248703	1					
ANR	248761	Identifier	params		248703	0					
ANR	248762	PrimaryExpression	1		248703	1					
ANR	248763	Argument	arg2		248703	1					
ANR	248764	Identifier	arg2		248703	0					
ANR	248765	ExpressionStatement	fci . size = sizeof ( fci )	50:1:2014:2036	248703	7	True				
ANR	248766	AssignmentExpression	fci . size = sizeof ( fci )		248703	0		=			
ANR	248767	MemberAccess	fci . size		248703	0					
ANR	248768	Identifier	fci		248703	0					
ANR	248769	Identifier	size		248703	1					
ANR	248770	SizeofExpression	sizeof ( fci )		248703	1					
ANR	248771	Sizeof	sizeof		248703	0					
ANR	248772	SizeofOperand	fci		248703	1					
ANR	248773	ExpressionStatement	fci . object = ( object && Z_TYPE_P ( object ) == IS_OBJECT ) ? Z_OBJ_P ( object ) : NULL	52:1:2127:2206	248703	8	True				
ANR	248774	AssignmentExpression	fci . object = ( object && Z_TYPE_P ( object ) == IS_OBJECT ) ? Z_OBJ_P ( object ) : NULL		248703	0		=			
ANR	248775	MemberAccess	fci . object		248703	0					
ANR	248776	Identifier	fci		248703	0					
ANR	248777	Identifier	object		248703	1					
ANR	248778	ConditionalExpression	( object && Z_TYPE_P ( object ) == IS_OBJECT ) ? Z_OBJ_P ( object ) : NULL		248703	1					
ANR	248779	Condition	object && Z_TYPE_P ( object ) == IS_OBJECT		248703	0					
ANR	248780	AndExpression	object && Z_TYPE_P ( object ) == IS_OBJECT		248703	0		&&			
ANR	248781	Identifier	object		248703	0					
ANR	248782	EqualityExpression	Z_TYPE_P ( object ) == IS_OBJECT		248703	1		==			
ANR	248783	CallExpression	Z_TYPE_P ( object )		248703	0					
ANR	248784	Callee	Z_TYPE_P		248703	0					
ANR	248785	Identifier	Z_TYPE_P		248703	0					
ANR	248786	ArgumentList	object		248703	1					
ANR	248787	Argument	object		248703	0					
ANR	248788	Identifier	object		248703	0					
ANR	248789	Identifier	IS_OBJECT		248703	1					
ANR	248790	CallExpression	Z_OBJ_P ( object )		248703	1					
ANR	248791	Callee	Z_OBJ_P		248703	0					
ANR	248792	Identifier	Z_OBJ_P		248703	0					
ANR	248793	ArgumentList	object		248703	1					
ANR	248794	Argument	object		248703	0					
ANR	248795	Identifier	object		248703	0					
ANR	248796	Identifier	NULL		248703	2					
ANR	248797	ExpressionStatement	"ZVAL_STRINGL ( & fci . function_name , function_name , function_name_len )"	53:1:2209:2275	248703	9	True				
ANR	248798	CallExpression	"ZVAL_STRINGL ( & fci . function_name , function_name , function_name_len )"		248703	0					
ANR	248799	Callee	ZVAL_STRINGL		248703	0					
ANR	248800	Identifier	ZVAL_STRINGL		248703	0					
ANR	248801	ArgumentList	& fci . function_name		248703	1					
ANR	248802	Argument	& fci . function_name		248703	0					
ANR	248803	UnaryOperationExpression	& fci . function_name		248703	0					
ANR	248804	UnaryOperator	&		248703	0					
ANR	248805	MemberAccess	fci . function_name		248703	1					
ANR	248806	Identifier	fci		248703	0					
ANR	248807	Identifier	function_name		248703	1					
ANR	248808	Argument	function_name		248703	1					
ANR	248809	Identifier	function_name		248703	0					
ANR	248810	Argument	function_name_len		248703	2					
ANR	248811	Identifier	function_name_len		248703	0					
ANR	248812	ExpressionStatement	fci . retval = retval_ptr ? retval_ptr : & retval	54:1:2278:2324	248703	10	True				
ANR	248813	AssignmentExpression	fci . retval = retval_ptr ? retval_ptr : & retval		248703	0		=			
ANR	248814	MemberAccess	fci . retval		248703	0					
ANR	248815	Identifier	fci		248703	0					
ANR	248816	Identifier	retval		248703	1					
ANR	248817	ConditionalExpression	retval_ptr ? retval_ptr : & retval		248703	1					
ANR	248818	Condition	retval_ptr		248703	0					
ANR	248819	Identifier	retval_ptr		248703	0					
ANR	248820	Identifier	retval_ptr		248703	1					
ANR	248821	UnaryOperationExpression	& retval		248703	2					
ANR	248822	UnaryOperator	&		248703	0					
ANR	248823	Identifier	retval		248703	1					
ANR	248824	ExpressionStatement	fci . param_count = param_count	55:1:2327:2356	248703	11	True				
ANR	248825	AssignmentExpression	fci . param_count = param_count		248703	0		=			
ANR	248826	MemberAccess	fci . param_count		248703	0					
ANR	248827	Identifier	fci		248703	0					
ANR	248828	Identifier	param_count		248703	1					
ANR	248829	Identifier	param_count		248703	1					
ANR	248830	ExpressionStatement	fci . params = params	56:1:2359:2378	248703	12	True				
ANR	248831	AssignmentExpression	fci . params = params		248703	0		=			
ANR	248832	MemberAccess	fci . params		248703	0					
ANR	248833	Identifier	fci		248703	0					
ANR	248834	Identifier	params		248703	1					
ANR	248835	Identifier	params		248703	1					
ANR	248836	ExpressionStatement	fci . no_separation = 1	57:1:2381:2402	248703	13	True				
ANR	248837	AssignmentExpression	fci . no_separation = 1		248703	0		=			
ANR	248838	MemberAccess	fci . no_separation		248703	0					
ANR	248839	Identifier	fci		248703	0					
ANR	248840	Identifier	no_separation		248703	1					
ANR	248841	PrimaryExpression	1		248703	1					
ANR	248842	ExpressionStatement	fci . symbol_table = NULL	58:1:2405:2428	248703	14	True				
ANR	248843	AssignmentExpression	fci . symbol_table = NULL		248703	0		=			
ANR	248844	MemberAccess	fci . symbol_table		248703	0					
ANR	248845	Identifier	fci		248703	0					
ANR	248846	Identifier	symbol_table		248703	1					
ANR	248847	Identifier	NULL		248703	1					
ANR	248848	IfStatement	if ( ! fn_proxy && ! obj_ce )		248703	15					
ANR	248849	Condition	! fn_proxy && ! obj_ce	60:5:2436:2455	248703	0	True				
ANR	248850	AndExpression	! fn_proxy && ! obj_ce		248703	0		&&			
ANR	248851	UnaryOperationExpression	! fn_proxy		248703	0					
ANR	248852	UnaryOperator	!		248703	0					
ANR	248853	Identifier	fn_proxy		248703	1					
ANR	248854	UnaryOperationExpression	! obj_ce		248703	1					
ANR	248855	UnaryOperator	!		248703	0					
ANR	248856	Identifier	obj_ce		248703	1					
ANR	248857	CompoundStatement		26:27:671:671	248703	1					
ANR	248858	ExpressionStatement	fci . function_table = ! object ? EG ( function_table ) : NULL	63:2:2581:2637	248703	0	True				
ANR	248859	AssignmentExpression	fci . function_table = ! object ? EG ( function_table ) : NULL		248703	0		=			
ANR	248860	MemberAccess	fci . function_table		248703	0					
ANR	248861	Identifier	fci		248703	0					
ANR	248862	Identifier	function_table		248703	1					
ANR	248863	ConditionalExpression	! object ? EG ( function_table ) : NULL		248703	1					
ANR	248864	Condition	! object		248703	0					
ANR	248865	UnaryOperationExpression	! object		248703	0					
ANR	248866	UnaryOperator	!		248703	0					
ANR	248867	Identifier	object		248703	1					
ANR	248868	CallExpression	EG ( function_table )		248703	1					
ANR	248869	Callee	EG		248703	0					
ANR	248870	Identifier	EG		248703	0					
ANR	248871	ArgumentList	function_table		248703	1					
ANR	248872	Argument	function_table		248703	0					
ANR	248873	Identifier	function_table		248703	0					
ANR	248874	Identifier	NULL		248703	2					
ANR	248875	ExpressionStatement	"result = zend_call_function ( & fci , NULL )"	64:2:2641:2680	248703	1	True				
ANR	248876	AssignmentExpression	"result = zend_call_function ( & fci , NULL )"		248703	0		=			
ANR	248877	Identifier	result		248703	0					
ANR	248878	CallExpression	"zend_call_function ( & fci , NULL )"		248703	1					
ANR	248879	Callee	zend_call_function		248703	0					
ANR	248880	Identifier	zend_call_function		248703	0					
ANR	248881	ArgumentList	& fci		248703	1					
ANR	248882	Argument	& fci		248703	0					
ANR	248883	UnaryOperationExpression	& fci		248703	0					
ANR	248884	UnaryOperator	&		248703	0					
ANR	248885	Identifier	fci		248703	1					
ANR	248886	Argument	NULL		248703	1					
ANR	248887	Identifier	NULL		248703	0					
ANR	248888	ExpressionStatement	zval_ptr_dtor ( & fci . function_name )	65:2:2684:2717	248703	2	True				
ANR	248889	CallExpression	zval_ptr_dtor ( & fci . function_name )		248703	0					
ANR	248890	Callee	zval_ptr_dtor		248703	0					
ANR	248891	Identifier	zval_ptr_dtor		248703	0					
ANR	248892	ArgumentList	& fci . function_name		248703	1					
ANR	248893	Argument	& fci . function_name		248703	0					
ANR	248894	UnaryOperationExpression	& fci . function_name		248703	0					
ANR	248895	UnaryOperator	&		248703	0					
ANR	248896	MemberAccess	fci . function_name		248703	1					
ANR	248897	Identifier	fci		248703	0					
ANR	248898	Identifier	function_name		248703	1					
ANR	248899	ElseStatement	else		248703	0					
ANR	248900	CompoundStatement		33:2:944:970	248703	0					
ANR	248901	IdentifierDeclStatement	zend_fcall_info_cache fcic ;	67:2:2731:2757	248703	0	True				
ANR	248902	IdentifierDecl	fcic		248703	0					
ANR	248903	IdentifierDeclType	zend_fcall_info_cache		248703	0					
ANR	248904	Identifier	fcic		248703	1					
ANR	248905	ExpressionStatement	fcic . initialized = 1	69:2:2762:2782	248703	1	True				
ANR	248906	AssignmentExpression	fcic . initialized = 1		248703	0		=			
ANR	248907	MemberAccess	fcic . initialized		248703	0					
ANR	248908	Identifier	fcic		248703	0					
ANR	248909	Identifier	initialized		248703	1					
ANR	248910	PrimaryExpression	1		248703	1					
ANR	248911	IfStatement	if ( ! obj_ce )		248703	2					
ANR	248912	Condition	! obj_ce	70:6:2790:2796	248703	0	True				
ANR	248913	UnaryOperationExpression	! obj_ce		248703	0					
ANR	248914	UnaryOperator	!		248703	0					
ANR	248915	Identifier	obj_ce		248703	1					
ANR	248916	CompoundStatement		36:15:1012:1012	248703	1					
ANR	248917	ExpressionStatement	obj_ce = object ? Z_OBJCE_P ( object ) : NULL	71:3:2804:2846	248703	0	True				
ANR	248918	AssignmentExpression	obj_ce = object ? Z_OBJCE_P ( object ) : NULL		248703	0		=			
ANR	248919	Identifier	obj_ce		248703	0					
ANR	248920	ConditionalExpression	object ? Z_OBJCE_P ( object ) : NULL		248703	1					
ANR	248921	Condition	object		248703	0					
ANR	248922	Identifier	object		248703	0					
ANR	248923	CallExpression	Z_OBJCE_P ( object )		248703	1					
ANR	248924	Callee	Z_OBJCE_P		248703	0					
ANR	248925	Identifier	Z_OBJCE_P		248703	0					
ANR	248926	ArgumentList	object		248703	1					
ANR	248927	Argument	object		248703	0					
ANR	248928	Identifier	object		248703	0					
ANR	248929	Identifier	NULL		248703	2					
ANR	248930	IfStatement	if ( obj_ce )		248703	3					
ANR	248931	Condition	obj_ce	73:6:2858:2863	248703	0	True				
ANR	248932	Identifier	obj_ce		248703	0					
ANR	248933	CompoundStatement		39:14:1079:1079	248703	1					
ANR	248934	ExpressionStatement	function_table = & obj_ce -> function_table	74:3:2871:2911	248703	0	True				
ANR	248935	AssignmentExpression	function_table = & obj_ce -> function_table		248703	0		=			
ANR	248936	Identifier	function_table		248703	0					
ANR	248937	UnaryOperationExpression	& obj_ce -> function_table		248703	1					
ANR	248938	UnaryOperator	&		248703	0					
ANR	248939	PtrMemberAccess	obj_ce -> function_table		248703	1					
ANR	248940	Identifier	obj_ce		248703	0					
ANR	248941	Identifier	function_table		248703	1					
ANR	248942	ElseStatement	else		248703	0					
ANR	248943	CompoundStatement		41:9:1135:1135	248703	0					
ANR	248944	ExpressionStatement	function_table = EG ( function_table )	76:3:2927:2962	248703	0	True				
ANR	248945	AssignmentExpression	function_table = EG ( function_table )		248703	0		=			
ANR	248946	Identifier	function_table		248703	0					
ANR	248947	CallExpression	EG ( function_table )		248703	1					
ANR	248948	Callee	EG		248703	0					
ANR	248949	Identifier	EG		248703	0					
ANR	248950	ArgumentList	function_table		248703	1					
ANR	248951	Argument	function_table		248703	0					
ANR	248952	Identifier	function_table		248703	0					
ANR	248953	IfStatement	if ( ! fn_proxy || ! * fn_proxy )		248703	4					
ANR	248954	Condition	! fn_proxy || ! * fn_proxy	78:6:2974:2996	248703	0	True				
ANR	248955	OrExpression	! fn_proxy || ! * fn_proxy		248703	0		||			
ANR	248956	UnaryOperationExpression	! fn_proxy		248703	0					
ANR	248957	UnaryOperator	!		248703	0					
ANR	248958	Identifier	fn_proxy		248703	1					
ANR	248959	UnaryOperationExpression	! * fn_proxy		248703	1					
ANR	248960	UnaryOperator	!		248703	0					
ANR	248961	UnaryOperationExpression	* fn_proxy		248703	1					
ANR	248962	UnaryOperator	*		248703	0					
ANR	248963	Identifier	fn_proxy		248703	1					
ANR	248964	CompoundStatement		44:31:1212:1212	248703	1					
ANR	248965	IfStatement	"if ( ( fcic . function_handler = zend_hash_find_ptr ( function_table , Z_STR ( fci . function_name ) ) ) == NULL )"		248703	0					
ANR	248966	Condition	"( fcic . function_handler = zend_hash_find_ptr ( function_table , Z_STR ( fci . function_name ) ) ) == NULL"	79:7:3008:3101	248703	0	True				
ANR	248967	EqualityExpression	"( fcic . function_handler = zend_hash_find_ptr ( function_table , Z_STR ( fci . function_name ) ) ) == NULL"		248703	0		==			
ANR	248968	AssignmentExpression	"fcic . function_handler = zend_hash_find_ptr ( function_table , Z_STR ( fci . function_name ) )"		248703	0		=			
ANR	248969	MemberAccess	fcic . function_handler		248703	0					
ANR	248970	Identifier	fcic		248703	0					
ANR	248971	Identifier	function_handler		248703	1					
ANR	248972	CallExpression	"zend_hash_find_ptr ( function_table , Z_STR ( fci . function_name ) )"		248703	1					
ANR	248973	Callee	zend_hash_find_ptr		248703	0					
ANR	248974	Identifier	zend_hash_find_ptr		248703	0					
ANR	248975	ArgumentList	function_table		248703	1					
ANR	248976	Argument	function_table		248703	0					
ANR	248977	Identifier	function_table		248703	0					
ANR	248978	Argument	Z_STR ( fci . function_name )		248703	1					
ANR	248979	CallExpression	Z_STR ( fci . function_name )		248703	0					
ANR	248980	Callee	Z_STR		248703	0					
ANR	248981	Identifier	Z_STR		248703	0					
ANR	248982	ArgumentList	fci . function_name		248703	1					
ANR	248983	Argument	fci . function_name		248703	0					
ANR	248984	MemberAccess	fci . function_name		248703	0					
ANR	248985	Identifier	fci		248703	0					
ANR	248986	Identifier	function_name		248703	1					
ANR	248987	Identifier	NULL		248703	1					
ANR	248988	CompoundStatement		45:103:1317:1317	248703	1					
ANR	248989	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Couldn't find implementation for method %s%s%s"" , obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """" , obj_ce ? ""::"" : """" , function_name )"	81:4:3137:3293	248703	0	True				
ANR	248990	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Couldn't find implementation for method %s%s%s"" , obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """" , obj_ce ? ""::"" : """" , function_name )"		248703	0					
ANR	248991	Callee	zend_error_noreturn		248703	0					
ANR	248992	Identifier	zend_error_noreturn		248703	0					
ANR	248993	ArgumentList	E_CORE_ERROR		248703	1					
ANR	248994	Argument	E_CORE_ERROR		248703	0					
ANR	248995	Identifier	E_CORE_ERROR		248703	0					
ANR	248996	Argument	"""Couldn't find implementation for method %s%s%s"""		248703	1					
ANR	248997	PrimaryExpression	"""Couldn't find implementation for method %s%s%s"""		248703	0					
ANR	248998	Argument	"obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """""		248703	2					
ANR	248999	ConditionalExpression	"obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """""		248703	0					
ANR	249000	Condition	obj_ce		248703	0					
ANR	249001	Identifier	obj_ce		248703	0					
ANR	249002	CallExpression	ZSTR_VAL ( obj_ce -> name )		248703	1					
ANR	249003	Callee	ZSTR_VAL		248703	0					
ANR	249004	Identifier	ZSTR_VAL		248703	0					
ANR	249005	ArgumentList	obj_ce -> name		248703	1					
ANR	249006	Argument	obj_ce -> name		248703	0					
ANR	249007	PtrMemberAccess	obj_ce -> name		248703	0					
ANR	249008	Identifier	obj_ce		248703	0					
ANR	249009	Identifier	name		248703	1					
ANR	249010	PrimaryExpression	""""""		248703	2					
ANR	249011	Argument	"obj_ce ? ""::"" : """""		248703	3					
ANR	249012	ConditionalExpression	"obj_ce ? ""::"" : """""		248703	0					
ANR	249013	Condition	obj_ce		248703	0					
ANR	249014	Identifier	obj_ce		248703	0					
ANR	249015	PrimaryExpression	"""::"""		248703	1					
ANR	249016	PrimaryExpression	""""""		248703	2					
ANR	249017	Argument	function_name		248703	4					
ANR	249018	Identifier	function_name		248703	0					
ANR	249019	IfStatement	if ( fn_proxy )		248703	1					
ANR	249020	Condition	fn_proxy	83:7:3307:3314	248703	0	True				
ANR	249021	Identifier	fn_proxy		248703	0					
ANR	249022	CompoundStatement		49:17:1530:1530	248703	1					
ANR	249023	ExpressionStatement	* fn_proxy = fcic . function_handler	84:4:3323:3356	248703	0	True				
ANR	249024	AssignmentExpression	* fn_proxy = fcic . function_handler		248703	0		=			
ANR	249025	UnaryOperationExpression	* fn_proxy		248703	0					
ANR	249026	UnaryOperator	*		248703	0					
ANR	249027	Identifier	fn_proxy		248703	1					
ANR	249028	MemberAccess	fcic . function_handler		248703	1					
ANR	249029	Identifier	fcic		248703	0					
ANR	249030	Identifier	function_handler		248703	1					
ANR	249031	ElseStatement	else		248703	0					
ANR	249032	CompoundStatement		52:9:1585:1585	248703	0					
ANR	249033	ExpressionStatement	fcic . function_handler = * fn_proxy	87:3:3377:3410	248703	0	True				
ANR	249034	AssignmentExpression	fcic . function_handler = * fn_proxy		248703	0		=			
ANR	249035	MemberAccess	fcic . function_handler		248703	0					
ANR	249036	Identifier	fcic		248703	0					
ANR	249037	Identifier	function_handler		248703	1					
ANR	249038	UnaryOperationExpression	* fn_proxy		248703	1					
ANR	249039	UnaryOperator	*		248703	0					
ANR	249040	Identifier	fn_proxy		248703	1					
ANR	249041	ExpressionStatement	fcic . calling_scope = obj_ce	89:2:3418:3445	248703	5	True				
ANR	249042	AssignmentExpression	fcic . calling_scope = obj_ce		248703	0		=			
ANR	249043	MemberAccess	fcic . calling_scope		248703	0					
ANR	249044	Identifier	fcic		248703	0					
ANR	249045	Identifier	calling_scope		248703	1					
ANR	249046	Identifier	obj_ce		248703	1					
ANR	249047	IfStatement	if ( object )		248703	6					
ANR	249048	Condition	object	90:6:3453:3458	248703	0	True				
ANR	249049	Identifier	object		248703	0					
ANR	249050	CompoundStatement		56:14:1674:1674	248703	1					
ANR	249051	ExpressionStatement	fcic . called_scope = Z_OBJCE_P ( object )	91:3:3466:3503	248703	0	True				
ANR	249052	AssignmentExpression	fcic . called_scope = Z_OBJCE_P ( object )		248703	0		=			
ANR	249053	MemberAccess	fcic . called_scope		248703	0					
ANR	249054	Identifier	fcic		248703	0					
ANR	249055	Identifier	called_scope		248703	1					
ANR	249056	CallExpression	Z_OBJCE_P ( object )		248703	1					
ANR	249057	Callee	Z_OBJCE_P		248703	0					
ANR	249058	Identifier	Z_OBJCE_P		248703	0					
ANR	249059	ArgumentList	object		248703	1					
ANR	249060	Argument	object		248703	0					
ANR	249061	Identifier	object		248703	0					
ANR	249062	ElseStatement	else		248703	0					
ANR	249063	CompoundStatement		59:3:1732:1812	248703	0					
ANR	249064	IdentifierDeclStatement	zend_class_entry * called_scope = zend_get_called_scope ( EG ( current_execute_data ) ) ;	93:3:3519:3599	248703	0	True				
ANR	249065	IdentifierDecl	* called_scope = zend_get_called_scope ( EG ( current_execute_data ) )		248703	0					
ANR	249066	IdentifierDeclType	zend_class_entry *		248703	0					
ANR	249067	Identifier	called_scope		248703	1					
ANR	249068	AssignmentExpression	* called_scope = zend_get_called_scope ( EG ( current_execute_data ) )		248703	2		=			
ANR	249069	Identifier	called_scope		248703	0					
ANR	249070	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		248703	1					
ANR	249071	Callee	zend_get_called_scope		248703	0					
ANR	249072	Identifier	zend_get_called_scope		248703	0					
ANR	249073	ArgumentList	EG ( current_execute_data )		248703	1					
ANR	249074	Argument	EG ( current_execute_data )		248703	0					
ANR	249075	CallExpression	EG ( current_execute_data )		248703	0					
ANR	249076	Callee	EG		248703	0					
ANR	249077	Identifier	EG		248703	0					
ANR	249078	ArgumentList	current_execute_data		248703	1					
ANR	249079	Argument	current_execute_data		248703	0					
ANR	249080	Identifier	current_execute_data		248703	0					
ANR	249081	IfStatement	"if ( obj_ce && ( ! called_scope || ! instanceof_function ( called_scope , obj_ce ) ) )"		248703	1					
ANR	249082	Condition	"obj_ce && ( ! called_scope || ! instanceof_function ( called_scope , obj_ce ) )"	95:7:3609:3694	248703	0	True				
ANR	249083	AndExpression	"obj_ce && ( ! called_scope || ! instanceof_function ( called_scope , obj_ce ) )"		248703	0		&&			
ANR	249084	Identifier	obj_ce		248703	0					
ANR	249085	OrExpression	"! called_scope || ! instanceof_function ( called_scope , obj_ce )"		248703	1		||			
ANR	249086	UnaryOperationExpression	! called_scope		248703	0					
ANR	249087	UnaryOperator	!		248703	0					
ANR	249088	Identifier	called_scope		248703	1					
ANR	249089	UnaryOperationExpression	"! instanceof_function ( called_scope , obj_ce )"		248703	1					
ANR	249090	UnaryOperator	!		248703	0					
ANR	249091	CallExpression	"instanceof_function ( called_scope , obj_ce )"		248703	1					
ANR	249092	Callee	instanceof_function		248703	0					
ANR	249093	Identifier	instanceof_function		248703	0					
ANR	249094	ArgumentList	called_scope		248703	1					
ANR	249095	Argument	called_scope		248703	0					
ANR	249096	Identifier	called_scope		248703	0					
ANR	249097	Argument	obj_ce		248703	1					
ANR	249098	Identifier	obj_ce		248703	0					
ANR	249099	CompoundStatement		63:53:1910:1910	248703	1					
ANR	249100	ExpressionStatement	fcic . called_scope = obj_ce	98:4:3703:3729	248703	0	True				
ANR	249101	AssignmentExpression	fcic . called_scope = obj_ce		248703	0		=			
ANR	249102	MemberAccess	fcic . called_scope		248703	0					
ANR	249103	Identifier	fcic		248703	0					
ANR	249104	Identifier	called_scope		248703	1					
ANR	249105	Identifier	obj_ce		248703	1					
ANR	249106	ElseStatement	else		248703	0					
ANR	249107	CompoundStatement		65:10:1954:1954	248703	0					
ANR	249108	ExpressionStatement	fcic . called_scope = called_scope	100:4:3747:3779	248703	0	True				
ANR	249109	AssignmentExpression	fcic . called_scope = called_scope		248703	0		=			
ANR	249110	MemberAccess	fcic . called_scope		248703	0					
ANR	249111	Identifier	fcic		248703	0					
ANR	249112	Identifier	called_scope		248703	1					
ANR	249113	Identifier	called_scope		248703	1					
ANR	249114	ExpressionStatement	fcic . object = object ? Z_OBJ_P ( object ) : NULL	103:2:3792:3837	248703	7	True				
ANR	249115	AssignmentExpression	fcic . object = object ? Z_OBJ_P ( object ) : NULL		248703	0		=			
ANR	249116	MemberAccess	fcic . object		248703	0					
ANR	249117	Identifier	fcic		248703	0					
ANR	249118	Identifier	object		248703	1					
ANR	249119	ConditionalExpression	object ? Z_OBJ_P ( object ) : NULL		248703	1					
ANR	249120	Condition	object		248703	0					
ANR	249121	Identifier	object		248703	0					
ANR	249122	CallExpression	Z_OBJ_P ( object )		248703	1					
ANR	249123	Callee	Z_OBJ_P		248703	0					
ANR	249124	Identifier	Z_OBJ_P		248703	0					
ANR	249125	ArgumentList	object		248703	1					
ANR	249126	Argument	object		248703	0					
ANR	249127	Identifier	object		248703	0					
ANR	249128	Identifier	NULL		248703	2					
ANR	249129	ExpressionStatement	"result = zend_call_function ( & fci , & fcic )"	104:2:3841:3881	248703	8	True				
ANR	249130	AssignmentExpression	"result = zend_call_function ( & fci , & fcic )"		248703	0		=			
ANR	249131	Identifier	result		248703	0					
ANR	249132	CallExpression	"zend_call_function ( & fci , & fcic )"		248703	1					
ANR	249133	Callee	zend_call_function		248703	0					
ANR	249134	Identifier	zend_call_function		248703	0					
ANR	249135	ArgumentList	& fci		248703	1					
ANR	249136	Argument	& fci		248703	0					
ANR	249137	UnaryOperationExpression	& fci		248703	0					
ANR	249138	UnaryOperator	&		248703	0					
ANR	249139	Identifier	fci		248703	1					
ANR	249140	Argument	& fcic		248703	1					
ANR	249141	UnaryOperationExpression	& fcic		248703	0					
ANR	249142	UnaryOperator	&		248703	0					
ANR	249143	Identifier	fcic		248703	1					
ANR	249144	ExpressionStatement	zval_ptr_dtor ( & fci . function_name )	105:2:3885:3918	248703	9	True				
ANR	249145	CallExpression	zval_ptr_dtor ( & fci . function_name )		248703	0					
ANR	249146	Callee	zval_ptr_dtor		248703	0					
ANR	249147	Identifier	zval_ptr_dtor		248703	0					
ANR	249148	ArgumentList	& fci . function_name		248703	1					
ANR	249149	Argument	& fci . function_name		248703	0					
ANR	249150	UnaryOperationExpression	& fci . function_name		248703	0					
ANR	249151	UnaryOperator	&		248703	0					
ANR	249152	MemberAccess	fci . function_name		248703	1					
ANR	249153	Identifier	fci		248703	0					
ANR	249154	Identifier	function_name		248703	1					
ANR	249155	IfStatement	if ( result == FAILURE )		248703	16					
ANR	249156	Condition	result == FAILURE	107:5:3928:3944	248703	0	True				
ANR	249157	EqualityExpression	result == FAILURE		248703	0		==			
ANR	249158	Identifier	result		248703	0					
ANR	249159	Identifier	FAILURE		248703	1					
ANR	249160	CompoundStatement		73:24:2160:2160	248703	1					
ANR	249161	IfStatement	if ( ! obj_ce )		248703	0					
ANR	249162	Condition	! obj_ce	109:6:3980:3986	248703	0	True				
ANR	249163	UnaryOperationExpression	! obj_ce		248703	0					
ANR	249164	UnaryOperator	!		248703	0					
ANR	249165	Identifier	obj_ce		248703	1					
ANR	249166	CompoundStatement		75:15:2202:2202	248703	1					
ANR	249167	ExpressionStatement	obj_ce = object ? Z_OBJCE_P ( object ) : NULL	110:3:3994:4036	248703	0	True				
ANR	249168	AssignmentExpression	obj_ce = object ? Z_OBJCE_P ( object ) : NULL		248703	0		=			
ANR	249169	Identifier	obj_ce		248703	0					
ANR	249170	ConditionalExpression	object ? Z_OBJCE_P ( object ) : NULL		248703	1					
ANR	249171	Condition	object		248703	0					
ANR	249172	Identifier	object		248703	0					
ANR	249173	CallExpression	Z_OBJCE_P ( object )		248703	1					
ANR	249174	Callee	Z_OBJCE_P		248703	0					
ANR	249175	Identifier	Z_OBJCE_P		248703	0					
ANR	249176	ArgumentList	object		248703	1					
ANR	249177	Argument	object		248703	0					
ANR	249178	Identifier	object		248703	0					
ANR	249179	Identifier	NULL		248703	2					
ANR	249180	IfStatement	if ( ! EG ( exception ) )		248703	1					
ANR	249181	Condition	! EG ( exception )	112:6:4048:4061	248703	0	True				
ANR	249182	UnaryOperationExpression	! EG ( exception )		248703	0					
ANR	249183	UnaryOperator	!		248703	0					
ANR	249184	CallExpression	EG ( exception )		248703	1					
ANR	249185	Callee	EG		248703	0					
ANR	249186	Identifier	EG		248703	0					
ANR	249187	ArgumentList	exception		248703	1					
ANR	249188	Argument	exception		248703	0					
ANR	249189	Identifier	exception		248703	0					
ANR	249190	CompoundStatement		78:22:2277:2277	248703	1					
ANR	249191	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Couldn't execute method %s%s%s"" , obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """" , obj_ce ? ""::"" : """" , function_name )"	113:3:4069:4209	248703	0	True				
ANR	249192	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Couldn't execute method %s%s%s"" , obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """" , obj_ce ? ""::"" : """" , function_name )"		248703	0					
ANR	249193	Callee	zend_error_noreturn		248703	0					
ANR	249194	Identifier	zend_error_noreturn		248703	0					
ANR	249195	ArgumentList	E_CORE_ERROR		248703	1					
ANR	249196	Argument	E_CORE_ERROR		248703	0					
ANR	249197	Identifier	E_CORE_ERROR		248703	0					
ANR	249198	Argument	"""Couldn't execute method %s%s%s"""		248703	1					
ANR	249199	PrimaryExpression	"""Couldn't execute method %s%s%s"""		248703	0					
ANR	249200	Argument	"obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """""		248703	2					
ANR	249201	ConditionalExpression	"obj_ce ? ZSTR_VAL ( obj_ce -> name ) : """""		248703	0					
ANR	249202	Condition	obj_ce		248703	0					
ANR	249203	Identifier	obj_ce		248703	0					
ANR	249204	CallExpression	ZSTR_VAL ( obj_ce -> name )		248703	1					
ANR	249205	Callee	ZSTR_VAL		248703	0					
ANR	249206	Identifier	ZSTR_VAL		248703	0					
ANR	249207	ArgumentList	obj_ce -> name		248703	1					
ANR	249208	Argument	obj_ce -> name		248703	0					
ANR	249209	PtrMemberAccess	obj_ce -> name		248703	0					
ANR	249210	Identifier	obj_ce		248703	0					
ANR	249211	Identifier	name		248703	1					
ANR	249212	PrimaryExpression	""""""		248703	2					
ANR	249213	Argument	"obj_ce ? ""::"" : """""		248703	3					
ANR	249214	ConditionalExpression	"obj_ce ? ""::"" : """""		248703	0					
ANR	249215	Condition	obj_ce		248703	0					
ANR	249216	Identifier	obj_ce		248703	0					
ANR	249217	PrimaryExpression	"""::"""		248703	1					
ANR	249218	PrimaryExpression	""""""		248703	2					
ANR	249219	Argument	function_name		248703	4					
ANR	249220	Identifier	function_name		248703	0					
ANR	249221	IfStatement	if ( param_count > 0 && Z_ISREF ( params [ 0 ] ) && ! Z_ISREF_P ( arg1 ) )		248703	17					
ANR	249222	Condition	param_count > 0 && Z_ISREF ( params [ 0 ] ) && ! Z_ISREF_P ( arg1 )	117:5:4287:4343	248703	0	True				
ANR	249223	AndExpression	param_count > 0 && Z_ISREF ( params [ 0 ] ) && ! Z_ISREF_P ( arg1 )		248703	0		&&			
ANR	249224	RelationalExpression	param_count > 0		248703	0		>			
ANR	249225	Identifier	param_count		248703	0					
ANR	249226	PrimaryExpression	0		248703	1					
ANR	249227	AndExpression	Z_ISREF ( params [ 0 ] ) && ! Z_ISREF_P ( arg1 )		248703	1		&&			
ANR	249228	CallExpression	Z_ISREF ( params [ 0 ] )		248703	0					
ANR	249229	Callee	Z_ISREF		248703	0					
ANR	249230	Identifier	Z_ISREF		248703	0					
ANR	249231	ArgumentList	params [ 0 ]		248703	1					
ANR	249232	Argument	params [ 0 ]		248703	0					
ANR	249233	ArrayIndexing	params [ 0 ]		248703	0					
ANR	249234	Identifier	params		248703	0					
ANR	249235	PrimaryExpression	0		248703	1					
ANR	249236	UnaryOperationExpression	! Z_ISREF_P ( arg1 )		248703	1					
ANR	249237	UnaryOperator	!		248703	0					
ANR	249238	CallExpression	Z_ISREF_P ( arg1 )		248703	1					
ANR	249239	Callee	Z_ISREF_P		248703	0					
ANR	249240	Identifier	Z_ISREF_P		248703	0					
ANR	249241	ArgumentList	arg1		248703	1					
ANR	249242	Argument	arg1		248703	0					
ANR	249243	Identifier	arg1		248703	0					
ANR	249244	CompoundStatement		83:64:2559:2559	248703	1					
ANR	249245	ExpressionStatement	"ZVAL_COPY_VALUE ( arg1 , & params [ 0 ] )"	118:2:4350:4383	248703	0	True				
ANR	249246	CallExpression	"ZVAL_COPY_VALUE ( arg1 , & params [ 0 ] )"		248703	0					
ANR	249247	Callee	ZVAL_COPY_VALUE		248703	0					
ANR	249248	Identifier	ZVAL_COPY_VALUE		248703	0					
ANR	249249	ArgumentList	arg1		248703	1					
ANR	249250	Argument	arg1		248703	0					
ANR	249251	Identifier	arg1		248703	0					
ANR	249252	Argument	& params [ 0 ]		248703	1					
ANR	249253	UnaryOperationExpression	& params [ 0 ]		248703	0					
ANR	249254	UnaryOperator	&		248703	0					
ANR	249255	ArrayIndexing	params [ 0 ]		248703	1					
ANR	249256	Identifier	params		248703	0					
ANR	249257	PrimaryExpression	0		248703	1					
ANR	249258	IfStatement	if ( param_count > 1 && Z_ISREF ( params [ 1 ] ) && ! Z_ISREF_P ( arg2 ) )		248703	18					
ANR	249259	Condition	param_count > 1 && Z_ISREF ( params [ 1 ] ) && ! Z_ISREF_P ( arg2 )	120:5:4393:4449	248703	0	True				
ANR	249260	AndExpression	param_count > 1 && Z_ISREF ( params [ 1 ] ) && ! Z_ISREF_P ( arg2 )		248703	0		&&			
ANR	249261	RelationalExpression	param_count > 1		248703	0		>			
ANR	249262	Identifier	param_count		248703	0					
ANR	249263	PrimaryExpression	1		248703	1					
ANR	249264	AndExpression	Z_ISREF ( params [ 1 ] ) && ! Z_ISREF_P ( arg2 )		248703	1		&&			
ANR	249265	CallExpression	Z_ISREF ( params [ 1 ] )		248703	0					
ANR	249266	Callee	Z_ISREF		248703	0					
ANR	249267	Identifier	Z_ISREF		248703	0					
ANR	249268	ArgumentList	params [ 1 ]		248703	1					
ANR	249269	Argument	params [ 1 ]		248703	0					
ANR	249270	ArrayIndexing	params [ 1 ]		248703	0					
ANR	249271	Identifier	params		248703	0					
ANR	249272	PrimaryExpression	1		248703	1					
ANR	249273	UnaryOperationExpression	! Z_ISREF_P ( arg2 )		248703	1					
ANR	249274	UnaryOperator	!		248703	0					
ANR	249275	CallExpression	Z_ISREF_P ( arg2 )		248703	1					
ANR	249276	Callee	Z_ISREF_P		248703	0					
ANR	249277	Identifier	Z_ISREF_P		248703	0					
ANR	249278	ArgumentList	arg2		248703	1					
ANR	249279	Argument	arg2		248703	0					
ANR	249280	Identifier	arg2		248703	0					
ANR	249281	CompoundStatement		86:64:2665:2665	248703	1					
ANR	249282	ExpressionStatement	"ZVAL_COPY_VALUE ( arg2 , & params [ 1 ] )"	121:2:4456:4489	248703	0	True				
ANR	249283	CallExpression	"ZVAL_COPY_VALUE ( arg2 , & params [ 1 ] )"		248703	0					
ANR	249284	Callee	ZVAL_COPY_VALUE		248703	0					
ANR	249285	Identifier	ZVAL_COPY_VALUE		248703	0					
ANR	249286	ArgumentList	arg2		248703	1					
ANR	249287	Argument	arg2		248703	0					
ANR	249288	Identifier	arg2		248703	0					
ANR	249289	Argument	& params [ 1 ]		248703	1					
ANR	249290	UnaryOperationExpression	& params [ 1 ]		248703	0					
ANR	249291	UnaryOperator	&		248703	0					
ANR	249292	ArrayIndexing	params [ 1 ]		248703	1					
ANR	249293	Identifier	params		248703	0					
ANR	249294	PrimaryExpression	1		248703	1					
ANR	249295	IfStatement	if ( ! retval_ptr )		248703	19					
ANR	249296	Condition	! retval_ptr	123:5:4499:4509	248703	0	True				
ANR	249297	UnaryOperationExpression	! retval_ptr		248703	0					
ANR	249298	UnaryOperator	!		248703	0					
ANR	249299	Identifier	retval_ptr		248703	1					
ANR	249300	CompoundStatement		89:18:2725:2725	248703	1					
ANR	249301	ExpressionStatement	zval_ptr_dtor ( & retval )	124:2:4516:4538	248703	0	True				
ANR	249302	CallExpression	zval_ptr_dtor ( & retval )		248703	0					
ANR	249303	Callee	zval_ptr_dtor		248703	0					
ANR	249304	Identifier	zval_ptr_dtor		248703	0					
ANR	249305	ArgumentList	& retval		248703	1					
ANR	249306	Argument	& retval		248703	0					
ANR	249307	UnaryOperationExpression	& retval		248703	0					
ANR	249308	UnaryOperator	&		248703	0					
ANR	249309	Identifier	retval		248703	1					
ANR	249310	ReturnStatement	return NULL ;	125:2:4542:4553	248703	1	True				
ANR	249311	Identifier	NULL		248703	0					
ANR	249312	ReturnStatement	return retval_ptr ;	127:1:4559:4576	248703	20	True				
ANR	249313	Identifier	retval_ptr		248703	0					
ANR	249314	ReturnType	ZEND_API zval *		248703	1					
ANR	249315	Identifier	zend_call_method		248703	2					
ANR	249316	ParameterList	"zval * object , zend_class_entry * obj_ce , zend_function * * fn_proxy , const char * function_name , size_t function_name_len , zval * retval_ptr , int param_count , zval * arg1 , zval * arg2"		248703	3					
ANR	249317	Parameter	zval * object	34:32:1608:1619	248703	0	True				
ANR	249318	ParameterType	zval *		248703	0					
ANR	249319	Identifier	object		248703	1					
ANR	249320	Parameter	zend_class_entry * obj_ce	34:46:1622:1645	248703	1	True				
ANR	249321	ParameterType	zend_class_entry *		248703	0					
ANR	249322	Identifier	obj_ce		248703	1					
ANR	249323	Parameter	zend_function * * fn_proxy	34:72:1648:1671	248703	2	True				
ANR	249324	ParameterType	zend_function * *		248703	0					
ANR	249325	Identifier	fn_proxy		248703	1					
ANR	249326	Parameter	const char * function_name	34:98:1674:1698	248703	3	True				
ANR	249327	ParameterType	const char *		248703	0					
ANR	249328	Identifier	function_name		248703	1					
ANR	249329	Parameter	size_t function_name_len	34:125:1701:1724	248703	4	True				
ANR	249330	ParameterType	size_t		248703	0					
ANR	249331	Identifier	function_name_len		248703	1					
ANR	249332	Parameter	zval * retval_ptr	34:151:1727:1742	248703	5	True				
ANR	249333	ParameterType	zval *		248703	0					
ANR	249334	Identifier	retval_ptr		248703	1					
ANR	249335	Parameter	int param_count	34:169:1745:1759	248703	6	True				
ANR	249336	ParameterType	int		248703	0					
ANR	249337	Identifier	param_count		248703	1					
ANR	249338	Parameter	zval * arg1	34:186:1762:1771	248703	7	True				
ANR	249339	ParameterType	zval *		248703	0					
ANR	249340	Identifier	arg1		248703	1					
ANR	249341	Parameter	zval * arg2	34:198:1774:1783	248703	8	True				
ANR	249342	ParameterType	zval *		248703	0					
ANR	249343	Identifier	arg2		248703	1					
ANR	249344	CFGEntryNode	ENTRY		248703		True				
ANR	249345	CFGExitNode	EXIT		248703		True				
ANR	249346	Symbol	exception		248703						
ANR	249347	Symbol	fci . function_table		248703						
ANR	249348	Symbol	current_execute_data		248703						
ANR	249349	Symbol	called_scope		248703						
ANR	249350	Symbol	Z_STR		248703						
ANR	249351	Symbol	fci . function_name		248703						
ANR	249352	Symbol	retval_ptr		248703						
ANR	249353	Symbol	function_name_len		248703						
ANR	249354	Symbol	fci . param_count		248703						
ANR	249355	Symbol	fci . retval		248703						
ANR	249356	Symbol	fn_proxy		248703						
ANR	249357	Symbol	& retval		248703						
ANR	249358	Symbol	zend_call_function		248703						
ANR	249359	Symbol	& fcic		248703						
ANR	249360	Symbol	fcic . initialized		248703						
ANR	249361	Symbol	zend_hash_find_ptr		248703						
ANR	249362	Symbol	EG		248703						
ANR	249363	Symbol	NULL		248703						
ANR	249364	Symbol	obj_ce -> name		248703						
ANR	249365	Symbol	param_count		248703						
ANR	249366	Symbol	obj_ce		248703						
ANR	249367	Symbol	params		248703						
ANR	249368	Symbol	retval		248703						
ANR	249369	Symbol	arg2		248703						
ANR	249370	Symbol	arg1		248703						
ANR	249371	Symbol	fcic		248703						
ANR	249372	Symbol	function_table		248703						
ANR	249373	Symbol	fcic . object		248703						
ANR	249374	Symbol	Z_ISREF_P		248703						
ANR	249375	Symbol	object		248703						
ANR	249376	Symbol	instanceof_function		248703						
ANR	249377	Symbol	fci . params		248703						
ANR	249378	Symbol	Z_OBJ_P		248703						
ANR	249379	Symbol	fcic . called_scope		248703						
ANR	249380	Symbol	fci		248703						
ANR	249381	Symbol	zend_get_called_scope		248703						
ANR	249382	Symbol	result		248703						
ANR	249383	Symbol	fcic . calling_scope		248703						
ANR	249384	Symbol	fci . size		248703						
ANR	249385	Symbol	* fn_proxy		248703						
ANR	249386	Symbol	E_CORE_ERROR		248703						
ANR	249387	Symbol	Z_OBJCE_P		248703						
ANR	249388	Symbol	* obj_ce		248703						
ANR	249389	Symbol	Z_ISREF		248703						
ANR	249390	Symbol	fci . no_separation		248703						
ANR	249391	Symbol	* params		248703						
ANR	249392	Symbol	fci . object		248703						
ANR	249393	Symbol	& obj_ce -> function_table		248703						
ANR	249394	Symbol	& fci . function_name		248703						
ANR	249395	Symbol	Z_TYPE_P		248703						
ANR	249396	Symbol	FAILURE		248703						
ANR	249397	Symbol	fcic . function_handler		248703						
ANR	249398	Symbol	ZSTR_VAL		248703						
ANR	249399	Symbol	& fci		248703						
ANR	249400	Symbol	function_name		248703						
ANR	249401	Symbol	fci . symbol_table		248703						
ANR	249402	Symbol	IS_OBJECT		248703						
ANR	249403	Function	zend_user_it_new_iterator	134:0:4687:4884							
ANR	249404	FunctionDef	"zend_user_it_new_iterator (zend_class_entry * ce , zval * object , zval * retval)"		249403	0					
ANR	249405	CompoundStatement		135:0:4777:4884	249403	0					
ANR	249406	ExpressionStatement	"zend_call_method_with_0_params ( object , ce , & ce -> iterator_funcs . zf_new_iterator , ""getiterator"" , retval )"	136:1:4780:4882	249403	0	True				
ANR	249407	CallExpression	"zend_call_method_with_0_params ( object , ce , & ce -> iterator_funcs . zf_new_iterator , ""getiterator"" , retval )"		249403	0					
ANR	249408	Callee	zend_call_method_with_0_params		249403	0					
ANR	249409	Identifier	zend_call_method_with_0_params		249403	0					
ANR	249410	ArgumentList	object		249403	1					
ANR	249411	Argument	object		249403	0					
ANR	249412	Identifier	object		249403	0					
ANR	249413	Argument	ce		249403	1					
ANR	249414	Identifier	ce		249403	0					
ANR	249415	Argument	& ce -> iterator_funcs . zf_new_iterator		249403	2					
ANR	249416	UnaryOperationExpression	& ce -> iterator_funcs . zf_new_iterator		249403	0					
ANR	249417	UnaryOperator	&		249403	0					
ANR	249418	MemberAccess	ce -> iterator_funcs . zf_new_iterator		249403	1					
ANR	249419	PtrMemberAccess	ce -> iterator_funcs		249403	0					
ANR	249420	Identifier	ce		249403	0					
ANR	249421	Identifier	iterator_funcs		249403	1					
ANR	249422	Identifier	zf_new_iterator		249403	1					
ANR	249423	Argument	"""getiterator"""		249403	3					
ANR	249424	PrimaryExpression	"""getiterator"""		249403	0					
ANR	249425	Argument	retval		249403	4					
ANR	249426	Identifier	retval		249403	0					
ANR	249427	ReturnType	ZEND_API void		249403	1					
ANR	249428	Identifier	zend_user_it_new_iterator		249403	2					
ANR	249429	ParameterList	"zend_class_entry * ce , zval * object , zval * retval"		249403	3					
ANR	249430	Parameter	zend_class_entry * ce	134:40:4727:4746	249403	0	True				
ANR	249431	ParameterType	zend_class_entry *		249403	0					
ANR	249432	Identifier	ce		249403	1					
ANR	249433	Parameter	zval * object	134:62:4749:4760	249403	1	True				
ANR	249434	ParameterType	zval *		249403	0					
ANR	249435	Identifier	object		249403	1					
ANR	249436	Parameter	zval * retval	134:76:4763:4774	249403	2	True				
ANR	249437	ParameterType	zval *		249403	0					
ANR	249438	Identifier	retval		249403	1					
ANR	249439	CFGEntryNode	ENTRY		249403		True				
ANR	249440	CFGExitNode	EXIT		249403		True				
ANR	249441	Symbol	& ce -> iterator_funcs . zf_new_iterator		249403						
ANR	249442	Symbol	ce		249403						
ANR	249443	Symbol	ce -> iterator_funcs		249403						
ANR	249444	Symbol	* ce		249403						
ANR	249445	Symbol	& ce -> iterator_funcs		249403						
ANR	249446	Symbol	retval		249403						
ANR	249447	Symbol	object		249403						
ANR	249448	Function	zend_user_it_invalidate_current	141:0:4939:5167							
ANR	249449	FunctionDef	zend_user_it_invalidate_current (zend_object_iterator * _iter)		249448	0					
ANR	249450	CompoundStatement		142:0:5014:5167	249448	0					
ANR	249451	IdentifierDeclStatement	zend_user_iterator * iter = ( zend_user_iterator * ) _iter ;	143:1:5017:5070	249448	0	True				
ANR	249452	IdentifierDecl	* iter = ( zend_user_iterator * ) _iter		249448	0					
ANR	249453	IdentifierDeclType	zend_user_iterator *		249448	0					
ANR	249454	Identifier	iter		249448	1					
ANR	249455	AssignmentExpression	* iter = ( zend_user_iterator * ) _iter		249448	2		=			
ANR	249456	Identifier	iter		249448	0					
ANR	249457	CastExpression	( zend_user_iterator * ) _iter		249448	1					
ANR	249458	CastTarget	zend_user_iterator *		249448	0					
ANR	249459	Identifier	_iter		249448	1					
ANR	249460	IfStatement	if ( ! Z_ISUNDEF ( iter -> value ) )		249448	1					
ANR	249461	Condition	! Z_ISUNDEF ( iter -> value )	145:5:5078:5100	249448	0	True				
ANR	249462	UnaryOperationExpression	! Z_ISUNDEF ( iter -> value )		249448	0					
ANR	249463	UnaryOperator	!		249448	0					
ANR	249464	CallExpression	Z_ISUNDEF ( iter -> value )		249448	1					
ANR	249465	Callee	Z_ISUNDEF		249448	0					
ANR	249466	Identifier	Z_ISUNDEF		249448	0					
ANR	249467	ArgumentList	iter -> value		249448	1					
ANR	249468	Argument	iter -> value		249448	0					
ANR	249469	PtrMemberAccess	iter -> value		249448	0					
ANR	249470	Identifier	iter		249448	0					
ANR	249471	Identifier	value		249448	1					
ANR	249472	CompoundStatement		4:30:88:88	249448	1					
ANR	249473	ExpressionStatement	zval_ptr_dtor ( & iter -> value )	146:2:5107:5134	249448	0	True				
ANR	249474	CallExpression	zval_ptr_dtor ( & iter -> value )		249448	0					
ANR	249475	Callee	zval_ptr_dtor		249448	0					
ANR	249476	Identifier	zval_ptr_dtor		249448	0					
ANR	249477	ArgumentList	& iter -> value		249448	1					
ANR	249478	Argument	& iter -> value		249448	0					
ANR	249479	UnaryOperationExpression	& iter -> value		249448	0					
ANR	249480	UnaryOperator	&		249448	0					
ANR	249481	PtrMemberAccess	iter -> value		249448	1					
ANR	249482	Identifier	iter		249448	0					
ANR	249483	Identifier	value		249448	1					
ANR	249484	ExpressionStatement	ZVAL_UNDEF ( & iter -> value )	147:2:5138:5162	249448	1	True				
ANR	249485	CallExpression	ZVAL_UNDEF ( & iter -> value )		249448	0					
ANR	249486	Callee	ZVAL_UNDEF		249448	0					
ANR	249487	Identifier	ZVAL_UNDEF		249448	0					
ANR	249488	ArgumentList	& iter -> value		249448	1					
ANR	249489	Argument	& iter -> value		249448	0					
ANR	249490	UnaryOperationExpression	& iter -> value		249448	0					
ANR	249491	UnaryOperator	&		249448	0					
ANR	249492	PtrMemberAccess	iter -> value		249448	1					
ANR	249493	Identifier	iter		249448	0					
ANR	249494	Identifier	value		249448	1					
ANR	249495	ReturnType	ZEND_API void		249448	1					
ANR	249496	Identifier	zend_user_it_invalidate_current		249448	2					
ANR	249497	ParameterList	zend_object_iterator * _iter		249448	3					
ANR	249498	Parameter	zend_object_iterator * _iter	141:46:4985:5011	249448	0	True				
ANR	249499	ParameterType	zend_object_iterator *		249448	0					
ANR	249500	Identifier	_iter		249448	1					
ANR	249501	CFGEntryNode	ENTRY		249448		True				
ANR	249502	CFGExitNode	EXIT		249448		True				
ANR	249503	Symbol	* iter		249448						
ANR	249504	Symbol	iter -> value		249448						
ANR	249505	Symbol	& iter -> value		249448						
ANR	249506	Symbol	Z_ISUNDEF		249448						
ANR	249507	Symbol	iter		249448						
ANR	249508	Symbol	_iter		249448						
ANR	249509	Function	zend_user_it_dtor	153:0:5208:5423							
ANR	249510	FunctionDef	zend_user_it_dtor (zend_object_iterator * _iter)		249509	0					
ANR	249511	CompoundStatement		154:0:5267:5423	249509	0					
ANR	249512	IdentifierDeclStatement	zend_user_iterator * iter = ( zend_user_iterator * ) _iter ;	155:1:5270:5323	249509	0	True				
ANR	249513	IdentifierDecl	* iter = ( zend_user_iterator * ) _iter		249509	0					
ANR	249514	IdentifierDeclType	zend_user_iterator *		249509	0					
ANR	249515	Identifier	iter		249509	1					
ANR	249516	AssignmentExpression	* iter = ( zend_user_iterator * ) _iter		249509	2		=			
ANR	249517	Identifier	iter		249509	0					
ANR	249518	CastExpression	( zend_user_iterator * ) _iter		249509	1					
ANR	249519	CastTarget	zend_user_iterator *		249509	0					
ANR	249520	Identifier	_iter		249509	1					
ANR	249521	IdentifierDeclStatement	zval * object = & iter -> it . data ;	156:1:5326:5355	249509	1	True				
ANR	249522	IdentifierDecl	* object = & iter -> it . data		249509	0					
ANR	249523	IdentifierDeclType	zval *		249509	0					
ANR	249524	Identifier	object		249509	1					
ANR	249525	AssignmentExpression	* object = & iter -> it . data		249509	2		=			
ANR	249526	Identifier	object		249509	0					
ANR	249527	UnaryOperationExpression	& iter -> it . data		249509	1					
ANR	249528	UnaryOperator	&		249509	0					
ANR	249529	MemberAccess	iter -> it . data		249509	1					
ANR	249530	PtrMemberAccess	iter -> it		249509	0					
ANR	249531	Identifier	iter		249509	0					
ANR	249532	Identifier	it		249509	1					
ANR	249533	Identifier	data		249509	1					
ANR	249534	ExpressionStatement	zend_user_it_invalidate_current ( _iter )	158:1:5359:5397	249509	2	True				
ANR	249535	CallExpression	zend_user_it_invalidate_current ( _iter )		249509	0					
ANR	249536	Callee	zend_user_it_invalidate_current		249509	0					
ANR	249537	Identifier	zend_user_it_invalidate_current		249509	0					
ANR	249538	ArgumentList	_iter		249509	1					
ANR	249539	Argument	_iter		249509	0					
ANR	249540	Identifier	_iter		249509	0					
ANR	249541	ExpressionStatement	zval_ptr_dtor ( object )	159:1:5400:5421	249509	3	True				
ANR	249542	CallExpression	zval_ptr_dtor ( object )		249509	0					
ANR	249543	Callee	zval_ptr_dtor		249509	0					
ANR	249544	Identifier	zval_ptr_dtor		249509	0					
ANR	249545	ArgumentList	object		249509	1					
ANR	249546	Argument	object		249509	0					
ANR	249547	Identifier	object		249509	0					
ANR	249548	ReturnType	static void		249509	1					
ANR	249549	Identifier	zend_user_it_dtor		249509	2					
ANR	249550	ParameterList	zend_object_iterator * _iter		249509	3					
ANR	249551	Parameter	zend_object_iterator * _iter	153:30:5238:5264	249509	0	True				
ANR	249552	ParameterType	zend_object_iterator *		249509	0					
ANR	249553	Identifier	_iter		249509	1					
ANR	249554	CFGEntryNode	ENTRY		249509		True				
ANR	249555	CFGExitNode	EXIT		249509		True				
ANR	249556	Symbol	* iter		249509						
ANR	249557	Symbol	iter -> it		249509						
ANR	249558	Symbol	iter		249509						
ANR	249559	Symbol	& iter -> it		249509						
ANR	249560	Symbol	_iter		249509						
ANR	249561	Symbol	& iter -> it . data		249509						
ANR	249562	Symbol	object		249509						
ANR	249563	Function	zend_user_it_valid	164:0:5465:5920							
ANR	249564	FunctionDef	zend_user_it_valid (zend_object_iterator * _iter)		249563	0					
ANR	249565	CompoundStatement		165:0:5526:5920	249563	0					
ANR	249566	IfStatement	if ( _iter )		249563	0					
ANR	249567	Condition	_iter	166:5:5533:5537	249563	0	True				
ANR	249568	Identifier	_iter		249563	0					
ANR	249569	CompoundStatement		6:2:120:130	249563	1					
ANR	249570	IdentifierDeclStatement	zend_user_iterator * iter = ( zend_user_iterator * ) _iter ;	167:2:5544:5597	249563	0	True				
ANR	249571	IdentifierDecl	* iter = ( zend_user_iterator * ) _iter		249563	0					
ANR	249572	IdentifierDeclType	zend_user_iterator *		249563	0					
ANR	249573	Identifier	iter		249563	1					
ANR	249574	AssignmentExpression	* iter = ( zend_user_iterator * ) _iter		249563	2		=			
ANR	249575	Identifier	iter		249563	0					
ANR	249576	CastExpression	( zend_user_iterator * ) _iter		249563	1					
ANR	249577	CastTarget	zend_user_iterator *		249563	0					
ANR	249578	Identifier	_iter		249563	1					
ANR	249579	IdentifierDeclStatement	zval * object = & iter -> it . data ;	168:2:5601:5630	249563	1	True				
ANR	249580	IdentifierDecl	* object = & iter -> it . data		249563	0					
ANR	249581	IdentifierDeclType	zval *		249563	0					
ANR	249582	Identifier	object		249563	1					
ANR	249583	AssignmentExpression	* object = & iter -> it . data		249563	2		=			
ANR	249584	Identifier	object		249563	0					
ANR	249585	UnaryOperationExpression	& iter -> it . data		249563	1					
ANR	249586	UnaryOperator	&		249563	0					
ANR	249587	MemberAccess	iter -> it . data		249563	1					
ANR	249588	PtrMemberAccess	iter -> it		249563	0					
ANR	249589	Identifier	iter		249563	0					
ANR	249590	Identifier	it		249563	1					
ANR	249591	Identifier	data		249563	1					
ANR	249592	IdentifierDeclStatement	zval more ;	169:2:5634:5643	249563	2	True				
ANR	249593	IdentifierDecl	more		249563	0					
ANR	249594	IdentifierDeclType	zval		249563	0					
ANR	249595	Identifier	more		249563	1					
ANR	249596	IdentifierDeclStatement	int result ;	170:2:5647:5657	249563	3	True				
ANR	249597	IdentifierDecl	result		249563	0					
ANR	249598	IdentifierDeclType	int		249563	0					
ANR	249599	Identifier	result		249563	1					
ANR	249600	ExpressionStatement	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_valid , ""valid"" , & more )"	172:2:5662:5762	249563	4	True				
ANR	249601	CallExpression	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_valid , ""valid"" , & more )"		249563	0					
ANR	249602	Callee	zend_call_method_with_0_params		249563	0					
ANR	249603	Identifier	zend_call_method_with_0_params		249563	0					
ANR	249604	ArgumentList	object		249563	1					
ANR	249605	Argument	object		249563	0					
ANR	249606	Identifier	object		249563	0					
ANR	249607	Argument	iter -> ce		249563	1					
ANR	249608	PtrMemberAccess	iter -> ce		249563	0					
ANR	249609	Identifier	iter		249563	0					
ANR	249610	Identifier	ce		249563	1					
ANR	249611	Argument	& iter -> ce -> iterator_funcs . zf_valid		249563	2					
ANR	249612	UnaryOperationExpression	& iter -> ce -> iterator_funcs . zf_valid		249563	0					
ANR	249613	UnaryOperator	&		249563	0					
ANR	249614	MemberAccess	iter -> ce -> iterator_funcs . zf_valid		249563	1					
ANR	249615	PtrMemberAccess	iter -> ce -> iterator_funcs		249563	0					
ANR	249616	PtrMemberAccess	iter -> ce		249563	0					
ANR	249617	Identifier	iter		249563	0					
ANR	249618	Identifier	ce		249563	1					
ANR	249619	Identifier	iterator_funcs		249563	1					
ANR	249620	Identifier	zf_valid		249563	1					
ANR	249621	Argument	"""valid"""		249563	3					
ANR	249622	PrimaryExpression	"""valid"""		249563	0					
ANR	249623	Argument	& more		249563	4					
ANR	249624	UnaryOperationExpression	& more		249563	0					
ANR	249625	UnaryOperator	&		249563	0					
ANR	249626	Identifier	more		249563	1					
ANR	249627	IfStatement	if ( Z_TYPE ( more ) != IS_UNDEF )		249563	5					
ANR	249628	Condition	Z_TYPE ( more ) != IS_UNDEF	173:6:5770:5793	249563	0	True				
ANR	249629	EqualityExpression	Z_TYPE ( more ) != IS_UNDEF		249563	0		!=			
ANR	249630	CallExpression	Z_TYPE ( more )		249563	0					
ANR	249631	Callee	Z_TYPE		249563	0					
ANR	249632	Identifier	Z_TYPE		249563	0					
ANR	249633	ArgumentList	more		249563	1					
ANR	249634	Argument	more		249563	0					
ANR	249635	Identifier	more		249563	0					
ANR	249636	Identifier	IS_UNDEF		249563	1					
ANR	249637	CompoundStatement		9:32:269:269	249563	1					
ANR	249638	ExpressionStatement	result = i_zend_is_true ( & more )	174:3:5801:5831	249563	0	True				
ANR	249639	AssignmentExpression	result = i_zend_is_true ( & more )		249563	0		=			
ANR	249640	Identifier	result		249563	0					
ANR	249641	CallExpression	i_zend_is_true ( & more )		249563	1					
ANR	249642	Callee	i_zend_is_true		249563	0					
ANR	249643	Identifier	i_zend_is_true		249563	0					
ANR	249644	ArgumentList	& more		249563	1					
ANR	249645	Argument	& more		249563	0					
ANR	249646	UnaryOperationExpression	& more		249563	0					
ANR	249647	UnaryOperator	&		249563	0					
ANR	249648	Identifier	more		249563	1					
ANR	249649	ExpressionStatement	zval_ptr_dtor ( & more )	175:3:5836:5856	249563	1	True				
ANR	249650	CallExpression	zval_ptr_dtor ( & more )		249563	0					
ANR	249651	Callee	zval_ptr_dtor		249563	0					
ANR	249652	Identifier	zval_ptr_dtor		249563	0					
ANR	249653	ArgumentList	& more		249563	1					
ANR	249654	Argument	& more		249563	0					
ANR	249655	UnaryOperationExpression	& more		249563	0					
ANR	249656	UnaryOperator	&		249563	0					
ANR	249657	Identifier	more		249563	1					
ANR	249658	ReturnStatement	return result ? SUCCESS : FAILURE ;	176:3:5861:5894	249563	2	True				
ANR	249659	ConditionalExpression	result ? SUCCESS : FAILURE		249563	0					
ANR	249660	Condition	result		249563	0					
ANR	249661	Identifier	result		249563	0					
ANR	249662	Identifier	SUCCESS		249563	1					
ANR	249663	Identifier	FAILURE		249563	2					
ANR	249664	ReturnStatement	return FAILURE ;	179:1:5904:5918	249563	1	True				
ANR	249665	Identifier	FAILURE		249563	0					
ANR	249666	ReturnType	ZEND_API int		249563	1					
ANR	249667	Identifier	zend_user_it_valid		249563	2					
ANR	249668	ParameterList	zend_object_iterator * _iter		249563	3					
ANR	249669	Parameter	zend_object_iterator * _iter	164:32:5497:5523	249563	0	True				
ANR	249670	ParameterType	zend_object_iterator *		249563	0					
ANR	249671	Identifier	_iter		249563	1					
ANR	249672	CFGEntryNode	ENTRY		249563		True				
ANR	249673	CFGExitNode	EXIT		249563		True				
ANR	249674	Symbol	& more		249563						
ANR	249675	Symbol	iter -> it		249563						
ANR	249676	Symbol	SUCCESS		249563						
ANR	249677	Symbol	more		249563						
ANR	249678	Symbol	iter		249563						
ANR	249679	Symbol	& iter -> it		249563						
ANR	249680	Symbol	iter -> ce -> iterator_funcs		249563						
ANR	249681	Symbol	Z_TYPE		249563						
ANR	249682	Symbol	i_zend_is_true		249563						
ANR	249683	Symbol	& iter -> ce -> iterator_funcs		249563						
ANR	249684	Symbol	FAILURE		249563						
ANR	249685	Symbol	& iter -> it . data		249563						
ANR	249686	Symbol	result		249563						
ANR	249687	Symbol	& iter -> ce -> iterator_funcs . zf_valid		249563						
ANR	249688	Symbol	* iter		249563						
ANR	249689	Symbol	* iter -> ce		249563						
ANR	249690	Symbol	iter -> ce		249563						
ANR	249691	Symbol	_iter		249563						
ANR	249692	Symbol	* * iter		249563						
ANR	249693	Symbol	IS_UNDEF		249563						
ANR	249694	Symbol	object		249563						
ANR	249695	Function	zend_user_it_get_current_data	184:0:5973:6309							
ANR	249696	FunctionDef	zend_user_it_get_current_data (zend_object_iterator * _iter)		249695	0					
ANR	249697	CompoundStatement		185:0:6047:6309	249695	0					
ANR	249698	IdentifierDeclStatement	zend_user_iterator * iter = ( zend_user_iterator * ) _iter ;	186:1:6050:6103	249695	0	True				
ANR	249699	IdentifierDecl	* iter = ( zend_user_iterator * ) _iter		249695	0					
ANR	249700	IdentifierDeclType	zend_user_iterator *		249695	0					
ANR	249701	Identifier	iter		249695	1					
ANR	249702	AssignmentExpression	* iter = ( zend_user_iterator * ) _iter		249695	2		=			
ANR	249703	Identifier	iter		249695	0					
ANR	249704	CastExpression	( zend_user_iterator * ) _iter		249695	1					
ANR	249705	CastTarget	zend_user_iterator *		249695	0					
ANR	249706	Identifier	_iter		249695	1					
ANR	249707	IdentifierDeclStatement	zval * object = & iter -> it . data ;	187:1:6106:6135	249695	1	True				
ANR	249708	IdentifierDecl	* object = & iter -> it . data		249695	0					
ANR	249709	IdentifierDeclType	zval *		249695	0					
ANR	249710	Identifier	object		249695	1					
ANR	249711	AssignmentExpression	* object = & iter -> it . data		249695	2		=			
ANR	249712	Identifier	object		249695	0					
ANR	249713	UnaryOperationExpression	& iter -> it . data		249695	1					
ANR	249714	UnaryOperator	&		249695	0					
ANR	249715	MemberAccess	iter -> it . data		249695	1					
ANR	249716	PtrMemberAccess	iter -> it		249695	0					
ANR	249717	Identifier	iter		249695	0					
ANR	249718	Identifier	it		249695	1					
ANR	249719	Identifier	data		249695	1					
ANR	249720	IfStatement	if ( Z_ISUNDEF ( iter -> value ) )		249695	2					
ANR	249721	Condition	Z_ISUNDEF ( iter -> value )	189:5:6143:6164	249695	0	True				
ANR	249722	CallExpression	Z_ISUNDEF ( iter -> value )		249695	0					
ANR	249723	Callee	Z_ISUNDEF		249695	0					
ANR	249724	Identifier	Z_ISUNDEF		249695	0					
ANR	249725	ArgumentList	iter -> value		249695	1					
ANR	249726	Argument	iter -> value		249695	0					
ANR	249727	PtrMemberAccess	iter -> value		249695	0					
ANR	249728	Identifier	iter		249695	0					
ANR	249729	Identifier	value		249695	1					
ANR	249730	CompoundStatement		5:29:119:119	249695	1					
ANR	249731	ExpressionStatement	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_current , ""current"" , & iter -> value )"	190:2:6171:6282	249695	0	True				
ANR	249732	CallExpression	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_current , ""current"" , & iter -> value )"		249695	0					
ANR	249733	Callee	zend_call_method_with_0_params		249695	0					
ANR	249734	Identifier	zend_call_method_with_0_params		249695	0					
ANR	249735	ArgumentList	object		249695	1					
ANR	249736	Argument	object		249695	0					
ANR	249737	Identifier	object		249695	0					
ANR	249738	Argument	iter -> ce		249695	1					
ANR	249739	PtrMemberAccess	iter -> ce		249695	0					
ANR	249740	Identifier	iter		249695	0					
ANR	249741	Identifier	ce		249695	1					
ANR	249742	Argument	& iter -> ce -> iterator_funcs . zf_current		249695	2					
ANR	249743	UnaryOperationExpression	& iter -> ce -> iterator_funcs . zf_current		249695	0					
ANR	249744	UnaryOperator	&		249695	0					
ANR	249745	MemberAccess	iter -> ce -> iterator_funcs . zf_current		249695	1					
ANR	249746	PtrMemberAccess	iter -> ce -> iterator_funcs		249695	0					
ANR	249747	PtrMemberAccess	iter -> ce		249695	0					
ANR	249748	Identifier	iter		249695	0					
ANR	249749	Identifier	ce		249695	1					
ANR	249750	Identifier	iterator_funcs		249695	1					
ANR	249751	Identifier	zf_current		249695	1					
ANR	249752	Argument	"""current"""		249695	3					
ANR	249753	PrimaryExpression	"""current"""		249695	0					
ANR	249754	Argument	& iter -> value		249695	4					
ANR	249755	UnaryOperationExpression	& iter -> value		249695	0					
ANR	249756	UnaryOperator	&		249695	0					
ANR	249757	PtrMemberAccess	iter -> value		249695	1					
ANR	249758	Identifier	iter		249695	0					
ANR	249759	Identifier	value		249695	1					
ANR	249760	ReturnStatement	return & iter -> value ;	192:1:6288:6307	249695	3	True				
ANR	249761	UnaryOperationExpression	& iter -> value		249695	0					
ANR	249762	UnaryOperator	&		249695	0					
ANR	249763	PtrMemberAccess	iter -> value		249695	1					
ANR	249764	Identifier	iter		249695	0					
ANR	249765	Identifier	value		249695	1					
ANR	249766	ReturnType	ZEND_API zval *		249695	1					
ANR	249767	Identifier	zend_user_it_get_current_data		249695	2					
ANR	249768	ParameterList	zend_object_iterator * _iter		249695	3					
ANR	249769	Parameter	zend_object_iterator * _iter	184:45:6018:6044	249695	0	True				
ANR	249770	ParameterType	zend_object_iterator *		249695	0					
ANR	249771	Identifier	_iter		249695	1					
ANR	249772	CFGEntryNode	ENTRY		249695		True				
ANR	249773	CFGExitNode	EXIT		249695		True				
ANR	249774	Symbol	iter -> it		249695						
ANR	249775	Symbol	Z_ISUNDEF		249695						
ANR	249776	Symbol	iter		249695						
ANR	249777	Symbol	& iter -> it		249695						
ANR	249778	Symbol	iter -> ce -> iterator_funcs		249695						
ANR	249779	Symbol	& iter -> ce -> iterator_funcs		249695						
ANR	249780	Symbol	& iter -> it . data		249695						
ANR	249781	Symbol	& iter -> ce -> iterator_funcs . zf_current		249695						
ANR	249782	Symbol	* iter		249695						
ANR	249783	Symbol	iter -> value		249695						
ANR	249784	Symbol	& iter -> value		249695						
ANR	249785	Symbol	* iter -> ce		249695						
ANR	249786	Symbol	iter -> ce		249695						
ANR	249787	Symbol	_iter		249695						
ANR	249788	Symbol	* * iter		249695						
ANR	249789	Symbol	object		249695						
ANR	249790	Function	zend_user_it_get_current_key_default	198:0:6375:6557							
ANR	249791	FunctionDef	"zend_user_it_get_current_key_default (zend_object_iterator * _iter , char * * str_key , uint * str_key_len , ulong * int_key)"		249790	0					
ANR	249792	CompoundStatement		199:0:6503:6557	249790	0					
ANR	249793	ExpressionStatement	* int_key = _iter -> index	200:1:6506:6529	249790	0	True				
ANR	249794	AssignmentExpression	* int_key = _iter -> index		249790	0		=			
ANR	249795	UnaryOperationExpression	* int_key		249790	0					
ANR	249796	UnaryOperator	*		249790	0					
ANR	249797	Identifier	int_key		249790	1					
ANR	249798	PtrMemberAccess	_iter -> index		249790	1					
ANR	249799	Identifier	_iter		249790	0					
ANR	249800	Identifier	index		249790	1					
ANR	249801	ReturnStatement	return HASH_KEY_IS_LONG ;	201:1:6532:6555	249790	1	True				
ANR	249802	Identifier	HASH_KEY_IS_LONG		249790	0					
ANR	249803	ReturnType	static int		249790	1					
ANR	249804	Identifier	zend_user_it_get_current_key_default		249790	2					
ANR	249805	ParameterList	"zend_object_iterator * _iter , char * * str_key , uint * str_key_len , ulong * int_key"		249790	3					
ANR	249806	Parameter	zend_object_iterator * _iter	198:48:6423:6449	249790	0	True				
ANR	249807	ParameterType	zend_object_iterator *		249790	0					
ANR	249808	Identifier	_iter		249790	1					
ANR	249809	Parameter	char * * str_key	198:77:6452:6465	249790	1	True				
ANR	249810	ParameterType	char * *		249790	0					
ANR	249811	Identifier	str_key		249790	1					
ANR	249812	Parameter	uint * str_key_len	198:93:6468:6484	249790	2	True				
ANR	249813	ParameterType	uint *		249790	0					
ANR	249814	Identifier	str_key_len		249790	1					
ANR	249815	Parameter	ulong * int_key	198:112:6487:6500	249790	3	True				
ANR	249816	ParameterType	ulong *		249790	0					
ANR	249817	Identifier	int_key		249790	1					
ANR	249818	CFGEntryNode	ENTRY		249790		True				
ANR	249819	CFGExitNode	EXIT		249790		True				
ANR	249820	Symbol	str_key_len		249790						
ANR	249821	Symbol	str_key		249790						
ANR	249822	Symbol	_iter -> index		249790						
ANR	249823	Symbol	HASH_KEY_IS_LONG		249790						
ANR	249824	Symbol	_iter		249790						
ANR	249825	Symbol	* int_key		249790						
ANR	249826	Symbol	* _iter		249790						
ANR	249827	Symbol	int_key		249790						
ANR	249828	Function	zend_user_it_get_current_key	207:0:6616:7124							
ANR	249829	FunctionDef	"zend_user_it_get_current_key (zend_object_iterator * _iter , zval * key)"		249828	0					
ANR	249830	CompoundStatement		208:0:6699:7124	249828	0					
ANR	249831	IdentifierDeclStatement	zend_user_iterator * iter = ( zend_user_iterator * ) _iter ;	209:1:6702:6755	249828	0	True				
ANR	249832	IdentifierDecl	* iter = ( zend_user_iterator * ) _iter		249828	0					
ANR	249833	IdentifierDeclType	zend_user_iterator *		249828	0					
ANR	249834	Identifier	iter		249828	1					
ANR	249835	AssignmentExpression	* iter = ( zend_user_iterator * ) _iter		249828	2		=			
ANR	249836	Identifier	iter		249828	0					
ANR	249837	CastExpression	( zend_user_iterator * ) _iter		249828	1					
ANR	249838	CastTarget	zend_user_iterator *		249828	0					
ANR	249839	Identifier	_iter		249828	1					
ANR	249840	IdentifierDeclStatement	zval * object = & iter -> it . data ;	210:1:6758:6787	249828	1	True				
ANR	249841	IdentifierDecl	* object = & iter -> it . data		249828	0					
ANR	249842	IdentifierDeclType	zval *		249828	0					
ANR	249843	Identifier	object		249828	1					
ANR	249844	AssignmentExpression	* object = & iter -> it . data		249828	2		=			
ANR	249845	Identifier	object		249828	0					
ANR	249846	UnaryOperationExpression	& iter -> it . data		249828	1					
ANR	249847	UnaryOperator	&		249828	0					
ANR	249848	MemberAccess	iter -> it . data		249828	1					
ANR	249849	PtrMemberAccess	iter -> it		249828	0					
ANR	249850	Identifier	iter		249828	0					
ANR	249851	Identifier	it		249828	1					
ANR	249852	Identifier	data		249828	1					
ANR	249853	IdentifierDeclStatement	zval retval ;	211:1:6790:6801	249828	2	True				
ANR	249854	IdentifierDecl	retval		249828	0					
ANR	249855	IdentifierDeclType	zval		249828	0					
ANR	249856	Identifier	retval		249828	1					
ANR	249857	ExpressionStatement	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_key , ""key"" , & retval )"	213:1:6805:6903	249828	3	True				
ANR	249858	CallExpression	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_key , ""key"" , & retval )"		249828	0					
ANR	249859	Callee	zend_call_method_with_0_params		249828	0					
ANR	249860	Identifier	zend_call_method_with_0_params		249828	0					
ANR	249861	ArgumentList	object		249828	1					
ANR	249862	Argument	object		249828	0					
ANR	249863	Identifier	object		249828	0					
ANR	249864	Argument	iter -> ce		249828	1					
ANR	249865	PtrMemberAccess	iter -> ce		249828	0					
ANR	249866	Identifier	iter		249828	0					
ANR	249867	Identifier	ce		249828	1					
ANR	249868	Argument	& iter -> ce -> iterator_funcs . zf_key		249828	2					
ANR	249869	UnaryOperationExpression	& iter -> ce -> iterator_funcs . zf_key		249828	0					
ANR	249870	UnaryOperator	&		249828	0					
ANR	249871	MemberAccess	iter -> ce -> iterator_funcs . zf_key		249828	1					
ANR	249872	PtrMemberAccess	iter -> ce -> iterator_funcs		249828	0					
ANR	249873	PtrMemberAccess	iter -> ce		249828	0					
ANR	249874	Identifier	iter		249828	0					
ANR	249875	Identifier	ce		249828	1					
ANR	249876	Identifier	iterator_funcs		249828	1					
ANR	249877	Identifier	zf_key		249828	1					
ANR	249878	Argument	"""key"""		249828	3					
ANR	249879	PrimaryExpression	"""key"""		249828	0					
ANR	249880	Argument	& retval		249828	4					
ANR	249881	UnaryOperationExpression	& retval		249828	0					
ANR	249882	UnaryOperator	&		249828	0					
ANR	249883	Identifier	retval		249828	1					
ANR	249884	IfStatement	if ( Z_TYPE ( retval ) != IS_UNDEF )		249828	4					
ANR	249885	Condition	Z_TYPE ( retval ) != IS_UNDEF	215:5:6911:6936	249828	0	True				
ANR	249886	EqualityExpression	Z_TYPE ( retval ) != IS_UNDEF		249828	0		!=			
ANR	249887	CallExpression	Z_TYPE ( retval )		249828	0					
ANR	249888	Callee	Z_TYPE		249828	0					
ANR	249889	Identifier	Z_TYPE		249828	0					
ANR	249890	ArgumentList	retval		249828	1					
ANR	249891	Argument	retval		249828	0					
ANR	249892	Identifier	retval		249828	0					
ANR	249893	Identifier	IS_UNDEF		249828	1					
ANR	249894	CompoundStatement		8:33:239:239	249828	1					
ANR	249895	ExpressionStatement	"ZVAL_ZVAL ( key , & retval , 1 , 1 )"	216:2:6943:6972	249828	0	True				
ANR	249896	CallExpression	"ZVAL_ZVAL ( key , & retval , 1 , 1 )"		249828	0					
ANR	249897	Callee	ZVAL_ZVAL		249828	0					
ANR	249898	Identifier	ZVAL_ZVAL		249828	0					
ANR	249899	ArgumentList	key		249828	1					
ANR	249900	Argument	key		249828	0					
ANR	249901	Identifier	key		249828	0					
ANR	249902	Argument	& retval		249828	1					
ANR	249903	UnaryOperationExpression	& retval		249828	0					
ANR	249904	UnaryOperator	&		249828	0					
ANR	249905	Identifier	retval		249828	1					
ANR	249906	Argument	1		249828	2					
ANR	249907	PrimaryExpression	1		249828	0					
ANR	249908	Argument	1		249828	3					
ANR	249909	PrimaryExpression	1		249828	0					
ANR	249910	ElseStatement	else		249828	0					
ANR	249911	CompoundStatement		10:8:282:282	249828	0					
ANR	249912	IfStatement	if ( ! EG ( exception ) )		249828	0					
ANR	249913	Condition	! EG ( exception )	218:6:6990:7003	249828	0	True				
ANR	249914	UnaryOperationExpression	! EG ( exception )		249828	0					
ANR	249915	UnaryOperator	!		249828	0					
ANR	249916	CallExpression	EG ( exception )		249828	1					
ANR	249917	Callee	EG		249828	0					
ANR	249918	Identifier	EG		249828	0					
ANR	249919	ArgumentList	exception		249828	1					
ANR	249920	Argument	exception		249828	0					
ANR	249921	Identifier	exception		249828	0					
ANR	249922	CompoundStatement		11:22:306:306	249828	1					
ANR	249923	ExpressionStatement	"zend_error ( E_WARNING , ""Nothing returned from %s::key()"" , ZSTR_VAL ( iter -> ce -> name ) )"	219:3:7011:7093	249828	0	True				
ANR	249924	CallExpression	"zend_error ( E_WARNING , ""Nothing returned from %s::key()"" , ZSTR_VAL ( iter -> ce -> name ) )"		249828	0					
ANR	249925	Callee	zend_error		249828	0					
ANR	249926	Identifier	zend_error		249828	0					
ANR	249927	ArgumentList	E_WARNING		249828	1					
ANR	249928	Argument	E_WARNING		249828	0					
ANR	249929	Identifier	E_WARNING		249828	0					
ANR	249930	Argument	"""Nothing returned from %s::key()"""		249828	1					
ANR	249931	PrimaryExpression	"""Nothing returned from %s::key()"""		249828	0					
ANR	249932	Argument	ZSTR_VAL ( iter -> ce -> name )		249828	2					
ANR	249933	CallExpression	ZSTR_VAL ( iter -> ce -> name )		249828	0					
ANR	249934	Callee	ZSTR_VAL		249828	0					
ANR	249935	Identifier	ZSTR_VAL		249828	0					
ANR	249936	ArgumentList	iter -> ce -> name		249828	1					
ANR	249937	Argument	iter -> ce -> name		249828	0					
ANR	249938	PtrMemberAccess	iter -> ce -> name		249828	0					
ANR	249939	PtrMemberAccess	iter -> ce		249828	0					
ANR	249940	Identifier	iter		249828	0					
ANR	249941	Identifier	ce		249828	1					
ANR	249942	Identifier	name		249828	1					
ANR	249943	ExpressionStatement	"ZVAL_LONG ( key , 0 )"	222:2:7102:7119	249828	1	True				
ANR	249944	CallExpression	"ZVAL_LONG ( key , 0 )"		249828	0					
ANR	249945	Callee	ZVAL_LONG		249828	0					
ANR	249946	Identifier	ZVAL_LONG		249828	0					
ANR	249947	ArgumentList	key		249828	1					
ANR	249948	Argument	key		249828	0					
ANR	249949	Identifier	key		249828	0					
ANR	249950	Argument	0		249828	1					
ANR	249951	PrimaryExpression	0		249828	0					
ANR	249952	ReturnType	ZEND_API void		249828	1					
ANR	249953	Identifier	zend_user_it_get_current_key		249828	2					
ANR	249954	ParameterList	"zend_object_iterator * _iter , zval * key"		249828	3					
ANR	249955	Parameter	zend_object_iterator * _iter	207:43:6659:6685	249828	0	True				
ANR	249956	ParameterType	zend_object_iterator *		249828	0					
ANR	249957	Identifier	_iter		249828	1					
ANR	249958	Parameter	zval * key	207:72:6688:6696	249828	1	True				
ANR	249959	ParameterType	zval *		249828	0					
ANR	249960	Identifier	key		249828	1					
ANR	249961	CFGEntryNode	ENTRY		249828		True				
ANR	249962	CFGExitNode	EXIT		249828		True				
ANR	249963	Symbol	exception		249828						
ANR	249964	Symbol	iter -> it		249828						
ANR	249965	Symbol	EG		249828						
ANR	249966	Symbol	iter		249828						
ANR	249967	Symbol	& iter -> it		249828						
ANR	249968	Symbol	iter -> ce -> iterator_funcs		249828						
ANR	249969	Symbol	Z_TYPE		249828						
ANR	249970	Symbol	& iter -> ce -> iterator_funcs		249828						
ANR	249971	Symbol	& iter -> it . data		249828						
ANR	249972	Symbol	retval		249828						
ANR	249973	Symbol	ZSTR_VAL		249828						
ANR	249974	Symbol	E_WARNING		249828						
ANR	249975	Symbol	* iter		249828						
ANR	249976	Symbol	* iter -> ce		249828						
ANR	249977	Symbol	iter -> ce -> name		249828						
ANR	249978	Symbol	& retval		249828						
ANR	249979	Symbol	iter -> ce		249828						
ANR	249980	Symbol	_iter		249828						
ANR	249981	Symbol	* * iter		249828						
ANR	249982	Symbol	& iter -> ce -> iterator_funcs . zf_key		249828						
ANR	249983	Symbol	key		249828						
ANR	249984	Symbol	IS_UNDEF		249828						
ANR	249985	Symbol	object		249828						
ANR	249986	Function	zend_user_it_move_forward	228:0:7173:7474							
ANR	249987	FunctionDef	zend_user_it_move_forward (zend_object_iterator * _iter)		249986	0					
ANR	249988	CompoundStatement		229:0:7242:7474	249986	0					
ANR	249989	IdentifierDeclStatement	zend_user_iterator * iter = ( zend_user_iterator * ) _iter ;	230:1:7245:7298	249986	0	True				
ANR	249990	IdentifierDecl	* iter = ( zend_user_iterator * ) _iter		249986	0					
ANR	249991	IdentifierDeclType	zend_user_iterator *		249986	0					
ANR	249992	Identifier	iter		249986	1					
ANR	249993	AssignmentExpression	* iter = ( zend_user_iterator * ) _iter		249986	2		=			
ANR	249994	Identifier	iter		249986	0					
ANR	249995	CastExpression	( zend_user_iterator * ) _iter		249986	1					
ANR	249996	CastTarget	zend_user_iterator *		249986	0					
ANR	249997	Identifier	_iter		249986	1					
ANR	249998	IdentifierDeclStatement	zval * object = & iter -> it . data ;	231:1:7301:7330	249986	1	True				
ANR	249999	IdentifierDecl	* object = & iter -> it . data		249986	0					
ANR	250000	IdentifierDeclType	zval *		249986	0					
ANR	250001	Identifier	object		249986	1					
ANR	250002	AssignmentExpression	* object = & iter -> it . data		249986	2		=			
ANR	250003	Identifier	object		249986	0					
ANR	250004	UnaryOperationExpression	& iter -> it . data		249986	1					
ANR	250005	UnaryOperator	&		249986	0					
ANR	250006	MemberAccess	iter -> it . data		249986	1					
ANR	250007	PtrMemberAccess	iter -> it		249986	0					
ANR	250008	Identifier	iter		249986	0					
ANR	250009	Identifier	it		249986	1					
ANR	250010	Identifier	data		249986	1					
ANR	250011	ExpressionStatement	zend_user_it_invalidate_current ( _iter )	233:1:7334:7372	249986	2	True				
ANR	250012	CallExpression	zend_user_it_invalidate_current ( _iter )		249986	0					
ANR	250013	Callee	zend_user_it_invalidate_current		249986	0					
ANR	250014	Identifier	zend_user_it_invalidate_current		249986	0					
ANR	250015	ArgumentList	_iter		249986	1					
ANR	250016	Argument	_iter		249986	0					
ANR	250017	Identifier	_iter		249986	0					
ANR	250018	ExpressionStatement	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_next , ""next"" , NULL )"	234:1:7375:7472	249986	3	True				
ANR	250019	CallExpression	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_next , ""next"" , NULL )"		249986	0					
ANR	250020	Callee	zend_call_method_with_0_params		249986	0					
ANR	250021	Identifier	zend_call_method_with_0_params		249986	0					
ANR	250022	ArgumentList	object		249986	1					
ANR	250023	Argument	object		249986	0					
ANR	250024	Identifier	object		249986	0					
ANR	250025	Argument	iter -> ce		249986	1					
ANR	250026	PtrMemberAccess	iter -> ce		249986	0					
ANR	250027	Identifier	iter		249986	0					
ANR	250028	Identifier	ce		249986	1					
ANR	250029	Argument	& iter -> ce -> iterator_funcs . zf_next		249986	2					
ANR	250030	UnaryOperationExpression	& iter -> ce -> iterator_funcs . zf_next		249986	0					
ANR	250031	UnaryOperator	&		249986	0					
ANR	250032	MemberAccess	iter -> ce -> iterator_funcs . zf_next		249986	1					
ANR	250033	PtrMemberAccess	iter -> ce -> iterator_funcs		249986	0					
ANR	250034	PtrMemberAccess	iter -> ce		249986	0					
ANR	250035	Identifier	iter		249986	0					
ANR	250036	Identifier	ce		249986	1					
ANR	250037	Identifier	iterator_funcs		249986	1					
ANR	250038	Identifier	zf_next		249986	1					
ANR	250039	Argument	"""next"""		249986	3					
ANR	250040	PrimaryExpression	"""next"""		249986	0					
ANR	250041	Argument	NULL		249986	4					
ANR	250042	Identifier	NULL		249986	0					
ANR	250043	ReturnType	ZEND_API void		249986	1					
ANR	250044	Identifier	zend_user_it_move_forward		249986	2					
ANR	250045	ParameterList	zend_object_iterator * _iter		249986	3					
ANR	250046	Parameter	zend_object_iterator * _iter	228:40:7213:7239	249986	0	True				
ANR	250047	ParameterType	zend_object_iterator *		249986	0					
ANR	250048	Identifier	_iter		249986	1					
ANR	250049	CFGEntryNode	ENTRY		249986		True				
ANR	250050	CFGExitNode	EXIT		249986		True				
ANR	250051	Symbol	iter -> it		249986						
ANR	250052	Symbol	NULL		249986						
ANR	250053	Symbol	iter		249986						
ANR	250054	Symbol	& iter -> it		249986						
ANR	250055	Symbol	iter -> ce -> iterator_funcs		249986						
ANR	250056	Symbol	& iter -> ce -> iterator_funcs		249986						
ANR	250057	Symbol	& iter -> it . data		249986						
ANR	250058	Symbol	* iter		249986						
ANR	250059	Symbol	* iter -> ce		249986						
ANR	250060	Symbol	iter -> ce		249986						
ANR	250061	Symbol	_iter		249986						
ANR	250062	Symbol	& iter -> ce -> iterator_funcs . zf_next		249986						
ANR	250063	Symbol	* * iter		249986						
ANR	250064	Symbol	object		249986						
ANR	250065	Function	zend_user_it_rewind	239:0:7517:7816							
ANR	250066	FunctionDef	zend_user_it_rewind (zend_object_iterator * _iter)		250065	0					
ANR	250067	CompoundStatement		240:0:7580:7816	250065	0					
ANR	250068	IdentifierDeclStatement	zend_user_iterator * iter = ( zend_user_iterator * ) _iter ;	241:1:7583:7636	250065	0	True				
ANR	250069	IdentifierDecl	* iter = ( zend_user_iterator * ) _iter		250065	0					
ANR	250070	IdentifierDeclType	zend_user_iterator *		250065	0					
ANR	250071	Identifier	iter		250065	1					
ANR	250072	AssignmentExpression	* iter = ( zend_user_iterator * ) _iter		250065	2		=			
ANR	250073	Identifier	iter		250065	0					
ANR	250074	CastExpression	( zend_user_iterator * ) _iter		250065	1					
ANR	250075	CastTarget	zend_user_iterator *		250065	0					
ANR	250076	Identifier	_iter		250065	1					
ANR	250077	IdentifierDeclStatement	zval * object = & iter -> it . data ;	242:1:7639:7668	250065	1	True				
ANR	250078	IdentifierDecl	* object = & iter -> it . data		250065	0					
ANR	250079	IdentifierDeclType	zval *		250065	0					
ANR	250080	Identifier	object		250065	1					
ANR	250081	AssignmentExpression	* object = & iter -> it . data		250065	2		=			
ANR	250082	Identifier	object		250065	0					
ANR	250083	UnaryOperationExpression	& iter -> it . data		250065	1					
ANR	250084	UnaryOperator	&		250065	0					
ANR	250085	MemberAccess	iter -> it . data		250065	1					
ANR	250086	PtrMemberAccess	iter -> it		250065	0					
ANR	250087	Identifier	iter		250065	0					
ANR	250088	Identifier	it		250065	1					
ANR	250089	Identifier	data		250065	1					
ANR	250090	ExpressionStatement	zend_user_it_invalidate_current ( _iter )	244:1:7672:7710	250065	2	True				
ANR	250091	CallExpression	zend_user_it_invalidate_current ( _iter )		250065	0					
ANR	250092	Callee	zend_user_it_invalidate_current		250065	0					
ANR	250093	Identifier	zend_user_it_invalidate_current		250065	0					
ANR	250094	ArgumentList	_iter		250065	1					
ANR	250095	Argument	_iter		250065	0					
ANR	250096	Identifier	_iter		250065	0					
ANR	250097	ExpressionStatement	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_rewind , ""rewind"" , NULL )"	245:1:7713:7814	250065	3	True				
ANR	250098	CallExpression	"zend_call_method_with_0_params ( object , iter -> ce , & iter -> ce -> iterator_funcs . zf_rewind , ""rewind"" , NULL )"		250065	0					
ANR	250099	Callee	zend_call_method_with_0_params		250065	0					
ANR	250100	Identifier	zend_call_method_with_0_params		250065	0					
ANR	250101	ArgumentList	object		250065	1					
ANR	250102	Argument	object		250065	0					
ANR	250103	Identifier	object		250065	0					
ANR	250104	Argument	iter -> ce		250065	1					
ANR	250105	PtrMemberAccess	iter -> ce		250065	0					
ANR	250106	Identifier	iter		250065	0					
ANR	250107	Identifier	ce		250065	1					
ANR	250108	Argument	& iter -> ce -> iterator_funcs . zf_rewind		250065	2					
ANR	250109	UnaryOperationExpression	& iter -> ce -> iterator_funcs . zf_rewind		250065	0					
ANR	250110	UnaryOperator	&		250065	0					
ANR	250111	MemberAccess	iter -> ce -> iterator_funcs . zf_rewind		250065	1					
ANR	250112	PtrMemberAccess	iter -> ce -> iterator_funcs		250065	0					
ANR	250113	PtrMemberAccess	iter -> ce		250065	0					
ANR	250114	Identifier	iter		250065	0					
ANR	250115	Identifier	ce		250065	1					
ANR	250116	Identifier	iterator_funcs		250065	1					
ANR	250117	Identifier	zf_rewind		250065	1					
ANR	250118	Argument	"""rewind"""		250065	3					
ANR	250119	PrimaryExpression	"""rewind"""		250065	0					
ANR	250120	Argument	NULL		250065	4					
ANR	250121	Identifier	NULL		250065	0					
ANR	250122	ReturnType	ZEND_API void		250065	1					
ANR	250123	Identifier	zend_user_it_rewind		250065	2					
ANR	250124	ParameterList	zend_object_iterator * _iter		250065	3					
ANR	250125	Parameter	zend_object_iterator * _iter	239:34:7551:7577	250065	0	True				
ANR	250126	ParameterType	zend_object_iterator *		250065	0					
ANR	250127	Identifier	_iter		250065	1					
ANR	250128	CFGEntryNode	ENTRY		250065		True				
ANR	250129	CFGExitNode	EXIT		250065		True				
ANR	250130	Symbol	iter -> it		250065						
ANR	250131	Symbol	NULL		250065						
ANR	250132	Symbol	iter		250065						
ANR	250133	Symbol	& iter -> it		250065						
ANR	250134	Symbol	iter -> ce -> iterator_funcs		250065						
ANR	250135	Symbol	& iter -> ce -> iterator_funcs		250065						
ANR	250136	Symbol	& iter -> it . data		250065						
ANR	250137	Symbol	* iter		250065						
ANR	250138	Symbol	* iter -> ce		250065						
ANR	250139	Symbol	iter -> ce		250065						
ANR	250140	Symbol	& iter -> ce -> iterator_funcs . zf_rewind		250065						
ANR	250141	Symbol	_iter		250065						
ANR	250142	Symbol	* * iter		250065						
ANR	250143	Symbol	object		250065						
ANR	250144	DeclStmt									
ANR	250145	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	zend_interface_iterator_funcs_iterator
ANR	250146	Function	zend_user_it_get_iterator	260:0:8126:8679							
ANR	250147	FunctionDef	"zend_user_it_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		250146	0					
ANR	250148	CompoundStatement		261:0:8229:8679	250146	0					
ANR	250149	IdentifierDeclStatement	zend_user_iterator * iterator ;	262:1:8232:8260	250146	0	True				
ANR	250150	IdentifierDecl	* iterator		250146	0					
ANR	250151	IdentifierDeclType	zend_user_iterator *		250146	0					
ANR	250152	Identifier	iterator		250146	1					
ANR	250153	IfStatement	if ( by_ref )		250146	1					
ANR	250154	Condition	by_ref	264:5:8268:8273	250146	0	True				
ANR	250155	Identifier	by_ref		250146	0					
ANR	250156	CompoundStatement		4:13:46:46	250146	1					
ANR	250157	ExpressionStatement	"zend_throw_error ( NULL , ""An iterator cannot be used with foreach by reference"" )"	265:2:8280:8358	250146	0	True				
ANR	250158	CallExpression	"zend_throw_error ( NULL , ""An iterator cannot be used with foreach by reference"" )"		250146	0					
ANR	250159	Callee	zend_throw_error		250146	0					
ANR	250160	Identifier	zend_throw_error		250146	0					
ANR	250161	ArgumentList	NULL		250146	1					
ANR	250162	Argument	NULL		250146	0					
ANR	250163	Identifier	NULL		250146	0					
ANR	250164	Argument	"""An iterator cannot be used with foreach by reference"""		250146	1					
ANR	250165	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		250146	0					
ANR	250166	ReturnStatement	return NULL ;	266:2:8362:8373	250146	1	True				
ANR	250167	Identifier	NULL		250146	0					
ANR	250168	ExpressionStatement	iterator = emalloc ( sizeof ( zend_user_iterator ) )	269:1:8380:8426	250146	2	True				
ANR	250169	AssignmentExpression	iterator = emalloc ( sizeof ( zend_user_iterator ) )		250146	0		=			
ANR	250170	Identifier	iterator		250146	0					
ANR	250171	CallExpression	emalloc ( sizeof ( zend_user_iterator ) )		250146	1					
ANR	250172	Callee	emalloc		250146	0					
ANR	250173	Identifier	emalloc		250146	0					
ANR	250174	ArgumentList	sizeof ( zend_user_iterator )		250146	1					
ANR	250175	Argument	sizeof ( zend_user_iterator )		250146	0					
ANR	250176	SizeofExpression	sizeof ( zend_user_iterator )		250146	0					
ANR	250177	Sizeof	sizeof		250146	0					
ANR	250178	SizeofOperand	zend_user_iterator		250146	1					
ANR	250179	ExpressionStatement	zend_iterator_init ( ( zend_object_iterator * ) iterator )	271:1:8430:8481	250146	3	True				
ANR	250180	CallExpression	zend_iterator_init ( ( zend_object_iterator * ) iterator )		250146	0					
ANR	250181	Callee	zend_iterator_init		250146	0					
ANR	250182	Identifier	zend_iterator_init		250146	0					
ANR	250183	ArgumentList	( zend_object_iterator * ) iterator		250146	1					
ANR	250184	Argument	( zend_object_iterator * ) iterator		250146	0					
ANR	250185	CastExpression	( zend_object_iterator * ) iterator		250146	0					
ANR	250186	CastTarget	zend_object_iterator *		250146	0					
ANR	250187	Identifier	iterator		250146	1					
ANR	250188	ExpressionStatement	"ZVAL_COPY ( & iterator -> it . data , object )"	273:1:8485:8522	250146	4	True				
ANR	250189	CallExpression	"ZVAL_COPY ( & iterator -> it . data , object )"		250146	0					
ANR	250190	Callee	ZVAL_COPY		250146	0					
ANR	250191	Identifier	ZVAL_COPY		250146	0					
ANR	250192	ArgumentList	& iterator -> it . data		250146	1					
ANR	250193	Argument	& iterator -> it . data		250146	0					
ANR	250194	UnaryOperationExpression	& iterator -> it . data		250146	0					
ANR	250195	UnaryOperator	&		250146	0					
ANR	250196	MemberAccess	iterator -> it . data		250146	1					
ANR	250197	PtrMemberAccess	iterator -> it		250146	0					
ANR	250198	Identifier	iterator		250146	0					
ANR	250199	Identifier	it		250146	1					
ANR	250200	Identifier	data		250146	1					
ANR	250201	Argument	object		250146	1					
ANR	250202	Identifier	object		250146	0					
ANR	250203	ExpressionStatement	iterator -> it . funcs = ce -> iterator_funcs . funcs	274:1:8525:8570	250146	5	True				
ANR	250204	AssignmentExpression	iterator -> it . funcs = ce -> iterator_funcs . funcs		250146	0		=			
ANR	250205	MemberAccess	iterator -> it . funcs		250146	0					
ANR	250206	PtrMemberAccess	iterator -> it		250146	0					
ANR	250207	Identifier	iterator		250146	0					
ANR	250208	Identifier	it		250146	1					
ANR	250209	Identifier	funcs		250146	1					
ANR	250210	MemberAccess	ce -> iterator_funcs . funcs		250146	1					
ANR	250211	PtrMemberAccess	ce -> iterator_funcs		250146	0					
ANR	250212	Identifier	ce		250146	0					
ANR	250213	Identifier	iterator_funcs		250146	1					
ANR	250214	Identifier	funcs		250146	1					
ANR	250215	ExpressionStatement	iterator -> ce = Z_OBJCE_P ( object )	275:1:8573:8605	250146	6	True				
ANR	250216	AssignmentExpression	iterator -> ce = Z_OBJCE_P ( object )		250146	0		=			
ANR	250217	PtrMemberAccess	iterator -> ce		250146	0					
ANR	250218	Identifier	iterator		250146	0					
ANR	250219	Identifier	ce		250146	1					
ANR	250220	CallExpression	Z_OBJCE_P ( object )		250146	1					
ANR	250221	Callee	Z_OBJCE_P		250146	0					
ANR	250222	Identifier	Z_OBJCE_P		250146	0					
ANR	250223	ArgumentList	object		250146	1					
ANR	250224	Argument	object		250146	0					
ANR	250225	Identifier	object		250146	0					
ANR	250226	ExpressionStatement	ZVAL_UNDEF ( & iterator -> value )	276:1:8608:8636	250146	7	True				
ANR	250227	CallExpression	ZVAL_UNDEF ( & iterator -> value )		250146	0					
ANR	250228	Callee	ZVAL_UNDEF		250146	0					
ANR	250229	Identifier	ZVAL_UNDEF		250146	0					
ANR	250230	ArgumentList	& iterator -> value		250146	1					
ANR	250231	Argument	& iterator -> value		250146	0					
ANR	250232	UnaryOperationExpression	& iterator -> value		250146	0					
ANR	250233	UnaryOperator	&		250146	0					
ANR	250234	PtrMemberAccess	iterator -> value		250146	1					
ANR	250235	Identifier	iterator		250146	0					
ANR	250236	Identifier	value		250146	1					
ANR	250237	ReturnStatement	return ( zend_object_iterator * ) iterator ;	277:1:8639:8677	250146	8	True				
ANR	250238	CastExpression	( zend_object_iterator * ) iterator		250146	0					
ANR	250239	CastTarget	zend_object_iterator *		250146	0					
ANR	250240	Identifier	iterator		250146	1					
ANR	250241	ReturnType	static zend_object_iterator *		250146	1					
ANR	250242	Identifier	zend_user_it_get_iterator		250146	2					
ANR	250243	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		250146	3					
ANR	250244	Parameter	zend_class_entry * ce	260:55:8181:8200	250146	0	True				
ANR	250245	ParameterType	zend_class_entry *		250146	0					
ANR	250246	Identifier	ce		250146	1					
ANR	250247	Parameter	zval * object	260:77:8203:8214	250146	1	True				
ANR	250248	ParameterType	zval *		250146	0					
ANR	250249	Identifier	object		250146	1					
ANR	250250	Parameter	int by_ref	260:91:8217:8226	250146	2	True				
ANR	250251	ParameterType	int		250146	0					
ANR	250252	Identifier	by_ref		250146	1					
ANR	250253	CFGEntryNode	ENTRY		250146		True				
ANR	250254	CFGExitNode	EXIT		250146		True				
ANR	250255	Symbol	ce		250146						
ANR	250256	Symbol	NULL		250146						
ANR	250257	Symbol	& iterator -> it . data		250146						
ANR	250258	Symbol	iterator -> ce		250146						
ANR	250259	Symbol	& iterator -> it		250146						
ANR	250260	Symbol	* ce		250146						
ANR	250261	Symbol	iterator -> it . funcs		250146						
ANR	250262	Symbol	iterator		250146						
ANR	250263	Symbol	emalloc		250146						
ANR	250264	Symbol	* iterator		250146						
ANR	250265	Symbol	ce -> iterator_funcs		250146						
ANR	250266	Symbol	& iterator -> value		250146						
ANR	250267	Symbol	Z_OBJCE_P		250146						
ANR	250268	Symbol	by_ref		250146						
ANR	250269	Symbol	iterator -> it		250146						
ANR	250270	Symbol	ce -> iterator_funcs . funcs		250146						
ANR	250271	Symbol	object		250146						
ANR	250272	Function	zend_user_it_get_new_iterator	282:0:8732:9557							
ANR	250273	FunctionDef	"zend_user_it_get_new_iterator (zend_class_entry * ce , zval * object , int by_ref)"		250272	0					
ANR	250274	CompoundStatement		283:0:8841:9557	250272	0					
ANR	250275	IdentifierDeclStatement	zval iterator ;	284:1:8844:8857	250272	0	True				
ANR	250276	IdentifierDecl	iterator		250272	0					
ANR	250277	IdentifierDeclType	zval		250272	0					
ANR	250278	Identifier	iterator		250272	1					
ANR	250279	IdentifierDeclStatement	zend_object_iterator * new_iterator ;	285:1:8860:8894	250272	1	True				
ANR	250280	IdentifierDecl	* new_iterator		250272	0					
ANR	250281	IdentifierDeclType	zend_object_iterator *		250272	0					
ANR	250282	Identifier	new_iterator		250272	1					
ANR	250283	IdentifierDeclStatement	zend_class_entry * ce_it ;	286:1:8897:8920	250272	2	True				
ANR	250284	IdentifierDecl	* ce_it		250272	0					
ANR	250285	IdentifierDeclType	zend_class_entry *		250272	0					
ANR	250286	Identifier	ce_it		250272	1					
ANR	250287	ExpressionStatement	"zend_user_it_new_iterator ( ce , object , & iterator )"	288:1:8924:8972	250272	3	True				
ANR	250288	CallExpression	"zend_user_it_new_iterator ( ce , object , & iterator )"		250272	0					
ANR	250289	Callee	zend_user_it_new_iterator		250272	0					
ANR	250290	Identifier	zend_user_it_new_iterator		250272	0					
ANR	250291	ArgumentList	ce		250272	1					
ANR	250292	Argument	ce		250272	0					
ANR	250293	Identifier	ce		250272	0					
ANR	250294	Argument	object		250272	1					
ANR	250295	Identifier	object		250272	0					
ANR	250296	Argument	& iterator		250272	2					
ANR	250297	UnaryOperationExpression	& iterator		250272	0					
ANR	250298	UnaryOperator	&		250272	0					
ANR	250299	Identifier	iterator		250272	1					
ANR	250300	ExpressionStatement	ce_it = ( Z_TYPE ( iterator ) == IS_OBJECT ) ? Z_OBJCE ( iterator ) : NULL	289:1:8975:9041	250272	4	True				
ANR	250301	AssignmentExpression	ce_it = ( Z_TYPE ( iterator ) == IS_OBJECT ) ? Z_OBJCE ( iterator ) : NULL		250272	0		=			
ANR	250302	Identifier	ce_it		250272	0					
ANR	250303	ConditionalExpression	( Z_TYPE ( iterator ) == IS_OBJECT ) ? Z_OBJCE ( iterator ) : NULL		250272	1					
ANR	250304	Condition	Z_TYPE ( iterator ) == IS_OBJECT		250272	0					
ANR	250305	EqualityExpression	Z_TYPE ( iterator ) == IS_OBJECT		250272	0		==			
ANR	250306	CallExpression	Z_TYPE ( iterator )		250272	0					
ANR	250307	Callee	Z_TYPE		250272	0					
ANR	250308	Identifier	Z_TYPE		250272	0					
ANR	250309	ArgumentList	iterator		250272	1					
ANR	250310	Argument	iterator		250272	0					
ANR	250311	Identifier	iterator		250272	0					
ANR	250312	Identifier	IS_OBJECT		250272	1					
ANR	250313	CallExpression	Z_OBJCE ( iterator )		250272	1					
ANR	250314	Callee	Z_OBJCE		250272	0					
ANR	250315	Identifier	Z_OBJCE		250272	0					
ANR	250316	ArgumentList	iterator		250272	1					
ANR	250317	Argument	iterator		250272	0					
ANR	250318	Identifier	iterator		250272	0					
ANR	250319	Identifier	NULL		250272	2					
ANR	250320	IfStatement	if ( ! ce_it || ! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && Z_OBJ ( iterator ) == Z_OBJ_P ( object ) ) )		250272	5					
ANR	250321	Condition	! ce_it || ! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && Z_OBJ ( iterator ) == Z_OBJ_P ( object ) )	291:5:9049:9174	250272	0	True				
ANR	250322	OrExpression	! ce_it || ! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && Z_OBJ ( iterator ) == Z_OBJ_P ( object ) )		250272	0		||			
ANR	250323	UnaryOperationExpression	! ce_it		250272	0					
ANR	250324	UnaryOperator	!		250272	0					
ANR	250325	Identifier	ce_it		250272	1					
ANR	250326	OrExpression	! ce_it -> get_iterator || ( ce_it -> get_iterator == zend_user_it_get_new_iterator && Z_OBJ ( iterator ) == Z_OBJ_P ( object ) )		250272	1		||			
ANR	250327	UnaryOperationExpression	! ce_it -> get_iterator		250272	0					
ANR	250328	UnaryOperator	!		250272	0					
ANR	250329	PtrMemberAccess	ce_it -> get_iterator		250272	1					
ANR	250330	Identifier	ce_it		250272	0					
ANR	250331	Identifier	get_iterator		250272	1					
ANR	250332	AndExpression	ce_it -> get_iterator == zend_user_it_get_new_iterator && Z_OBJ ( iterator ) == Z_OBJ_P ( object )		250272	1		&&			
ANR	250333	EqualityExpression	ce_it -> get_iterator == zend_user_it_get_new_iterator		250272	0		==			
ANR	250334	PtrMemberAccess	ce_it -> get_iterator		250272	0					
ANR	250335	Identifier	ce_it		250272	0					
ANR	250336	Identifier	get_iterator		250272	1					
ANR	250337	Identifier	zend_user_it_get_new_iterator		250272	1					
ANR	250338	EqualityExpression	Z_OBJ ( iterator ) == Z_OBJ_P ( object )		250272	1		==			
ANR	250339	CallExpression	Z_OBJ ( iterator )		250272	0					
ANR	250340	Callee	Z_OBJ		250272	0					
ANR	250341	Identifier	Z_OBJ		250272	0					
ANR	250342	ArgumentList	iterator		250272	1					
ANR	250343	Argument	iterator		250272	0					
ANR	250344	Identifier	iterator		250272	0					
ANR	250345	CallExpression	Z_OBJ_P ( object )		250272	1					
ANR	250346	Callee	Z_OBJ_P		250272	0					
ANR	250347	Identifier	Z_OBJ_P		250272	0					
ANR	250348	ArgumentList	object		250272	1					
ANR	250349	Argument	object		250272	0					
ANR	250350	Identifier	object		250272	0					
ANR	250351	CompoundStatement		9:133:335:335	250272	1					
ANR	250352	IfStatement	if ( ! EG ( exception ) )		250272	0					
ANR	250353	Condition	! EG ( exception )	292:6:9185:9198	250272	0	True				
ANR	250354	UnaryOperationExpression	! EG ( exception )		250272	0					
ANR	250355	UnaryOperator	!		250272	0					
ANR	250356	CallExpression	EG ( exception )		250272	1					
ANR	250357	Callee	EG		250272	0					
ANR	250358	Identifier	EG		250272	0					
ANR	250359	ArgumentList	exception		250272	1					
ANR	250360	Argument	exception		250272	0					
ANR	250361	Identifier	exception		250272	0					
ANR	250362	CompoundStatement		10:22:359:359	250272	1					
ANR	250363	ExpressionStatement	"zend_throw_exception_ex ( NULL , 0 , ""Objects returned by %s::getIterator() must be traversable or implement interface Iterator"" , ce ? ZSTR_VAL ( ce -> name ) : ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"	293:3:9206:9392	250272	0	True				
ANR	250364	CallExpression	"zend_throw_exception_ex ( NULL , 0 , ""Objects returned by %s::getIterator() must be traversable or implement interface Iterator"" , ce ? ZSTR_VAL ( ce -> name ) : ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"		250272	0					
ANR	250365	Callee	zend_throw_exception_ex		250272	0					
ANR	250366	Identifier	zend_throw_exception_ex		250272	0					
ANR	250367	ArgumentList	NULL		250272	1					
ANR	250368	Argument	NULL		250272	0					
ANR	250369	Identifier	NULL		250272	0					
ANR	250370	Argument	0		250272	1					
ANR	250371	PrimaryExpression	0		250272	0					
ANR	250372	Argument	"""Objects returned by %s::getIterator() must be traversable or implement interface Iterator"""		250272	2					
ANR	250373	PrimaryExpression	"""Objects returned by %s::getIterator() must be traversable or implement interface Iterator"""		250272	0					
ANR	250374	Argument	ce ? ZSTR_VAL ( ce -> name ) : ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		250272	3					
ANR	250375	ConditionalExpression	ce ? ZSTR_VAL ( ce -> name ) : ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		250272	0					
ANR	250376	Condition	ce		250272	0					
ANR	250377	Identifier	ce		250272	0					
ANR	250378	CallExpression	ZSTR_VAL ( ce -> name )		250272	1					
ANR	250379	Callee	ZSTR_VAL		250272	0					
ANR	250380	Identifier	ZSTR_VAL		250272	0					
ANR	250381	ArgumentList	ce -> name		250272	1					
ANR	250382	Argument	ce -> name		250272	0					
ANR	250383	PtrMemberAccess	ce -> name		250272	0					
ANR	250384	Identifier	ce		250272	0					
ANR	250385	Identifier	name		250272	1					
ANR	250386	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		250272	2					
ANR	250387	Callee	ZSTR_VAL		250272	0					
ANR	250388	Identifier	ZSTR_VAL		250272	0					
ANR	250389	ArgumentList	Z_OBJCE_P ( object ) -> name		250272	1					
ANR	250390	Argument	Z_OBJCE_P ( object ) -> name		250272	0					
ANR	250391	PtrMemberAccess	Z_OBJCE_P ( object ) -> name		250272	0					
ANR	250392	CallExpression	Z_OBJCE_P ( object )		250272	0					
ANR	250393	Callee	Z_OBJCE_P		250272	0					
ANR	250394	Identifier	Z_OBJCE_P		250272	0					
ANR	250395	ArgumentList	object		250272	1					
ANR	250396	Argument	object		250272	0					
ANR	250397	Identifier	object		250272	0					
ANR	250398	Identifier	name		250272	1					
ANR	250399	ExpressionStatement	zval_ptr_dtor ( & iterator )	295:2:9400:9424	250272	1	True				
ANR	250400	CallExpression	zval_ptr_dtor ( & iterator )		250272	0					
ANR	250401	Callee	zval_ptr_dtor		250272	0					
ANR	250402	Identifier	zval_ptr_dtor		250272	0					
ANR	250403	ArgumentList	& iterator		250272	1					
ANR	250404	Argument	& iterator		250272	0					
ANR	250405	UnaryOperationExpression	& iterator		250272	0					
ANR	250406	UnaryOperator	&		250272	0					
ANR	250407	Identifier	iterator		250272	1					
ANR	250408	ReturnStatement	return NULL ;	296:2:9428:9439	250272	2	True				
ANR	250409	Identifier	NULL		250272	0					
ANR	250410	ExpressionStatement	"new_iterator = ce_it -> get_iterator ( ce_it , & iterator , by_ref )"	299:1:9446:9506	250272	6	True				
ANR	250411	AssignmentExpression	"new_iterator = ce_it -> get_iterator ( ce_it , & iterator , by_ref )"		250272	0		=			
ANR	250412	Identifier	new_iterator		250272	0					
ANR	250413	CallExpression	"ce_it -> get_iterator ( ce_it , & iterator , by_ref )"		250272	1					
ANR	250414	Callee	ce_it -> get_iterator		250272	0					
ANR	250415	PtrMemberAccess	ce_it -> get_iterator		250272	0					
ANR	250416	Identifier	ce_it		250272	0					
ANR	250417	Identifier	get_iterator		250272	1					
ANR	250418	ArgumentList	ce_it		250272	1					
ANR	250419	Argument	ce_it		250272	0					
ANR	250420	Identifier	ce_it		250272	0					
ANR	250421	Argument	& iterator		250272	1					
ANR	250422	UnaryOperationExpression	& iterator		250272	0					
ANR	250423	UnaryOperator	&		250272	0					
ANR	250424	Identifier	iterator		250272	1					
ANR	250425	Argument	by_ref		250272	2					
ANR	250426	Identifier	by_ref		250272	0					
ANR	250427	ExpressionStatement	zval_ptr_dtor ( & iterator )	300:1:9509:9533	250272	7	True				
ANR	250428	CallExpression	zval_ptr_dtor ( & iterator )		250272	0					
ANR	250429	Callee	zval_ptr_dtor		250272	0					
ANR	250430	Identifier	zval_ptr_dtor		250272	0					
ANR	250431	ArgumentList	& iterator		250272	1					
ANR	250432	Argument	& iterator		250272	0					
ANR	250433	UnaryOperationExpression	& iterator		250272	0					
ANR	250434	UnaryOperator	&		250272	0					
ANR	250435	Identifier	iterator		250272	1					
ANR	250436	ReturnStatement	return new_iterator ;	301:1:9536:9555	250272	8	True				
ANR	250437	Identifier	new_iterator		250272	0					
ANR	250438	ReturnType	ZEND_API zend_object_iterator *		250272	1					
ANR	250439	Identifier	zend_user_it_get_new_iterator		250272	2					
ANR	250440	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		250272	3					
ANR	250441	Parameter	zend_class_entry * ce	282:61:8793:8812	250272	0	True				
ANR	250442	ParameterType	zend_class_entry *		250272	0					
ANR	250443	Identifier	ce		250272	1					
ANR	250444	Parameter	zval * object	282:83:8815:8826	250272	1	True				
ANR	250445	ParameterType	zval *		250272	0					
ANR	250446	Identifier	object		250272	1					
ANR	250447	Parameter	int by_ref	282:97:8829:8838	250272	2	True				
ANR	250448	ParameterType	int		250272	0					
ANR	250449	Identifier	by_ref		250272	1					
ANR	250450	CFGEntryNode	ENTRY		250272		True				
ANR	250451	CFGExitNode	EXIT		250272		True				
ANR	250452	Symbol	exception		250272						
ANR	250453	Symbol	ce		250272						
ANR	250454	Symbol	EG		250272						
ANR	250455	Symbol	Z_OBJCE_P ( object ) -> name		250272						
ANR	250456	Symbol	NULL		250272						
ANR	250457	Symbol	zend_user_it_get_new_iterator		250272						
ANR	250458	Symbol	ce_it -> get_iterator		250272						
ANR	250459	Symbol	Z_OBJ_P		250272						
ANR	250460	Symbol	Z_TYPE		250272						
ANR	250461	Symbol	ce_it		250272						
ANR	250462	Symbol	* ce		250272						
ANR	250463	Symbol	ZSTR_VAL		250272						
ANR	250464	Symbol	Z_OBJCE		250272						
ANR	250465	Symbol	* ce_it		250272						
ANR	250466	Symbol	iterator		250272						
ANR	250467	Symbol	Z_OBJ		250272						
ANR	250468	Symbol	& iterator		250272						
ANR	250469	Symbol	Z_OBJCE_P		250272						
ANR	250470	Symbol	new_iterator		250272						
ANR	250471	Symbol	by_ref		250272						
ANR	250472	Symbol	ce -> name		250272						
ANR	250473	Symbol	IS_OBJECT		250272						
ANR	250474	Symbol	object		250272						
ANR	250475	Symbol	* Z_OBJCE_P		250272						
ANR	250476	Function	zend_implement_traversable	306:0:9607:10391							
ANR	250477	FunctionDef	"zend_implement_traversable (zend_class_entry * interface , zend_class_entry * class_type)"		250476	0					
ANR	250478	CompoundStatement		307:0:9704:10391	250476	0					
ANR	250479	IdentifierDeclStatement	uint32_t i ;	309:1:9819:9829	250476	0	True				
ANR	250480	IdentifierDecl	i		250476	0					
ANR	250481	IdentifierDeclType	uint32_t		250476	0					
ANR	250482	Identifier	i		250476	1					
ANR	250483	IfStatement	if ( class_type -> get_iterator || ( class_type -> parent && class_type -> parent -> get_iterator ) )		250476	1					
ANR	250484	Condition	class_type -> get_iterator || ( class_type -> parent && class_type -> parent -> get_iterator )	311:5:9837:9920	250476	0	True				
ANR	250485	OrExpression	class_type -> get_iterator || ( class_type -> parent && class_type -> parent -> get_iterator )		250476	0		||			
ANR	250486	PtrMemberAccess	class_type -> get_iterator		250476	0					
ANR	250487	Identifier	class_type		250476	0					
ANR	250488	Identifier	get_iterator		250476	1					
ANR	250489	AndExpression	class_type -> parent && class_type -> parent -> get_iterator		250476	1		&&			
ANR	250490	PtrMemberAccess	class_type -> parent		250476	0					
ANR	250491	Identifier	class_type		250476	0					
ANR	250492	Identifier	parent		250476	1					
ANR	250493	PtrMemberAccess	class_type -> parent -> get_iterator		250476	1					
ANR	250494	PtrMemberAccess	class_type -> parent		250476	0					
ANR	250495	Identifier	class_type		250476	0					
ANR	250496	Identifier	parent		250476	1					
ANR	250497	Identifier	get_iterator		250476	1					
ANR	250498	CompoundStatement		5:91:218:218	250476	1					
ANR	250499	ReturnStatement	return SUCCESS ;	312:2:9927:9941	250476	0	True				
ANR	250500	Identifier	SUCCESS		250476	0					
ANR	250501	ForStatement	for ( i = 0 ; i < class_type -> num_interfaces ; i ++ )		250476	2					
ANR	250502	ForInit	i = 0 ;	314:6:9952:9957	250476	0	True				
ANR	250503	AssignmentExpression	i = 0		250476	0		=			
ANR	250504	Identifier	i		250476	0					
ANR	250505	PrimaryExpression	0		250476	1					
ANR	250506	Condition	i < class_type -> num_interfaces	314:13:9959:9988	250476	1	True				
ANR	250507	RelationalExpression	i < class_type -> num_interfaces		250476	0		<			
ANR	250508	Identifier	i		250476	0					
ANR	250509	PtrMemberAccess	class_type -> num_interfaces		250476	1					
ANR	250510	Identifier	class_type		250476	0					
ANR	250511	Identifier	num_interfaces		250476	1					
ANR	250512	PostIncDecOperationExpression	i ++	314:45:9991:9993	250476	2	True				
ANR	250513	Identifier	i		250476	0					
ANR	250514	IncDec	++		250476	1					
ANR	250515	CompoundStatement		8:50:291:291	250476	3					
ANR	250516	IfStatement	if ( class_type -> interfaces [ i ] == zend_ce_aggregate || class_type -> interfaces [ i ] == zend_ce_iterator )		250476	0					
ANR	250517	Condition	class_type -> interfaces [ i ] == zend_ce_aggregate || class_type -> interfaces [ i ] == zend_ce_iterator	315:6:10004:10098	250476	0	True				
ANR	250518	OrExpression	class_type -> interfaces [ i ] == zend_ce_aggregate || class_type -> interfaces [ i ] == zend_ce_iterator		250476	0		||			
ANR	250519	EqualityExpression	class_type -> interfaces [ i ] == zend_ce_aggregate		250476	0		==			
ANR	250520	ArrayIndexing	class_type -> interfaces [ i ]		250476	0					
ANR	250521	PtrMemberAccess	class_type -> interfaces		250476	0					
ANR	250522	Identifier	class_type		250476	0					
ANR	250523	Identifier	interfaces		250476	1					
ANR	250524	Identifier	i		250476	1					
ANR	250525	Identifier	zend_ce_aggregate		250476	1					
ANR	250526	EqualityExpression	class_type -> interfaces [ i ] == zend_ce_iterator		250476	1		==			
ANR	250527	ArrayIndexing	class_type -> interfaces [ i ]		250476	0					
ANR	250528	PtrMemberAccess	class_type -> interfaces		250476	0					
ANR	250529	Identifier	class_type		250476	0					
ANR	250530	Identifier	interfaces		250476	1					
ANR	250531	Identifier	i		250476	1					
ANR	250532	Identifier	zend_ce_iterator		250476	1					
ANR	250533	CompoundStatement		9:103:396:396	250476	1					
ANR	250534	ReturnStatement	return SUCCESS ;	316:3:10106:10120	250476	0	True				
ANR	250535	Identifier	SUCCESS		250476	0					
ANR	250536	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Class %s must implement interface %s as part of either %s or %s"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( zend_ce_traversable -> name ) , ZSTR_VAL ( zend_ce_iterator -> name ) , ZSTR_VAL ( zend_ce_aggregate -> name ) )"	319:1:10130:10372	250476	3	True				
ANR	250537	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Class %s must implement interface %s as part of either %s or %s"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( zend_ce_traversable -> name ) , ZSTR_VAL ( zend_ce_iterator -> name ) , ZSTR_VAL ( zend_ce_aggregate -> name ) )"		250476	0					
ANR	250538	Callee	zend_error_noreturn		250476	0					
ANR	250539	Identifier	zend_error_noreturn		250476	0					
ANR	250540	ArgumentList	E_CORE_ERROR		250476	1					
ANR	250541	Argument	E_CORE_ERROR		250476	0					
ANR	250542	Identifier	E_CORE_ERROR		250476	0					
ANR	250543	Argument	"""Class %s must implement interface %s as part of either %s or %s"""		250476	1					
ANR	250544	PrimaryExpression	"""Class %s must implement interface %s as part of either %s or %s"""		250476	0					
ANR	250545	Argument	ZSTR_VAL ( class_type -> name )		250476	2					
ANR	250546	CallExpression	ZSTR_VAL ( class_type -> name )		250476	0					
ANR	250547	Callee	ZSTR_VAL		250476	0					
ANR	250548	Identifier	ZSTR_VAL		250476	0					
ANR	250549	ArgumentList	class_type -> name		250476	1					
ANR	250550	Argument	class_type -> name		250476	0					
ANR	250551	PtrMemberAccess	class_type -> name		250476	0					
ANR	250552	Identifier	class_type		250476	0					
ANR	250553	Identifier	name		250476	1					
ANR	250554	Argument	ZSTR_VAL ( zend_ce_traversable -> name )		250476	3					
ANR	250555	CallExpression	ZSTR_VAL ( zend_ce_traversable -> name )		250476	0					
ANR	250556	Callee	ZSTR_VAL		250476	0					
ANR	250557	Identifier	ZSTR_VAL		250476	0					
ANR	250558	ArgumentList	zend_ce_traversable -> name		250476	1					
ANR	250559	Argument	zend_ce_traversable -> name		250476	0					
ANR	250560	PtrMemberAccess	zend_ce_traversable -> name		250476	0					
ANR	250561	Identifier	zend_ce_traversable		250476	0					
ANR	250562	Identifier	name		250476	1					
ANR	250563	Argument	ZSTR_VAL ( zend_ce_iterator -> name )		250476	4					
ANR	250564	CallExpression	ZSTR_VAL ( zend_ce_iterator -> name )		250476	0					
ANR	250565	Callee	ZSTR_VAL		250476	0					
ANR	250566	Identifier	ZSTR_VAL		250476	0					
ANR	250567	ArgumentList	zend_ce_iterator -> name		250476	1					
ANR	250568	Argument	zend_ce_iterator -> name		250476	0					
ANR	250569	PtrMemberAccess	zend_ce_iterator -> name		250476	0					
ANR	250570	Identifier	zend_ce_iterator		250476	0					
ANR	250571	Identifier	name		250476	1					
ANR	250572	Argument	ZSTR_VAL ( zend_ce_aggregate -> name )		250476	5					
ANR	250573	CallExpression	ZSTR_VAL ( zend_ce_aggregate -> name )		250476	0					
ANR	250574	Callee	ZSTR_VAL		250476	0					
ANR	250575	Identifier	ZSTR_VAL		250476	0					
ANR	250576	ArgumentList	zend_ce_aggregate -> name		250476	1					
ANR	250577	Argument	zend_ce_aggregate -> name		250476	0					
ANR	250578	PtrMemberAccess	zend_ce_aggregate -> name		250476	0					
ANR	250579	Identifier	zend_ce_aggregate		250476	0					
ANR	250580	Identifier	name		250476	1					
ANR	250581	ReturnStatement	return FAILURE ;	324:1:10375:10389	250476	4	True				
ANR	250582	Identifier	FAILURE		250476	0					
ANR	250583	ReturnType	static int		250476	1					
ANR	250584	Identifier	zend_implement_traversable		250476	2					
ANR	250585	ParameterList	"zend_class_entry * interface , zend_class_entry * class_type"		250476	3					
ANR	250586	Parameter	zend_class_entry * interface	306:38:9645:9671	250476	0	True				
ANR	250587	ParameterType	zend_class_entry *		250476	0					
ANR	250588	Identifier	interface		250476	1					
ANR	250589	Parameter	zend_class_entry * class_type	306:67:9674:9701	250476	1	True				
ANR	250590	ParameterType	zend_class_entry *		250476	0					
ANR	250591	Identifier	class_type		250476	1					
ANR	250592	CFGEntryNode	ENTRY		250476		True				
ANR	250593	CFGExitNode	EXIT		250476		True				
ANR	250594	Symbol	* class_type -> interfaces		250476						
ANR	250595	Symbol	zend_ce_iterator		250476						
ANR	250596	Symbol	zend_ce_iterator -> name		250476						
ANR	250597	Symbol	interface		250476						
ANR	250598	Symbol	zend_ce_aggregate -> name		250476						
ANR	250599	Symbol	* class_type -> parent		250476						
ANR	250600	Symbol	class_type -> get_iterator		250476						
ANR	250601	Symbol	class_type		250476						
ANR	250602	Symbol	* zend_ce_aggregate		250476						
ANR	250603	Symbol	E_CORE_ERROR		250476						
ANR	250604	Symbol	class_type -> num_interfaces		250476						
ANR	250605	Symbol	class_type -> interfaces		250476						
ANR	250606	Symbol	zend_ce_traversable		250476						
ANR	250607	Symbol	zend_ce_traversable -> name		250476						
ANR	250608	Symbol	class_type -> parent -> get_iterator		250476						
ANR	250609	Symbol	class_type -> name		250476						
ANR	250610	Symbol	SUCCESS		250476						
ANR	250611	Symbol	i		250476						
ANR	250612	Symbol	zend_ce_aggregate		250476						
ANR	250613	Symbol	class_type -> parent		250476						
ANR	250614	Symbol	FAILURE		250476						
ANR	250615	Symbol	ZSTR_VAL		250476						
ANR	250616	Symbol	* zend_ce_iterator		250476						
ANR	250617	Symbol	* zend_ce_traversable		250476						
ANR	250618	Symbol	* i		250476						
ANR	250619	Symbol	* class_type		250476						
ANR	250620	Symbol	* * class_type		250476						
ANR	250621	Function	zend_implement_aggregate	329:0:10439:11567							
ANR	250622	FunctionDef	"zend_implement_aggregate (zend_class_entry * interface , zend_class_entry * class_type)"		250621	0					
ANR	250623	CompoundStatement		330:0:10534:11567	250621	0					
ANR	250624	IdentifierDeclStatement	uint32_t i ;	331:1:10537:10547	250621	0	True				
ANR	250625	IdentifierDecl	i		250621	0					
ANR	250626	IdentifierDeclType	uint32_t		250621	0					
ANR	250627	Identifier	i		250621	1					
ANR	250628	IdentifierDeclStatement	int t = - 1 ;	332:1:10550:10560	250621	1	True				
ANR	250629	IdentifierDecl	t = - 1		250621	0					
ANR	250630	IdentifierDeclType	int		250621	0					
ANR	250631	Identifier	t		250621	1					
ANR	250632	AssignmentExpression	t = - 1		250621	2		=			
ANR	250633	Identifier	t		250621	0					
ANR	250634	UnaryOperationExpression	- 1		250621	1					
ANR	250635	UnaryOperator	-		250621	0					
ANR	250636	PrimaryExpression	1		250621	1					
ANR	250637	IfStatement	if ( class_type -> get_iterator )		250621	2					
ANR	250638	Condition	class_type -> get_iterator	334:5:10568:10591	250621	0	True				
ANR	250639	PtrMemberAccess	class_type -> get_iterator		250621	0					
ANR	250640	Identifier	class_type		250621	0					
ANR	250641	Identifier	get_iterator		250621	1					
ANR	250642	CompoundStatement		5:31:59:59	250621	1					
ANR	250643	IfStatement	if ( class_type -> type == ZEND_INTERNAL_CLASS )		250621	0					
ANR	250644	Condition	class_type -> type == ZEND_INTERNAL_CLASS	335:6:10602:10640	250621	0	True				
ANR	250645	EqualityExpression	class_type -> type == ZEND_INTERNAL_CLASS		250621	0		==			
ANR	250646	PtrMemberAccess	class_type -> type		250621	0					
ANR	250647	Identifier	class_type		250621	0					
ANR	250648	Identifier	type		250621	1					
ANR	250649	Identifier	ZEND_INTERNAL_CLASS		250621	1					
ANR	250650	CompoundStatement		6:47:108:108	250621	1					
ANR	250651	ReturnStatement	return SUCCESS ;	337:3:10718:10732	250621	0	True				
ANR	250652	Identifier	SUCCESS		250621	0					
ANR	250653	ElseStatement	else		250621	0					
ANR	250654	IfStatement	if ( class_type -> get_iterator != zend_user_it_get_new_iterator )		250621	0					
ANR	250655	Condition	class_type -> get_iterator != zend_user_it_get_new_iterator	338:13:10747:10803	250621	0	True				
ANR	250656	EqualityExpression	class_type -> get_iterator != zend_user_it_get_new_iterator		250621	0		!=			
ANR	250657	PtrMemberAccess	class_type -> get_iterator		250621	0					
ANR	250658	Identifier	class_type		250621	0					
ANR	250659	Identifier	get_iterator		250621	1					
ANR	250660	Identifier	zend_user_it_get_new_iterator		250621	1					
ANR	250661	CompoundStatement		9:72:271:271	250621	1					
ANR	250662	IfStatement	if ( class_type -> num_interfaces )		250621	0					
ANR	250663	Condition	class_type -> num_interfaces	340:7:10912:10937	250621	0	True				
ANR	250664	PtrMemberAccess	class_type -> num_interfaces		250621	0					
ANR	250665	Identifier	class_type		250621	0					
ANR	250666	Identifier	num_interfaces		250621	1					
ANR	250667	CompoundStatement		11:35:405:405	250621	1					
ANR	250668	ForStatement	for ( i = 0 ; i < class_type -> num_interfaces ; i ++ )		250621	0					
ANR	250669	ForInit	i = 0 ;	341:9:10951:10956	250621	0	True				
ANR	250670	AssignmentExpression	i = 0		250621	0		=			
ANR	250671	Identifier	i		250621	0					
ANR	250672	PrimaryExpression	0		250621	1					
ANR	250673	Condition	i < class_type -> num_interfaces	341:16:10958:10987	250621	1	True				
ANR	250674	RelationalExpression	i < class_type -> num_interfaces		250621	0		<			
ANR	250675	Identifier	i		250621	0					
ANR	250676	PtrMemberAccess	class_type -> num_interfaces		250621	1					
ANR	250677	Identifier	class_type		250621	0					
ANR	250678	Identifier	num_interfaces		250621	1					
ANR	250679	PostIncDecOperationExpression	i ++	341:48:10990:10992	250621	2	True				
ANR	250680	Identifier	i		250621	0					
ANR	250681	IncDec	++		250621	1					
ANR	250682	CompoundStatement		12:53:460:460	250621	3					
ANR	250683	IfStatement	if ( class_type -> interfaces [ i ] == zend_ce_iterator )		250621	0					
ANR	250684	Condition	class_type -> interfaces [ i ] == zend_ce_iterator	342:9:11006:11050	250621	0	True				
ANR	250685	EqualityExpression	class_type -> interfaces [ i ] == zend_ce_iterator		250621	0		==			
ANR	250686	ArrayIndexing	class_type -> interfaces [ i ]		250621	0					
ANR	250687	PtrMemberAccess	class_type -> interfaces		250621	0					
ANR	250688	Identifier	class_type		250621	0					
ANR	250689	Identifier	interfaces		250621	1					
ANR	250690	Identifier	i		250621	1					
ANR	250691	Identifier	zend_ce_iterator		250621	1					
ANR	250692	CompoundStatement		13:56:518:518	250621	1					
ANR	250693	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Class %s cannot implement both %s and %s at the same time"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( interface -> name ) , ZSTR_VAL ( zend_ce_iterator -> name ) )"	343:6:11061:11266	250621	0	True				
ANR	250694	CallExpression	"zend_error_noreturn ( E_ERROR , ""Class %s cannot implement both %s and %s at the same time"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( interface -> name ) , ZSTR_VAL ( zend_ce_iterator -> name ) )"		250621	0					
ANR	250695	Callee	zend_error_noreturn		250621	0					
ANR	250696	Identifier	zend_error_noreturn		250621	0					
ANR	250697	ArgumentList	E_ERROR		250621	1					
ANR	250698	Argument	E_ERROR		250621	0					
ANR	250699	Identifier	E_ERROR		250621	0					
ANR	250700	Argument	"""Class %s cannot implement both %s and %s at the same time"""		250621	1					
ANR	250701	PrimaryExpression	"""Class %s cannot implement both %s and %s at the same time"""		250621	0					
ANR	250702	Argument	ZSTR_VAL ( class_type -> name )		250621	2					
ANR	250703	CallExpression	ZSTR_VAL ( class_type -> name )		250621	0					
ANR	250704	Callee	ZSTR_VAL		250621	0					
ANR	250705	Identifier	ZSTR_VAL		250621	0					
ANR	250706	ArgumentList	class_type -> name		250621	1					
ANR	250707	Argument	class_type -> name		250621	0					
ANR	250708	PtrMemberAccess	class_type -> name		250621	0					
ANR	250709	Identifier	class_type		250621	0					
ANR	250710	Identifier	name		250621	1					
ANR	250711	Argument	ZSTR_VAL ( interface -> name )		250621	3					
ANR	250712	CallExpression	ZSTR_VAL ( interface -> name )		250621	0					
ANR	250713	Callee	ZSTR_VAL		250621	0					
ANR	250714	Identifier	ZSTR_VAL		250621	0					
ANR	250715	ArgumentList	interface -> name		250621	1					
ANR	250716	Argument	interface -> name		250621	0					
ANR	250717	PtrMemberAccess	interface -> name		250621	0					
ANR	250718	Identifier	interface		250621	0					
ANR	250719	Identifier	name		250621	1					
ANR	250720	Argument	ZSTR_VAL ( zend_ce_iterator -> name )		250621	4					
ANR	250721	CallExpression	ZSTR_VAL ( zend_ce_iterator -> name )		250621	0					
ANR	250722	Callee	ZSTR_VAL		250621	0					
ANR	250723	Identifier	ZSTR_VAL		250621	0					
ANR	250724	ArgumentList	zend_ce_iterator -> name		250621	1					
ANR	250725	Argument	zend_ce_iterator -> name		250621	0					
ANR	250726	PtrMemberAccess	zend_ce_iterator -> name		250621	0					
ANR	250727	Identifier	zend_ce_iterator		250621	0					
ANR	250728	Identifier	name		250621	1					
ANR	250729	ReturnStatement	return FAILURE ;	347:6:11274:11288	250621	1	True				
ANR	250730	Identifier	FAILURE		250621	0					
ANR	250731	IfStatement	if ( class_type -> interfaces [ i ] == zend_ce_traversable )		250621	1					
ANR	250732	Condition	class_type -> interfaces [ i ] == zend_ce_traversable	349:9:11306:11353	250621	0	True				
ANR	250733	EqualityExpression	class_type -> interfaces [ i ] == zend_ce_traversable		250621	0		==			
ANR	250734	ArrayIndexing	class_type -> interfaces [ i ]		250621	0					
ANR	250735	PtrMemberAccess	class_type -> interfaces		250621	0					
ANR	250736	Identifier	class_type		250621	0					
ANR	250737	Identifier	interfaces		250621	1					
ANR	250738	Identifier	i		250621	1					
ANR	250739	Identifier	zend_ce_traversable		250621	1					
ANR	250740	CompoundStatement		20:59:821:821	250621	1					
ANR	250741	ExpressionStatement	t = i	350:6:11364:11369	250621	0	True				
ANR	250742	AssignmentExpression	t = i		250621	0		=			
ANR	250743	Identifier	t		250621	0					
ANR	250744	Identifier	i		250621	1					
ANR	250745	IfStatement	if ( t == - 1 )		250621	1					
ANR	250746	Condition	t == - 1	354:7:11396:11402	250621	0	True				
ANR	250747	EqualityExpression	t == - 1		250621	0		==			
ANR	250748	Identifier	t		250621	0					
ANR	250749	UnaryOperationExpression	- 1		250621	1					
ANR	250750	UnaryOperator	-		250621	0					
ANR	250751	PrimaryExpression	1		250621	1					
ANR	250752	CompoundStatement		25:16:870:870	250621	1					
ANR	250753	ReturnStatement	return FAILURE ;	355:4:11411:11425	250621	0	True				
ANR	250754	Identifier	FAILURE		250621	0					
ANR	250755	ExpressionStatement	class_type -> iterator_funcs . zf_new_iterator = NULL	359:1:11440:11489	250621	3	True				
ANR	250756	AssignmentExpression	class_type -> iterator_funcs . zf_new_iterator = NULL		250621	0		=			
ANR	250757	MemberAccess	class_type -> iterator_funcs . zf_new_iterator		250621	0					
ANR	250758	PtrMemberAccess	class_type -> iterator_funcs		250621	0					
ANR	250759	Identifier	class_type		250621	0					
ANR	250760	Identifier	iterator_funcs		250621	1					
ANR	250761	Identifier	zf_new_iterator		250621	1					
ANR	250762	Identifier	NULL		250621	1					
ANR	250763	ExpressionStatement	class_type -> get_iterator = zend_user_it_get_new_iterator	360:1:11492:11548	250621	4	True				
ANR	250764	AssignmentExpression	class_type -> get_iterator = zend_user_it_get_new_iterator		250621	0		=			
ANR	250765	PtrMemberAccess	class_type -> get_iterator		250621	0					
ANR	250766	Identifier	class_type		250621	0					
ANR	250767	Identifier	get_iterator		250621	1					
ANR	250768	Identifier	zend_user_it_get_new_iterator		250621	1					
ANR	250769	ReturnStatement	return SUCCESS ;	361:1:11551:11565	250621	5	True				
ANR	250770	Identifier	SUCCESS		250621	0					
ANR	250771	ReturnType	static int		250621	1					
ANR	250772	Identifier	zend_implement_aggregate		250621	2					
ANR	250773	ParameterList	"zend_class_entry * interface , zend_class_entry * class_type"		250621	3					
ANR	250774	Parameter	zend_class_entry * interface	329:36:10475:10501	250621	0	True				
ANR	250775	ParameterType	zend_class_entry *		250621	0					
ANR	250776	Identifier	interface		250621	1					
ANR	250777	Parameter	zend_class_entry * class_type	329:65:10504:10531	250621	1	True				
ANR	250778	ParameterType	zend_class_entry *		250621	0					
ANR	250779	Identifier	class_type		250621	1					
ANR	250780	CFGEntryNode	ENTRY		250621		True				
ANR	250781	CFGExitNode	EXIT		250621		True				
ANR	250782	Symbol	* class_type -> interfaces		250621						
ANR	250783	Symbol	zend_ce_iterator		250621						
ANR	250784	Symbol	class_type -> iterator_funcs		250621						
ANR	250785	Symbol	zend_ce_iterator -> name		250621						
ANR	250786	Symbol	interface		250621						
ANR	250787	Symbol	class_type -> type		250621						
ANR	250788	Symbol	class_type -> get_iterator		250621						
ANR	250789	Symbol	class_type		250621						
ANR	250790	Symbol	class_type -> num_interfaces		250621						
ANR	250791	Symbol	class_type -> interfaces		250621						
ANR	250792	Symbol	zend_ce_traversable		250621						
ANR	250793	Symbol	class_type -> name		250621						
ANR	250794	Symbol	ZEND_INTERNAL_CLASS		250621						
ANR	250795	Symbol	SUCCESS		250621						
ANR	250796	Symbol	zend_user_it_get_new_iterator		250621						
ANR	250797	Symbol	NULL		250621						
ANR	250798	Symbol	interface -> name		250621						
ANR	250799	Symbol	i		250621						
ANR	250800	Symbol	* interface		250621						
ANR	250801	Symbol	FAILURE		250621						
ANR	250802	Symbol	ZSTR_VAL		250621						
ANR	250803	Symbol	* zend_ce_iterator		250621						
ANR	250804	Symbol	class_type -> iterator_funcs . zf_new_iterator		250621						
ANR	250805	Symbol	* i		250621						
ANR	250806	Symbol	E_ERROR		250621						
ANR	250807	Symbol	t		250621						
ANR	250808	Symbol	* class_type		250621						
ANR	250809	Symbol	* * class_type		250621						
ANR	250810	Function	zend_implement_iterator	366:0:11614:12726							
ANR	250811	FunctionDef	"zend_implement_iterator (zend_class_entry * interface , zend_class_entry * class_type)"		250810	0					
ANR	250812	CompoundStatement		367:0:11708:12726	250810	0					
ANR	250813	IfStatement	if ( class_type -> get_iterator && class_type -> get_iterator != zend_user_it_get_iterator )		250810	0					
ANR	250814	Condition	class_type -> get_iterator && class_type -> get_iterator != zend_user_it_get_iterator	368:5:11715:11795	250810	0	True				
ANR	250815	AndExpression	class_type -> get_iterator && class_type -> get_iterator != zend_user_it_get_iterator		250810	0		&&			
ANR	250816	PtrMemberAccess	class_type -> get_iterator		250810	0					
ANR	250817	Identifier	class_type		250810	0					
ANR	250818	Identifier	get_iterator		250810	1					
ANR	250819	EqualityExpression	class_type -> get_iterator != zend_user_it_get_iterator		250810	1		!=			
ANR	250820	PtrMemberAccess	class_type -> get_iterator		250810	0					
ANR	250821	Identifier	class_type		250810	0					
ANR	250822	Identifier	get_iterator		250810	1					
ANR	250823	Identifier	zend_user_it_get_iterator		250810	1					
ANR	250824	CompoundStatement		2:88:89:89	250810	1					
ANR	250825	IfStatement	if ( class_type -> type == ZEND_INTERNAL_CLASS )		250810	0					
ANR	250826	Condition	class_type -> type == ZEND_INTERNAL_CLASS	369:6:11806:11844	250810	0	True				
ANR	250827	EqualityExpression	class_type -> type == ZEND_INTERNAL_CLASS		250810	0		==			
ANR	250828	PtrMemberAccess	class_type -> type		250810	0					
ANR	250829	Identifier	class_type		250810	0					
ANR	250830	Identifier	type		250810	1					
ANR	250831	Identifier	ZEND_INTERNAL_CLASS		250810	1					
ANR	250832	CompoundStatement		3:47:138:138	250810	1					
ANR	250833	ReturnStatement	return SUCCESS ;	371:3:11926:11940	250810	0	True				
ANR	250834	Identifier	SUCCESS		250810	0					
ANR	250835	ElseStatement	else		250810	0					
ANR	250836	CompoundStatement		6:9:242:242	250810	0					
ANR	250837	IfStatement	if ( class_type -> get_iterator == zend_user_it_get_new_iterator )		250810	0					
ANR	250838	Condition	class_type -> get_iterator == zend_user_it_get_new_iterator	374:7:12008:12064	250810	0	True				
ANR	250839	EqualityExpression	class_type -> get_iterator == zend_user_it_get_new_iterator		250810	0		==			
ANR	250840	PtrMemberAccess	class_type -> get_iterator		250810	0					
ANR	250841	Identifier	class_type		250810	0					
ANR	250842	Identifier	get_iterator		250810	1					
ANR	250843	Identifier	zend_user_it_get_new_iterator		250810	1					
ANR	250844	CompoundStatement		8:66:358:358	250810	1					
ANR	250845	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Class %s cannot implement both %s and %s at the same time"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( interface -> name ) , ZSTR_VAL ( zend_ce_aggregate -> name ) )"	375:4:12073:12273	250810	0	True				
ANR	250846	CallExpression	"zend_error_noreturn ( E_ERROR , ""Class %s cannot implement both %s and %s at the same time"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( interface -> name ) , ZSTR_VAL ( zend_ce_aggregate -> name ) )"		250810	0					
ANR	250847	Callee	zend_error_noreturn		250810	0					
ANR	250848	Identifier	zend_error_noreturn		250810	0					
ANR	250849	ArgumentList	E_ERROR		250810	1					
ANR	250850	Argument	E_ERROR		250810	0					
ANR	250851	Identifier	E_ERROR		250810	0					
ANR	250852	Argument	"""Class %s cannot implement both %s and %s at the same time"""		250810	1					
ANR	250853	PrimaryExpression	"""Class %s cannot implement both %s and %s at the same time"""		250810	0					
ANR	250854	Argument	ZSTR_VAL ( class_type -> name )		250810	2					
ANR	250855	CallExpression	ZSTR_VAL ( class_type -> name )		250810	0					
ANR	250856	Callee	ZSTR_VAL		250810	0					
ANR	250857	Identifier	ZSTR_VAL		250810	0					
ANR	250858	ArgumentList	class_type -> name		250810	1					
ANR	250859	Argument	class_type -> name		250810	0					
ANR	250860	PtrMemberAccess	class_type -> name		250810	0					
ANR	250861	Identifier	class_type		250810	0					
ANR	250862	Identifier	name		250810	1					
ANR	250863	Argument	ZSTR_VAL ( interface -> name )		250810	3					
ANR	250864	CallExpression	ZSTR_VAL ( interface -> name )		250810	0					
ANR	250865	Callee	ZSTR_VAL		250810	0					
ANR	250866	Identifier	ZSTR_VAL		250810	0					
ANR	250867	ArgumentList	interface -> name		250810	1					
ANR	250868	Argument	interface -> name		250810	0					
ANR	250869	PtrMemberAccess	interface -> name		250810	0					
ANR	250870	Identifier	interface		250810	0					
ANR	250871	Identifier	name		250810	1					
ANR	250872	Argument	ZSTR_VAL ( zend_ce_aggregate -> name )		250810	4					
ANR	250873	CallExpression	ZSTR_VAL ( zend_ce_aggregate -> name )		250810	0					
ANR	250874	Callee	ZSTR_VAL		250810	0					
ANR	250875	Identifier	ZSTR_VAL		250810	0					
ANR	250876	ArgumentList	zend_ce_aggregate -> name		250810	1					
ANR	250877	Argument	zend_ce_aggregate -> name		250810	0					
ANR	250878	PtrMemberAccess	zend_ce_aggregate -> name		250810	0					
ANR	250879	Identifier	zend_ce_aggregate		250810	0					
ANR	250880	Identifier	name		250810	1					
ANR	250881	ReturnStatement	return FAILURE ;	380:3:12283:12297	250810	1	True				
ANR	250882	Identifier	FAILURE		250810	0					
ANR	250883	ExpressionStatement	class_type -> get_iterator = zend_user_it_get_iterator	383:1:12307:12359	250810	1	True				
ANR	250884	AssignmentExpression	class_type -> get_iterator = zend_user_it_get_iterator		250810	0		=			
ANR	250885	PtrMemberAccess	class_type -> get_iterator		250810	0					
ANR	250886	Identifier	class_type		250810	0					
ANR	250887	Identifier	get_iterator		250810	1					
ANR	250888	Identifier	zend_user_it_get_iterator		250810	1					
ANR	250889	ExpressionStatement	class_type -> iterator_funcs . zf_valid = NULL	384:1:12362:12404	250810	2	True				
ANR	250890	AssignmentExpression	class_type -> iterator_funcs . zf_valid = NULL		250810	0		=			
ANR	250891	MemberAccess	class_type -> iterator_funcs . zf_valid		250810	0					
ANR	250892	PtrMemberAccess	class_type -> iterator_funcs		250810	0					
ANR	250893	Identifier	class_type		250810	0					
ANR	250894	Identifier	iterator_funcs		250810	1					
ANR	250895	Identifier	zf_valid		250810	1					
ANR	250896	Identifier	NULL		250810	1					
ANR	250897	ExpressionStatement	class_type -> iterator_funcs . zf_current = NULL	385:1:12407:12451	250810	3	True				
ANR	250898	AssignmentExpression	class_type -> iterator_funcs . zf_current = NULL		250810	0		=			
ANR	250899	MemberAccess	class_type -> iterator_funcs . zf_current		250810	0					
ANR	250900	PtrMemberAccess	class_type -> iterator_funcs		250810	0					
ANR	250901	Identifier	class_type		250810	0					
ANR	250902	Identifier	iterator_funcs		250810	1					
ANR	250903	Identifier	zf_current		250810	1					
ANR	250904	Identifier	NULL		250810	1					
ANR	250905	ExpressionStatement	class_type -> iterator_funcs . zf_key = NULL	386:1:12454:12494	250810	4	True				
ANR	250906	AssignmentExpression	class_type -> iterator_funcs . zf_key = NULL		250810	0		=			
ANR	250907	MemberAccess	class_type -> iterator_funcs . zf_key		250810	0					
ANR	250908	PtrMemberAccess	class_type -> iterator_funcs		250810	0					
ANR	250909	Identifier	class_type		250810	0					
ANR	250910	Identifier	iterator_funcs		250810	1					
ANR	250911	Identifier	zf_key		250810	1					
ANR	250912	Identifier	NULL		250810	1					
ANR	250913	ExpressionStatement	class_type -> iterator_funcs . zf_next = NULL	387:1:12497:12538	250810	5	True				
ANR	250914	AssignmentExpression	class_type -> iterator_funcs . zf_next = NULL		250810	0		=			
ANR	250915	MemberAccess	class_type -> iterator_funcs . zf_next		250810	0					
ANR	250916	PtrMemberAccess	class_type -> iterator_funcs		250810	0					
ANR	250917	Identifier	class_type		250810	0					
ANR	250918	Identifier	iterator_funcs		250810	1					
ANR	250919	Identifier	zf_next		250810	1					
ANR	250920	Identifier	NULL		250810	1					
ANR	250921	ExpressionStatement	class_type -> iterator_funcs . zf_rewind = NULL	388:1:12541:12584	250810	6	True				
ANR	250922	AssignmentExpression	class_type -> iterator_funcs . zf_rewind = NULL		250810	0		=			
ANR	250923	MemberAccess	class_type -> iterator_funcs . zf_rewind		250810	0					
ANR	250924	PtrMemberAccess	class_type -> iterator_funcs		250810	0					
ANR	250925	Identifier	class_type		250810	0					
ANR	250926	Identifier	iterator_funcs		250810	1					
ANR	250927	Identifier	zf_rewind		250810	1					
ANR	250928	Identifier	NULL		250810	1					
ANR	250929	IfStatement	if ( ! class_type -> iterator_funcs . funcs )		250810	7					
ANR	250930	Condition	! class_type -> iterator_funcs . funcs	389:5:12591:12623	250810	0	True				
ANR	250931	UnaryOperationExpression	! class_type -> iterator_funcs . funcs		250810	0					
ANR	250932	UnaryOperator	!		250810	0					
ANR	250933	MemberAccess	class_type -> iterator_funcs . funcs		250810	1					
ANR	250934	PtrMemberAccess	class_type -> iterator_funcs		250810	0					
ANR	250935	Identifier	class_type		250810	0					
ANR	250936	Identifier	iterator_funcs		250810	1					
ANR	250937	Identifier	funcs		250810	1					
ANR	250938	CompoundStatement		23:40:917:917	250810	1					
ANR	250939	ExpressionStatement	class_type -> iterator_funcs . funcs = & zend_interface_iterator_funcs_iterator	390:2:12630:12704	250810	0	True				
ANR	250940	AssignmentExpression	class_type -> iterator_funcs . funcs = & zend_interface_iterator_funcs_iterator		250810	0		=			
ANR	250941	MemberAccess	class_type -> iterator_funcs . funcs		250810	0					
ANR	250942	PtrMemberAccess	class_type -> iterator_funcs		250810	0					
ANR	250943	Identifier	class_type		250810	0					
ANR	250944	Identifier	iterator_funcs		250810	1					
ANR	250945	Identifier	funcs		250810	1					
ANR	250946	UnaryOperationExpression	& zend_interface_iterator_funcs_iterator		250810	1					
ANR	250947	UnaryOperator	&		250810	0					
ANR	250948	Identifier	zend_interface_iterator_funcs_iterator		250810	1					
ANR	250949	ReturnStatement	return SUCCESS ;	392:1:12710:12724	250810	8	True				
ANR	250950	Identifier	SUCCESS		250810	0					
ANR	250951	ReturnType	static int		250810	1					
ANR	250952	Identifier	zend_implement_iterator		250810	2					
ANR	250953	ParameterList	"zend_class_entry * interface , zend_class_entry * class_type"		250810	3					
ANR	250954	Parameter	zend_class_entry * interface	366:35:11649:11675	250810	0	True				
ANR	250955	ParameterType	zend_class_entry *		250810	0					
ANR	250956	Identifier	interface		250810	1					
ANR	250957	Parameter	zend_class_entry * class_type	366:64:11678:11705	250810	1	True				
ANR	250958	ParameterType	zend_class_entry *		250810	0					
ANR	250959	Identifier	class_type		250810	1					
ANR	250960	CFGEntryNode	ENTRY		250810		True				
ANR	250961	CFGExitNode	EXIT		250810		True				
ANR	250962	Symbol	class_type -> iterator_funcs		250810						
ANR	250963	Symbol	class_type -> iterator_funcs . zf_current		250810						
ANR	250964	Symbol	class_type -> iterator_funcs . zf_next		250810						
ANR	250965	Symbol	interface		250810						
ANR	250966	Symbol	class_type -> type		250810						
ANR	250967	Symbol	zend_ce_aggregate -> name		250810						
ANR	250968	Symbol	& zend_interface_iterator_funcs_iterator		250810						
ANR	250969	Symbol	class_type -> get_iterator		250810						
ANR	250970	Symbol	class_type		250810						
ANR	250971	Symbol	* zend_ce_aggregate		250810						
ANR	250972	Symbol	class_type -> iterator_funcs . zf_valid		250810						
ANR	250973	Symbol	class_type -> name		250810						
ANR	250974	Symbol	ZEND_INTERNAL_CLASS		250810						
ANR	250975	Symbol	class_type -> iterator_funcs . zf_rewind		250810						
ANR	250976	Symbol	SUCCESS		250810						
ANR	250977	Symbol	zend_user_it_get_new_iterator		250810						
ANR	250978	Symbol	NULL		250810						
ANR	250979	Symbol	interface -> name		250810						
ANR	250980	Symbol	zend_ce_aggregate		250810						
ANR	250981	Symbol	* interface		250810						
ANR	250982	Symbol	FAILURE		250810						
ANR	250983	Symbol	class_type -> iterator_funcs . zf_key		250810						
ANR	250984	Symbol	ZSTR_VAL		250810						
ANR	250985	Symbol	E_ERROR		250810						
ANR	250986	Symbol	zend_user_it_get_iterator		250810						
ANR	250987	Symbol	* class_type		250810						
ANR	250988	Symbol	class_type -> iterator_funcs . funcs		250810						
ANR	250989	Function	zend_implement_arrayaccess	397:0:12776:13157							
ANR	250990	FunctionDef	"zend_implement_arrayaccess (zend_class_entry * interface , zend_class_entry * class_type)"		250989	0					
ANR	250991	CompoundStatement		398:0:12873:13157	250989	0					
ANR	250992	IfStatement	if ( ht -> read_dimension != zend_std_read_dimension || ht -> write_dimension != zend_std_write_dimension || ht -> has_dimension != zend_std_has_dimension || ht -> unset_dimension != zend_std_unset_dimension )		250989	0					
ANR	250993	Condition	ht -> read_dimension != zend_std_read_dimension || ht -> write_dimension != zend_std_write_dimension || ht -> has_dimension != zend_std_has_dimension || ht -> unset_dimension != zend_std_unset_dimension	401:5:12908:13107	250989	0	True				
ANR	250994	OrExpression	ht -> read_dimension != zend_std_read_dimension || ht -> write_dimension != zend_std_write_dimension || ht -> has_dimension != zend_std_has_dimension || ht -> unset_dimension != zend_std_unset_dimension		250989	0		||			
ANR	250995	EqualityExpression	ht -> read_dimension != zend_std_read_dimension		250989	0		!=			
ANR	250996	PtrMemberAccess	ht -> read_dimension		250989	0					
ANR	250997	Identifier	ht		250989	0					
ANR	250998	Identifier	read_dimension		250989	1					
ANR	250999	Identifier	zend_std_read_dimension		250989	1					
ANR	251000	OrExpression	ht -> write_dimension != zend_std_write_dimension || ht -> has_dimension != zend_std_has_dimension || ht -> unset_dimension != zend_std_unset_dimension		250989	1		||			
ANR	251001	EqualityExpression	ht -> write_dimension != zend_std_write_dimension		250989	0		!=			
ANR	251002	PtrMemberAccess	ht -> write_dimension		250989	0					
ANR	251003	Identifier	ht		250989	0					
ANR	251004	Identifier	write_dimension		250989	1					
ANR	251005	Identifier	zend_std_write_dimension		250989	1					
ANR	251006	OrExpression	ht -> has_dimension != zend_std_has_dimension || ht -> unset_dimension != zend_std_unset_dimension		250989	1		||			
ANR	251007	EqualityExpression	ht -> has_dimension != zend_std_has_dimension		250989	0		!=			
ANR	251008	PtrMemberAccess	ht -> has_dimension		250989	0					
ANR	251009	Identifier	ht		250989	0					
ANR	251010	Identifier	has_dimension		250989	1					
ANR	251011	Identifier	zend_std_has_dimension		250989	1					
ANR	251012	EqualityExpression	ht -> unset_dimension != zend_std_unset_dimension		250989	1		!=			
ANR	251013	PtrMemberAccess	ht -> unset_dimension		250989	0					
ANR	251014	Identifier	ht		250989	0					
ANR	251015	Identifier	unset_dimension		250989	1					
ANR	251016	Identifier	zend_std_unset_dimension		250989	1					
ANR	251017	CompoundStatement		7:54:236:236	250989	1					
ANR	251018	ReturnStatement	return FAILURE ;	405:2:13114:13128	250989	0	True				
ANR	251019	Identifier	FAILURE		250989	0					
ANR	251020	ReturnStatement	return SUCCESS ;	408:1:13141:13155	250989	1	True				
ANR	251021	Identifier	SUCCESS		250989	0					
ANR	251022	ReturnType	static int		250989	1					
ANR	251023	Identifier	zend_implement_arrayaccess		250989	2					
ANR	251024	ParameterList	"zend_class_entry * interface , zend_class_entry * class_type"		250989	3					
ANR	251025	Parameter	zend_class_entry * interface	397:38:12814:12840	250989	0	True				
ANR	251026	ParameterType	zend_class_entry *		250989	0					
ANR	251027	Identifier	interface		250989	1					
ANR	251028	Parameter	zend_class_entry * class_type	397:67:12843:12870	250989	1	True				
ANR	251029	ParameterType	zend_class_entry *		250989	0					
ANR	251030	Identifier	class_type		250989	1					
ANR	251031	CFGEntryNode	ENTRY		250989		True				
ANR	251032	CFGExitNode	EXIT		250989		True				
ANR	251033	Symbol	SUCCESS		250989						
ANR	251034	Symbol	zend_std_write_dimension		250989						
ANR	251035	Symbol	zend_std_read_dimension		250989						
ANR	251036	Symbol	interface		250989						
ANR	251037	Symbol	ht		250989						
ANR	251038	Symbol	FAILURE		250989						
ANR	251039	Symbol	zend_std_unset_dimension		250989						
ANR	251040	Symbol	* ht		250989						
ANR	251041	Symbol	class_type		250989						
ANR	251042	Symbol	ht -> write_dimension		250989						
ANR	251043	Symbol	ht -> has_dimension		250989						
ANR	251044	Symbol	ht -> unset_dimension		250989						
ANR	251045	Symbol	zend_std_has_dimension		250989						
ANR	251046	Symbol	ht -> read_dimension		250989						
ANR	251047	Function	zend_user_serialize	413:0:13199:14144							
ANR	251048	FunctionDef	"zend_user_serialize (zval * object , unsigned char * * buffer , size_t * buf_len , zend_serialize_data * data)"		251047	0					
ANR	251049	CompoundStatement		414:0:13314:14144	251047	0					
ANR	251050	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	415:1:13317:13358	251047	0	True				
ANR	251051	IdentifierDecl	* ce = Z_OBJCE_P ( object )		251047	0					
ANR	251052	IdentifierDeclType	zend_class_entry *		251047	0					
ANR	251053	Identifier	ce		251047	1					
ANR	251054	AssignmentExpression	* ce = Z_OBJCE_P ( object )		251047	2		=			
ANR	251055	Identifier	ce		251047	0					
ANR	251056	CallExpression	Z_OBJCE_P ( object )		251047	1					
ANR	251057	Callee	Z_OBJCE_P		251047	0					
ANR	251058	Identifier	Z_OBJCE_P		251047	0					
ANR	251059	ArgumentList	object		251047	1					
ANR	251060	Argument	object		251047	0					
ANR	251061	Identifier	object		251047	0					
ANR	251062	IdentifierDeclStatement	zval retval ;	416:1:13361:13372	251047	1	True				
ANR	251063	IdentifierDecl	retval		251047	0					
ANR	251064	IdentifierDeclType	zval		251047	0					
ANR	251065	Identifier	retval		251047	1					
ANR	251066	IdentifierDeclStatement	int result ;	417:1:13375:13385	251047	2	True				
ANR	251067	IdentifierDecl	result		251047	0					
ANR	251068	IdentifierDeclType	int		251047	0					
ANR	251069	Identifier	result		251047	1					
ANR	251070	ExpressionStatement	"zend_call_method_with_0_params ( object , ce , & ce -> serialize_func , ""serialize"" , & retval )"	419:1:13389:13474	251047	3	True				
ANR	251071	CallExpression	"zend_call_method_with_0_params ( object , ce , & ce -> serialize_func , ""serialize"" , & retval )"		251047	0					
ANR	251072	Callee	zend_call_method_with_0_params		251047	0					
ANR	251073	Identifier	zend_call_method_with_0_params		251047	0					
ANR	251074	ArgumentList	object		251047	1					
ANR	251075	Argument	object		251047	0					
ANR	251076	Identifier	object		251047	0					
ANR	251077	Argument	ce		251047	1					
ANR	251078	Identifier	ce		251047	0					
ANR	251079	Argument	& ce -> serialize_func		251047	2					
ANR	251080	UnaryOperationExpression	& ce -> serialize_func		251047	0					
ANR	251081	UnaryOperator	&		251047	0					
ANR	251082	PtrMemberAccess	ce -> serialize_func		251047	1					
ANR	251083	Identifier	ce		251047	0					
ANR	251084	Identifier	serialize_func		251047	1					
ANR	251085	Argument	"""serialize"""		251047	3					
ANR	251086	PrimaryExpression	"""serialize"""		251047	0					
ANR	251087	Argument	& retval		251047	4					
ANR	251088	UnaryOperationExpression	& retval		251047	0					
ANR	251089	UnaryOperator	&		251047	0					
ANR	251090	Identifier	retval		251047	1					
ANR	251091	IfStatement	if ( Z_TYPE ( retval ) == IS_UNDEF || EG ( exception ) )		251047	4					
ANR	251092	Condition	Z_TYPE ( retval ) == IS_UNDEF || EG ( exception )	422:5:13483:13525	251047	0	True				
ANR	251093	OrExpression	Z_TYPE ( retval ) == IS_UNDEF || EG ( exception )		251047	0		||			
ANR	251094	EqualityExpression	Z_TYPE ( retval ) == IS_UNDEF		251047	0		==			
ANR	251095	CallExpression	Z_TYPE ( retval )		251047	0					
ANR	251096	Callee	Z_TYPE		251047	0					
ANR	251097	Identifier	Z_TYPE		251047	0					
ANR	251098	ArgumentList	retval		251047	1					
ANR	251099	Argument	retval		251047	0					
ANR	251100	Identifier	retval		251047	0					
ANR	251101	Identifier	IS_UNDEF		251047	1					
ANR	251102	CallExpression	EG ( exception )		251047	1					
ANR	251103	Callee	EG		251047	0					
ANR	251104	Identifier	EG		251047	0					
ANR	251105	ArgumentList	exception		251047	1					
ANR	251106	Argument	exception		251047	0					
ANR	251107	Identifier	exception		251047	0					
ANR	251108	CompoundStatement		9:50:213:213	251047	1					
ANR	251109	ExpressionStatement	result = FAILURE	423:2:13532:13548	251047	0	True				
ANR	251110	AssignmentExpression	result = FAILURE		251047	0		=			
ANR	251111	Identifier	result		251047	0					
ANR	251112	Identifier	FAILURE		251047	1					
ANR	251113	ElseStatement	else		251047	0					
ANR	251114	CompoundStatement		11:8:243:243	251047	0					
ANR	251115	SwitchStatement	switch ( Z_TYPE ( retval ) )		251047	0					
ANR	251116	Condition	Z_TYPE ( retval )	425:9:13569:13582	251047	0	True				
ANR	251117	CallExpression	Z_TYPE ( retval )		251047	0					
ANR	251118	Callee	Z_TYPE		251047	0					
ANR	251119	Identifier	Z_TYPE		251047	0					
ANR	251120	ArgumentList	retval		251047	1					
ANR	251121	Argument	retval		251047	0					
ANR	251122	Identifier	retval		251047	0					
ANR	251123	CompoundStatement		12:25:270:270	251047	1					
ANR	251124	Label	case IS_NULL :	426:2:13589:13601	251047	0	True				
ANR	251125	Identifier	IS_NULL		251047	0					
ANR	251126	ExpressionStatement	zval_ptr_dtor ( & retval )	428:3:13688:13710	251047	1	True				
ANR	251127	CallExpression	zval_ptr_dtor ( & retval )		251047	0					
ANR	251128	Callee	zval_ptr_dtor		251047	0					
ANR	251129	Identifier	zval_ptr_dtor		251047	0					
ANR	251130	ArgumentList	& retval		251047	1					
ANR	251131	Argument	& retval		251047	0					
ANR	251132	UnaryOperationExpression	& retval		251047	0					
ANR	251133	UnaryOperator	&		251047	0					
ANR	251134	Identifier	retval		251047	1					
ANR	251135	ReturnStatement	return FAILURE ;	429:3:13715:13729	251047	2	True				
ANR	251136	Identifier	FAILURE		251047	0					
ANR	251137	Label	case IS_STRING :	430:2:13733:13747	251047	3	True				
ANR	251138	Identifier	IS_STRING		251047	0					
ANR	251139	ExpressionStatement	"* buffer = ( unsigned char * ) estrndup ( Z_STRVAL ( retval ) , Z_STRLEN ( retval ) )"	431:3:13752:13822	251047	4	True				
ANR	251140	AssignmentExpression	"* buffer = ( unsigned char * ) estrndup ( Z_STRVAL ( retval ) , Z_STRLEN ( retval ) )"		251047	0		=			
ANR	251141	UnaryOperationExpression	* buffer		251047	0					
ANR	251142	UnaryOperator	*		251047	0					
ANR	251143	Identifier	buffer		251047	1					
ANR	251144	CastExpression	"( unsigned char * ) estrndup ( Z_STRVAL ( retval ) , Z_STRLEN ( retval ) )"		251047	1					
ANR	251145	CastTarget	unsigned char *		251047	0					
ANR	251146	CallExpression	"estrndup ( Z_STRVAL ( retval ) , Z_STRLEN ( retval ) )"		251047	1					
ANR	251147	Callee	estrndup		251047	0					
ANR	251148	Identifier	estrndup		251047	0					
ANR	251149	ArgumentList	Z_STRVAL ( retval )		251047	1					
ANR	251150	Argument	Z_STRVAL ( retval )		251047	0					
ANR	251151	CallExpression	Z_STRVAL ( retval )		251047	0					
ANR	251152	Callee	Z_STRVAL		251047	0					
ANR	251153	Identifier	Z_STRVAL		251047	0					
ANR	251154	ArgumentList	retval		251047	1					
ANR	251155	Argument	retval		251047	0					
ANR	251156	Identifier	retval		251047	0					
ANR	251157	Argument	Z_STRLEN ( retval )		251047	1					
ANR	251158	CallExpression	Z_STRLEN ( retval )		251047	0					
ANR	251159	Callee	Z_STRLEN		251047	0					
ANR	251160	Identifier	Z_STRLEN		251047	0					
ANR	251161	ArgumentList	retval		251047	1					
ANR	251162	Argument	retval		251047	0					
ANR	251163	Identifier	retval		251047	0					
ANR	251164	ExpressionStatement	* buf_len = Z_STRLEN ( retval )	432:3:13827:13854	251047	5	True				
ANR	251165	AssignmentExpression	* buf_len = Z_STRLEN ( retval )		251047	0		=			
ANR	251166	UnaryOperationExpression	* buf_len		251047	0					
ANR	251167	UnaryOperator	*		251047	0					
ANR	251168	Identifier	buf_len		251047	1					
ANR	251169	CallExpression	Z_STRLEN ( retval )		251047	1					
ANR	251170	Callee	Z_STRLEN		251047	0					
ANR	251171	Identifier	Z_STRLEN		251047	0					
ANR	251172	ArgumentList	retval		251047	1					
ANR	251173	Argument	retval		251047	0					
ANR	251174	Identifier	retval		251047	0					
ANR	251175	ExpressionStatement	result = SUCCESS	433:3:13859:13875	251047	6	True				
ANR	251176	AssignmentExpression	result = SUCCESS		251047	0		=			
ANR	251177	Identifier	result		251047	0					
ANR	251178	Identifier	SUCCESS		251047	1					
ANR	251179	BreakStatement	break ;	434:3:13880:13885	251047	7	True				
ANR	251180	Label	default :	435:2:13889:13896	251047	8	True				
ANR	251181	Identifier	default		251047	0					
ANR	251182	ExpressionStatement	result = FAILURE	436:3:13915:13931	251047	9	True				
ANR	251183	AssignmentExpression	result = FAILURE		251047	0		=			
ANR	251184	Identifier	result		251047	0					
ANR	251185	Identifier	FAILURE		251047	1					
ANR	251186	BreakStatement	break ;	437:3:13936:13941	251047	10	True				
ANR	251187	ExpressionStatement	zval_ptr_dtor ( & retval )	439:2:13949:13971	251047	1	True				
ANR	251188	CallExpression	zval_ptr_dtor ( & retval )		251047	0					
ANR	251189	Callee	zval_ptr_dtor		251047	0					
ANR	251190	Identifier	zval_ptr_dtor		251047	0					
ANR	251191	ArgumentList	& retval		251047	1					
ANR	251192	Argument	& retval		251047	0					
ANR	251193	UnaryOperationExpression	& retval		251047	0					
ANR	251194	UnaryOperator	&		251047	0					
ANR	251195	Identifier	retval		251047	1					
ANR	251196	IfStatement	if ( result == FAILURE && ! EG ( exception ) )		251047	5					
ANR	251197	Condition	result == FAILURE && ! EG ( exception )	442:5:13982:14016	251047	0	True				
ANR	251198	AndExpression	result == FAILURE && ! EG ( exception )		251047	0		&&			
ANR	251199	EqualityExpression	result == FAILURE		251047	0		==			
ANR	251200	Identifier	result		251047	0					
ANR	251201	Identifier	FAILURE		251047	1					
ANR	251202	UnaryOperationExpression	! EG ( exception )		251047	1					
ANR	251203	UnaryOperator	!		251047	0					
ANR	251204	CallExpression	EG ( exception )		251047	1					
ANR	251205	Callee	EG		251047	0					
ANR	251206	Identifier	EG		251047	0					
ANR	251207	ArgumentList	exception		251047	1					
ANR	251208	Argument	exception		251047	0					
ANR	251209	Identifier	exception		251047	0					
ANR	251210	CompoundStatement		29:42:704:704	251047	1					
ANR	251211	ExpressionStatement	"zend_throw_exception_ex ( NULL , 0 , ""%s::serialize() must return a string or NULL"" , ZSTR_VAL ( ce -> name ) )"	443:2:14023:14123	251047	0	True				
ANR	251212	CallExpression	"zend_throw_exception_ex ( NULL , 0 , ""%s::serialize() must return a string or NULL"" , ZSTR_VAL ( ce -> name ) )"		251047	0					
ANR	251213	Callee	zend_throw_exception_ex		251047	0					
ANR	251214	Identifier	zend_throw_exception_ex		251047	0					
ANR	251215	ArgumentList	NULL		251047	1					
ANR	251216	Argument	NULL		251047	0					
ANR	251217	Identifier	NULL		251047	0					
ANR	251218	Argument	0		251047	1					
ANR	251219	PrimaryExpression	0		251047	0					
ANR	251220	Argument	"""%s::serialize() must return a string or NULL"""		251047	2					
ANR	251221	PrimaryExpression	"""%s::serialize() must return a string or NULL"""		251047	0					
ANR	251222	Argument	ZSTR_VAL ( ce -> name )		251047	3					
ANR	251223	CallExpression	ZSTR_VAL ( ce -> name )		251047	0					
ANR	251224	Callee	ZSTR_VAL		251047	0					
ANR	251225	Identifier	ZSTR_VAL		251047	0					
ANR	251226	ArgumentList	ce -> name		251047	1					
ANR	251227	Argument	ce -> name		251047	0					
ANR	251228	PtrMemberAccess	ce -> name		251047	0					
ANR	251229	Identifier	ce		251047	0					
ANR	251230	Identifier	name		251047	1					
ANR	251231	ReturnStatement	return result ;	445:1:14129:14142	251047	6	True				
ANR	251232	Identifier	result		251047	0					
ANR	251233	ReturnType	ZEND_API int		251047	1					
ANR	251234	Identifier	zend_user_serialize		251047	2					
ANR	251235	ParameterList	"zval * object , unsigned char * * buffer , size_t * buf_len , zend_serialize_data * data"		251047	3					
ANR	251236	Parameter	zval * object	413:33:13232:13243	251047	0	True				
ANR	251237	ParameterType	zval *		251047	0					
ANR	251238	Identifier	object		251047	1					
ANR	251239	Parameter	unsigned char * * buffer	413:47:13246:13267	251047	1	True				
ANR	251240	ParameterType	unsigned char * *		251047	0					
ANR	251241	Identifier	buffer		251047	1					
ANR	251242	Parameter	size_t * buf_len	413:71:13270:13284	251047	2	True				
ANR	251243	ParameterType	size_t *		251047	0					
ANR	251244	Identifier	buf_len		251047	1					
ANR	251245	Parameter	zend_serialize_data * data	413:88:13287:13311	251047	3	True				
ANR	251246	ParameterType	zend_serialize_data *		251047	0					
ANR	251247	Identifier	data		251047	1					
ANR	251248	CFGEntryNode	ENTRY		251047		True				
ANR	251249	CFGExitNode	EXIT		251047		True				
ANR	251250	Symbol	exception		251047						
ANR	251251	Symbol	data		251047						
ANR	251252	Symbol	Z_TYPE		251047						
ANR	251253	Symbol	Z_STRLEN		251047						
ANR	251254	Symbol	* ce		251047						
ANR	251255	Symbol	result		251047						
ANR	251256	Symbol	estrndup		251047						
ANR	251257	Symbol	Z_STRVAL		251047						
ANR	251258	Symbol	Z_OBJCE_P		251047						
ANR	251259	Symbol	& retval		251047						
ANR	251260	Symbol	buf_len		251047						
ANR	251261	Symbol	buffer		251047						
ANR	251262	Symbol	ce -> name		251047						
ANR	251263	Symbol	IS_UNDEF		251047						
ANR	251264	Symbol	* buf_len		251047						
ANR	251265	Symbol	ce		251047						
ANR	251266	Symbol	EG		251047						
ANR	251267	Symbol	* buffer		251047						
ANR	251268	Symbol	SUCCESS		251047						
ANR	251269	Symbol	NULL		251047						
ANR	251270	Symbol	& ce -> serialize_func		251047						
ANR	251271	Symbol	FAILURE		251047						
ANR	251272	Symbol	retval		251047						
ANR	251273	Symbol	ZSTR_VAL		251047						
ANR	251274	Symbol	object		251047						
ANR	251275	Function	zend_user_unserialize	450:0:14189:14666							
ANR	251276	FunctionDef	"zend_user_unserialize (zval * object , zend_class_entry * ce , const unsigned char * buf , size_t buf_len , zend_unserialize_data * data)"		251275	0					
ANR	251277	CompoundStatement		451:0:14331:14666	251275	0					
ANR	251278	IdentifierDeclStatement	zval zdata ;	452:1:14334:14344	251275	0	True				
ANR	251279	IdentifierDecl	zdata		251275	0					
ANR	251280	IdentifierDeclType	zval		251275	0					
ANR	251281	Identifier	zdata		251275	1					
ANR	251282	IfStatement	"if ( UNEXPECTED ( object_init_ex ( object , ce ) != SUCCESS ) )"		251275	1					
ANR	251283	Condition	"UNEXPECTED ( object_init_ex ( object , ce ) != SUCCESS )"	454:5:14352:14400	251275	0	True				
ANR	251284	CallExpression	"UNEXPECTED ( object_init_ex ( object , ce ) != SUCCESS )"		251275	0					
ANR	251285	Callee	UNEXPECTED		251275	0					
ANR	251286	Identifier	UNEXPECTED		251275	0					
ANR	251287	ArgumentList	"object_init_ex ( object , ce ) != SUCCESS"		251275	1					
ANR	251288	Argument	"object_init_ex ( object , ce ) != SUCCESS"		251275	0					
ANR	251289	EqualityExpression	"object_init_ex ( object , ce ) != SUCCESS"		251275	0		!=			
ANR	251290	CallExpression	"object_init_ex ( object , ce )"		251275	0					
ANR	251291	Callee	object_init_ex		251275	0					
ANR	251292	Identifier	object_init_ex		251275	0					
ANR	251293	ArgumentList	object		251275	1					
ANR	251294	Argument	object		251275	0					
ANR	251295	Identifier	object		251275	0					
ANR	251296	Argument	ce		251275	1					
ANR	251297	Identifier	ce		251275	0					
ANR	251298	Identifier	SUCCESS		251275	1					
ANR	251299	CompoundStatement		4:56:71:71	251275	1					
ANR	251300	ReturnStatement	return FAILURE ;	455:2:14407:14421	251275	0	True				
ANR	251301	Identifier	FAILURE		251275	0					
ANR	251302	ExpressionStatement	"ZVAL_STRINGL ( & zdata , ( char * ) buf , buf_len )"	458:1:14428:14469	251275	2	True				
ANR	251303	CallExpression	"ZVAL_STRINGL ( & zdata , ( char * ) buf , buf_len )"		251275	0					
ANR	251304	Callee	ZVAL_STRINGL		251275	0					
ANR	251305	Identifier	ZVAL_STRINGL		251275	0					
ANR	251306	ArgumentList	& zdata		251275	1					
ANR	251307	Argument	& zdata		251275	0					
ANR	251308	UnaryOperationExpression	& zdata		251275	0					
ANR	251309	UnaryOperator	&		251275	0					
ANR	251310	Identifier	zdata		251275	1					
ANR	251311	Argument	( char * ) buf		251275	1					
ANR	251312	CastExpression	( char * ) buf		251275	0					
ANR	251313	CastTarget	char *		251275	0					
ANR	251314	Identifier	buf		251275	1					
ANR	251315	Argument	buf_len		251275	2					
ANR	251316	Identifier	buf_len		251275	0					
ANR	251317	ExpressionStatement	"zend_call_method_with_1_params ( object , ce , & ce -> unserialize_func , ""unserialize"" , NULL , & zdata )"	460:1:14473:14567	251275	3	True				
ANR	251318	CallExpression	"zend_call_method_with_1_params ( object , ce , & ce -> unserialize_func , ""unserialize"" , NULL , & zdata )"		251275	0					
ANR	251319	Callee	zend_call_method_with_1_params		251275	0					
ANR	251320	Identifier	zend_call_method_with_1_params		251275	0					
ANR	251321	ArgumentList	object		251275	1					
ANR	251322	Argument	object		251275	0					
ANR	251323	Identifier	object		251275	0					
ANR	251324	Argument	ce		251275	1					
ANR	251325	Identifier	ce		251275	0					
ANR	251326	Argument	& ce -> unserialize_func		251275	2					
ANR	251327	UnaryOperationExpression	& ce -> unserialize_func		251275	0					
ANR	251328	UnaryOperator	&		251275	0					
ANR	251329	PtrMemberAccess	ce -> unserialize_func		251275	1					
ANR	251330	Identifier	ce		251275	0					
ANR	251331	Identifier	unserialize_func		251275	1					
ANR	251332	Argument	"""unserialize"""		251275	3					
ANR	251333	PrimaryExpression	"""unserialize"""		251275	0					
ANR	251334	Argument	NULL		251275	4					
ANR	251335	Identifier	NULL		251275	0					
ANR	251336	Argument	& zdata		251275	5					
ANR	251337	UnaryOperationExpression	& zdata		251275	0					
ANR	251338	UnaryOperator	&		251275	0					
ANR	251339	Identifier	zdata		251275	1					
ANR	251340	ExpressionStatement	zval_ptr_dtor ( & zdata )	462:1:14571:14592	251275	4	True				
ANR	251341	CallExpression	zval_ptr_dtor ( & zdata )		251275	0					
ANR	251342	Callee	zval_ptr_dtor		251275	0					
ANR	251343	Identifier	zval_ptr_dtor		251275	0					
ANR	251344	ArgumentList	& zdata		251275	1					
ANR	251345	Argument	& zdata		251275	0					
ANR	251346	UnaryOperationExpression	& zdata		251275	0					
ANR	251347	UnaryOperator	&		251275	0					
ANR	251348	Identifier	zdata		251275	1					
ANR	251349	IfStatement	if ( EG ( exception ) )		251275	5					
ANR	251350	Condition	EG ( exception )	464:5:14600:14612	251275	0	True				
ANR	251351	CallExpression	EG ( exception )		251275	0					
ANR	251352	Callee	EG		251275	0					
ANR	251353	Identifier	EG		251275	0					
ANR	251354	ArgumentList	exception		251275	1					
ANR	251355	Argument	exception		251275	0					
ANR	251356	Identifier	exception		251275	0					
ANR	251357	CompoundStatement		14:20:283:283	251275	1					
ANR	251358	ReturnStatement	return FAILURE ;	465:2:14619:14633	251275	0	True				
ANR	251359	Identifier	FAILURE		251275	0					
ANR	251360	ElseStatement	else		251275	0					
ANR	251361	CompoundStatement		16:8:311:311	251275	0					
ANR	251362	ReturnStatement	return SUCCESS ;	467:2:14647:14661	251275	0	True				
ANR	251363	Identifier	SUCCESS		251275	0					
ANR	251364	ReturnType	ZEND_API int		251275	1					
ANR	251365	Identifier	zend_user_unserialize		251275	2					
ANR	251366	ParameterList	"zval * object , zend_class_entry * ce , const unsigned char * buf , size_t buf_len , zend_unserialize_data * data"		251275	3					
ANR	251367	Parameter	zval * object	450:35:14224:14235	251275	0	True				
ANR	251368	ParameterType	zval *		251275	0					
ANR	251369	Identifier	object		251275	1					
ANR	251370	Parameter	zend_class_entry * ce	450:49:14238:14257	251275	1	True				
ANR	251371	ParameterType	zend_class_entry *		251275	0					
ANR	251372	Identifier	ce		251275	1					
ANR	251373	Parameter	const unsigned char * buf	450:71:14260:14283	251275	2	True				
ANR	251374	ParameterType	const unsigned char *		251275	0					
ANR	251375	Identifier	buf		251275	1					
ANR	251376	Parameter	size_t buf_len	450:97:14286:14299	251275	3	True				
ANR	251377	ParameterType	size_t		251275	0					
ANR	251378	Identifier	buf_len		251275	1					
ANR	251379	Parameter	zend_unserialize_data * data	450:113:14302:14328	251275	4	True				
ANR	251380	ParameterType	zend_unserialize_data *		251275	0					
ANR	251381	Identifier	data		251275	1					
ANR	251382	CFGEntryNode	ENTRY		251275		True				
ANR	251383	CFGExitNode	EXIT		251275		True				
ANR	251384	Symbol	exception		251275						
ANR	251385	Symbol	ce		251275						
ANR	251386	Symbol	zdata		251275						
ANR	251387	Symbol	EG		251275						
ANR	251388	Symbol	SUCCESS		251275						
ANR	251389	Symbol	NULL		251275						
ANR	251390	Symbol	data		251275						
ANR	251391	Symbol	& zdata		251275						
ANR	251392	Symbol	FAILURE		251275						
ANR	251393	Symbol	UNEXPECTED		251275						
ANR	251394	Symbol	buf		251275						
ANR	251395	Symbol	& ce -> unserialize_func		251275						
ANR	251396	Symbol	object_init_ex		251275						
ANR	251397	Symbol	buf_len		251275						
ANR	251398	Symbol	object		251275						
ANR	251399	Function	zend_class_serialize_deny	472:0:14679:14967							
ANR	251400	FunctionDef	"zend_class_serialize_deny (zval * object , unsigned char * * buffer , size_t * buf_len , zend_serialize_data * data)"		251399	0					
ANR	251401	CompoundStatement		473:0:14810:14967	251399	0					
ANR	251402	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( object ) ;	474:1:14813:14853	251399	0	True				
ANR	251403	IdentifierDecl	* ce = Z_OBJCE_P ( object )		251399	0					
ANR	251404	IdentifierDeclType	zend_class_entry *		251399	0					
ANR	251405	Identifier	ce		251399	1					
ANR	251406	AssignmentExpression	* ce = Z_OBJCE_P ( object )		251399	2		=			
ANR	251407	Identifier	ce		251399	0					
ANR	251408	CallExpression	Z_OBJCE_P ( object )		251399	1					
ANR	251409	Callee	Z_OBJCE_P		251399	0					
ANR	251410	Identifier	Z_OBJCE_P		251399	0					
ANR	251411	ArgumentList	object		251399	1					
ANR	251412	Argument	object		251399	0					
ANR	251413	Identifier	object		251399	0					
ANR	251414	ExpressionStatement	"zend_throw_exception_ex ( NULL , 0 , ""Serialization of '%s' is not allowed"" , ZSTR_VAL ( ce -> name ) )"	475:1:14856:14948	251399	1	True				
ANR	251415	CallExpression	"zend_throw_exception_ex ( NULL , 0 , ""Serialization of '%s' is not allowed"" , ZSTR_VAL ( ce -> name ) )"		251399	0					
ANR	251416	Callee	zend_throw_exception_ex		251399	0					
ANR	251417	Identifier	zend_throw_exception_ex		251399	0					
ANR	251418	ArgumentList	NULL		251399	1					
ANR	251419	Argument	NULL		251399	0					
ANR	251420	Identifier	NULL		251399	0					
ANR	251421	Argument	0		251399	1					
ANR	251422	PrimaryExpression	0		251399	0					
ANR	251423	Argument	"""Serialization of '%s' is not allowed"""		251399	2					
ANR	251424	PrimaryExpression	"""Serialization of '%s' is not allowed"""		251399	0					
ANR	251425	Argument	ZSTR_VAL ( ce -> name )		251399	3					
ANR	251426	CallExpression	ZSTR_VAL ( ce -> name )		251399	0					
ANR	251427	Callee	ZSTR_VAL		251399	0					
ANR	251428	Identifier	ZSTR_VAL		251399	0					
ANR	251429	ArgumentList	ce -> name		251399	1					
ANR	251430	Argument	ce -> name		251399	0					
ANR	251431	PtrMemberAccess	ce -> name		251399	0					
ANR	251432	Identifier	ce		251399	0					
ANR	251433	Identifier	name		251399	1					
ANR	251434	ReturnStatement	return FAILURE ;	476:1:14951:14965	251399	2	True				
ANR	251435	Identifier	FAILURE		251399	0					
ANR	251436	ReturnType	ZEND_API int		251399	1					
ANR	251437	Identifier	zend_class_serialize_deny		251399	2					
ANR	251438	ParameterList	"zval * object , unsigned char * * buffer , size_t * buf_len , zend_serialize_data * data"		251399	3					
ANR	251439	Parameter	zval * object	472:39:14718:14729	251399	0	True				
ANR	251440	ParameterType	zval *		251399	0					
ANR	251441	Identifier	object		251399	1					
ANR	251442	Parameter	unsigned char * * buffer	472:53:14732:14753	251399	1	True				
ANR	251443	ParameterType	unsigned char * *		251399	0					
ANR	251444	Identifier	buffer		251399	1					
ANR	251445	Parameter	size_t * buf_len	472:77:14756:14770	251399	2	True				
ANR	251446	ParameterType	size_t *		251399	0					
ANR	251447	Identifier	buf_len		251399	1					
ANR	251448	Parameter	zend_serialize_data * data	472:94:14773:14797	251399	3	True				
ANR	251449	ParameterType	zend_serialize_data *		251399	0					
ANR	251450	Identifier	data		251399	1					
ANR	251451	CFGEntryNode	ENTRY		251399		True				
ANR	251452	CFGExitNode	EXIT		251399		True				
ANR	251453	Symbol	ce		251399						
ANR	251454	Symbol	NULL		251399						
ANR	251455	Symbol	data		251399						
ANR	251456	Symbol	Z_OBJCE_P		251399						
ANR	251457	Symbol	buf_len		251399						
ANR	251458	Symbol	buffer		251399						
ANR	251459	Symbol	ce -> name		251399						
ANR	251460	Symbol	* ce		251399						
ANR	251461	Symbol	FAILURE		251399						
ANR	251462	Symbol	object		251399						
ANR	251463	Symbol	ZSTR_VAL		251399						
ANR	251464	Function	zend_class_unserialize_deny	480:0:14980:15254							
ANR	251465	FunctionDef	"zend_class_unserialize_deny (zval * object , zend_class_entry * ce , const unsigned char * buf , size_t buf_len , zend_unserialize_data * data)"		251464	0					
ANR	251466	CompoundStatement		481:0:15138:15254	251464	0					
ANR	251467	ExpressionStatement	"zend_throw_exception_ex ( NULL , 0 , ""Unserialization of '%s' is not allowed"" , ZSTR_VAL ( ce -> name ) )"	482:1:15141:15235	251464	0	True				
ANR	251468	CallExpression	"zend_throw_exception_ex ( NULL , 0 , ""Unserialization of '%s' is not allowed"" , ZSTR_VAL ( ce -> name ) )"		251464	0					
ANR	251469	Callee	zend_throw_exception_ex		251464	0					
ANR	251470	Identifier	zend_throw_exception_ex		251464	0					
ANR	251471	ArgumentList	NULL		251464	1					
ANR	251472	Argument	NULL		251464	0					
ANR	251473	Identifier	NULL		251464	0					
ANR	251474	Argument	0		251464	1					
ANR	251475	PrimaryExpression	0		251464	0					
ANR	251476	Argument	"""Unserialization of '%s' is not allowed"""		251464	2					
ANR	251477	PrimaryExpression	"""Unserialization of '%s' is not allowed"""		251464	0					
ANR	251478	Argument	ZSTR_VAL ( ce -> name )		251464	3					
ANR	251479	CallExpression	ZSTR_VAL ( ce -> name )		251464	0					
ANR	251480	Callee	ZSTR_VAL		251464	0					
ANR	251481	Identifier	ZSTR_VAL		251464	0					
ANR	251482	ArgumentList	ce -> name		251464	1					
ANR	251483	Argument	ce -> name		251464	0					
ANR	251484	PtrMemberAccess	ce -> name		251464	0					
ANR	251485	Identifier	ce		251464	0					
ANR	251486	Identifier	name		251464	1					
ANR	251487	ReturnStatement	return FAILURE ;	483:1:15238:15252	251464	1	True				
ANR	251488	Identifier	FAILURE		251464	0					
ANR	251489	ReturnType	ZEND_API int		251464	1					
ANR	251490	Identifier	zend_class_unserialize_deny		251464	2					
ANR	251491	ParameterList	"zval * object , zend_class_entry * ce , const unsigned char * buf , size_t buf_len , zend_unserialize_data * data"		251464	3					
ANR	251492	Parameter	zval * object	480:41:15021:15032	251464	0	True				
ANR	251493	ParameterType	zval *		251464	0					
ANR	251494	Identifier	object		251464	1					
ANR	251495	Parameter	zend_class_entry * ce	480:55:15035:15054	251464	1	True				
ANR	251496	ParameterType	zend_class_entry *		251464	0					
ANR	251497	Identifier	ce		251464	1					
ANR	251498	Parameter	const unsigned char * buf	480:77:15057:15080	251464	2	True				
ANR	251499	ParameterType	const unsigned char *		251464	0					
ANR	251500	Identifier	buf		251464	1					
ANR	251501	Parameter	size_t buf_len	480:103:15083:15096	251464	3	True				
ANR	251502	ParameterType	size_t		251464	0					
ANR	251503	Identifier	buf_len		251464	1					
ANR	251504	Parameter	zend_unserialize_data * data	480:119:15099:15125	251464	4	True				
ANR	251505	ParameterType	zend_unserialize_data *		251464	0					
ANR	251506	Identifier	data		251464	1					
ANR	251507	CFGEntryNode	ENTRY		251464		True				
ANR	251508	CFGExitNode	EXIT		251464		True				
ANR	251509	Symbol	ce		251464						
ANR	251510	Symbol	buf		251464						
ANR	251511	Symbol	NULL		251464						
ANR	251512	Symbol	data		251464						
ANR	251513	Symbol	buf_len		251464						
ANR	251514	Symbol	* ce		251464						
ANR	251515	Symbol	ce -> name		251464						
ANR	251516	Symbol	FAILURE		251464						
ANR	251517	Symbol	object		251464						
ANR	251518	Symbol	ZSTR_VAL		251464						
ANR	251519	Function	zend_implement_serializable	488:0:15305:15784							
ANR	251520	FunctionDef	"zend_implement_serializable (zend_class_entry * interface , zend_class_entry * class_type)"		251519	0					
ANR	251521	CompoundStatement		489:0:15403:15784	251519	0					
ANR	251522	IfStatement	"if ( class_type -> parent && ( class_type -> parent -> serialize || class_type -> parent -> unserialize ) && ! instanceof_function_ex ( class_type -> parent , zend_ce_serializable , 1 ) )"		251519	0					
ANR	251523	Condition	"class_type -> parent && ( class_type -> parent -> serialize || class_type -> parent -> unserialize ) && ! instanceof_function_ex ( class_type -> parent , zend_ce_serializable , 1 )"	490:5:15410:15573	251519	0	True				
ANR	251524	AndExpression	"class_type -> parent && ( class_type -> parent -> serialize || class_type -> parent -> unserialize ) && ! instanceof_function_ex ( class_type -> parent , zend_ce_serializable , 1 )"		251519	0		&&			
ANR	251525	PtrMemberAccess	class_type -> parent		251519	0					
ANR	251526	Identifier	class_type		251519	0					
ANR	251527	Identifier	parent		251519	1					
ANR	251528	AndExpression	"( class_type -> parent -> serialize || class_type -> parent -> unserialize ) && ! instanceof_function_ex ( class_type -> parent , zend_ce_serializable , 1 )"		251519	1		&&			
ANR	251529	OrExpression	class_type -> parent -> serialize || class_type -> parent -> unserialize		251519	0		||			
ANR	251530	PtrMemberAccess	class_type -> parent -> serialize		251519	0					
ANR	251531	PtrMemberAccess	class_type -> parent		251519	0					
ANR	251532	Identifier	class_type		251519	0					
ANR	251533	Identifier	parent		251519	1					
ANR	251534	Identifier	serialize		251519	1					
ANR	251535	PtrMemberAccess	class_type -> parent -> unserialize		251519	1					
ANR	251536	PtrMemberAccess	class_type -> parent		251519	0					
ANR	251537	Identifier	class_type		251519	0					
ANR	251538	Identifier	parent		251519	1					
ANR	251539	Identifier	unserialize		251519	1					
ANR	251540	UnaryOperationExpression	"! instanceof_function_ex ( class_type -> parent , zend_ce_serializable , 1 )"		251519	1					
ANR	251541	UnaryOperator	!		251519	0					
ANR	251542	CallExpression	"instanceof_function_ex ( class_type -> parent , zend_ce_serializable , 1 )"		251519	1					
ANR	251543	Callee	instanceof_function_ex		251519	0					
ANR	251544	Identifier	instanceof_function_ex		251519	0					
ANR	251545	ArgumentList	class_type -> parent		251519	1					
ANR	251546	Argument	class_type -> parent		251519	0					
ANR	251547	PtrMemberAccess	class_type -> parent		251519	0					
ANR	251548	Identifier	class_type		251519	0					
ANR	251549	Identifier	parent		251519	1					
ANR	251550	Argument	zend_ce_serializable		251519	1					
ANR	251551	Identifier	zend_ce_serializable		251519	0					
ANR	251552	Argument	1		251519	2					
ANR	251553	PrimaryExpression	1		251519	0					
ANR	251554	CompoundStatement		4:75:172:172	251519	1					
ANR	251555	ReturnStatement	return FAILURE ;	493:2:15580:15594	251519	0	True				
ANR	251556	Identifier	FAILURE		251519	0					
ANR	251557	IfStatement	if ( ! class_type -> serialize )		251519	1					
ANR	251558	Condition	! class_type -> serialize	495:5:15604:15625	251519	0	True				
ANR	251559	UnaryOperationExpression	! class_type -> serialize		251519	0					
ANR	251560	UnaryOperator	!		251519	0					
ANR	251561	PtrMemberAccess	class_type -> serialize		251519	1					
ANR	251562	Identifier	class_type		251519	0					
ANR	251563	Identifier	serialize		251519	1					
ANR	251564	CompoundStatement		7:29:224:224	251519	1					
ANR	251565	ExpressionStatement	class_type -> serialize = zend_user_serialize	496:2:15632:15675	251519	0	True				
ANR	251566	AssignmentExpression	class_type -> serialize = zend_user_serialize		251519	0		=			
ANR	251567	PtrMemberAccess	class_type -> serialize		251519	0					
ANR	251568	Identifier	class_type		251519	0					
ANR	251569	Identifier	serialize		251519	1					
ANR	251570	Identifier	zend_user_serialize		251519	1					
ANR	251571	IfStatement	if ( ! class_type -> unserialize )		251519	2					
ANR	251572	Condition	! class_type -> unserialize	498:5:15685:15708	251519	0	True				
ANR	251573	UnaryOperationExpression	! class_type -> unserialize		251519	0					
ANR	251574	UnaryOperator	!		251519	0					
ANR	251575	PtrMemberAccess	class_type -> unserialize		251519	1					
ANR	251576	Identifier	class_type		251519	0					
ANR	251577	Identifier	unserialize		251519	1					
ANR	251578	CompoundStatement		10:31:307:307	251519	1					
ANR	251579	ExpressionStatement	class_type -> unserialize = zend_user_unserialize	499:2:15715:15762	251519	0	True				
ANR	251580	AssignmentExpression	class_type -> unserialize = zend_user_unserialize		251519	0		=			
ANR	251581	PtrMemberAccess	class_type -> unserialize		251519	0					
ANR	251582	Identifier	class_type		251519	0					
ANR	251583	Identifier	unserialize		251519	1					
ANR	251584	Identifier	zend_user_unserialize		251519	1					
ANR	251585	ReturnStatement	return SUCCESS ;	501:1:15768:15782	251519	3	True				
ANR	251586	Identifier	SUCCESS		251519	0					
ANR	251587	ReturnType	static int		251519	1					
ANR	251588	Identifier	zend_implement_serializable		251519	2					
ANR	251589	ParameterList	"zend_class_entry * interface , zend_class_entry * class_type"		251519	3					
ANR	251590	Parameter	zend_class_entry * interface	488:39:15344:15370	251519	0	True				
ANR	251591	ParameterType	zend_class_entry *		251519	0					
ANR	251592	Identifier	interface		251519	1					
ANR	251593	Parameter	zend_class_entry * class_type	488:68:15373:15400	251519	1	True				
ANR	251594	ParameterType	zend_class_entry *		251519	0					
ANR	251595	Identifier	class_type		251519	1					
ANR	251596	CFGEntryNode	ENTRY		251519		True				
ANR	251597	CFGExitNode	EXIT		251519		True				
ANR	251598	Symbol	SUCCESS		251519						
ANR	251599	Symbol	class_type -> serialize		251519						
ANR	251600	Symbol	class_type -> unserialize		251519						
ANR	251601	Symbol	class_type -> parent		251519						
ANR	251602	Symbol	interface		251519						
ANR	251603	Symbol	FAILURE		251519						
ANR	251604	Symbol	zend_ce_serializable		251519						
ANR	251605	Symbol	class_type -> parent -> serialize		251519						
ANR	251606	Symbol	* class_type -> parent		251519						
ANR	251607	Symbol	zend_user_unserialize		251519						
ANR	251608	Symbol	class_type		251519						
ANR	251609	Symbol	zend_user_serialize		251519						
ANR	251610	Symbol	class_type -> parent -> unserialize		251519						
ANR	251611	Symbol	instanceof_function_ex		251519						
ANR	251612	Symbol	* class_type		251519						
ANR	251613	Symbol	* * class_type		251519						
ANR	251614	DeclStmt									
ANR	251615	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_aggregate
ANR	251616	DeclStmt									
ANR	251617	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_iterator
ANR	251618	DeclStmt									
ANR	251619	Decl							const zend_function_entry	const zend_function_entry *	zend_funcs_traversable
ANR	251620	DeclStmt									
ANR	251621	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_arrayaccess
ANR	251622	DeclStmt									
ANR	251623	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_serializable
ANR	251624	Function	zend_register_interfaces	555:0:17470:17887							
ANR	251625	FunctionDef	zend_register_interfaces ()		251624	0					
ANR	251626	CompoundStatement		556:0:17515:17887	251624	0					
ANR	251627	ExpressionStatement	"REGISTER_MAGIC_INTERFACE ( traversable , Traversable )"	557:1:17518:17568	251624	0	True				
ANR	251628	CallExpression	"REGISTER_MAGIC_INTERFACE ( traversable , Traversable )"		251624	0					
ANR	251629	Callee	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251630	Identifier	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251631	ArgumentList	traversable		251624	1					
ANR	251632	Argument	traversable		251624	0					
ANR	251633	Identifier	traversable		251624	0					
ANR	251634	Argument	Traversable		251624	1					
ANR	251635	Identifier	Traversable		251624	0					
ANR	251636	ExpressionStatement	"REGISTER_MAGIC_INTERFACE ( aggregate , IteratorAggregate )"	559:1:17572:17626	251624	1	True				
ANR	251637	CallExpression	"REGISTER_MAGIC_INTERFACE ( aggregate , IteratorAggregate )"		251624	0					
ANR	251638	Callee	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251639	Identifier	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251640	ArgumentList	aggregate		251624	1					
ANR	251641	Argument	aggregate		251624	0					
ANR	251642	Identifier	aggregate		251624	0					
ANR	251643	Argument	IteratorAggregate		251624	1					
ANR	251644	Identifier	IteratorAggregate		251624	0					
ANR	251645	ExpressionStatement	"REGISTER_MAGIC_IMPLEMENT ( aggregate , traversable )"	560:1:17629:17677	251624	2	True				
ANR	251646	CallExpression	"REGISTER_MAGIC_IMPLEMENT ( aggregate , traversable )"		251624	0					
ANR	251647	Callee	REGISTER_MAGIC_IMPLEMENT		251624	0					
ANR	251648	Identifier	REGISTER_MAGIC_IMPLEMENT		251624	0					
ANR	251649	ArgumentList	aggregate		251624	1					
ANR	251650	Argument	aggregate		251624	0					
ANR	251651	Identifier	aggregate		251624	0					
ANR	251652	Argument	traversable		251624	1					
ANR	251653	Identifier	traversable		251624	0					
ANR	251654	ExpressionStatement	"REGISTER_MAGIC_INTERFACE ( iterator , Iterator )"	562:1:17681:17725	251624	3	True				
ANR	251655	CallExpression	"REGISTER_MAGIC_INTERFACE ( iterator , Iterator )"		251624	0					
ANR	251656	Callee	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251657	Identifier	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251658	ArgumentList	iterator		251624	1					
ANR	251659	Argument	iterator		251624	0					
ANR	251660	Identifier	iterator		251624	0					
ANR	251661	Argument	Iterator		251624	1					
ANR	251662	Identifier	Iterator		251624	0					
ANR	251663	ExpressionStatement	"REGISTER_MAGIC_IMPLEMENT ( iterator , traversable )"	563:1:17728:17775	251624	4	True				
ANR	251664	CallExpression	"REGISTER_MAGIC_IMPLEMENT ( iterator , traversable )"		251624	0					
ANR	251665	Callee	REGISTER_MAGIC_IMPLEMENT		251624	0					
ANR	251666	Identifier	REGISTER_MAGIC_IMPLEMENT		251624	0					
ANR	251667	ArgumentList	iterator		251624	1					
ANR	251668	Argument	iterator		251624	0					
ANR	251669	Identifier	iterator		251624	0					
ANR	251670	Argument	traversable		251624	1					
ANR	251671	Identifier	traversable		251624	0					
ANR	251672	ExpressionStatement	"REGISTER_MAGIC_INTERFACE ( arrayaccess , ArrayAccess )"	565:1:17779:17829	251624	5	True				
ANR	251673	CallExpression	"REGISTER_MAGIC_INTERFACE ( arrayaccess , ArrayAccess )"		251624	0					
ANR	251674	Callee	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251675	Identifier	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251676	ArgumentList	arrayaccess		251624	1					
ANR	251677	Argument	arrayaccess		251624	0					
ANR	251678	Identifier	arrayaccess		251624	0					
ANR	251679	Argument	ArrayAccess		251624	1					
ANR	251680	Identifier	ArrayAccess		251624	0					
ANR	251681	ExpressionStatement	"REGISTER_MAGIC_INTERFACE ( serializable , Serializable )"	567:1:17833:17885	251624	6	True				
ANR	251682	CallExpression	"REGISTER_MAGIC_INTERFACE ( serializable , Serializable )"		251624	0					
ANR	251683	Callee	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251684	Identifier	REGISTER_MAGIC_INTERFACE		251624	0					
ANR	251685	ArgumentList	serializable		251624	1					
ANR	251686	Argument	serializable		251624	0					
ANR	251687	Identifier	serializable		251624	0					
ANR	251688	Argument	Serializable		251624	1					
ANR	251689	Identifier	Serializable		251624	0					
ANR	251690	ReturnType	ZEND_API void		251624	1					
ANR	251691	Identifier	zend_register_interfaces		251624	2					
ANR	251692	ParameterList			251624	3					
ANR	251693	CFGEntryNode	ENTRY		251624		True				
ANR	251694	CFGExitNode	EXIT		251624		True				
ANR	251695	Symbol	iterator		251624						
ANR	251696	Symbol	ArrayAccess		251624						
ANR	251697	Symbol	Serializable		251624						
ANR	251698	Symbol	traversable		251624						
ANR	251699	Symbol	IteratorAggregate		251624						
ANR	251700	Symbol	Iterator		251624						
ANR	251701	Symbol	Traversable		251624						
ANR	251702	Symbol	arrayaccess		251624						
ANR	251703	Symbol	serializable		251624						
ANR	251704	Symbol	aggregate		251624						
