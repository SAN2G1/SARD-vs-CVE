command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	143077	File	data/converged/CVE-2015-8617_php-src/Zend_zend_exceptions.c								
ANR	143078	DeclStmt									
ANR	143079	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_throwable
ANR	143080	DeclStmt									
ANR	143081	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_exception
ANR	143082	DeclStmt									
ANR	143083	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_error_exception
ANR	143084	DeclStmt									
ANR	143085	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_error
ANR	143086	DeclStmt									
ANR	143087	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_parse_error
ANR	143088	DeclStmt									
ANR	143089	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_type_error
ANR	143090	DeclStmt									
ANR	143091	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_arithmetic_error
ANR	143092	DeclStmt									
ANR	143093	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_division_by_zero_error
ANR	143094	DeclStmt									
ANR	143095	Decl							ZEND_API void ( * ) ( zval * ex )	ZEND_API void ( * ) ( zval * ex )	zend_throw_exception_hook
ANR	143096	DeclStmt									
ANR	143097	Decl							zend_object_handlers	zend_object_handlers	default_exception_handlers
ANR	143098	Function	zend_implement_throwable	47:0:2137:2608							
ANR	143099	FunctionDef	"zend_implement_throwable (zend_class_entry * interface , zend_class_entry * class_type)"		143098	0					
ANR	143100	CompoundStatement		48:0:2232:2608	143098	0					
ANR	143101	IfStatement	"if ( instanceof_function ( class_type , zend_ce_exception ) || instanceof_function ( class_type , zend_ce_error ) )"		143098	0					
ANR	143102	Condition	"instanceof_function ( class_type , zend_ce_exception ) || instanceof_function ( class_type , zend_ce_error )"	49:5:2239:2338	143098	0	True				
ANR	143103	OrExpression	"instanceof_function ( class_type , zend_ce_exception ) || instanceof_function ( class_type , zend_ce_error )"		143098	0		||			
ANR	143104	CallExpression	"instanceof_function ( class_type , zend_ce_exception )"		143098	0					
ANR	143105	Callee	instanceof_function		143098	0					
ANR	143106	Identifier	instanceof_function		143098	0					
ANR	143107	ArgumentList	class_type		143098	1					
ANR	143108	Argument	class_type		143098	0					
ANR	143109	Identifier	class_type		143098	0					
ANR	143110	Argument	zend_ce_exception		143098	1					
ANR	143111	Identifier	zend_ce_exception		143098	0					
ANR	143112	CallExpression	"instanceof_function ( class_type , zend_ce_error )"		143098	1					
ANR	143113	Callee	instanceof_function		143098	0					
ANR	143114	Identifier	instanceof_function		143098	0					
ANR	143115	ArgumentList	class_type		143098	1					
ANR	143116	Argument	class_type		143098	0					
ANR	143117	Identifier	class_type		143098	0					
ANR	143118	Argument	zend_ce_error		143098	1					
ANR	143119	Identifier	zend_ce_error		143098	0					
ANR	143120	CompoundStatement		2:107:108:108	143098	1					
ANR	143121	ReturnStatement	return SUCCESS ;	50:2:2345:2359	143098	0	True				
ANR	143122	Identifier	SUCCESS		143098	0					
ANR	143123	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Class %s cannot implement interface %s, extend %s or %s instead"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( interface -> name ) , ZSTR_VAL ( zend_ce_exception -> name ) , ZSTR_VAL ( zend_ce_error -> name ) )"	52:1:2365:2589	143098	1	True				
ANR	143124	CallExpression	"zend_error_noreturn ( E_ERROR , ""Class %s cannot implement interface %s, extend %s or %s instead"" , ZSTR_VAL ( class_type -> name ) , ZSTR_VAL ( interface -> name ) , ZSTR_VAL ( zend_ce_exception -> name ) , ZSTR_VAL ( zend_ce_error -> name ) )"		143098	0					
ANR	143125	Callee	zend_error_noreturn		143098	0					
ANR	143126	Identifier	zend_error_noreturn		143098	0					
ANR	143127	ArgumentList	E_ERROR		143098	1					
ANR	143128	Argument	E_ERROR		143098	0					
ANR	143129	Identifier	E_ERROR		143098	0					
ANR	143130	Argument	"""Class %s cannot implement interface %s, extend %s or %s instead"""		143098	1					
ANR	143131	PrimaryExpression	"""Class %s cannot implement interface %s, extend %s or %s instead"""		143098	0					
ANR	143132	Argument	ZSTR_VAL ( class_type -> name )		143098	2					
ANR	143133	CallExpression	ZSTR_VAL ( class_type -> name )		143098	0					
ANR	143134	Callee	ZSTR_VAL		143098	0					
ANR	143135	Identifier	ZSTR_VAL		143098	0					
ANR	143136	ArgumentList	class_type -> name		143098	1					
ANR	143137	Argument	class_type -> name		143098	0					
ANR	143138	PtrMemberAccess	class_type -> name		143098	0					
ANR	143139	Identifier	class_type		143098	0					
ANR	143140	Identifier	name		143098	1					
ANR	143141	Argument	ZSTR_VAL ( interface -> name )		143098	3					
ANR	143142	CallExpression	ZSTR_VAL ( interface -> name )		143098	0					
ANR	143143	Callee	ZSTR_VAL		143098	0					
ANR	143144	Identifier	ZSTR_VAL		143098	0					
ANR	143145	ArgumentList	interface -> name		143098	1					
ANR	143146	Argument	interface -> name		143098	0					
ANR	143147	PtrMemberAccess	interface -> name		143098	0					
ANR	143148	Identifier	interface		143098	0					
ANR	143149	Identifier	name		143098	1					
ANR	143150	Argument	ZSTR_VAL ( zend_ce_exception -> name )		143098	4					
ANR	143151	CallExpression	ZSTR_VAL ( zend_ce_exception -> name )		143098	0					
ANR	143152	Callee	ZSTR_VAL		143098	0					
ANR	143153	Identifier	ZSTR_VAL		143098	0					
ANR	143154	ArgumentList	zend_ce_exception -> name		143098	1					
ANR	143155	Argument	zend_ce_exception -> name		143098	0					
ANR	143156	PtrMemberAccess	zend_ce_exception -> name		143098	0					
ANR	143157	Identifier	zend_ce_exception		143098	0					
ANR	143158	Identifier	name		143098	1					
ANR	143159	Argument	ZSTR_VAL ( zend_ce_error -> name )		143098	5					
ANR	143160	CallExpression	ZSTR_VAL ( zend_ce_error -> name )		143098	0					
ANR	143161	Callee	ZSTR_VAL		143098	0					
ANR	143162	Identifier	ZSTR_VAL		143098	0					
ANR	143163	ArgumentList	zend_ce_error -> name		143098	1					
ANR	143164	Argument	zend_ce_error -> name		143098	0					
ANR	143165	PtrMemberAccess	zend_ce_error -> name		143098	0					
ANR	143166	Identifier	zend_ce_error		143098	0					
ANR	143167	Identifier	name		143098	1					
ANR	143168	ReturnStatement	return FAILURE ;	57:1:2592:2606	143098	2	True				
ANR	143169	Identifier	FAILURE		143098	0					
ANR	143170	ReturnType	static int		143098	1					
ANR	143171	Identifier	zend_implement_throwable		143098	2					
ANR	143172	ParameterList	"zend_class_entry * interface , zend_class_entry * class_type"		143098	3					
ANR	143173	Parameter	zend_class_entry * interface	47:36:2173:2199	143098	0	True				
ANR	143174	ParameterType	zend_class_entry *		143098	0					
ANR	143175	Identifier	interface		143098	1					
ANR	143176	Parameter	zend_class_entry * class_type	47:65:2202:2229	143098	1	True				
ANR	143177	ParameterType	zend_class_entry *		143098	0					
ANR	143178	Identifier	class_type		143098	1					
ANR	143179	CFGEntryNode	ENTRY		143098		True				
ANR	143180	CFGExitNode	EXIT		143098		True				
ANR	143181	Symbol	instanceof_function		143098						
ANR	143182	Symbol	* zend_ce_exception		143098						
ANR	143183	Symbol	SUCCESS		143098						
ANR	143184	Symbol	zend_ce_error		143098						
ANR	143185	Symbol	interface -> name		143098						
ANR	143186	Symbol	zend_ce_exception -> name		143098						
ANR	143187	Symbol	* interface		143098						
ANR	143188	Symbol	interface		143098						
ANR	143189	Symbol	FAILURE		143098						
ANR	143190	Symbol	ZSTR_VAL		143098						
ANR	143191	Symbol	class_type		143098						
ANR	143192	Symbol	E_ERROR		143098						
ANR	143193	Symbol	* zend_ce_error		143098						
ANR	143194	Symbol	zend_ce_exception		143098						
ANR	143195	Symbol	* class_type		143098						
ANR	143196	Symbol	zend_ce_error -> name		143098						
ANR	143197	Symbol	class_type -> name		143098						
ANR	143198	Function	i_get_exception_base	61:0:2621:2793							
ANR	143199	FunctionDef	i_get_exception_base (zval * object)		143198	0					
ANR	143200	CompoundStatement		62:0:2688:2793	143198	0					
ANR	143201	ReturnStatement	"return instanceof_function ( Z_OBJCE_P ( object ) , zend_ce_exception ) ? zend_ce_exception : zend_ce_error ;"	63:1:2691:2791	143198	0	True				
ANR	143202	ConditionalExpression	"instanceof_function ( Z_OBJCE_P ( object ) , zend_ce_exception ) ? zend_ce_exception : zend_ce_error"		143198	0					
ANR	143203	Condition	"instanceof_function ( Z_OBJCE_P ( object ) , zend_ce_exception )"		143198	0					
ANR	143204	CallExpression	"instanceof_function ( Z_OBJCE_P ( object ) , zend_ce_exception )"		143198	0					
ANR	143205	Callee	instanceof_function		143198	0					
ANR	143206	Identifier	instanceof_function		143198	0					
ANR	143207	ArgumentList	Z_OBJCE_P ( object )		143198	1					
ANR	143208	Argument	Z_OBJCE_P ( object )		143198	0					
ANR	143209	CallExpression	Z_OBJCE_P ( object )		143198	0					
ANR	143210	Callee	Z_OBJCE_P		143198	0					
ANR	143211	Identifier	Z_OBJCE_P		143198	0					
ANR	143212	ArgumentList	object		143198	1					
ANR	143213	Argument	object		143198	0					
ANR	143214	Identifier	object		143198	0					
ANR	143215	Argument	zend_ce_exception		143198	1					
ANR	143216	Identifier	zend_ce_exception		143198	0					
ANR	143217	Identifier	zend_ce_exception		143198	1					
ANR	143218	Identifier	zend_ce_error		143198	2					
ANR	143219	ReturnType	static inline zend_class_entry *		143198	1					
ANR	143220	Identifier	i_get_exception_base		143198	2					
ANR	143221	ParameterList	zval * object		143198	3					
ANR	143222	Parameter	zval * object	61:53:2674:2685	143198	0	True				
ANR	143223	ParameterType	zval *		143198	0					
ANR	143224	Identifier	object		143198	1					
ANR	143225	CFGEntryNode	ENTRY		143198		True				
ANR	143226	CFGExitNode	EXIT		143198		True				
ANR	143227	Symbol	instanceof_function		143198						
ANR	143228	Symbol	zend_ce_error		143198						
ANR	143229	Symbol	zend_ce_exception		143198						
ANR	143230	Symbol	Z_OBJCE_P		143198						
ANR	143231	Symbol	object		143198						
ANR	143232	Function	zend_get_exception_base	66:0:2796:2901							
ANR	143233	FunctionDef	zend_get_exception_base (zval * object)		143232	0					
ANR	143234	CompoundStatement		67:0:2861:2901	143232	0					
ANR	143235	ReturnStatement	return i_get_exception_base ( object ) ;	68:1:2864:2899	143232	0	True				
ANR	143236	CallExpression	i_get_exception_base ( object )		143232	0					
ANR	143237	Callee	i_get_exception_base		143232	0					
ANR	143238	Identifier	i_get_exception_base		143232	0					
ANR	143239	ArgumentList	object		143232	1					
ANR	143240	Argument	object		143232	0					
ANR	143241	Identifier	object		143232	0					
ANR	143242	ReturnType	ZEND_API zend_class_entry *		143232	1					
ANR	143243	Identifier	zend_get_exception_base		143232	2					
ANR	143244	ParameterList	zval * object		143232	3					
ANR	143245	Parameter	zval * object	66:51:2847:2858	143232	0	True				
ANR	143246	ParameterType	zval *		143232	0					
ANR	143247	Identifier	object		143232	1					
ANR	143248	CFGEntryNode	ENTRY		143232		True				
ANR	143249	CFGExitNode	EXIT		143232		True				
ANR	143250	Symbol	i_get_exception_base		143232						
ANR	143251	Symbol	object		143232						
ANR	143252	Function	zend_exception_set_previous	71:0:2904:4094							
ANR	143253	FunctionDef	"zend_exception_set_previous (zend_object * exception , zend_object * add_previous)"		143252	0					
ANR	143254	CompoundStatement		72:0:2988:4094	143252	0					
ANR	143255	IdentifierDeclStatement	"zval * previous , * ancestor , * ex ;"	73:4:2994:3024	143252	0	True				
ANR	143256	IdentifierDecl	* previous		143252	0					
ANR	143257	IdentifierDeclType	zval *		143252	0					
ANR	143258	Identifier	previous		143252	1					
ANR	143259	IdentifierDecl	* ancestor		143252	1					
ANR	143260	IdentifierDeclType	zval *		143252	0					
ANR	143261	Identifier	ancestor		143252	1					
ANR	143262	IdentifierDecl	* ex		143252	2					
ANR	143263	IdentifierDeclType	zval *		143252	0					
ANR	143264	Identifier	ex		143252	1					
ANR	143265	IdentifierDeclStatement	"zval pv , zv , rv ;"	74:1:3027:3043	143252	1	True				
ANR	143266	IdentifierDecl	pv		143252	0					
ANR	143267	IdentifierDeclType	zval		143252	0					
ANR	143268	Identifier	pv		143252	1					
ANR	143269	IdentifierDecl	zv		143252	1					
ANR	143270	IdentifierDeclType	zval		143252	0					
ANR	143271	Identifier	zv		143252	1					
ANR	143272	IdentifierDecl	rv		143252	2					
ANR	143273	IdentifierDeclType	zval		143252	0					
ANR	143274	Identifier	rv		143252	1					
ANR	143275	IdentifierDeclStatement	zend_class_entry * base_ce ;	75:1:3046:3071	143252	2	True				
ANR	143276	IdentifierDecl	* base_ce		143252	0					
ANR	143277	IdentifierDeclType	zend_class_entry *		143252	0					
ANR	143278	Identifier	base_ce		143252	1					
ANR	143279	IfStatement	if ( exception == add_previous || ! add_previous || ! exception )		143252	3					
ANR	143280	Condition	exception == add_previous || ! add_previous || ! exception	77:5:3079:3134	143252	0	True				
ANR	143281	OrExpression	exception == add_previous || ! add_previous || ! exception		143252	0		||			
ANR	143282	EqualityExpression	exception == add_previous		143252	0		==			
ANR	143283	Identifier	exception		143252	0					
ANR	143284	Identifier	add_previous		143252	1					
ANR	143285	OrExpression	! add_previous || ! exception		143252	1		||			
ANR	143286	UnaryOperationExpression	! add_previous		143252	0					
ANR	143287	UnaryOperator	!		143252	0					
ANR	143288	Identifier	add_previous		143252	1					
ANR	143289	UnaryOperationExpression	! exception		143252	1					
ANR	143290	UnaryOperator	!		143252	0					
ANR	143291	Identifier	exception		143252	1					
ANR	143292	CompoundStatement		6:63:148:148	143252	1					
ANR	143293	ReturnStatement	return ;	78:2:3141:3147	143252	0	True				
ANR	143294	ExpressionStatement	"ZVAL_OBJ ( & pv , add_previous )"	80:1:3153:3180	143252	4	True				
ANR	143295	CallExpression	"ZVAL_OBJ ( & pv , add_previous )"		143252	0					
ANR	143296	Callee	ZVAL_OBJ		143252	0					
ANR	143297	Identifier	ZVAL_OBJ		143252	0					
ANR	143298	ArgumentList	& pv		143252	1					
ANR	143299	Argument	& pv		143252	0					
ANR	143300	UnaryOperationExpression	& pv		143252	0					
ANR	143301	UnaryOperator	&		143252	0					
ANR	143302	Identifier	pv		143252	1					
ANR	143303	Argument	add_previous		143252	1					
ANR	143304	Identifier	add_previous		143252	0					
ANR	143305	IfStatement	"if ( ! instanceof_function ( Z_OBJCE ( pv ) , zend_ce_throwable ) )"		143252	5					
ANR	143306	Condition	"! instanceof_function ( Z_OBJCE ( pv ) , zend_ce_throwable )"	81:5:3187:3238	143252	0	True				
ANR	143307	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE ( pv ) , zend_ce_throwable )"		143252	0					
ANR	143308	UnaryOperator	!		143252	0					
ANR	143309	CallExpression	"instanceof_function ( Z_OBJCE ( pv ) , zend_ce_throwable )"		143252	1					
ANR	143310	Callee	instanceof_function		143252	0					
ANR	143311	Identifier	instanceof_function		143252	0					
ANR	143312	ArgumentList	Z_OBJCE ( pv )		143252	1					
ANR	143313	Argument	Z_OBJCE ( pv )		143252	0					
ANR	143314	CallExpression	Z_OBJCE ( pv )		143252	0					
ANR	143315	Callee	Z_OBJCE		143252	0					
ANR	143316	Identifier	Z_OBJCE		143252	0					
ANR	143317	ArgumentList	pv		143252	1					
ANR	143318	Argument	pv		143252	0					
ANR	143319	Identifier	pv		143252	0					
ANR	143320	Argument	zend_ce_throwable		143252	1					
ANR	143321	Identifier	zend_ce_throwable		143252	0					
ANR	143322	CompoundStatement		10:59:252:252	143252	1					
ANR	143323	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Previous exception must implement Throwable"" )"	82:2:3245:3325	143252	0	True				
ANR	143324	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Previous exception must implement Throwable"" )"		143252	0					
ANR	143325	Callee	zend_error_noreturn		143252	0					
ANR	143326	Identifier	zend_error_noreturn		143252	0					
ANR	143327	ArgumentList	E_CORE_ERROR		143252	1					
ANR	143328	Argument	E_CORE_ERROR		143252	0					
ANR	143329	Identifier	E_CORE_ERROR		143252	0					
ANR	143330	Argument	"""Previous exception must implement Throwable"""		143252	1					
ANR	143331	PrimaryExpression	"""Previous exception must implement Throwable"""		143252	0					
ANR	143332	ReturnStatement	return ;	83:2:3329:3335	143252	1	True				
ANR	143333	ExpressionStatement	"ZVAL_OBJ ( & zv , exception )"	85:1:3341:3365	143252	6	True				
ANR	143334	CallExpression	"ZVAL_OBJ ( & zv , exception )"		143252	0					
ANR	143335	Callee	ZVAL_OBJ		143252	0					
ANR	143336	Identifier	ZVAL_OBJ		143252	0					
ANR	143337	ArgumentList	& zv		143252	1					
ANR	143338	Argument	& zv		143252	0					
ANR	143339	UnaryOperationExpression	& zv		143252	0					
ANR	143340	UnaryOperator	&		143252	0					
ANR	143341	Identifier	zv		143252	1					
ANR	143342	Argument	exception		143252	1					
ANR	143343	Identifier	exception		143252	0					
ANR	143344	ExpressionStatement	ex = & zv	86:1:3368:3376	143252	7	True				
ANR	143345	AssignmentExpression	ex = & zv		143252	0		=			
ANR	143346	Identifier	ex		143252	0					
ANR	143347	UnaryOperationExpression	& zv		143252	1					
ANR	143348	UnaryOperator	&		143252	0					
ANR	143349	Identifier	zv		143252	1					
ANR	143350	DoStatement	do		143252	8					
ANR	143351	CompoundStatement		16:4:393:393	143252	0					
ANR	143352	ExpressionStatement	"ancestor = zend_read_property ( i_get_exception_base ( & pv ) , & pv , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"	88:2:3386:3489	143252	0	True				
ANR	143353	AssignmentExpression	"ancestor = zend_read_property ( i_get_exception_base ( & pv ) , & pv , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"		143252	0		=			
ANR	143354	Identifier	ancestor		143252	0					
ANR	143355	CallExpression	"zend_read_property ( i_get_exception_base ( & pv ) , & pv , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"		143252	1					
ANR	143356	Callee	zend_read_property		143252	0					
ANR	143357	Identifier	zend_read_property		143252	0					
ANR	143358	ArgumentList	i_get_exception_base ( & pv )		143252	1					
ANR	143359	Argument	i_get_exception_base ( & pv )		143252	0					
ANR	143360	CallExpression	i_get_exception_base ( & pv )		143252	0					
ANR	143361	Callee	i_get_exception_base		143252	0					
ANR	143362	Identifier	i_get_exception_base		143252	0					
ANR	143363	ArgumentList	& pv		143252	1					
ANR	143364	Argument	& pv		143252	0					
ANR	143365	UnaryOperationExpression	& pv		143252	0					
ANR	143366	UnaryOperator	&		143252	0					
ANR	143367	Identifier	pv		143252	1					
ANR	143368	Argument	& pv		143252	1					
ANR	143369	UnaryOperationExpression	& pv		143252	0					
ANR	143370	UnaryOperator	&		143252	0					
ANR	143371	Identifier	pv		143252	1					
ANR	143372	Argument	"""previous"""		143252	2					
ANR	143373	PrimaryExpression	"""previous"""		143252	0					
ANR	143374	Argument	"sizeof ( ""previous"" ) - 1"		143252	3					
ANR	143375	AdditiveExpression	"sizeof ( ""previous"" ) - 1"		143252	0		-			
ANR	143376	SizeofExpression	"sizeof ( ""previous"" )"		143252	0					
ANR	143377	Sizeof	sizeof		143252	0					
ANR	143378	PrimaryExpression	"""previous"""		143252	1					
ANR	143379	PrimaryExpression	1		143252	1					
ANR	143380	Argument	1		143252	4					
ANR	143381	PrimaryExpression	1		143252	0					
ANR	143382	Argument	& rv		143252	5					
ANR	143383	UnaryOperationExpression	& rv		143252	0					
ANR	143384	UnaryOperator	&		143252	0					
ANR	143385	Identifier	rv		143252	1					
ANR	143386	WhileStatement	while ( Z_TYPE_P ( ancestor ) == IS_OBJECT )		143252	1					
ANR	143387	Condition	Z_TYPE_P ( ancestor ) == IS_OBJECT	89:9:3500:3530	143252	0	True				
ANR	143388	EqualityExpression	Z_TYPE_P ( ancestor ) == IS_OBJECT		143252	0		==			
ANR	143389	CallExpression	Z_TYPE_P ( ancestor )		143252	0					
ANR	143390	Callee	Z_TYPE_P		143252	0					
ANR	143391	Identifier	Z_TYPE_P		143252	0					
ANR	143392	ArgumentList	ancestor		143252	1					
ANR	143393	Argument	ancestor		143252	0					
ANR	143394	Identifier	ancestor		143252	0					
ANR	143395	Identifier	IS_OBJECT		143252	1					
ANR	143396	CompoundStatement		18:42:544:544	143252	1					
ANR	143397	IfStatement	if ( Z_OBJ_P ( ancestor ) == Z_OBJ_P ( ex ) )		143252	0					
ANR	143398	Condition	Z_OBJ_P ( ancestor ) == Z_OBJ_P ( ex )	90:7:3542:3573	143252	0	True				
ANR	143399	EqualityExpression	Z_OBJ_P ( ancestor ) == Z_OBJ_P ( ex )		143252	0		==			
ANR	143400	CallExpression	Z_OBJ_P ( ancestor )		143252	0					
ANR	143401	Callee	Z_OBJ_P		143252	0					
ANR	143402	Identifier	Z_OBJ_P		143252	0					
ANR	143403	ArgumentList	ancestor		143252	1					
ANR	143404	Argument	ancestor		143252	0					
ANR	143405	Identifier	ancestor		143252	0					
ANR	143406	CallExpression	Z_OBJ_P ( ex )		143252	1					
ANR	143407	Callee	Z_OBJ_P		143252	0					
ANR	143408	Identifier	Z_OBJ_P		143252	0					
ANR	143409	ArgumentList	ex		143252	1					
ANR	143410	Argument	ex		143252	0					
ANR	143411	Identifier	ex		143252	0					
ANR	143412	CompoundStatement		19:41:587:587	143252	1					
ANR	143413	ExpressionStatement	OBJ_RELEASE ( add_previous )	91:4:3582:3607	143252	0	True				
ANR	143414	CallExpression	OBJ_RELEASE ( add_previous )		143252	0					
ANR	143415	Callee	OBJ_RELEASE		143252	0					
ANR	143416	Identifier	OBJ_RELEASE		143252	0					
ANR	143417	ArgumentList	add_previous		143252	1					
ANR	143418	Argument	add_previous		143252	0					
ANR	143419	Identifier	add_previous		143252	0					
ANR	143420	ReturnStatement	return ;	92:4:3613:3619	143252	1	True				
ANR	143421	ExpressionStatement	"ancestor = zend_read_property ( i_get_exception_base ( ancestor ) , ancestor , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"	94:3:3629:3742	143252	1	True				
ANR	143422	AssignmentExpression	"ancestor = zend_read_property ( i_get_exception_base ( ancestor ) , ancestor , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"		143252	0		=			
ANR	143423	Identifier	ancestor		143252	0					
ANR	143424	CallExpression	"zend_read_property ( i_get_exception_base ( ancestor ) , ancestor , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"		143252	1					
ANR	143425	Callee	zend_read_property		143252	0					
ANR	143426	Identifier	zend_read_property		143252	0					
ANR	143427	ArgumentList	i_get_exception_base ( ancestor )		143252	1					
ANR	143428	Argument	i_get_exception_base ( ancestor )		143252	0					
ANR	143429	CallExpression	i_get_exception_base ( ancestor )		143252	0					
ANR	143430	Callee	i_get_exception_base		143252	0					
ANR	143431	Identifier	i_get_exception_base		143252	0					
ANR	143432	ArgumentList	ancestor		143252	1					
ANR	143433	Argument	ancestor		143252	0					
ANR	143434	Identifier	ancestor		143252	0					
ANR	143435	Argument	ancestor		143252	1					
ANR	143436	Identifier	ancestor		143252	0					
ANR	143437	Argument	"""previous"""		143252	2					
ANR	143438	PrimaryExpression	"""previous"""		143252	0					
ANR	143439	Argument	"sizeof ( ""previous"" ) - 1"		143252	3					
ANR	143440	AdditiveExpression	"sizeof ( ""previous"" ) - 1"		143252	0		-			
ANR	143441	SizeofExpression	"sizeof ( ""previous"" )"		143252	0					
ANR	143442	Sizeof	sizeof		143252	0					
ANR	143443	PrimaryExpression	"""previous"""		143252	1					
ANR	143444	PrimaryExpression	1		143252	1					
ANR	143445	Argument	1		143252	4					
ANR	143446	PrimaryExpression	1		143252	0					
ANR	143447	Argument	& rv		143252	5					
ANR	143448	UnaryOperationExpression	& rv		143252	0					
ANR	143449	UnaryOperator	&		143252	0					
ANR	143450	Identifier	rv		143252	1					
ANR	143451	ExpressionStatement	base_ce = i_get_exception_base ( ex )	96:2:3750:3784	143252	2	True				
ANR	143452	AssignmentExpression	base_ce = i_get_exception_base ( ex )		143252	0		=			
ANR	143453	Identifier	base_ce		143252	0					
ANR	143454	CallExpression	i_get_exception_base ( ex )		143252	1					
ANR	143455	Callee	i_get_exception_base		143252	0					
ANR	143456	Identifier	i_get_exception_base		143252	0					
ANR	143457	ArgumentList	ex		143252	1					
ANR	143458	Argument	ex		143252	0					
ANR	143459	Identifier	ex		143252	0					
ANR	143460	ExpressionStatement	"previous = zend_read_property ( base_ce , ex , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"	97:2:3788:3872	143252	3	True				
ANR	143461	AssignmentExpression	"previous = zend_read_property ( base_ce , ex , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"		143252	0		=			
ANR	143462	Identifier	previous		143252	0					
ANR	143463	CallExpression	"zend_read_property ( base_ce , ex , ""previous"" , sizeof ( ""previous"" ) - 1 , 1 , & rv )"		143252	1					
ANR	143464	Callee	zend_read_property		143252	0					
ANR	143465	Identifier	zend_read_property		143252	0					
ANR	143466	ArgumentList	base_ce		143252	1					
ANR	143467	Argument	base_ce		143252	0					
ANR	143468	Identifier	base_ce		143252	0					
ANR	143469	Argument	ex		143252	1					
ANR	143470	Identifier	ex		143252	0					
ANR	143471	Argument	"""previous"""		143252	2					
ANR	143472	PrimaryExpression	"""previous"""		143252	0					
ANR	143473	Argument	"sizeof ( ""previous"" ) - 1"		143252	3					
ANR	143474	AdditiveExpression	"sizeof ( ""previous"" ) - 1"		143252	0		-			
ANR	143475	SizeofExpression	"sizeof ( ""previous"" )"		143252	0					
ANR	143476	Sizeof	sizeof		143252	0					
ANR	143477	PrimaryExpression	"""previous"""		143252	1					
ANR	143478	PrimaryExpression	1		143252	1					
ANR	143479	Argument	1		143252	4					
ANR	143480	PrimaryExpression	1		143252	0					
ANR	143481	Argument	& rv		143252	5					
ANR	143482	UnaryOperationExpression	& rv		143252	0					
ANR	143483	UnaryOperator	&		143252	0					
ANR	143484	Identifier	rv		143252	1					
ANR	143485	IfStatement	if ( Z_TYPE_P ( previous ) == IS_NULL )		143252	4					
ANR	143486	Condition	Z_TYPE_P ( previous ) == IS_NULL	98:6:3880:3908	143252	0	True				
ANR	143487	EqualityExpression	Z_TYPE_P ( previous ) == IS_NULL		143252	0		==			
ANR	143488	CallExpression	Z_TYPE_P ( previous )		143252	0					
ANR	143489	Callee	Z_TYPE_P		143252	0					
ANR	143490	Identifier	Z_TYPE_P		143252	0					
ANR	143491	ArgumentList	previous		143252	1					
ANR	143492	Argument	previous		143252	0					
ANR	143493	Identifier	previous		143252	0					
ANR	143494	Identifier	IS_NULL		143252	1					
ANR	143495	CompoundStatement		27:37:922:922	143252	1					
ANR	143496	ExpressionStatement	"zend_update_property ( base_ce , ex , ""previous"" , sizeof ( ""previous"" ) - 1 , & pv )"	99:3:3916:3988	143252	0	True				
ANR	143497	CallExpression	"zend_update_property ( base_ce , ex , ""previous"" , sizeof ( ""previous"" ) - 1 , & pv )"		143252	0					
ANR	143498	Callee	zend_update_property		143252	0					
ANR	143499	Identifier	zend_update_property		143252	0					
ANR	143500	ArgumentList	base_ce		143252	1					
ANR	143501	Argument	base_ce		143252	0					
ANR	143502	Identifier	base_ce		143252	0					
ANR	143503	Argument	ex		143252	1					
ANR	143504	Identifier	ex		143252	0					
ANR	143505	Argument	"""previous"""		143252	2					
ANR	143506	PrimaryExpression	"""previous"""		143252	0					
ANR	143507	Argument	"sizeof ( ""previous"" ) - 1"		143252	3					
ANR	143508	AdditiveExpression	"sizeof ( ""previous"" ) - 1"		143252	0		-			
ANR	143509	SizeofExpression	"sizeof ( ""previous"" )"		143252	0					
ANR	143510	Sizeof	sizeof		143252	0					
ANR	143511	PrimaryExpression	"""previous"""		143252	1					
ANR	143512	PrimaryExpression	1		143252	1					
ANR	143513	Argument	& pv		143252	4					
ANR	143514	UnaryOperationExpression	& pv		143252	0					
ANR	143515	UnaryOperator	&		143252	0					
ANR	143516	Identifier	pv		143252	1					
ANR	143517	ExpressionStatement	GC_REFCOUNT ( add_previous ) --	100:3:3993:4020	143252	1	True				
ANR	143518	PostIncDecOperationExpression	GC_REFCOUNT ( add_previous ) --		143252	0					
ANR	143519	CallExpression	GC_REFCOUNT ( add_previous )		143252	0					
ANR	143520	Callee	GC_REFCOUNT		143252	0					
ANR	143521	Identifier	GC_REFCOUNT		143252	0					
ANR	143522	ArgumentList	add_previous		143252	1					
ANR	143523	Argument	add_previous		143252	0					
ANR	143524	Identifier	add_previous		143252	0					
ANR	143525	IncDec	--		143252	1					
ANR	143526	ReturnStatement	return ;	101:3:4025:4031	143252	2	True				
ANR	143527	ExpressionStatement	ex = previous	103:2:4039:4052	143252	5	True				
ANR	143528	AssignmentExpression	ex = previous		143252	0		=			
ANR	143529	Identifier	ex		143252	0					
ANR	143530	Identifier	previous		143252	1					
ANR	143531	Condition	Z_OBJ_P ( ex ) != add_previous	104:10:4064:4090	143252	1	True				
ANR	143532	EqualityExpression	Z_OBJ_P ( ex ) != add_previous		143252	0		!=			
ANR	143533	CallExpression	Z_OBJ_P ( ex )		143252	0					
ANR	143534	Callee	Z_OBJ_P		143252	0					
ANR	143535	Identifier	Z_OBJ_P		143252	0					
ANR	143536	ArgumentList	ex		143252	1					
ANR	143537	Argument	ex		143252	0					
ANR	143538	Identifier	ex		143252	0					
ANR	143539	Identifier	add_previous		143252	1					
ANR	143540	ReturnType	void		143252	1					
ANR	143541	Identifier	zend_exception_set_previous		143252	2					
ANR	143542	ParameterList	"zend_object * exception , zend_object * add_previous"		143252	3					
ANR	143543	Parameter	zend_object * exception	71:33:2937:2958	143252	0	True				
ANR	143544	ParameterType	zend_object *		143252	0					
ANR	143545	Identifier	exception		143252	1					
ANR	143546	Parameter	zend_object * add_previous	71:57:2961:2985	143252	1	True				
ANR	143547	ParameterType	zend_object *		143252	0					
ANR	143548	Identifier	add_previous		143252	1					
ANR	143549	CFGEntryNode	ENTRY		143252		True				
ANR	143550	CFGExitNode	EXIT		143252		True				
ANR	143551	Symbol	exception		143252						
ANR	143552	Symbol	instanceof_function		143252						
ANR	143553	Symbol	i_get_exception_base		143252						
ANR	143554	Symbol	previous		143252						
ANR	143555	Symbol	rv		143252						
ANR	143556	Symbol	pv		143252						
ANR	143557	Symbol	Z_OBJ_P		143252						
ANR	143558	Symbol	ancestor		143252						
ANR	143559	Symbol	& zv		143252						
ANR	143560	Symbol	Z_TYPE_P		143252						
ANR	143561	Symbol	& rv		143252						
ANR	143562	Symbol	& pv		143252						
ANR	143563	Symbol	Z_OBJCE		143252						
ANR	143564	Symbol	ex		143252						
ANR	143565	Symbol	IS_NULL		143252						
ANR	143566	Symbol	zend_read_property		143252						
ANR	143567	Symbol	E_CORE_ERROR		143252						
ANR	143568	Symbol	add_previous		143252						
ANR	143569	Symbol	zv		143252						
ANR	143570	Symbol	base_ce		143252						
ANR	143571	Symbol	IS_OBJECT		143252						
ANR	143572	Symbol	GC_REFCOUNT		143252						
ANR	143573	Symbol	zend_ce_throwable		143252						
ANR	143574	Function	zend_exception_save	107:0:4097:4322							
ANR	143575	FunctionDef	zend_exception_save ()		143574	0					
ANR	143576	CompoundStatement		108:0:4138:4322	143574	0					
ANR	143577	IfStatement	if ( EG ( prev_exception ) )		143574	0					
ANR	143578	Condition	EG ( prev_exception )	109:5:4145:4162	143574	0	True				
ANR	143579	CallExpression	EG ( prev_exception )		143574	0					
ANR	143580	Callee	EG		143574	0					
ANR	143581	Identifier	EG		143574	0					
ANR	143582	ArgumentList	prev_exception		143574	1					
ANR	143583	Argument	prev_exception		143574	0					
ANR	143584	Identifier	prev_exception		143574	0					
ANR	143585	CompoundStatement		2:25:26:26	143574	1					
ANR	143586	ExpressionStatement	"zend_exception_set_previous ( EG ( exception ) , EG ( prev_exception ) )"	110:2:4169:4231	143574	0	True				
ANR	143587	CallExpression	"zend_exception_set_previous ( EG ( exception ) , EG ( prev_exception ) )"		143574	0					
ANR	143588	Callee	zend_exception_set_previous		143574	0					
ANR	143589	Identifier	zend_exception_set_previous		143574	0					
ANR	143590	ArgumentList	EG ( exception )		143574	1					
ANR	143591	Argument	EG ( exception )		143574	0					
ANR	143592	CallExpression	EG ( exception )		143574	0					
ANR	143593	Callee	EG		143574	0					
ANR	143594	Identifier	EG		143574	0					
ANR	143595	ArgumentList	exception		143574	1					
ANR	143596	Argument	exception		143574	0					
ANR	143597	Identifier	exception		143574	0					
ANR	143598	Argument	EG ( prev_exception )		143574	1					
ANR	143599	CallExpression	EG ( prev_exception )		143574	0					
ANR	143600	Callee	EG		143574	0					
ANR	143601	Identifier	EG		143574	0					
ANR	143602	ArgumentList	prev_exception		143574	1					
ANR	143603	Argument	prev_exception		143574	0					
ANR	143604	Identifier	prev_exception		143574	0					
ANR	143605	IfStatement	if ( EG ( exception ) )		143574	1					
ANR	143606	Condition	EG ( exception )	112:5:4241:4253	143574	0	True				
ANR	143607	CallExpression	EG ( exception )		143574	0					
ANR	143608	Callee	EG		143574	0					
ANR	143609	Identifier	EG		143574	0					
ANR	143610	ArgumentList	exception		143574	1					
ANR	143611	Argument	exception		143574	0					
ANR	143612	Identifier	exception		143574	0					
ANR	143613	CompoundStatement		5:20:117:117	143574	1					
ANR	143614	ExpressionStatement	EG ( prev_exception ) = EG ( exception )	113:2:4260:4294	143574	0	True				
ANR	143615	AssignmentExpression	EG ( prev_exception ) = EG ( exception )		143574	0		=			
ANR	143616	CallExpression	EG ( prev_exception )		143574	0					
ANR	143617	Callee	EG		143574	0					
ANR	143618	Identifier	EG		143574	0					
ANR	143619	ArgumentList	prev_exception		143574	1					
ANR	143620	Argument	prev_exception		143574	0					
ANR	143621	Identifier	prev_exception		143574	0					
ANR	143622	CallExpression	EG ( exception )		143574	1					
ANR	143623	Callee	EG		143574	0					
ANR	143624	Identifier	EG		143574	0					
ANR	143625	ArgumentList	exception		143574	1					
ANR	143626	Argument	exception		143574	0					
ANR	143627	Identifier	exception		143574	0					
ANR	143628	ExpressionStatement	EG ( exception ) = NULL	115:1:4300:4320	143574	2	True				
ANR	143629	AssignmentExpression	EG ( exception ) = NULL		143574	0		=			
ANR	143630	CallExpression	EG ( exception )		143574	0					
ANR	143631	Callee	EG		143574	0					
ANR	143632	Identifier	EG		143574	0					
ANR	143633	ArgumentList	exception		143574	1					
ANR	143634	Argument	exception		143574	0					
ANR	143635	Identifier	exception		143574	0					
ANR	143636	Identifier	NULL		143574	1					
ANR	143637	ReturnType	void		143574	1					
ANR	143638	Identifier	zend_exception_save		143574	2					
ANR	143639	ParameterList			143574	3					
ANR	143640	CFGEntryNode	ENTRY		143574		True				
ANR	143641	CFGExitNode	EXIT		143574		True				
ANR	143642	Symbol	exception		143574						
ANR	143643	Symbol	prev_exception		143574						
ANR	143644	Symbol	EG		143574						
ANR	143645	Symbol	NULL		143574						
ANR	143646	Function	zend_exception_restore	119:0:4335:4584							
ANR	143647	FunctionDef	zend_exception_restore ()		143646	0					
ANR	143648	CompoundStatement		120:0:4379:4584	143646	0					
ANR	143649	IfStatement	if ( EG ( prev_exception ) )		143646	0					
ANR	143650	Condition	EG ( prev_exception )	121:5:4386:4403	143646	0	True				
ANR	143651	CallExpression	EG ( prev_exception )		143646	0					
ANR	143652	Callee	EG		143646	0					
ANR	143653	Identifier	EG		143646	0					
ANR	143654	ArgumentList	prev_exception		143646	1					
ANR	143655	Argument	prev_exception		143646	0					
ANR	143656	Identifier	prev_exception		143646	0					
ANR	143657	CompoundStatement		2:25:26:26	143646	1					
ANR	143658	IfStatement	if ( EG ( exception ) )		143646	0					
ANR	143659	Condition	EG ( exception )	122:6:4414:4426	143646	0	True				
ANR	143660	CallExpression	EG ( exception )		143646	0					
ANR	143661	Callee	EG		143646	0					
ANR	143662	Identifier	EG		143646	0					
ANR	143663	ArgumentList	exception		143646	1					
ANR	143664	Argument	exception		143646	0					
ANR	143665	Identifier	exception		143646	0					
ANR	143666	CompoundStatement		3:21:49:49	143646	1					
ANR	143667	ExpressionStatement	"zend_exception_set_previous ( EG ( exception ) , EG ( prev_exception ) )"	123:3:4434:4496	143646	0	True				
ANR	143668	CallExpression	"zend_exception_set_previous ( EG ( exception ) , EG ( prev_exception ) )"		143646	0					
ANR	143669	Callee	zend_exception_set_previous		143646	0					
ANR	143670	Identifier	zend_exception_set_previous		143646	0					
ANR	143671	ArgumentList	EG ( exception )		143646	1					
ANR	143672	Argument	EG ( exception )		143646	0					
ANR	143673	CallExpression	EG ( exception )		143646	0					
ANR	143674	Callee	EG		143646	0					
ANR	143675	Identifier	EG		143646	0					
ANR	143676	ArgumentList	exception		143646	1					
ANR	143677	Argument	exception		143646	0					
ANR	143678	Identifier	exception		143646	0					
ANR	143679	Argument	EG ( prev_exception )		143646	1					
ANR	143680	CallExpression	EG ( prev_exception )		143646	0					
ANR	143681	Callee	EG		143646	0					
ANR	143682	Identifier	EG		143646	0					
ANR	143683	ArgumentList	prev_exception		143646	1					
ANR	143684	Argument	prev_exception		143646	0					
ANR	143685	Identifier	prev_exception		143646	0					
ANR	143686	ElseStatement	else		143646	0					
ANR	143687	CompoundStatement		5:9:127:127	143646	0					
ANR	143688	ExpressionStatement	EG ( exception ) = EG ( prev_exception )	125:3:4512:4546	143646	0	True				
ANR	143689	AssignmentExpression	EG ( exception ) = EG ( prev_exception )		143646	0		=			
ANR	143690	CallExpression	EG ( exception )		143646	0					
ANR	143691	Callee	EG		143646	0					
ANR	143692	Identifier	EG		143646	0					
ANR	143693	ArgumentList	exception		143646	1					
ANR	143694	Argument	exception		143646	0					
ANR	143695	Identifier	exception		143646	0					
ANR	143696	CallExpression	EG ( prev_exception )		143646	1					
ANR	143697	Callee	EG		143646	0					
ANR	143698	Identifier	EG		143646	0					
ANR	143699	ArgumentList	prev_exception		143646	1					
ANR	143700	Argument	prev_exception		143646	0					
ANR	143701	Identifier	prev_exception		143646	0					
ANR	143702	ExpressionStatement	EG ( prev_exception ) = NULL	127:2:4554:4579	143646	1	True				
ANR	143703	AssignmentExpression	EG ( prev_exception ) = NULL		143646	0		=			
ANR	143704	CallExpression	EG ( prev_exception )		143646	0					
ANR	143705	Callee	EG		143646	0					
ANR	143706	Identifier	EG		143646	0					
ANR	143707	ArgumentList	prev_exception		143646	1					
ANR	143708	Argument	prev_exception		143646	0					
ANR	143709	Identifier	prev_exception		143646	0					
ANR	143710	Identifier	NULL		143646	1					
ANR	143711	ReturnType	void		143646	1					
ANR	143712	Identifier	zend_exception_restore		143646	2					
ANR	143713	ParameterList			143646	3					
ANR	143714	CFGEntryNode	ENTRY		143646		True				
ANR	143715	CFGExitNode	EXIT		143646		True				
ANR	143716	Symbol	exception		143646						
ANR	143717	Symbol	prev_exception		143646						
ANR	143718	Symbol	EG		143646						
ANR	143719	Symbol	NULL		143646						
ANR	143720	Function	zend_throw_exception_internal	132:0:4597:5828							
ANR	143721	FunctionDef	zend_throw_exception_internal (zval * exception)		143720	0					
ANR	143722	CompoundStatement		133:0:4678:5828	143720	0					
ANR	143723	IfStatement	if ( DTRACE_EXCEPTION_THROWN_ENABLED ( ) )		143720	0					
ANR	143724	Condition	DTRACE_EXCEPTION_THROWN_ENABLED ( )	135:5:4704:4736	143720	0	True				
ANR	143725	CallExpression	DTRACE_EXCEPTION_THROWN_ENABLED ( )		143720	0					
ANR	143726	Callee	DTRACE_EXCEPTION_THROWN_ENABLED		143720	0					
ANR	143727	Identifier	DTRACE_EXCEPTION_THROWN_ENABLED		143720	0					
ANR	143728	ArgumentList			143720	1					
ANR	143729	CompoundStatement		3:40:60:60	143720	1					
ANR	143730	IfStatement	if ( exception != NULL )		143720	0					
ANR	143731	Condition	exception != NULL	136:6:4747:4763	143720	0	True				
ANR	143732	EqualityExpression	exception != NULL		143720	0		!=			
ANR	143733	Identifier	exception		143720	0					
ANR	143734	Identifier	NULL		143720	1					
ANR	143735	CompoundStatement		4:25:87:87	143720	1					
ANR	143736	ExpressionStatement	DTRACE_EXCEPTION_THROWN ( ZSTR_VAL ( Z_OBJ_P ( exception ) -> ce -> name ) )	137:3:4771:4834	143720	0	True				
ANR	143737	CallExpression	DTRACE_EXCEPTION_THROWN ( ZSTR_VAL ( Z_OBJ_P ( exception ) -> ce -> name ) )		143720	0					
ANR	143738	Callee	DTRACE_EXCEPTION_THROWN		143720	0					
ANR	143739	Identifier	DTRACE_EXCEPTION_THROWN		143720	0					
ANR	143740	ArgumentList	ZSTR_VAL ( Z_OBJ_P ( exception ) -> ce -> name )		143720	1					
ANR	143741	Argument	ZSTR_VAL ( Z_OBJ_P ( exception ) -> ce -> name )		143720	0					
ANR	143742	CallExpression	ZSTR_VAL ( Z_OBJ_P ( exception ) -> ce -> name )		143720	0					
ANR	143743	Callee	ZSTR_VAL		143720	0					
ANR	143744	Identifier	ZSTR_VAL		143720	0					
ANR	143745	ArgumentList	Z_OBJ_P ( exception ) -> ce -> name		143720	1					
ANR	143746	Argument	Z_OBJ_P ( exception ) -> ce -> name		143720	0					
ANR	143747	PtrMemberAccess	Z_OBJ_P ( exception ) -> ce -> name		143720	0					
ANR	143748	PtrMemberAccess	Z_OBJ_P ( exception ) -> ce		143720	0					
ANR	143749	CallExpression	Z_OBJ_P ( exception )		143720	0					
ANR	143750	Callee	Z_OBJ_P		143720	0					
ANR	143751	Identifier	Z_OBJ_P		143720	0					
ANR	143752	ArgumentList	exception		143720	1					
ANR	143753	Argument	exception		143720	0					
ANR	143754	Identifier	exception		143720	0					
ANR	143755	Identifier	ce		143720	1					
ANR	143756	Identifier	name		143720	1					
ANR	143757	ElseStatement	else		143720	0					
ANR	143758	CompoundStatement		6:9:166:166	143720	0					
ANR	143759	ExpressionStatement	DTRACE_EXCEPTION_THROWN ( NULL )	139:3:4850:4879	143720	0	True				
ANR	143760	CallExpression	DTRACE_EXCEPTION_THROWN ( NULL )		143720	0					
ANR	143761	Callee	DTRACE_EXCEPTION_THROWN		143720	0					
ANR	143762	Identifier	DTRACE_EXCEPTION_THROWN		143720	0					
ANR	143763	ArgumentList	NULL		143720	1					
ANR	143764	Argument	NULL		143720	0					
ANR	143765	Identifier	NULL		143720	0					
ANR	143766	IfStatement	if ( exception != NULL )		143720	1					
ANR	143767	Condition	exception != NULL	144:5:4919:4935	143720	0	True				
ANR	143768	EqualityExpression	exception != NULL		143720	0		!=			
ANR	143769	Identifier	exception		143720	0					
ANR	143770	Identifier	NULL		143720	1					
ANR	143771	CompoundStatement		13:2:263:300	143720	1					
ANR	143772	IdentifierDeclStatement	zend_object * previous = EG ( exception ) ;	145:2:4942:4979	143720	0	True				
ANR	143773	IdentifierDecl	* previous = EG ( exception )		143720	0					
ANR	143774	IdentifierDeclType	zend_object *		143720	0					
ANR	143775	Identifier	previous		143720	1					
ANR	143776	AssignmentExpression	* previous = EG ( exception )		143720	2		=			
ANR	143777	Identifier	previous		143720	0					
ANR	143778	CallExpression	EG ( exception )		143720	1					
ANR	143779	Callee	EG		143720	0					
ANR	143780	Identifier	EG		143720	0					
ANR	143781	ArgumentList	exception		143720	1					
ANR	143782	Argument	exception		143720	0					
ANR	143783	Identifier	exception		143720	0					
ANR	143784	ExpressionStatement	"zend_exception_set_previous ( Z_OBJ_P ( exception ) , EG ( exception ) )"	146:2:4983:5045	143720	1	True				
ANR	143785	CallExpression	"zend_exception_set_previous ( Z_OBJ_P ( exception ) , EG ( exception ) )"		143720	0					
ANR	143786	Callee	zend_exception_set_previous		143720	0					
ANR	143787	Identifier	zend_exception_set_previous		143720	0					
ANR	143788	ArgumentList	Z_OBJ_P ( exception )		143720	1					
ANR	143789	Argument	Z_OBJ_P ( exception )		143720	0					
ANR	143790	CallExpression	Z_OBJ_P ( exception )		143720	0					
ANR	143791	Callee	Z_OBJ_P		143720	0					
ANR	143792	Identifier	Z_OBJ_P		143720	0					
ANR	143793	ArgumentList	exception		143720	1					
ANR	143794	Argument	exception		143720	0					
ANR	143795	Identifier	exception		143720	0					
ANR	143796	Argument	EG ( exception )		143720	1					
ANR	143797	CallExpression	EG ( exception )		143720	0					
ANR	143798	Callee	EG		143720	0					
ANR	143799	Identifier	EG		143720	0					
ANR	143800	ArgumentList	exception		143720	1					
ANR	143801	Argument	exception		143720	0					
ANR	143802	Identifier	exception		143720	0					
ANR	143803	ExpressionStatement	EG ( exception ) = Z_OBJ_P ( exception )	147:2:5049:5083	143720	2	True				
ANR	143804	AssignmentExpression	EG ( exception ) = Z_OBJ_P ( exception )		143720	0		=			
ANR	143805	CallExpression	EG ( exception )		143720	0					
ANR	143806	Callee	EG		143720	0					
ANR	143807	Identifier	EG		143720	0					
ANR	143808	ArgumentList	exception		143720	1					
ANR	143809	Argument	exception		143720	0					
ANR	143810	Identifier	exception		143720	0					
ANR	143811	CallExpression	Z_OBJ_P ( exception )		143720	1					
ANR	143812	Callee	Z_OBJ_P		143720	0					
ANR	143813	Identifier	Z_OBJ_P		143720	0					
ANR	143814	ArgumentList	exception		143720	1					
ANR	143815	Argument	exception		143720	0					
ANR	143816	Identifier	exception		143720	0					
ANR	143817	IfStatement	if ( previous )		143720	3					
ANR	143818	Condition	previous	148:6:5091:5098	143720	0	True				
ANR	143819	Identifier	previous		143720	0					
ANR	143820	CompoundStatement		16:16:422:422	143720	1					
ANR	143821	ReturnStatement	return ;	149:3:5106:5112	143720	0	True				
ANR	143822	IfStatement	if ( ! EG ( current_execute_data ) )		143720	2					
ANR	143823	Condition	! EG ( current_execute_data )	152:5:5126:5150	143720	0	True				
ANR	143824	UnaryOperationExpression	! EG ( current_execute_data )		143720	0					
ANR	143825	UnaryOperator	!		143720	0					
ANR	143826	CallExpression	EG ( current_execute_data )		143720	1					
ANR	143827	Callee	EG		143720	0					
ANR	143828	Identifier	EG		143720	0					
ANR	143829	ArgumentList	current_execute_data		143720	1					
ANR	143830	Argument	current_execute_data		143720	0					
ANR	143831	Identifier	current_execute_data		143720	0					
ANR	143832	CompoundStatement		20:32:474:474	143720	1					
ANR	143833	IfStatement	if ( exception && Z_OBJCE_P ( exception ) == zend_ce_parse_error )		143720	0					
ANR	143834	Condition	exception && Z_OBJCE_P ( exception ) == zend_ce_parse_error	153:6:5161:5216	143720	0	True				
ANR	143835	AndExpression	exception && Z_OBJCE_P ( exception ) == zend_ce_parse_error		143720	0		&&			
ANR	143836	Identifier	exception		143720	0					
ANR	143837	EqualityExpression	Z_OBJCE_P ( exception ) == zend_ce_parse_error		143720	1		==			
ANR	143838	CallExpression	Z_OBJCE_P ( exception )		143720	0					
ANR	143839	Callee	Z_OBJCE_P		143720	0					
ANR	143840	Identifier	Z_OBJCE_P		143720	0					
ANR	143841	ArgumentList	exception		143720	1					
ANR	143842	Argument	exception		143720	0					
ANR	143843	Identifier	exception		143720	0					
ANR	143844	Identifier	zend_ce_parse_error		143720	1					
ANR	143845	CompoundStatement		21:64:540:540	143720	1					
ANR	143846	ReturnStatement	return ;	154:3:5224:5230	143720	0	True				
ANR	143847	IfStatement	if ( EG ( exception ) )		143720	1					
ANR	143848	Condition	EG ( exception )	156:5:5241:5253	143720	0	True				
ANR	143849	CallExpression	EG ( exception )		143720	0					
ANR	143850	Callee	EG		143720	0					
ANR	143851	Identifier	EG		143720	0					
ANR	143852	ArgumentList	exception		143720	1					
ANR	143853	Argument	exception		143720	0					
ANR	143854	Identifier	exception		143720	0					
ANR	143855	CompoundStatement		24:20:577:577	143720	1					
ANR	143856	ExpressionStatement	"zend_exception_error ( EG ( exception ) , E_ERROR )"	157:3:5261:5305	143720	0	True				
ANR	143857	CallExpression	"zend_exception_error ( EG ( exception ) , E_ERROR )"		143720	0					
ANR	143858	Callee	zend_exception_error		143720	0					
ANR	143859	Identifier	zend_exception_error		143720	0					
ANR	143860	ArgumentList	EG ( exception )		143720	1					
ANR	143861	Argument	EG ( exception )		143720	0					
ANR	143862	CallExpression	EG ( exception )		143720	0					
ANR	143863	Callee	EG		143720	0					
ANR	143864	Identifier	EG		143720	0					
ANR	143865	ArgumentList	exception		143720	1					
ANR	143866	Argument	exception		143720	0					
ANR	143867	Identifier	exception		143720	0					
ANR	143868	Argument	E_ERROR		143720	1					
ANR	143869	Identifier	E_ERROR		143720	0					
ANR	143870	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Exception thrown without a stack frame"" )"	159:2:5313:5388	143720	2	True				
ANR	143871	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Exception thrown without a stack frame"" )"		143720	0					
ANR	143872	Callee	zend_error_noreturn		143720	0					
ANR	143873	Identifier	zend_error_noreturn		143720	0					
ANR	143874	ArgumentList	E_CORE_ERROR		143720	1					
ANR	143875	Argument	E_CORE_ERROR		143720	0					
ANR	143876	Identifier	E_CORE_ERROR		143720	0					
ANR	143877	Argument	"""Exception thrown without a stack frame"""		143720	1					
ANR	143878	PrimaryExpression	"""Exception thrown without a stack frame"""		143720	0					
ANR	143879	IfStatement	if ( zend_throw_exception_hook )		143720	3					
ANR	143880	Condition	zend_throw_exception_hook	162:5:5399:5423	143720	0	True				
ANR	143881	Identifier	zend_throw_exception_hook		143720	0					
ANR	143882	CompoundStatement		30:32:747:747	143720	1					
ANR	143883	ExpressionStatement	zend_throw_exception_hook ( exception )	163:2:5430:5466	143720	0	True				
ANR	143884	CallExpression	zend_throw_exception_hook ( exception )		143720	0					
ANR	143885	Callee	zend_throw_exception_hook		143720	0					
ANR	143886	Identifier	zend_throw_exception_hook		143720	0					
ANR	143887	ArgumentList	exception		143720	1					
ANR	143888	Argument	exception		143720	0					
ANR	143889	Identifier	exception		143720	0					
ANR	143890	IfStatement	if ( ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode == ZEND_HANDLE_EXCEPTION )		143720	4					
ANR	143891	Condition	! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode == ZEND_HANDLE_EXCEPTION	166:5:5477:5650	143720	0	True				
ANR	143892	OrExpression	! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode == ZEND_HANDLE_EXCEPTION		143720	0		||			
ANR	143893	UnaryOperationExpression	! EG ( current_execute_data ) -> func		143720	0					
ANR	143894	UnaryOperator	!		143720	0					
ANR	143895	PtrMemberAccess	EG ( current_execute_data ) -> func		143720	1					
ANR	143896	CallExpression	EG ( current_execute_data )		143720	0					
ANR	143897	Callee	EG		143720	0					
ANR	143898	Identifier	EG		143720	0					
ANR	143899	ArgumentList	current_execute_data		143720	1					
ANR	143900	Argument	current_execute_data		143720	0					
ANR	143901	Identifier	current_execute_data		143720	0					
ANR	143902	Identifier	func		143720	1					
ANR	143903	OrExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode == ZEND_HANDLE_EXCEPTION		143720	1		||			
ANR	143904	UnaryOperationExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		143720	0					
ANR	143905	UnaryOperator	!		143720	0					
ANR	143906	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		143720	1					
ANR	143907	Callee	ZEND_USER_CODE		143720	0					
ANR	143908	Identifier	ZEND_USER_CODE		143720	0					
ANR	143909	ArgumentList	EG ( current_execute_data ) -> func -> common . type		143720	1					
ANR	143910	Argument	EG ( current_execute_data ) -> func -> common . type		143720	0					
ANR	143911	MemberAccess	EG ( current_execute_data ) -> func -> common . type		143720	0					
ANR	143912	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		143720	0					
ANR	143913	PtrMemberAccess	EG ( current_execute_data ) -> func		143720	0					
ANR	143914	CallExpression	EG ( current_execute_data )		143720	0					
ANR	143915	Callee	EG		143720	0					
ANR	143916	Identifier	EG		143720	0					
ANR	143917	ArgumentList	current_execute_data		143720	1					
ANR	143918	Argument	current_execute_data		143720	0					
ANR	143919	Identifier	current_execute_data		143720	0					
ANR	143920	Identifier	func		143720	1					
ANR	143921	Identifier	common		143720	1					
ANR	143922	Identifier	type		143720	1					
ANR	143923	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode == ZEND_HANDLE_EXCEPTION		143720	1		==			
ANR	143924	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		143720	0					
ANR	143925	PtrMemberAccess	EG ( current_execute_data ) -> opline		143720	0					
ANR	143926	CallExpression	EG ( current_execute_data )		143720	0					
ANR	143927	Callee	EG		143720	0					
ANR	143928	Identifier	EG		143720	0					
ANR	143929	ArgumentList	current_execute_data		143720	1					
ANR	143930	Argument	current_execute_data		143720	0					
ANR	143931	Identifier	current_execute_data		143720	0					
ANR	143932	Identifier	opline		143720	1					
ANR	143933	Identifier	opcode		143720	1					
ANR	143934	Identifier	ZEND_HANDLE_EXCEPTION		143720	1					
ANR	143935	CompoundStatement		36:72:974:974	143720	1					
ANR	143936	ReturnStatement	return ;	170:2:5698:5704	143720	0	True				
ANR	143937	ExpressionStatement	EG ( opline_before_exception ) = EG ( current_execute_data ) -> opline	172:1:5710:5772	143720	5	True				
ANR	143938	AssignmentExpression	EG ( opline_before_exception ) = EG ( current_execute_data ) -> opline		143720	0		=			
ANR	143939	CallExpression	EG ( opline_before_exception )		143720	0					
ANR	143940	Callee	EG		143720	0					
ANR	143941	Identifier	EG		143720	0					
ANR	143942	ArgumentList	opline_before_exception		143720	1					
ANR	143943	Argument	opline_before_exception		143720	0					
ANR	143944	Identifier	opline_before_exception		143720	0					
ANR	143945	PtrMemberAccess	EG ( current_execute_data ) -> opline		143720	1					
ANR	143946	CallExpression	EG ( current_execute_data )		143720	0					
ANR	143947	Callee	EG		143720	0					
ANR	143948	Identifier	EG		143720	0					
ANR	143949	ArgumentList	current_execute_data		143720	1					
ANR	143950	Argument	current_execute_data		143720	0					
ANR	143951	Identifier	current_execute_data		143720	0					
ANR	143952	Identifier	opline		143720	1					
ANR	143953	ExpressionStatement	EG ( current_execute_data ) -> opline = EG ( exception_op )	173:1:5775:5826	143720	6	True				
ANR	143954	AssignmentExpression	EG ( current_execute_data ) -> opline = EG ( exception_op )		143720	0		=			
ANR	143955	PtrMemberAccess	EG ( current_execute_data ) -> opline		143720	0					
ANR	143956	CallExpression	EG ( current_execute_data )		143720	0					
ANR	143957	Callee	EG		143720	0					
ANR	143958	Identifier	EG		143720	0					
ANR	143959	ArgumentList	current_execute_data		143720	1					
ANR	143960	Argument	current_execute_data		143720	0					
ANR	143961	Identifier	current_execute_data		143720	0					
ANR	143962	Identifier	opline		143720	1					
ANR	143963	CallExpression	EG ( exception_op )		143720	1					
ANR	143964	Callee	EG		143720	0					
ANR	143965	Identifier	EG		143720	0					
ANR	143966	ArgumentList	exception_op		143720	1					
ANR	143967	Argument	exception_op		143720	0					
ANR	143968	Identifier	exception_op		143720	0					
ANR	143969	ReturnType	ZEND_API ZEND_COLD void		143720	1					
ANR	143970	Identifier	zend_throw_exception_internal		143720	2					
ANR	143971	ParameterList	zval * exception		143720	3					
ANR	143972	Parameter	zval * exception	132:54:4651:4665	143720	0	True				
ANR	143973	ParameterType	zval *		143720	0					
ANR	143974	Identifier	exception		143720	1					
ANR	143975	CFGEntryNode	ENTRY		143720		True				
ANR	143976	CFGExitNode	EXIT		143720		True				
ANR	143977	Symbol	exception		143720						
ANR	143978	Symbol	* Z_OBJ_P ( exception ) -> ce		143720						
ANR	143979	Symbol	Z_OBJ_P		143720						
ANR	143980	Symbol	EG ( current_execute_data ) -> func -> common . type		143720						
ANR	143981	Symbol	EG ( current_execute_data ) -> func		143720						
ANR	143982	Symbol	current_execute_data		143720						
ANR	143983	Symbol	ZEND_HANDLE_EXCEPTION		143720						
ANR	143984	Symbol	* EG		143720						
ANR	143985	Symbol	EG ( current_execute_data ) -> opline		143720						
ANR	143986	Symbol	* * EG		143720						
ANR	143987	Symbol	zend_throw_exception_hook		143720						
ANR	143988	Symbol	* * Z_OBJ_P		143720						
ANR	143989	Symbol	opline_before_exception		143720						
ANR	143990	Symbol	exception_op		143720						
ANR	143991	Symbol	E_CORE_ERROR		143720						
ANR	143992	Symbol	Z_OBJCE_P		143720						
ANR	143993	Symbol	DTRACE_EXCEPTION_THROWN_ENABLED		143720						
ANR	143994	Symbol	EG		143720						
ANR	143995	Symbol	NULL		143720						
ANR	143996	Symbol	previous		143720						
ANR	143997	Symbol	Z_OBJ_P ( exception ) -> ce -> name		143720						
ANR	143998	Symbol	EG ( current_execute_data ) -> opline -> opcode		143720						
ANR	143999	Symbol	* Z_OBJ_P		143720						
ANR	144000	Symbol	* EG ( current_execute_data ) -> opline		143720						
ANR	144001	Symbol	* EG ( current_execute_data ) -> func		143720						
ANR	144002	Symbol	ZSTR_VAL		143720						
ANR	144003	Symbol	E_ERROR		143720						
ANR	144004	Symbol	EG ( current_execute_data ) -> func -> common		143720						
ANR	144005	Symbol	Z_OBJ_P ( exception ) -> ce		143720						
ANR	144006	Symbol	ZEND_USER_CODE		143720						
ANR	144007	Symbol	zend_ce_parse_error		143720						
ANR	144008	Function	zend_clear_exception	177:0:5841:6201							
ANR	144009	FunctionDef	zend_clear_exception ()		144008	0					
ANR	144010	CompoundStatement		178:0:5892:6201	144008	0					
ANR	144011	IfStatement	if ( EG ( prev_exception ) )		144008	0					
ANR	144012	Condition	EG ( prev_exception )	179:5:5899:5916	144008	0	True				
ANR	144013	CallExpression	EG ( prev_exception )		144008	0					
ANR	144014	Callee	EG		144008	0					
ANR	144015	Identifier	EG		144008	0					
ANR	144016	ArgumentList	prev_exception		144008	1					
ANR	144017	Argument	prev_exception		144008	0					
ANR	144018	Identifier	prev_exception		144008	0					
ANR	144019	CompoundStatement		2:25:26:26	144008	1					
ANR	144020	ExpressionStatement	OBJ_RELEASE ( EG ( prev_exception ) )	181:2:5924:5955	144008	0	True				
ANR	144021	CallExpression	OBJ_RELEASE ( EG ( prev_exception ) )		144008	0					
ANR	144022	Callee	OBJ_RELEASE		144008	0					
ANR	144023	Identifier	OBJ_RELEASE		144008	0					
ANR	144024	ArgumentList	EG ( prev_exception )		144008	1					
ANR	144025	Argument	EG ( prev_exception )		144008	0					
ANR	144026	CallExpression	EG ( prev_exception )		144008	0					
ANR	144027	Callee	EG		144008	0					
ANR	144028	Identifier	EG		144008	0					
ANR	144029	ArgumentList	prev_exception		144008	1					
ANR	144030	Argument	prev_exception		144008	0					
ANR	144031	Identifier	prev_exception		144008	0					
ANR	144032	ExpressionStatement	EG ( prev_exception ) = NULL	182:2:5959:5984	144008	1	True				
ANR	144033	AssignmentExpression	EG ( prev_exception ) = NULL		144008	0		=			
ANR	144034	CallExpression	EG ( prev_exception )		144008	0					
ANR	144035	Callee	EG		144008	0					
ANR	144036	Identifier	EG		144008	0					
ANR	144037	ArgumentList	prev_exception		144008	1					
ANR	144038	Argument	prev_exception		144008	0					
ANR	144039	Identifier	prev_exception		144008	0					
ANR	144040	Identifier	NULL		144008	1					
ANR	144041	IfStatement	if ( ! EG ( exception ) )		144008	1					
ANR	144042	Condition	! EG ( exception )	184:5:5994:6007	144008	0	True				
ANR	144043	UnaryOperationExpression	! EG ( exception )		144008	0					
ANR	144044	UnaryOperator	!		144008	0					
ANR	144045	CallExpression	EG ( exception )		144008	1					
ANR	144046	Callee	EG		144008	0					
ANR	144047	Identifier	EG		144008	0					
ANR	144048	ArgumentList	exception		144008	1					
ANR	144049	Argument	exception		144008	0					
ANR	144050	Identifier	exception		144008	0					
ANR	144051	CompoundStatement		7:21:117:117	144008	1					
ANR	144052	ReturnStatement	return ;	185:2:6014:6020	144008	0	True				
ANR	144053	ExpressionStatement	OBJ_RELEASE ( EG ( exception ) )	187:1:6026:6052	144008	2	True				
ANR	144054	CallExpression	OBJ_RELEASE ( EG ( exception ) )		144008	0					
ANR	144055	Callee	OBJ_RELEASE		144008	0					
ANR	144056	Identifier	OBJ_RELEASE		144008	0					
ANR	144057	ArgumentList	EG ( exception )		144008	1					
ANR	144058	Argument	EG ( exception )		144008	0					
ANR	144059	CallExpression	EG ( exception )		144008	0					
ANR	144060	Callee	EG		144008	0					
ANR	144061	Identifier	EG		144008	0					
ANR	144062	ArgumentList	exception		144008	1					
ANR	144063	Argument	exception		144008	0					
ANR	144064	Identifier	exception		144008	0					
ANR	144065	ExpressionStatement	EG ( exception ) = NULL	188:1:6055:6075	144008	3	True				
ANR	144066	AssignmentExpression	EG ( exception ) = NULL		144008	0		=			
ANR	144067	CallExpression	EG ( exception )		144008	0					
ANR	144068	Callee	EG		144008	0					
ANR	144069	Identifier	EG		144008	0					
ANR	144070	ArgumentList	exception		144008	1					
ANR	144071	Argument	exception		144008	0					
ANR	144072	Identifier	exception		144008	0					
ANR	144073	Identifier	NULL		144008	1					
ANR	144074	ExpressionStatement	EG ( current_execute_data ) -> opline = EG ( opline_before_exception )	189:1:6078:6140	144008	4	True				
ANR	144075	AssignmentExpression	EG ( current_execute_data ) -> opline = EG ( opline_before_exception )		144008	0		=			
ANR	144076	PtrMemberAccess	EG ( current_execute_data ) -> opline		144008	0					
ANR	144077	CallExpression	EG ( current_execute_data )		144008	0					
ANR	144078	Callee	EG		144008	0					
ANR	144079	Identifier	EG		144008	0					
ANR	144080	ArgumentList	current_execute_data		144008	1					
ANR	144081	Argument	current_execute_data		144008	0					
ANR	144082	Identifier	current_execute_data		144008	0					
ANR	144083	Identifier	opline		144008	1					
ANR	144084	CallExpression	EG ( opline_before_exception )		144008	1					
ANR	144085	Callee	EG		144008	0					
ANR	144086	Identifier	EG		144008	0					
ANR	144087	ArgumentList	opline_before_exception		144008	1					
ANR	144088	Argument	opline_before_exception		144008	0					
ANR	144089	Identifier	opline_before_exception		144008	0					
ANR	144090	ExpressionStatement	EG ( opline_before_exception ) = NULL	191:1:6158:6192	144008	5	True				
ANR	144091	AssignmentExpression	EG ( opline_before_exception ) = NULL		144008	0		=			
ANR	144092	CallExpression	EG ( opline_before_exception )		144008	0					
ANR	144093	Callee	EG		144008	0					
ANR	144094	Identifier	EG		144008	0					
ANR	144095	ArgumentList	opline_before_exception		144008	1					
ANR	144096	Argument	opline_before_exception		144008	0					
ANR	144097	Identifier	opline_before_exception		144008	0					
ANR	144098	Identifier	NULL		144008	1					
ANR	144099	ReturnType	ZEND_API void		144008	1					
ANR	144100	Identifier	zend_clear_exception		144008	2					
ANR	144101	ParameterList			144008	3					
ANR	144102	CFGEntryNode	ENTRY		144008		True				
ANR	144103	CFGExitNode	EXIT		144008		True				
ANR	144104	Symbol	exception		144008						
ANR	144105	Symbol	prev_exception		144008						
ANR	144106	Symbol	EG		144008						
ANR	144107	Symbol	NULL		144008						
ANR	144108	Symbol	current_execute_data		144008						
ANR	144109	Symbol	* EG		144008						
ANR	144110	Symbol	EG ( current_execute_data ) -> opline		144008						
ANR	144111	Symbol	opline_before_exception		144008						
ANR	144112	Function	zend_default_exception_new_ex	196:0:6214:7348							
ANR	144113	FunctionDef	"zend_default_exception_new_ex (zend_class_entry * class_type , int skip_top_traces)"		144112	0					
ANR	144114	CompoundStatement		197:0:6325:7348	144112	0					
ANR	144115	IdentifierDeclStatement	zval obj ;	198:1:6328:6336	144112	0	True				
ANR	144116	IdentifierDecl	obj		144112	0					
ANR	144117	IdentifierDeclType	zval		144112	0					
ANR	144118	Identifier	obj		144112	1					
ANR	144119	IdentifierDeclStatement	zend_object * object ;	199:1:6339:6358	144112	1	True				
ANR	144120	IdentifierDecl	* object		144112	0					
ANR	144121	IdentifierDeclType	zend_object *		144112	0					
ANR	144122	Identifier	object		144112	1					
ANR	144123	IdentifierDeclStatement	zval trace ;	200:1:6361:6371	144112	2	True				
ANR	144124	IdentifierDecl	trace		144112	0					
ANR	144125	IdentifierDeclType	zval		144112	0					
ANR	144126	Identifier	trace		144112	1					
ANR	144127	IdentifierDeclStatement	zend_class_entry * base_ce ;	201:1:6374:6399	144112	3	True				
ANR	144128	IdentifierDecl	* base_ce		144112	0					
ANR	144129	IdentifierDeclType	zend_class_entry *		144112	0					
ANR	144130	Identifier	base_ce		144112	1					
ANR	144131	IdentifierDeclStatement	zend_string * filename ;	202:1:6402:6423	144112	4	True				
ANR	144132	IdentifierDecl	* filename		144112	0					
ANR	144133	IdentifierDeclType	zend_string *		144112	0					
ANR	144134	Identifier	filename		144112	1					
ANR	144135	ExpressionStatement	Z_OBJ ( obj ) = object = zend_objects_new ( class_type )	204:1:6427:6477	144112	5	True				
ANR	144136	AssignmentExpression	Z_OBJ ( obj ) = object = zend_objects_new ( class_type )		144112	0		=			
ANR	144137	CallExpression	Z_OBJ ( obj )		144112	0					
ANR	144138	Callee	Z_OBJ		144112	0					
ANR	144139	Identifier	Z_OBJ		144112	0					
ANR	144140	ArgumentList	obj		144112	1					
ANR	144141	Argument	obj		144112	0					
ANR	144142	Identifier	obj		144112	0					
ANR	144143	AssignmentExpression	object = zend_objects_new ( class_type )		144112	1		=			
ANR	144144	Identifier	object		144112	0					
ANR	144145	CallExpression	zend_objects_new ( class_type )		144112	1					
ANR	144146	Callee	zend_objects_new		144112	0					
ANR	144147	Identifier	zend_objects_new		144112	0					
ANR	144148	ArgumentList	class_type		144112	1					
ANR	144149	Argument	class_type		144112	0					
ANR	144150	Identifier	class_type		144112	0					
ANR	144151	ExpressionStatement	Z_OBJ_HT ( obj ) = & default_exception_handlers	205:1:6480:6523	144112	6	True				
ANR	144152	AssignmentExpression	Z_OBJ_HT ( obj ) = & default_exception_handlers		144112	0		=			
ANR	144153	CallExpression	Z_OBJ_HT ( obj )		144112	0					
ANR	144154	Callee	Z_OBJ_HT		144112	0					
ANR	144155	Identifier	Z_OBJ_HT		144112	0					
ANR	144156	ArgumentList	obj		144112	1					
ANR	144157	Argument	obj		144112	0					
ANR	144158	Identifier	obj		144112	0					
ANR	144159	UnaryOperationExpression	& default_exception_handlers		144112	1					
ANR	144160	UnaryOperator	&		144112	0					
ANR	144161	Identifier	default_exception_handlers		144112	1					
ANR	144162	ExpressionStatement	"object_properties_init ( object , class_type )"	207:1:6527:6569	144112	7	True				
ANR	144163	CallExpression	"object_properties_init ( object , class_type )"		144112	0					
ANR	144164	Callee	object_properties_init		144112	0					
ANR	144165	Identifier	object_properties_init		144112	0					
ANR	144166	ArgumentList	object		144112	1					
ANR	144167	Argument	object		144112	0					
ANR	144168	Identifier	object		144112	0					
ANR	144169	Argument	class_type		144112	1					
ANR	144170	Identifier	class_type		144112	0					
ANR	144171	IfStatement	if ( EG ( current_execute_data ) )		144112	8					
ANR	144172	Condition	EG ( current_execute_data )	209:5:6577:6600	144112	0	True				
ANR	144173	CallExpression	EG ( current_execute_data )		144112	0					
ANR	144174	Callee	EG		144112	0					
ANR	144175	Identifier	EG		144112	0					
ANR	144176	ArgumentList	current_execute_data		144112	1					
ANR	144177	Argument	current_execute_data		144112	0					
ANR	144178	Identifier	current_execute_data		144112	0					
ANR	144179	CompoundStatement		13:31:277:277	144112	1					
ANR	144180	ExpressionStatement	"zend_fetch_debug_backtrace ( & trace , skip_top_traces , 0 , 0 )"	210:2:6607:6664	144112	0	True				
ANR	144181	CallExpression	"zend_fetch_debug_backtrace ( & trace , skip_top_traces , 0 , 0 )"		144112	0					
ANR	144182	Callee	zend_fetch_debug_backtrace		144112	0					
ANR	144183	Identifier	zend_fetch_debug_backtrace		144112	0					
ANR	144184	ArgumentList	& trace		144112	1					
ANR	144185	Argument	& trace		144112	0					
ANR	144186	UnaryOperationExpression	& trace		144112	0					
ANR	144187	UnaryOperator	&		144112	0					
ANR	144188	Identifier	trace		144112	1					
ANR	144189	Argument	skip_top_traces		144112	1					
ANR	144190	Identifier	skip_top_traces		144112	0					
ANR	144191	Argument	0		144112	2					
ANR	144192	PrimaryExpression	0		144112	0					
ANR	144193	Argument	0		144112	3					
ANR	144194	PrimaryExpression	0		144112	0					
ANR	144195	ElseStatement	else		144112	0					
ANR	144196	CompoundStatement		15:8:348:348	144112	0					
ANR	144197	ExpressionStatement	array_init ( & trace )	212:2:6678:6696	144112	0	True				
ANR	144198	CallExpression	array_init ( & trace )		144112	0					
ANR	144199	Callee	array_init		144112	0					
ANR	144200	Identifier	array_init		144112	0					
ANR	144201	ArgumentList	& trace		144112	1					
ANR	144202	Argument	& trace		144112	0					
ANR	144203	UnaryOperationExpression	& trace		144112	0					
ANR	144204	UnaryOperator	&		144112	0					
ANR	144205	Identifier	trace		144112	1					
ANR	144206	ExpressionStatement	"Z_SET_REFCOUNT ( trace , 0 )"	214:1:6702:6726	144112	9	True				
ANR	144207	CallExpression	"Z_SET_REFCOUNT ( trace , 0 )"		144112	0					
ANR	144208	Callee	Z_SET_REFCOUNT		144112	0					
ANR	144209	Identifier	Z_SET_REFCOUNT		144112	0					
ANR	144210	ArgumentList	trace		144112	1					
ANR	144211	Argument	trace		144112	0					
ANR	144212	Identifier	trace		144112	0					
ANR	144213	Argument	0		144112	1					
ANR	144214	PrimaryExpression	0		144112	0					
ANR	144215	ExpressionStatement	base_ce = i_get_exception_base ( & obj )	216:1:6730:6766	144112	10	True				
ANR	144216	AssignmentExpression	base_ce = i_get_exception_base ( & obj )		144112	0		=			
ANR	144217	Identifier	base_ce		144112	0					
ANR	144218	CallExpression	i_get_exception_base ( & obj )		144112	1					
ANR	144219	Callee	i_get_exception_base		144112	0					
ANR	144220	Identifier	i_get_exception_base		144112	0					
ANR	144221	ArgumentList	& obj		144112	1					
ANR	144222	Argument	& obj		144112	0					
ANR	144223	UnaryOperationExpression	& obj		144112	0					
ANR	144224	UnaryOperator	&		144112	0					
ANR	144225	Identifier	obj		144112	1					
ANR	144226	IfStatement	if ( EXPECTED ( class_type != zend_ce_parse_error || ! ( filename = zend_get_compiled_filename ( ) ) ) )		144112	11					
ANR	144227	Condition	EXPECTED ( class_type != zend_ce_parse_error || ! ( filename = zend_get_compiled_filename ( ) ) )	218:5:6774:6862	144112	0	True				
ANR	144228	CallExpression	EXPECTED ( class_type != zend_ce_parse_error || ! ( filename = zend_get_compiled_filename ( ) ) )		144112	0					
ANR	144229	Callee	EXPECTED		144112	0					
ANR	144230	Identifier	EXPECTED		144112	0					
ANR	144231	ArgumentList	class_type != zend_ce_parse_error || ! ( filename = zend_get_compiled_filename ( ) )		144112	1					
ANR	144232	Argument	class_type != zend_ce_parse_error || ! ( filename = zend_get_compiled_filename ( ) )		144112	0					
ANR	144233	OrExpression	class_type != zend_ce_parse_error || ! ( filename = zend_get_compiled_filename ( ) )		144112	0		||			
ANR	144234	EqualityExpression	class_type != zend_ce_parse_error		144112	0		!=			
ANR	144235	Identifier	class_type		144112	0					
ANR	144236	Identifier	zend_ce_parse_error		144112	1					
ANR	144237	UnaryOperationExpression	! ( filename = zend_get_compiled_filename ( ) )		144112	1					
ANR	144238	UnaryOperator	!		144112	0					
ANR	144239	AssignmentExpression	filename = zend_get_compiled_filename ( )		144112	1		=			
ANR	144240	Identifier	filename		144112	0					
ANR	144241	CallExpression	zend_get_compiled_filename ( )		144112	1					
ANR	144242	Callee	zend_get_compiled_filename		144112	0					
ANR	144243	Identifier	zend_get_compiled_filename		144112	0					
ANR	144244	ArgumentList			144112	1					
ANR	144245	CompoundStatement		22:96:539:539	144112	1					
ANR	144246	ExpressionStatement	"zend_update_property_string ( base_ce , & obj , ""file"" , sizeof ( ""file"" ) - 1 , zend_get_executed_filename ( ) )"	219:2:6869:6967	144112	0	True				
ANR	144247	CallExpression	"zend_update_property_string ( base_ce , & obj , ""file"" , sizeof ( ""file"" ) - 1 , zend_get_executed_filename ( ) )"		144112	0					
ANR	144248	Callee	zend_update_property_string		144112	0					
ANR	144249	Identifier	zend_update_property_string		144112	0					
ANR	144250	ArgumentList	base_ce		144112	1					
ANR	144251	Argument	base_ce		144112	0					
ANR	144252	Identifier	base_ce		144112	0					
ANR	144253	Argument	& obj		144112	1					
ANR	144254	UnaryOperationExpression	& obj		144112	0					
ANR	144255	UnaryOperator	&		144112	0					
ANR	144256	Identifier	obj		144112	1					
ANR	144257	Argument	"""file"""		144112	2					
ANR	144258	PrimaryExpression	"""file"""		144112	0					
ANR	144259	Argument	"sizeof ( ""file"" ) - 1"		144112	3					
ANR	144260	AdditiveExpression	"sizeof ( ""file"" ) - 1"		144112	0		-			
ANR	144261	SizeofExpression	"sizeof ( ""file"" )"		144112	0					
ANR	144262	Sizeof	sizeof		144112	0					
ANR	144263	PrimaryExpression	"""file"""		144112	1					
ANR	144264	PrimaryExpression	1		144112	1					
ANR	144265	Argument	zend_get_executed_filename ( )		144112	4					
ANR	144266	CallExpression	zend_get_executed_filename ( )		144112	0					
ANR	144267	Callee	zend_get_executed_filename		144112	0					
ANR	144268	Identifier	zend_get_executed_filename		144112	0					
ANR	144269	ArgumentList			144112	1					
ANR	144270	ExpressionStatement	"zend_update_property_long ( base_ce , & obj , ""line"" , sizeof ( ""line"" ) - 1 , zend_get_executed_lineno ( ) )"	220:2:6971:7065	144112	1	True				
ANR	144271	CallExpression	"zend_update_property_long ( base_ce , & obj , ""line"" , sizeof ( ""line"" ) - 1 , zend_get_executed_lineno ( ) )"		144112	0					
ANR	144272	Callee	zend_update_property_long		144112	0					
ANR	144273	Identifier	zend_update_property_long		144112	0					
ANR	144274	ArgumentList	base_ce		144112	1					
ANR	144275	Argument	base_ce		144112	0					
ANR	144276	Identifier	base_ce		144112	0					
ANR	144277	Argument	& obj		144112	1					
ANR	144278	UnaryOperationExpression	& obj		144112	0					
ANR	144279	UnaryOperator	&		144112	0					
ANR	144280	Identifier	obj		144112	1					
ANR	144281	Argument	"""line"""		144112	2					
ANR	144282	PrimaryExpression	"""line"""		144112	0					
ANR	144283	Argument	"sizeof ( ""line"" ) - 1"		144112	3					
ANR	144284	AdditiveExpression	"sizeof ( ""line"" ) - 1"		144112	0		-			
ANR	144285	SizeofExpression	"sizeof ( ""line"" )"		144112	0					
ANR	144286	Sizeof	sizeof		144112	0					
ANR	144287	PrimaryExpression	"""line"""		144112	1					
ANR	144288	PrimaryExpression	1		144112	1					
ANR	144289	Argument	zend_get_executed_lineno ( )		144112	4					
ANR	144290	CallExpression	zend_get_executed_lineno ( )		144112	0					
ANR	144291	Callee	zend_get_executed_lineno		144112	0					
ANR	144292	Identifier	zend_get_executed_lineno		144112	0					
ANR	144293	ArgumentList			144112	1					
ANR	144294	ElseStatement	else		144112	0					
ANR	144295	CompoundStatement		25:8:749:749	144112	0					
ANR	144296	ExpressionStatement	"zend_update_property_str ( base_ce , & obj , ""file"" , sizeof ( ""file"" ) - 1 , filename )"	222:2:7079:7154	144112	0	True				
ANR	144297	CallExpression	"zend_update_property_str ( base_ce , & obj , ""file"" , sizeof ( ""file"" ) - 1 , filename )"		144112	0					
ANR	144298	Callee	zend_update_property_str		144112	0					
ANR	144299	Identifier	zend_update_property_str		144112	0					
ANR	144300	ArgumentList	base_ce		144112	1					
ANR	144301	Argument	base_ce		144112	0					
ANR	144302	Identifier	base_ce		144112	0					
ANR	144303	Argument	& obj		144112	1					
ANR	144304	UnaryOperationExpression	& obj		144112	0					
ANR	144305	UnaryOperator	&		144112	0					
ANR	144306	Identifier	obj		144112	1					
ANR	144307	Argument	"""file"""		144112	2					
ANR	144308	PrimaryExpression	"""file"""		144112	0					
ANR	144309	Argument	"sizeof ( ""file"" ) - 1"		144112	3					
ANR	144310	AdditiveExpression	"sizeof ( ""file"" ) - 1"		144112	0		-			
ANR	144311	SizeofExpression	"sizeof ( ""file"" )"		144112	0					
ANR	144312	Sizeof	sizeof		144112	0					
ANR	144313	PrimaryExpression	"""file"""		144112	1					
ANR	144314	PrimaryExpression	1		144112	1					
ANR	144315	Argument	filename		144112	4					
ANR	144316	Identifier	filename		144112	0					
ANR	144317	ExpressionStatement	"zend_update_property_long ( base_ce , & obj , ""line"" , sizeof ( ""line"" ) - 1 , zend_get_compiled_lineno ( ) )"	223:2:7158:7252	144112	1	True				
ANR	144318	CallExpression	"zend_update_property_long ( base_ce , & obj , ""line"" , sizeof ( ""line"" ) - 1 , zend_get_compiled_lineno ( ) )"		144112	0					
ANR	144319	Callee	zend_update_property_long		144112	0					
ANR	144320	Identifier	zend_update_property_long		144112	0					
ANR	144321	ArgumentList	base_ce		144112	1					
ANR	144322	Argument	base_ce		144112	0					
ANR	144323	Identifier	base_ce		144112	0					
ANR	144324	Argument	& obj		144112	1					
ANR	144325	UnaryOperationExpression	& obj		144112	0					
ANR	144326	UnaryOperator	&		144112	0					
ANR	144327	Identifier	obj		144112	1					
ANR	144328	Argument	"""line"""		144112	2					
ANR	144329	PrimaryExpression	"""line"""		144112	0					
ANR	144330	Argument	"sizeof ( ""line"" ) - 1"		144112	3					
ANR	144331	AdditiveExpression	"sizeof ( ""line"" ) - 1"		144112	0		-			
ANR	144332	SizeofExpression	"sizeof ( ""line"" )"		144112	0					
ANR	144333	Sizeof	sizeof		144112	0					
ANR	144334	PrimaryExpression	"""line"""		144112	1					
ANR	144335	PrimaryExpression	1		144112	1					
ANR	144336	Argument	zend_get_compiled_lineno ( )		144112	4					
ANR	144337	CallExpression	zend_get_compiled_lineno ( )		144112	0					
ANR	144338	Callee	zend_get_compiled_lineno		144112	0					
ANR	144339	Identifier	zend_get_compiled_lineno		144112	0					
ANR	144340	ArgumentList			144112	1					
ANR	144341	ExpressionStatement	"zend_update_property ( base_ce , & obj , ""trace"" , sizeof ( ""trace"" ) - 1 , & trace )"	225:1:7258:7329	144112	12	True				
ANR	144342	CallExpression	"zend_update_property ( base_ce , & obj , ""trace"" , sizeof ( ""trace"" ) - 1 , & trace )"		144112	0					
ANR	144343	Callee	zend_update_property		144112	0					
ANR	144344	Identifier	zend_update_property		144112	0					
ANR	144345	ArgumentList	base_ce		144112	1					
ANR	144346	Argument	base_ce		144112	0					
ANR	144347	Identifier	base_ce		144112	0					
ANR	144348	Argument	& obj		144112	1					
ANR	144349	UnaryOperationExpression	& obj		144112	0					
ANR	144350	UnaryOperator	&		144112	0					
ANR	144351	Identifier	obj		144112	1					
ANR	144352	Argument	"""trace"""		144112	2					
ANR	144353	PrimaryExpression	"""trace"""		144112	0					
ANR	144354	Argument	"sizeof ( ""trace"" ) - 1"		144112	3					
ANR	144355	AdditiveExpression	"sizeof ( ""trace"" ) - 1"		144112	0		-			
ANR	144356	SizeofExpression	"sizeof ( ""trace"" )"		144112	0					
ANR	144357	Sizeof	sizeof		144112	0					
ANR	144358	PrimaryExpression	"""trace"""		144112	1					
ANR	144359	PrimaryExpression	1		144112	1					
ANR	144360	Argument	& trace		144112	4					
ANR	144361	UnaryOperationExpression	& trace		144112	0					
ANR	144362	UnaryOperator	&		144112	0					
ANR	144363	Identifier	trace		144112	1					
ANR	144364	ReturnStatement	return object ;	227:1:7333:7346	144112	13	True				
ANR	144365	Identifier	object		144112	0					
ANR	144366	ReturnType	static zend_object *		144112	1					
ANR	144367	Identifier	zend_default_exception_new_ex		144112	2					
ANR	144368	ParameterList	"zend_class_entry * class_type , int skip_top_traces"		144112	3					
ANR	144369	Parameter	zend_class_entry * class_type	196:50:6264:6291	144112	0	True				
ANR	144370	ParameterType	zend_class_entry *		144112	0					
ANR	144371	Identifier	class_type		144112	1					
ANR	144372	Parameter	int skip_top_traces	196:80:6294:6312	144112	1	True				
ANR	144373	ParameterType	int		144112	0					
ANR	144374	Identifier	skip_top_traces		144112	1					
ANR	144375	CFGEntryNode	ENTRY		144112		True				
ANR	144376	CFGExitNode	EXIT		144112		True				
ANR	144377	Symbol	i_get_exception_base		144112						
ANR	144378	Symbol	EG		144112						
ANR	144379	Symbol	current_execute_data		144112						
ANR	144380	Symbol	zend_get_executed_lineno		144112						
ANR	144381	Symbol	zend_get_compiled_filename		144112						
ANR	144382	Symbol	trace		144112						
ANR	144383	Symbol	Z_OBJ		144112						
ANR	144384	Symbol	class_type		144112						
ANR	144385	Symbol	filename		144112						
ANR	144386	Symbol	Z_OBJ_HT		144112						
ANR	144387	Symbol	& trace		144112						
ANR	144388	Symbol	& default_exception_handlers		144112						
ANR	144389	Symbol	obj		144112						
ANR	144390	Symbol	zend_get_executed_filename		144112						
ANR	144391	Symbol	zend_get_compiled_lineno		144112						
ANR	144392	Symbol	& obj		144112						
ANR	144393	Symbol	zend_objects_new		144112						
ANR	144394	Symbol	base_ce		144112						
ANR	144395	Symbol	zend_ce_parse_error		144112						
ANR	144396	Symbol	skip_top_traces		144112						
ANR	144397	Symbol	EXPECTED		144112						
ANR	144398	Symbol	object		144112						
ANR	144399	Function	zend_default_exception_new	231:0:7361:7504							
ANR	144400	FunctionDef	zend_default_exception_new (zend_class_entry * class_type)		144399	0					
ANR	144401	CompoundStatement		232:0:7448:7504	144399	0					
ANR	144402	ReturnStatement	"return zend_default_exception_new_ex ( class_type , 0 ) ;"	233:1:7451:7502	144399	0	True				
ANR	144403	CallExpression	"zend_default_exception_new_ex ( class_type , 0 )"		144399	0					
ANR	144404	Callee	zend_default_exception_new_ex		144399	0					
ANR	144405	Identifier	zend_default_exception_new_ex		144399	0					
ANR	144406	ArgumentList	class_type		144399	1					
ANR	144407	Argument	class_type		144399	0					
ANR	144408	Identifier	class_type		144399	0					
ANR	144409	Argument	0		144399	1					
ANR	144410	PrimaryExpression	0		144399	0					
ANR	144411	ReturnType	static zend_object *		144399	1					
ANR	144412	Identifier	zend_default_exception_new		144399	2					
ANR	144413	ParameterList	zend_class_entry * class_type		144399	3					
ANR	144414	Parameter	zend_class_entry * class_type	231:47:7408:7435	144399	0	True				
ANR	144415	ParameterType	zend_class_entry *		144399	0					
ANR	144416	Identifier	class_type		144399	1					
ANR	144417	CFGEntryNode	ENTRY		144399		True				
ANR	144418	CFGExitNode	EXIT		144399		True				
ANR	144419	Symbol	class_type		144399						
ANR	144420	Symbol	zend_default_exception_new_ex		144399						
ANR	144421	Function	zend_error_exception_new	237:0:7517:7658							
ANR	144422	FunctionDef	zend_error_exception_new (zend_class_entry * class_type)		144421	0					
ANR	144423	CompoundStatement		238:0:7602:7658	144421	0					
ANR	144424	ReturnStatement	"return zend_default_exception_new_ex ( class_type , 2 ) ;"	239:1:7605:7656	144421	0	True				
ANR	144425	CallExpression	"zend_default_exception_new_ex ( class_type , 2 )"		144421	0					
ANR	144426	Callee	zend_default_exception_new_ex		144421	0					
ANR	144427	Identifier	zend_default_exception_new_ex		144421	0					
ANR	144428	ArgumentList	class_type		144421	1					
ANR	144429	Argument	class_type		144421	0					
ANR	144430	Identifier	class_type		144421	0					
ANR	144431	Argument	2		144421	1					
ANR	144432	PrimaryExpression	2		144421	0					
ANR	144433	ReturnType	static zend_object *		144421	1					
ANR	144434	Identifier	zend_error_exception_new		144421	2					
ANR	144435	ParameterList	zend_class_entry * class_type		144421	3					
ANR	144436	Parameter	zend_class_entry * class_type	237:45:7562:7589	144421	0	True				
ANR	144437	ParameterType	zend_class_entry *		144421	0					
ANR	144438	Identifier	class_type		144421	1					
ANR	144439	CFGEntryNode	ENTRY		144421		True				
ANR	144440	CFGExitNode	EXIT		144421		True				
ANR	144441	Symbol	class_type		144421						
ANR	144442	Symbol	zend_default_exception_new_ex		144421						
ANR	144443	DeclStmt									
ANR	144444	Decl							zend_string	zend_string *	message
ANR	144445	DeclStmt									
ANR	144446	Decl							zend_long	zend_long	code
ANR	144447	DeclStmt									
ANR	144448	Decl							zval	zval *	object
ANR	144449	Decl							zval	zval *	previous
ANR	144450	DeclStmt									
ANR	144451	Decl							zend_class_entry	zend_class_entry *	base_ce
ANR	144452	DeclStmt									
ANR	144453	Decl							int	int	argc
ANR	144454	DeclStmt									
ANR	144455	Decl							zend_class_entry	zend_class_entry *	ce
ANR	144456	DeclStmt									
ANR	144457	Decl							zval	zval	tmp
ANR	144458	DeclStmt									
ANR	144459	Decl							zval	zval	value
ANR	144460	Decl							zval	zval *	pvalue
ANR	144461	DeclStmt									
ANR	144462	Decl							zval	zval *	object
ANR	144463	DeclStmt									
ANR	144464	Decl							char	char *	message
ANR	144465	Decl							char	char *	filename
ANR	144466	DeclStmt									
ANR	144467	Decl							zend_long	zend_long	code
ANR	144468	Decl							zend_long	zend_long	severity
ANR	144469	Decl							zend_long	zend_long	lineno
ANR	144470	DeclStmt									
ANR	144471	Decl							zval	zval *	object
ANR	144472	Decl							zval	zval *	previous
ANR	144473	DeclStmt									
ANR	144474	Decl							int	int	argc
ANR	144475	DeclStmt									
ANR	144476	Decl							size_t	size_t	message_len
ANR	144477	Decl							size_t	size_t	filename_len
ANR	144478	DeclStmt									
ANR	144479	Decl							zend_class_entry	zend_class_entry *	ce
ANR	144480	DeclStmt									
ANR	144481	Decl							zval	zval	rv
ANR	144482	DeclStmt									
ANR	144483	Decl							zval	zval	rv
ANR	144484	DeclStmt									
ANR	144485	Decl							zval	zval	rv
ANR	144486	DeclStmt									
ANR	144487	Decl							zval	zval	rv
ANR	144488	DeclStmt									
ANR	144489	Decl							zval	zval	rv
ANR	144490	DeclStmt									
ANR	144491	Decl							zval	zval	rv
ANR	144492	Function	compute_escaped_string_len	464:0:14031:14348							
ANR	144493	FunctionDef	"compute_escaped_string_len (const char * s , size_t l)"		144492	0					
ANR	144494	CompoundStatement		464:66:14097:14348	144492	0					
ANR	144495	IdentifierDeclStatement	"size_t i , len = l ;"	465:1:14100:14117	144492	0	True				
ANR	144496	IdentifierDecl	i		144492	0					
ANR	144497	IdentifierDeclType	size_t		144492	0					
ANR	144498	Identifier	i		144492	1					
ANR	144499	IdentifierDecl	len = l		144492	1					
ANR	144500	IdentifierDeclType	size_t		144492	0					
ANR	144501	Identifier	len		144492	1					
ANR	144502	AssignmentExpression	len = l		144492	2		=			
ANR	144503	Identifier	l		144492	0					
ANR	144504	Identifier	l		144492	1					
ANR	144505	ForStatement	for ( i = 0 ; i < l ; ++ i )		144492	1					
ANR	144506	ForInit	i = 0 ;	466:6:14125:14130	144492	0	True				
ANR	144507	AssignmentExpression	i = 0		144492	0		=			
ANR	144508	Identifier	i		144492	0					
ANR	144509	PrimaryExpression	0		144492	1					
ANR	144510	Condition	i < l	466:13:14132:14136	144492	1	True				
ANR	144511	RelationalExpression	i < l		144492	0		<			
ANR	144512	Identifier	i		144492	0					
ANR	144513	Identifier	l		144492	1					
ANR	144514	UnaryExpression	++ i	466:20:14139:14141	144492	2	True				
ANR	144515	IncDec	++		144492	0					
ANR	144516	Identifier	i		144492	1					
ANR	144517	CompoundStatement		4:2:50:63	144492	3					
ANR	144518	IdentifierDeclStatement	char c = s [ i ] ;	467:2:14148:14161	144492	0	True				
ANR	144519	IdentifierDecl	c = s [ i ]		144492	0					
ANR	144520	IdentifierDeclType	char		144492	0					
ANR	144521	Identifier	c		144492	1					
ANR	144522	AssignmentExpression	c = s [ i ]		144492	2		=			
ANR	144523	Identifier	c		144492	0					
ANR	144524	ArrayIndexing	s [ i ]		144492	1					
ANR	144525	Identifier	s		144492	0					
ANR	144526	Identifier	i		144492	1					
ANR	144527	IfStatement	if ( c == '\\n' || c == '\\r' || c == '\\t' || c == '\\f' || c == '\\v' || c == '\\\\' || c == VK_ESCAPE )		144492	1					
ANR	144528	Condition	c == '\\n' || c == '\\r' || c == '\\t' || c == '\\f' || c == '\\v' || c == '\\\\' || c == VK_ESCAPE	468:6:14169:14263	144492	0	True				
ANR	144529	OrExpression	c == '\\n' || c == '\\r' || c == '\\t' || c == '\\f' || c == '\\v' || c == '\\\\' || c == VK_ESCAPE		144492	0		||			
ANR	144530	EqualityExpression	c == '\\n'		144492	0		==			
ANR	144531	Identifier	c		144492	0					
ANR	144532	PrimaryExpression	'\\n'		144492	1					
ANR	144533	OrExpression	c == '\\r' || c == '\\t' || c == '\\f' || c == '\\v' || c == '\\\\' || c == VK_ESCAPE		144492	1		||			
ANR	144534	EqualityExpression	c == '\\r'		144492	0		==			
ANR	144535	Identifier	c		144492	0					
ANR	144536	PrimaryExpression	'\\r'		144492	1					
ANR	144537	OrExpression	c == '\\t' || c == '\\f' || c == '\\v' || c == '\\\\' || c == VK_ESCAPE		144492	1		||			
ANR	144538	EqualityExpression	c == '\\t'		144492	0		==			
ANR	144539	Identifier	c		144492	0					
ANR	144540	PrimaryExpression	'\\t'		144492	1					
ANR	144541	OrExpression	c == '\\f' || c == '\\v' || c == '\\\\' || c == VK_ESCAPE		144492	1		||			
ANR	144542	EqualityExpression	c == '\\f'		144492	0		==			
ANR	144543	Identifier	c		144492	0					
ANR	144544	PrimaryExpression	'\\f'		144492	1					
ANR	144545	OrExpression	c == '\\v' || c == '\\\\' || c == VK_ESCAPE		144492	1		||			
ANR	144546	EqualityExpression	c == '\\v'		144492	0		==			
ANR	144547	Identifier	c		144492	0					
ANR	144548	PrimaryExpression	'\\v'		144492	1					
ANR	144549	OrExpression	c == '\\\\' || c == VK_ESCAPE		144492	1		||			
ANR	144550	EqualityExpression	c == '\\\\'		144492	0		==			
ANR	144551	Identifier	c		144492	0					
ANR	144552	PrimaryExpression	'\\\\'		144492	1					
ANR	144553	EqualityExpression	c == VK_ESCAPE		144492	1		==			
ANR	144554	Identifier	c		144492	0					
ANR	144555	Identifier	VK_ESCAPE		144492	1					
ANR	144556	CompoundStatement		6:58:168:168	144492	1					
ANR	144557	ExpressionStatement	len += 1	470:3:14271:14279	144492	0	True				
ANR	144558	AssignmentExpression	len += 1		144492	0		+=			
ANR	144559	Identifier	len		144492	0					
ANR	144560	PrimaryExpression	1		144492	1					
ANR	144561	ElseStatement	else		144492	0					
ANR	144562	IfStatement	if ( c < 32 || c > 126 )		144492	0					
ANR	144563	Condition	c < 32 || c > 126	471:13:14294:14310	144492	0	True				
ANR	144564	OrExpression	c < 32 || c > 126		144492	0		||			
ANR	144565	RelationalExpression	c < 32		144492	0		<			
ANR	144566	Identifier	c		144492	0					
ANR	144567	PrimaryExpression	32		144492	1					
ANR	144568	RelationalExpression	c > 126		144492	1		>			
ANR	144569	Identifier	c		144492	0					
ANR	144570	PrimaryExpression	126		144492	1					
ANR	144571	CompoundStatement		8:32:215:215	144492	1					
ANR	144572	ExpressionStatement	len += 3	472:3:14318:14326	144492	0	True				
ANR	144573	AssignmentExpression	len += 3		144492	0		+=			
ANR	144574	Identifier	len		144492	0					
ANR	144575	PrimaryExpression	3		144492	1					
ANR	144576	ReturnStatement	return len ;	475:1:14336:14346	144492	2	True				
ANR	144577	Identifier	len		144492	0					
ANR	144578	ReturnType	static size_t		144492	1					
ANR	144579	Identifier	compute_escaped_string_len		144492	2					
ANR	144580	ParameterList	"const char * s , size_t l"		144492	3					
ANR	144581	Parameter	const char * s	464:41:14072:14084	144492	0	True				
ANR	144582	ParameterType	const char *		144492	0					
ANR	144583	Identifier	s		144492	1					
ANR	144584	Parameter	size_t l	464:56:14087:14094	144492	1	True				
ANR	144585	ParameterType	size_t		144492	0					
ANR	144586	Identifier	l		144492	1					
ANR	144587	CFGEntryNode	ENTRY		144492		True				
ANR	144588	CFGExitNode	EXIT		144492		True				
ANR	144589	Symbol	s		144492						
ANR	144590	Symbol	c		144492						
ANR	144591	Symbol	* i		144492						
ANR	144592	Symbol	len		144492						
ANR	144593	Symbol	i		144492						
ANR	144594	Symbol	l		144492						
ANR	144595	Symbol	* s		144492						
ANR	144596	Symbol	VK_ESCAPE		144492						
ANR	144597	Function	smart_str_append_escaped	478:0:14351:15283							
ANR	144598	FunctionDef	"smart_str_append_escaped (smart_str * str , const char * s , size_t l)"		144597	0					
ANR	144599	CompoundStatement		478:78:14429:15283	144597	0					
ANR	144600	IdentifierDeclStatement	char * res ;	479:1:14432:14441	144597	0	True				
ANR	144601	IdentifierDecl	* res		144597	0					
ANR	144602	IdentifierDeclType	char *		144597	0					
ANR	144603	Identifier	res		144597	1					
ANR	144604	IdentifierDeclStatement	"size_t i , len = compute_escaped_string_len ( s , l ) ;"	480:1:14444:14492	144597	1	True				
ANR	144605	IdentifierDecl	i		144597	0					
ANR	144606	IdentifierDeclType	size_t		144597	0					
ANR	144607	Identifier	i		144597	1					
ANR	144608	IdentifierDecl	"len = compute_escaped_string_len ( s , l )"		144597	1					
ANR	144609	IdentifierDeclType	size_t		144597	0					
ANR	144610	Identifier	len		144597	1					
ANR	144611	AssignmentExpression	"len = compute_escaped_string_len ( s , l )"		144597	2		=			
ANR	144612	Identifier	len		144597	0					
ANR	144613	CallExpression	"compute_escaped_string_len ( s , l )"		144597	1					
ANR	144614	Callee	compute_escaped_string_len		144597	0					
ANR	144615	Identifier	compute_escaped_string_len		144597	0					
ANR	144616	ArgumentList	s		144597	1					
ANR	144617	Argument	s		144597	0					
ANR	144618	Identifier	s		144597	0					
ANR	144619	Argument	l		144597	1					
ANR	144620	Identifier	l		144597	0					
ANR	144621	ExpressionStatement	"smart_str_alloc ( str , len , 0 )"	482:1:14496:14524	144597	2	True				
ANR	144622	CallExpression	"smart_str_alloc ( str , len , 0 )"		144597	0					
ANR	144623	Callee	smart_str_alloc		144597	0					
ANR	144624	Identifier	smart_str_alloc		144597	0					
ANR	144625	ArgumentList	str		144597	1					
ANR	144626	Argument	str		144597	0					
ANR	144627	Identifier	str		144597	0					
ANR	144628	Argument	len		144597	1					
ANR	144629	Identifier	len		144597	0					
ANR	144630	Argument	0		144597	2					
ANR	144631	PrimaryExpression	0		144597	0					
ANR	144632	ExpressionStatement	res = & ZSTR_VAL ( str -> s ) [ ZSTR_LEN ( str -> s ) ]	483:1:14527:14568	144597	3	True				
ANR	144633	AssignmentExpression	res = & ZSTR_VAL ( str -> s ) [ ZSTR_LEN ( str -> s ) ]		144597	0		=			
ANR	144634	Identifier	res		144597	0					
ANR	144635	UnaryOperationExpression	& ZSTR_VAL ( str -> s ) [ ZSTR_LEN ( str -> s ) ]		144597	1					
ANR	144636	UnaryOperator	&		144597	0					
ANR	144637	ArrayIndexing	ZSTR_VAL ( str -> s ) [ ZSTR_LEN ( str -> s ) ]		144597	1					
ANR	144638	CallExpression	ZSTR_VAL ( str -> s )		144597	0					
ANR	144639	Callee	ZSTR_VAL		144597	0					
ANR	144640	Identifier	ZSTR_VAL		144597	0					
ANR	144641	ArgumentList	str -> s		144597	1					
ANR	144642	Argument	str -> s		144597	0					
ANR	144643	PtrMemberAccess	str -> s		144597	0					
ANR	144644	Identifier	str		144597	0					
ANR	144645	Identifier	s		144597	1					
ANR	144646	CallExpression	ZSTR_LEN ( str -> s )		144597	1					
ANR	144647	Callee	ZSTR_LEN		144597	0					
ANR	144648	Identifier	ZSTR_LEN		144597	0					
ANR	144649	ArgumentList	str -> s		144597	1					
ANR	144650	Argument	str -> s		144597	0					
ANR	144651	PtrMemberAccess	str -> s		144597	0					
ANR	144652	Identifier	str		144597	0					
ANR	144653	Identifier	s		144597	1					
ANR	144654	ExpressionStatement	ZSTR_LEN ( str -> s ) += len	484:1:14571:14594	144597	4	True				
ANR	144655	AssignmentExpression	ZSTR_LEN ( str -> s ) += len		144597	0		+=			
ANR	144656	CallExpression	ZSTR_LEN ( str -> s )		144597	0					
ANR	144657	Callee	ZSTR_LEN		144597	0					
ANR	144658	Identifier	ZSTR_LEN		144597	0					
ANR	144659	ArgumentList	str -> s		144597	1					
ANR	144660	Argument	str -> s		144597	0					
ANR	144661	PtrMemberAccess	str -> s		144597	0					
ANR	144662	Identifier	str		144597	0					
ANR	144663	Identifier	s		144597	1					
ANR	144664	Identifier	len		144597	1					
ANR	144665	ForStatement	for ( i = 0 ; i < l ; ++ i )		144597	5					
ANR	144666	ForInit	i = 0 ;	486:6:14603:14608	144597	0	True				
ANR	144667	AssignmentExpression	i = 0		144597	0		=			
ANR	144668	Identifier	i		144597	0					
ANR	144669	PrimaryExpression	0		144597	1					
ANR	144670	Condition	i < l	486:13:14610:14614	144597	1	True				
ANR	144671	RelationalExpression	i < l		144597	0		<			
ANR	144672	Identifier	i		144597	0					
ANR	144673	Identifier	l		144597	1					
ANR	144674	UnaryExpression	++ i	486:20:14617:14619	144597	2	True				
ANR	144675	IncDec	++		144597	0					
ANR	144676	Identifier	i		144597	1					
ANR	144677	CompoundStatement		10:2:196:218	144597	3					
ANR	144678	IdentifierDeclStatement	unsigned char c = s [ i ] ;	487:2:14626:14648	144597	0	True				
ANR	144679	IdentifierDecl	c = s [ i ]		144597	0					
ANR	144680	IdentifierDeclType	unsigned char		144597	0					
ANR	144681	Identifier	c		144597	1					
ANR	144682	AssignmentExpression	c = s [ i ]		144597	2		=			
ANR	144683	Identifier	c		144597	0					
ANR	144684	ArrayIndexing	s [ i ]		144597	1					
ANR	144685	Identifier	s		144597	0					
ANR	144686	Identifier	i		144597	1					
ANR	144687	IfStatement	if ( c < 32 || c == '\\\\' || c > 126 )		144597	1					
ANR	144688	Condition	c < 32 || c == '\\\\' || c > 126	488:6:14656:14685	144597	0	True				
ANR	144689	OrExpression	c < 32 || c == '\\\\' || c > 126		144597	0		||			
ANR	144690	RelationalExpression	c < 32		144597	0		<			
ANR	144691	Identifier	c		144597	0					
ANR	144692	PrimaryExpression	32		144597	1					
ANR	144693	OrExpression	c == '\\\\' || c > 126		144597	1		||			
ANR	144694	EqualityExpression	c == '\\\\'		144597	0		==			
ANR	144695	Identifier	c		144597	0					
ANR	144696	PrimaryExpression	'\\\\'		144597	1					
ANR	144697	RelationalExpression	c > 126		144597	1		>			
ANR	144698	Identifier	c		144597	0					
ANR	144699	PrimaryExpression	126		144597	1					
ANR	144700	CompoundStatement		11:38:258:258	144597	1					
ANR	144701	ExpressionStatement	* res ++ = '\\\\'	489:3:14693:14706	144597	0	True				
ANR	144702	AssignmentExpression	* res ++ = '\\\\'		144597	0		=			
ANR	144703	UnaryOperationExpression	* res ++		144597	0					
ANR	144704	UnaryOperator	*		144597	0					
ANR	144705	PostIncDecOperationExpression	res ++		144597	1					
ANR	144706	Identifier	res		144597	0					
ANR	144707	IncDec	++		144597	1					
ANR	144708	PrimaryExpression	'\\\\'		144597	1					
ANR	144709	SwitchStatement	switch ( c )		144597	1					
ANR	144710	Condition	c	490:11:14719:14719	144597	0	True				
ANR	144711	Identifier	c		144597	0					
ANR	144712	CompoundStatement		13:14:292:292	144597	1					
ANR	144713	Label	case '\\n' :	491:4:14728:14737	144597	0	True				
ANR	144714	ExpressionStatement	* res ++ = 'n'	491:15:14739:14751	144597	1	True				
ANR	144715	AssignmentExpression	* res ++ = 'n'		144597	0		=			
ANR	144716	UnaryOperationExpression	* res ++		144597	0					
ANR	144717	UnaryOperator	*		144597	0					
ANR	144718	PostIncDecOperationExpression	res ++		144597	1					
ANR	144719	Identifier	res		144597	0					
ANR	144720	IncDec	++		144597	1					
ANR	144721	PrimaryExpression	'n'		144597	1					
ANR	144722	BreakStatement	break ;	491:29:14753:14758	144597	2	True				
ANR	144723	Label	case '\\r' :	492:4:14764:14773	144597	3	True				
ANR	144724	ExpressionStatement	* res ++ = 'r'	492:15:14775:14787	144597	4	True				
ANR	144725	AssignmentExpression	* res ++ = 'r'		144597	0		=			
ANR	144726	UnaryOperationExpression	* res ++		144597	0					
ANR	144727	UnaryOperator	*		144597	0					
ANR	144728	PostIncDecOperationExpression	res ++		144597	1					
ANR	144729	Identifier	res		144597	0					
ANR	144730	IncDec	++		144597	1					
ANR	144731	PrimaryExpression	'r'		144597	1					
ANR	144732	BreakStatement	break ;	492:29:14789:14794	144597	5	True				
ANR	144733	Label	case '\\t' :	493:4:14800:14809	144597	6	True				
ANR	144734	ExpressionStatement	* res ++ = 't'	493:15:14811:14823	144597	7	True				
ANR	144735	AssignmentExpression	* res ++ = 't'		144597	0		=			
ANR	144736	UnaryOperationExpression	* res ++		144597	0					
ANR	144737	UnaryOperator	*		144597	0					
ANR	144738	PostIncDecOperationExpression	res ++		144597	1					
ANR	144739	Identifier	res		144597	0					
ANR	144740	IncDec	++		144597	1					
ANR	144741	PrimaryExpression	't'		144597	1					
ANR	144742	BreakStatement	break ;	493:29:14825:14830	144597	8	True				
ANR	144743	Label	case '\\f' :	494:4:14836:14845	144597	9	True				
ANR	144744	ExpressionStatement	* res ++ = 'f'	494:15:14847:14859	144597	10	True				
ANR	144745	AssignmentExpression	* res ++ = 'f'		144597	0		=			
ANR	144746	UnaryOperationExpression	* res ++		144597	0					
ANR	144747	UnaryOperator	*		144597	0					
ANR	144748	PostIncDecOperationExpression	res ++		144597	1					
ANR	144749	Identifier	res		144597	0					
ANR	144750	IncDec	++		144597	1					
ANR	144751	PrimaryExpression	'f'		144597	1					
ANR	144752	BreakStatement	break ;	494:29:14861:14866	144597	11	True				
ANR	144753	Label	case '\\v' :	495:4:14872:14881	144597	12	True				
ANR	144754	ExpressionStatement	* res ++ = 'v'	495:15:14883:14895	144597	13	True				
ANR	144755	AssignmentExpression	* res ++ = 'v'		144597	0		=			
ANR	144756	UnaryOperationExpression	* res ++		144597	0					
ANR	144757	UnaryOperator	*		144597	0					
ANR	144758	PostIncDecOperationExpression	res ++		144597	1					
ANR	144759	Identifier	res		144597	0					
ANR	144760	IncDec	++		144597	1					
ANR	144761	PrimaryExpression	'v'		144597	1					
ANR	144762	BreakStatement	break ;	495:29:14897:14902	144597	14	True				
ANR	144763	Label	case '\\\\' :	496:4:14908:14917	144597	15	True				
ANR	144764	ExpressionStatement	* res ++ = '\\\\'	496:15:14919:14932	144597	16	True				
ANR	144765	AssignmentExpression	* res ++ = '\\\\'		144597	0		=			
ANR	144766	UnaryOperationExpression	* res ++		144597	0					
ANR	144767	UnaryOperator	*		144597	0					
ANR	144768	PostIncDecOperationExpression	res ++		144597	1					
ANR	144769	Identifier	res		144597	0					
ANR	144770	IncDec	++		144597	1					
ANR	144771	PrimaryExpression	'\\\\'		144597	1					
ANR	144772	BreakStatement	break ;	496:30:14934:14939	144597	17	True				
ANR	144773	Label	case VK_ESCAPE :	497:4:14945:14959	144597	18	True				
ANR	144774	Identifier	VK_ESCAPE		144597	0					
ANR	144775	ExpressionStatement	* res ++ = 'e'	497:20:14961:14973	144597	19	True				
ANR	144776	AssignmentExpression	* res ++ = 'e'		144597	0		=			
ANR	144777	UnaryOperationExpression	* res ++		144597	0					
ANR	144778	UnaryOperator	*		144597	0					
ANR	144779	PostIncDecOperationExpression	res ++		144597	1					
ANR	144780	Identifier	res		144597	0					
ANR	144781	IncDec	++		144597	1					
ANR	144782	PrimaryExpression	'e'		144597	1					
ANR	144783	BreakStatement	break ;	497:34:14975:14980	144597	20	True				
ANR	144784	Label	default :	498:4:14986:14993	144597	21	True				
ANR	144785	Identifier	default		144597	0					
ANR	144786	ExpressionStatement	* res ++ = 'x'	499:5:15000:15012	144597	22	True				
ANR	144787	AssignmentExpression	* res ++ = 'x'		144597	0		=			
ANR	144788	UnaryOperationExpression	* res ++		144597	0					
ANR	144789	UnaryOperator	*		144597	0					
ANR	144790	PostIncDecOperationExpression	res ++		144597	1					
ANR	144791	Identifier	res		144597	0					
ANR	144792	IncDec	++		144597	1					
ANR	144793	PrimaryExpression	'x'		144597	1					
ANR	144794	IfStatement	if ( ( c >> 4 ) < 10 )		144597	23					
ANR	144795	Condition	( c >> 4 ) < 10	500:9:15023:15035	144597	0	True				
ANR	144796	RelationalExpression	( c >> 4 ) < 10		144597	0		<			
ANR	144797	ShiftExpression	c >> 4		144597	0		>>			
ANR	144798	Identifier	c		144597	0					
ANR	144799	PrimaryExpression	4		144597	1					
ANR	144800	PrimaryExpression	10		144597	1					
ANR	144801	CompoundStatement		23:24:608:608	144597	1					
ANR	144802	ExpressionStatement	* res ++ = ( c >> 4 ) + '0'	501:6:15046:15069	144597	0	True				
ANR	144803	AssignmentExpression	* res ++ = ( c >> 4 ) + '0'		144597	0		=			
ANR	144804	UnaryOperationExpression	* res ++		144597	0					
ANR	144805	UnaryOperator	*		144597	0					
ANR	144806	PostIncDecOperationExpression	res ++		144597	1					
ANR	144807	Identifier	res		144597	0					
ANR	144808	IncDec	++		144597	1					
ANR	144809	AdditiveExpression	( c >> 4 ) + '0'		144597	1		+			
ANR	144810	ShiftExpression	c >> 4		144597	0		>>			
ANR	144811	Identifier	c		144597	0					
ANR	144812	PrimaryExpression	4		144597	1					
ANR	144813	PrimaryExpression	'0'		144597	1					
ANR	144814	ElseStatement	else		144597	0					
ANR	144815	CompoundStatement		25:12:653:653	144597	0					
ANR	144816	ExpressionStatement	* res ++ = ( c >> 4 ) + 'A' - 10	503:6:15091:15119	144597	0	True				
ANR	144817	AssignmentExpression	* res ++ = ( c >> 4 ) + 'A' - 10		144597	0		=			
ANR	144818	UnaryOperationExpression	* res ++		144597	0					
ANR	144819	UnaryOperator	*		144597	0					
ANR	144820	PostIncDecOperationExpression	res ++		144597	1					
ANR	144821	Identifier	res		144597	0					
ANR	144822	IncDec	++		144597	1					
ANR	144823	AdditiveExpression	( c >> 4 ) + 'A' - 10		144597	1		+			
ANR	144824	ShiftExpression	c >> 4		144597	0		>>			
ANR	144825	Identifier	c		144597	0					
ANR	144826	PrimaryExpression	4		144597	1					
ANR	144827	AdditiveExpression	'A' - 10		144597	1		-			
ANR	144828	PrimaryExpression	'A'		144597	0					
ANR	144829	PrimaryExpression	10		144597	1					
ANR	144830	IfStatement	if ( ( c & 0xf ) < 10 )		144597	24					
ANR	144831	Condition	( c & 0xf ) < 10	505:9:15137:15150	144597	0	True				
ANR	144832	RelationalExpression	( c & 0xf ) < 10		144597	0		<			
ANR	144833	BitAndExpression	c & 0xf		144597	0		&			
ANR	144834	Identifier	c		144597	0					
ANR	144835	PrimaryExpression	0xf		144597	1					
ANR	144836	PrimaryExpression	10		144597	1					
ANR	144837	CompoundStatement		28:25:723:723	144597	1					
ANR	144838	ExpressionStatement	* res ++ = ( c & 0xf ) + '0'	506:6:15161:15185	144597	0	True				
ANR	144839	AssignmentExpression	* res ++ = ( c & 0xf ) + '0'		144597	0		=			
ANR	144840	UnaryOperationExpression	* res ++		144597	0					
ANR	144841	UnaryOperator	*		144597	0					
ANR	144842	PostIncDecOperationExpression	res ++		144597	1					
ANR	144843	Identifier	res		144597	0					
ANR	144844	IncDec	++		144597	1					
ANR	144845	AdditiveExpression	( c & 0xf ) + '0'		144597	1		+			
ANR	144846	BitAndExpression	c & 0xf		144597	0		&			
ANR	144847	Identifier	c		144597	0					
ANR	144848	PrimaryExpression	0xf		144597	1					
ANR	144849	PrimaryExpression	'0'		144597	1					
ANR	144850	ElseStatement	else		144597	0					
ANR	144851	CompoundStatement		30:12:769:769	144597	0					
ANR	144852	ExpressionStatement	* res ++ = ( c & 0xf ) + 'A' - 10	508:6:15207:15236	144597	0	True				
ANR	144853	AssignmentExpression	* res ++ = ( c & 0xf ) + 'A' - 10		144597	0		=			
ANR	144854	UnaryOperationExpression	* res ++		144597	0					
ANR	144855	UnaryOperator	*		144597	0					
ANR	144856	PostIncDecOperationExpression	res ++		144597	1					
ANR	144857	Identifier	res		144597	0					
ANR	144858	IncDec	++		144597	1					
ANR	144859	AdditiveExpression	( c & 0xf ) + 'A' - 10		144597	1		+			
ANR	144860	BitAndExpression	c & 0xf		144597	0		&			
ANR	144861	Identifier	c		144597	0					
ANR	144862	PrimaryExpression	0xf		144597	1					
ANR	144863	AdditiveExpression	'A' - 10		144597	1		-			
ANR	144864	PrimaryExpression	'A'		144597	0					
ANR	144865	PrimaryExpression	10		144597	1					
ANR	144866	ElseStatement	else		144597	0					
ANR	144867	CompoundStatement		34:9:829:829	144597	0					
ANR	144868	ExpressionStatement	* res ++ = c	512:3:15264:15274	144597	0	True				
ANR	144869	AssignmentExpression	* res ++ = c		144597	0		=			
ANR	144870	UnaryOperationExpression	* res ++		144597	0					
ANR	144871	UnaryOperator	*		144597	0					
ANR	144872	PostIncDecOperationExpression	res ++		144597	1					
ANR	144873	Identifier	res		144597	0					
ANR	144874	IncDec	++		144597	1					
ANR	144875	Identifier	c		144597	1					
ANR	144876	ReturnType	static void		144597	1					
ANR	144877	Identifier	smart_str_append_escaped		144597	2					
ANR	144878	ParameterList	"smart_str * str , const char * s , size_t l"		144597	3					
ANR	144879	Parameter	smart_str * str	478:37:14388:14401	144597	0	True				
ANR	144880	ParameterType	smart_str *		144597	0					
ANR	144881	Identifier	str		144597	1					
ANR	144882	Parameter	const char * s	478:53:14404:14416	144597	1	True				
ANR	144883	ParameterType	const char *		144597	0					
ANR	144884	Identifier	s		144597	1					
ANR	144885	Parameter	size_t l	478:68:14419:14426	144597	2	True				
ANR	144886	ParameterType	size_t		144597	0					
ANR	144887	Identifier	l		144597	1					
ANR	144888	CFGEntryNode	ENTRY		144597		True				
ANR	144889	CFGExitNode	EXIT		144597		True				
ANR	144890	Symbol	res		144597						
ANR	144891	Symbol	c		144597						
ANR	144892	Symbol	compute_escaped_string_len		144597						
ANR	144893	Symbol	i		144597						
ANR	144894	Symbol	str -> s		144597						
ANR	144895	Symbol	l		144597						
ANR	144896	Symbol	ZSTR_VAL		144597						
ANR	144897	Symbol	str		144597						
ANR	144898	Symbol	s		144597						
ANR	144899	Symbol	* i		144597						
ANR	144900	Symbol	* res ++		144597						
ANR	144901	Symbol	len		144597						
ANR	144902	Symbol	ZSTR_LEN		144597						
ANR	144903	Symbol	* str		144597						
ANR	144904	Symbol	* s		144597						
ANR	144905	Function	_build_trace_args	517:0:15286:16825							
ANR	144906	FunctionDef	"_build_trace_args (zval * arg , smart_str * str)"		144905	0					
ANR	144907	CompoundStatement		518:0:15353:16825	144905	0					
ANR	144908	ExpressionStatement	ZVAL_DEREF ( arg )	525:1:15533:15548	144905	0	True				
ANR	144909	CallExpression	ZVAL_DEREF ( arg )		144905	0					
ANR	144910	Callee	ZVAL_DEREF		144905	0					
ANR	144911	Identifier	ZVAL_DEREF		144905	0					
ANR	144912	ArgumentList	arg		144905	1					
ANR	144913	Argument	arg		144905	0					
ANR	144914	Identifier	arg		144905	0					
ANR	144915	SwitchStatement	switch ( Z_TYPE_P ( arg ) )		144905	1					
ANR	144916	Condition	Z_TYPE_P ( arg )	526:9:15559:15571	144905	0	True				
ANR	144917	CallExpression	Z_TYPE_P ( arg )		144905	0					
ANR	144918	Callee	Z_TYPE_P		144905	0					
ANR	144919	Identifier	Z_TYPE_P		144905	0					
ANR	144920	ArgumentList	arg		144905	1					
ANR	144921	Argument	arg		144905	0					
ANR	144922	Identifier	arg		144905	0					
ANR	144923	CompoundStatement		9:24:220:220	144905	1					
ANR	144924	Label	case IS_NULL :	527:2:15578:15590	144905	0	True				
ANR	144925	Identifier	IS_NULL		144905	0					
ANR	144926	ExpressionStatement	"smart_str_appends ( str , ""NULL, "" )"	528:3:15595:15627	144905	1	True				
ANR	144927	CallExpression	"smart_str_appends ( str , ""NULL, "" )"		144905	0					
ANR	144928	Callee	smart_str_appends		144905	0					
ANR	144929	Identifier	smart_str_appends		144905	0					
ANR	144930	ArgumentList	str		144905	1					
ANR	144931	Argument	str		144905	0					
ANR	144932	Identifier	str		144905	0					
ANR	144933	Argument	"""NULL, """		144905	1					
ANR	144934	PrimaryExpression	"""NULL, """		144905	0					
ANR	144935	BreakStatement	break ;	529:3:15632:15637	144905	2	True				
ANR	144936	Label	case IS_STRING :	530:2:15641:15655	144905	3	True				
ANR	144937	Identifier	IS_STRING		144905	0					
ANR	144938	ExpressionStatement	"smart_str_appendc ( str , '\\'' )"	531:3:15660:15688	144905	4	True				
ANR	144939	CallExpression	"smart_str_appendc ( str , '\\'' )"		144905	0					
ANR	144940	Callee	smart_str_appendc		144905	0					
ANR	144941	Identifier	smart_str_appendc		144905	0					
ANR	144942	ArgumentList	str		144905	1					
ANR	144943	Argument	str		144905	0					
ANR	144944	Identifier	str		144905	0					
ANR	144945	Argument	'\\''		144905	1					
ANR	144946	PrimaryExpression	'\\''		144905	0					
ANR	144947	ExpressionStatement	"smart_str_append_escaped ( str , Z_STRVAL_P ( arg ) , MIN ( Z_STRLEN_P ( arg ) , 15 ) )"	532:3:15693:15765	144905	5	True				
ANR	144948	CallExpression	"smart_str_append_escaped ( str , Z_STRVAL_P ( arg ) , MIN ( Z_STRLEN_P ( arg ) , 15 ) )"		144905	0					
ANR	144949	Callee	smart_str_append_escaped		144905	0					
ANR	144950	Identifier	smart_str_append_escaped		144905	0					
ANR	144951	ArgumentList	str		144905	1					
ANR	144952	Argument	str		144905	0					
ANR	144953	Identifier	str		144905	0					
ANR	144954	Argument	Z_STRVAL_P ( arg )		144905	1					
ANR	144955	CallExpression	Z_STRVAL_P ( arg )		144905	0					
ANR	144956	Callee	Z_STRVAL_P		144905	0					
ANR	144957	Identifier	Z_STRVAL_P		144905	0					
ANR	144958	ArgumentList	arg		144905	1					
ANR	144959	Argument	arg		144905	0					
ANR	144960	Identifier	arg		144905	0					
ANR	144961	Argument	"MIN ( Z_STRLEN_P ( arg ) , 15 )"		144905	2					
ANR	144962	CallExpression	"MIN ( Z_STRLEN_P ( arg ) , 15 )"		144905	0					
ANR	144963	Callee	MIN		144905	0					
ANR	144964	Identifier	MIN		144905	0					
ANR	144965	ArgumentList	Z_STRLEN_P ( arg )		144905	1					
ANR	144966	Argument	Z_STRLEN_P ( arg )		144905	0					
ANR	144967	CallExpression	Z_STRLEN_P ( arg )		144905	0					
ANR	144968	Callee	Z_STRLEN_P		144905	0					
ANR	144969	Identifier	Z_STRLEN_P		144905	0					
ANR	144970	ArgumentList	arg		144905	1					
ANR	144971	Argument	arg		144905	0					
ANR	144972	Identifier	arg		144905	0					
ANR	144973	Argument	15		144905	1					
ANR	144974	PrimaryExpression	15		144905	0					
ANR	144975	IfStatement	if ( Z_STRLEN_P ( arg ) > 15 )		144905	6					
ANR	144976	Condition	Z_STRLEN_P ( arg ) > 15	533:7:15774:15793	144905	0	True				
ANR	144977	RelationalExpression	Z_STRLEN_P ( arg ) > 15		144905	0		>			
ANR	144978	CallExpression	Z_STRLEN_P ( arg )		144905	0					
ANR	144979	Callee	Z_STRLEN_P		144905	0					
ANR	144980	Identifier	Z_STRLEN_P		144905	0					
ANR	144981	ArgumentList	arg		144905	1					
ANR	144982	Argument	arg		144905	0					
ANR	144983	Identifier	arg		144905	0					
ANR	144984	PrimaryExpression	15		144905	1					
ANR	144985	CompoundStatement		16:29:442:442	144905	1					
ANR	144986	ExpressionStatement	"smart_str_appends ( str , ""...', "" )"	534:4:15802:15834	144905	0	True				
ANR	144987	CallExpression	"smart_str_appends ( str , ""...', "" )"		144905	0					
ANR	144988	Callee	smart_str_appends		144905	0					
ANR	144989	Identifier	smart_str_appends		144905	0					
ANR	144990	ArgumentList	str		144905	1					
ANR	144991	Argument	str		144905	0					
ANR	144992	Identifier	str		144905	0					
ANR	144993	Argument	"""...', """		144905	1					
ANR	144994	PrimaryExpression	"""...', """		144905	0					
ANR	144995	ElseStatement	else		144905	0					
ANR	144996	CompoundStatement		18:10:492:492	144905	0					
ANR	144997	ExpressionStatement	"smart_str_appends ( str , ""', "" )"	536:4:15852:15881	144905	0	True				
ANR	144998	CallExpression	"smart_str_appends ( str , ""', "" )"		144905	0					
ANR	144999	Callee	smart_str_appends		144905	0					
ANR	145000	Identifier	smart_str_appends		144905	0					
ANR	145001	ArgumentList	str		144905	1					
ANR	145002	Argument	str		144905	0					
ANR	145003	Identifier	str		144905	0					
ANR	145004	Argument	"""', """		144905	1					
ANR	145005	PrimaryExpression	"""', """		144905	0					
ANR	145006	BreakStatement	break ;	538:3:15891:15896	144905	7	True				
ANR	145007	Label	case IS_FALSE :	539:2:15900:15913	144905	8	True				
ANR	145008	Identifier	IS_FALSE		144905	0					
ANR	145009	ExpressionStatement	"smart_str_appends ( str , ""false, "" )"	540:3:15918:15951	144905	9	True				
ANR	145010	CallExpression	"smart_str_appends ( str , ""false, "" )"		144905	0					
ANR	145011	Callee	smart_str_appends		144905	0					
ANR	145012	Identifier	smart_str_appends		144905	0					
ANR	145013	ArgumentList	str		144905	1					
ANR	145014	Argument	str		144905	0					
ANR	145015	Identifier	str		144905	0					
ANR	145016	Argument	"""false, """		144905	1					
ANR	145017	PrimaryExpression	"""false, """		144905	0					
ANR	145018	BreakStatement	break ;	541:3:15956:15961	144905	10	True				
ANR	145019	Label	case IS_TRUE :	542:2:15965:15977	144905	11	True				
ANR	145020	Identifier	IS_TRUE		144905	0					
ANR	145021	ExpressionStatement	"smart_str_appends ( str , ""true, "" )"	543:3:15982:16014	144905	12	True				
ANR	145022	CallExpression	"smart_str_appends ( str , ""true, "" )"		144905	0					
ANR	145023	Callee	smart_str_appends		144905	0					
ANR	145024	Identifier	smart_str_appends		144905	0					
ANR	145025	ArgumentList	str		144905	1					
ANR	145026	Argument	str		144905	0					
ANR	145027	Identifier	str		144905	0					
ANR	145028	Argument	"""true, """		144905	1					
ANR	145029	PrimaryExpression	"""true, """		144905	0					
ANR	145030	BreakStatement	break ;	544:3:16019:16024	144905	13	True				
ANR	145031	Label	case IS_RESOURCE :	545:2:16028:16044	144905	14	True				
ANR	145032	Identifier	IS_RESOURCE		144905	0					
ANR	145033	ExpressionStatement	"smart_str_appends ( str , ""Resource id #"" )"	546:3:16049:16088	144905	15	True				
ANR	145034	CallExpression	"smart_str_appends ( str , ""Resource id #"" )"		144905	0					
ANR	145035	Callee	smart_str_appends		144905	0					
ANR	145036	Identifier	smart_str_appends		144905	0					
ANR	145037	ArgumentList	str		144905	1					
ANR	145038	Argument	str		144905	0					
ANR	145039	Identifier	str		144905	0					
ANR	145040	Argument	"""Resource id #"""		144905	1					
ANR	145041	PrimaryExpression	"""Resource id #"""		144905	0					
ANR	145042	ExpressionStatement	"smart_str_append_long ( str , Z_RES_HANDLE_P ( arg ) )"	547:3:16093:16140	144905	16	True				
ANR	145043	CallExpression	"smart_str_append_long ( str , Z_RES_HANDLE_P ( arg ) )"		144905	0					
ANR	145044	Callee	smart_str_append_long		144905	0					
ANR	145045	Identifier	smart_str_append_long		144905	0					
ANR	145046	ArgumentList	str		144905	1					
ANR	145047	Argument	str		144905	0					
ANR	145048	Identifier	str		144905	0					
ANR	145049	Argument	Z_RES_HANDLE_P ( arg )		144905	1					
ANR	145050	CallExpression	Z_RES_HANDLE_P ( arg )		144905	0					
ANR	145051	Callee	Z_RES_HANDLE_P		144905	0					
ANR	145052	Identifier	Z_RES_HANDLE_P		144905	0					
ANR	145053	ArgumentList	arg		144905	1					
ANR	145054	Argument	arg		144905	0					
ANR	145055	Identifier	arg		144905	0					
ANR	145056	ExpressionStatement	"smart_str_appends ( str , "", "" )"	548:3:16145:16173	144905	17	True				
ANR	145057	CallExpression	"smart_str_appends ( str , "", "" )"		144905	0					
ANR	145058	Callee	smart_str_appends		144905	0					
ANR	145059	Identifier	smart_str_appends		144905	0					
ANR	145060	ArgumentList	str		144905	1					
ANR	145061	Argument	str		144905	0					
ANR	145062	Identifier	str		144905	0					
ANR	145063	Argument	""", """		144905	1					
ANR	145064	PrimaryExpression	""", """		144905	0					
ANR	145065	BreakStatement	break ;	549:3:16178:16183	144905	18	True				
ANR	145066	Label	case IS_LONG :	550:2:16187:16199	144905	19	True				
ANR	145067	Identifier	IS_LONG		144905	0					
ANR	145068	ExpressionStatement	"smart_str_append_long ( str , Z_LVAL_P ( arg ) )"	551:3:16204:16245	144905	20	True				
ANR	145069	CallExpression	"smart_str_append_long ( str , Z_LVAL_P ( arg ) )"		144905	0					
ANR	145070	Callee	smart_str_append_long		144905	0					
ANR	145071	Identifier	smart_str_append_long		144905	0					
ANR	145072	ArgumentList	str		144905	1					
ANR	145073	Argument	str		144905	0					
ANR	145074	Identifier	str		144905	0					
ANR	145075	Argument	Z_LVAL_P ( arg )		144905	1					
ANR	145076	CallExpression	Z_LVAL_P ( arg )		144905	0					
ANR	145077	Callee	Z_LVAL_P		144905	0					
ANR	145078	Identifier	Z_LVAL_P		144905	0					
ANR	145079	ArgumentList	arg		144905	1					
ANR	145080	Argument	arg		144905	0					
ANR	145081	Identifier	arg		144905	0					
ANR	145082	ExpressionStatement	"smart_str_appends ( str , "", "" )"	552:3:16250:16278	144905	21	True				
ANR	145083	CallExpression	"smart_str_appends ( str , "", "" )"		144905	0					
ANR	145084	Callee	smart_str_appends		144905	0					
ANR	145085	Identifier	smart_str_appends		144905	0					
ANR	145086	ArgumentList	str		144905	1					
ANR	145087	Argument	str		144905	0					
ANR	145088	Identifier	str		144905	0					
ANR	145089	Argument	""", """		144905	1					
ANR	145090	PrimaryExpression	""", """		144905	0					
ANR	145091	BreakStatement	break ;	553:3:16283:16288	144905	22	True				
ANR	145092	Label	case IS_DOUBLE :	554:2:16292:16306	144905	23	True				
ANR	145093	Identifier	IS_DOUBLE		144905	0					
ANR	145094	CompoundStatement		40:3:1059:1125	144905	24					
ANR	145095	IdentifierDeclStatement	double dval = Z_DVAL_P ( arg ) ;	555:3:16313:16340	144905	0	True				
ANR	145096	IdentifierDecl	dval = Z_DVAL_P ( arg )		144905	0					
ANR	145097	IdentifierDeclType	double		144905	0					
ANR	145098	Identifier	dval		144905	1					
ANR	145099	AssignmentExpression	dval = Z_DVAL_P ( arg )		144905	2		=			
ANR	145100	Identifier	dval		144905	0					
ANR	145101	CallExpression	Z_DVAL_P ( arg )		144905	1					
ANR	145102	Callee	Z_DVAL_P		144905	0					
ANR	145103	Identifier	Z_DVAL_P		144905	0					
ANR	145104	ArgumentList	arg		144905	1					
ANR	145105	Argument	arg		144905	0					
ANR	145106	Identifier	arg		144905	0					
ANR	145107	IdentifierDeclStatement	char * s_tmp = emalloc ( MAX_LENGTH_OF_DOUBLE + EG ( precision ) + 1 ) ;	556:3:16345:16408	144905	1	True				
ANR	145108	IdentifierDecl	* s_tmp = emalloc ( MAX_LENGTH_OF_DOUBLE + EG ( precision ) + 1 )		144905	0					
ANR	145109	IdentifierDeclType	char *		144905	0					
ANR	145110	Identifier	s_tmp		144905	1					
ANR	145111	AssignmentExpression	* s_tmp = emalloc ( MAX_LENGTH_OF_DOUBLE + EG ( precision ) + 1 )		144905	2		=			
ANR	145112	Identifier	s_tmp		144905	0					
ANR	145113	CallExpression	emalloc ( MAX_LENGTH_OF_DOUBLE + EG ( precision ) + 1 )		144905	1					
ANR	145114	Callee	emalloc		144905	0					
ANR	145115	Identifier	emalloc		144905	0					
ANR	145116	ArgumentList	MAX_LENGTH_OF_DOUBLE + EG ( precision ) + 1		144905	1					
ANR	145117	Argument	MAX_LENGTH_OF_DOUBLE + EG ( precision ) + 1		144905	0					
ANR	145118	AdditiveExpression	MAX_LENGTH_OF_DOUBLE + EG ( precision ) + 1		144905	0		+			
ANR	145119	Identifier	MAX_LENGTH_OF_DOUBLE		144905	0					
ANR	145120	AdditiveExpression	EG ( precision ) + 1		144905	1		+			
ANR	145121	CallExpression	EG ( precision )		144905	0					
ANR	145122	Callee	EG		144905	0					
ANR	145123	Identifier	EG		144905	0					
ANR	145124	ArgumentList	precision		144905	1					
ANR	145125	Argument	precision		144905	0					
ANR	145126	Identifier	precision		144905	0					
ANR	145127	PrimaryExpression	1		144905	1					
ANR	145128	IdentifierDeclStatement	"int l_tmp = zend_sprintf ( s_tmp , ""%.*G"" , ( int ) EG ( precision ) , dval ) ;"	557:3:16413:16479	144905	2	True				
ANR	145129	IdentifierDecl	"l_tmp = zend_sprintf ( s_tmp , ""%.*G"" , ( int ) EG ( precision ) , dval )"		144905	0					
ANR	145130	IdentifierDeclType	int		144905	0					
ANR	145131	Identifier	l_tmp		144905	1					
ANR	145132	AssignmentExpression	"l_tmp = zend_sprintf ( s_tmp , ""%.*G"" , ( int ) EG ( precision ) , dval )"		144905	2		=			
ANR	145133	Identifier	l_tmp		144905	0					
ANR	145134	CallExpression	"zend_sprintf ( s_tmp , ""%.*G"" , ( int ) EG ( precision ) , dval )"		144905	1					
ANR	145135	Callee	zend_sprintf		144905	0					
ANR	145136	Identifier	zend_sprintf		144905	0					
ANR	145137	ArgumentList	s_tmp		144905	1					
ANR	145138	Argument	s_tmp		144905	0					
ANR	145139	Identifier	s_tmp		144905	0					
ANR	145140	Argument	"""%.*G"""		144905	1					
ANR	145141	PrimaryExpression	"""%.*G"""		144905	0					
ANR	145142	Argument	( int ) EG ( precision )		144905	2					
ANR	145143	CastExpression	( int ) EG ( precision )		144905	0					
ANR	145144	CastTarget	int		144905	0					
ANR	145145	CallExpression	EG ( precision )		144905	1					
ANR	145146	Callee	EG		144905	0					
ANR	145147	Identifier	EG		144905	0					
ANR	145148	ArgumentList	precision		144905	1					
ANR	145149	Argument	precision		144905	0					
ANR	145150	Identifier	precision		144905	0					
ANR	145151	Argument	dval		144905	3					
ANR	145152	Identifier	dval		144905	0					
ANR	145153	ExpressionStatement	"smart_str_appendl ( str , s_tmp , l_tmp )"	558:3:16496:16532	144905	3	True				
ANR	145154	CallExpression	"smart_str_appendl ( str , s_tmp , l_tmp )"		144905	0					
ANR	145155	Callee	smart_str_appendl		144905	0					
ANR	145156	Identifier	smart_str_appendl		144905	0					
ANR	145157	ArgumentList	str		144905	1					
ANR	145158	Argument	str		144905	0					
ANR	145159	Identifier	str		144905	0					
ANR	145160	Argument	s_tmp		144905	1					
ANR	145161	Identifier	s_tmp		144905	0					
ANR	145162	Argument	l_tmp		144905	2					
ANR	145163	Identifier	l_tmp		144905	0					
ANR	145164	ExpressionStatement	"smart_str_appends ( str , "", "" )"	559:3:16537:16565	144905	4	True				
ANR	145165	CallExpression	"smart_str_appends ( str , "", "" )"		144905	0					
ANR	145166	Callee	smart_str_appends		144905	0					
ANR	145167	Identifier	smart_str_appends		144905	0					
ANR	145168	ArgumentList	str		144905	1					
ANR	145169	Argument	str		144905	0					
ANR	145170	Identifier	str		144905	0					
ANR	145171	Argument	""", """		144905	1					
ANR	145172	PrimaryExpression	""", """		144905	0					
ANR	145173	ExpressionStatement	efree ( s_tmp )	560:3:16570:16582	144905	5	True				
ANR	145174	CallExpression	efree ( s_tmp )		144905	0					
ANR	145175	Callee	efree		144905	0					
ANR	145176	Identifier	efree		144905	0					
ANR	145177	ArgumentList	s_tmp		144905	1					
ANR	145178	Argument	s_tmp		144905	0					
ANR	145179	Identifier	s_tmp		144905	0					
ANR	145180	BreakStatement	break ;	561:3:16587:16592	144905	6	True				
ANR	145181	Label	case IS_ARRAY :	563:2:16600:16613	144905	25	True				
ANR	145182	Identifier	IS_ARRAY		144905	0					
ANR	145183	ExpressionStatement	"smart_str_appends ( str , ""Array, "" )"	564:3:16618:16651	144905	26	True				
ANR	145184	CallExpression	"smart_str_appends ( str , ""Array, "" )"		144905	0					
ANR	145185	Callee	smart_str_appends		144905	0					
ANR	145186	Identifier	smart_str_appends		144905	0					
ANR	145187	ArgumentList	str		144905	1					
ANR	145188	Argument	str		144905	0					
ANR	145189	Identifier	str		144905	0					
ANR	145190	Argument	"""Array, """		144905	1					
ANR	145191	PrimaryExpression	"""Array, """		144905	0					
ANR	145192	BreakStatement	break ;	565:3:16656:16661	144905	27	True				
ANR	145193	Label	case IS_OBJECT :	566:2:16665:16679	144905	28	True				
ANR	145194	Identifier	IS_OBJECT		144905	0					
ANR	145195	ExpressionStatement	"smart_str_appends ( str , ""Object("" )"	567:3:16684:16717	144905	29	True				
ANR	145196	CallExpression	"smart_str_appends ( str , ""Object("" )"		144905	0					
ANR	145197	Callee	smart_str_appends		144905	0					
ANR	145198	Identifier	smart_str_appends		144905	0					
ANR	145199	ArgumentList	str		144905	1					
ANR	145200	Argument	str		144905	0					
ANR	145201	Identifier	str		144905	0					
ANR	145202	Argument	"""Object("""		144905	1					
ANR	145203	PrimaryExpression	"""Object("""		144905	0					
ANR	145204	ExpressionStatement	"smart_str_appends ( str , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) )"	568:3:16722:16776	144905	30	True				
ANR	145205	CallExpression	"smart_str_appends ( str , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) )"		144905	0					
ANR	145206	Callee	smart_str_appends		144905	0					
ANR	145207	Identifier	smart_str_appends		144905	0					
ANR	145208	ArgumentList	str		144905	1					
ANR	145209	Argument	str		144905	0					
ANR	145210	Identifier	str		144905	0					
ANR	145211	Argument	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		144905	1					
ANR	145212	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		144905	0					
ANR	145213	Callee	ZSTR_VAL		144905	0					
ANR	145214	Identifier	ZSTR_VAL		144905	0					
ANR	145215	ArgumentList	Z_OBJCE_P ( arg ) -> name		144905	1					
ANR	145216	Argument	Z_OBJCE_P ( arg ) -> name		144905	0					
ANR	145217	PtrMemberAccess	Z_OBJCE_P ( arg ) -> name		144905	0					
ANR	145218	CallExpression	Z_OBJCE_P ( arg )		144905	0					
ANR	145219	Callee	Z_OBJCE_P		144905	0					
ANR	145220	Identifier	Z_OBJCE_P		144905	0					
ANR	145221	ArgumentList	arg		144905	1					
ANR	145222	Argument	arg		144905	0					
ANR	145223	Identifier	arg		144905	0					
ANR	145224	Identifier	name		144905	1					
ANR	145225	ExpressionStatement	"smart_str_appends ( str , ""), "" )"	569:3:16781:16810	144905	31	True				
ANR	145226	CallExpression	"smart_str_appends ( str , ""), "" )"		144905	0					
ANR	145227	Callee	smart_str_appends		144905	0					
ANR	145228	Identifier	smart_str_appends		144905	0					
ANR	145229	ArgumentList	str		144905	1					
ANR	145230	Argument	str		144905	0					
ANR	145231	Identifier	str		144905	0					
ANR	145232	Argument	"""), """		144905	1					
ANR	145233	PrimaryExpression	"""), """		144905	0					
ANR	145234	BreakStatement	break ;	570:3:16815:16820	144905	32	True				
ANR	145235	ReturnType	static void		144905	1					
ANR	145236	Identifier	_build_trace_args		144905	2					
ANR	145237	ParameterList	"zval * arg , smart_str * str"		144905	3					
ANR	145238	Parameter	zval * arg	517:30:15316:15324	144905	0	True				
ANR	145239	ParameterType	zval *		144905	0					
ANR	145240	Identifier	arg		144905	1					
ANR	145241	Parameter	smart_str * str	517:41:15327:15340	144905	1	True				
ANR	145242	ParameterType	smart_str *		144905	0					
ANR	145243	Identifier	str		144905	1					
ANR	145244	CFGEntryNode	ENTRY		144905		True				
ANR	145245	CFGExitNode	EXIT		144905		True				
ANR	145246	Symbol	Z_RES_HANDLE_P		144905						
ANR	145247	Symbol	EG		144905						
ANR	145248	Symbol	precision		144905						
ANR	145249	Symbol	s_tmp		144905						
ANR	145250	Symbol	Z_TYPE_P		144905						
ANR	145251	Symbol	Z_STRVAL_P		144905						
ANR	145252	Symbol	Z_DVAL_P		144905						
ANR	145253	Symbol	zend_sprintf		144905						
ANR	145254	Symbol	Z_LVAL_P		144905						
ANR	145255	Symbol	ZSTR_VAL		144905						
ANR	145256	Symbol	str		144905						
ANR	145257	Symbol	dval		144905						
ANR	145258	Symbol	emalloc		144905						
ANR	145259	Symbol	MIN		144905						
ANR	145260	Symbol	Z_OBJCE_P ( arg ) -> name		144905						
ANR	145261	Symbol	arg		144905						
ANR	145262	Symbol	MAX_LENGTH_OF_DOUBLE		144905						
ANR	145263	Symbol	Z_OBJCE_P		144905						
ANR	145264	Symbol	Z_STRLEN_P		144905						
ANR	145265	Symbol	l_tmp		144905						
ANR	145266	Symbol	* Z_OBJCE_P		144905						
ANR	145267	Function	_build_trace_string	575:0:16838:18329							
ANR	145268	FunctionDef	"_build_trace_string (smart_str * str , HashTable * ht , uint32_t num)"		145267	0					
ANR	145269	CompoundStatement		576:0:16925:18329	145267	0					
ANR	145270	IdentifierDeclStatement	"zval * file , * tmp ;"	577:1:16928:16944	145267	0	True				
ANR	145271	IdentifierDecl	* file		145267	0					
ANR	145272	IdentifierDeclType	zval *		145267	0					
ANR	145273	Identifier	file		145267	1					
ANR	145274	IdentifierDecl	* tmp		145267	1					
ANR	145275	IdentifierDeclType	zval *		145267	0					
ANR	145276	Identifier	tmp		145267	1					
ANR	145277	ExpressionStatement	"smart_str_appendc ( str , '#' )"	579:1:16948:16975	145267	1	True				
ANR	145278	CallExpression	"smart_str_appendc ( str , '#' )"		145267	0					
ANR	145279	Callee	smart_str_appendc		145267	0					
ANR	145280	Identifier	smart_str_appendc		145267	0					
ANR	145281	ArgumentList	str		145267	1					
ANR	145282	Argument	str		145267	0					
ANR	145283	Identifier	str		145267	0					
ANR	145284	Argument	'#'		145267	1					
ANR	145285	PrimaryExpression	'#'		145267	0					
ANR	145286	ExpressionStatement	"smart_str_append_long ( str , num )"	580:1:16978:17009	145267	2	True				
ANR	145287	CallExpression	"smart_str_append_long ( str , num )"		145267	0					
ANR	145288	Callee	smart_str_append_long		145267	0					
ANR	145289	Identifier	smart_str_append_long		145267	0					
ANR	145290	ArgumentList	str		145267	1					
ANR	145291	Argument	str		145267	0					
ANR	145292	Identifier	str		145267	0					
ANR	145293	Argument	num		145267	1					
ANR	145294	Identifier	num		145267	0					
ANR	145295	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	581:1:17012:17039	145267	3	True				
ANR	145296	CallExpression	"smart_str_appendc ( str , ' ' )"		145267	0					
ANR	145297	Callee	smart_str_appendc		145267	0					
ANR	145298	Identifier	smart_str_appendc		145267	0					
ANR	145299	ArgumentList	str		145267	1					
ANR	145300	Argument	str		145267	0					
ANR	145301	Identifier	str		145267	0					
ANR	145302	Argument	' '		145267	1					
ANR	145303	PrimaryExpression	' '		145267	0					
ANR	145304	ExpressionStatement	"file = zend_hash_str_find ( ht , ""file"" , sizeof ( ""file"" ) - 1 )"	583:1:17043:17098	145267	4	True				
ANR	145305	AssignmentExpression	"file = zend_hash_str_find ( ht , ""file"" , sizeof ( ""file"" ) - 1 )"		145267	0		=			
ANR	145306	Identifier	file		145267	0					
ANR	145307	CallExpression	"zend_hash_str_find ( ht , ""file"" , sizeof ( ""file"" ) - 1 )"		145267	1					
ANR	145308	Callee	zend_hash_str_find		145267	0					
ANR	145309	Identifier	zend_hash_str_find		145267	0					
ANR	145310	ArgumentList	ht		145267	1					
ANR	145311	Argument	ht		145267	0					
ANR	145312	Identifier	ht		145267	0					
ANR	145313	Argument	"""file"""		145267	1					
ANR	145314	PrimaryExpression	"""file"""		145267	0					
ANR	145315	Argument	"sizeof ( ""file"" ) - 1"		145267	2					
ANR	145316	AdditiveExpression	"sizeof ( ""file"" ) - 1"		145267	0		-			
ANR	145317	SizeofExpression	"sizeof ( ""file"" )"		145267	0					
ANR	145318	Sizeof	sizeof		145267	0					
ANR	145319	PrimaryExpression	"""file"""		145267	1					
ANR	145320	PrimaryExpression	1		145267	1					
ANR	145321	IfStatement	if ( file )		145267	5					
ANR	145322	Condition	file	584:5:17105:17108	145267	0	True				
ANR	145323	Identifier	file		145267	0					
ANR	145324	CompoundStatement		9:11:185:185	145267	1					
ANR	145325	IfStatement	if ( Z_TYPE_P ( file ) != IS_STRING )		145267	0					
ANR	145326	Condition	Z_TYPE_P ( file ) != IS_STRING	585:6:17119:17145	145267	0	True				
ANR	145327	EqualityExpression	Z_TYPE_P ( file ) != IS_STRING		145267	0		!=			
ANR	145328	CallExpression	Z_TYPE_P ( file )		145267	0					
ANR	145329	Callee	Z_TYPE_P		145267	0					
ANR	145330	Identifier	Z_TYPE_P		145267	0					
ANR	145331	ArgumentList	file		145267	1					
ANR	145332	Argument	file		145267	0					
ANR	145333	Identifier	file		145267	0					
ANR	145334	Identifier	IS_STRING		145267	1					
ANR	145335	CompoundStatement		10:35:222:222	145267	1					
ANR	145336	ExpressionStatement	"zend_error ( E_WARNING , ""Function name is no string"" )"	586:3:17153:17204	145267	0	True				
ANR	145337	CallExpression	"zend_error ( E_WARNING , ""Function name is no string"" )"		145267	0					
ANR	145338	Callee	zend_error		145267	0					
ANR	145339	Identifier	zend_error		145267	0					
ANR	145340	ArgumentList	E_WARNING		145267	1					
ANR	145341	Argument	E_WARNING		145267	0					
ANR	145342	Identifier	E_WARNING		145267	0					
ANR	145343	Argument	"""Function name is no string"""		145267	1					
ANR	145344	PrimaryExpression	"""Function name is no string"""		145267	0					
ANR	145345	ExpressionStatement	"smart_str_appends ( str , ""[unknown function]"" )"	587:3:17209:17253	145267	1	True				
ANR	145346	CallExpression	"smart_str_appends ( str , ""[unknown function]"" )"		145267	0					
ANR	145347	Callee	smart_str_appends		145267	0					
ANR	145348	Identifier	smart_str_appends		145267	0					
ANR	145349	ArgumentList	str		145267	1					
ANR	145350	Argument	str		145267	0					
ANR	145351	Identifier	str		145267	0					
ANR	145352	Argument	"""[unknown function]"""		145267	1					
ANR	145353	PrimaryExpression	"""[unknown function]"""		145267	0					
ANR	145354	ElseStatement	else		145267	0					
ANR	145355	CompoundStatement		14:3:342:356	145267	0					
ANR	145356	IdentifierDeclStatement	zend_long line ;	589:3:17268:17282	145267	0	True				
ANR	145357	IdentifierDecl	line		145267	0					
ANR	145358	IdentifierDeclType	zend_long		145267	0					
ANR	145359	Identifier	line		145267	1					
ANR	145360	ExpressionStatement	"tmp = zend_hash_str_find ( ht , ""line"" , sizeof ( ""line"" ) - 1 )"	590:3:17287:17341	145267	1	True				
ANR	145361	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""line"" , sizeof ( ""line"" ) - 1 )"		145267	0		=			
ANR	145362	Identifier	tmp		145267	0					
ANR	145363	CallExpression	"zend_hash_str_find ( ht , ""line"" , sizeof ( ""line"" ) - 1 )"		145267	1					
ANR	145364	Callee	zend_hash_str_find		145267	0					
ANR	145365	Identifier	zend_hash_str_find		145267	0					
ANR	145366	ArgumentList	ht		145267	1					
ANR	145367	Argument	ht		145267	0					
ANR	145368	Identifier	ht		145267	0					
ANR	145369	Argument	"""line"""		145267	1					
ANR	145370	PrimaryExpression	"""line"""		145267	0					
ANR	145371	Argument	"sizeof ( ""line"" ) - 1"		145267	2					
ANR	145372	AdditiveExpression	"sizeof ( ""line"" ) - 1"		145267	0		-			
ANR	145373	SizeofExpression	"sizeof ( ""line"" )"		145267	0					
ANR	145374	Sizeof	sizeof		145267	0					
ANR	145375	PrimaryExpression	"""line"""		145267	1					
ANR	145376	PrimaryExpression	1		145267	1					
ANR	145377	IfStatement	if ( tmp )		145267	2					
ANR	145378	Condition	tmp	591:7:17350:17352	145267	0	True				
ANR	145379	Identifier	tmp		145267	0					
ANR	145380	CompoundStatement		16:12:429:429	145267	1					
ANR	145381	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_LONG )		145267	0					
ANR	145382	Condition	Z_TYPE_P ( tmp ) == IS_LONG	592:8:17365:17388	145267	0	True				
ANR	145383	EqualityExpression	Z_TYPE_P ( tmp ) == IS_LONG		145267	0		==			
ANR	145384	CallExpression	Z_TYPE_P ( tmp )		145267	0					
ANR	145385	Callee	Z_TYPE_P		145267	0					
ANR	145386	Identifier	Z_TYPE_P		145267	0					
ANR	145387	ArgumentList	tmp		145267	1					
ANR	145388	Argument	tmp		145267	0					
ANR	145389	Identifier	tmp		145267	0					
ANR	145390	Identifier	IS_LONG		145267	1					
ANR	145391	CompoundStatement		17:34:465:465	145267	1					
ANR	145392	ExpressionStatement	line = Z_LVAL_P ( tmp )	593:5:17398:17418	145267	0	True				
ANR	145393	AssignmentExpression	line = Z_LVAL_P ( tmp )		145267	0		=			
ANR	145394	Identifier	line		145267	0					
ANR	145395	CallExpression	Z_LVAL_P ( tmp )		145267	1					
ANR	145396	Callee	Z_LVAL_P		145267	0					
ANR	145397	Identifier	Z_LVAL_P		145267	0					
ANR	145398	ArgumentList	tmp		145267	1					
ANR	145399	Argument	tmp		145267	0					
ANR	145400	Identifier	tmp		145267	0					
ANR	145401	ElseStatement	else		145267	0					
ANR	145402	CompoundStatement		19:11:505:505	145267	0					
ANR	145403	ExpressionStatement	"zend_error ( E_WARNING , ""Line is no long"" )"	595:5:17438:17478	145267	0	True				
ANR	145404	CallExpression	"zend_error ( E_WARNING , ""Line is no long"" )"		145267	0					
ANR	145405	Callee	zend_error		145267	0					
ANR	145406	Identifier	zend_error		145267	0					
ANR	145407	ArgumentList	E_WARNING		145267	1					
ANR	145408	Argument	E_WARNING		145267	0					
ANR	145409	Identifier	E_WARNING		145267	0					
ANR	145410	Argument	"""Line is no long"""		145267	1					
ANR	145411	PrimaryExpression	"""Line is no long"""		145267	0					
ANR	145412	ExpressionStatement	line = 0	596:5:17485:17493	145267	1	True				
ANR	145413	AssignmentExpression	line = 0		145267	0		=			
ANR	145414	Identifier	line		145267	0					
ANR	145415	PrimaryExpression	0		145267	1					
ANR	145416	ElseStatement	else		145267	0					
ANR	145417	CompoundStatement		23:10:585:585	145267	0					
ANR	145418	ExpressionStatement	line = 0	599:4:17517:17525	145267	0	True				
ANR	145419	AssignmentExpression	line = 0		145267	0		=			
ANR	145420	Identifier	line		145267	0					
ANR	145421	PrimaryExpression	0		145267	1					
ANR	145422	ExpressionStatement	"smart_str_append ( str , Z_STR_P ( file ) )"	601:3:17535:17571	145267	3	True				
ANR	145423	CallExpression	"smart_str_append ( str , Z_STR_P ( file ) )"		145267	0					
ANR	145424	Callee	smart_str_append		145267	0					
ANR	145425	Identifier	smart_str_append		145267	0					
ANR	145426	ArgumentList	str		145267	1					
ANR	145427	Argument	str		145267	0					
ANR	145428	Identifier	str		145267	0					
ANR	145429	Argument	Z_STR_P ( file )		145267	1					
ANR	145430	CallExpression	Z_STR_P ( file )		145267	0					
ANR	145431	Callee	Z_STR_P		145267	0					
ANR	145432	Identifier	Z_STR_P		145267	0					
ANR	145433	ArgumentList	file		145267	1					
ANR	145434	Argument	file		145267	0					
ANR	145435	Identifier	file		145267	0					
ANR	145436	ExpressionStatement	"smart_str_appendc ( str , '(' )"	602:3:17576:17603	145267	4	True				
ANR	145437	CallExpression	"smart_str_appendc ( str , '(' )"		145267	0					
ANR	145438	Callee	smart_str_appendc		145267	0					
ANR	145439	Identifier	smart_str_appendc		145267	0					
ANR	145440	ArgumentList	str		145267	1					
ANR	145441	Argument	str		145267	0					
ANR	145442	Identifier	str		145267	0					
ANR	145443	Argument	'('		145267	1					
ANR	145444	PrimaryExpression	'('		145267	0					
ANR	145445	ExpressionStatement	"smart_str_append_long ( str , line )"	603:3:17608:17640	145267	5	True				
ANR	145446	CallExpression	"smart_str_append_long ( str , line )"		145267	0					
ANR	145447	Callee	smart_str_append_long		145267	0					
ANR	145448	Identifier	smart_str_append_long		145267	0					
ANR	145449	ArgumentList	str		145267	1					
ANR	145450	Argument	str		145267	0					
ANR	145451	Identifier	str		145267	0					
ANR	145452	Argument	line		145267	1					
ANR	145453	Identifier	line		145267	0					
ANR	145454	ExpressionStatement	"smart_str_appends ( str , ""): "" )"	604:3:17645:17674	145267	6	True				
ANR	145455	CallExpression	"smart_str_appends ( str , ""): "" )"		145267	0					
ANR	145456	Callee	smart_str_appends		145267	0					
ANR	145457	Identifier	smart_str_appends		145267	0					
ANR	145458	ArgumentList	str		145267	1					
ANR	145459	Argument	str		145267	0					
ANR	145460	Identifier	str		145267	0					
ANR	145461	Argument	"""): """		145267	1					
ANR	145462	PrimaryExpression	"""): """		145267	0					
ANR	145463	ElseStatement	else		145267	0					
ANR	145464	CompoundStatement		31:8:762:762	145267	0					
ANR	145465	ExpressionStatement	"smart_str_appends ( str , ""[internal function]: "" )"	607:2:17692:17739	145267	0	True				
ANR	145466	CallExpression	"smart_str_appends ( str , ""[internal function]: "" )"		145267	0					
ANR	145467	Callee	smart_str_appends		145267	0					
ANR	145468	Identifier	smart_str_appends		145267	0					
ANR	145469	ArgumentList	str		145267	1					
ANR	145470	Argument	str		145267	0					
ANR	145471	Identifier	str		145267	0					
ANR	145472	Argument	"""[internal function]: """		145267	1					
ANR	145473	PrimaryExpression	"""[internal function]: """		145267	0					
ANR	145474	ExpressionStatement	"TRACE_APPEND_KEY ( ""class"" )"	609:1:17745:17770	145267	6	True				
ANR	145475	CallExpression	"TRACE_APPEND_KEY ( ""class"" )"		145267	0					
ANR	145476	Callee	TRACE_APPEND_KEY		145267	0					
ANR	145477	Identifier	TRACE_APPEND_KEY		145267	0					
ANR	145478	ArgumentList	"""class"""		145267	1					
ANR	145479	Argument	"""class"""		145267	0					
ANR	145480	PrimaryExpression	"""class"""		145267	0					
ANR	145481	ExpressionStatement	"TRACE_APPEND_KEY ( ""type"" )"	610:1:17773:17797	145267	7	True				
ANR	145482	CallExpression	"TRACE_APPEND_KEY ( ""type"" )"		145267	0					
ANR	145483	Callee	TRACE_APPEND_KEY		145267	0					
ANR	145484	Identifier	TRACE_APPEND_KEY		145267	0					
ANR	145485	ArgumentList	"""type"""		145267	1					
ANR	145486	Argument	"""type"""		145267	0					
ANR	145487	PrimaryExpression	"""type"""		145267	0					
ANR	145488	ExpressionStatement	"TRACE_APPEND_KEY ( ""function"" )"	611:1:17800:17828	145267	8	True				
ANR	145489	CallExpression	"TRACE_APPEND_KEY ( ""function"" )"		145267	0					
ANR	145490	Callee	TRACE_APPEND_KEY		145267	0					
ANR	145491	Identifier	TRACE_APPEND_KEY		145267	0					
ANR	145492	ArgumentList	"""function"""		145267	1					
ANR	145493	Argument	"""function"""		145267	0					
ANR	145494	PrimaryExpression	"""function"""		145267	0					
ANR	145495	ExpressionStatement	"smart_str_appendc ( str , '(' )"	612:1:17831:17858	145267	9	True				
ANR	145496	CallExpression	"smart_str_appendc ( str , '(' )"		145267	0					
ANR	145497	Callee	smart_str_appendc		145267	0					
ANR	145498	Identifier	smart_str_appendc		145267	0					
ANR	145499	ArgumentList	str		145267	1					
ANR	145500	Argument	str		145267	0					
ANR	145501	Identifier	str		145267	0					
ANR	145502	Argument	'('		145267	1					
ANR	145503	PrimaryExpression	'('		145267	0					
ANR	145504	ExpressionStatement	"tmp = zend_hash_str_find ( ht , ""args"" , sizeof ( ""args"" ) - 1 )"	613:1:17861:17915	145267	10	True				
ANR	145505	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""args"" , sizeof ( ""args"" ) - 1 )"		145267	0		=			
ANR	145506	Identifier	tmp		145267	0					
ANR	145507	CallExpression	"zend_hash_str_find ( ht , ""args"" , sizeof ( ""args"" ) - 1 )"		145267	1					
ANR	145508	Callee	zend_hash_str_find		145267	0					
ANR	145509	Identifier	zend_hash_str_find		145267	0					
ANR	145510	ArgumentList	ht		145267	1					
ANR	145511	Argument	ht		145267	0					
ANR	145512	Identifier	ht		145267	0					
ANR	145513	Argument	"""args"""		145267	1					
ANR	145514	PrimaryExpression	"""args"""		145267	0					
ANR	145515	Argument	"sizeof ( ""args"" ) - 1"		145267	2					
ANR	145516	AdditiveExpression	"sizeof ( ""args"" ) - 1"		145267	0		-			
ANR	145517	SizeofExpression	"sizeof ( ""args"" )"		145267	0					
ANR	145518	Sizeof	sizeof		145267	0					
ANR	145519	PrimaryExpression	"""args"""		145267	1					
ANR	145520	PrimaryExpression	1		145267	1					
ANR	145521	IfStatement	if ( tmp )		145267	11					
ANR	145522	Condition	tmp	614:5:17922:17924	145267	0	True				
ANR	145523	Identifier	tmp		145267	0					
ANR	145524	CompoundStatement		39:10:1001:1001	145267	1					
ANR	145525	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_ARRAY )		145267	0					
ANR	145526	Condition	Z_TYPE_P ( tmp ) == IS_ARRAY	615:6:17935:17959	145267	0	True				
ANR	145527	EqualityExpression	Z_TYPE_P ( tmp ) == IS_ARRAY		145267	0		==			
ANR	145528	CallExpression	Z_TYPE_P ( tmp )		145267	0					
ANR	145529	Callee	Z_TYPE_P		145267	0					
ANR	145530	Identifier	Z_TYPE_P		145267	0					
ANR	145531	ArgumentList	tmp		145267	1					
ANR	145532	Argument	tmp		145267	0					
ANR	145533	Identifier	tmp		145267	0					
ANR	145534	Identifier	IS_ARRAY		145267	1					
ANR	145535	CompoundStatement		42:3:1080:1089	145267	1					
ANR	145536	IdentifierDeclStatement	size_t last_len = ZSTR_LEN ( str -> s ) ;	616:3:17967:18001	145267	0	True				
ANR	145537	IdentifierDecl	last_len = ZSTR_LEN ( str -> s )		145267	0					
ANR	145538	IdentifierDeclType	size_t		145267	0					
ANR	145539	Identifier	last_len		145267	1					
ANR	145540	AssignmentExpression	last_len = ZSTR_LEN ( str -> s )		145267	2		=			
ANR	145541	Identifier	last_len		145267	0					
ANR	145542	CallExpression	ZSTR_LEN ( str -> s )		145267	1					
ANR	145543	Callee	ZSTR_LEN		145267	0					
ANR	145544	Identifier	ZSTR_LEN		145267	0					
ANR	145545	ArgumentList	str -> s		145267	1					
ANR	145546	Argument	str -> s		145267	0					
ANR	145547	PtrMemberAccess	str -> s		145267	0					
ANR	145548	Identifier	str		145267	0					
ANR	145549	Identifier	s		145267	1					
ANR	145550	IdentifierDeclStatement	zval * arg ;	617:3:18006:18015	145267	1	True				
ANR	145551	IdentifierDecl	* arg		145267	0					
ANR	145552	IdentifierDeclType	zval *		145267	0					
ANR	145553	Identifier	arg		145267	1					
ANR	145554	Statement	ZEND_HASH_FOREACH_VAL	619:3:18021:18041	145267	2	True				
ANR	145555	Statement	(	619:24:18042:18042	145267	3	True				
ANR	145556	Statement	Z_ARRVAL_P	619:25:18043:18052	145267	4	True				
ANR	145557	Statement	(	619:35:18053:18053	145267	5	True				
ANR	145558	Statement	tmp	619:36:18054:18056	145267	6	True				
ANR	145559	Statement	)	619:39:18057:18057	145267	7	True				
ANR	145560	Statement	","	619:40:18058:18058	145267	8	True				
ANR	145561	Statement	arg	619:42:18060:18062	145267	9	True				
ANR	145562	Statement	)	619:45:18063:18063	145267	10	True				
ANR	145563	CompoundStatement		44:47:1139:1139	145267	11					
ANR	145564	ExpressionStatement	"_build_trace_args ( arg , str )"	620:4:18071:18098	145267	0	True				
ANR	145565	CallExpression	"_build_trace_args ( arg , str )"		145267	0					
ANR	145566	Callee	_build_trace_args		145267	0					
ANR	145567	Identifier	_build_trace_args		145267	0					
ANR	145568	ArgumentList	arg		145267	1					
ANR	145569	Argument	arg		145267	0					
ANR	145570	Identifier	arg		145267	0					
ANR	145571	Argument	str		145267	1					
ANR	145572	Identifier	str		145267	0					
ANR	145573	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	621:5:18105:18128	145267	12	True				
ANR	145574	CallExpression	ZEND_HASH_FOREACH_END ( )		145267	0					
ANR	145575	Callee	ZEND_HASH_FOREACH_END		145267	0					
ANR	145576	Identifier	ZEND_HASH_FOREACH_END		145267	0					
ANR	145577	ArgumentList			145267	1					
ANR	145578	IfStatement	if ( last_len != ZSTR_LEN ( str -> s ) )		145267	13					
ANR	145579	Condition	last_len != ZSTR_LEN ( str -> s )	623:7:18138:18165	145267	0	True				
ANR	145580	EqualityExpression	last_len != ZSTR_LEN ( str -> s )		145267	0		!=			
ANR	145581	Identifier	last_len		145267	0					
ANR	145582	CallExpression	ZSTR_LEN ( str -> s )		145267	1					
ANR	145583	Callee	ZSTR_LEN		145267	0					
ANR	145584	Identifier	ZSTR_LEN		145267	0					
ANR	145585	ArgumentList	str -> s		145267	1					
ANR	145586	Argument	str -> s		145267	0					
ANR	145587	PtrMemberAccess	str -> s		145267	0					
ANR	145588	Identifier	str		145267	0					
ANR	145589	Identifier	s		145267	1					
ANR	145590	CompoundStatement		48:37:1242:1242	145267	1					
ANR	145591	ExpressionStatement	ZSTR_LEN ( str -> s ) -= 2	624:4:18174:18195	145267	0	True				
ANR	145592	AssignmentExpression	ZSTR_LEN ( str -> s ) -= 2		145267	0		-=			
ANR	145593	CallExpression	ZSTR_LEN ( str -> s )		145267	0					
ANR	145594	Callee	ZSTR_LEN		145267	0					
ANR	145595	Identifier	ZSTR_LEN		145267	0					
ANR	145596	ArgumentList	str -> s		145267	1					
ANR	145597	Argument	str -> s		145267	0					
ANR	145598	PtrMemberAccess	str -> s		145267	0					
ANR	145599	Identifier	str		145267	0					
ANR	145600	Identifier	s		145267	1					
ANR	145601	PrimaryExpression	2		145267	1					
ANR	145602	ElseStatement	else		145267	0					
ANR	145603	CompoundStatement		51:9:1308:1308	145267	0					
ANR	145604	ExpressionStatement	"zend_error ( E_WARNING , ""args element is no array"" )"	627:3:18239:18288	145267	0	True				
ANR	145605	CallExpression	"zend_error ( E_WARNING , ""args element is no array"" )"		145267	0					
ANR	145606	Callee	zend_error		145267	0					
ANR	145607	Identifier	zend_error		145267	0					
ANR	145608	ArgumentList	E_WARNING		145267	1					
ANR	145609	Argument	E_WARNING		145267	0					
ANR	145610	Identifier	E_WARNING		145267	0					
ANR	145611	Argument	"""args element is no array"""		145267	1					
ANR	145612	PrimaryExpression	"""args element is no array"""		145267	0					
ANR	145613	ExpressionStatement	"smart_str_appends ( str , "")\\n"" )"	630:1:18298:18327	145267	12	True				
ANR	145614	CallExpression	"smart_str_appends ( str , "")\\n"" )"		145267	0					
ANR	145615	Callee	smart_str_appends		145267	0					
ANR	145616	Identifier	smart_str_appends		145267	0					
ANR	145617	ArgumentList	str		145267	1					
ANR	145618	Argument	str		145267	0					
ANR	145619	Identifier	str		145267	0					
ANR	145620	Argument	""")\\n"""		145267	1					
ANR	145621	PrimaryExpression	""")\\n"""		145267	0					
ANR	145622	ReturnType	static void		145267	1					
ANR	145623	Identifier	_build_trace_string		145267	2					
ANR	145624	ParameterList	"smart_str * str , HashTable * ht , uint32_t num"		145267	3					
ANR	145625	Parameter	smart_str * str	575:32:16870:16883	145267	0	True				
ANR	145626	ParameterType	smart_str *		145267	0					
ANR	145627	Identifier	str		145267	1					
ANR	145628	Parameter	HashTable * ht	575:48:16886:16898	145267	1	True				
ANR	145629	ParameterType	HashTable *		145267	0					
ANR	145630	Identifier	ht		145267	1					
ANR	145631	Parameter	uint32_t num	575:63:16901:16912	145267	2	True				
ANR	145632	ParameterType	uint32_t		145267	0					
ANR	145633	Identifier	num		145267	1					
ANR	145634	CFGEntryNode	ENTRY		145267		True				
ANR	145635	CFGExitNode	EXIT		145267		True				
ANR	145636	Symbol	last_len		145267						
ANR	145637	Symbol	line		145267						
ANR	145638	Symbol	num		145267						
ANR	145639	Symbol	str -> s		145267						
ANR	145640	Symbol	ht		145267						
ANR	145641	Symbol	Z_TYPE_P		145267						
ANR	145642	Symbol	Z_LVAL_P		145267						
ANR	145643	Symbol	str		145267						
ANR	145644	Symbol	E_WARNING		145267						
ANR	145645	Symbol	file		145267						
ANR	145646	Symbol	zend_hash_str_find		145267						
ANR	145647	Symbol	IS_ARRAY		145267						
ANR	145648	Symbol	tmp		145267						
ANR	145649	Symbol	IS_LONG		145267						
ANR	145650	Symbol	arg		145267						
ANR	145651	Symbol	ZSTR_LEN		145267						
ANR	145652	Symbol	IS_STRING		145267						
ANR	145653	Symbol	Z_STR_P		145267						
ANR	145654	Symbol	* str		145267						
ANR	145655	DeclStmt									
ANR	145656	Decl							zval	zval *	trace
ANR	145657	Decl							zval	zval *	frame
ANR	145658	Decl							zval	zval	rv
ANR	145659	DeclStmt									
ANR	145660	Decl							zend_ulong	zend_ulong	index
ANR	145661	DeclStmt									
ANR	145662	Decl							zval	zval *	object
ANR	145663	DeclStmt									
ANR	145664	Decl							zend_class_entry	zend_class_entry *	base_ce
ANR	145665	DeclStmt									
ANR	145666	Decl							smart_str	smart_str	str
ANR	145667	DeclStmt									
ANR	145668	Decl							uint32_t	uint32_t	num
ANR	145669	DeclStmt									
ANR	145670	Decl							zval	zval	rv
ANR	145671	Function	zend_spprintf	683:0:19548:19771							
ANR	145672	FunctionDef	"zend_spprintf (char * * message , size_t max_len , const char * format)"		145671	0					
ANR	145673	CompoundStatement		684:0:19636:19771	145671	0					
ANR	145674	IdentifierDeclStatement	va_list arg ;	685:1:19639:19650	145671	0	True				
ANR	145675	IdentifierDecl	arg		145671	0					
ANR	145676	IdentifierDeclType	va_list		145671	0					
ANR	145677	Identifier	arg		145671	1					
ANR	145678	IdentifierDeclStatement	size_t len ;	686:1:19653:19663	145671	1	True				
ANR	145679	IdentifierDecl	len		145671	0					
ANR	145680	IdentifierDeclType	size_t		145671	0					
ANR	145681	Identifier	len		145671	1					
ANR	145682	ExpressionStatement	"va_start ( arg , format )"	688:1:19667:19688	145671	2	True				
ANR	145683	CallExpression	"va_start ( arg , format )"		145671	0					
ANR	145684	Callee	va_start		145671	0					
ANR	145685	Identifier	va_start		145671	0					
ANR	145686	ArgumentList	arg		145671	1					
ANR	145687	Argument	arg		145671	0					
ANR	145688	Identifier	arg		145671	0					
ANR	145689	Argument	format		145671	1					
ANR	145690	Identifier	format		145671	0					
ANR	145691	ExpressionStatement	"len = zend_vspprintf ( message , max_len , format , arg )"	689:1:19691:19742	145671	3	True				
ANR	145692	AssignmentExpression	"len = zend_vspprintf ( message , max_len , format , arg )"		145671	0		=			
ANR	145693	Identifier	len		145671	0					
ANR	145694	CallExpression	"zend_vspprintf ( message , max_len , format , arg )"		145671	1					
ANR	145695	Callee	zend_vspprintf		145671	0					
ANR	145696	Identifier	zend_vspprintf		145671	0					
ANR	145697	ArgumentList	message		145671	1					
ANR	145698	Argument	message		145671	0					
ANR	145699	Identifier	message		145671	0					
ANR	145700	Argument	max_len		145671	1					
ANR	145701	Identifier	max_len		145671	0					
ANR	145702	Argument	format		145671	2					
ANR	145703	Identifier	format		145671	0					
ANR	145704	Argument	arg		145671	3					
ANR	145705	Identifier	arg		145671	0					
ANR	145706	ExpressionStatement	va_end ( arg )	690:1:19745:19756	145671	4	True				
ANR	145707	CallExpression	va_end ( arg )		145671	0					
ANR	145708	Callee	va_end		145671	0					
ANR	145709	Identifier	va_end		145671	0					
ANR	145710	ArgumentList	arg		145671	1					
ANR	145711	Argument	arg		145671	0					
ANR	145712	Identifier	arg		145671	0					
ANR	145713	ReturnStatement	return len ;	691:1:19759:19769	145671	5	True				
ANR	145714	Identifier	len		145671	0					
ANR	145715	ReturnType	size_t		145671	1					
ANR	145716	Identifier	zend_spprintf		145671	2					
ANR	145717	ParameterList	"char * * message , size_t max_len , const char * format"		145671	3					
ANR	145718	Parameter	char * * message	683:21:19569:19582	145671	0	True				
ANR	145719	ParameterType	char * *		145671	0					
ANR	145720	Identifier	message		145671	1					
ANR	145721	Parameter	size_t max_len	683:37:19585:19598	145671	1	True				
ANR	145722	ParameterType	size_t		145671	0					
ANR	145723	Identifier	max_len		145671	1					
ANR	145724	Parameter	const char * format	683:53:19601:19618	145671	2	True				
ANR	145725	ParameterType	const char *		145671	0					
ANR	145726	Identifier	format		145671	1					
ANR	145727	CFGEntryNode	ENTRY		145671		True				
ANR	145728	CFGExitNode	EXIT		145671		True				
ANR	145729	Symbol	len		145671						
ANR	145730	Symbol	arg		145671						
ANR	145731	Symbol	format		145671						
ANR	145732	Symbol	message		145671						
ANR	145733	Symbol	zend_vspprintf		145671						
ANR	145734	Symbol	max_len		145671						
ANR	145735	Function	zend_strpprintf	695:0:19784:19998							
ANR	145736	FunctionDef	"zend_strpprintf (size_t max_len , const char * format)"		145735	0					
ANR	145737	CompoundStatement		696:0:19864:19998	145735	0					
ANR	145738	IdentifierDeclStatement	va_list arg ;	697:1:19867:19878	145735	0	True				
ANR	145739	IdentifierDecl	arg		145735	0					
ANR	145740	IdentifierDeclType	va_list		145735	0					
ANR	145741	Identifier	arg		145735	1					
ANR	145742	IdentifierDeclStatement	zend_string * str ;	698:1:19881:19897	145735	1	True				
ANR	145743	IdentifierDecl	* str		145735	0					
ANR	145744	IdentifierDeclType	zend_string *		145735	0					
ANR	145745	Identifier	str		145735	1					
ANR	145746	ExpressionStatement	"va_start ( arg , format )"	700:1:19901:19922	145735	2	True				
ANR	145747	CallExpression	"va_start ( arg , format )"		145735	0					
ANR	145748	Callee	va_start		145735	0					
ANR	145749	Identifier	va_start		145735	0					
ANR	145750	ArgumentList	arg		145735	1					
ANR	145751	Argument	arg		145735	0					
ANR	145752	Identifier	arg		145735	0					
ANR	145753	Argument	format		145735	1					
ANR	145754	Identifier	format		145735	0					
ANR	145755	ExpressionStatement	"str = zend_vstrpprintf ( max_len , format , arg )"	701:1:19925:19969	145735	3	True				
ANR	145756	AssignmentExpression	"str = zend_vstrpprintf ( max_len , format , arg )"		145735	0		=			
ANR	145757	Identifier	str		145735	0					
ANR	145758	CallExpression	"zend_vstrpprintf ( max_len , format , arg )"		145735	1					
ANR	145759	Callee	zend_vstrpprintf		145735	0					
ANR	145760	Identifier	zend_vstrpprintf		145735	0					
ANR	145761	ArgumentList	max_len		145735	1					
ANR	145762	Argument	max_len		145735	0					
ANR	145763	Identifier	max_len		145735	0					
ANR	145764	Argument	format		145735	1					
ANR	145765	Identifier	format		145735	0					
ANR	145766	Argument	arg		145735	2					
ANR	145767	Identifier	arg		145735	0					
ANR	145768	ExpressionStatement	va_end ( arg )	702:1:19972:19983	145735	4	True				
ANR	145769	CallExpression	va_end ( arg )		145735	0					
ANR	145770	Callee	va_end		145735	0					
ANR	145771	Identifier	va_end		145735	0					
ANR	145772	ArgumentList	arg		145735	1					
ANR	145773	Argument	arg		145735	0					
ANR	145774	Identifier	arg		145735	0					
ANR	145775	ReturnStatement	return str ;	703:1:19986:19996	145735	5	True				
ANR	145776	Identifier	str		145735	0					
ANR	145777	ReturnType	zend_string *		145735	1					
ANR	145778	Identifier	zend_strpprintf		145735	2					
ANR	145779	ParameterList	"size_t max_len , const char * format"		145735	3					
ANR	145780	Parameter	size_t max_len	695:29:19813:19826	145735	0	True				
ANR	145781	ParameterType	size_t		145735	0					
ANR	145782	Identifier	max_len		145735	1					
ANR	145783	Parameter	const char * format	695:45:19829:19846	145735	1	True				
ANR	145784	ParameterType	const char *		145735	0					
ANR	145785	Identifier	format		145735	1					
ANR	145786	CFGEntryNode	ENTRY		145735		True				
ANR	145787	CFGExitNode	EXIT		145735		True				
ANR	145788	Symbol	str		145735						
ANR	145789	Symbol	arg		145735						
ANR	145790	Symbol	format		145735						
ANR	145791	Symbol	zend_vstrpprintf		145735						
ANR	145792	Symbol	max_len		145735						
ANR	145793	DeclStmt									
ANR	145794	Decl							zval	zval	trace
ANR	145795	Decl							zval	zval *	exception
ANR	145796	DeclStmt									
ANR	145797	Decl							zend_class_entry	zend_class_entry *	base_ce
ANR	145798	DeclStmt									
ANR	145799	Decl							zend_string	zend_string *	str
ANR	145800	DeclStmt									
ANR	145801	Decl							zend_fcall_info	zend_fcall_info	fci
ANR	145802	DeclStmt									
ANR	145803	Decl							zval	zval	fname
ANR	145804	Decl							zval	zval	rv
ANR	145805	DeclStmt									
ANR	145806	Decl							zend_string	zend_string *	prev_str
ANR	145807	DeclStmt									
ANR	145808	Decl							zend_string	zend_string *	message
ANR	145809	DeclStmt									
ANR	145810	Decl							zend_string	zend_string *	file
ANR	145811	DeclStmt									
ANR	145812	Decl							zend_long	zend_long	line
ANR	145813	DeclStmt									
ANR	145814	Decl							zend_string	zend_string *	real_message
ANR	145815	DeclStmt									
ANR	145816	Decl							const zend_function_entry	const zend_function_entry [ ]	zend_funcs_throwable
ANR	145817	DeclStmt									
ANR	145818	Decl							const zend_function_entry	const zend_function_entry [ ]	default_exception_functions
ANR	145819	DeclStmt									
ANR	145820	Decl							const zend_function_entry	const zend_function_entry [ ]	error_exception_functions
ANR	145821	Function	zend_register_default_exception	848:0:25246:28508							
ANR	145822	FunctionDef	zend_register_default_exception ()		145821	0					
ANR	145823	CompoundStatement		849:0:25299:28508	145821	0					
ANR	145824	IdentifierDeclStatement	zend_class_entry ce ;	850:1:25302:25321	145821	0	True				
ANR	145825	IdentifierDecl	ce		145821	0					
ANR	145826	IdentifierDeclType	zend_class_entry		145821	0					
ANR	145827	Identifier	ce		145821	1					
ANR	145828	ExpressionStatement	"REGISTER_MAGIC_INTERFACE ( throwable , Throwable )"	852:1:25325:25371	145821	1	True				
ANR	145829	CallExpression	"REGISTER_MAGIC_INTERFACE ( throwable , Throwable )"		145821	0					
ANR	145830	Callee	REGISTER_MAGIC_INTERFACE		145821	0					
ANR	145831	Identifier	REGISTER_MAGIC_INTERFACE		145821	0					
ANR	145832	ArgumentList	throwable		145821	1					
ANR	145833	Argument	throwable		145821	0					
ANR	145834	Identifier	throwable		145821	0					
ANR	145835	Argument	Throwable		145821	1					
ANR	145836	Identifier	Throwable		145821	0					
ANR	145837	ExpressionStatement	"memcpy ( & default_exception_handlers , zend_get_std_object_handlers ( ) , sizeof ( zend_object_handlers ) )"	854:1:25375:25472	145821	2	True				
ANR	145838	CallExpression	"memcpy ( & default_exception_handlers , zend_get_std_object_handlers ( ) , sizeof ( zend_object_handlers ) )"		145821	0					
ANR	145839	Callee	memcpy		145821	0					
ANR	145840	Identifier	memcpy		145821	0					
ANR	145841	ArgumentList	& default_exception_handlers		145821	1					
ANR	145842	Argument	& default_exception_handlers		145821	0					
ANR	145843	UnaryOperationExpression	& default_exception_handlers		145821	0					
ANR	145844	UnaryOperator	&		145821	0					
ANR	145845	Identifier	default_exception_handlers		145821	1					
ANR	145846	Argument	zend_get_std_object_handlers ( )		145821	1					
ANR	145847	CallExpression	zend_get_std_object_handlers ( )		145821	0					
ANR	145848	Callee	zend_get_std_object_handlers		145821	0					
ANR	145849	Identifier	zend_get_std_object_handlers		145821	0					
ANR	145850	ArgumentList			145821	1					
ANR	145851	Argument	sizeof ( zend_object_handlers )		145821	2					
ANR	145852	SizeofExpression	sizeof ( zend_object_handlers )		145821	0					
ANR	145853	Sizeof	sizeof		145821	0					
ANR	145854	SizeofOperand	zend_object_handlers		145821	1					
ANR	145855	ExpressionStatement	default_exception_handlers . clone_obj = NULL	855:1:25475:25518	145821	3	True				
ANR	145856	AssignmentExpression	default_exception_handlers . clone_obj = NULL		145821	0		=			
ANR	145857	MemberAccess	default_exception_handlers . clone_obj		145821	0					
ANR	145858	Identifier	default_exception_handlers		145821	0					
ANR	145859	Identifier	clone_obj		145821	1					
ANR	145860	Identifier	NULL		145821	1					
ANR	145861	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""Exception"" , default_exception_functions )"	857:1:25522:25584	145821	4	True				
ANR	145862	CallExpression	"INIT_CLASS_ENTRY ( ce , ""Exception"" , default_exception_functions )"		145821	0					
ANR	145863	Callee	INIT_CLASS_ENTRY		145821	0					
ANR	145864	Identifier	INIT_CLASS_ENTRY		145821	0					
ANR	145865	ArgumentList	ce		145821	1					
ANR	145866	Argument	ce		145821	0					
ANR	145867	Identifier	ce		145821	0					
ANR	145868	Argument	"""Exception"""		145821	1					
ANR	145869	PrimaryExpression	"""Exception"""		145821	0					
ANR	145870	Argument	default_exception_functions		145821	2					
ANR	145871	Identifier	default_exception_functions		145821	0					
ANR	145872	ExpressionStatement	"zend_ce_exception = zend_register_internal_class_ex ( & ce , NULL )"	858:1:25587:25649	145821	5	True				
ANR	145873	AssignmentExpression	"zend_ce_exception = zend_register_internal_class_ex ( & ce , NULL )"		145821	0		=			
ANR	145874	Identifier	zend_ce_exception		145821	0					
ANR	145875	CallExpression	"zend_register_internal_class_ex ( & ce , NULL )"		145821	1					
ANR	145876	Callee	zend_register_internal_class_ex		145821	0					
ANR	145877	Identifier	zend_register_internal_class_ex		145821	0					
ANR	145878	ArgumentList	& ce		145821	1					
ANR	145879	Argument	& ce		145821	0					
ANR	145880	UnaryOperationExpression	& ce		145821	0					
ANR	145881	UnaryOperator	&		145821	0					
ANR	145882	Identifier	ce		145821	1					
ANR	145883	Argument	NULL		145821	1					
ANR	145884	Identifier	NULL		145821	0					
ANR	145885	ExpressionStatement	zend_ce_exception -> create_object = zend_default_exception_new	859:1:25652:25713	145821	6	True				
ANR	145886	AssignmentExpression	zend_ce_exception -> create_object = zend_default_exception_new		145821	0		=			
ANR	145887	PtrMemberAccess	zend_ce_exception -> create_object		145821	0					
ANR	145888	Identifier	zend_ce_exception		145821	0					
ANR	145889	Identifier	create_object		145821	1					
ANR	145890	Identifier	zend_default_exception_new		145821	1					
ANR	145891	ExpressionStatement	"zend_class_implements ( zend_ce_exception , 1 , zend_ce_throwable )"	860:1:25716:25778	145821	7	True				
ANR	145892	CallExpression	"zend_class_implements ( zend_ce_exception , 1 , zend_ce_throwable )"		145821	0					
ANR	145893	Callee	zend_class_implements		145821	0					
ANR	145894	Identifier	zend_class_implements		145821	0					
ANR	145895	ArgumentList	zend_ce_exception		145821	1					
ANR	145896	Argument	zend_ce_exception		145821	0					
ANR	145897	Identifier	zend_ce_exception		145821	0					
ANR	145898	Argument	1		145821	1					
ANR	145899	PrimaryExpression	1		145821	0					
ANR	145900	Argument	zend_ce_throwable		145821	2					
ANR	145901	Identifier	zend_ce_throwable		145821	0					
ANR	145902	ExpressionStatement	"zend_declare_property_string ( zend_ce_exception , ""message"" , sizeof ( ""message"" ) - 1 , """" , ZEND_ACC_PROTECTED )"	862:1:25782:25885	145821	8	True				
ANR	145903	CallExpression	"zend_declare_property_string ( zend_ce_exception , ""message"" , sizeof ( ""message"" ) - 1 , """" , ZEND_ACC_PROTECTED )"		145821	0					
ANR	145904	Callee	zend_declare_property_string		145821	0					
ANR	145905	Identifier	zend_declare_property_string		145821	0					
ANR	145906	ArgumentList	zend_ce_exception		145821	1					
ANR	145907	Argument	zend_ce_exception		145821	0					
ANR	145908	Identifier	zend_ce_exception		145821	0					
ANR	145909	Argument	"""message"""		145821	1					
ANR	145910	PrimaryExpression	"""message"""		145821	0					
ANR	145911	Argument	"sizeof ( ""message"" ) - 1"		145821	2					
ANR	145912	AdditiveExpression	"sizeof ( ""message"" ) - 1"		145821	0		-			
ANR	145913	SizeofExpression	"sizeof ( ""message"" )"		145821	0					
ANR	145914	Sizeof	sizeof		145821	0					
ANR	145915	PrimaryExpression	"""message"""		145821	1					
ANR	145916	PrimaryExpression	1		145821	1					
ANR	145917	Argument	""""""		145821	3					
ANR	145918	PrimaryExpression	""""""		145821	0					
ANR	145919	Argument	ZEND_ACC_PROTECTED		145821	4					
ANR	145920	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	145921	ExpressionStatement	"zend_declare_property_string ( zend_ce_exception , ""string"" , sizeof ( ""string"" ) - 1 , """" , ZEND_ACC_PRIVATE )"	863:1:25888:25987	145821	9	True				
ANR	145922	CallExpression	"zend_declare_property_string ( zend_ce_exception , ""string"" , sizeof ( ""string"" ) - 1 , """" , ZEND_ACC_PRIVATE )"		145821	0					
ANR	145923	Callee	zend_declare_property_string		145821	0					
ANR	145924	Identifier	zend_declare_property_string		145821	0					
ANR	145925	ArgumentList	zend_ce_exception		145821	1					
ANR	145926	Argument	zend_ce_exception		145821	0					
ANR	145927	Identifier	zend_ce_exception		145821	0					
ANR	145928	Argument	"""string"""		145821	1					
ANR	145929	PrimaryExpression	"""string"""		145821	0					
ANR	145930	Argument	"sizeof ( ""string"" ) - 1"		145821	2					
ANR	145931	AdditiveExpression	"sizeof ( ""string"" ) - 1"		145821	0		-			
ANR	145932	SizeofExpression	"sizeof ( ""string"" )"		145821	0					
ANR	145933	Sizeof	sizeof		145821	0					
ANR	145934	PrimaryExpression	"""string"""		145821	1					
ANR	145935	PrimaryExpression	1		145821	1					
ANR	145936	Argument	""""""		145821	3					
ANR	145937	PrimaryExpression	""""""		145821	0					
ANR	145938	Argument	ZEND_ACC_PRIVATE		145821	4					
ANR	145939	Identifier	ZEND_ACC_PRIVATE		145821	0					
ANR	145940	ExpressionStatement	"zend_declare_property_long ( zend_ce_exception , ""code"" , sizeof ( ""code"" ) - 1 , 0 , ZEND_ACC_PROTECTED )"	864:1:25990:26084	145821	10	True				
ANR	145941	CallExpression	"zend_declare_property_long ( zend_ce_exception , ""code"" , sizeof ( ""code"" ) - 1 , 0 , ZEND_ACC_PROTECTED )"		145821	0					
ANR	145942	Callee	zend_declare_property_long		145821	0					
ANR	145943	Identifier	zend_declare_property_long		145821	0					
ANR	145944	ArgumentList	zend_ce_exception		145821	1					
ANR	145945	Argument	zend_ce_exception		145821	0					
ANR	145946	Identifier	zend_ce_exception		145821	0					
ANR	145947	Argument	"""code"""		145821	1					
ANR	145948	PrimaryExpression	"""code"""		145821	0					
ANR	145949	Argument	"sizeof ( ""code"" ) - 1"		145821	2					
ANR	145950	AdditiveExpression	"sizeof ( ""code"" ) - 1"		145821	0		-			
ANR	145951	SizeofExpression	"sizeof ( ""code"" )"		145821	0					
ANR	145952	Sizeof	sizeof		145821	0					
ANR	145953	PrimaryExpression	"""code"""		145821	1					
ANR	145954	PrimaryExpression	1		145821	1					
ANR	145955	Argument	0		145821	3					
ANR	145956	PrimaryExpression	0		145821	0					
ANR	145957	Argument	ZEND_ACC_PROTECTED		145821	4					
ANR	145958	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	145959	ExpressionStatement	"zend_declare_property_null ( zend_ce_exception , ""file"" , sizeof ( ""file"" ) - 1 , ZEND_ACC_PROTECTED )"	865:1:26087:26178	145821	11	True				
ANR	145960	CallExpression	"zend_declare_property_null ( zend_ce_exception , ""file"" , sizeof ( ""file"" ) - 1 , ZEND_ACC_PROTECTED )"		145821	0					
ANR	145961	Callee	zend_declare_property_null		145821	0					
ANR	145962	Identifier	zend_declare_property_null		145821	0					
ANR	145963	ArgumentList	zend_ce_exception		145821	1					
ANR	145964	Argument	zend_ce_exception		145821	0					
ANR	145965	Identifier	zend_ce_exception		145821	0					
ANR	145966	Argument	"""file"""		145821	1					
ANR	145967	PrimaryExpression	"""file"""		145821	0					
ANR	145968	Argument	"sizeof ( ""file"" ) - 1"		145821	2					
ANR	145969	AdditiveExpression	"sizeof ( ""file"" ) - 1"		145821	0		-			
ANR	145970	SizeofExpression	"sizeof ( ""file"" )"		145821	0					
ANR	145971	Sizeof	sizeof		145821	0					
ANR	145972	PrimaryExpression	"""file"""		145821	1					
ANR	145973	PrimaryExpression	1		145821	1					
ANR	145974	Argument	ZEND_ACC_PROTECTED		145821	3					
ANR	145975	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	145976	ExpressionStatement	"zend_declare_property_null ( zend_ce_exception , ""line"" , sizeof ( ""line"" ) - 1 , ZEND_ACC_PROTECTED )"	866:1:26181:26272	145821	12	True				
ANR	145977	CallExpression	"zend_declare_property_null ( zend_ce_exception , ""line"" , sizeof ( ""line"" ) - 1 , ZEND_ACC_PROTECTED )"		145821	0					
ANR	145978	Callee	zend_declare_property_null		145821	0					
ANR	145979	Identifier	zend_declare_property_null		145821	0					
ANR	145980	ArgumentList	zend_ce_exception		145821	1					
ANR	145981	Argument	zend_ce_exception		145821	0					
ANR	145982	Identifier	zend_ce_exception		145821	0					
ANR	145983	Argument	"""line"""		145821	1					
ANR	145984	PrimaryExpression	"""line"""		145821	0					
ANR	145985	Argument	"sizeof ( ""line"" ) - 1"		145821	2					
ANR	145986	AdditiveExpression	"sizeof ( ""line"" ) - 1"		145821	0		-			
ANR	145987	SizeofExpression	"sizeof ( ""line"" )"		145821	0					
ANR	145988	Sizeof	sizeof		145821	0					
ANR	145989	PrimaryExpression	"""line"""		145821	1					
ANR	145990	PrimaryExpression	1		145821	1					
ANR	145991	Argument	ZEND_ACC_PROTECTED		145821	3					
ANR	145992	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	145993	ExpressionStatement	"zend_declare_property_null ( zend_ce_exception , ""trace"" , sizeof ( ""trace"" ) - 1 , ZEND_ACC_PRIVATE )"	867:1:26275:26366	145821	13	True				
ANR	145994	CallExpression	"zend_declare_property_null ( zend_ce_exception , ""trace"" , sizeof ( ""trace"" ) - 1 , ZEND_ACC_PRIVATE )"		145821	0					
ANR	145995	Callee	zend_declare_property_null		145821	0					
ANR	145996	Identifier	zend_declare_property_null		145821	0					
ANR	145997	ArgumentList	zend_ce_exception		145821	1					
ANR	145998	Argument	zend_ce_exception		145821	0					
ANR	145999	Identifier	zend_ce_exception		145821	0					
ANR	146000	Argument	"""trace"""		145821	1					
ANR	146001	PrimaryExpression	"""trace"""		145821	0					
ANR	146002	Argument	"sizeof ( ""trace"" ) - 1"		145821	2					
ANR	146003	AdditiveExpression	"sizeof ( ""trace"" ) - 1"		145821	0		-			
ANR	146004	SizeofExpression	"sizeof ( ""trace"" )"		145821	0					
ANR	146005	Sizeof	sizeof		145821	0					
ANR	146006	PrimaryExpression	"""trace"""		145821	1					
ANR	146007	PrimaryExpression	1		145821	1					
ANR	146008	Argument	ZEND_ACC_PRIVATE		145821	3					
ANR	146009	Identifier	ZEND_ACC_PRIVATE		145821	0					
ANR	146010	ExpressionStatement	"zend_declare_property_null ( zend_ce_exception , ""previous"" , sizeof ( ""previous"" ) - 1 , ZEND_ACC_PRIVATE )"	868:1:26369:26466	145821	14	True				
ANR	146011	CallExpression	"zend_declare_property_null ( zend_ce_exception , ""previous"" , sizeof ( ""previous"" ) - 1 , ZEND_ACC_PRIVATE )"		145821	0					
ANR	146012	Callee	zend_declare_property_null		145821	0					
ANR	146013	Identifier	zend_declare_property_null		145821	0					
ANR	146014	ArgumentList	zend_ce_exception		145821	1					
ANR	146015	Argument	zend_ce_exception		145821	0					
ANR	146016	Identifier	zend_ce_exception		145821	0					
ANR	146017	Argument	"""previous"""		145821	1					
ANR	146018	PrimaryExpression	"""previous"""		145821	0					
ANR	146019	Argument	"sizeof ( ""previous"" ) - 1"		145821	2					
ANR	146020	AdditiveExpression	"sizeof ( ""previous"" ) - 1"		145821	0		-			
ANR	146021	SizeofExpression	"sizeof ( ""previous"" )"		145821	0					
ANR	146022	Sizeof	sizeof		145821	0					
ANR	146023	PrimaryExpression	"""previous"""		145821	1					
ANR	146024	PrimaryExpression	1		145821	1					
ANR	146025	Argument	ZEND_ACC_PRIVATE		145821	3					
ANR	146026	Identifier	ZEND_ACC_PRIVATE		145821	0					
ANR	146027	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""ErrorException"" , error_exception_functions )"	870:1:26470:26535	145821	15	True				
ANR	146028	CallExpression	"INIT_CLASS_ENTRY ( ce , ""ErrorException"" , error_exception_functions )"		145821	0					
ANR	146029	Callee	INIT_CLASS_ENTRY		145821	0					
ANR	146030	Identifier	INIT_CLASS_ENTRY		145821	0					
ANR	146031	ArgumentList	ce		145821	1					
ANR	146032	Argument	ce		145821	0					
ANR	146033	Identifier	ce		145821	0					
ANR	146034	Argument	"""ErrorException"""		145821	1					
ANR	146035	PrimaryExpression	"""ErrorException"""		145821	0					
ANR	146036	Argument	error_exception_functions		145821	2					
ANR	146037	Identifier	error_exception_functions		145821	0					
ANR	146038	ExpressionStatement	"zend_ce_error_exception = zend_register_internal_class_ex ( & ce , zend_ce_exception )"	871:1:26538:26619	145821	16	True				
ANR	146039	AssignmentExpression	"zend_ce_error_exception = zend_register_internal_class_ex ( & ce , zend_ce_exception )"		145821	0		=			
ANR	146040	Identifier	zend_ce_error_exception		145821	0					
ANR	146041	CallExpression	"zend_register_internal_class_ex ( & ce , zend_ce_exception )"		145821	1					
ANR	146042	Callee	zend_register_internal_class_ex		145821	0					
ANR	146043	Identifier	zend_register_internal_class_ex		145821	0					
ANR	146044	ArgumentList	& ce		145821	1					
ANR	146045	Argument	& ce		145821	0					
ANR	146046	UnaryOperationExpression	& ce		145821	0					
ANR	146047	UnaryOperator	&		145821	0					
ANR	146048	Identifier	ce		145821	1					
ANR	146049	Argument	zend_ce_exception		145821	1					
ANR	146050	Identifier	zend_ce_exception		145821	0					
ANR	146051	ExpressionStatement	zend_ce_error_exception -> create_object = zend_error_exception_new	872:1:26622:26687	145821	17	True				
ANR	146052	AssignmentExpression	zend_ce_error_exception -> create_object = zend_error_exception_new		145821	0		=			
ANR	146053	PtrMemberAccess	zend_ce_error_exception -> create_object		145821	0					
ANR	146054	Identifier	zend_ce_error_exception		145821	0					
ANR	146055	Identifier	create_object		145821	1					
ANR	146056	Identifier	zend_error_exception_new		145821	1					
ANR	146057	ExpressionStatement	"zend_declare_property_long ( zend_ce_error_exception , ""severity"" , sizeof ( ""severity"" ) - 1 , E_ERROR , ZEND_ACC_PROTECTED )"	873:1:26690:26804	145821	18	True				
ANR	146058	CallExpression	"zend_declare_property_long ( zend_ce_error_exception , ""severity"" , sizeof ( ""severity"" ) - 1 , E_ERROR , ZEND_ACC_PROTECTED )"		145821	0					
ANR	146059	Callee	zend_declare_property_long		145821	0					
ANR	146060	Identifier	zend_declare_property_long		145821	0					
ANR	146061	ArgumentList	zend_ce_error_exception		145821	1					
ANR	146062	Argument	zend_ce_error_exception		145821	0					
ANR	146063	Identifier	zend_ce_error_exception		145821	0					
ANR	146064	Argument	"""severity"""		145821	1					
ANR	146065	PrimaryExpression	"""severity"""		145821	0					
ANR	146066	Argument	"sizeof ( ""severity"" ) - 1"		145821	2					
ANR	146067	AdditiveExpression	"sizeof ( ""severity"" ) - 1"		145821	0		-			
ANR	146068	SizeofExpression	"sizeof ( ""severity"" )"		145821	0					
ANR	146069	Sizeof	sizeof		145821	0					
ANR	146070	PrimaryExpression	"""severity"""		145821	1					
ANR	146071	PrimaryExpression	1		145821	1					
ANR	146072	Argument	E_ERROR		145821	3					
ANR	146073	Identifier	E_ERROR		145821	0					
ANR	146074	Argument	ZEND_ACC_PROTECTED		145821	4					
ANR	146075	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	146076	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""Error"" , default_exception_functions )"	875:1:26808:26866	145821	19	True				
ANR	146077	CallExpression	"INIT_CLASS_ENTRY ( ce , ""Error"" , default_exception_functions )"		145821	0					
ANR	146078	Callee	INIT_CLASS_ENTRY		145821	0					
ANR	146079	Identifier	INIT_CLASS_ENTRY		145821	0					
ANR	146080	ArgumentList	ce		145821	1					
ANR	146081	Argument	ce		145821	0					
ANR	146082	Identifier	ce		145821	0					
ANR	146083	Argument	"""Error"""		145821	1					
ANR	146084	PrimaryExpression	"""Error"""		145821	0					
ANR	146085	Argument	default_exception_functions		145821	2					
ANR	146086	Identifier	default_exception_functions		145821	0					
ANR	146087	ExpressionStatement	"zend_ce_error = zend_register_internal_class_ex ( & ce , NULL )"	876:1:26869:26927	145821	20	True				
ANR	146088	AssignmentExpression	"zend_ce_error = zend_register_internal_class_ex ( & ce , NULL )"		145821	0		=			
ANR	146089	Identifier	zend_ce_error		145821	0					
ANR	146090	CallExpression	"zend_register_internal_class_ex ( & ce , NULL )"		145821	1					
ANR	146091	Callee	zend_register_internal_class_ex		145821	0					
ANR	146092	Identifier	zend_register_internal_class_ex		145821	0					
ANR	146093	ArgumentList	& ce		145821	1					
ANR	146094	Argument	& ce		145821	0					
ANR	146095	UnaryOperationExpression	& ce		145821	0					
ANR	146096	UnaryOperator	&		145821	0					
ANR	146097	Identifier	ce		145821	1					
ANR	146098	Argument	NULL		145821	1					
ANR	146099	Identifier	NULL		145821	0					
ANR	146100	ExpressionStatement	zend_ce_error -> create_object = zend_default_exception_new	877:1:26930:26987	145821	21	True				
ANR	146101	AssignmentExpression	zend_ce_error -> create_object = zend_default_exception_new		145821	0		=			
ANR	146102	PtrMemberAccess	zend_ce_error -> create_object		145821	0					
ANR	146103	Identifier	zend_ce_error		145821	0					
ANR	146104	Identifier	create_object		145821	1					
ANR	146105	Identifier	zend_default_exception_new		145821	1					
ANR	146106	ExpressionStatement	"zend_class_implements ( zend_ce_error , 1 , zend_ce_throwable )"	878:1:26990:27048	145821	22	True				
ANR	146107	CallExpression	"zend_class_implements ( zend_ce_error , 1 , zend_ce_throwable )"		145821	0					
ANR	146108	Callee	zend_class_implements		145821	0					
ANR	146109	Identifier	zend_class_implements		145821	0					
ANR	146110	ArgumentList	zend_ce_error		145821	1					
ANR	146111	Argument	zend_ce_error		145821	0					
ANR	146112	Identifier	zend_ce_error		145821	0					
ANR	146113	Argument	1		145821	1					
ANR	146114	PrimaryExpression	1		145821	0					
ANR	146115	Argument	zend_ce_throwable		145821	2					
ANR	146116	Identifier	zend_ce_throwable		145821	0					
ANR	146117	ExpressionStatement	"zend_declare_property_string ( zend_ce_error , ""message"" , sizeof ( ""message"" ) - 1 , """" , ZEND_ACC_PROTECTED )"	880:1:27052:27151	145821	23	True				
ANR	146118	CallExpression	"zend_declare_property_string ( zend_ce_error , ""message"" , sizeof ( ""message"" ) - 1 , """" , ZEND_ACC_PROTECTED )"		145821	0					
ANR	146119	Callee	zend_declare_property_string		145821	0					
ANR	146120	Identifier	zend_declare_property_string		145821	0					
ANR	146121	ArgumentList	zend_ce_error		145821	1					
ANR	146122	Argument	zend_ce_error		145821	0					
ANR	146123	Identifier	zend_ce_error		145821	0					
ANR	146124	Argument	"""message"""		145821	1					
ANR	146125	PrimaryExpression	"""message"""		145821	0					
ANR	146126	Argument	"sizeof ( ""message"" ) - 1"		145821	2					
ANR	146127	AdditiveExpression	"sizeof ( ""message"" ) - 1"		145821	0		-			
ANR	146128	SizeofExpression	"sizeof ( ""message"" )"		145821	0					
ANR	146129	Sizeof	sizeof		145821	0					
ANR	146130	PrimaryExpression	"""message"""		145821	1					
ANR	146131	PrimaryExpression	1		145821	1					
ANR	146132	Argument	""""""		145821	3					
ANR	146133	PrimaryExpression	""""""		145821	0					
ANR	146134	Argument	ZEND_ACC_PROTECTED		145821	4					
ANR	146135	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	146136	ExpressionStatement	"zend_declare_property_string ( zend_ce_error , ""string"" , sizeof ( ""string"" ) - 1 , """" , ZEND_ACC_PRIVATE )"	881:1:27154:27249	145821	24	True				
ANR	146137	CallExpression	"zend_declare_property_string ( zend_ce_error , ""string"" , sizeof ( ""string"" ) - 1 , """" , ZEND_ACC_PRIVATE )"		145821	0					
ANR	146138	Callee	zend_declare_property_string		145821	0					
ANR	146139	Identifier	zend_declare_property_string		145821	0					
ANR	146140	ArgumentList	zend_ce_error		145821	1					
ANR	146141	Argument	zend_ce_error		145821	0					
ANR	146142	Identifier	zend_ce_error		145821	0					
ANR	146143	Argument	"""string"""		145821	1					
ANR	146144	PrimaryExpression	"""string"""		145821	0					
ANR	146145	Argument	"sizeof ( ""string"" ) - 1"		145821	2					
ANR	146146	AdditiveExpression	"sizeof ( ""string"" ) - 1"		145821	0		-			
ANR	146147	SizeofExpression	"sizeof ( ""string"" )"		145821	0					
ANR	146148	Sizeof	sizeof		145821	0					
ANR	146149	PrimaryExpression	"""string"""		145821	1					
ANR	146150	PrimaryExpression	1		145821	1					
ANR	146151	Argument	""""""		145821	3					
ANR	146152	PrimaryExpression	""""""		145821	0					
ANR	146153	Argument	ZEND_ACC_PRIVATE		145821	4					
ANR	146154	Identifier	ZEND_ACC_PRIVATE		145821	0					
ANR	146155	ExpressionStatement	"zend_declare_property_long ( zend_ce_error , ""code"" , sizeof ( ""code"" ) - 1 , 0 , ZEND_ACC_PROTECTED )"	882:1:27252:27342	145821	25	True				
ANR	146156	CallExpression	"zend_declare_property_long ( zend_ce_error , ""code"" , sizeof ( ""code"" ) - 1 , 0 , ZEND_ACC_PROTECTED )"		145821	0					
ANR	146157	Callee	zend_declare_property_long		145821	0					
ANR	146158	Identifier	zend_declare_property_long		145821	0					
ANR	146159	ArgumentList	zend_ce_error		145821	1					
ANR	146160	Argument	zend_ce_error		145821	0					
ANR	146161	Identifier	zend_ce_error		145821	0					
ANR	146162	Argument	"""code"""		145821	1					
ANR	146163	PrimaryExpression	"""code"""		145821	0					
ANR	146164	Argument	"sizeof ( ""code"" ) - 1"		145821	2					
ANR	146165	AdditiveExpression	"sizeof ( ""code"" ) - 1"		145821	0		-			
ANR	146166	SizeofExpression	"sizeof ( ""code"" )"		145821	0					
ANR	146167	Sizeof	sizeof		145821	0					
ANR	146168	PrimaryExpression	"""code"""		145821	1					
ANR	146169	PrimaryExpression	1		145821	1					
ANR	146170	Argument	0		145821	3					
ANR	146171	PrimaryExpression	0		145821	0					
ANR	146172	Argument	ZEND_ACC_PROTECTED		145821	4					
ANR	146173	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	146174	ExpressionStatement	"zend_declare_property_null ( zend_ce_error , ""file"" , sizeof ( ""file"" ) - 1 , ZEND_ACC_PROTECTED )"	883:1:27345:27432	145821	26	True				
ANR	146175	CallExpression	"zend_declare_property_null ( zend_ce_error , ""file"" , sizeof ( ""file"" ) - 1 , ZEND_ACC_PROTECTED )"		145821	0					
ANR	146176	Callee	zend_declare_property_null		145821	0					
ANR	146177	Identifier	zend_declare_property_null		145821	0					
ANR	146178	ArgumentList	zend_ce_error		145821	1					
ANR	146179	Argument	zend_ce_error		145821	0					
ANR	146180	Identifier	zend_ce_error		145821	0					
ANR	146181	Argument	"""file"""		145821	1					
ANR	146182	PrimaryExpression	"""file"""		145821	0					
ANR	146183	Argument	"sizeof ( ""file"" ) - 1"		145821	2					
ANR	146184	AdditiveExpression	"sizeof ( ""file"" ) - 1"		145821	0		-			
ANR	146185	SizeofExpression	"sizeof ( ""file"" )"		145821	0					
ANR	146186	Sizeof	sizeof		145821	0					
ANR	146187	PrimaryExpression	"""file"""		145821	1					
ANR	146188	PrimaryExpression	1		145821	1					
ANR	146189	Argument	ZEND_ACC_PROTECTED		145821	3					
ANR	146190	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	146191	ExpressionStatement	"zend_declare_property_null ( zend_ce_error , ""line"" , sizeof ( ""line"" ) - 1 , ZEND_ACC_PROTECTED )"	884:1:27435:27522	145821	27	True				
ANR	146192	CallExpression	"zend_declare_property_null ( zend_ce_error , ""line"" , sizeof ( ""line"" ) - 1 , ZEND_ACC_PROTECTED )"		145821	0					
ANR	146193	Callee	zend_declare_property_null		145821	0					
ANR	146194	Identifier	zend_declare_property_null		145821	0					
ANR	146195	ArgumentList	zend_ce_error		145821	1					
ANR	146196	Argument	zend_ce_error		145821	0					
ANR	146197	Identifier	zend_ce_error		145821	0					
ANR	146198	Argument	"""line"""		145821	1					
ANR	146199	PrimaryExpression	"""line"""		145821	0					
ANR	146200	Argument	"sizeof ( ""line"" ) - 1"		145821	2					
ANR	146201	AdditiveExpression	"sizeof ( ""line"" ) - 1"		145821	0		-			
ANR	146202	SizeofExpression	"sizeof ( ""line"" )"		145821	0					
ANR	146203	Sizeof	sizeof		145821	0					
ANR	146204	PrimaryExpression	"""line"""		145821	1					
ANR	146205	PrimaryExpression	1		145821	1					
ANR	146206	Argument	ZEND_ACC_PROTECTED		145821	3					
ANR	146207	Identifier	ZEND_ACC_PROTECTED		145821	0					
ANR	146208	ExpressionStatement	"zend_declare_property_null ( zend_ce_error , ""trace"" , sizeof ( ""trace"" ) - 1 , ZEND_ACC_PRIVATE )"	885:1:27525:27612	145821	28	True				
ANR	146209	CallExpression	"zend_declare_property_null ( zend_ce_error , ""trace"" , sizeof ( ""trace"" ) - 1 , ZEND_ACC_PRIVATE )"		145821	0					
ANR	146210	Callee	zend_declare_property_null		145821	0					
ANR	146211	Identifier	zend_declare_property_null		145821	0					
ANR	146212	ArgumentList	zend_ce_error		145821	1					
ANR	146213	Argument	zend_ce_error		145821	0					
ANR	146214	Identifier	zend_ce_error		145821	0					
ANR	146215	Argument	"""trace"""		145821	1					
ANR	146216	PrimaryExpression	"""trace"""		145821	0					
ANR	146217	Argument	"sizeof ( ""trace"" ) - 1"		145821	2					
ANR	146218	AdditiveExpression	"sizeof ( ""trace"" ) - 1"		145821	0		-			
ANR	146219	SizeofExpression	"sizeof ( ""trace"" )"		145821	0					
ANR	146220	Sizeof	sizeof		145821	0					
ANR	146221	PrimaryExpression	"""trace"""		145821	1					
ANR	146222	PrimaryExpression	1		145821	1					
ANR	146223	Argument	ZEND_ACC_PRIVATE		145821	3					
ANR	146224	Identifier	ZEND_ACC_PRIVATE		145821	0					
ANR	146225	ExpressionStatement	"zend_declare_property_null ( zend_ce_error , ""previous"" , sizeof ( ""previous"" ) - 1 , ZEND_ACC_PRIVATE )"	886:1:27615:27708	145821	29	True				
ANR	146226	CallExpression	"zend_declare_property_null ( zend_ce_error , ""previous"" , sizeof ( ""previous"" ) - 1 , ZEND_ACC_PRIVATE )"		145821	0					
ANR	146227	Callee	zend_declare_property_null		145821	0					
ANR	146228	Identifier	zend_declare_property_null		145821	0					
ANR	146229	ArgumentList	zend_ce_error		145821	1					
ANR	146230	Argument	zend_ce_error		145821	0					
ANR	146231	Identifier	zend_ce_error		145821	0					
ANR	146232	Argument	"""previous"""		145821	1					
ANR	146233	PrimaryExpression	"""previous"""		145821	0					
ANR	146234	Argument	"sizeof ( ""previous"" ) - 1"		145821	2					
ANR	146235	AdditiveExpression	"sizeof ( ""previous"" ) - 1"		145821	0		-			
ANR	146236	SizeofExpression	"sizeof ( ""previous"" )"		145821	0					
ANR	146237	Sizeof	sizeof		145821	0					
ANR	146238	PrimaryExpression	"""previous"""		145821	1					
ANR	146239	PrimaryExpression	1		145821	1					
ANR	146240	Argument	ZEND_ACC_PRIVATE		145821	3					
ANR	146241	Identifier	ZEND_ACC_PRIVATE		145821	0					
ANR	146242	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""ParseError"" , NULL )"	888:1:27712:27752	145821	30	True				
ANR	146243	CallExpression	"INIT_CLASS_ENTRY ( ce , ""ParseError"" , NULL )"		145821	0					
ANR	146244	Callee	INIT_CLASS_ENTRY		145821	0					
ANR	146245	Identifier	INIT_CLASS_ENTRY		145821	0					
ANR	146246	ArgumentList	ce		145821	1					
ANR	146247	Argument	ce		145821	0					
ANR	146248	Identifier	ce		145821	0					
ANR	146249	Argument	"""ParseError"""		145821	1					
ANR	146250	PrimaryExpression	"""ParseError"""		145821	0					
ANR	146251	Argument	NULL		145821	2					
ANR	146252	Identifier	NULL		145821	0					
ANR	146253	ExpressionStatement	"zend_ce_parse_error = zend_register_internal_class_ex ( & ce , zend_ce_error )"	889:1:27755:27828	145821	31	True				
ANR	146254	AssignmentExpression	"zend_ce_parse_error = zend_register_internal_class_ex ( & ce , zend_ce_error )"		145821	0		=			
ANR	146255	Identifier	zend_ce_parse_error		145821	0					
ANR	146256	CallExpression	"zend_register_internal_class_ex ( & ce , zend_ce_error )"		145821	1					
ANR	146257	Callee	zend_register_internal_class_ex		145821	0					
ANR	146258	Identifier	zend_register_internal_class_ex		145821	0					
ANR	146259	ArgumentList	& ce		145821	1					
ANR	146260	Argument	& ce		145821	0					
ANR	146261	UnaryOperationExpression	& ce		145821	0					
ANR	146262	UnaryOperator	&		145821	0					
ANR	146263	Identifier	ce		145821	1					
ANR	146264	Argument	zend_ce_error		145821	1					
ANR	146265	Identifier	zend_ce_error		145821	0					
ANR	146266	ExpressionStatement	zend_ce_parse_error -> create_object = zend_default_exception_new	890:1:27831:27894	145821	32	True				
ANR	146267	AssignmentExpression	zend_ce_parse_error -> create_object = zend_default_exception_new		145821	0		=			
ANR	146268	PtrMemberAccess	zend_ce_parse_error -> create_object		145821	0					
ANR	146269	Identifier	zend_ce_parse_error		145821	0					
ANR	146270	Identifier	create_object		145821	1					
ANR	146271	Identifier	zend_default_exception_new		145821	1					
ANR	146272	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""TypeError"" , NULL )"	892:1:27898:27937	145821	33	True				
ANR	146273	CallExpression	"INIT_CLASS_ENTRY ( ce , ""TypeError"" , NULL )"		145821	0					
ANR	146274	Callee	INIT_CLASS_ENTRY		145821	0					
ANR	146275	Identifier	INIT_CLASS_ENTRY		145821	0					
ANR	146276	ArgumentList	ce		145821	1					
ANR	146277	Argument	ce		145821	0					
ANR	146278	Identifier	ce		145821	0					
ANR	146279	Argument	"""TypeError"""		145821	1					
ANR	146280	PrimaryExpression	"""TypeError"""		145821	0					
ANR	146281	Argument	NULL		145821	2					
ANR	146282	Identifier	NULL		145821	0					
ANR	146283	ExpressionStatement	"zend_ce_type_error = zend_register_internal_class_ex ( & ce , zend_ce_error )"	893:1:27940:28012	145821	34	True				
ANR	146284	AssignmentExpression	"zend_ce_type_error = zend_register_internal_class_ex ( & ce , zend_ce_error )"		145821	0		=			
ANR	146285	Identifier	zend_ce_type_error		145821	0					
ANR	146286	CallExpression	"zend_register_internal_class_ex ( & ce , zend_ce_error )"		145821	1					
ANR	146287	Callee	zend_register_internal_class_ex		145821	0					
ANR	146288	Identifier	zend_register_internal_class_ex		145821	0					
ANR	146289	ArgumentList	& ce		145821	1					
ANR	146290	Argument	& ce		145821	0					
ANR	146291	UnaryOperationExpression	& ce		145821	0					
ANR	146292	UnaryOperator	&		145821	0					
ANR	146293	Identifier	ce		145821	1					
ANR	146294	Argument	zend_ce_error		145821	1					
ANR	146295	Identifier	zend_ce_error		145821	0					
ANR	146296	ExpressionStatement	zend_ce_type_error -> create_object = zend_default_exception_new	894:1:28015:28077	145821	35	True				
ANR	146297	AssignmentExpression	zend_ce_type_error -> create_object = zend_default_exception_new		145821	0		=			
ANR	146298	PtrMemberAccess	zend_ce_type_error -> create_object		145821	0					
ANR	146299	Identifier	zend_ce_type_error		145821	0					
ANR	146300	Identifier	create_object		145821	1					
ANR	146301	Identifier	zend_default_exception_new		145821	1					
ANR	146302	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""ArithmeticError"" , NULL )"	896:1:28081:28126	145821	36	True				
ANR	146303	CallExpression	"INIT_CLASS_ENTRY ( ce , ""ArithmeticError"" , NULL )"		145821	0					
ANR	146304	Callee	INIT_CLASS_ENTRY		145821	0					
ANR	146305	Identifier	INIT_CLASS_ENTRY		145821	0					
ANR	146306	ArgumentList	ce		145821	1					
ANR	146307	Argument	ce		145821	0					
ANR	146308	Identifier	ce		145821	0					
ANR	146309	Argument	"""ArithmeticError"""		145821	1					
ANR	146310	PrimaryExpression	"""ArithmeticError"""		145821	0					
ANR	146311	Argument	NULL		145821	2					
ANR	146312	Identifier	NULL		145821	0					
ANR	146313	ExpressionStatement	"zend_ce_arithmetic_error = zend_register_internal_class_ex ( & ce , zend_ce_error )"	897:1:28129:28207	145821	37	True				
ANR	146314	AssignmentExpression	"zend_ce_arithmetic_error = zend_register_internal_class_ex ( & ce , zend_ce_error )"		145821	0		=			
ANR	146315	Identifier	zend_ce_arithmetic_error		145821	0					
ANR	146316	CallExpression	"zend_register_internal_class_ex ( & ce , zend_ce_error )"		145821	1					
ANR	146317	Callee	zend_register_internal_class_ex		145821	0					
ANR	146318	Identifier	zend_register_internal_class_ex		145821	0					
ANR	146319	ArgumentList	& ce		145821	1					
ANR	146320	Argument	& ce		145821	0					
ANR	146321	UnaryOperationExpression	& ce		145821	0					
ANR	146322	UnaryOperator	&		145821	0					
ANR	146323	Identifier	ce		145821	1					
ANR	146324	Argument	zend_ce_error		145821	1					
ANR	146325	Identifier	zend_ce_error		145821	0					
ANR	146326	ExpressionStatement	zend_ce_arithmetic_error -> create_object = zend_default_exception_new	898:1:28210:28278	145821	38	True				
ANR	146327	AssignmentExpression	zend_ce_arithmetic_error -> create_object = zend_default_exception_new		145821	0		=			
ANR	146328	PtrMemberAccess	zend_ce_arithmetic_error -> create_object		145821	0					
ANR	146329	Identifier	zend_ce_arithmetic_error		145821	0					
ANR	146330	Identifier	create_object		145821	1					
ANR	146331	Identifier	zend_default_exception_new		145821	1					
ANR	146332	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""DivisionByZeroError"" , NULL )"	900:1:28282:28331	145821	39	True				
ANR	146333	CallExpression	"INIT_CLASS_ENTRY ( ce , ""DivisionByZeroError"" , NULL )"		145821	0					
ANR	146334	Callee	INIT_CLASS_ENTRY		145821	0					
ANR	146335	Identifier	INIT_CLASS_ENTRY		145821	0					
ANR	146336	ArgumentList	ce		145821	1					
ANR	146337	Argument	ce		145821	0					
ANR	146338	Identifier	ce		145821	0					
ANR	146339	Argument	"""DivisionByZeroError"""		145821	1					
ANR	146340	PrimaryExpression	"""DivisionByZeroError"""		145821	0					
ANR	146341	Argument	NULL		145821	2					
ANR	146342	Identifier	NULL		145821	0					
ANR	146343	ExpressionStatement	"zend_ce_division_by_zero_error = zend_register_internal_class_ex ( & ce , zend_ce_arithmetic_error )"	901:1:28334:28429	145821	40	True				
ANR	146344	AssignmentExpression	"zend_ce_division_by_zero_error = zend_register_internal_class_ex ( & ce , zend_ce_arithmetic_error )"		145821	0		=			
ANR	146345	Identifier	zend_ce_division_by_zero_error		145821	0					
ANR	146346	CallExpression	"zend_register_internal_class_ex ( & ce , zend_ce_arithmetic_error )"		145821	1					
ANR	146347	Callee	zend_register_internal_class_ex		145821	0					
ANR	146348	Identifier	zend_register_internal_class_ex		145821	0					
ANR	146349	ArgumentList	& ce		145821	1					
ANR	146350	Argument	& ce		145821	0					
ANR	146351	UnaryOperationExpression	& ce		145821	0					
ANR	146352	UnaryOperator	&		145821	0					
ANR	146353	Identifier	ce		145821	1					
ANR	146354	Argument	zend_ce_arithmetic_error		145821	1					
ANR	146355	Identifier	zend_ce_arithmetic_error		145821	0					
ANR	146356	ExpressionStatement	zend_ce_division_by_zero_error -> create_object = zend_default_exception_new	902:1:28432:28506	145821	41	True				
ANR	146357	AssignmentExpression	zend_ce_division_by_zero_error -> create_object = zend_default_exception_new		145821	0		=			
ANR	146358	PtrMemberAccess	zend_ce_division_by_zero_error -> create_object		145821	0					
ANR	146359	Identifier	zend_ce_division_by_zero_error		145821	0					
ANR	146360	Identifier	create_object		145821	1					
ANR	146361	Identifier	zend_default_exception_new		145821	1					
ANR	146362	ReturnType	void		145821	1					
ANR	146363	Identifier	zend_register_default_exception		145821	2					
ANR	146364	ParameterList			145821	3					
ANR	146365	CFGEntryNode	ENTRY		145821		True				
ANR	146366	CFGExitNode	EXIT		145821		True				
ANR	146367	Symbol	* zend_ce_division_by_zero_error		145821						
ANR	146368	Symbol	zend_error_exception_new		145821						
ANR	146369	Symbol	zend_get_std_object_handlers		145821						
ANR	146370	Symbol	zend_ce_division_by_zero_error -> create_object		145821						
ANR	146371	Symbol	error_exception_functions		145821						
ANR	146372	Symbol	& ce		145821						
ANR	146373	Symbol	default_exception_handlers . clone_obj		145821						
ANR	146374	Symbol	* zend_ce_parse_error		145821						
ANR	146375	Symbol	* zend_ce_type_error		145821						
ANR	146376	Symbol	* zend_ce_arithmetic_error		145821						
ANR	146377	Symbol	zend_ce_type_error		145821						
ANR	146378	Symbol	zend_ce_exception		145821						
ANR	146379	Symbol	zend_ce_exception -> create_object		145821						
ANR	146380	Symbol	ZEND_ACC_PROTECTED		145821						
ANR	146381	Symbol	default_exception_functions		145821						
ANR	146382	Symbol	zend_ce_throwable		145821						
ANR	146383	Symbol	ce		145821						
ANR	146384	Symbol	* zend_ce_exception		145821						
ANR	146385	Symbol	NULL		145821						
ANR	146386	Symbol	zend_ce_error		145821						
ANR	146387	Symbol	zend_ce_parse_error -> create_object		145821						
ANR	146388	Symbol	throwable		145821						
ANR	146389	Symbol	zend_ce_error_exception		145821						
ANR	146390	Symbol	default_exception_handlers		145821						
ANR	146391	Symbol	zend_ce_error -> create_object		145821						
ANR	146392	Symbol	ZEND_ACC_PRIVATE		145821						
ANR	146393	Symbol	zend_ce_type_error -> create_object		145821						
ANR	146394	Symbol	zend_ce_arithmetic_error -> create_object		145821						
ANR	146395	Symbol	zend_register_internal_class_ex		145821						
ANR	146396	Symbol	E_ERROR		145821						
ANR	146397	Symbol	& default_exception_handlers		145821						
ANR	146398	Symbol	zend_default_exception_new		145821						
ANR	146399	Symbol	* zend_ce_error		145821						
ANR	146400	Symbol	Throwable		145821						
ANR	146401	Symbol	zend_ce_error_exception -> create_object		145821						
ANR	146402	Symbol	zend_ce_parse_error		145821						
ANR	146403	Symbol	* zend_ce_error_exception		145821						
ANR	146404	Symbol	zend_ce_arithmetic_error		145821						
ANR	146405	Symbol	zend_ce_division_by_zero_error		145821						
ANR	146406	Function	zend_exception_get_default	907:0:28583:28672							
ANR	146407	FunctionDef	zend_exception_get_default ()		146406	0					
ANR	146408	CompoundStatement		908:0:28643:28672	146406	0					
ANR	146409	ReturnStatement	return zend_ce_exception ;	909:1:28646:28670	146406	0	True				
ANR	146410	Identifier	zend_ce_exception		146406	0					
ANR	146411	ReturnType	ZEND_API zend_class_entry *		146406	1					
ANR	146412	Identifier	zend_exception_get_default		146406	2					
ANR	146413	ParameterList			146406	3					
ANR	146414	CFGEntryNode	ENTRY		146406		True				
ANR	146415	CFGExitNode	EXIT		146406		True				
ANR	146416	Symbol	zend_ce_exception		146406						
ANR	146417	Function	zend_get_error_exception	914:0:28753:28846							
ANR	146418	FunctionDef	zend_get_error_exception ()		146417	0					
ANR	146419	CompoundStatement		915:0:28811:28846	146417	0					
ANR	146420	ReturnStatement	return zend_ce_error_exception ;	916:1:28814:28844	146417	0	True				
ANR	146421	Identifier	zend_ce_error_exception		146417	0					
ANR	146422	ReturnType	ZEND_API zend_class_entry *		146417	1					
ANR	146423	Identifier	zend_get_error_exception		146417	2					
ANR	146424	ParameterList			146417	3					
ANR	146425	CFGEntryNode	ENTRY		146417		True				
ANR	146426	CFGExitNode	EXIT		146417		True				
ANR	146427	Symbol	zend_ce_error_exception		146417						
ANR	146428	Function	zend_throw_exception	920:0:28859:29543							
ANR	146429	FunctionDef	"zend_throw_exception (zend_class_entry * exception_ce , const char * message , zend_long code)"		146428	0					
ANR	146430	CompoundStatement		921:0:28991:29543	146428	0					
ANR	146431	IdentifierDeclStatement	zval ex ;	922:1:28994:29001	146428	0	True				
ANR	146432	IdentifierDecl	ex		146428	0					
ANR	146433	IdentifierDeclType	zval		146428	0					
ANR	146434	Identifier	ex		146428	1					
ANR	146435	IfStatement	if ( exception_ce )		146428	1					
ANR	146436	Condition	exception_ce	924:5:29009:29020	146428	0	True				
ANR	146437	Identifier	exception_ce		146428	0					
ANR	146438	CompoundStatement		4:19:31:31	146428	1					
ANR	146439	IfStatement	"if ( ! instanceof_function ( exception_ce , zend_ce_throwable ) )"		146428	0					
ANR	146440	Condition	"! instanceof_function ( exception_ce , zend_ce_throwable )"	925:6:29031:29083	146428	0	True				
ANR	146441	UnaryOperationExpression	"! instanceof_function ( exception_ce , zend_ce_throwable )"		146428	0					
ANR	146442	UnaryOperator	!		146428	0					
ANR	146443	CallExpression	"instanceof_function ( exception_ce , zend_ce_throwable )"		146428	1					
ANR	146444	Callee	instanceof_function		146428	0					
ANR	146445	Identifier	instanceof_function		146428	0					
ANR	146446	ArgumentList	exception_ce		146428	1					
ANR	146447	Argument	exception_ce		146428	0					
ANR	146448	Identifier	exception_ce		146428	0					
ANR	146449	Argument	zend_ce_throwable		146428	1					
ANR	146450	Identifier	zend_ce_throwable		146428	0					
ANR	146451	CompoundStatement		5:61:94:94	146428	1					
ANR	146452	ExpressionStatement	"zend_error ( E_NOTICE , ""Exceptions must implement Throwable"" )"	926:3:29091:29150	146428	0	True				
ANR	146453	CallExpression	"zend_error ( E_NOTICE , ""Exceptions must implement Throwable"" )"		146428	0					
ANR	146454	Callee	zend_error		146428	0					
ANR	146455	Identifier	zend_error		146428	0					
ANR	146456	ArgumentList	E_NOTICE		146428	1					
ANR	146457	Argument	E_NOTICE		146428	0					
ANR	146458	Identifier	E_NOTICE		146428	0					
ANR	146459	Argument	"""Exceptions must implement Throwable"""		146428	1					
ANR	146460	PrimaryExpression	"""Exceptions must implement Throwable"""		146428	0					
ANR	146461	ExpressionStatement	exception_ce = zend_ce_exception	927:3:29155:29187	146428	1	True				
ANR	146462	AssignmentExpression	exception_ce = zend_ce_exception		146428	0		=			
ANR	146463	Identifier	exception_ce		146428	0					
ANR	146464	Identifier	zend_ce_exception		146428	1					
ANR	146465	ElseStatement	else		146428	0					
ANR	146466	CompoundStatement		9:8:209:209	146428	0					
ANR	146467	ExpressionStatement	exception_ce = zend_ce_exception	930:2:29205:29237	146428	0	True				
ANR	146468	AssignmentExpression	exception_ce = zend_ce_exception		146428	0		=			
ANR	146469	Identifier	exception_ce		146428	0					
ANR	146470	Identifier	zend_ce_exception		146428	1					
ANR	146471	ExpressionStatement	"object_init_ex ( & ex , exception_ce )"	932:1:29243:29276	146428	2	True				
ANR	146472	CallExpression	"object_init_ex ( & ex , exception_ce )"		146428	0					
ANR	146473	Callee	object_init_ex		146428	0					
ANR	146474	Identifier	object_init_ex		146428	0					
ANR	146475	ArgumentList	& ex		146428	1					
ANR	146476	Argument	& ex		146428	0					
ANR	146477	UnaryOperationExpression	& ex		146428	0					
ANR	146478	UnaryOperator	&		146428	0					
ANR	146479	Identifier	ex		146428	1					
ANR	146480	Argument	exception_ce		146428	1					
ANR	146481	Identifier	exception_ce		146428	0					
ANR	146482	IfStatement	if ( message )		146428	3					
ANR	146483	Condition	message	935:5:29285:29291	146428	0	True				
ANR	146484	Identifier	message		146428	0					
ANR	146485	CompoundStatement		15:14:302:302	146428	1					
ANR	146486	ExpressionStatement	"zend_update_property_string ( exception_ce , & ex , ""message"" , sizeof ( ""message"" ) - 1 , message )"	936:2:29298:29385	146428	0	True				
ANR	146487	CallExpression	"zend_update_property_string ( exception_ce , & ex , ""message"" , sizeof ( ""message"" ) - 1 , message )"		146428	0					
ANR	146488	Callee	zend_update_property_string		146428	0					
ANR	146489	Identifier	zend_update_property_string		146428	0					
ANR	146490	ArgumentList	exception_ce		146428	1					
ANR	146491	Argument	exception_ce		146428	0					
ANR	146492	Identifier	exception_ce		146428	0					
ANR	146493	Argument	& ex		146428	1					
ANR	146494	UnaryOperationExpression	& ex		146428	0					
ANR	146495	UnaryOperator	&		146428	0					
ANR	146496	Identifier	ex		146428	1					
ANR	146497	Argument	"""message"""		146428	2					
ANR	146498	PrimaryExpression	"""message"""		146428	0					
ANR	146499	Argument	"sizeof ( ""message"" ) - 1"		146428	3					
ANR	146500	AdditiveExpression	"sizeof ( ""message"" ) - 1"		146428	0		-			
ANR	146501	SizeofExpression	"sizeof ( ""message"" )"		146428	0					
ANR	146502	Sizeof	sizeof		146428	0					
ANR	146503	PrimaryExpression	"""message"""		146428	1					
ANR	146504	PrimaryExpression	1		146428	1					
ANR	146505	Argument	message		146428	4					
ANR	146506	Identifier	message		146428	0					
ANR	146507	IfStatement	if ( code )		146428	4					
ANR	146508	Condition	code	938:5:29395:29398	146428	0	True				
ANR	146509	Identifier	code		146428	0					
ANR	146510	CompoundStatement		18:11:409:409	146428	1					
ANR	146511	ExpressionStatement	"zend_update_property_long ( exception_ce , & ex , ""code"" , sizeof ( ""code"" ) - 1 , code )"	939:2:29405:29481	146428	0	True				
ANR	146512	CallExpression	"zend_update_property_long ( exception_ce , & ex , ""code"" , sizeof ( ""code"" ) - 1 , code )"		146428	0					
ANR	146513	Callee	zend_update_property_long		146428	0					
ANR	146514	Identifier	zend_update_property_long		146428	0					
ANR	146515	ArgumentList	exception_ce		146428	1					
ANR	146516	Argument	exception_ce		146428	0					
ANR	146517	Identifier	exception_ce		146428	0					
ANR	146518	Argument	& ex		146428	1					
ANR	146519	UnaryOperationExpression	& ex		146428	0					
ANR	146520	UnaryOperator	&		146428	0					
ANR	146521	Identifier	ex		146428	1					
ANR	146522	Argument	"""code"""		146428	2					
ANR	146523	PrimaryExpression	"""code"""		146428	0					
ANR	146524	Argument	"sizeof ( ""code"" ) - 1"		146428	3					
ANR	146525	AdditiveExpression	"sizeof ( ""code"" ) - 1"		146428	0		-			
ANR	146526	SizeofExpression	"sizeof ( ""code"" )"		146428	0					
ANR	146527	Sizeof	sizeof		146428	0					
ANR	146528	PrimaryExpression	"""code"""		146428	1					
ANR	146529	PrimaryExpression	1		146428	1					
ANR	146530	Argument	code		146428	4					
ANR	146531	Identifier	code		146428	0					
ANR	146532	ExpressionStatement	zend_throw_exception_internal ( & ex )	942:1:29488:29522	146428	5	True				
ANR	146533	CallExpression	zend_throw_exception_internal ( & ex )		146428	0					
ANR	146534	Callee	zend_throw_exception_internal		146428	0					
ANR	146535	Identifier	zend_throw_exception_internal		146428	0					
ANR	146536	ArgumentList	& ex		146428	1					
ANR	146537	Argument	& ex		146428	0					
ANR	146538	UnaryOperationExpression	& ex		146428	0					
ANR	146539	UnaryOperator	&		146428	0					
ANR	146540	Identifier	ex		146428	1					
ANR	146541	ReturnStatement	return Z_OBJ ( ex ) ;	943:1:29525:29541	146428	6	True				
ANR	146542	CallExpression	Z_OBJ ( ex )		146428	0					
ANR	146543	Callee	Z_OBJ		146428	0					
ANR	146544	Identifier	Z_OBJ		146428	0					
ANR	146545	ArgumentList	ex		146428	1					
ANR	146546	Argument	ex		146428	0					
ANR	146547	Identifier	ex		146428	0					
ANR	146548	ReturnType	ZEND_API ZEND_COLD zend_object *		146428	1					
ANR	146549	Identifier	zend_throw_exception		146428	2					
ANR	146550	ParameterList	"zend_class_entry * exception_ce , const char * message , zend_long code"		146428	3					
ANR	146551	Parameter	zend_class_entry * exception_ce	920:53:28912:28941	146428	0	True				
ANR	146552	ParameterType	zend_class_entry *		146428	0					
ANR	146553	Identifier	exception_ce		146428	1					
ANR	146554	Parameter	const char * message	920:85:28944:28962	146428	1	True				
ANR	146555	ParameterType	const char *		146428	0					
ANR	146556	Identifier	message		146428	1					
ANR	146557	Parameter	zend_long code	920:106:28965:28978	146428	2	True				
ANR	146558	ParameterType	zend_long		146428	0					
ANR	146559	Identifier	code		146428	1					
ANR	146560	CFGEntryNode	ENTRY		146428		True				
ANR	146561	CFGExitNode	EXIT		146428		True				
ANR	146562	Symbol	instanceof_function		146428						
ANR	146563	Symbol	exception_ce		146428						
ANR	146564	Symbol	Z_OBJ		146428						
ANR	146565	Symbol	code		146428						
ANR	146566	Symbol	ex		146428						
ANR	146567	Symbol	zend_ce_exception		146428						
ANR	146568	Symbol	E_NOTICE		146428						
ANR	146569	Symbol	message		146428						
ANR	146570	Symbol	& ex		146428						
ANR	146571	Symbol	zend_ce_throwable		146428						
ANR	146572	Function	zend_throw_exception_ex	947:0:29556:29916							
ANR	146573	FunctionDef	"zend_throw_exception_ex (zend_class_entry * exception_ce , zend_long code , const char * format)"		146572	0					
ANR	146574	CompoundStatement		948:0:29695:29916	146572	0					
ANR	146575	IdentifierDeclStatement	va_list arg ;	949:1:29698:29709	146572	0	True				
ANR	146576	IdentifierDecl	arg		146572	0					
ANR	146577	IdentifierDeclType	va_list		146572	0					
ANR	146578	Identifier	arg		146572	1					
ANR	146579	IdentifierDeclStatement	char * message ;	950:1:29712:29725	146572	1	True				
ANR	146580	IdentifierDecl	* message		146572	0					
ANR	146581	IdentifierDeclType	char *		146572	0					
ANR	146582	Identifier	message		146572	1					
ANR	146583	IdentifierDeclStatement	zend_object * obj ;	951:1:29728:29744	146572	2	True				
ANR	146584	IdentifierDecl	* obj		146572	0					
ANR	146585	IdentifierDeclType	zend_object *		146572	0					
ANR	146586	Identifier	obj		146572	1					
ANR	146587	ExpressionStatement	"va_start ( arg , format )"	953:1:29748:29769	146572	3	True				
ANR	146588	CallExpression	"va_start ( arg , format )"		146572	0					
ANR	146589	Callee	va_start		146572	0					
ANR	146590	Identifier	va_start		146572	0					
ANR	146591	ArgumentList	arg		146572	1					
ANR	146592	Argument	arg		146572	0					
ANR	146593	Identifier	arg		146572	0					
ANR	146594	Argument	format		146572	1					
ANR	146595	Identifier	format		146572	0					
ANR	146596	ExpressionStatement	"zend_vspprintf ( & message , 0 , format , arg )"	954:1:29772:29812	146572	4	True				
ANR	146597	CallExpression	"zend_vspprintf ( & message , 0 , format , arg )"		146572	0					
ANR	146598	Callee	zend_vspprintf		146572	0					
ANR	146599	Identifier	zend_vspprintf		146572	0					
ANR	146600	ArgumentList	& message		146572	1					
ANR	146601	Argument	& message		146572	0					
ANR	146602	UnaryOperationExpression	& message		146572	0					
ANR	146603	UnaryOperator	&		146572	0					
ANR	146604	Identifier	message		146572	1					
ANR	146605	Argument	0		146572	1					
ANR	146606	PrimaryExpression	0		146572	0					
ANR	146607	Argument	format		146572	2					
ANR	146608	Identifier	format		146572	0					
ANR	146609	Argument	arg		146572	3					
ANR	146610	Identifier	arg		146572	0					
ANR	146611	ExpressionStatement	va_end ( arg )	955:1:29815:29826	146572	5	True				
ANR	146612	CallExpression	va_end ( arg )		146572	0					
ANR	146613	Callee	va_end		146572	0					
ANR	146614	Identifier	va_end		146572	0					
ANR	146615	ArgumentList	arg		146572	1					
ANR	146616	Argument	arg		146572	0					
ANR	146617	Identifier	arg		146572	0					
ANR	146618	ExpressionStatement	"obj = zend_throw_exception ( exception_ce , message , code )"	956:1:29829:29884	146572	6	True				
ANR	146619	AssignmentExpression	"obj = zend_throw_exception ( exception_ce , message , code )"		146572	0		=			
ANR	146620	Identifier	obj		146572	0					
ANR	146621	CallExpression	"zend_throw_exception ( exception_ce , message , code )"		146572	1					
ANR	146622	Callee	zend_throw_exception		146572	0					
ANR	146623	Identifier	zend_throw_exception		146572	0					
ANR	146624	ArgumentList	exception_ce		146572	1					
ANR	146625	Argument	exception_ce		146572	0					
ANR	146626	Identifier	exception_ce		146572	0					
ANR	146627	Argument	message		146572	1					
ANR	146628	Identifier	message		146572	0					
ANR	146629	Argument	code		146572	2					
ANR	146630	Identifier	code		146572	0					
ANR	146631	ExpressionStatement	efree ( message )	957:1:29887:29901	146572	7	True				
ANR	146632	CallExpression	efree ( message )		146572	0					
ANR	146633	Callee	efree		146572	0					
ANR	146634	Identifier	efree		146572	0					
ANR	146635	ArgumentList	message		146572	1					
ANR	146636	Argument	message		146572	0					
ANR	146637	Identifier	message		146572	0					
ANR	146638	ReturnStatement	return obj ;	958:1:29904:29914	146572	8	True				
ANR	146639	Identifier	obj		146572	0					
ANR	146640	ReturnType	ZEND_API ZEND_COLD zend_object *		146572	1					
ANR	146641	Identifier	zend_throw_exception_ex		146572	2					
ANR	146642	ParameterList	"zend_class_entry * exception_ce , zend_long code , const char * format"		146572	3					
ANR	146643	Parameter	zend_class_entry * exception_ce	947:56:29612:29641	146572	0	True				
ANR	146644	ParameterType	zend_class_entry *		146572	0					
ANR	146645	Identifier	exception_ce		146572	1					
ANR	146646	Parameter	zend_long code	947:88:29644:29657	146572	1	True				
ANR	146647	ParameterType	zend_long		146572	0					
ANR	146648	Identifier	code		146572	1					
ANR	146649	Parameter	const char * format	947:104:29660:29677	146572	2	True				
ANR	146650	ParameterType	const char *		146572	0					
ANR	146651	Identifier	format		146572	1					
ANR	146652	CFGEntryNode	ENTRY		146572		True				
ANR	146653	CFGExitNode	EXIT		146572		True				
ANR	146654	Symbol	exception_ce		146572						
ANR	146655	Symbol	zend_throw_exception		146572						
ANR	146656	Symbol	code		146572						
ANR	146657	Symbol	& message		146572						
ANR	146658	Symbol	obj		146572						
ANR	146659	Symbol	arg		146572						
ANR	146660	Symbol	format		146572						
ANR	146661	Symbol	message		146572						
ANR	146662	Function	zend_throw_error_exception	962:0:29929:30300							
ANR	146663	FunctionDef	"zend_throw_error_exception (zend_class_entry * exception_ce , const char * message , zend_long code , int severity)"		146662	0					
ANR	146664	CompoundStatement		963:0:30081:30300	146662	0					
ANR	146665	IdentifierDeclStatement	zval ex ;	964:1:30084:30091	146662	0	True				
ANR	146666	IdentifierDecl	ex		146662	0					
ANR	146667	IdentifierDeclType	zval		146662	0					
ANR	146668	Identifier	ex		146662	1					
ANR	146669	IdentifierDeclStatement	"zend_object * obj = zend_throw_exception ( exception_ce , message , code ) ;"	965:1:30094:30162	146662	1	True				
ANR	146670	IdentifierDecl	"* obj = zend_throw_exception ( exception_ce , message , code )"		146662	0					
ANR	146671	IdentifierDeclType	zend_object *		146662	0					
ANR	146672	Identifier	obj		146662	1					
ANR	146673	AssignmentExpression	"* obj = zend_throw_exception ( exception_ce , message , code )"		146662	2		=			
ANR	146674	Identifier	obj		146662	0					
ANR	146675	CallExpression	"zend_throw_exception ( exception_ce , message , code )"		146662	1					
ANR	146676	Callee	zend_throw_exception		146662	0					
ANR	146677	Identifier	zend_throw_exception		146662	0					
ANR	146678	ArgumentList	exception_ce		146662	1					
ANR	146679	Argument	exception_ce		146662	0					
ANR	146680	Identifier	exception_ce		146662	0					
ANR	146681	Argument	message		146662	1					
ANR	146682	Identifier	message		146662	0					
ANR	146683	Argument	code		146662	2					
ANR	146684	Identifier	code		146662	0					
ANR	146685	ExpressionStatement	"ZVAL_OBJ ( & ex , obj )"	966:1:30165:30183	146662	2	True				
ANR	146686	CallExpression	"ZVAL_OBJ ( & ex , obj )"		146662	0					
ANR	146687	Callee	ZVAL_OBJ		146662	0					
ANR	146688	Identifier	ZVAL_OBJ		146662	0					
ANR	146689	ArgumentList	& ex		146662	1					
ANR	146690	Argument	& ex		146662	0					
ANR	146691	UnaryOperationExpression	& ex		146662	0					
ANR	146692	UnaryOperator	&		146662	0					
ANR	146693	Identifier	ex		146662	1					
ANR	146694	Argument	obj		146662	1					
ANR	146695	Identifier	obj		146662	0					
ANR	146696	ExpressionStatement	"zend_update_property_long ( zend_ce_error_exception , & ex , ""severity"" , sizeof ( ""severity"" ) - 1 , severity )"	967:1:30186:30285	146662	3	True				
ANR	146697	CallExpression	"zend_update_property_long ( zend_ce_error_exception , & ex , ""severity"" , sizeof ( ""severity"" ) - 1 , severity )"		146662	0					
ANR	146698	Callee	zend_update_property_long		146662	0					
ANR	146699	Identifier	zend_update_property_long		146662	0					
ANR	146700	ArgumentList	zend_ce_error_exception		146662	1					
ANR	146701	Argument	zend_ce_error_exception		146662	0					
ANR	146702	Identifier	zend_ce_error_exception		146662	0					
ANR	146703	Argument	& ex		146662	1					
ANR	146704	UnaryOperationExpression	& ex		146662	0					
ANR	146705	UnaryOperator	&		146662	0					
ANR	146706	Identifier	ex		146662	1					
ANR	146707	Argument	"""severity"""		146662	2					
ANR	146708	PrimaryExpression	"""severity"""		146662	0					
ANR	146709	Argument	"sizeof ( ""severity"" ) - 1"		146662	3					
ANR	146710	AdditiveExpression	"sizeof ( ""severity"" ) - 1"		146662	0		-			
ANR	146711	SizeofExpression	"sizeof ( ""severity"" )"		146662	0					
ANR	146712	Sizeof	sizeof		146662	0					
ANR	146713	PrimaryExpression	"""severity"""		146662	1					
ANR	146714	PrimaryExpression	1		146662	1					
ANR	146715	Argument	severity		146662	4					
ANR	146716	Identifier	severity		146662	0					
ANR	146717	ReturnStatement	return obj ;	968:1:30288:30298	146662	4	True				
ANR	146718	Identifier	obj		146662	0					
ANR	146719	ReturnType	ZEND_API ZEND_COLD zend_object *		146662	1					
ANR	146720	Identifier	zend_throw_error_exception		146662	2					
ANR	146721	ParameterList	"zend_class_entry * exception_ce , const char * message , zend_long code , int severity"		146662	3					
ANR	146722	Parameter	zend_class_entry * exception_ce	962:59:29988:30017	146662	0	True				
ANR	146723	ParameterType	zend_class_entry *		146662	0					
ANR	146724	Identifier	exception_ce		146662	1					
ANR	146725	Parameter	const char * message	962:91:30020:30038	146662	1	True				
ANR	146726	ParameterType	const char *		146662	0					
ANR	146727	Identifier	message		146662	1					
ANR	146728	Parameter	zend_long code	962:112:30041:30054	146662	2	True				
ANR	146729	ParameterType	zend_long		146662	0					
ANR	146730	Identifier	code		146662	1					
ANR	146731	Parameter	int severity	962:128:30057:30068	146662	3	True				
ANR	146732	ParameterType	int		146662	0					
ANR	146733	Identifier	severity		146662	1					
ANR	146734	CFGEntryNode	ENTRY		146662		True				
ANR	146735	CFGExitNode	EXIT		146662		True				
ANR	146736	Symbol	severity		146662						
ANR	146737	Symbol	exception_ce		146662						
ANR	146738	Symbol	zend_throw_exception		146662						
ANR	146739	Symbol	code		146662						
ANR	146740	Symbol	ex		146662						
ANR	146741	Symbol	obj		146662						
ANR	146742	Symbol	zend_ce_error_exception		146662						
ANR	146743	Symbol	message		146662						
ANR	146744	Symbol	& ex		146662						
ANR	146745	Function	zend_error_va	972:0:30313:30523							
ANR	146746	FunctionDef	"zend_error_va (int type , const char * file , uint lineno , const char * format)"		146745	0					
ANR	146747	CompoundStatement		973:0:30415:30523	146745	0					
ANR	146748	IdentifierDeclStatement	va_list args ;	974:1:30418:30430	146745	0	True				
ANR	146749	IdentifierDecl	args		146745	0					
ANR	146750	IdentifierDeclType	va_list		146745	0					
ANR	146751	Identifier	args		146745	1					
ANR	146752	ExpressionStatement	"va_start ( args , format )"	976:1:30434:30456	146745	1	True				
ANR	146753	CallExpression	"va_start ( args , format )"		146745	0					
ANR	146754	Callee	va_start		146745	0					
ANR	146755	Identifier	va_start		146745	0					
ANR	146756	ArgumentList	args		146745	1					
ANR	146757	Argument	args		146745	0					
ANR	146758	Identifier	args		146745	0					
ANR	146759	Argument	format		146745	1					
ANR	146760	Identifier	format		146745	0					
ANR	146761	ExpressionStatement	"zend_error_cb ( type , file , lineno , format , args )"	977:1:30459:30506	146745	2	True				
ANR	146762	CallExpression	"zend_error_cb ( type , file , lineno , format , args )"		146745	0					
ANR	146763	Callee	zend_error_cb		146745	0					
ANR	146764	Identifier	zend_error_cb		146745	0					
ANR	146765	ArgumentList	type		146745	1					
ANR	146766	Argument	type		146745	0					
ANR	146767	Identifier	type		146745	0					
ANR	146768	Argument	file		146745	1					
ANR	146769	Identifier	file		146745	0					
ANR	146770	Argument	lineno		146745	2					
ANR	146771	Identifier	lineno		146745	0					
ANR	146772	Argument	format		146745	3					
ANR	146773	Identifier	format		146745	0					
ANR	146774	Argument	args		146745	4					
ANR	146775	Identifier	args		146745	0					
ANR	146776	ExpressionStatement	va_end ( args )	978:1:30509:30521	146745	3	True				
ANR	146777	CallExpression	va_end ( args )		146745	0					
ANR	146778	Callee	va_end		146745	0					
ANR	146779	Identifier	va_end		146745	0					
ANR	146780	ArgumentList	args		146745	1					
ANR	146781	Argument	args		146745	0					
ANR	146782	Identifier	args		146745	0					
ANR	146783	ReturnType	static void		146745	1					
ANR	146784	Identifier	zend_error_va		146745	2					
ANR	146785	ParameterList	"int type , const char * file , uint lineno , const char * format"		146745	3					
ANR	146786	Parameter	int type	972:26:30339:30346	146745	0	True				
ANR	146787	ParameterType	int		146745	0					
ANR	146788	Identifier	type		146745	1					
ANR	146789	Parameter	const char * file	972:36:30349:30364	146745	1	True				
ANR	146790	ParameterType	const char *		146745	0					
ANR	146791	Identifier	file		146745	1					
ANR	146792	Parameter	uint lineno	972:54:30367:30377	146745	2	True				
ANR	146793	ParameterType	uint		146745	0					
ANR	146794	Identifier	lineno		146745	1					
ANR	146795	Parameter	const char * format	972:67:30380:30397	146745	3	True				
ANR	146796	ParameterType	const char *		146745	0					
ANR	146797	Identifier	format		146745	1					
ANR	146798	CFGEntryNode	ENTRY		146745		True				
ANR	146799	CFGExitNode	EXIT		146745		True				
ANR	146800	Symbol	args		146745						
ANR	146801	Symbol	file		146745						
ANR	146802	Symbol	lineno		146745						
ANR	146803	Symbol	format		146745						
ANR	146804	Symbol	type		146745						
ANR	146805	Function	zend_error_helper	982:0:30536:30746							
ANR	146806	FunctionDef	"zend_error_helper (int type , const char * filename , const uint lineno , const char * format)"		146805	0					
ANR	146807	CompoundStatement		983:0:30642:30746	146805	0					
ANR	146808	IdentifierDeclStatement	va_list va ;	984:1:30645:30655	146805	0	True				
ANR	146809	IdentifierDecl	va		146805	0					
ANR	146810	IdentifierDeclType	va_list		146805	0					
ANR	146811	Identifier	va		146805	1					
ANR	146812	ExpressionStatement	"va_start ( va , format )"	986:1:30659:30679	146805	1	True				
ANR	146813	CallExpression	"va_start ( va , format )"		146805	0					
ANR	146814	Callee	va_start		146805	0					
ANR	146815	Identifier	va_start		146805	0					
ANR	146816	ArgumentList	va		146805	1					
ANR	146817	Argument	va		146805	0					
ANR	146818	Identifier	va		146805	0					
ANR	146819	Argument	format		146805	1					
ANR	146820	Identifier	format		146805	0					
ANR	146821	ExpressionStatement	"zend_error_cb ( type , filename , lineno , format , va )"	987:1:30682:30731	146805	2	True				
ANR	146822	CallExpression	"zend_error_cb ( type , filename , lineno , format , va )"		146805	0					
ANR	146823	Callee	zend_error_cb		146805	0					
ANR	146824	Identifier	zend_error_cb		146805	0					
ANR	146825	ArgumentList	type		146805	1					
ANR	146826	Argument	type		146805	0					
ANR	146827	Identifier	type		146805	0					
ANR	146828	Argument	filename		146805	1					
ANR	146829	Identifier	filename		146805	0					
ANR	146830	Argument	lineno		146805	2					
ANR	146831	Identifier	lineno		146805	0					
ANR	146832	Argument	format		146805	3					
ANR	146833	Identifier	format		146805	0					
ANR	146834	Argument	va		146805	4					
ANR	146835	Identifier	va		146805	0					
ANR	146836	ExpressionStatement	va_end ( va )	988:1:30734:30744	146805	3	True				
ANR	146837	CallExpression	va_end ( va )		146805	0					
ANR	146838	Callee	va_end		146805	0					
ANR	146839	Identifier	va_end		146805	0					
ANR	146840	ArgumentList	va		146805	1					
ANR	146841	Argument	va		146805	0					
ANR	146842	Identifier	va		146805	0					
ANR	146843	ReturnType	static void		146805	1					
ANR	146844	Identifier	zend_error_helper		146805	2					
ANR	146845	ParameterList	"int type , const char * filename , const uint lineno , const char * format"		146805	3					
ANR	146846	Parameter	int type	982:30:30566:30573	146805	0	True				
ANR	146847	ParameterType	int		146805	0					
ANR	146848	Identifier	type		146805	1					
ANR	146849	Parameter	const char * filename	982:40:30576:30595	146805	1	True				
ANR	146850	ParameterType	const char *		146805	0					
ANR	146851	Identifier	filename		146805	1					
ANR	146852	Parameter	const uint lineno	982:62:30598:30614	146805	2	True				
ANR	146853	ParameterType	const uint		146805	0					
ANR	146854	Identifier	lineno		146805	1					
ANR	146855	Parameter	const char * format	982:81:30617:30634	146805	3	True				
ANR	146856	ParameterType	const char *		146805	0					
ANR	146857	Identifier	format		146805	1					
ANR	146858	CFGEntryNode	ENTRY		146805		True				
ANR	146859	CFGExitNode	EXIT		146805		True				
ANR	146860	Symbol	filename		146805						
ANR	146861	Symbol	lineno		146805						
ANR	146862	Symbol	format		146805						
ANR	146863	Symbol	va		146805						
ANR	146864	Symbol	type		146805						
ANR	146865	Function	zend_exception_error	992:0:30803:33147							
ANR	146866	FunctionDef	"zend_exception_error (zend_object * ex , int severity)"		146865	0					
ANR	146867	CompoundStatement		993:0:30889:33147	146865	0					
ANR	146868	IdentifierDeclStatement	"zval exception , rv ;"	994:1:30892:30910	146865	0	True				
ANR	146869	IdentifierDecl	exception		146865	0					
ANR	146870	IdentifierDeclType	zval		146865	0					
ANR	146871	Identifier	exception		146865	1					
ANR	146872	IdentifierDecl	rv		146865	1					
ANR	146873	IdentifierDeclType	zval		146865	0					
ANR	146874	Identifier	rv		146865	1					
ANR	146875	IdentifierDeclStatement	zend_class_entry * ce_exception ;	995:1:30913:30943	146865	1	True				
ANR	146876	IdentifierDecl	* ce_exception		146865	0					
ANR	146877	IdentifierDeclType	zend_class_entry *		146865	0					
ANR	146878	Identifier	ce_exception		146865	1					
ANR	146879	ExpressionStatement	"ZVAL_OBJ ( & exception , ex )"	997:1:30947:30971	146865	2	True				
ANR	146880	CallExpression	"ZVAL_OBJ ( & exception , ex )"		146865	0					
ANR	146881	Callee	ZVAL_OBJ		146865	0					
ANR	146882	Identifier	ZVAL_OBJ		146865	0					
ANR	146883	ArgumentList	& exception		146865	1					
ANR	146884	Argument	& exception		146865	0					
ANR	146885	UnaryOperationExpression	& exception		146865	0					
ANR	146886	UnaryOperator	&		146865	0					
ANR	146887	Identifier	exception		146865	1					
ANR	146888	Argument	ex		146865	1					
ANR	146889	Identifier	ex		146865	0					
ANR	146890	ExpressionStatement	ce_exception = Z_OBJCE ( exception )	998:1:30974:31007	146865	3	True				
ANR	146891	AssignmentExpression	ce_exception = Z_OBJCE ( exception )		146865	0		=			
ANR	146892	Identifier	ce_exception		146865	0					
ANR	146893	CallExpression	Z_OBJCE ( exception )		146865	1					
ANR	146894	Callee	Z_OBJCE		146865	0					
ANR	146895	Identifier	Z_OBJCE		146865	0					
ANR	146896	ArgumentList	exception		146865	1					
ANR	146897	Argument	exception		146865	0					
ANR	146898	Identifier	exception		146865	0					
ANR	146899	ExpressionStatement	EG ( exception ) = NULL	999:1:31010:31030	146865	4	True				
ANR	146900	AssignmentExpression	EG ( exception ) = NULL		146865	0		=			
ANR	146901	CallExpression	EG ( exception )		146865	0					
ANR	146902	Callee	EG		146865	0					
ANR	146903	Identifier	EG		146865	0					
ANR	146904	ArgumentList	exception		146865	1					
ANR	146905	Argument	exception		146865	0					
ANR	146906	Identifier	exception		146865	0					
ANR	146907	Identifier	NULL		146865	1					
ANR	146908	IfStatement	if ( ce_exception == zend_ce_parse_error )		146865	5					
ANR	146909	Condition	ce_exception == zend_ce_parse_error	1000:5:31037:31071	146865	0	True				
ANR	146910	EqualityExpression	ce_exception == zend_ce_parse_error		146865	0		==			
ANR	146911	Identifier	ce_exception		146865	0					
ANR	146912	Identifier	zend_ce_parse_error		146865	1					
ANR	146913	CompoundStatement		11:2:347:418	146865	1					
ANR	146914	IdentifierDeclStatement	"zend_string * message = zval_get_string ( GET_PROPERTY ( & exception , ""message"" ) ) ;"	1001:2:31078:31153	146865	0	True				
ANR	146915	IdentifierDecl	"* message = zval_get_string ( GET_PROPERTY ( & exception , ""message"" ) )"		146865	0					
ANR	146916	IdentifierDeclType	zend_string *		146865	0					
ANR	146917	Identifier	message		146865	1					
ANR	146918	AssignmentExpression	"* message = zval_get_string ( GET_PROPERTY ( & exception , ""message"" ) )"		146865	2		=			
ANR	146919	Identifier	message		146865	0					
ANR	146920	CallExpression	"zval_get_string ( GET_PROPERTY ( & exception , ""message"" ) )"		146865	1					
ANR	146921	Callee	zval_get_string		146865	0					
ANR	146922	Identifier	zval_get_string		146865	0					
ANR	146923	ArgumentList	"GET_PROPERTY ( & exception , ""message"" )"		146865	1					
ANR	146924	Argument	"GET_PROPERTY ( & exception , ""message"" )"		146865	0					
ANR	146925	CallExpression	"GET_PROPERTY ( & exception , ""message"" )"		146865	0					
ANR	146926	Callee	GET_PROPERTY		146865	0					
ANR	146927	Identifier	GET_PROPERTY		146865	0					
ANR	146928	ArgumentList	& exception		146865	1					
ANR	146929	Argument	& exception		146865	0					
ANR	146930	UnaryOperationExpression	& exception		146865	0					
ANR	146931	UnaryOperator	&		146865	0					
ANR	146932	Identifier	exception		146865	1					
ANR	146933	Argument	"""message"""		146865	1					
ANR	146934	PrimaryExpression	"""message"""		146865	0					
ANR	146935	IdentifierDeclStatement	"zend_string * file = zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""file"" ) ) ;"	1002:2:31157:31233	146865	1	True				
ANR	146936	IdentifierDecl	"* file = zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""file"" ) )"		146865	0					
ANR	146937	IdentifierDeclType	zend_string *		146865	0					
ANR	146938	Identifier	file		146865	1					
ANR	146939	AssignmentExpression	"* file = zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""file"" ) )"		146865	2		=			
ANR	146940	Identifier	file		146865	0					
ANR	146941	CallExpression	"zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""file"" ) )"		146865	1					
ANR	146942	Callee	zval_get_string		146865	0					
ANR	146943	Identifier	zval_get_string		146865	0					
ANR	146944	ArgumentList	"GET_PROPERTY_SILENT ( & exception , ""file"" )"		146865	1					
ANR	146945	Argument	"GET_PROPERTY_SILENT ( & exception , ""file"" )"		146865	0					
ANR	146946	CallExpression	"GET_PROPERTY_SILENT ( & exception , ""file"" )"		146865	0					
ANR	146947	Callee	GET_PROPERTY_SILENT		146865	0					
ANR	146948	Identifier	GET_PROPERTY_SILENT		146865	0					
ANR	146949	ArgumentList	& exception		146865	1					
ANR	146950	Argument	& exception		146865	0					
ANR	146951	UnaryOperationExpression	& exception		146865	0					
ANR	146952	UnaryOperator	&		146865	0					
ANR	146953	Identifier	exception		146865	1					
ANR	146954	Argument	"""file"""		146865	1					
ANR	146955	PrimaryExpression	"""file"""		146865	0					
ANR	146956	IdentifierDeclStatement	"zend_long line = zval_get_long ( GET_PROPERTY_SILENT ( & exception , ""line"" ) ) ;"	1003:2:31237:31308	146865	2	True				
ANR	146957	IdentifierDecl	"line = zval_get_long ( GET_PROPERTY_SILENT ( & exception , ""line"" ) )"		146865	0					
ANR	146958	IdentifierDeclType	zend_long		146865	0					
ANR	146959	Identifier	line		146865	1					
ANR	146960	AssignmentExpression	"line = zval_get_long ( GET_PROPERTY_SILENT ( & exception , ""line"" ) )"		146865	2		=			
ANR	146961	Identifier	line		146865	0					
ANR	146962	CallExpression	"zval_get_long ( GET_PROPERTY_SILENT ( & exception , ""line"" ) )"		146865	1					
ANR	146963	Callee	zval_get_long		146865	0					
ANR	146964	Identifier	zval_get_long		146865	0					
ANR	146965	ArgumentList	"GET_PROPERTY_SILENT ( & exception , ""line"" )"		146865	1					
ANR	146966	Argument	"GET_PROPERTY_SILENT ( & exception , ""line"" )"		146865	0					
ANR	146967	CallExpression	"GET_PROPERTY_SILENT ( & exception , ""line"" )"		146865	0					
ANR	146968	Callee	GET_PROPERTY_SILENT		146865	0					
ANR	146969	Identifier	GET_PROPERTY_SILENT		146865	0					
ANR	146970	ArgumentList	& exception		146865	1					
ANR	146971	Argument	& exception		146865	0					
ANR	146972	UnaryOperationExpression	& exception		146865	0					
ANR	146973	UnaryOperator	&		146865	0					
ANR	146974	Identifier	exception		146865	1					
ANR	146975	Argument	"""line"""		146865	1					
ANR	146976	PrimaryExpression	"""line"""		146865	0					
ANR	146977	ExpressionStatement	"zend_error_helper ( E_PARSE , ZSTR_VAL ( file ) , line , ""%s"" , ZSTR_VAL ( message ) )"	1005:2:31313:31386	146865	3	True				
ANR	146978	CallExpression	"zend_error_helper ( E_PARSE , ZSTR_VAL ( file ) , line , ""%s"" , ZSTR_VAL ( message ) )"		146865	0					
ANR	146979	Callee	zend_error_helper		146865	0					
ANR	146980	Identifier	zend_error_helper		146865	0					
ANR	146981	ArgumentList	E_PARSE		146865	1					
ANR	146982	Argument	E_PARSE		146865	0					
ANR	146983	Identifier	E_PARSE		146865	0					
ANR	146984	Argument	ZSTR_VAL ( file )		146865	1					
ANR	146985	CallExpression	ZSTR_VAL ( file )		146865	0					
ANR	146986	Callee	ZSTR_VAL		146865	0					
ANR	146987	Identifier	ZSTR_VAL		146865	0					
ANR	146988	ArgumentList	file		146865	1					
ANR	146989	Argument	file		146865	0					
ANR	146990	Identifier	file		146865	0					
ANR	146991	Argument	line		146865	2					
ANR	146992	Identifier	line		146865	0					
ANR	146993	Argument	"""%s"""		146865	3					
ANR	146994	PrimaryExpression	"""%s"""		146865	0					
ANR	146995	Argument	ZSTR_VAL ( message )		146865	4					
ANR	146996	CallExpression	ZSTR_VAL ( message )		146865	0					
ANR	146997	Callee	ZSTR_VAL		146865	0					
ANR	146998	Identifier	ZSTR_VAL		146865	0					
ANR	146999	ArgumentList	message		146865	1					
ANR	147000	Argument	message		146865	0					
ANR	147001	Identifier	message		146865	0					
ANR	147002	ExpressionStatement	zend_string_release ( file )	1007:2:31391:31416	146865	4	True				
ANR	147003	CallExpression	zend_string_release ( file )		146865	0					
ANR	147004	Callee	zend_string_release		146865	0					
ANR	147005	Identifier	zend_string_release		146865	0					
ANR	147006	ArgumentList	file		146865	1					
ANR	147007	Argument	file		146865	0					
ANR	147008	Identifier	file		146865	0					
ANR	147009	ExpressionStatement	zend_string_release ( message )	1008:2:31420:31448	146865	5	True				
ANR	147010	CallExpression	zend_string_release ( message )		146865	0					
ANR	147011	Callee	zend_string_release		146865	0					
ANR	147012	Identifier	zend_string_release		146865	0					
ANR	147013	ArgumentList	message		146865	1					
ANR	147014	Argument	message		146865	0					
ANR	147015	Identifier	message		146865	0					
ANR	147016	ElseStatement	else		146865	0					
ANR	147017	IfStatement	"if ( instanceof_function ( ce_exception , zend_ce_throwable ) )"		146865	0					
ANR	147018	Condition	"instanceof_function ( ce_exception , zend_ce_throwable )"	1009:12:31462:31513	146865	0	True				
ANR	147019	CallExpression	"instanceof_function ( ce_exception , zend_ce_throwable )"		146865	0					
ANR	147020	Callee	instanceof_function		146865	0					
ANR	147021	Identifier	instanceof_function		146865	0					
ANR	147022	ArgumentList	ce_exception		146865	1					
ANR	147023	Argument	ce_exception		146865	0					
ANR	147024	Identifier	ce_exception		146865	0					
ANR	147025	Argument	zend_ce_throwable		146865	1					
ANR	147026	Identifier	zend_ce_throwable		146865	0					
ANR	147027	CompoundStatement		20:2:680:698	146865	1					
ANR	147028	IdentifierDeclStatement	"zval tmp , rv ;"	1010:2:31520:31532	146865	0	True				
ANR	147029	IdentifierDecl	tmp		146865	0					
ANR	147030	IdentifierDeclType	zval		146865	0					
ANR	147031	Identifier	tmp		146865	1					
ANR	147032	IdentifierDecl	rv		146865	1					
ANR	147033	IdentifierDeclType	zval		146865	0					
ANR	147034	Identifier	rv		146865	1					
ANR	147035	IdentifierDeclStatement	"zend_string * str , * file = NULL ;"	1011:2:31536:31566	146865	1	True				
ANR	147036	IdentifierDecl	* str		146865	0					
ANR	147037	IdentifierDeclType	zend_string *		146865	0					
ANR	147038	Identifier	str		146865	1					
ANR	147039	IdentifierDecl	* file = NULL		146865	1					
ANR	147040	IdentifierDeclType	zend_string *		146865	0					
ANR	147041	Identifier	file		146865	1					
ANR	147042	AssignmentExpression	* file = NULL		146865	2		=			
ANR	147043	Identifier	NULL		146865	0					
ANR	147044	Identifier	NULL		146865	1					
ANR	147045	IdentifierDeclStatement	zend_long line = 0 ;	1012:2:31570:31588	146865	2	True				
ANR	147046	IdentifierDecl	line = 0		146865	0					
ANR	147047	IdentifierDeclType	zend_long		146865	0					
ANR	147048	Identifier	line		146865	1					
ANR	147049	AssignmentExpression	line = 0		146865	2		=			
ANR	147050	Identifier	line		146865	0					
ANR	147051	PrimaryExpression	0		146865	1					
ANR	147052	ExpressionStatement	"zend_call_method_with_0_params ( & exception , ce_exception , NULL , ""__tostring"" , & tmp )"	1014:2:31593:31675	146865	3	True				
ANR	147053	CallExpression	"zend_call_method_with_0_params ( & exception , ce_exception , NULL , ""__tostring"" , & tmp )"		146865	0					
ANR	147054	Callee	zend_call_method_with_0_params		146865	0					
ANR	147055	Identifier	zend_call_method_with_0_params		146865	0					
ANR	147056	ArgumentList	& exception		146865	1					
ANR	147057	Argument	& exception		146865	0					
ANR	147058	UnaryOperationExpression	& exception		146865	0					
ANR	147059	UnaryOperator	&		146865	0					
ANR	147060	Identifier	exception		146865	1					
ANR	147061	Argument	ce_exception		146865	1					
ANR	147062	Identifier	ce_exception		146865	0					
ANR	147063	Argument	NULL		146865	2					
ANR	147064	Identifier	NULL		146865	0					
ANR	147065	Argument	"""__tostring"""		146865	3					
ANR	147066	PrimaryExpression	"""__tostring"""		146865	0					
ANR	147067	Argument	& tmp		146865	4					
ANR	147068	UnaryOperationExpression	& tmp		146865	0					
ANR	147069	UnaryOperator	&		146865	0					
ANR	147070	Identifier	tmp		146865	1					
ANR	147071	IfStatement	if ( ! EG ( exception ) )		146865	4					
ANR	147072	Condition	! EG ( exception )	1015:6:31683:31696	146865	0	True				
ANR	147073	UnaryOperationExpression	! EG ( exception )		146865	0					
ANR	147074	UnaryOperator	!		146865	0					
ANR	147075	CallExpression	EG ( exception )		146865	1					
ANR	147076	Callee	EG		146865	0					
ANR	147077	Identifier	EG		146865	0					
ANR	147078	ArgumentList	exception		146865	1					
ANR	147079	Argument	exception		146865	0					
ANR	147080	Identifier	exception		146865	0					
ANR	147081	CompoundStatement		23:22:809:809	146865	1					
ANR	147082	IfStatement	if ( Z_TYPE ( tmp ) != IS_STRING )		146865	0					
ANR	147083	Condition	Z_TYPE ( tmp ) != IS_STRING	1016:7:31708:31731	146865	0	True				
ANR	147084	EqualityExpression	Z_TYPE ( tmp ) != IS_STRING		146865	0		!=			
ANR	147085	CallExpression	Z_TYPE ( tmp )		146865	0					
ANR	147086	Callee	Z_TYPE		146865	0					
ANR	147087	Identifier	Z_TYPE		146865	0					
ANR	147088	ArgumentList	tmp		146865	1					
ANR	147089	Argument	tmp		146865	0					
ANR	147090	Identifier	tmp		146865	0					
ANR	147091	Identifier	IS_STRING		146865	1					
ANR	147092	CompoundStatement		24:33:844:844	146865	1					
ANR	147093	ExpressionStatement	"zend_error ( E_WARNING , ""%s::__toString() must return a string"" , ZSTR_VAL ( ce_exception -> name ) )"	1017:4:31740:31832	146865	0	True				
ANR	147094	CallExpression	"zend_error ( E_WARNING , ""%s::__toString() must return a string"" , ZSTR_VAL ( ce_exception -> name ) )"		146865	0					
ANR	147095	Callee	zend_error		146865	0					
ANR	147096	Identifier	zend_error		146865	0					
ANR	147097	ArgumentList	E_WARNING		146865	1					
ANR	147098	Argument	E_WARNING		146865	0					
ANR	147099	Identifier	E_WARNING		146865	0					
ANR	147100	Argument	"""%s::__toString() must return a string"""		146865	1					
ANR	147101	PrimaryExpression	"""%s::__toString() must return a string"""		146865	0					
ANR	147102	Argument	ZSTR_VAL ( ce_exception -> name )		146865	2					
ANR	147103	CallExpression	ZSTR_VAL ( ce_exception -> name )		146865	0					
ANR	147104	Callee	ZSTR_VAL		146865	0					
ANR	147105	Identifier	ZSTR_VAL		146865	0					
ANR	147106	ArgumentList	ce_exception -> name		146865	1					
ANR	147107	Argument	ce_exception -> name		146865	0					
ANR	147108	PtrMemberAccess	ce_exception -> name		146865	0					
ANR	147109	Identifier	ce_exception		146865	0					
ANR	147110	Identifier	name		146865	1					
ANR	147111	ElseStatement	else		146865	0					
ANR	147112	CompoundStatement		26:10:954:954	146865	0					
ANR	147113	ExpressionStatement	"zend_update_property ( i_get_exception_base ( & exception ) , & exception , ""string"" , sizeof ( ""string"" ) - 1 , & tmp )"	1019:4:31850:31952	146865	0	True				
ANR	147114	CallExpression	"zend_update_property ( i_get_exception_base ( & exception ) , & exception , ""string"" , sizeof ( ""string"" ) - 1 , & tmp )"		146865	0					
ANR	147115	Callee	zend_update_property		146865	0					
ANR	147116	Identifier	zend_update_property		146865	0					
ANR	147117	ArgumentList	i_get_exception_base ( & exception )		146865	1					
ANR	147118	Argument	i_get_exception_base ( & exception )		146865	0					
ANR	147119	CallExpression	i_get_exception_base ( & exception )		146865	0					
ANR	147120	Callee	i_get_exception_base		146865	0					
ANR	147121	Identifier	i_get_exception_base		146865	0					
ANR	147122	ArgumentList	& exception		146865	1					
ANR	147123	Argument	& exception		146865	0					
ANR	147124	UnaryOperationExpression	& exception		146865	0					
ANR	147125	UnaryOperator	&		146865	0					
ANR	147126	Identifier	exception		146865	1					
ANR	147127	Argument	& exception		146865	1					
ANR	147128	UnaryOperationExpression	& exception		146865	0					
ANR	147129	UnaryOperator	&		146865	0					
ANR	147130	Identifier	exception		146865	1					
ANR	147131	Argument	"""string"""		146865	2					
ANR	147132	PrimaryExpression	"""string"""		146865	0					
ANR	147133	Argument	"sizeof ( ""string"" ) - 1"		146865	3					
ANR	147134	AdditiveExpression	"sizeof ( ""string"" ) - 1"		146865	0		-			
ANR	147135	SizeofExpression	"sizeof ( ""string"" )"		146865	0					
ANR	147136	Sizeof	sizeof		146865	0					
ANR	147137	PrimaryExpression	"""string"""		146865	1					
ANR	147138	PrimaryExpression	1		146865	1					
ANR	147139	Argument	& tmp		146865	4					
ANR	147140	UnaryOperationExpression	& tmp		146865	0					
ANR	147141	UnaryOperator	&		146865	0					
ANR	147142	Identifier	tmp		146865	1					
ANR	147143	ExpressionStatement	zval_ptr_dtor ( & tmp )	1022:2:31965:31984	146865	5	True				
ANR	147144	CallExpression	zval_ptr_dtor ( & tmp )		146865	0					
ANR	147145	Callee	zval_ptr_dtor		146865	0					
ANR	147146	Identifier	zval_ptr_dtor		146865	0					
ANR	147147	ArgumentList	& tmp		146865	1					
ANR	147148	Argument	& tmp		146865	0					
ANR	147149	UnaryOperationExpression	& tmp		146865	0					
ANR	147150	UnaryOperator	&		146865	0					
ANR	147151	Identifier	tmp		146865	1					
ANR	147152	IfStatement	if ( EG ( exception ) )		146865	6					
ANR	147153	Condition	EG ( exception )	1024:6:31993:32005	146865	0	True				
ANR	147154	CallExpression	EG ( exception )		146865	0					
ANR	147155	Callee	EG		146865	0					
ANR	147156	Identifier	EG		146865	0					
ANR	147157	ArgumentList	exception		146865	1					
ANR	147158	Argument	exception		146865	0					
ANR	147159	Identifier	exception		146865	0					
ANR	147160	CompoundStatement		33:3:1123:1130	146865	1					
ANR	147161	IdentifierDeclStatement	zval zv ;	1025:3:32013:32020	146865	0	True				
ANR	147162	IdentifierDecl	zv		146865	0					
ANR	147163	IdentifierDeclType	zval		146865	0					
ANR	147164	Identifier	zv		146865	1					
ANR	147165	ExpressionStatement	"ZVAL_OBJ ( & zv , EG ( exception ) )"	1027:3:32026:32054	146865	1	True				
ANR	147166	CallExpression	"ZVAL_OBJ ( & zv , EG ( exception ) )"		146865	0					
ANR	147167	Callee	ZVAL_OBJ		146865	0					
ANR	147168	Identifier	ZVAL_OBJ		146865	0					
ANR	147169	ArgumentList	& zv		146865	1					
ANR	147170	Argument	& zv		146865	0					
ANR	147171	UnaryOperationExpression	& zv		146865	0					
ANR	147172	UnaryOperator	&		146865	0					
ANR	147173	Identifier	zv		146865	1					
ANR	147174	Argument	EG ( exception )		146865	1					
ANR	147175	CallExpression	EG ( exception )		146865	0					
ANR	147176	Callee	EG		146865	0					
ANR	147177	Identifier	EG		146865	0					
ANR	147178	ArgumentList	exception		146865	1					
ANR	147179	Argument	exception		146865	0					
ANR	147180	Identifier	exception		146865	0					
ANR	147181	IfStatement	"if ( instanceof_function ( ce_exception , zend_ce_exception ) || instanceof_function ( ce_exception , zend_ce_error ) )"		146865	2					
ANR	147182	Condition	"instanceof_function ( ce_exception , zend_ce_exception ) || instanceof_function ( ce_exception , zend_ce_error )"	1029:7:32127:32230	146865	0	True				
ANR	147183	OrExpression	"instanceof_function ( ce_exception , zend_ce_exception ) || instanceof_function ( ce_exception , zend_ce_error )"		146865	0		||			
ANR	147184	CallExpression	"instanceof_function ( ce_exception , zend_ce_exception )"		146865	0					
ANR	147185	Callee	instanceof_function		146865	0					
ANR	147186	Identifier	instanceof_function		146865	0					
ANR	147187	ArgumentList	ce_exception		146865	1					
ANR	147188	Argument	ce_exception		146865	0					
ANR	147189	Identifier	ce_exception		146865	0					
ANR	147190	Argument	zend_ce_exception		146865	1					
ANR	147191	Identifier	zend_ce_exception		146865	0					
ANR	147192	CallExpression	"instanceof_function ( ce_exception , zend_ce_error )"		146865	1					
ANR	147193	Callee	instanceof_function		146865	0					
ANR	147194	Identifier	instanceof_function		146865	0					
ANR	147195	ArgumentList	ce_exception		146865	1					
ANR	147196	Argument	ce_exception		146865	0					
ANR	147197	Identifier	ce_exception		146865	0					
ANR	147198	Argument	zend_ce_error		146865	1					
ANR	147199	Identifier	zend_ce_error		146865	0					
ANR	147200	CompoundStatement		37:113:1343:1343	146865	1					
ANR	147201	ExpressionStatement	"file = zval_get_string ( GET_PROPERTY_SILENT ( & zv , ""file"" ) )"	1030:4:32239:32295	146865	0	True				
ANR	147202	AssignmentExpression	"file = zval_get_string ( GET_PROPERTY_SILENT ( & zv , ""file"" ) )"		146865	0		=			
ANR	147203	Identifier	file		146865	0					
ANR	147204	CallExpression	"zval_get_string ( GET_PROPERTY_SILENT ( & zv , ""file"" ) )"		146865	1					
ANR	147205	Callee	zval_get_string		146865	0					
ANR	147206	Identifier	zval_get_string		146865	0					
ANR	147207	ArgumentList	"GET_PROPERTY_SILENT ( & zv , ""file"" )"		146865	1					
ANR	147208	Argument	"GET_PROPERTY_SILENT ( & zv , ""file"" )"		146865	0					
ANR	147209	CallExpression	"GET_PROPERTY_SILENT ( & zv , ""file"" )"		146865	0					
ANR	147210	Callee	GET_PROPERTY_SILENT		146865	0					
ANR	147211	Identifier	GET_PROPERTY_SILENT		146865	0					
ANR	147212	ArgumentList	& zv		146865	1					
ANR	147213	Argument	& zv		146865	0					
ANR	147214	UnaryOperationExpression	& zv		146865	0					
ANR	147215	UnaryOperator	&		146865	0					
ANR	147216	Identifier	zv		146865	1					
ANR	147217	Argument	"""file"""		146865	1					
ANR	147218	PrimaryExpression	"""file"""		146865	0					
ANR	147219	ExpressionStatement	"line = zval_get_long ( GET_PROPERTY_SILENT ( & zv , ""line"" ) )"	1031:4:32301:32355	146865	1	True				
ANR	147220	AssignmentExpression	"line = zval_get_long ( GET_PROPERTY_SILENT ( & zv , ""line"" ) )"		146865	0		=			
ANR	147221	Identifier	line		146865	0					
ANR	147222	CallExpression	"zval_get_long ( GET_PROPERTY_SILENT ( & zv , ""line"" ) )"		146865	1					
ANR	147223	Callee	zval_get_long		146865	0					
ANR	147224	Identifier	zval_get_long		146865	0					
ANR	147225	ArgumentList	"GET_PROPERTY_SILENT ( & zv , ""line"" )"		146865	1					
ANR	147226	Argument	"GET_PROPERTY_SILENT ( & zv , ""line"" )"		146865	0					
ANR	147227	CallExpression	"GET_PROPERTY_SILENT ( & zv , ""line"" )"		146865	0					
ANR	147228	Callee	GET_PROPERTY_SILENT		146865	0					
ANR	147229	Identifier	GET_PROPERTY_SILENT		146865	0					
ANR	147230	ArgumentList	& zv		146865	1					
ANR	147231	Argument	& zv		146865	0					
ANR	147232	UnaryOperationExpression	& zv		146865	0					
ANR	147233	UnaryOperator	&		146865	0					
ANR	147234	Identifier	zv		146865	1					
ANR	147235	Argument	"""line"""		146865	1					
ANR	147236	PrimaryExpression	"""line"""		146865	0					
ANR	147237	ExpressionStatement	"zend_error_va ( E_WARNING , ( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL , line , ""Uncaught %s in exception handling during call to %s::__tostring()"" , ZSTR_VAL ( Z_OBJCE ( zv ) -> name ) , ZSTR_VAL ( ce_exception -> name ) )"	1034:3:32366:32586	146865	3	True				
ANR	147238	CallExpression	"zend_error_va ( E_WARNING , ( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL , line , ""Uncaught %s in exception handling during call to %s::__tostring()"" , ZSTR_VAL ( Z_OBJCE ( zv ) -> name ) , ZSTR_VAL ( ce_exception -> name ) )"		146865	0					
ANR	147239	Callee	zend_error_va		146865	0					
ANR	147240	Identifier	zend_error_va		146865	0					
ANR	147241	ArgumentList	E_WARNING		146865	1					
ANR	147242	Argument	E_WARNING		146865	0					
ANR	147243	Identifier	E_WARNING		146865	0					
ANR	147244	Argument	( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL		146865	1					
ANR	147245	ConditionalExpression	( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL		146865	0					
ANR	147246	Condition	file && ZSTR_LEN ( file ) > 0		146865	0					
ANR	147247	AndExpression	file && ZSTR_LEN ( file ) > 0		146865	0		&&			
ANR	147248	Identifier	file		146865	0					
ANR	147249	RelationalExpression	ZSTR_LEN ( file ) > 0		146865	1		>			
ANR	147250	CallExpression	ZSTR_LEN ( file )		146865	0					
ANR	147251	Callee	ZSTR_LEN		146865	0					
ANR	147252	Identifier	ZSTR_LEN		146865	0					
ANR	147253	ArgumentList	file		146865	1					
ANR	147254	Argument	file		146865	0					
ANR	147255	Identifier	file		146865	0					
ANR	147256	PrimaryExpression	0		146865	1					
ANR	147257	CallExpression	ZSTR_VAL ( file )		146865	1					
ANR	147258	Callee	ZSTR_VAL		146865	0					
ANR	147259	Identifier	ZSTR_VAL		146865	0					
ANR	147260	ArgumentList	file		146865	1					
ANR	147261	Argument	file		146865	0					
ANR	147262	Identifier	file		146865	0					
ANR	147263	Identifier	NULL		146865	2					
ANR	147264	Argument	line		146865	2					
ANR	147265	Identifier	line		146865	0					
ANR	147266	Argument	"""Uncaught %s in exception handling during call to %s::__tostring()"""		146865	3					
ANR	147267	PrimaryExpression	"""Uncaught %s in exception handling during call to %s::__tostring()"""		146865	0					
ANR	147268	Argument	ZSTR_VAL ( Z_OBJCE ( zv ) -> name )		146865	4					
ANR	147269	CallExpression	ZSTR_VAL ( Z_OBJCE ( zv ) -> name )		146865	0					
ANR	147270	Callee	ZSTR_VAL		146865	0					
ANR	147271	Identifier	ZSTR_VAL		146865	0					
ANR	147272	ArgumentList	Z_OBJCE ( zv ) -> name		146865	1					
ANR	147273	Argument	Z_OBJCE ( zv ) -> name		146865	0					
ANR	147274	PtrMemberAccess	Z_OBJCE ( zv ) -> name		146865	0					
ANR	147275	CallExpression	Z_OBJCE ( zv )		146865	0					
ANR	147276	Callee	Z_OBJCE		146865	0					
ANR	147277	Identifier	Z_OBJCE		146865	0					
ANR	147278	ArgumentList	zv		146865	1					
ANR	147279	Argument	zv		146865	0					
ANR	147280	Identifier	zv		146865	0					
ANR	147281	Identifier	name		146865	1					
ANR	147282	Argument	ZSTR_VAL ( ce_exception -> name )		146865	5					
ANR	147283	CallExpression	ZSTR_VAL ( ce_exception -> name )		146865	0					
ANR	147284	Callee	ZSTR_VAL		146865	0					
ANR	147285	Identifier	ZSTR_VAL		146865	0					
ANR	147286	ArgumentList	ce_exception -> name		146865	1					
ANR	147287	Argument	ce_exception -> name		146865	0					
ANR	147288	PtrMemberAccess	ce_exception -> name		146865	0					
ANR	147289	Identifier	ce_exception		146865	0					
ANR	147290	Identifier	name		146865	1					
ANR	147291	IfStatement	if ( file )		146865	4					
ANR	147292	Condition	file	1038:7:32596:32599	146865	0	True				
ANR	147293	Identifier	file		146865	0					
ANR	147294	CompoundStatement		46:13:1712:1712	146865	1					
ANR	147295	ExpressionStatement	zend_string_release ( file )	1039:4:32608:32633	146865	0	True				
ANR	147296	CallExpression	zend_string_release ( file )		146865	0					
ANR	147297	Callee	zend_string_release		146865	0					
ANR	147298	Identifier	zend_string_release		146865	0					
ANR	147299	ArgumentList	file		146865	1					
ANR	147300	Argument	file		146865	0					
ANR	147301	Identifier	file		146865	0					
ANR	147302	ExpressionStatement	"str = zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""string"" ) )"	1043:2:32647:32711	146865	7	True				
ANR	147303	AssignmentExpression	"str = zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""string"" ) )"		146865	0		=			
ANR	147304	Identifier	str		146865	0					
ANR	147305	CallExpression	"zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""string"" ) )"		146865	1					
ANR	147306	Callee	zval_get_string		146865	0					
ANR	147307	Identifier	zval_get_string		146865	0					
ANR	147308	ArgumentList	"GET_PROPERTY_SILENT ( & exception , ""string"" )"		146865	1					
ANR	147309	Argument	"GET_PROPERTY_SILENT ( & exception , ""string"" )"		146865	0					
ANR	147310	CallExpression	"GET_PROPERTY_SILENT ( & exception , ""string"" )"		146865	0					
ANR	147311	Callee	GET_PROPERTY_SILENT		146865	0					
ANR	147312	Identifier	GET_PROPERTY_SILENT		146865	0					
ANR	147313	ArgumentList	& exception		146865	1					
ANR	147314	Argument	& exception		146865	0					
ANR	147315	UnaryOperationExpression	& exception		146865	0					
ANR	147316	UnaryOperator	&		146865	0					
ANR	147317	Identifier	exception		146865	1					
ANR	147318	Argument	"""string"""		146865	1					
ANR	147319	PrimaryExpression	"""string"""		146865	0					
ANR	147320	ExpressionStatement	"file = zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""file"" ) )"	1044:2:32715:32778	146865	8	True				
ANR	147321	AssignmentExpression	"file = zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""file"" ) )"		146865	0		=			
ANR	147322	Identifier	file		146865	0					
ANR	147323	CallExpression	"zval_get_string ( GET_PROPERTY_SILENT ( & exception , ""file"" ) )"		146865	1					
ANR	147324	Callee	zval_get_string		146865	0					
ANR	147325	Identifier	zval_get_string		146865	0					
ANR	147326	ArgumentList	"GET_PROPERTY_SILENT ( & exception , ""file"" )"		146865	1					
ANR	147327	Argument	"GET_PROPERTY_SILENT ( & exception , ""file"" )"		146865	0					
ANR	147328	CallExpression	"GET_PROPERTY_SILENT ( & exception , ""file"" )"		146865	0					
ANR	147329	Callee	GET_PROPERTY_SILENT		146865	0					
ANR	147330	Identifier	GET_PROPERTY_SILENT		146865	0					
ANR	147331	ArgumentList	& exception		146865	1					
ANR	147332	Argument	& exception		146865	0					
ANR	147333	UnaryOperationExpression	& exception		146865	0					
ANR	147334	UnaryOperator	&		146865	0					
ANR	147335	Identifier	exception		146865	1					
ANR	147336	Argument	"""file"""		146865	1					
ANR	147337	PrimaryExpression	"""file"""		146865	0					
ANR	147338	ExpressionStatement	"line = zval_get_long ( GET_PROPERTY_SILENT ( & exception , ""line"" ) )"	1045:2:32782:32843	146865	9	True				
ANR	147339	AssignmentExpression	"line = zval_get_long ( GET_PROPERTY_SILENT ( & exception , ""line"" ) )"		146865	0		=			
ANR	147340	Identifier	line		146865	0					
ANR	147341	CallExpression	"zval_get_long ( GET_PROPERTY_SILENT ( & exception , ""line"" ) )"		146865	1					
ANR	147342	Callee	zval_get_long		146865	0					
ANR	147343	Identifier	zval_get_long		146865	0					
ANR	147344	ArgumentList	"GET_PROPERTY_SILENT ( & exception , ""line"" )"		146865	1					
ANR	147345	Argument	"GET_PROPERTY_SILENT ( & exception , ""line"" )"		146865	0					
ANR	147346	CallExpression	"GET_PROPERTY_SILENT ( & exception , ""line"" )"		146865	0					
ANR	147347	Callee	GET_PROPERTY_SILENT		146865	0					
ANR	147348	Identifier	GET_PROPERTY_SILENT		146865	0					
ANR	147349	ArgumentList	& exception		146865	1					
ANR	147350	Argument	& exception		146865	0					
ANR	147351	UnaryOperationExpression	& exception		146865	0					
ANR	147352	UnaryOperator	&		146865	0					
ANR	147353	Identifier	exception		146865	1					
ANR	147354	Argument	"""line"""		146865	1					
ANR	147355	PrimaryExpression	"""line"""		146865	0					
ANR	147356	ExpressionStatement	"zend_error_va ( severity , ( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL , line , ""Uncaught %s\\n  thrown"" , ZSTR_VAL ( str ) )"	1047:2:32848:32974	146865	10	True				
ANR	147357	CallExpression	"zend_error_va ( severity , ( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL , line , ""Uncaught %s\\n  thrown"" , ZSTR_VAL ( str ) )"		146865	0					
ANR	147358	Callee	zend_error_va		146865	0					
ANR	147359	Identifier	zend_error_va		146865	0					
ANR	147360	ArgumentList	severity		146865	1					
ANR	147361	Argument	severity		146865	0					
ANR	147362	Identifier	severity		146865	0					
ANR	147363	Argument	( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL		146865	1					
ANR	147364	ConditionalExpression	( file && ZSTR_LEN ( file ) > 0 ) ? ZSTR_VAL ( file ) : NULL		146865	0					
ANR	147365	Condition	file && ZSTR_LEN ( file ) > 0		146865	0					
ANR	147366	AndExpression	file && ZSTR_LEN ( file ) > 0		146865	0		&&			
ANR	147367	Identifier	file		146865	0					
ANR	147368	RelationalExpression	ZSTR_LEN ( file ) > 0		146865	1		>			
ANR	147369	CallExpression	ZSTR_LEN ( file )		146865	0					
ANR	147370	Callee	ZSTR_LEN		146865	0					
ANR	147371	Identifier	ZSTR_LEN		146865	0					
ANR	147372	ArgumentList	file		146865	1					
ANR	147373	Argument	file		146865	0					
ANR	147374	Identifier	file		146865	0					
ANR	147375	PrimaryExpression	0		146865	1					
ANR	147376	CallExpression	ZSTR_VAL ( file )		146865	1					
ANR	147377	Callee	ZSTR_VAL		146865	0					
ANR	147378	Identifier	ZSTR_VAL		146865	0					
ANR	147379	ArgumentList	file		146865	1					
ANR	147380	Argument	file		146865	0					
ANR	147381	Identifier	file		146865	0					
ANR	147382	Identifier	NULL		146865	2					
ANR	147383	Argument	line		146865	2					
ANR	147384	Identifier	line		146865	0					
ANR	147385	Argument	"""Uncaught %s\\n  thrown"""		146865	3					
ANR	147386	PrimaryExpression	"""Uncaught %s\\n  thrown"""		146865	0					
ANR	147387	Argument	ZSTR_VAL ( str )		146865	4					
ANR	147388	CallExpression	ZSTR_VAL ( str )		146865	0					
ANR	147389	Callee	ZSTR_VAL		146865	0					
ANR	147390	Identifier	ZSTR_VAL		146865	0					
ANR	147391	ArgumentList	str		146865	1					
ANR	147392	Argument	str		146865	0					
ANR	147393	Identifier	str		146865	0					
ANR	147394	ExpressionStatement	zend_string_release ( str )	1050:2:32979:33003	146865	11	True				
ANR	147395	CallExpression	zend_string_release ( str )		146865	0					
ANR	147396	Callee	zend_string_release		146865	0					
ANR	147397	Identifier	zend_string_release		146865	0					
ANR	147398	ArgumentList	str		146865	1					
ANR	147399	Argument	str		146865	0					
ANR	147400	Identifier	str		146865	0					
ANR	147401	ExpressionStatement	zend_string_release ( file )	1051:2:33007:33032	146865	12	True				
ANR	147402	CallExpression	zend_string_release ( file )		146865	0					
ANR	147403	Callee	zend_string_release		146865	0					
ANR	147404	Identifier	zend_string_release		146865	0					
ANR	147405	ArgumentList	file		146865	1					
ANR	147406	Argument	file		146865	0					
ANR	147407	Identifier	file		146865	0					
ANR	147408	ElseStatement	else		146865	0					
ANR	147409	CompoundStatement		60:8:2152:2152	146865	0					
ANR	147410	ExpressionStatement	"zend_error ( severity , ""Uncaught exception '%s'"" , ZSTR_VAL ( ce_exception -> name ) )"	1053:2:33046:33123	146865	0	True				
ANR	147411	CallExpression	"zend_error ( severity , ""Uncaught exception '%s'"" , ZSTR_VAL ( ce_exception -> name ) )"		146865	0					
ANR	147412	Callee	zend_error		146865	0					
ANR	147413	Identifier	zend_error		146865	0					
ANR	147414	ArgumentList	severity		146865	1					
ANR	147415	Argument	severity		146865	0					
ANR	147416	Identifier	severity		146865	0					
ANR	147417	Argument	"""Uncaught exception '%s'"""		146865	1					
ANR	147418	PrimaryExpression	"""Uncaught exception '%s'"""		146865	0					
ANR	147419	Argument	ZSTR_VAL ( ce_exception -> name )		146865	2					
ANR	147420	CallExpression	ZSTR_VAL ( ce_exception -> name )		146865	0					
ANR	147421	Callee	ZSTR_VAL		146865	0					
ANR	147422	Identifier	ZSTR_VAL		146865	0					
ANR	147423	ArgumentList	ce_exception -> name		146865	1					
ANR	147424	Argument	ce_exception -> name		146865	0					
ANR	147425	PtrMemberAccess	ce_exception -> name		146865	0					
ANR	147426	Identifier	ce_exception		146865	0					
ANR	147427	Identifier	name		146865	1					
ANR	147428	ExpressionStatement	OBJ_RELEASE ( ex )	1056:1:33130:33145	146865	6	True				
ANR	147429	CallExpression	OBJ_RELEASE ( ex )		146865	0					
ANR	147430	Callee	OBJ_RELEASE		146865	0					
ANR	147431	Identifier	OBJ_RELEASE		146865	0					
ANR	147432	ArgumentList	ex		146865	1					
ANR	147433	Argument	ex		146865	0					
ANR	147434	Identifier	ex		146865	0					
ANR	147435	ReturnType	ZEND_API ZEND_COLD void		146865	1					
ANR	147436	Identifier	zend_exception_error		146865	2					
ANR	147437	ParameterList	"zend_object * ex , int severity"		146865	3					
ANR	147438	Parameter	zend_object * ex	992:45:30848:30862	146865	0	True				
ANR	147439	ParameterType	zend_object *		146865	0					
ANR	147440	Identifier	ex		146865	1					
ANR	147441	Parameter	int severity	992:62:30865:30876	146865	1	True				
ANR	147442	ParameterType	int		146865	0					
ANR	147443	Identifier	severity		146865	1					
ANR	147444	CFGEntryNode	ENTRY		146865		True				
ANR	147445	CFGExitNode	EXIT		146865		True				
ANR	147446	Symbol	exception		146865						
ANR	147447	Symbol	instanceof_function		146865						
ANR	147448	Symbol	i_get_exception_base		146865						
ANR	147449	Symbol	rv		146865						
ANR	147450	Symbol	line		146865						
ANR	147451	Symbol	Z_TYPE		146865						
ANR	147452	Symbol	ce_exception		146865						
ANR	147453	Symbol	E_WARNING		146865						
ANR	147454	Symbol	Z_OBJCE		146865						
ANR	147455	Symbol	file		146865						
ANR	147456	Symbol	tmp		146865						
ANR	147457	Symbol	GET_PROPERTY_SILENT		146865						
ANR	147458	Symbol	zend_ce_exception		146865						
ANR	147459	Symbol	IS_STRING		146865						
ANR	147460	Symbol	ce_exception -> name		146865						
ANR	147461	Symbol	zend_ce_throwable		146865						
ANR	147462	Symbol	severity		146865						
ANR	147463	Symbol	Z_OBJCE ( zv ) -> name		146865						
ANR	147464	Symbol	EG		146865						
ANR	147465	Symbol	NULL		146865						
ANR	147466	Symbol	& exception		146865						
ANR	147467	Symbol	GET_PROPERTY		146865						
ANR	147468	Symbol	zend_ce_error		146865						
ANR	147469	Symbol	& zv		146865						
ANR	147470	Symbol	zval_get_string		146865						
ANR	147471	Symbol	E_PARSE		146865						
ANR	147472	Symbol	* ce_exception		146865						
ANR	147473	Symbol	message		146865						
ANR	147474	Symbol	ZSTR_VAL		146865						
ANR	147475	Symbol	str		146865						
ANR	147476	Symbol	ex		146865						
ANR	147477	Symbol	zval_get_long		146865						
ANR	147478	Symbol	ZSTR_LEN		146865						
ANR	147479	Symbol	& tmp		146865						
ANR	147480	Symbol	* Z_OBJCE		146865						
ANR	147481	Symbol	zend_ce_parse_error		146865						
ANR	147482	Symbol	zv		146865						
ANR	147483	Function	zend_throw_exception_object	1060:0:33160:33689							
ANR	147484	FunctionDef	zend_throw_exception_object (zval * exception)		147483	0					
ANR	147485	CompoundStatement		1061:0:33239:33689	147483	0					
ANR	147486	IdentifierDeclStatement	zend_class_entry * exception_ce ;	1062:1:33242:33272	147483	0	True				
ANR	147487	IdentifierDecl	* exception_ce		147483	0					
ANR	147488	IdentifierDeclType	zend_class_entry *		147483	0					
ANR	147489	Identifier	exception_ce		147483	1					
ANR	147490	IfStatement	if ( exception == NULL || Z_TYPE_P ( exception ) != IS_OBJECT )		147483	1					
ANR	147491	Condition	exception == NULL || Z_TYPE_P ( exception ) != IS_OBJECT	1064:5:33280:33332	147483	0	True				
ANR	147492	OrExpression	exception == NULL || Z_TYPE_P ( exception ) != IS_OBJECT		147483	0		||			
ANR	147493	EqualityExpression	exception == NULL		147483	0		==			
ANR	147494	Identifier	exception		147483	0					
ANR	147495	Identifier	NULL		147483	1					
ANR	147496	EqualityExpression	Z_TYPE_P ( exception ) != IS_OBJECT		147483	1		!=			
ANR	147497	CallExpression	Z_TYPE_P ( exception )		147483	0					
ANR	147498	Callee	Z_TYPE_P		147483	0					
ANR	147499	Identifier	Z_TYPE_P		147483	0					
ANR	147500	ArgumentList	exception		147483	1					
ANR	147501	Argument	exception		147483	0					
ANR	147502	Identifier	exception		147483	0					
ANR	147503	Identifier	IS_OBJECT		147483	1					
ANR	147504	CompoundStatement		4:60:95:95	147483	1					
ANR	147505	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Need to supply an object when throwing an exception"" )"	1065:2:33339:33427	147483	0	True				
ANR	147506	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Need to supply an object when throwing an exception"" )"		147483	0					
ANR	147507	Callee	zend_error_noreturn		147483	0					
ANR	147508	Identifier	zend_error_noreturn		147483	0					
ANR	147509	ArgumentList	E_CORE_ERROR		147483	1					
ANR	147510	Argument	E_CORE_ERROR		147483	0					
ANR	147511	Identifier	E_CORE_ERROR		147483	0					
ANR	147512	Argument	"""Need to supply an object when throwing an exception"""		147483	1					
ANR	147513	PrimaryExpression	"""Need to supply an object when throwing an exception"""		147483	0					
ANR	147514	ExpressionStatement	exception_ce = Z_OBJCE_P ( exception )	1068:1:33434:33469	147483	2	True				
ANR	147515	AssignmentExpression	exception_ce = Z_OBJCE_P ( exception )		147483	0		=			
ANR	147516	Identifier	exception_ce		147483	0					
ANR	147517	CallExpression	Z_OBJCE_P ( exception )		147483	1					
ANR	147518	Callee	Z_OBJCE_P		147483	0					
ANR	147519	Identifier	Z_OBJCE_P		147483	0					
ANR	147520	ArgumentList	exception		147483	1					
ANR	147521	Argument	exception		147483	0					
ANR	147522	Identifier	exception		147483	0					
ANR	147523	IfStatement	"if ( ! exception_ce || ! instanceof_function ( exception_ce , zend_ce_throwable ) )"		147483	3					
ANR	147524	Condition	"! exception_ce || ! instanceof_function ( exception_ce , zend_ce_throwable )"	1070:5:33477:33546	147483	0	True				
ANR	147525	OrExpression	"! exception_ce || ! instanceof_function ( exception_ce , zend_ce_throwable )"		147483	0		||			
ANR	147526	UnaryOperationExpression	! exception_ce		147483	0					
ANR	147527	UnaryOperator	!		147483	0					
ANR	147528	Identifier	exception_ce		147483	1					
ANR	147529	UnaryOperationExpression	"! instanceof_function ( exception_ce , zend_ce_throwable )"		147483	1					
ANR	147530	UnaryOperator	!		147483	0					
ANR	147531	CallExpression	"instanceof_function ( exception_ce , zend_ce_throwable )"		147483	1					
ANR	147532	Callee	instanceof_function		147483	0					
ANR	147533	Identifier	instanceof_function		147483	0					
ANR	147534	ArgumentList	exception_ce		147483	1					
ANR	147535	Argument	exception_ce		147483	0					
ANR	147536	Identifier	exception_ce		147483	0					
ANR	147537	Argument	zend_ce_throwable		147483	1					
ANR	147538	Identifier	zend_ce_throwable		147483	0					
ANR	147539	CompoundStatement		10:77:309:309	147483	1					
ANR	147540	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot throw objects that do not implement Throwable"" )"	1071:2:33553:33631	147483	0	True				
ANR	147541	CallExpression	"zend_throw_error ( NULL , ""Cannot throw objects that do not implement Throwable"" )"		147483	0					
ANR	147542	Callee	zend_throw_error		147483	0					
ANR	147543	Identifier	zend_throw_error		147483	0					
ANR	147544	ArgumentList	NULL		147483	1					
ANR	147545	Argument	NULL		147483	0					
ANR	147546	Identifier	NULL		147483	0					
ANR	147547	Argument	"""Cannot throw objects that do not implement Throwable"""		147483	1					
ANR	147548	PrimaryExpression	"""Cannot throw objects that do not implement Throwable"""		147483	0					
ANR	147549	ReturnStatement	return ;	1072:2:33635:33641	147483	1	True				
ANR	147550	ExpressionStatement	zend_throw_exception_internal ( exception )	1074:1:33647:33687	147483	4	True				
ANR	147551	CallExpression	zend_throw_exception_internal ( exception )		147483	0					
ANR	147552	Callee	zend_throw_exception_internal		147483	0					
ANR	147553	Identifier	zend_throw_exception_internal		147483	0					
ANR	147554	ArgumentList	exception		147483	1					
ANR	147555	Argument	exception		147483	0					
ANR	147556	Identifier	exception		147483	0					
ANR	147557	ReturnType	ZEND_API ZEND_COLD void		147483	1					
ANR	147558	Identifier	zend_throw_exception_object		147483	2					
ANR	147559	ParameterList	zval * exception		147483	3					
ANR	147560	Parameter	zval * exception	1060:52:33212:33226	147483	0	True				
ANR	147561	ParameterType	zval *		147483	0					
ANR	147562	Identifier	exception		147483	1					
ANR	147563	CFGEntryNode	ENTRY		147483		True				
ANR	147564	CFGExitNode	EXIT		147483		True				
ANR	147565	Symbol	exception		147483						
ANR	147566	Symbol	instanceof_function		147483						
ANR	147567	Symbol	exception_ce		147483						
ANR	147568	Symbol	NULL		147483						
ANR	147569	Symbol	E_CORE_ERROR		147483						
ANR	147570	Symbol	Z_OBJCE_P		147483						
ANR	147571	Symbol	Z_TYPE_P		147483						
ANR	147572	Symbol	IS_OBJECT		147483						
ANR	147573	Symbol	zend_ce_throwable		147483						
