command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	511957	File	data/converged/CVE-2015-8617_php-src/ext_com_dotnet_com_handlers.c								
ANR	511958	Function	com_property_read	32:0:1378:2095							
ANR	511959	FunctionDef	"com_property_read (zval * object , zval * member , int type , void * * cahce_slot , zval * rv)"		511958	0					
ANR	511960	CompoundStatement		33:0:1476:2095	511958	0					
ANR	511961	IdentifierDeclStatement	php_com_dotnet_object * obj ;	34:1:1479:1505	511958	0	True				
ANR	511962	IdentifierDecl	* obj		511958	0					
ANR	511963	IdentifierDeclType	php_com_dotnet_object *		511958	0					
ANR	511964	Identifier	obj		511958	1					
ANR	511965	IdentifierDeclStatement	VARIANT v ;	35:1:1508:1517	511958	1	True				
ANR	511966	IdentifierDecl	v		511958	0					
ANR	511967	IdentifierDeclType	VARIANT		511958	0					
ANR	511968	Identifier	v		511958	1					
ANR	511969	IdentifierDeclStatement	HRESULT res ;	36:1:1520:1531	511958	2	True				
ANR	511970	IdentifierDecl	res		511958	0					
ANR	511971	IdentifierDeclType	HRESULT		511958	0					
ANR	511972	Identifier	res		511958	1					
ANR	511973	ExpressionStatement	ZVAL_NULL ( rv )	38:1:1535:1548	511958	3	True				
ANR	511974	CallExpression	ZVAL_NULL ( rv )		511958	0					
ANR	511975	Callee	ZVAL_NULL		511958	0					
ANR	511976	Identifier	ZVAL_NULL		511958	0					
ANR	511977	ArgumentList	rv		511958	1					
ANR	511978	Argument	rv		511958	0					
ANR	511979	Identifier	rv		511958	0					
ANR	511980	ExpressionStatement	obj = CDNO_FETCH ( object )	40:1:1552:1576	511958	4	True				
ANR	511981	AssignmentExpression	obj = CDNO_FETCH ( object )		511958	0		=			
ANR	511982	Identifier	obj		511958	0					
ANR	511983	CallExpression	CDNO_FETCH ( object )		511958	1					
ANR	511984	Callee	CDNO_FETCH		511958	0					
ANR	511985	Identifier	CDNO_FETCH		511958	0					
ANR	511986	ArgumentList	object		511958	1					
ANR	511987	Argument	object		511958	0					
ANR	511988	Identifier	object		511958	0					
ANR	511989	IfStatement	if ( V_VT ( & obj -> v ) == VT_DISPATCH )		511958	5					
ANR	511990	Condition	V_VT ( & obj -> v ) == VT_DISPATCH	42:5:1584:1611	511958	0	True				
ANR	511991	EqualityExpression	V_VT ( & obj -> v ) == VT_DISPATCH		511958	0		==			
ANR	511992	CallExpression	V_VT ( & obj -> v )		511958	0					
ANR	511993	Callee	V_VT		511958	0					
ANR	511994	Identifier	V_VT		511958	0					
ANR	511995	ArgumentList	& obj -> v		511958	1					
ANR	511996	Argument	& obj -> v		511958	0					
ANR	511997	UnaryOperationExpression	& obj -> v		511958	0					
ANR	511998	UnaryOperator	&		511958	0					
ANR	511999	PtrMemberAccess	obj -> v		511958	1					
ANR	512000	Identifier	obj		511958	0					
ANR	512001	Identifier	v		511958	1					
ANR	512002	Identifier	VT_DISPATCH		511958	1					
ANR	512003	CompoundStatement		10:35:137:137	511958	1					
ANR	512004	ExpressionStatement	VariantInit ( & v )	43:2:1618:1633	511958	0	True				
ANR	512005	CallExpression	VariantInit ( & v )		511958	0					
ANR	512006	Callee	VariantInit		511958	0					
ANR	512007	Identifier	VariantInit		511958	0					
ANR	512008	ArgumentList	& v		511958	1					
ANR	512009	Argument	& v		511958	0					
ANR	512010	UnaryOperationExpression	& v		511958	0					
ANR	512011	UnaryOperator	&		511958	0					
ANR	512012	Identifier	v		511958	1					
ANR	512013	ExpressionStatement	convert_to_string_ex ( member )	45:2:1638:1666	511958	1	True				
ANR	512014	CallExpression	convert_to_string_ex ( member )		511958	0					
ANR	512015	Callee	convert_to_string_ex		511958	0					
ANR	512016	Identifier	convert_to_string_ex		511958	0					
ANR	512017	ArgumentList	member		511958	1					
ANR	512018	Argument	member		511958	0					
ANR	512019	Identifier	member		511958	0					
ANR	512020	ExpressionStatement	"res = php_com_do_invoke ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 0 , NULL , 1 )"	47:2:1671:1797	511958	2	True				
ANR	512021	AssignmentExpression	"res = php_com_do_invoke ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 0 , NULL , 1 )"		511958	0		=			
ANR	512022	Identifier	res		511958	0					
ANR	512023	CallExpression	"php_com_do_invoke ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 0 , NULL , 1 )"		511958	1					
ANR	512024	Callee	php_com_do_invoke		511958	0					
ANR	512025	Identifier	php_com_do_invoke		511958	0					
ANR	512026	ArgumentList	obj		511958	1					
ANR	512027	Argument	obj		511958	0					
ANR	512028	Identifier	obj		511958	0					
ANR	512029	Argument	Z_STRVAL_P ( member )		511958	1					
ANR	512030	CallExpression	Z_STRVAL_P ( member )		511958	0					
ANR	512031	Callee	Z_STRVAL_P		511958	0					
ANR	512032	Identifier	Z_STRVAL_P		511958	0					
ANR	512033	ArgumentList	member		511958	1					
ANR	512034	Argument	member		511958	0					
ANR	512035	Identifier	member		511958	0					
ANR	512036	Argument	Z_STRLEN_P ( member )		511958	2					
ANR	512037	CallExpression	Z_STRLEN_P ( member )		511958	0					
ANR	512038	Callee	Z_STRLEN_P		511958	0					
ANR	512039	Identifier	Z_STRLEN_P		511958	0					
ANR	512040	ArgumentList	member		511958	1					
ANR	512041	Argument	member		511958	0					
ANR	512042	Identifier	member		511958	0					
ANR	512043	Argument	DISPATCH_METHOD | DISPATCH_PROPERTYGET		511958	3					
ANR	512044	InclusiveOrExpression	DISPATCH_METHOD | DISPATCH_PROPERTYGET		511958	0		|			
ANR	512045	Identifier	DISPATCH_METHOD		511958	0					
ANR	512046	Identifier	DISPATCH_PROPERTYGET		511958	1					
ANR	512047	Argument	& v		511958	4					
ANR	512048	UnaryOperationExpression	& v		511958	0					
ANR	512049	UnaryOperator	&		511958	0					
ANR	512050	Identifier	v		511958	1					
ANR	512051	Argument	0		511958	5					
ANR	512052	PrimaryExpression	0		511958	0					
ANR	512053	Argument	NULL		511958	6					
ANR	512054	Identifier	NULL		511958	0					
ANR	512055	Argument	1		511958	7					
ANR	512056	PrimaryExpression	1		511958	0					
ANR	512057	IfStatement	if ( res == SUCCESS )		511958	3					
ANR	512058	Condition	res == SUCCESS	50:6:1806:1819	511958	0	True				
ANR	512059	EqualityExpression	res == SUCCESS		511958	0		==			
ANR	512060	Identifier	res		511958	0					
ANR	512061	Identifier	SUCCESS		511958	1					
ANR	512062	CompoundStatement		18:22:345:345	511958	1					
ANR	512063	ExpressionStatement	"php_com_zval_from_variant ( rv , & v , obj -> code_page )"	51:3:1827:1876	511958	0	True				
ANR	512064	CallExpression	"php_com_zval_from_variant ( rv , & v , obj -> code_page )"		511958	0					
ANR	512065	Callee	php_com_zval_from_variant		511958	0					
ANR	512066	Identifier	php_com_zval_from_variant		511958	0					
ANR	512067	ArgumentList	rv		511958	1					
ANR	512068	Argument	rv		511958	0					
ANR	512069	Identifier	rv		511958	0					
ANR	512070	Argument	& v		511958	1					
ANR	512071	UnaryOperationExpression	& v		511958	0					
ANR	512072	UnaryOperator	&		511958	0					
ANR	512073	Identifier	v		511958	1					
ANR	512074	Argument	obj -> code_page		511958	2					
ANR	512075	PtrMemberAccess	obj -> code_page		511958	0					
ANR	512076	Identifier	obj		511958	0					
ANR	512077	Identifier	code_page		511958	1					
ANR	512078	ExpressionStatement	VariantClear ( & v )	52:3:1881:1897	511958	1	True				
ANR	512079	CallExpression	VariantClear ( & v )		511958	0					
ANR	512080	Callee	VariantClear		511958	0					
ANR	512081	Identifier	VariantClear		511958	0					
ANR	512082	ArgumentList	& v		511958	1					
ANR	512083	Argument	& v		511958	0					
ANR	512084	UnaryOperationExpression	& v		511958	0					
ANR	512085	UnaryOperator	&		511958	0					
ANR	512086	Identifier	v		511958	1					
ANR	512087	ElseStatement	else		511958	0					
ANR	512088	IfStatement	if ( res == DISP_E_BADPARAMCOUNT )		511958	0					
ANR	512089	Condition	res == DISP_E_BADPARAMCOUNT	53:13:1912:1938	511958	0	True				
ANR	512090	EqualityExpression	res == DISP_E_BADPARAMCOUNT		511958	0		==			
ANR	512091	Identifier	res		511958	0					
ANR	512092	Identifier	DISP_E_BADPARAMCOUNT		511958	1					
ANR	512093	CompoundStatement		21:42:464:464	511958	1					
ANR	512094	ExpressionStatement	"php_com_saproxy_create ( object , rv , member )"	54:3:1946:1988	511958	0	True				
ANR	512095	CallExpression	"php_com_saproxy_create ( object , rv , member )"		511958	0					
ANR	512096	Callee	php_com_saproxy_create		511958	0					
ANR	512097	Identifier	php_com_saproxy_create		511958	0					
ANR	512098	ArgumentList	object		511958	1					
ANR	512099	Argument	object		511958	0					
ANR	512100	Identifier	object		511958	0					
ANR	512101	Argument	rv		511958	1					
ANR	512102	Identifier	rv		511958	0					
ANR	512103	Argument	member		511958	2					
ANR	512104	Identifier	member		511958	0					
ANR	512105	ElseStatement	else		511958	0					
ANR	512106	CompoundStatement		24:8:525:525	511958	0					
ANR	512107	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""this variant has no properties"" )"	57:2:2006:2077	511958	0	True				
ANR	512108	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""this variant has no properties"" )"		511958	0					
ANR	512109	Callee	php_com_throw_exception		511958	0					
ANR	512110	Identifier	php_com_throw_exception		511958	0					
ANR	512111	ArgumentList	E_INVALIDARG		511958	1					
ANR	512112	Argument	E_INVALIDARG		511958	0					
ANR	512113	Identifier	E_INVALIDARG		511958	0					
ANR	512114	Argument	"""this variant has no properties"""		511958	1					
ANR	512115	PrimaryExpression	"""this variant has no properties"""		511958	0					
ANR	512116	ReturnStatement	return rv ;	60:1:2084:2093	511958	6	True				
ANR	512117	Identifier	rv		511958	0					
ANR	512118	ReturnType	static zval *		511958	1					
ANR	512119	Identifier	com_property_read		511958	2					
ANR	512120	ParameterList	"zval * object , zval * member , int type , void * * cahce_slot , zval * rv"		511958	3					
ANR	512121	Parameter	zval * object	32:31:1409:1420	511958	0	True				
ANR	512122	ParameterType	zval *		511958	0					
ANR	512123	Identifier	object		511958	1					
ANR	512124	Parameter	zval * member	32:45:1423:1434	511958	1	True				
ANR	512125	ParameterType	zval *		511958	0					
ANR	512126	Identifier	member		511958	1					
ANR	512127	Parameter	int type	32:59:1437:1444	511958	2	True				
ANR	512128	ParameterType	int		511958	0					
ANR	512129	Identifier	type		511958	1					
ANR	512130	Parameter	void * * cahce_slot	32:69:1447:1463	511958	3	True				
ANR	512131	ParameterType	void * *		511958	0					
ANR	512132	Identifier	cahce_slot		511958	1					
ANR	512133	Parameter	zval * rv	32:88:1466:1473	511958	4	True				
ANR	512134	ParameterType	zval *		511958	0					
ANR	512135	Identifier	rv		511958	1					
ANR	512136	CFGEntryNode	ENTRY		511958		True				
ANR	512137	CFGExitNode	EXIT		511958		True				
ANR	512138	Symbol	res		511958						
ANR	512139	Symbol	* obj		511958						
ANR	512140	Symbol	NULL		511958						
ANR	512141	Symbol	SUCCESS		511958						
ANR	512142	Symbol	E_INVALIDARG		511958						
ANR	512143	Symbol	rv		511958						
ANR	512144	Symbol	VT_DISPATCH		511958						
ANR	512145	Symbol	obj -> code_page		511958						
ANR	512146	Symbol	type		511958						
ANR	512147	Symbol	Z_STRVAL_P		511958						
ANR	512148	Symbol	V_VT		511958						
ANR	512149	Symbol	DISPATCH_METHOD		511958						
ANR	512150	Symbol	DISPATCH_PROPERTYGET		511958						
ANR	512151	Symbol	cahce_slot		511958						
ANR	512152	Symbol	php_com_do_invoke		511958						
ANR	512153	Symbol	obj		511958						
ANR	512154	Symbol	v		511958						
ANR	512155	Symbol	member		511958						
ANR	512156	Symbol	CDNO_FETCH		511958						
ANR	512157	Symbol	& obj -> v		511958						
ANR	512158	Symbol	Z_STRLEN_P		511958						
ANR	512159	Symbol	& v		511958						
ANR	512160	Symbol	DISP_E_BADPARAMCOUNT		511958						
ANR	512161	Symbol	object		511958						
ANR	512162	Function	com_property_write	63:0:2098:2613							
ANR	512163	FunctionDef	"com_property_write (zval * object , zval * member , zval * value , void * * cache_slot)"		512162	0					
ANR	512164	CompoundStatement		64:0:2189:2613	512162	0					
ANR	512165	IdentifierDeclStatement	php_com_dotnet_object * obj ;	65:1:2192:2218	512162	0	True				
ANR	512166	IdentifierDecl	* obj		512162	0					
ANR	512167	IdentifierDeclType	php_com_dotnet_object *		512162	0					
ANR	512168	Identifier	obj		512162	1					
ANR	512169	IdentifierDeclStatement	VARIANT v ;	66:1:2221:2230	512162	1	True				
ANR	512170	IdentifierDecl	v		512162	0					
ANR	512171	IdentifierDeclType	VARIANT		512162	0					
ANR	512172	Identifier	v		512162	1					
ANR	512173	ExpressionStatement	obj = CDNO_FETCH ( object )	68:1:2234:2258	512162	2	True				
ANR	512174	AssignmentExpression	obj = CDNO_FETCH ( object )		512162	0		=			
ANR	512175	Identifier	obj		512162	0					
ANR	512176	CallExpression	CDNO_FETCH ( object )		512162	1					
ANR	512177	Callee	CDNO_FETCH		512162	0					
ANR	512178	Identifier	CDNO_FETCH		512162	0					
ANR	512179	ArgumentList	object		512162	1					
ANR	512180	Argument	object		512162	0					
ANR	512181	Identifier	object		512162	0					
ANR	512182	IfStatement	if ( V_VT ( & obj -> v ) == VT_DISPATCH )		512162	3					
ANR	512183	Condition	V_VT ( & obj -> v ) == VT_DISPATCH	70:5:2266:2293	512162	0	True				
ANR	512184	EqualityExpression	V_VT ( & obj -> v ) == VT_DISPATCH		512162	0		==			
ANR	512185	CallExpression	V_VT ( & obj -> v )		512162	0					
ANR	512186	Callee	V_VT		512162	0					
ANR	512187	Identifier	V_VT		512162	0					
ANR	512188	ArgumentList	& obj -> v		512162	1					
ANR	512189	Argument	& obj -> v		512162	0					
ANR	512190	UnaryOperationExpression	& obj -> v		512162	0					
ANR	512191	UnaryOperator	&		512162	0					
ANR	512192	PtrMemberAccess	obj -> v		512162	1					
ANR	512193	Identifier	obj		512162	0					
ANR	512194	Identifier	v		512162	1					
ANR	512195	Identifier	VT_DISPATCH		512162	1					
ANR	512196	CompoundStatement		7:35:106:106	512162	1					
ANR	512197	ExpressionStatement	VariantInit ( & v )	71:2:2300:2315	512162	0	True				
ANR	512198	CallExpression	VariantInit ( & v )		512162	0					
ANR	512199	Callee	VariantInit		512162	0					
ANR	512200	Identifier	VariantInit		512162	0					
ANR	512201	ArgumentList	& v		512162	1					
ANR	512202	Argument	& v		512162	0					
ANR	512203	UnaryOperationExpression	& v		512162	0					
ANR	512204	UnaryOperator	&		512162	0					
ANR	512205	Identifier	v		512162	1					
ANR	512206	ExpressionStatement	convert_to_string_ex ( member )	73:2:2320:2348	512162	1	True				
ANR	512207	CallExpression	convert_to_string_ex ( member )		512162	0					
ANR	512208	Callee	convert_to_string_ex		512162	0					
ANR	512209	Identifier	convert_to_string_ex		512162	0					
ANR	512210	ArgumentList	member		512162	1					
ANR	512211	Argument	member		512162	0					
ANR	512212	Identifier	member		512162	0					
ANR	512213	IfStatement	"if ( SUCCESS == php_com_do_invoke ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , DISPATCH_PROPERTYPUT | DISPATCH_PROPERTYPUTREF , & v , 1 , value , 0 ) )"		512162	2					
ANR	512214	Condition	"SUCCESS == php_com_do_invoke ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , DISPATCH_PROPERTYPUT | DISPATCH_PROPERTYPUTREF , & v , 1 , value , 0 )"	74:6:2356:2495	512162	0	True				
ANR	512215	EqualityExpression	"SUCCESS == php_com_do_invoke ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , DISPATCH_PROPERTYPUT | DISPATCH_PROPERTYPUTREF , & v , 1 , value , 0 )"		512162	0		==			
ANR	512216	Identifier	SUCCESS		512162	0					
ANR	512217	CallExpression	"php_com_do_invoke ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , DISPATCH_PROPERTYPUT | DISPATCH_PROPERTYPUTREF , & v , 1 , value , 0 )"		512162	1					
ANR	512218	Callee	php_com_do_invoke		512162	0					
ANR	512219	Identifier	php_com_do_invoke		512162	0					
ANR	512220	ArgumentList	obj		512162	1					
ANR	512221	Argument	obj		512162	0					
ANR	512222	Identifier	obj		512162	0					
ANR	512223	Argument	Z_STRVAL_P ( member )		512162	1					
ANR	512224	CallExpression	Z_STRVAL_P ( member )		512162	0					
ANR	512225	Callee	Z_STRVAL_P		512162	0					
ANR	512226	Identifier	Z_STRVAL_P		512162	0					
ANR	512227	ArgumentList	member		512162	1					
ANR	512228	Argument	member		512162	0					
ANR	512229	Identifier	member		512162	0					
ANR	512230	Argument	Z_STRLEN_P ( member )		512162	2					
ANR	512231	CallExpression	Z_STRLEN_P ( member )		512162	0					
ANR	512232	Callee	Z_STRLEN_P		512162	0					
ANR	512233	Identifier	Z_STRLEN_P		512162	0					
ANR	512234	ArgumentList	member		512162	1					
ANR	512235	Argument	member		512162	0					
ANR	512236	Identifier	member		512162	0					
ANR	512237	Argument	DISPATCH_PROPERTYPUT | DISPATCH_PROPERTYPUTREF		512162	3					
ANR	512238	InclusiveOrExpression	DISPATCH_PROPERTYPUT | DISPATCH_PROPERTYPUTREF		512162	0		|			
ANR	512239	Identifier	DISPATCH_PROPERTYPUT		512162	0					
ANR	512240	Identifier	DISPATCH_PROPERTYPUTREF		512162	1					
ANR	512241	Argument	& v		512162	4					
ANR	512242	UnaryOperationExpression	& v		512162	0					
ANR	512243	UnaryOperator	&		512162	0					
ANR	512244	Identifier	v		512162	1					
ANR	512245	Argument	1		512162	5					
ANR	512246	PrimaryExpression	1		512162	0					
ANR	512247	Argument	value		512162	6					
ANR	512248	Identifier	value		512162	0					
ANR	512249	Argument	0		512162	7					
ANR	512250	PrimaryExpression	0		512162	0					
ANR	512251	CompoundStatement		12:68:308:308	512162	1					
ANR	512252	ExpressionStatement	VariantClear ( & v )	76:3:2503:2519	512162	0	True				
ANR	512253	CallExpression	VariantClear ( & v )		512162	0					
ANR	512254	Callee	VariantClear		512162	0					
ANR	512255	Identifier	VariantClear		512162	0					
ANR	512256	ArgumentList	& v		512162	1					
ANR	512257	Argument	& v		512162	0					
ANR	512258	UnaryOperationExpression	& v		512162	0					
ANR	512259	UnaryOperator	&		512162	0					
ANR	512260	Identifier	v		512162	1					
ANR	512261	ElseStatement	else		512162	0					
ANR	512262	CompoundStatement		15:8:343:343	512162	0					
ANR	512263	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""this variant has no properties"" )"	79:2:2537:2608	512162	0	True				
ANR	512264	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""this variant has no properties"" )"		512162	0					
ANR	512265	Callee	php_com_throw_exception		512162	0					
ANR	512266	Identifier	php_com_throw_exception		512162	0					
ANR	512267	ArgumentList	E_INVALIDARG		512162	1					
ANR	512268	Argument	E_INVALIDARG		512162	0					
ANR	512269	Identifier	E_INVALIDARG		512162	0					
ANR	512270	Argument	"""this variant has no properties"""		512162	1					
ANR	512271	PrimaryExpression	"""this variant has no properties"""		512162	0					
ANR	512272	ReturnType	static void		512162	1					
ANR	512273	Identifier	com_property_write		512162	2					
ANR	512274	ParameterList	"zval * object , zval * member , zval * value , void * * cache_slot"		512162	3					
ANR	512275	Parameter	zval * object	63:31:2129:2140	512162	0	True				
ANR	512276	ParameterType	zval *		512162	0					
ANR	512277	Identifier	object		512162	1					
ANR	512278	Parameter	zval * member	63:45:2143:2154	512162	1	True				
ANR	512279	ParameterType	zval *		512162	0					
ANR	512280	Identifier	member		512162	1					
ANR	512281	Parameter	zval * value	63:59:2157:2167	512162	2	True				
ANR	512282	ParameterType	zval *		512162	0					
ANR	512283	Identifier	value		512162	1					
ANR	512284	Parameter	void * * cache_slot	63:72:2170:2186	512162	3	True				
ANR	512285	ParameterType	void * *		512162	0					
ANR	512286	Identifier	cache_slot		512162	1					
ANR	512287	CFGEntryNode	ENTRY		512162		True				
ANR	512288	CFGExitNode	EXIT		512162		True				
ANR	512289	Symbol	cache_slot		512162						
ANR	512290	Symbol	SUCCESS		512162						
ANR	512291	Symbol	E_INVALIDARG		512162						
ANR	512292	Symbol	VT_DISPATCH		512162						
ANR	512293	Symbol	Z_STRVAL_P		512162						
ANR	512294	Symbol	DISPATCH_PROPERTYPUTREF		512162						
ANR	512295	Symbol	V_VT		512162						
ANR	512296	Symbol	php_com_do_invoke		512162						
ANR	512297	Symbol	obj		512162						
ANR	512298	Symbol	v		512162						
ANR	512299	Symbol	member		512162						
ANR	512300	Symbol	CDNO_FETCH		512162						
ANR	512301	Symbol	DISPATCH_PROPERTYPUT		512162						
ANR	512302	Symbol	& obj -> v		512162						
ANR	512303	Symbol	Z_STRLEN_P		512162						
ANR	512304	Symbol	& v		512162						
ANR	512305	Symbol	value		512162						
ANR	512306	Symbol	object		512162						
ANR	512307	Function	com_read_dimension	83:0:2616:3475							
ANR	512308	FunctionDef	"com_read_dimension (zval * object , zval * offset , int type , zval * rv)"		512307	0					
ANR	512309	CompoundStatement		84:0:2696:3475	512307	0					
ANR	512310	IdentifierDeclStatement	php_com_dotnet_object * obj ;	85:1:2699:2725	512307	0	True				
ANR	512311	IdentifierDecl	* obj		512307	0					
ANR	512312	IdentifierDeclType	php_com_dotnet_object *		512307	0					
ANR	512313	Identifier	obj		512307	1					
ANR	512314	IdentifierDeclStatement	VARIANT v ;	86:1:2728:2737	512307	1	True				
ANR	512315	IdentifierDecl	v		512307	0					
ANR	512316	IdentifierDeclType	VARIANT		512307	0					
ANR	512317	Identifier	v		512307	1					
ANR	512318	ExpressionStatement	ZVAL_NULL ( rv )	88:1:2741:2754	512307	2	True				
ANR	512319	CallExpression	ZVAL_NULL ( rv )		512307	0					
ANR	512320	Callee	ZVAL_NULL		512307	0					
ANR	512321	Identifier	ZVAL_NULL		512307	0					
ANR	512322	ArgumentList	rv		512307	1					
ANR	512323	Argument	rv		512307	0					
ANR	512324	Identifier	rv		512307	0					
ANR	512325	ExpressionStatement	obj = CDNO_FETCH ( object )	90:1:2758:2782	512307	3	True				
ANR	512326	AssignmentExpression	obj = CDNO_FETCH ( object )		512307	0		=			
ANR	512327	Identifier	obj		512307	0					
ANR	512328	CallExpression	CDNO_FETCH ( object )		512307	1					
ANR	512329	Callee	CDNO_FETCH		512307	0					
ANR	512330	Identifier	CDNO_FETCH		512307	0					
ANR	512331	ArgumentList	object		512307	1					
ANR	512332	Argument	object		512307	0					
ANR	512333	Identifier	object		512307	0					
ANR	512334	IfStatement	if ( V_VT ( & obj -> v ) == VT_DISPATCH )		512307	4					
ANR	512335	Condition	V_VT ( & obj -> v ) == VT_DISPATCH	92:5:2790:2817	512307	0	True				
ANR	512336	EqualityExpression	V_VT ( & obj -> v ) == VT_DISPATCH		512307	0		==			
ANR	512337	CallExpression	V_VT ( & obj -> v )		512307	0					
ANR	512338	Callee	V_VT		512307	0					
ANR	512339	Identifier	V_VT		512307	0					
ANR	512340	ArgumentList	& obj -> v		512307	1					
ANR	512341	Argument	& obj -> v		512307	0					
ANR	512342	UnaryOperationExpression	& obj -> v		512307	0					
ANR	512343	UnaryOperator	&		512307	0					
ANR	512344	PtrMemberAccess	obj -> v		512307	1					
ANR	512345	Identifier	obj		512307	0					
ANR	512346	Identifier	v		512307	1					
ANR	512347	Identifier	VT_DISPATCH		512307	1					
ANR	512348	CompoundStatement		9:35:123:123	512307	1					
ANR	512349	ExpressionStatement	VariantInit ( & v )	93:2:2824:2839	512307	0	True				
ANR	512350	CallExpression	VariantInit ( & v )		512307	0					
ANR	512351	Callee	VariantInit		512307	0					
ANR	512352	Identifier	VariantInit		512307	0					
ANR	512353	ArgumentList	& v		512307	1					
ANR	512354	Argument	& v		512307	0					
ANR	512355	UnaryOperationExpression	& v		512307	0					
ANR	512356	UnaryOperator	&		512307	0					
ANR	512357	Identifier	v		512307	1					
ANR	512358	IfStatement	"if ( SUCCESS == php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 1 , offset , 0 , 0 ) )"		512307	1					
ANR	512359	Condition	"SUCCESS == php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 1 , offset , 0 , 0 )"	95:6:2848:2963	512307	0	True				
ANR	512360	EqualityExpression	"SUCCESS == php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 1 , offset , 0 , 0 )"		512307	0		==			
ANR	512361	Identifier	SUCCESS		512307	0					
ANR	512362	CallExpression	"php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 1 , offset , 0 , 0 )"		512307	1					
ANR	512363	Callee	php_com_do_invoke_by_id		512307	0					
ANR	512364	Identifier	php_com_do_invoke_by_id		512307	0					
ANR	512365	ArgumentList	obj		512307	1					
ANR	512366	Argument	obj		512307	0					
ANR	512367	Identifier	obj		512307	0					
ANR	512368	Argument	DISPID_VALUE		512307	1					
ANR	512369	Identifier	DISPID_VALUE		512307	0					
ANR	512370	Argument	DISPATCH_METHOD | DISPATCH_PROPERTYGET		512307	2					
ANR	512371	InclusiveOrExpression	DISPATCH_METHOD | DISPATCH_PROPERTYGET		512307	0		|			
ANR	512372	Identifier	DISPATCH_METHOD		512307	0					
ANR	512373	Identifier	DISPATCH_PROPERTYGET		512307	1					
ANR	512374	Argument	& v		512307	3					
ANR	512375	UnaryOperationExpression	& v		512307	0					
ANR	512376	UnaryOperator	&		512307	0					
ANR	512377	Identifier	v		512307	1					
ANR	512378	Argument	1		512307	4					
ANR	512379	PrimaryExpression	1		512307	0					
ANR	512380	Argument	offset		512307	5					
ANR	512381	Identifier	offset		512307	0					
ANR	512382	Argument	0		512307	6					
ANR	512383	PrimaryExpression	0		512307	0					
ANR	512384	Argument	0		512307	7					
ANR	512385	PrimaryExpression	0		512307	0					
ANR	512386	CompoundStatement		13:64:269:269	512307	1					
ANR	512387	ExpressionStatement	"php_com_zval_from_variant ( rv , & v , obj -> code_page )"	97:3:2971:3020	512307	0	True				
ANR	512388	CallExpression	"php_com_zval_from_variant ( rv , & v , obj -> code_page )"		512307	0					
ANR	512389	Callee	php_com_zval_from_variant		512307	0					
ANR	512390	Identifier	php_com_zval_from_variant		512307	0					
ANR	512391	ArgumentList	rv		512307	1					
ANR	512392	Argument	rv		512307	0					
ANR	512393	Identifier	rv		512307	0					
ANR	512394	Argument	& v		512307	1					
ANR	512395	UnaryOperationExpression	& v		512307	0					
ANR	512396	UnaryOperator	&		512307	0					
ANR	512397	Identifier	v		512307	1					
ANR	512398	Argument	obj -> code_page		512307	2					
ANR	512399	PtrMemberAccess	obj -> code_page		512307	0					
ANR	512400	Identifier	obj		512307	0					
ANR	512401	Identifier	code_page		512307	1					
ANR	512402	ExpressionStatement	VariantClear ( & v )	98:3:3025:3041	512307	1	True				
ANR	512403	CallExpression	VariantClear ( & v )		512307	0					
ANR	512404	Callee	VariantClear		512307	0					
ANR	512405	Identifier	VariantClear		512307	0					
ANR	512406	ArgumentList	& v		512307	1					
ANR	512407	Argument	& v		512307	0					
ANR	512408	UnaryOperationExpression	& v		512307	0					
ANR	512409	UnaryOperator	&		512307	0					
ANR	512410	Identifier	v		512307	1					
ANR	512411	ElseStatement	else		512307	0					
ANR	512412	IfStatement	if ( V_ISARRAY ( & obj -> v ) )		512307	0					
ANR	512413	Condition	V_ISARRAY ( & obj -> v )	100:12:3059:3076	512307	0	True				
ANR	512414	CallExpression	V_ISARRAY ( & obj -> v )		512307	0					
ANR	512415	Callee	V_ISARRAY		512307	0					
ANR	512416	Identifier	V_ISARRAY		512307	0					
ANR	512417	ArgumentList	& obj -> v		512307	1					
ANR	512418	Argument	& obj -> v		512307	0					
ANR	512419	UnaryOperationExpression	& obj -> v		512307	0					
ANR	512420	UnaryOperator	&		512307	0					
ANR	512421	PtrMemberAccess	obj -> v		512307	1					
ANR	512422	Identifier	obj		512307	0					
ANR	512423	Identifier	v		512307	1					
ANR	512424	CompoundStatement		17:32:382:382	512307	1					
ANR	512425	ExpressionStatement	convert_to_long ( offset )	101:2:3083:3106	512307	0	True				
ANR	512426	CallExpression	convert_to_long ( offset )		512307	0					
ANR	512427	Callee	convert_to_long		512307	0					
ANR	512428	Identifier	convert_to_long		512307	0					
ANR	512429	ArgumentList	offset		512307	1					
ANR	512430	Argument	offset		512307	0					
ANR	512431	Identifier	offset		512307	0					
ANR	512432	IfStatement	if ( SafeArrayGetDim ( V_ARRAY ( & obj -> v ) ) == 1 )		512307	1					
ANR	512433	Condition	SafeArrayGetDim ( V_ARRAY ( & obj -> v ) ) == 1	103:6:3115:3152	512307	0	True				
ANR	512434	EqualityExpression	SafeArrayGetDim ( V_ARRAY ( & obj -> v ) ) == 1		512307	0		==			
ANR	512435	CallExpression	SafeArrayGetDim ( V_ARRAY ( & obj -> v ) )		512307	0					
ANR	512436	Callee	SafeArrayGetDim		512307	0					
ANR	512437	Identifier	SafeArrayGetDim		512307	0					
ANR	512438	ArgumentList	V_ARRAY ( & obj -> v )		512307	1					
ANR	512439	Argument	V_ARRAY ( & obj -> v )		512307	0					
ANR	512440	CallExpression	V_ARRAY ( & obj -> v )		512307	0					
ANR	512441	Callee	V_ARRAY		512307	0					
ANR	512442	Identifier	V_ARRAY		512307	0					
ANR	512443	ArgumentList	& obj -> v		512307	1					
ANR	512444	Argument	& obj -> v		512307	0					
ANR	512445	UnaryOperationExpression	& obj -> v		512307	0					
ANR	512446	UnaryOperator	&		512307	0					
ANR	512447	PtrMemberAccess	obj -> v		512307	1					
ANR	512448	Identifier	obj		512307	0					
ANR	512449	Identifier	v		512307	1					
ANR	512450	PrimaryExpression	1		512307	1					
ANR	512451	CompoundStatement		20:46:458:458	512307	1					
ANR	512452	IfStatement	"if ( php_com_safearray_get_elem ( & obj -> v , & v , ( LONG ) Z_LVAL_P ( offset ) ) )"		512307	0					
ANR	512453	Condition	"php_com_safearray_get_elem ( & obj -> v , & v , ( LONG ) Z_LVAL_P ( offset ) )"	104:7:3164:3226	512307	0	True				
ANR	512454	CallExpression	"php_com_safearray_get_elem ( & obj -> v , & v , ( LONG ) Z_LVAL_P ( offset ) )"		512307	0					
ANR	512455	Callee	php_com_safearray_get_elem		512307	0					
ANR	512456	Identifier	php_com_safearray_get_elem		512307	0					
ANR	512457	ArgumentList	& obj -> v		512307	1					
ANR	512458	Argument	& obj -> v		512307	0					
ANR	512459	UnaryOperationExpression	& obj -> v		512307	0					
ANR	512460	UnaryOperator	&		512307	0					
ANR	512461	PtrMemberAccess	obj -> v		512307	1					
ANR	512462	Identifier	obj		512307	0					
ANR	512463	Identifier	v		512307	1					
ANR	512464	Argument	& v		512307	1					
ANR	512465	UnaryOperationExpression	& v		512307	0					
ANR	512466	UnaryOperator	&		512307	0					
ANR	512467	Identifier	v		512307	1					
ANR	512468	Argument	( LONG ) Z_LVAL_P ( offset )		512307	2					
ANR	512469	CastExpression	( LONG ) Z_LVAL_P ( offset )		512307	0					
ANR	512470	CastTarget	LONG		512307	0					
ANR	512471	CallExpression	Z_LVAL_P ( offset )		512307	1					
ANR	512472	Callee	Z_LVAL_P		512307	0					
ANR	512473	Identifier	Z_LVAL_P		512307	0					
ANR	512474	ArgumentList	offset		512307	1					
ANR	512475	Argument	offset		512307	0					
ANR	512476	Identifier	offset		512307	0					
ANR	512477	CompoundStatement		21:72:532:532	512307	1					
ANR	512478	ExpressionStatement	"php_com_wrap_variant ( rv , & v , obj -> code_page )"	105:4:3235:3279	512307	0	True				
ANR	512479	CallExpression	"php_com_wrap_variant ( rv , & v , obj -> code_page )"		512307	0					
ANR	512480	Callee	php_com_wrap_variant		512307	0					
ANR	512481	Identifier	php_com_wrap_variant		512307	0					
ANR	512482	ArgumentList	rv		512307	1					
ANR	512483	Argument	rv		512307	0					
ANR	512484	Identifier	rv		512307	0					
ANR	512485	Argument	& v		512307	1					
ANR	512486	UnaryOperationExpression	& v		512307	0					
ANR	512487	UnaryOperator	&		512307	0					
ANR	512488	Identifier	v		512307	1					
ANR	512489	Argument	obj -> code_page		512307	2					
ANR	512490	PtrMemberAccess	obj -> code_page		512307	0					
ANR	512491	Identifier	obj		512307	0					
ANR	512492	Identifier	code_page		512307	1					
ANR	512493	ExpressionStatement	VariantClear ( & v )	106:4:3285:3301	512307	1	True				
ANR	512494	CallExpression	VariantClear ( & v )		512307	0					
ANR	512495	Callee	VariantClear		512307	0					
ANR	512496	Identifier	VariantClear		512307	0					
ANR	512497	ArgumentList	& v		512307	1					
ANR	512498	Argument	& v		512307	0					
ANR	512499	UnaryOperationExpression	& v		512307	0					
ANR	512500	UnaryOperator	&		512307	0					
ANR	512501	Identifier	v		512307	1					
ANR	512502	ElseStatement	else		512307	0					
ANR	512503	CompoundStatement		25:9:620:620	512307	0					
ANR	512504	ExpressionStatement	"php_com_saproxy_create ( object , rv , offset )"	109:3:3322:3364	512307	0	True				
ANR	512505	CallExpression	"php_com_saproxy_create ( object , rv , offset )"		512307	0					
ANR	512506	Callee	php_com_saproxy_create		512307	0					
ANR	512507	Identifier	php_com_saproxy_create		512307	0					
ANR	512508	ArgumentList	object		512307	1					
ANR	512509	Argument	object		512307	0					
ANR	512510	Identifier	object		512307	0					
ANR	512511	Argument	rv		512307	1					
ANR	512512	Identifier	rv		512307	0					
ANR	512513	Argument	offset		512307	2					
ANR	512514	Identifier	offset		512307	0					
ANR	512515	ElseStatement	else		512307	0					
ANR	512516	CompoundStatement		29:8:682:682	512307	0					
ANR	512517	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""this variant is not an array type"" )"	113:2:3383:3457	512307	0	True				
ANR	512518	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""this variant is not an array type"" )"		512307	0					
ANR	512519	Callee	php_com_throw_exception		512307	0					
ANR	512520	Identifier	php_com_throw_exception		512307	0					
ANR	512521	ArgumentList	E_INVALIDARG		512307	1					
ANR	512522	Argument	E_INVALIDARG		512307	0					
ANR	512523	Identifier	E_INVALIDARG		512307	0					
ANR	512524	Argument	"""this variant is not an array type"""		512307	1					
ANR	512525	PrimaryExpression	"""this variant is not an array type"""		512307	0					
ANR	512526	ReturnStatement	return rv ;	116:1:3464:3473	512307	5	True				
ANR	512527	Identifier	rv		512307	0					
ANR	512528	ReturnType	static zval *		512307	1					
ANR	512529	Identifier	com_read_dimension		512307	2					
ANR	512530	ParameterList	"zval * object , zval * offset , int type , zval * rv"		512307	3					
ANR	512531	Parameter	zval * object	83:32:2648:2659	512307	0	True				
ANR	512532	ParameterType	zval *		512307	0					
ANR	512533	Identifier	object		512307	1					
ANR	512534	Parameter	zval * offset	83:46:2662:2673	512307	1	True				
ANR	512535	ParameterType	zval *		512307	0					
ANR	512536	Identifier	offset		512307	1					
ANR	512537	Parameter	int type	83:60:2676:2683	512307	2	True				
ANR	512538	ParameterType	int		512307	0					
ANR	512539	Identifier	type		512307	1					
ANR	512540	Parameter	zval * rv	83:70:2686:2693	512307	3	True				
ANR	512541	ParameterType	zval *		512307	0					
ANR	512542	Identifier	rv		512307	1					
ANR	512543	CFGEntryNode	ENTRY		512307		True				
ANR	512544	CFGExitNode	EXIT		512307		True				
ANR	512545	Symbol	* obj		512307						
ANR	512546	Symbol	DISPID_VALUE		512307						
ANR	512547	Symbol	SUCCESS		512307						
ANR	512548	Symbol	E_INVALIDARG		512307						
ANR	512549	Symbol	offset		512307						
ANR	512550	Symbol	rv		512307						
ANR	512551	Symbol	php_com_do_invoke_by_id		512307						
ANR	512552	Symbol	php_com_safearray_get_elem		512307						
ANR	512553	Symbol	VT_DISPATCH		512307						
ANR	512554	Symbol	obj -> code_page		512307						
ANR	512555	Symbol	type		512307						
ANR	512556	Symbol	V_VT		512307						
ANR	512557	Symbol	Z_LVAL_P		512307						
ANR	512558	Symbol	DISPATCH_METHOD		512307						
ANR	512559	Symbol	DISPATCH_PROPERTYGET		512307						
ANR	512560	Symbol	obj		512307						
ANR	512561	Symbol	v		512307						
ANR	512562	Symbol	V_ISARRAY		512307						
ANR	512563	Symbol	SafeArrayGetDim		512307						
ANR	512564	Symbol	CDNO_FETCH		512307						
ANR	512565	Symbol	& obj -> v		512307						
ANR	512566	Symbol	& v		512307						
ANR	512567	Symbol	V_ARRAY		512307						
ANR	512568	Symbol	object		512307						
ANR	512569	Function	com_write_dimension	119:0:3478:4904							
ANR	512570	FunctionDef	"com_write_dimension (zval * object , zval * offset , zval * value)"		512569	0					
ANR	512571	CompoundStatement		120:0:3551:4904	512569	0					
ANR	512572	IdentifierDeclStatement	php_com_dotnet_object * obj ;	121:1:3554:3580	512569	0	True				
ANR	512573	IdentifierDecl	* obj		512569	0					
ANR	512574	IdentifierDeclType	php_com_dotnet_object *		512569	0					
ANR	512575	Identifier	obj		512569	1					
ANR	512576	IdentifierDeclStatement	zval args [ 2 ] ;	122:1:3583:3595	512569	1	True				
ANR	512577	IdentifierDecl	args [ 2 ]		512569	0					
ANR	512578	IdentifierDeclType	zval [ 2 ]		512569	0					
ANR	512579	Identifier	args		512569	1					
ANR	512580	PrimaryExpression	2		512569	2					
ANR	512581	IdentifierDeclStatement	VARIANT v ;	123:1:3598:3607	512569	2	True				
ANR	512582	IdentifierDecl	v		512569	0					
ANR	512583	IdentifierDeclType	VARIANT		512569	0					
ANR	512584	Identifier	v		512569	1					
ANR	512585	IdentifierDeclStatement	HRESULT res ;	124:1:3610:3621	512569	3	True				
ANR	512586	IdentifierDecl	res		512569	0					
ANR	512587	IdentifierDeclType	HRESULT		512569	0					
ANR	512588	Identifier	res		512569	1					
ANR	512589	ExpressionStatement	obj = CDNO_FETCH ( object )	126:1:3625:3649	512569	4	True				
ANR	512590	AssignmentExpression	obj = CDNO_FETCH ( object )		512569	0		=			
ANR	512591	Identifier	obj		512569	0					
ANR	512592	CallExpression	CDNO_FETCH ( object )		512569	1					
ANR	512593	Callee	CDNO_FETCH		512569	0					
ANR	512594	Identifier	CDNO_FETCH		512569	0					
ANR	512595	ArgumentList	object		512569	1					
ANR	512596	Argument	object		512569	0					
ANR	512597	Identifier	object		512569	0					
ANR	512598	IfStatement	if ( V_VT ( & obj -> v ) == VT_DISPATCH )		512569	5					
ANR	512599	Condition	V_VT ( & obj -> v ) == VT_DISPATCH	128:5:3657:3684	512569	0	True				
ANR	512600	EqualityExpression	V_VT ( & obj -> v ) == VT_DISPATCH		512569	0		==			
ANR	512601	CallExpression	V_VT ( & obj -> v )		512569	0					
ANR	512602	Callee	V_VT		512569	0					
ANR	512603	Identifier	V_VT		512569	0					
ANR	512604	ArgumentList	& obj -> v		512569	1					
ANR	512605	Argument	& obj -> v		512569	0					
ANR	512606	UnaryOperationExpression	& obj -> v		512569	0					
ANR	512607	UnaryOperator	&		512569	0					
ANR	512608	PtrMemberAccess	obj -> v		512569	1					
ANR	512609	Identifier	obj		512569	0					
ANR	512610	Identifier	v		512569	1					
ANR	512611	Identifier	VT_DISPATCH		512569	1					
ANR	512612	CompoundStatement		9:35:135:135	512569	1					
ANR	512613	ExpressionStatement	"ZVAL_COPY_VALUE ( & args [ 0 ] , offset )"	129:2:3691:3724	512569	0	True				
ANR	512614	CallExpression	"ZVAL_COPY_VALUE ( & args [ 0 ] , offset )"		512569	0					
ANR	512615	Callee	ZVAL_COPY_VALUE		512569	0					
ANR	512616	Identifier	ZVAL_COPY_VALUE		512569	0					
ANR	512617	ArgumentList	& args [ 0 ]		512569	1					
ANR	512618	Argument	& args [ 0 ]		512569	0					
ANR	512619	UnaryOperationExpression	& args [ 0 ]		512569	0					
ANR	512620	UnaryOperator	&		512569	0					
ANR	512621	ArrayIndexing	args [ 0 ]		512569	1					
ANR	512622	Identifier	args		512569	0					
ANR	512623	PrimaryExpression	0		512569	1					
ANR	512624	Argument	offset		512569	1					
ANR	512625	Identifier	offset		512569	0					
ANR	512626	ExpressionStatement	"ZVAL_COPY_VALUE ( & args [ 1 ] , value )"	130:2:3728:3760	512569	1	True				
ANR	512627	CallExpression	"ZVAL_COPY_VALUE ( & args [ 1 ] , value )"		512569	0					
ANR	512628	Callee	ZVAL_COPY_VALUE		512569	0					
ANR	512629	Identifier	ZVAL_COPY_VALUE		512569	0					
ANR	512630	ArgumentList	& args [ 1 ]		512569	1					
ANR	512631	Argument	& args [ 1 ]		512569	0					
ANR	512632	UnaryOperationExpression	& args [ 1 ]		512569	0					
ANR	512633	UnaryOperator	&		512569	0					
ANR	512634	ArrayIndexing	args [ 1 ]		512569	1					
ANR	512635	Identifier	args		512569	0					
ANR	512636	PrimaryExpression	1		512569	1					
ANR	512637	Argument	value		512569	1					
ANR	512638	Identifier	value		512569	0					
ANR	512639	ExpressionStatement	VariantInit ( & v )	132:2:3765:3780	512569	2	True				
ANR	512640	CallExpression	VariantInit ( & v )		512569	0					
ANR	512641	Callee	VariantInit		512569	0					
ANR	512642	Identifier	VariantInit		512569	0					
ANR	512643	ArgumentList	& v		512569	1					
ANR	512644	Argument	& v		512569	0					
ANR	512645	UnaryOperationExpression	& v		512569	0					
ANR	512646	UnaryOperator	&		512569	0					
ANR	512647	Identifier	v		512569	1					
ANR	512648	IfStatement	"if ( SUCCESS == php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYPUT , & v , 2 , args , 0 , 0 ) )"		512569	3					
ANR	512649	Condition	"SUCCESS == php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYPUT , & v , 2 , args , 0 , 0 )"	134:6:3789:3902	512569	0	True				
ANR	512650	EqualityExpression	"SUCCESS == php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYPUT , & v , 2 , args , 0 , 0 )"		512569	0		==			
ANR	512651	Identifier	SUCCESS		512569	0					
ANR	512652	CallExpression	"php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYPUT , & v , 2 , args , 0 , 0 )"		512569	1					
ANR	512653	Callee	php_com_do_invoke_by_id		512569	0					
ANR	512654	Identifier	php_com_do_invoke_by_id		512569	0					
ANR	512655	ArgumentList	obj		512569	1					
ANR	512656	Argument	obj		512569	0					
ANR	512657	Identifier	obj		512569	0					
ANR	512658	Argument	DISPID_VALUE		512569	1					
ANR	512659	Identifier	DISPID_VALUE		512569	0					
ANR	512660	Argument	DISPATCH_METHOD | DISPATCH_PROPERTYPUT		512569	2					
ANR	512661	InclusiveOrExpression	DISPATCH_METHOD | DISPATCH_PROPERTYPUT		512569	0		|			
ANR	512662	Identifier	DISPATCH_METHOD		512569	0					
ANR	512663	Identifier	DISPATCH_PROPERTYPUT		512569	1					
ANR	512664	Argument	& v		512569	3					
ANR	512665	UnaryOperationExpression	& v		512569	0					
ANR	512666	UnaryOperator	&		512569	0					
ANR	512667	Identifier	v		512569	1					
ANR	512668	Argument	2		512569	4					
ANR	512669	PrimaryExpression	2		512569	0					
ANR	512670	Argument	args		512569	5					
ANR	512671	Identifier	args		512569	0					
ANR	512672	Argument	0		512569	6					
ANR	512673	PrimaryExpression	0		512569	0					
ANR	512674	Argument	0		512569	7					
ANR	512675	PrimaryExpression	0		512569	0					
ANR	512676	CompoundStatement		16:62:353:353	512569	1					
ANR	512677	ExpressionStatement	VariantClear ( & v )	136:3:3910:3926	512569	0	True				
ANR	512678	CallExpression	VariantClear ( & v )		512569	0					
ANR	512679	Callee	VariantClear		512569	0					
ANR	512680	Identifier	VariantClear		512569	0					
ANR	512681	ArgumentList	& v		512569	1					
ANR	512682	Argument	& v		512569	0					
ANR	512683	UnaryOperationExpression	& v		512569	0					
ANR	512684	UnaryOperator	&		512569	0					
ANR	512685	Identifier	v		512569	1					
ANR	512686	ElseStatement	else		512569	0					
ANR	512687	IfStatement	if ( V_ISARRAY ( & obj -> v ) )		512569	0					
ANR	512688	Condition	V_ISARRAY ( & obj -> v )	138:12:3944:3961	512569	0	True				
ANR	512689	CallExpression	V_ISARRAY ( & obj -> v )		512569	0					
ANR	512690	Callee	V_ISARRAY		512569	0					
ANR	512691	Identifier	V_ISARRAY		512569	0					
ANR	512692	ArgumentList	& obj -> v		512569	1					
ANR	512693	Argument	& obj -> v		512569	0					
ANR	512694	UnaryOperationExpression	& obj -> v		512569	0					
ANR	512695	UnaryOperator	&		512569	0					
ANR	512696	PtrMemberAccess	obj -> v		512569	1					
ANR	512697	Identifier	obj		512569	0					
ANR	512698	Identifier	v		512569	1					
ANR	512699	CompoundStatement		21:2:436:446	512569	1					
ANR	512700	IdentifierDeclStatement	LONG indices = 0 ;	139:2:3968:3984	512569	0	True				
ANR	512701	IdentifierDecl	indices = 0		512569	0					
ANR	512702	IdentifierDeclType	LONG		512569	0					
ANR	512703	Identifier	indices		512569	1					
ANR	512704	AssignmentExpression	indices = 0		512569	2		=			
ANR	512705	Identifier	indices		512569	0					
ANR	512706	PrimaryExpression	0		512569	1					
ANR	512707	IdentifierDeclStatement	VARTYPE vt ;	140:2:3988:3998	512569	1	True				
ANR	512708	IdentifierDecl	vt		512569	0					
ANR	512709	IdentifierDeclType	VARTYPE		512569	0					
ANR	512710	Identifier	vt		512569	1					
ANR	512711	IfStatement	if ( SafeArrayGetDim ( V_ARRAY ( & obj -> v ) ) == 1 )		512569	2					
ANR	512712	Condition	SafeArrayGetDim ( V_ARRAY ( & obj -> v ) ) == 1	142:6:4007:4044	512569	0	True				
ANR	512713	EqualityExpression	SafeArrayGetDim ( V_ARRAY ( & obj -> v ) ) == 1		512569	0		==			
ANR	512714	CallExpression	SafeArrayGetDim ( V_ARRAY ( & obj -> v ) )		512569	0					
ANR	512715	Callee	SafeArrayGetDim		512569	0					
ANR	512716	Identifier	SafeArrayGetDim		512569	0					
ANR	512717	ArgumentList	V_ARRAY ( & obj -> v )		512569	1					
ANR	512718	Argument	V_ARRAY ( & obj -> v )		512569	0					
ANR	512719	CallExpression	V_ARRAY ( & obj -> v )		512569	0					
ANR	512720	Callee	V_ARRAY		512569	0					
ANR	512721	Identifier	V_ARRAY		512569	0					
ANR	512722	ArgumentList	& obj -> v		512569	1					
ANR	512723	Argument	& obj -> v		512569	0					
ANR	512724	UnaryOperationExpression	& obj -> v		512569	0					
ANR	512725	UnaryOperator	&		512569	0					
ANR	512726	PtrMemberAccess	obj -> v		512569	1					
ANR	512727	Identifier	obj		512569	0					
ANR	512728	Identifier	v		512569	1					
ANR	512729	PrimaryExpression	1		512569	1					
ANR	512730	CompoundStatement		23:46:495:495	512569	1					
ANR	512731	IfStatement	"if ( FAILED ( SafeArrayGetVartype ( V_ARRAY ( & obj -> v ) , & vt ) ) || vt == VT_EMPTY )"		512569	0					
ANR	512732	Condition	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( & obj -> v ) , & vt ) ) || vt == VT_EMPTY"	143:7:4056:4123	512569	0	True				
ANR	512733	OrExpression	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( & obj -> v ) , & vt ) ) || vt == VT_EMPTY"		512569	0		||			
ANR	512734	CallExpression	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( & obj -> v ) , & vt ) )"		512569	0					
ANR	512735	Callee	FAILED		512569	0					
ANR	512736	Identifier	FAILED		512569	0					
ANR	512737	ArgumentList	"SafeArrayGetVartype ( V_ARRAY ( & obj -> v ) , & vt )"		512569	1					
ANR	512738	Argument	"SafeArrayGetVartype ( V_ARRAY ( & obj -> v ) , & vt )"		512569	0					
ANR	512739	CallExpression	"SafeArrayGetVartype ( V_ARRAY ( & obj -> v ) , & vt )"		512569	0					
ANR	512740	Callee	SafeArrayGetVartype		512569	0					
ANR	512741	Identifier	SafeArrayGetVartype		512569	0					
ANR	512742	ArgumentList	V_ARRAY ( & obj -> v )		512569	1					
ANR	512743	Argument	V_ARRAY ( & obj -> v )		512569	0					
ANR	512744	CallExpression	V_ARRAY ( & obj -> v )		512569	0					
ANR	512745	Callee	V_ARRAY		512569	0					
ANR	512746	Identifier	V_ARRAY		512569	0					
ANR	512747	ArgumentList	& obj -> v		512569	1					
ANR	512748	Argument	& obj -> v		512569	0					
ANR	512749	UnaryOperationExpression	& obj -> v		512569	0					
ANR	512750	UnaryOperator	&		512569	0					
ANR	512751	PtrMemberAccess	obj -> v		512569	1					
ANR	512752	Identifier	obj		512569	0					
ANR	512753	Identifier	v		512569	1					
ANR	512754	Argument	& vt		512569	1					
ANR	512755	UnaryOperationExpression	& vt		512569	0					
ANR	512756	UnaryOperator	&		512569	0					
ANR	512757	Identifier	vt		512569	1					
ANR	512758	EqualityExpression	vt == VT_EMPTY		512569	1		==			
ANR	512759	Identifier	vt		512569	0					
ANR	512760	Identifier	VT_EMPTY		512569	1					
ANR	512761	CompoundStatement		24:77:574:574	512569	1					
ANR	512762	ExpressionStatement	vt = V_VT ( & obj -> v ) & ~VT_ARRAY	144:4:4132:4162	512569	0	True				
ANR	512763	AssignmentExpression	vt = V_VT ( & obj -> v ) & ~VT_ARRAY		512569	0		=			
ANR	512764	Identifier	vt		512569	0					
ANR	512765	BitAndExpression	V_VT ( & obj -> v ) & ~VT_ARRAY		512569	1		&			
ANR	512766	CallExpression	V_VT ( & obj -> v )		512569	0					
ANR	512767	Callee	V_VT		512569	0					
ANR	512768	Identifier	V_VT		512569	0					
ANR	512769	ArgumentList	& obj -> v		512569	1					
ANR	512770	Argument	& obj -> v		512569	0					
ANR	512771	UnaryOperationExpression	& obj -> v		512569	0					
ANR	512772	UnaryOperator	&		512569	0					
ANR	512773	PtrMemberAccess	obj -> v		512569	1					
ANR	512774	Identifier	obj		512569	0					
ANR	512775	Identifier	v		512569	1					
ANR	512776	Identifier	~VT_ARRAY		512569	1					
ANR	512777	ExpressionStatement	convert_to_long ( offset )	147:3:4173:4196	512569	1	True				
ANR	512778	CallExpression	convert_to_long ( offset )		512569	0					
ANR	512779	Callee	convert_to_long		512569	0					
ANR	512780	Identifier	convert_to_long		512569	0					
ANR	512781	ArgumentList	offset		512569	1					
ANR	512782	Argument	offset		512569	0					
ANR	512783	Identifier	offset		512569	0					
ANR	512784	ExpressionStatement	indices = ( LONG ) Z_LVAL_P ( offset )	148:3:4201:4233	512569	2	True				
ANR	512785	AssignmentExpression	indices = ( LONG ) Z_LVAL_P ( offset )		512569	0		=			
ANR	512786	Identifier	indices		512569	0					
ANR	512787	CastExpression	( LONG ) Z_LVAL_P ( offset )		512569	1					
ANR	512788	CastTarget	LONG		512569	0					
ANR	512789	CallExpression	Z_LVAL_P ( offset )		512569	1					
ANR	512790	Callee	Z_LVAL_P		512569	0					
ANR	512791	Identifier	Z_LVAL_P		512569	0					
ANR	512792	ArgumentList	offset		512569	1					
ANR	512793	Argument	offset		512569	0					
ANR	512794	Identifier	offset		512569	0					
ANR	512795	ExpressionStatement	VariantInit ( & v )	150:3:4239:4254	512569	3	True				
ANR	512796	CallExpression	VariantInit ( & v )		512569	0					
ANR	512797	Callee	VariantInit		512569	0					
ANR	512798	Identifier	VariantInit		512569	0					
ANR	512799	ArgumentList	& v		512569	1					
ANR	512800	Argument	& v		512569	0					
ANR	512801	UnaryOperationExpression	& v		512569	0					
ANR	512802	UnaryOperator	&		512569	0					
ANR	512803	Identifier	v		512569	1					
ANR	512804	ExpressionStatement	"php_com_variant_from_zval ( & v , value , obj -> code_page )"	151:3:4259:4311	512569	4	True				
ANR	512805	CallExpression	"php_com_variant_from_zval ( & v , value , obj -> code_page )"		512569	0					
ANR	512806	Callee	php_com_variant_from_zval		512569	0					
ANR	512807	Identifier	php_com_variant_from_zval		512569	0					
ANR	512808	ArgumentList	& v		512569	1					
ANR	512809	Argument	& v		512569	0					
ANR	512810	UnaryOperationExpression	& v		512569	0					
ANR	512811	UnaryOperator	&		512569	0					
ANR	512812	Identifier	v		512569	1					
ANR	512813	Argument	value		512569	1					
ANR	512814	Identifier	value		512569	0					
ANR	512815	Argument	obj -> code_page		512569	2					
ANR	512816	PtrMemberAccess	obj -> code_page		512569	0					
ANR	512817	Identifier	obj		512569	0					
ANR	512818	Identifier	code_page		512569	1					
ANR	512819	IfStatement	if ( V_VT ( & v ) != vt )		512569	5					
ANR	512820	Condition	V_VT ( & v ) != vt	153:7:4321:4334	512569	0	True				
ANR	512821	EqualityExpression	V_VT ( & v ) != vt		512569	0		!=			
ANR	512822	CallExpression	V_VT ( & v )		512569	0					
ANR	512823	Callee	V_VT		512569	0					
ANR	512824	Identifier	V_VT		512569	0					
ANR	512825	ArgumentList	& v		512569	1					
ANR	512826	Argument	& v		512569	0					
ANR	512827	UnaryOperationExpression	& v		512569	0					
ANR	512828	UnaryOperator	&		512569	0					
ANR	512829	Identifier	v		512569	1					
ANR	512830	Identifier	vt		512569	1					
ANR	512831	CompoundStatement		34:23:785:785	512569	1					
ANR	512832	ExpressionStatement	"VariantChangeType ( & v , & v , 0 , vt )"	154:4:4343:4375	512569	0	True				
ANR	512833	CallExpression	"VariantChangeType ( & v , & v , 0 , vt )"		512569	0					
ANR	512834	Callee	VariantChangeType		512569	0					
ANR	512835	Identifier	VariantChangeType		512569	0					
ANR	512836	ArgumentList	& v		512569	1					
ANR	512837	Argument	& v		512569	0					
ANR	512838	UnaryOperationExpression	& v		512569	0					
ANR	512839	UnaryOperator	&		512569	0					
ANR	512840	Identifier	v		512569	1					
ANR	512841	Argument	& v		512569	1					
ANR	512842	UnaryOperationExpression	& v		512569	0					
ANR	512843	UnaryOperator	&		512569	0					
ANR	512844	Identifier	v		512569	1					
ANR	512845	Argument	0		512569	2					
ANR	512846	PrimaryExpression	0		512569	0					
ANR	512847	Argument	vt		512569	3					
ANR	512848	Identifier	vt		512569	0					
ANR	512849	IfStatement	if ( vt == VT_VARIANT )		512569	6					
ANR	512850	Condition	vt == VT_VARIANT	157:7:4390:4405	512569	0	True				
ANR	512851	EqualityExpression	vt == VT_VARIANT		512569	0		==			
ANR	512852	Identifier	vt		512569	0					
ANR	512853	Identifier	VT_VARIANT		512569	1					
ANR	512854	CompoundStatement		38:25:856:856	512569	1					
ANR	512855	ExpressionStatement	"res = SafeArrayPutElement ( V_ARRAY ( & obj -> v ) , & indices , & v )"	158:4:4414:4471	512569	0	True				
ANR	512856	AssignmentExpression	"res = SafeArrayPutElement ( V_ARRAY ( & obj -> v ) , & indices , & v )"		512569	0		=			
ANR	512857	Identifier	res		512569	0					
ANR	512858	CallExpression	"SafeArrayPutElement ( V_ARRAY ( & obj -> v ) , & indices , & v )"		512569	1					
ANR	512859	Callee	SafeArrayPutElement		512569	0					
ANR	512860	Identifier	SafeArrayPutElement		512569	0					
ANR	512861	ArgumentList	V_ARRAY ( & obj -> v )		512569	1					
ANR	512862	Argument	V_ARRAY ( & obj -> v )		512569	0					
ANR	512863	CallExpression	V_ARRAY ( & obj -> v )		512569	0					
ANR	512864	Callee	V_ARRAY		512569	0					
ANR	512865	Identifier	V_ARRAY		512569	0					
ANR	512866	ArgumentList	& obj -> v		512569	1					
ANR	512867	Argument	& obj -> v		512569	0					
ANR	512868	UnaryOperationExpression	& obj -> v		512569	0					
ANR	512869	UnaryOperator	&		512569	0					
ANR	512870	PtrMemberAccess	obj -> v		512569	1					
ANR	512871	Identifier	obj		512569	0					
ANR	512872	Identifier	v		512569	1					
ANR	512873	Argument	& indices		512569	1					
ANR	512874	UnaryOperationExpression	& indices		512569	0					
ANR	512875	UnaryOperator	&		512569	0					
ANR	512876	Identifier	indices		512569	1					
ANR	512877	Argument	& v		512569	2					
ANR	512878	UnaryOperationExpression	& v		512569	0					
ANR	512879	UnaryOperator	&		512569	0					
ANR	512880	Identifier	v		512569	1					
ANR	512881	ElseStatement	else		512569	0					
ANR	512882	CompoundStatement		40:10:931:931	512569	0					
ANR	512883	ExpressionStatement	"res = SafeArrayPutElement ( V_ARRAY ( & obj -> v ) , & indices , & v . lVal )"	160:4:4489:4551	512569	0	True				
ANR	512884	AssignmentExpression	"res = SafeArrayPutElement ( V_ARRAY ( & obj -> v ) , & indices , & v . lVal )"		512569	0		=			
ANR	512885	Identifier	res		512569	0					
ANR	512886	CallExpression	"SafeArrayPutElement ( V_ARRAY ( & obj -> v ) , & indices , & v . lVal )"		512569	1					
ANR	512887	Callee	SafeArrayPutElement		512569	0					
ANR	512888	Identifier	SafeArrayPutElement		512569	0					
ANR	512889	ArgumentList	V_ARRAY ( & obj -> v )		512569	1					
ANR	512890	Argument	V_ARRAY ( & obj -> v )		512569	0					
ANR	512891	CallExpression	V_ARRAY ( & obj -> v )		512569	0					
ANR	512892	Callee	V_ARRAY		512569	0					
ANR	512893	Identifier	V_ARRAY		512569	0					
ANR	512894	ArgumentList	& obj -> v		512569	1					
ANR	512895	Argument	& obj -> v		512569	0					
ANR	512896	UnaryOperationExpression	& obj -> v		512569	0					
ANR	512897	UnaryOperator	&		512569	0					
ANR	512898	PtrMemberAccess	obj -> v		512569	1					
ANR	512899	Identifier	obj		512569	0					
ANR	512900	Identifier	v		512569	1					
ANR	512901	Argument	& indices		512569	1					
ANR	512902	UnaryOperationExpression	& indices		512569	0					
ANR	512903	UnaryOperator	&		512569	0					
ANR	512904	Identifier	indices		512569	1					
ANR	512905	Argument	& v . lVal		512569	2					
ANR	512906	UnaryOperationExpression	& v . lVal		512569	0					
ANR	512907	UnaryOperator	&		512569	0					
ANR	512908	MemberAccess	v . lVal		512569	1					
ANR	512909	Identifier	v		512569	0					
ANR	512910	Identifier	lVal		512569	1					
ANR	512911	ExpressionStatement	VariantClear ( & v )	163:3:4562:4578	512569	7	True				
ANR	512912	CallExpression	VariantClear ( & v )		512569	0					
ANR	512913	Callee	VariantClear		512569	0					
ANR	512914	Identifier	VariantClear		512569	0					
ANR	512915	ArgumentList	& v		512569	1					
ANR	512916	Argument	& v		512569	0					
ANR	512917	UnaryOperationExpression	& v		512569	0					
ANR	512918	UnaryOperator	&		512569	0					
ANR	512919	Identifier	v		512569	1					
ANR	512920	IfStatement	if ( FAILED ( res ) )		512569	8					
ANR	512921	Condition	FAILED ( res )	165:7:4588:4598	512569	0	True				
ANR	512922	CallExpression	FAILED ( res )		512569	0					
ANR	512923	Callee	FAILED		512569	0					
ANR	512924	Identifier	FAILED		512569	0					
ANR	512925	ArgumentList	res		512569	1					
ANR	512926	Argument	res		512569	0					
ANR	512927	Identifier	res		512569	0					
ANR	512928	CompoundStatement		46:20:1049:1049	512569	1					
ANR	512929	ExpressionStatement	"php_com_throw_exception ( res , NULL )"	166:4:4607:4641	512569	0	True				
ANR	512930	CallExpression	"php_com_throw_exception ( res , NULL )"		512569	0					
ANR	512931	Callee	php_com_throw_exception		512569	0					
ANR	512932	Identifier	php_com_throw_exception		512569	0					
ANR	512933	ArgumentList	res		512569	1					
ANR	512934	Argument	res		512569	0					
ANR	512935	Identifier	res		512569	0					
ANR	512936	Argument	NULL		512569	1					
ANR	512937	Identifier	NULL		512569	0					
ANR	512938	ElseStatement	else		512569	0					
ANR	512939	CompoundStatement		50:9:1106:1106	512569	0					
ANR	512940	ExpressionStatement	"php_com_throw_exception ( DISP_E_BADINDEX , ""this variant has multiple dimensions; you can't set a new value without specifying *all* dimensions"" )"	170:3:4663:4806	512569	0	True				
ANR	512941	CallExpression	"php_com_throw_exception ( DISP_E_BADINDEX , ""this variant has multiple dimensions; you can't set a new value without specifying *all* dimensions"" )"		512569	0					
ANR	512942	Callee	php_com_throw_exception		512569	0					
ANR	512943	Identifier	php_com_throw_exception		512569	0					
ANR	512944	ArgumentList	DISP_E_BADINDEX		512569	1					
ANR	512945	Argument	DISP_E_BADINDEX		512569	0					
ANR	512946	Identifier	DISP_E_BADINDEX		512569	0					
ANR	512947	Argument	"""this variant has multiple dimensions; you can't set a new value without specifying *all* dimensions"""		512569	1					
ANR	512948	PrimaryExpression	"""this variant has multiple dimensions; you can't set a new value without specifying *all* dimensions"""		512569	0					
ANR	512949	ElseStatement	else		512569	0					
ANR	512950	CompoundStatement		54:8:1269:1269	512569	0					
ANR	512951	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""this variant is not an array type"" )"	174:2:4825:4899	512569	0	True				
ANR	512952	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""this variant is not an array type"" )"		512569	0					
ANR	512953	Callee	php_com_throw_exception		512569	0					
ANR	512954	Identifier	php_com_throw_exception		512569	0					
ANR	512955	ArgumentList	E_INVALIDARG		512569	1					
ANR	512956	Argument	E_INVALIDARG		512569	0					
ANR	512957	Identifier	E_INVALIDARG		512569	0					
ANR	512958	Argument	"""this variant is not an array type"""		512569	1					
ANR	512959	PrimaryExpression	"""this variant is not an array type"""		512569	0					
ANR	512960	ReturnType	static void		512569	1					
ANR	512961	Identifier	com_write_dimension		512569	2					
ANR	512962	ParameterList	"zval * object , zval * offset , zval * value"		512569	3					
ANR	512963	Parameter	zval * object	119:32:3510:3521	512569	0	True				
ANR	512964	ParameterType	zval *		512569	0					
ANR	512965	Identifier	object		512569	1					
ANR	512966	Parameter	zval * offset	119:46:3524:3535	512569	1	True				
ANR	512967	ParameterType	zval *		512569	0					
ANR	512968	Identifier	offset		512569	1					
ANR	512969	Parameter	zval * value	119:60:3538:3548	512569	2	True				
ANR	512970	ParameterType	zval *		512569	0					
ANR	512971	Identifier	value		512569	1					
ANR	512972	CFGEntryNode	ENTRY		512569		True				
ANR	512973	CFGExitNode	EXIT		512569		True				
ANR	512974	Symbol	~VT_ARRAY		512569						
ANR	512975	Symbol	E_INVALIDARG		512569						
ANR	512976	Symbol	php_com_do_invoke_by_id		512569						
ANR	512977	Symbol	SafeArrayGetVartype		512569						
ANR	512978	Symbol	& indices		512569						
ANR	512979	Symbol	& v . lVal		512569						
ANR	512980	Symbol	VT_EMPTY		512569						
ANR	512981	Symbol	FAILED		512569						
ANR	512982	Symbol	SafeArrayGetDim		512569						
ANR	512983	Symbol	CDNO_FETCH		512569						
ANR	512984	Symbol	value		512569						
ANR	512985	Symbol	res		512569						
ANR	512986	Symbol	* obj		512569						
ANR	512987	Symbol	SafeArrayPutElement		512569						
ANR	512988	Symbol	DISPID_VALUE		512569						
ANR	512989	Symbol	SUCCESS		512569						
ANR	512990	Symbol	NULL		512569						
ANR	512991	Symbol	offset		512569						
ANR	512992	Symbol	& vt		512569						
ANR	512993	Symbol	VT_DISPATCH		512569						
ANR	512994	Symbol	obj -> code_page		512569						
ANR	512995	Symbol	DISP_E_BADINDEX		512569						
ANR	512996	Symbol	V_VT		512569						
ANR	512997	Symbol	Z_LVAL_P		512569						
ANR	512998	Symbol	args		512569						
ANR	512999	Symbol	DISPATCH_METHOD		512569						
ANR	513000	Symbol	indices		512569						
ANR	513001	Symbol	obj		512569						
ANR	513002	Symbol	v		512569						
ANR	513003	Symbol	V_ISARRAY		512569						
ANR	513004	Symbol	DISPATCH_PROPERTYPUT		512569						
ANR	513005	Symbol	& obj -> v		512569						
ANR	513006	Symbol	& v		512569						
ANR	513007	Symbol	VT_VARIANT		512569						
ANR	513008	Symbol	vt		512569						
ANR	513009	Symbol	V_ARRAY		512569						
ANR	513010	Symbol	object		512569						
ANR	513011	Function	com_object_set	179:0:4913:5013							
ANR	513012	FunctionDef	"com_object_set (zval * * property , zval * value)"		513011	0					
ANR	513013	CompoundStatement		180:0:4970:5013	513011	0					
ANR	513014	ReturnType	static void		513011	1					
ANR	513015	Identifier	com_object_set		513011	2					
ANR	513016	ParameterList	"zval * * property , zval * value"		513011	3					
ANR	513017	Parameter	zval * * property	179:27:4940:4954	513011	0	True				
ANR	513018	ParameterType	zval * *		513011	0					
ANR	513019	Identifier	property		513011	1					
ANR	513020	Parameter	zval * value	179:44:4957:4967	513011	1	True				
ANR	513021	ParameterType	zval *		513011	0					
ANR	513022	Identifier	value		513011	1					
ANR	513023	CFGEntryNode	ENTRY		513011		True				
ANR	513024	CFGExitNode	EXIT		513011		True				
ANR	513025	Symbol	property		513011						
ANR	513026	Symbol	value		513011						
ANR	513027	Function	com_object_get	184:0:5016:5117							
ANR	513028	FunctionDef	com_object_get (zval * property)		513027	0					
ANR	513029	CompoundStatement		185:0:5060:5117	513027	0					
ANR	513030	ReturnStatement	return NULL ;	187:1:5104:5115	513027	0	True				
ANR	513031	Identifier	NULL		513027	0					
ANR	513032	ReturnType	static zval *		513027	1					
ANR	513033	Identifier	com_object_get		513027	2					
ANR	513034	ParameterList	zval * property		513027	3					
ANR	513035	Parameter	zval * property	184:28:5044:5057	513027	0	True				
ANR	513036	ParameterType	zval *		513027	0					
ANR	513037	Identifier	property		513027	1					
ANR	513038	CFGEntryNode	ENTRY		513027		True				
ANR	513039	CFGExitNode	EXIT		513027		True				
ANR	513040	Symbol	NULL		513027						
ANR	513041	Symbol	property		513027						
ANR	513042	Function	com_property_exists	191:0:5127:5596							
ANR	513043	FunctionDef	"com_property_exists (zval * object , zval * member , int check_empty , void * * cache_slot)"		513042	0					
ANR	513044	CompoundStatement		192:0:5222:5596	513042	0					
ANR	513045	IdentifierDeclStatement	DISPID dispid ;	193:1:5225:5238	513042	0	True				
ANR	513046	IdentifierDecl	dispid		513042	0					
ANR	513047	IdentifierDeclType	DISPID		513042	0					
ANR	513048	Identifier	dispid		513042	1					
ANR	513049	IdentifierDeclStatement	php_com_dotnet_object * obj ;	194:1:5241:5267	513042	1	True				
ANR	513050	IdentifierDecl	* obj		513042	0					
ANR	513051	IdentifierDeclType	php_com_dotnet_object *		513042	0					
ANR	513052	Identifier	obj		513042	1					
ANR	513053	ExpressionStatement	obj = CDNO_FETCH ( object )	196:1:5271:5295	513042	2	True				
ANR	513054	AssignmentExpression	obj = CDNO_FETCH ( object )		513042	0		=			
ANR	513055	Identifier	obj		513042	0					
ANR	513056	CallExpression	CDNO_FETCH ( object )		513042	1					
ANR	513057	Callee	CDNO_FETCH		513042	0					
ANR	513058	Identifier	CDNO_FETCH		513042	0					
ANR	513059	ArgumentList	object		513042	1					
ANR	513060	Argument	object		513042	0					
ANR	513061	Identifier	object		513042	0					
ANR	513062	IfStatement	if ( V_VT ( & obj -> v ) == VT_DISPATCH )		513042	3					
ANR	513063	Condition	V_VT ( & obj -> v ) == VT_DISPATCH	198:5:5303:5330	513042	0	True				
ANR	513064	EqualityExpression	V_VT ( & obj -> v ) == VT_DISPATCH		513042	0		==			
ANR	513065	CallExpression	V_VT ( & obj -> v )		513042	0					
ANR	513066	Callee	V_VT		513042	0					
ANR	513067	Identifier	V_VT		513042	0					
ANR	513068	ArgumentList	& obj -> v		513042	1					
ANR	513069	Argument	& obj -> v		513042	0					
ANR	513070	UnaryOperationExpression	& obj -> v		513042	0					
ANR	513071	UnaryOperator	&		513042	0					
ANR	513072	PtrMemberAccess	obj -> v		513042	1					
ANR	513073	Identifier	obj		513042	0					
ANR	513074	Identifier	v		513042	1					
ANR	513075	Identifier	VT_DISPATCH		513042	1					
ANR	513076	CompoundStatement		7:35:110:110	513042	1					
ANR	513077	ExpressionStatement	convert_to_string_ex ( member )	199:2:5337:5365	513042	0	True				
ANR	513078	CallExpression	convert_to_string_ex ( member )		513042	0					
ANR	513079	Callee	convert_to_string_ex		513042	0					
ANR	513080	Identifier	convert_to_string_ex		513042	0					
ANR	513081	ArgumentList	member		513042	1					
ANR	513082	Argument	member		513042	0					
ANR	513083	Identifier	member		513042	0					
ANR	513084	IfStatement	"if ( SUCCEEDED ( php_com_get_id_of_name ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , & dispid ) ) )"		513042	1					
ANR	513085	Condition	"SUCCEEDED ( php_com_get_id_of_name ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , & dispid ) )"	200:6:5373:5459	513042	0	True				
ANR	513086	CallExpression	"SUCCEEDED ( php_com_get_id_of_name ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , & dispid ) )"		513042	0					
ANR	513087	Callee	SUCCEEDED		513042	0					
ANR	513088	Identifier	SUCCEEDED		513042	0					
ANR	513089	ArgumentList	"php_com_get_id_of_name ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , & dispid )"		513042	1					
ANR	513090	Argument	"php_com_get_id_of_name ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , & dispid )"		513042	0					
ANR	513091	CallExpression	"php_com_get_id_of_name ( obj , Z_STRVAL_P ( member ) , Z_STRLEN_P ( member ) , & dispid )"		513042	0					
ANR	513092	Callee	php_com_get_id_of_name		513042	0					
ANR	513093	Identifier	php_com_get_id_of_name		513042	0					
ANR	513094	ArgumentList	obj		513042	1					
ANR	513095	Argument	obj		513042	0					
ANR	513096	Identifier	obj		513042	0					
ANR	513097	Argument	Z_STRVAL_P ( member )		513042	1					
ANR	513098	CallExpression	Z_STRVAL_P ( member )		513042	0					
ANR	513099	Callee	Z_STRVAL_P		513042	0					
ANR	513100	Identifier	Z_STRVAL_P		513042	0					
ANR	513101	ArgumentList	member		513042	1					
ANR	513102	Argument	member		513042	0					
ANR	513103	Identifier	member		513042	0					
ANR	513104	Argument	Z_STRLEN_P ( member )		513042	2					
ANR	513105	CallExpression	Z_STRLEN_P ( member )		513042	0					
ANR	513106	Callee	Z_STRLEN_P		513042	0					
ANR	513107	Identifier	Z_STRLEN_P		513042	0					
ANR	513108	ArgumentList	member		513042	1					
ANR	513109	Argument	member		513042	0					
ANR	513110	Identifier	member		513042	0					
ANR	513111	Argument	& dispid		513042	3					
ANR	513112	UnaryOperationExpression	& dispid		513042	0					
ANR	513113	UnaryOperator	&		513042	0					
ANR	513114	Identifier	dispid		513042	1					
ANR	513115	CompoundStatement		9:95:239:239	513042	1					
ANR	513116	ReturnStatement	return 1 ;	202:3:5523:5531	513042	0	True				
ANR	513117	PrimaryExpression	1		513042	0					
ANR	513118	ElseStatement	else		513042	0					
ANR	513119	CompoundStatement		13:8:322:322	513042	0					
ANR	513120	ReturnStatement	return 0 ;	208:1:5586:5594	513042	4	True				
ANR	513121	PrimaryExpression	0		513042	0					
ANR	513122	ReturnType	static int		513042	1					
ANR	513123	Identifier	com_property_exists		513042	2					
ANR	513124	ParameterList	"zval * object , zval * member , int check_empty , void * * cache_slot"		513042	3					
ANR	513125	Parameter	zval * object	191:31:5158:5169	513042	0	True				
ANR	513126	ParameterType	zval *		513042	0					
ANR	513127	Identifier	object		513042	1					
ANR	513128	Parameter	zval * member	191:45:5172:5183	513042	1	True				
ANR	513129	ParameterType	zval *		513042	0					
ANR	513130	Identifier	member		513042	1					
ANR	513131	Parameter	int check_empty	191:59:5186:5200	513042	2	True				
ANR	513132	ParameterType	int		513042	0					
ANR	513133	Identifier	check_empty		513042	1					
ANR	513134	Parameter	void * * cache_slot	191:76:5203:5219	513042	3	True				
ANR	513135	ParameterType	void * *		513042	0					
ANR	513136	Identifier	cache_slot		513042	1					
ANR	513137	CFGEntryNode	ENTRY		513042		True				
ANR	513138	CFGExitNode	EXIT		513042		True				
ANR	513139	Symbol	cache_slot		513042						
ANR	513140	Symbol	& dispid		513042						
ANR	513141	Symbol	check_empty		513042						
ANR	513142	Symbol	VT_DISPATCH		513042						
ANR	513143	Symbol	Z_STRVAL_P		513042						
ANR	513144	Symbol	V_VT		513042						
ANR	513145	Symbol	php_com_get_id_of_name		513042						
ANR	513146	Symbol	obj		513042						
ANR	513147	Symbol	SUCCEEDED		513042						
ANR	513148	Symbol	member		513042						
ANR	513149	Symbol	CDNO_FETCH		513042						
ANR	513150	Symbol	& obj -> v		513042						
ANR	513151	Symbol	Z_STRLEN_P		513042						
ANR	513152	Symbol	object		513042						
ANR	513153	Symbol	dispid		513042						
ANR	513154	Function	com_dimension_exists	211:0:5599:5772							
ANR	513155	FunctionDef	"com_dimension_exists (zval * object , zval * member , int check_empty)"		513154	0					
ANR	513156	CompoundStatement		212:0:5676:5772	513154	0					
ANR	513157	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Operation not yet supported on a COM object"" )"	213:1:5679:5759	513154	0	True				
ANR	513158	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Operation not yet supported on a COM object"" )"		513154	0					
ANR	513159	Callee	php_error_docref		513154	0					
ANR	513160	Identifier	php_error_docref		513154	0					
ANR	513161	ArgumentList	NULL		513154	1					
ANR	513162	Argument	NULL		513154	0					
ANR	513163	Identifier	NULL		513154	0					
ANR	513164	Argument	E_WARNING		513154	1					
ANR	513165	Identifier	E_WARNING		513154	0					
ANR	513166	Argument	"""Operation not yet supported on a COM object"""		513154	2					
ANR	513167	PrimaryExpression	"""Operation not yet supported on a COM object"""		513154	0					
ANR	513168	ReturnStatement	return 0 ;	214:1:5762:5770	513154	1	True				
ANR	513169	PrimaryExpression	0		513154	0					
ANR	513170	ReturnType	static int		513154	1					
ANR	513171	Identifier	com_dimension_exists		513154	2					
ANR	513172	ParameterList	"zval * object , zval * member , int check_empty"		513154	3					
ANR	513173	Parameter	zval * object	211:32:5631:5642	513154	0	True				
ANR	513174	ParameterType	zval *		513154	0					
ANR	513175	Identifier	object		513154	1					
ANR	513176	Parameter	zval * member	211:46:5645:5656	513154	1	True				
ANR	513177	ParameterType	zval *		513154	0					
ANR	513178	Identifier	member		513154	1					
ANR	513179	Parameter	int check_empty	211:60:5659:5673	513154	2	True				
ANR	513180	ParameterType	int		513154	0					
ANR	513181	Identifier	check_empty		513154	1					
ANR	513182	CFGEntryNode	ENTRY		513154		True				
ANR	513183	CFGExitNode	EXIT		513154		True				
ANR	513184	Symbol	E_WARNING		513154						
ANR	513185	Symbol	check_empty		513154						
ANR	513186	Symbol	NULL		513154						
ANR	513187	Symbol	member		513154						
ANR	513188	Symbol	object		513154						
ANR	513189	Function	com_property_delete	217:0:5775:5938							
ANR	513190	FunctionDef	"com_property_delete (zval * object , zval * member , void * * cache_slot)"		513189	0					
ANR	513191	CompoundStatement		218:0:5854:5938	513189	0					
ANR	513192	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"	219:1:5857:5936	513189	0	True				
ANR	513193	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"		513189	0					
ANR	513194	Callee	php_error_docref		513189	0					
ANR	513195	Identifier	php_error_docref		513189	0					
ANR	513196	ArgumentList	NULL		513189	1					
ANR	513197	Argument	NULL		513189	0					
ANR	513198	Identifier	NULL		513189	0					
ANR	513199	Argument	E_WARNING		513189	1					
ANR	513200	Identifier	E_WARNING		513189	0					
ANR	513201	Argument	"""Cannot delete properties from a COM object"""		513189	2					
ANR	513202	PrimaryExpression	"""Cannot delete properties from a COM object"""		513189	0					
ANR	513203	ReturnType	static void		513189	1					
ANR	513204	Identifier	com_property_delete		513189	2					
ANR	513205	ParameterList	"zval * object , zval * member , void * * cache_slot"		513189	3					
ANR	513206	Parameter	zval * object	217:32:5807:5818	513189	0	True				
ANR	513207	ParameterType	zval *		513189	0					
ANR	513208	Identifier	object		513189	1					
ANR	513209	Parameter	zval * member	217:46:5821:5832	513189	1	True				
ANR	513210	ParameterType	zval *		513189	0					
ANR	513211	Identifier	member		513189	1					
ANR	513212	Parameter	void * * cache_slot	217:60:5835:5851	513189	2	True				
ANR	513213	ParameterType	void * *		513189	0					
ANR	513214	Identifier	cache_slot		513189	1					
ANR	513215	CFGEntryNode	ENTRY		513189		True				
ANR	513216	CFGExitNode	EXIT		513189		True				
ANR	513217	Symbol	cache_slot		513189						
ANR	513218	Symbol	E_WARNING		513189						
ANR	513219	Symbol	NULL		513189						
ANR	513220	Symbol	member		513189						
ANR	513221	Symbol	object		513189						
ANR	513222	Function	com_dimension_delete	222:0:5941:6086							
ANR	513223	FunctionDef	"com_dimension_delete (zval * object , zval * offset)"		513222	0					
ANR	513224	CompoundStatement		223:0:6002:6086	513222	0					
ANR	513225	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"	224:1:6005:6084	513222	0	True				
ANR	513226	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"		513222	0					
ANR	513227	Callee	php_error_docref		513222	0					
ANR	513228	Identifier	php_error_docref		513222	0					
ANR	513229	ArgumentList	NULL		513222	1					
ANR	513230	Argument	NULL		513222	0					
ANR	513231	Identifier	NULL		513222	0					
ANR	513232	Argument	E_WARNING		513222	1					
ANR	513233	Identifier	E_WARNING		513222	0					
ANR	513234	Argument	"""Cannot delete properties from a COM object"""		513222	2					
ANR	513235	PrimaryExpression	"""Cannot delete properties from a COM object"""		513222	0					
ANR	513236	ReturnType	static void		513222	1					
ANR	513237	Identifier	com_dimension_delete		513222	2					
ANR	513238	ParameterList	"zval * object , zval * offset"		513222	3					
ANR	513239	Parameter	zval * object	222:33:5974:5985	513222	0	True				
ANR	513240	ParameterType	zval *		513222	0					
ANR	513241	Identifier	object		513222	1					
ANR	513242	Parameter	zval * offset	222:47:5988:5999	513222	1	True				
ANR	513243	ParameterType	zval *		513222	0					
ANR	513244	Identifier	offset		513222	1					
ANR	513245	CFGEntryNode	ENTRY		513222		True				
ANR	513246	CFGExitNode	EXIT		513222		True				
ANR	513247	Symbol	E_WARNING		513222						
ANR	513248	Symbol	NULL		513222						
ANR	513249	Symbol	offset		513222						
ANR	513250	Symbol	object		513222						
ANR	513251	Function	com_properties_get	227:0:6089:6397							
ANR	513252	FunctionDef	com_properties_get (zval * object)		513251	0					
ANR	513253	CompoundStatement		228:0:6140:6397	513251	0					
ANR	513254	ReturnStatement	return NULL ;	234:1:6384:6395	513251	0	True				
ANR	513255	Identifier	NULL		513251	0					
ANR	513256	ReturnType	static HashTable *		513251	1					
ANR	513257	Identifier	com_properties_get		513251	2					
ANR	513258	ParameterList	zval * object		513251	3					
ANR	513259	Parameter	zval * object	227:37:6126:6137	513251	0	True				
ANR	513260	ParameterType	zval *		513251	0					
ANR	513261	Identifier	object		513251	1					
ANR	513262	CFGEntryNode	ENTRY		513251		True				
ANR	513263	CFGExitNode	EXIT		513251		True				
ANR	513264	Symbol	NULL		513251						
ANR	513265	Symbol	object		513251						
ANR	513266	Function	function_dtor	237:0:6400:6602							
ANR	513267	FunctionDef	function_dtor (zval * zv)		513266	0					
ANR	513268	CompoundStatement		238:0:6436:6602	513266	0					
ANR	513269	IdentifierDeclStatement	zend_internal_function * f = ( zend_internal_function * ) Z_PTR_P ( zv ) ;	239:1:6439:6503	513266	0	True				
ANR	513270	IdentifierDecl	* f = ( zend_internal_function * ) Z_PTR_P ( zv )		513266	0					
ANR	513271	IdentifierDeclType	zend_internal_function *		513266	0					
ANR	513272	Identifier	f		513266	1					
ANR	513273	AssignmentExpression	* f = ( zend_internal_function * ) Z_PTR_P ( zv )		513266	2		=			
ANR	513274	Identifier	f		513266	0					
ANR	513275	CastExpression	( zend_internal_function * ) Z_PTR_P ( zv )		513266	1					
ANR	513276	CastTarget	zend_internal_function *		513266	0					
ANR	513277	CallExpression	Z_PTR_P ( zv )		513266	1					
ANR	513278	Callee	Z_PTR_P		513266	0					
ANR	513279	Identifier	Z_PTR_P		513266	0					
ANR	513280	ArgumentList	zv		513266	1					
ANR	513281	Argument	zv		513266	0					
ANR	513282	Identifier	zv		513266	0					
ANR	513283	ExpressionStatement	zend_string_release ( f -> function_name )	241:1:6507:6544	513266	1	True				
ANR	513284	CallExpression	zend_string_release ( f -> function_name )		513266	0					
ANR	513285	Callee	zend_string_release		513266	0					
ANR	513286	Identifier	zend_string_release		513266	0					
ANR	513287	ArgumentList	f -> function_name		513266	1					
ANR	513288	Argument	f -> function_name		513266	0					
ANR	513289	PtrMemberAccess	f -> function_name		513266	0					
ANR	513290	Identifier	f		513266	0					
ANR	513291	Identifier	function_name		513266	1					
ANR	513292	IfStatement	if ( f -> arg_info )		513266	2					
ANR	513293	Condition	f -> arg_info	242:5:6551:6561	513266	0	True				
ANR	513294	PtrMemberAccess	f -> arg_info		513266	0					
ANR	513295	Identifier	f		513266	0					
ANR	513296	Identifier	arg_info		513266	1					
ANR	513297	CompoundStatement		5:18:127:127	513266	1					
ANR	513298	ExpressionStatement	efree ( f -> arg_info )	243:2:6568:6586	513266	0	True				
ANR	513299	CallExpression	efree ( f -> arg_info )		513266	0					
ANR	513300	Callee	efree		513266	0					
ANR	513301	Identifier	efree		513266	0					
ANR	513302	ArgumentList	f -> arg_info		513266	1					
ANR	513303	Argument	f -> arg_info		513266	0					
ANR	513304	PtrMemberAccess	f -> arg_info		513266	0					
ANR	513305	Identifier	f		513266	0					
ANR	513306	Identifier	arg_info		513266	1					
ANR	513307	ExpressionStatement	efree ( f )	245:1:6592:6600	513266	3	True				
ANR	513308	CallExpression	efree ( f )		513266	0					
ANR	513309	Callee	efree		513266	0					
ANR	513310	Identifier	efree		513266	0					
ANR	513311	ArgumentList	f		513266	1					
ANR	513312	Argument	f		513266	0					
ANR	513313	Identifier	f		513266	0					
ANR	513314	ReturnType	static void		513266	1					
ANR	513315	Identifier	function_dtor		513266	2					
ANR	513316	ParameterList	zval * zv		513266	3					
ANR	513317	Parameter	zval * zv	237:26:6426:6433	513266	0	True				
ANR	513318	ParameterType	zval *		513266	0					
ANR	513319	Identifier	zv		513266	1					
ANR	513320	CFGEntryNode	ENTRY		513266		True				
ANR	513321	CFGExitNode	EXIT		513266		True				
ANR	513322	Symbol	* f		513266						
ANR	513323	Symbol	Z_PTR_P		513266						
ANR	513324	Symbol	f		513266						
ANR	513325	Symbol	f -> arg_info		513266						
ANR	513326	Symbol	zv		513266						
ANR	513327	Symbol	f -> function_name		513266						
ANR	513328	DeclStmt									
ANR	513329	Decl							zval	zval *	object
ANR	513330	Function	com_method_get	258:0:6830:9614							
ANR	513331	FunctionDef	"com_method_get (zend_object * * object_ptr , zend_string * name , const zval * key)"		513330	0					
ANR	513332	CompoundStatement		259:0:6936:9614	513330	0					
ANR	513333	IdentifierDeclStatement	"zend_internal_function f , * fptr = NULL ;"	260:1:6939:6977	513330	0	True				
ANR	513334	IdentifierDecl	f		513330	0					
ANR	513335	IdentifierDeclType	zend_internal_function		513330	0					
ANR	513336	Identifier	f		513330	1					
ANR	513337	IdentifierDecl	* fptr = NULL		513330	1					
ANR	513338	IdentifierDeclType	zend_internal_function *		513330	0					
ANR	513339	Identifier	fptr		513330	1					
ANR	513340	AssignmentExpression	* fptr = NULL		513330	2		=			
ANR	513341	Identifier	NULL		513330	0					
ANR	513342	Identifier	NULL		513330	1					
ANR	513343	IdentifierDeclStatement	union _zend_function * func ;	261:1:6980:7006	513330	1	True				
ANR	513344	IdentifierDecl	* func		513330	0					
ANR	513345	IdentifierDeclType	union _zend_function *		513330	0					
ANR	513346	Identifier	func		513330	1					
ANR	513347	IdentifierDeclStatement	DISPID dummy ;	262:1:7009:7021	513330	2	True				
ANR	513348	IdentifierDecl	dummy		513330	0					
ANR	513349	IdentifierDeclType	DISPID		513330	0					
ANR	513350	Identifier	dummy		513330	1					
ANR	513351	IdentifierDeclStatement	php_com_dotnet_object * obj = ( php_com_dotnet_object * ) * object_ptr ;	263:1:7024:7088	513330	3	True				
ANR	513352	IdentifierDecl	* obj = ( php_com_dotnet_object * ) * object_ptr		513330	0					
ANR	513353	IdentifierDeclType	php_com_dotnet_object *		513330	0					
ANR	513354	Identifier	obj		513330	1					
ANR	513355	AssignmentExpression	* obj = ( php_com_dotnet_object * ) * object_ptr		513330	2		=			
ANR	513356	Identifier	obj		513330	0					
ANR	513357	CastExpression	( php_com_dotnet_object * ) * object_ptr		513330	1					
ANR	513358	CastTarget	php_com_dotnet_object *		513330	0					
ANR	513359	UnaryOperationExpression	* object_ptr		513330	1					
ANR	513360	UnaryOperator	*		513330	0					
ANR	513361	Identifier	object_ptr		513330	1					
ANR	513362	IfStatement	if ( V_VT ( & obj -> v ) != VT_DISPATCH )		513330	4					
ANR	513363	Condition	V_VT ( & obj -> v ) != VT_DISPATCH	265:5:7096:7123	513330	0	True				
ANR	513364	EqualityExpression	V_VT ( & obj -> v ) != VT_DISPATCH		513330	0		!=			
ANR	513365	CallExpression	V_VT ( & obj -> v )		513330	0					
ANR	513366	Callee	V_VT		513330	0					
ANR	513367	Identifier	V_VT		513330	0					
ANR	513368	ArgumentList	& obj -> v		513330	1					
ANR	513369	Argument	& obj -> v		513330	0					
ANR	513370	UnaryOperationExpression	& obj -> v		513330	0					
ANR	513371	UnaryOperator	&		513330	0					
ANR	513372	PtrMemberAccess	obj -> v		513330	1					
ANR	513373	Identifier	obj		513330	0					
ANR	513374	Identifier	v		513330	1					
ANR	513375	Identifier	VT_DISPATCH		513330	1					
ANR	513376	CompoundStatement		7:35:189:189	513330	1					
ANR	513377	ReturnStatement	return NULL ;	266:2:7130:7141	513330	0	True				
ANR	513378	Identifier	NULL		513330	0					
ANR	513379	IfStatement	"if ( FAILED ( php_com_get_id_of_name ( obj , name -> val , name -> len , & dummy ) ) )"		513330	5					
ANR	513380	Condition	"FAILED ( php_com_get_id_of_name ( obj , name -> val , name -> len , & dummy ) )"	269:5:7152:7216	513330	0	True				
ANR	513381	CallExpression	"FAILED ( php_com_get_id_of_name ( obj , name -> val , name -> len , & dummy ) )"		513330	0					
ANR	513382	Callee	FAILED		513330	0					
ANR	513383	Identifier	FAILED		513330	0					
ANR	513384	ArgumentList	"php_com_get_id_of_name ( obj , name -> val , name -> len , & dummy )"		513330	1					
ANR	513385	Argument	"php_com_get_id_of_name ( obj , name -> val , name -> len , & dummy )"		513330	0					
ANR	513386	CallExpression	"php_com_get_id_of_name ( obj , name -> val , name -> len , & dummy )"		513330	0					
ANR	513387	Callee	php_com_get_id_of_name		513330	0					
ANR	513388	Identifier	php_com_get_id_of_name		513330	0					
ANR	513389	ArgumentList	obj		513330	1					
ANR	513390	Argument	obj		513330	0					
ANR	513391	Identifier	obj		513330	0					
ANR	513392	Argument	name -> val		513330	1					
ANR	513393	PtrMemberAccess	name -> val		513330	0					
ANR	513394	Identifier	name		513330	0					
ANR	513395	Identifier	val		513330	1					
ANR	513396	Argument	name -> len		513330	2					
ANR	513397	PtrMemberAccess	name -> len		513330	0					
ANR	513398	Identifier	name		513330	0					
ANR	513399	Identifier	len		513330	1					
ANR	513400	Argument	& dummy		513330	3					
ANR	513401	UnaryOperationExpression	& dummy		513330	0					
ANR	513402	UnaryOperator	&		513330	0					
ANR	513403	Identifier	dummy		513330	1					
ANR	513404	CompoundStatement		11:72:282:282	513330	1					
ANR	513405	ReturnStatement	return NULL ;	270:2:7223:7234	513330	0	True				
ANR	513406	Identifier	NULL		513330	0					
ANR	513407	IfStatement	"if ( obj -> method_cache == NULL || NULL == ( fptr = zend_hash_find_ptr ( obj -> method_cache , name ) ) )"		513330	6					
ANR	513408	Condition	"obj -> method_cache == NULL || NULL == ( fptr = zend_hash_find_ptr ( obj -> method_cache , name ) )"	274:5:7264:7352	513330	0	True				
ANR	513409	OrExpression	"obj -> method_cache == NULL || NULL == ( fptr = zend_hash_find_ptr ( obj -> method_cache , name ) )"		513330	0		||			
ANR	513410	EqualityExpression	obj -> method_cache == NULL		513330	0		==			
ANR	513411	PtrMemberAccess	obj -> method_cache		513330	0					
ANR	513412	Identifier	obj		513330	0					
ANR	513413	Identifier	method_cache		513330	1					
ANR	513414	Identifier	NULL		513330	1					
ANR	513415	EqualityExpression	"NULL == ( fptr = zend_hash_find_ptr ( obj -> method_cache , name ) )"		513330	1		==			
ANR	513416	Identifier	NULL		513330	0					
ANR	513417	AssignmentExpression	"fptr = zend_hash_find_ptr ( obj -> method_cache , name )"		513330	1		=			
ANR	513418	Identifier	fptr		513330	0					
ANR	513419	CallExpression	"zend_hash_find_ptr ( obj -> method_cache , name )"		513330	1					
ANR	513420	Callee	zend_hash_find_ptr		513330	0					
ANR	513421	Identifier	zend_hash_find_ptr		513330	0					
ANR	513422	ArgumentList	obj -> method_cache		513330	1					
ANR	513423	Argument	obj -> method_cache		513330	0					
ANR	513424	PtrMemberAccess	obj -> method_cache		513330	0					
ANR	513425	Identifier	obj		513330	0					
ANR	513426	Identifier	method_cache		513330	1					
ANR	513427	Argument	name		513330	1					
ANR	513428	Identifier	name		513330	0					
ANR	513429	CompoundStatement		16:96:418:418	513330	1					
ANR	513430	ExpressionStatement	f . type = ZEND_OVERLOADED_FUNCTION	275:2:7359:7392	513330	0	True				
ANR	513431	AssignmentExpression	f . type = ZEND_OVERLOADED_FUNCTION		513330	0		=			
ANR	513432	MemberAccess	f . type		513330	0					
ANR	513433	Identifier	f		513330	0					
ANR	513434	Identifier	type		513330	1					
ANR	513435	Identifier	ZEND_OVERLOADED_FUNCTION		513330	1					
ANR	513436	ExpressionStatement	f . num_args = 0	276:2:7396:7410	513330	1	True				
ANR	513437	AssignmentExpression	f . num_args = 0		513330	0		=			
ANR	513438	MemberAccess	f . num_args		513330	0					
ANR	513439	Identifier	f		513330	0					
ANR	513440	Identifier	num_args		513330	1					
ANR	513441	PrimaryExpression	0		513330	1					
ANR	513442	ExpressionStatement	f . arg_info = NULL	277:2:7414:7431	513330	2	True				
ANR	513443	AssignmentExpression	f . arg_info = NULL		513330	0		=			
ANR	513444	MemberAccess	f . arg_info		513330	0					
ANR	513445	Identifier	f		513330	0					
ANR	513446	Identifier	arg_info		513330	1					
ANR	513447	Identifier	NULL		513330	1					
ANR	513448	ExpressionStatement	f . scope = obj -> ce	278:2:7435:7452	513330	3	True				
ANR	513449	AssignmentExpression	f . scope = obj -> ce		513330	0		=			
ANR	513450	MemberAccess	f . scope		513330	0					
ANR	513451	Identifier	f		513330	0					
ANR	513452	Identifier	scope		513330	1					
ANR	513453	PtrMemberAccess	obj -> ce		513330	1					
ANR	513454	Identifier	obj		513330	0					
ANR	513455	Identifier	ce		513330	1					
ANR	513456	ExpressionStatement	f . fn_flags = ZEND_ACC_CALL_VIA_HANDLER	279:2:7456:7494	513330	4	True				
ANR	513457	AssignmentExpression	f . fn_flags = ZEND_ACC_CALL_VIA_HANDLER		513330	0		=			
ANR	513458	MemberAccess	f . fn_flags		513330	0					
ANR	513459	Identifier	f		513330	0					
ANR	513460	Identifier	fn_flags		513330	1					
ANR	513461	Identifier	ZEND_ACC_CALL_VIA_HANDLER		513330	1					
ANR	513462	ExpressionStatement	f . function_name = zend_string_copy ( name )	280:2:7498:7538	513330	5	True				
ANR	513463	AssignmentExpression	f . function_name = zend_string_copy ( name )		513330	0		=			
ANR	513464	MemberAccess	f . function_name		513330	0					
ANR	513465	Identifier	f		513330	0					
ANR	513466	Identifier	function_name		513330	1					
ANR	513467	CallExpression	zend_string_copy ( name )		513330	1					
ANR	513468	Callee	zend_string_copy		513330	0					
ANR	513469	Identifier	zend_string_copy		513330	0					
ANR	513470	ArgumentList	name		513330	1					
ANR	513471	Argument	name		513330	0					
ANR	513472	Identifier	name		513330	0					
ANR	513473	ExpressionStatement	f . handler = PHP_FN ( com_method_handler )	281:2:7542:7580	513330	6	True				
ANR	513474	AssignmentExpression	f . handler = PHP_FN ( com_method_handler )		513330	0		=			
ANR	513475	MemberAccess	f . handler		513330	0					
ANR	513476	Identifier	f		513330	0					
ANR	513477	Identifier	handler		513330	1					
ANR	513478	CallExpression	PHP_FN ( com_method_handler )		513330	1					
ANR	513479	Callee	PHP_FN		513330	0					
ANR	513480	Identifier	PHP_FN		513330	0					
ANR	513481	ArgumentList	com_method_handler		513330	1					
ANR	513482	Argument	com_method_handler		513330	0					
ANR	513483	Identifier	com_method_handler		513330	0					
ANR	513484	ExpressionStatement	zend_set_function_arg_flags ( ( zend_function * ) & f )	282:2:7584:7631	513330	7	True				
ANR	513485	CallExpression	zend_set_function_arg_flags ( ( zend_function * ) & f )		513330	0					
ANR	513486	Callee	zend_set_function_arg_flags		513330	0					
ANR	513487	Identifier	zend_set_function_arg_flags		513330	0					
ANR	513488	ArgumentList	( zend_function * ) & f		513330	1					
ANR	513489	Argument	( zend_function * ) & f		513330	0					
ANR	513490	CastExpression	( zend_function * ) & f		513330	0					
ANR	513491	CastTarget	zend_function *		513330	0					
ANR	513492	UnaryOperationExpression	& f		513330	1					
ANR	513493	UnaryOperator	&		513330	0					
ANR	513494	Identifier	f		513330	1					
ANR	513495	ExpressionStatement	fptr = & f	284:2:7636:7645	513330	8	True				
ANR	513496	AssignmentExpression	fptr = & f		513330	0		=			
ANR	513497	Identifier	fptr		513330	0					
ANR	513498	UnaryOperationExpression	& f		513330	1					
ANR	513499	UnaryOperator	&		513330	0					
ANR	513500	Identifier	f		513330	1					
ANR	513501	IfStatement	if ( obj -> typeinfo )		513330	9					
ANR	513502	Condition	obj -> typeinfo	286:6:7654:7666	513330	0	True				
ANR	513503	PtrMemberAccess	obj -> typeinfo		513330	0					
ANR	513504	Identifier	obj		513330	0					
ANR	513505	Identifier	typeinfo		513330	1					
ANR	513506	CompoundStatement		36:3:888:893	513330	1					
ANR	513507	IdentifierDeclStatement	ITypeComp * comp ;	288:3:7705:7720	513330	0	True				
ANR	513508	IdentifierDecl	* comp		513330	0					
ANR	513509	IdentifierDeclType	ITypeComp *		513330	0					
ANR	513510	Identifier	comp		513330	1					
ANR	513511	IdentifierDeclStatement	ITypeInfo * TI = NULL ;	289:3:7725:7745	513330	1	True				
ANR	513512	IdentifierDecl	* TI = NULL		513330	0					
ANR	513513	IdentifierDeclType	ITypeInfo *		513330	0					
ANR	513514	Identifier	TI		513330	1					
ANR	513515	AssignmentExpression	* TI = NULL		513330	2		=			
ANR	513516	Identifier	NULL		513330	0					
ANR	513517	Identifier	NULL		513330	1					
ANR	513518	IdentifierDeclStatement	DESCKIND kind ;	290:3:7750:7763	513330	2	True				
ANR	513519	IdentifierDecl	kind		513330	0					
ANR	513520	IdentifierDeclType	DESCKIND		513330	0					
ANR	513521	Identifier	kind		513330	1					
ANR	513522	IdentifierDeclStatement	BINDPTR bindptr ;	291:3:7768:7783	513330	3	True				
ANR	513523	IdentifierDecl	bindptr		513330	0					
ANR	513524	IdentifierDeclType	BINDPTR		513330	0					
ANR	513525	Identifier	bindptr		513330	1					
ANR	513526	IdentifierDeclStatement	OLECHAR * olename ;	292:3:7788:7804	513330	4	True				
ANR	513527	IdentifierDecl	* olename		513330	0					
ANR	513528	IdentifierDeclType	OLECHAR *		513330	0					
ANR	513529	Identifier	olename		513330	1					
ANR	513530	IdentifierDeclStatement	ULONG lhash ;	293:3:7809:7820	513330	5	True				
ANR	513531	IdentifierDecl	lhash		513330	0					
ANR	513532	IdentifierDeclType	ULONG		513330	0					
ANR	513533	Identifier	lhash		513330	1					
ANR	513534	IdentifierDeclStatement	int i ;	294:3:7825:7830	513330	6	True				
ANR	513535	IdentifierDecl	i		513330	0					
ANR	513536	IdentifierDeclType	int		513330	0					
ANR	513537	Identifier	i		513330	1					
ANR	513538	IfStatement	"if ( SUCCEEDED ( ITypeInfo_GetTypeComp ( obj -> typeinfo , & comp ) ) )"		513330	7					
ANR	513539	Condition	"SUCCEEDED ( ITypeInfo_GetTypeComp ( obj -> typeinfo , & comp ) )"	296:7:7840:7893	513330	0	True				
ANR	513540	CallExpression	"SUCCEEDED ( ITypeInfo_GetTypeComp ( obj -> typeinfo , & comp ) )"		513330	0					
ANR	513541	Callee	SUCCEEDED		513330	0					
ANR	513542	Identifier	SUCCEEDED		513330	0					
ANR	513543	ArgumentList	"ITypeInfo_GetTypeComp ( obj -> typeinfo , & comp )"		513330	1					
ANR	513544	Argument	"ITypeInfo_GetTypeComp ( obj -> typeinfo , & comp )"		513330	0					
ANR	513545	CallExpression	"ITypeInfo_GetTypeComp ( obj -> typeinfo , & comp )"		513330	0					
ANR	513546	Callee	ITypeInfo_GetTypeComp		513330	0					
ANR	513547	Identifier	ITypeInfo_GetTypeComp		513330	0					
ANR	513548	ArgumentList	obj -> typeinfo		513330	1					
ANR	513549	Argument	obj -> typeinfo		513330	0					
ANR	513550	PtrMemberAccess	obj -> typeinfo		513330	0					
ANR	513551	Identifier	obj		513330	0					
ANR	513552	Identifier	typeinfo		513330	1					
ANR	513553	Argument	& comp		513330	1					
ANR	513554	UnaryOperationExpression	& comp		513330	0					
ANR	513555	UnaryOperator	&		513330	0					
ANR	513556	Identifier	comp		513330	1					
ANR	513557	CompoundStatement		38:63:959:959	513330	1					
ANR	513558	ExpressionStatement	"olename = php_com_string_to_olestring ( name -> val , name -> len , obj -> code_page )"	297:4:7902:7977	513330	0	True				
ANR	513559	AssignmentExpression	"olename = php_com_string_to_olestring ( name -> val , name -> len , obj -> code_page )"		513330	0		=			
ANR	513560	Identifier	olename		513330	0					
ANR	513561	CallExpression	"php_com_string_to_olestring ( name -> val , name -> len , obj -> code_page )"		513330	1					
ANR	513562	Callee	php_com_string_to_olestring		513330	0					
ANR	513563	Identifier	php_com_string_to_olestring		513330	0					
ANR	513564	ArgumentList	name -> val		513330	1					
ANR	513565	Argument	name -> val		513330	0					
ANR	513566	PtrMemberAccess	name -> val		513330	0					
ANR	513567	Identifier	name		513330	0					
ANR	513568	Identifier	val		513330	1					
ANR	513569	Argument	name -> len		513330	1					
ANR	513570	PtrMemberAccess	name -> len		513330	0					
ANR	513571	Identifier	name		513330	0					
ANR	513572	Identifier	len		513330	1					
ANR	513573	Argument	obj -> code_page		513330	2					
ANR	513574	PtrMemberAccess	obj -> code_page		513330	0					
ANR	513575	Identifier	obj		513330	0					
ANR	513576	Identifier	code_page		513330	1					
ANR	513577	ExpressionStatement	"lhash = LHashValOfNameSys ( SYS_WIN32 , LOCALE_SYSTEM_DEFAULT , olename )"	298:4:7983:8051	513330	1	True				
ANR	513578	AssignmentExpression	"lhash = LHashValOfNameSys ( SYS_WIN32 , LOCALE_SYSTEM_DEFAULT , olename )"		513330	0		=			
ANR	513579	Identifier	lhash		513330	0					
ANR	513580	CallExpression	"LHashValOfNameSys ( SYS_WIN32 , LOCALE_SYSTEM_DEFAULT , olename )"		513330	1					
ANR	513581	Callee	LHashValOfNameSys		513330	0					
ANR	513582	Identifier	LHashValOfNameSys		513330	0					
ANR	513583	ArgumentList	SYS_WIN32		513330	1					
ANR	513584	Argument	SYS_WIN32		513330	0					
ANR	513585	Identifier	SYS_WIN32		513330	0					
ANR	513586	Argument	LOCALE_SYSTEM_DEFAULT		513330	1					
ANR	513587	Identifier	LOCALE_SYSTEM_DEFAULT		513330	0					
ANR	513588	Argument	olename		513330	2					
ANR	513589	Identifier	olename		513330	0					
ANR	513590	IfStatement	"if ( SUCCEEDED ( ITypeComp_Bind ( comp , olename , lhash , INVOKE_FUNC , & TI , & kind , & bindptr ) ) )"		513330	2					
ANR	513591	Condition	"SUCCEEDED ( ITypeComp_Bind ( comp , olename , lhash , INVOKE_FUNC , & TI , & kind , & bindptr ) )"	300:8:8062:8143	513330	0	True				
ANR	513592	CallExpression	"SUCCEEDED ( ITypeComp_Bind ( comp , olename , lhash , INVOKE_FUNC , & TI , & kind , & bindptr ) )"		513330	0					
ANR	513593	Callee	SUCCEEDED		513330	0					
ANR	513594	Identifier	SUCCEEDED		513330	0					
ANR	513595	ArgumentList	"ITypeComp_Bind ( comp , olename , lhash , INVOKE_FUNC , & TI , & kind , & bindptr )"		513330	1					
ANR	513596	Argument	"ITypeComp_Bind ( comp , olename , lhash , INVOKE_FUNC , & TI , & kind , & bindptr )"		513330	0					
ANR	513597	CallExpression	"ITypeComp_Bind ( comp , olename , lhash , INVOKE_FUNC , & TI , & kind , & bindptr )"		513330	0					
ANR	513598	Callee	ITypeComp_Bind		513330	0					
ANR	513599	Identifier	ITypeComp_Bind		513330	0					
ANR	513600	ArgumentList	comp		513330	1					
ANR	513601	Argument	comp		513330	0					
ANR	513602	Identifier	comp		513330	0					
ANR	513603	Argument	olename		513330	1					
ANR	513604	Identifier	olename		513330	0					
ANR	513605	Argument	lhash		513330	2					
ANR	513606	Identifier	lhash		513330	0					
ANR	513607	Argument	INVOKE_FUNC		513330	3					
ANR	513608	Identifier	INVOKE_FUNC		513330	0					
ANR	513609	Argument	& TI		513330	4					
ANR	513610	UnaryOperationExpression	& TI		513330	0					
ANR	513611	UnaryOperator	&		513330	0					
ANR	513612	Identifier	TI		513330	1					
ANR	513613	Argument	& kind		513330	5					
ANR	513614	UnaryOperationExpression	& kind		513330	0					
ANR	513615	UnaryOperator	&		513330	0					
ANR	513616	Identifier	kind		513330	1					
ANR	513617	Argument	& bindptr		513330	6					
ANR	513618	UnaryOperationExpression	& bindptr		513330	0					
ANR	513619	UnaryOperator	&		513330	0					
ANR	513620	Identifier	bindptr		513330	1					
ANR	513621	CompoundStatement		42:92:1209:1209	513330	1					
ANR	513622	SwitchStatement	switch ( kind )		513330	0					
ANR	513623	Condition	kind	301:13:8161:8164	513330	0	True				
ANR	513624	Identifier	kind		513330	0					
ANR	513625	CompoundStatement		43:19:1230:1230	513330	1					
ANR	513626	Label	case DESCKIND_FUNCDESC :	302:6:8175:8197	513330	0	True				
ANR	513627	Identifier	DESCKIND_FUNCDESC		513330	0					
ANR	513628	ExpressionStatement	"f . arg_info = ecalloc ( bindptr . lpfuncdesc -> cParams , sizeof ( zend_arg_info ) )"	303:7:8206:8278	513330	1	True				
ANR	513629	AssignmentExpression	"f . arg_info = ecalloc ( bindptr . lpfuncdesc -> cParams , sizeof ( zend_arg_info ) )"		513330	0		=			
ANR	513630	MemberAccess	f . arg_info		513330	0					
ANR	513631	Identifier	f		513330	0					
ANR	513632	Identifier	arg_info		513330	1					
ANR	513633	CallExpression	"ecalloc ( bindptr . lpfuncdesc -> cParams , sizeof ( zend_arg_info ) )"		513330	1					
ANR	513634	Callee	ecalloc		513330	0					
ANR	513635	Identifier	ecalloc		513330	0					
ANR	513636	ArgumentList	bindptr . lpfuncdesc -> cParams		513330	1					
ANR	513637	Argument	bindptr . lpfuncdesc -> cParams		513330	0					
ANR	513638	PtrMemberAccess	bindptr . lpfuncdesc -> cParams		513330	0					
ANR	513639	MemberAccess	bindptr . lpfuncdesc		513330	0					
ANR	513640	Identifier	bindptr		513330	0					
ANR	513641	Identifier	lpfuncdesc		513330	1					
ANR	513642	Identifier	cParams		513330	1					
ANR	513643	Argument	sizeof ( zend_arg_info )		513330	1					
ANR	513644	SizeofExpression	sizeof ( zend_arg_info )		513330	0					
ANR	513645	Sizeof	sizeof		513330	0					
ANR	513646	SizeofOperand	zend_arg_info		513330	1					
ANR	513647	ForStatement	for ( i = 0 ; i < bindptr . lpfuncdesc -> cParams ; i ++ )		513330	2					
ANR	513648	ForInit	i = 0 ;	305:12:8293:8298	513330	0	True				
ANR	513649	AssignmentExpression	i = 0		513330	0		=			
ANR	513650	Identifier	i		513330	0					
ANR	513651	PrimaryExpression	0		513330	1					
ANR	513652	Condition	i < bindptr . lpfuncdesc -> cParams	305:19:8300:8330	513330	1	True				
ANR	513653	RelationalExpression	i < bindptr . lpfuncdesc -> cParams		513330	0		<			
ANR	513654	Identifier	i		513330	0					
ANR	513655	PtrMemberAccess	bindptr . lpfuncdesc -> cParams		513330	1					
ANR	513656	MemberAccess	bindptr . lpfuncdesc		513330	0					
ANR	513657	Identifier	bindptr		513330	0					
ANR	513658	Identifier	lpfuncdesc		513330	1					
ANR	513659	Identifier	cParams		513330	1					
ANR	513660	PostIncDecOperationExpression	i ++	305:52:8333:8335	513330	2	True				
ANR	513661	Identifier	i		513330	0					
ANR	513662	IncDec	++		513330	1					
ANR	513663	CompoundStatement		47:57:1401:1401	513330	3					
ANR	513664	ExpressionStatement	f . arg_info [ i ] . allow_null = 1	306:8:8348:8376	513330	0	True				
ANR	513665	AssignmentExpression	f . arg_info [ i ] . allow_null = 1		513330	0		=			
ANR	513666	MemberAccess	f . arg_info [ i ] . allow_null		513330	0					
ANR	513667	ArrayIndexing	f . arg_info [ i ]		513330	0					
ANR	513668	MemberAccess	f . arg_info		513330	0					
ANR	513669	Identifier	f		513330	0					
ANR	513670	Identifier	arg_info		513330	1					
ANR	513671	Identifier	i		513330	1					
ANR	513672	Identifier	allow_null		513330	1					
ANR	513673	PrimaryExpression	1		513330	1					
ANR	513674	IfStatement	if ( bindptr . lpfuncdesc -> lprgelemdescParam [ i ] . paramdesc . wParamFlags & PARAMFLAG_FOUT )		513330	1					
ANR	513675	Condition	bindptr . lpfuncdesc -> lprgelemdescParam [ i ] . paramdesc . wParamFlags & PARAMFLAG_FOUT	307:12:8390:8468	513330	0	True				
ANR	513676	BitAndExpression	bindptr . lpfuncdesc -> lprgelemdescParam [ i ] . paramdesc . wParamFlags & PARAMFLAG_FOUT		513330	0		&			
ANR	513677	MemberAccess	bindptr . lpfuncdesc -> lprgelemdescParam [ i ] . paramdesc . wParamFlags		513330	0					
ANR	513678	MemberAccess	bindptr . lpfuncdesc -> lprgelemdescParam [ i ] . paramdesc		513330	0					
ANR	513679	ArrayIndexing	bindptr . lpfuncdesc -> lprgelemdescParam [ i ]		513330	0					
ANR	513680	PtrMemberAccess	bindptr . lpfuncdesc -> lprgelemdescParam		513330	0					
ANR	513681	MemberAccess	bindptr . lpfuncdesc		513330	0					
ANR	513682	Identifier	bindptr		513330	0					
ANR	513683	Identifier	lpfuncdesc		513330	1					
ANR	513684	Identifier	lprgelemdescParam		513330	1					
ANR	513685	Identifier	i		513330	1					
ANR	513686	Identifier	paramdesc		513330	1					
ANR	513687	Identifier	wParamFlags		513330	1					
ANR	513688	Identifier	PARAMFLAG_FOUT		513330	1					
ANR	513689	CompoundStatement		49:93:1534:1534	513330	1					
ANR	513690	ExpressionStatement	f . arg_info [ i ] . pass_by_reference = 1	308:9:8482:8517	513330	0	True				
ANR	513691	AssignmentExpression	f . arg_info [ i ] . pass_by_reference = 1		513330	0		=			
ANR	513692	MemberAccess	f . arg_info [ i ] . pass_by_reference		513330	0					
ANR	513693	ArrayIndexing	f . arg_info [ i ]		513330	0					
ANR	513694	MemberAccess	f . arg_info		513330	0					
ANR	513695	Identifier	f		513330	0					
ANR	513696	Identifier	arg_info		513330	1					
ANR	513697	Identifier	i		513330	1					
ANR	513698	Identifier	pass_by_reference		513330	1					
ANR	513699	PrimaryExpression	1		513330	1					
ANR	513700	ExpressionStatement	f . num_args = bindptr . lpfuncdesc -> cParams	312:7:8546:8586	513330	3	True				
ANR	513701	AssignmentExpression	f . num_args = bindptr . lpfuncdesc -> cParams		513330	0		=			
ANR	513702	MemberAccess	f . num_args		513330	0					
ANR	513703	Identifier	f		513330	0					
ANR	513704	Identifier	num_args		513330	1					
ANR	513705	PtrMemberAccess	bindptr . lpfuncdesc -> cParams		513330	1					
ANR	513706	MemberAccess	bindptr . lpfuncdesc		513330	0					
ANR	513707	Identifier	bindptr		513330	0					
ANR	513708	Identifier	lpfuncdesc		513330	1					
ANR	513709	Identifier	cParams		513330	1					
ANR	513710	ExpressionStatement	"ITypeInfo_ReleaseFuncDesc ( TI , bindptr . lpfuncdesc )"	314:7:8596:8645	513330	4	True				
ANR	513711	CallExpression	"ITypeInfo_ReleaseFuncDesc ( TI , bindptr . lpfuncdesc )"		513330	0					
ANR	513712	Callee	ITypeInfo_ReleaseFuncDesc		513330	0					
ANR	513713	Identifier	ITypeInfo_ReleaseFuncDesc		513330	0					
ANR	513714	ArgumentList	TI		513330	1					
ANR	513715	Argument	TI		513330	0					
ANR	513716	Identifier	TI		513330	0					
ANR	513717	Argument	bindptr . lpfuncdesc		513330	1					
ANR	513718	MemberAccess	bindptr . lpfuncdesc		513330	0					
ANR	513719	Identifier	bindptr		513330	0					
ANR	513720	Identifier	lpfuncdesc		513330	1					
ANR	513721	BreakStatement	break ;	315:7:8654:8659	513330	5	True				
ANR	513722	Label	case DESCKIND_VARDESC :	319:6:8789:8810	513330	6	True				
ANR	513723	Identifier	DESCKIND_VARDESC		513330	0					
ANR	513724	ExpressionStatement	"ITypeInfo_ReleaseVarDesc ( TI , bindptr . lpvardesc )"	320:7:8819:8866	513330	7	True				
ANR	513725	CallExpression	"ITypeInfo_ReleaseVarDesc ( TI , bindptr . lpvardesc )"		513330	0					
ANR	513726	Callee	ITypeInfo_ReleaseVarDesc		513330	0					
ANR	513727	Identifier	ITypeInfo_ReleaseVarDesc		513330	0					
ANR	513728	ArgumentList	TI		513330	1					
ANR	513729	Argument	TI		513330	0					
ANR	513730	Identifier	TI		513330	0					
ANR	513731	Argument	bindptr . lpvardesc		513330	1					
ANR	513732	MemberAccess	bindptr . lpvardesc		513330	0					
ANR	513733	Identifier	bindptr		513330	0					
ANR	513734	Identifier	lpvardesc		513330	1					
ANR	513735	BreakStatement	break ;	321:7:8875:8880	513330	8	True				
ANR	513736	Label	case DESCKIND_TYPECOMP :	322:6:8888:8910	513330	9	True				
ANR	513737	Identifier	DESCKIND_TYPECOMP		513330	0					
ANR	513738	ExpressionStatement	ITypeComp_Release ( bindptr . lptcomp )	323:7:8919:8953	513330	10	True				
ANR	513739	CallExpression	ITypeComp_Release ( bindptr . lptcomp )		513330	0					
ANR	513740	Callee	ITypeComp_Release		513330	0					
ANR	513741	Identifier	ITypeComp_Release		513330	0					
ANR	513742	ArgumentList	bindptr . lptcomp		513330	1					
ANR	513743	Argument	bindptr . lptcomp		513330	0					
ANR	513744	MemberAccess	bindptr . lptcomp		513330	0					
ANR	513745	Identifier	bindptr		513330	0					
ANR	513746	Identifier	lptcomp		513330	1					
ANR	513747	BreakStatement	break ;	324:7:8962:8967	513330	11	True				
ANR	513748	Label	case DESCKIND_NONE :	326:6:8976:8994	513330	12	True				
ANR	513749	Identifier	DESCKIND_NONE		513330	0					
ANR	513750	BreakStatement	break ;	327:7:9003:9008	513330	13	True				
ANR	513751	IfStatement	if ( TI )		513330	1					
ANR	513752	Condition	TI	329:9:9026:9027	513330	0	True				
ANR	513753	Identifier	TI		513330	0					
ANR	513754	CompoundStatement		71:13:2093:2093	513330	1					
ANR	513755	ExpressionStatement	ITypeInfo_Release ( TI )	330:6:9038:9059	513330	0	True				
ANR	513756	CallExpression	ITypeInfo_Release ( TI )		513330	0					
ANR	513757	Callee	ITypeInfo_Release		513330	0					
ANR	513758	Identifier	ITypeInfo_Release		513330	0					
ANR	513759	ArgumentList	TI		513330	1					
ANR	513760	Argument	TI		513330	0					
ANR	513761	Identifier	TI		513330	0					
ANR	513762	ExpressionStatement	ITypeComp_Release ( comp )	333:4:9078:9101	513330	3	True				
ANR	513763	CallExpression	ITypeComp_Release ( comp )		513330	0					
ANR	513764	Callee	ITypeComp_Release		513330	0					
ANR	513765	Identifier	ITypeComp_Release		513330	0					
ANR	513766	ArgumentList	comp		513330	1					
ANR	513767	Argument	comp		513330	0					
ANR	513768	Identifier	comp		513330	0					
ANR	513769	ExpressionStatement	efree ( olename )	334:4:9107:9121	513330	4	True				
ANR	513770	CallExpression	efree ( olename )		513330	0					
ANR	513771	Callee	efree		513330	0					
ANR	513772	Identifier	efree		513330	0					
ANR	513773	ArgumentList	olename		513330	1					
ANR	513774	Argument	olename		513330	0					
ANR	513775	Identifier	olename		513330	0					
ANR	513776	IfStatement	if ( fptr )		513330	10					
ANR	513777	Condition	fptr	338:6:9139:9142	513330	0	True				
ANR	513778	Identifier	fptr		513330	0					
ANR	513779	CompoundStatement		80:12:2208:2208	513330	1					
ANR	513780	IfStatement	if ( ! obj -> method_cache )		513330	0					
ANR	513781	Condition	! obj -> method_cache	340:7:9193:9210	513330	0	True				
ANR	513782	UnaryOperationExpression	! obj -> method_cache		513330	0					
ANR	513783	UnaryOperator	!		513330	0					
ANR	513784	PtrMemberAccess	obj -> method_cache		513330	1					
ANR	513785	Identifier	obj		513330	0					
ANR	513786	Identifier	method_cache		513330	1					
ANR	513787	CompoundStatement		82:27:2276:2276	513330	1					
ANR	513788	ExpressionStatement	ALLOC_HASHTABLE ( obj -> method_cache )	341:4:9219:9253	513330	0	True				
ANR	513789	CallExpression	ALLOC_HASHTABLE ( obj -> method_cache )		513330	0					
ANR	513790	Callee	ALLOC_HASHTABLE		513330	0					
ANR	513791	Identifier	ALLOC_HASHTABLE		513330	0					
ANR	513792	ArgumentList	obj -> method_cache		513330	1					
ANR	513793	Argument	obj -> method_cache		513330	0					
ANR	513794	PtrMemberAccess	obj -> method_cache		513330	0					
ANR	513795	Identifier	obj		513330	0					
ANR	513796	Identifier	method_cache		513330	1					
ANR	513797	ExpressionStatement	"zend_hash_init ( obj -> method_cache , 2 , NULL , function_dtor , 0 )"	342:4:9259:9319	513330	1	True				
ANR	513798	CallExpression	"zend_hash_init ( obj -> method_cache , 2 , NULL , function_dtor , 0 )"		513330	0					
ANR	513799	Callee	zend_hash_init		513330	0					
ANR	513800	Identifier	zend_hash_init		513330	0					
ANR	513801	ArgumentList	obj -> method_cache		513330	1					
ANR	513802	Argument	obj -> method_cache		513330	0					
ANR	513803	PtrMemberAccess	obj -> method_cache		513330	0					
ANR	513804	Identifier	obj		513330	0					
ANR	513805	Identifier	method_cache		513330	1					
ANR	513806	Argument	2		513330	1					
ANR	513807	PrimaryExpression	2		513330	0					
ANR	513808	Argument	NULL		513330	2					
ANR	513809	Identifier	NULL		513330	0					
ANR	513810	Argument	function_dtor		513330	3					
ANR	513811	Identifier	function_dtor		513330	0					
ANR	513812	Argument	0		513330	4					
ANR	513813	PrimaryExpression	0		513330	0					
ANR	513814	ExpressionStatement	"zend_hash_update_mem ( obj -> method_cache , name , & f , sizeof ( f ) )"	345:3:9330:9390	513330	1	True				
ANR	513815	CallExpression	"zend_hash_update_mem ( obj -> method_cache , name , & f , sizeof ( f ) )"		513330	0					
ANR	513816	Callee	zend_hash_update_mem		513330	0					
ANR	513817	Identifier	zend_hash_update_mem		513330	0					
ANR	513818	ArgumentList	obj -> method_cache		513330	1					
ANR	513819	Argument	obj -> method_cache		513330	0					
ANR	513820	PtrMemberAccess	obj -> method_cache		513330	0					
ANR	513821	Identifier	obj		513330	0					
ANR	513822	Identifier	method_cache		513330	1					
ANR	513823	Argument	name		513330	1					
ANR	513824	Identifier	name		513330	0					
ANR	513825	Argument	& f		513330	2					
ANR	513826	UnaryOperationExpression	& f		513330	0					
ANR	513827	UnaryOperator	&		513330	0					
ANR	513828	Identifier	f		513330	1					
ANR	513829	Argument	sizeof ( f )		513330	3					
ANR	513830	SizeofExpression	sizeof ( f )		513330	0					
ANR	513831	Sizeof	sizeof		513330	0					
ANR	513832	SizeofOperand	f		513330	1					
ANR	513833	IfStatement	if ( fptr )		513330	7					
ANR	513834	Condition	fptr	349:5:9405:9408	513330	0	True				
ANR	513835	Identifier	fptr		513330	0					
ANR	513836	CompoundStatement		91:11:2474:2474	513330	1					
ANR	513837	ExpressionStatement	func = emalloc ( sizeof ( * fptr ) )	352:2:9512:9541	513330	0	True				
ANR	513838	AssignmentExpression	func = emalloc ( sizeof ( * fptr ) )		513330	0		=			
ANR	513839	Identifier	func		513330	0					
ANR	513840	CallExpression	emalloc ( sizeof ( * fptr ) )		513330	1					
ANR	513841	Callee	emalloc		513330	0					
ANR	513842	Identifier	emalloc		513330	0					
ANR	513843	ArgumentList	sizeof ( * fptr )		513330	1					
ANR	513844	Argument	sizeof ( * fptr )		513330	0					
ANR	513845	SizeofExpression	sizeof ( * fptr )		513330	0					
ANR	513846	Sizeof	sizeof		513330	0					
ANR	513847	UnaryOperationExpression	* fptr		513330	1					
ANR	513848	UnaryOperator	*		513330	0					
ANR	513849	Identifier	fptr		513330	1					
ANR	513850	ExpressionStatement	"memcpy ( func , fptr , sizeof ( * fptr ) )"	353:2:9545:9578	513330	1	True				
ANR	513851	CallExpression	"memcpy ( func , fptr , sizeof ( * fptr ) )"		513330	0					
ANR	513852	Callee	memcpy		513330	0					
ANR	513853	Identifier	memcpy		513330	0					
ANR	513854	ArgumentList	func		513330	1					
ANR	513855	Argument	func		513330	0					
ANR	513856	Identifier	func		513330	0					
ANR	513857	Argument	fptr		513330	1					
ANR	513858	Identifier	fptr		513330	0					
ANR	513859	Argument	sizeof ( * fptr )		513330	2					
ANR	513860	SizeofExpression	sizeof ( * fptr )		513330	0					
ANR	513861	Sizeof	sizeof		513330	0					
ANR	513862	UnaryOperationExpression	* fptr		513330	1					
ANR	513863	UnaryOperator	*		513330	0					
ANR	513864	Identifier	fptr		513330	1					
ANR	513865	ReturnStatement	return func ;	355:2:9583:9594	513330	2	True				
ANR	513866	Identifier	func		513330	0					
ANR	513867	ReturnStatement	return NULL ;	358:1:9601:9612	513330	8	True				
ANR	513868	Identifier	NULL		513330	0					
ANR	513869	ReturnType	static union _zend_function *		513330	1					
ANR	513870	Identifier	com_method_get		513330	2					
ANR	513871	ParameterList	"zend_object * * object_ptr , zend_string * name , const zval * key"		513330	3					
ANR	513872	Parameter	zend_object * * object_ptr	258:44:6874:6897	513330	0	True				
ANR	513873	ParameterType	zend_object * *		513330	0					
ANR	513874	Identifier	object_ptr		513330	1					
ANR	513875	Parameter	zend_string * name	258:70:6900:6916	513330	1	True				
ANR	513876	ParameterType	zend_string *		513330	0					
ANR	513877	Identifier	name		513330	1					
ANR	513878	Parameter	const zval * key	258:89:6919:6933	513330	2	True				
ANR	513879	ParameterType	const zval *		513330	0					
ANR	513880	Identifier	key		513330	1					
ANR	513881	CFGEntryNode	ENTRY		513330		True				
ANR	513882	CFGExitNode	EXIT		513330		True				
ANR	513883	Symbol	& comp		513330						
ANR	513884	Symbol	& kind		513330						
ANR	513885	Symbol	f . arg_info		513330						
ANR	513886	Symbol	* * bindptr		513330						
ANR	513887	Symbol	obj -> typeinfo		513330						
ANR	513888	Symbol	ITypeInfo_GetTypeComp		513330						
ANR	513889	Symbol	dummy		513330						
ANR	513890	Symbol	bindptr . lpfuncdesc -> cParams		513330						
ANR	513891	Symbol	f . type		513330						
ANR	513892	Symbol	php_com_string_to_olestring		513330						
ANR	513893	Symbol	LHashValOfNameSys		513330						
ANR	513894	Symbol	f . function_name		513330						
ANR	513895	Symbol	f . arg_info [ i ] . pass_by_reference		513330						
ANR	513896	Symbol	FAILED		513330						
ANR	513897	Symbol	f . handler		513330						
ANR	513898	Symbol	bindptr . lpfuncdesc -> lprgelemdescParam		513330						
ANR	513899	Symbol	* bindptr . lpfuncdesc -> lprgelemdescParam		513330						
ANR	513900	Symbol	LOCALE_SYSTEM_DEFAULT		513330						
ANR	513901	Symbol	ecalloc		513330						
ANR	513902	Symbol	ZEND_OVERLOADED_FUNCTION		513330						
ANR	513903	Symbol	bindptr . lpfuncdesc -> lprgelemdescParam [ i ] . paramdesc . wParamFlags		513330						
ANR	513904	Symbol	function_dtor		513330						
ANR	513905	Symbol	zend_hash_find_ptr		513330						
ANR	513906	Symbol	bindptr		513330						
ANR	513907	Symbol	comp		513330						
ANR	513908	Symbol	NULL		513330						
ANR	513909	Symbol	f . num_args		513330						
ANR	513910	Symbol	kind		513330						
ANR	513911	Symbol	VT_DISPATCH		513330						
ANR	513912	Symbol	zend_string_copy		513330						
ANR	513913	Symbol	obj -> ce		513330						
ANR	513914	Symbol	PHP_FN		513330						
ANR	513915	Symbol	SYS_WIN32		513330						
ANR	513916	Symbol	* f . arg_info		513330						
ANR	513917	Symbol	php_com_get_id_of_name		513330						
ANR	513918	Symbol	INVOKE_FUNC		513330						
ANR	513919	Symbol	SUCCEEDED		513330						
ANR	513920	Symbol	name		513330						
ANR	513921	Symbol	obj -> method_cache		513330						
ANR	513922	Symbol	& TI		513330						
ANR	513923	Symbol	bindptr . lpfuncdesc		513330						
ANR	513924	Symbol	name -> len		513330						
ANR	513925	Symbol	f . fn_flags		513330						
ANR	513926	Symbol	& bindptr		513330						
ANR	513927	Symbol	f . scope		513330						
ANR	513928	Symbol	& dummy		513330						
ANR	513929	Symbol	olename		513330						
ANR	513930	Symbol	emalloc		513330						
ANR	513931	Symbol	bindptr . lpfuncdesc -> lprgelemdescParam [ i ] . paramdesc		513330						
ANR	513932	Symbol	lhash		513330						
ANR	513933	Symbol	* * bindptr . lpfuncdesc		513330						
ANR	513934	Symbol	key		513330						
ANR	513935	Symbol	* name		513330						
ANR	513936	Symbol	* fptr		513330						
ANR	513937	Symbol	* obj		513330						
ANR	513938	Symbol	bindptr . lptcomp		513330						
ANR	513939	Symbol	com_method_handler		513330						
ANR	513940	Symbol	PARAMFLAG_FOUT		513330						
ANR	513941	Symbol	bindptr . lpvardesc		513330						
ANR	513942	Symbol	f		513330						
ANR	513943	Symbol	i		513330						
ANR	513944	Symbol	obj -> code_page		513330						
ANR	513945	Symbol	& f		513330						
ANR	513946	Symbol	ITypeComp_Bind		513330						
ANR	513947	Symbol	V_VT		513330						
ANR	513948	Symbol	* f		513330						
ANR	513949	Symbol	* object_ptr		513330						
ANR	513950	Symbol	* i		513330						
ANR	513951	Symbol	func		513330						
ANR	513952	Symbol	object_ptr		513330						
ANR	513953	Symbol	TI		513330						
ANR	513954	Symbol	obj		513330						
ANR	513955	Symbol	* bindptr . lpfuncdesc		513330						
ANR	513956	Symbol	* bindptr		513330						
ANR	513957	Symbol	f . arg_info [ i ] . allow_null		513330						
ANR	513958	Symbol	fptr		513330						
ANR	513959	Symbol	& obj -> v		513330						
ANR	513960	Symbol	name -> val		513330						
ANR	513961	Symbol	ZEND_ACC_CALL_VIA_HANDLER		513330						
ANR	513962	DeclStmt									
ANR	513963	Decl							zval	zval *	args
ANR	513964	DeclStmt									
ANR	513965	Decl							php_com_dotnet_object	php_com_dotnet_object *	obj
ANR	513966	DeclStmt									
ANR	513967	Decl							int	int	nargs
ANR	513968	DeclStmt									
ANR	513969	Decl							VARIANT	VARIANT	v
ANR	513970	DeclStmt									
ANR	513971	Decl							int	int	ret
ANR	513972	Function	com_constructor_get	395:0:10358:11054							
ANR	513973	FunctionDef	com_constructor_get (zend_object * object)		513972	0					
ANR	513974	CompoundStatement		396:0:10428:11054	513972	0					
ANR	513975	IdentifierDeclStatement	php_com_dotnet_object * obj = ( php_com_dotnet_object * ) object ;	397:1:10431:10492	513972	0	True				
ANR	513976	IdentifierDecl	* obj = ( php_com_dotnet_object * ) object		513972	0					
ANR	513977	IdentifierDeclType	php_com_dotnet_object *		513972	0					
ANR	513978	Identifier	obj		513972	1					
ANR	513979	AssignmentExpression	* obj = ( php_com_dotnet_object * ) object		513972	2		=			
ANR	513980	Identifier	obj		513972	0					
ANR	513981	CastExpression	( php_com_dotnet_object * ) object		513972	1					
ANR	513982	CastTarget	php_com_dotnet_object *		513972	0					
ANR	513983	Identifier	object		513972	1					
ANR	513984	Statement	static	398:1:10495:10500	513972	1	True				
ANR	513985	IdentifierDeclStatement	"zend_internal_function c , d , v ;"	398:8:10502:10532	513972	2	True				
ANR	513986	IdentifierDecl	c		513972	0					
ANR	513987	IdentifierDeclType	zend_internal_function		513972	0					
ANR	513988	Identifier	c		513972	1					
ANR	513989	IdentifierDecl	d		513972	1					
ANR	513990	IdentifierDeclType	zend_internal_function		513972	0					
ANR	513991	Identifier	d		513972	1					
ANR	513992	IdentifierDecl	v		513972	2					
ANR	513993	IdentifierDeclType	zend_internal_function		513972	0					
ANR	513994	Identifier	v		513972	1					
ANR	513995	Statement	define	400:1:10536:10541	513972	3	True				
ANR	513996	Statement	POPULATE_CTOR	400:8:10543:10555	513972	4	True				
ANR	513997	Statement	(	400:21:10556:10556	513972	5	True				
ANR	513998	Statement	f	400:22:10557:10557	513972	6	True				
ANR	513999	Statement	","	400:23:10558:10558	513972	7	True				
ANR	514000	Statement	fn	400:25:10560:10561	513972	8	True				
ANR	514001	Statement	)	400:27:10562:10562	513972	9	True				
ANR	514002	ExpressionStatement	f . type = ZEND_INTERNAL_FUNCTION	401:1:10567:10598	513972	10	True				
ANR	514003	AssignmentExpression	f . type = ZEND_INTERNAL_FUNCTION		513972	0		=			
ANR	514004	MemberAccess	f . type		513972	0					
ANR	514005	Identifier	f		513972	0					
ANR	514006	Identifier	type		513972	1					
ANR	514007	Identifier	ZEND_INTERNAL_FUNCTION		513972	1					
ANR	514008	ExpressionStatement	f . function_name = obj -> ce -> name	402:1:10603:10634	513972	11	True				
ANR	514009	AssignmentExpression	f . function_name = obj -> ce -> name		513972	0		=			
ANR	514010	MemberAccess	f . function_name		513972	0					
ANR	514011	Identifier	f		513972	0					
ANR	514012	Identifier	function_name		513972	1					
ANR	514013	PtrMemberAccess	obj -> ce -> name		513972	1					
ANR	514014	PtrMemberAccess	obj -> ce		513972	0					
ANR	514015	Identifier	obj		513972	0					
ANR	514016	Identifier	ce		513972	1					
ANR	514017	Identifier	name		513972	1					
ANR	514018	ExpressionStatement	f . scope = obj -> ce	403:1:10639:10656	513972	12	True				
ANR	514019	AssignmentExpression	f . scope = obj -> ce		513972	0		=			
ANR	514020	MemberAccess	f . scope		513972	0					
ANR	514021	Identifier	f		513972	0					
ANR	514022	Identifier	scope		513972	1					
ANR	514023	PtrMemberAccess	obj -> ce		513972	1					
ANR	514024	Identifier	obj		513972	0					
ANR	514025	Identifier	ce		513972	1					
ANR	514026	ExpressionStatement	f . arg_info = NULL	404:1:10661:10678	513972	13	True				
ANR	514027	AssignmentExpression	f . arg_info = NULL		513972	0		=			
ANR	514028	MemberAccess	f . arg_info		513972	0					
ANR	514029	Identifier	f		513972	0					
ANR	514030	Identifier	arg_info		513972	1					
ANR	514031	Identifier	NULL		513972	1					
ANR	514032	ExpressionStatement	f . num_args = 0	405:1:10683:10697	513972	14	True				
ANR	514033	AssignmentExpression	f . num_args = 0		513972	0		=			
ANR	514034	MemberAccess	f . num_args		513972	0					
ANR	514035	Identifier	f		513972	0					
ANR	514036	Identifier	num_args		513972	1					
ANR	514037	PrimaryExpression	0		513972	1					
ANR	514038	ExpressionStatement	f . fn_flags = 0	406:1:10702:10716	513972	15	True				
ANR	514039	AssignmentExpression	f . fn_flags = 0		513972	0		=			
ANR	514040	MemberAccess	f . fn_flags		513972	0					
ANR	514041	Identifier	f		513972	0					
ANR	514042	Identifier	fn_flags		513972	1					
ANR	514043	PrimaryExpression	0		513972	1					
ANR	514044	ExpressionStatement	f . handler = ZEND_FN ( fn )	407:1:10721:10744	513972	16	True				
ANR	514045	AssignmentExpression	f . handler = ZEND_FN ( fn )		513972	0		=			
ANR	514046	MemberAccess	f . handler		513972	0					
ANR	514047	Identifier	f		513972	0					
ANR	514048	Identifier	handler		513972	1					
ANR	514049	CallExpression	ZEND_FN ( fn )		513972	1					
ANR	514050	Callee	ZEND_FN		513972	0					
ANR	514051	Identifier	ZEND_FN		513972	0					
ANR	514052	ArgumentList	fn		513972	1					
ANR	514053	Argument	fn		513972	0					
ANR	514054	Identifier	fn		513972	0					
ANR	514055	ReturnStatement	return ( union _zend_function * ) & f ;	408:1:10749:10781	513972	17	True				
ANR	514056	CastExpression	( union _zend_function * ) & f		513972	0					
ANR	514057	CastTarget	union _zend_function *		513972	0					
ANR	514058	UnaryOperationExpression	& f		513972	1					
ANR	514059	UnaryOperator	&		513972	0					
ANR	514060	Identifier	f		513972	1					
ANR	514061	SwitchStatement	switch ( obj -> ce -> name -> val [ 0 ] )		513972	18					
ANR	514062	Condition	obj -> ce -> name -> val [ 0 ]	410:9:10793:10813	513972	0	True				
ANR	514063	ArrayIndexing	obj -> ce -> name -> val [ 0 ]		513972	0					
ANR	514064	PtrMemberAccess	obj -> ce -> name -> val		513972	0					
ANR	514065	PtrMemberAccess	obj -> ce -> name		513972	0					
ANR	514066	PtrMemberAccess	obj -> ce		513972	0					
ANR	514067	Identifier	obj		513972	0					
ANR	514068	Identifier	ce		513972	1					
ANR	514069	Identifier	name		513972	1					
ANR	514070	Identifier	val		513972	1					
ANR	514071	PrimaryExpression	0		513972	1					
ANR	514072	CompoundStatement		15:32:387:387	513972	1					
ANR	514073	Label	case 'd' :	412:2:10839:10847	513972	0	True				
ANR	514074	ExpressionStatement	"POPULATE_CTOR ( d , com_dotnet_create_instance )"	413:3:10852:10896	513972	1	True				
ANR	514075	CallExpression	"POPULATE_CTOR ( d , com_dotnet_create_instance )"		513972	0					
ANR	514076	Callee	POPULATE_CTOR		513972	0					
ANR	514077	Identifier	POPULATE_CTOR		513972	0					
ANR	514078	ArgumentList	d		513972	1					
ANR	514079	Argument	d		513972	0					
ANR	514080	Identifier	d		513972	0					
ANR	514081	Argument	com_dotnet_create_instance		513972	1					
ANR	514082	Identifier	com_dotnet_create_instance		513972	0					
ANR	514083	Label	case 'c' :	416:2:10908:10916	513972	2	True				
ANR	514084	ExpressionStatement	"POPULATE_CTOR ( c , com_create_instance )"	417:3:10921:10958	513972	3	True				
ANR	514085	CallExpression	"POPULATE_CTOR ( c , com_create_instance )"		513972	0					
ANR	514086	Callee	POPULATE_CTOR		513972	0					
ANR	514087	Identifier	POPULATE_CTOR		513972	0					
ANR	514088	ArgumentList	c		513972	1					
ANR	514089	Argument	c		513972	0					
ANR	514090	Identifier	c		513972	0					
ANR	514091	Argument	com_create_instance		513972	1					
ANR	514092	Identifier	com_create_instance		513972	0					
ANR	514093	Label	case 'v' :	419:2:10963:10971	513972	4	True				
ANR	514094	ExpressionStatement	"POPULATE_CTOR ( v , com_variant_create_instance )"	420:3:10976:11021	513972	5	True				
ANR	514095	CallExpression	"POPULATE_CTOR ( v , com_variant_create_instance )"		513972	0					
ANR	514096	Callee	POPULATE_CTOR		513972	0					
ANR	514097	Identifier	POPULATE_CTOR		513972	0					
ANR	514098	ArgumentList	v		513972	1					
ANR	514099	Argument	v		513972	0					
ANR	514100	Identifier	v		513972	0					
ANR	514101	Argument	com_variant_create_instance		513972	1					
ANR	514102	Identifier	com_variant_create_instance		513972	0					
ANR	514103	Label	default :	422:2:11026:11033	513972	6	True				
ANR	514104	Identifier	default		513972	0					
ANR	514105	ReturnStatement	return NULL ;	423:3:11038:11049	513972	7	True				
ANR	514106	Identifier	NULL		513972	0					
ANR	514107	ReturnType	static union _zend_function *		513972	1					
ANR	514108	Identifier	com_constructor_get		513972	2					
ANR	514109	ParameterList	zend_object * object		513972	3					
ANR	514110	Parameter	zend_object * object	395:49:10407:10425	513972	0	True				
ANR	514111	ParameterType	zend_object *		513972	0					
ANR	514112	Identifier	object		513972	1					
ANR	514113	CFGEntryNode	ENTRY		513972		True				
ANR	514114	CFGExitNode	EXIT		513972		True				
ANR	514115	Symbol	f . arg_info		513972						
ANR	514116	Symbol	* obj -> ce -> name -> val		513972						
ANR	514117	Symbol	fn		513972						
ANR	514118	Symbol	* * obj		513972						
ANR	514119	Symbol	* obj -> ce		513972						
ANR	514120	Symbol	* * * * obj		513972						
ANR	514121	Symbol	f . fn_flags		513972						
ANR	514122	Symbol	com_variant_create_instance		513972						
ANR	514123	Symbol	f . scope		513972						
ANR	514124	Symbol	ZEND_INTERNAL_FUNCTION		513972						
ANR	514125	Symbol	* * obj -> ce		513972						
ANR	514126	Symbol	f . type		513972						
ANR	514127	Symbol	f . function_name		513972						
ANR	514128	Symbol	f . handler		513972						
ANR	514129	Symbol	* * obj -> ce -> name		513972						
ANR	514130	Symbol	obj -> ce -> name -> val		513972						
ANR	514131	Symbol	* obj		513972						
ANR	514132	Symbol	* obj -> ce -> name		513972						
ANR	514133	Symbol	c		513972						
ANR	514134	Symbol	NULL		513972						
ANR	514135	Symbol	f . num_args		513972						
ANR	514136	Symbol	* * * obj -> ce		513972						
ANR	514137	Symbol	d		513972						
ANR	514138	Symbol	f		513972						
ANR	514139	Symbol	& f		513972						
ANR	514140	Symbol	obj -> ce		513972						
ANR	514141	Symbol	com_dotnet_create_instance		513972						
ANR	514142	Symbol	* * * obj		513972						
ANR	514143	Symbol	com_create_instance		513972						
ANR	514144	Symbol	obj		513972						
ANR	514145	Symbol	v		513972						
ANR	514146	Symbol	ZEND_FN		513972						
ANR	514147	Symbol	object		513972						
ANR	514148	Symbol	obj -> ce -> name		513972						
ANR	514149	Function	com_class_name_get	427:0:11057:11230							
ANR	514150	FunctionDef	com_class_name_get (const zend_object * object)		514149	0					
ANR	514151	CompoundStatement		428:0:11123:11230	514149	0					
ANR	514152	IdentifierDeclStatement	php_com_dotnet_object * obj = ( php_com_dotnet_object * ) object ;	429:1:11126:11186	514149	0	True				
ANR	514153	IdentifierDecl	* obj = ( php_com_dotnet_object * ) object		514149	0					
ANR	514154	IdentifierDeclType	php_com_dotnet_object *		514149	0					
ANR	514155	Identifier	obj		514149	1					
ANR	514156	AssignmentExpression	* obj = ( php_com_dotnet_object * ) object		514149	2		=			
ANR	514157	Identifier	obj		514149	0					
ANR	514158	CastExpression	( php_com_dotnet_object * ) object		514149	1					
ANR	514159	CastTarget	php_com_dotnet_object *		514149	0					
ANR	514160	Identifier	object		514149	1					
ANR	514161	ReturnStatement	return zend_string_copy ( obj -> ce -> name ) ;	431:1:11190:11228	514149	1	True				
ANR	514162	CallExpression	zend_string_copy ( obj -> ce -> name )		514149	0					
ANR	514163	Callee	zend_string_copy		514149	0					
ANR	514164	Identifier	zend_string_copy		514149	0					
ANR	514165	ArgumentList	obj -> ce -> name		514149	1					
ANR	514166	Argument	obj -> ce -> name		514149	0					
ANR	514167	PtrMemberAccess	obj -> ce -> name		514149	0					
ANR	514168	PtrMemberAccess	obj -> ce		514149	0					
ANR	514169	Identifier	obj		514149	0					
ANR	514170	Identifier	ce		514149	1					
ANR	514171	Identifier	name		514149	1					
ANR	514172	ReturnType	static zend_string *		514149	1					
ANR	514173	Identifier	com_class_name_get		514149	2					
ANR	514174	ParameterList	const zend_object * object		514149	3					
ANR	514175	Parameter	const zend_object * object	427:39:11096:11120	514149	0	True				
ANR	514176	ParameterType	const zend_object *		514149	0					
ANR	514177	Identifier	object		514149	1					
ANR	514178	CFGEntryNode	ENTRY		514149		True				
ANR	514179	CFGExitNode	EXIT		514149		True				
ANR	514180	Symbol	* obj		514149						
ANR	514181	Symbol	obj		514149						
ANR	514182	Symbol	* obj -> ce		514149						
ANR	514183	Symbol	* * obj		514149						
ANR	514184	Symbol	zend_string_copy		514149						
ANR	514185	Symbol	obj -> ce		514149						
ANR	514186	Symbol	object		514149						
ANR	514187	Symbol	obj -> ce -> name		514149						
ANR	514188	Function	com_objects_compare	435:0:11279:12134							
ANR	514189	FunctionDef	"com_objects_compare (zval * object1 , zval * object2)"		514188	0					
ANR	514190	CompoundStatement		436:0:11340:12134	514188	0					
ANR	514191	IdentifierDeclStatement	"php_com_dotnet_object * obja , * objb ;"	437:1:11343:11377	514188	0	True				
ANR	514192	IdentifierDecl	* obja		514188	0					
ANR	514193	IdentifierDeclType	php_com_dotnet_object *		514188	0					
ANR	514194	Identifier	obja		514188	1					
ANR	514195	IdentifierDecl	* objb		514188	1					
ANR	514196	IdentifierDeclType	php_com_dotnet_object *		514188	0					
ANR	514197	Identifier	objb		514188	1					
ANR	514198	IdentifierDeclStatement	int ret ;	438:1:11380:11387	514188	1	True				
ANR	514199	IdentifierDecl	ret		514188	0					
ANR	514200	IdentifierDeclType	int		514188	0					
ANR	514201	Identifier	ret		514188	1					
ANR	514202	IdentifierDeclStatement	"STDAPI VarCmp ( LPVARIANT pvarLeft , LPVARIANT pvarRight , LCID lcid , DWORD flags ) ;"	443:1:11683:11761	514188	2	True				
ANR	514203	IdentifierDecl	"VarCmp ( LPVARIANT pvarLeft , LPVARIANT pvarRight , LCID lcid , DWORD flags )"		514188	0					
ANR	514204	IdentifierDeclType	"STDAPI ( LPVARIANT pvarLeft , LPVARIANT pvarRight , LCID lcid , DWORD flags )"		514188	0					
ANR	514205	Identifier	VarCmp		514188	1					
ANR	514206	ExpressionStatement	obja = CDNO_FETCH ( object1 )	445:1:11765:11791	514188	3	True				
ANR	514207	AssignmentExpression	obja = CDNO_FETCH ( object1 )		514188	0		=			
ANR	514208	Identifier	obja		514188	0					
ANR	514209	CallExpression	CDNO_FETCH ( object1 )		514188	1					
ANR	514210	Callee	CDNO_FETCH		514188	0					
ANR	514211	Identifier	CDNO_FETCH		514188	0					
ANR	514212	ArgumentList	object1		514188	1					
ANR	514213	Argument	object1		514188	0					
ANR	514214	Identifier	object1		514188	0					
ANR	514215	ExpressionStatement	objb = CDNO_FETCH ( object2 )	446:1:11794:11820	514188	4	True				
ANR	514216	AssignmentExpression	objb = CDNO_FETCH ( object2 )		514188	0		=			
ANR	514217	Identifier	objb		514188	0					
ANR	514218	CallExpression	CDNO_FETCH ( object2 )		514188	1					
ANR	514219	Callee	CDNO_FETCH		514188	0					
ANR	514220	Identifier	CDNO_FETCH		514188	0					
ANR	514221	ArgumentList	object2		514188	1					
ANR	514222	Argument	object2		514188	0					
ANR	514223	Identifier	object2		514188	0					
ANR	514224	SwitchStatement	"switch ( VarCmp ( & obja -> v , & objb -> v , LOCALE_SYSTEM_DEFAULT , 0 ) )"		514188	5					
ANR	514225	Condition	"VarCmp ( & obja -> v , & objb -> v , LOCALE_SYSTEM_DEFAULT , 0 )"	448:9:11832:11883	514188	0	True				
ANR	514226	CallExpression	"VarCmp ( & obja -> v , & objb -> v , LOCALE_SYSTEM_DEFAULT , 0 )"		514188	0					
ANR	514227	Callee	VarCmp		514188	0					
ANR	514228	Identifier	VarCmp		514188	0					
ANR	514229	ArgumentList	& obja -> v		514188	1					
ANR	514230	Argument	& obja -> v		514188	0					
ANR	514231	UnaryOperationExpression	& obja -> v		514188	0					
ANR	514232	UnaryOperator	&		514188	0					
ANR	514233	PtrMemberAccess	obja -> v		514188	1					
ANR	514234	Identifier	obja		514188	0					
ANR	514235	Identifier	v		514188	1					
ANR	514236	Argument	& objb -> v		514188	1					
ANR	514237	UnaryOperationExpression	& objb -> v		514188	0					
ANR	514238	UnaryOperator	&		514188	0					
ANR	514239	PtrMemberAccess	objb -> v		514188	1					
ANR	514240	Identifier	objb		514188	0					
ANR	514241	Identifier	v		514188	1					
ANR	514242	Argument	LOCALE_SYSTEM_DEFAULT		514188	2					
ANR	514243	Identifier	LOCALE_SYSTEM_DEFAULT		514188	0					
ANR	514244	Argument	0		514188	3					
ANR	514245	PrimaryExpression	0		514188	0					
ANR	514246	CompoundStatement		13:63:545:545	514188	1					
ANR	514247	Label	case VARCMP_LT :	449:2:11890:11904	514188	0	True				
ANR	514248	Identifier	VARCMP_LT		514188	0					
ANR	514249	ExpressionStatement	ret = - 1	450:3:11909:11917	514188	1	True				
ANR	514250	AssignmentExpression	ret = - 1		514188	0		=			
ANR	514251	Identifier	ret		514188	0					
ANR	514252	UnaryOperationExpression	- 1		514188	1					
ANR	514253	UnaryOperator	-		514188	0					
ANR	514254	PrimaryExpression	1		514188	1					
ANR	514255	BreakStatement	break ;	451:3:11922:11927	514188	2	True				
ANR	514256	Label	case VARCMP_GT :	452:2:11931:11945	514188	3	True				
ANR	514257	Identifier	VARCMP_GT		514188	0					
ANR	514258	ExpressionStatement	ret = 1	453:3:11950:11957	514188	4	True				
ANR	514259	AssignmentExpression	ret = 1		514188	0		=			
ANR	514260	Identifier	ret		514188	0					
ANR	514261	PrimaryExpression	1		514188	1					
ANR	514262	BreakStatement	break ;	454:3:11962:11967	514188	5	True				
ANR	514263	Label	case VARCMP_EQ :	455:2:11971:11985	514188	6	True				
ANR	514264	Identifier	VARCMP_EQ		514188	0					
ANR	514265	ExpressionStatement	ret = 0	456:3:11990:11997	514188	7	True				
ANR	514266	AssignmentExpression	ret = 0		514188	0		=			
ANR	514267	Identifier	ret		514188	0					
ANR	514268	PrimaryExpression	0		514188	1					
ANR	514269	BreakStatement	break ;	457:3:12002:12007	514188	8	True				
ANR	514270	Label	default :	458:2:12011:12018	514188	9	True				
ANR	514271	Identifier	default		514188	0					
ANR	514272	ExpressionStatement	ret = - 2	461:3:12107:12115	514188	10	True				
ANR	514273	AssignmentExpression	ret = - 2		514188	0		=			
ANR	514274	Identifier	ret		514188	0					
ANR	514275	UnaryOperationExpression	- 2		514188	1					
ANR	514276	UnaryOperator	-		514188	0					
ANR	514277	PrimaryExpression	2		514188	1					
ANR	514278	ReturnStatement	return ret ;	464:1:12122:12132	514188	6	True				
ANR	514279	Identifier	ret		514188	0					
ANR	514280	ReturnType	static int		514188	1					
ANR	514281	Identifier	com_objects_compare		514188	2					
ANR	514282	ParameterList	"zval * object1 , zval * object2"		514188	3					
ANR	514283	Parameter	zval * object1	435:31:11310:11322	514188	0	True				
ANR	514284	ParameterType	zval *		514188	0					
ANR	514285	Identifier	object1		514188	1					
ANR	514286	Parameter	zval * object2	435:46:11325:11337	514188	1	True				
ANR	514287	ParameterType	zval *		514188	0					
ANR	514288	Identifier	object2		514188	1					
ANR	514289	CFGEntryNode	ENTRY		514188		True				
ANR	514290	CFGExitNode	EXIT		514188		True				
ANR	514291	Symbol	object2		514188						
ANR	514292	Symbol	ret		514188						
ANR	514293	Symbol	object1		514188						
ANR	514294	Symbol	& obja -> v		514188						
ANR	514295	Symbol	VarCmp		514188						
ANR	514296	Symbol	& objb -> v		514188						
ANR	514297	Symbol	objb		514188						
ANR	514298	Symbol	CDNO_FETCH		514188						
ANR	514299	Symbol	obja		514188						
ANR	514300	Symbol	LOCALE_SYSTEM_DEFAULT		514188						
ANR	514301	Function	com_object_cast	467:0:12137:13144							
ANR	514302	FunctionDef	"com_object_cast (zval * readobj , zval * writeobj , int type)"		514301	0					
ANR	514303	CompoundStatement		468:0:12205:13144	514301	0					
ANR	514304	IdentifierDeclStatement	php_com_dotnet_object * obj ;	469:1:12208:12234	514301	0	True				
ANR	514305	IdentifierDecl	* obj		514301	0					
ANR	514306	IdentifierDeclType	php_com_dotnet_object *		514301	0					
ANR	514307	Identifier	obj		514301	1					
ANR	514308	IdentifierDeclStatement	VARIANT v ;	470:1:12237:12246	514301	1	True				
ANR	514309	IdentifierDecl	v		514301	0					
ANR	514310	IdentifierDeclType	VARIANT		514301	0					
ANR	514311	Identifier	v		514301	1					
ANR	514312	IdentifierDeclStatement	VARTYPE vt = VT_EMPTY ;	471:1:12249:12270	514301	2	True				
ANR	514313	IdentifierDecl	vt = VT_EMPTY		514301	0					
ANR	514314	IdentifierDeclType	VARTYPE		514301	0					
ANR	514315	Identifier	vt		514301	1					
ANR	514316	AssignmentExpression	vt = VT_EMPTY		514301	2		=			
ANR	514317	Identifier	VT_EMPTY		514301	0					
ANR	514318	Identifier	VT_EMPTY		514301	1					
ANR	514319	IdentifierDeclStatement	HRESULT res = S_OK ;	472:1:12273:12291	514301	3	True				
ANR	514320	IdentifierDecl	res = S_OK		514301	0					
ANR	514321	IdentifierDeclType	HRESULT		514301	0					
ANR	514322	Identifier	res		514301	1					
ANR	514323	AssignmentExpression	res = S_OK		514301	2		=			
ANR	514324	Identifier	S_OK		514301	0					
ANR	514325	Identifier	S_OK		514301	1					
ANR	514326	ExpressionStatement	obj = CDNO_FETCH ( readobj )	474:1:12295:12320	514301	4	True				
ANR	514327	AssignmentExpression	obj = CDNO_FETCH ( readobj )		514301	0		=			
ANR	514328	Identifier	obj		514301	0					
ANR	514329	CallExpression	CDNO_FETCH ( readobj )		514301	1					
ANR	514330	Callee	CDNO_FETCH		514301	0					
ANR	514331	Identifier	CDNO_FETCH		514301	0					
ANR	514332	ArgumentList	readobj		514301	1					
ANR	514333	Argument	readobj		514301	0					
ANR	514334	Identifier	readobj		514301	0					
ANR	514335	ExpressionStatement	ZVAL_NULL ( writeobj )	475:1:12323:12342	514301	5	True				
ANR	514336	CallExpression	ZVAL_NULL ( writeobj )		514301	0					
ANR	514337	Callee	ZVAL_NULL		514301	0					
ANR	514338	Identifier	ZVAL_NULL		514301	0					
ANR	514339	ArgumentList	writeobj		514301	1					
ANR	514340	Argument	writeobj		514301	0					
ANR	514341	Identifier	writeobj		514301	0					
ANR	514342	ExpressionStatement	VariantInit ( & v )	476:1:12345:12360	514301	6	True				
ANR	514343	CallExpression	VariantInit ( & v )		514301	0					
ANR	514344	Callee	VariantInit		514301	0					
ANR	514345	Identifier	VariantInit		514301	0					
ANR	514346	ArgumentList	& v		514301	1					
ANR	514347	Argument	& v		514301	0					
ANR	514348	UnaryOperationExpression	& v		514301	0					
ANR	514349	UnaryOperator	&		514301	0					
ANR	514350	Identifier	v		514301	1					
ANR	514351	IfStatement	if ( V_VT ( & obj -> v ) == VT_DISPATCH )		514301	7					
ANR	514352	Condition	V_VT ( & obj -> v ) == VT_DISPATCH	478:5:12368:12395	514301	0	True				
ANR	514353	EqualityExpression	V_VT ( & obj -> v ) == VT_DISPATCH		514301	0		==			
ANR	514354	CallExpression	V_VT ( & obj -> v )		514301	0					
ANR	514355	Callee	V_VT		514301	0					
ANR	514356	Identifier	V_VT		514301	0					
ANR	514357	ArgumentList	& obj -> v		514301	1					
ANR	514358	Argument	& obj -> v		514301	0					
ANR	514359	UnaryOperationExpression	& obj -> v		514301	0					
ANR	514360	UnaryOperator	&		514301	0					
ANR	514361	PtrMemberAccess	obj -> v		514301	1					
ANR	514362	Identifier	obj		514301	0					
ANR	514363	Identifier	v		514301	1					
ANR	514364	Identifier	VT_DISPATCH		514301	1					
ANR	514365	CompoundStatement		11:35:192:192	514301	1					
ANR	514366	IfStatement	"if ( SUCCESS != php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 0 , NULL , 1 , 0 ) )"		514301	0					
ANR	514367	Condition	"SUCCESS != php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 0 , NULL , 1 , 0 )"	479:6:12406:12519	514301	0	True				
ANR	514368	EqualityExpression	"SUCCESS != php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 0 , NULL , 1 , 0 )"		514301	0		!=			
ANR	514369	Identifier	SUCCESS		514301	0					
ANR	514370	CallExpression	"php_com_do_invoke_by_id ( obj , DISPID_VALUE , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , 0 , NULL , 1 , 0 )"		514301	1					
ANR	514371	Callee	php_com_do_invoke_by_id		514301	0					
ANR	514372	Identifier	php_com_do_invoke_by_id		514301	0					
ANR	514373	ArgumentList	obj		514301	1					
ANR	514374	Argument	obj		514301	0					
ANR	514375	Identifier	obj		514301	0					
ANR	514376	Argument	DISPID_VALUE		514301	1					
ANR	514377	Identifier	DISPID_VALUE		514301	0					
ANR	514378	Argument	DISPATCH_METHOD | DISPATCH_PROPERTYGET		514301	2					
ANR	514379	InclusiveOrExpression	DISPATCH_METHOD | DISPATCH_PROPERTYGET		514301	0		|			
ANR	514380	Identifier	DISPATCH_METHOD		514301	0					
ANR	514381	Identifier	DISPATCH_PROPERTYGET		514301	1					
ANR	514382	Argument	& v		514301	3					
ANR	514383	UnaryOperationExpression	& v		514301	0					
ANR	514384	UnaryOperator	&		514301	0					
ANR	514385	Identifier	v		514301	1					
ANR	514386	Argument	0		514301	4					
ANR	514387	PrimaryExpression	0		514301	0					
ANR	514388	Argument	NULL		514301	5					
ANR	514389	Identifier	NULL		514301	0					
ANR	514390	Argument	1		514301	6					
ANR	514391	PrimaryExpression	1		514301	0					
ANR	514392	Argument	0		514301	7					
ANR	514393	PrimaryExpression	0		514301	0					
ANR	514394	CompoundStatement		13:62:316:316	514301	1					
ANR	514395	ExpressionStatement	"VariantCopy ( & v , & obj -> v )"	481:3:12527:12551	514301	0	True				
ANR	514396	CallExpression	"VariantCopy ( & v , & obj -> v )"		514301	0					
ANR	514397	Callee	VariantCopy		514301	0					
ANR	514398	Identifier	VariantCopy		514301	0					
ANR	514399	ArgumentList	& v		514301	1					
ANR	514400	Argument	& v		514301	0					
ANR	514401	UnaryOperationExpression	& v		514301	0					
ANR	514402	UnaryOperator	&		514301	0					
ANR	514403	Identifier	v		514301	1					
ANR	514404	Argument	& obj -> v		514301	1					
ANR	514405	UnaryOperationExpression	& obj -> v		514301	0					
ANR	514406	UnaryOperator	&		514301	0					
ANR	514407	PtrMemberAccess	obj -> v		514301	1					
ANR	514408	Identifier	obj		514301	0					
ANR	514409	Identifier	v		514301	1					
ANR	514410	ElseStatement	else		514301	0					
ANR	514411	CompoundStatement		16:8:359:359	514301	0					
ANR	514412	ExpressionStatement	"VariantCopy ( & v , & obj -> v )"	484:2:12569:12593	514301	0	True				
ANR	514413	CallExpression	"VariantCopy ( & v , & obj -> v )"		514301	0					
ANR	514414	Callee	VariantCopy		514301	0					
ANR	514415	Identifier	VariantCopy		514301	0					
ANR	514416	ArgumentList	& v		514301	1					
ANR	514417	Argument	& v		514301	0					
ANR	514418	UnaryOperationExpression	& v		514301	0					
ANR	514419	UnaryOperator	&		514301	0					
ANR	514420	Identifier	v		514301	1					
ANR	514421	Argument	& obj -> v		514301	1					
ANR	514422	UnaryOperationExpression	& obj -> v		514301	0					
ANR	514423	UnaryOperator	&		514301	0					
ANR	514424	PtrMemberAccess	obj -> v		514301	1					
ANR	514425	Identifier	obj		514301	0					
ANR	514426	Identifier	v		514301	1					
ANR	514427	SwitchStatement	switch ( type )		514301	8					
ANR	514428	Condition	type	487:8:12607:12610	514301	0	True				
ANR	514429	Identifier	type		514301	0					
ANR	514430	CompoundStatement		20:14:407:407	514301	1					
ANR	514431	Label	case IS_LONG :	488:2:12617:12629	514301	0	True				
ANR	514432	Identifier	IS_LONG		514301	0					
ANR	514433	ExpressionStatement	vt = VT_INT	489:3:12634:12645	514301	1	True				
ANR	514434	AssignmentExpression	vt = VT_INT		514301	0		=			
ANR	514435	Identifier	vt		514301	0					
ANR	514436	Identifier	VT_INT		514301	1					
ANR	514437	BreakStatement	break ;	490:3:12650:12655	514301	2	True				
ANR	514438	Label	case IS_DOUBLE :	491:2:12659:12673	514301	3	True				
ANR	514439	Identifier	IS_DOUBLE		514301	0					
ANR	514440	ExpressionStatement	vt = VT_R8	492:3:12678:12688	514301	4	True				
ANR	514441	AssignmentExpression	vt = VT_R8		514301	0		=			
ANR	514442	Identifier	vt		514301	0					
ANR	514443	Identifier	VT_R8		514301	1					
ANR	514444	BreakStatement	break ;	493:3:12693:12698	514301	5	True				
ANR	514445	Label	case IS_FALSE :	494:2:12702:12715	514301	6	True				
ANR	514446	Identifier	IS_FALSE		514301	0					
ANR	514447	Label	case IS_TRUE :	495:2:12719:12731	514301	7	True				
ANR	514448	Identifier	IS_TRUE		514301	0					
ANR	514449	Label	case _IS_BOOL :	496:2:12735:12748	514301	8	True				
ANR	514450	Identifier	_IS_BOOL		514301	0					
ANR	514451	ExpressionStatement	vt = VT_BOOL	497:3:12753:12765	514301	9	True				
ANR	514452	AssignmentExpression	vt = VT_BOOL		514301	0		=			
ANR	514453	Identifier	vt		514301	0					
ANR	514454	Identifier	VT_BOOL		514301	1					
ANR	514455	BreakStatement	break ;	498:3:12770:12775	514301	10	True				
ANR	514456	Label	case IS_STRING :	499:2:12779:12793	514301	11	True				
ANR	514457	Identifier	IS_STRING		514301	0					
ANR	514458	ExpressionStatement	vt = VT_BSTR	500:3:12798:12810	514301	12	True				
ANR	514459	AssignmentExpression	vt = VT_BSTR		514301	0		=			
ANR	514460	Identifier	vt		514301	0					
ANR	514461	Identifier	VT_BSTR		514301	1					
ANR	514462	BreakStatement	break ;	501:3:12815:12820	514301	13	True				
ANR	514463	Label	default :	502:2:12824:12831	514301	14	True				
ANR	514464	Identifier	default		514301	0					
ANR	514465	ExpressionStatement		503:3:12836:12836	514301	15	True				
ANR	514466	IfStatement	if ( vt != VT_EMPTY && vt != V_VT ( & v ) )		514301	9					
ANR	514467	Condition	vt != VT_EMPTY && vt != V_VT ( & v )	506:5:12847:12878	514301	0	True				
ANR	514468	AndExpression	vt != VT_EMPTY && vt != V_VT ( & v )		514301	0		&&			
ANR	514469	EqualityExpression	vt != VT_EMPTY		514301	0		!=			
ANR	514470	Identifier	vt		514301	0					
ANR	514471	Identifier	VT_EMPTY		514301	1					
ANR	514472	EqualityExpression	vt != V_VT ( & v )		514301	1		!=			
ANR	514473	Identifier	vt		514301	0					
ANR	514474	CallExpression	V_VT ( & v )		514301	1					
ANR	514475	Callee	V_VT		514301	0					
ANR	514476	Identifier	V_VT		514301	0					
ANR	514477	ArgumentList	& v		514301	1					
ANR	514478	Argument	& v		514301	0					
ANR	514479	UnaryOperationExpression	& v		514301	0					
ANR	514480	UnaryOperator	&		514301	0					
ANR	514481	Identifier	v		514301	1					
ANR	514482	CompoundStatement		39:39:675:675	514301	1					
ANR	514483	ExpressionStatement	"res = VariantChangeType ( & v , & v , 0 , vt )"	507:2:12885:12923	514301	0	True				
ANR	514484	AssignmentExpression	"res = VariantChangeType ( & v , & v , 0 , vt )"		514301	0		=			
ANR	514485	Identifier	res		514301	0					
ANR	514486	CallExpression	"VariantChangeType ( & v , & v , 0 , vt )"		514301	1					
ANR	514487	Callee	VariantChangeType		514301	0					
ANR	514488	Identifier	VariantChangeType		514301	0					
ANR	514489	ArgumentList	& v		514301	1					
ANR	514490	Argument	& v		514301	0					
ANR	514491	UnaryOperationExpression	& v		514301	0					
ANR	514492	UnaryOperator	&		514301	0					
ANR	514493	Identifier	v		514301	1					
ANR	514494	Argument	& v		514301	1					
ANR	514495	UnaryOperationExpression	& v		514301	0					
ANR	514496	UnaryOperator	&		514301	0					
ANR	514497	Identifier	v		514301	1					
ANR	514498	Argument	0		514301	2					
ANR	514499	PrimaryExpression	0		514301	0					
ANR	514500	Argument	vt		514301	3					
ANR	514501	Identifier	vt		514301	0					
ANR	514502	IfStatement	if ( SUCCEEDED ( res ) )		514301	10					
ANR	514503	Condition	SUCCEEDED ( res )	510:5:12934:12947	514301	0	True				
ANR	514504	CallExpression	SUCCEEDED ( res )		514301	0					
ANR	514505	Callee	SUCCEEDED		514301	0					
ANR	514506	Identifier	SUCCEEDED		514301	0					
ANR	514507	ArgumentList	res		514301	1					
ANR	514508	Argument	res		514301	0					
ANR	514509	Identifier	res		514301	0					
ANR	514510	CompoundStatement		43:21:744:744	514301	1					
ANR	514511	ExpressionStatement	"php_com_zval_from_variant ( writeobj , & v , obj -> code_page )"	511:2:12954:13009	514301	0	True				
ANR	514512	CallExpression	"php_com_zval_from_variant ( writeobj , & v , obj -> code_page )"		514301	0					
ANR	514513	Callee	php_com_zval_from_variant		514301	0					
ANR	514514	Identifier	php_com_zval_from_variant		514301	0					
ANR	514515	ArgumentList	writeobj		514301	1					
ANR	514516	Argument	writeobj		514301	0					
ANR	514517	Identifier	writeobj		514301	0					
ANR	514518	Argument	& v		514301	1					
ANR	514519	UnaryOperationExpression	& v		514301	0					
ANR	514520	UnaryOperator	&		514301	0					
ANR	514521	Identifier	v		514301	1					
ANR	514522	Argument	obj -> code_page		514301	2					
ANR	514523	PtrMemberAccess	obj -> code_page		514301	0					
ANR	514524	Identifier	obj		514301	0					
ANR	514525	Identifier	code_page		514301	1					
ANR	514526	ExpressionStatement	VariantClear ( & v )	514:1:13016:13032	514301	11	True				
ANR	514527	CallExpression	VariantClear ( & v )		514301	0					
ANR	514528	Callee	VariantClear		514301	0					
ANR	514529	Identifier	VariantClear		514301	0					
ANR	514530	ArgumentList	& v		514301	1					
ANR	514531	Argument	& v		514301	0					
ANR	514532	UnaryOperationExpression	& v		514301	0					
ANR	514533	UnaryOperator	&		514301	0					
ANR	514534	Identifier	v		514301	1					
ANR	514535	IfStatement	if ( SUCCEEDED ( res ) )		514301	12					
ANR	514536	Condition	SUCCEEDED ( res )	516:5:13040:13053	514301	0	True				
ANR	514537	CallExpression	SUCCEEDED ( res )		514301	0					
ANR	514538	Callee	SUCCEEDED		514301	0					
ANR	514539	Identifier	SUCCEEDED		514301	0					
ANR	514540	ArgumentList	res		514301	1					
ANR	514541	Argument	res		514301	0					
ANR	514542	Identifier	res		514301	0					
ANR	514543	CompoundStatement		49:21:850:850	514301	1					
ANR	514544	ReturnStatement	return SUCCESS ;	517:2:13060:13074	514301	0	True				
ANR	514545	Identifier	SUCCESS		514301	0					
ANR	514546	ReturnStatement	"return zend_std_cast_object_tostring ( readobj , writeobj , type ) ;"	520:1:13081:13142	514301	13	True				
ANR	514547	CallExpression	"zend_std_cast_object_tostring ( readobj , writeobj , type )"		514301	0					
ANR	514548	Callee	zend_std_cast_object_tostring		514301	0					
ANR	514549	Identifier	zend_std_cast_object_tostring		514301	0					
ANR	514550	ArgumentList	readobj		514301	1					
ANR	514551	Argument	readobj		514301	0					
ANR	514552	Identifier	readobj		514301	0					
ANR	514553	Argument	writeobj		514301	1					
ANR	514554	Identifier	writeobj		514301	0					
ANR	514555	Argument	type		514301	2					
ANR	514556	Identifier	type		514301	0					
ANR	514557	ReturnType	static int		514301	1					
ANR	514558	Identifier	com_object_cast		514301	2					
ANR	514559	ParameterList	"zval * readobj , zval * writeobj , int type"		514301	3					
ANR	514560	Parameter	zval * readobj	467:27:12164:12176	514301	0	True				
ANR	514561	ParameterType	zval *		514301	0					
ANR	514562	Identifier	readobj		514301	1					
ANR	514563	Parameter	zval * writeobj	467:42:12179:12192	514301	1	True				
ANR	514564	ParameterType	zval *		514301	0					
ANR	514565	Identifier	writeobj		514301	1					
ANR	514566	Parameter	int type	467:58:12195:12202	514301	2	True				
ANR	514567	ParameterType	int		514301	0					
ANR	514568	Identifier	type		514301	1					
ANR	514569	CFGEntryNode	ENTRY		514301		True				
ANR	514570	CFGExitNode	EXIT		514301		True				
ANR	514571	Symbol	VT_INT		514301						
ANR	514572	Symbol	VT_BOOL		514301						
ANR	514573	Symbol	readobj		514301						
ANR	514574	Symbol	php_com_do_invoke_by_id		514301						
ANR	514575	Symbol	writeobj		514301						
ANR	514576	Symbol	type		514301						
ANR	514577	Symbol	VT_EMPTY		514301						
ANR	514578	Symbol	VariantChangeType		514301						
ANR	514579	Symbol	zend_std_cast_object_tostring		514301						
ANR	514580	Symbol	CDNO_FETCH		514301						
ANR	514581	Symbol	res		514301						
ANR	514582	Symbol	* obj		514301						
ANR	514583	Symbol	DISPID_VALUE		514301						
ANR	514584	Symbol	NULL		514301						
ANR	514585	Symbol	SUCCESS		514301						
ANR	514586	Symbol	VT_R8		514301						
ANR	514587	Symbol	VT_DISPATCH		514301						
ANR	514588	Symbol	obj -> code_page		514301						
ANR	514589	Symbol	S_OK		514301						
ANR	514590	Symbol	V_VT		514301						
ANR	514591	Symbol	DISPATCH_METHOD		514301						
ANR	514592	Symbol	DISPATCH_PROPERTYGET		514301						
ANR	514593	Symbol	obj		514301						
ANR	514594	Symbol	v		514301						
ANR	514595	Symbol	SUCCEEDED		514301						
ANR	514596	Symbol	VT_BSTR		514301						
ANR	514597	Symbol	& obj -> v		514301						
ANR	514598	Symbol	& v		514301						
ANR	514599	Symbol	vt		514301						
ANR	514600	Function	com_object_count	523:0:13147:13499							
ANR	514601	FunctionDef	"com_object_count (zval * object , zend_long * count)"		514600	0					
ANR	514602	CompoundStatement		524:0:13207:13499	514600	0					
ANR	514603	IdentifierDeclStatement	php_com_dotnet_object * obj ;	525:1:13210:13236	514600	0	True				
ANR	514604	IdentifierDecl	* obj		514600	0					
ANR	514605	IdentifierDeclType	php_com_dotnet_object *		514600	0					
ANR	514606	Identifier	obj		514600	1					
ANR	514607	IdentifierDeclStatement	"LONG ubound = 0 , lbound = 0 ;"	526:1:13239:13266	514600	1	True				
ANR	514608	IdentifierDecl	ubound = 0		514600	0					
ANR	514609	IdentifierDeclType	LONG		514600	0					
ANR	514610	Identifier	ubound		514600	1					
ANR	514611	AssignmentExpression	ubound = 0		514600	2		=			
ANR	514612	Identifier	ubound		514600	0					
ANR	514613	PrimaryExpression	0		514600	1					
ANR	514614	IdentifierDecl	lbound = 0		514600	1					
ANR	514615	IdentifierDeclType	LONG		514600	0					
ANR	514616	Identifier	lbound		514600	1					
ANR	514617	AssignmentExpression	lbound = 0		514600	2		=			
ANR	514618	Identifier	lbound		514600	0					
ANR	514619	PrimaryExpression	0		514600	1					
ANR	514620	ExpressionStatement	obj = CDNO_FETCH ( object )	528:1:13270:13294	514600	2	True				
ANR	514621	AssignmentExpression	obj = CDNO_FETCH ( object )		514600	0		=			
ANR	514622	Identifier	obj		514600	0					
ANR	514623	CallExpression	CDNO_FETCH ( object )		514600	1					
ANR	514624	Callee	CDNO_FETCH		514600	0					
ANR	514625	Identifier	CDNO_FETCH		514600	0					
ANR	514626	ArgumentList	object		514600	1					
ANR	514627	Argument	object		514600	0					
ANR	514628	Identifier	object		514600	0					
ANR	514629	IfStatement	if ( ! V_ISARRAY ( & obj -> v ) )		514600	3					
ANR	514630	Condition	! V_ISARRAY ( & obj -> v )	530:5:13302:13320	514600	0	True				
ANR	514631	UnaryOperationExpression	! V_ISARRAY ( & obj -> v )		514600	0					
ANR	514632	UnaryOperator	!		514600	0					
ANR	514633	CallExpression	V_ISARRAY ( & obj -> v )		514600	1					
ANR	514634	Callee	V_ISARRAY		514600	0					
ANR	514635	Identifier	V_ISARRAY		514600	0					
ANR	514636	ArgumentList	& obj -> v		514600	1					
ANR	514637	Argument	& obj -> v		514600	0					
ANR	514638	UnaryOperationExpression	& obj -> v		514600	0					
ANR	514639	UnaryOperator	&		514600	0					
ANR	514640	PtrMemberAccess	obj -> v		514600	1					
ANR	514641	Identifier	obj		514600	0					
ANR	514642	Identifier	v		514600	1					
ANR	514643	CompoundStatement		7:26:115:115	514600	1					
ANR	514644	ReturnStatement	return FAILURE ;	531:2:13327:13341	514600	0	True				
ANR	514645	Identifier	FAILURE		514600	0					
ANR	514646	ExpressionStatement	"SafeArrayGetLBound ( V_ARRAY ( & obj -> v ) , 1 , & lbound )"	534:1:13348:13396	514600	4	True				
ANR	514647	CallExpression	"SafeArrayGetLBound ( V_ARRAY ( & obj -> v ) , 1 , & lbound )"		514600	0					
ANR	514648	Callee	SafeArrayGetLBound		514600	0					
ANR	514649	Identifier	SafeArrayGetLBound		514600	0					
ANR	514650	ArgumentList	V_ARRAY ( & obj -> v )		514600	1					
ANR	514651	Argument	V_ARRAY ( & obj -> v )		514600	0					
ANR	514652	CallExpression	V_ARRAY ( & obj -> v )		514600	0					
ANR	514653	Callee	V_ARRAY		514600	0					
ANR	514654	Identifier	V_ARRAY		514600	0					
ANR	514655	ArgumentList	& obj -> v		514600	1					
ANR	514656	Argument	& obj -> v		514600	0					
ANR	514657	UnaryOperationExpression	& obj -> v		514600	0					
ANR	514658	UnaryOperator	&		514600	0					
ANR	514659	PtrMemberAccess	obj -> v		514600	1					
ANR	514660	Identifier	obj		514600	0					
ANR	514661	Identifier	v		514600	1					
ANR	514662	Argument	1		514600	1					
ANR	514663	PrimaryExpression	1		514600	0					
ANR	514664	Argument	& lbound		514600	2					
ANR	514665	UnaryOperationExpression	& lbound		514600	0					
ANR	514666	UnaryOperator	&		514600	0					
ANR	514667	Identifier	lbound		514600	1					
ANR	514668	ExpressionStatement	"SafeArrayGetUBound ( V_ARRAY ( & obj -> v ) , 1 , & ubound )"	535:1:13399:13447	514600	5	True				
ANR	514669	CallExpression	"SafeArrayGetUBound ( V_ARRAY ( & obj -> v ) , 1 , & ubound )"		514600	0					
ANR	514670	Callee	SafeArrayGetUBound		514600	0					
ANR	514671	Identifier	SafeArrayGetUBound		514600	0					
ANR	514672	ArgumentList	V_ARRAY ( & obj -> v )		514600	1					
ANR	514673	Argument	V_ARRAY ( & obj -> v )		514600	0					
ANR	514674	CallExpression	V_ARRAY ( & obj -> v )		514600	0					
ANR	514675	Callee	V_ARRAY		514600	0					
ANR	514676	Identifier	V_ARRAY		514600	0					
ANR	514677	ArgumentList	& obj -> v		514600	1					
ANR	514678	Argument	& obj -> v		514600	0					
ANR	514679	UnaryOperationExpression	& obj -> v		514600	0					
ANR	514680	UnaryOperator	&		514600	0					
ANR	514681	PtrMemberAccess	obj -> v		514600	1					
ANR	514682	Identifier	obj		514600	0					
ANR	514683	Identifier	v		514600	1					
ANR	514684	Argument	1		514600	1					
ANR	514685	PrimaryExpression	1		514600	0					
ANR	514686	Argument	& ubound		514600	2					
ANR	514687	UnaryOperationExpression	& ubound		514600	0					
ANR	514688	UnaryOperator	&		514600	0					
ANR	514689	Identifier	ubound		514600	1					
ANR	514690	ExpressionStatement	* count = ubound - lbound + 1	537:1:13451:13479	514600	6	True				
ANR	514691	AssignmentExpression	* count = ubound - lbound + 1		514600	0		=			
ANR	514692	UnaryOperationExpression	* count		514600	0					
ANR	514693	UnaryOperator	*		514600	0					
ANR	514694	Identifier	count		514600	1					
ANR	514695	AdditiveExpression	ubound - lbound + 1		514600	1		-			
ANR	514696	Identifier	ubound		514600	0					
ANR	514697	AdditiveExpression	lbound + 1		514600	1		+			
ANR	514698	Identifier	lbound		514600	0					
ANR	514699	PrimaryExpression	1		514600	1					
ANR	514700	ReturnStatement	return SUCCESS ;	539:1:13483:13497	514600	7	True				
ANR	514701	Identifier	SUCCESS		514600	0					
ANR	514702	ReturnType	static int		514600	1					
ANR	514703	Identifier	com_object_count		514600	2					
ANR	514704	ParameterList	"zval * object , zend_long * count"		514600	3					
ANR	514705	Parameter	zval * object	523:28:13175:13186	514600	0	True				
ANR	514706	ParameterType	zval *		514600	0					
ANR	514707	Identifier	object		514600	1					
ANR	514708	Parameter	zend_long * count	523:42:13189:13204	514600	1	True				
ANR	514709	ParameterType	zend_long *		514600	0					
ANR	514710	Identifier	count		514600	1					
ANR	514711	CFGEntryNode	ENTRY		514600		True				
ANR	514712	CFGExitNode	EXIT		514600		True				
ANR	514713	Symbol	SUCCESS		514600						
ANR	514714	Symbol	count		514600						
ANR	514715	Symbol	ubound		514600						
ANR	514716	Symbol	FAILURE		514600						
ANR	514717	Symbol	* count		514600						
ANR	514718	Symbol	& lbound		514600						
ANR	514719	Symbol	obj		514600						
ANR	514720	Symbol	lbound		514600						
ANR	514721	Symbol	V_ISARRAY		514600						
ANR	514722	Symbol	& ubound		514600						
ANR	514723	Symbol	CDNO_FETCH		514600						
ANR	514724	Symbol	& obj -> v		514600						
ANR	514725	Symbol	V_ARRAY		514600						
ANR	514726	Symbol	object		514600						
ANR	514727	DeclStmt									
ANR	514728	Decl							zend_object_handlers	zend_object_handlers	php_com_object_handlers
ANR	514729	Function	php_com_object_enable_event_sink	571:0:14136:14800							
ANR	514730	FunctionDef	"php_com_object_enable_event_sink (php_com_dotnet_object * obj , int enable)"		514729	0					
ANR	514731	CompoundStatement		572:0:14214:14800	514729	0					
ANR	514732	IfStatement	if ( obj -> sink_dispatch )		514729	0					
ANR	514733	Condition	obj -> sink_dispatch	573:5:14221:14238	514729	0	True				
ANR	514734	PtrMemberAccess	obj -> sink_dispatch		514729	0					
ANR	514735	Identifier	obj		514729	0					
ANR	514736	Identifier	sink_dispatch		514729	1					
ANR	514737	CompoundStatement		4:2:65:88	514729	1					
ANR	514738	IdentifierDeclStatement	IConnectionPointContainer * cont ;	574:2:14245:14276	514729	0	True				
ANR	514739	IdentifierDecl	* cont		514729	0					
ANR	514740	IdentifierDeclType	IConnectionPointContainer *		514729	0					
ANR	514741	Identifier	cont		514729	1					
ANR	514742	IdentifierDeclStatement	IConnectionPoint * point ;	575:2:14280:14303	514729	1	True				
ANR	514743	IdentifierDecl	* point		514729	0					
ANR	514744	IdentifierDeclType	IConnectionPoint *		514729	0					
ANR	514745	Identifier	point		514729	1					
ANR	514746	IfStatement	"if ( SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IConnectionPointContainer , ( void * * ) & cont ) ) )"		514729	2					
ANR	514747	Condition	"SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IConnectionPointContainer , ( void * * ) & cont ) )"	577:6:14312:14418	514729	0	True				
ANR	514748	CallExpression	"SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IConnectionPointContainer , ( void * * ) & cont ) )"		514729	0					
ANR	514749	Callee	SUCCEEDED		514729	0					
ANR	514750	Identifier	SUCCEEDED		514729	0					
ANR	514751	ArgumentList	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IConnectionPointContainer , ( void * * ) & cont )"		514729	1					
ANR	514752	Argument	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IConnectionPointContainer , ( void * * ) & cont )"		514729	0					
ANR	514753	CallExpression	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IConnectionPointContainer , ( void * * ) & cont )"		514729	0					
ANR	514754	Callee	IDispatch_QueryInterface		514729	0					
ANR	514755	Identifier	IDispatch_QueryInterface		514729	0					
ANR	514756	ArgumentList	V_DISPATCH ( & obj -> v )		514729	1					
ANR	514757	Argument	V_DISPATCH ( & obj -> v )		514729	0					
ANR	514758	CallExpression	V_DISPATCH ( & obj -> v )		514729	0					
ANR	514759	Callee	V_DISPATCH		514729	0					
ANR	514760	Identifier	V_DISPATCH		514729	0					
ANR	514761	ArgumentList	& obj -> v		514729	1					
ANR	514762	Argument	& obj -> v		514729	0					
ANR	514763	UnaryOperationExpression	& obj -> v		514729	0					
ANR	514764	UnaryOperator	&		514729	0					
ANR	514765	PtrMemberAccess	obj -> v		514729	1					
ANR	514766	Identifier	obj		514729	0					
ANR	514767	Identifier	v		514729	1					
ANR	514768	Argument	& IID_IConnectionPointContainer		514729	1					
ANR	514769	UnaryOperationExpression	& IID_IConnectionPointContainer		514729	0					
ANR	514770	UnaryOperator	&		514729	0					
ANR	514771	Identifier	IID_IConnectionPointContainer		514729	1					
ANR	514772	Argument	( void * * ) & cont		514729	2					
ANR	514773	CastExpression	( void * * ) & cont		514729	0					
ANR	514774	CastTarget	void * *		514729	0					
ANR	514775	UnaryOperationExpression	& cont		514729	1					
ANR	514776	UnaryOperator	&		514729	0					
ANR	514777	Identifier	cont		514729	1					
ANR	514778	CompoundStatement		7:53:206:206	514729	1					
ANR	514779	IfStatement	"if ( SUCCEEDED ( IConnectionPointContainer_FindConnectionPoint ( cont , & obj -> sink_id , & point ) ) )"		514729	0					
ANR	514780	Condition	"SUCCEEDED ( IConnectionPointContainer_FindConnectionPoint ( cont , & obj -> sink_id , & point ) )"	580:7:14431:14520	514729	0	True				
ANR	514781	CallExpression	"SUCCEEDED ( IConnectionPointContainer_FindConnectionPoint ( cont , & obj -> sink_id , & point ) )"		514729	0					
ANR	514782	Callee	SUCCEEDED		514729	0					
ANR	514783	Identifier	SUCCEEDED		514729	0					
ANR	514784	ArgumentList	"IConnectionPointContainer_FindConnectionPoint ( cont , & obj -> sink_id , & point )"		514729	1					
ANR	514785	Argument	"IConnectionPointContainer_FindConnectionPoint ( cont , & obj -> sink_id , & point )"		514729	0					
ANR	514786	CallExpression	"IConnectionPointContainer_FindConnectionPoint ( cont , & obj -> sink_id , & point )"		514729	0					
ANR	514787	Callee	IConnectionPointContainer_FindConnectionPoint		514729	0					
ANR	514788	Identifier	IConnectionPointContainer_FindConnectionPoint		514729	0					
ANR	514789	ArgumentList	cont		514729	1					
ANR	514790	Argument	cont		514729	0					
ANR	514791	Identifier	cont		514729	0					
ANR	514792	Argument	& obj -> sink_id		514729	1					
ANR	514793	UnaryOperationExpression	& obj -> sink_id		514729	0					
ANR	514794	UnaryOperator	&		514729	0					
ANR	514795	PtrMemberAccess	obj -> sink_id		514729	1					
ANR	514796	Identifier	obj		514729	0					
ANR	514797	Identifier	sink_id		514729	1					
ANR	514798	Argument	& point		514729	2					
ANR	514799	UnaryOperationExpression	& point		514729	0					
ANR	514800	UnaryOperator	&		514729	0					
ANR	514801	Identifier	point		514729	1					
ANR	514802	CompoundStatement		10:30:308:308	514729	1					
ANR	514803	IfStatement	if ( enable )		514729	0					
ANR	514804	Condition	enable	583:8:14534:14539	514729	0	True				
ANR	514805	Identifier	enable		514729	0					
ANR	514806	CompoundStatement		12:16:327:327	514729	1					
ANR	514807	ExpressionStatement	"IConnectionPoint_Advise ( point , ( IUnknown * ) obj -> sink_dispatch , & obj -> sink_cookie )"	584:5:14549:14629	514729	0	True				
ANR	514808	CallExpression	"IConnectionPoint_Advise ( point , ( IUnknown * ) obj -> sink_dispatch , & obj -> sink_cookie )"		514729	0					
ANR	514809	Callee	IConnectionPoint_Advise		514729	0					
ANR	514810	Identifier	IConnectionPoint_Advise		514729	0					
ANR	514811	ArgumentList	point		514729	1					
ANR	514812	Argument	point		514729	0					
ANR	514813	Identifier	point		514729	0					
ANR	514814	Argument	( IUnknown * ) obj -> sink_dispatch		514729	1					
ANR	514815	CastExpression	( IUnknown * ) obj -> sink_dispatch		514729	0					
ANR	514816	CastTarget	IUnknown *		514729	0					
ANR	514817	PtrMemberAccess	obj -> sink_dispatch		514729	1					
ANR	514818	Identifier	obj		514729	0					
ANR	514819	Identifier	sink_dispatch		514729	1					
ANR	514820	Argument	& obj -> sink_cookie		514729	2					
ANR	514821	UnaryOperationExpression	& obj -> sink_cookie		514729	0					
ANR	514822	UnaryOperator	&		514729	0					
ANR	514823	PtrMemberAccess	obj -> sink_cookie		514729	1					
ANR	514824	Identifier	obj		514729	0					
ANR	514825	Identifier	sink_cookie		514729	1					
ANR	514826	ElseStatement	else		514729	0					
ANR	514827	CompoundStatement		14:11:427:427	514729	0					
ANR	514828	ExpressionStatement	"IConnectionPoint_Unadvise ( point , obj -> sink_cookie )"	586:5:14649:14699	514729	0	True				
ANR	514829	CallExpression	"IConnectionPoint_Unadvise ( point , obj -> sink_cookie )"		514729	0					
ANR	514830	Callee	IConnectionPoint_Unadvise		514729	0					
ANR	514831	Identifier	IConnectionPoint_Unadvise		514729	0					
ANR	514832	ArgumentList	point		514729	1					
ANR	514833	Argument	point		514729	0					
ANR	514834	Identifier	point		514729	0					
ANR	514835	Argument	obj -> sink_cookie		514729	1					
ANR	514836	PtrMemberAccess	obj -> sink_cookie		514729	0					
ANR	514837	Identifier	obj		514729	0					
ANR	514838	Identifier	sink_cookie		514729	1					
ANR	514839	ExpressionStatement	IConnectionPoint_Release ( point )	588:4:14711:14742	514729	1	True				
ANR	514840	CallExpression	IConnectionPoint_Release ( point )		514729	0					
ANR	514841	Callee	IConnectionPoint_Release		514729	0					
ANR	514842	Identifier	IConnectionPoint_Release		514729	0					
ANR	514843	ArgumentList	point		514729	1					
ANR	514844	Argument	point		514729	0					
ANR	514845	Identifier	point		514729	0					
ANR	514846	ExpressionStatement	IConnectionPointContainer_Release ( cont )	590:3:14752:14791	514729	1	True				
ANR	514847	CallExpression	IConnectionPointContainer_Release ( cont )		514729	0					
ANR	514848	Callee	IConnectionPointContainer_Release		514729	0					
ANR	514849	Identifier	IConnectionPointContainer_Release		514729	0					
ANR	514850	ArgumentList	cont		514729	1					
ANR	514851	Argument	cont		514729	0					
ANR	514852	Identifier	cont		514729	0					
ANR	514853	ReturnType	void		514729	1					
ANR	514854	Identifier	php_com_object_enable_event_sink		514729	2					
ANR	514855	ParameterList	"php_com_dotnet_object * obj , int enable"		514729	3					
ANR	514856	Parameter	php_com_dotnet_object * obj	571:38:14174:14199	514729	0	True				
ANR	514857	ParameterType	php_com_dotnet_object *		514729	0					
ANR	514858	Identifier	obj		514729	1					
ANR	514859	Parameter	int enable	571:66:14202:14211	514729	1	True				
ANR	514860	ParameterType	int		514729	0					
ANR	514861	Identifier	enable		514729	1					
ANR	514862	CFGEntryNode	ENTRY		514729		True				
ANR	514863	CFGExitNode	EXIT		514729		True				
ANR	514864	Symbol	* obj		514729						
ANR	514865	Symbol	& cont		514729						
ANR	514866	Symbol	IConnectionPointContainer_FindConnectionPoint		514729						
ANR	514867	Symbol	point		514729						
ANR	514868	Symbol	& obj -> sink_cookie		514729						
ANR	514869	Symbol	& point		514729						
ANR	514870	Symbol	IDispatch_QueryInterface		514729						
ANR	514871	Symbol	V_DISPATCH		514729						
ANR	514872	Symbol	obj -> sink_cookie		514729						
ANR	514873	Symbol	obj		514729						
ANR	514874	Symbol	enable		514729						
ANR	514875	Symbol	obj -> sink_dispatch		514729						
ANR	514876	Symbol	SUCCEEDED		514729						
ANR	514877	Symbol	& IID_IConnectionPointContainer		514729						
ANR	514878	Symbol	& obj -> v		514729						
ANR	514879	Symbol	cont		514729						
ANR	514880	Symbol	& obj -> sink_id		514729						
ANR	514881	Function	php_com_object_free_storage	595:0:14803:15406							
ANR	514882	FunctionDef	php_com_object_free_storage (zend_object * object)		514881	0					
ANR	514883	CompoundStatement		596:0:14857:15406	514881	0					
ANR	514884	IdentifierDeclStatement	php_com_dotnet_object * obj = ( php_com_dotnet_object * ) object ;	597:1:14860:14919	514881	0	True				
ANR	514885	IdentifierDecl	* obj = ( php_com_dotnet_object * ) object		514881	0					
ANR	514886	IdentifierDeclType	php_com_dotnet_object *		514881	0					
ANR	514887	Identifier	obj		514881	1					
ANR	514888	AssignmentExpression	* obj = ( php_com_dotnet_object * ) object		514881	2		=			
ANR	514889	Identifier	obj		514881	0					
ANR	514890	CastExpression	( php_com_dotnet_object * ) object		514881	1					
ANR	514891	CastTarget	php_com_dotnet_object *		514881	0					
ANR	514892	Identifier	object		514881	1					
ANR	514893	IfStatement	if ( obj -> typeinfo )		514881	1					
ANR	514894	Condition	obj -> typeinfo	599:5:14927:14939	514881	0	True				
ANR	514895	PtrMemberAccess	obj -> typeinfo		514881	0					
ANR	514896	Identifier	obj		514881	0					
ANR	514897	Identifier	typeinfo		514881	1					
ANR	514898	CompoundStatement		4:20:84:84	514881	1					
ANR	514899	ExpressionStatement	ITypeInfo_Release ( obj -> typeinfo )	600:2:14946:14978	514881	0	True				
ANR	514900	CallExpression	ITypeInfo_Release ( obj -> typeinfo )		514881	0					
ANR	514901	Callee	ITypeInfo_Release		514881	0					
ANR	514902	Identifier	ITypeInfo_Release		514881	0					
ANR	514903	ArgumentList	obj -> typeinfo		514881	1					
ANR	514904	Argument	obj -> typeinfo		514881	0					
ANR	514905	PtrMemberAccess	obj -> typeinfo		514881	0					
ANR	514906	Identifier	obj		514881	0					
ANR	514907	Identifier	typeinfo		514881	1					
ANR	514908	ExpressionStatement	obj -> typeinfo = NULL	601:2:14982:15002	514881	1	True				
ANR	514909	AssignmentExpression	obj -> typeinfo = NULL		514881	0		=			
ANR	514910	PtrMemberAccess	obj -> typeinfo		514881	0					
ANR	514911	Identifier	obj		514881	0					
ANR	514912	Identifier	typeinfo		514881	1					
ANR	514913	Identifier	NULL		514881	1					
ANR	514914	IfStatement	if ( obj -> sink_dispatch )		514881	2					
ANR	514915	Condition	obj -> sink_dispatch	604:5:15013:15030	514881	0	True				
ANR	514916	PtrMemberAccess	obj -> sink_dispatch		514881	0					
ANR	514917	Identifier	obj		514881	0					
ANR	514918	Identifier	sink_dispatch		514881	1					
ANR	514919	CompoundStatement		9:25:175:175	514881	1					
ANR	514920	ExpressionStatement	"php_com_object_enable_event_sink ( obj , FALSE )"	605:2:15037:15081	514881	0	True				
ANR	514921	CallExpression	"php_com_object_enable_event_sink ( obj , FALSE )"		514881	0					
ANR	514922	Callee	php_com_object_enable_event_sink		514881	0					
ANR	514923	Identifier	php_com_object_enable_event_sink		514881	0					
ANR	514924	ArgumentList	obj		514881	1					
ANR	514925	Argument	obj		514881	0					
ANR	514926	Identifier	obj		514881	0					
ANR	514927	Argument	FALSE		514881	1					
ANR	514928	Identifier	FALSE		514881	0					
ANR	514929	ExpressionStatement	IDispatch_Release ( obj -> sink_dispatch )	606:2:15085:15122	514881	1	True				
ANR	514930	CallExpression	IDispatch_Release ( obj -> sink_dispatch )		514881	0					
ANR	514931	Callee	IDispatch_Release		514881	0					
ANR	514932	Identifier	IDispatch_Release		514881	0					
ANR	514933	ArgumentList	obj -> sink_dispatch		514881	1					
ANR	514934	Argument	obj -> sink_dispatch		514881	0					
ANR	514935	PtrMemberAccess	obj -> sink_dispatch		514881	0					
ANR	514936	Identifier	obj		514881	0					
ANR	514937	Identifier	sink_dispatch		514881	1					
ANR	514938	ExpressionStatement	obj -> sink_dispatch = NULL	607:2:15126:15151	514881	2	True				
ANR	514939	AssignmentExpression	obj -> sink_dispatch = NULL		514881	0		=			
ANR	514940	PtrMemberAccess	obj -> sink_dispatch		514881	0					
ANR	514941	Identifier	obj		514881	0					
ANR	514942	Identifier	sink_dispatch		514881	1					
ANR	514943	Identifier	NULL		514881	1					
ANR	514944	ExpressionStatement	VariantClear ( & obj -> v )	610:1:15158:15179	514881	3	True				
ANR	514945	CallExpression	VariantClear ( & obj -> v )		514881	0					
ANR	514946	Callee	VariantClear		514881	0					
ANR	514947	Identifier	VariantClear		514881	0					
ANR	514948	ArgumentList	& obj -> v		514881	1					
ANR	514949	Argument	& obj -> v		514881	0					
ANR	514950	UnaryOperationExpression	& obj -> v		514881	0					
ANR	514951	UnaryOperator	&		514881	0					
ANR	514952	PtrMemberAccess	obj -> v		514881	1					
ANR	514953	Identifier	obj		514881	0					
ANR	514954	Identifier	v		514881	1					
ANR	514955	IfStatement	if ( obj -> method_cache )		514881	4					
ANR	514956	Condition	obj -> method_cache	612:5:15187:15203	514881	0	True				
ANR	514957	PtrMemberAccess	obj -> method_cache		514881	0					
ANR	514958	Identifier	obj		514881	0					
ANR	514959	Identifier	method_cache		514881	1					
ANR	514960	CompoundStatement		17:24:348:348	514881	1					
ANR	514961	ExpressionStatement	zend_hash_destroy ( obj -> method_cache )	613:2:15210:15246	514881	0	True				
ANR	514962	CallExpression	zend_hash_destroy ( obj -> method_cache )		514881	0					
ANR	514963	Callee	zend_hash_destroy		514881	0					
ANR	514964	Identifier	zend_hash_destroy		514881	0					
ANR	514965	ArgumentList	obj -> method_cache		514881	1					
ANR	514966	Argument	obj -> method_cache		514881	0					
ANR	514967	PtrMemberAccess	obj -> method_cache		514881	0					
ANR	514968	Identifier	obj		514881	0					
ANR	514969	Identifier	method_cache		514881	1					
ANR	514970	ExpressionStatement	FREE_HASHTABLE ( obj -> method_cache )	614:2:15250:15283	514881	1	True				
ANR	514971	CallExpression	FREE_HASHTABLE ( obj -> method_cache )		514881	0					
ANR	514972	Callee	FREE_HASHTABLE		514881	0					
ANR	514973	Identifier	FREE_HASHTABLE		514881	0					
ANR	514974	ArgumentList	obj -> method_cache		514881	1					
ANR	514975	Argument	obj -> method_cache		514881	0					
ANR	514976	PtrMemberAccess	obj -> method_cache		514881	0					
ANR	514977	Identifier	obj		514881	0					
ANR	514978	Identifier	method_cache		514881	1					
ANR	514979	IfStatement	if ( obj -> id_of_name_cache )		514881	5					
ANR	514980	Condition	obj -> id_of_name_cache	616:5:15293:15313	514881	0	True				
ANR	514981	PtrMemberAccess	obj -> id_of_name_cache		514881	0					
ANR	514982	Identifier	obj		514881	0					
ANR	514983	Identifier	id_of_name_cache		514881	1					
ANR	514984	CompoundStatement		21:28:458:458	514881	1					
ANR	514985	ExpressionStatement	zend_hash_destroy ( obj -> id_of_name_cache )	617:2:15320:15360	514881	0	True				
ANR	514986	CallExpression	zend_hash_destroy ( obj -> id_of_name_cache )		514881	0					
ANR	514987	Callee	zend_hash_destroy		514881	0					
ANR	514988	Identifier	zend_hash_destroy		514881	0					
ANR	514989	ArgumentList	obj -> id_of_name_cache		514881	1					
ANR	514990	Argument	obj -> id_of_name_cache		514881	0					
ANR	514991	PtrMemberAccess	obj -> id_of_name_cache		514881	0					
ANR	514992	Identifier	obj		514881	0					
ANR	514993	Identifier	id_of_name_cache		514881	1					
ANR	514994	ExpressionStatement	FREE_HASHTABLE ( obj -> id_of_name_cache )	618:2:15364:15401	514881	1	True				
ANR	514995	CallExpression	FREE_HASHTABLE ( obj -> id_of_name_cache )		514881	0					
ANR	514996	Callee	FREE_HASHTABLE		514881	0					
ANR	514997	Identifier	FREE_HASHTABLE		514881	0					
ANR	514998	ArgumentList	obj -> id_of_name_cache		514881	1					
ANR	514999	Argument	obj -> id_of_name_cache		514881	0					
ANR	515000	PtrMemberAccess	obj -> id_of_name_cache		514881	0					
ANR	515001	Identifier	obj		514881	0					
ANR	515002	Identifier	id_of_name_cache		514881	1					
ANR	515003	ReturnType	void		514881	1					
ANR	515004	Identifier	php_com_object_free_storage		514881	2					
ANR	515005	ParameterList	zend_object * object		514881	3					
ANR	515006	Parameter	zend_object * object	595:33:14836:14854	514881	0	True				
ANR	515007	ParameterType	zend_object *		514881	0					
ANR	515008	Identifier	object		514881	1					
ANR	515009	CFGEntryNode	ENTRY		514881		True				
ANR	515010	CFGExitNode	EXIT		514881		True				
ANR	515011	Symbol	* obj		514881						
ANR	515012	Symbol	NULL		514881						
ANR	515013	Symbol	obj		514881						
ANR	515014	Symbol	obj -> sink_dispatch		514881						
ANR	515015	Symbol	& obj -> v		514881						
ANR	515016	Symbol	obj -> typeinfo		514881						
ANR	515017	Symbol	FALSE		514881						
ANR	515018	Symbol	obj -> id_of_name_cache		514881						
ANR	515019	Symbol	obj -> method_cache		514881						
ANR	515020	Symbol	object		514881						
ANR	515021	Function	php_com_object_clone	622:0:15409:16134							
ANR	515022	FunctionDef	php_com_object_clone (zval * object)		515021	0					
ANR	515023	CompoundStatement		623:0:15457:16134	515021	0					
ANR	515024	IdentifierDeclStatement	"php_com_dotnet_object * cloneobj , * origobject ;"	624:1:15460:15504	515021	0	True				
ANR	515025	IdentifierDecl	* cloneobj		515021	0					
ANR	515026	IdentifierDeclType	php_com_dotnet_object *		515021	0					
ANR	515027	Identifier	cloneobj		515021	1					
ANR	515028	IdentifierDecl	* origobject		515021	1					
ANR	515029	IdentifierDeclType	php_com_dotnet_object *		515021	0					
ANR	515030	Identifier	origobject		515021	1					
ANR	515031	ExpressionStatement	origobject = ( php_com_dotnet_object * ) Z_OBJ_P ( object )	626:1:15508:15560	515021	1	True				
ANR	515032	AssignmentExpression	origobject = ( php_com_dotnet_object * ) Z_OBJ_P ( object )		515021	0		=			
ANR	515033	Identifier	origobject		515021	0					
ANR	515034	CastExpression	( php_com_dotnet_object * ) Z_OBJ_P ( object )		515021	1					
ANR	515035	CastTarget	php_com_dotnet_object *		515021	0					
ANR	515036	CallExpression	Z_OBJ_P ( object )		515021	1					
ANR	515037	Callee	Z_OBJ_P		515021	0					
ANR	515038	Identifier	Z_OBJ_P		515021	0					
ANR	515039	ArgumentList	object		515021	1					
ANR	515040	Argument	object		515021	0					
ANR	515041	Identifier	object		515021	0					
ANR	515042	ExpressionStatement	cloneobj = ( php_com_dotnet_object * ) emalloc ( sizeof ( php_com_dotnet_object ) )	627:1:15563:15636	515021	2	True				
ANR	515043	AssignmentExpression	cloneobj = ( php_com_dotnet_object * ) emalloc ( sizeof ( php_com_dotnet_object ) )		515021	0		=			
ANR	515044	Identifier	cloneobj		515021	0					
ANR	515045	CastExpression	( php_com_dotnet_object * ) emalloc ( sizeof ( php_com_dotnet_object ) )		515021	1					
ANR	515046	CastTarget	php_com_dotnet_object *		515021	0					
ANR	515047	CallExpression	emalloc ( sizeof ( php_com_dotnet_object ) )		515021	1					
ANR	515048	Callee	emalloc		515021	0					
ANR	515049	Identifier	emalloc		515021	0					
ANR	515050	ArgumentList	sizeof ( php_com_dotnet_object )		515021	1					
ANR	515051	Argument	sizeof ( php_com_dotnet_object )		515021	0					
ANR	515052	SizeofExpression	sizeof ( php_com_dotnet_object )		515021	0					
ANR	515053	Sizeof	sizeof		515021	0					
ANR	515054	SizeofOperand	php_com_dotnet_object		515021	1					
ANR	515055	ExpressionStatement	"memcpy ( cloneobj , origobject , sizeof ( * cloneobj ) )"	629:1:15640:15687	515021	3	True				
ANR	515056	CallExpression	"memcpy ( cloneobj , origobject , sizeof ( * cloneobj ) )"		515021	0					
ANR	515057	Callee	memcpy		515021	0					
ANR	515058	Identifier	memcpy		515021	0					
ANR	515059	ArgumentList	cloneobj		515021	1					
ANR	515060	Argument	cloneobj		515021	0					
ANR	515061	Identifier	cloneobj		515021	0					
ANR	515062	Argument	origobject		515021	1					
ANR	515063	Identifier	origobject		515021	0					
ANR	515064	Argument	sizeof ( * cloneobj )		515021	2					
ANR	515065	SizeofExpression	sizeof ( * cloneobj )		515021	0					
ANR	515066	Sizeof	sizeof		515021	0					
ANR	515067	UnaryOperationExpression	* cloneobj		515021	1					
ANR	515068	UnaryOperator	*		515021	0					
ANR	515069	Identifier	cloneobj		515021	1					
ANR	515070	ExpressionStatement	VariantInit ( & cloneobj -> v )	634:1:15850:15875	515021	4	True				
ANR	515071	CallExpression	VariantInit ( & cloneobj -> v )		515021	0					
ANR	515072	Callee	VariantInit		515021	0					
ANR	515073	Identifier	VariantInit		515021	0					
ANR	515074	ArgumentList	& cloneobj -> v		515021	1					
ANR	515075	Argument	& cloneobj -> v		515021	0					
ANR	515076	UnaryOperationExpression	& cloneobj -> v		515021	0					
ANR	515077	UnaryOperator	&		515021	0					
ANR	515078	PtrMemberAccess	cloneobj -> v		515021	1					
ANR	515079	Identifier	cloneobj		515021	0					
ANR	515080	Identifier	v		515021	1					
ANR	515081	ExpressionStatement	"VariantCopyInd ( & cloneobj -> v , & origobject -> v )"	637:1:15984:16028	515021	5	True				
ANR	515082	CallExpression	"VariantCopyInd ( & cloneobj -> v , & origobject -> v )"		515021	0					
ANR	515083	Callee	VariantCopyInd		515021	0					
ANR	515084	Identifier	VariantCopyInd		515021	0					
ANR	515085	ArgumentList	& cloneobj -> v		515021	1					
ANR	515086	Argument	& cloneobj -> v		515021	0					
ANR	515087	UnaryOperationExpression	& cloneobj -> v		515021	0					
ANR	515088	UnaryOperator	&		515021	0					
ANR	515089	PtrMemberAccess	cloneobj -> v		515021	1					
ANR	515090	Identifier	cloneobj		515021	0					
ANR	515091	Identifier	v		515021	1					
ANR	515092	Argument	& origobject -> v		515021	1					
ANR	515093	UnaryOperationExpression	& origobject -> v		515021	0					
ANR	515094	UnaryOperator	&		515021	0					
ANR	515095	PtrMemberAccess	origobject -> v		515021	1					
ANR	515096	Identifier	origobject		515021	0					
ANR	515097	Identifier	v		515021	1					
ANR	515098	IfStatement	if ( cloneobj -> typeinfo )		515021	6					
ANR	515099	Condition	cloneobj -> typeinfo	639:5:16036:16053	515021	0	True				
ANR	515100	PtrMemberAccess	cloneobj -> typeinfo		515021	0					
ANR	515101	Identifier	cloneobj		515021	0					
ANR	515102	Identifier	typeinfo		515021	1					
ANR	515103	CompoundStatement		17:25:598:598	515021	1					
ANR	515104	ExpressionStatement	ITypeInfo_AddRef ( cloneobj -> typeinfo )	640:2:16060:16096	515021	0	True				
ANR	515105	CallExpression	ITypeInfo_AddRef ( cloneobj -> typeinfo )		515021	0					
ANR	515106	Callee	ITypeInfo_AddRef		515021	0					
ANR	515107	Identifier	ITypeInfo_AddRef		515021	0					
ANR	515108	ArgumentList	cloneobj -> typeinfo		515021	1					
ANR	515109	Argument	cloneobj -> typeinfo		515021	0					
ANR	515110	PtrMemberAccess	cloneobj -> typeinfo		515021	0					
ANR	515111	Identifier	cloneobj		515021	0					
ANR	515112	Identifier	typeinfo		515021	1					
ANR	515113	ReturnStatement	return ( zend_object * ) cloneobj ;	643:1:16103:16132	515021	7	True				
ANR	515114	CastExpression	( zend_object * ) cloneobj		515021	0					
ANR	515115	CastTarget	zend_object *		515021	0					
ANR	515116	Identifier	cloneobj		515021	1					
ANR	515117	ReturnType	zend_object *		515021	1					
ANR	515118	Identifier	php_com_object_clone		515021	2					
ANR	515119	ParameterList	zval * object		515021	3					
ANR	515120	Parameter	zval * object	622:34:15443:15454	515021	0	True				
ANR	515121	ParameterType	zval *		515021	0					
ANR	515122	Identifier	object		515021	1					
ANR	515123	CFGEntryNode	ENTRY		515021		True				
ANR	515124	CFGExitNode	EXIT		515021		True				
ANR	515125	Symbol	emalloc		515021						
ANR	515126	Symbol	cloneobj		515021						
ANR	515127	Symbol	Z_OBJ_P		515021						
ANR	515128	Symbol	* cloneobj		515021						
ANR	515129	Symbol	cloneobj -> typeinfo		515021						
ANR	515130	Symbol	& origobject -> v		515021						
ANR	515131	Symbol	& cloneobj -> v		515021						
ANR	515132	Symbol	object		515021						
ANR	515133	Symbol	origobject		515021						
ANR	515134	Function	php_com_object_new	646:0:16137:16484							
ANR	515135	FunctionDef	php_com_object_new (zend_class_entry * ce)		515134	0					
ANR	515136	CompoundStatement		647:0:16191:16484	515134	0					
ANR	515137	IdentifierDeclStatement	php_com_dotnet_object * obj ;	648:1:16194:16220	515134	0	True				
ANR	515138	IdentifierDecl	* obj		515134	0					
ANR	515139	IdentifierDeclType	php_com_dotnet_object *		515134	0					
ANR	515140	Identifier	obj		515134	1					
ANR	515141	ExpressionStatement	php_com_initialize ( )	650:1:16224:16244	515134	1	True				
ANR	515142	CallExpression	php_com_initialize ( )		515134	0					
ANR	515143	Callee	php_com_initialize		515134	0					
ANR	515144	Identifier	php_com_initialize		515134	0					
ANR	515145	ArgumentList			515134	1					
ANR	515146	ExpressionStatement	obj = emalloc ( sizeof ( * obj ) )	651:1:16247:16274	515134	2	True				
ANR	515147	AssignmentExpression	obj = emalloc ( sizeof ( * obj ) )		515134	0		=			
ANR	515148	Identifier	obj		515134	0					
ANR	515149	CallExpression	emalloc ( sizeof ( * obj ) )		515134	1					
ANR	515150	Callee	emalloc		515134	0					
ANR	515151	Identifier	emalloc		515134	0					
ANR	515152	ArgumentList	sizeof ( * obj )		515134	1					
ANR	515153	Argument	sizeof ( * obj )		515134	0					
ANR	515154	SizeofExpression	sizeof ( * obj )		515134	0					
ANR	515155	Sizeof	sizeof		515134	0					
ANR	515156	UnaryOperationExpression	* obj		515134	1					
ANR	515157	UnaryOperator	*		515134	0					
ANR	515158	Identifier	obj		515134	1					
ANR	515159	ExpressionStatement	"memset ( obj , 0 , sizeof ( * obj ) )"	652:1:16277:16305	515134	3	True				
ANR	515160	CallExpression	"memset ( obj , 0 , sizeof ( * obj ) )"		515134	0					
ANR	515161	Callee	memset		515134	0					
ANR	515162	Identifier	memset		515134	0					
ANR	515163	ArgumentList	obj		515134	1					
ANR	515164	Argument	obj		515134	0					
ANR	515165	Identifier	obj		515134	0					
ANR	515166	Argument	0		515134	1					
ANR	515167	PrimaryExpression	0		515134	0					
ANR	515168	Argument	sizeof ( * obj )		515134	2					
ANR	515169	SizeofExpression	sizeof ( * obj )		515134	0					
ANR	515170	Sizeof	sizeof		515134	0					
ANR	515171	UnaryOperationExpression	* obj		515134	1					
ANR	515172	UnaryOperator	*		515134	0					
ANR	515173	Identifier	obj		515134	1					
ANR	515174	ExpressionStatement	VariantInit ( & obj -> v )	654:1:16309:16329	515134	4	True				
ANR	515175	CallExpression	VariantInit ( & obj -> v )		515134	0					
ANR	515176	Callee	VariantInit		515134	0					
ANR	515177	Identifier	VariantInit		515134	0					
ANR	515178	ArgumentList	& obj -> v		515134	1					
ANR	515179	Argument	& obj -> v		515134	0					
ANR	515180	UnaryOperationExpression	& obj -> v		515134	0					
ANR	515181	UnaryOperator	&		515134	0					
ANR	515182	PtrMemberAccess	obj -> v		515134	1					
ANR	515183	Identifier	obj		515134	0					
ANR	515184	Identifier	v		515134	1					
ANR	515185	ExpressionStatement	obj -> code_page = CP_ACP	655:1:16332:16355	515134	5	True				
ANR	515186	AssignmentExpression	obj -> code_page = CP_ACP		515134	0		=			
ANR	515187	PtrMemberAccess	obj -> code_page		515134	0					
ANR	515188	Identifier	obj		515134	0					
ANR	515189	Identifier	code_page		515134	1					
ANR	515190	Identifier	CP_ACP		515134	1					
ANR	515191	ExpressionStatement	obj -> ce = ce	656:1:16358:16370	515134	6	True				
ANR	515192	AssignmentExpression	obj -> ce = ce		515134	0		=			
ANR	515193	PtrMemberAccess	obj -> ce		515134	0					
ANR	515194	Identifier	obj		515134	0					
ANR	515195	Identifier	ce		515134	1					
ANR	515196	Identifier	ce		515134	1					
ANR	515197	ExpressionStatement	"zend_object_std_init ( & obj -> zo , ce )"	658:1:16374:16408	515134	7	True				
ANR	515198	CallExpression	"zend_object_std_init ( & obj -> zo , ce )"		515134	0					
ANR	515199	Callee	zend_object_std_init		515134	0					
ANR	515200	Identifier	zend_object_std_init		515134	0					
ANR	515201	ArgumentList	& obj -> zo		515134	1					
ANR	515202	Argument	& obj -> zo		515134	0					
ANR	515203	UnaryOperationExpression	& obj -> zo		515134	0					
ANR	515204	UnaryOperator	&		515134	0					
ANR	515205	PtrMemberAccess	obj -> zo		515134	1					
ANR	515206	Identifier	obj		515134	0					
ANR	515207	Identifier	zo		515134	1					
ANR	515208	Argument	ce		515134	1					
ANR	515209	Identifier	ce		515134	0					
ANR	515210	ExpressionStatement	obj -> zo . handlers = & php_com_object_handlers	659:1:16411:16454	515134	8	True				
ANR	515211	AssignmentExpression	obj -> zo . handlers = & php_com_object_handlers		515134	0		=			
ANR	515212	MemberAccess	obj -> zo . handlers		515134	0					
ANR	515213	PtrMemberAccess	obj -> zo		515134	0					
ANR	515214	Identifier	obj		515134	0					
ANR	515215	Identifier	zo		515134	1					
ANR	515216	Identifier	handlers		515134	1					
ANR	515217	UnaryOperationExpression	& php_com_object_handlers		515134	1					
ANR	515218	UnaryOperator	&		515134	0					
ANR	515219	Identifier	php_com_object_handlers		515134	1					
ANR	515220	ReturnStatement	return ( zend_object * ) obj ;	661:1:16458:16482	515134	9	True				
ANR	515221	CastExpression	( zend_object * ) obj		515134	0					
ANR	515222	CastTarget	zend_object *		515134	0					
ANR	515223	Identifier	obj		515134	1					
ANR	515224	ReturnType	zend_object *		515134	1					
ANR	515225	Identifier	php_com_object_new		515134	2					
ANR	515226	ParameterList	zend_class_entry * ce		515134	3					
ANR	515227	Parameter	zend_class_entry * ce	646:32:16169:16188	515134	0	True				
ANR	515228	ParameterType	zend_class_entry *		515134	0					
ANR	515229	Identifier	ce		515134	1					
ANR	515230	CFGEntryNode	ENTRY		515134		True				
ANR	515231	CFGExitNode	EXIT		515134		True				
ANR	515232	Symbol	* obj		515134						
ANR	515233	Symbol	ce		515134						
ANR	515234	Symbol	emalloc		515134						
ANR	515235	Symbol	CP_ACP		515134						
ANR	515236	Symbol	obj		515134						
ANR	515237	Symbol	& obj -> zo		515134						
ANR	515238	Symbol	obj -> zo . handlers		515134						
ANR	515239	Symbol	& obj -> v		515134						
ANR	515240	Symbol	obj -> code_page		515134						
ANR	515241	Symbol	& php_com_object_handlers		515134						
ANR	515242	Symbol	obj -> ce		515134						
ANR	515243	Symbol	obj -> zo		515134						
