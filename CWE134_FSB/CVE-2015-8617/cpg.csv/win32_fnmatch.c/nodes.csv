command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3823044	File	data/converged/CVE-2015-8617_php-src/win32_fnmatch.c								
ANR	3823045	DeclStmt									
ANR	3823046	Decl							char	char [ ]	sccsid
ANR	3823047	DeclStmt									
ANR	3823048	Decl							const char	"const char * ( const char * , char , int )"	rangematch
ANR	3823049	Function	fnmatch	59:0:2393:4729							
ANR	3823050	FunctionDef	"fnmatch (const char * pattern , const char * string , int flags)"		3823049	0					
ANR	3823051	CompoundStatement		60:0:2464:4729	3823049	0					
ANR	3823052	IdentifierDeclStatement	const char * stringstart ;	61:1:2467:2490	3823049	0	True				
ANR	3823053	IdentifierDecl	* stringstart		3823049	0					
ANR	3823054	IdentifierDeclType	const char *		3823049	0					
ANR	3823055	Identifier	stringstart		3823049	1					
ANR	3823056	IdentifierDeclStatement	"char c , test ;"	62:1:2493:2505	3823049	1	True				
ANR	3823057	IdentifierDecl	c		3823049	0					
ANR	3823058	IdentifierDeclType	char		3823049	0					
ANR	3823059	Identifier	c		3823049	1					
ANR	3823060	IdentifierDecl	test		3823049	1					
ANR	3823061	IdentifierDeclType	char		3823049	0					
ANR	3823062	Identifier	test		3823049	1					
ANR	3823063	ForStatement	for ( stringstart = string ; ; )		3823049	2					
ANR	3823064	ForInit	stringstart = string ;	64:6:2514:2534	3823049	0	True				
ANR	3823065	AssignmentExpression	stringstart = string		3823049	0		=			
ANR	3823066	Identifier	stringstart		3823049	0					
ANR	3823067	Identifier	string		3823049	1					
ANR	3823068	SwitchStatement	switch ( c = * pattern ++ )		3823049	1					
ANR	3823069	Condition	c = * pattern ++	65:10:2548:2561	3823049	0	True				
ANR	3823070	AssignmentExpression	c = * pattern ++		3823049	0		=			
ANR	3823071	Identifier	c		3823049	0					
ANR	3823072	UnaryOperationExpression	* pattern ++		3823049	1					
ANR	3823073	UnaryOperator	*		3823049	0					
ANR	3823074	PostIncDecOperationExpression	pattern ++		3823049	1					
ANR	3823075	Identifier	pattern		3823049	0					
ANR	3823076	IncDec	++		3823049	1					
ANR	3823077	CompoundStatement		6:26:99:99	3823049	1					
ANR	3823078	Label	case EOS :	66:2:2568:2576	3823049	0	True				
ANR	3823079	Identifier	EOS		3823049	0					
ANR	3823080	IfStatement	if ( ( flags & FNM_LEADING_DIR ) && * string == '/' )		3823049	1					
ANR	3823081	Condition	( flags & FNM_LEADING_DIR ) && * string == '/'	67:7:2585:2627	3823049	0	True				
ANR	3823082	AndExpression	( flags & FNM_LEADING_DIR ) && * string == '/'		3823049	0		&&			
ANR	3823083	BitAndExpression	flags & FNM_LEADING_DIR		3823049	0		&			
ANR	3823084	Identifier	flags		3823049	0					
ANR	3823085	Identifier	FNM_LEADING_DIR		3823049	1					
ANR	3823086	EqualityExpression	* string == '/'		3823049	1		==			
ANR	3823087	UnaryOperationExpression	* string		3823049	0					
ANR	3823088	UnaryOperator	*		3823049	0					
ANR	3823089	Identifier	string		3823049	1					
ANR	3823090	PrimaryExpression	'/'		3823049	1					
ANR	3823091	ReturnStatement	return ( 0 ) ;	68:4:2634:2644	3823049	1	True				
ANR	3823092	PrimaryExpression	0		3823049	0					
ANR	3823093	ReturnStatement	return ( * string == EOS ? 0 : FNM_NOMATCH ) ;	69:3:2649:2690	3823049	2	True				
ANR	3823094	ConditionalExpression	* string == EOS ? 0 : FNM_NOMATCH		3823049	0					
ANR	3823095	Condition	* string == EOS		3823049	0					
ANR	3823096	EqualityExpression	* string == EOS		3823049	0		==			
ANR	3823097	UnaryOperationExpression	* string		3823049	0					
ANR	3823098	UnaryOperator	*		3823049	0					
ANR	3823099	Identifier	string		3823049	1					
ANR	3823100	Identifier	EOS		3823049	1					
ANR	3823101	PrimaryExpression	0		3823049	1					
ANR	3823102	Identifier	FNM_NOMATCH		3823049	2					
ANR	3823103	Label	case '?' :	70:2:2694:2702	3823049	3	True				
ANR	3823104	IfStatement	if ( * string == EOS )		3823049	4					
ANR	3823105	Condition	* string == EOS	71:7:2711:2724	3823049	0	True				
ANR	3823106	EqualityExpression	* string == EOS		3823049	0		==			
ANR	3823107	UnaryOperationExpression	* string		3823049	0					
ANR	3823108	UnaryOperator	*		3823049	0					
ANR	3823109	Identifier	string		3823049	1					
ANR	3823110	Identifier	EOS		3823049	1					
ANR	3823111	ReturnStatement	return ( FNM_NOMATCH ) ;	72:4:2731:2751	3823049	1	True				
ANR	3823112	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823113	IfStatement	if ( * string == '/' && ( flags & FNM_PATHNAME ) )		3823049	5					
ANR	3823114	Condition	* string == '/' && ( flags & FNM_PATHNAME )	73:7:2760:2799	3823049	0	True				
ANR	3823115	AndExpression	* string == '/' && ( flags & FNM_PATHNAME )		3823049	0		&&			
ANR	3823116	EqualityExpression	* string == '/'		3823049	0		==			
ANR	3823117	UnaryOperationExpression	* string		3823049	0					
ANR	3823118	UnaryOperator	*		3823049	0					
ANR	3823119	Identifier	string		3823049	1					
ANR	3823120	PrimaryExpression	'/'		3823049	1					
ANR	3823121	BitAndExpression	flags & FNM_PATHNAME		3823049	1		&			
ANR	3823122	Identifier	flags		3823049	0					
ANR	3823123	Identifier	FNM_PATHNAME		3823049	1					
ANR	3823124	ReturnStatement	return ( FNM_NOMATCH ) ;	74:4:2806:2826	3823049	1	True				
ANR	3823125	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823126	IfStatement	if ( * string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) ) )		3823049	6					
ANR	3823127	Condition	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )	75:7:2835:2965	3823049	0	True				
ANR	3823128	AndExpression	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		3823049	0		&&			
ANR	3823129	EqualityExpression	* string == '.'		3823049	0		==			
ANR	3823130	UnaryOperationExpression	* string		3823049	0					
ANR	3823131	UnaryOperator	*		3823049	0					
ANR	3823132	Identifier	string		3823049	1					
ANR	3823133	PrimaryExpression	'.'		3823049	1					
ANR	3823134	AndExpression	( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		3823049	1		&&			
ANR	3823135	BitAndExpression	flags & FNM_PERIOD		3823049	0		&			
ANR	3823136	Identifier	flags		3823049	0					
ANR	3823137	Identifier	FNM_PERIOD		3823049	1					
ANR	3823138	OrExpression	string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' )		3823049	1		||			
ANR	3823139	EqualityExpression	string == stringstart		3823049	0		==			
ANR	3823140	Identifier	string		3823049	0					
ANR	3823141	Identifier	stringstart		3823049	1					
ANR	3823142	AndExpression	( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/'		3823049	1		&&			
ANR	3823143	BitAndExpression	flags & FNM_PATHNAME		3823049	0		&			
ANR	3823144	Identifier	flags		3823049	0					
ANR	3823145	Identifier	FNM_PATHNAME		3823049	1					
ANR	3823146	EqualityExpression	* ( string - 1 ) == '/'		3823049	1		==			
ANR	3823147	UnaryOperationExpression	* ( string - 1 )		3823049	0					
ANR	3823148	UnaryOperator	*		3823049	0					
ANR	3823149	AdditiveExpression	string - 1		3823049	1		-			
ANR	3823150	Identifier	string		3823049	0					
ANR	3823151	PrimaryExpression	1		3823049	1					
ANR	3823152	PrimaryExpression	'/'		3823049	1					
ANR	3823153	ReturnStatement	return ( FNM_NOMATCH ) ;	78:4:2972:2992	3823049	1	True				
ANR	3823154	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823155	ExpressionStatement	++ string	79:3:2997:3005	3823049	7	True				
ANR	3823156	UnaryExpression	++ string		3823049	0					
ANR	3823157	IncDec	++		3823049	0					
ANR	3823158	Identifier	string		3823049	1					
ANR	3823159	BreakStatement	break ;	80:3:3010:3015	3823049	8	True				
ANR	3823160	Label	case '*' :	81:2:3019:3027	3823049	9	True				
ANR	3823161	ExpressionStatement	c = * pattern	82:3:3032:3044	3823049	10	True				
ANR	3823162	AssignmentExpression	c = * pattern		3823049	0		=			
ANR	3823163	Identifier	c		3823049	0					
ANR	3823164	UnaryOperationExpression	* pattern		3823049	1					
ANR	3823165	UnaryOperator	*		3823049	0					
ANR	3823166	Identifier	pattern		3823049	1					
ANR	3823167	WhileStatement	while ( c == '*' )		3823049	11					
ANR	3823168	Condition	c == '*'	84:10:3090:3097	3823049	0	True				
ANR	3823169	EqualityExpression	c == '*'		3823049	0		==			
ANR	3823170	Identifier	c		3823049	0					
ANR	3823171	PrimaryExpression	'*'		3823049	1					
ANR	3823172	ExpressionStatement	c = * ++ pattern	85:4:3104:3118	3823049	1	True				
ANR	3823173	AssignmentExpression	c = * ++ pattern		3823049	0		=			
ANR	3823174	Identifier	c		3823049	0					
ANR	3823175	UnaryOperationExpression	* ++ pattern		3823049	1					
ANR	3823176	UnaryOperator	*		3823049	0					
ANR	3823177	UnaryExpression	++ pattern		3823049	1					
ANR	3823178	IncDec	++		3823049	0					
ANR	3823179	Identifier	pattern		3823049	1					
ANR	3823180	IfStatement	if ( * string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) ) )		3823049	12					
ANR	3823181	Condition	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )	87:7:3128:3258	3823049	0	True				
ANR	3823182	AndExpression	* string == '.' && ( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		3823049	0		&&			
ANR	3823183	EqualityExpression	* string == '.'		3823049	0		==			
ANR	3823184	UnaryOperationExpression	* string		3823049	0					
ANR	3823185	UnaryOperator	*		3823049	0					
ANR	3823186	Identifier	string		3823049	1					
ANR	3823187	PrimaryExpression	'.'		3823049	1					
ANR	3823188	AndExpression	( flags & FNM_PERIOD ) && ( string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' ) )		3823049	1		&&			
ANR	3823189	BitAndExpression	flags & FNM_PERIOD		3823049	0		&			
ANR	3823190	Identifier	flags		3823049	0					
ANR	3823191	Identifier	FNM_PERIOD		3823049	1					
ANR	3823192	OrExpression	string == stringstart || ( ( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/' )		3823049	1		||			
ANR	3823193	EqualityExpression	string == stringstart		3823049	0		==			
ANR	3823194	Identifier	string		3823049	0					
ANR	3823195	Identifier	stringstart		3823049	1					
ANR	3823196	AndExpression	( flags & FNM_PATHNAME ) && * ( string - 1 ) == '/'		3823049	1		&&			
ANR	3823197	BitAndExpression	flags & FNM_PATHNAME		3823049	0		&			
ANR	3823198	Identifier	flags		3823049	0					
ANR	3823199	Identifier	FNM_PATHNAME		3823049	1					
ANR	3823200	EqualityExpression	* ( string - 1 ) == '/'		3823049	1		==			
ANR	3823201	UnaryOperationExpression	* ( string - 1 )		3823049	0					
ANR	3823202	UnaryOperator	*		3823049	0					
ANR	3823203	AdditiveExpression	string - 1		3823049	1		-			
ANR	3823204	Identifier	string		3823049	0					
ANR	3823205	PrimaryExpression	1		3823049	1					
ANR	3823206	PrimaryExpression	'/'		3823049	1					
ANR	3823207	ReturnStatement	return ( FNM_NOMATCH ) ;	90:4:3265:3285	3823049	1	True				
ANR	3823208	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823209	IfStatement	if ( c == EOS )		3823049	13					
ANR	3823210	Condition	c == EOS	93:7:3352:3359	3823049	0	True				
ANR	3823211	EqualityExpression	c == EOS		3823049	0		==			
ANR	3823212	Identifier	c		3823049	0					
ANR	3823213	Identifier	EOS		3823049	1					
ANR	3823214	IfStatement	if ( flags & FNM_PATHNAME )		3823049	1					
ANR	3823215	Condition	flags & FNM_PATHNAME	94:8:3370:3389	3823049	0	True				
ANR	3823216	BitAndExpression	flags & FNM_PATHNAME		3823049	0		&			
ANR	3823217	Identifier	flags		3823049	0					
ANR	3823218	Identifier	FNM_PATHNAME		3823049	1					
ANR	3823219	ReturnStatement	"return ( ( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL ? 0 : FNM_NOMATCH ) ;"	95:5:3397:3498	3823049	1	True				
ANR	3823220	ConditionalExpression	"( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL ? 0 : FNM_NOMATCH"		3823049	0					
ANR	3823221	Condition	"( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL"		3823049	0					
ANR	3823222	OrExpression	"( flags & FNM_LEADING_DIR ) || strchr ( string , '/' ) == NULL"		3823049	0		||			
ANR	3823223	BitAndExpression	flags & FNM_LEADING_DIR		3823049	0		&			
ANR	3823224	Identifier	flags		3823049	0					
ANR	3823225	Identifier	FNM_LEADING_DIR		3823049	1					
ANR	3823226	EqualityExpression	"strchr ( string , '/' ) == NULL"		3823049	1		==			
ANR	3823227	CallExpression	"strchr ( string , '/' )"		3823049	0					
ANR	3823228	Callee	strchr		3823049	0					
ANR	3823229	Identifier	strchr		3823049	0					
ANR	3823230	ArgumentList	string		3823049	1					
ANR	3823231	Argument	string		3823049	0					
ANR	3823232	Identifier	string		3823049	0					
ANR	3823233	Argument	'/'		3823049	1					
ANR	3823234	PrimaryExpression	'/'		3823049	0					
ANR	3823235	Identifier	NULL		3823049	1					
ANR	3823236	PrimaryExpression	0		3823049	1					
ANR	3823237	Identifier	FNM_NOMATCH		3823049	2					
ANR	3823238	ElseStatement	else		3823049	0					
ANR	3823239	ReturnStatement	return ( 0 ) ;	99:5:3514:3524	3823049	0	True				
ANR	3823240	PrimaryExpression	0		3823049	0					
ANR	3823241	ElseStatement	else		3823049	0					
ANR	3823242	IfStatement	if ( c == '/' && flags & FNM_PATHNAME )		3823049	0					
ANR	3823243	Condition	c == '/' && flags & FNM_PATHNAME	100:12:3538:3569	3823049	0	True				
ANR	3823244	AndExpression	c == '/' && flags & FNM_PATHNAME		3823049	0		&&			
ANR	3823245	EqualityExpression	c == '/'		3823049	0		==			
ANR	3823246	Identifier	c		3823049	0					
ANR	3823247	PrimaryExpression	'/'		3823049	1					
ANR	3823248	BitAndExpression	flags & FNM_PATHNAME		3823049	1		&			
ANR	3823249	Identifier	flags		3823049	0					
ANR	3823250	Identifier	FNM_PATHNAME		3823049	1					
ANR	3823251	CompoundStatement		41:46:1107:1107	3823049	1					
ANR	3823252	IfStatement	"if ( ( string = strchr ( string , '/' ) ) == NULL )"		3823049	0					
ANR	3823253	Condition	"( string = strchr ( string , '/' ) ) == NULL"	101:8:3582:3619	3823049	0	True				
ANR	3823254	EqualityExpression	"( string = strchr ( string , '/' ) ) == NULL"		3823049	0		==			
ANR	3823255	AssignmentExpression	"string = strchr ( string , '/' )"		3823049	0		=			
ANR	3823256	Identifier	string		3823049	0					
ANR	3823257	CallExpression	"strchr ( string , '/' )"		3823049	1					
ANR	3823258	Callee	strchr		3823049	0					
ANR	3823259	Identifier	strchr		3823049	0					
ANR	3823260	ArgumentList	string		3823049	1					
ANR	3823261	Argument	string		3823049	0					
ANR	3823262	Identifier	string		3823049	0					
ANR	3823263	Argument	'/'		3823049	1					
ANR	3823264	PrimaryExpression	'/'		3823049	0					
ANR	3823265	Identifier	NULL		3823049	1					
ANR	3823266	ReturnStatement	return ( FNM_NOMATCH ) ;	102:5:3627:3647	3823049	1	True				
ANR	3823267	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823268	BreakStatement	break ;	103:4:3653:3658	3823049	1	True				
ANR	3823269	WhileStatement	while ( ( test = * string ) != EOS )		3823049	14					
ANR	3823270	Condition	( test = * string ) != EOS	107:10:3714:3736	3823049	0	True				
ANR	3823271	EqualityExpression	( test = * string ) != EOS		3823049	0		!=			
ANR	3823272	AssignmentExpression	test = * string		3823049	0		=			
ANR	3823273	Identifier	test		3823049	0					
ANR	3823274	UnaryOperationExpression	* string		3823049	1					
ANR	3823275	UnaryOperator	*		3823049	0					
ANR	3823276	Identifier	string		3823049	1					
ANR	3823277	Identifier	EOS		3823049	1					
ANR	3823278	CompoundStatement		48:35:1274:1274	3823049	1					
ANR	3823279	IfStatement	"if ( ! fnmatch ( pattern , string , flags & ~FNM_PERIOD ) )"		3823049	0					
ANR	3823280	Condition	"! fnmatch ( pattern , string , flags & ~FNM_PERIOD )"	108:8:3749:3794	3823049	0	True				
ANR	3823281	UnaryOperationExpression	"! fnmatch ( pattern , string , flags & ~FNM_PERIOD )"		3823049	0					
ANR	3823282	UnaryOperator	!		3823049	0					
ANR	3823283	CallExpression	"fnmatch ( pattern , string , flags & ~FNM_PERIOD )"		3823049	1					
ANR	3823284	Callee	fnmatch		3823049	0					
ANR	3823285	Identifier	fnmatch		3823049	0					
ANR	3823286	ArgumentList	pattern		3823049	1					
ANR	3823287	Argument	pattern		3823049	0					
ANR	3823288	Identifier	pattern		3823049	0					
ANR	3823289	Argument	string		3823049	1					
ANR	3823290	Identifier	string		3823049	0					
ANR	3823291	Argument	flags & ~FNM_PERIOD		3823049	2					
ANR	3823292	BitAndExpression	flags & ~FNM_PERIOD		3823049	0		&			
ANR	3823293	Identifier	flags		3823049	0					
ANR	3823294	Identifier	~FNM_PERIOD		3823049	1					
ANR	3823295	ReturnStatement	return ( 0 ) ;	109:5:3802:3812	3823049	1	True				
ANR	3823296	PrimaryExpression	0		3823049	0					
ANR	3823297	IfStatement	if ( test == '/' && flags & FNM_PATHNAME )		3823049	1					
ANR	3823298	Condition	test == '/' && flags & FNM_PATHNAME	110:8:3822:3856	3823049	0	True				
ANR	3823299	AndExpression	test == '/' && flags & FNM_PATHNAME		3823049	0		&&			
ANR	3823300	EqualityExpression	test == '/'		3823049	0		==			
ANR	3823301	Identifier	test		3823049	0					
ANR	3823302	PrimaryExpression	'/'		3823049	1					
ANR	3823303	BitAndExpression	flags & FNM_PATHNAME		3823049	1		&			
ANR	3823304	Identifier	flags		3823049	0					
ANR	3823305	Identifier	FNM_PATHNAME		3823049	1					
ANR	3823306	BreakStatement	break ;	111:5:3864:3869	3823049	1	True				
ANR	3823307	ExpressionStatement	++ string	112:4:3875:3883	3823049	2	True				
ANR	3823308	UnaryExpression	++ string		3823049	0					
ANR	3823309	IncDec	++		3823049	0					
ANR	3823310	Identifier	string		3823049	1					
ANR	3823311	ReturnStatement	return ( FNM_NOMATCH ) ;	114:3:3893:3913	3823049	15	True				
ANR	3823312	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823313	Label	case '[' :	115:2:3917:3925	3823049	16	True				
ANR	3823314	IfStatement	if ( * string == EOS )		3823049	17					
ANR	3823315	Condition	* string == EOS	116:7:3934:3947	3823049	0	True				
ANR	3823316	EqualityExpression	* string == EOS		3823049	0		==			
ANR	3823317	UnaryOperationExpression	* string		3823049	0					
ANR	3823318	UnaryOperator	*		3823049	0					
ANR	3823319	Identifier	string		3823049	1					
ANR	3823320	Identifier	EOS		3823049	1					
ANR	3823321	ReturnStatement	return ( FNM_NOMATCH ) ;	117:4:3954:3974	3823049	1	True				
ANR	3823322	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823323	IfStatement	if ( * string == '/' && flags & FNM_PATHNAME )		3823049	18					
ANR	3823324	Condition	* string == '/' && flags & FNM_PATHNAME	118:7:3983:4020	3823049	0	True				
ANR	3823325	AndExpression	* string == '/' && flags & FNM_PATHNAME		3823049	0		&&			
ANR	3823326	EqualityExpression	* string == '/'		3823049	0		==			
ANR	3823327	UnaryOperationExpression	* string		3823049	0					
ANR	3823328	UnaryOperator	*		3823049	0					
ANR	3823329	Identifier	string		3823049	1					
ANR	3823330	PrimaryExpression	'/'		3823049	1					
ANR	3823331	BitAndExpression	flags & FNM_PATHNAME		3823049	1		&			
ANR	3823332	Identifier	flags		3823049	0					
ANR	3823333	Identifier	FNM_PATHNAME		3823049	1					
ANR	3823334	ReturnStatement	return ( FNM_NOMATCH ) ;	119:4:4027:4047	3823049	1	True				
ANR	3823335	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823336	IfStatement	"if ( ( pattern = rangematch ( pattern , * string , flags ) ) == NULL )"		3823049	19					
ANR	3823337	Condition	"( pattern = rangematch ( pattern , * string , flags ) ) == NULL"	120:7:4056:4117	3823049	0	True				
ANR	3823338	EqualityExpression	"( pattern = rangematch ( pattern , * string , flags ) ) == NULL"		3823049	0		==			
ANR	3823339	AssignmentExpression	"pattern = rangematch ( pattern , * string , flags )"		3823049	0		=			
ANR	3823340	Identifier	pattern		3823049	0					
ANR	3823341	CallExpression	"rangematch ( pattern , * string , flags )"		3823049	1					
ANR	3823342	Callee	rangematch		3823049	0					
ANR	3823343	Identifier	rangematch		3823049	0					
ANR	3823344	ArgumentList	pattern		3823049	1					
ANR	3823345	Argument	pattern		3823049	0					
ANR	3823346	Identifier	pattern		3823049	0					
ANR	3823347	Argument	* string		3823049	1					
ANR	3823348	UnaryOperationExpression	* string		3823049	0					
ANR	3823349	UnaryOperator	*		3823049	0					
ANR	3823350	Identifier	string		3823049	1					
ANR	3823351	Argument	flags		3823049	2					
ANR	3823352	Identifier	flags		3823049	0					
ANR	3823353	Identifier	NULL		3823049	1					
ANR	3823354	ReturnStatement	return ( FNM_NOMATCH ) ;	122:4:4124:4144	3823049	1	True				
ANR	3823355	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823356	ExpressionStatement	++ string	123:3:4149:4157	3823049	20	True				
ANR	3823357	UnaryExpression	++ string		3823049	0					
ANR	3823358	IncDec	++		3823049	0					
ANR	3823359	Identifier	string		3823049	1					
ANR	3823360	BreakStatement	break ;	124:3:4162:4167	3823049	21	True				
ANR	3823361	Label	case '\\\\' :	125:2:4171:4180	3823049	22	True				
ANR	3823362	IfStatement	if ( ! ( flags & FNM_NOESCAPE ) )		3823049	23					
ANR	3823363	Condition	! ( flags & FNM_NOESCAPE )	126:7:4189:4211	3823049	0	True				
ANR	3823364	UnaryOperationExpression	! ( flags & FNM_NOESCAPE )		3823049	0					
ANR	3823365	UnaryOperator	!		3823049	0					
ANR	3823366	BitAndExpression	flags & FNM_NOESCAPE		3823049	1		&			
ANR	3823367	Identifier	flags		3823049	0					
ANR	3823368	Identifier	FNM_NOESCAPE		3823049	1					
ANR	3823369	CompoundStatement		67:32:1749:1749	3823049	1					
ANR	3823370	IfStatement	if ( ( c = * pattern ++ ) == EOS )		3823049	0					
ANR	3823371	Condition	( c = * pattern ++ ) == EOS	127:8:4224:4246	3823049	0	True				
ANR	3823372	EqualityExpression	( c = * pattern ++ ) == EOS		3823049	0		==			
ANR	3823373	AssignmentExpression	c = * pattern ++		3823049	0		=			
ANR	3823374	Identifier	c		3823049	0					
ANR	3823375	UnaryOperationExpression	* pattern ++		3823049	1					
ANR	3823376	UnaryOperator	*		3823049	0					
ANR	3823377	PostIncDecOperationExpression	pattern ++		3823049	1					
ANR	3823378	Identifier	pattern		3823049	0					
ANR	3823379	IncDec	++		3823049	1					
ANR	3823380	Identifier	EOS		3823049	1					
ANR	3823381	CompoundStatement		68:33:1784:1784	3823049	1					
ANR	3823382	ExpressionStatement	c = '\\\\'	128:5:4256:4264	3823049	0	True				
ANR	3823383	AssignmentExpression	c = '\\\\'		3823049	0		=			
ANR	3823384	Identifier	c		3823049	0					
ANR	3823385	PrimaryExpression	'\\\\'		3823049	1					
ANR	3823386	ExpressionStatement	-- pattern	129:5:4271:4280	3823049	1	True				
ANR	3823387	UnaryExpression	-- pattern		3823049	0					
ANR	3823388	IncDec	--		3823049	0					
ANR	3823389	Identifier	pattern		3823049	1					
ANR	3823390	Label	default :	133:2:4316:4323	3823049	24	True				
ANR	3823391	Identifier	default		3823049	0					
ANR	3823392	IfStatement	if ( c == * string )		3823049	25					
ANR	3823393	Condition	c == * string	134:7:4332:4343	3823049	0	True				
ANR	3823394	EqualityExpression	c == * string		3823049	0		==			
ANR	3823395	Identifier	c		3823049	0					
ANR	3823396	UnaryOperationExpression	* string		3823049	1					
ANR	3823397	UnaryOperator	*		3823049	0					
ANR	3823398	Identifier	string		3823049	1					
ANR	3823399	ExpressionStatement		135:4:4350:4350	3823049	1	True				
ANR	3823400	ElseStatement	else		3823049	0					
ANR	3823401	IfStatement	if ( ( flags & FNM_CASEFOLD ) && ( tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string ) ) )		3823049	0					
ANR	3823402	Condition	( flags & FNM_CASEFOLD ) && ( tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string ) )	136:12:4364:4462	3823049	0	True				
ANR	3823403	AndExpression	( flags & FNM_CASEFOLD ) && ( tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string ) )		3823049	0		&&			
ANR	3823404	BitAndExpression	flags & FNM_CASEFOLD		3823049	0		&			
ANR	3823405	Identifier	flags		3823049	0					
ANR	3823406	Identifier	FNM_CASEFOLD		3823049	1					
ANR	3823407	EqualityExpression	tolower ( ( unsigned char ) c ) == tolower ( ( unsigned char ) * string )		3823049	1		==			
ANR	3823408	CallExpression	tolower ( ( unsigned char ) c )		3823049	0					
ANR	3823409	Callee	tolower		3823049	0					
ANR	3823410	Identifier	tolower		3823049	0					
ANR	3823411	ArgumentList	( unsigned char ) c		3823049	1					
ANR	3823412	Argument	( unsigned char ) c		3823049	0					
ANR	3823413	CastExpression	( unsigned char ) c		3823049	0					
ANR	3823414	CastTarget	unsigned char		3823049	0					
ANR	3823415	Identifier	c		3823049	1					
ANR	3823416	CallExpression	tolower ( ( unsigned char ) * string )		3823049	1					
ANR	3823417	Callee	tolower		3823049	0					
ANR	3823418	Identifier	tolower		3823049	0					
ANR	3823419	ArgumentList	( unsigned char ) * string		3823049	1					
ANR	3823420	Argument	( unsigned char ) * string		3823049	0					
ANR	3823421	CastExpression	( unsigned char ) * string		3823049	0					
ANR	3823422	CastTarget	unsigned char		3823049	0					
ANR	3823423	UnaryOperationExpression	* string		3823049	1					
ANR	3823424	UnaryOperator	*		3823049	0					
ANR	3823425	Identifier	string		3823049	1					
ANR	3823426	ExpressionStatement		139:4:4469:4469	3823049	1	True				
ANR	3823427	ElseStatement	else		3823049	0					
ANR	3823428	IfStatement	if ( ( flags & FNM_PREFIX_DIRS ) && * string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' ) )		3823049	0					
ANR	3823429	Condition	( flags & FNM_PREFIX_DIRS ) && * string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' )	140:12:4483:4630	3823049	0	True				
ANR	3823430	AndExpression	( flags & FNM_PREFIX_DIRS ) && * string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' )		3823049	0		&&			
ANR	3823431	BitAndExpression	flags & FNM_PREFIX_DIRS		3823049	0		&			
ANR	3823432	Identifier	flags		3823049	0					
ANR	3823433	Identifier	FNM_PREFIX_DIRS		3823049	1					
ANR	3823434	AndExpression	* string == EOS && ( c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/' )		3823049	1		&&			
ANR	3823435	EqualityExpression	* string == EOS		3823049	0		==			
ANR	3823436	UnaryOperationExpression	* string		3823049	0					
ANR	3823437	UnaryOperator	*		3823049	0					
ANR	3823438	Identifier	string		3823049	1					
ANR	3823439	Identifier	EOS		3823049	1					
ANR	3823440	OrExpression	c == '/' && string != stringstart || string == stringstart + 1 && * stringstart == '/'		3823049	1		||			
ANR	3823441	AndExpression	c == '/' && string != stringstart		3823049	0		&&			
ANR	3823442	EqualityExpression	c == '/'		3823049	0		==			
ANR	3823443	Identifier	c		3823049	0					
ANR	3823444	PrimaryExpression	'/'		3823049	1					
ANR	3823445	EqualityExpression	string != stringstart		3823049	1		!=			
ANR	3823446	Identifier	string		3823049	0					
ANR	3823447	Identifier	stringstart		3823049	1					
ANR	3823448	AndExpression	string == stringstart + 1 && * stringstart == '/'		3823049	1		&&			
ANR	3823449	EqualityExpression	string == stringstart + 1		3823049	0		==			
ANR	3823450	Identifier	string		3823049	0					
ANR	3823451	AdditiveExpression	stringstart + 1		3823049	1		+			
ANR	3823452	Identifier	stringstart		3823049	0					
ANR	3823453	PrimaryExpression	1		3823049	1					
ANR	3823454	EqualityExpression	* stringstart == '/'		3823049	1		==			
ANR	3823455	UnaryOperationExpression	* stringstart		3823049	0					
ANR	3823456	UnaryOperator	*		3823049	0					
ANR	3823457	Identifier	stringstart		3823049	1					
ANR	3823458	PrimaryExpression	'/'		3823049	1					
ANR	3823459	ReturnStatement	return ( 0 ) ;	143:4:4638:4648	3823049	1	True				
ANR	3823460	PrimaryExpression	0		3823049	0					
ANR	3823461	ElseStatement	else		3823049	0					
ANR	3823462	ReturnStatement	return ( FNM_NOMATCH ) ;	145:4:4662:4682	3823049	0	True				
ANR	3823463	Identifier	FNM_NOMATCH		3823049	0					
ANR	3823464	ExpressionStatement	string ++	146:3:4687:4695	3823049	26	True				
ANR	3823465	PostIncDecOperationExpression	string ++		3823049	0					
ANR	3823466	Identifier	string		3823049	0					
ANR	3823467	IncDec	++		3823049	1					
ANR	3823468	BreakStatement	break ;	147:3:4700:4705	3823049	27	True				
ANR	3823469	ReturnType	PHPAPI int		3823049	1					
ANR	3823470	Identifier	fnmatch		3823049	2					
ANR	3823471	ParameterList	"const char * pattern , const char * string , int flags"		3823049	3					
ANR	3823472	Parameter	const char * pattern	59:19:2412:2430	3823049	0	True				
ANR	3823473	ParameterType	const char *		3823049	0					
ANR	3823474	Identifier	pattern		3823049	1					
ANR	3823475	Parameter	const char * string	59:40:2433:2450	3823049	1	True				
ANR	3823476	ParameterType	const char *		3823049	0					
ANR	3823477	Identifier	string		3823049	1					
ANR	3823478	Parameter	int flags	59:60:2453:2461	3823049	2	True				
ANR	3823479	ParameterType	int		3823049	0					
ANR	3823480	Identifier	flags		3823049	1					
ANR	3823481	CFGEntryNode	ENTRY		3823049		True				
ANR	3823482	CFGExitNode	EXIT		3823049		True				
ANR	3823483	InfiniteForNode	true		3823049		True				
ANR	3823484	Symbol	string		3823049						
ANR	3823485	Symbol	FNM_LEADING_DIR		3823049						
ANR	3823486	Symbol	tolower		3823049						
ANR	3823487	Symbol	pattern		3823049						
ANR	3823488	Symbol	flags		3823049						
ANR	3823489	Symbol	* ++ pattern		3823049						
ANR	3823490	Symbol	* string		3823049						
ANR	3823491	Symbol	strchr		3823049						
ANR	3823492	Symbol	FNM_PREFIX_DIRS		3823049						
ANR	3823493	Symbol	FNM_NOMATCH		3823049						
ANR	3823494	Symbol	FNM_CASEFOLD		3823049						
ANR	3823495	Symbol	* pattern ++		3823049						
ANR	3823496	Symbol	stringstart		3823049						
ANR	3823497	Symbol	* pattern		3823049						
ANR	3823498	Symbol	c		3823049						
ANR	3823499	Symbol	NULL		3823049						
ANR	3823500	Symbol	fnmatch		3823049						
ANR	3823501	Symbol	test		3823049						
ANR	3823502	Symbol	rangematch		3823049						
ANR	3823503	Symbol	~FNM_PERIOD		3823049						
ANR	3823504	Symbol	EOS		3823049						
ANR	3823505	Symbol	FNM_PATHNAME		3823049						
ANR	3823506	Symbol	FNM_NOESCAPE		3823049						
ANR	3823507	Symbol	FNM_PERIOD		3823049						
ANR	3823508	Symbol	* ( string - 1 )		3823049						
ANR	3823509	Symbol	* stringstart		3823049						
ANR	3823510	Function	rangematch	152:0:4732:5919							
ANR	3823511	FunctionDef	"rangematch (const char * pattern , char test , int flags)"		3823510	0					
ANR	3823512	CompoundStatement		154:0:4806:5919	3823510	0					
ANR	3823513	IdentifierDeclStatement	"int negate , ok ;"	155:1:4809:4823	3823510	0	True				
ANR	3823514	IdentifierDecl	negate		3823510	0					
ANR	3823515	IdentifierDeclType	int		3823510	0					
ANR	3823516	Identifier	negate		3823510	1					
ANR	3823517	IdentifierDecl	ok		3823510	1					
ANR	3823518	IdentifierDeclType	int		3823510	0					
ANR	3823519	Identifier	ok		3823510	1					
ANR	3823520	IdentifierDeclStatement	"char c , c2 ;"	156:1:4826:4836	3823510	1	True				
ANR	3823521	IdentifierDecl	c		3823510	0					
ANR	3823522	IdentifierDeclType	char		3823510	0					
ANR	3823523	Identifier	c		3823510	1					
ANR	3823524	IdentifierDecl	c2		3823510	1					
ANR	3823525	IdentifierDeclType	char		3823510	0					
ANR	3823526	Identifier	c2		3823510	1					
ANR	3823527	IfStatement	if ( ( negate = ( * pattern == '!' || * pattern == '^' ) ) )		3823510	2					
ANR	3823528	Condition	negate = ( * pattern == '!' || * pattern == '^' )	165:6:5132:5178	3823510	0	True				
ANR	3823529	AssignmentExpression	negate = ( * pattern == '!' || * pattern == '^' )		3823510	0		=			
ANR	3823530	Identifier	negate		3823510	0					
ANR	3823531	OrExpression	* pattern == '!' || * pattern == '^'		3823510	1		||			
ANR	3823532	EqualityExpression	* pattern == '!'		3823510	0		==			
ANR	3823533	UnaryOperationExpression	* pattern		3823510	0					
ANR	3823534	UnaryOperator	*		3823510	0					
ANR	3823535	Identifier	pattern		3823510	1					
ANR	3823536	PrimaryExpression	'!'		3823510	1					
ANR	3823537	EqualityExpression	* pattern == '^'		3823510	1		==			
ANR	3823538	UnaryOperationExpression	* pattern		3823510	0					
ANR	3823539	UnaryOperator	*		3823510	0					
ANR	3823540	Identifier	pattern		3823510	1					
ANR	3823541	PrimaryExpression	'^'		3823510	1					
ANR	3823542	ExpressionStatement	++ pattern	166:2:5184:5193	3823510	1	True				
ANR	3823543	UnaryExpression	++ pattern		3823510	0					
ANR	3823544	IncDec	++		3823510	0					
ANR	3823545	Identifier	pattern		3823510	1					
ANR	3823546	IfStatement	if ( flags & FNM_CASEFOLD )		3823510	3					
ANR	3823547	Condition	flags & FNM_CASEFOLD	168:5:5201:5220	3823510	0	True				
ANR	3823548	BitAndExpression	flags & FNM_CASEFOLD		3823510	0		&			
ANR	3823549	Identifier	flags		3823510	0					
ANR	3823550	Identifier	FNM_CASEFOLD		3823510	1					
ANR	3823551	ExpressionStatement	test = tolower ( ( unsigned char ) test )	169:2:5225:5260	3823510	1	True				
ANR	3823552	AssignmentExpression	test = tolower ( ( unsigned char ) test )		3823510	0		=			
ANR	3823553	Identifier	test		3823510	0					
ANR	3823554	CallExpression	tolower ( ( unsigned char ) test )		3823510	1					
ANR	3823555	Callee	tolower		3823510	0					
ANR	3823556	Identifier	tolower		3823510	0					
ANR	3823557	ArgumentList	( unsigned char ) test		3823510	1					
ANR	3823558	Argument	( unsigned char ) test		3823510	0					
ANR	3823559	CastExpression	( unsigned char ) test		3823510	0					
ANR	3823560	CastTarget	unsigned char		3823510	0					
ANR	3823561	Identifier	test		3823510	1					
ANR	3823562	ForStatement	for ( ok = 0 ; ( c = * pattern ++ ) != ']' ; )		3823510	4					
ANR	3823563	ForInit	ok = 0 ;	171:6:5269:5275	3823510	0	True				
ANR	3823564	AssignmentExpression	ok = 0		3823510	0		=			
ANR	3823565	Identifier	ok		3823510	0					
ANR	3823566	PrimaryExpression	0		3823510	1					
ANR	3823567	Condition	( c = * pattern ++ ) != ']'	171:14:5277:5299	3823510	1	True				
ANR	3823568	EqualityExpression	( c = * pattern ++ ) != ']'		3823510	0		!=			
ANR	3823569	AssignmentExpression	c = * pattern ++		3823510	0		=			
ANR	3823570	Identifier	c		3823510	0					
ANR	3823571	UnaryOperationExpression	* pattern ++		3823510	1					
ANR	3823572	UnaryOperator	*		3823510	0					
ANR	3823573	PostIncDecOperationExpression	pattern ++		3823510	1					
ANR	3823574	Identifier	pattern		3823510	0					
ANR	3823575	IncDec	++		3823510	1					
ANR	3823576	PrimaryExpression	']'		3823510	1					
ANR	3823577	CompoundStatement		18:40:496:496	3823510	2					
ANR	3823578	IfStatement	if ( c == '\\\\' && ! ( flags & FNM_NOESCAPE ) )		3823510	0					
ANR	3823579	Condition	c == '\\\\' && ! ( flags & FNM_NOESCAPE )	172:6:5311:5346	3823510	0	True				
ANR	3823580	AndExpression	c == '\\\\' && ! ( flags & FNM_NOESCAPE )		3823510	0		&&			
ANR	3823581	EqualityExpression	c == '\\\\'		3823510	0		==			
ANR	3823582	Identifier	c		3823510	0					
ANR	3823583	PrimaryExpression	'\\\\'		3823510	1					
ANR	3823584	UnaryOperationExpression	! ( flags & FNM_NOESCAPE )		3823510	1					
ANR	3823585	UnaryOperator	!		3823510	0					
ANR	3823586	BitAndExpression	flags & FNM_NOESCAPE		3823510	1		&			
ANR	3823587	Identifier	flags		3823510	0					
ANR	3823588	Identifier	FNM_NOESCAPE		3823510	1					
ANR	3823589	ExpressionStatement	c = * pattern ++	173:3:5352:5366	3823510	1	True				
ANR	3823590	AssignmentExpression	c = * pattern ++		3823510	0		=			
ANR	3823591	Identifier	c		3823510	0					
ANR	3823592	UnaryOperationExpression	* pattern ++		3823510	1					
ANR	3823593	UnaryOperator	*		3823510	0					
ANR	3823594	PostIncDecOperationExpression	pattern ++		3823510	1					
ANR	3823595	Identifier	pattern		3823510	0					
ANR	3823596	IncDec	++		3823510	1					
ANR	3823597	IfStatement	if ( c == EOS )		3823510	1					
ANR	3823598	Condition	c == EOS	174:6:5374:5381	3823510	0	True				
ANR	3823599	EqualityExpression	c == EOS		3823510	0		==			
ANR	3823600	Identifier	c		3823510	0					
ANR	3823601	Identifier	EOS		3823510	1					
ANR	3823602	ReturnStatement	return ( NULL ) ;	175:3:5387:5400	3823510	1	True				
ANR	3823603	Identifier	NULL		3823510	0					
ANR	3823604	IfStatement	if ( flags & FNM_CASEFOLD )		3823510	2					
ANR	3823605	Condition	flags & FNM_CASEFOLD	177:6:5409:5428	3823510	0	True				
ANR	3823606	BitAndExpression	flags & FNM_CASEFOLD		3823510	0		&			
ANR	3823607	Identifier	flags		3823510	0					
ANR	3823608	Identifier	FNM_CASEFOLD		3823510	1					
ANR	3823609	ExpressionStatement	c = tolower ( ( unsigned char ) c )	178:3:5434:5463	3823510	1	True				
ANR	3823610	AssignmentExpression	c = tolower ( ( unsigned char ) c )		3823510	0		=			
ANR	3823611	Identifier	c		3823510	0					
ANR	3823612	CallExpression	tolower ( ( unsigned char ) c )		3823510	1					
ANR	3823613	Callee	tolower		3823510	0					
ANR	3823614	Identifier	tolower		3823510	0					
ANR	3823615	ArgumentList	( unsigned char ) c		3823510	1					
ANR	3823616	Argument	( unsigned char ) c		3823510	0					
ANR	3823617	CastExpression	( unsigned char ) c		3823510	0					
ANR	3823618	CastTarget	unsigned char		3823510	0					
ANR	3823619	Identifier	c		3823510	1					
ANR	3823620	IfStatement	if ( * pattern == '-' && ( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']' )		3823510	3					
ANR	3823621	Condition	* pattern == '-' && ( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']'	180:6:5472:5535	3823510	0	True				
ANR	3823622	AndExpression	* pattern == '-' && ( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']'		3823510	0		&&			
ANR	3823623	EqualityExpression	* pattern == '-'		3823510	0		==			
ANR	3823624	UnaryOperationExpression	* pattern		3823510	0					
ANR	3823625	UnaryOperator	*		3823510	0					
ANR	3823626	Identifier	pattern		3823510	1					
ANR	3823627	PrimaryExpression	'-'		3823510	1					
ANR	3823628	AndExpression	( c2 = * ( pattern + 1 ) ) != EOS && c2 != ']'		3823510	1		&&			
ANR	3823629	EqualityExpression	( c2 = * ( pattern + 1 ) ) != EOS		3823510	0		!=			
ANR	3823630	AssignmentExpression	c2 = * ( pattern + 1 )		3823510	0		=			
ANR	3823631	Identifier	c2		3823510	0					
ANR	3823632	UnaryOperationExpression	* ( pattern + 1 )		3823510	1					
ANR	3823633	UnaryOperator	*		3823510	0					
ANR	3823634	AdditiveExpression	pattern + 1		3823510	1		+			
ANR	3823635	Identifier	pattern		3823510	0					
ANR	3823636	PrimaryExpression	1		3823510	1					
ANR	3823637	Identifier	EOS		3823510	1					
ANR	3823638	EqualityExpression	c2 != ']'		3823510	1		!=			
ANR	3823639	Identifier	c2		3823510	0					
ANR	3823640	PrimaryExpression	']'		3823510	1					
ANR	3823641	CompoundStatement		28:50:731:731	3823510	1					
ANR	3823642	ExpressionStatement	pattern += 2	182:3:5543:5555	3823510	0	True				
ANR	3823643	AssignmentExpression	pattern += 2		3823510	0		+=			
ANR	3823644	Identifier	pattern		3823510	0					
ANR	3823645	PrimaryExpression	2		3823510	1					
ANR	3823646	IfStatement	if ( c2 == '\\\\' && ! ( flags & FNM_NOESCAPE ) )		3823510	1					
ANR	3823647	Condition	c2 == '\\\\' && ! ( flags & FNM_NOESCAPE )	183:7:5564:5600	3823510	0	True				
ANR	3823648	AndExpression	c2 == '\\\\' && ! ( flags & FNM_NOESCAPE )		3823510	0		&&			
ANR	3823649	EqualityExpression	c2 == '\\\\'		3823510	0		==			
ANR	3823650	Identifier	c2		3823510	0					
ANR	3823651	PrimaryExpression	'\\\\'		3823510	1					
ANR	3823652	UnaryOperationExpression	! ( flags & FNM_NOESCAPE )		3823510	1					
ANR	3823653	UnaryOperator	!		3823510	0					
ANR	3823654	BitAndExpression	flags & FNM_NOESCAPE		3823510	1		&			
ANR	3823655	Identifier	flags		3823510	0					
ANR	3823656	Identifier	FNM_NOESCAPE		3823510	1					
ANR	3823657	ExpressionStatement	c2 = * pattern ++	184:4:5607:5622	3823510	1	True				
ANR	3823658	AssignmentExpression	c2 = * pattern ++		3823510	0		=			
ANR	3823659	Identifier	c2		3823510	0					
ANR	3823660	UnaryOperationExpression	* pattern ++		3823510	1					
ANR	3823661	UnaryOperator	*		3823510	0					
ANR	3823662	PostIncDecOperationExpression	pattern ++		3823510	1					
ANR	3823663	Identifier	pattern		3823510	0					
ANR	3823664	IncDec	++		3823510	1					
ANR	3823665	IfStatement	if ( c2 == EOS )		3823510	2					
ANR	3823666	Condition	c2 == EOS	185:7:5631:5639	3823510	0	True				
ANR	3823667	EqualityExpression	c2 == EOS		3823510	0		==			
ANR	3823668	Identifier	c2		3823510	0					
ANR	3823669	Identifier	EOS		3823510	1					
ANR	3823670	ReturnStatement	return ( NULL ) ;	186:4:5646:5659	3823510	1	True				
ANR	3823671	Identifier	NULL		3823510	0					
ANR	3823672	IfStatement	if ( flags & FNM_CASEFOLD )		3823510	3					
ANR	3823673	Condition	flags & FNM_CASEFOLD	188:7:5669:5688	3823510	0	True				
ANR	3823674	BitAndExpression	flags & FNM_CASEFOLD		3823510	0		&			
ANR	3823675	Identifier	flags		3823510	0					
ANR	3823676	Identifier	FNM_CASEFOLD		3823510	1					
ANR	3823677	ExpressionStatement	c2 = tolower ( ( unsigned char ) c2 )	189:4:5695:5726	3823510	1	True				
ANR	3823678	AssignmentExpression	c2 = tolower ( ( unsigned char ) c2 )		3823510	0		=			
ANR	3823679	Identifier	c2		3823510	0					
ANR	3823680	CallExpression	tolower ( ( unsigned char ) c2 )		3823510	1					
ANR	3823681	Callee	tolower		3823510	0					
ANR	3823682	Identifier	tolower		3823510	0					
ANR	3823683	ArgumentList	( unsigned char ) c2		3823510	1					
ANR	3823684	Argument	( unsigned char ) c2		3823510	0					
ANR	3823685	CastExpression	( unsigned char ) c2		3823510	0					
ANR	3823686	CastTarget	unsigned char		3823510	0					
ANR	3823687	Identifier	c2		3823510	1					
ANR	3823688	IfStatement	if ( ( unsigned char ) c <= ( unsigned char ) test && ( unsigned char ) test <= ( unsigned char ) c2 )		3823510	4					
ANR	3823689	Condition	( unsigned char ) c <= ( unsigned char ) test && ( unsigned char ) test <= ( unsigned char ) c2	191:7:5736:5825	3823510	0	True				
ANR	3823690	AndExpression	( unsigned char ) c <= ( unsigned char ) test && ( unsigned char ) test <= ( unsigned char ) c2		3823510	0		&&			
ANR	3823691	RelationalExpression	( unsigned char ) c <= ( unsigned char ) test		3823510	0		<=			
ANR	3823692	CastExpression	( unsigned char ) c		3823510	0					
ANR	3823693	CastTarget	unsigned char		3823510	0					
ANR	3823694	Identifier	c		3823510	1					
ANR	3823695	CastExpression	( unsigned char ) test		3823510	1					
ANR	3823696	CastTarget	unsigned char		3823510	0					
ANR	3823697	Identifier	test		3823510	1					
ANR	3823698	RelationalExpression	( unsigned char ) test <= ( unsigned char ) c2		3823510	1		<=			
ANR	3823699	CastExpression	( unsigned char ) test		3823510	0					
ANR	3823700	CastTarget	unsigned char		3823510	0					
ANR	3823701	Identifier	test		3823510	1					
ANR	3823702	CastExpression	( unsigned char ) c2		3823510	1					
ANR	3823703	CastTarget	unsigned char		3823510	0					
ANR	3823704	Identifier	c2		3823510	1					
ANR	3823705	ExpressionStatement	ok = 1	193:4:5832:5838	3823510	1	True				
ANR	3823706	AssignmentExpression	ok = 1		3823510	0		=			
ANR	3823707	Identifier	ok		3823510	0					
ANR	3823708	PrimaryExpression	1		3823510	1					
ANR	3823709	ElseStatement	else		3823510	0					
ANR	3823710	IfStatement	if ( c == test )		3823510	0					
ANR	3823711	Condition	c == test	194:13:5853:5861	3823510	0	True				
ANR	3823712	EqualityExpression	c == test		3823510	0		==			
ANR	3823713	Identifier	c		3823510	0					
ANR	3823714	Identifier	test		3823510	1					
ANR	3823715	ExpressionStatement	ok = 1	195:3:5867:5873	3823510	1	True				
ANR	3823716	AssignmentExpression	ok = 1		3823510	0		=			
ANR	3823717	Identifier	ok		3823510	0					
ANR	3823718	PrimaryExpression	1		3823510	1					
ANR	3823719	ReturnStatement	return ( ok == negate ? NULL : pattern ) ;	197:1:5879:5917	3823510	5	True				
ANR	3823720	ConditionalExpression	ok == negate ? NULL : pattern		3823510	0					
ANR	3823721	Condition	ok == negate		3823510	0					
ANR	3823722	EqualityExpression	ok == negate		3823510	0		==			
ANR	3823723	Identifier	ok		3823510	0					
ANR	3823724	Identifier	negate		3823510	1					
ANR	3823725	Identifier	NULL		3823510	1					
ANR	3823726	Identifier	pattern		3823510	2					
ANR	3823727	ReturnType	static const char *		3823510	1					
ANR	3823728	Identifier	rangematch		3823510	2					
ANR	3823729	ParameterList	"const char * pattern , char test , int flags"		3823510	3					
ANR	3823730	Parameter	const char * pattern	153:11:4763:4781	3823510	0	True				
ANR	3823731	ParameterType	const char *		3823510	0					
ANR	3823732	Identifier	pattern		3823510	1					
ANR	3823733	Parameter	char test	153:32:4784:4792	3823510	1	True				
ANR	3823734	ParameterType	char		3823510	0					
ANR	3823735	Identifier	test		3823510	1					
ANR	3823736	Parameter	int flags	153:43:4795:4803	3823510	2	True				
ANR	3823737	ParameterType	int		3823510	0					
ANR	3823738	Identifier	flags		3823510	1					
ANR	3823739	CFGEntryNode	ENTRY		3823510		True				
ANR	3823740	CFGExitNode	EXIT		3823510		True				
ANR	3823741	Symbol	* pattern		3823510						
ANR	3823742	Symbol	c		3823510						
ANR	3823743	Symbol	NULL		3823510						
ANR	3823744	Symbol	test		3823510						
ANR	3823745	Symbol	tolower		3823510						
ANR	3823746	Symbol	* ( pattern + 1 )		3823510						
ANR	3823747	Symbol	pattern		3823510						
ANR	3823748	Symbol	flags		3823510						
ANR	3823749	Symbol	EOS		3823510						
ANR	3823750	Symbol	FNM_NOESCAPE		3823510						
ANR	3823751	Symbol	c2		3823510						
ANR	3823752	Symbol	negate		3823510						
ANR	3823753	Symbol	FNM_CASEFOLD		3823510						
ANR	3823754	Symbol	ok		3823510						
ANR	3823755	Symbol	* pattern ++		3823510						
