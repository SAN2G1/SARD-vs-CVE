command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3987605	File	data/converged/CVE-2015-8617_php-src/zend_execute_API.c								
ANR	3987606	DeclStmt									
ANR	3987607	Decl							ZEND_API void ( * ) ( zend_execute_data * execute_data )	ZEND_API void ( * ) ( zend_execute_data * execute_data )	zend_execute_ex
ANR	3987608	DeclStmt									
ANR	3987609	Decl							"ZEND_API void ( * ) ( zend_execute_data * execute_data , zval * return_value )"	"ZEND_API void ( * ) ( zend_execute_data * execute_data , zval * return_value )"	zend_execute_internal
ANR	3987610	DeclStmt									
ANR	3987611	Decl							const zend_fcall_info	const zend_fcall_info	empty_fcall_info
ANR	3987612	DeclStmt									
ANR	3987613	Decl							const zend_fcall_info_cache	const zend_fcall_info_cache	empty_fcall_info_cache
ANR	3987614	DeclStmt									
ANR	3987615	Decl							ZEND_TLS HANDLE	ZEND_TLS HANDLE	tq_timer
ANR	3987616	DeclStmt									
ANR	3987617	Decl							void ( * ) ( int )	void ( * ) ( int )	original_sigsegv_handler
ANR	3987618	Function	zend_handle_sigsegv	55:0:2216:2895							
ANR	3987619	FunctionDef	zend_handle_sigsegv (int dummy)		3987618	0					
ANR	3987620	CompoundStatement		56:0:2269:2895	3987618	0					
ANR	3987621	ExpressionStatement	fflush ( stdout )	57:1:2272:2286	3987618	0	True				
ANR	3987622	CallExpression	fflush ( stdout )		3987618	0					
ANR	3987623	Callee	fflush		3987618	0					
ANR	3987624	Identifier	fflush		3987618	0					
ANR	3987625	ArgumentList	stdout		3987618	1					
ANR	3987626	Argument	stdout		3987618	0					
ANR	3987627	Identifier	stdout		3987618	0					
ANR	3987628	ExpressionStatement	fflush ( stderr )	58:1:2289:2303	3987618	1	True				
ANR	3987629	CallExpression	fflush ( stderr )		3987618	0					
ANR	3987630	Callee	fflush		3987618	0					
ANR	3987631	Identifier	fflush		3987618	0					
ANR	3987632	ArgumentList	stderr		3987618	1					
ANR	3987633	Argument	stderr		3987618	0					
ANR	3987634	Identifier	stderr		3987618	0					
ANR	3987635	IfStatement	if ( original_sigsegv_handler == zend_handle_sigsegv )		3987618	2					
ANR	3987636	Condition	original_sigsegv_handler == zend_handle_sigsegv	59:5:2310:2356	3987618	0	True				
ANR	3987637	EqualityExpression	original_sigsegv_handler == zend_handle_sigsegv		3987618	0		==			
ANR	3987638	Identifier	original_sigsegv_handler		3987618	0					
ANR	3987639	Identifier	zend_handle_sigsegv		3987618	1					
ANR	3987640	CompoundStatement		4:54:89:89	3987618	1					
ANR	3987641	ExpressionStatement	"signal ( SIGSEGV , original_sigsegv_handler )"	60:2:2363:2404	3987618	0	True				
ANR	3987642	CallExpression	"signal ( SIGSEGV , original_sigsegv_handler )"		3987618	0					
ANR	3987643	Callee	signal		3987618	0					
ANR	3987644	Identifier	signal		3987618	0					
ANR	3987645	ArgumentList	SIGSEGV		3987618	1					
ANR	3987646	Argument	SIGSEGV		3987618	0					
ANR	3987647	Identifier	SIGSEGV		3987618	0					
ANR	3987648	Argument	original_sigsegv_handler		3987618	1					
ANR	3987649	Identifier	original_sigsegv_handler		3987618	0					
ANR	3987650	ElseStatement	else		3987618	0					
ANR	3987651	CompoundStatement		6:8:144:144	3987618	0					
ANR	3987652	ExpressionStatement	"signal ( SIGSEGV , SIG_DFL )"	62:2:2418:2442	3987618	0	True				
ANR	3987653	CallExpression	"signal ( SIGSEGV , SIG_DFL )"		3987618	0					
ANR	3987654	Callee	signal		3987618	0					
ANR	3987655	Identifier	signal		3987618	0					
ANR	3987656	ArgumentList	SIGSEGV		3987618	1					
ANR	3987657	Argument	SIGSEGV		3987618	0					
ANR	3987658	Identifier	SIGSEGV		3987618	0					
ANR	3987659	Argument	SIG_DFL		3987618	1					
ANR	3987660	Identifier	SIG_DFL		3987618	0					
ANR	3987661	CompoundStatement		9:1:178:178	3987618	3					
ANR	3987662	ExpressionStatement	"fprintf ( stderr , ""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"" , active_opline -> opcode , active_opline - EG ( active_op_array ) -> opcodes , get_active_function_name ( ) , zend_get_executed_filename ( ) , zend_get_executed_lineno ( ) )"	66:2:2453:2706	3987618	0	True				
ANR	3987663	CallExpression	"fprintf ( stderr , ""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"" , active_opline -> opcode , active_opline - EG ( active_op_array ) -> opcodes , get_active_function_name ( ) , zend_get_executed_filename ( ) , zend_get_executed_lineno ( ) )"		3987618	0					
ANR	3987664	Callee	fprintf		3987618	0					
ANR	3987665	Identifier	fprintf		3987618	0					
ANR	3987666	ArgumentList	stderr		3987618	1					
ANR	3987667	Argument	stderr		3987618	0					
ANR	3987668	Identifier	stderr		3987618	0					
ANR	3987669	Argument	"""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"""		3987618	1					
ANR	3987670	PrimaryExpression	"""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"""		3987618	0					
ANR	3987671	Argument	active_opline -> opcode		3987618	2					
ANR	3987672	PtrMemberAccess	active_opline -> opcode		3987618	0					
ANR	3987673	Identifier	active_opline		3987618	0					
ANR	3987674	Identifier	opcode		3987618	1					
ANR	3987675	Argument	active_opline - EG ( active_op_array ) -> opcodes		3987618	3					
ANR	3987676	AdditiveExpression	active_opline - EG ( active_op_array ) -> opcodes		3987618	0		-			
ANR	3987677	Identifier	active_opline		3987618	0					
ANR	3987678	PtrMemberAccess	EG ( active_op_array ) -> opcodes		3987618	1					
ANR	3987679	CallExpression	EG ( active_op_array )		3987618	0					
ANR	3987680	Callee	EG		3987618	0					
ANR	3987681	Identifier	EG		3987618	0					
ANR	3987682	ArgumentList	active_op_array		3987618	1					
ANR	3987683	Argument	active_op_array		3987618	0					
ANR	3987684	Identifier	active_op_array		3987618	0					
ANR	3987685	Identifier	opcodes		3987618	1					
ANR	3987686	Argument	get_active_function_name ( )		3987618	4					
ANR	3987687	CallExpression	get_active_function_name ( )		3987618	0					
ANR	3987688	Callee	get_active_function_name		3987618	0					
ANR	3987689	Identifier	get_active_function_name		3987618	0					
ANR	3987690	ArgumentList			3987618	1					
ANR	3987691	Argument	zend_get_executed_filename ( )		3987618	5					
ANR	3987692	CallExpression	zend_get_executed_filename ( )		3987618	0					
ANR	3987693	Callee	zend_get_executed_filename		3987618	0					
ANR	3987694	Identifier	zend_get_executed_filename		3987618	0					
ANR	3987695	ArgumentList			3987618	1					
ANR	3987696	Argument	zend_get_executed_lineno ( )		3987618	6					
ANR	3987697	CallExpression	zend_get_executed_lineno ( )		3987618	0					
ANR	3987698	Callee	zend_get_executed_lineno		3987618	0					
ANR	3987699	Identifier	zend_get_executed_lineno		3987618	0					
ANR	3987700	ArgumentList			3987618	1					
ANR	3987701	ExpressionStatement	fflush ( stderr )	74:2:2777:2791	3987618	1	True				
ANR	3987702	CallExpression	fflush ( stderr )		3987618	0					
ANR	3987703	Callee	fflush		3987618	0					
ANR	3987704	Identifier	fflush		3987618	0					
ANR	3987705	ArgumentList	stderr		3987618	1					
ANR	3987706	Argument	stderr		3987618	0					
ANR	3987707	Identifier	stderr		3987618	0					
ANR	3987708	IfStatement	if ( original_sigsegv_handler != zend_handle_sigsegv )		3987618	4					
ANR	3987709	Condition	original_sigsegv_handler != zend_handle_sigsegv	77:5:2808:2852	3987618	0	True				
ANR	3987710	EqualityExpression	original_sigsegv_handler != zend_handle_sigsegv		3987618	0		!=			
ANR	3987711	Identifier	original_sigsegv_handler		3987618	0					
ANR	3987712	Identifier	zend_handle_sigsegv		3987618	1					
ANR	3987713	CompoundStatement		22:52:585:585	3987618	1					
ANR	3987714	ExpressionStatement	original_sigsegv_handler ( dummy )	78:2:2859:2890	3987618	0	True				
ANR	3987715	CallExpression	original_sigsegv_handler ( dummy )		3987618	0					
ANR	3987716	Callee	original_sigsegv_handler		3987618	0					
ANR	3987717	Identifier	original_sigsegv_handler		3987618	0					
ANR	3987718	ArgumentList	dummy		3987618	1					
ANR	3987719	Argument	dummy		3987618	0					
ANR	3987720	Identifier	dummy		3987618	0					
ANR	3987721	ReturnType	static void		3987618	1					
ANR	3987722	Identifier	zend_handle_sigsegv		3987618	2					
ANR	3987723	ParameterList	int dummy		3987618	3					
ANR	3987724	Parameter	int dummy	55:32:2248:2256	3987618	0	True				
ANR	3987725	ParameterType	int		3987618	0					
ANR	3987726	Identifier	dummy		3987618	1					
ANR	3987727	CFGEntryNode	ENTRY		3987618		True				
ANR	3987728	CFGExitNode	EXIT		3987618		True				
ANR	3987729	Symbol	EG ( active_op_array ) -> opcodes		3987618						
ANR	3987730	Symbol	EG		3987618						
ANR	3987731	Symbol	stdout		3987618						
ANR	3987732	Symbol	original_sigsegv_handler		3987618						
ANR	3987733	Symbol	active_op_array		3987618						
ANR	3987734	Symbol	get_active_function_name		3987618						
ANR	3987735	Symbol	* EG		3987618						
ANR	3987736	Symbol	stderr		3987618						
ANR	3987737	Symbol	zend_handle_sigsegv		3987618						
ANR	3987738	Symbol	dummy		3987618						
ANR	3987739	Symbol	zend_get_executed_lineno		3987618						
ANR	3987740	Symbol	* active_opline		3987618						
ANR	3987741	Symbol	SIGSEGV		3987618						
ANR	3987742	Symbol	zend_get_executed_filename		3987618						
ANR	3987743	Symbol	SIG_DFL		3987618						
ANR	3987744	Symbol	active_opline -> opcode		3987618						
ANR	3987745	Symbol	active_opline		3987618						
ANR	3987746	Function	zend_extension_activator	84:0:2915:3047							
ANR	3987747	FunctionDef	zend_extension_activator (zend_extension * extension)		3987746	0					
ANR	3987748	CompoundStatement		85:0:2989:3047	3987746	0					
ANR	3987749	IfStatement	if ( extension -> activate )		3987746	0					
ANR	3987750	Condition	extension -> activate	86:5:2996:3014	3987746	0	True				
ANR	3987751	PtrMemberAccess	extension -> activate		3987746	0					
ANR	3987752	Identifier	extension		3987746	0					
ANR	3987753	Identifier	activate		3987746	1					
ANR	3987754	CompoundStatement		2:26:27:27	3987746	1					
ANR	3987755	ExpressionStatement	extension -> activate ( )	87:2:3021:3042	3987746	0	True				
ANR	3987756	CallExpression	extension -> activate ( )		3987746	0					
ANR	3987757	Callee	extension -> activate		3987746	0					
ANR	3987758	PtrMemberAccess	extension -> activate		3987746	0					
ANR	3987759	Identifier	extension		3987746	0					
ANR	3987760	Identifier	activate		3987746	1					
ANR	3987761	ArgumentList			3987746	1					
ANR	3987762	ReturnType	static void		3987746	1					
ANR	3987763	Identifier	zend_extension_activator		3987746	2					
ANR	3987764	ParameterList	zend_extension * extension		3987746	3					
ANR	3987765	Parameter	zend_extension * extension	84:37:2952:2976	3987746	0	True				
ANR	3987766	ParameterType	zend_extension *		3987746	0					
ANR	3987767	Identifier	extension		3987746	1					
ANR	3987768	CFGEntryNode	ENTRY		3987746		True				
ANR	3987769	CFGExitNode	EXIT		3987746		True				
ANR	3987770	Symbol	extension		3987746						
ANR	3987771	Symbol	* extension		3987746						
ANR	3987772	Symbol	extension -> activate		3987746						
ANR	3987773	Function	zend_extension_deactivator	92:0:3060:3198							
ANR	3987774	FunctionDef	zend_extension_deactivator (zend_extension * extension)		3987773	0					
ANR	3987775	CompoundStatement		93:0:3136:3198	3987773	0					
ANR	3987776	IfStatement	if ( extension -> deactivate )		3987773	0					
ANR	3987777	Condition	extension -> deactivate	94:5:3143:3163	3987773	0	True				
ANR	3987778	PtrMemberAccess	extension -> deactivate		3987773	0					
ANR	3987779	Identifier	extension		3987773	0					
ANR	3987780	Identifier	deactivate		3987773	1					
ANR	3987781	CompoundStatement		2:28:29:29	3987773	1					
ANR	3987782	ExpressionStatement	extension -> deactivate ( )	95:2:3170:3193	3987773	0	True				
ANR	3987783	CallExpression	extension -> deactivate ( )		3987773	0					
ANR	3987784	Callee	extension -> deactivate		3987773	0					
ANR	3987785	PtrMemberAccess	extension -> deactivate		3987773	0					
ANR	3987786	Identifier	extension		3987773	0					
ANR	3987787	Identifier	deactivate		3987773	1					
ANR	3987788	ArgumentList			3987773	1					
ANR	3987789	ReturnType	static void		3987773	1					
ANR	3987790	Identifier	zend_extension_deactivator		3987773	2					
ANR	3987791	ParameterList	zend_extension * extension		3987773	3					
ANR	3987792	Parameter	zend_extension * extension	92:39:3099:3123	3987773	0	True				
ANR	3987793	ParameterType	zend_extension *		3987773	0					
ANR	3987794	Identifier	extension		3987773	1					
ANR	3987795	CFGEntryNode	ENTRY		3987773		True				
ANR	3987796	CFGExitNode	EXIT		3987773		True				
ANR	3987797	Symbol	extension		3987773						
ANR	3987798	Symbol	extension -> deactivate		3987773						
ANR	3987799	Symbol	* extension		3987773						
ANR	3987800	Function	clean_non_persistent_function	100:0:3211:3414							
ANR	3987801	FunctionDef	clean_non_persistent_function (zval * zv)		3987800	0					
ANR	3987802	CompoundStatement		101:0:3272:3414	3987800	0					
ANR	3987803	IdentifierDeclStatement	zend_function * function = Z_PTR_P ( zv ) ;	102:1:3275:3312	3987800	0	True				
ANR	3987804	IdentifierDecl	* function = Z_PTR_P ( zv )		3987800	0					
ANR	3987805	IdentifierDeclType	zend_function *		3987800	0					
ANR	3987806	Identifier	function		3987800	1					
ANR	3987807	AssignmentExpression	* function = Z_PTR_P ( zv )		3987800	2		=			
ANR	3987808	Identifier	function		3987800	0					
ANR	3987809	CallExpression	Z_PTR_P ( zv )		3987800	1					
ANR	3987810	Callee	Z_PTR_P		3987800	0					
ANR	3987811	Identifier	Z_PTR_P		3987800	0					
ANR	3987812	ArgumentList	zv		3987800	1					
ANR	3987813	Argument	zv		3987800	0					
ANR	3987814	Identifier	zv		3987800	0					
ANR	3987815	ReturnStatement	return ( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE ;	103:1:3315:3412	3987800	1	True				
ANR	3987816	ConditionalExpression	( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE		3987800	0					
ANR	3987817	Condition	function -> type == ZEND_INTERNAL_FUNCTION		3987800	0					
ANR	3987818	EqualityExpression	function -> type == ZEND_INTERNAL_FUNCTION		3987800	0		==			
ANR	3987819	PtrMemberAccess	function -> type		3987800	0					
ANR	3987820	Identifier	function		3987800	0					
ANR	3987821	Identifier	type		3987800	1					
ANR	3987822	Identifier	ZEND_INTERNAL_FUNCTION		3987800	1					
ANR	3987823	Identifier	ZEND_HASH_APPLY_STOP		3987800	1					
ANR	3987824	Identifier	ZEND_HASH_APPLY_REMOVE		3987800	2					
ANR	3987825	ReturnType	static int		3987800	1					
ANR	3987826	Identifier	clean_non_persistent_function		3987800	2					
ANR	3987827	ParameterList	zval * zv		3987800	3					
ANR	3987828	Parameter	zval * zv	100:41:3252:3259	3987800	0	True				
ANR	3987829	ParameterType	zval *		3987800	0					
ANR	3987830	Identifier	zv		3987800	1					
ANR	3987831	CFGEntryNode	ENTRY		3987800		True				
ANR	3987832	CFGExitNode	EXIT		3987800		True				
ANR	3987833	Symbol	ZEND_INTERNAL_FUNCTION		3987800						
ANR	3987834	Symbol	Z_PTR_P		3987800						
ANR	3987835	Symbol	function		3987800						
ANR	3987836	Symbol	* function		3987800						
ANR	3987837	Symbol	ZEND_HASH_APPLY_REMOVE		3987800						
ANR	3987838	Symbol	ZEND_HASH_APPLY_STOP		3987800						
ANR	3987839	Symbol	zv		3987800						
ANR	3987840	Symbol	function -> type		3987800						
ANR	3987841	Function	clean_non_persistent_function_full	107:0:3427:3637							
ANR	3987842	FunctionDef	clean_non_persistent_function_full (zval * zv)		3987841	0					
ANR	3987843	CompoundStatement		108:0:3495:3637	3987841	0					
ANR	3987844	IdentifierDeclStatement	zend_function * function = Z_PTR_P ( zv ) ;	109:1:3498:3535	3987841	0	True				
ANR	3987845	IdentifierDecl	* function = Z_PTR_P ( zv )		3987841	0					
ANR	3987846	IdentifierDeclType	zend_function *		3987841	0					
ANR	3987847	Identifier	function		3987841	1					
ANR	3987848	AssignmentExpression	* function = Z_PTR_P ( zv )		3987841	2		=			
ANR	3987849	Identifier	function		3987841	0					
ANR	3987850	CallExpression	Z_PTR_P ( zv )		3987841	1					
ANR	3987851	Callee	Z_PTR_P		3987841	0					
ANR	3987852	Identifier	Z_PTR_P		3987841	0					
ANR	3987853	ArgumentList	zv		3987841	1					
ANR	3987854	Argument	zv		3987841	0					
ANR	3987855	Identifier	zv		3987841	0					
ANR	3987856	ReturnStatement	return ( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE ;	110:1:3538:3635	3987841	1	True				
ANR	3987857	ConditionalExpression	( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE		3987841	0					
ANR	3987858	Condition	function -> type == ZEND_INTERNAL_FUNCTION		3987841	0					
ANR	3987859	EqualityExpression	function -> type == ZEND_INTERNAL_FUNCTION		3987841	0		==			
ANR	3987860	PtrMemberAccess	function -> type		3987841	0					
ANR	3987861	Identifier	function		3987841	0					
ANR	3987862	Identifier	type		3987841	1					
ANR	3987863	Identifier	ZEND_INTERNAL_FUNCTION		3987841	1					
ANR	3987864	Identifier	ZEND_HASH_APPLY_KEEP		3987841	1					
ANR	3987865	Identifier	ZEND_HASH_APPLY_REMOVE		3987841	2					
ANR	3987866	ReturnType	ZEND_API int		3987841	1					
ANR	3987867	Identifier	clean_non_persistent_function_full		3987841	2					
ANR	3987868	ParameterList	zval * zv		3987841	3					
ANR	3987869	Parameter	zval * zv	107:48:3475:3482	3987841	0	True				
ANR	3987870	ParameterType	zval *		3987841	0					
ANR	3987871	Identifier	zv		3987841	1					
ANR	3987872	CFGEntryNode	ENTRY		3987841		True				
ANR	3987873	CFGExitNode	EXIT		3987841		True				
ANR	3987874	Symbol	ZEND_INTERNAL_FUNCTION		3987841						
ANR	3987875	Symbol	Z_PTR_P		3987841						
ANR	3987876	Symbol	ZEND_HASH_APPLY_KEEP		3987841						
ANR	3987877	Symbol	function		3987841						
ANR	3987878	Symbol	* function		3987841						
ANR	3987879	Symbol	ZEND_HASH_APPLY_REMOVE		3987841						
ANR	3987880	Symbol	zv		3987841						
ANR	3987881	Symbol	function -> type		3987841						
ANR	3987882	Function	clean_non_persistent_class	114:0:3650:3838							
ANR	3987883	FunctionDef	clean_non_persistent_class (zval * zv)		3987882	0					
ANR	3987884	CompoundStatement		115:0:3708:3838	3987882	0					
ANR	3987885	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR_P ( zv ) ;	116:1:3711:3745	3987882	0	True				
ANR	3987886	IdentifierDecl	* ce = Z_PTR_P ( zv )		3987882	0					
ANR	3987887	IdentifierDeclType	zend_class_entry *		3987882	0					
ANR	3987888	Identifier	ce		3987882	1					
ANR	3987889	AssignmentExpression	* ce = Z_PTR_P ( zv )		3987882	2		=			
ANR	3987890	Identifier	ce		3987882	0					
ANR	3987891	CallExpression	Z_PTR_P ( zv )		3987882	1					
ANR	3987892	Callee	Z_PTR_P		3987882	0					
ANR	3987893	Identifier	Z_PTR_P		3987882	0					
ANR	3987894	ArgumentList	zv		3987882	1					
ANR	3987895	Argument	zv		3987882	0					
ANR	3987896	Identifier	zv		3987882	0					
ANR	3987897	ReturnStatement	return ( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE ;	117:1:3748:3836	3987882	1	True				
ANR	3987898	ConditionalExpression	( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE		3987882	0					
ANR	3987899	Condition	ce -> type == ZEND_INTERNAL_CLASS		3987882	0					
ANR	3987900	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3987882	0		==			
ANR	3987901	PtrMemberAccess	ce -> type		3987882	0					
ANR	3987902	Identifier	ce		3987882	0					
ANR	3987903	Identifier	type		3987882	1					
ANR	3987904	Identifier	ZEND_INTERNAL_CLASS		3987882	1					
ANR	3987905	Identifier	ZEND_HASH_APPLY_STOP		3987882	1					
ANR	3987906	Identifier	ZEND_HASH_APPLY_REMOVE		3987882	2					
ANR	3987907	ReturnType	static int		3987882	1					
ANR	3987908	Identifier	clean_non_persistent_class		3987882	2					
ANR	3987909	ParameterList	zval * zv		3987882	3					
ANR	3987910	Parameter	zval * zv	114:38:3688:3695	3987882	0	True				
ANR	3987911	ParameterType	zval *		3987882	0					
ANR	3987912	Identifier	zv		3987882	1					
ANR	3987913	CFGEntryNode	ENTRY		3987882		True				
ANR	3987914	CFGExitNode	EXIT		3987882		True				
ANR	3987915	Symbol	ZEND_INTERNAL_CLASS		3987882						
ANR	3987916	Symbol	Z_PTR_P		3987882						
ANR	3987917	Symbol	ce -> type		3987882						
ANR	3987918	Symbol	ce		3987882						
ANR	3987919	Symbol	ZEND_HASH_APPLY_REMOVE		3987882						
ANR	3987920	Symbol	ZEND_HASH_APPLY_STOP		3987882						
ANR	3987921	Symbol	* ce		3987882						
ANR	3987922	Symbol	zv		3987882						
ANR	3987923	Function	clean_non_persistent_class_full	121:0:3851:4046							
ANR	3987924	FunctionDef	clean_non_persistent_class_full (zval * zv)		3987923	0					
ANR	3987925	CompoundStatement		122:0:3916:4046	3987923	0					
ANR	3987926	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR_P ( zv ) ;	123:1:3919:3953	3987923	0	True				
ANR	3987927	IdentifierDecl	* ce = Z_PTR_P ( zv )		3987923	0					
ANR	3987928	IdentifierDeclType	zend_class_entry *		3987923	0					
ANR	3987929	Identifier	ce		3987923	1					
ANR	3987930	AssignmentExpression	* ce = Z_PTR_P ( zv )		3987923	2		=			
ANR	3987931	Identifier	ce		3987923	0					
ANR	3987932	CallExpression	Z_PTR_P ( zv )		3987923	1					
ANR	3987933	Callee	Z_PTR_P		3987923	0					
ANR	3987934	Identifier	Z_PTR_P		3987923	0					
ANR	3987935	ArgumentList	zv		3987923	1					
ANR	3987936	Argument	zv		3987923	0					
ANR	3987937	Identifier	zv		3987923	0					
ANR	3987938	ReturnStatement	return ( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE ;	124:1:3956:4044	3987923	1	True				
ANR	3987939	ConditionalExpression	( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE		3987923	0					
ANR	3987940	Condition	ce -> type == ZEND_INTERNAL_CLASS		3987923	0					
ANR	3987941	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3987923	0		==			
ANR	3987942	PtrMemberAccess	ce -> type		3987923	0					
ANR	3987943	Identifier	ce		3987923	0					
ANR	3987944	Identifier	type		3987923	1					
ANR	3987945	Identifier	ZEND_INTERNAL_CLASS		3987923	1					
ANR	3987946	Identifier	ZEND_HASH_APPLY_KEEP		3987923	1					
ANR	3987947	Identifier	ZEND_HASH_APPLY_REMOVE		3987923	2					
ANR	3987948	ReturnType	ZEND_API int		3987923	1					
ANR	3987949	Identifier	clean_non_persistent_class_full		3987923	2					
ANR	3987950	ParameterList	zval * zv		3987923	3					
ANR	3987951	Parameter	zval * zv	121:45:3896:3903	3987923	0	True				
ANR	3987952	ParameterType	zval *		3987923	0					
ANR	3987953	Identifier	zv		3987923	1					
ANR	3987954	CFGEntryNode	ENTRY		3987923		True				
ANR	3987955	CFGExitNode	EXIT		3987923		True				
ANR	3987956	Symbol	ZEND_INTERNAL_CLASS		3987923						
ANR	3987957	Symbol	Z_PTR_P		3987923						
ANR	3987958	Symbol	ZEND_HASH_APPLY_KEEP		3987923						
ANR	3987959	Symbol	ce -> type		3987923						
ANR	3987960	Symbol	ce		3987923						
ANR	3987961	Symbol	ZEND_HASH_APPLY_REMOVE		3987923						
ANR	3987962	Symbol	* ce		3987923						
ANR	3987963	Symbol	zv		3987923						
ANR	3987964	Function	init_executor	128:0:4059:5642							
ANR	3987965	FunctionDef	init_executor ()		3987964	0					
ANR	3987966	CompoundStatement		129:0:4094:5642	3987964	0					
ANR	3987967	ExpressionStatement	zend_init_fpu ( )	130:1:4097:4112	3987964	0	True				
ANR	3987968	CallExpression	zend_init_fpu ( )		3987964	0					
ANR	3987969	Callee	zend_init_fpu		3987964	0					
ANR	3987970	Identifier	zend_init_fpu		3987964	0					
ANR	3987971	ArgumentList			3987964	1					
ANR	3987972	ExpressionStatement	ZVAL_NULL ( & EG ( uninitialized_zval ) )	132:1:4116:4150	3987964	1	True				
ANR	3987973	CallExpression	ZVAL_NULL ( & EG ( uninitialized_zval ) )		3987964	0					
ANR	3987974	Callee	ZVAL_NULL		3987964	0					
ANR	3987975	Identifier	ZVAL_NULL		3987964	0					
ANR	3987976	ArgumentList	& EG ( uninitialized_zval )		3987964	1					
ANR	3987977	Argument	& EG ( uninitialized_zval )		3987964	0					
ANR	3987978	UnaryOperationExpression	& EG ( uninitialized_zval )		3987964	0					
ANR	3987979	UnaryOperator	&		3987964	0					
ANR	3987980	CallExpression	EG ( uninitialized_zval )		3987964	1					
ANR	3987981	Callee	EG		3987964	0					
ANR	3987982	Identifier	EG		3987964	0					
ANR	3987983	ArgumentList	uninitialized_zval		3987964	1					
ANR	3987984	Argument	uninitialized_zval		3987964	0					
ANR	3987985	Identifier	uninitialized_zval		3987964	0					
ANR	3987986	ExpressionStatement	ZVAL_NULL ( & EG ( error_zval ) )	133:1:4153:4179	3987964	2	True				
ANR	3987987	CallExpression	ZVAL_NULL ( & EG ( error_zval ) )		3987964	0					
ANR	3987988	Callee	ZVAL_NULL		3987964	0					
ANR	3987989	Identifier	ZVAL_NULL		3987964	0					
ANR	3987990	ArgumentList	& EG ( error_zval )		3987964	1					
ANR	3987991	Argument	& EG ( error_zval )		3987964	0					
ANR	3987992	UnaryOperationExpression	& EG ( error_zval )		3987964	0					
ANR	3987993	UnaryOperator	&		3987964	0					
ANR	3987994	CallExpression	EG ( error_zval )		3987964	1					
ANR	3987995	Callee	EG		3987964	0					
ANR	3987996	Identifier	EG		3987964	0					
ANR	3987997	ArgumentList	error_zval		3987964	1					
ANR	3987998	Argument	error_zval		3987964	0					
ANR	3987999	Identifier	error_zval		3987964	0					
ANR	3988000	ExpressionStatement	"original_sigsegv_handler = signal ( SIGSEGV , zend_handle_sigsegv )"	136:1:4265:4328	3987964	3	True				
ANR	3988001	AssignmentExpression	"original_sigsegv_handler = signal ( SIGSEGV , zend_handle_sigsegv )"		3987964	0		=			
ANR	3988002	Identifier	original_sigsegv_handler		3987964	0					
ANR	3988003	CallExpression	"signal ( SIGSEGV , zend_handle_sigsegv )"		3987964	1					
ANR	3988004	Callee	signal		3987964	0					
ANR	3988005	Identifier	signal		3987964	0					
ANR	3988006	ArgumentList	SIGSEGV		3987964	1					
ANR	3988007	Argument	SIGSEGV		3987964	0					
ANR	3988008	Identifier	SIGSEGV		3987964	0					
ANR	3988009	Argument	zend_handle_sigsegv		3987964	1					
ANR	3988010	Identifier	zend_handle_sigsegv		3987964	0					
ANR	3988011	ExpressionStatement	EG ( symtable_cache_ptr ) = EG ( symtable_cache ) - 1	139:1:4339:4386	3987964	4	True				
ANR	3988012	AssignmentExpression	EG ( symtable_cache_ptr ) = EG ( symtable_cache ) - 1		3987964	0		=			
ANR	3988013	CallExpression	EG ( symtable_cache_ptr )		3987964	0					
ANR	3988014	Callee	EG		3987964	0					
ANR	3988015	Identifier	EG		3987964	0					
ANR	3988016	ArgumentList	symtable_cache_ptr		3987964	1					
ANR	3988017	Argument	symtable_cache_ptr		3987964	0					
ANR	3988018	Identifier	symtable_cache_ptr		3987964	0					
ANR	3988019	AdditiveExpression	EG ( symtable_cache ) - 1		3987964	1		-			
ANR	3988020	CallExpression	EG ( symtable_cache )		3987964	0					
ANR	3988021	Callee	EG		3987964	0					
ANR	3988022	Identifier	EG		3987964	0					
ANR	3988023	ArgumentList	symtable_cache		3987964	1					
ANR	3988024	Argument	symtable_cache		3987964	0					
ANR	3988025	Identifier	symtable_cache		3987964	0					
ANR	3988026	PrimaryExpression	1		3987964	1					
ANR	3988027	ExpressionStatement	EG ( symtable_cache_limit ) = EG ( symtable_cache ) + SYMTABLE_CACHE_SIZE - 1	140:1:4389:4460	3987964	5	True				
ANR	3988028	AssignmentExpression	EG ( symtable_cache_limit ) = EG ( symtable_cache ) + SYMTABLE_CACHE_SIZE - 1		3987964	0		=			
ANR	3988029	CallExpression	EG ( symtable_cache_limit )		3987964	0					
ANR	3988030	Callee	EG		3987964	0					
ANR	3988031	Identifier	EG		3987964	0					
ANR	3988032	ArgumentList	symtable_cache_limit		3987964	1					
ANR	3988033	Argument	symtable_cache_limit		3987964	0					
ANR	3988034	Identifier	symtable_cache_limit		3987964	0					
ANR	3988035	AdditiveExpression	EG ( symtable_cache ) + SYMTABLE_CACHE_SIZE - 1		3987964	1		+			
ANR	3988036	CallExpression	EG ( symtable_cache )		3987964	0					
ANR	3988037	Callee	EG		3987964	0					
ANR	3988038	Identifier	EG		3987964	0					
ANR	3988039	ArgumentList	symtable_cache		3987964	1					
ANR	3988040	Argument	symtable_cache		3987964	0					
ANR	3988041	Identifier	symtable_cache		3987964	0					
ANR	3988042	AdditiveExpression	SYMTABLE_CACHE_SIZE - 1		3987964	1		-			
ANR	3988043	Identifier	SYMTABLE_CACHE_SIZE		3987964	0					
ANR	3988044	PrimaryExpression	1		3987964	1					
ANR	3988045	ExpressionStatement	EG ( no_extensions ) = 0	141:1:4463:4484	3987964	6	True				
ANR	3988046	AssignmentExpression	EG ( no_extensions ) = 0		3987964	0		=			
ANR	3988047	CallExpression	EG ( no_extensions )		3987964	0					
ANR	3988048	Callee	EG		3987964	0					
ANR	3988049	Identifier	EG		3987964	0					
ANR	3988050	ArgumentList	no_extensions		3987964	1					
ANR	3988051	Argument	no_extensions		3987964	0					
ANR	3988052	Identifier	no_extensions		3987964	0					
ANR	3988053	PrimaryExpression	0		3987964	1					
ANR	3988054	ExpressionStatement	EG ( function_table ) = CG ( function_table )	143:1:4488:4527	3987964	7	True				
ANR	3988055	AssignmentExpression	EG ( function_table ) = CG ( function_table )		3987964	0		=			
ANR	3988056	CallExpression	EG ( function_table )		3987964	0					
ANR	3988057	Callee	EG		3987964	0					
ANR	3988058	Identifier	EG		3987964	0					
ANR	3988059	ArgumentList	function_table		3987964	1					
ANR	3988060	Argument	function_table		3987964	0					
ANR	3988061	Identifier	function_table		3987964	0					
ANR	3988062	CallExpression	CG ( function_table )		3987964	1					
ANR	3988063	Callee	CG		3987964	0					
ANR	3988064	Identifier	CG		3987964	0					
ANR	3988065	ArgumentList	function_table		3987964	1					
ANR	3988066	Argument	function_table		3987964	0					
ANR	3988067	Identifier	function_table		3987964	0					
ANR	3988068	ExpressionStatement	EG ( class_table ) = CG ( class_table )	144:1:4530:4563	3987964	8	True				
ANR	3988069	AssignmentExpression	EG ( class_table ) = CG ( class_table )		3987964	0		=			
ANR	3988070	CallExpression	EG ( class_table )		3987964	0					
ANR	3988071	Callee	EG		3987964	0					
ANR	3988072	Identifier	EG		3987964	0					
ANR	3988073	ArgumentList	class_table		3987964	1					
ANR	3988074	Argument	class_table		3987964	0					
ANR	3988075	Identifier	class_table		3987964	0					
ANR	3988076	CallExpression	CG ( class_table )		3987964	1					
ANR	3988077	Callee	CG		3987964	0					
ANR	3988078	Identifier	CG		3987964	0					
ANR	3988079	ArgumentList	class_table		3987964	1					
ANR	3988080	Argument	class_table		3987964	0					
ANR	3988081	Identifier	class_table		3987964	0					
ANR	3988082	ExpressionStatement	EG ( in_autoload ) = NULL	146:1:4567:4589	3987964	9	True				
ANR	3988083	AssignmentExpression	EG ( in_autoload ) = NULL		3987964	0		=			
ANR	3988084	CallExpression	EG ( in_autoload )		3987964	0					
ANR	3988085	Callee	EG		3987964	0					
ANR	3988086	Identifier	EG		3987964	0					
ANR	3988087	ArgumentList	in_autoload		3987964	1					
ANR	3988088	Argument	in_autoload		3987964	0					
ANR	3988089	Identifier	in_autoload		3987964	0					
ANR	3988090	Identifier	NULL		3987964	1					
ANR	3988091	ExpressionStatement	EG ( autoload_func ) = NULL	147:1:4592:4616	3987964	10	True				
ANR	3988092	AssignmentExpression	EG ( autoload_func ) = NULL		3987964	0		=			
ANR	3988093	CallExpression	EG ( autoload_func )		3987964	0					
ANR	3988094	Callee	EG		3987964	0					
ANR	3988095	Identifier	EG		3987964	0					
ANR	3988096	ArgumentList	autoload_func		3987964	1					
ANR	3988097	Argument	autoload_func		3987964	0					
ANR	3988098	Identifier	autoload_func		3987964	0					
ANR	3988099	Identifier	NULL		3987964	1					
ANR	3988100	ExpressionStatement	EG ( error_handling ) = EH_NORMAL	148:1:4619:4649	3987964	11	True				
ANR	3988101	AssignmentExpression	EG ( error_handling ) = EH_NORMAL		3987964	0		=			
ANR	3988102	CallExpression	EG ( error_handling )		3987964	0					
ANR	3988103	Callee	EG		3987964	0					
ANR	3988104	Identifier	EG		3987964	0					
ANR	3988105	ArgumentList	error_handling		3987964	1					
ANR	3988106	Argument	error_handling		3987964	0					
ANR	3988107	Identifier	error_handling		3987964	0					
ANR	3988108	Identifier	EH_NORMAL		3987964	1					
ANR	3988109	ExpressionStatement	zend_vm_stack_init ( )	150:1:4653:4673	3987964	12	True				
ANR	3988110	CallExpression	zend_vm_stack_init ( )		3987964	0					
ANR	3988111	Callee	zend_vm_stack_init		3987964	0					
ANR	3988112	Identifier	zend_vm_stack_init		3987964	0					
ANR	3988113	ArgumentList			3987964	1					
ANR	3988114	ExpressionStatement	"zend_hash_init ( & EG ( symbol_table ) , 64 , NULL , ZVAL_PTR_DTOR , 0 )"	152:1:4677:4738	3987964	13	True				
ANR	3988115	CallExpression	"zend_hash_init ( & EG ( symbol_table ) , 64 , NULL , ZVAL_PTR_DTOR , 0 )"		3987964	0					
ANR	3988116	Callee	zend_hash_init		3987964	0					
ANR	3988117	Identifier	zend_hash_init		3987964	0					
ANR	3988118	ArgumentList	& EG ( symbol_table )		3987964	1					
ANR	3988119	Argument	& EG ( symbol_table )		3987964	0					
ANR	3988120	UnaryOperationExpression	& EG ( symbol_table )		3987964	0					
ANR	3988121	UnaryOperator	&		3987964	0					
ANR	3988122	CallExpression	EG ( symbol_table )		3987964	1					
ANR	3988123	Callee	EG		3987964	0					
ANR	3988124	Identifier	EG		3987964	0					
ANR	3988125	ArgumentList	symbol_table		3987964	1					
ANR	3988126	Argument	symbol_table		3987964	0					
ANR	3988127	Identifier	symbol_table		3987964	0					
ANR	3988128	Argument	64		3987964	1					
ANR	3988129	PrimaryExpression	64		3987964	0					
ANR	3988130	Argument	NULL		3987964	2					
ANR	3988131	Identifier	NULL		3987964	0					
ANR	3988132	Argument	ZVAL_PTR_DTOR		3987964	3					
ANR	3988133	Identifier	ZVAL_PTR_DTOR		3987964	0					
ANR	3988134	Argument	0		3987964	4					
ANR	3988135	PrimaryExpression	0		3987964	0					
ANR	3988136	ExpressionStatement	EG ( valid_symbol_table ) = 1	153:1:4741:4767	3987964	14	True				
ANR	3988137	AssignmentExpression	EG ( valid_symbol_table ) = 1		3987964	0		=			
ANR	3988138	CallExpression	EG ( valid_symbol_table )		3987964	0					
ANR	3988139	Callee	EG		3987964	0					
ANR	3988140	Identifier	EG		3987964	0					
ANR	3988141	ArgumentList	valid_symbol_table		3987964	1					
ANR	3988142	Argument	valid_symbol_table		3987964	0					
ANR	3988143	Identifier	valid_symbol_table		3987964	0					
ANR	3988144	PrimaryExpression	1		3987964	1					
ANR	3988145	ExpressionStatement	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_activator )"	155:1:4771:4852	3987964	15	True				
ANR	3988146	CallExpression	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_activator )"		3987964	0					
ANR	3988147	Callee	zend_llist_apply		3987964	0					
ANR	3988148	Identifier	zend_llist_apply		3987964	0					
ANR	3988149	ArgumentList	& zend_extensions		3987964	1					
ANR	3988150	Argument	& zend_extensions		3987964	0					
ANR	3988151	UnaryOperationExpression	& zend_extensions		3987964	0					
ANR	3988152	UnaryOperator	&		3987964	0					
ANR	3988153	Identifier	zend_extensions		3987964	1					
ANR	3988154	Argument	( llist_apply_func_t ) zend_extension_activator		3987964	1					
ANR	3988155	CastExpression	( llist_apply_func_t ) zend_extension_activator		3987964	0					
ANR	3988156	CastTarget	llist_apply_func_t		3987964	0					
ANR	3988157	Identifier	zend_extension_activator		3987964	1					
ANR	3988158	ExpressionStatement	"zend_hash_init ( & EG ( included_files ) , 8 , NULL , NULL , 0 )"	157:1:4856:4909	3987964	16	True				
ANR	3988159	CallExpression	"zend_hash_init ( & EG ( included_files ) , 8 , NULL , NULL , 0 )"		3987964	0					
ANR	3988160	Callee	zend_hash_init		3987964	0					
ANR	3988161	Identifier	zend_hash_init		3987964	0					
ANR	3988162	ArgumentList	& EG ( included_files )		3987964	1					
ANR	3988163	Argument	& EG ( included_files )		3987964	0					
ANR	3988164	UnaryOperationExpression	& EG ( included_files )		3987964	0					
ANR	3988165	UnaryOperator	&		3987964	0					
ANR	3988166	CallExpression	EG ( included_files )		3987964	1					
ANR	3988167	Callee	EG		3987964	0					
ANR	3988168	Identifier	EG		3987964	0					
ANR	3988169	ArgumentList	included_files		3987964	1					
ANR	3988170	Argument	included_files		3987964	0					
ANR	3988171	Identifier	included_files		3987964	0					
ANR	3988172	Argument	8		3987964	1					
ANR	3988173	PrimaryExpression	8		3987964	0					
ANR	3988174	Argument	NULL		3987964	2					
ANR	3988175	Identifier	NULL		3987964	0					
ANR	3988176	Argument	NULL		3987964	3					
ANR	3988177	Identifier	NULL		3987964	0					
ANR	3988178	Argument	0		3987964	4					
ANR	3988179	PrimaryExpression	0		3987964	0					
ANR	3988180	ExpressionStatement	EG ( ticks_count ) = 0	159:1:4913:4932	3987964	17	True				
ANR	3988181	AssignmentExpression	EG ( ticks_count ) = 0		3987964	0		=			
ANR	3988182	CallExpression	EG ( ticks_count )		3987964	0					
ANR	3988183	Callee	EG		3987964	0					
ANR	3988184	Identifier	EG		3987964	0					
ANR	3988185	ArgumentList	ticks_count		3987964	1					
ANR	3988186	Argument	ticks_count		3987964	0					
ANR	3988187	Identifier	ticks_count		3987964	0					
ANR	3988188	PrimaryExpression	0		3987964	1					
ANR	3988189	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_error_handler ) )	161:1:4936:4971	3987964	18	True				
ANR	3988190	CallExpression	ZVAL_UNDEF ( & EG ( user_error_handler ) )		3987964	0					
ANR	3988191	Callee	ZVAL_UNDEF		3987964	0					
ANR	3988192	Identifier	ZVAL_UNDEF		3987964	0					
ANR	3988193	ArgumentList	& EG ( user_error_handler )		3987964	1					
ANR	3988194	Argument	& EG ( user_error_handler )		3987964	0					
ANR	3988195	UnaryOperationExpression	& EG ( user_error_handler )		3987964	0					
ANR	3988196	UnaryOperator	&		3987964	0					
ANR	3988197	CallExpression	EG ( user_error_handler )		3987964	1					
ANR	3988198	Callee	EG		3987964	0					
ANR	3988199	Identifier	EG		3987964	0					
ANR	3988200	ArgumentList	user_error_handler		3987964	1					
ANR	3988201	Argument	user_error_handler		3987964	0					
ANR	3988202	Identifier	user_error_handler		3987964	0					
ANR	3988203	ExpressionStatement	EG ( current_execute_data ) = NULL	163:1:4975:5006	3987964	19	True				
ANR	3988204	AssignmentExpression	EG ( current_execute_data ) = NULL		3987964	0		=			
ANR	3988205	CallExpression	EG ( current_execute_data )		3987964	0					
ANR	3988206	Callee	EG		3987964	0					
ANR	3988207	Identifier	EG		3987964	0					
ANR	3988208	ArgumentList	current_execute_data		3987964	1					
ANR	3988209	Argument	current_execute_data		3987964	0					
ANR	3988210	Identifier	current_execute_data		3987964	0					
ANR	3988211	Identifier	NULL		3987964	1					
ANR	3988212	ExpressionStatement	"zend_stack_init ( & EG ( user_error_handlers_error_reporting ) , sizeof ( int ) )"	165:1:5010:5080	3987964	20	True				
ANR	3988213	CallExpression	"zend_stack_init ( & EG ( user_error_handlers_error_reporting ) , sizeof ( int ) )"		3987964	0					
ANR	3988214	Callee	zend_stack_init		3987964	0					
ANR	3988215	Identifier	zend_stack_init		3987964	0					
ANR	3988216	ArgumentList	& EG ( user_error_handlers_error_reporting )		3987964	1					
ANR	3988217	Argument	& EG ( user_error_handlers_error_reporting )		3987964	0					
ANR	3988218	UnaryOperationExpression	& EG ( user_error_handlers_error_reporting )		3987964	0					
ANR	3988219	UnaryOperator	&		3987964	0					
ANR	3988220	CallExpression	EG ( user_error_handlers_error_reporting )		3987964	1					
ANR	3988221	Callee	EG		3987964	0					
ANR	3988222	Identifier	EG		3987964	0					
ANR	3988223	ArgumentList	user_error_handlers_error_reporting		3987964	1					
ANR	3988224	Argument	user_error_handlers_error_reporting		3987964	0					
ANR	3988225	Identifier	user_error_handlers_error_reporting		3987964	0					
ANR	3988226	Argument	sizeof ( int )		3987964	1					
ANR	3988227	SizeofExpression	sizeof ( int )		3987964	0					
ANR	3988228	Sizeof	sizeof		3987964	0					
ANR	3988229	SizeofOperand	int		3987964	1					
ANR	3988230	ExpressionStatement	"zend_stack_init ( & EG ( user_error_handlers ) , sizeof ( zval ) )"	166:1:5083:5138	3987964	21	True				
ANR	3988231	CallExpression	"zend_stack_init ( & EG ( user_error_handlers ) , sizeof ( zval ) )"		3987964	0					
ANR	3988232	Callee	zend_stack_init		3987964	0					
ANR	3988233	Identifier	zend_stack_init		3987964	0					
ANR	3988234	ArgumentList	& EG ( user_error_handlers )		3987964	1					
ANR	3988235	Argument	& EG ( user_error_handlers )		3987964	0					
ANR	3988236	UnaryOperationExpression	& EG ( user_error_handlers )		3987964	0					
ANR	3988237	UnaryOperator	&		3987964	0					
ANR	3988238	CallExpression	EG ( user_error_handlers )		3987964	1					
ANR	3988239	Callee	EG		3987964	0					
ANR	3988240	Identifier	EG		3987964	0					
ANR	3988241	ArgumentList	user_error_handlers		3987964	1					
ANR	3988242	Argument	user_error_handlers		3987964	0					
ANR	3988243	Identifier	user_error_handlers		3987964	0					
ANR	3988244	Argument	sizeof ( zval )		3987964	1					
ANR	3988245	SizeofExpression	sizeof ( zval )		3987964	0					
ANR	3988246	Sizeof	sizeof		3987964	0					
ANR	3988247	SizeofOperand	zval		3987964	1					
ANR	3988248	ExpressionStatement	"zend_stack_init ( & EG ( user_exception_handlers ) , sizeof ( zval ) )"	167:1:5141:5200	3987964	22	True				
ANR	3988249	CallExpression	"zend_stack_init ( & EG ( user_exception_handlers ) , sizeof ( zval ) )"		3987964	0					
ANR	3988250	Callee	zend_stack_init		3987964	0					
ANR	3988251	Identifier	zend_stack_init		3987964	0					
ANR	3988252	ArgumentList	& EG ( user_exception_handlers )		3987964	1					
ANR	3988253	Argument	& EG ( user_exception_handlers )		3987964	0					
ANR	3988254	UnaryOperationExpression	& EG ( user_exception_handlers )		3987964	0					
ANR	3988255	UnaryOperator	&		3987964	0					
ANR	3988256	CallExpression	EG ( user_exception_handlers )		3987964	1					
ANR	3988257	Callee	EG		3987964	0					
ANR	3988258	Identifier	EG		3987964	0					
ANR	3988259	ArgumentList	user_exception_handlers		3987964	1					
ANR	3988260	Argument	user_exception_handlers		3987964	0					
ANR	3988261	Identifier	user_exception_handlers		3987964	0					
ANR	3988262	Argument	sizeof ( zval )		3987964	1					
ANR	3988263	SizeofExpression	sizeof ( zval )		3987964	0					
ANR	3988264	Sizeof	sizeof		3987964	0					
ANR	3988265	SizeofOperand	zval		3987964	1					
ANR	3988266	ExpressionStatement	"zend_objects_store_init ( & EG ( objects_store ) , 1024 )"	169:1:5204:5253	3987964	23	True				
ANR	3988267	CallExpression	"zend_objects_store_init ( & EG ( objects_store ) , 1024 )"		3987964	0					
ANR	3988268	Callee	zend_objects_store_init		3987964	0					
ANR	3988269	Identifier	zend_objects_store_init		3987964	0					
ANR	3988270	ArgumentList	& EG ( objects_store )		3987964	1					
ANR	3988271	Argument	& EG ( objects_store )		3987964	0					
ANR	3988272	UnaryOperationExpression	& EG ( objects_store )		3987964	0					
ANR	3988273	UnaryOperator	&		3987964	0					
ANR	3988274	CallExpression	EG ( objects_store )		3987964	1					
ANR	3988275	Callee	EG		3987964	0					
ANR	3988276	Identifier	EG		3987964	0					
ANR	3988277	ArgumentList	objects_store		3987964	1					
ANR	3988278	Argument	objects_store		3987964	0					
ANR	3988279	Identifier	objects_store		3987964	0					
ANR	3988280	Argument	1024		3987964	1					
ANR	3988281	PrimaryExpression	1024		3987964	0					
ANR	3988282	ExpressionStatement	EG ( full_tables_cleanup ) = 0	171:1:5257:5284	3987964	24	True				
ANR	3988283	AssignmentExpression	EG ( full_tables_cleanup ) = 0		3987964	0		=			
ANR	3988284	CallExpression	EG ( full_tables_cleanup )		3987964	0					
ANR	3988285	Callee	EG		3987964	0					
ANR	3988286	Identifier	EG		3987964	0					
ANR	3988287	ArgumentList	full_tables_cleanup		3987964	1					
ANR	3988288	Argument	full_tables_cleanup		3987964	0					
ANR	3988289	Identifier	full_tables_cleanup		3987964	0					
ANR	3988290	PrimaryExpression	0		3987964	1					
ANR	3988291	ExpressionStatement	EG ( timed_out ) = 0	173:1:5305:5322	3987964	25	True				
ANR	3988292	AssignmentExpression	EG ( timed_out ) = 0		3987964	0		=			
ANR	3988293	CallExpression	EG ( timed_out )		3987964	0					
ANR	3988294	Callee	EG		3987964	0					
ANR	3988295	Identifier	EG		3987964	0					
ANR	3988296	ArgumentList	timed_out		3987964	1					
ANR	3988297	Argument	timed_out		3987964	0					
ANR	3988298	Identifier	timed_out		3987964	0					
ANR	3988299	PrimaryExpression	0		3987964	1					
ANR	3988300	ExpressionStatement	EG ( exception ) = NULL	176:1:5333:5353	3987964	26	True				
ANR	3988301	AssignmentExpression	EG ( exception ) = NULL		3987964	0		=			
ANR	3988302	CallExpression	EG ( exception )		3987964	0					
ANR	3988303	Callee	EG		3987964	0					
ANR	3988304	Identifier	EG		3987964	0					
ANR	3988305	ArgumentList	exception		3987964	1					
ANR	3988306	Argument	exception		3987964	0					
ANR	3988307	Identifier	exception		3987964	0					
ANR	3988308	Identifier	NULL		3987964	1					
ANR	3988309	ExpressionStatement	EG ( prev_exception ) = NULL	177:1:5356:5381	3987964	27	True				
ANR	3988310	AssignmentExpression	EG ( prev_exception ) = NULL		3987964	0		=			
ANR	3988311	CallExpression	EG ( prev_exception )		3987964	0					
ANR	3988312	Callee	EG		3987964	0					
ANR	3988313	Identifier	EG		3987964	0					
ANR	3988314	ArgumentList	prev_exception		3987964	1					
ANR	3988315	Argument	prev_exception		3987964	0					
ANR	3988316	Identifier	prev_exception		3987964	0					
ANR	3988317	Identifier	NULL		3987964	1					
ANR	3988318	ExpressionStatement	EG ( scope ) = NULL	179:1:5385:5401	3987964	28	True				
ANR	3988319	AssignmentExpression	EG ( scope ) = NULL		3987964	0		=			
ANR	3988320	CallExpression	EG ( scope )		3987964	0					
ANR	3988321	Callee	EG		3987964	0					
ANR	3988322	Identifier	EG		3987964	0					
ANR	3988323	ArgumentList	scope		3987964	1					
ANR	3988324	Argument	scope		3987964	0					
ANR	3988325	Identifier	scope		3987964	0					
ANR	3988326	Identifier	NULL		3987964	1					
ANR	3988327	ExpressionStatement	EG ( ht_iterators_count ) = sizeof ( EG ( ht_iterators_slots ) ) / sizeof ( HashTableIterator )	181:1:5405:5488	3987964	29	True				
ANR	3988328	AssignmentExpression	EG ( ht_iterators_count ) = sizeof ( EG ( ht_iterators_slots ) ) / sizeof ( HashTableIterator )		3987964	0		=			
ANR	3988329	CallExpression	EG ( ht_iterators_count )		3987964	0					
ANR	3988330	Callee	EG		3987964	0					
ANR	3988331	Identifier	EG		3987964	0					
ANR	3988332	ArgumentList	ht_iterators_count		3987964	1					
ANR	3988333	Argument	ht_iterators_count		3987964	0					
ANR	3988334	Identifier	ht_iterators_count		3987964	0					
ANR	3988335	MultiplicativeExpression	sizeof ( EG ( ht_iterators_slots ) ) / sizeof ( HashTableIterator )		3987964	1		/			
ANR	3988336	SizeofExpression	sizeof ( EG ( ht_iterators_slots ) )		3987964	0					
ANR	3988337	Sizeof	sizeof		3987964	0					
ANR	3988338	CallExpression	EG ( ht_iterators_slots )		3987964	1					
ANR	3988339	Callee	EG		3987964	0					
ANR	3988340	Identifier	EG		3987964	0					
ANR	3988341	ArgumentList	ht_iterators_slots		3987964	1					
ANR	3988342	Argument	ht_iterators_slots		3987964	0					
ANR	3988343	Identifier	ht_iterators_slots		3987964	0					
ANR	3988344	SizeofExpression	sizeof ( HashTableIterator )		3987964	1					
ANR	3988345	Sizeof	sizeof		3987964	0					
ANR	3988346	SizeofOperand	HashTableIterator		3987964	1					
ANR	3988347	ExpressionStatement	EG ( ht_iterators_used ) = 0	182:1:5491:5516	3987964	30	True				
ANR	3988348	AssignmentExpression	EG ( ht_iterators_used ) = 0		3987964	0		=			
ANR	3988349	CallExpression	EG ( ht_iterators_used )		3987964	0					
ANR	3988350	Callee	EG		3987964	0					
ANR	3988351	Identifier	EG		3987964	0					
ANR	3988352	ArgumentList	ht_iterators_used		3987964	1					
ANR	3988353	Argument	ht_iterators_used		3987964	0					
ANR	3988354	Identifier	ht_iterators_used		3987964	0					
ANR	3988355	PrimaryExpression	0		3987964	1					
ANR	3988356	ExpressionStatement	EG ( ht_iterators ) = EG ( ht_iterators_slots )	183:1:5519:5560	3987964	31	True				
ANR	3988357	AssignmentExpression	EG ( ht_iterators ) = EG ( ht_iterators_slots )		3987964	0		=			
ANR	3988358	CallExpression	EG ( ht_iterators )		3987964	0					
ANR	3988359	Callee	EG		3987964	0					
ANR	3988360	Identifier	EG		3987964	0					
ANR	3988361	ArgumentList	ht_iterators		3987964	1					
ANR	3988362	Argument	ht_iterators		3987964	0					
ANR	3988363	Identifier	ht_iterators		3987964	0					
ANR	3988364	CallExpression	EG ( ht_iterators_slots )		3987964	1					
ANR	3988365	Callee	EG		3987964	0					
ANR	3988366	Identifier	EG		3987964	0					
ANR	3988367	ArgumentList	ht_iterators_slots		3987964	1					
ANR	3988368	Argument	ht_iterators_slots		3987964	0					
ANR	3988369	Identifier	ht_iterators_slots		3987964	0					
ANR	3988370	ExpressionStatement	"memset ( EG ( ht_iterators ) , 0 , sizeof ( EG ( ht_iterators_slots ) ) )"	184:1:5563:5622	3987964	32	True				
ANR	3988371	CallExpression	"memset ( EG ( ht_iterators ) , 0 , sizeof ( EG ( ht_iterators_slots ) ) )"		3987964	0					
ANR	3988372	Callee	memset		3987964	0					
ANR	3988373	Identifier	memset		3987964	0					
ANR	3988374	ArgumentList	EG ( ht_iterators )		3987964	1					
ANR	3988375	Argument	EG ( ht_iterators )		3987964	0					
ANR	3988376	CallExpression	EG ( ht_iterators )		3987964	0					
ANR	3988377	Callee	EG		3987964	0					
ANR	3988378	Identifier	EG		3987964	0					
ANR	3988379	ArgumentList	ht_iterators		3987964	1					
ANR	3988380	Argument	ht_iterators		3987964	0					
ANR	3988381	Identifier	ht_iterators		3987964	0					
ANR	3988382	Argument	0		3987964	1					
ANR	3988383	PrimaryExpression	0		3987964	0					
ANR	3988384	Argument	sizeof ( EG ( ht_iterators_slots ) )		3987964	2					
ANR	3988385	SizeofExpression	sizeof ( EG ( ht_iterators_slots ) )		3987964	0					
ANR	3988386	Sizeof	sizeof		3987964	0					
ANR	3988387	CallExpression	EG ( ht_iterators_slots )		3987964	1					
ANR	3988388	Callee	EG		3987964	0					
ANR	3988389	Identifier	EG		3987964	0					
ANR	3988390	ArgumentList	ht_iterators_slots		3987964	1					
ANR	3988391	Argument	ht_iterators_slots		3987964	0					
ANR	3988392	Identifier	ht_iterators_slots		3987964	0					
ANR	3988393	ExpressionStatement	EG ( active ) = 1	186:1:5626:5640	3987964	33	True				
ANR	3988394	AssignmentExpression	EG ( active ) = 1		3987964	0		=			
ANR	3988395	CallExpression	EG ( active )		3987964	0					
ANR	3988396	Callee	EG		3987964	0					
ANR	3988397	Identifier	EG		3987964	0					
ANR	3988398	ArgumentList	active		3987964	1					
ANR	3988399	Argument	active		3987964	0					
ANR	3988400	Identifier	active		3987964	0					
ANR	3988401	PrimaryExpression	1		3987964	1					
ANR	3988402	ReturnType	void		3987964	1					
ANR	3988403	Identifier	init_executor		3987964	2					
ANR	3988404	ParameterList			3987964	3					
ANR	3988405	CFGEntryNode	ENTRY		3987964		True				
ANR	3988406	CFGExitNode	EXIT		3987964		True				
ANR	3988407	Symbol	exception		3987964						
ANR	3988408	Symbol	ht_iterators		3987964						
ANR	3988409	Symbol	symtable_cache		3987964						
ANR	3988410	Symbol	& zend_extensions		3987964						
ANR	3988411	Symbol	ticks_count		3987964						
ANR	3988412	Symbol	user_error_handler		3987964						
ANR	3988413	Symbol	user_exception_handlers		3987964						
ANR	3988414	Symbol	current_execute_data		3987964						
ANR	3988415	Symbol	no_extensions		3987964						
ANR	3988416	Symbol	zend_handle_sigsegv		3987964						
ANR	3988417	Symbol	& EG		3987964						
ANR	3988418	Symbol	SYMTABLE_CACHE_SIZE		3987964						
ANR	3988419	Symbol	user_error_handlers		3987964						
ANR	3988420	Symbol	ht_iterators_slots		3987964						
ANR	3988421	Symbol	EH_NORMAL		3987964						
ANR	3988422	Symbol	full_tables_cleanup		3987964						
ANR	3988423	Symbol	user_error_handlers_error_reporting		3987964						
ANR	3988424	Symbol	scope		3987964						
ANR	3988425	Symbol	ht_iterators_count		3987964						
ANR	3988426	Symbol	included_files		3987964						
ANR	3988427	Symbol	class_table		3987964						
ANR	3988428	Symbol	signal		3987964						
ANR	3988429	Symbol	uninitialized_zval		3987964						
ANR	3988430	Symbol	zend_extension_activator		3987964						
ANR	3988431	Symbol	EG		3987964						
ANR	3988432	Symbol	in_autoload		3987964						
ANR	3988433	Symbol	NULL		3987964						
ANR	3988434	Symbol	CG		3987964						
ANR	3988435	Symbol	original_sigsegv_handler		3987964						
ANR	3988436	Symbol	symtable_cache_ptr		3987964						
ANR	3988437	Symbol	objects_store		3987964						
ANR	3988438	Symbol	symtable_cache_limit		3987964						
ANR	3988439	Symbol	active		3987964						
ANR	3988440	Symbol	symbol_table		3987964						
ANR	3988441	Symbol	timed_out		3987964						
ANR	3988442	Symbol	error_handling		3987964						
ANR	3988443	Symbol	ZVAL_PTR_DTOR		3987964						
ANR	3988444	Symbol	prev_exception		3987964						
ANR	3988445	Symbol	autoload_func		3987964						
ANR	3988446	Symbol	ht_iterators_used		3987964						
ANR	3988447	Symbol	SIGSEGV		3987964						
ANR	3988448	Symbol	error_zval		3987964						
ANR	3988449	Symbol	valid_symbol_table		3987964						
ANR	3988450	Symbol	function_table		3987964						
ANR	3988451	Function	zval_call_destructor	190:0:5655:5909							
ANR	3988452	FunctionDef	zval_call_destructor (zval * zv)		3988451	0					
ANR	3988453	CompoundStatement		191:0:5707:5909	3988451	0					
ANR	3988454	IfStatement	if ( Z_TYPE_P ( zv ) == IS_INDIRECT )		3988451	0					
ANR	3988455	Condition	Z_TYPE_P ( zv ) == IS_INDIRECT	192:5:5714:5740	3988451	0	True				
ANR	3988456	EqualityExpression	Z_TYPE_P ( zv ) == IS_INDIRECT		3988451	0		==			
ANR	3988457	CallExpression	Z_TYPE_P ( zv )		3988451	0					
ANR	3988458	Callee	Z_TYPE_P		3988451	0					
ANR	3988459	Identifier	Z_TYPE_P		3988451	0					
ANR	3988460	ArgumentList	zv		3988451	1					
ANR	3988461	Argument	zv		3988451	0					
ANR	3988462	Identifier	zv		3988451	0					
ANR	3988463	Identifier	IS_INDIRECT		3988451	1					
ANR	3988464	CompoundStatement		2:34:35:35	3988451	1					
ANR	3988465	ExpressionStatement	zv = Z_INDIRECT_P ( zv )	193:2:5747:5768	3988451	0	True				
ANR	3988466	AssignmentExpression	zv = Z_INDIRECT_P ( zv )		3988451	0		=			
ANR	3988467	Identifier	zv		3988451	0					
ANR	3988468	CallExpression	Z_INDIRECT_P ( zv )		3988451	1					
ANR	3988469	Callee	Z_INDIRECT_P		3988451	0					
ANR	3988470	Identifier	Z_INDIRECT_P		3988451	0					
ANR	3988471	ArgumentList	zv		3988451	1					
ANR	3988472	Argument	zv		3988451	0					
ANR	3988473	Identifier	zv		3988451	0					
ANR	3988474	IfStatement	if ( Z_TYPE_P ( zv ) == IS_OBJECT && Z_REFCOUNT_P ( zv ) == 1 )		3988451	1					
ANR	3988475	Condition	Z_TYPE_P ( zv ) == IS_OBJECT && Z_REFCOUNT_P ( zv ) == 1	195:5:5778:5827	3988451	0	True				
ANR	3988476	AndExpression	Z_TYPE_P ( zv ) == IS_OBJECT && Z_REFCOUNT_P ( zv ) == 1		3988451	0		&&			
ANR	3988477	EqualityExpression	Z_TYPE_P ( zv ) == IS_OBJECT		3988451	0		==			
ANR	3988478	CallExpression	Z_TYPE_P ( zv )		3988451	0					
ANR	3988479	Callee	Z_TYPE_P		3988451	0					
ANR	3988480	Identifier	Z_TYPE_P		3988451	0					
ANR	3988481	ArgumentList	zv		3988451	1					
ANR	3988482	Argument	zv		3988451	0					
ANR	3988483	Identifier	zv		3988451	0					
ANR	3988484	Identifier	IS_OBJECT		3988451	1					
ANR	3988485	EqualityExpression	Z_REFCOUNT_P ( zv ) == 1		3988451	1		==			
ANR	3988486	CallExpression	Z_REFCOUNT_P ( zv )		3988451	0					
ANR	3988487	Callee	Z_REFCOUNT_P		3988451	0					
ANR	3988488	Identifier	Z_REFCOUNT_P		3988451	0					
ANR	3988489	ArgumentList	zv		3988451	1					
ANR	3988490	Argument	zv		3988451	0					
ANR	3988491	Identifier	zv		3988451	0					
ANR	3988492	PrimaryExpression	1		3988451	1					
ANR	3988493	CompoundStatement		5:57:122:122	3988451	1					
ANR	3988494	ReturnStatement	return ZEND_HASH_APPLY_REMOVE ;	196:2:5834:5863	3988451	0	True				
ANR	3988495	Identifier	ZEND_HASH_APPLY_REMOVE		3988451	0					
ANR	3988496	ElseStatement	else		3988451	0					
ANR	3988497	CompoundStatement		7:8:165:165	3988451	0					
ANR	3988498	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	198:2:5877:5904	3988451	0	True				
ANR	3988499	Identifier	ZEND_HASH_APPLY_KEEP		3988451	0					
ANR	3988500	ReturnType	static int		3988451	1					
ANR	3988501	Identifier	zval_call_destructor		3988451	2					
ANR	3988502	ParameterList	zval * zv		3988451	3					
ANR	3988503	Parameter	zval * zv	190:32:5687:5694	3988451	0	True				
ANR	3988504	ParameterType	zval *		3988451	0					
ANR	3988505	Identifier	zv		3988451	1					
ANR	3988506	CFGEntryNode	ENTRY		3988451		True				
ANR	3988507	CFGExitNode	EXIT		3988451		True				
ANR	3988508	Symbol	ZEND_HASH_APPLY_KEEP		3988451						
ANR	3988509	Symbol	Z_INDIRECT_P		3988451						
ANR	3988510	Symbol	ZEND_HASH_APPLY_REMOVE		3988451						
ANR	3988511	Symbol	zv		3988451						
ANR	3988512	Symbol	Z_TYPE_P		3988451						
ANR	3988513	Symbol	IS_OBJECT		3988451						
ANR	3988514	Symbol	Z_REFCOUNT_P		3988451						
ANR	3988515	Symbol	IS_INDIRECT		3988451						
ANR	3988516	Function	zend_unclean_zval_ptr_dtor	203:0:5922:6087							
ANR	3988517	FunctionDef	zend_unclean_zval_ptr_dtor (zval * zv)		3988516	0					
ANR	3988518	CompoundStatement		204:0:5981:6087	3988516	0					
ANR	3988519	IfStatement	if ( Z_TYPE_P ( zv ) == IS_INDIRECT )		3988516	0					
ANR	3988520	Condition	Z_TYPE_P ( zv ) == IS_INDIRECT	205:5:5988:6014	3988516	0	True				
ANR	3988521	EqualityExpression	Z_TYPE_P ( zv ) == IS_INDIRECT		3988516	0		==			
ANR	3988522	CallExpression	Z_TYPE_P ( zv )		3988516	0					
ANR	3988523	Callee	Z_TYPE_P		3988516	0					
ANR	3988524	Identifier	Z_TYPE_P		3988516	0					
ANR	3988525	ArgumentList	zv		3988516	1					
ANR	3988526	Argument	zv		3988516	0					
ANR	3988527	Identifier	zv		3988516	0					
ANR	3988528	Identifier	IS_INDIRECT		3988516	1					
ANR	3988529	CompoundStatement		2:34:35:35	3988516	1					
ANR	3988530	ExpressionStatement	zv = Z_INDIRECT_P ( zv )	206:2:6021:6042	3988516	0	True				
ANR	3988531	AssignmentExpression	zv = Z_INDIRECT_P ( zv )		3988516	0		=			
ANR	3988532	Identifier	zv		3988516	0					
ANR	3988533	CallExpression	Z_INDIRECT_P ( zv )		3988516	1					
ANR	3988534	Callee	Z_INDIRECT_P		3988516	0					
ANR	3988535	Identifier	Z_INDIRECT_P		3988516	0					
ANR	3988536	ArgumentList	zv		3988516	1					
ANR	3988537	Argument	zv		3988516	0					
ANR	3988538	Identifier	zv		3988516	0					
ANR	3988539	Statement	i_zval_ptr_dtor	208:1:6048:6062	3988516	1	True				
ANR	3988540	Statement	(	208:16:6063:6063	3988516	2	True				
ANR	3988541	Statement	zv	208:17:6064:6065	3988516	3	True				
ANR	3988542	Statement	ZEND_FILE_LINE_CC	208:20:6067:6083	3988516	4	True				
ANR	3988543	Statement	)	208:37:6084:6084	3988516	5	True				
ANR	3988544	ExpressionStatement		208:38:6085:6085	3988516	6	True				
ANR	3988545	ReturnType	static void		3988516	1					
ANR	3988546	Identifier	zend_unclean_zval_ptr_dtor		3988516	2					
ANR	3988547	ParameterList	zval * zv		3988516	3					
ANR	3988548	Parameter	zval * zv	203:39:5961:5968	3988516	0	True				
ANR	3988549	ParameterType	zval *		3988516	0					
ANR	3988550	Identifier	zv		3988516	1					
ANR	3988551	CFGEntryNode	ENTRY		3988516		True				
ANR	3988552	CFGExitNode	EXIT		3988516		True				
ANR	3988553	Symbol	Z_INDIRECT_P		3988516						
ANR	3988554	Symbol	zv		3988516						
ANR	3988555	Symbol	Z_TYPE_P		3988516						
ANR	3988556	Symbol	IS_INDIRECT		3988516						
ANR	3988557	Function	zend_throw_or_error	212:0:6100:6493							
ANR	3988558	FunctionDef	"zend_throw_or_error (int fetch_type , zend_class_entry * exception_ce , const char * format)"		3988557	0					
ANR	3988559	CompoundStatement		213:0:6215:6493	3988557	0					
ANR	3988560	IdentifierDeclStatement	va_list va ;	214:1:6218:6228	3988557	0	True				
ANR	3988561	IdentifierDecl	va		3988557	0					
ANR	3988562	IdentifierDeclType	va_list		3988557	0					
ANR	3988563	Identifier	va		3988557	1					
ANR	3988564	IdentifierDeclStatement	char * message = NULL ;	215:1:6231:6251	3988557	1	True				
ANR	3988565	IdentifierDecl	* message = NULL		3988557	0					
ANR	3988566	IdentifierDeclType	char *		3988557	0					
ANR	3988567	Identifier	message		3988557	1					
ANR	3988568	AssignmentExpression	* message = NULL		3988557	2		=			
ANR	3988569	Identifier	NULL		3988557	0					
ANR	3988570	Identifier	NULL		3988557	1					
ANR	3988571	ExpressionStatement	"va_start ( va , format )"	217:1:6255:6275	3988557	2	True				
ANR	3988572	CallExpression	"va_start ( va , format )"		3988557	0					
ANR	3988573	Callee	va_start		3988557	0					
ANR	3988574	Identifier	va_start		3988557	0					
ANR	3988575	ArgumentList	va		3988557	1					
ANR	3988576	Argument	va		3988557	0					
ANR	3988577	Identifier	va		3988557	0					
ANR	3988578	Argument	format		3988557	1					
ANR	3988579	Identifier	format		3988557	0					
ANR	3988580	ExpressionStatement	"zend_vspprintf ( & message , 0 , format , va )"	218:1:6278:6317	3988557	3	True				
ANR	3988581	CallExpression	"zend_vspprintf ( & message , 0 , format , va )"		3988557	0					
ANR	3988582	Callee	zend_vspprintf		3988557	0					
ANR	3988583	Identifier	zend_vspprintf		3988557	0					
ANR	3988584	ArgumentList	& message		3988557	1					
ANR	3988585	Argument	& message		3988557	0					
ANR	3988586	UnaryOperationExpression	& message		3988557	0					
ANR	3988587	UnaryOperator	&		3988557	0					
ANR	3988588	Identifier	message		3988557	1					
ANR	3988589	Argument	0		3988557	1					
ANR	3988590	PrimaryExpression	0		3988557	0					
ANR	3988591	Argument	format		3988557	2					
ANR	3988592	Identifier	format		3988557	0					
ANR	3988593	Argument	va		3988557	3					
ANR	3988594	Identifier	va		3988557	0					
ANR	3988595	IfStatement	if ( fetch_type & ZEND_FETCH_CLASS_EXCEPTION )		3988557	4					
ANR	3988596	Condition	fetch_type & ZEND_FETCH_CLASS_EXCEPTION	220:5:6325:6363	3988557	0	True				
ANR	3988597	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_EXCEPTION		3988557	0		&			
ANR	3988598	Identifier	fetch_type		3988557	0					
ANR	3988599	Identifier	ZEND_FETCH_CLASS_EXCEPTION		3988557	1					
ANR	3988600	CompoundStatement		8:46:150:150	3988557	1					
ANR	3988601	ExpressionStatement	"zend_throw_error ( exception_ce , message )"	221:2:6370:6409	3988557	0	True				
ANR	3988602	CallExpression	"zend_throw_error ( exception_ce , message )"		3988557	0					
ANR	3988603	Callee	zend_throw_error		3988557	0					
ANR	3988604	Identifier	zend_throw_error		3988557	0					
ANR	3988605	ArgumentList	exception_ce		3988557	1					
ANR	3988606	Argument	exception_ce		3988557	0					
ANR	3988607	Identifier	exception_ce		3988557	0					
ANR	3988608	Argument	message		3988557	1					
ANR	3988609	Identifier	message		3988557	0					
ANR	3988610	ElseStatement	else		3988557	0					
ANR	3988611	CompoundStatement		10:8:203:203	3988557	0					
ANR	3988612	ExpressionStatement	"zend_error ( E_ERROR , ""%s"" , message )"	223:2:6423:6457	3988557	0	True				
ANR	3988613	CallExpression	"zend_error ( E_ERROR , ""%s"" , message )"		3988557	0					
ANR	3988614	Callee	zend_error		3988557	0					
ANR	3988615	Identifier	zend_error		3988557	0					
ANR	3988616	ArgumentList	E_ERROR		3988557	1					
ANR	3988617	Argument	E_ERROR		3988557	0					
ANR	3988618	Identifier	E_ERROR		3988557	0					
ANR	3988619	Argument	"""%s"""		3988557	1					
ANR	3988620	PrimaryExpression	"""%s"""		3988557	0					
ANR	3988621	Argument	message		3988557	2					
ANR	3988622	Identifier	message		3988557	0					
ANR	3988623	ExpressionStatement	efree ( message )	226:1:6464:6478	3988557	5	True				
ANR	3988624	CallExpression	efree ( message )		3988557	0					
ANR	3988625	Callee	efree		3988557	0					
ANR	3988626	Identifier	efree		3988557	0					
ANR	3988627	ArgumentList	message		3988557	1					
ANR	3988628	Argument	message		3988557	0					
ANR	3988629	Identifier	message		3988557	0					
ANR	3988630	ExpressionStatement	va_end ( va )	227:1:6481:6491	3988557	6	True				
ANR	3988631	CallExpression	va_end ( va )		3988557	0					
ANR	3988632	Callee	va_end		3988557	0					
ANR	3988633	Identifier	va_end		3988557	0					
ANR	3988634	ArgumentList	va		3988557	1					
ANR	3988635	Argument	va		3988557	0					
ANR	3988636	Identifier	va		3988557	0					
ANR	3988637	ReturnType	static void		3988557	1					
ANR	3988638	Identifier	zend_throw_or_error		3988557	2					
ANR	3988639	ParameterList	"int fetch_type , zend_class_entry * exception_ce , const char * format"		3988557	3					
ANR	3988640	Parameter	int fetch_type	212:32:6132:6145	3988557	0	True				
ANR	3988641	ParameterType	int		3988557	0					
ANR	3988642	Identifier	fetch_type		3988557	1					
ANR	3988643	Parameter	zend_class_entry * exception_ce	212:48:6148:6177	3988557	1	True				
ANR	3988644	ParameterType	zend_class_entry *		3988557	0					
ANR	3988645	Identifier	exception_ce		3988557	1					
ANR	3988646	Parameter	const char * format	212:80:6180:6197	3988557	2	True				
ANR	3988647	ParameterType	const char *		3988557	0					
ANR	3988648	Identifier	format		3988557	1					
ANR	3988649	CFGEntryNode	ENTRY		3988557		True				
ANR	3988650	CFGExitNode	EXIT		3988557		True				
ANR	3988651	Symbol	exception_ce		3988557						
ANR	3988652	Symbol	fetch_type		3988557						
ANR	3988653	Symbol	NULL		3988557						
ANR	3988654	Symbol	E_ERROR		3988557						
ANR	3988655	Symbol	& message		3988557						
ANR	3988656	Symbol	ZEND_FETCH_CLASS_EXCEPTION		3988557						
ANR	3988657	Symbol	format		3988557						
ANR	3988658	Symbol	va		3988557						
ANR	3988659	Symbol	message		3988557						
ANR	3988660	Function	shutdown_destructors	231:0:6506:7119							
ANR	3988661	FunctionDef	shutdown_destructors ()		3988660	0					
ANR	3988662	CompoundStatement		232:0:6548:7119	3988660	0					
ANR	3988663	IfStatement	if ( CG ( unclean_shutdown ) )		3988660	0					
ANR	3988664	Condition	CG ( unclean_shutdown )	233:5:6555:6574	3988660	0	True				
ANR	3988665	CallExpression	CG ( unclean_shutdown )		3988660	0					
ANR	3988666	Callee	CG		3988660	0					
ANR	3988667	Identifier	CG		3988660	0					
ANR	3988668	ArgumentList	unclean_shutdown		3988660	1					
ANR	3988669	Argument	unclean_shutdown		3988660	0					
ANR	3988670	Identifier	unclean_shutdown		3988660	0					
ANR	3988671	CompoundStatement		2:27:28:28	3988660	1					
ANR	3988672	ExpressionStatement	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor	234:2:6581:6638	3988660	0	True				
ANR	3988673	AssignmentExpression	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor		3988660	0		=			
ANR	3988674	MemberAccess	EG ( symbol_table ) . pDestructor		3988660	0					
ANR	3988675	CallExpression	EG ( symbol_table )		3988660	0					
ANR	3988676	Callee	EG		3988660	0					
ANR	3988677	Identifier	EG		3988660	0					
ANR	3988678	ArgumentList	symbol_table		3988660	1					
ANR	3988679	Argument	symbol_table		3988660	0					
ANR	3988680	Identifier	symbol_table		3988660	0					
ANR	3988681	Identifier	pDestructor		3988660	1					
ANR	3988682	Identifier	zend_unclean_zval_ptr_dtor		3988660	1					
ANR	3988683	Statement	zend_try	236:1:6644:6651	3988660	1	True				
ANR	3988684	CompoundStatement		6:2:108:124	3988660	2					
ANR	3988685	IdentifierDeclStatement	uint32_t symbols ;	237:2:6657:6673	3988660	0	True				
ANR	3988686	IdentifierDecl	symbols		3988660	0					
ANR	3988687	IdentifierDeclType	uint32_t		3988660	0					
ANR	3988688	Identifier	symbols		3988660	1					
ANR	3988689	DoStatement	do		3988660	1					
ANR	3988690	CompoundStatement		7:5:131:131	3988660	0					
ANR	3988691	ExpressionStatement	symbols = zend_hash_num_elements ( & EG ( symbol_table ) )	239:3:6685:6736	3988660	0	True				
ANR	3988692	AssignmentExpression	symbols = zend_hash_num_elements ( & EG ( symbol_table ) )		3988660	0		=			
ANR	3988693	Identifier	symbols		3988660	0					
ANR	3988694	CallExpression	zend_hash_num_elements ( & EG ( symbol_table ) )		3988660	1					
ANR	3988695	Callee	zend_hash_num_elements		3988660	0					
ANR	3988696	Identifier	zend_hash_num_elements		3988660	0					
ANR	3988697	ArgumentList	& EG ( symbol_table )		3988660	1					
ANR	3988698	Argument	& EG ( symbol_table )		3988660	0					
ANR	3988699	UnaryOperationExpression	& EG ( symbol_table )		3988660	0					
ANR	3988700	UnaryOperator	&		3988660	0					
ANR	3988701	CallExpression	EG ( symbol_table )		3988660	1					
ANR	3988702	Callee	EG		3988660	0					
ANR	3988703	Identifier	EG		3988660	0					
ANR	3988704	ArgumentList	symbol_table		3988660	1					
ANR	3988705	Argument	symbol_table		3988660	0					
ANR	3988706	Identifier	symbol_table		3988660	0					
ANR	3988707	ExpressionStatement	"zend_hash_reverse_apply ( & EG ( symbol_table ) , ( apply_func_t ) zval_call_destructor )"	240:3:6741:6820	3988660	1	True				
ANR	3988708	CallExpression	"zend_hash_reverse_apply ( & EG ( symbol_table ) , ( apply_func_t ) zval_call_destructor )"		3988660	0					
ANR	3988709	Callee	zend_hash_reverse_apply		3988660	0					
ANR	3988710	Identifier	zend_hash_reverse_apply		3988660	0					
ANR	3988711	ArgumentList	& EG ( symbol_table )		3988660	1					
ANR	3988712	Argument	& EG ( symbol_table )		3988660	0					
ANR	3988713	UnaryOperationExpression	& EG ( symbol_table )		3988660	0					
ANR	3988714	UnaryOperator	&		3988660	0					
ANR	3988715	CallExpression	EG ( symbol_table )		3988660	1					
ANR	3988716	Callee	EG		3988660	0					
ANR	3988717	Identifier	EG		3988660	0					
ANR	3988718	ArgumentList	symbol_table		3988660	1					
ANR	3988719	Argument	symbol_table		3988660	0					
ANR	3988720	Identifier	symbol_table		3988660	0					
ANR	3988721	Argument	( apply_func_t ) zval_call_destructor		3988660	1					
ANR	3988722	CastExpression	( apply_func_t ) zval_call_destructor		3988660	0					
ANR	3988723	CastTarget	apply_func_t		3988660	0					
ANR	3988724	Identifier	zval_call_destructor		3988660	1					
ANR	3988725	Condition	symbols != zend_hash_num_elements ( & EG ( symbol_table ) )	241:11:6833:6884	3988660	1	True				
ANR	3988726	EqualityExpression	symbols != zend_hash_num_elements ( & EG ( symbol_table ) )		3988660	0		!=			
ANR	3988727	Identifier	symbols		3988660	0					
ANR	3988728	CallExpression	zend_hash_num_elements ( & EG ( symbol_table ) )		3988660	1					
ANR	3988729	Callee	zend_hash_num_elements		3988660	0					
ANR	3988730	Identifier	zend_hash_num_elements		3988660	0					
ANR	3988731	ArgumentList	& EG ( symbol_table )		3988660	1					
ANR	3988732	Argument	& EG ( symbol_table )		3988660	0					
ANR	3988733	UnaryOperationExpression	& EG ( symbol_table )		3988660	0					
ANR	3988734	UnaryOperator	&		3988660	0					
ANR	3988735	CallExpression	EG ( symbol_table )		3988660	1					
ANR	3988736	Callee	EG		3988660	0					
ANR	3988737	Identifier	EG		3988660	0					
ANR	3988738	ArgumentList	symbol_table		3988660	1					
ANR	3988739	Argument	symbol_table		3988660	0					
ANR	3988740	Identifier	symbol_table		3988660	0					
ANR	3988741	ExpressionStatement	zend_objects_store_call_destructors ( & EG ( objects_store ) )	242:2:6890:6945	3988660	2	True				
ANR	3988742	CallExpression	zend_objects_store_call_destructors ( & EG ( objects_store ) )		3988660	0					
ANR	3988743	Callee	zend_objects_store_call_destructors		3988660	0					
ANR	3988744	Identifier	zend_objects_store_call_destructors		3988660	0					
ANR	3988745	ArgumentList	& EG ( objects_store )		3988660	1					
ANR	3988746	Argument	& EG ( objects_store )		3988660	0					
ANR	3988747	UnaryOperationExpression	& EG ( objects_store )		3988660	0					
ANR	3988748	UnaryOperator	&		3988660	0					
ANR	3988749	CallExpression	EG ( objects_store )		3988660	1					
ANR	3988750	Callee	EG		3988660	0					
ANR	3988751	Identifier	EG		3988660	0					
ANR	3988752	ArgumentList	objects_store		3988660	1					
ANR	3988753	Argument	objects_store		3988660	0					
ANR	3988754	Identifier	objects_store		3988660	0					
ANR	3988755	Statement	zend_catch	243:3:6950:6959	3988660	3	True				
ANR	3988756	CompoundStatement		12:14:412:412	3988660	4					
ANR	3988757	ExpressionStatement	zend_objects_store_mark_destructed ( & EG ( objects_store ) )	245:2:7044:7098	3988660	0	True				
ANR	3988758	CallExpression	zend_objects_store_mark_destructed ( & EG ( objects_store ) )		3988660	0					
ANR	3988759	Callee	zend_objects_store_mark_destructed		3988660	0					
ANR	3988760	Identifier	zend_objects_store_mark_destructed		3988660	0					
ANR	3988761	ArgumentList	& EG ( objects_store )		3988660	1					
ANR	3988762	Argument	& EG ( objects_store )		3988660	0					
ANR	3988763	UnaryOperationExpression	& EG ( objects_store )		3988660	0					
ANR	3988764	UnaryOperator	&		3988660	0					
ANR	3988765	CallExpression	EG ( objects_store )		3988660	1					
ANR	3988766	Callee	EG		3988660	0					
ANR	3988767	Identifier	EG		3988660	0					
ANR	3988768	ArgumentList	objects_store		3988660	1					
ANR	3988769	Argument	objects_store		3988660	0					
ANR	3988770	Identifier	objects_store		3988660	0					
ANR	3988771	ExpressionStatement	zend_end_try ( )	246:3:7103:7117	3988660	5	True				
ANR	3988772	CallExpression	zend_end_try ( )		3988660	0					
ANR	3988773	Callee	zend_end_try		3988660	0					
ANR	3988774	Identifier	zend_end_try		3988660	0					
ANR	3988775	ArgumentList			3988660	1					
ANR	3988776	ReturnType	void		3988660	1					
ANR	3988777	Identifier	shutdown_destructors		3988660	2					
ANR	3988778	ParameterList			3988660	3					
ANR	3988779	CFGEntryNode	ENTRY		3988660		True				
ANR	3988780	CFGExitNode	EXIT		3988660		True				
ANR	3988781	Symbol	unclean_shutdown		3988660						
ANR	3988782	Symbol	EG		3988660						
ANR	3988783	Symbol	CG		3988660						
ANR	3988784	Symbol	zend_hash_num_elements		3988660						
ANR	3988785	Symbol	zval_call_destructor		3988660						
ANR	3988786	Symbol	objects_store		3988660						
ANR	3988787	Symbol	EG ( symbol_table ) . pDestructor		3988660						
ANR	3988788	Symbol	symbol_table		3988660						
ANR	3988789	Symbol	& EG		3988660						
ANR	3988790	Symbol	symbols		3988660						
ANR	3988791	Symbol	zend_unclean_zval_ptr_dtor		3988660						
ANR	3988792	Function	shutdown_executor	250:0:7132:12115							
ANR	3988793	FunctionDef	shutdown_executor ()		3988792	0					
ANR	3988794	CompoundStatement		251:0:7171:12115	3988792	0					
ANR	3988795	IdentifierDeclStatement	zend_function * func ;	252:1:7174:7193	3988792	0	True				
ANR	3988796	IdentifierDecl	* func		3988792	0					
ANR	3988797	IdentifierDeclType	zend_function *		3988792	0					
ANR	3988798	Identifier	func		3988792	1					
ANR	3988799	IdentifierDeclStatement	zend_class_entry * ce ;	253:1:7196:7216	3988792	1	True				
ANR	3988800	IdentifierDecl	* ce		3988792	0					
ANR	3988801	IdentifierDeclType	zend_class_entry *		3988792	0					
ANR	3988802	Identifier	ce		3988792	1					
ANR	3988803	Statement	zend_try	255:1:7220:7227	3988792	2	True				
ANR	3988804	CompoundStatement		5:10:57:57	3988792	3					
ANR	3988805	ExpressionStatement	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_deactivator )"	272:2:7884:7967	3988792	0	True				
ANR	3988806	CallExpression	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_deactivator )"		3988792	0					
ANR	3988807	Callee	zend_llist_apply		3988792	0					
ANR	3988808	Identifier	zend_llist_apply		3988792	0					
ANR	3988809	ArgumentList	& zend_extensions		3988792	1					
ANR	3988810	Argument	& zend_extensions		3988792	0					
ANR	3988811	UnaryOperationExpression	& zend_extensions		3988792	0					
ANR	3988812	UnaryOperator	&		3988792	0					
ANR	3988813	Identifier	zend_extensions		3988792	1					
ANR	3988814	Argument	( llist_apply_func_t ) zend_extension_deactivator		3988792	1					
ANR	3988815	CastExpression	( llist_apply_func_t ) zend_extension_deactivator		3988792	0					
ANR	3988816	CastTarget	llist_apply_func_t		3988792	0					
ANR	3988817	Identifier	zend_extension_deactivator		3988792	1					
ANR	3988818	IfStatement	if ( CG ( unclean_shutdown ) )		3988792	1					
ANR	3988819	Condition	CG ( unclean_shutdown )	274:6:7976:7995	3988792	0	True				
ANR	3988820	CallExpression	CG ( unclean_shutdown )		3988792	0					
ANR	3988821	Callee	CG		3988792	0					
ANR	3988822	Identifier	CG		3988792	0					
ANR	3988823	ArgumentList	unclean_shutdown		3988792	1					
ANR	3988824	Argument	unclean_shutdown		3988792	0					
ANR	3988825	Identifier	unclean_shutdown		3988792	0					
ANR	3988826	CompoundStatement		24:28:826:826	3988792	1					
ANR	3988827	ExpressionStatement	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor	275:3:8003:8060	3988792	0	True				
ANR	3988828	AssignmentExpression	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor		3988792	0		=			
ANR	3988829	MemberAccess	EG ( symbol_table ) . pDestructor		3988792	0					
ANR	3988830	CallExpression	EG ( symbol_table )		3988792	0					
ANR	3988831	Callee	EG		3988792	0					
ANR	3988832	Identifier	EG		3988792	0					
ANR	3988833	ArgumentList	symbol_table		3988792	1					
ANR	3988834	Argument	symbol_table		3988792	0					
ANR	3988835	Identifier	symbol_table		3988792	0					
ANR	3988836	Identifier	pDestructor		3988792	1					
ANR	3988837	Identifier	zend_unclean_zval_ptr_dtor		3988792	1					
ANR	3988838	ExpressionStatement	zend_hash_graceful_reverse_destroy ( & EG ( symbol_table ) )	277:2:8068:8121	3988792	2	True				
ANR	3988839	CallExpression	zend_hash_graceful_reverse_destroy ( & EG ( symbol_table ) )		3988792	0					
ANR	3988840	Callee	zend_hash_graceful_reverse_destroy		3988792	0					
ANR	3988841	Identifier	zend_hash_graceful_reverse_destroy		3988792	0					
ANR	3988842	ArgumentList	& EG ( symbol_table )		3988792	1					
ANR	3988843	Argument	& EG ( symbol_table )		3988792	0					
ANR	3988844	UnaryOperationExpression	& EG ( symbol_table )		3988792	0					
ANR	3988845	UnaryOperator	&		3988792	0					
ANR	3988846	CallExpression	EG ( symbol_table )		3988792	1					
ANR	3988847	Callee	EG		3988792	0					
ANR	3988848	Identifier	EG		3988792	0					
ANR	3988849	ArgumentList	symbol_table		3988792	1					
ANR	3988850	Argument	symbol_table		3988792	0					
ANR	3988851	Identifier	symbol_table		3988792	0					
ANR	3988852	ExpressionStatement	zend_end_try ( )	278:3:8126:8140	3988792	4	True				
ANR	3988853	CallExpression	zend_end_try ( )		3988792	0					
ANR	3988854	Callee	zend_end_try		3988792	0					
ANR	3988855	Identifier	zend_end_try		3988792	0					
ANR	3988856	ArgumentList			3988792	1					
ANR	3988857	ExpressionStatement	EG ( valid_symbol_table ) = 0	279:1:8143:8169	3988792	5	True				
ANR	3988858	AssignmentExpression	EG ( valid_symbol_table ) = 0		3988792	0		=			
ANR	3988859	CallExpression	EG ( valid_symbol_table )		3988792	0					
ANR	3988860	Callee	EG		3988792	0					
ANR	3988861	Identifier	EG		3988792	0					
ANR	3988862	ArgumentList	valid_symbol_table		3988792	1					
ANR	3988863	Argument	valid_symbol_table		3988792	0					
ANR	3988864	Identifier	valid_symbol_table		3988792	0					
ANR	3988865	PrimaryExpression	0		3988792	1					
ANR	3988866	Statement	zend_try	281:1:8173:8180	3988792	6	True				
ANR	3988867	CompoundStatement		32:2:1014:1023	3988792	7					
ANR	3988868	IdentifierDeclStatement	zval * zeh ;	282:2:8186:8195	3988792	0	True				
ANR	3988869	IdentifierDecl	* zeh		3988792	0					
ANR	3988870	IdentifierDeclType	zval *		3988792	0					
ANR	3988871	Identifier	zeh		3988792	1					
ANR	3988872	IfStatement	if ( Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF )		3988792	1					
ANR	3988873	Condition	Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF	285:6:8338:8379	3988792	0	True				
ANR	3988874	EqualityExpression	Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF		3988792	0		!=			
ANR	3988875	CallExpression	Z_TYPE ( EG ( user_error_handler ) )		3988792	0					
ANR	3988876	Callee	Z_TYPE		3988792	0					
ANR	3988877	Identifier	Z_TYPE		3988792	0					
ANR	3988878	ArgumentList	EG ( user_error_handler )		3988792	1					
ANR	3988879	Argument	EG ( user_error_handler )		3988792	0					
ANR	3988880	CallExpression	EG ( user_error_handler )		3988792	0					
ANR	3988881	Callee	EG		3988792	0					
ANR	3988882	Identifier	EG		3988792	0					
ANR	3988883	ArgumentList	user_error_handler		3988792	1					
ANR	3988884	Argument	user_error_handler		3988792	0					
ANR	3988885	Identifier	user_error_handler		3988792	0					
ANR	3988886	Identifier	IS_UNDEF		3988792	1					
ANR	3988887	CompoundStatement		35:50:1210:1210	3988792	1					
ANR	3988888	ExpressionStatement	zeh = & EG ( user_error_handler )	286:3:8387:8416	3988792	0	True				
ANR	3988889	AssignmentExpression	zeh = & EG ( user_error_handler )		3988792	0		=			
ANR	3988890	Identifier	zeh		3988792	0					
ANR	3988891	UnaryOperationExpression	& EG ( user_error_handler )		3988792	1					
ANR	3988892	UnaryOperator	&		3988792	0					
ANR	3988893	CallExpression	EG ( user_error_handler )		3988792	1					
ANR	3988894	Callee	EG		3988792	0					
ANR	3988895	Identifier	EG		3988792	0					
ANR	3988896	ArgumentList	user_error_handler		3988792	1					
ANR	3988897	Argument	user_error_handler		3988792	0					
ANR	3988898	Identifier	user_error_handler		3988792	0					
ANR	3988899	ExpressionStatement	zval_ptr_dtor ( zeh )	287:3:8421:8439	3988792	1	True				
ANR	3988900	CallExpression	zval_ptr_dtor ( zeh )		3988792	0					
ANR	3988901	Callee	zval_ptr_dtor		3988792	0					
ANR	3988902	Identifier	zval_ptr_dtor		3988792	0					
ANR	3988903	ArgumentList	zeh		3988792	1					
ANR	3988904	Argument	zeh		3988792	0					
ANR	3988905	Identifier	zeh		3988792	0					
ANR	3988906	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_error_handler ) )	288:3:8444:8479	3988792	2	True				
ANR	3988907	CallExpression	ZVAL_UNDEF ( & EG ( user_error_handler ) )		3988792	0					
ANR	3988908	Callee	ZVAL_UNDEF		3988792	0					
ANR	3988909	Identifier	ZVAL_UNDEF		3988792	0					
ANR	3988910	ArgumentList	& EG ( user_error_handler )		3988792	1					
ANR	3988911	Argument	& EG ( user_error_handler )		3988792	0					
ANR	3988912	UnaryOperationExpression	& EG ( user_error_handler )		3988792	0					
ANR	3988913	UnaryOperator	&		3988792	0					
ANR	3988914	CallExpression	EG ( user_error_handler )		3988792	1					
ANR	3988915	Callee	EG		3988792	0					
ANR	3988916	Identifier	EG		3988792	0					
ANR	3988917	ArgumentList	user_error_handler		3988792	1					
ANR	3988918	Argument	user_error_handler		3988792	0					
ANR	3988919	Identifier	user_error_handler		3988792	0					
ANR	3988920	IfStatement	if ( Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF )		3988792	2					
ANR	3988921	Condition	Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF	291:6:8492:8537	3988792	0	True				
ANR	3988922	EqualityExpression	Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF		3988792	0		!=			
ANR	3988923	CallExpression	Z_TYPE ( EG ( user_exception_handler ) )		3988792	0					
ANR	3988924	Callee	Z_TYPE		3988792	0					
ANR	3988925	Identifier	Z_TYPE		3988792	0					
ANR	3988926	ArgumentList	EG ( user_exception_handler )		3988792	1					
ANR	3988927	Argument	EG ( user_exception_handler )		3988792	0					
ANR	3988928	CallExpression	EG ( user_exception_handler )		3988792	0					
ANR	3988929	Callee	EG		3988792	0					
ANR	3988930	Identifier	EG		3988792	0					
ANR	3988931	ArgumentList	user_exception_handler		3988792	1					
ANR	3988932	Argument	user_exception_handler		3988792	0					
ANR	3988933	Identifier	user_exception_handler		3988792	0					
ANR	3988934	Identifier	IS_UNDEF		3988792	1					
ANR	3988935	CompoundStatement		41:54:1368:1368	3988792	1					
ANR	3988936	ExpressionStatement	zeh = & EG ( user_exception_handler )	292:3:8545:8578	3988792	0	True				
ANR	3988937	AssignmentExpression	zeh = & EG ( user_exception_handler )		3988792	0		=			
ANR	3988938	Identifier	zeh		3988792	0					
ANR	3988939	UnaryOperationExpression	& EG ( user_exception_handler )		3988792	1					
ANR	3988940	UnaryOperator	&		3988792	0					
ANR	3988941	CallExpression	EG ( user_exception_handler )		3988792	1					
ANR	3988942	Callee	EG		3988792	0					
ANR	3988943	Identifier	EG		3988792	0					
ANR	3988944	ArgumentList	user_exception_handler		3988792	1					
ANR	3988945	Argument	user_exception_handler		3988792	0					
ANR	3988946	Identifier	user_exception_handler		3988792	0					
ANR	3988947	ExpressionStatement	zval_ptr_dtor ( zeh )	293:3:8583:8601	3988792	1	True				
ANR	3988948	CallExpression	zval_ptr_dtor ( zeh )		3988792	0					
ANR	3988949	Callee	zval_ptr_dtor		3988792	0					
ANR	3988950	Identifier	zval_ptr_dtor		3988792	0					
ANR	3988951	ArgumentList	zeh		3988792	1					
ANR	3988952	Argument	zeh		3988792	0					
ANR	3988953	Identifier	zeh		3988792	0					
ANR	3988954	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_exception_handler ) )	294:3:8606:8645	3988792	2	True				
ANR	3988955	CallExpression	ZVAL_UNDEF ( & EG ( user_exception_handler ) )		3988792	0					
ANR	3988956	Callee	ZVAL_UNDEF		3988792	0					
ANR	3988957	Identifier	ZVAL_UNDEF		3988792	0					
ANR	3988958	ArgumentList	& EG ( user_exception_handler )		3988792	1					
ANR	3988959	Argument	& EG ( user_exception_handler )		3988792	0					
ANR	3988960	UnaryOperationExpression	& EG ( user_exception_handler )		3988792	0					
ANR	3988961	UnaryOperator	&		3988792	0					
ANR	3988962	CallExpression	EG ( user_exception_handler )		3988792	1					
ANR	3988963	Callee	EG		3988792	0					
ANR	3988964	Identifier	EG		3988792	0					
ANR	3988965	ArgumentList	user_exception_handler		3988792	1					
ANR	3988966	Argument	user_exception_handler		3988792	0					
ANR	3988967	Identifier	user_exception_handler		3988792	0					
ANR	3988968	ExpressionStatement	"zend_stack_clean ( & EG ( user_error_handlers_error_reporting ) , NULL , 1 )"	297:2:8654:8721	3988792	3	True				
ANR	3988969	CallExpression	"zend_stack_clean ( & EG ( user_error_handlers_error_reporting ) , NULL , 1 )"		3988792	0					
ANR	3988970	Callee	zend_stack_clean		3988792	0					
ANR	3988971	Identifier	zend_stack_clean		3988792	0					
ANR	3988972	ArgumentList	& EG ( user_error_handlers_error_reporting )		3988792	1					
ANR	3988973	Argument	& EG ( user_error_handlers_error_reporting )		3988792	0					
ANR	3988974	UnaryOperationExpression	& EG ( user_error_handlers_error_reporting )		3988792	0					
ANR	3988975	UnaryOperator	&		3988792	0					
ANR	3988976	CallExpression	EG ( user_error_handlers_error_reporting )		3988792	1					
ANR	3988977	Callee	EG		3988792	0					
ANR	3988978	Identifier	EG		3988792	0					
ANR	3988979	ArgumentList	user_error_handlers_error_reporting		3988792	1					
ANR	3988980	Argument	user_error_handlers_error_reporting		3988792	0					
ANR	3988981	Identifier	user_error_handlers_error_reporting		3988792	0					
ANR	3988982	Argument	NULL		3988792	1					
ANR	3988983	Identifier	NULL		3988792	0					
ANR	3988984	Argument	1		3988792	2					
ANR	3988985	PrimaryExpression	1		3988792	0					
ANR	3988986	Statement	zend_stack_clean	298:2:8725:8740	3988792	4	True				
ANR	3988987	Statement	(	298:18:8741:8741	3988792	5	True				
ANR	3988988	Statement	&	298:19:8742:8742	3988792	6	True				
ANR	3988989	Statement	EG	298:20:8743:8744	3988792	7	True				
ANR	3988990	Statement	(	298:22:8745:8745	3988792	8	True				
ANR	3988991	Statement	user_error_handlers	298:23:8746:8764	3988792	9	True				
ANR	3988992	Statement	)	298:42:8765:8765	3988792	10	True				
ANR	3988993	Statement	","	298:43:8766:8766	3988792	11	True				
ANR	3988994	Statement	(	298:45:8768:8768	3988792	12	True				
ANR	3988995	Statement	void	298:46:8769:8772	3988792	13	True				
ANR	3988996	Statement	(	298:51:8774:8774	3988792	14	True				
ANR	3988997	Statement	*	298:52:8775:8775	3988792	15	True				
ANR	3988998	Statement	)	298:53:8776:8776	3988792	16	True				
ANR	3988999	Statement	(	298:54:8777:8777	3988792	17	True				
ANR	3989000	Statement	void	298:55:8778:8781	3988792	18	True				
ANR	3989001	Statement	*	298:60:8783:8783	3988792	19	True				
ANR	3989002	Statement	)	298:61:8784:8784	3988792	20	True				
ANR	3989003	Statement	)	298:62:8785:8785	3988792	21	True				
ANR	3989004	Statement	ZVAL_DESTRUCTOR	298:63:8786:8800	3988792	22	True				
ANR	3989005	Statement	","	298:78:8801:8801	3988792	23	True				
ANR	3989006	Statement	1	298:80:8803:8803	3988792	24	True				
ANR	3989007	Statement	)	298:81:8804:8804	3988792	25	True				
ANR	3989008	ExpressionStatement		298:82:8805:8805	3988792	26	True				
ANR	3989009	Statement	zend_stack_clean	299:2:8809:8824	3988792	27	True				
ANR	3989010	Statement	(	299:18:8825:8825	3988792	28	True				
ANR	3989011	Statement	&	299:19:8826:8826	3988792	29	True				
ANR	3989012	Statement	EG	299:20:8827:8828	3988792	30	True				
ANR	3989013	Statement	(	299:22:8829:8829	3988792	31	True				
ANR	3989014	Statement	user_exception_handlers	299:23:8830:8852	3988792	32	True				
ANR	3989015	Statement	)	299:46:8853:8853	3988792	33	True				
ANR	3989016	Statement	","	299:47:8854:8854	3988792	34	True				
ANR	3989017	Statement	(	299:49:8856:8856	3988792	35	True				
ANR	3989018	Statement	void	299:50:8857:8860	3988792	36	True				
ANR	3989019	Statement	(	299:55:8862:8862	3988792	37	True				
ANR	3989020	Statement	*	299:56:8863:8863	3988792	38	True				
ANR	3989021	Statement	)	299:57:8864:8864	3988792	39	True				
ANR	3989022	Statement	(	299:58:8865:8865	3988792	40	True				
ANR	3989023	Statement	void	299:59:8866:8869	3988792	41	True				
ANR	3989024	Statement	*	299:64:8871:8871	3988792	42	True				
ANR	3989025	Statement	)	299:65:8872:8872	3988792	43	True				
ANR	3989026	Statement	)	299:66:8873:8873	3988792	44	True				
ANR	3989027	Statement	ZVAL_DESTRUCTOR	299:67:8874:8888	3988792	45	True				
ANR	3989028	Statement	","	299:82:8889:8889	3988792	46	True				
ANR	3989029	Statement	1	299:84:8891:8891	3988792	47	True				
ANR	3989030	Statement	)	299:85:8892:8892	3988792	48	True				
ANR	3989031	ExpressionStatement		299:86:8893:8893	3988792	49	True				
ANR	3989032	ExpressionStatement	zend_end_try ( )	300:3:8898:8912	3988792	8	True				
ANR	3989033	CallExpression	zend_end_try ( )		3988792	0					
ANR	3989034	Callee	zend_end_try		3988792	0					
ANR	3989035	Identifier	zend_end_try		3988792	0					
ANR	3989036	ArgumentList			3988792	1					
ANR	3989037	Statement	zend_try	302:1:8916:8923	3988792	9	True				
ANR	3989038	CompoundStatement		52:10:1753:1753	3988792	10					
ANR	3989039	IfStatement	if ( EG ( full_tables_cleanup ) )		3988792	0					
ANR	3989040	Condition	EG ( full_tables_cleanup )	312:6:9590:9612	3988792	0	True				
ANR	3989041	CallExpression	EG ( full_tables_cleanup )		3988792	0					
ANR	3989042	Callee	EG		3988792	0					
ANR	3989043	Identifier	EG		3988792	0					
ANR	3989044	ArgumentList	full_tables_cleanup		3988792	1					
ANR	3989045	Argument	full_tables_cleanup		3988792	0					
ANR	3989046	Identifier	full_tables_cleanup		3988792	0					
ANR	3989047	CompoundStatement		62:31:2443:2443	3988792	1					
ANR	3989048	Statement	ZEND_HASH_FOREACH_PTR	313:3:9620:9640	3988792	0	True				
ANR	3989049	Statement	(	313:24:9641:9641	3988792	1	True				
ANR	3989050	Statement	EG	313:25:9642:9643	3988792	2	True				
ANR	3989051	Statement	(	313:27:9644:9644	3988792	3	True				
ANR	3989052	Statement	function_table	313:28:9645:9658	3988792	4	True				
ANR	3989053	Statement	)	313:42:9659:9659	3988792	5	True				
ANR	3989054	Statement	","	313:43:9660:9660	3988792	6	True				
ANR	3989055	Statement	func	313:45:9662:9665	3988792	7	True				
ANR	3989056	Statement	)	313:49:9666:9666	3988792	8	True				
ANR	3989057	CompoundStatement		63:51:2496:2496	3988792	9					
ANR	3989058	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		3988792	0					
ANR	3989059	Condition	func -> type == ZEND_USER_FUNCTION	314:8:9678:9709	3988792	0	True				
ANR	3989060	EqualityExpression	func -> type == ZEND_USER_FUNCTION		3988792	0		==			
ANR	3989061	PtrMemberAccess	func -> type		3988792	0					
ANR	3989062	Identifier	func		3988792	0					
ANR	3989063	Identifier	type		3988792	1					
ANR	3989064	Identifier	ZEND_USER_FUNCTION		3988792	1					
ANR	3989065	CompoundStatement		64:42:2540:2540	3988792	1					
ANR	3989066	ExpressionStatement	zend_cleanup_op_array_data ( ( zend_op_array * ) func )	315:5:9719:9769	3988792	0	True				
ANR	3989067	CallExpression	zend_cleanup_op_array_data ( ( zend_op_array * ) func )		3988792	0					
ANR	3989068	Callee	zend_cleanup_op_array_data		3988792	0					
ANR	3989069	Identifier	zend_cleanup_op_array_data		3988792	0					
ANR	3989070	ArgumentList	( zend_op_array * ) func		3988792	1					
ANR	3989071	Argument	( zend_op_array * ) func		3988792	0					
ANR	3989072	CastExpression	( zend_op_array * ) func		3988792	0					
ANR	3989073	CastTarget	zend_op_array *		3988792	0					
ANR	3989074	Identifier	func		3988792	1					
ANR	3989075	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	317:5:9782:9805	3988792	10	True				
ANR	3989076	CallExpression	ZEND_HASH_FOREACH_END ( )		3988792	0					
ANR	3989077	Callee	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989078	Identifier	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989079	ArgumentList			3988792	1					
ANR	3989080	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	318:3:9810:9838	3988792	11	True				
ANR	3989081	Statement	(	318:32:9839:9839	3988792	12	True				
ANR	3989082	Statement	EG	318:33:9840:9841	3988792	13	True				
ANR	3989083	Statement	(	318:35:9842:9842	3988792	14	True				
ANR	3989084	Statement	class_table	318:36:9843:9853	3988792	15	True				
ANR	3989085	Statement	)	318:47:9854:9854	3988792	16	True				
ANR	3989086	Statement	","	318:48:9855:9855	3988792	17	True				
ANR	3989087	Statement	ce	318:50:9857:9858	3988792	18	True				
ANR	3989088	Statement	)	318:52:9859:9859	3988792	19	True				
ANR	3989089	CompoundStatement		68:54:2689:2689	3988792	20					
ANR	3989090	IfStatement	if ( ce -> type == ZEND_USER_CLASS )		3988792	0					
ANR	3989091	Condition	ce -> type == ZEND_USER_CLASS	319:8:9871:9897	3988792	0	True				
ANR	3989092	EqualityExpression	ce -> type == ZEND_USER_CLASS		3988792	0		==			
ANR	3989093	PtrMemberAccess	ce -> type		3988792	0					
ANR	3989094	Identifier	ce		3988792	0					
ANR	3989095	Identifier	type		3988792	1					
ANR	3989096	Identifier	ZEND_USER_CLASS		3988792	1					
ANR	3989097	CompoundStatement		69:37:2728:2728	3988792	1					
ANR	3989098	ExpressionStatement	zend_cleanup_user_class_data ( ce )	320:5:9907:9939	3988792	0	True				
ANR	3989099	CallExpression	zend_cleanup_user_class_data ( ce )		3988792	0					
ANR	3989100	Callee	zend_cleanup_user_class_data		3988792	0					
ANR	3989101	Identifier	zend_cleanup_user_class_data		3988792	0					
ANR	3989102	ArgumentList	ce		3988792	1					
ANR	3989103	Argument	ce		3988792	0					
ANR	3989104	Identifier	ce		3988792	0					
ANR	3989105	ElseStatement	else		3988792	0					
ANR	3989106	CompoundStatement		71:11:2780:2780	3988792	0					
ANR	3989107	ExpressionStatement	zend_cleanup_internal_class_data ( ce )	322:5:9959:9995	3988792	0	True				
ANR	3989108	CallExpression	zend_cleanup_internal_class_data ( ce )		3988792	0					
ANR	3989109	Callee	zend_cleanup_internal_class_data		3988792	0					
ANR	3989110	Identifier	zend_cleanup_internal_class_data		3988792	0					
ANR	3989111	ArgumentList	ce		3988792	1					
ANR	3989112	Argument	ce		3988792	0					
ANR	3989113	Identifier	ce		3988792	0					
ANR	3989114	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	324:5:10008:10031	3988792	21	True				
ANR	3989115	CallExpression	ZEND_HASH_FOREACH_END ( )		3988792	0					
ANR	3989116	Callee	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989117	Identifier	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989118	ArgumentList			3988792	1					
ANR	3989119	ElseStatement	else		3988792	0					
ANR	3989120	CompoundStatement		75:9:2870:2870	3988792	0					
ANR	3989121	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	326:3:10047:10075	3988792	0	True				
ANR	3989122	Statement	(	326:32:10076:10076	3988792	1	True				
ANR	3989123	Statement	EG	326:33:10077:10078	3988792	2	True				
ANR	3989124	Statement	(	326:35:10079:10079	3988792	3	True				
ANR	3989125	Statement	function_table	326:36:10080:10093	3988792	4	True				
ANR	3989126	Statement	)	326:50:10094:10094	3988792	5	True				
ANR	3989127	Statement	","	326:51:10095:10095	3988792	6	True				
ANR	3989128	Statement	func	326:53:10097:10100	3988792	7	True				
ANR	3989129	Statement	)	326:57:10101:10101	3988792	8	True				
ANR	3989130	CompoundStatement		76:59:2931:2931	3988792	9					
ANR	3989131	IfStatement	if ( func -> type != ZEND_USER_FUNCTION )		3988792	0					
ANR	3989132	Condition	func -> type != ZEND_USER_FUNCTION	327:8:10113:10144	3988792	0	True				
ANR	3989133	EqualityExpression	func -> type != ZEND_USER_FUNCTION		3988792	0		!=			
ANR	3989134	PtrMemberAccess	func -> type		3988792	0					
ANR	3989135	Identifier	func		3988792	0					
ANR	3989136	Identifier	type		3988792	1					
ANR	3989137	Identifier	ZEND_USER_FUNCTION		3988792	1					
ANR	3989138	CompoundStatement		77:42:2975:2975	3988792	1					
ANR	3989139	BreakStatement	break ;	328:5:10154:10159	3988792	0	True				
ANR	3989140	ExpressionStatement	zend_cleanup_op_array_data ( ( zend_op_array * ) func )	330:4:10171:10221	3988792	1	True				
ANR	3989141	CallExpression	zend_cleanup_op_array_data ( ( zend_op_array * ) func )		3988792	0					
ANR	3989142	Callee	zend_cleanup_op_array_data		3988792	0					
ANR	3989143	Identifier	zend_cleanup_op_array_data		3988792	0					
ANR	3989144	ArgumentList	( zend_op_array * ) func		3988792	1					
ANR	3989145	Argument	( zend_op_array * ) func		3988792	0					
ANR	3989146	CastExpression	( zend_op_array * ) func		3988792	0					
ANR	3989147	CastTarget	zend_op_array *		3988792	0					
ANR	3989148	Identifier	func		3988792	1					
ANR	3989149	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	331:5:10228:10251	3988792	10	True				
ANR	3989150	CallExpression	ZEND_HASH_FOREACH_END ( )		3988792	0					
ANR	3989151	Callee	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989152	Identifier	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989153	ArgumentList			3988792	1					
ANR	3989154	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	332:3:10256:10284	3988792	11	True				
ANR	3989155	Statement	(	332:32:10285:10285	3988792	12	True				
ANR	3989156	Statement	EG	332:33:10286:10287	3988792	13	True				
ANR	3989157	Statement	(	332:35:10288:10288	3988792	14	True				
ANR	3989158	Statement	class_table	332:36:10289:10299	3988792	15	True				
ANR	3989159	Statement	)	332:47:10300:10300	3988792	16	True				
ANR	3989160	Statement	","	332:48:10301:10301	3988792	17	True				
ANR	3989161	Statement	ce	332:50:10303:10304	3988792	18	True				
ANR	3989162	Statement	)	332:52:10305:10305	3988792	19	True				
ANR	3989163	CompoundStatement		82:54:3135:3135	3988792	20					
ANR	3989164	IfStatement	if ( ce -> type != ZEND_USER_CLASS )		3988792	0					
ANR	3989165	Condition	ce -> type != ZEND_USER_CLASS	333:8:10317:10343	3988792	0	True				
ANR	3989166	EqualityExpression	ce -> type != ZEND_USER_CLASS		3988792	0		!=			
ANR	3989167	PtrMemberAccess	ce -> type		3988792	0					
ANR	3989168	Identifier	ce		3988792	0					
ANR	3989169	Identifier	type		3988792	1					
ANR	3989170	Identifier	ZEND_USER_CLASS		3988792	1					
ANR	3989171	CompoundStatement		83:37:3174:3174	3988792	1					
ANR	3989172	BreakStatement	break ;	334:5:10353:10358	3988792	0	True				
ANR	3989173	ExpressionStatement	zend_cleanup_user_class_data ( ce )	336:4:10370:10402	3988792	1	True				
ANR	3989174	CallExpression	zend_cleanup_user_class_data ( ce )		3988792	0					
ANR	3989175	Callee	zend_cleanup_user_class_data		3988792	0					
ANR	3989176	Identifier	zend_cleanup_user_class_data		3988792	0					
ANR	3989177	ArgumentList	ce		3988792	1					
ANR	3989178	Argument	ce		3988792	0					
ANR	3989179	Identifier	ce		3988792	0					
ANR	3989180	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	337:5:10409:10432	3988792	21	True				
ANR	3989181	CallExpression	ZEND_HASH_FOREACH_END ( )		3988792	0					
ANR	3989182	Callee	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989183	Identifier	ZEND_HASH_FOREACH_END		3988792	0					
ANR	3989184	ArgumentList			3988792	1					
ANR	3989185	ExpressionStatement	zend_cleanup_internal_classes ( )	338:3:10437:10468	3988792	22	True				
ANR	3989186	CallExpression	zend_cleanup_internal_classes ( )		3988792	0					
ANR	3989187	Callee	zend_cleanup_internal_classes		3988792	0					
ANR	3989188	Identifier	zend_cleanup_internal_classes		3988792	0					
ANR	3989189	ArgumentList			3988792	1					
ANR	3989190	ExpressionStatement	zend_end_try ( )	340:3:10477:10491	3988792	11	True				
ANR	3989191	CallExpression	zend_end_try ( )		3988792	0					
ANR	3989192	Callee	zend_end_try		3988792	0					
ANR	3989193	Identifier	zend_end_try		3988792	0					
ANR	3989194	ArgumentList			3988792	1					
ANR	3989195	Statement	zend_try	342:1:10495:10502	3988792	12	True				
ANR	3989196	CompoundStatement		92:10:3332:3332	3988792	13					
ANR	3989197	ExpressionStatement	zend_llist_destroy ( & CG ( open_files ) )	343:2:10508:10543	3988792	0	True				
ANR	3989198	CallExpression	zend_llist_destroy ( & CG ( open_files ) )		3988792	0					
ANR	3989199	Callee	zend_llist_destroy		3988792	0					
ANR	3989200	Identifier	zend_llist_destroy		3988792	0					
ANR	3989201	ArgumentList	& CG ( open_files )		3988792	1					
ANR	3989202	Argument	& CG ( open_files )		3988792	0					
ANR	3989203	UnaryOperationExpression	& CG ( open_files )		3988792	0					
ANR	3989204	UnaryOperator	&		3988792	0					
ANR	3989205	CallExpression	CG ( open_files )		3988792	1					
ANR	3989206	Callee	CG		3988792	0					
ANR	3989207	Identifier	CG		3988792	0					
ANR	3989208	ArgumentList	open_files		3988792	1					
ANR	3989209	Argument	open_files		3988792	0					
ANR	3989210	Identifier	open_files		3988792	0					
ANR	3989211	ExpressionStatement	zend_end_try ( )	344:3:10548:10562	3988792	14	True				
ANR	3989212	CallExpression	zend_end_try ( )		3988792	0					
ANR	3989213	Callee	zend_end_try		3988792	0					
ANR	3989214	Identifier	zend_end_try		3988792	0					
ANR	3989215	ArgumentList			3988792	1					
ANR	3989216	Statement	zend_try	346:1:10566:10573	3988792	15	True				
ANR	3989217	CompoundStatement		96:10:3403:3403	3988792	16					
ANR	3989218	ExpressionStatement	zend_close_rsrc_list ( & EG ( regular_list ) )	347:2:10579:10618	3988792	0	True				
ANR	3989219	CallExpression	zend_close_rsrc_list ( & EG ( regular_list ) )		3988792	0					
ANR	3989220	Callee	zend_close_rsrc_list		3988792	0					
ANR	3989221	Identifier	zend_close_rsrc_list		3988792	0					
ANR	3989222	ArgumentList	& EG ( regular_list )		3988792	1					
ANR	3989223	Argument	& EG ( regular_list )		3988792	0					
ANR	3989224	UnaryOperationExpression	& EG ( regular_list )		3988792	0					
ANR	3989225	UnaryOperator	&		3988792	0					
ANR	3989226	CallExpression	EG ( regular_list )		3988792	1					
ANR	3989227	Callee	EG		3988792	0					
ANR	3989228	Identifier	EG		3988792	0					
ANR	3989229	ArgumentList	regular_list		3988792	1					
ANR	3989230	Argument	regular_list		3988792	0					
ANR	3989231	Identifier	regular_list		3988792	0					
ANR	3989232	ExpressionStatement	zend_end_try ( )	348:3:10623:10637	3988792	17	True				
ANR	3989233	CallExpression	zend_end_try ( )		3988792	0					
ANR	3989234	Callee	zend_end_try		3988792	0					
ANR	3989235	Identifier	zend_end_try		3988792	0					
ANR	3989236	ArgumentList			3988792	1					
ANR	3989237	IfStatement	if ( GC_G ( gc_enabled ) && ! CG ( unclean_shutdown ) )		3988792	18					
ANR	3989238	Condition	GC_G ( gc_enabled ) && ! CG ( unclean_shutdown )	351:5:10660:10700	3988792	0	True				
ANR	3989239	AndExpression	GC_G ( gc_enabled ) && ! CG ( unclean_shutdown )		3988792	0		&&			
ANR	3989240	CallExpression	GC_G ( gc_enabled )		3988792	0					
ANR	3989241	Callee	GC_G		3988792	0					
ANR	3989242	Identifier	GC_G		3988792	0					
ANR	3989243	ArgumentList	gc_enabled		3988792	1					
ANR	3989244	Argument	gc_enabled		3988792	0					
ANR	3989245	Identifier	gc_enabled		3988792	0					
ANR	3989246	UnaryOperationExpression	! CG ( unclean_shutdown )		3988792	1					
ANR	3989247	UnaryOperator	!		3988792	0					
ANR	3989248	CallExpression	CG ( unclean_shutdown )		3988792	1					
ANR	3989249	Callee	CG		3988792	0					
ANR	3989250	Identifier	CG		3988792	0					
ANR	3989251	ArgumentList	unclean_shutdown		3988792	1					
ANR	3989252	Argument	unclean_shutdown		3988792	0					
ANR	3989253	Identifier	unclean_shutdown		3988792	0					
ANR	3989254	CompoundStatement		101:48:3531:3531	3988792	1					
ANR	3989255	ExpressionStatement	gc_collect_cycles ( )	352:2:10707:10726	3988792	0	True				
ANR	3989256	CallExpression	gc_collect_cycles ( )		3988792	0					
ANR	3989257	Callee	gc_collect_cycles		3988792	0					
ANR	3989258	Identifier	gc_collect_cycles		3988792	0					
ANR	3989259	ArgumentList			3988792	1					
ANR	3989260	Statement	zend_try	356:1:10740:10747	3988792	19	True				
ANR	3989261	CompoundStatement		106:10:3577:3577	3988792	20					
ANR	3989262	ExpressionStatement	zend_objects_store_free_object_storage ( & EG ( objects_store ) )	357:2:10753:10811	3988792	0	True				
ANR	3989263	CallExpression	zend_objects_store_free_object_storage ( & EG ( objects_store ) )		3988792	0					
ANR	3989264	Callee	zend_objects_store_free_object_storage		3988792	0					
ANR	3989265	Identifier	zend_objects_store_free_object_storage		3988792	0					
ANR	3989266	ArgumentList	& EG ( objects_store )		3988792	1					
ANR	3989267	Argument	& EG ( objects_store )		3988792	0					
ANR	3989268	UnaryOperationExpression	& EG ( objects_store )		3988792	0					
ANR	3989269	UnaryOperator	&		3988792	0					
ANR	3989270	CallExpression	EG ( objects_store )		3988792	1					
ANR	3989271	Callee	EG		3988792	0					
ANR	3989272	Identifier	EG		3988792	0					
ANR	3989273	ArgumentList	objects_store		3988792	1					
ANR	3989274	Argument	objects_store		3988792	0					
ANR	3989275	Identifier	objects_store		3988792	0					
ANR	3989276	ExpressionStatement	zend_vm_stack_destroy ( )	359:2:10816:10839	3988792	1	True				
ANR	3989277	CallExpression	zend_vm_stack_destroy ( )		3988792	0					
ANR	3989278	Callee	zend_vm_stack_destroy		3988792	0					
ANR	3989279	Identifier	zend_vm_stack_destroy		3988792	0					
ANR	3989280	ArgumentList			3988792	1					
ANR	3989281	IfStatement	if ( EG ( full_tables_cleanup ) )		3988792	2					
ANR	3989282	Condition	EG ( full_tables_cleanup )	362:6:10878:10900	3988792	0	True				
ANR	3989283	CallExpression	EG ( full_tables_cleanup )		3988792	0					
ANR	3989284	Callee	EG		3988792	0					
ANR	3989285	Identifier	EG		3988792	0					
ANR	3989286	ArgumentList	full_tables_cleanup		3988792	1					
ANR	3989287	Argument	full_tables_cleanup		3988792	0					
ANR	3989288	Identifier	full_tables_cleanup		3988792	0					
ANR	3989289	CompoundStatement		112:31:3731:3731	3988792	1					
ANR	3989290	ExpressionStatement	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function_full )"	363:3:10908:10987	3988792	0	True				
ANR	3989291	CallExpression	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function_full )"		3988792	0					
ANR	3989292	Callee	zend_hash_reverse_apply		3988792	0					
ANR	3989293	Identifier	zend_hash_reverse_apply		3988792	0					
ANR	3989294	ArgumentList	EG ( function_table )		3988792	1					
ANR	3989295	Argument	EG ( function_table )		3988792	0					
ANR	3989296	CallExpression	EG ( function_table )		3988792	0					
ANR	3989297	Callee	EG		3988792	0					
ANR	3989298	Identifier	EG		3988792	0					
ANR	3989299	ArgumentList	function_table		3988792	1					
ANR	3989300	Argument	function_table		3988792	0					
ANR	3989301	Identifier	function_table		3988792	0					
ANR	3989302	Argument	clean_non_persistent_function_full		3988792	1					
ANR	3989303	Identifier	clean_non_persistent_function_full		3988792	0					
ANR	3989304	ExpressionStatement	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class_full )"	364:3:10992:11065	3988792	1	True				
ANR	3989305	CallExpression	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class_full )"		3988792	0					
ANR	3989306	Callee	zend_hash_reverse_apply		3988792	0					
ANR	3989307	Identifier	zend_hash_reverse_apply		3988792	0					
ANR	3989308	ArgumentList	EG ( class_table )		3988792	1					
ANR	3989309	Argument	EG ( class_table )		3988792	0					
ANR	3989310	CallExpression	EG ( class_table )		3988792	0					
ANR	3989311	Callee	EG		3988792	0					
ANR	3989312	Identifier	EG		3988792	0					
ANR	3989313	ArgumentList	class_table		3988792	1					
ANR	3989314	Argument	class_table		3988792	0					
ANR	3989315	Identifier	class_table		3988792	0					
ANR	3989316	Argument	clean_non_persistent_class_full		3988792	1					
ANR	3989317	Identifier	clean_non_persistent_class_full		3988792	0					
ANR	3989318	ElseStatement	else		3988792	0					
ANR	3989319	CompoundStatement		115:9:3904:3904	3988792	0					
ANR	3989320	ExpressionStatement	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function )"	366:3:11081:11155	3988792	0	True				
ANR	3989321	CallExpression	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function )"		3988792	0					
ANR	3989322	Callee	zend_hash_reverse_apply		3988792	0					
ANR	3989323	Identifier	zend_hash_reverse_apply		3988792	0					
ANR	3989324	ArgumentList	EG ( function_table )		3988792	1					
ANR	3989325	Argument	EG ( function_table )		3988792	0					
ANR	3989326	CallExpression	EG ( function_table )		3988792	0					
ANR	3989327	Callee	EG		3988792	0					
ANR	3989328	Identifier	EG		3988792	0					
ANR	3989329	ArgumentList	function_table		3988792	1					
ANR	3989330	Argument	function_table		3988792	0					
ANR	3989331	Identifier	function_table		3988792	0					
ANR	3989332	Argument	clean_non_persistent_function		3988792	1					
ANR	3989333	Identifier	clean_non_persistent_function		3988792	0					
ANR	3989334	ExpressionStatement	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class )"	367:3:11160:11228	3988792	1	True				
ANR	3989335	CallExpression	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class )"		3988792	0					
ANR	3989336	Callee	zend_hash_reverse_apply		3988792	0					
ANR	3989337	Identifier	zend_hash_reverse_apply		3988792	0					
ANR	3989338	ArgumentList	EG ( class_table )		3988792	1					
ANR	3989339	Argument	EG ( class_table )		3988792	0					
ANR	3989340	CallExpression	EG ( class_table )		3988792	0					
ANR	3989341	Callee	EG		3988792	0					
ANR	3989342	Identifier	EG		3988792	0					
ANR	3989343	ArgumentList	class_table		3988792	1					
ANR	3989344	Argument	class_table		3988792	0					
ANR	3989345	Identifier	class_table		3988792	0					
ANR	3989346	Argument	clean_non_persistent_class		3988792	1					
ANR	3989347	Identifier	clean_non_persistent_class		3988792	0					
ANR	3989348	WhileStatement	while ( EG ( symtable_cache_ptr ) >= EG ( symtable_cache ) )		3988792	3					
ANR	3989349	Condition	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )	370:9:11244:11285	3988792	0	True				
ANR	3989350	RelationalExpression	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )		3988792	0		>=			
ANR	3989351	CallExpression	EG ( symtable_cache_ptr )		3988792	0					
ANR	3989352	Callee	EG		3988792	0					
ANR	3989353	Identifier	EG		3988792	0					
ANR	3989354	ArgumentList	symtable_cache_ptr		3988792	1					
ANR	3989355	Argument	symtable_cache_ptr		3988792	0					
ANR	3989356	Identifier	symtable_cache_ptr		3988792	0					
ANR	3989357	CallExpression	EG ( symtable_cache )		3988792	1					
ANR	3989358	Callee	EG		3988792	0					
ANR	3989359	Identifier	EG		3988792	0					
ANR	3989360	ArgumentList	symtable_cache		3988792	1					
ANR	3989361	Argument	symtable_cache		3988792	0					
ANR	3989362	Identifier	symtable_cache		3988792	0					
ANR	3989363	CompoundStatement		120:53:4116:4116	3988792	1					
ANR	3989364	ExpressionStatement	zend_hash_destroy ( * EG ( symtable_cache_ptr ) )	371:3:11293:11335	3988792	0	True				
ANR	3989365	CallExpression	zend_hash_destroy ( * EG ( symtable_cache_ptr ) )		3988792	0					
ANR	3989366	Callee	zend_hash_destroy		3988792	0					
ANR	3989367	Identifier	zend_hash_destroy		3988792	0					
ANR	3989368	ArgumentList	* EG ( symtable_cache_ptr )		3988792	1					
ANR	3989369	Argument	* EG ( symtable_cache_ptr )		3988792	0					
ANR	3989370	UnaryOperationExpression	* EG ( symtable_cache_ptr )		3988792	0					
ANR	3989371	UnaryOperator	*		3988792	0					
ANR	3989372	CallExpression	EG ( symtable_cache_ptr )		3988792	1					
ANR	3989373	Callee	EG		3988792	0					
ANR	3989374	Identifier	EG		3988792	0					
ANR	3989375	ArgumentList	symtable_cache_ptr		3988792	1					
ANR	3989376	Argument	symtable_cache_ptr		3988792	0					
ANR	3989377	Identifier	symtable_cache_ptr		3988792	0					
ANR	3989378	ExpressionStatement	FREE_HASHTABLE ( * EG ( symtable_cache_ptr ) )	372:3:11340:11379	3988792	1	True				
ANR	3989379	CallExpression	FREE_HASHTABLE ( * EG ( symtable_cache_ptr ) )		3988792	0					
ANR	3989380	Callee	FREE_HASHTABLE		3988792	0					
ANR	3989381	Identifier	FREE_HASHTABLE		3988792	0					
ANR	3989382	ArgumentList	* EG ( symtable_cache_ptr )		3988792	1					
ANR	3989383	Argument	* EG ( symtable_cache_ptr )		3988792	0					
ANR	3989384	UnaryOperationExpression	* EG ( symtable_cache_ptr )		3988792	0					
ANR	3989385	UnaryOperator	*		3988792	0					
ANR	3989386	CallExpression	EG ( symtable_cache_ptr )		3988792	1					
ANR	3989387	Callee	EG		3988792	0					
ANR	3989388	Identifier	EG		3988792	0					
ANR	3989389	ArgumentList	symtable_cache_ptr		3988792	1					
ANR	3989390	Argument	symtable_cache_ptr		3988792	0					
ANR	3989391	Identifier	symtable_cache_ptr		3988792	0					
ANR	3989392	ExpressionStatement	EG ( symtable_cache_ptr ) --	373:3:11384:11408	3988792	2	True				
ANR	3989393	PostIncDecOperationExpression	EG ( symtable_cache_ptr ) --		3988792	0					
ANR	3989394	CallExpression	EG ( symtable_cache_ptr )		3988792	0					
ANR	3989395	Callee	EG		3988792	0					
ANR	3989396	Identifier	EG		3988792	0					
ANR	3989397	ArgumentList	symtable_cache_ptr		3988792	1					
ANR	3989398	Argument	symtable_cache_ptr		3988792	0					
ANR	3989399	Identifier	symtable_cache_ptr		3988792	0					
ANR	3989400	IncDec	--		3988792	1					
ANR	3989401	ExpressionStatement	zend_end_try ( )	375:3:11417:11431	3988792	21	True				
ANR	3989402	CallExpression	zend_end_try ( )		3988792	0					
ANR	3989403	Callee	zend_end_try		3988792	0					
ANR	3989404	Identifier	zend_end_try		3988792	0					
ANR	3989405	ArgumentList			3988792	1					
ANR	3989406	Statement	zend_try	377:1:11435:11442	3988792	22	True				
ANR	3989407	CompoundStatement		127:10:4272:4272	3988792	23					
ANR	3989408	ExpressionStatement	clean_non_persistent_constants ( )	378:2:11448:11480	3988792	0	True				
ANR	3989409	CallExpression	clean_non_persistent_constants ( )		3988792	0					
ANR	3989410	Callee	clean_non_persistent_constants		3988792	0					
ANR	3989411	Identifier	clean_non_persistent_constants		3988792	0					
ANR	3989412	ArgumentList			3988792	1					
ANR	3989413	ExpressionStatement	zend_end_try ( )	379:3:11485:11499	3988792	24	True				
ANR	3989414	CallExpression	zend_end_try ( )		3988792	0					
ANR	3989415	Callee	zend_end_try		3988792	0					
ANR	3989416	Identifier	zend_end_try		3988792	0					
ANR	3989417	ArgumentList			3988792	1					
ANR	3989418	Statement	zend_try	381:1:11503:11510	3988792	25	True				
ANR	3989419	CompoundStatement		131:10:4340:4340	3988792	26					
ANR	3989420	ExpressionStatement	"signal ( SIGSEGV , original_sigsegv_handler )"	383:1:11533:11574	3988792	0	True				
ANR	3989421	CallExpression	"signal ( SIGSEGV , original_sigsegv_handler )"		3988792	0					
ANR	3989422	Callee	signal		3988792	0					
ANR	3989423	Identifier	signal		3988792	0					
ANR	3989424	ArgumentList	SIGSEGV		3988792	1					
ANR	3989425	Argument	SIGSEGV		3988792	0					
ANR	3989426	Identifier	SIGSEGV		3988792	0					
ANR	3989427	Argument	original_sigsegv_handler		3988792	1					
ANR	3989428	Identifier	original_sigsegv_handler		3988792	0					
ANR	3989429	ExpressionStatement	zend_hash_destroy ( & EG ( included_files ) )	386:2:11586:11624	3988792	1	True				
ANR	3989430	CallExpression	zend_hash_destroy ( & EG ( included_files ) )		3988792	0					
ANR	3989431	Callee	zend_hash_destroy		3988792	0					
ANR	3989432	Identifier	zend_hash_destroy		3988792	0					
ANR	3989433	ArgumentList	& EG ( included_files )		3988792	1					
ANR	3989434	Argument	& EG ( included_files )		3988792	0					
ANR	3989435	UnaryOperationExpression	& EG ( included_files )		3988792	0					
ANR	3989436	UnaryOperator	&		3988792	0					
ANR	3989437	CallExpression	EG ( included_files )		3988792	1					
ANR	3989438	Callee	EG		3988792	0					
ANR	3989439	Identifier	EG		3988792	0					
ANR	3989440	ArgumentList	included_files		3988792	1					
ANR	3989441	Argument	included_files		3988792	0					
ANR	3989442	Identifier	included_files		3988792	0					
ANR	3989443	ExpressionStatement	zend_stack_destroy ( & EG ( user_error_handlers_error_reporting ) )	388:2:11629:11689	3988792	2	True				
ANR	3989444	CallExpression	zend_stack_destroy ( & EG ( user_error_handlers_error_reporting ) )		3988792	0					
ANR	3989445	Callee	zend_stack_destroy		3988792	0					
ANR	3989446	Identifier	zend_stack_destroy		3988792	0					
ANR	3989447	ArgumentList	& EG ( user_error_handlers_error_reporting )		3988792	1					
ANR	3989448	Argument	& EG ( user_error_handlers_error_reporting )		3988792	0					
ANR	3989449	UnaryOperationExpression	& EG ( user_error_handlers_error_reporting )		3988792	0					
ANR	3989450	UnaryOperator	&		3988792	0					
ANR	3989451	CallExpression	EG ( user_error_handlers_error_reporting )		3988792	1					
ANR	3989452	Callee	EG		3988792	0					
ANR	3989453	Identifier	EG		3988792	0					
ANR	3989454	ArgumentList	user_error_handlers_error_reporting		3988792	1					
ANR	3989455	Argument	user_error_handlers_error_reporting		3988792	0					
ANR	3989456	Identifier	user_error_handlers_error_reporting		3988792	0					
ANR	3989457	ExpressionStatement	zend_stack_destroy ( & EG ( user_error_handlers ) )	389:2:11693:11737	3988792	3	True				
ANR	3989458	CallExpression	zend_stack_destroy ( & EG ( user_error_handlers ) )		3988792	0					
ANR	3989459	Callee	zend_stack_destroy		3988792	0					
ANR	3989460	Identifier	zend_stack_destroy		3988792	0					
ANR	3989461	ArgumentList	& EG ( user_error_handlers )		3988792	1					
ANR	3989462	Argument	& EG ( user_error_handlers )		3988792	0					
ANR	3989463	UnaryOperationExpression	& EG ( user_error_handlers )		3988792	0					
ANR	3989464	UnaryOperator	&		3988792	0					
ANR	3989465	CallExpression	EG ( user_error_handlers )		3988792	1					
ANR	3989466	Callee	EG		3988792	0					
ANR	3989467	Identifier	EG		3988792	0					
ANR	3989468	ArgumentList	user_error_handlers		3988792	1					
ANR	3989469	Argument	user_error_handlers		3988792	0					
ANR	3989470	Identifier	user_error_handlers		3988792	0					
ANR	3989471	ExpressionStatement	zend_stack_destroy ( & EG ( user_exception_handlers ) )	390:2:11741:11789	3988792	4	True				
ANR	3989472	CallExpression	zend_stack_destroy ( & EG ( user_exception_handlers ) )		3988792	0					
ANR	3989473	Callee	zend_stack_destroy		3988792	0					
ANR	3989474	Identifier	zend_stack_destroy		3988792	0					
ANR	3989475	ArgumentList	& EG ( user_exception_handlers )		3988792	1					
ANR	3989476	Argument	& EG ( user_exception_handlers )		3988792	0					
ANR	3989477	UnaryOperationExpression	& EG ( user_exception_handlers )		3988792	0					
ANR	3989478	UnaryOperator	&		3988792	0					
ANR	3989479	CallExpression	EG ( user_exception_handlers )		3988792	1					
ANR	3989480	Callee	EG		3988792	0					
ANR	3989481	Identifier	EG		3988792	0					
ANR	3989482	ArgumentList	user_exception_handlers		3988792	1					
ANR	3989483	Argument	user_exception_handlers		3988792	0					
ANR	3989484	Identifier	user_exception_handlers		3988792	0					
ANR	3989485	ExpressionStatement	zend_objects_store_destroy ( & EG ( objects_store ) )	391:2:11793:11839	3988792	5	True				
ANR	3989486	CallExpression	zend_objects_store_destroy ( & EG ( objects_store ) )		3988792	0					
ANR	3989487	Callee	zend_objects_store_destroy		3988792	0					
ANR	3989488	Identifier	zend_objects_store_destroy		3988792	0					
ANR	3989489	ArgumentList	& EG ( objects_store )		3988792	1					
ANR	3989490	Argument	& EG ( objects_store )		3988792	0					
ANR	3989491	UnaryOperationExpression	& EG ( objects_store )		3988792	0					
ANR	3989492	UnaryOperator	&		3988792	0					
ANR	3989493	CallExpression	EG ( objects_store )		3988792	1					
ANR	3989494	Callee	EG		3988792	0					
ANR	3989495	Identifier	EG		3988792	0					
ANR	3989496	ArgumentList	objects_store		3988792	1					
ANR	3989497	Argument	objects_store		3988792	0					
ANR	3989498	Identifier	objects_store		3988792	0					
ANR	3989499	IfStatement	if ( EG ( in_autoload ) )		3988792	6					
ANR	3989500	Condition	EG ( in_autoload )	392:6:11847:11861	3988792	0	True				
ANR	3989501	CallExpression	EG ( in_autoload )		3988792	0					
ANR	3989502	Callee	EG		3988792	0					
ANR	3989503	Identifier	EG		3988792	0					
ANR	3989504	ArgumentList	in_autoload		3988792	1					
ANR	3989505	Argument	in_autoload		3988792	0					
ANR	3989506	Identifier	in_autoload		3988792	0					
ANR	3989507	CompoundStatement		142:23:4692:4692	3988792	1					
ANR	3989508	ExpressionStatement	zend_hash_destroy ( EG ( in_autoload ) )	393:3:11869:11903	3988792	0	True				
ANR	3989509	CallExpression	zend_hash_destroy ( EG ( in_autoload ) )		3988792	0					
ANR	3989510	Callee	zend_hash_destroy		3988792	0					
ANR	3989511	Identifier	zend_hash_destroy		3988792	0					
ANR	3989512	ArgumentList	EG ( in_autoload )		3988792	1					
ANR	3989513	Argument	EG ( in_autoload )		3988792	0					
ANR	3989514	CallExpression	EG ( in_autoload )		3988792	0					
ANR	3989515	Callee	EG		3988792	0					
ANR	3989516	Identifier	EG		3988792	0					
ANR	3989517	ArgumentList	in_autoload		3988792	1					
ANR	3989518	Argument	in_autoload		3988792	0					
ANR	3989519	Identifier	in_autoload		3988792	0					
ANR	3989520	ExpressionStatement	FREE_HASHTABLE ( EG ( in_autoload ) )	394:3:11908:11939	3988792	1	True				
ANR	3989521	CallExpression	FREE_HASHTABLE ( EG ( in_autoload ) )		3988792	0					
ANR	3989522	Callee	FREE_HASHTABLE		3988792	0					
ANR	3989523	Identifier	FREE_HASHTABLE		3988792	0					
ANR	3989524	ArgumentList	EG ( in_autoload )		3988792	1					
ANR	3989525	Argument	EG ( in_autoload )		3988792	0					
ANR	3989526	CallExpression	EG ( in_autoload )		3988792	0					
ANR	3989527	Callee	EG		3988792	0					
ANR	3989528	Identifier	EG		3988792	0					
ANR	3989529	ArgumentList	in_autoload		3988792	1					
ANR	3989530	Argument	in_autoload		3988792	0					
ANR	3989531	Identifier	in_autoload		3988792	0					
ANR	3989532	ExpressionStatement	zend_end_try ( )	396:3:11948:11962	3988792	27	True				
ANR	3989533	CallExpression	zend_end_try ( )		3988792	0					
ANR	3989534	Callee	zend_end_try		3988792	0					
ANR	3989535	Identifier	zend_end_try		3988792	0					
ANR	3989536	ArgumentList			3988792	1					
ANR	3989537	ExpressionStatement	zend_shutdown_fpu ( )	398:1:11966:11985	3988792	28	True				
ANR	3989538	CallExpression	zend_shutdown_fpu ( )		3988792	0					
ANR	3989539	Callee	zend_shutdown_fpu		3988792	0					
ANR	3989540	Identifier	zend_shutdown_fpu		3988792	0					
ANR	3989541	ArgumentList			3988792	1					
ANR	3989542	ExpressionStatement	EG ( ht_iterators_used ) = 0	400:1:11989:12014	3988792	29	True				
ANR	3989543	AssignmentExpression	EG ( ht_iterators_used ) = 0		3988792	0		=			
ANR	3989544	CallExpression	EG ( ht_iterators_used )		3988792	0					
ANR	3989545	Callee	EG		3988792	0					
ANR	3989546	Identifier	EG		3988792	0					
ANR	3989547	ArgumentList	ht_iterators_used		3988792	1					
ANR	3989548	Argument	ht_iterators_used		3988792	0					
ANR	3989549	Identifier	ht_iterators_used		3988792	0					
ANR	3989550	PrimaryExpression	0		3988792	1					
ANR	3989551	IfStatement	if ( EG ( ht_iterators ) != EG ( ht_iterators_slots ) )		3988792	30					
ANR	3989552	Condition	EG ( ht_iterators ) != EG ( ht_iterators_slots )	401:5:12021:12062	3988792	0	True				
ANR	3989553	EqualityExpression	EG ( ht_iterators ) != EG ( ht_iterators_slots )		3988792	0		!=			
ANR	3989554	CallExpression	EG ( ht_iterators )		3988792	0					
ANR	3989555	Callee	EG		3988792	0					
ANR	3989556	Identifier	EG		3988792	0					
ANR	3989557	ArgumentList	ht_iterators		3988792	1					
ANR	3989558	Argument	ht_iterators		3988792	0					
ANR	3989559	Identifier	ht_iterators		3988792	0					
ANR	3989560	CallExpression	EG ( ht_iterators_slots )		3988792	1					
ANR	3989561	Callee	EG		3988792	0					
ANR	3989562	Identifier	EG		3988792	0					
ANR	3989563	ArgumentList	ht_iterators_slots		3988792	1					
ANR	3989564	Argument	ht_iterators_slots		3988792	0					
ANR	3989565	Identifier	ht_iterators_slots		3988792	0					
ANR	3989566	CompoundStatement		151:49:4893:4893	3988792	1					
ANR	3989567	ExpressionStatement	efree ( EG ( ht_iterators ) )	402:2:12069:12092	3988792	0	True				
ANR	3989568	CallExpression	efree ( EG ( ht_iterators ) )		3988792	0					
ANR	3989569	Callee	efree		3988792	0					
ANR	3989570	Identifier	efree		3988792	0					
ANR	3989571	ArgumentList	EG ( ht_iterators )		3988792	1					
ANR	3989572	Argument	EG ( ht_iterators )		3988792	0					
ANR	3989573	CallExpression	EG ( ht_iterators )		3988792	0					
ANR	3989574	Callee	EG		3988792	0					
ANR	3989575	Identifier	EG		3988792	0					
ANR	3989576	ArgumentList	ht_iterators		3988792	1					
ANR	3989577	Argument	ht_iterators		3988792	0					
ANR	3989578	Identifier	ht_iterators		3988792	0					
ANR	3989579	ExpressionStatement	EG ( active ) = 0	405:1:12099:12113	3988792	31	True				
ANR	3989580	AssignmentExpression	EG ( active ) = 0		3988792	0		=			
ANR	3989581	CallExpression	EG ( active )		3988792	0					
ANR	3989582	Callee	EG		3988792	0					
ANR	3989583	Identifier	EG		3988792	0					
ANR	3989584	ArgumentList	active		3988792	1					
ANR	3989585	Argument	active		3988792	0					
ANR	3989586	Identifier	active		3988792	0					
ANR	3989587	PrimaryExpression	0		3988792	1					
ANR	3989588	ReturnType	void		3988792	1					
ANR	3989589	Identifier	shutdown_executor		3988792	2					
ANR	3989590	ParameterList			3988792	3					
ANR	3989591	CFGEntryNode	ENTRY		3988792		True				
ANR	3989592	CFGExitNode	EXIT		3988792		True				
ANR	3989593	CFGErrorNode	ERROR		3988792		True				
ANR	3989594	Symbol	GC_G		3988792						
ANR	3989595	Symbol	Z_TYPE		3988792						
ANR	3989596	Symbol	* ce		3988792						
ANR	3989597	Symbol	* EG ( symtable_cache_ptr )		3988792						
ANR	3989598	Symbol	& CG		3988792						
ANR	3989599	Symbol	user_error_handlers		3988792						
ANR	3989600	Symbol	ht_iterators_slots		3988792						
ANR	3989601	Symbol	user_error_handlers_error_reporting		3988792						
ANR	3989602	Symbol	ZEND_USER_CLASS		3988792						
ANR	3989603	Symbol	ZEND_USER_FUNCTION		3988792						
ANR	3989604	Symbol	zeh		3988792						
ANR	3989605	Symbol	IS_UNDEF		3988792						
ANR	3989606	Symbol	zend_unclean_zval_ptr_dtor		3988792						
ANR	3989607	Symbol	EG		3988792						
ANR	3989608	Symbol	NULL		3988792						
ANR	3989609	Symbol	clean_non_persistent_class_full		3988792						
ANR	3989610	Symbol	original_sigsegv_handler		3988792						
ANR	3989611	Symbol	symtable_cache_ptr		3988792						
ANR	3989612	Symbol	active		3988792						
ANR	3989613	Symbol	symbol_table		3988792						
ANR	3989614	Symbol	clean_non_persistent_function_full		3988792						
ANR	3989615	Symbol	zend_extension_deactivator		3988792						
ANR	3989616	Symbol	SIGSEGV		3988792						
ANR	3989617	Symbol	open_files		3988792						
ANR	3989618	Symbol	regular_list		3988792						
ANR	3989619	Symbol	function_table		3988792						
ANR	3989620	Symbol	ht_iterators		3988792						
ANR	3989621	Symbol	ce -> type		3988792						
ANR	3989622	Symbol	symtable_cache		3988792						
ANR	3989623	Symbol	& zend_extensions		3988792						
ANR	3989624	Symbol	user_error_handler		3988792						
ANR	3989625	Symbol	user_exception_handlers		3988792						
ANR	3989626	Symbol	* EG		3988792						
ANR	3989627	Symbol	& EG		3988792						
ANR	3989628	Symbol	user_exception_handler		3988792						
ANR	3989629	Symbol	clean_non_persistent_class		3988792						
ANR	3989630	Symbol	full_tables_cleanup		3988792						
ANR	3989631	Symbol	EG ( symbol_table ) . pDestructor		3988792						
ANR	3989632	Symbol	func -> type		3988792						
ANR	3989633	Symbol	included_files		3988792						
ANR	3989634	Symbol	class_table		3988792						
ANR	3989635	Symbol	ce		3988792						
ANR	3989636	Symbol	in_autoload		3988792						
ANR	3989637	Symbol	CG		3988792						
ANR	3989638	Symbol	* func		3988792						
ANR	3989639	Symbol	objects_store		3988792						
ANR	3989640	Symbol	unclean_shutdown		3988792						
ANR	3989641	Symbol	ht_iterators_used		3988792						
ANR	3989642	Symbol	func		3988792						
ANR	3989643	Symbol	clean_non_persistent_function		3988792						
ANR	3989644	Symbol	valid_symbol_table		3988792						
ANR	3989645	Symbol	gc_enabled		3988792						
ANR	3989646	Function	get_active_class_name	410:9:12177:12679							
ANR	3989647	FunctionDef	get_active_class_name (const char * * space)		3989646	0					
ANR	3989648	CompoundStatement		411:0:12241:12679	3989646	0					
ANR	3989649	IdentifierDeclStatement	zend_function * func ;	412:1:12244:12263	3989646	0	True				
ANR	3989650	IdentifierDecl	* func		3989646	0					
ANR	3989651	IdentifierDeclType	zend_function *		3989646	0					
ANR	3989652	Identifier	func		3989646	1					
ANR	3989653	IfStatement	if ( ! zend_is_executing ( ) )		3989646	1					
ANR	3989654	Condition	! zend_is_executing ( )	414:5:12271:12290	3989646	0	True				
ANR	3989655	UnaryOperationExpression	! zend_is_executing ( )		3989646	0					
ANR	3989656	UnaryOperator	!		3989646	0					
ANR	3989657	CallExpression	zend_is_executing ( )		3989646	1					
ANR	3989658	Callee	zend_is_executing		3989646	0					
ANR	3989659	Identifier	zend_is_executing		3989646	0					
ANR	3989660	ArgumentList			3989646	1					
ANR	3989661	CompoundStatement		4:27:51:51	3989646	1					
ANR	3989662	IfStatement	if ( space )		3989646	0					
ANR	3989663	Condition	space	415:6:12301:12305	3989646	0	True				
ANR	3989664	Identifier	space		3989646	0					
ANR	3989665	CompoundStatement		5:13:66:66	3989646	1					
ANR	3989666	ExpressionStatement	"* space = """""	416:3:12313:12324	3989646	0	True				
ANR	3989667	AssignmentExpression	"* space = """""		3989646	0		=			
ANR	3989668	UnaryOperationExpression	* space		3989646	0					
ANR	3989669	UnaryOperator	*		3989646	0					
ANR	3989670	Identifier	space		3989646	1					
ANR	3989671	PrimaryExpression	""""""		3989646	1					
ANR	3989672	ReturnStatement	"return """" ;"	418:2:12332:12341	3989646	1	True				
ANR	3989673	PrimaryExpression	""""""		3989646	0					
ANR	3989674	ExpressionStatement	func = EG ( current_execute_data ) -> func	421:1:12348:12385	3989646	2	True				
ANR	3989675	AssignmentExpression	func = EG ( current_execute_data ) -> func		3989646	0		=			
ANR	3989676	Identifier	func		3989646	0					
ANR	3989677	PtrMemberAccess	EG ( current_execute_data ) -> func		3989646	1					
ANR	3989678	CallExpression	EG ( current_execute_data )		3989646	0					
ANR	3989679	Callee	EG		3989646	0					
ANR	3989680	Identifier	EG		3989646	0					
ANR	3989681	ArgumentList	current_execute_data		3989646	1					
ANR	3989682	Argument	current_execute_data		3989646	0					
ANR	3989683	Identifier	current_execute_data		3989646	0					
ANR	3989684	Identifier	func		3989646	1					
ANR	3989685	SwitchStatement	switch ( func -> type )		3989646	3					
ANR	3989686	Condition	func -> type	422:9:12396:12405	3989646	0	True				
ANR	3989687	PtrMemberAccess	func -> type		3989646	0					
ANR	3989688	Identifier	func		3989646	0					
ANR	3989689	Identifier	type		3989646	1					
ANR	3989690	CompoundStatement		12:21:166:166	3989646	1					
ANR	3989691	Label	case ZEND_USER_FUNCTION :	423:2:12412:12435	3989646	0	True				
ANR	3989692	Identifier	ZEND_USER_FUNCTION		3989646	0					
ANR	3989693	Label	case ZEND_INTERNAL_FUNCTION :	424:2:12439:12466	3989646	1	True				
ANR	3989694	Identifier	ZEND_INTERNAL_FUNCTION		3989646	0					
ANR	3989695	CompoundStatement		16:3:233:274	3989646	2					
ANR	3989696	IdentifierDeclStatement	zend_class_entry * ce = func -> common . scope ;	426:3:12475:12516	3989646	0	True				
ANR	3989697	IdentifierDecl	* ce = func -> common . scope		3989646	0					
ANR	3989698	IdentifierDeclType	zend_class_entry *		3989646	0					
ANR	3989699	Identifier	ce		3989646	1					
ANR	3989700	AssignmentExpression	* ce = func -> common . scope		3989646	2		=			
ANR	3989701	Identifier	ce		3989646	0					
ANR	3989702	MemberAccess	func -> common . scope		3989646	1					
ANR	3989703	PtrMemberAccess	func -> common		3989646	0					
ANR	3989704	Identifier	func		3989646	0					
ANR	3989705	Identifier	common		3989646	1					
ANR	3989706	Identifier	scope		3989646	1					
ANR	3989707	IfStatement	if ( space )		3989646	1					
ANR	3989708	Condition	space	428:7:12526:12530	3989646	0	True				
ANR	3989709	Identifier	space		3989646	0					
ANR	3989710	CompoundStatement		18:14:291:291	3989646	1					
ANR	3989711	ExpressionStatement	"* space = ce ? ""::"" : """""	429:4:12539:12562	3989646	0	True				
ANR	3989712	AssignmentExpression	"* space = ce ? ""::"" : """""		3989646	0		=			
ANR	3989713	UnaryOperationExpression	* space		3989646	0					
ANR	3989714	UnaryOperator	*		3989646	0					
ANR	3989715	Identifier	space		3989646	1					
ANR	3989716	ConditionalExpression	"ce ? ""::"" : """""		3989646	1					
ANR	3989717	Condition	ce		3989646	0					
ANR	3989718	Identifier	ce		3989646	0					
ANR	3989719	PrimaryExpression	"""::"""		3989646	1					
ANR	3989720	PrimaryExpression	""""""		3989646	2					
ANR	3989721	ReturnStatement	"return ce ? ZSTR_VAL ( ce -> name ) : """" ;"	431:3:12572:12607	3989646	2	True				
ANR	3989722	ConditionalExpression	"ce ? ZSTR_VAL ( ce -> name ) : """""		3989646	0					
ANR	3989723	Condition	ce		3989646	0					
ANR	3989724	Identifier	ce		3989646	0					
ANR	3989725	CallExpression	ZSTR_VAL ( ce -> name )		3989646	1					
ANR	3989726	Callee	ZSTR_VAL		3989646	0					
ANR	3989727	Identifier	ZSTR_VAL		3989646	0					
ANR	3989728	ArgumentList	ce -> name		3989646	1					
ANR	3989729	Argument	ce -> name		3989646	0					
ANR	3989730	PtrMemberAccess	ce -> name		3989646	0					
ANR	3989731	Identifier	ce		3989646	0					
ANR	3989732	Identifier	name		3989646	1					
ANR	3989733	PrimaryExpression	""""""		3989646	2					
ANR	3989734	Label	default :	433:2:12615:12622	3989646	3	True				
ANR	3989735	Identifier	default		3989646	0					
ANR	3989736	IfStatement	if ( space )		3989646	4					
ANR	3989737	Condition	space	434:7:12631:12635	3989646	0	True				
ANR	3989738	Identifier	space		3989646	0					
ANR	3989739	CompoundStatement		24:14:396:396	3989646	1					
ANR	3989740	ExpressionStatement	"* space = """""	435:4:12644:12655	3989646	0	True				
ANR	3989741	AssignmentExpression	"* space = """""		3989646	0		=			
ANR	3989742	UnaryOperationExpression	* space		3989646	0					
ANR	3989743	UnaryOperator	*		3989646	0					
ANR	3989744	Identifier	space		3989646	1					
ANR	3989745	PrimaryExpression	""""""		3989646	1					
ANR	3989746	ReturnStatement	"return """" ;"	437:3:12665:12674	3989646	5	True				
ANR	3989747	PrimaryExpression	""""""		3989646	0					
ANR	3989748	ReturnType	const char *		3989646	1					
ANR	3989749	Identifier	get_active_class_name		3989646	2					
ANR	3989750	ParameterList	const char * * space		3989646	3					
ANR	3989751	Parameter	const char * * space	410:43:12211:12228	3989646	0	True				
ANR	3989752	ParameterType	const char * *		3989646	0					
ANR	3989753	Identifier	space		3989646	1					
ANR	3989754	CFGEntryNode	ENTRY		3989646		True				
ANR	3989755	CFGExitNode	EXIT		3989646		True				
ANR	3989756	Symbol	EG		3989646						
ANR	3989757	Symbol	ce		3989646						
ANR	3989758	Symbol	* func		3989646						
ANR	3989759	Symbol	zend_is_executing		3989646						
ANR	3989760	Symbol	EG ( current_execute_data ) -> func		3989646						
ANR	3989761	Symbol	current_execute_data		3989646						
ANR	3989762	Symbol	* EG		3989646						
ANR	3989763	Symbol	* ce		3989646						
ANR	3989764	Symbol	space		3989646						
ANR	3989765	Symbol	ZSTR_VAL		3989646						
ANR	3989766	Symbol	func -> common . scope		3989646						
ANR	3989767	Symbol	func		3989646						
ANR	3989768	Symbol	func -> common		3989646						
ANR	3989769	Symbol	* space		3989646						
ANR	3989770	Symbol	func -> type		3989646						
ANR	3989771	Symbol	ce -> name		3989646						
ANR	3989772	Function	get_active_function_name	442:9:12701:13215							
ANR	3989773	FunctionDef	get_active_function_name ()		3989772	0					
ANR	3989774	CompoundStatement		443:0:12754:13215	3989772	0					
ANR	3989775	IdentifierDeclStatement	zend_function * func ;	444:1:12757:12776	3989772	0	True				
ANR	3989776	IdentifierDecl	* func		3989772	0					
ANR	3989777	IdentifierDeclType	zend_function *		3989772	0					
ANR	3989778	Identifier	func		3989772	1					
ANR	3989779	IfStatement	if ( ! zend_is_executing ( ) )		3989772	1					
ANR	3989780	Condition	! zend_is_executing ( )	446:5:12784:12803	3989772	0	True				
ANR	3989781	UnaryOperationExpression	! zend_is_executing ( )		3989772	0					
ANR	3989782	UnaryOperator	!		3989772	0					
ANR	3989783	CallExpression	zend_is_executing ( )		3989772	1					
ANR	3989784	Callee	zend_is_executing		3989772	0					
ANR	3989785	Identifier	zend_is_executing		3989772	0					
ANR	3989786	ArgumentList			3989772	1					
ANR	3989787	CompoundStatement		4:27:51:51	3989772	1					
ANR	3989788	ReturnStatement	return NULL ;	447:2:12810:12821	3989772	0	True				
ANR	3989789	Identifier	NULL		3989772	0					
ANR	3989790	ExpressionStatement	func = EG ( current_execute_data ) -> func	449:1:12827:12864	3989772	2	True				
ANR	3989791	AssignmentExpression	func = EG ( current_execute_data ) -> func		3989772	0		=			
ANR	3989792	Identifier	func		3989772	0					
ANR	3989793	PtrMemberAccess	EG ( current_execute_data ) -> func		3989772	1					
ANR	3989794	CallExpression	EG ( current_execute_data )		3989772	0					
ANR	3989795	Callee	EG		3989772	0					
ANR	3989796	Identifier	EG		3989772	0					
ANR	3989797	ArgumentList	current_execute_data		3989772	1					
ANR	3989798	Argument	current_execute_data		3989772	0					
ANR	3989799	Identifier	current_execute_data		3989772	0					
ANR	3989800	Identifier	func		3989772	1					
ANR	3989801	SwitchStatement	switch ( func -> type )		3989772	3					
ANR	3989802	Condition	func -> type	450:9:12875:12884	3989772	0	True				
ANR	3989803	PtrMemberAccess	func -> type		3989772	0					
ANR	3989804	Identifier	func		3989772	0					
ANR	3989805	Identifier	type		3989772	1					
ANR	3989806	CompoundStatement		8:21:132:132	3989772	1					
ANR	3989807	Label	case ZEND_USER_FUNCTION :	451:2:12891:12914	3989772	0	True				
ANR	3989808	Identifier	ZEND_USER_FUNCTION		3989772	0					
ANR	3989809	CompoundStatement		10:4:167:222	3989772	1					
ANR	3989810	IdentifierDeclStatement	zend_string * function_name = func -> common . function_name ;	452:4:12922:12977	3989772	0	True				
ANR	3989811	IdentifierDecl	* function_name = func -> common . function_name		3989772	0					
ANR	3989812	IdentifierDeclType	zend_string *		3989772	0					
ANR	3989813	Identifier	function_name		3989772	1					
ANR	3989814	AssignmentExpression	* function_name = func -> common . function_name		3989772	2		=			
ANR	3989815	Identifier	function_name		3989772	0					
ANR	3989816	MemberAccess	func -> common . function_name		3989772	1					
ANR	3989817	PtrMemberAccess	func -> common		3989772	0					
ANR	3989818	Identifier	func		3989772	0					
ANR	3989819	Identifier	common		3989772	1					
ANR	3989820	Identifier	function_name		3989772	1					
ANR	3989821	IfStatement	if ( function_name )		3989772	1					
ANR	3989822	Condition	function_name	454:8:12988:13000	3989772	0	True				
ANR	3989823	Identifier	function_name		3989772	0					
ANR	3989824	CompoundStatement		12:23:248:248	3989772	1					
ANR	3989825	ReturnStatement	return ZSTR_VAL ( function_name ) ;	455:5:13010:13040	3989772	0	True				
ANR	3989826	CallExpression	ZSTR_VAL ( function_name )		3989772	0					
ANR	3989827	Callee	ZSTR_VAL		3989772	0					
ANR	3989828	Identifier	ZSTR_VAL		3989772	0					
ANR	3989829	ArgumentList	function_name		3989772	1					
ANR	3989830	Argument	function_name		3989772	0					
ANR	3989831	Identifier	function_name		3989772	0					
ANR	3989832	ElseStatement	else		3989772	0					
ANR	3989833	CompoundStatement		14:11:298:298	3989772	0					
ANR	3989834	ReturnStatement	"return ""main"" ;"	457:5:13060:13073	3989772	0	True				
ANR	3989835	PrimaryExpression	"""main"""		3989772	0					
ANR	3989836	BreakStatement	break ;	460:3:13089:13094	3989772	2	True				
ANR	3989837	Label	case ZEND_INTERNAL_FUNCTION :	461:2:13098:13125	3989772	3	True				
ANR	3989838	Identifier	ZEND_INTERNAL_FUNCTION		3989772	0					
ANR	3989839	ReturnStatement	return ZSTR_VAL ( func -> common . function_name ) ;	462:3:13130:13173	3989772	4	True				
ANR	3989840	CallExpression	ZSTR_VAL ( func -> common . function_name )		3989772	0					
ANR	3989841	Callee	ZSTR_VAL		3989772	0					
ANR	3989842	Identifier	ZSTR_VAL		3989772	0					
ANR	3989843	ArgumentList	func -> common . function_name		3989772	1					
ANR	3989844	Argument	func -> common . function_name		3989772	0					
ANR	3989845	MemberAccess	func -> common . function_name		3989772	0					
ANR	3989846	PtrMemberAccess	func -> common		3989772	0					
ANR	3989847	Identifier	func		3989772	0					
ANR	3989848	Identifier	common		3989772	1					
ANR	3989849	Identifier	function_name		3989772	1					
ANR	3989850	BreakStatement	break ;	463:3:13178:13183	3989772	5	True				
ANR	3989851	Label	default :	464:2:13187:13194	3989772	6	True				
ANR	3989852	Identifier	default		3989772	0					
ANR	3989853	ReturnStatement	return NULL ;	465:3:13199:13210	3989772	7	True				
ANR	3989854	Identifier	NULL		3989772	0					
ANR	3989855	ReturnType	const char *		3989772	1					
ANR	3989856	Identifier	get_active_function_name		3989772	2					
ANR	3989857	ParameterList			3989772	3					
ANR	3989858	CFGEntryNode	ENTRY		3989772		True				
ANR	3989859	CFGExitNode	EXIT		3989772		True				
ANR	3989860	Symbol	EG		3989772						
ANR	3989861	Symbol	NULL		3989772						
ANR	3989862	Symbol	* func		3989772						
ANR	3989863	Symbol	zend_is_executing		3989772						
ANR	3989864	Symbol	EG ( current_execute_data ) -> func		3989772						
ANR	3989865	Symbol	current_execute_data		3989772						
ANR	3989866	Symbol	func -> common . function_name		3989772						
ANR	3989867	Symbol	* EG		3989772						
ANR	3989868	Symbol	ZSTR_VAL		3989772						
ANR	3989869	Symbol	func		3989772						
ANR	3989870	Symbol	func -> common		3989772						
ANR	3989871	Symbol	function_name		3989772						
ANR	3989872	Symbol	func -> type		3989772						
ANR	3989873	Function	zend_get_executed_filename	470:9:13237:13544							
ANR	3989874	FunctionDef	zend_get_executed_filename ()		3989873	0					
ANR	3989875	CompoundStatement		471:0:13292:13544	3989873	0					
ANR	3989876	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	472:1:13295:13343	3989873	0	True				
ANR	3989877	IdentifierDecl	* ex = EG ( current_execute_data )		3989873	0					
ANR	3989878	IdentifierDeclType	zend_execute_data *		3989873	0					
ANR	3989879	Identifier	ex		3989873	1					
ANR	3989880	AssignmentExpression	* ex = EG ( current_execute_data )		3989873	2		=			
ANR	3989881	Identifier	ex		3989873	0					
ANR	3989882	CallExpression	EG ( current_execute_data )		3989873	1					
ANR	3989883	Callee	EG		3989873	0					
ANR	3989884	Identifier	EG		3989873	0					
ANR	3989885	ArgumentList	current_execute_data		3989873	1					
ANR	3989886	Argument	current_execute_data		3989873	0					
ANR	3989887	Identifier	current_execute_data		3989873	0					
ANR	3989888	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) ) )		3989873	1					
ANR	3989889	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )	474:8:13354:13405	3989873	0	True				
ANR	3989890	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )		3989873	0		&&			
ANR	3989891	Identifier	ex		3989873	0					
ANR	3989892	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type )		3989873	1		||			
ANR	3989893	UnaryOperationExpression	! ex -> func		3989873	0					
ANR	3989894	UnaryOperator	!		3989873	0					
ANR	3989895	PtrMemberAccess	ex -> func		3989873	1					
ANR	3989896	Identifier	ex		3989873	0					
ANR	3989897	Identifier	func		3989873	1					
ANR	3989898	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> type )		3989873	1					
ANR	3989899	UnaryOperator	!		3989873	0					
ANR	3989900	CallExpression	ZEND_USER_CODE ( ex -> func -> type )		3989873	1					
ANR	3989901	Callee	ZEND_USER_CODE		3989873	0					
ANR	3989902	Identifier	ZEND_USER_CODE		3989873	0					
ANR	3989903	ArgumentList	ex -> func -> type		3989873	1					
ANR	3989904	Argument	ex -> func -> type		3989873	0					
ANR	3989905	PtrMemberAccess	ex -> func -> type		3989873	0					
ANR	3989906	PtrMemberAccess	ex -> func		3989873	0					
ANR	3989907	Identifier	ex		3989873	0					
ANR	3989908	Identifier	func		3989873	1					
ANR	3989909	Identifier	type		3989873	1					
ANR	3989910	CompoundStatement		4:62:115:115	3989873	1					
ANR	3989911	ExpressionStatement	ex = ex -> prev_execute_data	475:2:13412:13438	3989873	0	True				
ANR	3989912	AssignmentExpression	ex = ex -> prev_execute_data		3989873	0		=			
ANR	3989913	Identifier	ex		3989873	0					
ANR	3989914	PtrMemberAccess	ex -> prev_execute_data		3989873	1					
ANR	3989915	Identifier	ex		3989873	0					
ANR	3989916	Identifier	prev_execute_data		3989873	1					
ANR	3989917	IfStatement	if ( ex )		3989873	2					
ANR	3989918	Condition	ex	477:5:13448:13449	3989873	0	True				
ANR	3989919	Identifier	ex		3989873	0					
ANR	3989920	CompoundStatement		7:9:159:159	3989873	1					
ANR	3989921	ReturnStatement	return ZSTR_VAL ( ex -> func -> op_array . filename ) ;	478:2:13456:13500	3989873	0	True				
ANR	3989922	CallExpression	ZSTR_VAL ( ex -> func -> op_array . filename )		3989873	0					
ANR	3989923	Callee	ZSTR_VAL		3989873	0					
ANR	3989924	Identifier	ZSTR_VAL		3989873	0					
ANR	3989925	ArgumentList	ex -> func -> op_array . filename		3989873	1					
ANR	3989926	Argument	ex -> func -> op_array . filename		3989873	0					
ANR	3989927	MemberAccess	ex -> func -> op_array . filename		3989873	0					
ANR	3989928	PtrMemberAccess	ex -> func -> op_array		3989873	0					
ANR	3989929	PtrMemberAccess	ex -> func		3989873	0					
ANR	3989930	Identifier	ex		3989873	0					
ANR	3989931	Identifier	func		3989873	1					
ANR	3989932	Identifier	op_array		3989873	1					
ANR	3989933	Identifier	filename		3989873	1					
ANR	3989934	ElseStatement	else		3989873	0					
ANR	3989935	CompoundStatement		9:8:217:217	3989873	0					
ANR	3989936	ReturnStatement	"return ""[no active file]"" ;"	480:2:13514:13539	3989873	0	True				
ANR	3989937	PrimaryExpression	"""[no active file]"""		3989873	0					
ANR	3989938	ReturnType	const char *		3989873	1					
ANR	3989939	Identifier	zend_get_executed_filename		3989873	2					
ANR	3989940	ParameterList			3989873	3					
ANR	3989941	CFGEntryNode	ENTRY		3989873		True				
ANR	3989942	CFGExitNode	EXIT		3989873		True				
ANR	3989943	Symbol	EG		3989873						
ANR	3989944	Symbol	ex -> prev_execute_data		3989873						
ANR	3989945	Symbol	ex -> func -> type		3989873						
ANR	3989946	Symbol	ex -> func -> op_array		3989873						
ANR	3989947	Symbol	current_execute_data		3989873						
ANR	3989948	Symbol	ex -> func -> op_array . filename		3989873						
ANR	3989949	Symbol	ex -> func		3989873						
ANR	3989950	Symbol	ZSTR_VAL		3989873						
ANR	3989951	Symbol	ex		3989873						
ANR	3989952	Symbol	ZEND_USER_CODE		3989873						
ANR	3989953	Symbol	* ex -> func		3989873						
ANR	3989954	Symbol	* ex		3989873						
ANR	3989955	Symbol	* * ex		3989873						
ANR	3989956	Function	zend_get_executed_filename_ex	485:0:13557:13853							
ANR	3989957	FunctionDef	zend_get_executed_filename_ex ()		3989956	0					
ANR	3989958	CompoundStatement		486:0:13625:13853	3989956	0					
ANR	3989959	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	487:1:13628:13676	3989956	0	True				
ANR	3989960	IdentifierDecl	* ex = EG ( current_execute_data )		3989956	0					
ANR	3989961	IdentifierDeclType	zend_execute_data *		3989956	0					
ANR	3989962	Identifier	ex		3989956	1					
ANR	3989963	AssignmentExpression	* ex = EG ( current_execute_data )		3989956	2		=			
ANR	3989964	Identifier	ex		3989956	0					
ANR	3989965	CallExpression	EG ( current_execute_data )		3989956	1					
ANR	3989966	Callee	EG		3989956	0					
ANR	3989967	Identifier	EG		3989956	0					
ANR	3989968	ArgumentList	current_execute_data		3989956	1					
ANR	3989969	Argument	current_execute_data		3989956	0					
ANR	3989970	Identifier	current_execute_data		3989956	0					
ANR	3989971	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) ) )		3989956	1					
ANR	3989972	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )	489:8:13687:13738	3989956	0	True				
ANR	3989973	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )		3989956	0		&&			
ANR	3989974	Identifier	ex		3989956	0					
ANR	3989975	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type )		3989956	1		||			
ANR	3989976	UnaryOperationExpression	! ex -> func		3989956	0					
ANR	3989977	UnaryOperator	!		3989956	0					
ANR	3989978	PtrMemberAccess	ex -> func		3989956	1					
ANR	3989979	Identifier	ex		3989956	0					
ANR	3989980	Identifier	func		3989956	1					
ANR	3989981	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> type )		3989956	1					
ANR	3989982	UnaryOperator	!		3989956	0					
ANR	3989983	CallExpression	ZEND_USER_CODE ( ex -> func -> type )		3989956	1					
ANR	3989984	Callee	ZEND_USER_CODE		3989956	0					
ANR	3989985	Identifier	ZEND_USER_CODE		3989956	0					
ANR	3989986	ArgumentList	ex -> func -> type		3989956	1					
ANR	3989987	Argument	ex -> func -> type		3989956	0					
ANR	3989988	PtrMemberAccess	ex -> func -> type		3989956	0					
ANR	3989989	PtrMemberAccess	ex -> func		3989956	0					
ANR	3989990	Identifier	ex		3989956	0					
ANR	3989991	Identifier	func		3989956	1					
ANR	3989992	Identifier	type		3989956	1					
ANR	3989993	CompoundStatement		4:62:115:115	3989956	1					
ANR	3989994	ExpressionStatement	ex = ex -> prev_execute_data	490:2:13745:13771	3989956	0	True				
ANR	3989995	AssignmentExpression	ex = ex -> prev_execute_data		3989956	0		=			
ANR	3989996	Identifier	ex		3989956	0					
ANR	3989997	PtrMemberAccess	ex -> prev_execute_data		3989956	1					
ANR	3989998	Identifier	ex		3989956	0					
ANR	3989999	Identifier	prev_execute_data		3989956	1					
ANR	3990000	IfStatement	if ( ex )		3989956	2					
ANR	3990001	Condition	ex	492:5:13781:13782	3989956	0	True				
ANR	3990002	Identifier	ex		3989956	0					
ANR	3990003	CompoundStatement		7:9:159:159	3989956	1					
ANR	3990004	ReturnStatement	return ex -> func -> op_array . filename ;	493:2:13789:13823	3989956	0	True				
ANR	3990005	MemberAccess	ex -> func -> op_array . filename		3989956	0					
ANR	3990006	PtrMemberAccess	ex -> func -> op_array		3989956	0					
ANR	3990007	PtrMemberAccess	ex -> func		3989956	0					
ANR	3990008	Identifier	ex		3989956	0					
ANR	3990009	Identifier	func		3989956	1					
ANR	3990010	Identifier	op_array		3989956	1					
ANR	3990011	Identifier	filename		3989956	1					
ANR	3990012	ElseStatement	else		3989956	0					
ANR	3990013	CompoundStatement		9:8:207:207	3989956	0					
ANR	3990014	ReturnStatement	return NULL ;	495:2:13837:13848	3989956	0	True				
ANR	3990015	Identifier	NULL		3989956	0					
ANR	3990016	ReturnType	ZEND_API zend_string *		3989956	1					
ANR	3990017	Identifier	zend_get_executed_filename_ex		3989956	2					
ANR	3990018	ParameterList			3989956	3					
ANR	3990019	CFGEntryNode	ENTRY		3989956		True				
ANR	3990020	CFGExitNode	EXIT		3989956		True				
ANR	3990021	Symbol	EG		3989956						
ANR	3990022	Symbol	ex -> prev_execute_data		3989956						
ANR	3990023	Symbol	NULL		3989956						
ANR	3990024	Symbol	ex -> func -> type		3989956						
ANR	3990025	Symbol	ex -> func -> op_array		3989956						
ANR	3990026	Symbol	current_execute_data		3989956						
ANR	3990027	Symbol	ex -> func -> op_array . filename		3989956						
ANR	3990028	Symbol	ex -> func		3989956						
ANR	3990029	Symbol	ex		3989956						
ANR	3990030	Symbol	ZEND_USER_CODE		3989956						
ANR	3990031	Symbol	* ex		3989956						
ANR	3990032	Symbol	* ex -> func		3989956						
ANR	3990033	Symbol	* * ex		3989956						
ANR	3990034	Function	zend_get_executed_lineno	500:0:13866:14322							
ANR	3990035	FunctionDef	zend_get_executed_lineno ()		3990034	0					
ANR	3990036	CompoundStatement		501:0:13921:14322	3990034	0					
ANR	3990037	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	502:1:13924:13972	3990034	0	True				
ANR	3990038	IdentifierDecl	* ex = EG ( current_execute_data )		3990034	0					
ANR	3990039	IdentifierDeclType	zend_execute_data *		3990034	0					
ANR	3990040	Identifier	ex		3990034	1					
ANR	3990041	AssignmentExpression	* ex = EG ( current_execute_data )		3990034	2		=			
ANR	3990042	Identifier	ex		3990034	0					
ANR	3990043	CallExpression	EG ( current_execute_data )		3990034	1					
ANR	3990044	Callee	EG		3990034	0					
ANR	3990045	Identifier	EG		3990034	0					
ANR	3990046	ArgumentList	current_execute_data		3990034	1					
ANR	3990047	Argument	current_execute_data		3990034	0					
ANR	3990048	Identifier	current_execute_data		3990034	0					
ANR	3990049	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) ) )		3990034	1					
ANR	3990050	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )	504:8:13983:14034	3990034	0	True				
ANR	3990051	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )		3990034	0		&&			
ANR	3990052	Identifier	ex		3990034	0					
ANR	3990053	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type )		3990034	1		||			
ANR	3990054	UnaryOperationExpression	! ex -> func		3990034	0					
ANR	3990055	UnaryOperator	!		3990034	0					
ANR	3990056	PtrMemberAccess	ex -> func		3990034	1					
ANR	3990057	Identifier	ex		3990034	0					
ANR	3990058	Identifier	func		3990034	1					
ANR	3990059	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> type )		3990034	1					
ANR	3990060	UnaryOperator	!		3990034	0					
ANR	3990061	CallExpression	ZEND_USER_CODE ( ex -> func -> type )		3990034	1					
ANR	3990062	Callee	ZEND_USER_CODE		3990034	0					
ANR	3990063	Identifier	ZEND_USER_CODE		3990034	0					
ANR	3990064	ArgumentList	ex -> func -> type		3990034	1					
ANR	3990065	Argument	ex -> func -> type		3990034	0					
ANR	3990066	PtrMemberAccess	ex -> func -> type		3990034	0					
ANR	3990067	PtrMemberAccess	ex -> func		3990034	0					
ANR	3990068	Identifier	ex		3990034	0					
ANR	3990069	Identifier	func		3990034	1					
ANR	3990070	Identifier	type		3990034	1					
ANR	3990071	CompoundStatement		4:62:115:115	3990034	1					
ANR	3990072	ExpressionStatement	ex = ex -> prev_execute_data	505:2:14041:14067	3990034	0	True				
ANR	3990073	AssignmentExpression	ex = ex -> prev_execute_data		3990034	0		=			
ANR	3990074	Identifier	ex		3990034	0					
ANR	3990075	PtrMemberAccess	ex -> prev_execute_data		3990034	1					
ANR	3990076	Identifier	ex		3990034	0					
ANR	3990077	Identifier	prev_execute_data		3990034	1					
ANR	3990078	IfStatement	if ( ex )		3990034	2					
ANR	3990079	Condition	ex	507:5:14077:14078	3990034	0	True				
ANR	3990080	Identifier	ex		3990034	0					
ANR	3990081	CompoundStatement		7:9:159:159	3990034	1					
ANR	3990082	IfStatement	if ( EG ( exception ) && ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception ) )		3990034	0					
ANR	3990083	Condition	EG ( exception ) && ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception )	508:6:14089:14212	3990034	0	True				
ANR	3990084	AndExpression	EG ( exception ) && ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception )		3990034	0		&&			
ANR	3990085	CallExpression	EG ( exception )		3990034	0					
ANR	3990086	Callee	EG		3990034	0					
ANR	3990087	Identifier	EG		3990034	0					
ANR	3990088	ArgumentList	exception		3990034	1					
ANR	3990089	Argument	exception		3990034	0					
ANR	3990090	Identifier	exception		3990034	0					
ANR	3990091	AndExpression	ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception )		3990034	1		&&			
ANR	3990092	EqualityExpression	ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION		3990034	0		==			
ANR	3990093	PtrMemberAccess	ex -> opline -> opcode		3990034	0					
ANR	3990094	PtrMemberAccess	ex -> opline		3990034	0					
ANR	3990095	Identifier	ex		3990034	0					
ANR	3990096	Identifier	opline		3990034	1					
ANR	3990097	Identifier	opcode		3990034	1					
ANR	3990098	Identifier	ZEND_HANDLE_EXCEPTION		3990034	1					
ANR	3990099	AndExpression	ex -> opline -> lineno == 0 && EG ( opline_before_exception )		3990034	1		&&			
ANR	3990100	EqualityExpression	ex -> opline -> lineno == 0		3990034	0		==			
ANR	3990101	PtrMemberAccess	ex -> opline -> lineno		3990034	0					
ANR	3990102	PtrMemberAccess	ex -> opline		3990034	0					
ANR	3990103	Identifier	ex		3990034	0					
ANR	3990104	Identifier	opline		3990034	1					
ANR	3990105	Identifier	lineno		3990034	1					
ANR	3990106	PrimaryExpression	0		3990034	1					
ANR	3990107	CallExpression	EG ( opline_before_exception )		3990034	1					
ANR	3990108	Callee	EG		3990034	0					
ANR	3990109	Identifier	EG		3990034	0					
ANR	3990110	ArgumentList	opline_before_exception		3990034	1					
ANR	3990111	Argument	opline_before_exception		3990034	0					
ANR	3990112	Identifier	opline_before_exception		3990034	0					
ANR	3990113	CompoundStatement		9:62:293:293	3990034	1					
ANR	3990114	ReturnStatement	return EG ( opline_before_exception ) -> lineno ;	510:3:14220:14262	3990034	0	True				
ANR	3990115	PtrMemberAccess	EG ( opline_before_exception ) -> lineno		3990034	0					
ANR	3990116	CallExpression	EG ( opline_before_exception )		3990034	0					
ANR	3990117	Callee	EG		3990034	0					
ANR	3990118	Identifier	EG		3990034	0					
ANR	3990119	ArgumentList	opline_before_exception		3990034	1					
ANR	3990120	Argument	opline_before_exception		3990034	0					
ANR	3990121	Identifier	opline_before_exception		3990034	0					
ANR	3990122	Identifier	lineno		3990034	1					
ANR	3990123	ReturnStatement	return ex -> opline -> lineno ;	512:2:14270:14295	3990034	1	True				
ANR	3990124	PtrMemberAccess	ex -> opline -> lineno		3990034	0					
ANR	3990125	PtrMemberAccess	ex -> opline		3990034	0					
ANR	3990126	Identifier	ex		3990034	0					
ANR	3990127	Identifier	opline		3990034	1					
ANR	3990128	Identifier	lineno		3990034	1					
ANR	3990129	ElseStatement	else		3990034	0					
ANR	3990130	CompoundStatement		13:8:383:383	3990034	0					
ANR	3990131	ReturnStatement	return 0 ;	514:2:14309:14317	3990034	0	True				
ANR	3990132	PrimaryExpression	0		3990034	0					
ANR	3990133	ReturnType	ZEND_API uint		3990034	1					
ANR	3990134	Identifier	zend_get_executed_lineno		3990034	2					
ANR	3990135	ParameterList			3990034	3					
ANR	3990136	CFGEntryNode	ENTRY		3990034		True				
ANR	3990137	CFGExitNode	EXIT		3990034		True				
ANR	3990138	Symbol	exception		3990034						
ANR	3990139	Symbol	ex -> opline		3990034						
ANR	3990140	Symbol	EG		3990034						
ANR	3990141	Symbol	ex -> prev_execute_data		3990034						
ANR	3990142	Symbol	ex -> func -> type		3990034						
ANR	3990143	Symbol	current_execute_data		3990034						
ANR	3990144	Symbol	ex -> opline -> lineno		3990034						
ANR	3990145	Symbol	ZEND_HANDLE_EXCEPTION		3990034						
ANR	3990146	Symbol	EG ( opline_before_exception ) -> lineno		3990034						
ANR	3990147	Symbol	* EG		3990034						
ANR	3990148	Symbol	ex -> func		3990034						
ANR	3990149	Symbol	ex -> opline -> opcode		3990034						
ANR	3990150	Symbol	opline_before_exception		3990034						
ANR	3990151	Symbol	ex		3990034						
ANR	3990152	Symbol	* ex -> opline		3990034						
ANR	3990153	Symbol	ZEND_USER_CODE		3990034						
ANR	3990154	Symbol	* ex -> func		3990034						
ANR	3990155	Symbol	* ex		3990034						
ANR	3990156	Symbol	* * ex		3990034						
ANR	3990157	Function	zend_is_executing	519:0:14335:14429							
ANR	3990158	FunctionDef	zend_is_executing ()		3990157	0					
ANR	3990159	CompoundStatement		520:0:14388:14429	3990157	0					
ANR	3990160	ReturnStatement	return EG ( current_execute_data ) != 0 ;	521:1:14391:14427	3990157	0	True				
ANR	3990161	EqualityExpression	EG ( current_execute_data ) != 0		3990157	0		!=			
ANR	3990162	CallExpression	EG ( current_execute_data )		3990157	0					
ANR	3990163	Callee	EG		3990157	0					
ANR	3990164	Identifier	EG		3990157	0					
ANR	3990165	ArgumentList	current_execute_data		3990157	1					
ANR	3990166	Argument	current_execute_data		3990157	0					
ANR	3990167	Identifier	current_execute_data		3990157	0					
ANR	3990168	PrimaryExpression	0		3990157	1					
ANR	3990169	ReturnType	ZEND_API zend_bool		3990157	1					
ANR	3990170	Identifier	zend_is_executing		3990157	2					
ANR	3990171	ParameterList			3990157	3					
ANR	3990172	CFGEntryNode	ENTRY		3990157		True				
ANR	3990173	CFGExitNode	EXIT		3990157		True				
ANR	3990174	Symbol	EG		3990157						
ANR	3990175	Symbol	current_execute_data		3990157						
ANR	3990176	Function	zval_update_constant_ex	545:54:15070:18213							
ANR	3990177	FunctionDef	"zval_update_constant_ex (zval * p , zend_bool inline_change , zend_class_entry * scope)"		3990176	0					
ANR	3990178	CompoundStatement		548:0:15198:18213	3990176	0					
ANR	3990179	IdentifierDeclStatement	zval * const_value ;	549:1:15201:15218	3990176	0	True				
ANR	3990180	IdentifierDecl	* const_value		3990176	0					
ANR	3990181	IdentifierDeclType	zval *		3990176	0					
ANR	3990182	Identifier	const_value		3990176	1					
ANR	3990183	IdentifierDeclStatement	char * colon ;	550:1:15221:15232	3990176	1	True				
ANR	3990184	IdentifierDecl	* colon		3990176	0					
ANR	3990185	IdentifierDeclType	char *		3990176	0					
ANR	3990186	Identifier	colon		3990176	1					
ANR	3990187	IfStatement	if ( IS_CONSTANT_VISITED ( p ) )		3990176	2					
ANR	3990188	Condition	IS_CONSTANT_VISITED ( p )	552:5:15240:15261	3990176	0	True				
ANR	3990189	CallExpression	IS_CONSTANT_VISITED ( p )		3990176	0					
ANR	3990190	Callee	IS_CONSTANT_VISITED		3990176	0					
ANR	3990191	Identifier	IS_CONSTANT_VISITED		3990176	0					
ANR	3990192	ArgumentList	p		3990176	1					
ANR	3990193	Argument	p		3990176	0					
ANR	3990194	Identifier	p		3990176	0					
ANR	3990195	CompoundStatement		5:29:65:65	3990176	1					
ANR	3990196	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot declare self-referencing constant '%s'"" , Z_STRVAL_P ( p ) )"	553:2:15268:15354	3990176	0	True				
ANR	3990197	CallExpression	"zend_throw_error ( NULL , ""Cannot declare self-referencing constant '%s'"" , Z_STRVAL_P ( p ) )"		3990176	0					
ANR	3990198	Callee	zend_throw_error		3990176	0					
ANR	3990199	Identifier	zend_throw_error		3990176	0					
ANR	3990200	ArgumentList	NULL		3990176	1					
ANR	3990201	Argument	NULL		3990176	0					
ANR	3990202	Identifier	NULL		3990176	0					
ANR	3990203	Argument	"""Cannot declare self-referencing constant '%s'"""		3990176	1					
ANR	3990204	PrimaryExpression	"""Cannot declare self-referencing constant '%s'"""		3990176	0					
ANR	3990205	Argument	Z_STRVAL_P ( p )		3990176	2					
ANR	3990206	CallExpression	Z_STRVAL_P ( p )		3990176	0					
ANR	3990207	Callee	Z_STRVAL_P		3990176	0					
ANR	3990208	Identifier	Z_STRVAL_P		3990176	0					
ANR	3990209	ArgumentList	p		3990176	1					
ANR	3990210	Argument	p		3990176	0					
ANR	3990211	Identifier	p		3990176	0					
ANR	3990212	ReturnStatement	return FAILURE ;	554:2:15358:15372	3990176	1	True				
ANR	3990213	Identifier	FAILURE		3990176	0					
ANR	3990214	ElseStatement	else		3990176	0					
ANR	3990215	IfStatement	if ( Z_TYPE_P ( p ) == IS_CONSTANT )		3990176	0					
ANR	3990216	Condition	Z_TYPE_P ( p ) == IS_CONSTANT	555:12:15386:15411	3990176	0	True				
ANR	3990217	EqualityExpression	Z_TYPE_P ( p ) == IS_CONSTANT		3990176	0		==			
ANR	3990218	CallExpression	Z_TYPE_P ( p )		3990176	0					
ANR	3990219	Callee	Z_TYPE_P		3990176	0					
ANR	3990220	Identifier	Z_TYPE_P		3990176	0					
ANR	3990221	ArgumentList	p		3990176	1					
ANR	3990222	Argument	p		3990176	0					
ANR	3990223	Identifier	p		3990176	0					
ANR	3990224	Identifier	IS_CONSTANT		3990176	1					
ANR	3990225	CompoundStatement		8:40:215:215	3990176	1					
ANR	3990226	ExpressionStatement	SEPARATE_ZVAL_NOREF ( p )	557:2:15419:15441	3990176	0	True				
ANR	3990227	CallExpression	SEPARATE_ZVAL_NOREF ( p )		3990176	0					
ANR	3990228	Callee	SEPARATE_ZVAL_NOREF		3990176	0					
ANR	3990229	Identifier	SEPARATE_ZVAL_NOREF		3990176	0					
ANR	3990230	ArgumentList	p		3990176	1					
ANR	3990231	Argument	p		3990176	0					
ANR	3990232	Identifier	p		3990176	0					
ANR	3990233	ExpressionStatement	MARK_CONSTANT_VISITED ( p )	558:2:15445:15469	3990176	1	True				
ANR	3990234	CallExpression	MARK_CONSTANT_VISITED ( p )		3990176	0					
ANR	3990235	Callee	MARK_CONSTANT_VISITED		3990176	0					
ANR	3990236	Identifier	MARK_CONSTANT_VISITED		3990176	0					
ANR	3990237	ArgumentList	p		3990176	1					
ANR	3990238	Argument	p		3990176	0					
ANR	3990239	Identifier	p		3990176	0					
ANR	3990240	IfStatement	if ( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_CLASS )		3990176	2					
ANR	3990241	Condition	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_CLASS	559:6:15477:15514	3990176	0	True				
ANR	3990242	BitAndExpression	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_CLASS		3990176	0		&			
ANR	3990243	CallExpression	Z_CONST_FLAGS_P ( p )		3990176	0					
ANR	3990244	Callee	Z_CONST_FLAGS_P		3990176	0					
ANR	3990245	Identifier	Z_CONST_FLAGS_P		3990176	0					
ANR	3990246	ArgumentList	p		3990176	1					
ANR	3990247	Argument	p		3990176	0					
ANR	3990248	Identifier	p		3990176	0					
ANR	3990249	Identifier	IS_CONSTANT_CLASS		3990176	1					
ANR	3990250	CompoundStatement		12:46:318:318	3990176	1					
ANR	3990251	ExpressionStatement	ZEND_ASSERT ( EG ( current_execute_data ) )	560:3:15522:15559	3990176	0	True				
ANR	3990252	CallExpression	ZEND_ASSERT ( EG ( current_execute_data ) )		3990176	0					
ANR	3990253	Callee	ZEND_ASSERT		3990176	0					
ANR	3990254	Identifier	ZEND_ASSERT		3990176	0					
ANR	3990255	ArgumentList	EG ( current_execute_data )		3990176	1					
ANR	3990256	Argument	EG ( current_execute_data )		3990176	0					
ANR	3990257	CallExpression	EG ( current_execute_data )		3990176	0					
ANR	3990258	Callee	EG		3990176	0					
ANR	3990259	Identifier	EG		3990176	0					
ANR	3990260	ArgumentList	current_execute_data		3990176	1					
ANR	3990261	Argument	current_execute_data		3990176	0					
ANR	3990262	Identifier	current_execute_data		3990176	0					
ANR	3990263	IfStatement	if ( inline_change )		3990176	1					
ANR	3990264	Condition	inline_change	561:7:15568:15580	3990176	0	True				
ANR	3990265	Identifier	inline_change		3990176	0					
ANR	3990266	CompoundStatement		14:22:384:384	3990176	1					
ANR	3990267	ExpressionStatement	zend_string_release ( Z_STR_P ( p ) )	562:4:15589:15620	3990176	0	True				
ANR	3990268	CallExpression	zend_string_release ( Z_STR_P ( p ) )		3990176	0					
ANR	3990269	Callee	zend_string_release		3990176	0					
ANR	3990270	Identifier	zend_string_release		3990176	0					
ANR	3990271	ArgumentList	Z_STR_P ( p )		3990176	1					
ANR	3990272	Argument	Z_STR_P ( p )		3990176	0					
ANR	3990273	CallExpression	Z_STR_P ( p )		3990176	0					
ANR	3990274	Callee	Z_STR_P		3990176	0					
ANR	3990275	Identifier	Z_STR_P		3990176	0					
ANR	3990276	ArgumentList	p		3990176	1					
ANR	3990277	Argument	p		3990176	0					
ANR	3990278	Identifier	p		3990176	0					
ANR	3990279	IfStatement	if ( EG ( scope ) && EG ( scope ) -> name )		3990176	2					
ANR	3990280	Condition	EG ( scope ) && EG ( scope ) -> name	564:7:15634:15661	3990176	0	True				
ANR	3990281	AndExpression	EG ( scope ) && EG ( scope ) -> name		3990176	0		&&			
ANR	3990282	CallExpression	EG ( scope )		3990176	0					
ANR	3990283	Callee	EG		3990176	0					
ANR	3990284	Identifier	EG		3990176	0					
ANR	3990285	ArgumentList	scope		3990176	1					
ANR	3990286	Argument	scope		3990176	0					
ANR	3990287	Identifier	scope		3990176	0					
ANR	3990288	PtrMemberAccess	EG ( scope ) -> name		3990176	1					
ANR	3990289	CallExpression	EG ( scope )		3990176	0					
ANR	3990290	Callee	EG		3990176	0					
ANR	3990291	Identifier	EG		3990176	0					
ANR	3990292	ArgumentList	scope		3990176	1					
ANR	3990293	Argument	scope		3990176	0					
ANR	3990294	Identifier	scope		3990176	0					
ANR	3990295	Identifier	name		3990176	1					
ANR	3990296	CompoundStatement		17:37:465:465	3990176	1					
ANR	3990297	ExpressionStatement	"ZVAL_STR_COPY ( p , EG ( scope ) -> name )"	565:4:15670:15703	3990176	0	True				
ANR	3990298	CallExpression	"ZVAL_STR_COPY ( p , EG ( scope ) -> name )"		3990176	0					
ANR	3990299	Callee	ZVAL_STR_COPY		3990176	0					
ANR	3990300	Identifier	ZVAL_STR_COPY		3990176	0					
ANR	3990301	ArgumentList	p		3990176	1					
ANR	3990302	Argument	p		3990176	0					
ANR	3990303	Identifier	p		3990176	0					
ANR	3990304	Argument	EG ( scope ) -> name		3990176	1					
ANR	3990305	PtrMemberAccess	EG ( scope ) -> name		3990176	0					
ANR	3990306	CallExpression	EG ( scope )		3990176	0					
ANR	3990307	Callee	EG		3990176	0					
ANR	3990308	Identifier	EG		3990176	0					
ANR	3990309	ArgumentList	scope		3990176	1					
ANR	3990310	Argument	scope		3990176	0					
ANR	3990311	Identifier	scope		3990176	0					
ANR	3990312	Identifier	name		3990176	1					
ANR	3990313	ElseStatement	else		3990176	0					
ANR	3990314	CompoundStatement		19:10:516:516	3990176	0					
ANR	3990315	ExpressionStatement	ZVAL_EMPTY_STRING ( p )	567:4:15721:15741	3990176	0	True				
ANR	3990316	CallExpression	ZVAL_EMPTY_STRING ( p )		3990176	0					
ANR	3990317	Callee	ZVAL_EMPTY_STRING		3990176	0					
ANR	3990318	Identifier	ZVAL_EMPTY_STRING		3990176	0					
ANR	3990319	ArgumentList	p		3990176	1					
ANR	3990320	Argument	p		3990176	0					
ANR	3990321	Identifier	p		3990176	0					
ANR	3990322	ElseStatement	else		3990176	0					
ANR	3990323	IfStatement	"if ( UNEXPECTED ( ( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL ) )"		3990176	0					
ANR	3990324	Condition	"UNEXPECTED ( ( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL )"	569:13:15761:15855	3990176	0	True				
ANR	3990325	CallExpression	"UNEXPECTED ( ( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL )"		3990176	0					
ANR	3990326	Callee	UNEXPECTED		3990176	0					
ANR	3990327	Identifier	UNEXPECTED		3990176	0					
ANR	3990328	ArgumentList	"( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL"		3990176	1					
ANR	3990329	Argument	"( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL"		3990176	0					
ANR	3990330	EqualityExpression	"( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL"		3990176	0		==			
ANR	3990331	AssignmentExpression	"const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) )"		3990176	0		=			
ANR	3990332	Identifier	const_value		3990176	0					
ANR	3990333	CallExpression	"zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) )"		3990176	1					
ANR	3990334	Callee	zend_get_constant_ex		3990176	0					
ANR	3990335	Identifier	zend_get_constant_ex		3990176	0					
ANR	3990336	ArgumentList	Z_STR_P ( p )		3990176	1					
ANR	3990337	Argument	Z_STR_P ( p )		3990176	0					
ANR	3990338	CallExpression	Z_STR_P ( p )		3990176	0					
ANR	3990339	Callee	Z_STR_P		3990176	0					
ANR	3990340	Identifier	Z_STR_P		3990176	0					
ANR	3990341	ArgumentList	p		3990176	1					
ANR	3990342	Argument	p		3990176	0					
ANR	3990343	Identifier	p		3990176	0					
ANR	3990344	Argument	scope		3990176	1					
ANR	3990345	Identifier	scope		3990176	0					
ANR	3990346	Argument	Z_CONST_FLAGS_P ( p )		3990176	2					
ANR	3990347	CallExpression	Z_CONST_FLAGS_P ( p )		3990176	0					
ANR	3990348	Callee	Z_CONST_FLAGS_P		3990176	0					
ANR	3990349	Identifier	Z_CONST_FLAGS_P		3990176	0					
ANR	3990350	ArgumentList	p		3990176	1					
ANR	3990351	Argument	p		3990176	0					
ANR	3990352	Identifier	p		3990176	0					
ANR	3990353	Identifier	NULL		3990176	1					
ANR	3990354	CompoundStatement		23:3:664:692	3990176	1					
ANR	3990355	IdentifierDeclStatement	char * actual = Z_STRVAL_P ( p ) ;	570:3:15863:15891	3990176	0	True				
ANR	3990356	IdentifierDecl	* actual = Z_STRVAL_P ( p )		3990176	0					
ANR	3990357	IdentifierDeclType	char *		3990176	0					
ANR	3990358	Identifier	actual		3990176	1					
ANR	3990359	AssignmentExpression	* actual = Z_STRVAL_P ( p )		3990176	2		=			
ANR	3990360	Identifier	actual		3990176	0					
ANR	3990361	CallExpression	Z_STRVAL_P ( p )		3990176	1					
ANR	3990362	Callee	Z_STRVAL_P		3990176	0					
ANR	3990363	Identifier	Z_STRVAL_P		3990176	0					
ANR	3990364	ArgumentList	p		3990176	1					
ANR	3990365	Argument	p		3990176	0					
ANR	3990366	Identifier	p		3990176	0					
ANR	3990367	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		3990176	1					
ANR	3990368	Condition	UNEXPECTED ( EG ( exception ) )	572:7:15901:15925	3990176	0	True				
ANR	3990369	CallExpression	UNEXPECTED ( EG ( exception ) )		3990176	0					
ANR	3990370	Callee	UNEXPECTED		3990176	0					
ANR	3990371	Identifier	UNEXPECTED		3990176	0					
ANR	3990372	ArgumentList	EG ( exception )		3990176	1					
ANR	3990373	Argument	EG ( exception )		3990176	0					
ANR	3990374	CallExpression	EG ( exception )		3990176	0					
ANR	3990375	Callee	EG		3990176	0					
ANR	3990376	Identifier	EG		3990176	0					
ANR	3990377	ArgumentList	exception		3990176	1					
ANR	3990378	Argument	exception		3990176	0					
ANR	3990379	Identifier	exception		3990176	0					
ANR	3990380	CompoundStatement		25:34:729:729	3990176	1					
ANR	3990381	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	573:4:15934:15959	3990176	0	True				
ANR	3990382	CallExpression	RESET_CONSTANT_VISITED ( p )		3990176	0					
ANR	3990383	Callee	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990384	Identifier	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990385	ArgumentList	p		3990176	1					
ANR	3990386	Argument	p		3990176	0					
ANR	3990387	Identifier	p		3990176	0					
ANR	3990388	ReturnStatement	return FAILURE ;	574:4:15965:15979	3990176	1	True				
ANR	3990389	Identifier	FAILURE		3990176	0					
ANR	3990390	ElseStatement	else		3990176	0					
ANR	3990391	IfStatement	"if ( ( colon = ( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) ) ) )"		3990176	0					
ANR	3990392	Condition	"colon = ( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"	575:14:15995:16058	3990176	0	True				
ANR	3990393	AssignmentExpression	"colon = ( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"		3990176	0		=			
ANR	3990394	Identifier	colon		3990176	0					
ANR	3990395	CastExpression	"( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"		3990176	1					
ANR	3990396	CastTarget	char *		3990176	0					
ANR	3990397	CallExpression	"zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"		3990176	1					
ANR	3990398	Callee	zend_memrchr		3990176	0					
ANR	3990399	Identifier	zend_memrchr		3990176	0					
ANR	3990400	ArgumentList	Z_STRVAL_P ( p )		3990176	1					
ANR	3990401	Argument	Z_STRVAL_P ( p )		3990176	0					
ANR	3990402	CallExpression	Z_STRVAL_P ( p )		3990176	0					
ANR	3990403	Callee	Z_STRVAL_P		3990176	0					
ANR	3990404	Identifier	Z_STRVAL_P		3990176	0					
ANR	3990405	ArgumentList	p		3990176	1					
ANR	3990406	Argument	p		3990176	0					
ANR	3990407	Identifier	p		3990176	0					
ANR	3990408	Argument	':'		3990176	1					
ANR	3990409	PrimaryExpression	':'		3990176	0					
ANR	3990410	Argument	Z_STRLEN_P ( p )		3990176	2					
ANR	3990411	CallExpression	Z_STRLEN_P ( p )		3990176	0					
ANR	3990412	Callee	Z_STRLEN_P		3990176	0					
ANR	3990413	Identifier	Z_STRLEN_P		3990176	0					
ANR	3990414	ArgumentList	p		3990176	1					
ANR	3990415	Argument	p		3990176	0					
ANR	3990416	Identifier	p		3990176	0					
ANR	3990417	CompoundStatement		28:80:862:862	3990176	1					
ANR	3990418	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined class constant '%s'"" , Z_STRVAL_P ( p ) )"	576:4:16067:16137	3990176	0	True				
ANR	3990419	CallExpression	"zend_throw_error ( NULL , ""Undefined class constant '%s'"" , Z_STRVAL_P ( p ) )"		3990176	0					
ANR	3990420	Callee	zend_throw_error		3990176	0					
ANR	3990421	Identifier	zend_throw_error		3990176	0					
ANR	3990422	ArgumentList	NULL		3990176	1					
ANR	3990423	Argument	NULL		3990176	0					
ANR	3990424	Identifier	NULL		3990176	0					
ANR	3990425	Argument	"""Undefined class constant '%s'"""		3990176	1					
ANR	3990426	PrimaryExpression	"""Undefined class constant '%s'"""		3990176	0					
ANR	3990427	Argument	Z_STRVAL_P ( p )		3990176	2					
ANR	3990428	CallExpression	Z_STRVAL_P ( p )		3990176	0					
ANR	3990429	Callee	Z_STRVAL_P		3990176	0					
ANR	3990430	Identifier	Z_STRVAL_P		3990176	0					
ANR	3990431	ArgumentList	p		3990176	1					
ANR	3990432	Argument	p		3990176	0					
ANR	3990433	Identifier	p		3990176	0					
ANR	3990434	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	577:4:16143:16168	3990176	1	True				
ANR	3990435	CallExpression	RESET_CONSTANT_VISITED ( p )		3990176	0					
ANR	3990436	Callee	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990437	Identifier	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990438	ArgumentList	p		3990176	1					
ANR	3990439	Argument	p		3990176	0					
ANR	3990440	Identifier	p		3990176	0					
ANR	3990441	ReturnStatement	return FAILURE ;	578:4:16174:16188	3990176	2	True				
ANR	3990442	Identifier	FAILURE		3990176	0					
ANR	3990443	ElseStatement	else		3990176	0					
ANR	3990444	CompoundStatement		35:4:1060:1093	3990176	0					
ANR	3990445	IdentifierDeclStatement	zend_string * save = Z_STR_P ( p ) ;	580:4:16206:16236	3990176	0	True				
ANR	3990446	IdentifierDecl	* save = Z_STR_P ( p )		3990176	0					
ANR	3990447	IdentifierDeclType	zend_string *		3990176	0					
ANR	3990448	Identifier	save		3990176	1					
ANR	3990449	AssignmentExpression	* save = Z_STR_P ( p )		3990176	2		=			
ANR	3990450	Identifier	save		3990176	0					
ANR	3990451	CallExpression	Z_STR_P ( p )		3990176	1					
ANR	3990452	Callee	Z_STR_P		3990176	0					
ANR	3990453	Identifier	Z_STR_P		3990176	0					
ANR	3990454	ArgumentList	p		3990176	1					
ANR	3990455	Argument	p		3990176	0					
ANR	3990456	Identifier	p		3990176	0					
ANR	3990457	IdentifierDeclStatement	char * slash ;	581:4:16242:16253	3990176	1	True				
ANR	3990458	IdentifierDecl	* slash		3990176	0					
ANR	3990459	IdentifierDeclType	char *		3990176	0					
ANR	3990460	Identifier	slash		3990176	1					
ANR	3990461	IdentifierDeclStatement	size_t actual_len = Z_STRLEN_P ( p ) ;	582:4:16259:16292	3990176	2	True				
ANR	3990462	IdentifierDecl	actual_len = Z_STRLEN_P ( p )		3990176	0					
ANR	3990463	IdentifierDeclType	size_t		3990176	0					
ANR	3990464	Identifier	actual_len		3990176	1					
ANR	3990465	AssignmentExpression	actual_len = Z_STRLEN_P ( p )		3990176	2		=			
ANR	3990466	Identifier	actual_len		3990176	0					
ANR	3990467	CallExpression	Z_STRLEN_P ( p )		3990176	1					
ANR	3990468	Callee	Z_STRLEN_P		3990176	0					
ANR	3990469	Identifier	Z_STRLEN_P		3990176	0					
ANR	3990470	ArgumentList	p		3990176	1					
ANR	3990471	Argument	p		3990176	0					
ANR	3990472	Identifier	p		3990176	0					
ANR	3990473	IfStatement	"if ( ( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) && ( slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len ) ) )"		3990176	3					
ANR	3990474	Condition	"( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) && ( slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len ) )"	583:8:16302:16407	3990176	0	True				
ANR	3990475	AndExpression	"( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) && ( slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len ) )"		3990176	0		&&			
ANR	3990476	BitAndExpression	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED		3990176	0		&			
ANR	3990477	CallExpression	Z_CONST_FLAGS_P ( p )		3990176	0					
ANR	3990478	Callee	Z_CONST_FLAGS_P		3990176	0					
ANR	3990479	Identifier	Z_CONST_FLAGS_P		3990176	0					
ANR	3990480	ArgumentList	p		3990176	1					
ANR	3990481	Argument	p		3990176	0					
ANR	3990482	Identifier	p		3990176	0					
ANR	3990483	Identifier	IS_CONSTANT_UNQUALIFIED		3990176	1					
ANR	3990484	AssignmentExpression	"slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len )"		3990176	1		=			
ANR	3990485	Identifier	slash		3990176	0					
ANR	3990486	CastExpression	"( char * ) zend_memrchr ( actual , '\\\\' , actual_len )"		3990176	1					
ANR	3990487	CastTarget	char *		3990176	0					
ANR	3990488	CallExpression	"zend_memrchr ( actual , '\\\\' , actual_len )"		3990176	1					
ANR	3990489	Callee	zend_memrchr		3990176	0					
ANR	3990490	Identifier	zend_memrchr		3990176	0					
ANR	3990491	ArgumentList	actual		3990176	1					
ANR	3990492	Argument	actual		3990176	0					
ANR	3990493	Identifier	actual		3990176	0					
ANR	3990494	Argument	'\\\\'		3990176	1					
ANR	3990495	PrimaryExpression	'\\\\'		3990176	0					
ANR	3990496	Argument	actual_len		3990176	2					
ANR	3990497	Identifier	actual_len		3990176	0					
ANR	3990498	CompoundStatement		36:116:1211:1211	3990176	1					
ANR	3990499	ExpressionStatement	actual = slash + 1	584:5:16417:16435	3990176	0	True				
ANR	3990500	AssignmentExpression	actual = slash + 1		3990176	0		=			
ANR	3990501	Identifier	actual		3990176	0					
ANR	3990502	AdditiveExpression	slash + 1		3990176	1		+			
ANR	3990503	Identifier	slash		3990176	0					
ANR	3990504	PrimaryExpression	1		3990176	1					
ANR	3990505	ExpressionStatement	actual_len -= ( actual - Z_STRVAL_P ( p ) )	585:5:16442:16480	3990176	1	True				
ANR	3990506	AssignmentExpression	actual_len -= ( actual - Z_STRVAL_P ( p ) )		3990176	0		-=			
ANR	3990507	Identifier	actual_len		3990176	0					
ANR	3990508	AdditiveExpression	actual - Z_STRVAL_P ( p )		3990176	1		-			
ANR	3990509	Identifier	actual		3990176	0					
ANR	3990510	CallExpression	Z_STRVAL_P ( p )		3990176	1					
ANR	3990511	Callee	Z_STRVAL_P		3990176	0					
ANR	3990512	Identifier	Z_STRVAL_P		3990176	0					
ANR	3990513	ArgumentList	p		3990176	1					
ANR	3990514	Argument	p		3990176	0					
ANR	3990515	Identifier	p		3990176	0					
ANR	3990516	IfStatement	if ( inline_change )		3990176	2					
ANR	3990517	Condition	inline_change	586:9:16491:16503	3990176	0	True				
ANR	3990518	Identifier	inline_change		3990176	0					
ANR	3990519	CompoundStatement		40:6:1315:1371	3990176	1					
ANR	3990520	IdentifierDeclStatement	"zend_string * s = zend_string_init ( actual , actual_len , 0 ) ;"	587:6:16514:16570	3990176	0	True				
ANR	3990521	IdentifierDecl	"* s = zend_string_init ( actual , actual_len , 0 )"		3990176	0					
ANR	3990522	IdentifierDeclType	zend_string *		3990176	0					
ANR	3990523	Identifier	s		3990176	1					
ANR	3990524	AssignmentExpression	"* s = zend_string_init ( actual , actual_len , 0 )"		3990176	2		=			
ANR	3990525	Identifier	s		3990176	0					
ANR	3990526	CallExpression	"zend_string_init ( actual , actual_len , 0 )"		3990176	1					
ANR	3990527	Callee	zend_string_init		3990176	0					
ANR	3990528	Identifier	zend_string_init		3990176	0					
ANR	3990529	ArgumentList	actual		3990176	1					
ANR	3990530	Argument	actual		3990176	0					
ANR	3990531	Identifier	actual		3990176	0					
ANR	3990532	Argument	actual_len		3990176	1					
ANR	3990533	Identifier	actual_len		3990176	0					
ANR	3990534	Argument	0		3990176	2					
ANR	3990535	PrimaryExpression	0		3990176	0					
ANR	3990536	ExpressionStatement	Z_STR_P ( p ) = s	588:6:16578:16592	3990176	1	True				
ANR	3990537	AssignmentExpression	Z_STR_P ( p ) = s		3990176	0		=			
ANR	3990538	CallExpression	Z_STR_P ( p )		3990176	0					
ANR	3990539	Callee	Z_STR_P		3990176	0					
ANR	3990540	Identifier	Z_STR_P		3990176	0					
ANR	3990541	ArgumentList	p		3990176	1					
ANR	3990542	Argument	p		3990176	0					
ANR	3990543	Identifier	p		3990176	0					
ANR	3990544	Identifier	s		3990176	1					
ANR	3990545	ExpressionStatement	Z_TYPE_FLAGS_P ( p ) = IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE	589:6:16600:16657	3990176	2	True				
ANR	3990546	AssignmentExpression	Z_TYPE_FLAGS_P ( p ) = IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE		3990176	0		=			
ANR	3990547	CallExpression	Z_TYPE_FLAGS_P ( p )		3990176	0					
ANR	3990548	Callee	Z_TYPE_FLAGS_P		3990176	0					
ANR	3990549	Identifier	Z_TYPE_FLAGS_P		3990176	0					
ANR	3990550	ArgumentList	p		3990176	1					
ANR	3990551	Argument	p		3990176	0					
ANR	3990552	Identifier	p		3990176	0					
ANR	3990553	InclusiveOrExpression	IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE		3990176	1		|			
ANR	3990554	Identifier	IS_TYPE_REFCOUNTED		3990176	0					
ANR	3990555	Identifier	IS_TYPE_COPYABLE		3990176	1					
ANR	3990556	IfStatement	if ( actual [ 0 ] == '\\\\' )		3990176	4					
ANR	3990557	Condition	actual [ 0 ] == '\\\\'	592:8:16680:16696	3990176	0	True				
ANR	3990558	EqualityExpression	actual [ 0 ] == '\\\\'		3990176	0		==			
ANR	3990559	ArrayIndexing	actual [ 0 ]		3990176	0					
ANR	3990560	Identifier	actual		3990176	0					
ANR	3990561	PrimaryExpression	0		3990176	1					
ANR	3990562	PrimaryExpression	'\\\\'		3990176	1					
ANR	3990563	CompoundStatement		45:27:1500:1500	3990176	1					
ANR	3990564	IfStatement	if ( inline_change )		3990176	0					
ANR	3990565	Condition	inline_change	593:9:16710:16722	3990176	0	True				
ANR	3990566	Identifier	inline_change		3990176	0					
ANR	3990567	CompoundStatement		46:24:1526:1526	3990176	1					
ANR	3990568	ExpressionStatement	"memmove ( Z_STRVAL_P ( p ) , Z_STRVAL_P ( p ) + 1 , Z_STRLEN_P ( p ) )"	594:6:16733:16787	3990176	0	True				
ANR	3990569	CallExpression	"memmove ( Z_STRVAL_P ( p ) , Z_STRVAL_P ( p ) + 1 , Z_STRLEN_P ( p ) )"		3990176	0					
ANR	3990570	Callee	memmove		3990176	0					
ANR	3990571	Identifier	memmove		3990176	0					
ANR	3990572	ArgumentList	Z_STRVAL_P ( p )		3990176	1					
ANR	3990573	Argument	Z_STRVAL_P ( p )		3990176	0					
ANR	3990574	CallExpression	Z_STRVAL_P ( p )		3990176	0					
ANR	3990575	Callee	Z_STRVAL_P		3990176	0					
ANR	3990576	Identifier	Z_STRVAL_P		3990176	0					
ANR	3990577	ArgumentList	p		3990176	1					
ANR	3990578	Argument	p		3990176	0					
ANR	3990579	Identifier	p		3990176	0					
ANR	3990580	Argument	Z_STRVAL_P ( p ) + 1		3990176	1					
ANR	3990581	AdditiveExpression	Z_STRVAL_P ( p ) + 1		3990176	0		+			
ANR	3990582	CallExpression	Z_STRVAL_P ( p )		3990176	0					
ANR	3990583	Callee	Z_STRVAL_P		3990176	0					
ANR	3990584	Identifier	Z_STRVAL_P		3990176	0					
ANR	3990585	ArgumentList	p		3990176	1					
ANR	3990586	Argument	p		3990176	0					
ANR	3990587	Identifier	p		3990176	0					
ANR	3990588	PrimaryExpression	1		3990176	1					
ANR	3990589	Argument	Z_STRLEN_P ( p )		3990176	2					
ANR	3990590	CallExpression	Z_STRLEN_P ( p )		3990176	0					
ANR	3990591	Callee	Z_STRLEN_P		3990176	0					
ANR	3990592	Identifier	Z_STRLEN_P		3990176	0					
ANR	3990593	ArgumentList	p		3990176	1					
ANR	3990594	Argument	p		3990176	0					
ANR	3990595	Identifier	p		3990176	0					
ANR	3990596	ExpressionStatement	-- Z_STRLEN_P ( p )	595:6:16795:16810	3990176	1	True				
ANR	3990597	UnaryExpression	-- Z_STRLEN_P ( p )		3990176	0					
ANR	3990598	IncDec	--		3990176	0					
ANR	3990599	CallExpression	Z_STRLEN_P ( p )		3990176	1					
ANR	3990600	Callee	Z_STRLEN_P		3990176	0					
ANR	3990601	Identifier	Z_STRLEN_P		3990176	0					
ANR	3990602	ArgumentList	p		3990176	1					
ANR	3990603	Argument	p		3990176	0					
ANR	3990604	Identifier	p		3990176	0					
ANR	3990605	ElseStatement	else		3990176	0					
ANR	3990606	CompoundStatement		49:12:1625:1625	3990176	0					
ANR	3990607	ExpressionStatement	++ actual	597:6:16832:16840	3990176	0	True				
ANR	3990608	UnaryExpression	++ actual		3990176	0					
ANR	3990609	IncDec	++		3990176	0					
ANR	3990610	Identifier	actual		3990176	1					
ANR	3990611	ExpressionStatement	-- actual_len	599:5:16854:16866	3990176	1	True				
ANR	3990612	UnaryExpression	-- actual_len		3990176	0					
ANR	3990613	IncDec	--		3990176	0					
ANR	3990614	Identifier	actual_len		3990176	1					
ANR	3990615	IfStatement	if ( ( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) == 0 )		3990176	5					
ANR	3990616	Condition	( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) == 0	601:8:16882:16932	3990176	0	True				
ANR	3990617	EqualityExpression	( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) == 0		3990176	0		==			
ANR	3990618	BitAndExpression	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED		3990176	0		&			
ANR	3990619	CallExpression	Z_CONST_FLAGS_P ( p )		3990176	0					
ANR	3990620	Callee	Z_CONST_FLAGS_P		3990176	0					
ANR	3990621	Identifier	Z_CONST_FLAGS_P		3990176	0					
ANR	3990622	ArgumentList	p		3990176	1					
ANR	3990623	Argument	p		3990176	0					
ANR	3990624	Identifier	p		3990176	0					
ANR	3990625	Identifier	IS_CONSTANT_UNQUALIFIED		3990176	1					
ANR	3990626	PrimaryExpression	0		3990176	1					
ANR	3990627	CompoundStatement		54:61:1736:1736	3990176	1					
ANR	3990628	IfStatement	if ( ZSTR_VAL ( save ) [ 0 ] == '\\\\' )		3990176	0					
ANR	3990629	Condition	ZSTR_VAL ( save ) [ 0 ] == '\\\\'	602:9:16946:16970	3990176	0	True				
ANR	3990630	EqualityExpression	ZSTR_VAL ( save ) [ 0 ] == '\\\\'		3990176	0		==			
ANR	3990631	ArrayIndexing	ZSTR_VAL ( save ) [ 0 ]		3990176	0					
ANR	3990632	CallExpression	ZSTR_VAL ( save )		3990176	0					
ANR	3990633	Callee	ZSTR_VAL		3990176	0					
ANR	3990634	Identifier	ZSTR_VAL		3990176	0					
ANR	3990635	ArgumentList	save		3990176	1					
ANR	3990636	Argument	save		3990176	0					
ANR	3990637	Identifier	save		3990176	0					
ANR	3990638	PrimaryExpression	0		3990176	1					
ANR	3990639	PrimaryExpression	'\\\\'		3990176	1					
ANR	3990640	CompoundStatement		55:36:1774:1774	3990176	1					
ANR	3990641	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) + 1 )"	603:6:16981:17050	3990176	0	True				
ANR	3990642	CallExpression	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) + 1 )"		3990176	0					
ANR	3990643	Callee	zend_throw_error		3990176	0					
ANR	3990644	Identifier	zend_throw_error		3990176	0					
ANR	3990645	ArgumentList	NULL		3990176	1					
ANR	3990646	Argument	NULL		3990176	0					
ANR	3990647	Identifier	NULL		3990176	0					
ANR	3990648	Argument	"""Undefined constant '%s'"""		3990176	1					
ANR	3990649	PrimaryExpression	"""Undefined constant '%s'"""		3990176	0					
ANR	3990650	Argument	ZSTR_VAL ( save ) + 1		3990176	2					
ANR	3990651	AdditiveExpression	ZSTR_VAL ( save ) + 1		3990176	0		+			
ANR	3990652	CallExpression	ZSTR_VAL ( save )		3990176	0					
ANR	3990653	Callee	ZSTR_VAL		3990176	0					
ANR	3990654	Identifier	ZSTR_VAL		3990176	0					
ANR	3990655	ArgumentList	save		3990176	1					
ANR	3990656	Argument	save		3990176	0					
ANR	3990657	Identifier	save		3990176	0					
ANR	3990658	PrimaryExpression	1		3990176	1					
ANR	3990659	ElseStatement	else		3990176	0					
ANR	3990660	CompoundStatement		57:12:1865:1865	3990176	0					
ANR	3990661	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) )"	605:6:17072:17137	3990176	0	True				
ANR	3990662	CallExpression	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) )"		3990176	0					
ANR	3990663	Callee	zend_throw_error		3990176	0					
ANR	3990664	Identifier	zend_throw_error		3990176	0					
ANR	3990665	ArgumentList	NULL		3990176	1					
ANR	3990666	Argument	NULL		3990176	0					
ANR	3990667	Identifier	NULL		3990176	0					
ANR	3990668	Argument	"""Undefined constant '%s'"""		3990176	1					
ANR	3990669	PrimaryExpression	"""Undefined constant '%s'"""		3990176	0					
ANR	3990670	Argument	ZSTR_VAL ( save )		3990176	2					
ANR	3990671	CallExpression	ZSTR_VAL ( save )		3990176	0					
ANR	3990672	Callee	ZSTR_VAL		3990176	0					
ANR	3990673	Identifier	ZSTR_VAL		3990176	0					
ANR	3990674	ArgumentList	save		3990176	1					
ANR	3990675	Argument	save		3990176	0					
ANR	3990676	Identifier	save		3990176	0					
ANR	3990677	IfStatement	if ( inline_change )		3990176	1					
ANR	3990678	Condition	inline_change	607:9:17155:17167	3990176	0	True				
ANR	3990679	Identifier	inline_change		3990176	0					
ANR	3990680	CompoundStatement		60:24:1971:1971	3990176	1					
ANR	3990681	ExpressionStatement	zend_string_release ( save )	608:6:17178:17203	3990176	0	True				
ANR	3990682	CallExpression	zend_string_release ( save )		3990176	0					
ANR	3990683	Callee	zend_string_release		3990176	0					
ANR	3990684	Identifier	zend_string_release		3990176	0					
ANR	3990685	ArgumentList	save		3990176	1					
ANR	3990686	Argument	save		3990176	0					
ANR	3990687	Identifier	save		3990176	0					
ANR	3990688	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	610:5:17217:17242	3990176	2	True				
ANR	3990689	CallExpression	RESET_CONSTANT_VISITED ( p )		3990176	0					
ANR	3990690	Callee	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990691	Identifier	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990692	ArgumentList	p		3990176	1					
ANR	3990693	Argument	p		3990176	0					
ANR	3990694	Identifier	p		3990176	0					
ANR	3990695	ReturnStatement	return FAILURE ;	611:5:17249:17263	3990176	3	True				
ANR	3990696	Identifier	FAILURE		3990176	0					
ANR	3990697	ElseStatement	else		3990176	0					
ANR	3990698	CompoundStatement		65:11:2077:2077	3990176	0					
ANR	3990699	ExpressionStatement	"zend_error ( E_NOTICE , ""Use of undefined constant %s - assumed '%s'"" , actual , actual )"	613:5:17283:17368	3990176	0	True				
ANR	3990700	CallExpression	"zend_error ( E_NOTICE , ""Use of undefined constant %s - assumed '%s'"" , actual , actual )"		3990176	0					
ANR	3990701	Callee	zend_error		3990176	0					
ANR	3990702	Identifier	zend_error		3990176	0					
ANR	3990703	ArgumentList	E_NOTICE		3990176	1					
ANR	3990704	Argument	E_NOTICE		3990176	0					
ANR	3990705	Identifier	E_NOTICE		3990176	0					
ANR	3990706	Argument	"""Use of undefined constant %s - assumed '%s'"""		3990176	1					
ANR	3990707	PrimaryExpression	"""Use of undefined constant %s - assumed '%s'"""		3990176	0					
ANR	3990708	Argument	actual		3990176	2					
ANR	3990709	Identifier	actual		3990176	0					
ANR	3990710	Argument	actual		3990176	3					
ANR	3990711	Identifier	actual		3990176	0					
ANR	3990712	IfStatement	if ( ! inline_change )		3990176	1					
ANR	3990713	Condition	! inline_change	614:9:17379:17392	3990176	0	True				
ANR	3990714	UnaryOperationExpression	! inline_change		3990176	0					
ANR	3990715	UnaryOperator	!		3990176	0					
ANR	3990716	Identifier	inline_change		3990176	1					
ANR	3990717	CompoundStatement		67:25:2196:2196	3990176	1					
ANR	3990718	ExpressionStatement	"ZVAL_STRINGL ( p , actual , actual_len )"	615:6:17403:17438	3990176	0	True				
ANR	3990719	CallExpression	"ZVAL_STRINGL ( p , actual , actual_len )"		3990176	0					
ANR	3990720	Callee	ZVAL_STRINGL		3990176	0					
ANR	3990721	Identifier	ZVAL_STRINGL		3990176	0					
ANR	3990722	ArgumentList	p		3990176	1					
ANR	3990723	Argument	p		3990176	0					
ANR	3990724	Identifier	p		3990176	0					
ANR	3990725	Argument	actual		3990176	1					
ANR	3990726	Identifier	actual		3990176	0					
ANR	3990727	Argument	actual_len		3990176	2					
ANR	3990728	Identifier	actual_len		3990176	0					
ANR	3990729	ElseStatement	else		3990176	0					
ANR	3990730	CompoundStatement		69:12:2253:2253	3990176	0					
ANR	3990731	ExpressionStatement	Z_TYPE_INFO_P ( p ) = Z_REFCOUNTED_P ( p ) ? IS_STRING_EX : IS_INTERNED_STRING_EX	617:6:17460:17542	3990176	0	True				
ANR	3990732	AssignmentExpression	Z_TYPE_INFO_P ( p ) = Z_REFCOUNTED_P ( p ) ? IS_STRING_EX : IS_INTERNED_STRING_EX		3990176	0		=			
ANR	3990733	CallExpression	Z_TYPE_INFO_P ( p )		3990176	0					
ANR	3990734	Callee	Z_TYPE_INFO_P		3990176	0					
ANR	3990735	Identifier	Z_TYPE_INFO_P		3990176	0					
ANR	3990736	ArgumentList	p		3990176	1					
ANR	3990737	Argument	p		3990176	0					
ANR	3990738	Identifier	p		3990176	0					
ANR	3990739	ConditionalExpression	Z_REFCOUNTED_P ( p ) ? IS_STRING_EX : IS_INTERNED_STRING_EX		3990176	1					
ANR	3990740	Condition	Z_REFCOUNTED_P ( p )		3990176	0					
ANR	3990741	CallExpression	Z_REFCOUNTED_P ( p )		3990176	0					
ANR	3990742	Callee	Z_REFCOUNTED_P		3990176	0					
ANR	3990743	Identifier	Z_REFCOUNTED_P		3990176	0					
ANR	3990744	ArgumentList	p		3990176	1					
ANR	3990745	Argument	p		3990176	0					
ANR	3990746	Identifier	p		3990176	0					
ANR	3990747	Identifier	IS_STRING_EX		3990176	1					
ANR	3990748	Identifier	IS_INTERNED_STRING_EX		3990176	2					
ANR	3990749	IfStatement	if ( save && ZSTR_VAL ( save ) != actual )		3990176	1					
ANR	3990750	Condition	save && ZSTR_VAL ( save ) != actual	619:10:17554:17585	3990176	0	True				
ANR	3990751	AndExpression	save && ZSTR_VAL ( save ) != actual		3990176	0		&&			
ANR	3990752	Identifier	save		3990176	0					
ANR	3990753	EqualityExpression	ZSTR_VAL ( save ) != actual		3990176	1		!=			
ANR	3990754	CallExpression	ZSTR_VAL ( save )		3990176	0					
ANR	3990755	Callee	ZSTR_VAL		3990176	0					
ANR	3990756	Identifier	ZSTR_VAL		3990176	0					
ANR	3990757	ArgumentList	save		3990176	1					
ANR	3990758	Argument	save		3990176	0					
ANR	3990759	Identifier	save		3990176	0					
ANR	3990760	Identifier	actual		3990176	1					
ANR	3990761	CompoundStatement		72:44:2389:2389	3990176	1					
ANR	3990762	ExpressionStatement	zend_string_release ( save )	620:7:17597:17622	3990176	0	True				
ANR	3990763	CallExpression	zend_string_release ( save )		3990176	0					
ANR	3990764	Callee	zend_string_release		3990176	0					
ANR	3990765	Identifier	zend_string_release		3990176	0					
ANR	3990766	ArgumentList	save		3990176	1					
ANR	3990767	Argument	save		3990176	0					
ANR	3990768	Identifier	save		3990176	0					
ANR	3990769	ElseStatement	else		3990176	0					
ANR	3990770	CompoundStatement		78:9:2460:2460	3990176	0					
ANR	3990771	IfStatement	if ( inline_change )		3990176	0					
ANR	3990772	Condition	inline_change	626:7:17668:17680	3990176	0	True				
ANR	3990773	Identifier	inline_change		3990176	0					
ANR	3990774	CompoundStatement		79:22:2484:2484	3990176	1					
ANR	3990775	ExpressionStatement	zend_string_release ( Z_STR_P ( p ) )	627:4:17689:17720	3990176	0	True				
ANR	3990776	CallExpression	zend_string_release ( Z_STR_P ( p ) )		3990176	0					
ANR	3990777	Callee	zend_string_release		3990176	0					
ANR	3990778	Identifier	zend_string_release		3990176	0					
ANR	3990779	ArgumentList	Z_STR_P ( p )		3990176	1					
ANR	3990780	Argument	Z_STR_P ( p )		3990176	0					
ANR	3990781	CallExpression	Z_STR_P ( p )		3990176	0					
ANR	3990782	Callee	Z_STR_P		3990176	0					
ANR	3990783	Identifier	Z_STR_P		3990176	0					
ANR	3990784	ArgumentList	p		3990176	1					
ANR	3990785	Argument	p		3990176	0					
ANR	3990786	Identifier	p		3990176	0					
ANR	3990787	ExpressionStatement	"ZVAL_COPY_VALUE ( p , const_value )"	629:3:17730:17761	3990176	1	True				
ANR	3990788	CallExpression	"ZVAL_COPY_VALUE ( p , const_value )"		3990176	0					
ANR	3990789	Callee	ZVAL_COPY_VALUE		3990176	0					
ANR	3990790	Identifier	ZVAL_COPY_VALUE		3990176	0					
ANR	3990791	ArgumentList	p		3990176	1					
ANR	3990792	Argument	p		3990176	0					
ANR	3990793	Identifier	p		3990176	0					
ANR	3990794	Argument	const_value		3990176	1					
ANR	3990795	Identifier	const_value		3990176	0					
ANR	3990796	IfStatement	if ( Z_OPT_CONSTANT_P ( p ) )		3990176	2					
ANR	3990797	Condition	Z_OPT_CONSTANT_P ( p )	630:7:17770:17788	3990176	0	True				
ANR	3990798	CallExpression	Z_OPT_CONSTANT_P ( p )		3990176	0					
ANR	3990799	Callee	Z_OPT_CONSTANT_P		3990176	0					
ANR	3990800	Identifier	Z_OPT_CONSTANT_P		3990176	0					
ANR	3990801	ArgumentList	p		3990176	1					
ANR	3990802	Argument	p		3990176	0					
ANR	3990803	Identifier	p		3990176	0					
ANR	3990804	CompoundStatement		83:28:2592:2592	3990176	1					
ANR	3990805	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS ) )"		3990176	0					
ANR	3990806	Condition	"UNEXPECTED ( zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS )"	631:8:17801:17858	3990176	0	True				
ANR	3990807	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS )"		3990176	0					
ANR	3990808	Callee	UNEXPECTED		3990176	0					
ANR	3990809	Identifier	UNEXPECTED		3990176	0					
ANR	3990810	ArgumentList	"zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS"		3990176	1					
ANR	3990811	Argument	"zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS"		3990176	0					
ANR	3990812	EqualityExpression	"zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS"		3990176	0		!=			
ANR	3990813	CallExpression	"zval_update_constant_ex ( p , 1 , NULL )"		3990176	0					
ANR	3990814	Callee	zval_update_constant_ex		3990176	0					
ANR	3990815	Identifier	zval_update_constant_ex		3990176	0					
ANR	3990816	ArgumentList	p		3990176	1					
ANR	3990817	Argument	p		3990176	0					
ANR	3990818	Identifier	p		3990176	0					
ANR	3990819	Argument	1		3990176	1					
ANR	3990820	PrimaryExpression	1		3990176	0					
ANR	3990821	Argument	NULL		3990176	2					
ANR	3990822	Identifier	NULL		3990176	0					
ANR	3990823	Identifier	SUCCESS		3990176	1					
ANR	3990824	CompoundStatement		84:68:2662:2662	3990176	1					
ANR	3990825	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	632:5:17868:17893	3990176	0	True				
ANR	3990826	CallExpression	RESET_CONSTANT_VISITED ( p )		3990176	0					
ANR	3990827	Callee	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990828	Identifier	RESET_CONSTANT_VISITED		3990176	0					
ANR	3990829	ArgumentList	p		3990176	1					
ANR	3990830	Argument	p		3990176	0					
ANR	3990831	Identifier	p		3990176	0					
ANR	3990832	ReturnStatement	return FAILURE ;	633:5:17900:17914	3990176	1	True				
ANR	3990833	Identifier	FAILURE		3990176	0					
ANR	3990834	ExpressionStatement	zval_opt_copy_ctor ( p )	636:3:17930:17951	3990176	3	True				
ANR	3990835	CallExpression	zval_opt_copy_ctor ( p )		3990176	0					
ANR	3990836	Callee	zval_opt_copy_ctor		3990176	0					
ANR	3990837	Identifier	zval_opt_copy_ctor		3990176	0					
ANR	3990838	ArgumentList	p		3990176	1					
ANR	3990839	Argument	p		3990176	0					
ANR	3990840	Identifier	p		3990176	0					
ANR	3990841	ElseStatement	else		3990176	0					
ANR	3990842	IfStatement	if ( Z_TYPE_P ( p ) == IS_CONSTANT_AST )		3990176	0					
ANR	3990843	Condition	Z_TYPE_P ( p ) == IS_CONSTANT_AST	638:12:17969:17998	3990176	0	True				
ANR	3990844	EqualityExpression	Z_TYPE_P ( p ) == IS_CONSTANT_AST		3990176	0		==			
ANR	3990845	CallExpression	Z_TYPE_P ( p )		3990176	0					
ANR	3990846	Callee	Z_TYPE_P		3990176	0					
ANR	3990847	Identifier	Z_TYPE_P		3990176	0					
ANR	3990848	ArgumentList	p		3990176	1					
ANR	3990849	Argument	p		3990176	0					
ANR	3990850	Identifier	p		3990176	0					
ANR	3990851	Identifier	IS_CONSTANT_AST		3990176	1					
ANR	3990852	CompoundStatement		92:2:2806:2814	3990176	1					
ANR	3990853	IdentifierDeclStatement	zval tmp ;	639:2:18005:18013	3990176	0	True				
ANR	3990854	IdentifierDecl	tmp		3990176	0					
ANR	3990855	IdentifierDeclType	zval		3990176	0					
ANR	3990856	Identifier	tmp		3990176	1					
ANR	3990857	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS ) )"		3990176	1					
ANR	3990858	Condition	"UNEXPECTED ( zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS )"	641:6:18022:18089	3990176	0	True				
ANR	3990859	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS )"		3990176	0					
ANR	3990860	Callee	UNEXPECTED		3990176	0					
ANR	3990861	Identifier	UNEXPECTED		3990176	0					
ANR	3990862	ArgumentList	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS"		3990176	1					
ANR	3990863	Argument	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS"		3990176	0					
ANR	3990864	EqualityExpression	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS"		3990176	0		!=			
ANR	3990865	CallExpression	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope )"		3990176	0					
ANR	3990866	Callee	zend_ast_evaluate		3990176	0					
ANR	3990867	Identifier	zend_ast_evaluate		3990176	0					
ANR	3990868	ArgumentList	& tmp		3990176	1					
ANR	3990869	Argument	& tmp		3990176	0					
ANR	3990870	UnaryOperationExpression	& tmp		3990176	0					
ANR	3990871	UnaryOperator	&		3990176	0					
ANR	3990872	Identifier	tmp		3990176	1					
ANR	3990873	Argument	Z_ASTVAL_P ( p )		3990176	1					
ANR	3990874	CallExpression	Z_ASTVAL_P ( p )		3990176	0					
ANR	3990875	Callee	Z_ASTVAL_P		3990176	0					
ANR	3990876	Identifier	Z_ASTVAL_P		3990176	0					
ANR	3990877	ArgumentList	p		3990176	1					
ANR	3990878	Argument	p		3990176	0					
ANR	3990879	Identifier	p		3990176	0					
ANR	3990880	Argument	scope		3990176	2					
ANR	3990881	Identifier	scope		3990176	0					
ANR	3990882	Identifier	SUCCESS		3990176	1					
ANR	3990883	CompoundStatement		94:76:2893:2893	3990176	1					
ANR	3990884	ReturnStatement	return FAILURE ;	642:3:18097:18111	3990176	0	True				
ANR	3990885	Identifier	FAILURE		3990176	0					
ANR	3990886	IfStatement	if ( inline_change )		3990176	2					
ANR	3990887	Condition	inline_change	644:6:18123:18135	3990176	0	True				
ANR	3990888	Identifier	inline_change		3990176	0					
ANR	3990889	CompoundStatement		97:21:2939:2939	3990176	1					
ANR	3990890	ExpressionStatement	zval_ptr_dtor ( p )	645:3:18143:18159	3990176	0	True				
ANR	3990891	CallExpression	zval_ptr_dtor ( p )		3990176	0					
ANR	3990892	Callee	zval_ptr_dtor		3990176	0					
ANR	3990893	Identifier	zval_ptr_dtor		3990176	0					
ANR	3990894	ArgumentList	p		3990176	1					
ANR	3990895	Argument	p		3990176	0					
ANR	3990896	Identifier	p		3990176	0					
ANR	3990897	ExpressionStatement	"ZVAL_COPY_VALUE ( p , & tmp )"	647:2:18167:18191	3990176	3	True				
ANR	3990898	CallExpression	"ZVAL_COPY_VALUE ( p , & tmp )"		3990176	0					
ANR	3990899	Callee	ZVAL_COPY_VALUE		3990176	0					
ANR	3990900	Identifier	ZVAL_COPY_VALUE		3990176	0					
ANR	3990901	ArgumentList	p		3990176	1					
ANR	3990902	Argument	p		3990176	0					
ANR	3990903	Identifier	p		3990176	0					
ANR	3990904	Argument	& tmp		3990176	1					
ANR	3990905	UnaryOperationExpression	& tmp		3990176	0					
ANR	3990906	UnaryOperator	&		3990176	0					
ANR	3990907	Identifier	tmp		3990176	1					
ANR	3990908	ReturnStatement	return SUCCESS ;	649:1:18197:18211	3990176	3	True				
ANR	3990909	Identifier	SUCCESS		3990176	0					
ANR	3990910	ReturnType	~IS_VISITED_CONSTANT ZEND_API int		3990176	1					
ANR	3990911	Identifier	zval_update_constant_ex		3990176	2					
ANR	3990912	ParameterList	"zval * p , zend_bool inline_change , zend_class_entry * scope"		3990176	3					
ANR	3990913	Parameter	zval * p	547:37:15129:15135	3990176	0	True				
ANR	3990914	ParameterType	zval *		3990176	0					
ANR	3990915	Identifier	p		3990176	1					
ANR	3990916	Parameter	zend_bool inline_change	547:46:15138:15160	3990176	1	True				
ANR	3990917	ParameterType	zend_bool		3990176	0					
ANR	3990918	Identifier	inline_change		3990176	1					
ANR	3990919	Parameter	zend_class_entry * scope	547:71:15163:15185	3990176	2	True				
ANR	3990920	ParameterType	zend_class_entry *		3990176	0					
ANR	3990921	Identifier	scope		3990176	1					
ANR	3990922	CFGEntryNode	ENTRY		3990176		True				
ANR	3990923	CFGExitNode	EXIT		3990176		True				
ANR	3990924	Symbol	exception		3990176						
ANR	3990925	Symbol	current_execute_data		3990176						
ANR	3990926	Symbol	Z_TYPE_FLAGS_P		3990176						
ANR	3990927	Symbol	IS_TYPE_REFCOUNTED		3990176						
ANR	3990928	Symbol	Z_ASTVAL_P		3990176						
ANR	3990929	Symbol	zend_string_init		3990176						
ANR	3990930	Symbol	IS_CONSTANT_UNQUALIFIED		3990176						
ANR	3990931	Symbol	IS_STRING_EX		3990176						
ANR	3990932	Symbol	tmp		3990176						
ANR	3990933	Symbol	IS_INTERNED_STRING_EX		3990176						
ANR	3990934	Symbol	EG ( scope ) -> name		3990176						
ANR	3990935	Symbol	* ZSTR_VAL		3990176						
ANR	3990936	Symbol	IS_CONSTANT		3990176						
ANR	3990937	Symbol	actual		3990176						
ANR	3990938	Symbol	EG		3990176						
ANR	3990939	Symbol	NULL		3990176						
ANR	3990940	Symbol	inline_change		3990176						
ANR	3990941	Symbol	IS_TYPE_COPYABLE		3990176						
ANR	3990942	Symbol	E_NOTICE		3990176						
ANR	3990943	Symbol	zend_get_constant_ex		3990176						
ANR	3990944	Symbol	* actual		3990176						
ANR	3990945	Symbol	Z_TYPE_INFO_P		3990176						
ANR	3990946	Symbol	& tmp		3990176						
ANR	3990947	Symbol	Z_STR_P		3990176						
ANR	3990948	Symbol	Z_REFCOUNTED_P		3990176						
ANR	3990949	Symbol	Z_CONST_FLAGS_P		3990176						
ANR	3990950	Symbol	Z_OPT_CONSTANT_P		3990176						
ANR	3990951	Symbol	IS_CONSTANT_AST		3990176						
ANR	3990952	Symbol	save		3990176						
ANR	3990953	Symbol	IS_CONSTANT_CLASS		3990176						
ANR	3990954	Symbol	* EG		3990176						
ANR	3990955	Symbol	UNEXPECTED		3990176						
ANR	3990956	Symbol	actual_len		3990176						
ANR	3990957	Symbol	scope		3990176						
ANR	3990958	Symbol	Z_STRLEN_P		3990176						
ANR	3990959	Symbol	IS_CONSTANT_VISITED		3990176						
ANR	3990960	Symbol	zend_memrchr		3990176						
ANR	3990961	Symbol	SUCCESS		3990176						
ANR	3990962	Symbol	const_value		3990176						
ANR	3990963	Symbol	Z_TYPE_P		3990176						
ANR	3990964	Symbol	Z_STRVAL_P		3990176						
ANR	3990965	Symbol	FAILURE		3990176						
ANR	3990966	Symbol	ZSTR_VAL		3990176						
ANR	3990967	Symbol	p		3990176						
ANR	3990968	Symbol	s		3990176						
ANR	3990969	Symbol	zend_ast_evaluate		3990176						
ANR	3990970	Symbol	colon		3990176						
ANR	3990971	Symbol	slash		3990176						
ANR	3990972	Symbol	zval_update_constant_ex		3990176						
ANR	3990973	Function	zval_update_constant	653:0:18226:18365							
ANR	3990974	FunctionDef	"zval_update_constant (zval * pp , zend_bool inline_change)"		3990973	0					
ANR	3990975	CompoundStatement		654:0:18305:18365	3990973	0					
ANR	3990976	ReturnStatement	"return zval_update_constant_ex ( pp , inline_change , NULL ) ;"	655:1:18308:18363	3990973	0	True				
ANR	3990977	CallExpression	"zval_update_constant_ex ( pp , inline_change , NULL )"		3990973	0					
ANR	3990978	Callee	zval_update_constant_ex		3990973	0					
ANR	3990979	Identifier	zval_update_constant_ex		3990973	0					
ANR	3990980	ArgumentList	pp		3990973	1					
ANR	3990981	Argument	pp		3990973	0					
ANR	3990982	Identifier	pp		3990973	0					
ANR	3990983	Argument	inline_change		3990973	1					
ANR	3990984	Identifier	inline_change		3990973	0					
ANR	3990985	Argument	NULL		3990973	2					
ANR	3990986	Identifier	NULL		3990973	0					
ANR	3990987	ReturnType	ZEND_API int		3990973	1					
ANR	3990988	Identifier	zval_update_constant		3990973	2					
ANR	3990989	ParameterList	"zval * pp , zend_bool inline_change"		3990973	3					
ANR	3990990	Parameter	zval * pp	653:34:18260:18267	3990973	0	True				
ANR	3990991	ParameterType	zval *		3990973	0					
ANR	3990992	Identifier	pp		3990973	1					
ANR	3990993	Parameter	zend_bool inline_change	653:44:18270:18292	3990973	1	True				
ANR	3990994	ParameterType	zend_bool		3990973	0					
ANR	3990995	Identifier	inline_change		3990973	1					
ANR	3990996	CFGEntryNode	ENTRY		3990973		True				
ANR	3990997	CFGExitNode	EXIT		3990973		True				
ANR	3990998	Symbol	pp		3990973						
ANR	3990999	Symbol	NULL		3990973						
ANR	3991000	Symbol	inline_change		3990973						
ANR	3991001	Symbol	zval_update_constant_ex		3990973						
ANR	3991002	Function	call_user_function	659:0:18378:18642							
ANR	3991003	FunctionDef	"call_user_function (HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ])"		3991002	0					
ANR	3991004	CompoundStatement		660:0:18528:18642	3991002	0					
ANR	3991005	ReturnStatement	"return call_user_function_ex ( function_table , object , function_name , retval_ptr , param_count , params , 1 , NULL ) ;"	661:1:18531:18640	3991002	0	True				
ANR	3991006	CallExpression	"call_user_function_ex ( function_table , object , function_name , retval_ptr , param_count , params , 1 , NULL )"		3991002	0					
ANR	3991007	Callee	call_user_function_ex		3991002	0					
ANR	3991008	Identifier	call_user_function_ex		3991002	0					
ANR	3991009	ArgumentList	function_table		3991002	1					
ANR	3991010	Argument	function_table		3991002	0					
ANR	3991011	Identifier	function_table		3991002	0					
ANR	3991012	Argument	object		3991002	1					
ANR	3991013	Identifier	object		3991002	0					
ANR	3991014	Argument	function_name		3991002	2					
ANR	3991015	Identifier	function_name		3991002	0					
ANR	3991016	Argument	retval_ptr		3991002	3					
ANR	3991017	Identifier	retval_ptr		3991002	0					
ANR	3991018	Argument	param_count		3991002	4					
ANR	3991019	Identifier	param_count		3991002	0					
ANR	3991020	Argument	params		3991002	5					
ANR	3991021	Identifier	params		3991002	0					
ANR	3991022	Argument	1		3991002	6					
ANR	3991023	PrimaryExpression	1		3991002	0					
ANR	3991024	Argument	NULL		3991002	7					
ANR	3991025	Identifier	NULL		3991002	0					
ANR	3991026	ReturnType	int		3991002	1					
ANR	3991027	Identifier	call_user_function		3991002	2					
ANR	3991028	ParameterList	"HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ]"		3991002	3					
ANR	3991029	Parameter	HashTable * function_table	659:23:18401:18425	3991002	0	True				
ANR	3991030	ParameterType	HashTable *		3991002	0					
ANR	3991031	Identifier	function_table		3991002	1					
ANR	3991032	Parameter	zval * object	659:50:18428:18439	3991002	1	True				
ANR	3991033	ParameterType	zval *		3991002	0					
ANR	3991034	Identifier	object		3991002	1					
ANR	3991035	Parameter	zval * function_name	659:64:18442:18460	3991002	2	True				
ANR	3991036	ParameterType	zval *		3991002	0					
ANR	3991037	Identifier	function_name		3991002	1					
ANR	3991038	Parameter	zval * retval_ptr	659:85:18463:18478	3991002	3	True				
ANR	3991039	ParameterType	zval *		3991002	0					
ANR	3991040	Identifier	retval_ptr		3991002	1					
ANR	3991041	Parameter	uint32_t param_count	659:103:18481:18500	3991002	4	True				
ANR	3991042	ParameterType	uint32_t		3991002	0					
ANR	3991043	Identifier	param_count		3991002	1					
ANR	3991044	Parameter	zval params [ ]	659:125:18503:18515	3991002	5	True				
ANR	3991045	ParameterType	zval [ ]		3991002	0					
ANR	3991046	Identifier	params		3991002	1					
ANR	3991047	CFGEntryNode	ENTRY		3991002		True				
ANR	3991048	CFGExitNode	EXIT		3991002		True				
ANR	3991049	Symbol	NULL		3991002						
ANR	3991050	Symbol	param_count		3991002						
ANR	3991051	Symbol	function_name		3991002						
ANR	3991052	Symbol	function_table		3991002						
ANR	3991053	Symbol	params		3991002						
ANR	3991054	Symbol	call_user_function_ex		3991002						
ANR	3991055	Symbol	object		3991002						
ANR	3991056	Symbol	retval_ptr		3991002						
ANR	3991057	Function	call_user_function_ex	665:0:18655:19244							
ANR	3991058	FunctionDef	"call_user_function_ex (HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] , int no_separation , zend_array * symbol_table)"		3991057	0					
ANR	3991059	CompoundStatement		666:0:18853:19244	3991057	0					
ANR	3991060	IdentifierDeclStatement	zend_fcall_info fci ;	667:1:18856:18875	3991057	0	True				
ANR	3991061	IdentifierDecl	fci		3991057	0					
ANR	3991062	IdentifierDeclType	zend_fcall_info		3991057	0					
ANR	3991063	Identifier	fci		3991057	1					
ANR	3991064	ExpressionStatement	fci . size = sizeof ( fci )	669:1:18879:18901	3991057	1	True				
ANR	3991065	AssignmentExpression	fci . size = sizeof ( fci )		3991057	0		=			
ANR	3991066	MemberAccess	fci . size		3991057	0					
ANR	3991067	Identifier	fci		3991057	0					
ANR	3991068	Identifier	size		3991057	1					
ANR	3991069	SizeofExpression	sizeof ( fci )		3991057	1					
ANR	3991070	Sizeof	sizeof		3991057	0					
ANR	3991071	SizeofOperand	fci		3991057	1					
ANR	3991072	ExpressionStatement	fci . function_table = function_table	670:1:18904:18939	3991057	2	True				
ANR	3991073	AssignmentExpression	fci . function_table = function_table		3991057	0		=			
ANR	3991074	MemberAccess	fci . function_table		3991057	0					
ANR	3991075	Identifier	fci		3991057	0					
ANR	3991076	Identifier	function_table		3991057	1					
ANR	3991077	Identifier	function_table		3991057	1					
ANR	3991078	ExpressionStatement	fci . object = object ? Z_OBJ_P ( object ) : NULL	671:1:18942:18986	3991057	3	True				
ANR	3991079	AssignmentExpression	fci . object = object ? Z_OBJ_P ( object ) : NULL		3991057	0		=			
ANR	3991080	MemberAccess	fci . object		3991057	0					
ANR	3991081	Identifier	fci		3991057	0					
ANR	3991082	Identifier	object		3991057	1					
ANR	3991083	ConditionalExpression	object ? Z_OBJ_P ( object ) : NULL		3991057	1					
ANR	3991084	Condition	object		3991057	0					
ANR	3991085	Identifier	object		3991057	0					
ANR	3991086	CallExpression	Z_OBJ_P ( object )		3991057	1					
ANR	3991087	Callee	Z_OBJ_P		3991057	0					
ANR	3991088	Identifier	Z_OBJ_P		3991057	0					
ANR	3991089	ArgumentList	object		3991057	1					
ANR	3991090	Argument	object		3991057	0					
ANR	3991091	Identifier	object		3991057	0					
ANR	3991092	Identifier	NULL		3991057	2					
ANR	3991093	ExpressionStatement	"ZVAL_COPY_VALUE ( & fci . function_name , function_name )"	672:1:18989:19039	3991057	4	True				
ANR	3991094	CallExpression	"ZVAL_COPY_VALUE ( & fci . function_name , function_name )"		3991057	0					
ANR	3991095	Callee	ZVAL_COPY_VALUE		3991057	0					
ANR	3991096	Identifier	ZVAL_COPY_VALUE		3991057	0					
ANR	3991097	ArgumentList	& fci . function_name		3991057	1					
ANR	3991098	Argument	& fci . function_name		3991057	0					
ANR	3991099	UnaryOperationExpression	& fci . function_name		3991057	0					
ANR	3991100	UnaryOperator	&		3991057	0					
ANR	3991101	MemberAccess	fci . function_name		3991057	1					
ANR	3991102	Identifier	fci		3991057	0					
ANR	3991103	Identifier	function_name		3991057	1					
ANR	3991104	Argument	function_name		3991057	1					
ANR	3991105	Identifier	function_name		3991057	0					
ANR	3991106	ExpressionStatement	fci . retval = retval_ptr	673:1:19042:19065	3991057	5	True				
ANR	3991107	AssignmentExpression	fci . retval = retval_ptr		3991057	0		=			
ANR	3991108	MemberAccess	fci . retval		3991057	0					
ANR	3991109	Identifier	fci		3991057	0					
ANR	3991110	Identifier	retval		3991057	1					
ANR	3991111	Identifier	retval_ptr		3991057	1					
ANR	3991112	ExpressionStatement	fci . param_count = param_count	674:1:19068:19097	3991057	6	True				
ANR	3991113	AssignmentExpression	fci . param_count = param_count		3991057	0		=			
ANR	3991114	MemberAccess	fci . param_count		3991057	0					
ANR	3991115	Identifier	fci		3991057	0					
ANR	3991116	Identifier	param_count		3991057	1					
ANR	3991117	Identifier	param_count		3991057	1					
ANR	3991118	ExpressionStatement	fci . params = params	675:1:19100:19119	3991057	7	True				
ANR	3991119	AssignmentExpression	fci . params = params		3991057	0		=			
ANR	3991120	MemberAccess	fci . params		3991057	0					
ANR	3991121	Identifier	fci		3991057	0					
ANR	3991122	Identifier	params		3991057	1					
ANR	3991123	Identifier	params		3991057	1					
ANR	3991124	ExpressionStatement	fci . no_separation = ( zend_bool ) no_separation	676:1:19122:19167	3991057	8	True				
ANR	3991125	AssignmentExpression	fci . no_separation = ( zend_bool ) no_separation		3991057	0		=			
ANR	3991126	MemberAccess	fci . no_separation		3991057	0					
ANR	3991127	Identifier	fci		3991057	0					
ANR	3991128	Identifier	no_separation		3991057	1					
ANR	3991129	CastExpression	( zend_bool ) no_separation		3991057	1					
ANR	3991130	CastTarget	zend_bool		3991057	0					
ANR	3991131	Identifier	no_separation		3991057	1					
ANR	3991132	ExpressionStatement	fci . symbol_table = symbol_table	677:1:19170:19201	3991057	9	True				
ANR	3991133	AssignmentExpression	fci . symbol_table = symbol_table		3991057	0		=			
ANR	3991134	MemberAccess	fci . symbol_table		3991057	0					
ANR	3991135	Identifier	fci		3991057	0					
ANR	3991136	Identifier	symbol_table		3991057	1					
ANR	3991137	Identifier	symbol_table		3991057	1					
ANR	3991138	ReturnStatement	"return zend_call_function ( & fci , NULL ) ;"	679:1:19205:19242	3991057	10	True				
ANR	3991139	CallExpression	"zend_call_function ( & fci , NULL )"		3991057	0					
ANR	3991140	Callee	zend_call_function		3991057	0					
ANR	3991141	Identifier	zend_call_function		3991057	0					
ANR	3991142	ArgumentList	& fci		3991057	1					
ANR	3991143	Argument	& fci		3991057	0					
ANR	3991144	UnaryOperationExpression	& fci		3991057	0					
ANR	3991145	UnaryOperator	&		3991057	0					
ANR	3991146	Identifier	fci		3991057	1					
ANR	3991147	Argument	NULL		3991057	1					
ANR	3991148	Identifier	NULL		3991057	0					
ANR	3991149	ReturnType	int		3991057	1					
ANR	3991150	Identifier	call_user_function_ex		3991057	2					
ANR	3991151	ParameterList	"HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] , int no_separation , zend_array * symbol_table"		3991057	3					
ANR	3991152	Parameter	HashTable * function_table	665:26:18681:18705	3991057	0	True				
ANR	3991153	ParameterType	HashTable *		3991057	0					
ANR	3991154	Identifier	function_table		3991057	1					
ANR	3991155	Parameter	zval * object	665:53:18708:18719	3991057	1	True				
ANR	3991156	ParameterType	zval *		3991057	0					
ANR	3991157	Identifier	object		3991057	1					
ANR	3991158	Parameter	zval * function_name	665:67:18722:18740	3991057	2	True				
ANR	3991159	ParameterType	zval *		3991057	0					
ANR	3991160	Identifier	function_name		3991057	1					
ANR	3991161	Parameter	zval * retval_ptr	665:88:18743:18758	3991057	3	True				
ANR	3991162	ParameterType	zval *		3991057	0					
ANR	3991163	Identifier	retval_ptr		3991057	1					
ANR	3991164	Parameter	uint32_t param_count	665:106:18761:18780	3991057	4	True				
ANR	3991165	ParameterType	uint32_t		3991057	0					
ANR	3991166	Identifier	param_count		3991057	1					
ANR	3991167	Parameter	zval params [ ]	665:128:18783:18795	3991057	5	True				
ANR	3991168	ParameterType	zval [ ]		3991057	0					
ANR	3991169	Identifier	params		3991057	1					
ANR	3991170	Parameter	int no_separation	665:143:18798:18814	3991057	6	True				
ANR	3991171	ParameterType	int		3991057	0					
ANR	3991172	Identifier	no_separation		3991057	1					
ANR	3991173	Parameter	zend_array * symbol_table	665:162:18817:18840	3991057	7	True				
ANR	3991174	ParameterType	zend_array *		3991057	0					
ANR	3991175	Identifier	symbol_table		3991057	1					
ANR	3991176	CFGEntryNode	ENTRY		3991057		True				
ANR	3991177	CFGExitNode	EXIT		3991057		True				
ANR	3991178	Symbol	no_separation		3991057						
ANR	3991179	Symbol	fci . object		3991057						
ANR	3991180	Symbol	fci . function_table		3991057						
ANR	3991181	Symbol	& fci . function_name		3991057						
ANR	3991182	Symbol	fci . params		3991057						
ANR	3991183	Symbol	NULL		3991057						
ANR	3991184	Symbol	param_count		3991057						
ANR	3991185	Symbol	Z_OBJ_P		3991057						
ANR	3991186	Symbol	symbol_table		3991057						
ANR	3991187	Symbol	params		3991057						
ANR	3991188	Symbol	fci		3991057						
ANR	3991189	Symbol	retval_ptr		3991057						
ANR	3991190	Symbol	fci . param_count		3991057						
ANR	3991191	Symbol	fci . size		3991057						
ANR	3991192	Symbol	fci . retval		3991057						
ANR	3991193	Symbol	& fci		3991057						
ANR	3991194	Symbol	function_name		3991057						
ANR	3991195	Symbol	fci . symbol_table		3991057						
ANR	3991196	Symbol	zend_call_function		3991057						
ANR	3991197	Symbol	function_table		3991057						
ANR	3991198	Symbol	fci . no_separation		3991057						
ANR	3991199	Symbol	object		3991057						
ANR	3991200	Function	zend_call_function	683:0:19257:27345							
ANR	3991201	FunctionDef	"zend_call_function (zend_fcall_info * fci , zend_fcall_info_cache * fci_cache)"		3991200	0					
ANR	3991202	CompoundStatement		684:0:19346:27345	3991200	0					
ANR	3991203	IdentifierDeclStatement	uint32_t i ;	685:1:19349:19359	3991200	0	True				
ANR	3991204	IdentifierDecl	i		3991200	0					
ANR	3991205	IdentifierDeclType	uint32_t		3991200	0					
ANR	3991206	Identifier	i		3991200	1					
ANR	3991207	IdentifierDeclStatement	zend_class_entry * calling_scope = NULL ;	686:1:19362:19400	3991200	1	True				
ANR	3991208	IdentifierDecl	* calling_scope = NULL		3991200	0					
ANR	3991209	IdentifierDeclType	zend_class_entry *		3991200	0					
ANR	3991210	Identifier	calling_scope		3991200	1					
ANR	3991211	AssignmentExpression	* calling_scope = NULL		3991200	2		=			
ANR	3991212	Identifier	NULL		3991200	0					
ANR	3991213	Identifier	NULL		3991200	1					
ANR	3991214	IdentifierDeclStatement	"zend_execute_data * call , dummy_execute_data ;"	687:1:19403:19446	3991200	2	True				
ANR	3991215	IdentifierDecl	* call		3991200	0					
ANR	3991216	IdentifierDeclType	zend_execute_data *		3991200	0					
ANR	3991217	Identifier	call		3991200	1					
ANR	3991218	IdentifierDecl	dummy_execute_data		3991200	1					
ANR	3991219	IdentifierDeclType	zend_execute_data		3991200	0					
ANR	3991220	Identifier	dummy_execute_data		3991200	1					
ANR	3991221	IdentifierDeclStatement	zend_fcall_info_cache fci_cache_local ;	688:1:19449:19486	3991200	3	True				
ANR	3991222	IdentifierDecl	fci_cache_local		3991200	0					
ANR	3991223	IdentifierDeclType	zend_fcall_info_cache		3991200	0					
ANR	3991224	Identifier	fci_cache_local		3991200	1					
ANR	3991225	IdentifierDeclStatement	zend_function * func ;	689:1:19489:19508	3991200	4	True				
ANR	3991226	IdentifierDecl	* func		3991200	0					
ANR	3991227	IdentifierDeclType	zend_function *		3991200	0					
ANR	3991228	Identifier	func		3991200	1					
ANR	3991229	IdentifierDeclStatement	zend_class_entry * orig_scope ;	690:1:19511:19539	3991200	5	True				
ANR	3991230	IdentifierDecl	* orig_scope		3991200	0					
ANR	3991231	IdentifierDeclType	zend_class_entry *		3991200	0					
ANR	3991232	Identifier	orig_scope		3991200	1					
ANR	3991233	ExpressionStatement	ZVAL_UNDEF ( fci -> retval )	692:1:19543:19566	3991200	6	True				
ANR	3991234	CallExpression	ZVAL_UNDEF ( fci -> retval )		3991200	0					
ANR	3991235	Callee	ZVAL_UNDEF		3991200	0					
ANR	3991236	Identifier	ZVAL_UNDEF		3991200	0					
ANR	3991237	ArgumentList	fci -> retval		3991200	1					
ANR	3991238	Argument	fci -> retval		3991200	0					
ANR	3991239	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3991240	Identifier	fci		3991200	0					
ANR	3991241	Identifier	retval		3991200	1					
ANR	3991242	IfStatement	if ( ! EG ( active ) )		3991200	7					
ANR	3991243	Condition	! EG ( active )	694:5:19574:19584	3991200	0	True				
ANR	3991244	UnaryOperationExpression	! EG ( active )		3991200	0					
ANR	3991245	UnaryOperator	!		3991200	0					
ANR	3991246	CallExpression	EG ( active )		3991200	1					
ANR	3991247	Callee	EG		3991200	0					
ANR	3991248	Identifier	EG		3991200	0					
ANR	3991249	ArgumentList	active		3991200	1					
ANR	3991250	Argument	active		3991200	0					
ANR	3991251	Identifier	active		3991200	0					
ANR	3991252	CompoundStatement		11:18:240:240	3991200	1					
ANR	3991253	ReturnStatement	return FAILURE ;	695:2:19591:19605	3991200	0	True				
ANR	3991254	Identifier	FAILURE		3991200	0					
ANR	3991255	IfStatement	if ( EG ( exception ) )		3991200	8					
ANR	3991256	Condition	EG ( exception )	698:5:19651:19663	3991200	0	True				
ANR	3991257	CallExpression	EG ( exception )		3991200	0					
ANR	3991258	Callee	EG		3991200	0					
ANR	3991259	Identifier	EG		3991200	0					
ANR	3991260	ArgumentList	exception		3991200	1					
ANR	3991261	Argument	exception		3991200	0					
ANR	3991262	Identifier	exception		3991200	0					
ANR	3991263	CompoundStatement		15:20:319:319	3991200	1					
ANR	3991264	ReturnStatement	return FAILURE ;	699:2:19670:19684	3991200	0	True				
ANR	3991265	Identifier	FAILURE		3991200	0					
ANR	3991266	SwitchStatement	switch ( fci -> size )		3991200	9					
ANR	3991267	Condition	fci -> size	702:9:19755:19763	3991200	0	True				
ANR	3991268	PtrMemberAccess	fci -> size		3991200	0					
ANR	3991269	Identifier	fci		3991200	0					
ANR	3991270	Identifier	size		3991200	1					
ANR	3991271	CompoundStatement		19:20:419:419	3991200	1					
ANR	3991272	Statement	case	703:2:19770:19773	3991200	0	True				
ANR	3991273	Statement	sizeof	703:7:19775:19780	3991200	1	True				
ANR	3991274	Statement	(	703:13:19781:19781	3991200	2	True				
ANR	3991275	Statement	zend_fcall_info	703:14:19782:19796	3991200	3	True				
ANR	3991276	Statement	)	703:29:19797:19797	3991200	4	True				
ANR	3991277	Statement	:	703:30:19798:19798	3991200	5	True				
ANR	3991278	BreakStatement	break ;	704:3:19803:19808	3991200	6	True				
ANR	3991279	Label	default :	705:2:19842:19849	3991200	7	True				
ANR	3991280	Identifier	default		3991200	0					
ANR	3991281	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Corrupted fcall_info provided to zend_call_function()"" )"	706:3:19854:19944	3991200	8	True				
ANR	3991282	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Corrupted fcall_info provided to zend_call_function()"" )"		3991200	0					
ANR	3991283	Callee	zend_error_noreturn		3991200	0					
ANR	3991284	Identifier	zend_error_noreturn		3991200	0					
ANR	3991285	ArgumentList	E_CORE_ERROR		3991200	1					
ANR	3991286	Argument	E_CORE_ERROR		3991200	0					
ANR	3991287	Identifier	E_CORE_ERROR		3991200	0					
ANR	3991288	Argument	"""Corrupted fcall_info provided to zend_call_function()"""		3991200	1					
ANR	3991289	PrimaryExpression	"""Corrupted fcall_info provided to zend_call_function()"""		3991200	0					
ANR	3991290	BreakStatement	break ;	707:3:19949:19954	3991200	9	True				
ANR	3991291	ExpressionStatement	orig_scope = EG ( scope )	710:1:19961:19983	3991200	10	True				
ANR	3991292	AssignmentExpression	orig_scope = EG ( scope )		3991200	0		=			
ANR	3991293	Identifier	orig_scope		3991200	0					
ANR	3991294	CallExpression	EG ( scope )		3991200	1					
ANR	3991295	Callee	EG		3991200	0					
ANR	3991296	Identifier	EG		3991200	0					
ANR	3991297	ArgumentList	scope		3991200	1					
ANR	3991298	Argument	scope		3991200	0					
ANR	3991299	Identifier	scope		3991200	0					
ANR	3991300	IfStatement	if ( ! EG ( current_execute_data ) )		3991200	11					
ANR	3991301	Condition	! EG ( current_execute_data )	713:5:20022:20046	3991200	0	True				
ANR	3991302	UnaryOperationExpression	! EG ( current_execute_data )		3991200	0					
ANR	3991303	UnaryOperator	!		3991200	0					
ANR	3991304	CallExpression	EG ( current_execute_data )		3991200	1					
ANR	3991305	Callee	EG		3991200	0					
ANR	3991306	Identifier	EG		3991200	0					
ANR	3991307	ArgumentList	current_execute_data		3991200	1					
ANR	3991308	Argument	current_execute_data		3991200	0					
ANR	3991309	Identifier	current_execute_data		3991200	0					
ANR	3991310	CompoundStatement		30:32:702:702	3991200	1					
ANR	3991311	ExpressionStatement	"memset ( & dummy_execute_data , 0 , sizeof ( zend_execute_data ) )"	718:2:20231:20288	3991200	0	True				
ANR	3991312	CallExpression	"memset ( & dummy_execute_data , 0 , sizeof ( zend_execute_data ) )"		3991200	0					
ANR	3991313	Callee	memset		3991200	0					
ANR	3991314	Identifier	memset		3991200	0					
ANR	3991315	ArgumentList	& dummy_execute_data		3991200	1					
ANR	3991316	Argument	& dummy_execute_data		3991200	0					
ANR	3991317	UnaryOperationExpression	& dummy_execute_data		3991200	0					
ANR	3991318	UnaryOperator	&		3991200	0					
ANR	3991319	Identifier	dummy_execute_data		3991200	1					
ANR	3991320	Argument	0		3991200	1					
ANR	3991321	PrimaryExpression	0		3991200	0					
ANR	3991322	Argument	sizeof ( zend_execute_data )		3991200	2					
ANR	3991323	SizeofExpression	sizeof ( zend_execute_data )		3991200	0					
ANR	3991324	Sizeof	sizeof		3991200	0					
ANR	3991325	SizeofOperand	zend_execute_data		3991200	1					
ANR	3991326	ExpressionStatement	EG ( current_execute_data ) = & dummy_execute_data	719:2:20292:20338	3991200	1	True				
ANR	3991327	AssignmentExpression	EG ( current_execute_data ) = & dummy_execute_data		3991200	0		=			
ANR	3991328	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991329	Callee	EG		3991200	0					
ANR	3991330	Identifier	EG		3991200	0					
ANR	3991331	ArgumentList	current_execute_data		3991200	1					
ANR	3991332	Argument	current_execute_data		3991200	0					
ANR	3991333	Identifier	current_execute_data		3991200	0					
ANR	3991334	UnaryOperationExpression	& dummy_execute_data		3991200	1					
ANR	3991335	UnaryOperator	&		3991200	0					
ANR	3991336	Identifier	dummy_execute_data		3991200	1					
ANR	3991337	ElseStatement	else		3991200	0					
ANR	3991338	IfStatement	if ( EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME )		3991200	0					
ANR	3991339	Condition	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME	720:12:20352:20756	3991200	0	True				
ANR	3991340	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		3991200	0		&&			
ANR	3991341	PtrMemberAccess	EG ( current_execute_data ) -> func		3991200	0					
ANR	3991342	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991343	Callee	EG		3991200	0					
ANR	3991344	Identifier	EG		3991200	0					
ANR	3991345	ArgumentList	current_execute_data		3991200	1					
ANR	3991346	Argument	current_execute_data		3991200	0					
ANR	3991347	Identifier	current_execute_data		3991200	0					
ANR	3991348	Identifier	func		3991200	1					
ANR	3991349	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		3991200	1		&&			
ANR	3991350	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		3991200	0					
ANR	3991351	Callee	ZEND_USER_CODE		3991200	0					
ANR	3991352	Identifier	ZEND_USER_CODE		3991200	0					
ANR	3991353	ArgumentList	EG ( current_execute_data ) -> func -> common . type		3991200	1					
ANR	3991354	Argument	EG ( current_execute_data ) -> func -> common . type		3991200	0					
ANR	3991355	MemberAccess	EG ( current_execute_data ) -> func -> common . type		3991200	0					
ANR	3991356	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		3991200	0					
ANR	3991357	PtrMemberAccess	EG ( current_execute_data ) -> func		3991200	0					
ANR	3991358	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991359	Callee	EG		3991200	0					
ANR	3991360	Identifier	EG		3991200	0					
ANR	3991361	ArgumentList	current_execute_data		3991200	1					
ANR	3991362	Argument	current_execute_data		3991200	0					
ANR	3991363	Identifier	current_execute_data		3991200	0					
ANR	3991364	Identifier	func		3991200	1					
ANR	3991365	Identifier	common		3991200	1					
ANR	3991366	Identifier	type		3991200	1					
ANR	3991367	AndExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		3991200	1		&&			
ANR	3991368	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL		3991200	0		!=			
ANR	3991369	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		3991200	0					
ANR	3991370	PtrMemberAccess	EG ( current_execute_data ) -> opline		3991200	0					
ANR	3991371	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991372	Callee	EG		3991200	0					
ANR	3991373	Identifier	EG		3991200	0					
ANR	3991374	ArgumentList	current_execute_data		3991200	1					
ANR	3991375	Argument	current_execute_data		3991200	0					
ANR	3991376	Identifier	current_execute_data		3991200	0					
ANR	3991377	Identifier	opline		3991200	1					
ANR	3991378	Identifier	opcode		3991200	1					
ANR	3991379	Identifier	ZEND_DO_FCALL		3991200	1					
ANR	3991380	AndExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		3991200	1		&&			
ANR	3991381	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL		3991200	0		!=			
ANR	3991382	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		3991200	0					
ANR	3991383	PtrMemberAccess	EG ( current_execute_data ) -> opline		3991200	0					
ANR	3991384	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991385	Callee	EG		3991200	0					
ANR	3991386	Identifier	EG		3991200	0					
ANR	3991387	ArgumentList	current_execute_data		3991200	1					
ANR	3991388	Argument	current_execute_data		3991200	0					
ANR	3991389	Identifier	current_execute_data		3991200	0					
ANR	3991390	Identifier	opline		3991200	1					
ANR	3991391	Identifier	opcode		3991200	1					
ANR	3991392	Identifier	ZEND_DO_ICALL		3991200	1					
ANR	3991393	AndExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		3991200	1		&&			
ANR	3991394	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL		3991200	0		!=			
ANR	3991395	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		3991200	0					
ANR	3991396	PtrMemberAccess	EG ( current_execute_data ) -> opline		3991200	0					
ANR	3991397	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991398	Callee	EG		3991200	0					
ANR	3991399	Identifier	EG		3991200	0					
ANR	3991400	ArgumentList	current_execute_data		3991200	1					
ANR	3991401	Argument	current_execute_data		3991200	0					
ANR	3991402	Identifier	current_execute_data		3991200	0					
ANR	3991403	Identifier	opline		3991200	1					
ANR	3991404	Identifier	opcode		3991200	1					
ANR	3991405	Identifier	ZEND_DO_UCALL		3991200	1					
ANR	3991406	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		3991200	1		!=			
ANR	3991407	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		3991200	0					
ANR	3991408	PtrMemberAccess	EG ( current_execute_data ) -> opline		3991200	0					
ANR	3991409	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991410	Callee	EG		3991200	0					
ANR	3991411	Identifier	EG		3991200	0					
ANR	3991412	ArgumentList	current_execute_data		3991200	1					
ANR	3991413	Argument	current_execute_data		3991200	0					
ANR	3991414	Identifier	current_execute_data		3991200	0					
ANR	3991415	Identifier	opline		3991200	1					
ANR	3991416	Identifier	opcode		3991200	1					
ANR	3991417	Identifier	ZEND_DO_FCALL_BY_NAME		3991200	1					
ANR	3991418	CompoundStatement		42:79:1412:1412	3991200	1					
ANR	3991419	ExpressionStatement	dummy_execute_data = * EG ( current_execute_data )	727:2:20823:20869	3991200	0	True				
ANR	3991420	AssignmentExpression	dummy_execute_data = * EG ( current_execute_data )		3991200	0		=			
ANR	3991421	Identifier	dummy_execute_data		3991200	0					
ANR	3991422	UnaryOperationExpression	* EG ( current_execute_data )		3991200	1					
ANR	3991423	UnaryOperator	*		3991200	0					
ANR	3991424	CallExpression	EG ( current_execute_data )		3991200	1					
ANR	3991425	Callee	EG		3991200	0					
ANR	3991426	Identifier	EG		3991200	0					
ANR	3991427	ArgumentList	current_execute_data		3991200	1					
ANR	3991428	Argument	current_execute_data		3991200	0					
ANR	3991429	Identifier	current_execute_data		3991200	0					
ANR	3991430	ExpressionStatement	dummy_execute_data . prev_execute_data = EG ( current_execute_data )	728:2:20873:20936	3991200	1	True				
ANR	3991431	AssignmentExpression	dummy_execute_data . prev_execute_data = EG ( current_execute_data )		3991200	0		=			
ANR	3991432	MemberAccess	dummy_execute_data . prev_execute_data		3991200	0					
ANR	3991433	Identifier	dummy_execute_data		3991200	0					
ANR	3991434	Identifier	prev_execute_data		3991200	1					
ANR	3991435	CallExpression	EG ( current_execute_data )		3991200	1					
ANR	3991436	Callee	EG		3991200	0					
ANR	3991437	Identifier	EG		3991200	0					
ANR	3991438	ArgumentList	current_execute_data		3991200	1					
ANR	3991439	Argument	current_execute_data		3991200	0					
ANR	3991440	Identifier	current_execute_data		3991200	0					
ANR	3991441	ExpressionStatement	dummy_execute_data . call = NULL	729:2:20940:20970	3991200	2	True				
ANR	3991442	AssignmentExpression	dummy_execute_data . call = NULL		3991200	0		=			
ANR	3991443	MemberAccess	dummy_execute_data . call		3991200	0					
ANR	3991444	Identifier	dummy_execute_data		3991200	0					
ANR	3991445	Identifier	call		3991200	1					
ANR	3991446	Identifier	NULL		3991200	1					
ANR	3991447	ExpressionStatement	dummy_execute_data . opline = NULL	730:2:20974:21006	3991200	3	True				
ANR	3991448	AssignmentExpression	dummy_execute_data . opline = NULL		3991200	0		=			
ANR	3991449	MemberAccess	dummy_execute_data . opline		3991200	0					
ANR	3991450	Identifier	dummy_execute_data		3991200	0					
ANR	3991451	Identifier	opline		3991200	1					
ANR	3991452	Identifier	NULL		3991200	1					
ANR	3991453	ExpressionStatement	dummy_execute_data . func = NULL	731:2:21010:21040	3991200	4	True				
ANR	3991454	AssignmentExpression	dummy_execute_data . func = NULL		3991200	0		=			
ANR	3991455	MemberAccess	dummy_execute_data . func		3991200	0					
ANR	3991456	Identifier	dummy_execute_data		3991200	0					
ANR	3991457	Identifier	func		3991200	1					
ANR	3991458	Identifier	NULL		3991200	1					
ANR	3991459	ExpressionStatement	EG ( current_execute_data ) = & dummy_execute_data	732:2:21044:21090	3991200	5	True				
ANR	3991460	AssignmentExpression	EG ( current_execute_data ) = & dummy_execute_data		3991200	0		=			
ANR	3991461	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991462	Callee	EG		3991200	0					
ANR	3991463	Identifier	EG		3991200	0					
ANR	3991464	ArgumentList	current_execute_data		3991200	1					
ANR	3991465	Argument	current_execute_data		3991200	0					
ANR	3991466	Identifier	current_execute_data		3991200	0					
ANR	3991467	UnaryOperationExpression	& dummy_execute_data		3991200	1					
ANR	3991468	UnaryOperator	&		3991200	0					
ANR	3991469	Identifier	dummy_execute_data		3991200	1					
ANR	3991470	IfStatement	if ( ! fci_cache || ! fci_cache -> initialized )		3991200	12					
ANR	3991471	Condition	! fci_cache || ! fci_cache -> initialized	735:5:21101:21137	3991200	0	True				
ANR	3991472	OrExpression	! fci_cache || ! fci_cache -> initialized		3991200	0		||			
ANR	3991473	UnaryOperationExpression	! fci_cache		3991200	0					
ANR	3991474	UnaryOperator	!		3991200	0					
ANR	3991475	Identifier	fci_cache		3991200	1					
ANR	3991476	UnaryOperationExpression	! fci_cache -> initialized		3991200	1					
ANR	3991477	UnaryOperator	!		3991200	0					
ANR	3991478	PtrMemberAccess	fci_cache -> initialized		3991200	1					
ANR	3991479	Identifier	fci_cache		3991200	0					
ANR	3991480	Identifier	initialized		3991200	1					
ANR	3991481	CompoundStatement		54:2:1827:1845	3991200	1					
ANR	3991482	IdentifierDeclStatement	zend_string * callable_name ;	736:2:21144:21170	3991200	0	True				
ANR	3991483	IdentifierDecl	* callable_name		3991200	0					
ANR	3991484	IdentifierDeclType	zend_string *		3991200	0					
ANR	3991485	Identifier	callable_name		3991200	1					
ANR	3991486	IdentifierDeclStatement	char * error = NULL ;	737:2:21174:21192	3991200	1	True				
ANR	3991487	IdentifierDecl	* error = NULL		3991200	0					
ANR	3991488	IdentifierDeclType	char *		3991200	0					
ANR	3991489	Identifier	error		3991200	1					
ANR	3991490	AssignmentExpression	* error = NULL		3991200	2		=			
ANR	3991491	Identifier	NULL		3991200	0					
ANR	3991492	Identifier	NULL		3991200	1					
ANR	3991493	IfStatement	if ( ! fci_cache )		3991200	2					
ANR	3991494	Condition	! fci_cache	739:6:21201:21210	3991200	0	True				
ANR	3991495	UnaryOperationExpression	! fci_cache		3991200	0					
ANR	3991496	UnaryOperator	!		3991200	0					
ANR	3991497	Identifier	fci_cache		3991200	1					
ANR	3991498	CompoundStatement		56:18:1866:1866	3991200	1					
ANR	3991499	ExpressionStatement	fci_cache = & fci_cache_local	740:3:21218:21246	3991200	0	True				
ANR	3991500	AssignmentExpression	fci_cache = & fci_cache_local		3991200	0		=			
ANR	3991501	Identifier	fci_cache		3991200	0					
ANR	3991502	UnaryOperationExpression	& fci_cache_local		3991200	1					
ANR	3991503	UnaryOperator	&		3991200	0					
ANR	3991504	Identifier	fci_cache_local		3991200	1					
ANR	3991505	IfStatement	"if ( ! zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error ) )"		3991200	3					
ANR	3991506	Condition	"! zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error )"	743:6:21259:21373	3991200	0	True				
ANR	3991507	UnaryOperationExpression	"! zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error )"		3991200	0					
ANR	3991508	UnaryOperator	!		3991200	0					
ANR	3991509	CallExpression	"zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error )"		3991200	1					
ANR	3991510	Callee	zend_is_callable_ex		3991200	0					
ANR	3991511	Identifier	zend_is_callable_ex		3991200	0					
ANR	3991512	ArgumentList	& fci -> function_name		3991200	1					
ANR	3991513	Argument	& fci -> function_name		3991200	0					
ANR	3991514	UnaryOperationExpression	& fci -> function_name		3991200	0					
ANR	3991515	UnaryOperator	&		3991200	0					
ANR	3991516	PtrMemberAccess	fci -> function_name		3991200	1					
ANR	3991517	Identifier	fci		3991200	0					
ANR	3991518	Identifier	function_name		3991200	1					
ANR	3991519	Argument	fci -> object		3991200	1					
ANR	3991520	PtrMemberAccess	fci -> object		3991200	0					
ANR	3991521	Identifier	fci		3991200	0					
ANR	3991522	Identifier	object		3991200	1					
ANR	3991523	Argument	IS_CALLABLE_CHECK_SILENT		3991200	2					
ANR	3991524	Identifier	IS_CALLABLE_CHECK_SILENT		3991200	0					
ANR	3991525	Argument	& callable_name		3991200	3					
ANR	3991526	UnaryOperationExpression	& callable_name		3991200	0					
ANR	3991527	UnaryOperator	&		3991200	0					
ANR	3991528	Identifier	callable_name		3991200	1					
ANR	3991529	Argument	fci_cache		3991200	4					
ANR	3991530	Identifier	fci_cache		3991200	0					
ANR	3991531	Argument	& error		3991200	5					
ANR	3991532	UnaryOperationExpression	& error		3991200	0					
ANR	3991533	UnaryOperator	&		3991200	0					
ANR	3991534	Identifier	error		3991200	1					
ANR	3991535	CompoundStatement		60:123:2029:2029	3991200	1					
ANR	3991536	IfStatement	if ( error )		3991200	0					
ANR	3991537	Condition	error	744:7:21385:21389	3991200	0	True				
ANR	3991538	Identifier	error		3991200	0					
ANR	3991539	CompoundStatement		61:14:2045:2045	3991200	1					
ANR	3991540	ExpressionStatement	"zend_error ( E_WARNING , ""Invalid callback %s, %s"" , ZSTR_VAL ( callable_name ) , error )"	745:4:21398:21478	3991200	0	True				
ANR	3991541	CallExpression	"zend_error ( E_WARNING , ""Invalid callback %s, %s"" , ZSTR_VAL ( callable_name ) , error )"		3991200	0					
ANR	3991542	Callee	zend_error		3991200	0					
ANR	3991543	Identifier	zend_error		3991200	0					
ANR	3991544	ArgumentList	E_WARNING		3991200	1					
ANR	3991545	Argument	E_WARNING		3991200	0					
ANR	3991546	Identifier	E_WARNING		3991200	0					
ANR	3991547	Argument	"""Invalid callback %s, %s"""		3991200	1					
ANR	3991548	PrimaryExpression	"""Invalid callback %s, %s"""		3991200	0					
ANR	3991549	Argument	ZSTR_VAL ( callable_name )		3991200	2					
ANR	3991550	CallExpression	ZSTR_VAL ( callable_name )		3991200	0					
ANR	3991551	Callee	ZSTR_VAL		3991200	0					
ANR	3991552	Identifier	ZSTR_VAL		3991200	0					
ANR	3991553	ArgumentList	callable_name		3991200	1					
ANR	3991554	Argument	callable_name		3991200	0					
ANR	3991555	Identifier	callable_name		3991200	0					
ANR	3991556	Argument	error		3991200	3					
ANR	3991557	Identifier	error		3991200	0					
ANR	3991558	ExpressionStatement	efree ( error )	746:4:21484:21496	3991200	1	True				
ANR	3991559	CallExpression	efree ( error )		3991200	0					
ANR	3991560	Callee	efree		3991200	0					
ANR	3991561	Identifier	efree		3991200	0					
ANR	3991562	ArgumentList	error		3991200	1					
ANR	3991563	Argument	error		3991200	0					
ANR	3991564	Identifier	error		3991200	0					
ANR	3991565	IfStatement	if ( callable_name )		3991200	1					
ANR	3991566	Condition	callable_name	748:7:21510:21522	3991200	0	True				
ANR	3991567	Identifier	callable_name		3991200	0					
ANR	3991568	CompoundStatement		65:22:2178:2178	3991200	1					
ANR	3991569	ExpressionStatement	zend_string_release ( callable_name )	749:4:21531:21565	3991200	0	True				
ANR	3991570	CallExpression	zend_string_release ( callable_name )		3991200	0					
ANR	3991571	Callee	zend_string_release		3991200	0					
ANR	3991572	Identifier	zend_string_release		3991200	0					
ANR	3991573	ArgumentList	callable_name		3991200	1					
ANR	3991574	Argument	callable_name		3991200	0					
ANR	3991575	Identifier	callable_name		3991200	0					
ANR	3991576	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		3991200	2					
ANR	3991577	Condition	EG ( current_execute_data ) == & dummy_execute_data	751:7:21579:21625	3991200	0	True				
ANR	3991578	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		3991200	0		==			
ANR	3991579	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991580	Callee	EG		3991200	0					
ANR	3991581	Identifier	EG		3991200	0					
ANR	3991582	ArgumentList	current_execute_data		3991200	1					
ANR	3991583	Argument	current_execute_data		3991200	0					
ANR	3991584	Identifier	current_execute_data		3991200	0					
ANR	3991585	UnaryOperationExpression	& dummy_execute_data		3991200	1					
ANR	3991586	UnaryOperator	&		3991200	0					
ANR	3991587	Identifier	dummy_execute_data		3991200	1					
ANR	3991588	CompoundStatement		68:56:2281:2281	3991200	1					
ANR	3991589	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	752:4:21634:21697	3991200	0	True				
ANR	3991590	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		3991200	0		=			
ANR	3991591	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991592	Callee	EG		3991200	0					
ANR	3991593	Identifier	EG		3991200	0					
ANR	3991594	ArgumentList	current_execute_data		3991200	1					
ANR	3991595	Argument	current_execute_data		3991200	0					
ANR	3991596	Identifier	current_execute_data		3991200	0					
ANR	3991597	MemberAccess	dummy_execute_data . prev_execute_data		3991200	1					
ANR	3991598	Identifier	dummy_execute_data		3991200	0					
ANR	3991599	Identifier	prev_execute_data		3991200	1					
ANR	3991600	ReturnStatement	return FAILURE ;	754:3:21707:21721	3991200	3	True				
ANR	3991601	Identifier	FAILURE		3991200	0					
ANR	3991602	ElseStatement	else		3991200	0					
ANR	3991603	IfStatement	if ( error )		3991200	0					
ANR	3991604	Condition	error	755:13:21736:21740	3991200	0	True				
ANR	3991605	Identifier	error		3991200	0					
ANR	3991606	CompoundStatement		72:20:2396:2396	3991200	1					
ANR	3991607	IfStatement	if ( error [ 0 ] >= 'a' && error [ 0 ] <= 'z' )		3991200	0					
ANR	3991608	Condition	error [ 0 ] >= 'a' && error [ 0 ] <= 'z'	757:7:21810:21843	3991200	0	True				
ANR	3991609	AndExpression	error [ 0 ] >= 'a' && error [ 0 ] <= 'z'		3991200	0		&&			
ANR	3991610	RelationalExpression	error [ 0 ] >= 'a'		3991200	0		>=			
ANR	3991611	ArrayIndexing	error [ 0 ]		3991200	0					
ANR	3991612	Identifier	error		3991200	0					
ANR	3991613	PrimaryExpression	0		3991200	1					
ANR	3991614	PrimaryExpression	'a'		3991200	1					
ANR	3991615	RelationalExpression	error [ 0 ] <= 'z'		3991200	1		<=			
ANR	3991616	ArrayIndexing	error [ 0 ]		3991200	0					
ANR	3991617	Identifier	error		3991200	0					
ANR	3991618	PrimaryExpression	0		3991200	1					
ANR	3991619	PrimaryExpression	'z'		3991200	1					
ANR	3991620	CompoundStatement		74:43:2499:2499	3991200	1					
ANR	3991621	ExpressionStatement	error [ 0 ] += ( 'A' - 'a' )	758:4:21852:21875	3991200	0	True				
ANR	3991622	AssignmentExpression	error [ 0 ] += ( 'A' - 'a' )		3991200	0		+=			
ANR	3991623	ArrayIndexing	error [ 0 ]		3991200	0					
ANR	3991624	Identifier	error		3991200	0					
ANR	3991625	PrimaryExpression	0		3991200	1					
ANR	3991626	AdditiveExpression	'A' - 'a'		3991200	1		-			
ANR	3991627	PrimaryExpression	'A'		3991200	0					
ANR	3991628	PrimaryExpression	'a'		3991200	1					
ANR	3991629	ExpressionStatement	"zend_error ( E_DEPRECATED , ""%s"" , error )"	760:3:21885:21922	3991200	1	True				
ANR	3991630	CallExpression	"zend_error ( E_DEPRECATED , ""%s"" , error )"		3991200	0					
ANR	3991631	Callee	zend_error		3991200	0					
ANR	3991632	Identifier	zend_error		3991200	0					
ANR	3991633	ArgumentList	E_DEPRECATED		3991200	1					
ANR	3991634	Argument	E_DEPRECATED		3991200	0					
ANR	3991635	Identifier	E_DEPRECATED		3991200	0					
ANR	3991636	Argument	"""%s"""		3991200	1					
ANR	3991637	PrimaryExpression	"""%s"""		3991200	0					
ANR	3991638	Argument	error		3991200	2					
ANR	3991639	Identifier	error		3991200	0					
ANR	3991640	ExpressionStatement	efree ( error )	761:3:21927:21939	3991200	2	True				
ANR	3991641	CallExpression	efree ( error )		3991200	0					
ANR	3991642	Callee	efree		3991200	0					
ANR	3991643	Identifier	efree		3991200	0					
ANR	3991644	ArgumentList	error		3991200	1					
ANR	3991645	Argument	error		3991200	0					
ANR	3991646	Identifier	error		3991200	0					
ANR	3991647	ExpressionStatement	zend_string_release ( callable_name )	763:2:21947:21981	3991200	4	True				
ANR	3991648	CallExpression	zend_string_release ( callable_name )		3991200	0					
ANR	3991649	Callee	zend_string_release		3991200	0					
ANR	3991650	Identifier	zend_string_release		3991200	0					
ANR	3991651	ArgumentList	callable_name		3991200	1					
ANR	3991652	Argument	callable_name		3991200	0					
ANR	3991653	Identifier	callable_name		3991200	0					
ANR	3991654	ExpressionStatement	func = fci_cache -> function_handler	766:1:21988:22022	3991200	13	True				
ANR	3991655	AssignmentExpression	func = fci_cache -> function_handler		3991200	0		=			
ANR	3991656	Identifier	func		3991200	0					
ANR	3991657	PtrMemberAccess	fci_cache -> function_handler		3991200	1					
ANR	3991658	Identifier	fci_cache		3991200	0					
ANR	3991659	Identifier	function_handler		3991200	1					
ANR	3991660	ExpressionStatement	"call = zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_FUNCTION , func , fci -> param_count , fci_cache -> called_scope , fci_cache -> object )"	767:1:22025:22155	3991200	14	True				
ANR	3991661	AssignmentExpression	"call = zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_FUNCTION , func , fci -> param_count , fci_cache -> called_scope , fci_cache -> object )"		3991200	0		=			
ANR	3991662	Identifier	call		3991200	0					
ANR	3991663	CallExpression	"zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_FUNCTION , func , fci -> param_count , fci_cache -> called_scope , fci_cache -> object )"		3991200	1					
ANR	3991664	Callee	zend_vm_stack_push_call_frame		3991200	0					
ANR	3991665	Identifier	zend_vm_stack_push_call_frame		3991200	0					
ANR	3991666	ArgumentList	ZEND_CALL_TOP_FUNCTION		3991200	1					
ANR	3991667	Argument	ZEND_CALL_TOP_FUNCTION		3991200	0					
ANR	3991668	Identifier	ZEND_CALL_TOP_FUNCTION		3991200	0					
ANR	3991669	Argument	func		3991200	1					
ANR	3991670	Identifier	func		3991200	0					
ANR	3991671	Argument	fci -> param_count		3991200	2					
ANR	3991672	PtrMemberAccess	fci -> param_count		3991200	0					
ANR	3991673	Identifier	fci		3991200	0					
ANR	3991674	Identifier	param_count		3991200	1					
ANR	3991675	Argument	fci_cache -> called_scope		3991200	3					
ANR	3991676	PtrMemberAccess	fci_cache -> called_scope		3991200	0					
ANR	3991677	Identifier	fci_cache		3991200	0					
ANR	3991678	Identifier	called_scope		3991200	1					
ANR	3991679	Argument	fci_cache -> object		3991200	4					
ANR	3991680	PtrMemberAccess	fci_cache -> object		3991200	0					
ANR	3991681	Identifier	fci_cache		3991200	0					
ANR	3991682	Identifier	object		3991200	1					
ANR	3991683	ExpressionStatement	calling_scope = fci_cache -> calling_scope	769:1:22158:22198	3991200	15	True				
ANR	3991684	AssignmentExpression	calling_scope = fci_cache -> calling_scope		3991200	0		=			
ANR	3991685	Identifier	calling_scope		3991200	0					
ANR	3991686	PtrMemberAccess	fci_cache -> calling_scope		3991200	1					
ANR	3991687	Identifier	fci_cache		3991200	0					
ANR	3991688	Identifier	calling_scope		3991200	1					
ANR	3991689	ExpressionStatement	fci -> object = fci_cache -> object	770:1:22201:22232	3991200	16	True				
ANR	3991690	AssignmentExpression	fci -> object = fci_cache -> object		3991200	0		=			
ANR	3991691	PtrMemberAccess	fci -> object		3991200	0					
ANR	3991692	Identifier	fci		3991200	0					
ANR	3991693	Identifier	object		3991200	1					
ANR	3991694	PtrMemberAccess	fci_cache -> object		3991200	1					
ANR	3991695	Identifier	fci_cache		3991200	0					
ANR	3991696	Identifier	object		3991200	1					
ANR	3991697	IfStatement	if ( fci -> object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] ) ) )		3991200	17					
ANR	3991698	Condition	fci -> object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] ) )	771:5:22239:22371	3991200	0	True				
ANR	3991699	AndExpression	fci -> object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] ) )		3991200	0		&&			
ANR	3991700	PtrMemberAccess	fci -> object		3991200	0					
ANR	3991701	Identifier	fci		3991200	0					
ANR	3991702	Identifier	object		3991200	1					
ANR	3991703	OrExpression	! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] )		3991200	1		||			
ANR	3991704	UnaryOperationExpression	! EG ( objects_store ) . object_buckets		3991200	0					
ANR	3991705	UnaryOperator	!		3991200	0					
ANR	3991706	MemberAccess	EG ( objects_store ) . object_buckets		3991200	1					
ANR	3991707	CallExpression	EG ( objects_store )		3991200	0					
ANR	3991708	Callee	EG		3991200	0					
ANR	3991709	Identifier	EG		3991200	0					
ANR	3991710	ArgumentList	objects_store		3991200	1					
ANR	3991711	Argument	objects_store		3991200	0					
ANR	3991712	Identifier	objects_store		3991200	0					
ANR	3991713	Identifier	object_buckets		3991200	1					
ANR	3991714	UnaryOperationExpression	! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] )		3991200	1					
ANR	3991715	UnaryOperator	!		3991200	0					
ANR	3991716	CallExpression	IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] )		3991200	1					
ANR	3991717	Callee	IS_OBJ_VALID		3991200	0					
ANR	3991718	Identifier	IS_OBJ_VALID		3991200	0					
ANR	3991719	ArgumentList	EG ( objects_store ) . object_buckets [ fci -> object -> handle ]		3991200	1					
ANR	3991720	Argument	EG ( objects_store ) . object_buckets [ fci -> object -> handle ]		3991200	0					
ANR	3991721	ArrayIndexing	EG ( objects_store ) . object_buckets [ fci -> object -> handle ]		3991200	0					
ANR	3991722	MemberAccess	EG ( objects_store ) . object_buckets		3991200	0					
ANR	3991723	CallExpression	EG ( objects_store )		3991200	0					
ANR	3991724	Callee	EG		3991200	0					
ANR	3991725	Identifier	EG		3991200	0					
ANR	3991726	ArgumentList	objects_store		3991200	1					
ANR	3991727	Argument	objects_store		3991200	0					
ANR	3991728	Identifier	objects_store		3991200	0					
ANR	3991729	Identifier	object_buckets		3991200	1					
ANR	3991730	PtrMemberAccess	fci -> object -> handle		3991200	1					
ANR	3991731	PtrMemberAccess	fci -> object		3991200	0					
ANR	3991732	Identifier	fci		3991200	0					
ANR	3991733	Identifier	object		3991200	1					
ANR	3991734	Identifier	handle		3991200	1					
ANR	3991735	CompoundStatement		90:77:3027:3027	3991200	1					
ANR	3991736	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		3991200	0					
ANR	3991737	Condition	EG ( current_execute_data ) == & dummy_execute_data	774:6:22382:22428	3991200	0	True				
ANR	3991738	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		3991200	0		==			
ANR	3991739	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991740	Callee	EG		3991200	0					
ANR	3991741	Identifier	EG		3991200	0					
ANR	3991742	ArgumentList	current_execute_data		3991200	1					
ANR	3991743	Argument	current_execute_data		3991200	0					
ANR	3991744	Identifier	current_execute_data		3991200	0					
ANR	3991745	UnaryOperationExpression	& dummy_execute_data		3991200	1					
ANR	3991746	UnaryOperator	&		3991200	0					
ANR	3991747	Identifier	dummy_execute_data		3991200	1					
ANR	3991748	CompoundStatement		91:55:3084:3084	3991200	1					
ANR	3991749	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	775:3:22436:22499	3991200	0	True				
ANR	3991750	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		3991200	0		=			
ANR	3991751	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3991752	Callee	EG		3991200	0					
ANR	3991753	Identifier	EG		3991200	0					
ANR	3991754	ArgumentList	current_execute_data		3991200	1					
ANR	3991755	Argument	current_execute_data		3991200	0					
ANR	3991756	Identifier	current_execute_data		3991200	0					
ANR	3991757	MemberAccess	dummy_execute_data . prev_execute_data		3991200	1					
ANR	3991758	Identifier	dummy_execute_data		3991200	0					
ANR	3991759	Identifier	prev_execute_data		3991200	1					
ANR	3991760	ReturnStatement	return FAILURE ;	777:2:22507:22521	3991200	1	True				
ANR	3991761	Identifier	FAILURE		3991200	0					
ANR	3991762	IfStatement	if ( func -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED ) )		3991200	18					
ANR	3991763	Condition	func -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED )	780:5:22532:22594	3991200	0	True				
ANR	3991764	BitAndExpression	func -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED )		3991200	0		&			
ANR	3991765	MemberAccess	func -> common . fn_flags		3991200	0					
ANR	3991766	PtrMemberAccess	func -> common		3991200	0					
ANR	3991767	Identifier	func		3991200	0					
ANR	3991768	Identifier	common		3991200	1					
ANR	3991769	Identifier	fn_flags		3991200	1					
ANR	3991770	InclusiveOrExpression	ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED		3991200	1		|			
ANR	3991771	Identifier	ZEND_ACC_ABSTRACT		3991200	0					
ANR	3991772	Identifier	ZEND_ACC_DEPRECATED		3991200	1					
ANR	3991773	CompoundStatement		97:70:3250:3250	3991200	1					
ANR	3991774	IfStatement	if ( func -> common . fn_flags & ZEND_ACC_ABSTRACT )		3991200	0					
ANR	3991775	Condition	func -> common . fn_flags & ZEND_ACC_ABSTRACT	781:6:22605:22645	3991200	0	True				
ANR	3991776	BitAndExpression	func -> common . fn_flags & ZEND_ACC_ABSTRACT		3991200	0		&			
ANR	3991777	MemberAccess	func -> common . fn_flags		3991200	0					
ANR	3991778	PtrMemberAccess	func -> common		3991200	0					
ANR	3991779	Identifier	func		3991200	0					
ANR	3991780	Identifier	common		3991200	1					
ANR	3991781	Identifier	fn_flags		3991200	1					
ANR	3991782	Identifier	ZEND_ACC_ABSTRACT		3991200	1					
ANR	3991783	CompoundStatement		98:49:3301:3301	3991200	1					
ANR	3991784	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot call abstract method %s::%s()"" , ZSTR_VAL ( func -> common . scope -> name ) , ZSTR_VAL ( func -> common . function_name ) )"	782:3:22653:22789	3991200	0	True				
ANR	3991785	CallExpression	"zend_throw_error ( NULL , ""Cannot call abstract method %s::%s()"" , ZSTR_VAL ( func -> common . scope -> name ) , ZSTR_VAL ( func -> common . function_name ) )"		3991200	0					
ANR	3991786	Callee	zend_throw_error		3991200	0					
ANR	3991787	Identifier	zend_throw_error		3991200	0					
ANR	3991788	ArgumentList	NULL		3991200	1					
ANR	3991789	Argument	NULL		3991200	0					
ANR	3991790	Identifier	NULL		3991200	0					
ANR	3991791	Argument	"""Cannot call abstract method %s::%s()"""		3991200	1					
ANR	3991792	PrimaryExpression	"""Cannot call abstract method %s::%s()"""		3991200	0					
ANR	3991793	Argument	ZSTR_VAL ( func -> common . scope -> name )		3991200	2					
ANR	3991794	CallExpression	ZSTR_VAL ( func -> common . scope -> name )		3991200	0					
ANR	3991795	Callee	ZSTR_VAL		3991200	0					
ANR	3991796	Identifier	ZSTR_VAL		3991200	0					
ANR	3991797	ArgumentList	func -> common . scope -> name		3991200	1					
ANR	3991798	Argument	func -> common . scope -> name		3991200	0					
ANR	3991799	PtrMemberAccess	func -> common . scope -> name		3991200	0					
ANR	3991800	MemberAccess	func -> common . scope		3991200	0					
ANR	3991801	PtrMemberAccess	func -> common		3991200	0					
ANR	3991802	Identifier	func		3991200	0					
ANR	3991803	Identifier	common		3991200	1					
ANR	3991804	Identifier	scope		3991200	1					
ANR	3991805	Identifier	name		3991200	1					
ANR	3991806	Argument	ZSTR_VAL ( func -> common . function_name )		3991200	3					
ANR	3991807	CallExpression	ZSTR_VAL ( func -> common . function_name )		3991200	0					
ANR	3991808	Callee	ZSTR_VAL		3991200	0					
ANR	3991809	Identifier	ZSTR_VAL		3991200	0					
ANR	3991810	ArgumentList	func -> common . function_name		3991200	1					
ANR	3991811	Argument	func -> common . function_name		3991200	0					
ANR	3991812	MemberAccess	func -> common . function_name		3991200	0					
ANR	3991813	PtrMemberAccess	func -> common		3991200	0					
ANR	3991814	Identifier	func		3991200	0					
ANR	3991815	Identifier	common		3991200	1					
ANR	3991816	Identifier	function_name		3991200	1					
ANR	3991817	ReturnStatement	return FAILURE ;	783:3:22794:22808	3991200	1	True				
ANR	3991818	Identifier	FAILURE		3991200	0					
ANR	3991819	IfStatement	if ( func -> common . fn_flags & ZEND_ACC_DEPRECATED )		3991200	1					
ANR	3991820	Condition	func -> common . fn_flags & ZEND_ACC_DEPRECATED	785:6:22820:22862	3991200	0	True				
ANR	3991821	BitAndExpression	func -> common . fn_flags & ZEND_ACC_DEPRECATED		3991200	0		&			
ANR	3991822	MemberAccess	func -> common . fn_flags		3991200	0					
ANR	3991823	PtrMemberAccess	func -> common		3991200	0					
ANR	3991824	Identifier	func		3991200	0					
ANR	3991825	Identifier	common		3991200	1					
ANR	3991826	Identifier	fn_flags		3991200	1					
ANR	3991827	Identifier	ZEND_ACC_DEPRECATED		3991200	1					
ANR	3991828	CompoundStatement		102:51:3518:3518	3991200	1					
ANR	3991829	ExpressionStatement	"zend_error ( E_DEPRECATED , ""Function %s%s%s() is deprecated"" , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"	786:4:22871:23074	3991200	0	True				
ANR	3991830	CallExpression	"zend_error ( E_DEPRECATED , ""Function %s%s%s() is deprecated"" , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"		3991200	0					
ANR	3991831	Callee	zend_error		3991200	0					
ANR	3991832	Identifier	zend_error		3991200	0					
ANR	3991833	ArgumentList	E_DEPRECATED		3991200	1					
ANR	3991834	Argument	E_DEPRECATED		3991200	0					
ANR	3991835	Identifier	E_DEPRECATED		3991200	0					
ANR	3991836	Argument	"""Function %s%s%s() is deprecated"""		3991200	1					
ANR	3991837	PrimaryExpression	"""Function %s%s%s() is deprecated"""		3991200	0					
ANR	3991838	Argument	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		3991200	2					
ANR	3991839	ConditionalExpression	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		3991200	0					
ANR	3991840	Condition	func -> common . scope		3991200	0					
ANR	3991841	MemberAccess	func -> common . scope		3991200	0					
ANR	3991842	PtrMemberAccess	func -> common		3991200	0					
ANR	3991843	Identifier	func		3991200	0					
ANR	3991844	Identifier	common		3991200	1					
ANR	3991845	Identifier	scope		3991200	1					
ANR	3991846	CallExpression	ZSTR_VAL ( func -> common . scope -> name )		3991200	1					
ANR	3991847	Callee	ZSTR_VAL		3991200	0					
ANR	3991848	Identifier	ZSTR_VAL		3991200	0					
ANR	3991849	ArgumentList	func -> common . scope -> name		3991200	1					
ANR	3991850	Argument	func -> common . scope -> name		3991200	0					
ANR	3991851	PtrMemberAccess	func -> common . scope -> name		3991200	0					
ANR	3991852	MemberAccess	func -> common . scope		3991200	0					
ANR	3991853	PtrMemberAccess	func -> common		3991200	0					
ANR	3991854	Identifier	func		3991200	0					
ANR	3991855	Identifier	common		3991200	1					
ANR	3991856	Identifier	scope		3991200	1					
ANR	3991857	Identifier	name		3991200	1					
ANR	3991858	PrimaryExpression	""""""		3991200	2					
ANR	3991859	Argument	"func -> common . scope ? ""::"" : """""		3991200	3					
ANR	3991860	ConditionalExpression	"func -> common . scope ? ""::"" : """""		3991200	0					
ANR	3991861	Condition	func -> common . scope		3991200	0					
ANR	3991862	MemberAccess	func -> common . scope		3991200	0					
ANR	3991863	PtrMemberAccess	func -> common		3991200	0					
ANR	3991864	Identifier	func		3991200	0					
ANR	3991865	Identifier	common		3991200	1					
ANR	3991866	Identifier	scope		3991200	1					
ANR	3991867	PrimaryExpression	"""::"""		3991200	1					
ANR	3991868	PrimaryExpression	""""""		3991200	2					
ANR	3991869	Argument	ZSTR_VAL ( func -> common . function_name )		3991200	4					
ANR	3991870	CallExpression	ZSTR_VAL ( func -> common . function_name )		3991200	0					
ANR	3991871	Callee	ZSTR_VAL		3991200	0					
ANR	3991872	Identifier	ZSTR_VAL		3991200	0					
ANR	3991873	ArgumentList	func -> common . function_name		3991200	1					
ANR	3991874	Argument	func -> common . function_name		3991200	0					
ANR	3991875	MemberAccess	func -> common . function_name		3991200	0					
ANR	3991876	PtrMemberAccess	func -> common		3991200	0					
ANR	3991877	Identifier	func		3991200	0					
ANR	3991878	Identifier	common		3991200	1					
ANR	3991879	Identifier	function_name		3991200	1					
ANR	3991880	ForStatement	for ( i = 0 ; i < fci -> param_count ; i ++ )		3991200	19					
ANR	3991881	ForInit	i = 0 ;	793:6:23090:23093	3991200	0	True				
ANR	3991882	AssignmentExpression	i = 0		3991200	0		=			
ANR	3991883	Identifier	i		3991200	0					
ANR	3991884	PrimaryExpression	0		3991200	1					
ANR	3991885	Condition	i < fci -> param_count	793:11:23095:23112	3991200	1	True				
ANR	3991886	RelationalExpression	i < fci -> param_count		3991200	0		<			
ANR	3991887	Identifier	i		3991200	0					
ANR	3991888	PtrMemberAccess	fci -> param_count		3991200	1					
ANR	3991889	Identifier	fci		3991200	0					
ANR	3991890	Identifier	param_count		3991200	1					
ANR	3991891	PostIncDecOperationExpression	i ++	793:31:23115:23117	3991200	2	True				
ANR	3991892	Identifier	i		3991200	0					
ANR	3991893	IncDec	++		3991200	1					
ANR	3991894	CompoundStatement		112:2:3792:3819	3991200	3					
ANR	3991895	IdentifierDeclStatement	zval * param ;	794:2:23124:23135	3991200	0	True				
ANR	3991896	IdentifierDecl	* param		3991200	0					
ANR	3991897	IdentifierDeclType	zval *		3991200	0					
ANR	3991898	Identifier	param		3991200	1					
ANR	3991899	IdentifierDeclStatement	zval * arg = & fci -> params [ i ] ;	795:2:23139:23166	3991200	1	True				
ANR	3991900	IdentifierDecl	* arg = & fci -> params [ i ]		3991200	0					
ANR	3991901	IdentifierDeclType	zval *		3991200	0					
ANR	3991902	Identifier	arg		3991200	1					
ANR	3991903	AssignmentExpression	* arg = & fci -> params [ i ]		3991200	2		=			
ANR	3991904	Identifier	arg		3991200	0					
ANR	3991905	UnaryOperationExpression	& fci -> params [ i ]		3991200	1					
ANR	3991906	UnaryOperator	&		3991200	0					
ANR	3991907	ArrayIndexing	fci -> params [ i ]		3991200	1					
ANR	3991908	PtrMemberAccess	fci -> params		3991200	0					
ANR	3991909	Identifier	fci		3991200	0					
ANR	3991910	Identifier	params		3991200	1					
ANR	3991911	Identifier	i		3991200	1					
ANR	3991912	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( func , i + 1 ) )"		3991200	2					
ANR	3991913	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( func , i + 1 )"	797:6:23175:23212	3991200	0	True				
ANR	3991914	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( func , i + 1 )"		3991200	0					
ANR	3991915	Callee	ARG_SHOULD_BE_SENT_BY_REF		3991200	0					
ANR	3991916	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3991200	0					
ANR	3991917	ArgumentList	func		3991200	1					
ANR	3991918	Argument	func		3991200	0					
ANR	3991919	Identifier	func		3991200	0					
ANR	3991920	Argument	i + 1		3991200	1					
ANR	3991921	AdditiveExpression	i + 1		3991200	0		+			
ANR	3991922	Identifier	i		3991200	0					
ANR	3991923	PrimaryExpression	1		3991200	1					
ANR	3991924	CompoundStatement		114:46:3868:3868	3991200	1					
ANR	3991925	IfStatement	if ( UNEXPECTED ( ! Z_ISREF_P ( arg ) ) )		3991200	0					
ANR	3991926	Condition	UNEXPECTED ( ! Z_ISREF_P ( arg ) )	798:7:23224:23250	3991200	0	True				
ANR	3991927	CallExpression	UNEXPECTED ( ! Z_ISREF_P ( arg ) )		3991200	0					
ANR	3991928	Callee	UNEXPECTED		3991200	0					
ANR	3991929	Identifier	UNEXPECTED		3991200	0					
ANR	3991930	ArgumentList	! Z_ISREF_P ( arg )		3991200	1					
ANR	3991931	Argument	! Z_ISREF_P ( arg )		3991200	0					
ANR	3991932	UnaryOperationExpression	! Z_ISREF_P ( arg )		3991200	0					
ANR	3991933	UnaryOperator	!		3991200	0					
ANR	3991934	CallExpression	Z_ISREF_P ( arg )		3991200	1					
ANR	3991935	Callee	Z_ISREF_P		3991200	0					
ANR	3991936	Identifier	Z_ISREF_P		3991200	0					
ANR	3991937	ArgumentList	arg		3991200	1					
ANR	3991938	Argument	arg		3991200	0					
ANR	3991939	Identifier	arg		3991200	0					
ANR	3991940	CompoundStatement		115:36:3906:3906	3991200	1					
ANR	3991941	IfStatement	"if ( fci -> no_separation && ! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 ) )"		3991200	0					
ANR	3991942	Condition	"fci -> no_separation && ! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"	799:8:23263:23325	3991200	0	True				
ANR	3991943	AndExpression	"fci -> no_separation && ! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"		3991200	0		&&			
ANR	3991944	PtrMemberAccess	fci -> no_separation		3991200	0					
ANR	3991945	Identifier	fci		3991200	0					
ANR	3991946	Identifier	no_separation		3991200	1					
ANR	3991947	UnaryOperationExpression	"! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"		3991200	1					
ANR	3991948	UnaryOperator	!		3991200	0					
ANR	3991949	CallExpression	"ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"		3991200	1					
ANR	3991950	Callee	ARG_MAY_BE_SENT_BY_REF		3991200	0					
ANR	3991951	Identifier	ARG_MAY_BE_SENT_BY_REF		3991200	0					
ANR	3991952	ArgumentList	func		3991200	1					
ANR	3991953	Argument	func		3991200	0					
ANR	3991954	Identifier	func		3991200	0					
ANR	3991955	Argument	i + 1		3991200	1					
ANR	3991956	AdditiveExpression	i + 1		3991200	0		+			
ANR	3991957	Identifier	i		3991200	0					
ANR	3991958	PrimaryExpression	1		3991200	1					
ANR	3991959	CompoundStatement		117:43:3981:3981	3991200	1					
ANR	3991960	IfStatement	if ( i )		3991200	0					
ANR	3991961	Condition	i	801:9:23339:23339	3991200	0	True				
ANR	3991962	Identifier	i		3991200	0					
ANR	3991963	CompoundStatement		118:12:3995:3995	3991200	1					
ANR	3991964	ExpressionStatement	ZEND_CALL_NUM_ARGS ( call ) = i	803:6:23389:23417	3991200	0	True				
ANR	3991965	AssignmentExpression	ZEND_CALL_NUM_ARGS ( call ) = i		3991200	0		=			
ANR	3991966	CallExpression	ZEND_CALL_NUM_ARGS ( call )		3991200	0					
ANR	3991967	Callee	ZEND_CALL_NUM_ARGS		3991200	0					
ANR	3991968	Identifier	ZEND_CALL_NUM_ARGS		3991200	0					
ANR	3991969	ArgumentList	call		3991200	1					
ANR	3991970	Argument	call		3991200	0					
ANR	3991971	Identifier	call		3991200	0					
ANR	3991972	Identifier	i		3991200	1					
ANR	3991973	ExpressionStatement	zend_vm_stack_free_args ( call )	804:6:23425:23454	3991200	1	True				
ANR	3991974	CallExpression	zend_vm_stack_free_args ( call )		3991200	0					
ANR	3991975	Callee	zend_vm_stack_free_args		3991200	0					
ANR	3991976	Identifier	zend_vm_stack_free_args		3991200	0					
ANR	3991977	ArgumentList	call		3991200	1					
ANR	3991978	Argument	call		3991200	0					
ANR	3991979	Identifier	call		3991200	0					
ANR	3991980	ExpressionStatement	zend_vm_stack_free_call_frame ( call )	806:5:23468:23503	3991200	1	True				
ANR	3991981	CallExpression	zend_vm_stack_free_call_frame ( call )		3991200	0					
ANR	3991982	Callee	zend_vm_stack_free_call_frame		3991200	0					
ANR	3991983	Identifier	zend_vm_stack_free_call_frame		3991200	0					
ANR	3991984	ArgumentList	call		3991200	1					
ANR	3991985	Argument	call		3991200	0					
ANR	3991986	Identifier	call		3991200	0					
ANR	3991987	ExpressionStatement	"zend_error ( E_WARNING , ""Parameter %d to %s%s%s() expected to be a reference, value given"" , i + 1 , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"	808:5:23511:23761	3991200	2	True				
ANR	3991988	CallExpression	"zend_error ( E_WARNING , ""Parameter %d to %s%s%s() expected to be a reference, value given"" , i + 1 , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"		3991200	0					
ANR	3991989	Callee	zend_error		3991200	0					
ANR	3991990	Identifier	zend_error		3991200	0					
ANR	3991991	ArgumentList	E_WARNING		3991200	1					
ANR	3991992	Argument	E_WARNING		3991200	0					
ANR	3991993	Identifier	E_WARNING		3991200	0					
ANR	3991994	Argument	"""Parameter %d to %s%s%s() expected to be a reference, value given"""		3991200	1					
ANR	3991995	PrimaryExpression	"""Parameter %d to %s%s%s() expected to be a reference, value given"""		3991200	0					
ANR	3991996	Argument	i + 1		3991200	2					
ANR	3991997	AdditiveExpression	i + 1		3991200	0		+			
ANR	3991998	Identifier	i		3991200	0					
ANR	3991999	PrimaryExpression	1		3991200	1					
ANR	3992000	Argument	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		3991200	3					
ANR	3992001	ConditionalExpression	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		3991200	0					
ANR	3992002	Condition	func -> common . scope		3991200	0					
ANR	3992003	MemberAccess	func -> common . scope		3991200	0					
ANR	3992004	PtrMemberAccess	func -> common		3991200	0					
ANR	3992005	Identifier	func		3991200	0					
ANR	3992006	Identifier	common		3991200	1					
ANR	3992007	Identifier	scope		3991200	1					
ANR	3992008	CallExpression	ZSTR_VAL ( func -> common . scope -> name )		3991200	1					
ANR	3992009	Callee	ZSTR_VAL		3991200	0					
ANR	3992010	Identifier	ZSTR_VAL		3991200	0					
ANR	3992011	ArgumentList	func -> common . scope -> name		3991200	1					
ANR	3992012	Argument	func -> common . scope -> name		3991200	0					
ANR	3992013	PtrMemberAccess	func -> common . scope -> name		3991200	0					
ANR	3992014	MemberAccess	func -> common . scope		3991200	0					
ANR	3992015	PtrMemberAccess	func -> common		3991200	0					
ANR	3992016	Identifier	func		3991200	0					
ANR	3992017	Identifier	common		3991200	1					
ANR	3992018	Identifier	scope		3991200	1					
ANR	3992019	Identifier	name		3991200	1					
ANR	3992020	PrimaryExpression	""""""		3991200	2					
ANR	3992021	Argument	"func -> common . scope ? ""::"" : """""		3991200	4					
ANR	3992022	ConditionalExpression	"func -> common . scope ? ""::"" : """""		3991200	0					
ANR	3992023	Condition	func -> common . scope		3991200	0					
ANR	3992024	MemberAccess	func -> common . scope		3991200	0					
ANR	3992025	PtrMemberAccess	func -> common		3991200	0					
ANR	3992026	Identifier	func		3991200	0					
ANR	3992027	Identifier	common		3991200	1					
ANR	3992028	Identifier	scope		3991200	1					
ANR	3992029	PrimaryExpression	"""::"""		3991200	1					
ANR	3992030	PrimaryExpression	""""""		3991200	2					
ANR	3992031	Argument	ZSTR_VAL ( func -> common . function_name )		3991200	5					
ANR	3992032	CallExpression	ZSTR_VAL ( func -> common . function_name )		3991200	0					
ANR	3992033	Callee	ZSTR_VAL		3991200	0					
ANR	3992034	Identifier	ZSTR_VAL		3991200	0					
ANR	3992035	ArgumentList	func -> common . function_name		3991200	1					
ANR	3992036	Argument	func -> common . function_name		3991200	0					
ANR	3992037	MemberAccess	func -> common . function_name		3991200	0					
ANR	3992038	PtrMemberAccess	func -> common		3991200	0					
ANR	3992039	Identifier	func		3991200	0					
ANR	3992040	Identifier	common		3991200	1					
ANR	3992041	Identifier	function_name		3991200	1					
ANR	3992042	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		3991200	3					
ANR	3992043	Condition	EG ( current_execute_data ) == & dummy_execute_data	813:9:23772:23818	3991200	0	True				
ANR	3992044	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		3991200	0		==			
ANR	3992045	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992046	Callee	EG		3991200	0					
ANR	3992047	Identifier	EG		3991200	0					
ANR	3992048	ArgumentList	current_execute_data		3991200	1					
ANR	3992049	Argument	current_execute_data		3991200	0					
ANR	3992050	Identifier	current_execute_data		3991200	0					
ANR	3992051	UnaryOperationExpression	& dummy_execute_data		3991200	1					
ANR	3992052	UnaryOperator	&		3991200	0					
ANR	3992053	Identifier	dummy_execute_data		3991200	1					
ANR	3992054	CompoundStatement		130:58:4474:4474	3991200	1					
ANR	3992055	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	814:6:23829:23892	3991200	0	True				
ANR	3992056	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		3991200	0		=			
ANR	3992057	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992058	Callee	EG		3991200	0					
ANR	3992059	Identifier	EG		3991200	0					
ANR	3992060	ArgumentList	current_execute_data		3991200	1					
ANR	3992061	Argument	current_execute_data		3991200	0					
ANR	3992062	Identifier	current_execute_data		3991200	0					
ANR	3992063	MemberAccess	dummy_execute_data . prev_execute_data		3991200	1					
ANR	3992064	Identifier	dummy_execute_data		3991200	0					
ANR	3992065	Identifier	prev_execute_data		3991200	1					
ANR	3992066	ReturnStatement	return FAILURE ;	816:5:23906:23920	3991200	4	True				
ANR	3992067	Identifier	FAILURE		3991200	0					
ANR	3992068	ExpressionStatement	"ZVAL_NEW_REF ( arg , arg )"	819:4:23933:23955	3991200	1	True				
ANR	3992069	CallExpression	"ZVAL_NEW_REF ( arg , arg )"		3991200	0					
ANR	3992070	Callee	ZVAL_NEW_REF		3991200	0					
ANR	3992071	Identifier	ZVAL_NEW_REF		3991200	0					
ANR	3992072	ArgumentList	arg		3991200	1					
ANR	3992073	Argument	arg		3991200	0					
ANR	3992074	Identifier	arg		3991200	0					
ANR	3992075	Argument	arg		3991200	1					
ANR	3992076	Identifier	arg		3991200	0					
ANR	3992077	ExpressionStatement	Z_ADDREF_P ( arg )	821:3:23965:23980	3991200	1	True				
ANR	3992078	CallExpression	Z_ADDREF_P ( arg )		3991200	0					
ANR	3992079	Callee	Z_ADDREF_P		3991200	0					
ANR	3992080	Identifier	Z_ADDREF_P		3991200	0					
ANR	3992081	ArgumentList	arg		3991200	1					
ANR	3992082	Argument	arg		3991200	0					
ANR	3992083	Identifier	arg		3991200	0					
ANR	3992084	ElseStatement	else		3991200	0					
ANR	3992085	CompoundStatement		139:9:4644:4644	3991200	0					
ANR	3992086	IfStatement	if ( Z_ISREF_P ( arg ) && ! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) )		3991200	0					
ANR	3992087	Condition	Z_ISREF_P ( arg ) && ! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )	823:7:24000:24079	3991200	0	True				
ANR	3992088	AndExpression	Z_ISREF_P ( arg ) && ! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3991200	0		&&			
ANR	3992089	CallExpression	Z_ISREF_P ( arg )		3991200	0					
ANR	3992090	Callee	Z_ISREF_P		3991200	0					
ANR	3992091	Identifier	Z_ISREF_P		3991200	0					
ANR	3992092	ArgumentList	arg		3991200	1					
ANR	3992093	Argument	arg		3991200	0					
ANR	3992094	Identifier	arg		3991200	0					
ANR	3992095	UnaryOperationExpression	! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3991200	1					
ANR	3992096	UnaryOperator	!		3991200	0					
ANR	3992097	BitAndExpression	func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3991200	1		&			
ANR	3992098	MemberAccess	func -> common . fn_flags		3991200	0					
ANR	3992099	PtrMemberAccess	func -> common		3991200	0					
ANR	3992100	Identifier	func		3991200	0					
ANR	3992101	Identifier	common		3991200	1					
ANR	3992102	Identifier	fn_flags		3991200	1					
ANR	3992103	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3991200	1					
ANR	3992104	CompoundStatement		141:64:4735:4735	3991200	1					
ANR	3992105	ExpressionStatement	arg = Z_REFVAL_P ( arg )	826:4:24135:24156	3991200	0	True				
ANR	3992106	AssignmentExpression	arg = Z_REFVAL_P ( arg )		3991200	0		=			
ANR	3992107	Identifier	arg		3991200	0					
ANR	3992108	CallExpression	Z_REFVAL_P ( arg )		3991200	1					
ANR	3992109	Callee	Z_REFVAL_P		3991200	0					
ANR	3992110	Identifier	Z_REFVAL_P		3991200	0					
ANR	3992111	ArgumentList	arg		3991200	1					
ANR	3992112	Argument	arg		3991200	0					
ANR	3992113	Identifier	arg		3991200	0					
ANR	3992114	IfStatement	if ( Z_OPT_REFCOUNTED_P ( arg ) )		3991200	1					
ANR	3992115	Condition	Z_OPT_REFCOUNTED_P ( arg )	828:7:24170:24192	3991200	0	True				
ANR	3992116	CallExpression	Z_OPT_REFCOUNTED_P ( arg )		3991200	0					
ANR	3992117	Callee	Z_OPT_REFCOUNTED_P		3991200	0					
ANR	3992118	Identifier	Z_OPT_REFCOUNTED_P		3991200	0					
ANR	3992119	ArgumentList	arg		3991200	1					
ANR	3992120	Argument	arg		3991200	0					
ANR	3992121	Identifier	arg		3991200	0					
ANR	3992122	CompoundStatement		145:32:4848:4848	3991200	1					
ANR	3992123	ExpressionStatement	Z_ADDREF_P ( arg )	829:4:24201:24216	3991200	0	True				
ANR	3992124	CallExpression	Z_ADDREF_P ( arg )		3991200	0					
ANR	3992125	Callee	Z_ADDREF_P		3991200	0					
ANR	3992126	Identifier	Z_ADDREF_P		3991200	0					
ANR	3992127	ArgumentList	arg		3991200	1					
ANR	3992128	Argument	arg		3991200	0					
ANR	3992129	Identifier	arg		3991200	0					
ANR	3992130	ExpressionStatement	"param = ZEND_CALL_ARG ( call , i + 1 )"	832:2:24229:24261	3991200	3	True				
ANR	3992131	AssignmentExpression	"param = ZEND_CALL_ARG ( call , i + 1 )"		3991200	0		=			
ANR	3992132	Identifier	param		3991200	0					
ANR	3992133	CallExpression	"ZEND_CALL_ARG ( call , i + 1 )"		3991200	1					
ANR	3992134	Callee	ZEND_CALL_ARG		3991200	0					
ANR	3992135	Identifier	ZEND_CALL_ARG		3991200	0					
ANR	3992136	ArgumentList	call		3991200	1					
ANR	3992137	Argument	call		3991200	0					
ANR	3992138	Identifier	call		3991200	0					
ANR	3992139	Argument	i + 1		3991200	1					
ANR	3992140	AdditiveExpression	i + 1		3991200	0		+			
ANR	3992141	Identifier	i		3991200	0					
ANR	3992142	PrimaryExpression	1		3991200	1					
ANR	3992143	ExpressionStatement	"ZVAL_COPY_VALUE ( param , arg )"	833:2:24265:24292	3991200	4	True				
ANR	3992144	CallExpression	"ZVAL_COPY_VALUE ( param , arg )"		3991200	0					
ANR	3992145	Callee	ZVAL_COPY_VALUE		3991200	0					
ANR	3992146	Identifier	ZVAL_COPY_VALUE		3991200	0					
ANR	3992147	ArgumentList	param		3991200	1					
ANR	3992148	Argument	param		3991200	0					
ANR	3992149	Identifier	param		3991200	0					
ANR	3992150	Argument	arg		3991200	1					
ANR	3992151	Identifier	arg		3991200	0					
ANR	3992152	ExpressionStatement	EG ( scope ) = calling_scope	836:1:24299:24324	3991200	20	True				
ANR	3992153	AssignmentExpression	EG ( scope ) = calling_scope		3991200	0		=			
ANR	3992154	CallExpression	EG ( scope )		3991200	0					
ANR	3992155	Callee	EG		3991200	0					
ANR	3992156	Identifier	EG		3991200	0					
ANR	3992157	ArgumentList	scope		3991200	1					
ANR	3992158	Argument	scope		3991200	0					
ANR	3992159	Identifier	scope		3991200	0					
ANR	3992160	Identifier	calling_scope		3991200	1					
ANR	3992161	IfStatement	if ( func -> common . fn_flags & ZEND_ACC_STATIC )		3991200	21					
ANR	3992162	Condition	func -> common . fn_flags & ZEND_ACC_STATIC	837:5:24331:24369	3991200	0	True				
ANR	3992163	BitAndExpression	func -> common . fn_flags & ZEND_ACC_STATIC		3991200	0		&			
ANR	3992164	MemberAccess	func -> common . fn_flags		3991200	0					
ANR	3992165	PtrMemberAccess	func -> common		3991200	0					
ANR	3992166	Identifier	func		3991200	0					
ANR	3992167	Identifier	common		3991200	1					
ANR	3992168	Identifier	fn_flags		3991200	1					
ANR	3992169	Identifier	ZEND_ACC_STATIC		3991200	1					
ANR	3992170	CompoundStatement		154:46:5025:5025	3991200	1					
ANR	3992171	ExpressionStatement	fci -> object = NULL	838:2:24376:24394	3991200	0	True				
ANR	3992172	AssignmentExpression	fci -> object = NULL		3991200	0		=			
ANR	3992173	PtrMemberAccess	fci -> object		3991200	0					
ANR	3992174	Identifier	fci		3991200	0					
ANR	3992175	Identifier	object		3991200	1					
ANR	3992176	Identifier	NULL		3991200	1					
ANR	3992177	ExpressionStatement	Z_OBJ ( call -> This ) = fci -> object	840:1:24400:24431	3991200	22	True				
ANR	3992178	AssignmentExpression	Z_OBJ ( call -> This ) = fci -> object		3991200	0		=			
ANR	3992179	CallExpression	Z_OBJ ( call -> This )		3991200	0					
ANR	3992180	Callee	Z_OBJ		3991200	0					
ANR	3992181	Identifier	Z_OBJ		3991200	0					
ANR	3992182	ArgumentList	call -> This		3991200	1					
ANR	3992183	Argument	call -> This		3991200	0					
ANR	3992184	PtrMemberAccess	call -> This		3991200	0					
ANR	3992185	Identifier	call		3991200	0					
ANR	3992186	Identifier	This		3991200	1					
ANR	3992187	PtrMemberAccess	fci -> object		3991200	1					
ANR	3992188	Identifier	fci		3991200	0					
ANR	3992189	Identifier	object		3991200	1					
ANR	3992190	IfStatement	if ( UNEXPECTED ( func -> op_array . fn_flags & ZEND_ACC_CLOSURE ) )		3991200	23					
ANR	3992191	Condition	UNEXPECTED ( func -> op_array . fn_flags & ZEND_ACC_CLOSURE )	842:5:24439:24492	3991200	0	True				
ANR	3992192	CallExpression	UNEXPECTED ( func -> op_array . fn_flags & ZEND_ACC_CLOSURE )		3991200	0					
ANR	3992193	Callee	UNEXPECTED		3991200	0					
ANR	3992194	Identifier	UNEXPECTED		3991200	0					
ANR	3992195	ArgumentList	func -> op_array . fn_flags & ZEND_ACC_CLOSURE		3991200	1					
ANR	3992196	Argument	func -> op_array . fn_flags & ZEND_ACC_CLOSURE		3991200	0					
ANR	3992197	BitAndExpression	func -> op_array . fn_flags & ZEND_ACC_CLOSURE		3991200	0		&			
ANR	3992198	MemberAccess	func -> op_array . fn_flags		3991200	0					
ANR	3992199	PtrMemberAccess	func -> op_array		3991200	0					
ANR	3992200	Identifier	func		3991200	0					
ANR	3992201	Identifier	op_array		3991200	1					
ANR	3992202	Identifier	fn_flags		3991200	1					
ANR	3992203	Identifier	ZEND_ACC_CLOSURE		3991200	1					
ANR	3992204	CompoundStatement		159:61:5148:5148	3991200	1					
ANR	3992205	ExpressionStatement	ZEND_ASSERT ( GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT )	843:2:24499:24572	3991200	0	True				
ANR	3992206	CallExpression	ZEND_ASSERT ( GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT )		3991200	0					
ANR	3992207	Callee	ZEND_ASSERT		3991200	0					
ANR	3992208	Identifier	ZEND_ASSERT		3991200	0					
ANR	3992209	ArgumentList	GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT		3991200	1					
ANR	3992210	Argument	GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT		3991200	0					
ANR	3992211	EqualityExpression	GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT		3991200	0		==			
ANR	3992212	CallExpression	GC_TYPE ( ( zend_object * ) func -> op_array . prototype )		3991200	0					
ANR	3992213	Callee	GC_TYPE		3991200	0					
ANR	3992214	Identifier	GC_TYPE		3991200	0					
ANR	3992215	ArgumentList	( zend_object * ) func -> op_array . prototype		3991200	1					
ANR	3992216	Argument	( zend_object * ) func -> op_array . prototype		3991200	0					
ANR	3992217	CastExpression	( zend_object * ) func -> op_array . prototype		3991200	0					
ANR	3992218	CastTarget	zend_object *		3991200	0					
ANR	3992219	MemberAccess	func -> op_array . prototype		3991200	1					
ANR	3992220	PtrMemberAccess	func -> op_array		3991200	0					
ANR	3992221	Identifier	func		3991200	0					
ANR	3992222	Identifier	op_array		3991200	1					
ANR	3992223	Identifier	prototype		3991200	1					
ANR	3992224	Identifier	IS_OBJECT		3991200	1					
ANR	3992225	ExpressionStatement	GC_REFCOUNT ( ( zend_object * ) func -> op_array . prototype ) ++	844:2:24576:24629	3991200	1	True				
ANR	3992226	PostIncDecOperationExpression	GC_REFCOUNT ( ( zend_object * ) func -> op_array . prototype ) ++		3991200	0					
ANR	3992227	CallExpression	GC_REFCOUNT ( ( zend_object * ) func -> op_array . prototype )		3991200	0					
ANR	3992228	Callee	GC_REFCOUNT		3991200	0					
ANR	3992229	Identifier	GC_REFCOUNT		3991200	0					
ANR	3992230	ArgumentList	( zend_object * ) func -> op_array . prototype		3991200	1					
ANR	3992231	Argument	( zend_object * ) func -> op_array . prototype		3991200	0					
ANR	3992232	CastExpression	( zend_object * ) func -> op_array . prototype		3991200	0					
ANR	3992233	CastTarget	zend_object *		3991200	0					
ANR	3992234	MemberAccess	func -> op_array . prototype		3991200	1					
ANR	3992235	PtrMemberAccess	func -> op_array		3991200	0					
ANR	3992236	Identifier	func		3991200	0					
ANR	3992237	Identifier	op_array		3991200	1					
ANR	3992238	Identifier	prototype		3991200	1					
ANR	3992239	IncDec	++		3991200	1					
ANR	3992240	ExpressionStatement	"ZEND_ADD_CALL_FLAG ( call , ZEND_CALL_CLOSURE )"	845:2:24633:24676	3991200	2	True				
ANR	3992241	CallExpression	"ZEND_ADD_CALL_FLAG ( call , ZEND_CALL_CLOSURE )"		3991200	0					
ANR	3992242	Callee	ZEND_ADD_CALL_FLAG		3991200	0					
ANR	3992243	Identifier	ZEND_ADD_CALL_FLAG		3991200	0					
ANR	3992244	ArgumentList	call		3991200	1					
ANR	3992245	Argument	call		3991200	0					
ANR	3992246	Identifier	call		3991200	0					
ANR	3992247	Argument	ZEND_CALL_CLOSURE		3991200	1					
ANR	3992248	Identifier	ZEND_CALL_CLOSURE		3991200	0					
ANR	3992249	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		3991200	24					
ANR	3992250	Condition	func -> type == ZEND_USER_FUNCTION	848:5:24687:24718	3991200	0	True				
ANR	3992251	EqualityExpression	func -> type == ZEND_USER_FUNCTION		3991200	0		==			
ANR	3992252	PtrMemberAccess	func -> type		3991200	0					
ANR	3992253	Identifier	func		3991200	0					
ANR	3992254	Identifier	type		3991200	1					
ANR	3992255	Identifier	ZEND_USER_FUNCTION		3991200	1					
ANR	3992256	CompoundStatement		166:2:5378:5460	3991200	1					
ANR	3992257	IdentifierDeclStatement	int call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0 ;	849:2:24725:24807	3991200	0	True				
ANR	3992258	IdentifierDecl	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3991200	0					
ANR	3992259	IdentifierDeclType	int		3991200	0					
ANR	3992260	Identifier	call_via_handler		3991200	1					
ANR	3992261	AssignmentExpression	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3991200	2		=			
ANR	3992262	Identifier	call_via_handler		3991200	0					
ANR	3992263	EqualityExpression	( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3991200	1		!=			
ANR	3992264	BitAndExpression	func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3991200	0		&			
ANR	3992265	MemberAccess	func -> common . fn_flags		3991200	0					
ANR	3992266	PtrMemberAccess	func -> common		3991200	0					
ANR	3992267	Identifier	func		3991200	0					
ANR	3992268	Identifier	common		3991200	1					
ANR	3992269	Identifier	fn_flags		3991200	1					
ANR	3992270	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3991200	1					
ANR	3992271	PrimaryExpression	0		3991200	1					
ANR	3992272	ExpressionStatement	EG ( scope ) = func -> common . scope	850:2:24811:24841	3991200	1	True				
ANR	3992273	AssignmentExpression	EG ( scope ) = func -> common . scope		3991200	0		=			
ANR	3992274	CallExpression	EG ( scope )		3991200	0					
ANR	3992275	Callee	EG		3991200	0					
ANR	3992276	Identifier	EG		3991200	0					
ANR	3992277	ArgumentList	scope		3991200	1					
ANR	3992278	Argument	scope		3991200	0					
ANR	3992279	Identifier	scope		3991200	0					
ANR	3992280	MemberAccess	func -> common . scope		3991200	1					
ANR	3992281	PtrMemberAccess	func -> common		3991200	0					
ANR	3992282	Identifier	func		3991200	0					
ANR	3992283	Identifier	common		3991200	1					
ANR	3992284	Identifier	scope		3991200	1					
ANR	3992285	ExpressionStatement	call -> symbol_table = fci -> symbol_table	851:2:24845:24883	3991200	2	True				
ANR	3992286	AssignmentExpression	call -> symbol_table = fci -> symbol_table		3991200	0		=			
ANR	3992287	PtrMemberAccess	call -> symbol_table		3991200	0					
ANR	3992288	Identifier	call		3991200	0					
ANR	3992289	Identifier	symbol_table		3991200	1					
ANR	3992290	PtrMemberAccess	fci -> symbol_table		3991200	1					
ANR	3992291	Identifier	fci		3991200	0					
ANR	3992292	Identifier	symbol_table		3991200	1					
ANR	3992293	IfStatement	if ( EXPECTED ( ( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0 ) )		3991200	3					
ANR	3992294	Condition	EXPECTED ( ( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0 )	852:6:24891:24951	3991200	0	True				
ANR	3992295	CallExpression	EXPECTED ( ( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0 )		3991200	0					
ANR	3992296	Callee	EXPECTED		3991200	0					
ANR	3992297	Identifier	EXPECTED		3991200	0					
ANR	3992298	ArgumentList	( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0		3991200	1					
ANR	3992299	Argument	( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0		3991200	0					
ANR	3992300	EqualityExpression	( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0		3991200	0		==			
ANR	3992301	BitAndExpression	func -> op_array . fn_flags & ZEND_ACC_GENERATOR		3991200	0		&			
ANR	3992302	MemberAccess	func -> op_array . fn_flags		3991200	0					
ANR	3992303	PtrMemberAccess	func -> op_array		3991200	0					
ANR	3992304	Identifier	func		3991200	0					
ANR	3992305	Identifier	op_array		3991200	1					
ANR	3992306	Identifier	fn_flags		3991200	1					
ANR	3992307	Identifier	ZEND_ACC_GENERATOR		3991200	1					
ANR	3992308	PrimaryExpression	0		3991200	1					
ANR	3992309	CompoundStatement		169:69:5607:5607	3991200	1					
ANR	3992310	ExpressionStatement	"zend_init_execute_data ( call , & func -> op_array , fci -> retval )"	853:3:24959:25017	3991200	0	True				
ANR	3992311	CallExpression	"zend_init_execute_data ( call , & func -> op_array , fci -> retval )"		3991200	0					
ANR	3992312	Callee	zend_init_execute_data		3991200	0					
ANR	3992313	Identifier	zend_init_execute_data		3991200	0					
ANR	3992314	ArgumentList	call		3991200	1					
ANR	3992315	Argument	call		3991200	0					
ANR	3992316	Identifier	call		3991200	0					
ANR	3992317	Argument	& func -> op_array		3991200	1					
ANR	3992318	UnaryOperationExpression	& func -> op_array		3991200	0					
ANR	3992319	UnaryOperator	&		3991200	0					
ANR	3992320	PtrMemberAccess	func -> op_array		3991200	1					
ANR	3992321	Identifier	func		3991200	0					
ANR	3992322	Identifier	op_array		3991200	1					
ANR	3992323	Argument	fci -> retval		3991200	2					
ANR	3992324	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992325	Identifier	fci		3991200	0					
ANR	3992326	Identifier	retval		3991200	1					
ANR	3992327	ExpressionStatement	zend_execute_ex ( call )	854:3:25022:25043	3991200	1	True				
ANR	3992328	CallExpression	zend_execute_ex ( call )		3991200	0					
ANR	3992329	Callee	zend_execute_ex		3991200	0					
ANR	3992330	Identifier	zend_execute_ex		3991200	0					
ANR	3992331	ArgumentList	call		3991200	1					
ANR	3992332	Argument	call		3991200	0					
ANR	3992333	Identifier	call		3991200	0					
ANR	3992334	ElseStatement	else		3991200	0					
ANR	3992335	CompoundStatement		172:9:5707:5707	3991200	0					
ANR	3992336	ExpressionStatement	"zend_generator_create_zval ( call , & func -> op_array , fci -> retval )"	856:3:25059:25121	3991200	0	True				
ANR	3992337	CallExpression	"zend_generator_create_zval ( call , & func -> op_array , fci -> retval )"		3991200	0					
ANR	3992338	Callee	zend_generator_create_zval		3991200	0					
ANR	3992339	Identifier	zend_generator_create_zval		3991200	0					
ANR	3992340	ArgumentList	call		3991200	1					
ANR	3992341	Argument	call		3991200	0					
ANR	3992342	Identifier	call		3991200	0					
ANR	3992343	Argument	& func -> op_array		3991200	1					
ANR	3992344	UnaryOperationExpression	& func -> op_array		3991200	0					
ANR	3992345	UnaryOperator	&		3991200	0					
ANR	3992346	PtrMemberAccess	func -> op_array		3991200	1					
ANR	3992347	Identifier	func		3991200	0					
ANR	3992348	Identifier	op_array		3991200	1					
ANR	3992349	Argument	fci -> retval		3991200	2					
ANR	3992350	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992351	Identifier	fci		3991200	0					
ANR	3992352	Identifier	retval		3991200	1					
ANR	3992353	IfStatement	if ( call_via_handler )		3991200	4					
ANR	3992354	Condition	call_via_handler	858:6:25133:25148	3991200	0	True				
ANR	3992355	Identifier	call_via_handler		3991200	0					
ANR	3992356	CompoundStatement		175:24:5804:5804	3991200	1					
ANR	3992357	ExpressionStatement	fci_cache -> initialized = 0	860:3:25202:25228	3991200	0	True				
ANR	3992358	AssignmentExpression	fci_cache -> initialized = 0		3991200	0		=			
ANR	3992359	PtrMemberAccess	fci_cache -> initialized		3991200	0					
ANR	3992360	Identifier	fci_cache		3991200	0					
ANR	3992361	Identifier	initialized		3991200	1					
ANR	3992362	PrimaryExpression	0		3991200	1					
ANR	3992363	ElseStatement	else		3991200	0					
ANR	3992364	IfStatement	if ( func -> type == ZEND_INTERNAL_FUNCTION )		3991200	0					
ANR	3992365	Condition	func -> type == ZEND_INTERNAL_FUNCTION	862:12:25246:25281	3991200	0	True				
ANR	3992366	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		3991200	0		==			
ANR	3992367	PtrMemberAccess	func -> type		3991200	0					
ANR	3992368	Identifier	func		3991200	0					
ANR	3992369	Identifier	type		3991200	1					
ANR	3992370	Identifier	ZEND_INTERNAL_FUNCTION		3991200	1					
ANR	3992371	CompoundStatement		180:2:5941:6023	3991200	1					
ANR	3992372	IdentifierDeclStatement	int call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0 ;	863:2:25288:25370	3991200	0	True				
ANR	3992373	IdentifierDecl	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3991200	0					
ANR	3992374	IdentifierDeclType	int		3991200	0					
ANR	3992375	Identifier	call_via_handler		3991200	1					
ANR	3992376	AssignmentExpression	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3991200	2		=			
ANR	3992377	Identifier	call_via_handler		3991200	0					
ANR	3992378	EqualityExpression	( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3991200	1		!=			
ANR	3992379	BitAndExpression	func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3991200	0		&			
ANR	3992380	MemberAccess	func -> common . fn_flags		3991200	0					
ANR	3992381	PtrMemberAccess	func -> common		3991200	0					
ANR	3992382	Identifier	func		3991200	0					
ANR	3992383	Identifier	common		3991200	1					
ANR	3992384	Identifier	fn_flags		3991200	1					
ANR	3992385	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3991200	1					
ANR	3992386	PrimaryExpression	0		3991200	1					
ANR	3992387	ExpressionStatement	ZVAL_NULL ( fci -> retval )	864:2:25374:25396	3991200	1	True				
ANR	3992388	CallExpression	ZVAL_NULL ( fci -> retval )		3991200	0					
ANR	3992389	Callee	ZVAL_NULL		3991200	0					
ANR	3992390	Identifier	ZVAL_NULL		3991200	0					
ANR	3992391	ArgumentList	fci -> retval		3991200	1					
ANR	3992392	Argument	fci -> retval		3991200	0					
ANR	3992393	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992394	Identifier	fci		3991200	0					
ANR	3992395	Identifier	retval		3991200	1					
ANR	3992396	IfStatement	if ( func -> common . scope )		3991200	2					
ANR	3992397	Condition	func -> common . scope	865:6:25404:25421	3991200	0	True				
ANR	3992398	MemberAccess	func -> common . scope		3991200	0					
ANR	3992399	PtrMemberAccess	func -> common		3991200	0					
ANR	3992400	Identifier	func		3991200	0					
ANR	3992401	Identifier	common		3991200	1					
ANR	3992402	Identifier	scope		3991200	1					
ANR	3992403	CompoundStatement		182:26:6077:6077	3991200	1					
ANR	3992404	ExpressionStatement	EG ( scope ) = func -> common . scope	866:3:25429:25459	3991200	0	True				
ANR	3992405	AssignmentExpression	EG ( scope ) = func -> common . scope		3991200	0		=			
ANR	3992406	CallExpression	EG ( scope )		3991200	0					
ANR	3992407	Callee	EG		3991200	0					
ANR	3992408	Identifier	EG		3991200	0					
ANR	3992409	ArgumentList	scope		3991200	1					
ANR	3992410	Argument	scope		3991200	0					
ANR	3992411	Identifier	scope		3991200	0					
ANR	3992412	MemberAccess	func -> common . scope		3991200	1					
ANR	3992413	PtrMemberAccess	func -> common		3991200	0					
ANR	3992414	Identifier	func		3991200	0					
ANR	3992415	Identifier	common		3991200	1					
ANR	3992416	Identifier	scope		3991200	1					
ANR	3992417	ExpressionStatement	call -> prev_execute_data = EG ( current_execute_data )	868:2:25467:25517	3991200	3	True				
ANR	3992418	AssignmentExpression	call -> prev_execute_data = EG ( current_execute_data )		3991200	0		=			
ANR	3992419	PtrMemberAccess	call -> prev_execute_data		3991200	0					
ANR	3992420	Identifier	call		3991200	0					
ANR	3992421	Identifier	prev_execute_data		3991200	1					
ANR	3992422	CallExpression	EG ( current_execute_data )		3991200	1					
ANR	3992423	Callee	EG		3991200	0					
ANR	3992424	Identifier	EG		3991200	0					
ANR	3992425	ArgumentList	current_execute_data		3991200	1					
ANR	3992426	Argument	current_execute_data		3991200	0					
ANR	3992427	Identifier	current_execute_data		3991200	0					
ANR	3992428	ExpressionStatement	call -> return_value = NULL	869:2:25521:25546	3991200	4	True				
ANR	3992429	AssignmentExpression	call -> return_value = NULL		3991200	0		=			
ANR	3992430	PtrMemberAccess	call -> return_value		3991200	0					
ANR	3992431	Identifier	call		3991200	0					
ANR	3992432	Identifier	return_value		3991200	1					
ANR	3992433	Identifier	NULL		3991200	1					
ANR	3992434	ExpressionStatement	EG ( current_execute_data ) = call	870:2:25587:25618	3991200	5	True				
ANR	3992435	AssignmentExpression	EG ( current_execute_data ) = call		3991200	0		=			
ANR	3992436	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992437	Callee	EG		3991200	0					
ANR	3992438	Identifier	EG		3991200	0					
ANR	3992439	ArgumentList	current_execute_data		3991200	1					
ANR	3992440	Argument	current_execute_data		3991200	0					
ANR	3992441	Identifier	current_execute_data		3991200	0					
ANR	3992442	Identifier	call		3991200	1					
ANR	3992443	IfStatement	if ( EXPECTED ( zend_execute_internal == NULL ) )		3991200	6					
ANR	3992444	Condition	EXPECTED ( zend_execute_internal == NULL )	871:6:25626:25664	3991200	0	True				
ANR	3992445	CallExpression	EXPECTED ( zend_execute_internal == NULL )		3991200	0					
ANR	3992446	Callee	EXPECTED		3991200	0					
ANR	3992447	Identifier	EXPECTED		3991200	0					
ANR	3992448	ArgumentList	zend_execute_internal == NULL		3991200	1					
ANR	3992449	Argument	zend_execute_internal == NULL		3991200	0					
ANR	3992450	EqualityExpression	zend_execute_internal == NULL		3991200	0		==			
ANR	3992451	Identifier	zend_execute_internal		3991200	0					
ANR	3992452	Identifier	NULL		3991200	1					
ANR	3992453	CompoundStatement		188:47:6320:6320	3991200	1					
ANR	3992454	ExpressionStatement	"func -> internal_function . handler ( call , fci -> retval )"	873:3:25742:25792	3991200	0	True				
ANR	3992455	CallExpression	"func -> internal_function . handler ( call , fci -> retval )"		3991200	0					
ANR	3992456	Callee	func -> internal_function . handler		3991200	0					
ANR	3992457	MemberAccess	func -> internal_function . handler		3991200	0					
ANR	3992458	PtrMemberAccess	func -> internal_function		3991200	0					
ANR	3992459	Identifier	func		3991200	0					
ANR	3992460	Identifier	internal_function		3991200	1					
ANR	3992461	Identifier	handler		3991200	1					
ANR	3992462	ArgumentList	call		3991200	1					
ANR	3992463	Argument	call		3991200	0					
ANR	3992464	Identifier	call		3991200	0					
ANR	3992465	Argument	fci -> retval		3991200	1					
ANR	3992466	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992467	Identifier	fci		3991200	0					
ANR	3992468	Identifier	retval		3991200	1					
ANR	3992469	ElseStatement	else		3991200	0					
ANR	3992470	CompoundStatement		191:9:6456:6456	3991200	0					
ANR	3992471	ExpressionStatement	"zend_execute_internal ( call , fci -> retval )"	875:3:25808:25848	3991200	0	True				
ANR	3992472	CallExpression	"zend_execute_internal ( call , fci -> retval )"		3991200	0					
ANR	3992473	Callee	zend_execute_internal		3991200	0					
ANR	3992474	Identifier	zend_execute_internal		3991200	0					
ANR	3992475	ArgumentList	call		3991200	1					
ANR	3992476	Argument	call		3991200	0					
ANR	3992477	Identifier	call		3991200	0					
ANR	3992478	Argument	fci -> retval		3991200	1					
ANR	3992479	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992480	Identifier	fci		3991200	0					
ANR	3992481	Identifier	retval		3991200	1					
ANR	3992482	ExpressionStatement	EG ( current_execute_data ) = call -> prev_execute_data	877:2:25856:25906	3991200	7	True				
ANR	3992483	AssignmentExpression	EG ( current_execute_data ) = call -> prev_execute_data		3991200	0		=			
ANR	3992484	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992485	Callee	EG		3991200	0					
ANR	3992486	Identifier	EG		3991200	0					
ANR	3992487	ArgumentList	current_execute_data		3991200	1					
ANR	3992488	Argument	current_execute_data		3991200	0					
ANR	3992489	Identifier	current_execute_data		3991200	0					
ANR	3992490	PtrMemberAccess	call -> prev_execute_data		3991200	1					
ANR	3992491	Identifier	call		3991200	0					
ANR	3992492	Identifier	prev_execute_data		3991200	1					
ANR	3992493	ExpressionStatement	zend_vm_stack_free_args ( call )	878:2:25910:25939	3991200	8	True				
ANR	3992494	CallExpression	zend_vm_stack_free_args ( call )		3991200	0					
ANR	3992495	Callee	zend_vm_stack_free_args		3991200	0					
ANR	3992496	Identifier	zend_vm_stack_free_args		3991200	0					
ANR	3992497	ArgumentList	call		3991200	1					
ANR	3992498	Argument	call		3991200	0					
ANR	3992499	Identifier	call		3991200	0					
ANR	3992500	IfStatement	if ( EG ( exception ) )		3991200	9					
ANR	3992501	Condition	EG ( exception )	886:6:26138:26150	3991200	0	True				
ANR	3992502	CallExpression	EG ( exception )		3991200	0					
ANR	3992503	Callee	EG		3991200	0					
ANR	3992504	Identifier	EG		3991200	0					
ANR	3992505	ArgumentList	exception		3991200	1					
ANR	3992506	Argument	exception		3991200	0					
ANR	3992507	Identifier	exception		3991200	0					
ANR	3992508	CompoundStatement		203:21:6806:6806	3991200	1					
ANR	3992509	ExpressionStatement	zval_ptr_dtor ( fci -> retval )	887:3:26158:26184	3991200	0	True				
ANR	3992510	CallExpression	zval_ptr_dtor ( fci -> retval )		3991200	0					
ANR	3992511	Callee	zval_ptr_dtor		3991200	0					
ANR	3992512	Identifier	zval_ptr_dtor		3991200	0					
ANR	3992513	ArgumentList	fci -> retval		3991200	1					
ANR	3992514	Argument	fci -> retval		3991200	0					
ANR	3992515	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992516	Identifier	fci		3991200	0					
ANR	3992517	Identifier	retval		3991200	1					
ANR	3992518	ExpressionStatement	ZVAL_UNDEF ( fci -> retval )	888:3:26189:26212	3991200	1	True				
ANR	3992519	CallExpression	ZVAL_UNDEF ( fci -> retval )		3991200	0					
ANR	3992520	Callee	ZVAL_UNDEF		3991200	0					
ANR	3992521	Identifier	ZVAL_UNDEF		3991200	0					
ANR	3992522	ArgumentList	fci -> retval		3991200	1					
ANR	3992523	Argument	fci -> retval		3991200	0					
ANR	3992524	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992525	Identifier	fci		3991200	0					
ANR	3992526	Identifier	retval		3991200	1					
ANR	3992527	IfStatement	if ( call_via_handler )		3991200	10					
ANR	3992528	Condition	call_via_handler	891:6:26225:26240	3991200	0	True				
ANR	3992529	Identifier	call_via_handler		3991200	0					
ANR	3992530	CompoundStatement		208:24:6896:6896	3991200	1					
ANR	3992531	ExpressionStatement	fci_cache -> initialized = 0	893:3:26294:26320	3991200	0	True				
ANR	3992532	AssignmentExpression	fci_cache -> initialized = 0		3991200	0		=			
ANR	3992533	PtrMemberAccess	fci_cache -> initialized		3991200	0					
ANR	3992534	Identifier	fci_cache		3991200	0					
ANR	3992535	Identifier	initialized		3991200	1					
ANR	3992536	PrimaryExpression	0		3991200	1					
ANR	3992537	ElseStatement	else		3991200	0					
ANR	3992538	CompoundStatement		212:8:6987:6987	3991200	0					
ANR	3992539	ExpressionStatement	ZVAL_NULL ( fci -> retval )	896:2:26369:26391	3991200	0	True				
ANR	3992540	CallExpression	ZVAL_NULL ( fci -> retval )		3991200	0					
ANR	3992541	Callee	ZVAL_NULL		3991200	0					
ANR	3992542	Identifier	ZVAL_NULL		3991200	0					
ANR	3992543	ArgumentList	fci -> retval		3991200	1					
ANR	3992544	Argument	fci -> retval		3991200	0					
ANR	3992545	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992546	Identifier	fci		3991200	0					
ANR	3992547	Identifier	retval		3991200	1					
ANR	3992548	IfStatement	if ( fci -> object )		3991200	1					
ANR	3992549	Condition	fci -> object	899:6:26466:26476	3991200	0	True				
ANR	3992550	PtrMemberAccess	fci -> object		3991200	0					
ANR	3992551	Identifier	fci		3991200	0					
ANR	3992552	Identifier	object		3991200	1					
ANR	3992553	CompoundStatement		216:19:7132:7132	3991200	1					
ANR	3992554	ExpressionStatement	call -> prev_execute_data = EG ( current_execute_data )	900:3:26484:26534	3991200	0	True				
ANR	3992555	AssignmentExpression	call -> prev_execute_data = EG ( current_execute_data )		3991200	0		=			
ANR	3992556	PtrMemberAccess	call -> prev_execute_data		3991200	0					
ANR	3992557	Identifier	call		3991200	0					
ANR	3992558	Identifier	prev_execute_data		3991200	1					
ANR	3992559	CallExpression	EG ( current_execute_data )		3991200	1					
ANR	3992560	Callee	EG		3991200	0					
ANR	3992561	Identifier	EG		3991200	0					
ANR	3992562	ArgumentList	current_execute_data		3991200	1					
ANR	3992563	Argument	current_execute_data		3991200	0					
ANR	3992564	Identifier	current_execute_data		3991200	0					
ANR	3992565	ExpressionStatement	EG ( current_execute_data ) = call	901:3:26539:26570	3991200	1	True				
ANR	3992566	AssignmentExpression	EG ( current_execute_data ) = call		3991200	0		=			
ANR	3992567	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992568	Callee	EG		3991200	0					
ANR	3992569	Identifier	EG		3991200	0					
ANR	3992570	ArgumentList	current_execute_data		3991200	1					
ANR	3992571	Argument	current_execute_data		3991200	0					
ANR	3992572	Identifier	current_execute_data		3991200	0					
ANR	3992573	Identifier	call		3991200	1					
ANR	3992574	ExpressionStatement	"fci -> object -> handlers -> call_method ( func -> common . function_name , fci -> object , call , fci -> retval )"	902:3:26575:26669	3991200	2	True				
ANR	3992575	CallExpression	"fci -> object -> handlers -> call_method ( func -> common . function_name , fci -> object , call , fci -> retval )"		3991200	0					
ANR	3992576	Callee	fci -> object -> handlers -> call_method		3991200	0					
ANR	3992577	PtrMemberAccess	fci -> object -> handlers -> call_method		3991200	0					
ANR	3992578	PtrMemberAccess	fci -> object -> handlers		3991200	0					
ANR	3992579	PtrMemberAccess	fci -> object		3991200	0					
ANR	3992580	Identifier	fci		3991200	0					
ANR	3992581	Identifier	object		3991200	1					
ANR	3992582	Identifier	handlers		3991200	1					
ANR	3992583	Identifier	call_method		3991200	1					
ANR	3992584	ArgumentList	func -> common . function_name		3991200	1					
ANR	3992585	Argument	func -> common . function_name		3991200	0					
ANR	3992586	MemberAccess	func -> common . function_name		3991200	0					
ANR	3992587	PtrMemberAccess	func -> common		3991200	0					
ANR	3992588	Identifier	func		3991200	0					
ANR	3992589	Identifier	common		3991200	1					
ANR	3992590	Identifier	function_name		3991200	1					
ANR	3992591	Argument	fci -> object		3991200	1					
ANR	3992592	PtrMemberAccess	fci -> object		3991200	0					
ANR	3992593	Identifier	fci		3991200	0					
ANR	3992594	Identifier	object		3991200	1					
ANR	3992595	Argument	call		3991200	2					
ANR	3992596	Identifier	call		3991200	0					
ANR	3992597	Argument	fci -> retval		3991200	3					
ANR	3992598	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992599	Identifier	fci		3991200	0					
ANR	3992600	Identifier	retval		3991200	1					
ANR	3992601	ExpressionStatement	EG ( current_execute_data ) = call -> prev_execute_data	903:3:26674:26724	3991200	3	True				
ANR	3992602	AssignmentExpression	EG ( current_execute_data ) = call -> prev_execute_data		3991200	0		=			
ANR	3992603	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992604	Callee	EG		3991200	0					
ANR	3992605	Identifier	EG		3991200	0					
ANR	3992606	ArgumentList	current_execute_data		3991200	1					
ANR	3992607	Argument	current_execute_data		3991200	0					
ANR	3992608	Identifier	current_execute_data		3991200	0					
ANR	3992609	PtrMemberAccess	call -> prev_execute_data		3991200	1					
ANR	3992610	Identifier	call		3991200	0					
ANR	3992611	Identifier	prev_execute_data		3991200	1					
ANR	3992612	ElseStatement	else		3991200	0					
ANR	3992613	CompoundStatement		221:9:7388:7388	3991200	0					
ANR	3992614	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot call overloaded function for non-object"" )"	905:3:26740:26812	3991200	0	True				
ANR	3992615	CallExpression	"zend_throw_error ( NULL , ""Cannot call overloaded function for non-object"" )"		3991200	0					
ANR	3992616	Callee	zend_throw_error		3991200	0					
ANR	3992617	Identifier	zend_throw_error		3991200	0					
ANR	3992618	ArgumentList	NULL		3991200	1					
ANR	3992619	Argument	NULL		3991200	0					
ANR	3992620	Identifier	NULL		3991200	0					
ANR	3992621	Argument	"""Cannot call overloaded function for non-object"""		3991200	1					
ANR	3992622	PrimaryExpression	"""Cannot call overloaded function for non-object"""		3991200	0					
ANR	3992623	ExpressionStatement	zend_vm_stack_free_args ( call )	908:2:26821:26850	3991200	2	True				
ANR	3992624	CallExpression	zend_vm_stack_free_args ( call )		3991200	0					
ANR	3992625	Callee	zend_vm_stack_free_args		3991200	0					
ANR	3992626	Identifier	zend_vm_stack_free_args		3991200	0					
ANR	3992627	ArgumentList	call		3991200	1					
ANR	3992628	Argument	call		3991200	0					
ANR	3992629	Identifier	call		3991200	0					
ANR	3992630	IfStatement	if ( func -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY )		3991200	3					
ANR	3992631	Condition	func -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY	910:6:26859:26906	3991200	0	True				
ANR	3992632	EqualityExpression	func -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY		3991200	0		==			
ANR	3992633	PtrMemberAccess	func -> type		3991200	0					
ANR	3992634	Identifier	func		3991200	0					
ANR	3992635	Identifier	type		3991200	1					
ANR	3992636	Identifier	ZEND_OVERLOADED_FUNCTION_TEMPORARY		3991200	1					
ANR	3992637	CompoundStatement		227:56:7562:7562	3991200	1					
ANR	3992638	ExpressionStatement	zend_string_release ( func -> common . function_name )	911:3:26914:26961	3991200	0	True				
ANR	3992639	CallExpression	zend_string_release ( func -> common . function_name )		3991200	0					
ANR	3992640	Callee	zend_string_release		3991200	0					
ANR	3992641	Identifier	zend_string_release		3991200	0					
ANR	3992642	ArgumentList	func -> common . function_name		3991200	1					
ANR	3992643	Argument	func -> common . function_name		3991200	0					
ANR	3992644	MemberAccess	func -> common . function_name		3991200	0					
ANR	3992645	PtrMemberAccess	func -> common		3991200	0					
ANR	3992646	Identifier	func		3991200	0					
ANR	3992647	Identifier	common		3991200	1					
ANR	3992648	Identifier	function_name		3991200	1					
ANR	3992649	ExpressionStatement	efree ( func )	913:2:26969:26980	3991200	4	True				
ANR	3992650	CallExpression	efree ( func )		3991200	0					
ANR	3992651	Callee	efree		3991200	0					
ANR	3992652	Identifier	efree		3991200	0					
ANR	3992653	ArgumentList	func		3991200	1					
ANR	3992654	Argument	func		3991200	0					
ANR	3992655	Identifier	func		3991200	0					
ANR	3992656	IfStatement	if ( EG ( exception ) )		3991200	5					
ANR	3992657	Condition	EG ( exception )	915:6:26989:27001	3991200	0	True				
ANR	3992658	CallExpression	EG ( exception )		3991200	0					
ANR	3992659	Callee	EG		3991200	0					
ANR	3992660	Identifier	EG		3991200	0					
ANR	3992661	ArgumentList	exception		3991200	1					
ANR	3992662	Argument	exception		3991200	0					
ANR	3992663	Identifier	exception		3991200	0					
ANR	3992664	CompoundStatement		232:21:7657:7657	3991200	1					
ANR	3992665	ExpressionStatement	zval_ptr_dtor ( fci -> retval )	916:3:27009:27035	3991200	0	True				
ANR	3992666	CallExpression	zval_ptr_dtor ( fci -> retval )		3991200	0					
ANR	3992667	Callee	zval_ptr_dtor		3991200	0					
ANR	3992668	Identifier	zval_ptr_dtor		3991200	0					
ANR	3992669	ArgumentList	fci -> retval		3991200	1					
ANR	3992670	Argument	fci -> retval		3991200	0					
ANR	3992671	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992672	Identifier	fci		3991200	0					
ANR	3992673	Identifier	retval		3991200	1					
ANR	3992674	ExpressionStatement	ZVAL_UNDEF ( fci -> retval )	917:3:27040:27063	3991200	1	True				
ANR	3992675	CallExpression	ZVAL_UNDEF ( fci -> retval )		3991200	0					
ANR	3992676	Callee	ZVAL_UNDEF		3991200	0					
ANR	3992677	Identifier	ZVAL_UNDEF		3991200	0					
ANR	3992678	ArgumentList	fci -> retval		3991200	1					
ANR	3992679	Argument	fci -> retval		3991200	0					
ANR	3992680	PtrMemberAccess	fci -> retval		3991200	0					
ANR	3992681	Identifier	fci		3991200	0					
ANR	3992682	Identifier	retval		3991200	1					
ANR	3992683	ExpressionStatement	EG ( scope ) = orig_scope	921:1:27074:27096	3991200	25	True				
ANR	3992684	AssignmentExpression	EG ( scope ) = orig_scope		3991200	0		=			
ANR	3992685	CallExpression	EG ( scope )		3991200	0					
ANR	3992686	Callee	EG		3991200	0					
ANR	3992687	Identifier	EG		3991200	0					
ANR	3992688	ArgumentList	scope		3991200	1					
ANR	3992689	Argument	scope		3991200	0					
ANR	3992690	Identifier	scope		3991200	0					
ANR	3992691	Identifier	orig_scope		3991200	1					
ANR	3992692	ExpressionStatement	zend_vm_stack_free_call_frame ( call )	922:1:27099:27134	3991200	26	True				
ANR	3992693	CallExpression	zend_vm_stack_free_call_frame ( call )		3991200	0					
ANR	3992694	Callee	zend_vm_stack_free_call_frame		3991200	0					
ANR	3992695	Identifier	zend_vm_stack_free_call_frame		3991200	0					
ANR	3992696	ArgumentList	call		3991200	1					
ANR	3992697	Argument	call		3991200	0					
ANR	3992698	Identifier	call		3991200	0					
ANR	3992699	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		3991200	27					
ANR	3992700	Condition	EG ( current_execute_data ) == & dummy_execute_data	924:5:27142:27188	3991200	0	True				
ANR	3992701	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		3991200	0		==			
ANR	3992702	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992703	Callee	EG		3991200	0					
ANR	3992704	Identifier	EG		3991200	0					
ANR	3992705	ArgumentList	current_execute_data		3991200	1					
ANR	3992706	Argument	current_execute_data		3991200	0					
ANR	3992707	Identifier	current_execute_data		3991200	0					
ANR	3992708	UnaryOperationExpression	& dummy_execute_data		3991200	1					
ANR	3992709	UnaryOperator	&		3991200	0					
ANR	3992710	Identifier	dummy_execute_data		3991200	1					
ANR	3992711	CompoundStatement		241:54:7844:7844	3991200	1					
ANR	3992712	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	925:2:27195:27258	3991200	0	True				
ANR	3992713	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		3991200	0		=			
ANR	3992714	CallExpression	EG ( current_execute_data )		3991200	0					
ANR	3992715	Callee	EG		3991200	0					
ANR	3992716	Identifier	EG		3991200	0					
ANR	3992717	ArgumentList	current_execute_data		3991200	1					
ANR	3992718	Argument	current_execute_data		3991200	0					
ANR	3992719	Identifier	current_execute_data		3991200	0					
ANR	3992720	MemberAccess	dummy_execute_data . prev_execute_data		3991200	1					
ANR	3992721	Identifier	dummy_execute_data		3991200	0					
ANR	3992722	Identifier	prev_execute_data		3991200	1					
ANR	3992723	IfStatement	if ( EG ( exception ) )		3991200	28					
ANR	3992724	Condition	EG ( exception )	928:5:27269:27281	3991200	0	True				
ANR	3992725	CallExpression	EG ( exception )		3991200	0					
ANR	3992726	Callee	EG		3991200	0					
ANR	3992727	Identifier	EG		3991200	0					
ANR	3992728	ArgumentList	exception		3991200	1					
ANR	3992729	Argument	exception		3991200	0					
ANR	3992730	Identifier	exception		3991200	0					
ANR	3992731	CompoundStatement		245:20:7937:7937	3991200	1					
ANR	3992732	ExpressionStatement	zend_throw_exception_internal ( NULL )	929:2:27288:27323	3991200	0	True				
ANR	3992733	CallExpression	zend_throw_exception_internal ( NULL )		3991200	0					
ANR	3992734	Callee	zend_throw_exception_internal		3991200	0					
ANR	3992735	Identifier	zend_throw_exception_internal		3991200	0					
ANR	3992736	ArgumentList	NULL		3991200	1					
ANR	3992737	Argument	NULL		3991200	0					
ANR	3992738	Identifier	NULL		3991200	0					
ANR	3992739	ReturnStatement	return SUCCESS ;	931:1:27329:27343	3991200	29	True				
ANR	3992740	Identifier	SUCCESS		3991200	0					
ANR	3992741	ReturnType	int		3991200	1					
ANR	3992742	Identifier	zend_call_function		3991200	2					
ANR	3992743	ParameterList	"zend_fcall_info * fci , zend_fcall_info_cache * fci_cache"		3991200	3					
ANR	3992744	Parameter	zend_fcall_info * fci	683:23:19280:19299	3991200	0	True				
ANR	3992745	ParameterType	zend_fcall_info *		3991200	0					
ANR	3992746	Identifier	fci		3991200	1					
ANR	3992747	Parameter	zend_fcall_info_cache * fci_cache	683:45:19302:19333	3991200	1	True				
ANR	3992748	ParameterType	zend_fcall_info_cache *		3991200	0					
ANR	3992749	Identifier	fci_cache		3991200	1					
ANR	3992750	CFGEntryNode	ENTRY		3991200		True				
ANR	3992751	CFGExitNode	EXIT		3991200		True				
ANR	3992752	Symbol	exception		3991200						
ANR	3992753	Symbol	& error		3991200						
ANR	3992754	Symbol	& dummy_execute_data		3991200						
ANR	3992755	Symbol	ZEND_DO_FCALL_BY_NAME		3991200						
ANR	3992756	Symbol	EG ( current_execute_data ) -> func -> common . type		3991200						
ANR	3992757	Symbol	fci -> object -> handle		3991200						
ANR	3992758	Symbol	* call		3991200						
ANR	3992759	Symbol	* fci		3991200						
ANR	3992760	Symbol	ZEND_OVERLOADED_FUNCTION_TEMPORARY		3991200						
ANR	3992761	Symbol	* * EG		3991200						
ANR	3992762	Symbol	fci -> symbol_table		3991200						
ANR	3992763	Symbol	func -> common . scope -> name		3991200						
ANR	3992764	Symbol	func -> common		3991200						
ANR	3992765	Symbol	zend_execute_internal		3991200						
ANR	3992766	Symbol	fci -> object -> handlers		3991200						
ANR	3992767	Symbol	call_via_handler		3991200						
ANR	3992768	Symbol	func -> internal_function		3991200						
ANR	3992769	Symbol	IS_OBJ_VALID		3991200						
ANR	3992770	Symbol	* * fci		3991200						
ANR	3992771	Symbol	fci_cache -> called_scope		3991200						
ANR	3992772	Symbol	active		3991200						
ANR	3992773	Symbol	* EG ( current_execute_data ) -> opline		3991200						
ANR	3992774	Symbol	* EG ( current_execute_data ) -> func		3991200						
ANR	3992775	Symbol	GC_TYPE		3991200						
ANR	3992776	Symbol	* fci -> object -> handle		3991200						
ANR	3992777	Symbol	* func -> common . scope		3991200						
ANR	3992778	Symbol	ZEND_DO_FCALL		3991200						
ANR	3992779	Symbol	fci -> param_count		3991200						
ANR	3992780	Symbol	orig_scope		3991200						
ANR	3992781	Symbol	ZEND_USER_CODE		3991200						
ANR	3992782	Symbol	fci_cache -> initialized		3991200						
ANR	3992783	Symbol	& fci -> function_name		3991200						
ANR	3992784	Symbol	Z_ISREF_P		3991200						
ANR	3992785	Symbol	dummy_execute_data		3991200						
ANR	3992786	Symbol	* * fci -> object		3991200						
ANR	3992787	Symbol	func -> op_array . fn_flags		3991200						
ANR	3992788	Symbol	zend_is_callable_ex		3991200						
ANR	3992789	Symbol	dummy_execute_data . call		3991200						
ANR	3992790	Symbol	* EG		3991200						
ANR	3992791	Symbol	fci_cache		3991200						
ANR	3992792	Symbol	EG ( current_execute_data ) -> opline		3991200						
ANR	3992793	Symbol	fci		3991200						
ANR	3992794	Symbol	func -> op_array . prototype		3991200						
ANR	3992795	Symbol	E_WARNING		3991200						
ANR	3992796	Symbol	func -> common . scope		3991200						
ANR	3992797	Symbol	Z_OBJ		3991200						
ANR	3992798	Symbol	arg		3991200						
ANR	3992799	Symbol	ZEND_CALL_NUM_ARGS		3991200						
ANR	3992800	Symbol	func -> type		3991200						
ANR	3992801	Symbol	fci -> no_separation		3991200						
ANR	3992802	Symbol	func -> common . fn_flags		3991200						
ANR	3992803	Symbol	SUCCESS		3991200						
ANR	3992804	Symbol	* func		3991200						
ANR	3992805	Symbol	EG ( current_execute_data ) -> opline -> opcode		3991200						
ANR	3992806	Symbol	i		3991200						
ANR	3992807	Symbol	FAILURE		3991200						
ANR	3992808	Symbol	* fci_cache		3991200						
ANR	3992809	Symbol	& func -> op_array		3991200						
ANR	3992810	Symbol	call		3991200						
ANR	3992811	Symbol	ZEND_ACC_ABSTRACT		3991200						
ANR	3992812	Symbol	ZEND_CALL_TOP_FUNCTION		3991200						
ANR	3992813	Symbol	ZEND_DO_ICALL		3991200						
ANR	3992814	Symbol	EG ( current_execute_data ) -> func -> common		3991200						
ANR	3992815	Symbol	* EG ( current_execute_data )		3991200						
ANR	3992816	Symbol	IS_CALLABLE_CHECK_SILENT		3991200						
ANR	3992817	Symbol	IS_OBJECT		3991200						
ANR	3992818	Symbol	fci_cache -> calling_scope		3991200						
ANR	3992819	Symbol	fci -> object		3991200						
ANR	3992820	Symbol	call -> This		3991200						
ANR	3992821	Symbol	ZEND_CALL_CLOSURE		3991200						
ANR	3992822	Symbol	EG ( current_execute_data ) -> func		3991200						
ANR	3992823	Symbol	current_execute_data		3991200						
ANR	3992824	Symbol	ARG_MAY_BE_SENT_BY_REF		3991200						
ANR	3992825	Symbol	call -> prev_execute_data		3991200						
ANR	3992826	Symbol	func -> op_array		3991200						
ANR	3992827	Symbol	ZEND_DO_UCALL		3991200						
ANR	3992828	Symbol	ZEND_INTERNAL_FUNCTION		3991200						
ANR	3992829	Symbol	EG ( objects_store ) . object_buckets		3991200						
ANR	3992830	Symbol	ZEND_ACC_DEPRECATED		3991200						
ANR	3992831	Symbol	fci_cache -> function_handler		3991200						
ANR	3992832	Symbol	ZEND_USER_FUNCTION		3991200						
ANR	3992833	Symbol	& fci_cache_local		3991200						
ANR	3992834	Symbol	ZEND_ACC_GENERATOR		3991200						
ANR	3992835	Symbol	calling_scope		3991200						
ANR	3992836	Symbol	* EG ( objects_store ) . object_buckets		3991200						
ANR	3992837	Symbol	EG		3991200						
ANR	3992838	Symbol	NULL		3991200						
ANR	3992839	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		3991200						
ANR	3992840	Symbol	* fci -> object		3991200						
ANR	3992841	Symbol	E_DEPRECATED		3991200						
ANR	3992842	Symbol	* func -> common		3991200						
ANR	3992843	Symbol	* error		3991200						
ANR	3992844	Symbol	call -> symbol_table		3991200						
ANR	3992845	Symbol	ARG_SHOULD_BE_SENT_BY_REF		3991200						
ANR	3992846	Symbol	zend_vm_stack_push_call_frame		3991200						
ANR	3992847	Symbol	ZEND_CALL_ARG		3991200						
ANR	3992848	Symbol	fci -> size		3991200						
ANR	3992849	Symbol	* * * fci		3991200						
ANR	3992850	Symbol	error		3991200						
ANR	3992851	Symbol	callable_name		3991200						
ANR	3992852	Symbol	UNEXPECTED		3991200						
ANR	3992853	Symbol	fci_cache_local		3991200						
ANR	3992854	Symbol	fci -> retval		3991200						
ANR	3992855	Symbol	param		3991200						
ANR	3992856	Symbol	E_CORE_ERROR		3991200						
ANR	3992857	Symbol	scope		3991200						
ANR	3992858	Symbol	dummy_execute_data . prev_execute_data		3991200						
ANR	3992859	Symbol	ZEND_ACC_STATIC		3991200						
ANR	3992860	Symbol	dummy_execute_data . opline		3991200						
ANR	3992861	Symbol	GC_REFCOUNT		3991200						
ANR	3992862	Symbol	Z_OPT_REFCOUNTED_P		3991200						
ANR	3992863	Symbol	fci -> params		3991200						
ANR	3992864	Symbol	objects_store		3991200						
ANR	3992865	Symbol	func -> common . function_name		3991200						
ANR	3992866	Symbol	* * func		3991200						
ANR	3992867	Symbol	dummy_execute_data . func		3991200						
ANR	3992868	Symbol	fci_cache -> object		3991200						
ANR	3992869	Symbol	ZSTR_VAL		3991200						
ANR	3992870	Symbol	call -> return_value		3991200						
ANR	3992871	Symbol	ZEND_ACC_CLOSURE		3991200						
ANR	3992872	Symbol	func		3991200						
ANR	3992873	Symbol	Z_REFVAL_P		3991200						
ANR	3992874	Symbol	EXPECTED		3991200						
ANR	3992875	Symbol	& callable_name		3991200						
ANR	3992876	Function	zend_lookup_class_ex	935:0:27358:30786							
ANR	3992877	FunctionDef	"zend_lookup_class_ex (zend_string * name , const zval * key , int use_autoload)"		3992876	0					
ANR	3992878	CompoundStatement		936:0:27470:30786	3992876	0					
ANR	3992879	IdentifierDeclStatement	zend_class_entry * ce = NULL ;	937:1:27473:27500	3992876	0	True				
ANR	3992880	IdentifierDecl	* ce = NULL		3992876	0					
ANR	3992881	IdentifierDeclType	zend_class_entry *		3992876	0					
ANR	3992882	Identifier	ce		3992876	1					
ANR	3992883	AssignmentExpression	* ce = NULL		3992876	2		=			
ANR	3992884	Identifier	NULL		3992876	0					
ANR	3992885	Identifier	NULL		3992876	1					
ANR	3992886	IdentifierDeclStatement	zval args [ 1 ] ;	938:1:27503:27515	3992876	1	True				
ANR	3992887	IdentifierDecl	args [ 1 ]		3992876	0					
ANR	3992888	IdentifierDeclType	zval [ 1 ]		3992876	0					
ANR	3992889	Identifier	args		3992876	1					
ANR	3992890	PrimaryExpression	1		3992876	2					
ANR	3992891	IdentifierDeclStatement	zval local_retval ;	939:1:27518:27535	3992876	2	True				
ANR	3992892	IdentifierDecl	local_retval		3992876	0					
ANR	3992893	IdentifierDeclType	zval		3992876	0					
ANR	3992894	Identifier	local_retval		3992876	1					
ANR	3992895	IdentifierDeclStatement	int retval ;	940:1:27538:27548	3992876	3	True				
ANR	3992896	IdentifierDecl	retval		3992876	0					
ANR	3992897	IdentifierDeclType	int		3992876	0					
ANR	3992898	Identifier	retval		3992876	1					
ANR	3992899	IdentifierDeclStatement	zend_string * lc_name ;	941:1:27551:27571	3992876	4	True				
ANR	3992900	IdentifierDecl	* lc_name		3992876	0					
ANR	3992901	IdentifierDeclType	zend_string *		3992876	0					
ANR	3992902	Identifier	lc_name		3992876	1					
ANR	3992903	IdentifierDeclStatement	zend_fcall_info fcall_info ;	942:1:27574:27600	3992876	5	True				
ANR	3992904	IdentifierDecl	fcall_info		3992876	0					
ANR	3992905	IdentifierDeclType	zend_fcall_info		3992876	0					
ANR	3992906	Identifier	fcall_info		3992876	1					
ANR	3992907	IdentifierDeclStatement	zend_fcall_info_cache fcall_cache ;	943:1:27603:27636	3992876	6	True				
ANR	3992908	IdentifierDecl	fcall_cache		3992876	0					
ANR	3992909	IdentifierDeclType	zend_fcall_info_cache		3992876	0					
ANR	3992910	Identifier	fcall_cache		3992876	1					
ANR	3992911	IfStatement	if ( key )		3992876	7					
ANR	3992912	Condition	key	945:5:27644:27646	3992876	0	True				
ANR	3992913	Identifier	key		3992876	0					
ANR	3992914	CompoundStatement		10:10:178:178	3992876	1					
ANR	3992915	ExpressionStatement	lc_name = Z_STR_P ( key )	946:2:27653:27675	3992876	0	True				
ANR	3992916	AssignmentExpression	lc_name = Z_STR_P ( key )		3992876	0		=			
ANR	3992917	Identifier	lc_name		3992876	0					
ANR	3992918	CallExpression	Z_STR_P ( key )		3992876	1					
ANR	3992919	Callee	Z_STR_P		3992876	0					
ANR	3992920	Identifier	Z_STR_P		3992876	0					
ANR	3992921	ArgumentList	key		3992876	1					
ANR	3992922	Argument	key		3992876	0					
ANR	3992923	Identifier	key		3992876	0					
ANR	3992924	ElseStatement	else		3992876	0					
ANR	3992925	CompoundStatement		12:8:214:214	3992876	0					
ANR	3992926	IfStatement	if ( name == NULL || ! ZSTR_LEN ( name ) )		3992876	0					
ANR	3992927	Condition	name == NULL || ! ZSTR_LEN ( name )	948:6:27693:27723	3992876	0	True				
ANR	3992928	OrExpression	name == NULL || ! ZSTR_LEN ( name )		3992876	0		||			
ANR	3992929	EqualityExpression	name == NULL		3992876	0		==			
ANR	3992930	Identifier	name		3992876	0					
ANR	3992931	Identifier	NULL		3992876	1					
ANR	3992932	UnaryOperationExpression	! ZSTR_LEN ( name )		3992876	1					
ANR	3992933	UnaryOperator	!		3992876	0					
ANR	3992934	CallExpression	ZSTR_LEN ( name )		3992876	1					
ANR	3992935	Callee	ZSTR_LEN		3992876	0					
ANR	3992936	Identifier	ZSTR_LEN		3992876	0					
ANR	3992937	ArgumentList	name		3992876	1					
ANR	3992938	Argument	name		3992876	0					
ANR	3992939	Identifier	name		3992876	0					
ANR	3992940	CompoundStatement		13:39:255:255	3992876	1					
ANR	3992941	ReturnStatement	return NULL ;	949:3:27731:27742	3992876	0	True				
ANR	3992942	Identifier	NULL		3992876	0					
ANR	3992943	IfStatement	if ( ZSTR_VAL ( name ) [ 0 ] == '\\\\' )		3992876	1					
ANR	3992944	Condition	ZSTR_VAL ( name ) [ 0 ] == '\\\\'	952:6:27755:27779	3992876	0	True				
ANR	3992945	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] == '\\\\'		3992876	0		==			
ANR	3992946	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		3992876	0					
ANR	3992947	CallExpression	ZSTR_VAL ( name )		3992876	0					
ANR	3992948	Callee	ZSTR_VAL		3992876	0					
ANR	3992949	Identifier	ZSTR_VAL		3992876	0					
ANR	3992950	ArgumentList	name		3992876	1					
ANR	3992951	Argument	name		3992876	0					
ANR	3992952	Identifier	name		3992876	0					
ANR	3992953	PrimaryExpression	0		3992876	1					
ANR	3992954	PrimaryExpression	'\\\\'		3992876	1					
ANR	3992955	CompoundStatement		17:33:311:311	3992876	1					
ANR	3992956	ExpressionStatement	"lc_name = zend_string_alloc ( ZSTR_LEN ( name ) - 1 , 0 )"	953:3:27787:27837	3992876	0	True				
ANR	3992957	AssignmentExpression	"lc_name = zend_string_alloc ( ZSTR_LEN ( name ) - 1 , 0 )"		3992876	0		=			
ANR	3992958	Identifier	lc_name		3992876	0					
ANR	3992959	CallExpression	"zend_string_alloc ( ZSTR_LEN ( name ) - 1 , 0 )"		3992876	1					
ANR	3992960	Callee	zend_string_alloc		3992876	0					
ANR	3992961	Identifier	zend_string_alloc		3992876	0					
ANR	3992962	ArgumentList	ZSTR_LEN ( name ) - 1		3992876	1					
ANR	3992963	Argument	ZSTR_LEN ( name ) - 1		3992876	0					
ANR	3992964	AdditiveExpression	ZSTR_LEN ( name ) - 1		3992876	0		-			
ANR	3992965	CallExpression	ZSTR_LEN ( name )		3992876	0					
ANR	3992966	Callee	ZSTR_LEN		3992876	0					
ANR	3992967	Identifier	ZSTR_LEN		3992876	0					
ANR	3992968	ArgumentList	name		3992876	1					
ANR	3992969	Argument	name		3992876	0					
ANR	3992970	Identifier	name		3992876	0					
ANR	3992971	PrimaryExpression	1		3992876	1					
ANR	3992972	Argument	0		3992876	1					
ANR	3992973	PrimaryExpression	0		3992876	0					
ANR	3992974	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lc_name ) , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"	954:3:27842:27922	3992876	1	True				
ANR	3992975	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lc_name ) , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"		3992876	0					
ANR	3992976	Callee	zend_str_tolower_copy		3992876	0					
ANR	3992977	Identifier	zend_str_tolower_copy		3992876	0					
ANR	3992978	ArgumentList	ZSTR_VAL ( lc_name )		3992876	1					
ANR	3992979	Argument	ZSTR_VAL ( lc_name )		3992876	0					
ANR	3992980	CallExpression	ZSTR_VAL ( lc_name )		3992876	0					
ANR	3992981	Callee	ZSTR_VAL		3992876	0					
ANR	3992982	Identifier	ZSTR_VAL		3992876	0					
ANR	3992983	ArgumentList	lc_name		3992876	1					
ANR	3992984	Argument	lc_name		3992876	0					
ANR	3992985	Identifier	lc_name		3992876	0					
ANR	3992986	Argument	ZSTR_VAL ( name ) + 1		3992876	1					
ANR	3992987	AdditiveExpression	ZSTR_VAL ( name ) + 1		3992876	0		+			
ANR	3992988	CallExpression	ZSTR_VAL ( name )		3992876	0					
ANR	3992989	Callee	ZSTR_VAL		3992876	0					
ANR	3992990	Identifier	ZSTR_VAL		3992876	0					
ANR	3992991	ArgumentList	name		3992876	1					
ANR	3992992	Argument	name		3992876	0					
ANR	3992993	Identifier	name		3992876	0					
ANR	3992994	PrimaryExpression	1		3992876	1					
ANR	3992995	Argument	ZSTR_LEN ( name ) - 1		3992876	2					
ANR	3992996	AdditiveExpression	ZSTR_LEN ( name ) - 1		3992876	0		-			
ANR	3992997	CallExpression	ZSTR_LEN ( name )		3992876	0					
ANR	3992998	Callee	ZSTR_LEN		3992876	0					
ANR	3992999	Identifier	ZSTR_LEN		3992876	0					
ANR	3993000	ArgumentList	name		3992876	1					
ANR	3993001	Argument	name		3992876	0					
ANR	3993002	Identifier	name		3992876	0					
ANR	3993003	PrimaryExpression	1		3992876	1					
ANR	3993004	ElseStatement	else		3992876	0					
ANR	3993005	CompoundStatement		20:9:462:462	3992876	0					
ANR	3993006	ExpressionStatement	lc_name = zend_string_tolower ( name )	956:3:27938:27973	3992876	0	True				
ANR	3993007	AssignmentExpression	lc_name = zend_string_tolower ( name )		3992876	0		=			
ANR	3993008	Identifier	lc_name		3992876	0					
ANR	3993009	CallExpression	zend_string_tolower ( name )		3992876	1					
ANR	3993010	Callee	zend_string_tolower		3992876	0					
ANR	3993011	Identifier	zend_string_tolower		3992876	0					
ANR	3993012	ArgumentList	name		3992876	1					
ANR	3993013	Argument	name		3992876	0					
ANR	3993014	Identifier	name		3992876	0					
ANR	3993015	ExpressionStatement	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"	960:1:27984:28033	3992876	8	True				
ANR	3993016	AssignmentExpression	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		3992876	0		=			
ANR	3993017	Identifier	ce		3992876	0					
ANR	3993018	CallExpression	"zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		3992876	1					
ANR	3993019	Callee	zend_hash_find_ptr		3992876	0					
ANR	3993020	Identifier	zend_hash_find_ptr		3992876	0					
ANR	3993021	ArgumentList	EG ( class_table )		3992876	1					
ANR	3993022	Argument	EG ( class_table )		3992876	0					
ANR	3993023	CallExpression	EG ( class_table )		3992876	0					
ANR	3993024	Callee	EG		3992876	0					
ANR	3993025	Identifier	EG		3992876	0					
ANR	3993026	ArgumentList	class_table		3992876	1					
ANR	3993027	Argument	class_table		3992876	0					
ANR	3993028	Identifier	class_table		3992876	0					
ANR	3993029	Argument	lc_name		3992876	1					
ANR	3993030	Identifier	lc_name		3992876	0					
ANR	3993031	IfStatement	if ( ce )		3992876	9					
ANR	3993032	Condition	ce	961:5:28040:28041	3992876	0	True				
ANR	3993033	Identifier	ce		3992876	0					
ANR	3993034	CompoundStatement		26:9:573:573	3992876	1					
ANR	3993035	IfStatement	if ( ! key )		3992876	0					
ANR	3993036	Condition	! key	962:6:28052:28055	3992876	0	True				
ANR	3993037	UnaryOperationExpression	! key		3992876	0					
ANR	3993038	UnaryOperator	!		3992876	0					
ANR	3993039	Identifier	key		3992876	1					
ANR	3993040	CompoundStatement		27:12:587:587	3992876	1					
ANR	3993041	ExpressionStatement	zend_string_release ( lc_name )	963:3:28063:28091	3992876	0	True				
ANR	3993042	CallExpression	zend_string_release ( lc_name )		3992876	0					
ANR	3993043	Callee	zend_string_release		3992876	0					
ANR	3993044	Identifier	zend_string_release		3992876	0					
ANR	3993045	ArgumentList	lc_name		3992876	1					
ANR	3993046	Argument	lc_name		3992876	0					
ANR	3993047	Identifier	lc_name		3992876	0					
ANR	3993048	ReturnStatement	return ce ;	965:2:28099:28108	3992876	1	True				
ANR	3993049	Identifier	ce		3992876	0					
ANR	3993050	IfStatement	if ( ! use_autoload || zend_is_compiling ( ) )		3992876	10					
ANR	3993051	Condition	! use_autoload || zend_is_compiling ( )	971:5:28255:28290	3992876	0	True				
ANR	3993052	OrExpression	! use_autoload || zend_is_compiling ( )		3992876	0		||			
ANR	3993053	UnaryOperationExpression	! use_autoload		3992876	0					
ANR	3993054	UnaryOperator	!		3992876	0					
ANR	3993055	Identifier	use_autoload		3992876	1					
ANR	3993056	CallExpression	zend_is_compiling ( )		3992876	1					
ANR	3993057	Callee	zend_is_compiling		3992876	0					
ANR	3993058	Identifier	zend_is_compiling		3992876	0					
ANR	3993059	ArgumentList			3992876	1					
ANR	3993060	CompoundStatement		36:43:822:822	3992876	1					
ANR	3993061	IfStatement	if ( ! key )		3992876	0					
ANR	3993062	Condition	! key	972:6:28301:28304	3992876	0	True				
ANR	3993063	UnaryOperationExpression	! key		3992876	0					
ANR	3993064	UnaryOperator	!		3992876	0					
ANR	3993065	Identifier	key		3992876	1					
ANR	3993066	CompoundStatement		37:12:836:836	3992876	1					
ANR	3993067	ExpressionStatement	zend_string_release ( lc_name )	973:3:28312:28340	3992876	0	True				
ANR	3993068	CallExpression	zend_string_release ( lc_name )		3992876	0					
ANR	3993069	Callee	zend_string_release		3992876	0					
ANR	3993070	Identifier	zend_string_release		3992876	0					
ANR	3993071	ArgumentList	lc_name		3992876	1					
ANR	3993072	Argument	lc_name		3992876	0					
ANR	3993073	Identifier	lc_name		3992876	0					
ANR	3993074	ReturnStatement	return NULL ;	975:2:28348:28359	3992876	1	True				
ANR	3993075	Identifier	NULL		3992876	0					
ANR	3993076	IfStatement	if ( ! EG ( autoload_func ) )		3992876	11					
ANR	3993077	Condition	! EG ( autoload_func )	978:5:28370:28387	3992876	0	True				
ANR	3993078	UnaryOperationExpression	! EG ( autoload_func )		3992876	0					
ANR	3993079	UnaryOperator	!		3992876	0					
ANR	3993080	CallExpression	EG ( autoload_func )		3992876	1					
ANR	3993081	Callee	EG		3992876	0					
ANR	3993082	Identifier	EG		3992876	0					
ANR	3993083	ArgumentList	autoload_func		3992876	1					
ANR	3993084	Argument	autoload_func		3992876	0					
ANR	3993085	Identifier	autoload_func		3992876	0					
ANR	3993086	CompoundStatement		44:2:923:1049	3992876	1					
ANR	3993087	IdentifierDeclStatement	"zend_function * func = zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 ) ;"	979:2:28394:28520	3992876	0	True				
ANR	3993088	IdentifierDecl	"* func = zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 )"		3992876	0					
ANR	3993089	IdentifierDeclType	zend_function *		3992876	0					
ANR	3993090	Identifier	func		3992876	1					
ANR	3993091	AssignmentExpression	"* func = zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 )"		3992876	2		=			
ANR	3993092	Identifier	func		3992876	0					
ANR	3993093	CallExpression	"zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 )"		3992876	1					
ANR	3993094	Callee	zend_hash_str_find_ptr		3992876	0					
ANR	3993095	Identifier	zend_hash_str_find_ptr		3992876	0					
ANR	3993096	ArgumentList	EG ( function_table )		3992876	1					
ANR	3993097	Argument	EG ( function_table )		3992876	0					
ANR	3993098	CallExpression	EG ( function_table )		3992876	0					
ANR	3993099	Callee	EG		3992876	0					
ANR	3993100	Identifier	EG		3992876	0					
ANR	3993101	ArgumentList	function_table		3992876	1					
ANR	3993102	Argument	function_table		3992876	0					
ANR	3993103	Identifier	function_table		3992876	0					
ANR	3993104	Argument	ZEND_AUTOLOAD_FUNC_NAME		3992876	1					
ANR	3993105	Identifier	ZEND_AUTOLOAD_FUNC_NAME		3992876	0					
ANR	3993106	Argument	sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1		3992876	2					
ANR	3993107	AdditiveExpression	sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1		3992876	0		-			
ANR	3993108	SizeofExpression	sizeof ( ZEND_AUTOLOAD_FUNC_NAME )		3992876	0					
ANR	3993109	Sizeof	sizeof		3992876	0					
ANR	3993110	SizeofOperand	ZEND_AUTOLOAD_FUNC_NAME		3992876	1					
ANR	3993111	PrimaryExpression	1		3992876	1					
ANR	3993112	IfStatement	if ( func )		3992876	1					
ANR	3993113	Condition	func	980:6:28528:28531	3992876	0	True				
ANR	3993114	Identifier	func		3992876	0					
ANR	3993115	CompoundStatement		45:12:1063:1063	3992876	1					
ANR	3993116	ExpressionStatement	EG ( autoload_func ) = func	981:3:28539:28563	3992876	0	True				
ANR	3993117	AssignmentExpression	EG ( autoload_func ) = func		3992876	0		=			
ANR	3993118	CallExpression	EG ( autoload_func )		3992876	0					
ANR	3993119	Callee	EG		3992876	0					
ANR	3993120	Identifier	EG		3992876	0					
ANR	3993121	ArgumentList	autoload_func		3992876	1					
ANR	3993122	Argument	autoload_func		3992876	0					
ANR	3993123	Identifier	autoload_func		3992876	0					
ANR	3993124	Identifier	func		3992876	1					
ANR	3993125	ElseStatement	else		3992876	0					
ANR	3993126	CompoundStatement		47:9:1103:1103	3992876	0					
ANR	3993127	IfStatement	if ( ! key )		3992876	0					
ANR	3993128	Condition	! key	983:7:28583:28586	3992876	0	True				
ANR	3993129	UnaryOperationExpression	! key		3992876	0					
ANR	3993130	UnaryOperator	!		3992876	0					
ANR	3993131	Identifier	key		3992876	1					
ANR	3993132	CompoundStatement		48:13:1118:1118	3992876	1					
ANR	3993133	ExpressionStatement	zend_string_release ( lc_name )	984:4:28595:28623	3992876	0	True				
ANR	3993134	CallExpression	zend_string_release ( lc_name )		3992876	0					
ANR	3993135	Callee	zend_string_release		3992876	0					
ANR	3993136	Identifier	zend_string_release		3992876	0					
ANR	3993137	ArgumentList	lc_name		3992876	1					
ANR	3993138	Argument	lc_name		3992876	0					
ANR	3993139	Identifier	lc_name		3992876	0					
ANR	3993140	ReturnStatement	return NULL ;	986:3:28633:28644	3992876	1	True				
ANR	3993141	Identifier	NULL		3992876	0					
ANR	3993142	IfStatement	"if ( strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" ) != ZSTR_LEN ( name ) )"		3992876	12					
ANR	3993143	Condition	"strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" ) != ZSTR_LEN ( name )"	992:5:28719:29343	3992876	0	True				
ANR	3993144	EqualityExpression	"strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" ) != ZSTR_LEN ( name )"		3992876	0		!=			
ANR	3993145	CallExpression	"strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" )"		3992876	0					
ANR	3993146	Callee	strspn		3992876	0					
ANR	3993147	Identifier	strspn		3992876	0					
ANR	3993148	ArgumentList	ZSTR_VAL ( name )		3992876	1					
ANR	3993149	Argument	ZSTR_VAL ( name )		3992876	0					
ANR	3993150	CallExpression	ZSTR_VAL ( name )		3992876	0					
ANR	3993151	Callee	ZSTR_VAL		3992876	0					
ANR	3993152	Identifier	ZSTR_VAL		3992876	0					
ANR	3993153	ArgumentList	name		3992876	1					
ANR	3993154	Argument	name		3992876	0					
ANR	3993155	Identifier	name		3992876	0					
ANR	3993156	Argument	"""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"""		3992876	1					
ANR	3993157	PrimaryExpression	"""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"""		3992876	0					
ANR	3993158	CallExpression	ZSTR_LEN ( name )		3992876	1					
ANR	3993159	Callee	ZSTR_LEN		3992876	0					
ANR	3993160	Identifier	ZSTR_LEN		3992876	0					
ANR	3993161	ArgumentList	name		3992876	1					
ANR	3993162	Argument	name		3992876	0					
ANR	3993163	Identifier	name		3992876	0					
ANR	3993164	CompoundStatement		57:632:1875:1875	3992876	1					
ANR	3993165	IfStatement	if ( ! key )		3992876	0					
ANR	3993166	Condition	! key	993:6:29354:29357	3992876	0	True				
ANR	3993167	UnaryOperationExpression	! key		3992876	0					
ANR	3993168	UnaryOperator	!		3992876	0					
ANR	3993169	Identifier	key		3992876	1					
ANR	3993170	CompoundStatement		58:12:1889:1889	3992876	1					
ANR	3993171	ExpressionStatement	zend_string_release ( lc_name )	994:3:29365:29393	3992876	0	True				
ANR	3993172	CallExpression	zend_string_release ( lc_name )		3992876	0					
ANR	3993173	Callee	zend_string_release		3992876	0					
ANR	3993174	Identifier	zend_string_release		3992876	0					
ANR	3993175	ArgumentList	lc_name		3992876	1					
ANR	3993176	Argument	lc_name		3992876	0					
ANR	3993177	Identifier	lc_name		3992876	0					
ANR	3993178	ReturnStatement	return NULL ;	996:2:29401:29412	3992876	1	True				
ANR	3993179	Identifier	NULL		3992876	0					
ANR	3993180	IfStatement	if ( EG ( in_autoload ) == NULL )		3992876	13					
ANR	3993181	Condition	EG ( in_autoload ) == NULL	999:5:29423:29445	3992876	0	True				
ANR	3993182	EqualityExpression	EG ( in_autoload ) == NULL		3992876	0		==			
ANR	3993183	CallExpression	EG ( in_autoload )		3992876	0					
ANR	3993184	Callee	EG		3992876	0					
ANR	3993185	Identifier	EG		3992876	0					
ANR	3993186	ArgumentList	in_autoload		3992876	1					
ANR	3993187	Argument	in_autoload		3992876	0					
ANR	3993188	Identifier	in_autoload		3992876	0					
ANR	3993189	Identifier	NULL		3992876	1					
ANR	3993190	CompoundStatement		64:30:1977:1977	3992876	1					
ANR	3993191	ExpressionStatement	ALLOC_HASHTABLE ( EG ( in_autoload ) )	1000:2:29452:29484	3992876	0	True				
ANR	3993192	CallExpression	ALLOC_HASHTABLE ( EG ( in_autoload ) )		3992876	0					
ANR	3993193	Callee	ALLOC_HASHTABLE		3992876	0					
ANR	3993194	Identifier	ALLOC_HASHTABLE		3992876	0					
ANR	3993195	ArgumentList	EG ( in_autoload )		3992876	1					
ANR	3993196	Argument	EG ( in_autoload )		3992876	0					
ANR	3993197	CallExpression	EG ( in_autoload )		3992876	0					
ANR	3993198	Callee	EG		3992876	0					
ANR	3993199	Identifier	EG		3992876	0					
ANR	3993200	ArgumentList	in_autoload		3992876	1					
ANR	3993201	Argument	in_autoload		3992876	0					
ANR	3993202	Identifier	in_autoload		3992876	0					
ANR	3993203	ExpressionStatement	"zend_hash_init ( EG ( in_autoload ) , 8 , NULL , NULL , 0 )"	1001:2:29488:29537	3992876	1	True				
ANR	3993204	CallExpression	"zend_hash_init ( EG ( in_autoload ) , 8 , NULL , NULL , 0 )"		3992876	0					
ANR	3993205	Callee	zend_hash_init		3992876	0					
ANR	3993206	Identifier	zend_hash_init		3992876	0					
ANR	3993207	ArgumentList	EG ( in_autoload )		3992876	1					
ANR	3993208	Argument	EG ( in_autoload )		3992876	0					
ANR	3993209	CallExpression	EG ( in_autoload )		3992876	0					
ANR	3993210	Callee	EG		3992876	0					
ANR	3993211	Identifier	EG		3992876	0					
ANR	3993212	ArgumentList	in_autoload		3992876	1					
ANR	3993213	Argument	in_autoload		3992876	0					
ANR	3993214	Identifier	in_autoload		3992876	0					
ANR	3993215	Argument	8		3992876	1					
ANR	3993216	PrimaryExpression	8		3992876	0					
ANR	3993217	Argument	NULL		3992876	2					
ANR	3993218	Identifier	NULL		3992876	0					
ANR	3993219	Argument	NULL		3992876	3					
ANR	3993220	Identifier	NULL		3992876	0					
ANR	3993221	Argument	0		3992876	4					
ANR	3993222	PrimaryExpression	0		3992876	0					
ANR	3993223	IfStatement	"if ( zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name ) == NULL )"		3992876	14					
ANR	3993224	Condition	"zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name ) == NULL"	1004:5:29548:29608	3992876	0	True				
ANR	3993225	EqualityExpression	"zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name ) == NULL"		3992876	0		==			
ANR	3993226	CallExpression	"zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name )"		3992876	0					
ANR	3993227	Callee	zend_hash_add_empty_element		3992876	0					
ANR	3993228	Identifier	zend_hash_add_empty_element		3992876	0					
ANR	3993229	ArgumentList	EG ( in_autoload )		3992876	1					
ANR	3993230	Argument	EG ( in_autoload )		3992876	0					
ANR	3993231	CallExpression	EG ( in_autoload )		3992876	0					
ANR	3993232	Callee	EG		3992876	0					
ANR	3993233	Identifier	EG		3992876	0					
ANR	3993234	ArgumentList	in_autoload		3992876	1					
ANR	3993235	Argument	in_autoload		3992876	0					
ANR	3993236	Identifier	in_autoload		3992876	0					
ANR	3993237	Argument	lc_name		3992876	1					
ANR	3993238	Identifier	lc_name		3992876	0					
ANR	3993239	Identifier	NULL		3992876	1					
ANR	3993240	CompoundStatement		69:68:2140:2140	3992876	1					
ANR	3993241	IfStatement	if ( ! key )		3992876	0					
ANR	3993242	Condition	! key	1005:6:29619:29622	3992876	0	True				
ANR	3993243	UnaryOperationExpression	! key		3992876	0					
ANR	3993244	UnaryOperator	!		3992876	0					
ANR	3993245	Identifier	key		3992876	1					
ANR	3993246	CompoundStatement		70:12:2154:2154	3992876	1					
ANR	3993247	ExpressionStatement	zend_string_release ( lc_name )	1006:3:29630:29658	3992876	0	True				
ANR	3993248	CallExpression	zend_string_release ( lc_name )		3992876	0					
ANR	3993249	Callee	zend_string_release		3992876	0					
ANR	3993250	Identifier	zend_string_release		3992876	0					
ANR	3993251	ArgumentList	lc_name		3992876	1					
ANR	3993252	Argument	lc_name		3992876	0					
ANR	3993253	Identifier	lc_name		3992876	0					
ANR	3993254	ReturnStatement	return NULL ;	1008:2:29666:29677	3992876	1	True				
ANR	3993255	Identifier	NULL		3992876	0					
ANR	3993256	ExpressionStatement	ZVAL_UNDEF ( & local_retval )	1011:1:29684:29709	3992876	15	True				
ANR	3993257	CallExpression	ZVAL_UNDEF ( & local_retval )		3992876	0					
ANR	3993258	Callee	ZVAL_UNDEF		3992876	0					
ANR	3993259	Identifier	ZVAL_UNDEF		3992876	0					
ANR	3993260	ArgumentList	& local_retval		3992876	1					
ANR	3993261	Argument	& local_retval		3992876	0					
ANR	3993262	UnaryOperationExpression	& local_retval		3992876	0					
ANR	3993263	UnaryOperator	&		3992876	0					
ANR	3993264	Identifier	local_retval		3992876	1					
ANR	3993265	IfStatement	if ( ZSTR_VAL ( name ) [ 0 ] == '\\\\' )		3992876	16					
ANR	3993266	Condition	ZSTR_VAL ( name ) [ 0 ] == '\\\\'	1013:5:29717:29741	3992876	0	True				
ANR	3993267	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] == '\\\\'		3992876	0		==			
ANR	3993268	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		3992876	0					
ANR	3993269	CallExpression	ZSTR_VAL ( name )		3992876	0					
ANR	3993270	Callee	ZSTR_VAL		3992876	0					
ANR	3993271	Identifier	ZSTR_VAL		3992876	0					
ANR	3993272	ArgumentList	name		3992876	1					
ANR	3993273	Argument	name		3992876	0					
ANR	3993274	Identifier	name		3992876	0					
ANR	3993275	PrimaryExpression	0		3992876	1					
ANR	3993276	PrimaryExpression	'\\\\'		3992876	1					
ANR	3993277	CompoundStatement		78:32:2273:2273	3992876	1					
ANR	3993278	ExpressionStatement	"ZVAL_STRINGL ( & args [ 0 ] , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"	1014:2:29748:29810	3992876	0	True				
ANR	3993279	CallExpression	"ZVAL_STRINGL ( & args [ 0 ] , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"		3992876	0					
ANR	3993280	Callee	ZVAL_STRINGL		3992876	0					
ANR	3993281	Identifier	ZVAL_STRINGL		3992876	0					
ANR	3993282	ArgumentList	& args [ 0 ]		3992876	1					
ANR	3993283	Argument	& args [ 0 ]		3992876	0					
ANR	3993284	UnaryOperationExpression	& args [ 0 ]		3992876	0					
ANR	3993285	UnaryOperator	&		3992876	0					
ANR	3993286	ArrayIndexing	args [ 0 ]		3992876	1					
ANR	3993287	Identifier	args		3992876	0					
ANR	3993288	PrimaryExpression	0		3992876	1					
ANR	3993289	Argument	ZSTR_VAL ( name ) + 1		3992876	1					
ANR	3993290	AdditiveExpression	ZSTR_VAL ( name ) + 1		3992876	0		+			
ANR	3993291	CallExpression	ZSTR_VAL ( name )		3992876	0					
ANR	3993292	Callee	ZSTR_VAL		3992876	0					
ANR	3993293	Identifier	ZSTR_VAL		3992876	0					
ANR	3993294	ArgumentList	name		3992876	1					
ANR	3993295	Argument	name		3992876	0					
ANR	3993296	Identifier	name		3992876	0					
ANR	3993297	PrimaryExpression	1		3992876	1					
ANR	3993298	Argument	ZSTR_LEN ( name ) - 1		3992876	2					
ANR	3993299	AdditiveExpression	ZSTR_LEN ( name ) - 1		3992876	0		-			
ANR	3993300	CallExpression	ZSTR_LEN ( name )		3992876	0					
ANR	3993301	Callee	ZSTR_LEN		3992876	0					
ANR	3993302	Identifier	ZSTR_LEN		3992876	0					
ANR	3993303	ArgumentList	name		3992876	1					
ANR	3993304	Argument	name		3992876	0					
ANR	3993305	Identifier	name		3992876	0					
ANR	3993306	PrimaryExpression	1		3992876	1					
ANR	3993307	ElseStatement	else		3992876	0					
ANR	3993308	CompoundStatement		80:8:2349:2349	3992876	0					
ANR	3993309	ExpressionStatement	"ZVAL_STR_COPY ( & args [ 0 ] , name )"	1016:2:29824:29853	3992876	0	True				
ANR	3993310	CallExpression	"ZVAL_STR_COPY ( & args [ 0 ] , name )"		3992876	0					
ANR	3993311	Callee	ZVAL_STR_COPY		3992876	0					
ANR	3993312	Identifier	ZVAL_STR_COPY		3992876	0					
ANR	3993313	ArgumentList	& args [ 0 ]		3992876	1					
ANR	3993314	Argument	& args [ 0 ]		3992876	0					
ANR	3993315	UnaryOperationExpression	& args [ 0 ]		3992876	0					
ANR	3993316	UnaryOperator	&		3992876	0					
ANR	3993317	ArrayIndexing	args [ 0 ]		3992876	1					
ANR	3993318	Identifier	args		3992876	0					
ANR	3993319	PrimaryExpression	0		3992876	1					
ANR	3993320	Argument	name		3992876	1					
ANR	3993321	Identifier	name		3992876	0					
ANR	3993322	ExpressionStatement	fcall_info . size = sizeof ( fcall_info )	1019:1:29860:29896	3992876	17	True				
ANR	3993323	AssignmentExpression	fcall_info . size = sizeof ( fcall_info )		3992876	0		=			
ANR	3993324	MemberAccess	fcall_info . size		3992876	0					
ANR	3993325	Identifier	fcall_info		3992876	0					
ANR	3993326	Identifier	size		3992876	1					
ANR	3993327	SizeofExpression	sizeof ( fcall_info )		3992876	1					
ANR	3993328	Sizeof	sizeof		3992876	0					
ANR	3993329	SizeofOperand	fcall_info		3992876	1					
ANR	3993330	ExpressionStatement	fcall_info . function_table = EG ( function_table )	1020:1:29899:29945	3992876	18	True				
ANR	3993331	AssignmentExpression	fcall_info . function_table = EG ( function_table )		3992876	0		=			
ANR	3993332	MemberAccess	fcall_info . function_table		3992876	0					
ANR	3993333	Identifier	fcall_info		3992876	0					
ANR	3993334	Identifier	function_table		3992876	1					
ANR	3993335	CallExpression	EG ( function_table )		3992876	1					
ANR	3993336	Callee	EG		3992876	0					
ANR	3993337	Identifier	EG		3992876	0					
ANR	3993338	ArgumentList	function_table		3992876	1					
ANR	3993339	Argument	function_table		3992876	0					
ANR	3993340	Identifier	function_table		3992876	0					
ANR	3993341	ExpressionStatement	"ZVAL_STR_COPY ( & fcall_info . function_name , EG ( autoload_func ) -> common . function_name )"	1021:1:29948:30029	3992876	19	True				
ANR	3993342	CallExpression	"ZVAL_STR_COPY ( & fcall_info . function_name , EG ( autoload_func ) -> common . function_name )"		3992876	0					
ANR	3993343	Callee	ZVAL_STR_COPY		3992876	0					
ANR	3993344	Identifier	ZVAL_STR_COPY		3992876	0					
ANR	3993345	ArgumentList	& fcall_info . function_name		3992876	1					
ANR	3993346	Argument	& fcall_info . function_name		3992876	0					
ANR	3993347	UnaryOperationExpression	& fcall_info . function_name		3992876	0					
ANR	3993348	UnaryOperator	&		3992876	0					
ANR	3993349	MemberAccess	fcall_info . function_name		3992876	1					
ANR	3993350	Identifier	fcall_info		3992876	0					
ANR	3993351	Identifier	function_name		3992876	1					
ANR	3993352	Argument	EG ( autoload_func ) -> common . function_name		3992876	1					
ANR	3993353	MemberAccess	EG ( autoload_func ) -> common . function_name		3992876	0					
ANR	3993354	PtrMemberAccess	EG ( autoload_func ) -> common		3992876	0					
ANR	3993355	CallExpression	EG ( autoload_func )		3992876	0					
ANR	3993356	Callee	EG		3992876	0					
ANR	3993357	Identifier	EG		3992876	0					
ANR	3993358	ArgumentList	autoload_func		3992876	1					
ANR	3993359	Argument	autoload_func		3992876	0					
ANR	3993360	Identifier	autoload_func		3992876	0					
ANR	3993361	Identifier	common		3992876	1					
ANR	3993362	Identifier	function_name		3992876	1					
ANR	3993363	ExpressionStatement	fcall_info . symbol_table = NULL	1022:1:30032:30062	3992876	20	True				
ANR	3993364	AssignmentExpression	fcall_info . symbol_table = NULL		3992876	0		=			
ANR	3993365	MemberAccess	fcall_info . symbol_table		3992876	0					
ANR	3993366	Identifier	fcall_info		3992876	0					
ANR	3993367	Identifier	symbol_table		3992876	1					
ANR	3993368	Identifier	NULL		3992876	1					
ANR	3993369	ExpressionStatement	fcall_info . retval = & local_retval	1023:1:30065:30098	3992876	21	True				
ANR	3993370	AssignmentExpression	fcall_info . retval = & local_retval		3992876	0		=			
ANR	3993371	MemberAccess	fcall_info . retval		3992876	0					
ANR	3993372	Identifier	fcall_info		3992876	0					
ANR	3993373	Identifier	retval		3992876	1					
ANR	3993374	UnaryOperationExpression	& local_retval		3992876	1					
ANR	3993375	UnaryOperator	&		3992876	0					
ANR	3993376	Identifier	local_retval		3992876	1					
ANR	3993377	ExpressionStatement	fcall_info . param_count = 1	1024:1:30101:30127	3992876	22	True				
ANR	3993378	AssignmentExpression	fcall_info . param_count = 1		3992876	0		=			
ANR	3993379	MemberAccess	fcall_info . param_count		3992876	0					
ANR	3993380	Identifier	fcall_info		3992876	0					
ANR	3993381	Identifier	param_count		3992876	1					
ANR	3993382	PrimaryExpression	1		3992876	1					
ANR	3993383	ExpressionStatement	fcall_info . params = args	1025:1:30130:30154	3992876	23	True				
ANR	3993384	AssignmentExpression	fcall_info . params = args		3992876	0		=			
ANR	3993385	MemberAccess	fcall_info . params		3992876	0					
ANR	3993386	Identifier	fcall_info		3992876	0					
ANR	3993387	Identifier	params		3992876	1					
ANR	3993388	Identifier	args		3992876	1					
ANR	3993389	ExpressionStatement	fcall_info . object = NULL	1026:1:30157:30181	3992876	24	True				
ANR	3993390	AssignmentExpression	fcall_info . object = NULL		3992876	0		=			
ANR	3993391	MemberAccess	fcall_info . object		3992876	0					
ANR	3993392	Identifier	fcall_info		3992876	0					
ANR	3993393	Identifier	object		3992876	1					
ANR	3993394	Identifier	NULL		3992876	1					
ANR	3993395	ExpressionStatement	fcall_info . no_separation = 1	1027:1:30184:30212	3992876	25	True				
ANR	3993396	AssignmentExpression	fcall_info . no_separation = 1		3992876	0		=			
ANR	3993397	MemberAccess	fcall_info . no_separation		3992876	0					
ANR	3993398	Identifier	fcall_info		3992876	0					
ANR	3993399	Identifier	no_separation		3992876	1					
ANR	3993400	PrimaryExpression	1		3992876	1					
ANR	3993401	ExpressionStatement	fcall_cache . initialized = 1	1029:1:30216:30243	3992876	26	True				
ANR	3993402	AssignmentExpression	fcall_cache . initialized = 1		3992876	0		=			
ANR	3993403	MemberAccess	fcall_cache . initialized		3992876	0					
ANR	3993404	Identifier	fcall_cache		3992876	0					
ANR	3993405	Identifier	initialized		3992876	1					
ANR	3993406	PrimaryExpression	1		3992876	1					
ANR	3993407	ExpressionStatement	fcall_cache . function_handler = EG ( autoload_func )	1030:1:30246:30294	3992876	27	True				
ANR	3993408	AssignmentExpression	fcall_cache . function_handler = EG ( autoload_func )		3992876	0		=			
ANR	3993409	MemberAccess	fcall_cache . function_handler		3992876	0					
ANR	3993410	Identifier	fcall_cache		3992876	0					
ANR	3993411	Identifier	function_handler		3992876	1					
ANR	3993412	CallExpression	EG ( autoload_func )		3992876	1					
ANR	3993413	Callee	EG		3992876	0					
ANR	3993414	Identifier	EG		3992876	0					
ANR	3993415	ArgumentList	autoload_func		3992876	1					
ANR	3993416	Argument	autoload_func		3992876	0					
ANR	3993417	Identifier	autoload_func		3992876	0					
ANR	3993418	ExpressionStatement	fcall_cache . calling_scope = NULL	1031:1:30297:30329	3992876	28	True				
ANR	3993419	AssignmentExpression	fcall_cache . calling_scope = NULL		3992876	0		=			
ANR	3993420	MemberAccess	fcall_cache . calling_scope		3992876	0					
ANR	3993421	Identifier	fcall_cache		3992876	0					
ANR	3993422	Identifier	calling_scope		3992876	1					
ANR	3993423	Identifier	NULL		3992876	1					
ANR	3993424	ExpressionStatement	fcall_cache . called_scope = NULL	1032:1:30332:30363	3992876	29	True				
ANR	3993425	AssignmentExpression	fcall_cache . called_scope = NULL		3992876	0		=			
ANR	3993426	MemberAccess	fcall_cache . called_scope		3992876	0					
ANR	3993427	Identifier	fcall_cache		3992876	0					
ANR	3993428	Identifier	called_scope		3992876	1					
ANR	3993429	Identifier	NULL		3992876	1					
ANR	3993430	ExpressionStatement	fcall_cache . object = NULL	1033:1:30366:30391	3992876	30	True				
ANR	3993431	AssignmentExpression	fcall_cache . object = NULL		3992876	0		=			
ANR	3993432	MemberAccess	fcall_cache . object		3992876	0					
ANR	3993433	Identifier	fcall_cache		3992876	0					
ANR	3993434	Identifier	object		3992876	1					
ANR	3993435	Identifier	NULL		3992876	1					
ANR	3993436	ExpressionStatement	zend_exception_save ( )	1035:1:30395:30416	3992876	31	True				
ANR	3993437	CallExpression	zend_exception_save ( )		3992876	0					
ANR	3993438	Callee	zend_exception_save		3992876	0					
ANR	3993439	Identifier	zend_exception_save		3992876	0					
ANR	3993440	ArgumentList			3992876	1					
ANR	3993441	ExpressionStatement	"retval = zend_call_function ( & fcall_info , & fcall_cache )"	1036:1:30419:30473	3992876	32	True				
ANR	3993442	AssignmentExpression	"retval = zend_call_function ( & fcall_info , & fcall_cache )"		3992876	0		=			
ANR	3993443	Identifier	retval		3992876	0					
ANR	3993444	CallExpression	"zend_call_function ( & fcall_info , & fcall_cache )"		3992876	1					
ANR	3993445	Callee	zend_call_function		3992876	0					
ANR	3993446	Identifier	zend_call_function		3992876	0					
ANR	3993447	ArgumentList	& fcall_info		3992876	1					
ANR	3993448	Argument	& fcall_info		3992876	0					
ANR	3993449	UnaryOperationExpression	& fcall_info		3992876	0					
ANR	3993450	UnaryOperator	&		3992876	0					
ANR	3993451	Identifier	fcall_info		3992876	1					
ANR	3993452	Argument	& fcall_cache		3992876	1					
ANR	3993453	UnaryOperationExpression	& fcall_cache		3992876	0					
ANR	3993454	UnaryOperator	&		3992876	0					
ANR	3993455	Identifier	fcall_cache		3992876	1					
ANR	3993456	ExpressionStatement	zend_exception_restore ( )	1037:1:30476:30500	3992876	33	True				
ANR	3993457	CallExpression	zend_exception_restore ( )		3992876	0					
ANR	3993458	Callee	zend_exception_restore		3992876	0					
ANR	3993459	Identifier	zend_exception_restore		3992876	0					
ANR	3993460	ArgumentList			3992876	1					
ANR	3993461	ExpressionStatement	zval_ptr_dtor ( & args [ 0 ] )	1039:1:30504:30527	3992876	34	True				
ANR	3993462	CallExpression	zval_ptr_dtor ( & args [ 0 ] )		3992876	0					
ANR	3993463	Callee	zval_ptr_dtor		3992876	0					
ANR	3993464	Identifier	zval_ptr_dtor		3992876	0					
ANR	3993465	ArgumentList	& args [ 0 ]		3992876	1					
ANR	3993466	Argument	& args [ 0 ]		3992876	0					
ANR	3993467	UnaryOperationExpression	& args [ 0 ]		3992876	0					
ANR	3993468	UnaryOperator	&		3992876	0					
ANR	3993469	ArrayIndexing	args [ 0 ]		3992876	1					
ANR	3993470	Identifier	args		3992876	0					
ANR	3993471	PrimaryExpression	0		3992876	1					
ANR	3993472	ExpressionStatement	zval_dtor ( & fcall_info . function_name )	1040:1:30530:30566	3992876	35	True				
ANR	3993473	CallExpression	zval_dtor ( & fcall_info . function_name )		3992876	0					
ANR	3993474	Callee	zval_dtor		3992876	0					
ANR	3993475	Identifier	zval_dtor		3992876	0					
ANR	3993476	ArgumentList	& fcall_info . function_name		3992876	1					
ANR	3993477	Argument	& fcall_info . function_name		3992876	0					
ANR	3993478	UnaryOperationExpression	& fcall_info . function_name		3992876	0					
ANR	3993479	UnaryOperator	&		3992876	0					
ANR	3993480	MemberAccess	fcall_info . function_name		3992876	1					
ANR	3993481	Identifier	fcall_info		3992876	0					
ANR	3993482	Identifier	function_name		3992876	1					
ANR	3993483	ExpressionStatement	"zend_hash_del ( EG ( in_autoload ) , lc_name )"	1042:1:30570:30609	3992876	36	True				
ANR	3993484	CallExpression	"zend_hash_del ( EG ( in_autoload ) , lc_name )"		3992876	0					
ANR	3993485	Callee	zend_hash_del		3992876	0					
ANR	3993486	Identifier	zend_hash_del		3992876	0					
ANR	3993487	ArgumentList	EG ( in_autoload )		3992876	1					
ANR	3993488	Argument	EG ( in_autoload )		3992876	0					
ANR	3993489	CallExpression	EG ( in_autoload )		3992876	0					
ANR	3993490	Callee	EG		3992876	0					
ANR	3993491	Identifier	EG		3992876	0					
ANR	3993492	ArgumentList	in_autoload		3992876	1					
ANR	3993493	Argument	in_autoload		3992876	0					
ANR	3993494	Identifier	in_autoload		3992876	0					
ANR	3993495	Argument	lc_name		3992876	1					
ANR	3993496	Identifier	lc_name		3992876	0					
ANR	3993497	ExpressionStatement	zval_ptr_dtor ( & local_retval )	1044:1:30613:30641	3992876	37	True				
ANR	3993498	CallExpression	zval_ptr_dtor ( & local_retval )		3992876	0					
ANR	3993499	Callee	zval_ptr_dtor		3992876	0					
ANR	3993500	Identifier	zval_ptr_dtor		3992876	0					
ANR	3993501	ArgumentList	& local_retval		3992876	1					
ANR	3993502	Argument	& local_retval		3992876	0					
ANR	3993503	UnaryOperationExpression	& local_retval		3992876	0					
ANR	3993504	UnaryOperator	&		3992876	0					
ANR	3993505	Identifier	local_retval		3992876	1					
ANR	3993506	IfStatement	if ( retval == SUCCESS )		3992876	38					
ANR	3993507	Condition	retval == SUCCESS	1046:5:30649:30665	3992876	0	True				
ANR	3993508	EqualityExpression	retval == SUCCESS		3992876	0		==			
ANR	3993509	Identifier	retval		3992876	0					
ANR	3993510	Identifier	SUCCESS		3992876	1					
ANR	3993511	CompoundStatement		111:24:3197:3197	3992876	1					
ANR	3993512	ExpressionStatement	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"	1047:2:30672:30721	3992876	0	True				
ANR	3993513	AssignmentExpression	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		3992876	0		=			
ANR	3993514	Identifier	ce		3992876	0					
ANR	3993515	CallExpression	"zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		3992876	1					
ANR	3993516	Callee	zend_hash_find_ptr		3992876	0					
ANR	3993517	Identifier	zend_hash_find_ptr		3992876	0					
ANR	3993518	ArgumentList	EG ( class_table )		3992876	1					
ANR	3993519	Argument	EG ( class_table )		3992876	0					
ANR	3993520	CallExpression	EG ( class_table )		3992876	0					
ANR	3993521	Callee	EG		3992876	0					
ANR	3993522	Identifier	EG		3992876	0					
ANR	3993523	ArgumentList	class_table		3992876	1					
ANR	3993524	Argument	class_table		3992876	0					
ANR	3993525	Identifier	class_table		3992876	0					
ANR	3993526	Argument	lc_name		3992876	1					
ANR	3993527	Identifier	lc_name		3992876	0					
ANR	3993528	IfStatement	if ( ! key )		3992876	39					
ANR	3993529	Condition	! key	1049:5:30731:30734	3992876	0	True				
ANR	3993530	UnaryOperationExpression	! key		3992876	0					
ANR	3993531	UnaryOperator	!		3992876	0					
ANR	3993532	Identifier	key		3992876	1					
ANR	3993533	CompoundStatement		114:11:3266:3266	3992876	1					
ANR	3993534	ExpressionStatement	zend_string_release ( lc_name )	1050:2:30741:30769	3992876	0	True				
ANR	3993535	CallExpression	zend_string_release ( lc_name )		3992876	0					
ANR	3993536	Callee	zend_string_release		3992876	0					
ANR	3993537	Identifier	zend_string_release		3992876	0					
ANR	3993538	ArgumentList	lc_name		3992876	1					
ANR	3993539	Argument	lc_name		3992876	0					
ANR	3993540	Identifier	lc_name		3992876	0					
ANR	3993541	ReturnStatement	return ce ;	1052:1:30775:30784	3992876	40	True				
ANR	3993542	Identifier	ce		3992876	0					
ANR	3993543	ReturnType	ZEND_API zend_class_entry *		3992876	1					
ANR	3993544	Identifier	zend_lookup_class_ex		3992876	2					
ANR	3993545	ParameterList	"zend_string * name , const zval * key , int use_autoload"		3992876	3					
ANR	3993546	Parameter	zend_string * name	935:48:27406:27422	3992876	0	True				
ANR	3993547	ParameterType	zend_string *		3992876	0					
ANR	3993548	Identifier	name		3992876	1					
ANR	3993549	Parameter	const zval * key	935:67:27425:27439	3992876	1	True				
ANR	3993550	ParameterType	const zval *		3992876	0					
ANR	3993551	Identifier	key		3992876	1					
ANR	3993552	Parameter	int use_autoload	935:84:27442:27457	3992876	2	True				
ANR	3993553	ParameterType	int		3992876	0					
ANR	3993554	Identifier	use_autoload		3992876	1					
ANR	3993555	CFGEntryNode	ENTRY		3992876		True				
ANR	3993556	CFGExitNode	EXIT		3992876		True				
ANR	3993557	Symbol	fcall_info . object		3992876						
ANR	3993558	Symbol	fcall_info . no_separation		3992876						
ANR	3993559	Symbol	zend_string_tolower		3992876						
ANR	3993560	Symbol	fcall_cache . initialized		3992876						
ANR	3993561	Symbol	zend_hash_add_empty_element		3992876						
ANR	3993562	Symbol	fcall_cache		3992876						
ANR	3993563	Symbol	& local_retval		3992876						
ANR	3993564	Symbol	local_retval		3992876						
ANR	3993565	Symbol	zend_call_function		3992876						
ANR	3993566	Symbol	zend_hash_find_ptr		3992876						
ANR	3993567	Symbol	* ZSTR_VAL		3992876						
ANR	3993568	Symbol	zend_string_alloc		3992876						
ANR	3993569	Symbol	EG		3992876						
ANR	3993570	Symbol	NULL		3992876						
ANR	3993571	Symbol	zend_is_compiling		3992876						
ANR	3993572	Symbol	fcall_cache . calling_scope		3992876						
ANR	3993573	Symbol	EG ( autoload_func ) -> common . function_name		3992876						
ANR	3993574	Symbol	lc_name		3992876						
ANR	3993575	Symbol	fcall_info		3992876						
ANR	3993576	Symbol	retval		3992876						
ANR	3993577	Symbol	autoload_func		3992876						
ANR	3993578	Symbol	strspn		3992876						
ANR	3993579	Symbol	& fcall_cache		3992876						
ANR	3993580	Symbol	name		3992876						
ANR	3993581	Symbol	Z_STR_P		3992876						
ANR	3993582	Symbol	fcall_cache . object		3992876						
ANR	3993583	Symbol	function_table		3992876						
ANR	3993584	Symbol	fcall_info . params		3992876						
ANR	3993585	Symbol	fcall_info . retval		3992876						
ANR	3993586	Symbol	& fcall_info . function_name		3992876						
ANR	3993587	Symbol	fcall_info . symbol_table		3992876						
ANR	3993588	Symbol	* EG		3992876						
ANR	3993589	Symbol	fcall_info . param_count		3992876						
ANR	3993590	Symbol	zend_hash_str_find_ptr		3992876						
ANR	3993591	Symbol	use_autoload		3992876						
ANR	3993592	Symbol	& fcall_info		3992876						
ANR	3993593	Symbol	class_table		3992876						
ANR	3993594	Symbol	ZEND_AUTOLOAD_FUNC_NAME		3992876						
ANR	3993595	Symbol	key		3992876						
ANR	3993596	Symbol	fcall_cache . function_handler		3992876						
ANR	3993597	Symbol	ce		3992876						
ANR	3993598	Symbol	in_autoload		3992876						
ANR	3993599	Symbol	SUCCESS		3992876						
ANR	3993600	Symbol	fcall_info . size		3992876						
ANR	3993601	Symbol	fcall_cache . called_scope		3992876						
ANR	3993602	Symbol	ZSTR_VAL		3992876						
ANR	3993603	Symbol	fcall_info . function_table		3992876						
ANR	3993604	Symbol	args		3992876						
ANR	3993605	Symbol	func		3992876						
ANR	3993606	Symbol	ZSTR_LEN		3992876						
ANR	3993607	Symbol	EG ( autoload_func ) -> common		3992876						
ANR	3993608	Function	zend_lookup_class	1056:0:30799:30920							
ANR	3993609	FunctionDef	zend_lookup_class (zend_string * name)		3993608	0					
ANR	3993610	CompoundStatement		1057:0:30873:30920	3993608	0					
ANR	3993611	ReturnStatement	"return zend_lookup_class_ex ( name , NULL , 1 ) ;"	1058:1:30876:30918	3993608	0	True				
ANR	3993612	CallExpression	"zend_lookup_class_ex ( name , NULL , 1 )"		3993608	0					
ANR	3993613	Callee	zend_lookup_class_ex		3993608	0					
ANR	3993614	Identifier	zend_lookup_class_ex		3993608	0					
ANR	3993615	ArgumentList	name		3993608	1					
ANR	3993616	Argument	name		3993608	0					
ANR	3993617	Identifier	name		3993608	0					
ANR	3993618	Argument	NULL		3993608	1					
ANR	3993619	Identifier	NULL		3993608	0					
ANR	3993620	Argument	1		3993608	2					
ANR	3993621	PrimaryExpression	1		3993608	0					
ANR	3993622	ReturnType	ZEND_API zend_class_entry *		3993608	1					
ANR	3993623	Identifier	zend_lookup_class		3993608	2					
ANR	3993624	ParameterList	zend_string * name		3993608	3					
ANR	3993625	Parameter	zend_string * name	1056:45:30844:30860	3993608	0	True				
ANR	3993626	ParameterType	zend_string *		3993608	0					
ANR	3993627	Identifier	name		3993608	1					
ANR	3993628	CFGEntryNode	ENTRY		3993608		True				
ANR	3993629	CFGExitNode	EXIT		3993608		True				
ANR	3993630	Symbol	zend_lookup_class_ex		3993608						
ANR	3993631	Symbol	NULL		3993608						
ANR	3993632	Symbol	name		3993608						
ANR	3993633	Function	zend_get_called_scope	1062:0:30933:31272							
ANR	3993634	FunctionDef	zend_get_called_scope (zend_execute_data * ex)		3993633	0					
ANR	3993635	CompoundStatement		1063:0:31015:31272	3993633	0					
ANR	3993636	WhileStatement	while ( ex )		3993633	0					
ANR	3993637	Condition	ex	1064:8:31025:31026	3993633	0	True				
ANR	3993638	Identifier	ex		3993633	0					
ANR	3993639	CompoundStatement		2:12:13:13	3993633	1					
ANR	3993640	IfStatement	if ( ex -> called_scope )		3993633	0					
ANR	3993641	Condition	ex -> called_scope	1065:6:31037:31052	3993633	0	True				
ANR	3993642	PtrMemberAccess	ex -> called_scope		3993633	0					
ANR	3993643	Identifier	ex		3993633	0					
ANR	3993644	Identifier	called_scope		3993633	1					
ANR	3993645	CompoundStatement		3:24:39:39	3993633	1					
ANR	3993646	ReturnStatement	return ex -> called_scope ;	1066:3:31060:31083	3993633	0	True				
ANR	3993647	PtrMemberAccess	ex -> called_scope		3993633	0					
ANR	3993648	Identifier	ex		3993633	0					
ANR	3993649	Identifier	called_scope		3993633	1					
ANR	3993650	ElseStatement	else		3993633	0					
ANR	3993651	IfStatement	if ( ex -> func )		3993633	0					
ANR	3993652	Condition	ex -> func	1067:13:31098:31105	3993633	0	True				
ANR	3993653	PtrMemberAccess	ex -> func		3993633	0					
ANR	3993654	Identifier	ex		3993633	0					
ANR	3993655	Identifier	func		3993633	1					
ANR	3993656	CompoundStatement		5:23:92:92	3993633	1					
ANR	3993657	IfStatement	if ( ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope )		3993633	0					
ANR	3993658	Condition	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope	1068:7:31117:31182	3993633	0	True				
ANR	3993659	OrExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope		3993633	0		||			
ANR	3993660	EqualityExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION		3993633	0		!=			
ANR	3993661	PtrMemberAccess	ex -> func -> type		3993633	0					
ANR	3993662	PtrMemberAccess	ex -> func		3993633	0					
ANR	3993663	Identifier	ex		3993633	0					
ANR	3993664	Identifier	func		3993633	1					
ANR	3993665	Identifier	type		3993633	1					
ANR	3993666	Identifier	ZEND_INTERNAL_FUNCTION		3993633	1					
ANR	3993667	MemberAccess	ex -> func -> common . scope		3993633	1					
ANR	3993668	PtrMemberAccess	ex -> func -> common		3993633	0					
ANR	3993669	PtrMemberAccess	ex -> func		3993633	0					
ANR	3993670	Identifier	ex		3993633	0					
ANR	3993671	Identifier	func		3993633	1					
ANR	3993672	Identifier	common		3993633	1					
ANR	3993673	Identifier	scope		3993633	1					
ANR	3993674	CompoundStatement		6:75:169:169	3993633	1					
ANR	3993675	ReturnStatement	return ex -> called_scope ;	1069:4:31191:31214	3993633	0	True				
ANR	3993676	PtrMemberAccess	ex -> called_scope		3993633	0					
ANR	3993677	Identifier	ex		3993633	0					
ANR	3993678	Identifier	called_scope		3993633	1					
ANR	3993679	ExpressionStatement	ex = ex -> prev_execute_data	1072:2:31227:31253	3993633	1	True				
ANR	3993680	AssignmentExpression	ex = ex -> prev_execute_data		3993633	0		=			
ANR	3993681	Identifier	ex		3993633	0					
ANR	3993682	PtrMemberAccess	ex -> prev_execute_data		3993633	1					
ANR	3993683	Identifier	ex		3993633	0					
ANR	3993684	Identifier	prev_execute_data		3993633	1					
ANR	3993685	ReturnStatement	return NULL ;	1074:1:31259:31270	3993633	1	True				
ANR	3993686	Identifier	NULL		3993633	0					
ANR	3993687	ReturnType	ZEND_API zend_class_entry *		3993633	1					
ANR	3993688	Identifier	zend_get_called_scope		3993633	2					
ANR	3993689	ParameterList	zend_execute_data * ex		3993633	3					
ANR	3993690	Parameter	zend_execute_data * ex	1062:49:30982:31002	3993633	0	True				
ANR	3993691	ParameterType	zend_execute_data *		3993633	0					
ANR	3993692	Identifier	ex		3993633	1					
ANR	3993693	CFGEntryNode	ENTRY		3993633		True				
ANR	3993694	CFGExitNode	EXIT		3993633		True				
ANR	3993695	Symbol	ZEND_INTERNAL_FUNCTION		3993633						
ANR	3993696	Symbol	ex		3993633						
ANR	3993697	Symbol	ex -> prev_execute_data		3993633						
ANR	3993698	Symbol	NULL		3993633						
ANR	3993699	Symbol	ex -> func -> type		3993633						
ANR	3993700	Symbol	ex -> func -> common . scope		3993633						
ANR	3993701	Symbol	* ex		3993633						
ANR	3993702	Symbol	ex -> called_scope		3993633						
ANR	3993703	Symbol	* ex -> func		3993633						
ANR	3993704	Symbol	ex -> func -> common		3993633						
ANR	3993705	Symbol	ex -> func		3993633						
ANR	3993706	Symbol	* * ex		3993633						
ANR	3993707	Function	zend_get_this_object	1078:0:31285:31615							
ANR	3993708	FunctionDef	zend_get_this_object (zend_execute_data * ex)		3993707	0					
ANR	3993709	CompoundStatement		1079:0:31361:31615	3993707	0					
ANR	3993710	WhileStatement	while ( ex )		3993707	0					
ANR	3993711	Condition	ex	1080:8:31371:31372	3993707	0	True				
ANR	3993712	Identifier	ex		3993707	0					
ANR	3993713	CompoundStatement		2:12:13:13	3993707	1					
ANR	3993714	IfStatement	if ( Z_OBJ ( ex -> This ) )		3993707	0					
ANR	3993715	Condition	Z_OBJ ( ex -> This )	1081:6:31383:31397	3993707	0	True				
ANR	3993716	CallExpression	Z_OBJ ( ex -> This )		3993707	0					
ANR	3993717	Callee	Z_OBJ		3993707	0					
ANR	3993718	Identifier	Z_OBJ		3993707	0					
ANR	3993719	ArgumentList	ex -> This		3993707	1					
ANR	3993720	Argument	ex -> This		3993707	0					
ANR	3993721	PtrMemberAccess	ex -> This		3993707	0					
ANR	3993722	Identifier	ex		3993707	0					
ANR	3993723	Identifier	This		3993707	1					
ANR	3993724	CompoundStatement		3:23:38:38	3993707	1					
ANR	3993725	ReturnStatement	return Z_OBJ ( ex -> This ) ;	1082:3:31405:31427	3993707	0	True				
ANR	3993726	CallExpression	Z_OBJ ( ex -> This )		3993707	0					
ANR	3993727	Callee	Z_OBJ		3993707	0					
ANR	3993728	Identifier	Z_OBJ		3993707	0					
ANR	3993729	ArgumentList	ex -> This		3993707	1					
ANR	3993730	Argument	ex -> This		3993707	0					
ANR	3993731	PtrMemberAccess	ex -> This		3993707	0					
ANR	3993732	Identifier	ex		3993707	0					
ANR	3993733	Identifier	This		3993707	1					
ANR	3993734	ElseStatement	else		3993707	0					
ANR	3993735	IfStatement	if ( ex -> func )		3993707	0					
ANR	3993736	Condition	ex -> func	1083:13:31442:31449	3993707	0	True				
ANR	3993737	PtrMemberAccess	ex -> func		3993707	0					
ANR	3993738	Identifier	ex		3993707	0					
ANR	3993739	Identifier	func		3993707	1					
ANR	3993740	CompoundStatement		5:23:90:90	3993707	1					
ANR	3993741	IfStatement	if ( ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope )		3993707	0					
ANR	3993742	Condition	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope	1084:7:31461:31526	3993707	0	True				
ANR	3993743	OrExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope		3993707	0		||			
ANR	3993744	EqualityExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION		3993707	0		!=			
ANR	3993745	PtrMemberAccess	ex -> func -> type		3993707	0					
ANR	3993746	PtrMemberAccess	ex -> func		3993707	0					
ANR	3993747	Identifier	ex		3993707	0					
ANR	3993748	Identifier	func		3993707	1					
ANR	3993749	Identifier	type		3993707	1					
ANR	3993750	Identifier	ZEND_INTERNAL_FUNCTION		3993707	1					
ANR	3993751	MemberAccess	ex -> func -> common . scope		3993707	1					
ANR	3993752	PtrMemberAccess	ex -> func -> common		3993707	0					
ANR	3993753	PtrMemberAccess	ex -> func		3993707	0					
ANR	3993754	Identifier	ex		3993707	0					
ANR	3993755	Identifier	func		3993707	1					
ANR	3993756	Identifier	common		3993707	1					
ANR	3993757	Identifier	scope		3993707	1					
ANR	3993758	CompoundStatement		6:75:167:167	3993707	1					
ANR	3993759	ReturnStatement	return Z_OBJ ( ex -> This ) ;	1085:4:31535:31557	3993707	0	True				
ANR	3993760	CallExpression	Z_OBJ ( ex -> This )		3993707	0					
ANR	3993761	Callee	Z_OBJ		3993707	0					
ANR	3993762	Identifier	Z_OBJ		3993707	0					
ANR	3993763	ArgumentList	ex -> This		3993707	1					
ANR	3993764	Argument	ex -> This		3993707	0					
ANR	3993765	PtrMemberAccess	ex -> This		3993707	0					
ANR	3993766	Identifier	ex		3993707	0					
ANR	3993767	Identifier	This		3993707	1					
ANR	3993768	ExpressionStatement	ex = ex -> prev_execute_data	1088:2:31570:31596	3993707	1	True				
ANR	3993769	AssignmentExpression	ex = ex -> prev_execute_data		3993707	0		=			
ANR	3993770	Identifier	ex		3993707	0					
ANR	3993771	PtrMemberAccess	ex -> prev_execute_data		3993707	1					
ANR	3993772	Identifier	ex		3993707	0					
ANR	3993773	Identifier	prev_execute_data		3993707	1					
ANR	3993774	ReturnStatement	return NULL ;	1090:1:31602:31613	3993707	1	True				
ANR	3993775	Identifier	NULL		3993707	0					
ANR	3993776	ReturnType	ZEND_API zend_object *		3993707	1					
ANR	3993777	Identifier	zend_get_this_object		3993707	2					
ANR	3993778	ParameterList	zend_execute_data * ex		3993707	3					
ANR	3993779	Parameter	zend_execute_data * ex	1078:43:31328:31348	3993707	0	True				
ANR	3993780	ParameterType	zend_execute_data *		3993707	0					
ANR	3993781	Identifier	ex		3993707	1					
ANR	3993782	CFGEntryNode	ENTRY		3993707		True				
ANR	3993783	CFGExitNode	EXIT		3993707		True				
ANR	3993784	Symbol	ex -> This		3993707						
ANR	3993785	Symbol	ex -> prev_execute_data		3993707						
ANR	3993786	Symbol	NULL		3993707						
ANR	3993787	Symbol	ex -> func -> type		3993707						
ANR	3993788	Symbol	ex -> func -> common . scope		3993707						
ANR	3993789	Symbol	ex -> func		3993707						
ANR	3993790	Symbol	ZEND_INTERNAL_FUNCTION		3993707						
ANR	3993791	Symbol	Z_OBJ		3993707						
ANR	3993792	Symbol	ex		3993707						
ANR	3993793	Symbol	* ex		3993707						
ANR	3993794	Symbol	* ex -> func		3993707						
ANR	3993795	Symbol	ex -> func -> common		3993707						
ANR	3993796	Symbol	* * ex		3993707						
ANR	3993797	Function	zend_eval_stringl	1094:0:31628:33157							
ANR	3993798	FunctionDef	"zend_eval_stringl (char * str , size_t str_len , zval * retval_ptr , char * string_name)"		3993797	0					
ANR	3993799	CompoundStatement		1095:0:31733:33157	3993797	0					
ANR	3993800	IdentifierDeclStatement	zval pv ;	1096:1:31736:31743	3993797	0	True				
ANR	3993801	IdentifierDecl	pv		3993797	0					
ANR	3993802	IdentifierDeclType	zval		3993797	0					
ANR	3993803	Identifier	pv		3993797	1					
ANR	3993804	IdentifierDeclStatement	zend_op_array * new_op_array ;	1097:1:31746:31773	3993797	1	True				
ANR	3993805	IdentifierDecl	* new_op_array		3993797	0					
ANR	3993806	IdentifierDeclType	zend_op_array *		3993797	0					
ANR	3993807	Identifier	new_op_array		3993797	1					
ANR	3993808	IdentifierDeclStatement	uint32_t original_compiler_options ;	1098:1:31776:31810	3993797	2	True				
ANR	3993809	IdentifierDecl	original_compiler_options		3993797	0					
ANR	3993810	IdentifierDeclType	uint32_t		3993797	0					
ANR	3993811	Identifier	original_compiler_options		3993797	1					
ANR	3993812	IdentifierDeclStatement	int retval ;	1099:1:31813:31823	3993797	3	True				
ANR	3993813	IdentifierDecl	retval		3993797	0					
ANR	3993814	IdentifierDeclType	int		3993797	0					
ANR	3993815	Identifier	retval		3993797	1					
ANR	3993816	IfStatement	if ( retval_ptr )		3993797	4					
ANR	3993817	Condition	retval_ptr	1101:5:31831:31840	3993797	0	True				
ANR	3993818	Identifier	retval_ptr		3993797	0					
ANR	3993819	CompoundStatement		7:17:109:109	3993797	1					
ANR	3993820	ExpressionStatement	"ZVAL_NEW_STR ( & pv , zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 ) )"	1102:2:31847:31918	3993797	0	True				
ANR	3993821	CallExpression	"ZVAL_NEW_STR ( & pv , zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 ) )"		3993797	0					
ANR	3993822	Callee	ZVAL_NEW_STR		3993797	0					
ANR	3993823	Identifier	ZVAL_NEW_STR		3993797	0					
ANR	3993824	ArgumentList	& pv		3993797	1					
ANR	3993825	Argument	& pv		3993797	0					
ANR	3993826	UnaryOperationExpression	& pv		3993797	0					
ANR	3993827	UnaryOperator	&		3993797	0					
ANR	3993828	Identifier	pv		3993797	1					
ANR	3993829	Argument	"zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 )"		3993797	1					
ANR	3993830	CallExpression	"zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 )"		3993797	0					
ANR	3993831	Callee	zend_string_alloc		3993797	0					
ANR	3993832	Identifier	zend_string_alloc		3993797	0					
ANR	3993833	ArgumentList	"str_len + sizeof ( ""return ;"" ) - 1"		3993797	1					
ANR	3993834	Argument	"str_len + sizeof ( ""return ;"" ) - 1"		3993797	0					
ANR	3993835	AdditiveExpression	"str_len + sizeof ( ""return ;"" ) - 1"		3993797	0		+			
ANR	3993836	Identifier	str_len		3993797	0					
ANR	3993837	AdditiveExpression	"sizeof ( ""return ;"" ) - 1"		3993797	1		-			
ANR	3993838	SizeofExpression	"sizeof ( ""return ;"" )"		3993797	0					
ANR	3993839	Sizeof	sizeof		3993797	0					
ANR	3993840	PrimaryExpression	"""return ;"""		3993797	1					
ANR	3993841	PrimaryExpression	1		3993797	1					
ANR	3993842	Argument	1		3993797	1					
ANR	3993843	PrimaryExpression	1		3993797	0					
ANR	3993844	ExpressionStatement	"memcpy ( Z_STRVAL ( pv ) , ""return "" , sizeof ( ""return "" ) - 1 )"	1103:2:31922:31976	3993797	1	True				
ANR	3993845	CallExpression	"memcpy ( Z_STRVAL ( pv ) , ""return "" , sizeof ( ""return "" ) - 1 )"		3993797	0					
ANR	3993846	Callee	memcpy		3993797	0					
ANR	3993847	Identifier	memcpy		3993797	0					
ANR	3993848	ArgumentList	Z_STRVAL ( pv )		3993797	1					
ANR	3993849	Argument	Z_STRVAL ( pv )		3993797	0					
ANR	3993850	CallExpression	Z_STRVAL ( pv )		3993797	0					
ANR	3993851	Callee	Z_STRVAL		3993797	0					
ANR	3993852	Identifier	Z_STRVAL		3993797	0					
ANR	3993853	ArgumentList	pv		3993797	1					
ANR	3993854	Argument	pv		3993797	0					
ANR	3993855	Identifier	pv		3993797	0					
ANR	3993856	Argument	"""return """		3993797	1					
ANR	3993857	PrimaryExpression	"""return """		3993797	0					
ANR	3993858	Argument	"sizeof ( ""return "" ) - 1"		3993797	2					
ANR	3993859	AdditiveExpression	"sizeof ( ""return "" ) - 1"		3993797	0		-			
ANR	3993860	SizeofExpression	"sizeof ( ""return "" )"		3993797	0					
ANR	3993861	Sizeof	sizeof		3993797	0					
ANR	3993862	PrimaryExpression	"""return """		3993797	1					
ANR	3993863	PrimaryExpression	1		3993797	1					
ANR	3993864	ExpressionStatement	"memcpy ( Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1 , str , str_len )"	1104:2:31980:32038	3993797	2	True				
ANR	3993865	CallExpression	"memcpy ( Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1 , str , str_len )"		3993797	0					
ANR	3993866	Callee	memcpy		3993797	0					
ANR	3993867	Identifier	memcpy		3993797	0					
ANR	3993868	ArgumentList	"Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1"		3993797	1					
ANR	3993869	Argument	"Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1"		3993797	0					
ANR	3993870	AdditiveExpression	"Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1"		3993797	0		+			
ANR	3993871	CallExpression	Z_STRVAL ( pv )		3993797	0					
ANR	3993872	Callee	Z_STRVAL		3993797	0					
ANR	3993873	Identifier	Z_STRVAL		3993797	0					
ANR	3993874	ArgumentList	pv		3993797	1					
ANR	3993875	Argument	pv		3993797	0					
ANR	3993876	Identifier	pv		3993797	0					
ANR	3993877	AdditiveExpression	"sizeof ( ""return "" ) - 1"		3993797	1		-			
ANR	3993878	SizeofExpression	"sizeof ( ""return "" )"		3993797	0					
ANR	3993879	Sizeof	sizeof		3993797	0					
ANR	3993880	PrimaryExpression	"""return """		3993797	1					
ANR	3993881	PrimaryExpression	1		3993797	1					
ANR	3993882	Argument	str		3993797	1					
ANR	3993883	Identifier	str		3993797	0					
ANR	3993884	Argument	str_len		3993797	2					
ANR	3993885	Identifier	str_len		3993797	0					
ANR	3993886	ExpressionStatement	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) - 1 ] = ';'	1105:2:32042:32078	3993797	3	True				
ANR	3993887	AssignmentExpression	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) - 1 ] = ';'		3993797	0		=			
ANR	3993888	ArrayIndexing	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) - 1 ]		3993797	0					
ANR	3993889	CallExpression	Z_STRVAL ( pv )		3993797	0					
ANR	3993890	Callee	Z_STRVAL		3993797	0					
ANR	3993891	Identifier	Z_STRVAL		3993797	0					
ANR	3993892	ArgumentList	pv		3993797	1					
ANR	3993893	Argument	pv		3993797	0					
ANR	3993894	Identifier	pv		3993797	0					
ANR	3993895	AdditiveExpression	Z_STRLEN ( pv ) - 1		3993797	1		-			
ANR	3993896	CallExpression	Z_STRLEN ( pv )		3993797	0					
ANR	3993897	Callee	Z_STRLEN		3993797	0					
ANR	3993898	Identifier	Z_STRLEN		3993797	0					
ANR	3993899	ArgumentList	pv		3993797	1					
ANR	3993900	Argument	pv		3993797	0					
ANR	3993901	Identifier	pv		3993797	0					
ANR	3993902	PrimaryExpression	1		3993797	1					
ANR	3993903	PrimaryExpression	';'		3993797	1					
ANR	3993904	ExpressionStatement	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) ] = '\\0'	1106:2:32082:32115	3993797	4	True				
ANR	3993905	AssignmentExpression	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) ] = '\\0'		3993797	0		=			
ANR	3993906	ArrayIndexing	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) ]		3993797	0					
ANR	3993907	CallExpression	Z_STRVAL ( pv )		3993797	0					
ANR	3993908	Callee	Z_STRVAL		3993797	0					
ANR	3993909	Identifier	Z_STRVAL		3993797	0					
ANR	3993910	ArgumentList	pv		3993797	1					
ANR	3993911	Argument	pv		3993797	0					
ANR	3993912	Identifier	pv		3993797	0					
ANR	3993913	CallExpression	Z_STRLEN ( pv )		3993797	1					
ANR	3993914	Callee	Z_STRLEN		3993797	0					
ANR	3993915	Identifier	Z_STRLEN		3993797	0					
ANR	3993916	ArgumentList	pv		3993797	1					
ANR	3993917	Argument	pv		3993797	0					
ANR	3993918	Identifier	pv		3993797	0					
ANR	3993919	PrimaryExpression	'\\0'		3993797	1					
ANR	3993920	ElseStatement	else		3993797	0					
ANR	3993921	CompoundStatement		13:8:391:391	3993797	0					
ANR	3993922	ExpressionStatement	"ZVAL_STRINGL ( & pv , str , str_len )"	1108:2:32129:32160	3993797	0	True				
ANR	3993923	CallExpression	"ZVAL_STRINGL ( & pv , str , str_len )"		3993797	0					
ANR	3993924	Callee	ZVAL_STRINGL		3993797	0					
ANR	3993925	Identifier	ZVAL_STRINGL		3993797	0					
ANR	3993926	ArgumentList	& pv		3993797	1					
ANR	3993927	Argument	& pv		3993797	0					
ANR	3993928	UnaryOperationExpression	& pv		3993797	0					
ANR	3993929	UnaryOperator	&		3993797	0					
ANR	3993930	Identifier	pv		3993797	1					
ANR	3993931	Argument	str		3993797	1					
ANR	3993932	Identifier	str		3993797	0					
ANR	3993933	Argument	str_len		3993797	2					
ANR	3993934	Identifier	str_len		3993797	0					
ANR	3993935	ExpressionStatement	original_compiler_options = CG ( compiler_options )	1113:1:32220:32268	3993797	5	True				
ANR	3993936	AssignmentExpression	original_compiler_options = CG ( compiler_options )		3993797	0		=			
ANR	3993937	Identifier	original_compiler_options		3993797	0					
ANR	3993938	CallExpression	CG ( compiler_options )		3993797	1					
ANR	3993939	Callee	CG		3993797	0					
ANR	3993940	Identifier	CG		3993797	0					
ANR	3993941	ArgumentList	compiler_options		3993797	1					
ANR	3993942	Argument	compiler_options		3993797	0					
ANR	3993943	Identifier	compiler_options		3993797	0					
ANR	3993944	ExpressionStatement	CG ( compiler_options ) = ZEND_COMPILE_DEFAULT_FOR_EVAL	1114:1:32271:32323	3993797	6	True				
ANR	3993945	AssignmentExpression	CG ( compiler_options ) = ZEND_COMPILE_DEFAULT_FOR_EVAL		3993797	0		=			
ANR	3993946	CallExpression	CG ( compiler_options )		3993797	0					
ANR	3993947	Callee	CG		3993797	0					
ANR	3993948	Identifier	CG		3993797	0					
ANR	3993949	ArgumentList	compiler_options		3993797	1					
ANR	3993950	Argument	compiler_options		3993797	0					
ANR	3993951	Identifier	compiler_options		3993797	0					
ANR	3993952	Identifier	ZEND_COMPILE_DEFAULT_FOR_EVAL		3993797	1					
ANR	3993953	ExpressionStatement	"new_op_array = zend_compile_string ( & pv , string_name )"	1115:1:32326:32378	3993797	7	True				
ANR	3993954	AssignmentExpression	"new_op_array = zend_compile_string ( & pv , string_name )"		3993797	0		=			
ANR	3993955	Identifier	new_op_array		3993797	0					
ANR	3993956	CallExpression	"zend_compile_string ( & pv , string_name )"		3993797	1					
ANR	3993957	Callee	zend_compile_string		3993797	0					
ANR	3993958	Identifier	zend_compile_string		3993797	0					
ANR	3993959	ArgumentList	& pv		3993797	1					
ANR	3993960	Argument	& pv		3993797	0					
ANR	3993961	UnaryOperationExpression	& pv		3993797	0					
ANR	3993962	UnaryOperator	&		3993797	0					
ANR	3993963	Identifier	pv		3993797	1					
ANR	3993964	Argument	string_name		3993797	1					
ANR	3993965	Identifier	string_name		3993797	0					
ANR	3993966	ExpressionStatement	CG ( compiler_options ) = original_compiler_options	1116:1:32381:32429	3993797	8	True				
ANR	3993967	AssignmentExpression	CG ( compiler_options ) = original_compiler_options		3993797	0		=			
ANR	3993968	CallExpression	CG ( compiler_options )		3993797	0					
ANR	3993969	Callee	CG		3993797	0					
ANR	3993970	Identifier	CG		3993797	0					
ANR	3993971	ArgumentList	compiler_options		3993797	1					
ANR	3993972	Argument	compiler_options		3993797	0					
ANR	3993973	Identifier	compiler_options		3993797	0					
ANR	3993974	Identifier	original_compiler_options		3993797	1					
ANR	3993975	IfStatement	if ( new_op_array )		3993797	9					
ANR	3993976	Condition	new_op_array	1118:5:32437:32448	3993797	0	True				
ANR	3993977	Identifier	new_op_array		3993797	0					
ANR	3993978	CompoundStatement		25:2:721:738	3993797	1					
ANR	3993979	IdentifierDeclStatement	zval local_retval ;	1119:2:32455:32472	3993797	0	True				
ANR	3993980	IdentifierDecl	local_retval		3993797	0					
ANR	3993981	IdentifierDeclType	zval		3993797	0					
ANR	3993982	Identifier	local_retval		3993797	1					
ANR	3993983	ExpressionStatement	EG ( no_extensions ) = 1	1121:2:32477:32496	3993797	1	True				
ANR	3993984	AssignmentExpression	EG ( no_extensions ) = 1		3993797	0		=			
ANR	3993985	CallExpression	EG ( no_extensions )		3993797	0					
ANR	3993986	Callee	EG		3993797	0					
ANR	3993987	Identifier	EG		3993797	0					
ANR	3993988	ArgumentList	no_extensions		3993797	1					
ANR	3993989	Argument	no_extensions		3993797	0					
ANR	3993990	Identifier	no_extensions		3993797	0					
ANR	3993991	PrimaryExpression	1		3993797	1					
ANR	3993992	Statement	zend_try	1123:2:32501:32508	3993797	2	True				
ANR	3993993	CompoundStatement		29:11:776:776	3993797	3					
ANR	3993994	ExpressionStatement	ZVAL_UNDEF ( & local_retval )	1124:3:32515:32540	3993797	0	True				
ANR	3993995	CallExpression	ZVAL_UNDEF ( & local_retval )		3993797	0					
ANR	3993996	Callee	ZVAL_UNDEF		3993797	0					
ANR	3993997	Identifier	ZVAL_UNDEF		3993797	0					
ANR	3993998	ArgumentList	& local_retval		3993797	1					
ANR	3993999	Argument	& local_retval		3993797	0					
ANR	3994000	UnaryOperationExpression	& local_retval		3993797	0					
ANR	3994001	UnaryOperator	&		3993797	0					
ANR	3994002	Identifier	local_retval		3993797	1					
ANR	3994003	ExpressionStatement	"zend_execute ( new_op_array , & local_retval )"	1125:3:32545:32586	3993797	1	True				
ANR	3994004	CallExpression	"zend_execute ( new_op_array , & local_retval )"		3993797	0					
ANR	3994005	Callee	zend_execute		3993797	0					
ANR	3994006	Identifier	zend_execute		3993797	0					
ANR	3994007	ArgumentList	new_op_array		3993797	1					
ANR	3994008	Argument	new_op_array		3993797	0					
ANR	3994009	Identifier	new_op_array		3993797	0					
ANR	3994010	Argument	& local_retval		3993797	1					
ANR	3994011	UnaryOperationExpression	& local_retval		3993797	0					
ANR	3994012	UnaryOperator	&		3993797	0					
ANR	3994013	Identifier	local_retval		3993797	1					
ANR	3994014	Statement	zend_catch	1126:4:32592:32601	3993797	4	True				
ANR	3994015	CompoundStatement		32:15:869:869	3993797	5					
ANR	3994016	ExpressionStatement	destroy_op_array ( new_op_array )	1127:3:32608:32638	3993797	0	True				
ANR	3994017	CallExpression	destroy_op_array ( new_op_array )		3993797	0					
ANR	3994018	Callee	destroy_op_array		3993797	0					
ANR	3994019	Identifier	destroy_op_array		3993797	0					
ANR	3994020	ArgumentList	new_op_array		3993797	1					
ANR	3994021	Argument	new_op_array		3993797	0					
ANR	3994022	Identifier	new_op_array		3993797	0					
ANR	3994023	ExpressionStatement	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"	1128:3:32643:32690	3993797	1	True				
ANR	3994024	CallExpression	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"		3993797	0					
ANR	3994025	Callee	efree_size		3993797	0					
ANR	3994026	Identifier	efree_size		3993797	0					
ANR	3994027	ArgumentList	new_op_array		3993797	1					
ANR	3994028	Argument	new_op_array		3993797	0					
ANR	3994029	Identifier	new_op_array		3993797	0					
ANR	3994030	Argument	sizeof ( zend_op_array )		3993797	1					
ANR	3994031	SizeofExpression	sizeof ( zend_op_array )		3993797	0					
ANR	3994032	Sizeof	sizeof		3993797	0					
ANR	3994033	SizeofOperand	zend_op_array		3993797	1					
ANR	3994034	ExpressionStatement	zend_bailout ( )	1129:3:32695:32709	3993797	2	True				
ANR	3994035	CallExpression	zend_bailout ( )		3993797	0					
ANR	3994036	Callee	zend_bailout		3993797	0					
ANR	3994037	Identifier	zend_bailout		3993797	0					
ANR	3994038	ArgumentList			3993797	1					
ANR	3994039	ExpressionStatement	zend_end_try ( )	1130:4:32715:32729	3993797	6	True				
ANR	3994040	CallExpression	zend_end_try ( )		3993797	0					
ANR	3994041	Callee	zend_end_try		3993797	0					
ANR	3994042	Identifier	zend_end_try		3993797	0					
ANR	3994043	ArgumentList			3993797	1					
ANR	3994044	IfStatement	if ( Z_TYPE ( local_retval ) != IS_UNDEF )		3993797	7					
ANR	3994045	Condition	Z_TYPE ( local_retval ) != IS_UNDEF	1132:6:32738:32769	3993797	0	True				
ANR	3994046	EqualityExpression	Z_TYPE ( local_retval ) != IS_UNDEF		3993797	0		!=			
ANR	3994047	CallExpression	Z_TYPE ( local_retval )		3993797	0					
ANR	3994048	Callee	Z_TYPE		3993797	0					
ANR	3994049	Identifier	Z_TYPE		3993797	0					
ANR	3994050	ArgumentList	local_retval		3993797	1					
ANR	3994051	Argument	local_retval		3993797	0					
ANR	3994052	Identifier	local_retval		3993797	0					
ANR	3994053	Identifier	IS_UNDEF		3993797	1					
ANR	3994054	CompoundStatement		38:40:1038:1038	3993797	1					
ANR	3994055	IfStatement	if ( retval_ptr )		3993797	0					
ANR	3994056	Condition	retval_ptr	1133:7:32781:32790	3993797	0	True				
ANR	3994057	Identifier	retval_ptr		3993797	0					
ANR	3994058	CompoundStatement		39:19:1059:1059	3993797	1					
ANR	3994059	ExpressionStatement	"ZVAL_COPY_VALUE ( retval_ptr , & local_retval )"	1134:4:32799:32841	3993797	0	True				
ANR	3994060	CallExpression	"ZVAL_COPY_VALUE ( retval_ptr , & local_retval )"		3993797	0					
ANR	3994061	Callee	ZVAL_COPY_VALUE		3993797	0					
ANR	3994062	Identifier	ZVAL_COPY_VALUE		3993797	0					
ANR	3994063	ArgumentList	retval_ptr		3993797	1					
ANR	3994064	Argument	retval_ptr		3993797	0					
ANR	3994065	Identifier	retval_ptr		3993797	0					
ANR	3994066	Argument	& local_retval		3993797	1					
ANR	3994067	UnaryOperationExpression	& local_retval		3993797	0					
ANR	3994068	UnaryOperator	&		3993797	0					
ANR	3994069	Identifier	local_retval		3993797	1					
ANR	3994070	ElseStatement	else		3993797	0					
ANR	3994071	CompoundStatement		41:10:1119:1119	3993797	0					
ANR	3994072	ExpressionStatement	zval_ptr_dtor ( & local_retval )	1136:4:32859:32887	3993797	0	True				
ANR	3994073	CallExpression	zval_ptr_dtor ( & local_retval )		3993797	0					
ANR	3994074	Callee	zval_ptr_dtor		3993797	0					
ANR	3994075	Identifier	zval_ptr_dtor		3993797	0					
ANR	3994076	ArgumentList	& local_retval		3993797	1					
ANR	3994077	Argument	& local_retval		3993797	0					
ANR	3994078	UnaryOperationExpression	& local_retval		3993797	0					
ANR	3994079	UnaryOperator	&		3993797	0					
ANR	3994080	Identifier	local_retval		3993797	1					
ANR	3994081	ElseStatement	else		3993797	0					
ANR	3994082	CompoundStatement		44:9:1169:1169	3993797	0					
ANR	3994083	IfStatement	if ( retval_ptr )		3993797	0					
ANR	3994084	Condition	retval_ptr	1139:7:32912:32921	3993797	0	True				
ANR	3994085	Identifier	retval_ptr		3993797	0					
ANR	3994086	CompoundStatement		45:19:1190:1190	3993797	1					
ANR	3994087	ExpressionStatement	ZVAL_NULL ( retval_ptr )	1140:4:32930:32951	3993797	0	True				
ANR	3994088	CallExpression	ZVAL_NULL ( retval_ptr )		3993797	0					
ANR	3994089	Callee	ZVAL_NULL		3993797	0					
ANR	3994090	Identifier	ZVAL_NULL		3993797	0					
ANR	3994091	ArgumentList	retval_ptr		3993797	1					
ANR	3994092	Argument	retval_ptr		3993797	0					
ANR	3994093	Identifier	retval_ptr		3993797	0					
ANR	3994094	ExpressionStatement	EG ( no_extensions ) = 0	1144:2:32965:32984	3993797	8	True				
ANR	3994095	AssignmentExpression	EG ( no_extensions ) = 0		3993797	0		=			
ANR	3994096	CallExpression	EG ( no_extensions )		3993797	0					
ANR	3994097	Callee	EG		3993797	0					
ANR	3994098	Identifier	EG		3993797	0					
ANR	3994099	ArgumentList	no_extensions		3993797	1					
ANR	3994100	Argument	no_extensions		3993797	0					
ANR	3994101	Identifier	no_extensions		3993797	0					
ANR	3994102	PrimaryExpression	0		3993797	1					
ANR	3994103	ExpressionStatement	destroy_op_array ( new_op_array )	1145:2:32988:33018	3993797	9	True				
ANR	3994104	CallExpression	destroy_op_array ( new_op_array )		3993797	0					
ANR	3994105	Callee	destroy_op_array		3993797	0					
ANR	3994106	Identifier	destroy_op_array		3993797	0					
ANR	3994107	ArgumentList	new_op_array		3993797	1					
ANR	3994108	Argument	new_op_array		3993797	0					
ANR	3994109	Identifier	new_op_array		3993797	0					
ANR	3994110	ExpressionStatement	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"	1146:2:33022:33069	3993797	10	True				
ANR	3994111	CallExpression	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"		3993797	0					
ANR	3994112	Callee	efree_size		3993797	0					
ANR	3994113	Identifier	efree_size		3993797	0					
ANR	3994114	ArgumentList	new_op_array		3993797	1					
ANR	3994115	Argument	new_op_array		3993797	0					
ANR	3994116	Identifier	new_op_array		3993797	0					
ANR	3994117	Argument	sizeof ( zend_op_array )		3993797	1					
ANR	3994118	SizeofExpression	sizeof ( zend_op_array )		3993797	0					
ANR	3994119	Sizeof	sizeof		3993797	0					
ANR	3994120	SizeofOperand	zend_op_array		3993797	1					
ANR	3994121	ExpressionStatement	retval = SUCCESS	1147:2:33073:33089	3993797	11	True				
ANR	3994122	AssignmentExpression	retval = SUCCESS		3993797	0		=			
ANR	3994123	Identifier	retval		3993797	0					
ANR	3994124	Identifier	SUCCESS		3993797	1					
ANR	3994125	ElseStatement	else		3993797	0					
ANR	3994126	CompoundStatement		54:8:1365:1365	3993797	0					
ANR	3994127	ExpressionStatement	retval = FAILURE	1149:2:33103:33119	3993797	0	True				
ANR	3994128	AssignmentExpression	retval = FAILURE		3993797	0		=			
ANR	3994129	Identifier	retval		3993797	0					
ANR	3994130	Identifier	FAILURE		3993797	1					
ANR	3994131	ExpressionStatement	zval_dtor ( & pv )	1151:1:33125:33139	3993797	10	True				
ANR	3994132	CallExpression	zval_dtor ( & pv )		3993797	0					
ANR	3994133	Callee	zval_dtor		3993797	0					
ANR	3994134	Identifier	zval_dtor		3993797	0					
ANR	3994135	ArgumentList	& pv		3993797	1					
ANR	3994136	Argument	& pv		3993797	0					
ANR	3994137	UnaryOperationExpression	& pv		3993797	0					
ANR	3994138	UnaryOperator	&		3993797	0					
ANR	3994139	Identifier	pv		3993797	1					
ANR	3994140	ReturnStatement	return retval ;	1152:1:33142:33155	3993797	11	True				
ANR	3994141	Identifier	retval		3993797	0					
ANR	3994142	ReturnType	ZEND_API int		3993797	1					
ANR	3994143	Identifier	zend_eval_stringl		3993797	2					
ANR	3994144	ParameterList	"char * str , size_t str_len , zval * retval_ptr , char * string_name"		3993797	3					
ANR	3994145	Parameter	char * str	1094:31:31659:31667	3993797	0	True				
ANR	3994146	ParameterType	char *		3993797	0					
ANR	3994147	Identifier	str		3993797	1					
ANR	3994148	Parameter	size_t str_len	1094:42:31670:31683	3993797	1	True				
ANR	3994149	ParameterType	size_t		3993797	0					
ANR	3994150	Identifier	str_len		3993797	1					
ANR	3994151	Parameter	zval * retval_ptr	1094:58:31686:31701	3993797	2	True				
ANR	3994152	ParameterType	zval *		3993797	0					
ANR	3994153	Identifier	retval_ptr		3993797	1					
ANR	3994154	Parameter	char * string_name	1094:76:31704:31720	3993797	3	True				
ANR	3994155	ParameterType	char *		3993797	0					
ANR	3994156	Identifier	string_name		3993797	1					
ANR	3994157	CFGEntryNode	ENTRY		3993797		True				
ANR	3994158	CFGExitNode	EXIT		3993797		True				
ANR	3994159	Symbol	pv		3993797						
ANR	3994160	Symbol	Z_TYPE		3993797						
ANR	3994161	Symbol	no_extensions		3993797						
ANR	3994162	Symbol	Z_STRLEN		3993797						
ANR	3994163	Symbol	string_name		3993797						
ANR	3994164	Symbol	original_compiler_options		3993797						
ANR	3994165	Symbol	retval_ptr		3993797						
ANR	3994166	Symbol	& pv		3993797						
ANR	3994167	Symbol	compiler_options		3993797						
ANR	3994168	Symbol	str_len		3993797						
ANR	3994169	Symbol	Z_STRVAL		3993797						
ANR	3994170	Symbol	* Z_STRVAL		3993797						
ANR	3994171	Symbol	& local_retval		3993797						
ANR	3994172	Symbol	local_retval		3993797						
ANR	3994173	Symbol	IS_UNDEF		3993797						
ANR	3994174	Symbol	zend_string_alloc		3993797						
ANR	3994175	Symbol	EG		3993797						
ANR	3994176	Symbol	* Z_STRLEN		3993797						
ANR	3994177	Symbol	SUCCESS		3993797						
ANR	3994178	Symbol	CG		3993797						
ANR	3994179	Symbol	new_op_array		3993797						
ANR	3994180	Symbol	FAILURE		3993797						
ANR	3994181	Symbol	retval		3993797						
ANR	3994182	Symbol	str		3993797						
ANR	3994183	Symbol	ZEND_COMPILE_DEFAULT_FOR_EVAL		3993797						
ANR	3994184	Symbol	zend_compile_string		3993797						
ANR	3994185	Function	zend_eval_string	1156:0:33170:33330							
ANR	3994186	FunctionDef	"zend_eval_string (char * str , zval * retval_ptr , char * string_name)"		3994185	0					
ANR	3994187	CompoundStatement		1157:0:33258:33330	3994185	0					
ANR	3994188	ReturnStatement	"return zend_eval_stringl ( str , strlen ( str ) , retval_ptr , string_name ) ;"	1158:1:33261:33328	3994185	0	True				
ANR	3994189	CallExpression	"zend_eval_stringl ( str , strlen ( str ) , retval_ptr , string_name )"		3994185	0					
ANR	3994190	Callee	zend_eval_stringl		3994185	0					
ANR	3994191	Identifier	zend_eval_stringl		3994185	0					
ANR	3994192	ArgumentList	str		3994185	1					
ANR	3994193	Argument	str		3994185	0					
ANR	3994194	Identifier	str		3994185	0					
ANR	3994195	Argument	strlen ( str )		3994185	1					
ANR	3994196	CallExpression	strlen ( str )		3994185	0					
ANR	3994197	Callee	strlen		3994185	0					
ANR	3994198	Identifier	strlen		3994185	0					
ANR	3994199	ArgumentList	str		3994185	1					
ANR	3994200	Argument	str		3994185	0					
ANR	3994201	Identifier	str		3994185	0					
ANR	3994202	Argument	retval_ptr		3994185	2					
ANR	3994203	Identifier	retval_ptr		3994185	0					
ANR	3994204	Argument	string_name		3994185	3					
ANR	3994205	Identifier	string_name		3994185	0					
ANR	3994206	ReturnType	ZEND_API int		3994185	1					
ANR	3994207	Identifier	zend_eval_string		3994185	2					
ANR	3994208	ParameterList	"char * str , zval * retval_ptr , char * string_name"		3994185	3					
ANR	3994209	Parameter	char * str	1156:30:33200:33208	3994185	0	True				
ANR	3994210	ParameterType	char *		3994185	0					
ANR	3994211	Identifier	str		3994185	1					
ANR	3994212	Parameter	zval * retval_ptr	1156:41:33211:33226	3994185	1	True				
ANR	3994213	ParameterType	zval *		3994185	0					
ANR	3994214	Identifier	retval_ptr		3994185	1					
ANR	3994215	Parameter	char * string_name	1156:59:33229:33245	3994185	2	True				
ANR	3994216	ParameterType	char *		3994185	0					
ANR	3994217	Identifier	string_name		3994185	1					
ANR	3994218	CFGEntryNode	ENTRY		3994185		True				
ANR	3994219	CFGExitNode	EXIT		3994185		True				
ANR	3994220	Symbol	str		3994185						
ANR	3994221	Symbol	strlen		3994185						
ANR	3994222	Symbol	zend_eval_stringl		3994185						
ANR	3994223	Symbol	string_name		3994185						
ANR	3994224	Symbol	retval_ptr		3994185						
ANR	3994225	Function	zend_eval_stringl_ex	1162:0:33343:33688							
ANR	3994226	FunctionDef	"zend_eval_stringl_ex (char * str , size_t str_len , zval * retval_ptr , char * string_name , int handle_exceptions)"		3994225	0					
ANR	3994227	CompoundStatement		1163:0:33474:33688	3994225	0					
ANR	3994228	IdentifierDeclStatement	int result ;	1164:1:33477:33487	3994225	0	True				
ANR	3994229	IdentifierDecl	result		3994225	0					
ANR	3994230	IdentifierDeclType	int		3994225	0					
ANR	3994231	Identifier	result		3994225	1					
ANR	3994232	ExpressionStatement	"result = zend_eval_stringl ( str , str_len , retval_ptr , string_name )"	1166:1:33491:33556	3994225	1	True				
ANR	3994233	AssignmentExpression	"result = zend_eval_stringl ( str , str_len , retval_ptr , string_name )"		3994225	0		=			
ANR	3994234	Identifier	result		3994225	0					
ANR	3994235	CallExpression	"zend_eval_stringl ( str , str_len , retval_ptr , string_name )"		3994225	1					
ANR	3994236	Callee	zend_eval_stringl		3994225	0					
ANR	3994237	Identifier	zend_eval_stringl		3994225	0					
ANR	3994238	ArgumentList	str		3994225	1					
ANR	3994239	Argument	str		3994225	0					
ANR	3994240	Identifier	str		3994225	0					
ANR	3994241	Argument	str_len		3994225	1					
ANR	3994242	Identifier	str_len		3994225	0					
ANR	3994243	Argument	retval_ptr		3994225	2					
ANR	3994244	Identifier	retval_ptr		3994225	0					
ANR	3994245	Argument	string_name		3994225	3					
ANR	3994246	Identifier	string_name		3994225	0					
ANR	3994247	IfStatement	if ( handle_exceptions && EG ( exception ) )		3994225	2					
ANR	3994248	Condition	handle_exceptions && EG ( exception )	1167:5:33563:33596	3994225	0	True				
ANR	3994249	AndExpression	handle_exceptions && EG ( exception )		3994225	0		&&			
ANR	3994250	Identifier	handle_exceptions		3994225	0					
ANR	3994251	CallExpression	EG ( exception )		3994225	1					
ANR	3994252	Callee	EG		3994225	0					
ANR	3994253	Identifier	EG		3994225	0					
ANR	3994254	ArgumentList	exception		3994225	1					
ANR	3994255	Argument	exception		3994225	0					
ANR	3994256	Identifier	exception		3994225	0					
ANR	3994257	CompoundStatement		5:41:124:124	3994225	1					
ANR	3994258	ExpressionStatement	"zend_exception_error ( EG ( exception ) , E_ERROR )"	1168:2:33603:33647	3994225	0	True				
ANR	3994259	CallExpression	"zend_exception_error ( EG ( exception ) , E_ERROR )"		3994225	0					
ANR	3994260	Callee	zend_exception_error		3994225	0					
ANR	3994261	Identifier	zend_exception_error		3994225	0					
ANR	3994262	ArgumentList	EG ( exception )		3994225	1					
ANR	3994263	Argument	EG ( exception )		3994225	0					
ANR	3994264	CallExpression	EG ( exception )		3994225	0					
ANR	3994265	Callee	EG		3994225	0					
ANR	3994266	Identifier	EG		3994225	0					
ANR	3994267	ArgumentList	exception		3994225	1					
ANR	3994268	Argument	exception		3994225	0					
ANR	3994269	Identifier	exception		3994225	0					
ANR	3994270	Argument	E_ERROR		3994225	1					
ANR	3994271	Identifier	E_ERROR		3994225	0					
ANR	3994272	ExpressionStatement	result = FAILURE	1169:2:33651:33667	3994225	1	True				
ANR	3994273	AssignmentExpression	result = FAILURE		3994225	0		=			
ANR	3994274	Identifier	result		3994225	0					
ANR	3994275	Identifier	FAILURE		3994225	1					
ANR	3994276	ReturnStatement	return result ;	1171:1:33673:33686	3994225	3	True				
ANR	3994277	Identifier	result		3994225	0					
ANR	3994278	ReturnType	ZEND_API int		3994225	1					
ANR	3994279	Identifier	zend_eval_stringl_ex		3994225	2					
ANR	3994280	ParameterList	"char * str , size_t str_len , zval * retval_ptr , char * string_name , int handle_exceptions"		3994225	3					
ANR	3994281	Parameter	char * str	1162:34:33377:33385	3994225	0	True				
ANR	3994282	ParameterType	char *		3994225	0					
ANR	3994283	Identifier	str		3994225	1					
ANR	3994284	Parameter	size_t str_len	1162:45:33388:33401	3994225	1	True				
ANR	3994285	ParameterType	size_t		3994225	0					
ANR	3994286	Identifier	str_len		3994225	1					
ANR	3994287	Parameter	zval * retval_ptr	1162:61:33404:33419	3994225	2	True				
ANR	3994288	ParameterType	zval *		3994225	0					
ANR	3994289	Identifier	retval_ptr		3994225	1					
ANR	3994290	Parameter	char * string_name	1162:79:33422:33438	3994225	3	True				
ANR	3994291	ParameterType	char *		3994225	0					
ANR	3994292	Identifier	string_name		3994225	1					
ANR	3994293	Parameter	int handle_exceptions	1162:98:33441:33461	3994225	4	True				
ANR	3994294	ParameterType	int		3994225	0					
ANR	3994295	Identifier	handle_exceptions		3994225	1					
ANR	3994296	CFGEntryNode	ENTRY		3994225		True				
ANR	3994297	CFGExitNode	EXIT		3994225		True				
ANR	3994298	Symbol	str		3994225						
ANR	3994299	Symbol	result		3994225						
ANR	3994300	Symbol	exception		3994225						
ANR	3994301	Symbol	EG		3994225						
ANR	3994302	Symbol	E_ERROR		3994225						
ANR	3994303	Symbol	str_len		3994225						
ANR	3994304	Symbol	zend_eval_stringl		3994225						
ANR	3994305	Symbol	handle_exceptions		3994225						
ANR	3994306	Symbol	FAILURE		3994225						
ANR	3994307	Symbol	string_name		3994225						
ANR	3994308	Symbol	retval_ptr		3994225						
ANR	3994309	Function	zend_eval_string_ex	1175:0:33701:33909							
ANR	3994310	FunctionDef	"zend_eval_string_ex (char * str , zval * retval_ptr , char * string_name , int handle_exceptions)"		3994309	0					
ANR	3994311	CompoundStatement		1176:0:33815:33909	3994309	0					
ANR	3994312	ReturnStatement	"return zend_eval_stringl_ex ( str , strlen ( str ) , retval_ptr , string_name , handle_exceptions ) ;"	1177:1:33818:33907	3994309	0	True				
ANR	3994313	CallExpression	"zend_eval_stringl_ex ( str , strlen ( str ) , retval_ptr , string_name , handle_exceptions )"		3994309	0					
ANR	3994314	Callee	zend_eval_stringl_ex		3994309	0					
ANR	3994315	Identifier	zend_eval_stringl_ex		3994309	0					
ANR	3994316	ArgumentList	str		3994309	1					
ANR	3994317	Argument	str		3994309	0					
ANR	3994318	Identifier	str		3994309	0					
ANR	3994319	Argument	strlen ( str )		3994309	1					
ANR	3994320	CallExpression	strlen ( str )		3994309	0					
ANR	3994321	Callee	strlen		3994309	0					
ANR	3994322	Identifier	strlen		3994309	0					
ANR	3994323	ArgumentList	str		3994309	1					
ANR	3994324	Argument	str		3994309	0					
ANR	3994325	Identifier	str		3994309	0					
ANR	3994326	Argument	retval_ptr		3994309	2					
ANR	3994327	Identifier	retval_ptr		3994309	0					
ANR	3994328	Argument	string_name		3994309	3					
ANR	3994329	Identifier	string_name		3994309	0					
ANR	3994330	Argument	handle_exceptions		3994309	4					
ANR	3994331	Identifier	handle_exceptions		3994309	0					
ANR	3994332	ReturnType	ZEND_API int		3994309	1					
ANR	3994333	Identifier	zend_eval_string_ex		3994309	2					
ANR	3994334	ParameterList	"char * str , zval * retval_ptr , char * string_name , int handle_exceptions"		3994309	3					
ANR	3994335	Parameter	char * str	1175:33:33734:33742	3994309	0	True				
ANR	3994336	ParameterType	char *		3994309	0					
ANR	3994337	Identifier	str		3994309	1					
ANR	3994338	Parameter	zval * retval_ptr	1175:44:33745:33760	3994309	1	True				
ANR	3994339	ParameterType	zval *		3994309	0					
ANR	3994340	Identifier	retval_ptr		3994309	1					
ANR	3994341	Parameter	char * string_name	1175:62:33763:33779	3994309	2	True				
ANR	3994342	ParameterType	char *		3994309	0					
ANR	3994343	Identifier	string_name		3994309	1					
ANR	3994344	Parameter	int handle_exceptions	1175:81:33782:33802	3994309	3	True				
ANR	3994345	ParameterType	int		3994309	0					
ANR	3994346	Identifier	handle_exceptions		3994309	1					
ANR	3994347	CFGEntryNode	ENTRY		3994309		True				
ANR	3994348	CFGExitNode	EXIT		3994309		True				
ANR	3994349	Symbol	str		3994309						
ANR	3994350	Symbol	zend_eval_stringl_ex		3994309						
ANR	3994351	Symbol	strlen		3994309						
ANR	3994352	Symbol	handle_exceptions		3994309						
ANR	3994353	Symbol	string_name		3994309						
ANR	3994354	Symbol	retval_ptr		3994309						
ANR	3994355	Function	zend_timeout	1181:0:33922:34495							
ANR	3994356	FunctionDef	zend_timeout (int dummy)		3994355	0					
ANR	3994357	CompoundStatement		1182:0:33970:34495	3994355	0					
ANR	3994358	IfStatement	if ( zend_on_timeout )		3994355	0					
ANR	3994359	Condition	zend_on_timeout	1184:5:33978:33992	3994355	0	True				
ANR	3994360	Identifier	zend_on_timeout		3994355	0					
ANR	3994361	CompoundStatement		3:22:24:24	3994355	1					
ANR	3994362	ExpressionStatement	SIGG ( running ) = 0	1192:2:34285:34302	3994355	0	True				
ANR	3994363	AssignmentExpression	SIGG ( running ) = 0		3994355	0		=			
ANR	3994364	CallExpression	SIGG ( running )		3994355	0					
ANR	3994365	Callee	SIGG		3994355	0					
ANR	3994366	Identifier	SIGG		3994355	0					
ANR	3994367	ArgumentList	running		3994355	1					
ANR	3994368	Argument	running		3994355	0					
ANR	3994369	Identifier	running		3994355	0					
ANR	3994370	PrimaryExpression	0		3994355	1					
ANR	3994371	ExpressionStatement	zend_on_timeout ( EG ( timeout_seconds ) )	1194:2:34313:34349	3994355	1	True				
ANR	3994372	CallExpression	zend_on_timeout ( EG ( timeout_seconds ) )		3994355	0					
ANR	3994373	Callee	zend_on_timeout		3994355	0					
ANR	3994374	Identifier	zend_on_timeout		3994355	0					
ANR	3994375	ArgumentList	EG ( timeout_seconds )		3994355	1					
ANR	3994376	Argument	EG ( timeout_seconds )		3994355	0					
ANR	3994377	CallExpression	EG ( timeout_seconds )		3994355	0					
ANR	3994378	Callee	EG		3994355	0					
ANR	3994379	Identifier	EG		3994355	0					
ANR	3994380	ArgumentList	timeout_seconds		3994355	1					
ANR	3994381	Argument	timeout_seconds		3994355	0					
ANR	3994382	Identifier	timeout_seconds		3994355	0					
ANR	3994383	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Maximum execution time of %pd second%s exceeded"" , EG ( timeout_seconds ) , EG ( timeout_seconds ) == 1 ? """" : ""s"" )"	1197:1:34356:34493	3994355	1	True				
ANR	3994384	CallExpression	"zend_error_noreturn ( E_ERROR , ""Maximum execution time of %pd second%s exceeded"" , EG ( timeout_seconds ) , EG ( timeout_seconds ) == 1 ? """" : ""s"" )"		3994355	0					
ANR	3994385	Callee	zend_error_noreturn		3994355	0					
ANR	3994386	Identifier	zend_error_noreturn		3994355	0					
ANR	3994387	ArgumentList	E_ERROR		3994355	1					
ANR	3994388	Argument	E_ERROR		3994355	0					
ANR	3994389	Identifier	E_ERROR		3994355	0					
ANR	3994390	Argument	"""Maximum execution time of %pd second%s exceeded"""		3994355	1					
ANR	3994391	PrimaryExpression	"""Maximum execution time of %pd second%s exceeded"""		3994355	0					
ANR	3994392	Argument	EG ( timeout_seconds )		3994355	2					
ANR	3994393	CallExpression	EG ( timeout_seconds )		3994355	0					
ANR	3994394	Callee	EG		3994355	0					
ANR	3994395	Identifier	EG		3994355	0					
ANR	3994396	ArgumentList	timeout_seconds		3994355	1					
ANR	3994397	Argument	timeout_seconds		3994355	0					
ANR	3994398	Identifier	timeout_seconds		3994355	0					
ANR	3994399	Argument	"EG ( timeout_seconds ) == 1 ? """" : ""s"""		3994355	3					
ANR	3994400	ConditionalExpression	"EG ( timeout_seconds ) == 1 ? """" : ""s"""		3994355	0					
ANR	3994401	Condition	EG ( timeout_seconds ) == 1		3994355	0					
ANR	3994402	EqualityExpression	EG ( timeout_seconds ) == 1		3994355	0		==			
ANR	3994403	CallExpression	EG ( timeout_seconds )		3994355	0					
ANR	3994404	Callee	EG		3994355	0					
ANR	3994405	Identifier	EG		3994355	0					
ANR	3994406	ArgumentList	timeout_seconds		3994355	1					
ANR	3994407	Argument	timeout_seconds		3994355	0					
ANR	3994408	Identifier	timeout_seconds		3994355	0					
ANR	3994409	PrimaryExpression	1		3994355	1					
ANR	3994410	PrimaryExpression	""""""		3994355	1					
ANR	3994411	PrimaryExpression	"""s"""		3994355	2					
ANR	3994412	ReturnType	ZEND_API void		3994355	1					
ANR	3994413	Identifier	zend_timeout		3994355	2					
ANR	3994414	ParameterList	int dummy		3994355	3					
ANR	3994415	Parameter	int dummy	1181:27:33949:33957	3994355	0	True				
ANR	3994416	ParameterType	int		3994355	0					
ANR	3994417	Identifier	dummy		3994355	1					
ANR	3994418	CFGEntryNode	ENTRY		3994355		True				
ANR	3994419	CFGExitNode	EXIT		3994355		True				
ANR	3994420	Symbol	dummy		3994355						
ANR	3994421	Symbol	zend_on_timeout		3994355						
ANR	3994422	Symbol	SIGG		3994355						
ANR	3994423	Symbol	running		3994355						
ANR	3994424	Symbol	EG		3994355						
ANR	3994425	Symbol	E_ERROR		3994355						
ANR	3994426	Symbol	timeout_seconds		3994355						
ANR	3994427	Function	tq_timer_cb	1202:0:34526:34817							
ANR	3994428	FunctionDef	"tq_timer_cb (PVOID arg , BOOLEAN timed_out)"		3994427	0					
ANR	3994429	CompoundStatement		1203:0:34582:34817	3994427	0					
ANR	3994430	IdentifierDeclStatement	zend_bool * php_timed_out ;	1204:1:34585:34609	3994427	0	True				
ANR	3994431	IdentifierDecl	* php_timed_out		3994427	0					
ANR	3994432	IdentifierDeclType	zend_bool *		3994427	0					
ANR	3994433	Identifier	php_timed_out		3994427	1					
ANR	3994434	IfStatement	if ( ! timed_out )		3994427	1					
ANR	3994435	Condition	! timed_out	1208:5:34733:34742	3994427	0	True				
ANR	3994436	UnaryOperationExpression	! timed_out		3994427	0					
ANR	3994437	UnaryOperator	!		3994427	0					
ANR	3994438	Identifier	timed_out		3994427	1					
ANR	3994439	CompoundStatement		6:17:162:162	3994427	1					
ANR	3994440	ReturnStatement	return ;	1209:2:34749:34755	3994427	0	True				
ANR	3994441	ExpressionStatement	php_timed_out = ( zend_bool * ) arg	1212:1:34762:34794	3994427	2	True				
ANR	3994442	AssignmentExpression	php_timed_out = ( zend_bool * ) arg		3994427	0		=			
ANR	3994443	Identifier	php_timed_out		3994427	0					
ANR	3994444	CastExpression	( zend_bool * ) arg		3994427	1					
ANR	3994445	CastTarget	zend_bool *		3994427	0					
ANR	3994446	Identifier	arg		3994427	1					
ANR	3994447	ExpressionStatement	* php_timed_out = 1	1213:1:34797:34815	3994427	3	True				
ANR	3994448	AssignmentExpression	* php_timed_out = 1		3994427	0		=			
ANR	3994449	UnaryOperationExpression	* php_timed_out		3994427	0					
ANR	3994450	UnaryOperator	*		3994427	0					
ANR	3994451	Identifier	php_timed_out		3994427	1					
ANR	3994452	PrimaryExpression	1		3994427	1					
ANR	3994453	ReturnType	VOID CALLBACK		3994427	1					
ANR	3994454	Identifier	tq_timer_cb		3994427	2					
ANR	3994455	ParameterList	"PVOID arg , BOOLEAN timed_out"		3994427	3					
ANR	3994456	Parameter	PVOID arg	1202:26:34552:34560	3994427	0	True				
ANR	3994457	ParameterType	PVOID		3994427	0					
ANR	3994458	Identifier	arg		3994427	1					
ANR	3994459	Parameter	BOOLEAN timed_out	1202:37:34563:34579	3994427	1	True				
ANR	3994460	ParameterType	BOOLEAN		3994427	0					
ANR	3994461	Identifier	timed_out		3994427	1					
ANR	3994462	CFGEntryNode	ENTRY		3994427		True				
ANR	3994463	CFGExitNode	EXIT		3994427		True				
ANR	3994464	Symbol	php_timed_out		3994427						
ANR	3994465	Symbol	arg		3994427						
ANR	3994466	Symbol	timed_out		3994427						
ANR	3994467	Symbol	* php_timed_out		3994427						
ANR	3994468	Function	zend_set_timeout	1222:0:34907:36494							
ANR	3994469	FunctionDef	"zend_set_timeout (zend_long seconds , int reset_signals)"		3994468	0					
ANR	3994470	CompoundStatement		1223:0:34977:36494	3994468	0					
ANR	3994471	ExpressionStatement	EG ( timeout_seconds ) = seconds	1225:1:34981:35010	3994468	0	True				
ANR	3994472	AssignmentExpression	EG ( timeout_seconds ) = seconds		3994468	0		=			
ANR	3994473	CallExpression	EG ( timeout_seconds )		3994468	0					
ANR	3994474	Callee	EG		3994468	0					
ANR	3994475	Identifier	EG		3994468	0					
ANR	3994476	ArgumentList	timeout_seconds		3994468	1					
ANR	3994477	Argument	timeout_seconds		3994468	0					
ANR	3994478	Identifier	timeout_seconds		3994468	0					
ANR	3994479	Identifier	seconds		3994468	1					
ANR	3994480	IfStatement	if ( ! seconds )		3994468	1					
ANR	3994481	Condition	! seconds	1228:4:35035:35042	3994468	0	True				
ANR	3994482	UnaryOperationExpression	! seconds		3994468	0					
ANR	3994483	UnaryOperator	!		3994468	0					
ANR	3994484	Identifier	seconds		3994468	1					
ANR	3994485	CompoundStatement		6:14:67:67	3994468	1					
ANR	3994486	ReturnStatement	return ;	1229:2:35049:35055	3994468	0	True				
ANR	3994487	IfStatement	if ( NULL != tq_timer )		3994468	2					
ANR	3994488	Condition	NULL != tq_timer	1235:5:35237:35252	3994468	0	True				
ANR	3994489	EqualityExpression	NULL != tq_timer		3994468	0		!=			
ANR	3994490	Identifier	NULL		3994468	0					
ANR	3994491	Identifier	tq_timer		3994468	1					
ANR	3994492	CompoundStatement		13:23:277:277	3994468	1					
ANR	3994493	IfStatement	"if ( ! DeleteTimerQueueTimer ( NULL , tq_timer , NULL ) )"		3994468	0					
ANR	3994494	Condition	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"	1236:6:35263:35306	3994468	0	True				
ANR	3994495	UnaryOperationExpression	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		3994468	0					
ANR	3994496	UnaryOperator	!		3994468	0					
ANR	3994497	CallExpression	"DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		3994468	1					
ANR	3994498	Callee	DeleteTimerQueueTimer		3994468	0					
ANR	3994499	Identifier	DeleteTimerQueueTimer		3994468	0					
ANR	3994500	ArgumentList	NULL		3994468	1					
ANR	3994501	Argument	NULL		3994468	0					
ANR	3994502	Identifier	NULL		3994468	0					
ANR	3994503	Argument	tq_timer		3994468	1					
ANR	3994504	Identifier	tq_timer		3994468	0					
ANR	3994505	Argument	NULL		3994468	2					
ANR	3994506	Identifier	NULL		3994468	0					
ANR	3994507	CompoundStatement		14:52:331:331	3994468	1					
ANR	3994508	ExpressionStatement	EG ( timed_out ) = 0	1237:3:35314:35331	3994468	0	True				
ANR	3994509	AssignmentExpression	EG ( timed_out ) = 0		3994468	0		=			
ANR	3994510	CallExpression	EG ( timed_out )		3994468	0					
ANR	3994511	Callee	EG		3994468	0					
ANR	3994512	Identifier	EG		3994468	0					
ANR	3994513	ArgumentList	timed_out		3994468	1					
ANR	3994514	Argument	timed_out		3994468	0					
ANR	3994515	Identifier	timed_out		3994468	0					
ANR	3994516	PrimaryExpression	0		3994468	1					
ANR	3994517	ExpressionStatement	tq_timer = NULL	1238:3:35336:35351	3994468	1	True				
ANR	3994518	AssignmentExpression	tq_timer = NULL		3994468	0		=			
ANR	3994519	Identifier	tq_timer		3994468	0					
ANR	3994520	Identifier	NULL		3994468	1					
ANR	3994521	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"	1239:3:35356:35417	3994468	2	True				
ANR	3994522	CallExpression	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"		3994468	0					
ANR	3994523	Callee	zend_error_noreturn		3994468	0					
ANR	3994524	Identifier	zend_error_noreturn		3994468	0					
ANR	3994525	ArgumentList	E_ERROR		3994468	1					
ANR	3994526	Argument	E_ERROR		3994468	0					
ANR	3994527	Identifier	E_ERROR		3994468	0					
ANR	3994528	Argument	"""Could not delete queued timer"""		3994468	1					
ANR	3994529	PrimaryExpression	"""Could not delete queued timer"""		3994468	0					
ANR	3994530	ReturnStatement	return ;	1240:3:35422:35428	3994468	3	True				
ANR	3994531	ExpressionStatement	tq_timer = NULL	1242:2:35436:35451	3994468	1	True				
ANR	3994532	AssignmentExpression	tq_timer = NULL		3994468	0		=			
ANR	3994533	Identifier	tq_timer		3994468	0					
ANR	3994534	Identifier	NULL		3994468	1					
ANR	3994535	IfStatement	"if ( ! CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE ) )"		3994468	3					
ANR	3994536	Condition	"! CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE )"	1246:5:35547:35679	3994468	0	True				
ANR	3994537	UnaryOperationExpression	"! CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE )"		3994468	0					
ANR	3994538	UnaryOperator	!		3994468	0					
ANR	3994539	CallExpression	"CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE )"		3994468	1					
ANR	3994540	Callee	CreateTimerQueueTimer		3994468	0					
ANR	3994541	Identifier	CreateTimerQueueTimer		3994468	0					
ANR	3994542	ArgumentList	& tq_timer		3994468	1					
ANR	3994543	Argument	& tq_timer		3994468	0					
ANR	3994544	UnaryOperationExpression	& tq_timer		3994468	0					
ANR	3994545	UnaryOperator	&		3994468	0					
ANR	3994546	Identifier	tq_timer		3994468	1					
ANR	3994547	Argument	NULL		3994468	1					
ANR	3994548	Identifier	NULL		3994468	0					
ANR	3994549	Argument	( WAITORTIMERCALLBACK ) tq_timer_cb		3994468	2					
ANR	3994550	CastExpression	( WAITORTIMERCALLBACK ) tq_timer_cb		3994468	0					
ANR	3994551	CastTarget	WAITORTIMERCALLBACK		3994468	0					
ANR	3994552	Identifier	tq_timer_cb		3994468	1					
ANR	3994553	Argument	( VOID * ) & EG ( timed_out )		3994468	3					
ANR	3994554	CastExpression	( VOID * ) & EG ( timed_out )		3994468	0					
ANR	3994555	CastTarget	VOID *		3994468	0					
ANR	3994556	UnaryOperationExpression	& EG ( timed_out )		3994468	1					
ANR	3994557	UnaryOperator	&		3994468	0					
ANR	3994558	CallExpression	EG ( timed_out )		3994468	1					
ANR	3994559	Callee	EG		3994468	0					
ANR	3994560	Identifier	EG		3994468	0					
ANR	3994561	ArgumentList	timed_out		3994468	1					
ANR	3994562	Argument	timed_out		3994468	0					
ANR	3994563	Identifier	timed_out		3994468	0					
ANR	3994564	Argument	seconds * 1000		3994468	4					
ANR	3994565	MultiplicativeExpression	seconds * 1000		3994468	0		*			
ANR	3994566	Identifier	seconds		3994468	0					
ANR	3994567	PrimaryExpression	1000		3994468	1					
ANR	3994568	Argument	0		3994468	5					
ANR	3994569	PrimaryExpression	0		3994468	0					
ANR	3994570	Argument	WT_EXECUTEONLYONCE		3994468	6					
ANR	3994571	Identifier	WT_EXECUTEONLYONCE		3994468	0					
ANR	3994572	CompoundStatement		24:140:704:704	3994468	1					
ANR	3994573	ExpressionStatement	EG ( timed_out ) = 0	1247:2:35686:35703	3994468	0	True				
ANR	3994574	AssignmentExpression	EG ( timed_out ) = 0		3994468	0		=			
ANR	3994575	CallExpression	EG ( timed_out )		3994468	0					
ANR	3994576	Callee	EG		3994468	0					
ANR	3994577	Identifier	EG		3994468	0					
ANR	3994578	ArgumentList	timed_out		3994468	1					
ANR	3994579	Argument	timed_out		3994468	0					
ANR	3994580	Identifier	timed_out		3994468	0					
ANR	3994581	PrimaryExpression	0		3994468	1					
ANR	3994582	ExpressionStatement	tq_timer = NULL	1248:2:35707:35722	3994468	1	True				
ANR	3994583	AssignmentExpression	tq_timer = NULL		3994468	0		=			
ANR	3994584	Identifier	tq_timer		3994468	0					
ANR	3994585	Identifier	NULL		3994468	1					
ANR	3994586	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Could not queue new timer"" )"	1249:2:35726:35783	3994468	2	True				
ANR	3994587	CallExpression	"zend_error_noreturn ( E_ERROR , ""Could not queue new timer"" )"		3994468	0					
ANR	3994588	Callee	zend_error_noreturn		3994468	0					
ANR	3994589	Identifier	zend_error_noreturn		3994468	0					
ANR	3994590	ArgumentList	E_ERROR		3994468	1					
ANR	3994591	Argument	E_ERROR		3994468	0					
ANR	3994592	Identifier	E_ERROR		3994468	0					
ANR	3994593	Argument	"""Could not queue new timer"""		3994468	1					
ANR	3994594	PrimaryExpression	"""Could not queue new timer"""		3994468	0					
ANR	3994595	ReturnStatement	return ;	1250:2:35787:35793	3994468	3	True				
ANR	3994596	ExpressionStatement	EG ( timed_out ) = 0	1252:1:35799:35816	3994468	4	True				
ANR	3994597	AssignmentExpression	EG ( timed_out ) = 0		3994468	0		=			
ANR	3994598	CallExpression	EG ( timed_out )		3994468	0					
ANR	3994599	Callee	EG		3994468	0					
ANR	3994600	Identifier	EG		3994468	0					
ANR	3994601	ArgumentList	timed_out		3994468	1					
ANR	3994602	Argument	timed_out		3994468	0					
ANR	3994603	Identifier	timed_out		3994468	0					
ANR	3994604	PrimaryExpression	0		3994468	1					
ANR	3994605	ReturnType	void		3994468	1					
ANR	3994606	Identifier	zend_set_timeout		3994468	2					
ANR	3994607	ParameterList	"zend_long seconds , int reset_signals"		3994468	3					
ANR	3994608	Parameter	zend_long seconds	1222:22:34929:34945	3994468	0	True				
ANR	3994609	ParameterType	zend_long		3994468	0					
ANR	3994610	Identifier	seconds		3994468	1					
ANR	3994611	Parameter	int reset_signals	1222:41:34948:34964	3994468	1	True				
ANR	3994612	ParameterType	int		3994468	0					
ANR	3994613	Identifier	reset_signals		3994468	1					
ANR	3994614	CFGEntryNode	ENTRY		3994468		True				
ANR	3994615	CFGExitNode	EXIT		3994468		True				
ANR	3994616	Symbol	EG		3994468						
ANR	3994617	Symbol	NULL		3994468						
ANR	3994618	Symbol	timed_out		3994468						
ANR	3994619	Symbol	& EG		3994468						
ANR	3994620	Symbol	& tq_timer		3994468						
ANR	3994621	Symbol	seconds		3994468						
ANR	3994622	Symbol	E_ERROR		3994468						
ANR	3994623	Symbol	reset_signals		3994468						
ANR	3994624	Symbol	DeleteTimerQueueTimer		3994468						
ANR	3994625	Symbol	tq_timer_cb		3994468						
ANR	3994626	Symbol	CreateTimerQueueTimer		3994468						
ANR	3994627	Symbol	WT_EXECUTEONLYONCE		3994468						
ANR	3994628	Symbol	tq_timer		3994468						
ANR	3994629	Symbol	timeout_seconds		3994468						
ANR	3994630	Function	zend_unset_timeout	1291:0:36507:37169							
ANR	3994631	FunctionDef	zend_unset_timeout ()		3994630	0					
ANR	3994632	CompoundStatement		1292:0:36547:37169	3994630	0					
ANR	3994633	IfStatement	if ( NULL != tq_timer )		3994630	0					
ANR	3994634	Condition	NULL != tq_timer	1294:5:36572:36587	3994630	0	True				
ANR	3994635	EqualityExpression	NULL != tq_timer		3994630	0		!=			
ANR	3994636	Identifier	NULL		3994630	0					
ANR	3994637	Identifier	tq_timer		3994630	1					
ANR	3994638	CompoundStatement		3:23:42:42	3994630	1					
ANR	3994639	IfStatement	"if ( ! DeleteTimerQueueTimer ( NULL , tq_timer , NULL ) )"		3994630	0					
ANR	3994640	Condition	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"	1295:6:36598:36641	3994630	0	True				
ANR	3994641	UnaryOperationExpression	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		3994630	0					
ANR	3994642	UnaryOperator	!		3994630	0					
ANR	3994643	CallExpression	"DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		3994630	1					
ANR	3994644	Callee	DeleteTimerQueueTimer		3994630	0					
ANR	3994645	Identifier	DeleteTimerQueueTimer		3994630	0					
ANR	3994646	ArgumentList	NULL		3994630	1					
ANR	3994647	Argument	NULL		3994630	0					
ANR	3994648	Identifier	NULL		3994630	0					
ANR	3994649	Argument	tq_timer		3994630	1					
ANR	3994650	Identifier	tq_timer		3994630	0					
ANR	3994651	Argument	NULL		3994630	2					
ANR	3994652	Identifier	NULL		3994630	0					
ANR	3994653	CompoundStatement		4:52:96:96	3994630	1					
ANR	3994654	ExpressionStatement	EG ( timed_out ) = 0	1296:3:36649:36666	3994630	0	True				
ANR	3994655	AssignmentExpression	EG ( timed_out ) = 0		3994630	0		=			
ANR	3994656	CallExpression	EG ( timed_out )		3994630	0					
ANR	3994657	Callee	EG		3994630	0					
ANR	3994658	Identifier	EG		3994630	0					
ANR	3994659	ArgumentList	timed_out		3994630	1					
ANR	3994660	Argument	timed_out		3994630	0					
ANR	3994661	Identifier	timed_out		3994630	0					
ANR	3994662	PrimaryExpression	0		3994630	1					
ANR	3994663	ExpressionStatement	tq_timer = NULL	1297:3:36671:36686	3994630	1	True				
ANR	3994664	AssignmentExpression	tq_timer = NULL		3994630	0		=			
ANR	3994665	Identifier	tq_timer		3994630	0					
ANR	3994666	Identifier	NULL		3994630	1					
ANR	3994667	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"	1298:3:36691:36752	3994630	2	True				
ANR	3994668	CallExpression	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"		3994630	0					
ANR	3994669	Callee	zend_error_noreturn		3994630	0					
ANR	3994670	Identifier	zend_error_noreturn		3994630	0					
ANR	3994671	ArgumentList	E_ERROR		3994630	1					
ANR	3994672	Argument	E_ERROR		3994630	0					
ANR	3994673	Identifier	E_ERROR		3994630	0					
ANR	3994674	Argument	"""Could not delete queued timer"""		3994630	1					
ANR	3994675	PrimaryExpression	"""Could not delete queued timer"""		3994630	0					
ANR	3994676	ReturnStatement	return ;	1299:3:36757:36763	3994630	3	True				
ANR	3994677	ExpressionStatement	tq_timer = NULL	1301:2:36771:36786	3994630	1	True				
ANR	3994678	AssignmentExpression	tq_timer = NULL		3994630	0		=			
ANR	3994679	Identifier	tq_timer		3994630	0					
ANR	3994680	Identifier	NULL		3994630	1					
ANR	3994681	ExpressionStatement	EG ( timed_out ) = 0	1303:1:36792:36809	3994630	1	True				
ANR	3994682	AssignmentExpression	EG ( timed_out ) = 0		3994630	0		=			
ANR	3994683	CallExpression	EG ( timed_out )		3994630	0					
ANR	3994684	Callee	EG		3994630	0					
ANR	3994685	Identifier	EG		3994630	0					
ANR	3994686	ArgumentList	timed_out		3994630	1					
ANR	3994687	Argument	timed_out		3994630	0					
ANR	3994688	Identifier	timed_out		3994630	0					
ANR	3994689	PrimaryExpression	0		3994630	1					
ANR	3994690	ReturnType	void		3994630	1					
ANR	3994691	Identifier	zend_unset_timeout		3994630	2					
ANR	3994692	ParameterList			3994630	3					
ANR	3994693	CFGEntryNode	ENTRY		3994630		True				
ANR	3994694	CFGExitNode	EXIT		3994630		True				
ANR	3994695	Symbol	EG		3994630						
ANR	3994696	Symbol	NULL		3994630						
ANR	3994697	Symbol	E_ERROR		3994630						
ANR	3994698	Symbol	DeleteTimerQueueTimer		3994630						
ANR	3994699	Symbol	timed_out		3994630						
ANR	3994700	Symbol	tq_timer		3994630						
ANR	3994701	Function	zend_fetch_class	1322:0:37182:39089							
ANR	3994702	FunctionDef	"zend_fetch_class (zend_string * class_name , int fetch_type)"		3994701	0					
ANR	3994703	CompoundStatement		1323:0:37268:39089	3994701	0					
ANR	3994704	IdentifierDeclStatement	zend_class_entry * ce ;	1324:1:37271:37291	3994701	0	True				
ANR	3994705	IdentifierDecl	* ce		3994701	0					
ANR	3994706	IdentifierDeclType	zend_class_entry *		3994701	0					
ANR	3994707	Identifier	ce		3994701	1					
ANR	3994708	IdentifierDeclStatement	int fetch_sub_type = fetch_type & ZEND_FETCH_CLASS_MASK ;	1325:1:37294:37349	3994701	1	True				
ANR	3994709	IdentifierDecl	fetch_sub_type = fetch_type & ZEND_FETCH_CLASS_MASK		3994701	0					
ANR	3994710	IdentifierDeclType	int		3994701	0					
ANR	3994711	Identifier	fetch_sub_type		3994701	1					
ANR	3994712	AssignmentExpression	fetch_sub_type = fetch_type & ZEND_FETCH_CLASS_MASK		3994701	2		=			
ANR	3994713	Identifier	fetch_sub_type		3994701	0					
ANR	3994714	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_MASK		3994701	1		&			
ANR	3994715	Identifier	fetch_type		3994701	0					
ANR	3994716	Identifier	ZEND_FETCH_CLASS_MASK		3994701	1					
ANR	3994717	Label	check_fetch_type :	1327:0:37352:37368	3994701	2	True				
ANR	3994718	Identifier	check_fetch_type		3994701	0					
ANR	3994719	SwitchStatement	switch ( fetch_sub_type )		3994701	3					
ANR	3994720	Condition	fetch_sub_type	1328:9:37379:37392	3994701	0	True				
ANR	3994721	Identifier	fetch_sub_type		3994701	0					
ANR	3994722	CompoundStatement		6:25:126:126	3994701	1					
ANR	3994723	Label	case ZEND_FETCH_CLASS_SELF :	1329:2:37399:37425	3994701	0	True				
ANR	3994724	Identifier	ZEND_FETCH_CLASS_SELF		3994701	0					
ANR	3994725	IfStatement	if ( UNEXPECTED ( ! EG ( scope ) ) )		3994701	1					
ANR	3994726	Condition	UNEXPECTED ( ! EG ( scope ) )	1330:7:37434:37455	3994701	0	True				
ANR	3994727	CallExpression	UNEXPECTED ( ! EG ( scope ) )		3994701	0					
ANR	3994728	Callee	UNEXPECTED		3994701	0					
ANR	3994729	Identifier	UNEXPECTED		3994701	0					
ANR	3994730	ArgumentList	! EG ( scope )		3994701	1					
ANR	3994731	Argument	! EG ( scope )		3994701	0					
ANR	3994732	UnaryOperationExpression	! EG ( scope )		3994701	0					
ANR	3994733	UnaryOperator	!		3994701	0					
ANR	3994734	CallExpression	EG ( scope )		3994701	1					
ANR	3994735	Callee	EG		3994701	0					
ANR	3994736	Identifier	EG		3994701	0					
ANR	3994737	ArgumentList	scope		3994701	1					
ANR	3994738	Argument	scope		3994701	0					
ANR	3994739	Identifier	scope		3994701	0					
ANR	3994740	CompoundStatement		8:31:189:189	3994701	1					
ANR	3994741	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access self:: when no class scope is active"" )"	1331:4:37464:37555	3994701	0	True				
ANR	3994742	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access self:: when no class scope is active"" )"		3994701	0					
ANR	3994743	Callee	zend_throw_or_error		3994701	0					
ANR	3994744	Identifier	zend_throw_or_error		3994701	0					
ANR	3994745	ArgumentList	fetch_type		3994701	1					
ANR	3994746	Argument	fetch_type		3994701	0					
ANR	3994747	Identifier	fetch_type		3994701	0					
ANR	3994748	Argument	NULL		3994701	1					
ANR	3994749	Identifier	NULL		3994701	0					
ANR	3994750	Argument	"""Cannot access self:: when no class scope is active"""		3994701	2					
ANR	3994751	PrimaryExpression	"""Cannot access self:: when no class scope is active"""		3994701	0					
ANR	3994752	ReturnStatement	return EG ( scope ) ;	1333:3:37565:37581	3994701	2	True				
ANR	3994753	CallExpression	EG ( scope )		3994701	0					
ANR	3994754	Callee	EG		3994701	0					
ANR	3994755	Identifier	EG		3994701	0					
ANR	3994756	ArgumentList	scope		3994701	1					
ANR	3994757	Argument	scope		3994701	0					
ANR	3994758	Identifier	scope		3994701	0					
ANR	3994759	Label	case ZEND_FETCH_CLASS_PARENT :	1334:2:37585:37613	3994701	3	True				
ANR	3994760	Identifier	ZEND_FETCH_CLASS_PARENT		3994701	0					
ANR	3994761	IfStatement	if ( UNEXPECTED ( ! EG ( scope ) ) )		3994701	4					
ANR	3994762	Condition	UNEXPECTED ( ! EG ( scope ) )	1335:7:37622:37643	3994701	0	True				
ANR	3994763	CallExpression	UNEXPECTED ( ! EG ( scope ) )		3994701	0					
ANR	3994764	Callee	UNEXPECTED		3994701	0					
ANR	3994765	Identifier	UNEXPECTED		3994701	0					
ANR	3994766	ArgumentList	! EG ( scope )		3994701	1					
ANR	3994767	Argument	! EG ( scope )		3994701	0					
ANR	3994768	UnaryOperationExpression	! EG ( scope )		3994701	0					
ANR	3994769	UnaryOperator	!		3994701	0					
ANR	3994770	CallExpression	EG ( scope )		3994701	1					
ANR	3994771	Callee	EG		3994701	0					
ANR	3994772	Identifier	EG		3994701	0					
ANR	3994773	ArgumentList	scope		3994701	1					
ANR	3994774	Argument	scope		3994701	0					
ANR	3994775	Identifier	scope		3994701	0					
ANR	3994776	CompoundStatement		13:31:377:377	3994701	1					
ANR	3994777	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when no class scope is active"" )"	1336:4:37652:37745	3994701	0	True				
ANR	3994778	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when no class scope is active"" )"		3994701	0					
ANR	3994779	Callee	zend_throw_or_error		3994701	0					
ANR	3994780	Identifier	zend_throw_or_error		3994701	0					
ANR	3994781	ArgumentList	fetch_type		3994701	1					
ANR	3994782	Argument	fetch_type		3994701	0					
ANR	3994783	Identifier	fetch_type		3994701	0					
ANR	3994784	Argument	NULL		3994701	1					
ANR	3994785	Identifier	NULL		3994701	0					
ANR	3994786	Argument	"""Cannot access parent:: when no class scope is active"""		3994701	2					
ANR	3994787	PrimaryExpression	"""Cannot access parent:: when no class scope is active"""		3994701	0					
ANR	3994788	ReturnStatement	return NULL ;	1337:4:37751:37762	3994701	1	True				
ANR	3994789	Identifier	NULL		3994701	0					
ANR	3994790	IfStatement	if ( UNEXPECTED ( ! EG ( scope ) -> parent ) )		3994701	5					
ANR	3994791	Condition	UNEXPECTED ( ! EG ( scope ) -> parent )	1339:7:37776:37805	3994701	0	True				
ANR	3994792	CallExpression	UNEXPECTED ( ! EG ( scope ) -> parent )		3994701	0					
ANR	3994793	Callee	UNEXPECTED		3994701	0					
ANR	3994794	Identifier	UNEXPECTED		3994701	0					
ANR	3994795	ArgumentList	! EG ( scope ) -> parent		3994701	1					
ANR	3994796	Argument	! EG ( scope ) -> parent		3994701	0					
ANR	3994797	UnaryOperationExpression	! EG ( scope ) -> parent		3994701	0					
ANR	3994798	UnaryOperator	!		3994701	0					
ANR	3994799	PtrMemberAccess	EG ( scope ) -> parent		3994701	1					
ANR	3994800	CallExpression	EG ( scope )		3994701	0					
ANR	3994801	Callee	EG		3994701	0					
ANR	3994802	Identifier	EG		3994701	0					
ANR	3994803	ArgumentList	scope		3994701	1					
ANR	3994804	Argument	scope		3994701	0					
ANR	3994805	Identifier	scope		3994701	0					
ANR	3994806	Identifier	parent		3994701	1					
ANR	3994807	CompoundStatement		17:39:539:539	3994701	1					
ANR	3994808	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when current class scope has no parent"" )"	1340:4:37814:37916	3994701	0	True				
ANR	3994809	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when current class scope has no parent"" )"		3994701	0					
ANR	3994810	Callee	zend_throw_or_error		3994701	0					
ANR	3994811	Identifier	zend_throw_or_error		3994701	0					
ANR	3994812	ArgumentList	fetch_type		3994701	1					
ANR	3994813	Argument	fetch_type		3994701	0					
ANR	3994814	Identifier	fetch_type		3994701	0					
ANR	3994815	Argument	NULL		3994701	1					
ANR	3994816	Identifier	NULL		3994701	0					
ANR	3994817	Argument	"""Cannot access parent:: when current class scope has no parent"""		3994701	2					
ANR	3994818	PrimaryExpression	"""Cannot access parent:: when current class scope has no parent"""		3994701	0					
ANR	3994819	ReturnStatement	return EG ( scope ) -> parent ;	1342:3:37926:37950	3994701	6	True				
ANR	3994820	PtrMemberAccess	EG ( scope ) -> parent		3994701	0					
ANR	3994821	CallExpression	EG ( scope )		3994701	0					
ANR	3994822	Callee	EG		3994701	0					
ANR	3994823	Identifier	EG		3994701	0					
ANR	3994824	ArgumentList	scope		3994701	1					
ANR	3994825	Argument	scope		3994701	0					
ANR	3994826	Identifier	scope		3994701	0					
ANR	3994827	Identifier	parent		3994701	1					
ANR	3994828	Label	case ZEND_FETCH_CLASS_STATIC :	1343:2:37954:37982	3994701	7	True				
ANR	3994829	Identifier	ZEND_FETCH_CLASS_STATIC		3994701	0					
ANR	3994830	ExpressionStatement	ce = zend_get_called_scope ( EG ( current_execute_data ) )	1344:3:37987:38039	3994701	8	True				
ANR	3994831	AssignmentExpression	ce = zend_get_called_scope ( EG ( current_execute_data ) )		3994701	0		=			
ANR	3994832	Identifier	ce		3994701	0					
ANR	3994833	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		3994701	1					
ANR	3994834	Callee	zend_get_called_scope		3994701	0					
ANR	3994835	Identifier	zend_get_called_scope		3994701	0					
ANR	3994836	ArgumentList	EG ( current_execute_data )		3994701	1					
ANR	3994837	Argument	EG ( current_execute_data )		3994701	0					
ANR	3994838	CallExpression	EG ( current_execute_data )		3994701	0					
ANR	3994839	Callee	EG		3994701	0					
ANR	3994840	Identifier	EG		3994701	0					
ANR	3994841	ArgumentList	current_execute_data		3994701	1					
ANR	3994842	Argument	current_execute_data		3994701	0					
ANR	3994843	Identifier	current_execute_data		3994701	0					
ANR	3994844	IfStatement	if ( UNEXPECTED ( ! ce ) )		3994701	9					
ANR	3994845	Condition	UNEXPECTED ( ! ce )	1345:7:38048:38062	3994701	0	True				
ANR	3994846	CallExpression	UNEXPECTED ( ! ce )		3994701	0					
ANR	3994847	Callee	UNEXPECTED		3994701	0					
ANR	3994848	Identifier	UNEXPECTED		3994701	0					
ANR	3994849	ArgumentList	! ce		3994701	1					
ANR	3994850	Argument	! ce		3994701	0					
ANR	3994851	UnaryOperationExpression	! ce		3994701	0					
ANR	3994852	UnaryOperator	!		3994701	0					
ANR	3994853	Identifier	ce		3994701	1					
ANR	3994854	CompoundStatement		23:24:796:796	3994701	1					
ANR	3994855	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access static:: when no class scope is active"" )"	1346:4:38071:38164	3994701	0	True				
ANR	3994856	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access static:: when no class scope is active"" )"		3994701	0					
ANR	3994857	Callee	zend_throw_or_error		3994701	0					
ANR	3994858	Identifier	zend_throw_or_error		3994701	0					
ANR	3994859	ArgumentList	fetch_type		3994701	1					
ANR	3994860	Argument	fetch_type		3994701	0					
ANR	3994861	Identifier	fetch_type		3994701	0					
ANR	3994862	Argument	NULL		3994701	1					
ANR	3994863	Identifier	NULL		3994701	0					
ANR	3994864	Argument	"""Cannot access static:: when no class scope is active"""		3994701	2					
ANR	3994865	PrimaryExpression	"""Cannot access static:: when no class scope is active"""		3994701	0					
ANR	3994866	ReturnStatement	return NULL ;	1347:4:38170:38181	3994701	1	True				
ANR	3994867	Identifier	NULL		3994701	0					
ANR	3994868	ReturnStatement	return ce ;	1349:3:38191:38200	3994701	10	True				
ANR	3994869	Identifier	ce		3994701	0					
ANR	3994870	Label	case ZEND_FETCH_CLASS_AUTO :	1350:2:38204:38230	3994701	11	True				
ANR	3994871	Identifier	ZEND_FETCH_CLASS_AUTO		3994701	0					
ANR	3994872	CompoundStatement		28:30:963:963	3994701	12					
ANR	3994873	ExpressionStatement	fetch_sub_type = zend_get_class_fetch_type ( class_name )	1351:4:38238:38292	3994701	0	True				
ANR	3994874	AssignmentExpression	fetch_sub_type = zend_get_class_fetch_type ( class_name )		3994701	0		=			
ANR	3994875	Identifier	fetch_sub_type		3994701	0					
ANR	3994876	CallExpression	zend_get_class_fetch_type ( class_name )		3994701	1					
ANR	3994877	Callee	zend_get_class_fetch_type		3994701	0					
ANR	3994878	Identifier	zend_get_class_fetch_type		3994701	0					
ANR	3994879	ArgumentList	class_name		3994701	1					
ANR	3994880	Argument	class_name		3994701	0					
ANR	3994881	Identifier	class_name		3994701	0					
ANR	3994882	IfStatement	if ( UNEXPECTED ( fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT ) )		3994701	1					
ANR	3994883	Condition	UNEXPECTED ( fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT )	1352:8:38302:38355	3994701	0	True				
ANR	3994884	CallExpression	UNEXPECTED ( fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT )		3994701	0					
ANR	3994885	Callee	UNEXPECTED		3994701	0					
ANR	3994886	Identifier	UNEXPECTED		3994701	0					
ANR	3994887	ArgumentList	fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT		3994701	1					
ANR	3994888	Argument	fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT		3994701	0					
ANR	3994889	EqualityExpression	fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT		3994701	0		!=			
ANR	3994890	Identifier	fetch_sub_type		3994701	0					
ANR	3994891	Identifier	ZEND_FETCH_CLASS_DEFAULT		3994701	1					
ANR	3994892	CompoundStatement		30:64:1089:1089	3994701	1					
ANR	3994893	GotoStatement	goto check_fetch_type ;	1353:5:38365:38386	3994701	0	True				
ANR	3994894	Identifier	check_fetch_type		3994701	0					
ANR	3994895	BreakStatement	break ;	1356:3:38402:38407	3994701	13	True				
ANR	3994896	IfStatement	if ( fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD )		3994701	4					
ANR	3994897	Condition	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD	1359:5:38418:38458	3994701	0	True				
ANR	3994898	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD		3994701	0		&			
ANR	3994899	Identifier	fetch_type		3994701	0					
ANR	3994900	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		3994701	1					
ANR	3994901	CompoundStatement		37:48:1192:1192	3994701	1					
ANR	3994902	ReturnStatement	"return zend_lookup_class_ex ( class_name , NULL , 0 ) ;"	1360:2:38465:38513	3994701	0	True				
ANR	3994903	CallExpression	"zend_lookup_class_ex ( class_name , NULL , 0 )"		3994701	0					
ANR	3994904	Callee	zend_lookup_class_ex		3994701	0					
ANR	3994905	Identifier	zend_lookup_class_ex		3994701	0					
ANR	3994906	ArgumentList	class_name		3994701	1					
ANR	3994907	Argument	class_name		3994701	0					
ANR	3994908	Identifier	class_name		3994701	0					
ANR	3994909	Argument	NULL		3994701	1					
ANR	3994910	Identifier	NULL		3994701	0					
ANR	3994911	Argument	0		3994701	2					
ANR	3994912	PrimaryExpression	0		3994701	0					
ANR	3994913	ElseStatement	else		3994701	0					
ANR	3994914	IfStatement	"if ( ( ce = zend_lookup_class_ex ( class_name , NULL , 1 ) ) == NULL )"		3994701	0					
ANR	3994915	Condition	"( ce = zend_lookup_class_ex ( class_name , NULL , 1 ) ) == NULL"	1361:12:38527:38582	3994701	0	True				
ANR	3994916	EqualityExpression	"( ce = zend_lookup_class_ex ( class_name , NULL , 1 ) ) == NULL"		3994701	0		==			
ANR	3994917	AssignmentExpression	"ce = zend_lookup_class_ex ( class_name , NULL , 1 )"		3994701	0		=			
ANR	3994918	Identifier	ce		3994701	0					
ANR	3994919	CallExpression	"zend_lookup_class_ex ( class_name , NULL , 1 )"		3994701	1					
ANR	3994920	Callee	zend_lookup_class_ex		3994701	0					
ANR	3994921	Identifier	zend_lookup_class_ex		3994701	0					
ANR	3994922	ArgumentList	class_name		3994701	1					
ANR	3994923	Argument	class_name		3994701	0					
ANR	3994924	Identifier	class_name		3994701	0					
ANR	3994925	Argument	NULL		3994701	1					
ANR	3994926	Identifier	NULL		3994701	0					
ANR	3994927	Argument	1		3994701	2					
ANR	3994928	PrimaryExpression	1		3994701	0					
ANR	3994929	Identifier	NULL		3994701	1					
ANR	3994930	CompoundStatement		39:70:1316:1316	3994701	1					
ANR	3994931	IfStatement	if ( ! ( fetch_type & ZEND_FETCH_CLASS_SILENT ) && ! EG ( exception ) )		3994701	0					
ANR	3994932	Condition	! ( fetch_type & ZEND_FETCH_CLASS_SILENT ) && ! EG ( exception )	1362:6:38593:38649	3994701	0	True				
ANR	3994933	AndExpression	! ( fetch_type & ZEND_FETCH_CLASS_SILENT ) && ! EG ( exception )		3994701	0		&&			
ANR	3994934	UnaryOperationExpression	! ( fetch_type & ZEND_FETCH_CLASS_SILENT )		3994701	0					
ANR	3994935	UnaryOperator	!		3994701	0					
ANR	3994936	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_SILENT		3994701	1		&			
ANR	3994937	Identifier	fetch_type		3994701	0					
ANR	3994938	Identifier	ZEND_FETCH_CLASS_SILENT		3994701	1					
ANR	3994939	UnaryOperationExpression	! EG ( exception )		3994701	1					
ANR	3994940	UnaryOperator	!		3994701	0					
ANR	3994941	CallExpression	EG ( exception )		3994701	1					
ANR	3994942	Callee	EG		3994701	0					
ANR	3994943	Identifier	EG		3994701	0					
ANR	3994944	ArgumentList	exception		3994701	1					
ANR	3994945	Argument	exception		3994701	0					
ANR	3994946	Identifier	exception		3994701	0					
ANR	3994947	CompoundStatement		40:65:1383:1383	3994701	1					
ANR	3994948	IfStatement	if ( fetch_sub_type == ZEND_FETCH_CLASS_INTERFACE )		3994701	0					
ANR	3994949	Condition	fetch_sub_type == ZEND_FETCH_CLASS_INTERFACE	1363:7:38661:38704	3994701	0	True				
ANR	3994950	EqualityExpression	fetch_sub_type == ZEND_FETCH_CLASS_INTERFACE		3994701	0		==			
ANR	3994951	Identifier	fetch_sub_type		3994701	0					
ANR	3994952	Identifier	ZEND_FETCH_CLASS_INTERFACE		3994701	1					
ANR	3994953	CompoundStatement		41:53:1438:1438	3994701	1					
ANR	3994954	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"	1364:4:38713:38800	3994701	0	True				
ANR	3994955	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"		3994701	0					
ANR	3994956	Callee	zend_throw_or_error		3994701	0					
ANR	3994957	Identifier	zend_throw_or_error		3994701	0					
ANR	3994958	ArgumentList	fetch_type		3994701	1					
ANR	3994959	Argument	fetch_type		3994701	0					
ANR	3994960	Identifier	fetch_type		3994701	0					
ANR	3994961	Argument	NULL		3994701	1					
ANR	3994962	Identifier	NULL		3994701	0					
ANR	3994963	Argument	"""Interface '%s' not found"""		3994701	2					
ANR	3994964	PrimaryExpression	"""Interface '%s' not found"""		3994701	0					
ANR	3994965	Argument	ZSTR_VAL ( class_name )		3994701	3					
ANR	3994966	CallExpression	ZSTR_VAL ( class_name )		3994701	0					
ANR	3994967	Callee	ZSTR_VAL		3994701	0					
ANR	3994968	Identifier	ZSTR_VAL		3994701	0					
ANR	3994969	ArgumentList	class_name		3994701	1					
ANR	3994970	Argument	class_name		3994701	0					
ANR	3994971	Identifier	class_name		3994701	0					
ANR	3994972	ElseStatement	else		3994701	0					
ANR	3994973	IfStatement	if ( fetch_sub_type == ZEND_FETCH_CLASS_TRAIT )		3994701	0					
ANR	3994974	Condition	fetch_sub_type == ZEND_FETCH_CLASS_TRAIT	1365:14:38816:38855	3994701	0	True				
ANR	3994975	EqualityExpression	fetch_sub_type == ZEND_FETCH_CLASS_TRAIT		3994701	0		==			
ANR	3994976	Identifier	fetch_sub_type		3994701	0					
ANR	3994977	Identifier	ZEND_FETCH_CLASS_TRAIT		3994701	1					
ANR	3994978	CompoundStatement		43:56:1589:1589	3994701	1					
ANR	3994979	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"	1366:4:38864:38947	3994701	0	True				
ANR	3994980	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"		3994701	0					
ANR	3994981	Callee	zend_throw_or_error		3994701	0					
ANR	3994982	Identifier	zend_throw_or_error		3994701	0					
ANR	3994983	ArgumentList	fetch_type		3994701	1					
ANR	3994984	Argument	fetch_type		3994701	0					
ANR	3994985	Identifier	fetch_type		3994701	0					
ANR	3994986	Argument	NULL		3994701	1					
ANR	3994987	Identifier	NULL		3994701	0					
ANR	3994988	Argument	"""Trait '%s' not found"""		3994701	2					
ANR	3994989	PrimaryExpression	"""Trait '%s' not found"""		3994701	0					
ANR	3994990	Argument	ZSTR_VAL ( class_name )		3994701	3					
ANR	3994991	CallExpression	ZSTR_VAL ( class_name )		3994701	0					
ANR	3994992	Callee	ZSTR_VAL		3994701	0					
ANR	3994993	Identifier	ZSTR_VAL		3994701	0					
ANR	3994994	ArgumentList	class_name		3994701	1					
ANR	3994995	Argument	class_name		3994701	0					
ANR	3994996	Identifier	class_name		3994701	0					
ANR	3994997	ElseStatement	else		3994701	0					
ANR	3994998	CompoundStatement		45:10:1690:1690	3994701	0					
ANR	3994999	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"	1368:4:38965:39048	3994701	0	True				
ANR	3995000	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"		3994701	0					
ANR	3995001	Callee	zend_throw_or_error		3994701	0					
ANR	3995002	Identifier	zend_throw_or_error		3994701	0					
ANR	3995003	ArgumentList	fetch_type		3994701	1					
ANR	3995004	Argument	fetch_type		3994701	0					
ANR	3995005	Identifier	fetch_type		3994701	0					
ANR	3995006	Argument	NULL		3994701	1					
ANR	3995007	Identifier	NULL		3994701	0					
ANR	3995008	Argument	"""Class '%s' not found"""		3994701	2					
ANR	3995009	PrimaryExpression	"""Class '%s' not found"""		3994701	0					
ANR	3995010	Argument	ZSTR_VAL ( class_name )		3994701	3					
ANR	3995011	CallExpression	ZSTR_VAL ( class_name )		3994701	0					
ANR	3995012	Callee	ZSTR_VAL		3994701	0					
ANR	3995013	Identifier	ZSTR_VAL		3994701	0					
ANR	3995014	ArgumentList	class_name		3994701	1					
ANR	3995015	Argument	class_name		3994701	0					
ANR	3995016	Identifier	class_name		3994701	0					
ANR	3995017	ReturnStatement	return NULL ;	1371:2:39061:39072	3994701	1	True				
ANR	3995018	Identifier	NULL		3994701	0					
ANR	3995019	ReturnStatement	return ce ;	1373:1:39078:39087	3994701	5	True				
ANR	3995020	Identifier	ce		3994701	0					
ANR	3995021	ReturnType	zend_class_entry *		3994701	1					
ANR	3995022	Identifier	zend_fetch_class		3994701	2					
ANR	3995023	ParameterList	"zend_string * class_name , int fetch_type"		3994701	3					
ANR	3995024	Parameter	zend_string * class_name	1322:35:37217:37239	3994701	0	True				
ANR	3995025	ParameterType	zend_string *		3994701	0					
ANR	3995026	Identifier	class_name		3994701	1					
ANR	3995027	Parameter	int fetch_type	1322:60:37242:37255	3994701	1	True				
ANR	3995028	ParameterType	int		3994701	0					
ANR	3995029	Identifier	fetch_type		3994701	1					
ANR	3995030	CFGEntryNode	ENTRY		3994701		True				
ANR	3995031	CFGExitNode	EXIT		3994701		True				
ANR	3995032	Symbol	ZEND_FETCH_CLASS_DEFAULT		3994701						
ANR	3995033	Symbol	zend_lookup_class_ex		3994701						
ANR	3995034	Symbol	exception		3994701						
ANR	3995035	Symbol	fetch_type		3994701						
ANR	3995036	Symbol	ce		3994701						
ANR	3995037	Symbol	EG		3994701						
ANR	3995038	Symbol	NULL		3994701						
ANR	3995039	Symbol	current_execute_data		3994701						
ANR	3995040	Symbol	ZEND_FETCH_CLASS_SILENT		3994701						
ANR	3995041	Symbol	EG ( scope ) -> parent		3994701						
ANR	3995042	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		3994701						
ANR	3995043	Symbol	* EG		3994701						
ANR	3995044	Symbol	zend_get_called_scope		3994701						
ANR	3995045	Symbol	ZSTR_VAL		3994701						
ANR	3995046	Symbol	UNEXPECTED		3994701						
ANR	3995047	Symbol	ZEND_FETCH_CLASS_TRAIT		3994701						
ANR	3995048	Symbol	ZEND_FETCH_CLASS_MASK		3994701						
ANR	3995049	Symbol	scope		3994701						
ANR	3995050	Symbol	ZEND_FETCH_CLASS_INTERFACE		3994701						
ANR	3995051	Symbol	fetch_sub_type		3994701						
ANR	3995052	Symbol	class_name		3994701						
ANR	3995053	Symbol	zend_get_class_fetch_type		3994701						
ANR	3995054	Function	zend_fetch_class_by_name	1377:0:39102:39961							
ANR	3995055	FunctionDef	"zend_fetch_class_by_name (zend_string * class_name , const zval * key , int fetch_type)"		3995054	0					
ANR	3995056	CompoundStatement		1378:0:39213:39961	3995054	0					
ANR	3995057	IdentifierDeclStatement	zend_class_entry * ce ;	1379:1:39216:39236	3995054	0	True				
ANR	3995058	IdentifierDecl	* ce		3995054	0					
ANR	3995059	IdentifierDeclType	zend_class_entry *		3995054	0					
ANR	3995060	Identifier	ce		3995054	1					
ANR	3995061	IfStatement	if ( fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD )		3995054	1					
ANR	3995062	Condition	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD	1381:5:39244:39284	3995054	0	True				
ANR	3995063	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD		3995054	0		&			
ANR	3995064	Identifier	fetch_type		3995054	0					
ANR	3995065	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		3995054	1					
ANR	3995066	CompoundStatement		4:48:73:73	3995054	1					
ANR	3995067	ReturnStatement	"return zend_lookup_class_ex ( class_name , key , 0 ) ;"	1382:2:39291:39338	3995054	0	True				
ANR	3995068	CallExpression	"zend_lookup_class_ex ( class_name , key , 0 )"		3995054	0					
ANR	3995069	Callee	zend_lookup_class_ex		3995054	0					
ANR	3995070	Identifier	zend_lookup_class_ex		3995054	0					
ANR	3995071	ArgumentList	class_name		3995054	1					
ANR	3995072	Argument	class_name		3995054	0					
ANR	3995073	Identifier	class_name		3995054	0					
ANR	3995074	Argument	key		3995054	1					
ANR	3995075	Identifier	key		3995054	0					
ANR	3995076	Argument	0		3995054	2					
ANR	3995077	PrimaryExpression	0		3995054	0					
ANR	3995078	ElseStatement	else		3995054	0					
ANR	3995079	IfStatement	"if ( ( ce = zend_lookup_class_ex ( class_name , key , 1 ) ) == NULL )"		3995054	0					
ANR	3995080	Condition	"( ce = zend_lookup_class_ex ( class_name , key , 1 ) ) == NULL"	1383:12:39352:39406	3995054	0	True				
ANR	3995081	EqualityExpression	"( ce = zend_lookup_class_ex ( class_name , key , 1 ) ) == NULL"		3995054	0		==			
ANR	3995082	AssignmentExpression	"ce = zend_lookup_class_ex ( class_name , key , 1 )"		3995054	0		=			
ANR	3995083	Identifier	ce		3995054	0					
ANR	3995084	CallExpression	"zend_lookup_class_ex ( class_name , key , 1 )"		3995054	1					
ANR	3995085	Callee	zend_lookup_class_ex		3995054	0					
ANR	3995086	Identifier	zend_lookup_class_ex		3995054	0					
ANR	3995087	ArgumentList	class_name		3995054	1					
ANR	3995088	Argument	class_name		3995054	0					
ANR	3995089	Identifier	class_name		3995054	0					
ANR	3995090	Argument	key		3995054	1					
ANR	3995091	Identifier	key		3995054	0					
ANR	3995092	Argument	1		3995054	2					
ANR	3995093	PrimaryExpression	1		3995054	0					
ANR	3995094	Identifier	NULL		3995054	1					
ANR	3995095	CompoundStatement		6:69:195:195	3995054	1					
ANR	3995096	IfStatement	if ( ( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0 && ! EG ( exception ) )		3995054	0					
ANR	3995097	Condition	( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0 && ! EG ( exception )	1384:6:39417:39477	3995054	0	True				
ANR	3995098	AndExpression	( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0 && ! EG ( exception )		3995054	0		&&			
ANR	3995099	EqualityExpression	( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0		3995054	0		==			
ANR	3995100	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_SILENT		3995054	0		&			
ANR	3995101	Identifier	fetch_type		3995054	0					
ANR	3995102	Identifier	ZEND_FETCH_CLASS_SILENT		3995054	1					
ANR	3995103	PrimaryExpression	0		3995054	1					
ANR	3995104	UnaryOperationExpression	! EG ( exception )		3995054	1					
ANR	3995105	UnaryOperator	!		3995054	0					
ANR	3995106	CallExpression	EG ( exception )		3995054	1					
ANR	3995107	Callee	EG		3995054	0					
ANR	3995108	Identifier	EG		3995054	0					
ANR	3995109	ArgumentList	exception		3995054	1					
ANR	3995110	Argument	exception		3995054	0					
ANR	3995111	Identifier	exception		3995054	0					
ANR	3995112	CompoundStatement		7:69:266:266	3995054	1					
ANR	3995113	IfStatement	if ( ( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_INTERFACE )		3995054	0					
ANR	3995114	Condition	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_INTERFACE	1385:7:39489:39554	3995054	0	True				
ANR	3995115	EqualityExpression	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_INTERFACE		3995054	0		==			
ANR	3995116	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_MASK		3995054	0		&			
ANR	3995117	Identifier	fetch_type		3995054	0					
ANR	3995118	Identifier	ZEND_FETCH_CLASS_MASK		3995054	1					
ANR	3995119	Identifier	ZEND_FETCH_CLASS_INTERFACE		3995054	1					
ANR	3995120	CompoundStatement		8:75:343:343	3995054	1					
ANR	3995121	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"	1386:4:39563:39650	3995054	0	True				
ANR	3995122	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"		3995054	0					
ANR	3995123	Callee	zend_throw_or_error		3995054	0					
ANR	3995124	Identifier	zend_throw_or_error		3995054	0					
ANR	3995125	ArgumentList	fetch_type		3995054	1					
ANR	3995126	Argument	fetch_type		3995054	0					
ANR	3995127	Identifier	fetch_type		3995054	0					
ANR	3995128	Argument	NULL		3995054	1					
ANR	3995129	Identifier	NULL		3995054	0					
ANR	3995130	Argument	"""Interface '%s' not found"""		3995054	2					
ANR	3995131	PrimaryExpression	"""Interface '%s' not found"""		3995054	0					
ANR	3995132	Argument	ZSTR_VAL ( class_name )		3995054	3					
ANR	3995133	CallExpression	ZSTR_VAL ( class_name )		3995054	0					
ANR	3995134	Callee	ZSTR_VAL		3995054	0					
ANR	3995135	Identifier	ZSTR_VAL		3995054	0					
ANR	3995136	ArgumentList	class_name		3995054	1					
ANR	3995137	Argument	class_name		3995054	0					
ANR	3995138	Identifier	class_name		3995054	0					
ANR	3995139	ElseStatement	else		3995054	0					
ANR	3995140	IfStatement	if ( ( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_TRAIT )		3995054	0					
ANR	3995141	Condition	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_TRAIT	1387:14:39666:39727	3995054	0	True				
ANR	3995142	EqualityExpression	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_TRAIT		3995054	0		==			
ANR	3995143	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_MASK		3995054	0		&			
ANR	3995144	Identifier	fetch_type		3995054	0					
ANR	3995145	Identifier	ZEND_FETCH_CLASS_MASK		3995054	1					
ANR	3995146	Identifier	ZEND_FETCH_CLASS_TRAIT		3995054	1					
ANR	3995147	CompoundStatement		10:78:516:516	3995054	1					
ANR	3995148	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"	1388:4:39736:39819	3995054	0	True				
ANR	3995149	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"		3995054	0					
ANR	3995150	Callee	zend_throw_or_error		3995054	0					
ANR	3995151	Identifier	zend_throw_or_error		3995054	0					
ANR	3995152	ArgumentList	fetch_type		3995054	1					
ANR	3995153	Argument	fetch_type		3995054	0					
ANR	3995154	Identifier	fetch_type		3995054	0					
ANR	3995155	Argument	NULL		3995054	1					
ANR	3995156	Identifier	NULL		3995054	0					
ANR	3995157	Argument	"""Trait '%s' not found"""		3995054	2					
ANR	3995158	PrimaryExpression	"""Trait '%s' not found"""		3995054	0					
ANR	3995159	Argument	ZSTR_VAL ( class_name )		3995054	3					
ANR	3995160	CallExpression	ZSTR_VAL ( class_name )		3995054	0					
ANR	3995161	Callee	ZSTR_VAL		3995054	0					
ANR	3995162	Identifier	ZSTR_VAL		3995054	0					
ANR	3995163	ArgumentList	class_name		3995054	1					
ANR	3995164	Argument	class_name		3995054	0					
ANR	3995165	Identifier	class_name		3995054	0					
ANR	3995166	ElseStatement	else		3995054	0					
ANR	3995167	CompoundStatement		12:10:617:617	3995054	0					
ANR	3995168	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"	1390:4:39837:39920	3995054	0	True				
ANR	3995169	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"		3995054	0					
ANR	3995170	Callee	zend_throw_or_error		3995054	0					
ANR	3995171	Identifier	zend_throw_or_error		3995054	0					
ANR	3995172	ArgumentList	fetch_type		3995054	1					
ANR	3995173	Argument	fetch_type		3995054	0					
ANR	3995174	Identifier	fetch_type		3995054	0					
ANR	3995175	Argument	NULL		3995054	1					
ANR	3995176	Identifier	NULL		3995054	0					
ANR	3995177	Argument	"""Class '%s' not found"""		3995054	2					
ANR	3995178	PrimaryExpression	"""Class '%s' not found"""		3995054	0					
ANR	3995179	Argument	ZSTR_VAL ( class_name )		3995054	3					
ANR	3995180	CallExpression	ZSTR_VAL ( class_name )		3995054	0					
ANR	3995181	Callee	ZSTR_VAL		3995054	0					
ANR	3995182	Identifier	ZSTR_VAL		3995054	0					
ANR	3995183	ArgumentList	class_name		3995054	1					
ANR	3995184	Argument	class_name		3995054	0					
ANR	3995185	Identifier	class_name		3995054	0					
ANR	3995186	ReturnStatement	return NULL ;	1393:2:39933:39944	3995054	1	True				
ANR	3995187	Identifier	NULL		3995054	0					
ANR	3995188	ReturnStatement	return ce ;	1395:1:39950:39959	3995054	2	True				
ANR	3995189	Identifier	ce		3995054	0					
ANR	3995190	ReturnType	zend_class_entry *		3995054	1					
ANR	3995191	Identifier	zend_fetch_class_by_name		3995054	2					
ANR	3995192	ParameterList	"zend_string * class_name , const zval * key , int fetch_type"		3995054	3					
ANR	3995193	Parameter	zend_string * class_name	1377:43:39145:39167	3995054	0	True				
ANR	3995194	ParameterType	zend_string *		3995054	0					
ANR	3995195	Identifier	class_name		3995054	1					
ANR	3995196	Parameter	const zval * key	1377:68:39170:39184	3995054	1	True				
ANR	3995197	ParameterType	const zval *		3995054	0					
ANR	3995198	Identifier	key		3995054	1					
ANR	3995199	Parameter	int fetch_type	1377:85:39187:39200	3995054	2	True				
ANR	3995200	ParameterType	int		3995054	0					
ANR	3995201	Identifier	fetch_type		3995054	1					
ANR	3995202	CFGEntryNode	ENTRY		3995054		True				
ANR	3995203	CFGExitNode	EXIT		3995054		True				
ANR	3995204	Symbol	zend_lookup_class_ex		3995054						
ANR	3995205	Symbol	exception		3995054						
ANR	3995206	Symbol	fetch_type		3995054						
ANR	3995207	Symbol	ce		3995054						
ANR	3995208	Symbol	EG		3995054						
ANR	3995209	Symbol	NULL		3995054						
ANR	3995210	Symbol	ZEND_FETCH_CLASS_SILENT		3995054						
ANR	3995211	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		3995054						
ANR	3995212	Symbol	ZSTR_VAL		3995054						
ANR	3995213	Symbol	ZEND_FETCH_CLASS_TRAIT		3995054						
ANR	3995214	Symbol	ZEND_FETCH_CLASS_MASK		3995054						
ANR	3995215	Symbol	ZEND_FETCH_CLASS_INTERFACE		3995054						
ANR	3995216	Symbol	class_name		3995054						
ANR	3995217	Symbol	key		3995054						
ANR	3995218	ClassDef	_zend_abstract_info	1407:8:40345:40463							
ANR	3995219	DeclStmt									
ANR	3995220	Decl							zend_function	zend_function * [ MAX_ABSTRACT_INFO_CNT + 1 ]	afn
ANR	3995221	DeclStmt									
ANR	3995222	Decl							int	int	cnt
ANR	3995223	DeclStmt									
ANR	3995224	Decl							int	int	ctor
ANR	3995225	DeclStmt									
ANR	3995226	Decl							_zend_abstract_info	_zend_abstract_info	zend_abstract_info
ANR	3995227	Function	zend_verify_abstract_class_function	1413:0:40466:40864							
ANR	3995228	FunctionDef	"zend_verify_abstract_class_function (zend_function * fn , zend_abstract_info * ai)"		3995227	0					
ANR	3995229	CompoundStatement		1414:0:40567:40864	3995227	0					
ANR	3995230	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		3995227	0					
ANR	3995231	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1415:5:40574:40612	3995227	0	True				
ANR	3995232	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		3995227	0		&			
ANR	3995233	MemberAccess	fn -> common . fn_flags		3995227	0					
ANR	3995234	PtrMemberAccess	fn -> common		3995227	0					
ANR	3995235	Identifier	fn		3995227	0					
ANR	3995236	Identifier	common		3995227	1					
ANR	3995237	Identifier	fn_flags		3995227	1					
ANR	3995238	Identifier	ZEND_ACC_ABSTRACT		3995227	1					
ANR	3995239	CompoundStatement		2:46:47:47	3995227	1					
ANR	3995240	IfStatement	if ( ai -> cnt < MAX_ABSTRACT_INFO_CNT )		3995227	0					
ANR	3995241	Condition	ai -> cnt < MAX_ABSTRACT_INFO_CNT	1416:6:40623:40653	3995227	0	True				
ANR	3995242	RelationalExpression	ai -> cnt < MAX_ABSTRACT_INFO_CNT		3995227	0		<			
ANR	3995243	PtrMemberAccess	ai -> cnt		3995227	0					
ANR	3995244	Identifier	ai		3995227	0					
ANR	3995245	Identifier	cnt		3995227	1					
ANR	3995246	Identifier	MAX_ABSTRACT_INFO_CNT		3995227	1					
ANR	3995247	CompoundStatement		3:39:88:88	3995227	1					
ANR	3995248	ExpressionStatement	ai -> afn [ ai -> cnt ] = fn	1417:3:40661:40682	3995227	0	True				
ANR	3995249	AssignmentExpression	ai -> afn [ ai -> cnt ] = fn		3995227	0		=			
ANR	3995250	ArrayIndexing	ai -> afn [ ai -> cnt ]		3995227	0					
ANR	3995251	PtrMemberAccess	ai -> afn		3995227	0					
ANR	3995252	Identifier	ai		3995227	0					
ANR	3995253	Identifier	afn		3995227	1					
ANR	3995254	PtrMemberAccess	ai -> cnt		3995227	1					
ANR	3995255	Identifier	ai		3995227	0					
ANR	3995256	Identifier	cnt		3995227	1					
ANR	3995257	Identifier	fn		3995227	1					
ANR	3995258	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_CTOR )		3995227	1					
ANR	3995259	Condition	fn -> common . fn_flags & ZEND_ACC_CTOR	1419:6:40694:40728	3995227	0	True				
ANR	3995260	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_CTOR		3995227	0		&			
ANR	3995261	MemberAccess	fn -> common . fn_flags		3995227	0					
ANR	3995262	PtrMemberAccess	fn -> common		3995227	0					
ANR	3995263	Identifier	fn		3995227	0					
ANR	3995264	Identifier	common		3995227	1					
ANR	3995265	Identifier	fn_flags		3995227	1					
ANR	3995266	Identifier	ZEND_ACC_CTOR		3995227	1					
ANR	3995267	CompoundStatement		6:43:163:163	3995227	1					
ANR	3995268	IfStatement	if ( ! ai -> ctor )		3995227	0					
ANR	3995269	Condition	! ai -> ctor	1420:7:40740:40748	3995227	0	True				
ANR	3995270	UnaryOperationExpression	! ai -> ctor		3995227	0					
ANR	3995271	UnaryOperator	!		3995227	0					
ANR	3995272	PtrMemberAccess	ai -> ctor		3995227	1					
ANR	3995273	Identifier	ai		3995227	0					
ANR	3995274	Identifier	ctor		3995227	1					
ANR	3995275	CompoundStatement		7:18:183:183	3995227	1					
ANR	3995276	ExpressionStatement	ai -> cnt ++	1421:4:40757:40766	3995227	0	True				
ANR	3995277	PostIncDecOperationExpression	ai -> cnt ++		3995227	0					
ANR	3995278	PtrMemberAccess	ai -> cnt		3995227	0					
ANR	3995279	Identifier	ai		3995227	0					
ANR	3995280	Identifier	cnt		3995227	1					
ANR	3995281	IncDec	++		3995227	1					
ANR	3995282	ExpressionStatement	ai -> ctor = 1	1422:4:40772:40784	3995227	1	True				
ANR	3995283	AssignmentExpression	ai -> ctor = 1		3995227	0		=			
ANR	3995284	PtrMemberAccess	ai -> ctor		3995227	0					
ANR	3995285	Identifier	ai		3995227	0					
ANR	3995286	Identifier	ctor		3995227	1					
ANR	3995287	PrimaryExpression	1		3995227	1					
ANR	3995288	ElseStatement	else		3995227	0					
ANR	3995289	CompoundStatement		10:10:228:228	3995227	0					
ANR	3995290	ExpressionStatement	ai -> afn [ ai -> cnt ] = NULL	1424:4:40802:40825	3995227	0	True				
ANR	3995291	AssignmentExpression	ai -> afn [ ai -> cnt ] = NULL		3995227	0		=			
ANR	3995292	ArrayIndexing	ai -> afn [ ai -> cnt ]		3995227	0					
ANR	3995293	PtrMemberAccess	ai -> afn		3995227	0					
ANR	3995294	Identifier	ai		3995227	0					
ANR	3995295	Identifier	afn		3995227	1					
ANR	3995296	PtrMemberAccess	ai -> cnt		3995227	1					
ANR	3995297	Identifier	ai		3995227	0					
ANR	3995298	Identifier	cnt		3995227	1					
ANR	3995299	Identifier	NULL		3995227	1					
ANR	3995300	ElseStatement	else		3995227	0					
ANR	3995301	CompoundStatement		13:9:273:273	3995227	0					
ANR	3995302	ExpressionStatement	ai -> cnt ++	1427:3:40846:40855	3995227	0	True				
ANR	3995303	PostIncDecOperationExpression	ai -> cnt ++		3995227	0					
ANR	3995304	PtrMemberAccess	ai -> cnt		3995227	0					
ANR	3995305	Identifier	ai		3995227	0					
ANR	3995306	Identifier	cnt		3995227	1					
ANR	3995307	IncDec	++		3995227	1					
ANR	3995308	ReturnType	static void		3995227	1					
ANR	3995309	Identifier	zend_verify_abstract_class_function		3995227	2					
ANR	3995310	ParameterList	"zend_function * fn , zend_abstract_info * ai"		3995227	3					
ANR	3995311	Parameter	zend_function * fn	1413:48:40514:40530	3995227	0	True				
ANR	3995312	ParameterType	zend_function *		3995227	0					
ANR	3995313	Identifier	fn		3995227	1					
ANR	3995314	Parameter	zend_abstract_info * ai	1413:67:40533:40554	3995227	1	True				
ANR	3995315	ParameterType	zend_abstract_info *		3995227	0					
ANR	3995316	Identifier	ai		3995227	1					
ANR	3995317	CFGEntryNode	ENTRY		3995227		True				
ANR	3995318	CFGExitNode	EXIT		3995227		True				
ANR	3995319	Symbol	fn -> common . fn_flags		3995227						
ANR	3995320	Symbol	NULL		3995227						
ANR	3995321	Symbol	ai -> cnt		3995227						
ANR	3995322	Symbol	ai -> afn		3995227						
ANR	3995323	Symbol	fn		3995227						
ANR	3995324	Symbol	ai		3995227						
ANR	3995325	Symbol	ai -> ctor		3995227						
ANR	3995326	Symbol	* fn		3995227						
ANR	3995327	Symbol	* ai		3995227						
ANR	3995328	Symbol	MAX_ABSTRACT_INFO_CNT		3995227						
ANR	3995329	Symbol	ZEND_ACC_ABSTRACT		3995227						
ANR	3995330	Symbol	fn -> common		3995227						
ANR	3995331	Symbol	* ai -> cnt		3995227						
ANR	3995332	Symbol	* ai -> afn		3995227						
ANR	3995333	Symbol	ZEND_ACC_CTOR		3995227						
ANR	3995334	Symbol	* * ai		3995227						
ANR	3995335	Function	zend_verify_abstract_class	1433:0:40877:41679							
ANR	3995336	FunctionDef	zend_verify_abstract_class (zend_class_entry * ce)		3995335	0					
ANR	3995337	CompoundStatement		1434:0:40941:41679	3995335	0					
ANR	3995338	IdentifierDeclStatement	zend_function * func ;	1435:1:40944:40963	3995335	0	True				
ANR	3995339	IdentifierDecl	* func		3995335	0					
ANR	3995340	IdentifierDeclType	zend_function *		3995335	0					
ANR	3995341	Identifier	func		3995335	1					
ANR	3995342	IdentifierDeclStatement	zend_abstract_info ai ;	1436:1:40966:40987	3995335	1	True				
ANR	3995343	IdentifierDecl	ai		3995335	0					
ANR	3995344	IdentifierDeclType	zend_abstract_info		3995335	0					
ANR	3995345	Identifier	ai		3995335	1					
ANR	3995346	IfStatement	if ( ( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS ) && ! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) ) )		3995335	2					
ANR	3995347	Condition	( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS ) && ! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )	1438:5:40995:41116	3995335	0	True				
ANR	3995348	AndExpression	( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS ) && ! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )		3995335	0		&&			
ANR	3995349	BitAndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3995335	0		&			
ANR	3995350	PtrMemberAccess	ce -> ce_flags		3995335	0					
ANR	3995351	Identifier	ce		3995335	0					
ANR	3995352	Identifier	ce_flags		3995335	1					
ANR	3995353	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3995335	1					
ANR	3995354	UnaryOperationExpression	! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )		3995335	1					
ANR	3995355	UnaryOperator	!		3995335	0					
ANR	3995356	BitAndExpression	ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS )		3995335	1		&			
ANR	3995357	PtrMemberAccess	ce -> ce_flags		3995335	0					
ANR	3995358	Identifier	ce		3995335	0					
ANR	3995359	Identifier	ce_flags		3995335	1					
ANR	3995360	InclusiveOrExpression	ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3995335	1		|			
ANR	3995361	Identifier	ZEND_ACC_TRAIT		3995335	0					
ANR	3995362	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3995335	1					
ANR	3995363	CompoundStatement		5:129:177:177	3995335	1					
ANR	3995364	ExpressionStatement	"memset ( & ai , 0 , sizeof ( ai ) )"	1439:2:41123:41149	3995335	0	True				
ANR	3995365	CallExpression	"memset ( & ai , 0 , sizeof ( ai ) )"		3995335	0					
ANR	3995366	Callee	memset		3995335	0					
ANR	3995367	Identifier	memset		3995335	0					
ANR	3995368	ArgumentList	& ai		3995335	1					
ANR	3995369	Argument	& ai		3995335	0					
ANR	3995370	UnaryOperationExpression	& ai		3995335	0					
ANR	3995371	UnaryOperator	&		3995335	0					
ANR	3995372	Identifier	ai		3995335	1					
ANR	3995373	Argument	0		3995335	1					
ANR	3995374	PrimaryExpression	0		3995335	0					
ANR	3995375	Argument	sizeof ( ai )		3995335	2					
ANR	3995376	SizeofExpression	sizeof ( ai )		3995335	0					
ANR	3995377	Sizeof	sizeof		3995335	0					
ANR	3995378	SizeofOperand	ai		3995335	1					
ANR	3995379	Statement	ZEND_HASH_FOREACH_PTR	1441:2:41154:41174	3995335	1	True				
ANR	3995380	Statement	(	1441:23:41175:41175	3995335	2	True				
ANR	3995381	Statement	&	1441:24:41176:41176	3995335	3	True				
ANR	3995382	Statement	ce	1441:25:41177:41178	3995335	4	True				
ANR	3995383	Statement	->	1441:27:41179:41180	3995335	5	True				
ANR	3995384	Statement	function_table	1441:29:41181:41194	3995335	6	True				
ANR	3995385	Statement	","	1441:43:41195:41195	3995335	7	True				
ANR	3995386	Statement	func	1441:45:41197:41200	3995335	8	True				
ANR	3995387	Statement	)	1441:49:41201:41201	3995335	9	True				
ANR	3995388	CompoundStatement		8:51:261:261	3995335	10					
ANR	3995389	ExpressionStatement	"zend_verify_abstract_class_function ( func , & ai )"	1442:3:41208:41254	3995335	0	True				
ANR	3995390	CallExpression	"zend_verify_abstract_class_function ( func , & ai )"		3995335	0					
ANR	3995391	Callee	zend_verify_abstract_class_function		3995335	0					
ANR	3995392	Identifier	zend_verify_abstract_class_function		3995335	0					
ANR	3995393	ArgumentList	func		3995335	1					
ANR	3995394	Argument	func		3995335	0					
ANR	3995395	Identifier	func		3995335	0					
ANR	3995396	Argument	& ai		3995335	1					
ANR	3995397	UnaryOperationExpression	& ai		3995335	0					
ANR	3995398	UnaryOperator	&		3995335	0					
ANR	3995399	Identifier	ai		3995335	1					
ANR	3995400	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1443:4:41260:41283	3995335	11	True				
ANR	3995401	CallExpression	ZEND_HASH_FOREACH_END ( )		3995335	0					
ANR	3995402	Callee	ZEND_HASH_FOREACH_END		3995335	0					
ANR	3995403	Identifier	ZEND_HASH_FOREACH_END		3995335	0					
ANR	3995404	ArgumentList			3995335	1					
ANR	3995405	IfStatement	if ( ai . cnt )		3995335	12					
ANR	3995406	Condition	ai . cnt	1445:6:41292:41297	3995335	0	True				
ANR	3995407	MemberAccess	ai . cnt		3995335	0					
ANR	3995408	Identifier	ai		3995335	0					
ANR	3995409	Identifier	cnt		3995335	1					
ANR	3995410	CompoundStatement		12:14:358:358	3995335	1					
ANR	3995411	Statement	zend_error_noreturn	1446:3:41305:41323	3995335	0	True				
ANR	3995412	Statement	(	1446:22:41324:41324	3995335	1	True				
ANR	3995413	Statement	E_ERROR	1446:23:41325:41331	3995335	2	True				
ANR	3995414	Statement	","	1446:30:41332:41332	3995335	3	True				
ANR	3995415	Statement	"""Class %s contains %d abstract method%s and must therefore be declared abstract or implement the remaining methods ("""	1446:32:41334:41450	3995335	4	True				
ANR	3995416	Statement	MAX_ABSTRACT_INFO_FMT	1446:150:41452:41472	3995335	5	True				
ANR	3995417	Statement	MAX_ABSTRACT_INFO_FMT	1446:172:41474:41494	3995335	6	True				
ANR	3995418	Statement	MAX_ABSTRACT_INFO_FMT	1446:194:41496:41516	3995335	7	True				
ANR	3995419	Statement	""")"""	1446:216:41518:41520	3995335	8	True				
ANR	3995420	Statement	","	1446:219:41521:41521	3995335	9	True				
ANR	3995421	Statement	ZSTR_VAL	1447:4:41527:41534	3995335	10	True				
ANR	3995422	Statement	(	1447:12:41535:41535	3995335	11	True				
ANR	3995423	Statement	ce	1447:13:41536:41537	3995335	12	True				
ANR	3995424	Statement	->	1447:15:41538:41539	3995335	13	True				
ANR	3995425	Statement	name	1447:17:41540:41543	3995335	14	True				
ANR	3995426	Statement	)	1447:21:41544:41544	3995335	15	True				
ANR	3995427	Statement	","	1447:22:41545:41545	3995335	16	True				
ANR	3995428	Statement	ai	1447:24:41547:41548	3995335	17	True				
ANR	3995429	Statement	.	1447:26:41549:41549	3995335	18	True				
ANR	3995430	Statement	cnt	1447:27:41550:41552	3995335	19	True				
ANR	3995431	Statement	","	1447:30:41553:41553	3995335	20	True				
ANR	3995432	Statement	ai	1448:4:41559:41560	3995335	21	True				
ANR	3995433	Statement	.	1448:6:41561:41561	3995335	22	True				
ANR	3995434	Statement	cnt	1448:7:41562:41564	3995335	23	True				
ANR	3995435	Statement	>	1448:11:41566:41566	3995335	24	True				
ANR	3995436	Statement	1	1448:13:41568:41568	3995335	25	True				
ANR	3995437	Statement	?	1448:15:41570:41570	3995335	26	True				
ANR	3995438	Statement	"""s"""	1448:17:41572:41574	3995335	27	True				
ANR	3995439	Statement	:	1448:21:41576:41576	3995335	28	True				
ANR	3995440	Statement	""""""	1448:23:41578:41579	3995335	29	True				
ANR	3995441	Statement	","	1448:25:41580:41580	3995335	30	True				
ANR	3995442	Statement	DISPLAY_ABSTRACT_FN	1449:4:41586:41604	3995335	31	True				
ANR	3995443	Statement	(	1449:23:41605:41605	3995335	32	True				
ANR	3995444	Statement	0	1449:24:41606:41606	3995335	33	True				
ANR	3995445	Statement	)	1449:25:41607:41607	3995335	34	True				
ANR	3995446	Statement	","	1449:26:41608:41608	3995335	35	True				
ANR	3995447	Statement	DISPLAY_ABSTRACT_FN	1450:4:41614:41632	3995335	36	True				
ANR	3995448	Statement	(	1450:23:41633:41633	3995335	37	True				
ANR	3995449	Statement	1	1450:24:41634:41634	3995335	38	True				
ANR	3995450	Statement	)	1450:25:41635:41635	3995335	39	True				
ANR	3995451	Statement	","	1450:26:41636:41636	3995335	40	True				
ANR	3995452	Statement	DISPLAY_ABSTRACT_FN	1451:4:41642:41660	3995335	41	True				
ANR	3995453	Statement	(	1451:23:41661:41661	3995335	42	True				
ANR	3995454	Statement	2	1451:24:41662:41662	3995335	43	True				
ANR	3995455	Statement	)	1451:25:41663:41663	3995335	44	True				
ANR	3995456	Statement	)	1452:4:41669:41669	3995335	45	True				
ANR	3995457	ExpressionStatement		1452:5:41670:41670	3995335	46	True				
ANR	3995458	ReturnType	void		3995335	1					
ANR	3995459	Identifier	zend_verify_abstract_class		3995335	2					
ANR	3995460	ParameterList	zend_class_entry * ce		3995335	3					
ANR	3995461	Parameter	zend_class_entry * ce	1433:32:40909:40928	3995335	0	True				
ANR	3995462	ParameterType	zend_class_entry *		3995335	0					
ANR	3995463	Identifier	ce		3995335	1					
ANR	3995464	CFGEntryNode	ENTRY		3995335		True				
ANR	3995465	CFGExitNode	EXIT		3995335		True				
ANR	3995466	Symbol	ce -> ce_flags		3995335						
ANR	3995467	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3995335						
ANR	3995468	Symbol	ce		3995335						
ANR	3995469	Symbol	& ai		3995335						
ANR	3995470	Symbol	func		3995335						
ANR	3995471	Symbol	ai		3995335						
ANR	3995472	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3995335						
ANR	3995473	Symbol	* ce		3995335						
ANR	3995474	Symbol	ai . cnt		3995335						
ANR	3995475	Symbol	ZEND_ACC_TRAIT		3995335						
ANR	3995476	Function	zend_delete_global_variable	1458:0:41692:41819							
ANR	3995477	FunctionDef	zend_delete_global_variable (zend_string * name)		3995476	0					
ANR	3995478	CompoundStatement		1459:0:41762:41819	3995476	0					
ANR	3995479	ReturnStatement	"return zend_hash_del_ind ( & EG ( symbol_table ) , name ) ;"	1460:4:41768:41817	3995476	0	True				
ANR	3995480	CallExpression	"zend_hash_del_ind ( & EG ( symbol_table ) , name )"		3995476	0					
ANR	3995481	Callee	zend_hash_del_ind		3995476	0					
ANR	3995482	Identifier	zend_hash_del_ind		3995476	0					
ANR	3995483	ArgumentList	& EG ( symbol_table )		3995476	1					
ANR	3995484	Argument	& EG ( symbol_table )		3995476	0					
ANR	3995485	UnaryOperationExpression	& EG ( symbol_table )		3995476	0					
ANR	3995486	UnaryOperator	&		3995476	0					
ANR	3995487	CallExpression	EG ( symbol_table )		3995476	1					
ANR	3995488	Callee	EG		3995476	0					
ANR	3995489	Identifier	EG		3995476	0					
ANR	3995490	ArgumentList	symbol_table		3995476	1					
ANR	3995491	Argument	symbol_table		3995476	0					
ANR	3995492	Identifier	symbol_table		3995476	0					
ANR	3995493	Argument	name		3995476	1					
ANR	3995494	Identifier	name		3995476	0					
ANR	3995495	ReturnType	ZEND_API int		3995476	1					
ANR	3995496	Identifier	zend_delete_global_variable		3995476	2					
ANR	3995497	ParameterList	zend_string * name		3995476	3					
ANR	3995498	Parameter	zend_string * name	1458:41:41733:41749	3995476	0	True				
ANR	3995499	ParameterType	zend_string *		3995476	0					
ANR	3995500	Identifier	name		3995476	1					
ANR	3995501	CFGEntryNode	ENTRY		3995476		True				
ANR	3995502	CFGExitNode	EXIT		3995476		True				
ANR	3995503	Symbol	zend_hash_del_ind		3995476						
ANR	3995504	Symbol	name		3995476						
ANR	3995505	Symbol	symbol_table		3995476						
ANR	3995506	Symbol	& EG		3995476						
ANR	3995507	Function	zend_rebuild_symbol_table	1464:0:41832:43202							
ANR	3995508	FunctionDef	zend_rebuild_symbol_table ()		3995507	0					
ANR	3995509	CompoundStatement		1465:0:41895:43202	3995507	0					
ANR	3995510	IdentifierDeclStatement	zend_execute_data * ex ;	1466:1:41898:41919	3995507	0	True				
ANR	3995511	IdentifierDecl	* ex		3995507	0					
ANR	3995512	IdentifierDeclType	zend_execute_data *		3995507	0					
ANR	3995513	Identifier	ex		3995507	1					
ANR	3995514	IdentifierDeclStatement	zend_array * symbol_table ;	1467:1:41922:41946	3995507	1	True				
ANR	3995515	IdentifierDecl	* symbol_table		3995507	0					
ANR	3995516	IdentifierDeclType	zend_array *		3995507	0					
ANR	3995517	Identifier	symbol_table		3995507	1					
ANR	3995518	ExpressionStatement	ex = EG ( current_execute_data )	1470:1:41994:42023	3995507	2	True				
ANR	3995519	AssignmentExpression	ex = EG ( current_execute_data )		3995507	0		=			
ANR	3995520	Identifier	ex		3995507	0					
ANR	3995521	CallExpression	EG ( current_execute_data )		3995507	1					
ANR	3995522	Callee	EG		3995507	0					
ANR	3995523	Identifier	EG		3995507	0					
ANR	3995524	ArgumentList	current_execute_data		3995507	1					
ANR	3995525	Argument	current_execute_data		3995507	0					
ANR	3995526	Identifier	current_execute_data		3995507	0					
ANR	3995527	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type ) ) )		3995507	3					
ANR	3995528	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type ) )	1471:8:42033:42091	3995507	0	True				
ANR	3995529	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type ) )		3995507	0		&&			
ANR	3995530	Identifier	ex		3995507	0					
ANR	3995531	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type )		3995507	1		||			
ANR	3995532	UnaryOperationExpression	! ex -> func		3995507	0					
ANR	3995533	UnaryOperator	!		3995507	0					
ANR	3995534	PtrMemberAccess	ex -> func		3995507	1					
ANR	3995535	Identifier	ex		3995507	0					
ANR	3995536	Identifier	func		3995507	1					
ANR	3995537	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> common . type )		3995507	1					
ANR	3995538	UnaryOperator	!		3995507	0					
ANR	3995539	CallExpression	ZEND_USER_CODE ( ex -> func -> common . type )		3995507	1					
ANR	3995540	Callee	ZEND_USER_CODE		3995507	0					
ANR	3995541	Identifier	ZEND_USER_CODE		3995507	0					
ANR	3995542	ArgumentList	ex -> func -> common . type		3995507	1					
ANR	3995543	Argument	ex -> func -> common . type		3995507	0					
ANR	3995544	MemberAccess	ex -> func -> common . type		3995507	0					
ANR	3995545	PtrMemberAccess	ex -> func -> common		3995507	0					
ANR	3995546	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995547	Identifier	ex		3995507	0					
ANR	3995548	Identifier	func		3995507	1					
ANR	3995549	Identifier	common		3995507	1					
ANR	3995550	Identifier	type		3995507	1					
ANR	3995551	CompoundStatement		7:69:198:198	3995507	1					
ANR	3995552	ExpressionStatement	ex = ex -> prev_execute_data	1472:2:42098:42124	3995507	0	True				
ANR	3995553	AssignmentExpression	ex = ex -> prev_execute_data		3995507	0		=			
ANR	3995554	Identifier	ex		3995507	0					
ANR	3995555	PtrMemberAccess	ex -> prev_execute_data		3995507	1					
ANR	3995556	Identifier	ex		3995507	0					
ANR	3995557	Identifier	prev_execute_data		3995507	1					
ANR	3995558	IfStatement	if ( ! ex )		3995507	4					
ANR	3995559	Condition	! ex	1474:5:42134:42136	3995507	0	True				
ANR	3995560	UnaryOperationExpression	! ex		3995507	0					
ANR	3995561	UnaryOperator	!		3995507	0					
ANR	3995562	Identifier	ex		3995507	1					
ANR	3995563	CompoundStatement		10:10:243:243	3995507	1					
ANR	3995564	ReturnStatement	return NULL ;	1475:2:42143:42154	3995507	0	True				
ANR	3995565	Identifier	NULL		3995507	0					
ANR	3995566	IfStatement	if ( ex -> symbol_table )		3995507	5					
ANR	3995567	Condition	ex -> symbol_table	1477:5:42164:42179	3995507	0	True				
ANR	3995568	PtrMemberAccess	ex -> symbol_table		3995507	0					
ANR	3995569	Identifier	ex		3995507	0					
ANR	3995570	Identifier	symbol_table		3995507	1					
ANR	3995571	CompoundStatement		13:23:286:286	3995507	1					
ANR	3995572	ReturnStatement	return ex -> symbol_table ;	1478:2:42186:42209	3995507	0	True				
ANR	3995573	PtrMemberAccess	ex -> symbol_table		3995507	0					
ANR	3995574	Identifier	ex		3995507	0					
ANR	3995575	Identifier	symbol_table		3995507	1					
ANR	3995576	IfStatement	if ( EG ( symtable_cache_ptr ) >= EG ( symtable_cache ) )		3995507	6					
ANR	3995577	Condition	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )	1481:5:42220:42263	3995507	0	True				
ANR	3995578	RelationalExpression	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )		3995507	0		>=			
ANR	3995579	CallExpression	EG ( symtable_cache_ptr )		3995507	0					
ANR	3995580	Callee	EG		3995507	0					
ANR	3995581	Identifier	EG		3995507	0					
ANR	3995582	ArgumentList	symtable_cache_ptr		3995507	1					
ANR	3995583	Argument	symtable_cache_ptr		3995507	0					
ANR	3995584	Identifier	symtable_cache_ptr		3995507	0					
ANR	3995585	CallExpression	EG ( symtable_cache )		3995507	1					
ANR	3995586	Callee	EG		3995507	0					
ANR	3995587	Identifier	EG		3995507	0					
ANR	3995588	ArgumentList	symtable_cache		3995507	1					
ANR	3995589	Argument	symtable_cache		3995507	0					
ANR	3995590	Identifier	symtable_cache		3995507	0					
ANR	3995591	CompoundStatement		17:51:370:370	3995507	1					
ANR	3995592	ExpressionStatement	symbol_table = ex -> symbol_table = * ( EG ( symtable_cache_ptr ) -- )	1483:2:42348:42409	3995507	0	True				
ANR	3995593	AssignmentExpression	symbol_table = ex -> symbol_table = * ( EG ( symtable_cache_ptr ) -- )		3995507	0		=			
ANR	3995594	Identifier	symbol_table		3995507	0					
ANR	3995595	AssignmentExpression	ex -> symbol_table = * ( EG ( symtable_cache_ptr ) -- )		3995507	1		=			
ANR	3995596	PtrMemberAccess	ex -> symbol_table		3995507	0					
ANR	3995597	Identifier	ex		3995507	0					
ANR	3995598	Identifier	symbol_table		3995507	1					
ANR	3995599	UnaryOperationExpression	* ( EG ( symtable_cache_ptr ) -- )		3995507	1					
ANR	3995600	UnaryOperator	*		3995507	0					
ANR	3995601	PostIncDecOperationExpression	EG ( symtable_cache_ptr ) --		3995507	1					
ANR	3995602	CallExpression	EG ( symtable_cache_ptr )		3995507	0					
ANR	3995603	Callee	EG		3995507	0					
ANR	3995604	Identifier	EG		3995507	0					
ANR	3995605	ArgumentList	symtable_cache_ptr		3995507	1					
ANR	3995606	Argument	symtable_cache_ptr		3995507	0					
ANR	3995607	Identifier	symtable_cache_ptr		3995507	0					
ANR	3995608	IncDec	--		3995507	1					
ANR	3995609	IfStatement	if ( ! ex -> func -> op_array . last_var )		3995507	1					
ANR	3995610	Condition	! ex -> func -> op_array . last_var	1484:6:42417:42444	3995507	0	True				
ANR	3995611	UnaryOperationExpression	! ex -> func -> op_array . last_var		3995507	0					
ANR	3995612	UnaryOperator	!		3995507	0					
ANR	3995613	MemberAccess	ex -> func -> op_array . last_var		3995507	1					
ANR	3995614	PtrMemberAccess	ex -> func -> op_array		3995507	0					
ANR	3995615	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995616	Identifier	ex		3995507	0					
ANR	3995617	Identifier	func		3995507	1					
ANR	3995618	Identifier	op_array		3995507	1					
ANR	3995619	Identifier	last_var		3995507	1					
ANR	3995620	CompoundStatement		20:36:551:551	3995507	1					
ANR	3995621	ReturnStatement	return symbol_table ;	1485:3:42452:42471	3995507	0	True				
ANR	3995622	Identifier	symbol_table		3995507	0					
ANR	3995623	ExpressionStatement	"zend_hash_extend ( symbol_table , ex -> func -> op_array . last_var , 0 )"	1487:2:42479:42541	3995507	2	True				
ANR	3995624	CallExpression	"zend_hash_extend ( symbol_table , ex -> func -> op_array . last_var , 0 )"		3995507	0					
ANR	3995625	Callee	zend_hash_extend		3995507	0					
ANR	3995626	Identifier	zend_hash_extend		3995507	0					
ANR	3995627	ArgumentList	symbol_table		3995507	1					
ANR	3995628	Argument	symbol_table		3995507	0					
ANR	3995629	Identifier	symbol_table		3995507	0					
ANR	3995630	Argument	ex -> func -> op_array . last_var		3995507	1					
ANR	3995631	MemberAccess	ex -> func -> op_array . last_var		3995507	0					
ANR	3995632	PtrMemberAccess	ex -> func -> op_array		3995507	0					
ANR	3995633	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995634	Identifier	ex		3995507	0					
ANR	3995635	Identifier	func		3995507	1					
ANR	3995636	Identifier	op_array		3995507	1					
ANR	3995637	Identifier	last_var		3995507	1					
ANR	3995638	Argument	0		3995507	2					
ANR	3995639	PrimaryExpression	0		3995507	0					
ANR	3995640	ElseStatement	else		3995507	0					
ANR	3995641	CompoundStatement		24:8:655:655	3995507	0					
ANR	3995642	ExpressionStatement	symbol_table = ex -> symbol_table = emalloc ( sizeof ( zend_array ) )	1489:2:42555:42616	3995507	0	True				
ANR	3995643	AssignmentExpression	symbol_table = ex -> symbol_table = emalloc ( sizeof ( zend_array ) )		3995507	0		=			
ANR	3995644	Identifier	symbol_table		3995507	0					
ANR	3995645	AssignmentExpression	ex -> symbol_table = emalloc ( sizeof ( zend_array ) )		3995507	1		=			
ANR	3995646	PtrMemberAccess	ex -> symbol_table		3995507	0					
ANR	3995647	Identifier	ex		3995507	0					
ANR	3995648	Identifier	symbol_table		3995507	1					
ANR	3995649	CallExpression	emalloc ( sizeof ( zend_array ) )		3995507	1					
ANR	3995650	Callee	emalloc		3995507	0					
ANR	3995651	Identifier	emalloc		3995507	0					
ANR	3995652	ArgumentList	sizeof ( zend_array )		3995507	1					
ANR	3995653	Argument	sizeof ( zend_array )		3995507	0					
ANR	3995654	SizeofExpression	sizeof ( zend_array )		3995507	0					
ANR	3995655	Sizeof	sizeof		3995507	0					
ANR	3995656	SizeofOperand	zend_array		3995507	1					
ANR	3995657	ExpressionStatement	"zend_hash_init ( symbol_table , ex -> func -> op_array . last_var , NULL , ZVAL_PTR_DTOR , 0 )"	1490:2:42620:42701	3995507	1	True				
ANR	3995658	CallExpression	"zend_hash_init ( symbol_table , ex -> func -> op_array . last_var , NULL , ZVAL_PTR_DTOR , 0 )"		3995507	0					
ANR	3995659	Callee	zend_hash_init		3995507	0					
ANR	3995660	Identifier	zend_hash_init		3995507	0					
ANR	3995661	ArgumentList	symbol_table		3995507	1					
ANR	3995662	Argument	symbol_table		3995507	0					
ANR	3995663	Identifier	symbol_table		3995507	0					
ANR	3995664	Argument	ex -> func -> op_array . last_var		3995507	1					
ANR	3995665	MemberAccess	ex -> func -> op_array . last_var		3995507	0					
ANR	3995666	PtrMemberAccess	ex -> func -> op_array		3995507	0					
ANR	3995667	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995668	Identifier	ex		3995507	0					
ANR	3995669	Identifier	func		3995507	1					
ANR	3995670	Identifier	op_array		3995507	1					
ANR	3995671	Identifier	last_var		3995507	1					
ANR	3995672	Argument	NULL		3995507	2					
ANR	3995673	Identifier	NULL		3995507	0					
ANR	3995674	Argument	ZVAL_PTR_DTOR		3995507	3					
ANR	3995675	Identifier	ZVAL_PTR_DTOR		3995507	0					
ANR	3995676	Argument	0		3995507	4					
ANR	3995677	PrimaryExpression	0		3995507	0					
ANR	3995678	IfStatement	if ( ! ex -> func -> op_array . last_var )		3995507	2					
ANR	3995679	Condition	! ex -> func -> op_array . last_var	1491:6:42709:42736	3995507	0	True				
ANR	3995680	UnaryOperationExpression	! ex -> func -> op_array . last_var		3995507	0					
ANR	3995681	UnaryOperator	!		3995507	0					
ANR	3995682	MemberAccess	ex -> func -> op_array . last_var		3995507	1					
ANR	3995683	PtrMemberAccess	ex -> func -> op_array		3995507	0					
ANR	3995684	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995685	Identifier	ex		3995507	0					
ANR	3995686	Identifier	func		3995507	1					
ANR	3995687	Identifier	op_array		3995507	1					
ANR	3995688	Identifier	last_var		3995507	1					
ANR	3995689	CompoundStatement		27:36:843:843	3995507	1					
ANR	3995690	ReturnStatement	return symbol_table ;	1492:3:42744:42763	3995507	0	True				
ANR	3995691	Identifier	symbol_table		3995507	0					
ANR	3995692	ExpressionStatement	"zend_hash_real_init ( symbol_table , 0 )"	1494:2:42771:42807	3995507	3	True				
ANR	3995693	CallExpression	"zend_hash_real_init ( symbol_table , 0 )"		3995507	0					
ANR	3995694	Callee	zend_hash_real_init		3995507	0					
ANR	3995695	Identifier	zend_hash_real_init		3995507	0					
ANR	3995696	ArgumentList	symbol_table		3995507	1					
ANR	3995697	Argument	symbol_table		3995507	0					
ANR	3995698	Identifier	symbol_table		3995507	0					
ANR	3995699	Argument	0		3995507	1					
ANR	3995700	PrimaryExpression	0		3995507	0					
ANR	3995701	IfStatement	if ( EXPECTED ( ex -> func -> op_array . last_var ) )		3995507	7					
ANR	3995702	Condition	EXPECTED ( ex -> func -> op_array . last_var )	1497:5:42889:42925	3995507	0	True				
ANR	3995703	CallExpression	EXPECTED ( ex -> func -> op_array . last_var )		3995507	0					
ANR	3995704	Callee	EXPECTED		3995507	0					
ANR	3995705	Identifier	EXPECTED		3995507	0					
ANR	3995706	ArgumentList	ex -> func -> op_array . last_var		3995507	1					
ANR	3995707	Argument	ex -> func -> op_array . last_var		3995507	0					
ANR	3995708	MemberAccess	ex -> func -> op_array . last_var		3995507	0					
ANR	3995709	PtrMemberAccess	ex -> func -> op_array		3995507	0					
ANR	3995710	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995711	Identifier	ex		3995507	0					
ANR	3995712	Identifier	func		3995507	1					
ANR	3995713	Identifier	op_array		3995507	1					
ANR	3995714	Identifier	last_var		3995507	1					
ANR	3995715	CompoundStatement		36:2:1140:1176	3995507	1					
ANR	3995716	IdentifierDeclStatement	zend_string * * str = ex -> func -> op_array . vars ;	1498:2:42932:42975	3995507	0	True				
ANR	3995717	IdentifierDecl	* * str = ex -> func -> op_array . vars		3995507	0					
ANR	3995718	IdentifierDeclType	zend_string * *		3995507	0					
ANR	3995719	Identifier	str		3995507	1					
ANR	3995720	AssignmentExpression	* * str = ex -> func -> op_array . vars		3995507	2		=			
ANR	3995721	Identifier	str		3995507	0					
ANR	3995722	MemberAccess	ex -> func -> op_array . vars		3995507	1					
ANR	3995723	PtrMemberAccess	ex -> func -> op_array		3995507	0					
ANR	3995724	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995725	Identifier	ex		3995507	0					
ANR	3995726	Identifier	func		3995507	1					
ANR	3995727	Identifier	op_array		3995507	1					
ANR	3995728	Identifier	vars		3995507	1					
ANR	3995729	IdentifierDeclStatement	zend_string * * end = str + ex -> func -> op_array . last_var ;	1499:2:42979:43032	3995507	1	True				
ANR	3995730	IdentifierDecl	* * end = str + ex -> func -> op_array . last_var		3995507	0					
ANR	3995731	IdentifierDeclType	zend_string * *		3995507	0					
ANR	3995732	Identifier	end		3995507	1					
ANR	3995733	AssignmentExpression	* * end = str + ex -> func -> op_array . last_var		3995507	2		=			
ANR	3995734	Identifier	end		3995507	0					
ANR	3995735	AdditiveExpression	str + ex -> func -> op_array . last_var		3995507	1		+			
ANR	3995736	Identifier	str		3995507	0					
ANR	3995737	MemberAccess	ex -> func -> op_array . last_var		3995507	1					
ANR	3995738	PtrMemberAccess	ex -> func -> op_array		3995507	0					
ANR	3995739	PtrMemberAccess	ex -> func		3995507	0					
ANR	3995740	Identifier	ex		3995507	0					
ANR	3995741	Identifier	func		3995507	1					
ANR	3995742	Identifier	op_array		3995507	1					
ANR	3995743	Identifier	last_var		3995507	1					
ANR	3995744	IdentifierDeclStatement	"zval * var = ZEND_CALL_VAR_NUM ( ex , 0 ) ;"	1500:2:43036:43072	3995507	2	True				
ANR	3995745	IdentifierDecl	"* var = ZEND_CALL_VAR_NUM ( ex , 0 )"		3995507	0					
ANR	3995746	IdentifierDeclType	zval *		3995507	0					
ANR	3995747	Identifier	var		3995507	1					
ANR	3995748	AssignmentExpression	"* var = ZEND_CALL_VAR_NUM ( ex , 0 )"		3995507	2		=			
ANR	3995749	Identifier	var		3995507	0					
ANR	3995750	CallExpression	"ZEND_CALL_VAR_NUM ( ex , 0 )"		3995507	1					
ANR	3995751	Callee	ZEND_CALL_VAR_NUM		3995507	0					
ANR	3995752	Identifier	ZEND_CALL_VAR_NUM		3995507	0					
ANR	3995753	ArgumentList	ex		3995507	1					
ANR	3995754	Argument	ex		3995507	0					
ANR	3995755	Identifier	ex		3995507	0					
ANR	3995756	Argument	0		3995507	1					
ANR	3995757	PrimaryExpression	0		3995507	0					
ANR	3995758	DoStatement	do		3995507	3					
ANR	3995759	CompoundStatement		38:5:1184:1184	3995507	0					
ANR	3995760	ExpressionStatement	"_zend_hash_append_ind ( symbol_table , * str , var )"	1503:3:43085:43131	3995507	0	True				
ANR	3995761	CallExpression	"_zend_hash_append_ind ( symbol_table , * str , var )"		3995507	0					
ANR	3995762	Callee	_zend_hash_append_ind		3995507	0					
ANR	3995763	Identifier	_zend_hash_append_ind		3995507	0					
ANR	3995764	ArgumentList	symbol_table		3995507	1					
ANR	3995765	Argument	symbol_table		3995507	0					
ANR	3995766	Identifier	symbol_table		3995507	0					
ANR	3995767	Argument	* str		3995507	1					
ANR	3995768	UnaryOperationExpression	* str		3995507	0					
ANR	3995769	UnaryOperator	*		3995507	0					
ANR	3995770	Identifier	str		3995507	1					
ANR	3995771	Argument	var		3995507	2					
ANR	3995772	Identifier	var		3995507	0					
ANR	3995773	ExpressionStatement	str ++	1504:3:43136:43141	3995507	1	True				
ANR	3995774	PostIncDecOperationExpression	str ++		3995507	0					
ANR	3995775	Identifier	str		3995507	0					
ANR	3995776	IncDec	++		3995507	1					
ANR	3995777	ExpressionStatement	var ++	1505:3:43146:43151	3995507	2	True				
ANR	3995778	PostIncDecOperationExpression	var ++		3995507	0					
ANR	3995779	Identifier	var		3995507	0					
ANR	3995780	IncDec	++		3995507	1					
ANR	3995781	Condition	str != end	1506:11:43164:43173	3995507	1	True				
ANR	3995782	EqualityExpression	str != end		3995507	0		!=			
ANR	3995783	Identifier	str		3995507	0					
ANR	3995784	Identifier	end		3995507	1					
ANR	3995785	ReturnStatement	return symbol_table ;	1508:1:43181:43200	3995507	8	True				
ANR	3995786	Identifier	symbol_table		3995507	0					
ANR	3995787	ReturnType	ZEND_API zend_array *		3995507	1					
ANR	3995788	Identifier	zend_rebuild_symbol_table		3995507	2					
ANR	3995789	ParameterList			3995507	3					
ANR	3995790	CFGEntryNode	ENTRY		3995507		True				
ANR	3995791	CFGExitNode	EXIT		3995507		True				
ANR	3995792	Symbol	symtable_cache		3995507						
ANR	3995793	Symbol	ex -> func -> op_array		3995507						
ANR	3995794	Symbol	current_execute_data		3995507						
ANR	3995795	Symbol	ex -> func		3995507						
ANR	3995796	Symbol	ex -> func -> op_array . vars		3995507						
ANR	3995797	Symbol	emalloc		3995507						
ANR	3995798	Symbol	ex -> func -> op_array . last_var		3995507						
ANR	3995799	Symbol	end		3995507						
ANR	3995800	Symbol	* str		3995507						
ANR	3995801	Symbol	ex -> func -> common		3995507						
ANR	3995802	Symbol	* * ex		3995507						
ANR	3995803	Symbol	* ( EG ( symtable_cache_ptr ) -- )		3995507						
ANR	3995804	Symbol	EG		3995507						
ANR	3995805	Symbol	ex -> func -> common . type		3995507						
ANR	3995806	Symbol	ex -> prev_execute_data		3995507						
ANR	3995807	Symbol	NULL		3995507						
ANR	3995808	Symbol	symtable_cache_ptr		3995507						
ANR	3995809	Symbol	var		3995507						
ANR	3995810	Symbol	ex -> symbol_table		3995507						
ANR	3995811	Symbol	symbol_table		3995507						
ANR	3995812	Symbol	ZVAL_PTR_DTOR		3995507						
ANR	3995813	Symbol	str		3995507						
ANR	3995814	Symbol	ex		3995507						
ANR	3995815	Symbol	ZEND_CALL_VAR_NUM		3995507						
ANR	3995816	Symbol	ZEND_USER_CODE		3995507						
ANR	3995817	Symbol	* ex -> func		3995507						
ANR	3995818	Symbol	* ex		3995507						
ANR	3995819	Symbol	EXPECTED		3995507						
ANR	3995820	Function	zend_attach_symbol_table	1512:0:43215:44043							
ANR	3995821	FunctionDef	zend_attach_symbol_table (zend_execute_data * execute_data)		3995820	0					
ANR	3995822	CompoundStatement		1513:0:43297:44043	3995820	0					
ANR	3995823	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1514:1:43300:43355	3995820	0	True				
ANR	3995824	IdentifierDecl	* op_array = & execute_data -> func -> op_array		3995820	0					
ANR	3995825	IdentifierDeclType	zend_op_array *		3995820	0					
ANR	3995826	Identifier	op_array		3995820	1					
ANR	3995827	AssignmentExpression	* op_array = & execute_data -> func -> op_array		3995820	2		=			
ANR	3995828	Identifier	op_array		3995820	0					
ANR	3995829	UnaryOperationExpression	& execute_data -> func -> op_array		3995820	1					
ANR	3995830	UnaryOperator	&		3995820	0					
ANR	3995831	PtrMemberAccess	execute_data -> func -> op_array		3995820	1					
ANR	3995832	PtrMemberAccess	execute_data -> func		3995820	0					
ANR	3995833	Identifier	execute_data		3995820	0					
ANR	3995834	Identifier	func		3995820	1					
ANR	3995835	Identifier	op_array		3995820	1					
ANR	3995836	IdentifierDeclStatement	HashTable * ht = execute_data -> symbol_table ;	1515:1:43358:43400	3995820	1	True				
ANR	3995837	IdentifierDecl	* ht = execute_data -> symbol_table		3995820	0					
ANR	3995838	IdentifierDeclType	HashTable *		3995820	0					
ANR	3995839	Identifier	ht		3995820	1					
ANR	3995840	AssignmentExpression	* ht = execute_data -> symbol_table		3995820	2		=			
ANR	3995841	Identifier	ht		3995820	0					
ANR	3995842	PtrMemberAccess	execute_data -> symbol_table		3995820	1					
ANR	3995843	Identifier	execute_data		3995820	0					
ANR	3995844	Identifier	symbol_table		3995820	1					
ANR	3995845	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		3995820	2					
ANR	3995846	Condition	EXPECTED ( op_array -> last_var )	1519:5:43522:43549	3995820	0	True				
ANR	3995847	CallExpression	EXPECTED ( op_array -> last_var )		3995820	0					
ANR	3995848	Callee	EXPECTED		3995820	0					
ANR	3995849	Identifier	EXPECTED		3995820	0					
ANR	3995850	ArgumentList	op_array -> last_var		3995820	1					
ANR	3995851	Argument	op_array -> last_var		3995820	0					
ANR	3995852	PtrMemberAccess	op_array -> last_var		3995820	0					
ANR	3995853	Identifier	op_array		3995820	0					
ANR	3995854	Identifier	last_var		3995820	1					
ANR	3995855	CompoundStatement		10:2:344:369	3995820	1					
ANR	3995856	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1520:2:43556:43590	3995820	0	True				
ANR	3995857	IdentifierDecl	* * str = op_array -> vars		3995820	0					
ANR	3995858	IdentifierDeclType	zend_string * *		3995820	0					
ANR	3995859	Identifier	str		3995820	1					
ANR	3995860	AssignmentExpression	* * str = op_array -> vars		3995820	2		=			
ANR	3995861	Identifier	str		3995820	0					
ANR	3995862	PtrMemberAccess	op_array -> vars		3995820	1					
ANR	3995863	Identifier	op_array		3995820	0					
ANR	3995864	Identifier	vars		3995820	1					
ANR	3995865	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1521:2:43594:43638	3995820	1	True				
ANR	3995866	IdentifierDecl	* * end = str + op_array -> last_var		3995820	0					
ANR	3995867	IdentifierDeclType	zend_string * *		3995820	0					
ANR	3995868	Identifier	end		3995820	1					
ANR	3995869	AssignmentExpression	* * end = str + op_array -> last_var		3995820	2		=			
ANR	3995870	Identifier	end		3995820	0					
ANR	3995871	AdditiveExpression	str + op_array -> last_var		3995820	1		+			
ANR	3995872	Identifier	str		3995820	0					
ANR	3995873	PtrMemberAccess	op_array -> last_var		3995820	1					
ANR	3995874	Identifier	op_array		3995820	0					
ANR	3995875	Identifier	last_var		3995820	1					
ANR	3995876	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( 0 ) ;	1522:2:43642:43667	3995820	2	True				
ANR	3995877	IdentifierDecl	* var = EX_VAR_NUM ( 0 )		3995820	0					
ANR	3995878	IdentifierDeclType	zval *		3995820	0					
ANR	3995879	Identifier	var		3995820	1					
ANR	3995880	AssignmentExpression	* var = EX_VAR_NUM ( 0 )		3995820	2		=			
ANR	3995881	Identifier	var		3995820	0					
ANR	3995882	CallExpression	EX_VAR_NUM ( 0 )		3995820	1					
ANR	3995883	Callee	EX_VAR_NUM		3995820	0					
ANR	3995884	Identifier	EX_VAR_NUM		3995820	0					
ANR	3995885	ArgumentList	0		3995820	1					
ANR	3995886	Argument	0		3995820	0					
ANR	3995887	PrimaryExpression	0		3995820	0					
ANR	3995888	DoStatement	do		3995820	3					
ANR	3995889	CompoundStatement		13:3:382:417	3995820	0					
ANR	3995890	IdentifierDeclStatement	"zval * zv = zend_hash_find ( ht , * str ) ;"	1525:3:43680:43715	3995820	0	True				
ANR	3995891	IdentifierDecl	"* zv = zend_hash_find ( ht , * str )"		3995820	0					
ANR	3995892	IdentifierDeclType	zval *		3995820	0					
ANR	3995893	Identifier	zv		3995820	1					
ANR	3995894	AssignmentExpression	"* zv = zend_hash_find ( ht , * str )"		3995820	2		=			
ANR	3995895	Identifier	zv		3995820	0					
ANR	3995896	CallExpression	"zend_hash_find ( ht , * str )"		3995820	1					
ANR	3995897	Callee	zend_hash_find		3995820	0					
ANR	3995898	Identifier	zend_hash_find		3995820	0					
ANR	3995899	ArgumentList	ht		3995820	1					
ANR	3995900	Argument	ht		3995820	0					
ANR	3995901	Identifier	ht		3995820	0					
ANR	3995902	Argument	* str		3995820	1					
ANR	3995903	UnaryOperationExpression	* str		3995820	0					
ANR	3995904	UnaryOperator	*		3995820	0					
ANR	3995905	Identifier	str		3995820	1					
ANR	3995906	IfStatement	if ( zv )		3995820	1					
ANR	3995907	Condition	zv	1527:7:43725:43726	3995820	0	True				
ANR	3995908	Identifier	zv		3995820	0					
ANR	3995909	CompoundStatement		15:11:431:431	3995820	1					
ANR	3995910	IfStatement	if ( Z_TYPE_P ( zv ) == IS_INDIRECT )		3995820	0					
ANR	3995911	Condition	Z_TYPE_P ( zv ) == IS_INDIRECT	1528:8:43739:43765	3995820	0	True				
ANR	3995912	EqualityExpression	Z_TYPE_P ( zv ) == IS_INDIRECT		3995820	0		==			
ANR	3995913	CallExpression	Z_TYPE_P ( zv )		3995820	0					
ANR	3995914	Callee	Z_TYPE_P		3995820	0					
ANR	3995915	Identifier	Z_TYPE_P		3995820	0					
ANR	3995916	ArgumentList	zv		3995820	1					
ANR	3995917	Argument	zv		3995820	0					
ANR	3995918	Identifier	zv		3995820	0					
ANR	3995919	Identifier	IS_INDIRECT		3995820	1					
ANR	3995920	CompoundStatement		17:5:477:505	3995820	1					
ANR	3995921	IdentifierDeclStatement	zval * val = Z_INDIRECT_P ( zv ) ;	1529:5:43775:43803	3995820	0	True				
ANR	3995922	IdentifierDecl	* val = Z_INDIRECT_P ( zv )		3995820	0					
ANR	3995923	IdentifierDeclType	zval *		3995820	0					
ANR	3995924	Identifier	val		3995820	1					
ANR	3995925	AssignmentExpression	* val = Z_INDIRECT_P ( zv )		3995820	2		=			
ANR	3995926	Identifier	val		3995820	0					
ANR	3995927	CallExpression	Z_INDIRECT_P ( zv )		3995820	1					
ANR	3995928	Callee	Z_INDIRECT_P		3995820	0					
ANR	3995929	Identifier	Z_INDIRECT_P		3995820	0					
ANR	3995930	ArgumentList	zv		3995820	1					
ANR	3995931	Argument	zv		3995820	0					
ANR	3995932	Identifier	zv		3995820	0					
ANR	3995933	ExpressionStatement	"ZVAL_COPY_VALUE ( var , val )"	1531:5:43811:43836	3995820	1	True				
ANR	3995934	CallExpression	"ZVAL_COPY_VALUE ( var , val )"		3995820	0					
ANR	3995935	Callee	ZVAL_COPY_VALUE		3995820	0					
ANR	3995936	Identifier	ZVAL_COPY_VALUE		3995820	0					
ANR	3995937	ArgumentList	var		3995820	1					
ANR	3995938	Argument	var		3995820	0					
ANR	3995939	Identifier	var		3995820	0					
ANR	3995940	Argument	val		3995820	1					
ANR	3995941	Identifier	val		3995820	0					
ANR	3995942	ElseStatement	else		3995820	0					
ANR	3995943	CompoundStatement		20:11:551:551	3995820	0					
ANR	3995944	ExpressionStatement	"ZVAL_COPY_VALUE ( var , zv )"	1533:5:43856:43880	3995820	0	True				
ANR	3995945	CallExpression	"ZVAL_COPY_VALUE ( var , zv )"		3995820	0					
ANR	3995946	Callee	ZVAL_COPY_VALUE		3995820	0					
ANR	3995947	Identifier	ZVAL_COPY_VALUE		3995820	0					
ANR	3995948	ArgumentList	var		3995820	1					
ANR	3995949	Argument	var		3995820	0					
ANR	3995950	Identifier	var		3995820	0					
ANR	3995951	Argument	zv		3995820	1					
ANR	3995952	Identifier	zv		3995820	0					
ANR	3995953	ElseStatement	else		3995820	0					
ANR	3995954	CompoundStatement		23:10:600:600	3995820	0					
ANR	3995955	ExpressionStatement	ZVAL_UNDEF ( var )	1536:4:43904:43919	3995820	0	True				
ANR	3995956	CallExpression	ZVAL_UNDEF ( var )		3995820	0					
ANR	3995957	Callee	ZVAL_UNDEF		3995820	0					
ANR	3995958	Identifier	ZVAL_UNDEF		3995820	0					
ANR	3995959	ArgumentList	var		3995820	1					
ANR	3995960	Argument	var		3995820	0					
ANR	3995961	Identifier	var		3995820	0					
ANR	3995962	ExpressionStatement	"zv = zend_hash_add_new ( ht , * str , var )"	1537:4:43925:43962	3995820	1	True				
ANR	3995963	AssignmentExpression	"zv = zend_hash_add_new ( ht , * str , var )"		3995820	0		=			
ANR	3995964	Identifier	zv		3995820	0					
ANR	3995965	CallExpression	"zend_hash_add_new ( ht , * str , var )"		3995820	1					
ANR	3995966	Callee	zend_hash_add_new		3995820	0					
ANR	3995967	Identifier	zend_hash_add_new		3995820	0					
ANR	3995968	ArgumentList	ht		3995820	1					
ANR	3995969	Argument	ht		3995820	0					
ANR	3995970	Identifier	ht		3995820	0					
ANR	3995971	Argument	* str		3995820	1					
ANR	3995972	UnaryOperationExpression	* str		3995820	0					
ANR	3995973	UnaryOperator	*		3995820	0					
ANR	3995974	Identifier	str		3995820	1					
ANR	3995975	Argument	var		3995820	2					
ANR	3995976	Identifier	var		3995820	0					
ANR	3995977	ExpressionStatement	"ZVAL_INDIRECT ( zv , var )"	1539:3:43972:43994	3995820	2	True				
ANR	3995978	CallExpression	"ZVAL_INDIRECT ( zv , var )"		3995820	0					
ANR	3995979	Callee	ZVAL_INDIRECT		3995820	0					
ANR	3995980	Identifier	ZVAL_INDIRECT		3995820	0					
ANR	3995981	ArgumentList	zv		3995820	1					
ANR	3995982	Argument	zv		3995820	0					
ANR	3995983	Identifier	zv		3995820	0					
ANR	3995984	Argument	var		3995820	1					
ANR	3995985	Identifier	var		3995820	0					
ANR	3995986	ExpressionStatement	str ++	1540:3:43999:44004	3995820	3	True				
ANR	3995987	PostIncDecOperationExpression	str ++		3995820	0					
ANR	3995988	Identifier	str		3995820	0					
ANR	3995989	IncDec	++		3995820	1					
ANR	3995990	ExpressionStatement	var ++	1541:3:44009:44014	3995820	4	True				
ANR	3995991	PostIncDecOperationExpression	var ++		3995820	0					
ANR	3995992	Identifier	var		3995820	0					
ANR	3995993	IncDec	++		3995820	1					
ANR	3995994	Condition	str != end	1542:11:44027:44036	3995820	1	True				
ANR	3995995	EqualityExpression	str != end		3995820	0		!=			
ANR	3995996	Identifier	str		3995820	0					
ANR	3995997	Identifier	end		3995820	1					
ANR	3995998	ReturnType	ZEND_API void		3995820	1					
ANR	3995999	Identifier	zend_attach_symbol_table		3995820	2					
ANR	3996000	ParameterList	zend_execute_data * execute_data		3995820	3					
ANR	3996001	Parameter	zend_execute_data * execute_data	1512:39:43254:43284	3995820	0	True				
ANR	3996002	ParameterType	zend_execute_data *		3995820	0					
ANR	3996003	Identifier	execute_data		3995820	1					
ANR	3996004	CFGEntryNode	ENTRY		3995820		True				
ANR	3996005	CFGExitNode	EXIT		3995820		True				
ANR	3996006	Symbol	val		3995820						
ANR	3996007	Symbol	execute_data -> symbol_table		3995820						
ANR	3996008	Symbol	op_array -> vars		3995820						
ANR	3996009	Symbol	var		3995820						
ANR	3996010	Symbol	op_array -> last_var		3995820						
ANR	3996011	Symbol	Z_INDIRECT_P		3995820						
ANR	3996012	Symbol	zend_hash_add_new		3995820						
ANR	3996013	Symbol	execute_data -> func		3995820						
ANR	3996014	Symbol	ht		3995820						
ANR	3996015	Symbol	Z_TYPE_P		3995820						
ANR	3996016	Symbol	execute_data		3995820						
ANR	3996017	Symbol	* op_array		3995820						
ANR	3996018	Symbol	str		3995820						
ANR	3996019	Symbol	zend_hash_find		3995820						
ANR	3996020	Symbol	& execute_data -> func -> op_array		3995820						
ANR	3996021	Symbol	EX_VAR_NUM		3995820						
ANR	3996022	Symbol	* execute_data		3995820						
ANR	3996023	Symbol	end		3995820						
ANR	3996024	Symbol	* str		3995820						
ANR	3996025	Symbol	zv		3995820						
ANR	3996026	Symbol	EXPECTED		3995820						
ANR	3996027	Symbol	op_array		3995820						
ANR	3996028	Symbol	IS_INDIRECT		3995820						
ANR	3996029	Function	zend_detach_symbol_table	1547:0:44056:44647							
ANR	3996030	FunctionDef	zend_detach_symbol_table (zend_execute_data * execute_data)		3996029	0					
ANR	3996031	CompoundStatement		1548:0:44138:44647	3996029	0					
ANR	3996032	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1549:1:44141:44196	3996029	0	True				
ANR	3996033	IdentifierDecl	* op_array = & execute_data -> func -> op_array		3996029	0					
ANR	3996034	IdentifierDeclType	zend_op_array *		3996029	0					
ANR	3996035	Identifier	op_array		3996029	1					
ANR	3996036	AssignmentExpression	* op_array = & execute_data -> func -> op_array		3996029	2		=			
ANR	3996037	Identifier	op_array		3996029	0					
ANR	3996038	UnaryOperationExpression	& execute_data -> func -> op_array		3996029	1					
ANR	3996039	UnaryOperator	&		3996029	0					
ANR	3996040	PtrMemberAccess	execute_data -> func -> op_array		3996029	1					
ANR	3996041	PtrMemberAccess	execute_data -> func		3996029	0					
ANR	3996042	Identifier	execute_data		3996029	0					
ANR	3996043	Identifier	func		3996029	1					
ANR	3996044	Identifier	op_array		3996029	1					
ANR	3996045	IdentifierDeclStatement	HashTable * ht = execute_data -> symbol_table ;	1550:1:44199:44241	3996029	1	True				
ANR	3996046	IdentifierDecl	* ht = execute_data -> symbol_table		3996029	0					
ANR	3996047	IdentifierDeclType	HashTable *		3996029	0					
ANR	3996048	Identifier	ht		3996029	1					
ANR	3996049	AssignmentExpression	* ht = execute_data -> symbol_table		3996029	2		=			
ANR	3996050	Identifier	ht		3996029	0					
ANR	3996051	PtrMemberAccess	execute_data -> symbol_table		3996029	1					
ANR	3996052	Identifier	execute_data		3996029	0					
ANR	3996053	Identifier	symbol_table		3996029	1					
ANR	3996054	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		3996029	2					
ANR	3996055	Condition	EXPECTED ( op_array -> last_var )	1553:5:44305:44332	3996029	0	True				
ANR	3996056	CallExpression	EXPECTED ( op_array -> last_var )		3996029	0					
ANR	3996057	Callee	EXPECTED		3996029	0					
ANR	3996058	Identifier	EXPECTED		3996029	0					
ANR	3996059	ArgumentList	op_array -> last_var		3996029	1					
ANR	3996060	Argument	op_array -> last_var		3996029	0					
ANR	3996061	PtrMemberAccess	op_array -> last_var		3996029	0					
ANR	3996062	Identifier	op_array		3996029	0					
ANR	3996063	Identifier	last_var		3996029	1					
ANR	3996064	CompoundStatement		9:2:286:311	3996029	1					
ANR	3996065	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1554:2:44339:44373	3996029	0	True				
ANR	3996066	IdentifierDecl	* * str = op_array -> vars		3996029	0					
ANR	3996067	IdentifierDeclType	zend_string * *		3996029	0					
ANR	3996068	Identifier	str		3996029	1					
ANR	3996069	AssignmentExpression	* * str = op_array -> vars		3996029	2		=			
ANR	3996070	Identifier	str		3996029	0					
ANR	3996071	PtrMemberAccess	op_array -> vars		3996029	1					
ANR	3996072	Identifier	op_array		3996029	0					
ANR	3996073	Identifier	vars		3996029	1					
ANR	3996074	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1555:2:44377:44421	3996029	1	True				
ANR	3996075	IdentifierDecl	* * end = str + op_array -> last_var		3996029	0					
ANR	3996076	IdentifierDeclType	zend_string * *		3996029	0					
ANR	3996077	Identifier	end		3996029	1					
ANR	3996078	AssignmentExpression	* * end = str + op_array -> last_var		3996029	2		=			
ANR	3996079	Identifier	end		3996029	0					
ANR	3996080	AdditiveExpression	str + op_array -> last_var		3996029	1		+			
ANR	3996081	Identifier	str		3996029	0					
ANR	3996082	PtrMemberAccess	op_array -> last_var		3996029	1					
ANR	3996083	Identifier	op_array		3996029	0					
ANR	3996084	Identifier	last_var		3996029	1					
ANR	3996085	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( 0 ) ;	1556:2:44425:44450	3996029	2	True				
ANR	3996086	IdentifierDecl	* var = EX_VAR_NUM ( 0 )		3996029	0					
ANR	3996087	IdentifierDeclType	zval *		3996029	0					
ANR	3996088	Identifier	var		3996029	1					
ANR	3996089	AssignmentExpression	* var = EX_VAR_NUM ( 0 )		3996029	2		=			
ANR	3996090	Identifier	var		3996029	0					
ANR	3996091	CallExpression	EX_VAR_NUM ( 0 )		3996029	1					
ANR	3996092	Callee	EX_VAR_NUM		3996029	0					
ANR	3996093	Identifier	EX_VAR_NUM		3996029	0					
ANR	3996094	ArgumentList	0		3996029	1					
ANR	3996095	Argument	0		3996029	0					
ANR	3996096	PrimaryExpression	0		3996029	0					
ANR	3996097	DoStatement	do		3996029	3					
ANR	3996098	CompoundStatement		11:5:319:319	3996029	0					
ANR	3996099	IfStatement	if ( Z_TYPE_P ( var ) == IS_UNDEF )		3996029	0					
ANR	3996100	Condition	Z_TYPE_P ( var ) == IS_UNDEF	1559:7:44467:44491	3996029	0	True				
ANR	3996101	EqualityExpression	Z_TYPE_P ( var ) == IS_UNDEF		3996029	0		==			
ANR	3996102	CallExpression	Z_TYPE_P ( var )		3996029	0					
ANR	3996103	Callee	Z_TYPE_P		3996029	0					
ANR	3996104	Identifier	Z_TYPE_P		3996029	0					
ANR	3996105	ArgumentList	var		3996029	1					
ANR	3996106	Argument	var		3996029	0					
ANR	3996107	Identifier	var		3996029	0					
ANR	3996108	Identifier	IS_UNDEF		3996029	1					
ANR	3996109	CompoundStatement		12:34:355:355	3996029	1					
ANR	3996110	ExpressionStatement	"zend_hash_del ( ht , * str )"	1560:4:44500:44523	3996029	0	True				
ANR	3996111	CallExpression	"zend_hash_del ( ht , * str )"		3996029	0					
ANR	3996112	Callee	zend_hash_del		3996029	0					
ANR	3996113	Identifier	zend_hash_del		3996029	0					
ANR	3996114	ArgumentList	ht		3996029	1					
ANR	3996115	Argument	ht		3996029	0					
ANR	3996116	Identifier	ht		3996029	0					
ANR	3996117	Argument	* str		3996029	1					
ANR	3996118	UnaryOperationExpression	* str		3996029	0					
ANR	3996119	UnaryOperator	*		3996029	0					
ANR	3996120	Identifier	str		3996029	1					
ANR	3996121	ElseStatement	else		3996029	0					
ANR	3996122	CompoundStatement		14:10:396:396	3996029	0					
ANR	3996123	ExpressionStatement	"zend_hash_update ( ht , * str , var )"	1562:4:44541:44572	3996029	0	True				
ANR	3996124	CallExpression	"zend_hash_update ( ht , * str , var )"		3996029	0					
ANR	3996125	Callee	zend_hash_update		3996029	0					
ANR	3996126	Identifier	zend_hash_update		3996029	0					
ANR	3996127	ArgumentList	ht		3996029	1					
ANR	3996128	Argument	ht		3996029	0					
ANR	3996129	Identifier	ht		3996029	0					
ANR	3996130	Argument	* str		3996029	1					
ANR	3996131	UnaryOperationExpression	* str		3996029	0					
ANR	3996132	UnaryOperator	*		3996029	0					
ANR	3996133	Identifier	str		3996029	1					
ANR	3996134	Argument	var		3996029	2					
ANR	3996135	Identifier	var		3996029	0					
ANR	3996136	ExpressionStatement	ZVAL_UNDEF ( var )	1563:4:44578:44593	3996029	1	True				
ANR	3996137	CallExpression	ZVAL_UNDEF ( var )		3996029	0					
ANR	3996138	Callee	ZVAL_UNDEF		3996029	0					
ANR	3996139	Identifier	ZVAL_UNDEF		3996029	0					
ANR	3996140	ArgumentList	var		3996029	1					
ANR	3996141	Argument	var		3996029	0					
ANR	3996142	Identifier	var		3996029	0					
ANR	3996143	ExpressionStatement	str ++	1565:3:44603:44608	3996029	1	True				
ANR	3996144	PostIncDecOperationExpression	str ++		3996029	0					
ANR	3996145	Identifier	str		3996029	0					
ANR	3996146	IncDec	++		3996029	1					
ANR	3996147	ExpressionStatement	var ++	1566:3:44613:44618	3996029	2	True				
ANR	3996148	PostIncDecOperationExpression	var ++		3996029	0					
ANR	3996149	Identifier	var		3996029	0					
ANR	3996150	IncDec	++		3996029	1					
ANR	3996151	Condition	str != end	1567:11:44631:44640	3996029	1	True				
ANR	3996152	EqualityExpression	str != end		3996029	0		!=			
ANR	3996153	Identifier	str		3996029	0					
ANR	3996154	Identifier	end		3996029	1					
ANR	3996155	ReturnType	ZEND_API void		3996029	1					
ANR	3996156	Identifier	zend_detach_symbol_table		3996029	2					
ANR	3996157	ParameterList	zend_execute_data * execute_data		3996029	3					
ANR	3996158	Parameter	zend_execute_data * execute_data	1547:39:44095:44125	3996029	0	True				
ANR	3996159	ParameterType	zend_execute_data *		3996029	0					
ANR	3996160	Identifier	execute_data		3996029	1					
ANR	3996161	CFGEntryNode	ENTRY		3996029		True				
ANR	3996162	CFGExitNode	EXIT		3996029		True				
ANR	3996163	Symbol	execute_data -> symbol_table		3996029						
ANR	3996164	Symbol	op_array -> vars		3996029						
ANR	3996165	Symbol	var		3996029						
ANR	3996166	Symbol	op_array -> last_var		3996029						
ANR	3996167	Symbol	execute_data -> func		3996029						
ANR	3996168	Symbol	ht		3996029						
ANR	3996169	Symbol	Z_TYPE_P		3996029						
ANR	3996170	Symbol	execute_data		3996029						
ANR	3996171	Symbol	* op_array		3996029						
ANR	3996172	Symbol	str		3996029						
ANR	3996173	Symbol	& execute_data -> func -> op_array		3996029						
ANR	3996174	Symbol	EX_VAR_NUM		3996029						
ANR	3996175	Symbol	* execute_data		3996029						
ANR	3996176	Symbol	end		3996029						
ANR	3996177	Symbol	* str		3996029						
ANR	3996178	Symbol	EXPECTED		3996029						
ANR	3996179	Symbol	op_array		3996029						
ANR	3996180	Symbol	IS_UNDEF		3996029						
ANR	3996181	Function	zend_set_local_var	1572:0:44660:45901							
ANR	3996182	FunctionDef	"zend_set_local_var (zend_string * name , zval * value , int force)"		3996181	0					
ANR	3996183	CompoundStatement		1573:0:44745:45901	3996181	0					
ANR	3996184	IdentifierDeclStatement	zend_execute_data * execute_data = EG ( current_execute_data ) ;	1574:1:44748:44806	3996181	0	True				
ANR	3996185	IdentifierDecl	* execute_data = EG ( current_execute_data )		3996181	0					
ANR	3996186	IdentifierDeclType	zend_execute_data *		3996181	0					
ANR	3996187	Identifier	execute_data		3996181	1					
ANR	3996188	AssignmentExpression	* execute_data = EG ( current_execute_data )		3996181	2		=			
ANR	3996189	Identifier	execute_data		3996181	0					
ANR	3996190	CallExpression	EG ( current_execute_data )		3996181	1					
ANR	3996191	Callee	EG		3996181	0					
ANR	3996192	Identifier	EG		3996181	0					
ANR	3996193	ArgumentList	current_execute_data		3996181	1					
ANR	3996194	Argument	current_execute_data		3996181	0					
ANR	3996195	Identifier	current_execute_data		3996181	0					
ANR	3996196	WhileStatement	while ( execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) ) )		3996181	1					
ANR	3996197	Condition	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )	1576:8:44817:44905	3996181	0	True				
ANR	3996198	AndExpression	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )		3996181	0		&&			
ANR	3996199	Identifier	execute_data		3996181	0					
ANR	3996200	OrExpression	! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type )		3996181	1		||			
ANR	3996201	UnaryOperationExpression	! execute_data -> func		3996181	0					
ANR	3996202	UnaryOperator	!		3996181	0					
ANR	3996203	PtrMemberAccess	execute_data -> func		3996181	1					
ANR	3996204	Identifier	execute_data		3996181	0					
ANR	3996205	Identifier	func		3996181	1					
ANR	3996206	UnaryOperationExpression	! ZEND_USER_CODE ( execute_data -> func -> common . type )		3996181	1					
ANR	3996207	UnaryOperator	!		3996181	0					
ANR	3996208	CallExpression	ZEND_USER_CODE ( execute_data -> func -> common . type )		3996181	1					
ANR	3996209	Callee	ZEND_USER_CODE		3996181	0					
ANR	3996210	Identifier	ZEND_USER_CODE		3996181	0					
ANR	3996211	ArgumentList	execute_data -> func -> common . type		3996181	1					
ANR	3996212	Argument	execute_data -> func -> common . type		3996181	0					
ANR	3996213	MemberAccess	execute_data -> func -> common . type		3996181	0					
ANR	3996214	PtrMemberAccess	execute_data -> func -> common		3996181	0					
ANR	3996215	PtrMemberAccess	execute_data -> func		3996181	0					
ANR	3996216	Identifier	execute_data		3996181	0					
ANR	3996217	Identifier	func		3996181	1					
ANR	3996218	Identifier	common		3996181	1					
ANR	3996219	Identifier	type		3996181	1					
ANR	3996220	CompoundStatement		4:99:162:162	3996181	1					
ANR	3996221	ExpressionStatement	execute_data = execute_data -> prev_execute_data	1577:2:44912:44958	3996181	0	True				
ANR	3996222	AssignmentExpression	execute_data = execute_data -> prev_execute_data		3996181	0		=			
ANR	3996223	Identifier	execute_data		3996181	0					
ANR	3996224	PtrMemberAccess	execute_data -> prev_execute_data		3996181	1					
ANR	3996225	Identifier	execute_data		3996181	0					
ANR	3996226	Identifier	prev_execute_data		3996181	1					
ANR	3996227	IfStatement	if ( execute_data )		3996181	2					
ANR	3996228	Condition	execute_data	1580:5:44969:44980	3996181	0	True				
ANR	3996229	Identifier	execute_data		3996181	0					
ANR	3996230	CompoundStatement		8:19:237:237	3996181	1					
ANR	3996231	IfStatement	if ( ! execute_data -> symbol_table )		3996181	0					
ANR	3996232	Condition	! execute_data -> symbol_table	1581:6:44991:45017	3996181	0	True				
ANR	3996233	UnaryOperationExpression	! execute_data -> symbol_table		3996181	0					
ANR	3996234	UnaryOperator	!		3996181	0					
ANR	3996235	PtrMemberAccess	execute_data -> symbol_table		3996181	1					
ANR	3996236	Identifier	execute_data		3996181	0					
ANR	3996237	Identifier	symbol_table		3996181	1					
ANR	3996238	CompoundStatement		11:3:325:380	3996181	1					
ANR	3996239	IdentifierDeclStatement	zend_ulong h = zend_string_hash_val ( name ) ;	1582:3:45025:45066	3996181	0	True				
ANR	3996240	IdentifierDecl	h = zend_string_hash_val ( name )		3996181	0					
ANR	3996241	IdentifierDeclType	zend_ulong		3996181	0					
ANR	3996242	Identifier	h		3996181	1					
ANR	3996243	AssignmentExpression	h = zend_string_hash_val ( name )		3996181	2		=			
ANR	3996244	Identifier	h		3996181	0					
ANR	3996245	CallExpression	zend_string_hash_val ( name )		3996181	1					
ANR	3996246	Callee	zend_string_hash_val		3996181	0					
ANR	3996247	Identifier	zend_string_hash_val		3996181	0					
ANR	3996248	ArgumentList	name		3996181	1					
ANR	3996249	Argument	name		3996181	0					
ANR	3996250	Identifier	name		3996181	0					
ANR	3996251	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1583:3:45071:45126	3996181	1	True				
ANR	3996252	IdentifierDecl	* op_array = & execute_data -> func -> op_array		3996181	0					
ANR	3996253	IdentifierDeclType	zend_op_array *		3996181	0					
ANR	3996254	Identifier	op_array		3996181	1					
ANR	3996255	AssignmentExpression	* op_array = & execute_data -> func -> op_array		3996181	2		=			
ANR	3996256	Identifier	op_array		3996181	0					
ANR	3996257	UnaryOperationExpression	& execute_data -> func -> op_array		3996181	1					
ANR	3996258	UnaryOperator	&		3996181	0					
ANR	3996259	PtrMemberAccess	execute_data -> func -> op_array		3996181	1					
ANR	3996260	PtrMemberAccess	execute_data -> func		3996181	0					
ANR	3996261	Identifier	execute_data		3996181	0					
ANR	3996262	Identifier	func		3996181	1					
ANR	3996263	Identifier	op_array		3996181	1					
ANR	3996264	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		3996181	2					
ANR	3996265	Condition	EXPECTED ( op_array -> last_var )	1585:7:45136:45163	3996181	0	True				
ANR	3996266	CallExpression	EXPECTED ( op_array -> last_var )		3996181	0					
ANR	3996267	Callee	EXPECTED		3996181	0					
ANR	3996268	Identifier	EXPECTED		3996181	0					
ANR	3996269	ArgumentList	op_array -> last_var		3996181	1					
ANR	3996270	Argument	op_array -> last_var		3996181	0					
ANR	3996271	PtrMemberAccess	op_array -> last_var		3996181	0					
ANR	3996272	Identifier	op_array		3996181	0					
ANR	3996273	Identifier	last_var		3996181	1					
ANR	3996274	CompoundStatement		15:4:466:510	3996181	1					
ANR	3996275	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1586:4:45172:45206	3996181	0	True				
ANR	3996276	IdentifierDecl	* * str = op_array -> vars		3996181	0					
ANR	3996277	IdentifierDeclType	zend_string * *		3996181	0					
ANR	3996278	Identifier	str		3996181	1					
ANR	3996279	AssignmentExpression	* * str = op_array -> vars		3996181	2		=			
ANR	3996280	Identifier	str		3996181	0					
ANR	3996281	PtrMemberAccess	op_array -> vars		3996181	1					
ANR	3996282	Identifier	op_array		3996181	0					
ANR	3996283	Identifier	vars		3996181	1					
ANR	3996284	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1587:4:45212:45256	3996181	1	True				
ANR	3996285	IdentifierDecl	* * end = str + op_array -> last_var		3996181	0					
ANR	3996286	IdentifierDeclType	zend_string * *		3996181	0					
ANR	3996287	Identifier	end		3996181	1					
ANR	3996288	AssignmentExpression	* * end = str + op_array -> last_var		3996181	2		=			
ANR	3996289	Identifier	end		3996181	0					
ANR	3996290	AdditiveExpression	str + op_array -> last_var		3996181	1		+			
ANR	3996291	Identifier	str		3996181	0					
ANR	3996292	PtrMemberAccess	op_array -> last_var		3996181	1					
ANR	3996293	Identifier	op_array		3996181	0					
ANR	3996294	Identifier	last_var		3996181	1					
ANR	3996295	DoStatement	do		3996181	2					
ANR	3996296	CompoundStatement		17:7:520:520	3996181	0					
ANR	3996297	IfStatement	"if ( ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0 )"		3996181	0					
ANR	3996298	Condition	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"	1590:9:45277:45410	3996181	0	True				
ANR	3996299	AndExpression	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		3996181	0		&&			
ANR	3996300	EqualityExpression	ZSTR_H ( * str ) == h		3996181	0		==			
ANR	3996301	CallExpression	ZSTR_H ( * str )		3996181	0					
ANR	3996302	Callee	ZSTR_H		3996181	0					
ANR	3996303	Identifier	ZSTR_H		3996181	0					
ANR	3996304	ArgumentList	* str		3996181	1					
ANR	3996305	Argument	* str		3996181	0					
ANR	3996306	UnaryOperationExpression	* str		3996181	0					
ANR	3996307	UnaryOperator	*		3996181	0					
ANR	3996308	Identifier	str		3996181	1					
ANR	3996309	Identifier	h		3996181	1					
ANR	3996310	AndExpression	"ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		3996181	1		&&			
ANR	3996311	EqualityExpression	ZSTR_LEN ( * str ) == ZSTR_LEN ( name )		3996181	0		==			
ANR	3996312	CallExpression	ZSTR_LEN ( * str )		3996181	0					
ANR	3996313	Callee	ZSTR_LEN		3996181	0					
ANR	3996314	Identifier	ZSTR_LEN		3996181	0					
ANR	3996315	ArgumentList	* str		3996181	1					
ANR	3996316	Argument	* str		3996181	0					
ANR	3996317	UnaryOperationExpression	* str		3996181	0					
ANR	3996318	UnaryOperator	*		3996181	0					
ANR	3996319	Identifier	str		3996181	1					
ANR	3996320	CallExpression	ZSTR_LEN ( name )		3996181	1					
ANR	3996321	Callee	ZSTR_LEN		3996181	0					
ANR	3996322	Identifier	ZSTR_LEN		3996181	0					
ANR	3996323	ArgumentList	name		3996181	1					
ANR	3996324	Argument	name		3996181	0					
ANR	3996325	Identifier	name		3996181	0					
ANR	3996326	EqualityExpression	"memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		3996181	1		==			
ANR	3996327	CallExpression	"memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3996181	0					
ANR	3996328	Callee	memcmp		3996181	0					
ANR	3996329	Identifier	memcmp		3996181	0					
ANR	3996330	ArgumentList	ZSTR_VAL ( * str )		3996181	1					
ANR	3996331	Argument	ZSTR_VAL ( * str )		3996181	0					
ANR	3996332	CallExpression	ZSTR_VAL ( * str )		3996181	0					
ANR	3996333	Callee	ZSTR_VAL		3996181	0					
ANR	3996334	Identifier	ZSTR_VAL		3996181	0					
ANR	3996335	ArgumentList	* str		3996181	1					
ANR	3996336	Argument	* str		3996181	0					
ANR	3996337	UnaryOperationExpression	* str		3996181	0					
ANR	3996338	UnaryOperator	*		3996181	0					
ANR	3996339	Identifier	str		3996181	1					
ANR	3996340	Argument	ZSTR_VAL ( name )		3996181	1					
ANR	3996341	CallExpression	ZSTR_VAL ( name )		3996181	0					
ANR	3996342	Callee	ZSTR_VAL		3996181	0					
ANR	3996343	Identifier	ZSTR_VAL		3996181	0					
ANR	3996344	ArgumentList	name		3996181	1					
ANR	3996345	Argument	name		3996181	0					
ANR	3996346	Identifier	name		3996181	0					
ANR	3996347	Argument	ZSTR_LEN ( name )		3996181	2					
ANR	3996348	CallExpression	ZSTR_LEN ( name )		3996181	0					
ANR	3996349	Callee	ZSTR_LEN		3996181	0					
ANR	3996350	Identifier	ZSTR_LEN		3996181	0					
ANR	3996351	ArgumentList	name		3996181	1					
ANR	3996352	Argument	name		3996181	0					
ANR	3996353	Identifier	name		3996181	0					
ANR	3996354	PrimaryExpression	0		3996181	1					
ANR	3996355	CompoundStatement		21:6:675:719	3996181	1					
ANR	3996356	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( str - op_array -> vars ) ;	1593:6:45421:45465	3996181	0	True				
ANR	3996357	IdentifierDecl	* var = EX_VAR_NUM ( str - op_array -> vars )		3996181	0					
ANR	3996358	IdentifierDeclType	zval *		3996181	0					
ANR	3996359	Identifier	var		3996181	1					
ANR	3996360	AssignmentExpression	* var = EX_VAR_NUM ( str - op_array -> vars )		3996181	2		=			
ANR	3996361	Identifier	var		3996181	0					
ANR	3996362	CallExpression	EX_VAR_NUM ( str - op_array -> vars )		3996181	1					
ANR	3996363	Callee	EX_VAR_NUM		3996181	0					
ANR	3996364	Identifier	EX_VAR_NUM		3996181	0					
ANR	3996365	ArgumentList	str - op_array -> vars		3996181	1					
ANR	3996366	Argument	str - op_array -> vars		3996181	0					
ANR	3996367	AdditiveExpression	str - op_array -> vars		3996181	0		-			
ANR	3996368	Identifier	str		3996181	0					
ANR	3996369	PtrMemberAccess	op_array -> vars		3996181	1					
ANR	3996370	Identifier	op_array		3996181	0					
ANR	3996371	Identifier	vars		3996181	1					
ANR	3996372	ExpressionStatement	"ZVAL_COPY_VALUE ( var , value )"	1594:6:45473:45500	3996181	1	True				
ANR	3996373	CallExpression	"ZVAL_COPY_VALUE ( var , value )"		3996181	0					
ANR	3996374	Callee	ZVAL_COPY_VALUE		3996181	0					
ANR	3996375	Identifier	ZVAL_COPY_VALUE		3996181	0					
ANR	3996376	ArgumentList	var		3996181	1					
ANR	3996377	Argument	var		3996181	0					
ANR	3996378	Identifier	var		3996181	0					
ANR	3996379	Argument	value		3996181	1					
ANR	3996380	Identifier	value		3996181	0					
ANR	3996381	ReturnStatement	return SUCCESS ;	1595:6:45508:45522	3996181	2	True				
ANR	3996382	Identifier	SUCCESS		3996181	0					
ANR	3996383	ExpressionStatement	str ++	1597:5:45536:45541	3996181	1	True				
ANR	3996384	PostIncDecOperationExpression	str ++		3996181	0					
ANR	3996385	Identifier	str		3996181	0					
ANR	3996386	IncDec	++		3996181	1					
ANR	3996387	Condition	str != end	1598:13:45556:45565	3996181	1	True				
ANR	3996388	EqualityExpression	str != end		3996181	0		!=			
ANR	3996389	Identifier	str		3996181	0					
ANR	3996390	Identifier	end		3996181	1					
ANR	3996391	IfStatement	if ( force )		3996181	3					
ANR	3996392	Condition	force	1600:7:45581:45585	3996181	0	True				
ANR	3996393	Identifier	force		3996181	0					
ANR	3996394	CompoundStatement		29:4:848:902	3996181	1					
ANR	3996395	IdentifierDeclStatement	zend_array * symbol_table = zend_rebuild_symbol_table ( ) ;	1601:4:45594:45648	3996181	0	True				
ANR	3996396	IdentifierDecl	* symbol_table = zend_rebuild_symbol_table ( )		3996181	0					
ANR	3996397	IdentifierDeclType	zend_array *		3996181	0					
ANR	3996398	Identifier	symbol_table		3996181	1					
ANR	3996399	AssignmentExpression	* symbol_table = zend_rebuild_symbol_table ( )		3996181	2		=			
ANR	3996400	Identifier	symbol_table		3996181	0					
ANR	3996401	CallExpression	zend_rebuild_symbol_table ( )		3996181	1					
ANR	3996402	Callee	zend_rebuild_symbol_table		3996181	0					
ANR	3996403	Identifier	zend_rebuild_symbol_table		3996181	0					
ANR	3996404	ArgumentList			3996181	1					
ANR	3996405	IfStatement	if ( symbol_table )		3996181	1					
ANR	3996406	Condition	symbol_table	1602:8:45658:45669	3996181	0	True				
ANR	3996407	Identifier	symbol_table		3996181	0					
ANR	3996408	CompoundStatement		30:22:926:926	3996181	1					
ANR	3996409	ReturnStatement	"return zend_hash_update ( symbol_table , name , value ) ? SUCCESS : FAILURE ;"	1603:5:45679:45749	3996181	0	True				
ANR	3996410	ConditionalExpression	"zend_hash_update ( symbol_table , name , value ) ? SUCCESS : FAILURE"		3996181	0					
ANR	3996411	Condition	"zend_hash_update ( symbol_table , name , value )"		3996181	0					
ANR	3996412	CallExpression	"zend_hash_update ( symbol_table , name , value )"		3996181	0					
ANR	3996413	Callee	zend_hash_update		3996181	0					
ANR	3996414	Identifier	zend_hash_update		3996181	0					
ANR	3996415	ArgumentList	symbol_table		3996181	1					
ANR	3996416	Argument	symbol_table		3996181	0					
ANR	3996417	Identifier	symbol_table		3996181	0					
ANR	3996418	Argument	name		3996181	1					
ANR	3996419	Identifier	name		3996181	0					
ANR	3996420	Argument	value		3996181	2					
ANR	3996421	Identifier	value		3996181	0					
ANR	3996422	Identifier	SUCCESS		3996181	1					
ANR	3996423	Identifier	FAILURE		3996181	2					
ANR	3996424	ExpressionStatement		1603:76:45750:45750	3996181	1	True				
ANR	3996425	ElseStatement	else		3996181	0					
ANR	3996426	CompoundStatement		34:9:1026:1026	3996181	0					
ANR	3996427	ReturnStatement	"return ( zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL ) ? SUCCESS : FAILURE ;"	1607:3:45777:45875	3996181	0	True				
ANR	3996428	ConditionalExpression	"( zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL ) ? SUCCESS : FAILURE"		3996181	0					
ANR	3996429	Condition	"zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL"		3996181	0					
ANR	3996430	EqualityExpression	"zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL"		3996181	0		!=			
ANR	3996431	CallExpression	"zend_hash_update_ind ( execute_data -> symbol_table , name , value )"		3996181	0					
ANR	3996432	Callee	zend_hash_update_ind		3996181	0					
ANR	3996433	Identifier	zend_hash_update_ind		3996181	0					
ANR	3996434	ArgumentList	execute_data -> symbol_table		3996181	1					
ANR	3996435	Argument	execute_data -> symbol_table		3996181	0					
ANR	3996436	PtrMemberAccess	execute_data -> symbol_table		3996181	0					
ANR	3996437	Identifier	execute_data		3996181	0					
ANR	3996438	Identifier	symbol_table		3996181	1					
ANR	3996439	Argument	name		3996181	1					
ANR	3996440	Identifier	name		3996181	0					
ANR	3996441	Argument	value		3996181	2					
ANR	3996442	Identifier	value		3996181	0					
ANR	3996443	Identifier	NULL		3996181	1					
ANR	3996444	Identifier	SUCCESS		3996181	1					
ANR	3996445	Identifier	FAILURE		3996181	2					
ANR	3996446	ReturnStatement	return FAILURE ;	1610:1:45885:45899	3996181	3	True				
ANR	3996447	Identifier	FAILURE		3996181	0					
ANR	3996448	ReturnType	ZEND_API int		3996181	1					
ANR	3996449	Identifier	zend_set_local_var		3996181	2					
ANR	3996450	ParameterList	"zend_string * name , zval * value , int force"		3996181	3					
ANR	3996451	Parameter	zend_string * name	1572:32:44692:44708	3996181	0	True				
ANR	3996452	ParameterType	zend_string *		3996181	0					
ANR	3996453	Identifier	name		3996181	1					
ANR	3996454	Parameter	zval * value	1572:51:44711:44721	3996181	1	True				
ANR	3996455	ParameterType	zval *		3996181	0					
ANR	3996456	Identifier	value		3996181	1					
ANR	3996457	Parameter	int force	1572:64:44724:44732	3996181	2	True				
ANR	3996458	ParameterType	int		3996181	0					
ANR	3996459	Identifier	force		3996181	1					
ANR	3996460	CFGEntryNode	ENTRY		3996181		True				
ANR	3996461	CFGExitNode	EXIT		3996181		True				
ANR	3996462	Symbol	zend_rebuild_symbol_table		3996181						
ANR	3996463	Symbol	execute_data -> symbol_table		3996181						
ANR	3996464	Symbol	* execute_data -> func		3996181						
ANR	3996465	Symbol	current_execute_data		3996181						
ANR	3996466	Symbol	op_array -> last_var		3996181						
ANR	3996467	Symbol	ZSTR_H		3996181						
ANR	3996468	Symbol	execute_data		3996181						
ANR	3996469	Symbol	memcmp		3996181						
ANR	3996470	Symbol	& execute_data -> func -> op_array		3996181						
ANR	3996471	Symbol	* execute_data		3996181						
ANR	3996472	Symbol	zend_string_hash_val		3996181						
ANR	3996473	Symbol	end		3996181						
ANR	3996474	Symbol	execute_data -> func -> common		3996181						
ANR	3996475	Symbol	* str		3996181						
ANR	3996476	Symbol	zend_hash_update		3996181						
ANR	3996477	Symbol	value		3996181						
ANR	3996478	Symbol	EG		3996181						
ANR	3996479	Symbol	op_array -> vars		3996181						
ANR	3996480	Symbol	SUCCESS		3996181						
ANR	3996481	Symbol	NULL		3996181						
ANR	3996482	Symbol	var		3996181						
ANR	3996483	Symbol	h		3996181						
ANR	3996484	Symbol	symbol_table		3996181						
ANR	3996485	Symbol	execute_data -> func		3996181						
ANR	3996486	Symbol	zend_hash_update_ind		3996181						
ANR	3996487	Symbol	FAILURE		3996181						
ANR	3996488	Symbol	* op_array		3996181						
ANR	3996489	Symbol	ZSTR_VAL		3996181						
ANR	3996490	Symbol	str		3996181						
ANR	3996491	Symbol	execute_data -> prev_execute_data		3996181						
ANR	3996492	Symbol	EX_VAR_NUM		3996181						
ANR	3996493	Symbol	name		3996181						
ANR	3996494	Symbol	ZSTR_LEN		3996181						
ANR	3996495	Symbol	* * execute_data		3996181						
ANR	3996496	Symbol	ZEND_USER_CODE		3996181						
ANR	3996497	Symbol	force		3996181						
ANR	3996498	Symbol	execute_data -> func -> common . type		3996181						
ANR	3996499	Symbol	EXPECTED		3996181						
ANR	3996500	Symbol	op_array		3996181						
ANR	3996501	Function	zend_set_local_var_str	1614:0:45914:47180							
ANR	3996502	FunctionDef	"zend_set_local_var_str (const char * name , size_t len , zval * value , int force)"		3996501	0					
ANR	3996503	CompoundStatement		1615:0:46014:47180	3996501	0					
ANR	3996504	IdentifierDeclStatement	zend_execute_data * execute_data = EG ( current_execute_data ) ;	1616:1:46017:46075	3996501	0	True				
ANR	3996505	IdentifierDecl	* execute_data = EG ( current_execute_data )		3996501	0					
ANR	3996506	IdentifierDeclType	zend_execute_data *		3996501	0					
ANR	3996507	Identifier	execute_data		3996501	1					
ANR	3996508	AssignmentExpression	* execute_data = EG ( current_execute_data )		3996501	2		=			
ANR	3996509	Identifier	execute_data		3996501	0					
ANR	3996510	CallExpression	EG ( current_execute_data )		3996501	1					
ANR	3996511	Callee	EG		3996501	0					
ANR	3996512	Identifier	EG		3996501	0					
ANR	3996513	ArgumentList	current_execute_data		3996501	1					
ANR	3996514	Argument	current_execute_data		3996501	0					
ANR	3996515	Identifier	current_execute_data		3996501	0					
ANR	3996516	WhileStatement	while ( execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) ) )		3996501	1					
ANR	3996517	Condition	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )	1618:8:46086:46174	3996501	0	True				
ANR	3996518	AndExpression	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )		3996501	0		&&			
ANR	3996519	Identifier	execute_data		3996501	0					
ANR	3996520	OrExpression	! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type )		3996501	1		||			
ANR	3996521	UnaryOperationExpression	! execute_data -> func		3996501	0					
ANR	3996522	UnaryOperator	!		3996501	0					
ANR	3996523	PtrMemberAccess	execute_data -> func		3996501	1					
ANR	3996524	Identifier	execute_data		3996501	0					
ANR	3996525	Identifier	func		3996501	1					
ANR	3996526	UnaryOperationExpression	! ZEND_USER_CODE ( execute_data -> func -> common . type )		3996501	1					
ANR	3996527	UnaryOperator	!		3996501	0					
ANR	3996528	CallExpression	ZEND_USER_CODE ( execute_data -> func -> common . type )		3996501	1					
ANR	3996529	Callee	ZEND_USER_CODE		3996501	0					
ANR	3996530	Identifier	ZEND_USER_CODE		3996501	0					
ANR	3996531	ArgumentList	execute_data -> func -> common . type		3996501	1					
ANR	3996532	Argument	execute_data -> func -> common . type		3996501	0					
ANR	3996533	MemberAccess	execute_data -> func -> common . type		3996501	0					
ANR	3996534	PtrMemberAccess	execute_data -> func -> common		3996501	0					
ANR	3996535	PtrMemberAccess	execute_data -> func		3996501	0					
ANR	3996536	Identifier	execute_data		3996501	0					
ANR	3996537	Identifier	func		3996501	1					
ANR	3996538	Identifier	common		3996501	1					
ANR	3996539	Identifier	type		3996501	1					
ANR	3996540	CompoundStatement		4:99:162:162	3996501	1					
ANR	3996541	ExpressionStatement	execute_data = execute_data -> prev_execute_data	1619:2:46181:46227	3996501	0	True				
ANR	3996542	AssignmentExpression	execute_data = execute_data -> prev_execute_data		3996501	0		=			
ANR	3996543	Identifier	execute_data		3996501	0					
ANR	3996544	PtrMemberAccess	execute_data -> prev_execute_data		3996501	1					
ANR	3996545	Identifier	execute_data		3996501	0					
ANR	3996546	Identifier	prev_execute_data		3996501	1					
ANR	3996547	IfStatement	if ( execute_data )		3996501	2					
ANR	3996548	Condition	execute_data	1622:5:46238:46249	3996501	0	True				
ANR	3996549	Identifier	execute_data		3996501	0					
ANR	3996550	CompoundStatement		8:19:237:237	3996501	1					
ANR	3996551	IfStatement	if ( ! execute_data -> symbol_table )		3996501	0					
ANR	3996552	Condition	! execute_data -> symbol_table	1623:6:46260:46286	3996501	0	True				
ANR	3996553	UnaryOperationExpression	! execute_data -> symbol_table		3996501	0					
ANR	3996554	UnaryOperator	!		3996501	0					
ANR	3996555	PtrMemberAccess	execute_data -> symbol_table		3996501	1					
ANR	3996556	Identifier	execute_data		3996501	0					
ANR	3996557	Identifier	symbol_table		3996501	1					
ANR	3996558	CompoundStatement		11:3:324:379	3996501	1					
ANR	3996559	IdentifierDeclStatement	"zend_ulong h = zend_hash_func ( name , len ) ;"	1624:3:46294:46334	3996501	0	True				
ANR	3996560	IdentifierDecl	"h = zend_hash_func ( name , len )"		3996501	0					
ANR	3996561	IdentifierDeclType	zend_ulong		3996501	0					
ANR	3996562	Identifier	h		3996501	1					
ANR	3996563	AssignmentExpression	"h = zend_hash_func ( name , len )"		3996501	2		=			
ANR	3996564	Identifier	h		3996501	0					
ANR	3996565	CallExpression	"zend_hash_func ( name , len )"		3996501	1					
ANR	3996566	Callee	zend_hash_func		3996501	0					
ANR	3996567	Identifier	zend_hash_func		3996501	0					
ANR	3996568	ArgumentList	name		3996501	1					
ANR	3996569	Argument	name		3996501	0					
ANR	3996570	Identifier	name		3996501	0					
ANR	3996571	Argument	len		3996501	1					
ANR	3996572	Identifier	len		3996501	0					
ANR	3996573	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1625:3:46339:46394	3996501	1	True				
ANR	3996574	IdentifierDecl	* op_array = & execute_data -> func -> op_array		3996501	0					
ANR	3996575	IdentifierDeclType	zend_op_array *		3996501	0					
ANR	3996576	Identifier	op_array		3996501	1					
ANR	3996577	AssignmentExpression	* op_array = & execute_data -> func -> op_array		3996501	2		=			
ANR	3996578	Identifier	op_array		3996501	0					
ANR	3996579	UnaryOperationExpression	& execute_data -> func -> op_array		3996501	1					
ANR	3996580	UnaryOperator	&		3996501	0					
ANR	3996581	PtrMemberAccess	execute_data -> func -> op_array		3996501	1					
ANR	3996582	PtrMemberAccess	execute_data -> func		3996501	0					
ANR	3996583	Identifier	execute_data		3996501	0					
ANR	3996584	Identifier	func		3996501	1					
ANR	3996585	Identifier	op_array		3996501	1					
ANR	3996586	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		3996501	2					
ANR	3996587	Condition	EXPECTED ( op_array -> last_var )	1626:7:46403:46430	3996501	0	True				
ANR	3996588	CallExpression	EXPECTED ( op_array -> last_var )		3996501	0					
ANR	3996589	Callee	EXPECTED		3996501	0					
ANR	3996590	Identifier	EXPECTED		3996501	0					
ANR	3996591	ArgumentList	op_array -> last_var		3996501	1					
ANR	3996592	Argument	op_array -> last_var		3996501	0					
ANR	3996593	PtrMemberAccess	op_array -> last_var		3996501	0					
ANR	3996594	Identifier	op_array		3996501	0					
ANR	3996595	Identifier	last_var		3996501	1					
ANR	3996596	CompoundStatement		14:4:464:508	3996501	1					
ANR	3996597	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1627:4:46439:46473	3996501	0	True				
ANR	3996598	IdentifierDecl	* * str = op_array -> vars		3996501	0					
ANR	3996599	IdentifierDeclType	zend_string * *		3996501	0					
ANR	3996600	Identifier	str		3996501	1					
ANR	3996601	AssignmentExpression	* * str = op_array -> vars		3996501	2		=			
ANR	3996602	Identifier	str		3996501	0					
ANR	3996603	PtrMemberAccess	op_array -> vars		3996501	1					
ANR	3996604	Identifier	op_array		3996501	0					
ANR	3996605	Identifier	vars		3996501	1					
ANR	3996606	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1628:4:46479:46523	3996501	1	True				
ANR	3996607	IdentifierDecl	* * end = str + op_array -> last_var		3996501	0					
ANR	3996608	IdentifierDeclType	zend_string * *		3996501	0					
ANR	3996609	Identifier	end		3996501	1					
ANR	3996610	AssignmentExpression	* * end = str + op_array -> last_var		3996501	2		=			
ANR	3996611	Identifier	end		3996501	0					
ANR	3996612	AdditiveExpression	str + op_array -> last_var		3996501	1		+			
ANR	3996613	Identifier	str		3996501	0					
ANR	3996614	PtrMemberAccess	op_array -> last_var		3996501	1					
ANR	3996615	Identifier	op_array		3996501	0					
ANR	3996616	Identifier	last_var		3996501	1					
ANR	3996617	DoStatement	do		3996501	2					
ANR	3996618	CompoundStatement		16:7:518:518	3996501	0					
ANR	3996619	IfStatement	"if ( ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0 )"		3996501	0					
ANR	3996620	Condition	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"	1631:9:46544:46645	3996501	0	True				
ANR	3996621	AndExpression	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"		3996501	0		&&			
ANR	3996622	EqualityExpression	ZSTR_H ( * str ) == h		3996501	0		==			
ANR	3996623	CallExpression	ZSTR_H ( * str )		3996501	0					
ANR	3996624	Callee	ZSTR_H		3996501	0					
ANR	3996625	Identifier	ZSTR_H		3996501	0					
ANR	3996626	ArgumentList	* str		3996501	1					
ANR	3996627	Argument	* str		3996501	0					
ANR	3996628	UnaryOperationExpression	* str		3996501	0					
ANR	3996629	UnaryOperator	*		3996501	0					
ANR	3996630	Identifier	str		3996501	1					
ANR	3996631	Identifier	h		3996501	1					
ANR	3996632	AndExpression	"ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"		3996501	1		&&			
ANR	3996633	EqualityExpression	ZSTR_LEN ( * str ) == len		3996501	0		==			
ANR	3996634	CallExpression	ZSTR_LEN ( * str )		3996501	0					
ANR	3996635	Callee	ZSTR_LEN		3996501	0					
ANR	3996636	Identifier	ZSTR_LEN		3996501	0					
ANR	3996637	ArgumentList	* str		3996501	1					
ANR	3996638	Argument	* str		3996501	0					
ANR	3996639	UnaryOperationExpression	* str		3996501	0					
ANR	3996640	UnaryOperator	*		3996501	0					
ANR	3996641	Identifier	str		3996501	1					
ANR	3996642	Identifier	len		3996501	1					
ANR	3996643	EqualityExpression	"memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"		3996501	1		==			
ANR	3996644	CallExpression	"memcmp ( ZSTR_VAL ( * str ) , name , len )"		3996501	0					
ANR	3996645	Callee	memcmp		3996501	0					
ANR	3996646	Identifier	memcmp		3996501	0					
ANR	3996647	ArgumentList	ZSTR_VAL ( * str )		3996501	1					
ANR	3996648	Argument	ZSTR_VAL ( * str )		3996501	0					
ANR	3996649	CallExpression	ZSTR_VAL ( * str )		3996501	0					
ANR	3996650	Callee	ZSTR_VAL		3996501	0					
ANR	3996651	Identifier	ZSTR_VAL		3996501	0					
ANR	3996652	ArgumentList	* str		3996501	1					
ANR	3996653	Argument	* str		3996501	0					
ANR	3996654	UnaryOperationExpression	* str		3996501	0					
ANR	3996655	UnaryOperator	*		3996501	0					
ANR	3996656	Identifier	str		3996501	1					
ANR	3996657	Argument	name		3996501	1					
ANR	3996658	Identifier	name		3996501	0					
ANR	3996659	Argument	len		3996501	2					
ANR	3996660	Identifier	len		3996501	0					
ANR	3996661	PrimaryExpression	0		3996501	1					
ANR	3996662	CompoundStatement		20:6:641:685	3996501	1					
ANR	3996663	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( str - op_array -> vars ) ;	1634:6:46656:46700	3996501	0	True				
ANR	3996664	IdentifierDecl	* var = EX_VAR_NUM ( str - op_array -> vars )		3996501	0					
ANR	3996665	IdentifierDeclType	zval *		3996501	0					
ANR	3996666	Identifier	var		3996501	1					
ANR	3996667	AssignmentExpression	* var = EX_VAR_NUM ( str - op_array -> vars )		3996501	2		=			
ANR	3996668	Identifier	var		3996501	0					
ANR	3996669	CallExpression	EX_VAR_NUM ( str - op_array -> vars )		3996501	1					
ANR	3996670	Callee	EX_VAR_NUM		3996501	0					
ANR	3996671	Identifier	EX_VAR_NUM		3996501	0					
ANR	3996672	ArgumentList	str - op_array -> vars		3996501	1					
ANR	3996673	Argument	str - op_array -> vars		3996501	0					
ANR	3996674	AdditiveExpression	str - op_array -> vars		3996501	0		-			
ANR	3996675	Identifier	str		3996501	0					
ANR	3996676	PtrMemberAccess	op_array -> vars		3996501	1					
ANR	3996677	Identifier	op_array		3996501	0					
ANR	3996678	Identifier	vars		3996501	1					
ANR	3996679	ExpressionStatement	zval_ptr_dtor ( var )	1635:6:46708:46726	3996501	1	True				
ANR	3996680	CallExpression	zval_ptr_dtor ( var )		3996501	0					
ANR	3996681	Callee	zval_ptr_dtor		3996501	0					
ANR	3996682	Identifier	zval_ptr_dtor		3996501	0					
ANR	3996683	ArgumentList	var		3996501	1					
ANR	3996684	Argument	var		3996501	0					
ANR	3996685	Identifier	var		3996501	0					
ANR	3996686	ExpressionStatement	"ZVAL_COPY_VALUE ( var , value )"	1636:6:46734:46761	3996501	2	True				
ANR	3996687	CallExpression	"ZVAL_COPY_VALUE ( var , value )"		3996501	0					
ANR	3996688	Callee	ZVAL_COPY_VALUE		3996501	0					
ANR	3996689	Identifier	ZVAL_COPY_VALUE		3996501	0					
ANR	3996690	ArgumentList	var		3996501	1					
ANR	3996691	Argument	var		3996501	0					
ANR	3996692	Identifier	var		3996501	0					
ANR	3996693	Argument	value		3996501	1					
ANR	3996694	Identifier	value		3996501	0					
ANR	3996695	ReturnStatement	return SUCCESS ;	1637:6:46769:46783	3996501	3	True				
ANR	3996696	Identifier	SUCCESS		3996501	0					
ANR	3996697	ExpressionStatement	str ++	1639:5:46797:46802	3996501	1	True				
ANR	3996698	PostIncDecOperationExpression	str ++		3996501	0					
ANR	3996699	Identifier	str		3996501	0					
ANR	3996700	IncDec	++		3996501	1					
ANR	3996701	Condition	str != end	1640:13:46817:46826	3996501	1	True				
ANR	3996702	EqualityExpression	str != end		3996501	0		!=			
ANR	3996703	Identifier	str		3996501	0					
ANR	3996704	Identifier	end		3996501	1					
ANR	3996705	IfStatement	if ( force )		3996501	3					
ANR	3996706	Condition	force	1642:7:46842:46846	3996501	0	True				
ANR	3996707	Identifier	force		3996501	0					
ANR	3996708	CompoundStatement		29:4:840:894	3996501	1					
ANR	3996709	IdentifierDeclStatement	zend_array * symbol_table = zend_rebuild_symbol_table ( ) ;	1643:4:46855:46909	3996501	0	True				
ANR	3996710	IdentifierDecl	* symbol_table = zend_rebuild_symbol_table ( )		3996501	0					
ANR	3996711	IdentifierDeclType	zend_array *		3996501	0					
ANR	3996712	Identifier	symbol_table		3996501	1					
ANR	3996713	AssignmentExpression	* symbol_table = zend_rebuild_symbol_table ( )		3996501	2		=			
ANR	3996714	Identifier	symbol_table		3996501	0					
ANR	3996715	CallExpression	zend_rebuild_symbol_table ( )		3996501	1					
ANR	3996716	Callee	zend_rebuild_symbol_table		3996501	0					
ANR	3996717	Identifier	zend_rebuild_symbol_table		3996501	0					
ANR	3996718	ArgumentList			3996501	1					
ANR	3996719	IfStatement	if ( symbol_table )		3996501	1					
ANR	3996720	Condition	symbol_table	1644:8:46919:46930	3996501	0	True				
ANR	3996721	Identifier	symbol_table		3996501	0					
ANR	3996722	CompoundStatement		30:22:918:918	3996501	1					
ANR	3996723	ReturnStatement	"return zend_hash_str_update ( symbol_table , name , len , value ) ? SUCCESS : FAILURE ;"	1645:5:46940:47019	3996501	0	True				
ANR	3996724	ConditionalExpression	"zend_hash_str_update ( symbol_table , name , len , value ) ? SUCCESS : FAILURE"		3996501	0					
ANR	3996725	Condition	"zend_hash_str_update ( symbol_table , name , len , value )"		3996501	0					
ANR	3996726	CallExpression	"zend_hash_str_update ( symbol_table , name , len , value )"		3996501	0					
ANR	3996727	Callee	zend_hash_str_update		3996501	0					
ANR	3996728	Identifier	zend_hash_str_update		3996501	0					
ANR	3996729	ArgumentList	symbol_table		3996501	1					
ANR	3996730	Argument	symbol_table		3996501	0					
ANR	3996731	Identifier	symbol_table		3996501	0					
ANR	3996732	Argument	name		3996501	1					
ANR	3996733	Identifier	name		3996501	0					
ANR	3996734	Argument	len		3996501	2					
ANR	3996735	Identifier	len		3996501	0					
ANR	3996736	Argument	value		3996501	3					
ANR	3996737	Identifier	value		3996501	0					
ANR	3996738	Identifier	SUCCESS		3996501	1					
ANR	3996739	Identifier	FAILURE		3996501	2					
ANR	3996740	ExpressionStatement		1645:85:47020:47020	3996501	1	True				
ANR	3996741	ElseStatement	else		3996501	0					
ANR	3996742	CompoundStatement		34:9:1027:1027	3996501	0					
ANR	3996743	ReturnStatement	"return ( zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL ) ? SUCCESS : FAILURE ;"	1649:3:47047:47154	3996501	0	True				
ANR	3996744	ConditionalExpression	"( zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL ) ? SUCCESS : FAILURE"		3996501	0					
ANR	3996745	Condition	"zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL"		3996501	0					
ANR	3996746	EqualityExpression	"zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL"		3996501	0		!=			
ANR	3996747	CallExpression	"zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value )"		3996501	0					
ANR	3996748	Callee	zend_hash_str_update_ind		3996501	0					
ANR	3996749	Identifier	zend_hash_str_update_ind		3996501	0					
ANR	3996750	ArgumentList	execute_data -> symbol_table		3996501	1					
ANR	3996751	Argument	execute_data -> symbol_table		3996501	0					
ANR	3996752	PtrMemberAccess	execute_data -> symbol_table		3996501	0					
ANR	3996753	Identifier	execute_data		3996501	0					
ANR	3996754	Identifier	symbol_table		3996501	1					
ANR	3996755	Argument	name		3996501	1					
ANR	3996756	Identifier	name		3996501	0					
ANR	3996757	Argument	len		3996501	2					
ANR	3996758	Identifier	len		3996501	0					
ANR	3996759	Argument	value		3996501	3					
ANR	3996760	Identifier	value		3996501	0					
ANR	3996761	Identifier	NULL		3996501	1					
ANR	3996762	Identifier	SUCCESS		3996501	1					
ANR	3996763	Identifier	FAILURE		3996501	2					
ANR	3996764	ReturnStatement	return FAILURE ;	1652:1:47164:47178	3996501	3	True				
ANR	3996765	Identifier	FAILURE		3996501	0					
ANR	3996766	ReturnType	ZEND_API int		3996501	1					
ANR	3996767	Identifier	zend_set_local_var_str		3996501	2					
ANR	3996768	ParameterList	"const char * name , size_t len , zval * value , int force"		3996501	3					
ANR	3996769	Parameter	const char * name	1614:36:45950:45965	3996501	0	True				
ANR	3996770	ParameterType	const char *		3996501	0					
ANR	3996771	Identifier	name		3996501	1					
ANR	3996772	Parameter	size_t len	1614:54:45968:45977	3996501	1	True				
ANR	3996773	ParameterType	size_t		3996501	0					
ANR	3996774	Identifier	len		3996501	1					
ANR	3996775	Parameter	zval * value	1614:66:45980:45990	3996501	2	True				
ANR	3996776	ParameterType	zval *		3996501	0					
ANR	3996777	Identifier	value		3996501	1					
ANR	3996778	Parameter	int force	1614:79:45993:46001	3996501	3	True				
ANR	3996779	ParameterType	int		3996501	0					
ANR	3996780	Identifier	force		3996501	1					
ANR	3996781	CFGEntryNode	ENTRY		3996501		True				
ANR	3996782	CFGExitNode	EXIT		3996501		True				
ANR	3996783	Symbol	zend_hash_str_update_ind		3996501						
ANR	3996784	Symbol	zend_rebuild_symbol_table		3996501						
ANR	3996785	Symbol	execute_data -> symbol_table		3996501						
ANR	3996786	Symbol	* execute_data -> func		3996501						
ANR	3996787	Symbol	zend_hash_str_update		3996501						
ANR	3996788	Symbol	current_execute_data		3996501						
ANR	3996789	Symbol	op_array -> last_var		3996501						
ANR	3996790	Symbol	zend_hash_func		3996501						
ANR	3996791	Symbol	ZSTR_H		3996501						
ANR	3996792	Symbol	execute_data		3996501						
ANR	3996793	Symbol	memcmp		3996501						
ANR	3996794	Symbol	len		3996501						
ANR	3996795	Symbol	& execute_data -> func -> op_array		3996501						
ANR	3996796	Symbol	* execute_data		3996501						
ANR	3996797	Symbol	end		3996501						
ANR	3996798	Symbol	execute_data -> func -> common		3996501						
ANR	3996799	Symbol	* str		3996501						
ANR	3996800	Symbol	value		3996501						
ANR	3996801	Symbol	EG		3996501						
ANR	3996802	Symbol	op_array -> vars		3996501						
ANR	3996803	Symbol	SUCCESS		3996501						
ANR	3996804	Symbol	NULL		3996501						
ANR	3996805	Symbol	var		3996501						
ANR	3996806	Symbol	h		3996501						
ANR	3996807	Symbol	symbol_table		3996501						
ANR	3996808	Symbol	execute_data -> func		3996501						
ANR	3996809	Symbol	FAILURE		3996501						
ANR	3996810	Symbol	* op_array		3996501						
ANR	3996811	Symbol	ZSTR_VAL		3996501						
ANR	3996812	Symbol	str		3996501						
ANR	3996813	Symbol	execute_data -> prev_execute_data		3996501						
ANR	3996814	Symbol	EX_VAR_NUM		3996501						
ANR	3996815	Symbol	name		3996501						
ANR	3996816	Symbol	ZSTR_LEN		3996501						
ANR	3996817	Symbol	ZEND_USER_CODE		3996501						
ANR	3996818	Symbol	* * execute_data		3996501						
ANR	3996819	Symbol	force		3996501						
ANR	3996820	Symbol	execute_data -> func -> common . type		3996501						
ANR	3996821	Symbol	EXPECTED		3996501						
ANR	3996822	Symbol	op_array		3996501						
