command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1555100	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_pcreposix.c								
ANR	1555101	DeclStmt									
ANR	1555102	Decl							const int	const int [ ]	eint
ANR	1555103	Function	regerror	207:0:9584:10318							
ANR	1555104	FunctionDef	"regerror (int errcode , const regex_t * preg , char * errbuf , size_t errbuf_size)"		1555103	0					
ANR	1555105	CompoundStatement		209:0:9708:10318	1555103	0					
ANR	1555106	IdentifierDeclStatement	"const char * message , * addmessage ;"	210:0:9710:9742	1555103	0	True				
ANR	1555107	IdentifierDecl	* message		1555103	0					
ANR	1555108	IdentifierDeclType	const char *		1555103	0					
ANR	1555109	Identifier	message		1555103	1					
ANR	1555110	IdentifierDecl	* addmessage		1555103	1					
ANR	1555111	IdentifierDeclType	const char *		1555103	0					
ANR	1555112	Identifier	addmessage		1555103	1					
ANR	1555113	IdentifierDeclStatement	"size_t length , addlength ;"	211:0:9744:9768	1555103	1	True				
ANR	1555114	IdentifierDecl	length		1555103	0					
ANR	1555115	IdentifierDeclType	size_t		1555103	0					
ANR	1555116	Identifier	length		1555103	1					
ANR	1555117	IdentifierDecl	addlength		1555103	1					
ANR	1555118	IdentifierDeclType	size_t		1555103	0					
ANR	1555119	Identifier	addlength		1555103	1					
ANR	1555120	ExpressionStatement	"message = ( errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) ) ) ? ""unknown error code"" : pstring [ errcode ]"	213:0:9771:9874	1555103	2	True				
ANR	1555121	AssignmentExpression	"message = ( errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) ) ) ? ""unknown error code"" : pstring [ errcode ]"		1555103	0		=			
ANR	1555122	Identifier	message		1555103	0					
ANR	1555123	ConditionalExpression	"( errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) ) ) ? ""unknown error code"" : pstring [ errcode ]"		1555103	1					
ANR	1555124	Condition	errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) )		1555103	0					
ANR	1555125	RelationalExpression	errcode >= ( int ) ( sizeof ( pstring ) / sizeof ( char * ) )		1555103	0		>=			
ANR	1555126	Identifier	errcode		1555103	0					
ANR	1555127	CastExpression	( int ) ( sizeof ( pstring ) / sizeof ( char * ) )		1555103	1					
ANR	1555128	CastTarget	int		1555103	0					
ANR	1555129	MultiplicativeExpression	sizeof ( pstring ) / sizeof ( char * )		1555103	1		/			
ANR	1555130	SizeofExpression	sizeof ( pstring )		1555103	0					
ANR	1555131	Sizeof	sizeof		1555103	0					
ANR	1555132	SizeofOperand	pstring		1555103	1					
ANR	1555133	SizeofExpression	sizeof ( char * )		1555103	1					
ANR	1555134	Sizeof	sizeof		1555103	0					
ANR	1555135	SizeofOperand	char *		1555103	1					
ANR	1555136	PrimaryExpression	"""unknown error code"""		1555103	1					
ANR	1555137	ArrayIndexing	pstring [ errcode ]		1555103	2					
ANR	1555138	Identifier	pstring		1555103	0					
ANR	1555139	Identifier	errcode		1555103	1					
ANR	1555140	ExpressionStatement	length = strlen ( message ) + 1	215:0:9876:9904	1555103	3	True				
ANR	1555141	AssignmentExpression	length = strlen ( message ) + 1		1555103	0		=			
ANR	1555142	Identifier	length		1555103	0					
ANR	1555143	AdditiveExpression	strlen ( message ) + 1		1555103	1		+			
ANR	1555144	CallExpression	strlen ( message )		1555103	0					
ANR	1555145	Callee	strlen		1555103	0					
ANR	1555146	Identifier	strlen		1555103	0					
ANR	1555147	ArgumentList	message		1555103	1					
ANR	1555148	Argument	message		1555103	0					
ANR	1555149	Identifier	message		1555103	0					
ANR	1555150	PrimaryExpression	1		1555103	1					
ANR	1555151	ExpressionStatement	"addmessage = "" at offset """	217:0:9907:9933	1555103	4	True				
ANR	1555152	AssignmentExpression	"addmessage = "" at offset """		1555103	0		=			
ANR	1555153	Identifier	addmessage		1555103	0					
ANR	1555154	PrimaryExpression	""" at offset """		1555103	1					
ANR	1555155	ExpressionStatement	addlength = ( preg != NULL && ( int ) preg -> re_erroffset != - 1 ) ? strlen ( addmessage ) + 6 : 0	218:0:9935:10024	1555103	5	True				
ANR	1555156	AssignmentExpression	addlength = ( preg != NULL && ( int ) preg -> re_erroffset != - 1 ) ? strlen ( addmessage ) + 6 : 0		1555103	0		=			
ANR	1555157	Identifier	addlength		1555103	0					
ANR	1555158	ConditionalExpression	( preg != NULL && ( int ) preg -> re_erroffset != - 1 ) ? strlen ( addmessage ) + 6 : 0		1555103	1					
ANR	1555159	Condition	preg != NULL && ( int ) preg -> re_erroffset != - 1		1555103	0					
ANR	1555160	AndExpression	preg != NULL && ( int ) preg -> re_erroffset != - 1		1555103	0		&&			
ANR	1555161	EqualityExpression	preg != NULL		1555103	0		!=			
ANR	1555162	Identifier	preg		1555103	0					
ANR	1555163	Identifier	NULL		1555103	1					
ANR	1555164	EqualityExpression	( int ) preg -> re_erroffset != - 1		1555103	1		!=			
ANR	1555165	CastExpression	( int ) preg -> re_erroffset		1555103	0					
ANR	1555166	CastTarget	int		1555103	0					
ANR	1555167	PtrMemberAccess	preg -> re_erroffset		1555103	1					
ANR	1555168	Identifier	preg		1555103	0					
ANR	1555169	Identifier	re_erroffset		1555103	1					
ANR	1555170	UnaryOperationExpression	- 1		1555103	1					
ANR	1555171	UnaryOperator	-		1555103	0					
ANR	1555172	PrimaryExpression	1		1555103	1					
ANR	1555173	AdditiveExpression	strlen ( addmessage ) + 6		1555103	1		+			
ANR	1555174	CallExpression	strlen ( addmessage )		1555103	0					
ANR	1555175	Callee	strlen		1555103	0					
ANR	1555176	Identifier	strlen		1555103	0					
ANR	1555177	ArgumentList	addmessage		1555103	1					
ANR	1555178	Argument	addmessage		1555103	0					
ANR	1555179	Identifier	addmessage		1555103	0					
ANR	1555180	PrimaryExpression	6		1555103	1					
ANR	1555181	PrimaryExpression	0		1555103	2					
ANR	1555182	IfStatement	if ( errbuf_size > 0 )		1555103	6					
ANR	1555183	Condition	errbuf_size > 0	221:4:10031:10045	1555103	0	True				
ANR	1555184	RelationalExpression	errbuf_size > 0		1555103	0		>			
ANR	1555185	Identifier	errbuf_size		1555103	0					
ANR	1555186	PrimaryExpression	0		1555103	1					
ANR	1555187	CompoundStatement		14:2:341:341	1555103	1					
ANR	1555188	IfStatement	if ( addlength > 0 && errbuf_size >= length + addlength )		1555103	0					
ANR	1555189	Condition	addlength > 0 && errbuf_size >= length + addlength	223:6:10058:10107	1555103	0	True				
ANR	1555190	AndExpression	addlength > 0 && errbuf_size >= length + addlength		1555103	0		&&			
ANR	1555191	RelationalExpression	addlength > 0		1555103	0		>			
ANR	1555192	Identifier	addlength		1555103	0					
ANR	1555193	PrimaryExpression	0		1555103	1					
ANR	1555194	RelationalExpression	errbuf_size >= length + addlength		1555103	1		>=			
ANR	1555195	Identifier	errbuf_size		1555103	0					
ANR	1555196	AdditiveExpression	length + addlength		1555103	1		+			
ANR	1555197	Identifier	length		1555103	0					
ANR	1555198	Identifier	addlength		1555103	1					
ANR	1555199	ExpressionStatement	"sprintf ( errbuf , ""%s%s%-6d"" , message , addmessage , ( int ) preg -> re_erroffset )"	224:4:10114:10187	1555103	1	True				
ANR	1555200	CallExpression	"sprintf ( errbuf , ""%s%s%-6d"" , message , addmessage , ( int ) preg -> re_erroffset )"		1555103	0					
ANR	1555201	Callee	sprintf		1555103	0					
ANR	1555202	Identifier	sprintf		1555103	0					
ANR	1555203	ArgumentList	errbuf		1555103	1					
ANR	1555204	Argument	errbuf		1555103	0					
ANR	1555205	Identifier	errbuf		1555103	0					
ANR	1555206	Argument	"""%s%s%-6d"""		1555103	1					
ANR	1555207	PrimaryExpression	"""%s%s%-6d"""		1555103	0					
ANR	1555208	Argument	message		1555103	2					
ANR	1555209	Identifier	message		1555103	0					
ANR	1555210	Argument	addmessage		1555103	3					
ANR	1555211	Identifier	addmessage		1555103	0					
ANR	1555212	Argument	( int ) preg -> re_erroffset		1555103	4					
ANR	1555213	CastExpression	( int ) preg -> re_erroffset		1555103	0					
ANR	1555214	CastTarget	int		1555103	0					
ANR	1555215	PtrMemberAccess	preg -> re_erroffset		1555103	1					
ANR	1555216	Identifier	preg		1555103	0					
ANR	1555217	Identifier	re_erroffset		1555103	1					
ANR	1555218	ElseStatement	else		1555103	0					
ANR	1555219	CompoundStatement		18:4:491:491	1555103	0					
ANR	1555220	ExpressionStatement	"strncpy ( errbuf , message , errbuf_size - 1 )"	227:4:10206:10247	1555103	0	True				
ANR	1555221	CallExpression	"strncpy ( errbuf , message , errbuf_size - 1 )"		1555103	0					
ANR	1555222	Callee	strncpy		1555103	0					
ANR	1555223	Identifier	strncpy		1555103	0					
ANR	1555224	ArgumentList	errbuf		1555103	1					
ANR	1555225	Argument	errbuf		1555103	0					
ANR	1555226	Identifier	errbuf		1555103	0					
ANR	1555227	Argument	message		1555103	1					
ANR	1555228	Identifier	message		1555103	0					
ANR	1555229	Argument	errbuf_size - 1		1555103	2					
ANR	1555230	AdditiveExpression	errbuf_size - 1		1555103	0		-			
ANR	1555231	Identifier	errbuf_size		1555103	0					
ANR	1555232	PrimaryExpression	1		1555103	1					
ANR	1555233	ExpressionStatement	errbuf [ errbuf_size - 1 ] = 0	228:4:10253:10278	1555103	1	True				
ANR	1555234	AssignmentExpression	errbuf [ errbuf_size - 1 ] = 0		1555103	0		=			
ANR	1555235	ArrayIndexing	errbuf [ errbuf_size - 1 ]		1555103	0					
ANR	1555236	Identifier	errbuf		1555103	0					
ANR	1555237	AdditiveExpression	errbuf_size - 1		1555103	1		-			
ANR	1555238	Identifier	errbuf_size		1555103	0					
ANR	1555239	PrimaryExpression	1		1555103	1					
ANR	1555240	PrimaryExpression	0		1555103	1					
ANR	1555241	ReturnStatement	return length + addlength ;	232:0:10291:10316	1555103	7	True				
ANR	1555242	AdditiveExpression	length + addlength		1555103	0		+			
ANR	1555243	Identifier	length		1555103	0					
ANR	1555244	Identifier	addlength		1555103	1					
ANR	1555245	ReturnType	PCREPOSIX_EXP_DEFN size_t PCRE_CALL_CONVENTION		1555103	1					
ANR	1555246	Identifier	regerror		1555103	2					
ANR	1555247	ParameterList	"int errcode , const regex_t * preg , char * errbuf , size_t errbuf_size"		1555103	3					
ANR	1555248	Parameter	int errcode	208:9:9640:9650	1555103	0	True				
ANR	1555249	ParameterType	int		1555103	0					
ANR	1555250	Identifier	errcode		1555103	1					
ANR	1555251	Parameter	const regex_t * preg	208:22:9653:9671	1555103	1	True				
ANR	1555252	ParameterType	const regex_t *		1555103	0					
ANR	1555253	Identifier	preg		1555103	1					
ANR	1555254	Parameter	char * errbuf	208:43:9674:9685	1555103	2	True				
ANR	1555255	ParameterType	char *		1555103	0					
ANR	1555256	Identifier	errbuf		1555103	1					
ANR	1555257	Parameter	size_t errbuf_size	208:57:9688:9705	1555103	3	True				
ANR	1555258	ParameterType	size_t		1555103	0					
ANR	1555259	Identifier	errbuf_size		1555103	1					
ANR	1555260	CFGEntryNode	ENTRY		1555103		True				
ANR	1555261	CFGExitNode	EXIT		1555103		True				
ANR	1555262	Symbol	errcode		1555103						
ANR	1555263	Symbol	errbuf_size		1555103						
ANR	1555264	Symbol	NULL		1555103						
ANR	1555265	Symbol	* pstring		1555103						
ANR	1555266	Symbol	addlength		1555103						
ANR	1555267	Symbol	length		1555103						
ANR	1555268	Symbol	addmessage		1555103						
ANR	1555269	Symbol	* errbuf		1555103						
ANR	1555270	Symbol	message		1555103						
ANR	1555271	Symbol	preg -> re_erroffset		1555103						
ANR	1555272	Symbol	pstring		1555103						
ANR	1555273	Symbol	* errcode		1555103						
ANR	1555274	Symbol	preg		1555103						
ANR	1555275	Symbol	strlen		1555103						
ANR	1555276	Symbol	* preg		1555103						
ANR	1555277	Symbol	errbuf		1555103						
ANR	1555278	Symbol	* errbuf_size		1555103						
ANR	1555279	Function	regfree	242:0:10478:10577							
ANR	1555280	FunctionDef	regfree (regex_t * preg)		1555279	0					
ANR	1555281	CompoundStatement		244:0:10546:10577	1555279	0					
ANR	1555282	ExpressionStatement	( PUBL ( free ) ) ( preg -> re_pcre )	245:0:10548:10575	1555279	0	True				
ANR	1555283	CallExpression	( PUBL ( free ) ) ( preg -> re_pcre )		1555279	0					
ANR	1555284	Callee	PUBL ( free )		1555279	0					
ANR	1555285	CallExpression	PUBL ( free )		1555279	0					
ANR	1555286	Callee	PUBL		1555279	0					
ANR	1555287	Identifier	PUBL		1555279	0					
ANR	1555288	ArgumentList	free		1555279	1					
ANR	1555289	Argument	free		1555279	0					
ANR	1555290	Identifier	free		1555279	0					
ANR	1555291	ArgumentList	preg -> re_pcre		1555279	1					
ANR	1555292	Argument	preg -> re_pcre		1555279	0					
ANR	1555293	PtrMemberAccess	preg -> re_pcre		1555279	0					
ANR	1555294	Identifier	preg		1555279	0					
ANR	1555295	Identifier	re_pcre		1555279	1					
ANR	1555296	ReturnType	PCREPOSIX_EXP_DEFN void PCRE_CALL_CONVENTION		1555279	1					
ANR	1555297	Identifier	regfree		1555279	2					
ANR	1555298	ParameterList	regex_t * preg		1555279	3					
ANR	1555299	Parameter	regex_t * preg	243:8:10531:10543	1555279	0	True				
ANR	1555300	ParameterType	regex_t *		1555279	0					
ANR	1555301	Identifier	preg		1555279	1					
ANR	1555302	CFGEntryNode	ENTRY		1555279		True				
ANR	1555303	CFGExitNode	EXIT		1555279		True				
ANR	1555304	Symbol	preg		1555279						
ANR	1555305	Symbol	* preg		1555279						
ANR	1555306	Symbol	preg -> re_pcre		1555279						
ANR	1555307	Symbol	free		1555279						
ANR	1555308	Function	regcomp	265:0:10974:12116							
ANR	1555309	FunctionDef	"regcomp (regex_t * preg , const char * pattern , int cflags)"		1555308	0					
ANR	1555310	CompoundStatement		267:0:11074:12116	1555308	0					
ANR	1555311	IdentifierDeclStatement	const char * errorptr ;	268:0:11076:11096	1555308	0	True				
ANR	1555312	IdentifierDecl	* errorptr		1555308	0					
ANR	1555313	IdentifierDeclType	const char *		1555308	0					
ANR	1555314	Identifier	errorptr		1555308	1					
ANR	1555315	IdentifierDeclStatement	int erroffset ;	269:0:11098:11111	1555308	1	True				
ANR	1555316	IdentifierDecl	erroffset		1555308	0					
ANR	1555317	IdentifierDeclType	int		1555308	0					
ANR	1555318	Identifier	erroffset		1555308	1					
ANR	1555319	IdentifierDeclStatement	int errorcode ;	270:0:11113:11126	1555308	2	True				
ANR	1555320	IdentifierDecl	errorcode		1555308	0					
ANR	1555321	IdentifierDeclType	int		1555308	0					
ANR	1555322	Identifier	errorcode		1555308	1					
ANR	1555323	IdentifierDeclStatement	int options = 0 ;	271:0:11128:11143	1555308	3	True				
ANR	1555324	IdentifierDecl	options = 0		1555308	0					
ANR	1555325	IdentifierDeclType	int		1555308	0					
ANR	1555326	Identifier	options		1555308	1					
ANR	1555327	AssignmentExpression	options = 0		1555308	2		=			
ANR	1555328	Identifier	options		1555308	0					
ANR	1555329	PrimaryExpression	0		1555308	1					
ANR	1555330	IdentifierDeclStatement	int re_nsub = 0 ;	272:0:11145:11160	1555308	4	True				
ANR	1555331	IdentifierDecl	re_nsub = 0		1555308	0					
ANR	1555332	IdentifierDeclType	int		1555308	0					
ANR	1555333	Identifier	re_nsub		1555308	1					
ANR	1555334	AssignmentExpression	re_nsub = 0		1555308	2		=			
ANR	1555335	Identifier	re_nsub		1555308	0					
ANR	1555336	PrimaryExpression	0		1555308	1					
ANR	1555337	IfStatement	if ( ( cflags & REG_ICASE ) != 0 )		1555308	5					
ANR	1555338	Condition	( cflags & REG_ICASE ) != 0	274:4:11167:11191	1555308	0	True				
ANR	1555339	EqualityExpression	( cflags & REG_ICASE ) != 0		1555308	0		!=			
ANR	1555340	BitAndExpression	cflags & REG_ICASE		1555308	0		&			
ANR	1555341	Identifier	cflags		1555308	0					
ANR	1555342	Identifier	REG_ICASE		1555308	1					
ANR	1555343	PrimaryExpression	0		1555308	1					
ANR	1555344	ExpressionStatement	options |= PCRE_CASELESS	274:34:11197:11221	1555308	1	True				
ANR	1555345	AssignmentExpression	options |= PCRE_CASELESS		1555308	0		|=			
ANR	1555346	Identifier	options		1555308	0					
ANR	1555347	Identifier	PCRE_CASELESS		1555308	1					
ANR	1555348	IfStatement	if ( ( cflags & REG_NEWLINE ) != 0 )		1555308	6					
ANR	1555349	Condition	( cflags & REG_NEWLINE ) != 0	275:4:11227:11253	1555308	0	True				
ANR	1555350	EqualityExpression	( cflags & REG_NEWLINE ) != 0		1555308	0		!=			
ANR	1555351	BitAndExpression	cflags & REG_NEWLINE		1555308	0		&			
ANR	1555352	Identifier	cflags		1555308	0					
ANR	1555353	Identifier	REG_NEWLINE		1555308	1					
ANR	1555354	PrimaryExpression	0		1555308	1					
ANR	1555355	ExpressionStatement	options |= PCRE_MULTILINE	275:34:11257:11282	1555308	1	True				
ANR	1555356	AssignmentExpression	options |= PCRE_MULTILINE		1555308	0		|=			
ANR	1555357	Identifier	options		1555308	0					
ANR	1555358	Identifier	PCRE_MULTILINE		1555308	1					
ANR	1555359	IfStatement	if ( ( cflags & REG_DOTALL ) != 0 )		1555308	7					
ANR	1555360	Condition	( cflags & REG_DOTALL ) != 0	276:4:11288:11313	1555308	0	True				
ANR	1555361	EqualityExpression	( cflags & REG_DOTALL ) != 0		1555308	0		!=			
ANR	1555362	BitAndExpression	cflags & REG_DOTALL		1555308	0		&			
ANR	1555363	Identifier	cflags		1555308	0					
ANR	1555364	Identifier	REG_DOTALL		1555308	1					
ANR	1555365	PrimaryExpression	0		1555308	1					
ANR	1555366	ExpressionStatement	options |= PCRE_DOTALL	276:34:11318:11340	1555308	1	True				
ANR	1555367	AssignmentExpression	options |= PCRE_DOTALL		1555308	0		|=			
ANR	1555368	Identifier	options		1555308	0					
ANR	1555369	Identifier	PCRE_DOTALL		1555308	1					
ANR	1555370	IfStatement	if ( ( cflags & REG_NOSUB ) != 0 )		1555308	8					
ANR	1555371	Condition	( cflags & REG_NOSUB ) != 0	277:4:11346:11370	1555308	0	True				
ANR	1555372	EqualityExpression	( cflags & REG_NOSUB ) != 0		1555308	0		!=			
ANR	1555373	BitAndExpression	cflags & REG_NOSUB		1555308	0		&			
ANR	1555374	Identifier	cflags		1555308	0					
ANR	1555375	Identifier	REG_NOSUB		1555308	1					
ANR	1555376	PrimaryExpression	0		1555308	1					
ANR	1555377	ExpressionStatement	options |= PCRE_NO_AUTO_CAPTURE	277:34:11376:11407	1555308	1	True				
ANR	1555378	AssignmentExpression	options |= PCRE_NO_AUTO_CAPTURE		1555308	0		|=			
ANR	1555379	Identifier	options		1555308	0					
ANR	1555380	Identifier	PCRE_NO_AUTO_CAPTURE		1555308	1					
ANR	1555381	IfStatement	if ( ( cflags & REG_UTF8 ) != 0 )		1555308	9					
ANR	1555382	Condition	( cflags & REG_UTF8 ) != 0	278:4:11413:11436	1555308	0	True				
ANR	1555383	EqualityExpression	( cflags & REG_UTF8 ) != 0		1555308	0		!=			
ANR	1555384	BitAndExpression	cflags & REG_UTF8		1555308	0		&			
ANR	1555385	Identifier	cflags		1555308	0					
ANR	1555386	Identifier	REG_UTF8		1555308	1					
ANR	1555387	PrimaryExpression	0		1555308	1					
ANR	1555388	ExpressionStatement	options |= PCRE_UTF8	278:34:11443:11463	1555308	1	True				
ANR	1555389	AssignmentExpression	options |= PCRE_UTF8		1555308	0		|=			
ANR	1555390	Identifier	options		1555308	0					
ANR	1555391	Identifier	PCRE_UTF8		1555308	1					
ANR	1555392	IfStatement	if ( ( cflags & REG_UCP ) != 0 )		1555308	10					
ANR	1555393	Condition	( cflags & REG_UCP ) != 0	279:4:11469:11491	1555308	0	True				
ANR	1555394	EqualityExpression	( cflags & REG_UCP ) != 0		1555308	0		!=			
ANR	1555395	BitAndExpression	cflags & REG_UCP		1555308	0		&			
ANR	1555396	Identifier	cflags		1555308	0					
ANR	1555397	Identifier	REG_UCP		1555308	1					
ANR	1555398	PrimaryExpression	0		1555308	1					
ANR	1555399	ExpressionStatement	options |= PCRE_UCP	279:34:11499:11518	1555308	1	True				
ANR	1555400	AssignmentExpression	options |= PCRE_UCP		1555308	0		|=			
ANR	1555401	Identifier	options		1555308	0					
ANR	1555402	Identifier	PCRE_UCP		1555308	1					
ANR	1555403	IfStatement	if ( ( cflags & REG_UNGREEDY ) != 0 )		1555308	11					
ANR	1555404	Condition	( cflags & REG_UNGREEDY ) != 0	280:4:11524:11551	1555308	0	True				
ANR	1555405	EqualityExpression	( cflags & REG_UNGREEDY ) != 0		1555308	0		!=			
ANR	1555406	BitAndExpression	cflags & REG_UNGREEDY		1555308	0		&			
ANR	1555407	Identifier	cflags		1555308	0					
ANR	1555408	Identifier	REG_UNGREEDY		1555308	1					
ANR	1555409	PrimaryExpression	0		1555308	1					
ANR	1555410	ExpressionStatement	options |= PCRE_UNGREEDY	280:34:11554:11578	1555308	1	True				
ANR	1555411	AssignmentExpression	options |= PCRE_UNGREEDY		1555308	0		|=			
ANR	1555412	Identifier	options		1555308	0					
ANR	1555413	Identifier	PCRE_UNGREEDY		1555308	1					
ANR	1555414	ExpressionStatement	"preg -> re_pcre = pcre_compile2 ( pattern , options , & errorcode , & errorptr , & erroffset , NULL )"	282:0:11581:11671	1555308	12	True				
ANR	1555415	AssignmentExpression	"preg -> re_pcre = pcre_compile2 ( pattern , options , & errorcode , & errorptr , & erroffset , NULL )"		1555308	0		=			
ANR	1555416	PtrMemberAccess	preg -> re_pcre		1555308	0					
ANR	1555417	Identifier	preg		1555308	0					
ANR	1555418	Identifier	re_pcre		1555308	1					
ANR	1555419	CallExpression	"pcre_compile2 ( pattern , options , & errorcode , & errorptr , & erroffset , NULL )"		1555308	1					
ANR	1555420	Callee	pcre_compile2		1555308	0					
ANR	1555421	Identifier	pcre_compile2		1555308	0					
ANR	1555422	ArgumentList	pattern		1555308	1					
ANR	1555423	Argument	pattern		1555308	0					
ANR	1555424	Identifier	pattern		1555308	0					
ANR	1555425	Argument	options		1555308	1					
ANR	1555426	Identifier	options		1555308	0					
ANR	1555427	Argument	& errorcode		1555308	2					
ANR	1555428	UnaryOperationExpression	& errorcode		1555308	0					
ANR	1555429	UnaryOperator	&		1555308	0					
ANR	1555430	Identifier	errorcode		1555308	1					
ANR	1555431	Argument	& errorptr		1555308	3					
ANR	1555432	UnaryOperationExpression	& errorptr		1555308	0					
ANR	1555433	UnaryOperator	&		1555308	0					
ANR	1555434	Identifier	errorptr		1555308	1					
ANR	1555435	Argument	& erroffset		1555308	4					
ANR	1555436	UnaryOperationExpression	& erroffset		1555308	0					
ANR	1555437	UnaryOperator	&		1555308	0					
ANR	1555438	Identifier	erroffset		1555308	1					
ANR	1555439	Argument	NULL		1555308	5					
ANR	1555440	Identifier	NULL		1555308	0					
ANR	1555441	ExpressionStatement	preg -> re_erroffset = erroffset	284:0:11673:11703	1555308	13	True				
ANR	1555442	AssignmentExpression	preg -> re_erroffset = erroffset		1555308	0		=			
ANR	1555443	PtrMemberAccess	preg -> re_erroffset		1555308	0					
ANR	1555444	Identifier	preg		1555308	0					
ANR	1555445	Identifier	re_erroffset		1555308	1					
ANR	1555446	Identifier	erroffset		1555308	1					
ANR	1555447	IfStatement	if ( preg -> re_pcre == NULL )		1555308	14					
ANR	1555448	Condition	preg -> re_pcre == NULL	289:4:11853:11873	1555308	0	True				
ANR	1555449	EqualityExpression	preg -> re_pcre == NULL		1555308	0		==			
ANR	1555450	PtrMemberAccess	preg -> re_pcre		1555308	0					
ANR	1555451	Identifier	preg		1555308	0					
ANR	1555452	Identifier	re_pcre		1555308	1					
ANR	1555453	Identifier	NULL		1555308	1					
ANR	1555454	CompoundStatement		24:2:803:803	1555308	1					
ANR	1555455	ReturnStatement	return ( errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) ) ) ? eint [ errorcode ] : REG_BADPAT ;	291:2:11882:11974	1555308	0	True				
ANR	1555456	ConditionalExpression	( errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) ) ) ? eint [ errorcode ] : REG_BADPAT		1555308	0					
ANR	1555457	Condition	errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) )		1555308	0					
ANR	1555458	RelationalExpression	errorcode < ( int ) ( sizeof ( eint ) / sizeof ( const int ) )		1555308	0		<			
ANR	1555459	Identifier	errorcode		1555308	0					
ANR	1555460	CastExpression	( int ) ( sizeof ( eint ) / sizeof ( const int ) )		1555308	1					
ANR	1555461	CastTarget	int		1555308	0					
ANR	1555462	MultiplicativeExpression	sizeof ( eint ) / sizeof ( const int )		1555308	1		/			
ANR	1555463	SizeofExpression	sizeof ( eint )		1555308	0					
ANR	1555464	Sizeof	sizeof		1555308	0					
ANR	1555465	SizeofOperand	eint		1555308	1					
ANR	1555466	SizeofExpression	sizeof ( const int )		1555308	1					
ANR	1555467	Sizeof	sizeof		1555308	0					
ANR	1555468	SizeofOperand	const int		1555308	1					
ANR	1555469	ArrayIndexing	eint [ errorcode ]		1555308	1					
ANR	1555470	Identifier	eint		1555308	0					
ANR	1555471	Identifier	errorcode		1555308	1					
ANR	1555472	Identifier	REG_BADPAT		1555308	2					
ANR	1555473	ExpressionStatement	"( void ) pcre_fullinfo ( ( const pcre * ) preg -> re_pcre , NULL , PCRE_INFO_CAPTURECOUNT , & re_nsub )"	295:0:11981:12071	1555308	15	True				
ANR	1555474	CastExpression	"( void ) pcre_fullinfo ( ( const pcre * ) preg -> re_pcre , NULL , PCRE_INFO_CAPTURECOUNT , & re_nsub )"		1555308	0					
ANR	1555475	CastTarget	void		1555308	0					
ANR	1555476	CallExpression	"pcre_fullinfo ( ( const pcre * ) preg -> re_pcre , NULL , PCRE_INFO_CAPTURECOUNT , & re_nsub )"		1555308	1					
ANR	1555477	Callee	pcre_fullinfo		1555308	0					
ANR	1555478	Identifier	pcre_fullinfo		1555308	0					
ANR	1555479	ArgumentList	( const pcre * ) preg -> re_pcre		1555308	1					
ANR	1555480	Argument	( const pcre * ) preg -> re_pcre		1555308	0					
ANR	1555481	CastExpression	( const pcre * ) preg -> re_pcre		1555308	0					
ANR	1555482	CastTarget	const pcre *		1555308	0					
ANR	1555483	PtrMemberAccess	preg -> re_pcre		1555308	1					
ANR	1555484	Identifier	preg		1555308	0					
ANR	1555485	Identifier	re_pcre		1555308	1					
ANR	1555486	Argument	NULL		1555308	1					
ANR	1555487	Identifier	NULL		1555308	0					
ANR	1555488	Argument	PCRE_INFO_CAPTURECOUNT		1555308	2					
ANR	1555489	Identifier	PCRE_INFO_CAPTURECOUNT		1555308	0					
ANR	1555490	Argument	& re_nsub		1555308	3					
ANR	1555491	UnaryOperationExpression	& re_nsub		1555308	0					
ANR	1555492	UnaryOperator	&		1555308	0					
ANR	1555493	Identifier	re_nsub		1555308	1					
ANR	1555494	ExpressionStatement	preg -> re_nsub = ( size_t ) re_nsub	297:0:12073:12104	1555308	16	True				
ANR	1555495	AssignmentExpression	preg -> re_nsub = ( size_t ) re_nsub		1555308	0		=			
ANR	1555496	PtrMemberAccess	preg -> re_nsub		1555308	0					
ANR	1555497	Identifier	preg		1555308	0					
ANR	1555498	Identifier	re_nsub		1555308	1					
ANR	1555499	CastExpression	( size_t ) re_nsub		1555308	1					
ANR	1555500	CastTarget	size_t		1555308	0					
ANR	1555501	Identifier	re_nsub		1555308	1					
ANR	1555502	ReturnStatement	return 0 ;	298:0:12106:12114	1555308	17	True				
ANR	1555503	PrimaryExpression	0		1555308	0					
ANR	1555504	ReturnType	PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION		1555308	1					
ANR	1555505	Identifier	regcomp		1555308	2					
ANR	1555506	ParameterList	"regex_t * preg , const char * pattern , int cflags"		1555308	3					
ANR	1555507	Parameter	regex_t * preg	266:8:11026:11038	1555308	0	True				
ANR	1555508	ParameterType	regex_t *		1555308	0					
ANR	1555509	Identifier	preg		1555308	1					
ANR	1555510	Parameter	const char * pattern	266:23:11041:11059	1555308	1	True				
ANR	1555511	ParameterType	const char *		1555308	0					
ANR	1555512	Identifier	pattern		1555308	1					
ANR	1555513	Parameter	int cflags	266:44:11062:11071	1555308	2	True				
ANR	1555514	ParameterType	int		1555308	0					
ANR	1555515	Identifier	cflags		1555308	1					
ANR	1555516	CFGEntryNode	ENTRY		1555308		True				
ANR	1555517	CFGExitNode	EXIT		1555308		True				
ANR	1555518	Symbol	REG_NEWLINE		1555308						
ANR	1555519	Symbol	REG_UTF8		1555308						
ANR	1555520	Symbol	eint		1555308						
ANR	1555521	Symbol	REG_DOTALL		1555308						
ANR	1555522	Symbol	REG_BADPAT		1555308						
ANR	1555523	Symbol	pattern		1555308						
ANR	1555524	Symbol	& errorptr		1555308						
ANR	1555525	Symbol	preg -> re_pcre		1555308						
ANR	1555526	Symbol	preg		1555308						
ANR	1555527	Symbol	re_nsub		1555308						
ANR	1555528	Symbol	errorptr		1555308						
ANR	1555529	Symbol	options		1555308						
ANR	1555530	Symbol	pcre_compile2		1555308						
ANR	1555531	Symbol	preg -> re_nsub		1555308						
ANR	1555532	Symbol	REG_ICASE		1555308						
ANR	1555533	Symbol	PCRE_INFO_CAPTURECOUNT		1555308						
ANR	1555534	Symbol	PCRE_CASELESS		1555308						
ANR	1555535	Symbol	& erroffset		1555308						
ANR	1555536	Symbol	errorcode		1555308						
ANR	1555537	Symbol	REG_UNGREEDY		1555308						
ANR	1555538	Symbol	* errorcode		1555308						
ANR	1555539	Symbol	NULL		1555308						
ANR	1555540	Symbol	REG_UCP		1555308						
ANR	1555541	Symbol	PCRE_UNGREEDY		1555308						
ANR	1555542	Symbol	PCRE_MULTILINE		1555308						
ANR	1555543	Symbol	PCRE_UCP		1555308						
ANR	1555544	Symbol	preg -> re_erroffset		1555308						
ANR	1555545	Symbol	& errorcode		1555308						
ANR	1555546	Symbol	PCRE_DOTALL		1555308						
ANR	1555547	Symbol	REG_NOSUB		1555308						
ANR	1555548	Symbol	& re_nsub		1555308						
ANR	1555549	Symbol	* preg		1555308						
ANR	1555550	Symbol	cflags		1555308						
ANR	1555551	Symbol	erroffset		1555308						
ANR	1555552	Symbol	PCRE_UTF8		1555308						
ANR	1555553	Symbol	PCRE_NO_AUTO_CAPTURE		1555308						
ANR	1555554	Symbol	* eint		1555308						
ANR	1555555	Function	regexec	319:0:12907:16296							
ANR	1555556	FunctionDef	"regexec (const regex_t * preg , const char * string , size_t nmatch , regmatch_t pmatch [ ] , int eflags)"		1555555	0					
ANR	1555557	CompoundStatement		322:0:13050:16296	1555555	0					
ANR	1555558	IdentifierDeclStatement	"int rc , so , eo ;"	323:0:13052:13066	1555555	0	True				
ANR	1555559	IdentifierDecl	rc		1555555	0					
ANR	1555560	IdentifierDeclType	int		1555555	0					
ANR	1555561	Identifier	rc		1555555	1					
ANR	1555562	IdentifierDecl	so		1555555	1					
ANR	1555563	IdentifierDeclType	int		1555555	0					
ANR	1555564	Identifier	so		1555555	1					
ANR	1555565	IdentifierDecl	eo		1555555	2					
ANR	1555566	IdentifierDeclType	int		1555555	0					
ANR	1555567	Identifier	eo		1555555	1					
ANR	1555568	IdentifierDeclStatement	int options = 0 ;	324:0:13068:13083	1555555	1	True				
ANR	1555569	IdentifierDecl	options = 0		1555555	0					
ANR	1555570	IdentifierDeclType	int		1555555	0					
ANR	1555571	Identifier	options		1555555	1					
ANR	1555572	AssignmentExpression	options = 0		1555555	2		=			
ANR	1555573	Identifier	options		1555555	0					
ANR	1555574	PrimaryExpression	0		1555555	1					
ANR	1555575	IdentifierDeclStatement	int * ovector = NULL ;	325:0:13085:13104	1555555	2	True				
ANR	1555576	IdentifierDecl	* ovector = NULL		1555555	0					
ANR	1555577	IdentifierDeclType	int *		1555555	0					
ANR	1555578	Identifier	ovector		1555555	1					
ANR	1555579	AssignmentExpression	* ovector = NULL		1555555	2		=			
ANR	1555580	Identifier	NULL		1555555	0					
ANR	1555581	Identifier	NULL		1555555	1					
ANR	1555582	IdentifierDeclStatement	int small_ovector [ POSIX_MALLOC_THRESHOLD * 3 ] ;	326:0:13106:13151	1555555	3	True				
ANR	1555583	IdentifierDecl	small_ovector [ POSIX_MALLOC_THRESHOLD * 3 ]		1555555	0					
ANR	1555584	IdentifierDeclType	int [ POSIX_MALLOC_THRESHOLD * 3 ]		1555555	0					
ANR	1555585	Identifier	small_ovector		1555555	1					
ANR	1555586	MultiplicativeExpression	POSIX_MALLOC_THRESHOLD * 3		1555555	2		*			
ANR	1555587	Identifier	POSIX_MALLOC_THRESHOLD		1555555	0					
ANR	1555588	PrimaryExpression	3		1555555	1					
ANR	1555589	IdentifierDeclStatement	BOOL allocated_ovector = FALSE ;	327:0:13153:13183	1555555	4	True				
ANR	1555590	IdentifierDecl	allocated_ovector = FALSE		1555555	0					
ANR	1555591	IdentifierDeclType	BOOL		1555555	0					
ANR	1555592	Identifier	allocated_ovector		1555555	1					
ANR	1555593	AssignmentExpression	allocated_ovector = FALSE		1555555	2		=			
ANR	1555594	Identifier	FALSE		1555555	0					
ANR	1555595	Identifier	FALSE		1555555	1					
ANR	1555596	IdentifierDeclStatement	BOOL nosub = ( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0 ;	328:0:13185:13276	1555555	5	True				
ANR	1555597	IdentifierDecl	nosub = ( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0		1555555	0					
ANR	1555598	IdentifierDeclType	BOOL		1555555	0					
ANR	1555599	Identifier	nosub		1555555	1					
ANR	1555600	AssignmentExpression	nosub = ( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0		1555555	2		=			
ANR	1555601	Identifier	nosub		1555555	0					
ANR	1555602	EqualityExpression	( REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE ) != 0		1555555	1		!=			
ANR	1555603	BitAndExpression	REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre ) & PCRE_NO_AUTO_CAPTURE		1555555	0		&			
ANR	1555604	CallExpression	REAL_PCRE_OPTIONS ( ( const pcre * ) preg -> re_pcre )		1555555	0					
ANR	1555605	Callee	REAL_PCRE_OPTIONS		1555555	0					
ANR	1555606	Identifier	REAL_PCRE_OPTIONS		1555555	0					
ANR	1555607	ArgumentList	( const pcre * ) preg -> re_pcre		1555555	1					
ANR	1555608	Argument	( const pcre * ) preg -> re_pcre		1555555	0					
ANR	1555609	CastExpression	( const pcre * ) preg -> re_pcre		1555555	0					
ANR	1555610	CastTarget	const pcre *		1555555	0					
ANR	1555611	PtrMemberAccess	preg -> re_pcre		1555555	1					
ANR	1555612	Identifier	preg		1555555	0					
ANR	1555613	Identifier	re_pcre		1555555	1					
ANR	1555614	Identifier	PCRE_NO_AUTO_CAPTURE		1555555	1					
ANR	1555615	PrimaryExpression	0		1555555	1					
ANR	1555616	IfStatement	if ( ( eflags & REG_NOTBOL ) != 0 )		1555555	6					
ANR	1555617	Condition	( eflags & REG_NOTBOL ) != 0	331:4:13283:13308	1555555	0	True				
ANR	1555618	EqualityExpression	( eflags & REG_NOTBOL ) != 0		1555555	0		!=			
ANR	1555619	BitAndExpression	eflags & REG_NOTBOL		1555555	0		&			
ANR	1555620	Identifier	eflags		1555555	0					
ANR	1555621	Identifier	REG_NOTBOL		1555555	1					
ANR	1555622	PrimaryExpression	0		1555555	1					
ANR	1555623	ExpressionStatement	options |= PCRE_NOTBOL	331:32:13311:13333	1555555	1	True				
ANR	1555624	AssignmentExpression	options |= PCRE_NOTBOL		1555555	0		|=			
ANR	1555625	Identifier	options		1555555	0					
ANR	1555626	Identifier	PCRE_NOTBOL		1555555	1					
ANR	1555627	IfStatement	if ( ( eflags & REG_NOTEOL ) != 0 )		1555555	7					
ANR	1555628	Condition	( eflags & REG_NOTEOL ) != 0	332:4:13339:13364	1555555	0	True				
ANR	1555629	EqualityExpression	( eflags & REG_NOTEOL ) != 0		1555555	0		!=			
ANR	1555630	BitAndExpression	eflags & REG_NOTEOL		1555555	0		&			
ANR	1555631	Identifier	eflags		1555555	0					
ANR	1555632	Identifier	REG_NOTEOL		1555555	1					
ANR	1555633	PrimaryExpression	0		1555555	1					
ANR	1555634	ExpressionStatement	options |= PCRE_NOTEOL	332:32:13367:13389	1555555	1	True				
ANR	1555635	AssignmentExpression	options |= PCRE_NOTEOL		1555555	0		|=			
ANR	1555636	Identifier	options		1555555	0					
ANR	1555637	Identifier	PCRE_NOTEOL		1555555	1					
ANR	1555638	IfStatement	if ( ( eflags & REG_NOTEMPTY ) != 0 )		1555555	8					
ANR	1555639	Condition	( eflags & REG_NOTEMPTY ) != 0	333:4:13395:13422	1555555	0	True				
ANR	1555640	EqualityExpression	( eflags & REG_NOTEMPTY ) != 0		1555555	0		!=			
ANR	1555641	BitAndExpression	eflags & REG_NOTEMPTY		1555555	0		&			
ANR	1555642	Identifier	eflags		1555555	0					
ANR	1555643	Identifier	REG_NOTEMPTY		1555555	1					
ANR	1555644	PrimaryExpression	0		1555555	1					
ANR	1555645	ExpressionStatement	options |= PCRE_NOTEMPTY	333:34:13425:13449	1555555	1	True				
ANR	1555646	AssignmentExpression	options |= PCRE_NOTEMPTY		1555555	0		|=			
ANR	1555647	Identifier	options		1555555	0					
ANR	1555648	Identifier	PCRE_NOTEMPTY		1555555	1					
ANR	1555649	ExpressionStatement	( ( regex_t * ) preg ) -> re_erroffset = ( size_t ) ( - 1 )	335:0:13452:13498	1555555	9	True				
ANR	1555650	AssignmentExpression	( ( regex_t * ) preg ) -> re_erroffset = ( size_t ) ( - 1 )		1555555	0		=			
ANR	1555651	PtrMemberAccess	( ( regex_t * ) preg ) -> re_erroffset		1555555	0					
ANR	1555652	CastExpression	( regex_t * ) preg		1555555	0					
ANR	1555653	CastTarget	regex_t *		1555555	0					
ANR	1555654	Identifier	preg		1555555	1					
ANR	1555655	Identifier	re_erroffset		1555555	1					
ANR	1555656	CastExpression	( size_t ) ( - 1 )		1555555	1					
ANR	1555657	CastTarget	size_t		1555555	0					
ANR	1555658	UnaryOperationExpression	- 1		1555555	1					
ANR	1555659	UnaryOperator	-		1555555	0					
ANR	1555660	PrimaryExpression	1		1555555	1					
ANR	1555661	IfStatement	if ( nosub || pmatch == NULL )		1555555	10					
ANR	1555662	Condition	nosub || pmatch == NULL	341:4:13740:13762	1555555	0	True				
ANR	1555663	OrExpression	nosub || pmatch == NULL		1555555	0		||			
ANR	1555664	Identifier	nosub		1555555	0					
ANR	1555665	EqualityExpression	pmatch == NULL		1555555	1		==			
ANR	1555666	Identifier	pmatch		1555555	0					
ANR	1555667	Identifier	NULL		1555555	1					
ANR	1555668	ExpressionStatement	nmatch = 0	341:29:13765:13775	1555555	1	True				
ANR	1555669	AssignmentExpression	nmatch = 0		1555555	0		=			
ANR	1555670	Identifier	nmatch		1555555	0					
ANR	1555671	PrimaryExpression	0		1555555	1					
ANR	1555672	ElseStatement	else		1555555	0					
ANR	1555673	IfStatement	if ( nmatch > 0 )		1555555	0					
ANR	1555674	Condition	nmatch > 0	343:9:13787:13796	1555555	0	True				
ANR	1555675	RelationalExpression	nmatch > 0		1555555	0		>			
ANR	1555676	Identifier	nmatch		1555555	0					
ANR	1555677	PrimaryExpression	0		1555555	1					
ANR	1555678	CompoundStatement		23:2:750:750	1555555	1					
ANR	1555679	IfStatement	if ( nmatch <= POSIX_MALLOC_THRESHOLD )		1555555	0					
ANR	1555680	Condition	nmatch <= POSIX_MALLOC_THRESHOLD	345:6:13809:13840	1555555	0	True				
ANR	1555681	RelationalExpression	nmatch <= POSIX_MALLOC_THRESHOLD		1555555	0		<=			
ANR	1555682	Identifier	nmatch		1555555	0					
ANR	1555683	Identifier	POSIX_MALLOC_THRESHOLD		1555555	1					
ANR	1555684	CompoundStatement		25:4:796:796	1555555	1					
ANR	1555685	ExpressionStatement	ovector = & ( small_ovector [ 0 ] )	347:4:13853:13882	1555555	0	True				
ANR	1555686	AssignmentExpression	ovector = & ( small_ovector [ 0 ] )		1555555	0		=			
ANR	1555687	Identifier	ovector		1555555	0					
ANR	1555688	UnaryOperationExpression	& ( small_ovector [ 0 ] )		1555555	1					
ANR	1555689	UnaryOperator	&		1555555	0					
ANR	1555690	ArrayIndexing	small_ovector [ 0 ]		1555555	1					
ANR	1555691	Identifier	small_ovector		1555555	0					
ANR	1555692	PrimaryExpression	0		1555555	1					
ANR	1555693	ElseStatement	else		1555555	0					
ANR	1555694	CompoundStatement		29:4:850:850	1555555	0					
ANR	1555695	IfStatement	if ( nmatch > INT_MAX / ( sizeof ( int ) * 3 ) )		1555555	0					
ANR	1555696	Condition	nmatch > INT_MAX / ( sizeof ( int ) * 3 )	351:8:13911:13944	1555555	0	True				
ANR	1555697	RelationalExpression	nmatch > INT_MAX / ( sizeof ( int ) * 3 )		1555555	0		>			
ANR	1555698	Identifier	nmatch		1555555	0					
ANR	1555699	MultiplicativeExpression	INT_MAX / ( sizeof ( int ) * 3 )		1555555	1		/			
ANR	1555700	Identifier	INT_MAX		1555555	0					
ANR	1555701	MultiplicativeExpression	sizeof ( int ) * 3		1555555	1		*			
ANR	1555702	SizeofExpression	sizeof ( int )		1555555	0					
ANR	1555703	Sizeof	sizeof		1555555	0					
ANR	1555704	SizeofOperand	int		1555555	1					
ANR	1555705	PrimaryExpression	3		1555555	1					
ANR	1555706	ReturnStatement	return REG_ESPACE ;	351:44:13947:13964	1555555	1	True				
ANR	1555707	Identifier	REG_ESPACE		1555555	0					
ANR	1555708	ExpressionStatement	ovector = ( int * ) malloc ( sizeof ( int ) * nmatch * 3 )	352:4:13970:14019	1555555	1	True				
ANR	1555709	AssignmentExpression	ovector = ( int * ) malloc ( sizeof ( int ) * nmatch * 3 )		1555555	0		=			
ANR	1555710	Identifier	ovector		1555555	0					
ANR	1555711	CastExpression	( int * ) malloc ( sizeof ( int ) * nmatch * 3 )		1555555	1					
ANR	1555712	CastTarget	int *		1555555	0					
ANR	1555713	CallExpression	malloc ( sizeof ( int ) * nmatch * 3 )		1555555	1					
ANR	1555714	Callee	malloc		1555555	0					
ANR	1555715	Identifier	malloc		1555555	0					
ANR	1555716	ArgumentList	sizeof ( int ) * nmatch * 3		1555555	1					
ANR	1555717	Argument	sizeof ( int ) * nmatch * 3		1555555	0					
ANR	1555718	MultiplicativeExpression	sizeof ( int ) * nmatch * 3		1555555	0		*			
ANR	1555719	SizeofExpression	sizeof ( int )		1555555	0					
ANR	1555720	Sizeof	sizeof		1555555	0					
ANR	1555721	SizeofOperand	int		1555555	1					
ANR	1555722	MultiplicativeExpression	nmatch * 3		1555555	1		*			
ANR	1555723	Identifier	nmatch		1555555	0					
ANR	1555724	PrimaryExpression	3		1555555	1					
ANR	1555725	IfStatement	if ( ovector == NULL )		1555555	2					
ANR	1555726	Condition	ovector == NULL	353:8:14029:14043	1555555	0	True				
ANR	1555727	EqualityExpression	ovector == NULL		1555555	0		==			
ANR	1555728	Identifier	ovector		1555555	0					
ANR	1555729	Identifier	NULL		1555555	1					
ANR	1555730	ReturnStatement	return REG_ESPACE ;	353:25:14046:14063	1555555	1	True				
ANR	1555731	Identifier	REG_ESPACE		1555555	0					
ANR	1555732	ExpressionStatement	allocated_ovector = TRUE	354:4:14069:14093	1555555	3	True				
ANR	1555733	AssignmentExpression	allocated_ovector = TRUE		1555555	0		=			
ANR	1555734	Identifier	allocated_ovector		1555555	0					
ANR	1555735	Identifier	TRUE		1555555	1					
ANR	1555736	IfStatement	if ( ( eflags & REG_STARTEND ) != 0 )		1555555	11					
ANR	1555737	Condition	( eflags & REG_STARTEND ) != 0	363:4:14414:14441	1555555	0	True				
ANR	1555738	EqualityExpression	( eflags & REG_STARTEND ) != 0		1555555	0		!=			
ANR	1555739	BitAndExpression	eflags & REG_STARTEND		1555555	0		&			
ANR	1555740	Identifier	eflags		1555555	0					
ANR	1555741	Identifier	REG_STARTEND		1555555	1					
ANR	1555742	PrimaryExpression	0		1555555	1					
ANR	1555743	CompoundStatement		43:2:1395:1395	1555555	1					
ANR	1555744	ExpressionStatement	so = pmatch [ 0 ] . rm_so	365:2:14450:14470	1555555	0	True				
ANR	1555745	AssignmentExpression	so = pmatch [ 0 ] . rm_so		1555555	0		=			
ANR	1555746	Identifier	so		1555555	0					
ANR	1555747	MemberAccess	pmatch [ 0 ] . rm_so		1555555	1					
ANR	1555748	ArrayIndexing	pmatch [ 0 ]		1555555	0					
ANR	1555749	Identifier	pmatch		1555555	0					
ANR	1555750	PrimaryExpression	0		1555555	1					
ANR	1555751	Identifier	rm_so		1555555	1					
ANR	1555752	ExpressionStatement	eo = pmatch [ 0 ] . rm_eo	366:2:14474:14494	1555555	1	True				
ANR	1555753	AssignmentExpression	eo = pmatch [ 0 ] . rm_eo		1555555	0		=			
ANR	1555754	Identifier	eo		1555555	0					
ANR	1555755	MemberAccess	pmatch [ 0 ] . rm_eo		1555555	1					
ANR	1555756	ArrayIndexing	pmatch [ 0 ]		1555555	0					
ANR	1555757	Identifier	pmatch		1555555	0					
ANR	1555758	PrimaryExpression	0		1555555	1					
ANR	1555759	Identifier	rm_eo		1555555	1					
ANR	1555760	ElseStatement	else		1555555	0					
ANR	1555761	CompoundStatement		48:2:1456:1456	1555555	0					
ANR	1555762	ExpressionStatement	so = 0	370:2:14511:14517	1555555	0	True				
ANR	1555763	AssignmentExpression	so = 0		1555555	0		=			
ANR	1555764	Identifier	so		1555555	0					
ANR	1555765	PrimaryExpression	0		1555555	1					
ANR	1555766	ExpressionStatement	eo = ( int ) strlen ( string )	371:2:14521:14545	1555555	1	True				
ANR	1555767	AssignmentExpression	eo = ( int ) strlen ( string )		1555555	0		=			
ANR	1555768	Identifier	eo		1555555	0					
ANR	1555769	CastExpression	( int ) strlen ( string )		1555555	1					
ANR	1555770	CastTarget	int		1555555	0					
ANR	1555771	CallExpression	strlen ( string )		1555555	1					
ANR	1555772	Callee	strlen		1555555	0					
ANR	1555773	Identifier	strlen		1555555	0					
ANR	1555774	ArgumentList	string		1555555	1					
ANR	1555775	Argument	string		1555555	0					
ANR	1555776	Identifier	string		1555555	0					
ANR	1555777	ExpressionStatement	"rc = pcre_exec ( ( const pcre * ) preg -> re_pcre , NULL , string + so , ( eo - so ) , 0 , options , ovector , ( int ) ( nmatch * 3 ) )"	374:0:14552:14667	1555555	12	True				
ANR	1555778	AssignmentExpression	"rc = pcre_exec ( ( const pcre * ) preg -> re_pcre , NULL , string + so , ( eo - so ) , 0 , options , ovector , ( int ) ( nmatch * 3 ) )"		1555555	0		=			
ANR	1555779	Identifier	rc		1555555	0					
ANR	1555780	CallExpression	"pcre_exec ( ( const pcre * ) preg -> re_pcre , NULL , string + so , ( eo - so ) , 0 , options , ovector , ( int ) ( nmatch * 3 ) )"		1555555	1					
ANR	1555781	Callee	pcre_exec		1555555	0					
ANR	1555782	Identifier	pcre_exec		1555555	0					
ANR	1555783	ArgumentList	( const pcre * ) preg -> re_pcre		1555555	1					
ANR	1555784	Argument	( const pcre * ) preg -> re_pcre		1555555	0					
ANR	1555785	CastExpression	( const pcre * ) preg -> re_pcre		1555555	0					
ANR	1555786	CastTarget	const pcre *		1555555	0					
ANR	1555787	PtrMemberAccess	preg -> re_pcre		1555555	1					
ANR	1555788	Identifier	preg		1555555	0					
ANR	1555789	Identifier	re_pcre		1555555	1					
ANR	1555790	Argument	NULL		1555555	1					
ANR	1555791	Identifier	NULL		1555555	0					
ANR	1555792	Argument	string + so		1555555	2					
ANR	1555793	AdditiveExpression	string + so		1555555	0		+			
ANR	1555794	Identifier	string		1555555	0					
ANR	1555795	Identifier	so		1555555	1					
ANR	1555796	Argument	eo - so		1555555	3					
ANR	1555797	AdditiveExpression	eo - so		1555555	0		-			
ANR	1555798	Identifier	eo		1555555	0					
ANR	1555799	Identifier	so		1555555	1					
ANR	1555800	Argument	0		1555555	4					
ANR	1555801	PrimaryExpression	0		1555555	0					
ANR	1555802	Argument	options		1555555	5					
ANR	1555803	Identifier	options		1555555	0					
ANR	1555804	Argument	ovector		1555555	6					
ANR	1555805	Identifier	ovector		1555555	0					
ANR	1555806	Argument	( int ) ( nmatch * 3 )		1555555	7					
ANR	1555807	CastExpression	( int ) ( nmatch * 3 )		1555555	0					
ANR	1555808	CastTarget	int		1555555	0					
ANR	1555809	MultiplicativeExpression	nmatch * 3		1555555	1		*			
ANR	1555810	Identifier	nmatch		1555555	0					
ANR	1555811	PrimaryExpression	3		1555555	1					
ANR	1555812	IfStatement	if ( rc == 0 )		1555555	13					
ANR	1555813	Condition	rc == 0	377:4:14674:14680	1555555	0	True				
ANR	1555814	EqualityExpression	rc == 0		1555555	0		==			
ANR	1555815	Identifier	rc		1555555	0					
ANR	1555816	PrimaryExpression	0		1555555	1					
ANR	1555817	ExpressionStatement	rc = ( int ) nmatch	377:13:14683:14699	1555555	1	True				
ANR	1555818	AssignmentExpression	rc = ( int ) nmatch		1555555	0		=			
ANR	1555819	Identifier	rc		1555555	0					
ANR	1555820	CastExpression	( int ) nmatch		1555555	1					
ANR	1555821	CastTarget	int		1555555	0					
ANR	1555822	Identifier	nmatch		1555555	1					
ANR	1555823	IfStatement	if ( rc >= 0 )		1555555	14					
ANR	1555824	Condition	rc >= 0	381:4:14773:14779	1555555	0	True				
ANR	1555825	RelationalExpression	rc >= 0		1555555	0		>=			
ANR	1555826	Identifier	rc		1555555	0					
ANR	1555827	PrimaryExpression	0		1555555	1					
ANR	1555828	CompoundStatement		62:2:1737:1745	1555555	1					
ANR	1555829	IdentifierDeclStatement	size_t i ;	383:2:14788:14796	1555555	0	True				
ANR	1555830	IdentifierDecl	i		1555555	0					
ANR	1555831	IdentifierDeclType	size_t		1555555	0					
ANR	1555832	Identifier	i		1555555	1					
ANR	1555833	IfStatement	if ( ! nosub )		1555555	1					
ANR	1555834	Condition	! nosub	384:6:14804:14809	1555555	0	True				
ANR	1555835	UnaryOperationExpression	! nosub		1555555	0					
ANR	1555836	UnaryOperator	!		1555555	0					
ANR	1555837	Identifier	nosub		1555555	1					
ANR	1555838	CompoundStatement		64:4:1765:1765	1555555	1					
ANR	1555839	ForStatement	for ( i = 0 ; i < ( size_t ) rc ; i ++ )		1555555	0					
ANR	1555840	ForInit	i = 0 ;	386:9:14827:14832	1555555	0	True				
ANR	1555841	AssignmentExpression	i = 0		1555555	0		=			
ANR	1555842	Identifier	i		1555555	0					
ANR	1555843	PrimaryExpression	0		1555555	1					
ANR	1555844	Condition	i < ( size_t ) rc	386:16:14834:14847	1555555	1	True				
ANR	1555845	RelationalExpression	i < ( size_t ) rc		1555555	0		<			
ANR	1555846	Identifier	i		1555555	0					
ANR	1555847	CastExpression	( size_t ) rc		1555555	1					
ANR	1555848	CastTarget	size_t		1555555	0					
ANR	1555849	Identifier	rc		1555555	1					
ANR	1555850	PostIncDecOperationExpression	i ++	386:32:14850:14852	1555555	2	True				
ANR	1555851	Identifier	i		1555555	0					
ANR	1555852	IncDec	++		1555555	1					
ANR	1555853	CompoundStatement		66:6:1810:1810	1555555	3					
ANR	1555854	ExpressionStatement	pmatch [ i ] . rm_so = ovector [ i * 2 ]	388:6:14869:14899	1555555	0	True				
ANR	1555855	AssignmentExpression	pmatch [ i ] . rm_so = ovector [ i * 2 ]		1555555	0		=			
ANR	1555856	MemberAccess	pmatch [ i ] . rm_so		1555555	0					
ANR	1555857	ArrayIndexing	pmatch [ i ]		1555555	0					
ANR	1555858	Identifier	pmatch		1555555	0					
ANR	1555859	Identifier	i		1555555	1					
ANR	1555860	Identifier	rm_so		1555555	1					
ANR	1555861	ArrayIndexing	ovector [ i * 2 ]		1555555	1					
ANR	1555862	Identifier	ovector		1555555	0					
ANR	1555863	MultiplicativeExpression	i * 2		1555555	1		*			
ANR	1555864	Identifier	i		1555555	0					
ANR	1555865	PrimaryExpression	2		1555555	1					
ANR	1555866	ExpressionStatement	pmatch [ i ] . rm_eo = ovector [ i * 2 + 1 ]	389:6:14907:14939	1555555	1	True				
ANR	1555867	AssignmentExpression	pmatch [ i ] . rm_eo = ovector [ i * 2 + 1 ]		1555555	0		=			
ANR	1555868	MemberAccess	pmatch [ i ] . rm_eo		1555555	0					
ANR	1555869	ArrayIndexing	pmatch [ i ]		1555555	0					
ANR	1555870	Identifier	pmatch		1555555	0					
ANR	1555871	Identifier	i		1555555	1					
ANR	1555872	Identifier	rm_eo		1555555	1					
ANR	1555873	ArrayIndexing	ovector [ i * 2 + 1 ]		1555555	1					
ANR	1555874	Identifier	ovector		1555555	0					
ANR	1555875	AdditiveExpression	i * 2 + 1		1555555	1		+			
ANR	1555876	MultiplicativeExpression	i * 2		1555555	0		*			
ANR	1555877	Identifier	i		1555555	0					
ANR	1555878	PrimaryExpression	2		1555555	1					
ANR	1555879	PrimaryExpression	1		1555555	1					
ANR	1555880	IfStatement	if ( allocated_ovector )		1555555	1					
ANR	1555881	Condition	allocated_ovector	391:8:14957:14973	1555555	0	True				
ANR	1555882	Identifier	allocated_ovector		1555555	0					
ANR	1555883	ExpressionStatement	free ( ovector )	391:27:14976:14989	1555555	1	True				
ANR	1555884	CallExpression	free ( ovector )		1555555	0					
ANR	1555885	Callee	free		1555555	0					
ANR	1555886	Identifier	free		1555555	0					
ANR	1555887	ArgumentList	ovector		1555555	1					
ANR	1555888	Argument	ovector		1555555	0					
ANR	1555889	Identifier	ovector		1555555	0					
ANR	1555890	ForStatement	for ( ; i < nmatch ; i ++ )		1555555	2					
ANR	1555891	Condition	i < nmatch	392:11:15002:15011	1555555	0	True				
ANR	1555892	RelationalExpression	i < nmatch		1555555	0		<			
ANR	1555893	Identifier	i		1555555	0					
ANR	1555894	Identifier	nmatch		1555555	1					
ANR	1555895	PostIncDecOperationExpression	i ++	392:23:15014:15016	1555555	1	True				
ANR	1555896	Identifier	i		1555555	0					
ANR	1555897	IncDec	++		1555555	1					
ANR	1555898	ExpressionStatement	pmatch [ i ] . rm_so = pmatch [ i ] . rm_eo = - 1	392:28:15019:15057	1555555	2	True				
ANR	1555899	AssignmentExpression	pmatch [ i ] . rm_so = pmatch [ i ] . rm_eo = - 1		1555555	0		=			
ANR	1555900	MemberAccess	pmatch [ i ] . rm_so		1555555	0					
ANR	1555901	ArrayIndexing	pmatch [ i ]		1555555	0					
ANR	1555902	Identifier	pmatch		1555555	0					
ANR	1555903	Identifier	i		1555555	1					
ANR	1555904	Identifier	rm_so		1555555	1					
ANR	1555905	AssignmentExpression	pmatch [ i ] . rm_eo = - 1		1555555	1		=			
ANR	1555906	MemberAccess	pmatch [ i ] . rm_eo		1555555	0					
ANR	1555907	ArrayIndexing	pmatch [ i ]		1555555	0					
ANR	1555908	Identifier	pmatch		1555555	0					
ANR	1555909	Identifier	i		1555555	1					
ANR	1555910	Identifier	rm_eo		1555555	1					
ANR	1555911	UnaryOperationExpression	- 1		1555555	1					
ANR	1555912	UnaryOperator	-		1555555	0					
ANR	1555913	PrimaryExpression	1		1555555	1					
ANR	1555914	ReturnStatement	return 0 ;	394:2:15067:15075	1555555	2	True				
ANR	1555915	PrimaryExpression	0		1555555	0					
ANR	1555916	IfStatement	if ( allocated_ovector )		1555555	15					
ANR	1555917	Condition	allocated_ovector	399:4:15112:15128	1555555	0	True				
ANR	1555918	Identifier	allocated_ovector		1555555	0					
ANR	1555919	ExpressionStatement	free ( ovector )	399:23:15131:15144	1555555	1	True				
ANR	1555920	CallExpression	free ( ovector )		1555555	0					
ANR	1555921	Callee	free		1555555	0					
ANR	1555922	Identifier	free		1555555	0					
ANR	1555923	ArgumentList	ovector		1555555	1					
ANR	1555924	Argument	ovector		1555555	0					
ANR	1555925	Identifier	ovector		1555555	0					
ANR	1555926	SwitchStatement	switch ( rc )		1555555	16					
ANR	1555927	Condition	rc	400:7:15153:15154	1555555	0	True				
ANR	1555928	Identifier	rc		1555555	0					
ANR	1555929	CompoundStatement		80:2:2108:2108	1555555	1					
ANR	1555930	Label	case 0 :	409:2:15627:15633	1555555	0	True				
ANR	1555931	Statement	case	410:2:15637:15640	1555555	1	True				
ANR	1555932	Statement	(	410:7:15642:15642	1555555	2	True				
ANR	1555933	Statement	sizeof	410:8:15643:15648	1555555	3	True				
ANR	1555934	Statement	(	410:14:15649:15649	1555555	4	True				
ANR	1555935	Statement	eint	410:15:15650:15653	1555555	5	True				
ANR	1555936	Statement	)	410:19:15654:15654	1555555	6	True				
ANR	1555937	Statement	/	410:20:15655:15655	1555555	7	True				
ANR	1555938	Statement	sizeof	410:21:15656:15661	1555555	8	True				
ANR	1555939	Statement	(	410:27:15662:15662	1555555	9	True				
ANR	1555940	Statement	int	410:28:15663:15665	1555555	10	True				
ANR	1555941	Statement	)	410:31:15666:15666	1555555	11	True				
ANR	1555942	Statement	==	410:33:15668:15669	1555555	12	True				
ANR	1555943	Statement	ERRCOUNT	410:36:15671:15678	1555555	13	True				
ANR	1555944	Statement	)	410:44:15679:15679	1555555	14	True				
ANR	1555945	Statement	:	410:45:15680:15680	1555555	15	True				
ANR	1555946	ReturnStatement	return REG_ASSERT ;	411:2:15684:15701	1555555	16	True				
ANR	1555947	Identifier	REG_ASSERT		1555555	0					
ANR	1555948	Label	case PCRE_ERROR_NOMATCH :	414:2:15787:15810	1555555	17	True				
ANR	1555949	Identifier	PCRE_ERROR_NOMATCH		1555555	0					
ANR	1555950	ReturnStatement	return REG_NOMATCH ;	414:27:15812:15830	1555555	18	True				
ANR	1555951	Identifier	REG_NOMATCH		1555555	0					
ANR	1555952	Label	case PCRE_ERROR_NULL :	415:2:15834:15854	1555555	19	True				
ANR	1555953	Identifier	PCRE_ERROR_NULL		1555555	0					
ANR	1555954	ReturnStatement	return REG_INVARG ;	415:24:15856:15873	1555555	20	True				
ANR	1555955	Identifier	REG_INVARG		1555555	0					
ANR	1555956	Label	case PCRE_ERROR_BADOPTION :	416:2:15877:15902	1555555	21	True				
ANR	1555957	Identifier	PCRE_ERROR_BADOPTION		1555555	0					
ANR	1555958	ReturnStatement	return REG_INVARG ;	416:29:15904:15921	1555555	22	True				
ANR	1555959	Identifier	REG_INVARG		1555555	0					
ANR	1555960	Label	case PCRE_ERROR_BADMAGIC :	417:2:15925:15949	1555555	23	True				
ANR	1555961	Identifier	PCRE_ERROR_BADMAGIC		1555555	0					
ANR	1555962	ReturnStatement	return REG_INVARG ;	417:28:15951:15968	1555555	24	True				
ANR	1555963	Identifier	REG_INVARG		1555555	0					
ANR	1555964	Label	case PCRE_ERROR_UNKNOWN_NODE :	418:2:15972:16000	1555555	25	True				
ANR	1555965	Identifier	PCRE_ERROR_UNKNOWN_NODE		1555555	0					
ANR	1555966	ReturnStatement	return REG_ASSERT ;	418:32:16002:16019	1555555	26	True				
ANR	1555967	Identifier	REG_ASSERT		1555555	0					
ANR	1555968	Label	case PCRE_ERROR_NOMEMORY :	419:2:16023:16047	1555555	27	True				
ANR	1555969	Identifier	PCRE_ERROR_NOMEMORY		1555555	0					
ANR	1555970	ReturnStatement	return REG_ESPACE ;	419:28:16049:16066	1555555	28	True				
ANR	1555971	Identifier	REG_ESPACE		1555555	0					
ANR	1555972	Label	case PCRE_ERROR_MATCHLIMIT :	420:2:16070:16096	1555555	29	True				
ANR	1555973	Identifier	PCRE_ERROR_MATCHLIMIT		1555555	0					
ANR	1555974	ReturnStatement	return REG_ESPACE ;	420:30:16098:16115	1555555	30	True				
ANR	1555975	Identifier	REG_ESPACE		1555555	0					
ANR	1555976	Label	case PCRE_ERROR_BADUTF8 :	421:2:16119:16142	1555555	31	True				
ANR	1555977	Identifier	PCRE_ERROR_BADUTF8		1555555	0					
ANR	1555978	ReturnStatement	return REG_INVARG ;	421:27:16144:16161	1555555	32	True				
ANR	1555979	Identifier	REG_INVARG		1555555	0					
ANR	1555980	Label	case PCRE_ERROR_BADUTF8_OFFSET :	422:2:16165:16195	1555555	33	True				
ANR	1555981	Identifier	PCRE_ERROR_BADUTF8_OFFSET		1555555	0					
ANR	1555982	ReturnStatement	return REG_INVARG ;	422:34:16197:16214	1555555	34	True				
ANR	1555983	Identifier	REG_INVARG		1555555	0					
ANR	1555984	Label	case PCRE_ERROR_BADMODE :	423:2:16218:16241	1555555	35	True				
ANR	1555985	Identifier	PCRE_ERROR_BADMODE		1555555	0					
ANR	1555986	ReturnStatement	return REG_INVARG ;	423:27:16243:16260	1555555	36	True				
ANR	1555987	Identifier	REG_INVARG		1555555	0					
ANR	1555988	Label	default :	424:2:16264:16271	1555555	37	True				
ANR	1555989	Identifier	default		1555555	0					
ANR	1555990	ReturnStatement	return REG_ASSERT ;	424:11:16273:16290	1555555	38	True				
ANR	1555991	Identifier	REG_ASSERT		1555555	0					
ANR	1555992	ReturnType	PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION		1555555	1					
ANR	1555993	Identifier	regexec		1555555	2					
ANR	1555994	ParameterList	"const regex_t * preg , const char * string , size_t nmatch , regmatch_t pmatch [ ] , int eflags"		1555555	3					
ANR	1555995	Parameter	const regex_t * preg	320:8:12959:12977	1555555	0	True				
ANR	1555996	ParameterType	const regex_t *		1555555	0					
ANR	1555997	Identifier	preg		1555555	1					
ANR	1555998	Parameter	const char * string	320:29:12980:12997	1555555	1	True				
ANR	1555999	ParameterType	const char *		1555555	0					
ANR	1556000	Identifier	string		1555555	1					
ANR	1556001	Parameter	size_t nmatch	320:49:13000:13012	1555555	2	True				
ANR	1556002	ParameterType	size_t		1555555	0					
ANR	1556003	Identifier	nmatch		1555555	1					
ANR	1556004	Parameter	regmatch_t pmatch [ ]	321:2:13017:13035	1555555	3	True				
ANR	1556005	ParameterType	regmatch_t [ ]		1555555	0					
ANR	1556006	Identifier	pmatch		1555555	1					
ANR	1556007	Parameter	int eflags	321:23:13038:13047	1555555	4	True				
ANR	1556008	ParameterType	int		1555555	0					
ANR	1556009	Identifier	eflags		1555555	1					
ANR	1556010	CFGEntryNode	ENTRY		1555555		True				
ANR	1556011	CFGExitNode	EXIT		1555555		True				
ANR	1556012	Symbol	( ( regex_t * ) preg ) -> re_erroffset		1555555						
ANR	1556013	Symbol	REG_NOTBOL		1555555						
ANR	1556014	Symbol	pmatch [ 0 ] . rm_so		1555555						
ANR	1556015	Symbol	PCRE_NOTEMPTY		1555555						
ANR	1556016	Symbol	string		1555555						
ANR	1556017	Symbol	small_ovector		1555555						
ANR	1556018	Symbol	pcre_exec		1555555						
ANR	1556019	Symbol	allocated_ovector		1555555						
ANR	1556020	Symbol	preg -> re_pcre		1555555						
ANR	1556021	Symbol	REG_NOTEOL		1555555						
ANR	1556022	Symbol	* pmatch		1555555						
ANR	1556023	Symbol	REG_ASSERT		1555555						
ANR	1556024	Symbol	preg		1555555						
ANR	1556025	Symbol	REG_INVARG		1555555						
ANR	1556026	Symbol	strlen		1555555						
ANR	1556027	Symbol	PCRE_NOTBOL		1555555						
ANR	1556028	Symbol	pmatch [ 0 ] . rm_eo		1555555						
ANR	1556029	Symbol	REG_STARTEND		1555555						
ANR	1556030	Symbol	options		1555555						
ANR	1556031	Symbol	INT_MAX		1555555						
ANR	1556032	Symbol	pmatch		1555555						
ANR	1556033	Symbol	so		1555555						
ANR	1556034	Symbol	nosub		1555555						
ANR	1556035	Symbol	REG_NOMATCH		1555555						
ANR	1556036	Symbol	ovector		1555555						
ANR	1556037	Symbol	PCRE_NOTEOL		1555555						
ANR	1556038	Symbol	malloc		1555555						
ANR	1556039	Symbol	NULL		1555555						
ANR	1556040	Symbol	pmatch [ i ] . rm_eo		1555555						
ANR	1556041	Symbol	POSIX_MALLOC_THRESHOLD		1555555						
ANR	1556042	Symbol	TRUE		1555555						
ANR	1556043	Symbol	i		1555555						
ANR	1556044	Symbol	eo		1555555						
ANR	1556045	Symbol	eflags		1555555						
ANR	1556046	Symbol	rc		1555555						
ANR	1556047	Symbol	* ovector		1555555						
ANR	1556048	Symbol	pmatch [ i ] . rm_so		1555555						
ANR	1556049	Symbol	* i		1555555						
ANR	1556050	Symbol	nmatch		1555555						
ANR	1556051	Symbol	REAL_PCRE_OPTIONS		1555555						
ANR	1556052	Symbol	* preg		1555555						
ANR	1556053	Symbol	FALSE		1555555						
ANR	1556054	Symbol	REG_NOTEMPTY		1555555						
ANR	1556055	Symbol	REG_ESPACE		1555555						
ANR	1556056	Symbol	PCRE_NO_AUTO_CAPTURE		1555555						
