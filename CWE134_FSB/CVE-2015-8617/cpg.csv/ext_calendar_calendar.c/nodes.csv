command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	505680	File	data/converged/CVE-2015-8617_php-src/ext_calendar_calendar.c								
ANR	505681	DeclStmt									
ANR	505682	Decl							const zend_function_entry	const zend_function_entry [ ]	calendar_functions
ANR	505683	DeclStmt									
ANR	505684	Decl							zend_module_entry	zend_module_entry	calendar_module_entry
ANR	505685	ClassDef	cal_name_type_t	173:0:4960:5056							
ANR	505686	DeclStmt									
ANR	505687	Decl							"zend_long ( * ) ( int month , int day , int year )"	"zend_long ( * ) ( int month , int day , int year )"	cal_to_jd_func_t
ANR	505688	DeclStmt									
ANR	505689	Decl							"void ( * ) ( zend_long jd , int * year , int * month , int * day )"	"void ( * ) ( zend_long jd , int * year , int * month , int * day )"	cal_from_jd_func_t
ANR	505690	DeclStmt									
ANR	505691	Decl							"char * ( * ) ( int year , int month , int day )"	"char * ( * ) ( int year , int month , int day )"	cal_as_string_func_t
ANR	505692	ClassDef	cal_entry_t	185:0:5285:5480							
ANR	505693	DeclStmt									
ANR	505694	Decl							char	char *	name
ANR	505695	DeclStmt									
ANR	505696	Decl							char	char *	symbol
ANR	505697	DeclStmt									
ANR	505698	Decl							cal_to_jd_func_t	cal_to_jd_func_t	to_jd
ANR	505699	DeclStmt									
ANR	505700	Decl							cal_from_jd_func_t	cal_from_jd_func_t	from_jd
ANR	505701	DeclStmt									
ANR	505702	Decl							int	int	num_months
ANR	505703	DeclStmt									
ANR	505704	Decl							int	int	max_days_in_month
ANR	505705	DeclStmt									
ANR	505706	Decl							char	char * *	month_name_short
ANR	505707	DeclStmt									
ANR	505708	Decl							char	char * *	month_name_long
ANR	505709	DeclStmt									
ANR	505710	Decl							struct cal_entry_t	struct cal_entry_t [ CAL_NUM_CALS ]	cal_conversion_table
ANR	505711	ClassDef	<unnamed>	211:0:6206:6256							
ANR	505712	ClassDef	<unnamed>	214:0:6282:6426							
ANR	505713	DeclStmt									
ANR	505714	Decl							char	char [ 25 ]	alef_bet
ANR	505715	Function	_php_cal_info	263:0:8993:9653							
ANR	505716	FunctionDef	"_php_cal_info (int cal , zval * ret)"		505715	0					
ANR	505717	CompoundStatement		264:0:9039:9653	505715	0					
ANR	505718	IdentifierDeclStatement	"zval months , smonths ;"	265:1:9042:9062	505715	0	True				
ANR	505719	IdentifierDecl	months		505715	0					
ANR	505720	IdentifierDeclType	zval		505715	0					
ANR	505721	Identifier	months		505715	1					
ANR	505722	IdentifierDecl	smonths		505715	1					
ANR	505723	IdentifierDeclType	zval		505715	0					
ANR	505724	Identifier	smonths		505715	1					
ANR	505725	IdentifierDeclStatement	int i ;	266:1:9065:9070	505715	1	True				
ANR	505726	IdentifierDecl	i		505715	0					
ANR	505727	IdentifierDeclType	int		505715	0					
ANR	505728	Identifier	i		505715	1					
ANR	505729	IdentifierDeclStatement	struct cal_entry_t * calendar ;	267:1:9073:9101	505715	2	True				
ANR	505730	IdentifierDecl	* calendar		505715	0					
ANR	505731	IdentifierDeclType	struct cal_entry_t *		505715	0					
ANR	505732	Identifier	calendar		505715	1					
ANR	505733	ExpressionStatement	calendar = & cal_conversion_table [ cal ]	269:1:9105:9142	505715	3	True				
ANR	505734	AssignmentExpression	calendar = & cal_conversion_table [ cal ]		505715	0		=			
ANR	505735	Identifier	calendar		505715	0					
ANR	505736	UnaryOperationExpression	& cal_conversion_table [ cal ]		505715	1					
ANR	505737	UnaryOperator	&		505715	0					
ANR	505738	ArrayIndexing	cal_conversion_table [ cal ]		505715	1					
ANR	505739	Identifier	cal_conversion_table		505715	0					
ANR	505740	Identifier	cal		505715	1					
ANR	505741	ExpressionStatement	array_init ( ret )	270:1:9145:9160	505715	4	True				
ANR	505742	CallExpression	array_init ( ret )		505715	0					
ANR	505743	Callee	array_init		505715	0					
ANR	505744	Identifier	array_init		505715	0					
ANR	505745	ArgumentList	ret		505715	1					
ANR	505746	Argument	ret		505715	0					
ANR	505747	Identifier	ret		505715	0					
ANR	505748	ExpressionStatement	array_init ( & months )	272:1:9164:9183	505715	5	True				
ANR	505749	CallExpression	array_init ( & months )		505715	0					
ANR	505750	Callee	array_init		505715	0					
ANR	505751	Identifier	array_init		505715	0					
ANR	505752	ArgumentList	& months		505715	1					
ANR	505753	Argument	& months		505715	0					
ANR	505754	UnaryOperationExpression	& months		505715	0					
ANR	505755	UnaryOperator	&		505715	0					
ANR	505756	Identifier	months		505715	1					
ANR	505757	ExpressionStatement	array_init ( & smonths )	273:1:9186:9206	505715	6	True				
ANR	505758	CallExpression	array_init ( & smonths )		505715	0					
ANR	505759	Callee	array_init		505715	0					
ANR	505760	Identifier	array_init		505715	0					
ANR	505761	ArgumentList	& smonths		505715	1					
ANR	505762	Argument	& smonths		505715	0					
ANR	505763	UnaryOperationExpression	& smonths		505715	0					
ANR	505764	UnaryOperator	&		505715	0					
ANR	505765	Identifier	smonths		505715	1					
ANR	505766	ForStatement	for ( i = 1 ; i <= calendar -> num_months ; i ++ )		505715	7					
ANR	505767	ForInit	i = 1 ;	275:6:9215:9220	505715	0	True				
ANR	505768	AssignmentExpression	i = 1		505715	0		=			
ANR	505769	Identifier	i		505715	0					
ANR	505770	PrimaryExpression	1		505715	1					
ANR	505771	Condition	i <= calendar -> num_months	275:13:9222:9246	505715	1	True				
ANR	505772	RelationalExpression	i <= calendar -> num_months		505715	0		<=			
ANR	505773	Identifier	i		505715	0					
ANR	505774	PtrMemberAccess	calendar -> num_months		505715	1					
ANR	505775	Identifier	calendar		505715	0					
ANR	505776	Identifier	num_months		505715	1					
ANR	505777	PostIncDecOperationExpression	i ++	275:40:9249:9251	505715	2	True				
ANR	505778	Identifier	i		505715	0					
ANR	505779	IncDec	++		505715	1					
ANR	505780	CompoundStatement		12:45:214:214	505715	3					
ANR	505781	ExpressionStatement	"add_index_string ( & months , i , calendar -> month_name_long [ i ] )"	276:2:9258:9316	505715	0	True				
ANR	505782	CallExpression	"add_index_string ( & months , i , calendar -> month_name_long [ i ] )"		505715	0					
ANR	505783	Callee	add_index_string		505715	0					
ANR	505784	Identifier	add_index_string		505715	0					
ANR	505785	ArgumentList	& months		505715	1					
ANR	505786	Argument	& months		505715	0					
ANR	505787	UnaryOperationExpression	& months		505715	0					
ANR	505788	UnaryOperator	&		505715	0					
ANR	505789	Identifier	months		505715	1					
ANR	505790	Argument	i		505715	1					
ANR	505791	Identifier	i		505715	0					
ANR	505792	Argument	calendar -> month_name_long [ i ]		505715	2					
ANR	505793	ArrayIndexing	calendar -> month_name_long [ i ]		505715	0					
ANR	505794	PtrMemberAccess	calendar -> month_name_long		505715	0					
ANR	505795	Identifier	calendar		505715	0					
ANR	505796	Identifier	month_name_long		505715	1					
ANR	505797	Identifier	i		505715	1					
ANR	505798	ExpressionStatement	"add_index_string ( & smonths , i , calendar -> month_name_short [ i ] )"	277:2:9320:9380	505715	1	True				
ANR	505799	CallExpression	"add_index_string ( & smonths , i , calendar -> month_name_short [ i ] )"		505715	0					
ANR	505800	Callee	add_index_string		505715	0					
ANR	505801	Identifier	add_index_string		505715	0					
ANR	505802	ArgumentList	& smonths		505715	1					
ANR	505803	Argument	& smonths		505715	0					
ANR	505804	UnaryOperationExpression	& smonths		505715	0					
ANR	505805	UnaryOperator	&		505715	0					
ANR	505806	Identifier	smonths		505715	1					
ANR	505807	Argument	i		505715	1					
ANR	505808	Identifier	i		505715	0					
ANR	505809	Argument	calendar -> month_name_short [ i ]		505715	2					
ANR	505810	ArrayIndexing	calendar -> month_name_short [ i ]		505715	0					
ANR	505811	PtrMemberAccess	calendar -> month_name_short		505715	0					
ANR	505812	Identifier	calendar		505715	0					
ANR	505813	Identifier	month_name_short		505715	1					
ANR	505814	Identifier	i		505715	1					
ANR	505815	ExpressionStatement	"add_assoc_zval ( ret , ""months"" , & months )"	280:1:9388:9426	505715	8	True				
ANR	505816	CallExpression	"add_assoc_zval ( ret , ""months"" , & months )"		505715	0					
ANR	505817	Callee	add_assoc_zval		505715	0					
ANR	505818	Identifier	add_assoc_zval		505715	0					
ANR	505819	ArgumentList	ret		505715	1					
ANR	505820	Argument	ret		505715	0					
ANR	505821	Identifier	ret		505715	0					
ANR	505822	Argument	"""months"""		505715	1					
ANR	505823	PrimaryExpression	"""months"""		505715	0					
ANR	505824	Argument	& months		505715	2					
ANR	505825	UnaryOperationExpression	& months		505715	0					
ANR	505826	UnaryOperator	&		505715	0					
ANR	505827	Identifier	months		505715	1					
ANR	505828	ExpressionStatement	"add_assoc_zval ( ret , ""abbrevmonths"" , & smonths )"	281:1:9429:9474	505715	9	True				
ANR	505829	CallExpression	"add_assoc_zval ( ret , ""abbrevmonths"" , & smonths )"		505715	0					
ANR	505830	Callee	add_assoc_zval		505715	0					
ANR	505831	Identifier	add_assoc_zval		505715	0					
ANR	505832	ArgumentList	ret		505715	1					
ANR	505833	Argument	ret		505715	0					
ANR	505834	Identifier	ret		505715	0					
ANR	505835	Argument	"""abbrevmonths"""		505715	1					
ANR	505836	PrimaryExpression	"""abbrevmonths"""		505715	0					
ANR	505837	Argument	& smonths		505715	2					
ANR	505838	UnaryOperationExpression	& smonths		505715	0					
ANR	505839	UnaryOperator	&		505715	0					
ANR	505840	Identifier	smonths		505715	1					
ANR	505841	ExpressionStatement	"add_assoc_long ( ret , ""maxdaysinmonth"" , calendar -> max_days_in_month )"	282:1:9477:9543	505715	10	True				
ANR	505842	CallExpression	"add_assoc_long ( ret , ""maxdaysinmonth"" , calendar -> max_days_in_month )"		505715	0					
ANR	505843	Callee	add_assoc_long		505715	0					
ANR	505844	Identifier	add_assoc_long		505715	0					
ANR	505845	ArgumentList	ret		505715	1					
ANR	505846	Argument	ret		505715	0					
ANR	505847	Identifier	ret		505715	0					
ANR	505848	Argument	"""maxdaysinmonth"""		505715	1					
ANR	505849	PrimaryExpression	"""maxdaysinmonth"""		505715	0					
ANR	505850	Argument	calendar -> max_days_in_month		505715	2					
ANR	505851	PtrMemberAccess	calendar -> max_days_in_month		505715	0					
ANR	505852	Identifier	calendar		505715	0					
ANR	505853	Identifier	max_days_in_month		505715	1					
ANR	505854	ExpressionStatement	"add_assoc_string ( ret , ""calname"" , calendar -> name )"	283:1:9546:9594	505715	11	True				
ANR	505855	CallExpression	"add_assoc_string ( ret , ""calname"" , calendar -> name )"		505715	0					
ANR	505856	Callee	add_assoc_string		505715	0					
ANR	505857	Identifier	add_assoc_string		505715	0					
ANR	505858	ArgumentList	ret		505715	1					
ANR	505859	Argument	ret		505715	0					
ANR	505860	Identifier	ret		505715	0					
ANR	505861	Argument	"""calname"""		505715	1					
ANR	505862	PrimaryExpression	"""calname"""		505715	0					
ANR	505863	Argument	calendar -> name		505715	2					
ANR	505864	PtrMemberAccess	calendar -> name		505715	0					
ANR	505865	Identifier	calendar		505715	0					
ANR	505866	Identifier	name		505715	1					
ANR	505867	ExpressionStatement	"add_assoc_string ( ret , ""calsymbol"" , calendar -> symbol )"	284:1:9597:9649	505715	12	True				
ANR	505868	CallExpression	"add_assoc_string ( ret , ""calsymbol"" , calendar -> symbol )"		505715	0					
ANR	505869	Callee	add_assoc_string		505715	0					
ANR	505870	Identifier	add_assoc_string		505715	0					
ANR	505871	ArgumentList	ret		505715	1					
ANR	505872	Argument	ret		505715	0					
ANR	505873	Identifier	ret		505715	0					
ANR	505874	Argument	"""calsymbol"""		505715	1					
ANR	505875	PrimaryExpression	"""calsymbol"""		505715	0					
ANR	505876	Argument	calendar -> symbol		505715	2					
ANR	505877	PtrMemberAccess	calendar -> symbol		505715	0					
ANR	505878	Identifier	calendar		505715	0					
ANR	505879	Identifier	symbol		505715	1					
ANR	505880	ReturnType	static void		505715	1					
ANR	505881	Identifier	_php_cal_info		505715	2					
ANR	505882	ParameterList	"int cal , zval * ret"		505715	3					
ANR	505883	Parameter	int cal	263:26:9019:9025	505715	0	True				
ANR	505884	ParameterType	int		505715	0					
ANR	505885	Identifier	cal		505715	1					
ANR	505886	Parameter	zval * ret	263:35:9028:9036	505715	1	True				
ANR	505887	ParameterType	zval *		505715	0					
ANR	505888	Identifier	ret		505715	1					
ANR	505889	CFGEntryNode	ENTRY		505715		True				
ANR	505890	CFGExitNode	EXIT		505715		True				
ANR	505891	Symbol	ret		505715						
ANR	505892	Symbol	calendar		505715						
ANR	505893	Symbol	months		505715						
ANR	505894	Symbol	calendar -> month_name_long		505715						
ANR	505895	Symbol	calendar -> max_days_in_month		505715						
ANR	505896	Symbol	cal_conversion_table		505715						
ANR	505897	Symbol	& smonths		505715						
ANR	505898	Symbol	calendar -> symbol		505715						
ANR	505899	Symbol	i		505715						
ANR	505900	Symbol	& months		505715						
ANR	505901	Symbol	* calendar		505715						
ANR	505902	Symbol	* calendar -> month_name_long		505715						
ANR	505903	Symbol	cal		505715						
ANR	505904	Symbol	calendar -> month_name_short		505715						
ANR	505905	Symbol	* i		505715						
ANR	505906	Symbol	smonths		505715						
ANR	505907	Symbol	calendar -> num_months		505715						
ANR	505908	Symbol	* * calendar		505715						
ANR	505909	Symbol	* calendar -> month_name_short		505715						
ANR	505910	Symbol	calendar -> name		505715						
ANR	505911	DeclStmt									
ANR	505912	Decl							zend_long	zend_long	cal
ANR	505913	DeclStmt									
ANR	505914	Decl							int	int	i
ANR	505915	DeclStmt									
ANR	505916	Decl							zval	zval	val
ANR	505917	DeclStmt									
ANR	505918	Decl							zend_long	zend_long	cal
ANR	505919	Decl							zend_long	zend_long	month
ANR	505920	Decl							zend_long	zend_long	year
ANR	505921	DeclStmt									
ANR	505922	Decl							struct cal_entry_t	struct cal_entry_t *	calendar
ANR	505923	DeclStmt									
ANR	505924	Decl							zend_long	zend_long	sdn_start
ANR	505925	Decl							zend_long	zend_long	sdn_next
ANR	505926	DeclStmt									
ANR	505927	Decl							zend_long	zend_long	cal
ANR	505928	Decl							zend_long	zend_long	month
ANR	505929	Decl							zend_long	zend_long	day
ANR	505930	Decl							zend_long	zend_long	year
ANR	505931	DeclStmt									
ANR	505932	Decl							zend_long	zend_long	jd
ANR	505933	Decl							zend_long	zend_long	cal
ANR	505934	DeclStmt									
ANR	505935	Decl							int	int	month
ANR	505936	Decl							int	int	day
ANR	505937	Decl							int	int	year
ANR	505938	Decl							int	int	dow
ANR	505939	DeclStmt									
ANR	505940	Decl							char	char [ 16 ]	date
ANR	505941	DeclStmt									
ANR	505942	Decl							struct cal_entry_t	struct cal_entry_t *	calendar
ANR	505943	DeclStmt									
ANR	505944	Decl							zend_long	zend_long	julday
ANR	505945	DeclStmt									
ANR	505946	Decl							int	int	year
ANR	505947	Decl							int	int	month
ANR	505948	Decl							int	int	day
ANR	505949	DeclStmt									
ANR	505950	Decl							char	char [ 16 ]	date
ANR	505951	DeclStmt									
ANR	505952	Decl							zend_long	zend_long	year
ANR	505953	Decl							zend_long	zend_long	month
ANR	505954	Decl							zend_long	zend_long	day
ANR	505955	DeclStmt									
ANR	505956	Decl							zend_long	zend_long	julday
ANR	505957	DeclStmt									
ANR	505958	Decl							int	int	year
ANR	505959	Decl							int	int	month
ANR	505960	Decl							int	int	day
ANR	505961	DeclStmt									
ANR	505962	Decl							char	char [ 16 ]	date
ANR	505963	DeclStmt									
ANR	505964	Decl							zend_long	zend_long	year
ANR	505965	Decl							zend_long	zend_long	month
ANR	505966	Decl							zend_long	zend_long	day
ANR	505967	Function	heb_number_to_chars	505:0:15152:16496							
ANR	505968	FunctionDef	"heb_number_to_chars (int n , int fl , char * * ret)"		505967	0					
ANR	505969	CompoundStatement		506:0:15212:16496	505967	0					
ANR	505970	IdentifierDeclStatement	"char * p , old [ 18 ] , * endofalafim ;"	507:1:15215:15245	505967	0	True				
ANR	505971	IdentifierDecl	* p		505967	0					
ANR	505972	IdentifierDeclType	char *		505967	0					
ANR	505973	Identifier	p		505967	1					
ANR	505974	IdentifierDecl	old [ 18 ]		505967	1					
ANR	505975	IdentifierDeclType	char [ 18 ]		505967	0					
ANR	505976	Identifier	old		505967	1					
ANR	505977	PrimaryExpression	18		505967	2					
ANR	505978	IdentifierDecl	* endofalafim		505967	2					
ANR	505979	IdentifierDeclType	char *		505967	0					
ANR	505980	Identifier	endofalafim		505967	1					
ANR	505981	ExpressionStatement	p = endofalafim = old	509:1:15249:15270	505967	1	True				
ANR	505982	AssignmentExpression	p = endofalafim = old		505967	0		=			
ANR	505983	Identifier	p		505967	0					
ANR	505984	AssignmentExpression	endofalafim = old		505967	1		=			
ANR	505985	Identifier	endofalafim		505967	0					
ANR	505986	Identifier	old		505967	1					
ANR	505987	IfStatement	if ( n > 9999 || n < 1 )		505967	2					
ANR	505988	Condition	n > 9999 || n < 1	514:5:15378:15394	505967	0	True				
ANR	505989	OrExpression	n > 9999 || n < 1		505967	0		||			
ANR	505990	RelationalExpression	n > 9999		505967	0		>			
ANR	505991	Identifier	n		505967	0					
ANR	505992	PrimaryExpression	9999		505967	1					
ANR	505993	RelationalExpression	n < 1		505967	1		<			
ANR	505994	Identifier	n		505967	0					
ANR	505995	PrimaryExpression	1		505967	1					
ANR	505996	CompoundStatement		9:24:184:184	505967	1					
ANR	505997	ExpressionStatement	* ret = NULL	515:2:15401:15412	505967	0	True				
ANR	505998	AssignmentExpression	* ret = NULL		505967	0		=			
ANR	505999	UnaryOperationExpression	* ret		505967	0					
ANR	506000	UnaryOperator	*		505967	0					
ANR	506001	Identifier	ret		505967	1					
ANR	506002	Identifier	NULL		505967	1					
ANR	506003	ReturnStatement	return NULL ;	516:2:15416:15427	505967	1	True				
ANR	506004	Identifier	NULL		505967	0					
ANR	506005	IfStatement	if ( n / 1000 )		505967	3					
ANR	506006	Condition	n / 1000	520:5:15469:15476	505967	0	True				
ANR	506007	MultiplicativeExpression	n / 1000		505967	0		/			
ANR	506008	Identifier	n		505967	0					
ANR	506009	PrimaryExpression	1000		505967	1					
ANR	506010	CompoundStatement		15:15:266:266	505967	1					
ANR	506011	ExpressionStatement	* p = alef_bet [ n / 1000 ]	521:2:15483:15506	505967	0	True				
ANR	506012	AssignmentExpression	* p = alef_bet [ n / 1000 ]		505967	0		=			
ANR	506013	UnaryOperationExpression	* p		505967	0					
ANR	506014	UnaryOperator	*		505967	0					
ANR	506015	Identifier	p		505967	1					
ANR	506016	ArrayIndexing	alef_bet [ n / 1000 ]		505967	1					
ANR	506017	Identifier	alef_bet		505967	0					
ANR	506018	MultiplicativeExpression	n / 1000		505967	1		/			
ANR	506019	Identifier	n		505967	0					
ANR	506020	PrimaryExpression	1000		505967	1					
ANR	506021	ExpressionStatement	p ++	522:2:15510:15513	505967	1	True				
ANR	506022	PostIncDecOperationExpression	p ++		505967	0					
ANR	506023	Identifier	p		505967	0					
ANR	506024	IncDec	++		505967	1					
ANR	506025	IfStatement	if ( CAL_JEWISH_ADD_ALAFIM_GERESH & fl )		505967	2					
ANR	506026	Condition	CAL_JEWISH_ADD_ALAFIM_GERESH & fl	524:6:15522:15554	505967	0	True				
ANR	506027	BitAndExpression	CAL_JEWISH_ADD_ALAFIM_GERESH & fl		505967	0		&			
ANR	506028	Identifier	CAL_JEWISH_ADD_ALAFIM_GERESH		505967	0					
ANR	506029	Identifier	fl		505967	1					
ANR	506030	CompoundStatement		19:41:344:344	505967	1					
ANR	506031	ExpressionStatement	* p = '\\''	525:3:15562:15571	505967	0	True				
ANR	506032	AssignmentExpression	* p = '\\''		505967	0		=			
ANR	506033	UnaryOperationExpression	* p		505967	0					
ANR	506034	UnaryOperator	*		505967	0					
ANR	506035	Identifier	p		505967	1					
ANR	506036	PrimaryExpression	'\\''		505967	1					
ANR	506037	ExpressionStatement	p ++	526:3:15576:15579	505967	1	True				
ANR	506038	PostIncDecOperationExpression	p ++		505967	0					
ANR	506039	Identifier	p		505967	0					
ANR	506040	IncDec	++		505967	1					
ANR	506041	IfStatement	if ( CAL_JEWISH_ADD_ALAFIM & fl )		505967	3					
ANR	506042	Condition	CAL_JEWISH_ADD_ALAFIM & fl	528:6:15591:15616	505967	0	True				
ANR	506043	BitAndExpression	CAL_JEWISH_ADD_ALAFIM & fl		505967	0		&			
ANR	506044	Identifier	CAL_JEWISH_ADD_ALAFIM		505967	0					
ANR	506045	Identifier	fl		505967	1					
ANR	506046	CompoundStatement		23:34:406:406	505967	1					
ANR	506047	ExpressionStatement	"strcpy ( p , "" ????? "" )"	529:3:15624:15644	505967	0	True				
ANR	506048	CallExpression	"strcpy ( p , "" ????? "" )"		505967	0					
ANR	506049	Callee	strcpy		505967	0					
ANR	506050	Identifier	strcpy		505967	0					
ANR	506051	ArgumentList	p		505967	1					
ANR	506052	Argument	p		505967	0					
ANR	506053	Identifier	p		505967	0					
ANR	506054	Argument	""" ????? """		505967	1					
ANR	506055	PrimaryExpression	""" ????? """		505967	0					
ANR	506056	ExpressionStatement	p += 7	530:3:15649:15655	505967	1	True				
ANR	506057	AssignmentExpression	p += 7		505967	0		+=			
ANR	506058	Identifier	p		505967	0					
ANR	506059	PrimaryExpression	7		505967	1					
ANR	506060	ExpressionStatement	endofalafim = p	533:2:15664:15679	505967	4	True				
ANR	506061	AssignmentExpression	endofalafim = p		505967	0		=			
ANR	506062	Identifier	endofalafim		505967	0					
ANR	506063	Identifier	p		505967	1					
ANR	506064	ExpressionStatement	n = n % 1000	534:2:15683:15695	505967	5	True				
ANR	506065	AssignmentExpression	n = n % 1000		505967	0		=			
ANR	506066	Identifier	n		505967	0					
ANR	506067	MultiplicativeExpression	n % 1000		505967	1		%			
ANR	506068	Identifier	n		505967	0					
ANR	506069	PrimaryExpression	1000		505967	1					
ANR	506070	WhileStatement	while ( n >= 400 )		505967	4					
ANR	506071	Condition	n >= 400	538:8:15738:15745	505967	0	True				
ANR	506072	RelationalExpression	n >= 400		505967	0		>=			
ANR	506073	Identifier	n		505967	0					
ANR	506074	PrimaryExpression	400		505967	1					
ANR	506075	CompoundStatement		33:18:535:535	505967	1					
ANR	506076	ExpressionStatement	* p = alef_bet [ 22 ]	539:2:15752:15769	505967	0	True				
ANR	506077	AssignmentExpression	* p = alef_bet [ 22 ]		505967	0		=			
ANR	506078	UnaryOperationExpression	* p		505967	0					
ANR	506079	UnaryOperator	*		505967	0					
ANR	506080	Identifier	p		505967	1					
ANR	506081	ArrayIndexing	alef_bet [ 22 ]		505967	1					
ANR	506082	Identifier	alef_bet		505967	0					
ANR	506083	PrimaryExpression	22		505967	1					
ANR	506084	ExpressionStatement	p ++	540:2:15773:15776	505967	1	True				
ANR	506085	PostIncDecOperationExpression	p ++		505967	0					
ANR	506086	Identifier	p		505967	0					
ANR	506087	IncDec	++		505967	1					
ANR	506088	ExpressionStatement	n -= 400	541:2:15780:15788	505967	2	True				
ANR	506089	AssignmentExpression	n -= 400		505967	0		-=			
ANR	506090	Identifier	n		505967	0					
ANR	506091	PrimaryExpression	400		505967	1					
ANR	506092	IfStatement	if ( n >= 100 )		505967	5					
ANR	506093	Condition	n >= 100	545:5:15827:15834	505967	0	True				
ANR	506094	RelationalExpression	n >= 100		505967	0		>=			
ANR	506095	Identifier	n		505967	0					
ANR	506096	PrimaryExpression	100		505967	1					
ANR	506097	CompoundStatement		40:15:624:624	505967	1					
ANR	506098	ExpressionStatement	* p = alef_bet [ 18 + n / 100 ]	546:2:15841:15868	505967	0	True				
ANR	506099	AssignmentExpression	* p = alef_bet [ 18 + n / 100 ]		505967	0		=			
ANR	506100	UnaryOperationExpression	* p		505967	0					
ANR	506101	UnaryOperator	*		505967	0					
ANR	506102	Identifier	p		505967	1					
ANR	506103	ArrayIndexing	alef_bet [ 18 + n / 100 ]		505967	1					
ANR	506104	Identifier	alef_bet		505967	0					
ANR	506105	AdditiveExpression	18 + n / 100		505967	1		+			
ANR	506106	PrimaryExpression	18		505967	0					
ANR	506107	MultiplicativeExpression	n / 100		505967	1		/			
ANR	506108	Identifier	n		505967	0					
ANR	506109	PrimaryExpression	100		505967	1					
ANR	506110	ExpressionStatement	p ++	547:2:15872:15875	505967	1	True				
ANR	506111	PostIncDecOperationExpression	p ++		505967	0					
ANR	506112	Identifier	p		505967	0					
ANR	506113	IncDec	++		505967	1					
ANR	506114	ExpressionStatement	n = n % 100	548:2:15879:15890	505967	2	True				
ANR	506115	AssignmentExpression	n = n % 100		505967	0		=			
ANR	506116	Identifier	n		505967	0					
ANR	506117	MultiplicativeExpression	n % 100		505967	1		%			
ANR	506118	Identifier	n		505967	0					
ANR	506119	PrimaryExpression	100		505967	1					
ANR	506120	IfStatement	if ( n == 15 || n == 16 )		505967	6					
ANR	506121	Condition	n == 15 || n == 16	552:5:15960:15977	505967	0	True				
ANR	506122	OrExpression	n == 15 || n == 16		505967	0		||			
ANR	506123	EqualityExpression	n == 15		505967	0		==			
ANR	506124	Identifier	n		505967	0					
ANR	506125	PrimaryExpression	15		505967	1					
ANR	506126	EqualityExpression	n == 16		505967	1		==			
ANR	506127	Identifier	n		505967	0					
ANR	506128	PrimaryExpression	16		505967	1					
ANR	506129	CompoundStatement		47:25:767:767	505967	1					
ANR	506130	ExpressionStatement	* p = alef_bet [ 9 ]	553:2:15984:16000	505967	0	True				
ANR	506131	AssignmentExpression	* p = alef_bet [ 9 ]		505967	0		=			
ANR	506132	UnaryOperationExpression	* p		505967	0					
ANR	506133	UnaryOperator	*		505967	0					
ANR	506134	Identifier	p		505967	1					
ANR	506135	ArrayIndexing	alef_bet [ 9 ]		505967	1					
ANR	506136	Identifier	alef_bet		505967	0					
ANR	506137	PrimaryExpression	9		505967	1					
ANR	506138	ExpressionStatement	p ++	554:2:16004:16007	505967	1	True				
ANR	506139	PostIncDecOperationExpression	p ++		505967	0					
ANR	506140	Identifier	p		505967	0					
ANR	506141	IncDec	++		505967	1					
ANR	506142	ExpressionStatement	* p = alef_bet [ n - 9 ]	555:2:16011:16031	505967	2	True				
ANR	506143	AssignmentExpression	* p = alef_bet [ n - 9 ]		505967	0		=			
ANR	506144	UnaryOperationExpression	* p		505967	0					
ANR	506145	UnaryOperator	*		505967	0					
ANR	506146	Identifier	p		505967	1					
ANR	506147	ArrayIndexing	alef_bet [ n - 9 ]		505967	1					
ANR	506148	Identifier	alef_bet		505967	0					
ANR	506149	AdditiveExpression	n - 9		505967	1		-			
ANR	506150	Identifier	n		505967	0					
ANR	506151	PrimaryExpression	9		505967	1					
ANR	506152	ExpressionStatement	p ++	556:2:16035:16038	505967	3	True				
ANR	506153	PostIncDecOperationExpression	p ++		505967	0					
ANR	506154	Identifier	p		505967	0					
ANR	506155	IncDec	++		505967	1					
ANR	506156	ElseStatement	else		505967	0					
ANR	506157	CompoundStatement		52:8:835:835	505967	0					
ANR	506158	IfStatement	if ( n >= 10 )		505967	0					
ANR	506159	Condition	n >= 10	559:6:16081:16087	505967	0	True				
ANR	506160	RelationalExpression	n >= 10		505967	0		>=			
ANR	506161	Identifier	n		505967	0					
ANR	506162	PrimaryExpression	10		505967	1					
ANR	506163	CompoundStatement		54:15:877:877	505967	1					
ANR	506164	ExpressionStatement	* p = alef_bet [ 9 + n / 10 ]	560:3:16095:16120	505967	0	True				
ANR	506165	AssignmentExpression	* p = alef_bet [ 9 + n / 10 ]		505967	0		=			
ANR	506166	UnaryOperationExpression	* p		505967	0					
ANR	506167	UnaryOperator	*		505967	0					
ANR	506168	Identifier	p		505967	1					
ANR	506169	ArrayIndexing	alef_bet [ 9 + n / 10 ]		505967	1					
ANR	506170	Identifier	alef_bet		505967	0					
ANR	506171	AdditiveExpression	9 + n / 10		505967	1		+			
ANR	506172	PrimaryExpression	9		505967	0					
ANR	506173	MultiplicativeExpression	n / 10		505967	1		/			
ANR	506174	Identifier	n		505967	0					
ANR	506175	PrimaryExpression	10		505967	1					
ANR	506176	ExpressionStatement	p ++	561:3:16125:16128	505967	1	True				
ANR	506177	PostIncDecOperationExpression	p ++		505967	0					
ANR	506178	Identifier	p		505967	0					
ANR	506179	IncDec	++		505967	1					
ANR	506180	ExpressionStatement	n = n % 10	562:3:16133:16143	505967	2	True				
ANR	506181	AssignmentExpression	n = n % 10		505967	0		=			
ANR	506182	Identifier	n		505967	0					
ANR	506183	MultiplicativeExpression	n % 10		505967	1		%			
ANR	506184	Identifier	n		505967	0					
ANR	506185	PrimaryExpression	10		505967	1					
ANR	506186	IfStatement	if ( n > 0 )		505967	1					
ANR	506187	Condition	n > 0	566:6:16182:16186	505967	0	True				
ANR	506188	RelationalExpression	n > 0		505967	0		>			
ANR	506189	Identifier	n		505967	0					
ANR	506190	PrimaryExpression	0		505967	1					
ANR	506191	CompoundStatement		61:13:976:976	505967	1					
ANR	506192	ExpressionStatement	* p = alef_bet [ n ]	567:3:16194:16210	505967	0	True				
ANR	506193	AssignmentExpression	* p = alef_bet [ n ]		505967	0		=			
ANR	506194	UnaryOperationExpression	* p		505967	0					
ANR	506195	UnaryOperator	*		505967	0					
ANR	506196	Identifier	p		505967	1					
ANR	506197	ArrayIndexing	alef_bet [ n ]		505967	1					
ANR	506198	Identifier	alef_bet		505967	0					
ANR	506199	Identifier	n		505967	1					
ANR	506200	ExpressionStatement	p ++	568:3:16215:16218	505967	1	True				
ANR	506201	PostIncDecOperationExpression	p ++		505967	0					
ANR	506202	Identifier	p		505967	0					
ANR	506203	IncDec	++		505967	1					
ANR	506204	IfStatement	if ( CAL_JEWISH_ADD_GERESHAYIM & fl )		505967	7					
ANR	506205	Condition	CAL_JEWISH_ADD_GERESHAYIM & fl	572:5:16233:16262	505967	0	True				
ANR	506206	BitAndExpression	CAL_JEWISH_ADD_GERESHAYIM & fl		505967	0		&			
ANR	506207	Identifier	CAL_JEWISH_ADD_GERESHAYIM		505967	0					
ANR	506208	Identifier	fl		505967	1					
ANR	506209	CompoundStatement		67:37:1052:1052	505967	1					
ANR	506210	SwitchStatement	switch ( p - endofalafim )		505967	0					
ANR	506211	Condition	p - endofalafim	573:10:16277:16291	505967	0	True				
ANR	506212	AdditiveExpression	p - endofalafim		505967	0		-			
ANR	506213	Identifier	p		505967	0					
ANR	506214	Identifier	endofalafim		505967	1					
ANR	506215	CompoundStatement		68:27:1081:1081	505967	1					
ANR	506216	Label	case 0 :	574:2:16298:16304	505967	0	True				
ANR	506217	BreakStatement	break ;	575:3:16309:16314	505967	1	True				
ANR	506218	Label	case 1 :	576:2:16318:16324	505967	2	True				
ANR	506219	ExpressionStatement	* p = '\\''	577:3:16329:16338	505967	3	True				
ANR	506220	AssignmentExpression	* p = '\\''		505967	0		=			
ANR	506221	UnaryOperationExpression	* p		505967	0					
ANR	506222	UnaryOperator	*		505967	0					
ANR	506223	Identifier	p		505967	1					
ANR	506224	PrimaryExpression	'\\''		505967	1					
ANR	506225	ExpressionStatement	p ++	578:3:16343:16346	505967	4	True				
ANR	506226	PostIncDecOperationExpression	p ++		505967	0					
ANR	506227	Identifier	p		505967	0					
ANR	506228	IncDec	++		505967	1					
ANR	506229	BreakStatement	break ;	579:3:16351:16356	505967	5	True				
ANR	506230	Label	default :	580:2:16360:16367	505967	6	True				
ANR	506231	Identifier	default		505967	0					
ANR	506232	ExpressionStatement	* ( p ) = * ( p - 1 )	581:3:16372:16387	505967	7	True				
ANR	506233	AssignmentExpression	* ( p ) = * ( p - 1 )		505967	0		=			
ANR	506234	UnaryOperationExpression	* ( p )		505967	0					
ANR	506235	UnaryOperator	*		505967	0					
ANR	506236	Identifier	p		505967	1					
ANR	506237	UnaryOperationExpression	* ( p - 1 )		505967	1					
ANR	506238	UnaryOperator	*		505967	0					
ANR	506239	AdditiveExpression	p - 1		505967	1		-			
ANR	506240	Identifier	p		505967	0					
ANR	506241	PrimaryExpression	1		505967	1					
ANR	506242	ExpressionStatement	"* ( p - 1 ) = '""'"	582:3:16392:16406	505967	8	True				
ANR	506243	AssignmentExpression	"* ( p - 1 ) = '""'"		505967	0		=			
ANR	506244	UnaryOperationExpression	* ( p - 1 )		505967	0					
ANR	506245	UnaryOperator	*		505967	0					
ANR	506246	AdditiveExpression	p - 1		505967	1		-			
ANR	506247	Identifier	p		505967	0					
ANR	506248	PrimaryExpression	1		505967	1					
ANR	506249	PrimaryExpression	"'""'"		505967	1					
ANR	506250	ExpressionStatement	p ++	583:3:16411:16414	505967	9	True				
ANR	506251	PostIncDecOperationExpression	p ++		505967	0					
ANR	506252	Identifier	p		505967	0					
ANR	506253	IncDec	++		505967	1					
ANR	506254	ExpressionStatement	* p = '\\0'	587:1:16425:16434	505967	8	True				
ANR	506255	AssignmentExpression	* p = '\\0'		505967	0		=			
ANR	506256	UnaryOperationExpression	* p		505967	0					
ANR	506257	UnaryOperator	*		505967	0					
ANR	506258	Identifier	p		505967	1					
ANR	506259	PrimaryExpression	'\\0'		505967	1					
ANR	506260	ExpressionStatement	"* ret = estrndup ( old , ( p - old ) + 1 )"	588:1:16437:16472	505967	9	True				
ANR	506261	AssignmentExpression	"* ret = estrndup ( old , ( p - old ) + 1 )"		505967	0		=			
ANR	506262	UnaryOperationExpression	* ret		505967	0					
ANR	506263	UnaryOperator	*		505967	0					
ANR	506264	Identifier	ret		505967	1					
ANR	506265	CallExpression	"estrndup ( old , ( p - old ) + 1 )"		505967	1					
ANR	506266	Callee	estrndup		505967	0					
ANR	506267	Identifier	estrndup		505967	0					
ANR	506268	ArgumentList	old		505967	1					
ANR	506269	Argument	old		505967	0					
ANR	506270	Identifier	old		505967	0					
ANR	506271	Argument	( p - old ) + 1		505967	1					
ANR	506272	AdditiveExpression	( p - old ) + 1		505967	0		+			
ANR	506273	AdditiveExpression	p - old		505967	0		-			
ANR	506274	Identifier	p		505967	0					
ANR	506275	Identifier	old		505967	1					
ANR	506276	PrimaryExpression	1		505967	1					
ANR	506277	ExpressionStatement	p = * ret	589:1:16475:16483	505967	10	True				
ANR	506278	AssignmentExpression	p = * ret		505967	0		=			
ANR	506279	Identifier	p		505967	0					
ANR	506280	UnaryOperationExpression	* ret		505967	1					
ANR	506281	UnaryOperator	*		505967	0					
ANR	506282	Identifier	ret		505967	1					
ANR	506283	ReturnStatement	return p ;	590:1:16486:16494	505967	11	True				
ANR	506284	Identifier	p		505967	0					
ANR	506285	ReturnType	static char *		505967	1					
ANR	506286	Identifier	heb_number_to_chars		505967	2					
ANR	506287	ParameterList	"int n , int fl , char * * ret"		505967	3					
ANR	506288	Parameter	int n	505:33:15185:15189	505967	0	True				
ANR	506289	ParameterType	int		505967	0					
ANR	506290	Identifier	n		505967	1					
ANR	506291	Parameter	int fl	505:40:15192:15197	505967	1	True				
ANR	506292	ParameterType	int		505967	0					
ANR	506293	Identifier	fl		505967	1					
ANR	506294	Parameter	char * * ret	505:48:15200:15209	505967	2	True				
ANR	506295	ParameterType	char * *		505967	0					
ANR	506296	Identifier	ret		505967	1					
ANR	506297	CFGEntryNode	ENTRY		505967		True				
ANR	506298	CFGExitNode	EXIT		505967		True				
ANR	506299	Symbol	ret		505967						
ANR	506300	Symbol	* ( p - 1 )		505967						
ANR	506301	Symbol	NULL		505967						
ANR	506302	Symbol	* alef_bet		505967						
ANR	506303	Symbol	fl		505967						
ANR	506304	Symbol	old		505967						
ANR	506305	Symbol	alef_bet		505967						
ANR	506306	Symbol	* ret		505967						
ANR	506307	Symbol	CAL_JEWISH_ADD_ALAFIM_GERESH		505967						
ANR	506308	Symbol	CAL_JEWISH_ADD_GERESHAYIM		505967						
ANR	506309	Symbol	n		505967						
ANR	506310	Symbol	endofalafim		505967						
ANR	506311	Symbol	* ( p )		505967						
ANR	506312	Symbol	p		505967						
ANR	506313	Symbol	estrndup		505967						
ANR	506314	Symbol	CAL_JEWISH_ADD_ALAFIM		505967						
ANR	506315	Symbol	* n		505967						
ANR	506316	Symbol	* p		505967						
ANR	506317	DeclStmt									
ANR	506318	Decl							zend_long	zend_long	julday
ANR	506319	Decl							zend_long	zend_long	fl
ANR	506320	DeclStmt									
ANR	506321	Decl							zend_bool	zend_bool	heb
ANR	506322	DeclStmt									
ANR	506323	Decl							int	int	year
ANR	506324	Decl							int	int	month
ANR	506325	Decl							int	int	day
ANR	506326	DeclStmt									
ANR	506327	Decl							char	char [ 16 ]	date
ANR	506328	Decl							char	char [ 32 ]	hebdate
ANR	506329	DeclStmt									
ANR	506330	Decl							char	char *	dayp
ANR	506331	Decl							char	char *	yearp
ANR	506332	DeclStmt									
ANR	506333	Decl							zend_long	zend_long	year
ANR	506334	Decl							zend_long	zend_long	month
ANR	506335	Decl							zend_long	zend_long	day
ANR	506336	DeclStmt									
ANR	506337	Decl							zend_long	zend_long	julday
ANR	506338	DeclStmt									
ANR	506339	Decl							int	int	year
ANR	506340	Decl							int	int	month
ANR	506341	Decl							int	int	day
ANR	506342	DeclStmt									
ANR	506343	Decl							char	char [ 16 ]	date
ANR	506344	DeclStmt									
ANR	506345	Decl							zend_long	zend_long	year
ANR	506346	Decl							zend_long	zend_long	month
ANR	506347	Decl							zend_long	zend_long	day
ANR	506348	DeclStmt									
ANR	506349	Decl							zend_long	zend_long	julday
ANR	506350	Decl							zend_long	zend_long	mode
ANR	506351	DeclStmt									
ANR	506352	Decl							int	int	day
ANR	506353	DeclStmt									
ANR	506354	Decl							char	char *	daynamel
ANR	506355	Decl							char	char *	daynames
ANR	506356	DeclStmt									
ANR	506357	Decl							zend_long	zend_long	julday
ANR	506358	Decl							zend_long	zend_long	mode
ANR	506359	DeclStmt									
ANR	506360	Decl							char	char *	monthname
ANR	506361	DeclStmt									
ANR	506362	Decl							int	int	month
ANR	506363	Decl							int	int	day
ANR	506364	Decl							int	int	year
