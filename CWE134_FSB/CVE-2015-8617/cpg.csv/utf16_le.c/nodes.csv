command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3819745	File	data/converged/CVE-2015-8617_php-src/utf16_le.c								
ANR	3819746	DeclStmt									
ANR	3819747	Decl							const int	const int [ ]	EncLen_UTF16
ANR	3819748	Function	utf16le_code_to_mbclen	51:0:2449:2539							
ANR	3819749	FunctionDef	utf16le_code_to_mbclen (OnigCodePoint code)		3819748	0					
ANR	3819750	CompoundStatement		53:0:2503:2539	3819748	0					
ANR	3819751	ReturnStatement	return ( code > 0xffff ? 4 : 2 ) ;	54:2:2507:2537	3819748	0	True				
ANR	3819752	ConditionalExpression	code > 0xffff ? 4 : 2		3819748	0					
ANR	3819753	Condition	code > 0xffff		3819748	0					
ANR	3819754	RelationalExpression	code > 0xffff		3819748	0		>			
ANR	3819755	Identifier	code		3819748	0					
ANR	3819756	PrimaryExpression	0xffff		3819748	1					
ANR	3819757	PrimaryExpression	4		3819748	1					
ANR	3819758	PrimaryExpression	2		3819748	2					
ANR	3819759	ReturnType	static int		3819748	1					
ANR	3819760	Identifier	utf16le_code_to_mbclen		3819748	2					
ANR	3819761	ParameterList	OnigCodePoint code		3819748	3					
ANR	3819762	Parameter	OnigCodePoint code	52:23:2483:2500	3819748	0	True				
ANR	3819763	ParameterType	OnigCodePoint		3819748	0					
ANR	3819764	Identifier	code		3819748	1					
ANR	3819765	CFGEntryNode	ENTRY		3819748		True				
ANR	3819766	CFGExitNode	EXIT		3819748		True				
ANR	3819767	Symbol	code		3819748						
ANR	3819768	Function	utf16le_mbc_enc_len	57:0:2542:2622							
ANR	3819769	FunctionDef	utf16le_mbc_enc_len (const UChar * p)		3819768	0					
ANR	3819770	CompoundStatement		59:0:2589:2622	3819768	0					
ANR	3819771	ReturnStatement	return EncLen_UTF16 [ * ( p + 1 ) ] ;	60:2:2593:2620	3819768	0	True				
ANR	3819772	ArrayIndexing	EncLen_UTF16 [ * ( p + 1 ) ]		3819768	0					
ANR	3819773	Identifier	EncLen_UTF16		3819768	0					
ANR	3819774	UnaryOperationExpression	* ( p + 1 )		3819768	1					
ANR	3819775	UnaryOperator	*		3819768	0					
ANR	3819776	AdditiveExpression	p + 1		3819768	1		+			
ANR	3819777	Identifier	p		3819768	0					
ANR	3819778	PrimaryExpression	1		3819768	1					
ANR	3819779	ReturnType	static int		3819768	1					
ANR	3819780	Identifier	utf16le_mbc_enc_len		3819768	2					
ANR	3819781	ParameterList	const UChar * p		3819768	3					
ANR	3819782	Parameter	const UChar * p	58:20:2573:2586	3819768	0	True				
ANR	3819783	ParameterType	const UChar *		3819768	0					
ANR	3819784	Identifier	p		3819768	1					
ANR	3819785	CFGEntryNode	ENTRY		3819768		True				
ANR	3819786	CFGExitNode	EXIT		3819768		True				
ANR	3819787	Symbol	p		3819768						
ANR	3819788	Symbol	* * ( p + 1 )		3819768						
ANR	3819789	Symbol	* EncLen_UTF16		3819768						
ANR	3819790	Symbol	* p		3819768						
ANR	3819791	Symbol	* ( p + 1 )		3819768						
ANR	3819792	Symbol	EncLen_UTF16		3819768						
ANR	3819793	Symbol	* * p		3819768						
ANR	3819794	Function	utf16le_is_mbc_newline	63:0:2625:3021							
ANR	3819795	FunctionDef	"utf16le_is_mbc_newline (const UChar * p , const UChar * end)"		3819794	0					
ANR	3819796	CompoundStatement		65:0:2693:3021	3819794	0					
ANR	3819797	IfStatement	if ( p + 1 < end )		3819794	0					
ANR	3819798	Condition	p + 1 < end	66:6:2701:2711	3819794	0	True				
ANR	3819799	RelationalExpression	p + 1 < end		3819794	0		<			
ANR	3819800	AdditiveExpression	p + 1		3819794	0		+			
ANR	3819801	Identifier	p		3819794	0					
ANR	3819802	PrimaryExpression	1		3819794	1					
ANR	3819803	Identifier	end		3819794	1					
ANR	3819804	CompoundStatement		2:19:20:20	3819794	1					
ANR	3819805	IfStatement	if ( * p == 0x0a && * ( p + 1 ) == 0x00 )		3819794	0					
ANR	3819806	Condition	* p == 0x0a && * ( p + 1 ) == 0x00	67:8:2724:2751	3819794	0	True				
ANR	3819807	AndExpression	* p == 0x0a && * ( p + 1 ) == 0x00		3819794	0		&&			
ANR	3819808	EqualityExpression	* p == 0x0a		3819794	0		==			
ANR	3819809	UnaryOperationExpression	* p		3819794	0					
ANR	3819810	UnaryOperator	*		3819794	0					
ANR	3819811	Identifier	p		3819794	1					
ANR	3819812	PrimaryExpression	0x0a		3819794	1					
ANR	3819813	EqualityExpression	* ( p + 1 ) == 0x00		3819794	1		==			
ANR	3819814	UnaryOperationExpression	* ( p + 1 )		3819794	0					
ANR	3819815	UnaryOperator	*		3819794	0					
ANR	3819816	AdditiveExpression	p + 1		3819794	1		+			
ANR	3819817	Identifier	p		3819794	0					
ANR	3819818	PrimaryExpression	1		3819794	1					
ANR	3819819	PrimaryExpression	0x00		3819794	1					
ANR	3819820	ReturnStatement	return 1 ;	68:6:2760:2768	3819794	1	True				
ANR	3819821	PrimaryExpression	1		3819794	0					
ANR	3819822	Statement	if	70:4:2814:2815	3819794	1	True				
ANR	3819823	Statement	(	70:7:2817:2817	3819794	2	True				
ANR	3819824	Statement	(	70:8:2818:2818	3819794	3	True				
ANR	3819825	Statement	*	72:2:2858:2858	3819794	4	True				
ANR	3819826	Statement	p	72:3:2859:2859	3819794	5	True				
ANR	3819827	Statement	==	72:5:2861:2862	3819794	6	True				
ANR	3819828	Statement	0x0d	72:8:2864:2867	3819794	7	True				
ANR	3819829	Statement	||	72:13:2869:2870	3819794	8	True				
ANR	3819830	Statement	*	74:2:2881:2881	3819794	9	True				
ANR	3819831	Statement	p	74:3:2882:2882	3819794	10	True				
ANR	3819832	Statement	==	74:5:2884:2885	3819794	11	True				
ANR	3819833	Statement	0x85	74:8:2887:2890	3819794	12	True				
ANR	3819834	Statement	)	74:12:2891:2891	3819794	13	True				
ANR	3819835	Statement	&&	74:14:2893:2894	3819794	14	True				
ANR	3819836	Statement	*	74:17:2896:2896	3819794	15	True				
ANR	3819837	Statement	(	74:18:2897:2897	3819794	16	True				
ANR	3819838	Statement	p	74:19:2898:2898	3819794	17	True				
ANR	3819839	Statement	+	74:20:2899:2899	3819794	18	True				
ANR	3819840	Statement	1	74:21:2900:2900	3819794	19	True				
ANR	3819841	Statement	)	74:22:2901:2901	3819794	20	True				
ANR	3819842	Statement	==	74:24:2903:2904	3819794	21	True				
ANR	3819843	Statement	0x00	74:27:2906:2909	3819794	22	True				
ANR	3819844	Statement	)	74:31:2910:2910	3819794	23	True				
ANR	3819845	ReturnStatement	return 1 ;	75:6:2918:2926	3819794	24	True				
ANR	3819846	PrimaryExpression	1		3819794	0					
ANR	3819847	IfStatement	if ( * ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) )		3819794	25					
ANR	3819848	Condition	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 )	76:8:2936:2979	3819794	0	True				
ANR	3819849	AndExpression	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 )		3819794	0		&&			
ANR	3819850	EqualityExpression	* ( p + 1 ) == 0x20		3819794	0		==			
ANR	3819851	UnaryOperationExpression	* ( p + 1 )		3819794	0					
ANR	3819852	UnaryOperator	*		3819794	0					
ANR	3819853	AdditiveExpression	p + 1		3819794	1		+			
ANR	3819854	Identifier	p		3819794	0					
ANR	3819855	PrimaryExpression	1		3819794	1					
ANR	3819856	PrimaryExpression	0x20		3819794	1					
ANR	3819857	OrExpression	* p == 0x29 || * p == 0x28		3819794	1		||			
ANR	3819858	EqualityExpression	* p == 0x29		3819794	0		==			
ANR	3819859	UnaryOperationExpression	* p		3819794	0					
ANR	3819860	UnaryOperator	*		3819794	0					
ANR	3819861	Identifier	p		3819794	1					
ANR	3819862	PrimaryExpression	0x29		3819794	1					
ANR	3819863	EqualityExpression	* p == 0x28		3819794	1		==			
ANR	3819864	UnaryOperationExpression	* p		3819794	0					
ANR	3819865	UnaryOperator	*		3819794	0					
ANR	3819866	Identifier	p		3819794	1					
ANR	3819867	PrimaryExpression	0x28		3819794	1					
ANR	3819868	ReturnStatement	return 1 ;	77:6:2988:2996	3819794	1	True				
ANR	3819869	PrimaryExpression	1		3819794	0					
ANR	3819870	ReturnStatement	return 0 ;	80:2:3011:3019	3819794	1	True				
ANR	3819871	PrimaryExpression	0		3819794	0					
ANR	3819872	ReturnType	static int		3819794	1					
ANR	3819873	Identifier	utf16le_is_mbc_newline		3819794	2					
ANR	3819874	ParameterList	"const UChar * p , const UChar * end"		3819794	3					
ANR	3819875	Parameter	const UChar * p	64:23:2659:2672	3819794	0	True				
ANR	3819876	ParameterType	const UChar *		3819794	0					
ANR	3819877	Identifier	p		3819794	1					
ANR	3819878	Parameter	const UChar * end	64:39:2675:2690	3819794	1	True				
ANR	3819879	ParameterType	const UChar *		3819794	0					
ANR	3819880	Identifier	end		3819794	1					
ANR	3819881	CFGEntryNode	ENTRY		3819794		True				
ANR	3819882	CFGExitNode	EXIT		3819794		True				
ANR	3819883	Symbol	p		3819794						
ANR	3819884	Symbol	end		3819794						
ANR	3819885	Symbol	* p		3819794						
ANR	3819886	Symbol	* ( p + 1 )		3819794						
ANR	3819887	DeclStmt									
ANR	3819888	Decl							OnigCodePoint	OnigCodePoint	code
ANR	3819889	DeclStmt									
ANR	3819890	Decl							UChar	UChar	c0
ANR	3819891	DeclStmt									
ANR	3819892	Decl							UChar	UChar	c1
ANR	3819893	Function	utf16le_code_to_mbc	101:0:3412:3883							
ANR	3819894	FunctionDef	"utf16le_code_to_mbc (OnigCodePoint code , UChar * buf)"		3819893	0					
ANR	3819895	CompoundStatement		103:0:3475:3883	3819893	0					
ANR	3819896	IdentifierDeclStatement	UChar * p = buf ;	104:2:3479:3493	3819893	0	True				
ANR	3819897	IdentifierDecl	* p = buf		3819893	0					
ANR	3819898	IdentifierDeclType	UChar *		3819893	0					
ANR	3819899	Identifier	p		3819893	1					
ANR	3819900	AssignmentExpression	* p = buf		3819893	2		=			
ANR	3819901	Identifier	buf		3819893	0					
ANR	3819902	Identifier	buf		3819893	1					
ANR	3819903	IfStatement	if ( code > 0xffff )		3819893	1					
ANR	3819904	Condition	code > 0xffff	106:6:3502:3514	3819893	0	True				
ANR	3819905	RelationalExpression	code > 0xffff		3819893	0		>			
ANR	3819906	Identifier	code		3819893	0					
ANR	3819907	PrimaryExpression	0xffff		3819893	1					
ANR	3819908	CompoundStatement		5:4:47:71	3819893	1					
ANR	3819909	IdentifierDeclStatement	"unsigned int plane , high ;"	107:4:3523:3547	3819893	0	True				
ANR	3819910	IdentifierDecl	plane		3819893	0					
ANR	3819911	IdentifierDeclType	unsigned int		3819893	0					
ANR	3819912	Identifier	plane		3819893	1					
ANR	3819913	IdentifierDecl	high		3819893	1					
ANR	3819914	IdentifierDeclType	unsigned int		3819893	0					
ANR	3819915	Identifier	high		3819893	1					
ANR	3819916	ExpressionStatement	plane = ( code >> 16 ) - 1	109:4:3554:3578	3819893	1	True				
ANR	3819917	AssignmentExpression	plane = ( code >> 16 ) - 1		3819893	0		=			
ANR	3819918	Identifier	plane		3819893	0					
ANR	3819919	AdditiveExpression	( code >> 16 ) - 1		3819893	1		-			
ANR	3819920	ShiftExpression	code >> 16		3819893	0		>>			
ANR	3819921	Identifier	code		3819893	0					
ANR	3819922	PrimaryExpression	16		3819893	1					
ANR	3819923	PrimaryExpression	1		3819893	1					
ANR	3819924	ExpressionStatement	high = ( code & 0xff00 ) >> 8	110:4:3584:3611	3819893	2	True				
ANR	3819925	AssignmentExpression	high = ( code & 0xff00 ) >> 8		3819893	0		=			
ANR	3819926	Identifier	high		3819893	0					
ANR	3819927	ShiftExpression	( code & 0xff00 ) >> 8		3819893	1		>>			
ANR	3819928	BitAndExpression	code & 0xff00		3819893	0		&			
ANR	3819929	Identifier	code		3819893	0					
ANR	3819930	PrimaryExpression	0xff00		3819893	1					
ANR	3819931	PrimaryExpression	8		3819893	1					
ANR	3819932	ExpressionStatement	* p ++ = ( ( plane & 0x03 ) << 6 ) + ( high >> 2 )	112:4:3618:3660	3819893	3	True				
ANR	3819933	AssignmentExpression	* p ++ = ( ( plane & 0x03 ) << 6 ) + ( high >> 2 )		3819893	0		=			
ANR	3819934	UnaryOperationExpression	* p ++		3819893	0					
ANR	3819935	UnaryOperator	*		3819893	0					
ANR	3819936	PostIncDecOperationExpression	p ++		3819893	1					
ANR	3819937	Identifier	p		3819893	0					
ANR	3819938	IncDec	++		3819893	1					
ANR	3819939	AdditiveExpression	( ( plane & 0x03 ) << 6 ) + ( high >> 2 )		3819893	1		+			
ANR	3819940	ShiftExpression	( plane & 0x03 ) << 6		3819893	0		<<			
ANR	3819941	BitAndExpression	plane & 0x03		3819893	0		&			
ANR	3819942	Identifier	plane		3819893	0					
ANR	3819943	PrimaryExpression	0x03		3819893	1					
ANR	3819944	PrimaryExpression	6		3819893	1					
ANR	3819945	ShiftExpression	high >> 2		3819893	1		>>			
ANR	3819946	Identifier	high		3819893	0					
ANR	3819947	PrimaryExpression	2		3819893	1					
ANR	3819948	ExpressionStatement	* p ++ = ( plane >> 2 ) + 0xd8	113:4:3666:3692	3819893	4	True				
ANR	3819949	AssignmentExpression	* p ++ = ( plane >> 2 ) + 0xd8		3819893	0		=			
ANR	3819950	UnaryOperationExpression	* p ++		3819893	0					
ANR	3819951	UnaryOperator	*		3819893	0					
ANR	3819952	PostIncDecOperationExpression	p ++		3819893	1					
ANR	3819953	Identifier	p		3819893	0					
ANR	3819954	IncDec	++		3819893	1					
ANR	3819955	AdditiveExpression	( plane >> 2 ) + 0xd8		3819893	1		+			
ANR	3819956	ShiftExpression	plane >> 2		3819893	0		>>			
ANR	3819957	Identifier	plane		3819893	0					
ANR	3819958	PrimaryExpression	2		3819893	1					
ANR	3819959	PrimaryExpression	0xd8		3819893	1					
ANR	3819960	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	114:4:3698:3726	3819893	5	True				
ANR	3819961	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		3819893	0		=			
ANR	3819962	UnaryOperationExpression	* p ++		3819893	0					
ANR	3819963	UnaryOperator	*		3819893	0					
ANR	3819964	PostIncDecOperationExpression	p ++		3819893	1					
ANR	3819965	Identifier	p		3819893	0					
ANR	3819966	IncDec	++		3819893	1					
ANR	3819967	CastExpression	( UChar ) ( code & 0xff )		3819893	1					
ANR	3819968	CastTarget	UChar		3819893	0					
ANR	3819969	BitAndExpression	code & 0xff		3819893	1		&			
ANR	3819970	Identifier	code		3819893	0					
ANR	3819971	PrimaryExpression	0xff		3819893	1					
ANR	3819972	ExpressionStatement	* p = ( high & 0x03 ) + 0xdc	115:4:3732:3759	3819893	6	True				
ANR	3819973	AssignmentExpression	* p = ( high & 0x03 ) + 0xdc		3819893	0		=			
ANR	3819974	UnaryOperationExpression	* p		3819893	0					
ANR	3819975	UnaryOperator	*		3819893	0					
ANR	3819976	Identifier	p		3819893	1					
ANR	3819977	AdditiveExpression	( high & 0x03 ) + 0xdc		3819893	1		+			
ANR	3819978	BitAndExpression	high & 0x03		3819893	0		&			
ANR	3819979	Identifier	high		3819893	0					
ANR	3819980	PrimaryExpression	0x03		3819893	1					
ANR	3819981	PrimaryExpression	0xdc		3819893	1					
ANR	3819982	ReturnStatement	return 4 ;	116:4:3765:3773	3819893	7	True				
ANR	3819983	PrimaryExpression	4		3819893	0					
ANR	3819984	ElseStatement	else		3819893	0					
ANR	3819985	CompoundStatement		16:7:310:310	3819893	0					
ANR	3819986	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	119:4:3792:3820	3819893	0	True				
ANR	3819987	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		3819893	0		=			
ANR	3819988	UnaryOperationExpression	* p ++		3819893	0					
ANR	3819989	UnaryOperator	*		3819893	0					
ANR	3819990	PostIncDecOperationExpression	p ++		3819893	1					
ANR	3819991	Identifier	p		3819893	0					
ANR	3819992	IncDec	++		3819893	1					
ANR	3819993	CastExpression	( UChar ) ( code & 0xff )		3819893	1					
ANR	3819994	CastTarget	UChar		3819893	0					
ANR	3819995	BitAndExpression	code & 0xff		3819893	1		&			
ANR	3819996	Identifier	code		3819893	0					
ANR	3819997	PrimaryExpression	0xff		3819893	1					
ANR	3819998	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )	120:4:3826:3863	3819893	1	True				
ANR	3819999	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )		3819893	0		=			
ANR	3820000	UnaryOperationExpression	* p ++		3819893	0					
ANR	3820001	UnaryOperator	*		3819893	0					
ANR	3820002	PostIncDecOperationExpression	p ++		3819893	1					
ANR	3820003	Identifier	p		3819893	0					
ANR	3820004	IncDec	++		3819893	1					
ANR	3820005	CastExpression	( UChar ) ( ( code & 0xff00 ) >> 8 )		3819893	1					
ANR	3820006	CastTarget	UChar		3819893	0					
ANR	3820007	ShiftExpression	( code & 0xff00 ) >> 8		3819893	1		>>			
ANR	3820008	BitAndExpression	code & 0xff00		3819893	0		&			
ANR	3820009	Identifier	code		3819893	0					
ANR	3820010	PrimaryExpression	0xff00		3819893	1					
ANR	3820011	PrimaryExpression	8		3819893	1					
ANR	3820012	ReturnStatement	return 2 ;	121:4:3869:3877	3819893	2	True				
ANR	3820013	PrimaryExpression	2		3819893	0					
ANR	3820014	ReturnType	static int		3819893	1					
ANR	3820015	Identifier	utf16le_code_to_mbc		3819893	2					
ANR	3820016	ParameterList	"OnigCodePoint code , UChar * buf"		3819893	3					
ANR	3820017	Parameter	OnigCodePoint code	102:20:3443:3460	3819893	0	True				
ANR	3820018	ParameterType	OnigCodePoint		3819893	0					
ANR	3820019	Identifier	code		3819893	1					
ANR	3820020	Parameter	UChar * buf	102:40:3463:3472	3819893	1	True				
ANR	3820021	ParameterType	UChar *		3819893	0					
ANR	3820022	Identifier	buf		3819893	1					
ANR	3820023	CFGEntryNode	ENTRY		3819893		True				
ANR	3820024	CFGExitNode	EXIT		3819893		True				
ANR	3820025	Symbol	p		3819893						
ANR	3820026	Symbol	plane		3819893						
ANR	3820027	Symbol	buf		3819893						
ANR	3820028	Symbol	high		3819893						
ANR	3820029	Symbol	code		3819893						
ANR	3820030	Symbol	* p ++		3819893						
ANR	3820031	Symbol	* p		3819893						
ANR	3820032	Function	utf16le_mbc_case_fold	125:0:3886:4481							
ANR	3820033	FunctionDef	"utf16le_mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		3820032	0					
ANR	3820034	CompoundStatement		128:0:3999:4481	3820032	0					
ANR	3820035	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:4003:4023	3820032	0	True				
ANR	3820036	IdentifierDecl	* p = * pp		3820032	0					
ANR	3820037	IdentifierDeclType	const UChar *		3820032	0					
ANR	3820038	Identifier	p		3820032	1					
ANR	3820039	AssignmentExpression	* p = * pp		3820032	2		=			
ANR	3820040	Identifier	p		3820032	0					
ANR	3820041	UnaryOperationExpression	* pp		3820032	1					
ANR	3820042	UnaryOperator	*		3820032	0					
ANR	3820043	Identifier	pp		3820032	1					
ANR	3820044	IfStatement	if ( ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 )		3820032	1					
ANR	3820045	Condition	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0	131:6:4032:4071	3820032	0	True				
ANR	3820046	AndExpression	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0		3820032	0		&&			
ANR	3820047	CallExpression	ONIGENC_IS_ASCII_CODE ( * p )		3820032	0					
ANR	3820048	Callee	ONIGENC_IS_ASCII_CODE		3820032	0					
ANR	3820049	Identifier	ONIGENC_IS_ASCII_CODE		3820032	0					
ANR	3820050	ArgumentList	* p		3820032	1					
ANR	3820051	Argument	* p		3820032	0					
ANR	3820052	UnaryOperationExpression	* p		3820032	0					
ANR	3820053	UnaryOperator	*		3820032	0					
ANR	3820054	Identifier	p		3820032	1					
ANR	3820055	EqualityExpression	* ( p + 1 ) == 0		3820032	1		==			
ANR	3820056	UnaryOperationExpression	* ( p + 1 )		3820032	0					
ANR	3820057	UnaryOperator	*		3820032	0					
ANR	3820058	AdditiveExpression	p + 1		3820032	1		+			
ANR	3820059	Identifier	p		3820032	0					
ANR	3820060	PrimaryExpression	1		3820032	1					
ANR	3820061	PrimaryExpression	0		3820032	1					
ANR	3820062	CompoundStatement		4:48:74:74	3820032	1					
ANR	3820063	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		3820032	0					
ANR	3820064	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	133:8:4127:4171	3820032	0	True				
ANR	3820065	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		3820032	0		!=			
ANR	3820066	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		3820032	0		&			
ANR	3820067	Identifier	flag		3820032	0					
ANR	3820068	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		3820032	1					
ANR	3820069	PrimaryExpression	0		3820032	1					
ANR	3820070	CompoundStatement		6:55:174:174	3820032	1					
ANR	3820071	IfStatement	if ( * p == 0x49 )		3820032	0					
ANR	3820072	Condition	* p == 0x49	134:10:4186:4195	3820032	0	True				
ANR	3820073	EqualityExpression	* p == 0x49		3820032	0		==			
ANR	3820074	UnaryOperationExpression	* p		3820032	0					
ANR	3820075	UnaryOperator	*		3820032	0					
ANR	3820076	Identifier	p		3820032	1					
ANR	3820077	PrimaryExpression	0x49		3820032	1					
ANR	3820078	CompoundStatement		7:22:198:198	3820032	1					
ANR	3820079	ExpressionStatement	* fold ++ = 0x31	135:1:4201:4215	3820032	0	True				
ANR	3820080	AssignmentExpression	* fold ++ = 0x31		3820032	0		=			
ANR	3820081	UnaryOperationExpression	* fold ++		3820032	0					
ANR	3820082	UnaryOperator	*		3820032	0					
ANR	3820083	PostIncDecOperationExpression	fold ++		3820032	1					
ANR	3820084	Identifier	fold		3820032	0					
ANR	3820085	IncDec	++		3820032	1					
ANR	3820086	PrimaryExpression	0x31		3820032	1					
ANR	3820087	ExpressionStatement	* fold = 0x01	136:1:4218:4232	3820032	1	True				
ANR	3820088	AssignmentExpression	* fold = 0x01		3820032	0		=			
ANR	3820089	UnaryOperationExpression	* fold		3820032	0					
ANR	3820090	UnaryOperator	*		3820032	0					
ANR	3820091	Identifier	fold		3820032	1					
ANR	3820092	PrimaryExpression	0x01		3820032	1					
ANR	3820093	ExpressionStatement	( * pp ) += 2	137:1:4235:4245	3820032	2	True				
ANR	3820094	AssignmentExpression	( * pp ) += 2		3820032	0		+=			
ANR	3820095	UnaryOperationExpression	* pp		3820032	0					
ANR	3820096	UnaryOperator	*		3820032	0					
ANR	3820097	Identifier	pp		3820032	1					
ANR	3820098	PrimaryExpression	2		3820032	1					
ANR	3820099	ReturnStatement	return 2 ;	138:1:4248:4256	3820032	3	True				
ANR	3820100	PrimaryExpression	2		3820032	0					
ANR	3820101	ExpressionStatement	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )	143:4:4284:4330	3820032	1	True				
ANR	3820102	AssignmentExpression	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		3820032	0		=			
ANR	3820103	UnaryOperationExpression	* fold ++		3820032	0					
ANR	3820104	UnaryOperator	*		3820032	0					
ANR	3820105	PostIncDecOperationExpression	fold ++		3820032	1					
ANR	3820106	Identifier	fold		3820032	0					
ANR	3820107	IncDec	++		3820032	1					
ANR	3820108	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		3820032	1					
ANR	3820109	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3820032	0					
ANR	3820110	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3820032	0					
ANR	3820111	ArgumentList	* p		3820032	1					
ANR	3820112	Argument	* p		3820032	0					
ANR	3820113	UnaryOperationExpression	* p		3820032	0					
ANR	3820114	UnaryOperator	*		3820032	0					
ANR	3820115	Identifier	p		3820032	1					
ANR	3820116	ExpressionStatement	* fold = 0	144:4:4336:4347	3820032	2	True				
ANR	3820117	AssignmentExpression	* fold = 0		3820032	0		=			
ANR	3820118	UnaryOperationExpression	* fold		3820032	0					
ANR	3820119	UnaryOperator	*		3820032	0					
ANR	3820120	Identifier	fold		3820032	1					
ANR	3820121	PrimaryExpression	0		3820032	1					
ANR	3820122	ExpressionStatement	* pp += 2	145:4:4353:4361	3820032	3	True				
ANR	3820123	AssignmentExpression	* pp += 2		3820032	0		+=			
ANR	3820124	UnaryOperationExpression	* pp		3820032	0					
ANR	3820125	UnaryOperator	*		3820032	0					
ANR	3820126	Identifier	pp		3820032	1					
ANR	3820127	PrimaryExpression	2		3820032	1					
ANR	3820128	ReturnStatement	return 2 ;	146:4:4367:4375	3820032	4	True				
ANR	3820129	PrimaryExpression	2		3820032	0					
ANR	3820130	ElseStatement	else		3820032	0					
ANR	3820131	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF16_LE , flag , pp , end , fold ) ;"	149:4:4392:4479	3820032	0	True				
ANR	3820132	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF16_LE , flag , pp , end , fold )"		3820032	0					
ANR	3820133	Callee	onigenc_unicode_mbc_case_fold		3820032	0					
ANR	3820134	Identifier	onigenc_unicode_mbc_case_fold		3820032	0					
ANR	3820135	ArgumentList	ONIG_ENCODING_UTF16_LE		3820032	1					
ANR	3820136	Argument	ONIG_ENCODING_UTF16_LE		3820032	0					
ANR	3820137	Identifier	ONIG_ENCODING_UTF16_LE		3820032	0					
ANR	3820138	Argument	flag		3820032	1					
ANR	3820139	Identifier	flag		3820032	0					
ANR	3820140	Argument	pp		3820032	2					
ANR	3820141	Identifier	pp		3820032	0					
ANR	3820142	Argument	end		3820032	3					
ANR	3820143	Identifier	end		3820032	0					
ANR	3820144	Argument	fold		3820032	4					
ANR	3820145	Identifier	fold		3820032	0					
ANR	3820146	ReturnType	static int		3820032	1					
ANR	3820147	Identifier	utf16le_mbc_case_fold		3820032	2					
ANR	3820148	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		3820032	3					
ANR	3820149	Parameter	OnigCaseFoldType flag	126:22:3919:3939	3820032	0	True				
ANR	3820150	ParameterType	OnigCaseFoldType		3820032	0					
ANR	3820151	Identifier	flag		3820032	1					
ANR	3820152	Parameter	const UChar * * pp	127:8:3950:3965	3820032	1	True				
ANR	3820153	ParameterType	const UChar * *		3820032	0					
ANR	3820154	Identifier	pp		3820032	1					
ANR	3820155	Parameter	const UChar * end	127:26:3968:3983	3820032	2	True				
ANR	3820156	ParameterType	const UChar *		3820032	0					
ANR	3820157	Identifier	end		3820032	1					
ANR	3820158	Parameter	UChar * fold	127:44:3986:3996	3820032	3	True				
ANR	3820159	ParameterType	UChar *		3820032	0					
ANR	3820160	Identifier	fold		3820032	1					
ANR	3820161	CFGEntryNode	ENTRY		3820032		True				
ANR	3820162	CFGExitNode	EXIT		3820032		True				
ANR	3820163	Symbol	pp		3820032						
ANR	3820164	Symbol	ONIGENC_IS_ASCII_CODE		3820032						
ANR	3820165	Symbol	flag		3820032						
ANR	3820166	Symbol	* pp		3820032						
ANR	3820167	Symbol	* fold		3820032						
ANR	3820168	Symbol	* ( p + 1 )		3820032						
ANR	3820169	Symbol	* fold ++		3820032						
ANR	3820170	Symbol	ONIG_ENCODING_UTF16_LE		3820032						
ANR	3820171	Symbol	p		3820032						
ANR	3820172	Symbol	fold		3820032						
ANR	3820173	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3820032						
ANR	3820174	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		3820032						
ANR	3820175	Symbol	end		3820032						
ANR	3820176	Symbol	* p		3820032						
ANR	3820177	Symbol	onigenc_unicode_mbc_case_fold		3820032						
ANR	3820178	Function	utf16le_is_mbc_ambiguous	154:0:4490:5159							
ANR	3820179	FunctionDef	"utf16le_is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		3820178	0					
ANR	3820180	CompoundStatement		157:0:4589:5159	3820178	0					
ANR	3820181	IdentifierDeclStatement	const UChar * p = * pp ;	158:2:4593:4613	3820178	0	True				
ANR	3820182	IdentifierDecl	* p = * pp		3820178	0					
ANR	3820183	IdentifierDeclType	const UChar *		3820178	0					
ANR	3820184	Identifier	p		3820178	1					
ANR	3820185	AssignmentExpression	* p = * pp		3820178	2		=			
ANR	3820186	Identifier	p		3820178	0					
ANR	3820187	UnaryOperationExpression	* pp		3820178	1					
ANR	3820188	UnaryOperator	*		3820178	0					
ANR	3820189	Identifier	pp		3820178	1					
ANR	3820190	ExpressionStatement	( * pp ) += EncLen_UTF16 [ * ( p + 1 ) ]	160:2:4618:4647	3820178	1	True				
ANR	3820191	AssignmentExpression	( * pp ) += EncLen_UTF16 [ * ( p + 1 ) ]		3820178	0		+=			
ANR	3820192	UnaryOperationExpression	* pp		3820178	0					
ANR	3820193	UnaryOperator	*		3820178	0					
ANR	3820194	Identifier	pp		3820178	1					
ANR	3820195	ArrayIndexing	EncLen_UTF16 [ * ( p + 1 ) ]		3820178	1					
ANR	3820196	Identifier	EncLen_UTF16		3820178	0					
ANR	3820197	UnaryOperationExpression	* ( p + 1 )		3820178	1					
ANR	3820198	UnaryOperator	*		3820178	0					
ANR	3820199	AdditiveExpression	p + 1		3820178	1		+			
ANR	3820200	Identifier	p		3820178	0					
ANR	3820201	PrimaryExpression	1		3820178	1					
ANR	3820202	IfStatement	if ( * ( p + 1 ) == 0 )		3820178	2					
ANR	3820203	Condition	* ( p + 1 ) == 0	162:6:4656:4666	3820178	0	True				
ANR	3820204	EqualityExpression	* ( p + 1 ) == 0		3820178	0		==			
ANR	3820205	UnaryOperationExpression	* ( p + 1 )		3820178	0					
ANR	3820206	UnaryOperator	*		3820178	0					
ANR	3820207	AdditiveExpression	p + 1		3820178	1		+			
ANR	3820208	Identifier	p		3820178	0					
ANR	3820209	PrimaryExpression	1		3820178	1					
ANR	3820210	PrimaryExpression	0		3820178	1					
ANR	3820211	CompoundStatement		7:4:85:93	3820178	1					
ANR	3820212	IdentifierDeclStatement	"int c , v ;"	163:4:4675:4683	3820178	0	True				
ANR	3820213	IdentifierDecl	c		3820178	0					
ANR	3820214	IdentifierDeclType	int		3820178	0					
ANR	3820215	Identifier	c		3820178	1					
ANR	3820216	IdentifierDecl	v		3820178	1					
ANR	3820217	IdentifierDeclType	int		3820178	0					
ANR	3820218	Identifier	v		3820178	1					
ANR	3820219	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		3820178	1					
ANR	3820220	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	165:8:4694:4758	3820178	0	True				
ANR	3820221	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3820178	0		&&			
ANR	3820222	EqualityExpression	* p == 0xdf		3820178	0		==			
ANR	3820223	UnaryOperationExpression	* p		3820178	0					
ANR	3820224	UnaryOperator	*		3820178	0					
ANR	3820225	Identifier	p		3820178	1					
ANR	3820226	PrimaryExpression	0xdf		3820178	1					
ANR	3820227	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3820178	1		!=			
ANR	3820228	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3820178	0		&			
ANR	3820229	Identifier	flag		3820178	0					
ANR	3820230	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3820178	1					
ANR	3820231	PrimaryExpression	0		3820178	1					
ANR	3820232	CompoundStatement		9:75:171:171	3820178	1					
ANR	3820233	ReturnStatement	return TRUE ;	166:6:4769:4780	3820178	0	True				
ANR	3820234	Identifier	TRUE		3820178	0					
ANR	3820235	ExpressionStatement	c = * p	169:4:4793:4799	3820178	2	True				
ANR	3820236	AssignmentExpression	c = * p		3820178	0		=			
ANR	3820237	Identifier	c		3820178	0					
ANR	3820238	UnaryOperationExpression	* p		3820178	1					
ANR	3820239	UnaryOperator	*		3820178	0					
ANR	3820240	Identifier	p		3820178	1					
ANR	3820241	ExpressionStatement	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"	170:4:4805:4911	3820178	3	True				
ANR	3820242	AssignmentExpression	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		3820178	0		=			
ANR	3820243	Identifier	v		3820178	0					
ANR	3820244	CallExpression	"ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		3820178	1					
ANR	3820245	Callee	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3820178	0					
ANR	3820246	Identifier	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3820178	0					
ANR	3820247	ArgumentList	c		3820178	1					
ANR	3820248	Argument	c		3820178	0					
ANR	3820249	Identifier	c		3820178	0					
ANR	3820250	Argument	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		3820178	1					
ANR	3820251	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		3820178	0		|			
ANR	3820252	Identifier	BIT_CTYPE_UPPER		3820178	0					
ANR	3820253	Identifier	BIT_CTYPE_LOWER		3820178	1					
ANR	3820254	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		3820178	4					
ANR	3820255	Condition	( v | BIT_CTYPE_LOWER ) != 0	172:8:4921:4946	3820178	0	True				
ANR	3820256	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		3820178	0		!=			
ANR	3820257	InclusiveOrExpression	v | BIT_CTYPE_LOWER		3820178	0		|			
ANR	3820258	Identifier	v		3820178	0					
ANR	3820259	Identifier	BIT_CTYPE_LOWER		3820178	1					
ANR	3820260	PrimaryExpression	0		3820178	1					
ANR	3820261	CompoundStatement		16:36:359:359	3820178	1					
ANR	3820262	IfStatement	if ( c >= 0xaa && c <= 0xba )		3820178	0					
ANR	3820263	Condition	c >= 0xaa && c <= 0xba	174:10:5032:5053	3820178	0	True				
ANR	3820264	AndExpression	c >= 0xaa && c <= 0xba		3820178	0		&&			
ANR	3820265	RelationalExpression	c >= 0xaa		3820178	0		>=			
ANR	3820266	Identifier	c		3820178	0					
ANR	3820267	PrimaryExpression	0xaa		3820178	1					
ANR	3820268	RelationalExpression	c <= 0xba		3820178	1		<=			
ANR	3820269	Identifier	c		3820178	0					
ANR	3820270	PrimaryExpression	0xba		3820178	1					
ANR	3820271	ReturnStatement	return FALSE ;	175:1:5057:5069	3820178	1	True				
ANR	3820272	Identifier	FALSE		3820178	0					
ANR	3820273	ElseStatement	else		3820178	0					
ANR	3820274	ReturnStatement	return TRUE ;	177:1:5083:5094	3820178	0	True				
ANR	3820275	Identifier	TRUE		3820178	0					
ANR	3820276	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	179:4:5106:5136	3820178	5	True				
ANR	3820277	ConditionalExpression	v != 0 ? TRUE : FALSE		3820178	0					
ANR	3820278	Condition	v != 0		3820178	0					
ANR	3820279	EqualityExpression	v != 0		3820178	0		!=			
ANR	3820280	Identifier	v		3820178	0					
ANR	3820281	PrimaryExpression	0		3820178	1					
ANR	3820282	Identifier	TRUE		3820178	1					
ANR	3820283	Identifier	FALSE		3820178	2					
ANR	3820284	ReturnStatement	return FALSE ;	182:2:5145:5157	3820178	3	True				
ANR	3820285	Identifier	FALSE		3820178	0					
ANR	3820286	ReturnType	static int		3820178	1					
ANR	3820287	Identifier	utf16le_is_mbc_ambiguous		3820178	2					
ANR	3820288	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		3820178	3					
ANR	3820289	Parameter	OnigCaseFoldType flag	155:25:4526:4546	3820178	0	True				
ANR	3820290	ParameterType	OnigCaseFoldType		3820178	0					
ANR	3820291	Identifier	flag		3820178	1					
ANR	3820292	Parameter	const UChar * * pp	155:48:4549:4564	3820178	1	True				
ANR	3820293	ParameterType	const UChar * *		3820178	0					
ANR	3820294	Identifier	pp		3820178	1					
ANR	3820295	Parameter	const UChar * end	156:4:4571:4586	3820178	2	True				
ANR	3820296	ParameterType	const UChar *		3820178	0					
ANR	3820297	Identifier	end		3820178	1					
ANR	3820298	CFGEntryNode	ENTRY		3820178		True				
ANR	3820299	CFGExitNode	EXIT		3820178		True				
ANR	3820300	Symbol	pp		3820178						
ANR	3820301	Symbol	flag		3820178						
ANR	3820302	Symbol	c		3820178						
ANR	3820303	Symbol	* pp		3820178						
ANR	3820304	Symbol	* EncLen_UTF16		3820178						
ANR	3820305	Symbol	TRUE		3820178						
ANR	3820306	Symbol	* ( p + 1 )		3820178						
ANR	3820307	Symbol	p		3820178						
ANR	3820308	Symbol	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3820178						
ANR	3820309	Symbol	* * ( p + 1 )		3820178						
ANR	3820310	Symbol	v		3820178						
ANR	3820311	Symbol	BIT_CTYPE_LOWER		3820178						
ANR	3820312	Symbol	end		3820178						
ANR	3820313	Symbol	* p		3820178						
ANR	3820314	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3820178						
ANR	3820315	Symbol	BIT_CTYPE_UPPER		3820178						
ANR	3820316	Symbol	FALSE		3820178						
ANR	3820317	Symbol	* * p		3820178						
ANR	3820318	Symbol	EncLen_UTF16		3820178						
ANR	3820319	Function	utf16le_left_adjust_char_head	186:0:5169:5425							
ANR	3820320	FunctionDef	"utf16le_left_adjust_char_head (const UChar * start , const UChar * s)"		3820319	0					
ANR	3820321	CompoundStatement		188:0:5249:5425	3820319	0					
ANR	3820322	IfStatement	if ( s <= start )		3820319	0					
ANR	3820323	Condition	s <= start	189:6:5257:5266	3820319	0	True				
ANR	3820324	RelationalExpression	s <= start		3820319	0		<=			
ANR	3820325	Identifier	s		3820319	0					
ANR	3820326	Identifier	start		3820319	1					
ANR	3820327	ReturnStatement	return ( UChar * ) s ;	189:18:5269:5286	3820319	1	True				
ANR	3820328	CastExpression	( UChar * ) s		3820319	0					
ANR	3820329	CastTarget	UChar *		3820319	0					
ANR	3820330	Identifier	s		3820319	1					
ANR	3820331	IfStatement	if ( ( s - start ) % 2 == 1 )		3820319	1					
ANR	3820332	Condition	( s - start ) % 2 == 1	191:6:5295:5314	3820319	0	True				
ANR	3820333	EqualityExpression	( s - start ) % 2 == 1		3820319	0		==			
ANR	3820334	MultiplicativeExpression	( s - start ) % 2		3820319	0		%			
ANR	3820335	AdditiveExpression	s - start		3820319	0		-			
ANR	3820336	Identifier	s		3820319	0					
ANR	3820337	Identifier	start		3820319	1					
ANR	3820338	PrimaryExpression	2		3820319	1					
ANR	3820339	PrimaryExpression	1		3820319	1					
ANR	3820340	CompoundStatement		4:28:67:67	3820319	1					
ANR	3820341	ExpressionStatement	s --	192:4:5323:5326	3820319	0	True				
ANR	3820342	PostIncDecOperationExpression	s --		3820319	0					
ANR	3820343	Identifier	s		3820319	0					
ANR	3820344	IncDec	--		3820319	1					
ANR	3820345	IfStatement	if ( UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) ) && s > start + 1 )		3820319	2					
ANR	3820346	Condition	UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) ) && s > start + 1	195:6:5339:5388	3820319	0	True				
ANR	3820347	AndExpression	UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) ) && s > start + 1		3820319	0		&&			
ANR	3820348	CallExpression	UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) )		3820319	0					
ANR	3820349	Callee	UTF16_IS_SURROGATE_SECOND		3820319	0					
ANR	3820350	Identifier	UTF16_IS_SURROGATE_SECOND		3820319	0					
ANR	3820351	ArgumentList	* ( s + 1 )		3820319	1					
ANR	3820352	Argument	* ( s + 1 )		3820319	0					
ANR	3820353	UnaryOperationExpression	* ( s + 1 )		3820319	0					
ANR	3820354	UnaryOperator	*		3820319	0					
ANR	3820355	AdditiveExpression	s + 1		3820319	1		+			
ANR	3820356	Identifier	s		3820319	0					
ANR	3820357	PrimaryExpression	1		3820319	1					
ANR	3820358	RelationalExpression	s > start + 1		3820319	1		>			
ANR	3820359	Identifier	s		3820319	0					
ANR	3820360	AdditiveExpression	start + 1		3820319	1		+			
ANR	3820361	Identifier	start		3820319	0					
ANR	3820362	PrimaryExpression	1		3820319	1					
ANR	3820363	ExpressionStatement	s -= 2	196:4:5395:5401	3820319	1	True				
ANR	3820364	AssignmentExpression	s -= 2		3820319	0		-=			
ANR	3820365	Identifier	s		3820319	0					
ANR	3820366	PrimaryExpression	2		3820319	1					
ANR	3820367	ReturnStatement	return ( UChar * ) s ;	198:2:5406:5423	3820319	3	True				
ANR	3820368	CastExpression	( UChar * ) s		3820319	0					
ANR	3820369	CastTarget	UChar *		3820319	0					
ANR	3820370	Identifier	s		3820319	1					
ANR	3820371	ReturnType	static UChar *		3820319	1					
ANR	3820372	Identifier	utf16le_left_adjust_char_head		3820319	2					
ANR	3820373	ParameterList	"const UChar * start , const UChar * s"		3820319	3					
ANR	3820374	Parameter	const UChar * start	187:30:5213:5230	3820319	0	True				
ANR	3820375	ParameterType	const UChar *		3820319	0					
ANR	3820376	Identifier	start		3820319	1					
ANR	3820377	Parameter	const UChar * s	187:50:5233:5246	3820319	1	True				
ANR	3820378	ParameterType	const UChar *		3820319	0					
ANR	3820379	Identifier	s		3820319	1					
ANR	3820380	CFGEntryNode	ENTRY		3820319		True				
ANR	3820381	CFGExitNode	EXIT		3820319		True				
ANR	3820382	Symbol	s		3820319						
ANR	3820383	Symbol	* ( s + 1 )		3820319						
ANR	3820384	Symbol	start		3820319						
ANR	3820385	Symbol	* s		3820319						
ANR	3820386	Symbol	UTF16_IS_SURROGATE_SECOND		3820319						
ANR	3820387	Function	utf16le_get_case_fold_codes_by_str	201:0:5428:5683							
ANR	3820388	FunctionDef	"utf16le_get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		3820387	0					
ANR	3820389	CompoundStatement		204:0:5573:5683	3820387	0					
ANR	3820390	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF16_LE , flag , p , end , items ) ;"	205:2:5577:5681	3820387	0	True				
ANR	3820391	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF16_LE , flag , p , end , items )"		3820387	0					
ANR	3820392	Callee	onigenc_unicode_get_case_fold_codes_by_str		3820387	0					
ANR	3820393	Identifier	onigenc_unicode_get_case_fold_codes_by_str		3820387	0					
ANR	3820394	ArgumentList	ONIG_ENCODING_UTF16_LE		3820387	1					
ANR	3820395	Argument	ONIG_ENCODING_UTF16_LE		3820387	0					
ANR	3820396	Identifier	ONIG_ENCODING_UTF16_LE		3820387	0					
ANR	3820397	Argument	flag		3820387	1					
ANR	3820398	Identifier	flag		3820387	0					
ANR	3820399	Argument	p		3820387	2					
ANR	3820400	Identifier	p		3820387	0					
ANR	3820401	Argument	end		3820387	3					
ANR	3820402	Identifier	end		3820387	0					
ANR	3820403	Argument	items		3820387	4					
ANR	3820404	Identifier	items		3820387	0					
ANR	3820405	ReturnType	static int		3820387	1					
ANR	3820406	Identifier	utf16le_get_case_fold_codes_by_str		3820387	2					
ANR	3820407	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		3820387	3					
ANR	3820408	Parameter	OnigCaseFoldType flag	202:35:5474:5494	3820387	0	True				
ANR	3820409	ParameterType	OnigCaseFoldType		3820387	0					
ANR	3820410	Identifier	flag		3820387	1					
ANR	3820411	Parameter	const OnigUChar * p	203:4:5501:5518	3820387	1	True				
ANR	3820412	ParameterType	const OnigUChar *		3820387	0					
ANR	3820413	Identifier	p		3820387	1					
ANR	3820414	Parameter	const OnigUChar * end	203:24:5521:5540	3820387	2	True				
ANR	3820415	ParameterType	const OnigUChar *		3820387	0					
ANR	3820416	Identifier	end		3820387	1					
ANR	3820417	Parameter	OnigCaseFoldCodeItem items [ ]	203:46:5543:5570	3820387	3	True				
ANR	3820418	ParameterType	OnigCaseFoldCodeItem [ ]		3820387	0					
ANR	3820419	Identifier	items		3820387	1					
ANR	3820420	CFGEntryNode	ENTRY		3820387		True				
ANR	3820421	CFGExitNode	EXIT		3820387		True				
ANR	3820422	Symbol	p		3820387						
ANR	3820423	Symbol	flag		3820387						
ANR	3820424	Symbol	onigenc_unicode_get_case_fold_codes_by_str		3820387						
ANR	3820425	Symbol	end		3820387						
ANR	3820426	Symbol	items		3820387						
ANR	3820427	Symbol	ONIG_ENCODING_UTF16_LE		3820387						
ANR	3820428	DeclStmt									
ANR	3820429	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF16_LE
