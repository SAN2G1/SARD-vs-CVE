command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3753223	File	data/converged/CVE-2015-8617_php-src/spl_fixedarray.c								
ANR	3753224	DeclStmt									
ANR	3753225	Decl							zend_object_handlers	zend_object_handlers	spl_handler_SplFixedArray
ANR	3753226	DeclStmt									
ANR	3753227	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplFixedArray
ANR	3753228	ClassDef	_spl_fixedarray	45:8:1700:1785							
ANR	3753229	DeclStmt									
ANR	3753230	Decl							zend_long	zend_long	size
ANR	3753231	DeclStmt									
ANR	3753232	Decl							zval	zval *	elements
ANR	3753233	DeclStmt									
ANR	3753234	Decl							_spl_fixedarray	_spl_fixedarray	spl_fixedarray
ANR	3753235	ClassDef	_spl_fixedarray_object	51:8:1806:2236							
ANR	3753236	DeclStmt									
ANR	3753237	Decl							spl_fixedarray	spl_fixedarray *	array
ANR	3753238	DeclStmt									
ANR	3753239	Decl							zend_function	zend_function *	fptr_offset_get
ANR	3753240	DeclStmt									
ANR	3753241	Decl							zend_function	zend_function *	fptr_offset_set
ANR	3753242	DeclStmt									
ANR	3753243	Decl							zend_function	zend_function *	fptr_offset_has
ANR	3753244	DeclStmt									
ANR	3753245	Decl							zend_function	zend_function *	fptr_offset_del
ANR	3753246	DeclStmt									
ANR	3753247	Decl							zend_function	zend_function *	fptr_count
ANR	3753248	DeclStmt									
ANR	3753249	Decl							int	int	current
ANR	3753250	DeclStmt									
ANR	3753251	Decl							int	int	flags
ANR	3753252	DeclStmt									
ANR	3753253	Decl							zend_class_entry	zend_class_entry *	ce_get_iterator
ANR	3753254	DeclStmt									
ANR	3753255	Decl							zend_object	zend_object	std
ANR	3753256	DeclStmt									
ANR	3753257	Decl							_spl_fixedarray_object	_spl_fixedarray_object	spl_fixedarray_object
ANR	3753258	ClassDef	_spl_fixedarray_it	65:8:2257:2346							
ANR	3753259	DeclStmt									
ANR	3753260	Decl							zend_user_iterator	zend_user_iterator	intern
ANR	3753261	DeclStmt									
ANR	3753262	Decl							_spl_fixedarray_it	_spl_fixedarray_it	spl_fixedarray_it
ANR	3753263	Function	spl_fixed_array_from_obj	76:0:2605:2786							
ANR	3753264	FunctionDef	spl_fixed_array_from_obj (zend_object * obj)		3753263	0					
ANR	3753265	CompoundStatement		76:90:2695:2786	3753263	0					
ANR	3753266	ReturnStatement	"return ( spl_fixedarray_object * ) ( ( char * ) ( obj ) - XtOffsetOf ( spl_fixedarray_object , std ) ) ;"	77:1:2698:2784	3753263	0	True				
ANR	3753267	CastExpression	"( spl_fixedarray_object * ) ( ( char * ) ( obj ) - XtOffsetOf ( spl_fixedarray_object , std ) )"		3753263	0					
ANR	3753268	CastTarget	spl_fixedarray_object *		3753263	0					
ANR	3753269	CastExpression	"( char * ) ( obj ) - XtOffsetOf ( spl_fixedarray_object , std )"		3753263	1					
ANR	3753270	CastTarget	char *		3753263	0					
ANR	3753271	CastExpression	"( obj ) - XtOffsetOf ( spl_fixedarray_object , std )"		3753263	1					
ANR	3753272	CastTarget	obj		3753263	0					
ANR	3753273	UnaryOperationExpression	"- XtOffsetOf ( spl_fixedarray_object , std )"		3753263	1					
ANR	3753274	UnaryOperator	-		3753263	0					
ANR	3753275	CallExpression	"XtOffsetOf ( spl_fixedarray_object , std )"		3753263	1					
ANR	3753276	Callee	XtOffsetOf		3753263	0					
ANR	3753277	Identifier	XtOffsetOf		3753263	0					
ANR	3753278	ArgumentList	spl_fixedarray_object		3753263	1					
ANR	3753279	Argument	spl_fixedarray_object		3753263	0					
ANR	3753280	Identifier	spl_fixedarray_object		3753263	0					
ANR	3753281	Argument	std		3753263	1					
ANR	3753282	Identifier	std		3753263	0					
ANR	3753283	ReturnType	static inline spl_fixedarray_object *		3753263	1					
ANR	3753284	Identifier	spl_fixed_array_from_obj		3753263	2					
ANR	3753285	ParameterList	zend_object * obj		3753263	3					
ANR	3753286	Parameter	zend_object * obj	76:62:2667:2682	3753263	0	True				
ANR	3753287	ParameterType	zend_object *		3753263	0					
ANR	3753288	Identifier	obj		3753263	1					
ANR	3753289	CFGEntryNode	ENTRY		3753263		True				
ANR	3753290	CFGExitNode	EXIT		3753263		True				
ANR	3753291	Symbol	std		3753263						
ANR	3753292	Symbol	spl_fixedarray_object		3753263						
ANR	3753293	Symbol	obj		3753263						
ANR	3753294	Symbol	XtOffsetOf		3753263						
ANR	3753295	Function	spl_fixedarray_init	83:0:2871:3160							
ANR	3753296	FunctionDef	"spl_fixedarray_init (spl_fixedarray * array , zend_long size)"		3753295	0					
ANR	3753297	CompoundStatement		84:0:2952:3160	3753295	0					
ANR	3753298	IfStatement	if ( size > 0 )		3753295	0					
ANR	3753299	Condition	size > 0	85:5:2959:2966	3753295	0	True				
ANR	3753300	RelationalExpression	size > 0		3753295	0		>			
ANR	3753301	Identifier	size		3753295	0					
ANR	3753302	PrimaryExpression	0		3753295	1					
ANR	3753303	CompoundStatement		2:15:16:16	3753295	1					
ANR	3753304	ExpressionStatement	array -> size = 0	86:2:2973:2988	3753295	0	True				
ANR	3753305	AssignmentExpression	array -> size = 0		3753295	0		=			
ANR	3753306	PtrMemberAccess	array -> size		3753295	0					
ANR	3753307	Identifier	array		3753295	0					
ANR	3753308	Identifier	size		3753295	1					
ANR	3753309	PrimaryExpression	0		3753295	1					
ANR	3753310	ExpressionStatement	"array -> elements = ecalloc ( size , sizeof ( zval ) )"	87:2:3033:3078	3753295	1	True				
ANR	3753311	AssignmentExpression	"array -> elements = ecalloc ( size , sizeof ( zval ) )"		3753295	0		=			
ANR	3753312	PtrMemberAccess	array -> elements		3753295	0					
ANR	3753313	Identifier	array		3753295	0					
ANR	3753314	Identifier	elements		3753295	1					
ANR	3753315	CallExpression	"ecalloc ( size , sizeof ( zval ) )"		3753295	1					
ANR	3753316	Callee	ecalloc		3753295	0					
ANR	3753317	Identifier	ecalloc		3753295	0					
ANR	3753318	ArgumentList	size		3753295	1					
ANR	3753319	Argument	size		3753295	0					
ANR	3753320	Identifier	size		3753295	0					
ANR	3753321	Argument	sizeof ( zval )		3753295	1					
ANR	3753322	SizeofExpression	sizeof ( zval )		3753295	0					
ANR	3753323	Sizeof	sizeof		3753295	0					
ANR	3753324	SizeofOperand	zval		3753295	1					
ANR	3753325	ExpressionStatement	array -> size = size	88:2:3082:3100	3753295	2	True				
ANR	3753326	AssignmentExpression	array -> size = size		3753295	0		=			
ANR	3753327	PtrMemberAccess	array -> size		3753295	0					
ANR	3753328	Identifier	array		3753295	0					
ANR	3753329	Identifier	size		3753295	1					
ANR	3753330	Identifier	size		3753295	1					
ANR	3753331	ElseStatement	else		3753295	0					
ANR	3753332	CompoundStatement		6:8:157:157	3753295	0					
ANR	3753333	ExpressionStatement	array -> elements = NULL	90:2:3114:3136	3753295	0	True				
ANR	3753334	AssignmentExpression	array -> elements = NULL		3753295	0		=			
ANR	3753335	PtrMemberAccess	array -> elements		3753295	0					
ANR	3753336	Identifier	array		3753295	0					
ANR	3753337	Identifier	elements		3753295	1					
ANR	3753338	Identifier	NULL		3753295	1					
ANR	3753339	ExpressionStatement	array -> size = 0	91:2:3140:3155	3753295	1	True				
ANR	3753340	AssignmentExpression	array -> size = 0		3753295	0		=			
ANR	3753341	PtrMemberAccess	array -> size		3753295	0					
ANR	3753342	Identifier	array		3753295	0					
ANR	3753343	Identifier	size		3753295	1					
ANR	3753344	PrimaryExpression	0		3753295	1					
ANR	3753345	ReturnType	static void		3753295	1					
ANR	3753346	Identifier	spl_fixedarray_init		3753295	2					
ANR	3753347	ParameterList	"spl_fixedarray * array , zend_long size"		3753295	3					
ANR	3753348	Parameter	spl_fixedarray * array	83:32:2903:2923	3753295	0	True				
ANR	3753349	ParameterType	spl_fixedarray *		3753295	0					
ANR	3753350	Identifier	array		3753295	1					
ANR	3753351	Parameter	zend_long size	83:55:2926:2939	3753295	1	True				
ANR	3753352	ParameterType	zend_long		3753295	0					
ANR	3753353	Identifier	size		3753295	1					
ANR	3753354	CFGEntryNode	ENTRY		3753295		True				
ANR	3753355	CFGExitNode	EXIT		3753295		True				
ANR	3753356	Symbol	array -> size		3753295						
ANR	3753357	Symbol	array -> elements		3753295						
ANR	3753358	Symbol	NULL		3753295						
ANR	3753359	Symbol	size		3753295						
ANR	3753360	Symbol	array		3753295						
ANR	3753361	Symbol	ecalloc		3753295						
ANR	3753362	Symbol	* array		3753295						
ANR	3753363	Function	spl_fixedarray_resize	96:0:3173:4075							
ANR	3753364	FunctionDef	"spl_fixedarray_resize (spl_fixedarray * array , zend_long size)"		3753363	0					
ANR	3753365	CompoundStatement		97:0:3256:4075	3753363	0					
ANR	3753366	IfStatement	if ( size == array -> size )		3753363	0					
ANR	3753367	Condition	size == array -> size	98:5:3263:3281	3753363	0	True				
ANR	3753368	EqualityExpression	size == array -> size		3753363	0		==			
ANR	3753369	Identifier	size		3753363	0					
ANR	3753370	PtrMemberAccess	array -> size		3753363	1					
ANR	3753371	Identifier	array		3753363	0					
ANR	3753372	Identifier	size		3753363	1					
ANR	3753373	CompoundStatement		2:26:27:27	3753363	1					
ANR	3753374	ReturnStatement	return ;	100:2:3310:3316	3753363	0	True				
ANR	3753375	IfStatement	if ( array -> size == 0 )		3753363	1					
ANR	3753376	Condition	array -> size == 0	104:5:3355:3370	3753363	0	True				
ANR	3753377	EqualityExpression	array -> size == 0		3753363	0		==			
ANR	3753378	PtrMemberAccess	array -> size		3753363	0					
ANR	3753379	Identifier	array		3753363	0					
ANR	3753380	Identifier	size		3753363	1					
ANR	3753381	PrimaryExpression	0		3753363	1					
ANR	3753382	CompoundStatement		8:23:116:116	3753363	1					
ANR	3753383	ExpressionStatement	"spl_fixedarray_init ( array , size )"	105:2:3377:3409	3753363	0	True				
ANR	3753384	CallExpression	"spl_fixedarray_init ( array , size )"		3753363	0					
ANR	3753385	Callee	spl_fixedarray_init		3753363	0					
ANR	3753386	Identifier	spl_fixedarray_init		3753363	0					
ANR	3753387	ArgumentList	array		3753363	1					
ANR	3753388	Argument	array		3753363	0					
ANR	3753389	Identifier	array		3753363	0					
ANR	3753390	Argument	size		3753363	1					
ANR	3753391	Identifier	size		3753363	0					
ANR	3753392	ReturnStatement	return ;	106:2:3413:3419	3753363	1	True				
ANR	3753393	IfStatement	if ( size == 0 )		3753363	2					
ANR	3753394	Condition	size == 0	110:5:3456:3464	3753363	0	True				
ANR	3753395	EqualityExpression	size == 0		3753363	0		==			
ANR	3753396	Identifier	size		3753363	0					
ANR	3753397	PrimaryExpression	0		3753363	1					
ANR	3753398	CompoundStatement		15:2:214:225	3753363	1					
ANR	3753399	IdentifierDeclStatement	zend_long i ;	111:2:3471:3482	3753363	0	True				
ANR	3753400	IdentifierDecl	i		3753363	0					
ANR	3753401	IdentifierDeclType	zend_long		3753363	0					
ANR	3753402	Identifier	i		3753363	1					
ANR	3753403	ForStatement	for ( i = 0 ; i < array -> size ; i ++ )		3753363	1					
ANR	3753404	ForInit	i = 0 ;	113:7:3492:3497	3753363	0	True				
ANR	3753405	AssignmentExpression	i = 0		3753363	0		=			
ANR	3753406	Identifier	i		3753363	0					
ANR	3753407	PrimaryExpression	0		3753363	1					
ANR	3753408	Condition	i < array -> size	113:14:3499:3513	3753363	1	True				
ANR	3753409	RelationalExpression	i < array -> size		3753363	0		<			
ANR	3753410	Identifier	i		3753363	0					
ANR	3753411	PtrMemberAccess	array -> size		3753363	1					
ANR	3753412	Identifier	array		3753363	0					
ANR	3753413	Identifier	size		3753363	1					
ANR	3753414	PostIncDecOperationExpression	i ++	113:31:3516:3518	3753363	2	True				
ANR	3753415	Identifier	i		3753363	0					
ANR	3753416	IncDec	++		3753363	1					
ANR	3753417	CompoundStatement		17:36:264:264	3753363	3					
ANR	3753418	ExpressionStatement	zval_ptr_dtor ( & ( array -> elements [ i ] ) )	114:3:3526:3562	3753363	0	True				
ANR	3753419	CallExpression	zval_ptr_dtor ( & ( array -> elements [ i ] ) )		3753363	0					
ANR	3753420	Callee	zval_ptr_dtor		3753363	0					
ANR	3753421	Identifier	zval_ptr_dtor		3753363	0					
ANR	3753422	ArgumentList	& ( array -> elements [ i ] )		3753363	1					
ANR	3753423	Argument	& ( array -> elements [ i ] )		3753363	0					
ANR	3753424	UnaryOperationExpression	& ( array -> elements [ i ] )		3753363	0					
ANR	3753425	UnaryOperator	&		3753363	0					
ANR	3753426	ArrayIndexing	array -> elements [ i ]		3753363	1					
ANR	3753427	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753428	Identifier	array		3753363	0					
ANR	3753429	Identifier	elements		3753363	1					
ANR	3753430	Identifier	i		3753363	1					
ANR	3753431	IfStatement	if ( array -> elements )		3753363	2					
ANR	3753432	Condition	array -> elements	117:6:3575:3589	3753363	0	True				
ANR	3753433	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753434	Identifier	array		3753363	0					
ANR	3753435	Identifier	elements		3753363	1					
ANR	3753436	CompoundStatement		21:23:335:335	3753363	1					
ANR	3753437	ExpressionStatement	efree ( array -> elements )	118:3:3597:3619	3753363	0	True				
ANR	3753438	CallExpression	efree ( array -> elements )		3753363	0					
ANR	3753439	Callee	efree		3753363	0					
ANR	3753440	Identifier	efree		3753363	0					
ANR	3753441	ArgumentList	array -> elements		3753363	1					
ANR	3753442	Argument	array -> elements		3753363	0					
ANR	3753443	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753444	Identifier	array		3753363	0					
ANR	3753445	Identifier	elements		3753363	1					
ANR	3753446	ExpressionStatement	array -> elements = NULL	119:3:3624:3646	3753363	1	True				
ANR	3753447	AssignmentExpression	array -> elements = NULL		3753363	0		=			
ANR	3753448	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753449	Identifier	array		3753363	0					
ANR	3753450	Identifier	elements		3753363	1					
ANR	3753451	Identifier	NULL		3753363	1					
ANR	3753452	ElseStatement	else		3753363	0					
ANR	3753453	IfStatement	if ( size > array -> size )		3753363	0					
ANR	3753454	Condition	size > array -> size	121:12:3664:3681	3753363	0	True				
ANR	3753455	RelationalExpression	size > array -> size		3753363	0		>			
ANR	3753456	Identifier	size		3753363	0					
ANR	3753457	PtrMemberAccess	array -> size		3753363	1					
ANR	3753458	Identifier	array		3753363	0					
ANR	3753459	Identifier	size		3753363	1					
ANR	3753460	CompoundStatement		25:32:427:427	3753363	1					
ANR	3753461	ExpressionStatement	"array -> elements = safe_erealloc ( array -> elements , size , sizeof ( zval ) , 0 )"	122:2:3688:3759	3753363	0	True				
ANR	3753462	AssignmentExpression	"array -> elements = safe_erealloc ( array -> elements , size , sizeof ( zval ) , 0 )"		3753363	0		=			
ANR	3753463	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753464	Identifier	array		3753363	0					
ANR	3753465	Identifier	elements		3753363	1					
ANR	3753466	CallExpression	"safe_erealloc ( array -> elements , size , sizeof ( zval ) , 0 )"		3753363	1					
ANR	3753467	Callee	safe_erealloc		3753363	0					
ANR	3753468	Identifier	safe_erealloc		3753363	0					
ANR	3753469	ArgumentList	array -> elements		3753363	1					
ANR	3753470	Argument	array -> elements		3753363	0					
ANR	3753471	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753472	Identifier	array		3753363	0					
ANR	3753473	Identifier	elements		3753363	1					
ANR	3753474	Argument	size		3753363	1					
ANR	3753475	Identifier	size		3753363	0					
ANR	3753476	Argument	sizeof ( zval )		3753363	2					
ANR	3753477	SizeofExpression	sizeof ( zval )		3753363	0					
ANR	3753478	Sizeof	sizeof		3753363	0					
ANR	3753479	SizeofOperand	zval		3753363	1					
ANR	3753480	Argument	0		3753363	3					
ANR	3753481	PrimaryExpression	0		3753363	0					
ANR	3753482	ExpressionStatement	"memset ( array -> elements + array -> size , '\\0' , sizeof ( zval ) * ( size - array -> size ) )"	123:2:3763:3843	3753363	1	True				
ANR	3753483	CallExpression	"memset ( array -> elements + array -> size , '\\0' , sizeof ( zval ) * ( size - array -> size ) )"		3753363	0					
ANR	3753484	Callee	memset		3753363	0					
ANR	3753485	Identifier	memset		3753363	0					
ANR	3753486	ArgumentList	array -> elements + array -> size		3753363	1					
ANR	3753487	Argument	array -> elements + array -> size		3753363	0					
ANR	3753488	AdditiveExpression	array -> elements + array -> size		3753363	0		+			
ANR	3753489	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753490	Identifier	array		3753363	0					
ANR	3753491	Identifier	elements		3753363	1					
ANR	3753492	PtrMemberAccess	array -> size		3753363	1					
ANR	3753493	Identifier	array		3753363	0					
ANR	3753494	Identifier	size		3753363	1					
ANR	3753495	Argument	'\\0'		3753363	1					
ANR	3753496	PrimaryExpression	'\\0'		3753363	0					
ANR	3753497	Argument	sizeof ( zval ) * ( size - array -> size )		3753363	2					
ANR	3753498	MultiplicativeExpression	sizeof ( zval ) * ( size - array -> size )		3753363	0		*			
ANR	3753499	SizeofExpression	sizeof ( zval )		3753363	0					
ANR	3753500	Sizeof	sizeof		3753363	0					
ANR	3753501	SizeofOperand	zval		3753363	1					
ANR	3753502	AdditiveExpression	size - array -> size		3753363	1		-			
ANR	3753503	Identifier	size		3753363	0					
ANR	3753504	PtrMemberAccess	array -> size		3753363	1					
ANR	3753505	Identifier	array		3753363	0					
ANR	3753506	Identifier	size		3753363	1					
ANR	3753507	ElseStatement	else		3753363	0					
ANR	3753508	CompoundStatement		29:2:625:636	3753363	0					
ANR	3753509	IdentifierDeclStatement	zend_long i ;	125:2:3882:3893	3753363	0	True				
ANR	3753510	IdentifierDecl	i		3753363	0					
ANR	3753511	IdentifierDeclType	zend_long		3753363	0					
ANR	3753512	Identifier	i		3753363	1					
ANR	3753513	ForStatement	for ( i = size ; i < array -> size ; i ++ )		3753363	1					
ANR	3753514	ForInit	i = size ;	127:7:3903:3911	3753363	0	True				
ANR	3753515	AssignmentExpression	i = size		3753363	0		=			
ANR	3753516	Identifier	i		3753363	0					
ANR	3753517	Identifier	size		3753363	1					
ANR	3753518	Condition	i < array -> size	127:17:3913:3927	3753363	1	True				
ANR	3753519	RelationalExpression	i < array -> size		3753363	0		<			
ANR	3753520	Identifier	i		3753363	0					
ANR	3753521	PtrMemberAccess	array -> size		3753363	1					
ANR	3753522	Identifier	array		3753363	0					
ANR	3753523	Identifier	size		3753363	1					
ANR	3753524	PostIncDecOperationExpression	i ++	127:34:3930:3932	3753363	2	True				
ANR	3753525	Identifier	i		3753363	0					
ANR	3753526	IncDec	++		3753363	1					
ANR	3753527	CompoundStatement		31:39:678:678	3753363	3					
ANR	3753528	ExpressionStatement	zval_ptr_dtor ( & ( array -> elements [ i ] ) )	128:3:3940:3976	3753363	0	True				
ANR	3753529	CallExpression	zval_ptr_dtor ( & ( array -> elements [ i ] ) )		3753363	0					
ANR	3753530	Callee	zval_ptr_dtor		3753363	0					
ANR	3753531	Identifier	zval_ptr_dtor		3753363	0					
ANR	3753532	ArgumentList	& ( array -> elements [ i ] )		3753363	1					
ANR	3753533	Argument	& ( array -> elements [ i ] )		3753363	0					
ANR	3753534	UnaryOperationExpression	& ( array -> elements [ i ] )		3753363	0					
ANR	3753535	UnaryOperator	&		3753363	0					
ANR	3753536	ArrayIndexing	array -> elements [ i ]		3753363	1					
ANR	3753537	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753538	Identifier	array		3753363	0					
ANR	3753539	Identifier	elements		3753363	1					
ANR	3753540	Identifier	i		3753363	1					
ANR	3753541	ExpressionStatement	"array -> elements = erealloc ( array -> elements , sizeof ( zval ) * size )"	130:2:3984:4048	3753363	2	True				
ANR	3753542	AssignmentExpression	"array -> elements = erealloc ( array -> elements , sizeof ( zval ) * size )"		3753363	0		=			
ANR	3753543	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753544	Identifier	array		3753363	0					
ANR	3753545	Identifier	elements		3753363	1					
ANR	3753546	CallExpression	"erealloc ( array -> elements , sizeof ( zval ) * size )"		3753363	1					
ANR	3753547	Callee	erealloc		3753363	0					
ANR	3753548	Identifier	erealloc		3753363	0					
ANR	3753549	ArgumentList	array -> elements		3753363	1					
ANR	3753550	Argument	array -> elements		3753363	0					
ANR	3753551	PtrMemberAccess	array -> elements		3753363	0					
ANR	3753552	Identifier	array		3753363	0					
ANR	3753553	Identifier	elements		3753363	1					
ANR	3753554	Argument	sizeof ( zval ) * size		3753363	1					
ANR	3753555	MultiplicativeExpression	sizeof ( zval ) * size		3753363	0		*			
ANR	3753556	SizeofExpression	sizeof ( zval )		3753363	0					
ANR	3753557	Sizeof	sizeof		3753363	0					
ANR	3753558	SizeofOperand	zval		3753363	1					
ANR	3753559	Identifier	size		3753363	1					
ANR	3753560	ExpressionStatement	array -> size = size	133:1:4055:4073	3753363	3	True				
ANR	3753561	AssignmentExpression	array -> size = size		3753363	0		=			
ANR	3753562	PtrMemberAccess	array -> size		3753363	0					
ANR	3753563	Identifier	array		3753363	0					
ANR	3753564	Identifier	size		3753363	1					
ANR	3753565	Identifier	size		3753363	1					
ANR	3753566	ReturnType	static void		3753363	1					
ANR	3753567	Identifier	spl_fixedarray_resize		3753363	2					
ANR	3753568	ParameterList	"spl_fixedarray * array , zend_long size"		3753363	3					
ANR	3753569	Parameter	spl_fixedarray * array	96:34:3207:3227	3753363	0	True				
ANR	3753570	ParameterType	spl_fixedarray *		3753363	0					
ANR	3753571	Identifier	array		3753363	1					
ANR	3753572	Parameter	zend_long size	96:57:3230:3243	3753363	1	True				
ANR	3753573	ParameterType	zend_long		3753363	0					
ANR	3753574	Identifier	size		3753363	1					
ANR	3753575	CFGEntryNode	ENTRY		3753363		True				
ANR	3753576	CFGExitNode	EXIT		3753363		True				
ANR	3753577	Symbol	array -> size		3753363						
ANR	3753578	Symbol	array -> elements		3753363						
ANR	3753579	Symbol	NULL		3753363						
ANR	3753580	Symbol	size		3753363						
ANR	3753581	Symbol	array		3753363						
ANR	3753582	Symbol	safe_erealloc		3753363						
ANR	3753583	Symbol	i		3753363						
ANR	3753584	Symbol	erealloc		3753363						
ANR	3753585	Symbol	* array		3753363						
ANR	3753586	Function	spl_fixedarray_copy	137:0:4088:4272							
ANR	3753587	FunctionDef	"spl_fixedarray_copy (spl_fixedarray * to , spl_fixedarray * from)"		3753586	0					
ANR	3753588	CompoundStatement		138:0:4172:4272	3753586	0					
ANR	3753589	IdentifierDeclStatement	int i ;	139:1:4175:4180	3753586	0	True				
ANR	3753590	IdentifierDecl	i		3753586	0					
ANR	3753591	IdentifierDeclType	int		3753586	0					
ANR	3753592	Identifier	i		3753586	1					
ANR	3753593	ForStatement	for ( i = 0 ; i < from -> size ; i ++ )		3753586	1					
ANR	3753594	ForInit	i = 0 ;	140:6:4188:4193	3753586	0	True				
ANR	3753595	AssignmentExpression	i = 0		3753586	0		=			
ANR	3753596	Identifier	i		3753586	0					
ANR	3753597	PrimaryExpression	0		3753586	1					
ANR	3753598	Condition	i < from -> size	140:13:4195:4208	3753586	1	True				
ANR	3753599	RelationalExpression	i < from -> size		3753586	0		<			
ANR	3753600	Identifier	i		3753586	0					
ANR	3753601	PtrMemberAccess	from -> size		3753586	1					
ANR	3753602	Identifier	from		3753586	0					
ANR	3753603	Identifier	size		3753586	1					
ANR	3753604	PostIncDecOperationExpression	i ++	140:29:4211:4213	3753586	2	True				
ANR	3753605	Identifier	i		3753586	0					
ANR	3753606	IncDec	++		3753586	1					
ANR	3753607	CompoundStatement		3:34:43:43	3753586	3					
ANR	3753608	ExpressionStatement	"ZVAL_COPY ( & to -> elements [ i ] , & from -> elements [ i ] )"	141:2:4220:4267	3753586	0	True				
ANR	3753609	CallExpression	"ZVAL_COPY ( & to -> elements [ i ] , & from -> elements [ i ] )"		3753586	0					
ANR	3753610	Callee	ZVAL_COPY		3753586	0					
ANR	3753611	Identifier	ZVAL_COPY		3753586	0					
ANR	3753612	ArgumentList	& to -> elements [ i ]		3753586	1					
ANR	3753613	Argument	& to -> elements [ i ]		3753586	0					
ANR	3753614	UnaryOperationExpression	& to -> elements [ i ]		3753586	0					
ANR	3753615	UnaryOperator	&		3753586	0					
ANR	3753616	ArrayIndexing	to -> elements [ i ]		3753586	1					
ANR	3753617	PtrMemberAccess	to -> elements		3753586	0					
ANR	3753618	Identifier	to		3753586	0					
ANR	3753619	Identifier	elements		3753586	1					
ANR	3753620	Identifier	i		3753586	1					
ANR	3753621	Argument	& from -> elements [ i ]		3753586	1					
ANR	3753622	UnaryOperationExpression	& from -> elements [ i ]		3753586	0					
ANR	3753623	UnaryOperator	&		3753586	0					
ANR	3753624	ArrayIndexing	from -> elements [ i ]		3753586	1					
ANR	3753625	PtrMemberAccess	from -> elements		3753586	0					
ANR	3753626	Identifier	from		3753586	0					
ANR	3753627	Identifier	elements		3753586	1					
ANR	3753628	Identifier	i		3753586	1					
ANR	3753629	ReturnType	static void		3753586	1					
ANR	3753630	Identifier	spl_fixedarray_copy		3753586	2					
ANR	3753631	ParameterList	"spl_fixedarray * to , spl_fixedarray * from"		3753586	3					
ANR	3753632	Parameter	spl_fixedarray * to	137:32:4120:4137	3753586	0	True				
ANR	3753633	ParameterType	spl_fixedarray *		3753586	0					
ANR	3753634	Identifier	to		3753586	1					
ANR	3753635	Parameter	spl_fixedarray * from	137:52:4140:4159	3753586	1	True				
ANR	3753636	ParameterType	spl_fixedarray *		3753586	0					
ANR	3753637	Identifier	from		3753586	1					
ANR	3753638	CFGEntryNode	ENTRY		3753586		True				
ANR	3753639	CFGExitNode	EXIT		3753586		True				
ANR	3753640	Symbol	* to		3753586						
ANR	3753641	Symbol	from -> size		3753586						
ANR	3753642	Symbol	from -> elements		3753586						
ANR	3753643	Symbol	i		3753586						
ANR	3753644	Symbol	from		3753586						
ANR	3753645	Symbol	to		3753586						
ANR	3753646	Symbol	* from		3753586						
ANR	3753647	Symbol	to -> elements		3753586						
ANR	3753648	Function	spl_fixedarray_object_get_gc	146:0:4285:4628							
ANR	3753649	FunctionDef	"spl_fixedarray_object_get_gc (zval * obj , zval * * table , int * n)"		3753648	0					
ANR	3753650	CompoundStatement		147:0:4376:4628	3753648	0					
ANR	3753651	IdentifierDeclStatement	spl_fixedarray_object * intern = Z_SPLFIXEDARRAY_P ( obj ) ;	148:1:4379:4434	3753648	0	True				
ANR	3753652	IdentifierDecl	* intern = Z_SPLFIXEDARRAY_P ( obj )		3753648	0					
ANR	3753653	IdentifierDeclType	spl_fixedarray_object *		3753648	0					
ANR	3753654	Identifier	intern		3753648	1					
ANR	3753655	AssignmentExpression	* intern = Z_SPLFIXEDARRAY_P ( obj )		3753648	2		=			
ANR	3753656	Identifier	intern		3753648	0					
ANR	3753657	CallExpression	Z_SPLFIXEDARRAY_P ( obj )		3753648	1					
ANR	3753658	Callee	Z_SPLFIXEDARRAY_P		3753648	0					
ANR	3753659	Identifier	Z_SPLFIXEDARRAY_P		3753648	0					
ANR	3753660	ArgumentList	obj		3753648	1					
ANR	3753661	Argument	obj		3753648	0					
ANR	3753662	Identifier	obj		3753648	0					
ANR	3753663	IdentifierDeclStatement	HashTable * ht = zend_std_get_properties ( obj ) ;	149:1:4437:4481	3753648	1	True				
ANR	3753664	IdentifierDecl	* ht = zend_std_get_properties ( obj )		3753648	0					
ANR	3753665	IdentifierDeclType	HashTable *		3753648	0					
ANR	3753666	Identifier	ht		3753648	1					
ANR	3753667	AssignmentExpression	* ht = zend_std_get_properties ( obj )		3753648	2		=			
ANR	3753668	Identifier	ht		3753648	0					
ANR	3753669	CallExpression	zend_std_get_properties ( obj )		3753648	1					
ANR	3753670	Callee	zend_std_get_properties		3753648	0					
ANR	3753671	Identifier	zend_std_get_properties		3753648	0					
ANR	3753672	ArgumentList	obj		3753648	1					
ANR	3753673	Argument	obj		3753648	0					
ANR	3753674	Identifier	obj		3753648	0					
ANR	3753675	IfStatement	if ( intern -> array )		3753648	2					
ANR	3753676	Condition	intern -> array	151:5:4489:4501	3753648	0	True				
ANR	3753677	PtrMemberAccess	intern -> array		3753648	0					
ANR	3753678	Identifier	intern		3753648	0					
ANR	3753679	Identifier	array		3753648	1					
ANR	3753680	CompoundStatement		5:20:127:127	3753648	1					
ANR	3753681	ExpressionStatement	* table = intern -> array -> elements	152:2:4508:4540	3753648	0	True				
ANR	3753682	AssignmentExpression	* table = intern -> array -> elements		3753648	0		=			
ANR	3753683	UnaryOperationExpression	* table		3753648	0					
ANR	3753684	UnaryOperator	*		3753648	0					
ANR	3753685	Identifier	table		3753648	1					
ANR	3753686	PtrMemberAccess	intern -> array -> elements		3753648	1					
ANR	3753687	PtrMemberAccess	intern -> array		3753648	0					
ANR	3753688	Identifier	intern		3753648	0					
ANR	3753689	Identifier	array		3753648	1					
ANR	3753690	Identifier	elements		3753648	1					
ANR	3753691	ExpressionStatement	* n = ( int ) intern -> array -> size	153:2:4544:4573	3753648	1	True				
ANR	3753692	AssignmentExpression	* n = ( int ) intern -> array -> size		3753648	0		=			
ANR	3753693	UnaryOperationExpression	* n		3753648	0					
ANR	3753694	UnaryOperator	*		3753648	0					
ANR	3753695	Identifier	n		3753648	1					
ANR	3753696	CastExpression	( int ) intern -> array -> size		3753648	1					
ANR	3753697	CastTarget	int		3753648	0					
ANR	3753698	PtrMemberAccess	intern -> array -> size		3753648	1					
ANR	3753699	PtrMemberAccess	intern -> array		3753648	0					
ANR	3753700	Identifier	intern		3753648	0					
ANR	3753701	Identifier	array		3753648	1					
ANR	3753702	Identifier	size		3753648	1					
ANR	3753703	ElseStatement	else		3753648	0					
ANR	3753704	CompoundStatement		8:8:206:206	3753648	0					
ANR	3753705	ExpressionStatement	* table = NULL	155:2:4587:4600	3753648	0	True				
ANR	3753706	AssignmentExpression	* table = NULL		3753648	0		=			
ANR	3753707	UnaryOperationExpression	* table		3753648	0					
ANR	3753708	UnaryOperator	*		3753648	0					
ANR	3753709	Identifier	table		3753648	1					
ANR	3753710	Identifier	NULL		3753648	1					
ANR	3753711	ExpressionStatement	* n = 0	156:2:4604:4610	3753648	1	True				
ANR	3753712	AssignmentExpression	* n = 0		3753648	0		=			
ANR	3753713	UnaryOperationExpression	* n		3753648	0					
ANR	3753714	UnaryOperator	*		3753648	0					
ANR	3753715	Identifier	n		3753648	1					
ANR	3753716	PrimaryExpression	0		3753648	1					
ANR	3753717	ReturnStatement	return ht ;	159:1:4617:4626	3753648	3	True				
ANR	3753718	Identifier	ht		3753648	0					
ANR	3753719	ReturnType	static HashTable *		3753648	1					
ANR	3753720	Identifier	spl_fixedarray_object_get_gc		3753648	2					
ANR	3753721	ParameterList	"zval * obj , zval * * table , int * n"		3753648	3					
ANR	3753722	Parameter	zval * obj	146:47:4332:4340	3753648	0	True				
ANR	3753723	ParameterType	zval *		3753648	0					
ANR	3753724	Identifier	obj		3753648	1					
ANR	3753725	Parameter	zval * * table	146:58:4343:4354	3753648	1	True				
ANR	3753726	ParameterType	zval * *		3753648	0					
ANR	3753727	Identifier	table		3753648	1					
ANR	3753728	Parameter	int * n	146:72:4357:4362	3753648	2	True				
ANR	3753729	ParameterType	int *		3753648	0					
ANR	3753730	Identifier	n		3753648	1					
ANR	3753731	CFGEntryNode	ENTRY		3753648		True				
ANR	3753732	CFGExitNode	EXIT		3753648		True				
ANR	3753733	Symbol	intern -> array -> elements		3753648						
ANR	3753734	Symbol	Z_SPLFIXEDARRAY_P		3753648						
ANR	3753735	Symbol	* intern		3753648						
ANR	3753736	Symbol	intern -> array -> size		3753648						
ANR	3753737	Symbol	intern		3753648						
ANR	3753738	Symbol	NULL		3753648						
ANR	3753739	Symbol	zend_std_get_properties		3753648						
ANR	3753740	Symbol	* table		3753648						
ANR	3753741	Symbol	intern -> array		3753648						
ANR	3753742	Symbol	ht		3753648						
ANR	3753743	Symbol	n		3753648						
ANR	3753744	Symbol	* intern -> array		3753648						
ANR	3753745	Symbol	obj		3753648						
ANR	3753746	Symbol	* n		3753648						
ANR	3753747	Symbol	* * intern		3753648						
ANR	3753748	Symbol	table		3753648						
ANR	3753749	Function	spl_fixedarray_object_get_properties	163:0:4642:5390							
ANR	3753750	FunctionDef	spl_fixedarray_object_get_properties (zval * obj)		3753749	0					
ANR	3753751	CompoundStatement		164:0:4719:5390	3753749	0					
ANR	3753752	IdentifierDeclStatement	spl_fixedarray_object * intern = Z_SPLFIXEDARRAY_P ( obj ) ;	165:1:4722:4777	3753749	0	True				
ANR	3753753	IdentifierDecl	* intern = Z_SPLFIXEDARRAY_P ( obj )		3753749	0					
ANR	3753754	IdentifierDeclType	spl_fixedarray_object *		3753749	0					
ANR	3753755	Identifier	intern		3753749	1					
ANR	3753756	AssignmentExpression	* intern = Z_SPLFIXEDARRAY_P ( obj )		3753749	2		=			
ANR	3753757	Identifier	intern		3753749	0					
ANR	3753758	CallExpression	Z_SPLFIXEDARRAY_P ( obj )		3753749	1					
ANR	3753759	Callee	Z_SPLFIXEDARRAY_P		3753749	0					
ANR	3753760	Identifier	Z_SPLFIXEDARRAY_P		3753749	0					
ANR	3753761	ArgumentList	obj		3753749	1					
ANR	3753762	Argument	obj		3753749	0					
ANR	3753763	Identifier	obj		3753749	0					
ANR	3753764	IdentifierDeclStatement	HashTable * ht = zend_std_get_properties ( obj ) ;	166:1:4780:4824	3753749	1	True				
ANR	3753765	IdentifierDecl	* ht = zend_std_get_properties ( obj )		3753749	0					
ANR	3753766	IdentifierDeclType	HashTable *		3753749	0					
ANR	3753767	Identifier	ht		3753749	1					
ANR	3753768	AssignmentExpression	* ht = zend_std_get_properties ( obj )		3753749	2		=			
ANR	3753769	Identifier	ht		3753749	0					
ANR	3753770	CallExpression	zend_std_get_properties ( obj )		3753749	1					
ANR	3753771	Callee	zend_std_get_properties		3753749	0					
ANR	3753772	Identifier	zend_std_get_properties		3753749	0					
ANR	3753773	ArgumentList	obj		3753749	1					
ANR	3753774	Argument	obj		3753749	0					
ANR	3753775	Identifier	obj		3753749	0					
ANR	3753776	IdentifierDeclStatement	zend_long i = 0 ;	167:1:4827:4843	3753749	2	True				
ANR	3753777	IdentifierDecl	i = 0		3753749	0					
ANR	3753778	IdentifierDeclType	zend_long		3753749	0					
ANR	3753779	Identifier	i		3753749	1					
ANR	3753780	AssignmentExpression	i = 0		3753749	2		=			
ANR	3753781	Identifier	i		3753749	0					
ANR	3753782	PrimaryExpression	0		3753749	1					
ANR	3753783	IfStatement	if ( intern -> array )		3753749	3					
ANR	3753784	Condition	intern -> array	169:5:4851:4863	3753749	0	True				
ANR	3753785	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753786	Identifier	intern		3753749	0					
ANR	3753787	Identifier	array		3753749	1					
ANR	3753788	CompoundStatement		7:2:150:190	3753749	1					
ANR	3753789	IdentifierDeclStatement	zend_long j = zend_hash_num_elements ( ht ) ;	170:2:4870:4910	3753749	0	True				
ANR	3753790	IdentifierDecl	j = zend_hash_num_elements ( ht )		3753749	0					
ANR	3753791	IdentifierDeclType	zend_long		3753749	0					
ANR	3753792	Identifier	j		3753749	1					
ANR	3753793	AssignmentExpression	j = zend_hash_num_elements ( ht )		3753749	2		=			
ANR	3753794	Identifier	j		3753749	0					
ANR	3753795	CallExpression	zend_hash_num_elements ( ht )		3753749	1					
ANR	3753796	Callee	zend_hash_num_elements		3753749	0					
ANR	3753797	Identifier	zend_hash_num_elements		3753749	0					
ANR	3753798	ArgumentList	ht		3753749	1					
ANR	3753799	Argument	ht		3753749	0					
ANR	3753800	Identifier	ht		3753749	0					
ANR	3753801	ForStatement	for ( i = 0 ; i < intern -> array -> size ; i ++ )		3753749	1					
ANR	3753802	ForInit	i = 0 ;	172:7:4920:4925	3753749	0	True				
ANR	3753803	AssignmentExpression	i = 0		3753749	0		=			
ANR	3753804	Identifier	i		3753749	0					
ANR	3753805	PrimaryExpression	0		3753749	1					
ANR	3753806	Condition	i < intern -> array -> size	172:14:4927:4949	3753749	1	True				
ANR	3753807	RelationalExpression	i < intern -> array -> size		3753749	0		<			
ANR	3753808	Identifier	i		3753749	0					
ANR	3753809	PtrMemberAccess	intern -> array -> size		3753749	1					
ANR	3753810	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753811	Identifier	intern		3753749	0					
ANR	3753812	Identifier	array		3753749	1					
ANR	3753813	Identifier	size		3753749	1					
ANR	3753814	PostIncDecOperationExpression	i ++	172:39:4952:4954	3753749	2	True				
ANR	3753815	Identifier	i		3753749	0					
ANR	3753816	IncDec	++		3753749	1					
ANR	3753817	CompoundStatement		9:44:237:237	3753749	3					
ANR	3753818	IfStatement	if ( ! Z_ISUNDEF ( intern -> array -> elements [ i ] ) )		3753749	0					
ANR	3753819	Condition	! Z_ISUNDEF ( intern -> array -> elements [ i ] )	173:7:4966:5003	3753749	0	True				
ANR	3753820	UnaryOperationExpression	! Z_ISUNDEF ( intern -> array -> elements [ i ] )		3753749	0					
ANR	3753821	UnaryOperator	!		3753749	0					
ANR	3753822	CallExpression	Z_ISUNDEF ( intern -> array -> elements [ i ] )		3753749	1					
ANR	3753823	Callee	Z_ISUNDEF		3753749	0					
ANR	3753824	Identifier	Z_ISUNDEF		3753749	0					
ANR	3753825	ArgumentList	intern -> array -> elements [ i ]		3753749	1					
ANR	3753826	Argument	intern -> array -> elements [ i ]		3753749	0					
ANR	3753827	ArrayIndexing	intern -> array -> elements [ i ]		3753749	0					
ANR	3753828	PtrMemberAccess	intern -> array -> elements		3753749	0					
ANR	3753829	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753830	Identifier	intern		3753749	0					
ANR	3753831	Identifier	array		3753749	1					
ANR	3753832	Identifier	elements		3753749	1					
ANR	3753833	Identifier	i		3753749	1					
ANR	3753834	CompoundStatement		10:47:286:286	3753749	1					
ANR	3753835	ExpressionStatement	"zend_hash_index_update ( ht , i , & intern -> array -> elements [ i ] )"	174:4:5012:5070	3753749	0	True				
ANR	3753836	CallExpression	"zend_hash_index_update ( ht , i , & intern -> array -> elements [ i ] )"		3753749	0					
ANR	3753837	Callee	zend_hash_index_update		3753749	0					
ANR	3753838	Identifier	zend_hash_index_update		3753749	0					
ANR	3753839	ArgumentList	ht		3753749	1					
ANR	3753840	Argument	ht		3753749	0					
ANR	3753841	Identifier	ht		3753749	0					
ANR	3753842	Argument	i		3753749	1					
ANR	3753843	Identifier	i		3753749	0					
ANR	3753844	Argument	& intern -> array -> elements [ i ]		3753749	2					
ANR	3753845	UnaryOperationExpression	& intern -> array -> elements [ i ]		3753749	0					
ANR	3753846	UnaryOperator	&		3753749	0					
ANR	3753847	ArrayIndexing	intern -> array -> elements [ i ]		3753749	1					
ANR	3753848	PtrMemberAccess	intern -> array -> elements		3753749	0					
ANR	3753849	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753850	Identifier	intern		3753749	0					
ANR	3753851	Identifier	array		3753749	1					
ANR	3753852	Identifier	elements		3753749	1					
ANR	3753853	Identifier	i		3753749	1					
ANR	3753854	IfStatement	if ( Z_REFCOUNTED ( intern -> array -> elements [ i ] ) )		3753749	1					
ANR	3753855	Condition	Z_REFCOUNTED ( intern -> array -> elements [ i ] )	175:8:5080:5119	3753749	0	True				
ANR	3753856	CallExpression	Z_REFCOUNTED ( intern -> array -> elements [ i ] )		3753749	0					
ANR	3753857	Callee	Z_REFCOUNTED		3753749	0					
ANR	3753858	Identifier	Z_REFCOUNTED		3753749	0					
ANR	3753859	ArgumentList	intern -> array -> elements [ i ]		3753749	1					
ANR	3753860	Argument	intern -> array -> elements [ i ]		3753749	0					
ANR	3753861	ArrayIndexing	intern -> array -> elements [ i ]		3753749	0					
ANR	3753862	PtrMemberAccess	intern -> array -> elements		3753749	0					
ANR	3753863	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753864	Identifier	intern		3753749	0					
ANR	3753865	Identifier	array		3753749	1					
ANR	3753866	Identifier	elements		3753749	1					
ANR	3753867	Identifier	i		3753749	1					
ANR	3753868	CompoundStatement		12:49:401:401	3753749	1					
ANR	3753869	ExpressionStatement	Z_ADDREF ( intern -> array -> elements [ i ] )	176:5:5128:5164	3753749	0	True				
ANR	3753870	CallExpression	Z_ADDREF ( intern -> array -> elements [ i ] )		3753749	0					
ANR	3753871	Callee	Z_ADDREF		3753749	0					
ANR	3753872	Identifier	Z_ADDREF		3753749	0					
ANR	3753873	ArgumentList	intern -> array -> elements [ i ]		3753749	1					
ANR	3753874	Argument	intern -> array -> elements [ i ]		3753749	0					
ANR	3753875	ArrayIndexing	intern -> array -> elements [ i ]		3753749	0					
ANR	3753876	PtrMemberAccess	intern -> array -> elements		3753749	0					
ANR	3753877	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753878	Identifier	intern		3753749	0					
ANR	3753879	Identifier	array		3753749	1					
ANR	3753880	Identifier	elements		3753749	1					
ANR	3753881	Identifier	i		3753749	1					
ANR	3753882	ElseStatement	else		3753749	0					
ANR	3753883	CompoundStatement		15:10:462:462	3753749	0					
ANR	3753884	ExpressionStatement	"zend_hash_index_update ( ht , i , & EG ( uninitialized_zval ) )"	179:4:5188:5242	3753749	0	True				
ANR	3753885	CallExpression	"zend_hash_index_update ( ht , i , & EG ( uninitialized_zval ) )"		3753749	0					
ANR	3753886	Callee	zend_hash_index_update		3753749	0					
ANR	3753887	Identifier	zend_hash_index_update		3753749	0					
ANR	3753888	ArgumentList	ht		3753749	1					
ANR	3753889	Argument	ht		3753749	0					
ANR	3753890	Identifier	ht		3753749	0					
ANR	3753891	Argument	i		3753749	1					
ANR	3753892	Identifier	i		3753749	0					
ANR	3753893	Argument	& EG ( uninitialized_zval )		3753749	2					
ANR	3753894	UnaryOperationExpression	& EG ( uninitialized_zval )		3753749	0					
ANR	3753895	UnaryOperator	&		3753749	0					
ANR	3753896	CallExpression	EG ( uninitialized_zval )		3753749	1					
ANR	3753897	Callee	EG		3753749	0					
ANR	3753898	Identifier	EG		3753749	0					
ANR	3753899	ArgumentList	uninitialized_zval		3753749	1					
ANR	3753900	Argument	uninitialized_zval		3753749	0					
ANR	3753901	Identifier	uninitialized_zval		3753749	0					
ANR	3753902	IfStatement	if ( j > intern -> array -> size )		3753749	2					
ANR	3753903	Condition	j > intern -> array -> size	182:6:5259:5281	3753749	0	True				
ANR	3753904	RelationalExpression	j > intern -> array -> size		3753749	0		>			
ANR	3753905	Identifier	j		3753749	0					
ANR	3753906	PtrMemberAccess	intern -> array -> size		3753749	1					
ANR	3753907	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753908	Identifier	intern		3753749	0					
ANR	3753909	Identifier	array		3753749	1					
ANR	3753910	Identifier	size		3753749	1					
ANR	3753911	CompoundStatement		19:31:564:564	3753749	1					
ANR	3753912	ForStatement	for ( i = intern -> array -> size ; i < j ; ++ i )		3753749	0					
ANR	3753913	ForInit	i = intern -> array -> size ;	183:8:5294:5317	3753749	0	True				
ANR	3753914	AssignmentExpression	i = intern -> array -> size		3753749	0		=			
ANR	3753915	Identifier	i		3753749	0					
ANR	3753916	PtrMemberAccess	intern -> array -> size		3753749	1					
ANR	3753917	PtrMemberAccess	intern -> array		3753749	0					
ANR	3753918	Identifier	intern		3753749	0					
ANR	3753919	Identifier	array		3753749	1					
ANR	3753920	Identifier	size		3753749	1					
ANR	3753921	Condition	i < j	183:33:5319:5323	3753749	1	True				
ANR	3753922	RelationalExpression	i < j		3753749	0		<			
ANR	3753923	Identifier	i		3753749	0					
ANR	3753924	Identifier	j		3753749	1					
ANR	3753925	UnaryExpression	++ i	183:40:5326:5328	3753749	2	True				
ANR	3753926	IncDec	++		3753749	0					
ANR	3753927	Identifier	i		3753749	1					
ANR	3753928	CompoundStatement		20:45:611:611	3753749	3					
ANR	3753929	ExpressionStatement	"zend_hash_index_del ( ht , i )"	184:4:5337:5363	3753749	0	True				
ANR	3753930	CallExpression	"zend_hash_index_del ( ht , i )"		3753749	0					
ANR	3753931	Callee	zend_hash_index_del		3753749	0					
ANR	3753932	Identifier	zend_hash_index_del		3753749	0					
ANR	3753933	ArgumentList	ht		3753749	1					
ANR	3753934	Argument	ht		3753749	0					
ANR	3753935	Identifier	ht		3753749	0					
ANR	3753936	Argument	i		3753749	1					
ANR	3753937	Identifier	i		3753749	0					
ANR	3753938	ReturnStatement	return ht ;	189:1:5379:5388	3753749	4	True				
ANR	3753939	Identifier	ht		3753749	0					
ANR	3753940	ReturnType	static HashTable *		3753749	1					
ANR	3753941	Identifier	spl_fixedarray_object_get_properties		3753749	2					
ANR	3753942	ParameterList	zval * obj		3753749	3					
ANR	3753943	Parameter	zval * obj	163:55:4697:4705	3753749	0	True				
ANR	3753944	ParameterType	zval *		3753749	0					
ANR	3753945	Identifier	obj		3753749	1					
ANR	3753946	CFGEntryNode	ENTRY		3753749		True				
ANR	3753947	CFGExitNode	EXIT		3753749		True				
ANR	3753948	Symbol	intern -> array -> elements		3753749						
ANR	3753949	Symbol	uninitialized_zval		3753749						
ANR	3753950	Symbol	Z_SPLFIXEDARRAY_P		3753749						
ANR	3753951	Symbol	* intern		3753749						
ANR	3753952	Symbol	intern -> array -> size		3753749						
ANR	3753953	Symbol	intern		3753749						
ANR	3753954	Symbol	zend_hash_num_elements		3753749						
ANR	3753955	Symbol	zend_std_get_properties		3753749						
ANR	3753956	Symbol	Z_ISUNDEF		3753749						
ANR	3753957	Symbol	i		3753749						
ANR	3753958	Symbol	j		3753749						
ANR	3753959	Symbol	intern -> array		3753749						
ANR	3753960	Symbol	* * * intern		3753749						
ANR	3753961	Symbol	ht		3753749						
ANR	3753962	Symbol	& EG		3753749						
ANR	3753963	Symbol	* intern -> array		3753749						
ANR	3753964	Symbol	* * intern -> array		3753749						
ANR	3753965	Symbol	* intern -> array -> elements		3753749						
ANR	3753966	Symbol	* i		3753749						
ANR	3753967	Symbol	obj		3753749						
ANR	3753968	Symbol	* * intern		3753749						
ANR	3753969	Symbol	Z_REFCOUNTED		3753749						
ANR	3753970	Function	spl_fixedarray_object_free_storage	193:0:5404:5852							
ANR	3753971	FunctionDef	spl_fixedarray_object_free_storage (zend_object * object)		3753970	0					
ANR	3753972	CompoundStatement		194:0:5482:5852	3753970	0					
ANR	3753973	IdentifierDeclStatement	spl_fixedarray_object * intern = spl_fixed_array_from_obj ( object ) ;	195:1:5485:5549	3753970	0	True				
ANR	3753974	IdentifierDecl	* intern = spl_fixed_array_from_obj ( object )		3753970	0					
ANR	3753975	IdentifierDeclType	spl_fixedarray_object *		3753970	0					
ANR	3753976	Identifier	intern		3753970	1					
ANR	3753977	AssignmentExpression	* intern = spl_fixed_array_from_obj ( object )		3753970	2		=			
ANR	3753978	Identifier	intern		3753970	0					
ANR	3753979	CallExpression	spl_fixed_array_from_obj ( object )		3753970	1					
ANR	3753980	Callee	spl_fixed_array_from_obj		3753970	0					
ANR	3753981	Identifier	spl_fixed_array_from_obj		3753970	0					
ANR	3753982	ArgumentList	object		3753970	1					
ANR	3753983	Argument	object		3753970	0					
ANR	3753984	Identifier	object		3753970	0					
ANR	3753985	IdentifierDeclStatement	zend_long i ;	196:1:5552:5563	3753970	1	True				
ANR	3753986	IdentifierDecl	i		3753970	0					
ANR	3753987	IdentifierDeclType	zend_long		3753970	0					
ANR	3753988	Identifier	i		3753970	1					
ANR	3753989	IfStatement	if ( intern -> array )		3753970	2					
ANR	3753990	Condition	intern -> array	198:5:5571:5583	3753970	0	True				
ANR	3753991	PtrMemberAccess	intern -> array		3753970	0					
ANR	3753992	Identifier	intern		3753970	0					
ANR	3753993	Identifier	array		3753970	1					
ANR	3753994	CompoundStatement		5:20:103:103	3753970	1					
ANR	3753995	ForStatement	for ( i = 0 ; i < intern -> array -> size ; i ++ )		3753970	0					
ANR	3753996	ForInit	i = 0 ;	199:7:5595:5600	3753970	0	True				
ANR	3753997	AssignmentExpression	i = 0		3753970	0		=			
ANR	3753998	Identifier	i		3753970	0					
ANR	3753999	PrimaryExpression	0		3753970	1					
ANR	3754000	Condition	i < intern -> array -> size	199:14:5602:5624	3753970	1	True				
ANR	3754001	RelationalExpression	i < intern -> array -> size		3753970	0		<			
ANR	3754002	Identifier	i		3753970	0					
ANR	3754003	PtrMemberAccess	intern -> array -> size		3753970	1					
ANR	3754004	PtrMemberAccess	intern -> array		3753970	0					
ANR	3754005	Identifier	intern		3753970	0					
ANR	3754006	Identifier	array		3753970	1					
ANR	3754007	Identifier	size		3753970	1					
ANR	3754008	PostIncDecOperationExpression	i ++	199:39:5627:5629	3753970	2	True				
ANR	3754009	Identifier	i		3753970	0					
ANR	3754010	IncDec	++		3753970	1					
ANR	3754011	CompoundStatement		6:44:149:149	3753970	3					
ANR	3754012	ExpressionStatement	zval_ptr_dtor ( & ( intern -> array -> elements [ i ] ) )	200:3:5637:5681	3753970	0	True				
ANR	3754013	CallExpression	zval_ptr_dtor ( & ( intern -> array -> elements [ i ] ) )		3753970	0					
ANR	3754014	Callee	zval_ptr_dtor		3753970	0					
ANR	3754015	Identifier	zval_ptr_dtor		3753970	0					
ANR	3754016	ArgumentList	& ( intern -> array -> elements [ i ] )		3753970	1					
ANR	3754017	Argument	& ( intern -> array -> elements [ i ] )		3753970	0					
ANR	3754018	UnaryOperationExpression	& ( intern -> array -> elements [ i ] )		3753970	0					
ANR	3754019	UnaryOperator	&		3753970	0					
ANR	3754020	ArrayIndexing	intern -> array -> elements [ i ]		3753970	1					
ANR	3754021	PtrMemberAccess	intern -> array -> elements		3753970	0					
ANR	3754022	PtrMemberAccess	intern -> array		3753970	0					
ANR	3754023	Identifier	intern		3753970	0					
ANR	3754024	Identifier	array		3753970	1					
ANR	3754025	Identifier	elements		3753970	1					
ANR	3754026	Identifier	i		3753970	1					
ANR	3754027	IfStatement	if ( intern -> array -> size > 0 && intern -> array -> elements )		3753970	1					
ANR	3754028	Condition	intern -> array -> size > 0 && intern -> array -> elements	203:6:5694:5743	3753970	0	True				
ANR	3754029	AndExpression	intern -> array -> size > 0 && intern -> array -> elements		3753970	0		&&			
ANR	3754030	RelationalExpression	intern -> array -> size > 0		3753970	0		>			
ANR	3754031	PtrMemberAccess	intern -> array -> size		3753970	0					
ANR	3754032	PtrMemberAccess	intern -> array		3753970	0					
ANR	3754033	Identifier	intern		3753970	0					
ANR	3754034	Identifier	array		3753970	1					
ANR	3754035	Identifier	size		3753970	1					
ANR	3754036	PrimaryExpression	0		3753970	1					
ANR	3754037	PtrMemberAccess	intern -> array -> elements		3753970	1					
ANR	3754038	PtrMemberAccess	intern -> array		3753970	0					
ANR	3754039	Identifier	intern		3753970	0					
ANR	3754040	Identifier	array		3753970	1					
ANR	3754041	Identifier	elements		3753970	1					
ANR	3754042	CompoundStatement		10:58:263:263	3753970	1					
ANR	3754043	ExpressionStatement	efree ( intern -> array -> elements )	204:3:5751:5781	3753970	0	True				
ANR	3754044	CallExpression	efree ( intern -> array -> elements )		3753970	0					
ANR	3754045	Callee	efree		3753970	0					
ANR	3754046	Identifier	efree		3753970	0					
ANR	3754047	ArgumentList	intern -> array -> elements		3753970	1					
ANR	3754048	Argument	intern -> array -> elements		3753970	0					
ANR	3754049	PtrMemberAccess	intern -> array -> elements		3753970	0					
ANR	3754050	PtrMemberAccess	intern -> array		3753970	0					
ANR	3754051	Identifier	intern		3753970	0					
ANR	3754052	Identifier	array		3753970	1					
ANR	3754053	Identifier	elements		3753970	1					
ANR	3754054	ExpressionStatement	efree ( intern -> array )	206:2:5789:5809	3753970	2	True				
ANR	3754055	CallExpression	efree ( intern -> array )		3753970	0					
ANR	3754056	Callee	efree		3753970	0					
ANR	3754057	Identifier	efree		3753970	0					
ANR	3754058	ArgumentList	intern -> array		3753970	1					
ANR	3754059	Argument	intern -> array		3753970	0					
ANR	3754060	PtrMemberAccess	intern -> array		3753970	0					
ANR	3754061	Identifier	intern		3753970	0					
ANR	3754062	Identifier	array		3753970	1					
ANR	3754063	ExpressionStatement	zend_object_std_dtor ( & intern -> std )	209:1:5816:5850	3753970	3	True				
ANR	3754064	CallExpression	zend_object_std_dtor ( & intern -> std )		3753970	0					
ANR	3754065	Callee	zend_object_std_dtor		3753970	0					
ANR	3754066	Identifier	zend_object_std_dtor		3753970	0					
ANR	3754067	ArgumentList	& intern -> std		3753970	1					
ANR	3754068	Argument	& intern -> std		3753970	0					
ANR	3754069	UnaryOperationExpression	& intern -> std		3753970	0					
ANR	3754070	UnaryOperator	&		3753970	0					
ANR	3754071	PtrMemberAccess	intern -> std		3753970	1					
ANR	3754072	Identifier	intern		3753970	0					
ANR	3754073	Identifier	std		3753970	1					
ANR	3754074	ReturnType	static void		3753970	1					
ANR	3754075	Identifier	spl_fixedarray_object_free_storage		3753970	2					
ANR	3754076	ParameterList	zend_object * object		3753970	3					
ANR	3754077	Parameter	zend_object * object	193:47:5451:5469	3753970	0	True				
ANR	3754078	ParameterType	zend_object *		3753970	0					
ANR	3754079	Identifier	object		3753970	1					
ANR	3754080	CFGEntryNode	ENTRY		3753970		True				
ANR	3754081	CFGExitNode	EXIT		3753970		True				
ANR	3754082	Symbol	intern -> array -> elements		3753970						
ANR	3754083	Symbol	* intern		3753970						
ANR	3754084	Symbol	intern -> array -> size		3753970						
ANR	3754085	Symbol	intern		3753970						
ANR	3754086	Symbol	spl_fixed_array_from_obj		3753970						
ANR	3754087	Symbol	& intern -> std		3753970						
ANR	3754088	Symbol	i		3753970						
ANR	3754089	Symbol	* * intern		3753970						
ANR	3754090	Symbol	intern -> array		3753970						
ANR	3754091	Symbol	object		3753970						
ANR	3754092	Symbol	* intern -> array		3753970						
ANR	3754093	DeclStmt									
ANR	3754094	Decl							zend_object_iterator	"zend_object_iterator * ( zend_class_entry * ce , zval * object , int by_ref )"	spl_fixedarray_get_iterator
ANR	3754095	Function	spl_fixedarray_object_new_ex	215:0:5965:9744							
ANR	3754096	FunctionDef	"spl_fixedarray_object_new_ex (zend_class_entry * class_type , zval * orig , int clone_orig)"		3754095	0					
ANR	3754097	CompoundStatement		216:0:6082:9744	3754095	0					
ANR	3754098	IdentifierDeclStatement	spl_fixedarray_object * intern ;	217:1:6085:6114	3754095	0	True				
ANR	3754099	IdentifierDecl	* intern		3754095	0					
ANR	3754100	IdentifierDeclType	spl_fixedarray_object *		3754095	0					
ANR	3754101	Identifier	intern		3754095	1					
ANR	3754102	IdentifierDeclStatement	zend_class_entry * parent = class_type ;	218:1:6117:6158	3754095	1	True				
ANR	3754103	IdentifierDecl	* parent = class_type		3754095	0					
ANR	3754104	IdentifierDeclType	zend_class_entry *		3754095	0					
ANR	3754105	Identifier	parent		3754095	1					
ANR	3754106	AssignmentExpression	* parent = class_type		3754095	2		=			
ANR	3754107	Identifier	class_type		3754095	0					
ANR	3754108	Identifier	class_type		3754095	1					
ANR	3754109	IdentifierDeclStatement	int inherited = 0 ;	219:1:6161:6196	3754095	2	True				
ANR	3754110	IdentifierDecl	inherited = 0		3754095	0					
ANR	3754111	IdentifierDeclType	int		3754095	0					
ANR	3754112	Identifier	inherited		3754095	1					
ANR	3754113	AssignmentExpression	inherited = 0		3754095	2		=			
ANR	3754114	Identifier	inherited		3754095	0					
ANR	3754115	PrimaryExpression	0		3754095	1					
ANR	3754116	ExpressionStatement	"intern = ecalloc ( 1 , sizeof ( spl_fixedarray_object ) + zend_object_properties_size ( parent ) )"	221:1:6200:6288	3754095	3	True				
ANR	3754117	AssignmentExpression	"intern = ecalloc ( 1 , sizeof ( spl_fixedarray_object ) + zend_object_properties_size ( parent ) )"		3754095	0		=			
ANR	3754118	Identifier	intern		3754095	0					
ANR	3754119	CallExpression	"ecalloc ( 1 , sizeof ( spl_fixedarray_object ) + zend_object_properties_size ( parent ) )"		3754095	1					
ANR	3754120	Callee	ecalloc		3754095	0					
ANR	3754121	Identifier	ecalloc		3754095	0					
ANR	3754122	ArgumentList	1		3754095	1					
ANR	3754123	Argument	1		3754095	0					
ANR	3754124	PrimaryExpression	1		3754095	0					
ANR	3754125	Argument	sizeof ( spl_fixedarray_object ) + zend_object_properties_size ( parent )		3754095	1					
ANR	3754126	AdditiveExpression	sizeof ( spl_fixedarray_object ) + zend_object_properties_size ( parent )		3754095	0		+			
ANR	3754127	SizeofExpression	sizeof ( spl_fixedarray_object )		3754095	0					
ANR	3754128	Sizeof	sizeof		3754095	0					
ANR	3754129	SizeofOperand	spl_fixedarray_object		3754095	1					
ANR	3754130	CallExpression	zend_object_properties_size ( parent )		3754095	1					
ANR	3754131	Callee	zend_object_properties_size		3754095	0					
ANR	3754132	Identifier	zend_object_properties_size		3754095	0					
ANR	3754133	ArgumentList	parent		3754095	1					
ANR	3754134	Argument	parent		3754095	0					
ANR	3754135	Identifier	parent		3754095	0					
ANR	3754136	ExpressionStatement	"zend_object_std_init ( & intern -> std , class_type )"	223:1:6292:6338	3754095	4	True				
ANR	3754137	CallExpression	"zend_object_std_init ( & intern -> std , class_type )"		3754095	0					
ANR	3754138	Callee	zend_object_std_init		3754095	0					
ANR	3754139	Identifier	zend_object_std_init		3754095	0					
ANR	3754140	ArgumentList	& intern -> std		3754095	1					
ANR	3754141	Argument	& intern -> std		3754095	0					
ANR	3754142	UnaryOperationExpression	& intern -> std		3754095	0					
ANR	3754143	UnaryOperator	&		3754095	0					
ANR	3754144	PtrMemberAccess	intern -> std		3754095	1					
ANR	3754145	Identifier	intern		3754095	0					
ANR	3754146	Identifier	std		3754095	1					
ANR	3754147	Argument	class_type		3754095	1					
ANR	3754148	Identifier	class_type		3754095	0					
ANR	3754149	ExpressionStatement	"object_properties_init ( & intern -> std , class_type )"	224:1:6341:6389	3754095	5	True				
ANR	3754150	CallExpression	"object_properties_init ( & intern -> std , class_type )"		3754095	0					
ANR	3754151	Callee	object_properties_init		3754095	0					
ANR	3754152	Identifier	object_properties_init		3754095	0					
ANR	3754153	ArgumentList	& intern -> std		3754095	1					
ANR	3754154	Argument	& intern -> std		3754095	0					
ANR	3754155	UnaryOperationExpression	& intern -> std		3754095	0					
ANR	3754156	UnaryOperator	&		3754095	0					
ANR	3754157	PtrMemberAccess	intern -> std		3754095	1					
ANR	3754158	Identifier	intern		3754095	0					
ANR	3754159	Identifier	std		3754095	1					
ANR	3754160	Argument	class_type		3754095	1					
ANR	3754161	Identifier	class_type		3754095	0					
ANR	3754162	ExpressionStatement	intern -> current = 0	226:1:6393:6412	3754095	6	True				
ANR	3754163	AssignmentExpression	intern -> current = 0		3754095	0		=			
ANR	3754164	PtrMemberAccess	intern -> current		3754095	0					
ANR	3754165	Identifier	intern		3754095	0					
ANR	3754166	Identifier	current		3754095	1					
ANR	3754167	PrimaryExpression	0		3754095	1					
ANR	3754168	ExpressionStatement	intern -> flags = 0	227:1:6415:6432	3754095	7	True				
ANR	3754169	AssignmentExpression	intern -> flags = 0		3754095	0		=			
ANR	3754170	PtrMemberAccess	intern -> flags		3754095	0					
ANR	3754171	Identifier	intern		3754095	0					
ANR	3754172	Identifier	flags		3754095	1					
ANR	3754173	PrimaryExpression	0		3754095	1					
ANR	3754174	IfStatement	if ( orig && clone_orig )		3754095	8					
ANR	3754175	Condition	orig && clone_orig	229:5:6440:6457	3754095	0	True				
ANR	3754176	AndExpression	orig && clone_orig		3754095	0		&&			
ANR	3754177	Identifier	orig		3754095	0					
ANR	3754178	Identifier	clone_orig		3754095	1					
ANR	3754179	CompoundStatement		15:2:381:435	3754095	1					
ANR	3754180	IdentifierDeclStatement	spl_fixedarray_object * other = Z_SPLFIXEDARRAY_P ( orig ) ;	230:2:6464:6518	3754095	0	True				
ANR	3754181	IdentifierDecl	* other = Z_SPLFIXEDARRAY_P ( orig )		3754095	0					
ANR	3754182	IdentifierDeclType	spl_fixedarray_object *		3754095	0					
ANR	3754183	Identifier	other		3754095	1					
ANR	3754184	AssignmentExpression	* other = Z_SPLFIXEDARRAY_P ( orig )		3754095	2		=			
ANR	3754185	Identifier	other		3754095	0					
ANR	3754186	CallExpression	Z_SPLFIXEDARRAY_P ( orig )		3754095	1					
ANR	3754187	Callee	Z_SPLFIXEDARRAY_P		3754095	0					
ANR	3754188	Identifier	Z_SPLFIXEDARRAY_P		3754095	0					
ANR	3754189	ArgumentList	orig		3754095	1					
ANR	3754190	Argument	orig		3754095	0					
ANR	3754191	Identifier	orig		3754095	0					
ANR	3754192	ExpressionStatement	intern -> ce_get_iterator = other -> ce_get_iterator	231:2:6522:6570	3754095	1	True				
ANR	3754193	AssignmentExpression	intern -> ce_get_iterator = other -> ce_get_iterator		3754095	0		=			
ANR	3754194	PtrMemberAccess	intern -> ce_get_iterator		3754095	0					
ANR	3754195	Identifier	intern		3754095	0					
ANR	3754196	Identifier	ce_get_iterator		3754095	1					
ANR	3754197	PtrMemberAccess	other -> ce_get_iterator		3754095	1					
ANR	3754198	Identifier	other		3754095	0					
ANR	3754199	Identifier	ce_get_iterator		3754095	1					
ANR	3754200	IfStatement	if ( ! other -> array )		3754095	2					
ANR	3754201	Condition	! other -> array	232:6:6578:6590	3754095	0	True				
ANR	3754202	UnaryOperationExpression	! other -> array		3754095	0					
ANR	3754203	UnaryOperator	!		3754095	0					
ANR	3754204	PtrMemberAccess	other -> array		3754095	1					
ANR	3754205	Identifier	other		3754095	0					
ANR	3754206	Identifier	array		3754095	1					
ANR	3754207	CompoundStatement		17:21:510:510	3754095	1					
ANR	3754208	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""The instance wasn't initialized properly"" , 0 )"	234:3:6665:6757	3754095	0	True				
ANR	3754209	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""The instance wasn't initialized properly"" , 0 )"		3754095	0					
ANR	3754210	Callee	zend_throw_exception		3754095	0					
ANR	3754211	Identifier	zend_throw_exception		3754095	0					
ANR	3754212	ArgumentList	spl_ce_RuntimeException		3754095	1					
ANR	3754213	Argument	spl_ce_RuntimeException		3754095	0					
ANR	3754214	Identifier	spl_ce_RuntimeException		3754095	0					
ANR	3754215	Argument	"""The instance wasn't initialized properly"""		3754095	1					
ANR	3754216	PrimaryExpression	"""The instance wasn't initialized properly"""		3754095	0					
ANR	3754217	Argument	0		3754095	2					
ANR	3754218	PrimaryExpression	0		3754095	0					
ANR	3754219	ElseStatement	else		3754095	0					
ANR	3754220	CompoundStatement		20:9:685:685	3754095	0					
ANR	3754221	ExpressionStatement	intern -> array = emalloc ( sizeof ( spl_fixedarray ) )	236:3:6773:6820	3754095	0	True				
ANR	3754222	AssignmentExpression	intern -> array = emalloc ( sizeof ( spl_fixedarray ) )		3754095	0		=			
ANR	3754223	PtrMemberAccess	intern -> array		3754095	0					
ANR	3754224	Identifier	intern		3754095	0					
ANR	3754225	Identifier	array		3754095	1					
ANR	3754226	CallExpression	emalloc ( sizeof ( spl_fixedarray ) )		3754095	1					
ANR	3754227	Callee	emalloc		3754095	0					
ANR	3754228	Identifier	emalloc		3754095	0					
ANR	3754229	ArgumentList	sizeof ( spl_fixedarray )		3754095	1					
ANR	3754230	Argument	sizeof ( spl_fixedarray )		3754095	0					
ANR	3754231	SizeofExpression	sizeof ( spl_fixedarray )		3754095	0					
ANR	3754232	Sizeof	sizeof		3754095	0					
ANR	3754233	SizeofOperand	spl_fixedarray		3754095	1					
ANR	3754234	ExpressionStatement	"spl_fixedarray_init ( intern -> array , other -> array -> size )"	237:3:6825:6879	3754095	1	True				
ANR	3754235	CallExpression	"spl_fixedarray_init ( intern -> array , other -> array -> size )"		3754095	0					
ANR	3754236	Callee	spl_fixedarray_init		3754095	0					
ANR	3754237	Identifier	spl_fixedarray_init		3754095	0					
ANR	3754238	ArgumentList	intern -> array		3754095	1					
ANR	3754239	Argument	intern -> array		3754095	0					
ANR	3754240	PtrMemberAccess	intern -> array		3754095	0					
ANR	3754241	Identifier	intern		3754095	0					
ANR	3754242	Identifier	array		3754095	1					
ANR	3754243	Argument	other -> array -> size		3754095	1					
ANR	3754244	PtrMemberAccess	other -> array -> size		3754095	0					
ANR	3754245	PtrMemberAccess	other -> array		3754095	0					
ANR	3754246	Identifier	other		3754095	0					
ANR	3754247	Identifier	array		3754095	1					
ANR	3754248	Identifier	size		3754095	1					
ANR	3754249	ExpressionStatement	"spl_fixedarray_copy ( intern -> array , other -> array )"	238:3:6884:6932	3754095	2	True				
ANR	3754250	CallExpression	"spl_fixedarray_copy ( intern -> array , other -> array )"		3754095	0					
ANR	3754251	Callee	spl_fixedarray_copy		3754095	0					
ANR	3754252	Identifier	spl_fixedarray_copy		3754095	0					
ANR	3754253	ArgumentList	intern -> array		3754095	1					
ANR	3754254	Argument	intern -> array		3754095	0					
ANR	3754255	PtrMemberAccess	intern -> array		3754095	0					
ANR	3754256	Identifier	intern		3754095	0					
ANR	3754257	Identifier	array		3754095	1					
ANR	3754258	Argument	other -> array		3754095	1					
ANR	3754259	PtrMemberAccess	other -> array		3754095	0					
ANR	3754260	Identifier	other		3754095	0					
ANR	3754261	Identifier	array		3754095	1					
ANR	3754262	WhileStatement	while ( parent )		3754095	9					
ANR	3754263	Condition	parent	242:8:6950:6955	3754095	0	True				
ANR	3754264	Identifier	parent		3754095	0					
ANR	3754265	CompoundStatement		27:16:875:875	3754095	1					
ANR	3754266	IfStatement	if ( parent == spl_ce_SplFixedArray )		3754095	0					
ANR	3754267	Condition	parent == spl_ce_SplFixedArray	243:6:6966:6995	3754095	0	True				
ANR	3754268	EqualityExpression	parent == spl_ce_SplFixedArray		3754095	0		==			
ANR	3754269	Identifier	parent		3754095	0					
ANR	3754270	Identifier	spl_ce_SplFixedArray		3754095	1					
ANR	3754271	CompoundStatement		28:38:915:915	3754095	1					
ANR	3754272	ExpressionStatement	intern -> std . handlers = & spl_handler_SplFixedArray	244:3:7003:7052	3754095	0	True				
ANR	3754273	AssignmentExpression	intern -> std . handlers = & spl_handler_SplFixedArray		3754095	0		=			
ANR	3754274	MemberAccess	intern -> std . handlers		3754095	0					
ANR	3754275	PtrMemberAccess	intern -> std		3754095	0					
ANR	3754276	Identifier	intern		3754095	0					
ANR	3754277	Identifier	std		3754095	1					
ANR	3754278	Identifier	handlers		3754095	1					
ANR	3754279	UnaryOperationExpression	& spl_handler_SplFixedArray		3754095	1					
ANR	3754280	UnaryOperator	&		3754095	0					
ANR	3754281	Identifier	spl_handler_SplFixedArray		3754095	1					
ANR	3754282	ExpressionStatement	class_type -> get_iterator = spl_fixedarray_get_iterator	245:3:7057:7111	3754095	1	True				
ANR	3754283	AssignmentExpression	class_type -> get_iterator = spl_fixedarray_get_iterator		3754095	0		=			
ANR	3754284	PtrMemberAccess	class_type -> get_iterator		3754095	0					
ANR	3754285	Identifier	class_type		3754095	0					
ANR	3754286	Identifier	get_iterator		3754095	1					
ANR	3754287	Identifier	spl_fixedarray_get_iterator		3754095	1					
ANR	3754288	BreakStatement	break ;	246:3:7116:7121	3754095	2	True				
ANR	3754289	ExpressionStatement	parent = parent -> parent	249:2:7130:7153	3754095	1	True				
ANR	3754290	AssignmentExpression	parent = parent -> parent		3754095	0		=			
ANR	3754291	Identifier	parent		3754095	0					
ANR	3754292	PtrMemberAccess	parent -> parent		3754095	1					
ANR	3754293	Identifier	parent		3754095	0					
ANR	3754294	Identifier	parent		3754095	1					
ANR	3754295	ExpressionStatement	inherited = 1	250:2:7157:7170	3754095	2	True				
ANR	3754296	AssignmentExpression	inherited = 1		3754095	0		=			
ANR	3754297	Identifier	inherited		3754095	0					
ANR	3754298	PrimaryExpression	1		3754095	1					
ANR	3754299	IfStatement	if ( ! parent )		3754095	10					
ANR	3754300	Condition	! parent	253:5:7181:7187	3754095	0	True				
ANR	3754301	UnaryOperationExpression	! parent		3754095	0					
ANR	3754302	UnaryOperator	!		3754095	0					
ANR	3754303	Identifier	parent		3754095	1					
ANR	3754304	CompoundStatement		38:14:1107:1107	3754095	1					
ANR	3754305	ExpressionStatement	"php_error_docref ( NULL , E_COMPILE_ERROR , ""Internal compiler error, Class is not child of SplFixedArray"" )"	254:2:7223:7326	3754095	0	True				
ANR	3754306	CallExpression	"php_error_docref ( NULL , E_COMPILE_ERROR , ""Internal compiler error, Class is not child of SplFixedArray"" )"		3754095	0					
ANR	3754307	Callee	php_error_docref		3754095	0					
ANR	3754308	Identifier	php_error_docref		3754095	0					
ANR	3754309	ArgumentList	NULL		3754095	1					
ANR	3754310	Argument	NULL		3754095	0					
ANR	3754311	Identifier	NULL		3754095	0					
ANR	3754312	Argument	E_COMPILE_ERROR		3754095	1					
ANR	3754313	Identifier	E_COMPILE_ERROR		3754095	0					
ANR	3754314	Argument	"""Internal compiler error, Class is not child of SplFixedArray"""		3754095	2					
ANR	3754315	PrimaryExpression	"""Internal compiler error, Class is not child of SplFixedArray"""		3754095	0					
ANR	3754316	IfStatement	if ( ! class_type -> iterator_funcs . zf_current )		3754095	11					
ANR	3754317	Condition	! class_type -> iterator_funcs . zf_current	257:5:7337:7374	3754095	0	True				
ANR	3754318	UnaryOperationExpression	! class_type -> iterator_funcs . zf_current		3754095	0					
ANR	3754319	UnaryOperator	!		3754095	0					
ANR	3754320	MemberAccess	class_type -> iterator_funcs . zf_current		3754095	1					
ANR	3754321	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754322	Identifier	class_type		3754095	0					
ANR	3754323	Identifier	iterator_funcs		3754095	1					
ANR	3754324	Identifier	zf_current		3754095	1					
ANR	3754325	CompoundStatement		42:45:1294:1294	3754095	1					
ANR	3754326	ExpressionStatement	"class_type -> iterator_funcs . zf_rewind = zend_hash_str_find_ptr ( & class_type -> function_table , ""rewind"" , sizeof ( ""rewind"" ) - 1 )"	258:2:7381:7503	3754095	0	True				
ANR	3754327	AssignmentExpression	"class_type -> iterator_funcs . zf_rewind = zend_hash_str_find_ptr ( & class_type -> function_table , ""rewind"" , sizeof ( ""rewind"" ) - 1 )"		3754095	0		=			
ANR	3754328	MemberAccess	class_type -> iterator_funcs . zf_rewind		3754095	0					
ANR	3754329	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754330	Identifier	class_type		3754095	0					
ANR	3754331	Identifier	iterator_funcs		3754095	1					
ANR	3754332	Identifier	zf_rewind		3754095	1					
ANR	3754333	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""rewind"" , sizeof ( ""rewind"" ) - 1 )"		3754095	1					
ANR	3754334	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754335	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754336	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754337	Argument	& class_type -> function_table		3754095	0					
ANR	3754338	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754339	UnaryOperator	&		3754095	0					
ANR	3754340	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754341	Identifier	class_type		3754095	0					
ANR	3754342	Identifier	function_table		3754095	1					
ANR	3754343	Argument	"""rewind"""		3754095	1					
ANR	3754344	PrimaryExpression	"""rewind"""		3754095	0					
ANR	3754345	Argument	"sizeof ( ""rewind"" ) - 1"		3754095	2					
ANR	3754346	AdditiveExpression	"sizeof ( ""rewind"" ) - 1"		3754095	0		-			
ANR	3754347	SizeofExpression	"sizeof ( ""rewind"" )"		3754095	0					
ANR	3754348	Sizeof	sizeof		3754095	0					
ANR	3754349	PrimaryExpression	"""rewind"""		3754095	1					
ANR	3754350	PrimaryExpression	1		3754095	1					
ANR	3754351	ExpressionStatement	"class_type -> iterator_funcs . zf_valid = zend_hash_str_find_ptr ( & class_type -> function_table , ""valid"" , sizeof ( ""valid"" ) - 1 )"	259:2:7507:7626	3754095	1	True				
ANR	3754352	AssignmentExpression	"class_type -> iterator_funcs . zf_valid = zend_hash_str_find_ptr ( & class_type -> function_table , ""valid"" , sizeof ( ""valid"" ) - 1 )"		3754095	0		=			
ANR	3754353	MemberAccess	class_type -> iterator_funcs . zf_valid		3754095	0					
ANR	3754354	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754355	Identifier	class_type		3754095	0					
ANR	3754356	Identifier	iterator_funcs		3754095	1					
ANR	3754357	Identifier	zf_valid		3754095	1					
ANR	3754358	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""valid"" , sizeof ( ""valid"" ) - 1 )"		3754095	1					
ANR	3754359	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754360	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754361	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754362	Argument	& class_type -> function_table		3754095	0					
ANR	3754363	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754364	UnaryOperator	&		3754095	0					
ANR	3754365	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754366	Identifier	class_type		3754095	0					
ANR	3754367	Identifier	function_table		3754095	1					
ANR	3754368	Argument	"""valid"""		3754095	1					
ANR	3754369	PrimaryExpression	"""valid"""		3754095	0					
ANR	3754370	Argument	"sizeof ( ""valid"" ) - 1"		3754095	2					
ANR	3754371	AdditiveExpression	"sizeof ( ""valid"" ) - 1"		3754095	0		-			
ANR	3754372	SizeofExpression	"sizeof ( ""valid"" )"		3754095	0					
ANR	3754373	Sizeof	sizeof		3754095	0					
ANR	3754374	PrimaryExpression	"""valid"""		3754095	1					
ANR	3754375	PrimaryExpression	1		3754095	1					
ANR	3754376	ExpressionStatement	"class_type -> iterator_funcs . zf_key = zend_hash_str_find_ptr ( & class_type -> function_table , ""key"" , sizeof ( ""key"" ) - 1 )"	260:2:7630:7743	3754095	2	True				
ANR	3754377	AssignmentExpression	"class_type -> iterator_funcs . zf_key = zend_hash_str_find_ptr ( & class_type -> function_table , ""key"" , sizeof ( ""key"" ) - 1 )"		3754095	0		=			
ANR	3754378	MemberAccess	class_type -> iterator_funcs . zf_key		3754095	0					
ANR	3754379	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754380	Identifier	class_type		3754095	0					
ANR	3754381	Identifier	iterator_funcs		3754095	1					
ANR	3754382	Identifier	zf_key		3754095	1					
ANR	3754383	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""key"" , sizeof ( ""key"" ) - 1 )"		3754095	1					
ANR	3754384	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754385	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754386	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754387	Argument	& class_type -> function_table		3754095	0					
ANR	3754388	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754389	UnaryOperator	&		3754095	0					
ANR	3754390	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754391	Identifier	class_type		3754095	0					
ANR	3754392	Identifier	function_table		3754095	1					
ANR	3754393	Argument	"""key"""		3754095	1					
ANR	3754394	PrimaryExpression	"""key"""		3754095	0					
ANR	3754395	Argument	"sizeof ( ""key"" ) - 1"		3754095	2					
ANR	3754396	AdditiveExpression	"sizeof ( ""key"" ) - 1"		3754095	0		-			
ANR	3754397	SizeofExpression	"sizeof ( ""key"" )"		3754095	0					
ANR	3754398	Sizeof	sizeof		3754095	0					
ANR	3754399	PrimaryExpression	"""key"""		3754095	1					
ANR	3754400	PrimaryExpression	1		3754095	1					
ANR	3754401	ExpressionStatement	"class_type -> iterator_funcs . zf_current = zend_hash_str_find_ptr ( & class_type -> function_table , ""current"" , sizeof ( ""current"" ) - 1 )"	261:2:7747:7872	3754095	3	True				
ANR	3754402	AssignmentExpression	"class_type -> iterator_funcs . zf_current = zend_hash_str_find_ptr ( & class_type -> function_table , ""current"" , sizeof ( ""current"" ) - 1 )"		3754095	0		=			
ANR	3754403	MemberAccess	class_type -> iterator_funcs . zf_current		3754095	0					
ANR	3754404	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754405	Identifier	class_type		3754095	0					
ANR	3754406	Identifier	iterator_funcs		3754095	1					
ANR	3754407	Identifier	zf_current		3754095	1					
ANR	3754408	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""current"" , sizeof ( ""current"" ) - 1 )"		3754095	1					
ANR	3754409	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754410	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754411	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754412	Argument	& class_type -> function_table		3754095	0					
ANR	3754413	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754414	UnaryOperator	&		3754095	0					
ANR	3754415	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754416	Identifier	class_type		3754095	0					
ANR	3754417	Identifier	function_table		3754095	1					
ANR	3754418	Argument	"""current"""		3754095	1					
ANR	3754419	PrimaryExpression	"""current"""		3754095	0					
ANR	3754420	Argument	"sizeof ( ""current"" ) - 1"		3754095	2					
ANR	3754421	AdditiveExpression	"sizeof ( ""current"" ) - 1"		3754095	0		-			
ANR	3754422	SizeofExpression	"sizeof ( ""current"" )"		3754095	0					
ANR	3754423	Sizeof	sizeof		3754095	0					
ANR	3754424	PrimaryExpression	"""current"""		3754095	1					
ANR	3754425	PrimaryExpression	1		3754095	1					
ANR	3754426	ExpressionStatement	"class_type -> iterator_funcs . zf_next = zend_hash_str_find_ptr ( & class_type -> function_table , ""next"" , sizeof ( ""next"" ) - 1 )"	262:2:7876:7992	3754095	4	True				
ANR	3754427	AssignmentExpression	"class_type -> iterator_funcs . zf_next = zend_hash_str_find_ptr ( & class_type -> function_table , ""next"" , sizeof ( ""next"" ) - 1 )"		3754095	0		=			
ANR	3754428	MemberAccess	class_type -> iterator_funcs . zf_next		3754095	0					
ANR	3754429	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754430	Identifier	class_type		3754095	0					
ANR	3754431	Identifier	iterator_funcs		3754095	1					
ANR	3754432	Identifier	zf_next		3754095	1					
ANR	3754433	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""next"" , sizeof ( ""next"" ) - 1 )"		3754095	1					
ANR	3754434	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754435	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754436	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754437	Argument	& class_type -> function_table		3754095	0					
ANR	3754438	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754439	UnaryOperator	&		3754095	0					
ANR	3754440	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754441	Identifier	class_type		3754095	0					
ANR	3754442	Identifier	function_table		3754095	1					
ANR	3754443	Argument	"""next"""		3754095	1					
ANR	3754444	PrimaryExpression	"""next"""		3754095	0					
ANR	3754445	Argument	"sizeof ( ""next"" ) - 1"		3754095	2					
ANR	3754446	AdditiveExpression	"sizeof ( ""next"" ) - 1"		3754095	0		-			
ANR	3754447	SizeofExpression	"sizeof ( ""next"" )"		3754095	0					
ANR	3754448	Sizeof	sizeof		3754095	0					
ANR	3754449	PrimaryExpression	"""next"""		3754095	1					
ANR	3754450	PrimaryExpression	1		3754095	1					
ANR	3754451	IfStatement	if ( inherited )		3754095	12					
ANR	3754452	Condition	inherited	264:5:8002:8010	3754095	0	True				
ANR	3754453	Identifier	inherited		3754095	0					
ANR	3754454	CompoundStatement		49:16:1930:1930	3754095	1					
ANR	3754455	IfStatement	if ( class_type -> iterator_funcs . zf_rewind -> common . scope != parent )		3754095	0					
ANR	3754456	Condition	class_type -> iterator_funcs . zf_rewind -> common . scope != parent	265:6:8021:8081	3754095	0	True				
ANR	3754457	EqualityExpression	class_type -> iterator_funcs . zf_rewind -> common . scope != parent		3754095	0		!=			
ANR	3754458	MemberAccess	class_type -> iterator_funcs . zf_rewind -> common . scope		3754095	0					
ANR	3754459	PtrMemberAccess	class_type -> iterator_funcs . zf_rewind -> common		3754095	0					
ANR	3754460	MemberAccess	class_type -> iterator_funcs . zf_rewind		3754095	0					
ANR	3754461	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754462	Identifier	class_type		3754095	0					
ANR	3754463	Identifier	iterator_funcs		3754095	1					
ANR	3754464	Identifier	zf_rewind		3754095	1					
ANR	3754465	Identifier	common		3754095	1					
ANR	3754466	Identifier	scope		3754095	1					
ANR	3754467	Identifier	parent		3754095	1					
ANR	3754468	CompoundStatement		50:69:2001:2001	3754095	1					
ANR	3754469	ExpressionStatement	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_REWIND	266:3:8089:8138	3754095	0	True				
ANR	3754470	AssignmentExpression	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_REWIND		3754095	0		|=			
ANR	3754471	PtrMemberAccess	intern -> flags		3754095	0					
ANR	3754472	Identifier	intern		3754095	0					
ANR	3754473	Identifier	flags		3754095	1					
ANR	3754474	Identifier	SPL_FIXEDARRAY_OVERLOADED_REWIND		3754095	1					
ANR	3754475	IfStatement	if ( class_type -> iterator_funcs . zf_valid -> common . scope != parent )		3754095	1					
ANR	3754476	Condition	class_type -> iterator_funcs . zf_valid -> common . scope != parent	268:6:8150:8210	3754095	0	True				
ANR	3754477	EqualityExpression	class_type -> iterator_funcs . zf_valid -> common . scope != parent		3754095	0		!=			
ANR	3754478	MemberAccess	class_type -> iterator_funcs . zf_valid -> common . scope		3754095	0					
ANR	3754479	PtrMemberAccess	class_type -> iterator_funcs . zf_valid -> common		3754095	0					
ANR	3754480	MemberAccess	class_type -> iterator_funcs . zf_valid		3754095	0					
ANR	3754481	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754482	Identifier	class_type		3754095	0					
ANR	3754483	Identifier	iterator_funcs		3754095	1					
ANR	3754484	Identifier	zf_valid		3754095	1					
ANR	3754485	Identifier	common		3754095	1					
ANR	3754486	Identifier	scope		3754095	1					
ANR	3754487	Identifier	parent		3754095	1					
ANR	3754488	CompoundStatement		53:69:2130:2130	3754095	1					
ANR	3754489	ExpressionStatement	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_VALID	269:3:8218:8266	3754095	0	True				
ANR	3754490	AssignmentExpression	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_VALID		3754095	0		|=			
ANR	3754491	PtrMemberAccess	intern -> flags		3754095	0					
ANR	3754492	Identifier	intern		3754095	0					
ANR	3754493	Identifier	flags		3754095	1					
ANR	3754494	Identifier	SPL_FIXEDARRAY_OVERLOADED_VALID		3754095	1					
ANR	3754495	IfStatement	if ( class_type -> iterator_funcs . zf_key -> common . scope != parent )		3754095	2					
ANR	3754496	Condition	class_type -> iterator_funcs . zf_key -> common . scope != parent	271:6:8278:8338	3754095	0	True				
ANR	3754497	EqualityExpression	class_type -> iterator_funcs . zf_key -> common . scope != parent		3754095	0		!=			
ANR	3754498	MemberAccess	class_type -> iterator_funcs . zf_key -> common . scope		3754095	0					
ANR	3754499	PtrMemberAccess	class_type -> iterator_funcs . zf_key -> common		3754095	0					
ANR	3754500	MemberAccess	class_type -> iterator_funcs . zf_key		3754095	0					
ANR	3754501	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754502	Identifier	class_type		3754095	0					
ANR	3754503	Identifier	iterator_funcs		3754095	1					
ANR	3754504	Identifier	zf_key		3754095	1					
ANR	3754505	Identifier	common		3754095	1					
ANR	3754506	Identifier	scope		3754095	1					
ANR	3754507	Identifier	parent		3754095	1					
ANR	3754508	CompoundStatement		56:69:2258:2258	3754095	1					
ANR	3754509	ExpressionStatement	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_KEY	272:3:8346:8392	3754095	0	True				
ANR	3754510	AssignmentExpression	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_KEY		3754095	0		|=			
ANR	3754511	PtrMemberAccess	intern -> flags		3754095	0					
ANR	3754512	Identifier	intern		3754095	0					
ANR	3754513	Identifier	flags		3754095	1					
ANR	3754514	Identifier	SPL_FIXEDARRAY_OVERLOADED_KEY		3754095	1					
ANR	3754515	IfStatement	if ( class_type -> iterator_funcs . zf_current -> common . scope != parent )		3754095	3					
ANR	3754516	Condition	class_type -> iterator_funcs . zf_current -> common . scope != parent	274:6:8404:8464	3754095	0	True				
ANR	3754517	EqualityExpression	class_type -> iterator_funcs . zf_current -> common . scope != parent		3754095	0		!=			
ANR	3754518	MemberAccess	class_type -> iterator_funcs . zf_current -> common . scope		3754095	0					
ANR	3754519	PtrMemberAccess	class_type -> iterator_funcs . zf_current -> common		3754095	0					
ANR	3754520	MemberAccess	class_type -> iterator_funcs . zf_current		3754095	0					
ANR	3754521	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754522	Identifier	class_type		3754095	0					
ANR	3754523	Identifier	iterator_funcs		3754095	1					
ANR	3754524	Identifier	zf_current		3754095	1					
ANR	3754525	Identifier	common		3754095	1					
ANR	3754526	Identifier	scope		3754095	1					
ANR	3754527	Identifier	parent		3754095	1					
ANR	3754528	CompoundStatement		59:69:2384:2384	3754095	1					
ANR	3754529	ExpressionStatement	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_CURRENT	275:3:8472:8522	3754095	0	True				
ANR	3754530	AssignmentExpression	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_CURRENT		3754095	0		|=			
ANR	3754531	PtrMemberAccess	intern -> flags		3754095	0					
ANR	3754532	Identifier	intern		3754095	0					
ANR	3754533	Identifier	flags		3754095	1					
ANR	3754534	Identifier	SPL_FIXEDARRAY_OVERLOADED_CURRENT		3754095	1					
ANR	3754535	IfStatement	if ( class_type -> iterator_funcs . zf_next -> common . scope != parent )		3754095	4					
ANR	3754536	Condition	class_type -> iterator_funcs . zf_next -> common . scope != parent	277:6:8534:8594	3754095	0	True				
ANR	3754537	EqualityExpression	class_type -> iterator_funcs . zf_next -> common . scope != parent		3754095	0		!=			
ANR	3754538	MemberAccess	class_type -> iterator_funcs . zf_next -> common . scope		3754095	0					
ANR	3754539	PtrMemberAccess	class_type -> iterator_funcs . zf_next -> common		3754095	0					
ANR	3754540	MemberAccess	class_type -> iterator_funcs . zf_next		3754095	0					
ANR	3754541	PtrMemberAccess	class_type -> iterator_funcs		3754095	0					
ANR	3754542	Identifier	class_type		3754095	0					
ANR	3754543	Identifier	iterator_funcs		3754095	1					
ANR	3754544	Identifier	zf_next		3754095	1					
ANR	3754545	Identifier	common		3754095	1					
ANR	3754546	Identifier	scope		3754095	1					
ANR	3754547	Identifier	parent		3754095	1					
ANR	3754548	CompoundStatement		62:69:2514:2514	3754095	1					
ANR	3754549	ExpressionStatement	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_NEXT	278:3:8602:8649	3754095	0	True				
ANR	3754550	AssignmentExpression	intern -> flags |= SPL_FIXEDARRAY_OVERLOADED_NEXT		3754095	0		|=			
ANR	3754551	PtrMemberAccess	intern -> flags		3754095	0					
ANR	3754552	Identifier	intern		3754095	0					
ANR	3754553	Identifier	flags		3754095	1					
ANR	3754554	Identifier	SPL_FIXEDARRAY_OVERLOADED_NEXT		3754095	1					
ANR	3754555	ExpressionStatement	"intern -> fptr_offset_get = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetget"" , sizeof ( ""offsetget"" ) - 1 )"	281:2:8658:8773	3754095	5	True				
ANR	3754556	AssignmentExpression	"intern -> fptr_offset_get = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetget"" , sizeof ( ""offsetget"" ) - 1 )"		3754095	0		=			
ANR	3754557	PtrMemberAccess	intern -> fptr_offset_get		3754095	0					
ANR	3754558	Identifier	intern		3754095	0					
ANR	3754559	Identifier	fptr_offset_get		3754095	1					
ANR	3754560	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetget"" , sizeof ( ""offsetget"" ) - 1 )"		3754095	1					
ANR	3754561	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754562	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754563	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754564	Argument	& class_type -> function_table		3754095	0					
ANR	3754565	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754566	UnaryOperator	&		3754095	0					
ANR	3754567	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754568	Identifier	class_type		3754095	0					
ANR	3754569	Identifier	function_table		3754095	1					
ANR	3754570	Argument	"""offsetget"""		3754095	1					
ANR	3754571	PrimaryExpression	"""offsetget"""		3754095	0					
ANR	3754572	Argument	"sizeof ( ""offsetget"" ) - 1"		3754095	2					
ANR	3754573	AdditiveExpression	"sizeof ( ""offsetget"" ) - 1"		3754095	0		-			
ANR	3754574	SizeofExpression	"sizeof ( ""offsetget"" )"		3754095	0					
ANR	3754575	Sizeof	sizeof		3754095	0					
ANR	3754576	PrimaryExpression	"""offsetget"""		3754095	1					
ANR	3754577	PrimaryExpression	1		3754095	1					
ANR	3754578	IfStatement	if ( intern -> fptr_offset_get -> common . scope == parent )		3754095	6					
ANR	3754579	Condition	intern -> fptr_offset_get -> common . scope == parent	282:6:8781:8827	3754095	0	True				
ANR	3754580	EqualityExpression	intern -> fptr_offset_get -> common . scope == parent		3754095	0		==			
ANR	3754581	MemberAccess	intern -> fptr_offset_get -> common . scope		3754095	0					
ANR	3754582	PtrMemberAccess	intern -> fptr_offset_get -> common		3754095	0					
ANR	3754583	PtrMemberAccess	intern -> fptr_offset_get		3754095	0					
ANR	3754584	Identifier	intern		3754095	0					
ANR	3754585	Identifier	fptr_offset_get		3754095	1					
ANR	3754586	Identifier	common		3754095	1					
ANR	3754587	Identifier	scope		3754095	1					
ANR	3754588	Identifier	parent		3754095	1					
ANR	3754589	CompoundStatement		67:55:2747:2747	3754095	1					
ANR	3754590	ExpressionStatement	intern -> fptr_offset_get = NULL	283:3:8835:8865	3754095	0	True				
ANR	3754591	AssignmentExpression	intern -> fptr_offset_get = NULL		3754095	0		=			
ANR	3754592	PtrMemberAccess	intern -> fptr_offset_get		3754095	0					
ANR	3754593	Identifier	intern		3754095	0					
ANR	3754594	Identifier	fptr_offset_get		3754095	1					
ANR	3754595	Identifier	NULL		3754095	1					
ANR	3754596	ExpressionStatement	"intern -> fptr_offset_set = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetset"" , sizeof ( ""offsetset"" ) - 1 )"	285:2:8873:8988	3754095	7	True				
ANR	3754597	AssignmentExpression	"intern -> fptr_offset_set = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetset"" , sizeof ( ""offsetset"" ) - 1 )"		3754095	0		=			
ANR	3754598	PtrMemberAccess	intern -> fptr_offset_set		3754095	0					
ANR	3754599	Identifier	intern		3754095	0					
ANR	3754600	Identifier	fptr_offset_set		3754095	1					
ANR	3754601	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetset"" , sizeof ( ""offsetset"" ) - 1 )"		3754095	1					
ANR	3754602	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754603	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754604	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754605	Argument	& class_type -> function_table		3754095	0					
ANR	3754606	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754607	UnaryOperator	&		3754095	0					
ANR	3754608	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754609	Identifier	class_type		3754095	0					
ANR	3754610	Identifier	function_table		3754095	1					
ANR	3754611	Argument	"""offsetset"""		3754095	1					
ANR	3754612	PrimaryExpression	"""offsetset"""		3754095	0					
ANR	3754613	Argument	"sizeof ( ""offsetset"" ) - 1"		3754095	2					
ANR	3754614	AdditiveExpression	"sizeof ( ""offsetset"" ) - 1"		3754095	0		-			
ANR	3754615	SizeofExpression	"sizeof ( ""offsetset"" )"		3754095	0					
ANR	3754616	Sizeof	sizeof		3754095	0					
ANR	3754617	PrimaryExpression	"""offsetset"""		3754095	1					
ANR	3754618	PrimaryExpression	1		3754095	1					
ANR	3754619	IfStatement	if ( intern -> fptr_offset_set -> common . scope == parent )		3754095	8					
ANR	3754620	Condition	intern -> fptr_offset_set -> common . scope == parent	286:6:8996:9042	3754095	0	True				
ANR	3754621	EqualityExpression	intern -> fptr_offset_set -> common . scope == parent		3754095	0		==			
ANR	3754622	MemberAccess	intern -> fptr_offset_set -> common . scope		3754095	0					
ANR	3754623	PtrMemberAccess	intern -> fptr_offset_set -> common		3754095	0					
ANR	3754624	PtrMemberAccess	intern -> fptr_offset_set		3754095	0					
ANR	3754625	Identifier	intern		3754095	0					
ANR	3754626	Identifier	fptr_offset_set		3754095	1					
ANR	3754627	Identifier	common		3754095	1					
ANR	3754628	Identifier	scope		3754095	1					
ANR	3754629	Identifier	parent		3754095	1					
ANR	3754630	CompoundStatement		71:55:2962:2962	3754095	1					
ANR	3754631	ExpressionStatement	intern -> fptr_offset_set = NULL	287:3:9050:9080	3754095	0	True				
ANR	3754632	AssignmentExpression	intern -> fptr_offset_set = NULL		3754095	0		=			
ANR	3754633	PtrMemberAccess	intern -> fptr_offset_set		3754095	0					
ANR	3754634	Identifier	intern		3754095	0					
ANR	3754635	Identifier	fptr_offset_set		3754095	1					
ANR	3754636	Identifier	NULL		3754095	1					
ANR	3754637	ExpressionStatement	"intern -> fptr_offset_has = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetexists"" , sizeof ( ""offsetexists"" ) - 1 )"	289:2:9088:9209	3754095	9	True				
ANR	3754638	AssignmentExpression	"intern -> fptr_offset_has = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetexists"" , sizeof ( ""offsetexists"" ) - 1 )"		3754095	0		=			
ANR	3754639	PtrMemberAccess	intern -> fptr_offset_has		3754095	0					
ANR	3754640	Identifier	intern		3754095	0					
ANR	3754641	Identifier	fptr_offset_has		3754095	1					
ANR	3754642	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetexists"" , sizeof ( ""offsetexists"" ) - 1 )"		3754095	1					
ANR	3754643	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754644	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754645	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754646	Argument	& class_type -> function_table		3754095	0					
ANR	3754647	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754648	UnaryOperator	&		3754095	0					
ANR	3754649	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754650	Identifier	class_type		3754095	0					
ANR	3754651	Identifier	function_table		3754095	1					
ANR	3754652	Argument	"""offsetexists"""		3754095	1					
ANR	3754653	PrimaryExpression	"""offsetexists"""		3754095	0					
ANR	3754654	Argument	"sizeof ( ""offsetexists"" ) - 1"		3754095	2					
ANR	3754655	AdditiveExpression	"sizeof ( ""offsetexists"" ) - 1"		3754095	0		-			
ANR	3754656	SizeofExpression	"sizeof ( ""offsetexists"" )"		3754095	0					
ANR	3754657	Sizeof	sizeof		3754095	0					
ANR	3754658	PrimaryExpression	"""offsetexists"""		3754095	1					
ANR	3754659	PrimaryExpression	1		3754095	1					
ANR	3754660	IfStatement	if ( intern -> fptr_offset_has -> common . scope == parent )		3754095	10					
ANR	3754661	Condition	intern -> fptr_offset_has -> common . scope == parent	290:6:9217:9263	3754095	0	True				
ANR	3754662	EqualityExpression	intern -> fptr_offset_has -> common . scope == parent		3754095	0		==			
ANR	3754663	MemberAccess	intern -> fptr_offset_has -> common . scope		3754095	0					
ANR	3754664	PtrMemberAccess	intern -> fptr_offset_has -> common		3754095	0					
ANR	3754665	PtrMemberAccess	intern -> fptr_offset_has		3754095	0					
ANR	3754666	Identifier	intern		3754095	0					
ANR	3754667	Identifier	fptr_offset_has		3754095	1					
ANR	3754668	Identifier	common		3754095	1					
ANR	3754669	Identifier	scope		3754095	1					
ANR	3754670	Identifier	parent		3754095	1					
ANR	3754671	CompoundStatement		75:55:3183:3183	3754095	1					
ANR	3754672	ExpressionStatement	intern -> fptr_offset_has = NULL	291:3:9271:9301	3754095	0	True				
ANR	3754673	AssignmentExpression	intern -> fptr_offset_has = NULL		3754095	0		=			
ANR	3754674	PtrMemberAccess	intern -> fptr_offset_has		3754095	0					
ANR	3754675	Identifier	intern		3754095	0					
ANR	3754676	Identifier	fptr_offset_has		3754095	1					
ANR	3754677	Identifier	NULL		3754095	1					
ANR	3754678	ExpressionStatement	"intern -> fptr_offset_del = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetunset"" , sizeof ( ""offsetunset"" ) - 1 )"	293:2:9309:9428	3754095	11	True				
ANR	3754679	AssignmentExpression	"intern -> fptr_offset_del = zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetunset"" , sizeof ( ""offsetunset"" ) - 1 )"		3754095	0		=			
ANR	3754680	PtrMemberAccess	intern -> fptr_offset_del		3754095	0					
ANR	3754681	Identifier	intern		3754095	0					
ANR	3754682	Identifier	fptr_offset_del		3754095	1					
ANR	3754683	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""offsetunset"" , sizeof ( ""offsetunset"" ) - 1 )"		3754095	1					
ANR	3754684	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754685	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754686	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754687	Argument	& class_type -> function_table		3754095	0					
ANR	3754688	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754689	UnaryOperator	&		3754095	0					
ANR	3754690	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754691	Identifier	class_type		3754095	0					
ANR	3754692	Identifier	function_table		3754095	1					
ANR	3754693	Argument	"""offsetunset"""		3754095	1					
ANR	3754694	PrimaryExpression	"""offsetunset"""		3754095	0					
ANR	3754695	Argument	"sizeof ( ""offsetunset"" ) - 1"		3754095	2					
ANR	3754696	AdditiveExpression	"sizeof ( ""offsetunset"" ) - 1"		3754095	0		-			
ANR	3754697	SizeofExpression	"sizeof ( ""offsetunset"" )"		3754095	0					
ANR	3754698	Sizeof	sizeof		3754095	0					
ANR	3754699	PrimaryExpression	"""offsetunset"""		3754095	1					
ANR	3754700	PrimaryExpression	1		3754095	1					
ANR	3754701	IfStatement	if ( intern -> fptr_offset_del -> common . scope == parent )		3754095	12					
ANR	3754702	Condition	intern -> fptr_offset_del -> common . scope == parent	294:6:9436:9482	3754095	0	True				
ANR	3754703	EqualityExpression	intern -> fptr_offset_del -> common . scope == parent		3754095	0		==			
ANR	3754704	MemberAccess	intern -> fptr_offset_del -> common . scope		3754095	0					
ANR	3754705	PtrMemberAccess	intern -> fptr_offset_del -> common		3754095	0					
ANR	3754706	PtrMemberAccess	intern -> fptr_offset_del		3754095	0					
ANR	3754707	Identifier	intern		3754095	0					
ANR	3754708	Identifier	fptr_offset_del		3754095	1					
ANR	3754709	Identifier	common		3754095	1					
ANR	3754710	Identifier	scope		3754095	1					
ANR	3754711	Identifier	parent		3754095	1					
ANR	3754712	CompoundStatement		79:55:3402:3402	3754095	1					
ANR	3754713	ExpressionStatement	intern -> fptr_offset_del = NULL	295:3:9490:9520	3754095	0	True				
ANR	3754714	AssignmentExpression	intern -> fptr_offset_del = NULL		3754095	0		=			
ANR	3754715	PtrMemberAccess	intern -> fptr_offset_del		3754095	0					
ANR	3754716	Identifier	intern		3754095	0					
ANR	3754717	Identifier	fptr_offset_del		3754095	1					
ANR	3754718	Identifier	NULL		3754095	1					
ANR	3754719	ExpressionStatement	"intern -> fptr_count = zend_hash_str_find_ptr ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"	297:2:9528:9630	3754095	13	True				
ANR	3754720	AssignmentExpression	"intern -> fptr_count = zend_hash_str_find_ptr ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"		3754095	0		=			
ANR	3754721	PtrMemberAccess	intern -> fptr_count		3754095	0					
ANR	3754722	Identifier	intern		3754095	0					
ANR	3754723	Identifier	fptr_count		3754095	1					
ANR	3754724	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"		3754095	1					
ANR	3754725	Callee	zend_hash_str_find_ptr		3754095	0					
ANR	3754726	Identifier	zend_hash_str_find_ptr		3754095	0					
ANR	3754727	ArgumentList	& class_type -> function_table		3754095	1					
ANR	3754728	Argument	& class_type -> function_table		3754095	0					
ANR	3754729	UnaryOperationExpression	& class_type -> function_table		3754095	0					
ANR	3754730	UnaryOperator	&		3754095	0					
ANR	3754731	PtrMemberAccess	class_type -> function_table		3754095	1					
ANR	3754732	Identifier	class_type		3754095	0					
ANR	3754733	Identifier	function_table		3754095	1					
ANR	3754734	Argument	"""count"""		3754095	1					
ANR	3754735	PrimaryExpression	"""count"""		3754095	0					
ANR	3754736	Argument	"sizeof ( ""count"" ) - 1"		3754095	2					
ANR	3754737	AdditiveExpression	"sizeof ( ""count"" ) - 1"		3754095	0		-			
ANR	3754738	SizeofExpression	"sizeof ( ""count"" )"		3754095	0					
ANR	3754739	Sizeof	sizeof		3754095	0					
ANR	3754740	PrimaryExpression	"""count"""		3754095	1					
ANR	3754741	PrimaryExpression	1		3754095	1					
ANR	3754742	IfStatement	if ( intern -> fptr_count -> common . scope == parent )		3754095	14					
ANR	3754743	Condition	intern -> fptr_count -> common . scope == parent	298:6:9638:9679	3754095	0	True				
ANR	3754744	EqualityExpression	intern -> fptr_count -> common . scope == parent		3754095	0		==			
ANR	3754745	MemberAccess	intern -> fptr_count -> common . scope		3754095	0					
ANR	3754746	PtrMemberAccess	intern -> fptr_count -> common		3754095	0					
ANR	3754747	PtrMemberAccess	intern -> fptr_count		3754095	0					
ANR	3754748	Identifier	intern		3754095	0					
ANR	3754749	Identifier	fptr_count		3754095	1					
ANR	3754750	Identifier	common		3754095	1					
ANR	3754751	Identifier	scope		3754095	1					
ANR	3754752	Identifier	parent		3754095	1					
ANR	3754753	CompoundStatement		83:50:3599:3599	3754095	1					
ANR	3754754	ExpressionStatement	intern -> fptr_count = NULL	299:3:9687:9712	3754095	0	True				
ANR	3754755	AssignmentExpression	intern -> fptr_count = NULL		3754095	0		=			
ANR	3754756	PtrMemberAccess	intern -> fptr_count		3754095	0					
ANR	3754757	Identifier	intern		3754095	0					
ANR	3754758	Identifier	fptr_count		3754095	1					
ANR	3754759	Identifier	NULL		3754095	1					
ANR	3754760	ReturnStatement	return & intern -> std ;	303:1:9723:9742	3754095	13	True				
ANR	3754761	UnaryOperationExpression	& intern -> std		3754095	0					
ANR	3754762	UnaryOperator	&		3754095	0					
ANR	3754763	PtrMemberAccess	intern -> std		3754095	1					
ANR	3754764	Identifier	intern		3754095	0					
ANR	3754765	Identifier	std		3754095	1					
ANR	3754766	ReturnType	static zend_object *		3754095	1					
ANR	3754767	Identifier	spl_fixedarray_object_new_ex		3754095	2					
ANR	3754768	ParameterList	"zend_class_entry * class_type , zval * orig , int clone_orig"		3754095	3					
ANR	3754769	Parameter	zend_class_entry * class_type	215:49:6014:6041	3754095	0	True				
ANR	3754770	ParameterType	zend_class_entry *		3754095	0					
ANR	3754771	Identifier	class_type		3754095	1					
ANR	3754772	Parameter	zval * orig	215:79:6044:6053	3754095	1	True				
ANR	3754773	ParameterType	zval *		3754095	0					
ANR	3754774	Identifier	orig		3754095	1					
ANR	3754775	Parameter	int clone_orig	215:91:6056:6069	3754095	2	True				
ANR	3754776	ParameterType	int		3754095	0					
ANR	3754777	Identifier	clone_orig		3754095	1					
ANR	3754778	CFGEntryNode	ENTRY		3754095		True				
ANR	3754779	CFGExitNode	EXIT		3754095		True				
ANR	3754780	Symbol	parent		3754095						
ANR	3754781	Symbol	* class_type -> iterator_funcs . zf_valid		3754095						
ANR	3754782	Symbol	intern -> fptr_offset_has		3754095						
ANR	3754783	Symbol	* intern -> fptr_offset_del		3754095						
ANR	3754784	Symbol	* parent		3754095						
ANR	3754785	Symbol	intern -> fptr_count -> common . scope		3754095						
ANR	3754786	Symbol	class_type -> iterator_funcs . zf_key -> common . scope		3754095						
ANR	3754787	Symbol	E_COMPILE_ERROR		3754095						
ANR	3754788	Symbol	class_type -> iterator_funcs		3754095						
ANR	3754789	Symbol	class_type -> iterator_funcs . zf_current		3754095						
ANR	3754790	Symbol	class_type -> iterator_funcs . zf_next		3754095						
ANR	3754791	Symbol	* class_type -> iterator_funcs . zf_rewind		3754095						
ANR	3754792	Symbol	class_type -> iterator_funcs . zf_key -> common		3754095						
ANR	3754793	Symbol	other -> array		3754095						
ANR	3754794	Symbol	intern -> fptr_offset_set -> common		3754095						
ANR	3754795	Symbol	intern -> fptr_offset_has -> common . scope		3754095						
ANR	3754796	Symbol	intern -> current		3754095						
ANR	3754797	Symbol	class_type -> iterator_funcs . zf_rewind -> common		3754095						
ANR	3754798	Symbol	intern -> fptr_offset_get -> common		3754095						
ANR	3754799	Symbol	class_type		3754095						
ANR	3754800	Symbol	parent -> parent		3754095						
ANR	3754801	Symbol	intern -> fptr_offset_get -> common . scope		3754095						
ANR	3754802	Symbol	intern -> fptr_offset_set -> common . scope		3754095						
ANR	3754803	Symbol	ecalloc		3754095						
ANR	3754804	Symbol	intern -> std . handlers		3754095						
ANR	3754805	Symbol	class_type -> iterator_funcs . zf_valid -> common . scope		3754095						
ANR	3754806	Symbol	* class_type -> iterator_funcs		3754095						
ANR	3754807	Symbol	class_type -> iterator_funcs . zf_valid		3754095						
ANR	3754808	Symbol	other -> ce_get_iterator		3754095						
ANR	3754809	Symbol	Z_SPLFIXEDARRAY_P		3754095						
ANR	3754810	Symbol	class_type -> iterator_funcs . zf_rewind		3754095						
ANR	3754811	Symbol	NULL		3754095						
ANR	3754812	Symbol	SPL_FIXEDARRAY_OVERLOADED_REWIND		3754095						
ANR	3754813	Symbol	intern -> fptr_count -> common		3754095						
ANR	3754814	Symbol	SPL_FIXEDARRAY_OVERLOADED_VALID		3754095						
ANR	3754815	Symbol	* other		3754095						
ANR	3754816	Symbol	* intern -> fptr_count		3754095						
ANR	3754817	Symbol	* class_type -> iterator_funcs . zf_next		3754095						
ANR	3754818	Symbol	* intern -> fptr_offset_has		3754095						
ANR	3754819	Symbol	intern -> fptr_offset_del		3754095						
ANR	3754820	Symbol	other -> array -> size		3754095						
ANR	3754821	Symbol	& intern -> std		3754095						
ANR	3754822	Symbol	* * other		3754095						
ANR	3754823	Symbol	class_type -> iterator_funcs . zf_current -> common		3754095						
ANR	3754824	Symbol	intern -> fptr_offset_del -> common . scope		3754095						
ANR	3754825	Symbol	* class_type		3754095						
ANR	3754826	Symbol	SPL_FIXEDARRAY_OVERLOADED_KEY		3754095						
ANR	3754827	Symbol	SPL_FIXEDARRAY_OVERLOADED_NEXT		3754095						
ANR	3754828	Symbol	* * intern		3754095						
ANR	3754829	Symbol	spl_fixedarray_get_iterator		3754095						
ANR	3754830	Symbol	* * class_type		3754095						
ANR	3754831	Symbol	other		3754095						
ANR	3754832	Symbol	intern -> fptr_offset_get		3754095						
ANR	3754833	Symbol	class_type -> iterator_funcs . zf_valid -> common		3754095						
ANR	3754834	Symbol	intern -> fptr_offset_set		3754095						
ANR	3754835	Symbol	intern -> array		3754095						
ANR	3754836	Symbol	class_type -> iterator_funcs . zf_next -> common		3754095						
ANR	3754837	Symbol	intern -> fptr_count		3754095						
ANR	3754838	Symbol	intern -> flags		3754095						
ANR	3754839	Symbol	class_type -> get_iterator		3754095						
ANR	3754840	Symbol	emalloc		3754095						
ANR	3754841	Symbol	intern -> ce_get_iterator		3754095						
ANR	3754842	Symbol	intern -> fptr_offset_del -> common		3754095						
ANR	3754843	Symbol	zend_hash_str_find_ptr		3754095						
ANR	3754844	Symbol	spl_ce_RuntimeException		3754095						
ANR	3754845	Symbol	& class_type -> function_table		3754095						
ANR	3754846	Symbol	& spl_handler_SplFixedArray		3754095						
ANR	3754847	Symbol	class_type -> iterator_funcs . zf_rewind -> common . scope		3754095						
ANR	3754848	Symbol	* intern		3754095						
ANR	3754849	Symbol	intern		3754095						
ANR	3754850	Symbol	zend_object_properties_size		3754095						
ANR	3754851	Symbol	* class_type -> iterator_funcs . zf_key		3754095						
ANR	3754852	Symbol	spl_ce_SplFixedArray		3754095						
ANR	3754853	Symbol	* intern -> fptr_offset_set		3754095						
ANR	3754854	Symbol	class_type -> iterator_funcs . zf_key		3754095						
ANR	3754855	Symbol	class_type -> iterator_funcs . zf_current -> common . scope		3754095						
ANR	3754856	Symbol	intern -> std		3754095						
ANR	3754857	Symbol	* class_type -> iterator_funcs . zf_current		3754095						
ANR	3754858	Symbol	SPL_FIXEDARRAY_OVERLOADED_CURRENT		3754095						
ANR	3754859	Symbol	orig		3754095						
ANR	3754860	Symbol	inherited		3754095						
ANR	3754861	Symbol	* intern -> fptr_offset_get		3754095						
ANR	3754862	Symbol	class_type -> iterator_funcs . zf_next -> common . scope		3754095						
ANR	3754863	Symbol	* other -> array		3754095						
ANR	3754864	Symbol	clone_orig		3754095						
ANR	3754865	Symbol	intern -> fptr_offset_has -> common		3754095						
ANR	3754866	Function	spl_fixedarray_new	307:0:9757:9897							
ANR	3754867	FunctionDef	spl_fixedarray_new (zend_class_entry * class_type)		3754866	0					
ANR	3754868	CompoundStatement		308:0:9836:9897	3754866	0					
ANR	3754869	ReturnStatement	"return spl_fixedarray_object_new_ex ( class_type , NULL , 0 ) ;"	309:1:9839:9895	3754866	0	True				
ANR	3754870	CallExpression	"spl_fixedarray_object_new_ex ( class_type , NULL , 0 )"		3754866	0					
ANR	3754871	Callee	spl_fixedarray_object_new_ex		3754866	0					
ANR	3754872	Identifier	spl_fixedarray_object_new_ex		3754866	0					
ANR	3754873	ArgumentList	class_type		3754866	1					
ANR	3754874	Argument	class_type		3754866	0					
ANR	3754875	Identifier	class_type		3754866	0					
ANR	3754876	Argument	NULL		3754866	1					
ANR	3754877	Identifier	NULL		3754866	0					
ANR	3754878	Argument	0		3754866	2					
ANR	3754879	PrimaryExpression	0		3754866	0					
ANR	3754880	ReturnType	static zend_object *		3754866	1					
ANR	3754881	Identifier	spl_fixedarray_new		3754866	2					
ANR	3754882	ParameterList	zend_class_entry * class_type		3754866	3					
ANR	3754883	Parameter	zend_class_entry * class_type	307:39:9796:9823	3754866	0	True				
ANR	3754884	ParameterType	zend_class_entry *		3754866	0					
ANR	3754885	Identifier	class_type		3754866	1					
ANR	3754886	CFGEntryNode	ENTRY		3754866		True				
ANR	3754887	CFGExitNode	EXIT		3754866		True				
ANR	3754888	Symbol	spl_fixedarray_object_new_ex		3754866						
ANR	3754889	Symbol	class_type		3754866						
ANR	3754890	Symbol	NULL		3754866						
ANR	3754891	Function	spl_fixedarray_object_clone	313:0:9910:10218							
ANR	3754892	FunctionDef	spl_fixedarray_object_clone (zval * zobject)		3754891	0					
ANR	3754893	CompoundStatement		314:0:9983:10218	3754891	0					
ANR	3754894	IdentifierDeclStatement	zend_object * old_object ;	315:1:9986:10009	3754891	0	True				
ANR	3754895	IdentifierDecl	* old_object		3754891	0					
ANR	3754896	IdentifierDeclType	zend_object *		3754891	0					
ANR	3754897	Identifier	old_object		3754891	1					
ANR	3754898	IdentifierDeclStatement	zend_object * new_object ;	316:1:10012:10035	3754891	1	True				
ANR	3754899	IdentifierDecl	* new_object		3754891	0					
ANR	3754900	IdentifierDeclType	zend_object *		3754891	0					
ANR	3754901	Identifier	new_object		3754891	1					
ANR	3754902	ExpressionStatement	old_object = Z_OBJ_P ( zobject )	318:1:10039:10069	3754891	2	True				
ANR	3754903	AssignmentExpression	old_object = Z_OBJ_P ( zobject )		3754891	0		=			
ANR	3754904	Identifier	old_object		3754891	0					
ANR	3754905	CallExpression	Z_OBJ_P ( zobject )		3754891	1					
ANR	3754906	Callee	Z_OBJ_P		3754891	0					
ANR	3754907	Identifier	Z_OBJ_P		3754891	0					
ANR	3754908	ArgumentList	zobject		3754891	1					
ANR	3754909	Argument	zobject		3754891	0					
ANR	3754910	Identifier	zobject		3754891	0					
ANR	3754911	ExpressionStatement	"new_object = spl_fixedarray_object_new_ex ( old_object -> ce , zobject , 1 )"	319:1:10072:10141	3754891	3	True				
ANR	3754912	AssignmentExpression	"new_object = spl_fixedarray_object_new_ex ( old_object -> ce , zobject , 1 )"		3754891	0		=			
ANR	3754913	Identifier	new_object		3754891	0					
ANR	3754914	CallExpression	"spl_fixedarray_object_new_ex ( old_object -> ce , zobject , 1 )"		3754891	1					
ANR	3754915	Callee	spl_fixedarray_object_new_ex		3754891	0					
ANR	3754916	Identifier	spl_fixedarray_object_new_ex		3754891	0					
ANR	3754917	ArgumentList	old_object -> ce		3754891	1					
ANR	3754918	Argument	old_object -> ce		3754891	0					
ANR	3754919	PtrMemberAccess	old_object -> ce		3754891	0					
ANR	3754920	Identifier	old_object		3754891	0					
ANR	3754921	Identifier	ce		3754891	1					
ANR	3754922	Argument	zobject		3754891	1					
ANR	3754923	Identifier	zobject		3754891	0					
ANR	3754924	Argument	1		3754891	2					
ANR	3754925	PrimaryExpression	1		3754891	0					
ANR	3754926	ExpressionStatement	"zend_objects_clone_members ( new_object , old_object )"	321:1:10145:10195	3754891	4	True				
ANR	3754927	CallExpression	"zend_objects_clone_members ( new_object , old_object )"		3754891	0					
ANR	3754928	Callee	zend_objects_clone_members		3754891	0					
ANR	3754929	Identifier	zend_objects_clone_members		3754891	0					
ANR	3754930	ArgumentList	new_object		3754891	1					
ANR	3754931	Argument	new_object		3754891	0					
ANR	3754932	Identifier	new_object		3754891	0					
ANR	3754933	Argument	old_object		3754891	1					
ANR	3754934	Identifier	old_object		3754891	0					
ANR	3754935	ReturnStatement	return new_object ;	323:1:10199:10216	3754891	5	True				
ANR	3754936	Identifier	new_object		3754891	0					
ANR	3754937	ReturnType	static zend_object *		3754891	1					
ANR	3754938	Identifier	spl_fixedarray_object_clone		3754891	2					
ANR	3754939	ParameterList	zval * zobject		3754891	3					
ANR	3754940	Parameter	zval * zobject	313:48:9958:9970	3754891	0	True				
ANR	3754941	ParameterType	zval *		3754891	0					
ANR	3754942	Identifier	zobject		3754891	1					
ANR	3754943	CFGEntryNode	ENTRY		3754891		True				
ANR	3754944	CFGExitNode	EXIT		3754891		True				
ANR	3754945	Symbol	zobject		3754891						
ANR	3754946	Symbol	spl_fixedarray_object_new_ex		3754891						
ANR	3754947	Symbol	new_object		3754891						
ANR	3754948	Symbol	* old_object		3754891						
ANR	3754949	Symbol	Z_OBJ_P		3754891						
ANR	3754950	Symbol	old_object		3754891						
ANR	3754951	Symbol	old_object -> ce		3754891						
ANR	3754952	Function	spl_fixedarray_object_read_dimension_helper	327:0:10231:11031							
ANR	3754953	FunctionDef	"spl_fixedarray_object_read_dimension_helper (spl_fixedarray_object * intern , zval * offset)"		3754952	0					
ANR	3754954	CompoundStatement		328:0:10350:11031	3754952	0					
ANR	3754955	IdentifierDeclStatement	zend_long index ;	329:1:10353:10368	3754952	0	True				
ANR	3754956	IdentifierDecl	index		3754952	0					
ANR	3754957	IdentifierDeclType	zend_long		3754952	0					
ANR	3754958	Identifier	index		3754952	1					
ANR	3754959	IfStatement	if ( ! offset )		3754952	1					
ANR	3754960	Condition	! offset	333:5:10490:10496	3754952	0	True				
ANR	3754961	UnaryOperationExpression	! offset		3754952	0					
ANR	3754962	UnaryOperator	!		3754952	0					
ANR	3754963	Identifier	offset		3754952	1					
ANR	3754964	CompoundStatement		6:14:148:148	3754952	1					
ANR	3754965	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"	334:2:10503:10584	3754952	0	True				
ANR	3754966	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"		3754952	0					
ANR	3754967	Callee	zend_throw_exception		3754952	0					
ANR	3754968	Identifier	zend_throw_exception		3754952	0					
ANR	3754969	ArgumentList	spl_ce_RuntimeException		3754952	1					
ANR	3754970	Argument	spl_ce_RuntimeException		3754952	0					
ANR	3754971	Identifier	spl_ce_RuntimeException		3754952	0					
ANR	3754972	Argument	"""Index invalid or out of range"""		3754952	1					
ANR	3754973	PrimaryExpression	"""Index invalid or out of range"""		3754952	0					
ANR	3754974	Argument	0		3754952	2					
ANR	3754975	PrimaryExpression	0		3754952	0					
ANR	3754976	ReturnStatement	return NULL ;	335:2:10588:10599	3754952	1	True				
ANR	3754977	Identifier	NULL		3754952	0					
ANR	3754978	IfStatement	if ( Z_TYPE_P ( offset ) != IS_LONG )		3754952	2					
ANR	3754979	Condition	Z_TYPE_P ( offset ) != IS_LONG	338:5:10610:10636	3754952	0	True				
ANR	3754980	EqualityExpression	Z_TYPE_P ( offset ) != IS_LONG		3754952	0		!=			
ANR	3754981	CallExpression	Z_TYPE_P ( offset )		3754952	0					
ANR	3754982	Callee	Z_TYPE_P		3754952	0					
ANR	3754983	Identifier	Z_TYPE_P		3754952	0					
ANR	3754984	ArgumentList	offset		3754952	1					
ANR	3754985	Argument	offset		3754952	0					
ANR	3754986	Identifier	offset		3754952	0					
ANR	3754987	Identifier	IS_LONG		3754952	1					
ANR	3754988	CompoundStatement		11:34:288:288	3754952	1					
ANR	3754989	ExpressionStatement	index = spl_offset_convert_to_long ( offset )	339:2:10643:10685	3754952	0	True				
ANR	3754990	AssignmentExpression	index = spl_offset_convert_to_long ( offset )		3754952	0		=			
ANR	3754991	Identifier	index		3754952	0					
ANR	3754992	CallExpression	spl_offset_convert_to_long ( offset )		3754952	1					
ANR	3754993	Callee	spl_offset_convert_to_long		3754952	0					
ANR	3754994	Identifier	spl_offset_convert_to_long		3754952	0					
ANR	3754995	ArgumentList	offset		3754952	1					
ANR	3754996	Argument	offset		3754952	0					
ANR	3754997	Identifier	offset		3754952	0					
ANR	3754998	ElseStatement	else		3754952	0					
ANR	3754999	CompoundStatement		13:8:344:344	3754952	0					
ANR	3755000	ExpressionStatement	index = Z_LVAL_P ( offset )	341:2:10699:10723	3754952	0	True				
ANR	3755001	AssignmentExpression	index = Z_LVAL_P ( offset )		3754952	0		=			
ANR	3755002	Identifier	index		3754952	0					
ANR	3755003	CallExpression	Z_LVAL_P ( offset )		3754952	1					
ANR	3755004	Callee	Z_LVAL_P		3754952	0					
ANR	3755005	Identifier	Z_LVAL_P		3754952	0					
ANR	3755006	ArgumentList	offset		3754952	1					
ANR	3755007	Argument	offset		3754952	0					
ANR	3755008	Identifier	offset		3754952	0					
ANR	3755009	IfStatement	if ( index < 0 || intern -> array == NULL || index >= intern -> array -> size )		3754952	3					
ANR	3755010	Condition	index < 0 || intern -> array == NULL || index >= intern -> array -> size	344:5:10734:10799	3754952	0	True				
ANR	3755011	OrExpression	index < 0 || intern -> array == NULL || index >= intern -> array -> size		3754952	0		||			
ANR	3755012	RelationalExpression	index < 0		3754952	0		<			
ANR	3755013	Identifier	index		3754952	0					
ANR	3755014	PrimaryExpression	0		3754952	1					
ANR	3755015	OrExpression	intern -> array == NULL || index >= intern -> array -> size		3754952	1		||			
ANR	3755016	EqualityExpression	intern -> array == NULL		3754952	0		==			
ANR	3755017	PtrMemberAccess	intern -> array		3754952	0					
ANR	3755018	Identifier	intern		3754952	0					
ANR	3755019	Identifier	array		3754952	1					
ANR	3755020	Identifier	NULL		3754952	1					
ANR	3755021	RelationalExpression	index >= intern -> array -> size		3754952	1		>=			
ANR	3755022	Identifier	index		3754952	0					
ANR	3755023	PtrMemberAccess	intern -> array -> size		3754952	1					
ANR	3755024	PtrMemberAccess	intern -> array		3754952	0					
ANR	3755025	Identifier	intern		3754952	0					
ANR	3755026	Identifier	array		3754952	1					
ANR	3755027	Identifier	size		3754952	1					
ANR	3755028	CompoundStatement		17:73:451:451	3754952	1					
ANR	3755029	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"	345:2:10806:10887	3754952	0	True				
ANR	3755030	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"		3754952	0					
ANR	3755031	Callee	zend_throw_exception		3754952	0					
ANR	3755032	Identifier	zend_throw_exception		3754952	0					
ANR	3755033	ArgumentList	spl_ce_RuntimeException		3754952	1					
ANR	3755034	Argument	spl_ce_RuntimeException		3754952	0					
ANR	3755035	Identifier	spl_ce_RuntimeException		3754952	0					
ANR	3755036	Argument	"""Index invalid or out of range"""		3754952	1					
ANR	3755037	PrimaryExpression	"""Index invalid or out of range"""		3754952	0					
ANR	3755038	Argument	0		3754952	2					
ANR	3755039	PrimaryExpression	0		3754952	0					
ANR	3755040	ReturnStatement	return NULL ;	346:2:10891:10902	3754952	1	True				
ANR	3755041	Identifier	NULL		3754952	0					
ANR	3755042	ElseStatement	else		3754952	0					
ANR	3755043	IfStatement	if ( Z_ISUNDEF ( intern -> array -> elements [ index ] ) )		3754952	0					
ANR	3755044	Condition	Z_ISUNDEF ( intern -> array -> elements [ index ] )	347:12:10916:10956	3754952	0	True				
ANR	3755045	CallExpression	Z_ISUNDEF ( intern -> array -> elements [ index ] )		3754952	0					
ANR	3755046	Callee	Z_ISUNDEF		3754952	0					
ANR	3755047	Identifier	Z_ISUNDEF		3754952	0					
ANR	3755048	ArgumentList	intern -> array -> elements [ index ]		3754952	1					
ANR	3755049	Argument	intern -> array -> elements [ index ]		3754952	0					
ANR	3755050	ArrayIndexing	intern -> array -> elements [ index ]		3754952	0					
ANR	3755051	PtrMemberAccess	intern -> array -> elements		3754952	0					
ANR	3755052	PtrMemberAccess	intern -> array		3754952	0					
ANR	3755053	Identifier	intern		3754952	0					
ANR	3755054	Identifier	array		3754952	1					
ANR	3755055	Identifier	elements		3754952	1					
ANR	3755056	Identifier	index		3754952	1					
ANR	3755057	CompoundStatement		20:55:608:608	3754952	1					
ANR	3755058	ReturnStatement	return NULL ;	348:2:10963:10974	3754952	0	True				
ANR	3755059	Identifier	NULL		3754952	0					
ANR	3755060	ElseStatement	else		3754952	0					
ANR	3755061	CompoundStatement		22:8:633:633	3754952	0					
ANR	3755062	ReturnStatement	return & intern -> array -> elements [ index ] ;	350:2:10988:11026	3754952	0	True				
ANR	3755063	UnaryOperationExpression	& intern -> array -> elements [ index ]		3754952	0					
ANR	3755064	UnaryOperator	&		3754952	0					
ANR	3755065	ArrayIndexing	intern -> array -> elements [ index ]		3754952	1					
ANR	3755066	PtrMemberAccess	intern -> array -> elements		3754952	0					
ANR	3755067	PtrMemberAccess	intern -> array		3754952	0					
ANR	3755068	Identifier	intern		3754952	0					
ANR	3755069	Identifier	array		3754952	1					
ANR	3755070	Identifier	elements		3754952	1					
ANR	3755071	Identifier	index		3754952	1					
ANR	3755072	ReturnType	static inline zval *		3754952	1					
ANR	3755073	Identifier	spl_fixedarray_object_read_dimension_helper		3754952	2					
ANR	3755074	ParameterList	"spl_fixedarray_object * intern , zval * offset"		3754952	3					
ANR	3755075	Parameter	spl_fixedarray_object * intern	327:64:10295:10323	3754952	0	True				
ANR	3755076	ParameterType	spl_fixedarray_object *		3754952	0					
ANR	3755077	Identifier	intern		3754952	1					
ANR	3755078	Parameter	zval * offset	327:95:10326:10337	3754952	1	True				
ANR	3755079	ParameterType	zval *		3754952	0					
ANR	3755080	Identifier	offset		3754952	1					
ANR	3755081	CFGEntryNode	ENTRY		3754952		True				
ANR	3755082	CFGExitNode	EXIT		3754952		True				
ANR	3755083	Symbol	intern -> array -> elements		3754952						
ANR	3755084	Symbol	* intern		3754952						
ANR	3755085	Symbol	intern -> array -> size		3754952						
ANR	3755086	Symbol	intern		3754952						
ANR	3755087	Symbol	NULL		3754952						
ANR	3755088	Symbol	offset		3754952						
ANR	3755089	Symbol	Z_ISUNDEF		3754952						
ANR	3755090	Symbol	* index		3754952						
ANR	3755091	Symbol	index		3754952						
ANR	3755092	Symbol	intern -> array		3754952						
ANR	3755093	Symbol	* * * intern		3754952						
ANR	3755094	Symbol	Z_TYPE_P		3754952						
ANR	3755095	Symbol	Z_LVAL_P		3754952						
ANR	3755096	Symbol	* intern -> array		3754952						
ANR	3755097	Symbol	* * intern -> array		3754952						
ANR	3755098	Symbol	* intern -> array -> elements		3754952						
ANR	3755099	Symbol	spl_offset_convert_to_long		3754952						
ANR	3755100	Symbol	IS_LONG		3754952						
ANR	3755101	Symbol	* * intern		3754952						
ANR	3755102	Symbol	spl_ce_RuntimeException		3754952						
ANR	3755103	Function	spl_fixedarray_object_read_dimension	355:0:11044:11657							
ANR	3755104	FunctionDef	"spl_fixedarray_object_read_dimension (zval * object , zval * offset , int type , zval * rv)"		3755103	0					
ANR	3755105	CompoundStatement		356:0:11152:11657	3755103	0					
ANR	3755106	IdentifierDeclStatement	spl_fixedarray_object * intern ;	357:1:11155:11184	3755103	0	True				
ANR	3755107	IdentifierDecl	* intern		3755103	0					
ANR	3755108	IdentifierDeclType	spl_fixedarray_object *		3755103	0					
ANR	3755109	Identifier	intern		3755103	1					
ANR	3755110	ExpressionStatement	intern = Z_SPLFIXEDARRAY_P ( object )	359:1:11188:11222	3755103	1	True				
ANR	3755111	AssignmentExpression	intern = Z_SPLFIXEDARRAY_P ( object )		3755103	0		=			
ANR	3755112	Identifier	intern		3755103	0					
ANR	3755113	CallExpression	Z_SPLFIXEDARRAY_P ( object )		3755103	1					
ANR	3755114	Callee	Z_SPLFIXEDARRAY_P		3755103	0					
ANR	3755115	Identifier	Z_SPLFIXEDARRAY_P		3755103	0					
ANR	3755116	ArgumentList	object		3755103	1					
ANR	3755117	Argument	object		3755103	0					
ANR	3755118	Identifier	object		3755103	0					
ANR	3755119	IfStatement	if ( intern -> fptr_offset_get )		3755103	2					
ANR	3755120	Condition	intern -> fptr_offset_get	361:5:11230:11252	3755103	0	True				
ANR	3755121	PtrMemberAccess	intern -> fptr_offset_get		3755103	0					
ANR	3755122	Identifier	intern		3755103	0					
ANR	3755123	Identifier	fptr_offset_get		3755103	1					
ANR	3755124	CompoundStatement		7:2:106:114	3755103	1					
ANR	3755125	IdentifierDeclStatement	zval tmp ;	362:2:11259:11267	3755103	0	True				
ANR	3755126	IdentifierDecl	tmp		3755103	0					
ANR	3755127	IdentifierDeclType	zval		3755103	0					
ANR	3755128	Identifier	tmp		3755103	1					
ANR	3755129	IfStatement	if ( ! offset )		3755103	1					
ANR	3755130	Condition	! offset	363:6:11275:11281	3755103	0	True				
ANR	3755131	UnaryOperationExpression	! offset		3755103	0					
ANR	3755132	UnaryOperator	!		3755103	0					
ANR	3755133	Identifier	offset		3755103	1					
ANR	3755134	CompoundStatement		8:15:131:131	3755103	1					
ANR	3755135	ExpressionStatement	ZVAL_UNDEF ( & tmp )	364:3:11289:11305	3755103	0	True				
ANR	3755136	CallExpression	ZVAL_UNDEF ( & tmp )		3755103	0					
ANR	3755137	Callee	ZVAL_UNDEF		3755103	0					
ANR	3755138	Identifier	ZVAL_UNDEF		3755103	0					
ANR	3755139	ArgumentList	& tmp		3755103	1					
ANR	3755140	Argument	& tmp		3755103	0					
ANR	3755141	UnaryOperationExpression	& tmp		3755103	0					
ANR	3755142	UnaryOperator	&		3755103	0					
ANR	3755143	Identifier	tmp		3755103	1					
ANR	3755144	ExpressionStatement	offset = & tmp	365:3:11310:11323	3755103	1	True				
ANR	3755145	AssignmentExpression	offset = & tmp		3755103	0		=			
ANR	3755146	Identifier	offset		3755103	0					
ANR	3755147	UnaryOperationExpression	& tmp		3755103	1					
ANR	3755148	UnaryOperator	&		3755103	0					
ANR	3755149	Identifier	tmp		3755103	1					
ANR	3755150	ElseStatement	else		3755103	0					
ANR	3755151	CompoundStatement		11:9:181:181	3755103	0					
ANR	3755152	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	367:3:11339:11366	3755103	0	True				
ANR	3755153	CallExpression	SEPARATE_ARG_IF_REF ( offset )		3755103	0					
ANR	3755154	Callee	SEPARATE_ARG_IF_REF		3755103	0					
ANR	3755155	Identifier	SEPARATE_ARG_IF_REF		3755103	0					
ANR	3755156	ArgumentList	offset		3755103	1					
ANR	3755157	Argument	offset		3755103	0					
ANR	3755158	Identifier	offset		3755103	0					
ANR	3755159	ExpressionStatement	"zend_call_method_with_1_params ( object , intern -> std . ce , & intern -> fptr_offset_get , ""offsetGet"" , rv , offset )"	369:2:11374:11479	3755103	2	True				
ANR	3755160	CallExpression	"zend_call_method_with_1_params ( object , intern -> std . ce , & intern -> fptr_offset_get , ""offsetGet"" , rv , offset )"		3755103	0					
ANR	3755161	Callee	zend_call_method_with_1_params		3755103	0					
ANR	3755162	Identifier	zend_call_method_with_1_params		3755103	0					
ANR	3755163	ArgumentList	object		3755103	1					
ANR	3755164	Argument	object		3755103	0					
ANR	3755165	Identifier	object		3755103	0					
ANR	3755166	Argument	intern -> std . ce		3755103	1					
ANR	3755167	MemberAccess	intern -> std . ce		3755103	0					
ANR	3755168	PtrMemberAccess	intern -> std		3755103	0					
ANR	3755169	Identifier	intern		3755103	0					
ANR	3755170	Identifier	std		3755103	1					
ANR	3755171	Identifier	ce		3755103	1					
ANR	3755172	Argument	& intern -> fptr_offset_get		3755103	2					
ANR	3755173	UnaryOperationExpression	& intern -> fptr_offset_get		3755103	0					
ANR	3755174	UnaryOperator	&		3755103	0					
ANR	3755175	PtrMemberAccess	intern -> fptr_offset_get		3755103	1					
ANR	3755176	Identifier	intern		3755103	0					
ANR	3755177	Identifier	fptr_offset_get		3755103	1					
ANR	3755178	Argument	"""offsetGet"""		3755103	3					
ANR	3755179	PrimaryExpression	"""offsetGet"""		3755103	0					
ANR	3755180	Argument	rv		3755103	4					
ANR	3755181	Identifier	rv		3755103	0					
ANR	3755182	Argument	offset		3755103	5					
ANR	3755183	Identifier	offset		3755103	0					
ANR	3755184	ExpressionStatement	zval_ptr_dtor ( offset )	370:2:11483:11504	3755103	3	True				
ANR	3755185	CallExpression	zval_ptr_dtor ( offset )		3755103	0					
ANR	3755186	Callee	zval_ptr_dtor		3755103	0					
ANR	3755187	Identifier	zval_ptr_dtor		3755103	0					
ANR	3755188	ArgumentList	offset		3755103	1					
ANR	3755189	Argument	offset		3755103	0					
ANR	3755190	Identifier	offset		3755103	0					
ANR	3755191	IfStatement	if ( ! Z_ISUNDEF_P ( rv ) )		3755103	4					
ANR	3755192	Condition	! Z_ISUNDEF_P ( rv )	371:6:11512:11527	3755103	0	True				
ANR	3755193	UnaryOperationExpression	! Z_ISUNDEF_P ( rv )		3755103	0					
ANR	3755194	UnaryOperator	!		3755103	0					
ANR	3755195	CallExpression	Z_ISUNDEF_P ( rv )		3755103	1					
ANR	3755196	Callee	Z_ISUNDEF_P		3755103	0					
ANR	3755197	Identifier	Z_ISUNDEF_P		3755103	0					
ANR	3755198	ArgumentList	rv		3755103	1					
ANR	3755199	Argument	rv		3755103	0					
ANR	3755200	Identifier	rv		3755103	0					
ANR	3755201	CompoundStatement		16:24:377:377	3755103	1					
ANR	3755202	ReturnStatement	return rv ;	372:3:11535:11544	3755103	0	True				
ANR	3755203	Identifier	rv		3755103	0					
ANR	3755204	ReturnStatement	return & EG ( uninitialized_zval ) ;	374:2:11552:11582	3755103	5	True				
ANR	3755205	UnaryOperationExpression	& EG ( uninitialized_zval )		3755103	0					
ANR	3755206	UnaryOperator	&		3755103	0					
ANR	3755207	CallExpression	EG ( uninitialized_zval )		3755103	1					
ANR	3755208	Callee	EG		3755103	0					
ANR	3755209	Identifier	EG		3755103	0					
ANR	3755210	ArgumentList	uninitialized_zval		3755103	1					
ANR	3755211	Argument	uninitialized_zval		3755103	0					
ANR	3755212	Identifier	uninitialized_zval		3755103	0					
ANR	3755213	ReturnStatement	"return spl_fixedarray_object_read_dimension_helper ( intern , offset ) ;"	377:1:11589:11655	3755103	3	True				
ANR	3755214	CallExpression	"spl_fixedarray_object_read_dimension_helper ( intern , offset )"		3755103	0					
ANR	3755215	Callee	spl_fixedarray_object_read_dimension_helper		3755103	0					
ANR	3755216	Identifier	spl_fixedarray_object_read_dimension_helper		3755103	0					
ANR	3755217	ArgumentList	intern		3755103	1					
ANR	3755218	Argument	intern		3755103	0					
ANR	3755219	Identifier	intern		3755103	0					
ANR	3755220	Argument	offset		3755103	1					
ANR	3755221	Identifier	offset		3755103	0					
ANR	3755222	ReturnType	static zval *		3755103	1					
ANR	3755223	Identifier	spl_fixedarray_object_read_dimension		3755103	2					
ANR	3755224	ParameterList	"zval * object , zval * offset , int type , zval * rv"		3755103	3					
ANR	3755225	Parameter	zval * object	355:50:11094:11105	3755103	0	True				
ANR	3755226	ParameterType	zval *		3755103	0					
ANR	3755227	Identifier	object		3755103	1					
ANR	3755228	Parameter	zval * offset	355:64:11108:11119	3755103	1	True				
ANR	3755229	ParameterType	zval *		3755103	0					
ANR	3755230	Identifier	offset		3755103	1					
ANR	3755231	Parameter	int type	355:78:11122:11129	3755103	2	True				
ANR	3755232	ParameterType	int		3755103	0					
ANR	3755233	Identifier	type		3755103	1					
ANR	3755234	Parameter	zval * rv	355:88:11132:11139	3755103	3	True				
ANR	3755235	ParameterType	zval *		3755103	0					
ANR	3755236	Identifier	rv		3755103	1					
ANR	3755237	CFGEntryNode	ENTRY		3755103		True				
ANR	3755238	CFGExitNode	EXIT		3755103		True				
ANR	3755239	Symbol	uninitialized_zval		3755103						
ANR	3755240	Symbol	Z_SPLFIXEDARRAY_P		3755103						
ANR	3755241	Symbol	* intern		3755103						
ANR	3755242	Symbol	intern		3755103						
ANR	3755243	Symbol	offset		3755103						
ANR	3755244	Symbol	rv		3755103						
ANR	3755245	Symbol	intern -> fptr_offset_get		3755103						
ANR	3755246	Symbol	type		3755103						
ANR	3755247	Symbol	& EG		3755103						
ANR	3755248	Symbol	intern -> std		3755103						
ANR	3755249	Symbol	intern -> std . ce		3755103						
ANR	3755250	Symbol	spl_fixedarray_object_read_dimension_helper		3755103						
ANR	3755251	Symbol	tmp		3755103						
ANR	3755252	Symbol	Z_ISUNDEF_P		3755103						
ANR	3755253	Symbol	& tmp		3755103						
ANR	3755254	Symbol	& intern -> fptr_offset_get		3755103						
ANR	3755255	Symbol	object		3755103						
ANR	3755256	Function	spl_fixedarray_object_write_dimension_helper	381:0:11670:12479							
ANR	3755257	FunctionDef	"spl_fixedarray_object_write_dimension_helper (spl_fixedarray_object * intern , zval * offset , zval * value)"		3755256	0					
ANR	3755258	CompoundStatement		382:0:11802:12479	3755256	0					
ANR	3755259	IdentifierDeclStatement	zend_long index ;	383:1:11805:11820	3755256	0	True				
ANR	3755260	IdentifierDecl	index		3755256	0					
ANR	3755261	IdentifierDeclType	zend_long		3755256	0					
ANR	3755262	Identifier	index		3755256	1					
ANR	3755263	IfStatement	if ( ! offset )		3755256	1					
ANR	3755264	Condition	! offset	385:5:11828:11834	3755256	0	True				
ANR	3755265	UnaryOperationExpression	! offset		3755256	0					
ANR	3755266	UnaryOperator	!		3755256	0					
ANR	3755267	Identifier	offset		3755256	1					
ANR	3755268	CompoundStatement		4:14:34:34	3755256	1					
ANR	3755269	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"	387:2:11892:11973	3755256	0	True				
ANR	3755270	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"		3755256	0					
ANR	3755271	Callee	zend_throw_exception		3755256	0					
ANR	3755272	Identifier	zend_throw_exception		3755256	0					
ANR	3755273	ArgumentList	spl_ce_RuntimeException		3755256	1					
ANR	3755274	Argument	spl_ce_RuntimeException		3755256	0					
ANR	3755275	Identifier	spl_ce_RuntimeException		3755256	0					
ANR	3755276	Argument	"""Index invalid or out of range"""		3755256	1					
ANR	3755277	PrimaryExpression	"""Index invalid or out of range"""		3755256	0					
ANR	3755278	Argument	0		3755256	2					
ANR	3755279	PrimaryExpression	0		3755256	0					
ANR	3755280	ReturnStatement	return ;	388:2:11977:11983	3755256	1	True				
ANR	3755281	IfStatement	if ( Z_TYPE_P ( offset ) != IS_LONG )		3755256	2					
ANR	3755282	Condition	Z_TYPE_P ( offset ) != IS_LONG	391:5:11994:12020	3755256	0	True				
ANR	3755283	EqualityExpression	Z_TYPE_P ( offset ) != IS_LONG		3755256	0		!=			
ANR	3755284	CallExpression	Z_TYPE_P ( offset )		3755256	0					
ANR	3755285	Callee	Z_TYPE_P		3755256	0					
ANR	3755286	Identifier	Z_TYPE_P		3755256	0					
ANR	3755287	ArgumentList	offset		3755256	1					
ANR	3755288	Argument	offset		3755256	0					
ANR	3755289	Identifier	offset		3755256	0					
ANR	3755290	Identifier	IS_LONG		3755256	1					
ANR	3755291	CompoundStatement		10:34:220:220	3755256	1					
ANR	3755292	ExpressionStatement	index = spl_offset_convert_to_long ( offset )	392:2:12027:12069	3755256	0	True				
ANR	3755293	AssignmentExpression	index = spl_offset_convert_to_long ( offset )		3755256	0		=			
ANR	3755294	Identifier	index		3755256	0					
ANR	3755295	CallExpression	spl_offset_convert_to_long ( offset )		3755256	1					
ANR	3755296	Callee	spl_offset_convert_to_long		3755256	0					
ANR	3755297	Identifier	spl_offset_convert_to_long		3755256	0					
ANR	3755298	ArgumentList	offset		3755256	1					
ANR	3755299	Argument	offset		3755256	0					
ANR	3755300	Identifier	offset		3755256	0					
ANR	3755301	ElseStatement	else		3755256	0					
ANR	3755302	CompoundStatement		12:8:276:276	3755256	0					
ANR	3755303	ExpressionStatement	index = Z_LVAL_P ( offset )	394:2:12083:12107	3755256	0	True				
ANR	3755304	AssignmentExpression	index = Z_LVAL_P ( offset )		3755256	0		=			
ANR	3755305	Identifier	index		3755256	0					
ANR	3755306	CallExpression	Z_LVAL_P ( offset )		3755256	1					
ANR	3755307	Callee	Z_LVAL_P		3755256	0					
ANR	3755308	Identifier	Z_LVAL_P		3755256	0					
ANR	3755309	ArgumentList	offset		3755256	1					
ANR	3755310	Argument	offset		3755256	0					
ANR	3755311	Identifier	offset		3755256	0					
ANR	3755312	IfStatement	if ( index < 0 || intern -> array == NULL || index >= intern -> array -> size )		3755256	3					
ANR	3755313	Condition	index < 0 || intern -> array == NULL || index >= intern -> array -> size	397:5:12118:12183	3755256	0	True				
ANR	3755314	OrExpression	index < 0 || intern -> array == NULL || index >= intern -> array -> size		3755256	0		||			
ANR	3755315	RelationalExpression	index < 0		3755256	0		<			
ANR	3755316	Identifier	index		3755256	0					
ANR	3755317	PrimaryExpression	0		3755256	1					
ANR	3755318	OrExpression	intern -> array == NULL || index >= intern -> array -> size		3755256	1		||			
ANR	3755319	EqualityExpression	intern -> array == NULL		3755256	0		==			
ANR	3755320	PtrMemberAccess	intern -> array		3755256	0					
ANR	3755321	Identifier	intern		3755256	0					
ANR	3755322	Identifier	array		3755256	1					
ANR	3755323	Identifier	NULL		3755256	1					
ANR	3755324	RelationalExpression	index >= intern -> array -> size		3755256	1		>=			
ANR	3755325	Identifier	index		3755256	0					
ANR	3755326	PtrMemberAccess	intern -> array -> size		3755256	1					
ANR	3755327	PtrMemberAccess	intern -> array		3755256	0					
ANR	3755328	Identifier	intern		3755256	0					
ANR	3755329	Identifier	array		3755256	1					
ANR	3755330	Identifier	size		3755256	1					
ANR	3755331	CompoundStatement		16:73:383:383	3755256	1					
ANR	3755332	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"	398:2:12190:12271	3755256	0	True				
ANR	3755333	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"		3755256	0					
ANR	3755334	Callee	zend_throw_exception		3755256	0					
ANR	3755335	Identifier	zend_throw_exception		3755256	0					
ANR	3755336	ArgumentList	spl_ce_RuntimeException		3755256	1					
ANR	3755337	Argument	spl_ce_RuntimeException		3755256	0					
ANR	3755338	Identifier	spl_ce_RuntimeException		3755256	0					
ANR	3755339	Argument	"""Index invalid or out of range"""		3755256	1					
ANR	3755340	PrimaryExpression	"""Index invalid or out of range"""		3755256	0					
ANR	3755341	Argument	0		3755256	2					
ANR	3755342	PrimaryExpression	0		3755256	0					
ANR	3755343	ReturnStatement	return ;	399:2:12275:12281	3755256	1	True				
ANR	3755344	ElseStatement	else		3755256	0					
ANR	3755345	CompoundStatement		19:8:488:488	3755256	0					
ANR	3755346	IfStatement	if ( ! Z_ISUNDEF ( intern -> array -> elements [ index ] ) )		3755256	0					
ANR	3755347	Condition	! Z_ISUNDEF ( intern -> array -> elements [ index ] )	401:6:12299:12340	3755256	0	True				
ANR	3755348	UnaryOperationExpression	! Z_ISUNDEF ( intern -> array -> elements [ index ] )		3755256	0					
ANR	3755349	UnaryOperator	!		3755256	0					
ANR	3755350	CallExpression	Z_ISUNDEF ( intern -> array -> elements [ index ] )		3755256	1					
ANR	3755351	Callee	Z_ISUNDEF		3755256	0					
ANR	3755352	Identifier	Z_ISUNDEF		3755256	0					
ANR	3755353	ArgumentList	intern -> array -> elements [ index ]		3755256	1					
ANR	3755354	Argument	intern -> array -> elements [ index ]		3755256	0					
ANR	3755355	ArrayIndexing	intern -> array -> elements [ index ]		3755256	0					
ANR	3755356	PtrMemberAccess	intern -> array -> elements		3755256	0					
ANR	3755357	PtrMemberAccess	intern -> array		3755256	0					
ANR	3755358	Identifier	intern		3755256	0					
ANR	3755359	Identifier	array		3755256	1					
ANR	3755360	Identifier	elements		3755256	1					
ANR	3755361	Identifier	index		3755256	1					
ANR	3755362	CompoundStatement		20:50:540:540	3755256	1					
ANR	3755363	ExpressionStatement	zval_ptr_dtor ( & ( intern -> array -> elements [ index ] ) )	402:3:12348:12396	3755256	0	True				
ANR	3755364	CallExpression	zval_ptr_dtor ( & ( intern -> array -> elements [ index ] ) )		3755256	0					
ANR	3755365	Callee	zval_ptr_dtor		3755256	0					
ANR	3755366	Identifier	zval_ptr_dtor		3755256	0					
ANR	3755367	ArgumentList	& ( intern -> array -> elements [ index ] )		3755256	1					
ANR	3755368	Argument	& ( intern -> array -> elements [ index ] )		3755256	0					
ANR	3755369	UnaryOperationExpression	& ( intern -> array -> elements [ index ] )		3755256	0					
ANR	3755370	UnaryOperator	&		3755256	0					
ANR	3755371	ArrayIndexing	intern -> array -> elements [ index ]		3755256	1					
ANR	3755372	PtrMemberAccess	intern -> array -> elements		3755256	0					
ANR	3755373	PtrMemberAccess	intern -> array		3755256	0					
ANR	3755374	Identifier	intern		3755256	0					
ANR	3755375	Identifier	array		3755256	1					
ANR	3755376	Identifier	elements		3755256	1					
ANR	3755377	Identifier	index		3755256	1					
ANR	3755378	ExpressionStatement	ZVAL_DEREF ( value )	404:2:12404:12421	3755256	1	True				
ANR	3755379	CallExpression	ZVAL_DEREF ( value )		3755256	0					
ANR	3755380	Callee	ZVAL_DEREF		3755256	0					
ANR	3755381	Identifier	ZVAL_DEREF		3755256	0					
ANR	3755382	ArgumentList	value		3755256	1					
ANR	3755383	Argument	value		3755256	0					
ANR	3755384	Identifier	value		3755256	0					
ANR	3755385	ExpressionStatement	"ZVAL_COPY ( & intern -> array -> elements [ index ] , value )"	405:2:12425:12474	3755256	2	True				
ANR	3755386	CallExpression	"ZVAL_COPY ( & intern -> array -> elements [ index ] , value )"		3755256	0					
ANR	3755387	Callee	ZVAL_COPY		3755256	0					
ANR	3755388	Identifier	ZVAL_COPY		3755256	0					
ANR	3755389	ArgumentList	& intern -> array -> elements [ index ]		3755256	1					
ANR	3755390	Argument	& intern -> array -> elements [ index ]		3755256	0					
ANR	3755391	UnaryOperationExpression	& intern -> array -> elements [ index ]		3755256	0					
ANR	3755392	UnaryOperator	&		3755256	0					
ANR	3755393	ArrayIndexing	intern -> array -> elements [ index ]		3755256	1					
ANR	3755394	PtrMemberAccess	intern -> array -> elements		3755256	0					
ANR	3755395	PtrMemberAccess	intern -> array		3755256	0					
ANR	3755396	Identifier	intern		3755256	0					
ANR	3755397	Identifier	array		3755256	1					
ANR	3755398	Identifier	elements		3755256	1					
ANR	3755399	Identifier	index		3755256	1					
ANR	3755400	Argument	value		3755256	1					
ANR	3755401	Identifier	value		3755256	0					
ANR	3755402	ReturnType	static inline void		3755256	1					
ANR	3755403	Identifier	spl_fixedarray_object_write_dimension_helper		3755256	2					
ANR	3755404	ParameterList	"spl_fixedarray_object * intern , zval * offset , zval * value"		3755256	3					
ANR	3755405	Parameter	spl_fixedarray_object * intern	381:64:11734:11762	3755256	0	True				
ANR	3755406	ParameterType	spl_fixedarray_object *		3755256	0					
ANR	3755407	Identifier	intern		3755256	1					
ANR	3755408	Parameter	zval * offset	381:95:11765:11776	3755256	1	True				
ANR	3755409	ParameterType	zval *		3755256	0					
ANR	3755410	Identifier	offset		3755256	1					
ANR	3755411	Parameter	zval * value	381:109:11779:11789	3755256	2	True				
ANR	3755412	ParameterType	zval *		3755256	0					
ANR	3755413	Identifier	value		3755256	1					
ANR	3755414	CFGEntryNode	ENTRY		3755256		True				
ANR	3755415	CFGExitNode	EXIT		3755256		True				
ANR	3755416	Symbol	intern -> array -> elements		3755256						
ANR	3755417	Symbol	* intern		3755256						
ANR	3755418	Symbol	intern -> array -> size		3755256						
ANR	3755419	Symbol	intern		3755256						
ANR	3755420	Symbol	NULL		3755256						
ANR	3755421	Symbol	offset		3755256						
ANR	3755422	Symbol	Z_ISUNDEF		3755256						
ANR	3755423	Symbol	* index		3755256						
ANR	3755424	Symbol	index		3755256						
ANR	3755425	Symbol	intern -> array		3755256						
ANR	3755426	Symbol	* * * intern		3755256						
ANR	3755427	Symbol	Z_TYPE_P		3755256						
ANR	3755428	Symbol	Z_LVAL_P		3755256						
ANR	3755429	Symbol	* intern -> array		3755256						
ANR	3755430	Symbol	* * intern -> array		3755256						
ANR	3755431	Symbol	* intern -> array -> elements		3755256						
ANR	3755432	Symbol	spl_offset_convert_to_long		3755256						
ANR	3755433	Symbol	IS_LONG		3755256						
ANR	3755434	Symbol	* * intern		3755256						
ANR	3755435	Symbol	spl_ce_RuntimeException		3755256						
ANR	3755436	Symbol	value		3755256						
ANR	3755437	Function	spl_fixedarray_object_write_dimension	410:0:12492:13093							
ANR	3755438	FunctionDef	"spl_fixedarray_object_write_dimension (zval * object , zval * offset , zval * value)"		3755437	0					
ANR	3755439	CompoundStatement		411:0:12593:13093	3755437	0					
ANR	3755440	IdentifierDeclStatement	spl_fixedarray_object * intern ;	412:1:12596:12625	3755437	0	True				
ANR	3755441	IdentifierDecl	* intern		3755437	0					
ANR	3755442	IdentifierDeclType	spl_fixedarray_object *		3755437	0					
ANR	3755443	Identifier	intern		3755437	1					
ANR	3755444	ExpressionStatement	intern = Z_SPLFIXEDARRAY_P ( object )	414:1:12629:12663	3755437	1	True				
ANR	3755445	AssignmentExpression	intern = Z_SPLFIXEDARRAY_P ( object )		3755437	0		=			
ANR	3755446	Identifier	intern		3755437	0					
ANR	3755447	CallExpression	Z_SPLFIXEDARRAY_P ( object )		3755437	1					
ANR	3755448	Callee	Z_SPLFIXEDARRAY_P		3755437	0					
ANR	3755449	Identifier	Z_SPLFIXEDARRAY_P		3755437	0					
ANR	3755450	ArgumentList	object		3755437	1					
ANR	3755451	Argument	object		3755437	0					
ANR	3755452	Identifier	object		3755437	0					
ANR	3755453	IfStatement	if ( intern -> fptr_offset_set )		3755437	2					
ANR	3755454	Condition	intern -> fptr_offset_set	416:5:12671:12693	3755437	0	True				
ANR	3755455	PtrMemberAccess	intern -> fptr_offset_set		3755437	0					
ANR	3755456	Identifier	intern		3755437	0					
ANR	3755457	Identifier	fptr_offset_set		3755437	1					
ANR	3755458	CompoundStatement		7:2:106:114	3755437	1					
ANR	3755459	IdentifierDeclStatement	zval tmp ;	417:2:12700:12708	3755437	0	True				
ANR	3755460	IdentifierDecl	tmp		3755437	0					
ANR	3755461	IdentifierDeclType	zval		3755437	0					
ANR	3755462	Identifier	tmp		3755437	1					
ANR	3755463	IfStatement	if ( ! offset )		3755437	1					
ANR	3755464	Condition	! offset	418:6:12716:12722	3755437	0	True				
ANR	3755465	UnaryOperationExpression	! offset		3755437	0					
ANR	3755466	UnaryOperator	!		3755437	0					
ANR	3755467	Identifier	offset		3755437	1					
ANR	3755468	CompoundStatement		8:15:131:131	3755437	1					
ANR	3755469	ExpressionStatement	ZVAL_NULL ( & tmp )	419:3:12730:12745	3755437	0	True				
ANR	3755470	CallExpression	ZVAL_NULL ( & tmp )		3755437	0					
ANR	3755471	Callee	ZVAL_NULL		3755437	0					
ANR	3755472	Identifier	ZVAL_NULL		3755437	0					
ANR	3755473	ArgumentList	& tmp		3755437	1					
ANR	3755474	Argument	& tmp		3755437	0					
ANR	3755475	UnaryOperationExpression	& tmp		3755437	0					
ANR	3755476	UnaryOperator	&		3755437	0					
ANR	3755477	Identifier	tmp		3755437	1					
ANR	3755478	ExpressionStatement	offset = & tmp	420:3:12750:12763	3755437	1	True				
ANR	3755479	AssignmentExpression	offset = & tmp		3755437	0		=			
ANR	3755480	Identifier	offset		3755437	0					
ANR	3755481	UnaryOperationExpression	& tmp		3755437	1					
ANR	3755482	UnaryOperator	&		3755437	0					
ANR	3755483	Identifier	tmp		3755437	1					
ANR	3755484	ElseStatement	else		3755437	0					
ANR	3755485	CompoundStatement		11:9:180:180	3755437	0					
ANR	3755486	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	422:3:12779:12806	3755437	0	True				
ANR	3755487	CallExpression	SEPARATE_ARG_IF_REF ( offset )		3755437	0					
ANR	3755488	Callee	SEPARATE_ARG_IF_REF		3755437	0					
ANR	3755489	Identifier	SEPARATE_ARG_IF_REF		3755437	0					
ANR	3755490	ArgumentList	offset		3755437	1					
ANR	3755491	Argument	offset		3755437	0					
ANR	3755492	Identifier	offset		3755437	0					
ANR	3755493	ExpressionStatement	SEPARATE_ARG_IF_REF ( value )	424:2:12814:12840	3755437	2	True				
ANR	3755494	CallExpression	SEPARATE_ARG_IF_REF ( value )		3755437	0					
ANR	3755495	Callee	SEPARATE_ARG_IF_REF		3755437	0					
ANR	3755496	Identifier	SEPARATE_ARG_IF_REF		3755437	0					
ANR	3755497	ArgumentList	value		3755437	1					
ANR	3755498	Argument	value		3755437	0					
ANR	3755499	Identifier	value		3755437	0					
ANR	3755500	ExpressionStatement	"zend_call_method_with_2_params ( object , intern -> std . ce , & intern -> fptr_offset_set , ""offsetSet"" , NULL , offset , value )"	425:2:12844:12958	3755437	3	True				
ANR	3755501	CallExpression	"zend_call_method_with_2_params ( object , intern -> std . ce , & intern -> fptr_offset_set , ""offsetSet"" , NULL , offset , value )"		3755437	0					
ANR	3755502	Callee	zend_call_method_with_2_params		3755437	0					
ANR	3755503	Identifier	zend_call_method_with_2_params		3755437	0					
ANR	3755504	ArgumentList	object		3755437	1					
ANR	3755505	Argument	object		3755437	0					
ANR	3755506	Identifier	object		3755437	0					
ANR	3755507	Argument	intern -> std . ce		3755437	1					
ANR	3755508	MemberAccess	intern -> std . ce		3755437	0					
ANR	3755509	PtrMemberAccess	intern -> std		3755437	0					
ANR	3755510	Identifier	intern		3755437	0					
ANR	3755511	Identifier	std		3755437	1					
ANR	3755512	Identifier	ce		3755437	1					
ANR	3755513	Argument	& intern -> fptr_offset_set		3755437	2					
ANR	3755514	UnaryOperationExpression	& intern -> fptr_offset_set		3755437	0					
ANR	3755515	UnaryOperator	&		3755437	0					
ANR	3755516	PtrMemberAccess	intern -> fptr_offset_set		3755437	1					
ANR	3755517	Identifier	intern		3755437	0					
ANR	3755518	Identifier	fptr_offset_set		3755437	1					
ANR	3755519	Argument	"""offsetSet"""		3755437	3					
ANR	3755520	PrimaryExpression	"""offsetSet"""		3755437	0					
ANR	3755521	Argument	NULL		3755437	4					
ANR	3755522	Identifier	NULL		3755437	0					
ANR	3755523	Argument	offset		3755437	5					
ANR	3755524	Identifier	offset		3755437	0					
ANR	3755525	Argument	value		3755437	6					
ANR	3755526	Identifier	value		3755437	0					
ANR	3755527	ExpressionStatement	zval_ptr_dtor ( value )	426:2:12962:12982	3755437	4	True				
ANR	3755528	CallExpression	zval_ptr_dtor ( value )		3755437	0					
ANR	3755529	Callee	zval_ptr_dtor		3755437	0					
ANR	3755530	Identifier	zval_ptr_dtor		3755437	0					
ANR	3755531	ArgumentList	value		3755437	1					
ANR	3755532	Argument	value		3755437	0					
ANR	3755533	Identifier	value		3755437	0					
ANR	3755534	ExpressionStatement	zval_ptr_dtor ( offset )	427:2:12986:13007	3755437	5	True				
ANR	3755535	CallExpression	zval_ptr_dtor ( offset )		3755437	0					
ANR	3755536	Callee	zval_ptr_dtor		3755437	0					
ANR	3755537	Identifier	zval_ptr_dtor		3755437	0					
ANR	3755538	ArgumentList	offset		3755437	1					
ANR	3755539	Argument	offset		3755437	0					
ANR	3755540	Identifier	offset		3755437	0					
ANR	3755541	ReturnStatement	return ;	428:2:13011:13017	3755437	6	True				
ANR	3755542	ExpressionStatement	"spl_fixedarray_object_write_dimension_helper ( intern , offset , value )"	431:1:13024:13091	3755437	3	True				
ANR	3755543	CallExpression	"spl_fixedarray_object_write_dimension_helper ( intern , offset , value )"		3755437	0					
ANR	3755544	Callee	spl_fixedarray_object_write_dimension_helper		3755437	0					
ANR	3755545	Identifier	spl_fixedarray_object_write_dimension_helper		3755437	0					
ANR	3755546	ArgumentList	intern		3755437	1					
ANR	3755547	Argument	intern		3755437	0					
ANR	3755548	Identifier	intern		3755437	0					
ANR	3755549	Argument	offset		3755437	1					
ANR	3755550	Identifier	offset		3755437	0					
ANR	3755551	Argument	value		3755437	2					
ANR	3755552	Identifier	value		3755437	0					
ANR	3755553	ReturnType	static void		3755437	1					
ANR	3755554	Identifier	spl_fixedarray_object_write_dimension		3755437	2					
ANR	3755555	ParameterList	"zval * object , zval * offset , zval * value"		3755437	3					
ANR	3755556	Parameter	zval * object	410:50:12542:12553	3755437	0	True				
ANR	3755557	ParameterType	zval *		3755437	0					
ANR	3755558	Identifier	object		3755437	1					
ANR	3755559	Parameter	zval * offset	410:64:12556:12567	3755437	1	True				
ANR	3755560	ParameterType	zval *		3755437	0					
ANR	3755561	Identifier	offset		3755437	1					
ANR	3755562	Parameter	zval * value	410:78:12570:12580	3755437	2	True				
ANR	3755563	ParameterType	zval *		3755437	0					
ANR	3755564	Identifier	value		3755437	1					
ANR	3755565	CFGEntryNode	ENTRY		3755437		True				
ANR	3755566	CFGExitNode	EXIT		3755437		True				
ANR	3755567	Symbol	Z_SPLFIXEDARRAY_P		3755437						
ANR	3755568	Symbol	* intern		3755437						
ANR	3755569	Symbol	intern		3755437						
ANR	3755570	Symbol	NULL		3755437						
ANR	3755571	Symbol	offset		3755437						
ANR	3755572	Symbol	intern -> fptr_offset_set		3755437						
ANR	3755573	Symbol	& intern -> fptr_offset_set		3755437						
ANR	3755574	Symbol	intern -> std . ce		3755437						
ANR	3755575	Symbol	intern -> std		3755437						
ANR	3755576	Symbol	tmp		3755437						
ANR	3755577	Symbol	& tmp		3755437						
ANR	3755578	Symbol	value		3755437						
ANR	3755579	Symbol	object		3755437						
ANR	3755580	Function	spl_fixedarray_object_unset_dimension_helper	435:0:13106:13652							
ANR	3755581	FunctionDef	"spl_fixedarray_object_unset_dimension_helper (spl_fixedarray_object * intern , zval * offset)"		3755580	0					
ANR	3755582	CompoundStatement		436:0:13225:13652	3755580	0					
ANR	3755583	IdentifierDeclStatement	zend_long index ;	437:1:13228:13243	3755580	0	True				
ANR	3755584	IdentifierDecl	index		3755580	0					
ANR	3755585	IdentifierDeclType	zend_long		3755580	0					
ANR	3755586	Identifier	index		3755580	1					
ANR	3755587	IfStatement	if ( Z_TYPE_P ( offset ) != IS_LONG )		3755580	1					
ANR	3755588	Condition	Z_TYPE_P ( offset ) != IS_LONG	439:5:13251:13277	3755580	0	True				
ANR	3755589	EqualityExpression	Z_TYPE_P ( offset ) != IS_LONG		3755580	0		!=			
ANR	3755590	CallExpression	Z_TYPE_P ( offset )		3755580	0					
ANR	3755591	Callee	Z_TYPE_P		3755580	0					
ANR	3755592	Identifier	Z_TYPE_P		3755580	0					
ANR	3755593	ArgumentList	offset		3755580	1					
ANR	3755594	Argument	offset		3755580	0					
ANR	3755595	Identifier	offset		3755580	0					
ANR	3755596	Identifier	IS_LONG		3755580	1					
ANR	3755597	CompoundStatement		4:34:54:54	3755580	1					
ANR	3755598	ExpressionStatement	index = spl_offset_convert_to_long ( offset )	440:2:13284:13326	3755580	0	True				
ANR	3755599	AssignmentExpression	index = spl_offset_convert_to_long ( offset )		3755580	0		=			
ANR	3755600	Identifier	index		3755580	0					
ANR	3755601	CallExpression	spl_offset_convert_to_long ( offset )		3755580	1					
ANR	3755602	Callee	spl_offset_convert_to_long		3755580	0					
ANR	3755603	Identifier	spl_offset_convert_to_long		3755580	0					
ANR	3755604	ArgumentList	offset		3755580	1					
ANR	3755605	Argument	offset		3755580	0					
ANR	3755606	Identifier	offset		3755580	0					
ANR	3755607	ElseStatement	else		3755580	0					
ANR	3755608	CompoundStatement		6:8:110:110	3755580	0					
ANR	3755609	ExpressionStatement	index = Z_LVAL_P ( offset )	442:2:13340:13364	3755580	0	True				
ANR	3755610	AssignmentExpression	index = Z_LVAL_P ( offset )		3755580	0		=			
ANR	3755611	Identifier	index		3755580	0					
ANR	3755612	CallExpression	Z_LVAL_P ( offset )		3755580	1					
ANR	3755613	Callee	Z_LVAL_P		3755580	0					
ANR	3755614	Identifier	Z_LVAL_P		3755580	0					
ANR	3755615	ArgumentList	offset		3755580	1					
ANR	3755616	Argument	offset		3755580	0					
ANR	3755617	Identifier	offset		3755580	0					
ANR	3755618	IfStatement	if ( index < 0 || intern -> array == NULL || index >= intern -> array -> size )		3755580	2					
ANR	3755619	Condition	index < 0 || intern -> array == NULL || index >= intern -> array -> size	445:5:13375:13440	3755580	0	True				
ANR	3755620	OrExpression	index < 0 || intern -> array == NULL || index >= intern -> array -> size		3755580	0		||			
ANR	3755621	RelationalExpression	index < 0		3755580	0		<			
ANR	3755622	Identifier	index		3755580	0					
ANR	3755623	PrimaryExpression	0		3755580	1					
ANR	3755624	OrExpression	intern -> array == NULL || index >= intern -> array -> size		3755580	1		||			
ANR	3755625	EqualityExpression	intern -> array == NULL		3755580	0		==			
ANR	3755626	PtrMemberAccess	intern -> array		3755580	0					
ANR	3755627	Identifier	intern		3755580	0					
ANR	3755628	Identifier	array		3755580	1					
ANR	3755629	Identifier	NULL		3755580	1					
ANR	3755630	RelationalExpression	index >= intern -> array -> size		3755580	1		>=			
ANR	3755631	Identifier	index		3755580	0					
ANR	3755632	PtrMemberAccess	intern -> array -> size		3755580	1					
ANR	3755633	PtrMemberAccess	intern -> array		3755580	0					
ANR	3755634	Identifier	intern		3755580	0					
ANR	3755635	Identifier	array		3755580	1					
ANR	3755636	Identifier	size		3755580	1					
ANR	3755637	CompoundStatement		10:73:217:217	3755580	1					
ANR	3755638	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"	446:2:13447:13528	3755580	0	True				
ANR	3755639	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Index invalid or out of range"" , 0 )"		3755580	0					
ANR	3755640	Callee	zend_throw_exception		3755580	0					
ANR	3755641	Identifier	zend_throw_exception		3755580	0					
ANR	3755642	ArgumentList	spl_ce_RuntimeException		3755580	1					
ANR	3755643	Argument	spl_ce_RuntimeException		3755580	0					
ANR	3755644	Identifier	spl_ce_RuntimeException		3755580	0					
ANR	3755645	Argument	"""Index invalid or out of range"""		3755580	1					
ANR	3755646	PrimaryExpression	"""Index invalid or out of range"""		3755580	0					
ANR	3755647	Argument	0		3755580	2					
ANR	3755648	PrimaryExpression	0		3755580	0					
ANR	3755649	ReturnStatement	return ;	447:2:13532:13538	3755580	1	True				
ANR	3755650	ElseStatement	else		3755580	0					
ANR	3755651	CompoundStatement		13:8:322:322	3755580	0					
ANR	3755652	ExpressionStatement	zval_ptr_dtor ( & ( intern -> array -> elements [ index ] ) )	449:2:13552:13600	3755580	0	True				
ANR	3755653	CallExpression	zval_ptr_dtor ( & ( intern -> array -> elements [ index ] ) )		3755580	0					
ANR	3755654	Callee	zval_ptr_dtor		3755580	0					
ANR	3755655	Identifier	zval_ptr_dtor		3755580	0					
ANR	3755656	ArgumentList	& ( intern -> array -> elements [ index ] )		3755580	1					
ANR	3755657	Argument	& ( intern -> array -> elements [ index ] )		3755580	0					
ANR	3755658	UnaryOperationExpression	& ( intern -> array -> elements [ index ] )		3755580	0					
ANR	3755659	UnaryOperator	&		3755580	0					
ANR	3755660	ArrayIndexing	intern -> array -> elements [ index ]		3755580	1					
ANR	3755661	PtrMemberAccess	intern -> array -> elements		3755580	0					
ANR	3755662	PtrMemberAccess	intern -> array		3755580	0					
ANR	3755663	Identifier	intern		3755580	0					
ANR	3755664	Identifier	array		3755580	1					
ANR	3755665	Identifier	elements		3755580	1					
ANR	3755666	Identifier	index		3755580	1					
ANR	3755667	ExpressionStatement	ZVAL_UNDEF ( & intern -> array -> elements [ index ] )	450:2:13604:13647	3755580	1	True				
ANR	3755668	CallExpression	ZVAL_UNDEF ( & intern -> array -> elements [ index ] )		3755580	0					
ANR	3755669	Callee	ZVAL_UNDEF		3755580	0					
ANR	3755670	Identifier	ZVAL_UNDEF		3755580	0					
ANR	3755671	ArgumentList	& intern -> array -> elements [ index ]		3755580	1					
ANR	3755672	Argument	& intern -> array -> elements [ index ]		3755580	0					
ANR	3755673	UnaryOperationExpression	& intern -> array -> elements [ index ]		3755580	0					
ANR	3755674	UnaryOperator	&		3755580	0					
ANR	3755675	ArrayIndexing	intern -> array -> elements [ index ]		3755580	1					
ANR	3755676	PtrMemberAccess	intern -> array -> elements		3755580	0					
ANR	3755677	PtrMemberAccess	intern -> array		3755580	0					
ANR	3755678	Identifier	intern		3755580	0					
ANR	3755679	Identifier	array		3755580	1					
ANR	3755680	Identifier	elements		3755580	1					
ANR	3755681	Identifier	index		3755580	1					
ANR	3755682	ReturnType	static inline void		3755580	1					
ANR	3755683	Identifier	spl_fixedarray_object_unset_dimension_helper		3755580	2					
ANR	3755684	ParameterList	"spl_fixedarray_object * intern , zval * offset"		3755580	3					
ANR	3755685	Parameter	spl_fixedarray_object * intern	435:64:13170:13198	3755580	0	True				
ANR	3755686	ParameterType	spl_fixedarray_object *		3755580	0					
ANR	3755687	Identifier	intern		3755580	1					
ANR	3755688	Parameter	zval * offset	435:95:13201:13212	3755580	1	True				
ANR	3755689	ParameterType	zval *		3755580	0					
ANR	3755690	Identifier	offset		3755580	1					
ANR	3755691	CFGEntryNode	ENTRY		3755580		True				
ANR	3755692	CFGExitNode	EXIT		3755580		True				
ANR	3755693	Symbol	intern -> array -> elements		3755580						
ANR	3755694	Symbol	* intern		3755580						
ANR	3755695	Symbol	intern -> array -> size		3755580						
ANR	3755696	Symbol	intern		3755580						
ANR	3755697	Symbol	NULL		3755580						
ANR	3755698	Symbol	offset		3755580						
ANR	3755699	Symbol	index		3755580						
ANR	3755700	Symbol	intern -> array		3755580						
ANR	3755701	Symbol	Z_TYPE_P		3755580						
ANR	3755702	Symbol	Z_LVAL_P		3755580						
ANR	3755703	Symbol	* intern -> array		3755580						
ANR	3755704	Symbol	spl_offset_convert_to_long		3755580						
ANR	3755705	Symbol	IS_LONG		3755580						
ANR	3755706	Symbol	* * intern		3755580						
ANR	3755707	Symbol	spl_ce_RuntimeException		3755580						
ANR	3755708	Function	spl_fixedarray_object_unset_dimension	455:0:13665:14105							
ANR	3755709	FunctionDef	"spl_fixedarray_object_unset_dimension (zval * object , zval * offset)"		3755708	0					
ANR	3755710	CompoundStatement		456:0:13753:14105	3755708	0					
ANR	3755711	IdentifierDeclStatement	spl_fixedarray_object * intern ;	457:1:13756:13785	3755708	0	True				
ANR	3755712	IdentifierDecl	* intern		3755708	0					
ANR	3755713	IdentifierDeclType	spl_fixedarray_object *		3755708	0					
ANR	3755714	Identifier	intern		3755708	1					
ANR	3755715	ExpressionStatement	intern = Z_SPLFIXEDARRAY_P ( object )	459:1:13789:13823	3755708	1	True				
ANR	3755716	AssignmentExpression	intern = Z_SPLFIXEDARRAY_P ( object )		3755708	0		=			
ANR	3755717	Identifier	intern		3755708	0					
ANR	3755718	CallExpression	Z_SPLFIXEDARRAY_P ( object )		3755708	1					
ANR	3755719	Callee	Z_SPLFIXEDARRAY_P		3755708	0					
ANR	3755720	Identifier	Z_SPLFIXEDARRAY_P		3755708	0					
ANR	3755721	ArgumentList	object		3755708	1					
ANR	3755722	Argument	object		3755708	0					
ANR	3755723	Identifier	object		3755708	0					
ANR	3755724	IfStatement	if ( intern -> fptr_offset_del )		3755708	2					
ANR	3755725	Condition	intern -> fptr_offset_del	461:5:13831:13853	3755708	0	True				
ANR	3755726	PtrMemberAccess	intern -> fptr_offset_del		3755708	0					
ANR	3755727	Identifier	intern		3755708	0					
ANR	3755728	Identifier	fptr_offset_del		3755708	1					
ANR	3755729	CompoundStatement		6:30:102:102	3755708	1					
ANR	3755730	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	462:2:13860:13887	3755708	0	True				
ANR	3755731	CallExpression	SEPARATE_ARG_IF_REF ( offset )		3755708	0					
ANR	3755732	Callee	SEPARATE_ARG_IF_REF		3755708	0					
ANR	3755733	Identifier	SEPARATE_ARG_IF_REF		3755708	0					
ANR	3755734	ArgumentList	offset		3755708	1					
ANR	3755735	Argument	offset		3755708	0					
ANR	3755736	Identifier	offset		3755708	0					
ANR	3755737	ExpressionStatement	"zend_call_method_with_1_params ( object , intern -> std . ce , & intern -> fptr_offset_del , ""offsetUnset"" , NULL , offset )"	463:2:13891:14000	3755708	1	True				
ANR	3755738	CallExpression	"zend_call_method_with_1_params ( object , intern -> std . ce , & intern -> fptr_offset_del , ""offsetUnset"" , NULL , offset )"		3755708	0					
ANR	3755739	Callee	zend_call_method_with_1_params		3755708	0					
ANR	3755740	Identifier	zend_call_method_with_1_params		3755708	0					
ANR	3755741	ArgumentList	object		3755708	1					
ANR	3755742	Argument	object		3755708	0					
ANR	3755743	Identifier	object		3755708	0					
ANR	3755744	Argument	intern -> std . ce		3755708	1					
ANR	3755745	MemberAccess	intern -> std . ce		3755708	0					
ANR	3755746	PtrMemberAccess	intern -> std		3755708	0					
ANR	3755747	Identifier	intern		3755708	0					
ANR	3755748	Identifier	std		3755708	1					
ANR	3755749	Identifier	ce		3755708	1					
ANR	3755750	Argument	& intern -> fptr_offset_del		3755708	2					
ANR	3755751	UnaryOperationExpression	& intern -> fptr_offset_del		3755708	0					
ANR	3755752	UnaryOperator	&		3755708	0					
ANR	3755753	PtrMemberAccess	intern -> fptr_offset_del		3755708	1					
ANR	3755754	Identifier	intern		3755708	0					
ANR	3755755	Identifier	fptr_offset_del		3755708	1					
ANR	3755756	Argument	"""offsetUnset"""		3755708	3					
ANR	3755757	PrimaryExpression	"""offsetUnset"""		3755708	0					
ANR	3755758	Argument	NULL		3755708	4					
ANR	3755759	Identifier	NULL		3755708	0					
ANR	3755760	Argument	offset		3755708	5					
ANR	3755761	Identifier	offset		3755708	0					
ANR	3755762	ExpressionStatement	zval_ptr_dtor ( offset )	464:2:14004:14025	3755708	2	True				
ANR	3755763	CallExpression	zval_ptr_dtor ( offset )		3755708	0					
ANR	3755764	Callee	zval_ptr_dtor		3755708	0					
ANR	3755765	Identifier	zval_ptr_dtor		3755708	0					
ANR	3755766	ArgumentList	offset		3755708	1					
ANR	3755767	Argument	offset		3755708	0					
ANR	3755768	Identifier	offset		3755708	0					
ANR	3755769	ReturnStatement	return ;	465:2:14029:14035	3755708	3	True				
ANR	3755770	ExpressionStatement	"spl_fixedarray_object_unset_dimension_helper ( intern , offset )"	468:1:14042:14102	3755708	3	True				
ANR	3755771	CallExpression	"spl_fixedarray_object_unset_dimension_helper ( intern , offset )"		3755708	0					
ANR	3755772	Callee	spl_fixedarray_object_unset_dimension_helper		3755708	0					
ANR	3755773	Identifier	spl_fixedarray_object_unset_dimension_helper		3755708	0					
ANR	3755774	ArgumentList	intern		3755708	1					
ANR	3755775	Argument	intern		3755708	0					
ANR	3755776	Identifier	intern		3755708	0					
ANR	3755777	Argument	offset		3755708	1					
ANR	3755778	Identifier	offset		3755708	0					
ANR	3755779	ReturnType	static void		3755708	1					
ANR	3755780	Identifier	spl_fixedarray_object_unset_dimension		3755708	2					
ANR	3755781	ParameterList	"zval * object , zval * offset"		3755708	3					
ANR	3755782	Parameter	zval * object	455:50:13715:13726	3755708	0	True				
ANR	3755783	ParameterType	zval *		3755708	0					
ANR	3755784	Identifier	object		3755708	1					
ANR	3755785	Parameter	zval * offset	455:64:13729:13740	3755708	1	True				
ANR	3755786	ParameterType	zval *		3755708	0					
ANR	3755787	Identifier	offset		3755708	1					
ANR	3755788	CFGEntryNode	ENTRY		3755708		True				
ANR	3755789	CFGExitNode	EXIT		3755708		True				
ANR	3755790	Symbol	Z_SPLFIXEDARRAY_P		3755708						
ANR	3755791	Symbol	* intern		3755708						
ANR	3755792	Symbol	intern -> std		3755708						
ANR	3755793	Symbol	intern -> std . ce		3755708						
ANR	3755794	Symbol	intern		3755708						
ANR	3755795	Symbol	intern -> fptr_offset_del		3755708						
ANR	3755796	Symbol	NULL		3755708						
ANR	3755797	Symbol	& intern -> fptr_offset_del		3755708						
ANR	3755798	Symbol	offset		3755708						
ANR	3755799	Symbol	object		3755708						
ANR	3755800	Function	spl_fixedarray_object_has_dimension_helper	473:0:14118:14788							
ANR	3755801	FunctionDef	"spl_fixedarray_object_has_dimension_helper (spl_fixedarray_object * intern , zval * offset , int check_empty)"		3755800	0					
ANR	3755802	CompoundStatement		474:0:14251:14788	3755800	0					
ANR	3755803	IdentifierDeclStatement	zend_long index ;	475:1:14254:14269	3755800	0	True				
ANR	3755804	IdentifierDecl	index		3755800	0					
ANR	3755805	IdentifierDeclType	zend_long		3755800	0					
ANR	3755806	Identifier	index		3755800	1					
ANR	3755807	IdentifierDeclStatement	int retval ;	476:1:14272:14282	3755800	1	True				
ANR	3755808	IdentifierDecl	retval		3755800	0					
ANR	3755809	IdentifierDeclType	int		3755800	0					
ANR	3755810	Identifier	retval		3755800	1					
ANR	3755811	IfStatement	if ( Z_TYPE_P ( offset ) != IS_LONG )		3755800	2					
ANR	3755812	Condition	Z_TYPE_P ( offset ) != IS_LONG	478:5:14290:14316	3755800	0	True				
ANR	3755813	EqualityExpression	Z_TYPE_P ( offset ) != IS_LONG		3755800	0		!=			
ANR	3755814	CallExpression	Z_TYPE_P ( offset )		3755800	0					
ANR	3755815	Callee	Z_TYPE_P		3755800	0					
ANR	3755816	Identifier	Z_TYPE_P		3755800	0					
ANR	3755817	ArgumentList	offset		3755800	1					
ANR	3755818	Argument	offset		3755800	0					
ANR	3755819	Identifier	offset		3755800	0					
ANR	3755820	Identifier	IS_LONG		3755800	1					
ANR	3755821	CompoundStatement		5:34:67:67	3755800	1					
ANR	3755822	ExpressionStatement	index = spl_offset_convert_to_long ( offset )	479:2:14323:14365	3755800	0	True				
ANR	3755823	AssignmentExpression	index = spl_offset_convert_to_long ( offset )		3755800	0		=			
ANR	3755824	Identifier	index		3755800	0					
ANR	3755825	CallExpression	spl_offset_convert_to_long ( offset )		3755800	1					
ANR	3755826	Callee	spl_offset_convert_to_long		3755800	0					
ANR	3755827	Identifier	spl_offset_convert_to_long		3755800	0					
ANR	3755828	ArgumentList	offset		3755800	1					
ANR	3755829	Argument	offset		3755800	0					
ANR	3755830	Identifier	offset		3755800	0					
ANR	3755831	ElseStatement	else		3755800	0					
ANR	3755832	CompoundStatement		7:8:123:123	3755800	0					
ANR	3755833	ExpressionStatement	index = Z_LVAL_P ( offset )	481:2:14379:14403	3755800	0	True				
ANR	3755834	AssignmentExpression	index = Z_LVAL_P ( offset )		3755800	0		=			
ANR	3755835	Identifier	index		3755800	0					
ANR	3755836	CallExpression	Z_LVAL_P ( offset )		3755800	1					
ANR	3755837	Callee	Z_LVAL_P		3755800	0					
ANR	3755838	Identifier	Z_LVAL_P		3755800	0					
ANR	3755839	ArgumentList	offset		3755800	1					
ANR	3755840	Argument	offset		3755800	0					
ANR	3755841	Identifier	offset		3755800	0					
ANR	3755842	IfStatement	if ( index < 0 || intern -> array == NULL || index >= intern -> array -> size )		3755800	3					
ANR	3755843	Condition	index < 0 || intern -> array == NULL || index >= intern -> array -> size	484:5:14414:14479	3755800	0	True				
ANR	3755844	OrExpression	index < 0 || intern -> array == NULL || index >= intern -> array -> size		3755800	0		||			
ANR	3755845	RelationalExpression	index < 0		3755800	0		<			
ANR	3755846	Identifier	index		3755800	0					
ANR	3755847	PrimaryExpression	0		3755800	1					
ANR	3755848	OrExpression	intern -> array == NULL || index >= intern -> array -> size		3755800	1		||			
ANR	3755849	EqualityExpression	intern -> array == NULL		3755800	0		==			
ANR	3755850	PtrMemberAccess	intern -> array		3755800	0					
ANR	3755851	Identifier	intern		3755800	0					
ANR	3755852	Identifier	array		3755800	1					
ANR	3755853	Identifier	NULL		3755800	1					
ANR	3755854	RelationalExpression	index >= intern -> array -> size		3755800	1		>=			
ANR	3755855	Identifier	index		3755800	0					
ANR	3755856	PtrMemberAccess	intern -> array -> size		3755800	1					
ANR	3755857	PtrMemberAccess	intern -> array		3755800	0					
ANR	3755858	Identifier	intern		3755800	0					
ANR	3755859	Identifier	array		3755800	1					
ANR	3755860	Identifier	size		3755800	1					
ANR	3755861	CompoundStatement		11:73:230:230	3755800	1					
ANR	3755862	ExpressionStatement	retval = 0	485:2:14486:14496	3755800	0	True				
ANR	3755863	AssignmentExpression	retval = 0		3755800	0		=			
ANR	3755864	Identifier	retval		3755800	0					
ANR	3755865	PrimaryExpression	0		3755800	1					
ANR	3755866	ElseStatement	else		3755800	0					
ANR	3755867	CompoundStatement		13:8:254:254	3755800	0					
ANR	3755868	IfStatement	if ( Z_ISUNDEF ( intern -> array -> elements [ index ] ) )		3755800	0					
ANR	3755869	Condition	Z_ISUNDEF ( intern -> array -> elements [ index ] )	487:6:14514:14554	3755800	0	True				
ANR	3755870	CallExpression	Z_ISUNDEF ( intern -> array -> elements [ index ] )		3755800	0					
ANR	3755871	Callee	Z_ISUNDEF		3755800	0					
ANR	3755872	Identifier	Z_ISUNDEF		3755800	0					
ANR	3755873	ArgumentList	intern -> array -> elements [ index ]		3755800	1					
ANR	3755874	Argument	intern -> array -> elements [ index ]		3755800	0					
ANR	3755875	ArrayIndexing	intern -> array -> elements [ index ]		3755800	0					
ANR	3755876	PtrMemberAccess	intern -> array -> elements		3755800	0					
ANR	3755877	PtrMemberAccess	intern -> array		3755800	0					
ANR	3755878	Identifier	intern		3755800	0					
ANR	3755879	Identifier	array		3755800	1					
ANR	3755880	Identifier	elements		3755800	1					
ANR	3755881	Identifier	index		3755800	1					
ANR	3755882	CompoundStatement		14:49:305:305	3755800	1					
ANR	3755883	ExpressionStatement	retval = 0	488:3:14562:14572	3755800	0	True				
ANR	3755884	AssignmentExpression	retval = 0		3755800	0		=			
ANR	3755885	Identifier	retval		3755800	0					
ANR	3755886	PrimaryExpression	0		3755800	1					
ANR	3755887	ElseStatement	else		3755800	0					
ANR	3755888	IfStatement	if ( check_empty )		3755800	0					
ANR	3755889	Condition	check_empty	489:13:14587:14597	3755800	0	True				
ANR	3755890	Identifier	check_empty		3755800	0					
ANR	3755891	CompoundStatement		16:26:348:348	3755800	1					
ANR	3755892	IfStatement	if ( zend_is_true ( & intern -> array -> elements [ index ] ) )		3755800	0					
ANR	3755893	Condition	zend_is_true ( & intern -> array -> elements [ index ] )	490:7:14609:14653	3755800	0	True				
ANR	3755894	CallExpression	zend_is_true ( & intern -> array -> elements [ index ] )		3755800	0					
ANR	3755895	Callee	zend_is_true		3755800	0					
ANR	3755896	Identifier	zend_is_true		3755800	0					
ANR	3755897	ArgumentList	& intern -> array -> elements [ index ]		3755800	1					
ANR	3755898	Argument	& intern -> array -> elements [ index ]		3755800	0					
ANR	3755899	UnaryOperationExpression	& intern -> array -> elements [ index ]		3755800	0					
ANR	3755900	UnaryOperator	&		3755800	0					
ANR	3755901	ArrayIndexing	intern -> array -> elements [ index ]		3755800	1					
ANR	3755902	PtrMemberAccess	intern -> array -> elements		3755800	0					
ANR	3755903	PtrMemberAccess	intern -> array		3755800	0					
ANR	3755904	Identifier	intern		3755800	0					
ANR	3755905	Identifier	array		3755800	1					
ANR	3755906	Identifier	elements		3755800	1					
ANR	3755907	Identifier	index		3755800	1					
ANR	3755908	CompoundStatement		17:54:404:404	3755800	1					
ANR	3755909	ExpressionStatement	retval = 1	491:4:14662:14672	3755800	0	True				
ANR	3755910	AssignmentExpression	retval = 1		3755800	0		=			
ANR	3755911	Identifier	retval		3755800	0					
ANR	3755912	PrimaryExpression	1		3755800	1					
ANR	3755913	ElseStatement	else		3755800	0					
ANR	3755914	CompoundStatement		19:10:432:432	3755800	0					
ANR	3755915	ExpressionStatement	retval = 0	493:4:14690:14700	3755800	0	True				
ANR	3755916	AssignmentExpression	retval = 0		3755800	0		=			
ANR	3755917	Identifier	retval		3755800	0					
ANR	3755918	PrimaryExpression	0		3755800	1					
ANR	3755919	ElseStatement	else		3755800	0					
ANR	3755920	CompoundStatement		22:9:464:464	3755800	0					
ANR	3755921	ExpressionStatement	retval = 1	496:3:14752:14762	3755800	0	True				
ANR	3755922	AssignmentExpression	retval = 1		3755800	0		=			
ANR	3755923	Identifier	retval		3755800	0					
ANR	3755924	PrimaryExpression	1		3755800	1					
ANR	3755925	ReturnStatement	return retval ;	500:1:14773:14786	3755800	4	True				
ANR	3755926	Identifier	retval		3755800	0					
ANR	3755927	ReturnType	static inline int		3755800	1					
ANR	3755928	Identifier	spl_fixedarray_object_has_dimension_helper		3755800	2					
ANR	3755929	ParameterList	"spl_fixedarray_object * intern , zval * offset , int check_empty"		3755800	3					
ANR	3755930	Parameter	spl_fixedarray_object * intern	473:61:14179:14207	3755800	0	True				
ANR	3755931	ParameterType	spl_fixedarray_object *		3755800	0					
ANR	3755932	Identifier	intern		3755800	1					
ANR	3755933	Parameter	zval * offset	473:92:14210:14221	3755800	1	True				
ANR	3755934	ParameterType	zval *		3755800	0					
ANR	3755935	Identifier	offset		3755800	1					
ANR	3755936	Parameter	int check_empty	473:106:14224:14238	3755800	2	True				
ANR	3755937	ParameterType	int		3755800	0					
ANR	3755938	Identifier	check_empty		3755800	1					
ANR	3755939	CFGEntryNode	ENTRY		3755800		True				
ANR	3755940	CFGExitNode	EXIT		3755800		True				
ANR	3755941	Symbol	intern -> array -> elements		3755800						
ANR	3755942	Symbol	* intern		3755800						
ANR	3755943	Symbol	check_empty		3755800						
ANR	3755944	Symbol	intern -> array -> size		3755800						
ANR	3755945	Symbol	intern		3755800						
ANR	3755946	Symbol	NULL		3755800						
ANR	3755947	Symbol	offset		3755800						
ANR	3755948	Symbol	* index		3755800						
ANR	3755949	Symbol	Z_ISUNDEF		3755800						
ANR	3755950	Symbol	index		3755800						
ANR	3755951	Symbol	intern -> array		3755800						
ANR	3755952	Symbol	* * * intern		3755800						
ANR	3755953	Symbol	Z_TYPE_P		3755800						
ANR	3755954	Symbol	retval		3755800						
ANR	3755955	Symbol	Z_LVAL_P		3755800						
ANR	3755956	Symbol	* intern -> array		3755800						
ANR	3755957	Symbol	* * intern -> array		3755800						
ANR	3755958	Symbol	* intern -> array -> elements		3755800						
ANR	3755959	Symbol	spl_offset_convert_to_long		3755800						
ANR	3755960	Symbol	IS_LONG		3755800						
ANR	3755961	Symbol	* * intern		3755800						
ANR	3755962	Symbol	zend_is_true		3755800						
ANR	3755963	Function	spl_fixedarray_object_has_dimension	504:0:14801:15395							
ANR	3755964	FunctionDef	"spl_fixedarray_object_has_dimension (zval * object , zval * offset , int check_empty)"		3755963	0					
ANR	3755965	CompoundStatement		505:0:14903:15395	3755963	0					
ANR	3755966	IdentifierDeclStatement	spl_fixedarray_object * intern ;	506:1:14906:14935	3755963	0	True				
ANR	3755967	IdentifierDecl	* intern		3755963	0					
ANR	3755968	IdentifierDeclType	spl_fixedarray_object *		3755963	0					
ANR	3755969	Identifier	intern		3755963	1					
ANR	3755970	ExpressionStatement	intern = Z_SPLFIXEDARRAY_P ( object )	508:1:14939:14973	3755963	1	True				
ANR	3755971	AssignmentExpression	intern = Z_SPLFIXEDARRAY_P ( object )		3755963	0		=			
ANR	3755972	Identifier	intern		3755963	0					
ANR	3755973	CallExpression	Z_SPLFIXEDARRAY_P ( object )		3755963	1					
ANR	3755974	Callee	Z_SPLFIXEDARRAY_P		3755963	0					
ANR	3755975	Identifier	Z_SPLFIXEDARRAY_P		3755963	0					
ANR	3755976	ArgumentList	object		3755963	1					
ANR	3755977	Argument	object		3755963	0					
ANR	3755978	Identifier	object		3755963	0					
ANR	3755979	IfStatement	if ( intern -> fptr_offset_get )		3755963	2					
ANR	3755980	Condition	intern -> fptr_offset_get	510:5:14981:15003	3755963	0	True				
ANR	3755981	PtrMemberAccess	intern -> fptr_offset_get		3755963	0					
ANR	3755982	Identifier	intern		3755963	0					
ANR	3755983	Identifier	fptr_offset_get		3755963	1					
ANR	3755984	CompoundStatement		7:2:106:113	3755963	1					
ANR	3755985	IdentifierDeclStatement	zval rv ;	511:2:15010:15017	3755963	0	True				
ANR	3755986	IdentifierDecl	rv		3755963	0					
ANR	3755987	IdentifierDeclType	zval		3755963	0					
ANR	3755988	Identifier	rv		3755963	1					
ANR	3755989	ExpressionStatement	SEPARATE_ARG_IF_REF ( offset )	512:2:15021:15048	3755963	1	True				
ANR	3755990	CallExpression	SEPARATE_ARG_IF_REF ( offset )		3755963	0					
ANR	3755991	Callee	SEPARATE_ARG_IF_REF		3755963	0					
ANR	3755992	Identifier	SEPARATE_ARG_IF_REF		3755963	0					
ANR	3755993	ArgumentList	offset		3755963	1					
ANR	3755994	Argument	offset		3755963	0					
ANR	3755995	Identifier	offset		3755963	0					
ANR	3755996	ExpressionStatement	"zend_call_method_with_1_params ( object , intern -> std . ce , & intern -> fptr_offset_has , ""offsetExists"" , & rv , offset )"	513:2:15052:15161	3755963	2	True				
ANR	3755997	CallExpression	"zend_call_method_with_1_params ( object , intern -> std . ce , & intern -> fptr_offset_has , ""offsetExists"" , & rv , offset )"		3755963	0					
ANR	3755998	Callee	zend_call_method_with_1_params		3755963	0					
ANR	3755999	Identifier	zend_call_method_with_1_params		3755963	0					
ANR	3756000	ArgumentList	object		3755963	1					
ANR	3756001	Argument	object		3755963	0					
ANR	3756002	Identifier	object		3755963	0					
ANR	3756003	Argument	intern -> std . ce		3755963	1					
ANR	3756004	MemberAccess	intern -> std . ce		3755963	0					
ANR	3756005	PtrMemberAccess	intern -> std		3755963	0					
ANR	3756006	Identifier	intern		3755963	0					
ANR	3756007	Identifier	std		3755963	1					
ANR	3756008	Identifier	ce		3755963	1					
ANR	3756009	Argument	& intern -> fptr_offset_has		3755963	2					
ANR	3756010	UnaryOperationExpression	& intern -> fptr_offset_has		3755963	0					
ANR	3756011	UnaryOperator	&		3755963	0					
ANR	3756012	PtrMemberAccess	intern -> fptr_offset_has		3755963	1					
ANR	3756013	Identifier	intern		3755963	0					
ANR	3756014	Identifier	fptr_offset_has		3755963	1					
ANR	3756015	Argument	"""offsetExists"""		3755963	3					
ANR	3756016	PrimaryExpression	"""offsetExists"""		3755963	0					
ANR	3756017	Argument	& rv		3755963	4					
ANR	3756018	UnaryOperationExpression	& rv		3755963	0					
ANR	3756019	UnaryOperator	&		3755963	0					
ANR	3756020	Identifier	rv		3755963	1					
ANR	3756021	Argument	offset		3755963	5					
ANR	3756022	Identifier	offset		3755963	0					
ANR	3756023	ExpressionStatement	zval_ptr_dtor ( offset )	514:2:15165:15186	3755963	3	True				
ANR	3756024	CallExpression	zval_ptr_dtor ( offset )		3755963	0					
ANR	3756025	Callee	zval_ptr_dtor		3755963	0					
ANR	3756026	Identifier	zval_ptr_dtor		3755963	0					
ANR	3756027	ArgumentList	offset		3755963	1					
ANR	3756028	Argument	offset		3755963	0					
ANR	3756029	Identifier	offset		3755963	0					
ANR	3756030	IfStatement	if ( ! Z_ISUNDEF ( rv ) )		3755963	4					
ANR	3756031	Condition	! Z_ISUNDEF ( rv )	515:6:15194:15207	3755963	0	True				
ANR	3756032	UnaryOperationExpression	! Z_ISUNDEF ( rv )		3755963	0					
ANR	3756033	UnaryOperator	!		3755963	0					
ANR	3756034	CallExpression	Z_ISUNDEF ( rv )		3755963	1					
ANR	3756035	Callee	Z_ISUNDEF		3755963	0					
ANR	3756036	Identifier	Z_ISUNDEF		3755963	0					
ANR	3756037	ArgumentList	rv		3755963	1					
ANR	3756038	Argument	rv		3755963	0					
ANR	3756039	Identifier	rv		3755963	0					
ANR	3756040	CompoundStatement		12:3:311:347	3755963	1					
ANR	3756041	IdentifierDeclStatement	zend_bool result = zend_is_true ( & rv ) ;	516:3:15215:15251	3755963	0	True				
ANR	3756042	IdentifierDecl	result = zend_is_true ( & rv )		3755963	0					
ANR	3756043	IdentifierDeclType	zend_bool		3755963	0					
ANR	3756044	Identifier	result		3755963	1					
ANR	3756045	AssignmentExpression	result = zend_is_true ( & rv )		3755963	2		=			
ANR	3756046	Identifier	result		3755963	0					
ANR	3756047	CallExpression	zend_is_true ( & rv )		3755963	1					
ANR	3756048	Callee	zend_is_true		3755963	0					
ANR	3756049	Identifier	zend_is_true		3755963	0					
ANR	3756050	ArgumentList	& rv		3755963	1					
ANR	3756051	Argument	& rv		3755963	0					
ANR	3756052	UnaryOperationExpression	& rv		3755963	0					
ANR	3756053	UnaryOperator	&		3755963	0					
ANR	3756054	Identifier	rv		3755963	1					
ANR	3756055	ExpressionStatement	zval_ptr_dtor ( & rv )	517:3:15256:15274	3755963	1	True				
ANR	3756056	CallExpression	zval_ptr_dtor ( & rv )		3755963	0					
ANR	3756057	Callee	zval_ptr_dtor		3755963	0					
ANR	3756058	Identifier	zval_ptr_dtor		3755963	0					
ANR	3756059	ArgumentList	& rv		3755963	1					
ANR	3756060	Argument	& rv		3755963	0					
ANR	3756061	UnaryOperationExpression	& rv		3755963	0					
ANR	3756062	UnaryOperator	&		3755963	0					
ANR	3756063	Identifier	rv		3755963	1					
ANR	3756064	ReturnStatement	return result ;	518:3:15279:15292	3755963	2	True				
ANR	3756065	Identifier	result		3755963	0					
ANR	3756066	ReturnStatement	return 0 ;	520:2:15300:15308	3755963	5	True				
ANR	3756067	PrimaryExpression	0		3755963	0					
ANR	3756068	ReturnStatement	"return spl_fixedarray_object_has_dimension_helper ( intern , offset , check_empty ) ;"	523:1:15315:15393	3755963	3	True				
ANR	3756069	CallExpression	"spl_fixedarray_object_has_dimension_helper ( intern , offset , check_empty )"		3755963	0					
ANR	3756070	Callee	spl_fixedarray_object_has_dimension_helper		3755963	0					
ANR	3756071	Identifier	spl_fixedarray_object_has_dimension_helper		3755963	0					
ANR	3756072	ArgumentList	intern		3755963	1					
ANR	3756073	Argument	intern		3755963	0					
ANR	3756074	Identifier	intern		3755963	0					
ANR	3756075	Argument	offset		3755963	1					
ANR	3756076	Identifier	offset		3755963	0					
ANR	3756077	Argument	check_empty		3755963	2					
ANR	3756078	Identifier	check_empty		3755963	0					
ANR	3756079	ReturnType	static int		3755963	1					
ANR	3756080	Identifier	spl_fixedarray_object_has_dimension		3755963	2					
ANR	3756081	ParameterList	"zval * object , zval * offset , int check_empty"		3755963	3					
ANR	3756082	Parameter	zval * object	504:47:14848:14859	3755963	0	True				
ANR	3756083	ParameterType	zval *		3755963	0					
ANR	3756084	Identifier	object		3755963	1					
ANR	3756085	Parameter	zval * offset	504:61:14862:14873	3755963	1	True				
ANR	3756086	ParameterType	zval *		3755963	0					
ANR	3756087	Identifier	offset		3755963	1					
ANR	3756088	Parameter	int check_empty	504:75:14876:14890	3755963	2	True				
ANR	3756089	ParameterType	int		3755963	0					
ANR	3756090	Identifier	check_empty		3755963	1					
ANR	3756091	CFGEntryNode	ENTRY		3755963		True				
ANR	3756092	CFGExitNode	EXIT		3755963		True				
ANR	3756093	Symbol	Z_SPLFIXEDARRAY_P		3755963						
ANR	3756094	Symbol	* intern		3755963						
ANR	3756095	Symbol	check_empty		3755963						
ANR	3756096	Symbol	intern		3755963						
ANR	3756097	Symbol	offset		3755963						
ANR	3756098	Symbol	rv		3755963						
ANR	3756099	Symbol	intern -> fptr_offset_get		3755963						
ANR	3756100	Symbol	Z_ISUNDEF		3755963						
ANR	3756101	Symbol	& rv		3755963						
ANR	3756102	Symbol	result		3755963						
ANR	3756103	Symbol	intern -> std		3755963						
ANR	3756104	Symbol	intern -> std . ce		3755963						
ANR	3756105	Symbol	& intern -> fptr_offset_has		3755963						
ANR	3756106	Symbol	zend_is_true		3755963						
ANR	3756107	Symbol	spl_fixedarray_object_has_dimension_helper		3755963						
ANR	3756108	Symbol	object		3755963						
ANR	3756109	Function	spl_fixedarray_object_count_elements	527:0:15408:15916							
ANR	3756110	FunctionDef	"spl_fixedarray_object_count_elements (zval * object , zend_long * count)"		3756109	0					
ANR	3756111	CompoundStatement		528:0:15498:15916	3756109	0					
ANR	3756112	IdentifierDeclStatement	spl_fixedarray_object * intern ;	529:1:15501:15530	3756109	0	True				
ANR	3756113	IdentifierDecl	* intern		3756109	0					
ANR	3756114	IdentifierDeclType	spl_fixedarray_object *		3756109	0					
ANR	3756115	Identifier	intern		3756109	1					
ANR	3756116	ExpressionStatement	intern = Z_SPLFIXEDARRAY_P ( object )	531:1:15534:15568	3756109	1	True				
ANR	3756117	AssignmentExpression	intern = Z_SPLFIXEDARRAY_P ( object )		3756109	0		=			
ANR	3756118	Identifier	intern		3756109	0					
ANR	3756119	CallExpression	Z_SPLFIXEDARRAY_P ( object )		3756109	1					
ANR	3756120	Callee	Z_SPLFIXEDARRAY_P		3756109	0					
ANR	3756121	Identifier	Z_SPLFIXEDARRAY_P		3756109	0					
ANR	3756122	ArgumentList	object		3756109	1					
ANR	3756123	Argument	object		3756109	0					
ANR	3756124	Identifier	object		3756109	0					
ANR	3756125	IfStatement	if ( intern -> fptr_count )		3756109	2					
ANR	3756126	Condition	intern -> fptr_count	532:5:15575:15592	3756109	0	True				
ANR	3756127	PtrMemberAccess	intern -> fptr_count		3756109	0					
ANR	3756128	Identifier	intern		3756109	0					
ANR	3756129	Identifier	fptr_count		3756109	1					
ANR	3756130	CompoundStatement		6:2:100:107	3756109	1					
ANR	3756131	IdentifierDeclStatement	zval rv ;	533:2:15599:15606	3756109	0	True				
ANR	3756132	IdentifierDecl	rv		3756109	0					
ANR	3756133	IdentifierDeclType	zval		3756109	0					
ANR	3756134	Identifier	rv		3756109	1					
ANR	3756135	ExpressionStatement	"zend_call_method_with_0_params ( object , intern -> std . ce , & intern -> fptr_count , ""count"" , & rv )"	534:2:15610:15699	3756109	1	True				
ANR	3756136	CallExpression	"zend_call_method_with_0_params ( object , intern -> std . ce , & intern -> fptr_count , ""count"" , & rv )"		3756109	0					
ANR	3756137	Callee	zend_call_method_with_0_params		3756109	0					
ANR	3756138	Identifier	zend_call_method_with_0_params		3756109	0					
ANR	3756139	ArgumentList	object		3756109	1					
ANR	3756140	Argument	object		3756109	0					
ANR	3756141	Identifier	object		3756109	0					
ANR	3756142	Argument	intern -> std . ce		3756109	1					
ANR	3756143	MemberAccess	intern -> std . ce		3756109	0					
ANR	3756144	PtrMemberAccess	intern -> std		3756109	0					
ANR	3756145	Identifier	intern		3756109	0					
ANR	3756146	Identifier	std		3756109	1					
ANR	3756147	Identifier	ce		3756109	1					
ANR	3756148	Argument	& intern -> fptr_count		3756109	2					
ANR	3756149	UnaryOperationExpression	& intern -> fptr_count		3756109	0					
ANR	3756150	UnaryOperator	&		3756109	0					
ANR	3756151	PtrMemberAccess	intern -> fptr_count		3756109	1					
ANR	3756152	Identifier	intern		3756109	0					
ANR	3756153	Identifier	fptr_count		3756109	1					
ANR	3756154	Argument	"""count"""		3756109	3					
ANR	3756155	PrimaryExpression	"""count"""		3756109	0					
ANR	3756156	Argument	& rv		3756109	4					
ANR	3756157	UnaryOperationExpression	& rv		3756109	0					
ANR	3756158	UnaryOperator	&		3756109	0					
ANR	3756159	Identifier	rv		3756109	1					
ANR	3756160	IfStatement	if ( ! Z_ISUNDEF ( rv ) )		3756109	2					
ANR	3756161	Condition	! Z_ISUNDEF ( rv )	535:6:15707:15720	3756109	0	True				
ANR	3756162	UnaryOperationExpression	! Z_ISUNDEF ( rv )		3756109	0					
ANR	3756163	UnaryOperator	!		3756109	0					
ANR	3756164	CallExpression	Z_ISUNDEF ( rv )		3756109	1					
ANR	3756165	Callee	Z_ISUNDEF		3756109	0					
ANR	3756166	Identifier	Z_ISUNDEF		3756109	0					
ANR	3756167	ArgumentList	rv		3756109	1					
ANR	3756168	Argument	rv		3756109	0					
ANR	3756169	Identifier	rv		3756109	0					
ANR	3756170	CompoundStatement		8:22:224:224	3756109	1					
ANR	3756171	ExpressionStatement	* count = zval_get_long ( & rv )	536:3:15728:15755	3756109	0	True				
ANR	3756172	AssignmentExpression	* count = zval_get_long ( & rv )		3756109	0		=			
ANR	3756173	UnaryOperationExpression	* count		3756109	0					
ANR	3756174	UnaryOperator	*		3756109	0					
ANR	3756175	Identifier	count		3756109	1					
ANR	3756176	CallExpression	zval_get_long ( & rv )		3756109	1					
ANR	3756177	Callee	zval_get_long		3756109	0					
ANR	3756178	Identifier	zval_get_long		3756109	0					
ANR	3756179	ArgumentList	& rv		3756109	1					
ANR	3756180	Argument	& rv		3756109	0					
ANR	3756181	UnaryOperationExpression	& rv		3756109	0					
ANR	3756182	UnaryOperator	&		3756109	0					
ANR	3756183	Identifier	rv		3756109	1					
ANR	3756184	ExpressionStatement	zval_ptr_dtor ( & rv )	537:3:15760:15778	3756109	1	True				
ANR	3756185	CallExpression	zval_ptr_dtor ( & rv )		3756109	0					
ANR	3756186	Callee	zval_ptr_dtor		3756109	0					
ANR	3756187	Identifier	zval_ptr_dtor		3756109	0					
ANR	3756188	ArgumentList	& rv		3756109	1					
ANR	3756189	Argument	& rv		3756109	0					
ANR	3756190	UnaryOperationExpression	& rv		3756109	0					
ANR	3756191	UnaryOperator	&		3756109	0					
ANR	3756192	Identifier	rv		3756109	1					
ANR	3756193	ReturnStatement	return SUCCESS ;	538:3:15783:15797	3756109	2	True				
ANR	3756194	Identifier	SUCCESS		3756109	0					
ANR	3756195	ElseStatement	else		3756109	0					
ANR	3756196	IfStatement	if ( intern -> array )		3756109	0					
ANR	3756197	Condition	intern -> array	540:12:15815:15827	3756109	0	True				
ANR	3756198	PtrMemberAccess	intern -> array		3756109	0					
ANR	3756199	Identifier	intern		3756109	0					
ANR	3756200	Identifier	array		3756109	1					
ANR	3756201	CompoundStatement		13:27:331:331	3756109	1					
ANR	3756202	ExpressionStatement	* count = intern -> array -> size	541:2:15834:15862	3756109	0	True				
ANR	3756203	AssignmentExpression	* count = intern -> array -> size		3756109	0		=			
ANR	3756204	UnaryOperationExpression	* count		3756109	0					
ANR	3756205	UnaryOperator	*		3756109	0					
ANR	3756206	Identifier	count		3756109	1					
ANR	3756207	PtrMemberAccess	intern -> array -> size		3756109	1					
ANR	3756208	PtrMemberAccess	intern -> array		3756109	0					
ANR	3756209	Identifier	intern		3756109	0					
ANR	3756210	Identifier	array		3756109	1					
ANR	3756211	Identifier	size		3756109	1					
ANR	3756212	ReturnStatement	return SUCCESS ;	542:2:15866:15880	3756109	1	True				
ANR	3756213	Identifier	SUCCESS		3756109	0					
ANR	3756214	ExpressionStatement	* count = 0	545:1:15887:15897	3756109	3	True				
ANR	3756215	AssignmentExpression	* count = 0		3756109	0		=			
ANR	3756216	UnaryOperationExpression	* count		3756109	0					
ANR	3756217	UnaryOperator	*		3756109	0					
ANR	3756218	Identifier	count		3756109	1					
ANR	3756219	PrimaryExpression	0		3756109	1					
ANR	3756220	ReturnStatement	return SUCCESS ;	546:1:15900:15914	3756109	4	True				
ANR	3756221	Identifier	SUCCESS		3756109	0					
ANR	3756222	ReturnType	static int		3756109	1					
ANR	3756223	Identifier	spl_fixedarray_object_count_elements		3756109	2					
ANR	3756224	ParameterList	"zval * object , zend_long * count"		3756109	3					
ANR	3756225	Parameter	zval * object	527:48:15456:15467	3756109	0	True				
ANR	3756226	ParameterType	zval *		3756109	0					
ANR	3756227	Identifier	object		3756109	1					
ANR	3756228	Parameter	zend_long * count	527:62:15470:15485	3756109	1	True				
ANR	3756229	ParameterType	zend_long *		3756109	0					
ANR	3756230	Identifier	count		3756109	1					
ANR	3756231	CFGEntryNode	ENTRY		3756109		True				
ANR	3756232	CFGExitNode	EXIT		3756109		True				
ANR	3756233	Symbol	Z_SPLFIXEDARRAY_P		3756109						
ANR	3756234	Symbol	* intern		3756109						
ANR	3756235	Symbol	intern -> array -> size		3756109						
ANR	3756236	Symbol	intern		3756109						
ANR	3756237	Symbol	SUCCESS		3756109						
ANR	3756238	Symbol	rv		3756109						
ANR	3756239	Symbol	Z_ISUNDEF		3756109						
ANR	3756240	Symbol	count		3756109						
ANR	3756241	Symbol	intern -> array		3756109						
ANR	3756242	Symbol	intern -> fptr_count		3756109						
ANR	3756243	Symbol	& rv		3756109						
ANR	3756244	Symbol	* intern -> array		3756109						
ANR	3756245	Symbol	intern -> std		3756109						
ANR	3756246	Symbol	intern -> std . ce		3756109						
ANR	3756247	Symbol	* count		3756109						
ANR	3756248	Symbol	zval_get_long		3756109						
ANR	3756249	Symbol	* * intern		3756109						
ANR	3756250	Symbol	& intern -> fptr_count		3756109						
ANR	3756251	Symbol	object		3756109						
ANR	3756252	DeclStmt									
ANR	3756253	Decl							zval	zval *	object
ANR	3756254	DeclStmt									
ANR	3756255	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756256	DeclStmt									
ANR	3756257	Decl							zend_long	zend_long	size
ANR	3756258	DeclStmt									
ANR	3756259	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756260	DeclStmt									
ANR	3756261	Decl							HashTable	HashTable *	intern_ht
ANR	3756262	DeclStmt									
ANR	3756263	Decl							zval	zval *	data
ANR	3756264	DeclStmt									
ANR	3756265	Decl							int	int	index
ANR	3756266	DeclStmt									
ANR	3756267	Decl							int	int	size
ANR	3756268	DeclStmt									
ANR	3756269	Decl							zval	zval *	object
ANR	3756270	DeclStmt									
ANR	3756271	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756272	DeclStmt									
ANR	3756273	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756274	DeclStmt									
ANR	3756275	Decl							int	int	i
ANR	3756276	DeclStmt									
ANR	3756277	Decl							zval	zval *	data
ANR	3756278	DeclStmt									
ANR	3756279	Decl							spl_fixedarray	spl_fixedarray *	array
ANR	3756280	DeclStmt									
ANR	3756281	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756282	DeclStmt									
ANR	3756283	Decl							int	int	num
ANR	3756284	DeclStmt									
ANR	3756285	Decl							zend_bool	zend_bool	save_indexes
ANR	3756286	DeclStmt									
ANR	3756287	Decl							zval	zval *	element
ANR	3756288	DeclStmt									
ANR	3756289	Decl							zend_string	zend_string *	str_index
ANR	3756290	DeclStmt									
ANR	3756291	Decl							zend_ulong	zend_ulong	num_index
ANR	3756292	Decl							zend_ulong	zend_ulong	max_index
ANR	3756293	DeclStmt									
ANR	3756294	Decl							zend_long	zend_long	tmp
ANR	3756295	DeclStmt									
ANR	3756296	Decl							zval	zval *	element
ANR	3756297	DeclStmt									
ANR	3756298	Decl							zend_long	zend_long	i
ANR	3756299	DeclStmt									
ANR	3756300	Decl							zval	zval *	object
ANR	3756301	DeclStmt									
ANR	3756302	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756303	DeclStmt									
ANR	3756304	Decl							zval	zval *	object
ANR	3756305	DeclStmt									
ANR	3756306	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756307	DeclStmt									
ANR	3756308	Decl							zend_long	zend_long	size
ANR	3756309	DeclStmt									
ANR	3756310	Decl							zval	zval *	zindex
ANR	3756311	DeclStmt									
ANR	3756312	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756313	DeclStmt									
ANR	3756314	Decl							zval	zval *	zindex
ANR	3756315	Decl							zval	zval *	value
ANR	3756316	DeclStmt									
ANR	3756317	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756318	DeclStmt									
ANR	3756319	Decl							zval	zval *	zindex
ANR	3756320	Decl							zval	zval *	value
ANR	3756321	DeclStmt									
ANR	3756322	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756323	DeclStmt									
ANR	3756324	Decl							zval	zval *	zindex
ANR	3756325	DeclStmt									
ANR	3756326	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756327	Function	spl_fixedarray_it_dtor	847:0:22903:23121							
ANR	3756328	FunctionDef	spl_fixedarray_it_dtor (zend_object_iterator * iter)		3756327	0					
ANR	3756329	CompoundStatement		848:0:22976:23121	3756327	0					
ANR	3756330	IdentifierDeclStatement	spl_fixedarray_it * iterator = ( spl_fixedarray_it * ) iter ;	849:1:22979:23035	3756327	0	True				
ANR	3756331	IdentifierDecl	* iterator = ( spl_fixedarray_it * ) iter		3756327	0					
ANR	3756332	IdentifierDeclType	spl_fixedarray_it *		3756327	0					
ANR	3756333	Identifier	iterator		3756327	1					
ANR	3756334	AssignmentExpression	* iterator = ( spl_fixedarray_it * ) iter		3756327	2		=			
ANR	3756335	Identifier	iterator		3756327	0					
ANR	3756336	CastExpression	( spl_fixedarray_it * ) iter		3756327	1					
ANR	3756337	CastTarget	spl_fixedarray_it *		3756327	0					
ANR	3756338	Identifier	iter		3756327	1					
ANR	3756339	ExpressionStatement	zend_user_it_invalidate_current ( iter )	851:1:23039:23076	3756327	1	True				
ANR	3756340	CallExpression	zend_user_it_invalidate_current ( iter )		3756327	0					
ANR	3756341	Callee	zend_user_it_invalidate_current		3756327	0					
ANR	3756342	Identifier	zend_user_it_invalidate_current		3756327	0					
ANR	3756343	ArgumentList	iter		3756327	1					
ANR	3756344	Argument	iter		3756327	0					
ANR	3756345	Identifier	iter		3756327	0					
ANR	3756346	ExpressionStatement	zval_ptr_dtor ( & iterator -> intern . it . data )	852:1:23079:23119	3756327	2	True				
ANR	3756347	CallExpression	zval_ptr_dtor ( & iterator -> intern . it . data )		3756327	0					
ANR	3756348	Callee	zval_ptr_dtor		3756327	0					
ANR	3756349	Identifier	zval_ptr_dtor		3756327	0					
ANR	3756350	ArgumentList	& iterator -> intern . it . data		3756327	1					
ANR	3756351	Argument	& iterator -> intern . it . data		3756327	0					
ANR	3756352	UnaryOperationExpression	& iterator -> intern . it . data		3756327	0					
ANR	3756353	UnaryOperator	&		3756327	0					
ANR	3756354	MemberAccess	iterator -> intern . it . data		3756327	1					
ANR	3756355	MemberAccess	iterator -> intern . it		3756327	0					
ANR	3756356	PtrMemberAccess	iterator -> intern		3756327	0					
ANR	3756357	Identifier	iterator		3756327	0					
ANR	3756358	Identifier	intern		3756327	1					
ANR	3756359	Identifier	it		3756327	1					
ANR	3756360	Identifier	data		3756327	1					
ANR	3756361	ReturnType	static void		3756327	1					
ANR	3756362	Identifier	spl_fixedarray_it_dtor		3756327	2					
ANR	3756363	ParameterList	zend_object_iterator * iter		3756327	3					
ANR	3756364	Parameter	zend_object_iterator * iter	847:35:22938:22963	3756327	0	True				
ANR	3756365	ParameterType	zend_object_iterator *		3756327	0					
ANR	3756366	Identifier	iter		3756327	1					
ANR	3756367	CFGEntryNode	ENTRY		3756327		True				
ANR	3756368	CFGExitNode	EXIT		3756327		True				
ANR	3756369	Symbol	iterator		3756327						
ANR	3756370	Symbol	iterator -> intern		3756327						
ANR	3756371	Symbol	* iterator		3756327						
ANR	3756372	Symbol	& iterator -> intern . it . data		3756327						
ANR	3756373	Symbol	& iterator -> intern . it		3756327						
ANR	3756374	Symbol	iter		3756327						
ANR	3756375	Symbol	& iterator -> intern		3756327						
ANR	3756376	Symbol	iterator -> intern . it		3756327						
ANR	3756377	Function	spl_fixedarray_it_rewind	856:0:23134:23399							
ANR	3756378	FunctionDef	spl_fixedarray_it_rewind (zend_object_iterator * iter)		3756377	0					
ANR	3756379	CompoundStatement		857:0:23209:23399	3756377	0					
ANR	3756380	IdentifierDeclStatement	spl_fixedarray_object * object = Z_SPLFIXEDARRAY_P ( & iter -> data ) ;	858:1:23212:23274	3756377	0	True				
ANR	3756381	IdentifierDecl	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756377	0					
ANR	3756382	IdentifierDeclType	spl_fixedarray_object *		3756377	0					
ANR	3756383	Identifier	object		3756377	1					
ANR	3756384	AssignmentExpression	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756377	2		=			
ANR	3756385	Identifier	object		3756377	0					
ANR	3756386	CallExpression	Z_SPLFIXEDARRAY_P ( & iter -> data )		3756377	1					
ANR	3756387	Callee	Z_SPLFIXEDARRAY_P		3756377	0					
ANR	3756388	Identifier	Z_SPLFIXEDARRAY_P		3756377	0					
ANR	3756389	ArgumentList	& iter -> data		3756377	1					
ANR	3756390	Argument	& iter -> data		3756377	0					
ANR	3756391	UnaryOperationExpression	& iter -> data		3756377	0					
ANR	3756392	UnaryOperator	&		3756377	0					
ANR	3756393	PtrMemberAccess	iter -> data		3756377	1					
ANR	3756394	Identifier	iter		3756377	0					
ANR	3756395	Identifier	data		3756377	1					
ANR	3756396	IfStatement	if ( object -> flags & SPL_FIXEDARRAY_OVERLOADED_REWIND )		3756377	1					
ANR	3756397	Condition	object -> flags & SPL_FIXEDARRAY_OVERLOADED_REWIND	860:5:23282:23329	3756377	0	True				
ANR	3756398	BitAndExpression	object -> flags & SPL_FIXEDARRAY_OVERLOADED_REWIND		3756377	0		&			
ANR	3756399	PtrMemberAccess	object -> flags		3756377	0					
ANR	3756400	Identifier	object		3756377	0					
ANR	3756401	Identifier	flags		3756377	1					
ANR	3756402	Identifier	SPL_FIXEDARRAY_OVERLOADED_REWIND		3756377	1					
ANR	3756403	CompoundStatement		4:55:122:122	3756377	1					
ANR	3756404	ExpressionStatement	zend_user_it_rewind ( iter )	861:2:23336:23361	3756377	0	True				
ANR	3756405	CallExpression	zend_user_it_rewind ( iter )		3756377	0					
ANR	3756406	Callee	zend_user_it_rewind		3756377	0					
ANR	3756407	Identifier	zend_user_it_rewind		3756377	0					
ANR	3756408	ArgumentList	iter		3756377	1					
ANR	3756409	Argument	iter		3756377	0					
ANR	3756410	Identifier	iter		3756377	0					
ANR	3756411	ElseStatement	else		3756377	0					
ANR	3756412	CompoundStatement		6:8:161:161	3756377	0					
ANR	3756413	ExpressionStatement	object -> current = 0	863:2:23375:23394	3756377	0	True				
ANR	3756414	AssignmentExpression	object -> current = 0		3756377	0		=			
ANR	3756415	PtrMemberAccess	object -> current		3756377	0					
ANR	3756416	Identifier	object		3756377	0					
ANR	3756417	Identifier	current		3756377	1					
ANR	3756418	PrimaryExpression	0		3756377	1					
ANR	3756419	ReturnType	static void		3756377	1					
ANR	3756420	Identifier	spl_fixedarray_it_rewind		3756377	2					
ANR	3756421	ParameterList	zend_object_iterator * iter		3756377	3					
ANR	3756422	Parameter	zend_object_iterator * iter	856:37:23171:23196	3756377	0	True				
ANR	3756423	ParameterType	zend_object_iterator *		3756377	0					
ANR	3756424	Identifier	iter		3756377	1					
ANR	3756425	CFGEntryNode	ENTRY		3756377		True				
ANR	3756426	CFGExitNode	EXIT		3756377		True				
ANR	3756427	Symbol	object -> flags		3756377						
ANR	3756428	Symbol	Z_SPLFIXEDARRAY_P		3756377						
ANR	3756429	Symbol	& iter -> data		3756377						
ANR	3756430	Symbol	SPL_FIXEDARRAY_OVERLOADED_REWIND		3756377						
ANR	3756431	Symbol	iter		3756377						
ANR	3756432	Symbol	* object		3756377						
ANR	3756433	Symbol	object -> current		3756377						
ANR	3756434	Symbol	object		3756377						
ANR	3756435	Function	spl_fixedarray_it_valid	868:0:23412:23774							
ANR	3756436	FunctionDef	spl_fixedarray_it_valid (zend_object_iterator * iter)		3756435	0					
ANR	3756437	CompoundStatement		869:0:23485:23774	3756435	0					
ANR	3756438	IdentifierDeclStatement	spl_fixedarray_object * object = Z_SPLFIXEDARRAY_P ( & iter -> data ) ;	870:1:23488:23550	3756435	0	True				
ANR	3756439	IdentifierDecl	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756435	0					
ANR	3756440	IdentifierDeclType	spl_fixedarray_object *		3756435	0					
ANR	3756441	Identifier	object		3756435	1					
ANR	3756442	AssignmentExpression	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756435	2		=			
ANR	3756443	Identifier	object		3756435	0					
ANR	3756444	CallExpression	Z_SPLFIXEDARRAY_P ( & iter -> data )		3756435	1					
ANR	3756445	Callee	Z_SPLFIXEDARRAY_P		3756435	0					
ANR	3756446	Identifier	Z_SPLFIXEDARRAY_P		3756435	0					
ANR	3756447	ArgumentList	& iter -> data		3756435	1					
ANR	3756448	Argument	& iter -> data		3756435	0					
ANR	3756449	UnaryOperationExpression	& iter -> data		3756435	0					
ANR	3756450	UnaryOperator	&		3756435	0					
ANR	3756451	PtrMemberAccess	iter -> data		3756435	1					
ANR	3756452	Identifier	iter		3756435	0					
ANR	3756453	Identifier	data		3756435	1					
ANR	3756454	IfStatement	if ( object -> flags & SPL_FIXEDARRAY_OVERLOADED_VALID )		3756435	1					
ANR	3756455	Condition	object -> flags & SPL_FIXEDARRAY_OVERLOADED_VALID	872:5:23558:23604	3756435	0	True				
ANR	3756456	BitAndExpression	object -> flags & SPL_FIXEDARRAY_OVERLOADED_VALID		3756435	0		&			
ANR	3756457	PtrMemberAccess	object -> flags		3756435	0					
ANR	3756458	Identifier	object		3756435	0					
ANR	3756459	Identifier	flags		3756435	1					
ANR	3756460	Identifier	SPL_FIXEDARRAY_OVERLOADED_VALID		3756435	1					
ANR	3756461	CompoundStatement		4:54:121:121	3756435	1					
ANR	3756462	ReturnStatement	return zend_user_it_valid ( iter ) ;	873:2:23611:23642	3756435	0	True				
ANR	3756463	CallExpression	zend_user_it_valid ( iter )		3756435	0					
ANR	3756464	Callee	zend_user_it_valid		3756435	0					
ANR	3756465	Identifier	zend_user_it_valid		3756435	0					
ANR	3756466	ArgumentList	iter		3756435	1					
ANR	3756467	Argument	iter		3756435	0					
ANR	3756468	Identifier	iter		3756435	0					
ANR	3756469	IfStatement	if ( object -> current >= 0 && object -> array && object -> current < object -> array -> size )		3756435	2					
ANR	3756470	Condition	object -> current >= 0 && object -> array && object -> current < object -> array -> size	876:5:23653:23730	3756435	0	True				
ANR	3756471	AndExpression	object -> current >= 0 && object -> array && object -> current < object -> array -> size		3756435	0		&&			
ANR	3756472	RelationalExpression	object -> current >= 0		3756435	0		>=			
ANR	3756473	PtrMemberAccess	object -> current		3756435	0					
ANR	3756474	Identifier	object		3756435	0					
ANR	3756475	Identifier	current		3756435	1					
ANR	3756476	PrimaryExpression	0		3756435	1					
ANR	3756477	AndExpression	object -> array && object -> current < object -> array -> size		3756435	1		&&			
ANR	3756478	PtrMemberAccess	object -> array		3756435	0					
ANR	3756479	Identifier	object		3756435	0					
ANR	3756480	Identifier	array		3756435	1					
ANR	3756481	RelationalExpression	object -> current < object -> array -> size		3756435	1		<			
ANR	3756482	PtrMemberAccess	object -> current		3756435	0					
ANR	3756483	Identifier	object		3756435	0					
ANR	3756484	Identifier	current		3756435	1					
ANR	3756485	PtrMemberAccess	object -> array -> size		3756435	1					
ANR	3756486	PtrMemberAccess	object -> array		3756435	0					
ANR	3756487	Identifier	object		3756435	0					
ANR	3756488	Identifier	array		3756435	1					
ANR	3756489	Identifier	size		3756435	1					
ANR	3756490	CompoundStatement		8:85:247:247	3756435	1					
ANR	3756491	ReturnStatement	return SUCCESS ;	877:2:23737:23751	3756435	0	True				
ANR	3756492	Identifier	SUCCESS		3756435	0					
ANR	3756493	ReturnStatement	return FAILURE ;	880:1:23758:23772	3756435	3	True				
ANR	3756494	Identifier	FAILURE		3756435	0					
ANR	3756495	ReturnType	static int		3756435	1					
ANR	3756496	Identifier	spl_fixedarray_it_valid		3756435	2					
ANR	3756497	ParameterList	zend_object_iterator * iter		3756435	3					
ANR	3756498	Parameter	zend_object_iterator * iter	868:35:23447:23472	3756435	0	True				
ANR	3756499	ParameterType	zend_object_iterator *		3756435	0					
ANR	3756500	Identifier	iter		3756435	1					
ANR	3756501	CFGEntryNode	ENTRY		3756435		True				
ANR	3756502	CFGExitNode	EXIT		3756435		True				
ANR	3756503	Symbol	Z_SPLFIXEDARRAY_P		3756435						
ANR	3756504	Symbol	SUCCESS		3756435						
ANR	3756505	Symbol	SPL_FIXEDARRAY_OVERLOADED_VALID		3756435						
ANR	3756506	Symbol	iter		3756435						
ANR	3756507	Symbol	zend_user_it_valid		3756435						
ANR	3756508	Symbol	* object		3756435						
ANR	3756509	Symbol	object -> array		3756435						
ANR	3756510	Symbol	object -> current		3756435						
ANR	3756511	Symbol	FAILURE		3756435						
ANR	3756512	Symbol	object -> flags		3756435						
ANR	3756513	Symbol	& iter -> data		3756435						
ANR	3756514	Symbol	* object -> array		3756435						
ANR	3756515	Symbol	* * object		3756435						
ANR	3756516	Symbol	object -> array -> size		3756435						
ANR	3756517	Symbol	object		3756435						
ANR	3756518	Function	spl_fixedarray_it_get_current_data	884:0:23787:24301							
ANR	3756519	FunctionDef	spl_fixedarray_it_get_current_data (zend_object_iterator * iter)		3756518	0					
ANR	3756520	CompoundStatement		885:0:23873:24301	3756518	0					
ANR	3756521	IdentifierDeclStatement	zval zindex ;	886:1:23876:23887	3756518	0	True				
ANR	3756522	IdentifierDecl	zindex		3756518	0					
ANR	3756523	IdentifierDeclType	zval		3756518	0					
ANR	3756524	Identifier	zindex		3756518	1					
ANR	3756525	IdentifierDeclStatement	spl_fixedarray_object * object = Z_SPLFIXEDARRAY_P ( & iter -> data ) ;	887:1:23890:23952	3756518	1	True				
ANR	3756526	IdentifierDecl	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756518	0					
ANR	3756527	IdentifierDeclType	spl_fixedarray_object *		3756518	0					
ANR	3756528	Identifier	object		3756518	1					
ANR	3756529	AssignmentExpression	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756518	2		=			
ANR	3756530	Identifier	object		3756518	0					
ANR	3756531	CallExpression	Z_SPLFIXEDARRAY_P ( & iter -> data )		3756518	1					
ANR	3756532	Callee	Z_SPLFIXEDARRAY_P		3756518	0					
ANR	3756533	Identifier	Z_SPLFIXEDARRAY_P		3756518	0					
ANR	3756534	ArgumentList	& iter -> data		3756518	1					
ANR	3756535	Argument	& iter -> data		3756518	0					
ANR	3756536	UnaryOperationExpression	& iter -> data		3756518	0					
ANR	3756537	UnaryOperator	&		3756518	0					
ANR	3756538	PtrMemberAccess	iter -> data		3756518	1					
ANR	3756539	Identifier	iter		3756518	0					
ANR	3756540	Identifier	data		3756518	1					
ANR	3756541	IfStatement	if ( object -> flags & SPL_FIXEDARRAY_OVERLOADED_CURRENT )		3756518	2					
ANR	3756542	Condition	object -> flags & SPL_FIXEDARRAY_OVERLOADED_CURRENT	889:5:23960:24008	3756518	0	True				
ANR	3756543	BitAndExpression	object -> flags & SPL_FIXEDARRAY_OVERLOADED_CURRENT		3756518	0		&			
ANR	3756544	PtrMemberAccess	object -> flags		3756518	0					
ANR	3756545	Identifier	object		3756518	0					
ANR	3756546	Identifier	flags		3756518	1					
ANR	3756547	Identifier	SPL_FIXEDARRAY_OVERLOADED_CURRENT		3756518	1					
ANR	3756548	CompoundStatement		5:56:137:137	3756518	1					
ANR	3756549	ReturnStatement	return zend_user_it_get_current_data ( iter ) ;	890:2:24015:24057	3756518	0	True				
ANR	3756550	CallExpression	zend_user_it_get_current_data ( iter )		3756518	0					
ANR	3756551	Callee	zend_user_it_get_current_data		3756518	0					
ANR	3756552	Identifier	zend_user_it_get_current_data		3756518	0					
ANR	3756553	ArgumentList	iter		3756518	1					
ANR	3756554	Argument	iter		3756518	0					
ANR	3756555	Identifier	iter		3756518	0					
ANR	3756556	ElseStatement	else		3756518	0					
ANR	3756557	CompoundStatement		8:2:197:207	3756518	0					
ANR	3756558	IdentifierDeclStatement	zval * data ;	892:2:24071:24081	3756518	0	True				
ANR	3756559	IdentifierDecl	* data		3756518	0					
ANR	3756560	IdentifierDeclType	zval *		3756518	0					
ANR	3756561	Identifier	data		3756518	1					
ANR	3756562	ExpressionStatement	"ZVAL_LONG ( & zindex , object -> current )"	894:2:24086:24121	3756518	1	True				
ANR	3756563	CallExpression	"ZVAL_LONG ( & zindex , object -> current )"		3756518	0					
ANR	3756564	Callee	ZVAL_LONG		3756518	0					
ANR	3756565	Identifier	ZVAL_LONG		3756518	0					
ANR	3756566	ArgumentList	& zindex		3756518	1					
ANR	3756567	Argument	& zindex		3756518	0					
ANR	3756568	UnaryOperationExpression	& zindex		3756518	0					
ANR	3756569	UnaryOperator	&		3756518	0					
ANR	3756570	Identifier	zindex		3756518	1					
ANR	3756571	Argument	object -> current		3756518	1					
ANR	3756572	PtrMemberAccess	object -> current		3756518	0					
ANR	3756573	Identifier	object		3756518	0					
ANR	3756574	Identifier	current		3756518	1					
ANR	3756575	ExpressionStatement	"data = spl_fixedarray_object_read_dimension_helper ( object , & zindex )"	896:2:24126:24193	3756518	2	True				
ANR	3756576	AssignmentExpression	"data = spl_fixedarray_object_read_dimension_helper ( object , & zindex )"		3756518	0		=			
ANR	3756577	Identifier	data		3756518	0					
ANR	3756578	CallExpression	"spl_fixedarray_object_read_dimension_helper ( object , & zindex )"		3756518	1					
ANR	3756579	Callee	spl_fixedarray_object_read_dimension_helper		3756518	0					
ANR	3756580	Identifier	spl_fixedarray_object_read_dimension_helper		3756518	0					
ANR	3756581	ArgumentList	object		3756518	1					
ANR	3756582	Argument	object		3756518	0					
ANR	3756583	Identifier	object		3756518	0					
ANR	3756584	Argument	& zindex		3756518	1					
ANR	3756585	UnaryOperationExpression	& zindex		3756518	0					
ANR	3756586	UnaryOperator	&		3756518	0					
ANR	3756587	Identifier	zindex		3756518	1					
ANR	3756588	ExpressionStatement	zval_ptr_dtor ( & zindex )	897:2:24197:24219	3756518	3	True				
ANR	3756589	CallExpression	zval_ptr_dtor ( & zindex )		3756518	0					
ANR	3756590	Callee	zval_ptr_dtor		3756518	0					
ANR	3756591	Identifier	zval_ptr_dtor		3756518	0					
ANR	3756592	ArgumentList	& zindex		3756518	1					
ANR	3756593	Argument	& zindex		3756518	0					
ANR	3756594	UnaryOperationExpression	& zindex		3756518	0					
ANR	3756595	UnaryOperator	&		3756518	0					
ANR	3756596	Identifier	zindex		3756518	1					
ANR	3756597	IfStatement	if ( data == NULL )		3756518	4					
ANR	3756598	Condition	data == NULL	899:6:24228:24239	3756518	0	True				
ANR	3756599	EqualityExpression	data == NULL		3756518	0		==			
ANR	3756600	Identifier	data		3756518	0					
ANR	3756601	Identifier	NULL		3756518	1					
ANR	3756602	CompoundStatement		15:20:368:368	3756518	1					
ANR	3756603	ExpressionStatement	data = & EG ( uninitialized_zval )	900:3:24247:24277	3756518	0	True				
ANR	3756604	AssignmentExpression	data = & EG ( uninitialized_zval )		3756518	0		=			
ANR	3756605	Identifier	data		3756518	0					
ANR	3756606	UnaryOperationExpression	& EG ( uninitialized_zval )		3756518	1					
ANR	3756607	UnaryOperator	&		3756518	0					
ANR	3756608	CallExpression	EG ( uninitialized_zval )		3756518	1					
ANR	3756609	Callee	EG		3756518	0					
ANR	3756610	Identifier	EG		3756518	0					
ANR	3756611	ArgumentList	uninitialized_zval		3756518	1					
ANR	3756612	Argument	uninitialized_zval		3756518	0					
ANR	3756613	Identifier	uninitialized_zval		3756518	0					
ANR	3756614	ReturnStatement	return data ;	902:2:24285:24296	3756518	5	True				
ANR	3756615	Identifier	data		3756518	0					
ANR	3756616	ReturnType	static zval *		3756518	1					
ANR	3756617	Identifier	spl_fixedarray_it_get_current_data		3756518	2					
ANR	3756618	ParameterList	zend_object_iterator * iter		3756518	3					
ANR	3756619	Parameter	zend_object_iterator * iter	884:48:23835:23860	3756518	0	True				
ANR	3756620	ParameterType	zend_object_iterator *		3756518	0					
ANR	3756621	Identifier	iter		3756518	1					
ANR	3756622	CFGEntryNode	ENTRY		3756518		True				
ANR	3756623	CFGExitNode	EXIT		3756518		True				
ANR	3756624	Symbol	uninitialized_zval		3756518						
ANR	3756625	Symbol	Z_SPLFIXEDARRAY_P		3756518						
ANR	3756626	Symbol	NULL		3756518						
ANR	3756627	Symbol	data		3756518						
ANR	3756628	Symbol	iter		3756518						
ANR	3756629	Symbol	* object		3756518						
ANR	3756630	Symbol	& zindex		3756518						
ANR	3756631	Symbol	object -> current		3756518						
ANR	3756632	Symbol	& EG		3756518						
ANR	3756633	Symbol	object -> flags		3756518						
ANR	3756634	Symbol	spl_fixedarray_object_read_dimension_helper		3756518						
ANR	3756635	Symbol	zindex		3756518						
ANR	3756636	Symbol	& iter -> data		3756518						
ANR	3756637	Symbol	SPL_FIXEDARRAY_OVERLOADED_CURRENT		3756518						
ANR	3756638	Symbol	zend_user_it_get_current_data		3756518						
ANR	3756639	Symbol	object		3756518						
ANR	3756640	Function	spl_fixedarray_it_get_current_key	907:0:24314:24622							
ANR	3756641	FunctionDef	"spl_fixedarray_it_get_current_key (zend_object_iterator * iter , zval * key)"		3756640	0					
ANR	3756642	CompoundStatement		908:0:24409:24622	3756640	0					
ANR	3756643	IdentifierDeclStatement	spl_fixedarray_object * object = Z_SPLFIXEDARRAY_P ( & iter -> data ) ;	909:1:24412:24474	3756640	0	True				
ANR	3756644	IdentifierDecl	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756640	0					
ANR	3756645	IdentifierDeclType	spl_fixedarray_object *		3756640	0					
ANR	3756646	Identifier	object		3756640	1					
ANR	3756647	AssignmentExpression	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756640	2		=			
ANR	3756648	Identifier	object		3756640	0					
ANR	3756649	CallExpression	Z_SPLFIXEDARRAY_P ( & iter -> data )		3756640	1					
ANR	3756650	Callee	Z_SPLFIXEDARRAY_P		3756640	0					
ANR	3756651	Identifier	Z_SPLFIXEDARRAY_P		3756640	0					
ANR	3756652	ArgumentList	& iter -> data		3756640	1					
ANR	3756653	Argument	& iter -> data		3756640	0					
ANR	3756654	UnaryOperationExpression	& iter -> data		3756640	0					
ANR	3756655	UnaryOperator	&		3756640	0					
ANR	3756656	PtrMemberAccess	iter -> data		3756640	1					
ANR	3756657	Identifier	iter		3756640	0					
ANR	3756658	Identifier	data		3756640	1					
ANR	3756659	IfStatement	if ( object -> flags & SPL_FIXEDARRAY_OVERLOADED_KEY )		3756640	1					
ANR	3756660	Condition	object -> flags & SPL_FIXEDARRAY_OVERLOADED_KEY	911:5:24482:24526	3756640	0	True				
ANR	3756661	BitAndExpression	object -> flags & SPL_FIXEDARRAY_OVERLOADED_KEY		3756640	0		&			
ANR	3756662	PtrMemberAccess	object -> flags		3756640	0					
ANR	3756663	Identifier	object		3756640	0					
ANR	3756664	Identifier	flags		3756640	1					
ANR	3756665	Identifier	SPL_FIXEDARRAY_OVERLOADED_KEY		3756640	1					
ANR	3756666	CompoundStatement		4:52:119:119	3756640	1					
ANR	3756667	ExpressionStatement	"zend_user_it_get_current_key ( iter , key )"	912:2:24533:24572	3756640	0	True				
ANR	3756668	CallExpression	"zend_user_it_get_current_key ( iter , key )"		3756640	0					
ANR	3756669	Callee	zend_user_it_get_current_key		3756640	0					
ANR	3756670	Identifier	zend_user_it_get_current_key		3756640	0					
ANR	3756671	ArgumentList	iter		3756640	1					
ANR	3756672	Argument	iter		3756640	0					
ANR	3756673	Identifier	iter		3756640	0					
ANR	3756674	Argument	key		3756640	1					
ANR	3756675	Identifier	key		3756640	0					
ANR	3756676	ElseStatement	else		3756640	0					
ANR	3756677	CompoundStatement		6:8:172:172	3756640	0					
ANR	3756678	ExpressionStatement	"ZVAL_LONG ( key , object -> current )"	914:2:24586:24617	3756640	0	True				
ANR	3756679	CallExpression	"ZVAL_LONG ( key , object -> current )"		3756640	0					
ANR	3756680	Callee	ZVAL_LONG		3756640	0					
ANR	3756681	Identifier	ZVAL_LONG		3756640	0					
ANR	3756682	ArgumentList	key		3756640	1					
ANR	3756683	Argument	key		3756640	0					
ANR	3756684	Identifier	key		3756640	0					
ANR	3756685	Argument	object -> current		3756640	1					
ANR	3756686	PtrMemberAccess	object -> current		3756640	0					
ANR	3756687	Identifier	object		3756640	0					
ANR	3756688	Identifier	current		3756640	1					
ANR	3756689	ReturnType	static void		3756640	1					
ANR	3756690	Identifier	spl_fixedarray_it_get_current_key		3756640	2					
ANR	3756691	ParameterList	"zend_object_iterator * iter , zval * key"		3756640	3					
ANR	3756692	Parameter	zend_object_iterator * iter	907:46:24360:24385	3756640	0	True				
ANR	3756693	ParameterType	zend_object_iterator *		3756640	0					
ANR	3756694	Identifier	iter		3756640	1					
ANR	3756695	Parameter	zval * key	907:74:24388:24396	3756640	1	True				
ANR	3756696	ParameterType	zval *		3756640	0					
ANR	3756697	Identifier	key		3756640	1					
ANR	3756698	CFGEntryNode	ENTRY		3756640		True				
ANR	3756699	CFGExitNode	EXIT		3756640		True				
ANR	3756700	Symbol	object -> flags		3756640						
ANR	3756701	Symbol	Z_SPLFIXEDARRAY_P		3756640						
ANR	3756702	Symbol	& iter -> data		3756640						
ANR	3756703	Symbol	iter		3756640						
ANR	3756704	Symbol	SPL_FIXEDARRAY_OVERLOADED_KEY		3756640						
ANR	3756705	Symbol	* object		3756640						
ANR	3756706	Symbol	object -> current		3756640						
ANR	3756707	Symbol	key		3756640						
ANR	3756708	Symbol	object		3756640						
ANR	3756709	Function	spl_fixedarray_it_move_forward	919:0:24635:24949							
ANR	3756710	FunctionDef	spl_fixedarray_it_move_forward (zend_object_iterator * iter)		3756709	0					
ANR	3756711	CompoundStatement		920:0:24716:24949	3756709	0					
ANR	3756712	IdentifierDeclStatement	spl_fixedarray_object * object = Z_SPLFIXEDARRAY_P ( & iter -> data ) ;	921:1:24719:24781	3756709	0	True				
ANR	3756713	IdentifierDecl	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756709	0					
ANR	3756714	IdentifierDeclType	spl_fixedarray_object *		3756709	0					
ANR	3756715	Identifier	object		3756709	1					
ANR	3756716	AssignmentExpression	* object = Z_SPLFIXEDARRAY_P ( & iter -> data )		3756709	2		=			
ANR	3756717	Identifier	object		3756709	0					
ANR	3756718	CallExpression	Z_SPLFIXEDARRAY_P ( & iter -> data )		3756709	1					
ANR	3756719	Callee	Z_SPLFIXEDARRAY_P		3756709	0					
ANR	3756720	Identifier	Z_SPLFIXEDARRAY_P		3756709	0					
ANR	3756721	ArgumentList	& iter -> data		3756709	1					
ANR	3756722	Argument	& iter -> data		3756709	0					
ANR	3756723	UnaryOperationExpression	& iter -> data		3756709	0					
ANR	3756724	UnaryOperator	&		3756709	0					
ANR	3756725	PtrMemberAccess	iter -> data		3756709	1					
ANR	3756726	Identifier	iter		3756709	0					
ANR	3756727	Identifier	data		3756709	1					
ANR	3756728	IfStatement	if ( object -> flags & SPL_FIXEDARRAY_OVERLOADED_NEXT )		3756709	1					
ANR	3756729	Condition	object -> flags & SPL_FIXEDARRAY_OVERLOADED_NEXT	923:5:24789:24834	3756709	0	True				
ANR	3756730	BitAndExpression	object -> flags & SPL_FIXEDARRAY_OVERLOADED_NEXT		3756709	0		&			
ANR	3756731	PtrMemberAccess	object -> flags		3756709	0					
ANR	3756732	Identifier	object		3756709	0					
ANR	3756733	Identifier	flags		3756709	1					
ANR	3756734	Identifier	SPL_FIXEDARRAY_OVERLOADED_NEXT		3756709	1					
ANR	3756735	CompoundStatement		4:53:120:120	3756709	1					
ANR	3756736	ExpressionStatement	zend_user_it_move_forward ( iter )	924:2:24841:24872	3756709	0	True				
ANR	3756737	CallExpression	zend_user_it_move_forward ( iter )		3756709	0					
ANR	3756738	Callee	zend_user_it_move_forward		3756709	0					
ANR	3756739	Identifier	zend_user_it_move_forward		3756709	0					
ANR	3756740	ArgumentList	iter		3756709	1					
ANR	3756741	Argument	iter		3756709	0					
ANR	3756742	Identifier	iter		3756709	0					
ANR	3756743	ElseStatement	else		3756709	0					
ANR	3756744	CompoundStatement		6:8:165:165	3756709	0					
ANR	3756745	ExpressionStatement	zend_user_it_invalidate_current ( iter )	926:2:24886:24923	3756709	0	True				
ANR	3756746	CallExpression	zend_user_it_invalidate_current ( iter )		3756709	0					
ANR	3756747	Callee	zend_user_it_invalidate_current		3756709	0					
ANR	3756748	Identifier	zend_user_it_invalidate_current		3756709	0					
ANR	3756749	ArgumentList	iter		3756709	1					
ANR	3756750	Argument	iter		3756709	0					
ANR	3756751	Identifier	iter		3756709	0					
ANR	3756752	ExpressionStatement	object -> current ++	927:2:24927:24944	3756709	1	True				
ANR	3756753	PostIncDecOperationExpression	object -> current ++		3756709	0					
ANR	3756754	PtrMemberAccess	object -> current		3756709	0					
ANR	3756755	Identifier	object		3756709	0					
ANR	3756756	Identifier	current		3756709	1					
ANR	3756757	IncDec	++		3756709	1					
ANR	3756758	ReturnType	static void		3756709	1					
ANR	3756759	Identifier	spl_fixedarray_it_move_forward		3756709	2					
ANR	3756760	ParameterList	zend_object_iterator * iter		3756709	3					
ANR	3756761	Parameter	zend_object_iterator * iter	919:43:24678:24703	3756709	0	True				
ANR	3756762	ParameterType	zend_object_iterator *		3756709	0					
ANR	3756763	Identifier	iter		3756709	1					
ANR	3756764	CFGEntryNode	ENTRY		3756709		True				
ANR	3756765	CFGExitNode	EXIT		3756709		True				
ANR	3756766	Symbol	object -> flags		3756709						
ANR	3756767	Symbol	Z_SPLFIXEDARRAY_P		3756709						
ANR	3756768	Symbol	& iter -> data		3756709						
ANR	3756769	Symbol	iter		3756709						
ANR	3756770	Symbol	SPL_FIXEDARRAY_OVERLOADED_NEXT		3756709						
ANR	3756771	Symbol	* object		3756709						
ANR	3756772	Symbol	object -> current		3756709						
ANR	3756773	Symbol	object		3756709						
ANR	3756774	DeclStmt									
ANR	3756775	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756776	DeclStmt									
ANR	3756777	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756778	DeclStmt									
ANR	3756779	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756780	DeclStmt									
ANR	3756781	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756782	DeclStmt									
ANR	3756783	Decl							zval	zval	zindex
ANR	3756784	Decl							zval	zval *	value
ANR	3756785	DeclStmt									
ANR	3756786	Decl							spl_fixedarray_object	spl_fixedarray_object *	intern
ANR	3756787	DeclStmt									
ANR	3756788	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	spl_fixedarray_it_funcs
ANR	3756789	Function	spl_fixedarray_get_iterator	1024:0:26946:27531							
ANR	3756790	FunctionDef	"spl_fixedarray_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		3756789	0					
ANR	3756791	CompoundStatement		1025:0:27054:27531	3756789	0					
ANR	3756792	IdentifierDeclStatement	spl_fixedarray_it * iterator ;	1026:1:27057:27084	3756789	0	True				
ANR	3756793	IdentifierDecl	* iterator		3756789	0					
ANR	3756794	IdentifierDeclType	spl_fixedarray_it *		3756789	0					
ANR	3756795	Identifier	iterator		3756789	1					
ANR	3756796	IfStatement	if ( by_ref )		3756789	1					
ANR	3756797	Condition	by_ref	1028:5:27092:27097	3756789	0	True				
ANR	3756798	Identifier	by_ref		3756789	0					
ANR	3756799	CompoundStatement		4:13:45:45	3756789	1					
ANR	3756800	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""An iterator cannot be used with foreach by reference"" , 0 )"	1029:2:27104:27208	3756789	0	True				
ANR	3756801	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""An iterator cannot be used with foreach by reference"" , 0 )"		3756789	0					
ANR	3756802	Callee	zend_throw_exception		3756789	0					
ANR	3756803	Identifier	zend_throw_exception		3756789	0					
ANR	3756804	ArgumentList	spl_ce_RuntimeException		3756789	1					
ANR	3756805	Argument	spl_ce_RuntimeException		3756789	0					
ANR	3756806	Identifier	spl_ce_RuntimeException		3756789	0					
ANR	3756807	Argument	"""An iterator cannot be used with foreach by reference"""		3756789	1					
ANR	3756808	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		3756789	0					
ANR	3756809	Argument	0		3756789	2					
ANR	3756810	PrimaryExpression	0		3756789	0					
ANR	3756811	ReturnStatement	return NULL ;	1030:2:27212:27223	3756789	1	True				
ANR	3756812	Identifier	NULL		3756789	0					
ANR	3756813	ExpressionStatement	iterator = emalloc ( sizeof ( spl_fixedarray_it ) )	1033:1:27230:27275	3756789	2	True				
ANR	3756814	AssignmentExpression	iterator = emalloc ( sizeof ( spl_fixedarray_it ) )		3756789	0		=			
ANR	3756815	Identifier	iterator		3756789	0					
ANR	3756816	CallExpression	emalloc ( sizeof ( spl_fixedarray_it ) )		3756789	1					
ANR	3756817	Callee	emalloc		3756789	0					
ANR	3756818	Identifier	emalloc		3756789	0					
ANR	3756819	ArgumentList	sizeof ( spl_fixedarray_it )		3756789	1					
ANR	3756820	Argument	sizeof ( spl_fixedarray_it )		3756789	0					
ANR	3756821	SizeofExpression	sizeof ( spl_fixedarray_it )		3756789	0					
ANR	3756822	Sizeof	sizeof		3756789	0					
ANR	3756823	SizeofOperand	spl_fixedarray_it		3756789	1					
ANR	3756824	ExpressionStatement	zend_iterator_init ( ( zend_object_iterator * ) iterator )	1035:1:27279:27330	3756789	3	True				
ANR	3756825	CallExpression	zend_iterator_init ( ( zend_object_iterator * ) iterator )		3756789	0					
ANR	3756826	Callee	zend_iterator_init		3756789	0					
ANR	3756827	Identifier	zend_iterator_init		3756789	0					
ANR	3756828	ArgumentList	( zend_object_iterator * ) iterator		3756789	1					
ANR	3756829	Argument	( zend_object_iterator * ) iterator		3756789	0					
ANR	3756830	CastExpression	( zend_object_iterator * ) iterator		3756789	0					
ANR	3756831	CastTarget	zend_object_iterator *		3756789	0					
ANR	3756832	Identifier	iterator		3756789	1					
ANR	3756833	ExpressionStatement	"ZVAL_COPY ( & iterator -> intern . it . data , object )"	1037:1:27334:27378	3756789	4	True				
ANR	3756834	CallExpression	"ZVAL_COPY ( & iterator -> intern . it . data , object )"		3756789	0					
ANR	3756835	Callee	ZVAL_COPY		3756789	0					
ANR	3756836	Identifier	ZVAL_COPY		3756789	0					
ANR	3756837	ArgumentList	& iterator -> intern . it . data		3756789	1					
ANR	3756838	Argument	& iterator -> intern . it . data		3756789	0					
ANR	3756839	UnaryOperationExpression	& iterator -> intern . it . data		3756789	0					
ANR	3756840	UnaryOperator	&		3756789	0					
ANR	3756841	MemberAccess	iterator -> intern . it . data		3756789	1					
ANR	3756842	MemberAccess	iterator -> intern . it		3756789	0					
ANR	3756843	PtrMemberAccess	iterator -> intern		3756789	0					
ANR	3756844	Identifier	iterator		3756789	0					
ANR	3756845	Identifier	intern		3756789	1					
ANR	3756846	Identifier	it		3756789	1					
ANR	3756847	Identifier	data		3756789	1					
ANR	3756848	Argument	object		3756789	1					
ANR	3756849	Identifier	object		3756789	0					
ANR	3756850	ExpressionStatement	iterator -> intern . it . funcs = & spl_fixedarray_it_funcs	1038:1:27381:27433	3756789	5	True				
ANR	3756851	AssignmentExpression	iterator -> intern . it . funcs = & spl_fixedarray_it_funcs		3756789	0		=			
ANR	3756852	MemberAccess	iterator -> intern . it . funcs		3756789	0					
ANR	3756853	MemberAccess	iterator -> intern . it		3756789	0					
ANR	3756854	PtrMemberAccess	iterator -> intern		3756789	0					
ANR	3756855	Identifier	iterator		3756789	0					
ANR	3756856	Identifier	intern		3756789	1					
ANR	3756857	Identifier	it		3756789	1					
ANR	3756858	Identifier	funcs		3756789	1					
ANR	3756859	UnaryOperationExpression	& spl_fixedarray_it_funcs		3756789	1					
ANR	3756860	UnaryOperator	&		3756789	0					
ANR	3756861	Identifier	spl_fixedarray_it_funcs		3756789	1					
ANR	3756862	ExpressionStatement	iterator -> intern . ce = ce	1039:1:27436:27460	3756789	6	True				
ANR	3756863	AssignmentExpression	iterator -> intern . ce = ce		3756789	0		=			
ANR	3756864	MemberAccess	iterator -> intern . ce		3756789	0					
ANR	3756865	PtrMemberAccess	iterator -> intern		3756789	0					
ANR	3756866	Identifier	iterator		3756789	0					
ANR	3756867	Identifier	intern		3756789	1					
ANR	3756868	Identifier	ce		3756789	1					
ANR	3756869	Identifier	ce		3756789	1					
ANR	3756870	ExpressionStatement	ZVAL_UNDEF ( & iterator -> intern . value )	1040:1:27463:27498	3756789	7	True				
ANR	3756871	CallExpression	ZVAL_UNDEF ( & iterator -> intern . value )		3756789	0					
ANR	3756872	Callee	ZVAL_UNDEF		3756789	0					
ANR	3756873	Identifier	ZVAL_UNDEF		3756789	0					
ANR	3756874	ArgumentList	& iterator -> intern . value		3756789	1					
ANR	3756875	Argument	& iterator -> intern . value		3756789	0					
ANR	3756876	UnaryOperationExpression	& iterator -> intern . value		3756789	0					
ANR	3756877	UnaryOperator	&		3756789	0					
ANR	3756878	MemberAccess	iterator -> intern . value		3756789	1					
ANR	3756879	PtrMemberAccess	iterator -> intern		3756789	0					
ANR	3756880	Identifier	iterator		3756789	0					
ANR	3756881	Identifier	intern		3756789	1					
ANR	3756882	Identifier	value		3756789	1					
ANR	3756883	ReturnStatement	return & iterator -> intern . it ;	1042:1:27502:27529	3756789	8	True				
ANR	3756884	UnaryOperationExpression	& iterator -> intern . it		3756789	0					
ANR	3756885	UnaryOperator	&		3756789	0					
ANR	3756886	MemberAccess	iterator -> intern . it		3756789	1					
ANR	3756887	PtrMemberAccess	iterator -> intern		3756789	0					
ANR	3756888	Identifier	iterator		3756789	0					
ANR	3756889	Identifier	intern		3756789	1					
ANR	3756890	Identifier	it		3756789	1					
ANR	3756891	ReturnType	zend_object_iterator *		3756789	1					
ANR	3756892	Identifier	spl_fixedarray_get_iterator		3756789	2					
ANR	3756893	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		3756789	3					
ANR	3756894	Parameter	zend_class_entry * ce	1024:50:26996:27015	3756789	0	True				
ANR	3756895	ParameterType	zend_class_entry *		3756789	0					
ANR	3756896	Identifier	ce		3756789	1					
ANR	3756897	Parameter	zval * object	1024:72:27018:27029	3756789	1	True				
ANR	3756898	ParameterType	zval *		3756789	0					
ANR	3756899	Identifier	object		3756789	1					
ANR	3756900	Parameter	int by_ref	1024:86:27032:27041	3756789	2	True				
ANR	3756901	ParameterType	int		3756789	0					
ANR	3756902	Identifier	by_ref		3756789	1					
ANR	3756903	CFGEntryNode	ENTRY		3756789		True				
ANR	3756904	CFGExitNode	EXIT		3756789		True				
ANR	3756905	Symbol	& iterator -> intern . value		3756789						
ANR	3756906	Symbol	ce		3756789						
ANR	3756907	Symbol	iterator -> intern		3756789						
ANR	3756908	Symbol	NULL		3756789						
ANR	3756909	Symbol	& iterator -> intern . it . data		3756789						
ANR	3756910	Symbol	iterator -> intern . ce		3756789						
ANR	3756911	Symbol	& iterator -> intern		3756789						
ANR	3756912	Symbol	iterator -> intern . it		3756789						
ANR	3756913	Symbol	iterator		3756789						
ANR	3756914	Symbol	emalloc		3756789						
ANR	3756915	Symbol	* iterator		3756789						
ANR	3756916	Symbol	& iterator -> intern . it		3756789						
ANR	3756917	Symbol	iterator -> intern . it . funcs		3756789						
ANR	3756918	Symbol	by_ref		3756789						
ANR	3756919	Symbol	spl_ce_RuntimeException		3756789						
ANR	3756920	Symbol	& spl_fixedarray_it_funcs		3756789						
ANR	3756921	Symbol	object		3756789						
ANR	3756922	DeclStmt									
ANR	3756923	Decl							zend_function_entry	zend_function_entry [ ]	spl_funcs_SplFixedArray
