command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	888044	File	data/converged/CVE-2015-8617_php-src/ext_gd_libgd_gd_topal.c								
ANR	888045	DeclStmt									
ANR	888046	Decl							define SHIFT_TEMPS INT32	define SHIFT_TEMPS INT32	shift_temp
ANR	888047	DeclStmt									
ANR	888048	Decl							UINT16	UINT16	histcell
ANR	888049	DeclStmt									
ANR	888050	Decl							histcell FAR	histcell FAR *	histptr
ANR	888051	DeclStmt									
ANR	888052	Decl							histcell	histcell [ HIST_C2_ELEMS ]	hist1d
ANR	888053	DeclStmt									
ANR	888054	Decl							hist1d FAR	hist1d FAR *	hist2d
ANR	888055	DeclStmt									
ANR	888056	Decl							hist2d	hist2d *	hist3d
ANR	888057	DeclStmt									
ANR	888058	Decl							INT16	INT16	FSERROR
ANR	888059	DeclStmt									
ANR	888060	Decl							int	int	LOCFSERROR
ANR	888061	DeclStmt									
ANR	888062	Decl							INT32	INT32	FSERROR
ANR	888063	DeclStmt									
ANR	888064	Decl							INT32	INT32	LOCFSERROR
ANR	888065	DeclStmt									
ANR	888066	Decl							FSERROR FAR	FSERROR FAR *	FSERRPTR
ANR	888067	ClassDef	<unnamed>	304:8:11055:11865							
ANR	888068	DeclStmt									
ANR	888069	Decl							struct jpeg_color_quantizer	struct jpeg_color_quantizer	pub
ANR	888070	DeclStmt									
ANR	888071	Decl							JSAMPARRAY	JSAMPARRAY	sv_colormap
ANR	888072	DeclStmt									
ANR	888073	Decl							int	int	desired
ANR	888074	DeclStmt									
ANR	888075	Decl							boolean	boolean	needs_zeroed
ANR	888076	DeclStmt									
ANR	888077	Decl							hist3d	hist3d	histogram
ANR	888078	DeclStmt									
ANR	888079	Decl							FSERRPTR	FSERRPTR	fserrors
ANR	888080	DeclStmt									
ANR	888081	Decl							boolean	boolean	on_odd_row
ANR	888082	DeclStmt									
ANR	888083	Decl							int	int *	error_limiter
ANR	888084	DeclStmt									
ANR	888085	Decl							int	int *	error_limiter_storage
ANR	888086	DeclStmt									
ANR	888087	Decl									my_cquantizer
ANR	888088	DeclStmt									
ANR	888089	Decl							my_cquantizer	my_cquantizer *	my_cquantize_ptr
ANR	888090	Function	prescan_quantize	344:0:12278:13710							
ANR	888091	FunctionDef	"prescan_quantize (gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize)"		888090	0					
ANR	888092	CompoundStatement		345:0:12356:13710	888090	0					
ANR	888093	Statement	register	352:2:12548:12555	888090	0	True				
ANR	888094	IdentifierDeclStatement	JSAMPROW ptr ;	352:11:12557:12569	888090	1	True				
ANR	888095	IdentifierDecl	ptr		888090	0					
ANR	888096	IdentifierDeclType	JSAMPROW		888090	0					
ANR	888097	Identifier	ptr		888090	1					
ANR	888098	Statement	register	353:2:12573:12580	888090	2	True				
ANR	888099	IdentifierDeclStatement	histptr histp ;	353:11:12582:12595	888090	3	True				
ANR	888100	IdentifierDecl	histp		888090	0					
ANR	888101	IdentifierDeclType	histptr		888090	0					
ANR	888102	Identifier	histp		888090	1					
ANR	888103	Statement	register	354:2:12599:12606	888090	4	True				
ANR	888104	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	354:11:12608:12647	888090	5	True				
ANR	888105	IdentifierDecl	histogram = cquantize -> histogram		888090	0					
ANR	888106	IdentifierDeclType	hist3d		888090	0					
ANR	888107	Identifier	histogram		888090	1					
ANR	888108	AssignmentExpression	histogram = cquantize -> histogram		888090	2		=			
ANR	888109	Identifier	histogram		888090	0					
ANR	888110	PtrMemberAccess	cquantize -> histogram		888090	1					
ANR	888111	Identifier	cquantize		888090	0					
ANR	888112	Identifier	histogram		888090	1					
ANR	888113	IdentifierDeclStatement	int row ;	355:2:12651:12658	888090	6	True				
ANR	888114	IdentifierDecl	row		888090	0					
ANR	888115	IdentifierDeclType	int		888090	0					
ANR	888116	Identifier	row		888090	1					
ANR	888117	IdentifierDeclStatement	JDIMENSION col ;	356:2:12662:12676	888090	7	True				
ANR	888118	IdentifierDecl	col		888090	0					
ANR	888119	IdentifierDeclType	JDIMENSION		888090	0					
ANR	888120	Identifier	col		888090	1					
ANR	888121	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	358:2:12705:12743	888090	8	True				
ANR	888122	IdentifierDecl	width = cinfo -> output_width		888090	0					
ANR	888123	IdentifierDeclType	JDIMENSION		888090	0					
ANR	888124	Identifier	width		888090	1					
ANR	888125	AssignmentExpression	width = cinfo -> output_width		888090	2		=			
ANR	888126	Identifier	width		888090	0					
ANR	888127	PtrMemberAccess	cinfo -> output_width		888090	1					
ANR	888128	Identifier	cinfo		888090	0					
ANR	888129	Identifier	output_width		888090	1					
ANR	888130	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		888090	9					
ANR	888131	ForInit	row = 0 ;	364:7:12815:12822	888090	0	True				
ANR	888132	AssignmentExpression	row = 0		888090	0		=			
ANR	888133	Identifier	row		888090	0					
ANR	888134	PrimaryExpression	0		888090	1					
ANR	888135	Condition	row < num_rows	364:16:12824:12837	888090	1	True				
ANR	888136	RelationalExpression	row < num_rows		888090	0		<			
ANR	888137	Identifier	row		888090	0					
ANR	888138	Identifier	num_rows		888090	1					
ANR	888139	PostIncDecOperationExpression	row ++	364:32:12840:12844	888090	2	True				
ANR	888140	Identifier	row		888090	0					
ANR	888141	IncDec	++		888090	1					
ANR	888142	CompoundStatement		21:4:494:494	888090	3					
ANR	888143	ExpressionStatement	ptr = input_buf [ row ]	366:6:12859:12879	888090	0	True				
ANR	888144	AssignmentExpression	ptr = input_buf [ row ]		888090	0		=			
ANR	888145	Identifier	ptr		888090	0					
ANR	888146	ArrayIndexing	input_buf [ row ]		888090	1					
ANR	888147	Identifier	input_buf		888090	0					
ANR	888148	Identifier	row		888090	1					
ANR	888149	ForStatement	for ( col = width ; col > 0 ; col -- )		888090	1					
ANR	888150	ForInit	col = width ;	367:11:12892:12903	888090	0	True				
ANR	888151	AssignmentExpression	col = width		888090	0		=			
ANR	888152	Identifier	col		888090	0					
ANR	888153	Identifier	width		888090	1					
ANR	888154	Condition	col > 0	367:24:12905:12911	888090	1	True				
ANR	888155	RelationalExpression	col > 0		888090	0		>			
ANR	888156	Identifier	col		888090	0					
ANR	888157	PrimaryExpression	0		888090	1					
ANR	888158	PostIncDecOperationExpression	col --	367:33:12914:12918	888090	2	True				
ANR	888159	Identifier	col		888090	0					
ANR	888160	IncDec	--		888090	1					
ANR	888161	CompoundStatement		28:3:683:722	888090	3					
ANR	888162	IdentifierDeclStatement	int r = GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ;	370:3:12952:12991	888090	0	True				
ANR	888163	IdentifierDecl	r = GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT		888090	0					
ANR	888164	IdentifierDeclType	int		888090	0					
ANR	888165	Identifier	r		888090	1					
ANR	888166	AssignmentExpression	r = GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT		888090	2		=			
ANR	888167	Identifier	r		888090	0					
ANR	888168	ShiftExpression	GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT		888090	1		>>			
ANR	888169	CallExpression	GETJSAMPLE ( ptr [ 0 ] )		888090	0					
ANR	888170	Callee	GETJSAMPLE		888090	0					
ANR	888171	Identifier	GETJSAMPLE		888090	0					
ANR	888172	ArgumentList	ptr [ 0 ]		888090	1					
ANR	888173	Argument	ptr [ 0 ]		888090	0					
ANR	888174	ArrayIndexing	ptr [ 0 ]		888090	0					
ANR	888175	Identifier	ptr		888090	0					
ANR	888176	PrimaryExpression	0		888090	1					
ANR	888177	Identifier	C0_SHIFT		888090	1					
ANR	888178	IdentifierDeclStatement	int g = GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ;	371:3:12996:13035	888090	1	True				
ANR	888179	IdentifierDecl	g = GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT		888090	0					
ANR	888180	IdentifierDeclType	int		888090	0					
ANR	888181	Identifier	g		888090	1					
ANR	888182	AssignmentExpression	g = GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT		888090	2		=			
ANR	888183	Identifier	g		888090	0					
ANR	888184	ShiftExpression	GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT		888090	1		>>			
ANR	888185	CallExpression	GETJSAMPLE ( ptr [ 1 ] )		888090	0					
ANR	888186	Callee	GETJSAMPLE		888090	0					
ANR	888187	Identifier	GETJSAMPLE		888090	0					
ANR	888188	ArgumentList	ptr [ 1 ]		888090	1					
ANR	888189	Argument	ptr [ 1 ]		888090	0					
ANR	888190	ArrayIndexing	ptr [ 1 ]		888090	0					
ANR	888191	Identifier	ptr		888090	0					
ANR	888192	PrimaryExpression	1		888090	1					
ANR	888193	Identifier	C1_SHIFT		888090	1					
ANR	888194	IdentifierDeclStatement	int b = GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ;	372:3:13040:13079	888090	2	True				
ANR	888195	IdentifierDecl	b = GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT		888090	0					
ANR	888196	IdentifierDeclType	int		888090	0					
ANR	888197	Identifier	b		888090	1					
ANR	888198	AssignmentExpression	b = GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT		888090	2		=			
ANR	888199	Identifier	b		888090	0					
ANR	888200	ShiftExpression	GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT		888090	1		>>			
ANR	888201	CallExpression	GETJSAMPLE ( ptr [ 2 ] )		888090	0					
ANR	888202	Callee	GETJSAMPLE		888090	0					
ANR	888203	Identifier	GETJSAMPLE		888090	0					
ANR	888204	ArgumentList	ptr [ 2 ]		888090	1					
ANR	888205	Argument	ptr [ 2 ]		888090	0					
ANR	888206	ArrayIndexing	ptr [ 2 ]		888090	0					
ANR	888207	Identifier	ptr		888090	0					
ANR	888208	PrimaryExpression	2		888090	1					
ANR	888209	Identifier	C2_SHIFT		888090	1					
ANR	888210	ExpressionStatement	histp = & histogram [ r ] [ g ] [ b ]	386:3:13505:13532	888090	3	True				
ANR	888211	AssignmentExpression	histp = & histogram [ r ] [ g ] [ b ]		888090	0		=			
ANR	888212	Identifier	histp		888090	0					
ANR	888213	UnaryOperationExpression	& histogram [ r ] [ g ] [ b ]		888090	1					
ANR	888214	UnaryOperator	&		888090	0					
ANR	888215	ArrayIndexing	histogram [ r ] [ g ] [ b ]		888090	1					
ANR	888216	ArrayIndexing	histogram [ r ] [ g ]		888090	0					
ANR	888217	ArrayIndexing	histogram [ r ]		888090	0					
ANR	888218	Identifier	histogram		888090	0					
ANR	888219	Identifier	r		888090	1					
ANR	888220	Identifier	g		888090	1					
ANR	888221	Identifier	b		888090	1					
ANR	888222	IfStatement	if ( ++ ( * histp ) == 0 )		888090	4					
ANR	888223	Condition	++ ( * histp ) == 0	388:7:13606:13620	888090	0	True				
ANR	888224	EqualityExpression	++ ( * histp ) == 0		888090	0		==			
ANR	888225	UnaryExpression	++ ( * histp )		888090	0					
ANR	888226	IncDec	++		888090	0					
ANR	888227	UnaryOperationExpression	* histp		888090	1					
ANR	888228	UnaryOperator	*		888090	0					
ANR	888229	Identifier	histp		888090	1					
ANR	888230	PrimaryExpression	0		888090	1					
ANR	888231	ExpressionStatement	( * histp ) --	389:5:13628:13638	888090	1	True				
ANR	888232	PostIncDecOperationExpression	( * histp ) --		888090	0					
ANR	888233	UnaryOperationExpression	* histp		888090	0					
ANR	888234	UnaryOperator	*		888090	0					
ANR	888235	Identifier	histp		888090	1					
ANR	888236	IncDec	--		888090	1					
ANR	888237	ExpressionStatement	ptr += 3	391:3:13668:13676	888090	5	True				
ANR	888238	AssignmentExpression	ptr += 3		888090	0		+=			
ANR	888239	Identifier	ptr		888090	0					
ANR	888240	PrimaryExpression	3		888090	1					
ANR	888241	Identifier	prescan_quantize		888090	1					
ANR	888242	ParameterList	"gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize"		888090	2					
ANR	888243	Parameter	gdImagePtr oim	344:18:12296:12309	888090	0	True				
ANR	888244	ParameterType	gdImagePtr		888090	0					
ANR	888245	Identifier	oim		888090	1					
ANR	888246	Parameter	gdImagePtr nim	344:34:12312:12325	888090	1	True				
ANR	888247	ParameterType	gdImagePtr		888090	0					
ANR	888248	Identifier	nim		888090	1					
ANR	888249	Parameter	my_cquantize_ptr cquantize	344:50:12328:12353	888090	2	True				
ANR	888250	ParameterType	my_cquantize_ptr		888090	0					
ANR	888251	Identifier	cquantize		888090	1					
ANR	888252	CFGEntryNode	ENTRY		888090		True				
ANR	888253	CFGExitNode	EXIT		888090		True				
ANR	888254	Symbol	col		888090						
ANR	888255	Symbol	* * histogram		888090						
ANR	888256	Symbol	* row		888090						
ANR	888257	Symbol	C2_SHIFT		888090						
ANR	888258	Symbol	cquantize		888090						
ANR	888259	Symbol	* cquantize		888090						
ANR	888260	Symbol	cinfo -> output_width		888090						
ANR	888261	Symbol	cquantize -> histogram		888090						
ANR	888262	Symbol	oim		888090						
ANR	888263	Symbol	nim		888090						
ANR	888264	Symbol	* histp		888090						
ANR	888265	Symbol	num_rows		888090						
ANR	888266	Symbol	* ptr		888090						
ANR	888267	Symbol	C0_SHIFT		888090						
ANR	888268	Symbol	* * r		888090						
ANR	888269	Symbol	row		888090						
ANR	888270	Symbol	* cinfo		888090						
ANR	888271	Symbol	b		888090						
ANR	888272	Symbol	GETJSAMPLE		888090						
ANR	888273	Symbol	histp		888090						
ANR	888274	Symbol	g		888090						
ANR	888275	Symbol	* histogram		888090						
ANR	888276	Symbol	ptr		888090						
ANR	888277	Symbol	histogram		888090						
ANR	888278	Symbol	* g		888090						
ANR	888279	Symbol	r		888090						
ANR	888280	Symbol	cinfo		888090						
ANR	888281	Symbol	width		888090						
ANR	888282	Symbol	* r		888090						
ANR	888283	Symbol	input_buf		888090						
ANR	888284	Symbol	* input_buf		888090						
ANR	888285	Symbol	C1_SHIFT		888090						
ANR	888286	ClassDef	<unnamed>	407:8:13977:14270							
ANR	888287	DeclStmt									
ANR	888288	Decl							int	int	c0min
ANR	888289	Decl							int	int	c0max
ANR	888290	DeclStmt									
ANR	888291	Decl							int	int	c1min
ANR	888292	Decl							int	int	c1max
ANR	888293	DeclStmt									
ANR	888294	Decl							int	int	c2min
ANR	888295	Decl							int	int	c2max
ANR	888296	DeclStmt									
ANR	888297	Decl							INT32	INT32	volume
ANR	888298	DeclStmt									
ANR	888299	Decl							long	long	colorcount
ANR	888300	DeclStmt									
ANR	888301	Decl									box
ANR	888302	DeclStmt									
ANR	888303	Decl							box	box *	boxptr
ANR	888304	Function	find_biggest_color_pop	423:15:14311:14763							
ANR	888305	FunctionDef	"find_biggest_color_pop (boxptr boxlist , int numboxes)"		888304	0					
ANR	888306	CompoundStatement		426:0:14478:14763	888304	0					
ANR	888307	Statement	register	427:2:14482:14489	888304	0	True				
ANR	888308	IdentifierDeclStatement	boxptr boxp ;	427:11:14491:14502	888304	1	True				
ANR	888309	IdentifierDecl	boxp		888304	0					
ANR	888310	IdentifierDeclType	boxptr		888304	0					
ANR	888311	Identifier	boxp		888304	1					
ANR	888312	Statement	register	428:2:14506:14513	888304	2	True				
ANR	888313	IdentifierDeclStatement	int i ;	428:11:14515:14520	888304	3	True				
ANR	888314	IdentifierDecl	i		888304	0					
ANR	888315	IdentifierDeclType	int		888304	0					
ANR	888316	Identifier	i		888304	1					
ANR	888317	Statement	register	429:2:14524:14531	888304	4	True				
ANR	888318	IdentifierDeclStatement	long maxc = 0 ;	429:11:14533:14546	888304	5	True				
ANR	888319	IdentifierDecl	maxc = 0		888304	0					
ANR	888320	IdentifierDeclType	long		888304	0					
ANR	888321	Identifier	maxc		888304	1					
ANR	888322	AssignmentExpression	maxc = 0		888304	2		=			
ANR	888323	Identifier	maxc		888304	0					
ANR	888324	PrimaryExpression	0		888304	1					
ANR	888325	IdentifierDeclStatement	boxptr which = NULL ;	430:2:14550:14569	888304	6	True				
ANR	888326	IdentifierDecl	which = NULL		888304	0					
ANR	888327	IdentifierDeclType	boxptr		888304	0					
ANR	888328	Identifier	which		888304	1					
ANR	888329	AssignmentExpression	which = NULL		888304	2		=			
ANR	888330	Identifier	NULL		888304	0					
ANR	888331	Identifier	NULL		888304	1					
ANR	888332	ForStatement	"for ( i = 0 , boxp = boxlist ; i < numboxes ; i ++ , boxp ++ )"		888304	7					
ANR	888333	ForInit	"i = 0 , boxp = boxlist ;"	432:7:14579:14600	888304	0	True				
ANR	888334	Expression	"i = 0 , boxp = boxlist"		888304	0					
ANR	888335	AssignmentExpression	i = 0		888304	0		=			
ANR	888336	Identifier	i		888304	0					
ANR	888337	PrimaryExpression	0		888304	1					
ANR	888338	AssignmentExpression	boxp = boxlist		888304	1		=			
ANR	888339	Identifier	boxp		888304	0					
ANR	888340	Identifier	boxlist		888304	1					
ANR	888341	Condition	i < numboxes	432:30:14602:14613	888304	1	True				
ANR	888342	RelationalExpression	i < numboxes		888304	0		<			
ANR	888343	Identifier	i		888304	0					
ANR	888344	Identifier	numboxes		888304	1					
ANR	888345	Expression	"i ++ , boxp ++"	432:44:14616:14626	888304	2	True				
ANR	888346	PostIncDecOperationExpression	i ++		888304	0					
ANR	888347	Identifier	i		888304	0					
ANR	888348	IncDec	++		888304	1					
ANR	888349	PostIncDecOperationExpression	boxp ++		888304	1					
ANR	888350	Identifier	boxp		888304	0					
ANR	888351	IncDec	++		888304	1					
ANR	888352	CompoundStatement		8:4:154:154	888304	3					
ANR	888353	IfStatement	if ( boxp -> colorcount > maxc && boxp -> volume > 0 )		888304	0					
ANR	888354	Condition	boxp -> colorcount > maxc && boxp -> volume > 0	434:10:14645:14687	888304	0	True				
ANR	888355	AndExpression	boxp -> colorcount > maxc && boxp -> volume > 0		888304	0		&&			
ANR	888356	RelationalExpression	boxp -> colorcount > maxc		888304	0		>			
ANR	888357	PtrMemberAccess	boxp -> colorcount		888304	0					
ANR	888358	Identifier	boxp		888304	0					
ANR	888359	Identifier	colorcount		888304	1					
ANR	888360	Identifier	maxc		888304	1					
ANR	888361	RelationalExpression	boxp -> volume > 0		888304	1		>			
ANR	888362	PtrMemberAccess	boxp -> volume		888304	0					
ANR	888363	Identifier	boxp		888304	0					
ANR	888364	Identifier	volume		888304	1					
ANR	888365	PrimaryExpression	0		888304	1					
ANR	888366	CompoundStatement		10:1:212:212	888304	1					
ANR	888367	ExpressionStatement	which = boxp	436:3:14696:14708	888304	0	True				
ANR	888368	AssignmentExpression	which = boxp		888304	0		=			
ANR	888369	Identifier	which		888304	0					
ANR	888370	Identifier	boxp		888304	1					
ANR	888371	ExpressionStatement	maxc = boxp -> colorcount	437:3:14713:14736	888304	1	True				
ANR	888372	AssignmentExpression	maxc = boxp -> colorcount		888304	0		=			
ANR	888373	Identifier	maxc		888304	0					
ANR	888374	PtrMemberAccess	boxp -> colorcount		888304	1					
ANR	888375	Identifier	boxp		888304	0					
ANR	888376	Identifier	colorcount		888304	1					
ANR	888377	ReturnStatement	return which ;	440:2:14749:14761	888304	8	True				
ANR	888378	Identifier	which		888304	0					
ANR	888379	Identifier	find_biggest_color_pop		888304	1					
ANR	888380	ParameterList	"boxptr boxlist , int numboxes"		888304	2					
ANR	888381	Parameter	boxptr boxlist	423:39:14335:14348	888304	0	True				
ANR	888382	ParameterType	boxptr		888304	0					
ANR	888383	Identifier	boxlist		888304	1					
ANR	888384	Parameter	int numboxes	423:55:14351:14362	888304	1	True				
ANR	888385	ParameterType	int		888304	0					
ANR	888386	Identifier	numboxes		888304	1					
ANR	888387	CFGEntryNode	ENTRY		888304		True				
ANR	888388	CFGExitNode	EXIT		888304		True				
ANR	888389	Symbol	numboxes		888304						
ANR	888390	Symbol	which		888304						
ANR	888391	Symbol	boxp -> colorcount		888304						
ANR	888392	Symbol	boxlist		888304						
ANR	888393	Symbol	NULL		888304						
ANR	888394	Symbol	boxp -> volume		888304						
ANR	888395	Symbol	* boxp		888304						
ANR	888396	Symbol	i		888304						
ANR	888397	Symbol	boxp		888304						
ANR	888398	Symbol	maxc		888304						
ANR	888399	Function	find_biggest_volume	444:15:14782:15203							
ANR	888400	FunctionDef	"find_biggest_volume (boxptr boxlist , int numboxes)"		888399	0					
ANR	888401	CompoundStatement		447:0:14945:15203	888399	0					
ANR	888402	Statement	register	448:2:14949:14956	888399	0	True				
ANR	888403	IdentifierDeclStatement	boxptr boxp ;	448:11:14958:14969	888399	1	True				
ANR	888404	IdentifierDecl	boxp		888399	0					
ANR	888405	IdentifierDeclType	boxptr		888399	0					
ANR	888406	Identifier	boxp		888399	1					
ANR	888407	Statement	register	449:2:14973:14980	888399	2	True				
ANR	888408	IdentifierDeclStatement	int i ;	449:11:14982:14987	888399	3	True				
ANR	888409	IdentifierDecl	i		888399	0					
ANR	888410	IdentifierDeclType	int		888399	0					
ANR	888411	Identifier	i		888399	1					
ANR	888412	Statement	register	450:2:14991:14998	888399	4	True				
ANR	888413	IdentifierDeclStatement	INT32 maxv = 0 ;	450:11:15000:15014	888399	5	True				
ANR	888414	IdentifierDecl	maxv = 0		888399	0					
ANR	888415	IdentifierDeclType	INT32		888399	0					
ANR	888416	Identifier	maxv		888399	1					
ANR	888417	AssignmentExpression	maxv = 0		888399	2		=			
ANR	888418	Identifier	maxv		888399	0					
ANR	888419	PrimaryExpression	0		888399	1					
ANR	888420	IdentifierDeclStatement	boxptr which = NULL ;	451:2:15018:15037	888399	6	True				
ANR	888421	IdentifierDecl	which = NULL		888399	0					
ANR	888422	IdentifierDeclType	boxptr		888399	0					
ANR	888423	Identifier	which		888399	1					
ANR	888424	AssignmentExpression	which = NULL		888399	2		=			
ANR	888425	Identifier	NULL		888399	0					
ANR	888426	Identifier	NULL		888399	1					
ANR	888427	ForStatement	"for ( i = 0 , boxp = boxlist ; i < numboxes ; i ++ , boxp ++ )"		888399	7					
ANR	888428	ForInit	"i = 0 , boxp = boxlist ;"	453:7:15047:15068	888399	0	True				
ANR	888429	Expression	"i = 0 , boxp = boxlist"		888399	0					
ANR	888430	AssignmentExpression	i = 0		888399	0		=			
ANR	888431	Identifier	i		888399	0					
ANR	888432	PrimaryExpression	0		888399	1					
ANR	888433	AssignmentExpression	boxp = boxlist		888399	1		=			
ANR	888434	Identifier	boxp		888399	0					
ANR	888435	Identifier	boxlist		888399	1					
ANR	888436	Condition	i < numboxes	453:30:15070:15081	888399	1	True				
ANR	888437	RelationalExpression	i < numboxes		888399	0		<			
ANR	888438	Identifier	i		888399	0					
ANR	888439	Identifier	numboxes		888399	1					
ANR	888440	Expression	"i ++ , boxp ++"	453:44:15084:15094	888399	2	True				
ANR	888441	PostIncDecOperationExpression	i ++		888399	0					
ANR	888442	Identifier	i		888399	0					
ANR	888443	IncDec	++		888399	1					
ANR	888444	PostIncDecOperationExpression	boxp ++		888399	1					
ANR	888445	Identifier	boxp		888399	0					
ANR	888446	IncDec	++		888399	1					
ANR	888447	CompoundStatement		8:4:155:155	888399	3					
ANR	888448	IfStatement	if ( boxp -> volume > maxv )		888399	0					
ANR	888449	Condition	boxp -> volume > maxv	455:10:15113:15131	888399	0	True				
ANR	888450	RelationalExpression	boxp -> volume > maxv		888399	0		>			
ANR	888451	PtrMemberAccess	boxp -> volume		888399	0					
ANR	888452	Identifier	boxp		888399	0					
ANR	888453	Identifier	volume		888399	1					
ANR	888454	Identifier	maxv		888399	1					
ANR	888455	CompoundStatement		10:1:189:189	888399	1					
ANR	888456	ExpressionStatement	which = boxp	457:3:15140:15152	888399	0	True				
ANR	888457	AssignmentExpression	which = boxp		888399	0		=			
ANR	888458	Identifier	which		888399	0					
ANR	888459	Identifier	boxp		888399	1					
ANR	888460	ExpressionStatement	maxv = boxp -> volume	458:3:15157:15176	888399	1	True				
ANR	888461	AssignmentExpression	maxv = boxp -> volume		888399	0		=			
ANR	888462	Identifier	maxv		888399	0					
ANR	888463	PtrMemberAccess	boxp -> volume		888399	1					
ANR	888464	Identifier	boxp		888399	0					
ANR	888465	Identifier	volume		888399	1					
ANR	888466	ReturnStatement	return which ;	461:2:15189:15201	888399	8	True				
ANR	888467	Identifier	which		888399	0					
ANR	888468	Identifier	find_biggest_volume		888399	1					
ANR	888469	ParameterList	"boxptr boxlist , int numboxes"		888399	2					
ANR	888470	Parameter	boxptr boxlist	444:36:14803:14816	888399	0	True				
ANR	888471	ParameterType	boxptr		888399	0					
ANR	888472	Identifier	boxlist		888399	1					
ANR	888473	Parameter	int numboxes	444:52:14819:14830	888399	1	True				
ANR	888474	ParameterType	int		888399	0					
ANR	888475	Identifier	numboxes		888399	1					
ANR	888476	CFGEntryNode	ENTRY		888399		True				
ANR	888477	CFGExitNode	EXIT		888399		True				
ANR	888478	Symbol	numboxes		888399						
ANR	888479	Symbol	which		888399						
ANR	888480	Symbol	maxv		888399						
ANR	888481	Symbol	boxlist		888399						
ANR	888482	Symbol	NULL		888399						
ANR	888483	Symbol	boxp -> volume		888399						
ANR	888484	Symbol	* boxp		888399						
ANR	888485	Symbol	i		888399						
ANR	888486	Symbol	boxp		888399						
ANR	888487	Function	update_box	467:2:15248:18651							
ANR	888488	FunctionDef	"update_box (gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize , boxptr boxp)"		888487	0					
ANR	888489	CompoundStatement		468:0:15333:18651	888487	0					
ANR	888490	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	476:2:15592:15631	888487	0	True				
ANR	888491	IdentifierDecl	histogram = cquantize -> histogram		888487	0					
ANR	888492	IdentifierDeclType	hist3d		888487	0					
ANR	888493	Identifier	histogram		888487	1					
ANR	888494	AssignmentExpression	histogram = cquantize -> histogram		888487	2		=			
ANR	888495	Identifier	histogram		888487	0					
ANR	888496	PtrMemberAccess	cquantize -> histogram		888487	1					
ANR	888497	Identifier	cquantize		888487	0					
ANR	888498	Identifier	histogram		888487	1					
ANR	888499	IdentifierDeclStatement	histptr histp ;	477:2:15635:15648	888487	1	True				
ANR	888500	IdentifierDecl	histp		888487	0					
ANR	888501	IdentifierDeclType	histptr		888487	0					
ANR	888502	Identifier	histp		888487	1					
ANR	888503	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	478:2:15652:15666	888487	2	True				
ANR	888504	IdentifierDecl	c0		888487	0					
ANR	888505	IdentifierDeclType	int		888487	0					
ANR	888506	Identifier	c0		888487	1					
ANR	888507	IdentifierDecl	c1		888487	1					
ANR	888508	IdentifierDeclType	int		888487	0					
ANR	888509	Identifier	c1		888487	1					
ANR	888510	IdentifierDecl	c2		888487	2					
ANR	888511	IdentifierDeclType	int		888487	0					
ANR	888512	Identifier	c2		888487	1					
ANR	888513	IdentifierDeclStatement	"int c0min , c0max , c1min , c1max , c2min , c2max ;"	479:2:15670:15714	888487	3	True				
ANR	888514	IdentifierDecl	c0min		888487	0					
ANR	888515	IdentifierDeclType	int		888487	0					
ANR	888516	Identifier	c0min		888487	1					
ANR	888517	IdentifierDecl	c0max		888487	1					
ANR	888518	IdentifierDeclType	int		888487	0					
ANR	888519	Identifier	c0max		888487	1					
ANR	888520	IdentifierDecl	c1min		888487	2					
ANR	888521	IdentifierDeclType	int		888487	0					
ANR	888522	Identifier	c1min		888487	1					
ANR	888523	IdentifierDecl	c1max		888487	3					
ANR	888524	IdentifierDeclType	int		888487	0					
ANR	888525	Identifier	c1max		888487	1					
ANR	888526	IdentifierDecl	c2min		888487	4					
ANR	888527	IdentifierDeclType	int		888487	0					
ANR	888528	Identifier	c2min		888487	1					
ANR	888529	IdentifierDecl	c2max		888487	5					
ANR	888530	IdentifierDeclType	int		888487	0					
ANR	888531	Identifier	c2max		888487	1					
ANR	888532	IdentifierDeclStatement	"INT32 dist0 , dist1 , dist2 ;"	480:2:15718:15743	888487	4	True				
ANR	888533	IdentifierDecl	dist0		888487	0					
ANR	888534	IdentifierDeclType	INT32		888487	0					
ANR	888535	Identifier	dist0		888487	1					
ANR	888536	IdentifierDecl	dist1		888487	1					
ANR	888537	IdentifierDeclType	INT32		888487	0					
ANR	888538	Identifier	dist1		888487	1					
ANR	888539	IdentifierDecl	dist2		888487	2					
ANR	888540	IdentifierDeclType	INT32		888487	0					
ANR	888541	Identifier	dist2		888487	1					
ANR	888542	IdentifierDeclStatement	long ccount ;	481:2:15747:15758	888487	5	True				
ANR	888543	IdentifierDecl	ccount		888487	0					
ANR	888544	IdentifierDeclType	long		888487	0					
ANR	888545	Identifier	ccount		888487	1					
ANR	888546	ExpressionStatement	c0min = boxp -> c0min	483:2:15763:15782	888487	6	True				
ANR	888547	AssignmentExpression	c0min = boxp -> c0min		888487	0		=			
ANR	888548	Identifier	c0min		888487	0					
ANR	888549	PtrMemberAccess	boxp -> c0min		888487	1					
ANR	888550	Identifier	boxp		888487	0					
ANR	888551	Identifier	c0min		888487	1					
ANR	888552	ExpressionStatement	c0max = boxp -> c0max	484:2:15786:15805	888487	7	True				
ANR	888553	AssignmentExpression	c0max = boxp -> c0max		888487	0		=			
ANR	888554	Identifier	c0max		888487	0					
ANR	888555	PtrMemberAccess	boxp -> c0max		888487	1					
ANR	888556	Identifier	boxp		888487	0					
ANR	888557	Identifier	c0max		888487	1					
ANR	888558	ExpressionStatement	c1min = boxp -> c1min	485:2:15809:15828	888487	8	True				
ANR	888559	AssignmentExpression	c1min = boxp -> c1min		888487	0		=			
ANR	888560	Identifier	c1min		888487	0					
ANR	888561	PtrMemberAccess	boxp -> c1min		888487	1					
ANR	888562	Identifier	boxp		888487	0					
ANR	888563	Identifier	c1min		888487	1					
ANR	888564	ExpressionStatement	c1max = boxp -> c1max	486:2:15832:15851	888487	9	True				
ANR	888565	AssignmentExpression	c1max = boxp -> c1max		888487	0		=			
ANR	888566	Identifier	c1max		888487	0					
ANR	888567	PtrMemberAccess	boxp -> c1max		888487	1					
ANR	888568	Identifier	boxp		888487	0					
ANR	888569	Identifier	c1max		888487	1					
ANR	888570	ExpressionStatement	c2min = boxp -> c2min	487:2:15855:15874	888487	10	True				
ANR	888571	AssignmentExpression	c2min = boxp -> c2min		888487	0		=			
ANR	888572	Identifier	c2min		888487	0					
ANR	888573	PtrMemberAccess	boxp -> c2min		888487	1					
ANR	888574	Identifier	boxp		888487	0					
ANR	888575	Identifier	c2min		888487	1					
ANR	888576	ExpressionStatement	c2max = boxp -> c2max	488:2:15878:15897	888487	11	True				
ANR	888577	AssignmentExpression	c2max = boxp -> c2max		888487	0		=			
ANR	888578	Identifier	c2max		888487	0					
ANR	888579	PtrMemberAccess	boxp -> c2max		888487	1					
ANR	888580	Identifier	boxp		888487	0					
ANR	888581	Identifier	c2max		888487	1					
ANR	888582	IfStatement	if ( c0max > c0min )		888487	12					
ANR	888583	Condition	c0max > c0min	490:6:15906:15918	888487	0	True				
ANR	888584	RelationalExpression	c0max > c0min		888487	0		>			
ANR	888585	Identifier	c0max		888487	0					
ANR	888586	Identifier	c0min		888487	1					
ANR	888587	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		888487	1					
ANR	888588	ForInit	c0 = c0min ;	491:9:15930:15940	888487	0	True				
ANR	888589	AssignmentExpression	c0 = c0min		888487	0		=			
ANR	888590	Identifier	c0		888487	0					
ANR	888591	Identifier	c0min		888487	1					
ANR	888592	Condition	c0 <= c0max	491:21:15942:15952	888487	1	True				
ANR	888593	RelationalExpression	c0 <= c0max		888487	0		<=			
ANR	888594	Identifier	c0		888487	0					
ANR	888595	Identifier	c0max		888487	1					
ANR	888596	PostIncDecOperationExpression	c0 ++	491:34:15955:15958	888487	2	True				
ANR	888597	Identifier	c0		888487	0					
ANR	888598	IncDec	++		888487	1					
ANR	888599	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		888487	3					
ANR	888600	ForInit	c1 = c1min ;	492:11:15972:15982	888487	0	True				
ANR	888601	AssignmentExpression	c1 = c1min		888487	0		=			
ANR	888602	Identifier	c1		888487	0					
ANR	888603	Identifier	c1min		888487	1					
ANR	888604	Condition	c1 <= c1max	492:23:15984:15994	888487	1	True				
ANR	888605	RelationalExpression	c1 <= c1max		888487	0		<=			
ANR	888606	Identifier	c1		888487	0					
ANR	888607	Identifier	c1max		888487	1					
ANR	888608	PostIncDecOperationExpression	c1 ++	492:36:15997:16000	888487	2	True				
ANR	888609	Identifier	c1		888487	0					
ANR	888610	IncDec	++		888487	1					
ANR	888611	CompoundStatement		26:1:670:670	888487	3					
ANR	888612	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	494:3:16009:16042	888487	0	True				
ANR	888613	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		888487	0		=			
ANR	888614	Identifier	histp		888487	0					
ANR	888615	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888616	UnaryOperator	&		888487	0					
ANR	888617	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888618	ArrayIndexing	histogram [ c0 ] [ c1 ]		888487	0					
ANR	888619	ArrayIndexing	histogram [ c0 ]		888487	0					
ANR	888620	Identifier	histogram		888487	0					
ANR	888621	Identifier	c0		888487	1					
ANR	888622	Identifier	c1		888487	1					
ANR	888623	Identifier	c2min		888487	1					
ANR	888624	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		888487	1					
ANR	888625	ForInit	c2 = c2min ;	495:8:16052:16062	888487	0	True				
ANR	888626	AssignmentExpression	c2 = c2min		888487	0		=			
ANR	888627	Identifier	c2		888487	0					
ANR	888628	Identifier	c2min		888487	1					
ANR	888629	Condition	c2 <= c2max	495:20:16064:16074	888487	1	True				
ANR	888630	RelationalExpression	c2 <= c2max		888487	0		<=			
ANR	888631	Identifier	c2		888487	0					
ANR	888632	Identifier	c2max		888487	1					
ANR	888633	PostIncDecOperationExpression	c2 ++	495:33:16077:16080	888487	2	True				
ANR	888634	Identifier	c2		888487	0					
ANR	888635	IncDec	++		888487	1					
ANR	888636	IfStatement	if ( * histp ++ != 0 )		888487	3					
ANR	888637	Condition	* histp ++ != 0	496:9:16092:16104	888487	0	True				
ANR	888638	EqualityExpression	* histp ++ != 0		888487	0		!=			
ANR	888639	UnaryOperationExpression	* histp ++		888487	0					
ANR	888640	UnaryOperator	*		888487	0					
ANR	888641	PostIncDecOperationExpression	histp ++		888487	1					
ANR	888642	Identifier	histp		888487	0					
ANR	888643	IncDec	++		888487	1					
ANR	888644	PrimaryExpression	0		888487	1					
ANR	888645	CompoundStatement		30:7:780:780	888487	1					
ANR	888646	ExpressionStatement	boxp -> c0min = c0min = c0	498:2:16118:16142	888487	0	True				
ANR	888647	AssignmentExpression	boxp -> c0min = c0min = c0		888487	0		=			
ANR	888648	PtrMemberAccess	boxp -> c0min		888487	0					
ANR	888649	Identifier	boxp		888487	0					
ANR	888650	Identifier	c0min		888487	1					
ANR	888651	AssignmentExpression	c0min = c0		888487	1		=			
ANR	888652	Identifier	c0min		888487	0					
ANR	888653	Identifier	c0		888487	1					
ANR	888654	GotoStatement	goto have_c0min ;	499:2:16146:16161	888487	1	True				
ANR	888655	Identifier	have_c0min		888487	0					
ANR	888656	Label	have_c0min :	502:0:16175:16185	888487	13	True				
ANR	888657	Identifier	have_c0min		888487	0					
ANR	888658	IfStatement	if ( c0max > c0min )		888487	14					
ANR	888659	Condition	c0max > c0min	503:6:16193:16205	888487	0	True				
ANR	888660	RelationalExpression	c0max > c0min		888487	0		>			
ANR	888661	Identifier	c0max		888487	0					
ANR	888662	Identifier	c0min		888487	1					
ANR	888663	ForStatement	for ( c0 = c0max ; c0 >= c0min ; c0 -- )		888487	1					
ANR	888664	ForInit	c0 = c0max ;	504:9:16217:16227	888487	0	True				
ANR	888665	AssignmentExpression	c0 = c0max		888487	0		=			
ANR	888666	Identifier	c0		888487	0					
ANR	888667	Identifier	c0max		888487	1					
ANR	888668	Condition	c0 >= c0min	504:21:16229:16239	888487	1	True				
ANR	888669	RelationalExpression	c0 >= c0min		888487	0		>=			
ANR	888670	Identifier	c0		888487	0					
ANR	888671	Identifier	c0min		888487	1					
ANR	888672	PostIncDecOperationExpression	c0 --	504:34:16242:16245	888487	2	True				
ANR	888673	Identifier	c0		888487	0					
ANR	888674	IncDec	--		888487	1					
ANR	888675	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		888487	3					
ANR	888676	ForInit	c1 = c1min ;	505:11:16259:16269	888487	0	True				
ANR	888677	AssignmentExpression	c1 = c1min		888487	0		=			
ANR	888678	Identifier	c1		888487	0					
ANR	888679	Identifier	c1min		888487	1					
ANR	888680	Condition	c1 <= c1max	505:23:16271:16281	888487	1	True				
ANR	888681	RelationalExpression	c1 <= c1max		888487	0		<=			
ANR	888682	Identifier	c1		888487	0					
ANR	888683	Identifier	c1max		888487	1					
ANR	888684	PostIncDecOperationExpression	c1 ++	505:36:16284:16287	888487	2	True				
ANR	888685	Identifier	c1		888487	0					
ANR	888686	IncDec	++		888487	1					
ANR	888687	CompoundStatement		39:1:957:957	888487	3					
ANR	888688	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	507:3:16296:16329	888487	0	True				
ANR	888689	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		888487	0		=			
ANR	888690	Identifier	histp		888487	0					
ANR	888691	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888692	UnaryOperator	&		888487	0					
ANR	888693	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888694	ArrayIndexing	histogram [ c0 ] [ c1 ]		888487	0					
ANR	888695	ArrayIndexing	histogram [ c0 ]		888487	0					
ANR	888696	Identifier	histogram		888487	0					
ANR	888697	Identifier	c0		888487	1					
ANR	888698	Identifier	c1		888487	1					
ANR	888699	Identifier	c2min		888487	1					
ANR	888700	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		888487	1					
ANR	888701	ForInit	c2 = c2min ;	508:8:16339:16349	888487	0	True				
ANR	888702	AssignmentExpression	c2 = c2min		888487	0		=			
ANR	888703	Identifier	c2		888487	0					
ANR	888704	Identifier	c2min		888487	1					
ANR	888705	Condition	c2 <= c2max	508:20:16351:16361	888487	1	True				
ANR	888706	RelationalExpression	c2 <= c2max		888487	0		<=			
ANR	888707	Identifier	c2		888487	0					
ANR	888708	Identifier	c2max		888487	1					
ANR	888709	PostIncDecOperationExpression	c2 ++	508:33:16364:16367	888487	2	True				
ANR	888710	Identifier	c2		888487	0					
ANR	888711	IncDec	++		888487	1					
ANR	888712	IfStatement	if ( * histp ++ != 0 )		888487	3					
ANR	888713	Condition	* histp ++ != 0	509:9:16379:16391	888487	0	True				
ANR	888714	EqualityExpression	* histp ++ != 0		888487	0		!=			
ANR	888715	UnaryOperationExpression	* histp ++		888487	0					
ANR	888716	UnaryOperator	*		888487	0					
ANR	888717	PostIncDecOperationExpression	histp ++		888487	1					
ANR	888718	Identifier	histp		888487	0					
ANR	888719	IncDec	++		888487	1					
ANR	888720	PrimaryExpression	0		888487	1					
ANR	888721	CompoundStatement		43:7:1067:1067	888487	1					
ANR	888722	ExpressionStatement	boxp -> c0max = c0max = c0	511:2:16405:16429	888487	0	True				
ANR	888723	AssignmentExpression	boxp -> c0max = c0max = c0		888487	0		=			
ANR	888724	PtrMemberAccess	boxp -> c0max		888487	0					
ANR	888725	Identifier	boxp		888487	0					
ANR	888726	Identifier	c0max		888487	1					
ANR	888727	AssignmentExpression	c0max = c0		888487	1		=			
ANR	888728	Identifier	c0max		888487	0					
ANR	888729	Identifier	c0		888487	1					
ANR	888730	GotoStatement	goto have_c0max ;	512:2:16433:16448	888487	1	True				
ANR	888731	Identifier	have_c0max		888487	0					
ANR	888732	Label	have_c0max :	515:0:16462:16472	888487	15	True				
ANR	888733	Identifier	have_c0max		888487	0					
ANR	888734	IfStatement	if ( c1max > c1min )		888487	16					
ANR	888735	Condition	c1max > c1min	516:6:16480:16492	888487	0	True				
ANR	888736	RelationalExpression	c1max > c1min		888487	0		>			
ANR	888737	Identifier	c1max		888487	0					
ANR	888738	Identifier	c1min		888487	1					
ANR	888739	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		888487	1					
ANR	888740	ForInit	c1 = c1min ;	517:9:16504:16514	888487	0	True				
ANR	888741	AssignmentExpression	c1 = c1min		888487	0		=			
ANR	888742	Identifier	c1		888487	0					
ANR	888743	Identifier	c1min		888487	1					
ANR	888744	Condition	c1 <= c1max	517:21:16516:16526	888487	1	True				
ANR	888745	RelationalExpression	c1 <= c1max		888487	0		<=			
ANR	888746	Identifier	c1		888487	0					
ANR	888747	Identifier	c1max		888487	1					
ANR	888748	PostIncDecOperationExpression	c1 ++	517:34:16529:16532	888487	2	True				
ANR	888749	Identifier	c1		888487	0					
ANR	888750	IncDec	++		888487	1					
ANR	888751	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		888487	3					
ANR	888752	ForInit	c0 = c0min ;	518:11:16546:16556	888487	0	True				
ANR	888753	AssignmentExpression	c0 = c0min		888487	0		=			
ANR	888754	Identifier	c0		888487	0					
ANR	888755	Identifier	c0min		888487	1					
ANR	888756	Condition	c0 <= c0max	518:23:16558:16568	888487	1	True				
ANR	888757	RelationalExpression	c0 <= c0max		888487	0		<=			
ANR	888758	Identifier	c0		888487	0					
ANR	888759	Identifier	c0max		888487	1					
ANR	888760	PostIncDecOperationExpression	c0 ++	518:36:16571:16574	888487	2	True				
ANR	888761	Identifier	c0		888487	0					
ANR	888762	IncDec	++		888487	1					
ANR	888763	CompoundStatement		52:1:1244:1244	888487	3					
ANR	888764	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	520:3:16583:16616	888487	0	True				
ANR	888765	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		888487	0		=			
ANR	888766	Identifier	histp		888487	0					
ANR	888767	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888768	UnaryOperator	&		888487	0					
ANR	888769	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888770	ArrayIndexing	histogram [ c0 ] [ c1 ]		888487	0					
ANR	888771	ArrayIndexing	histogram [ c0 ]		888487	0					
ANR	888772	Identifier	histogram		888487	0					
ANR	888773	Identifier	c0		888487	1					
ANR	888774	Identifier	c1		888487	1					
ANR	888775	Identifier	c2min		888487	1					
ANR	888776	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		888487	1					
ANR	888777	ForInit	c2 = c2min ;	521:8:16626:16636	888487	0	True				
ANR	888778	AssignmentExpression	c2 = c2min		888487	0		=			
ANR	888779	Identifier	c2		888487	0					
ANR	888780	Identifier	c2min		888487	1					
ANR	888781	Condition	c2 <= c2max	521:20:16638:16648	888487	1	True				
ANR	888782	RelationalExpression	c2 <= c2max		888487	0		<=			
ANR	888783	Identifier	c2		888487	0					
ANR	888784	Identifier	c2max		888487	1					
ANR	888785	PostIncDecOperationExpression	c2 ++	521:33:16651:16654	888487	2	True				
ANR	888786	Identifier	c2		888487	0					
ANR	888787	IncDec	++		888487	1					
ANR	888788	IfStatement	if ( * histp ++ != 0 )		888487	3					
ANR	888789	Condition	* histp ++ != 0	522:9:16666:16678	888487	0	True				
ANR	888790	EqualityExpression	* histp ++ != 0		888487	0		!=			
ANR	888791	UnaryOperationExpression	* histp ++		888487	0					
ANR	888792	UnaryOperator	*		888487	0					
ANR	888793	PostIncDecOperationExpression	histp ++		888487	1					
ANR	888794	Identifier	histp		888487	0					
ANR	888795	IncDec	++		888487	1					
ANR	888796	PrimaryExpression	0		888487	1					
ANR	888797	CompoundStatement		56:7:1354:1354	888487	1					
ANR	888798	ExpressionStatement	boxp -> c1min = c1min = c1	524:2:16692:16716	888487	0	True				
ANR	888799	AssignmentExpression	boxp -> c1min = c1min = c1		888487	0		=			
ANR	888800	PtrMemberAccess	boxp -> c1min		888487	0					
ANR	888801	Identifier	boxp		888487	0					
ANR	888802	Identifier	c1min		888487	1					
ANR	888803	AssignmentExpression	c1min = c1		888487	1		=			
ANR	888804	Identifier	c1min		888487	0					
ANR	888805	Identifier	c1		888487	1					
ANR	888806	GotoStatement	goto have_c1min ;	525:2:16720:16735	888487	1	True				
ANR	888807	Identifier	have_c1min		888487	0					
ANR	888808	Label	have_c1min :	528:0:16749:16759	888487	17	True				
ANR	888809	Identifier	have_c1min		888487	0					
ANR	888810	IfStatement	if ( c1max > c1min )		888487	18					
ANR	888811	Condition	c1max > c1min	529:6:16767:16779	888487	0	True				
ANR	888812	RelationalExpression	c1max > c1min		888487	0		>			
ANR	888813	Identifier	c1max		888487	0					
ANR	888814	Identifier	c1min		888487	1					
ANR	888815	ForStatement	for ( c1 = c1max ; c1 >= c1min ; c1 -- )		888487	1					
ANR	888816	ForInit	c1 = c1max ;	530:9:16791:16801	888487	0	True				
ANR	888817	AssignmentExpression	c1 = c1max		888487	0		=			
ANR	888818	Identifier	c1		888487	0					
ANR	888819	Identifier	c1max		888487	1					
ANR	888820	Condition	c1 >= c1min	530:21:16803:16813	888487	1	True				
ANR	888821	RelationalExpression	c1 >= c1min		888487	0		>=			
ANR	888822	Identifier	c1		888487	0					
ANR	888823	Identifier	c1min		888487	1					
ANR	888824	PostIncDecOperationExpression	c1 --	530:34:16816:16819	888487	2	True				
ANR	888825	Identifier	c1		888487	0					
ANR	888826	IncDec	--		888487	1					
ANR	888827	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		888487	3					
ANR	888828	ForInit	c0 = c0min ;	531:11:16833:16843	888487	0	True				
ANR	888829	AssignmentExpression	c0 = c0min		888487	0		=			
ANR	888830	Identifier	c0		888487	0					
ANR	888831	Identifier	c0min		888487	1					
ANR	888832	Condition	c0 <= c0max	531:23:16845:16855	888487	1	True				
ANR	888833	RelationalExpression	c0 <= c0max		888487	0		<=			
ANR	888834	Identifier	c0		888487	0					
ANR	888835	Identifier	c0max		888487	1					
ANR	888836	PostIncDecOperationExpression	c0 ++	531:36:16858:16861	888487	2	True				
ANR	888837	Identifier	c0		888487	0					
ANR	888838	IncDec	++		888487	1					
ANR	888839	CompoundStatement		65:1:1531:1531	888487	3					
ANR	888840	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	533:3:16870:16903	888487	0	True				
ANR	888841	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		888487	0		=			
ANR	888842	Identifier	histp		888487	0					
ANR	888843	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888844	UnaryOperator	&		888487	0					
ANR	888845	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	888846	ArrayIndexing	histogram [ c0 ] [ c1 ]		888487	0					
ANR	888847	ArrayIndexing	histogram [ c0 ]		888487	0					
ANR	888848	Identifier	histogram		888487	0					
ANR	888849	Identifier	c0		888487	1					
ANR	888850	Identifier	c1		888487	1					
ANR	888851	Identifier	c2min		888487	1					
ANR	888852	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		888487	1					
ANR	888853	ForInit	c2 = c2min ;	534:8:16913:16923	888487	0	True				
ANR	888854	AssignmentExpression	c2 = c2min		888487	0		=			
ANR	888855	Identifier	c2		888487	0					
ANR	888856	Identifier	c2min		888487	1					
ANR	888857	Condition	c2 <= c2max	534:20:16925:16935	888487	1	True				
ANR	888858	RelationalExpression	c2 <= c2max		888487	0		<=			
ANR	888859	Identifier	c2		888487	0					
ANR	888860	Identifier	c2max		888487	1					
ANR	888861	PostIncDecOperationExpression	c2 ++	534:33:16938:16941	888487	2	True				
ANR	888862	Identifier	c2		888487	0					
ANR	888863	IncDec	++		888487	1					
ANR	888864	IfStatement	if ( * histp ++ != 0 )		888487	3					
ANR	888865	Condition	* histp ++ != 0	535:9:16953:16965	888487	0	True				
ANR	888866	EqualityExpression	* histp ++ != 0		888487	0		!=			
ANR	888867	UnaryOperationExpression	* histp ++		888487	0					
ANR	888868	UnaryOperator	*		888487	0					
ANR	888869	PostIncDecOperationExpression	histp ++		888487	1					
ANR	888870	Identifier	histp		888487	0					
ANR	888871	IncDec	++		888487	1					
ANR	888872	PrimaryExpression	0		888487	1					
ANR	888873	CompoundStatement		69:7:1641:1641	888487	1					
ANR	888874	ExpressionStatement	boxp -> c1max = c1max = c1	537:2:16979:17003	888487	0	True				
ANR	888875	AssignmentExpression	boxp -> c1max = c1max = c1		888487	0		=			
ANR	888876	PtrMemberAccess	boxp -> c1max		888487	0					
ANR	888877	Identifier	boxp		888487	0					
ANR	888878	Identifier	c1max		888487	1					
ANR	888879	AssignmentExpression	c1max = c1		888487	1		=			
ANR	888880	Identifier	c1max		888487	0					
ANR	888881	Identifier	c1		888487	1					
ANR	888882	GotoStatement	goto have_c1max ;	538:2:17007:17022	888487	1	True				
ANR	888883	Identifier	have_c1max		888487	0					
ANR	888884	Label	have_c1max :	541:0:17036:17046	888487	19	True				
ANR	888885	Identifier	have_c1max		888487	0					
ANR	888886	IfStatement	if ( c2max > c2min )		888487	20					
ANR	888887	Condition	c2max > c2min	542:6:17054:17066	888487	0	True				
ANR	888888	RelationalExpression	c2max > c2min		888487	0		>			
ANR	888889	Identifier	c2max		888487	0					
ANR	888890	Identifier	c2min		888487	1					
ANR	888891	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		888487	1					
ANR	888892	ForInit	c2 = c2min ;	543:9:17078:17088	888487	0	True				
ANR	888893	AssignmentExpression	c2 = c2min		888487	0		=			
ANR	888894	Identifier	c2		888487	0					
ANR	888895	Identifier	c2min		888487	1					
ANR	888896	Condition	c2 <= c2max	543:21:17090:17100	888487	1	True				
ANR	888897	RelationalExpression	c2 <= c2max		888487	0		<=			
ANR	888898	Identifier	c2		888487	0					
ANR	888899	Identifier	c2max		888487	1					
ANR	888900	PostIncDecOperationExpression	c2 ++	543:34:17103:17106	888487	2	True				
ANR	888901	Identifier	c2		888487	0					
ANR	888902	IncDec	++		888487	1					
ANR	888903	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		888487	3					
ANR	888904	ForInit	c0 = c0min ;	544:11:17120:17130	888487	0	True				
ANR	888905	AssignmentExpression	c0 = c0min		888487	0		=			
ANR	888906	Identifier	c0		888487	0					
ANR	888907	Identifier	c0min		888487	1					
ANR	888908	Condition	c0 <= c0max	544:23:17132:17142	888487	1	True				
ANR	888909	RelationalExpression	c0 <= c0max		888487	0		<=			
ANR	888910	Identifier	c0		888487	0					
ANR	888911	Identifier	c0max		888487	1					
ANR	888912	PostIncDecOperationExpression	c0 ++	544:36:17145:17148	888487	2	True				
ANR	888913	Identifier	c0		888487	0					
ANR	888914	IncDec	++		888487	1					
ANR	888915	CompoundStatement		78:1:1818:1818	888487	3					
ANR	888916	ExpressionStatement	histp = & histogram [ c0 ] [ c1min ] [ c2 ]	546:3:17157:17190	888487	0	True				
ANR	888917	AssignmentExpression	histp = & histogram [ c0 ] [ c1min ] [ c2 ]		888487	0		=			
ANR	888918	Identifier	histp		888487	0					
ANR	888919	UnaryOperationExpression	& histogram [ c0 ] [ c1min ] [ c2 ]		888487	1					
ANR	888920	UnaryOperator	&		888487	0					
ANR	888921	ArrayIndexing	histogram [ c0 ] [ c1min ] [ c2 ]		888487	1					
ANR	888922	ArrayIndexing	histogram [ c0 ] [ c1min ]		888487	0					
ANR	888923	ArrayIndexing	histogram [ c0 ]		888487	0					
ANR	888924	Identifier	histogram		888487	0					
ANR	888925	Identifier	c0		888487	1					
ANR	888926	Identifier	c1min		888487	1					
ANR	888927	Identifier	c2		888487	1					
ANR	888928	ForStatement	"for ( c1 = c1min ; c1 <= c1max ; c1 ++ , histp += HIST_C2_ELEMS )"		888487	1					
ANR	888929	ForInit	c1 = c1min ;	547:8:17200:17210	888487	0	True				
ANR	888930	AssignmentExpression	c1 = c1min		888487	0		=			
ANR	888931	Identifier	c1		888487	0					
ANR	888932	Identifier	c1min		888487	1					
ANR	888933	Condition	c1 <= c1max	547:20:17212:17222	888487	1	True				
ANR	888934	RelationalExpression	c1 <= c1max		888487	0		<=			
ANR	888935	Identifier	c1		888487	0					
ANR	888936	Identifier	c1max		888487	1					
ANR	888937	Expression	"c1 ++ , histp += HIST_C2_ELEMS"	547:33:17225:17252	888487	2	True				
ANR	888938	PostIncDecOperationExpression	c1 ++		888487	0					
ANR	888939	Identifier	c1		888487	0					
ANR	888940	IncDec	++		888487	1					
ANR	888941	AssignmentExpression	histp += HIST_C2_ELEMS		888487	1		+=			
ANR	888942	Identifier	histp		888487	0					
ANR	888943	Identifier	HIST_C2_ELEMS		888487	1					
ANR	888944	IfStatement	if ( * histp != 0 )		888487	3					
ANR	888945	Condition	* histp != 0	548:9:17264:17274	888487	0	True				
ANR	888946	EqualityExpression	* histp != 0		888487	0		!=			
ANR	888947	UnaryOperationExpression	* histp		888487	0					
ANR	888948	UnaryOperator	*		888487	0					
ANR	888949	Identifier	histp		888487	1					
ANR	888950	PrimaryExpression	0		888487	1					
ANR	888951	CompoundStatement		82:7:1950:1950	888487	1					
ANR	888952	ExpressionStatement	boxp -> c2min = c2min = c2	550:2:17288:17312	888487	0	True				
ANR	888953	AssignmentExpression	boxp -> c2min = c2min = c2		888487	0		=			
ANR	888954	PtrMemberAccess	boxp -> c2min		888487	0					
ANR	888955	Identifier	boxp		888487	0					
ANR	888956	Identifier	c2min		888487	1					
ANR	888957	AssignmentExpression	c2min = c2		888487	1		=			
ANR	888958	Identifier	c2min		888487	0					
ANR	888959	Identifier	c2		888487	1					
ANR	888960	GotoStatement	goto have_c2min ;	551:2:17316:17331	888487	1	True				
ANR	888961	Identifier	have_c2min		888487	0					
ANR	888962	Label	have_c2min :	554:0:17345:17355	888487	21	True				
ANR	888963	Identifier	have_c2min		888487	0					
ANR	888964	IfStatement	if ( c2max > c2min )		888487	22					
ANR	888965	Condition	c2max > c2min	555:6:17363:17375	888487	0	True				
ANR	888966	RelationalExpression	c2max > c2min		888487	0		>			
ANR	888967	Identifier	c2max		888487	0					
ANR	888968	Identifier	c2min		888487	1					
ANR	888969	ForStatement	for ( c2 = c2max ; c2 >= c2min ; c2 -- )		888487	1					
ANR	888970	ForInit	c2 = c2max ;	556:9:17387:17397	888487	0	True				
ANR	888971	AssignmentExpression	c2 = c2max		888487	0		=			
ANR	888972	Identifier	c2		888487	0					
ANR	888973	Identifier	c2max		888487	1					
ANR	888974	Condition	c2 >= c2min	556:21:17399:17409	888487	1	True				
ANR	888975	RelationalExpression	c2 >= c2min		888487	0		>=			
ANR	888976	Identifier	c2		888487	0					
ANR	888977	Identifier	c2min		888487	1					
ANR	888978	PostIncDecOperationExpression	c2 --	556:34:17412:17415	888487	2	True				
ANR	888979	Identifier	c2		888487	0					
ANR	888980	IncDec	--		888487	1					
ANR	888981	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		888487	3					
ANR	888982	ForInit	c0 = c0min ;	557:11:17429:17439	888487	0	True				
ANR	888983	AssignmentExpression	c0 = c0min		888487	0		=			
ANR	888984	Identifier	c0		888487	0					
ANR	888985	Identifier	c0min		888487	1					
ANR	888986	Condition	c0 <= c0max	557:23:17441:17451	888487	1	True				
ANR	888987	RelationalExpression	c0 <= c0max		888487	0		<=			
ANR	888988	Identifier	c0		888487	0					
ANR	888989	Identifier	c0max		888487	1					
ANR	888990	PostIncDecOperationExpression	c0 ++	557:36:17454:17457	888487	2	True				
ANR	888991	Identifier	c0		888487	0					
ANR	888992	IncDec	++		888487	1					
ANR	888993	CompoundStatement		91:1:2127:2127	888487	3					
ANR	888994	ExpressionStatement	histp = & histogram [ c0 ] [ c1min ] [ c2 ]	559:3:17466:17499	888487	0	True				
ANR	888995	AssignmentExpression	histp = & histogram [ c0 ] [ c1min ] [ c2 ]		888487	0		=			
ANR	888996	Identifier	histp		888487	0					
ANR	888997	UnaryOperationExpression	& histogram [ c0 ] [ c1min ] [ c2 ]		888487	1					
ANR	888998	UnaryOperator	&		888487	0					
ANR	888999	ArrayIndexing	histogram [ c0 ] [ c1min ] [ c2 ]		888487	1					
ANR	889000	ArrayIndexing	histogram [ c0 ] [ c1min ]		888487	0					
ANR	889001	ArrayIndexing	histogram [ c0 ]		888487	0					
ANR	889002	Identifier	histogram		888487	0					
ANR	889003	Identifier	c0		888487	1					
ANR	889004	Identifier	c1min		888487	1					
ANR	889005	Identifier	c2		888487	1					
ANR	889006	ForStatement	"for ( c1 = c1min ; c1 <= c1max ; c1 ++ , histp += HIST_C2_ELEMS )"		888487	1					
ANR	889007	ForInit	c1 = c1min ;	560:8:17509:17519	888487	0	True				
ANR	889008	AssignmentExpression	c1 = c1min		888487	0		=			
ANR	889009	Identifier	c1		888487	0					
ANR	889010	Identifier	c1min		888487	1					
ANR	889011	Condition	c1 <= c1max	560:20:17521:17531	888487	1	True				
ANR	889012	RelationalExpression	c1 <= c1max		888487	0		<=			
ANR	889013	Identifier	c1		888487	0					
ANR	889014	Identifier	c1max		888487	1					
ANR	889015	Expression	"c1 ++ , histp += HIST_C2_ELEMS"	560:33:17534:17561	888487	2	True				
ANR	889016	PostIncDecOperationExpression	c1 ++		888487	0					
ANR	889017	Identifier	c1		888487	0					
ANR	889018	IncDec	++		888487	1					
ANR	889019	AssignmentExpression	histp += HIST_C2_ELEMS		888487	1		+=			
ANR	889020	Identifier	histp		888487	0					
ANR	889021	Identifier	HIST_C2_ELEMS		888487	1					
ANR	889022	IfStatement	if ( * histp != 0 )		888487	3					
ANR	889023	Condition	* histp != 0	561:9:17573:17583	888487	0	True				
ANR	889024	EqualityExpression	* histp != 0		888487	0		!=			
ANR	889025	UnaryOperationExpression	* histp		888487	0					
ANR	889026	UnaryOperator	*		888487	0					
ANR	889027	Identifier	histp		888487	1					
ANR	889028	PrimaryExpression	0		888487	1					
ANR	889029	CompoundStatement		95:7:2259:2259	888487	1					
ANR	889030	ExpressionStatement	boxp -> c2max = c2max = c2	563:2:17597:17621	888487	0	True				
ANR	889031	AssignmentExpression	boxp -> c2max = c2max = c2		888487	0		=			
ANR	889032	PtrMemberAccess	boxp -> c2max		888487	0					
ANR	889033	Identifier	boxp		888487	0					
ANR	889034	Identifier	c2max		888487	1					
ANR	889035	AssignmentExpression	c2max = c2		888487	1		=			
ANR	889036	Identifier	c2max		888487	0					
ANR	889037	Identifier	c2		888487	1					
ANR	889038	GotoStatement	goto have_c2max ;	564:2:17625:17640	888487	1	True				
ANR	889039	Identifier	have_c2max		888487	0					
ANR	889040	Label	have_c2max :	567:0:17654:17664	888487	23	True				
ANR	889041	Identifier	have_c2max		888487	0					
ANR	889042	ExpressionStatement	dist0 = ( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE	577:2:18098:18146	888487	24	True				
ANR	889043	AssignmentExpression	dist0 = ( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE		888487	0		=			
ANR	889044	Identifier	dist0		888487	0					
ANR	889045	MultiplicativeExpression	( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE		888487	1		*			
ANR	889046	ShiftExpression	( c0max - c0min ) << C0_SHIFT		888487	0		<<			
ANR	889047	AdditiveExpression	c0max - c0min		888487	0		-			
ANR	889048	Identifier	c0max		888487	0					
ANR	889049	Identifier	c0min		888487	1					
ANR	889050	Identifier	C0_SHIFT		888487	1					
ANR	889051	Identifier	C0_SCALE		888487	1					
ANR	889052	ExpressionStatement	dist1 = ( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE	578:2:18150:18198	888487	25	True				
ANR	889053	AssignmentExpression	dist1 = ( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE		888487	0		=			
ANR	889054	Identifier	dist1		888487	0					
ANR	889055	MultiplicativeExpression	( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE		888487	1		*			
ANR	889056	ShiftExpression	( c1max - c1min ) << C1_SHIFT		888487	0		<<			
ANR	889057	AdditiveExpression	c1max - c1min		888487	0		-			
ANR	889058	Identifier	c1max		888487	0					
ANR	889059	Identifier	c1min		888487	1					
ANR	889060	Identifier	C1_SHIFT		888487	1					
ANR	889061	Identifier	C1_SCALE		888487	1					
ANR	889062	ExpressionStatement	dist2 = ( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE	579:2:18202:18250	888487	26	True				
ANR	889063	AssignmentExpression	dist2 = ( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE		888487	0		=			
ANR	889064	Identifier	dist2		888487	0					
ANR	889065	MultiplicativeExpression	( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE		888487	1		*			
ANR	889066	ShiftExpression	( c2max - c2min ) << C2_SHIFT		888487	0		<<			
ANR	889067	AdditiveExpression	c2max - c2min		888487	0		-			
ANR	889068	Identifier	c2max		888487	0					
ANR	889069	Identifier	c2min		888487	1					
ANR	889070	Identifier	C2_SHIFT		888487	1					
ANR	889071	Identifier	C2_SCALE		888487	1					
ANR	889072	ExpressionStatement	boxp -> volume = dist0 * dist0 + dist1 * dist1 + dist2 * dist2	580:2:18254:18314	888487	27	True				
ANR	889073	AssignmentExpression	boxp -> volume = dist0 * dist0 + dist1 * dist1 + dist2 * dist2		888487	0		=			
ANR	889074	PtrMemberAccess	boxp -> volume		888487	0					
ANR	889075	Identifier	boxp		888487	0					
ANR	889076	Identifier	volume		888487	1					
ANR	889077	AdditiveExpression	dist0 * dist0 + dist1 * dist1 + dist2 * dist2		888487	1		+			
ANR	889078	MultiplicativeExpression	dist0 * dist0		888487	0		*			
ANR	889079	Identifier	dist0		888487	0					
ANR	889080	Identifier	dist0		888487	1					
ANR	889081	AdditiveExpression	dist1 * dist1 + dist2 * dist2		888487	1		+			
ANR	889082	MultiplicativeExpression	dist1 * dist1		888487	0		*			
ANR	889083	Identifier	dist1		888487	0					
ANR	889084	Identifier	dist1		888487	1					
ANR	889085	MultiplicativeExpression	dist2 * dist2		888487	1		*			
ANR	889086	Identifier	dist2		888487	0					
ANR	889087	Identifier	dist2		888487	1					
ANR	889088	ExpressionStatement	ccount = 0	583:2:18383:18393	888487	28	True				
ANR	889089	AssignmentExpression	ccount = 0		888487	0		=			
ANR	889090	Identifier	ccount		888487	0					
ANR	889091	PrimaryExpression	0		888487	1					
ANR	889092	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		888487	29					
ANR	889093	ForInit	c0 = c0min ;	584:7:18402:18412	888487	0	True				
ANR	889094	AssignmentExpression	c0 = c0min		888487	0		=			
ANR	889095	Identifier	c0		888487	0					
ANR	889096	Identifier	c0min		888487	1					
ANR	889097	Condition	c0 <= c0max	584:19:18414:18424	888487	1	True				
ANR	889098	RelationalExpression	c0 <= c0max		888487	0		<=			
ANR	889099	Identifier	c0		888487	0					
ANR	889100	Identifier	c0max		888487	1					
ANR	889101	PostIncDecOperationExpression	c0 ++	584:32:18427:18430	888487	2	True				
ANR	889102	Identifier	c0		888487	0					
ANR	889103	IncDec	++		888487	1					
ANR	889104	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		888487	3					
ANR	889105	ForInit	c1 = c1min ;	585:9:18442:18452	888487	0	True				
ANR	889106	AssignmentExpression	c1 = c1min		888487	0		=			
ANR	889107	Identifier	c1		888487	0					
ANR	889108	Identifier	c1min		888487	1					
ANR	889109	Condition	c1 <= c1max	585:21:18454:18464	888487	1	True				
ANR	889110	RelationalExpression	c1 <= c1max		888487	0		<=			
ANR	889111	Identifier	c1		888487	0					
ANR	889112	Identifier	c1max		888487	1					
ANR	889113	PostIncDecOperationExpression	c1 ++	585:34:18467:18470	888487	2	True				
ANR	889114	Identifier	c1		888487	0					
ANR	889115	IncDec	++		888487	1					
ANR	889116	CompoundStatement		119:6:3145:3145	888487	3					
ANR	889117	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	587:1:18482:18515	888487	0	True				
ANR	889118	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		888487	0		=			
ANR	889119	Identifier	histp		888487	0					
ANR	889120	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	889121	UnaryOperator	&		888487	0					
ANR	889122	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		888487	1					
ANR	889123	ArrayIndexing	histogram [ c0 ] [ c1 ]		888487	0					
ANR	889124	ArrayIndexing	histogram [ c0 ]		888487	0					
ANR	889125	Identifier	histogram		888487	0					
ANR	889126	Identifier	c0		888487	1					
ANR	889127	Identifier	c1		888487	1					
ANR	889128	Identifier	c2min		888487	1					
ANR	889129	ForStatement	"for ( c2 = c2min ; c2 <= c2max ; c2 ++ , histp ++ )"		888487	1					
ANR	889130	ForInit	c2 = c2min ;	588:6:18523:18533	888487	0	True				
ANR	889131	AssignmentExpression	c2 = c2min		888487	0		=			
ANR	889132	Identifier	c2		888487	0					
ANR	889133	Identifier	c2min		888487	1					
ANR	889134	Condition	c2 <= c2max	588:18:18535:18545	888487	1	True				
ANR	889135	RelationalExpression	c2 <= c2max		888487	0		<=			
ANR	889136	Identifier	c2		888487	0					
ANR	889137	Identifier	c2max		888487	1					
ANR	889138	Expression	"c2 ++ , histp ++"	588:31:18548:18560	888487	2	True				
ANR	889139	PostIncDecOperationExpression	c2 ++		888487	0					
ANR	889140	Identifier	c2		888487	0					
ANR	889141	IncDec	++		888487	1					
ANR	889142	PostIncDecOperationExpression	histp ++		888487	1					
ANR	889143	Identifier	histp		888487	0					
ANR	889144	IncDec	++		888487	1					
ANR	889145	IfStatement	if ( * histp != 0 )		888487	3					
ANR	889146	Condition	* histp != 0	589:7:18570:18580	888487	0	True				
ANR	889147	EqualityExpression	* histp != 0		888487	0		!=			
ANR	889148	UnaryOperationExpression	* histp		888487	0					
ANR	889149	UnaryOperator	*		888487	0					
ANR	889150	Identifier	histp		888487	1					
ANR	889151	PrimaryExpression	0		888487	1					
ANR	889152	CompoundStatement		123:5:3254:3254	888487	1					
ANR	889153	ExpressionStatement	ccount ++	591:7:18597:18605	888487	0	True				
ANR	889154	PostIncDecOperationExpression	ccount ++		888487	0					
ANR	889155	Identifier	ccount		888487	0					
ANR	889156	IncDec	++		888487	1					
ANR	889157	ExpressionStatement	boxp -> colorcount = ccount	594:2:18624:18649	888487	30	True				
ANR	889158	AssignmentExpression	boxp -> colorcount = ccount		888487	0		=			
ANR	889159	PtrMemberAccess	boxp -> colorcount		888487	0					
ANR	889160	Identifier	boxp		888487	0					
ANR	889161	Identifier	colorcount		888487	1					
ANR	889162	Identifier	ccount		888487	1					
ANR	889163	Identifier	update_box		888487	1					
ANR	889164	ParameterList	"gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize , boxptr boxp"		888487	2					
ANR	889165	Parameter	gdImagePtr oim	467:14:15260:15273	888487	0	True				
ANR	889166	ParameterType	gdImagePtr		888487	0					
ANR	889167	Identifier	oim		888487	1					
ANR	889168	Parameter	gdImagePtr nim	467:30:15276:15289	888487	1	True				
ANR	889169	ParameterType	gdImagePtr		888487	0					
ANR	889170	Identifier	nim		888487	1					
ANR	889171	Parameter	my_cquantize_ptr cquantize	467:46:15292:15317	888487	2	True				
ANR	889172	ParameterType	my_cquantize_ptr		888487	0					
ANR	889173	Identifier	cquantize		888487	1					
ANR	889174	Parameter	boxptr boxp	467:74:15320:15330	888487	3	True				
ANR	889175	ParameterType	boxptr		888487	0					
ANR	889176	Identifier	boxp		888487	1					
ANR	889177	CFGEntryNode	ENTRY		888487		True				
ANR	889178	CFGExitNode	EXIT		888487		True				
ANR	889179	Symbol	* * histogram		888487						
ANR	889180	Symbol	C2_SHIFT		888487						
ANR	889181	Symbol	* c1min		888487						
ANR	889182	Symbol	c2min		888487						
ANR	889183	Symbol	C2_SCALE		888487						
ANR	889184	Symbol	cquantize		888487						
ANR	889185	Symbol	* cquantize		888487						
ANR	889186	Symbol	boxp -> c1max		888487						
ANR	889187	Symbol	cquantize -> histogram		888487						
ANR	889188	Symbol	c0min		888487						
ANR	889189	Symbol	boxp -> colorcount		888487						
ANR	889190	Symbol	oim		888487						
ANR	889191	Symbol	nim		888487						
ANR	889192	Symbol	* histp		888487						
ANR	889193	Symbol	C0_SHIFT		888487						
ANR	889194	Symbol	ccount		888487						
ANR	889195	Symbol	* * c0		888487						
ANR	889196	Symbol	c0max		888487						
ANR	889197	Symbol	c2max		888487						
ANR	889198	Symbol	boxp -> c0min		888487						
ANR	889199	Symbol	boxp -> c2min		888487						
ANR	889200	Symbol	C0_SCALE		888487						
ANR	889201	Symbol	histp		888487						
ANR	889202	Symbol	* boxp		888487						
ANR	889203	Symbol	* histogram		888487						
ANR	889204	Symbol	HIST_C2_ELEMS		888487						
ANR	889205	Symbol	boxp		888487						
ANR	889206	Symbol	boxp -> c0max		888487						
ANR	889207	Symbol	c0		888487						
ANR	889208	Symbol	c1		888487						
ANR	889209	Symbol	c2		888487						
ANR	889210	Symbol	c1min		888487						
ANR	889211	Symbol	histogram		888487						
ANR	889212	Symbol	* c0		888487						
ANR	889213	Symbol	boxp -> c2max		888487						
ANR	889214	Symbol	C1_SCALE		888487						
ANR	889215	Symbol	boxp -> volume		888487						
ANR	889216	Symbol	* c1		888487						
ANR	889217	Symbol	dist0		888487						
ANR	889218	Symbol	dist1		888487						
ANR	889219	Symbol	c1max		888487						
ANR	889220	Symbol	dist2		888487						
ANR	889221	Symbol	* histp ++		888487						
ANR	889222	Symbol	C1_SHIFT		888487						
ANR	889223	Symbol	boxp -> c1min		888487						
ANR	889224	DeclStmt									
ANR	889225	Decl							int	int	n
ANR	889226	Decl							int	int	lb
ANR	889227	DeclStmt									
ANR	889228	Decl							int	int	c0
ANR	889229	Decl							int	int	c1
ANR	889230	Decl							int	int	c2
ANR	889231	Decl							int	int	cmax
ANR	889232	DeclStmt									
ANR	889233	Decl							boxptr	boxptr	b1
ANR	889234	Decl							boxptr	boxptr	b2
ANR	889235	Function	compute_color	710:2:21458:23454							
ANR	889236	FunctionDef	"compute_color (gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize , boxptr boxp , int icolor)"		889235	0					
ANR	889237	CompoundStatement		712:0:21566:23454	889235	0					
ANR	889238	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	721:2:21914:21953	889235	0	True				
ANR	889239	IdentifierDecl	histogram = cquantize -> histogram		889235	0					
ANR	889240	IdentifierDeclType	hist3d		889235	0					
ANR	889241	Identifier	histogram		889235	1					
ANR	889242	AssignmentExpression	histogram = cquantize -> histogram		889235	2		=			
ANR	889243	Identifier	histogram		889235	0					
ANR	889244	PtrMemberAccess	cquantize -> histogram		889235	1					
ANR	889245	Identifier	cquantize		889235	0					
ANR	889246	Identifier	histogram		889235	1					
ANR	889247	IdentifierDeclStatement	histptr histp ;	722:2:21957:21970	889235	1	True				
ANR	889248	IdentifierDecl	histp		889235	0					
ANR	889249	IdentifierDeclType	histptr		889235	0					
ANR	889250	Identifier	histp		889235	1					
ANR	889251	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	723:2:21974:21988	889235	2	True				
ANR	889252	IdentifierDecl	c0		889235	0					
ANR	889253	IdentifierDeclType	int		889235	0					
ANR	889254	Identifier	c0		889235	1					
ANR	889255	IdentifierDecl	c1		889235	1					
ANR	889256	IdentifierDeclType	int		889235	0					
ANR	889257	Identifier	c1		889235	1					
ANR	889258	IdentifierDecl	c2		889235	2					
ANR	889259	IdentifierDeclType	int		889235	0					
ANR	889260	Identifier	c2		889235	1					
ANR	889261	IdentifierDeclStatement	"int c0min , c0max , c1min , c1max , c2min , c2max ;"	724:2:21992:22036	889235	3	True				
ANR	889262	IdentifierDecl	c0min		889235	0					
ANR	889263	IdentifierDeclType	int		889235	0					
ANR	889264	Identifier	c0min		889235	1					
ANR	889265	IdentifierDecl	c0max		889235	1					
ANR	889266	IdentifierDeclType	int		889235	0					
ANR	889267	Identifier	c0max		889235	1					
ANR	889268	IdentifierDecl	c1min		889235	2					
ANR	889269	IdentifierDeclType	int		889235	0					
ANR	889270	Identifier	c1min		889235	1					
ANR	889271	IdentifierDecl	c1max		889235	3					
ANR	889272	IdentifierDeclType	int		889235	0					
ANR	889273	Identifier	c1max		889235	1					
ANR	889274	IdentifierDecl	c2min		889235	4					
ANR	889275	IdentifierDeclType	int		889235	0					
ANR	889276	Identifier	c2min		889235	1					
ANR	889277	IdentifierDecl	c2max		889235	5					
ANR	889278	IdentifierDeclType	int		889235	0					
ANR	889279	Identifier	c2max		889235	1					
ANR	889280	IdentifierDeclStatement	long count = 0 ;	725:2:22040:22054	889235	4	True				
ANR	889281	IdentifierDecl	count = 0		889235	0					
ANR	889282	IdentifierDeclType	long		889235	0					
ANR	889283	Identifier	count		889235	1					
ANR	889284	AssignmentExpression	count = 0		889235	2		=			
ANR	889285	Identifier	count		889235	0					
ANR	889286	PrimaryExpression	0		889235	1					
ANR	889287	IdentifierDeclStatement	long total = 0 ;	726:2:22076:22090	889235	5	True				
ANR	889288	IdentifierDecl	total = 0		889235	0					
ANR	889289	IdentifierDeclType	long		889235	0					
ANR	889290	Identifier	total		889235	1					
ANR	889291	AssignmentExpression	total = 0		889235	2		=			
ANR	889292	Identifier	total		889235	0					
ANR	889293	PrimaryExpression	0		889235	1					
ANR	889294	IdentifierDeclStatement	long c0total = 0 ;	727:2:22094:22110	889235	6	True				
ANR	889295	IdentifierDecl	c0total = 0		889235	0					
ANR	889296	IdentifierDeclType	long		889235	0					
ANR	889297	Identifier	c0total		889235	1					
ANR	889298	AssignmentExpression	c0total = 0		889235	2		=			
ANR	889299	Identifier	c0total		889235	0					
ANR	889300	PrimaryExpression	0		889235	1					
ANR	889301	IdentifierDeclStatement	long c1total = 0 ;	728:2:22114:22130	889235	7	True				
ANR	889302	IdentifierDecl	c1total = 0		889235	0					
ANR	889303	IdentifierDeclType	long		889235	0					
ANR	889304	Identifier	c1total		889235	1					
ANR	889305	AssignmentExpression	c1total = 0		889235	2		=			
ANR	889306	Identifier	c1total		889235	0					
ANR	889307	PrimaryExpression	0		889235	1					
ANR	889308	IdentifierDeclStatement	long c2total = 0 ;	729:2:22134:22150	889235	8	True				
ANR	889309	IdentifierDecl	c2total = 0		889235	0					
ANR	889310	IdentifierDeclType	long		889235	0					
ANR	889311	Identifier	c2total		889235	1					
ANR	889312	AssignmentExpression	c2total = 0		889235	2		=			
ANR	889313	Identifier	c2total		889235	0					
ANR	889314	PrimaryExpression	0		889235	1					
ANR	889315	ExpressionStatement	c0min = boxp -> c0min	731:2:22155:22174	889235	9	True				
ANR	889316	AssignmentExpression	c0min = boxp -> c0min		889235	0		=			
ANR	889317	Identifier	c0min		889235	0					
ANR	889318	PtrMemberAccess	boxp -> c0min		889235	1					
ANR	889319	Identifier	boxp		889235	0					
ANR	889320	Identifier	c0min		889235	1					
ANR	889321	ExpressionStatement	c0max = boxp -> c0max	732:2:22178:22197	889235	10	True				
ANR	889322	AssignmentExpression	c0max = boxp -> c0max		889235	0		=			
ANR	889323	Identifier	c0max		889235	0					
ANR	889324	PtrMemberAccess	boxp -> c0max		889235	1					
ANR	889325	Identifier	boxp		889235	0					
ANR	889326	Identifier	c0max		889235	1					
ANR	889327	ExpressionStatement	c1min = boxp -> c1min	733:2:22201:22220	889235	11	True				
ANR	889328	AssignmentExpression	c1min = boxp -> c1min		889235	0		=			
ANR	889329	Identifier	c1min		889235	0					
ANR	889330	PtrMemberAccess	boxp -> c1min		889235	1					
ANR	889331	Identifier	boxp		889235	0					
ANR	889332	Identifier	c1min		889235	1					
ANR	889333	ExpressionStatement	c1max = boxp -> c1max	734:2:22224:22243	889235	12	True				
ANR	889334	AssignmentExpression	c1max = boxp -> c1max		889235	0		=			
ANR	889335	Identifier	c1max		889235	0					
ANR	889336	PtrMemberAccess	boxp -> c1max		889235	1					
ANR	889337	Identifier	boxp		889235	0					
ANR	889338	Identifier	c1max		889235	1					
ANR	889339	ExpressionStatement	c2min = boxp -> c2min	735:2:22247:22266	889235	13	True				
ANR	889340	AssignmentExpression	c2min = boxp -> c2min		889235	0		=			
ANR	889341	Identifier	c2min		889235	0					
ANR	889342	PtrMemberAccess	boxp -> c2min		889235	1					
ANR	889343	Identifier	boxp		889235	0					
ANR	889344	Identifier	c2min		889235	1					
ANR	889345	ExpressionStatement	c2max = boxp -> c2max	736:2:22270:22289	889235	14	True				
ANR	889346	AssignmentExpression	c2max = boxp -> c2max		889235	0		=			
ANR	889347	Identifier	c2max		889235	0					
ANR	889348	PtrMemberAccess	boxp -> c2max		889235	1					
ANR	889349	Identifier	boxp		889235	0					
ANR	889350	Identifier	c2max		889235	1					
ANR	889351	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		889235	15					
ANR	889352	ForInit	c0 = c0min ;	738:7:22299:22309	889235	0	True				
ANR	889353	AssignmentExpression	c0 = c0min		889235	0		=			
ANR	889354	Identifier	c0		889235	0					
ANR	889355	Identifier	c0min		889235	1					
ANR	889356	Condition	c0 <= c0max	738:19:22311:22321	889235	1	True				
ANR	889357	RelationalExpression	c0 <= c0max		889235	0		<=			
ANR	889358	Identifier	c0		889235	0					
ANR	889359	Identifier	c0max		889235	1					
ANR	889360	PostIncDecOperationExpression	c0 ++	738:32:22324:22327	889235	2	True				
ANR	889361	Identifier	c0		889235	0					
ANR	889362	IncDec	++		889235	1					
ANR	889363	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		889235	3					
ANR	889364	ForInit	c1 = c1min ;	739:9:22339:22349	889235	0	True				
ANR	889365	AssignmentExpression	c1 = c1min		889235	0		=			
ANR	889366	Identifier	c1		889235	0					
ANR	889367	Identifier	c1min		889235	1					
ANR	889368	Condition	c1 <= c1max	739:21:22351:22361	889235	1	True				
ANR	889369	RelationalExpression	c1 <= c1max		889235	0		<=			
ANR	889370	Identifier	c1		889235	0					
ANR	889371	Identifier	c1max		889235	1					
ANR	889372	PostIncDecOperationExpression	c1 ++	739:34:22364:22367	889235	2	True				
ANR	889373	Identifier	c1		889235	0					
ANR	889374	IncDec	++		889235	1					
ANR	889375	CompoundStatement		29:6:809:809	889235	3					
ANR	889376	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	741:1:22379:22412	889235	0	True				
ANR	889377	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		889235	0		=			
ANR	889378	Identifier	histp		889235	0					
ANR	889379	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		889235	1					
ANR	889380	UnaryOperator	&		889235	0					
ANR	889381	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		889235	1					
ANR	889382	ArrayIndexing	histogram [ c0 ] [ c1 ]		889235	0					
ANR	889383	ArrayIndexing	histogram [ c0 ]		889235	0					
ANR	889384	Identifier	histogram		889235	0					
ANR	889385	Identifier	c0		889235	1					
ANR	889386	Identifier	c1		889235	1					
ANR	889387	Identifier	c2min		889235	1					
ANR	889388	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		889235	1					
ANR	889389	ForInit	c2 = c2min ;	742:6:22420:22430	889235	0	True				
ANR	889390	AssignmentExpression	c2 = c2min		889235	0		=			
ANR	889391	Identifier	c2		889235	0					
ANR	889392	Identifier	c2min		889235	1					
ANR	889393	Condition	c2 <= c2max	742:18:22432:22442	889235	1	True				
ANR	889394	RelationalExpression	c2 <= c2max		889235	0		<=			
ANR	889395	Identifier	c2		889235	0					
ANR	889396	Identifier	c2max		889235	1					
ANR	889397	PostIncDecOperationExpression	c2 ++	742:31:22445:22448	889235	2	True				
ANR	889398	Identifier	c2		889235	0					
ANR	889399	IncDec	++		889235	1					
ANR	889400	CompoundStatement		32:3:887:887	889235	3					
ANR	889401	IfStatement	if ( ( count = * histp ++ ) != 0 )		889235	0					
ANR	889402	Condition	( count = * histp ++ ) != 0	744:9:22465:22487	889235	0	True				
ANR	889403	EqualityExpression	( count = * histp ++ ) != 0		889235	0		!=			
ANR	889404	AssignmentExpression	count = * histp ++		889235	0		=			
ANR	889405	Identifier	count		889235	0					
ANR	889406	UnaryOperationExpression	* histp ++		889235	1					
ANR	889407	UnaryOperator	*		889235	0					
ANR	889408	PostIncDecOperationExpression	histp ++		889235	1					
ANR	889409	Identifier	histp		889235	0					
ANR	889410	IncDec	++		889235	1					
ANR	889411	PrimaryExpression	0		889235	1					
ANR	889412	CompoundStatement		34:7:930:930	889235	1					
ANR	889413	ExpressionStatement	total += count	746:2:22501:22515	889235	0	True				
ANR	889414	AssignmentExpression	total += count		889235	0		+=			
ANR	889415	Identifier	total		889235	0					
ANR	889416	Identifier	count		889235	1					
ANR	889417	ExpressionStatement	c0total += ( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count	747:2:22519:22585	889235	1	True				
ANR	889418	AssignmentExpression	c0total += ( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count		889235	0		+=			
ANR	889419	Identifier	c0total		889235	0					
ANR	889420	MultiplicativeExpression	( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count		889235	1		*			
ANR	889421	AdditiveExpression	( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )		889235	0		+			
ANR	889422	ShiftExpression	c0 << C0_SHIFT		889235	0		<<			
ANR	889423	Identifier	c0		889235	0					
ANR	889424	Identifier	C0_SHIFT		889235	1					
ANR	889425	ShiftExpression	( 1 << C0_SHIFT ) >> 1		889235	1		>>			
ANR	889426	ShiftExpression	1 << C0_SHIFT		889235	0		<<			
ANR	889427	PrimaryExpression	1		889235	0					
ANR	889428	Identifier	C0_SHIFT		889235	1					
ANR	889429	PrimaryExpression	1		889235	1					
ANR	889430	Identifier	count		889235	1					
ANR	889431	ExpressionStatement	c1total += ( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count	749:2:22589:22655	889235	2	True				
ANR	889432	AssignmentExpression	c1total += ( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count		889235	0		+=			
ANR	889433	Identifier	c1total		889235	0					
ANR	889434	MultiplicativeExpression	( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count		889235	1		*			
ANR	889435	AdditiveExpression	( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )		889235	0		+			
ANR	889436	ShiftExpression	c1 << C1_SHIFT		889235	0		<<			
ANR	889437	Identifier	c1		889235	0					
ANR	889438	Identifier	C1_SHIFT		889235	1					
ANR	889439	ShiftExpression	( 1 << C1_SHIFT ) >> 1		889235	1		>>			
ANR	889440	ShiftExpression	1 << C1_SHIFT		889235	0		<<			
ANR	889441	PrimaryExpression	1		889235	0					
ANR	889442	Identifier	C1_SHIFT		889235	1					
ANR	889443	PrimaryExpression	1		889235	1					
ANR	889444	Identifier	count		889235	1					
ANR	889445	ExpressionStatement	c2total += ( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count	751:2:22659:22725	889235	3	True				
ANR	889446	AssignmentExpression	c2total += ( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count		889235	0		+=			
ANR	889447	Identifier	c2total		889235	0					
ANR	889448	MultiplicativeExpression	( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count		889235	1		*			
ANR	889449	AdditiveExpression	( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )		889235	0		+			
ANR	889450	ShiftExpression	c2 << C2_SHIFT		889235	0		<<			
ANR	889451	Identifier	c2		889235	0					
ANR	889452	Identifier	C2_SHIFT		889235	1					
ANR	889453	ShiftExpression	( 1 << C2_SHIFT ) >> 1		889235	1		>>			
ANR	889454	ShiftExpression	1 << C2_SHIFT		889235	0		<<			
ANR	889455	PrimaryExpression	1		889235	0					
ANR	889456	Identifier	C2_SHIFT		889235	1					
ANR	889457	PrimaryExpression	1		889235	1					
ANR	889458	Identifier	count		889235	1					
ANR	889459	ExpressionStatement	cinfo -> colormap [ 0 ] [ icolor ] = ( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )	758:2:22777:22850	889235	16	True				
ANR	889460	AssignmentExpression	cinfo -> colormap [ 0 ] [ icolor ] = ( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )		889235	0		=			
ANR	889461	ArrayIndexing	cinfo -> colormap [ 0 ] [ icolor ]		889235	0					
ANR	889462	ArrayIndexing	cinfo -> colormap [ 0 ]		889235	0					
ANR	889463	PtrMemberAccess	cinfo -> colormap		889235	0					
ANR	889464	Identifier	cinfo		889235	0					
ANR	889465	Identifier	colormap		889235	1					
ANR	889466	PrimaryExpression	0		889235	1					
ANR	889467	Identifier	icolor		889235	1					
ANR	889468	CastExpression	( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )		889235	1					
ANR	889469	CastTarget	JSAMPLE		889235	0					
ANR	889470	MultiplicativeExpression	( c0total + ( total >> 1 ) ) / total		889235	1		/			
ANR	889471	AdditiveExpression	c0total + ( total >> 1 )		889235	0		+			
ANR	889472	Identifier	c0total		889235	0					
ANR	889473	ShiftExpression	total >> 1		889235	1		>>			
ANR	889474	Identifier	total		889235	0					
ANR	889475	PrimaryExpression	1		889235	1					
ANR	889476	Identifier	total		889235	1					
ANR	889477	ExpressionStatement	cinfo -> colormap [ 1 ] [ icolor ] = ( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )	759:2:22854:22927	889235	17	True				
ANR	889478	AssignmentExpression	cinfo -> colormap [ 1 ] [ icolor ] = ( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )		889235	0		=			
ANR	889479	ArrayIndexing	cinfo -> colormap [ 1 ] [ icolor ]		889235	0					
ANR	889480	ArrayIndexing	cinfo -> colormap [ 1 ]		889235	0					
ANR	889481	PtrMemberAccess	cinfo -> colormap		889235	0					
ANR	889482	Identifier	cinfo		889235	0					
ANR	889483	Identifier	colormap		889235	1					
ANR	889484	PrimaryExpression	1		889235	1					
ANR	889485	Identifier	icolor		889235	1					
ANR	889486	CastExpression	( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )		889235	1					
ANR	889487	CastTarget	JSAMPLE		889235	0					
ANR	889488	MultiplicativeExpression	( c1total + ( total >> 1 ) ) / total		889235	1		/			
ANR	889489	AdditiveExpression	c1total + ( total >> 1 )		889235	0		+			
ANR	889490	Identifier	c1total		889235	0					
ANR	889491	ShiftExpression	total >> 1		889235	1		>>			
ANR	889492	Identifier	total		889235	0					
ANR	889493	PrimaryExpression	1		889235	1					
ANR	889494	Identifier	total		889235	1					
ANR	889495	ExpressionStatement	cinfo -> colormap [ 2 ] [ icolor ] = ( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )	760:2:22931:23004	889235	18	True				
ANR	889496	AssignmentExpression	cinfo -> colormap [ 2 ] [ icolor ] = ( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )		889235	0		=			
ANR	889497	ArrayIndexing	cinfo -> colormap [ 2 ] [ icolor ]		889235	0					
ANR	889498	ArrayIndexing	cinfo -> colormap [ 2 ]		889235	0					
ANR	889499	PtrMemberAccess	cinfo -> colormap		889235	0					
ANR	889500	Identifier	cinfo		889235	0					
ANR	889501	Identifier	colormap		889235	1					
ANR	889502	PrimaryExpression	2		889235	1					
ANR	889503	Identifier	icolor		889235	1					
ANR	889504	CastExpression	( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )		889235	1					
ANR	889505	CastTarget	JSAMPLE		889235	0					
ANR	889506	MultiplicativeExpression	( c2total + ( total >> 1 ) ) / total		889235	1		/			
ANR	889507	AdditiveExpression	c2total + ( total >> 1 )		889235	0		+			
ANR	889508	Identifier	c2total		889235	0					
ANR	889509	ShiftExpression	total >> 1		889235	1		>>			
ANR	889510	Identifier	total		889235	0					
ANR	889511	PrimaryExpression	1		889235	1					
ANR	889512	Identifier	total		889235	1					
ANR	889513	Identifier	compute_color		889235	1					
ANR	889514	ParameterList	"gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize , boxptr boxp , int icolor"		889235	2					
ANR	889515	Parameter	gdImagePtr oim	710:17:21473:21486	889235	0	True				
ANR	889516	ParameterType	gdImagePtr		889235	0					
ANR	889517	Identifier	oim		889235	1					
ANR	889518	Parameter	gdImagePtr nim	710:33:21489:21502	889235	1	True				
ANR	889519	ParameterType	gdImagePtr		889235	0					
ANR	889520	Identifier	nim		889235	1					
ANR	889521	Parameter	my_cquantize_ptr cquantize	710:49:21505:21530	889235	2	True				
ANR	889522	ParameterType	my_cquantize_ptr		889235	0					
ANR	889523	Identifier	cquantize		889235	1					
ANR	889524	Parameter	boxptr boxp	711:8:21541:21551	889235	3	True				
ANR	889525	ParameterType	boxptr		889235	0					
ANR	889526	Identifier	boxp		889235	1					
ANR	889527	Parameter	int icolor	711:21:21554:21563	889235	4	True				
ANR	889528	ParameterType	int		889235	0					
ANR	889529	Identifier	icolor		889235	1					
ANR	889530	CFGEntryNode	ENTRY		889235		True				
ANR	889531	CFGExitNode	EXIT		889235		True				
ANR	889532	Symbol	* * cinfo		889235						
ANR	889533	Symbol	* * histogram		889235						
ANR	889534	Symbol	C2_SHIFT		889235						
ANR	889535	Symbol	c2total		889235						
ANR	889536	Symbol	c2min		889235						
ANR	889537	Symbol	cquantize		889235						
ANR	889538	Symbol	* cquantize		889235						
ANR	889539	Symbol	* cinfo -> colormap		889235						
ANR	889540	Symbol	boxp -> c1max		889235						
ANR	889541	Symbol	icolor		889235						
ANR	889542	Symbol	cquantize -> histogram		889235						
ANR	889543	Symbol	c0min		889235						
ANR	889544	Symbol	oim		889235						
ANR	889545	Symbol	total		889235						
ANR	889546	Symbol	nim		889235						
ANR	889547	Symbol	C0_SHIFT		889235						
ANR	889548	Symbol	* * c0		889235						
ANR	889549	Symbol	* icolor		889235						
ANR	889550	Symbol	c0max		889235						
ANR	889551	Symbol	c2max		889235						
ANR	889552	Symbol	boxp -> c0min		889235						
ANR	889553	Symbol	* cinfo		889235						
ANR	889554	Symbol	boxp -> c2min		889235						
ANR	889555	Symbol	histp		889235						
ANR	889556	Symbol	cinfo -> colormap		889235						
ANR	889557	Symbol	* boxp		889235						
ANR	889558	Symbol	count		889235						
ANR	889559	Symbol	* histogram		889235						
ANR	889560	Symbol	boxp		889235						
ANR	889561	Symbol	c1total		889235						
ANR	889562	Symbol	boxp -> c0max		889235						
ANR	889563	Symbol	c0		889235						
ANR	889564	Symbol	c1		889235						
ANR	889565	Symbol	c2		889235						
ANR	889566	Symbol	c1min		889235						
ANR	889567	Symbol	* * cinfo -> colormap		889235						
ANR	889568	Symbol	histogram		889235						
ANR	889569	Symbol	* c0		889235						
ANR	889570	Symbol	boxp -> c2max		889235						
ANR	889571	Symbol	cinfo		889235						
ANR	889572	Symbol	* c1		889235						
ANR	889573	Symbol	* * * cinfo		889235						
ANR	889574	Symbol	c1max		889235						
ANR	889575	Symbol	* histp ++		889235						
ANR	889576	Symbol	C1_SHIFT		889235						
ANR	889577	Symbol	c0total		889235						
ANR	889578	Symbol	boxp -> c1min		889235						
ANR	889579	DeclStmt									
ANR	889580	Decl							boxptr	boxptr	boxlist
ANR	889581	DeclStmt									
ANR	889582	Decl							int	int	numboxes
ANR	889583	DeclStmt									
ANR	889584	Decl							int	int	i
ANR	889585	DeclStmt									
ANR	889586	Decl							int	int	numcolors
ANR	889587	DeclStmt									
ANR	889588	Decl							int	int	numcolors
ANR	889589	DeclStmt									
ANR	889590	Decl							int	int	maxc0
ANR	889591	Decl							int	int	maxc1
ANR	889592	Decl							int	int	maxc2
ANR	889593	DeclStmt									
ANR	889594	Decl							int	int	centerc0
ANR	889595	Decl							int	int	centerc1
ANR	889596	Decl							int	int	centerc2
ANR	889597	DeclStmt									
ANR	889598	Decl							int	int	i
ANR	889599	Decl							int	int	x
ANR	889600	Decl							int	int	ncolors
ANR	889601	DeclStmt									
ANR	889602	Decl							INT32	INT32	minmaxdist
ANR	889603	Decl							INT32	INT32	min_dist
ANR	889604	Decl							INT32	INT32	max_dist
ANR	889605	Decl							INT32	INT32	tdist
ANR	889606	DeclStmt									
ANR	889607	Decl							INT32	INT32 [ MAXNUMCOLORS ]	mindist
ANR	889608	DeclStmt									
ANR	889609	Decl							tdist	tdist *	tdist
ANR	889610	DeclStmt									
ANR	889611	Decl							tdist	tdist *	tdist
ANR	889612	DeclStmt									
ANR	889613	Decl							tdist	tdist *	tdist
ANR	889614	DeclStmt									
ANR	889615	Decl							tdist	tdist *	tdist
ANR	889616	DeclStmt									
ANR	889617	Decl							tdist	tdist *	tdist
ANR	889618	DeclStmt									
ANR	889619	Decl							tdist	tdist *	tdist
ANR	889620	DeclStmt									
ANR	889621	Decl							tdist	tdist *	tdist
ANR	889622	DeclStmt									
ANR	889623	Decl							tdist	tdist *	tdist
ANR	889624	DeclStmt									
ANR	889625	Decl							tdist	tdist *	tdist
ANR	889626	DeclStmt									
ANR	889627	Decl							tdist	tdist *	tdist
ANR	889628	DeclStmt									
ANR	889629	Decl							tdist	tdist *	tdist
ANR	889630	DeclStmt									
ANR	889631	Decl							tdist	tdist *	tdist
ANR	889632	DeclStmt									
ANR	889633	Decl							tdist	tdist *	tdist
ANR	889634	DeclStmt									
ANR	889635	Decl							tdist	tdist *	tdist
ANR	889636	DeclStmt									
ANR	889637	Decl							tdist	tdist *	tdist
ANR	889638	DeclStmt									
ANR	889639	Decl							tdist	tdist *	tdist
ANR	889640	DeclStmt									
ANR	889641	Decl							tdist	tdist *	tdist
ANR	889642	DeclStmt									
ANR	889643	Decl							tdist	tdist *	tdist
ANR	889644	DeclStmt									
ANR	889645	Decl							int	int	ic0
ANR	889646	Decl							int	int	ic1
ANR	889647	Decl							int	int	ic2
ANR	889648	DeclStmt									
ANR	889649	Decl							int	int	i
ANR	889650	Decl							int	int	icolor
ANR	889651	DeclStmt									
ANR	889652	Decl							INT32	INT32 *	bptr
ANR	889653	DeclStmt									
ANR	889654	Decl							JSAMPLE	JSAMPLE *	cptr
ANR	889655	DeclStmt									
ANR	889656	Decl							INT32	INT32	dist0
ANR	889657	Decl							INT32	INT32	dist1
ANR	889658	DeclStmt									
ANR	889659	Decl							INT32	INT32	dist2
ANR	889660	DeclStmt									
ANR	889661	Decl							INT32	INT32	xx0
ANR	889662	Decl							INT32	INT32	xx1
ANR	889663	DeclStmt									
ANR	889664	Decl							INT32	INT32	xx2
ANR	889665	DeclStmt									
ANR	889666	Decl							INT32	INT32	inc0
ANR	889667	Decl							INT32	INT32	inc1
ANR	889668	Decl							INT32	INT32	inc2
ANR	889669	DeclStmt									
ANR	889670	Decl							INT32	INT32 [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]	bestdist
ANR	889671	DeclStmt									
ANR	889672	Decl							int	int	r
ANR	889673	Decl							int	int	g
ANR	889674	Decl							int	int	b
ANR	889675	DeclStmt									
ANR	889676	Decl							inc0	inc0 *	inc0
ANR	889677	DeclStmt									
ANR	889678	Decl							inc1	inc1 *	inc1
ANR	889679	DeclStmt									
ANR	889680	Decl							inc2	inc2 *	inc2
ANR	889681	DeclStmt									
ANR	889682	Decl							STEP_C0	STEP_C0 *	STEP_C0
ANR	889683	DeclStmt									
ANR	889684	Decl							STEP_C1	STEP_C1 *	STEP_C1
ANR	889685	DeclStmt									
ANR	889686	Decl							STEP_C2	STEP_C2 *	STEP_C2
ANR	889687	DeclStmt									
ANR	889688	Decl							STEP_C2	STEP_C2 *	STEP_C2
ANR	889689	DeclStmt									
ANR	889690	Decl							STEP_C1	STEP_C1 *	STEP_C1
ANR	889691	DeclStmt									
ANR	889692	Decl							STEP_C0	STEP_C0 *	STEP_C0
ANR	889693	DeclStmt									
ANR	889694	Decl							my_cquantize_ptr	my_cquantize_ptr	cquantize
ANR	889695	DeclStmt									
ANR	889696	Decl							hist3d	hist3d	histogram
ANR	889697	DeclStmt									
ANR	889698	Decl							int	int	minc0
ANR	889699	Decl							int	int	minc1
ANR	889700	Decl							int	int	minc2
ANR	889701	DeclStmt									
ANR	889702	Decl							int	int	ic0
ANR	889703	Decl							int	int	ic1
ANR	889704	Decl							int	int	ic2
ANR	889705	DeclStmt									
ANR	889706	Decl							JSAMPLE	JSAMPLE *	cptr
ANR	889707	DeclStmt									
ANR	889708	Decl							histptr	histptr	cachep
ANR	889709	DeclStmt									
ANR	889710	Decl							JSAMPLE	JSAMPLE [ MAXNUMCOLORS ]	colorlist
ANR	889711	DeclStmt									
ANR	889712	Decl							int	int	numcolors
ANR	889713	DeclStmt									
ANR	889714	Decl							JSAMPLE	JSAMPLE [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]	bestcolor
ANR	889715	Function	pass2_no_dither	1286:0:41211:43275							
ANR	889716	FunctionDef	"pass2_no_dither (gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize)"		889715	0					
ANR	889717	CompoundStatement		1287:0:41288:43275	889715	0					
ANR	889718	Statement	register	1288:2:41292:41299	889715	0	True				
ANR	889719	IdentifierDeclStatement	int * inptr ;	1288:11:41301:41311	889715	1	True				
ANR	889720	IdentifierDecl	* inptr		889715	0					
ANR	889721	IdentifierDeclType	int *		889715	0					
ANR	889722	Identifier	inptr		889715	1					
ANR	889723	Statement	register	1289:2:41315:41322	889715	2	True				
ANR	889724	IdentifierDeclStatement	unsigned char * outptr ;	1289:11:41324:41345	889715	3	True				
ANR	889725	IdentifierDecl	* outptr		889715	0					
ANR	889726	IdentifierDeclType	unsigned char *		889715	0					
ANR	889727	Identifier	outptr		889715	1					
ANR	889728	IdentifierDeclStatement	int width = oim -> sx ;	1290:2:41349:41368	889715	4	True				
ANR	889729	IdentifierDecl	width = oim -> sx		889715	0					
ANR	889730	IdentifierDeclType	int		889715	0					
ANR	889731	Identifier	width		889715	1					
ANR	889732	AssignmentExpression	width = oim -> sx		889715	2		=			
ANR	889733	Identifier	width		889715	0					
ANR	889734	PtrMemberAccess	oim -> sx		889715	1					
ANR	889735	Identifier	oim		889715	0					
ANR	889736	Identifier	sx		889715	1					
ANR	889737	IdentifierDeclStatement	int num_rows = oim -> sy ;	1291:2:41372:41394	889715	5	True				
ANR	889738	IdentifierDecl	num_rows = oim -> sy		889715	0					
ANR	889739	IdentifierDeclType	int		889715	0					
ANR	889740	Identifier	num_rows		889715	1					
ANR	889741	AssignmentExpression	num_rows = oim -> sy		889715	2		=			
ANR	889742	Identifier	num_rows		889715	0					
ANR	889743	PtrMemberAccess	oim -> sy		889715	1					
ANR	889744	Identifier	oim		889715	0					
ANR	889745	Identifier	sy		889715	1					
ANR	889746	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	1301:2:41702:41741	889715	6	True				
ANR	889747	IdentifierDecl	histogram = cquantize -> histogram		889715	0					
ANR	889748	IdentifierDeclType	hist3d		889715	0					
ANR	889749	Identifier	histogram		889715	1					
ANR	889750	AssignmentExpression	histogram = cquantize -> histogram		889715	2		=			
ANR	889751	Identifier	histogram		889715	0					
ANR	889752	PtrMemberAccess	cquantize -> histogram		889715	1					
ANR	889753	Identifier	cquantize		889715	0					
ANR	889754	Identifier	histogram		889715	1					
ANR	889755	Statement	register	1302:2:41745:41752	889715	7	True				
ANR	889756	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	1302:11:41754:41768	889715	8	True				
ANR	889757	IdentifierDecl	c0		889715	0					
ANR	889758	IdentifierDeclType	int		889715	0					
ANR	889759	Identifier	c0		889715	1					
ANR	889760	IdentifierDecl	c1		889715	1					
ANR	889761	IdentifierDeclType	int		889715	0					
ANR	889762	Identifier	c1		889715	1					
ANR	889763	IdentifierDecl	c2		889715	2					
ANR	889764	IdentifierDeclType	int		889715	0					
ANR	889765	Identifier	c2		889715	1					
ANR	889766	IdentifierDeclStatement	int row ;	1303:2:41772:41779	889715	9	True				
ANR	889767	IdentifierDecl	row		889715	0					
ANR	889768	IdentifierDeclType	int		889715	0					
ANR	889769	Identifier	row		889715	1					
ANR	889770	IdentifierDeclStatement	JDIMENSION col ;	1304:2:41783:41797	889715	10	True				
ANR	889771	IdentifierDecl	col		889715	0					
ANR	889772	IdentifierDeclType	JDIMENSION		889715	0					
ANR	889773	Identifier	col		889715	1					
ANR	889774	Statement	register	1305:2:41801:41808	889715	11	True				
ANR	889775	IdentifierDeclStatement	histptr cachep ;	1305:11:41810:41824	889715	12	True				
ANR	889776	IdentifierDecl	cachep		889715	0					
ANR	889777	IdentifierDeclType	histptr		889715	0					
ANR	889778	Identifier	cachep		889715	1					
ANR	889779	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		889715	13					
ANR	889780	ForInit	row = 0 ;	1308:7:41835:41842	889715	0	True				
ANR	889781	AssignmentExpression	row = 0		889715	0		=			
ANR	889782	Identifier	row		889715	0					
ANR	889783	PrimaryExpression	0		889715	1					
ANR	889784	Condition	row < num_rows	1308:16:41844:41857	889715	1	True				
ANR	889785	RelationalExpression	row < num_rows		889715	0		<			
ANR	889786	Identifier	row		889715	0					
ANR	889787	Identifier	num_rows		889715	1					
ANR	889788	PostIncDecOperationExpression	row ++	1308:32:41860:41864	889715	2	True				
ANR	889789	Identifier	row		889715	0					
ANR	889790	IncDec	++		889715	1					
ANR	889791	CompoundStatement		23:4:582:582	889715	3					
ANR	889792	ExpressionStatement	inptr = input_buf [ row ]	1310:6:41879:41901	889715	0	True				
ANR	889793	AssignmentExpression	inptr = input_buf [ row ]		889715	0		=			
ANR	889794	Identifier	inptr		889715	0					
ANR	889795	ArrayIndexing	input_buf [ row ]		889715	1					
ANR	889796	Identifier	input_buf		889715	0					
ANR	889797	Identifier	row		889715	1					
ANR	889798	ExpressionStatement	outptr = output_buf [ row ]	1311:6:41909:41933	889715	1	True				
ANR	889799	AssignmentExpression	outptr = output_buf [ row ]		889715	0		=			
ANR	889800	Identifier	outptr		889715	0					
ANR	889801	ArrayIndexing	output_buf [ row ]		889715	1					
ANR	889802	Identifier	output_buf		889715	0					
ANR	889803	Identifier	row		889715	1					
ANR	889804	ForStatement	for ( col = width ; col > 0 ; col -- )		889715	2					
ANR	889805	ForInit	col = width ;	1312:11:41946:41957	889715	0	True				
ANR	889806	AssignmentExpression	col = width		889715	0		=			
ANR	889807	Identifier	col		889715	0					
ANR	889808	Identifier	width		889715	1					
ANR	889809	Condition	col > 0	1312:24:41959:41965	889715	1	True				
ANR	889810	RelationalExpression	col > 0		889715	0		>			
ANR	889811	Identifier	col		889715	0					
ANR	889812	PrimaryExpression	0		889715	1					
ANR	889813	PostIncDecOperationExpression	col --	1312:33:41968:41972	889715	2	True				
ANR	889814	Identifier	col		889715	0					
ANR	889815	IncDec	--		889715	1					
ANR	889816	CompoundStatement		29:3:742:753	889715	3					
ANR	889817	IdentifierDeclStatement	"int r , g , b ;"	1315:3:42031:42042	889715	0	True				
ANR	889818	IdentifierDecl	r		889715	0					
ANR	889819	IdentifierDeclType	int		889715	0					
ANR	889820	Identifier	r		889715	1					
ANR	889821	IdentifierDecl	g		889715	1					
ANR	889822	IdentifierDeclType	int		889715	0					
ANR	889823	Identifier	g		889715	1					
ANR	889824	IdentifierDecl	b		889715	2					
ANR	889825	IdentifierDeclType	int		889715	0					
ANR	889826	Identifier	b		889715	1					
ANR	889827	ExpressionStatement	r = GETJSAMPLE ( * inptr ++ )	1317:3:42072:42097	889715	1	True				
ANR	889828	AssignmentExpression	r = GETJSAMPLE ( * inptr ++ )		889715	0		=			
ANR	889829	Identifier	r		889715	0					
ANR	889830	CallExpression	GETJSAMPLE ( * inptr ++ )		889715	1					
ANR	889831	Callee	GETJSAMPLE		889715	0					
ANR	889832	Identifier	GETJSAMPLE		889715	0					
ANR	889833	ArgumentList	* inptr ++		889715	1					
ANR	889834	Argument	* inptr ++		889715	0					
ANR	889835	UnaryOperationExpression	* inptr ++		889715	0					
ANR	889836	UnaryOperator	*		889715	0					
ANR	889837	PostIncDecOperationExpression	inptr ++		889715	1					
ANR	889838	Identifier	inptr		889715	0					
ANR	889839	IncDec	++		889715	1					
ANR	889840	ExpressionStatement	g = GETJSAMPLE ( * inptr ++ )	1318:3:42102:42127	889715	2	True				
ANR	889841	AssignmentExpression	g = GETJSAMPLE ( * inptr ++ )		889715	0		=			
ANR	889842	Identifier	g		889715	0					
ANR	889843	CallExpression	GETJSAMPLE ( * inptr ++ )		889715	1					
ANR	889844	Callee	GETJSAMPLE		889715	0					
ANR	889845	Identifier	GETJSAMPLE		889715	0					
ANR	889846	ArgumentList	* inptr ++		889715	1					
ANR	889847	Argument	* inptr ++		889715	0					
ANR	889848	UnaryOperationExpression	* inptr ++		889715	0					
ANR	889849	UnaryOperator	*		889715	0					
ANR	889850	PostIncDecOperationExpression	inptr ++		889715	1					
ANR	889851	Identifier	inptr		889715	0					
ANR	889852	IncDec	++		889715	1					
ANR	889853	ExpressionStatement	b = GETJSAMPLE ( * inptr ++ )	1319:3:42132:42157	889715	3	True				
ANR	889854	AssignmentExpression	b = GETJSAMPLE ( * inptr ++ )		889715	0		=			
ANR	889855	Identifier	b		889715	0					
ANR	889856	CallExpression	GETJSAMPLE ( * inptr ++ )		889715	1					
ANR	889857	Callee	GETJSAMPLE		889715	0					
ANR	889858	Identifier	GETJSAMPLE		889715	0					
ANR	889859	ArgumentList	* inptr ++		889715	1					
ANR	889860	Argument	* inptr ++		889715	0					
ANR	889861	UnaryOperationExpression	* inptr ++		889715	0					
ANR	889862	UnaryOperator	*		889715	0					
ANR	889863	PostIncDecOperationExpression	inptr ++		889715	1					
ANR	889864	Identifier	inptr		889715	0					
ANR	889865	IncDec	++		889715	1					
ANR	889866	ExpressionStatement	c0 = r >> C0_SHIFT	1340:3:42738:42756	889715	4	True				
ANR	889867	AssignmentExpression	c0 = r >> C0_SHIFT		889715	0		=			
ANR	889868	Identifier	c0		889715	0					
ANR	889869	ShiftExpression	r >> C0_SHIFT		889715	1		>>			
ANR	889870	Identifier	r		889715	0					
ANR	889871	Identifier	C0_SHIFT		889715	1					
ANR	889872	ExpressionStatement	c1 = g >> C1_SHIFT	1341:3:42761:42779	889715	5	True				
ANR	889873	AssignmentExpression	c1 = g >> C1_SHIFT		889715	0		=			
ANR	889874	Identifier	c1		889715	0					
ANR	889875	ShiftExpression	g >> C1_SHIFT		889715	1		>>			
ANR	889876	Identifier	g		889715	0					
ANR	889877	Identifier	C1_SHIFT		889715	1					
ANR	889878	ExpressionStatement	c2 = b >> C2_SHIFT	1342:3:42784:42802	889715	6	True				
ANR	889879	AssignmentExpression	c2 = b >> C2_SHIFT		889715	0		=			
ANR	889880	Identifier	c2		889715	0					
ANR	889881	ShiftExpression	b >> C2_SHIFT		889715	1		>>			
ANR	889882	Identifier	b		889715	0					
ANR	889883	Identifier	C2_SHIFT		889715	1					
ANR	889884	ExpressionStatement	cachep = & histogram [ c0 ] [ c1 ] [ c2 ]	1343:3:42807:42838	889715	7	True				
ANR	889885	AssignmentExpression	cachep = & histogram [ c0 ] [ c1 ] [ c2 ]		889715	0		=			
ANR	889886	Identifier	cachep		889715	0					
ANR	889887	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2 ]		889715	1					
ANR	889888	UnaryOperator	&		889715	0					
ANR	889889	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2 ]		889715	1					
ANR	889890	ArrayIndexing	histogram [ c0 ] [ c1 ]		889715	0					
ANR	889891	ArrayIndexing	histogram [ c0 ]		889715	0					
ANR	889892	Identifier	histogram		889715	0					
ANR	889893	Identifier	c0		889715	1					
ANR	889894	Identifier	c1		889715	1					
ANR	889895	Identifier	c2		889715	1					
ANR	889896	IfStatement	if ( * cachep == 0 )		889715	8					
ANR	889897	Condition	* cachep == 0	1346:7:42953:42964	889715	0	True				
ANR	889898	EqualityExpression	* cachep == 0		889715	0		==			
ANR	889899	UnaryOperationExpression	* cachep		889715	0					
ANR	889900	UnaryOperator	*		889715	0					
ANR	889901	Identifier	cachep		889715	1					
ANR	889902	PrimaryExpression	0		889715	1					
ANR	889903	ExpressionStatement	"fill_inverse_cmap ( cinfo , c0 , c1 , c2 )"	1348:5:42997:43034	889715	1	True				
ANR	889904	CallExpression	"fill_inverse_cmap ( cinfo , c0 , c1 , c2 )"		889715	0					
ANR	889905	Callee	fill_inverse_cmap		889715	0					
ANR	889906	Identifier	fill_inverse_cmap		889715	0					
ANR	889907	ArgumentList	cinfo		889715	1					
ANR	889908	Argument	cinfo		889715	0					
ANR	889909	Identifier	cinfo		889715	0					
ANR	889910	Argument	c0		889715	1					
ANR	889911	Identifier	c0		889715	0					
ANR	889912	Argument	c1		889715	2					
ANR	889913	Identifier	c1		889715	0					
ANR	889914	Argument	c2		889715	3					
ANR	889915	Identifier	c2		889715	0					
ANR	889916	ExpressionStatement	* outptr ++ = ( JSAMPLE ) ( * cachep - 1 )	1354:3:43186:43221	889715	9	True				
ANR	889917	AssignmentExpression	* outptr ++ = ( JSAMPLE ) ( * cachep - 1 )		889715	0		=			
ANR	889918	UnaryOperationExpression	* outptr ++		889715	0					
ANR	889919	UnaryOperator	*		889715	0					
ANR	889920	PostIncDecOperationExpression	outptr ++		889715	1					
ANR	889921	Identifier	outptr		889715	0					
ANR	889922	IncDec	++		889715	1					
ANR	889923	CastExpression	( JSAMPLE ) ( * cachep - 1 )		889715	1					
ANR	889924	CastTarget	JSAMPLE		889715	0					
ANR	889925	AdditiveExpression	* cachep - 1		889715	1		-			
ANR	889926	UnaryOperationExpression	* cachep		889715	0					
ANR	889927	UnaryOperator	*		889715	0					
ANR	889928	Identifier	cachep		889715	1					
ANR	889929	PrimaryExpression	1		889715	1					
ANR	889930	Identifier	pass2_no_dither		889715	1					
ANR	889931	ParameterList	"gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize"		889715	2					
ANR	889932	Parameter	gdImagePtr oim	1286:17:41228:41241	889715	0	True				
ANR	889933	ParameterType	gdImagePtr		889715	0					
ANR	889934	Identifier	oim		889715	1					
ANR	889935	Parameter	gdImagePtr nim	1286:33:41244:41257	889715	1	True				
ANR	889936	ParameterType	gdImagePtr		889715	0					
ANR	889937	Identifier	nim		889715	1					
ANR	889938	Parameter	my_cquantize_ptr cquantize	1286:49:41260:41285	889715	2	True				
ANR	889939	ParameterType	my_cquantize_ptr		889715	0					
ANR	889940	Identifier	cquantize		889715	1					
ANR	889941	CFGEntryNode	ENTRY		889715		True				
ANR	889942	CFGExitNode	EXIT		889715		True				
ANR	889943	Symbol	col		889715						
ANR	889944	Symbol	* * histogram		889715						
ANR	889945	Symbol	* row		889715						
ANR	889946	Symbol	C2_SHIFT		889715						
ANR	889947	Symbol	* cachep		889715						
ANR	889948	Symbol	cquantize		889715						
ANR	889949	Symbol	* cquantize		889715						
ANR	889950	Symbol	cquantize -> histogram		889715						
ANR	889951	Symbol	oim		889715						
ANR	889952	Symbol	inptr		889715						
ANR	889953	Symbol	nim		889715						
ANR	889954	Symbol	num_rows		889715						
ANR	889955	Symbol	C0_SHIFT		889715						
ANR	889956	Symbol	row		889715						
ANR	889957	Symbol	cachep		889715						
ANR	889958	Symbol	* * c0		889715						
ANR	889959	Symbol	output_buf		889715						
ANR	889960	Symbol	b		889715						
ANR	889961	Symbol	GETJSAMPLE		889715						
ANR	889962	Symbol	oim -> sx		889715						
ANR	889963	Symbol	g		889715						
ANR	889964	Symbol	oim -> sy		889715						
ANR	889965	Symbol	* histogram		889715						
ANR	889966	Symbol	c0		889715						
ANR	889967	Symbol	c1		889715						
ANR	889968	Symbol	c2		889715						
ANR	889969	Symbol	histogram		889715						
ANR	889970	Symbol	* c0		889715						
ANR	889971	Symbol	outptr		889715						
ANR	889972	Symbol	r		889715						
ANR	889973	Symbol	* inptr ++		889715						
ANR	889974	Symbol	cinfo		889715						
ANR	889975	Symbol	* c1		889715						
ANR	889976	Symbol	width		889715						
ANR	889977	Symbol	* output_buf		889715						
ANR	889978	Symbol	* outptr ++		889715						
ANR	889979	Symbol	* oim		889715						
ANR	889980	Symbol	input_buf		889715						
ANR	889981	Symbol	* input_buf		889715						
ANR	889982	Symbol	C1_SHIFT		889715						
ANR	889983	Function	pass2_fs_dither	1365:0:43322:50750							
ANR	889984	FunctionDef	"pass2_fs_dither (gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize)"		889983	0					
ANR	889985	CompoundStatement		1366:0:43399:50750	889983	0					
ANR	889986	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	1375:2:43691:43730	889983	0	True				
ANR	889987	IdentifierDecl	histogram = cquantize -> histogram		889983	0					
ANR	889988	IdentifierDeclType	hist3d		889983	0					
ANR	889989	Identifier	histogram		889983	1					
ANR	889990	AssignmentExpression	histogram = cquantize -> histogram		889983	2		=			
ANR	889991	Identifier	histogram		889983	0					
ANR	889992	PtrMemberAccess	cquantize -> histogram		889983	1					
ANR	889993	Identifier	cquantize		889983	0					
ANR	889994	Identifier	histogram		889983	1					
ANR	889995	Statement	register	1376:2:43734:43741	889983	1	True				
ANR	889996	IdentifierDeclStatement	"LOCFSERROR cur0 , cur1 , cur2 ;"	1376:11:43743:43770	889983	2	True				
ANR	889997	IdentifierDecl	cur0		889983	0					
ANR	889998	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	889999	Identifier	cur0		889983	1					
ANR	890000	IdentifierDecl	cur1		889983	1					
ANR	890001	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890002	Identifier	cur1		889983	1					
ANR	890003	IdentifierDecl	cur2		889983	2					
ANR	890004	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890005	Identifier	cur2		889983	1					
ANR	890006	IdentifierDeclStatement	"LOCFSERROR belowerr0 , belowerr1 , belowerr2 ;"	1377:2:43809:43851	889983	3	True				
ANR	890007	IdentifierDecl	belowerr0		889983	0					
ANR	890008	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890009	Identifier	belowerr0		889983	1					
ANR	890010	IdentifierDecl	belowerr1		889983	1					
ANR	890011	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890012	Identifier	belowerr1		889983	1					
ANR	890013	IdentifierDecl	belowerr2		889983	2					
ANR	890014	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890015	Identifier	belowerr2		889983	1					
ANR	890016	IdentifierDeclStatement	"LOCFSERROR bpreverr0 , bpreverr1 , bpreverr2 ;"	1378:2:43887:43929	889983	4	True				
ANR	890017	IdentifierDecl	bpreverr0		889983	0					
ANR	890018	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890019	Identifier	bpreverr0		889983	1					
ANR	890020	IdentifierDecl	bpreverr1		889983	1					
ANR	890021	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890022	Identifier	bpreverr1		889983	1					
ANR	890023	IdentifierDecl	bpreverr2		889983	2					
ANR	890024	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890025	Identifier	bpreverr2		889983	1					
ANR	890026	Statement	register	1379:2:43964:43971	889983	5	True				
ANR	890027	IdentifierDeclStatement	FSERRPTR errorptr ;	1379:11:43973:43990	889983	6	True				
ANR	890028	IdentifierDecl	errorptr		889983	0					
ANR	890029	IdentifierDeclType	FSERRPTR		889983	0					
ANR	890030	Identifier	errorptr		889983	1					
ANR	890031	IdentifierDeclStatement	histptr cachep ;	1380:2:44039:44053	889983	7	True				
ANR	890032	IdentifierDecl	cachep		889983	0					
ANR	890033	IdentifierDeclType	histptr		889983	0					
ANR	890034	Identifier	cachep		889983	1					
ANR	890035	IdentifierDeclStatement	int dir ;	1381:2:44057:44064	889983	8	True				
ANR	890036	IdentifierDecl	dir		889983	0					
ANR	890037	IdentifierDeclType	int		889983	0					
ANR	890038	Identifier	dir		889983	1					
ANR	890039	IdentifierDeclStatement	int dir3 ;	1382:2:44108:44116	889983	9	True				
ANR	890040	IdentifierDecl	dir3		889983	0					
ANR	890041	IdentifierDeclType	int		889983	0					
ANR	890042	Identifier	dir3		889983	1					
ANR	890043	IdentifierDeclStatement	int row ;	1383:2:44166:44173	889983	10	True				
ANR	890044	IdentifierDecl	row		889983	0					
ANR	890045	IdentifierDeclType	int		889983	0					
ANR	890046	Identifier	row		889983	1					
ANR	890047	IdentifierDeclStatement	JDIMENSION col ;	1384:2:44177:44191	889983	11	True				
ANR	890048	IdentifierDecl	col		889983	0					
ANR	890049	IdentifierDeclType	JDIMENSION		889983	0					
ANR	890050	Identifier	col		889983	1					
ANR	890051	IdentifierDeclStatement	JSAMPROW outptr ;	1386:2:44220:44235	889983	12	True				
ANR	890052	IdentifierDecl	outptr		889983	0					
ANR	890053	IdentifierDeclType	JSAMPROW		889983	0					
ANR	890054	Identifier	outptr		889983	1					
ANR	890055	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	1387:2:44270:44308	889983	13	True				
ANR	890056	IdentifierDecl	width = cinfo -> output_width		889983	0					
ANR	890057	IdentifierDeclType	JDIMENSION		889983	0					
ANR	890058	Identifier	width		889983	1					
ANR	890059	AssignmentExpression	width = cinfo -> output_width		889983	2		=			
ANR	890060	Identifier	width		889983	0					
ANR	890061	PtrMemberAccess	cinfo -> output_width		889983	1					
ANR	890062	Identifier	cinfo		889983	0					
ANR	890063	Identifier	output_width		889983	1					
ANR	890064	IdentifierDeclStatement	JSAMPLE * range_limit = cinfo -> sample_range_limit ;	1388:2:44312:44360	889983	14	True				
ANR	890065	IdentifierDecl	* range_limit = cinfo -> sample_range_limit		889983	0					
ANR	890066	IdentifierDeclType	JSAMPLE *		889983	0					
ANR	890067	Identifier	range_limit		889983	1					
ANR	890068	AssignmentExpression	* range_limit = cinfo -> sample_range_limit		889983	2		=			
ANR	890069	Identifier	range_limit		889983	0					
ANR	890070	PtrMemberAccess	cinfo -> sample_range_limit		889983	1					
ANR	890071	Identifier	cinfo		889983	0					
ANR	890072	Identifier	sample_range_limit		889983	1					
ANR	890073	IdentifierDeclStatement	JSAMPROW colormap0 = cinfo -> colormap [ 0 ] ;	1389:2:44364:44403	889983	15	True				
ANR	890074	IdentifierDecl	colormap0 = cinfo -> colormap [ 0 ]		889983	0					
ANR	890075	IdentifierDeclType	JSAMPROW		889983	0					
ANR	890076	Identifier	colormap0		889983	1					
ANR	890077	AssignmentExpression	colormap0 = cinfo -> colormap [ 0 ]		889983	2		=			
ANR	890078	Identifier	colormap0		889983	0					
ANR	890079	ArrayIndexing	cinfo -> colormap [ 0 ]		889983	1					
ANR	890080	PtrMemberAccess	cinfo -> colormap		889983	0					
ANR	890081	Identifier	cinfo		889983	0					
ANR	890082	Identifier	colormap		889983	1					
ANR	890083	PrimaryExpression	0		889983	1					
ANR	890084	IdentifierDeclStatement	JSAMPROW colormap1 = cinfo -> colormap [ 1 ] ;	1390:2:44407:44446	889983	16	True				
ANR	890085	IdentifierDecl	colormap1 = cinfo -> colormap [ 1 ]		889983	0					
ANR	890086	IdentifierDeclType	JSAMPROW		889983	0					
ANR	890087	Identifier	colormap1		889983	1					
ANR	890088	AssignmentExpression	colormap1 = cinfo -> colormap [ 1 ]		889983	2		=			
ANR	890089	Identifier	colormap1		889983	0					
ANR	890090	ArrayIndexing	cinfo -> colormap [ 1 ]		889983	1					
ANR	890091	PtrMemberAccess	cinfo -> colormap		889983	0					
ANR	890092	Identifier	cinfo		889983	0					
ANR	890093	Identifier	colormap		889983	1					
ANR	890094	PrimaryExpression	1		889983	1					
ANR	890095	IdentifierDeclStatement	JSAMPROW colormap2 = cinfo -> colormap [ 2 ] ;	1391:2:44450:44489	889983	17	True				
ANR	890096	IdentifierDecl	colormap2 = cinfo -> colormap [ 2 ]		889983	0					
ANR	890097	IdentifierDeclType	JSAMPROW		889983	0					
ANR	890098	Identifier	colormap2		889983	1					
ANR	890099	AssignmentExpression	colormap2 = cinfo -> colormap [ 2 ]		889983	2		=			
ANR	890100	Identifier	colormap2		889983	0					
ANR	890101	ArrayIndexing	cinfo -> colormap [ 2 ]		889983	1					
ANR	890102	PtrMemberAccess	cinfo -> colormap		889983	0					
ANR	890103	Identifier	cinfo		889983	0					
ANR	890104	Identifier	colormap		889983	1					
ANR	890105	PrimaryExpression	2		889983	1					
ANR	890106	IdentifierDeclStatement	int * error_limit = cquantize -> error_limiter ;	1401:2:44745:44788	889983	18	True				
ANR	890107	IdentifierDecl	* error_limit = cquantize -> error_limiter		889983	0					
ANR	890108	IdentifierDeclType	int *		889983	0					
ANR	890109	Identifier	error_limit		889983	1					
ANR	890110	AssignmentExpression	* error_limit = cquantize -> error_limiter		889983	2		=			
ANR	890111	Identifier	error_limit		889983	0					
ANR	890112	PtrMemberAccess	cquantize -> error_limiter		889983	1					
ANR	890113	Identifier	cquantize		889983	0					
ANR	890114	Identifier	error_limiter		889983	1					
ANR	890115	Statement	SHIFT_TEMPS	1404:2:44794:44804	889983	19	True				
ANR	890116	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		889983	20					
ANR	890117	ForInit	row = 0 ;	1404:19:44811:44818	889983	0	True				
ANR	890118	AssignmentExpression	row = 0		889983	0		=			
ANR	890119	Identifier	row		889983	0					
ANR	890120	PrimaryExpression	0		889983	1					
ANR	890121	Condition	row < num_rows	1404:28:44820:44833	889983	1	True				
ANR	890122	RelationalExpression	row < num_rows		889983	0		<			
ANR	890123	Identifier	row		889983	0					
ANR	890124	Identifier	num_rows		889983	1					
ANR	890125	PostIncDecOperationExpression	row ++	1404:44:44836:44840	889983	2	True				
ANR	890126	Identifier	row		889983	0					
ANR	890127	IncDec	++		889983	1					
ANR	890128	CompoundStatement		40:4:1447:1447	889983	3					
ANR	890129	ExpressionStatement	inptr = input_buf [ row ]	1406:6:44855:44877	889983	0	True				
ANR	890130	AssignmentExpression	inptr = input_buf [ row ]		889983	0		=			
ANR	890131	Identifier	inptr		889983	0					
ANR	890132	ArrayIndexing	input_buf [ row ]		889983	1					
ANR	890133	Identifier	input_buf		889983	0					
ANR	890134	Identifier	row		889983	1					
ANR	890135	ExpressionStatement	outptr = output_buf [ row ]	1407:6:44885:44909	889983	1	True				
ANR	890136	AssignmentExpression	outptr = output_buf [ row ]		889983	0		=			
ANR	890137	Identifier	outptr		889983	0					
ANR	890138	ArrayIndexing	output_buf [ row ]		889983	1					
ANR	890139	Identifier	output_buf		889983	0					
ANR	890140	Identifier	row		889983	1					
ANR	890141	IfStatement	if ( cquantize -> on_odd_row )		889983	2					
ANR	890142	Condition	cquantize -> on_odd_row	1408:10:44921:44941	889983	0	True				
ANR	890143	PtrMemberAccess	cquantize -> on_odd_row		889983	0					
ANR	890144	Identifier	cquantize		889983	0					
ANR	890145	Identifier	on_odd_row		889983	1					
ANR	890146	CompoundStatement		44:1:1545:1545	889983	1					
ANR	890147	ExpressionStatement	inptr += ( width - 1 ) * 3	1411:3:44990:45014	889983	0	True				
ANR	890148	AssignmentExpression	inptr += ( width - 1 ) * 3		889983	0		+=			
ANR	890149	Identifier	inptr		889983	0					
ANR	890150	MultiplicativeExpression	( width - 1 ) * 3		889983	1		*			
ANR	890151	AdditiveExpression	width - 1		889983	0		-			
ANR	890152	Identifier	width		889983	0					
ANR	890153	PrimaryExpression	1		889983	1					
ANR	890154	PrimaryExpression	3		889983	1					
ANR	890155	ExpressionStatement	outptr += width - 1	1412:3:45053:45072	889983	1	True				
ANR	890156	AssignmentExpression	outptr += width - 1		889983	0		+=			
ANR	890157	Identifier	outptr		889983	0					
ANR	890158	AdditiveExpression	width - 1		889983	1		-			
ANR	890159	Identifier	width		889983	0					
ANR	890160	PrimaryExpression	1		889983	1					
ANR	890161	ExpressionStatement	dir = - 1	1413:3:45077:45085	889983	2	True				
ANR	890162	AssignmentExpression	dir = - 1		889983	0		=			
ANR	890163	Identifier	dir		889983	0					
ANR	890164	UnaryOperationExpression	- 1		889983	1					
ANR	890165	UnaryOperator	-		889983	0					
ANR	890166	PrimaryExpression	1		889983	1					
ANR	890167	ExpressionStatement	dir3 = - 3	1414:3:45090:45099	889983	3	True				
ANR	890168	AssignmentExpression	dir3 = - 3		889983	0		=			
ANR	890169	Identifier	dir3		889983	0					
ANR	890170	UnaryOperationExpression	- 3		889983	1					
ANR	890171	UnaryOperator	-		889983	0					
ANR	890172	PrimaryExpression	3		889983	1					
ANR	890173	ExpressionStatement	errorptr = cquantize -> fserrors + ( width + 1 ) * 3	1415:3:45104:45152	889983	4	True				
ANR	890174	AssignmentExpression	errorptr = cquantize -> fserrors + ( width + 1 ) * 3		889983	0		=			
ANR	890175	Identifier	errorptr		889983	0					
ANR	890176	AdditiveExpression	cquantize -> fserrors + ( width + 1 ) * 3		889983	1		+			
ANR	890177	PtrMemberAccess	cquantize -> fserrors		889983	0					
ANR	890178	Identifier	cquantize		889983	0					
ANR	890179	Identifier	fserrors		889983	1					
ANR	890180	MultiplicativeExpression	( width + 1 ) * 3		889983	1		*			
ANR	890181	AdditiveExpression	width + 1		889983	0		+			
ANR	890182	Identifier	width		889983	0					
ANR	890183	PrimaryExpression	1		889983	1					
ANR	890184	PrimaryExpression	3		889983	1					
ANR	890185	ExpressionStatement	cquantize -> on_odd_row = FALSE	1417:3:45232:45261	889983	5	True				
ANR	890186	AssignmentExpression	cquantize -> on_odd_row = FALSE		889983	0		=			
ANR	890187	PtrMemberAccess	cquantize -> on_odd_row		889983	0					
ANR	890188	Identifier	cquantize		889983	0					
ANR	890189	Identifier	on_odd_row		889983	1					
ANR	890190	Identifier	FALSE		889983	1					
ANR	890191	ElseStatement	else		889983	0					
ANR	890192	CompoundStatement		56:1:1910:1910	889983	0					
ANR	890193	ExpressionStatement	dir = 1	1423:3:45355:45362	889983	0	True				
ANR	890194	AssignmentExpression	dir = 1		889983	0		=			
ANR	890195	Identifier	dir		889983	0					
ANR	890196	PrimaryExpression	1		889983	1					
ANR	890197	ExpressionStatement	dir3 = 3	1424:3:45367:45375	889983	1	True				
ANR	890198	AssignmentExpression	dir3 = 3		889983	0		=			
ANR	890199	Identifier	dir3		889983	0					
ANR	890200	PrimaryExpression	3		889983	1					
ANR	890201	ExpressionStatement	errorptr = cquantize -> fserrors	1425:3:45380:45410	889983	2	True				
ANR	890202	AssignmentExpression	errorptr = cquantize -> fserrors		889983	0		=			
ANR	890203	Identifier	errorptr		889983	0					
ANR	890204	PtrMemberAccess	cquantize -> fserrors		889983	1					
ANR	890205	Identifier	cquantize		889983	0					
ANR	890206	Identifier	fserrors		889983	1					
ANR	890207	ExpressionStatement	cquantize -> on_odd_row = TRUE	1427:3:45497:45525	889983	3	True				
ANR	890208	AssignmentExpression	cquantize -> on_odd_row = TRUE		889983	0		=			
ANR	890209	PtrMemberAccess	cquantize -> on_odd_row		889983	0					
ANR	890210	Identifier	cquantize		889983	0					
ANR	890211	Identifier	on_odd_row		889983	1					
ANR	890212	Identifier	TRUE		889983	1					
ANR	890213	ExpressionStatement	cur0 = cur1 = cur2 = 0	1431:6:45646:45668	889983	3	True				
ANR	890214	AssignmentExpression	cur0 = cur1 = cur2 = 0		889983	0		=			
ANR	890215	Identifier	cur0		889983	0					
ANR	890216	AssignmentExpression	cur1 = cur2 = 0		889983	1		=			
ANR	890217	Identifier	cur1		889983	0					
ANR	890218	AssignmentExpression	cur2 = 0		889983	1		=			
ANR	890219	Identifier	cur2		889983	0					
ANR	890220	PrimaryExpression	0		889983	1					
ANR	890221	ExpressionStatement	belowerr0 = belowerr1 = belowerr2 = 0	1433:6:45729:45766	889983	4	True				
ANR	890222	AssignmentExpression	belowerr0 = belowerr1 = belowerr2 = 0		889983	0		=			
ANR	890223	Identifier	belowerr0		889983	0					
ANR	890224	AssignmentExpression	belowerr1 = belowerr2 = 0		889983	1		=			
ANR	890225	Identifier	belowerr1		889983	0					
ANR	890226	AssignmentExpression	belowerr2 = 0		889983	1		=			
ANR	890227	Identifier	belowerr2		889983	0					
ANR	890228	PrimaryExpression	0		889983	1					
ANR	890229	ExpressionStatement	bpreverr0 = bpreverr1 = bpreverr2 = 0	1434:6:45774:45811	889983	5	True				
ANR	890230	AssignmentExpression	bpreverr0 = bpreverr1 = bpreverr2 = 0		889983	0		=			
ANR	890231	Identifier	bpreverr0		889983	0					
ANR	890232	AssignmentExpression	bpreverr1 = bpreverr2 = 0		889983	1		=			
ANR	890233	Identifier	bpreverr1		889983	0					
ANR	890234	AssignmentExpression	bpreverr2 = 0		889983	1		=			
ANR	890235	Identifier	bpreverr2		889983	0					
ANR	890236	PrimaryExpression	0		889983	1					
ANR	890237	ForStatement	for ( col = width ; col > 0 ; col -- )		889983	6					
ANR	890238	ForInit	col = width ;	1436:11:45825:45836	889983	0	True				
ANR	890239	AssignmentExpression	col = width		889983	0		=			
ANR	890240	Identifier	col		889983	0					
ANR	890241	Identifier	width		889983	1					
ANR	890242	Condition	col > 0	1436:24:45838:45844	889983	1	True				
ANR	890243	RelationalExpression	col > 0		889983	0		>			
ANR	890244	Identifier	col		889983	0					
ANR	890245	PrimaryExpression	0		889983	1					
ANR	890246	PostIncDecOperationExpression	col --	1436:33:45847:45851	889983	2	True				
ANR	890247	Identifier	col		889983	0					
ANR	890248	IncDec	--		889983	1					
ANR	890249	CompoundStatement		72:1:2455:2455	889983	3					
ANR	890250	IfStatement	if ( ( oim -> transparent >= 0 ) && ( * inptr == oim -> transparent ) )		889983	0					
ANR	890251	Condition	( oim -> transparent >= 0 ) && ( * inptr == oim -> transparent )	1442:7:46050:46104	889983	0	True				
ANR	890252	AndExpression	( oim -> transparent >= 0 ) && ( * inptr == oim -> transparent )		889983	0		&&			
ANR	890253	RelationalExpression	oim -> transparent >= 0		889983	0		>=			
ANR	890254	PtrMemberAccess	oim -> transparent		889983	0					
ANR	890255	Identifier	oim		889983	0					
ANR	890256	Identifier	transparent		889983	1					
ANR	890257	PrimaryExpression	0		889983	1					
ANR	890258	EqualityExpression	* inptr == oim -> transparent		889983	1		==			
ANR	890259	UnaryOperationExpression	* inptr		889983	0					
ANR	890260	UnaryOperator	*		889983	0					
ANR	890261	Identifier	inptr		889983	1					
ANR	890262	PtrMemberAccess	oim -> transparent		889983	1					
ANR	890263	Identifier	oim		889983	0					
ANR	890264	Identifier	transparent		889983	1					
ANR	890265	CompoundStatement		78:5:2712:2712	889983	1					
ANR	890266	ExpressionStatement	* outptr = nim -> colorsTotal	1444:7:46121:46147	889983	0	True				
ANR	890267	AssignmentExpression	* outptr = nim -> colorsTotal		889983	0		=			
ANR	890268	UnaryOperationExpression	* outptr		889983	0					
ANR	890269	UnaryOperator	*		889983	0					
ANR	890270	Identifier	outptr		889983	1					
ANR	890271	PtrMemberAccess	nim -> colorsTotal		889983	1					
ANR	890272	Identifier	nim		889983	0					
ANR	890273	Identifier	colorsTotal		889983	1					
ANR	890274	ExpressionStatement	errorptr [ 0 ] = 0	1445:7:46156:46171	889983	1	True				
ANR	890275	AssignmentExpression	errorptr [ 0 ] = 0		889983	0		=			
ANR	890276	ArrayIndexing	errorptr [ 0 ]		889983	0					
ANR	890277	Identifier	errorptr		889983	0					
ANR	890278	PrimaryExpression	0		889983	1					
ANR	890279	PrimaryExpression	0		889983	1					
ANR	890280	ExpressionStatement	errorptr [ 1 ] = 0	1446:7:46180:46195	889983	2	True				
ANR	890281	AssignmentExpression	errorptr [ 1 ] = 0		889983	0		=			
ANR	890282	ArrayIndexing	errorptr [ 1 ]		889983	0					
ANR	890283	Identifier	errorptr		889983	0					
ANR	890284	PrimaryExpression	1		889983	1					
ANR	890285	PrimaryExpression	0		889983	1					
ANR	890286	ExpressionStatement	errorptr [ 2 ] = 0	1447:7:46204:46219	889983	3	True				
ANR	890287	AssignmentExpression	errorptr [ 2 ] = 0		889983	0		=			
ANR	890288	ArrayIndexing	errorptr [ 2 ]		889983	0					
ANR	890289	Identifier	errorptr		889983	0					
ANR	890290	PrimaryExpression	2		889983	1					
ANR	890291	PrimaryExpression	0		889983	1					
ANR	890292	ExpressionStatement	errorptr [ 3 ] = 0	1448:7:46228:46243	889983	4	True				
ANR	890293	AssignmentExpression	errorptr [ 3 ] = 0		889983	0		=			
ANR	890294	ArrayIndexing	errorptr [ 3 ]		889983	0					
ANR	890295	Identifier	errorptr		889983	0					
ANR	890296	PrimaryExpression	3		889983	1					
ANR	890297	PrimaryExpression	0		889983	1					
ANR	890298	ExpressionStatement	inptr += dir	1449:7:46252:46264	889983	5	True				
ANR	890299	AssignmentExpression	inptr += dir		889983	0		+=			
ANR	890300	Identifier	inptr		889983	0					
ANR	890301	Identifier	dir		889983	1					
ANR	890302	ExpressionStatement	outptr += dir	1450:7:46273:46286	889983	6	True				
ANR	890303	AssignmentExpression	outptr += dir		889983	0		+=			
ANR	890304	Identifier	outptr		889983	0					
ANR	890305	Identifier	dir		889983	1					
ANR	890306	ExpressionStatement	errorptr += dir3	1451:7:46295:46311	889983	7	True				
ANR	890307	AssignmentExpression	errorptr += dir3		889983	0		+=			
ANR	890308	Identifier	errorptr		889983	0					
ANR	890309	Identifier	dir3		889983	1					
ANR	890310	ContinueStatement	continue ;	1452:7:46320:46328	889983	8	True				
ANR	890311	ExpressionStatement	"cur0 = RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"	1462:3:46800:46853	889983	1	True				
ANR	890312	AssignmentExpression	"cur0 = RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"		889983	0		=			
ANR	890313	Identifier	cur0		889983	0					
ANR	890314	CallExpression	"RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"		889983	1					
ANR	890315	Callee	RIGHT_SHIFT		889983	0					
ANR	890316	Identifier	RIGHT_SHIFT		889983	0					
ANR	890317	ArgumentList	cur0 + errorptr [ dir3 + 0 ] + 8		889983	1					
ANR	890318	Argument	cur0 + errorptr [ dir3 + 0 ] + 8		889983	0					
ANR	890319	AdditiveExpression	cur0 + errorptr [ dir3 + 0 ] + 8		889983	0		+			
ANR	890320	Identifier	cur0		889983	0					
ANR	890321	AdditiveExpression	errorptr [ dir3 + 0 ] + 8		889983	1		+			
ANR	890322	ArrayIndexing	errorptr [ dir3 + 0 ]		889983	0					
ANR	890323	Identifier	errorptr		889983	0					
ANR	890324	AdditiveExpression	dir3 + 0		889983	1		+			
ANR	890325	Identifier	dir3		889983	0					
ANR	890326	PrimaryExpression	0		889983	1					
ANR	890327	PrimaryExpression	8		889983	1					
ANR	890328	Argument	4		889983	1					
ANR	890329	PrimaryExpression	4		889983	0					
ANR	890330	ExpressionStatement	"cur1 = RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"	1463:3:46858:46911	889983	2	True				
ANR	890331	AssignmentExpression	"cur1 = RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"		889983	0		=			
ANR	890332	Identifier	cur1		889983	0					
ANR	890333	CallExpression	"RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"		889983	1					
ANR	890334	Callee	RIGHT_SHIFT		889983	0					
ANR	890335	Identifier	RIGHT_SHIFT		889983	0					
ANR	890336	ArgumentList	cur1 + errorptr [ dir3 + 1 ] + 8		889983	1					
ANR	890337	Argument	cur1 + errorptr [ dir3 + 1 ] + 8		889983	0					
ANR	890338	AdditiveExpression	cur1 + errorptr [ dir3 + 1 ] + 8		889983	0		+			
ANR	890339	Identifier	cur1		889983	0					
ANR	890340	AdditiveExpression	errorptr [ dir3 + 1 ] + 8		889983	1		+			
ANR	890341	ArrayIndexing	errorptr [ dir3 + 1 ]		889983	0					
ANR	890342	Identifier	errorptr		889983	0					
ANR	890343	AdditiveExpression	dir3 + 1		889983	1		+			
ANR	890344	Identifier	dir3		889983	0					
ANR	890345	PrimaryExpression	1		889983	1					
ANR	890346	PrimaryExpression	8		889983	1					
ANR	890347	Argument	4		889983	1					
ANR	890348	PrimaryExpression	4		889983	0					
ANR	890349	ExpressionStatement	"cur2 = RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"	1464:3:46916:46969	889983	3	True				
ANR	890350	AssignmentExpression	"cur2 = RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"		889983	0		=			
ANR	890351	Identifier	cur2		889983	0					
ANR	890352	CallExpression	"RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"		889983	1					
ANR	890353	Callee	RIGHT_SHIFT		889983	0					
ANR	890354	Identifier	RIGHT_SHIFT		889983	0					
ANR	890355	ArgumentList	cur2 + errorptr [ dir3 + 2 ] + 8		889983	1					
ANR	890356	Argument	cur2 + errorptr [ dir3 + 2 ] + 8		889983	0					
ANR	890357	AdditiveExpression	cur2 + errorptr [ dir3 + 2 ] + 8		889983	0		+			
ANR	890358	Identifier	cur2		889983	0					
ANR	890359	AdditiveExpression	errorptr [ dir3 + 2 ] + 8		889983	1		+			
ANR	890360	ArrayIndexing	errorptr [ dir3 + 2 ]		889983	0					
ANR	890361	Identifier	errorptr		889983	0					
ANR	890362	AdditiveExpression	dir3 + 2		889983	1		+			
ANR	890363	Identifier	dir3		889983	0					
ANR	890364	PrimaryExpression	2		889983	1					
ANR	890365	PrimaryExpression	8		889983	1					
ANR	890366	Argument	4		889983	1					
ANR	890367	PrimaryExpression	4		889983	0					
ANR	890368	ExpressionStatement	cur0 = error_limit [ cur0 ]	1468:3:47108:47132	889983	4	True				
ANR	890369	AssignmentExpression	cur0 = error_limit [ cur0 ]		889983	0		=			
ANR	890370	Identifier	cur0		889983	0					
ANR	890371	ArrayIndexing	error_limit [ cur0 ]		889983	1					
ANR	890372	Identifier	error_limit		889983	0					
ANR	890373	Identifier	cur0		889983	1					
ANR	890374	ExpressionStatement	cur1 = error_limit [ cur1 ]	1469:3:47137:47161	889983	5	True				
ANR	890375	AssignmentExpression	cur1 = error_limit [ cur1 ]		889983	0		=			
ANR	890376	Identifier	cur1		889983	0					
ANR	890377	ArrayIndexing	error_limit [ cur1 ]		889983	1					
ANR	890378	Identifier	error_limit		889983	0					
ANR	890379	Identifier	cur1		889983	1					
ANR	890380	ExpressionStatement	cur2 = error_limit [ cur2 ]	1470:3:47166:47190	889983	6	True				
ANR	890381	AssignmentExpression	cur2 = error_limit [ cur2 ]		889983	0		=			
ANR	890382	Identifier	cur2		889983	0					
ANR	890383	ArrayIndexing	error_limit [ cur2 ]		889983	1					
ANR	890384	Identifier	error_limit		889983	0					
ANR	890385	Identifier	cur2		889983	1					
ANR	890386	ExpressionStatement	cur0 += GETJSAMPLE ( inptr [ 0 ] )	1476:3:47425:47454	889983	7	True				
ANR	890387	AssignmentExpression	cur0 += GETJSAMPLE ( inptr [ 0 ] )		889983	0		+=			
ANR	890388	Identifier	cur0		889983	0					
ANR	890389	CallExpression	GETJSAMPLE ( inptr [ 0 ] )		889983	1					
ANR	890390	Callee	GETJSAMPLE		889983	0					
ANR	890391	Identifier	GETJSAMPLE		889983	0					
ANR	890392	ArgumentList	inptr [ 0 ]		889983	1					
ANR	890393	Argument	inptr [ 0 ]		889983	0					
ANR	890394	ArrayIndexing	inptr [ 0 ]		889983	0					
ANR	890395	Identifier	inptr		889983	0					
ANR	890396	PrimaryExpression	0		889983	1					
ANR	890397	ExpressionStatement	cur1 += GETJSAMPLE ( inptr [ 1 ] )	1477:3:47459:47488	889983	8	True				
ANR	890398	AssignmentExpression	cur1 += GETJSAMPLE ( inptr [ 1 ] )		889983	0		+=			
ANR	890399	Identifier	cur1		889983	0					
ANR	890400	CallExpression	GETJSAMPLE ( inptr [ 1 ] )		889983	1					
ANR	890401	Callee	GETJSAMPLE		889983	0					
ANR	890402	Identifier	GETJSAMPLE		889983	0					
ANR	890403	ArgumentList	inptr [ 1 ]		889983	1					
ANR	890404	Argument	inptr [ 1 ]		889983	0					
ANR	890405	ArrayIndexing	inptr [ 1 ]		889983	0					
ANR	890406	Identifier	inptr		889983	0					
ANR	890407	PrimaryExpression	1		889983	1					
ANR	890408	ExpressionStatement	cur2 += GETJSAMPLE ( inptr [ 2 ] )	1478:3:47493:47522	889983	9	True				
ANR	890409	AssignmentExpression	cur2 += GETJSAMPLE ( inptr [ 2 ] )		889983	0		+=			
ANR	890410	Identifier	cur2		889983	0					
ANR	890411	CallExpression	GETJSAMPLE ( inptr [ 2 ] )		889983	1					
ANR	890412	Callee	GETJSAMPLE		889983	0					
ANR	890413	Identifier	GETJSAMPLE		889983	0					
ANR	890414	ArgumentList	inptr [ 2 ]		889983	1					
ANR	890415	Argument	inptr [ 2 ]		889983	0					
ANR	890416	ArrayIndexing	inptr [ 2 ]		889983	0					
ANR	890417	Identifier	inptr		889983	0					
ANR	890418	PrimaryExpression	2		889983	1					
ANR	890419	ExpressionStatement	cur0 = GETJSAMPLE ( range_limit [ cur0 ] )	1479:3:47527:47564	889983	10	True				
ANR	890420	AssignmentExpression	cur0 = GETJSAMPLE ( range_limit [ cur0 ] )		889983	0		=			
ANR	890421	Identifier	cur0		889983	0					
ANR	890422	CallExpression	GETJSAMPLE ( range_limit [ cur0 ] )		889983	1					
ANR	890423	Callee	GETJSAMPLE		889983	0					
ANR	890424	Identifier	GETJSAMPLE		889983	0					
ANR	890425	ArgumentList	range_limit [ cur0 ]		889983	1					
ANR	890426	Argument	range_limit [ cur0 ]		889983	0					
ANR	890427	ArrayIndexing	range_limit [ cur0 ]		889983	0					
ANR	890428	Identifier	range_limit		889983	0					
ANR	890429	Identifier	cur0		889983	1					
ANR	890430	ExpressionStatement	cur1 = GETJSAMPLE ( range_limit [ cur1 ] )	1480:3:47569:47606	889983	11	True				
ANR	890431	AssignmentExpression	cur1 = GETJSAMPLE ( range_limit [ cur1 ] )		889983	0		=			
ANR	890432	Identifier	cur1		889983	0					
ANR	890433	CallExpression	GETJSAMPLE ( range_limit [ cur1 ] )		889983	1					
ANR	890434	Callee	GETJSAMPLE		889983	0					
ANR	890435	Identifier	GETJSAMPLE		889983	0					
ANR	890436	ArgumentList	range_limit [ cur1 ]		889983	1					
ANR	890437	Argument	range_limit [ cur1 ]		889983	0					
ANR	890438	ArrayIndexing	range_limit [ cur1 ]		889983	0					
ANR	890439	Identifier	range_limit		889983	0					
ANR	890440	Identifier	cur1		889983	1					
ANR	890441	ExpressionStatement	cur2 = GETJSAMPLE ( range_limit [ cur2 ] )	1481:3:47611:47648	889983	12	True				
ANR	890442	AssignmentExpression	cur2 = GETJSAMPLE ( range_limit [ cur2 ] )		889983	0		=			
ANR	890443	Identifier	cur2		889983	0					
ANR	890444	CallExpression	GETJSAMPLE ( range_limit [ cur2 ] )		889983	1					
ANR	890445	Callee	GETJSAMPLE		889983	0					
ANR	890446	Identifier	GETJSAMPLE		889983	0					
ANR	890447	ArgumentList	range_limit [ cur2 ]		889983	1					
ANR	890448	Argument	range_limit [ cur2 ]		889983	0					
ANR	890449	ArrayIndexing	range_limit [ cur2 ]		889983	0					
ANR	890450	Identifier	range_limit		889983	0					
ANR	890451	Identifier	cur2		889983	1					
ANR	890452	ExpressionStatement	cachep = & histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]	1492:3:47912:47990	889983	13	True				
ANR	890453	AssignmentExpression	cachep = & histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		889983	0		=			
ANR	890454	Identifier	cachep		889983	0					
ANR	890455	UnaryOperationExpression	& histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		889983	1					
ANR	890456	UnaryOperator	&		889983	0					
ANR	890457	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		889983	1					
ANR	890458	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ]		889983	0					
ANR	890459	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ]		889983	0					
ANR	890460	Identifier	histogram		889983	0					
ANR	890461	ShiftExpression	cur0 >> C0_SHIFT		889983	1		>>			
ANR	890462	Identifier	cur0		889983	0					
ANR	890463	Identifier	C0_SHIFT		889983	1					
ANR	890464	ShiftExpression	cur1 >> C1_SHIFT		889983	1		>>			
ANR	890465	Identifier	cur1		889983	0					
ANR	890466	Identifier	C1_SHIFT		889983	1					
ANR	890467	ShiftExpression	cur2 >> C2_SHIFT		889983	1		>>			
ANR	890468	Identifier	cur2		889983	0					
ANR	890469	Identifier	C2_SHIFT		889983	1					
ANR	890470	IfStatement	if ( * cachep == 0 )		889983	14					
ANR	890471	Condition	* cachep == 0	1496:7:48105:48116	889983	0	True				
ANR	890472	EqualityExpression	* cachep == 0		889983	0		==			
ANR	890473	UnaryOperationExpression	* cachep		889983	0					
ANR	890474	UnaryOperator	*		889983	0					
ANR	890475	Identifier	cachep		889983	1					
ANR	890476	PrimaryExpression	0		889983	1					
ANR	890477	ExpressionStatement	"fill_inverse_cmap ( cinfo , cur0 >> C0_SHIFT , cur1 >> C1_SHIFT , cur2 >> C2_SHIFT )"	1498:5:48149:48238	889983	1	True				
ANR	890478	CallExpression	"fill_inverse_cmap ( cinfo , cur0 >> C0_SHIFT , cur1 >> C1_SHIFT , cur2 >> C2_SHIFT )"		889983	0					
ANR	890479	Callee	fill_inverse_cmap		889983	0					
ANR	890480	Identifier	fill_inverse_cmap		889983	0					
ANR	890481	ArgumentList	cinfo		889983	1					
ANR	890482	Argument	cinfo		889983	0					
ANR	890483	Identifier	cinfo		889983	0					
ANR	890484	Argument	cur0 >> C0_SHIFT		889983	1					
ANR	890485	ShiftExpression	cur0 >> C0_SHIFT		889983	0		>>			
ANR	890486	Identifier	cur0		889983	0					
ANR	890487	Identifier	C0_SHIFT		889983	1					
ANR	890488	Argument	cur1 >> C1_SHIFT		889983	2					
ANR	890489	ShiftExpression	cur1 >> C1_SHIFT		889983	0		>>			
ANR	890490	Identifier	cur1		889983	0					
ANR	890491	Identifier	C1_SHIFT		889983	1					
ANR	890492	Argument	cur2 >> C2_SHIFT		889983	3					
ANR	890493	ShiftExpression	cur2 >> C2_SHIFT		889983	0		>>			
ANR	890494	Identifier	cur2		889983	0					
ANR	890495	Identifier	C2_SHIFT		889983	1					
ANR	890496	CompoundStatement		141:14:5033:5058	889983	15					
ANR	890497	Statement	register	1506:5:48424:48431	889983	0	True				
ANR	890498	IdentifierDeclStatement	int pixcode = * cachep - 1 ;	1506:14:48433:48458	889983	1	True				
ANR	890499	IdentifierDecl	pixcode = * cachep - 1		889983	0					
ANR	890500	IdentifierDeclType	int		889983	0					
ANR	890501	Identifier	pixcode		889983	1					
ANR	890502	AssignmentExpression	pixcode = * cachep - 1		889983	2		=			
ANR	890503	Identifier	pixcode		889983	0					
ANR	890504	AdditiveExpression	* cachep - 1		889983	1		-			
ANR	890505	UnaryOperationExpression	* cachep		889983	0					
ANR	890506	UnaryOperator	*		889983	0					
ANR	890507	Identifier	cachep		889983	1					
ANR	890508	PrimaryExpression	1		889983	1					
ANR	890509	ExpressionStatement	* outptr = ( JSAMPLE ) pixcode	1507:5:48465:48492	889983	2	True				
ANR	890510	AssignmentExpression	* outptr = ( JSAMPLE ) pixcode		889983	0		=			
ANR	890511	UnaryOperationExpression	* outptr		889983	0					
ANR	890512	UnaryOperator	*		889983	0					
ANR	890513	Identifier	outptr		889983	1					
ANR	890514	CastExpression	( JSAMPLE ) pixcode		889983	1					
ANR	890515	CastTarget	JSAMPLE		889983	0					
ANR	890516	Identifier	pixcode		889983	1					
ANR	890517	Statement	define	1509:1:48550:48555	889983	3	True				
ANR	890518	Statement	GETJSAMPLE	1509:8:48557:48566	889983	4	True				
ANR	890519	ExpressionStatement	cur0 -= GETJSAMPLE ( colormap0 [ pixcode ] )	1510:5:48573:48612	889983	5	True				
ANR	890520	AssignmentExpression	cur0 -= GETJSAMPLE ( colormap0 [ pixcode ] )		889983	0		-=			
ANR	890521	Identifier	cur0		889983	0					
ANR	890522	CallExpression	GETJSAMPLE ( colormap0 [ pixcode ] )		889983	1					
ANR	890523	Callee	GETJSAMPLE		889983	0					
ANR	890524	Identifier	GETJSAMPLE		889983	0					
ANR	890525	ArgumentList	colormap0 [ pixcode ]		889983	1					
ANR	890526	Argument	colormap0 [ pixcode ]		889983	0					
ANR	890527	ArrayIndexing	colormap0 [ pixcode ]		889983	0					
ANR	890528	Identifier	colormap0		889983	0					
ANR	890529	Identifier	pixcode		889983	1					
ANR	890530	ExpressionStatement	cur1 -= GETJSAMPLE ( colormap1 [ pixcode ] )	1511:5:48619:48658	889983	6	True				
ANR	890531	AssignmentExpression	cur1 -= GETJSAMPLE ( colormap1 [ pixcode ] )		889983	0		-=			
ANR	890532	Identifier	cur1		889983	0					
ANR	890533	CallExpression	GETJSAMPLE ( colormap1 [ pixcode ] )		889983	1					
ANR	890534	Callee	GETJSAMPLE		889983	0					
ANR	890535	Identifier	GETJSAMPLE		889983	0					
ANR	890536	ArgumentList	colormap1 [ pixcode ]		889983	1					
ANR	890537	Argument	colormap1 [ pixcode ]		889983	0					
ANR	890538	ArrayIndexing	colormap1 [ pixcode ]		889983	0					
ANR	890539	Identifier	colormap1		889983	0					
ANR	890540	Identifier	pixcode		889983	1					
ANR	890541	ExpressionStatement	cur2 -= GETJSAMPLE ( colormap2 [ pixcode ] )	1512:5:48665:48704	889983	7	True				
ANR	890542	AssignmentExpression	cur2 -= GETJSAMPLE ( colormap2 [ pixcode ] )		889983	0		-=			
ANR	890543	Identifier	cur2		889983	0					
ANR	890544	CallExpression	GETJSAMPLE ( colormap2 [ pixcode ] )		889983	1					
ANR	890545	Callee	GETJSAMPLE		889983	0					
ANR	890546	Identifier	GETJSAMPLE		889983	0					
ANR	890547	ArgumentList	colormap2 [ pixcode ]		889983	1					
ANR	890548	Argument	colormap2 [ pixcode ]		889983	0					
ANR	890549	ArrayIndexing	colormap2 [ pixcode ]		889983	0					
ANR	890550	Identifier	colormap2		889983	0					
ANR	890551	Identifier	pixcode		889983	1					
ANR	890552	Statement	undef	1513:1:48707:48711	889983	8	True				
ANR	890553	Statement	GETJSAMPLE	1513:7:48713:48722	889983	9	True				
ANR	890554	CompoundStatement		155:14:5535:5561	889983	16					
ANR	890555	Statement	register	1520:5:48926:48933	889983	0	True				
ANR	890556	IdentifierDeclStatement	"LOCFSERROR bnexterr , delta ;"	1520:14:48935:48961	889983	1	True				
ANR	890557	IdentifierDecl	bnexterr		889983	0					
ANR	890558	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890559	Identifier	bnexterr		889983	1					
ANR	890560	IdentifierDecl	delta		889983	1					
ANR	890561	IdentifierDeclType	LOCFSERROR		889983	0					
ANR	890562	Identifier	delta		889983	1					
ANR	890563	ExpressionStatement	bnexterr = cur0	1522:5:48969:48984	889983	2	True				
ANR	890564	AssignmentExpression	bnexterr = cur0		889983	0		=			
ANR	890565	Identifier	bnexterr		889983	0					
ANR	890566	Identifier	cur0		889983	1					
ANR	890567	ExpressionStatement	delta = cur0 * 2	1523:5:49017:49033	889983	3	True				
ANR	890568	AssignmentExpression	delta = cur0 * 2		889983	0		=			
ANR	890569	Identifier	delta		889983	0					
ANR	890570	MultiplicativeExpression	cur0 * 2		889983	1		*			
ANR	890571	Identifier	cur0		889983	0					
ANR	890572	PrimaryExpression	2		889983	1					
ANR	890573	ExpressionStatement	cur0 += delta	1524:5:49040:49053	889983	4	True				
ANR	890574	AssignmentExpression	cur0 += delta		889983	0		+=			
ANR	890575	Identifier	cur0		889983	0					
ANR	890576	Identifier	delta		889983	1					
ANR	890577	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) ( bpreverr0 + cur0 )	1525:5:49081:49123	889983	5	True				
ANR	890578	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) ( bpreverr0 + cur0 )		889983	0		=			
ANR	890579	ArrayIndexing	errorptr [ 0 ]		889983	0					
ANR	890580	Identifier	errorptr		889983	0					
ANR	890581	PrimaryExpression	0		889983	1					
ANR	890582	CastExpression	( FSERROR ) ( bpreverr0 + cur0 )		889983	1					
ANR	890583	CastTarget	FSERROR		889983	0					
ANR	890584	AdditiveExpression	bpreverr0 + cur0		889983	1		+			
ANR	890585	Identifier	bpreverr0		889983	0					
ANR	890586	Identifier	cur0		889983	1					
ANR	890587	ExpressionStatement	cur0 += delta	1526:5:49130:49143	889983	6	True				
ANR	890588	AssignmentExpression	cur0 += delta		889983	0		+=			
ANR	890589	Identifier	cur0		889983	0					
ANR	890590	Identifier	delta		889983	1					
ANR	890591	ExpressionStatement	bpreverr0 = belowerr0 + cur0	1527:5:49171:49199	889983	7	True				
ANR	890592	AssignmentExpression	bpreverr0 = belowerr0 + cur0		889983	0		=			
ANR	890593	Identifier	bpreverr0		889983	0					
ANR	890594	AdditiveExpression	belowerr0 + cur0		889983	1		+			
ANR	890595	Identifier	belowerr0		889983	0					
ANR	890596	Identifier	cur0		889983	1					
ANR	890597	ExpressionStatement	belowerr0 = bnexterr	1528:5:49206:49226	889983	8	True				
ANR	890598	AssignmentExpression	belowerr0 = bnexterr		889983	0		=			
ANR	890599	Identifier	belowerr0		889983	0					
ANR	890600	Identifier	bnexterr		889983	1					
ANR	890601	ExpressionStatement	cur0 += delta	1529:5:49233:49246	889983	9	True				
ANR	890602	AssignmentExpression	cur0 += delta		889983	0		+=			
ANR	890603	Identifier	cur0		889983	0					
ANR	890604	Identifier	delta		889983	1					
ANR	890605	ExpressionStatement	bnexterr = cur1	1530:5:49274:49289	889983	10	True				
ANR	890606	AssignmentExpression	bnexterr = cur1		889983	0		=			
ANR	890607	Identifier	bnexterr		889983	0					
ANR	890608	Identifier	cur1		889983	1					
ANR	890609	ExpressionStatement	delta = cur1 * 2	1531:5:49322:49338	889983	11	True				
ANR	890610	AssignmentExpression	delta = cur1 * 2		889983	0		=			
ANR	890611	Identifier	delta		889983	0					
ANR	890612	MultiplicativeExpression	cur1 * 2		889983	1		*			
ANR	890613	Identifier	cur1		889983	0					
ANR	890614	PrimaryExpression	2		889983	1					
ANR	890615	ExpressionStatement	cur1 += delta	1532:5:49345:49358	889983	12	True				
ANR	890616	AssignmentExpression	cur1 += delta		889983	0		+=			
ANR	890617	Identifier	cur1		889983	0					
ANR	890618	Identifier	delta		889983	1					
ANR	890619	ExpressionStatement	errorptr [ 1 ] = ( FSERROR ) ( bpreverr1 + cur1 )	1533:5:49386:49428	889983	13	True				
ANR	890620	AssignmentExpression	errorptr [ 1 ] = ( FSERROR ) ( bpreverr1 + cur1 )		889983	0		=			
ANR	890621	ArrayIndexing	errorptr [ 1 ]		889983	0					
ANR	890622	Identifier	errorptr		889983	0					
ANR	890623	PrimaryExpression	1		889983	1					
ANR	890624	CastExpression	( FSERROR ) ( bpreverr1 + cur1 )		889983	1					
ANR	890625	CastTarget	FSERROR		889983	0					
ANR	890626	AdditiveExpression	bpreverr1 + cur1		889983	1		+			
ANR	890627	Identifier	bpreverr1		889983	0					
ANR	890628	Identifier	cur1		889983	1					
ANR	890629	ExpressionStatement	cur1 += delta	1534:5:49435:49448	889983	14	True				
ANR	890630	AssignmentExpression	cur1 += delta		889983	0		+=			
ANR	890631	Identifier	cur1		889983	0					
ANR	890632	Identifier	delta		889983	1					
ANR	890633	ExpressionStatement	bpreverr1 = belowerr1 + cur1	1535:5:49476:49504	889983	15	True				
ANR	890634	AssignmentExpression	bpreverr1 = belowerr1 + cur1		889983	0		=			
ANR	890635	Identifier	bpreverr1		889983	0					
ANR	890636	AdditiveExpression	belowerr1 + cur1		889983	1		+			
ANR	890637	Identifier	belowerr1		889983	0					
ANR	890638	Identifier	cur1		889983	1					
ANR	890639	ExpressionStatement	belowerr1 = bnexterr	1536:5:49511:49531	889983	16	True				
ANR	890640	AssignmentExpression	belowerr1 = bnexterr		889983	0		=			
ANR	890641	Identifier	belowerr1		889983	0					
ANR	890642	Identifier	bnexterr		889983	1					
ANR	890643	ExpressionStatement	cur1 += delta	1537:5:49538:49551	889983	17	True				
ANR	890644	AssignmentExpression	cur1 += delta		889983	0		+=			
ANR	890645	Identifier	cur1		889983	0					
ANR	890646	Identifier	delta		889983	1					
ANR	890647	ExpressionStatement	bnexterr = cur2	1538:5:49579:49594	889983	18	True				
ANR	890648	AssignmentExpression	bnexterr = cur2		889983	0		=			
ANR	890649	Identifier	bnexterr		889983	0					
ANR	890650	Identifier	cur2		889983	1					
ANR	890651	ExpressionStatement	delta = cur2 * 2	1539:5:49627:49643	889983	19	True				
ANR	890652	AssignmentExpression	delta = cur2 * 2		889983	0		=			
ANR	890653	Identifier	delta		889983	0					
ANR	890654	MultiplicativeExpression	cur2 * 2		889983	1		*			
ANR	890655	Identifier	cur2		889983	0					
ANR	890656	PrimaryExpression	2		889983	1					
ANR	890657	ExpressionStatement	cur2 += delta	1540:5:49650:49663	889983	20	True				
ANR	890658	AssignmentExpression	cur2 += delta		889983	0		+=			
ANR	890659	Identifier	cur2		889983	0					
ANR	890660	Identifier	delta		889983	1					
ANR	890661	ExpressionStatement	errorptr [ 2 ] = ( FSERROR ) ( bpreverr2 + cur2 )	1541:5:49691:49733	889983	21	True				
ANR	890662	AssignmentExpression	errorptr [ 2 ] = ( FSERROR ) ( bpreverr2 + cur2 )		889983	0		=			
ANR	890663	ArrayIndexing	errorptr [ 2 ]		889983	0					
ANR	890664	Identifier	errorptr		889983	0					
ANR	890665	PrimaryExpression	2		889983	1					
ANR	890666	CastExpression	( FSERROR ) ( bpreverr2 + cur2 )		889983	1					
ANR	890667	CastTarget	FSERROR		889983	0					
ANR	890668	AdditiveExpression	bpreverr2 + cur2		889983	1		+			
ANR	890669	Identifier	bpreverr2		889983	0					
ANR	890670	Identifier	cur2		889983	1					
ANR	890671	ExpressionStatement	cur2 += delta	1542:5:49740:49753	889983	22	True				
ANR	890672	AssignmentExpression	cur2 += delta		889983	0		+=			
ANR	890673	Identifier	cur2		889983	0					
ANR	890674	Identifier	delta		889983	1					
ANR	890675	ExpressionStatement	bpreverr2 = belowerr2 + cur2	1543:5:49781:49809	889983	23	True				
ANR	890676	AssignmentExpression	bpreverr2 = belowerr2 + cur2		889983	0		=			
ANR	890677	Identifier	bpreverr2		889983	0					
ANR	890678	AdditiveExpression	belowerr2 + cur2		889983	1		+			
ANR	890679	Identifier	belowerr2		889983	0					
ANR	890680	Identifier	cur2		889983	1					
ANR	890681	ExpressionStatement	belowerr2 = bnexterr	1544:5:49816:49836	889983	24	True				
ANR	890682	AssignmentExpression	belowerr2 = bnexterr		889983	0		=			
ANR	890683	Identifier	belowerr2		889983	0					
ANR	890684	Identifier	bnexterr		889983	1					
ANR	890685	ExpressionStatement	cur2 += delta	1545:5:49843:49856	889983	25	True				
ANR	890686	AssignmentExpression	cur2 += delta		889983	0		+=			
ANR	890687	Identifier	cur2		889983	0					
ANR	890688	Identifier	delta		889983	1					
ANR	890689	ExpressionStatement	inptr += dir3	1552:3:50139:50152	889983	17	True				
ANR	890690	AssignmentExpression	inptr += dir3		889983	0		+=			
ANR	890691	Identifier	inptr		889983	0					
ANR	890692	Identifier	dir3		889983	1					
ANR	890693	ExpressionStatement	outptr += dir	1556:3:50276:50289	889983	18	True				
ANR	890694	AssignmentExpression	outptr += dir		889983	0		+=			
ANR	890695	Identifier	outptr		889983	0					
ANR	890696	Identifier	dir		889983	1					
ANR	890697	ExpressionStatement	errorptr += dir3	1557:3:50294:50310	889983	19	True				
ANR	890698	AssignmentExpression	errorptr += dir3		889983	0		+=			
ANR	890699	Identifier	errorptr		889983	0					
ANR	890700	Identifier	dir3		889983	1					
ANR	890701	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) bpreverr0	1563:6:50593:50626	889983	7	True				
ANR	890702	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) bpreverr0		889983	0		=			
ANR	890703	ArrayIndexing	errorptr [ 0 ]		889983	0					
ANR	890704	Identifier	errorptr		889983	0					
ANR	890705	PrimaryExpression	0		889983	1					
ANR	890706	CastExpression	( FSERROR ) bpreverr0		889983	1					
ANR	890707	CastTarget	FSERROR		889983	0					
ANR	890708	Identifier	bpreverr0		889983	1					
ANR	890709	ExpressionStatement	errorptr [ 1 ] = ( FSERROR ) bpreverr1	1564:6:50668:50701	889983	8	True				
ANR	890710	AssignmentExpression	errorptr [ 1 ] = ( FSERROR ) bpreverr1		889983	0		=			
ANR	890711	ArrayIndexing	errorptr [ 1 ]		889983	0					
ANR	890712	Identifier	errorptr		889983	0					
ANR	890713	PrimaryExpression	1		889983	1					
ANR	890714	CastExpression	( FSERROR ) bpreverr1		889983	1					
ANR	890715	CastTarget	FSERROR		889983	0					
ANR	890716	Identifier	bpreverr1		889983	1					
ANR	890717	ExpressionStatement	errorptr [ 2 ] = ( FSERROR ) bpreverr2	1565:6:50709:50742	889983	9	True				
ANR	890718	AssignmentExpression	errorptr [ 2 ] = ( FSERROR ) bpreverr2		889983	0		=			
ANR	890719	ArrayIndexing	errorptr [ 2 ]		889983	0					
ANR	890720	Identifier	errorptr		889983	0					
ANR	890721	PrimaryExpression	2		889983	1					
ANR	890722	CastExpression	( FSERROR ) bpreverr2		889983	1					
ANR	890723	CastTarget	FSERROR		889983	0					
ANR	890724	Identifier	bpreverr2		889983	1					
ANR	890725	Identifier	pass2_fs_dither		889983	1					
ANR	890726	ParameterList	"gdImagePtr oim , gdImagePtr nim , my_cquantize_ptr cquantize"		889983	2					
ANR	890727	Parameter	gdImagePtr oim	1365:17:43339:43352	889983	0	True				
ANR	890728	ParameterType	gdImagePtr		889983	0					
ANR	890729	Identifier	oim		889983	1					
ANR	890730	Parameter	gdImagePtr nim	1365:33:43355:43368	889983	1	True				
ANR	890731	ParameterType	gdImagePtr		889983	0					
ANR	890732	Identifier	nim		889983	1					
ANR	890733	Parameter	my_cquantize_ptr cquantize	1365:49:43371:43396	889983	2	True				
ANR	890734	ParameterType	my_cquantize_ptr		889983	0					
ANR	890735	Identifier	cquantize		889983	1					
ANR	890736	CFGEntryNode	ENTRY		889983		True				
ANR	890737	CFGExitNode	EXIT		889983		True				
ANR	890738	Symbol	col		889983						
ANR	890739	Symbol	RIGHT_SHIFT		889983						
ANR	890740	Symbol	* row		889983						
ANR	890741	Symbol	* pixcode		889983						
ANR	890742	Symbol	delta		889983						
ANR	890743	Symbol	* * cur0		889983						
ANR	890744	Symbol	* cquantize		889983						
ANR	890745	Symbol	dir		889983						
ANR	890746	Symbol	* C1_SHIFT		889983						
ANR	890747	Symbol	cquantize -> histogram		889983						
ANR	890748	Symbol	* colormap0		889983						
ANR	890749	Symbol	* colormap2		889983						
ANR	890750	Symbol	nim		889983						
ANR	890751	Symbol	* colormap1		889983						
ANR	890752	Symbol	error_limit		889983						
ANR	890753	Symbol	cquantize -> fserrors		889983						
ANR	890754	Symbol	num_rows		889983						
ANR	890755	Symbol	C0_SHIFT		889983						
ANR	890756	Symbol	* cinfo		889983						
ANR	890757	Symbol	nim -> colorsTotal		889983						
ANR	890758	Symbol	output_buf		889983						
ANR	890759	Symbol	* C0_SHIFT		889983						
ANR	890760	Symbol	colormap2		889983						
ANR	890761	Symbol	colormap1		889983						
ANR	890762	Symbol	cinfo -> colormap		889983						
ANR	890763	Symbol	TRUE		889983						
ANR	890764	Symbol	colormap0		889983						
ANR	890765	Symbol	oim -> transparent		889983						
ANR	890766	Symbol	histogram		889983						
ANR	890767	Symbol	cinfo		889983						
ANR	890768	Symbol	* cur2		889983						
ANR	890769	Symbol	* range_limit		889983						
ANR	890770	Symbol	* output_buf		889983						
ANR	890771	Symbol	* cur1		889983						
ANR	890772	Symbol	* cur0		889983						
ANR	890773	Symbol	bnexterr		889983						
ANR	890774	Symbol	pixcode		889983						
ANR	890775	Symbol	input_buf		889983						
ANR	890776	Symbol	* oim		889983						
ANR	890777	Symbol	* * cinfo		889983						
ANR	890778	Symbol	cinfo -> sample_range_limit		889983						
ANR	890779	Symbol	* * histogram		889983						
ANR	890780	Symbol	bpreverr0		889983						
ANR	890781	Symbol	C2_SHIFT		889983						
ANR	890782	Symbol	bpreverr1		889983						
ANR	890783	Symbol	bpreverr2		889983						
ANR	890784	Symbol	cquantize -> error_limiter		889983						
ANR	890785	Symbol	* error_limit		889983						
ANR	890786	Symbol	* cachep		889983						
ANR	890787	Symbol	cquantize		889983						
ANR	890788	Symbol	belowerr0		889983						
ANR	890789	Symbol	* cinfo -> colormap		889983						
ANR	890790	Symbol	belowerr1		889983						
ANR	890791	Symbol	cinfo -> output_width		889983						
ANR	890792	Symbol	* errorptr		889983						
ANR	890793	Symbol	belowerr2		889983						
ANR	890794	Symbol	errorptr		889983						
ANR	890795	Symbol	oim		889983						
ANR	890796	Symbol	inptr		889983						
ANR	890797	Symbol	cachep		889983						
ANR	890798	Symbol	row		889983						
ANR	890799	Symbol	cur2		889983						
ANR	890800	Symbol	cur0		889983						
ANR	890801	Symbol	cur1		889983						
ANR	890802	Symbol	* outptr		889983						
ANR	890803	Symbol	* dir3		889983						
ANR	890804	Symbol	* * C0_SHIFT		889983						
ANR	890805	Symbol	GETJSAMPLE		889983						
ANR	890806	Symbol	dir3		889983						
ANR	890807	Symbol	* histogram		889983						
ANR	890808	Symbol	* inptr		889983						
ANR	890809	Symbol	outptr		889983						
ANR	890810	Symbol	width		889983						
ANR	890811	Symbol	range_limit		889983						
ANR	890812	Symbol	cquantize -> on_odd_row		889983						
ANR	890813	Symbol	FALSE		889983						
ANR	890814	Symbol	* nim		889983						
ANR	890815	Symbol	* input_buf		889983						
ANR	890816	Symbol	C1_SHIFT		889983						
ANR	890817	DeclStmt									
ANR	890818	Decl							int	int *	table
ANR	890819	DeclStmt									
ANR	890820	Decl							int	int	in
ANR	890821	Decl							int	int	out
ANR	890822	DeclStmt									
ANR	890823	Decl							my_cquantize_ptr	my_cquantize_ptr	cquantize
ANR	890824	Function	finish_pass1	1644:0:53195:53550							
ANR	890825	FunctionDef	finish_pass1 (j_decompress_ptr cinfo)		890824	0					
ANR	890826	CompoundStatement		1645:0:53233:53550	890824	0					
ANR	890827	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1646:2:53237:53301	890824	0	True				
ANR	890828	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		890824	0					
ANR	890829	IdentifierDeclType	my_cquantize_ptr		890824	0					
ANR	890830	Identifier	cquantize		890824	1					
ANR	890831	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		890824	2		=			
ANR	890832	Identifier	cquantize		890824	0					
ANR	890833	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		890824	1					
ANR	890834	CastTarget	my_cquantize_ptr		890824	0					
ANR	890835	PtrMemberAccess	cinfo -> cquantize		890824	1					
ANR	890836	Identifier	cinfo		890824	0					
ANR	890837	Identifier	cquantize		890824	1					
ANR	890838	ExpressionStatement	cinfo -> colormap = cquantize -> sv_colormap	1649:2:53375:53415	890824	1	True				
ANR	890839	AssignmentExpression	cinfo -> colormap = cquantize -> sv_colormap		890824	0		=			
ANR	890840	PtrMemberAccess	cinfo -> colormap		890824	0					
ANR	890841	Identifier	cinfo		890824	0					
ANR	890842	Identifier	colormap		890824	1					
ANR	890843	PtrMemberAccess	cquantize -> sv_colormap		890824	1					
ANR	890844	Identifier	cquantize		890824	0					
ANR	890845	Identifier	sv_colormap		890824	1					
ANR	890846	ExpressionStatement	"select_colors ( cinfo , cquantize -> desired )"	1650:2:53419:53460	890824	2	True				
ANR	890847	CallExpression	"select_colors ( cinfo , cquantize -> desired )"		890824	0					
ANR	890848	Callee	select_colors		890824	0					
ANR	890849	Identifier	select_colors		890824	0					
ANR	890850	ArgumentList	cinfo		890824	1					
ANR	890851	Argument	cinfo		890824	0					
ANR	890852	Identifier	cinfo		890824	0					
ANR	890853	Argument	cquantize -> desired		890824	1					
ANR	890854	PtrMemberAccess	cquantize -> desired		890824	0					
ANR	890855	Identifier	cquantize		890824	0					
ANR	890856	Identifier	desired		890824	1					
ANR	890857	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1652:2:53518:53548	890824	3	True				
ANR	890858	AssignmentExpression	cquantize -> needs_zeroed = TRUE		890824	0		=			
ANR	890859	PtrMemberAccess	cquantize -> needs_zeroed		890824	0					
ANR	890860	Identifier	cquantize		890824	0					
ANR	890861	Identifier	needs_zeroed		890824	1					
ANR	890862	Identifier	TRUE		890824	1					
ANR	890863	Identifier	finish_pass1		890824	1					
ANR	890864	ParameterList	j_decompress_ptr cinfo		890824	2					
ANR	890865	Parameter	j_decompress_ptr cinfo	1644:14:53209:53230	890824	0	True				
ANR	890866	ParameterType	j_decompress_ptr		890824	0					
ANR	890867	Identifier	cinfo		890824	1					
ANR	890868	CFGEntryNode	ENTRY		890824		True				
ANR	890869	CFGExitNode	EXIT		890824		True				
ANR	890870	Symbol	cinfo -> cquantize		890824						
ANR	890871	Symbol	cquantize -> sv_colormap		890824						
ANR	890872	Symbol	cquantize -> desired		890824						
ANR	890873	Symbol	cinfo		890824						
ANR	890874	Symbol	cinfo -> colormap		890824						
ANR	890875	Symbol	cquantize -> needs_zeroed		890824						
ANR	890876	Symbol	TRUE		890824						
ANR	890877	Symbol	cquantize		890824						
ANR	890878	Symbol	* cquantize		890824						
ANR	890879	Symbol	* cinfo		890824						
ANR	890880	Function	finish_pass2	1657:0:53571:53627							
ANR	890881	FunctionDef	finish_pass2 (j_decompress_ptr cinfo)		890880	0					
ANR	890882	CompoundStatement		1658:0:53609:53627	890880	0					
ANR	890883	Identifier	finish_pass2		890880	1					
ANR	890884	ParameterList	j_decompress_ptr cinfo		890880	2					
ANR	890885	Parameter	j_decompress_ptr cinfo	1657:14:53585:53606	890880	0	True				
ANR	890886	ParameterType	j_decompress_ptr		890880	0					
ANR	890887	Identifier	cinfo		890880	1					
ANR	890888	CFGEntryNode	ENTRY		890880		True				
ANR	890889	CFGExitNode	EXIT		890880		True				
ANR	890890	Symbol	cinfo		890880						
ANR	890891	Function	start_pass_2_quant	1667:0:53695:55745							
ANR	890892	FunctionDef	"start_pass_2_quant (j_decompress_ptr cinfo , boolean is_pre_scan)"		890891	0					
ANR	890893	CompoundStatement		1668:0:53760:55745	890891	0					
ANR	890894	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1669:2:53764:53828	890891	0	True				
ANR	890895	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		890891	0					
ANR	890896	IdentifierDeclType	my_cquantize_ptr		890891	0					
ANR	890897	Identifier	cquantize		890891	1					
ANR	890898	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		890891	2		=			
ANR	890899	Identifier	cquantize		890891	0					
ANR	890900	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		890891	1					
ANR	890901	CastTarget	my_cquantize_ptr		890891	0					
ANR	890902	PtrMemberAccess	cinfo -> cquantize		890891	1					
ANR	890903	Identifier	cinfo		890891	0					
ANR	890904	Identifier	cquantize		890891	1					
ANR	890905	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	1670:2:53832:53871	890891	1	True				
ANR	890906	IdentifierDecl	histogram = cquantize -> histogram		890891	0					
ANR	890907	IdentifierDeclType	hist3d		890891	0					
ANR	890908	Identifier	histogram		890891	1					
ANR	890909	AssignmentExpression	histogram = cquantize -> histogram		890891	2		=			
ANR	890910	Identifier	histogram		890891	0					
ANR	890911	PtrMemberAccess	cquantize -> histogram		890891	1					
ANR	890912	Identifier	cquantize		890891	0					
ANR	890913	Identifier	histogram		890891	1					
ANR	890914	IdentifierDeclStatement	int i ;	1671:2:53875:53880	890891	2	True				
ANR	890915	IdentifierDecl	i		890891	0					
ANR	890916	IdentifierDeclType	int		890891	0					
ANR	890917	Identifier	i		890891	1					
ANR	890918	IfStatement	if ( cinfo -> dither_mode != JDITHER_NONE )		890891	3					
ANR	890919	Condition	cinfo -> dither_mode != JDITHER_NONE	1675:6:54001:54034	890891	0	True				
ANR	890920	EqualityExpression	cinfo -> dither_mode != JDITHER_NONE		890891	0		!=			
ANR	890921	PtrMemberAccess	cinfo -> dither_mode		890891	0					
ANR	890922	Identifier	cinfo		890891	0					
ANR	890923	Identifier	dither_mode		890891	1					
ANR	890924	Identifier	JDITHER_NONE		890891	1					
ANR	890925	ExpressionStatement	cinfo -> dither_mode = JDITHER_FS	1676:4:54041:54072	890891	1	True				
ANR	890926	AssignmentExpression	cinfo -> dither_mode = JDITHER_FS		890891	0		=			
ANR	890927	PtrMemberAccess	cinfo -> dither_mode		890891	0					
ANR	890928	Identifier	cinfo		890891	0					
ANR	890929	Identifier	dither_mode		890891	1					
ANR	890930	Identifier	JDITHER_FS		890891	1					
ANR	890931	IfStatement	if ( is_pre_scan )		890891	4					
ANR	890932	Condition	is_pre_scan	1678:6:54081:54091	890891	0	True				
ANR	890933	Identifier	is_pre_scan		890891	0					
ANR	890934	CompoundStatement		12:4:337:337	890891	1					
ANR	890935	ExpressionStatement	cquantize -> pub . color_quantize = prescan_quantize	1681:6:54141:54189	890891	0	True				
ANR	890936	AssignmentExpression	cquantize -> pub . color_quantize = prescan_quantize		890891	0		=			
ANR	890937	MemberAccess	cquantize -> pub . color_quantize		890891	0					
ANR	890938	PtrMemberAccess	cquantize -> pub		890891	0					
ANR	890939	Identifier	cquantize		890891	0					
ANR	890940	Identifier	pub		890891	1					
ANR	890941	Identifier	color_quantize		890891	1					
ANR	890942	Identifier	prescan_quantize		890891	1					
ANR	890943	ExpressionStatement	cquantize -> pub . finish_pass = finish_pass1	1682:6:54197:54238	890891	1	True				
ANR	890944	AssignmentExpression	cquantize -> pub . finish_pass = finish_pass1		890891	0		=			
ANR	890945	MemberAccess	cquantize -> pub . finish_pass		890891	0					
ANR	890946	PtrMemberAccess	cquantize -> pub		890891	0					
ANR	890947	Identifier	cquantize		890891	0					
ANR	890948	Identifier	pub		890891	1					
ANR	890949	Identifier	finish_pass		890891	1					
ANR	890950	Identifier	finish_pass1		890891	1					
ANR	890951	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1683:6:54246:54276	890891	2	True				
ANR	890952	AssignmentExpression	cquantize -> needs_zeroed = TRUE		890891	0		=			
ANR	890953	PtrMemberAccess	cquantize -> needs_zeroed		890891	0					
ANR	890954	Identifier	cquantize		890891	0					
ANR	890955	Identifier	needs_zeroed		890891	1					
ANR	890956	Identifier	TRUE		890891	1					
ANR	890957	ElseStatement	else		890891	0					
ANR	890958	CompoundStatement		19:4:562:562	890891	0					
ANR	890959	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		890891	0					
ANR	890960	Condition	cinfo -> dither_mode == JDITHER_FS	1688:10:54370:54401	890891	0	True				
ANR	890961	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		890891	0		==			
ANR	890962	PtrMemberAccess	cinfo -> dither_mode		890891	0					
ANR	890963	Identifier	cinfo		890891	0					
ANR	890964	Identifier	dither_mode		890891	1					
ANR	890965	Identifier	JDITHER_FS		890891	1					
ANR	890966	ExpressionStatement	cquantize -> pub . color_quantize = pass2_fs_dither	1689:1:54405:54452	890891	1	True				
ANR	890967	AssignmentExpression	cquantize -> pub . color_quantize = pass2_fs_dither		890891	0		=			
ANR	890968	MemberAccess	cquantize -> pub . color_quantize		890891	0					
ANR	890969	PtrMemberAccess	cquantize -> pub		890891	0					
ANR	890970	Identifier	cquantize		890891	0					
ANR	890971	Identifier	pub		890891	1					
ANR	890972	Identifier	color_quantize		890891	1					
ANR	890973	Identifier	pass2_fs_dither		890891	1					
ANR	890974	ElseStatement	else		890891	0					
ANR	890975	ExpressionStatement	cquantize -> pub . color_quantize = pass2_no_dither	1691:1:54466:54513	890891	0	True				
ANR	890976	AssignmentExpression	cquantize -> pub . color_quantize = pass2_no_dither		890891	0		=			
ANR	890977	MemberAccess	cquantize -> pub . color_quantize		890891	0					
ANR	890978	PtrMemberAccess	cquantize -> pub		890891	0					
ANR	890979	Identifier	cquantize		890891	0					
ANR	890980	Identifier	pub		890891	1					
ANR	890981	Identifier	color_quantize		890891	1					
ANR	890982	Identifier	pass2_no_dither		890891	1					
ANR	890983	ExpressionStatement	cquantize -> pub . finish_pass = finish_pass2	1692:6:54521:54562	890891	1	True				
ANR	890984	AssignmentExpression	cquantize -> pub . finish_pass = finish_pass2		890891	0		=			
ANR	890985	MemberAccess	cquantize -> pub . finish_pass		890891	0					
ANR	890986	PtrMemberAccess	cquantize -> pub		890891	0					
ANR	890987	Identifier	cquantize		890891	0					
ANR	890988	Identifier	pub		890891	1					
ANR	890989	Identifier	finish_pass		890891	1					
ANR	890990	Identifier	finish_pass2		890891	1					
ANR	890991	ExpressionStatement	i = cinfo -> actual_number_of_colors	1695:6:54619:54653	890891	2	True				
ANR	890992	AssignmentExpression	i = cinfo -> actual_number_of_colors		890891	0		=			
ANR	890993	Identifier	i		890891	0					
ANR	890994	PtrMemberAccess	cinfo -> actual_number_of_colors		890891	1					
ANR	890995	Identifier	cinfo		890891	0					
ANR	890996	Identifier	actual_number_of_colors		890891	1					
ANR	890997	IfStatement	if ( i < 1 )		890891	3					
ANR	890998	Condition	i < 1	1696:10:54665:54669	890891	0	True				
ANR	890999	RelationalExpression	i < 1		890891	0		<			
ANR	891000	Identifier	i		890891	0					
ANR	891001	PrimaryExpression	1		890891	1					
ANR	891002	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 1 )"	1697:1:54673:54715	890891	1	True				
ANR	891003	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 1 )"		890891	0					
ANR	891004	Callee	ERREXIT1		890891	0					
ANR	891005	Identifier	ERREXIT1		890891	0					
ANR	891006	ArgumentList	cinfo		890891	1					
ANR	891007	Argument	cinfo		890891	0					
ANR	891008	Identifier	cinfo		890891	0					
ANR	891009	Argument	JERR_QUANT_FEW_COLORS		890891	1					
ANR	891010	Identifier	JERR_QUANT_FEW_COLORS		890891	0					
ANR	891011	Argument	1		890891	2					
ANR	891012	PrimaryExpression	1		890891	0					
ANR	891013	IfStatement	if ( i > MAXNUMCOLORS )		890891	4					
ANR	891014	Condition	i > MAXNUMCOLORS	1698:10:54727:54742	890891	0	True				
ANR	891015	RelationalExpression	i > MAXNUMCOLORS		890891	0		>			
ANR	891016	Identifier	i		890891	0					
ANR	891017	Identifier	MAXNUMCOLORS		890891	1					
ANR	891018	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"	1699:1:54746:54800	890891	1	True				
ANR	891019	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"		890891	0					
ANR	891020	Callee	ERREXIT1		890891	0					
ANR	891021	Identifier	ERREXIT1		890891	0					
ANR	891022	ArgumentList	cinfo		890891	1					
ANR	891023	Argument	cinfo		890891	0					
ANR	891024	Identifier	cinfo		890891	0					
ANR	891025	Argument	JERR_QUANT_MANY_COLORS		890891	1					
ANR	891026	Identifier	JERR_QUANT_MANY_COLORS		890891	0					
ANR	891027	Argument	MAXNUMCOLORS		890891	2					
ANR	891028	Identifier	MAXNUMCOLORS		890891	0					
ANR	891029	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		890891	5					
ANR	891030	Condition	cinfo -> dither_mode == JDITHER_FS	1701:10:54813:54844	890891	0	True				
ANR	891031	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		890891	0		==			
ANR	891032	PtrMemberAccess	cinfo -> dither_mode		890891	0					
ANR	891033	Identifier	cinfo		890891	0					
ANR	891034	Identifier	dither_mode		890891	1					
ANR	891035	Identifier	JDITHER_FS		890891	1					
ANR	891036	CompoundStatement		36:3:1092:1183	890891	1					
ANR	891037	IdentifierDeclStatement	size_t arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) ;	1703:3:54853:54944	890891	0	True				
ANR	891038	IdentifierDecl	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		890891	0					
ANR	891039	IdentifierDeclType	size_t		890891	0					
ANR	891040	Identifier	arraysize		890891	1					
ANR	891041	AssignmentExpression	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		890891	2		=			
ANR	891042	Identifier	arraysize		890891	0					
ANR	891043	CastExpression	( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		890891	1					
ANR	891044	CastTarget	size_t		890891	0					
ANR	891045	MultiplicativeExpression	( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) )		890891	1		*			
ANR	891046	AdditiveExpression	cinfo -> output_width + 2		890891	0		+			
ANR	891047	PtrMemberAccess	cinfo -> output_width		890891	0					
ANR	891048	Identifier	cinfo		890891	0					
ANR	891049	Identifier	output_width		890891	1					
ANR	891050	PrimaryExpression	2		890891	1					
ANR	891051	MultiplicativeExpression	3 * SIZEOF ( FSERROR )		890891	1		*			
ANR	891052	PrimaryExpression	3		890891	0					
ANR	891053	CallExpression	SIZEOF ( FSERROR )		890891	1					
ANR	891054	Callee	SIZEOF		890891	0					
ANR	891055	Identifier	SIZEOF		890891	0					
ANR	891056	ArgumentList	FSERROR		890891	1					
ANR	891057	Argument	FSERROR		890891	0					
ANR	891058	Identifier	FSERROR		890891	0					
ANR	891059	IfStatement	if ( cquantize -> fserrors == NULL )		890891	1					
ANR	891060	Condition	cquantize -> fserrors == NULL	1706:7:55019:55045	890891	0	True				
ANR	891061	EqualityExpression	cquantize -> fserrors == NULL		890891	0		==			
ANR	891062	PtrMemberAccess	cquantize -> fserrors		890891	0					
ANR	891063	Identifier	cquantize		890891	0					
ANR	891064	Identifier	fserrors		890891	1					
ANR	891065	Identifier	NULL		890891	1					
ANR	891066	ExpressionStatement	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"	1707:5:55053:55166	890891	1	True				
ANR	891067	AssignmentExpression	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		890891	0		=			
ANR	891068	PtrMemberAccess	cquantize -> fserrors		890891	0					
ANR	891069	Identifier	cquantize		890891	0					
ANR	891070	Identifier	fserrors		890891	1					
ANR	891071	CastExpression	"( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		890891	1					
ANR	891072	CastTarget	FSERRPTR		890891	0					
ANR	891073	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		890891	1					
ANR	891074	Callee	* cinfo -> mem -> alloc_large		890891	0					
ANR	891075	UnaryOperationExpression	* cinfo -> mem -> alloc_large		890891	0					
ANR	891076	UnaryOperator	*		890891	0					
ANR	891077	PtrMemberAccess	cinfo -> mem -> alloc_large		890891	1					
ANR	891078	PtrMemberAccess	cinfo -> mem		890891	0					
ANR	891079	Identifier	cinfo		890891	0					
ANR	891080	Identifier	mem		890891	1					
ANR	891081	Identifier	alloc_large		890891	1					
ANR	891082	ArgumentList	( j_common_ptr ) cinfo		890891	1					
ANR	891083	Argument	( j_common_ptr ) cinfo		890891	0					
ANR	891084	CastExpression	( j_common_ptr ) cinfo		890891	0					
ANR	891085	CastTarget	j_common_ptr		890891	0					
ANR	891086	Identifier	cinfo		890891	1					
ANR	891087	Argument	JPOOL_IMAGE		890891	1					
ANR	891088	Identifier	JPOOL_IMAGE		890891	0					
ANR	891089	Argument	arraysize		890891	2					
ANR	891090	Identifier	arraysize		890891	0					
ANR	891091	ExpressionStatement	"jzero_far ( ( void FAR * ) cquantize -> fserrors , arraysize )"	1710:3:55222:55277	890891	2	True				
ANR	891092	CallExpression	"jzero_far ( ( void FAR * ) cquantize -> fserrors , arraysize )"		890891	0					
ANR	891093	Callee	jzero_far		890891	0					
ANR	891094	Identifier	jzero_far		890891	0					
ANR	891095	ArgumentList	( void FAR * ) cquantize -> fserrors		890891	1					
ANR	891096	Argument	( void FAR * ) cquantize -> fserrors		890891	0					
ANR	891097	CastExpression	( void FAR * ) cquantize -> fserrors		890891	0					
ANR	891098	CastTarget	void FAR *		890891	0					
ANR	891099	PtrMemberAccess	cquantize -> fserrors		890891	1					
ANR	891100	Identifier	cquantize		890891	0					
ANR	891101	Identifier	fserrors		890891	1					
ANR	891102	Argument	arraysize		890891	1					
ANR	891103	Identifier	arraysize		890891	0					
ANR	891104	IfStatement	if ( cquantize -> error_limiter == NULL )		890891	3					
ANR	891105	Condition	cquantize -> error_limiter == NULL	1712:7:55344:55375	890891	0	True				
ANR	891106	EqualityExpression	cquantize -> error_limiter == NULL		890891	0		==			
ANR	891107	PtrMemberAccess	cquantize -> error_limiter		890891	0					
ANR	891108	Identifier	cquantize		890891	0					
ANR	891109	Identifier	error_limiter		890891	1					
ANR	891110	Identifier	NULL		890891	1					
ANR	891111	ExpressionStatement	init_error_limit ( cinfo )	1713:5:55383:55407	890891	1	True				
ANR	891112	CallExpression	init_error_limit ( cinfo )		890891	0					
ANR	891113	Callee	init_error_limit		890891	0					
ANR	891114	Identifier	init_error_limit		890891	0					
ANR	891115	ArgumentList	cinfo		890891	1					
ANR	891116	Argument	cinfo		890891	0					
ANR	891117	Identifier	cinfo		890891	0					
ANR	891118	ExpressionStatement	cquantize -> on_odd_row = FALSE	1714:3:55412:55441	890891	4	True				
ANR	891119	AssignmentExpression	cquantize -> on_odd_row = FALSE		890891	0		=			
ANR	891120	PtrMemberAccess	cquantize -> on_odd_row		890891	0					
ANR	891121	Identifier	cquantize		890891	0					
ANR	891122	Identifier	on_odd_row		890891	1					
ANR	891123	Identifier	FALSE		890891	1					
ANR	891124	IfStatement	if ( cquantize -> needs_zeroed )		890891	5					
ANR	891125	Condition	cquantize -> needs_zeroed	1719:6:55521:55543	890891	0	True				
ANR	891126	PtrMemberAccess	cquantize -> needs_zeroed		890891	0					
ANR	891127	Identifier	cquantize		890891	0					
ANR	891128	Identifier	needs_zeroed		890891	1					
ANR	891129	CompoundStatement		53:4:1789:1789	890891	1					
ANR	891130	ForStatement	for ( i = 0 ; i < HIST_C0_ELEMS ; i ++ )		890891	0					
ANR	891131	ForInit	i = 0 ;	1721:11:55563:55568	890891	0	True				
ANR	891132	AssignmentExpression	i = 0		890891	0		=			
ANR	891133	Identifier	i		890891	0					
ANR	891134	PrimaryExpression	0		890891	1					
ANR	891135	Condition	i < HIST_C0_ELEMS	1721:18:55570:55586	890891	1	True				
ANR	891136	RelationalExpression	i < HIST_C0_ELEMS		890891	0		<			
ANR	891137	Identifier	i		890891	0					
ANR	891138	Identifier	HIST_C0_ELEMS		890891	1					
ANR	891139	PostIncDecOperationExpression	i ++	1721:37:55589:55591	890891	2	True				
ANR	891140	Identifier	i		890891	0					
ANR	891141	IncDec	++		890891	1					
ANR	891142	CompoundStatement		55:1:1834:1834	890891	3					
ANR	891143	ExpressionStatement	"jzero_far ( ( void FAR * ) histogram [ i ] , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"	1723:3:55600:55695	890891	0	True				
ANR	891144	CallExpression	"jzero_far ( ( void FAR * ) histogram [ i ] , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		890891	0					
ANR	891145	Callee	jzero_far		890891	0					
ANR	891146	Identifier	jzero_far		890891	0					
ANR	891147	ArgumentList	( void FAR * ) histogram [ i ]		890891	1					
ANR	891148	Argument	( void FAR * ) histogram [ i ]		890891	0					
ANR	891149	CastExpression	( void FAR * ) histogram [ i ]		890891	0					
ANR	891150	CastTarget	void FAR *		890891	0					
ANR	891151	ArrayIndexing	histogram [ i ]		890891	1					
ANR	891152	Identifier	histogram		890891	0					
ANR	891153	Identifier	i		890891	1					
ANR	891154	Argument	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		890891	1					
ANR	891155	MultiplicativeExpression	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		890891	0		*			
ANR	891156	Identifier	HIST_C1_ELEMS		890891	0					
ANR	891157	MultiplicativeExpression	HIST_C2_ELEMS * SIZEOF ( histcell )		890891	1		*			
ANR	891158	Identifier	HIST_C2_ELEMS		890891	0					
ANR	891159	CallExpression	SIZEOF ( histcell )		890891	1					
ANR	891160	Callee	SIZEOF		890891	0					
ANR	891161	Identifier	SIZEOF		890891	0					
ANR	891162	ArgumentList	histcell		890891	1					
ANR	891163	Argument	histcell		890891	0					
ANR	891164	Identifier	histcell		890891	0					
ANR	891165	ExpressionStatement	cquantize -> needs_zeroed = FALSE	1726:6:55706:55737	890891	1	True				
ANR	891166	AssignmentExpression	cquantize -> needs_zeroed = FALSE		890891	0		=			
ANR	891167	PtrMemberAccess	cquantize -> needs_zeroed		890891	0					
ANR	891168	Identifier	cquantize		890891	0					
ANR	891169	Identifier	needs_zeroed		890891	1					
ANR	891170	Identifier	FALSE		890891	1					
ANR	891171	Identifier	start_pass_2_quant		890891	1					
ANR	891172	ParameterList	"j_decompress_ptr cinfo , boolean is_pre_scan"		890891	2					
ANR	891173	Parameter	j_decompress_ptr cinfo	1667:20:53715:53736	890891	0	True				
ANR	891174	ParameterType	j_decompress_ptr		890891	0					
ANR	891175	Identifier	cinfo		890891	1					
ANR	891176	Parameter	boolean is_pre_scan	1667:44:53739:53757	890891	1	True				
ANR	891177	ParameterType	boolean		890891	0					
ANR	891178	Identifier	is_pre_scan		890891	1					
ANR	891179	CFGEntryNode	ENTRY		890891		True				
ANR	891180	CFGExitNode	EXIT		890891		True				
ANR	891181	Symbol	JDITHER_FS		890891						
ANR	891182	Symbol	JDITHER_NONE		890891						
ANR	891183	Symbol	is_pre_scan		890891						
ANR	891184	Symbol	* cquantize		890891						
ANR	891185	Symbol	cquantize -> histogram		890891						
ANR	891186	Symbol	JERR_QUANT_MANY_COLORS		890891						
ANR	891187	Symbol	cquantize -> fserrors		890891						
ANR	891188	Symbol	cinfo -> mem -> alloc_large		890891						
ANR	891189	Symbol	* cinfo		890891						
ANR	891190	Symbol	NULL		890891						
ANR	891191	Symbol	TRUE		890891						
ANR	891192	Symbol	HIST_C2_ELEMS		890891						
ANR	891193	Symbol	histogram		890891						
ANR	891194	Symbol	cinfo -> dither_mode		890891						
ANR	891195	Symbol	FSERROR		890891						
ANR	891196	Symbol	cinfo -> actual_number_of_colors		890891						
ANR	891197	Symbol	histcell		890891						
ANR	891198	Symbol	cquantize -> pub . finish_pass		890891						
ANR	891199	Symbol	cinfo		890891						
ANR	891200	Symbol	* * * cinfo		890891						
ANR	891201	Symbol	pass2_fs_dither		890891						
ANR	891202	Symbol	* * cinfo		890891						
ANR	891203	Symbol	HIST_C1_ELEMS		890891						
ANR	891204	Symbol	cquantize -> pub		890891						
ANR	891205	Symbol	* cinfo -> mem -> alloc_large		890891						
ANR	891206	Symbol	arraysize		890891						
ANR	891207	Symbol	cquantize -> needs_zeroed		890891						
ANR	891208	Symbol	SIZEOF		890891						
ANR	891209	Symbol	cquantize -> error_limiter		890891						
ANR	891210	Symbol	cquantize		890891						
ANR	891211	Symbol	finish_pass2		890891						
ANR	891212	Symbol	finish_pass1		890891						
ANR	891213	Symbol	cinfo -> output_width		890891						
ANR	891214	Symbol	* cinfo -> mem		890891						
ANR	891215	Symbol	cinfo -> mem		890891						
ANR	891216	Symbol	JERR_QUANT_FEW_COLORS		890891						
ANR	891217	Symbol	pass2_no_dither		890891						
ANR	891218	Symbol	* * cinfo -> mem		890891						
ANR	891219	Symbol	HIST_C0_ELEMS		890891						
ANR	891220	Symbol	i		890891						
ANR	891221	Symbol	prescan_quantize		890891						
ANR	891222	Symbol	* histogram		890891						
ANR	891223	Symbol	JPOOL_IMAGE		890891						
ANR	891224	Symbol	cinfo -> cquantize		890891						
ANR	891225	Symbol	cquantize -> pub . color_quantize		890891						
ANR	891226	Symbol	* i		890891						
ANR	891227	Symbol	cquantize -> on_odd_row		890891						
ANR	891228	Symbol	FALSE		890891						
ANR	891229	Symbol	MAXNUMCOLORS		890891						
ANR	891230	Function	new_color_map_2_quant	1736:0:55834:56022							
ANR	891231	FunctionDef	new_color_map_2_quant (j_decompress_ptr cinfo)		891230	0					
ANR	891232	CompoundStatement		1737:0:55881:56022	891230	0					
ANR	891233	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1738:2:55885:55949	891230	0	True				
ANR	891234	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		891230	0					
ANR	891235	IdentifierDeclType	my_cquantize_ptr		891230	0					
ANR	891236	Identifier	cquantize		891230	1					
ANR	891237	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		891230	2		=			
ANR	891238	Identifier	cquantize		891230	0					
ANR	891239	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		891230	1					
ANR	891240	CastTarget	my_cquantize_ptr		891230	0					
ANR	891241	PtrMemberAccess	cinfo -> cquantize		891230	1					
ANR	891242	Identifier	cinfo		891230	0					
ANR	891243	Identifier	cquantize		891230	1					
ANR	891244	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1741:2:55990:56020	891230	1	True				
ANR	891245	AssignmentExpression	cquantize -> needs_zeroed = TRUE		891230	0		=			
ANR	891246	PtrMemberAccess	cquantize -> needs_zeroed		891230	0					
ANR	891247	Identifier	cquantize		891230	0					
ANR	891248	Identifier	needs_zeroed		891230	1					
ANR	891249	Identifier	TRUE		891230	1					
ANR	891250	Identifier	new_color_map_2_quant		891230	1					
ANR	891251	ParameterList	j_decompress_ptr cinfo		891230	2					
ANR	891252	Parameter	j_decompress_ptr cinfo	1736:23:55857:55878	891230	0	True				
ANR	891253	ParameterType	j_decompress_ptr		891230	0					
ANR	891254	Identifier	cinfo		891230	1					
ANR	891255	CFGEntryNode	ENTRY		891230		True				
ANR	891256	CFGExitNode	EXIT		891230		True				
ANR	891257	Symbol	cinfo -> cquantize		891230						
ANR	891258	Symbol	cinfo		891230						
ANR	891259	Symbol	cquantize -> needs_zeroed		891230						
ANR	891260	Symbol	TRUE		891230						
ANR	891261	Symbol	cquantize		891230						
ANR	891262	Symbol	* cquantize		891230						
ANR	891263	Symbol	* cinfo		891230						
ANR	891264	Function	zeroHistogram	1744:0:56030:56274							
ANR	891265	FunctionDef	zeroHistogram (hist3d histogram)		891264	0					
ANR	891266	CompoundStatement		1746:0:56075:56274	891264	0					
ANR	891267	IdentifierDeclStatement	int i ;	1747:2:56079:56084	891264	0	True				
ANR	891268	IdentifierDecl	i		891264	0					
ANR	891269	IdentifierDeclType	int		891264	0					
ANR	891270	Identifier	i		891264	1					
ANR	891271	ForStatement	for ( i = 0 ; i < HIST_C0_ELEMS ; i ++ )		891264	1					
ANR	891272	ForInit	i = 0 ;	1749:7:56141:56146	891264	0	True				
ANR	891273	AssignmentExpression	i = 0		891264	0		=			
ANR	891274	Identifier	i		891264	0					
ANR	891275	PrimaryExpression	0		891264	1					
ANR	891276	Condition	i < HIST_C0_ELEMS	1749:14:56148:56164	891264	1	True				
ANR	891277	RelationalExpression	i < HIST_C0_ELEMS		891264	0		<			
ANR	891278	Identifier	i		891264	0					
ANR	891279	Identifier	HIST_C0_ELEMS		891264	1					
ANR	891280	PostIncDecOperationExpression	i ++	1749:33:56167:56169	891264	2	True				
ANR	891281	Identifier	i		891264	0					
ANR	891282	IncDec	++		891264	1					
ANR	891283	CompoundStatement		5:4:100:100	891264	3					
ANR	891284	ExpressionStatement	"memset ( histogram [ i ] , 0 , HIST_C1_ELEMS * HIST_C2_ELEMS * sizeof ( histcell ) )"	1751:6:56184:56266	891264	0	True				
ANR	891285	CallExpression	"memset ( histogram [ i ] , 0 , HIST_C1_ELEMS * HIST_C2_ELEMS * sizeof ( histcell ) )"		891264	0					
ANR	891286	Callee	memset		891264	0					
ANR	891287	Identifier	memset		891264	0					
ANR	891288	ArgumentList	histogram [ i ]		891264	1					
ANR	891289	Argument	histogram [ i ]		891264	0					
ANR	891290	ArrayIndexing	histogram [ i ]		891264	0					
ANR	891291	Identifier	histogram		891264	0					
ANR	891292	Identifier	i		891264	1					
ANR	891293	Argument	0		891264	1					
ANR	891294	PrimaryExpression	0		891264	0					
ANR	891295	Argument	HIST_C1_ELEMS * HIST_C2_ELEMS * sizeof ( histcell )		891264	2					
ANR	891296	MultiplicativeExpression	HIST_C1_ELEMS * HIST_C2_ELEMS * sizeof ( histcell )		891264	0		*			
ANR	891297	Identifier	HIST_C1_ELEMS		891264	0					
ANR	891298	MultiplicativeExpression	HIST_C2_ELEMS * sizeof ( histcell )		891264	1		*			
ANR	891299	Identifier	HIST_C2_ELEMS		891264	0					
ANR	891300	SizeofExpression	sizeof ( histcell )		891264	1					
ANR	891301	Sizeof	sizeof		891264	0					
ANR	891302	SizeofOperand	histcell		891264	1					
ANR	891303	ReturnType	static void		891264	1					
ANR	891304	Identifier	zeroHistogram		891264	2					
ANR	891305	ParameterList	hist3d histogram		891264	3					
ANR	891306	Parameter	hist3d histogram	1745:15:56057:56072	891264	0	True				
ANR	891307	ParameterType	hist3d		891264	0					
ANR	891308	Identifier	histogram		891264	1					
ANR	891309	CFGEntryNode	ENTRY		891264		True				
ANR	891310	CFGExitNode	EXIT		891264		True				
ANR	891311	Symbol	histogram		891264						
ANR	891312	Symbol	HIST_C1_ELEMS		891264						
ANR	891313	Symbol	HIST_C0_ELEMS		891264						
ANR	891314	Symbol	* i		891264						
ANR	891315	Symbol	i		891264						
ANR	891316	Symbol	* histogram		891264						
ANR	891317	Symbol	HIST_C2_ELEMS		891264						
ANR	891318	DeclStmt									
ANR	891319	Decl							void	"void ( gdImagePtr oim , int dither , int colorsWanted , gdImagePtr * cimP )"	gdImageTrueColorToPaletteBody
ANR	891320	Function	gdImageCreatePaletteFromTrueColor	1759:0:56393:56580							
ANR	891321	FunctionDef	"gdImageCreatePaletteFromTrueColor (gdImagePtr im , int dither , int colorsWanted)"		891320	0					
ANR	891322	CompoundStatement		1760:0:56484:56580	891320	0					
ANR	891323	IdentifierDeclStatement	gdImagePtr nim ;	1761:1:56487:56501	891320	0	True				
ANR	891324	IdentifierDecl	nim		891320	0					
ANR	891325	IdentifierDeclType	gdImagePtr		891320	0					
ANR	891326	Identifier	nim		891320	1					
ANR	891327	ExpressionStatement	"gdImageTrueColorToPaletteBody ( im , dither , colorsWanted , & nim )"	1762:1:56504:56565	891320	1	True				
ANR	891328	CallExpression	"gdImageTrueColorToPaletteBody ( im , dither , colorsWanted , & nim )"		891320	0					
ANR	891329	Callee	gdImageTrueColorToPaletteBody		891320	0					
ANR	891330	Identifier	gdImageTrueColorToPaletteBody		891320	0					
ANR	891331	ArgumentList	im		891320	1					
ANR	891332	Argument	im		891320	0					
ANR	891333	Identifier	im		891320	0					
ANR	891334	Argument	dither		891320	1					
ANR	891335	Identifier	dither		891320	0					
ANR	891336	Argument	colorsWanted		891320	2					
ANR	891337	Identifier	colorsWanted		891320	0					
ANR	891338	Argument	& nim		891320	3					
ANR	891339	UnaryOperationExpression	& nim		891320	0					
ANR	891340	UnaryOperator	&		891320	0					
ANR	891341	Identifier	nim		891320	1					
ANR	891342	ReturnStatement	return nim ;	1763:1:56568:56578	891320	2	True				
ANR	891343	Identifier	nim		891320	0					
ANR	891344	ReturnType	gdImagePtr		891320	1					
ANR	891345	Identifier	gdImageCreatePaletteFromTrueColor		891320	2					
ANR	891346	ParameterList	"gdImagePtr im , int dither , int colorsWanted"		891320	3					
ANR	891347	Parameter	gdImagePtr im	1759:46:56439:56451	891320	0	True				
ANR	891348	ParameterType	gdImagePtr		891320	0					
ANR	891349	Identifier	im		891320	1					
ANR	891350	Parameter	int dither	1759:61:56454:56463	891320	1	True				
ANR	891351	ParameterType	int		891320	0					
ANR	891352	Identifier	dither		891320	1					
ANR	891353	Parameter	int colorsWanted	1759:73:56466:56481	891320	2	True				
ANR	891354	ParameterType	int		891320	0					
ANR	891355	Identifier	colorsWanted		891320	1					
ANR	891356	CFGEntryNode	ENTRY		891320		True				
ANR	891357	CFGExitNode	EXIT		891320		True				
ANR	891358	Symbol	nim		891320						
ANR	891359	Symbol	im		891320						
ANR	891360	Symbol	dither		891320						
ANR	891361	Symbol	colorsWanted		891320						
ANR	891362	Symbol	& nim		891320						
ANR	891363	Function	gdImageTrueColorToPalette	1766:0:56583:56723							
ANR	891364	FunctionDef	"gdImageTrueColorToPalette (gdImagePtr im , int dither , int colorsWanted)"		891363	0					
ANR	891365	CompoundStatement		1767:0:56660:56723	891363	0					
ANR	891366	ExpressionStatement	"gdImageTrueColorToPaletteBody ( im , dither , colorsWanted , 0 )"	1768:1:56663:56721	891363	0	True				
ANR	891367	CallExpression	"gdImageTrueColorToPaletteBody ( im , dither , colorsWanted , 0 )"		891363	0					
ANR	891368	Callee	gdImageTrueColorToPaletteBody		891363	0					
ANR	891369	Identifier	gdImageTrueColorToPaletteBody		891363	0					
ANR	891370	ArgumentList	im		891363	1					
ANR	891371	Argument	im		891363	0					
ANR	891372	Identifier	im		891363	0					
ANR	891373	Argument	dither		891363	1					
ANR	891374	Identifier	dither		891363	0					
ANR	891375	Argument	colorsWanted		891363	2					
ANR	891376	Identifier	colorsWanted		891363	0					
ANR	891377	Argument	0		891363	3					
ANR	891378	PrimaryExpression	0		891363	0					
ANR	891379	ReturnType	void		891363	1					
ANR	891380	Identifier	gdImageTrueColorToPalette		891363	2					
ANR	891381	ParameterList	"gdImagePtr im , int dither , int colorsWanted"		891363	3					
ANR	891382	Parameter	gdImagePtr im	1766:32:56615:56627	891363	0	True				
ANR	891383	ParameterType	gdImagePtr		891363	0					
ANR	891384	Identifier	im		891363	1					
ANR	891385	Parameter	int dither	1766:47:56630:56639	891363	1	True				
ANR	891386	ParameterType	int		891363	0					
ANR	891387	Identifier	dither		891363	1					
ANR	891388	Parameter	int colorsWanted	1766:59:56642:56657	891363	2	True				
ANR	891389	ParameterType	int		891363	0					
ANR	891390	Identifier	colorsWanted		891363	1					
ANR	891391	CFGEntryNode	ENTRY		891363		True				
ANR	891392	CFGExitNode	EXIT		891363		True				
ANR	891393	Symbol	im		891363						
ANR	891394	Symbol	dither		891363						
ANR	891395	Symbol	colorsWanted		891363						
ANR	891396	DeclStmt									
ANR	891397	Decl							my_cquantize_ptr	my_cquantize_ptr	cquantize
ANR	891398	DeclStmt									
ANR	891399	Decl							int	int	i
ANR	891400	DeclStmt									
ANR	891401	Decl							size_t	size_t	arraysize
ANR	891402	DeclStmt									
ANR	891403	Decl							int	int	maxColors
ANR	891404	DeclStmt									
ANR	891405	Decl							gdImagePtr	gdImagePtr	nim
ANR	891406	DeclStmt									
ANR	891407	Decl							int	int	desired
ANR	891408	DeclStmt									
ANR	891409	Decl							int	int	mt
ANR	891410	DeclStmt									
ANR	891411	Decl							int	int	mtIndex
ANR	891412	DeclStmt									
ANR	891413	Decl							int	int	mo
ANR	891414	DeclStmt									
ANR	891415	Decl							int	int	moIndex
