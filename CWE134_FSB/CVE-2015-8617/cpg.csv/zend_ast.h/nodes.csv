command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3902810	File	data/converged/CVE-2015-8617_php-src/zend_ast.h								
ANR	3902811	ClassDef	_zend_ast_kind	32:0:1484:3839							
ANR	3902812	DeclStmt									
ANR	3902813	Decl							uint16_t	uint16_t	zend_ast_kind
ANR	3902814	DeclStmt									
ANR	3902815	Decl							uint16_t	uint16_t	zend_ast_attr
ANR	3902816	ClassDef	_zend_ast	154:0:3908:4178							
ANR	3902817	DeclStmt									
ANR	3902818	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	3902819	DeclStmt									
ANR	3902820	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	3902821	DeclStmt									
ANR	3902822	Decl							uint32_t	uint32_t	lineno
ANR	3902823	DeclStmt									
ANR	3902824	Decl							zend_ast	zend_ast * [ 1 ]	child
ANR	3902825	ClassDef	_zend_ast_list	162:8:4268:4408							
ANR	3902826	DeclStmt									
ANR	3902827	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	3902828	DeclStmt									
ANR	3902829	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	3902830	DeclStmt									
ANR	3902831	Decl							uint32_t	uint32_t	lineno
ANR	3902832	DeclStmt									
ANR	3902833	Decl							uint32_t	uint32_t	children
ANR	3902834	DeclStmt									
ANR	3902835	Decl							zend_ast	zend_ast * [ 1 ]	child
ANR	3902836	DeclStmt									
ANR	3902837	Decl							_zend_ast_list	_zend_ast_list	zend_ast_list
ANR	3902838	ClassDef	_zend_ast_zval	171:8:4459:4551							
ANR	3902839	DeclStmt									
ANR	3902840	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	3902841	DeclStmt									
ANR	3902842	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	3902843	DeclStmt									
ANR	3902844	Decl							zval	zval	val
ANR	3902845	DeclStmt									
ANR	3902846	Decl							_zend_ast_zval	_zend_ast_zval	zend_ast_zval
ANR	3902847	ClassDef	_zend_ast_decl	178:8:4655:4935							
ANR	3902848	DeclStmt									
ANR	3902849	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	3902850	DeclStmt									
ANR	3902851	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	3902852	DeclStmt									
ANR	3902853	Decl							uint32_t	uint32_t	start_lineno
ANR	3902854	DeclStmt									
ANR	3902855	Decl							uint32_t	uint32_t	end_lineno
ANR	3902856	DeclStmt									
ANR	3902857	Decl							uint32_t	uint32_t	flags
ANR	3902858	DeclStmt									
ANR	3902859	Decl							unsigned char	unsigned char *	lex_pos
ANR	3902860	DeclStmt									
ANR	3902861	Decl							zend_string	zend_string *	doc_comment
ANR	3902862	DeclStmt									
ANR	3902863	Decl							zend_string	zend_string *	name
ANR	3902864	DeclStmt									
ANR	3902865	Decl							zend_ast	zend_ast * [ 4 ]	child
ANR	3902866	DeclStmt									
ANR	3902867	Decl							_zend_ast_decl	_zend_ast_decl	zend_ast_decl
ANR	3902868	DeclStmt									
ANR	3902869	Decl							void ( * ) ( zend_ast * ast )	void ( * ) ( zend_ast * ast )	zend_ast_process_t
ANR	3902870	DeclStmt									
ANR	3902871	Decl							extern ZEND_API zend_ast_process_t	extern ZEND_API zend_ast_process_t	zend_ast_process
ANR	3902872	DeclStmt									
ANR	3902873	Decl							ZEND_API zend_ast	"ZEND_API zend_ast * ( zval * zv , zend_ast_attr attr )"	zend_ast_create_zval_ex
ANR	3902874	DeclStmt									
ANR	3902875	Decl							ZEND_API zend_ast	"ZEND_API zend_ast * ( zend_ast_kind kind , uint32_t flags , uint32_t start_lineno , zend_string * doc_comment , zend_string * name , zend_ast * child0 , zend_ast * child1 , zend_ast * child2 , zend_ast * child3 )"	zend_ast_create_decl
ANR	3902876	DeclStmt									
ANR	3902877	Decl							ZEND_API zend_ast	"ZEND_API zend_ast * ( zend_ast * list , zend_ast * op )"	zend_ast_list_add
ANR	3902878	DeclStmt									
ANR	3902879	Decl							ZEND_API int	"ZEND_API int ( zval * result , zend_ast * ast , zend_class_entry * scope )"	zend_ast_evaluate
ANR	3902880	DeclStmt									
ANR	3902881	Decl							ZEND_API zend_string	"ZEND_API zend_string * ( const char * prefix , zend_ast * ast , const char * suffix )"	zend_ast_export
ANR	3902882	DeclStmt									
ANR	3902883	Decl							ZEND_API zend_ast	ZEND_API zend_ast * ( zend_ast * ast )	zend_ast_copy
ANR	3902884	DeclStmt									
ANR	3902885	Decl							ZEND_API void	ZEND_API void ( zend_ast * ast )	zend_ast_destroy
ANR	3902886	DeclStmt									
ANR	3902887	Decl							ZEND_API void	ZEND_API void ( zend_ast * ast )	zend_ast_destroy_and_free
ANR	3902888	DeclStmt									
ANR	3902889	Decl							void ( * ) ( zend_ast * * ast_ptr )	void ( * ) ( zend_ast * * ast_ptr )	zend_ast_apply_func
ANR	3902890	DeclStmt									
ANR	3902891	Decl							ZEND_API void	"ZEND_API void ( zend_ast * ast , zend_ast_apply_func fn )"	zend_ast_apply
ANR	3902892	Function	zend_ast_is_list	216:0:6106:6227							
ANR	3902893	FunctionDef	zend_ast_is_list (zend_ast * ast)		3902892	0					
ANR	3902894	CompoundStatement		216:68:6174:6227	3902892	0					
ANR	3902895	ReturnStatement	return ( ast -> kind >> ZEND_AST_IS_LIST_SHIFT ) & 1 ;	217:1:6177:6225	3902892	0	True				
ANR	3902896	BitAndExpression	( ast -> kind >> ZEND_AST_IS_LIST_SHIFT ) & 1		3902892	0		&			
ANR	3902897	ShiftExpression	ast -> kind >> ZEND_AST_IS_LIST_SHIFT		3902892	0		>>			
ANR	3902898	PtrMemberAccess	ast -> kind		3902892	0					
ANR	3902899	Identifier	ast		3902892	0					
ANR	3902900	Identifier	kind		3902892	1					
ANR	3902901	Identifier	ZEND_AST_IS_LIST_SHIFT		3902892	1					
ANR	3902902	PrimaryExpression	1		3902892	1					
ANR	3902903	ReturnType	static zend_always_inline zend_bool		3902892	1					
ANR	3902904	Identifier	zend_ast_is_list		3902892	2					
ANR	3902905	ParameterList	zend_ast * ast		3902892	3					
ANR	3902906	Parameter	zend_ast * ast	216:53:6159:6171	3902892	0	True				
ANR	3902907	ParameterType	zend_ast *		3902892	0					
ANR	3902908	Identifier	ast		3902892	1					
ANR	3902909	CFGEntryNode	ENTRY		3902892		True				
ANR	3902910	CFGExitNode	EXIT		3902892		True				
ANR	3902911	Symbol	ast -> kind		3902892						
ANR	3902912	Symbol	ast		3902892						
ANR	3902913	Symbol	* ast		3902892						
ANR	3902914	Symbol	ZEND_AST_IS_LIST_SHIFT		3902892						
ANR	3902915	Function	zend_ast_get_list	219:0:6229:6373							
ANR	3902916	FunctionDef	zend_ast_get_list (zend_ast * ast)		3902915	0					
ANR	3902917	CompoundStatement		219:74:6303:6373	3902915	0					
ANR	3902918	ExpressionStatement	ZEND_ASSERT ( zend_ast_is_list ( ast ) )	220:1:6306:6340	3902915	0	True				
ANR	3902919	CallExpression	ZEND_ASSERT ( zend_ast_is_list ( ast ) )		3902915	0					
ANR	3902920	Callee	ZEND_ASSERT		3902915	0					
ANR	3902921	Identifier	ZEND_ASSERT		3902915	0					
ANR	3902922	ArgumentList	zend_ast_is_list ( ast )		3902915	1					
ANR	3902923	Argument	zend_ast_is_list ( ast )		3902915	0					
ANR	3902924	CallExpression	zend_ast_is_list ( ast )		3902915	0					
ANR	3902925	Callee	zend_ast_is_list		3902915	0					
ANR	3902926	Identifier	zend_ast_is_list		3902915	0					
ANR	3902927	ArgumentList	ast		3902915	1					
ANR	3902928	Argument	ast		3902915	0					
ANR	3902929	Identifier	ast		3902915	0					
ANR	3902930	ReturnStatement	return ( zend_ast_list * ) ast ;	221:1:6343:6371	3902915	1	True				
ANR	3902931	CastExpression	( zend_ast_list * ) ast		3902915	0					
ANR	3902932	CastTarget	zend_ast_list *		3902915	0					
ANR	3902933	Identifier	ast		3902915	1					
ANR	3902934	ReturnType	static zend_always_inline zend_ast_list *		3902915	1					
ANR	3902935	Identifier	zend_ast_get_list		3902915	2					
ANR	3902936	ParameterList	zend_ast * ast		3902915	3					
ANR	3902937	Parameter	zend_ast * ast	219:59:6288:6300	3902915	0	True				
ANR	3902938	ParameterType	zend_ast *		3902915	0					
ANR	3902939	Identifier	ast		3902915	1					
ANR	3902940	CFGEntryNode	ENTRY		3902915		True				
ANR	3902941	CFGExitNode	EXIT		3902915		True				
ANR	3902942	Symbol	ast		3902915						
ANR	3902943	Symbol	zend_ast_is_list		3902915						
ANR	3902944	Function	zend_ast_get_zval	224:0:6376:6524							
ANR	3902945	FunctionDef	zend_ast_get_zval (zend_ast * ast)		3902944	0					
ANR	3902946	CompoundStatement		224:65:6441:6524	3902944	0					
ANR	3902947	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_ZVAL )	225:1:6444:6483	3902944	0	True				
ANR	3902948	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_ZVAL )		3902944	0					
ANR	3902949	Callee	ZEND_ASSERT		3902944	0					
ANR	3902950	Identifier	ZEND_ASSERT		3902944	0					
ANR	3902951	ArgumentList	ast -> kind == ZEND_AST_ZVAL		3902944	1					
ANR	3902952	Argument	ast -> kind == ZEND_AST_ZVAL		3902944	0					
ANR	3902953	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3902944	0		==			
ANR	3902954	PtrMemberAccess	ast -> kind		3902944	0					
ANR	3902955	Identifier	ast		3902944	0					
ANR	3902956	Identifier	kind		3902944	1					
ANR	3902957	Identifier	ZEND_AST_ZVAL		3902944	1					
ANR	3902958	ReturnStatement	return & ( ( zend_ast_zval * ) ast ) -> val ;	226:1:6486:6522	3902944	1	True				
ANR	3902959	UnaryOperationExpression	& ( ( zend_ast_zval * ) ast ) -> val		3902944	0					
ANR	3902960	UnaryOperator	&		3902944	0					
ANR	3902961	PtrMemberAccess	( ( zend_ast_zval * ) ast ) -> val		3902944	1					
ANR	3902962	CastExpression	( zend_ast_zval * ) ast		3902944	0					
ANR	3902963	CastTarget	zend_ast_zval *		3902944	0					
ANR	3902964	Identifier	ast		3902944	1					
ANR	3902965	Identifier	val		3902944	1					
ANR	3902966	ReturnType	static zend_always_inline zval *		3902944	1					
ANR	3902967	Identifier	zend_ast_get_zval		3902944	2					
ANR	3902968	ParameterList	zend_ast * ast		3902944	3					
ANR	3902969	Parameter	zend_ast * ast	224:50:6426:6438	3902944	0	True				
ANR	3902970	ParameterType	zend_ast *		3902944	0					
ANR	3902971	Identifier	ast		3902944	1					
ANR	3902972	CFGEntryNode	ENTRY		3902944		True				
ANR	3902973	CFGExitNode	EXIT		3902944		True				
ANR	3902974	Symbol	ast -> kind		3902944						
ANR	3902975	Symbol	ast		3902944						
ANR	3902976	Symbol	* ast		3902944						
ANR	3902977	Symbol	& ( ( zend_ast_zval * ) ast ) -> val		3902944						
ANR	3902978	Symbol	ZEND_AST_ZVAL		3902944						
ANR	3902979	Function	zend_ast_get_str	228:0:6526:6697							
ANR	3902980	FunctionDef	zend_ast_get_str (zend_ast * ast)		3902979	0					
ANR	3902981	CompoundStatement		228:71:6597:6697	3902979	0					
ANR	3902982	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	229:1:6600:6633	3902979	0	True				
ANR	3902983	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		3902979	0					
ANR	3902984	IdentifierDeclType	zval *		3902979	0					
ANR	3902985	Identifier	zv		3902979	1					
ANR	3902986	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		3902979	2		=			
ANR	3902987	Identifier	zv		3902979	0					
ANR	3902988	CallExpression	zend_ast_get_zval ( ast )		3902979	1					
ANR	3902989	Callee	zend_ast_get_zval		3902979	0					
ANR	3902990	Identifier	zend_ast_get_zval		3902979	0					
ANR	3902991	ArgumentList	ast		3902979	1					
ANR	3902992	Argument	ast		3902979	0					
ANR	3902993	Identifier	ast		3902979	0					
ANR	3902994	ExpressionStatement	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )	230:1:6636:6674	3902979	1	True				
ANR	3902995	CallExpression	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )		3902979	0					
ANR	3902996	Callee	ZEND_ASSERT		3902979	0					
ANR	3902997	Identifier	ZEND_ASSERT		3902979	0					
ANR	3902998	ArgumentList	Z_TYPE_P ( zv ) == IS_STRING		3902979	1					
ANR	3902999	Argument	Z_TYPE_P ( zv ) == IS_STRING		3902979	0					
ANR	3903000	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		3902979	0		==			
ANR	3903001	CallExpression	Z_TYPE_P ( zv )		3902979	0					
ANR	3903002	Callee	Z_TYPE_P		3902979	0					
ANR	3903003	Identifier	Z_TYPE_P		3902979	0					
ANR	3903004	ArgumentList	zv		3902979	1					
ANR	3903005	Argument	zv		3902979	0					
ANR	3903006	Identifier	zv		3902979	0					
ANR	3903007	Identifier	IS_STRING		3902979	1					
ANR	3903008	ReturnStatement	return Z_STR_P ( zv ) ;	231:1:6677:6695	3902979	2	True				
ANR	3903009	CallExpression	Z_STR_P ( zv )		3902979	0					
ANR	3903010	Callee	Z_STR_P		3902979	0					
ANR	3903011	Identifier	Z_STR_P		3902979	0					
ANR	3903012	ArgumentList	zv		3902979	1					
ANR	3903013	Argument	zv		3902979	0					
ANR	3903014	Identifier	zv		3902979	0					
ANR	3903015	ReturnType	static zend_always_inline zend_string *		3902979	1					
ANR	3903016	Identifier	zend_ast_get_str		3902979	2					
ANR	3903017	ParameterList	zend_ast * ast		3902979	3					
ANR	3903018	Parameter	zend_ast * ast	228:56:6582:6594	3902979	0	True				
ANR	3903019	ParameterType	zend_ast *		3902979	0					
ANR	3903020	Identifier	ast		3902979	1					
ANR	3903021	CFGEntryNode	ENTRY		3902979		True				
ANR	3903022	CFGExitNode	EXIT		3902979		True				
ANR	3903023	Symbol	ast		3902979						
ANR	3903024	Symbol	IS_STRING		3902979						
ANR	3903025	Symbol	Z_STR_P		3902979						
ANR	3903026	Symbol	zv		3902979						
ANR	3903027	Symbol	zend_ast_get_zval		3902979						
ANR	3903028	Symbol	Z_TYPE_P		3902979						
ANR	3903029	Function	zend_ast_get_num_children	234:0:6700:6866							
ANR	3903030	FunctionDef	zend_ast_get_num_children (zend_ast * ast)		3903029	0					
ANR	3903031	CompoundStatement		234:76:6776:6866	3903029	0					
ANR	3903032	ExpressionStatement	ZEND_ASSERT ( ! zend_ast_is_list ( ast ) )	235:1:6779:6814	3903029	0	True				
ANR	3903033	CallExpression	ZEND_ASSERT ( ! zend_ast_is_list ( ast ) )		3903029	0					
ANR	3903034	Callee	ZEND_ASSERT		3903029	0					
ANR	3903035	Identifier	ZEND_ASSERT		3903029	0					
ANR	3903036	ArgumentList	! zend_ast_is_list ( ast )		3903029	1					
ANR	3903037	Argument	! zend_ast_is_list ( ast )		3903029	0					
ANR	3903038	UnaryOperationExpression	! zend_ast_is_list ( ast )		3903029	0					
ANR	3903039	UnaryOperator	!		3903029	0					
ANR	3903040	CallExpression	zend_ast_is_list ( ast )		3903029	1					
ANR	3903041	Callee	zend_ast_is_list		3903029	0					
ANR	3903042	Identifier	zend_ast_is_list		3903029	0					
ANR	3903043	ArgumentList	ast		3903029	1					
ANR	3903044	Argument	ast		3903029	0					
ANR	3903045	Identifier	ast		3903029	0					
ANR	3903046	ReturnStatement	return ast -> kind >> ZEND_AST_NUM_CHILDREN_SHIFT ;	236:1:6817:6864	3903029	1	True				
ANR	3903047	ShiftExpression	ast -> kind >> ZEND_AST_NUM_CHILDREN_SHIFT		3903029	0		>>			
ANR	3903048	PtrMemberAccess	ast -> kind		3903029	0					
ANR	3903049	Identifier	ast		3903029	0					
ANR	3903050	Identifier	kind		3903029	1					
ANR	3903051	Identifier	ZEND_AST_NUM_CHILDREN_SHIFT		3903029	1					
ANR	3903052	ReturnType	static zend_always_inline uint32_t		3903029	1					
ANR	3903053	Identifier	zend_ast_get_num_children		3903029	2					
ANR	3903054	ParameterList	zend_ast * ast		3903029	3					
ANR	3903055	Parameter	zend_ast * ast	234:61:6761:6773	3903029	0	True				
ANR	3903056	ParameterType	zend_ast *		3903029	0					
ANR	3903057	Identifier	ast		3903029	1					
ANR	3903058	CFGEntryNode	ENTRY		3903029		True				
ANR	3903059	CFGExitNode	EXIT		3903029		True				
ANR	3903060	Symbol	ast -> kind		3903029						
ANR	3903061	Symbol	ast		3903029						
ANR	3903062	Symbol	* ast		3903029						
ANR	3903063	Symbol	zend_ast_is_list		3903029						
ANR	3903064	Symbol	ZEND_AST_NUM_CHILDREN_SHIFT		3903029						
ANR	3903065	Function	zend_ast_get_lineno	238:0:6868:7071							
ANR	3903066	FunctionDef	zend_ast_get_lineno (zend_ast * ast)		3903065	0					
ANR	3903067	CompoundStatement		238:70:6938:7071	3903065	0					
ANR	3903068	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		3903065	0					
ANR	3903069	Condition	ast -> kind == ZEND_AST_ZVAL	239:5:6945:6970	3903065	0	True				
ANR	3903070	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3903065	0		==			
ANR	3903071	PtrMemberAccess	ast -> kind		3903065	0					
ANR	3903072	Identifier	ast		3903065	0					
ANR	3903073	Identifier	kind		3903065	1					
ANR	3903074	Identifier	ZEND_AST_ZVAL		3903065	1					
ANR	3903075	CompoundStatement		3:2:38:71	3903065	1					
ANR	3903076	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	240:2:6977:7010	3903065	0	True				
ANR	3903077	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		3903065	0					
ANR	3903078	IdentifierDeclType	zval *		3903065	0					
ANR	3903079	Identifier	zv		3903065	1					
ANR	3903080	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		3903065	2		=			
ANR	3903081	Identifier	zv		3903065	0					
ANR	3903082	CallExpression	zend_ast_get_zval ( ast )		3903065	1					
ANR	3903083	Callee	zend_ast_get_zval		3903065	0					
ANR	3903084	Identifier	zend_ast_get_zval		3903065	0					
ANR	3903085	ArgumentList	ast		3903065	1					
ANR	3903086	Argument	ast		3903065	0					
ANR	3903087	Identifier	ast		3903065	0					
ANR	3903088	ReturnStatement	return zv -> u2 . lineno ;	241:2:7014:7034	3903065	1	True				
ANR	3903089	MemberAccess	zv -> u2 . lineno		3903065	0					
ANR	3903090	PtrMemberAccess	zv -> u2		3903065	0					
ANR	3903091	Identifier	zv		3903065	0					
ANR	3903092	Identifier	u2		3903065	1					
ANR	3903093	Identifier	lineno		3903065	1					
ANR	3903094	ElseStatement	else		3903065	0					
ANR	3903095	CompoundStatement		5:8:105:105	3903065	0					
ANR	3903096	ReturnStatement	return ast -> lineno ;	243:2:7048:7066	3903065	0	True				
ANR	3903097	PtrMemberAccess	ast -> lineno		3903065	0					
ANR	3903098	Identifier	ast		3903065	0					
ANR	3903099	Identifier	lineno		3903065	1					
ANR	3903100	ReturnType	static zend_always_inline uint32_t		3903065	1					
ANR	3903101	Identifier	zend_ast_get_lineno		3903065	2					
ANR	3903102	ParameterList	zend_ast * ast		3903065	3					
ANR	3903103	Parameter	zend_ast * ast	238:55:6923:6935	3903065	0	True				
ANR	3903104	ParameterType	zend_ast *		3903065	0					
ANR	3903105	Identifier	ast		3903065	1					
ANR	3903106	CFGEntryNode	ENTRY		3903065		True				
ANR	3903107	CFGExitNode	EXIT		3903065		True				
ANR	3903108	Symbol	* zv		3903065						
ANR	3903109	Symbol	ast -> kind		3903065						
ANR	3903110	Symbol	ast		3903065						
ANR	3903111	Symbol	* ast		3903065						
ANR	3903112	Symbol	zv -> u2 . lineno		3903065						
ANR	3903113	Symbol	ast -> lineno		3903065						
ANR	3903114	Symbol	ZEND_AST_ZVAL		3903065						
ANR	3903115	Symbol	zv -> u2		3903065						
ANR	3903116	Symbol	zend_ast_get_zval		3903065						
ANR	3903117	Symbol	zv		3903065						
ANR	3903118	Function	zend_ast_create_zval	247:0:7074:7183							
ANR	3903119	FunctionDef	zend_ast_create_zval (zval * zv)		3903118	0					
ANR	3903120	CompoundStatement		247:67:7141:7183	3903118	0					
ANR	3903121	ReturnStatement	"return zend_ast_create_zval_ex ( zv , 0 ) ;"	248:1:7144:7181	3903118	0	True				
ANR	3903122	CallExpression	"zend_ast_create_zval_ex ( zv , 0 )"		3903118	0					
ANR	3903123	Callee	zend_ast_create_zval_ex		3903118	0					
ANR	3903124	Identifier	zend_ast_create_zval_ex		3903118	0					
ANR	3903125	ArgumentList	zv		3903118	1					
ANR	3903126	Argument	zv		3903118	0					
ANR	3903127	Identifier	zv		3903118	0					
ANR	3903128	Argument	0		3903118	1					
ANR	3903129	PrimaryExpression	0		3903118	0					
ANR	3903130	ReturnType	static zend_always_inline zend_ast *		3903118	1					
ANR	3903131	Identifier	zend_ast_create_zval		3903118	2					
ANR	3903132	ParameterList	zval * zv		3903118	3					
ANR	3903133	Parameter	zval * zv	247:57:7131:7138	3903118	0	True				
ANR	3903134	ParameterType	zval *		3903118	0					
ANR	3903135	Identifier	zv		3903118	1					
ANR	3903136	CFGEntryNode	ENTRY		3903118		True				
ANR	3903137	CFGExitNode	EXIT		3903118		True				
ANR	3903138	Symbol	zend_ast_create_zval_ex		3903118						
ANR	3903139	Symbol	zv		3903118						
ANR	3903140	Function	zend_ast_create_zval_from_str	250:0:7185:7337							
ANR	3903141	FunctionDef	zend_ast_create_zval_from_str (zend_string * str)		3903140	0					
ANR	3903142	CompoundStatement		250:84:7269:7337	3903140	0					
ANR	3903143	IdentifierDeclStatement	zval zv ;	251:1:7272:7279	3903140	0	True				
ANR	3903144	IdentifierDecl	zv		3903140	0					
ANR	3903145	IdentifierDeclType	zval		3903140	0					
ANR	3903146	Identifier	zv		3903140	1					
ANR	3903147	ExpressionStatement	"ZVAL_STR ( & zv , str )"	252:1:7282:7300	3903140	1	True				
ANR	3903148	CallExpression	"ZVAL_STR ( & zv , str )"		3903140	0					
ANR	3903149	Callee	ZVAL_STR		3903140	0					
ANR	3903150	Identifier	ZVAL_STR		3903140	0					
ANR	3903151	ArgumentList	& zv		3903140	1					
ANR	3903152	Argument	& zv		3903140	0					
ANR	3903153	UnaryOperationExpression	& zv		3903140	0					
ANR	3903154	UnaryOperator	&		3903140	0					
ANR	3903155	Identifier	zv		3903140	1					
ANR	3903156	Argument	str		3903140	1					
ANR	3903157	Identifier	str		3903140	0					
ANR	3903158	ReturnStatement	return zend_ast_create_zval ( & zv ) ;	253:1:7303:7335	3903140	2	True				
ANR	3903159	CallExpression	zend_ast_create_zval ( & zv )		3903140	0					
ANR	3903160	Callee	zend_ast_create_zval		3903140	0					
ANR	3903161	Identifier	zend_ast_create_zval		3903140	0					
ANR	3903162	ArgumentList	& zv		3903140	1					
ANR	3903163	Argument	& zv		3903140	0					
ANR	3903164	UnaryOperationExpression	& zv		3903140	0					
ANR	3903165	UnaryOperator	&		3903140	0					
ANR	3903166	Identifier	zv		3903140	1					
ANR	3903167	ReturnType	static zend_always_inline zend_ast *		3903140	1					
ANR	3903168	Identifier	zend_ast_create_zval_from_str		3903140	2					
ANR	3903169	ParameterList	zend_string * str		3903140	3					
ANR	3903170	Parameter	zend_string * str	250:66:7251:7266	3903140	0	True				
ANR	3903171	ParameterType	zend_string *		3903140	0					
ANR	3903172	Identifier	str		3903140	1					
ANR	3903173	CFGEntryNode	ENTRY		3903140		True				
ANR	3903174	CFGExitNode	EXIT		3903140		True				
ANR	3903175	Symbol	str		3903140						
ANR	3903176	Symbol	zend_ast_create_zval		3903140						
ANR	3903177	Symbol	& zv		3903140						
ANR	3903178	Symbol	zv		3903140						
ANR	3903179	Function	zend_ast_create_zval_from_long	255:0:7339:7492							
ANR	3903180	FunctionDef	zend_ast_create_zval_from_long (zend_long lval)		3903179	0					
ANR	3903181	CompoundStatement		255:83:7422:7492	3903179	0					
ANR	3903182	IdentifierDeclStatement	zval zv ;	256:1:7425:7432	3903179	0	True				
ANR	3903183	IdentifierDecl	zv		3903179	0					
ANR	3903184	IdentifierDeclType	zval		3903179	0					
ANR	3903185	Identifier	zv		3903179	1					
ANR	3903186	ExpressionStatement	"ZVAL_LONG ( & zv , lval )"	257:1:7435:7455	3903179	1	True				
ANR	3903187	CallExpression	"ZVAL_LONG ( & zv , lval )"		3903179	0					
ANR	3903188	Callee	ZVAL_LONG		3903179	0					
ANR	3903189	Identifier	ZVAL_LONG		3903179	0					
ANR	3903190	ArgumentList	& zv		3903179	1					
ANR	3903191	Argument	& zv		3903179	0					
ANR	3903192	UnaryOperationExpression	& zv		3903179	0					
ANR	3903193	UnaryOperator	&		3903179	0					
ANR	3903194	Identifier	zv		3903179	1					
ANR	3903195	Argument	lval		3903179	1					
ANR	3903196	Identifier	lval		3903179	0					
ANR	3903197	ReturnStatement	return zend_ast_create_zval ( & zv ) ;	258:1:7458:7490	3903179	2	True				
ANR	3903198	CallExpression	zend_ast_create_zval ( & zv )		3903179	0					
ANR	3903199	Callee	zend_ast_create_zval		3903179	0					
ANR	3903200	Identifier	zend_ast_create_zval		3903179	0					
ANR	3903201	ArgumentList	& zv		3903179	1					
ANR	3903202	Argument	& zv		3903179	0					
ANR	3903203	UnaryOperationExpression	& zv		3903179	0					
ANR	3903204	UnaryOperator	&		3903179	0					
ANR	3903205	Identifier	zv		3903179	1					
ANR	3903206	ReturnType	static zend_always_inline zend_ast *		3903179	1					
ANR	3903207	Identifier	zend_ast_create_zval_from_long		3903179	2					
ANR	3903208	ParameterList	zend_long lval		3903179	3					
ANR	3903209	Parameter	zend_long lval	255:67:7406:7419	3903179	0	True				
ANR	3903210	ParameterType	zend_long		3903179	0					
ANR	3903211	Identifier	lval		3903179	1					
ANR	3903212	CFGEntryNode	ENTRY		3903179		True				
ANR	3903213	CFGExitNode	EXIT		3903179		True				
ANR	3903214	Symbol	zend_ast_create_zval		3903179						
ANR	3903215	Symbol	lval		3903179						
ANR	3903216	Symbol	& zv		3903179						
ANR	3903217	Symbol	zv		3903179						
ANR	3903218	Function	zend_ast_create_binary_op	261:0:7495:7672							
ANR	3903219	FunctionDef	"zend_ast_create_binary_op (uint32_t opcode , zend_ast * op0 , zend_ast * op1)"		3903218	0					
ANR	3903220	CompoundStatement		261:109:7604:7672	3903218	0					
ANR	3903221	ReturnStatement	"return zend_ast_create_ex ( ZEND_AST_BINARY_OP , opcode , op0 , op1 ) ;"	262:1:7607:7670	3903218	0	True				
ANR	3903222	CallExpression	"zend_ast_create_ex ( ZEND_AST_BINARY_OP , opcode , op0 , op1 )"		3903218	0					
ANR	3903223	Callee	zend_ast_create_ex		3903218	0					
ANR	3903224	Identifier	zend_ast_create_ex		3903218	0					
ANR	3903225	ArgumentList	ZEND_AST_BINARY_OP		3903218	1					
ANR	3903226	Argument	ZEND_AST_BINARY_OP		3903218	0					
ANR	3903227	Identifier	ZEND_AST_BINARY_OP		3903218	0					
ANR	3903228	Argument	opcode		3903218	1					
ANR	3903229	Identifier	opcode		3903218	0					
ANR	3903230	Argument	op0		3903218	2					
ANR	3903231	Identifier	op0		3903218	0					
ANR	3903232	Argument	op1		3903218	3					
ANR	3903233	Identifier	op1		3903218	0					
ANR	3903234	ReturnType	static zend_always_inline zend_ast *		3903218	1					
ANR	3903235	Identifier	zend_ast_create_binary_op		3903218	2					
ANR	3903236	ParameterList	"uint32_t opcode , zend_ast * op0 , zend_ast * op1"		3903218	3					
ANR	3903237	Parameter	uint32_t opcode	261:62:7557:7571	3903218	0	True				
ANR	3903238	ParameterType	uint32_t		3903218	0					
ANR	3903239	Identifier	opcode		3903218	1					
ANR	3903240	Parameter	zend_ast * op0	261:79:7574:7586	3903218	1	True				
ANR	3903241	ParameterType	zend_ast *		3903218	0					
ANR	3903242	Identifier	op0		3903218	1					
ANR	3903243	Parameter	zend_ast * op1	261:94:7589:7601	3903218	2	True				
ANR	3903244	ParameterType	zend_ast *		3903218	0					
ANR	3903245	Identifier	op1		3903218	1					
ANR	3903246	CFGEntryNode	ENTRY		3903218		True				
ANR	3903247	CFGExitNode	EXIT		3903218		True				
ANR	3903248	Symbol	op1		3903218						
ANR	3903249	Symbol	zend_ast_create_ex		3903218						
ANR	3903250	Symbol	opcode		3903218						
ANR	3903251	Symbol	op0		3903218						
ANR	3903252	Symbol	ZEND_AST_BINARY_OP		3903218						
ANR	3903253	Function	zend_ast_create_assign_op	264:0:7674:7851							
ANR	3903254	FunctionDef	"zend_ast_create_assign_op (uint32_t opcode , zend_ast * op0 , zend_ast * op1)"		3903253	0					
ANR	3903255	CompoundStatement		264:109:7783:7851	3903253	0					
ANR	3903256	ReturnStatement	"return zend_ast_create_ex ( ZEND_AST_ASSIGN_OP , opcode , op0 , op1 ) ;"	265:1:7786:7849	3903253	0	True				
ANR	3903257	CallExpression	"zend_ast_create_ex ( ZEND_AST_ASSIGN_OP , opcode , op0 , op1 )"		3903253	0					
ANR	3903258	Callee	zend_ast_create_ex		3903253	0					
ANR	3903259	Identifier	zend_ast_create_ex		3903253	0					
ANR	3903260	ArgumentList	ZEND_AST_ASSIGN_OP		3903253	1					
ANR	3903261	Argument	ZEND_AST_ASSIGN_OP		3903253	0					
ANR	3903262	Identifier	ZEND_AST_ASSIGN_OP		3903253	0					
ANR	3903263	Argument	opcode		3903253	1					
ANR	3903264	Identifier	opcode		3903253	0					
ANR	3903265	Argument	op0		3903253	2					
ANR	3903266	Identifier	op0		3903253	0					
ANR	3903267	Argument	op1		3903253	3					
ANR	3903268	Identifier	op1		3903253	0					
ANR	3903269	ReturnType	static zend_always_inline zend_ast *		3903253	1					
ANR	3903270	Identifier	zend_ast_create_assign_op		3903253	2					
ANR	3903271	ParameterList	"uint32_t opcode , zend_ast * op0 , zend_ast * op1"		3903253	3					
ANR	3903272	Parameter	uint32_t opcode	264:62:7736:7750	3903253	0	True				
ANR	3903273	ParameterType	uint32_t		3903253	0					
ANR	3903274	Identifier	opcode		3903253	1					
ANR	3903275	Parameter	zend_ast * op0	264:79:7753:7765	3903253	1	True				
ANR	3903276	ParameterType	zend_ast *		3903253	0					
ANR	3903277	Identifier	op0		3903253	1					
ANR	3903278	Parameter	zend_ast * op1	264:94:7768:7780	3903253	2	True				
ANR	3903279	ParameterType	zend_ast *		3903253	0					
ANR	3903280	Identifier	op1		3903253	1					
ANR	3903281	CFGEntryNode	ENTRY		3903253		True				
ANR	3903282	CFGExitNode	EXIT		3903253		True				
ANR	3903283	Symbol	op1		3903253						
ANR	3903284	Symbol	zend_ast_create_ex		3903253						
ANR	3903285	Symbol	opcode		3903253						
ANR	3903286	Symbol	op0		3903253						
ANR	3903287	Symbol	ZEND_AST_ASSIGN_OP		3903253						
ANR	3903288	Function	zend_ast_create_cast	267:0:7853:7996							
ANR	3903289	FunctionDef	"zend_ast_create_cast (uint32_t type , zend_ast * op0)"		3903288	0					
ANR	3903290	CompoundStatement		267:87:7940:7996	3903288	0					
ANR	3903291	ReturnStatement	"return zend_ast_create_ex ( ZEND_AST_CAST , type , op0 ) ;"	268:1:7943:7994	3903288	0	True				
ANR	3903292	CallExpression	"zend_ast_create_ex ( ZEND_AST_CAST , type , op0 )"		3903288	0					
ANR	3903293	Callee	zend_ast_create_ex		3903288	0					
ANR	3903294	Identifier	zend_ast_create_ex		3903288	0					
ANR	3903295	ArgumentList	ZEND_AST_CAST		3903288	1					
ANR	3903296	Argument	ZEND_AST_CAST		3903288	0					
ANR	3903297	Identifier	ZEND_AST_CAST		3903288	0					
ANR	3903298	Argument	type		3903288	1					
ANR	3903299	Identifier	type		3903288	0					
ANR	3903300	Argument	op0		3903288	2					
ANR	3903301	Identifier	op0		3903288	0					
ANR	3903302	ReturnType	static zend_always_inline zend_ast *		3903288	1					
ANR	3903303	Identifier	zend_ast_create_cast		3903288	2					
ANR	3903304	ParameterList	"uint32_t type , zend_ast * op0"		3903288	3					
ANR	3903305	Parameter	uint32_t type	267:57:7910:7922	3903288	0	True				
ANR	3903306	ParameterType	uint32_t		3903288	0					
ANR	3903307	Identifier	type		3903288	1					
ANR	3903308	Parameter	zend_ast * op0	267:72:7925:7937	3903288	1	True				
ANR	3903309	ParameterType	zend_ast *		3903288	0					
ANR	3903310	Identifier	op0		3903288	1					
ANR	3903311	CFGEntryNode	ENTRY		3903288		True				
ANR	3903312	CFGExitNode	EXIT		3903288		True				
ANR	3903313	Symbol	ZEND_AST_CAST		3903288						
ANR	3903314	Symbol	zend_ast_create_ex		3903288						
ANR	3903315	Symbol	type		3903288						
ANR	3903316	Symbol	op0		3903288						
