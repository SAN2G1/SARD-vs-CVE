command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1665498	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_sljit_sljitNativeTILEGX_64.c								
ANR	1665499	DeclStmt									
ANR	1665500	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NO_REGISTERS + 5 ]	reg_map
ANR	1665501	Function	sljit_get_platform_name	114:0:3796:3903							
ANR	1665502	FunctionDef	sljit_get_platform_name ()		1665501	0					
ANR	1665503	CompoundStatement		115:0:3869:3903	1665501	0					
ANR	1665504	Statement	return	116:1:3872:3877	1665501	0	True				
ANR	1665505	Statement	"""TileGX"""	116:8:3879:3886	1665501	1	True				
ANR	1665506	ExpressionStatement	SLJIT_CPUINFO	116:17:3888:3901	1665501	2	True				
ANR	1665507	Identifier	SLJIT_CPUINFO		1665501	0					
ANR	1665508	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1665501	1					
ANR	1665509	Identifier	sljit_get_platform_name		1665501	2					
ANR	1665510	ParameterList			1665501	3					
ANR	1665511	CFGEntryNode	ENTRY		1665501		True				
ANR	1665512	CFGExitNode	EXIT		1665501		True				
ANR	1665513	DeclStmt									
ANR	1665514	Decl							sljit_uw	sljit_uw	sljit_ins
ANR	1665515	ClassDef	jit_instr	122:0:3971:4150							
ANR	1665516	DeclStmt									
ANR	1665517	Decl							const struct tilegx_opcode	const struct tilegx_opcode *	opcode
ANR	1665518	DeclStmt									
ANR	1665519	Decl							tilegx_pipeline	tilegx_pipeline	pipe
ANR	1665520	DeclStmt									
ANR	1665521	Decl							unsigned long	unsigned long	input_registers
ANR	1665522	DeclStmt									
ANR	1665523	Decl							unsigned long	unsigned long	output_registers
ANR	1665524	DeclStmt									
ANR	1665525	Decl							int	int [ 4 ]	operand_value
ANR	1665526	DeclStmt									
ANR	1665527	Decl							int	int	line
ANR	1665528	DeclStmt									
ANR	1665529	Decl							SLJIT_CONST tilegx_mnemonic	SLJIT_CONST tilegx_mnemonic [ 16 ]	data_transfer_insts
ANR	1665530	Function	push_inst_debug	335:0:11645:11938							
ANR	1665531	FunctionDef	"push_inst_debug (struct sljit_compiler * compiler , sljit_ins ins , int line)"		1665530	0					
ANR	1665532	CompoundStatement		336:0:11735:11938	1665530	0					
ANR	1665533	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	337:1:11738:11807	1665530	0	True				
ANR	1665534	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665530	0					
ANR	1665535	IdentifierDeclType	sljit_ins *		1665530	0					
ANR	1665536	Identifier	ptr		1665530	1					
ANR	1665537	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665530	2		=			
ANR	1665538	Identifier	ptr		1665530	0					
ANR	1665539	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665530	1					
ANR	1665540	CastTarget	sljit_ins *		1665530	0					
ANR	1665541	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665530	1					
ANR	1665542	Callee	ensure_buf		1665530	0					
ANR	1665543	Identifier	ensure_buf		1665530	0					
ANR	1665544	ArgumentList	compiler		1665530	1					
ANR	1665545	Argument	compiler		1665530	0					
ANR	1665546	Identifier	compiler		1665530	0					
ANR	1665547	Argument	sizeof ( sljit_ins )		1665530	1					
ANR	1665548	SizeofExpression	sizeof ( sljit_ins )		1665530	0					
ANR	1665549	Sizeof	sizeof		1665530	0					
ANR	1665550	SizeofOperand	sljit_ins		1665530	1					
ANR	1665551	ExpressionStatement	FAIL_IF ( ! ptr )	338:1:11810:11823	1665530	1	True				
ANR	1665552	CallExpression	FAIL_IF ( ! ptr )		1665530	0					
ANR	1665553	Callee	FAIL_IF		1665530	0					
ANR	1665554	Identifier	FAIL_IF		1665530	0					
ANR	1665555	ArgumentList	! ptr		1665530	1					
ANR	1665556	Argument	! ptr		1665530	0					
ANR	1665557	UnaryOperationExpression	! ptr		1665530	0					
ANR	1665558	UnaryOperator	!		1665530	0					
ANR	1665559	Identifier	ptr		1665530	1					
ANR	1665560	ExpressionStatement	* ptr = ins	339:1:11826:11836	1665530	2	True				
ANR	1665561	AssignmentExpression	* ptr = ins		1665530	0		=			
ANR	1665562	UnaryOperationExpression	* ptr		1665530	0					
ANR	1665563	UnaryOperator	*		1665530	0					
ANR	1665564	Identifier	ptr		1665530	1					
ANR	1665565	Identifier	ins		1665530	1					
ANR	1665566	ExpressionStatement	compiler -> size ++	340:1:11839:11855	1665530	3	True				
ANR	1665567	PostIncDecOperationExpression	compiler -> size ++		1665530	0					
ANR	1665568	PtrMemberAccess	compiler -> size		1665530	0					
ANR	1665569	Identifier	compiler		1665530	0					
ANR	1665570	Identifier	size		1665530	1					
ANR	1665571	IncDec	++		1665530	1					
ANR	1665572	ExpressionStatement	"printf ( ""|%04d|S0|:\\t\\t"" , line )"	341:1:11858:11888	1665530	4	True				
ANR	1665573	CallExpression	"printf ( ""|%04d|S0|:\\t\\t"" , line )"		1665530	0					
ANR	1665574	Callee	printf		1665530	0					
ANR	1665575	Identifier	printf		1665530	0					
ANR	1665576	ArgumentList	"""|%04d|S0|:\\t\\t"""		1665530	1					
ANR	1665577	Argument	"""|%04d|S0|:\\t\\t"""		1665530	0					
ANR	1665578	PrimaryExpression	"""|%04d|S0|:\\t\\t"""		1665530	0					
ANR	1665579	Argument	line		1665530	1					
ANR	1665580	Identifier	line		1665530	0					
ANR	1665581	ExpressionStatement	print_insn_tilegx ( ptr )	342:1:11891:11913	1665530	5	True				
ANR	1665582	CallExpression	print_insn_tilegx ( ptr )		1665530	0					
ANR	1665583	Callee	print_insn_tilegx		1665530	0					
ANR	1665584	Identifier	print_insn_tilegx		1665530	0					
ANR	1665585	ArgumentList	ptr		1665530	1					
ANR	1665586	Argument	ptr		1665530	0					
ANR	1665587	Identifier	ptr		1665530	0					
ANR	1665588	ReturnStatement	return SLJIT_SUCCESS ;	343:1:11916:11936	1665530	6	True				
ANR	1665589	Identifier	SLJIT_SUCCESS		1665530	0					
ANR	1665590	ReturnType	static sljit_si		1665530	1					
ANR	1665591	Identifier	push_inst_debug		1665530	2					
ANR	1665592	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins , int line"		1665530	3					
ANR	1665593	Parameter	struct sljit_compiler * compiler	335:32:11677:11707	1665530	0	True				
ANR	1665594	ParameterType	struct sljit_compiler *		1665530	0					
ANR	1665595	Identifier	compiler		1665530	1					
ANR	1665596	Parameter	sljit_ins ins	335:65:11710:11722	1665530	1	True				
ANR	1665597	ParameterType	sljit_ins		1665530	0					
ANR	1665598	Identifier	ins		1665530	1					
ANR	1665599	Parameter	int line	335:80:11725:11732	1665530	2	True				
ANR	1665600	ParameterType	int		1665530	0					
ANR	1665601	Identifier	line		1665530	1					
ANR	1665602	CFGEntryNode	ENTRY		1665530		True				
ANR	1665603	CFGExitNode	EXIT		1665530		True				
ANR	1665604	Symbol	compiler -> size		1665530						
ANR	1665605	Symbol	line		1665530						
ANR	1665606	Symbol	ensure_buf		1665530						
ANR	1665607	Symbol	* ptr		1665530						
ANR	1665608	Symbol	SLJIT_SUCCESS		1665530						
ANR	1665609	Symbol	* compiler		1665530						
ANR	1665610	Symbol	compiler		1665530						
ANR	1665611	Symbol	ins		1665530						
ANR	1665612	Symbol	ptr		1665530						
ANR	1665613	Function	push_inst_nodebug	346:0:11941:12168							
ANR	1665614	FunctionDef	"push_inst_nodebug (struct sljit_compiler * compiler , sljit_ins ins)"		1665613	0					
ANR	1665615	CompoundStatement		347:0:12023:12168	1665613	0					
ANR	1665616	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	348:1:12026:12095	1665613	0	True				
ANR	1665617	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665613	0					
ANR	1665618	IdentifierDeclType	sljit_ins *		1665613	0					
ANR	1665619	Identifier	ptr		1665613	1					
ANR	1665620	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665613	2		=			
ANR	1665621	Identifier	ptr		1665613	0					
ANR	1665622	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665613	1					
ANR	1665623	CastTarget	sljit_ins *		1665613	0					
ANR	1665624	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665613	1					
ANR	1665625	Callee	ensure_buf		1665613	0					
ANR	1665626	Identifier	ensure_buf		1665613	0					
ANR	1665627	ArgumentList	compiler		1665613	1					
ANR	1665628	Argument	compiler		1665613	0					
ANR	1665629	Identifier	compiler		1665613	0					
ANR	1665630	Argument	sizeof ( sljit_ins )		1665613	1					
ANR	1665631	SizeofExpression	sizeof ( sljit_ins )		1665613	0					
ANR	1665632	Sizeof	sizeof		1665613	0					
ANR	1665633	SizeofOperand	sljit_ins		1665613	1					
ANR	1665634	ExpressionStatement	FAIL_IF ( ! ptr )	349:1:12098:12111	1665613	1	True				
ANR	1665635	CallExpression	FAIL_IF ( ! ptr )		1665613	0					
ANR	1665636	Callee	FAIL_IF		1665613	0					
ANR	1665637	Identifier	FAIL_IF		1665613	0					
ANR	1665638	ArgumentList	! ptr		1665613	1					
ANR	1665639	Argument	! ptr		1665613	0					
ANR	1665640	UnaryOperationExpression	! ptr		1665613	0					
ANR	1665641	UnaryOperator	!		1665613	0					
ANR	1665642	Identifier	ptr		1665613	1					
ANR	1665643	ExpressionStatement	* ptr = ins	350:1:12114:12124	1665613	2	True				
ANR	1665644	AssignmentExpression	* ptr = ins		1665613	0		=			
ANR	1665645	UnaryOperationExpression	* ptr		1665613	0					
ANR	1665646	UnaryOperator	*		1665613	0					
ANR	1665647	Identifier	ptr		1665613	1					
ANR	1665648	Identifier	ins		1665613	1					
ANR	1665649	ExpressionStatement	compiler -> size ++	351:1:12127:12143	1665613	3	True				
ANR	1665650	PostIncDecOperationExpression	compiler -> size ++		1665613	0					
ANR	1665651	PtrMemberAccess	compiler -> size		1665613	0					
ANR	1665652	Identifier	compiler		1665613	0					
ANR	1665653	Identifier	size		1665613	1					
ANR	1665654	IncDec	++		1665613	1					
ANR	1665655	ReturnStatement	return SLJIT_SUCCESS ;	352:1:12146:12166	1665613	4	True				
ANR	1665656	Identifier	SLJIT_SUCCESS		1665613	0					
ANR	1665657	ReturnType	static sljit_si		1665613	1					
ANR	1665658	Identifier	push_inst_nodebug		1665613	2					
ANR	1665659	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins"		1665613	3					
ANR	1665660	Parameter	struct sljit_compiler * compiler	346:34:11975:12005	1665613	0	True				
ANR	1665661	ParameterType	struct sljit_compiler *		1665613	0					
ANR	1665662	Identifier	compiler		1665613	1					
ANR	1665663	Parameter	sljit_ins ins	346:67:12008:12020	1665613	1	True				
ANR	1665664	ParameterType	sljit_ins		1665613	0					
ANR	1665665	Identifier	ins		1665613	1					
ANR	1665666	CFGEntryNode	ENTRY		1665613		True				
ANR	1665667	CFGExitNode	EXIT		1665613		True				
ANR	1665668	Symbol	compiler -> size		1665613						
ANR	1665669	Symbol	ensure_buf		1665613						
ANR	1665670	Symbol	* ptr		1665613						
ANR	1665671	Symbol	SLJIT_SUCCESS		1665613						
ANR	1665672	Symbol	* compiler		1665613						
ANR	1665673	Symbol	compiler		1665613						
ANR	1665674	Symbol	ins		1665613						
ANR	1665675	Symbol	ptr		1665613						
ANR	1665676	Function	push_inst	357:0:12233:12452							
ANR	1665677	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_ins ins)"		1665676	0					
ANR	1665678	CompoundStatement		358:0:12307:12452	1665676	0					
ANR	1665679	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	359:1:12310:12379	1665676	0	True				
ANR	1665680	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665676	0					
ANR	1665681	IdentifierDeclType	sljit_ins *		1665676	0					
ANR	1665682	Identifier	ptr		1665676	1					
ANR	1665683	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665676	2		=			
ANR	1665684	Identifier	ptr		1665676	0					
ANR	1665685	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665676	1					
ANR	1665686	CastTarget	sljit_ins *		1665676	0					
ANR	1665687	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1665676	1					
ANR	1665688	Callee	ensure_buf		1665676	0					
ANR	1665689	Identifier	ensure_buf		1665676	0					
ANR	1665690	ArgumentList	compiler		1665676	1					
ANR	1665691	Argument	compiler		1665676	0					
ANR	1665692	Identifier	compiler		1665676	0					
ANR	1665693	Argument	sizeof ( sljit_ins )		1665676	1					
ANR	1665694	SizeofExpression	sizeof ( sljit_ins )		1665676	0					
ANR	1665695	Sizeof	sizeof		1665676	0					
ANR	1665696	SizeofOperand	sljit_ins		1665676	1					
ANR	1665697	ExpressionStatement	FAIL_IF ( ! ptr )	360:1:12382:12395	1665676	1	True				
ANR	1665698	CallExpression	FAIL_IF ( ! ptr )		1665676	0					
ANR	1665699	Callee	FAIL_IF		1665676	0					
ANR	1665700	Identifier	FAIL_IF		1665676	0					
ANR	1665701	ArgumentList	! ptr		1665676	1					
ANR	1665702	Argument	! ptr		1665676	0					
ANR	1665703	UnaryOperationExpression	! ptr		1665676	0					
ANR	1665704	UnaryOperator	!		1665676	0					
ANR	1665705	Identifier	ptr		1665676	1					
ANR	1665706	ExpressionStatement	* ptr = ins	361:1:12398:12408	1665676	2	True				
ANR	1665707	AssignmentExpression	* ptr = ins		1665676	0		=			
ANR	1665708	UnaryOperationExpression	* ptr		1665676	0					
ANR	1665709	UnaryOperator	*		1665676	0					
ANR	1665710	Identifier	ptr		1665676	1					
ANR	1665711	Identifier	ins		1665676	1					
ANR	1665712	ExpressionStatement	compiler -> size ++	362:1:12411:12427	1665676	3	True				
ANR	1665713	PostIncDecOperationExpression	compiler -> size ++		1665676	0					
ANR	1665714	PtrMemberAccess	compiler -> size		1665676	0					
ANR	1665715	Identifier	compiler		1665676	0					
ANR	1665716	Identifier	size		1665676	1					
ANR	1665717	IncDec	++		1665676	1					
ANR	1665718	ReturnStatement	return SLJIT_SUCCESS ;	363:1:12430:12450	1665676	4	True				
ANR	1665719	Identifier	SLJIT_SUCCESS		1665676	0					
ANR	1665720	ReturnType	static sljit_si		1665676	1					
ANR	1665721	Identifier	push_inst		1665676	2					
ANR	1665722	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins"		1665676	3					
ANR	1665723	Parameter	struct sljit_compiler * compiler	357:26:12259:12289	1665676	0	True				
ANR	1665724	ParameterType	struct sljit_compiler *		1665676	0					
ANR	1665725	Identifier	compiler		1665676	1					
ANR	1665726	Parameter	sljit_ins ins	357:59:12292:12304	1665676	1	True				
ANR	1665727	ParameterType	sljit_ins		1665676	0					
ANR	1665728	Identifier	ins		1665676	1					
ANR	1665729	CFGEntryNode	ENTRY		1665676		True				
ANR	1665730	CFGExitNode	EXIT		1665676		True				
ANR	1665731	Symbol	compiler -> size		1665676						
ANR	1665732	Symbol	ensure_buf		1665676						
ANR	1665733	Symbol	* ptr		1665676						
ANR	1665734	Symbol	SLJIT_SUCCESS		1665676						
ANR	1665735	Symbol	* compiler		1665676						
ANR	1665736	Symbol	compiler		1665676						
ANR	1665737	Symbol	ins		1665676						
ANR	1665738	Symbol	ptr		1665676						
ANR	1665739	ClassDef	Format	483:0:16168:16365							
ANR	1665740	DeclStmt									
ANR	1665741	Decl							tilegx_pipeline	tilegx_pipeline [ TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE ]	pipe
ANR	1665742	DeclStmt									
ANR	1665743	Decl							unsigned int	unsigned int	pipe_mask
ANR	1665744	DeclStmt									
ANR	1665745	Decl							const struct Format	const struct Format [ ]	formats
ANR	1665746	DeclStmt									
ANR	1665747	Decl							struct jit_instr	struct jit_instr [ TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE ]	inst_buf
ANR	1665748	DeclStmt									
ANR	1665749	Decl							unsigned long	unsigned long	inst_buf_index
ANR	1665750	Function	get_any_valid_pipe	517:0:17582:17852							
ANR	1665751	FunctionDef	get_any_valid_pipe (const struct tilegx_opcode * opcode)		1665750	0					
ANR	1665752	CompoundStatement		518:0:17653:17852	1665750	0					
ANR	1665753	IdentifierDeclStatement	int pipe ;	520:1:17703:17711	1665750	0	True				
ANR	1665754	IdentifierDecl	pipe		1665750	0					
ANR	1665755	IdentifierDeclType	int		1665750	0					
ANR	1665756	Identifier	pipe		1665750	1					
ANR	1665757	ForStatement	for ( pipe = 0 ; ( ( opcode -> pipes & ( 1 << pipe ) ) == 0 && pipe < TILEGX_NUM_PIPELINE_ENCODINGS ) ; pipe ++ )		1665750	1					
ANR	1665758	ForInit	pipe = 0 ;	521:6:17719:17727	1665750	0	True				
ANR	1665759	AssignmentExpression	pipe = 0		1665750	0		=			
ANR	1665760	Identifier	pipe		1665750	0					
ANR	1665761	PrimaryExpression	0		1665750	1					
ANR	1665762	Condition	( opcode -> pipes & ( 1 << pipe ) ) == 0 && pipe < TILEGX_NUM_PIPELINE_ENCODINGS	521:16:17729:17804	1665750	1	True				
ANR	1665763	AndExpression	( opcode -> pipes & ( 1 << pipe ) ) == 0 && pipe < TILEGX_NUM_PIPELINE_ENCODINGS		1665750	0		&&			
ANR	1665764	EqualityExpression	( opcode -> pipes & ( 1 << pipe ) ) == 0		1665750	0		==			
ANR	1665765	BitAndExpression	opcode -> pipes & ( 1 << pipe )		1665750	0		&			
ANR	1665766	PtrMemberAccess	opcode -> pipes		1665750	0					
ANR	1665767	Identifier	opcode		1665750	0					
ANR	1665768	Identifier	pipes		1665750	1					
ANR	1665769	ShiftExpression	1 << pipe		1665750	1		<<			
ANR	1665770	PrimaryExpression	1		1665750	0					
ANR	1665771	Identifier	pipe		1665750	1					
ANR	1665772	PrimaryExpression	0		1665750	1					
ANR	1665773	RelationalExpression	pipe < TILEGX_NUM_PIPELINE_ENCODINGS		1665750	1		<			
ANR	1665774	Identifier	pipe		1665750	0					
ANR	1665775	Identifier	TILEGX_NUM_PIPELINE_ENCODINGS		1665750	1					
ANR	1665776	PostIncDecOperationExpression	pipe ++	521:94:17807:17812	1665750	2	True				
ANR	1665777	Identifier	pipe		1665750	0					
ANR	1665778	IncDec	++		1665750	1					
ANR	1665779	ExpressionStatement		522:2:17817:17817	1665750	3	True				
ANR	1665780	ReturnStatement	return ( tilegx_pipeline ) ( pipe ) ;	523:1:17820:17850	1665750	2	True				
ANR	1665781	CastExpression	( tilegx_pipeline ) ( pipe )		1665750	0					
ANR	1665782	CastTarget	tilegx_pipeline		1665750	0					
ANR	1665783	Identifier	pipe		1665750	1					
ANR	1665784	ReturnType	tilegx_pipeline		1665750	1					
ANR	1665785	Identifier	get_any_valid_pipe		1665750	2					
ANR	1665786	ParameterList	const struct tilegx_opcode * opcode		1665750	3					
ANR	1665787	Parameter	const struct tilegx_opcode * opcode	517:35:17617:17650	1665750	0	True				
ANR	1665788	ParameterType	const struct tilegx_opcode *		1665750	0					
ANR	1665789	Identifier	opcode		1665750	1					
ANR	1665790	CFGEntryNode	ENTRY		1665750		True				
ANR	1665791	CFGExitNode	EXIT		1665750		True				
ANR	1665792	Symbol	opcode -> pipes		1665750						
ANR	1665793	Symbol	TILEGX_NUM_PIPELINE_ENCODINGS		1665750						
ANR	1665794	Symbol	pipe		1665750						
ANR	1665795	Symbol	opcode		1665750						
ANR	1665796	Symbol	* opcode		1665750						
ANR	1665797	Function	insert_nop	526:0:17855:18249							
ANR	1665798	FunctionDef	"insert_nop (tilegx_mnemonic opc , int line)"		1665797	0					
ANR	1665799	CompoundStatement		527:0:17902:18249	1665797	0					
ANR	1665800	IdentifierDeclStatement	const struct tilegx_opcode * opcode = NULL ;	528:1:17905:17946	1665797	0	True				
ANR	1665801	IdentifierDecl	* opcode = NULL		1665797	0					
ANR	1665802	IdentifierDeclType	const struct tilegx_opcode *		1665797	0					
ANR	1665803	Identifier	opcode		1665797	1					
ANR	1665804	AssignmentExpression	* opcode = NULL		1665797	2		=			
ANR	1665805	Identifier	NULL		1665797	0					
ANR	1665806	Identifier	NULL		1665797	1					
ANR	1665807	ExpressionStatement	"memmove ( & inst_buf [ 1 ] , & inst_buf [ 0 ] , inst_buf_index * sizeof inst_buf [ 0 ] )"	530:1:17950:18022	1665797	1	True				
ANR	1665808	CallExpression	"memmove ( & inst_buf [ 1 ] , & inst_buf [ 0 ] , inst_buf_index * sizeof inst_buf [ 0 ] )"		1665797	0					
ANR	1665809	Callee	memmove		1665797	0					
ANR	1665810	Identifier	memmove		1665797	0					
ANR	1665811	ArgumentList	& inst_buf [ 1 ]		1665797	1					
ANR	1665812	Argument	& inst_buf [ 1 ]		1665797	0					
ANR	1665813	UnaryOperationExpression	& inst_buf [ 1 ]		1665797	0					
ANR	1665814	UnaryOperator	&		1665797	0					
ANR	1665815	ArrayIndexing	inst_buf [ 1 ]		1665797	1					
ANR	1665816	Identifier	inst_buf		1665797	0					
ANR	1665817	PrimaryExpression	1		1665797	1					
ANR	1665818	Argument	& inst_buf [ 0 ]		1665797	1					
ANR	1665819	UnaryOperationExpression	& inst_buf [ 0 ]		1665797	0					
ANR	1665820	UnaryOperator	&		1665797	0					
ANR	1665821	ArrayIndexing	inst_buf [ 0 ]		1665797	1					
ANR	1665822	Identifier	inst_buf		1665797	0					
ANR	1665823	PrimaryExpression	0		1665797	1					
ANR	1665824	Argument	inst_buf_index * sizeof inst_buf [ 0 ]		1665797	2					
ANR	1665825	MultiplicativeExpression	inst_buf_index * sizeof inst_buf [ 0 ]		1665797	0		*			
ANR	1665826	Identifier	inst_buf_index		1665797	0					
ANR	1665827	SizeofExpression	sizeof inst_buf [ 0 ]		1665797	1					
ANR	1665828	Sizeof	sizeof		1665797	0					
ANR	1665829	ArrayIndexing	inst_buf [ 0 ]		1665797	1					
ANR	1665830	Identifier	inst_buf		1665797	0					
ANR	1665831	PrimaryExpression	0		1665797	1					
ANR	1665832	ExpressionStatement	opcode = & tilegx_opcodes [ opc ]	532:1:18026:18055	1665797	2	True				
ANR	1665833	AssignmentExpression	opcode = & tilegx_opcodes [ opc ]		1665797	0		=			
ANR	1665834	Identifier	opcode		1665797	0					
ANR	1665835	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1665797	1					
ANR	1665836	UnaryOperator	&		1665797	0					
ANR	1665837	ArrayIndexing	tilegx_opcodes [ opc ]		1665797	1					
ANR	1665838	Identifier	tilegx_opcodes		1665797	0					
ANR	1665839	Identifier	opc		1665797	1					
ANR	1665840	ExpressionStatement	inst_buf [ 0 ] . opcode = opcode	533:1:18058:18085	1665797	3	True				
ANR	1665841	AssignmentExpression	inst_buf [ 0 ] . opcode = opcode		1665797	0		=			
ANR	1665842	MemberAccess	inst_buf [ 0 ] . opcode		1665797	0					
ANR	1665843	ArrayIndexing	inst_buf [ 0 ]		1665797	0					
ANR	1665844	Identifier	inst_buf		1665797	0					
ANR	1665845	PrimaryExpression	0		1665797	1					
ANR	1665846	Identifier	opcode		1665797	1					
ANR	1665847	Identifier	opcode		1665797	1					
ANR	1665848	ExpressionStatement	inst_buf [ 0 ] . pipe = get_any_valid_pipe ( opcode )	534:1:18088:18133	1665797	4	True				
ANR	1665849	AssignmentExpression	inst_buf [ 0 ] . pipe = get_any_valid_pipe ( opcode )		1665797	0		=			
ANR	1665850	MemberAccess	inst_buf [ 0 ] . pipe		1665797	0					
ANR	1665851	ArrayIndexing	inst_buf [ 0 ]		1665797	0					
ANR	1665852	Identifier	inst_buf		1665797	0					
ANR	1665853	PrimaryExpression	0		1665797	1					
ANR	1665854	Identifier	pipe		1665797	1					
ANR	1665855	CallExpression	get_any_valid_pipe ( opcode )		1665797	1					
ANR	1665856	Callee	get_any_valid_pipe		1665797	0					
ANR	1665857	Identifier	get_any_valid_pipe		1665797	0					
ANR	1665858	ArgumentList	opcode		1665797	1					
ANR	1665859	Argument	opcode		1665797	0					
ANR	1665860	Identifier	opcode		1665797	0					
ANR	1665861	ExpressionStatement	inst_buf [ 0 ] . input_registers = 0	535:1:18136:18167	1665797	5	True				
ANR	1665862	AssignmentExpression	inst_buf [ 0 ] . input_registers = 0		1665797	0		=			
ANR	1665863	MemberAccess	inst_buf [ 0 ] . input_registers		1665797	0					
ANR	1665864	ArrayIndexing	inst_buf [ 0 ]		1665797	0					
ANR	1665865	Identifier	inst_buf		1665797	0					
ANR	1665866	PrimaryExpression	0		1665797	1					
ANR	1665867	Identifier	input_registers		1665797	1					
ANR	1665868	PrimaryExpression	0		1665797	1					
ANR	1665869	ExpressionStatement	inst_buf [ 0 ] . output_registers = 0	536:1:18170:18202	1665797	6	True				
ANR	1665870	AssignmentExpression	inst_buf [ 0 ] . output_registers = 0		1665797	0		=			
ANR	1665871	MemberAccess	inst_buf [ 0 ] . output_registers		1665797	0					
ANR	1665872	ArrayIndexing	inst_buf [ 0 ]		1665797	0					
ANR	1665873	Identifier	inst_buf		1665797	0					
ANR	1665874	PrimaryExpression	0		1665797	1					
ANR	1665875	Identifier	output_registers		1665797	1					
ANR	1665876	PrimaryExpression	0		1665797	1					
ANR	1665877	ExpressionStatement	inst_buf [ 0 ] . line = line	537:1:18205:18228	1665797	7	True				
ANR	1665878	AssignmentExpression	inst_buf [ 0 ] . line = line		1665797	0		=			
ANR	1665879	MemberAccess	inst_buf [ 0 ] . line		1665797	0					
ANR	1665880	ArrayIndexing	inst_buf [ 0 ]		1665797	0					
ANR	1665881	Identifier	inst_buf		1665797	0					
ANR	1665882	PrimaryExpression	0		1665797	1					
ANR	1665883	Identifier	line		1665797	1					
ANR	1665884	Identifier	line		1665797	1					
ANR	1665885	ExpressionStatement	++ inst_buf_index	538:1:18231:18247	1665797	8	True				
ANR	1665886	UnaryExpression	++ inst_buf_index		1665797	0					
ANR	1665887	IncDec	++		1665797	0					
ANR	1665888	Identifier	inst_buf_index		1665797	1					
ANR	1665889	ReturnType	void		1665797	1					
ANR	1665890	Identifier	insert_nop		1665797	2					
ANR	1665891	ParameterList	"tilegx_mnemonic opc , int line"		1665797	3					
ANR	1665892	Parameter	tilegx_mnemonic opc	526:16:17871:17889	1665797	0	True				
ANR	1665893	ParameterType	tilegx_mnemonic		1665797	0					
ANR	1665894	Identifier	opc		1665797	1					
ANR	1665895	Parameter	int line	526:37:17892:17899	1665797	1	True				
ANR	1665896	ParameterType	int		1665797	0					
ANR	1665897	Identifier	line		1665797	1					
ANR	1665898	CFGEntryNode	ENTRY		1665797		True				
ANR	1665899	CFGExitNode	EXIT		1665797		True				
ANR	1665900	Symbol	opc		1665797						
ANR	1665901	Symbol	NULL		1665797						
ANR	1665902	Symbol	line		1665797						
ANR	1665903	Symbol	opcode		1665797						
ANR	1665904	Symbol	inst_buf [ 0 ] . opcode		1665797						
ANR	1665905	Symbol	inst_buf [ 0 ] . line		1665797						
ANR	1665906	Symbol	inst_buf		1665797						
ANR	1665907	Symbol	inst_buf_index		1665797						
ANR	1665908	Symbol	inst_buf [ 0 ] . pipe		1665797						
ANR	1665909	Symbol	inst_buf [ 0 ] . output_registers		1665797						
ANR	1665910	Symbol	tilegx_opcodes		1665797						
ANR	1665911	Symbol	inst_buf [ 0 ] . input_registers		1665797						
ANR	1665912	Symbol	get_any_valid_pipe		1665797						
ANR	1665913	Symbol	* inst_buf		1665797						
ANR	1665914	Function	compute_format	541:0:18252:18749							
ANR	1665915	FunctionDef	compute_format ()		1665914	0					
ANR	1665916	CompoundStatement		542:0:18290:18749	1665914	0					
ANR	1665917	IdentifierDeclStatement	"unsigned int compatible_pipes = BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) ) ;"	543:1:18293:18476	1665914	0	True				
ANR	1665918	IdentifierDecl	"compatible_pipes = BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) )"		1665914	0					
ANR	1665919	IdentifierDeclType	unsigned int		1665914	0					
ANR	1665920	Identifier	compatible_pipes		1665914	1					
ANR	1665921	AssignmentExpression	"compatible_pipes = BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) )"		1665914	2		=			
ANR	1665922	Identifier	compatible_pipes		1665914	0					
ANR	1665923	CallExpression	"BUNDLE_FORMAT_MASK ( inst_buf [ 0 ] . opcode -> pipes , inst_buf [ 1 ] . opcode -> pipes , ( inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE ) ) )"		1665914	1					
ANR	1665924	Callee	BUNDLE_FORMAT_MASK		1665914	0					
ANR	1665925	Identifier	BUNDLE_FORMAT_MASK		1665914	0					
ANR	1665926	ArgumentList	inst_buf [ 0 ] . opcode -> pipes		1665914	1					
ANR	1665927	Argument	inst_buf [ 0 ] . opcode -> pipes		1665914	0					
ANR	1665928	PtrMemberAccess	inst_buf [ 0 ] . opcode -> pipes		1665914	0					
ANR	1665929	MemberAccess	inst_buf [ 0 ] . opcode		1665914	0					
ANR	1665930	ArrayIndexing	inst_buf [ 0 ]		1665914	0					
ANR	1665931	Identifier	inst_buf		1665914	0					
ANR	1665932	PrimaryExpression	0		1665914	1					
ANR	1665933	Identifier	opcode		1665914	1					
ANR	1665934	Identifier	pipes		1665914	1					
ANR	1665935	Argument	inst_buf [ 1 ] . opcode -> pipes		1665914	1					
ANR	1665936	PtrMemberAccess	inst_buf [ 1 ] . opcode -> pipes		1665914	0					
ANR	1665937	MemberAccess	inst_buf [ 1 ] . opcode		1665914	0					
ANR	1665938	ArrayIndexing	inst_buf [ 1 ]		1665914	0					
ANR	1665939	Identifier	inst_buf		1665914	0					
ANR	1665940	PrimaryExpression	1		1665914	1					
ANR	1665941	Identifier	opcode		1665914	1					
ANR	1665942	Identifier	pipes		1665914	1					
ANR	1665943	Argument	inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE )		1665914	2					
ANR	1665944	ConditionalExpression	inst_buf_index == 3 ? inst_buf [ 2 ] . opcode -> pipes : ( 1 << NO_PIPELINE )		1665914	0					
ANR	1665945	Condition	inst_buf_index == 3		1665914	0					
ANR	1665946	EqualityExpression	inst_buf_index == 3		1665914	0		==			
ANR	1665947	Identifier	inst_buf_index		1665914	0					
ANR	1665948	PrimaryExpression	3		1665914	1					
ANR	1665949	PtrMemberAccess	inst_buf [ 2 ] . opcode -> pipes		1665914	1					
ANR	1665950	MemberAccess	inst_buf [ 2 ] . opcode		1665914	0					
ANR	1665951	ArrayIndexing	inst_buf [ 2 ]		1665914	0					
ANR	1665952	Identifier	inst_buf		1665914	0					
ANR	1665953	PrimaryExpression	2		1665914	1					
ANR	1665954	Identifier	opcode		1665914	1					
ANR	1665955	Identifier	pipes		1665914	1					
ANR	1665956	ShiftExpression	1 << NO_PIPELINE		1665914	2		<<			
ANR	1665957	PrimaryExpression	1		1665914	0					
ANR	1665958	Identifier	NO_PIPELINE		1665914	1					
ANR	1665959	IdentifierDeclStatement	const struct Format * match = NULL ;	548:1:18480:18513	1665914	1	True				
ANR	1665960	IdentifierDecl	* match = NULL		1665914	0					
ANR	1665961	IdentifierDeclType	const struct Format *		1665914	0					
ANR	1665962	Identifier	match		1665914	1					
ANR	1665963	AssignmentExpression	* match = NULL		1665914	2		=			
ANR	1665964	Identifier	NULL		1665914	0					
ANR	1665965	Identifier	NULL		1665914	1					
ANR	1665966	IdentifierDeclStatement	const struct Format * b = NULL ;	549:1:18516:18545	1665914	2	True				
ANR	1665967	IdentifierDecl	* b = NULL		1665914	0					
ANR	1665968	IdentifierDeclType	const struct Format *		1665914	0					
ANR	1665969	Identifier	b		1665914	1					
ANR	1665970	AssignmentExpression	* b = NULL		1665914	2		=			
ANR	1665971	Identifier	NULL		1665914	0					
ANR	1665972	Identifier	NULL		1665914	1					
ANR	1665973	IdentifierDeclStatement	unsigned int i = 0 ;	550:1:18548:18566	1665914	3	True				
ANR	1665974	IdentifierDecl	i = 0		1665914	0					
ANR	1665975	IdentifierDeclType	unsigned int		1665914	0					
ANR	1665976	Identifier	i		1665914	1					
ANR	1665977	AssignmentExpression	i = 0		1665914	2		=			
ANR	1665978	Identifier	i		1665914	0					
ANR	1665979	PrimaryExpression	0		1665914	1					
ANR	1665980	ForStatement	for ( i ; i < sizeof formats / sizeof formats [ 0 ] ; i ++ )		1665914	4					
ANR	1665981	ForInit	i ;	551:6:18574:18575	1665914	0	True				
ANR	1665982	Identifier	i		1665914	0					
ANR	1665983	Condition	i < sizeof formats / sizeof formats [ 0 ]	551:9:18577:18614	1665914	1	True				
ANR	1665984	RelationalExpression	i < sizeof formats / sizeof formats [ 0 ]		1665914	0		<			
ANR	1665985	Identifier	i		1665914	0					
ANR	1665986	MultiplicativeExpression	sizeof formats / sizeof formats [ 0 ]		1665914	1		/			
ANR	1665987	SizeofExpression	sizeof formats		1665914	0					
ANR	1665988	Sizeof	sizeof		1665914	0					
ANR	1665989	Identifier	formats		1665914	1					
ANR	1665990	SizeofExpression	sizeof formats [ 0 ]		1665914	1					
ANR	1665991	Sizeof	sizeof		1665914	0					
ANR	1665992	ArrayIndexing	formats [ 0 ]		1665914	1					
ANR	1665993	Identifier	formats		1665914	0					
ANR	1665994	PrimaryExpression	0		1665914	1					
ANR	1665995	PostIncDecOperationExpression	i ++	551:49:18617:18619	1665914	2	True				
ANR	1665996	Identifier	i		1665914	0					
ANR	1665997	IncDec	++		1665914	1					
ANR	1665998	CompoundStatement		10:54:331:331	1665914	3					
ANR	1665999	ExpressionStatement	b = & formats [ i ]	552:2:18626:18641	1665914	0	True				
ANR	1666000	AssignmentExpression	b = & formats [ i ]		1665914	0		=			
ANR	1666001	Identifier	b		1665914	0					
ANR	1666002	UnaryOperationExpression	& formats [ i ]		1665914	1					
ANR	1666003	UnaryOperator	&		1665914	0					
ANR	1666004	ArrayIndexing	formats [ i ]		1665914	1					
ANR	1666005	Identifier	formats		1665914	0					
ANR	1666006	Identifier	i		1665914	1					
ANR	1666007	IfStatement	if ( ( b -> pipe_mask & compatible_pipes ) == b -> pipe_mask )		1665914	1					
ANR	1666008	Condition	( b -> pipe_mask & compatible_pipes ) == b -> pipe_mask	553:6:18649:18697	1665914	0	True				
ANR	1666009	EqualityExpression	( b -> pipe_mask & compatible_pipes ) == b -> pipe_mask		1665914	0		==			
ANR	1666010	BitAndExpression	b -> pipe_mask & compatible_pipes		1665914	0		&			
ANR	1666011	PtrMemberAccess	b -> pipe_mask		1665914	0					
ANR	1666012	Identifier	b		1665914	0					
ANR	1666013	Identifier	pipe_mask		1665914	1					
ANR	1666014	Identifier	compatible_pipes		1665914	1					
ANR	1666015	PtrMemberAccess	b -> pipe_mask		1665914	1					
ANR	1666016	Identifier	b		1665914	0					
ANR	1666017	Identifier	pipe_mask		1665914	1					
ANR	1666018	CompoundStatement		12:57:409:409	1665914	1					
ANR	1666019	ExpressionStatement	match = b	554:3:18705:18714	1665914	0	True				
ANR	1666020	AssignmentExpression	match = b		1665914	0		=			
ANR	1666021	Identifier	match		1665914	0					
ANR	1666022	Identifier	b		1665914	1					
ANR	1666023	BreakStatement	break ;	555:3:18719:18724	1665914	1	True				
ANR	1666024	ReturnStatement	return match ;	559:1:18735:18747	1665914	5	True				
ANR	1666025	Identifier	match		1665914	0					
ANR	1666026	ReturnType	const struct Format *		1665914	1					
ANR	1666027	Identifier	compute_format		1665914	2					
ANR	1666028	ParameterList			1665914	3					
ANR	1666029	CFGEntryNode	ENTRY		1665914		True				
ANR	1666030	CFGExitNode	EXIT		1665914		True				
ANR	1666031	Symbol	inst_buf [ 1 ] . opcode -> pipes		1665914						
ANR	1666032	Symbol	BUNDLE_FORMAT_MASK		1665914						
ANR	1666033	Symbol	b		1665914						
ANR	1666034	Symbol	NULL		1665914						
ANR	1666035	Symbol	formats		1665914						
ANR	1666036	Symbol	* inst_buf [ 1 ] . opcode		1665914						
ANR	1666037	Symbol	compatible_pipes		1665914						
ANR	1666038	Symbol	inst_buf [ 2 ] . opcode -> pipes		1665914						
ANR	1666039	Symbol	match		1665914						
ANR	1666040	Symbol	i		1665914						
ANR	1666041	Symbol	inst_buf [ 2 ] . opcode		1665914						
ANR	1666042	Symbol	* b		1665914						
ANR	1666043	Symbol	b -> pipe_mask		1665914						
ANR	1666044	Symbol	* * inst_buf		1665914						
ANR	1666045	Symbol	inst_buf [ 0 ] . opcode		1665914						
ANR	1666046	Symbol	inst_buf		1665914						
ANR	1666047	Symbol	inst_buf_index		1665914						
ANR	1666048	Symbol	* inst_buf [ 2 ] . opcode		1665914						
ANR	1666049	Symbol	NO_PIPELINE		1665914						
ANR	1666050	Symbol	inst_buf [ 0 ] . opcode -> pipes		1665914						
ANR	1666051	Symbol	inst_buf [ 1 ] . opcode		1665914						
ANR	1666052	Symbol	* formats		1665914						
ANR	1666053	Symbol	* inst_buf [ 0 ] . opcode		1665914						
ANR	1666054	Symbol	* inst_buf		1665914						
ANR	1666055	Function	assign_pipes	562:0:18752:19924							
ANR	1666056	FunctionDef	assign_pipes ()		1666055	0					
ANR	1666057	CompoundStatement		563:0:18776:19924	1666055	0					
ANR	1666058	IdentifierDeclStatement	unsigned long output_registers = 0 ;	564:1:18779:18813	1666055	0	True				
ANR	1666059	IdentifierDecl	output_registers = 0		1666055	0					
ANR	1666060	IdentifierDeclType	unsigned long		1666055	0					
ANR	1666061	Identifier	output_registers		1666055	1					
ANR	1666062	AssignmentExpression	output_registers = 0		1666055	2		=			
ANR	1666063	Identifier	output_registers		1666055	0					
ANR	1666064	PrimaryExpression	0		1666055	1					
ANR	1666065	IdentifierDeclStatement	unsigned int i = 0 ;	565:1:18816:18834	1666055	1	True				
ANR	1666066	IdentifierDecl	i = 0		1666055	0					
ANR	1666067	IdentifierDeclType	unsigned int		1666055	0					
ANR	1666068	Identifier	i		1666055	1					
ANR	1666069	AssignmentExpression	i = 0		1666055	2		=			
ANR	1666070	Identifier	i		1666055	0					
ANR	1666071	PrimaryExpression	0		1666055	1					
ANR	1666072	IfStatement	if ( inst_buf_index == 1 )		1666055	2					
ANR	1666073	Condition	inst_buf_index == 1	567:5:18842:18860	1666055	0	True				
ANR	1666074	EqualityExpression	inst_buf_index == 1		1666055	0		==			
ANR	1666075	Identifier	inst_buf_index		1666055	0					
ANR	1666076	PrimaryExpression	1		1666055	1					
ANR	1666077	CompoundStatement		6:2:90:182	1666055	1					
ANR	1666078	IdentifierDeclStatement	tilegx_mnemonic opc = inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP ;	568:2:18867:18959	1666055	0	True				
ANR	1666079	IdentifierDecl	opc = inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP		1666055	0					
ANR	1666080	IdentifierDeclType	tilegx_mnemonic		1666055	0					
ANR	1666081	Identifier	opc		1666055	1					
ANR	1666082	AssignmentExpression	opc = inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP		1666055	2		=			
ANR	1666083	Identifier	opc		1666055	0					
ANR	1666084	ConditionalExpression	inst_buf [ 0 ] . opcode -> can_bundle ? TILEGX_OPC_FNOP : TILEGX_OPC_NOP		1666055	1					
ANR	1666085	Condition	inst_buf [ 0 ] . opcode -> can_bundle		1666055	0					
ANR	1666086	PtrMemberAccess	inst_buf [ 0 ] . opcode -> can_bundle		1666055	0					
ANR	1666087	MemberAccess	inst_buf [ 0 ] . opcode		1666055	0					
ANR	1666088	ArrayIndexing	inst_buf [ 0 ]		1666055	0					
ANR	1666089	Identifier	inst_buf		1666055	0					
ANR	1666090	PrimaryExpression	0		1666055	1					
ANR	1666091	Identifier	opcode		1666055	1					
ANR	1666092	Identifier	can_bundle		1666055	1					
ANR	1666093	Identifier	TILEGX_OPC_FNOP		1666055	1					
ANR	1666094	Identifier	TILEGX_OPC_NOP		1666055	2					
ANR	1666095	ExpressionStatement	"insert_nop ( opc , __LINE__ )"	570:2:18963:18988	1666055	1	True				
ANR	1666096	CallExpression	"insert_nop ( opc , __LINE__ )"		1666055	0					
ANR	1666097	Callee	insert_nop		1666055	0					
ANR	1666098	Identifier	insert_nop		1666055	0					
ANR	1666099	ArgumentList	opc		1666055	1					
ANR	1666100	Argument	opc		1666055	0					
ANR	1666101	Identifier	opc		1666055	0					
ANR	1666102	Argument	__LINE__		1666055	1					
ANR	1666103	Identifier	__LINE__		1666055	0					
ANR	1666104	IdentifierDeclStatement	const struct Format * match = compute_format ( ) ;	573:1:18995:19040	1666055	3	True				
ANR	1666105	IdentifierDecl	* match = compute_format ( )		1666055	0					
ANR	1666106	IdentifierDeclType	const struct Format *		1666055	0					
ANR	1666107	Identifier	match		1666055	1					
ANR	1666108	AssignmentExpression	* match = compute_format ( )		1666055	2		=			
ANR	1666109	Identifier	match		1666055	0					
ANR	1666110	CallExpression	compute_format ( )		1666055	1					
ANR	1666111	Callee	compute_format		1666055	0					
ANR	1666112	Identifier	compute_format		1666055	0					
ANR	1666113	ArgumentList			1666055	1					
ANR	1666114	IfStatement	if ( match == NULL )		1666055	4					
ANR	1666115	Condition	match == NULL	575:5:19048:19060	1666055	0	True				
ANR	1666116	EqualityExpression	match == NULL		1666055	0		==			
ANR	1666117	Identifier	match		1666055	0					
ANR	1666118	Identifier	NULL		1666055	1					
ANR	1666119	ReturnStatement	return - 1 ;	576:2:19065:19074	1666055	1	True				
ANR	1666120	UnaryOperationExpression	- 1		1666055	0					
ANR	1666121	UnaryOperator	-		1666055	0					
ANR	1666122	PrimaryExpression	1		1666055	1					
ANR	1666123	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1666055	5					
ANR	1666124	ForInit	i = 0 ;	578:6:19083:19088	1666055	0	True				
ANR	1666125	AssignmentExpression	i = 0		1666055	0		=			
ANR	1666126	Identifier	i		1666055	0					
ANR	1666127	PrimaryExpression	0		1666055	1					
ANR	1666128	Condition	i < inst_buf_index	578:13:19090:19107	1666055	1	True				
ANR	1666129	RelationalExpression	i < inst_buf_index		1666055	0		<			
ANR	1666130	Identifier	i		1666055	0					
ANR	1666131	Identifier	inst_buf_index		1666055	1					
ANR	1666132	PostIncDecOperationExpression	i ++	578:33:19110:19112	1666055	2	True				
ANR	1666133	Identifier	i		1666055	0					
ANR	1666134	IncDec	++		1666055	1					
ANR	1666135	CompoundStatement		16:38:338:338	1666055	3					
ANR	1666136	IfStatement	if ( ( i > 0 ) && ( ( inst_buf [ i ] . input_registers & output_registers ) != 0 ) )		1666055	0					
ANR	1666137	Condition	( i > 0 ) && ( ( inst_buf [ i ] . input_registers & output_registers ) != 0 )	580:6:19124:19189	1666055	0	True				
ANR	1666138	AndExpression	( i > 0 ) && ( ( inst_buf [ i ] . input_registers & output_registers ) != 0 )		1666055	0		&&			
ANR	1666139	RelationalExpression	i > 0		1666055	0		>			
ANR	1666140	Identifier	i		1666055	0					
ANR	1666141	PrimaryExpression	0		1666055	1					
ANR	1666142	EqualityExpression	( inst_buf [ i ] . input_registers & output_registers ) != 0		1666055	1		!=			
ANR	1666143	BitAndExpression	inst_buf [ i ] . input_registers & output_registers		1666055	0		&			
ANR	1666144	MemberAccess	inst_buf [ i ] . input_registers		1666055	0					
ANR	1666145	ArrayIndexing	inst_buf [ i ]		1666055	0					
ANR	1666146	Identifier	inst_buf		1666055	0					
ANR	1666147	Identifier	i		1666055	1					
ANR	1666148	Identifier	input_registers		1666055	1					
ANR	1666149	Identifier	output_registers		1666055	1					
ANR	1666150	PrimaryExpression	0		1666055	1					
ANR	1666151	ReturnStatement	return - 1 ;	581:3:19195:19204	1666055	1	True				
ANR	1666152	UnaryOperationExpression	- 1		1666055	0					
ANR	1666153	UnaryOperator	-		1666055	0					
ANR	1666154	PrimaryExpression	1		1666055	1					
ANR	1666155	IfStatement	if ( ( i > 0 ) && ( ( inst_buf [ i ] . output_registers & output_registers ) != 0 ) )		1666055	1					
ANR	1666156	Condition	( i > 0 ) && ( ( inst_buf [ i ] . output_registers & output_registers ) != 0 )	583:6:19213:19279	1666055	0	True				
ANR	1666157	AndExpression	( i > 0 ) && ( ( inst_buf [ i ] . output_registers & output_registers ) != 0 )		1666055	0		&&			
ANR	1666158	RelationalExpression	i > 0		1666055	0		>			
ANR	1666159	Identifier	i		1666055	0					
ANR	1666160	PrimaryExpression	0		1666055	1					
ANR	1666161	EqualityExpression	( inst_buf [ i ] . output_registers & output_registers ) != 0		1666055	1		!=			
ANR	1666162	BitAndExpression	inst_buf [ i ] . output_registers & output_registers		1666055	0		&			
ANR	1666163	MemberAccess	inst_buf [ i ] . output_registers		1666055	0					
ANR	1666164	ArrayIndexing	inst_buf [ i ]		1666055	0					
ANR	1666165	Identifier	inst_buf		1666055	0					
ANR	1666166	Identifier	i		1666055	1					
ANR	1666167	Identifier	output_registers		1666055	1					
ANR	1666168	Identifier	output_registers		1666055	1					
ANR	1666169	PrimaryExpression	0		1666055	1					
ANR	1666170	ReturnStatement	return - 1 ;	584:3:19285:19294	1666055	1	True				
ANR	1666171	UnaryOperationExpression	- 1		1666055	0					
ANR	1666172	UnaryOperator	-		1666055	0					
ANR	1666173	PrimaryExpression	1		1666055	1					
ANR	1666174	ExpressionStatement	output_registers |= inst_buf [ i ] . output_registers & 0xFFFFFFFFFFFFFFL	589:2:19404:19472	1666055	2	True				
ANR	1666175	AssignmentExpression	output_registers |= inst_buf [ i ] . output_registers & 0xFFFFFFFFFFFFFFL		1666055	0		|=			
ANR	1666176	Identifier	output_registers		1666055	0					
ANR	1666177	BitAndExpression	inst_buf [ i ] . output_registers & 0xFFFFFFFFFFFFFFL		1666055	1		&			
ANR	1666178	MemberAccess	inst_buf [ i ] . output_registers		1666055	0					
ANR	1666179	ArrayIndexing	inst_buf [ i ]		1666055	0					
ANR	1666180	Identifier	inst_buf		1666055	0					
ANR	1666181	Identifier	i		1666055	1					
ANR	1666182	Identifier	output_registers		1666055	1					
ANR	1666183	PrimaryExpression	0xFFFFFFFFFFFFFFL		1666055	1					
ANR	1666184	ExpressionStatement	inst_buf [ i ] . pipe = match -> pipe [ i ]	591:2:19477:19510	1666055	3	True				
ANR	1666185	AssignmentExpression	inst_buf [ i ] . pipe = match -> pipe [ i ]		1666055	0		=			
ANR	1666186	MemberAccess	inst_buf [ i ] . pipe		1666055	0					
ANR	1666187	ArrayIndexing	inst_buf [ i ]		1666055	0					
ANR	1666188	Identifier	inst_buf		1666055	0					
ANR	1666189	Identifier	i		1666055	1					
ANR	1666190	Identifier	pipe		1666055	1					
ANR	1666191	ArrayIndexing	match -> pipe [ i ]		1666055	1					
ANR	1666192	PtrMemberAccess	match -> pipe		1666055	0					
ANR	1666193	Identifier	match		1666055	0					
ANR	1666194	Identifier	pipe		1666055	1					
ANR	1666195	Identifier	i		1666055	1					
ANR	1666196	IfStatement	if ( inst_buf_index == 2 && ! tilegx_is_x_pipeline ( match -> pipe [ 0 ] ) )		1666055	6					
ANR	1666197	Condition	inst_buf_index == 2 && ! tilegx_is_x_pipeline ( match -> pipe [ 0 ] )	595:5:19575:19634	1666055	0	True				
ANR	1666198	AndExpression	inst_buf_index == 2 && ! tilegx_is_x_pipeline ( match -> pipe [ 0 ] )		1666055	0		&&			
ANR	1666199	EqualityExpression	inst_buf_index == 2		1666055	0		==			
ANR	1666200	Identifier	inst_buf_index		1666055	0					
ANR	1666201	PrimaryExpression	2		1666055	1					
ANR	1666202	UnaryOperationExpression	! tilegx_is_x_pipeline ( match -> pipe [ 0 ] )		1666055	1					
ANR	1666203	UnaryOperator	!		1666055	0					
ANR	1666204	CallExpression	tilegx_is_x_pipeline ( match -> pipe [ 0 ] )		1666055	1					
ANR	1666205	Callee	tilegx_is_x_pipeline		1666055	0					
ANR	1666206	Identifier	tilegx_is_x_pipeline		1666055	0					
ANR	1666207	ArgumentList	match -> pipe [ 0 ]		1666055	1					
ANR	1666208	Argument	match -> pipe [ 0 ]		1666055	0					
ANR	1666209	ArrayIndexing	match -> pipe [ 0 ]		1666055	0					
ANR	1666210	PtrMemberAccess	match -> pipe		1666055	0					
ANR	1666211	Identifier	match		1666055	0					
ANR	1666212	Identifier	pipe		1666055	1					
ANR	1666213	PrimaryExpression	0		1666055	1					
ANR	1666214	CompoundStatement		37:2:946:1102	1666055	1					
ANR	1666215	ExpressionStatement	"insert_nop ( TILEGX_OPC_FNOP , __LINE__ )"	596:2:19641:19678	1666055	0	True				
ANR	1666216	CallExpression	"insert_nop ( TILEGX_OPC_FNOP , __LINE__ )"		1666055	0					
ANR	1666217	Callee	insert_nop		1666055	0					
ANR	1666218	Identifier	insert_nop		1666055	0					
ANR	1666219	ArgumentList	TILEGX_OPC_FNOP		1666055	1					
ANR	1666220	Argument	TILEGX_OPC_FNOP		1666055	0					
ANR	1666221	Identifier	TILEGX_OPC_FNOP		1666055	0					
ANR	1666222	Argument	__LINE__		1666055	1					
ANR	1666223	Identifier	__LINE__		1666055	0					
ANR	1666224	IdentifierDeclStatement	tilegx_pipeline pipe = ( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) ) ;	599:2:19723:19879	1666055	1	True				
ANR	1666225	IdentifierDecl	pipe = ( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) )		1666055	0					
ANR	1666226	IdentifierDeclType	tilegx_pipeline		1666055	0					
ANR	1666227	Identifier	pipe		1666055	1					
ANR	1666228	AssignmentExpression	pipe = ( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) )		1666055	2		=			
ANR	1666229	Identifier	pipe		1666055	0					
ANR	1666230	CastExpression	( tilegx_pipeline ) ( ( ( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe ) ) )		1666055	1					
ANR	1666231	CastTarget	tilegx_pipeline		1666055	0					
ANR	1666232	AdditiveExpression	( TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2 ) - ( inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe )		1666055	1		-			
ANR	1666233	AdditiveExpression	TILEGX_PIPELINE_Y0 + TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2		1666055	0		+			
ANR	1666234	Identifier	TILEGX_PIPELINE_Y0		1666055	0					
ANR	1666235	AdditiveExpression	TILEGX_PIPELINE_Y1 + TILEGX_PIPELINE_Y2		1666055	1		+			
ANR	1666236	Identifier	TILEGX_PIPELINE_Y1		1666055	0					
ANR	1666237	Identifier	TILEGX_PIPELINE_Y2		1666055	1					
ANR	1666238	AdditiveExpression	inst_buf [ 1 ] . pipe + inst_buf [ 2 ] . pipe		1666055	1		+			
ANR	1666239	MemberAccess	inst_buf [ 1 ] . pipe		1666055	0					
ANR	1666240	ArrayIndexing	inst_buf [ 1 ]		1666055	0					
ANR	1666241	Identifier	inst_buf		1666055	0					
ANR	1666242	PrimaryExpression	1		1666055	1					
ANR	1666243	Identifier	pipe		1666055	1					
ANR	1666244	MemberAccess	inst_buf [ 2 ] . pipe		1666055	1					
ANR	1666245	ArrayIndexing	inst_buf [ 2 ]		1666055	0					
ANR	1666246	Identifier	inst_buf		1666055	0					
ANR	1666247	PrimaryExpression	2		1666055	1					
ANR	1666248	Identifier	pipe		1666055	1					
ANR	1666249	ExpressionStatement	inst_buf [ 0 ] . pipe = pipe	603:2:19884:19907	1666055	2	True				
ANR	1666250	AssignmentExpression	inst_buf [ 0 ] . pipe = pipe		1666055	0		=			
ANR	1666251	MemberAccess	inst_buf [ 0 ] . pipe		1666055	0					
ANR	1666252	ArrayIndexing	inst_buf [ 0 ]		1666055	0					
ANR	1666253	Identifier	inst_buf		1666055	0					
ANR	1666254	PrimaryExpression	0		1666055	1					
ANR	1666255	Identifier	pipe		1666055	1					
ANR	1666256	Identifier	pipe		1666055	1					
ANR	1666257	ReturnStatement	return 0 ;	606:1:19914:19922	1666055	7	True				
ANR	1666258	PrimaryExpression	0		1666055	0					
ANR	1666259	ReturnType	sljit_si		1666055	1					
ANR	1666260	Identifier	assign_pipes		1666055	2					
ANR	1666261	ParameterList			1666055	3					
ANR	1666262	CFGEntryNode	ENTRY		1666055		True				
ANR	1666263	CFGExitNode	EXIT		1666055		True				
ANR	1666264	Symbol	* match		1666055						
ANR	1666265	Symbol	inst_buf [ 2 ] . pipe		1666055						
ANR	1666266	Symbol	* * inst_buf		1666055						
ANR	1666267	Symbol	TILEGX_OPC_FNOP		1666055						
ANR	1666268	Symbol	inst_buf [ 0 ] . pipe		1666055						
ANR	1666269	Symbol	TILEGX_PIPELINE_Y1		1666055						
ANR	1666270	Symbol	TILEGX_PIPELINE_Y0		1666055						
ANR	1666271	Symbol	pipe		1666055						
ANR	1666272	Symbol	TILEGX_PIPELINE_Y2		1666055						
ANR	1666273	Symbol	inst_buf [ i ] . output_registers		1666055						
ANR	1666274	Symbol	* inst_buf		1666055						
ANR	1666275	Symbol	opc		1666055						
ANR	1666276	Symbol	NULL		1666055						
ANR	1666277	Symbol	inst_buf [ i ] . pipe		1666055						
ANR	1666278	Symbol	inst_buf [ i ] . input_registers		1666055						
ANR	1666279	Symbol	* match -> pipe		1666055						
ANR	1666280	Symbol	output_registers		1666055						
ANR	1666281	Symbol	match		1666055						
ANR	1666282	Symbol	inst_buf [ 1 ] . pipe		1666055						
ANR	1666283	Symbol	i		1666055						
ANR	1666284	Symbol	inst_buf [ 0 ] . opcode		1666055						
ANR	1666285	Symbol	__LINE__		1666055						
ANR	1666286	Symbol	inst_buf [ 0 ] . opcode -> can_bundle		1666055						
ANR	1666287	Symbol	inst_buf_index		1666055						
ANR	1666288	Symbol	inst_buf		1666055						
ANR	1666289	Symbol	match -> pipe		1666055						
ANR	1666290	Symbol	* i		1666055						
ANR	1666291	Symbol	tilegx_is_x_pipeline		1666055						
ANR	1666292	Symbol	TILEGX_OPC_NOP		1666055						
ANR	1666293	Symbol	* * match		1666055						
ANR	1666294	Symbol	* inst_buf [ 0 ] . opcode		1666055						
ANR	1666295	Symbol	compute_format		1666055						
ANR	1666296	Function	get_bundle_bit	609:0:19927:20356							
ANR	1666297	FunctionDef	get_bundle_bit (struct jit_instr * inst)		1666296	0					
ANR	1666298	CompoundStatement		610:0:19985:20356	1666296	0					
ANR	1666299	IdentifierDeclStatement	"int i , val ;"	611:1:19988:19998	1666296	0	True				
ANR	1666300	IdentifierDecl	i		1666296	0					
ANR	1666301	IdentifierDeclType	int		1666296	0					
ANR	1666302	Identifier	i		1666296	1					
ANR	1666303	IdentifierDecl	val		1666296	1					
ANR	1666304	IdentifierDeclType	int		1666296	0					
ANR	1666305	Identifier	val		1666296	1					
ANR	1666306	IdentifierDeclStatement	const struct tilegx_opcode * opcode = inst -> opcode ;	612:1:20001:20050	1666296	1	True				
ANR	1666307	IdentifierDecl	* opcode = inst -> opcode		1666296	0					
ANR	1666308	IdentifierDeclType	const struct tilegx_opcode *		1666296	0					
ANR	1666309	Identifier	opcode		1666296	1					
ANR	1666310	AssignmentExpression	* opcode = inst -> opcode		1666296	2		=			
ANR	1666311	Identifier	opcode		1666296	0					
ANR	1666312	PtrMemberAccess	inst -> opcode		1666296	1					
ANR	1666313	Identifier	inst		1666296	0					
ANR	1666314	Identifier	opcode		1666296	1					
ANR	1666315	IdentifierDeclStatement	tilegx_bundle_bits bits = opcode -> fixed_bit_values [ inst -> pipe ] ;	613:1:20053:20115	1666296	2	True				
ANR	1666316	IdentifierDecl	bits = opcode -> fixed_bit_values [ inst -> pipe ]		1666296	0					
ANR	1666317	IdentifierDeclType	tilegx_bundle_bits		1666296	0					
ANR	1666318	Identifier	bits		1666296	1					
ANR	1666319	AssignmentExpression	bits = opcode -> fixed_bit_values [ inst -> pipe ]		1666296	2		=			
ANR	1666320	Identifier	bits		1666296	0					
ANR	1666321	ArrayIndexing	opcode -> fixed_bit_values [ inst -> pipe ]		1666296	1					
ANR	1666322	PtrMemberAccess	opcode -> fixed_bit_values		1666296	0					
ANR	1666323	Identifier	opcode		1666296	0					
ANR	1666324	Identifier	fixed_bit_values		1666296	1					
ANR	1666325	PtrMemberAccess	inst -> pipe		1666296	1					
ANR	1666326	Identifier	inst		1666296	0					
ANR	1666327	Identifier	pipe		1666296	1					
ANR	1666328	IdentifierDeclStatement	const struct tilegx_operand * operand = NULL ;	615:1:20119:20162	1666296	3	True				
ANR	1666329	IdentifierDecl	* operand = NULL		1666296	0					
ANR	1666330	IdentifierDeclType	const struct tilegx_operand *		1666296	0					
ANR	1666331	Identifier	operand		1666296	1					
ANR	1666332	AssignmentExpression	* operand = NULL		1666296	2		=			
ANR	1666333	Identifier	NULL		1666296	0					
ANR	1666334	Identifier	NULL		1666296	1					
ANR	1666335	ForStatement	for ( i = 0 ; i < opcode -> num_operands ; i ++ )		1666296	4					
ANR	1666336	ForInit	i = 0 ;	616:6:20170:20175	1666296	0	True				
ANR	1666337	AssignmentExpression	i = 0		1666296	0		=			
ANR	1666338	Identifier	i		1666296	0					
ANR	1666339	PrimaryExpression	0		1666296	1					
ANR	1666340	Condition	i < opcode -> num_operands	616:13:20177:20200	1666296	1	True				
ANR	1666341	RelationalExpression	i < opcode -> num_operands		1666296	0		<			
ANR	1666342	Identifier	i		1666296	0					
ANR	1666343	PtrMemberAccess	opcode -> num_operands		1666296	1					
ANR	1666344	Identifier	opcode		1666296	0					
ANR	1666345	Identifier	num_operands		1666296	1					
ANR	1666346	PostIncDecOperationExpression	i ++	616:39:20203:20205	1666296	2	True				
ANR	1666347	Identifier	i		1666296	0					
ANR	1666348	IncDec	++		1666296	1					
ANR	1666349	CompoundStatement		7:44:222:222	1666296	3					
ANR	1666350	ExpressionStatement	operand = & tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]	617:2:20212:20271	1666296	0	True				
ANR	1666351	AssignmentExpression	operand = & tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]		1666296	0		=			
ANR	1666352	Identifier	operand		1666296	0					
ANR	1666353	UnaryOperationExpression	& tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]		1666296	1					
ANR	1666354	UnaryOperator	&		1666296	0					
ANR	1666355	ArrayIndexing	tilegx_operands [ opcode -> operands [ inst -> pipe ] [ i ] ]		1666296	1					
ANR	1666356	Identifier	tilegx_operands		1666296	0					
ANR	1666357	ArrayIndexing	opcode -> operands [ inst -> pipe ] [ i ]		1666296	1					
ANR	1666358	ArrayIndexing	opcode -> operands [ inst -> pipe ]		1666296	0					
ANR	1666359	PtrMemberAccess	opcode -> operands		1666296	0					
ANR	1666360	Identifier	opcode		1666296	0					
ANR	1666361	Identifier	operands		1666296	1					
ANR	1666362	PtrMemberAccess	inst -> pipe		1666296	1					
ANR	1666363	Identifier	inst		1666296	0					
ANR	1666364	Identifier	pipe		1666296	1					
ANR	1666365	Identifier	i		1666296	1					
ANR	1666366	ExpressionStatement	val = inst -> operand_value [ i ]	618:2:20275:20303	1666296	1	True				
ANR	1666367	AssignmentExpression	val = inst -> operand_value [ i ]		1666296	0		=			
ANR	1666368	Identifier	val		1666296	0					
ANR	1666369	ArrayIndexing	inst -> operand_value [ i ]		1666296	1					
ANR	1666370	PtrMemberAccess	inst -> operand_value		1666296	0					
ANR	1666371	Identifier	inst		1666296	0					
ANR	1666372	Identifier	operand_value		1666296	1					
ANR	1666373	Identifier	i		1666296	1					
ANR	1666374	ExpressionStatement	bits |= operand -> insert ( val )	620:2:20308:20336	1666296	2	True				
ANR	1666375	AssignmentExpression	bits |= operand -> insert ( val )		1666296	0		|=			
ANR	1666376	Identifier	bits		1666296	0					
ANR	1666377	CallExpression	operand -> insert ( val )		1666296	1					
ANR	1666378	Callee	operand -> insert		1666296	0					
ANR	1666379	PtrMemberAccess	operand -> insert		1666296	0					
ANR	1666380	Identifier	operand		1666296	0					
ANR	1666381	Identifier	insert		1666296	1					
ANR	1666382	ArgumentList	val		1666296	1					
ANR	1666383	Argument	val		1666296	0					
ANR	1666384	Identifier	val		1666296	0					
ANR	1666385	ReturnStatement	return bits ;	623:1:20343:20354	1666296	5	True				
ANR	1666386	Identifier	bits		1666296	0					
ANR	1666387	ReturnType	tilegx_bundle_bits		1666296	1					
ANR	1666388	Identifier	get_bundle_bit		1666296	2					
ANR	1666389	ParameterList	struct jit_instr * inst		1666296	3					
ANR	1666390	Parameter	struct jit_instr * inst	609:34:19961:19982	1666296	0	True				
ANR	1666391	ParameterType	struct jit_instr *		1666296	0					
ANR	1666392	Identifier	inst		1666296	1					
ANR	1666393	CFGEntryNode	ENTRY		1666296		True				
ANR	1666394	CFGExitNode	EXIT		1666296		True				
ANR	1666395	Symbol	* operand		1666296						
ANR	1666396	Symbol	* opcode -> operands		1666296						
ANR	1666397	Symbol	opcode		1666296						
ANR	1666398	Symbol	* inst -> operand_value		1666296						
ANR	1666399	Symbol	opcode -> num_operands		1666296						
ANR	1666400	Symbol	* * * inst		1666296						
ANR	1666401	Symbol	opcode -> operands		1666296						
ANR	1666402	Symbol	opcode -> fixed_bit_values		1666296						
ANR	1666403	Symbol	* inst -> pipe		1666296						
ANR	1666404	Symbol	val		1666296						
ANR	1666405	Symbol	inst -> pipe		1666296						
ANR	1666406	Symbol	inst -> operand_value		1666296						
ANR	1666407	Symbol	* * * opcode		1666296						
ANR	1666408	Symbol	* inst		1666296						
ANR	1666409	Symbol	NULL		1666296						
ANR	1666410	Symbol	operand -> insert		1666296						
ANR	1666411	Symbol	bits		1666296						
ANR	1666412	Symbol	i		1666296						
ANR	1666413	Symbol	* * inst		1666296						
ANR	1666414	Symbol	tilegx_operands		1666296						
ANR	1666415	Symbol	* * opcode		1666296						
ANR	1666416	Symbol	* * inst -> pipe		1666296						
ANR	1666417	Symbol	* i		1666296						
ANR	1666418	Symbol	inst		1666296						
ANR	1666419	Symbol	* * opcode -> operands		1666296						
ANR	1666420	Symbol	inst -> opcode		1666296						
ANR	1666421	Symbol	* opcode -> fixed_bit_values		1666296						
ANR	1666422	Symbol	operand		1666296						
ANR	1666423	Symbol	* opcode		1666296						
ANR	1666424	Function	update_buffer	626:0:20359:23079							
ANR	1666425	FunctionDef	update_buffer (struct sljit_compiler * compiler)		1666424	0					
ANR	1666426	CompoundStatement		627:0:20422:23079	1666424	0					
ANR	1666427	IdentifierDeclStatement	int count ;	628:1:20425:20434	1666424	0	True				
ANR	1666428	IdentifierDecl	count		1666424	0					
ANR	1666429	IdentifierDeclType	int		1666424	0					
ANR	1666430	Identifier	count		1666424	1					
ANR	1666431	IdentifierDeclStatement	int i ;	629:1:20437:20442	1666424	1	True				
ANR	1666432	IdentifierDecl	i		1666424	0					
ANR	1666433	IdentifierDeclType	int		1666424	0					
ANR	1666434	Identifier	i		1666424	1					
ANR	1666435	IdentifierDeclStatement	int orig_index = inst_buf_index ;	630:1:20445:20476	1666424	2	True				
ANR	1666436	IdentifierDecl	orig_index = inst_buf_index		1666424	0					
ANR	1666437	IdentifierDeclType	int		1666424	0					
ANR	1666438	Identifier	orig_index		1666424	1					
ANR	1666439	AssignmentExpression	orig_index = inst_buf_index		1666424	2		=			
ANR	1666440	Identifier	inst_buf_index		1666424	0					
ANR	1666441	Identifier	inst_buf_index		1666424	1					
ANR	1666442	IdentifierDeclStatement	struct jit_instr inst0 = inst_buf [ 0 ] ;	631:1:20479:20515	1666424	3	True				
ANR	1666443	IdentifierDecl	inst0 = inst_buf [ 0 ]		1666424	0					
ANR	1666444	IdentifierDeclType	struct jit_instr		1666424	0					
ANR	1666445	Identifier	inst0		1666424	1					
ANR	1666446	AssignmentExpression	inst0 = inst_buf [ 0 ]		1666424	2		=			
ANR	1666447	Identifier	inst0		1666424	0					
ANR	1666448	ArrayIndexing	inst_buf [ 0 ]		1666424	1					
ANR	1666449	Identifier	inst_buf		1666424	0					
ANR	1666450	PrimaryExpression	0		1666424	1					
ANR	1666451	IdentifierDeclStatement	struct jit_instr inst1 = inst_buf [ 1 ] ;	632:1:20518:20554	1666424	4	True				
ANR	1666452	IdentifierDecl	inst1 = inst_buf [ 1 ]		1666424	0					
ANR	1666453	IdentifierDeclType	struct jit_instr		1666424	0					
ANR	1666454	Identifier	inst1		1666424	1					
ANR	1666455	AssignmentExpression	inst1 = inst_buf [ 1 ]		1666424	2		=			
ANR	1666456	Identifier	inst1		1666424	0					
ANR	1666457	ArrayIndexing	inst_buf [ 1 ]		1666424	1					
ANR	1666458	Identifier	inst_buf		1666424	0					
ANR	1666459	PrimaryExpression	1		1666424	1					
ANR	1666460	IdentifierDeclStatement	struct jit_instr inst2 = inst_buf [ 2 ] ;	633:1:20557:20593	1666424	5	True				
ANR	1666461	IdentifierDecl	inst2 = inst_buf [ 2 ]		1666424	0					
ANR	1666462	IdentifierDeclType	struct jit_instr		1666424	0					
ANR	1666463	Identifier	inst2		1666424	1					
ANR	1666464	AssignmentExpression	inst2 = inst_buf [ 2 ]		1666424	2		=			
ANR	1666465	Identifier	inst2		1666424	0					
ANR	1666466	ArrayIndexing	inst_buf [ 2 ]		1666424	1					
ANR	1666467	Identifier	inst_buf		1666424	0					
ANR	1666468	PrimaryExpression	2		1666424	1					
ANR	1666469	IdentifierDeclStatement	tilegx_bundle_bits bits = 0 ;	634:1:20596:20623	1666424	6	True				
ANR	1666470	IdentifierDecl	bits = 0		1666424	0					
ANR	1666471	IdentifierDeclType	tilegx_bundle_bits		1666424	0					
ANR	1666472	Identifier	bits		1666424	1					
ANR	1666473	AssignmentExpression	bits = 0		1666424	2		=			
ANR	1666474	Identifier	bits		1666424	0					
ANR	1666475	PrimaryExpression	0		1666424	1					
ANR	1666476	IfStatement	if ( assign_pipes ( ) == 0 )		1666424	7					
ANR	1666477	Condition	assign_pipes ( ) == 0	637:5:20703:20721	1666424	0	True				
ANR	1666478	EqualityExpression	assign_pipes ( ) == 0		1666424	0		==			
ANR	1666479	CallExpression	assign_pipes ( )		1666424	0					
ANR	1666480	Callee	assign_pipes		1666424	0					
ANR	1666481	Identifier	assign_pipes		1666424	0					
ANR	1666482	ArgumentList			1666424	1					
ANR	1666483	PrimaryExpression	0		1666424	1					
ANR	1666484	CompoundStatement		11:26:301:301	1666424	1					
ANR	1666485	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1666424	0					
ANR	1666486	ForInit	i = 0 ;	638:7:20733:20738	1666424	0	True				
ANR	1666487	AssignmentExpression	i = 0		1666424	0		=			
ANR	1666488	Identifier	i		1666424	0					
ANR	1666489	PrimaryExpression	0		1666424	1					
ANR	1666490	Condition	i < inst_buf_index	638:14:20740:20757	1666424	1	True				
ANR	1666491	RelationalExpression	i < inst_buf_index		1666424	0		<			
ANR	1666492	Identifier	i		1666424	0					
ANR	1666493	Identifier	inst_buf_index		1666424	1					
ANR	1666494	PostIncDecOperationExpression	i ++	638:34:20760:20762	1666424	2	True				
ANR	1666495	Identifier	i		1666424	0					
ANR	1666496	IncDec	++		1666424	1					
ANR	1666497	CompoundStatement		12:39:342:342	1666424	3					
ANR	1666498	ExpressionStatement	bits |= get_bundle_bit ( inst_buf + i )	639:3:20770:20806	1666424	0	True				
ANR	1666499	AssignmentExpression	bits |= get_bundle_bit ( inst_buf + i )		1666424	0		|=			
ANR	1666500	Identifier	bits		1666424	0					
ANR	1666501	CallExpression	get_bundle_bit ( inst_buf + i )		1666424	1					
ANR	1666502	Callee	get_bundle_bit		1666424	0					
ANR	1666503	Identifier	get_bundle_bit		1666424	0					
ANR	1666504	ArgumentList	inst_buf + i		1666424	1					
ANR	1666505	Argument	inst_buf + i		1666424	0					
ANR	1666506	AdditiveExpression	inst_buf + i		1666424	0		+			
ANR	1666507	Identifier	inst_buf		1666424	0					
ANR	1666508	Identifier	i		1666424	1					
ANR	1666509	ExpressionStatement	"printf ( ""|%04d"" , inst_buf [ i ] . line )"	641:3:20835:20868	1666424	1	True				
ANR	1666510	CallExpression	"printf ( ""|%04d"" , inst_buf [ i ] . line )"		1666424	0					
ANR	1666511	Callee	printf		1666424	0					
ANR	1666512	Identifier	printf		1666424	0					
ANR	1666513	ArgumentList	"""|%04d"""		1666424	1					
ANR	1666514	Argument	"""|%04d"""		1666424	0					
ANR	1666515	PrimaryExpression	"""|%04d"""		1666424	0					
ANR	1666516	Argument	inst_buf [ i ] . line		1666424	1					
ANR	1666517	MemberAccess	inst_buf [ i ] . line		1666424	0					
ANR	1666518	ArrayIndexing	inst_buf [ i ]		1666424	0					
ANR	1666519	Identifier	inst_buf		1666424	0					
ANR	1666520	Identifier	i		1666424	1					
ANR	1666521	Identifier	line		1666424	1					
ANR	1666522	IfStatement	if ( inst_buf_index == 3 )		1666424	1					
ANR	1666523	Condition	inst_buf_index == 3	645:6:20911:20929	1666424	0	True				
ANR	1666524	EqualityExpression	inst_buf_index == 3		1666424	0		==			
ANR	1666525	Identifier	inst_buf_index		1666424	0					
ANR	1666526	PrimaryExpression	3		1666424	1					
ANR	1666527	ExpressionStatement	"printf ( ""|M0|:\\t"" )"	646:3:20935:20952	1666424	1	True				
ANR	1666528	CallExpression	"printf ( ""|M0|:\\t"" )"		1666424	0					
ANR	1666529	Callee	printf		1666424	0					
ANR	1666530	Identifier	printf		1666424	0					
ANR	1666531	ArgumentList	"""|M0|:\\t"""		1666424	1					
ANR	1666532	Argument	"""|M0|:\\t"""		1666424	0					
ANR	1666533	PrimaryExpression	"""|M0|:\\t"""		1666424	0					
ANR	1666534	ElseStatement	else		1666424	0					
ANR	1666535	ExpressionStatement	"printf ( ""|M0|:\\t\\t"" )"	648:3:20964:20983	1666424	0	True				
ANR	1666536	CallExpression	"printf ( ""|M0|:\\t\\t"" )"		1666424	0					
ANR	1666537	Callee	printf		1666424	0					
ANR	1666538	Identifier	printf		1666424	0					
ANR	1666539	ArgumentList	"""|M0|:\\t\\t"""		1666424	1					
ANR	1666540	Argument	"""|M0|:\\t\\t"""		1666424	0					
ANR	1666541	PrimaryExpression	"""|M0|:\\t\\t"""		1666424	0					
ANR	1666542	ExpressionStatement	print_insn_tilegx ( & bits )	649:2:20987:21011	1666424	2	True				
ANR	1666543	CallExpression	print_insn_tilegx ( & bits )		1666424	0					
ANR	1666544	Callee	print_insn_tilegx		1666424	0					
ANR	1666545	Identifier	print_insn_tilegx		1666424	0					
ANR	1666546	ArgumentList	& bits		1666424	1					
ANR	1666547	Argument	& bits		1666424	0					
ANR	1666548	UnaryOperationExpression	& bits		1666424	0					
ANR	1666549	UnaryOperator	&		1666424	0					
ANR	1666550	Identifier	bits		1666424	1					
ANR	1666551	ExpressionStatement	inst_buf_index = 0	652:2:21023:21041	1666424	3	True				
ANR	1666552	AssignmentExpression	inst_buf_index = 0		1666424	0		=			
ANR	1666553	Identifier	inst_buf_index		1666424	0					
ANR	1666554	PrimaryExpression	0		1666424	1					
ANR	1666555	ReturnStatement	"return push_inst_nodebug ( compiler , bits ) ;"	655:2:21070:21110	1666424	4	True				
ANR	1666556	CallExpression	"push_inst_nodebug ( compiler , bits )"		1666424	0					
ANR	1666557	Callee	push_inst_nodebug		1666424	0					
ANR	1666558	Identifier	push_inst_nodebug		1666424	0					
ANR	1666559	ArgumentList	compiler		1666424	1					
ANR	1666560	Argument	compiler		1666424	0					
ANR	1666561	Identifier	compiler		1666424	0					
ANR	1666562	Argument	bits		1666424	1					
ANR	1666563	Identifier	bits		1666424	0					
ANR	1666564	ExpressionStatement	inst_buf_index = orig_index - 1	666:1:21434:21465	1666424	8	True				
ANR	1666565	AssignmentExpression	inst_buf_index = orig_index - 1		1666424	0		=			
ANR	1666566	Identifier	inst_buf_index		1666424	0					
ANR	1666567	AdditiveExpression	orig_index - 1		1666424	1		-			
ANR	1666568	Identifier	orig_index		1666424	0					
ANR	1666569	PrimaryExpression	1		1666424	1					
ANR	1666570	ExpressionStatement	inst_buf [ 0 ] = inst0	667:1:21468:21487	1666424	9	True				
ANR	1666571	AssignmentExpression	inst_buf [ 0 ] = inst0		1666424	0		=			
ANR	1666572	ArrayIndexing	inst_buf [ 0 ]		1666424	0					
ANR	1666573	Identifier	inst_buf		1666424	0					
ANR	1666574	PrimaryExpression	0		1666424	1					
ANR	1666575	Identifier	inst0		1666424	1					
ANR	1666576	ExpressionStatement	inst_buf [ 1 ] = inst1	668:1:21490:21509	1666424	10	True				
ANR	1666577	AssignmentExpression	inst_buf [ 1 ] = inst1		1666424	0		=			
ANR	1666578	ArrayIndexing	inst_buf [ 1 ]		1666424	0					
ANR	1666579	Identifier	inst_buf		1666424	0					
ANR	1666580	PrimaryExpression	1		1666424	1					
ANR	1666581	Identifier	inst1		1666424	1					
ANR	1666582	ExpressionStatement	inst_buf [ 2 ] = inst2	669:1:21512:21531	1666424	11	True				
ANR	1666583	AssignmentExpression	inst_buf [ 2 ] = inst2		1666424	0		=			
ANR	1666584	ArrayIndexing	inst_buf [ 2 ]		1666424	0					
ANR	1666585	Identifier	inst_buf		1666424	0					
ANR	1666586	PrimaryExpression	2		1666424	1					
ANR	1666587	Identifier	inst2		1666424	1					
ANR	1666588	IfStatement	if ( assign_pipes ( ) == 0 )		1666424	12					
ANR	1666589	Condition	assign_pipes ( ) == 0	670:5:21538:21556	1666424	0	True				
ANR	1666590	EqualityExpression	assign_pipes ( ) == 0		1666424	0		==			
ANR	1666591	CallExpression	assign_pipes ( )		1666424	0					
ANR	1666592	Callee	assign_pipes		1666424	0					
ANR	1666593	Identifier	assign_pipes		1666424	0					
ANR	1666594	ArgumentList			1666424	1					
ANR	1666595	PrimaryExpression	0		1666424	1					
ANR	1666596	CompoundStatement		44:26:1136:1136	1666424	1					
ANR	1666597	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1666424	0					
ANR	1666598	ForInit	i = 0 ;	671:7:21568:21573	1666424	0	True				
ANR	1666599	AssignmentExpression	i = 0		1666424	0		=			
ANR	1666600	Identifier	i		1666424	0					
ANR	1666601	PrimaryExpression	0		1666424	1					
ANR	1666602	Condition	i < inst_buf_index	671:14:21575:21592	1666424	1	True				
ANR	1666603	RelationalExpression	i < inst_buf_index		1666424	0		<			
ANR	1666604	Identifier	i		1666424	0					
ANR	1666605	Identifier	inst_buf_index		1666424	1					
ANR	1666606	PostIncDecOperationExpression	i ++	671:34:21595:21597	1666424	2	True				
ANR	1666607	Identifier	i		1666424	0					
ANR	1666608	IncDec	++		1666424	1					
ANR	1666609	CompoundStatement		45:39:1177:1177	1666424	3					
ANR	1666610	ExpressionStatement	bits |= get_bundle_bit ( inst_buf + i )	672:3:21605:21641	1666424	0	True				
ANR	1666611	AssignmentExpression	bits |= get_bundle_bit ( inst_buf + i )		1666424	0		|=			
ANR	1666612	Identifier	bits		1666424	0					
ANR	1666613	CallExpression	get_bundle_bit ( inst_buf + i )		1666424	1					
ANR	1666614	Callee	get_bundle_bit		1666424	0					
ANR	1666615	Identifier	get_bundle_bit		1666424	0					
ANR	1666616	ArgumentList	inst_buf + i		1666424	1					
ANR	1666617	Argument	inst_buf + i		1666424	0					
ANR	1666618	AdditiveExpression	inst_buf + i		1666424	0		+			
ANR	1666619	Identifier	inst_buf		1666424	0					
ANR	1666620	Identifier	i		1666424	1					
ANR	1666621	ExpressionStatement	"printf ( ""|%04d"" , inst_buf [ i ] . line )"	674:3:21670:21703	1666424	1	True				
ANR	1666622	CallExpression	"printf ( ""|%04d"" , inst_buf [ i ] . line )"		1666424	0					
ANR	1666623	Callee	printf		1666424	0					
ANR	1666624	Identifier	printf		1666424	0					
ANR	1666625	ArgumentList	"""|%04d"""		1666424	1					
ANR	1666626	Argument	"""|%04d"""		1666424	0					
ANR	1666627	PrimaryExpression	"""|%04d"""		1666424	0					
ANR	1666628	Argument	inst_buf [ i ] . line		1666424	1					
ANR	1666629	MemberAccess	inst_buf [ i ] . line		1666424	0					
ANR	1666630	ArrayIndexing	inst_buf [ i ]		1666424	0					
ANR	1666631	Identifier	inst_buf		1666424	0					
ANR	1666632	Identifier	i		1666424	1					
ANR	1666633	Identifier	line		1666424	1					
ANR	1666634	IfStatement	if ( inst_buf_index == 3 )		1666424	1					
ANR	1666635	Condition	inst_buf_index == 3	679:6:21747:21765	1666424	0	True				
ANR	1666636	EqualityExpression	inst_buf_index == 3		1666424	0		==			
ANR	1666637	Identifier	inst_buf_index		1666424	0					
ANR	1666638	PrimaryExpression	3		1666424	1					
ANR	1666639	ExpressionStatement	"printf ( ""|M1|:\\t"" )"	680:3:21771:21788	1666424	1	True				
ANR	1666640	CallExpression	"printf ( ""|M1|:\\t"" )"		1666424	0					
ANR	1666641	Callee	printf		1666424	0					
ANR	1666642	Identifier	printf		1666424	0					
ANR	1666643	ArgumentList	"""|M1|:\\t"""		1666424	1					
ANR	1666644	Argument	"""|M1|:\\t"""		1666424	0					
ANR	1666645	PrimaryExpression	"""|M1|:\\t"""		1666424	0					
ANR	1666646	ElseStatement	else		1666424	0					
ANR	1666647	ExpressionStatement	"printf ( ""|M1|:\\t\\t"" )"	682:3:21800:21819	1666424	0	True				
ANR	1666648	CallExpression	"printf ( ""|M1|:\\t\\t"" )"		1666424	0					
ANR	1666649	Callee	printf		1666424	0					
ANR	1666650	Identifier	printf		1666424	0					
ANR	1666651	ArgumentList	"""|M1|:\\t\\t"""		1666424	1					
ANR	1666652	Argument	"""|M1|:\\t\\t"""		1666424	0					
ANR	1666653	PrimaryExpression	"""|M1|:\\t\\t"""		1666424	0					
ANR	1666654	ExpressionStatement	print_insn_tilegx ( & bits )	683:2:21823:21847	1666424	2	True				
ANR	1666655	CallExpression	print_insn_tilegx ( & bits )		1666424	0					
ANR	1666656	Callee	print_insn_tilegx		1666424	0					
ANR	1666657	Identifier	print_insn_tilegx		1666424	0					
ANR	1666658	ArgumentList	& bits		1666424	1					
ANR	1666659	Argument	& bits		1666424	0					
ANR	1666660	UnaryOperationExpression	& bits		1666424	0					
ANR	1666661	UnaryOperator	&		1666424	0					
ANR	1666662	Identifier	bits		1666424	1					
ANR	1666663	IfStatement	if ( ( orig_index - 1 ) == 2 )		1666424	3					
ANR	1666664	Condition	( orig_index - 1 ) == 2	686:6:21863:21883	1666424	0	True				
ANR	1666665	EqualityExpression	( orig_index - 1 ) == 2		1666424	0		==			
ANR	1666666	AdditiveExpression	orig_index - 1		1666424	0		-			
ANR	1666667	Identifier	orig_index		1666424	0					
ANR	1666668	PrimaryExpression	1		1666424	1					
ANR	1666669	PrimaryExpression	2		1666424	1					
ANR	1666670	CompoundStatement		60:29:1463:1463	1666424	1					
ANR	1666671	ExpressionStatement	inst_buf [ 0 ] = inst2	687:3:21891:21910	1666424	0	True				
ANR	1666672	AssignmentExpression	inst_buf [ 0 ] = inst2		1666424	0		=			
ANR	1666673	ArrayIndexing	inst_buf [ 0 ]		1666424	0					
ANR	1666674	Identifier	inst_buf		1666424	0					
ANR	1666675	PrimaryExpression	0		1666424	1					
ANR	1666676	Identifier	inst2		1666424	1					
ANR	1666677	ExpressionStatement	inst_buf_index = 1	688:3:21915:21933	1666424	1	True				
ANR	1666678	AssignmentExpression	inst_buf_index = 1		1666424	0		=			
ANR	1666679	Identifier	inst_buf_index		1666424	0					
ANR	1666680	PrimaryExpression	1		1666424	1					
ANR	1666681	ElseStatement	else		1666424	0					
ANR	1666682	IfStatement	if ( ( orig_index - 1 ) == 1 )		1666424	0					
ANR	1666683	Condition	( orig_index - 1 ) == 1	689:13:21948:21968	1666424	0	True				
ANR	1666684	EqualityExpression	( orig_index - 1 ) == 1		1666424	0		==			
ANR	1666685	AdditiveExpression	orig_index - 1		1666424	0		-			
ANR	1666686	Identifier	orig_index		1666424	0					
ANR	1666687	PrimaryExpression	1		1666424	1					
ANR	1666688	PrimaryExpression	1		1666424	1					
ANR	1666689	CompoundStatement		63:36:1548:1548	1666424	1					
ANR	1666690	ExpressionStatement	inst_buf [ 0 ] = inst1	690:3:21976:21995	1666424	0	True				
ANR	1666691	AssignmentExpression	inst_buf [ 0 ] = inst1		1666424	0		=			
ANR	1666692	ArrayIndexing	inst_buf [ 0 ]		1666424	0					
ANR	1666693	Identifier	inst_buf		1666424	0					
ANR	1666694	PrimaryExpression	0		1666424	1					
ANR	1666695	Identifier	inst1		1666424	1					
ANR	1666696	ExpressionStatement	inst_buf_index = 1	691:3:22000:22018	1666424	1	True				
ANR	1666697	AssignmentExpression	inst_buf_index = 1		1666424	0		=			
ANR	1666698	Identifier	inst_buf_index		1666424	0					
ANR	1666699	PrimaryExpression	1		1666424	1					
ANR	1666700	ElseStatement	else		1666424	0					
ANR	1666701	ExpressionStatement	SLJIT_ASSERT_STOP ( )	693:3:22032:22051	1666424	0	True				
ANR	1666702	CallExpression	SLJIT_ASSERT_STOP ( )		1666424	0					
ANR	1666703	Callee	SLJIT_ASSERT_STOP		1666424	0					
ANR	1666704	Identifier	SLJIT_ASSERT_STOP		1666424	0					
ANR	1666705	ArgumentList			1666424	1					
ANR	1666706	ReturnStatement	"return push_inst_nodebug ( compiler , bits ) ;"	696:2:22080:22120	1666424	4	True				
ANR	1666707	CallExpression	"push_inst_nodebug ( compiler , bits )"		1666424	0					
ANR	1666708	Callee	push_inst_nodebug		1666424	0					
ANR	1666709	Identifier	push_inst_nodebug		1666424	0					
ANR	1666710	ArgumentList	compiler		1666424	1					
ANR	1666711	Argument	compiler		1666424	0					
ANR	1666712	Identifier	compiler		1666424	0					
ANR	1666713	Argument	bits		1666424	1					
ANR	1666714	Identifier	bits		1666424	0					
ANR	1666715	ElseStatement	else		1666424	0					
ANR	1666716	CompoundStatement		74:8:1756:1756	1666424	0					
ANR	1666717	ExpressionStatement	inst_buf_index = 1	704:2:22394:22412	1666424	0	True				
ANR	1666718	AssignmentExpression	inst_buf_index = 1		1666424	0		=			
ANR	1666719	Identifier	inst_buf_index		1666424	0					
ANR	1666720	PrimaryExpression	1		1666424	1					
ANR	1666721	ExpressionStatement	inst_buf [ 0 ] = inst0	705:2:22416:22435	1666424	1	True				
ANR	1666722	AssignmentExpression	inst_buf [ 0 ] = inst0		1666424	0		=			
ANR	1666723	ArrayIndexing	inst_buf [ 0 ]		1666424	0					
ANR	1666724	Identifier	inst_buf		1666424	0					
ANR	1666725	PrimaryExpression	0		1666424	1					
ANR	1666726	Identifier	inst0		1666424	1					
ANR	1666727	ExpressionStatement	inst_buf [ 1 ] = inst1	706:2:22439:22458	1666424	2	True				
ANR	1666728	AssignmentExpression	inst_buf [ 1 ] = inst1		1666424	0		=			
ANR	1666729	ArrayIndexing	inst_buf [ 1 ]		1666424	0					
ANR	1666730	Identifier	inst_buf		1666424	0					
ANR	1666731	PrimaryExpression	1		1666424	1					
ANR	1666732	Identifier	inst1		1666424	1					
ANR	1666733	ExpressionStatement	inst_buf [ 2 ] = inst2	707:2:22462:22481	1666424	3	True				
ANR	1666734	AssignmentExpression	inst_buf [ 2 ] = inst2		1666424	0		=			
ANR	1666735	ArrayIndexing	inst_buf [ 2 ]		1666424	0					
ANR	1666736	Identifier	inst_buf		1666424	0					
ANR	1666737	PrimaryExpression	2		1666424	1					
ANR	1666738	Identifier	inst2		1666424	1					
ANR	1666739	IfStatement	if ( assign_pipes ( ) == 0 )		1666424	4					
ANR	1666740	Condition	assign_pipes ( ) == 0	708:6:22489:22507	1666424	0	True				
ANR	1666741	EqualityExpression	assign_pipes ( ) == 0		1666424	0		==			
ANR	1666742	CallExpression	assign_pipes ( )		1666424	0					
ANR	1666743	Callee	assign_pipes		1666424	0					
ANR	1666744	Identifier	assign_pipes		1666424	0					
ANR	1666745	ArgumentList			1666424	1					
ANR	1666746	PrimaryExpression	0		1666424	1					
ANR	1666747	CompoundStatement		82:27:2087:2087	1666424	1					
ANR	1666748	ForStatement	for ( i = 0 ; i < inst_buf_index ; i ++ )		1666424	0					
ANR	1666749	ForInit	i = 0 ;	709:8:22520:22525	1666424	0	True				
ANR	1666750	AssignmentExpression	i = 0		1666424	0		=			
ANR	1666751	Identifier	i		1666424	0					
ANR	1666752	PrimaryExpression	0		1666424	1					
ANR	1666753	Condition	i < inst_buf_index	709:15:22527:22544	1666424	1	True				
ANR	1666754	RelationalExpression	i < inst_buf_index		1666424	0		<			
ANR	1666755	Identifier	i		1666424	0					
ANR	1666756	Identifier	inst_buf_index		1666424	1					
ANR	1666757	PostIncDecOperationExpression	i ++	709:35:22547:22549	1666424	2	True				
ANR	1666758	Identifier	i		1666424	0					
ANR	1666759	IncDec	++		1666424	1					
ANR	1666760	CompoundStatement		83:40:2129:2129	1666424	3					
ANR	1666761	ExpressionStatement	bits |= get_bundle_bit ( inst_buf + i )	710:4:22558:22594	1666424	0	True				
ANR	1666762	AssignmentExpression	bits |= get_bundle_bit ( inst_buf + i )		1666424	0		|=			
ANR	1666763	Identifier	bits		1666424	0					
ANR	1666764	CallExpression	get_bundle_bit ( inst_buf + i )		1666424	1					
ANR	1666765	Callee	get_bundle_bit		1666424	0					
ANR	1666766	Identifier	get_bundle_bit		1666424	0					
ANR	1666767	ArgumentList	inst_buf + i		1666424	1					
ANR	1666768	Argument	inst_buf + i		1666424	0					
ANR	1666769	AdditiveExpression	inst_buf + i		1666424	0		+			
ANR	1666770	Identifier	inst_buf		1666424	0					
ANR	1666771	Identifier	i		1666424	1					
ANR	1666772	ExpressionStatement	"printf ( ""|%04d"" , inst_buf [ i ] . line )"	712:4:22624:22657	1666424	1	True				
ANR	1666773	CallExpression	"printf ( ""|%04d"" , inst_buf [ i ] . line )"		1666424	0					
ANR	1666774	Callee	printf		1666424	0					
ANR	1666775	Identifier	printf		1666424	0					
ANR	1666776	ArgumentList	"""|%04d"""		1666424	1					
ANR	1666777	Argument	"""|%04d"""		1666424	0					
ANR	1666778	PrimaryExpression	"""|%04d"""		1666424	0					
ANR	1666779	Argument	inst_buf [ i ] . line		1666424	1					
ANR	1666780	MemberAccess	inst_buf [ i ] . line		1666424	0					
ANR	1666781	ArrayIndexing	inst_buf [ i ]		1666424	0					
ANR	1666782	Identifier	inst_buf		1666424	0					
ANR	1666783	Identifier	i		1666424	1					
ANR	1666784	Identifier	line		1666424	1					
ANR	1666785	IfStatement	if ( inst_buf_index == 3 )		1666424	1					
ANR	1666786	Condition	inst_buf_index == 3	717:7:22703:22721	1666424	0	True				
ANR	1666787	EqualityExpression	inst_buf_index == 3		1666424	0		==			
ANR	1666788	Identifier	inst_buf_index		1666424	0					
ANR	1666789	PrimaryExpression	3		1666424	1					
ANR	1666790	ExpressionStatement	"printf ( ""|M2|:\\t"" )"	718:4:22728:22745	1666424	1	True				
ANR	1666791	CallExpression	"printf ( ""|M2|:\\t"" )"		1666424	0					
ANR	1666792	Callee	printf		1666424	0					
ANR	1666793	Identifier	printf		1666424	0					
ANR	1666794	ArgumentList	"""|M2|:\\t"""		1666424	1					
ANR	1666795	Argument	"""|M2|:\\t"""		1666424	0					
ANR	1666796	PrimaryExpression	"""|M2|:\\t"""		1666424	0					
ANR	1666797	ElseStatement	else		1666424	0					
ANR	1666798	ExpressionStatement	"printf ( ""|M2|:\\t\\t"" )"	720:4:22759:22778	1666424	0	True				
ANR	1666799	CallExpression	"printf ( ""|M2|:\\t\\t"" )"		1666424	0					
ANR	1666800	Callee	printf		1666424	0					
ANR	1666801	Identifier	printf		1666424	0					
ANR	1666802	ArgumentList	"""|M2|:\\t\\t"""		1666424	1					
ANR	1666803	Argument	"""|M2|:\\t\\t"""		1666424	0					
ANR	1666804	PrimaryExpression	"""|M2|:\\t\\t"""		1666424	0					
ANR	1666805	ExpressionStatement	print_insn_tilegx ( & bits )	721:3:22783:22807	1666424	2	True				
ANR	1666806	CallExpression	print_insn_tilegx ( & bits )		1666424	0					
ANR	1666807	Callee	print_insn_tilegx		1666424	0					
ANR	1666808	Identifier	print_insn_tilegx		1666424	0					
ANR	1666809	ArgumentList	& bits		1666424	1					
ANR	1666810	Argument	& bits		1666424	0					
ANR	1666811	UnaryOperationExpression	& bits		1666424	0					
ANR	1666812	UnaryOperator	&		1666424	0					
ANR	1666813	Identifier	bits		1666424	1					
ANR	1666814	ExpressionStatement	inst_buf [ 0 ] = inst1	724:3:22820:22839	1666424	3	True				
ANR	1666815	AssignmentExpression	inst_buf [ 0 ] = inst1		1666424	0		=			
ANR	1666816	ArrayIndexing	inst_buf [ 0 ]		1666424	0					
ANR	1666817	Identifier	inst_buf		1666424	0					
ANR	1666818	PrimaryExpression	0		1666424	1					
ANR	1666819	Identifier	inst1		1666424	1					
ANR	1666820	ExpressionStatement	inst_buf [ 1 ] = inst2	725:3:22844:22863	1666424	4	True				
ANR	1666821	AssignmentExpression	inst_buf [ 1 ] = inst2		1666424	0		=			
ANR	1666822	ArrayIndexing	inst_buf [ 1 ]		1666424	0					
ANR	1666823	Identifier	inst_buf		1666424	0					
ANR	1666824	PrimaryExpression	1		1666424	1					
ANR	1666825	Identifier	inst2		1666424	1					
ANR	1666826	ExpressionStatement	inst_buf_index = orig_index - 1	726:3:22868:22899	1666424	5	True				
ANR	1666827	AssignmentExpression	inst_buf_index = orig_index - 1		1666424	0		=			
ANR	1666828	Identifier	inst_buf_index		1666424	0					
ANR	1666829	AdditiveExpression	orig_index - 1		1666424	1		-			
ANR	1666830	Identifier	orig_index		1666424	0					
ANR	1666831	PrimaryExpression	1		1666424	1					
ANR	1666832	ReturnStatement	"return push_inst_nodebug ( compiler , bits ) ;"	728:3:22928:22968	1666424	6	True				
ANR	1666833	CallExpression	"push_inst_nodebug ( compiler , bits )"		1666424	0					
ANR	1666834	Callee	push_inst_nodebug		1666424	0					
ANR	1666835	Identifier	push_inst_nodebug		1666424	0					
ANR	1666836	ArgumentList	compiler		1666424	1					
ANR	1666837	Argument	compiler		1666424	0					
ANR	1666838	Identifier	compiler		1666424	0					
ANR	1666839	Argument	bits		1666424	1					
ANR	1666840	Identifier	bits		1666424	0					
ANR	1666841	ElseStatement	else		1666424	0					
ANR	1666842	ExpressionStatement	SLJIT_ASSERT_STOP ( )	733:3:23032:23051	1666424	0	True				
ANR	1666843	CallExpression	SLJIT_ASSERT_STOP ( )		1666424	0					
ANR	1666844	Callee	SLJIT_ASSERT_STOP		1666424	0					
ANR	1666845	Identifier	SLJIT_ASSERT_STOP		1666424	0					
ANR	1666846	ArgumentList			1666424	1					
ANR	1666847	ExpressionStatement	SLJIT_ASSERT_STOP ( )	736:1:23058:23077	1666424	13	True				
ANR	1666848	CallExpression	SLJIT_ASSERT_STOP ( )		1666424	0					
ANR	1666849	Callee	SLJIT_ASSERT_STOP		1666424	0					
ANR	1666850	Identifier	SLJIT_ASSERT_STOP		1666424	0					
ANR	1666851	ArgumentList			1666424	1					
ANR	1666852	ReturnType	static sljit_si		1666424	1					
ANR	1666853	Identifier	update_buffer		1666424	2					
ANR	1666854	ParameterList	struct sljit_compiler * compiler		1666424	3					
ANR	1666855	Parameter	struct sljit_compiler * compiler	626:30:20389:20419	1666424	0	True				
ANR	1666856	ParameterType	struct sljit_compiler *		1666424	0					
ANR	1666857	Identifier	compiler		1666424	1					
ANR	1666858	CFGEntryNode	ENTRY		1666424		True				
ANR	1666859	CFGExitNode	EXIT		1666424		True				
ANR	1666860	Symbol	push_inst_nodebug		1666424						
ANR	1666861	Symbol	count		1666424						
ANR	1666862	Symbol	bits		1666424						
ANR	1666863	Symbol	i		1666424						
ANR	1666864	Symbol	& bits		1666424						
ANR	1666865	Symbol	assign_pipes		1666424						
ANR	1666866	Symbol	inst_buf_index		1666424						
ANR	1666867	Symbol	inst_buf		1666424						
ANR	1666868	Symbol	inst_buf [ i ] . line		1666424						
ANR	1666869	Symbol	inst1		1666424						
ANR	1666870	Symbol	inst0		1666424						
ANR	1666871	Symbol	orig_index		1666424						
ANR	1666872	Symbol	* i		1666424						
ANR	1666873	Symbol	inst2		1666424						
ANR	1666874	Symbol	compiler		1666424						
ANR	1666875	Symbol	* inst_buf		1666424						
ANR	1666876	Symbol	get_bundle_bit		1666424						
ANR	1666877	Function	flush_buffer	739:0:23082:23202							
ANR	1666878	FunctionDef	flush_buffer (struct sljit_compiler * compiler)		1666877	0					
ANR	1666879	CompoundStatement		740:0:23144:23202	1666877	0					
ANR	1666880	WhileStatement	while ( inst_buf_index != 0 )		1666877	0					
ANR	1666881	Condition	inst_buf_index != 0	741:8:23154:23172	1666877	0	True				
ANR	1666882	EqualityExpression	inst_buf_index != 0		1666877	0		!=			
ANR	1666883	Identifier	inst_buf_index		1666877	0					
ANR	1666884	PrimaryExpression	0		1666877	1					
ANR	1666885	ExpressionStatement	update_buffer ( compiler )	742:2:23177:23200	1666877	1	True				
ANR	1666886	CallExpression	update_buffer ( compiler )		1666877	0					
ANR	1666887	Callee	update_buffer		1666877	0					
ANR	1666888	Identifier	update_buffer		1666877	0					
ANR	1666889	ArgumentList	compiler		1666877	1					
ANR	1666890	Argument	compiler		1666877	0					
ANR	1666891	Identifier	compiler		1666877	0					
ANR	1666892	ReturnType	static sljit_si		1666877	1					
ANR	1666893	Identifier	flush_buffer		1666877	2					
ANR	1666894	ParameterList	struct sljit_compiler * compiler		1666877	3					
ANR	1666895	Parameter	struct sljit_compiler * compiler	739:29:23111:23141	1666877	0	True				
ANR	1666896	ParameterType	struct sljit_compiler *		1666877	0					
ANR	1666897	Identifier	compiler		1666877	1					
ANR	1666898	CFGEntryNode	ENTRY		1666877		True				
ANR	1666899	CFGExitNode	EXIT		1666877		True				
ANR	1666900	Symbol	compiler		1666877						
ANR	1666901	Symbol	inst_buf_index		1666877						
ANR	1666902	Function	push_4_buffer	745:0:23205:23990							
ANR	1666903	FunctionDef	"push_4_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int op3 , int line)"		1666902	0					
ANR	1666904	CompoundStatement		746:0:23335:23990	1666902	0					
ANR	1666905	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1666902	0					
ANR	1666906	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	747:5:23342:23393	1666902	0	True				
ANR	1666907	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1666902	0		==			
ANR	1666908	Identifier	inst_buf_index		1666902	0					
ANR	1666909	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1666902	1					
ANR	1666910	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	748:2:23398:23430	1666902	1	True				
ANR	1666911	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1666902	0					
ANR	1666912	Callee	FAIL_IF		1666902	0					
ANR	1666913	Identifier	FAIL_IF		1666902	0					
ANR	1666914	ArgumentList	update_buffer ( compiler )		1666902	1					
ANR	1666915	Argument	update_buffer ( compiler )		1666902	0					
ANR	1666916	CallExpression	update_buffer ( compiler )		1666902	0					
ANR	1666917	Callee	update_buffer		1666902	0					
ANR	1666918	Identifier	update_buffer		1666902	0					
ANR	1666919	ArgumentList	compiler		1666902	1					
ANR	1666920	Argument	compiler		1666902	0					
ANR	1666921	Identifier	compiler		1666902	0					
ANR	1666922	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	750:1:23434:23491	1666902	1	True				
ANR	1666923	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1666902	0					
ANR	1666924	IdentifierDeclType	const struct tilegx_opcode *		1666902	0					
ANR	1666925	Identifier	opcode		1666902	1					
ANR	1666926	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1666902	2		=			
ANR	1666927	Identifier	opcode		1666902	0					
ANR	1666928	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1666902	1					
ANR	1666929	UnaryOperator	&		1666902	0					
ANR	1666930	ArrayIndexing	tilegx_opcodes [ opc ]		1666902	1					
ANR	1666931	Identifier	tilegx_opcodes		1666902	0					
ANR	1666932	Identifier	opc		1666902	1					
ANR	1666933	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	751:1:23494:23534	1666902	2	True				
ANR	1666934	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1666902	0		=			
ANR	1666935	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1666902	0					
ANR	1666936	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1666937	Identifier	inst_buf		1666902	0					
ANR	1666938	Identifier	inst_buf_index		1666902	1					
ANR	1666939	Identifier	opcode		1666902	1					
ANR	1666940	Identifier	opcode		1666902	1					
ANR	1666941	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	752:1:23537:23595	1666902	3	True				
ANR	1666942	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1666902	0		=			
ANR	1666943	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1666902	0					
ANR	1666944	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1666945	Identifier	inst_buf		1666902	0					
ANR	1666946	Identifier	inst_buf_index		1666902	1					
ANR	1666947	Identifier	pipe		1666902	1					
ANR	1666948	CallExpression	get_any_valid_pipe ( opcode )		1666902	1					
ANR	1666949	Callee	get_any_valid_pipe		1666902	0					
ANR	1666950	Identifier	get_any_valid_pipe		1666902	0					
ANR	1666951	ArgumentList	opcode		1666902	1					
ANR	1666952	Argument	opcode		1666902	0					
ANR	1666953	Identifier	opcode		1666902	0					
ANR	1666954	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	753:1:23598:23645	1666902	4	True				
ANR	1666955	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1666902	0		=			
ANR	1666956	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1666902	0					
ANR	1666957	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1666902	0					
ANR	1666958	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1666959	Identifier	inst_buf		1666902	0					
ANR	1666960	Identifier	inst_buf_index		1666902	1					
ANR	1666961	Identifier	operand_value		1666902	1					
ANR	1666962	PrimaryExpression	0		1666902	1					
ANR	1666963	Identifier	op0		1666902	1					
ANR	1666964	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1	754:1:23648:23695	1666902	5	True				
ANR	1666965	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1		1666902	0		=			
ANR	1666966	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 1 ]		1666902	0					
ANR	1666967	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1666902	0					
ANR	1666968	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1666969	Identifier	inst_buf		1666902	0					
ANR	1666970	Identifier	inst_buf_index		1666902	1					
ANR	1666971	Identifier	operand_value		1666902	1					
ANR	1666972	PrimaryExpression	1		1666902	1					
ANR	1666973	Identifier	op1		1666902	1					
ANR	1666974	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2	755:1:23698:23745	1666902	6	True				
ANR	1666975	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2		1666902	0		=			
ANR	1666976	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 2 ]		1666902	0					
ANR	1666977	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1666902	0					
ANR	1666978	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1666979	Identifier	inst_buf		1666902	0					
ANR	1666980	Identifier	inst_buf_index		1666902	1					
ANR	1666981	Identifier	operand_value		1666902	1					
ANR	1666982	PrimaryExpression	2		1666902	1					
ANR	1666983	Identifier	op2		1666902	1					
ANR	1666984	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 3 ] = op3	756:1:23748:23795	1666902	7	True				
ANR	1666985	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 3 ] = op3		1666902	0		=			
ANR	1666986	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 3 ]		1666902	0					
ANR	1666987	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1666902	0					
ANR	1666988	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1666989	Identifier	inst_buf		1666902	0					
ANR	1666990	Identifier	inst_buf_index		1666902	1					
ANR	1666991	Identifier	operand_value		1666902	1					
ANR	1666992	PrimaryExpression	3		1666902	1					
ANR	1666993	Identifier	op3		1666902	1					
ANR	1666994	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	757:1:23798:23850	1666902	8	True				
ANR	1666995	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1666902	0		=			
ANR	1666996	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1666902	0					
ANR	1666997	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1666998	Identifier	inst_buf		1666902	0					
ANR	1666999	Identifier	inst_buf_index		1666902	1					
ANR	1667000	Identifier	input_registers		1666902	1					
ANR	1667001	ShiftExpression	1L << op1		1666902	1		<<			
ANR	1667002	PrimaryExpression	1L		1666902	0					
ANR	1667003	Identifier	op1		1666902	1					
ANR	1667004	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	758:1:23853:23906	1666902	9	True				
ANR	1667005	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1666902	0		=			
ANR	1667006	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1666902	0					
ANR	1667007	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1667008	Identifier	inst_buf		1666902	0					
ANR	1667009	Identifier	inst_buf_index		1666902	1					
ANR	1667010	Identifier	output_registers		1666902	1					
ANR	1667011	ShiftExpression	1L << op0		1666902	1		<<			
ANR	1667012	PrimaryExpression	1L		1666902	0					
ANR	1667013	Identifier	op0		1666902	1					
ANR	1667014	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	759:1:23909:23945	1666902	10	True				
ANR	1667015	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1666902	0		=			
ANR	1667016	MemberAccess	inst_buf [ inst_buf_index ] . line		1666902	0					
ANR	1667017	ArrayIndexing	inst_buf [ inst_buf_index ]		1666902	0					
ANR	1667018	Identifier	inst_buf		1666902	0					
ANR	1667019	Identifier	inst_buf_index		1666902	1					
ANR	1667020	Identifier	line		1666902	1					
ANR	1667021	Identifier	line		1666902	1					
ANR	1667022	ExpressionStatement	inst_buf_index ++	760:1:23948:23964	1666902	11	True				
ANR	1667023	PostIncDecOperationExpression	inst_buf_index ++		1666902	0					
ANR	1667024	Identifier	inst_buf_index		1666902	0					
ANR	1667025	IncDec	++		1666902	1					
ANR	1667026	ReturnStatement	return SLJIT_SUCCESS ;	762:1:23968:23988	1666902	12	True				
ANR	1667027	Identifier	SLJIT_SUCCESS		1666902	0					
ANR	1667028	ReturnType	static sljit_si		1666902	1					
ANR	1667029	Identifier	push_4_buffer		1666902	2					
ANR	1667030	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int op3 , int line"		1666902	3					
ANR	1667031	Parameter	struct sljit_compiler * compiler	745:30:23235:23265	1666902	0	True				
ANR	1667032	ParameterType	struct sljit_compiler *		1666902	0					
ANR	1667033	Identifier	compiler		1666902	1					
ANR	1667034	Parameter	tilegx_mnemonic opc	745:63:23268:23286	1666902	1	True				
ANR	1667035	ParameterType	tilegx_mnemonic		1666902	0					
ANR	1667036	Identifier	opc		1666902	1					
ANR	1667037	Parameter	int op0	745:84:23289:23295	1666902	2	True				
ANR	1667038	ParameterType	int		1666902	0					
ANR	1667039	Identifier	op0		1666902	1					
ANR	1667040	Parameter	int op1	745:93:23298:23304	1666902	3	True				
ANR	1667041	ParameterType	int		1666902	0					
ANR	1667042	Identifier	op1		1666902	1					
ANR	1667043	Parameter	int op2	745:102:23307:23313	1666902	4	True				
ANR	1667044	ParameterType	int		1666902	0					
ANR	1667045	Identifier	op2		1666902	1					
ANR	1667046	Parameter	int op3	745:111:23316:23322	1666902	5	True				
ANR	1667047	ParameterType	int		1666902	0					
ANR	1667048	Identifier	op3		1666902	1					
ANR	1667049	Parameter	int line	745:120:23325:23332	1666902	6	True				
ANR	1667050	ParameterType	int		1666902	0					
ANR	1667051	Identifier	line		1666902	1					
ANR	1667052	CFGEntryNode	ENTRY		1666902		True				
ANR	1667053	CFGExitNode	EXIT		1666902		True				
ANR	1667054	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1666902						
ANR	1667055	Symbol	line		1666902						
ANR	1667056	Symbol	opcode		1666902						
ANR	1667057	Symbol	* * inst_buf		1666902						
ANR	1667058	Symbol	* * inst_buf_index		1666902						
ANR	1667059	Symbol	compiler		1666902						
ANR	1667060	Symbol	update_buffer		1666902						
ANR	1667061	Symbol	* inst_buf		1666902						
ANR	1667062	Symbol	inst_buf [ inst_buf_index ] . input_registers		1666902						
ANR	1667063	Symbol	inst_buf [ inst_buf_index ] . operand_value		1666902						
ANR	1667064	Symbol	inst_buf [ inst_buf_index ] . pipe		1666902						
ANR	1667065	Symbol	opc		1666902						
ANR	1667066	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1666902						
ANR	1667067	Symbol	SLJIT_SUCCESS		1666902						
ANR	1667068	Symbol	op0		1666902						
ANR	1667069	Symbol	inst_buf_index		1666902						
ANR	1667070	Symbol	inst_buf		1666902						
ANR	1667071	Symbol	op2		1666902						
ANR	1667072	Symbol	op1		1666902						
ANR	1667073	Symbol	inst_buf [ inst_buf_index ] . opcode		1666902						
ANR	1667074	Symbol	op3		1666902						
ANR	1667075	Symbol	tilegx_opcodes		1666902						
ANR	1667076	Symbol	inst_buf [ inst_buf_index ] . output_registers		1666902						
ANR	1667077	Symbol	inst_buf [ inst_buf_index ] . line		1666902						
ANR	1667078	Symbol	* inst_buf_index		1666902						
ANR	1667079	Symbol	get_any_valid_pipe		1666902						
ANR	1667080	Function	push_3_buffer	765:0:23993:25820							
ANR	1667081	FunctionDef	"push_3_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int line)"		1667080	0					
ANR	1667082	CompoundStatement		766:0:24114:25820	1667080	0					
ANR	1667083	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1667080	0					
ANR	1667084	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	767:5:24121:24172	1667080	0	True				
ANR	1667085	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667080	0		==			
ANR	1667086	Identifier	inst_buf_index		1667080	0					
ANR	1667087	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667080	1					
ANR	1667088	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	768:2:24177:24209	1667080	1	True				
ANR	1667089	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1667080	0					
ANR	1667090	Callee	FAIL_IF		1667080	0					
ANR	1667091	Identifier	FAIL_IF		1667080	0					
ANR	1667092	ArgumentList	update_buffer ( compiler )		1667080	1					
ANR	1667093	Argument	update_buffer ( compiler )		1667080	0					
ANR	1667094	CallExpression	update_buffer ( compiler )		1667080	0					
ANR	1667095	Callee	update_buffer		1667080	0					
ANR	1667096	Identifier	update_buffer		1667080	0					
ANR	1667097	ArgumentList	compiler		1667080	1					
ANR	1667098	Argument	compiler		1667080	0					
ANR	1667099	Identifier	compiler		1667080	0					
ANR	1667100	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	770:1:24213:24270	1667080	1	True				
ANR	1667101	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1667080	0					
ANR	1667102	IdentifierDeclType	const struct tilegx_opcode *		1667080	0					
ANR	1667103	Identifier	opcode		1667080	1					
ANR	1667104	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1667080	2		=			
ANR	1667105	Identifier	opcode		1667080	0					
ANR	1667106	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1667080	1					
ANR	1667107	UnaryOperator	&		1667080	0					
ANR	1667108	ArrayIndexing	tilegx_opcodes [ opc ]		1667080	1					
ANR	1667109	Identifier	tilegx_opcodes		1667080	0					
ANR	1667110	Identifier	opc		1667080	1					
ANR	1667111	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	771:1:24273:24313	1667080	2	True				
ANR	1667112	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1667080	0		=			
ANR	1667113	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1667080	0					
ANR	1667114	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667115	Identifier	inst_buf		1667080	0					
ANR	1667116	Identifier	inst_buf_index		1667080	1					
ANR	1667117	Identifier	opcode		1667080	1					
ANR	1667118	Identifier	opcode		1667080	1					
ANR	1667119	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	772:1:24316:24374	1667080	3	True				
ANR	1667120	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1667080	0		=			
ANR	1667121	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1667080	0					
ANR	1667122	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667123	Identifier	inst_buf		1667080	0					
ANR	1667124	Identifier	inst_buf_index		1667080	1					
ANR	1667125	Identifier	pipe		1667080	1					
ANR	1667126	CallExpression	get_any_valid_pipe ( opcode )		1667080	1					
ANR	1667127	Callee	get_any_valid_pipe		1667080	0					
ANR	1667128	Identifier	get_any_valid_pipe		1667080	0					
ANR	1667129	ArgumentList	opcode		1667080	1					
ANR	1667130	Argument	opcode		1667080	0					
ANR	1667131	Identifier	opcode		1667080	0					
ANR	1667132	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	773:1:24377:24424	1667080	4	True				
ANR	1667133	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1667080	0		=			
ANR	1667134	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1667080	0					
ANR	1667135	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1667080	0					
ANR	1667136	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667137	Identifier	inst_buf		1667080	0					
ANR	1667138	Identifier	inst_buf_index		1667080	1					
ANR	1667139	Identifier	operand_value		1667080	1					
ANR	1667140	PrimaryExpression	0		1667080	1					
ANR	1667141	Identifier	op0		1667080	1					
ANR	1667142	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1	774:1:24427:24474	1667080	5	True				
ANR	1667143	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1		1667080	0		=			
ANR	1667144	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 1 ]		1667080	0					
ANR	1667145	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1667080	0					
ANR	1667146	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667147	Identifier	inst_buf		1667080	0					
ANR	1667148	Identifier	inst_buf_index		1667080	1					
ANR	1667149	Identifier	operand_value		1667080	1					
ANR	1667150	PrimaryExpression	1		1667080	1					
ANR	1667151	Identifier	op1		1667080	1					
ANR	1667152	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2	775:1:24477:24524	1667080	6	True				
ANR	1667153	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 2 ] = op2		1667080	0		=			
ANR	1667154	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 2 ]		1667080	0					
ANR	1667155	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1667080	0					
ANR	1667156	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667157	Identifier	inst_buf		1667080	0					
ANR	1667158	Identifier	inst_buf_index		1667080	1					
ANR	1667159	Identifier	operand_value		1667080	1					
ANR	1667160	PrimaryExpression	2		1667080	1					
ANR	1667161	Identifier	op2		1667080	1					
ANR	1667162	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	776:1:24527:24563	1667080	7	True				
ANR	1667163	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1667080	0		=			
ANR	1667164	MemberAccess	inst_buf [ inst_buf_index ] . line		1667080	0					
ANR	1667165	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667166	Identifier	inst_buf		1667080	0					
ANR	1667167	Identifier	inst_buf_index		1667080	1					
ANR	1667168	Identifier	line		1667080	1					
ANR	1667169	Identifier	line		1667080	1					
ANR	1667170	SwitchStatement	switch ( opc )		1667080	8					
ANR	1667171	Condition	opc	778:9:24575:24577	1667080	0	True				
ANR	1667172	Identifier	opc		1667080	0					
ANR	1667173	CompoundStatement		13:14:465:465	1667080	1					
ANR	1667174	Label	case TILEGX_OPC_ST_ADD :	779:1:24583:24605	1667080	0	True				
ANR	1667175	Identifier	TILEGX_OPC_ST_ADD		1667080	0					
ANR	1667176	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )	780:2:24609:24677	1667080	1	True				
ANR	1667177	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )		1667080	0		=			
ANR	1667178	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667080	0					
ANR	1667179	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667180	Identifier	inst_buf		1667080	0					
ANR	1667181	Identifier	inst_buf_index		1667080	1					
ANR	1667182	Identifier	input_registers		1667080	1					
ANR	1667183	InclusiveOrExpression	( 1L << op0 ) | ( 1L << op1 )		1667080	1		|			
ANR	1667184	ShiftExpression	1L << op0		1667080	0		<<			
ANR	1667185	PrimaryExpression	1L		1667080	0					
ANR	1667186	Identifier	op0		1667080	1					
ANR	1667187	ShiftExpression	1L << op1		1667080	1		<<			
ANR	1667188	PrimaryExpression	1L		1667080	0					
ANR	1667189	Identifier	op1		1667080	1					
ANR	1667190	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	781:2:24681:24734	1667080	2	True				
ANR	1667191	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1667080	0		=			
ANR	1667192	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667080	0					
ANR	1667193	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667194	Identifier	inst_buf		1667080	0					
ANR	1667195	Identifier	inst_buf_index		1667080	1					
ANR	1667196	Identifier	output_registers		1667080	1					
ANR	1667197	ShiftExpression	1L << op0		1667080	1		<<			
ANR	1667198	PrimaryExpression	1L		1667080	0					
ANR	1667199	Identifier	op0		1667080	1					
ANR	1667200	BreakStatement	break ;	782:2:24738:24743	1667080	3	True				
ANR	1667201	Label	case TILEGX_OPC_LD_ADD :	783:1:24746:24768	1667080	4	True				
ANR	1667202	Identifier	TILEGX_OPC_LD_ADD		1667080	0					
ANR	1667203	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	784:2:24772:24824	1667080	5	True				
ANR	1667204	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1667080	0		=			
ANR	1667205	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667080	0					
ANR	1667206	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667207	Identifier	inst_buf		1667080	0					
ANR	1667208	Identifier	inst_buf_index		1667080	1					
ANR	1667209	Identifier	input_registers		1667080	1					
ANR	1667210	ShiftExpression	1L << op1		1667080	1		<<			
ANR	1667211	PrimaryExpression	1L		1667080	0					
ANR	1667212	Identifier	op1		1667080	1					
ANR	1667213	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = ( 1L << op0 ) | ( 1L << op1 )	785:2:24828:24897	1667080	6	True				
ANR	1667214	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = ( 1L << op0 ) | ( 1L << op1 )		1667080	0		=			
ANR	1667215	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667080	0					
ANR	1667216	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667217	Identifier	inst_buf		1667080	0					
ANR	1667218	Identifier	inst_buf_index		1667080	1					
ANR	1667219	Identifier	output_registers		1667080	1					
ANR	1667220	InclusiveOrExpression	( 1L << op0 ) | ( 1L << op1 )		1667080	1		|			
ANR	1667221	ShiftExpression	1L << op0		1667080	0		<<			
ANR	1667222	PrimaryExpression	1L		1667080	0					
ANR	1667223	Identifier	op0		1667080	1					
ANR	1667224	ShiftExpression	1L << op1		1667080	1		<<			
ANR	1667225	PrimaryExpression	1L		1667080	0					
ANR	1667226	Identifier	op1		1667080	1					
ANR	1667227	BreakStatement	break ;	786:2:24901:24906	1667080	7	True				
ANR	1667228	Label	case TILEGX_OPC_ADD :	787:1:24909:24928	1667080	8	True				
ANR	1667229	Identifier	TILEGX_OPC_ADD		1667080	0					
ANR	1667230	Label	case TILEGX_OPC_AND :	788:1:24931:24950	1667080	9	True				
ANR	1667231	Identifier	TILEGX_OPC_AND		1667080	0					
ANR	1667232	Label	case TILEGX_OPC_SUB :	789:1:24953:24972	1667080	10	True				
ANR	1667233	Identifier	TILEGX_OPC_SUB		1667080	0					
ANR	1667234	Label	case TILEGX_OPC_OR :	790:1:24975:24993	1667080	11	True				
ANR	1667235	Identifier	TILEGX_OPC_OR		1667080	0					
ANR	1667236	Label	case TILEGX_OPC_XOR :	791:1:24996:25015	1667080	12	True				
ANR	1667237	Identifier	TILEGX_OPC_XOR		1667080	0					
ANR	1667238	Label	case TILEGX_OPC_NOR :	792:1:25018:25037	1667080	13	True				
ANR	1667239	Identifier	TILEGX_OPC_NOR		1667080	0					
ANR	1667240	Label	case TILEGX_OPC_SHL :	793:1:25040:25059	1667080	14	True				
ANR	1667241	Identifier	TILEGX_OPC_SHL		1667080	0					
ANR	1667242	Label	case TILEGX_OPC_SHRU :	794:1:25062:25082	1667080	15	True				
ANR	1667243	Identifier	TILEGX_OPC_SHRU		1667080	0					
ANR	1667244	Label	case TILEGX_OPC_SHRS :	795:1:25085:25105	1667080	16	True				
ANR	1667245	Identifier	TILEGX_OPC_SHRS		1667080	0					
ANR	1667246	Label	case TILEGX_OPC_CMPLTU :	796:1:25108:25130	1667080	17	True				
ANR	1667247	Identifier	TILEGX_OPC_CMPLTU		1667080	0					
ANR	1667248	Label	case TILEGX_OPC_CMPLTS :	797:1:25133:25155	1667080	18	True				
ANR	1667249	Identifier	TILEGX_OPC_CMPLTS		1667080	0					
ANR	1667250	Label	case TILEGX_OPC_CMOVEQZ :	798:1:25158:25181	1667080	19	True				
ANR	1667251	Identifier	TILEGX_OPC_CMOVEQZ		1667080	0					
ANR	1667252	Label	case TILEGX_OPC_CMOVNEZ :	799:1:25184:25207	1667080	20	True				
ANR	1667253	Identifier	TILEGX_OPC_CMOVNEZ		1667080	0					
ANR	1667254	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op1 ) | ( 1L << op2 )	800:2:25211:25279	1667080	21	True				
ANR	1667255	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op1 ) | ( 1L << op2 )		1667080	0		=			
ANR	1667256	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667080	0					
ANR	1667257	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667258	Identifier	inst_buf		1667080	0					
ANR	1667259	Identifier	inst_buf_index		1667080	1					
ANR	1667260	Identifier	input_registers		1667080	1					
ANR	1667261	InclusiveOrExpression	( 1L << op1 ) | ( 1L << op2 )		1667080	1		|			
ANR	1667262	ShiftExpression	1L << op1		1667080	0		<<			
ANR	1667263	PrimaryExpression	1L		1667080	0					
ANR	1667264	Identifier	op1		1667080	1					
ANR	1667265	ShiftExpression	1L << op2		1667080	1		<<			
ANR	1667266	PrimaryExpression	1L		1667080	0					
ANR	1667267	Identifier	op2		1667080	1					
ANR	1667268	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	801:2:25283:25336	1667080	22	True				
ANR	1667269	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1667080	0		=			
ANR	1667270	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667080	0					
ANR	1667271	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667272	Identifier	inst_buf		1667080	0					
ANR	1667273	Identifier	inst_buf_index		1667080	1					
ANR	1667274	Identifier	output_registers		1667080	1					
ANR	1667275	ShiftExpression	1L << op0		1667080	1		<<			
ANR	1667276	PrimaryExpression	1L		1667080	0					
ANR	1667277	Identifier	op0		1667080	1					
ANR	1667278	BreakStatement	break ;	802:2:25340:25345	1667080	23	True				
ANR	1667279	Label	case TILEGX_OPC_ADDLI :	803:1:25348:25369	1667080	24	True				
ANR	1667280	Identifier	TILEGX_OPC_ADDLI		1667080	0					
ANR	1667281	Label	case TILEGX_OPC_XORI :	804:1:25372:25392	1667080	25	True				
ANR	1667282	Identifier	TILEGX_OPC_XORI		1667080	0					
ANR	1667283	Label	case TILEGX_OPC_ORI :	805:1:25395:25414	1667080	26	True				
ANR	1667284	Identifier	TILEGX_OPC_ORI		1667080	0					
ANR	1667285	Label	case TILEGX_OPC_SHLI :	806:1:25417:25437	1667080	27	True				
ANR	1667286	Identifier	TILEGX_OPC_SHLI		1667080	0					
ANR	1667287	Label	case TILEGX_OPC_SHRUI :	807:1:25440:25461	1667080	28	True				
ANR	1667288	Identifier	TILEGX_OPC_SHRUI		1667080	0					
ANR	1667289	Label	case TILEGX_OPC_SHRSI :	808:1:25464:25485	1667080	29	True				
ANR	1667290	Identifier	TILEGX_OPC_SHRSI		1667080	0					
ANR	1667291	Label	case TILEGX_OPC_SHL16INSLI :	809:1:25488:25514	1667080	30	True				
ANR	1667292	Identifier	TILEGX_OPC_SHL16INSLI		1667080	0					
ANR	1667293	Label	case TILEGX_OPC_CMPLTUI :	810:1:25517:25540	1667080	31	True				
ANR	1667294	Identifier	TILEGX_OPC_CMPLTUI		1667080	0					
ANR	1667295	Label	case TILEGX_OPC_CMPLTSI :	811:1:25543:25566	1667080	32	True				
ANR	1667296	Identifier	TILEGX_OPC_CMPLTSI		1667080	0					
ANR	1667297	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	812:2:25570:25622	1667080	33	True				
ANR	1667298	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1667080	0		=			
ANR	1667299	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667080	0					
ANR	1667300	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667301	Identifier	inst_buf		1667080	0					
ANR	1667302	Identifier	inst_buf_index		1667080	1					
ANR	1667303	Identifier	input_registers		1667080	1					
ANR	1667304	ShiftExpression	1L << op1		1667080	1		<<			
ANR	1667305	PrimaryExpression	1L		1667080	0					
ANR	1667306	Identifier	op1		1667080	1					
ANR	1667307	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	813:2:25626:25679	1667080	34	True				
ANR	1667308	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1667080	0		=			
ANR	1667309	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667080	0					
ANR	1667310	ArrayIndexing	inst_buf [ inst_buf_index ]		1667080	0					
ANR	1667311	Identifier	inst_buf		1667080	0					
ANR	1667312	Identifier	inst_buf_index		1667080	1					
ANR	1667313	Identifier	output_registers		1667080	1					
ANR	1667314	ShiftExpression	1L << op0		1667080	1		<<			
ANR	1667315	PrimaryExpression	1L		1667080	0					
ANR	1667316	Identifier	op0		1667080	1					
ANR	1667317	BreakStatement	break ;	814:2:25683:25688	1667080	35	True				
ANR	1667318	Label	default :	815:1:25691:25698	1667080	36	True				
ANR	1667319	Identifier	default		1667080	0					
ANR	1667320	ExpressionStatement	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"	816:2:25702:25748	1667080	37	True				
ANR	1667321	CallExpression	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"		1667080	0					
ANR	1667322	Callee	printf		1667080	0					
ANR	1667323	Identifier	printf		1667080	0					
ANR	1667324	ArgumentList	"""unrecoginzed opc: %s\\n"""		1667080	1					
ANR	1667325	Argument	"""unrecoginzed opc: %s\\n"""		1667080	0					
ANR	1667326	PrimaryExpression	"""unrecoginzed opc: %s\\n"""		1667080	0					
ANR	1667327	Argument	opcode -> name		1667080	1					
ANR	1667328	PtrMemberAccess	opcode -> name		1667080	0					
ANR	1667329	Identifier	opcode		1667080	0					
ANR	1667330	Identifier	name		1667080	1					
ANR	1667331	ExpressionStatement	SLJIT_ASSERT_STOP ( )	817:2:25752:25771	1667080	38	True				
ANR	1667332	CallExpression	SLJIT_ASSERT_STOP ( )		1667080	0					
ANR	1667333	Callee	SLJIT_ASSERT_STOP		1667080	0					
ANR	1667334	Identifier	SLJIT_ASSERT_STOP		1667080	0					
ANR	1667335	ArgumentList			1667080	1					
ANR	1667336	ExpressionStatement	inst_buf_index ++	820:1:25778:25794	1667080	9	True				
ANR	1667337	PostIncDecOperationExpression	inst_buf_index ++		1667080	0					
ANR	1667338	Identifier	inst_buf_index		1667080	0					
ANR	1667339	IncDec	++		1667080	1					
ANR	1667340	ReturnStatement	return SLJIT_SUCCESS ;	822:1:25798:25818	1667080	10	True				
ANR	1667341	Identifier	SLJIT_SUCCESS		1667080	0					
ANR	1667342	ReturnType	static sljit_si		1667080	1					
ANR	1667343	Identifier	push_3_buffer		1667080	2					
ANR	1667344	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int op2 , int line"		1667080	3					
ANR	1667345	Parameter	struct sljit_compiler * compiler	765:30:24023:24053	1667080	0	True				
ANR	1667346	ParameterType	struct sljit_compiler *		1667080	0					
ANR	1667347	Identifier	compiler		1667080	1					
ANR	1667348	Parameter	tilegx_mnemonic opc	765:63:24056:24074	1667080	1	True				
ANR	1667349	ParameterType	tilegx_mnemonic		1667080	0					
ANR	1667350	Identifier	opc		1667080	1					
ANR	1667351	Parameter	int op0	765:84:24077:24083	1667080	2	True				
ANR	1667352	ParameterType	int		1667080	0					
ANR	1667353	Identifier	op0		1667080	1					
ANR	1667354	Parameter	int op1	765:93:24086:24092	1667080	3	True				
ANR	1667355	ParameterType	int		1667080	0					
ANR	1667356	Identifier	op1		1667080	1					
ANR	1667357	Parameter	int op2	765:102:24095:24101	1667080	4	True				
ANR	1667358	ParameterType	int		1667080	0					
ANR	1667359	Identifier	op2		1667080	1					
ANR	1667360	Parameter	int line	765:111:24104:24111	1667080	5	True				
ANR	1667361	ParameterType	int		1667080	0					
ANR	1667362	Identifier	line		1667080	1					
ANR	1667363	CFGEntryNode	ENTRY		1667080		True				
ANR	1667364	CFGExitNode	EXIT		1667080		True				
ANR	1667365	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1667080						
ANR	1667366	Symbol	line		1667080						
ANR	1667367	Symbol	opcode		1667080						
ANR	1667368	Symbol	* * inst_buf		1667080						
ANR	1667369	Symbol	* * inst_buf_index		1667080						
ANR	1667370	Symbol	compiler		1667080						
ANR	1667371	Symbol	update_buffer		1667080						
ANR	1667372	Symbol	* inst_buf		1667080						
ANR	1667373	Symbol	inst_buf [ inst_buf_index ] . input_registers		1667080						
ANR	1667374	Symbol	inst_buf [ inst_buf_index ] . operand_value		1667080						
ANR	1667375	Symbol	inst_buf [ inst_buf_index ] . pipe		1667080						
ANR	1667376	Symbol	opcode -> name		1667080						
ANR	1667377	Symbol	opc		1667080						
ANR	1667378	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667080						
ANR	1667379	Symbol	SLJIT_SUCCESS		1667080						
ANR	1667380	Symbol	op0		1667080						
ANR	1667381	Symbol	inst_buf_index		1667080						
ANR	1667382	Symbol	inst_buf		1667080						
ANR	1667383	Symbol	op2		1667080						
ANR	1667384	Symbol	op1		1667080						
ANR	1667385	Symbol	inst_buf [ inst_buf_index ] . opcode		1667080						
ANR	1667386	Symbol	tilegx_opcodes		1667080						
ANR	1667387	Symbol	inst_buf [ inst_buf_index ] . output_registers		1667080						
ANR	1667388	Symbol	inst_buf [ inst_buf_index ] . line		1667080						
ANR	1667389	Symbol	* inst_buf_index		1667080						
ANR	1667390	Symbol	get_any_valid_pipe		1667080						
ANR	1667391	Symbol	* opcode		1667080						
ANR	1667392	Function	push_2_buffer	825:0:25823:27114							
ANR	1667393	FunctionDef	"push_2_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int line)"		1667392	0					
ANR	1667394	CompoundStatement		826:0:25935:27114	1667392	0					
ANR	1667395	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1667392	0					
ANR	1667396	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	827:5:25942:25993	1667392	0	True				
ANR	1667397	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667392	0		==			
ANR	1667398	Identifier	inst_buf_index		1667392	0					
ANR	1667399	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667392	1					
ANR	1667400	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	828:2:25998:26030	1667392	1	True				
ANR	1667401	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1667392	0					
ANR	1667402	Callee	FAIL_IF		1667392	0					
ANR	1667403	Identifier	FAIL_IF		1667392	0					
ANR	1667404	ArgumentList	update_buffer ( compiler )		1667392	1					
ANR	1667405	Argument	update_buffer ( compiler )		1667392	0					
ANR	1667406	CallExpression	update_buffer ( compiler )		1667392	0					
ANR	1667407	Callee	update_buffer		1667392	0					
ANR	1667408	Identifier	update_buffer		1667392	0					
ANR	1667409	ArgumentList	compiler		1667392	1					
ANR	1667410	Argument	compiler		1667392	0					
ANR	1667411	Identifier	compiler		1667392	0					
ANR	1667412	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	830:1:26034:26091	1667392	1	True				
ANR	1667413	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1667392	0					
ANR	1667414	IdentifierDeclType	const struct tilegx_opcode *		1667392	0					
ANR	1667415	Identifier	opcode		1667392	1					
ANR	1667416	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1667392	2		=			
ANR	1667417	Identifier	opcode		1667392	0					
ANR	1667418	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1667392	1					
ANR	1667419	UnaryOperator	&		1667392	0					
ANR	1667420	ArrayIndexing	tilegx_opcodes [ opc ]		1667392	1					
ANR	1667421	Identifier	tilegx_opcodes		1667392	0					
ANR	1667422	Identifier	opc		1667392	1					
ANR	1667423	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	831:1:26094:26134	1667392	2	True				
ANR	1667424	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1667392	0		=			
ANR	1667425	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1667392	0					
ANR	1667426	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667427	Identifier	inst_buf		1667392	0					
ANR	1667428	Identifier	inst_buf_index		1667392	1					
ANR	1667429	Identifier	opcode		1667392	1					
ANR	1667430	Identifier	opcode		1667392	1					
ANR	1667431	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	832:1:26137:26195	1667392	3	True				
ANR	1667432	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1667392	0		=			
ANR	1667433	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1667392	0					
ANR	1667434	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667435	Identifier	inst_buf		1667392	0					
ANR	1667436	Identifier	inst_buf_index		1667392	1					
ANR	1667437	Identifier	pipe		1667392	1					
ANR	1667438	CallExpression	get_any_valid_pipe ( opcode )		1667392	1					
ANR	1667439	Callee	get_any_valid_pipe		1667392	0					
ANR	1667440	Identifier	get_any_valid_pipe		1667392	0					
ANR	1667441	ArgumentList	opcode		1667392	1					
ANR	1667442	Argument	opcode		1667392	0					
ANR	1667443	Identifier	opcode		1667392	0					
ANR	1667444	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	833:1:26198:26245	1667392	4	True				
ANR	1667445	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1667392	0		=			
ANR	1667446	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1667392	0					
ANR	1667447	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1667392	0					
ANR	1667448	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667449	Identifier	inst_buf		1667392	0					
ANR	1667450	Identifier	inst_buf_index		1667392	1					
ANR	1667451	Identifier	operand_value		1667392	1					
ANR	1667452	PrimaryExpression	0		1667392	1					
ANR	1667453	Identifier	op0		1667392	1					
ANR	1667454	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1	834:1:26248:26295	1667392	5	True				
ANR	1667455	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 1 ] = op1		1667392	0		=			
ANR	1667456	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 1 ]		1667392	0					
ANR	1667457	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1667392	0					
ANR	1667458	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667459	Identifier	inst_buf		1667392	0					
ANR	1667460	Identifier	inst_buf_index		1667392	1					
ANR	1667461	Identifier	operand_value		1667392	1					
ANR	1667462	PrimaryExpression	1		1667392	1					
ANR	1667463	Identifier	op1		1667392	1					
ANR	1667464	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	835:1:26298:26334	1667392	6	True				
ANR	1667465	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1667392	0		=			
ANR	1667466	MemberAccess	inst_buf [ inst_buf_index ] . line		1667392	0					
ANR	1667467	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667468	Identifier	inst_buf		1667392	0					
ANR	1667469	Identifier	inst_buf_index		1667392	1					
ANR	1667470	Identifier	line		1667392	1					
ANR	1667471	Identifier	line		1667392	1					
ANR	1667472	SwitchStatement	switch ( opc )		1667392	7					
ANR	1667473	Condition	opc	837:9:26346:26348	1667392	0	True				
ANR	1667474	Identifier	opc		1667392	0					
ANR	1667475	CompoundStatement		12:14:415:415	1667392	1					
ANR	1667476	Label	case TILEGX_OPC_BEQZ :	838:1:26354:26374	1667392	0	True				
ANR	1667477	Identifier	TILEGX_OPC_BEQZ		1667392	0					
ANR	1667478	Label	case TILEGX_OPC_BNEZ :	839:1:26377:26397	1667392	1	True				
ANR	1667479	Identifier	TILEGX_OPC_BNEZ		1667392	0					
ANR	1667480	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op0	840:2:26401:26453	1667392	2	True				
ANR	1667481	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op0		1667392	0		=			
ANR	1667482	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667392	0					
ANR	1667483	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667484	Identifier	inst_buf		1667392	0					
ANR	1667485	Identifier	inst_buf_index		1667392	1					
ANR	1667486	Identifier	input_registers		1667392	1					
ANR	1667487	ShiftExpression	1L << op0		1667392	1		<<			
ANR	1667488	PrimaryExpression	1L		1667392	0					
ANR	1667489	Identifier	op0		1667392	1					
ANR	1667490	BreakStatement	break ;	841:2:26457:26462	1667392	3	True				
ANR	1667491	Label	case TILEGX_OPC_ST :	842:1:26465:26483	1667392	4	True				
ANR	1667492	Identifier	TILEGX_OPC_ST		1667392	0					
ANR	1667493	Label	case TILEGX_OPC_ST1 :	843:1:26486:26505	1667392	5	True				
ANR	1667494	Identifier	TILEGX_OPC_ST1		1667392	0					
ANR	1667495	Label	case TILEGX_OPC_ST2 :	844:1:26508:26527	1667392	6	True				
ANR	1667496	Identifier	TILEGX_OPC_ST2		1667392	0					
ANR	1667497	Label	case TILEGX_OPC_ST4 :	845:1:26530:26549	1667392	7	True				
ANR	1667498	Identifier	TILEGX_OPC_ST4		1667392	0					
ANR	1667499	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )	846:2:26553:26621	1667392	8	True				
ANR	1667500	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = ( 1L << op0 ) | ( 1L << op1 )		1667392	0		=			
ANR	1667501	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667392	0					
ANR	1667502	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667503	Identifier	inst_buf		1667392	0					
ANR	1667504	Identifier	inst_buf_index		1667392	1					
ANR	1667505	Identifier	input_registers		1667392	1					
ANR	1667506	InclusiveOrExpression	( 1L << op0 ) | ( 1L << op1 )		1667392	1		|			
ANR	1667507	ShiftExpression	1L << op0		1667392	0		<<			
ANR	1667508	PrimaryExpression	1L		1667392	0					
ANR	1667509	Identifier	op0		1667392	1					
ANR	1667510	ShiftExpression	1L << op1		1667392	1		<<			
ANR	1667511	PrimaryExpression	1L		1667392	0					
ANR	1667512	Identifier	op1		1667392	1					
ANR	1667513	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 0	847:2:26625:26670	1667392	9	True				
ANR	1667514	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 0		1667392	0		=			
ANR	1667515	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667392	0					
ANR	1667516	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667517	Identifier	inst_buf		1667392	0					
ANR	1667518	Identifier	inst_buf_index		1667392	1					
ANR	1667519	Identifier	output_registers		1667392	1					
ANR	1667520	PrimaryExpression	0		1667392	1					
ANR	1667521	BreakStatement	break ;	848:2:26674:26679	1667392	10	True				
ANR	1667522	Label	case TILEGX_OPC_CLZ :	849:1:26682:26701	1667392	11	True				
ANR	1667523	Identifier	TILEGX_OPC_CLZ		1667392	0					
ANR	1667524	Label	case TILEGX_OPC_LD :	850:1:26704:26722	1667392	12	True				
ANR	1667525	Identifier	TILEGX_OPC_LD		1667392	0					
ANR	1667526	Label	case TILEGX_OPC_LD1U :	851:1:26725:26745	1667392	13	True				
ANR	1667527	Identifier	TILEGX_OPC_LD1U		1667392	0					
ANR	1667528	Label	case TILEGX_OPC_LD1S :	852:1:26748:26768	1667392	14	True				
ANR	1667529	Identifier	TILEGX_OPC_LD1S		1667392	0					
ANR	1667530	Label	case TILEGX_OPC_LD2U :	853:1:26771:26791	1667392	15	True				
ANR	1667531	Identifier	TILEGX_OPC_LD2U		1667392	0					
ANR	1667532	Label	case TILEGX_OPC_LD2S :	854:1:26794:26814	1667392	16	True				
ANR	1667533	Identifier	TILEGX_OPC_LD2S		1667392	0					
ANR	1667534	Label	case TILEGX_OPC_LD4U :	855:1:26817:26837	1667392	17	True				
ANR	1667535	Identifier	TILEGX_OPC_LD4U		1667392	0					
ANR	1667536	Label	case TILEGX_OPC_LD4S :	856:1:26840:26860	1667392	18	True				
ANR	1667537	Identifier	TILEGX_OPC_LD4S		1667392	0					
ANR	1667538	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op1	857:2:26864:26916	1667392	19	True				
ANR	1667539	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op1		1667392	0		=			
ANR	1667540	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667392	0					
ANR	1667541	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667542	Identifier	inst_buf		1667392	0					
ANR	1667543	Identifier	inst_buf_index		1667392	1					
ANR	1667544	Identifier	input_registers		1667392	1					
ANR	1667545	ShiftExpression	1L << op1		1667392	1		<<			
ANR	1667546	PrimaryExpression	1L		1667392	0					
ANR	1667547	Identifier	op1		1667392	1					
ANR	1667548	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 1L << op0	858:2:26920:26973	1667392	20	True				
ANR	1667549	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 1L << op0		1667392	0		=			
ANR	1667550	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667392	0					
ANR	1667551	ArrayIndexing	inst_buf [ inst_buf_index ]		1667392	0					
ANR	1667552	Identifier	inst_buf		1667392	0					
ANR	1667553	Identifier	inst_buf_index		1667392	1					
ANR	1667554	Identifier	output_registers		1667392	1					
ANR	1667555	ShiftExpression	1L << op0		1667392	1		<<			
ANR	1667556	PrimaryExpression	1L		1667392	0					
ANR	1667557	Identifier	op0		1667392	1					
ANR	1667558	BreakStatement	break ;	859:2:26977:26982	1667392	21	True				
ANR	1667559	Label	default :	860:1:26985:26992	1667392	22	True				
ANR	1667560	Identifier	default		1667392	0					
ANR	1667561	ExpressionStatement	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"	861:2:26996:27042	1667392	23	True				
ANR	1667562	CallExpression	"printf ( ""unrecoginzed opc: %s\\n"" , opcode -> name )"		1667392	0					
ANR	1667563	Callee	printf		1667392	0					
ANR	1667564	Identifier	printf		1667392	0					
ANR	1667565	ArgumentList	"""unrecoginzed opc: %s\\n"""		1667392	1					
ANR	1667566	Argument	"""unrecoginzed opc: %s\\n"""		1667392	0					
ANR	1667567	PrimaryExpression	"""unrecoginzed opc: %s\\n"""		1667392	0					
ANR	1667568	Argument	opcode -> name		1667392	1					
ANR	1667569	PtrMemberAccess	opcode -> name		1667392	0					
ANR	1667570	Identifier	opcode		1667392	0					
ANR	1667571	Identifier	name		1667392	1					
ANR	1667572	ExpressionStatement	SLJIT_ASSERT_STOP ( )	862:2:27046:27065	1667392	24	True				
ANR	1667573	CallExpression	SLJIT_ASSERT_STOP ( )		1667392	0					
ANR	1667574	Callee	SLJIT_ASSERT_STOP		1667392	0					
ANR	1667575	Identifier	SLJIT_ASSERT_STOP		1667392	0					
ANR	1667576	ArgumentList			1667392	1					
ANR	1667577	ExpressionStatement	inst_buf_index ++	865:1:27072:27088	1667392	8	True				
ANR	1667578	PostIncDecOperationExpression	inst_buf_index ++		1667392	0					
ANR	1667579	Identifier	inst_buf_index		1667392	0					
ANR	1667580	IncDec	++		1667392	1					
ANR	1667581	ReturnStatement	return SLJIT_SUCCESS ;	867:1:27092:27112	1667392	9	True				
ANR	1667582	Identifier	SLJIT_SUCCESS		1667392	0					
ANR	1667583	ReturnType	static sljit_si		1667392	1					
ANR	1667584	Identifier	push_2_buffer		1667392	2					
ANR	1667585	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int op1 , int line"		1667392	3					
ANR	1667586	Parameter	struct sljit_compiler * compiler	825:30:25853:25883	1667392	0	True				
ANR	1667587	ParameterType	struct sljit_compiler *		1667392	0					
ANR	1667588	Identifier	compiler		1667392	1					
ANR	1667589	Parameter	tilegx_mnemonic opc	825:63:25886:25904	1667392	1	True				
ANR	1667590	ParameterType	tilegx_mnemonic		1667392	0					
ANR	1667591	Identifier	opc		1667392	1					
ANR	1667592	Parameter	int op0	825:84:25907:25913	1667392	2	True				
ANR	1667593	ParameterType	int		1667392	0					
ANR	1667594	Identifier	op0		1667392	1					
ANR	1667595	Parameter	int op1	825:93:25916:25922	1667392	3	True				
ANR	1667596	ParameterType	int		1667392	0					
ANR	1667597	Identifier	op1		1667392	1					
ANR	1667598	Parameter	int line	825:102:25925:25932	1667392	4	True				
ANR	1667599	ParameterType	int		1667392	0					
ANR	1667600	Identifier	line		1667392	1					
ANR	1667601	CFGEntryNode	ENTRY		1667392		True				
ANR	1667602	CFGExitNode	EXIT		1667392		True				
ANR	1667603	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1667392						
ANR	1667604	Symbol	line		1667392						
ANR	1667605	Symbol	opcode		1667392						
ANR	1667606	Symbol	* * inst_buf		1667392						
ANR	1667607	Symbol	* * inst_buf_index		1667392						
ANR	1667608	Symbol	compiler		1667392						
ANR	1667609	Symbol	update_buffer		1667392						
ANR	1667610	Symbol	* inst_buf		1667392						
ANR	1667611	Symbol	inst_buf [ inst_buf_index ] . input_registers		1667392						
ANR	1667612	Symbol	inst_buf [ inst_buf_index ] . operand_value		1667392						
ANR	1667613	Symbol	inst_buf [ inst_buf_index ] . pipe		1667392						
ANR	1667614	Symbol	opcode -> name		1667392						
ANR	1667615	Symbol	opc		1667392						
ANR	1667616	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667392						
ANR	1667617	Symbol	SLJIT_SUCCESS		1667392						
ANR	1667618	Symbol	op0		1667392						
ANR	1667619	Symbol	inst_buf_index		1667392						
ANR	1667620	Symbol	inst_buf		1667392						
ANR	1667621	Symbol	op1		1667392						
ANR	1667622	Symbol	inst_buf [ inst_buf_index ] . opcode		1667392						
ANR	1667623	Symbol	tilegx_opcodes		1667392						
ANR	1667624	Symbol	inst_buf [ inst_buf_index ] . output_registers		1667392						
ANR	1667625	Symbol	inst_buf [ inst_buf_index ] . line		1667392						
ANR	1667626	Symbol	* inst_buf_index		1667392						
ANR	1667627	Symbol	get_any_valid_pipe		1667392						
ANR	1667628	Symbol	* opcode		1667392						
ANR	1667629	Function	push_0_buffer	870:0:27117:27650							
ANR	1667630	FunctionDef	"push_0_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int line)"		1667629	0					
ANR	1667631	CompoundStatement		871:0:27211:27650	1667629	0					
ANR	1667632	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1667629	0					
ANR	1667633	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	872:5:27218:27269	1667629	0	True				
ANR	1667634	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667629	0		==			
ANR	1667635	Identifier	inst_buf_index		1667629	0					
ANR	1667636	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667629	1					
ANR	1667637	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	873:2:27274:27306	1667629	1	True				
ANR	1667638	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1667629	0					
ANR	1667639	Callee	FAIL_IF		1667629	0					
ANR	1667640	Identifier	FAIL_IF		1667629	0					
ANR	1667641	ArgumentList	update_buffer ( compiler )		1667629	1					
ANR	1667642	Argument	update_buffer ( compiler )		1667629	0					
ANR	1667643	CallExpression	update_buffer ( compiler )		1667629	0					
ANR	1667644	Callee	update_buffer		1667629	0					
ANR	1667645	Identifier	update_buffer		1667629	0					
ANR	1667646	ArgumentList	compiler		1667629	1					
ANR	1667647	Argument	compiler		1667629	0					
ANR	1667648	Identifier	compiler		1667629	0					
ANR	1667649	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	875:1:27310:27367	1667629	1	True				
ANR	1667650	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1667629	0					
ANR	1667651	IdentifierDeclType	const struct tilegx_opcode *		1667629	0					
ANR	1667652	Identifier	opcode		1667629	1					
ANR	1667653	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1667629	2		=			
ANR	1667654	Identifier	opcode		1667629	0					
ANR	1667655	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1667629	1					
ANR	1667656	UnaryOperator	&		1667629	0					
ANR	1667657	ArrayIndexing	tilegx_opcodes [ opc ]		1667629	1					
ANR	1667658	Identifier	tilegx_opcodes		1667629	0					
ANR	1667659	Identifier	opc		1667629	1					
ANR	1667660	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	876:1:27370:27410	1667629	2	True				
ANR	1667661	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1667629	0		=			
ANR	1667662	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1667629	0					
ANR	1667663	ArrayIndexing	inst_buf [ inst_buf_index ]		1667629	0					
ANR	1667664	Identifier	inst_buf		1667629	0					
ANR	1667665	Identifier	inst_buf_index		1667629	1					
ANR	1667666	Identifier	opcode		1667629	1					
ANR	1667667	Identifier	opcode		1667629	1					
ANR	1667668	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	877:1:27413:27471	1667629	3	True				
ANR	1667669	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1667629	0		=			
ANR	1667670	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1667629	0					
ANR	1667671	ArrayIndexing	inst_buf [ inst_buf_index ]		1667629	0					
ANR	1667672	Identifier	inst_buf		1667629	0					
ANR	1667673	Identifier	inst_buf_index		1667629	1					
ANR	1667674	Identifier	pipe		1667629	1					
ANR	1667675	CallExpression	get_any_valid_pipe ( opcode )		1667629	1					
ANR	1667676	Callee	get_any_valid_pipe		1667629	0					
ANR	1667677	Identifier	get_any_valid_pipe		1667629	0					
ANR	1667678	ArgumentList	opcode		1667629	1					
ANR	1667679	Argument	opcode		1667629	0					
ANR	1667680	Identifier	opcode		1667629	0					
ANR	1667681	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 0	878:1:27474:27518	1667629	4	True				
ANR	1667682	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 0		1667629	0		=			
ANR	1667683	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667629	0					
ANR	1667684	ArrayIndexing	inst_buf [ inst_buf_index ]		1667629	0					
ANR	1667685	Identifier	inst_buf		1667629	0					
ANR	1667686	Identifier	inst_buf_index		1667629	1					
ANR	1667687	Identifier	input_registers		1667629	1					
ANR	1667688	PrimaryExpression	0		1667629	1					
ANR	1667689	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 0	879:1:27521:27566	1667629	5	True				
ANR	1667690	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 0		1667629	0		=			
ANR	1667691	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667629	0					
ANR	1667692	ArrayIndexing	inst_buf [ inst_buf_index ]		1667629	0					
ANR	1667693	Identifier	inst_buf		1667629	0					
ANR	1667694	Identifier	inst_buf_index		1667629	1					
ANR	1667695	Identifier	output_registers		1667629	1					
ANR	1667696	PrimaryExpression	0		1667629	1					
ANR	1667697	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	880:1:27569:27605	1667629	6	True				
ANR	1667698	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1667629	0		=			
ANR	1667699	MemberAccess	inst_buf [ inst_buf_index ] . line		1667629	0					
ANR	1667700	ArrayIndexing	inst_buf [ inst_buf_index ]		1667629	0					
ANR	1667701	Identifier	inst_buf		1667629	0					
ANR	1667702	Identifier	inst_buf_index		1667629	1					
ANR	1667703	Identifier	line		1667629	1					
ANR	1667704	Identifier	line		1667629	1					
ANR	1667705	ExpressionStatement	inst_buf_index ++	881:1:27608:27624	1667629	7	True				
ANR	1667706	PostIncDecOperationExpression	inst_buf_index ++		1667629	0					
ANR	1667707	Identifier	inst_buf_index		1667629	0					
ANR	1667708	IncDec	++		1667629	1					
ANR	1667709	ReturnStatement	return SLJIT_SUCCESS ;	883:1:27628:27648	1667629	8	True				
ANR	1667710	Identifier	SLJIT_SUCCESS		1667629	0					
ANR	1667711	ReturnType	static sljit_si		1667629	1					
ANR	1667712	Identifier	push_0_buffer		1667629	2					
ANR	1667713	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int line"		1667629	3					
ANR	1667714	Parameter	struct sljit_compiler * compiler	870:30:27147:27177	1667629	0	True				
ANR	1667715	ParameterType	struct sljit_compiler *		1667629	0					
ANR	1667716	Identifier	compiler		1667629	1					
ANR	1667717	Parameter	tilegx_mnemonic opc	870:63:27180:27198	1667629	1	True				
ANR	1667718	ParameterType	tilegx_mnemonic		1667629	0					
ANR	1667719	Identifier	opc		1667629	1					
ANR	1667720	Parameter	int line	870:84:27201:27208	1667629	2	True				
ANR	1667721	ParameterType	int		1667629	0					
ANR	1667722	Identifier	line		1667629	1					
ANR	1667723	CFGEntryNode	ENTRY		1667629		True				
ANR	1667724	CFGExitNode	EXIT		1667629		True				
ANR	1667725	Symbol	inst_buf [ inst_buf_index ] . pipe		1667629						
ANR	1667726	Symbol	opc		1667629						
ANR	1667727	Symbol	line		1667629						
ANR	1667728	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667629						
ANR	1667729	Symbol	SLJIT_SUCCESS		1667629						
ANR	1667730	Symbol	opcode		1667629						
ANR	1667731	Symbol	inst_buf_index		1667629						
ANR	1667732	Symbol	inst_buf		1667629						
ANR	1667733	Symbol	inst_buf [ inst_buf_index ] . opcode		1667629						
ANR	1667734	Symbol	tilegx_opcodes		1667629						
ANR	1667735	Symbol	inst_buf [ inst_buf_index ] . output_registers		1667629						
ANR	1667736	Symbol	inst_buf [ inst_buf_index ] . line		1667629						
ANR	1667737	Symbol	compiler		1667629						
ANR	1667738	Symbol	* inst_buf_index		1667629						
ANR	1667739	Symbol	get_any_valid_pipe		1667629						
ANR	1667740	Symbol	update_buffer		1667629						
ANR	1667741	Symbol	* inst_buf		1667629						
ANR	1667742	Symbol	inst_buf [ inst_buf_index ] . input_registers		1667629						
ANR	1667743	Function	push_jr_buffer	886:0:27653:28264							
ANR	1667744	FunctionDef	"push_jr_buffer (struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int line)"		1667743	0					
ANR	1667745	CompoundStatement		887:0:27757:28264	1667743	0					
ANR	1667746	IfStatement	if ( inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE )		1667743	0					
ANR	1667747	Condition	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE	888:5:27764:27815	1667743	0	True				
ANR	1667748	EqualityExpression	inst_buf_index == TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667743	0		==			
ANR	1667749	Identifier	inst_buf_index		1667743	0					
ANR	1667750	Identifier	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667743	1					
ANR	1667751	ExpressionStatement	FAIL_IF ( update_buffer ( compiler ) )	889:2:27820:27852	1667743	1	True				
ANR	1667752	CallExpression	FAIL_IF ( update_buffer ( compiler ) )		1667743	0					
ANR	1667753	Callee	FAIL_IF		1667743	0					
ANR	1667754	Identifier	FAIL_IF		1667743	0					
ANR	1667755	ArgumentList	update_buffer ( compiler )		1667743	1					
ANR	1667756	Argument	update_buffer ( compiler )		1667743	0					
ANR	1667757	CallExpression	update_buffer ( compiler )		1667743	0					
ANR	1667758	Callee	update_buffer		1667743	0					
ANR	1667759	Identifier	update_buffer		1667743	0					
ANR	1667760	ArgumentList	compiler		1667743	1					
ANR	1667761	Argument	compiler		1667743	0					
ANR	1667762	Identifier	compiler		1667743	0					
ANR	1667763	IdentifierDeclStatement	const struct tilegx_opcode * opcode = & tilegx_opcodes [ opc ] ;	891:1:27856:27913	1667743	1	True				
ANR	1667764	IdentifierDecl	* opcode = & tilegx_opcodes [ opc ]		1667743	0					
ANR	1667765	IdentifierDeclType	const struct tilegx_opcode *		1667743	0					
ANR	1667766	Identifier	opcode		1667743	1					
ANR	1667767	AssignmentExpression	* opcode = & tilegx_opcodes [ opc ]		1667743	2		=			
ANR	1667768	Identifier	opcode		1667743	0					
ANR	1667769	UnaryOperationExpression	& tilegx_opcodes [ opc ]		1667743	1					
ANR	1667770	UnaryOperator	&		1667743	0					
ANR	1667771	ArrayIndexing	tilegx_opcodes [ opc ]		1667743	1					
ANR	1667772	Identifier	tilegx_opcodes		1667743	0					
ANR	1667773	Identifier	opc		1667743	1					
ANR	1667774	ExpressionStatement	inst_buf [ inst_buf_index ] . opcode = opcode	892:1:27916:27956	1667743	2	True				
ANR	1667775	AssignmentExpression	inst_buf [ inst_buf_index ] . opcode = opcode		1667743	0		=			
ANR	1667776	MemberAccess	inst_buf [ inst_buf_index ] . opcode		1667743	0					
ANR	1667777	ArrayIndexing	inst_buf [ inst_buf_index ]		1667743	0					
ANR	1667778	Identifier	inst_buf		1667743	0					
ANR	1667779	Identifier	inst_buf_index		1667743	1					
ANR	1667780	Identifier	opcode		1667743	1					
ANR	1667781	Identifier	opcode		1667743	1					
ANR	1667782	ExpressionStatement	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )	893:1:27959:28017	1667743	3	True				
ANR	1667783	AssignmentExpression	inst_buf [ inst_buf_index ] . pipe = get_any_valid_pipe ( opcode )		1667743	0		=			
ANR	1667784	MemberAccess	inst_buf [ inst_buf_index ] . pipe		1667743	0					
ANR	1667785	ArrayIndexing	inst_buf [ inst_buf_index ]		1667743	0					
ANR	1667786	Identifier	inst_buf		1667743	0					
ANR	1667787	Identifier	inst_buf_index		1667743	1					
ANR	1667788	Identifier	pipe		1667743	1					
ANR	1667789	CallExpression	get_any_valid_pipe ( opcode )		1667743	1					
ANR	1667790	Callee	get_any_valid_pipe		1667743	0					
ANR	1667791	Identifier	get_any_valid_pipe		1667743	0					
ANR	1667792	ArgumentList	opcode		1667743	1					
ANR	1667793	Argument	opcode		1667743	0					
ANR	1667794	Identifier	opcode		1667743	0					
ANR	1667795	ExpressionStatement	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0	894:1:28020:28067	1667743	4	True				
ANR	1667796	AssignmentExpression	inst_buf [ inst_buf_index ] . operand_value [ 0 ] = op0		1667743	0		=			
ANR	1667797	ArrayIndexing	inst_buf [ inst_buf_index ] . operand_value [ 0 ]		1667743	0					
ANR	1667798	MemberAccess	inst_buf [ inst_buf_index ] . operand_value		1667743	0					
ANR	1667799	ArrayIndexing	inst_buf [ inst_buf_index ]		1667743	0					
ANR	1667800	Identifier	inst_buf		1667743	0					
ANR	1667801	Identifier	inst_buf_index		1667743	1					
ANR	1667802	Identifier	operand_value		1667743	1					
ANR	1667803	PrimaryExpression	0		1667743	1					
ANR	1667804	Identifier	op0		1667743	1					
ANR	1667805	ExpressionStatement	inst_buf [ inst_buf_index ] . input_registers = 1L << op0	895:1:28070:28122	1667743	5	True				
ANR	1667806	AssignmentExpression	inst_buf [ inst_buf_index ] . input_registers = 1L << op0		1667743	0		=			
ANR	1667807	MemberAccess	inst_buf [ inst_buf_index ] . input_registers		1667743	0					
ANR	1667808	ArrayIndexing	inst_buf [ inst_buf_index ]		1667743	0					
ANR	1667809	Identifier	inst_buf		1667743	0					
ANR	1667810	Identifier	inst_buf_index		1667743	1					
ANR	1667811	Identifier	input_registers		1667743	1					
ANR	1667812	ShiftExpression	1L << op0		1667743	1		<<			
ANR	1667813	PrimaryExpression	1L		1667743	0					
ANR	1667814	Identifier	op0		1667743	1					
ANR	1667815	ExpressionStatement	inst_buf [ inst_buf_index ] . output_registers = 0	896:1:28125:28170	1667743	6	True				
ANR	1667816	AssignmentExpression	inst_buf [ inst_buf_index ] . output_registers = 0		1667743	0		=			
ANR	1667817	MemberAccess	inst_buf [ inst_buf_index ] . output_registers		1667743	0					
ANR	1667818	ArrayIndexing	inst_buf [ inst_buf_index ]		1667743	0					
ANR	1667819	Identifier	inst_buf		1667743	0					
ANR	1667820	Identifier	inst_buf_index		1667743	1					
ANR	1667821	Identifier	output_registers		1667743	1					
ANR	1667822	PrimaryExpression	0		1667743	1					
ANR	1667823	ExpressionStatement	inst_buf [ inst_buf_index ] . line = line	897:1:28173:28209	1667743	7	True				
ANR	1667824	AssignmentExpression	inst_buf [ inst_buf_index ] . line = line		1667743	0		=			
ANR	1667825	MemberAccess	inst_buf [ inst_buf_index ] . line		1667743	0					
ANR	1667826	ArrayIndexing	inst_buf [ inst_buf_index ]		1667743	0					
ANR	1667827	Identifier	inst_buf		1667743	0					
ANR	1667828	Identifier	inst_buf_index		1667743	1					
ANR	1667829	Identifier	line		1667743	1					
ANR	1667830	Identifier	line		1667743	1					
ANR	1667831	ExpressionStatement	inst_buf_index ++	898:1:28212:28228	1667743	8	True				
ANR	1667832	PostIncDecOperationExpression	inst_buf_index ++		1667743	0					
ANR	1667833	Identifier	inst_buf_index		1667743	0					
ANR	1667834	IncDec	++		1667743	1					
ANR	1667835	ReturnStatement	return flush_buffer ( compiler ) ;	900:1:28233:28262	1667743	9	True				
ANR	1667836	CallExpression	flush_buffer ( compiler )		1667743	0					
ANR	1667837	Callee	flush_buffer		1667743	0					
ANR	1667838	Identifier	flush_buffer		1667743	0					
ANR	1667839	ArgumentList	compiler		1667743	1					
ANR	1667840	Argument	compiler		1667743	0					
ANR	1667841	Identifier	compiler		1667743	0					
ANR	1667842	ReturnType	static sljit_si		1667743	1					
ANR	1667843	Identifier	push_jr_buffer		1667743	2					
ANR	1667844	ParameterList	"struct sljit_compiler * compiler , tilegx_mnemonic opc , int op0 , int line"		1667743	3					
ANR	1667845	Parameter	struct sljit_compiler * compiler	886:31:27684:27714	1667743	0	True				
ANR	1667846	ParameterType	struct sljit_compiler *		1667743	0					
ANR	1667847	Identifier	compiler		1667743	1					
ANR	1667848	Parameter	tilegx_mnemonic opc	886:64:27717:27735	1667743	1	True				
ANR	1667849	ParameterType	tilegx_mnemonic		1667743	0					
ANR	1667850	Identifier	opc		1667743	1					
ANR	1667851	Parameter	int op0	886:85:27738:27744	1667743	2	True				
ANR	1667852	ParameterType	int		1667743	0					
ANR	1667853	Identifier	op0		1667743	1					
ANR	1667854	Parameter	int line	886:94:27747:27754	1667743	3	True				
ANR	1667855	ParameterType	int		1667743	0					
ANR	1667856	Identifier	line		1667743	1					
ANR	1667857	CFGEntryNode	ENTRY		1667743		True				
ANR	1667858	CFGExitNode	EXIT		1667743		True				
ANR	1667859	Symbol	inst_buf [ inst_buf_index ] . operand_value		1667743						
ANR	1667860	Symbol	inst_buf [ inst_buf_index ] . pipe		1667743						
ANR	1667861	Symbol	opc		1667743						
ANR	1667862	Symbol	* inst_buf [ inst_buf_index ] . operand_value		1667743						
ANR	1667863	Symbol	line		1667743						
ANR	1667864	Symbol	TILEGX_MAX_INSTRUCTIONS_PER_BUNDLE		1667743						
ANR	1667865	Symbol	opcode		1667743						
ANR	1667866	Symbol	flush_buffer		1667743						
ANR	1667867	Symbol	* * inst_buf		1667743						
ANR	1667868	Symbol	op0		1667743						
ANR	1667869	Symbol	inst_buf_index		1667743						
ANR	1667870	Symbol	inst_buf		1667743						
ANR	1667871	Symbol	* * inst_buf_index		1667743						
ANR	1667872	Symbol	inst_buf [ inst_buf_index ] . opcode		1667743						
ANR	1667873	Symbol	tilegx_opcodes		1667743						
ANR	1667874	Symbol	inst_buf [ inst_buf_index ] . output_registers		1667743						
ANR	1667875	Symbol	inst_buf [ inst_buf_index ] . line		1667743						
ANR	1667876	Symbol	compiler		1667743						
ANR	1667877	Symbol	* inst_buf_index		1667743						
ANR	1667878	Symbol	get_any_valid_pipe		1667743						
ANR	1667879	Symbol	update_buffer		1667743						
ANR	1667880	Symbol	* inst_buf		1667743						
ANR	1667881	Symbol	inst_buf [ inst_buf_index ] . input_registers		1667743						
ANR	1667882	Function	detect_jump_type	903:0:28267:30285							
ANR	1667883	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code)"		1667882	0					
ANR	1667884	CompoundStatement		904:0:28379:30285	1667882	0					
ANR	1667885	IdentifierDeclStatement	sljit_sw diff ;	905:1:28382:28395	1667882	0	True				
ANR	1667886	IdentifierDecl	diff		1667882	0					
ANR	1667887	IdentifierDeclType	sljit_sw		1667882	0					
ANR	1667888	Identifier	diff		1667882	1					
ANR	1667889	IdentifierDeclStatement	sljit_uw target_addr ;	906:1:28398:28418	1667882	1	True				
ANR	1667890	IdentifierDecl	target_addr		1667882	0					
ANR	1667891	IdentifierDeclType	sljit_uw		1667882	0					
ANR	1667892	Identifier	target_addr		1667882	1					
ANR	1667893	IdentifierDeclStatement	sljit_ins * inst ;	907:1:28421:28436	1667882	2	True				
ANR	1667894	IdentifierDecl	* inst		1667882	0					
ANR	1667895	IdentifierDeclType	sljit_ins *		1667882	0					
ANR	1667896	Identifier	inst		1667882	1					
ANR	1667897	IdentifierDeclStatement	sljit_ins saved_inst ;	908:1:28439:28459	1667882	3	True				
ANR	1667898	IdentifierDecl	saved_inst		1667882	0					
ANR	1667899	IdentifierDeclType	sljit_ins		1667882	0					
ANR	1667900	Identifier	saved_inst		1667882	1					
ANR	1667901	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1667882	4					
ANR	1667902	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	910:5:28467:28501	1667882	0	True				
ANR	1667903	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1667882	0		&			
ANR	1667904	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1667905	Identifier	jump		1667882	0					
ANR	1667906	Identifier	flags		1667882	1					
ANR	1667907	Identifier	SLJIT_REWRITABLE_JUMP		1667882	1					
ANR	1667908	ReturnStatement	return code_ptr ;	911:2:28506:28521	1667882	1	True				
ANR	1667909	Identifier	code_ptr		1667882	0					
ANR	1667910	IfStatement	if ( jump -> flags & JUMP_ADDR )		1667882	5					
ANR	1667911	Condition	jump -> flags & JUMP_ADDR	913:5:28529:28551	1667882	0	True				
ANR	1667912	BitAndExpression	jump -> flags & JUMP_ADDR		1667882	0		&			
ANR	1667913	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1667914	Identifier	jump		1667882	0					
ANR	1667915	Identifier	flags		1667882	1					
ANR	1667916	Identifier	JUMP_ADDR		1667882	1					
ANR	1667917	ExpressionStatement	target_addr = jump -> u . target	914:2:28556:28584	1667882	1	True				
ANR	1667918	AssignmentExpression	target_addr = jump -> u . target		1667882	0		=			
ANR	1667919	Identifier	target_addr		1667882	0					
ANR	1667920	MemberAccess	jump -> u . target		1667882	1					
ANR	1667921	PtrMemberAccess	jump -> u		1667882	0					
ANR	1667922	Identifier	jump		1667882	0					
ANR	1667923	Identifier	u		1667882	1					
ANR	1667924	Identifier	target		1667882	1					
ANR	1667925	ElseStatement	else		1667882	0					
ANR	1667926	CompoundStatement		12:6:212:212	1667882	0					
ANR	1667927	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	916:2:28596:28634	1667882	0	True				
ANR	1667928	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1667882	0					
ANR	1667929	Callee	SLJIT_ASSERT		1667882	0					
ANR	1667930	Identifier	SLJIT_ASSERT		1667882	0					
ANR	1667931	ArgumentList	jump -> flags & JUMP_LABEL		1667882	1					
ANR	1667932	Argument	jump -> flags & JUMP_LABEL		1667882	0					
ANR	1667933	BitAndExpression	jump -> flags & JUMP_LABEL		1667882	0		&			
ANR	1667934	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1667935	Identifier	jump		1667882	0					
ANR	1667936	Identifier	flags		1667882	1					
ANR	1667937	Identifier	JUMP_LABEL		1667882	1					
ANR	1667938	ExpressionStatement	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	917:2:28638:28690	1667882	1	True				
ANR	1667939	AssignmentExpression	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1667882	0		=			
ANR	1667940	Identifier	target_addr		1667882	0					
ANR	1667941	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1667882	1					
ANR	1667942	CastTarget	sljit_uw		1667882	0					
ANR	1667943	AdditiveExpression	code + jump -> u . label -> size		1667882	1		+			
ANR	1667944	Identifier	code		1667882	0					
ANR	1667945	PtrMemberAccess	jump -> u . label -> size		1667882	1					
ANR	1667946	MemberAccess	jump -> u . label		1667882	0					
ANR	1667947	PtrMemberAccess	jump -> u		1667882	0					
ANR	1667948	Identifier	jump		1667882	0					
ANR	1667949	Identifier	u		1667882	1					
ANR	1667950	Identifier	label		1667882	1					
ANR	1667951	Identifier	size		1667882	1					
ANR	1667952	ExpressionStatement	inst = ( sljit_ins * ) jump -> addr	920:1:28697:28727	1667882	6	True				
ANR	1667953	AssignmentExpression	inst = ( sljit_ins * ) jump -> addr		1667882	0		=			
ANR	1667954	Identifier	inst		1667882	0					
ANR	1667955	CastExpression	( sljit_ins * ) jump -> addr		1667882	1					
ANR	1667956	CastTarget	sljit_ins *		1667882	0					
ANR	1667957	PtrMemberAccess	jump -> addr		1667882	1					
ANR	1667958	Identifier	jump		1667882	0					
ANR	1667959	Identifier	addr		1667882	1					
ANR	1667960	IfStatement	if ( jump -> flags & IS_COND )		1667882	7					
ANR	1667961	Condition	jump -> flags & IS_COND	921:5:28734:28754	1667882	0	True				
ANR	1667962	BitAndExpression	jump -> flags & IS_COND		1667882	0		&			
ANR	1667963	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1667964	Identifier	jump		1667882	0					
ANR	1667965	Identifier	flags		1667882	1					
ANR	1667966	Identifier	IS_COND		1667882	1					
ANR	1667967	ExpressionStatement	inst --	922:2:28759:28765	1667882	1	True				
ANR	1667968	PostIncDecOperationExpression	inst --		1667882	0					
ANR	1667969	Identifier	inst		1667882	0					
ANR	1667970	IncDec	--		1667882	1					
ANR	1667971	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) inst ) >> 3	924:1:28769:28823	1667882	8	True				
ANR	1667972	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) inst ) >> 3		1667882	0		=			
ANR	1667973	Identifier	diff		1667882	0					
ANR	1667974	ShiftExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) inst ) >> 3		1667882	1		>>			
ANR	1667975	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) inst		1667882	0		-			
ANR	1667976	CastExpression	( sljit_sw ) target_addr		1667882	0					
ANR	1667977	CastTarget	sljit_sw		1667882	0					
ANR	1667978	Identifier	target_addr		1667882	1					
ANR	1667979	CastExpression	( sljit_sw ) inst		1667882	1					
ANR	1667980	CastTarget	sljit_sw		1667882	0					
ANR	1667981	Identifier	inst		1667882	1					
ANR	1667982	PrimaryExpression	3		1667882	1					
ANR	1667983	IfStatement	if ( diff <= SIMM_17BIT_MAX && diff >= SIMM_17BIT_MIN )		1667882	9					
ANR	1667984	Condition	diff <= SIMM_17BIT_MAX && diff >= SIMM_17BIT_MIN	925:5:28830:28877	1667882	0	True				
ANR	1667985	AndExpression	diff <= SIMM_17BIT_MAX && diff >= SIMM_17BIT_MIN		1667882	0		&&			
ANR	1667986	RelationalExpression	diff <= SIMM_17BIT_MAX		1667882	0		<=			
ANR	1667987	Identifier	diff		1667882	0					
ANR	1667988	Identifier	SIMM_17BIT_MAX		1667882	1					
ANR	1667989	RelationalExpression	diff >= SIMM_17BIT_MIN		1667882	1		>=			
ANR	1667990	Identifier	diff		1667882	0					
ANR	1667991	Identifier	SIMM_17BIT_MIN		1667882	1					
ANR	1667992	CompoundStatement		22:55:500:500	1667882	1					
ANR	1667993	ExpressionStatement	jump -> flags |= PATCH_B	926:2:28884:28906	1667882	0	True				
ANR	1667994	AssignmentExpression	jump -> flags |= PATCH_B		1667882	0		|=			
ANR	1667995	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1667996	Identifier	jump		1667882	0					
ANR	1667997	Identifier	flags		1667882	1					
ANR	1667998	Identifier	PATCH_B		1667882	1					
ANR	1667999	IfStatement	if ( ! ( jump -> flags & IS_COND ) )		1667882	1					
ANR	1668000	Condition	! ( jump -> flags & IS_COND )	928:6:28915:28938	1667882	0	True				
ANR	1668001	UnaryOperationExpression	! ( jump -> flags & IS_COND )		1667882	0					
ANR	1668002	UnaryOperator	!		1667882	0					
ANR	1668003	BitAndExpression	jump -> flags & IS_COND		1667882	1		&			
ANR	1668004	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668005	Identifier	jump		1667882	0					
ANR	1668006	Identifier	flags		1667882	1					
ANR	1668007	Identifier	IS_COND		1667882	1					
ANR	1668008	CompoundStatement		25:32:561:561	1667882	1					
ANR	1668009	IfStatement	if ( jump -> flags & IS_JAL )		1667882	0					
ANR	1668010	Condition	jump -> flags & IS_JAL	929:7:28950:28969	1667882	0	True				
ANR	1668011	BitAndExpression	jump -> flags & IS_JAL		1667882	0		&			
ANR	1668012	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668013	Identifier	jump		1667882	0					
ANR	1668014	Identifier	flags		1667882	1					
ANR	1668015	Identifier	IS_JAL		1667882	1					
ANR	1668016	CompoundStatement		26:29:592:592	1667882	1					
ANR	1668017	ExpressionStatement	jump -> flags &= ~ ( PATCH_B )	930:4:28978:29003	1667882	0	True				
ANR	1668018	AssignmentExpression	jump -> flags &= ~ ( PATCH_B )		1667882	0		&=			
ANR	1668019	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668020	Identifier	jump		1667882	0					
ANR	1668021	Identifier	flags		1667882	1					
ANR	1668022	UnaryOperationExpression	~ ( PATCH_B )		1667882	1					
ANR	1668023	UnaryOperator	~		1667882	0					
ANR	1668024	Identifier	PATCH_B		1667882	1					
ANR	1668025	ExpressionStatement	jump -> flags |= PATCH_J	931:4:29009:29031	1667882	1	True				
ANR	1668026	AssignmentExpression	jump -> flags |= PATCH_J		1667882	0		|=			
ANR	1668027	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668028	Identifier	jump		1667882	0					
ANR	1668029	Identifier	flags		1667882	1					
ANR	1668030	Identifier	PATCH_J		1667882	1					
ANR	1668031	ExpressionStatement	inst [ 0 ] = JAL_X1	932:4:29037:29053	1667882	2	True				
ANR	1668032	AssignmentExpression	inst [ 0 ] = JAL_X1		1667882	0		=			
ANR	1668033	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668034	Identifier	inst		1667882	0					
ANR	1668035	PrimaryExpression	0		1667882	1					
ANR	1668036	Identifier	JAL_X1		1667882	1					
ANR	1668037	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	935:4:29084:29129	1667882	3	True				
ANR	1668038	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1667882	0					
ANR	1668039	Callee	printf		1667882	0					
ANR	1668040	Identifier	printf		1667882	0					
ANR	1668041	ArgumentList	"""[runtime relocate]%04d:\\t"""		1667882	1					
ANR	1668042	Argument	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668043	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668044	Argument	__LINE__		1667882	1					
ANR	1668045	Identifier	__LINE__		1667882	0					
ANR	1668046	ExpressionStatement	print_insn_tilegx ( inst )	936:4:29135:29158	1667882	4	True				
ANR	1668047	CallExpression	print_insn_tilegx ( inst )		1667882	0					
ANR	1668048	Callee	print_insn_tilegx		1667882	0					
ANR	1668049	Identifier	print_insn_tilegx		1667882	0					
ANR	1668050	ArgumentList	inst		1667882	1					
ANR	1668051	Argument	inst		1667882	0					
ANR	1668052	Identifier	inst		1667882	0					
ANR	1668053	ElseStatement	else		1667882	0					
ANR	1668054	CompoundStatement		35:10:797:797	1667882	0					
ANR	1668055	ExpressionStatement	inst [ 0 ] = BEQZ_X1 | SRCA_X1 ( ZERO )	939:4:29183:29216	1667882	0	True				
ANR	1668056	AssignmentExpression	inst [ 0 ] = BEQZ_X1 | SRCA_X1 ( ZERO )		1667882	0		=			
ANR	1668057	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668058	Identifier	inst		1667882	0					
ANR	1668059	PrimaryExpression	0		1667882	1					
ANR	1668060	InclusiveOrExpression	BEQZ_X1 | SRCA_X1 ( ZERO )		1667882	1		|			
ANR	1668061	Identifier	BEQZ_X1		1667882	0					
ANR	1668062	CallExpression	SRCA_X1 ( ZERO )		1667882	1					
ANR	1668063	Callee	SRCA_X1		1667882	0					
ANR	1668064	Identifier	SRCA_X1		1667882	0					
ANR	1668065	ArgumentList	ZERO		1667882	1					
ANR	1668066	Argument	ZERO		1667882	0					
ANR	1668067	Identifier	ZERO		1667882	0					
ANR	1668068	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	942:4:29247:29292	1667882	1	True				
ANR	1668069	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1667882	0					
ANR	1668070	Callee	printf		1667882	0					
ANR	1668071	Identifier	printf		1667882	0					
ANR	1668072	ArgumentList	"""[runtime relocate]%04d:\\t"""		1667882	1					
ANR	1668073	Argument	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668074	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668075	Argument	__LINE__		1667882	1					
ANR	1668076	Identifier	__LINE__		1667882	0					
ANR	1668077	ExpressionStatement	print_insn_tilegx ( inst )	943:4:29298:29321	1667882	2	True				
ANR	1668078	CallExpression	print_insn_tilegx ( inst )		1667882	0					
ANR	1668079	Callee	print_insn_tilegx		1667882	0					
ANR	1668080	Identifier	print_insn_tilegx		1667882	0					
ANR	1668081	ArgumentList	inst		1667882	1					
ANR	1668082	Argument	inst		1667882	0					
ANR	1668083	Identifier	inst		1667882	0					
ANR	1668084	ReturnStatement	return inst ;	947:3:29339:29350	1667882	1	True				
ANR	1668085	Identifier	inst		1667882	0					
ANR	1668086	ExpressionStatement	inst [ 0 ] = inst [ 0 ] ^ ( 0x7L << 55 )	950:2:29359:29391	1667882	2	True				
ANR	1668087	AssignmentExpression	inst [ 0 ] = inst [ 0 ] ^ ( 0x7L << 55 )		1667882	0		=			
ANR	1668088	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668089	Identifier	inst		1667882	0					
ANR	1668090	PrimaryExpression	0		1667882	1					
ANR	1668091	ExclusiveOrExpression	inst [ 0 ] ^ ( 0x7L << 55 )		1667882	1		^			
ANR	1668092	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668093	Identifier	inst		1667882	0					
ANR	1668094	PrimaryExpression	0		1667882	1					
ANR	1668095	ShiftExpression	0x7L << 55		1667882	1		<<			
ANR	1668096	PrimaryExpression	0x7L		1667882	0					
ANR	1668097	PrimaryExpression	55		1667882	1					
ANR	1668098	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	953:2:29420:29465	1667882	3	True				
ANR	1668099	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1667882	0					
ANR	1668100	Callee	printf		1667882	0					
ANR	1668101	Identifier	printf		1667882	0					
ANR	1668102	ArgumentList	"""[runtime relocate]%04d:\\t"""		1667882	1					
ANR	1668103	Argument	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668104	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668105	Argument	__LINE__		1667882	1					
ANR	1668106	Identifier	__LINE__		1667882	0					
ANR	1668107	ExpressionStatement	print_insn_tilegx ( inst )	954:2:29469:29492	1667882	4	True				
ANR	1668108	CallExpression	print_insn_tilegx ( inst )		1667882	0					
ANR	1668109	Callee	print_insn_tilegx		1667882	0					
ANR	1668110	Identifier	print_insn_tilegx		1667882	0					
ANR	1668111	ArgumentList	inst		1667882	1					
ANR	1668112	Argument	inst		1667882	0					
ANR	1668113	Identifier	inst		1667882	0					
ANR	1668114	ExpressionStatement	jump -> addr -= sizeof ( sljit_ins )	956:2:29503:29534	1667882	5	True				
ANR	1668115	AssignmentExpression	jump -> addr -= sizeof ( sljit_ins )		1667882	0		-=			
ANR	1668116	PtrMemberAccess	jump -> addr		1667882	0					
ANR	1668117	Identifier	jump		1667882	0					
ANR	1668118	Identifier	addr		1667882	1					
ANR	1668119	SizeofExpression	sizeof ( sljit_ins )		1667882	1					
ANR	1668120	Sizeof	sizeof		1667882	0					
ANR	1668121	SizeofOperand	sljit_ins		1667882	1					
ANR	1668122	ReturnStatement	return inst ;	957:2:29538:29549	1667882	6	True				
ANR	1668123	Identifier	inst		1667882	0					
ANR	1668124	IfStatement	if ( jump -> flags & IS_COND )		1667882	10					
ANR	1668125	Condition	jump -> flags & IS_COND	960:5:29560:29580	1667882	0	True				
ANR	1668126	BitAndExpression	jump -> flags & IS_COND		1667882	0		&			
ANR	1668127	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668128	Identifier	jump		1667882	0					
ANR	1668129	Identifier	flags		1667882	1					
ANR	1668130	Identifier	IS_COND		1667882	1					
ANR	1668131	CompoundStatement		57:28:1203:1203	1667882	1					
ANR	1668132	IfStatement	if ( ( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )		1667882	0					
ANR	1668133	Condition	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )	961:6:29591:29671	1667882	0	True				
ANR	1668134	EqualityExpression	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1667882	0		==			
ANR	1668135	BitAndExpression	target_addr & ~0x3FFFFFFFL		1667882	0		&			
ANR	1668136	Identifier	target_addr		1667882	0					
ANR	1668137	Identifier	~0x3FFFFFFFL		1667882	1					
ANR	1668138	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL		1667882	1		&			
ANR	1668139	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1667882	0		+			
ANR	1668140	PtrMemberAccess	jump -> addr		1667882	0					
ANR	1668141	Identifier	jump		1667882	0					
ANR	1668142	Identifier	addr		1667882	1					
ANR	1668143	SizeofExpression	sizeof ( sljit_ins )		1667882	1					
ANR	1668144	Sizeof	sizeof		1667882	0					
ANR	1668145	SizeofOperand	sljit_ins		1667882	1					
ANR	1668146	Identifier	~0x3FFFFFFFL		1667882	1					
ANR	1668147	CompoundStatement		58:89:1294:1294	1667882	1					
ANR	1668148	ExpressionStatement	jump -> flags |= PATCH_J	962:3:29679:29701	1667882	0	True				
ANR	1668149	AssignmentExpression	jump -> flags |= PATCH_J		1667882	0		|=			
ANR	1668150	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668151	Identifier	jump		1667882	0					
ANR	1668152	Identifier	flags		1667882	1					
ANR	1668153	Identifier	PATCH_J		1667882	1					
ANR	1668154	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( 2 )	963:3:29706:29755	1667882	1	True				
ANR	1668155	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( 2 )		1667882	0		=			
ANR	1668156	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668157	Identifier	inst		1667882	0					
ANR	1668158	PrimaryExpression	0		1667882	1					
ANR	1668159	InclusiveOrExpression	( inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( 2 )		1667882	1		|			
ANR	1668160	BitAndExpression	inst [ 0 ] & ~ ( BOFF_X1 ( - 1 ) )		1667882	0		&			
ANR	1668161	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668162	Identifier	inst		1667882	0					
ANR	1668163	PrimaryExpression	0		1667882	1					
ANR	1668164	UnaryOperationExpression	~ ( BOFF_X1 ( - 1 ) )		1667882	1					
ANR	1668165	UnaryOperator	~		1667882	0					
ANR	1668166	CallExpression	BOFF_X1 ( - 1 )		1667882	1					
ANR	1668167	Callee	BOFF_X1		1667882	0					
ANR	1668168	Identifier	BOFF_X1		1667882	0					
ANR	1668169	ArgumentList	- 1		1667882	1					
ANR	1668170	Argument	- 1		1667882	0					
ANR	1668171	UnaryOperationExpression	- 1		1667882	0					
ANR	1668172	UnaryOperator	-		1667882	0					
ANR	1668173	PrimaryExpression	1		1667882	1					
ANR	1668174	CallExpression	BOFF_X1 ( 2 )		1667882	1					
ANR	1668175	Callee	BOFF_X1		1667882	0					
ANR	1668176	Identifier	BOFF_X1		1667882	0					
ANR	1668177	ArgumentList	2		1667882	1					
ANR	1668178	Argument	2		1667882	0					
ANR	1668179	PrimaryExpression	2		1667882	0					
ANR	1668180	ExpressionStatement	inst [ 1 ] = J_X1	964:3:29760:29774	1667882	2	True				
ANR	1668181	AssignmentExpression	inst [ 1 ] = J_X1		1667882	0		=			
ANR	1668182	ArrayIndexing	inst [ 1 ]		1667882	0					
ANR	1668183	Identifier	inst		1667882	0					
ANR	1668184	PrimaryExpression	1		1667882	1					
ANR	1668185	Identifier	J_X1		1667882	1					
ANR	1668186	ReturnStatement	return inst + 1 ;	965:3:29779:29794	1667882	3	True				
ANR	1668187	AdditiveExpression	inst + 1		1667882	0		+			
ANR	1668188	Identifier	inst		1667882	0					
ANR	1668189	PrimaryExpression	1		1667882	1					
ANR	1668190	ReturnStatement	return code_ptr ;	968:2:29803:29818	1667882	1	True				
ANR	1668191	Identifier	code_ptr		1667882	0					
ANR	1668192	IfStatement	if ( ( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )		1667882	11					
ANR	1668193	Condition	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )	971:5:29829:29909	1667882	0	True				
ANR	1668194	EqualityExpression	( target_addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1667882	0		==			
ANR	1668195	BitAndExpression	target_addr & ~0x3FFFFFFFL		1667882	0		&			
ANR	1668196	Identifier	target_addr		1667882	0					
ANR	1668197	Identifier	~0x3FFFFFFFL		1667882	1					
ANR	1668198	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL		1667882	1		&			
ANR	1668199	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1667882	0		+			
ANR	1668200	PtrMemberAccess	jump -> addr		1667882	0					
ANR	1668201	Identifier	jump		1667882	0					
ANR	1668202	Identifier	addr		1667882	1					
ANR	1668203	SizeofExpression	sizeof ( sljit_ins )		1667882	1					
ANR	1668204	Sizeof	sizeof		1667882	0					
ANR	1668205	SizeofOperand	sljit_ins		1667882	1					
ANR	1668206	Identifier	~0x3FFFFFFFL		1667882	1					
ANR	1668207	CompoundStatement		68:88:1532:1532	1667882	1					
ANR	1668208	ExpressionStatement	jump -> flags |= PATCH_J	972:2:29916:29938	1667882	0	True				
ANR	1668209	AssignmentExpression	jump -> flags |= PATCH_J		1667882	0		|=			
ANR	1668210	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668211	Identifier	jump		1667882	0					
ANR	1668212	Identifier	flags		1667882	1					
ANR	1668213	Identifier	PATCH_J		1667882	1					
ANR	1668214	IfStatement	if ( jump -> flags & IS_JAL )		1667882	1					
ANR	1668215	Condition	jump -> flags & IS_JAL	974:6:29947:29966	1667882	0	True				
ANR	1668216	BitAndExpression	jump -> flags & IS_JAL		1667882	0		&			
ANR	1668217	PtrMemberAccess	jump -> flags		1667882	0					
ANR	1668218	Identifier	jump		1667882	0					
ANR	1668219	Identifier	flags		1667882	1					
ANR	1668220	Identifier	IS_JAL		1667882	1					
ANR	1668221	CompoundStatement		71:28:1589:1589	1667882	1					
ANR	1668222	ExpressionStatement	inst [ 0 ] = JAL_X1	975:3:29974:29990	1667882	0	True				
ANR	1668223	AssignmentExpression	inst [ 0 ] = JAL_X1		1667882	0		=			
ANR	1668224	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668225	Identifier	inst		1667882	0					
ANR	1668226	PrimaryExpression	0		1667882	1					
ANR	1668227	Identifier	JAL_X1		1667882	1					
ANR	1668228	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	978:3:30020:30065	1667882	1	True				
ANR	1668229	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1667882	0					
ANR	1668230	Callee	printf		1667882	0					
ANR	1668231	Identifier	printf		1667882	0					
ANR	1668232	ArgumentList	"""[runtime relocate]%04d:\\t"""		1667882	1					
ANR	1668233	Argument	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668234	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668235	Argument	__LINE__		1667882	1					
ANR	1668236	Identifier	__LINE__		1667882	0					
ANR	1668237	ExpressionStatement	print_insn_tilegx ( inst )	979:3:30070:30093	1667882	2	True				
ANR	1668238	CallExpression	print_insn_tilegx ( inst )		1667882	0					
ANR	1668239	Callee	print_insn_tilegx		1667882	0					
ANR	1668240	Identifier	print_insn_tilegx		1667882	0					
ANR	1668241	ArgumentList	inst		1667882	1					
ANR	1668242	Argument	inst		1667882	0					
ANR	1668243	Identifier	inst		1667882	0					
ANR	1668244	ElseStatement	else		1667882	0					
ANR	1668245	CompoundStatement		79:9:1732:1732	1667882	0					
ANR	1668246	ExpressionStatement	inst [ 0 ] = J_X1	983:3:30117:30131	1667882	0	True				
ANR	1668247	AssignmentExpression	inst [ 0 ] = J_X1		1667882	0		=			
ANR	1668248	ArrayIndexing	inst [ 0 ]		1667882	0					
ANR	1668249	Identifier	inst		1667882	0					
ANR	1668250	PrimaryExpression	0		1667882	1					
ANR	1668251	Identifier	J_X1		1667882	1					
ANR	1668252	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	986:3:30161:30206	1667882	1	True				
ANR	1668253	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1667882	0					
ANR	1668254	Callee	printf		1667882	0					
ANR	1668255	Identifier	printf		1667882	0					
ANR	1668256	ArgumentList	"""[runtime relocate]%04d:\\t"""		1667882	1					
ANR	1668257	Argument	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668258	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1667882	0					
ANR	1668259	Argument	__LINE__		1667882	1					
ANR	1668260	Identifier	__LINE__		1667882	0					
ANR	1668261	ExpressionStatement	print_insn_tilegx ( inst )	987:3:30211:30234	1667882	2	True				
ANR	1668262	CallExpression	print_insn_tilegx ( inst )		1667882	0					
ANR	1668263	Callee	print_insn_tilegx		1667882	0					
ANR	1668264	Identifier	print_insn_tilegx		1667882	0					
ANR	1668265	ArgumentList	inst		1667882	1					
ANR	1668266	Argument	inst		1667882	0					
ANR	1668267	Identifier	inst		1667882	0					
ANR	1668268	ReturnStatement	return inst ;	991:2:30250:30261	1667882	2	True				
ANR	1668269	Identifier	inst		1667882	0					
ANR	1668270	ReturnStatement	return code_ptr ;	994:1:30268:30283	1667882	12	True				
ANR	1668271	Identifier	code_ptr		1667882	0					
ANR	1668272	ReturnType	static SLJIT_INLINE sljit_ins *		1667882	1					
ANR	1668273	Identifier	detect_jump_type		1667882	2					
ANR	1668274	ParameterList	"struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code"		1667882	3					
ANR	1668275	Parameter	struct sljit_jump * jump	903:49:28316:28338	1667882	0	True				
ANR	1668276	ParameterType	struct sljit_jump *		1667882	0					
ANR	1668277	Identifier	jump		1667882	1					
ANR	1668278	Parameter	sljit_ins * code_ptr	903:74:28341:28359	1667882	1	True				
ANR	1668279	ParameterType	sljit_ins *		1667882	0					
ANR	1668280	Identifier	code_ptr		1667882	1					
ANR	1668281	Parameter	sljit_ins * code	903:95:28362:28376	1667882	2	True				
ANR	1668282	ParameterType	sljit_ins *		1667882	0					
ANR	1668283	Identifier	code		1667882	1					
ANR	1668284	CFGEntryNode	ENTRY		1667882		True				
ANR	1668285	CFGExitNode	EXIT		1667882		True				
ANR	1668286	Symbol	jump -> u . label -> size		1667882						
ANR	1668287	Symbol	SIMM_17BIT_MIN		1667882						
ANR	1668288	Symbol	ZERO		1667882						
ANR	1668289	Symbol	code		1667882						
ANR	1668290	Symbol	* * jump		1667882						
ANR	1668291	Symbol	* jump		1667882						
ANR	1668292	Symbol	jump -> u		1667882						
ANR	1668293	Symbol	jump -> flags		1667882						
ANR	1668294	Symbol	JUMP_LABEL		1667882						
ANR	1668295	Symbol	JUMP_ADDR		1667882						
ANR	1668296	Symbol	J_X1		1667882						
ANR	1668297	Symbol	code_ptr		1667882						
ANR	1668298	Symbol	SLJIT_REWRITABLE_JUMP		1667882						
ANR	1668299	Symbol	JAL_X1		1667882						
ANR	1668300	Symbol	jump		1667882						
ANR	1668301	Symbol	saved_inst		1667882						
ANR	1668302	Symbol	* inst		1667882						
ANR	1668303	Symbol	~0x3FFFFFFFL		1667882						
ANR	1668304	Symbol	target_addr		1667882						
ANR	1668305	Symbol	diff		1667882						
ANR	1668306	Symbol	jump -> addr		1667882						
ANR	1668307	Symbol	__LINE__		1667882						
ANR	1668308	Symbol	BOFF_X1		1667882						
ANR	1668309	Symbol	IS_JAL		1667882						
ANR	1668310	Symbol	PATCH_J		1667882						
ANR	1668311	Symbol	* jump -> u . label		1667882						
ANR	1668312	Symbol	SIMM_17BIT_MAX		1667882						
ANR	1668313	Symbol	* jump -> u		1667882						
ANR	1668314	Symbol	IS_COND		1667882						
ANR	1668315	Symbol	BEQZ_X1		1667882						
ANR	1668316	Symbol	inst		1667882						
ANR	1668317	Symbol	jump -> u . target		1667882						
ANR	1668318	Symbol	PATCH_B		1667882						
ANR	1668319	Symbol	SRCA_X1		1667882						
ANR	1668320	Symbol	jump -> u . label		1667882						
ANR	1668321	Function	sljit_generate_code	997:0:30288:33686							
ANR	1668322	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1668321	0					
ANR	1668323	CompoundStatement		998:0:30373:33686	1668321	0					
ANR	1668324	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	999:1:30376:30409	1668321	0	True				
ANR	1668325	IdentifierDecl	* buf		1668321	0					
ANR	1668326	IdentifierDeclType	struct sljit_memory_fragment *		1668321	0					
ANR	1668327	Identifier	buf		1668321	1					
ANR	1668328	IdentifierDeclStatement	sljit_ins * code ;	1000:1:30412:30427	1668321	1	True				
ANR	1668329	IdentifierDecl	* code		1668321	0					
ANR	1668330	IdentifierDeclType	sljit_ins *		1668321	0					
ANR	1668331	Identifier	code		1668321	1					
ANR	1668332	IdentifierDeclStatement	sljit_ins * code_ptr ;	1001:1:30430:30449	1668321	2	True				
ANR	1668333	IdentifierDecl	* code_ptr		1668321	0					
ANR	1668334	IdentifierDeclType	sljit_ins *		1668321	0					
ANR	1668335	Identifier	code_ptr		1668321	1					
ANR	1668336	IdentifierDeclStatement	sljit_ins * buf_ptr ;	1002:1:30452:30470	1668321	3	True				
ANR	1668337	IdentifierDecl	* buf_ptr		1668321	0					
ANR	1668338	IdentifierDeclType	sljit_ins *		1668321	0					
ANR	1668339	Identifier	buf_ptr		1668321	1					
ANR	1668340	IdentifierDeclStatement	sljit_ins * buf_end ;	1003:1:30473:30491	1668321	4	True				
ANR	1668341	IdentifierDecl	* buf_end		1668321	0					
ANR	1668342	IdentifierDeclType	sljit_ins *		1668321	0					
ANR	1668343	Identifier	buf_end		1668321	1					
ANR	1668344	IdentifierDeclStatement	sljit_uw word_count ;	1004:1:30494:30513	1668321	5	True				
ANR	1668345	IdentifierDecl	word_count		1668321	0					
ANR	1668346	IdentifierDeclType	sljit_uw		1668321	0					
ANR	1668347	Identifier	word_count		1668321	1					
ANR	1668348	IdentifierDeclStatement	sljit_uw addr ;	1005:1:30516:30529	1668321	6	True				
ANR	1668349	IdentifierDecl	addr		1668321	0					
ANR	1668350	IdentifierDeclType	sljit_uw		1668321	0					
ANR	1668351	Identifier	addr		1668321	1					
ANR	1668352	IdentifierDeclStatement	struct sljit_label * label ;	1007:1:30533:30558	1668321	7	True				
ANR	1668353	IdentifierDecl	* label		1668321	0					
ANR	1668354	IdentifierDeclType	struct sljit_label *		1668321	0					
ANR	1668355	Identifier	label		1668321	1					
ANR	1668356	IdentifierDeclStatement	struct sljit_jump * jump ;	1008:1:30561:30584	1668321	8	True				
ANR	1668357	IdentifierDecl	* jump		1668321	0					
ANR	1668358	IdentifierDeclType	struct sljit_jump *		1668321	0					
ANR	1668359	Identifier	jump		1668321	1					
ANR	1668360	IdentifierDeclStatement	struct sljit_const * const_ ;	1009:1:30587:30613	1668321	9	True				
ANR	1668361	IdentifierDecl	* const_		1668321	0					
ANR	1668362	IdentifierDeclType	struct sljit_const *		1668321	0					
ANR	1668363	Identifier	const_		1668321	1					
ANR	1668364	ExpressionStatement	CHECK_ERROR_PTR ( )	1011:1:30617:30634	1668321	10	True				
ANR	1668365	CallExpression	CHECK_ERROR_PTR ( )		1668321	0					
ANR	1668366	Callee	CHECK_ERROR_PTR		1668321	0					
ANR	1668367	Identifier	CHECK_ERROR_PTR		1668321	0					
ANR	1668368	ArgumentList			1668321	1					
ANR	1668369	ExpressionStatement	check_sljit_generate_code ( compiler )	1012:1:30637:30672	1668321	11	True				
ANR	1668370	CallExpression	check_sljit_generate_code ( compiler )		1668321	0					
ANR	1668371	Callee	check_sljit_generate_code		1668321	0					
ANR	1668372	Identifier	check_sljit_generate_code		1668321	0					
ANR	1668373	ArgumentList	compiler		1668321	1					
ANR	1668374	Argument	compiler		1668321	0					
ANR	1668375	Identifier	compiler		1668321	0					
ANR	1668376	ExpressionStatement	reverse_buf ( compiler )	1013:1:30675:30696	1668321	12	True				
ANR	1668377	CallExpression	reverse_buf ( compiler )		1668321	0					
ANR	1668378	Callee	reverse_buf		1668321	0					
ANR	1668379	Identifier	reverse_buf		1668321	0					
ANR	1668380	ArgumentList	compiler		1668321	1					
ANR	1668381	Argument	compiler		1668321	0					
ANR	1668382	Identifier	compiler		1668321	0					
ANR	1668383	ExpressionStatement	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )	1015:1:30700:30773	1668321	13	True				
ANR	1668384	AssignmentExpression	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1668321	0		=			
ANR	1668385	Identifier	code		1668321	0					
ANR	1668386	CastExpression	( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1668321	1					
ANR	1668387	CastTarget	sljit_ins *		1668321	0					
ANR	1668388	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1668321	1					
ANR	1668389	Callee	SLJIT_MALLOC_EXEC		1668321	0					
ANR	1668390	Identifier	SLJIT_MALLOC_EXEC		1668321	0					
ANR	1668391	ArgumentList	compiler -> size * sizeof ( sljit_ins )		1668321	1					
ANR	1668392	Argument	compiler -> size * sizeof ( sljit_ins )		1668321	0					
ANR	1668393	MultiplicativeExpression	compiler -> size * sizeof ( sljit_ins )		1668321	0		*			
ANR	1668394	PtrMemberAccess	compiler -> size		1668321	0					
ANR	1668395	Identifier	compiler		1668321	0					
ANR	1668396	Identifier	size		1668321	1					
ANR	1668397	SizeofExpression	sizeof ( sljit_ins )		1668321	1					
ANR	1668398	Sizeof	sizeof		1668321	0					
ANR	1668399	SizeofOperand	sljit_ins		1668321	1					
ANR	1668400	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	1016:1:30776:30803	1668321	14	True				
ANR	1668401	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1668321	0					
ANR	1668402	Callee	PTR_FAIL_WITH_EXEC_IF		1668321	0					
ANR	1668403	Identifier	PTR_FAIL_WITH_EXEC_IF		1668321	0					
ANR	1668404	ArgumentList	code		1668321	1					
ANR	1668405	Argument	code		1668321	0					
ANR	1668406	Identifier	code		1668321	0					
ANR	1668407	ExpressionStatement	buf = compiler -> buf	1017:1:30806:30825	1668321	15	True				
ANR	1668408	AssignmentExpression	buf = compiler -> buf		1668321	0		=			
ANR	1668409	Identifier	buf		1668321	0					
ANR	1668410	PtrMemberAccess	compiler -> buf		1668321	1					
ANR	1668411	Identifier	compiler		1668321	0					
ANR	1668412	Identifier	buf		1668321	1					
ANR	1668413	ExpressionStatement	code_ptr = code	1019:1:30829:30844	1668321	16	True				
ANR	1668414	AssignmentExpression	code_ptr = code		1668321	0		=			
ANR	1668415	Identifier	code_ptr		1668321	0					
ANR	1668416	Identifier	code		1668321	1					
ANR	1668417	ExpressionStatement	word_count = 0	1020:1:30847:30861	1668321	17	True				
ANR	1668418	AssignmentExpression	word_count = 0		1668321	0		=			
ANR	1668419	Identifier	word_count		1668321	0					
ANR	1668420	PrimaryExpression	0		1668321	1					
ANR	1668421	ExpressionStatement	label = compiler -> labels	1021:1:30864:30888	1668321	18	True				
ANR	1668422	AssignmentExpression	label = compiler -> labels		1668321	0		=			
ANR	1668423	Identifier	label		1668321	0					
ANR	1668424	PtrMemberAccess	compiler -> labels		1668321	1					
ANR	1668425	Identifier	compiler		1668321	0					
ANR	1668426	Identifier	labels		1668321	1					
ANR	1668427	ExpressionStatement	jump = compiler -> jumps	1022:1:30891:30913	1668321	19	True				
ANR	1668428	AssignmentExpression	jump = compiler -> jumps		1668321	0		=			
ANR	1668429	Identifier	jump		1668321	0					
ANR	1668430	PtrMemberAccess	compiler -> jumps		1668321	1					
ANR	1668431	Identifier	compiler		1668321	0					
ANR	1668432	Identifier	jumps		1668321	1					
ANR	1668433	ExpressionStatement	const_ = compiler -> consts	1023:1:30916:30941	1668321	20	True				
ANR	1668434	AssignmentExpression	const_ = compiler -> consts		1668321	0		=			
ANR	1668435	Identifier	const_		1668321	0					
ANR	1668436	PtrMemberAccess	compiler -> consts		1668321	1					
ANR	1668437	Identifier	compiler		1668321	0					
ANR	1668438	Identifier	consts		1668321	1					
ANR	1668439	DoStatement	do		1668321	21					
ANR	1668440	CompoundStatement		27:4:573:573	1668321	0					
ANR	1668441	ExpressionStatement	buf_ptr = ( sljit_ins * ) buf -> memory	1025:2:30951:30985	1668321	0	True				
ANR	1668442	AssignmentExpression	buf_ptr = ( sljit_ins * ) buf -> memory		1668321	0		=			
ANR	1668443	Identifier	buf_ptr		1668321	0					
ANR	1668444	CastExpression	( sljit_ins * ) buf -> memory		1668321	1					
ANR	1668445	CastTarget	sljit_ins *		1668321	0					
ANR	1668446	PtrMemberAccess	buf -> memory		1668321	1					
ANR	1668447	Identifier	buf		1668321	0					
ANR	1668448	Identifier	memory		1668321	1					
ANR	1668449	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 3 )	1026:2:30989:31030	1668321	1	True				
ANR	1668450	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 3 )		1668321	0		=			
ANR	1668451	Identifier	buf_end		1668321	0					
ANR	1668452	AdditiveExpression	buf_ptr + ( buf -> used_size >> 3 )		1668321	1		+			
ANR	1668453	Identifier	buf_ptr		1668321	0					
ANR	1668454	ShiftExpression	buf -> used_size >> 3		1668321	1		>>			
ANR	1668455	PtrMemberAccess	buf -> used_size		1668321	0					
ANR	1668456	Identifier	buf		1668321	0					
ANR	1668457	Identifier	used_size		1668321	1					
ANR	1668458	PrimaryExpression	3		1668321	1					
ANR	1668459	DoStatement	do		1668321	2					
ANR	1668460	CompoundStatement		30:5:663:663	1668321	0					
ANR	1668461	ExpressionStatement	* code_ptr = * buf_ptr ++	1028:3:31042:31064	1668321	0	True				
ANR	1668462	AssignmentExpression	* code_ptr = * buf_ptr ++		1668321	0		=			
ANR	1668463	UnaryOperationExpression	* code_ptr		1668321	0					
ANR	1668464	UnaryOperator	*		1668321	0					
ANR	1668465	Identifier	code_ptr		1668321	1					
ANR	1668466	UnaryOperationExpression	* buf_ptr ++		1668321	1					
ANR	1668467	UnaryOperator	*		1668321	0					
ANR	1668468	PostIncDecOperationExpression	buf_ptr ++		1668321	1					
ANR	1668469	Identifier	buf_ptr		1668321	0					
ANR	1668470	IncDec	++		1668321	1					
ANR	1668471	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	1029:3:31069:31118	1668321	1	True				
ANR	1668472	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1668321	0					
ANR	1668473	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668474	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668475	ArgumentList	! label || label -> size >= word_count		1668321	1					
ANR	1668476	Argument	! label || label -> size >= word_count		1668321	0					
ANR	1668477	OrExpression	! label || label -> size >= word_count		1668321	0		||			
ANR	1668478	UnaryOperationExpression	! label		1668321	0					
ANR	1668479	UnaryOperator	!		1668321	0					
ANR	1668480	Identifier	label		1668321	1					
ANR	1668481	RelationalExpression	label -> size >= word_count		1668321	1		>=			
ANR	1668482	PtrMemberAccess	label -> size		1668321	0					
ANR	1668483	Identifier	label		1668321	0					
ANR	1668484	Identifier	size		1668321	1					
ANR	1668485	Identifier	word_count		1668321	1					
ANR	1668486	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	1030:3:31123:31170	1668321	2	True				
ANR	1668487	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1668321	0					
ANR	1668488	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668489	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668490	ArgumentList	! jump || jump -> addr >= word_count		1668321	1					
ANR	1668491	Argument	! jump || jump -> addr >= word_count		1668321	0					
ANR	1668492	OrExpression	! jump || jump -> addr >= word_count		1668321	0		||			
ANR	1668493	UnaryOperationExpression	! jump		1668321	0					
ANR	1668494	UnaryOperator	!		1668321	0					
ANR	1668495	Identifier	jump		1668321	1					
ANR	1668496	RelationalExpression	jump -> addr >= word_count		1668321	1		>=			
ANR	1668497	PtrMemberAccess	jump -> addr		1668321	0					
ANR	1668498	Identifier	jump		1668321	0					
ANR	1668499	Identifier	addr		1668321	1					
ANR	1668500	Identifier	word_count		1668321	1					
ANR	1668501	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	1031:3:31175:31226	1668321	3	True				
ANR	1668502	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1668321	0					
ANR	1668503	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668504	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668505	ArgumentList	! const_ || const_ -> addr >= word_count		1668321	1					
ANR	1668506	Argument	! const_ || const_ -> addr >= word_count		1668321	0					
ANR	1668507	OrExpression	! const_ || const_ -> addr >= word_count		1668321	0		||			
ANR	1668508	UnaryOperationExpression	! const_		1668321	0					
ANR	1668509	UnaryOperator	!		1668321	0					
ANR	1668510	Identifier	const_		1668321	1					
ANR	1668511	RelationalExpression	const_ -> addr >= word_count		1668321	1		>=			
ANR	1668512	PtrMemberAccess	const_ -> addr		1668321	0					
ANR	1668513	Identifier	const_		1668321	0					
ANR	1668514	Identifier	addr		1668321	1					
ANR	1668515	Identifier	word_count		1668321	1					
ANR	1668516	IfStatement	if ( label && label -> size == word_count )		1668321	4					
ANR	1668517	Condition	label && label -> size == word_count	1033:7:31291:31324	1668321	0	True				
ANR	1668518	AndExpression	label && label -> size == word_count		1668321	0		&&			
ANR	1668519	Identifier	label		1668321	0					
ANR	1668520	EqualityExpression	label -> size == word_count		1668321	1		==			
ANR	1668521	PtrMemberAccess	label -> size		1668321	0					
ANR	1668522	Identifier	label		1668321	0					
ANR	1668523	Identifier	size		1668321	1					
ANR	1668524	Identifier	word_count		1668321	1					
ANR	1668525	CompoundStatement		36:43:953:953	1668321	1					
ANR	1668526	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	1035:4:31371:31404	1668321	0	True				
ANR	1668527	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1668321	0		=			
ANR	1668528	PtrMemberAccess	label -> addr		1668321	0					
ANR	1668529	Identifier	label		1668321	0					
ANR	1668530	Identifier	addr		1668321	1					
ANR	1668531	CastExpression	( sljit_uw ) code_ptr		1668321	1					
ANR	1668532	CastTarget	sljit_uw		1668321	0					
ANR	1668533	Identifier	code_ptr		1668321	1					
ANR	1668534	ExpressionStatement	label -> size = code_ptr - code	1036:4:31410:31439	1668321	1	True				
ANR	1668535	AssignmentExpression	label -> size = code_ptr - code		1668321	0		=			
ANR	1668536	PtrMemberAccess	label -> size		1668321	0					
ANR	1668537	Identifier	label		1668321	0					
ANR	1668538	Identifier	size		1668321	1					
ANR	1668539	AdditiveExpression	code_ptr - code		1668321	1		-			
ANR	1668540	Identifier	code_ptr		1668321	0					
ANR	1668541	Identifier	code		1668321	1					
ANR	1668542	ExpressionStatement	label = label -> next	1037:4:31445:31464	1668321	2	True				
ANR	1668543	AssignmentExpression	label = label -> next		1668321	0		=			
ANR	1668544	Identifier	label		1668321	0					
ANR	1668545	PtrMemberAccess	label -> next		1668321	1					
ANR	1668546	Identifier	label		1668321	0					
ANR	1668547	Identifier	next		1668321	1					
ANR	1668548	IfStatement	if ( jump && jump -> addr == word_count )		1668321	5					
ANR	1668549	Condition	jump && jump -> addr == word_count	1040:7:31479:31510	1668321	0	True				
ANR	1668550	AndExpression	jump && jump -> addr == word_count		1668321	0		&&			
ANR	1668551	Identifier	jump		1668321	0					
ANR	1668552	EqualityExpression	jump -> addr == word_count		1668321	1		==			
ANR	1668553	PtrMemberAccess	jump -> addr		1668321	0					
ANR	1668554	Identifier	jump		1668321	0					
ANR	1668555	Identifier	addr		1668321	1					
ANR	1668556	Identifier	word_count		1668321	1					
ANR	1668557	CompoundStatement		43:41:1139:1139	1668321	1					
ANR	1668558	IfStatement	if ( jump -> flags & IS_JAL )		1668321	0					
ANR	1668559	Condition	jump -> flags & IS_JAL	1041:8:31523:31542	1668321	0	True				
ANR	1668560	BitAndExpression	jump -> flags & IS_JAL		1668321	0		&			
ANR	1668561	PtrMemberAccess	jump -> flags		1668321	0					
ANR	1668562	Identifier	jump		1668321	0					
ANR	1668563	Identifier	flags		1668321	1					
ANR	1668564	Identifier	IS_JAL		1668321	1					
ANR	1668565	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 4 )	1042:5:31550:31587	1668321	1	True				
ANR	1668566	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 4 )		1668321	0		=			
ANR	1668567	PtrMemberAccess	jump -> addr		1668321	0					
ANR	1668568	Identifier	jump		1668321	0					
ANR	1668569	Identifier	addr		1668321	1					
ANR	1668570	CastExpression	( sljit_uw ) ( code_ptr - 4 )		1668321	1					
ANR	1668571	CastTarget	sljit_uw		1668321	0					
ANR	1668572	AdditiveExpression	code_ptr - 4		1668321	1		-			
ANR	1668573	Identifier	code_ptr		1668321	0					
ANR	1668574	PrimaryExpression	4		1668321	1					
ANR	1668575	ElseStatement	else		1668321	0					
ANR	1668576	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )	1044:5:31603:31640	1668321	0	True				
ANR	1668577	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )		1668321	0		=			
ANR	1668578	PtrMemberAccess	jump -> addr		1668321	0					
ANR	1668579	Identifier	jump		1668321	0					
ANR	1668580	Identifier	addr		1668321	1					
ANR	1668581	CastExpression	( sljit_uw ) ( code_ptr - 3 )		1668321	1					
ANR	1668582	CastTarget	sljit_uw		1668321	0					
ANR	1668583	AdditiveExpression	code_ptr - 3		1668321	1		-			
ANR	1668584	Identifier	code_ptr		1668321	0					
ANR	1668585	PrimaryExpression	3		1668321	1					
ANR	1668586	ExpressionStatement	"code_ptr = detect_jump_type ( jump , code_ptr , code )"	1046:4:31647:31696	1668321	1	True				
ANR	1668587	AssignmentExpression	"code_ptr = detect_jump_type ( jump , code_ptr , code )"		1668321	0		=			
ANR	1668588	Identifier	code_ptr		1668321	0					
ANR	1668589	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1668321	1					
ANR	1668590	Callee	detect_jump_type		1668321	0					
ANR	1668591	Identifier	detect_jump_type		1668321	0					
ANR	1668592	ArgumentList	jump		1668321	1					
ANR	1668593	Argument	jump		1668321	0					
ANR	1668594	Identifier	jump		1668321	0					
ANR	1668595	Argument	code_ptr		1668321	1					
ANR	1668596	Identifier	code_ptr		1668321	0					
ANR	1668597	Argument	code		1668321	2					
ANR	1668598	Identifier	code		1668321	0					
ANR	1668599	ExpressionStatement	jump = jump -> next	1047:4:31702:31719	1668321	2	True				
ANR	1668600	AssignmentExpression	jump = jump -> next		1668321	0		=			
ANR	1668601	Identifier	jump		1668321	0					
ANR	1668602	PtrMemberAccess	jump -> next		1668321	1					
ANR	1668603	Identifier	jump		1668321	0					
ANR	1668604	Identifier	next		1668321	1					
ANR	1668605	IfStatement	if ( const_ && const_ -> addr == word_count )		1668321	6					
ANR	1668606	Condition	const_ && const_ -> addr == word_count	1050:7:31734:31769	1668321	0	True				
ANR	1668607	AndExpression	const_ && const_ -> addr == word_count		1668321	0		&&			
ANR	1668608	Identifier	const_		1668321	0					
ANR	1668609	EqualityExpression	const_ -> addr == word_count		1668321	1		==			
ANR	1668610	PtrMemberAccess	const_ -> addr		1668321	0					
ANR	1668611	Identifier	const_		1668321	0					
ANR	1668612	Identifier	addr		1668321	1					
ANR	1668613	Identifier	word_count		1668321	1					
ANR	1668614	CompoundStatement		53:45:1398:1398	1668321	1					
ANR	1668615	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	1052:4:31816:31850	1668321	0	True				
ANR	1668616	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1668321	0		=			
ANR	1668617	PtrMemberAccess	const_ -> addr		1668321	0					
ANR	1668618	Identifier	const_		1668321	0					
ANR	1668619	Identifier	addr		1668321	1					
ANR	1668620	CastExpression	( sljit_uw ) code_ptr		1668321	1					
ANR	1668621	CastTarget	sljit_uw		1668321	0					
ANR	1668622	Identifier	code_ptr		1668321	1					
ANR	1668623	ExpressionStatement	const_ = const_ -> next	1053:4:31856:31877	1668321	1	True				
ANR	1668624	AssignmentExpression	const_ = const_ -> next		1668321	0		=			
ANR	1668625	Identifier	const_		1668321	0					
ANR	1668626	PtrMemberAccess	const_ -> next		1668321	1					
ANR	1668627	Identifier	const_		1668321	0					
ANR	1668628	Identifier	next		1668321	1					
ANR	1668629	ExpressionStatement	code_ptr ++	1056:3:31888:31898	1668321	7	True				
ANR	1668630	PostIncDecOperationExpression	code_ptr ++		1668321	0					
ANR	1668631	Identifier	code_ptr		1668321	0					
ANR	1668632	IncDec	++		1668321	1					
ANR	1668633	ExpressionStatement	word_count ++	1057:3:31903:31915	1668321	8	True				
ANR	1668634	PostIncDecOperationExpression	word_count ++		1668321	0					
ANR	1668635	Identifier	word_count		1668321	0					
ANR	1668636	IncDec	++		1668321	1					
ANR	1668637	Condition	buf_ptr < buf_end	1058:11:31928:31944	1668321	1	True				
ANR	1668638	RelationalExpression	buf_ptr < buf_end		1668321	0		<			
ANR	1668639	Identifier	buf_ptr		1668321	0					
ANR	1668640	Identifier	buf_end		1668321	1					
ANR	1668641	ExpressionStatement	buf = buf -> next	1060:2:31951:31966	1668321	3	True				
ANR	1668642	AssignmentExpression	buf = buf -> next		1668321	0		=			
ANR	1668643	Identifier	buf		1668321	0					
ANR	1668644	PtrMemberAccess	buf -> next		1668321	1					
ANR	1668645	Identifier	buf		1668321	0					
ANR	1668646	Identifier	next		1668321	1					
ANR	1668647	Condition	buf	1061:10:31978:31980	1668321	1	True				
ANR	1668648	Identifier	buf		1668321	0					
ANR	1668649	IfStatement	if ( label && label -> size == word_count )		1668321	22					
ANR	1668650	Condition	label && label -> size == word_count	1063:5:31990:32023	1668321	0	True				
ANR	1668651	AndExpression	label && label -> size == word_count		1668321	0		&&			
ANR	1668652	Identifier	label		1668321	0					
ANR	1668653	EqualityExpression	label -> size == word_count		1668321	1		==			
ANR	1668654	PtrMemberAccess	label -> size		1668321	0					
ANR	1668655	Identifier	label		1668321	0					
ANR	1668656	Identifier	size		1668321	1					
ANR	1668657	Identifier	word_count		1668321	1					
ANR	1668658	CompoundStatement		66:41:1652:1652	1668321	1					
ANR	1668659	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	1064:2:32030:32063	1668321	0	True				
ANR	1668660	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1668321	0		=			
ANR	1668661	PtrMemberAccess	label -> addr		1668321	0					
ANR	1668662	Identifier	label		1668321	0					
ANR	1668663	Identifier	addr		1668321	1					
ANR	1668664	CastExpression	( sljit_uw ) code_ptr		1668321	1					
ANR	1668665	CastTarget	sljit_uw		1668321	0					
ANR	1668666	Identifier	code_ptr		1668321	1					
ANR	1668667	ExpressionStatement	label -> size = code_ptr - code	1065:2:32067:32096	1668321	1	True				
ANR	1668668	AssignmentExpression	label -> size = code_ptr - code		1668321	0		=			
ANR	1668669	PtrMemberAccess	label -> size		1668321	0					
ANR	1668670	Identifier	label		1668321	0					
ANR	1668671	Identifier	size		1668321	1					
ANR	1668672	AdditiveExpression	code_ptr - code		1668321	1		-			
ANR	1668673	Identifier	code_ptr		1668321	0					
ANR	1668674	Identifier	code		1668321	1					
ANR	1668675	ExpressionStatement	label = label -> next	1066:2:32100:32119	1668321	2	True				
ANR	1668676	AssignmentExpression	label = label -> next		1668321	0		=			
ANR	1668677	Identifier	label		1668321	0					
ANR	1668678	PtrMemberAccess	label -> next		1668321	1					
ANR	1668679	Identifier	label		1668321	0					
ANR	1668680	Identifier	next		1668321	1					
ANR	1668681	ExpressionStatement	SLJIT_ASSERT ( ! label )	1069:1:32126:32146	1668321	23	True				
ANR	1668682	CallExpression	SLJIT_ASSERT ( ! label )		1668321	0					
ANR	1668683	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668684	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668685	ArgumentList	! label		1668321	1					
ANR	1668686	Argument	! label		1668321	0					
ANR	1668687	UnaryOperationExpression	! label		1668321	0					
ANR	1668688	UnaryOperator	!		1668321	0					
ANR	1668689	Identifier	label		1668321	1					
ANR	1668690	ExpressionStatement	SLJIT_ASSERT ( ! jump )	1070:1:32149:32168	1668321	24	True				
ANR	1668691	CallExpression	SLJIT_ASSERT ( ! jump )		1668321	0					
ANR	1668692	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668693	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668694	ArgumentList	! jump		1668321	1					
ANR	1668695	Argument	! jump		1668321	0					
ANR	1668696	UnaryOperationExpression	! jump		1668321	0					
ANR	1668697	UnaryOperator	!		1668321	0					
ANR	1668698	Identifier	jump		1668321	1					
ANR	1668699	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	1071:1:32171:32192	1668321	25	True				
ANR	1668700	CallExpression	SLJIT_ASSERT ( ! const_ )		1668321	0					
ANR	1668701	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668702	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668703	ArgumentList	! const_		1668321	1					
ANR	1668704	Argument	! const_		1668321	0					
ANR	1668705	UnaryOperationExpression	! const_		1668321	0					
ANR	1668706	UnaryOperator	!		1668321	0					
ANR	1668707	Identifier	const_		1668321	1					
ANR	1668708	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )	1072:1:32195:32252	1668321	26	True				
ANR	1668709	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size )		1668321	0					
ANR	1668710	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668711	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668712	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size		1668321	1					
ANR	1668713	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size		1668321	0					
ANR	1668714	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size		1668321	0		<=			
ANR	1668715	AdditiveExpression	code_ptr - code		1668321	0		-			
ANR	1668716	Identifier	code_ptr		1668321	0					
ANR	1668717	Identifier	code		1668321	1					
ANR	1668718	CastExpression	( sljit_sw ) compiler -> size		1668321	1					
ANR	1668719	CastTarget	sljit_sw		1668321	0					
ANR	1668720	PtrMemberAccess	compiler -> size		1668321	1					
ANR	1668721	Identifier	compiler		1668321	0					
ANR	1668722	Identifier	size		1668321	1					
ANR	1668723	ExpressionStatement	jump = compiler -> jumps	1074:1:32256:32278	1668321	27	True				
ANR	1668724	AssignmentExpression	jump = compiler -> jumps		1668321	0		=			
ANR	1668725	Identifier	jump		1668321	0					
ANR	1668726	PtrMemberAccess	compiler -> jumps		1668321	1					
ANR	1668727	Identifier	compiler		1668321	0					
ANR	1668728	Identifier	jumps		1668321	1					
ANR	1668729	WhileStatement	while ( jump )		1668321	28					
ANR	1668730	Condition	jump	1075:8:32288:32291	1668321	0	True				
ANR	1668731	Identifier	jump		1668321	0					
ANR	1668732	CompoundStatement		78:14:1920:1920	1668321	1					
ANR	1668733	DoStatement	do		1668321	0					
ANR	1668734	CompoundStatement		79:5:1927:1927	1668321	0					
ANR	1668735	ExpressionStatement	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	1077:3:32306:32378	1668321	0	True				
ANR	1668736	AssignmentExpression	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1668321	0		=			
ANR	1668737	Identifier	addr		1668321	0					
ANR	1668738	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1668321	1					
ANR	1668739	Condition	jump -> flags & JUMP_LABEL		1668321	0					
ANR	1668740	BitAndExpression	jump -> flags & JUMP_LABEL		1668321	0		&			
ANR	1668741	PtrMemberAccess	jump -> flags		1668321	0					
ANR	1668742	Identifier	jump		1668321	0					
ANR	1668743	Identifier	flags		1668321	1					
ANR	1668744	Identifier	JUMP_LABEL		1668321	1					
ANR	1668745	PtrMemberAccess	jump -> u . label -> addr		1668321	1					
ANR	1668746	MemberAccess	jump -> u . label		1668321	0					
ANR	1668747	PtrMemberAccess	jump -> u		1668321	0					
ANR	1668748	Identifier	jump		1668321	0					
ANR	1668749	Identifier	u		1668321	1					
ANR	1668750	Identifier	label		1668321	1					
ANR	1668751	Identifier	addr		1668321	1					
ANR	1668752	MemberAccess	jump -> u . target		1668321	2					
ANR	1668753	PtrMemberAccess	jump -> u		1668321	0					
ANR	1668754	Identifier	jump		1668321	0					
ANR	1668755	Identifier	u		1668321	1					
ANR	1668756	Identifier	target		1668321	1					
ANR	1668757	ExpressionStatement	buf_ptr = ( sljit_ins * ) jump -> addr	1078:3:32383:32416	1668321	1	True				
ANR	1668758	AssignmentExpression	buf_ptr = ( sljit_ins * ) jump -> addr		1668321	0		=			
ANR	1668759	Identifier	buf_ptr		1668321	0					
ANR	1668760	CastExpression	( sljit_ins * ) jump -> addr		1668321	1					
ANR	1668761	CastTarget	sljit_ins *		1668321	0					
ANR	1668762	PtrMemberAccess	jump -> addr		1668321	1					
ANR	1668763	Identifier	jump		1668321	0					
ANR	1668764	Identifier	addr		1668321	1					
ANR	1668765	IfStatement	if ( jump -> flags & PATCH_B )		1668321	2					
ANR	1668766	Condition	jump -> flags & PATCH_B	1080:7:32426:32446	1668321	0	True				
ANR	1668767	BitAndExpression	jump -> flags & PATCH_B		1668321	0		&			
ANR	1668768	PtrMemberAccess	jump -> flags		1668321	0					
ANR	1668769	Identifier	jump		1668321	0					
ANR	1668770	Identifier	flags		1668321	1					
ANR	1668771	Identifier	PATCH_B		1668321	1					
ANR	1668772	CompoundStatement		83:30:2075:2075	1668321	1					
ANR	1668773	ExpressionStatement	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3	1081:4:32455:32498	1668321	0	True				
ANR	1668774	AssignmentExpression	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1668321	0		=			
ANR	1668775	Identifier	addr		1668321	0					
ANR	1668776	ShiftExpression	( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1668321	1		>>			
ANR	1668777	CastExpression	( sljit_sw ) ( addr - ( jump -> addr ) )		1668321	0					
ANR	1668778	CastTarget	sljit_sw		1668321	0					
ANR	1668779	AdditiveExpression	addr - ( jump -> addr )		1668321	1		-			
ANR	1668780	Identifier	addr		1668321	0					
ANR	1668781	PtrMemberAccess	jump -> addr		1668321	1					
ANR	1668782	Identifier	jump		1668321	0					
ANR	1668783	Identifier	addr		1668321	1					
ANR	1668784	PrimaryExpression	3		1668321	1					
ANR	1668785	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN )	1082:4:32504:32588	1668321	1	True				
ANR	1668786	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN )		1668321	0					
ANR	1668787	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668788	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668789	ArgumentList	( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN		1668321	1					
ANR	1668790	Argument	( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN		1668321	0					
ANR	1668791	AndExpression	( sljit_sw ) addr <= SIMM_17BIT_MAX && ( sljit_sw ) addr >= SIMM_17BIT_MIN		1668321	0		&&			
ANR	1668792	RelationalExpression	( sljit_sw ) addr <= SIMM_17BIT_MAX		1668321	0		<=			
ANR	1668793	CastExpression	( sljit_sw ) addr		1668321	0					
ANR	1668794	CastTarget	sljit_sw		1668321	0					
ANR	1668795	Identifier	addr		1668321	1					
ANR	1668796	Identifier	SIMM_17BIT_MAX		1668321	1					
ANR	1668797	RelationalExpression	( sljit_sw ) addr >= SIMM_17BIT_MIN		1668321	1		>=			
ANR	1668798	CastExpression	( sljit_sw ) addr		1668321	0					
ANR	1668799	CastTarget	sljit_sw		1668321	0					
ANR	1668800	Identifier	addr		1668321	1					
ANR	1668801	Identifier	SIMM_17BIT_MIN		1668321	1					
ANR	1668802	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( addr )	1083:4:32594:32652	1668321	2	True				
ANR	1668803	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( addr )		1668321	0		=			
ANR	1668804	ArrayIndexing	buf_ptr [ 0 ]		1668321	0					
ANR	1668805	Identifier	buf_ptr		1668321	0					
ANR	1668806	PrimaryExpression	0		1668321	1					
ANR	1668807	InclusiveOrExpression	( buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) ) ) | BOFF_X1 ( addr )		1668321	1		|			
ANR	1668808	BitAndExpression	buf_ptr [ 0 ] & ~ ( BOFF_X1 ( - 1 ) )		1668321	0		&			
ANR	1668809	ArrayIndexing	buf_ptr [ 0 ]		1668321	0					
ANR	1668810	Identifier	buf_ptr		1668321	0					
ANR	1668811	PrimaryExpression	0		1668321	1					
ANR	1668812	UnaryOperationExpression	~ ( BOFF_X1 ( - 1 ) )		1668321	1					
ANR	1668813	UnaryOperator	~		1668321	0					
ANR	1668814	CallExpression	BOFF_X1 ( - 1 )		1668321	1					
ANR	1668815	Callee	BOFF_X1		1668321	0					
ANR	1668816	Identifier	BOFF_X1		1668321	0					
ANR	1668817	ArgumentList	- 1		1668321	1					
ANR	1668818	Argument	- 1		1668321	0					
ANR	1668819	UnaryOperationExpression	- 1		1668321	0					
ANR	1668820	UnaryOperator	-		1668321	0					
ANR	1668821	PrimaryExpression	1		1668321	1					
ANR	1668822	CallExpression	BOFF_X1 ( addr )		1668321	1					
ANR	1668823	Callee	BOFF_X1		1668321	0					
ANR	1668824	Identifier	BOFF_X1		1668321	0					
ANR	1668825	ArgumentList	addr		1668321	1					
ANR	1668826	Argument	addr		1668321	0					
ANR	1668827	Identifier	addr		1668321	0					
ANR	1668828	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	1086:4:32683:32728	1668321	3	True				
ANR	1668829	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1668321	0					
ANR	1668830	Callee	printf		1668321	0					
ANR	1668831	Identifier	printf		1668321	0					
ANR	1668832	ArgumentList	"""[runtime relocate]%04d:\\t"""		1668321	1					
ANR	1668833	Argument	"""[runtime relocate]%04d:\\t"""		1668321	0					
ANR	1668834	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1668321	0					
ANR	1668835	Argument	__LINE__		1668321	1					
ANR	1668836	Identifier	__LINE__		1668321	0					
ANR	1668837	ExpressionStatement	print_insn_tilegx ( buf_ptr )	1087:4:32734:32760	1668321	4	True				
ANR	1668838	CallExpression	print_insn_tilegx ( buf_ptr )		1668321	0					
ANR	1668839	Callee	print_insn_tilegx		1668321	0					
ANR	1668840	Identifier	print_insn_tilegx		1668321	0					
ANR	1668841	ArgumentList	buf_ptr		1668321	1					
ANR	1668842	Argument	buf_ptr		1668321	0					
ANR	1668843	Identifier	buf_ptr		1668321	0					
ANR	1668844	BreakStatement	break ;	1089:4:32773:32778	1668321	5	True				
ANR	1668845	IfStatement	if ( jump -> flags & PATCH_J )		1668321	3					
ANR	1668846	Condition	jump -> flags & PATCH_J	1092:7:32793:32813	1668321	0	True				
ANR	1668847	BitAndExpression	jump -> flags & PATCH_J		1668321	0		&			
ANR	1668848	PtrMemberAccess	jump -> flags		1668321	0					
ANR	1668849	Identifier	jump		1668321	0					
ANR	1668850	Identifier	flags		1668321	1					
ANR	1668851	Identifier	PATCH_J		1668321	1					
ANR	1668852	CompoundStatement		95:30:2442:2442	1668321	1					
ANR	1668853	ExpressionStatement	SLJIT_ASSERT ( ( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )	1093:4:32822:32910	1668321	0	True				
ANR	1668854	CallExpression	SLJIT_ASSERT ( ( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL ) )		1668321	0					
ANR	1668855	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668856	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668857	ArgumentList	( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1668321	1					
ANR	1668858	Argument	( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1668321	0					
ANR	1668859	EqualityExpression	( addr & ~0x3FFFFFFFL ) == ( ( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL )		1668321	0		==			
ANR	1668860	BitAndExpression	addr & ~0x3FFFFFFFL		1668321	0		&			
ANR	1668861	Identifier	addr		1668321	0					
ANR	1668862	Identifier	~0x3FFFFFFFL		1668321	1					
ANR	1668863	BitAndExpression	( jump -> addr + sizeof ( sljit_ins ) ) & ~0x3FFFFFFFL		1668321	1		&			
ANR	1668864	AdditiveExpression	jump -> addr + sizeof ( sljit_ins )		1668321	0		+			
ANR	1668865	PtrMemberAccess	jump -> addr		1668321	0					
ANR	1668866	Identifier	jump		1668321	0					
ANR	1668867	Identifier	addr		1668321	1					
ANR	1668868	SizeofExpression	sizeof ( sljit_ins )		1668321	1					
ANR	1668869	Sizeof	sizeof		1668321	0					
ANR	1668870	SizeofOperand	sljit_ins		1668321	1					
ANR	1668871	Identifier	~0x3FFFFFFFL		1668321	1					
ANR	1668872	ExpressionStatement	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3	1094:4:32916:32959	1668321	1	True				
ANR	1668873	AssignmentExpression	addr = ( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1668321	0		=			
ANR	1668874	Identifier	addr		1668321	0					
ANR	1668875	ShiftExpression	( sljit_sw ) ( addr - ( jump -> addr ) ) >> 3		1668321	1		>>			
ANR	1668876	CastExpression	( sljit_sw ) ( addr - ( jump -> addr ) )		1668321	0					
ANR	1668877	CastTarget	sljit_sw		1668321	0					
ANR	1668878	AdditiveExpression	addr - ( jump -> addr )		1668321	1		-			
ANR	1668879	Identifier	addr		1668321	0					
ANR	1668880	PtrMemberAccess	jump -> addr		1668321	1					
ANR	1668881	Identifier	jump		1668321	0					
ANR	1668882	Identifier	addr		1668321	1					
ANR	1668883	PrimaryExpression	3		1668321	1					
ANR	1668884	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) ) ) | JOFF_X1 ( addr )	1095:4:32965:33023	1668321	2	True				
ANR	1668885	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) ) ) | JOFF_X1 ( addr )		1668321	0		=			
ANR	1668886	ArrayIndexing	buf_ptr [ 0 ]		1668321	0					
ANR	1668887	Identifier	buf_ptr		1668321	0					
ANR	1668888	PrimaryExpression	0		1668321	1					
ANR	1668889	InclusiveOrExpression	( buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) ) ) | JOFF_X1 ( addr )		1668321	1		|			
ANR	1668890	BitAndExpression	buf_ptr [ 0 ] & ~ ( JOFF_X1 ( - 1 ) )		1668321	0		&			
ANR	1668891	ArrayIndexing	buf_ptr [ 0 ]		1668321	0					
ANR	1668892	Identifier	buf_ptr		1668321	0					
ANR	1668893	PrimaryExpression	0		1668321	1					
ANR	1668894	UnaryOperationExpression	~ ( JOFF_X1 ( - 1 ) )		1668321	1					
ANR	1668895	UnaryOperator	~		1668321	0					
ANR	1668896	CallExpression	JOFF_X1 ( - 1 )		1668321	1					
ANR	1668897	Callee	JOFF_X1		1668321	0					
ANR	1668898	Identifier	JOFF_X1		1668321	0					
ANR	1668899	ArgumentList	- 1		1668321	1					
ANR	1668900	Argument	- 1		1668321	0					
ANR	1668901	UnaryOperationExpression	- 1		1668321	0					
ANR	1668902	UnaryOperator	-		1668321	0					
ANR	1668903	PrimaryExpression	1		1668321	1					
ANR	1668904	CallExpression	JOFF_X1 ( addr )		1668321	1					
ANR	1668905	Callee	JOFF_X1		1668321	0					
ANR	1668906	Identifier	JOFF_X1		1668321	0					
ANR	1668907	ArgumentList	addr		1668321	1					
ANR	1668908	Argument	addr		1668321	0					
ANR	1668909	Identifier	addr		1668321	0					
ANR	1668910	ExpressionStatement	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"	1098:4:33054:33099	1668321	3	True				
ANR	1668911	CallExpression	"printf ( ""[runtime relocate]%04d:\\t"" , __LINE__ )"		1668321	0					
ANR	1668912	Callee	printf		1668321	0					
ANR	1668913	Identifier	printf		1668321	0					
ANR	1668914	ArgumentList	"""[runtime relocate]%04d:\\t"""		1668321	1					
ANR	1668915	Argument	"""[runtime relocate]%04d:\\t"""		1668321	0					
ANR	1668916	PrimaryExpression	"""[runtime relocate]%04d:\\t"""		1668321	0					
ANR	1668917	Argument	__LINE__		1668321	1					
ANR	1668918	Identifier	__LINE__		1668321	0					
ANR	1668919	ExpressionStatement	print_insn_tilegx ( buf_ptr )	1099:4:33105:33131	1668321	4	True				
ANR	1668920	CallExpression	print_insn_tilegx ( buf_ptr )		1668321	0					
ANR	1668921	Callee	print_insn_tilegx		1668321	0					
ANR	1668922	Identifier	print_insn_tilegx		1668321	0					
ANR	1668923	ArgumentList	buf_ptr		1668321	1					
ANR	1668924	Argument	buf_ptr		1668321	0					
ANR	1668925	Identifier	buf_ptr		1668321	0					
ANR	1668926	BreakStatement	break ;	1101:4:33144:33149	1668321	5	True				
ANR	1668927	ExpressionStatement	SLJIT_ASSERT ( ! ( jump -> flags & IS_JAL ) )	1104:3:33160:33197	1668321	4	True				
ANR	1668928	CallExpression	SLJIT_ASSERT ( ! ( jump -> flags & IS_JAL ) )		1668321	0					
ANR	1668929	Callee	SLJIT_ASSERT		1668321	0					
ANR	1668930	Identifier	SLJIT_ASSERT		1668321	0					
ANR	1668931	ArgumentList	! ( jump -> flags & IS_JAL )		1668321	1					
ANR	1668932	Argument	! ( jump -> flags & IS_JAL )		1668321	0					
ANR	1668933	UnaryOperationExpression	! ( jump -> flags & IS_JAL )		1668321	0					
ANR	1668934	UnaryOperator	!		1668321	0					
ANR	1668935	BitAndExpression	jump -> flags & IS_JAL		1668321	1		&			
ANR	1668936	PtrMemberAccess	jump -> flags		1668321	0					
ANR	1668937	Identifier	jump		1668321	0					
ANR	1668938	Identifier	flags		1668321	1					
ANR	1668939	Identifier	IS_JAL		1668321	1					
ANR	1668940	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 32 ) & 0xFFFFL ) << 43 )	1107:3:33247:33326	1668321	5	True				
ANR	1668941	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 32 ) & 0xFFFFL ) << 43 )		1668321	0		=			
ANR	1668942	ArrayIndexing	buf_ptr [ 0 ]		1668321	0					
ANR	1668943	Identifier	buf_ptr		1668321	0					
ANR	1668944	PrimaryExpression	0		1668321	1					
ANR	1668945	InclusiveOrExpression	( buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 32 ) & 0xFFFFL ) << 43 )		1668321	1		|			
ANR	1668946	BitAndExpression	buf_ptr [ 0 ] & ~ ( 0xFFFFL << 43 )		1668321	0		&			
ANR	1668947	ArrayIndexing	buf_ptr [ 0 ]		1668321	0					
ANR	1668948	Identifier	buf_ptr		1668321	0					
ANR	1668949	PrimaryExpression	0		1668321	1					
ANR	1668950	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1668321	1					
ANR	1668951	UnaryOperator	~		1668321	0					
ANR	1668952	ShiftExpression	0xFFFFL << 43		1668321	1		<<			
ANR	1668953	PrimaryExpression	0xFFFFL		1668321	0					
ANR	1668954	PrimaryExpression	43		1668321	1					
ANR	1668955	ShiftExpression	( ( addr >> 32 ) & 0xFFFFL ) << 43		1668321	1		<<			
ANR	1668956	BitAndExpression	( addr >> 32 ) & 0xFFFFL		1668321	0		&			
ANR	1668957	ShiftExpression	addr >> 32		1668321	0		>>			
ANR	1668958	Identifier	addr		1668321	0					
ANR	1668959	PrimaryExpression	32		1668321	1					
ANR	1668960	PrimaryExpression	0xFFFFL		1668321	1					
ANR	1668961	PrimaryExpression	43		1668321	1					
ANR	1668962	ExpressionStatement	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 16 ) & 0xFFFFL ) << 43 )	1108:3:33331:33410	1668321	6	True				
ANR	1668963	AssignmentExpression	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 16 ) & 0xFFFFL ) << 43 )		1668321	0		=			
ANR	1668964	ArrayIndexing	buf_ptr [ 1 ]		1668321	0					
ANR	1668965	Identifier	buf_ptr		1668321	0					
ANR	1668966	PrimaryExpression	1		1668321	1					
ANR	1668967	InclusiveOrExpression	( buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( addr >> 16 ) & 0xFFFFL ) << 43 )		1668321	1		|			
ANR	1668968	BitAndExpression	buf_ptr [ 1 ] & ~ ( 0xFFFFL << 43 )		1668321	0		&			
ANR	1668969	ArrayIndexing	buf_ptr [ 1 ]		1668321	0					
ANR	1668970	Identifier	buf_ptr		1668321	0					
ANR	1668971	PrimaryExpression	1		1668321	1					
ANR	1668972	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1668321	1					
ANR	1668973	UnaryOperator	~		1668321	0					
ANR	1668974	ShiftExpression	0xFFFFL << 43		1668321	1		<<			
ANR	1668975	PrimaryExpression	0xFFFFL		1668321	0					
ANR	1668976	PrimaryExpression	43		1668321	1					
ANR	1668977	ShiftExpression	( ( addr >> 16 ) & 0xFFFFL ) << 43		1668321	1		<<			
ANR	1668978	BitAndExpression	( addr >> 16 ) & 0xFFFFL		1668321	0		&			
ANR	1668979	ShiftExpression	addr >> 16		1668321	0		>>			
ANR	1668980	Identifier	addr		1668321	0					
ANR	1668981	PrimaryExpression	16		1668321	1					
ANR	1668982	PrimaryExpression	0xFFFFL		1668321	1					
ANR	1668983	PrimaryExpression	43		1668321	1					
ANR	1668984	ExpressionStatement	buf_ptr [ 2 ] = ( buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( addr & 0xFFFFL ) << 43 )	1109:3:33415:33486	1668321	7	True				
ANR	1668985	AssignmentExpression	buf_ptr [ 2 ] = ( buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( addr & 0xFFFFL ) << 43 )		1668321	0		=			
ANR	1668986	ArrayIndexing	buf_ptr [ 2 ]		1668321	0					
ANR	1668987	Identifier	buf_ptr		1668321	0					
ANR	1668988	PrimaryExpression	2		1668321	1					
ANR	1668989	InclusiveOrExpression	( buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( addr & 0xFFFFL ) << 43 )		1668321	1		|			
ANR	1668990	BitAndExpression	buf_ptr [ 2 ] & ~ ( 0xFFFFL << 43 )		1668321	0		&			
ANR	1668991	ArrayIndexing	buf_ptr [ 2 ]		1668321	0					
ANR	1668992	Identifier	buf_ptr		1668321	0					
ANR	1668993	PrimaryExpression	2		1668321	1					
ANR	1668994	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1668321	1					
ANR	1668995	UnaryOperator	~		1668321	0					
ANR	1668996	ShiftExpression	0xFFFFL << 43		1668321	1		<<			
ANR	1668997	PrimaryExpression	0xFFFFL		1668321	0					
ANR	1668998	PrimaryExpression	43		1668321	1					
ANR	1668999	ShiftExpression	( addr & 0xFFFFL ) << 43		1668321	1		<<			
ANR	1669000	BitAndExpression	addr & 0xFFFFL		1668321	0		&			
ANR	1669001	Identifier	addr		1668321	0					
ANR	1669002	PrimaryExpression	0xFFFFL		1668321	1					
ANR	1669003	PrimaryExpression	43		1668321	1					
ANR	1669004	Condition	0	1110:11:33499:33499	1668321	1	True				
ANR	1669005	PrimaryExpression	0		1668321	0					
ANR	1669006	ExpressionStatement	jump = jump -> next	1112:2:33506:33523	1668321	1	True				
ANR	1669007	AssignmentExpression	jump = jump -> next		1668321	0		=			
ANR	1669008	Identifier	jump		1668321	0					
ANR	1669009	PtrMemberAccess	jump -> next		1668321	1					
ANR	1669010	Identifier	jump		1668321	0					
ANR	1669011	Identifier	next		1668321	1					
ANR	1669012	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	1115:1:33530:33566	1668321	29	True				
ANR	1669013	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1668321	0		=			
ANR	1669014	PtrMemberAccess	compiler -> error		1668321	0					
ANR	1669015	Identifier	compiler		1668321	0					
ANR	1669016	Identifier	error		1668321	1					
ANR	1669017	Identifier	SLJIT_ERR_COMPILED		1668321	1					
ANR	1669018	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )	1116:1:33569:33634	1668321	30	True				
ANR	1669019	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )		1668321	0		=			
ANR	1669020	PtrMemberAccess	compiler -> executable_size		1668321	0					
ANR	1669021	Identifier	compiler		1668321	0					
ANR	1669022	Identifier	executable_size		1668321	1					
ANR	1669023	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_ins )		1668321	1		*			
ANR	1669024	AdditiveExpression	code_ptr - code		1668321	0		-			
ANR	1669025	Identifier	code_ptr		1668321	0					
ANR	1669026	Identifier	code		1668321	1					
ANR	1669027	SizeofExpression	sizeof ( sljit_ins )		1668321	1					
ANR	1669028	Sizeof	sizeof		1668321	0					
ANR	1669029	SizeofOperand	sljit_ins		1668321	1					
ANR	1669030	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	1117:1:33637:33670	1668321	31	True				
ANR	1669031	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1668321	0					
ANR	1669032	Callee	SLJIT_CACHE_FLUSH		1668321	0					
ANR	1669033	Identifier	SLJIT_CACHE_FLUSH		1668321	0					
ANR	1669034	ArgumentList	code		1668321	1					
ANR	1669035	Argument	code		1668321	0					
ANR	1669036	Identifier	code		1668321	0					
ANR	1669037	Argument	code_ptr		1668321	1					
ANR	1669038	Identifier	code_ptr		1668321	0					
ANR	1669039	ReturnStatement	return code ;	1118:1:33673:33684	1668321	32	True				
ANR	1669040	Identifier	code		1668321	0					
ANR	1669041	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1668321	1					
ANR	1669042	Identifier	sljit_generate_code		1668321	2					
ANR	1669043	ParameterList	struct sljit_compiler * compiler		1668321	3					
ANR	1669044	Parameter	struct sljit_compiler * compiler	997:52:30340:30370	1668321	0	True				
ANR	1669045	ParameterType	struct sljit_compiler *		1668321	0					
ANR	1669046	Identifier	compiler		1668321	1					
ANR	1669047	CFGEntryNode	ENTRY		1668321		True				
ANR	1669048	CFGExitNode	EXIT		1668321		True				
ANR	1669049	Symbol	SIMM_17BIT_MIN		1668321						
ANR	1669050	Symbol	label -> addr		1668321						
ANR	1669051	Symbol	compiler -> buf		1668321						
ANR	1669052	Symbol	SLJIT_MALLOC_EXEC		1668321						
ANR	1669053	Symbol	JUMP_LABEL		1668321						
ANR	1669054	Symbol	label -> next		1668321						
ANR	1669055	Symbol	* compiler		1668321						
ANR	1669056	Symbol	const_ -> next		1668321						
ANR	1669057	Symbol	const_ -> addr		1668321						
ANR	1669058	Symbol	buf -> next		1668321						
ANR	1669059	Symbol	buf_end		1668321						
ANR	1669060	Symbol	compiler -> executable_size		1668321						
ANR	1669061	Symbol	jump		1668321						
ANR	1669062	Symbol	buf -> used_size		1668321						
ANR	1669063	Symbol	* buf		1668321						
ANR	1669064	Symbol	compiler -> labels		1668321						
ANR	1669065	Symbol	buf -> memory		1668321						
ANR	1669066	Symbol	detect_jump_type		1668321						
ANR	1669067	Symbol	* buf_ptr ++		1668321						
ANR	1669068	Symbol	jump -> addr		1668321						
ANR	1669069	Symbol	BOFF_X1		1668321						
ANR	1669070	Symbol	IS_JAL		1668321						
ANR	1669071	Symbol	buf_ptr		1668321						
ANR	1669072	Symbol	* code_ptr		1668321						
ANR	1669073	Symbol	* jump -> u . label		1668321						
ANR	1669074	Symbol	jump -> u . target		1668321						
ANR	1669075	Symbol	compiler -> jumps		1668321						
ANR	1669076	Symbol	label -> size		1668321						
ANR	1669077	Symbol	jump -> next		1668321						
ANR	1669078	Symbol	code		1668321						
ANR	1669079	Symbol	* * jump		1668321						
ANR	1669080	Symbol	* jump		1668321						
ANR	1669081	Symbol	JOFF_X1		1668321						
ANR	1669082	Symbol	jump -> u		1668321						
ANR	1669083	Symbol	jump -> flags		1668321						
ANR	1669084	Symbol	word_count		1668321						
ANR	1669085	Symbol	code_ptr		1668321						
ANR	1669086	Symbol	compiler		1668321						
ANR	1669087	Symbol	addr		1668321						
ANR	1669088	Symbol	* buf_ptr		1668321						
ANR	1669089	Symbol	const_		1668321						
ANR	1669090	Symbol	compiler -> consts		1668321						
ANR	1669091	Symbol	~0x3FFFFFFFL		1668321						
ANR	1669092	Symbol	* const_		1668321						
ANR	1669093	Symbol	label		1668321						
ANR	1669094	Symbol	__LINE__		1668321						
ANR	1669095	Symbol	PATCH_J		1668321						
ANR	1669096	Symbol	buf		1668321						
ANR	1669097	Symbol	SIMM_17BIT_MAX		1668321						
ANR	1669098	Symbol	compiler -> size		1668321						
ANR	1669099	Symbol	* jump -> u		1668321						
ANR	1669100	Symbol	PATCH_B		1668321						
ANR	1669101	Symbol	jump -> u . label -> addr		1668321						
ANR	1669102	Symbol	jump -> u . label		1668321						
ANR	1669103	Symbol	compiler -> error		1668321						
ANR	1669104	Symbol	SLJIT_ERR_COMPILED		1668321						
ANR	1669105	Symbol	* label		1668321						
ANR	1669106	Function	load_immediate	1121:0:33689:34395							
ANR	1669107	FunctionDef	"load_immediate (struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm)"		1669106	0					
ANR	1669108	CompoundStatement		1122:0:33784:34395	1669106	0					
ANR	1669109	IfStatement	if ( imm <= SIMM_16BIT_MAX && imm >= SIMM_16BIT_MIN )		1669106	0					
ANR	1669110	Condition	imm <= SIMM_16BIT_MAX && imm >= SIMM_16BIT_MIN	1124:5:33792:33837	1669106	0	True				
ANR	1669111	AndExpression	imm <= SIMM_16BIT_MAX && imm >= SIMM_16BIT_MIN		1669106	0		&&			
ANR	1669112	RelationalExpression	imm <= SIMM_16BIT_MAX		1669106	0		<=			
ANR	1669113	Identifier	imm		1669106	0					
ANR	1669114	Identifier	SIMM_16BIT_MAX		1669106	1					
ANR	1669115	RelationalExpression	imm >= SIMM_16BIT_MIN		1669106	1		>=			
ANR	1669116	Identifier	imm		1669106	0					
ANR	1669117	Identifier	SIMM_16BIT_MIN		1669106	1					
ANR	1669118	ReturnStatement	"return ADDLI ( dst_ar , ZERO , imm ) ;"	1125:2:33842:33873	1669106	1	True				
ANR	1669119	CallExpression	"ADDLI ( dst_ar , ZERO , imm )"		1669106	0					
ANR	1669120	Callee	ADDLI		1669106	0					
ANR	1669121	Identifier	ADDLI		1669106	0					
ANR	1669122	ArgumentList	dst_ar		1669106	1					
ANR	1669123	Argument	dst_ar		1669106	0					
ANR	1669124	Identifier	dst_ar		1669106	0					
ANR	1669125	Argument	ZERO		1669106	1					
ANR	1669126	Identifier	ZERO		1669106	0					
ANR	1669127	Argument	imm		1669106	2					
ANR	1669128	Identifier	imm		1669106	0					
ANR	1669129	IfStatement	if ( imm <= SIMM_32BIT_MAX && imm >= SIMM_32BIT_MIN )		1669106	1					
ANR	1669130	Condition	imm <= SIMM_32BIT_MAX && imm >= SIMM_32BIT_MIN	1127:5:33881:33926	1669106	0	True				
ANR	1669131	AndExpression	imm <= SIMM_32BIT_MAX && imm >= SIMM_32BIT_MIN		1669106	0		&&			
ANR	1669132	RelationalExpression	imm <= SIMM_32BIT_MAX		1669106	0		<=			
ANR	1669133	Identifier	imm		1669106	0					
ANR	1669134	Identifier	SIMM_32BIT_MAX		1669106	1					
ANR	1669135	RelationalExpression	imm >= SIMM_32BIT_MIN		1669106	1		>=			
ANR	1669136	Identifier	imm		1669106	0					
ANR	1669137	Identifier	SIMM_32BIT_MIN		1669106	1					
ANR	1669138	CompoundStatement		6:53:144:144	1669106	1					
ANR	1669139	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 16 ) )"	1128:2:33933:33972	1669106	0	True				
ANR	1669140	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 16 ) )"		1669106	0					
ANR	1669141	Callee	FAIL_IF		1669106	0					
ANR	1669142	Identifier	FAIL_IF		1669106	0					
ANR	1669143	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 16 )"		1669106	1					
ANR	1669144	Argument	"ADDLI ( dst_ar , ZERO , imm >> 16 )"		1669106	0					
ANR	1669145	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 16 )"		1669106	0					
ANR	1669146	Callee	ADDLI		1669106	0					
ANR	1669147	Identifier	ADDLI		1669106	0					
ANR	1669148	ArgumentList	dst_ar		1669106	1					
ANR	1669149	Argument	dst_ar		1669106	0					
ANR	1669150	Identifier	dst_ar		1669106	0					
ANR	1669151	Argument	ZERO		1669106	1					
ANR	1669152	Identifier	ZERO		1669106	0					
ANR	1669153	Argument	imm >> 16		1669106	2					
ANR	1669154	ShiftExpression	imm >> 16		1669106	0		>>			
ANR	1669155	Identifier	imm		1669106	0					
ANR	1669156	PrimaryExpression	16		1669106	1					
ANR	1669157	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1129:2:33976:34014	1669106	1	True				
ANR	1669158	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1669106	0					
ANR	1669159	Callee	SHL16INSLI		1669106	0					
ANR	1669160	Identifier	SHL16INSLI		1669106	0					
ANR	1669161	ArgumentList	dst_ar		1669106	1					
ANR	1669162	Argument	dst_ar		1669106	0					
ANR	1669163	Identifier	dst_ar		1669106	0					
ANR	1669164	Argument	dst_ar		1669106	1					
ANR	1669165	Identifier	dst_ar		1669106	0					
ANR	1669166	Argument	imm		1669106	2					
ANR	1669167	Identifier	imm		1669106	0					
ANR	1669168	IfStatement	if ( imm <= SIMM_48BIT_MAX && imm >= SIMM_48BIT_MIN )		1669106	2					
ANR	1669169	Condition	imm <= SIMM_48BIT_MAX && imm >= SIMM_48BIT_MIN	1132:5:34025:34070	1669106	0	True				
ANR	1669170	AndExpression	imm <= SIMM_48BIT_MAX && imm >= SIMM_48BIT_MIN		1669106	0		&&			
ANR	1669171	RelationalExpression	imm <= SIMM_48BIT_MAX		1669106	0		<=			
ANR	1669172	Identifier	imm		1669106	0					
ANR	1669173	Identifier	SIMM_48BIT_MAX		1669106	1					
ANR	1669174	RelationalExpression	imm >= SIMM_48BIT_MIN		1669106	1		>=			
ANR	1669175	Identifier	imm		1669106	0					
ANR	1669176	Identifier	SIMM_48BIT_MIN		1669106	1					
ANR	1669177	CompoundStatement		11:53:288:288	1669106	1					
ANR	1669178	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"	1133:2:34077:34116	1669106	0	True				
ANR	1669179	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"		1669106	0					
ANR	1669180	Callee	FAIL_IF		1669106	0					
ANR	1669181	Identifier	FAIL_IF		1669106	0					
ANR	1669182	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1669106	1					
ANR	1669183	Argument	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1669106	0					
ANR	1669184	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1669106	0					
ANR	1669185	Callee	ADDLI		1669106	0					
ANR	1669186	Identifier	ADDLI		1669106	0					
ANR	1669187	ArgumentList	dst_ar		1669106	1					
ANR	1669188	Argument	dst_ar		1669106	0					
ANR	1669189	Identifier	dst_ar		1669106	0					
ANR	1669190	Argument	ZERO		1669106	1					
ANR	1669191	Identifier	ZERO		1669106	0					
ANR	1669192	Argument	imm >> 32		1669106	2					
ANR	1669193	ShiftExpression	imm >> 32		1669106	0		>>			
ANR	1669194	Identifier	imm		1669106	0					
ANR	1669195	PrimaryExpression	32		1669106	1					
ANR	1669196	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"	1134:2:34120:34166	1669106	1	True				
ANR	1669197	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"		1669106	0					
ANR	1669198	Callee	FAIL_IF		1669106	0					
ANR	1669199	Identifier	FAIL_IF		1669106	0					
ANR	1669200	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669106	1					
ANR	1669201	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669106	0					
ANR	1669202	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669106	0					
ANR	1669203	Callee	SHL16INSLI		1669106	0					
ANR	1669204	Identifier	SHL16INSLI		1669106	0					
ANR	1669205	ArgumentList	dst_ar		1669106	1					
ANR	1669206	Argument	dst_ar		1669106	0					
ANR	1669207	Identifier	dst_ar		1669106	0					
ANR	1669208	Argument	dst_ar		1669106	1					
ANR	1669209	Identifier	dst_ar		1669106	0					
ANR	1669210	Argument	imm >> 16		1669106	2					
ANR	1669211	ShiftExpression	imm >> 16		1669106	0		>>			
ANR	1669212	Identifier	imm		1669106	0					
ANR	1669213	PrimaryExpression	16		1669106	1					
ANR	1669214	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1135:2:34170:34208	1669106	2	True				
ANR	1669215	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1669106	0					
ANR	1669216	Callee	SHL16INSLI		1669106	0					
ANR	1669217	Identifier	SHL16INSLI		1669106	0					
ANR	1669218	ArgumentList	dst_ar		1669106	1					
ANR	1669219	Argument	dst_ar		1669106	0					
ANR	1669220	Identifier	dst_ar		1669106	0					
ANR	1669221	Argument	dst_ar		1669106	1					
ANR	1669222	Identifier	dst_ar		1669106	0					
ANR	1669223	Argument	imm		1669106	2					
ANR	1669224	Identifier	imm		1669106	0					
ANR	1669225	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 48 ) )"	1138:1:34215:34254	1669106	3	True				
ANR	1669226	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 48 ) )"		1669106	0					
ANR	1669227	Callee	FAIL_IF		1669106	0					
ANR	1669228	Identifier	FAIL_IF		1669106	0					
ANR	1669229	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 48 )"		1669106	1					
ANR	1669230	Argument	"ADDLI ( dst_ar , ZERO , imm >> 48 )"		1669106	0					
ANR	1669231	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 48 )"		1669106	0					
ANR	1669232	Callee	ADDLI		1669106	0					
ANR	1669233	Identifier	ADDLI		1669106	0					
ANR	1669234	ArgumentList	dst_ar		1669106	1					
ANR	1669235	Argument	dst_ar		1669106	0					
ANR	1669236	Identifier	dst_ar		1669106	0					
ANR	1669237	Argument	ZERO		1669106	1					
ANR	1669238	Identifier	ZERO		1669106	0					
ANR	1669239	Argument	imm >> 48		1669106	2					
ANR	1669240	ShiftExpression	imm >> 48		1669106	0		>>			
ANR	1669241	Identifier	imm		1669106	0					
ANR	1669242	PrimaryExpression	48		1669106	1					
ANR	1669243	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 32 ) )"	1139:1:34257:34303	1669106	4	True				
ANR	1669244	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 32 ) )"		1669106	0					
ANR	1669245	Callee	FAIL_IF		1669106	0					
ANR	1669246	Identifier	FAIL_IF		1669106	0					
ANR	1669247	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 32 )"		1669106	1					
ANR	1669248	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 32 )"		1669106	0					
ANR	1669249	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 32 )"		1669106	0					
ANR	1669250	Callee	SHL16INSLI		1669106	0					
ANR	1669251	Identifier	SHL16INSLI		1669106	0					
ANR	1669252	ArgumentList	dst_ar		1669106	1					
ANR	1669253	Argument	dst_ar		1669106	0					
ANR	1669254	Identifier	dst_ar		1669106	0					
ANR	1669255	Argument	dst_ar		1669106	1					
ANR	1669256	Identifier	dst_ar		1669106	0					
ANR	1669257	Argument	imm >> 32		1669106	2					
ANR	1669258	ShiftExpression	imm >> 32		1669106	0		>>			
ANR	1669259	Identifier	imm		1669106	0					
ANR	1669260	PrimaryExpression	32		1669106	1					
ANR	1669261	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"	1140:1:34306:34352	1669106	5	True				
ANR	1669262	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"		1669106	0					
ANR	1669263	Callee	FAIL_IF		1669106	0					
ANR	1669264	Identifier	FAIL_IF		1669106	0					
ANR	1669265	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669106	1					
ANR	1669266	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669106	0					
ANR	1669267	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669106	0					
ANR	1669268	Callee	SHL16INSLI		1669106	0					
ANR	1669269	Identifier	SHL16INSLI		1669106	0					
ANR	1669270	ArgumentList	dst_ar		1669106	1					
ANR	1669271	Argument	dst_ar		1669106	0					
ANR	1669272	Identifier	dst_ar		1669106	0					
ANR	1669273	Argument	dst_ar		1669106	1					
ANR	1669274	Identifier	dst_ar		1669106	0					
ANR	1669275	Argument	imm >> 16		1669106	2					
ANR	1669276	ShiftExpression	imm >> 16		1669106	0		>>			
ANR	1669277	Identifier	imm		1669106	0					
ANR	1669278	PrimaryExpression	16		1669106	1					
ANR	1669279	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1141:1:34355:34393	1669106	6	True				
ANR	1669280	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1669106	0					
ANR	1669281	Callee	SHL16INSLI		1669106	0					
ANR	1669282	Identifier	SHL16INSLI		1669106	0					
ANR	1669283	ArgumentList	dst_ar		1669106	1					
ANR	1669284	Argument	dst_ar		1669106	0					
ANR	1669285	Identifier	dst_ar		1669106	0					
ANR	1669286	Argument	dst_ar		1669106	1					
ANR	1669287	Identifier	dst_ar		1669106	0					
ANR	1669288	Argument	imm		1669106	2					
ANR	1669289	Identifier	imm		1669106	0					
ANR	1669290	ReturnType	static sljit_si		1669106	1					
ANR	1669291	Identifier	load_immediate		1669106	2					
ANR	1669292	ParameterList	"struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm"		1669106	3					
ANR	1669293	Parameter	struct sljit_compiler * compiler	1121:31:33720:33750	1669106	0	True				
ANR	1669294	ParameterType	struct sljit_compiler *		1669106	0					
ANR	1669295	Identifier	compiler		1669106	1					
ANR	1669296	Parameter	sljit_si dst_ar	1121:64:33753:33767	1669106	1	True				
ANR	1669297	ParameterType	sljit_si		1669106	0					
ANR	1669298	Identifier	dst_ar		1669106	1					
ANR	1669299	Parameter	sljit_sw imm	1121:81:33770:33781	1669106	2	True				
ANR	1669300	ParameterType	sljit_sw		1669106	0					
ANR	1669301	Identifier	imm		1669106	1					
ANR	1669302	CFGEntryNode	ENTRY		1669106		True				
ANR	1669303	CFGExitNode	EXIT		1669106		True				
ANR	1669304	Symbol	ZERO		1669106						
ANR	1669305	Symbol	SIMM_16BIT_MIN		1669106						
ANR	1669306	Symbol	SIMM_48BIT_MIN		1669106						
ANR	1669307	Symbol	dst_ar		1669106						
ANR	1669308	Symbol	SIMM_16BIT_MAX		1669106						
ANR	1669309	Symbol	SIMM_48BIT_MAX		1669106						
ANR	1669310	Symbol	SHL16INSLI		1669106						
ANR	1669311	Symbol	imm		1669106						
ANR	1669312	Symbol	compiler		1669106						
ANR	1669313	Symbol	SIMM_32BIT_MIN		1669106						
ANR	1669314	Symbol	ADDLI		1669106						
ANR	1669315	Symbol	SIMM_32BIT_MAX		1669106						
ANR	1669316	Function	emit_const	1144:0:34398:34932							
ANR	1669317	FunctionDef	"emit_const (struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush)"		1669316	0					
ANR	1669318	CompoundStatement		1145:0:34500:34932	1669316	0					
ANR	1669319	IfStatement	if ( flush )		1669316	0					
ANR	1669320	Condition	flush	1148:5:34637:34641	1669316	0	True				
ANR	1669321	Identifier	flush		1669316	0					
ANR	1669322	CompoundStatement		4:12:143:143	1669316	1					
ANR	1669323	ExpressionStatement	"FAIL_IF ( ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 ) )"	1149:2:34648:34692	1669316	0	True				
ANR	1669324	CallExpression	"FAIL_IF ( ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 ) )"		1669316	0					
ANR	1669325	Callee	FAIL_IF		1669316	0					
ANR	1669326	Identifier	FAIL_IF		1669316	0					
ANR	1669327	ArgumentList	"ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 )"		1669316	1					
ANR	1669328	Argument	"ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 )"		1669316	0					
ANR	1669329	CallExpression	"ADDLI_SOLO ( dst_ar , ZERO , imm >> 32 )"		1669316	0					
ANR	1669330	Callee	ADDLI_SOLO		1669316	0					
ANR	1669331	Identifier	ADDLI_SOLO		1669316	0					
ANR	1669332	ArgumentList	dst_ar		1669316	1					
ANR	1669333	Argument	dst_ar		1669316	0					
ANR	1669334	Identifier	dst_ar		1669316	0					
ANR	1669335	Argument	ZERO		1669316	1					
ANR	1669336	Identifier	ZERO		1669316	0					
ANR	1669337	Argument	imm >> 32		1669316	2					
ANR	1669338	ShiftExpression	imm >> 32		1669316	0		>>			
ANR	1669339	Identifier	imm		1669316	0					
ANR	1669340	PrimaryExpression	32		1669316	1					
ANR	1669341	ExpressionStatement	"FAIL_IF ( SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 ) )"	1150:2:34696:34747	1669316	1	True				
ANR	1669342	CallExpression	"FAIL_IF ( SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 ) )"		1669316	0					
ANR	1669343	Callee	FAIL_IF		1669316	0					
ANR	1669344	Identifier	FAIL_IF		1669316	0					
ANR	1669345	ArgumentList	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 )"		1669316	1					
ANR	1669346	Argument	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 )"		1669316	0					
ANR	1669347	CallExpression	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm >> 16 )"		1669316	0					
ANR	1669348	Callee	SHL16INSLI_SOLO		1669316	0					
ANR	1669349	Identifier	SHL16INSLI_SOLO		1669316	0					
ANR	1669350	ArgumentList	dst_ar		1669316	1					
ANR	1669351	Argument	dst_ar		1669316	0					
ANR	1669352	Identifier	dst_ar		1669316	0					
ANR	1669353	Argument	dst_ar		1669316	1					
ANR	1669354	Identifier	dst_ar		1669316	0					
ANR	1669355	Argument	imm >> 16		1669316	2					
ANR	1669356	ShiftExpression	imm >> 16		1669316	0		>>			
ANR	1669357	Identifier	imm		1669316	0					
ANR	1669358	PrimaryExpression	16		1669316	1					
ANR	1669359	ReturnStatement	"return SHL16INSLI_SOLO ( dst_ar , dst_ar , imm ) ;"	1151:2:34751:34794	1669316	2	True				
ANR	1669360	CallExpression	"SHL16INSLI_SOLO ( dst_ar , dst_ar , imm )"		1669316	0					
ANR	1669361	Callee	SHL16INSLI_SOLO		1669316	0					
ANR	1669362	Identifier	SHL16INSLI_SOLO		1669316	0					
ANR	1669363	ArgumentList	dst_ar		1669316	1					
ANR	1669364	Argument	dst_ar		1669316	0					
ANR	1669365	Identifier	dst_ar		1669316	0					
ANR	1669366	Argument	dst_ar		1669316	1					
ANR	1669367	Identifier	dst_ar		1669316	0					
ANR	1669368	Argument	imm		1669316	2					
ANR	1669369	Identifier	imm		1669316	0					
ANR	1669370	ExpressionStatement	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"	1154:1:34801:34840	1669316	1	True				
ANR	1669371	CallExpression	"FAIL_IF ( ADDLI ( dst_ar , ZERO , imm >> 32 ) )"		1669316	0					
ANR	1669372	Callee	FAIL_IF		1669316	0					
ANR	1669373	Identifier	FAIL_IF		1669316	0					
ANR	1669374	ArgumentList	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1669316	1					
ANR	1669375	Argument	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1669316	0					
ANR	1669376	CallExpression	"ADDLI ( dst_ar , ZERO , imm >> 32 )"		1669316	0					
ANR	1669377	Callee	ADDLI		1669316	0					
ANR	1669378	Identifier	ADDLI		1669316	0					
ANR	1669379	ArgumentList	dst_ar		1669316	1					
ANR	1669380	Argument	dst_ar		1669316	0					
ANR	1669381	Identifier	dst_ar		1669316	0					
ANR	1669382	Argument	ZERO		1669316	1					
ANR	1669383	Identifier	ZERO		1669316	0					
ANR	1669384	Argument	imm >> 32		1669316	2					
ANR	1669385	ShiftExpression	imm >> 32		1669316	0		>>			
ANR	1669386	Identifier	imm		1669316	0					
ANR	1669387	PrimaryExpression	32		1669316	1					
ANR	1669388	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"	1155:1:34843:34889	1669316	2	True				
ANR	1669389	CallExpression	"FAIL_IF ( SHL16INSLI ( dst_ar , dst_ar , imm >> 16 ) )"		1669316	0					
ANR	1669390	Callee	FAIL_IF		1669316	0					
ANR	1669391	Identifier	FAIL_IF		1669316	0					
ANR	1669392	ArgumentList	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669316	1					
ANR	1669393	Argument	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669316	0					
ANR	1669394	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm >> 16 )"		1669316	0					
ANR	1669395	Callee	SHL16INSLI		1669316	0					
ANR	1669396	Identifier	SHL16INSLI		1669316	0					
ANR	1669397	ArgumentList	dst_ar		1669316	1					
ANR	1669398	Argument	dst_ar		1669316	0					
ANR	1669399	Identifier	dst_ar		1669316	0					
ANR	1669400	Argument	dst_ar		1669316	1					
ANR	1669401	Identifier	dst_ar		1669316	0					
ANR	1669402	Argument	imm >> 16		1669316	2					
ANR	1669403	ShiftExpression	imm >> 16		1669316	0		>>			
ANR	1669404	Identifier	imm		1669316	0					
ANR	1669405	PrimaryExpression	16		1669316	1					
ANR	1669406	ReturnStatement	"return SHL16INSLI ( dst_ar , dst_ar , imm ) ;"	1156:1:34892:34930	1669316	3	True				
ANR	1669407	CallExpression	"SHL16INSLI ( dst_ar , dst_ar , imm )"		1669316	0					
ANR	1669408	Callee	SHL16INSLI		1669316	0					
ANR	1669409	Identifier	SHL16INSLI		1669316	0					
ANR	1669410	ArgumentList	dst_ar		1669316	1					
ANR	1669411	Argument	dst_ar		1669316	0					
ANR	1669412	Identifier	dst_ar		1669316	0					
ANR	1669413	Argument	dst_ar		1669316	1					
ANR	1669414	Identifier	dst_ar		1669316	0					
ANR	1669415	Argument	imm		1669316	2					
ANR	1669416	Identifier	imm		1669316	0					
ANR	1669417	ReturnType	static sljit_si		1669316	1					
ANR	1669418	Identifier	emit_const		1669316	2					
ANR	1669419	ParameterList	"struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush"		1669316	3					
ANR	1669420	Parameter	struct sljit_compiler * compiler	1144:27:34425:34455	1669316	0	True				
ANR	1669421	ParameterType	struct sljit_compiler *		1669316	0					
ANR	1669422	Identifier	compiler		1669316	1					
ANR	1669423	Parameter	sljit_si dst_ar	1144:60:34458:34472	1669316	1	True				
ANR	1669424	ParameterType	sljit_si		1669316	0					
ANR	1669425	Identifier	dst_ar		1669316	1					
ANR	1669426	Parameter	sljit_sw imm	1144:77:34475:34486	1669316	2	True				
ANR	1669427	ParameterType	sljit_sw		1669316	0					
ANR	1669428	Identifier	imm		1669316	1					
ANR	1669429	Parameter	int flush	1144:91:34489:34497	1669316	3	True				
ANR	1669430	ParameterType	int		1669316	0					
ANR	1669431	Identifier	flush		1669316	1					
ANR	1669432	CFGEntryNode	ENTRY		1669316		True				
ANR	1669433	CFGExitNode	EXIT		1669316		True				
ANR	1669434	Symbol	ADDLI_SOLO		1669316						
ANR	1669435	Symbol	ZERO		1669316						
ANR	1669436	Symbol	dst_ar		1669316						
ANR	1669437	Symbol	flush		1669316						
ANR	1669438	Symbol	SHL16INSLI		1669316						
ANR	1669439	Symbol	imm		1669316						
ANR	1669440	Symbol	compiler		1669316						
ANR	1669441	Symbol	SHL16INSLI_SOLO		1669316						
ANR	1669442	Symbol	ADDLI		1669316						
ANR	1669443	Function	emit_const_64	1159:0:34935:35702							
ANR	1669444	FunctionDef	"emit_const_64 (struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush)"		1669443	0					
ANR	1669445	CompoundStatement		1160:0:35040:35702	1669443	0					
ANR	1669446	IfStatement	if ( flush )		1669443	0					
ANR	1669447	Condition	flush	1163:5:35177:35181	1669443	0	True				
ANR	1669448	Identifier	flush		1669443	0					
ANR	1669449	CompoundStatement		4:12:143:143	1669443	1					
ANR	1669450	ExpressionStatement	"FAIL_IF ( ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"	1164:2:35188:35241	1669443	0	True				
ANR	1669451	CallExpression	"FAIL_IF ( ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"		1669443	0					
ANR	1669452	Callee	FAIL_IF		1669443	0					
ANR	1669453	Identifier	FAIL_IF		1669443	0					
ANR	1669454	ArgumentList	"ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1669443	1					
ANR	1669455	Argument	"ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1669443	0					
ANR	1669456	CallExpression	"ADDLI_SOLO ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1669443	0					
ANR	1669457	Callee	ADDLI_SOLO		1669443	0					
ANR	1669458	Identifier	ADDLI_SOLO		1669443	0					
ANR	1669459	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669460	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669461	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669462	Identifier	reg_map		1669443	0					
ANR	1669463	Identifier	dst_ar		1669443	1					
ANR	1669464	Argument	ZERO		1669443	1					
ANR	1669465	Identifier	ZERO		1669443	0					
ANR	1669466	Argument	imm >> 48		1669443	2					
ANR	1669467	ShiftExpression	imm >> 48		1669443	0		>>			
ANR	1669468	Identifier	imm		1669443	0					
ANR	1669469	PrimaryExpression	48		1669443	1					
ANR	1669470	ExpressionStatement	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"	1165:2:35245:35314	1669443	1	True				
ANR	1669471	CallExpression	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"		1669443	0					
ANR	1669472	Callee	FAIL_IF		1669443	0					
ANR	1669473	Identifier	FAIL_IF		1669443	0					
ANR	1669474	ArgumentList	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1669443	1					
ANR	1669475	Argument	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1669443	0					
ANR	1669476	CallExpression	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1669443	0					
ANR	1669477	Callee	SHL16INSLI_SOLO		1669443	0					
ANR	1669478	Identifier	SHL16INSLI_SOLO		1669443	0					
ANR	1669479	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669480	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669481	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669482	Identifier	reg_map		1669443	0					
ANR	1669483	Identifier	dst_ar		1669443	1					
ANR	1669484	Argument	reg_map [ dst_ar ]		1669443	1					
ANR	1669485	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669486	Identifier	reg_map		1669443	0					
ANR	1669487	Identifier	dst_ar		1669443	1					
ANR	1669488	Argument	imm >> 32		1669443	2					
ANR	1669489	ShiftExpression	imm >> 32		1669443	0		>>			
ANR	1669490	Identifier	imm		1669443	0					
ANR	1669491	PrimaryExpression	32		1669443	1					
ANR	1669492	ExpressionStatement	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"	1166:2:35318:35387	1669443	2	True				
ANR	1669493	CallExpression	"FAIL_IF ( SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"		1669443	0					
ANR	1669494	Callee	FAIL_IF		1669443	0					
ANR	1669495	Identifier	FAIL_IF		1669443	0					
ANR	1669496	ArgumentList	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1669443	1					
ANR	1669497	Argument	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1669443	0					
ANR	1669498	CallExpression	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1669443	0					
ANR	1669499	Callee	SHL16INSLI_SOLO		1669443	0					
ANR	1669500	Identifier	SHL16INSLI_SOLO		1669443	0					
ANR	1669501	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669502	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669503	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669504	Identifier	reg_map		1669443	0					
ANR	1669505	Identifier	dst_ar		1669443	1					
ANR	1669506	Argument	reg_map [ dst_ar ]		1669443	1					
ANR	1669507	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669508	Identifier	reg_map		1669443	0					
ANR	1669509	Identifier	dst_ar		1669443	1					
ANR	1669510	Argument	imm >> 16		1669443	2					
ANR	1669511	ShiftExpression	imm >> 16		1669443	0		>>			
ANR	1669512	Identifier	imm		1669443	0					
ANR	1669513	PrimaryExpression	16		1669443	1					
ANR	1669514	ReturnStatement	"return SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm ) ;"	1167:2:35391:35452	1669443	3	True				
ANR	1669515	CallExpression	"SHL16INSLI_SOLO ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm )"		1669443	0					
ANR	1669516	Callee	SHL16INSLI_SOLO		1669443	0					
ANR	1669517	Identifier	SHL16INSLI_SOLO		1669443	0					
ANR	1669518	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669519	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669520	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669521	Identifier	reg_map		1669443	0					
ANR	1669522	Identifier	dst_ar		1669443	1					
ANR	1669523	Argument	reg_map [ dst_ar ]		1669443	1					
ANR	1669524	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669525	Identifier	reg_map		1669443	0					
ANR	1669526	Identifier	dst_ar		1669443	1					
ANR	1669527	Argument	imm		1669443	2					
ANR	1669528	Identifier	imm		1669443	0					
ANR	1669529	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"	1170:1:35459:35507	1669443	1	True				
ANR	1669530	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 ) )"		1669443	0					
ANR	1669531	Callee	FAIL_IF		1669443	0					
ANR	1669532	Identifier	FAIL_IF		1669443	0					
ANR	1669533	ArgumentList	"ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1669443	1					
ANR	1669534	Argument	"ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1669443	0					
ANR	1669535	CallExpression	"ADDLI ( reg_map [ dst_ar ] , ZERO , imm >> 48 )"		1669443	0					
ANR	1669536	Callee	ADDLI		1669443	0					
ANR	1669537	Identifier	ADDLI		1669443	0					
ANR	1669538	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669539	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669540	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669541	Identifier	reg_map		1669443	0					
ANR	1669542	Identifier	dst_ar		1669443	1					
ANR	1669543	Argument	ZERO		1669443	1					
ANR	1669544	Identifier	ZERO		1669443	0					
ANR	1669545	Argument	imm >> 48		1669443	2					
ANR	1669546	ShiftExpression	imm >> 48		1669443	0		>>			
ANR	1669547	Identifier	imm		1669443	0					
ANR	1669548	PrimaryExpression	48		1669443	1					
ANR	1669549	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"	1171:1:35510:35574	1669443	2	True				
ANR	1669550	CallExpression	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 ) )"		1669443	0					
ANR	1669551	Callee	FAIL_IF		1669443	0					
ANR	1669552	Identifier	FAIL_IF		1669443	0					
ANR	1669553	ArgumentList	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1669443	1					
ANR	1669554	Argument	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1669443	0					
ANR	1669555	CallExpression	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 32 )"		1669443	0					
ANR	1669556	Callee	SHL16INSLI		1669443	0					
ANR	1669557	Identifier	SHL16INSLI		1669443	0					
ANR	1669558	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669559	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669560	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669561	Identifier	reg_map		1669443	0					
ANR	1669562	Identifier	dst_ar		1669443	1					
ANR	1669563	Argument	reg_map [ dst_ar ]		1669443	1					
ANR	1669564	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669565	Identifier	reg_map		1669443	0					
ANR	1669566	Identifier	dst_ar		1669443	1					
ANR	1669567	Argument	imm >> 32		1669443	2					
ANR	1669568	ShiftExpression	imm >> 32		1669443	0		>>			
ANR	1669569	Identifier	imm		1669443	0					
ANR	1669570	PrimaryExpression	32		1669443	1					
ANR	1669571	ExpressionStatement	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"	1172:1:35577:35641	1669443	3	True				
ANR	1669572	CallExpression	"FAIL_IF ( SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 ) )"		1669443	0					
ANR	1669573	Callee	FAIL_IF		1669443	0					
ANR	1669574	Identifier	FAIL_IF		1669443	0					
ANR	1669575	ArgumentList	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1669443	1					
ANR	1669576	Argument	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1669443	0					
ANR	1669577	CallExpression	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm >> 16 )"		1669443	0					
ANR	1669578	Callee	SHL16INSLI		1669443	0					
ANR	1669579	Identifier	SHL16INSLI		1669443	0					
ANR	1669580	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669581	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669582	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669583	Identifier	reg_map		1669443	0					
ANR	1669584	Identifier	dst_ar		1669443	1					
ANR	1669585	Argument	reg_map [ dst_ar ]		1669443	1					
ANR	1669586	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669587	Identifier	reg_map		1669443	0					
ANR	1669588	Identifier	dst_ar		1669443	1					
ANR	1669589	Argument	imm >> 16		1669443	2					
ANR	1669590	ShiftExpression	imm >> 16		1669443	0		>>			
ANR	1669591	Identifier	imm		1669443	0					
ANR	1669592	PrimaryExpression	16		1669443	1					
ANR	1669593	ReturnStatement	"return SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm ) ;"	1173:1:35644:35700	1669443	4	True				
ANR	1669594	CallExpression	"SHL16INSLI ( reg_map [ dst_ar ] , reg_map [ dst_ar ] , imm )"		1669443	0					
ANR	1669595	Callee	SHL16INSLI		1669443	0					
ANR	1669596	Identifier	SHL16INSLI		1669443	0					
ANR	1669597	ArgumentList	reg_map [ dst_ar ]		1669443	1					
ANR	1669598	Argument	reg_map [ dst_ar ]		1669443	0					
ANR	1669599	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669600	Identifier	reg_map		1669443	0					
ANR	1669601	Identifier	dst_ar		1669443	1					
ANR	1669602	Argument	reg_map [ dst_ar ]		1669443	1					
ANR	1669603	ArrayIndexing	reg_map [ dst_ar ]		1669443	0					
ANR	1669604	Identifier	reg_map		1669443	0					
ANR	1669605	Identifier	dst_ar		1669443	1					
ANR	1669606	Argument	imm		1669443	2					
ANR	1669607	Identifier	imm		1669443	0					
ANR	1669608	ReturnType	static sljit_si		1669443	1					
ANR	1669609	Identifier	emit_const_64		1669443	2					
ANR	1669610	ParameterList	"struct sljit_compiler * compiler , sljit_si dst_ar , sljit_sw imm , int flush"		1669443	3					
ANR	1669611	Parameter	struct sljit_compiler * compiler	1159:30:34965:34995	1669443	0	True				
ANR	1669612	ParameterType	struct sljit_compiler *		1669443	0					
ANR	1669613	Identifier	compiler		1669443	1					
ANR	1669614	Parameter	sljit_si dst_ar	1159:63:34998:35012	1669443	1	True				
ANR	1669615	ParameterType	sljit_si		1669443	0					
ANR	1669616	Identifier	dst_ar		1669443	1					
ANR	1669617	Parameter	sljit_sw imm	1159:80:35015:35026	1669443	2	True				
ANR	1669618	ParameterType	sljit_sw		1669443	0					
ANR	1669619	Identifier	imm		1669443	1					
ANR	1669620	Parameter	int flush	1159:94:35029:35037	1669443	3	True				
ANR	1669621	ParameterType	int		1669443	0					
ANR	1669622	Identifier	flush		1669443	1					
ANR	1669623	CFGEntryNode	ENTRY		1669443		True				
ANR	1669624	CFGExitNode	EXIT		1669443		True				
ANR	1669625	Symbol	ADDLI_SOLO		1669443						
ANR	1669626	Symbol	ZERO		1669443						
ANR	1669627	Symbol	dst_ar		1669443						
ANR	1669628	Symbol	flush		1669443						
ANR	1669629	Symbol	SHL16INSLI		1669443						
ANR	1669630	Symbol	imm		1669443						
ANR	1669631	Symbol	reg_map		1669443						
ANR	1669632	Symbol	* dst_ar		1669443						
ANR	1669633	Symbol	compiler		1669443						
ANR	1669634	Symbol	* reg_map		1669443						
ANR	1669635	Symbol	SHL16INSLI_SOLO		1669443						
ANR	1669636	Symbol	ADDLI		1669443						
ANR	1669637	Function	sljit_emit_enter	1176:0:35705:37491							
ANR	1669638	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1669637	0					
ANR	1669639	CompoundStatement		1179:0:35921:37491	1669637	0					
ANR	1669640	IdentifierDeclStatement	sljit_ins base ;	1180:1:35924:35938	1669637	0	True				
ANR	1669641	IdentifierDecl	base		1669637	0					
ANR	1669642	IdentifierDeclType	sljit_ins		1669637	0					
ANR	1669643	Identifier	base		1669637	1					
ANR	1669644	IdentifierDeclStatement	sljit_ins bundle = 0 ;	1181:1:35941:35961	1669637	1	True				
ANR	1669645	IdentifierDecl	bundle = 0		1669637	0					
ANR	1669646	IdentifierDeclType	sljit_ins		1669637	0					
ANR	1669647	Identifier	bundle		1669637	1					
ANR	1669648	AssignmentExpression	bundle = 0		1669637	2		=			
ANR	1669649	Identifier	bundle		1669637	0					
ANR	1669650	PrimaryExpression	0		1669637	1					
ANR	1669651	ExpressionStatement	CHECK_ERROR ( )	1183:1:35965:35978	1669637	2	True				
ANR	1669652	CallExpression	CHECK_ERROR ( )		1669637	0					
ANR	1669653	Callee	CHECK_ERROR		1669637	0					
ANR	1669654	Identifier	CHECK_ERROR		1669637	0					
ANR	1669655	ArgumentList			1669637	1					
ANR	1669656	ExpressionStatement	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1184:1:35981:36080	1669637	3	True				
ANR	1669657	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1669637	0					
ANR	1669658	Callee	check_sljit_emit_enter		1669637	0					
ANR	1669659	Identifier	check_sljit_emit_enter		1669637	0					
ANR	1669660	ArgumentList	compiler		1669637	1					
ANR	1669661	Argument	compiler		1669637	0					
ANR	1669662	Identifier	compiler		1669637	0					
ANR	1669663	Argument	options		1669637	1					
ANR	1669664	Identifier	options		1669637	0					
ANR	1669665	Argument	args		1669637	2					
ANR	1669666	Identifier	args		1669637	0					
ANR	1669667	Argument	scratches		1669637	3					
ANR	1669668	Identifier	scratches		1669637	0					
ANR	1669669	Argument	saveds		1669637	4					
ANR	1669670	Identifier	saveds		1669637	0					
ANR	1669671	Argument	fscratches		1669637	5					
ANR	1669672	Identifier	fscratches		1669637	0					
ANR	1669673	Argument	fsaveds		1669637	6					
ANR	1669674	Identifier	fsaveds		1669637	0					
ANR	1669675	Argument	local_size		1669637	7					
ANR	1669676	Identifier	local_size		1669637	0					
ANR	1669677	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1185:1:36083:36174	1669637	4	True				
ANR	1669678	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1669637	0					
ANR	1669679	Callee	set_emit_enter		1669637	0					
ANR	1669680	Identifier	set_emit_enter		1669637	0					
ANR	1669681	ArgumentList	compiler		1669637	1					
ANR	1669682	Argument	compiler		1669637	0					
ANR	1669683	Identifier	compiler		1669637	0					
ANR	1669684	Argument	options		1669637	1					
ANR	1669685	Identifier	options		1669637	0					
ANR	1669686	Argument	args		1669637	2					
ANR	1669687	Identifier	args		1669637	0					
ANR	1669688	Argument	scratches		1669637	3					
ANR	1669689	Identifier	scratches		1669637	0					
ANR	1669690	Argument	saveds		1669637	4					
ANR	1669691	Identifier	saveds		1669637	0					
ANR	1669692	Argument	fscratches		1669637	5					
ANR	1669693	Identifier	fscratches		1669637	0					
ANR	1669694	Argument	fsaveds		1669637	6					
ANR	1669695	Identifier	fsaveds		1669637	0					
ANR	1669696	Argument	local_size		1669637	7					
ANR	1669697	Identifier	local_size		1669637	0					
ANR	1669698	ExpressionStatement	local_size += ( saveds + 1 ) * sizeof ( sljit_sw )	1187:1:36178:36223	1669637	5	True				
ANR	1669699	AssignmentExpression	local_size += ( saveds + 1 ) * sizeof ( sljit_sw )		1669637	0		+=			
ANR	1669700	Identifier	local_size		1669637	0					
ANR	1669701	MultiplicativeExpression	( saveds + 1 ) * sizeof ( sljit_sw )		1669637	1		*			
ANR	1669702	AdditiveExpression	saveds + 1		1669637	0		+			
ANR	1669703	Identifier	saveds		1669637	0					
ANR	1669704	PrimaryExpression	1		1669637	1					
ANR	1669705	SizeofExpression	sizeof ( sljit_sw )		1669637	1					
ANR	1669706	Sizeof	sizeof		1669637	0					
ANR	1669707	SizeofOperand	sljit_sw		1669637	1					
ANR	1669708	ExpressionStatement	local_size = ( local_size + 7 ) & ~7	1188:1:36226:36260	1669637	6	True				
ANR	1669709	AssignmentExpression	local_size = ( local_size + 7 ) & ~7		1669637	0		=			
ANR	1669710	Identifier	local_size		1669637	0					
ANR	1669711	BitAndExpression	( local_size + 7 ) & ~7		1669637	1		&			
ANR	1669712	AdditiveExpression	local_size + 7		1669637	0		+			
ANR	1669713	Identifier	local_size		1669637	0					
ANR	1669714	PrimaryExpression	7		1669637	1					
ANR	1669715	Identifier	~7		1669637	1					
ANR	1669716	ExpressionStatement	compiler -> local_size = local_size	1189:1:36263:36296	1669637	7	True				
ANR	1669717	AssignmentExpression	compiler -> local_size = local_size		1669637	0		=			
ANR	1669718	PtrMemberAccess	compiler -> local_size		1669637	0					
ANR	1669719	Identifier	compiler		1669637	0					
ANR	1669720	Identifier	local_size		1669637	1					
ANR	1669721	Identifier	local_size		1669637	1					
ANR	1669722	IfStatement	if ( local_size <= SIMM_16BIT_MAX )		1669637	8					
ANR	1669723	Condition	local_size <= SIMM_16BIT_MAX	1191:5:36304:36331	1669637	0	True				
ANR	1669724	RelationalExpression	local_size <= SIMM_16BIT_MAX		1669637	0		<=			
ANR	1669725	Identifier	local_size		1669637	0					
ANR	1669726	Identifier	SIMM_16BIT_MAX		1669637	1					
ANR	1669727	CompoundStatement		13:35:412:412	1669637	1					
ANR	1669728	ExpressionStatement	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size ) )"	1193:2:36361:36438	1669637	0	True				
ANR	1669729	CallExpression	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size ) )"		1669637	0					
ANR	1669730	Callee	FAIL_IF		1669637	0					
ANR	1669731	Identifier	FAIL_IF		1669637	0					
ANR	1669732	ArgumentList	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size )"		1669637	1					
ANR	1669733	Argument	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size )"		1669637	0					
ANR	1669734	CallExpression	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , - local_size )"		1669637	0					
ANR	1669735	Callee	ADDLI		1669637	0					
ANR	1669736	Identifier	ADDLI		1669637	0					
ANR	1669737	ArgumentList	SLJIT_LOCALS_REG_mapped		1669637	1					
ANR	1669738	Argument	SLJIT_LOCALS_REG_mapped		1669637	0					
ANR	1669739	Identifier	SLJIT_LOCALS_REG_mapped		1669637	0					
ANR	1669740	Argument	SLJIT_LOCALS_REG_mapped		1669637	1					
ANR	1669741	Identifier	SLJIT_LOCALS_REG_mapped		1669637	0					
ANR	1669742	Argument	- local_size		1669637	2					
ANR	1669743	UnaryOperationExpression	- local_size		1669637	0					
ANR	1669744	UnaryOperator	-		1669637	0					
ANR	1669745	Identifier	local_size		1669637	1					
ANR	1669746	ExpressionStatement	base = SLJIT_LOCALS_REG_mapped	1194:2:36442:36472	1669637	1	True				
ANR	1669747	AssignmentExpression	base = SLJIT_LOCALS_REG_mapped		1669637	0		=			
ANR	1669748	Identifier	base		1669637	0					
ANR	1669749	Identifier	SLJIT_LOCALS_REG_mapped		1669637	1					
ANR	1669750	ElseStatement	else		1669637	0					
ANR	1669751	CompoundStatement		17:8:560:560	1669637	0					
ANR	1669752	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"	1196:2:36486:36548	1669637	0	True				
ANR	1669753	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"		1669637	0					
ANR	1669754	Callee	FAIL_IF		1669637	0					
ANR	1669755	Identifier	FAIL_IF		1669637	0					
ANR	1669756	ArgumentList	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1669637	1					
ANR	1669757	Argument	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1669637	0					
ANR	1669758	CallExpression	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1669637	0					
ANR	1669759	Callee	load_immediate		1669637	0					
ANR	1669760	Identifier	load_immediate		1669637	0					
ANR	1669761	ArgumentList	compiler		1669637	1					
ANR	1669762	Argument	compiler		1669637	0					
ANR	1669763	Identifier	compiler		1669637	0					
ANR	1669764	Argument	TMP_REG1_mapped		1669637	1					
ANR	1669765	Identifier	TMP_REG1_mapped		1669637	0					
ANR	1669766	Argument	local_size		1669637	2					
ANR	1669767	Identifier	local_size		1669637	0					
ANR	1669768	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO ) )"	1197:2:36552:36612	1669637	1	True				
ANR	1669769	CallExpression	"FAIL_IF ( ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO ) )"		1669637	0					
ANR	1669770	Callee	FAIL_IF		1669637	0					
ANR	1669771	Identifier	FAIL_IF		1669637	0					
ANR	1669772	ArgumentList	"ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO )"		1669637	1					
ANR	1669773	Argument	"ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO )"		1669637	0					
ANR	1669774	CallExpression	"ADD ( TMP_REG2_mapped , SLJIT_LOCALS_REG_mapped , ZERO )"		1669637	0					
ANR	1669775	Callee	ADD		1669637	0					
ANR	1669776	Identifier	ADD		1669637	0					
ANR	1669777	ArgumentList	TMP_REG2_mapped		1669637	1					
ANR	1669778	Argument	TMP_REG2_mapped		1669637	0					
ANR	1669779	Identifier	TMP_REG2_mapped		1669637	0					
ANR	1669780	Argument	SLJIT_LOCALS_REG_mapped		1669637	1					
ANR	1669781	Identifier	SLJIT_LOCALS_REG_mapped		1669637	0					
ANR	1669782	Argument	ZERO		1669637	2					
ANR	1669783	Identifier	ZERO		1669637	0					
ANR	1669784	ExpressionStatement	"FAIL_IF ( SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"	1198:2:36616:36695	1669637	2	True				
ANR	1669785	CallExpression	"FAIL_IF ( SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"		1669637	0					
ANR	1669786	Callee	FAIL_IF		1669637	0					
ANR	1669787	Identifier	FAIL_IF		1669637	0					
ANR	1669788	ArgumentList	"SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1669637	1					
ANR	1669789	Argument	"SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1669637	0					
ANR	1669790	CallExpression	"SUB ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1669637	0					
ANR	1669791	Callee	SUB		1669637	0					
ANR	1669792	Identifier	SUB		1669637	0					
ANR	1669793	ArgumentList	SLJIT_LOCALS_REG_mapped		1669637	1					
ANR	1669794	Argument	SLJIT_LOCALS_REG_mapped		1669637	0					
ANR	1669795	Identifier	SLJIT_LOCALS_REG_mapped		1669637	0					
ANR	1669796	Argument	SLJIT_LOCALS_REG_mapped		1669637	1					
ANR	1669797	Identifier	SLJIT_LOCALS_REG_mapped		1669637	0					
ANR	1669798	Argument	TMP_REG1_mapped		1669637	2					
ANR	1669799	Identifier	TMP_REG1_mapped		1669637	0					
ANR	1669800	ExpressionStatement	base = TMP_REG2_mapped	1199:2:36699:36721	1669637	3	True				
ANR	1669801	AssignmentExpression	base = TMP_REG2_mapped		1669637	0		=			
ANR	1669802	Identifier	base		1669637	0					
ANR	1669803	Identifier	TMP_REG2_mapped		1669637	1					
ANR	1669804	ExpressionStatement	local_size = 0	1200:2:36725:36739	1669637	4	True				
ANR	1669805	AssignmentExpression	local_size = 0		1669637	0		=			
ANR	1669806	Identifier	local_size		1669637	0					
ANR	1669807	PrimaryExpression	0		1669637	1					
ANR	1669808	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"	1203:1:36746:36799	1669637	9	True				
ANR	1669809	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"		1669637	0					
ANR	1669810	Callee	FAIL_IF		1669637	0					
ANR	1669811	Identifier	FAIL_IF		1669637	0					
ANR	1669812	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1669637	1					
ANR	1669813	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1669637	0					
ANR	1669814	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1669637	0					
ANR	1669815	Callee	ADDLI		1669637	0					
ANR	1669816	Identifier	ADDLI		1669637	0					
ANR	1669817	ArgumentList	ADDR_TMP_mapped		1669637	1					
ANR	1669818	Argument	ADDR_TMP_mapped		1669637	0					
ANR	1669819	Identifier	ADDR_TMP_mapped		1669637	0					
ANR	1669820	Argument	base		1669637	1					
ANR	1669821	Identifier	base		1669637	0					
ANR	1669822	Argument	local_size - 8		1669637	2					
ANR	1669823	AdditiveExpression	local_size - 8		1669637	0		-			
ANR	1669824	Identifier	local_size		1669637	0					
ANR	1669825	PrimaryExpression	8		1669637	1					
ANR	1669826	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , RA , - 8 ) )"	1204:1:36802:36842	1669637	10	True				
ANR	1669827	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , RA , - 8 ) )"		1669637	0					
ANR	1669828	Callee	FAIL_IF		1669637	0					
ANR	1669829	Identifier	FAIL_IF		1669637	0					
ANR	1669830	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , RA , - 8 )"		1669637	1					
ANR	1669831	Argument	"ST_ADD ( ADDR_TMP_mapped , RA , - 8 )"		1669637	0					
ANR	1669832	CallExpression	"ST_ADD ( ADDR_TMP_mapped , RA , - 8 )"		1669637	0					
ANR	1669833	Callee	ST_ADD		1669637	0					
ANR	1669834	Identifier	ST_ADD		1669637	0					
ANR	1669835	ArgumentList	ADDR_TMP_mapped		1669637	1					
ANR	1669836	Argument	ADDR_TMP_mapped		1669637	0					
ANR	1669837	Identifier	ADDR_TMP_mapped		1669637	0					
ANR	1669838	Argument	RA		1669637	1					
ANR	1669839	Identifier	RA		1669637	0					
ANR	1669840	Argument	- 8		1669637	2					
ANR	1669841	UnaryOperationExpression	- 8		1669637	0					
ANR	1669842	UnaryOperator	-		1669637	0					
ANR	1669843	PrimaryExpression	8		1669637	1					
ANR	1669844	IfStatement	if ( saveds >= 1 )		1669637	11					
ANR	1669845	Condition	saveds >= 1	1206:5:36850:36860	1669637	0	True				
ANR	1669846	RelationalExpression	saveds >= 1		1669637	0		>=			
ANR	1669847	Identifier	saveds		1669637	0					
ANR	1669848	PrimaryExpression	1		1669637	1					
ANR	1669849	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG1_mapped , - 8 ) )"	1207:2:36865:36926	1669637	1	True				
ANR	1669850	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG1_mapped , - 8 ) )"		1669637	0					
ANR	1669851	Callee	FAIL_IF		1669637	0					
ANR	1669852	Identifier	FAIL_IF		1669637	0					
ANR	1669853	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG1_mapped , - 8 )"		1669637	1					
ANR	1669854	Argument	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG1_mapped , - 8 )"		1669637	0					
ANR	1669855	CallExpression	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG1_mapped , - 8 )"		1669637	0					
ANR	1669856	Callee	ST_ADD		1669637	0					
ANR	1669857	Identifier	ST_ADD		1669637	0					
ANR	1669858	ArgumentList	ADDR_TMP_mapped		1669637	1					
ANR	1669859	Argument	ADDR_TMP_mapped		1669637	0					
ANR	1669860	Identifier	ADDR_TMP_mapped		1669637	0					
ANR	1669861	Argument	SLJIT_SAVED_REG1_mapped		1669637	1					
ANR	1669862	Identifier	SLJIT_SAVED_REG1_mapped		1669637	0					
ANR	1669863	Argument	- 8		1669637	2					
ANR	1669864	UnaryOperationExpression	- 8		1669637	0					
ANR	1669865	UnaryOperator	-		1669637	0					
ANR	1669866	PrimaryExpression	8		1669637	1					
ANR	1669867	IfStatement	if ( saveds >= 2 )		1669637	12					
ANR	1669868	Condition	saveds >= 2	1209:5:36934:36944	1669637	0	True				
ANR	1669869	RelationalExpression	saveds >= 2		1669637	0		>=			
ANR	1669870	Identifier	saveds		1669637	0					
ANR	1669871	PrimaryExpression	2		1669637	1					
ANR	1669872	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG2_mapped , - 8 ) )"	1210:2:36949:37010	1669637	1	True				
ANR	1669873	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG2_mapped , - 8 ) )"		1669637	0					
ANR	1669874	Callee	FAIL_IF		1669637	0					
ANR	1669875	Identifier	FAIL_IF		1669637	0					
ANR	1669876	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG2_mapped , - 8 )"		1669637	1					
ANR	1669877	Argument	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG2_mapped , - 8 )"		1669637	0					
ANR	1669878	CallExpression	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG2_mapped , - 8 )"		1669637	0					
ANR	1669879	Callee	ST_ADD		1669637	0					
ANR	1669880	Identifier	ST_ADD		1669637	0					
ANR	1669881	ArgumentList	ADDR_TMP_mapped		1669637	1					
ANR	1669882	Argument	ADDR_TMP_mapped		1669637	0					
ANR	1669883	Identifier	ADDR_TMP_mapped		1669637	0					
ANR	1669884	Argument	SLJIT_SAVED_REG2_mapped		1669637	1					
ANR	1669885	Identifier	SLJIT_SAVED_REG2_mapped		1669637	0					
ANR	1669886	Argument	- 8		1669637	2					
ANR	1669887	UnaryOperationExpression	- 8		1669637	0					
ANR	1669888	UnaryOperator	-		1669637	0					
ANR	1669889	PrimaryExpression	8		1669637	1					
ANR	1669890	IfStatement	if ( saveds >= 3 )		1669637	13					
ANR	1669891	Condition	saveds >= 3	1212:5:37018:37028	1669637	0	True				
ANR	1669892	RelationalExpression	saveds >= 3		1669637	0		>=			
ANR	1669893	Identifier	saveds		1669637	0					
ANR	1669894	PrimaryExpression	3		1669637	1					
ANR	1669895	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG3_mapped , - 8 ) )"	1213:2:37033:37094	1669637	1	True				
ANR	1669896	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG3_mapped , - 8 ) )"		1669637	0					
ANR	1669897	Callee	FAIL_IF		1669637	0					
ANR	1669898	Identifier	FAIL_IF		1669637	0					
ANR	1669899	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG3_mapped , - 8 )"		1669637	1					
ANR	1669900	Argument	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG3_mapped , - 8 )"		1669637	0					
ANR	1669901	CallExpression	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_REG3_mapped , - 8 )"		1669637	0					
ANR	1669902	Callee	ST_ADD		1669637	0					
ANR	1669903	Identifier	ST_ADD		1669637	0					
ANR	1669904	ArgumentList	ADDR_TMP_mapped		1669637	1					
ANR	1669905	Argument	ADDR_TMP_mapped		1669637	0					
ANR	1669906	Identifier	ADDR_TMP_mapped		1669637	0					
ANR	1669907	Argument	SLJIT_SAVED_REG3_mapped		1669637	1					
ANR	1669908	Identifier	SLJIT_SAVED_REG3_mapped		1669637	0					
ANR	1669909	Argument	- 8		1669637	2					
ANR	1669910	UnaryOperationExpression	- 8		1669637	0					
ANR	1669911	UnaryOperator	-		1669637	0					
ANR	1669912	PrimaryExpression	8		1669637	1					
ANR	1669913	IfStatement	if ( saveds >= 4 )		1669637	14					
ANR	1669914	Condition	saveds >= 4	1215:5:37102:37112	1669637	0	True				
ANR	1669915	RelationalExpression	saveds >= 4		1669637	0		>=			
ANR	1669916	Identifier	saveds		1669637	0					
ANR	1669917	PrimaryExpression	4		1669637	1					
ANR	1669918	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG1_mapped , - 8 ) )"	1216:2:37117:37179	1669637	1	True				
ANR	1669919	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG1_mapped , - 8 ) )"		1669637	0					
ANR	1669920	Callee	FAIL_IF		1669637	0					
ANR	1669921	Identifier	FAIL_IF		1669637	0					
ANR	1669922	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG1_mapped , - 8 )"		1669637	1					
ANR	1669923	Argument	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG1_mapped , - 8 )"		1669637	0					
ANR	1669924	CallExpression	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG1_mapped , - 8 )"		1669637	0					
ANR	1669925	Callee	ST_ADD		1669637	0					
ANR	1669926	Identifier	ST_ADD		1669637	0					
ANR	1669927	ArgumentList	ADDR_TMP_mapped		1669637	1					
ANR	1669928	Argument	ADDR_TMP_mapped		1669637	0					
ANR	1669929	Identifier	ADDR_TMP_mapped		1669637	0					
ANR	1669930	Argument	SLJIT_SAVED_EREG1_mapped		1669637	1					
ANR	1669931	Identifier	SLJIT_SAVED_EREG1_mapped		1669637	0					
ANR	1669932	Argument	- 8		1669637	2					
ANR	1669933	UnaryOperationExpression	- 8		1669637	0					
ANR	1669934	UnaryOperator	-		1669637	0					
ANR	1669935	PrimaryExpression	8		1669637	1					
ANR	1669936	IfStatement	if ( saveds >= 5 )		1669637	15					
ANR	1669937	Condition	saveds >= 5	1218:5:37187:37197	1669637	0	True				
ANR	1669938	RelationalExpression	saveds >= 5		1669637	0		>=			
ANR	1669939	Identifier	saveds		1669637	0					
ANR	1669940	PrimaryExpression	5		1669637	1					
ANR	1669941	ExpressionStatement	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG2_mapped , - 8 ) )"	1219:2:37202:37264	1669637	1	True				
ANR	1669942	CallExpression	"FAIL_IF ( ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG2_mapped , - 8 ) )"		1669637	0					
ANR	1669943	Callee	FAIL_IF		1669637	0					
ANR	1669944	Identifier	FAIL_IF		1669637	0					
ANR	1669945	ArgumentList	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG2_mapped , - 8 )"		1669637	1					
ANR	1669946	Argument	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG2_mapped , - 8 )"		1669637	0					
ANR	1669947	CallExpression	"ST_ADD ( ADDR_TMP_mapped , SLJIT_SAVED_EREG2_mapped , - 8 )"		1669637	0					
ANR	1669948	Callee	ST_ADD		1669637	0					
ANR	1669949	Identifier	ST_ADD		1669637	0					
ANR	1669950	ArgumentList	ADDR_TMP_mapped		1669637	1					
ANR	1669951	Argument	ADDR_TMP_mapped		1669637	0					
ANR	1669952	Identifier	ADDR_TMP_mapped		1669637	0					
ANR	1669953	Argument	SLJIT_SAVED_EREG2_mapped		1669637	1					
ANR	1669954	Identifier	SLJIT_SAVED_EREG2_mapped		1669637	0					
ANR	1669955	Argument	- 8		1669637	2					
ANR	1669956	UnaryOperationExpression	- 8		1669637	0					
ANR	1669957	UnaryOperator	-		1669637	0					
ANR	1669958	PrimaryExpression	8		1669637	1					
ANR	1669959	IfStatement	if ( args >= 1 )		1669637	16					
ANR	1669960	Condition	args >= 1	1221:5:37272:37280	1669637	0	True				
ANR	1669961	RelationalExpression	args >= 1		1669637	0		>=			
ANR	1669962	Identifier	args		1669637	0					
ANR	1669963	PrimaryExpression	1		1669637	1					
ANR	1669964	ExpressionStatement	"FAIL_IF ( ADD ( SLJIT_SAVED_REG1_mapped , 0 , ZERO ) )"	1222:2:37285:37331	1669637	1	True				
ANR	1669965	CallExpression	"FAIL_IF ( ADD ( SLJIT_SAVED_REG1_mapped , 0 , ZERO ) )"		1669637	0					
ANR	1669966	Callee	FAIL_IF		1669637	0					
ANR	1669967	Identifier	FAIL_IF		1669637	0					
ANR	1669968	ArgumentList	"ADD ( SLJIT_SAVED_REG1_mapped , 0 , ZERO )"		1669637	1					
ANR	1669969	Argument	"ADD ( SLJIT_SAVED_REG1_mapped , 0 , ZERO )"		1669637	0					
ANR	1669970	CallExpression	"ADD ( SLJIT_SAVED_REG1_mapped , 0 , ZERO )"		1669637	0					
ANR	1669971	Callee	ADD		1669637	0					
ANR	1669972	Identifier	ADD		1669637	0					
ANR	1669973	ArgumentList	SLJIT_SAVED_REG1_mapped		1669637	1					
ANR	1669974	Argument	SLJIT_SAVED_REG1_mapped		1669637	0					
ANR	1669975	Identifier	SLJIT_SAVED_REG1_mapped		1669637	0					
ANR	1669976	Argument	0		1669637	1					
ANR	1669977	PrimaryExpression	0		1669637	0					
ANR	1669978	Argument	ZERO		1669637	2					
ANR	1669979	Identifier	ZERO		1669637	0					
ANR	1669980	IfStatement	if ( args >= 2 )		1669637	17					
ANR	1669981	Condition	args >= 2	1224:5:37339:37347	1669637	0	True				
ANR	1669982	RelationalExpression	args >= 2		1669637	0		>=			
ANR	1669983	Identifier	args		1669637	0					
ANR	1669984	PrimaryExpression	2		1669637	1					
ANR	1669985	ExpressionStatement	"FAIL_IF ( ADD ( SLJIT_SAVED_REG2_mapped , 1 , ZERO ) )"	1225:2:37352:37398	1669637	1	True				
ANR	1669986	CallExpression	"FAIL_IF ( ADD ( SLJIT_SAVED_REG2_mapped , 1 , ZERO ) )"		1669637	0					
ANR	1669987	Callee	FAIL_IF		1669637	0					
ANR	1669988	Identifier	FAIL_IF		1669637	0					
ANR	1669989	ArgumentList	"ADD ( SLJIT_SAVED_REG2_mapped , 1 , ZERO )"		1669637	1					
ANR	1669990	Argument	"ADD ( SLJIT_SAVED_REG2_mapped , 1 , ZERO )"		1669637	0					
ANR	1669991	CallExpression	"ADD ( SLJIT_SAVED_REG2_mapped , 1 , ZERO )"		1669637	0					
ANR	1669992	Callee	ADD		1669637	0					
ANR	1669993	Identifier	ADD		1669637	0					
ANR	1669994	ArgumentList	SLJIT_SAVED_REG2_mapped		1669637	1					
ANR	1669995	Argument	SLJIT_SAVED_REG2_mapped		1669637	0					
ANR	1669996	Identifier	SLJIT_SAVED_REG2_mapped		1669637	0					
ANR	1669997	Argument	1		1669637	1					
ANR	1669998	PrimaryExpression	1		1669637	0					
ANR	1669999	Argument	ZERO		1669637	2					
ANR	1670000	Identifier	ZERO		1669637	0					
ANR	1670001	IfStatement	if ( args >= 3 )		1669637	18					
ANR	1670002	Condition	args >= 3	1227:5:37406:37414	1669637	0	True				
ANR	1670003	RelationalExpression	args >= 3		1669637	0		>=			
ANR	1670004	Identifier	args		1669637	0					
ANR	1670005	PrimaryExpression	3		1669637	1					
ANR	1670006	ExpressionStatement	"FAIL_IF ( ADD ( SLJIT_SAVED_REG3_mapped , 2 , ZERO ) )"	1228:2:37419:37465	1669637	1	True				
ANR	1670007	CallExpression	"FAIL_IF ( ADD ( SLJIT_SAVED_REG3_mapped , 2 , ZERO ) )"		1669637	0					
ANR	1670008	Callee	FAIL_IF		1669637	0					
ANR	1670009	Identifier	FAIL_IF		1669637	0					
ANR	1670010	ArgumentList	"ADD ( SLJIT_SAVED_REG3_mapped , 2 , ZERO )"		1669637	1					
ANR	1670011	Argument	"ADD ( SLJIT_SAVED_REG3_mapped , 2 , ZERO )"		1669637	0					
ANR	1670012	CallExpression	"ADD ( SLJIT_SAVED_REG3_mapped , 2 , ZERO )"		1669637	0					
ANR	1670013	Callee	ADD		1669637	0					
ANR	1670014	Identifier	ADD		1669637	0					
ANR	1670015	ArgumentList	SLJIT_SAVED_REG3_mapped		1669637	1					
ANR	1670016	Argument	SLJIT_SAVED_REG3_mapped		1669637	0					
ANR	1670017	Identifier	SLJIT_SAVED_REG3_mapped		1669637	0					
ANR	1670018	Argument	2		1669637	1					
ANR	1670019	PrimaryExpression	2		1669637	0					
ANR	1670020	Argument	ZERO		1669637	2					
ANR	1670021	Identifier	ZERO		1669637	0					
ANR	1670022	ReturnStatement	return SLJIT_SUCCESS ;	1230:1:37469:37489	1669637	19	True				
ANR	1670023	Identifier	SLJIT_SUCCESS		1669637	0					
ANR	1670024	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1669637	1					
ANR	1670025	Identifier	sljit_emit_enter		1669637	2					
ANR	1670026	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1669637	3					
ANR	1670027	Parameter	struct sljit_compiler * compiler	1176:51:35756:35786	1669637	0	True				
ANR	1670028	ParameterType	struct sljit_compiler *		1669637	0					
ANR	1670029	Identifier	compiler		1669637	1					
ANR	1670030	Parameter	sljit_si options	1177:1:35790:35805	1669637	1	True				
ANR	1670031	ParameterType	sljit_si		1669637	0					
ANR	1670032	Identifier	options		1669637	1					
ANR	1670033	Parameter	sljit_si args	1177:19:35808:35820	1669637	2	True				
ANR	1670034	ParameterType	sljit_si		1669637	0					
ANR	1670035	Identifier	args		1669637	1					
ANR	1670036	Parameter	sljit_si scratches	1177:34:35823:35840	1669637	3	True				
ANR	1670037	ParameterType	sljit_si		1669637	0					
ANR	1670038	Identifier	scratches		1669637	1					
ANR	1670039	Parameter	sljit_si saveds	1177:54:35843:35857	1669637	4	True				
ANR	1670040	ParameterType	sljit_si		1669637	0					
ANR	1670041	Identifier	saveds		1669637	1					
ANR	1670042	Parameter	sljit_si fscratches	1178:1:35861:35879	1669637	5	True				
ANR	1670043	ParameterType	sljit_si		1669637	0					
ANR	1670044	Identifier	fscratches		1669637	1					
ANR	1670045	Parameter	sljit_si fsaveds	1178:22:35882:35897	1669637	6	True				
ANR	1670046	ParameterType	sljit_si		1669637	0					
ANR	1670047	Identifier	fsaveds		1669637	1					
ANR	1670048	Parameter	sljit_si local_size	1178:40:35900:35918	1669637	7	True				
ANR	1670049	ParameterType	sljit_si		1669637	0					
ANR	1670050	Identifier	local_size		1669637	1					
ANR	1670051	CFGEntryNode	ENTRY		1669637		True				
ANR	1670052	CFGExitNode	EXIT		1669637		True				
ANR	1670053	Symbol	ZERO		1669637						
ANR	1670054	Symbol	ADD		1669637						
ANR	1670055	Symbol	TMP_REG1_mapped		1669637						
ANR	1670056	Symbol	scratches		1669637						
ANR	1670057	Symbol	saveds		1669637						
ANR	1670058	Symbol	* compiler		1669637						
ANR	1670059	Symbol	ADDLI		1669637						
ANR	1670060	Symbol	ST_ADD		1669637						
ANR	1670061	Symbol	load_immediate		1669637						
ANR	1670062	Symbol	options		1669637						
ANR	1670063	Symbol	compiler		1669637						
ANR	1670064	Symbol	TMP_REG2_mapped		1669637						
ANR	1670065	Symbol	bundle		1669637						
ANR	1670066	Symbol	local_size		1669637						
ANR	1670067	Symbol	SUB		1669637						
ANR	1670068	Symbol	SLJIT_SAVED_EREG1_mapped		1669637						
ANR	1670069	Symbol	SLJIT_SAVED_EREG2_mapped		1669637						
ANR	1670070	Symbol	SLJIT_SUCCESS		1669637						
ANR	1670071	Symbol	RA		1669637						
ANR	1670072	Symbol	args		1669637						
ANR	1670073	Symbol	fscratches		1669637						
ANR	1670074	Symbol	SLJIT_LOCALS_REG_mapped		1669637						
ANR	1670075	Symbol	compiler -> local_size		1669637						
ANR	1670076	Symbol	ADDR_TMP_mapped		1669637						
ANR	1670077	Symbol	fsaveds		1669637						
ANR	1670078	Symbol	SIMM_16BIT_MAX		1669637						
ANR	1670079	Symbol	SLJIT_SAVED_REG2_mapped		1669637						
ANR	1670080	Symbol	~7		1669637						
ANR	1670081	Symbol	SLJIT_SAVED_REG1_mapped		1669637						
ANR	1670082	Symbol	SLJIT_SAVED_REG3_mapped		1669637						
ANR	1670083	Symbol	base		1669637						
ANR	1670084	Function	sljit_set_context	1233:0:37494:38024							
ANR	1670085	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1670084	0					
ANR	1670086	CompoundStatement		1236:0:37707:38024	1670084	0					
ANR	1670087	ExpressionStatement	CHECK_ERROR_VOID ( )	1237:1:37710:37728	1670084	0	True				
ANR	1670088	CallExpression	CHECK_ERROR_VOID ( )		1670084	0					
ANR	1670089	Callee	CHECK_ERROR_VOID		1670084	0					
ANR	1670090	Identifier	CHECK_ERROR_VOID		1670084	0					
ANR	1670091	ArgumentList			1670084	1					
ANR	1670092	ExpressionStatement	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1238:1:37731:37831	1670084	1	True				
ANR	1670093	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1670084	0					
ANR	1670094	Callee	check_sljit_set_context		1670084	0					
ANR	1670095	Identifier	check_sljit_set_context		1670084	0					
ANR	1670096	ArgumentList	compiler		1670084	1					
ANR	1670097	Argument	compiler		1670084	0					
ANR	1670098	Identifier	compiler		1670084	0					
ANR	1670099	Argument	options		1670084	1					
ANR	1670100	Identifier	options		1670084	0					
ANR	1670101	Argument	args		1670084	2					
ANR	1670102	Identifier	args		1670084	0					
ANR	1670103	Argument	scratches		1670084	3					
ANR	1670104	Identifier	scratches		1670084	0					
ANR	1670105	Argument	saveds		1670084	4					
ANR	1670106	Identifier	saveds		1670084	0					
ANR	1670107	Argument	fscratches		1670084	5					
ANR	1670108	Identifier	fscratches		1670084	0					
ANR	1670109	Argument	fsaveds		1670084	6					
ANR	1670110	Identifier	fsaveds		1670084	0					
ANR	1670111	Argument	local_size		1670084	7					
ANR	1670112	Identifier	local_size		1670084	0					
ANR	1670113	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	1239:1:37834:37926	1670084	2	True				
ANR	1670114	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1670084	0					
ANR	1670115	Callee	set_set_context		1670084	0					
ANR	1670116	Identifier	set_set_context		1670084	0					
ANR	1670117	ArgumentList	compiler		1670084	1					
ANR	1670118	Argument	compiler		1670084	0					
ANR	1670119	Identifier	compiler		1670084	0					
ANR	1670120	Argument	options		1670084	1					
ANR	1670121	Identifier	options		1670084	0					
ANR	1670122	Argument	args		1670084	2					
ANR	1670123	Identifier	args		1670084	0					
ANR	1670124	Argument	scratches		1670084	3					
ANR	1670125	Identifier	scratches		1670084	0					
ANR	1670126	Argument	saveds		1670084	4					
ANR	1670127	Identifier	saveds		1670084	0					
ANR	1670128	Argument	fscratches		1670084	5					
ANR	1670129	Identifier	fscratches		1670084	0					
ANR	1670130	Argument	fsaveds		1670084	6					
ANR	1670131	Identifier	fsaveds		1670084	0					
ANR	1670132	Argument	local_size		1670084	7					
ANR	1670133	Identifier	local_size		1670084	0					
ANR	1670134	ExpressionStatement	local_size += ( saveds + 1 ) * sizeof ( sljit_sw )	1241:1:37930:37975	1670084	3	True				
ANR	1670135	AssignmentExpression	local_size += ( saveds + 1 ) * sizeof ( sljit_sw )		1670084	0		+=			
ANR	1670136	Identifier	local_size		1670084	0					
ANR	1670137	MultiplicativeExpression	( saveds + 1 ) * sizeof ( sljit_sw )		1670084	1		*			
ANR	1670138	AdditiveExpression	saveds + 1		1670084	0		+			
ANR	1670139	Identifier	saveds		1670084	0					
ANR	1670140	PrimaryExpression	1		1670084	1					
ANR	1670141	SizeofExpression	sizeof ( sljit_sw )		1670084	1					
ANR	1670142	Sizeof	sizeof		1670084	0					
ANR	1670143	SizeofOperand	sljit_sw		1670084	1					
ANR	1670144	ExpressionStatement	compiler -> local_size = ( local_size + 7 ) & ~7	1242:1:37978:38022	1670084	4	True				
ANR	1670145	AssignmentExpression	compiler -> local_size = ( local_size + 7 ) & ~7		1670084	0		=			
ANR	1670146	PtrMemberAccess	compiler -> local_size		1670084	0					
ANR	1670147	Identifier	compiler		1670084	0					
ANR	1670148	Identifier	local_size		1670084	1					
ANR	1670149	BitAndExpression	( local_size + 7 ) & ~7		1670084	1		&			
ANR	1670150	AdditiveExpression	local_size + 7		1670084	0		+			
ANR	1670151	Identifier	local_size		1670084	0					
ANR	1670152	PrimaryExpression	7		1670084	1					
ANR	1670153	Identifier	~7		1670084	1					
ANR	1670154	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1670084	1					
ANR	1670155	Identifier	sljit_set_context		1670084	2					
ANR	1670156	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1670084	3					
ANR	1670157	Parameter	struct sljit_compiler * compiler	1233:48:37542:37572	1670084	0	True				
ANR	1670158	ParameterType	struct sljit_compiler *		1670084	0					
ANR	1670159	Identifier	compiler		1670084	1					
ANR	1670160	Parameter	sljit_si options	1234:1:37576:37591	1670084	1	True				
ANR	1670161	ParameterType	sljit_si		1670084	0					
ANR	1670162	Identifier	options		1670084	1					
ANR	1670163	Parameter	sljit_si args	1234:19:37594:37606	1670084	2	True				
ANR	1670164	ParameterType	sljit_si		1670084	0					
ANR	1670165	Identifier	args		1670084	1					
ANR	1670166	Parameter	sljit_si scratches	1234:34:37609:37626	1670084	3	True				
ANR	1670167	ParameterType	sljit_si		1670084	0					
ANR	1670168	Identifier	scratches		1670084	1					
ANR	1670169	Parameter	sljit_si saveds	1234:54:37629:37643	1670084	4	True				
ANR	1670170	ParameterType	sljit_si		1670084	0					
ANR	1670171	Identifier	saveds		1670084	1					
ANR	1670172	Parameter	sljit_si fscratches	1235:1:37647:37665	1670084	5	True				
ANR	1670173	ParameterType	sljit_si		1670084	0					
ANR	1670174	Identifier	fscratches		1670084	1					
ANR	1670175	Parameter	sljit_si fsaveds	1235:22:37668:37683	1670084	6	True				
ANR	1670176	ParameterType	sljit_si		1670084	0					
ANR	1670177	Identifier	fsaveds		1670084	1					
ANR	1670178	Parameter	sljit_si local_size	1235:40:37686:37704	1670084	7	True				
ANR	1670179	ParameterType	sljit_si		1670084	0					
ANR	1670180	Identifier	local_size		1670084	1					
ANR	1670181	CFGEntryNode	ENTRY		1670084		True				
ANR	1670182	CFGExitNode	EXIT		1670084		True				
ANR	1670183	Symbol	args		1670084						
ANR	1670184	Symbol	fscratches		1670084						
ANR	1670185	Symbol	local_size		1670084						
ANR	1670186	Symbol	compiler -> local_size		1670084						
ANR	1670187	Symbol	fsaveds		1670084						
ANR	1670188	Symbol	scratches		1670084						
ANR	1670189	Symbol	saveds		1670084						
ANR	1670190	Symbol	options		1670084						
ANR	1670191	Symbol	~7		1670084						
ANR	1670192	Symbol	* compiler		1670084						
ANR	1670193	Symbol	compiler		1670084						
ANR	1670194	Function	sljit_emit_return	1245:0:38027:40072							
ANR	1670195	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1670194	0					
ANR	1670196	CompoundStatement		1246:0:38154:40072	1670194	0					
ANR	1670197	IdentifierDeclStatement	sljit_si local_size ;	1247:1:38157:38176	1670194	0	True				
ANR	1670198	IdentifierDecl	local_size		1670194	0					
ANR	1670199	IdentifierDeclType	sljit_si		1670194	0					
ANR	1670200	Identifier	local_size		1670194	1					
ANR	1670201	IdentifierDeclStatement	sljit_ins base ;	1248:1:38179:38193	1670194	1	True				
ANR	1670202	IdentifierDecl	base		1670194	0					
ANR	1670203	IdentifierDeclType	sljit_ins		1670194	0					
ANR	1670204	Identifier	base		1670194	1					
ANR	1670205	IdentifierDeclStatement	int addr_initialized = 0 ;	1249:1:38196:38220	1670194	2	True				
ANR	1670206	IdentifierDecl	addr_initialized = 0		1670194	0					
ANR	1670207	IdentifierDeclType	int		1670194	0					
ANR	1670208	Identifier	addr_initialized		1670194	1					
ANR	1670209	AssignmentExpression	addr_initialized = 0		1670194	2		=			
ANR	1670210	Identifier	addr_initialized		1670194	0					
ANR	1670211	PrimaryExpression	0		1670194	1					
ANR	1670212	ExpressionStatement	CHECK_ERROR ( )	1251:1:38224:38237	1670194	3	True				
ANR	1670213	CallExpression	CHECK_ERROR ( )		1670194	0					
ANR	1670214	Callee	CHECK_ERROR		1670194	0					
ANR	1670215	Identifier	CHECK_ERROR		1670194	0					
ANR	1670216	ArgumentList			1670194	1					
ANR	1670217	ExpressionStatement	"check_sljit_emit_return ( compiler , op , src , srcw )"	1252:1:38240:38288	1670194	4	True				
ANR	1670218	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1670194	0					
ANR	1670219	Callee	check_sljit_emit_return		1670194	0					
ANR	1670220	Identifier	check_sljit_emit_return		1670194	0					
ANR	1670221	ArgumentList	compiler		1670194	1					
ANR	1670222	Argument	compiler		1670194	0					
ANR	1670223	Identifier	compiler		1670194	0					
ANR	1670224	Argument	op		1670194	1					
ANR	1670225	Identifier	op		1670194	0					
ANR	1670226	Argument	src		1670194	2					
ANR	1670227	Identifier	src		1670194	0					
ANR	1670228	Argument	srcw		1670194	3					
ANR	1670229	Identifier	srcw		1670194	0					
ANR	1670230	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	1254:1:38292:38348	1670194	5	True				
ANR	1670231	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1670194	0					
ANR	1670232	Callee	FAIL_IF		1670194	0					
ANR	1670233	Identifier	FAIL_IF		1670194	0					
ANR	1670234	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1670194	1					
ANR	1670235	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1670194	0					
ANR	1670236	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1670194	0					
ANR	1670237	Callee	emit_mov_before_return		1670194	0					
ANR	1670238	Identifier	emit_mov_before_return		1670194	0					
ANR	1670239	ArgumentList	compiler		1670194	1					
ANR	1670240	Argument	compiler		1670194	0					
ANR	1670241	Identifier	compiler		1670194	0					
ANR	1670242	Argument	op		1670194	1					
ANR	1670243	Identifier	op		1670194	0					
ANR	1670244	Argument	src		1670194	2					
ANR	1670245	Identifier	src		1670194	0					
ANR	1670246	Argument	srcw		1670194	3					
ANR	1670247	Identifier	srcw		1670194	0					
ANR	1670248	ExpressionStatement	local_size = compiler -> local_size	1256:1:38352:38385	1670194	6	True				
ANR	1670249	AssignmentExpression	local_size = compiler -> local_size		1670194	0		=			
ANR	1670250	Identifier	local_size		1670194	0					
ANR	1670251	PtrMemberAccess	compiler -> local_size		1670194	1					
ANR	1670252	Identifier	compiler		1670194	0					
ANR	1670253	Identifier	local_size		1670194	1					
ANR	1670254	IfStatement	if ( local_size <= SIMM_16BIT_MAX )		1670194	7					
ANR	1670255	Condition	local_size <= SIMM_16BIT_MAX	1257:5:38392:38419	1670194	0	True				
ANR	1670256	RelationalExpression	local_size <= SIMM_16BIT_MAX		1670194	0		<=			
ANR	1670257	Identifier	local_size		1670194	0					
ANR	1670258	Identifier	SIMM_16BIT_MAX		1670194	1					
ANR	1670259	ExpressionStatement	base = SLJIT_LOCALS_REG_mapped	1258:2:38424:38454	1670194	1	True				
ANR	1670260	AssignmentExpression	base = SLJIT_LOCALS_REG_mapped		1670194	0		=			
ANR	1670261	Identifier	base		1670194	0					
ANR	1670262	Identifier	SLJIT_LOCALS_REG_mapped		1670194	1					
ANR	1670263	ElseStatement	else		1670194	0					
ANR	1670264	CompoundStatement		14:6:307:307	1670194	0					
ANR	1670265	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"	1260:2:38466:38528	1670194	0	True				
ANR	1670266	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , local_size ) )"		1670194	0					
ANR	1670267	Callee	FAIL_IF		1670194	0					
ANR	1670268	Identifier	FAIL_IF		1670194	0					
ANR	1670269	ArgumentList	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1670194	1					
ANR	1670270	Argument	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1670194	0					
ANR	1670271	CallExpression	"load_immediate ( compiler , TMP_REG1_mapped , local_size )"		1670194	0					
ANR	1670272	Callee	load_immediate		1670194	0					
ANR	1670273	Identifier	load_immediate		1670194	0					
ANR	1670274	ArgumentList	compiler		1670194	1					
ANR	1670275	Argument	compiler		1670194	0					
ANR	1670276	Identifier	compiler		1670194	0					
ANR	1670277	Argument	TMP_REG1_mapped		1670194	1					
ANR	1670278	Identifier	TMP_REG1_mapped		1670194	0					
ANR	1670279	Argument	local_size		1670194	2					
ANR	1670280	Identifier	local_size		1670194	0					
ANR	1670281	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"	1261:2:38532:38603	1670194	1	True				
ANR	1670282	CallExpression	"FAIL_IF ( ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped ) )"		1670194	0					
ANR	1670283	Callee	FAIL_IF		1670194	0					
ANR	1670284	Identifier	FAIL_IF		1670194	0					
ANR	1670285	ArgumentList	"ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1670194	1					
ANR	1670286	Argument	"ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1670194	0					
ANR	1670287	CallExpression	"ADD ( TMP_REG1_mapped , SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped )"		1670194	0					
ANR	1670288	Callee	ADD		1670194	0					
ANR	1670289	Identifier	ADD		1670194	0					
ANR	1670290	ArgumentList	TMP_REG1_mapped		1670194	1					
ANR	1670291	Argument	TMP_REG1_mapped		1670194	0					
ANR	1670292	Identifier	TMP_REG1_mapped		1670194	0					
ANR	1670293	Argument	SLJIT_LOCALS_REG_mapped		1670194	1					
ANR	1670294	Identifier	SLJIT_LOCALS_REG_mapped		1670194	0					
ANR	1670295	Argument	TMP_REG1_mapped		1670194	2					
ANR	1670296	Identifier	TMP_REG1_mapped		1670194	0					
ANR	1670297	ExpressionStatement	base = TMP_REG1_mapped	1262:2:38607:38629	1670194	2	True				
ANR	1670298	AssignmentExpression	base = TMP_REG1_mapped		1670194	0		=			
ANR	1670299	Identifier	base		1670194	0					
ANR	1670300	Identifier	TMP_REG1_mapped		1670194	1					
ANR	1670301	ExpressionStatement	local_size = 0	1263:2:38633:38647	1670194	3	True				
ANR	1670302	AssignmentExpression	local_size = 0		1670194	0		=			
ANR	1670303	Identifier	local_size		1670194	0					
ANR	1670304	PrimaryExpression	0		1670194	1					
ANR	1670305	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"	1266:1:38654:38707	1670194	8	True				
ANR	1670306	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 8 ) )"		1670194	0					
ANR	1670307	Callee	FAIL_IF		1670194	0					
ANR	1670308	Identifier	FAIL_IF		1670194	0					
ANR	1670309	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1670194	1					
ANR	1670310	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1670194	0					
ANR	1670311	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 8 )"		1670194	0					
ANR	1670312	Callee	ADDLI		1670194	0					
ANR	1670313	Identifier	ADDLI		1670194	0					
ANR	1670314	ArgumentList	ADDR_TMP_mapped		1670194	1					
ANR	1670315	Argument	ADDR_TMP_mapped		1670194	0					
ANR	1670316	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670317	Argument	base		1670194	1					
ANR	1670318	Identifier	base		1670194	0					
ANR	1670319	Argument	local_size - 8		1670194	2					
ANR	1670320	AdditiveExpression	local_size - 8		1670194	0		-			
ANR	1670321	Identifier	local_size		1670194	0					
ANR	1670322	PrimaryExpression	8		1670194	1					
ANR	1670323	ExpressionStatement	"FAIL_IF ( LD ( RA , ADDR_TMP_mapped ) )"	1267:1:38710:38742	1670194	9	True				
ANR	1670324	CallExpression	"FAIL_IF ( LD ( RA , ADDR_TMP_mapped ) )"		1670194	0					
ANR	1670325	Callee	FAIL_IF		1670194	0					
ANR	1670326	Identifier	FAIL_IF		1670194	0					
ANR	1670327	ArgumentList	"LD ( RA , ADDR_TMP_mapped )"		1670194	1					
ANR	1670328	Argument	"LD ( RA , ADDR_TMP_mapped )"		1670194	0					
ANR	1670329	CallExpression	"LD ( RA , ADDR_TMP_mapped )"		1670194	0					
ANR	1670330	Callee	LD		1670194	0					
ANR	1670331	Identifier	LD		1670194	0					
ANR	1670332	ArgumentList	RA		1670194	1					
ANR	1670333	Argument	RA		1670194	0					
ANR	1670334	Identifier	RA		1670194	0					
ANR	1670335	Argument	ADDR_TMP_mapped		1670194	1					
ANR	1670336	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670337	IfStatement	if ( compiler -> saveds >= 5 )		1670194	10					
ANR	1670338	Condition	compiler -> saveds >= 5	1269:5:38750:38770	1670194	0	True				
ANR	1670339	RelationalExpression	compiler -> saveds >= 5		1670194	0		>=			
ANR	1670340	PtrMemberAccess	compiler -> saveds		1670194	0					
ANR	1670341	Identifier	compiler		1670194	0					
ANR	1670342	Identifier	saveds		1670194	1					
ANR	1670343	PrimaryExpression	5		1670194	1					
ANR	1670344	CompoundStatement		24:28:618:618	1670194	1					
ANR	1670345	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 48 ) )"	1270:2:38777:38831	1670194	0	True				
ANR	1670346	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 48 ) )"		1670194	0					
ANR	1670347	Callee	FAIL_IF		1670194	0					
ANR	1670348	Identifier	FAIL_IF		1670194	0					
ANR	1670349	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 48 )"		1670194	1					
ANR	1670350	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 48 )"		1670194	0					
ANR	1670351	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 48 )"		1670194	0					
ANR	1670352	Callee	ADDLI		1670194	0					
ANR	1670353	Identifier	ADDLI		1670194	0					
ANR	1670354	ArgumentList	ADDR_TMP_mapped		1670194	1					
ANR	1670355	Argument	ADDR_TMP_mapped		1670194	0					
ANR	1670356	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670357	Argument	base		1670194	1					
ANR	1670358	Identifier	base		1670194	0					
ANR	1670359	Argument	local_size - 48		1670194	2					
ANR	1670360	AdditiveExpression	local_size - 48		1670194	0		-			
ANR	1670361	Identifier	local_size		1670194	0					
ANR	1670362	PrimaryExpression	48		1670194	1					
ANR	1670363	ExpressionStatement	addr_initialized = 1	1271:2:38835:38855	1670194	1	True				
ANR	1670364	AssignmentExpression	addr_initialized = 1		1670194	0		=			
ANR	1670365	Identifier	addr_initialized		1670194	0					
ANR	1670366	PrimaryExpression	1		1670194	1					
ANR	1670367	ExpressionStatement	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_EREG2_mapped , ADDR_TMP_mapped , 8 ) )"	1273:2:38860:38921	1670194	2	True				
ANR	1670368	CallExpression	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_EREG2_mapped , ADDR_TMP_mapped , 8 ) )"		1670194	0					
ANR	1670369	Callee	FAIL_IF		1670194	0					
ANR	1670370	Identifier	FAIL_IF		1670194	0					
ANR	1670371	ArgumentList	"LD_ADD ( SLJIT_SAVED_EREG2_mapped , ADDR_TMP_mapped , 8 )"		1670194	1					
ANR	1670372	Argument	"LD_ADD ( SLJIT_SAVED_EREG2_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670373	CallExpression	"LD_ADD ( SLJIT_SAVED_EREG2_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670374	Callee	LD_ADD		1670194	0					
ANR	1670375	Identifier	LD_ADD		1670194	0					
ANR	1670376	ArgumentList	SLJIT_SAVED_EREG2_mapped		1670194	1					
ANR	1670377	Argument	SLJIT_SAVED_EREG2_mapped		1670194	0					
ANR	1670378	Identifier	SLJIT_SAVED_EREG2_mapped		1670194	0					
ANR	1670379	Argument	ADDR_TMP_mapped		1670194	1					
ANR	1670380	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670381	Argument	8		1670194	2					
ANR	1670382	PrimaryExpression	8		1670194	0					
ANR	1670383	IfStatement	if ( compiler -> saveds >= 4 )		1670194	11					
ANR	1670384	Condition	compiler -> saveds >= 4	1276:5:38932:38952	1670194	0	True				
ANR	1670385	RelationalExpression	compiler -> saveds >= 4		1670194	0		>=			
ANR	1670386	PtrMemberAccess	compiler -> saveds		1670194	0					
ANR	1670387	Identifier	compiler		1670194	0					
ANR	1670388	Identifier	saveds		1670194	1					
ANR	1670389	PrimaryExpression	4		1670194	1					
ANR	1670390	CompoundStatement		31:28:800:800	1670194	1					
ANR	1670391	IfStatement	if ( addr_initialized == 0 )		1670194	0					
ANR	1670392	Condition	addr_initialized == 0	1277:6:38963:38983	1670194	0	True				
ANR	1670393	EqualityExpression	addr_initialized == 0		1670194	0		==			
ANR	1670394	Identifier	addr_initialized		1670194	0					
ANR	1670395	PrimaryExpression	0		1670194	1					
ANR	1670396	CompoundStatement		32:29:831:831	1670194	1					
ANR	1670397	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 40 ) )"	1278:3:38991:39045	1670194	0	True				
ANR	1670398	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 40 ) )"		1670194	0					
ANR	1670399	Callee	FAIL_IF		1670194	0					
ANR	1670400	Identifier	FAIL_IF		1670194	0					
ANR	1670401	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 40 )"		1670194	1					
ANR	1670402	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 40 )"		1670194	0					
ANR	1670403	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 40 )"		1670194	0					
ANR	1670404	Callee	ADDLI		1670194	0					
ANR	1670405	Identifier	ADDLI		1670194	0					
ANR	1670406	ArgumentList	ADDR_TMP_mapped		1670194	1					
ANR	1670407	Argument	ADDR_TMP_mapped		1670194	0					
ANR	1670408	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670409	Argument	base		1670194	1					
ANR	1670410	Identifier	base		1670194	0					
ANR	1670411	Argument	local_size - 40		1670194	2					
ANR	1670412	AdditiveExpression	local_size - 40		1670194	0		-			
ANR	1670413	Identifier	local_size		1670194	0					
ANR	1670414	PrimaryExpression	40		1670194	1					
ANR	1670415	ExpressionStatement	addr_initialized = 1	1279:3:39050:39070	1670194	1	True				
ANR	1670416	AssignmentExpression	addr_initialized = 1		1670194	0		=			
ANR	1670417	Identifier	addr_initialized		1670194	0					
ANR	1670418	PrimaryExpression	1		1670194	1					
ANR	1670419	ExpressionStatement	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_EREG1_mapped , ADDR_TMP_mapped , 8 ) )"	1282:2:39079:39140	1670194	1	True				
ANR	1670420	CallExpression	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_EREG1_mapped , ADDR_TMP_mapped , 8 ) )"		1670194	0					
ANR	1670421	Callee	FAIL_IF		1670194	0					
ANR	1670422	Identifier	FAIL_IF		1670194	0					
ANR	1670423	ArgumentList	"LD_ADD ( SLJIT_SAVED_EREG1_mapped , ADDR_TMP_mapped , 8 )"		1670194	1					
ANR	1670424	Argument	"LD_ADD ( SLJIT_SAVED_EREG1_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670425	CallExpression	"LD_ADD ( SLJIT_SAVED_EREG1_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670426	Callee	LD_ADD		1670194	0					
ANR	1670427	Identifier	LD_ADD		1670194	0					
ANR	1670428	ArgumentList	SLJIT_SAVED_EREG1_mapped		1670194	1					
ANR	1670429	Argument	SLJIT_SAVED_EREG1_mapped		1670194	0					
ANR	1670430	Identifier	SLJIT_SAVED_EREG1_mapped		1670194	0					
ANR	1670431	Argument	ADDR_TMP_mapped		1670194	1					
ANR	1670432	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670433	Argument	8		1670194	2					
ANR	1670434	PrimaryExpression	8		1670194	0					
ANR	1670435	IfStatement	if ( compiler -> saveds >= 3 )		1670194	12					
ANR	1670436	Condition	compiler -> saveds >= 3	1285:5:39151:39171	1670194	0	True				
ANR	1670437	RelationalExpression	compiler -> saveds >= 3		1670194	0		>=			
ANR	1670438	PtrMemberAccess	compiler -> saveds		1670194	0					
ANR	1670439	Identifier	compiler		1670194	0					
ANR	1670440	Identifier	saveds		1670194	1					
ANR	1670441	PrimaryExpression	3		1670194	1					
ANR	1670442	CompoundStatement		40:28:1019:1019	1670194	1					
ANR	1670443	IfStatement	if ( addr_initialized == 0 )		1670194	0					
ANR	1670444	Condition	addr_initialized == 0	1286:6:39182:39202	1670194	0	True				
ANR	1670445	EqualityExpression	addr_initialized == 0		1670194	0		==			
ANR	1670446	Identifier	addr_initialized		1670194	0					
ANR	1670447	PrimaryExpression	0		1670194	1					
ANR	1670448	CompoundStatement		41:29:1050:1050	1670194	1					
ANR	1670449	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 32 ) )"	1287:3:39210:39264	1670194	0	True				
ANR	1670450	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 32 ) )"		1670194	0					
ANR	1670451	Callee	FAIL_IF		1670194	0					
ANR	1670452	Identifier	FAIL_IF		1670194	0					
ANR	1670453	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 32 )"		1670194	1					
ANR	1670454	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 32 )"		1670194	0					
ANR	1670455	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 32 )"		1670194	0					
ANR	1670456	Callee	ADDLI		1670194	0					
ANR	1670457	Identifier	ADDLI		1670194	0					
ANR	1670458	ArgumentList	ADDR_TMP_mapped		1670194	1					
ANR	1670459	Argument	ADDR_TMP_mapped		1670194	0					
ANR	1670460	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670461	Argument	base		1670194	1					
ANR	1670462	Identifier	base		1670194	0					
ANR	1670463	Argument	local_size - 32		1670194	2					
ANR	1670464	AdditiveExpression	local_size - 32		1670194	0		-			
ANR	1670465	Identifier	local_size		1670194	0					
ANR	1670466	PrimaryExpression	32		1670194	1					
ANR	1670467	ExpressionStatement	addr_initialized = 1	1288:3:39269:39289	1670194	1	True				
ANR	1670468	AssignmentExpression	addr_initialized = 1		1670194	0		=			
ANR	1670469	Identifier	addr_initialized		1670194	0					
ANR	1670470	PrimaryExpression	1		1670194	1					
ANR	1670471	ExpressionStatement	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_REG3_mapped , ADDR_TMP_mapped , 8 ) )"	1291:2:39298:39358	1670194	1	True				
ANR	1670472	CallExpression	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_REG3_mapped , ADDR_TMP_mapped , 8 ) )"		1670194	0					
ANR	1670473	Callee	FAIL_IF		1670194	0					
ANR	1670474	Identifier	FAIL_IF		1670194	0					
ANR	1670475	ArgumentList	"LD_ADD ( SLJIT_SAVED_REG3_mapped , ADDR_TMP_mapped , 8 )"		1670194	1					
ANR	1670476	Argument	"LD_ADD ( SLJIT_SAVED_REG3_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670477	CallExpression	"LD_ADD ( SLJIT_SAVED_REG3_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670478	Callee	LD_ADD		1670194	0					
ANR	1670479	Identifier	LD_ADD		1670194	0					
ANR	1670480	ArgumentList	SLJIT_SAVED_REG3_mapped		1670194	1					
ANR	1670481	Argument	SLJIT_SAVED_REG3_mapped		1670194	0					
ANR	1670482	Identifier	SLJIT_SAVED_REG3_mapped		1670194	0					
ANR	1670483	Argument	ADDR_TMP_mapped		1670194	1					
ANR	1670484	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670485	Argument	8		1670194	2					
ANR	1670486	PrimaryExpression	8		1670194	0					
ANR	1670487	IfStatement	if ( compiler -> saveds >= 2 )		1670194	13					
ANR	1670488	Condition	compiler -> saveds >= 2	1294:5:39369:39389	1670194	0	True				
ANR	1670489	RelationalExpression	compiler -> saveds >= 2		1670194	0		>=			
ANR	1670490	PtrMemberAccess	compiler -> saveds		1670194	0					
ANR	1670491	Identifier	compiler		1670194	0					
ANR	1670492	Identifier	saveds		1670194	1					
ANR	1670493	PrimaryExpression	2		1670194	1					
ANR	1670494	CompoundStatement		49:28:1237:1237	1670194	1					
ANR	1670495	IfStatement	if ( addr_initialized == 0 )		1670194	0					
ANR	1670496	Condition	addr_initialized == 0	1295:6:39400:39420	1670194	0	True				
ANR	1670497	EqualityExpression	addr_initialized == 0		1670194	0		==			
ANR	1670498	Identifier	addr_initialized		1670194	0					
ANR	1670499	PrimaryExpression	0		1670194	1					
ANR	1670500	CompoundStatement		50:29:1268:1268	1670194	1					
ANR	1670501	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 24 ) )"	1296:3:39428:39482	1670194	0	True				
ANR	1670502	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 24 ) )"		1670194	0					
ANR	1670503	Callee	FAIL_IF		1670194	0					
ANR	1670504	Identifier	FAIL_IF		1670194	0					
ANR	1670505	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 24 )"		1670194	1					
ANR	1670506	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 24 )"		1670194	0					
ANR	1670507	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 24 )"		1670194	0					
ANR	1670508	Callee	ADDLI		1670194	0					
ANR	1670509	Identifier	ADDLI		1670194	0					
ANR	1670510	ArgumentList	ADDR_TMP_mapped		1670194	1					
ANR	1670511	Argument	ADDR_TMP_mapped		1670194	0					
ANR	1670512	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670513	Argument	base		1670194	1					
ANR	1670514	Identifier	base		1670194	0					
ANR	1670515	Argument	local_size - 24		1670194	2					
ANR	1670516	AdditiveExpression	local_size - 24		1670194	0		-			
ANR	1670517	Identifier	local_size		1670194	0					
ANR	1670518	PrimaryExpression	24		1670194	1					
ANR	1670519	ExpressionStatement	addr_initialized = 1	1297:3:39487:39507	1670194	1	True				
ANR	1670520	AssignmentExpression	addr_initialized = 1		1670194	0		=			
ANR	1670521	Identifier	addr_initialized		1670194	0					
ANR	1670522	PrimaryExpression	1		1670194	1					
ANR	1670523	ExpressionStatement	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_REG2_mapped , ADDR_TMP_mapped , 8 ) )"	1300:2:39516:39576	1670194	1	True				
ANR	1670524	CallExpression	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_REG2_mapped , ADDR_TMP_mapped , 8 ) )"		1670194	0					
ANR	1670525	Callee	FAIL_IF		1670194	0					
ANR	1670526	Identifier	FAIL_IF		1670194	0					
ANR	1670527	ArgumentList	"LD_ADD ( SLJIT_SAVED_REG2_mapped , ADDR_TMP_mapped , 8 )"		1670194	1					
ANR	1670528	Argument	"LD_ADD ( SLJIT_SAVED_REG2_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670529	CallExpression	"LD_ADD ( SLJIT_SAVED_REG2_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670530	Callee	LD_ADD		1670194	0					
ANR	1670531	Identifier	LD_ADD		1670194	0					
ANR	1670532	ArgumentList	SLJIT_SAVED_REG2_mapped		1670194	1					
ANR	1670533	Argument	SLJIT_SAVED_REG2_mapped		1670194	0					
ANR	1670534	Identifier	SLJIT_SAVED_REG2_mapped		1670194	0					
ANR	1670535	Argument	ADDR_TMP_mapped		1670194	1					
ANR	1670536	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670537	Argument	8		1670194	2					
ANR	1670538	PrimaryExpression	8		1670194	0					
ANR	1670539	IfStatement	if ( compiler -> saveds >= 1 )		1670194	14					
ANR	1670540	Condition	compiler -> saveds >= 1	1303:5:39587:39607	1670194	0	True				
ANR	1670541	RelationalExpression	compiler -> saveds >= 1		1670194	0		>=			
ANR	1670542	PtrMemberAccess	compiler -> saveds		1670194	0					
ANR	1670543	Identifier	compiler		1670194	0					
ANR	1670544	Identifier	saveds		1670194	1					
ANR	1670545	PrimaryExpression	1		1670194	1					
ANR	1670546	CompoundStatement		58:28:1455:1455	1670194	1					
ANR	1670547	IfStatement	if ( addr_initialized == 0 )		1670194	0					
ANR	1670548	Condition	addr_initialized == 0	1304:6:39618:39638	1670194	0	True				
ANR	1670549	EqualityExpression	addr_initialized == 0		1670194	0		==			
ANR	1670550	Identifier	addr_initialized		1670194	0					
ANR	1670551	PrimaryExpression	0		1670194	1					
ANR	1670552	CompoundStatement		59:29:1486:1486	1670194	1					
ANR	1670553	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 16 ) )"	1305:3:39646:39700	1670194	0	True				
ANR	1670554	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , base , local_size - 16 ) )"		1670194	0					
ANR	1670555	Callee	FAIL_IF		1670194	0					
ANR	1670556	Identifier	FAIL_IF		1670194	0					
ANR	1670557	ArgumentList	"ADDLI ( ADDR_TMP_mapped , base , local_size - 16 )"		1670194	1					
ANR	1670558	Argument	"ADDLI ( ADDR_TMP_mapped , base , local_size - 16 )"		1670194	0					
ANR	1670559	CallExpression	"ADDLI ( ADDR_TMP_mapped , base , local_size - 16 )"		1670194	0					
ANR	1670560	Callee	ADDLI		1670194	0					
ANR	1670561	Identifier	ADDLI		1670194	0					
ANR	1670562	ArgumentList	ADDR_TMP_mapped		1670194	1					
ANR	1670563	Argument	ADDR_TMP_mapped		1670194	0					
ANR	1670564	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670565	Argument	base		1670194	1					
ANR	1670566	Identifier	base		1670194	0					
ANR	1670567	Argument	local_size - 16		1670194	2					
ANR	1670568	AdditiveExpression	local_size - 16		1670194	0		-			
ANR	1670569	Identifier	local_size		1670194	0					
ANR	1670570	PrimaryExpression	16		1670194	1					
ANR	1670571	ExpressionStatement	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_REG1_mapped , ADDR_TMP_mapped , 8 ) )"	1309:2:39784:39844	1670194	1	True				
ANR	1670572	CallExpression	"FAIL_IF ( LD_ADD ( SLJIT_SAVED_REG1_mapped , ADDR_TMP_mapped , 8 ) )"		1670194	0					
ANR	1670573	Callee	FAIL_IF		1670194	0					
ANR	1670574	Identifier	FAIL_IF		1670194	0					
ANR	1670575	ArgumentList	"LD_ADD ( SLJIT_SAVED_REG1_mapped , ADDR_TMP_mapped , 8 )"		1670194	1					
ANR	1670576	Argument	"LD_ADD ( SLJIT_SAVED_REG1_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670577	CallExpression	"LD_ADD ( SLJIT_SAVED_REG1_mapped , ADDR_TMP_mapped , 8 )"		1670194	0					
ANR	1670578	Callee	LD_ADD		1670194	0					
ANR	1670579	Identifier	LD_ADD		1670194	0					
ANR	1670580	ArgumentList	SLJIT_SAVED_REG1_mapped		1670194	1					
ANR	1670581	Argument	SLJIT_SAVED_REG1_mapped		1670194	0					
ANR	1670582	Identifier	SLJIT_SAVED_REG1_mapped		1670194	0					
ANR	1670583	Argument	ADDR_TMP_mapped		1670194	1					
ANR	1670584	Identifier	ADDR_TMP_mapped		1670194	0					
ANR	1670585	Argument	8		1670194	2					
ANR	1670586	PrimaryExpression	8		1670194	0					
ANR	1670587	IfStatement	if ( compiler -> local_size <= SIMM_16BIT_MAX )		1670194	15					
ANR	1670588	Condition	compiler -> local_size <= SIMM_16BIT_MAX	1312:5:39855:39892	1670194	0	True				
ANR	1670589	RelationalExpression	compiler -> local_size <= SIMM_16BIT_MAX		1670194	0		<=			
ANR	1670590	PtrMemberAccess	compiler -> local_size		1670194	0					
ANR	1670591	Identifier	compiler		1670194	0					
ANR	1670592	Identifier	local_size		1670194	1					
ANR	1670593	Identifier	SIMM_16BIT_MAX		1670194	1					
ANR	1670594	ExpressionStatement	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size ) )"	1313:2:39897:39983	1670194	1	True				
ANR	1670595	CallExpression	"FAIL_IF ( ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size ) )"		1670194	0					
ANR	1670596	Callee	FAIL_IF		1670194	0					
ANR	1670597	Identifier	FAIL_IF		1670194	0					
ANR	1670598	ArgumentList	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size )"		1670194	1					
ANR	1670599	Argument	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size )"		1670194	0					
ANR	1670600	CallExpression	"ADDLI ( SLJIT_LOCALS_REG_mapped , SLJIT_LOCALS_REG_mapped , compiler -> local_size )"		1670194	0					
ANR	1670601	Callee	ADDLI		1670194	0					
ANR	1670602	Identifier	ADDLI		1670194	0					
ANR	1670603	ArgumentList	SLJIT_LOCALS_REG_mapped		1670194	1					
ANR	1670604	Argument	SLJIT_LOCALS_REG_mapped		1670194	0					
ANR	1670605	Identifier	SLJIT_LOCALS_REG_mapped		1670194	0					
ANR	1670606	Argument	SLJIT_LOCALS_REG_mapped		1670194	1					
ANR	1670607	Identifier	SLJIT_LOCALS_REG_mapped		1670194	0					
ANR	1670608	Argument	compiler -> local_size		1670194	2					
ANR	1670609	PtrMemberAccess	compiler -> local_size		1670194	0					
ANR	1670610	Identifier	compiler		1670194	0					
ANR	1670611	Identifier	local_size		1670194	1					
ANR	1670612	ElseStatement	else		1670194	0					
ANR	1670613	ExpressionStatement	"FAIL_IF ( ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO ) )"	1315:2:39993:40053	1670194	0	True				
ANR	1670614	CallExpression	"FAIL_IF ( ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO ) )"		1670194	0					
ANR	1670615	Callee	FAIL_IF		1670194	0					
ANR	1670616	Identifier	FAIL_IF		1670194	0					
ANR	1670617	ArgumentList	"ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO )"		1670194	1					
ANR	1670618	Argument	"ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO )"		1670194	0					
ANR	1670619	CallExpression	"ADD ( SLJIT_LOCALS_REG_mapped , TMP_REG1_mapped , ZERO )"		1670194	0					
ANR	1670620	Callee	ADD		1670194	0					
ANR	1670621	Identifier	ADD		1670194	0					
ANR	1670622	ArgumentList	SLJIT_LOCALS_REG_mapped		1670194	1					
ANR	1670623	Argument	SLJIT_LOCALS_REG_mapped		1670194	0					
ANR	1670624	Identifier	SLJIT_LOCALS_REG_mapped		1670194	0					
ANR	1670625	Argument	TMP_REG1_mapped		1670194	1					
ANR	1670626	Identifier	TMP_REG1_mapped		1670194	0					
ANR	1670627	Argument	ZERO		1670194	2					
ANR	1670628	Identifier	ZERO		1670194	0					
ANR	1670629	ReturnStatement	return JR ( RA ) ;	1317:1:40057:40070	1670194	16	True				
ANR	1670630	CallExpression	JR ( RA )		1670194	0					
ANR	1670631	Callee	JR		1670194	0					
ANR	1670632	Identifier	JR		1670194	0					
ANR	1670633	ArgumentList	RA		1670194	1					
ANR	1670634	Argument	RA		1670194	0					
ANR	1670635	Identifier	RA		1670194	0					
ANR	1670636	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1670194	1					
ANR	1670637	Identifier	sljit_emit_return		1670194	2					
ANR	1670638	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1670194	3					
ANR	1670639	Parameter	struct sljit_compiler * compiler	1245:52:38079:38109	1670194	0	True				
ANR	1670640	ParameterType	struct sljit_compiler *		1670194	0					
ANR	1670641	Identifier	compiler		1670194	1					
ANR	1670642	Parameter	sljit_si op	1245:85:38112:38122	1670194	1	True				
ANR	1670643	ParameterType	sljit_si		1670194	0					
ANR	1670644	Identifier	op		1670194	1					
ANR	1670645	Parameter	sljit_si src	1245:98:38125:38136	1670194	2	True				
ANR	1670646	ParameterType	sljit_si		1670194	0					
ANR	1670647	Identifier	src		1670194	1					
ANR	1670648	Parameter	sljit_sw srcw	1245:112:38139:38151	1670194	3	True				
ANR	1670649	ParameterType	sljit_sw		1670194	0					
ANR	1670650	Identifier	srcw		1670194	1					
ANR	1670651	CFGEntryNode	ENTRY		1670194		True				
ANR	1670652	CFGExitNode	EXIT		1670194		True				
ANR	1670653	Symbol	ADD		1670194						
ANR	1670654	Symbol	ZERO		1670194						
ANR	1670655	Symbol	TMP_REG1_mapped		1670194						
ANR	1670656	Symbol	JR		1670194						
ANR	1670657	Symbol	* compiler		1670194						
ANR	1670658	Symbol	ADDLI		1670194						
ANR	1670659	Symbol	load_immediate		1670194						
ANR	1670660	Symbol	compiler		1670194						
ANR	1670661	Symbol	LD_ADD		1670194						
ANR	1670662	Symbol	op		1670194						
ANR	1670663	Symbol	local_size		1670194						
ANR	1670664	Symbol	src		1670194						
ANR	1670665	Symbol	SLJIT_SAVED_EREG2_mapped		1670194						
ANR	1670666	Symbol	SLJIT_SAVED_EREG1_mapped		1670194						
ANR	1670667	Symbol	srcw		1670194						
ANR	1670668	Symbol	RA		1670194						
ANR	1670669	Symbol	SLJIT_LOCALS_REG_mapped		1670194						
ANR	1670670	Symbol	compiler -> local_size		1670194						
ANR	1670671	Symbol	ADDR_TMP_mapped		1670194						
ANR	1670672	Symbol	compiler -> saveds		1670194						
ANR	1670673	Symbol	SIMM_16BIT_MAX		1670194						
ANR	1670674	Symbol	addr_initialized		1670194						
ANR	1670675	Symbol	LD		1670194						
ANR	1670676	Symbol	SLJIT_SAVED_REG2_mapped		1670194						
ANR	1670677	Symbol	emit_mov_before_return		1670194						
ANR	1670678	Symbol	SLJIT_SAVED_REG3_mapped		1670194						
ANR	1670679	Symbol	SLJIT_SAVED_REG1_mapped		1670194						
ANR	1670680	Symbol	base		1670194						
ANR	1670681	Function	getput_arg_fast	1323:0:40175:40871							
ANR	1670682	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw)"		1670681	0					
ANR	1670683	CompoundStatement		1324:0:40302:40871	1670681	0					
ANR	1670684	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1325:1:40305:40334	1670681	0	True				
ANR	1670685	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1670681	0					
ANR	1670686	Callee	SLJIT_ASSERT		1670681	0					
ANR	1670687	Identifier	SLJIT_ASSERT		1670681	0					
ANR	1670688	ArgumentList	arg & SLJIT_MEM		1670681	1					
ANR	1670689	Argument	arg & SLJIT_MEM		1670681	0					
ANR	1670690	BitAndExpression	arg & SLJIT_MEM		1670681	0		&			
ANR	1670691	Identifier	arg		1670681	0					
ANR	1670692	Identifier	SLJIT_MEM		1670681	1					
ANR	1670693	IfStatement	if ( ( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN )		1670681	1					
ANR	1670694	Condition	( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN	1327:5:40342:40466	1670681	0	True				
ANR	1670695	AndExpression	( ! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK ) ) && ! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1670681	0		&&			
ANR	1670696	OrExpression	! ( flags & WRITE_BACK ) || ! ( arg & REG_MASK )		1670681	0		||			
ANR	1670697	UnaryOperationExpression	! ( flags & WRITE_BACK )		1670681	0					
ANR	1670698	UnaryOperator	!		1670681	0					
ANR	1670699	BitAndExpression	flags & WRITE_BACK		1670681	1		&			
ANR	1670700	Identifier	flags		1670681	0					
ANR	1670701	Identifier	WRITE_BACK		1670681	1					
ANR	1670702	UnaryOperationExpression	! ( arg & REG_MASK )		1670681	1					
ANR	1670703	UnaryOperator	!		1670681	0					
ANR	1670704	BitAndExpression	arg & REG_MASK		1670681	1		&			
ANR	1670705	Identifier	arg		1670681	0					
ANR	1670706	Identifier	REG_MASK		1670681	1					
ANR	1670707	AndExpression	! ( arg & OFFS_REG_MASK ) && argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1670681	1		&&			
ANR	1670708	UnaryOperationExpression	! ( arg & OFFS_REG_MASK )		1670681	0					
ANR	1670709	UnaryOperator	!		1670681	0					
ANR	1670710	BitAndExpression	arg & OFFS_REG_MASK		1670681	1		&			
ANR	1670711	Identifier	arg		1670681	0					
ANR	1670712	Identifier	OFFS_REG_MASK		1670681	1					
ANR	1670713	AndExpression	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1670681	1		&&			
ANR	1670714	RelationalExpression	argw <= SIMM_16BIT_MAX		1670681	0		<=			
ANR	1670715	Identifier	argw		1670681	0					
ANR	1670716	Identifier	SIMM_16BIT_MAX		1670681	1					
ANR	1670717	RelationalExpression	argw >= SIMM_16BIT_MIN		1670681	1		>=			
ANR	1670718	Identifier	argw		1670681	0					
ANR	1670719	Identifier	SIMM_16BIT_MIN		1670681	1					
ANR	1670720	CompoundStatement		5:82:166:166	1670681	1					
ANR	1670721	IfStatement	if ( SLJIT_UNLIKELY ( flags & ARG_TEST ) )		1670681	0					
ANR	1670722	Condition	SLJIT_UNLIKELY ( flags & ARG_TEST )	1330:6:40533:40564	1670681	0	True				
ANR	1670723	CallExpression	SLJIT_UNLIKELY ( flags & ARG_TEST )		1670681	0					
ANR	1670724	Callee	SLJIT_UNLIKELY		1670681	0					
ANR	1670725	Identifier	SLJIT_UNLIKELY		1670681	0					
ANR	1670726	ArgumentList	flags & ARG_TEST		1670681	1					
ANR	1670727	Argument	flags & ARG_TEST		1670681	0					
ANR	1670728	BitAndExpression	flags & ARG_TEST		1670681	0		&			
ANR	1670729	Identifier	flags		1670681	0					
ANR	1670730	Identifier	ARG_TEST		1670681	1					
ANR	1670731	ReturnStatement	return 1 ;	1331:3:40570:40578	1670681	1	True				
ANR	1670732	PrimaryExpression	1		1670681	0					
ANR	1670733	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw ) )"	1333:2:40583:40645	1670681	1	True				
ANR	1670734	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw ) )"		1670681	0					
ANR	1670735	Callee	FAIL_IF		1670681	0					
ANR	1670736	Identifier	FAIL_IF		1670681	0					
ANR	1670737	ArgumentList	"ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw )"		1670681	1					
ANR	1670738	Argument	"ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw )"		1670681	0					
ANR	1670739	CallExpression	"ADDLI ( ADDR_TMP_mapped , reg_map [ arg & REG_MASK ] , argw )"		1670681	0					
ANR	1670740	Callee	ADDLI		1670681	0					
ANR	1670741	Identifier	ADDLI		1670681	0					
ANR	1670742	ArgumentList	ADDR_TMP_mapped		1670681	1					
ANR	1670743	Argument	ADDR_TMP_mapped		1670681	0					
ANR	1670744	Identifier	ADDR_TMP_mapped		1670681	0					
ANR	1670745	Argument	reg_map [ arg & REG_MASK ]		1670681	1					
ANR	1670746	ArrayIndexing	reg_map [ arg & REG_MASK ]		1670681	0					
ANR	1670747	Identifier	reg_map		1670681	0					
ANR	1670748	BitAndExpression	arg & REG_MASK		1670681	1		&			
ANR	1670749	Identifier	arg		1670681	0					
ANR	1670750	Identifier	REG_MASK		1670681	1					
ANR	1670751	Argument	argw		1670681	2					
ANR	1670752	Identifier	argw		1670681	0					
ANR	1670753	IfStatement	if ( flags & LOAD_DATA )		1670681	2					
ANR	1670754	Condition	flags & LOAD_DATA	1335:6:40654:40670	1670681	0	True				
ANR	1670755	BitAndExpression	flags & LOAD_DATA		1670681	0		&			
ANR	1670756	Identifier	flags		1670681	0					
ANR	1670757	Identifier	LOAD_DATA		1670681	1					
ANR	1670758	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"	1336:3:40676:40752	1670681	1	True				
ANR	1670759	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"		1670681	0					
ANR	1670760	Callee	FAIL_IF		1670681	0					
ANR	1670761	Identifier	FAIL_IF		1670681	0					
ANR	1670762	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1670681	1					
ANR	1670763	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1670681	0					
ANR	1670764	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1670681	0					
ANR	1670765	Callee	PB2		1670681	0					
ANR	1670766	Identifier	PB2		1670681	0					
ANR	1670767	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670681	1					
ANR	1670768	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670681	0					
ANR	1670769	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670681	0					
ANR	1670770	Identifier	data_transfer_insts		1670681	0					
ANR	1670771	BitAndExpression	flags & MEM_MASK		1670681	1		&			
ANR	1670772	Identifier	flags		1670681	0					
ANR	1670773	Identifier	MEM_MASK		1670681	1					
ANR	1670774	Argument	reg_ar		1670681	1					
ANR	1670775	Identifier	reg_ar		1670681	0					
ANR	1670776	Argument	ADDR_TMP_mapped		1670681	2					
ANR	1670777	Identifier	ADDR_TMP_mapped		1670681	0					
ANR	1670778	ElseStatement	else		1670681	0					
ANR	1670779	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"	1338:3:40764:40840	1670681	0	True				
ANR	1670780	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"		1670681	0					
ANR	1670781	Callee	FAIL_IF		1670681	0					
ANR	1670782	Identifier	FAIL_IF		1670681	0					
ANR	1670783	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1670681	1					
ANR	1670784	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1670681	0					
ANR	1670785	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1670681	0					
ANR	1670786	Callee	PB2		1670681	0					
ANR	1670787	Identifier	PB2		1670681	0					
ANR	1670788	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670681	1					
ANR	1670789	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670681	0					
ANR	1670790	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670681	0					
ANR	1670791	Identifier	data_transfer_insts		1670681	0					
ANR	1670792	BitAndExpression	flags & MEM_MASK		1670681	1		&			
ANR	1670793	Identifier	flags		1670681	0					
ANR	1670794	Identifier	MEM_MASK		1670681	1					
ANR	1670795	Argument	ADDR_TMP_mapped		1670681	1					
ANR	1670796	Identifier	ADDR_TMP_mapped		1670681	0					
ANR	1670797	Argument	reg_ar		1670681	2					
ANR	1670798	Identifier	reg_ar		1670681	0					
ANR	1670799	ReturnStatement	return - 1 ;	1340:2:40845:40854	1670681	3	True				
ANR	1670800	UnaryOperationExpression	- 1		1670681	0					
ANR	1670801	UnaryOperator	-		1670681	0					
ANR	1670802	PrimaryExpression	1		1670681	1					
ANR	1670803	ReturnStatement	return 0 ;	1343:1:40861:40869	1670681	2	True				
ANR	1670804	PrimaryExpression	0		1670681	0					
ANR	1670805	ReturnType	static sljit_si		1670681	1					
ANR	1670806	Identifier	getput_arg_fast		1670681	2					
ANR	1670807	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw"		1670681	3					
ANR	1670808	Parameter	struct sljit_compiler * compiler	1323:32:40207:40237	1670681	0	True				
ANR	1670809	ParameterType	struct sljit_compiler *		1670681	0					
ANR	1670810	Identifier	compiler		1670681	1					
ANR	1670811	Parameter	sljit_si flags	1323:65:40240:40253	1670681	1	True				
ANR	1670812	ParameterType	sljit_si		1670681	0					
ANR	1670813	Identifier	flags		1670681	1					
ANR	1670814	Parameter	sljit_si reg_ar	1323:81:40256:40270	1670681	2	True				
ANR	1670815	ParameterType	sljit_si		1670681	0					
ANR	1670816	Identifier	reg_ar		1670681	1					
ANR	1670817	Parameter	sljit_si arg	1323:98:40273:40284	1670681	3	True				
ANR	1670818	ParameterType	sljit_si		1670681	0					
ANR	1670819	Identifier	arg		1670681	1					
ANR	1670820	Parameter	sljit_sw argw	1323:112:40287:40299	1670681	4	True				
ANR	1670821	ParameterType	sljit_sw		1670681	0					
ANR	1670822	Identifier	argw		1670681	1					
ANR	1670823	CFGEntryNode	ENTRY		1670681		True				
ANR	1670824	CFGExitNode	EXIT		1670681		True				
ANR	1670825	Symbol	PB2		1670681						
ANR	1670826	Symbol	SIMM_16BIT_MIN		1670681						
ANR	1670827	Symbol	* REG_MASK		1670681						
ANR	1670828	Symbol	LOAD_DATA		1670681						
ANR	1670829	Symbol	SLJIT_MEM		1670681						
ANR	1670830	Symbol	flags		1670681						
ANR	1670831	Symbol	reg_map		1670681						
ANR	1670832	Symbol	* MEM_MASK		1670681						
ANR	1670833	Symbol	argw		1670681						
ANR	1670834	Symbol	ADDLI		1670681						
ANR	1670835	Symbol	ARG_TEST		1670681						
ANR	1670836	Symbol	arg		1670681						
ANR	1670837	Symbol	compiler		1670681						
ANR	1670838	Symbol	WRITE_BACK		1670681						
ANR	1670839	Symbol	* flags		1670681						
ANR	1670840	Symbol	REG_MASK		1670681						
ANR	1670841	Symbol	OFFS_REG_MASK		1670681						
ANR	1670842	Symbol	* reg_map		1670681						
ANR	1670843	Symbol	data_transfer_insts		1670681						
ANR	1670844	Symbol	* data_transfer_insts		1670681						
ANR	1670845	Symbol	ADDR_TMP_mapped		1670681						
ANR	1670846	Symbol	SIMM_16BIT_MAX		1670681						
ANR	1670847	Symbol	MEM_MASK		1670681						
ANR	1670848	Symbol	reg_ar		1670681						
ANR	1670849	Symbol	SLJIT_UNLIKELY		1670681						
ANR	1670850	Symbol	* arg		1670681						
ANR	1670851	Function	can_cache	1349:0:41024:41585							
ANR	1670852	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1670851	0					
ANR	1670853	CompoundStatement		1350:0:41118:41585	1670851	0					
ANR	1670854	ExpressionStatement	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )	1351:1:41121:41178	1670851	0	True				
ANR	1670855	CallExpression	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )		1670851	0					
ANR	1670856	Callee	SLJIT_ASSERT		1670851	0					
ANR	1670857	Identifier	SLJIT_ASSERT		1670851	0					
ANR	1670858	ArgumentList	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1670851	1					
ANR	1670859	Argument	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1670851	0					
ANR	1670860	AndExpression	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1670851	0		&&			
ANR	1670861	BitAndExpression	arg & SLJIT_MEM		1670851	0		&			
ANR	1670862	Identifier	arg		1670851	0					
ANR	1670863	Identifier	SLJIT_MEM		1670851	1					
ANR	1670864	BitAndExpression	next_arg & SLJIT_MEM		1670851	1		&			
ANR	1670865	Identifier	next_arg		1670851	0					
ANR	1670866	Identifier	SLJIT_MEM		1670851	1					
ANR	1670867	IfStatement	if ( arg & OFFS_REG_MASK )		1670851	1					
ANR	1670868	Condition	arg & OFFS_REG_MASK	1354:5:41230:41248	1670851	0	True				
ANR	1670869	BitAndExpression	arg & OFFS_REG_MASK		1670851	0		&			
ANR	1670870	Identifier	arg		1670851	0					
ANR	1670871	Identifier	OFFS_REG_MASK		1670851	1					
ANR	1670872	CompoundStatement		5:26:132:132	1670851	1					
ANR	1670873	ExpressionStatement	argw &= 0x3	1355:2:41255:41266	1670851	0	True				
ANR	1670874	AssignmentExpression	argw &= 0x3		1670851	0		&=			
ANR	1670875	Identifier	argw		1670851	0					
ANR	1670876	PrimaryExpression	0x3		1670851	1					
ANR	1670877	ExpressionStatement	next_argw &= 0x3	1356:2:41270:41286	1670851	1	True				
ANR	1670878	AssignmentExpression	next_argw &= 0x3		1670851	0		&=			
ANR	1670879	Identifier	next_argw		1670851	0					
ANR	1670880	PrimaryExpression	0x3		1670851	1					
ANR	1670881	IfStatement	if ( argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) ) )		1670851	2					
ANR	1670882	Condition	argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )	1357:6:41294:41398	1670851	0	True				
ANR	1670883	AndExpression	argw && argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )		1670851	0		&&			
ANR	1670884	Identifier	argw		1670851	0					
ANR	1670885	AndExpression	argw == next_argw && ( arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) )		1670851	1		&&			
ANR	1670886	EqualityExpression	argw == next_argw		1670851	0		==			
ANR	1670887	Identifier	argw		1670851	0					
ANR	1670888	Identifier	next_argw		1670851	1					
ANR	1670889	OrExpression	arg == next_arg || ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1670851	1		||			
ANR	1670890	EqualityExpression	arg == next_arg		1670851	0		==			
ANR	1670891	Identifier	arg		1670851	0					
ANR	1670892	Identifier	next_arg		1670851	1					
ANR	1670893	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1670851	1		==			
ANR	1670894	BitAndExpression	arg & OFFS_REG_MASK		1670851	0		&			
ANR	1670895	Identifier	arg		1670851	0					
ANR	1670896	Identifier	OFFS_REG_MASK		1670851	1					
ANR	1670897	BitAndExpression	next_arg & OFFS_REG_MASK		1670851	1		&			
ANR	1670898	Identifier	next_arg		1670851	0					
ANR	1670899	Identifier	OFFS_REG_MASK		1670851	1					
ANR	1670900	ReturnStatement	return 1 ;	1359:3:41404:41412	1670851	1	True				
ANR	1670901	PrimaryExpression	1		1670851	0					
ANR	1670902	ReturnStatement	return 0 ;	1360:2:41416:41424	1670851	3	True				
ANR	1670903	PrimaryExpression	0		1670851	0					
ANR	1670904	IfStatement	if ( arg == next_arg )		1670851	2					
ANR	1670905	Condition	arg == next_arg	1363:5:41435:41449	1670851	0	True				
ANR	1670906	EqualityExpression	arg == next_arg		1670851	0		==			
ANR	1670907	Identifier	arg		1670851	0					
ANR	1670908	Identifier	next_arg		1670851	1					
ANR	1670909	CompoundStatement		14:22:333:333	1670851	1					
ANR	1670910	IfStatement	if ( ( ( next_argw - argw ) <= SIMM_16BIT_MAX && ( next_argw - argw ) >= SIMM_16BIT_MIN ) )		1670851	0					
ANR	1670911	Condition	( next_argw - argw ) <= SIMM_16BIT_MAX && ( next_argw - argw ) >= SIMM_16BIT_MIN	1364:6:41460:41541	1670851	0	True				
ANR	1670912	AndExpression	( next_argw - argw ) <= SIMM_16BIT_MAX && ( next_argw - argw ) >= SIMM_16BIT_MIN		1670851	0		&&			
ANR	1670913	RelationalExpression	( next_argw - argw ) <= SIMM_16BIT_MAX		1670851	0		<=			
ANR	1670914	AdditiveExpression	next_argw - argw		1670851	0		-			
ANR	1670915	Identifier	next_argw		1670851	0					
ANR	1670916	Identifier	argw		1670851	1					
ANR	1670917	Identifier	SIMM_16BIT_MAX		1670851	1					
ANR	1670918	RelationalExpression	( next_argw - argw ) >= SIMM_16BIT_MIN		1670851	1		>=			
ANR	1670919	AdditiveExpression	next_argw - argw		1670851	0		-			
ANR	1670920	Identifier	next_argw		1670851	0					
ANR	1670921	Identifier	argw		1670851	1					
ANR	1670922	Identifier	SIMM_16BIT_MIN		1670851	1					
ANR	1670923	ReturnStatement	return 1 ;	1366:3:41547:41555	1670851	1	True				
ANR	1670924	PrimaryExpression	1		1670851	0					
ANR	1670925	ReturnStatement	return 0 ;	1368:2:41560:41568	1670851	1	True				
ANR	1670926	PrimaryExpression	0		1670851	0					
ANR	1670927	ReturnStatement	return 0 ;	1371:1:41575:41583	1670851	3	True				
ANR	1670928	PrimaryExpression	0		1670851	0					
ANR	1670929	ReturnType	static sljit_si		1670851	1					
ANR	1670930	Identifier	can_cache		1670851	2					
ANR	1670931	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1670851	3					
ANR	1670932	Parameter	sljit_si arg	1349:26:41050:41061	1670851	0	True				
ANR	1670933	ParameterType	sljit_si		1670851	0					
ANR	1670934	Identifier	arg		1670851	1					
ANR	1670935	Parameter	sljit_sw argw	1349:40:41064:41076	1670851	1	True				
ANR	1670936	ParameterType	sljit_sw		1670851	0					
ANR	1670937	Identifier	argw		1670851	1					
ANR	1670938	Parameter	sljit_si next_arg	1349:55:41079:41095	1670851	2	True				
ANR	1670939	ParameterType	sljit_si		1670851	0					
ANR	1670940	Identifier	next_arg		1670851	1					
ANR	1670941	Parameter	sljit_sw next_argw	1349:74:41098:41115	1670851	3	True				
ANR	1670942	ParameterType	sljit_sw		1670851	0					
ANR	1670943	Identifier	next_argw		1670851	1					
ANR	1670944	CFGEntryNode	ENTRY		1670851		True				
ANR	1670945	CFGExitNode	EXIT		1670851		True				
ANR	1670946	Symbol	next_arg		1670851						
ANR	1670947	Symbol	SIMM_16BIT_MIN		1670851						
ANR	1670948	Symbol	SIMM_16BIT_MAX		1670851						
ANR	1670949	Symbol	SLJIT_MEM		1670851						
ANR	1670950	Symbol	arg		1670851						
ANR	1670951	Symbol	OFFS_REG_MASK		1670851						
ANR	1670952	Symbol	next_argw		1670851						
ANR	1670953	Symbol	argw		1670851						
ANR	1670954	Function	getput_arg	1375:0:41648:48152							
ANR	1670955	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1670954	0					
ANR	1670956	CompoundStatement		1376:0:41809:48152	1670954	0					
ANR	1670957	IdentifierDeclStatement	"sljit_si tmp_ar , base ;"	1377:1:41812:41833	1670954	0	True				
ANR	1670958	IdentifierDecl	tmp_ar		1670954	0					
ANR	1670959	IdentifierDeclType	sljit_si		1670954	0					
ANR	1670960	Identifier	tmp_ar		1670954	1					
ANR	1670961	IdentifierDecl	base		1670954	1					
ANR	1670962	IdentifierDeclType	sljit_si		1670954	0					
ANR	1670963	Identifier	base		1670954	1					
ANR	1670964	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1379:1:41837:41866	1670954	1	True				
ANR	1670965	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1670954	0					
ANR	1670966	Callee	SLJIT_ASSERT		1670954	0					
ANR	1670967	Identifier	SLJIT_ASSERT		1670954	0					
ANR	1670968	ArgumentList	arg & SLJIT_MEM		1670954	1					
ANR	1670969	Argument	arg & SLJIT_MEM		1670954	0					
ANR	1670970	BitAndExpression	arg & SLJIT_MEM		1670954	0		&			
ANR	1670971	Identifier	arg		1670954	0					
ANR	1670972	Identifier	SLJIT_MEM		1670954	1					
ANR	1670973	IfStatement	if ( ! ( next_arg & SLJIT_MEM ) )		1670954	2					
ANR	1670974	Condition	! ( next_arg & SLJIT_MEM )	1380:5:41873:41895	1670954	0	True				
ANR	1670975	UnaryOperationExpression	! ( next_arg & SLJIT_MEM )		1670954	0					
ANR	1670976	UnaryOperator	!		1670954	0					
ANR	1670977	BitAndExpression	next_arg & SLJIT_MEM		1670954	1		&			
ANR	1670978	Identifier	next_arg		1670954	0					
ANR	1670979	Identifier	SLJIT_MEM		1670954	1					
ANR	1670980	CompoundStatement		5:30:88:88	1670954	1					
ANR	1670981	ExpressionStatement	next_arg = 0	1381:2:41902:41914	1670954	0	True				
ANR	1670982	AssignmentExpression	next_arg = 0		1670954	0		=			
ANR	1670983	Identifier	next_arg		1670954	0					
ANR	1670984	PrimaryExpression	0		1670954	1					
ANR	1670985	ExpressionStatement	next_argw = 0	1382:2:41918:41931	1670954	1	True				
ANR	1670986	AssignmentExpression	next_argw = 0		1670954	0		=			
ANR	1670987	Identifier	next_argw		1670954	0					
ANR	1670988	PrimaryExpression	0		1670954	1					
ANR	1670989	IfStatement	if ( ( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA ) )		1670954	3					
ANR	1670990	Condition	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )	1385:5:41942:41993	1670954	0	True				
ANR	1670991	AndExpression	( flags & MEM_MASK ) <= GPR_REG && ( flags & LOAD_DATA )		1670954	0		&&			
ANR	1670992	RelationalExpression	( flags & MEM_MASK ) <= GPR_REG		1670954	0		<=			
ANR	1670993	BitAndExpression	flags & MEM_MASK		1670954	0		&			
ANR	1670994	Identifier	flags		1670954	0					
ANR	1670995	Identifier	MEM_MASK		1670954	1					
ANR	1670996	Identifier	GPR_REG		1670954	1					
ANR	1670997	BitAndExpression	flags & LOAD_DATA		1670954	1		&			
ANR	1670998	Identifier	flags		1670954	0					
ANR	1670999	Identifier	LOAD_DATA		1670954	1					
ANR	1671000	ExpressionStatement	tmp_ar = reg_ar	1386:2:41998:42013	1670954	1	True				
ANR	1671001	AssignmentExpression	tmp_ar = reg_ar		1670954	0		=			
ANR	1671002	Identifier	tmp_ar		1670954	0					
ANR	1671003	Identifier	reg_ar		1670954	1					
ANR	1671004	ElseStatement	else		1670954	0					
ANR	1671005	ExpressionStatement	tmp_ar = TMP_REG1_mapped	1388:2:42023:42047	1670954	0	True				
ANR	1671006	AssignmentExpression	tmp_ar = TMP_REG1_mapped		1670954	0		=			
ANR	1671007	Identifier	tmp_ar		1670954	0					
ANR	1671008	Identifier	TMP_REG1_mapped		1670954	1					
ANR	1671009	ExpressionStatement	base = arg & REG_MASK	1390:1:42051:42072	1670954	4	True				
ANR	1671010	AssignmentExpression	base = arg & REG_MASK		1670954	0		=			
ANR	1671011	Identifier	base		1670954	0					
ANR	1671012	BitAndExpression	arg & REG_MASK		1670954	1		&			
ANR	1671013	Identifier	arg		1670954	0					
ANR	1671014	Identifier	REG_MASK		1670954	1					
ANR	1671015	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1670954	5					
ANR	1671016	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	1392:5:42080:42114	1670954	0	True				
ANR	1671017	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1670954	0					
ANR	1671018	Callee	SLJIT_UNLIKELY		1670954	0					
ANR	1671019	Identifier	SLJIT_UNLIKELY		1670954	0					
ANR	1671020	ArgumentList	arg & OFFS_REG_MASK		1670954	1					
ANR	1671021	Argument	arg & OFFS_REG_MASK		1670954	0					
ANR	1671022	BitAndExpression	arg & OFFS_REG_MASK		1670954	0		&			
ANR	1671023	Identifier	arg		1670954	0					
ANR	1671024	Identifier	OFFS_REG_MASK		1670954	1					
ANR	1671025	CompoundStatement		17:42:307:307	1670954	1					
ANR	1671026	ExpressionStatement	argw &= 0x3	1393:2:42121:42132	1670954	0	True				
ANR	1671027	AssignmentExpression	argw &= 0x3		1670954	0		&=			
ANR	1671028	Identifier	argw		1670954	0					
ANR	1671029	PrimaryExpression	0x3		1670954	1					
ANR	1671030	IfStatement	if ( ( flags & WRITE_BACK ) && reg_ar == reg_map [ base ] )		1670954	1					
ANR	1671031	Condition	( flags & WRITE_BACK ) && reg_ar == reg_map [ base ]	1395:6:42141:42187	1670954	0	True				
ANR	1671032	AndExpression	( flags & WRITE_BACK ) && reg_ar == reg_map [ base ]		1670954	0		&&			
ANR	1671033	BitAndExpression	flags & WRITE_BACK		1670954	0		&			
ANR	1671034	Identifier	flags		1670954	0					
ANR	1671035	Identifier	WRITE_BACK		1670954	1					
ANR	1671036	EqualityExpression	reg_ar == reg_map [ base ]		1670954	1		==			
ANR	1671037	Identifier	reg_ar		1670954	0					
ANR	1671038	ArrayIndexing	reg_map [ base ]		1670954	1					
ANR	1671039	Identifier	reg_map		1670954	0					
ANR	1671040	Identifier	base		1670954	1					
ANR	1671041	CompoundStatement		20:55:380:380	1670954	1					
ANR	1671042	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar )	1396:3:42195:42260	1670954	0	True				
ANR	1671043	CallExpression	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar )		1670954	0					
ANR	1671044	Callee	SLJIT_ASSERT		1670954	0					
ANR	1671045	Identifier	SLJIT_ASSERT		1670954	0					
ANR	1671046	ArgumentList	! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar		1670954	1					
ANR	1671047	Argument	! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar		1670954	0					
ANR	1671048	AndExpression	! ( flags & LOAD_DATA ) && reg_map [ TMP_REG1 ] != reg_ar		1670954	0		&&			
ANR	1671049	UnaryOperationExpression	! ( flags & LOAD_DATA )		1670954	0					
ANR	1671050	UnaryOperator	!		1670954	0					
ANR	1671051	BitAndExpression	flags & LOAD_DATA		1670954	1		&			
ANR	1671052	Identifier	flags		1670954	0					
ANR	1671053	Identifier	LOAD_DATA		1670954	1					
ANR	1671054	EqualityExpression	reg_map [ TMP_REG1 ] != reg_ar		1670954	1		!=			
ANR	1671055	ArrayIndexing	reg_map [ TMP_REG1 ]		1670954	0					
ANR	1671056	Identifier	reg_map		1670954	0					
ANR	1671057	Identifier	TMP_REG1		1670954	1					
ANR	1671058	Identifier	reg_ar		1670954	1					
ANR	1671059	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"	1397:3:42265:42308	1670954	1	True				
ANR	1671060	CallExpression	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"		1670954	0					
ANR	1671061	Callee	FAIL_IF		1670954	0					
ANR	1671062	Identifier	FAIL_IF		1670954	0					
ANR	1671063	ArgumentList	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1670954	1					
ANR	1671064	Argument	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1670954	0					
ANR	1671065	CallExpression	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1670954	0					
ANR	1671066	Callee	ADD		1670954	0					
ANR	1671067	Identifier	ADD		1670954	0					
ANR	1671068	ArgumentList	TMP_REG1_mapped		1670954	1					
ANR	1671069	Argument	TMP_REG1_mapped		1670954	0					
ANR	1671070	Identifier	TMP_REG1_mapped		1670954	0					
ANR	1671071	Argument	reg_ar		1670954	1					
ANR	1671072	Identifier	reg_ar		1670954	0					
ANR	1671073	Argument	ZERO		1670954	2					
ANR	1671074	Identifier	ZERO		1670954	0					
ANR	1671075	ExpressionStatement	reg_ar = TMP_REG1_mapped	1398:3:42313:42337	1670954	2	True				
ANR	1671076	AssignmentExpression	reg_ar = TMP_REG1_mapped		1670954	0		=			
ANR	1671077	Identifier	reg_ar		1670954	0					
ANR	1671078	Identifier	TMP_REG1_mapped		1670954	1					
ANR	1671079	IfStatement	if ( argw == compiler -> cache_argw )		1670954	2					
ANR	1671080	Condition	argw == compiler -> cache_argw	1402:6:42375:42402	1670954	0	True				
ANR	1671081	EqualityExpression	argw == compiler -> cache_argw		1670954	0		==			
ANR	1671082	Identifier	argw		1670954	0					
ANR	1671083	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671084	Identifier	compiler		1670954	0					
ANR	1671085	Identifier	cache_argw		1670954	1					
ANR	1671086	CompoundStatement		27:36:595:595	1670954	1					
ANR	1671087	IfStatement	if ( ! ( flags & WRITE_BACK ) )		1670954	0					
ANR	1671088	Condition	! ( flags & WRITE_BACK )	1403:7:42414:42434	1670954	0	True				
ANR	1671089	UnaryOperationExpression	! ( flags & WRITE_BACK )		1670954	0					
ANR	1671090	UnaryOperator	!		1670954	0					
ANR	1671091	BitAndExpression	flags & WRITE_BACK		1670954	1		&			
ANR	1671092	Identifier	flags		1670954	0					
ANR	1671093	Identifier	WRITE_BACK		1670954	1					
ANR	1671094	CompoundStatement		28:30:627:627	1670954	1					
ANR	1671095	IfStatement	if ( arg == compiler -> cache_arg )		1670954	0					
ANR	1671096	Condition	arg == compiler -> cache_arg	1404:8:42447:42472	1670954	0	True				
ANR	1671097	EqualityExpression	arg == compiler -> cache_arg		1670954	0		==			
ANR	1671098	Identifier	arg		1670954	0					
ANR	1671099	PtrMemberAccess	compiler -> cache_arg		1670954	1					
ANR	1671100	Identifier	compiler		1670954	0					
ANR	1671101	Identifier	cache_arg		1670954	1					
ANR	1671102	CompoundStatement		29:36:665:665	1670954	1					
ANR	1671103	IfStatement	if ( flags & LOAD_DATA )		1670954	0					
ANR	1671104	Condition	flags & LOAD_DATA	1405:9:42486:42502	1670954	0	True				
ANR	1671105	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671106	Identifier	flags		1670954	0					
ANR	1671107	Identifier	LOAD_DATA		1670954	1					
ANR	1671108	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1406:6:42511:42585	1670954	1	True				
ANR	1671109	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1670954	0					
ANR	1671110	Callee	PB2		1670954	0					
ANR	1671111	Identifier	PB2		1670954	0					
ANR	1671112	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671113	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671114	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671115	Identifier	data_transfer_insts		1670954	0					
ANR	1671116	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671117	Identifier	flags		1670954	0					
ANR	1671118	Identifier	MEM_MASK		1670954	1					
ANR	1671119	Argument	reg_ar		1670954	1					
ANR	1671120	Identifier	reg_ar		1670954	0					
ANR	1671121	Argument	TMP_REG3_mapped		1670954	2					
ANR	1671122	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671123	ElseStatement	else		1670954	0					
ANR	1671124	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1408:6:42603:42677	1670954	0	True				
ANR	1671125	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1670954	0					
ANR	1671126	Callee	PB2		1670954	0					
ANR	1671127	Identifier	PB2		1670954	0					
ANR	1671128	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671129	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671130	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671131	Identifier	data_transfer_insts		1670954	0					
ANR	1671132	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671133	Identifier	flags		1670954	0					
ANR	1671134	Identifier	MEM_MASK		1670954	1					
ANR	1671135	Argument	TMP_REG3_mapped		1670954	1					
ANR	1671136	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671137	Argument	reg_ar		1670954	2					
ANR	1671138	Identifier	reg_ar		1670954	0					
ANR	1671139	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg )		1670954	1					
ANR	1671140	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg	1411:8:42694:42751	1670954	0	True				
ANR	1671141	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1670954	0		==			
ANR	1671142	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1670954	0		|			
ANR	1671143	Identifier	SLJIT_MEM		1670954	0					
ANR	1671144	BitAndExpression	arg & OFFS_REG_MASK		1670954	1		&			
ANR	1671145	Identifier	arg		1670954	0					
ANR	1671146	Identifier	OFFS_REG_MASK		1670954	1					
ANR	1671147	PtrMemberAccess	compiler -> cache_arg		1670954	1					
ANR	1671148	Identifier	compiler		1670954	0					
ANR	1671149	Identifier	cache_arg		1670954	1					
ANR	1671150	CompoundStatement		36:68:944:944	1670954	1					
ANR	1671151	IfStatement	if ( arg == next_arg && argw == ( next_argw & 0x3 ) )		1670954	0					
ANR	1671152	Condition	arg == next_arg && argw == ( next_argw & 0x3 )	1412:9:42765:42808	1670954	0	True				
ANR	1671153	AndExpression	arg == next_arg && argw == ( next_argw & 0x3 )		1670954	0		&&			
ANR	1671154	EqualityExpression	arg == next_arg		1670954	0		==			
ANR	1671155	Identifier	arg		1670954	0					
ANR	1671156	Identifier	next_arg		1670954	1					
ANR	1671157	EqualityExpression	argw == ( next_argw & 0x3 )		1670954	1		==			
ANR	1671158	Identifier	argw		1670954	0					
ANR	1671159	BitAndExpression	next_argw & 0x3		1670954	1		&			
ANR	1671160	Identifier	next_argw		1670954	0					
ANR	1671161	PrimaryExpression	0x3		1670954	1					
ANR	1671162	CompoundStatement		37:55:1001:1001	1670954	1					
ANR	1671163	ExpressionStatement	compiler -> cache_arg = arg	1413:6:42819:42844	1670954	0	True				
ANR	1671164	AssignmentExpression	compiler -> cache_arg = arg		1670954	0		=			
ANR	1671165	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1671166	Identifier	compiler		1670954	0					
ANR	1671167	Identifier	cache_arg		1670954	1					
ANR	1671168	Identifier	arg		1670954	1					
ANR	1671169	ExpressionStatement	compiler -> cache_argw = argw	1414:6:42852:42879	1670954	1	True				
ANR	1671170	AssignmentExpression	compiler -> cache_argw = argw		1670954	0		=			
ANR	1671171	PtrMemberAccess	compiler -> cache_argw		1670954	0					
ANR	1671172	Identifier	compiler		1670954	0					
ANR	1671173	Identifier	cache_argw		1670954	1					
ANR	1671174	Identifier	argw		1670954	1					
ANR	1671175	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped ) )"	1415:6:42887:42948	1670954	2	True				
ANR	1671176	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped ) )"		1670954	0					
ANR	1671177	Callee	FAIL_IF		1670954	0					
ANR	1671178	Identifier	FAIL_IF		1670954	0					
ANR	1671179	ArgumentList	"ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped )"		1670954	1					
ANR	1671180	Argument	"ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671181	CallExpression	"ADD ( TMP_REG3_mapped , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671182	Callee	ADD		1670954	0					
ANR	1671183	Identifier	ADD		1670954	0					
ANR	1671184	ArgumentList	TMP_REG3_mapped		1670954	1					
ANR	1671185	Argument	TMP_REG3_mapped		1670954	0					
ANR	1671186	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671187	Argument	reg_map [ base ]		1670954	1					
ANR	1671188	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671189	Identifier	reg_map		1670954	0					
ANR	1671190	Identifier	base		1670954	1					
ANR	1671191	Argument	TMP_REG3_mapped		1670954	2					
ANR	1671192	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671193	IfStatement	if ( flags & LOAD_DATA )		1670954	3					
ANR	1671194	Condition	flags & LOAD_DATA	1416:10:42960:42976	1670954	0	True				
ANR	1671195	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671196	Identifier	flags		1670954	0					
ANR	1671197	Identifier	LOAD_DATA		1670954	1					
ANR	1671198	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1417:7:42986:43060	1670954	1	True				
ANR	1671199	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1670954	0					
ANR	1671200	Callee	PB2		1670954	0					
ANR	1671201	Identifier	PB2		1670954	0					
ANR	1671202	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671203	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671204	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671205	Identifier	data_transfer_insts		1670954	0					
ANR	1671206	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671207	Identifier	flags		1670954	0					
ANR	1671208	Identifier	MEM_MASK		1670954	1					
ANR	1671209	Argument	reg_ar		1670954	1					
ANR	1671210	Identifier	reg_ar		1670954	0					
ANR	1671211	Argument	TMP_REG3_mapped		1670954	2					
ANR	1671212	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671213	ElseStatement	else		1670954	0					
ANR	1671214	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1419:7:43080:43154	1670954	0	True				
ANR	1671215	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1670954	0					
ANR	1671216	Callee	PB2		1670954	0					
ANR	1671217	Identifier	PB2		1670954	0					
ANR	1671218	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671219	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671220	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671221	Identifier	data_transfer_insts		1670954	0					
ANR	1671222	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671223	Identifier	flags		1670954	0					
ANR	1671224	Identifier	MEM_MASK		1670954	1					
ANR	1671225	Argument	TMP_REG3_mapped		1670954	1					
ANR	1671226	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671227	Argument	reg_ar		1670954	2					
ANR	1671228	Identifier	reg_ar		1670954	0					
ANR	1671229	ExpressionStatement	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped ) )"	1422:5:43169:43221	1670954	1	True				
ANR	1671230	CallExpression	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped ) )"		1670954	0					
ANR	1671231	Callee	FAIL_IF		1670954	0					
ANR	1671232	Identifier	FAIL_IF		1670954	0					
ANR	1671233	ArgumentList	"ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped )"		1670954	1					
ANR	1671234	Argument	"ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671235	CallExpression	"ADD ( tmp_ar , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671236	Callee	ADD		1670954	0					
ANR	1671237	Identifier	ADD		1670954	0					
ANR	1671238	ArgumentList	tmp_ar		1670954	1					
ANR	1671239	Argument	tmp_ar		1670954	0					
ANR	1671240	Identifier	tmp_ar		1670954	0					
ANR	1671241	Argument	reg_map [ base ]		1670954	1					
ANR	1671242	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671243	Identifier	reg_map		1670954	0					
ANR	1671244	Identifier	base		1670954	1					
ANR	1671245	Argument	TMP_REG3_mapped		1670954	2					
ANR	1671246	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671247	IfStatement	if ( flags & LOAD_DATA )		1670954	2					
ANR	1671248	Condition	flags & LOAD_DATA	1423:9:43232:43248	1670954	0	True				
ANR	1671249	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671250	Identifier	flags		1670954	0					
ANR	1671251	Identifier	LOAD_DATA		1670954	1					
ANR	1671252	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar ) ;"	1424:6:43257:43322	1670954	1	True				
ANR	1671253	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar )"		1670954	0					
ANR	1671254	Callee	PB2		1670954	0					
ANR	1671255	Identifier	PB2		1670954	0					
ANR	1671256	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671257	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671258	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671259	Identifier	data_transfer_insts		1670954	0					
ANR	1671260	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671261	Identifier	flags		1670954	0					
ANR	1671262	Identifier	MEM_MASK		1670954	1					
ANR	1671263	Argument	reg_ar		1670954	1					
ANR	1671264	Identifier	reg_ar		1670954	0					
ANR	1671265	Argument	tmp_ar		1670954	2					
ANR	1671266	Identifier	tmp_ar		1670954	0					
ANR	1671267	ElseStatement	else		1670954	0					
ANR	1671268	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar ) ;"	1426:6:43340:43405	1670954	0	True				
ANR	1671269	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar )"		1670954	0					
ANR	1671270	Callee	PB2		1670954	0					
ANR	1671271	Identifier	PB2		1670954	0					
ANR	1671272	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671273	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671274	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671275	Identifier	data_transfer_insts		1670954	0					
ANR	1671276	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671277	Identifier	flags		1670954	0					
ANR	1671278	Identifier	MEM_MASK		1670954	1					
ANR	1671279	Argument	tmp_ar		1670954	1					
ANR	1671280	Identifier	tmp_ar		1670954	0					
ANR	1671281	Argument	reg_ar		1670954	2					
ANR	1671282	Identifier	reg_ar		1670954	0					
ANR	1671283	ElseStatement	else		1670954	0					
ANR	1671284	CompoundStatement		53:10:1613:1613	1670954	0					
ANR	1671285	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg )		1670954	0					
ANR	1671286	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg	1429:8:43433:43490	1670954	0	True				
ANR	1671287	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1670954	0		==			
ANR	1671288	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1670954	0		|			
ANR	1671289	Identifier	SLJIT_MEM		1670954	0					
ANR	1671290	BitAndExpression	arg & OFFS_REG_MASK		1670954	1		&			
ANR	1671291	Identifier	arg		1670954	0					
ANR	1671292	Identifier	OFFS_REG_MASK		1670954	1					
ANR	1671293	PtrMemberAccess	compiler -> cache_arg		1670954	1					
ANR	1671294	Identifier	compiler		1670954	0					
ANR	1671295	Identifier	cache_arg		1670954	1					
ANR	1671296	CompoundStatement		54:68:1683:1683	1670954	1					
ANR	1671297	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"	1430:5:43500:43559	1670954	0	True				
ANR	1671298	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"		1670954	0					
ANR	1671299	Callee	FAIL_IF		1670954	0					
ANR	1671300	Identifier	FAIL_IF		1670954	0					
ANR	1671301	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	1					
ANR	1671302	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671303	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671304	Callee	ADD		1670954	0					
ANR	1671305	Identifier	ADD		1670954	0					
ANR	1671306	ArgumentList	reg_map [ base ]		1670954	1					
ANR	1671307	Argument	reg_map [ base ]		1670954	0					
ANR	1671308	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671309	Identifier	reg_map		1670954	0					
ANR	1671310	Identifier	base		1670954	1					
ANR	1671311	Argument	reg_map [ base ]		1670954	1					
ANR	1671312	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671313	Identifier	reg_map		1670954	0					
ANR	1671314	Identifier	base		1670954	1					
ANR	1671315	Argument	TMP_REG3_mapped		1670954	2					
ANR	1671316	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671317	IfStatement	if ( flags & LOAD_DATA )		1670954	1					
ANR	1671318	Condition	flags & LOAD_DATA	1431:9:43570:43586	1670954	0	True				
ANR	1671319	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671320	Identifier	flags		1670954	0					
ANR	1671321	Identifier	LOAD_DATA		1670954	1					
ANR	1671322	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] ) ;"	1432:6:43595:43667	1670954	1	True				
ANR	1671323	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] )"		1670954	0					
ANR	1671324	Callee	PB2		1670954	0					
ANR	1671325	Identifier	PB2		1670954	0					
ANR	1671326	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671327	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671328	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671329	Identifier	data_transfer_insts		1670954	0					
ANR	1671330	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671331	Identifier	flags		1670954	0					
ANR	1671332	Identifier	MEM_MASK		1670954	1					
ANR	1671333	Argument	reg_ar		1670954	1					
ANR	1671334	Identifier	reg_ar		1670954	0					
ANR	1671335	Argument	reg_map [ base ]		1670954	2					
ANR	1671336	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671337	Identifier	reg_map		1670954	0					
ANR	1671338	Identifier	base		1670954	1					
ANR	1671339	ElseStatement	else		1670954	0					
ANR	1671340	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar ) ;"	1434:6:43685:43757	1670954	0	True				
ANR	1671341	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar )"		1670954	0					
ANR	1671342	Callee	PB2		1670954	0					
ANR	1671343	Identifier	PB2		1670954	0					
ANR	1671344	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671345	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671346	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671347	Identifier	data_transfer_insts		1670954	0					
ANR	1671348	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671349	Identifier	flags		1670954	0					
ANR	1671350	Identifier	MEM_MASK		1670954	1					
ANR	1671351	Argument	reg_map [ base ]		1670954	1					
ANR	1671352	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671353	Identifier	reg_map		1670954	0					
ANR	1671354	Identifier	base		1670954	1					
ANR	1671355	Argument	reg_ar		1670954	2					
ANR	1671356	Identifier	reg_ar		1670954	0					
ANR	1671357	IfStatement	if ( SLJIT_UNLIKELY ( argw ) )		1670954	3					
ANR	1671358	Condition	SLJIT_UNLIKELY ( argw )	1439:6:43781:43800	1670954	0	True				
ANR	1671359	CallExpression	SLJIT_UNLIKELY ( argw )		1670954	0					
ANR	1671360	Callee	SLJIT_UNLIKELY		1670954	0					
ANR	1671361	Identifier	SLJIT_UNLIKELY		1670954	0					
ANR	1671362	ArgumentList	argw		1670954	1					
ANR	1671363	Argument	argw		1670954	0					
ANR	1671364	Identifier	argw		1670954	0					
ANR	1671365	CompoundStatement		64:28:1993:1993	1670954	1					
ANR	1671366	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )	1440:3:43808:43863	1670954	0	True				
ANR	1671367	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )		1670954	0		=			
ANR	1671368	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1671369	Identifier	compiler		1670954	0					
ANR	1671370	Identifier	cache_arg		1670954	1					
ANR	1671371	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1670954	1		|			
ANR	1671372	Identifier	SLJIT_MEM		1670954	0					
ANR	1671373	BitAndExpression	arg & OFFS_REG_MASK		1670954	1		&			
ANR	1671374	Identifier	arg		1670954	0					
ANR	1671375	Identifier	OFFS_REG_MASK		1670954	1					
ANR	1671376	ExpressionStatement	compiler -> cache_argw = argw	1441:3:43868:43895	1670954	1	True				
ANR	1671377	AssignmentExpression	compiler -> cache_argw = argw		1670954	0		=			
ANR	1671378	PtrMemberAccess	compiler -> cache_argw		1670954	0					
ANR	1671379	Identifier	compiler		1670954	0					
ANR	1671380	Identifier	cache_argw		1670954	1					
ANR	1671381	Identifier	argw		1670954	1					
ANR	1671382	ExpressionStatement	"FAIL_IF ( SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw ) )"	1442:3:43900:43960	1670954	2	True				
ANR	1671383	CallExpression	"FAIL_IF ( SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw ) )"		1670954	0					
ANR	1671384	Callee	FAIL_IF		1670954	0					
ANR	1671385	Identifier	FAIL_IF		1670954	0					
ANR	1671386	ArgumentList	"SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw )"		1670954	1					
ANR	1671387	Argument	"SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw )"		1670954	0					
ANR	1671388	CallExpression	"SHLI ( TMP_REG3_mapped , reg_map [ OFFS_REG ( arg ) ] , argw )"		1670954	0					
ANR	1671389	Callee	SHLI		1670954	0					
ANR	1671390	Identifier	SHLI		1670954	0					
ANR	1671391	ArgumentList	TMP_REG3_mapped		1670954	1					
ANR	1671392	Argument	TMP_REG3_mapped		1670954	0					
ANR	1671393	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671394	Argument	reg_map [ OFFS_REG ( arg ) ]		1670954	1					
ANR	1671395	ArrayIndexing	reg_map [ OFFS_REG ( arg ) ]		1670954	0					
ANR	1671396	Identifier	reg_map		1670954	0					
ANR	1671397	CallExpression	OFFS_REG ( arg )		1670954	1					
ANR	1671398	Callee	OFFS_REG		1670954	0					
ANR	1671399	Identifier	OFFS_REG		1670954	0					
ANR	1671400	ArgumentList	arg		1670954	1					
ANR	1671401	Argument	arg		1670954	0					
ANR	1671402	Identifier	arg		1670954	0					
ANR	1671403	Argument	argw		1670954	2					
ANR	1671404	Identifier	argw		1670954	0					
ANR	1671405	IfStatement	if ( ! ( flags & WRITE_BACK ) )		1670954	4					
ANR	1671406	Condition	! ( flags & WRITE_BACK )	1445:6:43973:43993	1670954	0	True				
ANR	1671407	UnaryOperationExpression	! ( flags & WRITE_BACK )		1670954	0					
ANR	1671408	UnaryOperator	!		1670954	0					
ANR	1671409	BitAndExpression	flags & WRITE_BACK		1670954	1		&			
ANR	1671410	Identifier	flags		1670954	0					
ANR	1671411	Identifier	WRITE_BACK		1670954	1					
ANR	1671412	CompoundStatement		70:29:2186:2186	1670954	1					
ANR	1671413	IfStatement	if ( arg == next_arg && argw == ( next_argw & 0x3 ) )		1670954	0					
ANR	1671414	Condition	arg == next_arg && argw == ( next_argw & 0x3 )	1446:7:44005:44048	1670954	0	True				
ANR	1671415	AndExpression	arg == next_arg && argw == ( next_argw & 0x3 )		1670954	0		&&			
ANR	1671416	EqualityExpression	arg == next_arg		1670954	0		==			
ANR	1671417	Identifier	arg		1670954	0					
ANR	1671418	Identifier	next_arg		1670954	1					
ANR	1671419	EqualityExpression	argw == ( next_argw & 0x3 )		1670954	1		==			
ANR	1671420	Identifier	argw		1670954	0					
ANR	1671421	BitAndExpression	next_argw & 0x3		1670954	1		&			
ANR	1671422	Identifier	next_argw		1670954	0					
ANR	1671423	PrimaryExpression	0x3		1670954	1					
ANR	1671424	CompoundStatement		71:53:2241:2241	1670954	1					
ANR	1671425	ExpressionStatement	compiler -> cache_arg = arg	1447:4:44057:44082	1670954	0	True				
ANR	1671426	AssignmentExpression	compiler -> cache_arg = arg		1670954	0		=			
ANR	1671427	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1671428	Identifier	compiler		1670954	0					
ANR	1671429	Identifier	cache_arg		1670954	1					
ANR	1671430	Identifier	arg		1670954	1					
ANR	1671431	ExpressionStatement	compiler -> cache_argw = argw	1448:4:44088:44115	1670954	1	True				
ANR	1671432	AssignmentExpression	compiler -> cache_argw = argw		1670954	0		=			
ANR	1671433	PtrMemberAccess	compiler -> cache_argw		1670954	0					
ANR	1671434	Identifier	compiler		1670954	0					
ANR	1671435	Identifier	cache_argw		1670954	1					
ANR	1671436	Identifier	argw		1670954	1					
ANR	1671437	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"	1449:4:44121:44208	1670954	2	True				
ANR	1671438	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"		1670954	0					
ANR	1671439	Callee	FAIL_IF		1670954	0					
ANR	1671440	Identifier	FAIL_IF		1670954	0					
ANR	1671441	ArgumentList	"ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	1					
ANR	1671442	Argument	"ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	0					
ANR	1671443	CallExpression	"ADD ( TMP_REG3_mapped , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	0					
ANR	1671444	Callee	ADD		1670954	0					
ANR	1671445	Identifier	ADD		1670954	0					
ANR	1671446	ArgumentList	TMP_REG3_mapped		1670954	1					
ANR	1671447	Argument	TMP_REG3_mapped		1670954	0					
ANR	1671448	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671449	Argument	reg_map [ base ]		1670954	1					
ANR	1671450	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671451	Identifier	reg_map		1670954	0					
ANR	1671452	Identifier	base		1670954	1					
ANR	1671453	Argument	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1670954	2					
ANR	1671454	ArrayIndexing	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1670954	0					
ANR	1671455	Identifier	reg_map		1670954	0					
ANR	1671456	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1670954	1					
ANR	1671457	Condition	! argw		1670954	0					
ANR	1671458	UnaryOperationExpression	! argw		1670954	0					
ANR	1671459	UnaryOperator	!		1670954	0					
ANR	1671460	Identifier	argw		1670954	1					
ANR	1671461	CallExpression	OFFS_REG ( arg )		1670954	1					
ANR	1671462	Callee	OFFS_REG		1670954	0					
ANR	1671463	Identifier	OFFS_REG		1670954	0					
ANR	1671464	ArgumentList	arg		1670954	1					
ANR	1671465	Argument	arg		1670954	0					
ANR	1671466	Identifier	arg		1670954	0					
ANR	1671467	Identifier	TMP_REG3		1670954	2					
ANR	1671468	ExpressionStatement	tmp_ar = TMP_REG3_mapped	1450:4:44214:44238	1670954	3	True				
ANR	1671469	AssignmentExpression	tmp_ar = TMP_REG3_mapped		1670954	0		=			
ANR	1671470	Identifier	tmp_ar		1670954	0					
ANR	1671471	Identifier	TMP_REG3_mapped		1670954	1					
ANR	1671472	ElseStatement	else		1670954	0					
ANR	1671473	ExpressionStatement	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"	1452:4:44254:44332	1670954	0	True				
ANR	1671474	CallExpression	"FAIL_IF ( ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"		1670954	0					
ANR	1671475	Callee	FAIL_IF		1670954	0					
ANR	1671476	Identifier	FAIL_IF		1670954	0					
ANR	1671477	ArgumentList	"ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	1					
ANR	1671478	Argument	"ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	0					
ANR	1671479	CallExpression	"ADD ( tmp_ar , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	0					
ANR	1671480	Callee	ADD		1670954	0					
ANR	1671481	Identifier	ADD		1670954	0					
ANR	1671482	ArgumentList	tmp_ar		1670954	1					
ANR	1671483	Argument	tmp_ar		1670954	0					
ANR	1671484	Identifier	tmp_ar		1670954	0					
ANR	1671485	Argument	reg_map [ base ]		1670954	1					
ANR	1671486	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671487	Identifier	reg_map		1670954	0					
ANR	1671488	Identifier	base		1670954	1					
ANR	1671489	Argument	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1670954	2					
ANR	1671490	ArrayIndexing	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1670954	0					
ANR	1671491	Identifier	reg_map		1670954	0					
ANR	1671492	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1670954	1					
ANR	1671493	Condition	! argw		1670954	0					
ANR	1671494	UnaryOperationExpression	! argw		1670954	0					
ANR	1671495	UnaryOperator	!		1670954	0					
ANR	1671496	Identifier	argw		1670954	1					
ANR	1671497	CallExpression	OFFS_REG ( arg )		1670954	1					
ANR	1671498	Callee	OFFS_REG		1670954	0					
ANR	1671499	Identifier	OFFS_REG		1670954	0					
ANR	1671500	ArgumentList	arg		1670954	1					
ANR	1671501	Argument	arg		1670954	0					
ANR	1671502	Identifier	arg		1670954	0					
ANR	1671503	Identifier	TMP_REG3		1670954	2					
ANR	1671504	IfStatement	if ( flags & LOAD_DATA )		1670954	1					
ANR	1671505	Condition	flags & LOAD_DATA	1454:7:44342:44358	1670954	0	True				
ANR	1671506	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671507	Identifier	flags		1670954	0					
ANR	1671508	Identifier	LOAD_DATA		1670954	1					
ANR	1671509	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar ) ;"	1455:4:44365:44430	1670954	1	True				
ANR	1671510	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar )"		1670954	0					
ANR	1671511	Callee	PB2		1670954	0					
ANR	1671512	Identifier	PB2		1670954	0					
ANR	1671513	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671514	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671515	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671516	Identifier	data_transfer_insts		1670954	0					
ANR	1671517	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671518	Identifier	flags		1670954	0					
ANR	1671519	Identifier	MEM_MASK		1670954	1					
ANR	1671520	Argument	reg_ar		1670954	1					
ANR	1671521	Identifier	reg_ar		1670954	0					
ANR	1671522	Argument	tmp_ar		1670954	2					
ANR	1671523	Identifier	tmp_ar		1670954	0					
ANR	1671524	ElseStatement	else		1670954	0					
ANR	1671525	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar ) ;"	1457:4:44444:44509	1670954	0	True				
ANR	1671526	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar )"		1670954	0					
ANR	1671527	Callee	PB2		1670954	0					
ANR	1671528	Identifier	PB2		1670954	0					
ANR	1671529	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671530	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671531	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671532	Identifier	data_transfer_insts		1670954	0					
ANR	1671533	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671534	Identifier	flags		1670954	0					
ANR	1671535	Identifier	MEM_MASK		1670954	1					
ANR	1671536	Argument	tmp_ar		1670954	1					
ANR	1671537	Identifier	tmp_ar		1670954	0					
ANR	1671538	Argument	reg_ar		1670954	2					
ANR	1671539	Identifier	reg_ar		1670954	0					
ANR	1671540	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"	1460:2:44518:44603	1670954	5	True				
ANR	1671541	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] ) )"		1670954	0					
ANR	1671542	Callee	FAIL_IF		1670954	0					
ANR	1671543	Identifier	FAIL_IF		1670954	0					
ANR	1671544	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	1					
ANR	1671545	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	0					
ANR	1671546	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ] )"		1670954	0					
ANR	1671547	Callee	ADD		1670954	0					
ANR	1671548	Identifier	ADD		1670954	0					
ANR	1671549	ArgumentList	reg_map [ base ]		1670954	1					
ANR	1671550	Argument	reg_map [ base ]		1670954	0					
ANR	1671551	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671552	Identifier	reg_map		1670954	0					
ANR	1671553	Identifier	base		1670954	1					
ANR	1671554	Argument	reg_map [ base ]		1670954	1					
ANR	1671555	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671556	Identifier	reg_map		1670954	0					
ANR	1671557	Identifier	base		1670954	1					
ANR	1671558	Argument	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1670954	2					
ANR	1671559	ArrayIndexing	reg_map [ ! argw ? OFFS_REG ( arg ) : TMP_REG3 ]		1670954	0					
ANR	1671560	Identifier	reg_map		1670954	0					
ANR	1671561	ConditionalExpression	! argw ? OFFS_REG ( arg ) : TMP_REG3		1670954	1					
ANR	1671562	Condition	! argw		1670954	0					
ANR	1671563	UnaryOperationExpression	! argw		1670954	0					
ANR	1671564	UnaryOperator	!		1670954	0					
ANR	1671565	Identifier	argw		1670954	1					
ANR	1671566	CallExpression	OFFS_REG ( arg )		1670954	1					
ANR	1671567	Callee	OFFS_REG		1670954	0					
ANR	1671568	Identifier	OFFS_REG		1670954	0					
ANR	1671569	ArgumentList	arg		1670954	1					
ANR	1671570	Argument	arg		1670954	0					
ANR	1671571	Identifier	arg		1670954	0					
ANR	1671572	Identifier	TMP_REG3		1670954	2					
ANR	1671573	IfStatement	if ( flags & LOAD_DATA )		1670954	6					
ANR	1671574	Condition	flags & LOAD_DATA	1462:6:44612:44628	1670954	0	True				
ANR	1671575	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671576	Identifier	flags		1670954	0					
ANR	1671577	Identifier	LOAD_DATA		1670954	1					
ANR	1671578	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] ) ;"	1463:3:44634:44706	1670954	1	True				
ANR	1671579	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] )"		1670954	0					
ANR	1671580	Callee	PB2		1670954	0					
ANR	1671581	Identifier	PB2		1670954	0					
ANR	1671582	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671583	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671584	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671585	Identifier	data_transfer_insts		1670954	0					
ANR	1671586	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671587	Identifier	flags		1670954	0					
ANR	1671588	Identifier	MEM_MASK		1670954	1					
ANR	1671589	Argument	reg_ar		1670954	1					
ANR	1671590	Identifier	reg_ar		1670954	0					
ANR	1671591	Argument	reg_map [ base ]		1670954	2					
ANR	1671592	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671593	Identifier	reg_map		1670954	0					
ANR	1671594	Identifier	base		1670954	1					
ANR	1671595	ElseStatement	else		1670954	0					
ANR	1671596	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar ) ;"	1465:3:44718:44790	1670954	0	True				
ANR	1671597	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar )"		1670954	0					
ANR	1671598	Callee	PB2		1670954	0					
ANR	1671599	Identifier	PB2		1670954	0					
ANR	1671600	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671601	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671602	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671603	Identifier	data_transfer_insts		1670954	0					
ANR	1671604	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671605	Identifier	flags		1670954	0					
ANR	1671606	Identifier	MEM_MASK		1670954	1					
ANR	1671607	Argument	reg_map [ base ]		1670954	1					
ANR	1671608	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671609	Identifier	reg_map		1670954	0					
ANR	1671610	Identifier	base		1670954	1					
ANR	1671611	Argument	reg_ar		1670954	2					
ANR	1671612	Identifier	reg_ar		1670954	0					
ANR	1671613	IfStatement	if ( SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base )		1670954	6					
ANR	1671614	Condition	SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base	1468:5:44801:44842	1670954	0	True				
ANR	1671615	AndExpression	SLJIT_UNLIKELY ( flags & WRITE_BACK ) && base		1670954	0		&&			
ANR	1671616	CallExpression	SLJIT_UNLIKELY ( flags & WRITE_BACK )		1670954	0					
ANR	1671617	Callee	SLJIT_UNLIKELY		1670954	0					
ANR	1671618	Identifier	SLJIT_UNLIKELY		1670954	0					
ANR	1671619	ArgumentList	flags & WRITE_BACK		1670954	1					
ANR	1671620	Argument	flags & WRITE_BACK		1670954	0					
ANR	1671621	BitAndExpression	flags & WRITE_BACK		1670954	0		&			
ANR	1671622	Identifier	flags		1670954	0					
ANR	1671623	Identifier	WRITE_BACK		1670954	1					
ANR	1671624	Identifier	base		1670954	1					
ANR	1671625	CompoundStatement		93:49:3035:3035	1670954	1					
ANR	1671626	IfStatement	if ( reg_ar == reg_map [ base ] )		1670954	0					
ANR	1671627	Condition	reg_ar == reg_map [ base ]	1470:6:44908:44930	1670954	0	True				
ANR	1671628	EqualityExpression	reg_ar == reg_map [ base ]		1670954	0		==			
ANR	1671629	Identifier	reg_ar		1670954	0					
ANR	1671630	ArrayIndexing	reg_map [ base ]		1670954	1					
ANR	1671631	Identifier	reg_map		1670954	0					
ANR	1671632	Identifier	base		1670954	1					
ANR	1671633	CompoundStatement		95:31:3123:3123	1670954	1					
ANR	1671634	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar )	1471:3:44938:45001	1670954	0	True				
ANR	1671635	CallExpression	SLJIT_ASSERT ( ! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar )		1670954	0					
ANR	1671636	Callee	SLJIT_ASSERT		1670954	0					
ANR	1671637	Identifier	SLJIT_ASSERT		1670954	0					
ANR	1671638	ArgumentList	! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar		1670954	1					
ANR	1671639	Argument	! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar		1670954	0					
ANR	1671640	AndExpression	! ( flags & LOAD_DATA ) && TMP_REG1_mapped != reg_ar		1670954	0		&&			
ANR	1671641	UnaryOperationExpression	! ( flags & LOAD_DATA )		1670954	0					
ANR	1671642	UnaryOperator	!		1670954	0					
ANR	1671643	BitAndExpression	flags & LOAD_DATA		1670954	1		&			
ANR	1671644	Identifier	flags		1670954	0					
ANR	1671645	Identifier	LOAD_DATA		1670954	1					
ANR	1671646	EqualityExpression	TMP_REG1_mapped != reg_ar		1670954	1		!=			
ANR	1671647	Identifier	TMP_REG1_mapped		1670954	0					
ANR	1671648	Identifier	reg_ar		1670954	1					
ANR	1671649	IfStatement	if ( argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN )		1670954	1					
ANR	1671650	Condition	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN	1472:7:45010:45057	1670954	0	True				
ANR	1671651	AndExpression	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1670954	0		&&			
ANR	1671652	RelationalExpression	argw <= SIMM_16BIT_MAX		1670954	0		<=			
ANR	1671653	Identifier	argw		1670954	0					
ANR	1671654	Identifier	SIMM_16BIT_MAX		1670954	1					
ANR	1671655	RelationalExpression	argw >= SIMM_16BIT_MIN		1670954	1		>=			
ANR	1671656	Identifier	argw		1670954	0					
ANR	1671657	Identifier	SIMM_16BIT_MIN		1670954	1					
ANR	1671658	CompoundStatement		97:57:3250:3250	1670954	1					
ANR	1671659	ExpressionStatement	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw ) )"	1473:4:45066:45118	1670954	0	True				
ANR	1671660	CallExpression	"FAIL_IF ( ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw ) )"		1670954	0					
ANR	1671661	Callee	FAIL_IF		1670954	0					
ANR	1671662	Identifier	FAIL_IF		1670954	0					
ANR	1671663	ArgumentList	"ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw )"		1670954	1					
ANR	1671664	Argument	"ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw )"		1670954	0					
ANR	1671665	CallExpression	"ADDLI ( ADDR_TMP_mapped , reg_map [ base ] , argw )"		1670954	0					
ANR	1671666	Callee	ADDLI		1670954	0					
ANR	1671667	Identifier	ADDLI		1670954	0					
ANR	1671668	ArgumentList	ADDR_TMP_mapped		1670954	1					
ANR	1671669	Argument	ADDR_TMP_mapped		1670954	0					
ANR	1671670	Identifier	ADDR_TMP_mapped		1670954	0					
ANR	1671671	Argument	reg_map [ base ]		1670954	1					
ANR	1671672	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671673	Identifier	reg_map		1670954	0					
ANR	1671674	Identifier	base		1670954	1					
ANR	1671675	Argument	argw		1670954	2					
ANR	1671676	Identifier	argw		1670954	0					
ANR	1671677	IfStatement	if ( flags & LOAD_DATA )		1670954	1					
ANR	1671678	Condition	flags & LOAD_DATA	1474:8:45128:45144	1670954	0	True				
ANR	1671679	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671680	Identifier	flags		1670954	0					
ANR	1671681	Identifier	LOAD_DATA		1670954	1					
ANR	1671682	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"	1475:5:45152:45228	1670954	1	True				
ANR	1671683	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped ) )"		1670954	0					
ANR	1671684	Callee	FAIL_IF		1670954	0					
ANR	1671685	Identifier	FAIL_IF		1670954	0					
ANR	1671686	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1670954	1					
ANR	1671687	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1670954	0					
ANR	1671688	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , ADDR_TMP_mapped )"		1670954	0					
ANR	1671689	Callee	PB2		1670954	0					
ANR	1671690	Identifier	PB2		1670954	0					
ANR	1671691	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671692	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671693	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671694	Identifier	data_transfer_insts		1670954	0					
ANR	1671695	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671696	Identifier	flags		1670954	0					
ANR	1671697	Identifier	MEM_MASK		1670954	1					
ANR	1671698	Argument	reg_ar		1670954	1					
ANR	1671699	Identifier	reg_ar		1670954	0					
ANR	1671700	Argument	ADDR_TMP_mapped		1670954	2					
ANR	1671701	Identifier	ADDR_TMP_mapped		1670954	0					
ANR	1671702	ElseStatement	else		1670954	0					
ANR	1671703	ExpressionStatement	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"	1477:5:45244:45320	1670954	0	True				
ANR	1671704	CallExpression	"FAIL_IF ( PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar ) )"		1670954	0					
ANR	1671705	Callee	FAIL_IF		1670954	0					
ANR	1671706	Identifier	FAIL_IF		1670954	0					
ANR	1671707	ArgumentList	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1670954	1					
ANR	1671708	Argument	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1670954	0					
ANR	1671709	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , ADDR_TMP_mapped , reg_ar )"		1670954	0					
ANR	1671710	Callee	PB2		1670954	0					
ANR	1671711	Identifier	PB2		1670954	0					
ANR	1671712	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671713	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671714	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671715	Identifier	data_transfer_insts		1670954	0					
ANR	1671716	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671717	Identifier	flags		1670954	0					
ANR	1671718	Identifier	MEM_MASK		1670954	1					
ANR	1671719	Argument	ADDR_TMP_mapped		1670954	1					
ANR	1671720	Identifier	ADDR_TMP_mapped		1670954	0					
ANR	1671721	Argument	reg_ar		1670954	2					
ANR	1671722	Identifier	reg_ar		1670954	0					
ANR	1671723	IfStatement	if ( argw )		1670954	2					
ANR	1671724	Condition	argw	1479:8:45331:45334	1670954	0	True				
ANR	1671725	Identifier	argw		1670954	0					
ANR	1671726	ReturnStatement	"return ADDLI ( reg_map [ base ] , reg_map [ base ] , argw ) ;"	1480:5:45342:45390	1670954	1	True				
ANR	1671727	CallExpression	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1670954	0					
ANR	1671728	Callee	ADDLI		1670954	0					
ANR	1671729	Identifier	ADDLI		1670954	0					
ANR	1671730	ArgumentList	reg_map [ base ]		1670954	1					
ANR	1671731	Argument	reg_map [ base ]		1670954	0					
ANR	1671732	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671733	Identifier	reg_map		1670954	0					
ANR	1671734	Identifier	base		1670954	1					
ANR	1671735	Argument	reg_map [ base ]		1670954	1					
ANR	1671736	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671737	Identifier	reg_map		1670954	0					
ANR	1671738	Identifier	base		1670954	1					
ANR	1671739	Argument	argw		1670954	2					
ANR	1671740	Identifier	argw		1670954	0					
ANR	1671741	ReturnStatement	return SLJIT_SUCCESS ;	1482:4:45397:45417	1670954	3	True				
ANR	1671742	Identifier	SLJIT_SUCCESS		1670954	0					
ANR	1671743	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"	1485:3:45428:45471	1670954	2	True				
ANR	1671744	CallExpression	"FAIL_IF ( ADD ( TMP_REG1_mapped , reg_ar , ZERO ) )"		1670954	0					
ANR	1671745	Callee	FAIL_IF		1670954	0					
ANR	1671746	Identifier	FAIL_IF		1670954	0					
ANR	1671747	ArgumentList	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1670954	1					
ANR	1671748	Argument	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1670954	0					
ANR	1671749	CallExpression	"ADD ( TMP_REG1_mapped , reg_ar , ZERO )"		1670954	0					
ANR	1671750	Callee	ADD		1670954	0					
ANR	1671751	Identifier	ADD		1670954	0					
ANR	1671752	ArgumentList	TMP_REG1_mapped		1670954	1					
ANR	1671753	Argument	TMP_REG1_mapped		1670954	0					
ANR	1671754	Identifier	TMP_REG1_mapped		1670954	0					
ANR	1671755	Argument	reg_ar		1670954	1					
ANR	1671756	Identifier	reg_ar		1670954	0					
ANR	1671757	Argument	ZERO		1670954	2					
ANR	1671758	Identifier	ZERO		1670954	0					
ANR	1671759	ExpressionStatement	reg_ar = TMP_REG1_mapped	1486:3:45476:45500	1670954	3	True				
ANR	1671760	AssignmentExpression	reg_ar = TMP_REG1_mapped		1670954	0		=			
ANR	1671761	Identifier	reg_ar		1670954	0					
ANR	1671762	Identifier	TMP_REG1_mapped		1670954	1					
ANR	1671763	IfStatement	if ( argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN )		1670954	1					
ANR	1671764	Condition	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN	1489:6:45513:45560	1670954	0	True				
ANR	1671765	AndExpression	argw <= SIMM_16BIT_MAX && argw >= SIMM_16BIT_MIN		1670954	0		&&			
ANR	1671766	RelationalExpression	argw <= SIMM_16BIT_MAX		1670954	0		<=			
ANR	1671767	Identifier	argw		1670954	0					
ANR	1671768	Identifier	SIMM_16BIT_MAX		1670954	1					
ANR	1671769	RelationalExpression	argw >= SIMM_16BIT_MIN		1670954	1		>=			
ANR	1671770	Identifier	argw		1670954	0					
ANR	1671771	Identifier	SIMM_16BIT_MIN		1670954	1					
ANR	1671772	CompoundStatement		114:56:3753:3753	1670954	1					
ANR	1671773	IfStatement	if ( argw )		1670954	0					
ANR	1671774	Condition	argw	1490:7:45572:45575	1670954	0	True				
ANR	1671775	Identifier	argw		1670954	0					
ANR	1671776	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ base ] , reg_map [ base ] , argw ) )"	1491:4:45582:45632	1670954	1	True				
ANR	1671777	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ base ] , reg_map [ base ] , argw ) )"		1670954	0					
ANR	1671778	Callee	FAIL_IF		1670954	0					
ANR	1671779	Identifier	FAIL_IF		1670954	0					
ANR	1671780	ArgumentList	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1670954	1					
ANR	1671781	Argument	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1670954	0					
ANR	1671782	CallExpression	"ADDLI ( reg_map [ base ] , reg_map [ base ] , argw )"		1670954	0					
ANR	1671783	Callee	ADDLI		1670954	0					
ANR	1671784	Identifier	ADDLI		1670954	0					
ANR	1671785	ArgumentList	reg_map [ base ]		1670954	1					
ANR	1671786	Argument	reg_map [ base ]		1670954	0					
ANR	1671787	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671788	Identifier	reg_map		1670954	0					
ANR	1671789	Identifier	base		1670954	1					
ANR	1671790	Argument	reg_map [ base ]		1670954	1					
ANR	1671791	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671792	Identifier	reg_map		1670954	0					
ANR	1671793	Identifier	base		1670954	1					
ANR	1671794	Argument	argw		1670954	2					
ANR	1671795	Identifier	argw		1670954	0					
ANR	1671796	ElseStatement	else		1670954	0					
ANR	1671797	CompoundStatement		117:9:3833:3833	1670954	0					
ANR	1671798	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN )		1670954	0					
ANR	1671799	Condition	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN	1493:7:45652:45791	1670954	0	True				
ANR	1671800	AndExpression	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	0		&&			
ANR	1671801	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1670954	0		==			
ANR	1671802	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1671803	Identifier	compiler		1670954	0					
ANR	1671804	Identifier	cache_arg		1670954	1					
ANR	1671805	Identifier	SLJIT_MEM		1670954	1					
ANR	1671806	AndExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	1		&&			
ANR	1671807	RelationalExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX		1670954	0		<=			
ANR	1671808	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1671809	Identifier	argw		1670954	0					
ANR	1671810	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671811	Identifier	compiler		1670954	0					
ANR	1671812	Identifier	cache_argw		1670954	1					
ANR	1671813	Identifier	SIMM_16BIT_MAX		1670954	1					
ANR	1671814	RelationalExpression	argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	1		>=			
ANR	1671815	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1671816	Identifier	argw		1670954	0					
ANR	1671817	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671818	Identifier	compiler		1670954	0					
ANR	1671819	Identifier	cache_argw		1670954	1					
ANR	1671820	Identifier	SIMM_16BIT_MIN		1670954	1					
ANR	1671821	CompoundStatement		120:55:3984:3984	1670954	1					
ANR	1671822	IfStatement	if ( argw != compiler -> cache_argw )		1670954	0					
ANR	1671823	Condition	argw != compiler -> cache_argw	1496:8:45804:45831	1670954	0	True				
ANR	1671824	EqualityExpression	argw != compiler -> cache_argw		1670954	0		!=			
ANR	1671825	Identifier	argw		1670954	0					
ANR	1671826	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671827	Identifier	compiler		1670954	0					
ANR	1671828	Identifier	cache_argw		1670954	1					
ANR	1671829	CompoundStatement		121:38:4024:4024	1670954	1					
ANR	1671830	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"	1497:5:45841:45916	1670954	0	True				
ANR	1671831	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"		1670954	0					
ANR	1671832	Callee	FAIL_IF		1670954	0					
ANR	1671833	Identifier	FAIL_IF		1670954	0					
ANR	1671834	ArgumentList	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	1					
ANR	1671835	Argument	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	0					
ANR	1671836	CallExpression	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	0					
ANR	1671837	Callee	ADD		1670954	0					
ANR	1671838	Identifier	ADD		1670954	0					
ANR	1671839	ArgumentList	TMP_REG3_mapped		1670954	1					
ANR	1671840	Argument	TMP_REG3_mapped		1670954	0					
ANR	1671841	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671842	Argument	TMP_REG3_mapped		1670954	1					
ANR	1671843	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671844	Argument	argw - compiler -> cache_argw		1670954	2					
ANR	1671845	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1671846	Identifier	argw		1670954	0					
ANR	1671847	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671848	Identifier	compiler		1670954	0					
ANR	1671849	Identifier	cache_argw		1670954	1					
ANR	1671850	ExpressionStatement	compiler -> cache_argw = argw	1498:5:45923:45950	1670954	1	True				
ANR	1671851	AssignmentExpression	compiler -> cache_argw = argw		1670954	0		=			
ANR	1671852	PtrMemberAccess	compiler -> cache_argw		1670954	0					
ANR	1671853	Identifier	compiler		1670954	0					
ANR	1671854	Identifier	cache_argw		1670954	1					
ANR	1671855	Identifier	argw		1670954	1					
ANR	1671856	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"	1501:4:45963:46022	1670954	1	True				
ANR	1671857	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"		1670954	0					
ANR	1671858	Callee	FAIL_IF		1670954	0					
ANR	1671859	Identifier	FAIL_IF		1670954	0					
ANR	1671860	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	1					
ANR	1671861	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671862	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671863	Callee	ADD		1670954	0					
ANR	1671864	Identifier	ADD		1670954	0					
ANR	1671865	ArgumentList	reg_map [ base ]		1670954	1					
ANR	1671866	Argument	reg_map [ base ]		1670954	0					
ANR	1671867	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671868	Identifier	reg_map		1670954	0					
ANR	1671869	Identifier	base		1670954	1					
ANR	1671870	Argument	reg_map [ base ]		1670954	1					
ANR	1671871	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671872	Identifier	reg_map		1670954	0					
ANR	1671873	Identifier	base		1670954	1					
ANR	1671874	Argument	TMP_REG3_mapped		1670954	2					
ANR	1671875	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671876	ElseStatement	else		1670954	0					
ANR	1671877	CompoundStatement		127:10:4224:4224	1670954	0					
ANR	1671878	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1503:4:46040:46071	1670954	0	True				
ANR	1671879	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1670954	0		=			
ANR	1671880	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1671881	Identifier	compiler		1670954	0					
ANR	1671882	Identifier	cache_arg		1670954	1					
ANR	1671883	Identifier	SLJIT_MEM		1670954	1					
ANR	1671884	ExpressionStatement	compiler -> cache_argw = argw	1504:4:46077:46104	1670954	1	True				
ANR	1671885	AssignmentExpression	compiler -> cache_argw = argw		1670954	0		=			
ANR	1671886	PtrMemberAccess	compiler -> cache_argw		1670954	0					
ANR	1671887	Identifier	compiler		1670954	0					
ANR	1671888	Identifier	cache_argw		1670954	1					
ANR	1671889	Identifier	argw		1670954	1					
ANR	1671890	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"	1505:4:46110:46166	1670954	2	True				
ANR	1671891	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"		1670954	0					
ANR	1671892	Callee	FAIL_IF		1670954	0					
ANR	1671893	Identifier	FAIL_IF		1670954	0					
ANR	1671894	ArgumentList	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1670954	1					
ANR	1671895	Argument	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1670954	0					
ANR	1671896	CallExpression	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1670954	0					
ANR	1671897	Callee	load_immediate		1670954	0					
ANR	1671898	Identifier	load_immediate		1670954	0					
ANR	1671899	ArgumentList	compiler		1670954	1					
ANR	1671900	Argument	compiler		1670954	0					
ANR	1671901	Identifier	compiler		1670954	0					
ANR	1671902	Argument	TMP_REG3_mapped		1670954	1					
ANR	1671903	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671904	Argument	argw		1670954	2					
ANR	1671905	Identifier	argw		1670954	0					
ANR	1671906	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"	1506:4:46172:46231	1670954	3	True				
ANR	1671907	CallExpression	"FAIL_IF ( ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped ) )"		1670954	0					
ANR	1671908	Callee	FAIL_IF		1670954	0					
ANR	1671909	Identifier	FAIL_IF		1670954	0					
ANR	1671910	ArgumentList	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	1					
ANR	1671911	Argument	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671912	CallExpression	"ADD ( reg_map [ base ] , reg_map [ base ] , TMP_REG3_mapped )"		1670954	0					
ANR	1671913	Callee	ADD		1670954	0					
ANR	1671914	Identifier	ADD		1670954	0					
ANR	1671915	ArgumentList	reg_map [ base ]		1670954	1					
ANR	1671916	Argument	reg_map [ base ]		1670954	0					
ANR	1671917	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671918	Identifier	reg_map		1670954	0					
ANR	1671919	Identifier	base		1670954	1					
ANR	1671920	Argument	reg_map [ base ]		1670954	1					
ANR	1671921	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671922	Identifier	reg_map		1670954	0					
ANR	1671923	Identifier	base		1670954	1					
ANR	1671924	Argument	TMP_REG3_mapped		1670954	2					
ANR	1671925	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1671926	IfStatement	if ( flags & LOAD_DATA )		1670954	2					
ANR	1671927	Condition	flags & LOAD_DATA	1510:6:46249:46265	1670954	0	True				
ANR	1671928	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1671929	Identifier	flags		1670954	0					
ANR	1671930	Identifier	LOAD_DATA		1670954	1					
ANR	1671931	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] ) ;"	1511:3:46271:46343	1670954	1	True				
ANR	1671932	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , reg_map [ base ] )"		1670954	0					
ANR	1671933	Callee	PB2		1670954	0					
ANR	1671934	Identifier	PB2		1670954	0					
ANR	1671935	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671936	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671937	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671938	Identifier	data_transfer_insts		1670954	0					
ANR	1671939	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671940	Identifier	flags		1670954	0					
ANR	1671941	Identifier	MEM_MASK		1670954	1					
ANR	1671942	Argument	reg_ar		1670954	1					
ANR	1671943	Identifier	reg_ar		1670954	0					
ANR	1671944	Argument	reg_map [ base ]		1670954	2					
ANR	1671945	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671946	Identifier	reg_map		1670954	0					
ANR	1671947	Identifier	base		1670954	1					
ANR	1671948	ElseStatement	else		1670954	0					
ANR	1671949	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar ) ;"	1513:3:46355:46427	1670954	0	True				
ANR	1671950	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_map [ base ] , reg_ar )"		1670954	0					
ANR	1671951	Callee	PB2		1670954	0					
ANR	1671952	Identifier	PB2		1670954	0					
ANR	1671953	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1671954	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671955	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1671956	Identifier	data_transfer_insts		1670954	0					
ANR	1671957	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1671958	Identifier	flags		1670954	0					
ANR	1671959	Identifier	MEM_MASK		1670954	1					
ANR	1671960	Argument	reg_map [ base ]		1670954	1					
ANR	1671961	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1671962	Identifier	reg_map		1670954	0					
ANR	1671963	Identifier	base		1670954	1					
ANR	1671964	Argument	reg_ar		1670954	2					
ANR	1671965	Identifier	reg_ar		1670954	0					
ANR	1671966	IfStatement	if ( compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN )		1670954	7					
ANR	1671967	Condition	compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN	1516:5:46438:46567	1670954	0	True				
ANR	1671968	AndExpression	compiler -> cache_arg == arg && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	0		&&			
ANR	1671969	EqualityExpression	compiler -> cache_arg == arg		1670954	0		==			
ANR	1671970	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1671971	Identifier	compiler		1670954	0					
ANR	1671972	Identifier	cache_arg		1670954	1					
ANR	1671973	Identifier	arg		1670954	1					
ANR	1671974	AndExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	1		&&			
ANR	1671975	RelationalExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX		1670954	0		<=			
ANR	1671976	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1671977	Identifier	argw		1670954	0					
ANR	1671978	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671979	Identifier	compiler		1670954	0					
ANR	1671980	Identifier	cache_argw		1670954	1					
ANR	1671981	Identifier	SIMM_16BIT_MAX		1670954	1					
ANR	1671982	RelationalExpression	argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	1		>=			
ANR	1671983	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1671984	Identifier	argw		1670954	0					
ANR	1671985	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671986	Identifier	compiler		1670954	0					
ANR	1671987	Identifier	cache_argw		1670954	1					
ANR	1671988	Identifier	SIMM_16BIT_MIN		1670954	1					
ANR	1671989	CompoundStatement		143:53:4760:4760	1670954	1					
ANR	1671990	IfStatement	if ( argw != compiler -> cache_argw )		1670954	0					
ANR	1671991	Condition	argw != compiler -> cache_argw	1519:6:46578:46605	1670954	0	True				
ANR	1671992	EqualityExpression	argw != compiler -> cache_argw		1670954	0		!=			
ANR	1671993	Identifier	argw		1670954	0					
ANR	1671994	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1671995	Identifier	compiler		1670954	0					
ANR	1671996	Identifier	cache_argw		1670954	1					
ANR	1671997	CompoundStatement		144:36:4798:4798	1670954	1					
ANR	1671998	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"	1520:3:46613:46690	1670954	0	True				
ANR	1671999	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"		1670954	0					
ANR	1672000	Callee	FAIL_IF		1670954	0					
ANR	1672001	Identifier	FAIL_IF		1670954	0					
ANR	1672002	ArgumentList	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	1					
ANR	1672003	Argument	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	0					
ANR	1672004	CallExpression	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	0					
ANR	1672005	Callee	ADDLI		1670954	0					
ANR	1672006	Identifier	ADDLI		1670954	0					
ANR	1672007	ArgumentList	TMP_REG3_mapped		1670954	1					
ANR	1672008	Argument	TMP_REG3_mapped		1670954	0					
ANR	1672009	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672010	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672011	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672012	Argument	argw - compiler -> cache_argw		1670954	2					
ANR	1672013	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1672014	Identifier	argw		1670954	0					
ANR	1672015	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1672016	Identifier	compiler		1670954	0					
ANR	1672017	Identifier	cache_argw		1670954	1					
ANR	1672018	ExpressionStatement	compiler -> cache_argw = argw	1521:3:46695:46722	1670954	1	True				
ANR	1672019	AssignmentExpression	compiler -> cache_argw = argw		1670954	0		=			
ANR	1672020	PtrMemberAccess	compiler -> cache_argw		1670954	0					
ANR	1672021	Identifier	compiler		1670954	0					
ANR	1672022	Identifier	cache_argw		1670954	1					
ANR	1672023	Identifier	argw		1670954	1					
ANR	1672024	IfStatement	if ( flags & LOAD_DATA )		1670954	1					
ANR	1672025	Condition	flags & LOAD_DATA	1524:6:46735:46751	1670954	0	True				
ANR	1672026	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1672027	Identifier	flags		1670954	0					
ANR	1672028	Identifier	LOAD_DATA		1670954	1					
ANR	1672029	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1525:3:46757:46831	1670954	1	True				
ANR	1672030	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1670954	0					
ANR	1672031	Callee	PB2		1670954	0					
ANR	1672032	Identifier	PB2		1670954	0					
ANR	1672033	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672034	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672035	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672036	Identifier	data_transfer_insts		1670954	0					
ANR	1672037	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672038	Identifier	flags		1670954	0					
ANR	1672039	Identifier	MEM_MASK		1670954	1					
ANR	1672040	Argument	reg_ar		1670954	1					
ANR	1672041	Identifier	reg_ar		1670954	0					
ANR	1672042	Argument	TMP_REG3_mapped		1670954	2					
ANR	1672043	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672044	ElseStatement	else		1670954	0					
ANR	1672045	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1527:3:46843:46917	1670954	0	True				
ANR	1672046	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1670954	0					
ANR	1672047	Callee	PB2		1670954	0					
ANR	1672048	Identifier	PB2		1670954	0					
ANR	1672049	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672050	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672051	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672052	Identifier	data_transfer_insts		1670954	0					
ANR	1672053	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672054	Identifier	flags		1670954	0					
ANR	1672055	Identifier	MEM_MASK		1670954	1					
ANR	1672056	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672057	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672058	Argument	reg_ar		1670954	2					
ANR	1672059	Identifier	reg_ar		1670954	0					
ANR	1672060	IfStatement	if ( compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN )		1670954	8					
ANR	1672061	Condition	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN	1530:5:46928:47063	1670954	0	True				
ANR	1672062	AndExpression	compiler -> cache_arg == SLJIT_MEM && argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	0		&&			
ANR	1672063	EqualityExpression	compiler -> cache_arg == SLJIT_MEM		1670954	0		==			
ANR	1672064	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1672065	Identifier	compiler		1670954	0					
ANR	1672066	Identifier	cache_arg		1670954	1					
ANR	1672067	Identifier	SLJIT_MEM		1670954	1					
ANR	1672068	AndExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX && argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	1		&&			
ANR	1672069	RelationalExpression	argw - compiler -> cache_argw <= SIMM_16BIT_MAX		1670954	0		<=			
ANR	1672070	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1672071	Identifier	argw		1670954	0					
ANR	1672072	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1672073	Identifier	compiler		1670954	0					
ANR	1672074	Identifier	cache_argw		1670954	1					
ANR	1672075	Identifier	SIMM_16BIT_MAX		1670954	1					
ANR	1672076	RelationalExpression	argw - compiler -> cache_argw >= SIMM_16BIT_MIN		1670954	1		>=			
ANR	1672077	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1672078	Identifier	argw		1670954	0					
ANR	1672079	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1672080	Identifier	compiler		1670954	0					
ANR	1672081	Identifier	cache_argw		1670954	1					
ANR	1672082	Identifier	SIMM_16BIT_MIN		1670954	1					
ANR	1672083	CompoundStatement		157:53:5256:5256	1670954	1					
ANR	1672084	IfStatement	if ( argw != compiler -> cache_argw )		1670954	0					
ANR	1672085	Condition	argw != compiler -> cache_argw	1533:6:47074:47101	1670954	0	True				
ANR	1672086	EqualityExpression	argw != compiler -> cache_argw		1670954	0		!=			
ANR	1672087	Identifier	argw		1670954	0					
ANR	1672088	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1672089	Identifier	compiler		1670954	0					
ANR	1672090	Identifier	cache_argw		1670954	1					
ANR	1672091	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"	1534:3:47107:47184	1670954	1	True				
ANR	1672092	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw ) )"		1670954	0					
ANR	1672093	Callee	FAIL_IF		1670954	0					
ANR	1672094	Identifier	FAIL_IF		1670954	0					
ANR	1672095	ArgumentList	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	1					
ANR	1672096	Argument	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	0					
ANR	1672097	CallExpression	"ADDLI ( TMP_REG3_mapped , TMP_REG3_mapped , argw - compiler -> cache_argw )"		1670954	0					
ANR	1672098	Callee	ADDLI		1670954	0					
ANR	1672099	Identifier	ADDLI		1670954	0					
ANR	1672100	ArgumentList	TMP_REG3_mapped		1670954	1					
ANR	1672101	Argument	TMP_REG3_mapped		1670954	0					
ANR	1672102	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672103	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672104	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672105	Argument	argw - compiler -> cache_argw		1670954	2					
ANR	1672106	AdditiveExpression	argw - compiler -> cache_argw		1670954	0		-			
ANR	1672107	Identifier	argw		1670954	0					
ANR	1672108	PtrMemberAccess	compiler -> cache_argw		1670954	1					
ANR	1672109	Identifier	compiler		1670954	0					
ANR	1672110	Identifier	cache_argw		1670954	1					
ANR	1672111	ElseStatement	else		1670954	0					
ANR	1672112	CompoundStatement		160:8:5384:5384	1670954	0					
ANR	1672113	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM	1536:2:47198:47229	1670954	0	True				
ANR	1672114	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM		1670954	0		=			
ANR	1672115	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1672116	Identifier	compiler		1670954	0					
ANR	1672117	Identifier	cache_arg		1670954	1					
ANR	1672118	Identifier	SLJIT_MEM		1670954	1					
ANR	1672119	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"	1537:2:47233:47289	1670954	1	True				
ANR	1672120	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3_mapped , argw ) )"		1670954	0					
ANR	1672121	Callee	FAIL_IF		1670954	0					
ANR	1672122	Identifier	FAIL_IF		1670954	0					
ANR	1672123	ArgumentList	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1670954	1					
ANR	1672124	Argument	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1670954	0					
ANR	1672125	CallExpression	"load_immediate ( compiler , TMP_REG3_mapped , argw )"		1670954	0					
ANR	1672126	Callee	load_immediate		1670954	0					
ANR	1672127	Identifier	load_immediate		1670954	0					
ANR	1672128	ArgumentList	compiler		1670954	1					
ANR	1672129	Argument	compiler		1670954	0					
ANR	1672130	Identifier	compiler		1670954	0					
ANR	1672131	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672132	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672133	Argument	argw		1670954	2					
ANR	1672134	Identifier	argw		1670954	0					
ANR	1672135	ExpressionStatement	compiler -> cache_argw = argw	1540:1:47296:47323	1670954	9	True				
ANR	1672136	AssignmentExpression	compiler -> cache_argw = argw		1670954	0		=			
ANR	1672137	PtrMemberAccess	compiler -> cache_argw		1670954	0					
ANR	1672138	Identifier	compiler		1670954	0					
ANR	1672139	Identifier	cache_argw		1670954	1					
ANR	1672140	Identifier	argw		1670954	1					
ANR	1672141	IfStatement	if ( ! base )		1670954	10					
ANR	1672142	Condition	! base	1542:5:47331:47335	1670954	0	True				
ANR	1672143	UnaryOperationExpression	! base		1670954	0					
ANR	1672144	UnaryOperator	!		1670954	0					
ANR	1672145	Identifier	base		1670954	1					
ANR	1672146	CompoundStatement		167:12:5528:5528	1670954	1					
ANR	1672147	IfStatement	if ( flags & LOAD_DATA )		1670954	0					
ANR	1672148	Condition	flags & LOAD_DATA	1543:6:47346:47362	1670954	0	True				
ANR	1672149	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1672150	Identifier	flags		1670954	0					
ANR	1672151	Identifier	LOAD_DATA		1670954	1					
ANR	1672152	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1544:3:47368:47442	1670954	1	True				
ANR	1672153	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1670954	0					
ANR	1672154	Callee	PB2		1670954	0					
ANR	1672155	Identifier	PB2		1670954	0					
ANR	1672156	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672157	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672158	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672159	Identifier	data_transfer_insts		1670954	0					
ANR	1672160	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672161	Identifier	flags		1670954	0					
ANR	1672162	Identifier	MEM_MASK		1670954	1					
ANR	1672163	Argument	reg_ar		1670954	1					
ANR	1672164	Identifier	reg_ar		1670954	0					
ANR	1672165	Argument	TMP_REG3_mapped		1670954	2					
ANR	1672166	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672167	ElseStatement	else		1670954	0					
ANR	1672168	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1546:3:47454:47528	1670954	0	True				
ANR	1672169	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1670954	0					
ANR	1672170	Callee	PB2		1670954	0					
ANR	1672171	Identifier	PB2		1670954	0					
ANR	1672172	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672173	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672174	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672175	Identifier	data_transfer_insts		1670954	0					
ANR	1672176	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672177	Identifier	flags		1670954	0					
ANR	1672178	Identifier	MEM_MASK		1670954	1					
ANR	1672179	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672180	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672181	Argument	reg_ar		1670954	2					
ANR	1672182	Identifier	reg_ar		1670954	0					
ANR	1672183	IfStatement	if ( arg == next_arg && next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN )		1670954	11					
ANR	1672184	Condition	arg == next_arg && next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN	1549:5:47539:47635	1670954	0	True				
ANR	1672185	AndExpression	arg == next_arg && next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN		1670954	0		&&			
ANR	1672186	EqualityExpression	arg == next_arg		1670954	0		==			
ANR	1672187	Identifier	arg		1670954	0					
ANR	1672188	Identifier	next_arg		1670954	1					
ANR	1672189	AndExpression	next_argw - argw <= SIMM_16BIT_MAX && next_argw - argw >= SIMM_16BIT_MIN		1670954	1		&&			
ANR	1672190	RelationalExpression	next_argw - argw <= SIMM_16BIT_MAX		1670954	0		<=			
ANR	1672191	AdditiveExpression	next_argw - argw		1670954	0		-			
ANR	1672192	Identifier	next_argw		1670954	0					
ANR	1672193	Identifier	argw		1670954	1					
ANR	1672194	Identifier	SIMM_16BIT_MAX		1670954	1					
ANR	1672195	RelationalExpression	next_argw - argw >= SIMM_16BIT_MIN		1670954	1		>=			
ANR	1672196	AdditiveExpression	next_argw - argw		1670954	0		-			
ANR	1672197	Identifier	next_argw		1670954	0					
ANR	1672198	Identifier	argw		1670954	1					
ANR	1672199	Identifier	SIMM_16BIT_MIN		1670954	1					
ANR	1672200	CompoundStatement		176:42:5828:5828	1670954	1					
ANR	1672201	ExpressionStatement	compiler -> cache_arg = arg	1552:2:47642:47667	1670954	0	True				
ANR	1672202	AssignmentExpression	compiler -> cache_arg = arg		1670954	0		=			
ANR	1672203	PtrMemberAccess	compiler -> cache_arg		1670954	0					
ANR	1672204	Identifier	compiler		1670954	0					
ANR	1672205	Identifier	cache_arg		1670954	1					
ANR	1672206	Identifier	arg		1670954	1					
ANR	1672207	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] ) )"	1553:2:47671:47732	1670954	1	True				
ANR	1672208	CallExpression	"FAIL_IF ( ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] ) )"		1670954	0					
ANR	1672209	Callee	FAIL_IF		1670954	0					
ANR	1672210	Identifier	FAIL_IF		1670954	0					
ANR	1672211	ArgumentList	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] )"		1670954	1					
ANR	1672212	Argument	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] )"		1670954	0					
ANR	1672213	CallExpression	"ADD ( TMP_REG3_mapped , TMP_REG3_mapped , reg_map [ base ] )"		1670954	0					
ANR	1672214	Callee	ADD		1670954	0					
ANR	1672215	Identifier	ADD		1670954	0					
ANR	1672216	ArgumentList	TMP_REG3_mapped		1670954	1					
ANR	1672217	Argument	TMP_REG3_mapped		1670954	0					
ANR	1672218	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672219	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672220	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672221	Argument	reg_map [ base ]		1670954	2					
ANR	1672222	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1672223	Identifier	reg_map		1670954	0					
ANR	1672224	Identifier	base		1670954	1					
ANR	1672225	IfStatement	if ( flags & LOAD_DATA )		1670954	2					
ANR	1672226	Condition	flags & LOAD_DATA	1554:6:47740:47756	1670954	0	True				
ANR	1672227	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1672228	Identifier	flags		1670954	0					
ANR	1672229	Identifier	LOAD_DATA		1670954	1					
ANR	1672230	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped ) ;"	1555:3:47762:47836	1670954	1	True				
ANR	1672231	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , TMP_REG3_mapped )"		1670954	0					
ANR	1672232	Callee	PB2		1670954	0					
ANR	1672233	Identifier	PB2		1670954	0					
ANR	1672234	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672235	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672236	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672237	Identifier	data_transfer_insts		1670954	0					
ANR	1672238	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672239	Identifier	flags		1670954	0					
ANR	1672240	Identifier	MEM_MASK		1670954	1					
ANR	1672241	Argument	reg_ar		1670954	1					
ANR	1672242	Identifier	reg_ar		1670954	0					
ANR	1672243	Argument	TMP_REG3_mapped		1670954	2					
ANR	1672244	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672245	ElseStatement	else		1670954	0					
ANR	1672246	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar ) ;"	1557:3:47848:47922	1670954	0	True				
ANR	1672247	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , TMP_REG3_mapped , reg_ar )"		1670954	0					
ANR	1672248	Callee	PB2		1670954	0					
ANR	1672249	Identifier	PB2		1670954	0					
ANR	1672250	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672251	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672252	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672253	Identifier	data_transfer_insts		1670954	0					
ANR	1672254	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672255	Identifier	flags		1670954	0					
ANR	1672256	Identifier	MEM_MASK		1670954	1					
ANR	1672257	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672258	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672259	Argument	reg_ar		1670954	2					
ANR	1672260	Identifier	reg_ar		1670954	0					
ANR	1672261	ExpressionStatement	"FAIL_IF ( ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] ) )"	1560:1:47929:47981	1670954	12	True				
ANR	1672262	CallExpression	"FAIL_IF ( ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] ) )"		1670954	0					
ANR	1672263	Callee	FAIL_IF		1670954	0					
ANR	1672264	Identifier	FAIL_IF		1670954	0					
ANR	1672265	ArgumentList	"ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] )"		1670954	1					
ANR	1672266	Argument	"ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] )"		1670954	0					
ANR	1672267	CallExpression	"ADD ( tmp_ar , TMP_REG3_mapped , reg_map [ base ] )"		1670954	0					
ANR	1672268	Callee	ADD		1670954	0					
ANR	1672269	Identifier	ADD		1670954	0					
ANR	1672270	ArgumentList	tmp_ar		1670954	1					
ANR	1672271	Argument	tmp_ar		1670954	0					
ANR	1672272	Identifier	tmp_ar		1670954	0					
ANR	1672273	Argument	TMP_REG3_mapped		1670954	1					
ANR	1672274	Identifier	TMP_REG3_mapped		1670954	0					
ANR	1672275	Argument	reg_map [ base ]		1670954	2					
ANR	1672276	ArrayIndexing	reg_map [ base ]		1670954	0					
ANR	1672277	Identifier	reg_map		1670954	0					
ANR	1672278	Identifier	base		1670954	1					
ANR	1672279	IfStatement	if ( flags & LOAD_DATA )		1670954	13					
ANR	1672280	Condition	flags & LOAD_DATA	1562:5:47989:48005	1670954	0	True				
ANR	1672281	BitAndExpression	flags & LOAD_DATA		1670954	0		&			
ANR	1672282	Identifier	flags		1670954	0					
ANR	1672283	Identifier	LOAD_DATA		1670954	1					
ANR	1672284	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar ) ;"	1563:2:48010:48075	1670954	1	True				
ANR	1672285	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , reg_ar , tmp_ar )"		1670954	0					
ANR	1672286	Callee	PB2		1670954	0					
ANR	1672287	Identifier	PB2		1670954	0					
ANR	1672288	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672289	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672290	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672291	Identifier	data_transfer_insts		1670954	0					
ANR	1672292	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672293	Identifier	flags		1670954	0					
ANR	1672294	Identifier	MEM_MASK		1670954	1					
ANR	1672295	Argument	reg_ar		1670954	1					
ANR	1672296	Identifier	reg_ar		1670954	0					
ANR	1672297	Argument	tmp_ar		1670954	2					
ANR	1672298	Identifier	tmp_ar		1670954	0					
ANR	1672299	ElseStatement	else		1670954	0					
ANR	1672300	ReturnStatement	"return PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar ) ;"	1565:2:48085:48150	1670954	0	True				
ANR	1672301	CallExpression	"PB2 ( data_transfer_insts [ flags & MEM_MASK ] , tmp_ar , reg_ar )"		1670954	0					
ANR	1672302	Callee	PB2		1670954	0					
ANR	1672303	Identifier	PB2		1670954	0					
ANR	1672304	ArgumentList	data_transfer_insts [ flags & MEM_MASK ]		1670954	1					
ANR	1672305	Argument	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672306	ArrayIndexing	data_transfer_insts [ flags & MEM_MASK ]		1670954	0					
ANR	1672307	Identifier	data_transfer_insts		1670954	0					
ANR	1672308	BitAndExpression	flags & MEM_MASK		1670954	1		&			
ANR	1672309	Identifier	flags		1670954	0					
ANR	1672310	Identifier	MEM_MASK		1670954	1					
ANR	1672311	Argument	tmp_ar		1670954	1					
ANR	1672312	Identifier	tmp_ar		1670954	0					
ANR	1672313	Argument	reg_ar		1670954	2					
ANR	1672314	Identifier	reg_ar		1670954	0					
ANR	1672315	ReturnType	static sljit_si		1670954	1					
ANR	1672316	Identifier	getput_arg		1670954	2					
ANR	1672317	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1670954	3					
ANR	1672318	Parameter	struct sljit_compiler * compiler	1375:27:41675:41705	1670954	0	True				
ANR	1672319	ParameterType	struct sljit_compiler *		1670954	0					
ANR	1672320	Identifier	compiler		1670954	1					
ANR	1672321	Parameter	sljit_si flags	1375:60:41708:41721	1670954	1	True				
ANR	1672322	ParameterType	sljit_si		1670954	0					
ANR	1672323	Identifier	flags		1670954	1					
ANR	1672324	Parameter	sljit_si reg_ar	1375:76:41724:41738	1670954	2	True				
ANR	1672325	ParameterType	sljit_si		1670954	0					
ANR	1672326	Identifier	reg_ar		1670954	1					
ANR	1672327	Parameter	sljit_si arg	1375:93:41741:41752	1670954	3	True				
ANR	1672328	ParameterType	sljit_si		1670954	0					
ANR	1672329	Identifier	arg		1670954	1					
ANR	1672330	Parameter	sljit_sw argw	1375:107:41755:41767	1670954	4	True				
ANR	1672331	ParameterType	sljit_sw		1670954	0					
ANR	1672332	Identifier	argw		1670954	1					
ANR	1672333	Parameter	sljit_si next_arg	1375:122:41770:41786	1670954	5	True				
ANR	1672334	ParameterType	sljit_si		1670954	0					
ANR	1672335	Identifier	next_arg		1670954	1					
ANR	1672336	Parameter	sljit_sw next_argw	1375:141:41789:41806	1670954	6	True				
ANR	1672337	ParameterType	sljit_sw		1670954	0					
ANR	1672338	Identifier	next_argw		1670954	1					
ANR	1672339	CFGEntryNode	ENTRY		1670954		True				
ANR	1672340	CFGExitNode	EXIT		1670954		True				
ANR	1672341	Symbol	TMP_REG3		1670954						
ANR	1672342	Symbol	ADD		1670954						
ANR	1672343	Symbol	ZERO		1670954						
ANR	1672344	Symbol	PB2		1670954						
ANR	1672345	Symbol	TMP_REG1_mapped		1670954						
ANR	1672346	Symbol	TMP_REG1		1670954						
ANR	1672347	Symbol	compiler -> cache_argw		1670954						
ANR	1672348	Symbol	SIMM_16BIT_MIN		1670954						
ANR	1672349	Symbol	LOAD_DATA		1670954						
ANR	1672350	Symbol	SLJIT_MEM		1670954						
ANR	1672351	Symbol	flags		1670954						
ANR	1672352	Symbol	reg_map		1670954						
ANR	1672353	Symbol	* MEM_MASK		1670954						
ANR	1672354	Symbol	* compiler		1670954						
ANR	1672355	Symbol	* argw		1670954						
ANR	1672356	Symbol	argw		1670954						
ANR	1672357	Symbol	ADDLI		1670954						
ANR	1672358	Symbol	load_immediate		1670954						
ANR	1672359	Symbol	arg		1670954						
ANR	1672360	Symbol	TMP_REG3_mapped		1670954						
ANR	1672361	Symbol	* TMP_REG1		1670954						
ANR	1672362	Symbol	* base		1670954						
ANR	1672363	Symbol	compiler		1670954						
ANR	1672364	Symbol	* TMP_REG3		1670954						
ANR	1672365	Symbol	WRITE_BACK		1670954						
ANR	1672366	Symbol	next_arg		1670954						
ANR	1672367	Symbol	* flags		1670954						
ANR	1672368	Symbol	REG_MASK		1670954						
ANR	1672369	Symbol	compiler -> cache_arg		1670954						
ANR	1672370	Symbol	OFFS_REG_MASK		1670954						
ANR	1672371	Symbol	next_argw		1670954						
ANR	1672372	Symbol	SLJIT_SUCCESS		1670954						
ANR	1672373	Symbol	* reg_map		1670954						
ANR	1672374	Symbol	data_transfer_insts		1670954						
ANR	1672375	Symbol	* data_transfer_insts		1670954						
ANR	1672376	Symbol	GPR_REG		1670954						
ANR	1672377	Symbol	* OFFS_REG		1670954						
ANR	1672378	Symbol	ADDR_TMP_mapped		1670954						
ANR	1672379	Symbol	SHLI		1670954						
ANR	1672380	Symbol	SIMM_16BIT_MAX		1670954						
ANR	1672381	Symbol	MEM_MASK		1670954						
ANR	1672382	Symbol	reg_ar		1670954						
ANR	1672383	Symbol	OFFS_REG		1670954						
ANR	1672384	Symbol	tmp_ar		1670954						
ANR	1672385	Symbol	base		1670954						
ANR	1672386	Symbol	SLJIT_UNLIKELY		1670954						
ANR	1672387	Function	emit_op_mem	1568:0:48155:48493							
ANR	1672388	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw)"		1672387	0					
ANR	1672389	CompoundStatement		1569:0:48291:48493	1672387	0					
ANR	1672390	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg_ar , arg , argw ) )"		1672387	0					
ANR	1672391	Condition	"getput_arg_fast ( compiler , flags , reg_ar , arg , argw )"	1570:5:48298:48348	1672387	0	True				
ANR	1672392	CallExpression	"getput_arg_fast ( compiler , flags , reg_ar , arg , argw )"		1672387	0					
ANR	1672393	Callee	getput_arg_fast		1672387	0					
ANR	1672394	Identifier	getput_arg_fast		1672387	0					
ANR	1672395	ArgumentList	compiler		1672387	1					
ANR	1672396	Argument	compiler		1672387	0					
ANR	1672397	Identifier	compiler		1672387	0					
ANR	1672398	Argument	flags		1672387	1					
ANR	1672399	Identifier	flags		1672387	0					
ANR	1672400	Argument	reg_ar		1672387	2					
ANR	1672401	Identifier	reg_ar		1672387	0					
ANR	1672402	Argument	arg		1672387	3					
ANR	1672403	Identifier	arg		1672387	0					
ANR	1672404	Argument	argw		1672387	4					
ANR	1672405	Identifier	argw		1672387	0					
ANR	1672406	ReturnStatement	return compiler -> error ;	1571:2:48353:48375	1672387	1	True				
ANR	1672407	PtrMemberAccess	compiler -> error		1672387	0					
ANR	1672408	Identifier	compiler		1672387	0					
ANR	1672409	Identifier	error		1672387	1					
ANR	1672410	ExpressionStatement	compiler -> cache_arg = 0	1573:1:48379:48402	1672387	1	True				
ANR	1672411	AssignmentExpression	compiler -> cache_arg = 0		1672387	0		=			
ANR	1672412	PtrMemberAccess	compiler -> cache_arg		1672387	0					
ANR	1672413	Identifier	compiler		1672387	0					
ANR	1672414	Identifier	cache_arg		1672387	1					
ANR	1672415	PrimaryExpression	0		1672387	1					
ANR	1672416	ExpressionStatement	compiler -> cache_argw = 0	1574:1:48405:48429	1672387	2	True				
ANR	1672417	AssignmentExpression	compiler -> cache_argw = 0		1672387	0		=			
ANR	1672418	PtrMemberAccess	compiler -> cache_argw		1672387	0					
ANR	1672419	Identifier	compiler		1672387	0					
ANR	1672420	Identifier	cache_argw		1672387	1					
ANR	1672421	PrimaryExpression	0		1672387	1					
ANR	1672422	ReturnStatement	"return getput_arg ( compiler , flags , reg_ar , arg , argw , 0 , 0 ) ;"	1575:1:48432:48491	1672387	3	True				
ANR	1672423	CallExpression	"getput_arg ( compiler , flags , reg_ar , arg , argw , 0 , 0 )"		1672387	0					
ANR	1672424	Callee	getput_arg		1672387	0					
ANR	1672425	Identifier	getput_arg		1672387	0					
ANR	1672426	ArgumentList	compiler		1672387	1					
ANR	1672427	Argument	compiler		1672387	0					
ANR	1672428	Identifier	compiler		1672387	0					
ANR	1672429	Argument	flags		1672387	1					
ANR	1672430	Identifier	flags		1672387	0					
ANR	1672431	Argument	reg_ar		1672387	2					
ANR	1672432	Identifier	reg_ar		1672387	0					
ANR	1672433	Argument	arg		1672387	3					
ANR	1672434	Identifier	arg		1672387	0					
ANR	1672435	Argument	argw		1672387	4					
ANR	1672436	Identifier	argw		1672387	0					
ANR	1672437	Argument	0		1672387	5					
ANR	1672438	PrimaryExpression	0		1672387	0					
ANR	1672439	Argument	0		1672387	6					
ANR	1672440	PrimaryExpression	0		1672387	0					
ANR	1672441	ReturnType	static SLJIT_INLINE sljit_si		1672387	1					
ANR	1672442	Identifier	emit_op_mem		1672387	2					
ANR	1672443	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg_ar , sljit_si arg , sljit_sw argw"		1672387	3					
ANR	1672444	Parameter	struct sljit_compiler * compiler	1568:41:48196:48226	1672387	0	True				
ANR	1672445	ParameterType	struct sljit_compiler *		1672387	0					
ANR	1672446	Identifier	compiler		1672387	1					
ANR	1672447	Parameter	sljit_si flags	1568:74:48229:48242	1672387	1	True				
ANR	1672448	ParameterType	sljit_si		1672387	0					
ANR	1672449	Identifier	flags		1672387	1					
ANR	1672450	Parameter	sljit_si reg_ar	1568:90:48245:48259	1672387	2	True				
ANR	1672451	ParameterType	sljit_si		1672387	0					
ANR	1672452	Identifier	reg_ar		1672387	1					
ANR	1672453	Parameter	sljit_si arg	1568:107:48262:48273	1672387	3	True				
ANR	1672454	ParameterType	sljit_si		1672387	0					
ANR	1672455	Identifier	arg		1672387	1					
ANR	1672456	Parameter	sljit_sw argw	1568:121:48276:48288	1672387	4	True				
ANR	1672457	ParameterType	sljit_sw		1672387	0					
ANR	1672458	Identifier	argw		1672387	1					
ANR	1672459	CFGEntryNode	ENTRY		1672387		True				
ANR	1672460	CFGExitNode	EXIT		1672387		True				
ANR	1672461	Symbol	compiler -> cache_argw		1672387						
ANR	1672462	Symbol	getput_arg		1672387						
ANR	1672463	Symbol	compiler -> cache_arg		1672387						
ANR	1672464	Symbol	arg		1672387						
ANR	1672465	Symbol	flags		1672387						
ANR	1672466	Symbol	reg_ar		1672387						
ANR	1672467	Symbol	* compiler		1672387						
ANR	1672468	Symbol	compiler		1672387						
ANR	1672469	Symbol	argw		1672387						
ANR	1672470	Symbol	getput_arg_fast		1672387						
ANR	1672471	Symbol	compiler -> error		1672387						
ANR	1672472	Function	emit_op_mem2	1578:0:48496:48816							
ANR	1672473	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1672472	0					
ANR	1672474	CompoundStatement		1579:0:48663:48816	1672472	0					
ANR	1672475	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1672472	0					
ANR	1672476	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1580:5:48670:48719	1672472	0	True				
ANR	1672477	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1672472	0					
ANR	1672478	Callee	getput_arg_fast		1672472	0					
ANR	1672479	Identifier	getput_arg_fast		1672472	0					
ANR	1672480	ArgumentList	compiler		1672472	1					
ANR	1672481	Argument	compiler		1672472	0					
ANR	1672482	Identifier	compiler		1672472	0					
ANR	1672483	Argument	flags		1672472	1					
ANR	1672484	Identifier	flags		1672472	0					
ANR	1672485	Argument	reg		1672472	2					
ANR	1672486	Identifier	reg		1672472	0					
ANR	1672487	Argument	arg1		1672472	3					
ANR	1672488	Identifier	arg1		1672472	0					
ANR	1672489	Argument	arg1w		1672472	4					
ANR	1672490	Identifier	arg1w		1672472	0					
ANR	1672491	ReturnStatement	return compiler -> error ;	1581:2:48724:48746	1672472	1	True				
ANR	1672492	PtrMemberAccess	compiler -> error		1672472	0					
ANR	1672493	Identifier	compiler		1672472	0					
ANR	1672494	Identifier	error		1672472	1					
ANR	1672495	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1582:1:48749:48814	1672472	1	True				
ANR	1672496	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1672472	0					
ANR	1672497	Callee	getput_arg		1672472	0					
ANR	1672498	Identifier	getput_arg		1672472	0					
ANR	1672499	ArgumentList	compiler		1672472	1					
ANR	1672500	Argument	compiler		1672472	0					
ANR	1672501	Identifier	compiler		1672472	0					
ANR	1672502	Argument	flags		1672472	1					
ANR	1672503	Identifier	flags		1672472	0					
ANR	1672504	Argument	reg		1672472	2					
ANR	1672505	Identifier	reg		1672472	0					
ANR	1672506	Argument	arg1		1672472	3					
ANR	1672507	Identifier	arg1		1672472	0					
ANR	1672508	Argument	arg1w		1672472	4					
ANR	1672509	Identifier	arg1w		1672472	0					
ANR	1672510	Argument	arg2		1672472	5					
ANR	1672511	Identifier	arg2		1672472	0					
ANR	1672512	Argument	arg2w		1672472	6					
ANR	1672513	Identifier	arg2w		1672472	0					
ANR	1672514	ReturnType	static SLJIT_INLINE sljit_si		1672472	1					
ANR	1672515	Identifier	emit_op_mem2		1672472	2					
ANR	1672516	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1672472	3					
ANR	1672517	Parameter	struct sljit_compiler * compiler	1578:42:48538:48568	1672472	0	True				
ANR	1672518	ParameterType	struct sljit_compiler *		1672472	0					
ANR	1672519	Identifier	compiler		1672472	1					
ANR	1672520	Parameter	sljit_si flags	1578:75:48571:48584	1672472	1	True				
ANR	1672521	ParameterType	sljit_si		1672472	0					
ANR	1672522	Identifier	flags		1672472	1					
ANR	1672523	Parameter	sljit_si reg	1578:91:48587:48598	1672472	2	True				
ANR	1672524	ParameterType	sljit_si		1672472	0					
ANR	1672525	Identifier	reg		1672472	1					
ANR	1672526	Parameter	sljit_si arg1	1578:105:48601:48613	1672472	3	True				
ANR	1672527	ParameterType	sljit_si		1672472	0					
ANR	1672528	Identifier	arg1		1672472	1					
ANR	1672529	Parameter	sljit_sw arg1w	1578:120:48616:48629	1672472	4	True				
ANR	1672530	ParameterType	sljit_sw		1672472	0					
ANR	1672531	Identifier	arg1w		1672472	1					
ANR	1672532	Parameter	sljit_si arg2	1578:136:48632:48644	1672472	5	True				
ANR	1672533	ParameterType	sljit_si		1672472	0					
ANR	1672534	Identifier	arg2		1672472	1					
ANR	1672535	Parameter	sljit_sw arg2w	1578:151:48647:48660	1672472	6	True				
ANR	1672536	ParameterType	sljit_sw		1672472	0					
ANR	1672537	Identifier	arg2w		1672472	1					
ANR	1672538	CFGEntryNode	ENTRY		1672472		True				
ANR	1672539	CFGExitNode	EXIT		1672472		True				
ANR	1672540	Symbol	arg1w		1672472						
ANR	1672541	Symbol	arg2		1672472						
ANR	1672542	Symbol	getput_arg		1672472						
ANR	1672543	Symbol	reg		1672472						
ANR	1672544	Symbol	arg1		1672472						
ANR	1672545	Symbol	arg2w		1672472						
ANR	1672546	Symbol	flags		1672472						
ANR	1672547	Symbol	* compiler		1672472						
ANR	1672548	Symbol	compiler		1672472						
ANR	1672549	Symbol	getput_arg_fast		1672472						
ANR	1672550	Symbol	compiler -> error		1672472						
ANR	1672551	Function	sljit_emit_fast_enter	1585:0:48819:49272							
ANR	1672552	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1672551	0					
ANR	1672553	CompoundStatement		1586:0:48937:49272	1672551	0					
ANR	1672554	ExpressionStatement	CHECK_ERROR ( )	1587:1:48940:48953	1672551	0	True				
ANR	1672555	CallExpression	CHECK_ERROR ( )		1672551	0					
ANR	1672556	Callee	CHECK_ERROR		1672551	0					
ANR	1672557	Identifier	CHECK_ERROR		1672551	0					
ANR	1672558	ArgumentList			1672551	1					
ANR	1672559	ExpressionStatement	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"	1588:1:48956:49004	1672551	1	True				
ANR	1672560	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1672551	0					
ANR	1672561	Callee	check_sljit_emit_fast_enter		1672551	0					
ANR	1672562	Identifier	check_sljit_emit_fast_enter		1672551	0					
ANR	1672563	ArgumentList	compiler		1672551	1					
ANR	1672564	Argument	compiler		1672551	0					
ANR	1672565	Identifier	compiler		1672551	0					
ANR	1672566	Argument	dst		1672551	1					
ANR	1672567	Identifier	dst		1672551	0					
ANR	1672568	Argument	dstw		1672551	2					
ANR	1672569	Identifier	dstw		1672551	0					
ANR	1672570	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1589:1:49007:49037	1672551	2	True				
ANR	1672571	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1672551	0					
ANR	1672572	Callee	ADJUST_LOCAL_OFFSET		1672551	0					
ANR	1672573	Identifier	ADJUST_LOCAL_OFFSET		1672551	0					
ANR	1672574	ArgumentList	dst		1672551	1					
ANR	1672575	Argument	dst		1672551	0					
ANR	1672576	Identifier	dst		1672551	0					
ANR	1672577	Argument	dstw		1672551	1					
ANR	1672578	Identifier	dstw		1672551	0					
ANR	1672579	IfStatement	if ( dst == SLJIT_UNUSED )		1672551	3					
ANR	1672580	Condition	dst == SLJIT_UNUSED	1592:5:49092:49110	1672551	0	True				
ANR	1672581	EqualityExpression	dst == SLJIT_UNUSED		1672551	0		==			
ANR	1672582	Identifier	dst		1672551	0					
ANR	1672583	Identifier	SLJIT_UNUSED		1672551	1					
ANR	1672584	ReturnStatement	return SLJIT_SUCCESS ;	1593:2:49115:49135	1672551	1	True				
ANR	1672585	Identifier	SLJIT_SUCCESS		1672551	0					
ANR	1672586	IfStatement	if ( FAST_IS_REG ( dst ) )		1672551	4					
ANR	1672587	Condition	FAST_IS_REG ( dst )	1595:5:49143:49158	1672551	0	True				
ANR	1672588	CallExpression	FAST_IS_REG ( dst )		1672551	0					
ANR	1672589	Callee	FAST_IS_REG		1672551	0					
ANR	1672590	Identifier	FAST_IS_REG		1672551	0					
ANR	1672591	ArgumentList	dst		1672551	1					
ANR	1672592	Argument	dst		1672551	0					
ANR	1672593	Identifier	dst		1672551	0					
ANR	1672594	ReturnStatement	"return ADD ( reg_map [ dst ] , RA , ZERO ) ;"	1596:2:49163:49197	1672551	1	True				
ANR	1672595	CallExpression	"ADD ( reg_map [ dst ] , RA , ZERO )"		1672551	0					
ANR	1672596	Callee	ADD		1672551	0					
ANR	1672597	Identifier	ADD		1672551	0					
ANR	1672598	ArgumentList	reg_map [ dst ]		1672551	1					
ANR	1672599	Argument	reg_map [ dst ]		1672551	0					
ANR	1672600	ArrayIndexing	reg_map [ dst ]		1672551	0					
ANR	1672601	Identifier	reg_map		1672551	0					
ANR	1672602	Identifier	dst		1672551	1					
ANR	1672603	Argument	RA		1672551	1					
ANR	1672604	Identifier	RA		1672551	0					
ANR	1672605	Argument	ZERO		1672551	2					
ANR	1672606	Identifier	ZERO		1672551	0					
ANR	1672607	ReturnStatement	"return emit_op_mem ( compiler , WORD_DATA , RA , dst , dstw ) ;"	1599:1:49216:49270	1672551	5	True				
ANR	1672608	CallExpression	"emit_op_mem ( compiler , WORD_DATA , RA , dst , dstw )"		1672551	0					
ANR	1672609	Callee	emit_op_mem		1672551	0					
ANR	1672610	Identifier	emit_op_mem		1672551	0					
ANR	1672611	ArgumentList	compiler		1672551	1					
ANR	1672612	Argument	compiler		1672551	0					
ANR	1672613	Identifier	compiler		1672551	0					
ANR	1672614	Argument	WORD_DATA		1672551	1					
ANR	1672615	Identifier	WORD_DATA		1672551	0					
ANR	1672616	Argument	RA		1672551	2					
ANR	1672617	Identifier	RA		1672551	0					
ANR	1672618	Argument	dst		1672551	3					
ANR	1672619	Identifier	dst		1672551	0					
ANR	1672620	Argument	dstw		1672551	4					
ANR	1672621	Identifier	dstw		1672551	0					
ANR	1672622	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1672551	1					
ANR	1672623	Identifier	sljit_emit_fast_enter		1672551	2					
ANR	1672624	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1672551	3					
ANR	1672625	Parameter	struct sljit_compiler * compiler	1585:56:48875:48905	1672551	0	True				
ANR	1672626	ParameterType	struct sljit_compiler *		1672551	0					
ANR	1672627	Identifier	compiler		1672551	1					
ANR	1672628	Parameter	sljit_si dst	1585:89:48908:48919	1672551	1	True				
ANR	1672629	ParameterType	sljit_si		1672551	0					
ANR	1672630	Identifier	dst		1672551	1					
ANR	1672631	Parameter	sljit_sw dstw	1585:103:48922:48934	1672551	2	True				
ANR	1672632	ParameterType	sljit_sw		1672551	0					
ANR	1672633	Identifier	dstw		1672551	1					
ANR	1672634	CFGEntryNode	ENTRY		1672551		True				
ANR	1672635	CFGExitNode	EXIT		1672551		True				
ANR	1672636	Symbol	ZERO		1672551						
ANR	1672637	Symbol	ADD		1672551						
ANR	1672638	Symbol	FAST_IS_REG		1672551						
ANR	1672639	Symbol	dst		1672551						
ANR	1672640	Symbol	reg_map		1672551						
ANR	1672641	Symbol	emit_op_mem		1672551						
ANR	1672642	Symbol	SLJIT_SUCCESS		1672551						
ANR	1672643	Symbol	* reg_map		1672551						
ANR	1672644	Symbol	RA		1672551						
ANR	1672645	Symbol	* dst		1672551						
ANR	1672646	Symbol	SLJIT_UNUSED		1672551						
ANR	1672647	Symbol	compiler		1672551						
ANR	1672648	Symbol	dstw		1672551						
ANR	1672649	Symbol	WORD_DATA		1672551						
ANR	1672650	Function	sljit_emit_fast_return	1602:0:49275:49753							
ANR	1672651	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1672650	0					
ANR	1672652	CompoundStatement		1603:0:49394:49753	1672650	0					
ANR	1672653	ExpressionStatement	CHECK_ERROR ( )	1604:1:49397:49410	1672650	0	True				
ANR	1672654	CallExpression	CHECK_ERROR ( )		1672650	0					
ANR	1672655	Callee	CHECK_ERROR		1672650	0					
ANR	1672656	Identifier	CHECK_ERROR		1672650	0					
ANR	1672657	ArgumentList			1672650	1					
ANR	1672658	ExpressionStatement	"check_sljit_emit_fast_return ( compiler , src , srcw )"	1605:1:49413:49462	1672650	1	True				
ANR	1672659	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1672650	0					
ANR	1672660	Callee	check_sljit_emit_fast_return		1672650	0					
ANR	1672661	Identifier	check_sljit_emit_fast_return		1672650	0					
ANR	1672662	ArgumentList	compiler		1672650	1					
ANR	1672663	Argument	compiler		1672650	0					
ANR	1672664	Identifier	compiler		1672650	0					
ANR	1672665	Argument	src		1672650	1					
ANR	1672666	Identifier	src		1672650	0					
ANR	1672667	Argument	srcw		1672650	2					
ANR	1672668	Identifier	srcw		1672650	0					
ANR	1672669	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1606:1:49465:49495	1672650	2	True				
ANR	1672670	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1672650	0					
ANR	1672671	Callee	ADJUST_LOCAL_OFFSET		1672650	0					
ANR	1672672	Identifier	ADJUST_LOCAL_OFFSET		1672650	0					
ANR	1672673	ArgumentList	src		1672650	1					
ANR	1672674	Argument	src		1672650	0					
ANR	1672675	Identifier	src		1672650	0					
ANR	1672676	Argument	srcw		1672650	1					
ANR	1672677	Identifier	srcw		1672650	0					
ANR	1672678	IfStatement	if ( FAST_IS_REG ( src ) )		1672650	3					
ANR	1672679	Condition	FAST_IS_REG ( src )	1608:5:49503:49518	1672650	0	True				
ANR	1672680	CallExpression	FAST_IS_REG ( src )		1672650	0					
ANR	1672681	Callee	FAST_IS_REG		1672650	0					
ANR	1672682	Identifier	FAST_IS_REG		1672650	0					
ANR	1672683	ArgumentList	src		1672650	1					
ANR	1672684	Argument	src		1672650	0					
ANR	1672685	Identifier	src		1672650	0					
ANR	1672686	ExpressionStatement	"FAIL_IF ( ADD ( RA , reg_map [ src ] , ZERO ) )"	1609:2:49523:49559	1672650	1	True				
ANR	1672687	CallExpression	"FAIL_IF ( ADD ( RA , reg_map [ src ] , ZERO ) )"		1672650	0					
ANR	1672688	Callee	FAIL_IF		1672650	0					
ANR	1672689	Identifier	FAIL_IF		1672650	0					
ANR	1672690	ArgumentList	"ADD ( RA , reg_map [ src ] , ZERO )"		1672650	1					
ANR	1672691	Argument	"ADD ( RA , reg_map [ src ] , ZERO )"		1672650	0					
ANR	1672692	CallExpression	"ADD ( RA , reg_map [ src ] , ZERO )"		1672650	0					
ANR	1672693	Callee	ADD		1672650	0					
ANR	1672694	Identifier	ADD		1672650	0					
ANR	1672695	ArgumentList	RA		1672650	1					
ANR	1672696	Argument	RA		1672650	0					
ANR	1672697	Identifier	RA		1672650	0					
ANR	1672698	Argument	reg_map [ src ]		1672650	1					
ANR	1672699	ArrayIndexing	reg_map [ src ]		1672650	0					
ANR	1672700	Identifier	reg_map		1672650	0					
ANR	1672701	Identifier	src		1672650	1					
ANR	1672702	Argument	ZERO		1672650	2					
ANR	1672703	Identifier	ZERO		1672650	0					
ANR	1672704	ElseStatement	else		1672650	0					
ANR	1672705	IfStatement	if ( src & SLJIT_MEM )		1672650	0					
ANR	1672706	Condition	src & SLJIT_MEM	1611:10:49572:49586	1672650	0	True				
ANR	1672707	BitAndExpression	src & SLJIT_MEM		1672650	0		&			
ANR	1672708	Identifier	src		1672650	0					
ANR	1672709	Identifier	SLJIT_MEM		1672650	1					
ANR	1672710	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw ) )"	1612:2:49591:49659	1672650	1	True				
ANR	1672711	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw ) )"		1672650	0					
ANR	1672712	Callee	FAIL_IF		1672650	0					
ANR	1672713	Identifier	FAIL_IF		1672650	0					
ANR	1672714	ArgumentList	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw )"		1672650	1					
ANR	1672715	Argument	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw )"		1672650	0					
ANR	1672716	CallExpression	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , RA , src , srcw )"		1672650	0					
ANR	1672717	Callee	emit_op_mem		1672650	0					
ANR	1672718	Identifier	emit_op_mem		1672650	0					
ANR	1672719	ArgumentList	compiler		1672650	1					
ANR	1672720	Argument	compiler		1672650	0					
ANR	1672721	Identifier	compiler		1672650	0					
ANR	1672722	Argument	WORD_DATA | LOAD_DATA		1672650	1					
ANR	1672723	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1672650	0		|			
ANR	1672724	Identifier	WORD_DATA		1672650	0					
ANR	1672725	Identifier	LOAD_DATA		1672650	1					
ANR	1672726	Argument	RA		1672650	2					
ANR	1672727	Identifier	RA		1672650	0					
ANR	1672728	Argument	src		1672650	3					
ANR	1672729	Identifier	src		1672650	0					
ANR	1672730	Argument	srcw		1672650	4					
ANR	1672731	Identifier	srcw		1672650	0					
ANR	1672732	ElseStatement	else		1672650	0					
ANR	1672733	IfStatement	if ( src & SLJIT_IMM )		1672650	0					
ANR	1672734	Condition	src & SLJIT_IMM	1614:10:49672:49686	1672650	0	True				
ANR	1672735	BitAndExpression	src & SLJIT_IMM		1672650	0		&			
ANR	1672736	Identifier	src		1672650	0					
ANR	1672737	Identifier	SLJIT_IMM		1672650	1					
ANR	1672738	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , RA , srcw ) )"	1615:2:49691:49734	1672650	1	True				
ANR	1672739	CallExpression	"FAIL_IF ( load_immediate ( compiler , RA , srcw ) )"		1672650	0					
ANR	1672740	Callee	FAIL_IF		1672650	0					
ANR	1672741	Identifier	FAIL_IF		1672650	0					
ANR	1672742	ArgumentList	"load_immediate ( compiler , RA , srcw )"		1672650	1					
ANR	1672743	Argument	"load_immediate ( compiler , RA , srcw )"		1672650	0					
ANR	1672744	CallExpression	"load_immediate ( compiler , RA , srcw )"		1672650	0					
ANR	1672745	Callee	load_immediate		1672650	0					
ANR	1672746	Identifier	load_immediate		1672650	0					
ANR	1672747	ArgumentList	compiler		1672650	1					
ANR	1672748	Argument	compiler		1672650	0					
ANR	1672749	Identifier	compiler		1672650	0					
ANR	1672750	Argument	RA		1672650	1					
ANR	1672751	Identifier	RA		1672650	0					
ANR	1672752	Argument	srcw		1672650	2					
ANR	1672753	Identifier	srcw		1672650	0					
ANR	1672754	ReturnStatement	return JR ( RA ) ;	1617:1:49738:49751	1672650	4	True				
ANR	1672755	CallExpression	JR ( RA )		1672650	0					
ANR	1672756	Callee	JR		1672650	0					
ANR	1672757	Identifier	JR		1672650	0					
ANR	1672758	ArgumentList	RA		1672650	1					
ANR	1672759	Argument	RA		1672650	0					
ANR	1672760	Identifier	RA		1672650	0					
ANR	1672761	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1672650	1					
ANR	1672762	Identifier	sljit_emit_fast_return		1672650	2					
ANR	1672763	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1672650	3					
ANR	1672764	Parameter	struct sljit_compiler * compiler	1602:57:49332:49362	1672650	0	True				
ANR	1672765	ParameterType	struct sljit_compiler *		1672650	0					
ANR	1672766	Identifier	compiler		1672650	1					
ANR	1672767	Parameter	sljit_si src	1602:90:49365:49376	1672650	1	True				
ANR	1672768	ParameterType	sljit_si		1672650	0					
ANR	1672769	Identifier	src		1672650	1					
ANR	1672770	Parameter	sljit_sw srcw	1602:104:49379:49391	1672650	2	True				
ANR	1672771	ParameterType	sljit_sw		1672650	0					
ANR	1672772	Identifier	srcw		1672650	1					
ANR	1672773	CFGEntryNode	ENTRY		1672650		True				
ANR	1672774	CFGExitNode	EXIT		1672650		True				
ANR	1672775	Symbol	ADD		1672650						
ANR	1672776	Symbol	ZERO		1672650						
ANR	1672777	Symbol	FAST_IS_REG		1672650						
ANR	1672778	Symbol	LOAD_DATA		1672650						
ANR	1672779	Symbol	src		1672650						
ANR	1672780	Symbol	srcw		1672650						
ANR	1672781	Symbol	SLJIT_MEM		1672650						
ANR	1672782	Symbol	JR		1672650						
ANR	1672783	Symbol	reg_map		1672650						
ANR	1672784	Symbol	emit_op_mem		1672650						
ANR	1672785	Symbol	* reg_map		1672650						
ANR	1672786	Symbol	* src		1672650						
ANR	1672787	Symbol	RA		1672650						
ANR	1672788	Symbol	SLJIT_IMM		1672650						
ANR	1672789	Symbol	load_immediate		1672650						
ANR	1672790	Symbol	compiler		1672650						
ANR	1672791	Symbol	WORD_DATA		1672650						
ANR	1672792	Function	emit_single_op	1620:0:49756:59620							
ANR	1672793	FunctionDef	"emit_single_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_sw src2)"		1672792	0					
ANR	1672794	CompoundStatement		1621:0:49906:59620	1672792	0					
ANR	1672795	IdentifierDeclStatement	sljit_si overflow_ra = 0 ;	1622:1:49909:49933	1672792	0	True				
ANR	1672796	IdentifierDecl	overflow_ra = 0		1672792	0					
ANR	1672797	IdentifierDeclType	sljit_si		1672792	0					
ANR	1672798	Identifier	overflow_ra		1672792	1					
ANR	1672799	AssignmentExpression	overflow_ra = 0		1672792	2		=			
ANR	1672800	Identifier	overflow_ra		1672792	0					
ANR	1672801	PrimaryExpression	0		1672792	1					
ANR	1672802	SwitchStatement	switch ( GET_OPCODE ( op ) )		1672792	1					
ANR	1672803	Condition	GET_OPCODE ( op )	1624:9:49945:49958	1672792	0	True				
ANR	1672804	CallExpression	GET_OPCODE ( op )		1672792	0					
ANR	1672805	Callee	GET_OPCODE		1672792	0					
ANR	1672806	Identifier	GET_OPCODE		1672792	0					
ANR	1672807	ArgumentList	op		1672792	1					
ANR	1672808	Argument	op		1672792	0					
ANR	1672809	Identifier	op		1672792	0					
ANR	1672810	CompoundStatement		4:25:54:54	1672792	1					
ANR	1672811	Label	case SLJIT_MOV :	1625:1:49964:49978	1672792	0	True				
ANR	1672812	Identifier	SLJIT_MOV		1672792	0					
ANR	1672813	Label	case SLJIT_MOV_P :	1626:1:49981:49997	1672792	1	True				
ANR	1672814	Identifier	SLJIT_MOV_P		1672792	0					
ANR	1672815	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1627:2:50001:50054	1672792	2	True				
ANR	1672816	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1672792	0					
ANR	1672817	Callee	SLJIT_ASSERT		1672792	0					
ANR	1672818	Identifier	SLJIT_ASSERT		1672792	0					
ANR	1672819	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	1					
ANR	1672820	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0					
ANR	1672821	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0		&&			
ANR	1672822	EqualityExpression	src1 == TMP_REG1		1672792	0		==			
ANR	1672823	Identifier	src1		1672792	0					
ANR	1672824	Identifier	TMP_REG1		1672792	1					
ANR	1672825	UnaryOperationExpression	! ( flags & SRC2_IMM )		1672792	1					
ANR	1672826	UnaryOperator	!		1672792	0					
ANR	1672827	BitAndExpression	flags & SRC2_IMM		1672792	1		&			
ANR	1672828	Identifier	flags		1672792	0					
ANR	1672829	Identifier	SRC2_IMM		1672792	1					
ANR	1672830	IfStatement	if ( dst != src2 )		1672792	3					
ANR	1672831	Condition	dst != src2	1628:6:50062:50072	1672792	0	True				
ANR	1672832	EqualityExpression	dst != src2		1672792	0		!=			
ANR	1672833	Identifier	dst		1672792	0					
ANR	1672834	Identifier	src2		1672792	1					
ANR	1672835	ReturnStatement	"return ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO ) ;"	1629:3:50078:50123	1672792	1	True				
ANR	1672836	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src2 ] , ZERO )"		1672792	0					
ANR	1672837	Callee	ADD		1672792	0					
ANR	1672838	Identifier	ADD		1672792	0					
ANR	1672839	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1672840	Argument	reg_map [ dst ]		1672792	0					
ANR	1672841	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1672842	Identifier	reg_map		1672792	0					
ANR	1672843	Identifier	dst		1672792	1					
ANR	1672844	Argument	reg_map [ src2 ]		1672792	1					
ANR	1672845	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1672846	Identifier	reg_map		1672792	0					
ANR	1672847	Identifier	src2		1672792	1					
ANR	1672848	Argument	ZERO		1672792	2					
ANR	1672849	Identifier	ZERO		1672792	0					
ANR	1672850	ReturnStatement	return SLJIT_SUCCESS ;	1630:2:50127:50147	1672792	4	True				
ANR	1672851	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1672852	Label	case SLJIT_MOV_UI :	1632:1:50151:50168	1672792	5	True				
ANR	1672853	Identifier	SLJIT_MOV_UI		1672792	0					
ANR	1672854	Label	case SLJIT_MOV_SI :	1633:1:50171:50188	1672792	6	True				
ANR	1672855	Identifier	SLJIT_MOV_SI		1672792	0					
ANR	1672856	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1634:2:50192:50245	1672792	7	True				
ANR	1672857	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1672792	0					
ANR	1672858	Callee	SLJIT_ASSERT		1672792	0					
ANR	1672859	Identifier	SLJIT_ASSERT		1672792	0					
ANR	1672860	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	1					
ANR	1672861	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0					
ANR	1672862	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0		&&			
ANR	1672863	EqualityExpression	src1 == TMP_REG1		1672792	0		==			
ANR	1672864	Identifier	src1		1672792	0					
ANR	1672865	Identifier	TMP_REG1		1672792	1					
ANR	1672866	UnaryOperationExpression	! ( flags & SRC2_IMM )		1672792	1					
ANR	1672867	UnaryOperator	!		1672792	0					
ANR	1672868	BitAndExpression	flags & SRC2_IMM		1672792	1		&			
ANR	1672869	Identifier	flags		1672792	0					
ANR	1672870	Identifier	SRC2_IMM		1672792	1					
ANR	1672871	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1672792	8					
ANR	1672872	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	1635:6:50253:50314	1672792	0	True				
ANR	1672873	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1672792	0		==			
ANR	1672874	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1672792	0		&			
ANR	1672875	Identifier	flags		1672792	0					
ANR	1672876	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1672792	1		|			
ANR	1672877	Identifier	REG_DEST		1672792	0					
ANR	1672878	Identifier	REG2_SOURCE		1672792	1					
ANR	1672879	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1672792	1		|			
ANR	1672880	Identifier	REG_DEST		1672792	0					
ANR	1672881	Identifier	REG2_SOURCE		1672792	1					
ANR	1672882	CompoundStatement		15:70:410:410	1672792	1					
ANR	1672883	IfStatement	if ( op == SLJIT_MOV_SI )		1672792	0					
ANR	1672884	Condition	op == SLJIT_MOV_SI	1636:7:50326:50343	1672792	0	True				
ANR	1672885	EqualityExpression	op == SLJIT_MOV_SI		1672792	0		==			
ANR	1672886	Identifier	op		1672792	0					
ANR	1672887	Identifier	SLJIT_MOV_SI		1672792	1					
ANR	1672888	ReturnStatement	"return BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 ) ;"	1637:4:50350:50399	1672792	1	True				
ANR	1672889	CallExpression	"BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 )"		1672792	0					
ANR	1672890	Callee	BFEXTS		1672792	0					
ANR	1672891	Identifier	BFEXTS		1672792	0					
ANR	1672892	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1672893	Argument	reg_map [ dst ]		1672792	0					
ANR	1672894	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1672895	Identifier	reg_map		1672792	0					
ANR	1672896	Identifier	dst		1672792	1					
ANR	1672897	Argument	reg_map [ src2 ]		1672792	1					
ANR	1672898	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1672899	Identifier	reg_map		1672792	0					
ANR	1672900	Identifier	src2		1672792	1					
ANR	1672901	Argument	0		1672792	2					
ANR	1672902	PrimaryExpression	0		1672792	0					
ANR	1672903	Argument	31		1672792	3					
ANR	1672904	PrimaryExpression	31		1672792	0					
ANR	1672905	ReturnStatement	"return BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 ) ;"	1639:2:50404:50453	1672792	1	True				
ANR	1672906	CallExpression	"BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 31 )"		1672792	0					
ANR	1672907	Callee	BFEXTU		1672792	0					
ANR	1672908	Identifier	BFEXTU		1672792	0					
ANR	1672909	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1672910	Argument	reg_map [ dst ]		1672792	0					
ANR	1672911	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1672912	Identifier	reg_map		1672792	0					
ANR	1672913	Identifier	dst		1672792	1					
ANR	1672914	Argument	reg_map [ src2 ]		1672792	1					
ANR	1672915	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1672916	Identifier	reg_map		1672792	0					
ANR	1672917	Identifier	src2		1672792	1					
ANR	1672918	Argument	0		1672792	2					
ANR	1672919	PrimaryExpression	0		1672792	0					
ANR	1672920	Argument	31		1672792	3					
ANR	1672921	PrimaryExpression	31		1672792	0					
ANR	1672922	ElseStatement	else		1672792	0					
ANR	1672923	IfStatement	if ( dst != src2 )		1672792	0					
ANR	1672924	Condition	dst != src2	1640:13:50468:50478	1672792	0	True				
ANR	1672925	EqualityExpression	dst != src2		1672792	0		!=			
ANR	1672926	Identifier	dst		1672792	0					
ANR	1672927	Identifier	src2		1672792	1					
ANR	1672928	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1641:3:50484:50503	1672792	1	True				
ANR	1672929	CallExpression	SLJIT_ASSERT_STOP ( )		1672792	0					
ANR	1672930	Callee	SLJIT_ASSERT_STOP		1672792	0					
ANR	1672931	Identifier	SLJIT_ASSERT_STOP		1672792	0					
ANR	1672932	ArgumentList			1672792	1					
ANR	1672933	ReturnStatement	return SLJIT_SUCCESS ;	1643:2:50508:50528	1672792	9	True				
ANR	1672934	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1672935	Label	case SLJIT_MOV_UB :	1645:1:50532:50549	1672792	10	True				
ANR	1672936	Identifier	SLJIT_MOV_UB		1672792	0					
ANR	1672937	Label	case SLJIT_MOV_SB :	1646:1:50552:50569	1672792	11	True				
ANR	1672938	Identifier	SLJIT_MOV_SB		1672792	0					
ANR	1672939	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1647:2:50573:50626	1672792	12	True				
ANR	1672940	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1672792	0					
ANR	1672941	Callee	SLJIT_ASSERT		1672792	0					
ANR	1672942	Identifier	SLJIT_ASSERT		1672792	0					
ANR	1672943	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	1					
ANR	1672944	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0					
ANR	1672945	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0		&&			
ANR	1672946	EqualityExpression	src1 == TMP_REG1		1672792	0		==			
ANR	1672947	Identifier	src1		1672792	0					
ANR	1672948	Identifier	TMP_REG1		1672792	1					
ANR	1672949	UnaryOperationExpression	! ( flags & SRC2_IMM )		1672792	1					
ANR	1672950	UnaryOperator	!		1672792	0					
ANR	1672951	BitAndExpression	flags & SRC2_IMM		1672792	1		&			
ANR	1672952	Identifier	flags		1672792	0					
ANR	1672953	Identifier	SRC2_IMM		1672792	1					
ANR	1672954	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1672792	13					
ANR	1672955	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	1648:6:50634:50695	1672792	0	True				
ANR	1672956	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1672792	0		==			
ANR	1672957	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1672792	0		&			
ANR	1672958	Identifier	flags		1672792	0					
ANR	1672959	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1672792	1		|			
ANR	1672960	Identifier	REG_DEST		1672792	0					
ANR	1672961	Identifier	REG2_SOURCE		1672792	1					
ANR	1672962	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1672792	1		|			
ANR	1672963	Identifier	REG_DEST		1672792	0					
ANR	1672964	Identifier	REG2_SOURCE		1672792	1					
ANR	1672965	CompoundStatement		28:70:791:791	1672792	1					
ANR	1672966	IfStatement	if ( op == SLJIT_MOV_SB )		1672792	0					
ANR	1672967	Condition	op == SLJIT_MOV_SB	1649:7:50707:50724	1672792	0	True				
ANR	1672968	EqualityExpression	op == SLJIT_MOV_SB		1672792	0		==			
ANR	1672969	Identifier	op		1672792	0					
ANR	1672970	Identifier	SLJIT_MOV_SB		1672792	1					
ANR	1672971	ReturnStatement	"return BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 ) ;"	1650:4:50731:50779	1672792	1	True				
ANR	1672972	CallExpression	"BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 )"		1672792	0					
ANR	1672973	Callee	BFEXTS		1672792	0					
ANR	1672974	Identifier	BFEXTS		1672792	0					
ANR	1672975	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1672976	Argument	reg_map [ dst ]		1672792	0					
ANR	1672977	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1672978	Identifier	reg_map		1672792	0					
ANR	1672979	Identifier	dst		1672792	1					
ANR	1672980	Argument	reg_map [ src2 ]		1672792	1					
ANR	1672981	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1672982	Identifier	reg_map		1672792	0					
ANR	1672983	Identifier	src2		1672792	1					
ANR	1672984	Argument	0		1672792	2					
ANR	1672985	PrimaryExpression	0		1672792	0					
ANR	1672986	Argument	7		1672792	3					
ANR	1672987	PrimaryExpression	7		1672792	0					
ANR	1672988	ReturnStatement	"return BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 ) ;"	1652:3:50785:50833	1672792	1	True				
ANR	1672989	CallExpression	"BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 7 )"		1672792	0					
ANR	1672990	Callee	BFEXTU		1672792	0					
ANR	1672991	Identifier	BFEXTU		1672792	0					
ANR	1672992	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1672993	Argument	reg_map [ dst ]		1672792	0					
ANR	1672994	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1672995	Identifier	reg_map		1672792	0					
ANR	1672996	Identifier	dst		1672792	1					
ANR	1672997	Argument	reg_map [ src2 ]		1672792	1					
ANR	1672998	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1672999	Identifier	reg_map		1672792	0					
ANR	1673000	Identifier	src2		1672792	1					
ANR	1673001	Argument	0		1672792	2					
ANR	1673002	PrimaryExpression	0		1672792	0					
ANR	1673003	Argument	7		1672792	3					
ANR	1673004	PrimaryExpression	7		1672792	0					
ANR	1673005	ElseStatement	else		1672792	0					
ANR	1673006	IfStatement	if ( dst != src2 )		1672792	0					
ANR	1673007	Condition	dst != src2	1653:13:50848:50858	1672792	0	True				
ANR	1673008	EqualityExpression	dst != src2		1672792	0		!=			
ANR	1673009	Identifier	dst		1672792	0					
ANR	1673010	Identifier	src2		1672792	1					
ANR	1673011	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1654:3:50864:50883	1672792	1	True				
ANR	1673012	CallExpression	SLJIT_ASSERT_STOP ( )		1672792	0					
ANR	1673013	Callee	SLJIT_ASSERT_STOP		1672792	0					
ANR	1673014	Identifier	SLJIT_ASSERT_STOP		1672792	0					
ANR	1673015	ArgumentList			1672792	1					
ANR	1673016	ReturnStatement	return SLJIT_SUCCESS ;	1656:2:50888:50908	1672792	14	True				
ANR	1673017	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1673018	Label	case SLJIT_MOV_UH :	1658:1:50912:50929	1672792	15	True				
ANR	1673019	Identifier	SLJIT_MOV_UH		1672792	0					
ANR	1673020	Label	case SLJIT_MOV_SH :	1659:1:50932:50949	1672792	16	True				
ANR	1673021	Identifier	SLJIT_MOV_SH		1672792	0					
ANR	1673022	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1660:2:50953:51006	1672792	17	True				
ANR	1673023	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1672792	0					
ANR	1673024	Callee	SLJIT_ASSERT		1672792	0					
ANR	1673025	Identifier	SLJIT_ASSERT		1672792	0					
ANR	1673026	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	1					
ANR	1673027	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0					
ANR	1673028	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0		&&			
ANR	1673029	EqualityExpression	src1 == TMP_REG1		1672792	0		==			
ANR	1673030	Identifier	src1		1672792	0					
ANR	1673031	Identifier	TMP_REG1		1672792	1					
ANR	1673032	UnaryOperationExpression	! ( flags & SRC2_IMM )		1672792	1					
ANR	1673033	UnaryOperator	!		1672792	0					
ANR	1673034	BitAndExpression	flags & SRC2_IMM		1672792	1		&			
ANR	1673035	Identifier	flags		1672792	0					
ANR	1673036	Identifier	SRC2_IMM		1672792	1					
ANR	1673037	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1672792	18					
ANR	1673038	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	1661:6:51014:51075	1672792	0	True				
ANR	1673039	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1672792	0		==			
ANR	1673040	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1672792	0		&			
ANR	1673041	Identifier	flags		1672792	0					
ANR	1673042	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1672792	1		|			
ANR	1673043	Identifier	REG_DEST		1672792	0					
ANR	1673044	Identifier	REG2_SOURCE		1672792	1					
ANR	1673045	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1672792	1		|			
ANR	1673046	Identifier	REG_DEST		1672792	0					
ANR	1673047	Identifier	REG2_SOURCE		1672792	1					
ANR	1673048	CompoundStatement		41:70:1171:1171	1672792	1					
ANR	1673049	IfStatement	if ( op == SLJIT_MOV_SH )		1672792	0					
ANR	1673050	Condition	op == SLJIT_MOV_SH	1662:7:51087:51104	1672792	0	True				
ANR	1673051	EqualityExpression	op == SLJIT_MOV_SH		1672792	0		==			
ANR	1673052	Identifier	op		1672792	0					
ANR	1673053	Identifier	SLJIT_MOV_SH		1672792	1					
ANR	1673054	ReturnStatement	"return BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 ) ;"	1663:4:51111:51160	1672792	1	True				
ANR	1673055	CallExpression	"BFEXTS ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 )"		1672792	0					
ANR	1673056	Callee	BFEXTS		1672792	0					
ANR	1673057	Identifier	BFEXTS		1672792	0					
ANR	1673058	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673059	Argument	reg_map [ dst ]		1672792	0					
ANR	1673060	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673061	Identifier	reg_map		1672792	0					
ANR	1673062	Identifier	dst		1672792	1					
ANR	1673063	Argument	reg_map [ src2 ]		1672792	1					
ANR	1673064	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673065	Identifier	reg_map		1672792	0					
ANR	1673066	Identifier	src2		1672792	1					
ANR	1673067	Argument	0		1672792	2					
ANR	1673068	PrimaryExpression	0		1672792	0					
ANR	1673069	Argument	15		1672792	3					
ANR	1673070	PrimaryExpression	15		1672792	0					
ANR	1673071	ReturnStatement	"return BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 ) ;"	1665:3:51166:51215	1672792	1	True				
ANR	1673072	CallExpression	"BFEXTU ( reg_map [ dst ] , reg_map [ src2 ] , 0 , 15 )"		1672792	0					
ANR	1673073	Callee	BFEXTU		1672792	0					
ANR	1673074	Identifier	BFEXTU		1672792	0					
ANR	1673075	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673076	Argument	reg_map [ dst ]		1672792	0					
ANR	1673077	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673078	Identifier	reg_map		1672792	0					
ANR	1673079	Identifier	dst		1672792	1					
ANR	1673080	Argument	reg_map [ src2 ]		1672792	1					
ANR	1673081	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673082	Identifier	reg_map		1672792	0					
ANR	1673083	Identifier	src2		1672792	1					
ANR	1673084	Argument	0		1672792	2					
ANR	1673085	PrimaryExpression	0		1672792	0					
ANR	1673086	Argument	15		1672792	3					
ANR	1673087	PrimaryExpression	15		1672792	0					
ANR	1673088	ElseStatement	else		1672792	0					
ANR	1673089	IfStatement	if ( dst != src2 )		1672792	0					
ANR	1673090	Condition	dst != src2	1666:13:51230:51240	1672792	0	True				
ANR	1673091	EqualityExpression	dst != src2		1672792	0		!=			
ANR	1673092	Identifier	dst		1672792	0					
ANR	1673093	Identifier	src2		1672792	1					
ANR	1673094	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1667:3:51246:51265	1672792	1	True				
ANR	1673095	CallExpression	SLJIT_ASSERT_STOP ( )		1672792	0					
ANR	1673096	Callee	SLJIT_ASSERT_STOP		1672792	0					
ANR	1673097	Identifier	SLJIT_ASSERT_STOP		1672792	0					
ANR	1673098	ArgumentList			1672792	1					
ANR	1673099	ReturnStatement	return SLJIT_SUCCESS ;	1669:2:51270:51290	1672792	19	True				
ANR	1673100	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1673101	Label	case SLJIT_NOT :	1671:1:51294:51308	1672792	20	True				
ANR	1673102	Identifier	SLJIT_NOT		1672792	0					
ANR	1673103	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1672:2:51312:51365	1672792	21	True				
ANR	1673104	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1672792	0					
ANR	1673105	Callee	SLJIT_ASSERT		1672792	0					
ANR	1673106	Identifier	SLJIT_ASSERT		1672792	0					
ANR	1673107	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	1					
ANR	1673108	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0					
ANR	1673109	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0		&&			
ANR	1673110	EqualityExpression	src1 == TMP_REG1		1672792	0		==			
ANR	1673111	Identifier	src1		1672792	0					
ANR	1673112	Identifier	TMP_REG1		1672792	1					
ANR	1673113	UnaryOperationExpression	! ( flags & SRC2_IMM )		1672792	1					
ANR	1673114	UnaryOperator	!		1672792	0					
ANR	1673115	BitAndExpression	flags & SRC2_IMM		1672792	1		&			
ANR	1673116	Identifier	flags		1672792	0					
ANR	1673117	Identifier	SRC2_IMM		1672792	1					
ANR	1673118	IfStatement	if ( op & SLJIT_SET_E )		1672792	22					
ANR	1673119	Condition	op & SLJIT_SET_E	1673:6:51373:51388	1672792	0	True				
ANR	1673120	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1673121	Identifier	op		1672792	0					
ANR	1673122	Identifier	SLJIT_SET_E		1672792	1					
ANR	1673123	ExpressionStatement	"FAIL_IF ( NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] ) )"	1674:3:51394:51448	1672792	1	True				
ANR	1673124	CallExpression	"FAIL_IF ( NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673125	Callee	FAIL_IF		1672792	0					
ANR	1673126	Identifier	FAIL_IF		1672792	0					
ANR	1673127	ArgumentList	"NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673128	Argument	"NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673129	CallExpression	"NOR ( EQUAL_FLAG , reg_map [ src2 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673130	Callee	NOR		1672792	0					
ANR	1673131	Identifier	NOR		1672792	0					
ANR	1673132	ArgumentList	EQUAL_FLAG		1672792	1					
ANR	1673133	Argument	EQUAL_FLAG		1672792	0					
ANR	1673134	Identifier	EQUAL_FLAG		1672792	0					
ANR	1673135	Argument	reg_map [ src2 ]		1672792	1					
ANR	1673136	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673137	Identifier	reg_map		1672792	0					
ANR	1673138	Identifier	src2		1672792	1					
ANR	1673139	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673140	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673141	Identifier	reg_map		1672792	0					
ANR	1673142	Identifier	src2		1672792	1					
ANR	1673143	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	23					
ANR	1673144	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1675:6:51456:51479	1672792	0	True				
ANR	1673145	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1673146	Callee	CHECK_FLAGS		1672792	0					
ANR	1673147	Identifier	CHECK_FLAGS		1672792	0					
ANR	1673148	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1673149	Argument	SLJIT_SET_E		1672792	0					
ANR	1673150	Identifier	SLJIT_SET_E		1672792	0					
ANR	1673151	ExpressionStatement	"FAIL_IF ( NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] ) )"	1676:3:51485:51541	1672792	1	True				
ANR	1673152	CallExpression	"FAIL_IF ( NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673153	Callee	FAIL_IF		1672792	0					
ANR	1673154	Identifier	FAIL_IF		1672792	0					
ANR	1673155	ArgumentList	"NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673156	Argument	"NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673157	CallExpression	"NOR ( reg_map [ dst ] , reg_map [ src2 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673158	Callee	NOR		1672792	0					
ANR	1673159	Identifier	NOR		1672792	0					
ANR	1673160	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673161	Argument	reg_map [ dst ]		1672792	0					
ANR	1673162	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673163	Identifier	reg_map		1672792	0					
ANR	1673164	Identifier	dst		1672792	1					
ANR	1673165	Argument	reg_map [ src2 ]		1672792	1					
ANR	1673166	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673167	Identifier	reg_map		1672792	0					
ANR	1673168	Identifier	src2		1672792	1					
ANR	1673169	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673170	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673171	Identifier	reg_map		1672792	0					
ANR	1673172	Identifier	src2		1672792	1					
ANR	1673173	ReturnStatement	return SLJIT_SUCCESS ;	1678:2:51546:51566	1672792	24	True				
ANR	1673174	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1673175	Label	case SLJIT_CLZ :	1680:1:51570:51584	1672792	25	True				
ANR	1673176	Identifier	SLJIT_CLZ		1672792	0					
ANR	1673177	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )	1681:2:51588:51641	1672792	26	True				
ANR	1673178	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & SRC2_IMM ) )		1672792	0					
ANR	1673179	Callee	SLJIT_ASSERT		1672792	0					
ANR	1673180	Identifier	SLJIT_ASSERT		1672792	0					
ANR	1673181	ArgumentList	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	1					
ANR	1673182	Argument	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0					
ANR	1673183	AndExpression	src1 == TMP_REG1 && ! ( flags & SRC2_IMM )		1672792	0		&&			
ANR	1673184	EqualityExpression	src1 == TMP_REG1		1672792	0		==			
ANR	1673185	Identifier	src1		1672792	0					
ANR	1673186	Identifier	TMP_REG1		1672792	1					
ANR	1673187	UnaryOperationExpression	! ( flags & SRC2_IMM )		1672792	1					
ANR	1673188	UnaryOperator	!		1672792	0					
ANR	1673189	BitAndExpression	flags & SRC2_IMM		1672792	1		&			
ANR	1673190	Identifier	flags		1672792	0					
ANR	1673191	Identifier	SRC2_IMM		1672792	1					
ANR	1673192	IfStatement	if ( op & SLJIT_SET_E )		1672792	27					
ANR	1673193	Condition	op & SLJIT_SET_E	1682:6:51649:51664	1672792	0	True				
ANR	1673194	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1673195	Identifier	op		1672792	0					
ANR	1673196	Identifier	SLJIT_SET_E		1672792	1					
ANR	1673197	ExpressionStatement	"FAIL_IF ( CLZ ( EQUAL_FLAG , reg_map [ src2 ] ) )"	1683:3:51670:51709	1672792	1	True				
ANR	1673198	CallExpression	"FAIL_IF ( CLZ ( EQUAL_FLAG , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673199	Callee	FAIL_IF		1672792	0					
ANR	1673200	Identifier	FAIL_IF		1672792	0					
ANR	1673201	ArgumentList	"CLZ ( EQUAL_FLAG , reg_map [ src2 ] )"		1672792	1					
ANR	1673202	Argument	"CLZ ( EQUAL_FLAG , reg_map [ src2 ] )"		1672792	0					
ANR	1673203	CallExpression	"CLZ ( EQUAL_FLAG , reg_map [ src2 ] )"		1672792	0					
ANR	1673204	Callee	CLZ		1672792	0					
ANR	1673205	Identifier	CLZ		1672792	0					
ANR	1673206	ArgumentList	EQUAL_FLAG		1672792	1					
ANR	1673207	Argument	EQUAL_FLAG		1672792	0					
ANR	1673208	Identifier	EQUAL_FLAG		1672792	0					
ANR	1673209	Argument	reg_map [ src2 ]		1672792	1					
ANR	1673210	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673211	Identifier	reg_map		1672792	0					
ANR	1673212	Identifier	src2		1672792	1					
ANR	1673213	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	28					
ANR	1673214	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1684:6:51717:51740	1672792	0	True				
ANR	1673215	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1673216	Callee	CHECK_FLAGS		1672792	0					
ANR	1673217	Identifier	CHECK_FLAGS		1672792	0					
ANR	1673218	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1673219	Argument	SLJIT_SET_E		1672792	0					
ANR	1673220	Identifier	SLJIT_SET_E		1672792	0					
ANR	1673221	ExpressionStatement	"FAIL_IF ( CLZ ( reg_map [ dst ] , reg_map [ src2 ] ) )"	1685:3:51746:51787	1672792	1	True				
ANR	1673222	CallExpression	"FAIL_IF ( CLZ ( reg_map [ dst ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673223	Callee	FAIL_IF		1672792	0					
ANR	1673224	Identifier	FAIL_IF		1672792	0					
ANR	1673225	ArgumentList	"CLZ ( reg_map [ dst ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673226	Argument	"CLZ ( reg_map [ dst ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673227	CallExpression	"CLZ ( reg_map [ dst ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673228	Callee	CLZ		1672792	0					
ANR	1673229	Identifier	CLZ		1672792	0					
ANR	1673230	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673231	Argument	reg_map [ dst ]		1672792	0					
ANR	1673232	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673233	Identifier	reg_map		1672792	0					
ANR	1673234	Identifier	dst		1672792	1					
ANR	1673235	Argument	reg_map [ src2 ]		1672792	1					
ANR	1673236	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673237	Identifier	reg_map		1672792	0					
ANR	1673238	Identifier	src2		1672792	1					
ANR	1673239	ReturnStatement	return SLJIT_SUCCESS ;	1687:2:51792:51812	1672792	29	True				
ANR	1673240	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1673241	Label	case SLJIT_ADD :	1689:1:51816:51830	1672792	30	True				
ANR	1673242	Identifier	SLJIT_ADD		1672792	0					
ANR	1673243	IfStatement	if ( flags & SRC2_IMM )		1672792	31					
ANR	1673244	Condition	flags & SRC2_IMM	1690:6:51838:51853	1672792	0	True				
ANR	1673245	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1673246	Identifier	flags		1672792	0					
ANR	1673247	Identifier	SRC2_IMM		1672792	1					
ANR	1673248	CompoundStatement		70:24:1949:1949	1672792	1					
ANR	1673249	IfStatement	if ( op & SLJIT_SET_O )		1672792	0					
ANR	1673250	Condition	op & SLJIT_SET_O	1691:7:51865:51880	1672792	0	True				
ANR	1673251	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1673252	Identifier	op		1672792	0					
ANR	1673253	Identifier	SLJIT_SET_O		1672792	1					
ANR	1673254	CompoundStatement		71:25:1976:1976	1672792	1					
ANR	1673255	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"	1692:4:51889:51933	1672792	0	True				
ANR	1673256	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"		1672792	0					
ANR	1673257	Callee	FAIL_IF		1672792	0					
ANR	1673258	Identifier	FAIL_IF		1672792	0					
ANR	1673259	ArgumentList	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1672792	1					
ANR	1673260	Argument	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1672792	0					
ANR	1673261	CallExpression	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1672792	0					
ANR	1673262	Callee	SHRUI		1672792	0					
ANR	1673263	Identifier	SHRUI		1672792	0					
ANR	1673264	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673265	Argument	TMP_EREG1		1672792	0					
ANR	1673266	Identifier	TMP_EREG1		1672792	0					
ANR	1673267	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673268	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673269	Identifier	reg_map		1672792	0					
ANR	1673270	Identifier	src1		1672792	1					
ANR	1673271	Argument	63		1672792	2					
ANR	1673272	PrimaryExpression	63		1672792	0					
ANR	1673273	IfStatement	if ( src2 < 0 )		1672792	1					
ANR	1673274	Condition	src2 < 0	1693:8:51943:51950	1672792	0	True				
ANR	1673275	RelationalExpression	src2 < 0		1672792	0		<			
ANR	1673276	Identifier	src2		1672792	0					
ANR	1673277	PrimaryExpression	0		1672792	1					
ANR	1673278	ExpressionStatement	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"	1694:5:51958:51996	1672792	1	True				
ANR	1673279	CallExpression	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"		1672792	0					
ANR	1673280	Callee	FAIL_IF		1672792	0					
ANR	1673281	Identifier	FAIL_IF		1672792	0					
ANR	1673282	ArgumentList	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1672792	1					
ANR	1673283	Argument	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1672792	0					
ANR	1673284	CallExpression	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1672792	0					
ANR	1673285	Callee	XORI		1672792	0					
ANR	1673286	Identifier	XORI		1672792	0					
ANR	1673287	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673288	Argument	TMP_EREG1		1672792	0					
ANR	1673289	Identifier	TMP_EREG1		1672792	0					
ANR	1673290	Argument	TMP_EREG1		1672792	1					
ANR	1673291	Identifier	TMP_EREG1		1672792	0					
ANR	1673292	Argument	1		1672792	2					
ANR	1673293	PrimaryExpression	1		1672792	0					
ANR	1673294	IfStatement	if ( op & SLJIT_SET_E )		1672792	1					
ANR	1673295	Condition	op & SLJIT_SET_E	1697:7:52011:52026	1672792	0	True				
ANR	1673296	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1673297	Identifier	op		1672792	0					
ANR	1673298	Identifier	SLJIT_SET_E		1672792	1					
ANR	1673299	ExpressionStatement	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 ) )"	1698:4:52033:52080	1672792	1	True				
ANR	1673300	CallExpression	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 ) )"		1672792	0					
ANR	1673301	Callee	FAIL_IF		1672792	0					
ANR	1673302	Identifier	FAIL_IF		1672792	0					
ANR	1673303	ArgumentList	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 )"		1672792	1					
ANR	1673304	Argument	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673305	CallExpression	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673306	Callee	ADDLI		1672792	0					
ANR	1673307	Identifier	ADDLI		1672792	0					
ANR	1673308	ArgumentList	EQUAL_FLAG		1672792	1					
ANR	1673309	Argument	EQUAL_FLAG		1672792	0					
ANR	1673310	Identifier	EQUAL_FLAG		1672792	0					
ANR	1673311	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673312	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673313	Identifier	reg_map		1672792	0					
ANR	1673314	Identifier	src1		1672792	1					
ANR	1673315	Argument	src2		1672792	2					
ANR	1673316	Identifier	src2		1672792	0					
ANR	1673317	IfStatement	if ( op & SLJIT_SET_C )		1672792	2					
ANR	1673318	Condition	op & SLJIT_SET_C	1700:7:52090:52105	1672792	0	True				
ANR	1673319	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1673320	Identifier	op		1672792	0					
ANR	1673321	Identifier	SLJIT_SET_C		1672792	1					
ANR	1673322	CompoundStatement		80:25:2201:2201	1672792	1					
ANR	1673323	IfStatement	if ( src2 >= 0 )		1672792	0					
ANR	1673324	Condition	src2 >= 0	1701:8:52118:52126	1672792	0	True				
ANR	1673325	RelationalExpression	src2 >= 0		1672792	0		>=			
ANR	1673326	Identifier	src2		1672792	0					
ANR	1673327	PrimaryExpression	0		1672792	1					
ANR	1673328	ExpressionStatement	"FAIL_IF ( ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 ) )"	1702:5:52134:52179	1672792	1	True				
ANR	1673329	CallExpression	"FAIL_IF ( ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 ) )"		1672792	0					
ANR	1673330	Callee	FAIL_IF		1672792	0					
ANR	1673331	Identifier	FAIL_IF		1672792	0					
ANR	1673332	ArgumentList	"ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 )"		1672792	1					
ANR	1673333	Argument	"ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673334	CallExpression	"ORI ( ULESS_FLAG , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673335	Callee	ORI		1672792	0					
ANR	1673336	Identifier	ORI		1672792	0					
ANR	1673337	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1673338	Argument	ULESS_FLAG		1672792	0					
ANR	1673339	Identifier	ULESS_FLAG		1672792	0					
ANR	1673340	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673341	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673342	Identifier	reg_map		1672792	0					
ANR	1673343	Identifier	src1		1672792	1					
ANR	1673344	Argument	src2		1672792	2					
ANR	1673345	Identifier	src2		1672792	0					
ANR	1673346	ElseStatement	else		1672792	0					
ANR	1673347	CompoundStatement		83:9:2283:2283	1672792	0					
ANR	1673348	ExpressionStatement	"FAIL_IF ( ADDLI ( ULESS_FLAG , ZERO , src2 ) )"	1704:5:52197:52235	1672792	0	True				
ANR	1673349	CallExpression	"FAIL_IF ( ADDLI ( ULESS_FLAG , ZERO , src2 ) )"		1672792	0					
ANR	1673350	Callee	FAIL_IF		1672792	0					
ANR	1673351	Identifier	FAIL_IF		1672792	0					
ANR	1673352	ArgumentList	"ADDLI ( ULESS_FLAG , ZERO , src2 )"		1672792	1					
ANR	1673353	Argument	"ADDLI ( ULESS_FLAG , ZERO , src2 )"		1672792	0					
ANR	1673354	CallExpression	"ADDLI ( ULESS_FLAG , ZERO , src2 )"		1672792	0					
ANR	1673355	Callee	ADDLI		1672792	0					
ANR	1673356	Identifier	ADDLI		1672792	0					
ANR	1673357	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1673358	Argument	ULESS_FLAG		1672792	0					
ANR	1673359	Identifier	ULESS_FLAG		1672792	0					
ANR	1673360	Argument	ZERO		1672792	1					
ANR	1673361	Identifier	ZERO		1672792	0					
ANR	1673362	Argument	src2		1672792	2					
ANR	1673363	Identifier	src2		1672792	0					
ANR	1673364	ExpressionStatement	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG ) )"	1705:5:52242:52290	1672792	1	True				
ANR	1673365	CallExpression	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG ) )"		1672792	0					
ANR	1673366	Callee	FAIL_IF		1672792	0					
ANR	1673367	Identifier	FAIL_IF		1672792	0					
ANR	1673368	ArgumentList	"OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG )"		1672792	1					
ANR	1673369	Argument	"OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG )"		1672792	0					
ANR	1673370	CallExpression	"OR ( ULESS_FLAG , reg_map [ src1 ] , ULESS_FLAG )"		1672792	0					
ANR	1673371	Callee	OR		1672792	0					
ANR	1673372	Identifier	OR		1672792	0					
ANR	1673373	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1673374	Argument	ULESS_FLAG		1672792	0					
ANR	1673375	Identifier	ULESS_FLAG		1672792	0					
ANR	1673376	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673377	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673378	Identifier	reg_map		1672792	0					
ANR	1673379	Identifier	src1		1672792	1					
ANR	1673380	Argument	ULESS_FLAG		1672792	2					
ANR	1673381	Identifier	ULESS_FLAG		1672792	0					
ANR	1673382	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	3					
ANR	1673383	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1710:7:52357:52380	1672792	0	True				
ANR	1673384	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1673385	Callee	CHECK_FLAGS		1672792	0					
ANR	1673386	Identifier	CHECK_FLAGS		1672792	0					
ANR	1673387	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1673388	Argument	SLJIT_SET_E		1672792	0					
ANR	1673389	Identifier	SLJIT_SET_E		1672792	0					
ANR	1673390	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"	1711:4:52387:52436	1672792	1	True				
ANR	1673391	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"		1672792	0					
ANR	1673392	Callee	FAIL_IF		1672792	0					
ANR	1673393	Identifier	FAIL_IF		1672792	0					
ANR	1673394	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1672792	1					
ANR	1673395	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673396	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673397	Callee	ADDLI		1672792	0					
ANR	1673398	Identifier	ADDLI		1672792	0					
ANR	1673399	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673400	Argument	reg_map [ dst ]		1672792	0					
ANR	1673401	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673402	Identifier	reg_map		1672792	0					
ANR	1673403	Identifier	dst		1672792	1					
ANR	1673404	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673405	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673406	Identifier	reg_map		1672792	0					
ANR	1673407	Identifier	src1		1672792	1					
ANR	1673408	Argument	src2		1672792	2					
ANR	1673409	Identifier	src2		1672792	0					
ANR	1673410	IfStatement	if ( op & SLJIT_SET_O )		1672792	4					
ANR	1673411	Condition	op & SLJIT_SET_O	1713:7:52446:52461	1672792	0	True				
ANR	1673412	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1673413	Identifier	op		1672792	0					
ANR	1673414	Identifier	SLJIT_SET_O		1672792	1					
ANR	1673415	CompoundStatement		93:25:2557:2557	1672792	1					
ANR	1673416	ExpressionStatement	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 ) )"	1714:4:52470:52517	1672792	0	True				
ANR	1673417	CallExpression	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 ) )"		1672792	0					
ANR	1673418	Callee	FAIL_IF		1672792	0					
ANR	1673419	Identifier	FAIL_IF		1672792	0					
ANR	1673420	ArgumentList	"SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 )"		1672792	1					
ANR	1673421	Argument	"SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 )"		1672792	0					
ANR	1673422	CallExpression	"SHRUI ( OVERFLOW_FLAG , reg_map [ dst ] , 63 )"		1672792	0					
ANR	1673423	Callee	SHRUI		1672792	0					
ANR	1673424	Identifier	SHRUI		1672792	0					
ANR	1673425	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1673426	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1673427	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1673428	Argument	reg_map [ dst ]		1672792	1					
ANR	1673429	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673430	Identifier	reg_map		1672792	0					
ANR	1673431	Identifier	dst		1672792	1					
ANR	1673432	Argument	63		1672792	2					
ANR	1673433	PrimaryExpression	63		1672792	0					
ANR	1673434	IfStatement	if ( src2 < 0 )		1672792	1					
ANR	1673435	Condition	src2 < 0	1716:8:52528:52535	1672792	0	True				
ANR	1673436	RelationalExpression	src2 < 0		1672792	0		<			
ANR	1673437	Identifier	src2		1672792	0					
ANR	1673438	PrimaryExpression	0		1672792	1					
ANR	1673439	ExpressionStatement	"FAIL_IF ( XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 ) )"	1717:5:52543:52589	1672792	1	True				
ANR	1673440	CallExpression	"FAIL_IF ( XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 ) )"		1672792	0					
ANR	1673441	Callee	FAIL_IF		1672792	0					
ANR	1673442	Identifier	FAIL_IF		1672792	0					
ANR	1673443	ArgumentList	"XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 )"		1672792	1					
ANR	1673444	Argument	"XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 )"		1672792	0					
ANR	1673445	CallExpression	"XORI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 1 )"		1672792	0					
ANR	1673446	Callee	XORI		1672792	0					
ANR	1673447	Identifier	XORI		1672792	0					
ANR	1673448	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1673449	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1673450	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1673451	Argument	OVERFLOW_FLAG		1672792	1					
ANR	1673452	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1673453	Argument	1		1672792	2					
ANR	1673454	PrimaryExpression	1		1672792	0					
ANR	1673455	ElseStatement	else		1672792	0					
ANR	1673456	CompoundStatement		99:9:2698:2698	1672792	0					
ANR	1673457	IfStatement	if ( op & SLJIT_SET_O )		1672792	0					
ANR	1673458	Condition	op & SLJIT_SET_O	1720:7:52614:52629	1672792	0	True				
ANR	1673459	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1673460	Identifier	op		1672792	0					
ANR	1673461	Identifier	SLJIT_SET_O		1672792	1					
ANR	1673462	CompoundStatement		100:25:2725:2725	1672792	1					
ANR	1673463	ExpressionStatement	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1721:4:52638:52691	1672792	0	True				
ANR	1673464	CallExpression	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673465	Callee	FAIL_IF		1672792	0					
ANR	1673466	Identifier	FAIL_IF		1672792	0					
ANR	1673467	ArgumentList	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673468	Argument	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673469	CallExpression	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673470	Callee	XOR		1672792	0					
ANR	1673471	Identifier	XOR		1672792	0					
ANR	1673472	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673473	Argument	TMP_EREG1		1672792	0					
ANR	1673474	Identifier	TMP_EREG1		1672792	0					
ANR	1673475	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673476	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673477	Identifier	reg_map		1672792	0					
ANR	1673478	Identifier	src1		1672792	1					
ANR	1673479	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673480	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673481	Identifier	reg_map		1672792	0					
ANR	1673482	Identifier	src2		1672792	1					
ANR	1673483	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"	1722:4:52697:52737	1672792	1	True				
ANR	1673484	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"		1672792	0					
ANR	1673485	Callee	FAIL_IF		1672792	0					
ANR	1673486	Identifier	FAIL_IF		1672792	0					
ANR	1673487	ArgumentList	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1672792	1					
ANR	1673488	Argument	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1672792	0					
ANR	1673489	CallExpression	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1672792	0					
ANR	1673490	Callee	SHRUI		1672792	0					
ANR	1673491	Identifier	SHRUI		1672792	0					
ANR	1673492	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673493	Argument	TMP_EREG1		1672792	0					
ANR	1673494	Identifier	TMP_EREG1		1672792	0					
ANR	1673495	Argument	TMP_EREG1		1672792	1					
ANR	1673496	Identifier	TMP_EREG1		1672792	0					
ANR	1673497	Argument	63		1672792	2					
ANR	1673498	PrimaryExpression	63		1672792	0					
ANR	1673499	IfStatement	if ( src1 != dst )		1672792	2					
ANR	1673500	Condition	src1 != dst	1724:8:52748:52758	1672792	0	True				
ANR	1673501	EqualityExpression	src1 != dst		1672792	0		!=			
ANR	1673502	Identifier	src1		1672792	0					
ANR	1673503	Identifier	dst		1672792	1					
ANR	1673504	ExpressionStatement	overflow_ra = reg_map [ src1 ]	1725:5:52766:52793	1672792	1	True				
ANR	1673505	AssignmentExpression	overflow_ra = reg_map [ src1 ]		1672792	0		=			
ANR	1673506	Identifier	overflow_ra		1672792	0					
ANR	1673507	ArrayIndexing	reg_map [ src1 ]		1672792	1					
ANR	1673508	Identifier	reg_map		1672792	0					
ANR	1673509	Identifier	src1		1672792	1					
ANR	1673510	ElseStatement	else		1672792	0					
ANR	1673511	IfStatement	if ( src2 != dst )		1672792	0					
ANR	1673512	Condition	src2 != dst	1726:13:52808:52818	1672792	0	True				
ANR	1673513	EqualityExpression	src2 != dst		1672792	0		!=			
ANR	1673514	Identifier	src2		1672792	0					
ANR	1673515	Identifier	dst		1672792	1					
ANR	1673516	ExpressionStatement	overflow_ra = reg_map [ src2 ]	1727:5:52826:52853	1672792	1	True				
ANR	1673517	AssignmentExpression	overflow_ra = reg_map [ src2 ]		1672792	0		=			
ANR	1673518	Identifier	overflow_ra		1672792	0					
ANR	1673519	ArrayIndexing	reg_map [ src2 ]		1672792	1					
ANR	1673520	Identifier	reg_map		1672792	0					
ANR	1673521	Identifier	src2		1672792	1					
ANR	1673522	ElseStatement	else		1672792	0					
ANR	1673523	CompoundStatement		108:9:2957:2957	1672792	0					
ANR	1673524	ExpressionStatement	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"	1730:5:52896:52940	1672792	0	True				
ANR	1673525	CallExpression	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"		1672792	0					
ANR	1673526	Callee	FAIL_IF		1672792	0					
ANR	1673527	Identifier	FAIL_IF		1672792	0					
ANR	1673528	ArgumentList	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	1					
ANR	1673529	Argument	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	0					
ANR	1673530	CallExpression	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	0					
ANR	1673531	Callee	ADD		1672792	0					
ANR	1673532	Identifier	ADD		1672792	0					
ANR	1673533	ArgumentList	TMP_EREG2		1672792	1					
ANR	1673534	Argument	TMP_EREG2		1672792	0					
ANR	1673535	Identifier	TMP_EREG2		1672792	0					
ANR	1673536	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673537	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673538	Identifier	reg_map		1672792	0					
ANR	1673539	Identifier	src1		1672792	1					
ANR	1673540	Argument	ZERO		1672792	2					
ANR	1673541	Identifier	ZERO		1672792	0					
ANR	1673542	ExpressionStatement	overflow_ra = TMP_EREG2	1731:5:52947:52970	1672792	1	True				
ANR	1673543	AssignmentExpression	overflow_ra = TMP_EREG2		1672792	0		=			
ANR	1673544	Identifier	overflow_ra		1672792	0					
ANR	1673545	Identifier	TMP_EREG2		1672792	1					
ANR	1673546	IfStatement	if ( op & SLJIT_SET_E )		1672792	1					
ANR	1673547	Condition	op & SLJIT_SET_E	1735:7:52991:53006	1672792	0	True				
ANR	1673548	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1673549	Identifier	op		1672792	0					
ANR	1673550	Identifier	SLJIT_SET_E		1672792	1					
ANR	1673551	ExpressionStatement	"FAIL_IF ( ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1736:4:53013:53067	1672792	1	True				
ANR	1673552	CallExpression	"FAIL_IF ( ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673553	Callee	FAIL_IF		1672792	0					
ANR	1673554	Identifier	FAIL_IF		1672792	0					
ANR	1673555	ArgumentList	"ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673556	Argument	"ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673557	CallExpression	"ADD ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673558	Callee	ADD		1672792	0					
ANR	1673559	Identifier	ADD		1672792	0					
ANR	1673560	ArgumentList	EQUAL_FLAG		1672792	1					
ANR	1673561	Argument	EQUAL_FLAG		1672792	0					
ANR	1673562	Identifier	EQUAL_FLAG		1672792	0					
ANR	1673563	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673564	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673565	Identifier	reg_map		1672792	0					
ANR	1673566	Identifier	src1		1672792	1					
ANR	1673567	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673568	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673569	Identifier	reg_map		1672792	0					
ANR	1673570	Identifier	src2		1672792	1					
ANR	1673571	IfStatement	if ( op & SLJIT_SET_C )		1672792	2					
ANR	1673572	Condition	op & SLJIT_SET_C	1738:7:53077:53092	1672792	0	True				
ANR	1673573	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1673574	Identifier	op		1672792	0					
ANR	1673575	Identifier	SLJIT_SET_C		1672792	1					
ANR	1673576	ExpressionStatement	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1739:4:53099:53151	1672792	1	True				
ANR	1673577	CallExpression	"FAIL_IF ( OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673578	Callee	FAIL_IF		1672792	0					
ANR	1673579	Identifier	FAIL_IF		1672792	0					
ANR	1673580	ArgumentList	"OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673581	Argument	"OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673582	CallExpression	"OR ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673583	Callee	OR		1672792	0					
ANR	1673584	Identifier	OR		1672792	0					
ANR	1673585	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1673586	Argument	ULESS_FLAG		1672792	0					
ANR	1673587	Identifier	ULESS_FLAG		1672792	0					
ANR	1673588	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673589	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673590	Identifier	reg_map		1672792	0					
ANR	1673591	Identifier	src1		1672792	1					
ANR	1673592	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673593	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673594	Identifier	reg_map		1672792	0					
ANR	1673595	Identifier	src2		1672792	1					
ANR	1673596	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	3					
ANR	1673597	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1742:7:53207:53230	1672792	0	True				
ANR	1673598	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1673599	Callee	CHECK_FLAGS		1672792	0					
ANR	1673600	Identifier	CHECK_FLAGS		1672792	0					
ANR	1673601	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1673602	Argument	SLJIT_SET_E		1672792	0					
ANR	1673603	Identifier	SLJIT_SET_E		1672792	0					
ANR	1673604	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1743:4:53237:53292	1672792	1	True				
ANR	1673605	CallExpression	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673606	Callee	FAIL_IF		1672792	0					
ANR	1673607	Identifier	FAIL_IF		1672792	0					
ANR	1673608	ArgumentList	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673609	Argument	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673610	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673611	Callee	ADD		1672792	0					
ANR	1673612	Identifier	ADD		1672792	0					
ANR	1673613	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673614	Argument	reg_map [ dst ]		1672792	0					
ANR	1673615	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673616	Identifier	reg_map		1672792	0					
ANR	1673617	Identifier	dst		1672792	1					
ANR	1673618	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673619	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673620	Identifier	reg_map		1672792	0					
ANR	1673621	Identifier	src1		1672792	1					
ANR	1673622	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673623	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673624	Identifier	reg_map		1672792	0					
ANR	1673625	Identifier	src2		1672792	1					
ANR	1673626	IfStatement	if ( op & SLJIT_SET_O )		1672792	4					
ANR	1673627	Condition	op & SLJIT_SET_O	1745:7:53302:53317	1672792	0	True				
ANR	1673628	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1673629	Identifier	op		1672792	0					
ANR	1673630	Identifier	SLJIT_SET_O		1672792	1					
ANR	1673631	CompoundStatement		125:25:3413:3413	1672792	1					
ANR	1673632	ExpressionStatement	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"	1746:4:53326:53379	1672792	0	True				
ANR	1673633	CallExpression	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"		1672792	0					
ANR	1673634	Callee	FAIL_IF		1672792	0					
ANR	1673635	Identifier	FAIL_IF		1672792	0					
ANR	1673636	ArgumentList	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1672792	1					
ANR	1673637	Argument	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1672792	0					
ANR	1673638	CallExpression	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1672792	0					
ANR	1673639	Callee	XOR		1672792	0					
ANR	1673640	Identifier	XOR		1672792	0					
ANR	1673641	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1673642	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1673643	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1673644	Argument	reg_map [ dst ]		1672792	1					
ANR	1673645	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673646	Identifier	reg_map		1672792	0					
ANR	1673647	Identifier	dst		1672792	1					
ANR	1673648	Argument	overflow_ra		1672792	2					
ANR	1673649	Identifier	overflow_ra		1672792	0					
ANR	1673650	ExpressionStatement	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"	1747:4:53385:53433	1672792	1	True				
ANR	1673651	CallExpression	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"		1672792	0					
ANR	1673652	Callee	FAIL_IF		1672792	0					
ANR	1673653	Identifier	FAIL_IF		1672792	0					
ANR	1673654	ArgumentList	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1672792	1					
ANR	1673655	Argument	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1672792	0					
ANR	1673656	CallExpression	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1672792	0					
ANR	1673657	Callee	SHRUI		1672792	0					
ANR	1673658	Identifier	SHRUI		1672792	0					
ANR	1673659	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1673660	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1673661	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1673662	Argument	OVERFLOW_FLAG		1672792	1					
ANR	1673663	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1673664	Argument	63		1672792	2					
ANR	1673665	PrimaryExpression	63		1672792	0					
ANR	1673666	IfStatement	if ( op & SLJIT_SET_C )		1672792	32					
ANR	1673667	Condition	op & SLJIT_SET_C	1752:6:53517:53532	1672792	0	True				
ANR	1673668	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1673669	Identifier	op		1672792	0					
ANR	1673670	Identifier	SLJIT_SET_C		1672792	1					
ANR	1673671	ExpressionStatement	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG ) )"	1753:3:53538:53591	1672792	1	True				
ANR	1673672	CallExpression	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG ) )"		1672792	0					
ANR	1673673	Callee	FAIL_IF		1672792	0					
ANR	1673674	Identifier	FAIL_IF		1672792	0					
ANR	1673675	ArgumentList	"CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG )"		1672792	1					
ANR	1673676	Argument	"CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1673677	CallExpression	"CMPLTU ( ULESS_FLAG , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1673678	Callee	CMPLTU		1672792	0					
ANR	1673679	Identifier	CMPLTU		1672792	0					
ANR	1673680	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1673681	Argument	ULESS_FLAG		1672792	0					
ANR	1673682	Identifier	ULESS_FLAG		1672792	0					
ANR	1673683	Argument	reg_map [ dst ]		1672792	1					
ANR	1673684	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673685	Identifier	reg_map		1672792	0					
ANR	1673686	Identifier	dst		1672792	1					
ANR	1673687	Argument	ULESS_FLAG		1672792	2					
ANR	1673688	Identifier	ULESS_FLAG		1672792	0					
ANR	1673689	IfStatement	if ( op & SLJIT_SET_O )		1672792	33					
ANR	1673690	Condition	op & SLJIT_SET_O	1755:6:53600:53615	1672792	0	True				
ANR	1673691	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1673692	Identifier	op		1672792	0					
ANR	1673693	Identifier	SLJIT_SET_O		1672792	1					
ANR	1673694	ReturnStatement	"return CMOVNEZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO ) ;"	1756:3:53621:53667	1672792	1	True				
ANR	1673695	CallExpression	"CMOVNEZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO )"		1672792	0					
ANR	1673696	Callee	CMOVNEZ		1672792	0					
ANR	1673697	Identifier	CMOVNEZ		1672792	0					
ANR	1673698	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1673699	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1673700	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1673701	Argument	TMP_EREG1		1672792	1					
ANR	1673702	Identifier	TMP_EREG1		1672792	0					
ANR	1673703	Argument	ZERO		1672792	2					
ANR	1673704	Identifier	ZERO		1672792	0					
ANR	1673705	ReturnStatement	return SLJIT_SUCCESS ;	1758:2:53672:53692	1672792	34	True				
ANR	1673706	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1673707	Label	case SLJIT_ADDC :	1760:1:53696:53711	1672792	35	True				
ANR	1673708	Identifier	SLJIT_ADDC		1672792	0					
ANR	1673709	IfStatement	if ( flags & SRC2_IMM )		1672792	36					
ANR	1673710	Condition	flags & SRC2_IMM	1761:6:53719:53734	1672792	0	True				
ANR	1673711	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1673712	Identifier	flags		1672792	0					
ANR	1673713	Identifier	SRC2_IMM		1672792	1					
ANR	1673714	CompoundStatement		141:24:3830:3830	1672792	1					
ANR	1673715	IfStatement	if ( op & SLJIT_SET_C )		1672792	0					
ANR	1673716	Condition	op & SLJIT_SET_C	1762:7:53746:53761	1672792	0	True				
ANR	1673717	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1673718	Identifier	op		1672792	0					
ANR	1673719	Identifier	SLJIT_SET_C		1672792	1					
ANR	1673720	CompoundStatement		142:25:3857:3857	1672792	1					
ANR	1673721	IfStatement	if ( src2 >= 0 )		1672792	0					
ANR	1673722	Condition	src2 >= 0	1763:8:53774:53782	1672792	0	True				
ANR	1673723	RelationalExpression	src2 >= 0		1672792	0		>=			
ANR	1673724	Identifier	src2		1672792	0					
ANR	1673725	PrimaryExpression	0		1672792	1					
ANR	1673726	ExpressionStatement	"FAIL_IF ( ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 ) )"	1764:5:53790:53834	1672792	1	True				
ANR	1673727	CallExpression	"FAIL_IF ( ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 ) )"		1672792	0					
ANR	1673728	Callee	FAIL_IF		1672792	0					
ANR	1673729	Identifier	FAIL_IF		1672792	0					
ANR	1673730	ArgumentList	"ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 )"		1672792	1					
ANR	1673731	Argument	"ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673732	CallExpression	"ORI ( TMP_EREG1 , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673733	Callee	ORI		1672792	0					
ANR	1673734	Identifier	ORI		1672792	0					
ANR	1673735	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673736	Argument	TMP_EREG1		1672792	0					
ANR	1673737	Identifier	TMP_EREG1		1672792	0					
ANR	1673738	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673739	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673740	Identifier	reg_map		1672792	0					
ANR	1673741	Identifier	src1		1672792	1					
ANR	1673742	Argument	src2		1672792	2					
ANR	1673743	Identifier	src2		1672792	0					
ANR	1673744	ElseStatement	else		1672792	0					
ANR	1673745	CompoundStatement		145:9:3938:3938	1672792	0					
ANR	1673746	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_EREG1 , ZERO , src2 ) )"	1766:5:53852:53889	1672792	0	True				
ANR	1673747	CallExpression	"FAIL_IF ( ADDLI ( TMP_EREG1 , ZERO , src2 ) )"		1672792	0					
ANR	1673748	Callee	FAIL_IF		1672792	0					
ANR	1673749	Identifier	FAIL_IF		1672792	0					
ANR	1673750	ArgumentList	"ADDLI ( TMP_EREG1 , ZERO , src2 )"		1672792	1					
ANR	1673751	Argument	"ADDLI ( TMP_EREG1 , ZERO , src2 )"		1672792	0					
ANR	1673752	CallExpression	"ADDLI ( TMP_EREG1 , ZERO , src2 )"		1672792	0					
ANR	1673753	Callee	ADDLI		1672792	0					
ANR	1673754	Identifier	ADDLI		1672792	0					
ANR	1673755	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673756	Argument	TMP_EREG1		1672792	0					
ANR	1673757	Identifier	TMP_EREG1		1672792	0					
ANR	1673758	Argument	ZERO		1672792	1					
ANR	1673759	Identifier	ZERO		1672792	0					
ANR	1673760	Argument	src2		1672792	2					
ANR	1673761	Identifier	src2		1672792	0					
ANR	1673762	ExpressionStatement	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 ) )"	1767:5:53896:53944	1672792	1	True				
ANR	1673763	CallExpression	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 ) )"		1672792	0					
ANR	1673764	Callee	FAIL_IF		1672792	0					
ANR	1673765	Identifier	FAIL_IF		1672792	0					
ANR	1673766	ArgumentList	"OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 )"		1672792	1					
ANR	1673767	Argument	"OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 )"		1672792	0					
ANR	1673768	CallExpression	"OR ( TMP_EREG1 , reg_map [ src1 ] , TMP_EREG1 )"		1672792	0					
ANR	1673769	Callee	OR		1672792	0					
ANR	1673770	Identifier	OR		1672792	0					
ANR	1673771	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673772	Argument	TMP_EREG1		1672792	0					
ANR	1673773	Identifier	TMP_EREG1		1672792	0					
ANR	1673774	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673775	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673776	Identifier	reg_map		1672792	0					
ANR	1673777	Identifier	src1		1672792	1					
ANR	1673778	Argument	TMP_EREG1		1672792	2					
ANR	1673779	Identifier	TMP_EREG1		1672792	0					
ANR	1673780	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"	1771:3:53961:54010	1672792	1	True				
ANR	1673781	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 ) )"		1672792	0					
ANR	1673782	Callee	FAIL_IF		1672792	0					
ANR	1673783	Identifier	FAIL_IF		1672792	0					
ANR	1673784	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1672792	1					
ANR	1673785	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673786	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , src2 )"		1672792	0					
ANR	1673787	Callee	ADDLI		1672792	0					
ANR	1673788	Identifier	ADDLI		1672792	0					
ANR	1673789	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673790	Argument	reg_map [ dst ]		1672792	0					
ANR	1673791	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673792	Identifier	reg_map		1672792	0					
ANR	1673793	Identifier	dst		1672792	1					
ANR	1673794	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673795	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673796	Identifier	reg_map		1672792	0					
ANR	1673797	Identifier	src1		1672792	1					
ANR	1673798	Argument	src2		1672792	2					
ANR	1673799	Identifier	src2		1672792	0					
ANR	1673800	ElseStatement	else		1672792	0					
ANR	1673801	CompoundStatement		153:9:4115:4115	1672792	0					
ANR	1673802	IfStatement	if ( op & SLJIT_SET_C )		1672792	0					
ANR	1673803	Condition	op & SLJIT_SET_C	1774:7:54031:54046	1672792	0	True				
ANR	1673804	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1673805	Identifier	op		1672792	0					
ANR	1673806	Identifier	SLJIT_SET_C		1672792	1					
ANR	1673807	ExpressionStatement	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1775:4:54053:54105	1672792	1	True				
ANR	1673808	CallExpression	"FAIL_IF ( OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673809	Callee	FAIL_IF		1672792	0					
ANR	1673810	Identifier	FAIL_IF		1672792	0					
ANR	1673811	ArgumentList	"OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673812	Argument	"OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673813	CallExpression	"OR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673814	Callee	OR		1672792	0					
ANR	1673815	Identifier	OR		1672792	0					
ANR	1673816	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673817	Argument	TMP_EREG1		1672792	0					
ANR	1673818	Identifier	TMP_EREG1		1672792	0					
ANR	1673819	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673820	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673821	Identifier	reg_map		1672792	0					
ANR	1673822	Identifier	src1		1672792	1					
ANR	1673823	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673824	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673825	Identifier	reg_map		1672792	0					
ANR	1673826	Identifier	src2		1672792	1					
ANR	1673827	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1778:3:54157:54213	1672792	1	True				
ANR	1673828	CallExpression	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1673829	Callee	FAIL_IF		1672792	0					
ANR	1673830	Identifier	FAIL_IF		1672792	0					
ANR	1673831	ArgumentList	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1673832	Argument	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673833	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1673834	Callee	ADD		1672792	0					
ANR	1673835	Identifier	ADD		1672792	0					
ANR	1673836	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673837	Argument	reg_map [ dst ]		1672792	0					
ANR	1673838	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673839	Identifier	reg_map		1672792	0					
ANR	1673840	Identifier	dst		1672792	1					
ANR	1673841	Argument	reg_map [ src1 ]		1672792	1					
ANR	1673842	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1673843	Identifier	reg_map		1672792	0					
ANR	1673844	Identifier	src1		1672792	1					
ANR	1673845	Argument	reg_map [ src2 ]		1672792	2					
ANR	1673846	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1673847	Identifier	reg_map		1672792	0					
ANR	1673848	Identifier	src2		1672792	1					
ANR	1673849	IfStatement	if ( op & SLJIT_SET_C )		1672792	37					
ANR	1673850	Condition	op & SLJIT_SET_C	1781:6:54226:54241	1672792	0	True				
ANR	1673851	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1673852	Identifier	op		1672792	0					
ANR	1673853	Identifier	SLJIT_SET_C		1672792	1					
ANR	1673854	ExpressionStatement	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 ) )"	1782:3:54247:54298	1672792	1	True				
ANR	1673855	CallExpression	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 ) )"		1672792	0					
ANR	1673856	Callee	FAIL_IF		1672792	0					
ANR	1673857	Identifier	FAIL_IF		1672792	0					
ANR	1673858	ArgumentList	"CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 )"		1672792	1					
ANR	1673859	Argument	"CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 )"		1672792	0					
ANR	1673860	CallExpression	"CMPLTU ( TMP_EREG1 , reg_map [ dst ] , TMP_EREG1 )"		1672792	0					
ANR	1673861	Callee	CMPLTU		1672792	0					
ANR	1673862	Identifier	CMPLTU		1672792	0					
ANR	1673863	ArgumentList	TMP_EREG1		1672792	1					
ANR	1673864	Argument	TMP_EREG1		1672792	0					
ANR	1673865	Identifier	TMP_EREG1		1672792	0					
ANR	1673866	Argument	reg_map [ dst ]		1672792	1					
ANR	1673867	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673868	Identifier	reg_map		1672792	0					
ANR	1673869	Identifier	dst		1672792	1					
ANR	1673870	Argument	TMP_EREG1		1672792	2					
ANR	1673871	Identifier	TMP_EREG1		1672792	0					
ANR	1673872	ExpressionStatement	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"	1784:2:54303:54355	1672792	38	True				
ANR	1673873	CallExpression	"FAIL_IF ( ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"		1672792	0					
ANR	1673874	Callee	FAIL_IF		1672792	0					
ANR	1673875	Identifier	FAIL_IF		1672792	0					
ANR	1673876	ArgumentList	"ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1672792	1					
ANR	1673877	Argument	"ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1673878	CallExpression	"ADD ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1673879	Callee	ADD		1672792	0					
ANR	1673880	Identifier	ADD		1672792	0					
ANR	1673881	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1673882	Argument	reg_map [ dst ]		1672792	0					
ANR	1673883	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673884	Identifier	reg_map		1672792	0					
ANR	1673885	Identifier	dst		1672792	1					
ANR	1673886	Argument	reg_map [ dst ]		1672792	1					
ANR	1673887	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673888	Identifier	reg_map		1672792	0					
ANR	1673889	Identifier	dst		1672792	1					
ANR	1673890	Argument	ULESS_FLAG		1672792	2					
ANR	1673891	Identifier	ULESS_FLAG		1672792	0					
ANR	1673892	IfStatement	if ( ! ( op & SLJIT_SET_C ) )		1672792	39					
ANR	1673893	Condition	! ( op & SLJIT_SET_C )	1786:6:54364:54382	1672792	0	True				
ANR	1673894	UnaryOperationExpression	! ( op & SLJIT_SET_C )		1672792	0					
ANR	1673895	UnaryOperator	!		1672792	0					
ANR	1673896	BitAndExpression	op & SLJIT_SET_C		1672792	1		&			
ANR	1673897	Identifier	op		1672792	0					
ANR	1673898	Identifier	SLJIT_SET_C		1672792	1					
ANR	1673899	ReturnStatement	return SLJIT_SUCCESS ;	1787:3:54388:54408	1672792	1	True				
ANR	1673900	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1673901	ExpressionStatement	"FAIL_IF ( CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 ) )"	1790:2:54468:54512	1672792	40	True				
ANR	1673902	CallExpression	"FAIL_IF ( CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 ) )"		1672792	0					
ANR	1673903	Callee	FAIL_IF		1672792	0					
ANR	1673904	Identifier	FAIL_IF		1672792	0					
ANR	1673905	ArgumentList	"CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 )"		1672792	1					
ANR	1673906	Argument	"CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 )"		1672792	0					
ANR	1673907	CallExpression	"CMPLTUI ( TMP_EREG2 , reg_map [ dst ] , 1 )"		1672792	0					
ANR	1673908	Callee	CMPLTUI		1672792	0					
ANR	1673909	Identifier	CMPLTUI		1672792	0					
ANR	1673910	ArgumentList	TMP_EREG2		1672792	1					
ANR	1673911	Argument	TMP_EREG2		1672792	0					
ANR	1673912	Identifier	TMP_EREG2		1672792	0					
ANR	1673913	Argument	reg_map [ dst ]		1672792	1					
ANR	1673914	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1673915	Identifier	reg_map		1672792	0					
ANR	1673916	Identifier	dst		1672792	1					
ANR	1673917	Argument	1		1672792	2					
ANR	1673918	PrimaryExpression	1		1672792	0					
ANR	1673919	ExpressionStatement	"FAIL_IF ( AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG ) )"	1791:2:54516:54562	1672792	41	True				
ANR	1673920	CallExpression	"FAIL_IF ( AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG ) )"		1672792	0					
ANR	1673921	Callee	FAIL_IF		1672792	0					
ANR	1673922	Identifier	FAIL_IF		1672792	0					
ANR	1673923	ArgumentList	"AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG )"		1672792	1					
ANR	1673924	Argument	"AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG )"		1672792	0					
ANR	1673925	CallExpression	"AND ( TMP_EREG2 , TMP_EREG2 , ULESS_FLAG )"		1672792	0					
ANR	1673926	Callee	AND		1672792	0					
ANR	1673927	Identifier	AND		1672792	0					
ANR	1673928	ArgumentList	TMP_EREG2		1672792	1					
ANR	1673929	Argument	TMP_EREG2		1672792	0					
ANR	1673930	Identifier	TMP_EREG2		1672792	0					
ANR	1673931	Argument	TMP_EREG2		1672792	1					
ANR	1673932	Identifier	TMP_EREG2		1672792	0					
ANR	1673933	Argument	ULESS_FLAG		1672792	2					
ANR	1673934	Identifier	ULESS_FLAG		1672792	0					
ANR	1673935	ReturnStatement	"return OR ( ULESS_FLAG , TMP_EREG2 , TMP_EREG1 ) ;"	1793:2:54590:54633	1672792	42	True				
ANR	1673936	CallExpression	"OR ( ULESS_FLAG , TMP_EREG2 , TMP_EREG1 )"		1672792	0					
ANR	1673937	Callee	OR		1672792	0					
ANR	1673938	Identifier	OR		1672792	0					
ANR	1673939	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1673940	Argument	ULESS_FLAG		1672792	0					
ANR	1673941	Identifier	ULESS_FLAG		1672792	0					
ANR	1673942	Argument	TMP_EREG2		1672792	1					
ANR	1673943	Identifier	TMP_EREG2		1672792	0					
ANR	1673944	Argument	TMP_EREG1		1672792	2					
ANR	1673945	Identifier	TMP_EREG1		1672792	0					
ANR	1673946	Label	case SLJIT_SUB :	1795:1:54637:54651	1672792	43	True				
ANR	1673947	Identifier	SLJIT_SUB		1672792	0					
ANR	1673948	IfStatement	if ( ( flags & SRC2_IMM ) && ( ( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN ) )		1672792	44					
ANR	1673949	Condition	( flags & SRC2_IMM ) && ( ( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN )	1796:6:54659:54742	1672792	0	True				
ANR	1673950	AndExpression	( flags & SRC2_IMM ) && ( ( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN )		1672792	0		&&			
ANR	1673951	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1673952	Identifier	flags		1672792	0					
ANR	1673953	Identifier	SRC2_IMM		1672792	1					
ANR	1673954	OrExpression	( op & ( SLJIT_SET_U | SLJIT_SET_S ) ) || src2 == SIMM_16BIT_MIN		1672792	1		||			
ANR	1673955	BitAndExpression	op & ( SLJIT_SET_U | SLJIT_SET_S )		1672792	0		&			
ANR	1673956	Identifier	op		1672792	0					
ANR	1673957	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S		1672792	1		|			
ANR	1673958	Identifier	SLJIT_SET_U		1672792	0					
ANR	1673959	Identifier	SLJIT_SET_S		1672792	1					
ANR	1673960	EqualityExpression	src2 == SIMM_16BIT_MIN		1672792	1		==			
ANR	1673961	Identifier	src2		1672792	0					
ANR	1673962	Identifier	SIMM_16BIT_MIN		1672792	1					
ANR	1673963	CompoundStatement		176:92:4838:4838	1672792	1					
ANR	1673964	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"	1797:3:54750:54793	1672792	0	True				
ANR	1673965	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"		1672792	0					
ANR	1673966	Callee	FAIL_IF		1672792	0					
ANR	1673967	Identifier	FAIL_IF		1672792	0					
ANR	1673968	ArgumentList	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1672792	1					
ANR	1673969	Argument	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1672792	0					
ANR	1673970	CallExpression	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1672792	0					
ANR	1673971	Callee	ADDLI		1672792	0					
ANR	1673972	Identifier	ADDLI		1672792	0					
ANR	1673973	ArgumentList	TMP_REG2_mapped		1672792	1					
ANR	1673974	Argument	TMP_REG2_mapped		1672792	0					
ANR	1673975	Identifier	TMP_REG2_mapped		1672792	0					
ANR	1673976	Argument	ZERO		1672792	1					
ANR	1673977	Identifier	ZERO		1672792	0					
ANR	1673978	Argument	src2		1672792	2					
ANR	1673979	Identifier	src2		1672792	0					
ANR	1673980	ExpressionStatement	src2 = TMP_REG2	1798:3:54798:54813	1672792	1	True				
ANR	1673981	AssignmentExpression	src2 = TMP_REG2		1672792	0		=			
ANR	1673982	Identifier	src2		1672792	0					
ANR	1673983	Identifier	TMP_REG2		1672792	1					
ANR	1673984	ExpressionStatement	flags &= ~SRC2_IMM	1799:3:54818:54836	1672792	2	True				
ANR	1673985	AssignmentExpression	flags &= ~SRC2_IMM		1672792	0		&=			
ANR	1673986	Identifier	flags		1672792	0					
ANR	1673987	Identifier	~SRC2_IMM		1672792	1					
ANR	1673988	IfStatement	if ( flags & SRC2_IMM )		1672792	45					
ANR	1673989	Condition	flags & SRC2_IMM	1802:6:54849:54864	1672792	0	True				
ANR	1673990	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1673991	Identifier	flags		1672792	0					
ANR	1673992	Identifier	SRC2_IMM		1672792	1					
ANR	1673993	CompoundStatement		182:24:4960:4960	1672792	1					
ANR	1673994	IfStatement	if ( op & SLJIT_SET_O )		1672792	0					
ANR	1673995	Condition	op & SLJIT_SET_O	1803:7:54876:54891	1672792	0	True				
ANR	1673996	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1673997	Identifier	op		1672792	0					
ANR	1673998	Identifier	SLJIT_SET_O		1672792	1					
ANR	1673999	CompoundStatement		183:25:4987:4987	1672792	1					
ANR	1674000	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"	1804:4:54900:54943	1672792	0	True				
ANR	1674001	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 ) )"		1672792	0					
ANR	1674002	Callee	FAIL_IF		1672792	0					
ANR	1674003	Identifier	FAIL_IF		1672792	0					
ANR	1674004	ArgumentList	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1672792	1					
ANR	1674005	Argument	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1672792	0					
ANR	1674006	CallExpression	"SHRUI ( TMP_EREG1 , reg_map [ src1 ] , 63 )"		1672792	0					
ANR	1674007	Callee	SHRUI		1672792	0					
ANR	1674008	Identifier	SHRUI		1672792	0					
ANR	1674009	ArgumentList	TMP_EREG1		1672792	1					
ANR	1674010	Argument	TMP_EREG1		1672792	0					
ANR	1674011	Identifier	TMP_EREG1		1672792	0					
ANR	1674012	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674013	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674014	Identifier	reg_map		1672792	0					
ANR	1674015	Identifier	src1		1672792	1					
ANR	1674016	Argument	63		1672792	2					
ANR	1674017	PrimaryExpression	63		1672792	0					
ANR	1674018	IfStatement	if ( src2 < 0 )		1672792	1					
ANR	1674019	Condition	src2 < 0	1806:8:54954:54961	1672792	0	True				
ANR	1674020	RelationalExpression	src2 < 0		1672792	0		<			
ANR	1674021	Identifier	src2		1672792	0					
ANR	1674022	PrimaryExpression	0		1672792	1					
ANR	1674023	ExpressionStatement	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"	1807:5:54969:55007	1672792	1	True				
ANR	1674024	CallExpression	"FAIL_IF ( XORI ( TMP_EREG1 , TMP_EREG1 , 1 ) )"		1672792	0					
ANR	1674025	Callee	FAIL_IF		1672792	0					
ANR	1674026	Identifier	FAIL_IF		1672792	0					
ANR	1674027	ArgumentList	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1672792	1					
ANR	1674028	Argument	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1672792	0					
ANR	1674029	CallExpression	"XORI ( TMP_EREG1 , TMP_EREG1 , 1 )"		1672792	0					
ANR	1674030	Callee	XORI		1672792	0					
ANR	1674031	Identifier	XORI		1672792	0					
ANR	1674032	ArgumentList	TMP_EREG1		1672792	1					
ANR	1674033	Argument	TMP_EREG1		1672792	0					
ANR	1674034	Identifier	TMP_EREG1		1672792	0					
ANR	1674035	Argument	TMP_EREG1		1672792	1					
ANR	1674036	Identifier	TMP_EREG1		1672792	0					
ANR	1674037	Argument	1		1672792	2					
ANR	1674038	PrimaryExpression	1		1672792	0					
ANR	1674039	IfStatement	if ( src1 != dst )		1672792	2					
ANR	1674040	Condition	src1 != dst	1809:8:55018:55028	1672792	0	True				
ANR	1674041	EqualityExpression	src1 != dst		1672792	0		!=			
ANR	1674042	Identifier	src1		1672792	0					
ANR	1674043	Identifier	dst		1672792	1					
ANR	1674044	ExpressionStatement	overflow_ra = reg_map [ src1 ]	1810:5:55036:55063	1672792	1	True				
ANR	1674045	AssignmentExpression	overflow_ra = reg_map [ src1 ]		1672792	0		=			
ANR	1674046	Identifier	overflow_ra		1672792	0					
ANR	1674047	ArrayIndexing	reg_map [ src1 ]		1672792	1					
ANR	1674048	Identifier	reg_map		1672792	0					
ANR	1674049	Identifier	src1		1672792	1					
ANR	1674050	ElseStatement	else		1672792	0					
ANR	1674051	CompoundStatement		191:9:5167:5167	1672792	0					
ANR	1674052	ExpressionStatement	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"	1813:5:55106:55150	1672792	0	True				
ANR	1674053	CallExpression	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"		1672792	0					
ANR	1674054	Callee	FAIL_IF		1672792	0					
ANR	1674055	Identifier	FAIL_IF		1672792	0					
ANR	1674056	ArgumentList	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	1					
ANR	1674057	Argument	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	0					
ANR	1674058	CallExpression	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	0					
ANR	1674059	Callee	ADD		1672792	0					
ANR	1674060	Identifier	ADD		1672792	0					
ANR	1674061	ArgumentList	TMP_EREG2		1672792	1					
ANR	1674062	Argument	TMP_EREG2		1672792	0					
ANR	1674063	Identifier	TMP_EREG2		1672792	0					
ANR	1674064	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674065	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674066	Identifier	reg_map		1672792	0					
ANR	1674067	Identifier	src1		1672792	1					
ANR	1674068	Argument	ZERO		1672792	2					
ANR	1674069	Identifier	ZERO		1672792	0					
ANR	1674070	ExpressionStatement	overflow_ra = TMP_EREG2	1815:5:55159:55182	1672792	1	True				
ANR	1674071	AssignmentExpression	overflow_ra = TMP_EREG2		1672792	0		=			
ANR	1674072	Identifier	overflow_ra		1672792	0					
ANR	1674073	Identifier	TMP_EREG2		1672792	1					
ANR	1674074	IfStatement	if ( op & SLJIT_SET_E )		1672792	1					
ANR	1674075	Condition	op & SLJIT_SET_E	1819:7:55203:55218	1672792	0	True				
ANR	1674076	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1674077	Identifier	op		1672792	0					
ANR	1674078	Identifier	SLJIT_SET_E		1672792	1					
ANR	1674079	ExpressionStatement	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 ) )"	1820:4:55225:55273	1672792	1	True				
ANR	1674080	CallExpression	"FAIL_IF ( ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 ) )"		1672792	0					
ANR	1674081	Callee	FAIL_IF		1672792	0					
ANR	1674082	Identifier	FAIL_IF		1672792	0					
ANR	1674083	ArgumentList	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 )"		1672792	1					
ANR	1674084	Argument	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 )"		1672792	0					
ANR	1674085	CallExpression	"ADDLI ( EQUAL_FLAG , reg_map [ src1 ] , - src2 )"		1672792	0					
ANR	1674086	Callee	ADDLI		1672792	0					
ANR	1674087	Identifier	ADDLI		1672792	0					
ANR	1674088	ArgumentList	EQUAL_FLAG		1672792	1					
ANR	1674089	Argument	EQUAL_FLAG		1672792	0					
ANR	1674090	Identifier	EQUAL_FLAG		1672792	0					
ANR	1674091	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674092	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674093	Identifier	reg_map		1672792	0					
ANR	1674094	Identifier	src1		1672792	1					
ANR	1674095	Argument	- src2		1672792	2					
ANR	1674096	UnaryOperationExpression	- src2		1672792	0					
ANR	1674097	UnaryOperator	-		1672792	0					
ANR	1674098	Identifier	src2		1672792	1					
ANR	1674099	IfStatement	if ( op & SLJIT_SET_C )		1672792	2					
ANR	1674100	Condition	op & SLJIT_SET_C	1822:7:55283:55298	1672792	0	True				
ANR	1674101	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1674102	Identifier	op		1672792	0					
ANR	1674103	Identifier	SLJIT_SET_C		1672792	1					
ANR	1674104	CompoundStatement		202:25:5394:5394	1672792	1					
ANR	1674105	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"	1823:4:55307:55363	1672792	0	True				
ANR	1674106	CallExpression	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"		1672792	0					
ANR	1674107	Callee	FAIL_IF		1672792	0					
ANR	1674108	Identifier	FAIL_IF		1672792	0					
ANR	1674109	ArgumentList	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1672792	1					
ANR	1674110	Argument	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1672792	0					
ANR	1674111	CallExpression	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1672792	0					
ANR	1674112	Callee	load_immediate		1672792	0					
ANR	1674113	Identifier	load_immediate		1672792	0					
ANR	1674114	ArgumentList	compiler		1672792	1					
ANR	1674115	Argument	compiler		1672792	0					
ANR	1674116	Identifier	compiler		1672792	0					
ANR	1674117	Argument	ADDR_TMP_mapped		1672792	1					
ANR	1674118	Identifier	ADDR_TMP_mapped		1672792	0					
ANR	1674119	Argument	src2		1672792	2					
ANR	1674120	Identifier	src2		1672792	0					
ANR	1674121	ExpressionStatement	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped ) )"	1824:4:55369:55428	1672792	1	True				
ANR	1674122	CallExpression	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped ) )"		1672792	0					
ANR	1674123	Callee	FAIL_IF		1672792	0					
ANR	1674124	Identifier	FAIL_IF		1672792	0					
ANR	1674125	ArgumentList	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped )"		1672792	1					
ANR	1674126	Argument	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped )"		1672792	0					
ANR	1674127	CallExpression	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped )"		1672792	0					
ANR	1674128	Callee	CMPLTU		1672792	0					
ANR	1674129	Identifier	CMPLTU		1672792	0					
ANR	1674130	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1674131	Argument	ULESS_FLAG		1672792	0					
ANR	1674132	Identifier	ULESS_FLAG		1672792	0					
ANR	1674133	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674134	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674135	Identifier	reg_map		1672792	0					
ANR	1674136	Identifier	src1		1672792	1					
ANR	1674137	Argument	ADDR_TMP_mapped		1672792	2					
ANR	1674138	Identifier	ADDR_TMP_mapped		1672792	0					
ANR	1674139	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	3					
ANR	1674140	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1828:7:55489:55512	1672792	0	True				
ANR	1674141	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1674142	Callee	CHECK_FLAGS		1672792	0					
ANR	1674143	Identifier	CHECK_FLAGS		1672792	0					
ANR	1674144	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1674145	Argument	SLJIT_SET_E		1672792	0					
ANR	1674146	Identifier	SLJIT_SET_E		1672792	0					
ANR	1674147	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"	1829:4:55519:55569	1672792	1	True				
ANR	1674148	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"		1672792	0					
ANR	1674149	Callee	FAIL_IF		1672792	0					
ANR	1674150	Identifier	FAIL_IF		1672792	0					
ANR	1674151	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1672792	1					
ANR	1674152	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1672792	0					
ANR	1674153	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1672792	0					
ANR	1674154	Callee	ADDLI		1672792	0					
ANR	1674155	Identifier	ADDLI		1672792	0					
ANR	1674156	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1674157	Argument	reg_map [ dst ]		1672792	0					
ANR	1674158	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674159	Identifier	reg_map		1672792	0					
ANR	1674160	Identifier	dst		1672792	1					
ANR	1674161	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674162	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674163	Identifier	reg_map		1672792	0					
ANR	1674164	Identifier	src1		1672792	1					
ANR	1674165	Argument	- src2		1672792	2					
ANR	1674166	UnaryOperationExpression	- src2		1672792	0					
ANR	1674167	UnaryOperator	-		1672792	0					
ANR	1674168	Identifier	src2		1672792	1					
ANR	1674169	ElseStatement	else		1672792	0					
ANR	1674170	CompoundStatement		211:9:5674:5674	1672792	0					
ANR	1674171	IfStatement	if ( op & SLJIT_SET_O )		1672792	0					
ANR	1674172	Condition	op & SLJIT_SET_O	1833:7:55591:55606	1672792	0	True				
ANR	1674173	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1674174	Identifier	op		1672792	0					
ANR	1674175	Identifier	SLJIT_SET_O		1672792	1					
ANR	1674176	CompoundStatement		213:25:5702:5702	1672792	1					
ANR	1674177	ExpressionStatement	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1834:4:55615:55668	1672792	0	True				
ANR	1674178	CallExpression	"FAIL_IF ( XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1674179	Callee	FAIL_IF		1672792	0					
ANR	1674180	Identifier	FAIL_IF		1672792	0					
ANR	1674181	ArgumentList	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1674182	Argument	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674183	CallExpression	"XOR ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674184	Callee	XOR		1672792	0					
ANR	1674185	Identifier	XOR		1672792	0					
ANR	1674186	ArgumentList	TMP_EREG1		1672792	1					
ANR	1674187	Argument	TMP_EREG1		1672792	0					
ANR	1674188	Identifier	TMP_EREG1		1672792	0					
ANR	1674189	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674190	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674191	Identifier	reg_map		1672792	0					
ANR	1674192	Identifier	src1		1672792	1					
ANR	1674193	Argument	reg_map [ src2 ]		1672792	2					
ANR	1674194	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674195	Identifier	reg_map		1672792	0					
ANR	1674196	Identifier	src2		1672792	1					
ANR	1674197	ExpressionStatement	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"	1835:4:55674:55714	1672792	1	True				
ANR	1674198	CallExpression	"FAIL_IF ( SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 ) )"		1672792	0					
ANR	1674199	Callee	FAIL_IF		1672792	0					
ANR	1674200	Identifier	FAIL_IF		1672792	0					
ANR	1674201	ArgumentList	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1672792	1					
ANR	1674202	Argument	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1672792	0					
ANR	1674203	CallExpression	"SHRUI ( TMP_EREG1 , TMP_EREG1 , 63 )"		1672792	0					
ANR	1674204	Callee	SHRUI		1672792	0					
ANR	1674205	Identifier	SHRUI		1672792	0					
ANR	1674206	ArgumentList	TMP_EREG1		1672792	1					
ANR	1674207	Argument	TMP_EREG1		1672792	0					
ANR	1674208	Identifier	TMP_EREG1		1672792	0					
ANR	1674209	Argument	TMP_EREG1		1672792	1					
ANR	1674210	Identifier	TMP_EREG1		1672792	0					
ANR	1674211	Argument	63		1672792	2					
ANR	1674212	PrimaryExpression	63		1672792	0					
ANR	1674213	IfStatement	if ( src1 != dst )		1672792	2					
ANR	1674214	Condition	src1 != dst	1837:8:55725:55735	1672792	0	True				
ANR	1674215	EqualityExpression	src1 != dst		1672792	0		!=			
ANR	1674216	Identifier	src1		1672792	0					
ANR	1674217	Identifier	dst		1672792	1					
ANR	1674218	ExpressionStatement	overflow_ra = reg_map [ src1 ]	1838:5:55743:55770	1672792	1	True				
ANR	1674219	AssignmentExpression	overflow_ra = reg_map [ src1 ]		1672792	0		=			
ANR	1674220	Identifier	overflow_ra		1672792	0					
ANR	1674221	ArrayIndexing	reg_map [ src1 ]		1672792	1					
ANR	1674222	Identifier	reg_map		1672792	0					
ANR	1674223	Identifier	src1		1672792	1					
ANR	1674224	ElseStatement	else		1672792	0					
ANR	1674225	CompoundStatement		219:9:5874:5874	1672792	0					
ANR	1674226	ExpressionStatement	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"	1841:5:55813:55857	1672792	0	True				
ANR	1674227	CallExpression	"FAIL_IF ( ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO ) )"		1672792	0					
ANR	1674228	Callee	FAIL_IF		1672792	0					
ANR	1674229	Identifier	FAIL_IF		1672792	0					
ANR	1674230	ArgumentList	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	1					
ANR	1674231	Argument	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	0					
ANR	1674232	CallExpression	"ADD ( TMP_EREG2 , reg_map [ src1 ] , ZERO )"		1672792	0					
ANR	1674233	Callee	ADD		1672792	0					
ANR	1674234	Identifier	ADD		1672792	0					
ANR	1674235	ArgumentList	TMP_EREG2		1672792	1					
ANR	1674236	Argument	TMP_EREG2		1672792	0					
ANR	1674237	Identifier	TMP_EREG2		1672792	0					
ANR	1674238	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674239	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674240	Identifier	reg_map		1672792	0					
ANR	1674241	Identifier	src1		1672792	1					
ANR	1674242	Argument	ZERO		1672792	2					
ANR	1674243	Identifier	ZERO		1672792	0					
ANR	1674244	ExpressionStatement	overflow_ra = TMP_EREG2	1842:5:55864:55887	1672792	1	True				
ANR	1674245	AssignmentExpression	overflow_ra = TMP_EREG2		1672792	0		=			
ANR	1674246	Identifier	overflow_ra		1672792	0					
ANR	1674247	Identifier	TMP_EREG2		1672792	1					
ANR	1674248	IfStatement	if ( op & SLJIT_SET_E )		1672792	1					
ANR	1674249	Condition	op & SLJIT_SET_E	1846:7:55908:55923	1672792	0	True				
ANR	1674250	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1674251	Identifier	op		1672792	0					
ANR	1674252	Identifier	SLJIT_SET_E		1672792	1					
ANR	1674253	ExpressionStatement	"FAIL_IF ( SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1847:4:55930:55984	1672792	1	True				
ANR	1674254	CallExpression	"FAIL_IF ( SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1674255	Callee	FAIL_IF		1672792	0					
ANR	1674256	Identifier	FAIL_IF		1672792	0					
ANR	1674257	ArgumentList	"SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1674258	Argument	"SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674259	CallExpression	"SUB ( EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674260	Callee	SUB		1672792	0					
ANR	1674261	Identifier	SUB		1672792	0					
ANR	1674262	ArgumentList	EQUAL_FLAG		1672792	1					
ANR	1674263	Argument	EQUAL_FLAG		1672792	0					
ANR	1674264	Identifier	EQUAL_FLAG		1672792	0					
ANR	1674265	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674266	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674267	Identifier	reg_map		1672792	0					
ANR	1674268	Identifier	src1		1672792	1					
ANR	1674269	Argument	reg_map [ src2 ]		1672792	2					
ANR	1674270	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674271	Identifier	reg_map		1672792	0					
ANR	1674272	Identifier	src2		1672792	1					
ANR	1674273	IfStatement	if ( op & ( SLJIT_SET_U | SLJIT_SET_C ) )		1672792	2					
ANR	1674274	Condition	op & ( SLJIT_SET_U | SLJIT_SET_C )	1849:7:55994:56025	1672792	0	True				
ANR	1674275	BitAndExpression	op & ( SLJIT_SET_U | SLJIT_SET_C )		1672792	0		&			
ANR	1674276	Identifier	op		1672792	0					
ANR	1674277	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_C		1672792	1		|			
ANR	1674278	Identifier	SLJIT_SET_U		1672792	0					
ANR	1674279	Identifier	SLJIT_SET_C		1672792	1					
ANR	1674280	ExpressionStatement	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1850:4:56032:56089	1672792	1	True				
ANR	1674281	CallExpression	"FAIL_IF ( CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1674282	Callee	FAIL_IF		1672792	0					
ANR	1674283	Identifier	FAIL_IF		1672792	0					
ANR	1674284	ArgumentList	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1674285	Argument	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674286	CallExpression	"CMPLTU ( ULESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674287	Callee	CMPLTU		1672792	0					
ANR	1674288	Identifier	CMPLTU		1672792	0					
ANR	1674289	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1674290	Argument	ULESS_FLAG		1672792	0					
ANR	1674291	Identifier	ULESS_FLAG		1672792	0					
ANR	1674292	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674293	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674294	Identifier	reg_map		1672792	0					
ANR	1674295	Identifier	src1		1672792	1					
ANR	1674296	Argument	reg_map [ src2 ]		1672792	2					
ANR	1674297	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674298	Identifier	reg_map		1672792	0					
ANR	1674299	Identifier	src2		1672792	1					
ANR	1674300	IfStatement	if ( op & SLJIT_SET_U )		1672792	3					
ANR	1674301	Condition	op & SLJIT_SET_U	1852:7:56099:56114	1672792	0	True				
ANR	1674302	BitAndExpression	op & SLJIT_SET_U		1672792	0		&			
ANR	1674303	Identifier	op		1672792	0					
ANR	1674304	Identifier	SLJIT_SET_U		1672792	1					
ANR	1674305	ExpressionStatement	"FAIL_IF ( CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"	1853:4:56121:56181	1672792	1	True				
ANR	1674306	CallExpression	"FAIL_IF ( CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"		1672792	0					
ANR	1674307	Callee	FAIL_IF		1672792	0					
ANR	1674308	Identifier	FAIL_IF		1672792	0					
ANR	1674309	ArgumentList	"CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1672792	1					
ANR	1674310	Argument	"CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1672792	0					
ANR	1674311	CallExpression	"CMPLTU ( UGREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1672792	0					
ANR	1674312	Callee	CMPLTU		1672792	0					
ANR	1674313	Identifier	CMPLTU		1672792	0					
ANR	1674314	ArgumentList	UGREATER_FLAG		1672792	1					
ANR	1674315	Argument	UGREATER_FLAG		1672792	0					
ANR	1674316	Identifier	UGREATER_FLAG		1672792	0					
ANR	1674317	Argument	reg_map [ src2 ]		1672792	1					
ANR	1674318	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674319	Identifier	reg_map		1672792	0					
ANR	1674320	Identifier	src2		1672792	1					
ANR	1674321	Argument	reg_map [ src1 ]		1672792	2					
ANR	1674322	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674323	Identifier	reg_map		1672792	0					
ANR	1674324	Identifier	src1		1672792	1					
ANR	1674325	IfStatement	if ( op & SLJIT_SET_S )		1672792	4					
ANR	1674326	Condition	op & SLJIT_SET_S	1855:7:56191:56206	1672792	0	True				
ANR	1674327	BitAndExpression	op & SLJIT_SET_S		1672792	0		&			
ANR	1674328	Identifier	op		1672792	0					
ANR	1674329	Identifier	SLJIT_SET_S		1672792	1					
ANR	1674330	CompoundStatement		235:25:6302:6302	1672792	1					
ANR	1674331	ExpressionStatement	"FAIL_IF ( CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1856:4:56215:56271	1672792	0	True				
ANR	1674332	CallExpression	"FAIL_IF ( CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1674333	Callee	FAIL_IF		1672792	0					
ANR	1674334	Identifier	FAIL_IF		1672792	0					
ANR	1674335	ArgumentList	"CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1674336	Argument	"CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674337	CallExpression	"CMPLTS ( LESS_FLAG , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674338	Callee	CMPLTS		1672792	0					
ANR	1674339	Identifier	CMPLTS		1672792	0					
ANR	1674340	ArgumentList	LESS_FLAG		1672792	1					
ANR	1674341	Argument	LESS_FLAG		1672792	0					
ANR	1674342	Identifier	LESS_FLAG		1672792	0					
ANR	1674343	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674344	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674345	Identifier	reg_map		1672792	0					
ANR	1674346	Identifier	src1		1672792	1					
ANR	1674347	Argument	reg_map [ src2 ]		1672792	2					
ANR	1674348	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674349	Identifier	reg_map		1672792	0					
ANR	1674350	Identifier	src2		1672792	1					
ANR	1674351	ExpressionStatement	"FAIL_IF ( CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"	1857:4:56277:56336	1672792	1	True				
ANR	1674352	CallExpression	"FAIL_IF ( CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] ) )"		1672792	0					
ANR	1674353	Callee	FAIL_IF		1672792	0					
ANR	1674354	Identifier	FAIL_IF		1672792	0					
ANR	1674355	ArgumentList	"CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1672792	1					
ANR	1674356	Argument	"CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1672792	0					
ANR	1674357	CallExpression	"CMPLTS ( GREATER_FLAG , reg_map [ src2 ] , reg_map [ src1 ] )"		1672792	0					
ANR	1674358	Callee	CMPLTS		1672792	0					
ANR	1674359	Identifier	CMPLTS		1672792	0					
ANR	1674360	ArgumentList	GREATER_FLAG		1672792	1					
ANR	1674361	Argument	GREATER_FLAG		1672792	0					
ANR	1674362	Identifier	GREATER_FLAG		1672792	0					
ANR	1674363	Argument	reg_map [ src2 ]		1672792	1					
ANR	1674364	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674365	Identifier	reg_map		1672792	0					
ANR	1674366	Identifier	src2		1672792	1					
ANR	1674367	Argument	reg_map [ src1 ]		1672792	2					
ANR	1674368	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674369	Identifier	reg_map		1672792	0					
ANR	1674370	Identifier	src1		1672792	1					
ANR	1674371	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C ) )		1672792	5					
ANR	1674372	Condition	CHECK_FLAGS ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C )	1861:7:56397:56462	1672792	0	True				
ANR	1674373	CallExpression	CHECK_FLAGS ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C )		1672792	0					
ANR	1674374	Callee	CHECK_FLAGS		1672792	0					
ANR	1674375	Identifier	CHECK_FLAGS		1672792	0					
ANR	1674376	ArgumentList	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1672792	1					
ANR	1674377	Argument	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1672792	0					
ANR	1674378	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1672792	0		|			
ANR	1674379	Identifier	SLJIT_SET_E		1672792	0					
ANR	1674380	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_C		1672792	1		|			
ANR	1674381	Identifier	SLJIT_SET_U		1672792	0					
ANR	1674382	InclusiveOrExpression	SLJIT_SET_S | SLJIT_SET_C		1672792	1		|			
ANR	1674383	Identifier	SLJIT_SET_S		1672792	0					
ANR	1674384	Identifier	SLJIT_SET_C		1672792	1					
ANR	1674385	ExpressionStatement	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1862:4:56469:56525	1672792	1	True				
ANR	1674386	CallExpression	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1674387	Callee	FAIL_IF		1672792	0					
ANR	1674388	Identifier	FAIL_IF		1672792	0					
ANR	1674389	ArgumentList	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1674390	Argument	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674391	CallExpression	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674392	Callee	SUB		1672792	0					
ANR	1674393	Identifier	SUB		1672792	0					
ANR	1674394	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1674395	Argument	reg_map [ dst ]		1672792	0					
ANR	1674396	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674397	Identifier	reg_map		1672792	0					
ANR	1674398	Identifier	dst		1672792	1					
ANR	1674399	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674400	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674401	Identifier	reg_map		1672792	0					
ANR	1674402	Identifier	src1		1672792	1					
ANR	1674403	Argument	reg_map [ src2 ]		1672792	2					
ANR	1674404	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674405	Identifier	reg_map		1672792	0					
ANR	1674406	Identifier	src2		1672792	1					
ANR	1674407	IfStatement	if ( op & SLJIT_SET_O )		1672792	46					
ANR	1674408	Condition	op & SLJIT_SET_O	1865:6:56538:56553	1672792	0	True				
ANR	1674409	BitAndExpression	op & SLJIT_SET_O		1672792	0		&			
ANR	1674410	Identifier	op		1672792	0					
ANR	1674411	Identifier	SLJIT_SET_O		1672792	1					
ANR	1674412	CompoundStatement		245:24:6649:6649	1672792	1					
ANR	1674413	ExpressionStatement	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"	1866:3:56561:56615	1672792	0	True				
ANR	1674414	CallExpression	"FAIL_IF ( XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra ) )"		1672792	0					
ANR	1674415	Callee	FAIL_IF		1672792	0					
ANR	1674416	Identifier	FAIL_IF		1672792	0					
ANR	1674417	ArgumentList	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1672792	1					
ANR	1674418	Argument	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1672792	0					
ANR	1674419	CallExpression	"XOR ( OVERFLOW_FLAG , reg_map [ dst ] , overflow_ra )"		1672792	0					
ANR	1674420	Callee	XOR		1672792	0					
ANR	1674421	Identifier	XOR		1672792	0					
ANR	1674422	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1674423	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1674424	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1674425	Argument	reg_map [ dst ]		1672792	1					
ANR	1674426	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674427	Identifier	reg_map		1672792	0					
ANR	1674428	Identifier	dst		1672792	1					
ANR	1674429	Argument	overflow_ra		1672792	2					
ANR	1674430	Identifier	overflow_ra		1672792	0					
ANR	1674431	ExpressionStatement	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"	1867:3:56620:56668	1672792	1	True				
ANR	1674432	CallExpression	"FAIL_IF ( SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 ) )"		1672792	0					
ANR	1674433	Callee	FAIL_IF		1672792	0					
ANR	1674434	Identifier	FAIL_IF		1672792	0					
ANR	1674435	ArgumentList	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1672792	1					
ANR	1674436	Argument	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1672792	0					
ANR	1674437	CallExpression	"SHRUI ( OVERFLOW_FLAG , OVERFLOW_FLAG , 63 )"		1672792	0					
ANR	1674438	Callee	SHRUI		1672792	0					
ANR	1674439	Identifier	SHRUI		1672792	0					
ANR	1674440	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1674441	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1674442	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1674443	Argument	OVERFLOW_FLAG		1672792	1					
ANR	1674444	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1674445	Argument	63		1672792	2					
ANR	1674446	PrimaryExpression	63		1672792	0					
ANR	1674447	ReturnStatement	"return CMOVEQZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO ) ;"	1868:3:56673:56719	1672792	2	True				
ANR	1674448	CallExpression	"CMOVEQZ ( OVERFLOW_FLAG , TMP_EREG1 , ZERO )"		1672792	0					
ANR	1674449	Callee	CMOVEQZ		1672792	0					
ANR	1674450	Identifier	CMOVEQZ		1672792	0					
ANR	1674451	ArgumentList	OVERFLOW_FLAG		1672792	1					
ANR	1674452	Argument	OVERFLOW_FLAG		1672792	0					
ANR	1674453	Identifier	OVERFLOW_FLAG		1672792	0					
ANR	1674454	Argument	TMP_EREG1		1672792	1					
ANR	1674455	Identifier	TMP_EREG1		1672792	0					
ANR	1674456	Argument	ZERO		1672792	2					
ANR	1674457	Identifier	ZERO		1672792	0					
ANR	1674458	ReturnStatement	return SLJIT_SUCCESS ;	1871:2:56728:56748	1672792	47	True				
ANR	1674459	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1674460	Label	case SLJIT_SUBC :	1873:1:56752:56767	1672792	48	True				
ANR	1674461	Identifier	SLJIT_SUBC		1672792	0					
ANR	1674462	IfStatement	if ( ( flags & SRC2_IMM ) && src2 == SIMM_16BIT_MIN )		1672792	49					
ANR	1674463	Condition	( flags & SRC2_IMM ) && src2 == SIMM_16BIT_MIN	1874:6:56775:56818	1672792	0	True				
ANR	1674464	AndExpression	( flags & SRC2_IMM ) && src2 == SIMM_16BIT_MIN		1672792	0		&&			
ANR	1674465	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1674466	Identifier	flags		1672792	0					
ANR	1674467	Identifier	SRC2_IMM		1672792	1					
ANR	1674468	EqualityExpression	src2 == SIMM_16BIT_MIN		1672792	1		==			
ANR	1674469	Identifier	src2		1672792	0					
ANR	1674470	Identifier	SIMM_16BIT_MIN		1672792	1					
ANR	1674471	CompoundStatement		254:52:6914:6914	1672792	1					
ANR	1674472	ExpressionStatement	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"	1875:3:56826:56869	1672792	0	True				
ANR	1674473	CallExpression	"FAIL_IF ( ADDLI ( TMP_REG2_mapped , ZERO , src2 ) )"		1672792	0					
ANR	1674474	Callee	FAIL_IF		1672792	0					
ANR	1674475	Identifier	FAIL_IF		1672792	0					
ANR	1674476	ArgumentList	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1672792	1					
ANR	1674477	Argument	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1672792	0					
ANR	1674478	CallExpression	"ADDLI ( TMP_REG2_mapped , ZERO , src2 )"		1672792	0					
ANR	1674479	Callee	ADDLI		1672792	0					
ANR	1674480	Identifier	ADDLI		1672792	0					
ANR	1674481	ArgumentList	TMP_REG2_mapped		1672792	1					
ANR	1674482	Argument	TMP_REG2_mapped		1672792	0					
ANR	1674483	Identifier	TMP_REG2_mapped		1672792	0					
ANR	1674484	Argument	ZERO		1672792	1					
ANR	1674485	Identifier	ZERO		1672792	0					
ANR	1674486	Argument	src2		1672792	2					
ANR	1674487	Identifier	src2		1672792	0					
ANR	1674488	ExpressionStatement	src2 = TMP_REG2	1876:3:56874:56889	1672792	1	True				
ANR	1674489	AssignmentExpression	src2 = TMP_REG2		1672792	0		=			
ANR	1674490	Identifier	src2		1672792	0					
ANR	1674491	Identifier	TMP_REG2		1672792	1					
ANR	1674492	ExpressionStatement	flags &= ~SRC2_IMM	1877:3:56894:56912	1672792	2	True				
ANR	1674493	AssignmentExpression	flags &= ~SRC2_IMM		1672792	0		&=			
ANR	1674494	Identifier	flags		1672792	0					
ANR	1674495	Identifier	~SRC2_IMM		1672792	1					
ANR	1674496	IfStatement	if ( flags & SRC2_IMM )		1672792	50					
ANR	1674497	Condition	flags & SRC2_IMM	1880:6:56925:56940	1672792	0	True				
ANR	1674498	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1674499	Identifier	flags		1672792	0					
ANR	1674500	Identifier	SRC2_IMM		1672792	1					
ANR	1674501	CompoundStatement		260:24:7036:7036	1672792	1					
ANR	1674502	IfStatement	if ( op & SLJIT_SET_C )		1672792	0					
ANR	1674503	Condition	op & SLJIT_SET_C	1881:7:56952:56967	1672792	0	True				
ANR	1674504	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1674505	Identifier	op		1672792	0					
ANR	1674506	Identifier	SLJIT_SET_C		1672792	1					
ANR	1674507	CompoundStatement		261:25:7063:7063	1672792	1					
ANR	1674508	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , - src2 ) )"	1882:4:56976:57033	1672792	0	True				
ANR	1674509	CallExpression	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , - src2 ) )"		1672792	0					
ANR	1674510	Callee	FAIL_IF		1672792	0					
ANR	1674511	Identifier	FAIL_IF		1672792	0					
ANR	1674512	ArgumentList	"load_immediate ( compiler , ADDR_TMP_mapped , - src2 )"		1672792	1					
ANR	1674513	Argument	"load_immediate ( compiler , ADDR_TMP_mapped , - src2 )"		1672792	0					
ANR	1674514	CallExpression	"load_immediate ( compiler , ADDR_TMP_mapped , - src2 )"		1672792	0					
ANR	1674515	Callee	load_immediate		1672792	0					
ANR	1674516	Identifier	load_immediate		1672792	0					
ANR	1674517	ArgumentList	compiler		1672792	1					
ANR	1674518	Argument	compiler		1672792	0					
ANR	1674519	Identifier	compiler		1672792	0					
ANR	1674520	Argument	ADDR_TMP_mapped		1672792	1					
ANR	1674521	Identifier	ADDR_TMP_mapped		1672792	0					
ANR	1674522	Argument	- src2		1672792	2					
ANR	1674523	UnaryOperationExpression	- src2		1672792	0					
ANR	1674524	UnaryOperator	-		1672792	0					
ANR	1674525	Identifier	src2		1672792	1					
ANR	1674526	ExpressionStatement	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped ) )"	1883:4:57039:57097	1672792	1	True				
ANR	1674527	CallExpression	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped ) )"		1672792	0					
ANR	1674528	Callee	FAIL_IF		1672792	0					
ANR	1674529	Identifier	FAIL_IF		1672792	0					
ANR	1674530	ArgumentList	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped )"		1672792	1					
ANR	1674531	Argument	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped )"		1672792	0					
ANR	1674532	CallExpression	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , ADDR_TMP_mapped )"		1672792	0					
ANR	1674533	Callee	CMPLTU		1672792	0					
ANR	1674534	Identifier	CMPLTU		1672792	0					
ANR	1674535	ArgumentList	TMP_EREG1		1672792	1					
ANR	1674536	Argument	TMP_EREG1		1672792	0					
ANR	1674537	Identifier	TMP_EREG1		1672792	0					
ANR	1674538	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674539	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674540	Identifier	reg_map		1672792	0					
ANR	1674541	Identifier	src1		1672792	1					
ANR	1674542	Argument	ADDR_TMP_mapped		1672792	2					
ANR	1674543	Identifier	ADDR_TMP_mapped		1672792	0					
ANR	1674544	ExpressionStatement	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"	1887:3:57154:57204	1672792	1	True				
ANR	1674545	CallExpression	"FAIL_IF ( ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 ) )"		1672792	0					
ANR	1674546	Callee	FAIL_IF		1672792	0					
ANR	1674547	Identifier	FAIL_IF		1672792	0					
ANR	1674548	ArgumentList	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1672792	1					
ANR	1674549	Argument	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1672792	0					
ANR	1674550	CallExpression	"ADDLI ( reg_map [ dst ] , reg_map [ src1 ] , - src2 )"		1672792	0					
ANR	1674551	Callee	ADDLI		1672792	0					
ANR	1674552	Identifier	ADDLI		1672792	0					
ANR	1674553	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1674554	Argument	reg_map [ dst ]		1672792	0					
ANR	1674555	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674556	Identifier	reg_map		1672792	0					
ANR	1674557	Identifier	dst		1672792	1					
ANR	1674558	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674559	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674560	Identifier	reg_map		1672792	0					
ANR	1674561	Identifier	src1		1672792	1					
ANR	1674562	Argument	- src2		1672792	2					
ANR	1674563	UnaryOperationExpression	- src2		1672792	0					
ANR	1674564	UnaryOperator	-		1672792	0					
ANR	1674565	Identifier	src2		1672792	1					
ANR	1674566	ElseStatement	else		1672792	0					
ANR	1674567	CompoundStatement		269:9:7309:7309	1672792	0					
ANR	1674568	IfStatement	if ( op & SLJIT_SET_C )		1672792	0					
ANR	1674569	Condition	op & SLJIT_SET_C	1890:7:57225:57240	1672792	0	True				
ANR	1674570	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1674571	Identifier	op		1672792	0					
ANR	1674572	Identifier	SLJIT_SET_C		1672792	1					
ANR	1674573	ExpressionStatement	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1891:4:57247:57303	1672792	1	True				
ANR	1674574	CallExpression	"FAIL_IF ( CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1674575	Callee	FAIL_IF		1672792	0					
ANR	1674576	Identifier	FAIL_IF		1672792	0					
ANR	1674577	ArgumentList	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1674578	Argument	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674579	CallExpression	"CMPLTU ( TMP_EREG1 , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674580	Callee	CMPLTU		1672792	0					
ANR	1674581	Identifier	CMPLTU		1672792	0					
ANR	1674582	ArgumentList	TMP_EREG1		1672792	1					
ANR	1674583	Argument	TMP_EREG1		1672792	0					
ANR	1674584	Identifier	TMP_EREG1		1672792	0					
ANR	1674585	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674586	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674587	Identifier	reg_map		1672792	0					
ANR	1674588	Identifier	src1		1672792	1					
ANR	1674589	Argument	reg_map [ src2 ]		1672792	2					
ANR	1674590	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674591	Identifier	reg_map		1672792	0					
ANR	1674592	Identifier	src2		1672792	1					
ANR	1674593	ExpressionStatement	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"	1893:3:57355:57411	1672792	1	True				
ANR	1674594	CallExpression	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] ) )"		1672792	0					
ANR	1674595	Callee	FAIL_IF		1672792	0					
ANR	1674596	Identifier	FAIL_IF		1672792	0					
ANR	1674597	ArgumentList	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	1					
ANR	1674598	Argument	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674599	CallExpression	"SUB ( reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] )"		1672792	0					
ANR	1674600	Callee	SUB		1672792	0					
ANR	1674601	Identifier	SUB		1672792	0					
ANR	1674602	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1674603	Argument	reg_map [ dst ]		1672792	0					
ANR	1674604	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674605	Identifier	reg_map		1672792	0					
ANR	1674606	Identifier	dst		1672792	1					
ANR	1674607	Argument	reg_map [ src1 ]		1672792	1					
ANR	1674608	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674609	Identifier	reg_map		1672792	0					
ANR	1674610	Identifier	src1		1672792	1					
ANR	1674611	Argument	reg_map [ src2 ]		1672792	2					
ANR	1674612	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674613	Identifier	reg_map		1672792	0					
ANR	1674614	Identifier	src2		1672792	1					
ANR	1674615	IfStatement	if ( op & SLJIT_SET_C )		1672792	51					
ANR	1674616	Condition	op & SLJIT_SET_C	1896:6:57424:57439	1672792	0	True				
ANR	1674617	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1674618	Identifier	op		1672792	0					
ANR	1674619	Identifier	SLJIT_SET_C		1672792	1					
ANR	1674620	ExpressionStatement	"FAIL_IF ( CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG ) )"	1897:3:57445:57498	1672792	1	True				
ANR	1674621	CallExpression	"FAIL_IF ( CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG ) )"		1672792	0					
ANR	1674622	Callee	FAIL_IF		1672792	0					
ANR	1674623	Identifier	FAIL_IF		1672792	0					
ANR	1674624	ArgumentList	"CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG )"		1672792	1					
ANR	1674625	Argument	"CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1674626	CallExpression	"CMOVEQZ ( TMP_EREG1 , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1674627	Callee	CMOVEQZ		1672792	0					
ANR	1674628	Identifier	CMOVEQZ		1672792	0					
ANR	1674629	ArgumentList	TMP_EREG1		1672792	1					
ANR	1674630	Argument	TMP_EREG1		1672792	0					
ANR	1674631	Identifier	TMP_EREG1		1672792	0					
ANR	1674632	Argument	reg_map [ dst ]		1672792	1					
ANR	1674633	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674634	Identifier	reg_map		1672792	0					
ANR	1674635	Identifier	dst		1672792	1					
ANR	1674636	Argument	ULESS_FLAG		1672792	2					
ANR	1674637	Identifier	ULESS_FLAG		1672792	0					
ANR	1674638	ExpressionStatement	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"	1899:2:57503:57555	1672792	52	True				
ANR	1674639	CallExpression	"FAIL_IF ( SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG ) )"		1672792	0					
ANR	1674640	Callee	FAIL_IF		1672792	0					
ANR	1674641	Identifier	FAIL_IF		1672792	0					
ANR	1674642	ArgumentList	"SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1672792	1					
ANR	1674643	Argument	"SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1674644	CallExpression	"SUB ( reg_map [ dst ] , reg_map [ dst ] , ULESS_FLAG )"		1672792	0					
ANR	1674645	Callee	SUB		1672792	0					
ANR	1674646	Identifier	SUB		1672792	0					
ANR	1674647	ArgumentList	reg_map [ dst ]		1672792	1					
ANR	1674648	Argument	reg_map [ dst ]		1672792	0					
ANR	1674649	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674650	Identifier	reg_map		1672792	0					
ANR	1674651	Identifier	dst		1672792	1					
ANR	1674652	Argument	reg_map [ dst ]		1672792	1					
ANR	1674653	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674654	Identifier	reg_map		1672792	0					
ANR	1674655	Identifier	dst		1672792	1					
ANR	1674656	Argument	ULESS_FLAG		1672792	2					
ANR	1674657	Identifier	ULESS_FLAG		1672792	0					
ANR	1674658	IfStatement	if ( op & SLJIT_SET_C )		1672792	53					
ANR	1674659	Condition	op & SLJIT_SET_C	1901:6:57564:57579	1672792	0	True				
ANR	1674660	BitAndExpression	op & SLJIT_SET_C		1672792	0		&			
ANR	1674661	Identifier	op		1672792	0					
ANR	1674662	Identifier	SLJIT_SET_C		1672792	1					
ANR	1674663	ExpressionStatement	"FAIL_IF ( ADD ( ULESS_FLAG , TMP_EREG1 , ZERO ) )"	1902:3:57585:57626	1672792	1	True				
ANR	1674664	CallExpression	"FAIL_IF ( ADD ( ULESS_FLAG , TMP_EREG1 , ZERO ) )"		1672792	0					
ANR	1674665	Callee	FAIL_IF		1672792	0					
ANR	1674666	Identifier	FAIL_IF		1672792	0					
ANR	1674667	ArgumentList	"ADD ( ULESS_FLAG , TMP_EREG1 , ZERO )"		1672792	1					
ANR	1674668	Argument	"ADD ( ULESS_FLAG , TMP_EREG1 , ZERO )"		1672792	0					
ANR	1674669	CallExpression	"ADD ( ULESS_FLAG , TMP_EREG1 , ZERO )"		1672792	0					
ANR	1674670	Callee	ADD		1672792	0					
ANR	1674671	Identifier	ADD		1672792	0					
ANR	1674672	ArgumentList	ULESS_FLAG		1672792	1					
ANR	1674673	Argument	ULESS_FLAG		1672792	0					
ANR	1674674	Identifier	ULESS_FLAG		1672792	0					
ANR	1674675	Argument	TMP_EREG1		1672792	1					
ANR	1674676	Identifier	TMP_EREG1		1672792	0					
ANR	1674677	Argument	ZERO		1672792	2					
ANR	1674678	Identifier	ZERO		1672792	0					
ANR	1674679	ReturnStatement	return SLJIT_SUCCESS ;	1904:2:57631:57651	1672792	54	True				
ANR	1674680	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1674681	Statement	define	1906:1:57655:57660	1672792	55	True				
ANR	1674682	Statement	EMIT_LOGICAL	1906:8:57662:57673	1672792	56	True				
ANR	1674683	Statement	(	1906:20:57674:57674	1672792	57	True				
ANR	1674684	Statement	op_imm	1906:21:57675:57680	1672792	58	True				
ANR	1674685	Statement	","	1906:27:57681:57681	1672792	59	True				
ANR	1674686	Statement	op_norm	1906:29:57683:57689	1672792	60	True				
ANR	1674687	Statement	)	1906:36:57690:57690	1672792	61	True				
ANR	1674688	IfStatement	if ( flags & SRC2_IMM )		1672792	62					
ANR	1674689	Condition	flags & SRC2_IMM	1907:5:57699:57714	1672792	0	True				
ANR	1674690	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1674691	Identifier	flags		1672792	0					
ANR	1674692	Identifier	SRC2_IMM		1672792	1					
ANR	1674693	CompoundStatement		287:23:7810:7810	1672792	1					
ANR	1674694	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"	1908:2:57723:57779	1672792	0	True				
ANR	1674695	CallExpression	"FAIL_IF ( load_immediate ( compiler , ADDR_TMP_mapped , src2 ) )"		1672792	0					
ANR	1674696	Callee	FAIL_IF		1672792	0					
ANR	1674697	Identifier	FAIL_IF		1672792	0					
ANR	1674698	ArgumentList	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1672792	1					
ANR	1674699	Argument	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1672792	0					
ANR	1674700	CallExpression	"load_immediate ( compiler , ADDR_TMP_mapped , src2 )"		1672792	0					
ANR	1674701	Callee	load_immediate		1672792	0					
ANR	1674702	Identifier	load_immediate		1672792	0					
ANR	1674703	ArgumentList	compiler		1672792	1					
ANR	1674704	Argument	compiler		1672792	0					
ANR	1674705	Identifier	compiler		1672792	0					
ANR	1674706	Argument	ADDR_TMP_mapped		1672792	1					
ANR	1674707	Identifier	ADDR_TMP_mapped		1672792	0					
ANR	1674708	Argument	src2		1672792	2					
ANR	1674709	Identifier	src2		1672792	0					
ANR	1674710	IfStatement	if ( op & SLJIT_SET_E )		1672792	1					
ANR	1674711	Condition	op & SLJIT_SET_E	1909:6:57789:57804	1672792	0	True				
ANR	1674712	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1674713	Identifier	op		1672792	0					
ANR	1674714	Identifier	SLJIT_SET_E		1672792	1					
ANR	1674715	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"	1910:3:57812:57920	1672792	1	True				
ANR	1674716	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"		1672792	0					
ANR	1674717	Callee	FAIL_IF		1672792	0					
ANR	1674718	Identifier	FAIL_IF		1672792	0					
ANR	1674719	ArgumentList	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1672792	1					
ANR	1674720	Argument	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1672792	0					
ANR	1674721	CallExpression	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1672792	0					
ANR	1674722	Callee	push_3_buffer		1672792	0					
ANR	1674723	Identifier	push_3_buffer		1672792	0					
ANR	1674724	ArgumentList	compiler		1672792	1					
ANR	1674725	Argument	compiler		1672792	0					
ANR	1674726	Identifier	compiler		1672792	0					
ANR	1674727	Argument	op_norm		1672792	1					
ANR	1674728	Identifier	op_norm		1672792	0					
ANR	1674729	Argument	EQUAL_FLAG		1672792	2					
ANR	1674730	Identifier	EQUAL_FLAG		1672792	0					
ANR	1674731	Argument	reg_map [ src1 ]		1672792	3					
ANR	1674732	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674733	Identifier	reg_map		1672792	0					
ANR	1674734	Identifier	src1		1672792	1					
ANR	1674735	Argument	ADDR_TMP_mapped		1672792	4					
ANR	1674736	Identifier	ADDR_TMP_mapped		1672792	0					
ANR	1674737	Argument	__LINE__		1672792	5					
ANR	1674738	Identifier	__LINE__		1672792	0					
ANR	1674739	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	2					
ANR	1674740	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1913:6:57930:57953	1672792	0	True				
ANR	1674741	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1674742	Callee	CHECK_FLAGS		1672792	0					
ANR	1674743	Identifier	CHECK_FLAGS		1672792	0					
ANR	1674744	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1674745	Argument	SLJIT_SET_E		1672792	0					
ANR	1674746	Identifier	SLJIT_SET_E		1672792	0					
ANR	1674747	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"	1914:3:57961:58071	1672792	1	True				
ANR	1674748	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ ) )"		1672792	0					
ANR	1674749	Callee	FAIL_IF		1672792	0					
ANR	1674750	Identifier	FAIL_IF		1672792	0					
ANR	1674751	ArgumentList	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1672792	1					
ANR	1674752	Argument	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1672792	0					
ANR	1674753	CallExpression	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , ADDR_TMP_mapped , __LINE__ )"		1672792	0					
ANR	1674754	Callee	push_3_buffer		1672792	0					
ANR	1674755	Identifier	push_3_buffer		1672792	0					
ANR	1674756	ArgumentList	compiler		1672792	1					
ANR	1674757	Argument	compiler		1672792	0					
ANR	1674758	Identifier	compiler		1672792	0					
ANR	1674759	Argument	op_norm		1672792	1					
ANR	1674760	Identifier	op_norm		1672792	0					
ANR	1674761	Argument	reg_map [ dst ]		1672792	2					
ANR	1674762	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674763	Identifier	reg_map		1672792	0					
ANR	1674764	Identifier	dst		1672792	1					
ANR	1674765	Argument	reg_map [ src1 ]		1672792	3					
ANR	1674766	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674767	Identifier	reg_map		1672792	0					
ANR	1674768	Identifier	src1		1672792	1					
ANR	1674769	Argument	ADDR_TMP_mapped		1672792	4					
ANR	1674770	Identifier	ADDR_TMP_mapped		1672792	0					
ANR	1674771	Argument	__LINE__		1672792	5					
ANR	1674772	Identifier	__LINE__		1672792	0					
ANR	1674773	ElseStatement	else		1672792	0					
ANR	1674774	CompoundStatement		297:8:8176:8176	1672792	0					
ANR	1674775	IfStatement	if ( op & SLJIT_SET_E )		1672792	0					
ANR	1674776	Condition	op & SLJIT_SET_E	1918:6:58093:58108	1672792	0	True				
ANR	1674777	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1674778	Identifier	op		1672792	0					
ANR	1674779	Identifier	SLJIT_SET_E		1672792	1					
ANR	1674780	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"	1919:3:58116:58222	1672792	1	True				
ANR	1674781	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"		1672792	0					
ANR	1674782	Callee	FAIL_IF		1672792	0					
ANR	1674783	Identifier	FAIL_IF		1672792	0					
ANR	1674784	ArgumentList	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	1					
ANR	1674785	Argument	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	0					
ANR	1674786	CallExpression	"push_3_buffer ( compiler , op_norm , EQUAL_FLAG , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	0					
ANR	1674787	Callee	push_3_buffer		1672792	0					
ANR	1674788	Identifier	push_3_buffer		1672792	0					
ANR	1674789	ArgumentList	compiler		1672792	1					
ANR	1674790	Argument	compiler		1672792	0					
ANR	1674791	Identifier	compiler		1672792	0					
ANR	1674792	Argument	op_norm		1672792	1					
ANR	1674793	Identifier	op_norm		1672792	0					
ANR	1674794	Argument	EQUAL_FLAG		1672792	2					
ANR	1674795	Identifier	EQUAL_FLAG		1672792	0					
ANR	1674796	Argument	reg_map [ src1 ]		1672792	3					
ANR	1674797	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674798	Identifier	reg_map		1672792	0					
ANR	1674799	Identifier	src1		1672792	1					
ANR	1674800	Argument	reg_map [ src2 ]		1672792	4					
ANR	1674801	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674802	Identifier	reg_map		1672792	0					
ANR	1674803	Identifier	src2		1672792	1					
ANR	1674804	Argument	__LINE__		1672792	5					
ANR	1674805	Identifier	__LINE__		1672792	0					
ANR	1674806	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	1					
ANR	1674807	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1922:6:58232:58255	1672792	0	True				
ANR	1674808	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1674809	Callee	CHECK_FLAGS		1672792	0					
ANR	1674810	Identifier	CHECK_FLAGS		1672792	0					
ANR	1674811	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1674812	Argument	SLJIT_SET_E		1672792	0					
ANR	1674813	Identifier	SLJIT_SET_E		1672792	0					
ANR	1674814	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"	1923:3:58263:58371	1672792	1	True				
ANR	1674815	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"		1672792	0					
ANR	1674816	Callee	FAIL_IF		1672792	0					
ANR	1674817	Identifier	FAIL_IF		1672792	0					
ANR	1674818	ArgumentList	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	1					
ANR	1674819	Argument	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	0					
ANR	1674820	CallExpression	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	0					
ANR	1674821	Callee	push_3_buffer		1672792	0					
ANR	1674822	Identifier	push_3_buffer		1672792	0					
ANR	1674823	ArgumentList	compiler		1672792	1					
ANR	1674824	Argument	compiler		1672792	0					
ANR	1674825	Identifier	compiler		1672792	0					
ANR	1674826	Argument	op_norm		1672792	1					
ANR	1674827	Identifier	op_norm		1672792	0					
ANR	1674828	Argument	reg_map [ dst ]		1672792	2					
ANR	1674829	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674830	Identifier	reg_map		1672792	0					
ANR	1674831	Identifier	dst		1672792	1					
ANR	1674832	Argument	reg_map [ src1 ]		1672792	3					
ANR	1674833	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674834	Identifier	reg_map		1672792	0					
ANR	1674835	Identifier	src1		1672792	1					
ANR	1674836	Argument	reg_map [ src2 ]		1672792	4					
ANR	1674837	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1674838	Identifier	reg_map		1672792	0					
ANR	1674839	Identifier	src2		1672792	1					
ANR	1674840	Argument	__LINE__		1672792	5					
ANR	1674841	Identifier	__LINE__		1672792	0					
ANR	1674842	Label	case SLJIT_AND :	1928:1:58380:58394	1672792	63	True				
ANR	1674843	Identifier	SLJIT_AND		1672792	0					
ANR	1674844	ExpressionStatement	"EMIT_LOGICAL ( TILEGX_OPC_ANDI , TILEGX_OPC_AND )"	1929:2:58398:58443	1672792	64	True				
ANR	1674845	CallExpression	"EMIT_LOGICAL ( TILEGX_OPC_ANDI , TILEGX_OPC_AND )"		1672792	0					
ANR	1674846	Callee	EMIT_LOGICAL		1672792	0					
ANR	1674847	Identifier	EMIT_LOGICAL		1672792	0					
ANR	1674848	ArgumentList	TILEGX_OPC_ANDI		1672792	1					
ANR	1674849	Argument	TILEGX_OPC_ANDI		1672792	0					
ANR	1674850	Identifier	TILEGX_OPC_ANDI		1672792	0					
ANR	1674851	Argument	TILEGX_OPC_AND		1672792	1					
ANR	1674852	Identifier	TILEGX_OPC_AND		1672792	0					
ANR	1674853	ReturnStatement	return SLJIT_SUCCESS ;	1930:2:58447:58467	1672792	65	True				
ANR	1674854	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1674855	Label	case SLJIT_OR :	1932:1:58471:58484	1672792	66	True				
ANR	1674856	Identifier	SLJIT_OR		1672792	0					
ANR	1674857	ExpressionStatement	"EMIT_LOGICAL ( TILEGX_OPC_ORI , TILEGX_OPC_OR )"	1933:2:58488:58531	1672792	67	True				
ANR	1674858	CallExpression	"EMIT_LOGICAL ( TILEGX_OPC_ORI , TILEGX_OPC_OR )"		1672792	0					
ANR	1674859	Callee	EMIT_LOGICAL		1672792	0					
ANR	1674860	Identifier	EMIT_LOGICAL		1672792	0					
ANR	1674861	ArgumentList	TILEGX_OPC_ORI		1672792	1					
ANR	1674862	Argument	TILEGX_OPC_ORI		1672792	0					
ANR	1674863	Identifier	TILEGX_OPC_ORI		1672792	0					
ANR	1674864	Argument	TILEGX_OPC_OR		1672792	1					
ANR	1674865	Identifier	TILEGX_OPC_OR		1672792	0					
ANR	1674866	ReturnStatement	return SLJIT_SUCCESS ;	1934:2:58535:58555	1672792	68	True				
ANR	1674867	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1674868	Label	case SLJIT_XOR :	1936:1:58559:58573	1672792	69	True				
ANR	1674869	Identifier	SLJIT_XOR		1672792	0					
ANR	1674870	ExpressionStatement	"EMIT_LOGICAL ( TILEGX_OPC_XORI , TILEGX_OPC_XOR )"	1937:2:58577:58622	1672792	70	True				
ANR	1674871	CallExpression	"EMIT_LOGICAL ( TILEGX_OPC_XORI , TILEGX_OPC_XOR )"		1672792	0					
ANR	1674872	Callee	EMIT_LOGICAL		1672792	0					
ANR	1674873	Identifier	EMIT_LOGICAL		1672792	0					
ANR	1674874	ArgumentList	TILEGX_OPC_XORI		1672792	1					
ANR	1674875	Argument	TILEGX_OPC_XORI		1672792	0					
ANR	1674876	Identifier	TILEGX_OPC_XORI		1672792	0					
ANR	1674877	Argument	TILEGX_OPC_XOR		1672792	1					
ANR	1674878	Identifier	TILEGX_OPC_XOR		1672792	0					
ANR	1674879	ReturnStatement	return SLJIT_SUCCESS ;	1938:2:58626:58646	1672792	71	True				
ANR	1674880	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1674881	Statement	define	1940:1:58650:58655	1672792	72	True				
ANR	1674882	Statement	EMIT_SHIFT	1940:8:58657:58666	1672792	73	True				
ANR	1674883	Statement	(	1940:18:58667:58667	1672792	74	True				
ANR	1674884	Statement	op_imm	1940:19:58668:58673	1672792	75	True				
ANR	1674885	Statement	","	1940:25:58674:58674	1672792	76	True				
ANR	1674886	Statement	op_norm	1940:27:58676:58682	1672792	77	True				
ANR	1674887	Statement	)	1940:34:58683:58683	1672792	78	True				
ANR	1674888	IfStatement	if ( flags & SRC2_IMM )		1672792	79					
ANR	1674889	Condition	flags & SRC2_IMM	1941:5:58692:58707	1672792	0	True				
ANR	1674890	BitAndExpression	flags & SRC2_IMM		1672792	0		&			
ANR	1674891	Identifier	flags		1672792	0					
ANR	1674892	Identifier	SRC2_IMM		1672792	1					
ANR	1674893	CompoundStatement		321:23:8803:8803	1672792	1					
ANR	1674894	IfStatement	if ( op & SLJIT_SET_E )		1672792	0					
ANR	1674895	Condition	op & SLJIT_SET_E	1942:6:58720:58735	1672792	0	True				
ANR	1674896	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1674897	Identifier	op		1672792	0					
ANR	1674898	Identifier	SLJIT_SET_E		1672792	1					
ANR	1674899	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"	1943:3:58743:58846	1672792	1	True				
ANR	1674900	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"		1672792	0					
ANR	1674901	Callee	FAIL_IF		1672792	0					
ANR	1674902	Identifier	FAIL_IF		1672792	0					
ANR	1674903	ArgumentList	"push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	1					
ANR	1674904	Argument	"push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	0					
ANR	1674905	CallExpression	"push_3_buffer ( compiler , op_imm , EQUAL_FLAG , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	0					
ANR	1674906	Callee	push_3_buffer		1672792	0					
ANR	1674907	Identifier	push_3_buffer		1672792	0					
ANR	1674908	ArgumentList	compiler		1672792	1					
ANR	1674909	Argument	compiler		1672792	0					
ANR	1674910	Identifier	compiler		1672792	0					
ANR	1674911	Argument	op_imm		1672792	1					
ANR	1674912	Identifier	op_imm		1672792	0					
ANR	1674913	Argument	EQUAL_FLAG		1672792	2					
ANR	1674914	Identifier	EQUAL_FLAG		1672792	0					
ANR	1674915	Argument	reg_map [ src1 ]		1672792	3					
ANR	1674916	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674917	Identifier	reg_map		1672792	0					
ANR	1674918	Identifier	src1		1672792	1					
ANR	1674919	Argument	src2 & 0x3F		1672792	4					
ANR	1674920	BitAndExpression	src2 & 0x3F		1672792	0		&			
ANR	1674921	Identifier	src2		1672792	0					
ANR	1674922	PrimaryExpression	0x3F		1672792	1					
ANR	1674923	Argument	__LINE__		1672792	5					
ANR	1674924	Identifier	__LINE__		1672792	0					
ANR	1674925	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	1					
ANR	1674926	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1946:6:58856:58879	1672792	0	True				
ANR	1674927	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1674928	Callee	CHECK_FLAGS		1672792	0					
ANR	1674929	Identifier	CHECK_FLAGS		1672792	0					
ANR	1674930	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1674931	Argument	SLJIT_SET_E		1672792	0					
ANR	1674932	Identifier	SLJIT_SET_E		1672792	0					
ANR	1674933	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"	1947:3:58887:58992	1672792	1	True				
ANR	1674934	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"		1672792	0					
ANR	1674935	Callee	FAIL_IF		1672792	0					
ANR	1674936	Identifier	FAIL_IF		1672792	0					
ANR	1674937	ArgumentList	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	1					
ANR	1674938	Argument	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	0					
ANR	1674939	CallExpression	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	0					
ANR	1674940	Callee	push_3_buffer		1672792	0					
ANR	1674941	Identifier	push_3_buffer		1672792	0					
ANR	1674942	ArgumentList	compiler		1672792	1					
ANR	1674943	Argument	compiler		1672792	0					
ANR	1674944	Identifier	compiler		1672792	0					
ANR	1674945	Argument	op_imm		1672792	1					
ANR	1674946	Identifier	op_imm		1672792	0					
ANR	1674947	Argument	reg_map [ dst ]		1672792	2					
ANR	1674948	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674949	Identifier	reg_map		1672792	0					
ANR	1674950	Identifier	dst		1672792	1					
ANR	1674951	Argument	reg_map [ src1 ]		1672792	3					
ANR	1674952	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674953	Identifier	reg_map		1672792	0					
ANR	1674954	Identifier	src1		1672792	1					
ANR	1674955	Argument	src2 & 0x3F		1672792	4					
ANR	1674956	BitAndExpression	src2 & 0x3F		1672792	0		&			
ANR	1674957	Identifier	src2		1672792	0					
ANR	1674958	PrimaryExpression	0x3F		1672792	1					
ANR	1674959	Argument	__LINE__		1672792	5					
ANR	1674960	Identifier	__LINE__		1672792	0					
ANR	1674961	ElseStatement	else		1672792	0					
ANR	1674962	CompoundStatement		330:8:9097:9097	1672792	0					
ANR	1674963	IfStatement	if ( op & SLJIT_SET_E )		1672792	0					
ANR	1674964	Condition	op & SLJIT_SET_E	1951:6:59014:59029	1672792	0	True				
ANR	1674965	BitAndExpression	op & SLJIT_SET_E		1672792	0		&			
ANR	1674966	Identifier	op		1672792	0					
ANR	1674967	Identifier	SLJIT_SET_E		1672792	1					
ANR	1674968	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"	1952:3:59037:59142	1672792	1	True				
ANR	1674969	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ ) )"		1672792	0					
ANR	1674970	Callee	FAIL_IF		1672792	0					
ANR	1674971	Identifier	FAIL_IF		1672792	0					
ANR	1674972	ArgumentList	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	1					
ANR	1674973	Argument	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	0					
ANR	1674974	CallExpression	"push_3_buffer ( compiler , op_imm , reg_map [ dst ] , reg_map [ src1 ] , src2 & 0x3F , __LINE__ )"		1672792	0					
ANR	1674975	Callee	push_3_buffer		1672792	0					
ANR	1674976	Identifier	push_3_buffer		1672792	0					
ANR	1674977	ArgumentList	compiler		1672792	1					
ANR	1674978	Argument	compiler		1672792	0					
ANR	1674979	Identifier	compiler		1672792	0					
ANR	1674980	Argument	op_imm		1672792	1					
ANR	1674981	Identifier	op_imm		1672792	0					
ANR	1674982	Argument	reg_map [ dst ]		1672792	2					
ANR	1674983	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1674984	Identifier	reg_map		1672792	0					
ANR	1674985	Identifier	dst		1672792	1					
ANR	1674986	Argument	reg_map [ src1 ]		1672792	3					
ANR	1674987	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1674988	Identifier	reg_map		1672792	0					
ANR	1674989	Identifier	src1		1672792	1					
ANR	1674990	Argument	src2 & 0x3F		1672792	4					
ANR	1674991	BitAndExpression	src2 & 0x3F		1672792	0		&			
ANR	1674992	Identifier	src2		1672792	0					
ANR	1674993	PrimaryExpression	0x3F		1672792	1					
ANR	1674994	Argument	__LINE__		1672792	5					
ANR	1674995	Identifier	__LINE__		1672792	0					
ANR	1674996	IfStatement	if ( CHECK_FLAGS ( SLJIT_SET_E ) )		1672792	1					
ANR	1674997	Condition	CHECK_FLAGS ( SLJIT_SET_E )	1955:6:59152:59175	1672792	0	True				
ANR	1674998	CallExpression	CHECK_FLAGS ( SLJIT_SET_E )		1672792	0					
ANR	1674999	Callee	CHECK_FLAGS		1672792	0					
ANR	1675000	Identifier	CHECK_FLAGS		1672792	0					
ANR	1675001	ArgumentList	SLJIT_SET_E		1672792	1					
ANR	1675002	Argument	SLJIT_SET_E		1672792	0					
ANR	1675003	Identifier	SLJIT_SET_E		1672792	0					
ANR	1675004	ExpressionStatement	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"	1956:3:59183:59291	1672792	1	True				
ANR	1675005	CallExpression	"FAIL_IF ( push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ ) )"		1672792	0					
ANR	1675006	Callee	FAIL_IF		1672792	0					
ANR	1675007	Identifier	FAIL_IF		1672792	0					
ANR	1675008	ArgumentList	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	1					
ANR	1675009	Argument	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	0					
ANR	1675010	CallExpression	"push_3_buffer ( compiler , op_norm , reg_map [ dst ] , reg_map [ src1 ] , reg_map [ src2 ] , __LINE__ )"		1672792	0					
ANR	1675011	Callee	push_3_buffer		1672792	0					
ANR	1675012	Identifier	push_3_buffer		1672792	0					
ANR	1675013	ArgumentList	compiler		1672792	1					
ANR	1675014	Argument	compiler		1672792	0					
ANR	1675015	Identifier	compiler		1672792	0					
ANR	1675016	Argument	op_norm		1672792	1					
ANR	1675017	Identifier	op_norm		1672792	0					
ANR	1675018	Argument	reg_map [ dst ]		1672792	2					
ANR	1675019	ArrayIndexing	reg_map [ dst ]		1672792	0					
ANR	1675020	Identifier	reg_map		1672792	0					
ANR	1675021	Identifier	dst		1672792	1					
ANR	1675022	Argument	reg_map [ src1 ]		1672792	3					
ANR	1675023	ArrayIndexing	reg_map [ src1 ]		1672792	0					
ANR	1675024	Identifier	reg_map		1672792	0					
ANR	1675025	Identifier	src1		1672792	1					
ANR	1675026	Argument	reg_map [ src2 ]		1672792	4					
ANR	1675027	ArrayIndexing	reg_map [ src2 ]		1672792	0					
ANR	1675028	Identifier	reg_map		1672792	0					
ANR	1675029	Identifier	src2		1672792	1					
ANR	1675030	Argument	__LINE__		1672792	5					
ANR	1675031	Identifier	__LINE__		1672792	0					
ANR	1675032	Label	case SLJIT_SHL :	1961:1:59300:59314	1672792	80	True				
ANR	1675033	Identifier	SLJIT_SHL		1672792	0					
ANR	1675034	ExpressionStatement	"EMIT_SHIFT ( TILEGX_OPC_SHLI , TILEGX_OPC_SHL )"	1962:2:59318:59361	1672792	81	True				
ANR	1675035	CallExpression	"EMIT_SHIFT ( TILEGX_OPC_SHLI , TILEGX_OPC_SHL )"		1672792	0					
ANR	1675036	Callee	EMIT_SHIFT		1672792	0					
ANR	1675037	Identifier	EMIT_SHIFT		1672792	0					
ANR	1675038	ArgumentList	TILEGX_OPC_SHLI		1672792	1					
ANR	1675039	Argument	TILEGX_OPC_SHLI		1672792	0					
ANR	1675040	Identifier	TILEGX_OPC_SHLI		1672792	0					
ANR	1675041	Argument	TILEGX_OPC_SHL		1672792	1					
ANR	1675042	Identifier	TILEGX_OPC_SHL		1672792	0					
ANR	1675043	ReturnStatement	return SLJIT_SUCCESS ;	1963:2:59365:59385	1672792	82	True				
ANR	1675044	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1675045	Label	case SLJIT_LSHR :	1965:1:59389:59404	1672792	83	True				
ANR	1675046	Identifier	SLJIT_LSHR		1672792	0					
ANR	1675047	ExpressionStatement	"EMIT_SHIFT ( TILEGX_OPC_SHRUI , TILEGX_OPC_SHRU )"	1966:2:59408:59453	1672792	84	True				
ANR	1675048	CallExpression	"EMIT_SHIFT ( TILEGX_OPC_SHRUI , TILEGX_OPC_SHRU )"		1672792	0					
ANR	1675049	Callee	EMIT_SHIFT		1672792	0					
ANR	1675050	Identifier	EMIT_SHIFT		1672792	0					
ANR	1675051	ArgumentList	TILEGX_OPC_SHRUI		1672792	1					
ANR	1675052	Argument	TILEGX_OPC_SHRUI		1672792	0					
ANR	1675053	Identifier	TILEGX_OPC_SHRUI		1672792	0					
ANR	1675054	Argument	TILEGX_OPC_SHRU		1672792	1					
ANR	1675055	Identifier	TILEGX_OPC_SHRU		1672792	0					
ANR	1675056	ReturnStatement	return SLJIT_SUCCESS ;	1967:2:59457:59477	1672792	85	True				
ANR	1675057	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1675058	Label	case SLJIT_ASHR :	1969:1:59481:59496	1672792	86	True				
ANR	1675059	Identifier	SLJIT_ASHR		1672792	0					
ANR	1675060	ExpressionStatement	"EMIT_SHIFT ( TILEGX_OPC_SHRSI , TILEGX_OPC_SHRS )"	1970:2:59500:59545	1672792	87	True				
ANR	1675061	CallExpression	"EMIT_SHIFT ( TILEGX_OPC_SHRSI , TILEGX_OPC_SHRS )"		1672792	0					
ANR	1675062	Callee	EMIT_SHIFT		1672792	0					
ANR	1675063	Identifier	EMIT_SHIFT		1672792	0					
ANR	1675064	ArgumentList	TILEGX_OPC_SHRSI		1672792	1					
ANR	1675065	Argument	TILEGX_OPC_SHRSI		1672792	0					
ANR	1675066	Identifier	TILEGX_OPC_SHRSI		1672792	0					
ANR	1675067	Argument	TILEGX_OPC_SHRS		1672792	1					
ANR	1675068	Identifier	TILEGX_OPC_SHRS		1672792	0					
ANR	1675069	ReturnStatement	return SLJIT_SUCCESS ;	1971:2:59549:59569	1672792	88	True				
ANR	1675070	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1675071	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1974:1:59576:59595	1672792	2	True				
ANR	1675072	CallExpression	SLJIT_ASSERT_STOP ( )		1672792	0					
ANR	1675073	Callee	SLJIT_ASSERT_STOP		1672792	0					
ANR	1675074	Identifier	SLJIT_ASSERT_STOP		1672792	0					
ANR	1675075	ArgumentList			1672792	1					
ANR	1675076	ReturnStatement	return SLJIT_SUCCESS ;	1975:1:59598:59618	1672792	3	True				
ANR	1675077	Identifier	SLJIT_SUCCESS		1672792	0					
ANR	1675078	ReturnType	static SLJIT_INLINE sljit_si		1672792	1					
ANR	1675079	Identifier	emit_single_op		1672792	2					
ANR	1675080	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_sw src2"		1672792	3					
ANR	1675081	Parameter	struct sljit_compiler * compiler	1620:44:49800:49830	1672792	0	True				
ANR	1675082	ParameterType	struct sljit_compiler *		1672792	0					
ANR	1675083	Identifier	compiler		1672792	1					
ANR	1675084	Parameter	sljit_si op	1620:77:49833:49843	1672792	1	True				
ANR	1675085	ParameterType	sljit_si		1672792	0					
ANR	1675086	Identifier	op		1672792	1					
ANR	1675087	Parameter	sljit_si flags	1620:90:49846:49859	1672792	2	True				
ANR	1675088	ParameterType	sljit_si		1672792	0					
ANR	1675089	Identifier	flags		1672792	1					
ANR	1675090	Parameter	sljit_si dst	1620:106:49862:49873	1672792	3	True				
ANR	1675091	ParameterType	sljit_si		1672792	0					
ANR	1675092	Identifier	dst		1672792	1					
ANR	1675093	Parameter	sljit_si src1	1620:120:49876:49888	1672792	4	True				
ANR	1675094	ParameterType	sljit_si		1672792	0					
ANR	1675095	Identifier	src1		1672792	1					
ANR	1675096	Parameter	sljit_sw src2	1620:135:49891:49903	1672792	5	True				
ANR	1675097	ParameterType	sljit_sw		1672792	0					
ANR	1675098	Identifier	src2		1672792	1					
ANR	1675099	CFGEntryNode	ENTRY		1672792		True				
ANR	1675100	CFGExitNode	EXIT		1672792		True				
ANR	1675101	Symbol	EQUAL_FLAG		1672792						
ANR	1675102	Symbol	ADD		1672792						
ANR	1675103	Symbol	ZERO		1672792						
ANR	1675104	Symbol	TMP_REG2		1672792						
ANR	1675105	Symbol	TMP_REG1		1672792						
ANR	1675106	Symbol	SIMM_16BIT_MIN		1672792						
ANR	1675107	Symbol	reg_map		1672792						
ANR	1675108	Symbol	TMP_EREG1		1672792						
ANR	1675109	Symbol	TMP_EREG2		1672792						
ANR	1675110	Symbol	ADDLI		1672792						
ANR	1675111	Symbol	TILEGX_OPC_ORI		1672792						
ANR	1675112	Symbol	GET_OPCODE		1672792						
ANR	1675113	Symbol	* dst		1672792						
ANR	1675114	Symbol	CLZ		1672792						
ANR	1675115	Symbol	TILEGX_OPC_SHRUI		1672792						
ANR	1675116	Symbol	CMOVEQZ		1672792						
ANR	1675117	Symbol	TILEGX_OPC_XORI		1672792						
ANR	1675118	Symbol	ULESS_FLAG		1672792						
ANR	1675119	Symbol	TILEGX_OPC_ANDI		1672792						
ANR	1675120	Symbol	TMP_REG2_mapped		1672792						
ANR	1675121	Symbol	TILEGX_OPC_OR		1672792						
ANR	1675122	Symbol	* src2		1672792						
ANR	1675123	Symbol	CHECK_FLAGS		1672792						
ANR	1675124	Symbol	SUB		1672792						
ANR	1675125	Symbol	BFEXTU		1672792						
ANR	1675126	Symbol	* src1		1672792						
ANR	1675127	Symbol	overflow_ra		1672792						
ANR	1675128	Symbol	REG2_SOURCE		1672792						
ANR	1675129	Symbol	TILEGX_OPC_SHRU		1672792						
ANR	1675130	Symbol	op_imm		1672792						
ANR	1675131	Symbol	* reg_map		1672792						
ANR	1675132	Symbol	BFEXTS		1672792						
ANR	1675133	Symbol	TILEGX_OPC_SHRS		1672792						
ANR	1675134	Symbol	NOR		1672792						
ANR	1675135	Symbol	ADDR_TMP_mapped		1672792						
ANR	1675136	Symbol	AND		1672792						
ANR	1675137	Symbol	XOR		1672792						
ANR	1675138	Symbol	CMOVNEZ		1672792						
ANR	1675139	Symbol	op_norm		1672792						
ANR	1675140	Symbol	TILEGX_OPC_XOR		1672792						
ANR	1675141	Symbol	REG_DEST		1672792						
ANR	1675142	Symbol	OVERFLOW_FLAG		1672792						
ANR	1675143	Symbol	TILEGX_OPC_AND		1672792						
ANR	1675144	Symbol	SHRUI		1672792						
ANR	1675145	Symbol	dst		1672792						
ANR	1675146	Symbol	SLJIT_SET_O		1672792						
ANR	1675147	Symbol	XORI		1672792						
ANR	1675148	Symbol	ORI		1672792						
ANR	1675149	Symbol	flags		1672792						
ANR	1675150	Symbol	SLJIT_SET_C		1672792						
ANR	1675151	Symbol	SLJIT_SET_E		1672792						
ANR	1675152	Symbol	CMPLTU		1672792						
ANR	1675153	Symbol	SLJIT_MOV_SI		1672792						
ANR	1675154	Symbol	TILEGX_OPC_SHRSI		1672792						
ANR	1675155	Symbol	CMPLTS		1672792						
ANR	1675156	Symbol	load_immediate		1672792						
ANR	1675157	Symbol	SLJIT_MOV_SH		1672792						
ANR	1675158	Symbol	SLJIT_SET_S		1672792						
ANR	1675159	Symbol	SRC2_IMM		1672792						
ANR	1675160	Symbol	GREATER_FLAG		1672792						
ANR	1675161	Symbol	compiler		1672792						
ANR	1675162	Symbol	SLJIT_SET_U		1672792						
ANR	1675163	Symbol	TILEGX_OPC_SHL		1672792						
ANR	1675164	Symbol	op		1672792						
ANR	1675165	Symbol	OR		1672792						
ANR	1675166	Symbol	~SRC2_IMM		1672792						
ANR	1675167	Symbol	SLJIT_MOV_SB		1672792						
ANR	1675168	Symbol	SLJIT_SUCCESS		1672792						
ANR	1675169	Symbol	UGREATER_FLAG		1672792						
ANR	1675170	Symbol	__LINE__		1672792						
ANR	1675171	Symbol	CMPLTUI		1672792						
ANR	1675172	Symbol	push_3_buffer		1672792						
ANR	1675173	Symbol	TILEGX_OPC_SHLI		1672792						
ANR	1675174	Symbol	LESS_FLAG		1672792						
ANR	1675175	Symbol	src1		1672792						
ANR	1675176	Symbol	src2		1672792						
ANR	1675177	Function	emit_op	1978:0:59623:63558							
ANR	1675178	FunctionDef	"emit_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1675177	0					
ANR	1675179	CompoundStatement		1979:0:59800:63558	1675177	0					
ANR	1675180	IdentifierDeclStatement	sljit_si dst_r = TMP_REG2 ;	1984:1:59999:60024	1675177	0	True				
ANR	1675181	IdentifierDecl	dst_r = TMP_REG2		1675177	0					
ANR	1675182	IdentifierDeclType	sljit_si		1675177	0					
ANR	1675183	Identifier	dst_r		1675177	1					
ANR	1675184	AssignmentExpression	dst_r = TMP_REG2		1675177	2		=			
ANR	1675185	Identifier	TMP_REG2		1675177	0					
ANR	1675186	Identifier	TMP_REG2		1675177	1					
ANR	1675187	IdentifierDeclStatement	sljit_si src1_r ;	1985:1:60027:60042	1675177	1	True				
ANR	1675188	IdentifierDecl	src1_r		1675177	0					
ANR	1675189	IdentifierDeclType	sljit_si		1675177	0					
ANR	1675190	Identifier	src1_r		1675177	1					
ANR	1675191	IdentifierDeclStatement	sljit_sw src2_r = 0 ;	1986:1:60045:60064	1675177	2	True				
ANR	1675192	IdentifierDecl	src2_r = 0		1675177	0					
ANR	1675193	IdentifierDeclType	sljit_sw		1675177	0					
ANR	1675194	Identifier	src2_r		1675177	1					
ANR	1675195	AssignmentExpression	src2_r = 0		1675177	2		=			
ANR	1675196	Identifier	src2_r		1675177	0					
ANR	1675197	PrimaryExpression	0		1675177	1					
ANR	1675198	IdentifierDeclStatement	sljit_si sugg_src2_r = TMP_REG2 ;	1987:1:60067:60098	1675177	3	True				
ANR	1675199	IdentifierDecl	sugg_src2_r = TMP_REG2		1675177	0					
ANR	1675200	IdentifierDeclType	sljit_si		1675177	0					
ANR	1675201	Identifier	sugg_src2_r		1675177	1					
ANR	1675202	AssignmentExpression	sugg_src2_r = TMP_REG2		1675177	2		=			
ANR	1675203	Identifier	TMP_REG2		1675177	0					
ANR	1675204	Identifier	TMP_REG2		1675177	1					
ANR	1675205	IfStatement	if ( ! ( flags & ALT_KEEP_CACHE ) )		1675177	4					
ANR	1675206	Condition	! ( flags & ALT_KEEP_CACHE )	1989:5:60106:60130	1675177	0	True				
ANR	1675207	UnaryOperationExpression	! ( flags & ALT_KEEP_CACHE )		1675177	0					
ANR	1675208	UnaryOperator	!		1675177	0					
ANR	1675209	BitAndExpression	flags & ALT_KEEP_CACHE		1675177	1		&			
ANR	1675210	Identifier	flags		1675177	0					
ANR	1675211	Identifier	ALT_KEEP_CACHE		1675177	1					
ANR	1675212	CompoundStatement		11:32:332:332	1675177	1					
ANR	1675213	ExpressionStatement	compiler -> cache_arg = 0	1990:2:60137:60160	1675177	0	True				
ANR	1675214	AssignmentExpression	compiler -> cache_arg = 0		1675177	0		=			
ANR	1675215	PtrMemberAccess	compiler -> cache_arg		1675177	0					
ANR	1675216	Identifier	compiler		1675177	0					
ANR	1675217	Identifier	cache_arg		1675177	1					
ANR	1675218	PrimaryExpression	0		1675177	1					
ANR	1675219	ExpressionStatement	compiler -> cache_argw = 0	1991:2:60164:60188	1675177	1	True				
ANR	1675220	AssignmentExpression	compiler -> cache_argw = 0		1675177	0		=			
ANR	1675221	PtrMemberAccess	compiler -> cache_argw		1675177	0					
ANR	1675222	Identifier	compiler		1675177	0					
ANR	1675223	Identifier	cache_argw		1675177	1					
ANR	1675224	PrimaryExpression	0		1675177	1					
ANR	1675225	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1675177	5					
ANR	1675226	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	1994:5:60199:60233	1675177	0	True				
ANR	1675227	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1675177	0					
ANR	1675228	Callee	SLJIT_UNLIKELY		1675177	0					
ANR	1675229	Identifier	SLJIT_UNLIKELY		1675177	0					
ANR	1675230	ArgumentList	dst == SLJIT_UNUSED		1675177	1					
ANR	1675231	Argument	dst == SLJIT_UNUSED		1675177	0					
ANR	1675232	EqualityExpression	dst == SLJIT_UNUSED		1675177	0		==			
ANR	1675233	Identifier	dst		1675177	0					
ANR	1675234	Identifier	SLJIT_UNUSED		1675177	1					
ANR	1675235	CompoundStatement		16:42:435:435	1675177	1					
ANR	1675236	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM ) )		1675177	0					
ANR	1675237	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )	1995:6:60244:60304	1675177	0	True				
ANR	1675238	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1675177	0		&&			
ANR	1675239	RelationalExpression	op >= SLJIT_MOV		1675177	0		>=			
ANR	1675240	Identifier	op		1675177	0					
ANR	1675241	Identifier	SLJIT_MOV		1675177	1					
ANR	1675242	AndExpression	op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1675177	1		&&			
ANR	1675243	RelationalExpression	op <= SLJIT_MOVU_SI		1675177	0		<=			
ANR	1675244	Identifier	op		1675177	0					
ANR	1675245	Identifier	SLJIT_MOVU_SI		1675177	1					
ANR	1675246	UnaryOperationExpression	! ( src2 & SLJIT_MEM )		1675177	1					
ANR	1675247	UnaryOperator	!		1675177	0					
ANR	1675248	BitAndExpression	src2 & SLJIT_MEM		1675177	1		&			
ANR	1675249	Identifier	src2		1675177	0					
ANR	1675250	Identifier	SLJIT_MEM		1675177	1					
ANR	1675251	ReturnStatement	return SLJIT_SUCCESS ;	1996:3:60310:60330	1675177	1	True				
ANR	1675252	Identifier	SLJIT_SUCCESS		1675177	0					
ANR	1675253	IfStatement	if ( GET_FLAGS ( op ) )		1675177	1					
ANR	1675254	Condition	GET_FLAGS ( op )	1997:6:60338:60350	1675177	0	True				
ANR	1675255	CallExpression	GET_FLAGS ( op )		1675177	0					
ANR	1675256	Callee	GET_FLAGS		1675177	0					
ANR	1675257	Identifier	GET_FLAGS		1675177	0					
ANR	1675258	ArgumentList	op		1675177	1					
ANR	1675259	Argument	op		1675177	0					
ANR	1675260	Identifier	op		1675177	0					
ANR	1675261	ExpressionStatement	flags |= UNUSED_DEST	1998:3:60356:60376	1675177	1	True				
ANR	1675262	AssignmentExpression	flags |= UNUSED_DEST		1675177	0		|=			
ANR	1675263	Identifier	flags		1675177	0					
ANR	1675264	Identifier	UNUSED_DEST		1675177	1					
ANR	1675265	ElseStatement	else		1675177	0					
ANR	1675266	IfStatement	if ( FAST_IS_REG ( dst ) )		1675177	0					
ANR	1675267	Condition	FAST_IS_REG ( dst )	1999:12:60390:60405	1675177	0	True				
ANR	1675268	CallExpression	FAST_IS_REG ( dst )		1675177	0					
ANR	1675269	Callee	FAST_IS_REG		1675177	0					
ANR	1675270	Identifier	FAST_IS_REG		1675177	0					
ANR	1675271	ArgumentList	dst		1675177	1					
ANR	1675272	Argument	dst		1675177	0					
ANR	1675273	Identifier	dst		1675177	0					
ANR	1675274	CompoundStatement		21:30:607:607	1675177	1					
ANR	1675275	ExpressionStatement	dst_r = dst	2000:2:60412:60423	1675177	0	True				
ANR	1675276	AssignmentExpression	dst_r = dst		1675177	0		=			
ANR	1675277	Identifier	dst_r		1675177	0					
ANR	1675278	Identifier	dst		1675177	1					
ANR	1675279	ExpressionStatement	flags |= REG_DEST	2001:2:60427:60444	1675177	1	True				
ANR	1675280	AssignmentExpression	flags |= REG_DEST		1675177	0		|=			
ANR	1675281	Identifier	flags		1675177	0					
ANR	1675282	Identifier	REG_DEST		1675177	1					
ANR	1675283	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1675177	2					
ANR	1675284	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	2002:6:60452:60489	1675177	0	True				
ANR	1675285	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1675177	0		&&			
ANR	1675286	RelationalExpression	op >= SLJIT_MOV		1675177	0		>=			
ANR	1675287	Identifier	op		1675177	0					
ANR	1675288	Identifier	SLJIT_MOV		1675177	1					
ANR	1675289	RelationalExpression	op <= SLJIT_MOVU_SI		1675177	1		<=			
ANR	1675290	Identifier	op		1675177	0					
ANR	1675291	Identifier	SLJIT_MOVU_SI		1675177	1					
ANR	1675292	ExpressionStatement	sugg_src2_r = dst_r	2003:3:60495:60514	1675177	1	True				
ANR	1675293	AssignmentExpression	sugg_src2_r = dst_r		1675177	0		=			
ANR	1675294	Identifier	sugg_src2_r		1675177	0					
ANR	1675295	Identifier	dst_r		1675177	1					
ANR	1675296	ElseStatement	else		1675177	0					
ANR	1675297	IfStatement	"if ( ( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw ) )"		1675177	0					
ANR	1675298	Condition	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"	2004:12:60528:60620	1675177	0	True				
ANR	1675299	AndExpression	"( dst & SLJIT_MEM ) && ! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"		1675177	0		&&			
ANR	1675300	BitAndExpression	dst & SLJIT_MEM		1675177	0		&			
ANR	1675301	Identifier	dst		1675177	0					
ANR	1675302	Identifier	SLJIT_MEM		1675177	1					
ANR	1675303	UnaryOperationExpression	"! getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"		1675177	1					
ANR	1675304	UnaryOperator	!		1675177	0					
ANR	1675305	CallExpression	"getput_arg_fast ( compiler , flags | ARG_TEST , TMP_REG1_mapped , dst , dstw )"		1675177	1					
ANR	1675306	Callee	getput_arg_fast		1675177	0					
ANR	1675307	Identifier	getput_arg_fast		1675177	0					
ANR	1675308	ArgumentList	compiler		1675177	1					
ANR	1675309	Argument	compiler		1675177	0					
ANR	1675310	Identifier	compiler		1675177	0					
ANR	1675311	Argument	flags | ARG_TEST		1675177	1					
ANR	1675312	InclusiveOrExpression	flags | ARG_TEST		1675177	0		|			
ANR	1675313	Identifier	flags		1675177	0					
ANR	1675314	Identifier	ARG_TEST		1675177	1					
ANR	1675315	Argument	TMP_REG1_mapped		1675177	2					
ANR	1675316	Identifier	TMP_REG1_mapped		1675177	0					
ANR	1675317	Argument	dst		1675177	3					
ANR	1675318	Identifier	dst		1675177	0					
ANR	1675319	Argument	dstw		1675177	4					
ANR	1675320	Identifier	dstw		1675177	0					
ANR	1675321	ExpressionStatement	flags |= SLOW_DEST	2005:2:60625:60643	1675177	1	True				
ANR	1675322	AssignmentExpression	flags |= SLOW_DEST		1675177	0		|=			
ANR	1675323	Identifier	flags		1675177	0					
ANR	1675324	Identifier	SLOW_DEST		1675177	1					
ANR	1675325	IfStatement	if ( flags & IMM_OP )		1675177	6					
ANR	1675326	Condition	flags & IMM_OP	2007:5:60651:60664	1675177	0	True				
ANR	1675327	BitAndExpression	flags & IMM_OP		1675177	0		&			
ANR	1675328	Identifier	flags		1675177	0					
ANR	1675329	Identifier	IMM_OP		1675177	1					
ANR	1675330	CompoundStatement		29:21:866:866	1675177	1					
ANR	1675331	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w )		1675177	0					
ANR	1675332	Condition	( src2 & SLJIT_IMM ) && src2w	2008:6:60675:60701	1675177	0	True				
ANR	1675333	AndExpression	( src2 & SLJIT_IMM ) && src2w		1675177	0		&&			
ANR	1675334	BitAndExpression	src2 & SLJIT_IMM		1675177	0		&			
ANR	1675335	Identifier	src2		1675177	0					
ANR	1675336	Identifier	SLJIT_IMM		1675177	1					
ANR	1675337	Identifier	src2w		1675177	1					
ANR	1675338	CompoundStatement		30:35:903:903	1675177	1					
ANR	1675339	IfStatement	if ( ( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX ) ) )		1675177	0					
ANR	1675340	Condition	( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX ) )	2009:7:60713:60857	1675177	0	True				
ANR	1675341	OrExpression	( ! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX ) )		1675177	0		||			
ANR	1675342	AndExpression	! ( flags & LOGICAL_OP ) && ( src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN )		1675177	0		&&			
ANR	1675343	UnaryOperationExpression	! ( flags & LOGICAL_OP )		1675177	0					
ANR	1675344	UnaryOperator	!		1675177	0					
ANR	1675345	BitAndExpression	flags & LOGICAL_OP		1675177	1		&			
ANR	1675346	Identifier	flags		1675177	0					
ANR	1675347	Identifier	LOGICAL_OP		1675177	1					
ANR	1675348	AndExpression	src2w <= SIMM_16BIT_MAX && src2w >= SIMM_16BIT_MIN		1675177	1		&&			
ANR	1675349	RelationalExpression	src2w <= SIMM_16BIT_MAX		1675177	0		<=			
ANR	1675350	Identifier	src2w		1675177	0					
ANR	1675351	Identifier	SIMM_16BIT_MAX		1675177	1					
ANR	1675352	RelationalExpression	src2w >= SIMM_16BIT_MIN		1675177	1		>=			
ANR	1675353	Identifier	src2w		1675177	0					
ANR	1675354	Identifier	SIMM_16BIT_MIN		1675177	1					
ANR	1675355	AndExpression	( flags & LOGICAL_OP ) && ! ( src2w & ~UIMM_16BIT_MAX )		1675177	1		&&			
ANR	1675356	BitAndExpression	flags & LOGICAL_OP		1675177	0		&			
ANR	1675357	Identifier	flags		1675177	0					
ANR	1675358	Identifier	LOGICAL_OP		1675177	1					
ANR	1675359	UnaryOperationExpression	! ( src2w & ~UIMM_16BIT_MAX )		1675177	1					
ANR	1675360	UnaryOperator	!		1675177	0					
ANR	1675361	BitAndExpression	src2w & ~UIMM_16BIT_MAX		1675177	1		&			
ANR	1675362	Identifier	src2w		1675177	0					
ANR	1675363	Identifier	~UIMM_16BIT_MAX		1675177	1					
ANR	1675364	CompoundStatement		33:62:1059:1059	1675177	1					
ANR	1675365	ExpressionStatement	flags |= SRC2_IMM	2012:4:60866:60883	1675177	0	True				
ANR	1675366	AssignmentExpression	flags |= SRC2_IMM		1675177	0		|=			
ANR	1675367	Identifier	flags		1675177	0					
ANR	1675368	Identifier	SRC2_IMM		1675177	1					
ANR	1675369	ExpressionStatement	src2_r = src2w	2013:4:60889:60903	1675177	1	True				
ANR	1675370	AssignmentExpression	src2_r = src2w		1675177	0		=			
ANR	1675371	Identifier	src2_r		1675177	0					
ANR	1675372	Identifier	src2w		1675177	1					
ANR	1675373	IfStatement	if ( ! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w )		1675177	1					
ANR	1675374	Condition	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w	2017:6:60921:60997	1675177	0	True				
ANR	1675375	AndExpression	! ( flags & SRC2_IMM ) && ( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1675177	0		&&			
ANR	1675376	UnaryOperationExpression	! ( flags & SRC2_IMM )		1675177	0					
ANR	1675377	UnaryOperator	!		1675177	0					
ANR	1675378	BitAndExpression	flags & SRC2_IMM		1675177	1		&			
ANR	1675379	Identifier	flags		1675177	0					
ANR	1675380	Identifier	SRC2_IMM		1675177	1					
ANR	1675381	AndExpression	( flags & CUMULATIVE_OP ) && ( src1 & SLJIT_IMM ) && src1w		1675177	1		&&			
ANR	1675382	BitAndExpression	flags & CUMULATIVE_OP		1675177	0		&			
ANR	1675383	Identifier	flags		1675177	0					
ANR	1675384	Identifier	CUMULATIVE_OP		1675177	1					
ANR	1675385	AndExpression	( src1 & SLJIT_IMM ) && src1w		1675177	1		&&			
ANR	1675386	BitAndExpression	src1 & SLJIT_IMM		1675177	0		&			
ANR	1675387	Identifier	src1		1675177	0					
ANR	1675388	Identifier	SLJIT_IMM		1675177	1					
ANR	1675389	Identifier	src1w		1675177	1					
ANR	1675390	CompoundStatement		39:85:1199:1199	1675177	1					
ANR	1675391	IfStatement	if ( ( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX ) ) )		1675177	0					
ANR	1675392	Condition	( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX ) )	2018:7:61009:61153	1675177	0	True				
ANR	1675393	OrExpression	( ! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN ) ) || ( ( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX ) )		1675177	0		||			
ANR	1675394	AndExpression	! ( flags & LOGICAL_OP ) && ( src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN )		1675177	0		&&			
ANR	1675395	UnaryOperationExpression	! ( flags & LOGICAL_OP )		1675177	0					
ANR	1675396	UnaryOperator	!		1675177	0					
ANR	1675397	BitAndExpression	flags & LOGICAL_OP		1675177	1		&			
ANR	1675398	Identifier	flags		1675177	0					
ANR	1675399	Identifier	LOGICAL_OP		1675177	1					
ANR	1675400	AndExpression	src1w <= SIMM_16BIT_MAX && src1w >= SIMM_16BIT_MIN		1675177	1		&&			
ANR	1675401	RelationalExpression	src1w <= SIMM_16BIT_MAX		1675177	0		<=			
ANR	1675402	Identifier	src1w		1675177	0					
ANR	1675403	Identifier	SIMM_16BIT_MAX		1675177	1					
ANR	1675404	RelationalExpression	src1w >= SIMM_16BIT_MIN		1675177	1		>=			
ANR	1675405	Identifier	src1w		1675177	0					
ANR	1675406	Identifier	SIMM_16BIT_MIN		1675177	1					
ANR	1675407	AndExpression	( flags & LOGICAL_OP ) && ! ( src1w & ~UIMM_16BIT_MAX )		1675177	1		&&			
ANR	1675408	BitAndExpression	flags & LOGICAL_OP		1675177	0		&			
ANR	1675409	Identifier	flags		1675177	0					
ANR	1675410	Identifier	LOGICAL_OP		1675177	1					
ANR	1675411	UnaryOperationExpression	! ( src1w & ~UIMM_16BIT_MAX )		1675177	1					
ANR	1675412	UnaryOperator	!		1675177	0					
ANR	1675413	BitAndExpression	src1w & ~UIMM_16BIT_MAX		1675177	1		&			
ANR	1675414	Identifier	src1w		1675177	0					
ANR	1675415	Identifier	~UIMM_16BIT_MAX		1675177	1					
ANR	1675416	CompoundStatement		42:62:1355:1355	1675177	1					
ANR	1675417	ExpressionStatement	flags |= SRC2_IMM	2021:4:61162:61179	1675177	0	True				
ANR	1675418	AssignmentExpression	flags |= SRC2_IMM		1675177	0		|=			
ANR	1675419	Identifier	flags		1675177	0					
ANR	1675420	Identifier	SRC2_IMM		1675177	1					
ANR	1675421	ExpressionStatement	src2_r = src1w	2022:4:61185:61199	1675177	1	True				
ANR	1675422	AssignmentExpression	src2_r = src1w		1675177	0		=			
ANR	1675423	Identifier	src2_r		1675177	0					
ANR	1675424	Identifier	src1w		1675177	1					
ANR	1675425	ExpressionStatement	src1 = src2	2025:4:61236:61247	1675177	2	True				
ANR	1675426	AssignmentExpression	src1 = src2		1675177	0		=			
ANR	1675427	Identifier	src1		1675177	0					
ANR	1675428	Identifier	src2		1675177	1					
ANR	1675429	ExpressionStatement	src1w = src2w	2026:4:61253:61266	1675177	3	True				
ANR	1675430	AssignmentExpression	src1w = src2w		1675177	0		=			
ANR	1675431	Identifier	src1w		1675177	0					
ANR	1675432	Identifier	src2w		1675177	1					
ANR	1675433	ExpressionStatement	src2 = SLJIT_IMM	2027:4:61272:61288	1675177	4	True				
ANR	1675434	AssignmentExpression	src2 = SLJIT_IMM		1675177	0		=			
ANR	1675435	Identifier	src2		1675177	0					
ANR	1675436	Identifier	SLJIT_IMM		1675177	1					
ANR	1675437	IfStatement	if ( FAST_IS_REG ( src1 ) )		1675177	7					
ANR	1675438	Condition	FAST_IS_REG ( src1 )	2034:5:61360:61376	1675177	0	True				
ANR	1675439	CallExpression	FAST_IS_REG ( src1 )		1675177	0					
ANR	1675440	Callee	FAST_IS_REG		1675177	0					
ANR	1675441	Identifier	FAST_IS_REG		1675177	0					
ANR	1675442	ArgumentList	src1		1675177	1					
ANR	1675443	Argument	src1		1675177	0					
ANR	1675444	Identifier	src1		1675177	0					
ANR	1675445	CompoundStatement		56:24:1578:1578	1675177	1					
ANR	1675446	ExpressionStatement	src1_r = src1	2035:2:61383:61396	1675177	0	True				
ANR	1675447	AssignmentExpression	src1_r = src1		1675177	0		=			
ANR	1675448	Identifier	src1_r		1675177	0					
ANR	1675449	Identifier	src1		1675177	1					
ANR	1675450	ExpressionStatement	flags |= REG1_SOURCE	2036:2:61400:61420	1675177	1	True				
ANR	1675451	AssignmentExpression	flags |= REG1_SOURCE		1675177	0		|=			
ANR	1675452	Identifier	flags		1675177	0					
ANR	1675453	Identifier	REG1_SOURCE		1675177	1					
ANR	1675454	ElseStatement	else		1675177	0					
ANR	1675455	IfStatement	if ( src1 & SLJIT_IMM )		1675177	0					
ANR	1675456	Condition	src1 & SLJIT_IMM	2037:12:61434:61449	1675177	0	True				
ANR	1675457	BitAndExpression	src1 & SLJIT_IMM		1675177	0		&			
ANR	1675458	Identifier	src1		1675177	0					
ANR	1675459	Identifier	SLJIT_IMM		1675177	1					
ANR	1675460	CompoundStatement		59:30:1651:1651	1675177	1					
ANR	1675461	IfStatement	if ( src1w )		1675177	0					
ANR	1675462	Condition	src1w	2038:6:61460:61464	1675177	0	True				
ANR	1675463	Identifier	src1w		1675177	0					
ANR	1675464	CompoundStatement		60:13:1666:1666	1675177	1					
ANR	1675465	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , src1w ) )"	2039:3:61472:61529	1675177	0	True				
ANR	1675466	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1_mapped , src1w ) )"		1675177	0					
ANR	1675467	Callee	FAIL_IF		1675177	0					
ANR	1675468	Identifier	FAIL_IF		1675177	0					
ANR	1675469	ArgumentList	"load_immediate ( compiler , TMP_REG1_mapped , src1w )"		1675177	1					
ANR	1675470	Argument	"load_immediate ( compiler , TMP_REG1_mapped , src1w )"		1675177	0					
ANR	1675471	CallExpression	"load_immediate ( compiler , TMP_REG1_mapped , src1w )"		1675177	0					
ANR	1675472	Callee	load_immediate		1675177	0					
ANR	1675473	Identifier	load_immediate		1675177	0					
ANR	1675474	ArgumentList	compiler		1675177	1					
ANR	1675475	Argument	compiler		1675177	0					
ANR	1675476	Identifier	compiler		1675177	0					
ANR	1675477	Argument	TMP_REG1_mapped		1675177	1					
ANR	1675478	Identifier	TMP_REG1_mapped		1675177	0					
ANR	1675479	Argument	src1w		1675177	2					
ANR	1675480	Identifier	src1w		1675177	0					
ANR	1675481	ExpressionStatement	src1_r = TMP_REG1	2040:3:61534:61551	1675177	1	True				
ANR	1675482	AssignmentExpression	src1_r = TMP_REG1		1675177	0		=			
ANR	1675483	Identifier	src1_r		1675177	0					
ANR	1675484	Identifier	TMP_REG1		1675177	1					
ANR	1675485	ElseStatement	else		1675177	0					
ANR	1675486	ExpressionStatement	src1_r = 0	2042:3:61565:61575	1675177	0	True				
ANR	1675487	AssignmentExpression	src1_r = 0		1675177	0		=			
ANR	1675488	Identifier	src1_r		1675177	0					
ANR	1675489	PrimaryExpression	0		1675177	1					
ANR	1675490	ElseStatement	else		1675177	0					
ANR	1675491	CompoundStatement		65:8:1784:1784	1675177	0					
ANR	1675492	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w ) )"		1675177	0					
ANR	1675493	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w )"	2044:6:61593:61666	1675177	0	True				
ANR	1675494	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w )"		1675177	0					
ANR	1675495	Callee	getput_arg_fast		1675177	0					
ANR	1675496	Identifier	getput_arg_fast		1675177	0					
ANR	1675497	ArgumentList	compiler		1675177	1					
ANR	1675498	Argument	compiler		1675177	0					
ANR	1675499	Identifier	compiler		1675177	0					
ANR	1675500	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675501	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675502	Identifier	flags		1675177	0					
ANR	1675503	Identifier	LOAD_DATA		1675177	1					
ANR	1675504	Argument	TMP_REG1_mapped		1675177	2					
ANR	1675505	Identifier	TMP_REG1_mapped		1675177	0					
ANR	1675506	Argument	src1		1675177	3					
ANR	1675507	Identifier	src1		1675177	0					
ANR	1675508	Argument	src1w		1675177	4					
ANR	1675509	Identifier	src1w		1675177	0					
ANR	1675510	ExpressionStatement	FAIL_IF ( compiler -> error )	2045:3:61672:61696	1675177	1	True				
ANR	1675511	CallExpression	FAIL_IF ( compiler -> error )		1675177	0					
ANR	1675512	Callee	FAIL_IF		1675177	0					
ANR	1675513	Identifier	FAIL_IF		1675177	0					
ANR	1675514	ArgumentList	compiler -> error		1675177	1					
ANR	1675515	Argument	compiler -> error		1675177	0					
ANR	1675516	PtrMemberAccess	compiler -> error		1675177	0					
ANR	1675517	Identifier	compiler		1675177	0					
ANR	1675518	Identifier	error		1675177	1					
ANR	1675519	ElseStatement	else		1675177	0					
ANR	1675520	ExpressionStatement	flags |= SLOW_SRC1	2047:3:61708:61726	1675177	0	True				
ANR	1675521	AssignmentExpression	flags |= SLOW_SRC1		1675177	0		|=			
ANR	1675522	Identifier	flags		1675177	0					
ANR	1675523	Identifier	SLOW_SRC1		1675177	1					
ANR	1675524	ExpressionStatement	src1_r = TMP_REG1	2048:2:61730:61747	1675177	1	True				
ANR	1675525	AssignmentExpression	src1_r = TMP_REG1		1675177	0		=			
ANR	1675526	Identifier	src1_r		1675177	0					
ANR	1675527	Identifier	TMP_REG1		1675177	1					
ANR	1675528	IfStatement	if ( FAST_IS_REG ( src2 ) )		1675177	8					
ANR	1675529	Condition	FAST_IS_REG ( src2 )	2052:5:61775:61791	1675177	0	True				
ANR	1675530	CallExpression	FAST_IS_REG ( src2 )		1675177	0					
ANR	1675531	Callee	FAST_IS_REG		1675177	0					
ANR	1675532	Identifier	FAST_IS_REG		1675177	0					
ANR	1675533	ArgumentList	src2		1675177	1					
ANR	1675534	Argument	src2		1675177	0					
ANR	1675535	Identifier	src2		1675177	0					
ANR	1675536	CompoundStatement		74:24:1993:1993	1675177	1					
ANR	1675537	ExpressionStatement	src2_r = src2	2053:2:61798:61811	1675177	0	True				
ANR	1675538	AssignmentExpression	src2_r = src2		1675177	0		=			
ANR	1675539	Identifier	src2_r		1675177	0					
ANR	1675540	Identifier	src2		1675177	1					
ANR	1675541	ExpressionStatement	flags |= REG2_SOURCE	2054:2:61815:61835	1675177	1	True				
ANR	1675542	AssignmentExpression	flags |= REG2_SOURCE		1675177	0		|=			
ANR	1675543	Identifier	flags		1675177	0					
ANR	1675544	Identifier	REG2_SOURCE		1675177	1					
ANR	1675545	IfStatement	if ( ! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1675177	2					
ANR	1675546	Condition	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	2055:6:61843:61903	1675177	0	True				
ANR	1675547	AndExpression	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1675177	0		&&			
ANR	1675548	UnaryOperationExpression	! ( flags & REG_DEST )		1675177	0					
ANR	1675549	UnaryOperator	!		1675177	0					
ANR	1675550	BitAndExpression	flags & REG_DEST		1675177	1		&			
ANR	1675551	Identifier	flags		1675177	0					
ANR	1675552	Identifier	REG_DEST		1675177	1					
ANR	1675553	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1675177	1		&&			
ANR	1675554	RelationalExpression	op >= SLJIT_MOV		1675177	0		>=			
ANR	1675555	Identifier	op		1675177	0					
ANR	1675556	Identifier	SLJIT_MOV		1675177	1					
ANR	1675557	RelationalExpression	op <= SLJIT_MOVU_SI		1675177	1		<=			
ANR	1675558	Identifier	op		1675177	0					
ANR	1675559	Identifier	SLJIT_MOVU_SI		1675177	1					
ANR	1675560	ExpressionStatement	dst_r = src2_r	2056:3:61909:61923	1675177	1	True				
ANR	1675561	AssignmentExpression	dst_r = src2_r		1675177	0		=			
ANR	1675562	Identifier	dst_r		1675177	0					
ANR	1675563	Identifier	src2_r		1675177	1					
ANR	1675564	ElseStatement	else		1675177	0					
ANR	1675565	IfStatement	if ( src2 & SLJIT_IMM )		1675177	0					
ANR	1675566	Condition	src2 & SLJIT_IMM	2057:12:61937:61952	1675177	0	True				
ANR	1675567	BitAndExpression	src2 & SLJIT_IMM		1675177	0		&			
ANR	1675568	Identifier	src2		1675177	0					
ANR	1675569	Identifier	SLJIT_IMM		1675177	1					
ANR	1675570	CompoundStatement		79:30:2154:2154	1675177	1					
ANR	1675571	IfStatement	if ( ! ( flags & SRC2_IMM ) )		1675177	0					
ANR	1675572	Condition	! ( flags & SRC2_IMM )	2058:6:61963:61981	1675177	0	True				
ANR	1675573	UnaryOperationExpression	! ( flags & SRC2_IMM )		1675177	0					
ANR	1675574	UnaryOperator	!		1675177	0					
ANR	1675575	BitAndExpression	flags & SRC2_IMM		1675177	1		&			
ANR	1675576	Identifier	flags		1675177	0					
ANR	1675577	Identifier	SRC2_IMM		1675177	1					
ANR	1675578	CompoundStatement		80:27:2183:2183	1675177	1					
ANR	1675579	IfStatement	if ( src2w )		1675177	0					
ANR	1675580	Condition	src2w	2059:7:61993:61997	1675177	0	True				
ANR	1675581	Identifier	src2w		1675177	0					
ANR	1675582	CompoundStatement		81:14:2199:2199	1675177	1					
ANR	1675583	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w ) )"	2060:4:62006:62068	1675177	0	True				
ANR	1675584	CallExpression	"FAIL_IF ( load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w ) )"		1675177	0					
ANR	1675585	Callee	FAIL_IF		1675177	0					
ANR	1675586	Identifier	FAIL_IF		1675177	0					
ANR	1675587	ArgumentList	"load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w )"		1675177	1					
ANR	1675588	Argument	"load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w )"		1675177	0					
ANR	1675589	CallExpression	"load_immediate ( compiler , reg_map [ sugg_src2_r ] , src2w )"		1675177	0					
ANR	1675590	Callee	load_immediate		1675177	0					
ANR	1675591	Identifier	load_immediate		1675177	0					
ANR	1675592	ArgumentList	compiler		1675177	1					
ANR	1675593	Argument	compiler		1675177	0					
ANR	1675594	Identifier	compiler		1675177	0					
ANR	1675595	Argument	reg_map [ sugg_src2_r ]		1675177	1					
ANR	1675596	ArrayIndexing	reg_map [ sugg_src2_r ]		1675177	0					
ANR	1675597	Identifier	reg_map		1675177	0					
ANR	1675598	Identifier	sugg_src2_r		1675177	1					
ANR	1675599	Argument	src2w		1675177	2					
ANR	1675600	Identifier	src2w		1675177	0					
ANR	1675601	ExpressionStatement	src2_r = sugg_src2_r	2061:4:62074:62094	1675177	1	True				
ANR	1675602	AssignmentExpression	src2_r = sugg_src2_r		1675177	0		=			
ANR	1675603	Identifier	src2_r		1675177	0					
ANR	1675604	Identifier	sugg_src2_r		1675177	1					
ANR	1675605	ElseStatement	else		1675177	0					
ANR	1675606	CompoundStatement		84:10:2305:2305	1675177	0					
ANR	1675607	ExpressionStatement	src2_r = 0	2063:4:62112:62122	1675177	0	True				
ANR	1675608	AssignmentExpression	src2_r = 0		1675177	0		=			
ANR	1675609	Identifier	src2_r		1675177	0					
ANR	1675610	PrimaryExpression	0		1675177	1					
ANR	1675611	IfStatement	if ( ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM ) )		1675177	1					
ANR	1675612	Condition	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )	2064:8:62132:62192	1675177	0	True				
ANR	1675613	AndExpression	( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI ) && ( dst & SLJIT_MEM )		1675177	0		&&			
ANR	1675614	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1675177	0		&&			
ANR	1675615	RelationalExpression	op >= SLJIT_MOV		1675177	0		>=			
ANR	1675616	Identifier	op		1675177	0					
ANR	1675617	Identifier	SLJIT_MOV		1675177	1					
ANR	1675618	RelationalExpression	op <= SLJIT_MOVU_SI		1675177	1		<=			
ANR	1675619	Identifier	op		1675177	0					
ANR	1675620	Identifier	SLJIT_MOVU_SI		1675177	1					
ANR	1675621	BitAndExpression	dst & SLJIT_MEM		1675177	1		&			
ANR	1675622	Identifier	dst		1675177	0					
ANR	1675623	Identifier	SLJIT_MEM		1675177	1					
ANR	1675624	ExpressionStatement	dst_r = 0	2065:5:62200:62209	1675177	1	True				
ANR	1675625	AssignmentExpression	dst_r = 0		1675177	0		=			
ANR	1675626	Identifier	dst_r		1675177	0					
ANR	1675627	PrimaryExpression	0		1675177	1					
ANR	1675628	ElseStatement	else		1675177	0					
ANR	1675629	CompoundStatement		90:8:2427:2427	1675177	0					
ANR	1675630	IfStatement	"if ( getput_arg_fast ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w ) )"		1675177	0					
ANR	1675631	Condition	"getput_arg_fast ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w )"	2069:6:62236:62314	1675177	0	True				
ANR	1675632	CallExpression	"getput_arg_fast ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w )"		1675177	0					
ANR	1675633	Callee	getput_arg_fast		1675177	0					
ANR	1675634	Identifier	getput_arg_fast		1675177	0					
ANR	1675635	ArgumentList	compiler		1675177	1					
ANR	1675636	Argument	compiler		1675177	0					
ANR	1675637	Identifier	compiler		1675177	0					
ANR	1675638	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675639	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675640	Identifier	flags		1675177	0					
ANR	1675641	Identifier	LOAD_DATA		1675177	1					
ANR	1675642	Argument	reg_map [ sugg_src2_r ]		1675177	2					
ANR	1675643	ArrayIndexing	reg_map [ sugg_src2_r ]		1675177	0					
ANR	1675644	Identifier	reg_map		1675177	0					
ANR	1675645	Identifier	sugg_src2_r		1675177	1					
ANR	1675646	Argument	src2		1675177	3					
ANR	1675647	Identifier	src2		1675177	0					
ANR	1675648	Argument	src2w		1675177	4					
ANR	1675649	Identifier	src2w		1675177	0					
ANR	1675650	ExpressionStatement	FAIL_IF ( compiler -> error )	2070:3:62320:62344	1675177	1	True				
ANR	1675651	CallExpression	FAIL_IF ( compiler -> error )		1675177	0					
ANR	1675652	Callee	FAIL_IF		1675177	0					
ANR	1675653	Identifier	FAIL_IF		1675177	0					
ANR	1675654	ArgumentList	compiler -> error		1675177	1					
ANR	1675655	Argument	compiler -> error		1675177	0					
ANR	1675656	PtrMemberAccess	compiler -> error		1675177	0					
ANR	1675657	Identifier	compiler		1675177	0					
ANR	1675658	Identifier	error		1675177	1					
ANR	1675659	ElseStatement	else		1675177	0					
ANR	1675660	ExpressionStatement	flags |= SLOW_SRC2	2072:3:62356:62374	1675177	0	True				
ANR	1675661	AssignmentExpression	flags |= SLOW_SRC2		1675177	0		|=			
ANR	1675662	Identifier	flags		1675177	0					
ANR	1675663	Identifier	SLOW_SRC2		1675177	1					
ANR	1675664	ExpressionStatement	src2_r = sugg_src2_r	2073:2:62378:62398	1675177	1	True				
ANR	1675665	AssignmentExpression	src2_r = sugg_src2_r		1675177	0		=			
ANR	1675666	Identifier	src2_r		1675177	0					
ANR	1675667	Identifier	sugg_src2_r		1675177	1					
ANR	1675668	IfStatement	if ( ( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 ) )		1675177	9					
ANR	1675669	Condition	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )	2076:5:62409:62468	1675177	0	True				
ANR	1675670	EqualityExpression	( flags & ( SLOW_SRC1 | SLOW_SRC2 ) ) == ( SLOW_SRC1 | SLOW_SRC2 )		1675177	0		==			
ANR	1675671	BitAndExpression	flags & ( SLOW_SRC1 | SLOW_SRC2 )		1675177	0		&			
ANR	1675672	Identifier	flags		1675177	0					
ANR	1675673	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1675177	1		|			
ANR	1675674	Identifier	SLOW_SRC1		1675177	0					
ANR	1675675	Identifier	SLOW_SRC2		1675177	1					
ANR	1675676	InclusiveOrExpression	SLOW_SRC1 | SLOW_SRC2		1675177	1		|			
ANR	1675677	Identifier	SLOW_SRC1		1675177	0					
ANR	1675678	Identifier	SLOW_SRC2		1675177	1					
ANR	1675679	CompoundStatement		98:67:2670:2670	1675177	1					
ANR	1675680	ExpressionStatement	SLJIT_ASSERT ( src2_r == TMP_REG2 )	2077:2:62475:62507	1675177	0	True				
ANR	1675681	CallExpression	SLJIT_ASSERT ( src2_r == TMP_REG2 )		1675177	0					
ANR	1675682	Callee	SLJIT_ASSERT		1675177	0					
ANR	1675683	Identifier	SLJIT_ASSERT		1675177	0					
ANR	1675684	ArgumentList	src2_r == TMP_REG2		1675177	1					
ANR	1675685	Argument	src2_r == TMP_REG2		1675177	0					
ANR	1675686	EqualityExpression	src2_r == TMP_REG2		1675177	0		==			
ANR	1675687	Identifier	src2_r		1675177	0					
ANR	1675688	Identifier	TMP_REG2		1675177	1					
ANR	1675689	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1675177	1					
ANR	1675690	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	2078:6:62515:62587	1675177	0	True				
ANR	1675691	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1675177	0		&&			
ANR	1675692	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1675177	0					
ANR	1675693	UnaryOperator	!		1675177	0					
ANR	1675694	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1675177	1					
ANR	1675695	Callee	can_cache		1675177	0					
ANR	1675696	Identifier	can_cache		1675177	0					
ANR	1675697	ArgumentList	src1		1675177	1					
ANR	1675698	Argument	src1		1675177	0					
ANR	1675699	Identifier	src1		1675177	0					
ANR	1675700	Argument	src1w		1675177	1					
ANR	1675701	Identifier	src1w		1675177	0					
ANR	1675702	Argument	src2		1675177	2					
ANR	1675703	Identifier	src2		1675177	0					
ANR	1675704	Argument	src2w		1675177	3					
ANR	1675705	Identifier	src2w		1675177	0					
ANR	1675706	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1675177	1					
ANR	1675707	Callee	can_cache		1675177	0					
ANR	1675708	Identifier	can_cache		1675177	0					
ANR	1675709	ArgumentList	src1		1675177	1					
ANR	1675710	Argument	src1		1675177	0					
ANR	1675711	Identifier	src1		1675177	0					
ANR	1675712	Argument	src1w		1675177	1					
ANR	1675713	Identifier	src1w		1675177	0					
ANR	1675714	Argument	dst		1675177	2					
ANR	1675715	Identifier	dst		1675177	0					
ANR	1675716	Argument	dstw		1675177	3					
ANR	1675717	Identifier	dstw		1675177	0					
ANR	1675718	CompoundStatement		100:81:2789:2789	1675177	1					
ANR	1675719	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w ) )"	2079:3:62595:62686	1675177	0	True				
ANR	1675720	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w ) )"		1675177	0					
ANR	1675721	Callee	FAIL_IF		1675177	0					
ANR	1675722	Identifier	FAIL_IF		1675177	0					
ANR	1675723	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w )"		1675177	1					
ANR	1675724	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w )"		1675177	0					
ANR	1675725	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , src1 , src1w )"		1675177	0					
ANR	1675726	Callee	getput_arg		1675177	0					
ANR	1675727	Identifier	getput_arg		1675177	0					
ANR	1675728	ArgumentList	compiler		1675177	1					
ANR	1675729	Argument	compiler		1675177	0					
ANR	1675730	Identifier	compiler		1675177	0					
ANR	1675731	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675732	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675733	Identifier	flags		1675177	0					
ANR	1675734	Identifier	LOAD_DATA		1675177	1					
ANR	1675735	Argument	TMP_REG2_mapped		1675177	2					
ANR	1675736	Identifier	TMP_REG2_mapped		1675177	0					
ANR	1675737	Argument	src2		1675177	3					
ANR	1675738	Identifier	src2		1675177	0					
ANR	1675739	Argument	src2w		1675177	4					
ANR	1675740	Identifier	src2w		1675177	0					
ANR	1675741	Argument	src1		1675177	5					
ANR	1675742	Identifier	src1		1675177	0					
ANR	1675743	Argument	src1w		1675177	6					
ANR	1675744	Identifier	src1w		1675177	0					
ANR	1675745	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"	2080:3:62691:62780	1675177	1	True				
ANR	1675746	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"		1675177	0					
ANR	1675747	Callee	FAIL_IF		1675177	0					
ANR	1675748	Identifier	FAIL_IF		1675177	0					
ANR	1675749	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1675177	1					
ANR	1675750	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1675177	0					
ANR	1675751	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1675177	0					
ANR	1675752	Callee	getput_arg		1675177	0					
ANR	1675753	Identifier	getput_arg		1675177	0					
ANR	1675754	ArgumentList	compiler		1675177	1					
ANR	1675755	Argument	compiler		1675177	0					
ANR	1675756	Identifier	compiler		1675177	0					
ANR	1675757	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675758	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675759	Identifier	flags		1675177	0					
ANR	1675760	Identifier	LOAD_DATA		1675177	1					
ANR	1675761	Argument	TMP_REG1_mapped		1675177	2					
ANR	1675762	Identifier	TMP_REG1_mapped		1675177	0					
ANR	1675763	Argument	src1		1675177	3					
ANR	1675764	Identifier	src1		1675177	0					
ANR	1675765	Argument	src1w		1675177	4					
ANR	1675766	Identifier	src1w		1675177	0					
ANR	1675767	Argument	dst		1675177	5					
ANR	1675768	Identifier	dst		1675177	0					
ANR	1675769	Argument	dstw		1675177	6					
ANR	1675770	Identifier	dstw		1675177	0					
ANR	1675771	ElseStatement	else		1675177	0					
ANR	1675772	CompoundStatement		103:9:2990:2990	1675177	0					
ANR	1675773	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w ) )"	2082:3:62796:62887	1675177	0	True				
ANR	1675774	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w ) )"		1675177	0					
ANR	1675775	Callee	FAIL_IF		1675177	0					
ANR	1675776	Identifier	FAIL_IF		1675177	0					
ANR	1675777	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w )"		1675177	1					
ANR	1675778	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w )"		1675177	0					
ANR	1675779	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , src2 , src2w )"		1675177	0					
ANR	1675780	Callee	getput_arg		1675177	0					
ANR	1675781	Identifier	getput_arg		1675177	0					
ANR	1675782	ArgumentList	compiler		1675177	1					
ANR	1675783	Argument	compiler		1675177	0					
ANR	1675784	Identifier	compiler		1675177	0					
ANR	1675785	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675786	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675787	Identifier	flags		1675177	0					
ANR	1675788	Identifier	LOAD_DATA		1675177	1					
ANR	1675789	Argument	TMP_REG1_mapped		1675177	2					
ANR	1675790	Identifier	TMP_REG1_mapped		1675177	0					
ANR	1675791	Argument	src1		1675177	3					
ANR	1675792	Identifier	src1		1675177	0					
ANR	1675793	Argument	src1w		1675177	4					
ANR	1675794	Identifier	src1w		1675177	0					
ANR	1675795	Argument	src2		1675177	5					
ANR	1675796	Identifier	src2		1675177	0					
ANR	1675797	Argument	src2w		1675177	6					
ANR	1675798	Identifier	src2w		1675177	0					
ANR	1675799	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw ) )"	2083:3:62892:62981	1675177	1	True				
ANR	1675800	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw ) )"		1675177	0					
ANR	1675801	Callee	FAIL_IF		1675177	0					
ANR	1675802	Identifier	FAIL_IF		1675177	0					
ANR	1675803	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw )"		1675177	1					
ANR	1675804	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw )"		1675177	0					
ANR	1675805	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG2_mapped , src2 , src2w , dst , dstw )"		1675177	0					
ANR	1675806	Callee	getput_arg		1675177	0					
ANR	1675807	Identifier	getput_arg		1675177	0					
ANR	1675808	ArgumentList	compiler		1675177	1					
ANR	1675809	Argument	compiler		1675177	0					
ANR	1675810	Identifier	compiler		1675177	0					
ANR	1675811	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675812	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675813	Identifier	flags		1675177	0					
ANR	1675814	Identifier	LOAD_DATA		1675177	1					
ANR	1675815	Argument	TMP_REG2_mapped		1675177	2					
ANR	1675816	Identifier	TMP_REG2_mapped		1675177	0					
ANR	1675817	Argument	src2		1675177	3					
ANR	1675818	Identifier	src2		1675177	0					
ANR	1675819	Argument	src2w		1675177	4					
ANR	1675820	Identifier	src2w		1675177	0					
ANR	1675821	Argument	dst		1675177	5					
ANR	1675822	Identifier	dst		1675177	0					
ANR	1675823	Argument	dstw		1675177	6					
ANR	1675824	Identifier	dstw		1675177	0					
ANR	1675825	ElseStatement	else		1675177	0					
ANR	1675826	IfStatement	if ( flags & SLOW_SRC1 )		1675177	0					
ANR	1675827	Condition	flags & SLOW_SRC1	2085:12:62999:63015	1675177	0	True				
ANR	1675828	BitAndExpression	flags & SLOW_SRC1		1675177	0		&			
ANR	1675829	Identifier	flags		1675177	0					
ANR	1675830	Identifier	SLOW_SRC1		1675177	1					
ANR	1675831	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"	2086:2:63020:63109	1675177	1	True				
ANR	1675832	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw ) )"		1675177	0					
ANR	1675833	Callee	FAIL_IF		1675177	0					
ANR	1675834	Identifier	FAIL_IF		1675177	0					
ANR	1675835	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1675177	1					
ANR	1675836	Argument	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1675177	0					
ANR	1675837	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , TMP_REG1_mapped , src1 , src1w , dst , dstw )"		1675177	0					
ANR	1675838	Callee	getput_arg		1675177	0					
ANR	1675839	Identifier	getput_arg		1675177	0					
ANR	1675840	ArgumentList	compiler		1675177	1					
ANR	1675841	Argument	compiler		1675177	0					
ANR	1675842	Identifier	compiler		1675177	0					
ANR	1675843	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675844	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675845	Identifier	flags		1675177	0					
ANR	1675846	Identifier	LOAD_DATA		1675177	1					
ANR	1675847	Argument	TMP_REG1_mapped		1675177	2					
ANR	1675848	Identifier	TMP_REG1_mapped		1675177	0					
ANR	1675849	Argument	src1		1675177	3					
ANR	1675850	Identifier	src1		1675177	0					
ANR	1675851	Argument	src1w		1675177	4					
ANR	1675852	Identifier	src1w		1675177	0					
ANR	1675853	Argument	dst		1675177	5					
ANR	1675854	Identifier	dst		1675177	0					
ANR	1675855	Argument	dstw		1675177	6					
ANR	1675856	Identifier	dstw		1675177	0					
ANR	1675857	ElseStatement	else		1675177	0					
ANR	1675858	IfStatement	if ( flags & SLOW_SRC2 )		1675177	0					
ANR	1675859	Condition	flags & SLOW_SRC2	2087:10:63121:63137	1675177	0	True				
ANR	1675860	BitAndExpression	flags & SLOW_SRC2		1675177	0		&			
ANR	1675861	Identifier	flags		1675177	0					
ANR	1675862	Identifier	SLOW_SRC2		1675177	1					
ANR	1675863	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw ) )"	2088:2:63142:63236	1675177	1	True				
ANR	1675864	CallExpression	"FAIL_IF ( getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw ) )"		1675177	0					
ANR	1675865	Callee	FAIL_IF		1675177	0					
ANR	1675866	Identifier	FAIL_IF		1675177	0					
ANR	1675867	ArgumentList	"getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw )"		1675177	1					
ANR	1675868	Argument	"getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw )"		1675177	0					
ANR	1675869	CallExpression	"getput_arg ( compiler , flags | LOAD_DATA , reg_map [ sugg_src2_r ] , src2 , src2w , dst , dstw )"		1675177	0					
ANR	1675870	Callee	getput_arg		1675177	0					
ANR	1675871	Identifier	getput_arg		1675177	0					
ANR	1675872	ArgumentList	compiler		1675177	1					
ANR	1675873	Argument	compiler		1675177	0					
ANR	1675874	Identifier	compiler		1675177	0					
ANR	1675875	Argument	flags | LOAD_DATA		1675177	1					
ANR	1675876	InclusiveOrExpression	flags | LOAD_DATA		1675177	0		|			
ANR	1675877	Identifier	flags		1675177	0					
ANR	1675878	Identifier	LOAD_DATA		1675177	1					
ANR	1675879	Argument	reg_map [ sugg_src2_r ]		1675177	2					
ANR	1675880	ArrayIndexing	reg_map [ sugg_src2_r ]		1675177	0					
ANR	1675881	Identifier	reg_map		1675177	0					
ANR	1675882	Identifier	sugg_src2_r		1675177	1					
ANR	1675883	Argument	src2		1675177	3					
ANR	1675884	Identifier	src2		1675177	0					
ANR	1675885	Argument	src2w		1675177	4					
ANR	1675886	Identifier	src2w		1675177	0					
ANR	1675887	Argument	dst		1675177	5					
ANR	1675888	Identifier	dst		1675177	0					
ANR	1675889	Argument	dstw		1675177	6					
ANR	1675890	Identifier	dstw		1675177	0					
ANR	1675891	ExpressionStatement	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"	2090:1:63240:63307	1675177	10	True				
ANR	1675892	CallExpression	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"		1675177	0					
ANR	1675893	Callee	FAIL_IF		1675177	0					
ANR	1675894	Identifier	FAIL_IF		1675177	0					
ANR	1675895	ArgumentList	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1675177	1					
ANR	1675896	Argument	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1675177	0					
ANR	1675897	CallExpression	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1675177	0					
ANR	1675898	Callee	emit_single_op		1675177	0					
ANR	1675899	Identifier	emit_single_op		1675177	0					
ANR	1675900	ArgumentList	compiler		1675177	1					
ANR	1675901	Argument	compiler		1675177	0					
ANR	1675902	Identifier	compiler		1675177	0					
ANR	1675903	Argument	op		1675177	1					
ANR	1675904	Identifier	op		1675177	0					
ANR	1675905	Argument	flags		1675177	2					
ANR	1675906	Identifier	flags		1675177	0					
ANR	1675907	Argument	dst_r		1675177	3					
ANR	1675908	Identifier	dst_r		1675177	0					
ANR	1675909	Argument	src1_r		1675177	4					
ANR	1675910	Identifier	src1_r		1675177	0					
ANR	1675911	Argument	src2_r		1675177	5					
ANR	1675912	Identifier	src2_r		1675177	0					
ANR	1675913	IfStatement	if ( dst & SLJIT_MEM )		1675177	11					
ANR	1675914	Condition	dst & SLJIT_MEM	2092:5:63315:63329	1675177	0	True				
ANR	1675915	BitAndExpression	dst & SLJIT_MEM		1675177	0		&			
ANR	1675916	Identifier	dst		1675177	0					
ANR	1675917	Identifier	SLJIT_MEM		1675177	1					
ANR	1675918	CompoundStatement		114:22:3531:3531	1675177	1					
ANR	1675919	IfStatement	if ( ! ( flags & SLOW_DEST ) )		1675177	0					
ANR	1675920	Condition	! ( flags & SLOW_DEST )	2093:6:63340:63359	1675177	0	True				
ANR	1675921	UnaryOperationExpression	! ( flags & SLOW_DEST )		1675177	0					
ANR	1675922	UnaryOperator	!		1675177	0					
ANR	1675923	BitAndExpression	flags & SLOW_DEST		1675177	1		&			
ANR	1675924	Identifier	flags		1675177	0					
ANR	1675925	Identifier	SLOW_DEST		1675177	1					
ANR	1675926	CompoundStatement		115:28:3561:3561	1675177	1					
ANR	1675927	ExpressionStatement	"getput_arg_fast ( compiler , flags , reg_map [ dst_r ] , dst , dstw )"	2094:3:63367:63426	1675177	0	True				
ANR	1675928	CallExpression	"getput_arg_fast ( compiler , flags , reg_map [ dst_r ] , dst , dstw )"		1675177	0					
ANR	1675929	Callee	getput_arg_fast		1675177	0					
ANR	1675930	Identifier	getput_arg_fast		1675177	0					
ANR	1675931	ArgumentList	compiler		1675177	1					
ANR	1675932	Argument	compiler		1675177	0					
ANR	1675933	Identifier	compiler		1675177	0					
ANR	1675934	Argument	flags		1675177	1					
ANR	1675935	Identifier	flags		1675177	0					
ANR	1675936	Argument	reg_map [ dst_r ]		1675177	2					
ANR	1675937	ArrayIndexing	reg_map [ dst_r ]		1675177	0					
ANR	1675938	Identifier	reg_map		1675177	0					
ANR	1675939	Identifier	dst_r		1675177	1					
ANR	1675940	Argument	dst		1675177	3					
ANR	1675941	Identifier	dst		1675177	0					
ANR	1675942	Argument	dstw		1675177	4					
ANR	1675943	Identifier	dstw		1675177	0					
ANR	1675944	ReturnStatement	return compiler -> error ;	2095:3:63431:63453	1675177	1	True				
ANR	1675945	PtrMemberAccess	compiler -> error		1675177	0					
ANR	1675946	Identifier	compiler		1675177	0					
ANR	1675947	Identifier	error		1675177	1					
ANR	1675948	ReturnStatement	"return getput_arg ( compiler , flags , reg_map [ dst_r ] , dst , dstw , 0 , 0 ) ;"	2098:2:63462:63529	1675177	1	True				
ANR	1675949	CallExpression	"getput_arg ( compiler , flags , reg_map [ dst_r ] , dst , dstw , 0 , 0 )"		1675177	0					
ANR	1675950	Callee	getput_arg		1675177	0					
ANR	1675951	Identifier	getput_arg		1675177	0					
ANR	1675952	ArgumentList	compiler		1675177	1					
ANR	1675953	Argument	compiler		1675177	0					
ANR	1675954	Identifier	compiler		1675177	0					
ANR	1675955	Argument	flags		1675177	1					
ANR	1675956	Identifier	flags		1675177	0					
ANR	1675957	Argument	reg_map [ dst_r ]		1675177	2					
ANR	1675958	ArrayIndexing	reg_map [ dst_r ]		1675177	0					
ANR	1675959	Identifier	reg_map		1675177	0					
ANR	1675960	Identifier	dst_r		1675177	1					
ANR	1675961	Argument	dst		1675177	3					
ANR	1675962	Identifier	dst		1675177	0					
ANR	1675963	Argument	dstw		1675177	4					
ANR	1675964	Identifier	dstw		1675177	0					
ANR	1675965	Argument	0		1675177	5					
ANR	1675966	PrimaryExpression	0		1675177	0					
ANR	1675967	Argument	0		1675177	6					
ANR	1675968	PrimaryExpression	0		1675177	0					
ANR	1675969	ReturnStatement	return SLJIT_SUCCESS ;	2101:1:63536:63556	1675177	12	True				
ANR	1675970	Identifier	SLJIT_SUCCESS		1675177	0					
ANR	1675971	ReturnType	static sljit_si		1675177	1					
ANR	1675972	Identifier	emit_op		1675177	2					
ANR	1675973	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1675177	3					
ANR	1675974	Parameter	struct sljit_compiler * compiler	1978:24:59647:59677	1675177	0	True				
ANR	1675975	ParameterType	struct sljit_compiler *		1675177	0					
ANR	1675976	Identifier	compiler		1675177	1					
ANR	1675977	Parameter	sljit_si op	1978:57:59680:59690	1675177	1	True				
ANR	1675978	ParameterType	sljit_si		1675177	0					
ANR	1675979	Identifier	op		1675177	1					
ANR	1675980	Parameter	sljit_si flags	1978:70:59693:59706	1675177	2	True				
ANR	1675981	ParameterType	sljit_si		1675177	0					
ANR	1675982	Identifier	flags		1675177	1					
ANR	1675983	Parameter	sljit_si dst	1978:86:59709:59720	1675177	3	True				
ANR	1675984	ParameterType	sljit_si		1675177	0					
ANR	1675985	Identifier	dst		1675177	1					
ANR	1675986	Parameter	sljit_sw dstw	1978:100:59723:59735	1675177	4	True				
ANR	1675987	ParameterType	sljit_sw		1675177	0					
ANR	1675988	Identifier	dstw		1675177	1					
ANR	1675989	Parameter	sljit_si src1	1978:115:59738:59750	1675177	5	True				
ANR	1675990	ParameterType	sljit_si		1675177	0					
ANR	1675991	Identifier	src1		1675177	1					
ANR	1675992	Parameter	sljit_sw src1w	1978:130:59753:59766	1675177	6	True				
ANR	1675993	ParameterType	sljit_sw		1675177	0					
ANR	1675994	Identifier	src1w		1675177	1					
ANR	1675995	Parameter	sljit_si src2	1978:146:59769:59781	1675177	7	True				
ANR	1675996	ParameterType	sljit_si		1675177	0					
ANR	1675997	Identifier	src2		1675177	1					
ANR	1675998	Parameter	sljit_sw src2w	1978:161:59784:59797	1675177	8	True				
ANR	1675999	ParameterType	sljit_sw		1675177	0					
ANR	1676000	Identifier	src2w		1675177	1					
ANR	1676001	CFGEntryNode	ENTRY		1675177		True				
ANR	1676002	CFGExitNode	EXIT		1675177		True				
ANR	1676003	Symbol	SLOW_SRC2		1675177						
ANR	1676004	Symbol	TMP_REG2		1675177						
ANR	1676005	Symbol	TMP_REG1_mapped		1675177						
ANR	1676006	Symbol	SIMM_16BIT_MIN		1675177						
ANR	1676007	Symbol	TMP_REG1		1675177						
ANR	1676008	Symbol	SLJIT_MEM		1675177						
ANR	1676009	Symbol	SLOW_SRC1		1675177						
ANR	1676010	Symbol	reg_map		1675177						
ANR	1676011	Symbol	SLJIT_MOVU_SI		1675177						
ANR	1676012	Symbol	* compiler		1675177						
ANR	1676013	Symbol	ARG_TEST		1675177						
ANR	1676014	Symbol	SLJIT_IMM		1675177						
ANR	1676015	Symbol	getput_arg		1675177						
ANR	1676016	Symbol	UNUSED_DEST		1675177						
ANR	1676017	Symbol	* dst_r		1675177						
ANR	1676018	Symbol	TMP_REG2_mapped		1675177						
ANR	1676019	Symbol	can_cache		1675177						
ANR	1676020	Symbol	FAST_IS_REG		1675177						
ANR	1676021	Symbol	compiler -> cache_arg		1675177						
ANR	1676022	Symbol	REG2_SOURCE		1675177						
ANR	1676023	Symbol	~UIMM_16BIT_MAX		1675177						
ANR	1676024	Symbol	* reg_map		1675177						
ANR	1676025	Symbol	* sugg_src2_r		1675177						
ANR	1676026	Symbol	src1_r		1675177						
ANR	1676027	Symbol	SIMM_16BIT_MAX		1675177						
ANR	1676028	Symbol	emit_single_op		1675177						
ANR	1676029	Symbol	REG_DEST		1675177						
ANR	1676030	Symbol	getput_arg_fast		1675177						
ANR	1676031	Symbol	SLJIT_UNLIKELY		1675177						
ANR	1676032	Symbol	compiler -> cache_argw		1675177						
ANR	1676033	Symbol	src1w		1675177						
ANR	1676034	Symbol	dst		1675177						
ANR	1676035	Symbol	IMM_OP		1675177						
ANR	1676036	Symbol	LOAD_DATA		1675177						
ANR	1676037	Symbol	SLJIT_MOV		1675177						
ANR	1676038	Symbol	SLOW_DEST		1675177						
ANR	1676039	Symbol	CUMULATIVE_OP		1675177						
ANR	1676040	Symbol	flags		1675177						
ANR	1676041	Symbol	sugg_src2_r		1675177						
ANR	1676042	Symbol	dst_r		1675177						
ANR	1676043	Symbol	GET_FLAGS		1675177						
ANR	1676044	Symbol	load_immediate		1675177						
ANR	1676045	Symbol	SRC2_IMM		1675177						
ANR	1676046	Symbol	compiler		1675177						
ANR	1676047	Symbol	src2w		1675177						
ANR	1676048	Symbol	op		1675177						
ANR	1676049	Symbol	LOGICAL_OP		1675177						
ANR	1676050	Symbol	REG1_SOURCE		1675177						
ANR	1676051	Symbol	SLJIT_SUCCESS		1675177						
ANR	1676052	Symbol	src2_r		1675177						
ANR	1676053	Symbol	SLJIT_UNUSED		1675177						
ANR	1676054	Symbol	src1		1675177						
ANR	1676055	Symbol	src2		1675177						
ANR	1676056	Symbol	dstw		1675177						
ANR	1676057	Symbol	ALT_KEEP_CACHE		1675177						
ANR	1676058	Symbol	compiler -> error		1675177						
ANR	1676059	Function	sljit_emit_op_flags	2104:0:63561:65902							
ANR	1676060	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1676059	0					
ANR	1676061	CompoundStatement		2105:0:63734:65902	1676059	0					
ANR	1676062	IdentifierDeclStatement	"sljit_si sugg_dst_ar , dst_ar ;"	2106:1:63737:63765	1676059	0	True				
ANR	1676063	IdentifierDecl	sugg_dst_ar		1676059	0					
ANR	1676064	IdentifierDeclType	sljit_si		1676059	0					
ANR	1676065	Identifier	sugg_dst_ar		1676059	1					
ANR	1676066	IdentifierDecl	dst_ar		1676059	1					
ANR	1676067	IdentifierDeclType	sljit_si		1676059	0					
ANR	1676068	Identifier	dst_ar		1676059	1					
ANR	1676069	IdentifierDeclStatement	sljit_si flags = GET_ALL_FLAGS ( op ) ;	2107:1:63768:63802	1676059	1	True				
ANR	1676070	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1676059	0					
ANR	1676071	IdentifierDeclType	sljit_si		1676059	0					
ANR	1676072	Identifier	flags		1676059	1					
ANR	1676073	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1676059	2		=			
ANR	1676074	Identifier	flags		1676059	0					
ANR	1676075	CallExpression	GET_ALL_FLAGS ( op )		1676059	1					
ANR	1676076	Callee	GET_ALL_FLAGS		1676059	0					
ANR	1676077	Identifier	GET_ALL_FLAGS		1676059	0					
ANR	1676078	ArgumentList	op		1676059	1					
ANR	1676079	Argument	op		1676059	0					
ANR	1676080	Identifier	op		1676059	0					
ANR	1676081	ExpressionStatement	CHECK_ERROR ( )	2109:1:63806:63819	1676059	2	True				
ANR	1676082	CallExpression	CHECK_ERROR ( )		1676059	0					
ANR	1676083	Callee	CHECK_ERROR		1676059	0					
ANR	1676084	Identifier	CHECK_ERROR		1676059	0					
ANR	1676085	ArgumentList			1676059	1					
ANR	1676086	ExpressionStatement	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"	2110:1:63822:63889	1676059	3	True				
ANR	1676087	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1676059	0					
ANR	1676088	Callee	check_sljit_emit_op_flags		1676059	0					
ANR	1676089	Identifier	check_sljit_emit_op_flags		1676059	0					
ANR	1676090	ArgumentList	compiler		1676059	1					
ANR	1676091	Argument	compiler		1676059	0					
ANR	1676092	Identifier	compiler		1676059	0					
ANR	1676093	Argument	op		1676059	1					
ANR	1676094	Identifier	op		1676059	0					
ANR	1676095	Argument	dst		1676059	2					
ANR	1676096	Identifier	dst		1676059	0					
ANR	1676097	Argument	dstw		1676059	3					
ANR	1676098	Identifier	dstw		1676059	0					
ANR	1676099	Argument	src		1676059	4					
ANR	1676100	Identifier	src		1676059	0					
ANR	1676101	Argument	srcw		1676059	5					
ANR	1676102	Identifier	srcw		1676059	0					
ANR	1676103	Argument	type		1676059	6					
ANR	1676104	Identifier	type		1676059	0					
ANR	1676105	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2111:1:63892:63922	1676059	4	True				
ANR	1676106	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1676059	0					
ANR	1676107	Callee	ADJUST_LOCAL_OFFSET		1676059	0					
ANR	1676108	Identifier	ADJUST_LOCAL_OFFSET		1676059	0					
ANR	1676109	ArgumentList	dst		1676059	1					
ANR	1676110	Argument	dst		1676059	0					
ANR	1676111	Identifier	dst		1676059	0					
ANR	1676112	Argument	dstw		1676059	1					
ANR	1676113	Identifier	dstw		1676059	0					
ANR	1676114	IfStatement	if ( dst == SLJIT_UNUSED )		1676059	5					
ANR	1676115	Condition	dst == SLJIT_UNUSED	2113:5:63930:63948	1676059	0	True				
ANR	1676116	EqualityExpression	dst == SLJIT_UNUSED		1676059	0		==			
ANR	1676117	Identifier	dst		1676059	0					
ANR	1676118	Identifier	SLJIT_UNUSED		1676059	1					
ANR	1676119	ReturnStatement	return SLJIT_SUCCESS ;	2114:2:63953:63973	1676059	1	True				
ANR	1676120	Identifier	SLJIT_SUCCESS		1676059	0					
ANR	1676121	ExpressionStatement	op = GET_OPCODE ( op )	2116:1:63977:63996	1676059	6	True				
ANR	1676122	AssignmentExpression	op = GET_OPCODE ( op )		1676059	0		=			
ANR	1676123	Identifier	op		1676059	0					
ANR	1676124	CallExpression	GET_OPCODE ( op )		1676059	1					
ANR	1676125	Callee	GET_OPCODE		1676059	0					
ANR	1676126	Identifier	GET_OPCODE		1676059	0					
ANR	1676127	ArgumentList	op		1676059	1					
ANR	1676128	Argument	op		1676059	0					
ANR	1676129	Identifier	op		1676059	0					
ANR	1676130	ExpressionStatement	sugg_dst_ar = reg_map [ ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 ]	2117:1:63999:64075	1676059	7	True				
ANR	1676131	AssignmentExpression	sugg_dst_ar = reg_map [ ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 ]		1676059	0		=			
ANR	1676132	Identifier	sugg_dst_ar		1676059	0					
ANR	1676133	ArrayIndexing	reg_map [ ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2 ]		1676059	1					
ANR	1676134	Identifier	reg_map		1676059	0					
ANR	1676135	ConditionalExpression	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1676059	1					
ANR	1676136	Condition	op < SLJIT_ADD && FAST_IS_REG ( dst )		1676059	0					
ANR	1676137	AndExpression	op < SLJIT_ADD && FAST_IS_REG ( dst )		1676059	0		&&			
ANR	1676138	RelationalExpression	op < SLJIT_ADD		1676059	0		<			
ANR	1676139	Identifier	op		1676059	0					
ANR	1676140	Identifier	SLJIT_ADD		1676059	1					
ANR	1676141	CallExpression	FAST_IS_REG ( dst )		1676059	1					
ANR	1676142	Callee	FAST_IS_REG		1676059	0					
ANR	1676143	Identifier	FAST_IS_REG		1676059	0					
ANR	1676144	ArgumentList	dst		1676059	1					
ANR	1676145	Argument	dst		1676059	0					
ANR	1676146	Identifier	dst		1676059	0					
ANR	1676147	Identifier	dst		1676059	1					
ANR	1676148	Identifier	TMP_REG2		1676059	2					
ANR	1676149	ExpressionStatement	compiler -> cache_arg = 0	2119:1:64079:64102	1676059	8	True				
ANR	1676150	AssignmentExpression	compiler -> cache_arg = 0		1676059	0		=			
ANR	1676151	PtrMemberAccess	compiler -> cache_arg		1676059	0					
ANR	1676152	Identifier	compiler		1676059	0					
ANR	1676153	Identifier	cache_arg		1676059	1					
ANR	1676154	PrimaryExpression	0		1676059	1					
ANR	1676155	ExpressionStatement	compiler -> cache_argw = 0	2120:1:64105:64129	1676059	9	True				
ANR	1676156	AssignmentExpression	compiler -> cache_argw = 0		1676059	0		=			
ANR	1676157	PtrMemberAccess	compiler -> cache_argw		1676059	0					
ANR	1676158	Identifier	compiler		1676059	0					
ANR	1676159	Identifier	cache_argw		1676059	1					
ANR	1676160	PrimaryExpression	0		1676059	1					
ANR	1676161	IfStatement	if ( op >= SLJIT_ADD && ( src & SLJIT_MEM ) )		1676059	10					
ANR	1676162	Condition	op >= SLJIT_ADD && ( src & SLJIT_MEM )	2121:5:64136:64171	1676059	0	True				
ANR	1676163	AndExpression	op >= SLJIT_ADD && ( src & SLJIT_MEM )		1676059	0		&&			
ANR	1676164	RelationalExpression	op >= SLJIT_ADD		1676059	0		>=			
ANR	1676165	Identifier	op		1676059	0					
ANR	1676166	Identifier	SLJIT_ADD		1676059	1					
ANR	1676167	BitAndExpression	src & SLJIT_MEM		1676059	1		&			
ANR	1676168	Identifier	src		1676059	0					
ANR	1676169	Identifier	SLJIT_MEM		1676059	1					
ANR	1676170	CompoundStatement		17:43:439:439	1676059	1					
ANR	1676171	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2122:2:64178:64208	1676059	0	True				
ANR	1676172	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1676059	0					
ANR	1676173	Callee	ADJUST_LOCAL_OFFSET		1676059	0					
ANR	1676174	Identifier	ADJUST_LOCAL_OFFSET		1676059	0					
ANR	1676175	ArgumentList	src		1676059	1					
ANR	1676176	Argument	src		1676059	0					
ANR	1676177	Identifier	src		1676059	0					
ANR	1676178	Argument	srcw		1676059	1					
ANR	1676179	Identifier	srcw		1676059	0					
ANR	1676180	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw ) )"	2123:2:64212:64305	1676059	1	True				
ANR	1676181	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw ) )"		1676059	0					
ANR	1676182	Callee	FAIL_IF		1676059	0					
ANR	1676183	Identifier	FAIL_IF		1676059	0					
ANR	1676184	ArgumentList	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw )"		1676059	1					
ANR	1676185	Argument	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw )"		1676059	0					
ANR	1676186	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1_mapped , src , srcw , dst , dstw )"		1676059	0					
ANR	1676187	Callee	emit_op_mem2		1676059	0					
ANR	1676188	Identifier	emit_op_mem2		1676059	0					
ANR	1676189	ArgumentList	compiler		1676059	1					
ANR	1676190	Argument	compiler		1676059	0					
ANR	1676191	Identifier	compiler		1676059	0					
ANR	1676192	Argument	WORD_DATA | LOAD_DATA		1676059	1					
ANR	1676193	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1676059	0		|			
ANR	1676194	Identifier	WORD_DATA		1676059	0					
ANR	1676195	Identifier	LOAD_DATA		1676059	1					
ANR	1676196	Argument	TMP_REG1_mapped		1676059	2					
ANR	1676197	Identifier	TMP_REG1_mapped		1676059	0					
ANR	1676198	Argument	src		1676059	3					
ANR	1676199	Identifier	src		1676059	0					
ANR	1676200	Argument	srcw		1676059	4					
ANR	1676201	Identifier	srcw		1676059	0					
ANR	1676202	Argument	dst		1676059	5					
ANR	1676203	Identifier	dst		1676059	0					
ANR	1676204	Argument	dstw		1676059	6					
ANR	1676205	Identifier	dstw		1676059	0					
ANR	1676206	ExpressionStatement	src = TMP_REG1	2124:2:64309:64323	1676059	2	True				
ANR	1676207	AssignmentExpression	src = TMP_REG1		1676059	0		=			
ANR	1676208	Identifier	src		1676059	0					
ANR	1676209	Identifier	TMP_REG1		1676059	1					
ANR	1676210	ExpressionStatement	srcw = 0	2125:2:64327:64335	1676059	3	True				
ANR	1676211	AssignmentExpression	srcw = 0		1676059	0		=			
ANR	1676212	Identifier	srcw		1676059	0					
ANR	1676213	PrimaryExpression	0		1676059	1					
ANR	1676214	SwitchStatement	switch ( type )		1676059	11					
ANR	1676215	Condition	type	2128:9:64350:64353	1676059	0	True				
ANR	1676216	Identifier	type		1676059	0					
ANR	1676217	CompoundStatement		24:15:621:621	1676059	1					
ANR	1676218	Label	case SLJIT_C_EQUAL :	2129:1:64359:64377	1676059	0	True				
ANR	1676219	Identifier	SLJIT_C_EQUAL		1676059	0					
ANR	1676220	Label	case SLJIT_C_NOT_EQUAL :	2130:1:64380:64402	1676059	1	True				
ANR	1676221	Identifier	SLJIT_C_NOT_EQUAL		1676059	0					
ANR	1676222	ExpressionStatement	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 ) )"	2131:2:64406:64450	1676059	2	True				
ANR	1676223	CallExpression	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 ) )"		1676059	0					
ANR	1676224	Callee	FAIL_IF		1676059	0					
ANR	1676225	Identifier	FAIL_IF		1676059	0					
ANR	1676226	ArgumentList	"CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 )"		1676059	1					
ANR	1676227	Argument	"CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 )"		1676059	0					
ANR	1676228	CallExpression	"CMPLTUI ( sugg_dst_ar , EQUAL_FLAG , 1 )"		1676059	0					
ANR	1676229	Callee	CMPLTUI		1676059	0					
ANR	1676230	Identifier	CMPLTUI		1676059	0					
ANR	1676231	ArgumentList	sugg_dst_ar		1676059	1					
ANR	1676232	Argument	sugg_dst_ar		1676059	0					
ANR	1676233	Identifier	sugg_dst_ar		1676059	0					
ANR	1676234	Argument	EQUAL_FLAG		1676059	1					
ANR	1676235	Identifier	EQUAL_FLAG		1676059	0					
ANR	1676236	Argument	1		1676059	2					
ANR	1676237	PrimaryExpression	1		1676059	0					
ANR	1676238	ExpressionStatement	dst_ar = sugg_dst_ar	2132:2:64454:64474	1676059	3	True				
ANR	1676239	AssignmentExpression	dst_ar = sugg_dst_ar		1676059	0		=			
ANR	1676240	Identifier	dst_ar		1676059	0					
ANR	1676241	Identifier	sugg_dst_ar		1676059	1					
ANR	1676242	BreakStatement	break ;	2133:2:64478:64483	1676059	4	True				
ANR	1676243	Label	case SLJIT_C_LESS :	2134:1:64486:64503	1676059	5	True				
ANR	1676244	Identifier	SLJIT_C_LESS		1676059	0					
ANR	1676245	Label	case SLJIT_C_GREATER_EQUAL :	2135:1:64506:64532	1676059	6	True				
ANR	1676246	Identifier	SLJIT_C_GREATER_EQUAL		1676059	0					
ANR	1676247	Label	case SLJIT_C_FLOAT_LESS :	2136:1:64535:64558	1676059	7	True				
ANR	1676248	Identifier	SLJIT_C_FLOAT_LESS		1676059	0					
ANR	1676249	Label	case SLJIT_C_FLOAT_GREATER_EQUAL :	2137:1:64561:64593	1676059	8	True				
ANR	1676250	Identifier	SLJIT_C_FLOAT_GREATER_EQUAL		1676059	0					
ANR	1676251	ExpressionStatement	dst_ar = ULESS_FLAG	2138:2:64597:64616	1676059	9	True				
ANR	1676252	AssignmentExpression	dst_ar = ULESS_FLAG		1676059	0		=			
ANR	1676253	Identifier	dst_ar		1676059	0					
ANR	1676254	Identifier	ULESS_FLAG		1676059	1					
ANR	1676255	BreakStatement	break ;	2139:2:64620:64625	1676059	10	True				
ANR	1676256	Label	case SLJIT_C_GREATER :	2140:1:64628:64648	1676059	11	True				
ANR	1676257	Identifier	SLJIT_C_GREATER		1676059	0					
ANR	1676258	Label	case SLJIT_C_LESS_EQUAL :	2141:1:64651:64674	1676059	12	True				
ANR	1676259	Identifier	SLJIT_C_LESS_EQUAL		1676059	0					
ANR	1676260	Label	case SLJIT_C_FLOAT_GREATER :	2142:1:64677:64703	1676059	13	True				
ANR	1676261	Identifier	SLJIT_C_FLOAT_GREATER		1676059	0					
ANR	1676262	Label	case SLJIT_C_FLOAT_LESS_EQUAL :	2143:1:64706:64735	1676059	14	True				
ANR	1676263	Identifier	SLJIT_C_FLOAT_LESS_EQUAL		1676059	0					
ANR	1676264	ExpressionStatement	dst_ar = UGREATER_FLAG	2144:2:64739:64761	1676059	15	True				
ANR	1676265	AssignmentExpression	dst_ar = UGREATER_FLAG		1676059	0		=			
ANR	1676266	Identifier	dst_ar		1676059	0					
ANR	1676267	Identifier	UGREATER_FLAG		1676059	1					
ANR	1676268	BreakStatement	break ;	2145:2:64765:64770	1676059	16	True				
ANR	1676269	Label	case SLJIT_C_SIG_LESS :	2146:1:64773:64794	1676059	17	True				
ANR	1676270	Identifier	SLJIT_C_SIG_LESS		1676059	0					
ANR	1676271	Label	case SLJIT_C_SIG_GREATER_EQUAL :	2147:1:64797:64827	1676059	18	True				
ANR	1676272	Identifier	SLJIT_C_SIG_GREATER_EQUAL		1676059	0					
ANR	1676273	ExpressionStatement	dst_ar = LESS_FLAG	2148:2:64831:64849	1676059	19	True				
ANR	1676274	AssignmentExpression	dst_ar = LESS_FLAG		1676059	0		=			
ANR	1676275	Identifier	dst_ar		1676059	0					
ANR	1676276	Identifier	LESS_FLAG		1676059	1					
ANR	1676277	BreakStatement	break ;	2149:2:64853:64858	1676059	20	True				
ANR	1676278	Label	case SLJIT_C_SIG_GREATER :	2150:1:64861:64885	1676059	21	True				
ANR	1676279	Identifier	SLJIT_C_SIG_GREATER		1676059	0					
ANR	1676280	Label	case SLJIT_C_SIG_LESS_EQUAL :	2151:1:64888:64915	1676059	22	True				
ANR	1676281	Identifier	SLJIT_C_SIG_LESS_EQUAL		1676059	0					
ANR	1676282	ExpressionStatement	dst_ar = GREATER_FLAG	2152:2:64919:64940	1676059	23	True				
ANR	1676283	AssignmentExpression	dst_ar = GREATER_FLAG		1676059	0		=			
ANR	1676284	Identifier	dst_ar		1676059	0					
ANR	1676285	Identifier	GREATER_FLAG		1676059	1					
ANR	1676286	BreakStatement	break ;	2153:2:64944:64949	1676059	24	True				
ANR	1676287	Label	case SLJIT_C_OVERFLOW :	2154:1:64952:64973	1676059	25	True				
ANR	1676288	Identifier	SLJIT_C_OVERFLOW		1676059	0					
ANR	1676289	Label	case SLJIT_C_NOT_OVERFLOW :	2155:1:64976:65001	1676059	26	True				
ANR	1676290	Identifier	SLJIT_C_NOT_OVERFLOW		1676059	0					
ANR	1676291	ExpressionStatement	dst_ar = OVERFLOW_FLAG	2156:2:65005:65027	1676059	27	True				
ANR	1676292	AssignmentExpression	dst_ar = OVERFLOW_FLAG		1676059	0		=			
ANR	1676293	Identifier	dst_ar		1676059	0					
ANR	1676294	Identifier	OVERFLOW_FLAG		1676059	1					
ANR	1676295	BreakStatement	break ;	2157:2:65031:65036	1676059	28	True				
ANR	1676296	Label	case SLJIT_C_MUL_OVERFLOW :	2158:1:65039:65064	1676059	29	True				
ANR	1676297	Identifier	SLJIT_C_MUL_OVERFLOW		1676059	0					
ANR	1676298	Label	case SLJIT_C_MUL_NOT_OVERFLOW :	2159:1:65067:65096	1676059	30	True				
ANR	1676299	Identifier	SLJIT_C_MUL_NOT_OVERFLOW		1676059	0					
ANR	1676300	ExpressionStatement	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 ) )"	2160:2:65100:65147	1676059	31	True				
ANR	1676301	CallExpression	"FAIL_IF ( CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 ) )"		1676059	0					
ANR	1676302	Callee	FAIL_IF		1676059	0					
ANR	1676303	Identifier	FAIL_IF		1676059	0					
ANR	1676304	ArgumentList	"CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 )"		1676059	1					
ANR	1676305	Argument	"CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 )"		1676059	0					
ANR	1676306	CallExpression	"CMPLTUI ( sugg_dst_ar , OVERFLOW_FLAG , 1 )"		1676059	0					
ANR	1676307	Callee	CMPLTUI		1676059	0					
ANR	1676308	Identifier	CMPLTUI		1676059	0					
ANR	1676309	ArgumentList	sugg_dst_ar		1676059	1					
ANR	1676310	Argument	sugg_dst_ar		1676059	0					
ANR	1676311	Identifier	sugg_dst_ar		1676059	0					
ANR	1676312	Argument	OVERFLOW_FLAG		1676059	1					
ANR	1676313	Identifier	OVERFLOW_FLAG		1676059	0					
ANR	1676314	Argument	1		1676059	2					
ANR	1676315	PrimaryExpression	1		1676059	0					
ANR	1676316	ExpressionStatement	dst_ar = sugg_dst_ar	2161:2:65151:65171	1676059	32	True				
ANR	1676317	AssignmentExpression	dst_ar = sugg_dst_ar		1676059	0		=			
ANR	1676318	Identifier	dst_ar		1676059	0					
ANR	1676319	Identifier	sugg_dst_ar		1676059	1					
ANR	1676320	ExpressionStatement	type ^= 0x1	2162:2:65175:65186	1676059	33	True				
ANR	1676321	AssignmentExpression	type ^= 0x1		1676059	0		^=			
ANR	1676322	Identifier	type		1676059	0					
ANR	1676323	PrimaryExpression	0x1		1676059	1					
ANR	1676324	BreakStatement	break ;	2163:2:65230:65235	1676059	34	True				
ANR	1676325	Label	case SLJIT_C_FLOAT_EQUAL :	2164:1:65238:65262	1676059	35	True				
ANR	1676326	Identifier	SLJIT_C_FLOAT_EQUAL		1676059	0					
ANR	1676327	Label	case SLJIT_C_FLOAT_NOT_EQUAL :	2165:1:65265:65293	1676059	36	True				
ANR	1676328	Identifier	SLJIT_C_FLOAT_NOT_EQUAL		1676059	0					
ANR	1676329	ExpressionStatement	dst_ar = EQUAL_FLAG	2166:2:65297:65316	1676059	37	True				
ANR	1676330	AssignmentExpression	dst_ar = EQUAL_FLAG		1676059	0		=			
ANR	1676331	Identifier	dst_ar		1676059	0					
ANR	1676332	Identifier	EQUAL_FLAG		1676059	1					
ANR	1676333	BreakStatement	break ;	2167:2:65320:65325	1676059	38	True				
ANR	1676334	Label	default :	2169:1:65329:65336	1676059	39	True				
ANR	1676335	Identifier	default		1676059	0					
ANR	1676336	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2170:2:65340:65359	1676059	40	True				
ANR	1676337	CallExpression	SLJIT_ASSERT_STOP ( )		1676059	0					
ANR	1676338	Callee	SLJIT_ASSERT_STOP		1676059	0					
ANR	1676339	Identifier	SLJIT_ASSERT_STOP		1676059	0					
ANR	1676340	ArgumentList			1676059	1					
ANR	1676341	ExpressionStatement	dst_ar = sugg_dst_ar	2171:2:65363:65383	1676059	41	True				
ANR	1676342	AssignmentExpression	dst_ar = sugg_dst_ar		1676059	0		=			
ANR	1676343	Identifier	dst_ar		1676059	0					
ANR	1676344	Identifier	sugg_dst_ar		1676059	1					
ANR	1676345	BreakStatement	break ;	2172:2:65387:65392	1676059	42	True				
ANR	1676346	IfStatement	if ( type & 0x1 )		1676059	12					
ANR	1676347	Condition	type & 0x1	2175:5:65403:65412	1676059	0	True				
ANR	1676348	BitAndExpression	type & 0x1		1676059	0		&			
ANR	1676349	Identifier	type		1676059	0					
ANR	1676350	PrimaryExpression	0x1		1676059	1					
ANR	1676351	CompoundStatement		71:17:1680:1680	1676059	1					
ANR	1676352	ExpressionStatement	"FAIL_IF ( XORI ( sugg_dst_ar , dst_ar , 1 ) )"	2176:2:65419:65456	1676059	0	True				
ANR	1676353	CallExpression	"FAIL_IF ( XORI ( sugg_dst_ar , dst_ar , 1 ) )"		1676059	0					
ANR	1676354	Callee	FAIL_IF		1676059	0					
ANR	1676355	Identifier	FAIL_IF		1676059	0					
ANR	1676356	ArgumentList	"XORI ( sugg_dst_ar , dst_ar , 1 )"		1676059	1					
ANR	1676357	Argument	"XORI ( sugg_dst_ar , dst_ar , 1 )"		1676059	0					
ANR	1676358	CallExpression	"XORI ( sugg_dst_ar , dst_ar , 1 )"		1676059	0					
ANR	1676359	Callee	XORI		1676059	0					
ANR	1676360	Identifier	XORI		1676059	0					
ANR	1676361	ArgumentList	sugg_dst_ar		1676059	1					
ANR	1676362	Argument	sugg_dst_ar		1676059	0					
ANR	1676363	Identifier	sugg_dst_ar		1676059	0					
ANR	1676364	Argument	dst_ar		1676059	1					
ANR	1676365	Identifier	dst_ar		1676059	0					
ANR	1676366	Argument	1		1676059	2					
ANR	1676367	PrimaryExpression	1		1676059	0					
ANR	1676368	ExpressionStatement	dst_ar = sugg_dst_ar	2177:2:65460:65480	1676059	1	True				
ANR	1676369	AssignmentExpression	dst_ar = sugg_dst_ar		1676059	0		=			
ANR	1676370	Identifier	dst_ar		1676059	0					
ANR	1676371	Identifier	sugg_dst_ar		1676059	1					
ANR	1676372	IfStatement	if ( op >= SLJIT_ADD )		1676059	13					
ANR	1676373	Condition	op >= SLJIT_ADD	2180:5:65491:65505	1676059	0	True				
ANR	1676374	RelationalExpression	op >= SLJIT_ADD		1676059	0		>=			
ANR	1676375	Identifier	op		1676059	0					
ANR	1676376	Identifier	SLJIT_ADD		1676059	1					
ANR	1676377	CompoundStatement		76:22:1773:1773	1676059	1					
ANR	1676378	IfStatement	if ( TMP_REG2_mapped != dst_ar )		1676059	0					
ANR	1676379	Condition	TMP_REG2_mapped != dst_ar	2181:6:65516:65540	1676059	0	True				
ANR	1676380	EqualityExpression	TMP_REG2_mapped != dst_ar		1676059	0		!=			
ANR	1676381	Identifier	TMP_REG2_mapped		1676059	0					
ANR	1676382	Identifier	dst_ar		1676059	1					
ANR	1676383	ExpressionStatement	"FAIL_IF ( ADD ( TMP_REG2_mapped , dst_ar , ZERO ) )"	2182:3:65546:65589	1676059	1	True				
ANR	1676384	CallExpression	"FAIL_IF ( ADD ( TMP_REG2_mapped , dst_ar , ZERO ) )"		1676059	0					
ANR	1676385	Callee	FAIL_IF		1676059	0					
ANR	1676386	Identifier	FAIL_IF		1676059	0					
ANR	1676387	ArgumentList	"ADD ( TMP_REG2_mapped , dst_ar , ZERO )"		1676059	1					
ANR	1676388	Argument	"ADD ( TMP_REG2_mapped , dst_ar , ZERO )"		1676059	0					
ANR	1676389	CallExpression	"ADD ( TMP_REG2_mapped , dst_ar , ZERO )"		1676059	0					
ANR	1676390	Callee	ADD		1676059	0					
ANR	1676391	Identifier	ADD		1676059	0					
ANR	1676392	ArgumentList	TMP_REG2_mapped		1676059	1					
ANR	1676393	Argument	TMP_REG2_mapped		1676059	0					
ANR	1676394	Identifier	TMP_REG2_mapped		1676059	0					
ANR	1676395	Argument	dst_ar		1676059	1					
ANR	1676396	Identifier	dst_ar		1676059	0					
ANR	1676397	Argument	ZERO		1676059	2					
ANR	1676398	Identifier	ZERO		1676059	0					
ANR	1676399	ReturnStatement	"return emit_op ( compiler , op | flags , CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 ) ;"	2183:2:65593:65718	1676059	1	True				
ANR	1676400	CallExpression	"emit_op ( compiler , op | flags , CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE , dst , dstw , src , srcw , TMP_REG2 , 0 )"		1676059	0					
ANR	1676401	Callee	emit_op		1676059	0					
ANR	1676402	Identifier	emit_op		1676059	0					
ANR	1676403	ArgumentList	compiler		1676059	1					
ANR	1676404	Argument	compiler		1676059	0					
ANR	1676405	Identifier	compiler		1676059	0					
ANR	1676406	Argument	op | flags		1676059	1					
ANR	1676407	InclusiveOrExpression	op | flags		1676059	0		|			
ANR	1676408	Identifier	op		1676059	0					
ANR	1676409	Identifier	flags		1676059	1					
ANR	1676410	Argument	CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1676059	2					
ANR	1676411	InclusiveOrExpression	CUMULATIVE_OP | LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1676059	0		|			
ANR	1676412	Identifier	CUMULATIVE_OP		1676059	0					
ANR	1676413	InclusiveOrExpression	LOGICAL_OP | IMM_OP | ALT_KEEP_CACHE		1676059	1		|			
ANR	1676414	Identifier	LOGICAL_OP		1676059	0					
ANR	1676415	InclusiveOrExpression	IMM_OP | ALT_KEEP_CACHE		1676059	1		|			
ANR	1676416	Identifier	IMM_OP		1676059	0					
ANR	1676417	Identifier	ALT_KEEP_CACHE		1676059	1					
ANR	1676418	Argument	dst		1676059	3					
ANR	1676419	Identifier	dst		1676059	0					
ANR	1676420	Argument	dstw		1676059	4					
ANR	1676421	Identifier	dstw		1676059	0					
ANR	1676422	Argument	src		1676059	5					
ANR	1676423	Identifier	src		1676059	0					
ANR	1676424	Argument	srcw		1676059	6					
ANR	1676425	Identifier	srcw		1676059	0					
ANR	1676426	Argument	TMP_REG2		1676059	7					
ANR	1676427	Identifier	TMP_REG2		1676059	0					
ANR	1676428	Argument	0		1676059	8					
ANR	1676429	PrimaryExpression	0		1676059	0					
ANR	1676430	IfStatement	if ( dst & SLJIT_MEM )		1676059	14					
ANR	1676431	Condition	dst & SLJIT_MEM	2186:5:65729:65743	1676059	0	True				
ANR	1676432	BitAndExpression	dst & SLJIT_MEM		1676059	0		&			
ANR	1676433	Identifier	dst		1676059	0					
ANR	1676434	Identifier	SLJIT_MEM		1676059	1					
ANR	1676435	ReturnStatement	"return emit_op_mem ( compiler , WORD_DATA , dst_ar , dst , dstw ) ;"	2187:2:65748:65806	1676059	1	True				
ANR	1676436	CallExpression	"emit_op_mem ( compiler , WORD_DATA , dst_ar , dst , dstw )"		1676059	0					
ANR	1676437	Callee	emit_op_mem		1676059	0					
ANR	1676438	Identifier	emit_op_mem		1676059	0					
ANR	1676439	ArgumentList	compiler		1676059	1					
ANR	1676440	Argument	compiler		1676059	0					
ANR	1676441	Identifier	compiler		1676059	0					
ANR	1676442	Argument	WORD_DATA		1676059	1					
ANR	1676443	Identifier	WORD_DATA		1676059	0					
ANR	1676444	Argument	dst_ar		1676059	2					
ANR	1676445	Identifier	dst_ar		1676059	0					
ANR	1676446	Argument	dst		1676059	3					
ANR	1676447	Identifier	dst		1676059	0					
ANR	1676448	Argument	dstw		1676059	4					
ANR	1676449	Identifier	dstw		1676059	0					
ANR	1676450	IfStatement	if ( sugg_dst_ar != dst_ar )		1676059	15					
ANR	1676451	Condition	sugg_dst_ar != dst_ar	2189:5:65814:65834	1676059	0	True				
ANR	1676452	EqualityExpression	sugg_dst_ar != dst_ar		1676059	0		!=			
ANR	1676453	Identifier	sugg_dst_ar		1676059	0					
ANR	1676454	Identifier	dst_ar		1676059	1					
ANR	1676455	ReturnStatement	"return ADD ( sugg_dst_ar , dst_ar , ZERO ) ;"	2190:2:65839:65876	1676059	1	True				
ANR	1676456	CallExpression	"ADD ( sugg_dst_ar , dst_ar , ZERO )"		1676059	0					
ANR	1676457	Callee	ADD		1676059	0					
ANR	1676458	Identifier	ADD		1676059	0					
ANR	1676459	ArgumentList	sugg_dst_ar		1676059	1					
ANR	1676460	Argument	sugg_dst_ar		1676059	0					
ANR	1676461	Identifier	sugg_dst_ar		1676059	0					
ANR	1676462	Argument	dst_ar		1676059	1					
ANR	1676463	Identifier	dst_ar		1676059	0					
ANR	1676464	Argument	ZERO		1676059	2					
ANR	1676465	Identifier	ZERO		1676059	0					
ANR	1676466	ReturnStatement	return SLJIT_SUCCESS ;	2192:1:65880:65900	1676059	16	True				
ANR	1676467	Identifier	SLJIT_SUCCESS		1676059	0					
ANR	1676468	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1676059	1					
ANR	1676469	Identifier	sljit_emit_op_flags		1676059	2					
ANR	1676470	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1676059	3					
ANR	1676471	Parameter	struct sljit_compiler * compiler	2104:54:63615:63645	1676059	0	True				
ANR	1676472	ParameterType	struct sljit_compiler *		1676059	0					
ANR	1676473	Identifier	compiler		1676059	1					
ANR	1676474	Parameter	sljit_si op	2104:87:63648:63658	1676059	1	True				
ANR	1676475	ParameterType	sljit_si		1676059	0					
ANR	1676476	Identifier	op		1676059	1					
ANR	1676477	Parameter	sljit_si dst	2104:100:63661:63672	1676059	2	True				
ANR	1676478	ParameterType	sljit_si		1676059	0					
ANR	1676479	Identifier	dst		1676059	1					
ANR	1676480	Parameter	sljit_sw dstw	2104:114:63675:63687	1676059	3	True				
ANR	1676481	ParameterType	sljit_sw		1676059	0					
ANR	1676482	Identifier	dstw		1676059	1					
ANR	1676483	Parameter	sljit_si src	2104:129:63690:63701	1676059	4	True				
ANR	1676484	ParameterType	sljit_si		1676059	0					
ANR	1676485	Identifier	src		1676059	1					
ANR	1676486	Parameter	sljit_sw srcw	2104:143:63704:63716	1676059	5	True				
ANR	1676487	ParameterType	sljit_sw		1676059	0					
ANR	1676488	Identifier	srcw		1676059	1					
ANR	1676489	Parameter	sljit_si type	2104:158:63719:63731	1676059	6	True				
ANR	1676490	ParameterType	sljit_si		1676059	0					
ANR	1676491	Identifier	type		1676059	1					
ANR	1676492	CFGEntryNode	ENTRY		1676059		True				
ANR	1676493	CFGExitNode	EXIT		1676059		True				
ANR	1676494	Symbol	EQUAL_FLAG		1676059						
ANR	1676495	Symbol	TMP_REG2		1676059						
ANR	1676496	Symbol	ADD		1676059						
ANR	1676497	Symbol	ZERO		1676059						
ANR	1676498	Symbol	TMP_REG1_mapped		1676059						
ANR	1676499	Symbol	TMP_REG1		1676059						
ANR	1676500	Symbol	* op		1676059						
ANR	1676501	Symbol	sugg_dst_ar		1676059						
ANR	1676502	Symbol	SLJIT_MEM		1676059						
ANR	1676503	Symbol	reg_map		1676059						
ANR	1676504	Symbol	* compiler		1676059						
ANR	1676505	Symbol	type		1676059						
ANR	1676506	Symbol	GET_OPCODE		1676059						
ANR	1676507	Symbol	* dst		1676059						
ANR	1676508	Symbol	* FAST_IS_REG		1676059						
ANR	1676509	Symbol	ULESS_FLAG		1676059						
ANR	1676510	Symbol	TMP_REG2_mapped		1676059						
ANR	1676511	Symbol	* TMP_REG2		1676059						
ANR	1676512	Symbol	emit_op		1676059						
ANR	1676513	Symbol	FAST_IS_REG		1676059						
ANR	1676514	Symbol	srcw		1676059						
ANR	1676515	Symbol	compiler -> cache_arg		1676059						
ANR	1676516	Symbol	emit_op_mem2		1676059						
ANR	1676517	Symbol	emit_op_mem		1676059						
ANR	1676518	Symbol	* reg_map		1676059						
ANR	1676519	Symbol	OVERFLOW_FLAG		1676059						
ANR	1676520	Symbol	compiler -> cache_argw		1676059						
ANR	1676521	Symbol	dst		1676059						
ANR	1676522	Symbol	dst_ar		1676059						
ANR	1676523	Symbol	LOAD_DATA		1676059						
ANR	1676524	Symbol	IMM_OP		1676059						
ANR	1676525	Symbol	XORI		1676059						
ANR	1676526	Symbol	CUMULATIVE_OP		1676059						
ANR	1676527	Symbol	flags		1676059						
ANR	1676528	Symbol	SLJIT_ADD		1676059						
ANR	1676529	Symbol	GET_ALL_FLAGS		1676059						
ANR	1676530	Symbol	GREATER_FLAG		1676059						
ANR	1676531	Symbol	compiler		1676059						
ANR	1676532	Symbol	WORD_DATA		1676059						
ANR	1676533	Symbol	op		1676059						
ANR	1676534	Symbol	src		1676059						
ANR	1676535	Symbol	LOGICAL_OP		1676059						
ANR	1676536	Symbol	SLJIT_SUCCESS		1676059						
ANR	1676537	Symbol	UGREATER_FLAG		1676059						
ANR	1676538	Symbol	* SLJIT_ADD		1676059						
ANR	1676539	Symbol	CMPLTUI		1676059						
ANR	1676540	Symbol	SLJIT_UNUSED		1676059						
ANR	1676541	Symbol	LESS_FLAG		1676059						
ANR	1676542	Symbol	dstw		1676059						
ANR	1676543	Symbol	ALT_KEEP_CACHE		1676059						
ANR	1676544	Function	sljit_emit_op0	2195:0:65905:66337							
ANR	1676545	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1676544	0					
ANR	1676546	CompoundStatement		2195:95:66000:66337	1676544	0					
ANR	1676547	ExpressionStatement	CHECK_ERROR ( )	2196:1:66003:66016	1676544	0	True				
ANR	1676548	CallExpression	CHECK_ERROR ( )		1676544	0					
ANR	1676549	Callee	CHECK_ERROR		1676544	0					
ANR	1676550	Identifier	CHECK_ERROR		1676544	0					
ANR	1676551	ArgumentList			1676544	1					
ANR	1676552	ExpressionStatement	"check_sljit_emit_op0 ( compiler , op )"	2197:1:66019:66053	1676544	1	True				
ANR	1676553	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1676544	0					
ANR	1676554	Callee	check_sljit_emit_op0		1676544	0					
ANR	1676555	Identifier	check_sljit_emit_op0		1676544	0					
ANR	1676556	ArgumentList	compiler		1676544	1					
ANR	1676557	Argument	compiler		1676544	0					
ANR	1676558	Identifier	compiler		1676544	0					
ANR	1676559	Argument	op		1676544	1					
ANR	1676560	Identifier	op		1676544	0					
ANR	1676561	ExpressionStatement	op = GET_OPCODE ( op )	2199:1:66057:66076	1676544	2	True				
ANR	1676562	AssignmentExpression	op = GET_OPCODE ( op )		1676544	0		=			
ANR	1676563	Identifier	op		1676544	0					
ANR	1676564	CallExpression	GET_OPCODE ( op )		1676544	1					
ANR	1676565	Callee	GET_OPCODE		1676544	0					
ANR	1676566	Identifier	GET_OPCODE		1676544	0					
ANR	1676567	ArgumentList	op		1676544	1					
ANR	1676568	Argument	op		1676544	0					
ANR	1676569	Identifier	op		1676544	0					
ANR	1676570	SwitchStatement	switch ( op )		1676544	3					
ANR	1676571	Condition	op	2200:9:66087:66088	1676544	0	True				
ANR	1676572	Identifier	op		1676544	0					
ANR	1676573	CompoundStatement		6:13:90:90	1676544	1					
ANR	1676574	Label	case SLJIT_NOP :	2201:1:66094:66108	1676544	0	True				
ANR	1676575	Identifier	SLJIT_NOP		1676544	0					
ANR	1676576	ReturnStatement	"return push_0_buffer ( compiler , TILEGX_OPC_FNOP , __LINE__ ) ;"	2202:2:66112:66169	1676544	1	True				
ANR	1676577	CallExpression	"push_0_buffer ( compiler , TILEGX_OPC_FNOP , __LINE__ )"		1676544	0					
ANR	1676578	Callee	push_0_buffer		1676544	0					
ANR	1676579	Identifier	push_0_buffer		1676544	0					
ANR	1676580	ArgumentList	compiler		1676544	1					
ANR	1676581	Argument	compiler		1676544	0					
ANR	1676582	Identifier	compiler		1676544	0					
ANR	1676583	Argument	TILEGX_OPC_FNOP		1676544	1					
ANR	1676584	Identifier	TILEGX_OPC_FNOP		1676544	0					
ANR	1676585	Argument	__LINE__		1676544	2					
ANR	1676586	Identifier	__LINE__		1676544	0					
ANR	1676587	Label	case SLJIT_BREAKPOINT :	2204:1:66173:66194	1676544	2	True				
ANR	1676588	Identifier	SLJIT_BREAKPOINT		1676544	0					
ANR	1676589	ReturnStatement	return PI ( BPT ) ;	2205:2:66198:66212	1676544	3	True				
ANR	1676590	CallExpression	PI ( BPT )		1676544	0					
ANR	1676591	Callee	PI		1676544	0					
ANR	1676592	Identifier	PI		1676544	0					
ANR	1676593	ArgumentList	BPT		1676544	1					
ANR	1676594	Argument	BPT		1676544	0					
ANR	1676595	Identifier	BPT		1676544	0					
ANR	1676596	Label	case SLJIT_UMUL :	2207:1:66216:66231	1676544	4	True				
ANR	1676597	Identifier	SLJIT_UMUL		1676544	0					
ANR	1676598	Label	case SLJIT_SMUL :	2208:1:66234:66249	1676544	5	True				
ANR	1676599	Identifier	SLJIT_SMUL		1676544	0					
ANR	1676600	Label	case SLJIT_UDIV :	2209:1:66252:66267	1676544	6	True				
ANR	1676601	Identifier	SLJIT_UDIV		1676544	0					
ANR	1676602	Label	case SLJIT_SDIV :	2210:1:66270:66285	1676544	7	True				
ANR	1676603	Identifier	SLJIT_SDIV		1676544	0					
ANR	1676604	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2211:2:66289:66308	1676544	8	True				
ANR	1676605	CallExpression	SLJIT_ASSERT_STOP ( )		1676544	0					
ANR	1676606	Callee	SLJIT_ASSERT_STOP		1676544	0					
ANR	1676607	Identifier	SLJIT_ASSERT_STOP		1676544	0					
ANR	1676608	ArgumentList			1676544	1					
ANR	1676609	ReturnStatement	return SLJIT_SUCCESS ;	2214:1:66315:66335	1676544	4	True				
ANR	1676610	Identifier	SLJIT_SUCCESS		1676544	0					
ANR	1676611	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1676544	1					
ANR	1676612	Identifier	sljit_emit_op0		1676544	2					
ANR	1676613	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1676544	3					
ANR	1676614	Parameter	struct sljit_compiler * compiler	2195:49:65954:65984	1676544	0	True				
ANR	1676615	ParameterType	struct sljit_compiler *		1676544	0					
ANR	1676616	Identifier	compiler		1676544	1					
ANR	1676617	Parameter	sljit_si op	2195:82:65987:65997	1676544	1	True				
ANR	1676618	ParameterType	sljit_si		1676544	0					
ANR	1676619	Identifier	op		1676544	1					
ANR	1676620	CFGEntryNode	ENTRY		1676544		True				
ANR	1676621	CFGExitNode	EXIT		1676544		True				
ANR	1676622	Symbol	TILEGX_OPC_FNOP		1676544						
ANR	1676623	Symbol	op		1676544						
ANR	1676624	Symbol	BPT		1676544						
ANR	1676625	Symbol	PI		1676544						
ANR	1676626	Symbol	push_0_buffer		1676544						
ANR	1676627	Symbol	SLJIT_SUCCESS		1676544						
ANR	1676628	Symbol	compiler		1676544						
ANR	1676629	Symbol	__LINE__		1676544						
ANR	1676630	Symbol	GET_OPCODE		1676544						
ANR	1676631	Function	sljit_emit_op1	2217:0:66340:69022							
ANR	1676632	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1676631	0					
ANR	1676633	CompoundStatement		2218:0:66493:69022	1676631	0					
ANR	1676634	ExpressionStatement	CHECK_ERROR ( )	2219:1:66496:66509	1676631	0	True				
ANR	1676635	CallExpression	CHECK_ERROR ( )		1676631	0					
ANR	1676636	Callee	CHECK_ERROR		1676631	0					
ANR	1676637	Identifier	CHECK_ERROR		1676631	0					
ANR	1676638	ArgumentList			1676631	1					
ANR	1676639	ExpressionStatement	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"	2220:1:66512:66568	1676631	1	True				
ANR	1676640	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1676631	0					
ANR	1676641	Callee	check_sljit_emit_op1		1676631	0					
ANR	1676642	Identifier	check_sljit_emit_op1		1676631	0					
ANR	1676643	ArgumentList	compiler		1676631	1					
ANR	1676644	Argument	compiler		1676631	0					
ANR	1676645	Identifier	compiler		1676631	0					
ANR	1676646	Argument	op		1676631	1					
ANR	1676647	Identifier	op		1676631	0					
ANR	1676648	Argument	dst		1676631	2					
ANR	1676649	Identifier	dst		1676631	0					
ANR	1676650	Argument	dstw		1676631	3					
ANR	1676651	Identifier	dstw		1676631	0					
ANR	1676652	Argument	src		1676631	4					
ANR	1676653	Identifier	src		1676631	0					
ANR	1676654	Argument	srcw		1676631	5					
ANR	1676655	Identifier	srcw		1676631	0					
ANR	1676656	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2221:1:66571:66601	1676631	2	True				
ANR	1676657	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1676631	0					
ANR	1676658	Callee	ADJUST_LOCAL_OFFSET		1676631	0					
ANR	1676659	Identifier	ADJUST_LOCAL_OFFSET		1676631	0					
ANR	1676660	ArgumentList	dst		1676631	1					
ANR	1676661	Argument	dst		1676631	0					
ANR	1676662	Identifier	dst		1676631	0					
ANR	1676663	Argument	dstw		1676631	1					
ANR	1676664	Identifier	dstw		1676631	0					
ANR	1676665	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2222:1:66604:66634	1676631	3	True				
ANR	1676666	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1676631	0					
ANR	1676667	Callee	ADJUST_LOCAL_OFFSET		1676631	0					
ANR	1676668	Identifier	ADJUST_LOCAL_OFFSET		1676631	0					
ANR	1676669	ArgumentList	src		1676631	1					
ANR	1676670	Argument	src		1676631	0					
ANR	1676671	Identifier	src		1676631	0					
ANR	1676672	Argument	srcw		1676631	1					
ANR	1676673	Identifier	srcw		1676631	0					
ANR	1676674	SwitchStatement	switch ( GET_OPCODE ( op ) )		1676631	4					
ANR	1676675	Condition	GET_OPCODE ( op )	2224:9:66646:66659	1676631	0	True				
ANR	1676676	CallExpression	GET_OPCODE ( op )		1676631	0					
ANR	1676677	Callee	GET_OPCODE		1676631	0					
ANR	1676678	Identifier	GET_OPCODE		1676631	0					
ANR	1676679	ArgumentList	op		1676631	1					
ANR	1676680	Argument	op		1676631	0					
ANR	1676681	Identifier	op		1676631	0					
ANR	1676682	CompoundStatement		7:25:168:168	1676631	1					
ANR	1676683	Label	case SLJIT_MOV :	2225:1:66665:66679	1676631	0	True				
ANR	1676684	Identifier	SLJIT_MOV		1676631	0					
ANR	1676685	Label	case SLJIT_MOV_P :	2226:1:66682:66698	1676631	1	True				
ANR	1676686	Identifier	SLJIT_MOV_P		1676631	0					
ANR	1676687	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2227:2:66702:66783	1676631	2	True				
ANR	1676688	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1676689	Callee	emit_op		1676631	0					
ANR	1676690	Identifier	emit_op		1676631	0					
ANR	1676691	ArgumentList	compiler		1676631	1					
ANR	1676692	Argument	compiler		1676631	0					
ANR	1676693	Identifier	compiler		1676631	0					
ANR	1676694	Argument	SLJIT_MOV		1676631	1					
ANR	1676695	Identifier	SLJIT_MOV		1676631	0					
ANR	1676696	Argument	WORD_DATA		1676631	2					
ANR	1676697	Identifier	WORD_DATA		1676631	0					
ANR	1676698	Argument	dst		1676631	3					
ANR	1676699	Identifier	dst		1676631	0					
ANR	1676700	Argument	dstw		1676631	4					
ANR	1676701	Identifier	dstw		1676631	0					
ANR	1676702	Argument	TMP_REG1		1676631	5					
ANR	1676703	Identifier	TMP_REG1		1676631	0					
ANR	1676704	Argument	0		1676631	6					
ANR	1676705	PrimaryExpression	0		1676631	0					
ANR	1676706	Argument	src		1676631	7					
ANR	1676707	Identifier	src		1676631	0					
ANR	1676708	Argument	srcw		1676631	8					
ANR	1676709	Identifier	srcw		1676631	0					
ANR	1676710	Label	case SLJIT_MOV_UI :	2229:1:66787:66804	1676631	3	True				
ANR	1676711	Identifier	SLJIT_MOV_UI		1676631	0					
ANR	1676712	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2230:2:66808:66891	1676631	4	True				
ANR	1676713	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , INT_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1676714	Callee	emit_op		1676631	0					
ANR	1676715	Identifier	emit_op		1676631	0					
ANR	1676716	ArgumentList	compiler		1676631	1					
ANR	1676717	Argument	compiler		1676631	0					
ANR	1676718	Identifier	compiler		1676631	0					
ANR	1676719	Argument	SLJIT_MOV_UI		1676631	1					
ANR	1676720	Identifier	SLJIT_MOV_UI		1676631	0					
ANR	1676721	Argument	INT_DATA		1676631	2					
ANR	1676722	Identifier	INT_DATA		1676631	0					
ANR	1676723	Argument	dst		1676631	3					
ANR	1676724	Identifier	dst		1676631	0					
ANR	1676725	Argument	dstw		1676631	4					
ANR	1676726	Identifier	dstw		1676631	0					
ANR	1676727	Argument	TMP_REG1		1676631	5					
ANR	1676728	Identifier	TMP_REG1		1676631	0					
ANR	1676729	Argument	0		1676631	6					
ANR	1676730	PrimaryExpression	0		1676631	0					
ANR	1676731	Argument	src		1676631	7					
ANR	1676732	Identifier	src		1676631	0					
ANR	1676733	Argument	srcw		1676631	8					
ANR	1676734	Identifier	srcw		1676631	0					
ANR	1676735	Label	case SLJIT_MOV_SI :	2232:1:66895:66912	1676631	5	True				
ANR	1676736	Identifier	SLJIT_MOV_SI		1676631	0					
ANR	1676737	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2233:2:66916:67013	1676631	6	True				
ANR	1676738	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1676739	Callee	emit_op		1676631	0					
ANR	1676740	Identifier	emit_op		1676631	0					
ANR	1676741	ArgumentList	compiler		1676631	1					
ANR	1676742	Argument	compiler		1676631	0					
ANR	1676743	Identifier	compiler		1676631	0					
ANR	1676744	Argument	SLJIT_MOV_SI		1676631	1					
ANR	1676745	Identifier	SLJIT_MOV_SI		1676631	0					
ANR	1676746	Argument	INT_DATA | SIGNED_DATA		1676631	2					
ANR	1676747	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1676631	0		|			
ANR	1676748	Identifier	INT_DATA		1676631	0					
ANR	1676749	Identifier	SIGNED_DATA		1676631	1					
ANR	1676750	Argument	dst		1676631	3					
ANR	1676751	Identifier	dst		1676631	0					
ANR	1676752	Argument	dstw		1676631	4					
ANR	1676753	Identifier	dstw		1676631	0					
ANR	1676754	Argument	TMP_REG1		1676631	5					
ANR	1676755	Identifier	TMP_REG1		1676631	0					
ANR	1676756	Argument	0		1676631	6					
ANR	1676757	PrimaryExpression	0		1676631	0					
ANR	1676758	Argument	src		1676631	7					
ANR	1676759	Identifier	src		1676631	0					
ANR	1676760	Argument	srcw		1676631	8					
ANR	1676761	Identifier	srcw		1676631	0					
ANR	1676762	Label	case SLJIT_MOV_UB :	2235:1:67017:67034	1676631	7	True				
ANR	1676763	Identifier	SLJIT_MOV_UB		1676631	0					
ANR	1676764	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	2236:2:67038:67160	1676631	8	True				
ANR	1676765	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1676631	0					
ANR	1676766	Callee	emit_op		1676631	0					
ANR	1676767	Identifier	emit_op		1676631	0					
ANR	1676768	ArgumentList	compiler		1676631	1					
ANR	1676769	Argument	compiler		1676631	0					
ANR	1676770	Identifier	compiler		1676631	0					
ANR	1676771	Argument	SLJIT_MOV_UB		1676631	1					
ANR	1676772	Identifier	SLJIT_MOV_UB		1676631	0					
ANR	1676773	Argument	BYTE_DATA		1676631	2					
ANR	1676774	Identifier	BYTE_DATA		1676631	0					
ANR	1676775	Argument	dst		1676631	3					
ANR	1676776	Identifier	dst		1676631	0					
ANR	1676777	Argument	dstw		1676631	4					
ANR	1676778	Identifier	dstw		1676631	0					
ANR	1676779	Argument	TMP_REG1		1676631	5					
ANR	1676780	Identifier	TMP_REG1		1676631	0					
ANR	1676781	Argument	0		1676631	6					
ANR	1676782	PrimaryExpression	0		1676631	0					
ANR	1676783	Argument	src		1676631	7					
ANR	1676784	Identifier	src		1676631	0					
ANR	1676785	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1676631	8					
ANR	1676786	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1676631	0					
ANR	1676787	Condition	src & SLJIT_IMM		1676631	0					
ANR	1676788	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1676789	Identifier	src		1676631	0					
ANR	1676790	Identifier	SLJIT_IMM		1676631	1					
ANR	1676791	CastExpression	( sljit_ub ) srcw		1676631	1					
ANR	1676792	CastTarget	sljit_ub		1676631	0					
ANR	1676793	Identifier	srcw		1676631	1					
ANR	1676794	Identifier	srcw		1676631	2					
ANR	1676795	Label	case SLJIT_MOV_SB :	2238:1:67164:67181	1676631	9	True				
ANR	1676796	Identifier	SLJIT_MOV_SB		1676631	0					
ANR	1676797	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	2239:2:67185:67321	1676631	10	True				
ANR	1676798	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1676631	0					
ANR	1676799	Callee	emit_op		1676631	0					
ANR	1676800	Identifier	emit_op		1676631	0					
ANR	1676801	ArgumentList	compiler		1676631	1					
ANR	1676802	Argument	compiler		1676631	0					
ANR	1676803	Identifier	compiler		1676631	0					
ANR	1676804	Argument	SLJIT_MOV_SB		1676631	1					
ANR	1676805	Identifier	SLJIT_MOV_SB		1676631	0					
ANR	1676806	Argument	BYTE_DATA | SIGNED_DATA		1676631	2					
ANR	1676807	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA		1676631	0		|			
ANR	1676808	Identifier	BYTE_DATA		1676631	0					
ANR	1676809	Identifier	SIGNED_DATA		1676631	1					
ANR	1676810	Argument	dst		1676631	3					
ANR	1676811	Identifier	dst		1676631	0					
ANR	1676812	Argument	dstw		1676631	4					
ANR	1676813	Identifier	dstw		1676631	0					
ANR	1676814	Argument	TMP_REG1		1676631	5					
ANR	1676815	Identifier	TMP_REG1		1676631	0					
ANR	1676816	Argument	0		1676631	6					
ANR	1676817	PrimaryExpression	0		1676631	0					
ANR	1676818	Argument	src		1676631	7					
ANR	1676819	Identifier	src		1676631	0					
ANR	1676820	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1676631	8					
ANR	1676821	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1676631	0					
ANR	1676822	Condition	src & SLJIT_IMM		1676631	0					
ANR	1676823	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1676824	Identifier	src		1676631	0					
ANR	1676825	Identifier	SLJIT_IMM		1676631	1					
ANR	1676826	CastExpression	( sljit_sb ) srcw		1676631	1					
ANR	1676827	CastTarget	sljit_sb		1676631	0					
ANR	1676828	Identifier	srcw		1676631	1					
ANR	1676829	Identifier	srcw		1676631	2					
ANR	1676830	Label	case SLJIT_MOV_UH :	2241:1:67325:67342	1676631	11	True				
ANR	1676831	Identifier	SLJIT_MOV_UH		1676631	0					
ANR	1676832	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	2242:2:67346:67468	1676631	12	True				
ANR	1676833	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1676631	0					
ANR	1676834	Callee	emit_op		1676631	0					
ANR	1676835	Identifier	emit_op		1676631	0					
ANR	1676836	ArgumentList	compiler		1676631	1					
ANR	1676837	Argument	compiler		1676631	0					
ANR	1676838	Identifier	compiler		1676631	0					
ANR	1676839	Argument	SLJIT_MOV_UH		1676631	1					
ANR	1676840	Identifier	SLJIT_MOV_UH		1676631	0					
ANR	1676841	Argument	HALF_DATA		1676631	2					
ANR	1676842	Identifier	HALF_DATA		1676631	0					
ANR	1676843	Argument	dst		1676631	3					
ANR	1676844	Identifier	dst		1676631	0					
ANR	1676845	Argument	dstw		1676631	4					
ANR	1676846	Identifier	dstw		1676631	0					
ANR	1676847	Argument	TMP_REG1		1676631	5					
ANR	1676848	Identifier	TMP_REG1		1676631	0					
ANR	1676849	Argument	0		1676631	6					
ANR	1676850	PrimaryExpression	0		1676631	0					
ANR	1676851	Argument	src		1676631	7					
ANR	1676852	Identifier	src		1676631	0					
ANR	1676853	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1676631	8					
ANR	1676854	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1676631	0					
ANR	1676855	Condition	src & SLJIT_IMM		1676631	0					
ANR	1676856	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1676857	Identifier	src		1676631	0					
ANR	1676858	Identifier	SLJIT_IMM		1676631	1					
ANR	1676859	CastExpression	( sljit_uh ) srcw		1676631	1					
ANR	1676860	CastTarget	sljit_uh		1676631	0					
ANR	1676861	Identifier	srcw		1676631	1					
ANR	1676862	Identifier	srcw		1676631	2					
ANR	1676863	Label	case SLJIT_MOV_SH :	2244:1:67472:67489	1676631	13	True				
ANR	1676864	Identifier	SLJIT_MOV_SH		1676631	0					
ANR	1676865	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	2245:2:67493:67629	1676631	14	True				
ANR	1676866	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1676631	0					
ANR	1676867	Callee	emit_op		1676631	0					
ANR	1676868	Identifier	emit_op		1676631	0					
ANR	1676869	ArgumentList	compiler		1676631	1					
ANR	1676870	Argument	compiler		1676631	0					
ANR	1676871	Identifier	compiler		1676631	0					
ANR	1676872	Argument	SLJIT_MOV_SH		1676631	1					
ANR	1676873	Identifier	SLJIT_MOV_SH		1676631	0					
ANR	1676874	Argument	HALF_DATA | SIGNED_DATA		1676631	2					
ANR	1676875	InclusiveOrExpression	HALF_DATA | SIGNED_DATA		1676631	0		|			
ANR	1676876	Identifier	HALF_DATA		1676631	0					
ANR	1676877	Identifier	SIGNED_DATA		1676631	1					
ANR	1676878	Argument	dst		1676631	3					
ANR	1676879	Identifier	dst		1676631	0					
ANR	1676880	Argument	dstw		1676631	4					
ANR	1676881	Identifier	dstw		1676631	0					
ANR	1676882	Argument	TMP_REG1		1676631	5					
ANR	1676883	Identifier	TMP_REG1		1676631	0					
ANR	1676884	Argument	0		1676631	6					
ANR	1676885	PrimaryExpression	0		1676631	0					
ANR	1676886	Argument	src		1676631	7					
ANR	1676887	Identifier	src		1676631	0					
ANR	1676888	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1676631	8					
ANR	1676889	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1676631	0					
ANR	1676890	Condition	src & SLJIT_IMM		1676631	0					
ANR	1676891	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1676892	Identifier	src		1676631	0					
ANR	1676893	Identifier	SLJIT_IMM		1676631	1					
ANR	1676894	CastExpression	( sljit_sh ) srcw		1676631	1					
ANR	1676895	CastTarget	sljit_sh		1676631	0					
ANR	1676896	Identifier	srcw		1676631	1					
ANR	1676897	Identifier	srcw		1676631	2					
ANR	1676898	Label	case SLJIT_MOVU :	2247:1:67633:67648	1676631	15	True				
ANR	1676899	Identifier	SLJIT_MOVU		1676631	0					
ANR	1676900	Label	case SLJIT_MOVU_P :	2248:1:67651:67668	1676631	16	True				
ANR	1676901	Identifier	SLJIT_MOVU_P		1676631	0					
ANR	1676902	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2249:2:67672:67766	1676631	17	True				
ANR	1676903	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1676904	Callee	emit_op		1676631	0					
ANR	1676905	Identifier	emit_op		1676631	0					
ANR	1676906	ArgumentList	compiler		1676631	1					
ANR	1676907	Argument	compiler		1676631	0					
ANR	1676908	Identifier	compiler		1676631	0					
ANR	1676909	Argument	SLJIT_MOV		1676631	1					
ANR	1676910	Identifier	SLJIT_MOV		1676631	0					
ANR	1676911	Argument	WORD_DATA | WRITE_BACK		1676631	2					
ANR	1676912	InclusiveOrExpression	WORD_DATA | WRITE_BACK		1676631	0		|			
ANR	1676913	Identifier	WORD_DATA		1676631	0					
ANR	1676914	Identifier	WRITE_BACK		1676631	1					
ANR	1676915	Argument	dst		1676631	3					
ANR	1676916	Identifier	dst		1676631	0					
ANR	1676917	Argument	dstw		1676631	4					
ANR	1676918	Identifier	dstw		1676631	0					
ANR	1676919	Argument	TMP_REG1		1676631	5					
ANR	1676920	Identifier	TMP_REG1		1676631	0					
ANR	1676921	Argument	0		1676631	6					
ANR	1676922	PrimaryExpression	0		1676631	0					
ANR	1676923	Argument	src		1676631	7					
ANR	1676924	Identifier	src		1676631	0					
ANR	1676925	Argument	srcw		1676631	8					
ANR	1676926	Identifier	srcw		1676631	0					
ANR	1676927	Label	case SLJIT_MOVU_UI :	2251:1:67770:67788	1676631	18	True				
ANR	1676928	Identifier	SLJIT_MOVU_UI		1676631	0					
ANR	1676929	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UI , INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2252:2:67792:67888	1676631	19	True				
ANR	1676930	CallExpression	"emit_op ( compiler , SLJIT_MOV_UI , INT_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1676931	Callee	emit_op		1676631	0					
ANR	1676932	Identifier	emit_op		1676631	0					
ANR	1676933	ArgumentList	compiler		1676631	1					
ANR	1676934	Argument	compiler		1676631	0					
ANR	1676935	Identifier	compiler		1676631	0					
ANR	1676936	Argument	SLJIT_MOV_UI		1676631	1					
ANR	1676937	Identifier	SLJIT_MOV_UI		1676631	0					
ANR	1676938	Argument	INT_DATA | WRITE_BACK		1676631	2					
ANR	1676939	InclusiveOrExpression	INT_DATA | WRITE_BACK		1676631	0		|			
ANR	1676940	Identifier	INT_DATA		1676631	0					
ANR	1676941	Identifier	WRITE_BACK		1676631	1					
ANR	1676942	Argument	dst		1676631	3					
ANR	1676943	Identifier	dst		1676631	0					
ANR	1676944	Argument	dstw		1676631	4					
ANR	1676945	Identifier	dstw		1676631	0					
ANR	1676946	Argument	TMP_REG1		1676631	5					
ANR	1676947	Identifier	TMP_REG1		1676631	0					
ANR	1676948	Argument	0		1676631	6					
ANR	1676949	PrimaryExpression	0		1676631	0					
ANR	1676950	Argument	src		1676631	7					
ANR	1676951	Identifier	src		1676631	0					
ANR	1676952	Argument	srcw		1676631	8					
ANR	1676953	Identifier	srcw		1676631	0					
ANR	1676954	Label	case SLJIT_MOVU_SI :	2254:1:67892:67910	1676631	20	True				
ANR	1676955	Identifier	SLJIT_MOVU_SI		1676631	0					
ANR	1676956	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2255:2:67914:68024	1676631	21	True				
ANR	1676957	CallExpression	"emit_op ( compiler , SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1676958	Callee	emit_op		1676631	0					
ANR	1676959	Identifier	emit_op		1676631	0					
ANR	1676960	ArgumentList	compiler		1676631	1					
ANR	1676961	Argument	compiler		1676631	0					
ANR	1676962	Identifier	compiler		1676631	0					
ANR	1676963	Argument	SLJIT_MOV_SI		1676631	1					
ANR	1676964	Identifier	SLJIT_MOV_SI		1676631	0					
ANR	1676965	Argument	INT_DATA | SIGNED_DATA | WRITE_BACK		1676631	2					
ANR	1676966	InclusiveOrExpression	INT_DATA | SIGNED_DATA | WRITE_BACK		1676631	0		|			
ANR	1676967	Identifier	INT_DATA		1676631	0					
ANR	1676968	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1676631	1		|			
ANR	1676969	Identifier	SIGNED_DATA		1676631	0					
ANR	1676970	Identifier	WRITE_BACK		1676631	1					
ANR	1676971	Argument	dst		1676631	3					
ANR	1676972	Identifier	dst		1676631	0					
ANR	1676973	Argument	dstw		1676631	4					
ANR	1676974	Identifier	dstw		1676631	0					
ANR	1676975	Argument	TMP_REG1		1676631	5					
ANR	1676976	Identifier	TMP_REG1		1676631	0					
ANR	1676977	Argument	0		1676631	6					
ANR	1676978	PrimaryExpression	0		1676631	0					
ANR	1676979	Argument	src		1676631	7					
ANR	1676980	Identifier	src		1676631	0					
ANR	1676981	Argument	srcw		1676631	8					
ANR	1676982	Identifier	srcw		1676631	0					
ANR	1676983	Label	case SLJIT_MOVU_UB :	2257:1:68028:68046	1676631	22	True				
ANR	1676984	Identifier	SLJIT_MOVU_UB		1676631	0					
ANR	1676985	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	2258:2:68050:68185	1676631	23	True				
ANR	1676986	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1676631	0					
ANR	1676987	Callee	emit_op		1676631	0					
ANR	1676988	Identifier	emit_op		1676631	0					
ANR	1676989	ArgumentList	compiler		1676631	1					
ANR	1676990	Argument	compiler		1676631	0					
ANR	1676991	Identifier	compiler		1676631	0					
ANR	1676992	Argument	SLJIT_MOV_UB		1676631	1					
ANR	1676993	Identifier	SLJIT_MOV_UB		1676631	0					
ANR	1676994	Argument	BYTE_DATA | WRITE_BACK		1676631	2					
ANR	1676995	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1676631	0		|			
ANR	1676996	Identifier	BYTE_DATA		1676631	0					
ANR	1676997	Identifier	WRITE_BACK		1676631	1					
ANR	1676998	Argument	dst		1676631	3					
ANR	1676999	Identifier	dst		1676631	0					
ANR	1677000	Argument	dstw		1676631	4					
ANR	1677001	Identifier	dstw		1676631	0					
ANR	1677002	Argument	TMP_REG1		1676631	5					
ANR	1677003	Identifier	TMP_REG1		1676631	0					
ANR	1677004	Argument	0		1676631	6					
ANR	1677005	PrimaryExpression	0		1676631	0					
ANR	1677006	Argument	src		1676631	7					
ANR	1677007	Identifier	src		1676631	0					
ANR	1677008	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1676631	8					
ANR	1677009	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1676631	0					
ANR	1677010	Condition	src & SLJIT_IMM		1676631	0					
ANR	1677011	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1677012	Identifier	src		1676631	0					
ANR	1677013	Identifier	SLJIT_IMM		1676631	1					
ANR	1677014	CastExpression	( sljit_ub ) srcw		1676631	1					
ANR	1677015	CastTarget	sljit_ub		1676631	0					
ANR	1677016	Identifier	srcw		1676631	1					
ANR	1677017	Identifier	srcw		1676631	2					
ANR	1677018	Label	case SLJIT_MOVU_SB :	2260:1:68189:68207	1676631	24	True				
ANR	1677019	Identifier	SLJIT_MOVU_SB		1676631	0					
ANR	1677020	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	2261:2:68211:68360	1676631	25	True				
ANR	1677021	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1676631	0					
ANR	1677022	Callee	emit_op		1676631	0					
ANR	1677023	Identifier	emit_op		1676631	0					
ANR	1677024	ArgumentList	compiler		1676631	1					
ANR	1677025	Argument	compiler		1676631	0					
ANR	1677026	Identifier	compiler		1676631	0					
ANR	1677027	Argument	SLJIT_MOV_SB		1676631	1					
ANR	1677028	Identifier	SLJIT_MOV_SB		1676631	0					
ANR	1677029	Argument	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1676631	2					
ANR	1677030	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1676631	0		|			
ANR	1677031	Identifier	BYTE_DATA		1676631	0					
ANR	1677032	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1676631	1		|			
ANR	1677033	Identifier	SIGNED_DATA		1676631	0					
ANR	1677034	Identifier	WRITE_BACK		1676631	1					
ANR	1677035	Argument	dst		1676631	3					
ANR	1677036	Identifier	dst		1676631	0					
ANR	1677037	Argument	dstw		1676631	4					
ANR	1677038	Identifier	dstw		1676631	0					
ANR	1677039	Argument	TMP_REG1		1676631	5					
ANR	1677040	Identifier	TMP_REG1		1676631	0					
ANR	1677041	Argument	0		1676631	6					
ANR	1677042	PrimaryExpression	0		1676631	0					
ANR	1677043	Argument	src		1676631	7					
ANR	1677044	Identifier	src		1676631	0					
ANR	1677045	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1676631	8					
ANR	1677046	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1676631	0					
ANR	1677047	Condition	src & SLJIT_IMM		1676631	0					
ANR	1677048	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1677049	Identifier	src		1676631	0					
ANR	1677050	Identifier	SLJIT_IMM		1676631	1					
ANR	1677051	CastExpression	( sljit_sb ) srcw		1676631	1					
ANR	1677052	CastTarget	sljit_sb		1676631	0					
ANR	1677053	Identifier	srcw		1676631	1					
ANR	1677054	Identifier	srcw		1676631	2					
ANR	1677055	Label	case SLJIT_MOVU_UH :	2263:1:68364:68382	1676631	26	True				
ANR	1677056	Identifier	SLJIT_MOVU_UH		1676631	0					
ANR	1677057	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	2264:2:68386:68521	1676631	27	True				
ANR	1677058	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1676631	0					
ANR	1677059	Callee	emit_op		1676631	0					
ANR	1677060	Identifier	emit_op		1676631	0					
ANR	1677061	ArgumentList	compiler		1676631	1					
ANR	1677062	Argument	compiler		1676631	0					
ANR	1677063	Identifier	compiler		1676631	0					
ANR	1677064	Argument	SLJIT_MOV_UH		1676631	1					
ANR	1677065	Identifier	SLJIT_MOV_UH		1676631	0					
ANR	1677066	Argument	HALF_DATA | WRITE_BACK		1676631	2					
ANR	1677067	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1676631	0		|			
ANR	1677068	Identifier	HALF_DATA		1676631	0					
ANR	1677069	Identifier	WRITE_BACK		1676631	1					
ANR	1677070	Argument	dst		1676631	3					
ANR	1677071	Identifier	dst		1676631	0					
ANR	1677072	Argument	dstw		1676631	4					
ANR	1677073	Identifier	dstw		1676631	0					
ANR	1677074	Argument	TMP_REG1		1676631	5					
ANR	1677075	Identifier	TMP_REG1		1676631	0					
ANR	1677076	Argument	0		1676631	6					
ANR	1677077	PrimaryExpression	0		1676631	0					
ANR	1677078	Argument	src		1676631	7					
ANR	1677079	Identifier	src		1676631	0					
ANR	1677080	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1676631	8					
ANR	1677081	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1676631	0					
ANR	1677082	Condition	src & SLJIT_IMM		1676631	0					
ANR	1677083	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1677084	Identifier	src		1676631	0					
ANR	1677085	Identifier	SLJIT_IMM		1676631	1					
ANR	1677086	CastExpression	( sljit_uh ) srcw		1676631	1					
ANR	1677087	CastTarget	sljit_uh		1676631	0					
ANR	1677088	Identifier	srcw		1676631	1					
ANR	1677089	Identifier	srcw		1676631	2					
ANR	1677090	Label	case SLJIT_MOVU_SH :	2266:1:68525:68543	1676631	28	True				
ANR	1677091	Identifier	SLJIT_MOVU_SH		1676631	0					
ANR	1677092	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	2267:2:68547:68696	1676631	29	True				
ANR	1677093	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1676631	0					
ANR	1677094	Callee	emit_op		1676631	0					
ANR	1677095	Identifier	emit_op		1676631	0					
ANR	1677096	ArgumentList	compiler		1676631	1					
ANR	1677097	Argument	compiler		1676631	0					
ANR	1677098	Identifier	compiler		1676631	0					
ANR	1677099	Argument	SLJIT_MOV_SH		1676631	1					
ANR	1677100	Identifier	SLJIT_MOV_SH		1676631	0					
ANR	1677101	Argument	HALF_DATA | SIGNED_DATA | WRITE_BACK		1676631	2					
ANR	1677102	InclusiveOrExpression	HALF_DATA | SIGNED_DATA | WRITE_BACK		1676631	0		|			
ANR	1677103	Identifier	HALF_DATA		1676631	0					
ANR	1677104	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1676631	1		|			
ANR	1677105	Identifier	SIGNED_DATA		1676631	0					
ANR	1677106	Identifier	WRITE_BACK		1676631	1					
ANR	1677107	Argument	dst		1676631	3					
ANR	1677108	Identifier	dst		1676631	0					
ANR	1677109	Argument	dstw		1676631	4					
ANR	1677110	Identifier	dstw		1676631	0					
ANR	1677111	Argument	TMP_REG1		1676631	5					
ANR	1677112	Identifier	TMP_REG1		1676631	0					
ANR	1677113	Argument	0		1676631	6					
ANR	1677114	PrimaryExpression	0		1676631	0					
ANR	1677115	Argument	src		1676631	7					
ANR	1677116	Identifier	src		1676631	0					
ANR	1677117	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1676631	8					
ANR	1677118	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1676631	0					
ANR	1677119	Condition	src & SLJIT_IMM		1676631	0					
ANR	1677120	BitAndExpression	src & SLJIT_IMM		1676631	0		&			
ANR	1677121	Identifier	src		1676631	0					
ANR	1677122	Identifier	SLJIT_IMM		1676631	1					
ANR	1677123	CastExpression	( sljit_sh ) srcw		1676631	1					
ANR	1677124	CastTarget	sljit_sh		1676631	0					
ANR	1677125	Identifier	srcw		1676631	1					
ANR	1677126	Identifier	srcw		1676631	2					
ANR	1677127	Label	case SLJIT_NOT :	2269:1:68700:68714	1676631	30	True				
ANR	1677128	Identifier	SLJIT_NOT		1676631	0					
ANR	1677129	ReturnStatement	"return emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2270:2:68718:68784	1676631	31	True				
ANR	1677130	CallExpression	"emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1677131	Callee	emit_op		1676631	0					
ANR	1677132	Identifier	emit_op		1676631	0					
ANR	1677133	ArgumentList	compiler		1676631	1					
ANR	1677134	Argument	compiler		1676631	0					
ANR	1677135	Identifier	compiler		1676631	0					
ANR	1677136	Argument	op		1676631	1					
ANR	1677137	Identifier	op		1676631	0					
ANR	1677138	Argument	0		1676631	2					
ANR	1677139	PrimaryExpression	0		1676631	0					
ANR	1677140	Argument	dst		1676631	3					
ANR	1677141	Identifier	dst		1676631	0					
ANR	1677142	Argument	dstw		1676631	4					
ANR	1677143	Identifier	dstw		1676631	0					
ANR	1677144	Argument	TMP_REG1		1676631	5					
ANR	1677145	Identifier	TMP_REG1		1676631	0					
ANR	1677146	Argument	0		1676631	6					
ANR	1677147	PrimaryExpression	0		1676631	0					
ANR	1677148	Argument	src		1676631	7					
ANR	1677149	Identifier	src		1676631	0					
ANR	1677150	Argument	srcw		1676631	8					
ANR	1677151	Identifier	srcw		1676631	0					
ANR	1677152	Label	case SLJIT_NEG :	2272:1:68788:68802	1676631	32	True				
ANR	1677153	Identifier	SLJIT_NEG		1676631	0					
ANR	1677154	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw ) ;"	2273:2:68806:68905	1676631	33	True				
ANR	1677155	CallExpression	"emit_op ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , IMM_OP , dst , dstw , SLJIT_IMM , 0 , src , srcw )"		1676631	0					
ANR	1677156	Callee	emit_op		1676631	0					
ANR	1677157	Identifier	emit_op		1676631	0					
ANR	1677158	ArgumentList	compiler		1676631	1					
ANR	1677159	Argument	compiler		1676631	0					
ANR	1677160	Identifier	compiler		1676631	0					
ANR	1677161	Argument	SLJIT_SUB | GET_ALL_FLAGS ( op )		1676631	1					
ANR	1677162	InclusiveOrExpression	SLJIT_SUB | GET_ALL_FLAGS ( op )		1676631	0		|			
ANR	1677163	Identifier	SLJIT_SUB		1676631	0					
ANR	1677164	CallExpression	GET_ALL_FLAGS ( op )		1676631	1					
ANR	1677165	Callee	GET_ALL_FLAGS		1676631	0					
ANR	1677166	Identifier	GET_ALL_FLAGS		1676631	0					
ANR	1677167	ArgumentList	op		1676631	1					
ANR	1677168	Argument	op		1676631	0					
ANR	1677169	Identifier	op		1676631	0					
ANR	1677170	Argument	IMM_OP		1676631	2					
ANR	1677171	Identifier	IMM_OP		1676631	0					
ANR	1677172	Argument	dst		1676631	3					
ANR	1677173	Identifier	dst		1676631	0					
ANR	1677174	Argument	dstw		1676631	4					
ANR	1677175	Identifier	dstw		1676631	0					
ANR	1677176	Argument	SLJIT_IMM		1676631	5					
ANR	1677177	Identifier	SLJIT_IMM		1676631	0					
ANR	1677178	Argument	0		1676631	6					
ANR	1677179	PrimaryExpression	0		1676631	0					
ANR	1677180	Argument	src		1676631	7					
ANR	1677181	Identifier	src		1676631	0					
ANR	1677182	Argument	srcw		1676631	8					
ANR	1677183	Identifier	srcw		1676631	0					
ANR	1677184	Label	case SLJIT_CLZ :	2275:1:68909:68923	1676631	34	True				
ANR	1677185	Identifier	SLJIT_CLZ		1676631	0					
ANR	1677186	ReturnStatement	"return emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	2276:2:68927:68993	1676631	35	True				
ANR	1677187	CallExpression	"emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1676631	0					
ANR	1677188	Callee	emit_op		1676631	0					
ANR	1677189	Identifier	emit_op		1676631	0					
ANR	1677190	ArgumentList	compiler		1676631	1					
ANR	1677191	Argument	compiler		1676631	0					
ANR	1677192	Identifier	compiler		1676631	0					
ANR	1677193	Argument	op		1676631	1					
ANR	1677194	Identifier	op		1676631	0					
ANR	1677195	Argument	0		1676631	2					
ANR	1677196	PrimaryExpression	0		1676631	0					
ANR	1677197	Argument	dst		1676631	3					
ANR	1677198	Identifier	dst		1676631	0					
ANR	1677199	Argument	dstw		1676631	4					
ANR	1677200	Identifier	dstw		1676631	0					
ANR	1677201	Argument	TMP_REG1		1676631	5					
ANR	1677202	Identifier	TMP_REG1		1676631	0					
ANR	1677203	Argument	0		1676631	6					
ANR	1677204	PrimaryExpression	0		1676631	0					
ANR	1677205	Argument	src		1676631	7					
ANR	1677206	Identifier	src		1676631	0					
ANR	1677207	Argument	srcw		1676631	8					
ANR	1677208	Identifier	srcw		1676631	0					
ANR	1677209	ReturnStatement	return SLJIT_SUCCESS ;	2279:1:69000:69020	1676631	5	True				
ANR	1677210	Identifier	SLJIT_SUCCESS		1676631	0					
ANR	1677211	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1676631	1					
ANR	1677212	Identifier	sljit_emit_op1		1676631	2					
ANR	1677213	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1676631	3					
ANR	1677214	Parameter	struct sljit_compiler * compiler	2217:49:66389:66419	1676631	0	True				
ANR	1677215	ParameterType	struct sljit_compiler *		1676631	0					
ANR	1677216	Identifier	compiler		1676631	1					
ANR	1677217	Parameter	sljit_si op	2217:82:66422:66432	1676631	1	True				
ANR	1677218	ParameterType	sljit_si		1676631	0					
ANR	1677219	Identifier	op		1676631	1					
ANR	1677220	Parameter	sljit_si dst	2217:95:66435:66446	1676631	2	True				
ANR	1677221	ParameterType	sljit_si		1676631	0					
ANR	1677222	Identifier	dst		1676631	1					
ANR	1677223	Parameter	sljit_sw dstw	2217:109:66449:66461	1676631	3	True				
ANR	1677224	ParameterType	sljit_sw		1676631	0					
ANR	1677225	Identifier	dstw		1676631	1					
ANR	1677226	Parameter	sljit_si src	2217:124:66464:66475	1676631	4	True				
ANR	1677227	ParameterType	sljit_si		1676631	0					
ANR	1677228	Identifier	src		1676631	1					
ANR	1677229	Parameter	sljit_sw srcw	2217:138:66478:66490	1676631	5	True				
ANR	1677230	ParameterType	sljit_sw		1676631	0					
ANR	1677231	Identifier	srcw		1676631	1					
ANR	1677232	CFGEntryNode	ENTRY		1676631		True				
ANR	1677233	CFGExitNode	EXIT		1676631		True				
ANR	1677234	Symbol	TMP_REG1		1676631						
ANR	1677235	Symbol	dst		1676631						
ANR	1677236	Symbol	IMM_OP		1676631						
ANR	1677237	Symbol	SLJIT_MOV		1676631						
ANR	1677238	Symbol	GET_OPCODE		1676631						
ANR	1677239	Symbol	BYTE_DATA		1676631						
ANR	1677240	Symbol	SLJIT_MOV_SI		1676631						
ANR	1677241	Symbol	GET_ALL_FLAGS		1676631						
ANR	1677242	Symbol	SLJIT_IMM		1676631						
ANR	1677243	Symbol	SLJIT_MOV_UH		1676631						
ANR	1677244	Symbol	SLJIT_MOV_SH		1676631						
ANR	1677245	Symbol	SLJIT_MOV_UI		1676631						
ANR	1677246	Symbol	INT_DATA		1676631						
ANR	1677247	Symbol	compiler		1676631						
ANR	1677248	Symbol	WRITE_BACK		1676631						
ANR	1677249	Symbol	WORD_DATA		1676631						
ANR	1677250	Symbol	emit_op		1676631						
ANR	1677251	Symbol	op		1676631						
ANR	1677252	Symbol	src		1676631						
ANR	1677253	Symbol	HALF_DATA		1676631						
ANR	1677254	Symbol	srcw		1676631						
ANR	1677255	Symbol	SLJIT_MOV_SB		1676631						
ANR	1677256	Symbol	SLJIT_SUB		1676631						
ANR	1677257	Symbol	SLJIT_SUCCESS		1676631						
ANR	1677258	Symbol	SLJIT_MOV_UB		1676631						
ANR	1677259	Symbol	SIGNED_DATA		1676631						
ANR	1677260	Symbol	dstw		1676631						
ANR	1677261	Function	sljit_emit_op2	2282:0:69025:70178							
ANR	1677262	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1677261	0					
ANR	1677263	CompoundStatement		2283:0:69211:70178	1677261	0					
ANR	1677264	ExpressionStatement	CHECK_ERROR ( )	2284:1:69214:69227	1677261	0	True				
ANR	1677265	CallExpression	CHECK_ERROR ( )		1677261	0					
ANR	1677266	Callee	CHECK_ERROR		1677261	0					
ANR	1677267	Identifier	CHECK_ERROR		1677261	0					
ANR	1677268	ArgumentList			1677261	1					
ANR	1677269	ExpressionStatement	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"	2285:1:69230:69301	1677261	1	True				
ANR	1677270	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1677261	0					
ANR	1677271	Callee	check_sljit_emit_op2		1677261	0					
ANR	1677272	Identifier	check_sljit_emit_op2		1677261	0					
ANR	1677273	ArgumentList	compiler		1677261	1					
ANR	1677274	Argument	compiler		1677261	0					
ANR	1677275	Identifier	compiler		1677261	0					
ANR	1677276	Argument	op		1677261	1					
ANR	1677277	Identifier	op		1677261	0					
ANR	1677278	Argument	dst		1677261	2					
ANR	1677279	Identifier	dst		1677261	0					
ANR	1677280	Argument	dstw		1677261	3					
ANR	1677281	Identifier	dstw		1677261	0					
ANR	1677282	Argument	src1		1677261	4					
ANR	1677283	Identifier	src1		1677261	0					
ANR	1677284	Argument	src1w		1677261	5					
ANR	1677285	Identifier	src1w		1677261	0					
ANR	1677286	Argument	src2		1677261	6					
ANR	1677287	Identifier	src2		1677261	0					
ANR	1677288	Argument	src2w		1677261	7					
ANR	1677289	Identifier	src2w		1677261	0					
ANR	1677290	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2286:1:69304:69334	1677261	2	True				
ANR	1677291	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1677261	0					
ANR	1677292	Callee	ADJUST_LOCAL_OFFSET		1677261	0					
ANR	1677293	Identifier	ADJUST_LOCAL_OFFSET		1677261	0					
ANR	1677294	ArgumentList	dst		1677261	1					
ANR	1677295	Argument	dst		1677261	0					
ANR	1677296	Identifier	dst		1677261	0					
ANR	1677297	Argument	dstw		1677261	1					
ANR	1677298	Identifier	dstw		1677261	0					
ANR	1677299	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	2287:1:69337:69369	1677261	3	True				
ANR	1677300	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1677261	0					
ANR	1677301	Callee	ADJUST_LOCAL_OFFSET		1677261	0					
ANR	1677302	Identifier	ADJUST_LOCAL_OFFSET		1677261	0					
ANR	1677303	ArgumentList	src1		1677261	1					
ANR	1677304	Argument	src1		1677261	0					
ANR	1677305	Identifier	src1		1677261	0					
ANR	1677306	Argument	src1w		1677261	1					
ANR	1677307	Identifier	src1w		1677261	0					
ANR	1677308	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	2288:1:69372:69404	1677261	4	True				
ANR	1677309	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1677261	0					
ANR	1677310	Callee	ADJUST_LOCAL_OFFSET		1677261	0					
ANR	1677311	Identifier	ADJUST_LOCAL_OFFSET		1677261	0					
ANR	1677312	ArgumentList	src2		1677261	1					
ANR	1677313	Argument	src2		1677261	0					
ANR	1677314	Identifier	src2		1677261	0					
ANR	1677315	Argument	src2w		1677261	1					
ANR	1677316	Identifier	src2w		1677261	0					
ANR	1677317	SwitchStatement	switch ( GET_OPCODE ( op ) )		1677261	5					
ANR	1677318	Condition	GET_OPCODE ( op )	2290:9:69416:69429	1677261	0	True				
ANR	1677319	CallExpression	GET_OPCODE ( op )		1677261	0					
ANR	1677320	Callee	GET_OPCODE		1677261	0					
ANR	1677321	Identifier	GET_OPCODE		1677261	0					
ANR	1677322	ArgumentList	op		1677261	1					
ANR	1677323	Argument	op		1677261	0					
ANR	1677324	Identifier	op		1677261	0					
ANR	1677325	CompoundStatement		8:25:220:220	1677261	1					
ANR	1677326	Label	case SLJIT_ADD :	2291:1:69435:69449	1677261	0	True				
ANR	1677327	Identifier	SLJIT_ADD		1677261	0					
ANR	1677328	Label	case SLJIT_ADDC :	2292:1:69452:69467	1677261	1	True				
ANR	1677329	Identifier	SLJIT_ADDC		1677261	0					
ANR	1677330	ReturnStatement	"return emit_op ( compiler , op , CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2293:2:69471:69560	1677261	2	True				
ANR	1677331	CallExpression	"emit_op ( compiler , op , CUMULATIVE_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1677261	0					
ANR	1677332	Callee	emit_op		1677261	0					
ANR	1677333	Identifier	emit_op		1677261	0					
ANR	1677334	ArgumentList	compiler		1677261	1					
ANR	1677335	Argument	compiler		1677261	0					
ANR	1677336	Identifier	compiler		1677261	0					
ANR	1677337	Argument	op		1677261	1					
ANR	1677338	Identifier	op		1677261	0					
ANR	1677339	Argument	CUMULATIVE_OP | IMM_OP		1677261	2					
ANR	1677340	InclusiveOrExpression	CUMULATIVE_OP | IMM_OP		1677261	0		|			
ANR	1677341	Identifier	CUMULATIVE_OP		1677261	0					
ANR	1677342	Identifier	IMM_OP		1677261	1					
ANR	1677343	Argument	dst		1677261	3					
ANR	1677344	Identifier	dst		1677261	0					
ANR	1677345	Argument	dstw		1677261	4					
ANR	1677346	Identifier	dstw		1677261	0					
ANR	1677347	Argument	src1		1677261	5					
ANR	1677348	Identifier	src1		1677261	0					
ANR	1677349	Argument	src1w		1677261	6					
ANR	1677350	Identifier	src1w		1677261	0					
ANR	1677351	Argument	src2		1677261	7					
ANR	1677352	Identifier	src2		1677261	0					
ANR	1677353	Argument	src2w		1677261	8					
ANR	1677354	Identifier	src2w		1677261	0					
ANR	1677355	Label	case SLJIT_SUB :	2295:1:69564:69578	1677261	3	True				
ANR	1677356	Identifier	SLJIT_SUB		1677261	0					
ANR	1677357	Label	case SLJIT_SUBC :	2296:1:69581:69596	1677261	4	True				
ANR	1677358	Identifier	SLJIT_SUBC		1677261	0					
ANR	1677359	ReturnStatement	"return emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2297:2:69600:69673	1677261	5	True				
ANR	1677360	CallExpression	"emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1677261	0					
ANR	1677361	Callee	emit_op		1677261	0					
ANR	1677362	Identifier	emit_op		1677261	0					
ANR	1677363	ArgumentList	compiler		1677261	1					
ANR	1677364	Argument	compiler		1677261	0					
ANR	1677365	Identifier	compiler		1677261	0					
ANR	1677366	Argument	op		1677261	1					
ANR	1677367	Identifier	op		1677261	0					
ANR	1677368	Argument	IMM_OP		1677261	2					
ANR	1677369	Identifier	IMM_OP		1677261	0					
ANR	1677370	Argument	dst		1677261	3					
ANR	1677371	Identifier	dst		1677261	0					
ANR	1677372	Argument	dstw		1677261	4					
ANR	1677373	Identifier	dstw		1677261	0					
ANR	1677374	Argument	src1		1677261	5					
ANR	1677375	Identifier	src1		1677261	0					
ANR	1677376	Argument	src1w		1677261	6					
ANR	1677377	Identifier	src1w		1677261	0					
ANR	1677378	Argument	src2		1677261	7					
ANR	1677379	Identifier	src2		1677261	0					
ANR	1677380	Argument	src2w		1677261	8					
ANR	1677381	Identifier	src2w		1677261	0					
ANR	1677382	Label	case SLJIT_MUL :	2299:1:69677:69691	1677261	6	True				
ANR	1677383	Identifier	SLJIT_MUL		1677261	0					
ANR	1677384	ReturnStatement	"return emit_op ( compiler , op , CUMULATIVE_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2300:2:69695:69775	1677261	7	True				
ANR	1677385	CallExpression	"emit_op ( compiler , op , CUMULATIVE_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1677261	0					
ANR	1677386	Callee	emit_op		1677261	0					
ANR	1677387	Identifier	emit_op		1677261	0					
ANR	1677388	ArgumentList	compiler		1677261	1					
ANR	1677389	Argument	compiler		1677261	0					
ANR	1677390	Identifier	compiler		1677261	0					
ANR	1677391	Argument	op		1677261	1					
ANR	1677392	Identifier	op		1677261	0					
ANR	1677393	Argument	CUMULATIVE_OP		1677261	2					
ANR	1677394	Identifier	CUMULATIVE_OP		1677261	0					
ANR	1677395	Argument	dst		1677261	3					
ANR	1677396	Identifier	dst		1677261	0					
ANR	1677397	Argument	dstw		1677261	4					
ANR	1677398	Identifier	dstw		1677261	0					
ANR	1677399	Argument	src1		1677261	5					
ANR	1677400	Identifier	src1		1677261	0					
ANR	1677401	Argument	src1w		1677261	6					
ANR	1677402	Identifier	src1w		1677261	0					
ANR	1677403	Argument	src2		1677261	7					
ANR	1677404	Identifier	src2		1677261	0					
ANR	1677405	Argument	src2w		1677261	8					
ANR	1677406	Identifier	src2w		1677261	0					
ANR	1677407	Label	case SLJIT_AND :	2302:1:69779:69793	1677261	8	True				
ANR	1677408	Identifier	SLJIT_AND		1677261	0					
ANR	1677409	Label	case SLJIT_OR :	2303:1:69796:69809	1677261	9	True				
ANR	1677410	Identifier	SLJIT_OR		1677261	0					
ANR	1677411	Label	case SLJIT_XOR :	2304:1:69812:69826	1677261	10	True				
ANR	1677412	Identifier	SLJIT_XOR		1677261	0					
ANR	1677413	ReturnStatement	"return emit_op ( compiler , op , CUMULATIVE_OP | LOGICAL_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2305:2:69830:69932	1677261	11	True				
ANR	1677414	CallExpression	"emit_op ( compiler , op , CUMULATIVE_OP | LOGICAL_OP | IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1677261	0					
ANR	1677415	Callee	emit_op		1677261	0					
ANR	1677416	Identifier	emit_op		1677261	0					
ANR	1677417	ArgumentList	compiler		1677261	1					
ANR	1677418	Argument	compiler		1677261	0					
ANR	1677419	Identifier	compiler		1677261	0					
ANR	1677420	Argument	op		1677261	1					
ANR	1677421	Identifier	op		1677261	0					
ANR	1677422	Argument	CUMULATIVE_OP | LOGICAL_OP | IMM_OP		1677261	2					
ANR	1677423	InclusiveOrExpression	CUMULATIVE_OP | LOGICAL_OP | IMM_OP		1677261	0		|			
ANR	1677424	Identifier	CUMULATIVE_OP		1677261	0					
ANR	1677425	InclusiveOrExpression	LOGICAL_OP | IMM_OP		1677261	1		|			
ANR	1677426	Identifier	LOGICAL_OP		1677261	0					
ANR	1677427	Identifier	IMM_OP		1677261	1					
ANR	1677428	Argument	dst		1677261	3					
ANR	1677429	Identifier	dst		1677261	0					
ANR	1677430	Argument	dstw		1677261	4					
ANR	1677431	Identifier	dstw		1677261	0					
ANR	1677432	Argument	src1		1677261	5					
ANR	1677433	Identifier	src1		1677261	0					
ANR	1677434	Argument	src1w		1677261	6					
ANR	1677435	Identifier	src1w		1677261	0					
ANR	1677436	Argument	src2		1677261	7					
ANR	1677437	Identifier	src2		1677261	0					
ANR	1677438	Argument	src2w		1677261	8					
ANR	1677439	Identifier	src2w		1677261	0					
ANR	1677440	Label	case SLJIT_SHL :	2307:1:69936:69950	1677261	12	True				
ANR	1677441	Identifier	SLJIT_SHL		1677261	0					
ANR	1677442	Label	case SLJIT_LSHR :	2308:1:69953:69968	1677261	13	True				
ANR	1677443	Identifier	SLJIT_LSHR		1677261	0					
ANR	1677444	Label	case SLJIT_ASHR :	2309:1:69971:69986	1677261	14	True				
ANR	1677445	Identifier	SLJIT_ASHR		1677261	0					
ANR	1677446	IfStatement	if ( src2 & SLJIT_IMM )		1677261	15					
ANR	1677447	Condition	src2 & SLJIT_IMM	2310:6:69994:70009	1677261	0	True				
ANR	1677448	BitAndExpression	src2 & SLJIT_IMM		1677261	0		&			
ANR	1677449	Identifier	src2		1677261	0					
ANR	1677450	Identifier	SLJIT_IMM		1677261	1					
ANR	1677451	ExpressionStatement	src2w &= 0x3f	2311:3:70015:70028	1677261	1	True				
ANR	1677452	AssignmentExpression	src2w &= 0x3f		1677261	0		&=			
ANR	1677453	Identifier	src2w		1677261	0					
ANR	1677454	PrimaryExpression	0x3f		1677261	1					
ANR	1677455	IfStatement	if ( op & SLJIT_INT_OP )		1677261	16					
ANR	1677456	Condition	op & SLJIT_INT_OP	2312:6:70036:70052	1677261	0	True				
ANR	1677457	BitAndExpression	op & SLJIT_INT_OP		1677261	0		&			
ANR	1677458	Identifier	op		1677261	0					
ANR	1677459	Identifier	SLJIT_INT_OP		1677261	1					
ANR	1677460	ExpressionStatement	src2w &= 0x1f	2313:3:70058:70071	1677261	1	True				
ANR	1677461	AssignmentExpression	src2w &= 0x1f		1677261	0		&=			
ANR	1677462	Identifier	src2w		1677261	0					
ANR	1677463	PrimaryExpression	0x1f		1677261	1					
ANR	1677464	ReturnStatement	"return emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2315:2:70076:70149	1677261	17	True				
ANR	1677465	CallExpression	"emit_op ( compiler , op , IMM_OP , dst , dstw , src1 , src1w , src2 , src2w )"		1677261	0					
ANR	1677466	Callee	emit_op		1677261	0					
ANR	1677467	Identifier	emit_op		1677261	0					
ANR	1677468	ArgumentList	compiler		1677261	1					
ANR	1677469	Argument	compiler		1677261	0					
ANR	1677470	Identifier	compiler		1677261	0					
ANR	1677471	Argument	op		1677261	1					
ANR	1677472	Identifier	op		1677261	0					
ANR	1677473	Argument	IMM_OP		1677261	2					
ANR	1677474	Identifier	IMM_OP		1677261	0					
ANR	1677475	Argument	dst		1677261	3					
ANR	1677476	Identifier	dst		1677261	0					
ANR	1677477	Argument	dstw		1677261	4					
ANR	1677478	Identifier	dstw		1677261	0					
ANR	1677479	Argument	src1		1677261	5					
ANR	1677480	Identifier	src1		1677261	0					
ANR	1677481	Argument	src1w		1677261	6					
ANR	1677482	Identifier	src1w		1677261	0					
ANR	1677483	Argument	src2		1677261	7					
ANR	1677484	Identifier	src2		1677261	0					
ANR	1677485	Argument	src2w		1677261	8					
ANR	1677486	Identifier	src2w		1677261	0					
ANR	1677487	ReturnStatement	return SLJIT_SUCCESS ;	2318:1:70156:70176	1677261	6	True				
ANR	1677488	Identifier	SLJIT_SUCCESS		1677261	0					
ANR	1677489	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1677261	1					
ANR	1677490	Identifier	sljit_emit_op2		1677261	2					
ANR	1677491	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1677261	3					
ANR	1677492	Parameter	struct sljit_compiler * compiler	2282:49:69074:69104	1677261	0	True				
ANR	1677493	ParameterType	struct sljit_compiler *		1677261	0					
ANR	1677494	Identifier	compiler		1677261	1					
ANR	1677495	Parameter	sljit_si op	2282:82:69107:69117	1677261	1	True				
ANR	1677496	ParameterType	sljit_si		1677261	0					
ANR	1677497	Identifier	op		1677261	1					
ANR	1677498	Parameter	sljit_si dst	2282:95:69120:69131	1677261	2	True				
ANR	1677499	ParameterType	sljit_si		1677261	0					
ANR	1677500	Identifier	dst		1677261	1					
ANR	1677501	Parameter	sljit_sw dstw	2282:109:69134:69146	1677261	3	True				
ANR	1677502	ParameterType	sljit_sw		1677261	0					
ANR	1677503	Identifier	dstw		1677261	1					
ANR	1677504	Parameter	sljit_si src1	2282:124:69149:69161	1677261	4	True				
ANR	1677505	ParameterType	sljit_si		1677261	0					
ANR	1677506	Identifier	src1		1677261	1					
ANR	1677507	Parameter	sljit_sw src1w	2282:139:69164:69177	1677261	5	True				
ANR	1677508	ParameterType	sljit_sw		1677261	0					
ANR	1677509	Identifier	src1w		1677261	1					
ANR	1677510	Parameter	sljit_si src2	2282:155:69180:69192	1677261	6	True				
ANR	1677511	ParameterType	sljit_si		1677261	0					
ANR	1677512	Identifier	src2		1677261	1					
ANR	1677513	Parameter	sljit_sw src2w	2282:170:69195:69208	1677261	7	True				
ANR	1677514	ParameterType	sljit_sw		1677261	0					
ANR	1677515	Identifier	src2w		1677261	1					
ANR	1677516	CFGEntryNode	ENTRY		1677261		True				
ANR	1677517	CFGExitNode	EXIT		1677261		True				
ANR	1677518	Symbol	src2w		1677261						
ANR	1677519	Symbol	op		1677261						
ANR	1677520	Symbol	src1w		1677261						
ANR	1677521	Symbol	dst		1677261						
ANR	1677522	Symbol	IMM_OP		1677261						
ANR	1677523	Symbol	LOGICAL_OP		1677261						
ANR	1677524	Symbol	CUMULATIVE_OP		1677261						
ANR	1677525	Symbol	SLJIT_INT_OP		1677261						
ANR	1677526	Symbol	SLJIT_SUCCESS		1677261						
ANR	1677527	Symbol	GET_OPCODE		1677261						
ANR	1677528	Symbol	SLJIT_IMM		1677261						
ANR	1677529	Symbol	src1		1677261						
ANR	1677530	Symbol	src2		1677261						
ANR	1677531	Symbol	compiler		1677261						
ANR	1677532	Symbol	dstw		1677261						
ANR	1677533	Symbol	emit_op		1677261						
ANR	1677534	Function	sljit_emit_label	2321:25:70206:70645							
ANR	1677535	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1677534	0					
ANR	1677536	CompoundStatement		2322:0:70277:70645	1677534	0					
ANR	1677537	IdentifierDeclStatement	struct sljit_label * label ;	2323:1:70280:70305	1677534	0	True				
ANR	1677538	IdentifierDecl	* label		1677534	0					
ANR	1677539	IdentifierDeclType	struct sljit_label *		1677534	0					
ANR	1677540	Identifier	label		1677534	1					
ANR	1677541	ExpressionStatement	flush_buffer ( compiler )	2325:1:70309:70331	1677534	1	True				
ANR	1677542	CallExpression	flush_buffer ( compiler )		1677534	0					
ANR	1677543	Callee	flush_buffer		1677534	0					
ANR	1677544	Identifier	flush_buffer		1677534	0					
ANR	1677545	ArgumentList	compiler		1677534	1					
ANR	1677546	Argument	compiler		1677534	0					
ANR	1677547	Identifier	compiler		1677534	0					
ANR	1677548	ExpressionStatement	CHECK_ERROR_PTR ( )	2327:1:70335:70352	1677534	2	True				
ANR	1677549	CallExpression	CHECK_ERROR_PTR ( )		1677534	0					
ANR	1677550	Callee	CHECK_ERROR_PTR		1677534	0					
ANR	1677551	Identifier	CHECK_ERROR_PTR		1677534	0					
ANR	1677552	ArgumentList			1677534	1					
ANR	1677553	ExpressionStatement	check_sljit_emit_label ( compiler )	2328:1:70355:70387	1677534	3	True				
ANR	1677554	CallExpression	check_sljit_emit_label ( compiler )		1677534	0					
ANR	1677555	Callee	check_sljit_emit_label		1677534	0					
ANR	1677556	Identifier	check_sljit_emit_label		1677534	0					
ANR	1677557	ArgumentList	compiler		1677534	1					
ANR	1677558	Argument	compiler		1677534	0					
ANR	1677559	Identifier	compiler		1677534	0					
ANR	1677560	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1677534	4					
ANR	1677561	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	2330:5:70395:70462	1677534	0	True				
ANR	1677562	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1677534	0		&&			
ANR	1677563	PtrMemberAccess	compiler -> last_label		1677534	0					
ANR	1677564	Identifier	compiler		1677534	0					
ANR	1677565	Identifier	last_label		1677534	1					
ANR	1677566	EqualityExpression	compiler -> last_label -> size == compiler -> size		1677534	1		==			
ANR	1677567	PtrMemberAccess	compiler -> last_label -> size		1677534	0					
ANR	1677568	PtrMemberAccess	compiler -> last_label		1677534	0					
ANR	1677569	Identifier	compiler		1677534	0					
ANR	1677570	Identifier	last_label		1677534	1					
ANR	1677571	Identifier	size		1677534	1					
ANR	1677572	PtrMemberAccess	compiler -> size		1677534	1					
ANR	1677573	Identifier	compiler		1677534	0					
ANR	1677574	Identifier	size		1677534	1					
ANR	1677575	ReturnStatement	return compiler -> last_label ;	2331:2:70467:70494	1677534	1	True				
ANR	1677576	PtrMemberAccess	compiler -> last_label		1677534	0					
ANR	1677577	Identifier	compiler		1677534	0					
ANR	1677578	Identifier	last_label		1677534	1					
ANR	1677579	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	2333:1:70498:70577	1677534	5	True				
ANR	1677580	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1677534	0		=			
ANR	1677581	Identifier	label		1677534	0					
ANR	1677582	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1677534	1					
ANR	1677583	CastTarget	struct sljit_label *		1677534	0					
ANR	1677584	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1677534	1					
ANR	1677585	Callee	ensure_abuf		1677534	0					
ANR	1677586	Identifier	ensure_abuf		1677534	0					
ANR	1677587	ArgumentList	compiler		1677534	1					
ANR	1677588	Argument	compiler		1677534	0					
ANR	1677589	Identifier	compiler		1677534	0					
ANR	1677590	Argument	sizeof ( struct sljit_label )		1677534	1					
ANR	1677591	SizeofExpression	sizeof ( struct sljit_label )		1677534	0					
ANR	1677592	Sizeof	sizeof		1677534	0					
ANR	1677593	SizeofOperand	struct sljit_label		1677534	1					
ANR	1677594	ExpressionStatement	PTR_FAIL_IF ( ! label )	2334:1:70580:70599	1677534	6	True				
ANR	1677595	CallExpression	PTR_FAIL_IF ( ! label )		1677534	0					
ANR	1677596	Callee	PTR_FAIL_IF		1677534	0					
ANR	1677597	Identifier	PTR_FAIL_IF		1677534	0					
ANR	1677598	ArgumentList	! label		1677534	1					
ANR	1677599	Argument	! label		1677534	0					
ANR	1677600	UnaryOperationExpression	! label		1677534	0					
ANR	1677601	UnaryOperator	!		1677534	0					
ANR	1677602	Identifier	label		1677534	1					
ANR	1677603	ExpressionStatement	"set_label ( label , compiler )"	2335:1:70602:70628	1677534	7	True				
ANR	1677604	CallExpression	"set_label ( label , compiler )"		1677534	0					
ANR	1677605	Callee	set_label		1677534	0					
ANR	1677606	Identifier	set_label		1677534	0					
ANR	1677607	ArgumentList	label		1677534	1					
ANR	1677608	Argument	label		1677534	0					
ANR	1677609	Identifier	label		1677534	0					
ANR	1677610	Argument	compiler		1677534	1					
ANR	1677611	Identifier	compiler		1677534	0					
ANR	1677612	ReturnStatement	return label ;	2336:1:70631:70643	1677534	8	True				
ANR	1677613	Identifier	label		1677534	0					
ANR	1677614	ReturnType	struct sljit_label *		1677534	1					
ANR	1677615	Identifier	sljit_emit_label		1677534	2					
ANR	1677616	ParameterList	struct sljit_compiler * compiler		1677534	3					
ANR	1677617	Parameter	struct sljit_compiler * compiler	2321:63:70244:70274	1677534	0	True				
ANR	1677618	ParameterType	struct sljit_compiler *		1677534	0					
ANR	1677619	Identifier	compiler		1677534	1					
ANR	1677620	CFGEntryNode	ENTRY		1677534		True				
ANR	1677621	CFGExitNode	EXIT		1677534		True				
ANR	1677622	Symbol	* compiler -> last_label		1677534						
ANR	1677623	Symbol	compiler -> last_label -> size		1677534						
ANR	1677624	Symbol	compiler -> last_label		1677534						
ANR	1677625	Symbol	* * compiler		1677534						
ANR	1677626	Symbol	compiler -> size		1677534						
ANR	1677627	Symbol	label		1677534						
ANR	1677628	Symbol	* compiler		1677534						
ANR	1677629	Symbol	ensure_abuf		1677534						
ANR	1677630	Symbol	compiler		1677534						
ANR	1677631	Function	sljit_emit_ijump	2339:0:70648:72712							
ANR	1677632	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1677631	0					
ANR	1677633	CompoundStatement		2340:0:70776:72712	1677631	0					
ANR	1677634	IdentifierDeclStatement	sljit_si src_r = TMP_REG2 ;	2341:1:70779:70804	1677631	0	True				
ANR	1677635	IdentifierDecl	src_r = TMP_REG2		1677631	0					
ANR	1677636	IdentifierDeclType	sljit_si		1677631	0					
ANR	1677637	Identifier	src_r		1677631	1					
ANR	1677638	AssignmentExpression	src_r = TMP_REG2		1677631	2		=			
ANR	1677639	Identifier	TMP_REG2		1677631	0					
ANR	1677640	Identifier	TMP_REG2		1677631	1					
ANR	1677641	IdentifierDeclStatement	struct sljit_jump * jump = NULL ;	2342:1:70807:70837	1677631	1	True				
ANR	1677642	IdentifierDecl	* jump = NULL		1677631	0					
ANR	1677643	IdentifierDeclType	struct sljit_jump *		1677631	0					
ANR	1677644	Identifier	jump		1677631	1					
ANR	1677645	AssignmentExpression	* jump = NULL		1677631	2		=			
ANR	1677646	Identifier	NULL		1677631	0					
ANR	1677647	Identifier	NULL		1677631	1					
ANR	1677648	ExpressionStatement	flush_buffer ( compiler )	2344:1:70841:70863	1677631	2	True				
ANR	1677649	CallExpression	flush_buffer ( compiler )		1677631	0					
ANR	1677650	Callee	flush_buffer		1677631	0					
ANR	1677651	Identifier	flush_buffer		1677631	0					
ANR	1677652	ArgumentList	compiler		1677631	1					
ANR	1677653	Argument	compiler		1677631	0					
ANR	1677654	Identifier	compiler		1677631	0					
ANR	1677655	ExpressionStatement	CHECK_ERROR ( )	2346:1:70867:70880	1677631	3	True				
ANR	1677656	CallExpression	CHECK_ERROR ( )		1677631	0					
ANR	1677657	Callee	CHECK_ERROR		1677631	0					
ANR	1677658	Identifier	CHECK_ERROR		1677631	0					
ANR	1677659	ArgumentList			1677631	1					
ANR	1677660	ExpressionStatement	"check_sljit_emit_ijump ( compiler , type , src , srcw )"	2347:1:70883:70932	1677631	4	True				
ANR	1677661	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1677631	0					
ANR	1677662	Callee	check_sljit_emit_ijump		1677631	0					
ANR	1677663	Identifier	check_sljit_emit_ijump		1677631	0					
ANR	1677664	ArgumentList	compiler		1677631	1					
ANR	1677665	Argument	compiler		1677631	0					
ANR	1677666	Identifier	compiler		1677631	0					
ANR	1677667	Argument	type		1677631	1					
ANR	1677668	Identifier	type		1677631	0					
ANR	1677669	Argument	src		1677631	2					
ANR	1677670	Identifier	src		1677631	0					
ANR	1677671	Argument	srcw		1677631	3					
ANR	1677672	Identifier	srcw		1677631	0					
ANR	1677673	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2348:1:70935:70965	1677631	5	True				
ANR	1677674	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1677631	0					
ANR	1677675	Callee	ADJUST_LOCAL_OFFSET		1677631	0					
ANR	1677676	Identifier	ADJUST_LOCAL_OFFSET		1677631	0					
ANR	1677677	ArgumentList	src		1677631	1					
ANR	1677678	Argument	src		1677631	0					
ANR	1677679	Identifier	src		1677631	0					
ANR	1677680	Argument	srcw		1677631	1					
ANR	1677681	Identifier	srcw		1677631	0					
ANR	1677682	IfStatement	if ( FAST_IS_REG ( src ) )		1677631	6					
ANR	1677683	Condition	FAST_IS_REG ( src )	2350:5:70973:70988	1677631	0	True				
ANR	1677684	CallExpression	FAST_IS_REG ( src )		1677631	0					
ANR	1677685	Callee	FAST_IS_REG		1677631	0					
ANR	1677686	Identifier	FAST_IS_REG		1677631	0					
ANR	1677687	ArgumentList	src		1677631	1					
ANR	1677688	Argument	src		1677631	0					
ANR	1677689	Identifier	src		1677631	0					
ANR	1677690	CompoundStatement		11:23:214:214	1677631	1					
ANR	1677691	IfStatement	if ( reg_map [ src ] != 0 )		1677631	0					
ANR	1677692	Condition	reg_map [ src ] != 0	2351:6:70999:71015	1677631	0	True				
ANR	1677693	EqualityExpression	reg_map [ src ] != 0		1677631	0		!=			
ANR	1677694	ArrayIndexing	reg_map [ src ]		1677631	0					
ANR	1677695	Identifier	reg_map		1677631	0					
ANR	1677696	Identifier	src		1677631	1					
ANR	1677697	PrimaryExpression	0		1677631	1					
ANR	1677698	ExpressionStatement	src_r = src	2352:3:71021:71032	1677631	1	True				
ANR	1677699	AssignmentExpression	src_r = src		1677631	0		=			
ANR	1677700	Identifier	src_r		1677631	0					
ANR	1677701	Identifier	src		1677631	1					
ANR	1677702	ElseStatement	else		1677631	0					
ANR	1677703	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO ) )"	2354:3:71044:71098	1677631	0	True				
ANR	1677704	CallExpression	"FAIL_IF ( ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO ) )"		1677631	0					
ANR	1677705	Callee	FAIL_IF		1677631	0					
ANR	1677706	Identifier	FAIL_IF		1677631	0					
ANR	1677707	ArgumentList	"ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO )"		1677631	1					
ANR	1677708	Argument	"ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO )"		1677631	0					
ANR	1677709	CallExpression	"ADD_SOLO ( TMP_REG2_mapped , reg_map [ src ] , ZERO )"		1677631	0					
ANR	1677710	Callee	ADD_SOLO		1677631	0					
ANR	1677711	Identifier	ADD_SOLO		1677631	0					
ANR	1677712	ArgumentList	TMP_REG2_mapped		1677631	1					
ANR	1677713	Argument	TMP_REG2_mapped		1677631	0					
ANR	1677714	Identifier	TMP_REG2_mapped		1677631	0					
ANR	1677715	Argument	reg_map [ src ]		1677631	1					
ANR	1677716	ArrayIndexing	reg_map [ src ]		1677631	0					
ANR	1677717	Identifier	reg_map		1677631	0					
ANR	1677718	Identifier	src		1677631	1					
ANR	1677719	Argument	ZERO		1677631	2					
ANR	1677720	Identifier	ZERO		1677631	0					
ANR	1677721	IfStatement	if ( type >= SLJIT_CALL0 )		1677631	7					
ANR	1677722	Condition	type >= SLJIT_CALL0	2357:5:71109:71127	1677631	0	True				
ANR	1677723	RelationalExpression	type >= SLJIT_CALL0		1677631	0		>=			
ANR	1677724	Identifier	type		1677631	0					
ANR	1677725	Identifier	SLJIT_CALL0		1677631	1					
ANR	1677726	CompoundStatement		18:26:353:353	1677631	1					
ANR	1677727	ExpressionStatement	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )	2358:2:71134:71203	1677631	0	True				
ANR	1677728	CallExpression	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )		1677631	0					
ANR	1677729	Callee	SLJIT_ASSERT		1677631	0					
ANR	1677730	Identifier	SLJIT_ASSERT		1677631	0					
ANR	1677731	ArgumentList	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1677631	1					
ANR	1677732	Argument	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1677631	0					
ANR	1677733	AndExpression	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1677631	0		&&			
ANR	1677734	EqualityExpression	reg_map [ PIC_ADDR_REG ] == 16		1677631	0		==			
ANR	1677735	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1677631	0					
ANR	1677736	Identifier	reg_map		1677631	0					
ANR	1677737	Identifier	PIC_ADDR_REG		1677631	1					
ANR	1677738	PrimaryExpression	16		1677631	1					
ANR	1677739	EqualityExpression	PIC_ADDR_REG == TMP_REG2		1677631	1		==			
ANR	1677740	Identifier	PIC_ADDR_REG		1677631	0					
ANR	1677741	Identifier	TMP_REG2		1677631	1					
ANR	1677742	IfStatement	if ( src & ( SLJIT_IMM | SLJIT_MEM ) )		1677631	1					
ANR	1677743	Condition	src & ( SLJIT_IMM | SLJIT_MEM )	2359:6:71211:71239	1677631	0	True				
ANR	1677744	BitAndExpression	src & ( SLJIT_IMM | SLJIT_MEM )		1677631	0		&			
ANR	1677745	Identifier	src		1677631	0					
ANR	1677746	InclusiveOrExpression	SLJIT_IMM | SLJIT_MEM		1677631	1		|			
ANR	1677747	Identifier	SLJIT_IMM		1677631	0					
ANR	1677748	Identifier	SLJIT_MEM		1677631	1					
ANR	1677749	CompoundStatement		20:37:465:465	1677631	1					
ANR	1677750	IfStatement	if ( src & SLJIT_IMM )		1677631	0					
ANR	1677751	Condition	src & SLJIT_IMM	2360:7:71251:71265	1677631	0	True				
ANR	1677752	BitAndExpression	src & SLJIT_IMM		1677631	0		&			
ANR	1677753	Identifier	src		1677631	0					
ANR	1677754	Identifier	SLJIT_IMM		1677631	1					
ANR	1677755	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 ) )"	2361:4:71272:71333	1677631	1	True				
ANR	1677756	CallExpression	"FAIL_IF ( emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 ) )"		1677631	0					
ANR	1677757	Callee	FAIL_IF		1677631	0					
ANR	1677758	Identifier	FAIL_IF		1677631	0					
ANR	1677759	ArgumentList	"emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 )"		1677631	1					
ANR	1677760	Argument	"emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 )"		1677631	0					
ANR	1677761	CallExpression	"emit_const ( compiler , reg_map [ PIC_ADDR_REG ] , srcw , 1 )"		1677631	0					
ANR	1677762	Callee	emit_const		1677631	0					
ANR	1677763	Identifier	emit_const		1677631	0					
ANR	1677764	ArgumentList	compiler		1677631	1					
ANR	1677765	Argument	compiler		1677631	0					
ANR	1677766	Identifier	compiler		1677631	0					
ANR	1677767	Argument	reg_map [ PIC_ADDR_REG ]		1677631	1					
ANR	1677768	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1677631	0					
ANR	1677769	Identifier	reg_map		1677631	0					
ANR	1677770	Identifier	PIC_ADDR_REG		1677631	1					
ANR	1677771	Argument	srcw		1677631	2					
ANR	1677772	Identifier	srcw		1677631	0					
ANR	1677773	Argument	1		1677631	3					
ANR	1677774	PrimaryExpression	1		1677631	0					
ANR	1677775	ElseStatement	else		1677631	0					
ANR	1677776	CompoundStatement		23:8:566:566	1677631	0					
ANR	1677777	ExpressionStatement	SLJIT_ASSERT ( src_r == TMP_REG2 && ( src & SLJIT_MEM ) )	2363:4:71349:71401	1677631	0	True				
ANR	1677778	CallExpression	SLJIT_ASSERT ( src_r == TMP_REG2 && ( src & SLJIT_MEM ) )		1677631	0					
ANR	1677779	Callee	SLJIT_ASSERT		1677631	0					
ANR	1677780	Identifier	SLJIT_ASSERT		1677631	0					
ANR	1677781	ArgumentList	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1677631	1					
ANR	1677782	Argument	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1677631	0					
ANR	1677783	AndExpression	src_r == TMP_REG2 && ( src & SLJIT_MEM )		1677631	0		&&			
ANR	1677784	EqualityExpression	src_r == TMP_REG2		1677631	0		==			
ANR	1677785	Identifier	src_r		1677631	0					
ANR	1677786	Identifier	TMP_REG2		1677631	1					
ANR	1677787	BitAndExpression	src & SLJIT_MEM		1677631	1		&			
ANR	1677788	Identifier	src		1677631	0					
ANR	1677789	Identifier	SLJIT_MEM		1677631	1					
ANR	1677790	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	2364:4:71407:71492	1677631	1	True				
ANR	1677791	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1677631	0					
ANR	1677792	Callee	FAIL_IF		1677631	0					
ANR	1677793	Identifier	FAIL_IF		1677631	0					
ANR	1677794	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1677631	1					
ANR	1677795	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1677631	0					
ANR	1677796	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1677631	0					
ANR	1677797	Callee	emit_op		1677631	0					
ANR	1677798	Identifier	emit_op		1677631	0					
ANR	1677799	ArgumentList	compiler		1677631	1					
ANR	1677800	Argument	compiler		1677631	0					
ANR	1677801	Identifier	compiler		1677631	0					
ANR	1677802	Argument	SLJIT_MOV		1677631	1					
ANR	1677803	Identifier	SLJIT_MOV		1677631	0					
ANR	1677804	Argument	WORD_DATA		1677631	2					
ANR	1677805	Identifier	WORD_DATA		1677631	0					
ANR	1677806	Argument	TMP_REG2		1677631	3					
ANR	1677807	Identifier	TMP_REG2		1677631	0					
ANR	1677808	Argument	0		1677631	4					
ANR	1677809	PrimaryExpression	0		1677631	0					
ANR	1677810	Argument	TMP_REG1		1677631	5					
ANR	1677811	Identifier	TMP_REG1		1677631	0					
ANR	1677812	Argument	0		1677631	6					
ANR	1677813	PrimaryExpression	0		1677631	0					
ANR	1677814	Argument	src		1677631	7					
ANR	1677815	Identifier	src		1677631	0					
ANR	1677816	Argument	srcw		1677631	8					
ANR	1677817	Identifier	srcw		1677631	0					
ANR	1677818	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"	2367:3:71503:71548	1677631	1	True				
ANR	1677819	CallExpression	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"		1677631	0					
ANR	1677820	Callee	FAIL_IF		1677631	0					
ANR	1677821	Identifier	FAIL_IF		1677631	0					
ANR	1677822	ArgumentList	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1677631	1					
ANR	1677823	Argument	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1677631	0					
ANR	1677824	CallExpression	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1677631	0					
ANR	1677825	Callee	ADD_SOLO		1677631	0					
ANR	1677826	Identifier	ADD_SOLO		1677631	0					
ANR	1677827	ArgumentList	0		1677631	1					
ANR	1677828	Argument	0		1677631	0					
ANR	1677829	PrimaryExpression	0		1677631	0					
ANR	1677830	Argument	reg_map [ SLJIT_R0 ]		1677631	1					
ANR	1677831	ArrayIndexing	reg_map [ SLJIT_R0 ]		1677631	0					
ANR	1677832	Identifier	reg_map		1677631	0					
ANR	1677833	Identifier	SLJIT_R0		1677631	1					
ANR	1677834	Argument	ZERO		1677631	2					
ANR	1677835	Identifier	ZERO		1677631	0					
ANR	1677836	ExpressionStatement	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"	2369:3:71554:71585	1677631	2	True				
ANR	1677837	CallExpression	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"		1677631	0					
ANR	1677838	Callee	FAIL_IF		1677631	0					
ANR	1677839	Identifier	FAIL_IF		1677631	0					
ANR	1677840	ArgumentList	"ADDI_SOLO ( 54 , 54 , - 16 )"		1677631	1					
ANR	1677841	Argument	"ADDI_SOLO ( 54 , 54 , - 16 )"		1677631	0					
ANR	1677842	CallExpression	"ADDI_SOLO ( 54 , 54 , - 16 )"		1677631	0					
ANR	1677843	Callee	ADDI_SOLO		1677631	0					
ANR	1677844	Identifier	ADDI_SOLO		1677631	0					
ANR	1677845	ArgumentList	54		1677631	1					
ANR	1677846	Argument	54		1677631	0					
ANR	1677847	PrimaryExpression	54		1677631	0					
ANR	1677848	Argument	54		1677631	1					
ANR	1677849	PrimaryExpression	54		1677631	0					
ANR	1677850	Argument	- 16		1677631	2					
ANR	1677851	UnaryOperationExpression	- 16		1677631	0					
ANR	1677852	UnaryOperator	-		1677631	0					
ANR	1677853	PrimaryExpression	16		1677631	1					
ANR	1677854	ExpressionStatement	FAIL_IF ( JALR_SOLO ( reg_map [ PIC_ADDR_REG ] ) )	2371:3:71591:71632	1677631	3	True				
ANR	1677855	CallExpression	FAIL_IF ( JALR_SOLO ( reg_map [ PIC_ADDR_REG ] ) )		1677631	0					
ANR	1677856	Callee	FAIL_IF		1677631	0					
ANR	1677857	Identifier	FAIL_IF		1677631	0					
ANR	1677858	ArgumentList	JALR_SOLO ( reg_map [ PIC_ADDR_REG ] )		1677631	1					
ANR	1677859	Argument	JALR_SOLO ( reg_map [ PIC_ADDR_REG ] )		1677631	0					
ANR	1677860	CallExpression	JALR_SOLO ( reg_map [ PIC_ADDR_REG ] )		1677631	0					
ANR	1677861	Callee	JALR_SOLO		1677631	0					
ANR	1677862	Identifier	JALR_SOLO		1677631	0					
ANR	1677863	ArgumentList	reg_map [ PIC_ADDR_REG ]		1677631	1					
ANR	1677864	Argument	reg_map [ PIC_ADDR_REG ]		1677631	0					
ANR	1677865	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1677631	0					
ANR	1677866	Identifier	reg_map		1677631	0					
ANR	1677867	Identifier	PIC_ADDR_REG		1677631	1					
ANR	1677868	ReturnStatement	"return ADDI_SOLO ( 54 , 54 , 16 ) ;"	2373:3:71638:71666	1677631	4	True				
ANR	1677869	CallExpression	"ADDI_SOLO ( 54 , 54 , 16 )"		1677631	0					
ANR	1677870	Callee	ADDI_SOLO		1677631	0					
ANR	1677871	Identifier	ADDI_SOLO		1677631	0					
ANR	1677872	ArgumentList	54		1677631	1					
ANR	1677873	Argument	54		1677631	0					
ANR	1677874	PrimaryExpression	54		1677631	0					
ANR	1677875	Argument	54		1677631	1					
ANR	1677876	PrimaryExpression	54		1677631	0					
ANR	1677877	Argument	16		1677631	2					
ANR	1677878	PrimaryExpression	16		1677631	0					
ANR	1677879	IfStatement	if ( type >= SLJIT_CALL1 )		1677631	2					
ANR	1677880	Condition	type >= SLJIT_CALL1	2377:6:71703:71721	1677631	0	True				
ANR	1677881	RelationalExpression	type >= SLJIT_CALL1		1677631	0		>=			
ANR	1677882	Identifier	type		1677631	0					
ANR	1677883	Identifier	SLJIT_CALL1		1677631	1					
ANR	1677884	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"	2378:3:71727:71772	1677631	1	True				
ANR	1677885	CallExpression	"FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"		1677631	0					
ANR	1677886	Callee	FAIL_IF		1677631	0					
ANR	1677887	Identifier	FAIL_IF		1677631	0					
ANR	1677888	ArgumentList	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1677631	1					
ANR	1677889	Argument	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1677631	0					
ANR	1677890	CallExpression	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1677631	0					
ANR	1677891	Callee	ADD_SOLO		1677631	0					
ANR	1677892	Identifier	ADD_SOLO		1677631	0					
ANR	1677893	ArgumentList	0		1677631	1					
ANR	1677894	Argument	0		1677631	0					
ANR	1677895	PrimaryExpression	0		1677631	0					
ANR	1677896	Argument	reg_map [ SLJIT_R0 ]		1677631	1					
ANR	1677897	ArrayIndexing	reg_map [ SLJIT_R0 ]		1677631	0					
ANR	1677898	Identifier	reg_map		1677631	0					
ANR	1677899	Identifier	SLJIT_R0		1677631	1					
ANR	1677900	Argument	ZERO		1677631	2					
ANR	1677901	Identifier	ZERO		1677631	0					
ANR	1677902	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO ) )"	2380:2:71777:71839	1677631	3	True				
ANR	1677903	CallExpression	"FAIL_IF ( ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO ) )"		1677631	0					
ANR	1677904	Callee	FAIL_IF		1677631	0					
ANR	1677905	Identifier	FAIL_IF		1677631	0					
ANR	1677906	ArgumentList	"ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO )"		1677631	1					
ANR	1677907	Argument	"ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO )"		1677631	0					
ANR	1677908	CallExpression	"ADD_SOLO ( reg_map [ PIC_ADDR_REG ] , reg_map [ src_r ] , ZERO )"		1677631	0					
ANR	1677909	Callee	ADD_SOLO		1677631	0					
ANR	1677910	Identifier	ADD_SOLO		1677631	0					
ANR	1677911	ArgumentList	reg_map [ PIC_ADDR_REG ]		1677631	1					
ANR	1677912	Argument	reg_map [ PIC_ADDR_REG ]		1677631	0					
ANR	1677913	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1677631	0					
ANR	1677914	Identifier	reg_map		1677631	0					
ANR	1677915	Identifier	PIC_ADDR_REG		1677631	1					
ANR	1677916	Argument	reg_map [ src_r ]		1677631	1					
ANR	1677917	ArrayIndexing	reg_map [ src_r ]		1677631	0					
ANR	1677918	Identifier	reg_map		1677631	0					
ANR	1677919	Identifier	src_r		1677631	1					
ANR	1677920	Argument	ZERO		1677631	2					
ANR	1677921	Identifier	ZERO		1677631	0					
ANR	1677922	ExpressionStatement	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"	2382:2:71844:71875	1677631	4	True				
ANR	1677923	CallExpression	"FAIL_IF ( ADDI_SOLO ( 54 , 54 , - 16 ) )"		1677631	0					
ANR	1677924	Callee	FAIL_IF		1677631	0					
ANR	1677925	Identifier	FAIL_IF		1677631	0					
ANR	1677926	ArgumentList	"ADDI_SOLO ( 54 , 54 , - 16 )"		1677631	1					
ANR	1677927	Argument	"ADDI_SOLO ( 54 , 54 , - 16 )"		1677631	0					
ANR	1677928	CallExpression	"ADDI_SOLO ( 54 , 54 , - 16 )"		1677631	0					
ANR	1677929	Callee	ADDI_SOLO		1677631	0					
ANR	1677930	Identifier	ADDI_SOLO		1677631	0					
ANR	1677931	ArgumentList	54		1677631	1					
ANR	1677932	Argument	54		1677631	0					
ANR	1677933	PrimaryExpression	54		1677631	0					
ANR	1677934	Argument	54		1677631	1					
ANR	1677935	PrimaryExpression	54		1677631	0					
ANR	1677936	Argument	- 16		1677631	2					
ANR	1677937	UnaryOperationExpression	- 16		1677631	0					
ANR	1677938	UnaryOperator	-		1677631	0					
ANR	1677939	PrimaryExpression	16		1677631	1					
ANR	1677940	ExpressionStatement	FAIL_IF ( JALR_SOLO ( reg_map [ src_r ] ) )	2384:2:71880:71914	1677631	5	True				
ANR	1677941	CallExpression	FAIL_IF ( JALR_SOLO ( reg_map [ src_r ] ) )		1677631	0					
ANR	1677942	Callee	FAIL_IF		1677631	0					
ANR	1677943	Identifier	FAIL_IF		1677631	0					
ANR	1677944	ArgumentList	JALR_SOLO ( reg_map [ src_r ] )		1677631	1					
ANR	1677945	Argument	JALR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1677946	CallExpression	JALR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1677947	Callee	JALR_SOLO		1677631	0					
ANR	1677948	Identifier	JALR_SOLO		1677631	0					
ANR	1677949	ArgumentList	reg_map [ src_r ]		1677631	1					
ANR	1677950	Argument	reg_map [ src_r ]		1677631	0					
ANR	1677951	ArrayIndexing	reg_map [ src_r ]		1677631	0					
ANR	1677952	Identifier	reg_map		1677631	0					
ANR	1677953	Identifier	src_r		1677631	1					
ANR	1677954	ReturnStatement	"return ADDI_SOLO ( 54 , 54 , 16 ) ;"	2386:2:71919:71947	1677631	6	True				
ANR	1677955	CallExpression	"ADDI_SOLO ( 54 , 54 , 16 )"		1677631	0					
ANR	1677956	Callee	ADDI_SOLO		1677631	0					
ANR	1677957	Identifier	ADDI_SOLO		1677631	0					
ANR	1677958	ArgumentList	54		1677631	1					
ANR	1677959	Argument	54		1677631	0					
ANR	1677960	PrimaryExpression	54		1677631	0					
ANR	1677961	Argument	54		1677631	1					
ANR	1677962	PrimaryExpression	54		1677631	0					
ANR	1677963	Argument	16		1677631	2					
ANR	1677964	PrimaryExpression	16		1677631	0					
ANR	1677965	IfStatement	if ( src & SLJIT_IMM )		1677631	8					
ANR	1677966	Condition	src & SLJIT_IMM	2389:5:71958:71972	1677631	0	True				
ANR	1677967	BitAndExpression	src & SLJIT_IMM		1677631	0		&			
ANR	1677968	Identifier	src		1677631	0					
ANR	1677969	Identifier	SLJIT_IMM		1677631	1					
ANR	1677970	CompoundStatement		50:22:1198:1198	1677631	1					
ANR	1677971	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2390:2:71979:72055	1677631	0	True				
ANR	1677972	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1677631	0		=			
ANR	1677973	Identifier	jump		1677631	0					
ANR	1677974	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1677631	1					
ANR	1677975	CastTarget	struct sljit_jump *		1677631	0					
ANR	1677976	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1677631	1					
ANR	1677977	Callee	ensure_abuf		1677631	0					
ANR	1677978	Identifier	ensure_abuf		1677631	0					
ANR	1677979	ArgumentList	compiler		1677631	1					
ANR	1677980	Argument	compiler		1677631	0					
ANR	1677981	Identifier	compiler		1677631	0					
ANR	1677982	Argument	sizeof ( struct sljit_jump )		1677631	1					
ANR	1677983	SizeofExpression	sizeof ( struct sljit_jump )		1677631	0					
ANR	1677984	Sizeof	sizeof		1677631	0					
ANR	1677985	SizeofOperand	struct sljit_jump		1677631	1					
ANR	1677986	ExpressionStatement	FAIL_IF ( ! jump )	2391:2:72059:72073	1677631	1	True				
ANR	1677987	CallExpression	FAIL_IF ( ! jump )		1677631	0					
ANR	1677988	Callee	FAIL_IF		1677631	0					
ANR	1677989	Identifier	FAIL_IF		1677631	0					
ANR	1677990	ArgumentList	! jump		1677631	1					
ANR	1677991	Argument	! jump		1677631	0					
ANR	1677992	UnaryOperationExpression	! jump		1677631	0					
ANR	1677993	UnaryOperator	!		1677631	0					
ANR	1677994	Identifier	jump		1677631	1					
ANR	1677995	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 ) )"	2392:2:72077:72155	1677631	2	True				
ANR	1677996	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 ) )"		1677631	0					
ANR	1677997	Callee	set_jump		1677631	0					
ANR	1677998	Identifier	set_jump		1677631	0					
ANR	1677999	ArgumentList	jump		1677631	1					
ANR	1678000	Argument	jump		1677631	0					
ANR	1678001	Identifier	jump		1677631	0					
ANR	1678002	Argument	compiler		1677631	1					
ANR	1678003	Identifier	compiler		1677631	0					
ANR	1678004	Argument	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 )		1677631	2					
ANR	1678005	InclusiveOrExpression	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0 )		1677631	0		|			
ANR	1678006	Identifier	JUMP_ADDR		1677631	0					
ANR	1678007	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? IS_JAL : 0		1677631	1					
ANR	1678008	Condition	type >= SLJIT_FAST_CALL		1677631	0					
ANR	1678009	RelationalExpression	type >= SLJIT_FAST_CALL		1677631	0		>=			
ANR	1678010	Identifier	type		1677631	0					
ANR	1678011	Identifier	SLJIT_FAST_CALL		1677631	1					
ANR	1678012	Identifier	IS_JAL		1677631	1					
ANR	1678013	PrimaryExpression	0		1677631	2					
ANR	1678014	ExpressionStatement	jump -> u . target = srcw	2393:2:72159:72180	1677631	3	True				
ANR	1678015	AssignmentExpression	jump -> u . target = srcw		1677631	0		=			
ANR	1678016	MemberAccess	jump -> u . target		1677631	0					
ANR	1678017	PtrMemberAccess	jump -> u		1677631	0					
ANR	1678018	Identifier	jump		1677631	0					
ANR	1678019	Identifier	u		1677631	1					
ANR	1678020	Identifier	target		1677631	1					
ANR	1678021	Identifier	srcw		1677631	1					
ANR	1678022	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"	2394:2:72184:72236	1677631	4	True				
ANR	1678023	CallExpression	"FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"		1677631	0					
ANR	1678024	Callee	FAIL_IF		1677631	0					
ANR	1678025	Identifier	FAIL_IF		1677631	0					
ANR	1678026	ArgumentList	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1677631	1					
ANR	1678027	Argument	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1677631	0					
ANR	1678028	CallExpression	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1677631	0					
ANR	1678029	Callee	emit_const		1677631	0					
ANR	1678030	Identifier	emit_const		1677631	0					
ANR	1678031	ArgumentList	compiler		1677631	1					
ANR	1678032	Argument	compiler		1677631	0					
ANR	1678033	Identifier	compiler		1677631	0					
ANR	1678034	Argument	TMP_REG2_mapped		1677631	1					
ANR	1678035	Identifier	TMP_REG2_mapped		1677631	0					
ANR	1678036	Argument	0		1677631	2					
ANR	1678037	PrimaryExpression	0		1677631	0					
ANR	1678038	Argument	1		1677631	3					
ANR	1678039	PrimaryExpression	1		1677631	0					
ANR	1678040	IfStatement	if ( type >= SLJIT_FAST_CALL )		1677631	5					
ANR	1678041	Condition	type >= SLJIT_FAST_CALL	2396:6:72245:72267	1677631	0	True				
ANR	1678042	RelationalExpression	type >= SLJIT_FAST_CALL		1677631	0		>=			
ANR	1678043	Identifier	type		1677631	0					
ANR	1678044	Identifier	SLJIT_FAST_CALL		1677631	1					
ANR	1678045	CompoundStatement		57:31:1493:1493	1677631	1					
ANR	1678046	ExpressionStatement	"FAIL_IF ( ADD_SOLO ( ZERO , ZERO , ZERO ) )"	2397:3:72275:72310	1677631	0	True				
ANR	1678047	CallExpression	"FAIL_IF ( ADD_SOLO ( ZERO , ZERO , ZERO ) )"		1677631	0					
ANR	1678048	Callee	FAIL_IF		1677631	0					
ANR	1678049	Identifier	FAIL_IF		1677631	0					
ANR	1678050	ArgumentList	"ADD_SOLO ( ZERO , ZERO , ZERO )"		1677631	1					
ANR	1678051	Argument	"ADD_SOLO ( ZERO , ZERO , ZERO )"		1677631	0					
ANR	1678052	CallExpression	"ADD_SOLO ( ZERO , ZERO , ZERO )"		1677631	0					
ANR	1678053	Callee	ADD_SOLO		1677631	0					
ANR	1678054	Identifier	ADD_SOLO		1677631	0					
ANR	1678055	ArgumentList	ZERO		1677631	1					
ANR	1678056	Argument	ZERO		1677631	0					
ANR	1678057	Identifier	ZERO		1677631	0					
ANR	1678058	Argument	ZERO		1677631	1					
ANR	1678059	Identifier	ZERO		1677631	0					
ANR	1678060	Argument	ZERO		1677631	2					
ANR	1678061	Identifier	ZERO		1677631	0					
ANR	1678062	ExpressionStatement	jump -> addr = compiler -> size	2398:3:72315:72342	1677631	1	True				
ANR	1678063	AssignmentExpression	jump -> addr = compiler -> size		1677631	0		=			
ANR	1678064	PtrMemberAccess	jump -> addr		1677631	0					
ANR	1678065	Identifier	jump		1677631	0					
ANR	1678066	Identifier	addr		1677631	1					
ANR	1678067	PtrMemberAccess	compiler -> size		1677631	1					
ANR	1678068	Identifier	compiler		1677631	0					
ANR	1678069	Identifier	size		1677631	1					
ANR	1678070	ExpressionStatement	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )	2399:3:72347:72379	1677631	2	True				
ANR	1678071	CallExpression	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )		1677631	0					
ANR	1678072	Callee	FAIL_IF		1677631	0					
ANR	1678073	Identifier	FAIL_IF		1677631	0					
ANR	1678074	ArgumentList	JR_SOLO ( reg_map [ src_r ] )		1677631	1					
ANR	1678075	Argument	JR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1678076	CallExpression	JR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1678077	Callee	JR_SOLO		1677631	0					
ANR	1678078	Identifier	JR_SOLO		1677631	0					
ANR	1678079	ArgumentList	reg_map [ src_r ]		1677631	1					
ANR	1678080	Argument	reg_map [ src_r ]		1677631	0					
ANR	1678081	ArrayIndexing	reg_map [ src_r ]		1677631	0					
ANR	1678082	Identifier	reg_map		1677631	0					
ANR	1678083	Identifier	src_r		1677631	1					
ANR	1678084	ElseStatement	else		1677631	0					
ANR	1678085	CompoundStatement		61:9:1613:1613	1677631	0					
ANR	1678086	ExpressionStatement	jump -> addr = compiler -> size	2401:3:72395:72422	1677631	0	True				
ANR	1678087	AssignmentExpression	jump -> addr = compiler -> size		1677631	0		=			
ANR	1678088	PtrMemberAccess	jump -> addr		1677631	0					
ANR	1678089	Identifier	jump		1677631	0					
ANR	1678090	Identifier	addr		1677631	1					
ANR	1678091	PtrMemberAccess	compiler -> size		1677631	1					
ANR	1678092	Identifier	compiler		1677631	0					
ANR	1678093	Identifier	size		1677631	1					
ANR	1678094	ExpressionStatement	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )	2402:3:72427:72459	1677631	1	True				
ANR	1678095	CallExpression	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )		1677631	0					
ANR	1678096	Callee	FAIL_IF		1677631	0					
ANR	1678097	Identifier	FAIL_IF		1677631	0					
ANR	1678098	ArgumentList	JR_SOLO ( reg_map [ src_r ] )		1677631	1					
ANR	1678099	Argument	JR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1678100	CallExpression	JR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1678101	Callee	JR_SOLO		1677631	0					
ANR	1678102	Identifier	JR_SOLO		1677631	0					
ANR	1678103	ArgumentList	reg_map [ src_r ]		1677631	1					
ANR	1678104	Argument	reg_map [ src_r ]		1677631	0					
ANR	1678105	ArrayIndexing	reg_map [ src_r ]		1677631	0					
ANR	1678106	Identifier	reg_map		1677631	0					
ANR	1678107	Identifier	src_r		1677631	1					
ANR	1678108	ReturnStatement	return SLJIT_SUCCESS ;	2405:2:72468:72488	1677631	6	True				
ANR	1678109	Identifier	SLJIT_SUCCESS		1677631	0					
ANR	1678110	ElseStatement	else		1677631	0					
ANR	1678111	IfStatement	if ( src & SLJIT_MEM )		1677631	0					
ANR	1678112	Condition	src & SLJIT_MEM	2407:12:72503:72517	1677631	0	True				
ANR	1678113	BitAndExpression	src & SLJIT_MEM		1677631	0		&			
ANR	1678114	Identifier	src		1677631	0					
ANR	1678115	Identifier	SLJIT_MEM		1677631	1					
ANR	1678116	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	2408:2:72522:72607	1677631	1	True				
ANR	1678117	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1677631	0					
ANR	1678118	Callee	FAIL_IF		1677631	0					
ANR	1678119	Identifier	FAIL_IF		1677631	0					
ANR	1678120	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1677631	1					
ANR	1678121	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1677631	0					
ANR	1678122	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1677631	0					
ANR	1678123	Callee	emit_op		1677631	0					
ANR	1678124	Identifier	emit_op		1677631	0					
ANR	1678125	ArgumentList	compiler		1677631	1					
ANR	1678126	Argument	compiler		1677631	0					
ANR	1678127	Identifier	compiler		1677631	0					
ANR	1678128	Argument	SLJIT_MOV		1677631	1					
ANR	1678129	Identifier	SLJIT_MOV		1677631	0					
ANR	1678130	Argument	WORD_DATA		1677631	2					
ANR	1678131	Identifier	WORD_DATA		1677631	0					
ANR	1678132	Argument	TMP_REG2		1677631	3					
ANR	1678133	Identifier	TMP_REG2		1677631	0					
ANR	1678134	Argument	0		1677631	4					
ANR	1678135	PrimaryExpression	0		1677631	0					
ANR	1678136	Argument	TMP_REG1		1677631	5					
ANR	1678137	Identifier	TMP_REG1		1677631	0					
ANR	1678138	Argument	0		1677631	6					
ANR	1678139	PrimaryExpression	0		1677631	0					
ANR	1678140	Argument	src		1677631	7					
ANR	1678141	Identifier	src		1677631	0					
ANR	1678142	Argument	srcw		1677631	8					
ANR	1678143	Identifier	srcw		1677631	0					
ANR	1678144	ExpressionStatement	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )	2410:1:72611:72643	1677631	9	True				
ANR	1678145	CallExpression	FAIL_IF ( JR_SOLO ( reg_map [ src_r ] ) )		1677631	0					
ANR	1678146	Callee	FAIL_IF		1677631	0					
ANR	1678147	Identifier	FAIL_IF		1677631	0					
ANR	1678148	ArgumentList	JR_SOLO ( reg_map [ src_r ] )		1677631	1					
ANR	1678149	Argument	JR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1678150	CallExpression	JR_SOLO ( reg_map [ src_r ] )		1677631	0					
ANR	1678151	Callee	JR_SOLO		1677631	0					
ANR	1678152	Identifier	JR_SOLO		1677631	0					
ANR	1678153	ArgumentList	reg_map [ src_r ]		1677631	1					
ANR	1678154	Argument	reg_map [ src_r ]		1677631	0					
ANR	1678155	ArrayIndexing	reg_map [ src_r ]		1677631	0					
ANR	1678156	Identifier	reg_map		1677631	0					
ANR	1678157	Identifier	src_r		1677631	1					
ANR	1678158	IfStatement	if ( jump )		1677631	10					
ANR	1678159	Condition	jump	2412:5:72651:72654	1677631	0	True				
ANR	1678160	Identifier	jump		1677631	0					
ANR	1678161	ExpressionStatement	jump -> addr = compiler -> size	2413:2:72659:72686	1677631	1	True				
ANR	1678162	AssignmentExpression	jump -> addr = compiler -> size		1677631	0		=			
ANR	1678163	PtrMemberAccess	jump -> addr		1677631	0					
ANR	1678164	Identifier	jump		1677631	0					
ANR	1678165	Identifier	addr		1677631	1					
ANR	1678166	PtrMemberAccess	compiler -> size		1677631	1					
ANR	1678167	Identifier	compiler		1677631	0					
ANR	1678168	Identifier	size		1677631	1					
ANR	1678169	ReturnStatement	return SLJIT_SUCCESS ;	2415:1:72690:72710	1677631	11	True				
ANR	1678170	Identifier	SLJIT_SUCCESS		1677631	0					
ANR	1678171	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1677631	1					
ANR	1678172	Identifier	sljit_emit_ijump		1677631	2					
ANR	1678173	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1677631	3					
ANR	1678174	Parameter	struct sljit_compiler * compiler	2339:51:70699:70729	1677631	0	True				
ANR	1678175	ParameterType	struct sljit_compiler *		1677631	0					
ANR	1678176	Identifier	compiler		1677631	1					
ANR	1678177	Parameter	sljit_si type	2339:84:70732:70744	1677631	1	True				
ANR	1678178	ParameterType	sljit_si		1677631	0					
ANR	1678179	Identifier	type		1677631	1					
ANR	1678180	Parameter	sljit_si src	2339:99:70747:70758	1677631	2	True				
ANR	1678181	ParameterType	sljit_si		1677631	0					
ANR	1678182	Identifier	src		1677631	1					
ANR	1678183	Parameter	sljit_sw srcw	2339:113:70761:70773	1677631	3	True				
ANR	1678184	ParameterType	sljit_sw		1677631	0					
ANR	1678185	Identifier	srcw		1677631	1					
ANR	1678186	CFGEntryNode	ENTRY		1677631		True				
ANR	1678187	CFGExitNode	EXIT		1677631		True				
ANR	1678188	Symbol	TMP_REG2		1677631						
ANR	1678189	Symbol	ZERO		1677631						
ANR	1678190	Symbol	TMP_REG1		1677631						
ANR	1678191	Symbol	* jump		1677631						
ANR	1678192	Symbol	SLJIT_MOV		1677631						
ANR	1678193	Symbol	jump -> u		1677631						
ANR	1678194	Symbol	SLJIT_MEM		1677631						
ANR	1678195	Symbol	reg_map		1677631						
ANR	1678196	Symbol	JUMP_ADDR		1677631						
ANR	1678197	Symbol	* src_r		1677631						
ANR	1678198	Symbol	* compiler		1677631						
ANR	1678199	Symbol	type		1677631						
ANR	1678200	Symbol	* src		1677631						
ANR	1678201	Symbol	SLJIT_R0		1677631						
ANR	1678202	Symbol	SLJIT_IMM		1677631						
ANR	1678203	Symbol	SLJIT_FAST_CALL		1677631						
ANR	1678204	Symbol	compiler		1677631						
ANR	1678205	Symbol	TMP_REG2_mapped		1677631						
ANR	1678206	Symbol	ADDI_SOLO		1677631						
ANR	1678207	Symbol	src_r		1677631						
ANR	1678208	Symbol	emit_op		1677631						
ANR	1678209	Symbol	WORD_DATA		1677631						
ANR	1678210	Symbol	jump		1677631						
ANR	1678211	Symbol	* SLJIT_R0		1677631						
ANR	1678212	Symbol	ADD_SOLO		1677631						
ANR	1678213	Symbol	NULL		1677631						
ANR	1678214	Symbol	FAST_IS_REG		1677631						
ANR	1678215	Symbol	src		1677631						
ANR	1678216	Symbol	srcw		1677631						
ANR	1678217	Symbol	SLJIT_CALL0		1677631						
ANR	1678218	Symbol	jump -> addr		1677631						
ANR	1678219	Symbol	JR_SOLO		1677631						
ANR	1678220	Symbol	SLJIT_SUCCESS		1677631						
ANR	1678221	Symbol	ensure_abuf		1677631						
ANR	1678222	Symbol	* reg_map		1677631						
ANR	1678223	Symbol	IS_JAL		1677631						
ANR	1678224	Symbol	compiler -> size		1677631						
ANR	1678225	Symbol	jump -> u . target		1677631						
ANR	1678226	Symbol	* PIC_ADDR_REG		1677631						
ANR	1678227	Symbol	SLJIT_CALL1		1677631						
ANR	1678228	Symbol	emit_const		1677631						
ANR	1678229	Symbol	JALR_SOLO		1677631						
ANR	1678230	Symbol	PIC_ADDR_REG		1677631						
ANR	1678231	Function	sljit_emit_jump	2426:25:72887:74948							
ANR	1678232	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1678231	0					
ANR	1678233	CompoundStatement		2427:0:72971:74948	1678231	0					
ANR	1678234	IdentifierDeclStatement	struct sljit_jump * jump ;	2428:1:72974:72997	1678231	0	True				
ANR	1678235	IdentifierDecl	* jump		1678231	0					
ANR	1678236	IdentifierDeclType	struct sljit_jump *		1678231	0					
ANR	1678237	Identifier	jump		1678231	1					
ANR	1678238	IdentifierDeclStatement	sljit_ins inst ;	2429:1:73000:73014	1678231	1	True				
ANR	1678239	IdentifierDecl	inst		1678231	0					
ANR	1678240	IdentifierDeclType	sljit_ins		1678231	0					
ANR	1678241	Identifier	inst		1678231	1					
ANR	1678242	IdentifierDeclStatement	sljit_si flags = 0 ;	2430:1:73017:73035	1678231	2	True				
ANR	1678243	IdentifierDecl	flags = 0		1678231	0					
ANR	1678244	IdentifierDeclType	sljit_si		1678231	0					
ANR	1678245	Identifier	flags		1678231	1					
ANR	1678246	AssignmentExpression	flags = 0		1678231	2		=			
ANR	1678247	Identifier	flags		1678231	0					
ANR	1678248	PrimaryExpression	0		1678231	1					
ANR	1678249	ExpressionStatement	flush_buffer ( compiler )	2432:1:73039:73061	1678231	3	True				
ANR	1678250	CallExpression	flush_buffer ( compiler )		1678231	0					
ANR	1678251	Callee	flush_buffer		1678231	0					
ANR	1678252	Identifier	flush_buffer		1678231	0					
ANR	1678253	ArgumentList	compiler		1678231	1					
ANR	1678254	Argument	compiler		1678231	0					
ANR	1678255	Identifier	compiler		1678231	0					
ANR	1678256	ExpressionStatement	CHECK_ERROR_PTR ( )	2434:1:73065:73082	1678231	4	True				
ANR	1678257	CallExpression	CHECK_ERROR_PTR ( )		1678231	0					
ANR	1678258	Callee	CHECK_ERROR_PTR		1678231	0					
ANR	1678259	Identifier	CHECK_ERROR_PTR		1678231	0					
ANR	1678260	ArgumentList			1678231	1					
ANR	1678261	ExpressionStatement	"check_sljit_emit_jump ( compiler , type )"	2435:1:73085:73122	1678231	5	True				
ANR	1678262	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1678231	0					
ANR	1678263	Callee	check_sljit_emit_jump		1678231	0					
ANR	1678264	Identifier	check_sljit_emit_jump		1678231	0					
ANR	1678265	ArgumentList	compiler		1678231	1					
ANR	1678266	Argument	compiler		1678231	0					
ANR	1678267	Identifier	compiler		1678231	0					
ANR	1678268	Argument	type		1678231	1					
ANR	1678269	Identifier	type		1678231	0					
ANR	1678270	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2437:1:73126:73202	1678231	6	True				
ANR	1678271	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1678231	0		=			
ANR	1678272	Identifier	jump		1678231	0					
ANR	1678273	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1678231	1					
ANR	1678274	CastTarget	struct sljit_jump *		1678231	0					
ANR	1678275	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1678231	1					
ANR	1678276	Callee	ensure_abuf		1678231	0					
ANR	1678277	Identifier	ensure_abuf		1678231	0					
ANR	1678278	ArgumentList	compiler		1678231	1					
ANR	1678279	Argument	compiler		1678231	0					
ANR	1678280	Identifier	compiler		1678231	0					
ANR	1678281	Argument	sizeof ( struct sljit_jump )		1678231	1					
ANR	1678282	SizeofExpression	sizeof ( struct sljit_jump )		1678231	0					
ANR	1678283	Sizeof	sizeof		1678231	0					
ANR	1678284	SizeofOperand	struct sljit_jump		1678231	1					
ANR	1678285	ExpressionStatement	PTR_FAIL_IF ( ! jump )	2438:1:73205:73223	1678231	7	True				
ANR	1678286	CallExpression	PTR_FAIL_IF ( ! jump )		1678231	0					
ANR	1678287	Callee	PTR_FAIL_IF		1678231	0					
ANR	1678288	Identifier	PTR_FAIL_IF		1678231	0					
ANR	1678289	ArgumentList	! jump		1678231	1					
ANR	1678290	Argument	! jump		1678231	0					
ANR	1678291	UnaryOperationExpression	! jump		1678231	0					
ANR	1678292	UnaryOperator	!		1678231	0					
ANR	1678293	Identifier	jump		1678231	1					
ANR	1678294	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	2439:1:73226:73280	1678231	8	True				
ANR	1678295	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1678231	0					
ANR	1678296	Callee	set_jump		1678231	0					
ANR	1678297	Identifier	set_jump		1678231	0					
ANR	1678298	ArgumentList	jump		1678231	1					
ANR	1678299	Argument	jump		1678231	0					
ANR	1678300	Identifier	jump		1678231	0					
ANR	1678301	Argument	compiler		1678231	1					
ANR	1678302	Identifier	compiler		1678231	0					
ANR	1678303	Argument	type & SLJIT_REWRITABLE_JUMP		1678231	2					
ANR	1678304	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1678231	0		&			
ANR	1678305	Identifier	type		1678231	0					
ANR	1678306	Identifier	SLJIT_REWRITABLE_JUMP		1678231	1					
ANR	1678307	ExpressionStatement	type &= 0xff	2440:1:73283:73295	1678231	9	True				
ANR	1678308	AssignmentExpression	type &= 0xff		1678231	0		&=			
ANR	1678309	Identifier	type		1678231	0					
ANR	1678310	PrimaryExpression	0xff		1678231	1					
ANR	1678311	SwitchStatement	switch ( type )		1678231	10					
ANR	1678312	Condition	type	2442:9:73307:73310	1678231	0	True				
ANR	1678313	Identifier	type		1678231	0					
ANR	1678314	CompoundStatement		16:15:341:341	1678231	1					
ANR	1678315	Label	case SLJIT_C_EQUAL :	2443:1:73316:73334	1678231	0	True				
ANR	1678316	Identifier	SLJIT_C_EQUAL		1678231	0					
ANR	1678317	Label	case SLJIT_C_FLOAT_NOT_EQUAL :	2444:1:73337:73365	1678231	1	True				
ANR	1678318	Identifier	SLJIT_C_FLOAT_NOT_EQUAL		1678231	0					
ANR	1678319	ExpressionStatement	BR_NZ ( EQUAL_FLAG )	2445:2:73369:73386	1678231	2	True				
ANR	1678320	CallExpression	BR_NZ ( EQUAL_FLAG )		1678231	0					
ANR	1678321	Callee	BR_NZ		1678231	0					
ANR	1678322	Identifier	BR_NZ		1678231	0					
ANR	1678323	ArgumentList	EQUAL_FLAG		1678231	1					
ANR	1678324	Argument	EQUAL_FLAG		1678231	0					
ANR	1678325	Identifier	EQUAL_FLAG		1678231	0					
ANR	1678326	BreakStatement	break ;	2446:2:73390:73395	1678231	3	True				
ANR	1678327	Label	case SLJIT_C_NOT_EQUAL :	2447:1:73398:73420	1678231	4	True				
ANR	1678328	Identifier	SLJIT_C_NOT_EQUAL		1678231	0					
ANR	1678329	Label	case SLJIT_C_FLOAT_EQUAL :	2448:1:73423:73447	1678231	5	True				
ANR	1678330	Identifier	SLJIT_C_FLOAT_EQUAL		1678231	0					
ANR	1678331	ExpressionStatement	BR_Z ( EQUAL_FLAG )	2449:2:73451:73467	1678231	6	True				
ANR	1678332	CallExpression	BR_Z ( EQUAL_FLAG )		1678231	0					
ANR	1678333	Callee	BR_Z		1678231	0					
ANR	1678334	Identifier	BR_Z		1678231	0					
ANR	1678335	ArgumentList	EQUAL_FLAG		1678231	1					
ANR	1678336	Argument	EQUAL_FLAG		1678231	0					
ANR	1678337	Identifier	EQUAL_FLAG		1678231	0					
ANR	1678338	BreakStatement	break ;	2450:2:73471:73476	1678231	7	True				
ANR	1678339	Label	case SLJIT_C_LESS :	2451:1:73479:73496	1678231	8	True				
ANR	1678340	Identifier	SLJIT_C_LESS		1678231	0					
ANR	1678341	Label	case SLJIT_C_FLOAT_LESS :	2452:1:73499:73522	1678231	9	True				
ANR	1678342	Identifier	SLJIT_C_FLOAT_LESS		1678231	0					
ANR	1678343	ExpressionStatement	BR_Z ( ULESS_FLAG )	2453:2:73526:73542	1678231	10	True				
ANR	1678344	CallExpression	BR_Z ( ULESS_FLAG )		1678231	0					
ANR	1678345	Callee	BR_Z		1678231	0					
ANR	1678346	Identifier	BR_Z		1678231	0					
ANR	1678347	ArgumentList	ULESS_FLAG		1678231	1					
ANR	1678348	Argument	ULESS_FLAG		1678231	0					
ANR	1678349	Identifier	ULESS_FLAG		1678231	0					
ANR	1678350	BreakStatement	break ;	2454:2:73546:73551	1678231	11	True				
ANR	1678351	Label	case SLJIT_C_GREATER_EQUAL :	2455:1:73554:73580	1678231	12	True				
ANR	1678352	Identifier	SLJIT_C_GREATER_EQUAL		1678231	0					
ANR	1678353	Label	case SLJIT_C_FLOAT_GREATER_EQUAL :	2456:1:73583:73615	1678231	13	True				
ANR	1678354	Identifier	SLJIT_C_FLOAT_GREATER_EQUAL		1678231	0					
ANR	1678355	ExpressionStatement	BR_NZ ( ULESS_FLAG )	2457:2:73619:73636	1678231	14	True				
ANR	1678356	CallExpression	BR_NZ ( ULESS_FLAG )		1678231	0					
ANR	1678357	Callee	BR_NZ		1678231	0					
ANR	1678358	Identifier	BR_NZ		1678231	0					
ANR	1678359	ArgumentList	ULESS_FLAG		1678231	1					
ANR	1678360	Argument	ULESS_FLAG		1678231	0					
ANR	1678361	Identifier	ULESS_FLAG		1678231	0					
ANR	1678362	BreakStatement	break ;	2458:2:73640:73645	1678231	15	True				
ANR	1678363	Label	case SLJIT_C_GREATER :	2459:1:73648:73668	1678231	16	True				
ANR	1678364	Identifier	SLJIT_C_GREATER		1678231	0					
ANR	1678365	Label	case SLJIT_C_FLOAT_GREATER :	2460:1:73671:73697	1678231	17	True				
ANR	1678366	Identifier	SLJIT_C_FLOAT_GREATER		1678231	0					
ANR	1678367	ExpressionStatement	BR_Z ( UGREATER_FLAG )	2461:2:73701:73720	1678231	18	True				
ANR	1678368	CallExpression	BR_Z ( UGREATER_FLAG )		1678231	0					
ANR	1678369	Callee	BR_Z		1678231	0					
ANR	1678370	Identifier	BR_Z		1678231	0					
ANR	1678371	ArgumentList	UGREATER_FLAG		1678231	1					
ANR	1678372	Argument	UGREATER_FLAG		1678231	0					
ANR	1678373	Identifier	UGREATER_FLAG		1678231	0					
ANR	1678374	BreakStatement	break ;	2462:2:73724:73729	1678231	19	True				
ANR	1678375	Label	case SLJIT_C_LESS_EQUAL :	2463:1:73732:73755	1678231	20	True				
ANR	1678376	Identifier	SLJIT_C_LESS_EQUAL		1678231	0					
ANR	1678377	Label	case SLJIT_C_FLOAT_LESS_EQUAL :	2464:1:73758:73787	1678231	21	True				
ANR	1678378	Identifier	SLJIT_C_FLOAT_LESS_EQUAL		1678231	0					
ANR	1678379	ExpressionStatement	BR_NZ ( UGREATER_FLAG )	2465:2:73791:73811	1678231	22	True				
ANR	1678380	CallExpression	BR_NZ ( UGREATER_FLAG )		1678231	0					
ANR	1678381	Callee	BR_NZ		1678231	0					
ANR	1678382	Identifier	BR_NZ		1678231	0					
ANR	1678383	ArgumentList	UGREATER_FLAG		1678231	1					
ANR	1678384	Argument	UGREATER_FLAG		1678231	0					
ANR	1678385	Identifier	UGREATER_FLAG		1678231	0					
ANR	1678386	BreakStatement	break ;	2466:2:73815:73820	1678231	23	True				
ANR	1678387	Label	case SLJIT_C_SIG_LESS :	2467:1:73823:73844	1678231	24	True				
ANR	1678388	Identifier	SLJIT_C_SIG_LESS		1678231	0					
ANR	1678389	ExpressionStatement	BR_Z ( LESS_FLAG )	2468:2:73848:73863	1678231	25	True				
ANR	1678390	CallExpression	BR_Z ( LESS_FLAG )		1678231	0					
ANR	1678391	Callee	BR_Z		1678231	0					
ANR	1678392	Identifier	BR_Z		1678231	0					
ANR	1678393	ArgumentList	LESS_FLAG		1678231	1					
ANR	1678394	Argument	LESS_FLAG		1678231	0					
ANR	1678395	Identifier	LESS_FLAG		1678231	0					
ANR	1678396	BreakStatement	break ;	2469:2:73867:73872	1678231	26	True				
ANR	1678397	Label	case SLJIT_C_SIG_GREATER_EQUAL :	2470:1:73875:73905	1678231	27	True				
ANR	1678398	Identifier	SLJIT_C_SIG_GREATER_EQUAL		1678231	0					
ANR	1678399	ExpressionStatement	BR_NZ ( LESS_FLAG )	2471:2:73909:73925	1678231	28	True				
ANR	1678400	CallExpression	BR_NZ ( LESS_FLAG )		1678231	0					
ANR	1678401	Callee	BR_NZ		1678231	0					
ANR	1678402	Identifier	BR_NZ		1678231	0					
ANR	1678403	ArgumentList	LESS_FLAG		1678231	1					
ANR	1678404	Argument	LESS_FLAG		1678231	0					
ANR	1678405	Identifier	LESS_FLAG		1678231	0					
ANR	1678406	BreakStatement	break ;	2472:2:73929:73934	1678231	29	True				
ANR	1678407	Label	case SLJIT_C_SIG_GREATER :	2473:1:73937:73961	1678231	30	True				
ANR	1678408	Identifier	SLJIT_C_SIG_GREATER		1678231	0					
ANR	1678409	ExpressionStatement	BR_Z ( GREATER_FLAG )	2474:2:73965:73983	1678231	31	True				
ANR	1678410	CallExpression	BR_Z ( GREATER_FLAG )		1678231	0					
ANR	1678411	Callee	BR_Z		1678231	0					
ANR	1678412	Identifier	BR_Z		1678231	0					
ANR	1678413	ArgumentList	GREATER_FLAG		1678231	1					
ANR	1678414	Argument	GREATER_FLAG		1678231	0					
ANR	1678415	Identifier	GREATER_FLAG		1678231	0					
ANR	1678416	BreakStatement	break ;	2475:2:73987:73992	1678231	32	True				
ANR	1678417	Label	case SLJIT_C_SIG_LESS_EQUAL :	2476:1:73995:74022	1678231	33	True				
ANR	1678418	Identifier	SLJIT_C_SIG_LESS_EQUAL		1678231	0					
ANR	1678419	ExpressionStatement	BR_NZ ( GREATER_FLAG )	2477:2:74026:74045	1678231	34	True				
ANR	1678420	CallExpression	BR_NZ ( GREATER_FLAG )		1678231	0					
ANR	1678421	Callee	BR_NZ		1678231	0					
ANR	1678422	Identifier	BR_NZ		1678231	0					
ANR	1678423	ArgumentList	GREATER_FLAG		1678231	1					
ANR	1678424	Argument	GREATER_FLAG		1678231	0					
ANR	1678425	Identifier	GREATER_FLAG		1678231	0					
ANR	1678426	BreakStatement	break ;	2478:2:74049:74054	1678231	35	True				
ANR	1678427	Label	case SLJIT_C_OVERFLOW :	2479:1:74057:74078	1678231	36	True				
ANR	1678428	Identifier	SLJIT_C_OVERFLOW		1678231	0					
ANR	1678429	Label	case SLJIT_C_MUL_OVERFLOW :	2480:1:74081:74106	1678231	37	True				
ANR	1678430	Identifier	SLJIT_C_MUL_OVERFLOW		1678231	0					
ANR	1678431	ExpressionStatement	BR_Z ( OVERFLOW_FLAG )	2481:2:74110:74129	1678231	38	True				
ANR	1678432	CallExpression	BR_Z ( OVERFLOW_FLAG )		1678231	0					
ANR	1678433	Callee	BR_Z		1678231	0					
ANR	1678434	Identifier	BR_Z		1678231	0					
ANR	1678435	ArgumentList	OVERFLOW_FLAG		1678231	1					
ANR	1678436	Argument	OVERFLOW_FLAG		1678231	0					
ANR	1678437	Identifier	OVERFLOW_FLAG		1678231	0					
ANR	1678438	BreakStatement	break ;	2482:2:74133:74138	1678231	39	True				
ANR	1678439	Label	case SLJIT_C_NOT_OVERFLOW :	2483:1:74141:74166	1678231	40	True				
ANR	1678440	Identifier	SLJIT_C_NOT_OVERFLOW		1678231	0					
ANR	1678441	Label	case SLJIT_C_MUL_NOT_OVERFLOW :	2484:1:74169:74198	1678231	41	True				
ANR	1678442	Identifier	SLJIT_C_MUL_NOT_OVERFLOW		1678231	0					
ANR	1678443	ExpressionStatement	BR_NZ ( OVERFLOW_FLAG )	2485:2:74202:74222	1678231	42	True				
ANR	1678444	CallExpression	BR_NZ ( OVERFLOW_FLAG )		1678231	0					
ANR	1678445	Callee	BR_NZ		1678231	0					
ANR	1678446	Identifier	BR_NZ		1678231	0					
ANR	1678447	ArgumentList	OVERFLOW_FLAG		1678231	1					
ANR	1678448	Argument	OVERFLOW_FLAG		1678231	0					
ANR	1678449	Identifier	OVERFLOW_FLAG		1678231	0					
ANR	1678450	BreakStatement	break ;	2486:2:74226:74231	1678231	43	True				
ANR	1678451	Label	default :	2487:1:74234:74241	1678231	44	True				
ANR	1678452	Identifier	default		1678231	0					
ANR	1678453	ExpressionStatement	inst = 0	2489:2:74277:74285	1678231	45	True				
ANR	1678454	AssignmentExpression	inst = 0		1678231	0		=			
ANR	1678455	Identifier	inst		1678231	0					
ANR	1678456	PrimaryExpression	0		1678231	1					
ANR	1678457	BreakStatement	break ;	2490:2:74289:74294	1678231	46	True				
ANR	1678458	ExpressionStatement	jump -> flags |= flags	2493:1:74301:74321	1678231	11	True				
ANR	1678459	AssignmentExpression	jump -> flags |= flags		1678231	0		|=			
ANR	1678460	PtrMemberAccess	jump -> flags		1678231	0					
ANR	1678461	Identifier	jump		1678231	0					
ANR	1678462	Identifier	flags		1678231	1					
ANR	1678463	Identifier	flags		1678231	1					
ANR	1678464	IfStatement	if ( inst )		1678231	12					
ANR	1678465	Condition	inst	2495:5:74329:74332	1678231	0	True				
ANR	1678466	Identifier	inst		1678231	0					
ANR	1678467	CompoundStatement		69:11:1363:1363	1678231	1					
ANR	1678468	ExpressionStatement	inst = inst | ( ( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 ) )	2496:2:74339:74401	1678231	0	True				
ANR	1678469	AssignmentExpression	inst = inst | ( ( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 ) )		1678231	0		=			
ANR	1678470	Identifier	inst		1678231	0					
ANR	1678471	InclusiveOrExpression	inst | ( ( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 ) )		1678231	1		|			
ANR	1678472	Identifier	inst		1678231	0					
ANR	1678473	ConditionalExpression	( type <= SLJIT_JUMP ) ? BOFF_X1 ( 5 ) : BOFF_X1 ( 6 )		1678231	1					
ANR	1678474	Condition	type <= SLJIT_JUMP		1678231	0					
ANR	1678475	RelationalExpression	type <= SLJIT_JUMP		1678231	0		<=			
ANR	1678476	Identifier	type		1678231	0					
ANR	1678477	Identifier	SLJIT_JUMP		1678231	1					
ANR	1678478	CallExpression	BOFF_X1 ( 5 )		1678231	1					
ANR	1678479	Callee	BOFF_X1		1678231	0					
ANR	1678480	Identifier	BOFF_X1		1678231	0					
ANR	1678481	ArgumentList	5		1678231	1					
ANR	1678482	Argument	5		1678231	0					
ANR	1678483	PrimaryExpression	5		1678231	0					
ANR	1678484	CallExpression	BOFF_X1 ( 6 )		1678231	2					
ANR	1678485	Callee	BOFF_X1		1678231	0					
ANR	1678486	Identifier	BOFF_X1		1678231	0					
ANR	1678487	ArgumentList	6		1678231	1					
ANR	1678488	Argument	6		1678231	0					
ANR	1678489	PrimaryExpression	6		1678231	0					
ANR	1678490	ExpressionStatement	PTR_FAIL_IF ( PI ( inst ) )	2497:2:74405:74426	1678231	1	True				
ANR	1678491	CallExpression	PTR_FAIL_IF ( PI ( inst ) )		1678231	0					
ANR	1678492	Callee	PTR_FAIL_IF		1678231	0					
ANR	1678493	Identifier	PTR_FAIL_IF		1678231	0					
ANR	1678494	ArgumentList	PI ( inst )		1678231	1					
ANR	1678495	Argument	PI ( inst )		1678231	0					
ANR	1678496	CallExpression	PI ( inst )		1678231	0					
ANR	1678497	Callee	PI		1678231	0					
ANR	1678498	Identifier	PI		1678231	0					
ANR	1678499	ArgumentList	inst		1678231	1					
ANR	1678500	Argument	inst		1678231	0					
ANR	1678501	Identifier	inst		1678231	0					
ANR	1678502	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"	2500:1:74433:74489	1678231	13	True				
ANR	1678503	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_REG2_mapped , 0 , 1 ) )"		1678231	0					
ANR	1678504	Callee	PTR_FAIL_IF		1678231	0					
ANR	1678505	Identifier	PTR_FAIL_IF		1678231	0					
ANR	1678506	ArgumentList	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1678231	1					
ANR	1678507	Argument	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1678231	0					
ANR	1678508	CallExpression	"emit_const ( compiler , TMP_REG2_mapped , 0 , 1 )"		1678231	0					
ANR	1678509	Callee	emit_const		1678231	0					
ANR	1678510	Identifier	emit_const		1678231	0					
ANR	1678511	ArgumentList	compiler		1678231	1					
ANR	1678512	Argument	compiler		1678231	0					
ANR	1678513	Identifier	compiler		1678231	0					
ANR	1678514	Argument	TMP_REG2_mapped		1678231	1					
ANR	1678515	Identifier	TMP_REG2_mapped		1678231	0					
ANR	1678516	Argument	0		1678231	2					
ANR	1678517	PrimaryExpression	0		1678231	0					
ANR	1678518	Argument	1		1678231	3					
ANR	1678519	PrimaryExpression	1		1678231	0					
ANR	1678520	IfStatement	if ( type <= SLJIT_JUMP )		1678231	14					
ANR	1678521	Condition	type <= SLJIT_JUMP	2501:5:74496:74513	1678231	0	True				
ANR	1678522	RelationalExpression	type <= SLJIT_JUMP		1678231	0		<=			
ANR	1678523	Identifier	type		1678231	0					
ANR	1678524	Identifier	SLJIT_JUMP		1678231	1					
ANR	1678525	CompoundStatement		75:25:1544:1544	1678231	1					
ANR	1678526	ExpressionStatement	jump -> addr = compiler -> size	2502:2:74520:74547	1678231	0	True				
ANR	1678527	AssignmentExpression	jump -> addr = compiler -> size		1678231	0		=			
ANR	1678528	PtrMemberAccess	jump -> addr		1678231	0					
ANR	1678529	Identifier	jump		1678231	0					
ANR	1678530	Identifier	addr		1678231	1					
ANR	1678531	PtrMemberAccess	compiler -> size		1678231	1					
ANR	1678532	Identifier	compiler		1678231	0					
ANR	1678533	Identifier	size		1678231	1					
ANR	1678534	ExpressionStatement	PTR_FAIL_IF ( JR_SOLO ( TMP_REG2_mapped ) )	2503:2:74551:74588	1678231	1	True				
ANR	1678535	CallExpression	PTR_FAIL_IF ( JR_SOLO ( TMP_REG2_mapped ) )		1678231	0					
ANR	1678536	Callee	PTR_FAIL_IF		1678231	0					
ANR	1678537	Identifier	PTR_FAIL_IF		1678231	0					
ANR	1678538	ArgumentList	JR_SOLO ( TMP_REG2_mapped )		1678231	1					
ANR	1678539	Argument	JR_SOLO ( TMP_REG2_mapped )		1678231	0					
ANR	1678540	CallExpression	JR_SOLO ( TMP_REG2_mapped )		1678231	0					
ANR	1678541	Callee	JR_SOLO		1678231	0					
ANR	1678542	Identifier	JR_SOLO		1678231	0					
ANR	1678543	ArgumentList	TMP_REG2_mapped		1678231	1					
ANR	1678544	Argument	TMP_REG2_mapped		1678231	0					
ANR	1678545	Identifier	TMP_REG2_mapped		1678231	0					
ANR	1678546	ElseStatement	else		1678231	0					
ANR	1678547	CompoundStatement		78:8:1626:1626	1678231	0					
ANR	1678548	ExpressionStatement	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )	2505:2:74602:74671	1678231	0	True				
ANR	1678549	CallExpression	SLJIT_ASSERT ( reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2 )		1678231	0					
ANR	1678550	Callee	SLJIT_ASSERT		1678231	0					
ANR	1678551	Identifier	SLJIT_ASSERT		1678231	0					
ANR	1678552	ArgumentList	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1678231	1					
ANR	1678553	Argument	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1678231	0					
ANR	1678554	AndExpression	reg_map [ PIC_ADDR_REG ] == 16 && PIC_ADDR_REG == TMP_REG2		1678231	0		&&			
ANR	1678555	EqualityExpression	reg_map [ PIC_ADDR_REG ] == 16		1678231	0		==			
ANR	1678556	ArrayIndexing	reg_map [ PIC_ADDR_REG ]		1678231	0					
ANR	1678557	Identifier	reg_map		1678231	0					
ANR	1678558	Identifier	PIC_ADDR_REG		1678231	1					
ANR	1678559	PrimaryExpression	16		1678231	1					
ANR	1678560	EqualityExpression	PIC_ADDR_REG == TMP_REG2		1678231	1		==			
ANR	1678561	Identifier	PIC_ADDR_REG		1678231	0					
ANR	1678562	Identifier	TMP_REG2		1678231	1					
ANR	1678563	ExpressionStatement	jump -> flags |= IS_JAL | ( type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0 )	2507:2:74728:74801	1678231	1	True				
ANR	1678564	AssignmentExpression	jump -> flags |= IS_JAL | ( type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0 )		1678231	0		|=			
ANR	1678565	PtrMemberAccess	jump -> flags		1678231	0					
ANR	1678566	Identifier	jump		1678231	0					
ANR	1678567	Identifier	flags		1678231	1					
ANR	1678568	InclusiveOrExpression	IS_JAL | ( type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0 )		1678231	1		|			
ANR	1678569	Identifier	IS_JAL		1678231	0					
ANR	1678570	ConditionalExpression	type >= SLJIT_CALL0 ? SLJIT_REWRITABLE_JUMP : 0		1678231	1					
ANR	1678571	Condition	type >= SLJIT_CALL0		1678231	0					
ANR	1678572	RelationalExpression	type >= SLJIT_CALL0		1678231	0		>=			
ANR	1678573	Identifier	type		1678231	0					
ANR	1678574	Identifier	SLJIT_CALL0		1678231	1					
ANR	1678575	Identifier	SLJIT_REWRITABLE_JUMP		1678231	1					
ANR	1678576	PrimaryExpression	0		1678231	2					
ANR	1678577	ExpressionStatement	"PTR_FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"	2508:2:74805:74854	1678231	2	True				
ANR	1678578	CallExpression	"PTR_FAIL_IF ( ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO ) )"		1678231	0					
ANR	1678579	Callee	PTR_FAIL_IF		1678231	0					
ANR	1678580	Identifier	PTR_FAIL_IF		1678231	0					
ANR	1678581	ArgumentList	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1678231	1					
ANR	1678582	Argument	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1678231	0					
ANR	1678583	CallExpression	"ADD_SOLO ( 0 , reg_map [ SLJIT_R0 ] , ZERO )"		1678231	0					
ANR	1678584	Callee	ADD_SOLO		1678231	0					
ANR	1678585	Identifier	ADD_SOLO		1678231	0					
ANR	1678586	ArgumentList	0		1678231	1					
ANR	1678587	Argument	0		1678231	0					
ANR	1678588	PrimaryExpression	0		1678231	0					
ANR	1678589	Argument	reg_map [ SLJIT_R0 ]		1678231	1					
ANR	1678590	ArrayIndexing	reg_map [ SLJIT_R0 ]		1678231	0					
ANR	1678591	Identifier	reg_map		1678231	0					
ANR	1678592	Identifier	SLJIT_R0		1678231	1					
ANR	1678593	Argument	ZERO		1678231	2					
ANR	1678594	Identifier	ZERO		1678231	0					
ANR	1678595	ExpressionStatement	jump -> addr = compiler -> size	2509:2:74858:74885	1678231	3	True				
ANR	1678596	AssignmentExpression	jump -> addr = compiler -> size		1678231	0		=			
ANR	1678597	PtrMemberAccess	jump -> addr		1678231	0					
ANR	1678598	Identifier	jump		1678231	0					
ANR	1678599	Identifier	addr		1678231	1					
ANR	1678600	PtrMemberAccess	compiler -> size		1678231	1					
ANR	1678601	Identifier	compiler		1678231	0					
ANR	1678602	Identifier	size		1678231	1					
ANR	1678603	ExpressionStatement	PTR_FAIL_IF ( JALR_SOLO ( TMP_REG2_mapped ) )	2510:2:74889:74928	1678231	4	True				
ANR	1678604	CallExpression	PTR_FAIL_IF ( JALR_SOLO ( TMP_REG2_mapped ) )		1678231	0					
ANR	1678605	Callee	PTR_FAIL_IF		1678231	0					
ANR	1678606	Identifier	PTR_FAIL_IF		1678231	0					
ANR	1678607	ArgumentList	JALR_SOLO ( TMP_REG2_mapped )		1678231	1					
ANR	1678608	Argument	JALR_SOLO ( TMP_REG2_mapped )		1678231	0					
ANR	1678609	CallExpression	JALR_SOLO ( TMP_REG2_mapped )		1678231	0					
ANR	1678610	Callee	JALR_SOLO		1678231	0					
ANR	1678611	Identifier	JALR_SOLO		1678231	0					
ANR	1678612	ArgumentList	TMP_REG2_mapped		1678231	1					
ANR	1678613	Argument	TMP_REG2_mapped		1678231	0					
ANR	1678614	Identifier	TMP_REG2_mapped		1678231	0					
ANR	1678615	ReturnStatement	return jump ;	2513:1:74935:74946	1678231	15	True				
ANR	1678616	Identifier	jump		1678231	0					
ANR	1678617	ReturnType	struct sljit_jump *		1678231	1					
ANR	1678618	Identifier	sljit_emit_jump		1678231	2					
ANR	1678619	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1678231	3					
ANR	1678620	Parameter	struct sljit_compiler * compiler	2426:61:72923:72953	1678231	0	True				
ANR	1678621	ParameterType	struct sljit_compiler *		1678231	0					
ANR	1678622	Identifier	compiler		1678231	1					
ANR	1678623	Parameter	sljit_si type	2426:94:72956:72968	1678231	1	True				
ANR	1678624	ParameterType	sljit_si		1678231	0					
ANR	1678625	Identifier	type		1678231	1					
ANR	1678626	CFGEntryNode	ENTRY		1678231		True				
ANR	1678627	CFGExitNode	EXIT		1678231		True				
ANR	1678628	Symbol	EQUAL_FLAG		1678231						
ANR	1678629	Symbol	TMP_REG2		1678231						
ANR	1678630	Symbol	ZERO		1678231						
ANR	1678631	Symbol	SLJIT_JUMP		1678231						
ANR	1678632	Symbol	* jump		1678231						
ANR	1678633	Symbol	flags		1678231						
ANR	1678634	Symbol	jump -> flags		1678231						
ANR	1678635	Symbol	reg_map		1678231						
ANR	1678636	Symbol	* compiler		1678231						
ANR	1678637	Symbol	type		1678231						
ANR	1678638	Symbol	SLJIT_R0		1678231						
ANR	1678639	Symbol	ULESS_FLAG		1678231						
ANR	1678640	Symbol	GREATER_FLAG		1678231						
ANR	1678641	Symbol	SLJIT_REWRITABLE_JUMP		1678231						
ANR	1678642	Symbol	compiler		1678231						
ANR	1678643	Symbol	TMP_REG2_mapped		1678231						
ANR	1678644	Symbol	jump		1678231						
ANR	1678645	Symbol	* SLJIT_R0		1678231						
ANR	1678646	Symbol	ADD_SOLO		1678231						
ANR	1678647	Symbol	SLJIT_CALL0		1678231						
ANR	1678648	Symbol	UGREATER_FLAG		1678231						
ANR	1678649	Symbol	jump -> addr		1678231						
ANR	1678650	Symbol	JR_SOLO		1678231						
ANR	1678651	Symbol	ensure_abuf		1678231						
ANR	1678652	Symbol	* reg_map		1678231						
ANR	1678653	Symbol	BOFF_X1		1678231						
ANR	1678654	Symbol	IS_JAL		1678231						
ANR	1678655	Symbol	compiler -> size		1678231						
ANR	1678656	Symbol	inst		1678231						
ANR	1678657	Symbol	LESS_FLAG		1678231						
ANR	1678658	Symbol	* PIC_ADDR_REG		1678231						
ANR	1678659	Symbol	PI		1678231						
ANR	1678660	Symbol	emit_const		1678231						
ANR	1678661	Symbol	JALR_SOLO		1678231						
ANR	1678662	Symbol	OVERFLOW_FLAG		1678231						
ANR	1678663	Symbol	PIC_ADDR_REG		1678231						
ANR	1678664	Function	sljit_is_fpu_available	2516:0:74951:75027							
ANR	1678665	FunctionDef	sljit_is_fpu_available ()		1678664	0					
ANR	1678666	CompoundStatement		2517:0:75014:75027	1678664	0					
ANR	1678667	ReturnStatement	return 0 ;	2518:1:75017:75025	1678664	0	True				
ANR	1678668	PrimaryExpression	0		1678664	0					
ANR	1678669	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1678664	1					
ANR	1678670	Identifier	sljit_is_fpu_available		1678664	2					
ANR	1678671	ParameterList			1678664	3					
ANR	1678672	CFGEntryNode	ENTRY		1678664		True				
ANR	1678673	CFGExitNode	EXIT		1678664		True				
ANR	1678674	Function	sljit_emit_fop1	2521:0:75030:75208							
ANR	1678675	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1678674	0					
ANR	1678676	CompoundStatement		2522:0:75184:75208	1678674	0					
ANR	1678677	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2523:1:75187:75206	1678674	0	True				
ANR	1678678	CallExpression	SLJIT_ASSERT_STOP ( )		1678674	0					
ANR	1678679	Callee	SLJIT_ASSERT_STOP		1678674	0					
ANR	1678680	Identifier	SLJIT_ASSERT_STOP		1678674	0					
ANR	1678681	ArgumentList			1678674	1					
ANR	1678682	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1678674	1					
ANR	1678683	Identifier	sljit_emit_fop1		1678674	2					
ANR	1678684	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1678674	3					
ANR	1678685	Parameter	struct sljit_compiler * compiler	2521:50:75080:75110	1678674	0	True				
ANR	1678686	ParameterType	struct sljit_compiler *		1678674	0					
ANR	1678687	Identifier	compiler		1678674	1					
ANR	1678688	Parameter	sljit_si op	2521:83:75113:75123	1678674	1	True				
ANR	1678689	ParameterType	sljit_si		1678674	0					
ANR	1678690	Identifier	op		1678674	1					
ANR	1678691	Parameter	sljit_si dst	2521:96:75126:75137	1678674	2	True				
ANR	1678692	ParameterType	sljit_si		1678674	0					
ANR	1678693	Identifier	dst		1678674	1					
ANR	1678694	Parameter	sljit_sw dstw	2521:110:75140:75152	1678674	3	True				
ANR	1678695	ParameterType	sljit_sw		1678674	0					
ANR	1678696	Identifier	dstw		1678674	1					
ANR	1678697	Parameter	sljit_si src	2521:125:75155:75166	1678674	4	True				
ANR	1678698	ParameterType	sljit_si		1678674	0					
ANR	1678699	Identifier	src		1678674	1					
ANR	1678700	Parameter	sljit_sw srcw	2521:139:75169:75181	1678674	5	True				
ANR	1678701	ParameterType	sljit_sw		1678674	0					
ANR	1678702	Identifier	srcw		1678674	1					
ANR	1678703	CFGEntryNode	ENTRY		1678674		True				
ANR	1678704	CFGExitNode	EXIT		1678674		True				
ANR	1678705	Symbol	op		1678674						
ANR	1678706	Symbol	dst		1678674						
ANR	1678707	Symbol	src		1678674						
ANR	1678708	Symbol	srcw		1678674						
ANR	1678709	Symbol	compiler		1678674						
ANR	1678710	Symbol	dstw		1678674						
ANR	1678711	Function	sljit_emit_fop2	2526:0:75211:75422							
ANR	1678712	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1678711	0					
ANR	1678713	CompoundStatement		2527:0:75398:75422	1678711	0					
ANR	1678714	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2528:1:75401:75420	1678711	0	True				
ANR	1678715	CallExpression	SLJIT_ASSERT_STOP ( )		1678711	0					
ANR	1678716	Callee	SLJIT_ASSERT_STOP		1678711	0					
ANR	1678717	Identifier	SLJIT_ASSERT_STOP		1678711	0					
ANR	1678718	ArgumentList			1678711	1					
ANR	1678719	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1678711	1					
ANR	1678720	Identifier	sljit_emit_fop2		1678711	2					
ANR	1678721	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1678711	3					
ANR	1678722	Parameter	struct sljit_compiler * compiler	2526:50:75261:75291	1678711	0	True				
ANR	1678723	ParameterType	struct sljit_compiler *		1678711	0					
ANR	1678724	Identifier	compiler		1678711	1					
ANR	1678725	Parameter	sljit_si op	2526:83:75294:75304	1678711	1	True				
ANR	1678726	ParameterType	sljit_si		1678711	0					
ANR	1678727	Identifier	op		1678711	1					
ANR	1678728	Parameter	sljit_si dst	2526:96:75307:75318	1678711	2	True				
ANR	1678729	ParameterType	sljit_si		1678711	0					
ANR	1678730	Identifier	dst		1678711	1					
ANR	1678731	Parameter	sljit_sw dstw	2526:110:75321:75333	1678711	3	True				
ANR	1678732	ParameterType	sljit_sw		1678711	0					
ANR	1678733	Identifier	dstw		1678711	1					
ANR	1678734	Parameter	sljit_si src1	2526:125:75336:75348	1678711	4	True				
ANR	1678735	ParameterType	sljit_si		1678711	0					
ANR	1678736	Identifier	src1		1678711	1					
ANR	1678737	Parameter	sljit_sw src1w	2526:140:75351:75364	1678711	5	True				
ANR	1678738	ParameterType	sljit_sw		1678711	0					
ANR	1678739	Identifier	src1w		1678711	1					
ANR	1678740	Parameter	sljit_si src2	2526:156:75367:75379	1678711	6	True				
ANR	1678741	ParameterType	sljit_si		1678711	0					
ANR	1678742	Identifier	src2		1678711	1					
ANR	1678743	Parameter	sljit_sw src2w	2526:171:75382:75395	1678711	7	True				
ANR	1678744	ParameterType	sljit_sw		1678711	0					
ANR	1678745	Identifier	src2w		1678711	1					
ANR	1678746	CFGEntryNode	ENTRY		1678711		True				
ANR	1678747	CFGExitNode	EXIT		1678711		True				
ANR	1678748	Symbol	src2w		1678711						
ANR	1678749	Symbol	op		1678711						
ANR	1678750	Symbol	src1w		1678711						
ANR	1678751	Symbol	dst		1678711						
ANR	1678752	Symbol	src1		1678711						
ANR	1678753	Symbol	src2		1678711						
ANR	1678754	Symbol	compiler		1678711						
ANR	1678755	Symbol	dstw		1678711						
ANR	1678756	Function	sljit_emit_const	2531:25:75450:76127							
ANR	1678757	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1678756	0					
ANR	1678758	CompoundStatement		2532:0:75571:76127	1678756	0					
ANR	1678759	IdentifierDeclStatement	struct sljit_const * const_ ;	2533:1:75574:75600	1678756	0	True				
ANR	1678760	IdentifierDecl	* const_		1678756	0					
ANR	1678761	IdentifierDeclType	struct sljit_const *		1678756	0					
ANR	1678762	Identifier	const_		1678756	1					
ANR	1678763	IdentifierDeclStatement	sljit_si reg ;	2534:1:75603:75615	1678756	1	True				
ANR	1678764	IdentifierDecl	reg		1678756	0					
ANR	1678765	IdentifierDeclType	sljit_si		1678756	0					
ANR	1678766	Identifier	reg		1678756	1					
ANR	1678767	ExpressionStatement	flush_buffer ( compiler )	2536:1:75619:75641	1678756	2	True				
ANR	1678768	CallExpression	flush_buffer ( compiler )		1678756	0					
ANR	1678769	Callee	flush_buffer		1678756	0					
ANR	1678770	Identifier	flush_buffer		1678756	0					
ANR	1678771	ArgumentList	compiler		1678756	1					
ANR	1678772	Argument	compiler		1678756	0					
ANR	1678773	Identifier	compiler		1678756	0					
ANR	1678774	ExpressionStatement	CHECK_ERROR_PTR ( )	2538:1:75645:75662	1678756	3	True				
ANR	1678775	CallExpression	CHECK_ERROR_PTR ( )		1678756	0					
ANR	1678776	Callee	CHECK_ERROR_PTR		1678756	0					
ANR	1678777	Identifier	CHECK_ERROR_PTR		1678756	0					
ANR	1678778	ArgumentList			1678756	1					
ANR	1678779	ExpressionStatement	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"	2539:1:75665:75720	1678756	4	True				
ANR	1678780	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1678756	0					
ANR	1678781	Callee	check_sljit_emit_const		1678756	0					
ANR	1678782	Identifier	check_sljit_emit_const		1678756	0					
ANR	1678783	ArgumentList	compiler		1678756	1					
ANR	1678784	Argument	compiler		1678756	0					
ANR	1678785	Identifier	compiler		1678756	0					
ANR	1678786	Argument	dst		1678756	1					
ANR	1678787	Identifier	dst		1678756	0					
ANR	1678788	Argument	dstw		1678756	2					
ANR	1678789	Identifier	dstw		1678756	0					
ANR	1678790	Argument	init_value		1678756	3					
ANR	1678791	Identifier	init_value		1678756	0					
ANR	1678792	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2540:1:75723:75753	1678756	5	True				
ANR	1678793	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1678756	0					
ANR	1678794	Callee	ADJUST_LOCAL_OFFSET		1678756	0					
ANR	1678795	Identifier	ADJUST_LOCAL_OFFSET		1678756	0					
ANR	1678796	ArgumentList	dst		1678756	1					
ANR	1678797	Argument	dst		1678756	0					
ANR	1678798	Identifier	dst		1678756	0					
ANR	1678799	Argument	dstw		1678756	1					
ANR	1678800	Identifier	dstw		1678756	0					
ANR	1678801	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2542:1:75757:75837	1678756	6	True				
ANR	1678802	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1678756	0		=			
ANR	1678803	Identifier	const_		1678756	0					
ANR	1678804	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1678756	1					
ANR	1678805	CastTarget	struct sljit_const *		1678756	0					
ANR	1678806	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1678756	1					
ANR	1678807	Callee	ensure_abuf		1678756	0					
ANR	1678808	Identifier	ensure_abuf		1678756	0					
ANR	1678809	ArgumentList	compiler		1678756	1					
ANR	1678810	Argument	compiler		1678756	0					
ANR	1678811	Identifier	compiler		1678756	0					
ANR	1678812	Argument	sizeof ( struct sljit_const )		1678756	1					
ANR	1678813	SizeofExpression	sizeof ( struct sljit_const )		1678756	0					
ANR	1678814	Sizeof	sizeof		1678756	0					
ANR	1678815	SizeofOperand	struct sljit_const		1678756	1					
ANR	1678816	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2543:1:75840:75860	1678756	7	True				
ANR	1678817	CallExpression	PTR_FAIL_IF ( ! const_ )		1678756	0					
ANR	1678818	Callee	PTR_FAIL_IF		1678756	0					
ANR	1678819	Identifier	PTR_FAIL_IF		1678756	0					
ANR	1678820	ArgumentList	! const_		1678756	1					
ANR	1678821	Argument	! const_		1678756	0					
ANR	1678822	UnaryOperationExpression	! const_		1678756	0					
ANR	1678823	UnaryOperator	!		1678756	0					
ANR	1678824	Identifier	const_		1678756	1					
ANR	1678825	ExpressionStatement	"set_const ( const_ , compiler )"	2544:1:75863:75890	1678756	8	True				
ANR	1678826	CallExpression	"set_const ( const_ , compiler )"		1678756	0					
ANR	1678827	Callee	set_const		1678756	0					
ANR	1678828	Identifier	set_const		1678756	0					
ANR	1678829	ArgumentList	const_		1678756	1					
ANR	1678830	Argument	const_		1678756	0					
ANR	1678831	Identifier	const_		1678756	0					
ANR	1678832	Argument	compiler		1678756	1					
ANR	1678833	Identifier	compiler		1678756	0					
ANR	1678834	ExpressionStatement	reg = FAST_IS_REG ( dst ) ? dst : TMP_REG2	2546:1:75894:75933	1678756	9	True				
ANR	1678835	AssignmentExpression	reg = FAST_IS_REG ( dst ) ? dst : TMP_REG2		1678756	0		=			
ANR	1678836	Identifier	reg		1678756	0					
ANR	1678837	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG2		1678756	1					
ANR	1678838	Condition	FAST_IS_REG ( dst )		1678756	0					
ANR	1678839	CallExpression	FAST_IS_REG ( dst )		1678756	0					
ANR	1678840	Callee	FAST_IS_REG		1678756	0					
ANR	1678841	Identifier	FAST_IS_REG		1678756	0					
ANR	1678842	ArgumentList	dst		1678756	1					
ANR	1678843	Argument	dst		1678756	0					
ANR	1678844	Identifier	dst		1678756	0					
ANR	1678845	Identifier	dst		1678756	1					
ANR	1678846	Identifier	TMP_REG2		1678756	2					
ANR	1678847	ExpressionStatement	"PTR_FAIL_IF ( emit_const_64 ( compiler , reg , init_value , 1 ) )"	2548:1:75937:75993	1678756	10	True				
ANR	1678848	CallExpression	"PTR_FAIL_IF ( emit_const_64 ( compiler , reg , init_value , 1 ) )"		1678756	0					
ANR	1678849	Callee	PTR_FAIL_IF		1678756	0					
ANR	1678850	Identifier	PTR_FAIL_IF		1678756	0					
ANR	1678851	ArgumentList	"emit_const_64 ( compiler , reg , init_value , 1 )"		1678756	1					
ANR	1678852	Argument	"emit_const_64 ( compiler , reg , init_value , 1 )"		1678756	0					
ANR	1678853	CallExpression	"emit_const_64 ( compiler , reg , init_value , 1 )"		1678756	0					
ANR	1678854	Callee	emit_const_64		1678756	0					
ANR	1678855	Identifier	emit_const_64		1678756	0					
ANR	1678856	ArgumentList	compiler		1678756	1					
ANR	1678857	Argument	compiler		1678756	0					
ANR	1678858	Identifier	compiler		1678756	0					
ANR	1678859	Argument	reg		1678756	1					
ANR	1678860	Identifier	reg		1678756	0					
ANR	1678861	Argument	init_value		1678756	2					
ANR	1678862	Identifier	init_value		1678756	0					
ANR	1678863	Argument	1		1678756	3					
ANR	1678864	PrimaryExpression	1		1678756	0					
ANR	1678865	IfStatement	if ( dst & SLJIT_MEM )		1678756	11					
ANR	1678866	Condition	dst & SLJIT_MEM	2550:5:76001:76015	1678756	0	True				
ANR	1678867	BitAndExpression	dst & SLJIT_MEM		1678756	0		&			
ANR	1678868	Identifier	dst		1678756	0					
ANR	1678869	Identifier	SLJIT_MEM		1678756	1					
ANR	1678870	ExpressionStatement	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"	2551:2:76020:76109	1678756	1	True				
ANR	1678871	CallExpression	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"		1678756	0					
ANR	1678872	Callee	PTR_FAIL_IF		1678756	0					
ANR	1678873	Identifier	PTR_FAIL_IF		1678756	0					
ANR	1678874	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1678756	1					
ANR	1678875	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1678756	0					
ANR	1678876	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1678756	0					
ANR	1678877	Callee	emit_op		1678756	0					
ANR	1678878	Identifier	emit_op		1678756	0					
ANR	1678879	ArgumentList	compiler		1678756	1					
ANR	1678880	Argument	compiler		1678756	0					
ANR	1678881	Identifier	compiler		1678756	0					
ANR	1678882	Argument	SLJIT_MOV		1678756	1					
ANR	1678883	Identifier	SLJIT_MOV		1678756	0					
ANR	1678884	Argument	WORD_DATA		1678756	2					
ANR	1678885	Identifier	WORD_DATA		1678756	0					
ANR	1678886	Argument	dst		1678756	3					
ANR	1678887	Identifier	dst		1678756	0					
ANR	1678888	Argument	dstw		1678756	4					
ANR	1678889	Identifier	dstw		1678756	0					
ANR	1678890	Argument	TMP_REG1		1678756	5					
ANR	1678891	Identifier	TMP_REG1		1678756	0					
ANR	1678892	Argument	0		1678756	6					
ANR	1678893	PrimaryExpression	0		1678756	0					
ANR	1678894	Argument	TMP_REG2		1678756	7					
ANR	1678895	Identifier	TMP_REG2		1678756	0					
ANR	1678896	Argument	0		1678756	8					
ANR	1678897	PrimaryExpression	0		1678756	0					
ANR	1678898	ReturnStatement	return const_ ;	2552:1:76112:76125	1678756	12	True				
ANR	1678899	Identifier	const_		1678756	0					
ANR	1678900	ReturnType	struct sljit_const *		1678756	1					
ANR	1678901	Identifier	sljit_emit_const		1678756	2					
ANR	1678902	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1678756	3					
ANR	1678903	Parameter	struct sljit_compiler * compiler	2531:63:75488:75518	1678756	0	True				
ANR	1678904	ParameterType	struct sljit_compiler *		1678756	0					
ANR	1678905	Identifier	compiler		1678756	1					
ANR	1678906	Parameter	sljit_si dst	2531:96:75521:75532	1678756	1	True				
ANR	1678907	ParameterType	sljit_si		1678756	0					
ANR	1678908	Identifier	dst		1678756	1					
ANR	1678909	Parameter	sljit_sw dstw	2531:110:75535:75547	1678756	2	True				
ANR	1678910	ParameterType	sljit_sw		1678756	0					
ANR	1678911	Identifier	dstw		1678756	1					
ANR	1678912	Parameter	sljit_sw init_value	2531:125:75550:75568	1678756	3	True				
ANR	1678913	ParameterType	sljit_sw		1678756	0					
ANR	1678914	Identifier	init_value		1678756	1					
ANR	1678915	CFGEntryNode	ENTRY		1678756		True				
ANR	1678916	CFGExitNode	EXIT		1678756		True				
ANR	1678917	Symbol	TMP_REG2		1678756						
ANR	1678918	Symbol	TMP_REG1		1678756						
ANR	1678919	Symbol	const_		1678756						
ANR	1678920	Symbol	FAST_IS_REG		1678756						
ANR	1678921	Symbol	dst		1678756						
ANR	1678922	Symbol	SLJIT_MOV		1678756						
ANR	1678923	Symbol	SLJIT_MEM		1678756						
ANR	1678924	Symbol	ensure_abuf		1678756						
ANR	1678925	Symbol	emit_const_64		1678756						
ANR	1678926	Symbol	reg		1678756						
ANR	1678927	Symbol	compiler		1678756						
ANR	1678928	Symbol	init_value		1678756						
ANR	1678929	Symbol	dstw		1678756						
ANR	1678930	Symbol	emit_op		1678756						
ANR	1678931	Symbol	WORD_DATA		1678756						
ANR	1678932	Function	sljit_set_jump_addr	2555:0:76130:76520							
ANR	1678933	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1678932	0					
ANR	1678934	CompoundStatement		2556:0:76214:76520	1678932	0					
ANR	1678935	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	2557:1:76217:76252	1678932	0	True				
ANR	1678936	IdentifierDecl	* inst = ( sljit_ins * ) addr		1678932	0					
ANR	1678937	IdentifierDeclType	sljit_ins *		1678932	0					
ANR	1678938	Identifier	inst		1678932	1					
ANR	1678939	AssignmentExpression	* inst = ( sljit_ins * ) addr		1678932	2		=			
ANR	1678940	Identifier	inst		1678932	0					
ANR	1678941	CastExpression	( sljit_ins * ) addr		1678932	1					
ANR	1678942	CastTarget	sljit_ins *		1678932	0					
ANR	1678943	Identifier	addr		1678932	1					
ANR	1678944	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 32 ) & 0xffff ) << 43 )	2559:1:76256:76332	1678932	1	True				
ANR	1678945	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 32 ) & 0xffff ) << 43 )		1678932	0		=			
ANR	1678946	ArrayIndexing	inst [ 0 ]		1678932	0					
ANR	1678947	Identifier	inst		1678932	0					
ANR	1678948	PrimaryExpression	0		1678932	1					
ANR	1678949	InclusiveOrExpression	( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 32 ) & 0xffff ) << 43 )		1678932	1		|			
ANR	1678950	BitAndExpression	inst [ 0 ] & ~ ( 0xFFFFL << 43 )		1678932	0		&			
ANR	1678951	ArrayIndexing	inst [ 0 ]		1678932	0					
ANR	1678952	Identifier	inst		1678932	0					
ANR	1678953	PrimaryExpression	0		1678932	1					
ANR	1678954	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1678932	1					
ANR	1678955	UnaryOperator	~		1678932	0					
ANR	1678956	ShiftExpression	0xFFFFL << 43		1678932	1		<<			
ANR	1678957	PrimaryExpression	0xFFFFL		1678932	0					
ANR	1678958	PrimaryExpression	43		1678932	1					
ANR	1678959	ShiftExpression	( ( new_addr >> 32 ) & 0xffff ) << 43		1678932	1		<<			
ANR	1678960	BitAndExpression	( new_addr >> 32 ) & 0xffff		1678932	0		&			
ANR	1678961	ShiftExpression	new_addr >> 32		1678932	0		>>			
ANR	1678962	Identifier	new_addr		1678932	0					
ANR	1678963	PrimaryExpression	32		1678932	1					
ANR	1678964	PrimaryExpression	0xffff		1678932	1					
ANR	1678965	PrimaryExpression	43		1678932	1					
ANR	1678966	ExpressionStatement	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 16 ) & 0xffff ) << 43 )	2560:1:76335:76411	1678932	2	True				
ANR	1678967	AssignmentExpression	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 16 ) & 0xffff ) << 43 )		1678932	0		=			
ANR	1678968	ArrayIndexing	inst [ 1 ]		1678932	0					
ANR	1678969	Identifier	inst		1678932	0					
ANR	1678970	PrimaryExpression	1		1678932	1					
ANR	1678971	InclusiveOrExpression	( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_addr >> 16 ) & 0xffff ) << 43 )		1678932	1		|			
ANR	1678972	BitAndExpression	inst [ 1 ] & ~ ( 0xFFFFL << 43 )		1678932	0		&			
ANR	1678973	ArrayIndexing	inst [ 1 ]		1678932	0					
ANR	1678974	Identifier	inst		1678932	0					
ANR	1678975	PrimaryExpression	1		1678932	1					
ANR	1678976	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1678932	1					
ANR	1678977	UnaryOperator	~		1678932	0					
ANR	1678978	ShiftExpression	0xFFFFL << 43		1678932	1		<<			
ANR	1678979	PrimaryExpression	0xFFFFL		1678932	0					
ANR	1678980	PrimaryExpression	43		1678932	1					
ANR	1678981	ShiftExpression	( ( new_addr >> 16 ) & 0xffff ) << 43		1678932	1		<<			
ANR	1678982	BitAndExpression	( new_addr >> 16 ) & 0xffff		1678932	0		&			
ANR	1678983	ShiftExpression	new_addr >> 16		1678932	0		>>			
ANR	1678984	Identifier	new_addr		1678932	0					
ANR	1678985	PrimaryExpression	16		1678932	1					
ANR	1678986	PrimaryExpression	0xffff		1678932	1					
ANR	1678987	PrimaryExpression	43		1678932	1					
ANR	1678988	ExpressionStatement	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_addr & 0xffff ) << 43 )	2561:1:76414:76482	1678932	3	True				
ANR	1678989	AssignmentExpression	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_addr & 0xffff ) << 43 )		1678932	0		=			
ANR	1678990	ArrayIndexing	inst [ 2 ]		1678932	0					
ANR	1678991	Identifier	inst		1678932	0					
ANR	1678992	PrimaryExpression	2		1678932	1					
ANR	1678993	InclusiveOrExpression	( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_addr & 0xffff ) << 43 )		1678932	1		|			
ANR	1678994	BitAndExpression	inst [ 2 ] & ~ ( 0xFFFFL << 43 )		1678932	0		&			
ANR	1678995	ArrayIndexing	inst [ 2 ]		1678932	0					
ANR	1678996	Identifier	inst		1678932	0					
ANR	1678997	PrimaryExpression	2		1678932	1					
ANR	1678998	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1678932	1					
ANR	1678999	UnaryOperator	~		1678932	0					
ANR	1679000	ShiftExpression	0xFFFFL << 43		1678932	1		<<			
ANR	1679001	PrimaryExpression	0xFFFFL		1678932	0					
ANR	1679002	PrimaryExpression	43		1678932	1					
ANR	1679003	ShiftExpression	( new_addr & 0xffff ) << 43		1678932	1		<<			
ANR	1679004	BitAndExpression	new_addr & 0xffff		1678932	0		&			
ANR	1679005	Identifier	new_addr		1678932	0					
ANR	1679006	PrimaryExpression	0xffff		1678932	1					
ANR	1679007	PrimaryExpression	43		1678932	1					
ANR	1679008	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 3 )"	2562:1:76485:76518	1678932	4	True				
ANR	1679009	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 3 )"		1678932	0					
ANR	1679010	Callee	SLJIT_CACHE_FLUSH		1678932	0					
ANR	1679011	Identifier	SLJIT_CACHE_FLUSH		1678932	0					
ANR	1679012	ArgumentList	inst		1678932	1					
ANR	1679013	Argument	inst		1678932	0					
ANR	1679014	Identifier	inst		1678932	0					
ANR	1679015	Argument	inst + 3		1678932	1					
ANR	1679016	AdditiveExpression	inst + 3		1678932	0		+			
ANR	1679017	Identifier	inst		1678932	0					
ANR	1679018	PrimaryExpression	3		1678932	1					
ANR	1679019	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1678932	1					
ANR	1679020	Identifier	sljit_set_jump_addr		1678932	2					
ANR	1679021	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1678932	3					
ANR	1679022	Parameter	sljit_uw addr	2555:50:76180:76192	1678932	0	True				
ANR	1679023	ParameterType	sljit_uw		1678932	0					
ANR	1679024	Identifier	addr		1678932	1					
ANR	1679025	Parameter	sljit_uw new_addr	2555:65:76195:76211	1678932	1	True				
ANR	1679026	ParameterType	sljit_uw		1678932	0					
ANR	1679027	Identifier	new_addr		1678932	1					
ANR	1679028	CFGEntryNode	ENTRY		1678932		True				
ANR	1679029	CFGExitNode	EXIT		1678932		True				
ANR	1679030	Symbol	* inst		1678932						
ANR	1679031	Symbol	inst		1678932						
ANR	1679032	Symbol	addr		1678932						
ANR	1679033	Symbol	new_addr		1678932						
ANR	1679034	Function	sljit_set_const	2565:0:76523:77012							
ANR	1679035	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1679034	0					
ANR	1679036	CompoundStatement		2566:0:76607:77012	1679034	0					
ANR	1679037	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	2567:1:76610:76645	1679034	0	True				
ANR	1679038	IdentifierDecl	* inst = ( sljit_ins * ) addr		1679034	0					
ANR	1679039	IdentifierDeclType	sljit_ins *		1679034	0					
ANR	1679040	Identifier	inst		1679034	1					
ANR	1679041	AssignmentExpression	* inst = ( sljit_ins * ) addr		1679034	2		=			
ANR	1679042	Identifier	inst		1679034	0					
ANR	1679043	CastExpression	( sljit_ins * ) addr		1679034	1					
ANR	1679044	CastTarget	sljit_ins *		1679034	0					
ANR	1679045	Identifier	addr		1679034	1					
ANR	1679046	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 48 ) & 0xFFFFL ) << 43 )	2569:1:76649:76730	1679034	1	True				
ANR	1679047	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 48 ) & 0xFFFFL ) << 43 )		1679034	0		=			
ANR	1679048	ArrayIndexing	inst [ 0 ]		1679034	0					
ANR	1679049	Identifier	inst		1679034	0					
ANR	1679050	PrimaryExpression	0		1679034	1					
ANR	1679051	InclusiveOrExpression	( inst [ 0 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 48 ) & 0xFFFFL ) << 43 )		1679034	1		|			
ANR	1679052	BitAndExpression	inst [ 0 ] & ~ ( 0xFFFFL << 43 )		1679034	0		&			
ANR	1679053	ArrayIndexing	inst [ 0 ]		1679034	0					
ANR	1679054	Identifier	inst		1679034	0					
ANR	1679055	PrimaryExpression	0		1679034	1					
ANR	1679056	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1679034	1					
ANR	1679057	UnaryOperator	~		1679034	0					
ANR	1679058	ShiftExpression	0xFFFFL << 43		1679034	1		<<			
ANR	1679059	PrimaryExpression	0xFFFFL		1679034	0					
ANR	1679060	PrimaryExpression	43		1679034	1					
ANR	1679061	ShiftExpression	( ( new_constant >> 48 ) & 0xFFFFL ) << 43		1679034	1		<<			
ANR	1679062	BitAndExpression	( new_constant >> 48 ) & 0xFFFFL		1679034	0		&			
ANR	1679063	ShiftExpression	new_constant >> 48		1679034	0		>>			
ANR	1679064	Identifier	new_constant		1679034	0					
ANR	1679065	PrimaryExpression	48		1679034	1					
ANR	1679066	PrimaryExpression	0xFFFFL		1679034	1					
ANR	1679067	PrimaryExpression	43		1679034	1					
ANR	1679068	ExpressionStatement	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 32 ) & 0xFFFFL ) << 43 )	2570:1:76733:76814	1679034	2	True				
ANR	1679069	AssignmentExpression	inst [ 1 ] = ( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 32 ) & 0xFFFFL ) << 43 )		1679034	0		=			
ANR	1679070	ArrayIndexing	inst [ 1 ]		1679034	0					
ANR	1679071	Identifier	inst		1679034	0					
ANR	1679072	PrimaryExpression	1		1679034	1					
ANR	1679073	InclusiveOrExpression	( inst [ 1 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 32 ) & 0xFFFFL ) << 43 )		1679034	1		|			
ANR	1679074	BitAndExpression	inst [ 1 ] & ~ ( 0xFFFFL << 43 )		1679034	0		&			
ANR	1679075	ArrayIndexing	inst [ 1 ]		1679034	0					
ANR	1679076	Identifier	inst		1679034	0					
ANR	1679077	PrimaryExpression	1		1679034	1					
ANR	1679078	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1679034	1					
ANR	1679079	UnaryOperator	~		1679034	0					
ANR	1679080	ShiftExpression	0xFFFFL << 43		1679034	1		<<			
ANR	1679081	PrimaryExpression	0xFFFFL		1679034	0					
ANR	1679082	PrimaryExpression	43		1679034	1					
ANR	1679083	ShiftExpression	( ( new_constant >> 32 ) & 0xFFFFL ) << 43		1679034	1		<<			
ANR	1679084	BitAndExpression	( new_constant >> 32 ) & 0xFFFFL		1679034	0		&			
ANR	1679085	ShiftExpression	new_constant >> 32		1679034	0		>>			
ANR	1679086	Identifier	new_constant		1679034	0					
ANR	1679087	PrimaryExpression	32		1679034	1					
ANR	1679088	PrimaryExpression	0xFFFFL		1679034	1					
ANR	1679089	PrimaryExpression	43		1679034	1					
ANR	1679090	ExpressionStatement	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 16 ) & 0xFFFFL ) << 43 )	2571:1:76817:76898	1679034	3	True				
ANR	1679091	AssignmentExpression	inst [ 2 ] = ( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 16 ) & 0xFFFFL ) << 43 )		1679034	0		=			
ANR	1679092	ArrayIndexing	inst [ 2 ]		1679034	0					
ANR	1679093	Identifier	inst		1679034	0					
ANR	1679094	PrimaryExpression	2		1679034	1					
ANR	1679095	InclusiveOrExpression	( inst [ 2 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( ( new_constant >> 16 ) & 0xFFFFL ) << 43 )		1679034	1		|			
ANR	1679096	BitAndExpression	inst [ 2 ] & ~ ( 0xFFFFL << 43 )		1679034	0		&			
ANR	1679097	ArrayIndexing	inst [ 2 ]		1679034	0					
ANR	1679098	Identifier	inst		1679034	0					
ANR	1679099	PrimaryExpression	2		1679034	1					
ANR	1679100	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1679034	1					
ANR	1679101	UnaryOperator	~		1679034	0					
ANR	1679102	ShiftExpression	0xFFFFL << 43		1679034	1		<<			
ANR	1679103	PrimaryExpression	0xFFFFL		1679034	0					
ANR	1679104	PrimaryExpression	43		1679034	1					
ANR	1679105	ShiftExpression	( ( new_constant >> 16 ) & 0xFFFFL ) << 43		1679034	1		<<			
ANR	1679106	BitAndExpression	( new_constant >> 16 ) & 0xFFFFL		1679034	0		&			
ANR	1679107	ShiftExpression	new_constant >> 16		1679034	0		>>			
ANR	1679108	Identifier	new_constant		1679034	0					
ANR	1679109	PrimaryExpression	16		1679034	1					
ANR	1679110	PrimaryExpression	0xFFFFL		1679034	1					
ANR	1679111	PrimaryExpression	43		1679034	1					
ANR	1679112	ExpressionStatement	inst [ 3 ] = ( inst [ 3 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_constant & 0xFFFFL ) << 43 )	2572:1:76901:76974	1679034	4	True				
ANR	1679113	AssignmentExpression	inst [ 3 ] = ( inst [ 3 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_constant & 0xFFFFL ) << 43 )		1679034	0		=			
ANR	1679114	ArrayIndexing	inst [ 3 ]		1679034	0					
ANR	1679115	Identifier	inst		1679034	0					
ANR	1679116	PrimaryExpression	3		1679034	1					
ANR	1679117	InclusiveOrExpression	( inst [ 3 ] & ~ ( 0xFFFFL << 43 ) ) | ( ( new_constant & 0xFFFFL ) << 43 )		1679034	1		|			
ANR	1679118	BitAndExpression	inst [ 3 ] & ~ ( 0xFFFFL << 43 )		1679034	0		&			
ANR	1679119	ArrayIndexing	inst [ 3 ]		1679034	0					
ANR	1679120	Identifier	inst		1679034	0					
ANR	1679121	PrimaryExpression	3		1679034	1					
ANR	1679122	UnaryOperationExpression	~ ( 0xFFFFL << 43 )		1679034	1					
ANR	1679123	UnaryOperator	~		1679034	0					
ANR	1679124	ShiftExpression	0xFFFFL << 43		1679034	1		<<			
ANR	1679125	PrimaryExpression	0xFFFFL		1679034	0					
ANR	1679126	PrimaryExpression	43		1679034	1					
ANR	1679127	ShiftExpression	( new_constant & 0xFFFFL ) << 43		1679034	1		<<			
ANR	1679128	BitAndExpression	new_constant & 0xFFFFL		1679034	0		&			
ANR	1679129	Identifier	new_constant		1679034	0					
ANR	1679130	PrimaryExpression	0xFFFFL		1679034	1					
ANR	1679131	PrimaryExpression	43		1679034	1					
ANR	1679132	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"	2573:1:76977:77010	1679034	5	True				
ANR	1679133	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 4 )"		1679034	0					
ANR	1679134	Callee	SLJIT_CACHE_FLUSH		1679034	0					
ANR	1679135	Identifier	SLJIT_CACHE_FLUSH		1679034	0					
ANR	1679136	ArgumentList	inst		1679034	1					
ANR	1679137	Argument	inst		1679034	0					
ANR	1679138	Identifier	inst		1679034	0					
ANR	1679139	Argument	inst + 4		1679034	1					
ANR	1679140	AdditiveExpression	inst + 4		1679034	0		+			
ANR	1679141	Identifier	inst		1679034	0					
ANR	1679142	PrimaryExpression	4		1679034	1					
ANR	1679143	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1679034	1					
ANR	1679144	Identifier	sljit_set_const		1679034	2					
ANR	1679145	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1679034	3					
ANR	1679146	Parameter	sljit_uw addr	2565:46:76569:76581	1679034	0	True				
ANR	1679147	ParameterType	sljit_uw		1679034	0					
ANR	1679148	Identifier	addr		1679034	1					
ANR	1679149	Parameter	sljit_sw new_constant	2565:61:76584:76604	1679034	1	True				
ANR	1679150	ParameterType	sljit_sw		1679034	0					
ANR	1679151	Identifier	new_constant		1679034	1					
ANR	1679152	CFGEntryNode	ENTRY		1679034		True				
ANR	1679153	CFGExitNode	EXIT		1679034		True				
ANR	1679154	Symbol	new_constant		1679034						
ANR	1679155	Symbol	* inst		1679034						
ANR	1679156	Symbol	inst		1679034						
ANR	1679157	Symbol	addr		1679034						
