command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1686670	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_sljit_sljitNativeX86_common.c								
ANR	1686671	Function	sljit_get_platform_name	27:0:1455:1559							
ANR	1686672	FunctionDef	sljit_get_platform_name ()		1686671	0					
ANR	1686673	CompoundStatement		28:0:1528:1559	1686671	0					
ANR	1686674	Statement	return	29:1:1531:1536	1686671	0	True				
ANR	1686675	Statement	"""x86"""	29:8:1538:1542	1686671	1	True				
ANR	1686676	ExpressionStatement	SLJIT_CPUINFO	29:14:1544:1557	1686671	2	True				
ANR	1686677	Identifier	SLJIT_CPUINFO		1686671	0					
ANR	1686678	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1686671	1					
ANR	1686679	Identifier	sljit_get_platform_name		1686671	2					
ANR	1686680	ParameterList			1686671	3					
ANR	1686681	CFGEntryNode	ENTRY		1686671		True				
ANR	1686682	CFGExitNode	EXIT		1686671		True				
ANR	1686683	DeclStmt									
ANR	1686684	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 3 ]	reg_map
ANR	1686685	DeclStmt									
ANR	1686686	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_map
ANR	1686687	DeclStmt									
ANR	1686688	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_lmap
ANR	1686689	DeclStmt									
ANR	1686690	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_map
ANR	1686691	DeclStmt									
ANR	1686692	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 5 ]	reg_lmap
ANR	1686693	DeclStmt									
ANR	1686694	Decl							sljit_si	sljit_si	cpu_has_sse2
ANR	1686695	DeclStmt									
ANR	1686696	Decl							sljit_si	sljit_si	cpu_has_cmov
ANR	1686697	Function	get_cpu_features	280:0:8320:9379							
ANR	1686698	FunctionDef	get_cpu_features ()		1686697	0					
ANR	1686699	CompoundStatement		281:0:8355:9379	1686697	0					
ANR	1686700	IdentifierDeclStatement	sljit_ui features ;	282:1:8358:8375	1686697	0	True				
ANR	1686701	IdentifierDecl	features		1686697	0					
ANR	1686702	IdentifierDeclType	sljit_ui		1686697	0					
ANR	1686703	Identifier	features		1686697	1					
ANR	1686704	IdentifierDeclStatement	int CPUInfo [ 4 ] ;	286:1:8422:8436	1686697	1	True				
ANR	1686705	IdentifierDecl	CPUInfo [ 4 ]		1686697	0					
ANR	1686706	IdentifierDeclType	int [ 4 ]		1686697	0					
ANR	1686707	Identifier	CPUInfo		1686697	1					
ANR	1686708	PrimaryExpression	4		1686697	2					
ANR	1686709	ExpressionStatement	"__cpuid ( CPUInfo , 1 )"	287:1:8439:8458	1686697	2	True				
ANR	1686710	CallExpression	"__cpuid ( CPUInfo , 1 )"		1686697	0					
ANR	1686711	Callee	__cpuid		1686697	0					
ANR	1686712	Identifier	__cpuid		1686697	0					
ANR	1686713	ArgumentList	CPUInfo		1686697	1					
ANR	1686714	Argument	CPUInfo		1686697	0					
ANR	1686715	Identifier	CPUInfo		1686697	0					
ANR	1686716	Argument	1		1686697	1					
ANR	1686717	PrimaryExpression	1		1686697	0					
ANR	1686718	ExpressionStatement	features = ( sljit_ui ) CPUInfo [ 3 ]	288:1:8461:8492	1686697	3	True				
ANR	1686719	AssignmentExpression	features = ( sljit_ui ) CPUInfo [ 3 ]		1686697	0		=			
ANR	1686720	Identifier	features		1686697	0					
ANR	1686721	CastExpression	( sljit_ui ) CPUInfo [ 3 ]		1686697	1					
ANR	1686722	CastTarget	sljit_ui		1686697	0					
ANR	1686723	ArrayIndexing	CPUInfo [ 3 ]		1686697	1					
ANR	1686724	Identifier	CPUInfo		1686697	0					
ANR	1686725	PrimaryExpression	3		1686697	1					
ANR	1686726	ExpressionStatement	cpu_has_sse2 = ( features >> 26 ) & 0x1	326:1:9293:9330	1686697	4	True				
ANR	1686727	AssignmentExpression	cpu_has_sse2 = ( features >> 26 ) & 0x1		1686697	0		=			
ANR	1686728	Identifier	cpu_has_sse2		1686697	0					
ANR	1686729	BitAndExpression	( features >> 26 ) & 0x1		1686697	1		&			
ANR	1686730	ShiftExpression	features >> 26		1686697	0		>>			
ANR	1686731	Identifier	features		1686697	0					
ANR	1686732	PrimaryExpression	26		1686697	1					
ANR	1686733	PrimaryExpression	0x1		1686697	1					
ANR	1686734	ExpressionStatement	cpu_has_cmov = ( features >> 15 ) & 0x1	328:1:9340:9377	1686697	5	True				
ANR	1686735	AssignmentExpression	cpu_has_cmov = ( features >> 15 ) & 0x1		1686697	0		=			
ANR	1686736	Identifier	cpu_has_cmov		1686697	0					
ANR	1686737	BitAndExpression	( features >> 15 ) & 0x1		1686697	1		&			
ANR	1686738	ShiftExpression	features >> 15		1686697	0		>>			
ANR	1686739	Identifier	features		1686697	0					
ANR	1686740	PrimaryExpression	15		1686697	1					
ANR	1686741	PrimaryExpression	0x1		1686697	1					
ANR	1686742	ReturnType	static void		1686697	1					
ANR	1686743	Identifier	get_cpu_features		1686697	2					
ANR	1686744	ParameterList			1686697	3					
ANR	1686745	CFGEntryNode	ENTRY		1686697		True				
ANR	1686746	CFGExitNode	EXIT		1686697		True				
ANR	1686747	Symbol	features		1686697						
ANR	1686748	Symbol	cpu_has_sse2		1686697						
ANR	1686749	Symbol	CPUInfo		1686697						
ANR	1686750	Symbol	* CPUInfo		1686697						
ANR	1686751	Symbol	cpu_has_cmov		1686697						
ANR	1686752	Function	get_jump_code	331:0:9382:10354							
ANR	1686753	FunctionDef	get_jump_code (sljit_si type)		1686752	0					
ANR	1686754	CompoundStatement		332:0:9427:10354	1686752	0					
ANR	1686755	SwitchStatement	switch ( type )		1686752	0					
ANR	1686756	Condition	type	333:9:9438:9441	1686752	0	True				
ANR	1686757	Identifier	type		1686752	0					
ANR	1686758	CompoundStatement		2:15:16:16	1686752	1					
ANR	1686759	Label	case SLJIT_EQUAL :	334:1:9447:9463	1686752	0	True				
ANR	1686760	Identifier	SLJIT_EQUAL		1686752	0					
ANR	1686761	Label	case SLJIT_D_EQUAL :	335:1:9466:9484	1686752	1	True				
ANR	1686762	Identifier	SLJIT_D_EQUAL		1686752	0					
ANR	1686763	ReturnStatement	return 0x84 ;	336:2:9488:9508	1686752	2	True				
ANR	1686764	PrimaryExpression	0x84		1686752	0					
ANR	1686765	Label	case SLJIT_NOT_EQUAL :	338:1:9512:9532	1686752	3	True				
ANR	1686766	Identifier	SLJIT_NOT_EQUAL		1686752	0					
ANR	1686767	Label	case SLJIT_D_NOT_EQUAL :	339:1:9535:9557	1686752	4	True				
ANR	1686768	Identifier	SLJIT_D_NOT_EQUAL		1686752	0					
ANR	1686769	ReturnStatement	return 0x85 ;	340:2:9561:9582	1686752	5	True				
ANR	1686770	PrimaryExpression	0x85		1686752	0					
ANR	1686771	Label	case SLJIT_LESS :	342:1:9586:9601	1686752	6	True				
ANR	1686772	Identifier	SLJIT_LESS		1686752	0					
ANR	1686773	Label	case SLJIT_D_LESS :	343:1:9604:9621	1686752	7	True				
ANR	1686774	Identifier	SLJIT_D_LESS		1686752	0					
ANR	1686775	ReturnStatement	return 0x82 ;	344:2:9625:9645	1686752	8	True				
ANR	1686776	PrimaryExpression	0x82		1686752	0					
ANR	1686777	Label	case SLJIT_GREATER_EQUAL :	346:1:9649:9673	1686752	9	True				
ANR	1686778	Identifier	SLJIT_GREATER_EQUAL		1686752	0					
ANR	1686779	Label	case SLJIT_D_GREATER_EQUAL :	347:1:9676:9702	1686752	10	True				
ANR	1686780	Identifier	SLJIT_D_GREATER_EQUAL		1686752	0					
ANR	1686781	ReturnStatement	return 0x83 ;	348:2:9706:9727	1686752	11	True				
ANR	1686782	PrimaryExpression	0x83		1686752	0					
ANR	1686783	Label	case SLJIT_GREATER :	350:1:9731:9749	1686752	12	True				
ANR	1686784	Identifier	SLJIT_GREATER		1686752	0					
ANR	1686785	Label	case SLJIT_D_GREATER :	351:1:9752:9772	1686752	13	True				
ANR	1686786	Identifier	SLJIT_D_GREATER		1686752	0					
ANR	1686787	ReturnStatement	return 0x87 ;	352:2:9776:9798	1686752	14	True				
ANR	1686788	PrimaryExpression	0x87		1686752	0					
ANR	1686789	Label	case SLJIT_LESS_EQUAL :	354:1:9802:9823	1686752	15	True				
ANR	1686790	Identifier	SLJIT_LESS_EQUAL		1686752	0					
ANR	1686791	Label	case SLJIT_D_LESS_EQUAL :	355:1:9826:9849	1686752	16	True				
ANR	1686792	Identifier	SLJIT_D_LESS_EQUAL		1686752	0					
ANR	1686793	ReturnStatement	return 0x86 ;	356:2:9853:9874	1686752	17	True				
ANR	1686794	PrimaryExpression	0x86		1686752	0					
ANR	1686795	Label	case SLJIT_SIG_LESS :	358:1:9878:9897	1686752	18	True				
ANR	1686796	Identifier	SLJIT_SIG_LESS		1686752	0					
ANR	1686797	ReturnStatement	return 0x8c ;	359:2:9901:9921	1686752	19	True				
ANR	1686798	PrimaryExpression	0x8c		1686752	0					
ANR	1686799	Label	case SLJIT_SIG_GREATER_EQUAL :	361:1:9925:9953	1686752	20	True				
ANR	1686800	Identifier	SLJIT_SIG_GREATER_EQUAL		1686752	0					
ANR	1686801	ReturnStatement	return 0x8d ;	362:2:9957:9978	1686752	21	True				
ANR	1686802	PrimaryExpression	0x8d		1686752	0					
ANR	1686803	Label	case SLJIT_SIG_GREATER :	364:1:9982:10004	1686752	22	True				
ANR	1686804	Identifier	SLJIT_SIG_GREATER		1686752	0					
ANR	1686805	ReturnStatement	return 0x8f ;	365:2:10008:10030	1686752	23	True				
ANR	1686806	PrimaryExpression	0x8f		1686752	0					
ANR	1686807	Label	case SLJIT_SIG_LESS_EQUAL :	367:1:10034:10059	1686752	24	True				
ANR	1686808	Identifier	SLJIT_SIG_LESS_EQUAL		1686752	0					
ANR	1686809	ReturnStatement	return 0x8e ;	368:2:10063:10084	1686752	25	True				
ANR	1686810	PrimaryExpression	0x8e		1686752	0					
ANR	1686811	Label	case SLJIT_OVERFLOW :	370:1:10088:10107	1686752	26	True				
ANR	1686812	Identifier	SLJIT_OVERFLOW		1686752	0					
ANR	1686813	Label	case SLJIT_MUL_OVERFLOW :	371:1:10110:10133	1686752	27	True				
ANR	1686814	Identifier	SLJIT_MUL_OVERFLOW		1686752	0					
ANR	1686815	ReturnStatement	return 0x80 ;	372:2:10137:10157	1686752	28	True				
ANR	1686816	PrimaryExpression	0x80		1686752	0					
ANR	1686817	Label	case SLJIT_NOT_OVERFLOW :	374:1:10161:10184	1686752	29	True				
ANR	1686818	Identifier	SLJIT_NOT_OVERFLOW		1686752	0					
ANR	1686819	Label	case SLJIT_MUL_NOT_OVERFLOW :	375:1:10187:10214	1686752	30	True				
ANR	1686820	Identifier	SLJIT_MUL_NOT_OVERFLOW		1686752	0					
ANR	1686821	ReturnStatement	return 0x81 ;	376:2:10218:10239	1686752	31	True				
ANR	1686822	PrimaryExpression	0x81		1686752	0					
ANR	1686823	Label	case SLJIT_D_UNORDERED :	378:1:10243:10265	1686752	32	True				
ANR	1686824	Identifier	SLJIT_D_UNORDERED		1686752	0					
ANR	1686825	ReturnStatement	return 0x8a ;	379:2:10269:10289	1686752	33	True				
ANR	1686826	PrimaryExpression	0x8a		1686752	0					
ANR	1686827	Label	case SLJIT_D_ORDERED :	381:1:10293:10313	1686752	34	True				
ANR	1686828	Identifier	SLJIT_D_ORDERED		1686752	0					
ANR	1686829	ReturnStatement	return 0x8b ;	382:2:10317:10338	1686752	35	True				
ANR	1686830	PrimaryExpression	0x8b		1686752	0					
ANR	1686831	ReturnStatement	return 0 ;	384:1:10344:10352	1686752	1	True				
ANR	1686832	PrimaryExpression	0		1686752	0					
ANR	1686833	ReturnType	static sljit_ub		1686752	1					
ANR	1686834	Identifier	get_jump_code		1686752	2					
ANR	1686835	ParameterList	sljit_si type		1686752	3					
ANR	1686836	Parameter	sljit_si type	331:30:9412:9424	1686752	0	True				
ANR	1686837	ParameterType	sljit_si		1686752	0					
ANR	1686838	Identifier	type		1686752	1					
ANR	1686839	CFGEntryNode	ENTRY		1686752		True				
ANR	1686840	CFGExitNode	EXIT		1686752		True				
ANR	1686841	Symbol	type		1686752						
ANR	1686842	DeclStmt									
ANR	1686843	Decl							sljit_ub	"sljit_ub * ( struct sljit_jump * jump , sljit_ub * code_ptr , sljit_si type )"	generate_far_jump_code
ANR	1686844	DeclStmt									
ANR	1686845	Decl							sljit_ub	"sljit_ub * ( sljit_ub * code_ptr , sljit_sw addr , sljit_si type )"	generate_fixed_jump
ANR	1686846	Function	generate_near_jump_code	393:0:10612:11934							
ANR	1686847	FunctionDef	"generate_near_jump_code (struct sljit_jump * jump , sljit_ub * code_ptr , sljit_ub * code , sljit_si type)"		1686846	0					
ANR	1686848	CompoundStatement		394:0:10729:11934	1686846	0					
ANR	1686849	IdentifierDeclStatement	sljit_si short_jump ;	395:1:10732:10751	1686846	0	True				
ANR	1686850	IdentifierDecl	short_jump		1686846	0					
ANR	1686851	IdentifierDeclType	sljit_si		1686846	0					
ANR	1686852	Identifier	short_jump		1686846	1					
ANR	1686853	IdentifierDeclStatement	sljit_uw label_addr ;	396:1:10754:10773	1686846	1	True				
ANR	1686854	IdentifierDecl	label_addr		1686846	0					
ANR	1686855	IdentifierDeclType	sljit_uw		1686846	0					
ANR	1686856	Identifier	label_addr		1686846	1					
ANR	1686857	IfStatement	if ( jump -> flags & JUMP_LABEL )		1686846	2					
ANR	1686858	Condition	jump -> flags & JUMP_LABEL	398:5:10781:10804	1686846	0	True				
ANR	1686859	BitAndExpression	jump -> flags & JUMP_LABEL		1686846	0		&			
ANR	1686860	PtrMemberAccess	jump -> flags		1686846	0					
ANR	1686861	Identifier	jump		1686846	0					
ANR	1686862	Identifier	flags		1686846	1					
ANR	1686863	Identifier	JUMP_LABEL		1686846	1					
ANR	1686864	ExpressionStatement	label_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	399:2:10809:10860	1686846	1	True				
ANR	1686865	AssignmentExpression	label_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1686846	0		=			
ANR	1686866	Identifier	label_addr		1686846	0					
ANR	1686867	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1686846	1					
ANR	1686868	CastTarget	sljit_uw		1686846	0					
ANR	1686869	AdditiveExpression	code + jump -> u . label -> size		1686846	1		+			
ANR	1686870	Identifier	code		1686846	0					
ANR	1686871	PtrMemberAccess	jump -> u . label -> size		1686846	1					
ANR	1686872	MemberAccess	jump -> u . label		1686846	0					
ANR	1686873	PtrMemberAccess	jump -> u		1686846	0					
ANR	1686874	Identifier	jump		1686846	0					
ANR	1686875	Identifier	u		1686846	1					
ANR	1686876	Identifier	label		1686846	1					
ANR	1686877	Identifier	size		1686846	1					
ANR	1686878	ElseStatement	else		1686846	0					
ANR	1686879	ExpressionStatement	label_addr = jump -> u . target	401:2:10870:10897	1686846	0	True				
ANR	1686880	AssignmentExpression	label_addr = jump -> u . target		1686846	0		=			
ANR	1686881	Identifier	label_addr		1686846	0					
ANR	1686882	MemberAccess	jump -> u . target		1686846	1					
ANR	1686883	PtrMemberAccess	jump -> u		1686846	0					
ANR	1686884	Identifier	jump		1686846	0					
ANR	1686885	Identifier	u		1686846	1					
ANR	1686886	Identifier	target		1686846	1					
ANR	1686887	ExpressionStatement	short_jump = ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128 && ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127	402:1:10900:11014	1686846	3	True				
ANR	1686888	AssignmentExpression	short_jump = ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128 && ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127		1686846	0		=			
ANR	1686889	Identifier	short_jump		1686846	0					
ANR	1686890	AndExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128 && ( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127		1686846	1		&&			
ANR	1686891	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) >= - 128		1686846	0		>=			
ANR	1686892	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) )		1686846	0					
ANR	1686893	CastTarget	sljit_sw		1686846	0					
ANR	1686894	AdditiveExpression	label_addr - ( jump -> addr + 2 )		1686846	1		-			
ANR	1686895	Identifier	label_addr		1686846	0					
ANR	1686896	AdditiveExpression	jump -> addr + 2		1686846	1		+			
ANR	1686897	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1686898	Identifier	jump		1686846	0					
ANR	1686899	Identifier	addr		1686846	1					
ANR	1686900	PrimaryExpression	2		1686846	1					
ANR	1686901	UnaryOperationExpression	- 128		1686846	1					
ANR	1686902	UnaryOperator	-		1686846	0					
ANR	1686903	PrimaryExpression	128		1686846	1					
ANR	1686904	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) ) <= 127		1686846	1		<=			
ANR	1686905	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 2 ) )		1686846	0					
ANR	1686906	CastTarget	sljit_sw		1686846	0					
ANR	1686907	AdditiveExpression	label_addr - ( jump -> addr + 2 )		1686846	1		-			
ANR	1686908	Identifier	label_addr		1686846	0					
ANR	1686909	AdditiveExpression	jump -> addr + 2		1686846	1		+			
ANR	1686910	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1686911	Identifier	jump		1686846	0					
ANR	1686912	Identifier	addr		1686846	1					
ANR	1686913	PrimaryExpression	2		1686846	1					
ANR	1686914	PrimaryExpression	127		1686846	1					
ANR	1686915	IfStatement	if ( ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX || ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN )		1686846	4					
ANR	1686916	Condition	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX || ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN	405:5:11079:11194	1686846	0	True				
ANR	1686917	OrExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX || ( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN		1686846	0		||			
ANR	1686918	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) > HALFWORD_MAX		1686846	0		>			
ANR	1686919	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) )		1686846	0					
ANR	1686920	CastTarget	sljit_sw		1686846	0					
ANR	1686921	AdditiveExpression	label_addr - ( jump -> addr + 1 )		1686846	1		-			
ANR	1686922	Identifier	label_addr		1686846	0					
ANR	1686923	AdditiveExpression	jump -> addr + 1		1686846	1		+			
ANR	1686924	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1686925	Identifier	jump		1686846	0					
ANR	1686926	Identifier	addr		1686846	1					
ANR	1686927	PrimaryExpression	1		1686846	1					
ANR	1686928	Identifier	HALFWORD_MAX		1686846	1					
ANR	1686929	RelationalExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) ) < HALFWORD_MIN		1686846	1		<			
ANR	1686930	CastExpression	( sljit_sw ) ( label_addr - ( jump -> addr + 1 ) )		1686846	0					
ANR	1686931	CastTarget	sljit_sw		1686846	0					
ANR	1686932	AdditiveExpression	label_addr - ( jump -> addr + 1 )		1686846	1		-			
ANR	1686933	Identifier	label_addr		1686846	0					
ANR	1686934	AdditiveExpression	jump -> addr + 1		1686846	1		+			
ANR	1686935	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1686936	Identifier	jump		1686846	0					
ANR	1686937	Identifier	addr		1686846	1					
ANR	1686938	PrimaryExpression	1		1686846	1					
ANR	1686939	Identifier	HALFWORD_MIN		1686846	1					
ANR	1686940	ReturnStatement	"return generate_far_jump_code ( jump , code_ptr , type ) ;"	406:2:11199:11250	1686846	1	True				
ANR	1686941	CallExpression	"generate_far_jump_code ( jump , code_ptr , type )"		1686846	0					
ANR	1686942	Callee	generate_far_jump_code		1686846	0					
ANR	1686943	Identifier	generate_far_jump_code		1686846	0					
ANR	1686944	ArgumentList	jump		1686846	1					
ANR	1686945	Argument	jump		1686846	0					
ANR	1686946	Identifier	jump		1686846	0					
ANR	1686947	Argument	code_ptr		1686846	1					
ANR	1686948	Identifier	code_ptr		1686846	0					
ANR	1686949	Argument	type		1686846	2					
ANR	1686950	Identifier	type		1686846	0					
ANR	1686951	IfStatement	if ( type == SLJIT_JUMP )		1686846	5					
ANR	1686952	Condition	type == SLJIT_JUMP	409:5:11265:11282	1686846	0	True				
ANR	1686953	EqualityExpression	type == SLJIT_JUMP		1686846	0		==			
ANR	1686954	Identifier	type		1686846	0					
ANR	1686955	Identifier	SLJIT_JUMP		1686846	1					
ANR	1686956	CompoundStatement		16:25:555:555	1686846	1					
ANR	1686957	IfStatement	if ( short_jump )		1686846	0					
ANR	1686958	Condition	short_jump	410:6:11293:11302	1686846	0	True				
ANR	1686959	Identifier	short_jump		1686846	0					
ANR	1686960	ExpressionStatement	* code_ptr ++ = JMP_i8	411:3:11308:11328	1686846	1	True				
ANR	1686961	AssignmentExpression	* code_ptr ++ = JMP_i8		1686846	0		=			
ANR	1686962	UnaryOperationExpression	* code_ptr ++		1686846	0					
ANR	1686963	UnaryOperator	*		1686846	0					
ANR	1686964	PostIncDecOperationExpression	code_ptr ++		1686846	1					
ANR	1686965	Identifier	code_ptr		1686846	0					
ANR	1686966	IncDec	++		1686846	1					
ANR	1686967	Identifier	JMP_i8		1686846	1					
ANR	1686968	ElseStatement	else		1686846	0					
ANR	1686969	ExpressionStatement	* code_ptr ++ = JMP_i32	413:3:11340:11361	1686846	0	True				
ANR	1686970	AssignmentExpression	* code_ptr ++ = JMP_i32		1686846	0		=			
ANR	1686971	UnaryOperationExpression	* code_ptr ++		1686846	0					
ANR	1686972	UnaryOperator	*		1686846	0					
ANR	1686973	PostIncDecOperationExpression	code_ptr ++		1686846	1					
ANR	1686974	Identifier	code_ptr		1686846	0					
ANR	1686975	IncDec	++		1686846	1					
ANR	1686976	Identifier	JMP_i32		1686846	1					
ANR	1686977	ExpressionStatement	jump -> addr ++	414:2:11365:11377	1686846	1	True				
ANR	1686978	PostIncDecOperationExpression	jump -> addr ++		1686846	0					
ANR	1686979	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1686980	Identifier	jump		1686846	0					
ANR	1686981	Identifier	addr		1686846	1					
ANR	1686982	IncDec	++		1686846	1					
ANR	1686983	ElseStatement	else		1686846	0					
ANR	1686984	IfStatement	if ( type >= SLJIT_FAST_CALL )		1686846	0					
ANR	1686985	Condition	type >= SLJIT_FAST_CALL	416:10:11392:11414	1686846	0	True				
ANR	1686986	RelationalExpression	type >= SLJIT_FAST_CALL		1686846	0		>=			
ANR	1686987	Identifier	type		1686846	0					
ANR	1686988	Identifier	SLJIT_FAST_CALL		1686846	1					
ANR	1686989	CompoundStatement		23:35:687:687	1686846	1					
ANR	1686990	ExpressionStatement	short_jump = 0	417:2:11421:11435	1686846	0	True				
ANR	1686991	AssignmentExpression	short_jump = 0		1686846	0		=			
ANR	1686992	Identifier	short_jump		1686846	0					
ANR	1686993	PrimaryExpression	0		1686846	1					
ANR	1686994	ExpressionStatement	* code_ptr ++ = CALL_i32	418:2:11439:11461	1686846	1	True				
ANR	1686995	AssignmentExpression	* code_ptr ++ = CALL_i32		1686846	0		=			
ANR	1686996	UnaryOperationExpression	* code_ptr ++		1686846	0					
ANR	1686997	UnaryOperator	*		1686846	0					
ANR	1686998	PostIncDecOperationExpression	code_ptr ++		1686846	1					
ANR	1686999	Identifier	code_ptr		1686846	0					
ANR	1687000	IncDec	++		1686846	1					
ANR	1687001	Identifier	CALL_i32		1686846	1					
ANR	1687002	ExpressionStatement	jump -> addr ++	419:2:11465:11477	1686846	2	True				
ANR	1687003	PostIncDecOperationExpression	jump -> addr ++		1686846	0					
ANR	1687004	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1687005	Identifier	jump		1686846	0					
ANR	1687006	Identifier	addr		1686846	1					
ANR	1687007	IncDec	++		1686846	1					
ANR	1687008	ElseStatement	else		1686846	0					
ANR	1687009	IfStatement	if ( short_jump )		1686846	0					
ANR	1687010	Condition	short_jump	421:10:11492:11501	1686846	0	True				
ANR	1687011	Identifier	short_jump		1686846	0					
ANR	1687012	CompoundStatement		28:22:774:774	1686846	1					
ANR	1687013	ExpressionStatement	* code_ptr ++ = get_jump_code ( type ) - 0x10	422:2:11508:11548	1686846	0	True				
ANR	1687014	AssignmentExpression	* code_ptr ++ = get_jump_code ( type ) - 0x10		1686846	0		=			
ANR	1687015	UnaryOperationExpression	* code_ptr ++		1686846	0					
ANR	1687016	UnaryOperator	*		1686846	0					
ANR	1687017	PostIncDecOperationExpression	code_ptr ++		1686846	1					
ANR	1687018	Identifier	code_ptr		1686846	0					
ANR	1687019	IncDec	++		1686846	1					
ANR	1687020	AdditiveExpression	get_jump_code ( type ) - 0x10		1686846	1		-			
ANR	1687021	CallExpression	get_jump_code ( type )		1686846	0					
ANR	1687022	Callee	get_jump_code		1686846	0					
ANR	1687023	Identifier	get_jump_code		1686846	0					
ANR	1687024	ArgumentList	type		1686846	1					
ANR	1687025	Argument	type		1686846	0					
ANR	1687026	Identifier	type		1686846	0					
ANR	1687027	PrimaryExpression	0x10		1686846	1					
ANR	1687028	ExpressionStatement	jump -> addr ++	423:2:11552:11564	1686846	1	True				
ANR	1687029	PostIncDecOperationExpression	jump -> addr ++		1686846	0					
ANR	1687030	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1687031	Identifier	jump		1686846	0					
ANR	1687032	Identifier	addr		1686846	1					
ANR	1687033	IncDec	++		1686846	1					
ANR	1687034	ElseStatement	else		1686846	0					
ANR	1687035	CompoundStatement		32:6:845:845	1686846	0					
ANR	1687036	ExpressionStatement	* code_ptr ++ = GROUP_0F	426:2:11579:11601	1686846	0	True				
ANR	1687037	AssignmentExpression	* code_ptr ++ = GROUP_0F		1686846	0		=			
ANR	1687038	UnaryOperationExpression	* code_ptr ++		1686846	0					
ANR	1687039	UnaryOperator	*		1686846	0					
ANR	1687040	PostIncDecOperationExpression	code_ptr ++		1686846	1					
ANR	1687041	Identifier	code_ptr		1686846	0					
ANR	1687042	IncDec	++		1686846	1					
ANR	1687043	Identifier	GROUP_0F		1686846	1					
ANR	1687044	ExpressionStatement	* code_ptr ++ = get_jump_code ( type )	427:2:11605:11638	1686846	1	True				
ANR	1687045	AssignmentExpression	* code_ptr ++ = get_jump_code ( type )		1686846	0		=			
ANR	1687046	UnaryOperationExpression	* code_ptr ++		1686846	0					
ANR	1687047	UnaryOperator	*		1686846	0					
ANR	1687048	PostIncDecOperationExpression	code_ptr ++		1686846	1					
ANR	1687049	Identifier	code_ptr		1686846	0					
ANR	1687050	IncDec	++		1686846	1					
ANR	1687051	CallExpression	get_jump_code ( type )		1686846	1					
ANR	1687052	Callee	get_jump_code		1686846	0					
ANR	1687053	Identifier	get_jump_code		1686846	0					
ANR	1687054	ArgumentList	type		1686846	1					
ANR	1687055	Argument	type		1686846	0					
ANR	1687056	Identifier	type		1686846	0					
ANR	1687057	ExpressionStatement	jump -> addr += 2	428:2:11642:11657	1686846	2	True				
ANR	1687058	AssignmentExpression	jump -> addr += 2		1686846	0		+=			
ANR	1687059	PtrMemberAccess	jump -> addr		1686846	0					
ANR	1687060	Identifier	jump		1686846	0					
ANR	1687061	Identifier	addr		1686846	1					
ANR	1687062	PrimaryExpression	2		1686846	1					
ANR	1687063	IfStatement	if ( short_jump )		1686846	6					
ANR	1687064	Condition	short_jump	431:5:11668:11677	1686846	0	True				
ANR	1687065	Identifier	short_jump		1686846	0					
ANR	1687066	CompoundStatement		38:17:950:950	1686846	1					
ANR	1687067	ExpressionStatement	jump -> flags |= PATCH_MB	432:2:11684:11707	1686846	0	True				
ANR	1687068	AssignmentExpression	jump -> flags |= PATCH_MB		1686846	0		|=			
ANR	1687069	PtrMemberAccess	jump -> flags		1686846	0					
ANR	1687070	Identifier	jump		1686846	0					
ANR	1687071	Identifier	flags		1686846	1					
ANR	1687072	Identifier	PATCH_MB		1686846	1					
ANR	1687073	ExpressionStatement	code_ptr += sizeof ( sljit_sb )	433:2:11711:11739	1686846	1	True				
ANR	1687074	AssignmentExpression	code_ptr += sizeof ( sljit_sb )		1686846	0		+=			
ANR	1687075	Identifier	code_ptr		1686846	0					
ANR	1687076	SizeofExpression	sizeof ( sljit_sb )		1686846	1					
ANR	1687077	Sizeof	sizeof		1686846	0					
ANR	1687078	SizeofOperand	sljit_sb		1686846	1					
ANR	1687079	ElseStatement	else		1686846	0					
ANR	1687080	CompoundStatement		41:8:1019:1019	1686846	0					
ANR	1687081	ExpressionStatement	jump -> flags |= PATCH_MW	435:2:11753:11776	1686846	0	True				
ANR	1687082	AssignmentExpression	jump -> flags |= PATCH_MW		1686846	0		|=			
ANR	1687083	PtrMemberAccess	jump -> flags		1686846	0					
ANR	1687084	Identifier	jump		1686846	0					
ANR	1687085	Identifier	flags		1686846	1					
ANR	1687086	Identifier	PATCH_MW		1686846	1					
ANR	1687087	ExpressionStatement	code_ptr += sizeof ( sljit_sw )	437:2:11837:11865	1686846	1	True				
ANR	1687088	AssignmentExpression	code_ptr += sizeof ( sljit_sw )		1686846	0		+=			
ANR	1687089	Identifier	code_ptr		1686846	0					
ANR	1687090	SizeofExpression	sizeof ( sljit_sw )		1686846	1					
ANR	1687091	Sizeof	sizeof		1686846	0					
ANR	1687092	SizeofOperand	sljit_sw		1686846	1					
ANR	1687093	ReturnStatement	return code_ptr ;	443:1:11917:11932	1686846	7	True				
ANR	1687094	Identifier	code_ptr		1686846	0					
ANR	1687095	ReturnType	static sljit_ub *		1686846	1					
ANR	1687096	Identifier	generate_near_jump_code		1686846	2					
ANR	1687097	ParameterList	"struct sljit_jump * jump , sljit_ub * code_ptr , sljit_ub * code , sljit_si type"		1686846	3					
ANR	1687098	Parameter	struct sljit_jump * jump	393:41:10653:10675	1686846	0	True				
ANR	1687099	ParameterType	struct sljit_jump *		1686846	0					
ANR	1687100	Identifier	jump		1686846	1					
ANR	1687101	Parameter	sljit_ub * code_ptr	393:66:10678:10695	1686846	1	True				
ANR	1687102	ParameterType	sljit_ub *		1686846	0					
ANR	1687103	Identifier	code_ptr		1686846	1					
ANR	1687104	Parameter	sljit_ub * code	393:86:10698:10711	1686846	2	True				
ANR	1687105	ParameterType	sljit_ub *		1686846	0					
ANR	1687106	Identifier	code		1686846	1					
ANR	1687107	Parameter	sljit_si type	393:102:10714:10726	1686846	3	True				
ANR	1687108	ParameterType	sljit_si		1686846	0					
ANR	1687109	Identifier	type		1686846	1					
ANR	1687110	CFGEntryNode	ENTRY		1686846		True				
ANR	1687111	CFGExitNode	EXIT		1686846		True				
ANR	1687112	Symbol	jump -> u . label -> size		1686846						
ANR	1687113	Symbol	SLJIT_JUMP		1686846						
ANR	1687114	Symbol	code		1686846						
ANR	1687115	Symbol	short_jump		1686846						
ANR	1687116	Symbol	* * jump		1686846						
ANR	1687117	Symbol	* jump		1686846						
ANR	1687118	Symbol	jump -> u		1686846						
ANR	1687119	Symbol	HALFWORD_MIN		1686846						
ANR	1687120	Symbol	jump -> flags		1686846						
ANR	1687121	Symbol	CALL_i32		1686846						
ANR	1687122	Symbol	JUMP_LABEL		1686846						
ANR	1687123	Symbol	get_jump_code		1686846						
ANR	1687124	Symbol	type		1686846						
ANR	1687125	Symbol	generate_far_jump_code		1686846						
ANR	1687126	Symbol	code_ptr		1686846						
ANR	1687127	Symbol	SLJIT_FAST_CALL		1686846						
ANR	1687128	Symbol	* code_ptr ++		1686846						
ANR	1687129	Symbol	PATCH_MW		1686846						
ANR	1687130	Symbol	jump		1686846						
ANR	1687131	Symbol	GROUP_0F		1686846						
ANR	1687132	Symbol	JMP_i8		1686846						
ANR	1687133	Symbol	jump -> addr		1686846						
ANR	1687134	Symbol	JMP_i32		1686846						
ANR	1687135	Symbol	PATCH_MB		1686846						
ANR	1687136	Symbol	* jump -> u . label		1686846						
ANR	1687137	Symbol	* jump -> u		1686846						
ANR	1687138	Symbol	HALFWORD_MAX		1686846						
ANR	1687139	Symbol	jump -> u . target		1686846						
ANR	1687140	Symbol	label_addr		1686846						
ANR	1687141	Symbol	jump -> u . label		1686846						
ANR	1687142	Function	sljit_generate_code	446:0:11937:15722							
ANR	1687143	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1687142	0					
ANR	1687144	CompoundStatement		447:0:12021:15722	1687142	0					
ANR	1687145	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	448:1:12024:12057	1687142	0	True				
ANR	1687146	IdentifierDecl	* buf		1687142	0					
ANR	1687147	IdentifierDeclType	struct sljit_memory_fragment *		1687142	0					
ANR	1687148	Identifier	buf		1687142	1					
ANR	1687149	IdentifierDeclStatement	sljit_ub * code ;	449:1:12060:12074	1687142	1	True				
ANR	1687150	IdentifierDecl	* code		1687142	0					
ANR	1687151	IdentifierDeclType	sljit_ub *		1687142	0					
ANR	1687152	Identifier	code		1687142	1					
ANR	1687153	IdentifierDeclStatement	sljit_ub * code_ptr ;	450:1:12077:12095	1687142	2	True				
ANR	1687154	IdentifierDecl	* code_ptr		1687142	0					
ANR	1687155	IdentifierDeclType	sljit_ub *		1687142	0					
ANR	1687156	Identifier	code_ptr		1687142	1					
ANR	1687157	IdentifierDeclStatement	sljit_ub * buf_ptr ;	451:1:12098:12115	1687142	3	True				
ANR	1687158	IdentifierDecl	* buf_ptr		1687142	0					
ANR	1687159	IdentifierDeclType	sljit_ub *		1687142	0					
ANR	1687160	Identifier	buf_ptr		1687142	1					
ANR	1687161	IdentifierDeclStatement	sljit_ub * buf_end ;	452:1:12118:12135	1687142	4	True				
ANR	1687162	IdentifierDecl	* buf_end		1687142	0					
ANR	1687163	IdentifierDeclType	sljit_ub *		1687142	0					
ANR	1687164	Identifier	buf_end		1687142	1					
ANR	1687165	IdentifierDeclStatement	sljit_ub len ;	453:1:12138:12150	1687142	5	True				
ANR	1687166	IdentifierDecl	len		1687142	0					
ANR	1687167	IdentifierDeclType	sljit_ub		1687142	0					
ANR	1687168	Identifier	len		1687142	1					
ANR	1687169	IdentifierDeclStatement	struct sljit_label * label ;	455:1:12154:12179	1687142	6	True				
ANR	1687170	IdentifierDecl	* label		1687142	0					
ANR	1687171	IdentifierDeclType	struct sljit_label *		1687142	0					
ANR	1687172	Identifier	label		1687142	1					
ANR	1687173	IdentifierDeclStatement	struct sljit_jump * jump ;	456:1:12182:12205	1687142	7	True				
ANR	1687174	IdentifierDecl	* jump		1687142	0					
ANR	1687175	IdentifierDeclType	struct sljit_jump *		1687142	0					
ANR	1687176	Identifier	jump		1687142	1					
ANR	1687177	IdentifierDeclStatement	struct sljit_const * const_ ;	457:1:12208:12234	1687142	8	True				
ANR	1687178	IdentifierDecl	* const_		1687142	0					
ANR	1687179	IdentifierDeclType	struct sljit_const *		1687142	0					
ANR	1687180	Identifier	const_		1687142	1					
ANR	1687181	ExpressionStatement	CHECK_ERROR_PTR ( )	459:1:12238:12255	1687142	9	True				
ANR	1687182	CallExpression	CHECK_ERROR_PTR ( )		1687142	0					
ANR	1687183	Callee	CHECK_ERROR_PTR		1687142	0					
ANR	1687184	Identifier	CHECK_ERROR_PTR		1687142	0					
ANR	1687185	ArgumentList			1687142	1					
ANR	1687186	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	460:1:12258:12304	1687142	10	True				
ANR	1687187	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1687142	0					
ANR	1687188	Callee	CHECK_PTR		1687142	0					
ANR	1687189	Identifier	CHECK_PTR		1687142	0					
ANR	1687190	ArgumentList	check_sljit_generate_code ( compiler )		1687142	1					
ANR	1687191	Argument	check_sljit_generate_code ( compiler )		1687142	0					
ANR	1687192	CallExpression	check_sljit_generate_code ( compiler )		1687142	0					
ANR	1687193	Callee	check_sljit_generate_code		1687142	0					
ANR	1687194	Identifier	check_sljit_generate_code		1687142	0					
ANR	1687195	ArgumentList	compiler		1687142	1					
ANR	1687196	Argument	compiler		1687142	0					
ANR	1687197	Identifier	compiler		1687142	0					
ANR	1687198	ExpressionStatement	reverse_buf ( compiler )	461:1:12307:12328	1687142	11	True				
ANR	1687199	CallExpression	reverse_buf ( compiler )		1687142	0					
ANR	1687200	Callee	reverse_buf		1687142	0					
ANR	1687201	Identifier	reverse_buf		1687142	0					
ANR	1687202	ArgumentList	compiler		1687142	1					
ANR	1687203	Argument	compiler		1687142	0					
ANR	1687204	Identifier	compiler		1687142	0					
ANR	1687205	ExpressionStatement	code = ( sljit_ub * ) SLJIT_MALLOC_EXEC ( compiler -> size )	464:1:12368:12419	1687142	12	True				
ANR	1687206	AssignmentExpression	code = ( sljit_ub * ) SLJIT_MALLOC_EXEC ( compiler -> size )		1687142	0		=			
ANR	1687207	Identifier	code		1687142	0					
ANR	1687208	CastExpression	( sljit_ub * ) SLJIT_MALLOC_EXEC ( compiler -> size )		1687142	1					
ANR	1687209	CastTarget	sljit_ub *		1687142	0					
ANR	1687210	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size )		1687142	1					
ANR	1687211	Callee	SLJIT_MALLOC_EXEC		1687142	0					
ANR	1687212	Identifier	SLJIT_MALLOC_EXEC		1687142	0					
ANR	1687213	ArgumentList	compiler -> size		1687142	1					
ANR	1687214	Argument	compiler -> size		1687142	0					
ANR	1687215	PtrMemberAccess	compiler -> size		1687142	0					
ANR	1687216	Identifier	compiler		1687142	0					
ANR	1687217	Identifier	size		1687142	1					
ANR	1687218	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	465:1:12422:12449	1687142	13	True				
ANR	1687219	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1687142	0					
ANR	1687220	Callee	PTR_FAIL_WITH_EXEC_IF		1687142	0					
ANR	1687221	Identifier	PTR_FAIL_WITH_EXEC_IF		1687142	0					
ANR	1687222	ArgumentList	code		1687142	1					
ANR	1687223	Argument	code		1687142	0					
ANR	1687224	Identifier	code		1687142	0					
ANR	1687225	ExpressionStatement	buf = compiler -> buf	466:1:12452:12471	1687142	14	True				
ANR	1687226	AssignmentExpression	buf = compiler -> buf		1687142	0		=			
ANR	1687227	Identifier	buf		1687142	0					
ANR	1687228	PtrMemberAccess	compiler -> buf		1687142	1					
ANR	1687229	Identifier	compiler		1687142	0					
ANR	1687230	Identifier	buf		1687142	1					
ANR	1687231	ExpressionStatement	code_ptr = code	468:1:12475:12490	1687142	15	True				
ANR	1687232	AssignmentExpression	code_ptr = code		1687142	0		=			
ANR	1687233	Identifier	code_ptr		1687142	0					
ANR	1687234	Identifier	code		1687142	1					
ANR	1687235	ExpressionStatement	label = compiler -> labels	469:1:12493:12517	1687142	16	True				
ANR	1687236	AssignmentExpression	label = compiler -> labels		1687142	0		=			
ANR	1687237	Identifier	label		1687142	0					
ANR	1687238	PtrMemberAccess	compiler -> labels		1687142	1					
ANR	1687239	Identifier	compiler		1687142	0					
ANR	1687240	Identifier	labels		1687142	1					
ANR	1687241	ExpressionStatement	jump = compiler -> jumps	470:1:12520:12542	1687142	17	True				
ANR	1687242	AssignmentExpression	jump = compiler -> jumps		1687142	0		=			
ANR	1687243	Identifier	jump		1687142	0					
ANR	1687244	PtrMemberAccess	compiler -> jumps		1687142	1					
ANR	1687245	Identifier	compiler		1687142	0					
ANR	1687246	Identifier	jumps		1687142	1					
ANR	1687247	ExpressionStatement	const_ = compiler -> consts	471:1:12545:12570	1687142	18	True				
ANR	1687248	AssignmentExpression	const_ = compiler -> consts		1687142	0		=			
ANR	1687249	Identifier	const_		1687142	0					
ANR	1687250	PtrMemberAccess	compiler -> consts		1687142	1					
ANR	1687251	Identifier	compiler		1687142	0					
ANR	1687252	Identifier	consts		1687142	1					
ANR	1687253	DoStatement	do		1687142	19					
ANR	1687254	CompoundStatement		26:4:554:554	1687142	0					
ANR	1687255	ExpressionStatement	buf_ptr = buf -> memory	473:2:12580:12601	1687142	0	True				
ANR	1687256	AssignmentExpression	buf_ptr = buf -> memory		1687142	0		=			
ANR	1687257	Identifier	buf_ptr		1687142	0					
ANR	1687258	PtrMemberAccess	buf -> memory		1687142	1					
ANR	1687259	Identifier	buf		1687142	0					
ANR	1687260	Identifier	memory		1687142	1					
ANR	1687261	ExpressionStatement	buf_end = buf_ptr + buf -> used_size	474:2:12605:12639	1687142	1	True				
ANR	1687262	AssignmentExpression	buf_end = buf_ptr + buf -> used_size		1687142	0		=			
ANR	1687263	Identifier	buf_end		1687142	0					
ANR	1687264	AdditiveExpression	buf_ptr + buf -> used_size		1687142	1		+			
ANR	1687265	Identifier	buf_ptr		1687142	0					
ANR	1687266	PtrMemberAccess	buf -> used_size		1687142	1					
ANR	1687267	Identifier	buf		1687142	0					
ANR	1687268	Identifier	used_size		1687142	1					
ANR	1687269	DoStatement	do		1687142	2					
ANR	1687270	CompoundStatement		29:5:624:624	1687142	0					
ANR	1687271	ExpressionStatement	len = * buf_ptr ++	476:3:12651:12667	1687142	0	True				
ANR	1687272	AssignmentExpression	len = * buf_ptr ++		1687142	0		=			
ANR	1687273	Identifier	len		1687142	0					
ANR	1687274	UnaryOperationExpression	* buf_ptr ++		1687142	1					
ANR	1687275	UnaryOperator	*		1687142	0					
ANR	1687276	PostIncDecOperationExpression	buf_ptr ++		1687142	1					
ANR	1687277	Identifier	buf_ptr		1687142	0					
ANR	1687278	IncDec	++		1687142	1					
ANR	1687279	IfStatement	if ( len > 0 )		1687142	1					
ANR	1687280	Condition	len > 0	477:7:12676:12682	1687142	0	True				
ANR	1687281	RelationalExpression	len > 0		1687142	0		>			
ANR	1687282	Identifier	len		1687142	0					
ANR	1687283	PrimaryExpression	0		1687142	1					
ANR	1687284	CompoundStatement		31:16:663:663	1687142	1					
ANR	1687285	ExpressionStatement	"SLJIT_MEMMOVE ( code_ptr , buf_ptr , len )"	479:4:12732:12769	1687142	0	True				
ANR	1687286	CallExpression	"SLJIT_MEMMOVE ( code_ptr , buf_ptr , len )"		1687142	0					
ANR	1687287	Callee	SLJIT_MEMMOVE		1687142	0					
ANR	1687288	Identifier	SLJIT_MEMMOVE		1687142	0					
ANR	1687289	ArgumentList	code_ptr		1687142	1					
ANR	1687290	Argument	code_ptr		1687142	0					
ANR	1687291	Identifier	code_ptr		1687142	0					
ANR	1687292	Argument	buf_ptr		1687142	1					
ANR	1687293	Identifier	buf_ptr		1687142	0					
ANR	1687294	Argument	len		1687142	2					
ANR	1687295	Identifier	len		1687142	0					
ANR	1687296	ExpressionStatement	code_ptr += len	480:4:12775:12790	1687142	1	True				
ANR	1687297	AssignmentExpression	code_ptr += len		1687142	0		+=			
ANR	1687298	Identifier	code_ptr		1687142	0					
ANR	1687299	Identifier	len		1687142	1					
ANR	1687300	ExpressionStatement	buf_ptr += len	481:4:12796:12810	1687142	2	True				
ANR	1687301	AssignmentExpression	buf_ptr += len		1687142	0		+=			
ANR	1687302	Identifier	buf_ptr		1687142	0					
ANR	1687303	Identifier	len		1687142	1					
ANR	1687304	ElseStatement	else		1687142	0					
ANR	1687305	CompoundStatement		37:8:803:803	1687142	0					
ANR	1687306	IfStatement	if ( * buf_ptr >= 4 )		1687142	0					
ANR	1687307	Condition	* buf_ptr >= 4	484:8:12835:12847	1687142	0	True				
ANR	1687308	RelationalExpression	* buf_ptr >= 4		1687142	0		>=			
ANR	1687309	UnaryOperationExpression	* buf_ptr		1687142	0					
ANR	1687310	UnaryOperator	*		1687142	0					
ANR	1687311	Identifier	buf_ptr		1687142	1					
ANR	1687312	PrimaryExpression	4		1687142	1					
ANR	1687313	CompoundStatement		38:23:828:828	1687142	1					
ANR	1687314	ExpressionStatement	jump -> addr = ( sljit_uw ) code_ptr	485:5:12857:12888	1687142	0	True				
ANR	1687315	AssignmentExpression	jump -> addr = ( sljit_uw ) code_ptr		1687142	0		=			
ANR	1687316	PtrMemberAccess	jump -> addr		1687142	0					
ANR	1687317	Identifier	jump		1687142	0					
ANR	1687318	Identifier	addr		1687142	1					
ANR	1687319	CastExpression	( sljit_uw ) code_ptr		1687142	1					
ANR	1687320	CastTarget	sljit_uw		1687142	0					
ANR	1687321	Identifier	code_ptr		1687142	1					
ANR	1687322	IfStatement	if ( ! ( jump -> flags & SLJIT_REWRITABLE_JUMP ) )		1687142	1					
ANR	1687323	Condition	! ( jump -> flags & SLJIT_REWRITABLE_JUMP )	486:9:12899:12936	1687142	0	True				
ANR	1687324	UnaryOperationExpression	! ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1687142	0					
ANR	1687325	UnaryOperator	!		1687142	0					
ANR	1687326	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1687142	1		&			
ANR	1687327	PtrMemberAccess	jump -> flags		1687142	0					
ANR	1687328	Identifier	jump		1687142	0					
ANR	1687329	Identifier	flags		1687142	1					
ANR	1687330	Identifier	SLJIT_REWRITABLE_JUMP		1687142	1					
ANR	1687331	ExpressionStatement	"code_ptr = generate_near_jump_code ( jump , code_ptr , code , * buf_ptr - 4 )"	487:6:12945:13015	1687142	1	True				
ANR	1687332	AssignmentExpression	"code_ptr = generate_near_jump_code ( jump , code_ptr , code , * buf_ptr - 4 )"		1687142	0		=			
ANR	1687333	Identifier	code_ptr		1687142	0					
ANR	1687334	CallExpression	"generate_near_jump_code ( jump , code_ptr , code , * buf_ptr - 4 )"		1687142	1					
ANR	1687335	Callee	generate_near_jump_code		1687142	0					
ANR	1687336	Identifier	generate_near_jump_code		1687142	0					
ANR	1687337	ArgumentList	jump		1687142	1					
ANR	1687338	Argument	jump		1687142	0					
ANR	1687339	Identifier	jump		1687142	0					
ANR	1687340	Argument	code_ptr		1687142	1					
ANR	1687341	Identifier	code_ptr		1687142	0					
ANR	1687342	Argument	code		1687142	2					
ANR	1687343	Identifier	code		1687142	0					
ANR	1687344	Argument	* buf_ptr - 4		1687142	3					
ANR	1687345	AdditiveExpression	* buf_ptr - 4		1687142	0		-			
ANR	1687346	UnaryOperationExpression	* buf_ptr		1687142	0					
ANR	1687347	UnaryOperator	*		1687142	0					
ANR	1687348	Identifier	buf_ptr		1687142	1					
ANR	1687349	PrimaryExpression	4		1687142	1					
ANR	1687350	ElseStatement	else		1687142	0					
ANR	1687351	ExpressionStatement	"code_ptr = generate_far_jump_code ( jump , code_ptr , * buf_ptr - 4 )"	489:6:13033:13096	1687142	0	True				
ANR	1687352	AssignmentExpression	"code_ptr = generate_far_jump_code ( jump , code_ptr , * buf_ptr - 4 )"		1687142	0		=			
ANR	1687353	Identifier	code_ptr		1687142	0					
ANR	1687354	CallExpression	"generate_far_jump_code ( jump , code_ptr , * buf_ptr - 4 )"		1687142	1					
ANR	1687355	Callee	generate_far_jump_code		1687142	0					
ANR	1687356	Identifier	generate_far_jump_code		1687142	0					
ANR	1687357	ArgumentList	jump		1687142	1					
ANR	1687358	Argument	jump		1687142	0					
ANR	1687359	Identifier	jump		1687142	0					
ANR	1687360	Argument	code_ptr		1687142	1					
ANR	1687361	Identifier	code_ptr		1687142	0					
ANR	1687362	Argument	* buf_ptr - 4		1687142	2					
ANR	1687363	AdditiveExpression	* buf_ptr - 4		1687142	0		-			
ANR	1687364	UnaryOperationExpression	* buf_ptr		1687142	0					
ANR	1687365	UnaryOperator	*		1687142	0					
ANR	1687366	Identifier	buf_ptr		1687142	1					
ANR	1687367	PrimaryExpression	4		1687142	1					
ANR	1687368	ExpressionStatement	jump = jump -> next	490:5:13103:13120	1687142	2	True				
ANR	1687369	AssignmentExpression	jump = jump -> next		1687142	0		=			
ANR	1687370	Identifier	jump		1687142	0					
ANR	1687371	PtrMemberAccess	jump -> next		1687142	1					
ANR	1687372	Identifier	jump		1687142	0					
ANR	1687373	Identifier	next		1687142	1					
ANR	1687374	ElseStatement	else		1687142	0					
ANR	1687375	IfStatement	if ( * buf_ptr == 0 )		1687142	0					
ANR	1687376	Condition	* buf_ptr == 0	492:13:13141:13153	1687142	0	True				
ANR	1687377	EqualityExpression	* buf_ptr == 0		1687142	0		==			
ANR	1687378	UnaryOperationExpression	* buf_ptr		1687142	0					
ANR	1687379	UnaryOperator	*		1687142	0					
ANR	1687380	Identifier	buf_ptr		1687142	1					
ANR	1687381	PrimaryExpression	0		1687142	1					
ANR	1687382	CompoundStatement		46:28:1134:1134	1687142	1					
ANR	1687383	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	493:5:13163:13195	1687142	0	True				
ANR	1687384	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1687142	0		=			
ANR	1687385	PtrMemberAccess	label -> addr		1687142	0					
ANR	1687386	Identifier	label		1687142	0					
ANR	1687387	Identifier	addr		1687142	1					
ANR	1687388	CastExpression	( sljit_uw ) code_ptr		1687142	1					
ANR	1687389	CastTarget	sljit_uw		1687142	0					
ANR	1687390	Identifier	code_ptr		1687142	1					
ANR	1687391	ExpressionStatement	label -> size = code_ptr - code	494:5:13202:13231	1687142	1	True				
ANR	1687392	AssignmentExpression	label -> size = code_ptr - code		1687142	0		=			
ANR	1687393	PtrMemberAccess	label -> size		1687142	0					
ANR	1687394	Identifier	label		1687142	0					
ANR	1687395	Identifier	size		1687142	1					
ANR	1687396	AdditiveExpression	code_ptr - code		1687142	1		-			
ANR	1687397	Identifier	code_ptr		1687142	0					
ANR	1687398	Identifier	code		1687142	1					
ANR	1687399	ExpressionStatement	label = label -> next	495:5:13238:13257	1687142	2	True				
ANR	1687400	AssignmentExpression	label = label -> next		1687142	0		=			
ANR	1687401	Identifier	label		1687142	0					
ANR	1687402	PtrMemberAccess	label -> next		1687142	1					
ANR	1687403	Identifier	label		1687142	0					
ANR	1687404	Identifier	next		1687142	1					
ANR	1687405	ElseStatement	else		1687142	0					
ANR	1687406	IfStatement	if ( * buf_ptr == 1 )		1687142	0					
ANR	1687407	Condition	* buf_ptr == 1	497:13:13278:13290	1687142	0	True				
ANR	1687408	EqualityExpression	* buf_ptr == 1		1687142	0		==			
ANR	1687409	UnaryOperationExpression	* buf_ptr		1687142	0					
ANR	1687410	UnaryOperator	*		1687142	0					
ANR	1687411	Identifier	buf_ptr		1687142	1					
ANR	1687412	PrimaryExpression	1		1687142	1					
ANR	1687413	CompoundStatement		51:28:1271:1271	1687142	1					
ANR	1687414	ExpressionStatement	const_ -> addr = ( ( sljit_uw ) code_ptr ) - sizeof ( sljit_sw )	498:5:13300:13354	1687142	0	True				
ANR	1687415	AssignmentExpression	const_ -> addr = ( ( sljit_uw ) code_ptr ) - sizeof ( sljit_sw )		1687142	0		=			
ANR	1687416	PtrMemberAccess	const_ -> addr		1687142	0					
ANR	1687417	Identifier	const_		1687142	0					
ANR	1687418	Identifier	addr		1687142	1					
ANR	1687419	AdditiveExpression	( ( sljit_uw ) code_ptr ) - sizeof ( sljit_sw )		1687142	1		-			
ANR	1687420	CastExpression	( sljit_uw ) code_ptr		1687142	0					
ANR	1687421	CastTarget	sljit_uw		1687142	0					
ANR	1687422	Identifier	code_ptr		1687142	1					
ANR	1687423	SizeofExpression	sizeof ( sljit_sw )		1687142	1					
ANR	1687424	Sizeof	sizeof		1687142	0					
ANR	1687425	SizeofOperand	sljit_sw		1687142	1					
ANR	1687426	ExpressionStatement	const_ = const_ -> next	499:5:13361:13382	1687142	1	True				
ANR	1687427	AssignmentExpression	const_ = const_ -> next		1687142	0		=			
ANR	1687428	Identifier	const_		1687142	0					
ANR	1687429	PtrMemberAccess	const_ -> next		1687142	1					
ANR	1687430	Identifier	const_		1687142	0					
ANR	1687431	Identifier	next		1687142	1					
ANR	1687432	ElseStatement	else		1687142	0					
ANR	1687433	CompoundStatement		55:9:1377:1377	1687142	0					
ANR	1687434	ExpressionStatement	* code_ptr ++ = ( * buf_ptr == 2 ) ? CALL_i32 : JMP_i32	503:5:13463:13513	1687142	0	True				
ANR	1687435	AssignmentExpression	* code_ptr ++ = ( * buf_ptr == 2 ) ? CALL_i32 : JMP_i32		1687142	0		=			
ANR	1687436	UnaryOperationExpression	* code_ptr ++		1687142	0					
ANR	1687437	UnaryOperator	*		1687142	0					
ANR	1687438	PostIncDecOperationExpression	code_ptr ++		1687142	1					
ANR	1687439	Identifier	code_ptr		1687142	0					
ANR	1687440	IncDec	++		1687142	1					
ANR	1687441	ConditionalExpression	( * buf_ptr == 2 ) ? CALL_i32 : JMP_i32		1687142	1					
ANR	1687442	Condition	* buf_ptr == 2		1687142	0					
ANR	1687443	EqualityExpression	* buf_ptr == 2		1687142	0		==			
ANR	1687444	UnaryOperationExpression	* buf_ptr		1687142	0					
ANR	1687445	UnaryOperator	*		1687142	0					
ANR	1687446	Identifier	buf_ptr		1687142	1					
ANR	1687447	PrimaryExpression	2		1687142	1					
ANR	1687448	Identifier	CALL_i32		1687142	1					
ANR	1687449	Identifier	JMP_i32		1687142	2					
ANR	1687450	ExpressionStatement	buf_ptr ++	504:5:13520:13529	1687142	1	True				
ANR	1687451	PostIncDecOperationExpression	buf_ptr ++		1687142	0					
ANR	1687452	Identifier	buf_ptr		1687142	0					
ANR	1687453	IncDec	++		1687142	1					
ANR	1687454	ExpressionStatement	* ( sljit_sw * ) code_ptr = * ( sljit_sw * ) buf_ptr - ( ( sljit_sw ) code_ptr + sizeof ( sljit_sw ) )	505:5:13536:13620	1687142	2	True				
ANR	1687455	AssignmentExpression	* ( sljit_sw * ) code_ptr = * ( sljit_sw * ) buf_ptr - ( ( sljit_sw ) code_ptr + sizeof ( sljit_sw ) )		1687142	0		=			
ANR	1687456	UnaryOperationExpression	* ( sljit_sw * ) code_ptr		1687142	0					
ANR	1687457	UnaryOperator	*		1687142	0					
ANR	1687458	CastExpression	( sljit_sw * ) code_ptr		1687142	1					
ANR	1687459	CastTarget	sljit_sw *		1687142	0					
ANR	1687460	Identifier	code_ptr		1687142	1					
ANR	1687461	AdditiveExpression	* ( sljit_sw * ) buf_ptr - ( ( sljit_sw ) code_ptr + sizeof ( sljit_sw ) )		1687142	1		-			
ANR	1687462	UnaryOperationExpression	* ( sljit_sw * ) buf_ptr		1687142	0					
ANR	1687463	UnaryOperator	*		1687142	0					
ANR	1687464	CastExpression	( sljit_sw * ) buf_ptr		1687142	1					
ANR	1687465	CastTarget	sljit_sw *		1687142	0					
ANR	1687466	Identifier	buf_ptr		1687142	1					
ANR	1687467	AdditiveExpression	( sljit_sw ) code_ptr + sizeof ( sljit_sw )		1687142	1		+			
ANR	1687468	CastExpression	( sljit_sw ) code_ptr		1687142	0					
ANR	1687469	CastTarget	sljit_sw		1687142	0					
ANR	1687470	Identifier	code_ptr		1687142	1					
ANR	1687471	SizeofExpression	sizeof ( sljit_sw )		1687142	1					
ANR	1687472	Sizeof	sizeof		1687142	0					
ANR	1687473	SizeofOperand	sljit_sw		1687142	1					
ANR	1687474	ExpressionStatement	code_ptr += sizeof ( sljit_sw )	506:5:13627:13655	1687142	3	True				
ANR	1687475	AssignmentExpression	code_ptr += sizeof ( sljit_sw )		1687142	0		+=			
ANR	1687476	Identifier	code_ptr		1687142	0					
ANR	1687477	SizeofExpression	sizeof ( sljit_sw )		1687142	1					
ANR	1687478	Sizeof	sizeof		1687142	0					
ANR	1687479	SizeofOperand	sljit_sw		1687142	1					
ANR	1687480	ExpressionStatement	buf_ptr += sizeof ( sljit_sw ) - 1	507:5:13662:13693	1687142	4	True				
ANR	1687481	AssignmentExpression	buf_ptr += sizeof ( sljit_sw ) - 1		1687142	0		+=			
ANR	1687482	Identifier	buf_ptr		1687142	0					
ANR	1687483	AdditiveExpression	sizeof ( sljit_sw ) - 1		1687142	1		-			
ANR	1687484	SizeofExpression	sizeof ( sljit_sw )		1687142	0					
ANR	1687485	Sizeof	sizeof		1687142	0					
ANR	1687486	SizeofOperand	sljit_sw		1687142	1					
ANR	1687487	PrimaryExpression	1		1687142	1					
ANR	1687488	ExpressionStatement	buf_ptr ++	513:4:13836:13845	1687142	1	True				
ANR	1687489	PostIncDecOperationExpression	buf_ptr ++		1687142	0					
ANR	1687490	Identifier	buf_ptr		1687142	0					
ANR	1687491	IncDec	++		1687142	1					
ANR	1687492	Condition	buf_ptr < buf_end	515:11:13863:13879	1687142	1	True				
ANR	1687493	RelationalExpression	buf_ptr < buf_end		1687142	0		<			
ANR	1687494	Identifier	buf_ptr		1687142	0					
ANR	1687495	Identifier	buf_end		1687142	1					
ANR	1687496	ExpressionStatement	SLJIT_ASSERT ( buf_ptr == buf_end )	516:2:13885:13917	1687142	3	True				
ANR	1687497	CallExpression	SLJIT_ASSERT ( buf_ptr == buf_end )		1687142	0					
ANR	1687498	Callee	SLJIT_ASSERT		1687142	0					
ANR	1687499	Identifier	SLJIT_ASSERT		1687142	0					
ANR	1687500	ArgumentList	buf_ptr == buf_end		1687142	1					
ANR	1687501	Argument	buf_ptr == buf_end		1687142	0					
ANR	1687502	EqualityExpression	buf_ptr == buf_end		1687142	0		==			
ANR	1687503	Identifier	buf_ptr		1687142	0					
ANR	1687504	Identifier	buf_end		1687142	1					
ANR	1687505	ExpressionStatement	buf = buf -> next	517:2:13921:13936	1687142	4	True				
ANR	1687506	AssignmentExpression	buf = buf -> next		1687142	0		=			
ANR	1687507	Identifier	buf		1687142	0					
ANR	1687508	PtrMemberAccess	buf -> next		1687142	1					
ANR	1687509	Identifier	buf		1687142	0					
ANR	1687510	Identifier	next		1687142	1					
ANR	1687511	Condition	buf	518:10:13948:13950	1687142	1	True				
ANR	1687512	Identifier	buf		1687142	0					
ANR	1687513	ExpressionStatement	SLJIT_ASSERT ( ! label )	520:1:13956:13976	1687142	20	True				
ANR	1687514	CallExpression	SLJIT_ASSERT ( ! label )		1687142	0					
ANR	1687515	Callee	SLJIT_ASSERT		1687142	0					
ANR	1687516	Identifier	SLJIT_ASSERT		1687142	0					
ANR	1687517	ArgumentList	! label		1687142	1					
ANR	1687518	Argument	! label		1687142	0					
ANR	1687519	UnaryOperationExpression	! label		1687142	0					
ANR	1687520	UnaryOperator	!		1687142	0					
ANR	1687521	Identifier	label		1687142	1					
ANR	1687522	ExpressionStatement	SLJIT_ASSERT ( ! jump )	521:1:13979:13998	1687142	21	True				
ANR	1687523	CallExpression	SLJIT_ASSERT ( ! jump )		1687142	0					
ANR	1687524	Callee	SLJIT_ASSERT		1687142	0					
ANR	1687525	Identifier	SLJIT_ASSERT		1687142	0					
ANR	1687526	ArgumentList	! jump		1687142	1					
ANR	1687527	Argument	! jump		1687142	0					
ANR	1687528	UnaryOperationExpression	! jump		1687142	0					
ANR	1687529	UnaryOperator	!		1687142	0					
ANR	1687530	Identifier	jump		1687142	1					
ANR	1687531	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	522:1:14001:14022	1687142	22	True				
ANR	1687532	CallExpression	SLJIT_ASSERT ( ! const_ )		1687142	0					
ANR	1687533	Callee	SLJIT_ASSERT		1687142	0					
ANR	1687534	Identifier	SLJIT_ASSERT		1687142	0					
ANR	1687535	ArgumentList	! const_		1687142	1					
ANR	1687536	Argument	! const_		1687142	0					
ANR	1687537	UnaryOperationExpression	! const_		1687142	0					
ANR	1687538	UnaryOperator	!		1687142	0					
ANR	1687539	Identifier	const_		1687142	1					
ANR	1687540	ExpressionStatement	jump = compiler -> jumps	524:1:14026:14048	1687142	23	True				
ANR	1687541	AssignmentExpression	jump = compiler -> jumps		1687142	0		=			
ANR	1687542	Identifier	jump		1687142	0					
ANR	1687543	PtrMemberAccess	compiler -> jumps		1687142	1					
ANR	1687544	Identifier	compiler		1687142	0					
ANR	1687545	Identifier	jumps		1687142	1					
ANR	1687546	WhileStatement	while ( jump )		1687142	24					
ANR	1687547	Condition	jump	525:8:14058:14061	1687142	0	True				
ANR	1687548	Identifier	jump		1687142	0					
ANR	1687549	CompoundStatement		79:14:2042:2042	1687142	1					
ANR	1687550	IfStatement	if ( jump -> flags & PATCH_MB )		1687142	0					
ANR	1687551	Condition	jump -> flags & PATCH_MB	526:6:14072:14093	1687142	0	True				
ANR	1687552	BitAndExpression	jump -> flags & PATCH_MB		1687142	0		&			
ANR	1687553	PtrMemberAccess	jump -> flags		1687142	0					
ANR	1687554	Identifier	jump		1687142	0					
ANR	1687555	Identifier	flags		1687142	1					
ANR	1687556	Identifier	PATCH_MB		1687142	1					
ANR	1687557	CompoundStatement		80:30:2074:2074	1687142	1					
ANR	1687558	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127 )	527:3:14101:14264	1687142	0	True				
ANR	1687559	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127 )		1687142	0					
ANR	1687560	Callee	SLJIT_ASSERT		1687142	0					
ANR	1687561	Identifier	SLJIT_ASSERT		1687142	0					
ANR	1687562	ArgumentList	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1687142	1					
ANR	1687563	Argument	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1687142	0					
ANR	1687564	AndExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128 && ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1687142	0		&&			
ANR	1687565	RelationalExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) >= - 128		1687142	0		>=			
ANR	1687566	CastExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1687142	0					
ANR	1687567	CastTarget	sljit_sw		1687142	0					
ANR	1687568	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) )		1687142	1		-			
ANR	1687569	PtrMemberAccess	jump -> u . label -> addr		1687142	0					
ANR	1687570	MemberAccess	jump -> u . label		1687142	0					
ANR	1687571	PtrMemberAccess	jump -> u		1687142	0					
ANR	1687572	Identifier	jump		1687142	0					
ANR	1687573	Identifier	u		1687142	1					
ANR	1687574	Identifier	label		1687142	1					
ANR	1687575	Identifier	addr		1687142	1					
ANR	1687576	AdditiveExpression	jump -> addr + sizeof ( sljit_sb )		1687142	1		+			
ANR	1687577	PtrMemberAccess	jump -> addr		1687142	0					
ANR	1687578	Identifier	jump		1687142	0					
ANR	1687579	Identifier	addr		1687142	1					
ANR	1687580	SizeofExpression	sizeof ( sljit_sb )		1687142	1					
ANR	1687581	Sizeof	sizeof		1687142	0					
ANR	1687582	SizeofOperand	sljit_sb		1687142	1					
ANR	1687583	UnaryOperationExpression	- 128		1687142	1					
ANR	1687584	UnaryOperator	-		1687142	0					
ANR	1687585	PrimaryExpression	128		1687142	1					
ANR	1687586	RelationalExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) ) <= 127		1687142	1		<=			
ANR	1687587	CastExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1687142	0					
ANR	1687588	CastTarget	sljit_sw		1687142	0					
ANR	1687589	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) )		1687142	1		-			
ANR	1687590	PtrMemberAccess	jump -> u . label -> addr		1687142	0					
ANR	1687591	MemberAccess	jump -> u . label		1687142	0					
ANR	1687592	PtrMemberAccess	jump -> u		1687142	0					
ANR	1687593	Identifier	jump		1687142	0					
ANR	1687594	Identifier	u		1687142	1					
ANR	1687595	Identifier	label		1687142	1					
ANR	1687596	Identifier	addr		1687142	1					
ANR	1687597	AdditiveExpression	jump -> addr + sizeof ( sljit_sb )		1687142	1		+			
ANR	1687598	PtrMemberAccess	jump -> addr		1687142	0					
ANR	1687599	Identifier	jump		1687142	0					
ANR	1687600	Identifier	addr		1687142	1					
ANR	1687601	SizeofExpression	sizeof ( sljit_sb )		1687142	1					
ANR	1687602	Sizeof	sizeof		1687142	0					
ANR	1687603	SizeofOperand	sljit_sb		1687142	1					
ANR	1687604	PrimaryExpression	127		1687142	1					
ANR	1687605	ExpressionStatement	* ( sljit_ub * ) jump -> addr = ( sljit_ub ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )	528:3:14269:14359	1687142	1	True				
ANR	1687606	AssignmentExpression	* ( sljit_ub * ) jump -> addr = ( sljit_ub ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1687142	0		=			
ANR	1687607	UnaryOperationExpression	* ( sljit_ub * ) jump -> addr		1687142	0					
ANR	1687608	UnaryOperator	*		1687142	0					
ANR	1687609	CastExpression	( sljit_ub * ) jump -> addr		1687142	1					
ANR	1687610	CastTarget	sljit_ub *		1687142	0					
ANR	1687611	PtrMemberAccess	jump -> addr		1687142	1					
ANR	1687612	Identifier	jump		1687142	0					
ANR	1687613	Identifier	addr		1687142	1					
ANR	1687614	CastExpression	( sljit_ub ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) ) )		1687142	1					
ANR	1687615	CastTarget	sljit_ub		1687142	0					
ANR	1687616	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sb ) )		1687142	1		-			
ANR	1687617	PtrMemberAccess	jump -> u . label -> addr		1687142	0					
ANR	1687618	MemberAccess	jump -> u . label		1687142	0					
ANR	1687619	PtrMemberAccess	jump -> u		1687142	0					
ANR	1687620	Identifier	jump		1687142	0					
ANR	1687621	Identifier	u		1687142	1					
ANR	1687622	Identifier	label		1687142	1					
ANR	1687623	Identifier	addr		1687142	1					
ANR	1687624	AdditiveExpression	jump -> addr + sizeof ( sljit_sb )		1687142	1		+			
ANR	1687625	PtrMemberAccess	jump -> addr		1687142	0					
ANR	1687626	Identifier	jump		1687142	0					
ANR	1687627	Identifier	addr		1687142	1					
ANR	1687628	SizeofExpression	sizeof ( sljit_sb )		1687142	1					
ANR	1687629	Sizeof	sizeof		1687142	0					
ANR	1687630	SizeofOperand	sljit_sb		1687142	1					
ANR	1687631	ElseStatement	else		1687142	0					
ANR	1687632	IfStatement	if ( jump -> flags & PATCH_MW )		1687142	0					
ANR	1687633	Condition	jump -> flags & PATCH_MW	529:13:14374:14395	1687142	0	True				
ANR	1687634	BitAndExpression	jump -> flags & PATCH_MW		1687142	0		&			
ANR	1687635	PtrMemberAccess	jump -> flags		1687142	0					
ANR	1687636	Identifier	jump		1687142	0					
ANR	1687637	Identifier	flags		1687142	1					
ANR	1687638	Identifier	PATCH_MW		1687142	1					
ANR	1687639	CompoundStatement		83:37:2376:2376	1687142	1					
ANR	1687640	IfStatement	if ( jump -> flags & JUMP_LABEL )		1687142	0					
ANR	1687641	Condition	jump -> flags & JUMP_LABEL	530:7:14407:14430	1687142	0	True				
ANR	1687642	BitAndExpression	jump -> flags & JUMP_LABEL		1687142	0		&			
ANR	1687643	PtrMemberAccess	jump -> flags		1687142	0					
ANR	1687644	Identifier	jump		1687142	0					
ANR	1687645	Identifier	flags		1687142	1					
ANR	1687646	Identifier	JUMP_LABEL		1687142	1					
ANR	1687647	CompoundStatement		84:33:2411:2411	1687142	1					
ANR	1687648	ExpressionStatement	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) ) )	532:4:14496:14586	1687142	0	True				
ANR	1687649	AssignmentExpression	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) ) )		1687142	0		=			
ANR	1687650	UnaryOperationExpression	* ( sljit_sw * ) jump -> addr		1687142	0					
ANR	1687651	UnaryOperator	*		1687142	0					
ANR	1687652	CastExpression	( sljit_sw * ) jump -> addr		1687142	1					
ANR	1687653	CastTarget	sljit_sw *		1687142	0					
ANR	1687654	PtrMemberAccess	jump -> addr		1687142	1					
ANR	1687655	Identifier	jump		1687142	0					
ANR	1687656	Identifier	addr		1687142	1					
ANR	1687657	CastExpression	( sljit_sw ) ( jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) ) )		1687142	1					
ANR	1687658	CastTarget	sljit_sw		1687142	0					
ANR	1687659	AdditiveExpression	jump -> u . label -> addr - ( jump -> addr + sizeof ( sljit_sw ) )		1687142	1		-			
ANR	1687660	PtrMemberAccess	jump -> u . label -> addr		1687142	0					
ANR	1687661	MemberAccess	jump -> u . label		1687142	0					
ANR	1687662	PtrMemberAccess	jump -> u		1687142	0					
ANR	1687663	Identifier	jump		1687142	0					
ANR	1687664	Identifier	u		1687142	1					
ANR	1687665	Identifier	label		1687142	1					
ANR	1687666	Identifier	addr		1687142	1					
ANR	1687667	AdditiveExpression	jump -> addr + sizeof ( sljit_sw )		1687142	1		+			
ANR	1687668	PtrMemberAccess	jump -> addr		1687142	0					
ANR	1687669	Identifier	jump		1687142	0					
ANR	1687670	Identifier	addr		1687142	1					
ANR	1687671	SizeofExpression	sizeof ( sljit_sw )		1687142	1					
ANR	1687672	Sizeof	sizeof		1687142	0					
ANR	1687673	SizeofOperand	sljit_sw		1687142	1					
ANR	1687674	ElseStatement	else		1687142	0					
ANR	1687675	CompoundStatement		92:8:2874:2874	1687142	0					
ANR	1687676	ExpressionStatement	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) ) )	540:4:14959:15044	1687142	0	True				
ANR	1687677	AssignmentExpression	* ( sljit_sw * ) jump -> addr = ( sljit_sw ) ( jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) ) )		1687142	0		=			
ANR	1687678	UnaryOperationExpression	* ( sljit_sw * ) jump -> addr		1687142	0					
ANR	1687679	UnaryOperator	*		1687142	0					
ANR	1687680	CastExpression	( sljit_sw * ) jump -> addr		1687142	1					
ANR	1687681	CastTarget	sljit_sw *		1687142	0					
ANR	1687682	PtrMemberAccess	jump -> addr		1687142	1					
ANR	1687683	Identifier	jump		1687142	0					
ANR	1687684	Identifier	addr		1687142	1					
ANR	1687685	CastExpression	( sljit_sw ) ( jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) ) )		1687142	1					
ANR	1687686	CastTarget	sljit_sw		1687142	0					
ANR	1687687	AdditiveExpression	jump -> u . target - ( jump -> addr + sizeof ( sljit_sw ) )		1687142	1		-			
ANR	1687688	MemberAccess	jump -> u . target		1687142	0					
ANR	1687689	PtrMemberAccess	jump -> u		1687142	0					
ANR	1687690	Identifier	jump		1687142	0					
ANR	1687691	Identifier	u		1687142	1					
ANR	1687692	Identifier	target		1687142	1					
ANR	1687693	AdditiveExpression	jump -> addr + sizeof ( sljit_sw )		1687142	1		+			
ANR	1687694	PtrMemberAccess	jump -> addr		1687142	0					
ANR	1687695	Identifier	jump		1687142	0					
ANR	1687696	Identifier	addr		1687142	1					
ANR	1687697	SizeofExpression	sizeof ( sljit_sw )		1687142	1					
ANR	1687698	Sizeof	sizeof		1687142	0					
ANR	1687699	SizeofOperand	sljit_sw		1687142	1					
ANR	1687700	ElseStatement	else		1687142	0					
ANR	1687701	IfStatement	if ( jump -> flags & PATCH_MD )		1687142	0					
ANR	1687702	Condition	jump -> flags & PATCH_MD	548:11:15403:15424	1687142	0	True				
ANR	1687703	BitAndExpression	jump -> flags & PATCH_MD		1687142	0		&			
ANR	1687704	PtrMemberAccess	jump -> flags		1687142	0					
ANR	1687705	Identifier	jump		1687142	0					
ANR	1687706	Identifier	flags		1687142	1					
ANR	1687707	Identifier	PATCH_MD		1687142	1					
ANR	1687708	ExpressionStatement	* ( sljit_sw * ) jump -> addr = jump -> u . label -> addr	549:3:15430:15474	1687142	1	True				
ANR	1687709	AssignmentExpression	* ( sljit_sw * ) jump -> addr = jump -> u . label -> addr		1687142	0		=			
ANR	1687710	UnaryOperationExpression	* ( sljit_sw * ) jump -> addr		1687142	0					
ANR	1687711	UnaryOperator	*		1687142	0					
ANR	1687712	CastExpression	( sljit_sw * ) jump -> addr		1687142	1					
ANR	1687713	CastTarget	sljit_sw *		1687142	0					
ANR	1687714	PtrMemberAccess	jump -> addr		1687142	1					
ANR	1687715	Identifier	jump		1687142	0					
ANR	1687716	Identifier	addr		1687142	1					
ANR	1687717	PtrMemberAccess	jump -> u . label -> addr		1687142	1					
ANR	1687718	MemberAccess	jump -> u . label		1687142	0					
ANR	1687719	PtrMemberAccess	jump -> u		1687142	0					
ANR	1687720	Identifier	jump		1687142	0					
ANR	1687721	Identifier	u		1687142	1					
ANR	1687722	Identifier	label		1687142	1					
ANR	1687723	Identifier	addr		1687142	1					
ANR	1687724	ExpressionStatement	jump = jump -> next	552:2:15486:15503	1687142	1	True				
ANR	1687725	AssignmentExpression	jump = jump -> next		1687142	0		=			
ANR	1687726	Identifier	jump		1687142	0					
ANR	1687727	PtrMemberAccess	jump -> next		1687142	1					
ANR	1687728	Identifier	jump		1687142	0					
ANR	1687729	Identifier	next		1687142	1					
ANR	1687730	ExpressionStatement	SLJIT_ASSERT ( code_ptr <= code + compiler -> size )	556:1:15567:15614	1687142	25	True				
ANR	1687731	CallExpression	SLJIT_ASSERT ( code_ptr <= code + compiler -> size )		1687142	0					
ANR	1687732	Callee	SLJIT_ASSERT		1687142	0					
ANR	1687733	Identifier	SLJIT_ASSERT		1687142	0					
ANR	1687734	ArgumentList	code_ptr <= code + compiler -> size		1687142	1					
ANR	1687735	Argument	code_ptr <= code + compiler -> size		1687142	0					
ANR	1687736	RelationalExpression	code_ptr <= code + compiler -> size		1687142	0		<=			
ANR	1687737	Identifier	code_ptr		1687142	0					
ANR	1687738	AdditiveExpression	code + compiler -> size		1687142	1		+			
ANR	1687739	Identifier	code		1687142	0					
ANR	1687740	PtrMemberAccess	compiler -> size		1687142	1					
ANR	1687741	Identifier	compiler		1687142	0					
ANR	1687742	Identifier	size		1687142	1					
ANR	1687743	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	557:1:15617:15653	1687142	26	True				
ANR	1687744	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1687142	0		=			
ANR	1687745	PtrMemberAccess	compiler -> error		1687142	0					
ANR	1687746	Identifier	compiler		1687142	0					
ANR	1687747	Identifier	error		1687142	1					
ANR	1687748	Identifier	SLJIT_ERR_COMPILED		1687142	1					
ANR	1687749	ExpressionStatement	compiler -> executable_size = code_ptr - code	558:1:15656:15699	1687142	27	True				
ANR	1687750	AssignmentExpression	compiler -> executable_size = code_ptr - code		1687142	0		=			
ANR	1687751	PtrMemberAccess	compiler -> executable_size		1687142	0					
ANR	1687752	Identifier	compiler		1687142	0					
ANR	1687753	Identifier	executable_size		1687142	1					
ANR	1687754	AdditiveExpression	code_ptr - code		1687142	1		-			
ANR	1687755	Identifier	code_ptr		1687142	0					
ANR	1687756	Identifier	code		1687142	1					
ANR	1687757	ReturnStatement	return ( void * ) code ;	559:1:15702:15720	1687142	28	True				
ANR	1687758	CastExpression	( void * ) code		1687142	0					
ANR	1687759	CastTarget	void *		1687142	0					
ANR	1687760	Identifier	code		1687142	1					
ANR	1687761	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1687142	1					
ANR	1687762	Identifier	sljit_generate_code		1687142	2					
ANR	1687763	ParameterList	struct sljit_compiler * compiler		1687142	3					
ANR	1687764	Parameter	struct sljit_compiler * compiler	446:51:11988:12018	1687142	0	True				
ANR	1687765	ParameterType	struct sljit_compiler *		1687142	0					
ANR	1687766	Identifier	compiler		1687142	1					
ANR	1687767	CFGEntryNode	ENTRY		1687142		True				
ANR	1687768	CFGExitNode	EXIT		1687142		True				
ANR	1687769	Symbol	label -> addr		1687142						
ANR	1687770	Symbol	compiler -> buf		1687142						
ANR	1687771	Symbol	generate_near_jump_code		1687142						
ANR	1687772	Symbol	SLJIT_MALLOC_EXEC		1687142						
ANR	1687773	Symbol	JUMP_LABEL		1687142						
ANR	1687774	Symbol	label -> next		1687142						
ANR	1687775	Symbol	* compiler		1687142						
ANR	1687776	Symbol	const_ -> next		1687142						
ANR	1687777	Symbol	const_ -> addr		1687142						
ANR	1687778	Symbol	len		1687142						
ANR	1687779	Symbol	buf -> next		1687142						
ANR	1687780	Symbol	buf_end		1687142						
ANR	1687781	Symbol	compiler -> executable_size		1687142						
ANR	1687782	Symbol	jump		1687142						
ANR	1687783	Symbol	buf -> used_size		1687142						
ANR	1687784	Symbol	check_sljit_generate_code		1687142						
ANR	1687785	Symbol	* buf		1687142						
ANR	1687786	Symbol	compiler -> labels		1687142						
ANR	1687787	Symbol	buf -> memory		1687142						
ANR	1687788	Symbol	* buf_ptr ++		1687142						
ANR	1687789	Symbol	jump -> addr		1687142						
ANR	1687790	Symbol	* jump -> addr		1687142						
ANR	1687791	Symbol	* ( sljit_sw * ) jump -> addr		1687142						
ANR	1687792	Symbol	JMP_i32		1687142						
ANR	1687793	Symbol	buf_ptr		1687142						
ANR	1687794	Symbol	* code_ptr		1687142						
ANR	1687795	Symbol	* jump -> u . label		1687142						
ANR	1687796	Symbol	jump -> u . target		1687142						
ANR	1687797	Symbol	compiler -> jumps		1687142						
ANR	1687798	Symbol	jump -> next		1687142						
ANR	1687799	Symbol	label -> size		1687142						
ANR	1687800	Symbol	code		1687142						
ANR	1687801	Symbol	* * jump		1687142						
ANR	1687802	Symbol	* jump		1687142						
ANR	1687803	Symbol	jump -> u		1687142						
ANR	1687804	Symbol	jump -> flags		1687142						
ANR	1687805	Symbol	CALL_i32		1687142						
ANR	1687806	Symbol	generate_far_jump_code		1687142						
ANR	1687807	Symbol	code_ptr		1687142						
ANR	1687808	Symbol	* code_ptr ++		1687142						
ANR	1687809	Symbol	SLJIT_REWRITABLE_JUMP		1687142						
ANR	1687810	Symbol	compiler		1687142						
ANR	1687811	Symbol	PATCH_MW		1687142						
ANR	1687812	Symbol	* buf_ptr		1687142						
ANR	1687813	Symbol	const_		1687142						
ANR	1687814	Symbol	compiler -> consts		1687142						
ANR	1687815	Symbol	* const_		1687142						
ANR	1687816	Symbol	label		1687142						
ANR	1687817	Symbol	* ( sljit_sw * ) buf_ptr		1687142						
ANR	1687818	Symbol	PATCH_MB		1687142						
ANR	1687819	Symbol	buf		1687142						
ANR	1687820	Symbol	PATCH_MD		1687142						
ANR	1687821	Symbol	compiler -> size		1687142						
ANR	1687822	Symbol	* jump -> u		1687142						
ANR	1687823	Symbol	jump -> u . label -> addr		1687142						
ANR	1687824	Symbol	* ( sljit_sw * ) code_ptr		1687142						
ANR	1687825	Symbol	* ( sljit_ub * ) jump -> addr		1687142						
ANR	1687826	Symbol	jump -> u . label		1687142						
ANR	1687827	Symbol	compiler -> error		1687142						
ANR	1687828	Symbol	SLJIT_ERR_COMPILED		1687142						
ANR	1687829	Symbol	* label		1687142						
ANR	1687830	DeclStmt									
ANR	1687831	Decl							sljit_si	"sljit_si ( struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w )"	emit_cum_binary
ANR	1687832	DeclStmt									
ANR	1687833	Decl							sljit_si	"sljit_si ( struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w )"	emit_non_cum_binary
ANR	1687834	DeclStmt									
ANR	1687835	Decl							sljit_si	"sljit_si ( struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw )"	emit_mov
ANR	1687836	Function	emit_save_flags	582:0:16542:17096							
ANR	1687837	FunctionDef	emit_save_flags (struct sljit_compiler * compiler)		1687836	0					
ANR	1687838	CompoundStatement		583:0:16620:17096	1687836	0					
ANR	1687839	IdentifierDeclStatement	sljit_ub * inst ;	584:1:16623:16637	1687836	0	True				
ANR	1687840	IdentifierDecl	* inst		1687836	0					
ANR	1687841	IdentifierDeclType	sljit_ub *		1687836	0					
ANR	1687842	Identifier	inst		1687836	1					
ANR	1687843	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"	587:1:16698:16743	1687836	1	True				
ANR	1687844	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1687836	0		=			
ANR	1687845	Identifier	inst		1687836	0					
ANR	1687846	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1687836	1					
ANR	1687847	CastTarget	sljit_ub *		1687836	0					
ANR	1687848	CallExpression	"ensure_buf ( compiler , 1 + 5 )"		1687836	1					
ANR	1687849	Callee	ensure_buf		1687836	0					
ANR	1687850	Identifier	ensure_buf		1687836	0					
ANR	1687851	ArgumentList	compiler		1687836	1					
ANR	1687852	Argument	compiler		1687836	0					
ANR	1687853	Identifier	compiler		1687836	0					
ANR	1687854	Argument	1 + 5		1687836	1					
ANR	1687855	AdditiveExpression	1 + 5		1687836	0		+			
ANR	1687856	PrimaryExpression	1		1687836	0					
ANR	1687857	PrimaryExpression	5		1687836	1					
ANR	1687858	ExpressionStatement	FAIL_IF ( ! inst )	588:1:16746:16760	1687836	2	True				
ANR	1687859	CallExpression	FAIL_IF ( ! inst )		1687836	0					
ANR	1687860	Callee	FAIL_IF		1687836	0					
ANR	1687861	Identifier	FAIL_IF		1687836	0					
ANR	1687862	ArgumentList	! inst		1687836	1					
ANR	1687863	Argument	! inst		1687836	0					
ANR	1687864	UnaryOperationExpression	! inst		1687836	0					
ANR	1687865	UnaryOperator	!		1687836	0					
ANR	1687866	Identifier	inst		1687836	1					
ANR	1687867	ExpressionStatement	INC_SIZE ( 5 )	589:1:16763:16774	1687836	3	True				
ANR	1687868	CallExpression	INC_SIZE ( 5 )		1687836	0					
ANR	1687869	Callee	INC_SIZE		1687836	0					
ANR	1687870	Identifier	INC_SIZE		1687836	0					
ANR	1687871	ArgumentList	5		1687836	1					
ANR	1687872	Argument	5		1687836	0					
ANR	1687873	PrimaryExpression	5		1687836	0					
ANR	1687874	ExpressionStatement	* inst ++ = LEA_r_m	596:1:16887:16904	1687836	4	True				
ANR	1687875	AssignmentExpression	* inst ++ = LEA_r_m		1687836	0		=			
ANR	1687876	UnaryOperationExpression	* inst ++		1687836	0					
ANR	1687877	UnaryOperator	*		1687836	0					
ANR	1687878	PostIncDecOperationExpression	inst ++		1687836	1					
ANR	1687879	Identifier	inst		1687836	0					
ANR	1687880	IncDec	++		1687836	1					
ANR	1687881	Identifier	LEA_r_m		1687836	1					
ANR	1687882	ExpressionStatement	* inst ++ = 0x64	597:1:16955:16969	1687836	5	True				
ANR	1687883	AssignmentExpression	* inst ++ = 0x64		1687836	0		=			
ANR	1687884	UnaryOperationExpression	* inst ++		1687836	0					
ANR	1687885	UnaryOperator	*		1687836	0					
ANR	1687886	PostIncDecOperationExpression	inst ++		1687836	1					
ANR	1687887	Identifier	inst		1687836	0					
ANR	1687888	IncDec	++		1687836	1					
ANR	1687889	PrimaryExpression	0x64		1687836	1					
ANR	1687890	ExpressionStatement	* inst ++ = 0x24	598:1:16972:16986	1687836	6	True				
ANR	1687891	AssignmentExpression	* inst ++ = 0x24		1687836	0		=			
ANR	1687892	UnaryOperationExpression	* inst ++		1687836	0					
ANR	1687893	UnaryOperator	*		1687836	0					
ANR	1687894	PostIncDecOperationExpression	inst ++		1687836	1					
ANR	1687895	Identifier	inst		1687836	0					
ANR	1687896	IncDec	++		1687836	1					
ANR	1687897	PrimaryExpression	0x24		1687836	1					
ANR	1687898	ExpressionStatement	* inst ++ = ( sljit_ub ) sizeof ( sljit_sw )	599:1:16989:17025	1687836	7	True				
ANR	1687899	AssignmentExpression	* inst ++ = ( sljit_ub ) sizeof ( sljit_sw )		1687836	0		=			
ANR	1687900	UnaryOperationExpression	* inst ++		1687836	0					
ANR	1687901	UnaryOperator	*		1687836	0					
ANR	1687902	PostIncDecOperationExpression	inst ++		1687836	1					
ANR	1687903	Identifier	inst		1687836	0					
ANR	1687904	IncDec	++		1687836	1					
ANR	1687905	CastExpression	( sljit_ub ) sizeof ( sljit_sw )		1687836	1					
ANR	1687906	CastTarget	sljit_ub		1687836	0					
ANR	1687907	SizeofExpression	sizeof ( sljit_sw )		1687836	1					
ANR	1687908	Sizeof	sizeof		1687836	0					
ANR	1687909	SizeofOperand	sljit_sw		1687836	1					
ANR	1687910	ExpressionStatement	* inst ++ = PUSHF	600:1:17028:17043	1687836	8	True				
ANR	1687911	AssignmentExpression	* inst ++ = PUSHF		1687836	0		=			
ANR	1687912	UnaryOperationExpression	* inst ++		1687836	0					
ANR	1687913	UnaryOperator	*		1687836	0					
ANR	1687914	PostIncDecOperationExpression	inst ++		1687836	1					
ANR	1687915	Identifier	inst		1687836	0					
ANR	1687916	IncDec	++		1687836	1					
ANR	1687917	Identifier	PUSHF		1687836	1					
ANR	1687918	ExpressionStatement	compiler -> flags_saved = 1	601:1:17046:17071	1687836	9	True				
ANR	1687919	AssignmentExpression	compiler -> flags_saved = 1		1687836	0		=			
ANR	1687920	PtrMemberAccess	compiler -> flags_saved		1687836	0					
ANR	1687921	Identifier	compiler		1687836	0					
ANR	1687922	Identifier	flags_saved		1687836	1					
ANR	1687923	PrimaryExpression	1		1687836	1					
ANR	1687924	ReturnStatement	return SLJIT_SUCCESS ;	602:1:17074:17094	1687836	10	True				
ANR	1687925	Identifier	SLJIT_SUCCESS		1687836	0					
ANR	1687926	ReturnType	static SLJIT_INLINE sljit_si		1687836	1					
ANR	1687927	Identifier	emit_save_flags		1687836	2					
ANR	1687928	ParameterList	struct sljit_compiler * compiler		1687836	3					
ANR	1687929	Parameter	struct sljit_compiler * compiler	582:45:16587:16617	1687836	0	True				
ANR	1687930	ParameterType	struct sljit_compiler *		1687836	0					
ANR	1687931	Identifier	compiler		1687836	1					
ANR	1687932	CFGEntryNode	ENTRY		1687836		True				
ANR	1687933	CFGExitNode	EXIT		1687836		True				
ANR	1687934	Symbol	LEA_r_m		1687836						
ANR	1687935	Symbol	PUSHF		1687836						
ANR	1687936	Symbol	inst		1687836						
ANR	1687937	Symbol	ensure_buf		1687836						
ANR	1687938	Symbol	compiler -> flags_saved		1687836						
ANR	1687939	Symbol	* inst ++		1687836						
ANR	1687940	Symbol	SLJIT_SUCCESS		1687836						
ANR	1687941	Symbol	* compiler		1687836						
ANR	1687942	Symbol	compiler		1687836						
ANR	1687943	Function	emit_restore_flags	605:0:17099:17713							
ANR	1687944	FunctionDef	"emit_restore_flags (struct sljit_compiler * compiler , sljit_si keep_flags)"		1687943	0					
ANR	1687945	CompoundStatement		606:0:17201:17713	1687943	0					
ANR	1687946	IdentifierDeclStatement	sljit_ub * inst ;	607:1:17204:17218	1687943	0	True				
ANR	1687947	IdentifierDecl	* inst		1687943	0					
ANR	1687948	IdentifierDeclType	sljit_ub *		1687943	0					
ANR	1687949	Identifier	inst		1687943	1					
ANR	1687950	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"	610:1:17279:17324	1687943	1	True				
ANR	1687951	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1687943	0		=			
ANR	1687952	Identifier	inst		1687943	0					
ANR	1687953	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 5 )"		1687943	1					
ANR	1687954	CastTarget	sljit_ub *		1687943	0					
ANR	1687955	CallExpression	"ensure_buf ( compiler , 1 + 5 )"		1687943	1					
ANR	1687956	Callee	ensure_buf		1687943	0					
ANR	1687957	Identifier	ensure_buf		1687943	0					
ANR	1687958	ArgumentList	compiler		1687943	1					
ANR	1687959	Argument	compiler		1687943	0					
ANR	1687960	Identifier	compiler		1687943	0					
ANR	1687961	Argument	1 + 5		1687943	1					
ANR	1687962	AdditiveExpression	1 + 5		1687943	0		+			
ANR	1687963	PrimaryExpression	1		1687943	0					
ANR	1687964	PrimaryExpression	5		1687943	1					
ANR	1687965	ExpressionStatement	FAIL_IF ( ! inst )	611:1:17327:17341	1687943	2	True				
ANR	1687966	CallExpression	FAIL_IF ( ! inst )		1687943	0					
ANR	1687967	Callee	FAIL_IF		1687943	0					
ANR	1687968	Identifier	FAIL_IF		1687943	0					
ANR	1687969	ArgumentList	! inst		1687943	1					
ANR	1687970	Argument	! inst		1687943	0					
ANR	1687971	UnaryOperationExpression	! inst		1687943	0					
ANR	1687972	UnaryOperator	!		1687943	0					
ANR	1687973	Identifier	inst		1687943	1					
ANR	1687974	ExpressionStatement	INC_SIZE ( 5 )	612:1:17344:17355	1687943	3	True				
ANR	1687975	CallExpression	INC_SIZE ( 5 )		1687943	0					
ANR	1687976	Callee	INC_SIZE		1687943	0					
ANR	1687977	Identifier	INC_SIZE		1687943	0					
ANR	1687978	ArgumentList	5		1687943	1					
ANR	1687979	Argument	5		1687943	0					
ANR	1687980	PrimaryExpression	5		1687943	0					
ANR	1687981	ExpressionStatement	* inst ++ = POPF	613:1:17358:17372	1687943	4	True				
ANR	1687982	AssignmentExpression	* inst ++ = POPF		1687943	0		=			
ANR	1687983	UnaryOperationExpression	* inst ++		1687943	0					
ANR	1687984	UnaryOperator	*		1687943	0					
ANR	1687985	PostIncDecOperationExpression	inst ++		1687943	1					
ANR	1687986	Identifier	inst		1687943	0					
ANR	1687987	IncDec	++		1687943	1					
ANR	1687988	Identifier	POPF		1687943	1					
ANR	1687989	ExpressionStatement	* inst ++ = LEA_r_m	621:1:17502:17519	1687943	5	True				
ANR	1687990	AssignmentExpression	* inst ++ = LEA_r_m		1687943	0		=			
ANR	1687991	UnaryOperationExpression	* inst ++		1687943	0					
ANR	1687992	UnaryOperator	*		1687943	0					
ANR	1687993	PostIncDecOperationExpression	inst ++		1687943	1					
ANR	1687994	Identifier	inst		1687943	0					
ANR	1687995	IncDec	++		1687943	1					
ANR	1687996	Identifier	LEA_r_m		1687943	1					
ANR	1687997	ExpressionStatement	* inst ++ = 0x64	622:1:17570:17584	1687943	6	True				
ANR	1687998	AssignmentExpression	* inst ++ = 0x64		1687943	0		=			
ANR	1687999	UnaryOperationExpression	* inst ++		1687943	0					
ANR	1688000	UnaryOperator	*		1687943	0					
ANR	1688001	PostIncDecOperationExpression	inst ++		1687943	1					
ANR	1688002	Identifier	inst		1687943	0					
ANR	1688003	IncDec	++		1687943	1					
ANR	1688004	PrimaryExpression	0x64		1687943	1					
ANR	1688005	ExpressionStatement	* inst ++ = 0x24	623:1:17587:17601	1687943	7	True				
ANR	1688006	AssignmentExpression	* inst ++ = 0x24		1687943	0		=			
ANR	1688007	UnaryOperationExpression	* inst ++		1687943	0					
ANR	1688008	UnaryOperator	*		1687943	0					
ANR	1688009	PostIncDecOperationExpression	inst ++		1687943	1					
ANR	1688010	Identifier	inst		1687943	0					
ANR	1688011	IncDec	++		1687943	1					
ANR	1688012	PrimaryExpression	0x24		1687943	1					
ANR	1688013	ExpressionStatement	* inst ++ = ( sljit_ub ) - ( sljit_sb ) sizeof ( sljit_sw )	624:1:17604:17651	1687943	8	True				
ANR	1688014	AssignmentExpression	* inst ++ = ( sljit_ub ) - ( sljit_sb ) sizeof ( sljit_sw )		1687943	0		=			
ANR	1688015	UnaryOperationExpression	* inst ++		1687943	0					
ANR	1688016	UnaryOperator	*		1687943	0					
ANR	1688017	PostIncDecOperationExpression	inst ++		1687943	1					
ANR	1688018	Identifier	inst		1687943	0					
ANR	1688019	IncDec	++		1687943	1					
ANR	1688020	CastExpression	( sljit_ub ) - ( sljit_sb ) sizeof ( sljit_sw )		1687943	1					
ANR	1688021	CastTarget	sljit_ub		1687943	0					
ANR	1688022	UnaryOperationExpression	- ( sljit_sb ) sizeof ( sljit_sw )		1687943	1					
ANR	1688023	UnaryOperator	-		1687943	0					
ANR	1688024	CastExpression	( sljit_sb ) sizeof ( sljit_sw )		1687943	1					
ANR	1688025	CastTarget	sljit_sb		1687943	0					
ANR	1688026	SizeofExpression	sizeof ( sljit_sw )		1687943	1					
ANR	1688027	Sizeof	sizeof		1687943	0					
ANR	1688028	SizeofOperand	sljit_sw		1687943	1					
ANR	1688029	ExpressionStatement	compiler -> flags_saved = keep_flags	625:1:17654:17688	1687943	9	True				
ANR	1688030	AssignmentExpression	compiler -> flags_saved = keep_flags		1687943	0		=			
ANR	1688031	PtrMemberAccess	compiler -> flags_saved		1687943	0					
ANR	1688032	Identifier	compiler		1687943	0					
ANR	1688033	Identifier	flags_saved		1687943	1					
ANR	1688034	Identifier	keep_flags		1687943	1					
ANR	1688035	ReturnStatement	return SLJIT_SUCCESS ;	626:1:17691:17711	1687943	10	True				
ANR	1688036	Identifier	SLJIT_SUCCESS		1687943	0					
ANR	1688037	ReturnType	static SLJIT_INLINE sljit_si		1687943	1					
ANR	1688038	Identifier	emit_restore_flags		1687943	2					
ANR	1688039	ParameterList	"struct sljit_compiler * compiler , sljit_si keep_flags"		1687943	3					
ANR	1688040	Parameter	struct sljit_compiler * compiler	605:48:17147:17177	1687943	0	True				
ANR	1688041	ParameterType	struct sljit_compiler *		1687943	0					
ANR	1688042	Identifier	compiler		1687943	1					
ANR	1688043	Parameter	sljit_si keep_flags	605:81:17180:17198	1687943	1	True				
ANR	1688044	ParameterType	sljit_si		1687943	0					
ANR	1688045	Identifier	keep_flags		1687943	1					
ANR	1688046	CFGEntryNode	ENTRY		1687943		True				
ANR	1688047	CFGExitNode	EXIT		1687943		True				
ANR	1688048	Symbol	POPF		1687943						
ANR	1688049	Symbol	LEA_r_m		1687943						
ANR	1688050	Symbol	keep_flags		1687943						
ANR	1688051	Symbol	inst		1687943						
ANR	1688052	Symbol	ensure_buf		1687943						
ANR	1688053	Symbol	compiler -> flags_saved		1687943						
ANR	1688054	Symbol	* inst ++		1687943						
ANR	1688055	Symbol	SLJIT_SUCCESS		1687943						
ANR	1688056	Symbol	* compiler		1687943						
ANR	1688057	Symbol	compiler		1687943						
ANR	1688058	Function	sljit_grow_stack	632:0:17751:18332							
ANR	1688059	FunctionDef	sljit_grow_stack (sljit_sw local_size)		1688058	0					
ANR	1688060	CompoundStatement		633:0:17812:18332	1688058	0					
ANR	1688061	ExpressionStatement	* ( volatile sljit_si * ) alloca ( local_size ) = 0	641:1:18287:18330	1688058	0	True				
ANR	1688062	AssignmentExpression	* ( volatile sljit_si * ) alloca ( local_size ) = 0		1688058	0		=			
ANR	1688063	UnaryOperationExpression	* ( volatile sljit_si * ) alloca ( local_size )		1688058	0					
ANR	1688064	UnaryOperator	*		1688058	0					
ANR	1688065	CastExpression	( volatile sljit_si * ) alloca ( local_size )		1688058	1					
ANR	1688066	CastTarget	volatile sljit_si *		1688058	0					
ANR	1688067	CallExpression	alloca ( local_size )		1688058	1					
ANR	1688068	Callee	alloca		1688058	0					
ANR	1688069	Identifier	alloca		1688058	0					
ANR	1688070	ArgumentList	local_size		1688058	1					
ANR	1688071	Argument	local_size		1688058	0					
ANR	1688072	Identifier	local_size		1688058	0					
ANR	1688073	PrimaryExpression	0		1688058	1					
ANR	1688074	ReturnType	static void SLJIT_CALL		1688058	1					
ANR	1688075	Identifier	sljit_grow_stack		1688058	2					
ANR	1688076	ParameterList	sljit_sw local_size		1688058	3					
ANR	1688077	Parameter	sljit_sw local_size	632:40:17791:17809	1688058	0	True				
ANR	1688078	ParameterType	sljit_sw		1688058	0					
ANR	1688079	Identifier	local_size		1688058	1					
ANR	1688080	CFGEntryNode	ENTRY		1688058		True				
ANR	1688081	CFGExitNode	EXIT		1688058		True				
ANR	1688082	Symbol	local_size		1688058						
ANR	1688083	Symbol	* alloca		1688058						
ANR	1688084	Symbol	alloca		1688058						
ANR	1688085	Symbol	* ( volatile sljit_si * ) alloca ( local_size )		1688058						
ANR	1688086	Function	emit_mov	652:0:18476:20307							
ANR	1688087	FunctionDef	"emit_mov (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1688086	0					
ANR	1688088	CompoundStatement		655:0:18594:20307	1688086	0					
ANR	1688089	IdentifierDeclStatement	sljit_ub * inst ;	656:1:18597:18611	1688086	0	True				
ANR	1688090	IdentifierDecl	* inst		1688086	0					
ANR	1688091	IdentifierDeclType	sljit_ub *		1688086	0					
ANR	1688092	Identifier	inst		1688086	1					
ANR	1688093	IfStatement	if ( dst == SLJIT_UNUSED )		1688086	1					
ANR	1688094	Condition	dst == SLJIT_UNUSED	658:5:18619:18637	1688086	0	True				
ANR	1688095	EqualityExpression	dst == SLJIT_UNUSED		1688086	0		==			
ANR	1688096	Identifier	dst		1688086	0					
ANR	1688097	Identifier	SLJIT_UNUSED		1688086	1					
ANR	1688098	CompoundStatement		4:26:45:45	1688086	1					
ANR	1688099	IfStatement	if ( src & SLJIT_MEM )		1688086	0					
ANR	1688100	Condition	src & SLJIT_MEM	660:6:18701:18715	1688086	0	True				
ANR	1688101	BitAndExpression	src & SLJIT_MEM		1688086	0		&			
ANR	1688102	Identifier	src		1688086	0					
ANR	1688103	Identifier	SLJIT_MEM		1688086	1					
ANR	1688104	CompoundStatement		6:23:123:123	1688086	1					
ANR	1688105	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"	661:3:18723:18787	1688086	0	True				
ANR	1688106	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1688086	0		=			
ANR	1688107	Identifier	inst		1688086	0					
ANR	1688108	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1688086	1					
ANR	1688109	Callee	emit_x86_instruction		1688086	0					
ANR	1688110	Identifier	emit_x86_instruction		1688086	0					
ANR	1688111	ArgumentList	compiler		1688086	1					
ANR	1688112	Argument	compiler		1688086	0					
ANR	1688113	Identifier	compiler		1688086	0					
ANR	1688114	Argument	1		1688086	1					
ANR	1688115	PrimaryExpression	1		1688086	0					
ANR	1688116	Argument	TMP_REG1		1688086	2					
ANR	1688117	Identifier	TMP_REG1		1688086	0					
ANR	1688118	Argument	0		1688086	3					
ANR	1688119	PrimaryExpression	0		1688086	0					
ANR	1688120	Argument	src		1688086	4					
ANR	1688121	Identifier	src		1688086	0					
ANR	1688122	Argument	srcw		1688086	5					
ANR	1688123	Identifier	srcw		1688086	0					
ANR	1688124	ExpressionStatement	FAIL_IF ( ! inst )	662:3:18792:18806	1688086	1	True				
ANR	1688125	CallExpression	FAIL_IF ( ! inst )		1688086	0					
ANR	1688126	Callee	FAIL_IF		1688086	0					
ANR	1688127	Identifier	FAIL_IF		1688086	0					
ANR	1688128	ArgumentList	! inst		1688086	1					
ANR	1688129	Argument	! inst		1688086	0					
ANR	1688130	UnaryOperationExpression	! inst		1688086	0					
ANR	1688131	UnaryOperator	!		1688086	0					
ANR	1688132	Identifier	inst		1688086	1					
ANR	1688133	ExpressionStatement	* inst = MOV_r_rm	663:3:18811:18827	1688086	2	True				
ANR	1688134	AssignmentExpression	* inst = MOV_r_rm		1688086	0		=			
ANR	1688135	UnaryOperationExpression	* inst		1688086	0					
ANR	1688136	UnaryOperator	*		1688086	0					
ANR	1688137	Identifier	inst		1688086	1					
ANR	1688138	Identifier	MOV_r_rm		1688086	1					
ANR	1688139	ReturnStatement	return SLJIT_SUCCESS ;	665:2:18835:18855	1688086	1	True				
ANR	1688140	Identifier	SLJIT_SUCCESS		1688086	0					
ANR	1688141	IfStatement	if ( FAST_IS_REG ( src ) )		1688086	2					
ANR	1688142	Condition	FAST_IS_REG ( src )	667:5:18865:18880	1688086	0	True				
ANR	1688143	CallExpression	FAST_IS_REG ( src )		1688086	0					
ANR	1688144	Callee	FAST_IS_REG		1688086	0					
ANR	1688145	Identifier	FAST_IS_REG		1688086	0					
ANR	1688146	ArgumentList	src		1688086	1					
ANR	1688147	Argument	src		1688086	0					
ANR	1688148	Identifier	src		1688086	0					
ANR	1688149	CompoundStatement		13:23:288:288	1688086	1					
ANR	1688150	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src , 0 , dst , dstw )"	668:2:18887:18946	1688086	0	True				
ANR	1688151	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src , 0 , dst , dstw )"		1688086	0		=			
ANR	1688152	Identifier	inst		1688086	0					
ANR	1688153	CallExpression	"emit_x86_instruction ( compiler , 1 , src , 0 , dst , dstw )"		1688086	1					
ANR	1688154	Callee	emit_x86_instruction		1688086	0					
ANR	1688155	Identifier	emit_x86_instruction		1688086	0					
ANR	1688156	ArgumentList	compiler		1688086	1					
ANR	1688157	Argument	compiler		1688086	0					
ANR	1688158	Identifier	compiler		1688086	0					
ANR	1688159	Argument	1		1688086	1					
ANR	1688160	PrimaryExpression	1		1688086	0					
ANR	1688161	Argument	src		1688086	2					
ANR	1688162	Identifier	src		1688086	0					
ANR	1688163	Argument	0		1688086	3					
ANR	1688164	PrimaryExpression	0		1688086	0					
ANR	1688165	Argument	dst		1688086	4					
ANR	1688166	Identifier	dst		1688086	0					
ANR	1688167	Argument	dstw		1688086	5					
ANR	1688168	Identifier	dstw		1688086	0					
ANR	1688169	ExpressionStatement	FAIL_IF ( ! inst )	669:2:18950:18964	1688086	1	True				
ANR	1688170	CallExpression	FAIL_IF ( ! inst )		1688086	0					
ANR	1688171	Callee	FAIL_IF		1688086	0					
ANR	1688172	Identifier	FAIL_IF		1688086	0					
ANR	1688173	ArgumentList	! inst		1688086	1					
ANR	1688174	Argument	! inst		1688086	0					
ANR	1688175	UnaryOperationExpression	! inst		1688086	0					
ANR	1688176	UnaryOperator	!		1688086	0					
ANR	1688177	Identifier	inst		1688086	1					
ANR	1688178	ExpressionStatement	* inst = MOV_rm_r	670:2:18968:18984	1688086	2	True				
ANR	1688179	AssignmentExpression	* inst = MOV_rm_r		1688086	0		=			
ANR	1688180	UnaryOperationExpression	* inst		1688086	0					
ANR	1688181	UnaryOperator	*		1688086	0					
ANR	1688182	Identifier	inst		1688086	1					
ANR	1688183	Identifier	MOV_rm_r		1688086	1					
ANR	1688184	ReturnStatement	return SLJIT_SUCCESS ;	671:2:18988:19008	1688086	3	True				
ANR	1688185	Identifier	SLJIT_SUCCESS		1688086	0					
ANR	1688186	IfStatement	if ( src & SLJIT_IMM )		1688086	3					
ANR	1688187	Condition	src & SLJIT_IMM	673:5:19018:19032	1688086	0	True				
ANR	1688188	BitAndExpression	src & SLJIT_IMM		1688086	0		&			
ANR	1688189	Identifier	src		1688086	0					
ANR	1688190	Identifier	SLJIT_IMM		1688086	1					
ANR	1688191	CompoundStatement		19:22:440:440	1688086	1					
ANR	1688192	IfStatement	if ( FAST_IS_REG ( dst ) )		1688086	0					
ANR	1688193	Condition	FAST_IS_REG ( dst )	674:6:19043:19058	1688086	0	True				
ANR	1688194	CallExpression	FAST_IS_REG ( dst )		1688086	0					
ANR	1688195	Callee	FAST_IS_REG		1688086	0					
ANR	1688196	Identifier	FAST_IS_REG		1688086	0					
ANR	1688197	ArgumentList	dst		1688086	1					
ANR	1688198	Argument	dst		1688086	0					
ANR	1688199	Identifier	dst		1688086	0					
ANR	1688200	CompoundStatement		20:24:466:466	1688086	1					
ANR	1688201	ReturnStatement	"return emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw ) ;"	676:3:19123:19183	1688086	0	True				
ANR	1688202	CallExpression	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw )"		1688086	0					
ANR	1688203	Callee	emit_do_imm		1688086	0					
ANR	1688204	Identifier	emit_do_imm		1688086	0					
ANR	1688205	ArgumentList	compiler		1688086	1					
ANR	1688206	Argument	compiler		1688086	0					
ANR	1688207	Identifier	compiler		1688086	0					
ANR	1688208	Argument	MOV_r_i32 + reg_map [ dst ]		1688086	1					
ANR	1688209	AdditiveExpression	MOV_r_i32 + reg_map [ dst ]		1688086	0		+			
ANR	1688210	Identifier	MOV_r_i32		1688086	0					
ANR	1688211	ArrayIndexing	reg_map [ dst ]		1688086	1					
ANR	1688212	Identifier	reg_map		1688086	0					
ANR	1688213	Identifier	dst		1688086	1					
ANR	1688214	Argument	srcw		1688086	2					
ANR	1688215	Identifier	srcw		1688086	0					
ANR	1688216	IfStatement	if ( ! compiler -> mode32 && NOT_HALFWORD ( srcw ) )		1688086	1					
ANR	1688217	Condition	! compiler -> mode32 && NOT_HALFWORD ( srcw )	687:6:19486:19524	1688086	0	True				
ANR	1688218	AndExpression	! compiler -> mode32 && NOT_HALFWORD ( srcw )		1688086	0		&&			
ANR	1688219	UnaryOperationExpression	! compiler -> mode32		1688086	0					
ANR	1688220	UnaryOperator	!		1688086	0					
ANR	1688221	PtrMemberAccess	compiler -> mode32		1688086	1					
ANR	1688222	Identifier	compiler		1688086	0					
ANR	1688223	Identifier	mode32		1688086	1					
ANR	1688224	CallExpression	NOT_HALFWORD ( srcw )		1688086	1					
ANR	1688225	Callee	NOT_HALFWORD		1688086	0					
ANR	1688226	Identifier	NOT_HALFWORD		1688086	0					
ANR	1688227	ArgumentList	srcw		1688086	1					
ANR	1688228	Argument	srcw		1688086	0					
ANR	1688229	Identifier	srcw		1688086	0					
ANR	1688230	CompoundStatement		33:47:932:932	1688086	1					
ANR	1688231	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , srcw ) )"	688:3:19532:19582	1688086	0	True				
ANR	1688232	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , srcw ) )"		1688086	0					
ANR	1688233	Callee	FAIL_IF		1688086	0					
ANR	1688234	Identifier	FAIL_IF		1688086	0					
ANR	1688235	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , srcw )"		1688086	1					
ANR	1688236	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , srcw )"		1688086	0					
ANR	1688237	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , srcw )"		1688086	0					
ANR	1688238	Callee	emit_load_imm64		1688086	0					
ANR	1688239	Identifier	emit_load_imm64		1688086	0					
ANR	1688240	ArgumentList	compiler		1688086	1					
ANR	1688241	Argument	compiler		1688086	0					
ANR	1688242	Identifier	compiler		1688086	0					
ANR	1688243	Argument	TMP_REG2		1688086	1					
ANR	1688244	Identifier	TMP_REG2		1688086	0					
ANR	1688245	Argument	srcw		1688086	2					
ANR	1688246	Identifier	srcw		1688086	0					
ANR	1688247	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , dst , dstw )"	689:3:19587:19651	1688086	1	True				
ANR	1688248	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , dst , dstw )"		1688086	0		=			
ANR	1688249	Identifier	inst		1688086	0					
ANR	1688250	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , dst , dstw )"		1688086	1					
ANR	1688251	Callee	emit_x86_instruction		1688086	0					
ANR	1688252	Identifier	emit_x86_instruction		1688086	0					
ANR	1688253	ArgumentList	compiler		1688086	1					
ANR	1688254	Argument	compiler		1688086	0					
ANR	1688255	Identifier	compiler		1688086	0					
ANR	1688256	Argument	1		1688086	1					
ANR	1688257	PrimaryExpression	1		1688086	0					
ANR	1688258	Argument	TMP_REG2		1688086	2					
ANR	1688259	Identifier	TMP_REG2		1688086	0					
ANR	1688260	Argument	0		1688086	3					
ANR	1688261	PrimaryExpression	0		1688086	0					
ANR	1688262	Argument	dst		1688086	4					
ANR	1688263	Identifier	dst		1688086	0					
ANR	1688264	Argument	dstw		1688086	5					
ANR	1688265	Identifier	dstw		1688086	0					
ANR	1688266	ExpressionStatement	FAIL_IF ( ! inst )	690:3:19656:19670	1688086	2	True				
ANR	1688267	CallExpression	FAIL_IF ( ! inst )		1688086	0					
ANR	1688268	Callee	FAIL_IF		1688086	0					
ANR	1688269	Identifier	FAIL_IF		1688086	0					
ANR	1688270	ArgumentList	! inst		1688086	1					
ANR	1688271	Argument	! inst		1688086	0					
ANR	1688272	UnaryOperationExpression	! inst		1688086	0					
ANR	1688273	UnaryOperator	!		1688086	0					
ANR	1688274	Identifier	inst		1688086	1					
ANR	1688275	ExpressionStatement	* inst = MOV_rm_r	691:3:19675:19691	1688086	3	True				
ANR	1688276	AssignmentExpression	* inst = MOV_rm_r		1688086	0		=			
ANR	1688277	UnaryOperationExpression	* inst		1688086	0					
ANR	1688278	UnaryOperator	*		1688086	0					
ANR	1688279	Identifier	inst		1688086	1					
ANR	1688280	Identifier	MOV_rm_r		1688086	1					
ANR	1688281	ReturnStatement	return SLJIT_SUCCESS ;	692:3:19696:19716	1688086	4	True				
ANR	1688282	Identifier	SLJIT_SUCCESS		1688086	0					
ANR	1688283	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , srcw , dst , dstw )"	695:2:19731:19799	1688086	2	True				
ANR	1688284	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , srcw , dst , dstw )"		1688086	0		=			
ANR	1688285	Identifier	inst		1688086	0					
ANR	1688286	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , srcw , dst , dstw )"		1688086	1					
ANR	1688287	Callee	emit_x86_instruction		1688086	0					
ANR	1688288	Identifier	emit_x86_instruction		1688086	0					
ANR	1688289	ArgumentList	compiler		1688086	1					
ANR	1688290	Argument	compiler		1688086	0					
ANR	1688291	Identifier	compiler		1688086	0					
ANR	1688292	Argument	1		1688086	1					
ANR	1688293	PrimaryExpression	1		1688086	0					
ANR	1688294	Argument	SLJIT_IMM		1688086	2					
ANR	1688295	Identifier	SLJIT_IMM		1688086	0					
ANR	1688296	Argument	srcw		1688086	3					
ANR	1688297	Identifier	srcw		1688086	0					
ANR	1688298	Argument	dst		1688086	4					
ANR	1688299	Identifier	dst		1688086	0					
ANR	1688300	Argument	dstw		1688086	5					
ANR	1688301	Identifier	dstw		1688086	0					
ANR	1688302	ExpressionStatement	FAIL_IF ( ! inst )	696:2:19803:19817	1688086	3	True				
ANR	1688303	CallExpression	FAIL_IF ( ! inst )		1688086	0					
ANR	1688304	Callee	FAIL_IF		1688086	0					
ANR	1688305	Identifier	FAIL_IF		1688086	0					
ANR	1688306	ArgumentList	! inst		1688086	1					
ANR	1688307	Argument	! inst		1688086	0					
ANR	1688308	UnaryOperationExpression	! inst		1688086	0					
ANR	1688309	UnaryOperator	!		1688086	0					
ANR	1688310	Identifier	inst		1688086	1					
ANR	1688311	ExpressionStatement	* inst = MOV_rm_i32	697:2:19821:19839	1688086	4	True				
ANR	1688312	AssignmentExpression	* inst = MOV_rm_i32		1688086	0		=			
ANR	1688313	UnaryOperationExpression	* inst		1688086	0					
ANR	1688314	UnaryOperator	*		1688086	0					
ANR	1688315	Identifier	inst		1688086	1					
ANR	1688316	Identifier	MOV_rm_i32		1688086	1					
ANR	1688317	ReturnStatement	return SLJIT_SUCCESS ;	698:2:19843:19863	1688086	5	True				
ANR	1688318	Identifier	SLJIT_SUCCESS		1688086	0					
ANR	1688319	IfStatement	if ( FAST_IS_REG ( dst ) )		1688086	4					
ANR	1688320	Condition	FAST_IS_REG ( dst )	700:5:19873:19888	1688086	0	True				
ANR	1688321	CallExpression	FAST_IS_REG ( dst )		1688086	0					
ANR	1688322	Callee	FAST_IS_REG		1688086	0					
ANR	1688323	Identifier	FAST_IS_REG		1688086	0					
ANR	1688324	ArgumentList	dst		1688086	1					
ANR	1688325	Argument	dst		1688086	0					
ANR	1688326	Identifier	dst		1688086	0					
ANR	1688327	CompoundStatement		46:23:1296:1296	1688086	1					
ANR	1688328	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src , srcw )"	701:2:19895:19954	1688086	0	True				
ANR	1688329	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src , srcw )"		1688086	0		=			
ANR	1688330	Identifier	inst		1688086	0					
ANR	1688331	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , src , srcw )"		1688086	1					
ANR	1688332	Callee	emit_x86_instruction		1688086	0					
ANR	1688333	Identifier	emit_x86_instruction		1688086	0					
ANR	1688334	ArgumentList	compiler		1688086	1					
ANR	1688335	Argument	compiler		1688086	0					
ANR	1688336	Identifier	compiler		1688086	0					
ANR	1688337	Argument	1		1688086	1					
ANR	1688338	PrimaryExpression	1		1688086	0					
ANR	1688339	Argument	dst		1688086	2					
ANR	1688340	Identifier	dst		1688086	0					
ANR	1688341	Argument	0		1688086	3					
ANR	1688342	PrimaryExpression	0		1688086	0					
ANR	1688343	Argument	src		1688086	4					
ANR	1688344	Identifier	src		1688086	0					
ANR	1688345	Argument	srcw		1688086	5					
ANR	1688346	Identifier	srcw		1688086	0					
ANR	1688347	ExpressionStatement	FAIL_IF ( ! inst )	702:2:19958:19972	1688086	1	True				
ANR	1688348	CallExpression	FAIL_IF ( ! inst )		1688086	0					
ANR	1688349	Callee	FAIL_IF		1688086	0					
ANR	1688350	Identifier	FAIL_IF		1688086	0					
ANR	1688351	ArgumentList	! inst		1688086	1					
ANR	1688352	Argument	! inst		1688086	0					
ANR	1688353	UnaryOperationExpression	! inst		1688086	0					
ANR	1688354	UnaryOperator	!		1688086	0					
ANR	1688355	Identifier	inst		1688086	1					
ANR	1688356	ExpressionStatement	* inst = MOV_r_rm	703:2:19976:19992	1688086	2	True				
ANR	1688357	AssignmentExpression	* inst = MOV_r_rm		1688086	0		=			
ANR	1688358	UnaryOperationExpression	* inst		1688086	0					
ANR	1688359	UnaryOperator	*		1688086	0					
ANR	1688360	Identifier	inst		1688086	1					
ANR	1688361	Identifier	MOV_r_rm		1688086	1					
ANR	1688362	ReturnStatement	return SLJIT_SUCCESS ;	704:2:19996:20016	1688086	3	True				
ANR	1688363	Identifier	SLJIT_SUCCESS		1688086	0					
ANR	1688364	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"	708:1:20079:20143	1688086	5	True				
ANR	1688365	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1688086	0		=			
ANR	1688366	Identifier	inst		1688086	0					
ANR	1688367	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src , srcw )"		1688086	1					
ANR	1688368	Callee	emit_x86_instruction		1688086	0					
ANR	1688369	Identifier	emit_x86_instruction		1688086	0					
ANR	1688370	ArgumentList	compiler		1688086	1					
ANR	1688371	Argument	compiler		1688086	0					
ANR	1688372	Identifier	compiler		1688086	0					
ANR	1688373	Argument	1		1688086	1					
ANR	1688374	PrimaryExpression	1		1688086	0					
ANR	1688375	Argument	TMP_REG1		1688086	2					
ANR	1688376	Identifier	TMP_REG1		1688086	0					
ANR	1688377	Argument	0		1688086	3					
ANR	1688378	PrimaryExpression	0		1688086	0					
ANR	1688379	Argument	src		1688086	4					
ANR	1688380	Identifier	src		1688086	0					
ANR	1688381	Argument	srcw		1688086	5					
ANR	1688382	Identifier	srcw		1688086	0					
ANR	1688383	ExpressionStatement	FAIL_IF ( ! inst )	709:1:20146:20160	1688086	6	True				
ANR	1688384	CallExpression	FAIL_IF ( ! inst )		1688086	0					
ANR	1688385	Callee	FAIL_IF		1688086	0					
ANR	1688386	Identifier	FAIL_IF		1688086	0					
ANR	1688387	ArgumentList	! inst		1688086	1					
ANR	1688388	Argument	! inst		1688086	0					
ANR	1688389	UnaryOperationExpression	! inst		1688086	0					
ANR	1688390	UnaryOperator	!		1688086	0					
ANR	1688391	Identifier	inst		1688086	1					
ANR	1688392	ExpressionStatement	* inst = MOV_r_rm	710:1:20163:20179	1688086	7	True				
ANR	1688393	AssignmentExpression	* inst = MOV_r_rm		1688086	0		=			
ANR	1688394	UnaryOperationExpression	* inst		1688086	0					
ANR	1688395	UnaryOperator	*		1688086	0					
ANR	1688396	Identifier	inst		1688086	1					
ANR	1688397	Identifier	MOV_r_rm		1688086	1					
ANR	1688398	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	711:1:20182:20246	1688086	8	True				
ANR	1688399	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1688086	0		=			
ANR	1688400	Identifier	inst		1688086	0					
ANR	1688401	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1688086	1					
ANR	1688402	Callee	emit_x86_instruction		1688086	0					
ANR	1688403	Identifier	emit_x86_instruction		1688086	0					
ANR	1688404	ArgumentList	compiler		1688086	1					
ANR	1688405	Argument	compiler		1688086	0					
ANR	1688406	Identifier	compiler		1688086	0					
ANR	1688407	Argument	1		1688086	1					
ANR	1688408	PrimaryExpression	1		1688086	0					
ANR	1688409	Argument	TMP_REG1		1688086	2					
ANR	1688410	Identifier	TMP_REG1		1688086	0					
ANR	1688411	Argument	0		1688086	3					
ANR	1688412	PrimaryExpression	0		1688086	0					
ANR	1688413	Argument	dst		1688086	4					
ANR	1688414	Identifier	dst		1688086	0					
ANR	1688415	Argument	dstw		1688086	5					
ANR	1688416	Identifier	dstw		1688086	0					
ANR	1688417	ExpressionStatement	FAIL_IF ( ! inst )	712:1:20249:20263	1688086	9	True				
ANR	1688418	CallExpression	FAIL_IF ( ! inst )		1688086	0					
ANR	1688419	Callee	FAIL_IF		1688086	0					
ANR	1688420	Identifier	FAIL_IF		1688086	0					
ANR	1688421	ArgumentList	! inst		1688086	1					
ANR	1688422	Argument	! inst		1688086	0					
ANR	1688423	UnaryOperationExpression	! inst		1688086	0					
ANR	1688424	UnaryOperator	!		1688086	0					
ANR	1688425	Identifier	inst		1688086	1					
ANR	1688426	ExpressionStatement	* inst = MOV_rm_r	713:1:20266:20282	1688086	10	True				
ANR	1688427	AssignmentExpression	* inst = MOV_rm_r		1688086	0		=			
ANR	1688428	UnaryOperationExpression	* inst		1688086	0					
ANR	1688429	UnaryOperator	*		1688086	0					
ANR	1688430	Identifier	inst		1688086	1					
ANR	1688431	Identifier	MOV_rm_r		1688086	1					
ANR	1688432	ReturnStatement	return SLJIT_SUCCESS ;	714:1:20285:20305	1688086	11	True				
ANR	1688433	Identifier	SLJIT_SUCCESS		1688086	0					
ANR	1688434	ReturnType	static sljit_si		1688086	1					
ANR	1688435	Identifier	emit_mov		1688086	2					
ANR	1688436	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1688086	3					
ANR	1688437	Parameter	struct sljit_compiler * compiler	652:25:18501:18531	1688086	0	True				
ANR	1688438	ParameterType	struct sljit_compiler *		1688086	0					
ANR	1688439	Identifier	compiler		1688086	1					
ANR	1688440	Parameter	sljit_si dst	653:1:18535:18546	1688086	1	True				
ANR	1688441	ParameterType	sljit_si		1688086	0					
ANR	1688442	Identifier	dst		1688086	1					
ANR	1688443	Parameter	sljit_sw dstw	653:15:18549:18561	1688086	2	True				
ANR	1688444	ParameterType	sljit_sw		1688086	0					
ANR	1688445	Identifier	dstw		1688086	1					
ANR	1688446	Parameter	sljit_si src	654:1:18565:18576	1688086	3	True				
ANR	1688447	ParameterType	sljit_si		1688086	0					
ANR	1688448	Identifier	src		1688086	1					
ANR	1688449	Parameter	sljit_sw srcw	654:15:18579:18591	1688086	4	True				
ANR	1688450	ParameterType	sljit_sw		1688086	0					
ANR	1688451	Identifier	srcw		1688086	1					
ANR	1688452	CFGEntryNode	ENTRY		1688086		True				
ANR	1688453	CFGExitNode	EXIT		1688086		True				
ANR	1688454	Symbol	emit_load_imm64		1688086						
ANR	1688455	Symbol	TMP_REG2		1688086						
ANR	1688456	Symbol	TMP_REG1		1688086						
ANR	1688457	Symbol	dst		1688086						
ANR	1688458	Symbol	SLJIT_MEM		1688086						
ANR	1688459	Symbol	MOV_r_i32		1688086						
ANR	1688460	Symbol	reg_map		1688086						
ANR	1688461	Symbol	* compiler		1688086						
ANR	1688462	Symbol	* dst		1688086						
ANR	1688463	Symbol	MOV_rm_i32		1688086						
ANR	1688464	Symbol	SLJIT_IMM		1688086						
ANR	1688465	Symbol	compiler		1688086						
ANR	1688466	Symbol	emit_x86_instruction		1688086						
ANR	1688467	Symbol	* inst		1688086						
ANR	1688468	Symbol	FAST_IS_REG		1688086						
ANR	1688469	Symbol	MOV_r_rm		1688086						
ANR	1688470	Symbol	src		1688086						
ANR	1688471	Symbol	srcw		1688086						
ANR	1688472	Symbol	NOT_HALFWORD		1688086						
ANR	1688473	Symbol	SLJIT_SUCCESS		1688086						
ANR	1688474	Symbol	* reg_map		1688086						
ANR	1688475	Symbol	MOV_rm_r		1688086						
ANR	1688476	Symbol	SLJIT_UNUSED		1688086						
ANR	1688477	Symbol	emit_do_imm		1688086						
ANR	1688478	Symbol	inst		1688086						
ANR	1688479	Symbol	compiler -> mode32		1688086						
ANR	1688480	Symbol	dstw		1688086						
ANR	1688481	Function	sljit_emit_op0	720:0:20414:23698							
ANR	1688482	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1688481	0					
ANR	1688483	CompoundStatement		721:0:20509:23698	1688481	0					
ANR	1688484	IdentifierDeclStatement	sljit_ub * inst ;	722:1:20512:20526	1688481	0	True				
ANR	1688485	IdentifierDecl	* inst		1688481	0					
ANR	1688486	IdentifierDeclType	sljit_ub *		1688481	0					
ANR	1688487	Identifier	inst		1688481	1					
ANR	1688488	IdentifierDeclStatement	sljit_si size ;	724:1:20586:20599	1688481	1	True				
ANR	1688489	IdentifierDecl	size		1688481	0					
ANR	1688490	IdentifierDeclType	sljit_si		1688481	0					
ANR	1688491	Identifier	size		1688481	1					
ANR	1688492	ExpressionStatement	CHECK_ERROR ( )	727:1:20610:20623	1688481	2	True				
ANR	1688493	CallExpression	CHECK_ERROR ( )		1688481	0					
ANR	1688494	Callee	CHECK_ERROR		1688481	0					
ANR	1688495	Identifier	CHECK_ERROR		1688481	0					
ANR	1688496	ArgumentList			1688481	1					
ANR	1688497	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	728:1:20626:20667	1688481	3	True				
ANR	1688498	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1688481	0					
ANR	1688499	Callee	CHECK		1688481	0					
ANR	1688500	Identifier	CHECK		1688481	0					
ANR	1688501	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1688481	1					
ANR	1688502	Argument	"check_sljit_emit_op0 ( compiler , op )"		1688481	0					
ANR	1688503	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1688481	0					
ANR	1688504	Callee	check_sljit_emit_op0		1688481	0					
ANR	1688505	Identifier	check_sljit_emit_op0		1688481	0					
ANR	1688506	ArgumentList	compiler		1688481	1					
ANR	1688507	Argument	compiler		1688481	0					
ANR	1688508	Identifier	compiler		1688481	0					
ANR	1688509	Argument	op		1688481	1					
ANR	1688510	Identifier	op		1688481	0					
ANR	1688511	SwitchStatement	switch ( GET_OPCODE ( op ) )		1688481	4					
ANR	1688512	Condition	GET_OPCODE ( op )	730:9:20679:20692	1688481	0	True				
ANR	1688513	CallExpression	GET_OPCODE ( op )		1688481	0					
ANR	1688514	Callee	GET_OPCODE		1688481	0					
ANR	1688515	Identifier	GET_OPCODE		1688481	0					
ANR	1688516	ArgumentList	op		1688481	1					
ANR	1688517	Argument	op		1688481	0					
ANR	1688518	Identifier	op		1688481	0					
ANR	1688519	CompoundStatement		10:25:185:185	1688481	1					
ANR	1688520	Label	case SLJIT_BREAKPOINT :	731:1:20698:20719	1688481	0	True				
ANR	1688521	Identifier	SLJIT_BREAKPOINT		1688481	0					
ANR	1688522	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	732:2:20723:20768	1688481	1	True				
ANR	1688523	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1688481	0		=			
ANR	1688524	Identifier	inst		1688481	0					
ANR	1688525	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1688481	1					
ANR	1688526	CastTarget	sljit_ub *		1688481	0					
ANR	1688527	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1688481	1					
ANR	1688528	Callee	ensure_buf		1688481	0					
ANR	1688529	Identifier	ensure_buf		1688481	0					
ANR	1688530	ArgumentList	compiler		1688481	1					
ANR	1688531	Argument	compiler		1688481	0					
ANR	1688532	Identifier	compiler		1688481	0					
ANR	1688533	Argument	1 + 1		1688481	1					
ANR	1688534	AdditiveExpression	1 + 1		1688481	0		+			
ANR	1688535	PrimaryExpression	1		1688481	0					
ANR	1688536	PrimaryExpression	1		1688481	1					
ANR	1688537	ExpressionStatement	FAIL_IF ( ! inst )	733:2:20772:20786	1688481	2	True				
ANR	1688538	CallExpression	FAIL_IF ( ! inst )		1688481	0					
ANR	1688539	Callee	FAIL_IF		1688481	0					
ANR	1688540	Identifier	FAIL_IF		1688481	0					
ANR	1688541	ArgumentList	! inst		1688481	1					
ANR	1688542	Argument	! inst		1688481	0					
ANR	1688543	UnaryOperationExpression	! inst		1688481	0					
ANR	1688544	UnaryOperator	!		1688481	0					
ANR	1688545	Identifier	inst		1688481	1					
ANR	1688546	ExpressionStatement	INC_SIZE ( 1 )	734:2:20790:20801	1688481	3	True				
ANR	1688547	CallExpression	INC_SIZE ( 1 )		1688481	0					
ANR	1688548	Callee	INC_SIZE		1688481	0					
ANR	1688549	Identifier	INC_SIZE		1688481	0					
ANR	1688550	ArgumentList	1		1688481	1					
ANR	1688551	Argument	1		1688481	0					
ANR	1688552	PrimaryExpression	1		1688481	0					
ANR	1688553	ExpressionStatement	* inst = INT3	735:2:20805:20817	1688481	4	True				
ANR	1688554	AssignmentExpression	* inst = INT3		1688481	0		=			
ANR	1688555	UnaryOperationExpression	* inst		1688481	0					
ANR	1688556	UnaryOperator	*		1688481	0					
ANR	1688557	Identifier	inst		1688481	1					
ANR	1688558	Identifier	INT3		1688481	1					
ANR	1688559	BreakStatement	break ;	736:2:20821:20826	1688481	5	True				
ANR	1688560	Label	case SLJIT_NOP :	737:1:20829:20843	1688481	6	True				
ANR	1688561	Identifier	SLJIT_NOP		1688481	0					
ANR	1688562	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	738:2:20847:20892	1688481	7	True				
ANR	1688563	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1688481	0		=			
ANR	1688564	Identifier	inst		1688481	0					
ANR	1688565	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1688481	1					
ANR	1688566	CastTarget	sljit_ub *		1688481	0					
ANR	1688567	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1688481	1					
ANR	1688568	Callee	ensure_buf		1688481	0					
ANR	1688569	Identifier	ensure_buf		1688481	0					
ANR	1688570	ArgumentList	compiler		1688481	1					
ANR	1688571	Argument	compiler		1688481	0					
ANR	1688572	Identifier	compiler		1688481	0					
ANR	1688573	Argument	1 + 1		1688481	1					
ANR	1688574	AdditiveExpression	1 + 1		1688481	0		+			
ANR	1688575	PrimaryExpression	1		1688481	0					
ANR	1688576	PrimaryExpression	1		1688481	1					
ANR	1688577	ExpressionStatement	FAIL_IF ( ! inst )	739:2:20896:20910	1688481	8	True				
ANR	1688578	CallExpression	FAIL_IF ( ! inst )		1688481	0					
ANR	1688579	Callee	FAIL_IF		1688481	0					
ANR	1688580	Identifier	FAIL_IF		1688481	0					
ANR	1688581	ArgumentList	! inst		1688481	1					
ANR	1688582	Argument	! inst		1688481	0					
ANR	1688583	UnaryOperationExpression	! inst		1688481	0					
ANR	1688584	UnaryOperator	!		1688481	0					
ANR	1688585	Identifier	inst		1688481	1					
ANR	1688586	ExpressionStatement	INC_SIZE ( 1 )	740:2:20914:20925	1688481	9	True				
ANR	1688587	CallExpression	INC_SIZE ( 1 )		1688481	0					
ANR	1688588	Callee	INC_SIZE		1688481	0					
ANR	1688589	Identifier	INC_SIZE		1688481	0					
ANR	1688590	ArgumentList	1		1688481	1					
ANR	1688591	Argument	1		1688481	0					
ANR	1688592	PrimaryExpression	1		1688481	0					
ANR	1688593	ExpressionStatement	* inst = NOP	741:2:20929:20940	1688481	10	True				
ANR	1688594	AssignmentExpression	* inst = NOP		1688481	0		=			
ANR	1688595	UnaryOperationExpression	* inst		1688481	0					
ANR	1688596	UnaryOperator	*		1688481	0					
ANR	1688597	Identifier	inst		1688481	1					
ANR	1688598	Identifier	NOP		1688481	1					
ANR	1688599	BreakStatement	break ;	742:2:20944:20949	1688481	11	True				
ANR	1688600	Label	case SLJIT_LUMUL :	743:1:20952:20968	1688481	12	True				
ANR	1688601	Identifier	SLJIT_LUMUL		1688481	0					
ANR	1688602	Label	case SLJIT_LSMUL :	744:1:20971:20987	1688481	13	True				
ANR	1688603	Identifier	SLJIT_LSMUL		1688481	0					
ANR	1688604	Label	case SLJIT_LUDIV :	745:1:20990:21006	1688481	14	True				
ANR	1688605	Identifier	SLJIT_LUDIV		1688481	0					
ANR	1688606	Label	case SLJIT_LSDIV :	746:1:21009:21025	1688481	15	True				
ANR	1688607	Identifier	SLJIT_LSDIV		1688481	0					
ANR	1688608	ExpressionStatement	compiler -> flags_saved = 0	747:2:21029:21054	1688481	16	True				
ANR	1688609	AssignmentExpression	compiler -> flags_saved = 0		1688481	0		=			
ANR	1688610	PtrMemberAccess	compiler -> flags_saved		1688481	0					
ANR	1688611	Identifier	compiler		1688481	0					
ANR	1688612	Identifier	flags_saved		1688481	1					
ANR	1688613	PrimaryExpression	0		1688481	1					
ANR	1688614	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7 , invalid_register_assignment_for_div_mul )"	750:2:21129:21278	1688481	17	True				
ANR	1688615	CallExpression	"SLJIT_COMPILE_ASSERT ( reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7 , invalid_register_assignment_for_div_mul )"		1688481	0					
ANR	1688616	Callee	SLJIT_COMPILE_ASSERT		1688481	0					
ANR	1688617	Identifier	SLJIT_COMPILE_ASSERT		1688481	0					
ANR	1688618	ArgumentList	reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1688481	1					
ANR	1688619	Argument	reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1688481	0					
ANR	1688620	AndExpression	reg_map [ SLJIT_R0 ] == 0 && reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1688481	0		&&			
ANR	1688621	EqualityExpression	reg_map [ SLJIT_R0 ] == 0		1688481	0		==			
ANR	1688622	ArrayIndexing	reg_map [ SLJIT_R0 ]		1688481	0					
ANR	1688623	Identifier	reg_map		1688481	0					
ANR	1688624	Identifier	SLJIT_R0		1688481	1					
ANR	1688625	PrimaryExpression	0		1688481	1					
ANR	1688626	AndExpression	reg_map [ SLJIT_R1 ] == 2 && reg_map [ TMP_REG1 ] > 7		1688481	1		&&			
ANR	1688627	EqualityExpression	reg_map [ SLJIT_R1 ] == 2		1688481	0		==			
ANR	1688628	ArrayIndexing	reg_map [ SLJIT_R1 ]		1688481	0					
ANR	1688629	Identifier	reg_map		1688481	0					
ANR	1688630	Identifier	SLJIT_R1		1688481	1					
ANR	1688631	PrimaryExpression	2		1688481	1					
ANR	1688632	RelationalExpression	reg_map [ TMP_REG1 ] > 7		1688481	1		>			
ANR	1688633	ArrayIndexing	reg_map [ TMP_REG1 ]		1688481	0					
ANR	1688634	Identifier	reg_map		1688481	0					
ANR	1688635	Identifier	TMP_REG1		1688481	1					
ANR	1688636	PrimaryExpression	7		1688481	1					
ANR	1688637	Argument	invalid_register_assignment_for_div_mul		1688481	1					
ANR	1688638	Identifier	invalid_register_assignment_for_div_mul		1688481	0					
ANR	1688639	ExpressionStatement	compiler -> mode32 = op & SLJIT_INT_OP	762:2:21448:21484	1688481	18	True				
ANR	1688640	AssignmentExpression	compiler -> mode32 = op & SLJIT_INT_OP		1688481	0		=			
ANR	1688641	PtrMemberAccess	compiler -> mode32		1688481	0					
ANR	1688642	Identifier	compiler		1688481	0					
ANR	1688643	Identifier	mode32		1688481	1					
ANR	1688644	BitAndExpression	op & SLJIT_INT_OP		1688481	1		&			
ANR	1688645	Identifier	op		1688481	0					
ANR	1688646	Identifier	SLJIT_INT_OP		1688481	1					
ANR	1688647	ExpressionStatement	op = GET_OPCODE ( op )	765:2:21496:21515	1688481	19	True				
ANR	1688648	AssignmentExpression	op = GET_OPCODE ( op )		1688481	0		=			
ANR	1688649	Identifier	op		1688481	0					
ANR	1688650	CallExpression	GET_OPCODE ( op )		1688481	1					
ANR	1688651	Callee	GET_OPCODE		1688481	0					
ANR	1688652	Identifier	GET_OPCODE		1688481	0					
ANR	1688653	ArgumentList	op		1688481	1					
ANR	1688654	Argument	op		1688481	0					
ANR	1688655	Identifier	op		1688481	0					
ANR	1688656	IfStatement	if ( op == SLJIT_LUDIV )		1688481	20					
ANR	1688657	Condition	op == SLJIT_LUDIV	766:6:21523:21539	1688481	0	True				
ANR	1688658	EqualityExpression	op == SLJIT_LUDIV		1688481	0		==			
ANR	1688659	Identifier	op		1688481	0					
ANR	1688660	Identifier	SLJIT_LUDIV		1688481	1					
ANR	1688661	CompoundStatement		46:25:1032:1032	1688481	1					
ANR	1688662	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"	768:3:21623:21667	1688481	0	True				
ANR	1688663	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"		1688481	0					
ANR	1688664	Callee	EMIT_MOV		1688481	0					
ANR	1688665	Identifier	EMIT_MOV		1688481	0					
ANR	1688666	ArgumentList	compiler		1688481	1					
ANR	1688667	Argument	compiler		1688481	0					
ANR	1688668	Identifier	compiler		1688481	0					
ANR	1688669	Argument	TMP_REG1		1688481	1					
ANR	1688670	Identifier	TMP_REG1		1688481	0					
ANR	1688671	Argument	0		1688481	2					
ANR	1688672	PrimaryExpression	0		1688481	0					
ANR	1688673	Argument	SLJIT_R1		1688481	3					
ANR	1688674	Identifier	SLJIT_R1		1688481	0					
ANR	1688675	Argument	0		1688481	4					
ANR	1688676	PrimaryExpression	0		1688481	0					
ANR	1688677	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_R1 , 0 , SLJIT_R1 , 0 )"	769:3:21672:21738	1688481	1	True				
ANR	1688678	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_R1 , 0 , SLJIT_R1 , 0 )"		1688481	0		=			
ANR	1688679	Identifier	inst		1688481	0					
ANR	1688680	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_R1 , 0 , SLJIT_R1 , 0 )"		1688481	1					
ANR	1688681	Callee	emit_x86_instruction		1688481	0					
ANR	1688682	Identifier	emit_x86_instruction		1688481	0					
ANR	1688683	ArgumentList	compiler		1688481	1					
ANR	1688684	Argument	compiler		1688481	0					
ANR	1688685	Identifier	compiler		1688481	0					
ANR	1688686	Argument	1		1688481	1					
ANR	1688687	PrimaryExpression	1		1688481	0					
ANR	1688688	Argument	SLJIT_R1		1688481	2					
ANR	1688689	Identifier	SLJIT_R1		1688481	0					
ANR	1688690	Argument	0		1688481	3					
ANR	1688691	PrimaryExpression	0		1688481	0					
ANR	1688692	Argument	SLJIT_R1		1688481	4					
ANR	1688693	Identifier	SLJIT_R1		1688481	0					
ANR	1688694	Argument	0		1688481	5					
ANR	1688695	PrimaryExpression	0		1688481	0					
ANR	1688696	ExpressionStatement	FAIL_IF ( ! inst )	773:3:21827:21841	1688481	2	True				
ANR	1688697	CallExpression	FAIL_IF ( ! inst )		1688481	0					
ANR	1688698	Callee	FAIL_IF		1688481	0					
ANR	1688699	Identifier	FAIL_IF		1688481	0					
ANR	1688700	ArgumentList	! inst		1688481	1					
ANR	1688701	Argument	! inst		1688481	0					
ANR	1688702	UnaryOperationExpression	! inst		1688481	0					
ANR	1688703	UnaryOperator	!		1688481	0					
ANR	1688704	Identifier	inst		1688481	1					
ANR	1688705	ExpressionStatement	* inst = XOR_r_rm	774:3:21846:21862	1688481	3	True				
ANR	1688706	AssignmentExpression	* inst = XOR_r_rm		1688481	0		=			
ANR	1688707	UnaryOperationExpression	* inst		1688481	0					
ANR	1688708	UnaryOperator	*		1688481	0					
ANR	1688709	Identifier	inst		1688481	1					
ANR	1688710	Identifier	XOR_r_rm		1688481	1					
ANR	1688711	IfStatement	if ( op == SLJIT_LSDIV )		1688481	21					
ANR	1688712	Condition	op == SLJIT_LSDIV	777:6:21875:21891	1688481	0	True				
ANR	1688713	EqualityExpression	op == SLJIT_LSDIV		1688481	0		==			
ANR	1688714	Identifier	op		1688481	0					
ANR	1688715	Identifier	SLJIT_LSDIV		1688481	1					
ANR	1688716	CompoundStatement		57:25:1384:1384	1688481	1					
ANR	1688717	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"	779:3:21975:22019	1688481	0	True				
ANR	1688718	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_R1 , 0 )"		1688481	0					
ANR	1688719	Callee	EMIT_MOV		1688481	0					
ANR	1688720	Identifier	EMIT_MOV		1688481	0					
ANR	1688721	ArgumentList	compiler		1688481	1					
ANR	1688722	Argument	compiler		1688481	0					
ANR	1688723	Identifier	compiler		1688481	0					
ANR	1688724	Argument	TMP_REG1		1688481	1					
ANR	1688725	Identifier	TMP_REG1		1688481	0					
ANR	1688726	Argument	0		1688481	2					
ANR	1688727	PrimaryExpression	0		1688481	0					
ANR	1688728	Argument	SLJIT_R1		1688481	3					
ANR	1688729	Identifier	SLJIT_R1		1688481	0					
ANR	1688730	Argument	0		1688481	4					
ANR	1688731	PrimaryExpression	0		1688481	0					
ANR	1688732	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	783:3:22089:22134	1688481	1	True				
ANR	1688733	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1688481	0		=			
ANR	1688734	Identifier	inst		1688481	0					
ANR	1688735	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1688481	1					
ANR	1688736	CastTarget	sljit_ub *		1688481	0					
ANR	1688737	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1688481	1					
ANR	1688738	Callee	ensure_buf		1688481	0					
ANR	1688739	Identifier	ensure_buf		1688481	0					
ANR	1688740	ArgumentList	compiler		1688481	1					
ANR	1688741	Argument	compiler		1688481	0					
ANR	1688742	Identifier	compiler		1688481	0					
ANR	1688743	Argument	1 + 1		1688481	1					
ANR	1688744	AdditiveExpression	1 + 1		1688481	0		+			
ANR	1688745	PrimaryExpression	1		1688481	0					
ANR	1688746	PrimaryExpression	1		1688481	1					
ANR	1688747	ExpressionStatement	FAIL_IF ( ! inst )	784:3:22139:22153	1688481	2	True				
ANR	1688748	CallExpression	FAIL_IF ( ! inst )		1688481	0					
ANR	1688749	Callee	FAIL_IF		1688481	0					
ANR	1688750	Identifier	FAIL_IF		1688481	0					
ANR	1688751	ArgumentList	! inst		1688481	1					
ANR	1688752	Argument	! inst		1688481	0					
ANR	1688753	UnaryOperationExpression	! inst		1688481	0					
ANR	1688754	UnaryOperator	!		1688481	0					
ANR	1688755	Identifier	inst		1688481	1					
ANR	1688756	ExpressionStatement	INC_SIZE ( 1 )	785:3:22158:22169	1688481	3	True				
ANR	1688757	CallExpression	INC_SIZE ( 1 )		1688481	0					
ANR	1688758	Callee	INC_SIZE		1688481	0					
ANR	1688759	Identifier	INC_SIZE		1688481	0					
ANR	1688760	ArgumentList	1		1688481	1					
ANR	1688761	Argument	1		1688481	0					
ANR	1688762	PrimaryExpression	1		1688481	0					
ANR	1688763	ExpressionStatement	* inst = CDQ	786:3:22174:22185	1688481	4	True				
ANR	1688764	AssignmentExpression	* inst = CDQ		1688481	0		=			
ANR	1688765	UnaryOperationExpression	* inst		1688481	0					
ANR	1688766	UnaryOperator	*		1688481	0					
ANR	1688767	Identifier	inst		1688481	1					
ANR	1688768	Identifier	CDQ		1688481	1					
ANR	1688769	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 2 )"	804:2:22539:22584	1688481	22	True				
ANR	1688770	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 2 )"		1688481	0		=			
ANR	1688771	Identifier	inst		1688481	0					
ANR	1688772	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 2 )"		1688481	1					
ANR	1688773	CastTarget	sljit_ub *		1688481	0					
ANR	1688774	CallExpression	"ensure_buf ( compiler , 1 + 2 )"		1688481	1					
ANR	1688775	Callee	ensure_buf		1688481	0					
ANR	1688776	Identifier	ensure_buf		1688481	0					
ANR	1688777	ArgumentList	compiler		1688481	1					
ANR	1688778	Argument	compiler		1688481	0					
ANR	1688779	Identifier	compiler		1688481	0					
ANR	1688780	Argument	1 + 2		1688481	1					
ANR	1688781	AdditiveExpression	1 + 2		1688481	0		+			
ANR	1688782	PrimaryExpression	1		1688481	0					
ANR	1688783	PrimaryExpression	2		1688481	1					
ANR	1688784	ExpressionStatement	FAIL_IF ( ! inst )	805:2:22588:22602	1688481	23	True				
ANR	1688785	CallExpression	FAIL_IF ( ! inst )		1688481	0					
ANR	1688786	Callee	FAIL_IF		1688481	0					
ANR	1688787	Identifier	FAIL_IF		1688481	0					
ANR	1688788	ArgumentList	! inst		1688481	1					
ANR	1688789	Argument	! inst		1688481	0					
ANR	1688790	UnaryOperationExpression	! inst		1688481	0					
ANR	1688791	UnaryOperator	!		1688481	0					
ANR	1688792	Identifier	inst		1688481	1					
ANR	1688793	ExpressionStatement	INC_SIZE ( 2 )	806:2:22606:22617	1688481	24	True				
ANR	1688794	CallExpression	INC_SIZE ( 2 )		1688481	0					
ANR	1688795	Callee	INC_SIZE		1688481	0					
ANR	1688796	Identifier	INC_SIZE		1688481	0					
ANR	1688797	ArgumentList	2		1688481	1					
ANR	1688798	Argument	2		1688481	0					
ANR	1688799	PrimaryExpression	2		1688481	0					
ANR	1688800	ExpressionStatement	* inst ++ = GROUP_F7	807:2:22621:22639	1688481	25	True				
ANR	1688801	AssignmentExpression	* inst ++ = GROUP_F7		1688481	0		=			
ANR	1688802	UnaryOperationExpression	* inst ++		1688481	0					
ANR	1688803	UnaryOperator	*		1688481	0					
ANR	1688804	PostIncDecOperationExpression	inst ++		1688481	1					
ANR	1688805	Identifier	inst		1688481	0					
ANR	1688806	IncDec	++		1688481	1					
ANR	1688807	Identifier	GROUP_F7		1688481	1					
ANR	1688808	ExpressionStatement	* inst = MOD_REG | ( ( op >= SLJIT_LUDIV ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ] )	808:2:22643:22722	1688481	26	True				
ANR	1688809	AssignmentExpression	* inst = MOD_REG | ( ( op >= SLJIT_LUDIV ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ] )		1688481	0		=			
ANR	1688810	UnaryOperationExpression	* inst		1688481	0					
ANR	1688811	UnaryOperator	*		1688481	0					
ANR	1688812	Identifier	inst		1688481	1					
ANR	1688813	InclusiveOrExpression	MOD_REG | ( ( op >= SLJIT_LUDIV ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ] )		1688481	1		|			
ANR	1688814	Identifier	MOD_REG		1688481	0					
ANR	1688815	ConditionalExpression	( op >= SLJIT_LUDIV ) ? reg_map [ TMP_REG1 ] : reg_map [ SLJIT_R1 ]		1688481	1					
ANR	1688816	Condition	op >= SLJIT_LUDIV		1688481	0					
ANR	1688817	RelationalExpression	op >= SLJIT_LUDIV		1688481	0		>=			
ANR	1688818	Identifier	op		1688481	0					
ANR	1688819	Identifier	SLJIT_LUDIV		1688481	1					
ANR	1688820	ArrayIndexing	reg_map [ TMP_REG1 ]		1688481	1					
ANR	1688821	Identifier	reg_map		1688481	0					
ANR	1688822	Identifier	TMP_REG1		1688481	1					
ANR	1688823	ArrayIndexing	reg_map [ SLJIT_R1 ]		1688481	2					
ANR	1688824	Identifier	reg_map		1688481	0					
ANR	1688825	Identifier	SLJIT_R1		1688481	1					
ANR	1688826	SwitchStatement	switch ( op )		1688481	27					
ANR	1688827	Condition	op	832:10:23330:23331	1688481	0	True				
ANR	1688828	Identifier	op		1688481	0					
ANR	1688829	CompoundStatement		112:14:2824:2824	1688481	1					
ANR	1688830	Label	case SLJIT_LUMUL :	833:2:23338:23354	1688481	0	True				
ANR	1688831	Identifier	SLJIT_LUMUL		1688481	0					
ANR	1688832	ExpressionStatement	* inst |= MUL	834:3:23359:23371	1688481	1	True				
ANR	1688833	AssignmentExpression	* inst |= MUL		1688481	0		|=			
ANR	1688834	UnaryOperationExpression	* inst		1688481	0					
ANR	1688835	UnaryOperator	*		1688481	0					
ANR	1688836	Identifier	inst		1688481	1					
ANR	1688837	Identifier	MUL		1688481	1					
ANR	1688838	BreakStatement	break ;	835:3:23376:23381	1688481	2	True				
ANR	1688839	Label	case SLJIT_LSMUL :	836:2:23385:23401	1688481	3	True				
ANR	1688840	Identifier	SLJIT_LSMUL		1688481	0					
ANR	1688841	ExpressionStatement	* inst |= IMUL	837:3:23406:23419	1688481	4	True				
ANR	1688842	AssignmentExpression	* inst |= IMUL		1688481	0		|=			
ANR	1688843	UnaryOperationExpression	* inst		1688481	0					
ANR	1688844	UnaryOperator	*		1688481	0					
ANR	1688845	Identifier	inst		1688481	1					
ANR	1688846	Identifier	IMUL		1688481	1					
ANR	1688847	BreakStatement	break ;	838:3:23424:23429	1688481	5	True				
ANR	1688848	Label	case SLJIT_LUDIV :	839:2:23433:23449	1688481	6	True				
ANR	1688849	Identifier	SLJIT_LUDIV		1688481	0					
ANR	1688850	ExpressionStatement	* inst |= DIV	840:3:23454:23466	1688481	7	True				
ANR	1688851	AssignmentExpression	* inst |= DIV		1688481	0		|=			
ANR	1688852	UnaryOperationExpression	* inst		1688481	0					
ANR	1688853	UnaryOperator	*		1688481	0					
ANR	1688854	Identifier	inst		1688481	1					
ANR	1688855	Identifier	DIV		1688481	1					
ANR	1688856	BreakStatement	break ;	841:3:23471:23476	1688481	8	True				
ANR	1688857	Label	case SLJIT_LSDIV :	842:2:23480:23496	1688481	9	True				
ANR	1688858	Identifier	SLJIT_LSDIV		1688481	0					
ANR	1688859	ExpressionStatement	* inst |= IDIV	843:3:23501:23514	1688481	10	True				
ANR	1688860	AssignmentExpression	* inst |= IDIV		1688481	0		|=			
ANR	1688861	UnaryOperationExpression	* inst		1688481	0					
ANR	1688862	UnaryOperator	*		1688481	0					
ANR	1688863	Identifier	inst		1688481	1					
ANR	1688864	Identifier	IDIV		1688481	1					
ANR	1688865	BreakStatement	break ;	844:3:23519:23524	1688481	11	True				
ANR	1688866	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_R1 , 0 , TMP_REG1 , 0 )"	847:2:23609:23653	1688481	28	True				
ANR	1688867	CallExpression	"EMIT_MOV ( compiler , SLJIT_R1 , 0 , TMP_REG1 , 0 )"		1688481	0					
ANR	1688868	Callee	EMIT_MOV		1688481	0					
ANR	1688869	Identifier	EMIT_MOV		1688481	0					
ANR	1688870	ArgumentList	compiler		1688481	1					
ANR	1688871	Argument	compiler		1688481	0					
ANR	1688872	Identifier	compiler		1688481	0					
ANR	1688873	Argument	SLJIT_R1		1688481	1					
ANR	1688874	Identifier	SLJIT_R1		1688481	0					
ANR	1688875	Argument	0		1688481	2					
ANR	1688876	PrimaryExpression	0		1688481	0					
ANR	1688877	Argument	TMP_REG1		1688481	3					
ANR	1688878	Identifier	TMP_REG1		1688481	0					
ANR	1688879	Argument	0		1688481	4					
ANR	1688880	PrimaryExpression	0		1688481	0					
ANR	1688881	BreakStatement	break ;	849:2:23664:23669	1688481	29	True				
ANR	1688882	ReturnStatement	return SLJIT_SUCCESS ;	852:1:23676:23696	1688481	5	True				
ANR	1688883	Identifier	SLJIT_SUCCESS		1688481	0					
ANR	1688884	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1688481	1					
ANR	1688885	Identifier	sljit_emit_op0		1688481	2					
ANR	1688886	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1688481	3					
ANR	1688887	Parameter	struct sljit_compiler * compiler	720:49:20463:20493	1688481	0	True				
ANR	1688888	ParameterType	struct sljit_compiler *		1688481	0					
ANR	1688889	Identifier	compiler		1688481	1					
ANR	1688890	Parameter	sljit_si op	720:82:20496:20506	1688481	1	True				
ANR	1688891	ParameterType	sljit_si		1688481	0					
ANR	1688892	Identifier	op		1688481	1					
ANR	1688893	CFGEntryNode	ENTRY		1688481		True				
ANR	1688894	CFGExitNode	EXIT		1688481		True				
ANR	1688895	Symbol	invalid_register_assignment_for_div_mul		1688481						
ANR	1688896	Symbol	TMP_REG1		1688481						
ANR	1688897	Symbol	GROUP_F7		1688481						
ANR	1688898	Symbol	compiler -> flags_saved		1688481						
ANR	1688899	Symbol	* inst ++		1688481						
ANR	1688900	Symbol	reg_map		1688481						
ANR	1688901	Symbol	* compiler		1688481						
ANR	1688902	Symbol	SLJIT_R1		1688481						
ANR	1688903	Symbol	GET_OPCODE		1688481						
ANR	1688904	Symbol	SLJIT_R0		1688481						
ANR	1688905	Symbol	* SLJIT_R1		1688481						
ANR	1688906	Symbol	CDQ		1688481						
ANR	1688907	Symbol	IMUL		1688481						
ANR	1688908	Symbol	* TMP_REG1		1688481						
ANR	1688909	Symbol	compiler		1688481						
ANR	1688910	Symbol	* SLJIT_R0		1688481						
ANR	1688911	Symbol	op		1688481						
ANR	1688912	Symbol	emit_x86_instruction		1688481						
ANR	1688913	Symbol	* inst		1688481						
ANR	1688914	Symbol	MUL		1688481						
ANR	1688915	Symbol	check_sljit_emit_op0		1688481						
ANR	1688916	Symbol	INT3		1688481						
ANR	1688917	Symbol	SLJIT_INT_OP		1688481						
ANR	1688918	Symbol	SLJIT_LSDIV		1688481						
ANR	1688919	Symbol	SLJIT_LUDIV		1688481						
ANR	1688920	Symbol	IDIV		1688481						
ANR	1688921	Symbol	SLJIT_SUCCESS		1688481						
ANR	1688922	Symbol	* reg_map		1688481						
ANR	1688923	Symbol	NOP		1688481						
ANR	1688924	Symbol	MOD_REG		1688481						
ANR	1688925	Symbol	DIV		1688481						
ANR	1688926	Symbol	size		1688481						
ANR	1688927	Symbol	inst		1688481						
ANR	1688928	Symbol	ensure_buf		1688481						
ANR	1688929	Symbol	compiler -> mode32		1688481						
ANR	1688930	Symbol	XOR_r_rm		1688481						
ANR	1688931	Function	emit_mov_byte	863:0:23865:27674							
ANR	1688932	FunctionDef	"emit_mov_byte (struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1688931	0					
ANR	1688933	CompoundStatement		866:0:24003:27674	1688931	0					
ANR	1688934	IdentifierDeclStatement	sljit_ub * inst ;	867:1:24006:24020	1688931	0	True				
ANR	1688935	IdentifierDecl	* inst		1688931	0					
ANR	1688936	IdentifierDeclType	sljit_ub *		1688931	0					
ANR	1688937	Identifier	inst		1688931	1					
ANR	1688938	IdentifierDeclStatement	sljit_si dst_r ;	868:1:24023:24037	1688931	1	True				
ANR	1688939	IdentifierDecl	dst_r		1688931	0					
ANR	1688940	IdentifierDeclType	sljit_si		1688931	0					
ANR	1688941	Identifier	dst_r		1688931	1					
ANR	1688942	IdentifierDeclStatement	sljit_si work_r ;	870:1:24097:24112	1688931	2	True				
ANR	1688943	IdentifierDecl	work_r		1688931	0					
ANR	1688944	IdentifierDeclType	sljit_si		1688931	0					
ANR	1688945	Identifier	work_r		1688931	1					
ANR	1688946	ExpressionStatement	compiler -> mode32 = 0	874:1:24180:24200	1688931	3	True				
ANR	1688947	AssignmentExpression	compiler -> mode32 = 0		1688931	0		=			
ANR	1688948	PtrMemberAccess	compiler -> mode32		1688931	0					
ANR	1688949	Identifier	compiler		1688931	0					
ANR	1688950	Identifier	mode32		1688931	1					
ANR	1688951	PrimaryExpression	0		1688931	1					
ANR	1688952	IfStatement	if ( dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM ) )		1688931	4					
ANR	1688953	Condition	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )	877:5:24215:24255	1688931	0	True				
ANR	1688954	AndExpression	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )		1688931	0		&&			
ANR	1688955	EqualityExpression	dst == SLJIT_UNUSED		1688931	0		==			
ANR	1688956	Identifier	dst		1688931	0					
ANR	1688957	Identifier	SLJIT_UNUSED		1688931	1					
ANR	1688958	UnaryOperationExpression	! ( src & SLJIT_MEM )		1688931	1					
ANR	1688959	UnaryOperator	!		1688931	0					
ANR	1688960	BitAndExpression	src & SLJIT_MEM		1688931	1		&			
ANR	1688961	Identifier	src		1688931	0					
ANR	1688962	Identifier	SLJIT_MEM		1688931	1					
ANR	1688963	ReturnStatement	return SLJIT_SUCCESS ;	878:2:24260:24280	1688931	1	True				
ANR	1688964	Identifier	SLJIT_SUCCESS		1688931	0					
ANR	1688965	IfStatement	if ( src & SLJIT_IMM )		1688931	5					
ANR	1688966	Condition	src & SLJIT_IMM	880:5:24313:24327	1688931	0	True				
ANR	1688967	BitAndExpression	src & SLJIT_IMM		1688931	0		&			
ANR	1688968	Identifier	src		1688931	0					
ANR	1688969	Identifier	SLJIT_IMM		1688931	1					
ANR	1688970	CompoundStatement		15:22:326:326	1688931	1					
ANR	1688971	IfStatement	if ( FAST_IS_REG ( dst ) )		1688931	0					
ANR	1688972	Condition	FAST_IS_REG ( dst )	881:6:24338:24353	1688931	0	True				
ANR	1688973	CallExpression	FAST_IS_REG ( dst )		1688931	0					
ANR	1688974	Callee	FAST_IS_REG		1688931	0					
ANR	1688975	Identifier	FAST_IS_REG		1688931	0					
ANR	1688976	ArgumentList	dst		1688931	1					
ANR	1688977	Argument	dst		1688931	0					
ANR	1688978	Identifier	dst		1688931	0					
ANR	1688979	CompoundStatement		16:24:352:352	1688931	1					
ANR	1688980	ReturnStatement	"return emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw ) ;"	883:3:24418:24478	1688931	0	True				
ANR	1688981	CallExpression	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw )"		1688931	0					
ANR	1688982	Callee	emit_do_imm		1688931	0					
ANR	1688983	Identifier	emit_do_imm		1688931	0					
ANR	1688984	ArgumentList	compiler		1688931	1					
ANR	1688985	Argument	compiler		1688931	0					
ANR	1688986	Identifier	compiler		1688931	0					
ANR	1688987	Argument	MOV_r_i32 + reg_map [ dst ]		1688931	1					
ANR	1688988	AdditiveExpression	MOV_r_i32 + reg_map [ dst ]		1688931	0		+			
ANR	1688989	Identifier	MOV_r_i32		1688931	0					
ANR	1688990	ArrayIndexing	reg_map [ dst ]		1688931	1					
ANR	1688991	Identifier	reg_map		1688931	0					
ANR	1688992	Identifier	dst		1688931	1					
ANR	1688993	Argument	srcw		1688931	2					
ANR	1688994	Identifier	srcw		1688931	0					
ANR	1688995	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_BYTE_ARG | EX86_NO_REXW , SLJIT_IMM , srcw , dst , dstw )"	891:2:24636:24735	1688931	1	True				
ANR	1688996	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_BYTE_ARG | EX86_NO_REXW , SLJIT_IMM , srcw , dst , dstw )"		1688931	0		=			
ANR	1688997	Identifier	inst		1688931	0					
ANR	1688998	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_BYTE_ARG | EX86_NO_REXW , SLJIT_IMM , srcw , dst , dstw )"		1688931	1					
ANR	1688999	Callee	emit_x86_instruction		1688931	0					
ANR	1689000	Identifier	emit_x86_instruction		1688931	0					
ANR	1689001	ArgumentList	compiler		1688931	1					
ANR	1689002	Argument	compiler		1688931	0					
ANR	1689003	Identifier	compiler		1688931	0					
ANR	1689004	Argument	1 | EX86_BYTE_ARG | EX86_NO_REXW		1688931	1					
ANR	1689005	InclusiveOrExpression	1 | EX86_BYTE_ARG | EX86_NO_REXW		1688931	0		|			
ANR	1689006	PrimaryExpression	1		1688931	0					
ANR	1689007	InclusiveOrExpression	EX86_BYTE_ARG | EX86_NO_REXW		1688931	1		|			
ANR	1689008	Identifier	EX86_BYTE_ARG		1688931	0					
ANR	1689009	Identifier	EX86_NO_REXW		1688931	1					
ANR	1689010	Argument	SLJIT_IMM		1688931	2					
ANR	1689011	Identifier	SLJIT_IMM		1688931	0					
ANR	1689012	Argument	srcw		1688931	3					
ANR	1689013	Identifier	srcw		1688931	0					
ANR	1689014	Argument	dst		1688931	4					
ANR	1689015	Identifier	dst		1688931	0					
ANR	1689016	Argument	dstw		1688931	5					
ANR	1689017	Identifier	dstw		1688931	0					
ANR	1689018	ExpressionStatement	FAIL_IF ( ! inst )	892:2:24739:24753	1688931	2	True				
ANR	1689019	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689020	Callee	FAIL_IF		1688931	0					
ANR	1689021	Identifier	FAIL_IF		1688931	0					
ANR	1689022	ArgumentList	! inst		1688931	1					
ANR	1689023	Argument	! inst		1688931	0					
ANR	1689024	UnaryOperationExpression	! inst		1688931	0					
ANR	1689025	UnaryOperator	!		1688931	0					
ANR	1689026	Identifier	inst		1688931	1					
ANR	1689027	ExpressionStatement	* inst = MOV_rm8_i8	893:2:24757:24775	1688931	3	True				
ANR	1689028	AssignmentExpression	* inst = MOV_rm8_i8		1688931	0		=			
ANR	1689029	UnaryOperationExpression	* inst		1688931	0					
ANR	1689030	UnaryOperator	*		1688931	0					
ANR	1689031	Identifier	inst		1688931	1					
ANR	1689032	Identifier	MOV_rm8_i8		1688931	1					
ANR	1689033	ReturnStatement	return SLJIT_SUCCESS ;	894:2:24779:24799	1688931	4	True				
ANR	1689034	Identifier	SLJIT_SUCCESS		1688931	0					
ANR	1689035	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	897:1:24806:24847	1688931	6	True				
ANR	1689036	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1688931	0		=			
ANR	1689037	Identifier	dst_r		1688931	0					
ANR	1689038	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1688931	1					
ANR	1689039	Condition	FAST_IS_REG ( dst )		1688931	0					
ANR	1689040	CallExpression	FAST_IS_REG ( dst )		1688931	0					
ANR	1689041	Callee	FAST_IS_REG		1688931	0					
ANR	1689042	Identifier	FAST_IS_REG		1688931	0					
ANR	1689043	ArgumentList	dst		1688931	1					
ANR	1689044	Argument	dst		1688931	0					
ANR	1689045	Identifier	dst		1688931	0					
ANR	1689046	Identifier	dst		1688931	1					
ANR	1689047	Identifier	TMP_REG1		1688931	2					
ANR	1689048	IfStatement	if ( ( dst & SLJIT_MEM ) && FAST_IS_REG ( src ) )		1688931	7					
ANR	1689049	Condition	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )	899:5:24855:24891	1688931	0	True				
ANR	1689050	AndExpression	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )		1688931	0		&&			
ANR	1689051	BitAndExpression	dst & SLJIT_MEM		1688931	0		&			
ANR	1689052	Identifier	dst		1688931	0					
ANR	1689053	Identifier	SLJIT_MEM		1688931	1					
ANR	1689054	CallExpression	FAST_IS_REG ( src )		1688931	1					
ANR	1689055	Callee	FAST_IS_REG		1688931	0					
ANR	1689056	Identifier	FAST_IS_REG		1688931	0					
ANR	1689057	ArgumentList	src		1688931	1					
ANR	1689058	Argument	src		1688931	0					
ANR	1689059	Identifier	src		1688931	0					
ANR	1689060	CompoundStatement		34:44:890:890	1688931	1					
ANR	1689061	IfStatement	if ( reg_map [ src ] >= 4 )		1688931	0					
ANR	1689062	Condition	reg_map [ src ] >= 4	901:6:24959:24975	1688931	0	True				
ANR	1689063	RelationalExpression	reg_map [ src ] >= 4		1688931	0		>=			
ANR	1689064	ArrayIndexing	reg_map [ src ]		1688931	0					
ANR	1689065	Identifier	reg_map		1688931	0					
ANR	1689066	Identifier	src		1688931	1					
ANR	1689067	PrimaryExpression	4		1688931	1					
ANR	1689068	CompoundStatement		36:25:974:974	1688931	1					
ANR	1689069	ExpressionStatement	SLJIT_ASSERT ( dst_r == TMP_REG1 )	902:3:24983:25014	1688931	0	True				
ANR	1689070	CallExpression	SLJIT_ASSERT ( dst_r == TMP_REG1 )		1688931	0					
ANR	1689071	Callee	SLJIT_ASSERT		1688931	0					
ANR	1689072	Identifier	SLJIT_ASSERT		1688931	0					
ANR	1689073	ArgumentList	dst_r == TMP_REG1		1688931	1					
ANR	1689074	Argument	dst_r == TMP_REG1		1688931	0					
ANR	1689075	EqualityExpression	dst_r == TMP_REG1		1688931	0		==			
ANR	1689076	Identifier	dst_r		1688931	0					
ANR	1689077	Identifier	TMP_REG1		1688931	1					
ANR	1689078	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"	903:3:25019:25058	1688931	1	True				
ANR	1689079	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"		1688931	0					
ANR	1689080	Callee	EMIT_MOV		1688931	0					
ANR	1689081	Identifier	EMIT_MOV		1688931	0					
ANR	1689082	ArgumentList	compiler		1688931	1					
ANR	1689083	Argument	compiler		1688931	0					
ANR	1689084	Identifier	compiler		1688931	0					
ANR	1689085	Argument	TMP_REG1		1688931	1					
ANR	1689086	Identifier	TMP_REG1		1688931	0					
ANR	1689087	Argument	0		1688931	2					
ANR	1689088	PrimaryExpression	0		1688931	0					
ANR	1689089	Argument	src		1688931	3					
ANR	1689090	Identifier	src		1688931	0					
ANR	1689091	Argument	0		1688931	4					
ANR	1689092	PrimaryExpression	0		1688931	0					
ANR	1689093	ElseStatement	else		1688931	0					
ANR	1689094	ExpressionStatement	dst_r = src	905:3:25072:25083	1688931	0	True				
ANR	1689095	AssignmentExpression	dst_r = src		1688931	0		=			
ANR	1689096	Identifier	dst_r		1688931	0					
ANR	1689097	Identifier	src		1688931	1					
ANR	1689098	ElseStatement	else		1688931	0					
ANR	1689099	IfStatement	if ( FAST_IS_REG ( src ) && reg_map [ src ] >= 4 )		1688931	0					
ANR	1689100	Condition	FAST_IS_REG ( src ) && reg_map [ src ] >= 4	911:10:25183:25219	1688931	0	True				
ANR	1689101	AndExpression	FAST_IS_REG ( src ) && reg_map [ src ] >= 4		1688931	0		&&			
ANR	1689102	CallExpression	FAST_IS_REG ( src )		1688931	0					
ANR	1689103	Callee	FAST_IS_REG		1688931	0					
ANR	1689104	Identifier	FAST_IS_REG		1688931	0					
ANR	1689105	ArgumentList	src		1688931	1					
ANR	1689106	Argument	src		1688931	0					
ANR	1689107	Identifier	src		1688931	0					
ANR	1689108	RelationalExpression	reg_map [ src ] >= 4		1688931	1		>=			
ANR	1689109	ArrayIndexing	reg_map [ src ]		1688931	0					
ANR	1689110	Identifier	reg_map		1688931	0					
ANR	1689111	Identifier	src		1688931	1					
ANR	1689112	PrimaryExpression	4		1688931	1					
ANR	1689113	CompoundStatement		46:49:1218:1218	1688931	1					
ANR	1689114	ExpressionStatement	SLJIT_ASSERT ( SLOW_IS_REG ( dst ) )	913:2:25258:25288	1688931	0	True				
ANR	1689115	CallExpression	SLJIT_ASSERT ( SLOW_IS_REG ( dst ) )		1688931	0					
ANR	1689116	Callee	SLJIT_ASSERT		1688931	0					
ANR	1689117	Identifier	SLJIT_ASSERT		1688931	0					
ANR	1689118	ArgumentList	SLOW_IS_REG ( dst )		1688931	1					
ANR	1689119	Argument	SLOW_IS_REG ( dst )		1688931	0					
ANR	1689120	CallExpression	SLOW_IS_REG ( dst )		1688931	0					
ANR	1689121	Callee	SLOW_IS_REG		1688931	0					
ANR	1689122	Identifier	SLOW_IS_REG		1688931	0					
ANR	1689123	ArgumentList	dst		1688931	1					
ANR	1689124	Argument	dst		1688931	0					
ANR	1689125	Identifier	dst		1688931	0					
ANR	1689126	IfStatement	if ( reg_map [ dst ] < 4 )		1688931	1					
ANR	1689127	Condition	reg_map [ dst ] < 4	914:6:25296:25311	1688931	0	True				
ANR	1689128	RelationalExpression	reg_map [ dst ] < 4		1688931	0		<			
ANR	1689129	ArrayIndexing	reg_map [ dst ]		1688931	0					
ANR	1689130	Identifier	reg_map		1688931	0					
ANR	1689131	Identifier	dst		1688931	1					
ANR	1689132	PrimaryExpression	4		1688931	1					
ANR	1689133	CompoundStatement		49:24:1310:1310	1688931	1					
ANR	1689134	IfStatement	if ( dst != src )		1688931	0					
ANR	1689135	Condition	dst != src	915:7:25323:25332	1688931	0	True				
ANR	1689136	EqualityExpression	dst != src		1688931	0		!=			
ANR	1689137	Identifier	dst		1688931	0					
ANR	1689138	Identifier	src		1688931	1					
ANR	1689139	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"	916:4:25339:25373	1688931	1	True				
ANR	1689140	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"		1688931	0					
ANR	1689141	Callee	EMIT_MOV		1688931	0					
ANR	1689142	Identifier	EMIT_MOV		1688931	0					
ANR	1689143	ArgumentList	compiler		1688931	1					
ANR	1689144	Argument	compiler		1688931	0					
ANR	1689145	Identifier	compiler		1688931	0					
ANR	1689146	Argument	dst		1688931	1					
ANR	1689147	Identifier	dst		1688931	0					
ANR	1689148	Argument	0		1688931	2					
ANR	1689149	PrimaryExpression	0		1688931	0					
ANR	1689150	Argument	src		1688931	3					
ANR	1689151	Identifier	src		1688931	0					
ANR	1689152	Argument	0		1688931	4					
ANR	1689153	PrimaryExpression	0		1688931	0					
ANR	1689154	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst , 0 , dst , 0 )"	917:3:25378:25434	1688931	1	True				
ANR	1689155	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst , 0 , dst , 0 )"		1688931	0		=			
ANR	1689156	Identifier	inst		1688931	0					
ANR	1689157	CallExpression	"emit_x86_instruction ( compiler , 2 , dst , 0 , dst , 0 )"		1688931	1					
ANR	1689158	Callee	emit_x86_instruction		1688931	0					
ANR	1689159	Identifier	emit_x86_instruction		1688931	0					
ANR	1689160	ArgumentList	compiler		1688931	1					
ANR	1689161	Argument	compiler		1688931	0					
ANR	1689162	Identifier	compiler		1688931	0					
ANR	1689163	Argument	2		1688931	1					
ANR	1689164	PrimaryExpression	2		1688931	0					
ANR	1689165	Argument	dst		1688931	2					
ANR	1689166	Identifier	dst		1688931	0					
ANR	1689167	Argument	0		1688931	3					
ANR	1689168	PrimaryExpression	0		1688931	0					
ANR	1689169	Argument	dst		1688931	4					
ANR	1689170	Identifier	dst		1688931	0					
ANR	1689171	Argument	0		1688931	5					
ANR	1689172	PrimaryExpression	0		1688931	0					
ANR	1689173	ExpressionStatement	FAIL_IF ( ! inst )	918:3:25439:25453	1688931	2	True				
ANR	1689174	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689175	Callee	FAIL_IF		1688931	0					
ANR	1689176	Identifier	FAIL_IF		1688931	0					
ANR	1689177	ArgumentList	! inst		1688931	1					
ANR	1689178	Argument	! inst		1688931	0					
ANR	1689179	UnaryOperationExpression	! inst		1688931	0					
ANR	1689180	UnaryOperator	!		1688931	0					
ANR	1689181	Identifier	inst		1688931	1					
ANR	1689182	ExpressionStatement	* inst ++ = GROUP_0F	919:3:25458:25476	1688931	3	True				
ANR	1689183	AssignmentExpression	* inst ++ = GROUP_0F		1688931	0		=			
ANR	1689184	UnaryOperationExpression	* inst ++		1688931	0					
ANR	1689185	UnaryOperator	*		1688931	0					
ANR	1689186	PostIncDecOperationExpression	inst ++		1688931	1					
ANR	1689187	Identifier	inst		1688931	0					
ANR	1689188	IncDec	++		1688931	1					
ANR	1689189	Identifier	GROUP_0F		1688931	1					
ANR	1689190	ExpressionStatement	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8	920:3:25481:25521	1688931	4	True				
ANR	1689191	AssignmentExpression	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1688931	0		=			
ANR	1689192	UnaryOperationExpression	* inst		1688931	0					
ANR	1689193	UnaryOperator	*		1688931	0					
ANR	1689194	Identifier	inst		1688931	1					
ANR	1689195	ConditionalExpression	sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1688931	1					
ANR	1689196	Condition	sign		1688931	0					
ANR	1689197	Identifier	sign		1688931	0					
ANR	1689198	Identifier	MOVSX_r_rm8		1688931	1					
ANR	1689199	Identifier	MOVZX_r_rm8		1688931	2					
ANR	1689200	ElseStatement	else		1688931	0					
ANR	1689201	CompoundStatement		57:7:1530:1530	1688931	0					
ANR	1689202	IfStatement	if ( dst != src )		1688931	0					
ANR	1689203	Condition	dst != src	923:7:25543:25552	1688931	0	True				
ANR	1689204	EqualityExpression	dst != src		1688931	0		!=			
ANR	1689205	Identifier	dst		1688931	0					
ANR	1689206	Identifier	src		1688931	1					
ANR	1689207	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"	924:4:25559:25593	1688931	1	True				
ANR	1689208	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , 0 )"		1688931	0					
ANR	1689209	Callee	EMIT_MOV		1688931	0					
ANR	1689210	Identifier	EMIT_MOV		1688931	0					
ANR	1689211	ArgumentList	compiler		1688931	1					
ANR	1689212	Argument	compiler		1688931	0					
ANR	1689213	Identifier	compiler		1688931	0					
ANR	1689214	Argument	dst		1688931	1					
ANR	1689215	Identifier	dst		1688931	0					
ANR	1689216	Argument	0		1688931	2					
ANR	1689217	PrimaryExpression	0		1688931	0					
ANR	1689218	Argument	src		1688931	3					
ANR	1689219	Identifier	src		1688931	0					
ANR	1689220	Argument	0		1688931	4					
ANR	1689221	PrimaryExpression	0		1688931	0					
ANR	1689222	IfStatement	if ( sign )		1688931	1					
ANR	1689223	Condition	sign	925:7:25602:25605	1688931	0	True				
ANR	1689224	Identifier	sign		1688931	0					
ANR	1689225	CompoundStatement		60:13:1604:1604	1688931	1					
ANR	1689226	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"	927:4:25636:25716	1688931	0	True				
ANR	1689227	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1688931	0		=			
ANR	1689228	Identifier	inst		1688931	0					
ANR	1689229	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1688931	1					
ANR	1689230	Callee	emit_x86_instruction		1688931	0					
ANR	1689231	Identifier	emit_x86_instruction		1688931	0					
ANR	1689232	ArgumentList	compiler		1688931	1					
ANR	1689233	Argument	compiler		1688931	0					
ANR	1689234	Identifier	compiler		1688931	0					
ANR	1689235	Argument	1 | EX86_SHIFT_INS		1688931	1					
ANR	1689236	InclusiveOrExpression	1 | EX86_SHIFT_INS		1688931	0		|			
ANR	1689237	PrimaryExpression	1		1688931	0					
ANR	1689238	Identifier	EX86_SHIFT_INS		1688931	1					
ANR	1689239	Argument	SLJIT_IMM		1688931	2					
ANR	1689240	Identifier	SLJIT_IMM		1688931	0					
ANR	1689241	Argument	24		1688931	3					
ANR	1689242	PrimaryExpression	24		1688931	0					
ANR	1689243	Argument	dst		1688931	4					
ANR	1689244	Identifier	dst		1688931	0					
ANR	1689245	Argument	0		1688931	5					
ANR	1689246	PrimaryExpression	0		1688931	0					
ANR	1689247	ExpressionStatement	FAIL_IF ( ! inst )	928:4:25722:25736	1688931	1	True				
ANR	1689248	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689249	Callee	FAIL_IF		1688931	0					
ANR	1689250	Identifier	FAIL_IF		1688931	0					
ANR	1689251	ArgumentList	! inst		1688931	1					
ANR	1689252	Argument	! inst		1688931	0					
ANR	1689253	UnaryOperationExpression	! inst		1688931	0					
ANR	1689254	UnaryOperator	!		1688931	0					
ANR	1689255	Identifier	inst		1688931	1					
ANR	1689256	ExpressionStatement	* inst |= SHL	929:4:25742:25754	1688931	2	True				
ANR	1689257	AssignmentExpression	* inst |= SHL		1688931	0		|=			
ANR	1689258	UnaryOperationExpression	* inst		1688931	0					
ANR	1689259	UnaryOperator	*		1688931	0					
ANR	1689260	Identifier	inst		1688931	1					
ANR	1689261	Identifier	SHL		1688931	1					
ANR	1689262	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"	931:4:25782:25862	1688931	3	True				
ANR	1689263	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1688931	0		=			
ANR	1689264	Identifier	inst		1688931	0					
ANR	1689265	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 24 , dst , 0 )"		1688931	1					
ANR	1689266	Callee	emit_x86_instruction		1688931	0					
ANR	1689267	Identifier	emit_x86_instruction		1688931	0					
ANR	1689268	ArgumentList	compiler		1688931	1					
ANR	1689269	Argument	compiler		1688931	0					
ANR	1689270	Identifier	compiler		1688931	0					
ANR	1689271	Argument	1 | EX86_SHIFT_INS		1688931	1					
ANR	1689272	InclusiveOrExpression	1 | EX86_SHIFT_INS		1688931	0		|			
ANR	1689273	PrimaryExpression	1		1688931	0					
ANR	1689274	Identifier	EX86_SHIFT_INS		1688931	1					
ANR	1689275	Argument	SLJIT_IMM		1688931	2					
ANR	1689276	Identifier	SLJIT_IMM		1688931	0					
ANR	1689277	Argument	24		1688931	3					
ANR	1689278	PrimaryExpression	24		1688931	0					
ANR	1689279	Argument	dst		1688931	4					
ANR	1689280	Identifier	dst		1688931	0					
ANR	1689281	Argument	0		1688931	5					
ANR	1689282	PrimaryExpression	0		1688931	0					
ANR	1689283	ExpressionStatement	FAIL_IF ( ! inst )	932:4:25868:25882	1688931	4	True				
ANR	1689284	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689285	Callee	FAIL_IF		1688931	0					
ANR	1689286	Identifier	FAIL_IF		1688931	0					
ANR	1689287	ArgumentList	! inst		1688931	1					
ANR	1689288	Argument	! inst		1688931	0					
ANR	1689289	UnaryOperationExpression	! inst		1688931	0					
ANR	1689290	UnaryOperator	!		1688931	0					
ANR	1689291	Identifier	inst		1688931	1					
ANR	1689292	ExpressionStatement	* inst |= SAR	933:4:25888:25900	1688931	5	True				
ANR	1689293	AssignmentExpression	* inst |= SAR		1688931	0		|=			
ANR	1689294	UnaryOperationExpression	* inst		1688931	0					
ANR	1689295	UnaryOperator	*		1688931	0					
ANR	1689296	Identifier	inst		1688931	1					
ANR	1689297	Identifier	SAR		1688931	1					
ANR	1689298	ElseStatement	else		1688931	0					
ANR	1689299	CompoundStatement		70:8:1911:1911	1688931	0					
ANR	1689300	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 0xff , dst , 0 )"	936:4:25921:26001	1688931	0	True				
ANR	1689301	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 0xff , dst , 0 )"		1688931	0		=			
ANR	1689302	Identifier	inst		1688931	0					
ANR	1689303	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 0xff , dst , 0 )"		1688931	1					
ANR	1689304	Callee	emit_x86_instruction		1688931	0					
ANR	1689305	Identifier	emit_x86_instruction		1688931	0					
ANR	1689306	ArgumentList	compiler		1688931	1					
ANR	1689307	Argument	compiler		1688931	0					
ANR	1689308	Identifier	compiler		1688931	0					
ANR	1689309	Argument	1 | EX86_BIN_INS		1688931	1					
ANR	1689310	InclusiveOrExpression	1 | EX86_BIN_INS		1688931	0		|			
ANR	1689311	PrimaryExpression	1		1688931	0					
ANR	1689312	Identifier	EX86_BIN_INS		1688931	1					
ANR	1689313	Argument	SLJIT_IMM		1688931	2					
ANR	1689314	Identifier	SLJIT_IMM		1688931	0					
ANR	1689315	Argument	0xff		1688931	3					
ANR	1689316	PrimaryExpression	0xff		1688931	0					
ANR	1689317	Argument	dst		1688931	4					
ANR	1689318	Identifier	dst		1688931	0					
ANR	1689319	Argument	0		1688931	5					
ANR	1689320	PrimaryExpression	0		1688931	0					
ANR	1689321	ExpressionStatement	FAIL_IF ( ! inst )	937:4:26007:26021	1688931	1	True				
ANR	1689322	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689323	Callee	FAIL_IF		1688931	0					
ANR	1689324	Identifier	FAIL_IF		1688931	0					
ANR	1689325	ArgumentList	! inst		1688931	1					
ANR	1689326	Argument	! inst		1688931	0					
ANR	1689327	UnaryOperationExpression	! inst		1688931	0					
ANR	1689328	UnaryOperator	!		1688931	0					
ANR	1689329	Identifier	inst		1688931	1					
ANR	1689330	ExpressionStatement	* ( inst + 1 ) |= AND	938:4:26027:26045	1688931	2	True				
ANR	1689331	AssignmentExpression	* ( inst + 1 ) |= AND		1688931	0		|=			
ANR	1689332	UnaryOperationExpression	* ( inst + 1 )		1688931	0					
ANR	1689333	UnaryOperator	*		1688931	0					
ANR	1689334	AdditiveExpression	inst + 1		1688931	1		+			
ANR	1689335	Identifier	inst		1688931	0					
ANR	1689336	PrimaryExpression	1		1688931	1					
ANR	1689337	Identifier	AND		1688931	1					
ANR	1689338	ReturnStatement	return SLJIT_SUCCESS ;	941:2:26058:26078	1688931	2	True				
ANR	1689339	Identifier	SLJIT_SUCCESS		1688931	0					
ANR	1689340	ElseStatement	else		1688931	0					
ANR	1689341	CompoundStatement		79:6:2092:2092	1688931	0					
ANR	1689342	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"	946:2:26176:26237	1688931	0	True				
ANR	1689343	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1688931	0		=			
ANR	1689344	Identifier	inst		1688931	0					
ANR	1689345	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1688931	1					
ANR	1689346	Callee	emit_x86_instruction		1688931	0					
ANR	1689347	Identifier	emit_x86_instruction		1688931	0					
ANR	1689348	ArgumentList	compiler		1688931	1					
ANR	1689349	Argument	compiler		1688931	0					
ANR	1689350	Identifier	compiler		1688931	0					
ANR	1689351	Argument	2		1688931	1					
ANR	1689352	PrimaryExpression	2		1688931	0					
ANR	1689353	Argument	dst_r		1688931	2					
ANR	1689354	Identifier	dst_r		1688931	0					
ANR	1689355	Argument	0		1688931	3					
ANR	1689356	PrimaryExpression	0		1688931	0					
ANR	1689357	Argument	src		1688931	4					
ANR	1689358	Identifier	src		1688931	0					
ANR	1689359	Argument	srcw		1688931	5					
ANR	1689360	Identifier	srcw		1688931	0					
ANR	1689361	ExpressionStatement	FAIL_IF ( ! inst )	947:2:26241:26255	1688931	1	True				
ANR	1689362	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689363	Callee	FAIL_IF		1688931	0					
ANR	1689364	Identifier	FAIL_IF		1688931	0					
ANR	1689365	ArgumentList	! inst		1688931	1					
ANR	1689366	Argument	! inst		1688931	0					
ANR	1689367	UnaryOperationExpression	! inst		1688931	0					
ANR	1689368	UnaryOperator	!		1688931	0					
ANR	1689369	Identifier	inst		1688931	1					
ANR	1689370	ExpressionStatement	* inst ++ = GROUP_0F	948:2:26259:26277	1688931	2	True				
ANR	1689371	AssignmentExpression	* inst ++ = GROUP_0F		1688931	0		=			
ANR	1689372	UnaryOperationExpression	* inst ++		1688931	0					
ANR	1689373	UnaryOperator	*		1688931	0					
ANR	1689374	PostIncDecOperationExpression	inst ++		1688931	1					
ANR	1689375	Identifier	inst		1688931	0					
ANR	1689376	IncDec	++		1688931	1					
ANR	1689377	Identifier	GROUP_0F		1688931	1					
ANR	1689378	ExpressionStatement	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8	949:2:26281:26321	1688931	3	True				
ANR	1689379	AssignmentExpression	* inst = sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1688931	0		=			
ANR	1689380	UnaryOperationExpression	* inst		1688931	0					
ANR	1689381	UnaryOperator	*		1688931	0					
ANR	1689382	Identifier	inst		1688931	1					
ANR	1689383	ConditionalExpression	sign ? MOVSX_r_rm8 : MOVZX_r_rm8		1688931	1					
ANR	1689384	Condition	sign		1688931	0					
ANR	1689385	Identifier	sign		1688931	0					
ANR	1689386	Identifier	MOVSX_r_rm8		1688931	1					
ANR	1689387	Identifier	MOVZX_r_rm8		1688931	2					
ANR	1689388	IfStatement	if ( dst & SLJIT_MEM )		1688931	8					
ANR	1689389	Condition	dst & SLJIT_MEM	952:5:26332:26346	1688931	0	True				
ANR	1689390	BitAndExpression	dst & SLJIT_MEM		1688931	0		&			
ANR	1689391	Identifier	dst		1688931	0					
ANR	1689392	Identifier	SLJIT_MEM		1688931	1					
ANR	1689393	CompoundStatement		87:22:2345:2345	1688931	1					
ANR	1689394	IfStatement	if ( dst_r == TMP_REG1 )		1688931	0					
ANR	1689395	Condition	dst_r == TMP_REG1	954:6:26414:26430	1688931	0	True				
ANR	1689396	EqualityExpression	dst_r == TMP_REG1		1688931	0		==			
ANR	1689397	Identifier	dst_r		1688931	0					
ANR	1689398	Identifier	TMP_REG1		1688931	1					
ANR	1689399	CompoundStatement		89:25:2429:2429	1688931	1					
ANR	1689400	IfStatement	if ( ( dst & REG_MASK ) == SLJIT_R0 )		1688931	0					
ANR	1689401	Condition	( dst & REG_MASK ) == SLJIT_R0	956:7:26501:26528	1688931	0	True				
ANR	1689402	EqualityExpression	( dst & REG_MASK ) == SLJIT_R0		1688931	0		==			
ANR	1689403	BitAndExpression	dst & REG_MASK		1688931	0		&			
ANR	1689404	Identifier	dst		1688931	0					
ANR	1689405	Identifier	REG_MASK		1688931	1					
ANR	1689406	Identifier	SLJIT_R0		1688931	1					
ANR	1689407	CompoundStatement		91:37:2527:2527	1688931	1					
ANR	1689408	IfStatement	if ( ( dst & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_R1 ) )		1688931	0					
ANR	1689409	Condition	( dst & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_R1 )	957:8:26541:26586	1688931	0	True				
ANR	1689410	EqualityExpression	( dst & OFFS_REG_MASK ) == TO_OFFS_REG ( SLJIT_R1 )		1688931	0		==			
ANR	1689411	BitAndExpression	dst & OFFS_REG_MASK		1688931	0		&			
ANR	1689412	Identifier	dst		1688931	0					
ANR	1689413	Identifier	OFFS_REG_MASK		1688931	1					
ANR	1689414	CallExpression	TO_OFFS_REG ( SLJIT_R1 )		1688931	1					
ANR	1689415	Callee	TO_OFFS_REG		1688931	0					
ANR	1689416	Identifier	TO_OFFS_REG		1688931	0					
ANR	1689417	ArgumentList	SLJIT_R1		1688931	1					
ANR	1689418	Argument	SLJIT_R1		1688931	0					
ANR	1689419	Identifier	SLJIT_R1		1688931	0					
ANR	1689420	ExpressionStatement	work_r = SLJIT_R2	958:5:26594:26611	1688931	1	True				
ANR	1689421	AssignmentExpression	work_r = SLJIT_R2		1688931	0		=			
ANR	1689422	Identifier	work_r		1688931	0					
ANR	1689423	Identifier	SLJIT_R2		1688931	1					
ANR	1689424	ElseStatement	else		1688931	0					
ANR	1689425	ExpressionStatement	work_r = SLJIT_R1	960:5:26627:26644	1688931	0	True				
ANR	1689426	AssignmentExpression	work_r = SLJIT_R1		1688931	0		=			
ANR	1689427	Identifier	work_r		1688931	0					
ANR	1689428	Identifier	SLJIT_R1		1688931	1					
ANR	1689429	ElseStatement	else		1688931	0					
ANR	1689430	CompoundStatement		97:8:2655:2655	1688931	0					
ANR	1689431	IfStatement	if ( ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 ) )		1688931	0					
ANR	1689432	Condition	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )	963:8:26669:26714	1688931	0	True				
ANR	1689433	EqualityExpression	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )		1688931	0		!=			
ANR	1689434	BitAndExpression	dst & OFFS_REG_MASK		1688931	0		&			
ANR	1689435	Identifier	dst		1688931	0					
ANR	1689436	Identifier	OFFS_REG_MASK		1688931	1					
ANR	1689437	CallExpression	TO_OFFS_REG ( SLJIT_R0 )		1688931	1					
ANR	1689438	Callee	TO_OFFS_REG		1688931	0					
ANR	1689439	Identifier	TO_OFFS_REG		1688931	0					
ANR	1689440	ArgumentList	SLJIT_R0		1688931	1					
ANR	1689441	Argument	SLJIT_R0		1688931	0					
ANR	1689442	Identifier	SLJIT_R0		1688931	0					
ANR	1689443	ExpressionStatement	work_r = SLJIT_R0	964:5:26722:26739	1688931	1	True				
ANR	1689444	AssignmentExpression	work_r = SLJIT_R0		1688931	0		=			
ANR	1689445	Identifier	work_r		1688931	0					
ANR	1689446	Identifier	SLJIT_R0		1688931	1					
ANR	1689447	ElseStatement	else		1688931	0					
ANR	1689448	IfStatement	if ( ( dst & REG_MASK ) == SLJIT_R1 )		1688931	0					
ANR	1689449	Condition	( dst & REG_MASK ) == SLJIT_R1	965:13:26754:26781	1688931	0	True				
ANR	1689450	EqualityExpression	( dst & REG_MASK ) == SLJIT_R1		1688931	0		==			
ANR	1689451	BitAndExpression	dst & REG_MASK		1688931	0		&			
ANR	1689452	Identifier	dst		1688931	0					
ANR	1689453	Identifier	REG_MASK		1688931	1					
ANR	1689454	Identifier	SLJIT_R1		1688931	1					
ANR	1689455	ExpressionStatement	work_r = SLJIT_R2	966:5:26789:26806	1688931	1	True				
ANR	1689456	AssignmentExpression	work_r = SLJIT_R2		1688931	0		=			
ANR	1689457	Identifier	work_r		1688931	0					
ANR	1689458	Identifier	SLJIT_R2		1688931	1					
ANR	1689459	ElseStatement	else		1688931	0					
ANR	1689460	ExpressionStatement	work_r = SLJIT_R1	968:5:26822:26839	1688931	0	True				
ANR	1689461	AssignmentExpression	work_r = SLJIT_R1		1688931	0		=			
ANR	1689462	Identifier	work_r		1688931	0					
ANR	1689463	Identifier	SLJIT_R1		1688931	1					
ANR	1689464	IfStatement	if ( work_r == SLJIT_R0 )		1688931	1					
ANR	1689465	Condition	work_r == SLJIT_R0	971:7:26854:26871	1688931	0	True				
ANR	1689466	EqualityExpression	work_r == SLJIT_R0		1688931	0		==			
ANR	1689467	Identifier	work_r		1688931	0					
ANR	1689468	Identifier	SLJIT_R0		1688931	1					
ANR	1689469	CompoundStatement		106:27:2870:2870	1688931	1					
ANR	1689470	ExpressionStatement	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )	972:4:26880:26925	1688931	0	True				
ANR	1689471	CallExpression	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )		1688931	0					
ANR	1689472	Callee	ENCODE_PREFIX		1688931	0					
ANR	1689473	Identifier	ENCODE_PREFIX		1688931	0					
ANR	1689474	ArgumentList	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1688931	1					
ANR	1689475	Argument	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1688931	0					
ANR	1689476	AdditiveExpression	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1688931	0		+			
ANR	1689477	Identifier	XCHG_EAX_r		1688931	0					
ANR	1689478	ArrayIndexing	reg_map [ TMP_REG1 ]		1688931	1					
ANR	1689479	Identifier	reg_map		1688931	0					
ANR	1689480	Identifier	TMP_REG1		1688931	1					
ANR	1689481	ElseStatement	else		1688931	0					
ANR	1689482	CompoundStatement		109:8:2936:2936	1688931	0					
ANR	1689483	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"	975:4:26946:27007	1688931	0	True				
ANR	1689484	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1688931	0		=			
ANR	1689485	Identifier	inst		1688931	0					
ANR	1689486	CallExpression	"emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1688931	1					
ANR	1689487	Callee	emit_x86_instruction		1688931	0					
ANR	1689488	Identifier	emit_x86_instruction		1688931	0					
ANR	1689489	ArgumentList	compiler		1688931	1					
ANR	1689490	Argument	compiler		1688931	0					
ANR	1689491	Identifier	compiler		1688931	0					
ANR	1689492	Argument	1		1688931	1					
ANR	1689493	PrimaryExpression	1		1688931	0					
ANR	1689494	Argument	work_r		1688931	2					
ANR	1689495	Identifier	work_r		1688931	0					
ANR	1689496	Argument	0		1688931	3					
ANR	1689497	PrimaryExpression	0		1688931	0					
ANR	1689498	Argument	dst_r		1688931	4					
ANR	1689499	Identifier	dst_r		1688931	0					
ANR	1689500	Argument	0		1688931	5					
ANR	1689501	PrimaryExpression	0		1688931	0					
ANR	1689502	ExpressionStatement	FAIL_IF ( ! inst )	976:4:27013:27027	1688931	1	True				
ANR	1689503	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689504	Callee	FAIL_IF		1688931	0					
ANR	1689505	Identifier	FAIL_IF		1688931	0					
ANR	1689506	ArgumentList	! inst		1688931	1					
ANR	1689507	Argument	! inst		1688931	0					
ANR	1689508	UnaryOperationExpression	! inst		1688931	0					
ANR	1689509	UnaryOperator	!		1688931	0					
ANR	1689510	Identifier	inst		1688931	1					
ANR	1689511	ExpressionStatement	* inst = XCHG_r_rm	977:4:27033:27050	1688931	2	True				
ANR	1689512	AssignmentExpression	* inst = XCHG_r_rm		1688931	0		=			
ANR	1689513	UnaryOperationExpression	* inst		1688931	0					
ANR	1689514	UnaryOperator	*		1688931	0					
ANR	1689515	Identifier	inst		1688931	1					
ANR	1689516	Identifier	XCHG_r_rm		1688931	1					
ANR	1689517	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst , dstw )"	980:3:27061:27123	1688931	2	True				
ANR	1689518	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst , dstw )"		1688931	0		=			
ANR	1689519	Identifier	inst		1688931	0					
ANR	1689520	CallExpression	"emit_x86_instruction ( compiler , 1 , work_r , 0 , dst , dstw )"		1688931	1					
ANR	1689521	Callee	emit_x86_instruction		1688931	0					
ANR	1689522	Identifier	emit_x86_instruction		1688931	0					
ANR	1689523	ArgumentList	compiler		1688931	1					
ANR	1689524	Argument	compiler		1688931	0					
ANR	1689525	Identifier	compiler		1688931	0					
ANR	1689526	Argument	1		1688931	1					
ANR	1689527	PrimaryExpression	1		1688931	0					
ANR	1689528	Argument	work_r		1688931	2					
ANR	1689529	Identifier	work_r		1688931	0					
ANR	1689530	Argument	0		1688931	3					
ANR	1689531	PrimaryExpression	0		1688931	0					
ANR	1689532	Argument	dst		1688931	4					
ANR	1689533	Identifier	dst		1688931	0					
ANR	1689534	Argument	dstw		1688931	5					
ANR	1689535	Identifier	dstw		1688931	0					
ANR	1689536	ExpressionStatement	FAIL_IF ( ! inst )	981:3:27128:27142	1688931	3	True				
ANR	1689537	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689538	Callee	FAIL_IF		1688931	0					
ANR	1689539	Identifier	FAIL_IF		1688931	0					
ANR	1689540	ArgumentList	! inst		1688931	1					
ANR	1689541	Argument	! inst		1688931	0					
ANR	1689542	UnaryOperationExpression	! inst		1688931	0					
ANR	1689543	UnaryOperator	!		1688931	0					
ANR	1689544	Identifier	inst		1688931	1					
ANR	1689545	ExpressionStatement	* inst = MOV_rm8_r8	982:3:27147:27165	1688931	4	True				
ANR	1689546	AssignmentExpression	* inst = MOV_rm8_r8		1688931	0		=			
ANR	1689547	UnaryOperationExpression	* inst		1688931	0					
ANR	1689548	UnaryOperator	*		1688931	0					
ANR	1689549	Identifier	inst		1688931	1					
ANR	1689550	Identifier	MOV_rm8_r8		1688931	1					
ANR	1689551	IfStatement	if ( work_r == SLJIT_R0 )		1688931	5					
ANR	1689552	Condition	work_r == SLJIT_R0	984:7:27175:27192	1688931	0	True				
ANR	1689553	EqualityExpression	work_r == SLJIT_R0		1688931	0		==			
ANR	1689554	Identifier	work_r		1688931	0					
ANR	1689555	Identifier	SLJIT_R0		1688931	1					
ANR	1689556	CompoundStatement		119:27:3191:3191	1688931	1					
ANR	1689557	ExpressionStatement	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )	985:4:27201:27246	1688931	0	True				
ANR	1689558	CallExpression	ENCODE_PREFIX ( XCHG_EAX_r + reg_map [ TMP_REG1 ] )		1688931	0					
ANR	1689559	Callee	ENCODE_PREFIX		1688931	0					
ANR	1689560	Identifier	ENCODE_PREFIX		1688931	0					
ANR	1689561	ArgumentList	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1688931	1					
ANR	1689562	Argument	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1688931	0					
ANR	1689563	AdditiveExpression	XCHG_EAX_r + reg_map [ TMP_REG1 ]		1688931	0		+			
ANR	1689564	Identifier	XCHG_EAX_r		1688931	0					
ANR	1689565	ArrayIndexing	reg_map [ TMP_REG1 ]		1688931	1					
ANR	1689566	Identifier	reg_map		1688931	0					
ANR	1689567	Identifier	TMP_REG1		1688931	1					
ANR	1689568	ElseStatement	else		1688931	0					
ANR	1689569	CompoundStatement		122:8:3257:3257	1688931	0					
ANR	1689570	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"	988:4:27267:27328	1688931	0	True				
ANR	1689571	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1688931	0		=			
ANR	1689572	Identifier	inst		1688931	0					
ANR	1689573	CallExpression	"emit_x86_instruction ( compiler , 1 , work_r , 0 , dst_r , 0 )"		1688931	1					
ANR	1689574	Callee	emit_x86_instruction		1688931	0					
ANR	1689575	Identifier	emit_x86_instruction		1688931	0					
ANR	1689576	ArgumentList	compiler		1688931	1					
ANR	1689577	Argument	compiler		1688931	0					
ANR	1689578	Identifier	compiler		1688931	0					
ANR	1689579	Argument	1		1688931	1					
ANR	1689580	PrimaryExpression	1		1688931	0					
ANR	1689581	Argument	work_r		1688931	2					
ANR	1689582	Identifier	work_r		1688931	0					
ANR	1689583	Argument	0		1688931	3					
ANR	1689584	PrimaryExpression	0		1688931	0					
ANR	1689585	Argument	dst_r		1688931	4					
ANR	1689586	Identifier	dst_r		1688931	0					
ANR	1689587	Argument	0		1688931	5					
ANR	1689588	PrimaryExpression	0		1688931	0					
ANR	1689589	ExpressionStatement	FAIL_IF ( ! inst )	989:4:27334:27348	1688931	1	True				
ANR	1689590	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689591	Callee	FAIL_IF		1688931	0					
ANR	1689592	Identifier	FAIL_IF		1688931	0					
ANR	1689593	ArgumentList	! inst		1688931	1					
ANR	1689594	Argument	! inst		1688931	0					
ANR	1689595	UnaryOperationExpression	! inst		1688931	0					
ANR	1689596	UnaryOperator	!		1688931	0					
ANR	1689597	Identifier	inst		1688931	1					
ANR	1689598	ExpressionStatement	* inst = XCHG_r_rm	990:4:27354:27371	1688931	2	True				
ANR	1689599	AssignmentExpression	* inst = XCHG_r_rm		1688931	0		=			
ANR	1689600	UnaryOperationExpression	* inst		1688931	0					
ANR	1689601	UnaryOperator	*		1688931	0					
ANR	1689602	Identifier	inst		1688931	1					
ANR	1689603	Identifier	XCHG_r_rm		1688931	1					
ANR	1689604	ElseStatement	else		1688931	0					
ANR	1689605	CompoundStatement		128:7:3385:3385	1688931	0					
ANR	1689606	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"	994:3:27394:27455	1688931	0	True				
ANR	1689607	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1688931	0		=			
ANR	1689608	Identifier	inst		1688931	0					
ANR	1689609	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1688931	1					
ANR	1689610	Callee	emit_x86_instruction		1688931	0					
ANR	1689611	Identifier	emit_x86_instruction		1688931	0					
ANR	1689612	ArgumentList	compiler		1688931	1					
ANR	1689613	Argument	compiler		1688931	0					
ANR	1689614	Identifier	compiler		1688931	0					
ANR	1689615	Argument	1		1688931	1					
ANR	1689616	PrimaryExpression	1		1688931	0					
ANR	1689617	Argument	dst_r		1688931	2					
ANR	1689618	Identifier	dst_r		1688931	0					
ANR	1689619	Argument	0		1688931	3					
ANR	1689620	PrimaryExpression	0		1688931	0					
ANR	1689621	Argument	dst		1688931	4					
ANR	1689622	Identifier	dst		1688931	0					
ANR	1689623	Argument	dstw		1688931	5					
ANR	1689624	Identifier	dstw		1688931	0					
ANR	1689625	ExpressionStatement	FAIL_IF ( ! inst )	995:3:27460:27474	1688931	1	True				
ANR	1689626	CallExpression	FAIL_IF ( ! inst )		1688931	0					
ANR	1689627	Callee	FAIL_IF		1688931	0					
ANR	1689628	Identifier	FAIL_IF		1688931	0					
ANR	1689629	ArgumentList	! inst		1688931	1					
ANR	1689630	Argument	! inst		1688931	0					
ANR	1689631	UnaryOperationExpression	! inst		1688931	0					
ANR	1689632	UnaryOperator	!		1688931	0					
ANR	1689633	Identifier	inst		1688931	1					
ANR	1689634	ExpressionStatement	* inst = MOV_rm8_r8	996:3:27479:27497	1688931	2	True				
ANR	1689635	AssignmentExpression	* inst = MOV_rm8_r8		1688931	0		=			
ANR	1689636	UnaryOperationExpression	* inst		1688931	0					
ANR	1689637	UnaryOperator	*		1688931	0					
ANR	1689638	Identifier	inst		1688931	1					
ANR	1689639	Identifier	MOV_rm8_r8		1688931	1					
ANR	1689640	ReturnStatement	return SLJIT_SUCCESS ;	1005:1:27652:27672	1688931	9	True				
ANR	1689641	Identifier	SLJIT_SUCCESS		1688931	0					
ANR	1689642	ReturnType	static sljit_si		1688931	1					
ANR	1689643	Identifier	emit_mov_byte		1688931	2					
ANR	1689644	ParameterList	"struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1688931	3					
ANR	1689645	Parameter	struct sljit_compiler * compiler	863:30:23895:23925	1688931	0	True				
ANR	1689646	ParameterType	struct sljit_compiler *		1688931	0					
ANR	1689647	Identifier	compiler		1688931	1					
ANR	1689648	Parameter	sljit_si sign	863:63:23928:23940	1688931	1	True				
ANR	1689649	ParameterType	sljit_si		1688931	0					
ANR	1689650	Identifier	sign		1688931	1					
ANR	1689651	Parameter	sljit_si dst	864:1:23944:23955	1688931	2	True				
ANR	1689652	ParameterType	sljit_si		1688931	0					
ANR	1689653	Identifier	dst		1688931	1					
ANR	1689654	Parameter	sljit_sw dstw	864:15:23958:23970	1688931	3	True				
ANR	1689655	ParameterType	sljit_sw		1688931	0					
ANR	1689656	Identifier	dstw		1688931	1					
ANR	1689657	Parameter	sljit_si src	865:1:23974:23985	1688931	4	True				
ANR	1689658	ParameterType	sljit_si		1688931	0					
ANR	1689659	Identifier	src		1688931	1					
ANR	1689660	Parameter	sljit_sw srcw	865:15:23988:24000	1688931	5	True				
ANR	1689661	ParameterType	sljit_sw		1688931	0					
ANR	1689662	Identifier	srcw		1688931	1					
ANR	1689663	CFGEntryNode	ENTRY		1688931		True				
ANR	1689664	CFGExitNode	EXIT		1688931		True				
ANR	1689665	Symbol	TMP_REG1		1688931						
ANR	1689666	Symbol	XCHG_EAX_r		1688931						
ANR	1689667	Symbol	SLJIT_MEM		1688931						
ANR	1689668	Symbol	EX86_NO_REXW		1688931						
ANR	1689669	Symbol	sign		1688931						
ANR	1689670	Symbol	* inst ++		1688931						
ANR	1689671	Symbol	reg_map		1688931						
ANR	1689672	Symbol	SLOW_IS_REG		1688931						
ANR	1689673	Symbol	* compiler		1688931						
ANR	1689674	Symbol	MOVSX_r_rm8		1688931						
ANR	1689675	Symbol	SLJIT_R1		1688931						
ANR	1689676	Symbol	MOVZX_r_rm8		1688931						
ANR	1689677	Symbol	SLJIT_R2		1688931						
ANR	1689678	Symbol	* src		1688931						
ANR	1689679	Symbol	SLJIT_R0		1688931						
ANR	1689680	Symbol	* dst		1688931						
ANR	1689681	Symbol	SLJIT_IMM		1688931						
ANR	1689682	Symbol	SHL		1688931						
ANR	1689683	Symbol	* TMP_REG1		1688931						
ANR	1689684	Symbol	GROUP_0F		1688931						
ANR	1689685	Symbol	FAST_IS_REG		1688931						
ANR	1689686	Symbol	srcw		1688931						
ANR	1689687	Symbol	work_r		1688931						
ANR	1689688	Symbol	OFFS_REG_MASK		1688931						
ANR	1689689	Symbol	* reg_map		1688931						
ANR	1689690	Symbol	EX86_SHIFT_INS		1688931						
ANR	1689691	Symbol	AND		1688931						
ANR	1689692	Symbol	EX86_BYTE_ARG		1688931						
ANR	1689693	Symbol	MOV_rm8_r8		1688931						
ANR	1689694	Symbol	dst		1688931						
ANR	1689695	Symbol	SAR		1688931						
ANR	1689696	Symbol	MOV_r_i32		1688931						
ANR	1689697	Symbol	dst_r		1688931						
ANR	1689698	Symbol	XCHG_r_rm		1688931						
ANR	1689699	Symbol	MOV_rm8_i8		1688931						
ANR	1689700	Symbol	EX86_BIN_INS		1688931						
ANR	1689701	Symbol	compiler		1688931						
ANR	1689702	Symbol	TO_OFFS_REG		1688931						
ANR	1689703	Symbol	emit_x86_instruction		1688931						
ANR	1689704	Symbol	REG_MASK		1688931						
ANR	1689705	Symbol	* inst		1688931						
ANR	1689706	Symbol	src		1688931						
ANR	1689707	Symbol	SLJIT_SUCCESS		1688931						
ANR	1689708	Symbol	SLJIT_UNUSED		1688931						
ANR	1689709	Symbol	emit_do_imm		1688931						
ANR	1689710	Symbol	inst		1688931						
ANR	1689711	Symbol	compiler -> mode32		1688931						
ANR	1689712	Symbol	* ( inst + 1 )		1688931						
ANR	1689713	Symbol	dstw		1688931						
ANR	1689714	Function	emit_mov_half	1008:0:27677:29001							
ANR	1689715	FunctionDef	"emit_mov_half (struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1689714	0					
ANR	1689716	CompoundStatement		1011:0:27815:29001	1689714	0					
ANR	1689717	IdentifierDeclStatement	sljit_ub * inst ;	1012:1:27818:27832	1689714	0	True				
ANR	1689718	IdentifierDecl	* inst		1689714	0					
ANR	1689719	IdentifierDeclType	sljit_ub *		1689714	0					
ANR	1689720	Identifier	inst		1689714	1					
ANR	1689721	IdentifierDeclStatement	sljit_si dst_r ;	1013:1:27835:27849	1689714	1	True				
ANR	1689722	IdentifierDecl	dst_r		1689714	0					
ANR	1689723	IdentifierDeclType	sljit_si		1689714	0					
ANR	1689724	Identifier	dst_r		1689714	1					
ANR	1689725	ExpressionStatement	compiler -> mode32 = 0	1016:1:27910:27930	1689714	2	True				
ANR	1689726	AssignmentExpression	compiler -> mode32 = 0		1689714	0		=			
ANR	1689727	PtrMemberAccess	compiler -> mode32		1689714	0					
ANR	1689728	Identifier	compiler		1689714	0					
ANR	1689729	Identifier	mode32		1689714	1					
ANR	1689730	PrimaryExpression	0		1689714	1					
ANR	1689731	IfStatement	if ( dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM ) )		1689714	3					
ANR	1689732	Condition	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )	1019:5:27945:27985	1689714	0	True				
ANR	1689733	AndExpression	dst == SLJIT_UNUSED && ! ( src & SLJIT_MEM )		1689714	0		&&			
ANR	1689734	EqualityExpression	dst == SLJIT_UNUSED		1689714	0		==			
ANR	1689735	Identifier	dst		1689714	0					
ANR	1689736	Identifier	SLJIT_UNUSED		1689714	1					
ANR	1689737	UnaryOperationExpression	! ( src & SLJIT_MEM )		1689714	1					
ANR	1689738	UnaryOperator	!		1689714	0					
ANR	1689739	BitAndExpression	src & SLJIT_MEM		1689714	1		&			
ANR	1689740	Identifier	src		1689714	0					
ANR	1689741	Identifier	SLJIT_MEM		1689714	1					
ANR	1689742	ReturnStatement	return SLJIT_SUCCESS ;	1020:2:27990:28010	1689714	1	True				
ANR	1689743	Identifier	SLJIT_SUCCESS		1689714	0					
ANR	1689744	IfStatement	if ( src & SLJIT_IMM )		1689714	4					
ANR	1689745	Condition	src & SLJIT_IMM	1022:5:28043:28057	1689714	0	True				
ANR	1689746	BitAndExpression	src & SLJIT_IMM		1689714	0		&			
ANR	1689747	Identifier	src		1689714	0					
ANR	1689748	Identifier	SLJIT_IMM		1689714	1					
ANR	1689749	CompoundStatement		12:22:244:244	1689714	1					
ANR	1689750	IfStatement	if ( FAST_IS_REG ( dst ) )		1689714	0					
ANR	1689751	Condition	FAST_IS_REG ( dst )	1023:6:28068:28083	1689714	0	True				
ANR	1689752	CallExpression	FAST_IS_REG ( dst )		1689714	0					
ANR	1689753	Callee	FAST_IS_REG		1689714	0					
ANR	1689754	Identifier	FAST_IS_REG		1689714	0					
ANR	1689755	ArgumentList	dst		1689714	1					
ANR	1689756	Argument	dst		1689714	0					
ANR	1689757	Identifier	dst		1689714	0					
ANR	1689758	CompoundStatement		13:24:270:270	1689714	1					
ANR	1689759	ReturnStatement	"return emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw ) ;"	1025:3:28148:28208	1689714	0	True				
ANR	1689760	CallExpression	"emit_do_imm ( compiler , MOV_r_i32 + reg_map [ dst ] , srcw )"		1689714	0					
ANR	1689761	Callee	emit_do_imm		1689714	0					
ANR	1689762	Identifier	emit_do_imm		1689714	0					
ANR	1689763	ArgumentList	compiler		1689714	1					
ANR	1689764	Argument	compiler		1689714	0					
ANR	1689765	Identifier	compiler		1689714	0					
ANR	1689766	Argument	MOV_r_i32 + reg_map [ dst ]		1689714	1					
ANR	1689767	AdditiveExpression	MOV_r_i32 + reg_map [ dst ]		1689714	0		+			
ANR	1689768	Identifier	MOV_r_i32		1689714	0					
ANR	1689769	ArrayIndexing	reg_map [ dst ]		1689714	1					
ANR	1689770	Identifier	reg_map		1689714	0					
ANR	1689771	Identifier	dst		1689714	1					
ANR	1689772	Argument	srcw		1689714	2					
ANR	1689773	Identifier	srcw		1689714	0					
ANR	1689774	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66 , SLJIT_IMM , srcw , dst , dstw )"	1033:2:28366:28480	1689714	1	True				
ANR	1689775	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66 , SLJIT_IMM , srcw , dst , dstw )"		1689714	0		=			
ANR	1689776	Identifier	inst		1689714	0					
ANR	1689777	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66 , SLJIT_IMM , srcw , dst , dstw )"		1689714	1					
ANR	1689778	Callee	emit_x86_instruction		1689714	0					
ANR	1689779	Identifier	emit_x86_instruction		1689714	0					
ANR	1689780	ArgumentList	compiler		1689714	1					
ANR	1689781	Argument	compiler		1689714	0					
ANR	1689782	Identifier	compiler		1689714	0					
ANR	1689783	Argument	1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66		1689714	1					
ANR	1689784	InclusiveOrExpression	1 | EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66		1689714	0		|			
ANR	1689785	PrimaryExpression	1		1689714	0					
ANR	1689786	InclusiveOrExpression	EX86_HALF_ARG | EX86_NO_REXW | EX86_PREF_66		1689714	1		|			
ANR	1689787	Identifier	EX86_HALF_ARG		1689714	0					
ANR	1689788	InclusiveOrExpression	EX86_NO_REXW | EX86_PREF_66		1689714	1		|			
ANR	1689789	Identifier	EX86_NO_REXW		1689714	0					
ANR	1689790	Identifier	EX86_PREF_66		1689714	1					
ANR	1689791	Argument	SLJIT_IMM		1689714	2					
ANR	1689792	Identifier	SLJIT_IMM		1689714	0					
ANR	1689793	Argument	srcw		1689714	3					
ANR	1689794	Identifier	srcw		1689714	0					
ANR	1689795	Argument	dst		1689714	4					
ANR	1689796	Identifier	dst		1689714	0					
ANR	1689797	Argument	dstw		1689714	5					
ANR	1689798	Identifier	dstw		1689714	0					
ANR	1689799	ExpressionStatement	FAIL_IF ( ! inst )	1034:2:28484:28498	1689714	2	True				
ANR	1689800	CallExpression	FAIL_IF ( ! inst )		1689714	0					
ANR	1689801	Callee	FAIL_IF		1689714	0					
ANR	1689802	Identifier	FAIL_IF		1689714	0					
ANR	1689803	ArgumentList	! inst		1689714	1					
ANR	1689804	Argument	! inst		1689714	0					
ANR	1689805	UnaryOperationExpression	! inst		1689714	0					
ANR	1689806	UnaryOperator	!		1689714	0					
ANR	1689807	Identifier	inst		1689714	1					
ANR	1689808	ExpressionStatement	* inst = MOV_rm_i32	1035:2:28502:28520	1689714	3	True				
ANR	1689809	AssignmentExpression	* inst = MOV_rm_i32		1689714	0		=			
ANR	1689810	UnaryOperationExpression	* inst		1689714	0					
ANR	1689811	UnaryOperator	*		1689714	0					
ANR	1689812	Identifier	inst		1689714	1					
ANR	1689813	Identifier	MOV_rm_i32		1689714	1					
ANR	1689814	ReturnStatement	return SLJIT_SUCCESS ;	1036:2:28524:28544	1689714	4	True				
ANR	1689815	Identifier	SLJIT_SUCCESS		1689714	0					
ANR	1689816	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	1039:1:28551:28592	1689714	5	True				
ANR	1689817	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1689714	0		=			
ANR	1689818	Identifier	dst_r		1689714	0					
ANR	1689819	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1689714	1					
ANR	1689820	Condition	FAST_IS_REG ( dst )		1689714	0					
ANR	1689821	CallExpression	FAST_IS_REG ( dst )		1689714	0					
ANR	1689822	Callee	FAST_IS_REG		1689714	0					
ANR	1689823	Identifier	FAST_IS_REG		1689714	0					
ANR	1689824	ArgumentList	dst		1689714	1					
ANR	1689825	Argument	dst		1689714	0					
ANR	1689826	Identifier	dst		1689714	0					
ANR	1689827	Identifier	dst		1689714	1					
ANR	1689828	Identifier	TMP_REG1		1689714	2					
ANR	1689829	IfStatement	if ( ( dst & SLJIT_MEM ) && FAST_IS_REG ( src ) )		1689714	6					
ANR	1689830	Condition	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )	1041:5:28600:28636	1689714	0	True				
ANR	1689831	AndExpression	( dst & SLJIT_MEM ) && FAST_IS_REG ( src )		1689714	0		&&			
ANR	1689832	BitAndExpression	dst & SLJIT_MEM		1689714	0		&			
ANR	1689833	Identifier	dst		1689714	0					
ANR	1689834	Identifier	SLJIT_MEM		1689714	1					
ANR	1689835	CallExpression	FAST_IS_REG ( src )		1689714	1					
ANR	1689836	Callee	FAST_IS_REG		1689714	0					
ANR	1689837	Identifier	FAST_IS_REG		1689714	0					
ANR	1689838	ArgumentList	src		1689714	1					
ANR	1689839	Argument	src		1689714	0					
ANR	1689840	Identifier	src		1689714	0					
ANR	1689841	ExpressionStatement	dst_r = src	1042:2:28641:28652	1689714	1	True				
ANR	1689842	AssignmentExpression	dst_r = src		1689714	0		=			
ANR	1689843	Identifier	dst_r		1689714	0					
ANR	1689844	Identifier	src		1689714	1					
ANR	1689845	ElseStatement	else		1689714	0					
ANR	1689846	CompoundStatement		33:6:844:844	1689714	0					
ANR	1689847	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"	1044:2:28664:28725	1689714	0	True				
ANR	1689848	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1689714	0		=			
ANR	1689849	Identifier	inst		1689714	0					
ANR	1689850	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src , srcw )"		1689714	1					
ANR	1689851	Callee	emit_x86_instruction		1689714	0					
ANR	1689852	Identifier	emit_x86_instruction		1689714	0					
ANR	1689853	ArgumentList	compiler		1689714	1					
ANR	1689854	Argument	compiler		1689714	0					
ANR	1689855	Identifier	compiler		1689714	0					
ANR	1689856	Argument	2		1689714	1					
ANR	1689857	PrimaryExpression	2		1689714	0					
ANR	1689858	Argument	dst_r		1689714	2					
ANR	1689859	Identifier	dst_r		1689714	0					
ANR	1689860	Argument	0		1689714	3					
ANR	1689861	PrimaryExpression	0		1689714	0					
ANR	1689862	Argument	src		1689714	4					
ANR	1689863	Identifier	src		1689714	0					
ANR	1689864	Argument	srcw		1689714	5					
ANR	1689865	Identifier	srcw		1689714	0					
ANR	1689866	ExpressionStatement	FAIL_IF ( ! inst )	1045:2:28729:28743	1689714	1	True				
ANR	1689867	CallExpression	FAIL_IF ( ! inst )		1689714	0					
ANR	1689868	Callee	FAIL_IF		1689714	0					
ANR	1689869	Identifier	FAIL_IF		1689714	0					
ANR	1689870	ArgumentList	! inst		1689714	1					
ANR	1689871	Argument	! inst		1689714	0					
ANR	1689872	UnaryOperationExpression	! inst		1689714	0					
ANR	1689873	UnaryOperator	!		1689714	0					
ANR	1689874	Identifier	inst		1689714	1					
ANR	1689875	ExpressionStatement	* inst ++ = GROUP_0F	1046:2:28747:28765	1689714	2	True				
ANR	1689876	AssignmentExpression	* inst ++ = GROUP_0F		1689714	0		=			
ANR	1689877	UnaryOperationExpression	* inst ++		1689714	0					
ANR	1689878	UnaryOperator	*		1689714	0					
ANR	1689879	PostIncDecOperationExpression	inst ++		1689714	1					
ANR	1689880	Identifier	inst		1689714	0					
ANR	1689881	IncDec	++		1689714	1					
ANR	1689882	Identifier	GROUP_0F		1689714	1					
ANR	1689883	ExpressionStatement	* inst = sign ? MOVSX_r_rm16 : MOVZX_r_rm16	1047:2:28769:28811	1689714	3	True				
ANR	1689884	AssignmentExpression	* inst = sign ? MOVSX_r_rm16 : MOVZX_r_rm16		1689714	0		=			
ANR	1689885	UnaryOperationExpression	* inst		1689714	0					
ANR	1689886	UnaryOperator	*		1689714	0					
ANR	1689887	Identifier	inst		1689714	1					
ANR	1689888	ConditionalExpression	sign ? MOVSX_r_rm16 : MOVZX_r_rm16		1689714	1					
ANR	1689889	Condition	sign		1689714	0					
ANR	1689890	Identifier	sign		1689714	0					
ANR	1689891	Identifier	MOVSX_r_rm16		1689714	1					
ANR	1689892	Identifier	MOVZX_r_rm16		1689714	2					
ANR	1689893	IfStatement	if ( dst & SLJIT_MEM )		1689714	7					
ANR	1689894	Condition	dst & SLJIT_MEM	1050:5:28822:28836	1689714	0	True				
ANR	1689895	BitAndExpression	dst & SLJIT_MEM		1689714	0		&			
ANR	1689896	Identifier	dst		1689714	0					
ANR	1689897	Identifier	SLJIT_MEM		1689714	1					
ANR	1689898	CompoundStatement		40:22:1023:1023	1689714	1					
ANR	1689899	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_NO_REXW | EX86_PREF_66 , dst_r , 0 , dst , dstw )"	1051:2:28843:28934	1689714	0	True				
ANR	1689900	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_NO_REXW | EX86_PREF_66 , dst_r , 0 , dst , dstw )"		1689714	0		=			
ANR	1689901	Identifier	inst		1689714	0					
ANR	1689902	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_NO_REXW | EX86_PREF_66 , dst_r , 0 , dst , dstw )"		1689714	1					
ANR	1689903	Callee	emit_x86_instruction		1689714	0					
ANR	1689904	Identifier	emit_x86_instruction		1689714	0					
ANR	1689905	ArgumentList	compiler		1689714	1					
ANR	1689906	Argument	compiler		1689714	0					
ANR	1689907	Identifier	compiler		1689714	0					
ANR	1689908	Argument	1 | EX86_NO_REXW | EX86_PREF_66		1689714	1					
ANR	1689909	InclusiveOrExpression	1 | EX86_NO_REXW | EX86_PREF_66		1689714	0		|			
ANR	1689910	PrimaryExpression	1		1689714	0					
ANR	1689911	InclusiveOrExpression	EX86_NO_REXW | EX86_PREF_66		1689714	1		|			
ANR	1689912	Identifier	EX86_NO_REXW		1689714	0					
ANR	1689913	Identifier	EX86_PREF_66		1689714	1					
ANR	1689914	Argument	dst_r		1689714	2					
ANR	1689915	Identifier	dst_r		1689714	0					
ANR	1689916	Argument	0		1689714	3					
ANR	1689917	PrimaryExpression	0		1689714	0					
ANR	1689918	Argument	dst		1689714	4					
ANR	1689919	Identifier	dst		1689714	0					
ANR	1689920	Argument	dstw		1689714	5					
ANR	1689921	Identifier	dstw		1689714	0					
ANR	1689922	ExpressionStatement	FAIL_IF ( ! inst )	1052:2:28938:28952	1689714	1	True				
ANR	1689923	CallExpression	FAIL_IF ( ! inst )		1689714	0					
ANR	1689924	Callee	FAIL_IF		1689714	0					
ANR	1689925	Identifier	FAIL_IF		1689714	0					
ANR	1689926	ArgumentList	! inst		1689714	1					
ANR	1689927	Argument	! inst		1689714	0					
ANR	1689928	UnaryOperationExpression	! inst		1689714	0					
ANR	1689929	UnaryOperator	!		1689714	0					
ANR	1689930	Identifier	inst		1689714	1					
ANR	1689931	ExpressionStatement	* inst = MOV_rm_r	1053:2:28956:28972	1689714	2	True				
ANR	1689932	AssignmentExpression	* inst = MOV_rm_r		1689714	0		=			
ANR	1689933	UnaryOperationExpression	* inst		1689714	0					
ANR	1689934	UnaryOperator	*		1689714	0					
ANR	1689935	Identifier	inst		1689714	1					
ANR	1689936	Identifier	MOV_rm_r		1689714	1					
ANR	1689937	ReturnStatement	return SLJIT_SUCCESS ;	1056:1:28979:28999	1689714	8	True				
ANR	1689938	Identifier	SLJIT_SUCCESS		1689714	0					
ANR	1689939	ReturnType	static sljit_si		1689714	1					
ANR	1689940	Identifier	emit_mov_half		1689714	2					
ANR	1689941	ParameterList	"struct sljit_compiler * compiler , sljit_si sign , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1689714	3					
ANR	1689942	Parameter	struct sljit_compiler * compiler	1008:30:27707:27737	1689714	0	True				
ANR	1689943	ParameterType	struct sljit_compiler *		1689714	0					
ANR	1689944	Identifier	compiler		1689714	1					
ANR	1689945	Parameter	sljit_si sign	1008:63:27740:27752	1689714	1	True				
ANR	1689946	ParameterType	sljit_si		1689714	0					
ANR	1689947	Identifier	sign		1689714	1					
ANR	1689948	Parameter	sljit_si dst	1009:1:27756:27767	1689714	2	True				
ANR	1689949	ParameterType	sljit_si		1689714	0					
ANR	1689950	Identifier	dst		1689714	1					
ANR	1689951	Parameter	sljit_sw dstw	1009:15:27770:27782	1689714	3	True				
ANR	1689952	ParameterType	sljit_sw		1689714	0					
ANR	1689953	Identifier	dstw		1689714	1					
ANR	1689954	Parameter	sljit_si src	1010:1:27786:27797	1689714	4	True				
ANR	1689955	ParameterType	sljit_si		1689714	0					
ANR	1689956	Identifier	src		1689714	1					
ANR	1689957	Parameter	sljit_sw srcw	1010:15:27800:27812	1689714	5	True				
ANR	1689958	ParameterType	sljit_sw		1689714	0					
ANR	1689959	Identifier	srcw		1689714	1					
ANR	1689960	CFGEntryNode	ENTRY		1689714		True				
ANR	1689961	CFGExitNode	EXIT		1689714		True				
ANR	1689962	Symbol	TMP_REG1		1689714						
ANR	1689963	Symbol	dst		1689714						
ANR	1689964	Symbol	SLJIT_MEM		1689714						
ANR	1689965	Symbol	EX86_NO_REXW		1689714						
ANR	1689966	Symbol	sign		1689714						
ANR	1689967	Symbol	* inst ++		1689714						
ANR	1689968	Symbol	reg_map		1689714						
ANR	1689969	Symbol	MOV_r_i32		1689714						
ANR	1689970	Symbol	* compiler		1689714						
ANR	1689971	Symbol	dst_r		1689714						
ANR	1689972	Symbol	* dst		1689714						
ANR	1689973	Symbol	MOV_rm_i32		1689714						
ANR	1689974	Symbol	SLJIT_IMM		1689714						
ANR	1689975	Symbol	EX86_PREF_66		1689714						
ANR	1689976	Symbol	compiler		1689714						
ANR	1689977	Symbol	MOVSX_r_rm16		1689714						
ANR	1689978	Symbol	emit_x86_instruction		1689714						
ANR	1689979	Symbol	GROUP_0F		1689714						
ANR	1689980	Symbol	FAST_IS_REG		1689714						
ANR	1689981	Symbol	* inst		1689714						
ANR	1689982	Symbol	src		1689714						
ANR	1689983	Symbol	srcw		1689714						
ANR	1689984	Symbol	SLJIT_SUCCESS		1689714						
ANR	1689985	Symbol	* reg_map		1689714						
ANR	1689986	Symbol	MOV_rm_r		1689714						
ANR	1689987	Symbol	SLJIT_UNUSED		1689714						
ANR	1689988	Symbol	EX86_HALF_ARG		1689714						
ANR	1689989	Symbol	emit_do_imm		1689714						
ANR	1689990	Symbol	MOVZX_r_rm16		1689714						
ANR	1689991	Symbol	inst		1689714						
ANR	1689992	Symbol	compiler -> mode32		1689714						
ANR	1689993	Symbol	dstw		1689714						
ANR	1689994	Function	emit_unary	1059:0:29004:30040							
ANR	1689995	FunctionDef	"emit_unary (struct sljit_compiler * compiler , sljit_ub opcode , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1689994	0					
ANR	1689996	CompoundStatement		1062:0:29141:30040	1689994	0					
ANR	1689997	IdentifierDeclStatement	sljit_ub * inst ;	1063:1:29144:29158	1689994	0	True				
ANR	1689998	IdentifierDecl	* inst		1689994	0					
ANR	1689999	IdentifierDeclType	sljit_ub *		1689994	0					
ANR	1690000	Identifier	inst		1689994	1					
ANR	1690001	IfStatement	if ( dst == SLJIT_UNUSED )		1689994	1					
ANR	1690002	Condition	dst == SLJIT_UNUSED	1065:5:29166:29184	1689994	0	True				
ANR	1690003	EqualityExpression	dst == SLJIT_UNUSED		1689994	0		==			
ANR	1690004	Identifier	dst		1689994	0					
ANR	1690005	Identifier	SLJIT_UNUSED		1689994	1					
ANR	1690006	CompoundStatement		4:26:45:45	1689994	1					
ANR	1690007	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1066:2:29191:29233	1689994	0	True				
ANR	1690008	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1689994	0					
ANR	1690009	Callee	EMIT_MOV		1689994	0					
ANR	1690010	Identifier	EMIT_MOV		1689994	0					
ANR	1690011	ArgumentList	compiler		1689994	1					
ANR	1690012	Argument	compiler		1689994	0					
ANR	1690013	Identifier	compiler		1689994	0					
ANR	1690014	Argument	TMP_REG1		1689994	1					
ANR	1690015	Identifier	TMP_REG1		1689994	0					
ANR	1690016	Argument	0		1689994	2					
ANR	1690017	PrimaryExpression	0		1689994	0					
ANR	1690018	Argument	src		1689994	3					
ANR	1690019	Identifier	src		1689994	0					
ANR	1690020	Argument	srcw		1689994	4					
ANR	1690021	Identifier	srcw		1689994	0					
ANR	1690022	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1067:2:29237:29296	1689994	1	True				
ANR	1690023	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1689994	0		=			
ANR	1690024	Identifier	inst		1689994	0					
ANR	1690025	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1689994	1					
ANR	1690026	Callee	emit_x86_instruction		1689994	0					
ANR	1690027	Identifier	emit_x86_instruction		1689994	0					
ANR	1690028	ArgumentList	compiler		1689994	1					
ANR	1690029	Argument	compiler		1689994	0					
ANR	1690030	Identifier	compiler		1689994	0					
ANR	1690031	Argument	1		1689994	1					
ANR	1690032	PrimaryExpression	1		1689994	0					
ANR	1690033	Argument	0		1689994	2					
ANR	1690034	PrimaryExpression	0		1689994	0					
ANR	1690035	Argument	0		1689994	3					
ANR	1690036	PrimaryExpression	0		1689994	0					
ANR	1690037	Argument	TMP_REG1		1689994	4					
ANR	1690038	Identifier	TMP_REG1		1689994	0					
ANR	1690039	Argument	0		1689994	5					
ANR	1690040	PrimaryExpression	0		1689994	0					
ANR	1690041	ExpressionStatement	FAIL_IF ( ! inst )	1068:2:29300:29314	1689994	2	True				
ANR	1690042	CallExpression	FAIL_IF ( ! inst )		1689994	0					
ANR	1690043	Callee	FAIL_IF		1689994	0					
ANR	1690044	Identifier	FAIL_IF		1689994	0					
ANR	1690045	ArgumentList	! inst		1689994	1					
ANR	1690046	Argument	! inst		1689994	0					
ANR	1690047	UnaryOperationExpression	! inst		1689994	0					
ANR	1690048	UnaryOperator	!		1689994	0					
ANR	1690049	Identifier	inst		1689994	1					
ANR	1690050	ExpressionStatement	* inst ++ = GROUP_F7	1069:2:29318:29336	1689994	3	True				
ANR	1690051	AssignmentExpression	* inst ++ = GROUP_F7		1689994	0		=			
ANR	1690052	UnaryOperationExpression	* inst ++		1689994	0					
ANR	1690053	UnaryOperator	*		1689994	0					
ANR	1690054	PostIncDecOperationExpression	inst ++		1689994	1					
ANR	1690055	Identifier	inst		1689994	0					
ANR	1690056	IncDec	++		1689994	1					
ANR	1690057	Identifier	GROUP_F7		1689994	1					
ANR	1690058	ExpressionStatement	* inst |= opcode	1070:2:29340:29355	1689994	4	True				
ANR	1690059	AssignmentExpression	* inst |= opcode		1689994	0		|=			
ANR	1690060	UnaryOperationExpression	* inst		1689994	0					
ANR	1690061	UnaryOperator	*		1689994	0					
ANR	1690062	Identifier	inst		1689994	1					
ANR	1690063	Identifier	opcode		1689994	1					
ANR	1690064	ReturnStatement	return SLJIT_SUCCESS ;	1071:2:29359:29379	1689994	5	True				
ANR	1690065	Identifier	SLJIT_SUCCESS		1689994	0					
ANR	1690066	IfStatement	if ( dst == src && dstw == srcw )		1689994	2					
ANR	1690067	Condition	dst == src && dstw == srcw	1073:5:29389:29414	1689994	0	True				
ANR	1690068	AndExpression	dst == src && dstw == srcw		1689994	0		&&			
ANR	1690069	EqualityExpression	dst == src		1689994	0		==			
ANR	1690070	Identifier	dst		1689994	0					
ANR	1690071	Identifier	src		1689994	1					
ANR	1690072	EqualityExpression	dstw == srcw		1689994	1		==			
ANR	1690073	Identifier	dstw		1689994	0					
ANR	1690074	Identifier	srcw		1689994	1					
ANR	1690075	CompoundStatement		12:33:275:275	1689994	1					
ANR	1690076	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"	1075:2:29451:29508	1689994	0	True				
ANR	1690077	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1689994	0		=			
ANR	1690078	Identifier	inst		1689994	0					
ANR	1690079	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1689994	1					
ANR	1690080	Callee	emit_x86_instruction		1689994	0					
ANR	1690081	Identifier	emit_x86_instruction		1689994	0					
ANR	1690082	ArgumentList	compiler		1689994	1					
ANR	1690083	Argument	compiler		1689994	0					
ANR	1690084	Identifier	compiler		1689994	0					
ANR	1690085	Argument	1		1689994	1					
ANR	1690086	PrimaryExpression	1		1689994	0					
ANR	1690087	Argument	0		1689994	2					
ANR	1690088	PrimaryExpression	0		1689994	0					
ANR	1690089	Argument	0		1689994	3					
ANR	1690090	PrimaryExpression	0		1689994	0					
ANR	1690091	Argument	dst		1689994	4					
ANR	1690092	Identifier	dst		1689994	0					
ANR	1690093	Argument	dstw		1689994	5					
ANR	1690094	Identifier	dstw		1689994	0					
ANR	1690095	ExpressionStatement	FAIL_IF ( ! inst )	1076:2:29512:29526	1689994	1	True				
ANR	1690096	CallExpression	FAIL_IF ( ! inst )		1689994	0					
ANR	1690097	Callee	FAIL_IF		1689994	0					
ANR	1690098	Identifier	FAIL_IF		1689994	0					
ANR	1690099	ArgumentList	! inst		1689994	1					
ANR	1690100	Argument	! inst		1689994	0					
ANR	1690101	UnaryOperationExpression	! inst		1689994	0					
ANR	1690102	UnaryOperator	!		1689994	0					
ANR	1690103	Identifier	inst		1689994	1					
ANR	1690104	ExpressionStatement	* inst ++ = GROUP_F7	1077:2:29530:29548	1689994	2	True				
ANR	1690105	AssignmentExpression	* inst ++ = GROUP_F7		1689994	0		=			
ANR	1690106	UnaryOperationExpression	* inst ++		1689994	0					
ANR	1690107	UnaryOperator	*		1689994	0					
ANR	1690108	PostIncDecOperationExpression	inst ++		1689994	1					
ANR	1690109	Identifier	inst		1689994	0					
ANR	1690110	IncDec	++		1689994	1					
ANR	1690111	Identifier	GROUP_F7		1689994	1					
ANR	1690112	ExpressionStatement	* inst |= opcode	1078:2:29552:29567	1689994	3	True				
ANR	1690113	AssignmentExpression	* inst |= opcode		1689994	0		|=			
ANR	1690114	UnaryOperationExpression	* inst		1689994	0					
ANR	1690115	UnaryOperator	*		1689994	0					
ANR	1690116	Identifier	inst		1689994	1					
ANR	1690117	Identifier	opcode		1689994	1					
ANR	1690118	ReturnStatement	return SLJIT_SUCCESS ;	1079:2:29571:29591	1689994	4	True				
ANR	1690119	Identifier	SLJIT_SUCCESS		1689994	0					
ANR	1690120	IfStatement	if ( FAST_IS_REG ( dst ) )		1689994	3					
ANR	1690121	Condition	FAST_IS_REG ( dst )	1081:5:29601:29616	1689994	0	True				
ANR	1690122	CallExpression	FAST_IS_REG ( dst )		1689994	0					
ANR	1690123	Callee	FAST_IS_REG		1689994	0					
ANR	1690124	Identifier	FAST_IS_REG		1689994	0					
ANR	1690125	ArgumentList	dst		1689994	1					
ANR	1690126	Argument	dst		1689994	0					
ANR	1690127	Identifier	dst		1689994	0					
ANR	1690128	CompoundStatement		20:23:477:477	1689994	1					
ANR	1690129	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"	1082:2:29623:29660	1689994	0	True				
ANR	1690130	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"		1689994	0					
ANR	1690131	Callee	EMIT_MOV		1689994	0					
ANR	1690132	Identifier	EMIT_MOV		1689994	0					
ANR	1690133	ArgumentList	compiler		1689994	1					
ANR	1690134	Argument	compiler		1689994	0					
ANR	1690135	Identifier	compiler		1689994	0					
ANR	1690136	Argument	dst		1689994	1					
ANR	1690137	Identifier	dst		1689994	0					
ANR	1690138	Argument	0		1689994	2					
ANR	1690139	PrimaryExpression	0		1689994	0					
ANR	1690140	Argument	src		1689994	3					
ANR	1690141	Identifier	src		1689994	0					
ANR	1690142	Argument	srcw		1689994	4					
ANR	1690143	Identifier	srcw		1689994	0					
ANR	1690144	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"	1083:2:29664:29721	1689994	1	True				
ANR	1690145	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1689994	0		=			
ANR	1690146	Identifier	inst		1689994	0					
ANR	1690147	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1689994	1					
ANR	1690148	Callee	emit_x86_instruction		1689994	0					
ANR	1690149	Identifier	emit_x86_instruction		1689994	0					
ANR	1690150	ArgumentList	compiler		1689994	1					
ANR	1690151	Argument	compiler		1689994	0					
ANR	1690152	Identifier	compiler		1689994	0					
ANR	1690153	Argument	1		1689994	1					
ANR	1690154	PrimaryExpression	1		1689994	0					
ANR	1690155	Argument	0		1689994	2					
ANR	1690156	PrimaryExpression	0		1689994	0					
ANR	1690157	Argument	0		1689994	3					
ANR	1690158	PrimaryExpression	0		1689994	0					
ANR	1690159	Argument	dst		1689994	4					
ANR	1690160	Identifier	dst		1689994	0					
ANR	1690161	Argument	dstw		1689994	5					
ANR	1690162	Identifier	dstw		1689994	0					
ANR	1690163	ExpressionStatement	FAIL_IF ( ! inst )	1084:2:29725:29739	1689994	2	True				
ANR	1690164	CallExpression	FAIL_IF ( ! inst )		1689994	0					
ANR	1690165	Callee	FAIL_IF		1689994	0					
ANR	1690166	Identifier	FAIL_IF		1689994	0					
ANR	1690167	ArgumentList	! inst		1689994	1					
ANR	1690168	Argument	! inst		1689994	0					
ANR	1690169	UnaryOperationExpression	! inst		1689994	0					
ANR	1690170	UnaryOperator	!		1689994	0					
ANR	1690171	Identifier	inst		1689994	1					
ANR	1690172	ExpressionStatement	* inst ++ = GROUP_F7	1085:2:29743:29761	1689994	3	True				
ANR	1690173	AssignmentExpression	* inst ++ = GROUP_F7		1689994	0		=			
ANR	1690174	UnaryOperationExpression	* inst ++		1689994	0					
ANR	1690175	UnaryOperator	*		1689994	0					
ANR	1690176	PostIncDecOperationExpression	inst ++		1689994	1					
ANR	1690177	Identifier	inst		1689994	0					
ANR	1690178	IncDec	++		1689994	1					
ANR	1690179	Identifier	GROUP_F7		1689994	1					
ANR	1690180	ExpressionStatement	* inst |= opcode	1086:2:29765:29780	1689994	4	True				
ANR	1690181	AssignmentExpression	* inst |= opcode		1689994	0		|=			
ANR	1690182	UnaryOperationExpression	* inst		1689994	0					
ANR	1690183	UnaryOperator	*		1689994	0					
ANR	1690184	Identifier	inst		1689994	1					
ANR	1690185	Identifier	opcode		1689994	1					
ANR	1690186	ReturnStatement	return SLJIT_SUCCESS ;	1087:2:29784:29804	1689994	5	True				
ANR	1690187	Identifier	SLJIT_SUCCESS		1689994	0					
ANR	1690188	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1089:1:29810:29852	1689994	4	True				
ANR	1690189	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1689994	0					
ANR	1690190	Callee	EMIT_MOV		1689994	0					
ANR	1690191	Identifier	EMIT_MOV		1689994	0					
ANR	1690192	ArgumentList	compiler		1689994	1					
ANR	1690193	Argument	compiler		1689994	0					
ANR	1690194	Identifier	compiler		1689994	0					
ANR	1690195	Argument	TMP_REG1		1689994	1					
ANR	1690196	Identifier	TMP_REG1		1689994	0					
ANR	1690197	Argument	0		1689994	2					
ANR	1690198	PrimaryExpression	0		1689994	0					
ANR	1690199	Argument	src		1689994	3					
ANR	1690200	Identifier	src		1689994	0					
ANR	1690201	Argument	srcw		1689994	4					
ANR	1690202	Identifier	srcw		1689994	0					
ANR	1690203	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1090:1:29855:29914	1689994	5	True				
ANR	1690204	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1689994	0		=			
ANR	1690205	Identifier	inst		1689994	0					
ANR	1690206	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1689994	1					
ANR	1690207	Callee	emit_x86_instruction		1689994	0					
ANR	1690208	Identifier	emit_x86_instruction		1689994	0					
ANR	1690209	ArgumentList	compiler		1689994	1					
ANR	1690210	Argument	compiler		1689994	0					
ANR	1690211	Identifier	compiler		1689994	0					
ANR	1690212	Argument	1		1689994	1					
ANR	1690213	PrimaryExpression	1		1689994	0					
ANR	1690214	Argument	0		1689994	2					
ANR	1690215	PrimaryExpression	0		1689994	0					
ANR	1690216	Argument	0		1689994	3					
ANR	1690217	PrimaryExpression	0		1689994	0					
ANR	1690218	Argument	TMP_REG1		1689994	4					
ANR	1690219	Identifier	TMP_REG1		1689994	0					
ANR	1690220	Argument	0		1689994	5					
ANR	1690221	PrimaryExpression	0		1689994	0					
ANR	1690222	ExpressionStatement	FAIL_IF ( ! inst )	1091:1:29917:29931	1689994	6	True				
ANR	1690223	CallExpression	FAIL_IF ( ! inst )		1689994	0					
ANR	1690224	Callee	FAIL_IF		1689994	0					
ANR	1690225	Identifier	FAIL_IF		1689994	0					
ANR	1690226	ArgumentList	! inst		1689994	1					
ANR	1690227	Argument	! inst		1689994	0					
ANR	1690228	UnaryOperationExpression	! inst		1689994	0					
ANR	1690229	UnaryOperator	!		1689994	0					
ANR	1690230	Identifier	inst		1689994	1					
ANR	1690231	ExpressionStatement	* inst ++ = GROUP_F7	1092:1:29934:29952	1689994	7	True				
ANR	1690232	AssignmentExpression	* inst ++ = GROUP_F7		1689994	0		=			
ANR	1690233	UnaryOperationExpression	* inst ++		1689994	0					
ANR	1690234	UnaryOperator	*		1689994	0					
ANR	1690235	PostIncDecOperationExpression	inst ++		1689994	1					
ANR	1690236	Identifier	inst		1689994	0					
ANR	1690237	IncDec	++		1689994	1					
ANR	1690238	Identifier	GROUP_F7		1689994	1					
ANR	1690239	ExpressionStatement	* inst |= opcode	1093:1:29955:29970	1689994	8	True				
ANR	1690240	AssignmentExpression	* inst |= opcode		1689994	0		|=			
ANR	1690241	UnaryOperationExpression	* inst		1689994	0					
ANR	1690242	UnaryOperator	*		1689994	0					
ANR	1690243	Identifier	inst		1689994	1					
ANR	1690244	Identifier	opcode		1689994	1					
ANR	1690245	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1094:1:29973:30015	1689994	9	True				
ANR	1690246	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1689994	0					
ANR	1690247	Callee	EMIT_MOV		1689994	0					
ANR	1690248	Identifier	EMIT_MOV		1689994	0					
ANR	1690249	ArgumentList	compiler		1689994	1					
ANR	1690250	Argument	compiler		1689994	0					
ANR	1690251	Identifier	compiler		1689994	0					
ANR	1690252	Argument	dst		1689994	1					
ANR	1690253	Identifier	dst		1689994	0					
ANR	1690254	Argument	dstw		1689994	2					
ANR	1690255	Identifier	dstw		1689994	0					
ANR	1690256	Argument	TMP_REG1		1689994	3					
ANR	1690257	Identifier	TMP_REG1		1689994	0					
ANR	1690258	Argument	0		1689994	4					
ANR	1690259	PrimaryExpression	0		1689994	0					
ANR	1690260	ReturnStatement	return SLJIT_SUCCESS ;	1095:1:30018:30038	1689994	10	True				
ANR	1690261	Identifier	SLJIT_SUCCESS		1689994	0					
ANR	1690262	ReturnType	static sljit_si		1689994	1					
ANR	1690263	Identifier	emit_unary		1689994	2					
ANR	1690264	ParameterList	"struct sljit_compiler * compiler , sljit_ub opcode , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1689994	3					
ANR	1690265	Parameter	struct sljit_compiler * compiler	1059:27:29031:29061	1689994	0	True				
ANR	1690266	ParameterType	struct sljit_compiler *		1689994	0					
ANR	1690267	Identifier	compiler		1689994	1					
ANR	1690268	Parameter	sljit_ub opcode	1059:60:29064:29078	1689994	1	True				
ANR	1690269	ParameterType	sljit_ub		1689994	0					
ANR	1690270	Identifier	opcode		1689994	1					
ANR	1690271	Parameter	sljit_si dst	1060:1:29082:29093	1689994	2	True				
ANR	1690272	ParameterType	sljit_si		1689994	0					
ANR	1690273	Identifier	dst		1689994	1					
ANR	1690274	Parameter	sljit_sw dstw	1060:15:29096:29108	1689994	3	True				
ANR	1690275	ParameterType	sljit_sw		1689994	0					
ANR	1690276	Identifier	dstw		1689994	1					
ANR	1690277	Parameter	sljit_si src	1061:1:29112:29123	1689994	4	True				
ANR	1690278	ParameterType	sljit_si		1689994	0					
ANR	1690279	Identifier	src		1689994	1					
ANR	1690280	Parameter	sljit_sw srcw	1061:15:29126:29138	1689994	5	True				
ANR	1690281	ParameterType	sljit_sw		1689994	0					
ANR	1690282	Identifier	srcw		1689994	1					
ANR	1690283	CFGEntryNode	ENTRY		1689994		True				
ANR	1690284	CFGExitNode	EXIT		1689994		True				
ANR	1690285	Symbol	TMP_REG1		1689994						
ANR	1690286	Symbol	emit_x86_instruction		1689994						
ANR	1690287	Symbol	* inst		1689994						
ANR	1690288	Symbol	FAST_IS_REG		1689994						
ANR	1690289	Symbol	dst		1689994						
ANR	1690290	Symbol	src		1689994						
ANR	1690291	Symbol	GROUP_F7		1689994						
ANR	1690292	Symbol	srcw		1689994						
ANR	1690293	Symbol	* inst ++		1689994						
ANR	1690294	Symbol	SLJIT_SUCCESS		1689994						
ANR	1690295	Symbol	opcode		1689994						
ANR	1690296	Symbol	SLJIT_UNUSED		1689994						
ANR	1690297	Symbol	inst		1689994						
ANR	1690298	Symbol	compiler		1689994						
ANR	1690299	Symbol	dstw		1689994						
ANR	1690300	Function	emit_not_with_flags	1098:0:30043:31167							
ANR	1690301	FunctionDef	"emit_not_with_flags (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1690300	0					
ANR	1690302	CompoundStatement		1101:0:30172:31167	1690300	0					
ANR	1690303	IdentifierDeclStatement	sljit_ub * inst ;	1102:1:30175:30189	1690300	0	True				
ANR	1690304	IdentifierDecl	* inst		1690300	0					
ANR	1690305	IdentifierDeclType	sljit_ub *		1690300	0					
ANR	1690306	Identifier	inst		1690300	1					
ANR	1690307	IfStatement	if ( dst == SLJIT_UNUSED )		1690300	1					
ANR	1690308	Condition	dst == SLJIT_UNUSED	1104:5:30197:30215	1690300	0	True				
ANR	1690309	EqualityExpression	dst == SLJIT_UNUSED		1690300	0		==			
ANR	1690310	Identifier	dst		1690300	0					
ANR	1690311	Identifier	SLJIT_UNUSED		1690300	1					
ANR	1690312	CompoundStatement		4:26:45:45	1690300	1					
ANR	1690313	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1105:2:30222:30264	1690300	0	True				
ANR	1690314	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1690300	0					
ANR	1690315	Callee	EMIT_MOV		1690300	0					
ANR	1690316	Identifier	EMIT_MOV		1690300	0					
ANR	1690317	ArgumentList	compiler		1690300	1					
ANR	1690318	Argument	compiler		1690300	0					
ANR	1690319	Identifier	compiler		1690300	0					
ANR	1690320	Argument	TMP_REG1		1690300	1					
ANR	1690321	Identifier	TMP_REG1		1690300	0					
ANR	1690322	Argument	0		1690300	2					
ANR	1690323	PrimaryExpression	0		1690300	0					
ANR	1690324	Argument	src		1690300	3					
ANR	1690325	Identifier	src		1690300	0					
ANR	1690326	Argument	srcw		1690300	4					
ANR	1690327	Identifier	srcw		1690300	0					
ANR	1690328	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1106:2:30268:30327	1690300	1	True				
ANR	1690329	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1690300	0		=			
ANR	1690330	Identifier	inst		1690300	0					
ANR	1690331	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1690300	1					
ANR	1690332	Callee	emit_x86_instruction		1690300	0					
ANR	1690333	Identifier	emit_x86_instruction		1690300	0					
ANR	1690334	ArgumentList	compiler		1690300	1					
ANR	1690335	Argument	compiler		1690300	0					
ANR	1690336	Identifier	compiler		1690300	0					
ANR	1690337	Argument	1		1690300	1					
ANR	1690338	PrimaryExpression	1		1690300	0					
ANR	1690339	Argument	0		1690300	2					
ANR	1690340	PrimaryExpression	0		1690300	0					
ANR	1690341	Argument	0		1690300	3					
ANR	1690342	PrimaryExpression	0		1690300	0					
ANR	1690343	Argument	TMP_REG1		1690300	4					
ANR	1690344	Identifier	TMP_REG1		1690300	0					
ANR	1690345	Argument	0		1690300	5					
ANR	1690346	PrimaryExpression	0		1690300	0					
ANR	1690347	ExpressionStatement	FAIL_IF ( ! inst )	1107:2:30331:30345	1690300	2	True				
ANR	1690348	CallExpression	FAIL_IF ( ! inst )		1690300	0					
ANR	1690349	Callee	FAIL_IF		1690300	0					
ANR	1690350	Identifier	FAIL_IF		1690300	0					
ANR	1690351	ArgumentList	! inst		1690300	1					
ANR	1690352	Argument	! inst		1690300	0					
ANR	1690353	UnaryOperationExpression	! inst		1690300	0					
ANR	1690354	UnaryOperator	!		1690300	0					
ANR	1690355	Identifier	inst		1690300	1					
ANR	1690356	ExpressionStatement	* inst ++ = GROUP_F7	1108:2:30349:30367	1690300	3	True				
ANR	1690357	AssignmentExpression	* inst ++ = GROUP_F7		1690300	0		=			
ANR	1690358	UnaryOperationExpression	* inst ++		1690300	0					
ANR	1690359	UnaryOperator	*		1690300	0					
ANR	1690360	PostIncDecOperationExpression	inst ++		1690300	1					
ANR	1690361	Identifier	inst		1690300	0					
ANR	1690362	IncDec	++		1690300	1					
ANR	1690363	Identifier	GROUP_F7		1690300	1					
ANR	1690364	ExpressionStatement	* inst |= NOT_rm	1109:2:30371:30386	1690300	4	True				
ANR	1690365	AssignmentExpression	* inst |= NOT_rm		1690300	0		|=			
ANR	1690366	UnaryOperationExpression	* inst		1690300	0					
ANR	1690367	UnaryOperator	*		1690300	0					
ANR	1690368	Identifier	inst		1690300	1					
ANR	1690369	Identifier	NOT_rm		1690300	1					
ANR	1690370	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"	1110:2:30390:30456	1690300	5	True				
ANR	1690371	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1690300	0		=			
ANR	1690372	Identifier	inst		1690300	0					
ANR	1690373	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1690300	1					
ANR	1690374	Callee	emit_x86_instruction		1690300	0					
ANR	1690375	Identifier	emit_x86_instruction		1690300	0					
ANR	1690376	ArgumentList	compiler		1690300	1					
ANR	1690377	Argument	compiler		1690300	0					
ANR	1690378	Identifier	compiler		1690300	0					
ANR	1690379	Argument	1		1690300	1					
ANR	1690380	PrimaryExpression	1		1690300	0					
ANR	1690381	Argument	TMP_REG1		1690300	2					
ANR	1690382	Identifier	TMP_REG1		1690300	0					
ANR	1690383	Argument	0		1690300	3					
ANR	1690384	PrimaryExpression	0		1690300	0					
ANR	1690385	Argument	TMP_REG1		1690300	4					
ANR	1690386	Identifier	TMP_REG1		1690300	0					
ANR	1690387	Argument	0		1690300	5					
ANR	1690388	PrimaryExpression	0		1690300	0					
ANR	1690389	ExpressionStatement	FAIL_IF ( ! inst )	1111:2:30460:30474	1690300	6	True				
ANR	1690390	CallExpression	FAIL_IF ( ! inst )		1690300	0					
ANR	1690391	Callee	FAIL_IF		1690300	0					
ANR	1690392	Identifier	FAIL_IF		1690300	0					
ANR	1690393	ArgumentList	! inst		1690300	1					
ANR	1690394	Argument	! inst		1690300	0					
ANR	1690395	UnaryOperationExpression	! inst		1690300	0					
ANR	1690396	UnaryOperator	!		1690300	0					
ANR	1690397	Identifier	inst		1690300	1					
ANR	1690398	ExpressionStatement	* inst = OR_r_rm	1112:2:30478:30493	1690300	7	True				
ANR	1690399	AssignmentExpression	* inst = OR_r_rm		1690300	0		=			
ANR	1690400	UnaryOperationExpression	* inst		1690300	0					
ANR	1690401	UnaryOperator	*		1690300	0					
ANR	1690402	Identifier	inst		1690300	1					
ANR	1690403	Identifier	OR_r_rm		1690300	1					
ANR	1690404	ReturnStatement	return SLJIT_SUCCESS ;	1113:2:30497:30517	1690300	8	True				
ANR	1690405	Identifier	SLJIT_SUCCESS		1690300	0					
ANR	1690406	IfStatement	if ( FAST_IS_REG ( dst ) )		1690300	2					
ANR	1690407	Condition	FAST_IS_REG ( dst )	1115:5:30527:30542	1690300	0	True				
ANR	1690408	CallExpression	FAST_IS_REG ( dst )		1690300	0					
ANR	1690409	Callee	FAST_IS_REG		1690300	0					
ANR	1690410	Identifier	FAST_IS_REG		1690300	0					
ANR	1690411	ArgumentList	dst		1690300	1					
ANR	1690412	Argument	dst		1690300	0					
ANR	1690413	Identifier	dst		1690300	0					
ANR	1690414	CompoundStatement		15:23:372:372	1690300	1					
ANR	1690415	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"	1116:2:30549:30586	1690300	0	True				
ANR	1690416	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src , srcw )"		1690300	0					
ANR	1690417	Callee	EMIT_MOV		1690300	0					
ANR	1690418	Identifier	EMIT_MOV		1690300	0					
ANR	1690419	ArgumentList	compiler		1690300	1					
ANR	1690420	Argument	compiler		1690300	0					
ANR	1690421	Identifier	compiler		1690300	0					
ANR	1690422	Argument	dst		1690300	1					
ANR	1690423	Identifier	dst		1690300	0					
ANR	1690424	Argument	0		1690300	2					
ANR	1690425	PrimaryExpression	0		1690300	0					
ANR	1690426	Argument	src		1690300	3					
ANR	1690427	Identifier	src		1690300	0					
ANR	1690428	Argument	srcw		1690300	4					
ANR	1690429	Identifier	srcw		1690300	0					
ANR	1690430	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"	1117:2:30590:30647	1690300	1	True				
ANR	1690431	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1690300	0		=			
ANR	1690432	Identifier	inst		1690300	0					
ANR	1690433	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , dst , dstw )"		1690300	1					
ANR	1690434	Callee	emit_x86_instruction		1690300	0					
ANR	1690435	Identifier	emit_x86_instruction		1690300	0					
ANR	1690436	ArgumentList	compiler		1690300	1					
ANR	1690437	Argument	compiler		1690300	0					
ANR	1690438	Identifier	compiler		1690300	0					
ANR	1690439	Argument	1		1690300	1					
ANR	1690440	PrimaryExpression	1		1690300	0					
ANR	1690441	Argument	0		1690300	2					
ANR	1690442	PrimaryExpression	0		1690300	0					
ANR	1690443	Argument	0		1690300	3					
ANR	1690444	PrimaryExpression	0		1690300	0					
ANR	1690445	Argument	dst		1690300	4					
ANR	1690446	Identifier	dst		1690300	0					
ANR	1690447	Argument	dstw		1690300	5					
ANR	1690448	Identifier	dstw		1690300	0					
ANR	1690449	ExpressionStatement	FAIL_IF ( ! inst )	1118:2:30651:30665	1690300	2	True				
ANR	1690450	CallExpression	FAIL_IF ( ! inst )		1690300	0					
ANR	1690451	Callee	FAIL_IF		1690300	0					
ANR	1690452	Identifier	FAIL_IF		1690300	0					
ANR	1690453	ArgumentList	! inst		1690300	1					
ANR	1690454	Argument	! inst		1690300	0					
ANR	1690455	UnaryOperationExpression	! inst		1690300	0					
ANR	1690456	UnaryOperator	!		1690300	0					
ANR	1690457	Identifier	inst		1690300	1					
ANR	1690458	ExpressionStatement	* inst ++ = GROUP_F7	1119:2:30669:30687	1690300	3	True				
ANR	1690459	AssignmentExpression	* inst ++ = GROUP_F7		1690300	0		=			
ANR	1690460	UnaryOperationExpression	* inst ++		1690300	0					
ANR	1690461	UnaryOperator	*		1690300	0					
ANR	1690462	PostIncDecOperationExpression	inst ++		1690300	1					
ANR	1690463	Identifier	inst		1690300	0					
ANR	1690464	IncDec	++		1690300	1					
ANR	1690465	Identifier	GROUP_F7		1690300	1					
ANR	1690466	ExpressionStatement	* inst |= NOT_rm	1120:2:30691:30706	1690300	4	True				
ANR	1690467	AssignmentExpression	* inst |= NOT_rm		1690300	0		|=			
ANR	1690468	UnaryOperationExpression	* inst		1690300	0					
ANR	1690469	UnaryOperator	*		1690300	0					
ANR	1690470	Identifier	inst		1690300	1					
ANR	1690471	Identifier	NOT_rm		1690300	1					
ANR	1690472	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , dst , 0 )"	1121:2:30710:30766	1690300	5	True				
ANR	1690473	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , dst , 0 )"		1690300	0		=			
ANR	1690474	Identifier	inst		1690300	0					
ANR	1690475	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , dst , 0 )"		1690300	1					
ANR	1690476	Callee	emit_x86_instruction		1690300	0					
ANR	1690477	Identifier	emit_x86_instruction		1690300	0					
ANR	1690478	ArgumentList	compiler		1690300	1					
ANR	1690479	Argument	compiler		1690300	0					
ANR	1690480	Identifier	compiler		1690300	0					
ANR	1690481	Argument	1		1690300	1					
ANR	1690482	PrimaryExpression	1		1690300	0					
ANR	1690483	Argument	dst		1690300	2					
ANR	1690484	Identifier	dst		1690300	0					
ANR	1690485	Argument	0		1690300	3					
ANR	1690486	PrimaryExpression	0		1690300	0					
ANR	1690487	Argument	dst		1690300	4					
ANR	1690488	Identifier	dst		1690300	0					
ANR	1690489	Argument	0		1690300	5					
ANR	1690490	PrimaryExpression	0		1690300	0					
ANR	1690491	ExpressionStatement	FAIL_IF ( ! inst )	1122:2:30770:30784	1690300	6	True				
ANR	1690492	CallExpression	FAIL_IF ( ! inst )		1690300	0					
ANR	1690493	Callee	FAIL_IF		1690300	0					
ANR	1690494	Identifier	FAIL_IF		1690300	0					
ANR	1690495	ArgumentList	! inst		1690300	1					
ANR	1690496	Argument	! inst		1690300	0					
ANR	1690497	UnaryOperationExpression	! inst		1690300	0					
ANR	1690498	UnaryOperator	!		1690300	0					
ANR	1690499	Identifier	inst		1690300	1					
ANR	1690500	ExpressionStatement	* inst = OR_r_rm	1123:2:30788:30803	1690300	7	True				
ANR	1690501	AssignmentExpression	* inst = OR_r_rm		1690300	0		=			
ANR	1690502	UnaryOperationExpression	* inst		1690300	0					
ANR	1690503	UnaryOperator	*		1690300	0					
ANR	1690504	Identifier	inst		1690300	1					
ANR	1690505	Identifier	OR_r_rm		1690300	1					
ANR	1690506	ReturnStatement	return SLJIT_SUCCESS ;	1124:2:30807:30827	1690300	8	True				
ANR	1690507	Identifier	SLJIT_SUCCESS		1690300	0					
ANR	1690508	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1126:1:30833:30875	1690300	3	True				
ANR	1690509	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1690300	0					
ANR	1690510	Callee	EMIT_MOV		1690300	0					
ANR	1690511	Identifier	EMIT_MOV		1690300	0					
ANR	1690512	ArgumentList	compiler		1690300	1					
ANR	1690513	Argument	compiler		1690300	0					
ANR	1690514	Identifier	compiler		1690300	0					
ANR	1690515	Argument	TMP_REG1		1690300	1					
ANR	1690516	Identifier	TMP_REG1		1690300	0					
ANR	1690517	Argument	0		1690300	2					
ANR	1690518	PrimaryExpression	0		1690300	0					
ANR	1690519	Argument	src		1690300	3					
ANR	1690520	Identifier	src		1690300	0					
ANR	1690521	Argument	srcw		1690300	4					
ANR	1690522	Identifier	srcw		1690300	0					
ANR	1690523	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1127:1:30878:30937	1690300	4	True				
ANR	1690524	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1690300	0		=			
ANR	1690525	Identifier	inst		1690300	0					
ANR	1690526	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1690300	1					
ANR	1690527	Callee	emit_x86_instruction		1690300	0					
ANR	1690528	Identifier	emit_x86_instruction		1690300	0					
ANR	1690529	ArgumentList	compiler		1690300	1					
ANR	1690530	Argument	compiler		1690300	0					
ANR	1690531	Identifier	compiler		1690300	0					
ANR	1690532	Argument	1		1690300	1					
ANR	1690533	PrimaryExpression	1		1690300	0					
ANR	1690534	Argument	0		1690300	2					
ANR	1690535	PrimaryExpression	0		1690300	0					
ANR	1690536	Argument	0		1690300	3					
ANR	1690537	PrimaryExpression	0		1690300	0					
ANR	1690538	Argument	TMP_REG1		1690300	4					
ANR	1690539	Identifier	TMP_REG1		1690300	0					
ANR	1690540	Argument	0		1690300	5					
ANR	1690541	PrimaryExpression	0		1690300	0					
ANR	1690542	ExpressionStatement	FAIL_IF ( ! inst )	1128:1:30940:30954	1690300	5	True				
ANR	1690543	CallExpression	FAIL_IF ( ! inst )		1690300	0					
ANR	1690544	Callee	FAIL_IF		1690300	0					
ANR	1690545	Identifier	FAIL_IF		1690300	0					
ANR	1690546	ArgumentList	! inst		1690300	1					
ANR	1690547	Argument	! inst		1690300	0					
ANR	1690548	UnaryOperationExpression	! inst		1690300	0					
ANR	1690549	UnaryOperator	!		1690300	0					
ANR	1690550	Identifier	inst		1690300	1					
ANR	1690551	ExpressionStatement	* inst ++ = GROUP_F7	1129:1:30957:30975	1690300	6	True				
ANR	1690552	AssignmentExpression	* inst ++ = GROUP_F7		1690300	0		=			
ANR	1690553	UnaryOperationExpression	* inst ++		1690300	0					
ANR	1690554	UnaryOperator	*		1690300	0					
ANR	1690555	PostIncDecOperationExpression	inst ++		1690300	1					
ANR	1690556	Identifier	inst		1690300	0					
ANR	1690557	IncDec	++		1690300	1					
ANR	1690558	Identifier	GROUP_F7		1690300	1					
ANR	1690559	ExpressionStatement	* inst |= NOT_rm	1130:1:30978:30993	1690300	7	True				
ANR	1690560	AssignmentExpression	* inst |= NOT_rm		1690300	0		|=			
ANR	1690561	UnaryOperationExpression	* inst		1690300	0					
ANR	1690562	UnaryOperator	*		1690300	0					
ANR	1690563	Identifier	inst		1690300	1					
ANR	1690564	Identifier	NOT_rm		1690300	1					
ANR	1690565	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"	1131:1:30996:31062	1690300	8	True				
ANR	1690566	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1690300	0		=			
ANR	1690567	Identifier	inst		1690300	0					
ANR	1690568	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , TMP_REG1 , 0 )"		1690300	1					
ANR	1690569	Callee	emit_x86_instruction		1690300	0					
ANR	1690570	Identifier	emit_x86_instruction		1690300	0					
ANR	1690571	ArgumentList	compiler		1690300	1					
ANR	1690572	Argument	compiler		1690300	0					
ANR	1690573	Identifier	compiler		1690300	0					
ANR	1690574	Argument	1		1690300	1					
ANR	1690575	PrimaryExpression	1		1690300	0					
ANR	1690576	Argument	TMP_REG1		1690300	2					
ANR	1690577	Identifier	TMP_REG1		1690300	0					
ANR	1690578	Argument	0		1690300	3					
ANR	1690579	PrimaryExpression	0		1690300	0					
ANR	1690580	Argument	TMP_REG1		1690300	4					
ANR	1690581	Identifier	TMP_REG1		1690300	0					
ANR	1690582	Argument	0		1690300	5					
ANR	1690583	PrimaryExpression	0		1690300	0					
ANR	1690584	ExpressionStatement	FAIL_IF ( ! inst )	1132:1:31065:31079	1690300	9	True				
ANR	1690585	CallExpression	FAIL_IF ( ! inst )		1690300	0					
ANR	1690586	Callee	FAIL_IF		1690300	0					
ANR	1690587	Identifier	FAIL_IF		1690300	0					
ANR	1690588	ArgumentList	! inst		1690300	1					
ANR	1690589	Argument	! inst		1690300	0					
ANR	1690590	UnaryOperationExpression	! inst		1690300	0					
ANR	1690591	UnaryOperator	!		1690300	0					
ANR	1690592	Identifier	inst		1690300	1					
ANR	1690593	ExpressionStatement	* inst = OR_r_rm	1133:1:31082:31097	1690300	10	True				
ANR	1690594	AssignmentExpression	* inst = OR_r_rm		1690300	0		=			
ANR	1690595	UnaryOperationExpression	* inst		1690300	0					
ANR	1690596	UnaryOperator	*		1690300	0					
ANR	1690597	Identifier	inst		1690300	1					
ANR	1690598	Identifier	OR_r_rm		1690300	1					
ANR	1690599	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1134:1:31100:31142	1690300	11	True				
ANR	1690600	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1690300	0					
ANR	1690601	Callee	EMIT_MOV		1690300	0					
ANR	1690602	Identifier	EMIT_MOV		1690300	0					
ANR	1690603	ArgumentList	compiler		1690300	1					
ANR	1690604	Argument	compiler		1690300	0					
ANR	1690605	Identifier	compiler		1690300	0					
ANR	1690606	Argument	dst		1690300	1					
ANR	1690607	Identifier	dst		1690300	0					
ANR	1690608	Argument	dstw		1690300	2					
ANR	1690609	Identifier	dstw		1690300	0					
ANR	1690610	Argument	TMP_REG1		1690300	3					
ANR	1690611	Identifier	TMP_REG1		1690300	0					
ANR	1690612	Argument	0		1690300	4					
ANR	1690613	PrimaryExpression	0		1690300	0					
ANR	1690614	ReturnStatement	return SLJIT_SUCCESS ;	1135:1:31145:31165	1690300	12	True				
ANR	1690615	Identifier	SLJIT_SUCCESS		1690300	0					
ANR	1690616	ReturnType	static sljit_si		1690300	1					
ANR	1690617	Identifier	emit_not_with_flags		1690300	2					
ANR	1690618	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1690300	3					
ANR	1690619	Parameter	struct sljit_compiler * compiler	1098:36:30079:30109	1690300	0	True				
ANR	1690620	ParameterType	struct sljit_compiler *		1690300	0					
ANR	1690621	Identifier	compiler		1690300	1					
ANR	1690622	Parameter	sljit_si dst	1099:1:30113:30124	1690300	1	True				
ANR	1690623	ParameterType	sljit_si		1690300	0					
ANR	1690624	Identifier	dst		1690300	1					
ANR	1690625	Parameter	sljit_sw dstw	1099:15:30127:30139	1690300	2	True				
ANR	1690626	ParameterType	sljit_sw		1690300	0					
ANR	1690627	Identifier	dstw		1690300	1					
ANR	1690628	Parameter	sljit_si src	1100:1:30143:30154	1690300	3	True				
ANR	1690629	ParameterType	sljit_si		1690300	0					
ANR	1690630	Identifier	src		1690300	1					
ANR	1690631	Parameter	sljit_sw srcw	1100:15:30157:30169	1690300	4	True				
ANR	1690632	ParameterType	sljit_sw		1690300	0					
ANR	1690633	Identifier	srcw		1690300	1					
ANR	1690634	CFGEntryNode	ENTRY		1690300		True				
ANR	1690635	CFGExitNode	EXIT		1690300		True				
ANR	1690636	Symbol	TMP_REG1		1690300						
ANR	1690637	Symbol	emit_x86_instruction		1690300						
ANR	1690638	Symbol	* inst		1690300						
ANR	1690639	Symbol	FAST_IS_REG		1690300						
ANR	1690640	Symbol	dst		1690300						
ANR	1690641	Symbol	src		1690300						
ANR	1690642	Symbol	GROUP_F7		1690300						
ANR	1690643	Symbol	srcw		1690300						
ANR	1690644	Symbol	* inst ++		1690300						
ANR	1690645	Symbol	SLJIT_SUCCESS		1690300						
ANR	1690646	Symbol	OR_r_rm		1690300						
ANR	1690647	Symbol	SLJIT_UNUSED		1690300						
ANR	1690648	Symbol	inst		1690300						
ANR	1690649	Symbol	compiler		1690300						
ANR	1690650	Symbol	dstw		1690300						
ANR	1690651	Symbol	NOT_rm		1690300						
ANR	1690652	Function	emit_clz	1138:0:31170:34306							
ANR	1690653	FunctionDef	"emit_clz (struct sljit_compiler * compiler , sljit_si op_flags , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1690652	0					
ANR	1690654	CompoundStatement		1141:0:31307:34306	1690652	0					
ANR	1690655	IdentifierDeclStatement	sljit_ub * inst ;	1142:1:31310:31324	1690652	0	True				
ANR	1690656	IdentifierDecl	* inst		1690652	0					
ANR	1690657	IdentifierDeclType	sljit_ub *		1690652	0					
ANR	1690658	Identifier	inst		1690652	1					
ANR	1690659	IdentifierDeclStatement	sljit_si dst_r ;	1143:1:31327:31341	1690652	1	True				
ANR	1690660	IdentifierDecl	dst_r		1690652	0					
ANR	1690661	IdentifierDeclType	sljit_si		1690652	0					
ANR	1690662	Identifier	dst_r		1690652	1					
ANR	1690663	ExpressionStatement	SLJIT_UNUSED_ARG ( op_flags )	1145:1:31345:31371	1690652	2	True				
ANR	1690664	CallExpression	SLJIT_UNUSED_ARG ( op_flags )		1690652	0					
ANR	1690665	Callee	SLJIT_UNUSED_ARG		1690652	0					
ANR	1690666	Identifier	SLJIT_UNUSED_ARG		1690652	0					
ANR	1690667	ArgumentList	op_flags		1690652	1					
ANR	1690668	Argument	op_flags		1690652	0					
ANR	1690669	Identifier	op_flags		1690652	0					
ANR	1690670	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1690652	3					
ANR	1690671	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	1146:5:31378:31412	1690652	0	True				
ANR	1690672	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1690652	0					
ANR	1690673	Callee	SLJIT_UNLIKELY		1690652	0					
ANR	1690674	Identifier	SLJIT_UNLIKELY		1690652	0					
ANR	1690675	ArgumentList	dst == SLJIT_UNUSED		1690652	1					
ANR	1690676	Argument	dst == SLJIT_UNUSED		1690652	0					
ANR	1690677	EqualityExpression	dst == SLJIT_UNUSED		1690652	0		==			
ANR	1690678	Identifier	dst		1690652	0					
ANR	1690679	Identifier	SLJIT_UNUSED		1690652	1					
ANR	1690680	CompoundStatement		6:42:107:107	1690652	1					
ANR	1690681	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	1148:2:31451:31493	1690652	0	True				
ANR	1690682	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1690652	0					
ANR	1690683	Callee	EMIT_MOV		1690652	0					
ANR	1690684	Identifier	EMIT_MOV		1690652	0					
ANR	1690685	ArgumentList	compiler		1690652	1					
ANR	1690686	Argument	compiler		1690652	0					
ANR	1690687	Identifier	compiler		1690652	0					
ANR	1690688	Argument	TMP_REG1		1690652	1					
ANR	1690689	Identifier	TMP_REG1		1690652	0					
ANR	1690690	Argument	0		1690652	2					
ANR	1690691	PrimaryExpression	0		1690652	0					
ANR	1690692	Argument	src		1690652	3					
ANR	1690693	Identifier	src		1690652	0					
ANR	1690694	Argument	srcw		1690652	4					
ANR	1690695	Identifier	srcw		1690652	0					
ANR	1690696	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"	1149:2:31497:31556	1690652	1	True				
ANR	1690697	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1690652	0		=			
ANR	1690698	Identifier	inst		1690652	0					
ANR	1690699	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , TMP_REG1 , 0 )"		1690652	1					
ANR	1690700	Callee	emit_x86_instruction		1690652	0					
ANR	1690701	Identifier	emit_x86_instruction		1690652	0					
ANR	1690702	ArgumentList	compiler		1690652	1					
ANR	1690703	Argument	compiler		1690652	0					
ANR	1690704	Identifier	compiler		1690652	0					
ANR	1690705	Argument	1		1690652	1					
ANR	1690706	PrimaryExpression	1		1690652	0					
ANR	1690707	Argument	0		1690652	2					
ANR	1690708	PrimaryExpression	0		1690652	0					
ANR	1690709	Argument	0		1690652	3					
ANR	1690710	PrimaryExpression	0		1690652	0					
ANR	1690711	Argument	TMP_REG1		1690652	4					
ANR	1690712	Identifier	TMP_REG1		1690652	0					
ANR	1690713	Argument	0		1690652	5					
ANR	1690714	PrimaryExpression	0		1690652	0					
ANR	1690715	ExpressionStatement	FAIL_IF ( ! inst )	1150:2:31560:31574	1690652	2	True				
ANR	1690716	CallExpression	FAIL_IF ( ! inst )		1690652	0					
ANR	1690717	Callee	FAIL_IF		1690652	0					
ANR	1690718	Identifier	FAIL_IF		1690652	0					
ANR	1690719	ArgumentList	! inst		1690652	1					
ANR	1690720	Argument	! inst		1690652	0					
ANR	1690721	UnaryOperationExpression	! inst		1690652	0					
ANR	1690722	UnaryOperator	!		1690652	0					
ANR	1690723	Identifier	inst		1690652	1					
ANR	1690724	ExpressionStatement	* inst ++ = GROUP_F7	1151:2:31578:31596	1690652	3	True				
ANR	1690725	AssignmentExpression	* inst ++ = GROUP_F7		1690652	0		=			
ANR	1690726	UnaryOperationExpression	* inst ++		1690652	0					
ANR	1690727	UnaryOperator	*		1690652	0					
ANR	1690728	PostIncDecOperationExpression	inst ++		1690652	1					
ANR	1690729	Identifier	inst		1690652	0					
ANR	1690730	IncDec	++		1690652	1					
ANR	1690731	Identifier	GROUP_F7		1690652	1					
ANR	1690732	ExpressionStatement	* inst |= NOT_rm	1152:2:31600:31615	1690652	4	True				
ANR	1690733	AssignmentExpression	* inst |= NOT_rm		1690652	0		|=			
ANR	1690734	UnaryOperationExpression	* inst		1690652	0					
ANR	1690735	UnaryOperator	*		1690652	0					
ANR	1690736	Identifier	inst		1690652	1					
ANR	1690737	Identifier	NOT_rm		1690652	1					
ANR	1690738	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 31 , TMP_REG1 , 0 )"	1154:2:31676:31761	1690652	5	True				
ANR	1690739	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 31 , TMP_REG1 , 0 )"		1690652	0		=			
ANR	1690740	Identifier	inst		1690652	0					
ANR	1690741	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_IMM , 31 , TMP_REG1 , 0 )"		1690652	1					
ANR	1690742	Callee	emit_x86_instruction		1690652	0					
ANR	1690743	Identifier	emit_x86_instruction		1690652	0					
ANR	1690744	ArgumentList	compiler		1690652	1					
ANR	1690745	Argument	compiler		1690652	0					
ANR	1690746	Identifier	compiler		1690652	0					
ANR	1690747	Argument	1 | EX86_SHIFT_INS		1690652	1					
ANR	1690748	InclusiveOrExpression	1 | EX86_SHIFT_INS		1690652	0		|			
ANR	1690749	PrimaryExpression	1		1690652	0					
ANR	1690750	Identifier	EX86_SHIFT_INS		1690652	1					
ANR	1690751	Argument	SLJIT_IMM		1690652	2					
ANR	1690752	Identifier	SLJIT_IMM		1690652	0					
ANR	1690753	Argument	31		1690652	3					
ANR	1690754	PrimaryExpression	31		1690652	0					
ANR	1690755	Argument	TMP_REG1		1690652	4					
ANR	1690756	Identifier	TMP_REG1		1690652	0					
ANR	1690757	Argument	0		1690652	5					
ANR	1690758	PrimaryExpression	0		1690652	0					
ANR	1690759	ExpressionStatement	FAIL_IF ( ! inst )	1158:2:31901:31915	1690652	6	True				
ANR	1690760	CallExpression	FAIL_IF ( ! inst )		1690652	0					
ANR	1690761	Callee	FAIL_IF		1690652	0					
ANR	1690762	Identifier	FAIL_IF		1690652	0					
ANR	1690763	ArgumentList	! inst		1690652	1					
ANR	1690764	Argument	! inst		1690652	0					
ANR	1690765	UnaryOperationExpression	! inst		1690652	0					
ANR	1690766	UnaryOperator	!		1690652	0					
ANR	1690767	Identifier	inst		1690652	1					
ANR	1690768	ExpressionStatement	* inst |= SHR	1159:2:31919:31931	1690652	7	True				
ANR	1690769	AssignmentExpression	* inst |= SHR		1690652	0		|=			
ANR	1690770	UnaryOperationExpression	* inst		1690652	0					
ANR	1690771	UnaryOperator	*		1690652	0					
ANR	1690772	Identifier	inst		1690652	1					
ANR	1690773	Identifier	SHR		1690652	1					
ANR	1690774	ReturnStatement	return SLJIT_SUCCESS ;	1160:2:31935:31955	1690652	8	True				
ANR	1690775	Identifier	SLJIT_SUCCESS		1690652	0					
ANR	1690776	IfStatement	if ( SLJIT_UNLIKELY ( src & SLJIT_IMM ) )		1690652	4					
ANR	1690777	Condition	SLJIT_UNLIKELY ( src & SLJIT_IMM )	1163:5:31966:31996	1690652	0	True				
ANR	1690778	CallExpression	SLJIT_UNLIKELY ( src & SLJIT_IMM )		1690652	0					
ANR	1690779	Callee	SLJIT_UNLIKELY		1690652	0					
ANR	1690780	Identifier	SLJIT_UNLIKELY		1690652	0					
ANR	1690781	ArgumentList	src & SLJIT_IMM		1690652	1					
ANR	1690782	Argument	src & SLJIT_IMM		1690652	0					
ANR	1690783	BitAndExpression	src & SLJIT_IMM		1690652	0		&			
ANR	1690784	Identifier	src		1690652	0					
ANR	1690785	Identifier	SLJIT_IMM		1690652	1					
ANR	1690786	CompoundStatement		23:38:691:691	1690652	1					
ANR	1690787	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_IMM , srcw )"	1164:2:32003:32051	1690652	0	True				
ANR	1690788	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_IMM , srcw )"		1690652	0					
ANR	1690789	Callee	EMIT_MOV		1690652	0					
ANR	1690790	Identifier	EMIT_MOV		1690652	0					
ANR	1690791	ArgumentList	compiler		1690652	1					
ANR	1690792	Argument	compiler		1690652	0					
ANR	1690793	Identifier	compiler		1690652	0					
ANR	1690794	Argument	TMP_REG1		1690652	1					
ANR	1690795	Identifier	TMP_REG1		1690652	0					
ANR	1690796	Argument	0		1690652	2					
ANR	1690797	PrimaryExpression	0		1690652	0					
ANR	1690798	Argument	SLJIT_IMM		1690652	3					
ANR	1690799	Identifier	SLJIT_IMM		1690652	0					
ANR	1690800	Argument	srcw		1690652	4					
ANR	1690801	Identifier	srcw		1690652	0					
ANR	1690802	ExpressionStatement	src = TMP_REG1	1165:2:32055:32069	1690652	1	True				
ANR	1690803	AssignmentExpression	src = TMP_REG1		1690652	0		=			
ANR	1690804	Identifier	src		1690652	0					
ANR	1690805	Identifier	TMP_REG1		1690652	1					
ANR	1690806	ExpressionStatement	srcw = 0	1166:2:32073:32081	1690652	2	True				
ANR	1690807	AssignmentExpression	srcw = 0		1690652	0		=			
ANR	1690808	Identifier	srcw		1690652	0					
ANR	1690809	PrimaryExpression	0		1690652	1					
ANR	1690810	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , TMP_REG1 , 0 , src , srcw )"	1169:1:32088:32152	1690652	5	True				
ANR	1690811	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , TMP_REG1 , 0 , src , srcw )"		1690652	0		=			
ANR	1690812	Identifier	inst		1690652	0					
ANR	1690813	CallExpression	"emit_x86_instruction ( compiler , 2 , TMP_REG1 , 0 , src , srcw )"		1690652	1					
ANR	1690814	Callee	emit_x86_instruction		1690652	0					
ANR	1690815	Identifier	emit_x86_instruction		1690652	0					
ANR	1690816	ArgumentList	compiler		1690652	1					
ANR	1690817	Argument	compiler		1690652	0					
ANR	1690818	Identifier	compiler		1690652	0					
ANR	1690819	Argument	2		1690652	1					
ANR	1690820	PrimaryExpression	2		1690652	0					
ANR	1690821	Argument	TMP_REG1		1690652	2					
ANR	1690822	Identifier	TMP_REG1		1690652	0					
ANR	1690823	Argument	0		1690652	3					
ANR	1690824	PrimaryExpression	0		1690652	0					
ANR	1690825	Argument	src		1690652	4					
ANR	1690826	Identifier	src		1690652	0					
ANR	1690827	Argument	srcw		1690652	5					
ANR	1690828	Identifier	srcw		1690652	0					
ANR	1690829	ExpressionStatement	FAIL_IF ( ! inst )	1170:1:32155:32169	1690652	6	True				
ANR	1690830	CallExpression	FAIL_IF ( ! inst )		1690652	0					
ANR	1690831	Callee	FAIL_IF		1690652	0					
ANR	1690832	Identifier	FAIL_IF		1690652	0					
ANR	1690833	ArgumentList	! inst		1690652	1					
ANR	1690834	Argument	! inst		1690652	0					
ANR	1690835	UnaryOperationExpression	! inst		1690652	0					
ANR	1690836	UnaryOperator	!		1690652	0					
ANR	1690837	Identifier	inst		1690652	1					
ANR	1690838	ExpressionStatement	* inst ++ = GROUP_0F	1171:1:32172:32190	1690652	7	True				
ANR	1690839	AssignmentExpression	* inst ++ = GROUP_0F		1690652	0		=			
ANR	1690840	UnaryOperationExpression	* inst ++		1690652	0					
ANR	1690841	UnaryOperator	*		1690652	0					
ANR	1690842	PostIncDecOperationExpression	inst ++		1690652	1					
ANR	1690843	Identifier	inst		1690652	0					
ANR	1690844	IncDec	++		1690652	1					
ANR	1690845	Identifier	GROUP_0F		1690652	1					
ANR	1690846	ExpressionStatement	* inst = BSR_r_rm	1172:1:32193:32209	1690652	8	True				
ANR	1690847	AssignmentExpression	* inst = BSR_r_rm		1690652	0		=			
ANR	1690848	UnaryOperationExpression	* inst		1690652	0					
ANR	1690849	UnaryOperator	*		1690652	0					
ANR	1690850	Identifier	inst		1690652	1					
ANR	1690851	Identifier	BSR_r_rm		1690652	1					
ANR	1690852	IfStatement	if ( FAST_IS_REG ( dst ) )		1690652	9					
ANR	1690853	Condition	FAST_IS_REG ( dst )	1175:5:32274:32289	1690652	0	True				
ANR	1690854	CallExpression	FAST_IS_REG ( dst )		1690652	0					
ANR	1690855	Callee	FAST_IS_REG		1690652	0					
ANR	1690856	Identifier	FAST_IS_REG		1690652	0					
ANR	1690857	ArgumentList	dst		1690652	1					
ANR	1690858	Argument	dst		1690652	0					
ANR	1690859	Identifier	dst		1690652	0					
ANR	1690860	ExpressionStatement	dst_r = dst	1176:2:32294:32305	1690652	1	True				
ANR	1690861	AssignmentExpression	dst_r = dst		1690652	0		=			
ANR	1690862	Identifier	dst_r		1690652	0					
ANR	1690863	Identifier	dst		1690652	1					
ANR	1690864	ElseStatement	else		1690652	0					
ANR	1690865	CompoundStatement		37:6:1005:1005	1690652	0					
ANR	1690866	IfStatement	if ( ( dst & REG_MASK ) != SLJIT_R0 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 ) )		1690652	0					
ANR	1690867	Condition	( dst & REG_MASK ) != SLJIT_R0 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )	1179:6:32364:32441	1690652	0	True				
ANR	1690868	AndExpression	( dst & REG_MASK ) != SLJIT_R0 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )		1690652	0		&&			
ANR	1690869	EqualityExpression	( dst & REG_MASK ) != SLJIT_R0		1690652	0		!=			
ANR	1690870	BitAndExpression	dst & REG_MASK		1690652	0		&			
ANR	1690871	Identifier	dst		1690652	0					
ANR	1690872	Identifier	REG_MASK		1690652	1					
ANR	1690873	Identifier	SLJIT_R0		1690652	1					
ANR	1690874	EqualityExpression	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R0 )		1690652	1		!=			
ANR	1690875	BitAndExpression	dst & OFFS_REG_MASK		1690652	0		&			
ANR	1690876	Identifier	dst		1690652	0					
ANR	1690877	Identifier	OFFS_REG_MASK		1690652	1					
ANR	1690878	CallExpression	TO_OFFS_REG ( SLJIT_R0 )		1690652	1					
ANR	1690879	Callee	TO_OFFS_REG		1690652	0					
ANR	1690880	Identifier	TO_OFFS_REG		1690652	0					
ANR	1690881	ArgumentList	SLJIT_R0		1690652	1					
ANR	1690882	Argument	SLJIT_R0		1690652	0					
ANR	1690883	Identifier	SLJIT_R0		1690652	0					
ANR	1690884	ExpressionStatement	dst_r = SLJIT_R0	1180:3:32447:32463	1690652	1	True				
ANR	1690885	AssignmentExpression	dst_r = SLJIT_R0		1690652	0		=			
ANR	1690886	Identifier	dst_r		1690652	0					
ANR	1690887	Identifier	SLJIT_R0		1690652	1					
ANR	1690888	ElseStatement	else		1690652	0					
ANR	1690889	IfStatement	if ( ( dst & REG_MASK ) != SLJIT_R1 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 ) )		1690652	0					
ANR	1690890	Condition	( dst & REG_MASK ) != SLJIT_R1 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 )	1181:11:32476:32553	1690652	0	True				
ANR	1690891	AndExpression	( dst & REG_MASK ) != SLJIT_R1 && ( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 )		1690652	0		&&			
ANR	1690892	EqualityExpression	( dst & REG_MASK ) != SLJIT_R1		1690652	0		!=			
ANR	1690893	BitAndExpression	dst & REG_MASK		1690652	0		&			
ANR	1690894	Identifier	dst		1690652	0					
ANR	1690895	Identifier	REG_MASK		1690652	1					
ANR	1690896	Identifier	SLJIT_R1		1690652	1					
ANR	1690897	EqualityExpression	( dst & OFFS_REG_MASK ) != TO_OFFS_REG ( SLJIT_R1 )		1690652	1		!=			
ANR	1690898	BitAndExpression	dst & OFFS_REG_MASK		1690652	0		&			
ANR	1690899	Identifier	dst		1690652	0					
ANR	1690900	Identifier	OFFS_REG_MASK		1690652	1					
ANR	1690901	CallExpression	TO_OFFS_REG ( SLJIT_R1 )		1690652	1					
ANR	1690902	Callee	TO_OFFS_REG		1690652	0					
ANR	1690903	Identifier	TO_OFFS_REG		1690652	0					
ANR	1690904	ArgumentList	SLJIT_R1		1690652	1					
ANR	1690905	Argument	SLJIT_R1		1690652	0					
ANR	1690906	Identifier	SLJIT_R1		1690652	0					
ANR	1690907	ExpressionStatement	dst_r = SLJIT_R1	1182:3:32559:32575	1690652	1	True				
ANR	1690908	AssignmentExpression	dst_r = SLJIT_R1		1690652	0		=			
ANR	1690909	Identifier	dst_r		1690652	0					
ANR	1690910	Identifier	SLJIT_R1		1690652	1					
ANR	1690911	ElseStatement	else		1690652	0					
ANR	1690912	ExpressionStatement	dst_r = SLJIT_R2	1184:3:32587:32603	1690652	0	True				
ANR	1690913	AssignmentExpression	dst_r = SLJIT_R2		1690652	0		=			
ANR	1690914	Identifier	dst_r		1690652	0					
ANR	1690915	Identifier	SLJIT_R2		1690652	1					
ANR	1690916	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , dst_r , 0 )"	1185:2:32607:32646	1690652	1	True				
ANR	1690917	CallExpression	"EMIT_MOV ( compiler , dst , dstw , dst_r , 0 )"		1690652	0					
ANR	1690918	Callee	EMIT_MOV		1690652	0					
ANR	1690919	Identifier	EMIT_MOV		1690652	0					
ANR	1690920	ArgumentList	compiler		1690652	1					
ANR	1690921	Argument	compiler		1690652	0					
ANR	1690922	Identifier	compiler		1690652	0					
ANR	1690923	Argument	dst		1690652	1					
ANR	1690924	Identifier	dst		1690652	0					
ANR	1690925	Argument	dstw		1690652	2					
ANR	1690926	Identifier	dstw		1690652	0					
ANR	1690927	Argument	dst_r		1690652	3					
ANR	1690928	Identifier	dst_r		1690652	0					
ANR	1690929	Argument	0		1690652	4					
ANR	1690930	PrimaryExpression	0		1690652	0					
ANR	1690931	ExpressionStatement	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , 32 + 31 )"	1187:1:32652:32700	1690652	10	True				
ANR	1690932	CallExpression	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , 32 + 31 )"		1690652	0					
ANR	1690933	Callee	EMIT_MOV		1690652	0					
ANR	1690934	Identifier	EMIT_MOV		1690652	0					
ANR	1690935	ArgumentList	compiler		1690652	1					
ANR	1690936	Argument	compiler		1690652	0					
ANR	1690937	Identifier	compiler		1690652	0					
ANR	1690938	Argument	dst_r		1690652	1					
ANR	1690939	Identifier	dst_r		1690652	0					
ANR	1690940	Argument	0		1690652	2					
ANR	1690941	PrimaryExpression	0		1690652	0					
ANR	1690942	Argument	SLJIT_IMM		1690652	3					
ANR	1690943	Identifier	SLJIT_IMM		1690652	0					
ANR	1690944	Argument	32 + 31		1690652	4					
ANR	1690945	AdditiveExpression	32 + 31		1690652	0		+			
ANR	1690946	PrimaryExpression	32		1690652	0					
ANR	1690947	PrimaryExpression	31		1690652	1					
ANR	1690948	IfStatement	if ( cpu_has_cmov == - 1 )		1690652	11					
ANR	1690949	Condition	cpu_has_cmov == - 1	1195:5:32923:32940	1690652	0	True				
ANR	1690950	EqualityExpression	cpu_has_cmov == - 1		1690652	0		==			
ANR	1690951	Identifier	cpu_has_cmov		1690652	0					
ANR	1690952	UnaryOperationExpression	- 1		1690652	1					
ANR	1690953	UnaryOperator	-		1690652	0					
ANR	1690954	PrimaryExpression	1		1690652	1					
ANR	1690955	ExpressionStatement	get_cpu_features ( )	1196:2:32945:32963	1690652	1	True				
ANR	1690956	CallExpression	get_cpu_features ( )		1690652	0					
ANR	1690957	Callee	get_cpu_features		1690652	0					
ANR	1690958	Identifier	get_cpu_features		1690652	0					
ANR	1690959	ArgumentList			1690652	1					
ANR	1690960	IfStatement	if ( cpu_has_cmov )		1690652	12					
ANR	1690961	Condition	cpu_has_cmov	1198:5:32971:32982	1690652	0	True				
ANR	1690962	Identifier	cpu_has_cmov		1690652	0					
ANR	1690963	CompoundStatement		58:19:1677:1677	1690652	1					
ANR	1690964	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , TMP_REG1 , 0 )"	1199:2:32989:33052	1690652	0	True				
ANR	1690965	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , TMP_REG1 , 0 )"		1690652	0		=			
ANR	1690966	Identifier	inst		1690652	0					
ANR	1690967	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , TMP_REG1 , 0 )"		1690652	1					
ANR	1690968	Callee	emit_x86_instruction		1690652	0					
ANR	1690969	Identifier	emit_x86_instruction		1690652	0					
ANR	1690970	ArgumentList	compiler		1690652	1					
ANR	1690971	Argument	compiler		1690652	0					
ANR	1690972	Identifier	compiler		1690652	0					
ANR	1690973	Argument	2		1690652	1					
ANR	1690974	PrimaryExpression	2		1690652	0					
ANR	1690975	Argument	dst_r		1690652	2					
ANR	1690976	Identifier	dst_r		1690652	0					
ANR	1690977	Argument	0		1690652	3					
ANR	1690978	PrimaryExpression	0		1690652	0					
ANR	1690979	Argument	TMP_REG1		1690652	4					
ANR	1690980	Identifier	TMP_REG1		1690652	0					
ANR	1690981	Argument	0		1690652	5					
ANR	1690982	PrimaryExpression	0		1690652	0					
ANR	1690983	ExpressionStatement	FAIL_IF ( ! inst )	1200:2:33056:33070	1690652	1	True				
ANR	1690984	CallExpression	FAIL_IF ( ! inst )		1690652	0					
ANR	1690985	Callee	FAIL_IF		1690652	0					
ANR	1690986	Identifier	FAIL_IF		1690652	0					
ANR	1690987	ArgumentList	! inst		1690652	1					
ANR	1690988	Argument	! inst		1690652	0					
ANR	1690989	UnaryOperationExpression	! inst		1690652	0					
ANR	1690990	UnaryOperator	!		1690652	0					
ANR	1690991	Identifier	inst		1690652	1					
ANR	1690992	ExpressionStatement	* inst ++ = GROUP_0F	1201:2:33074:33092	1690652	2	True				
ANR	1690993	AssignmentExpression	* inst ++ = GROUP_0F		1690652	0		=			
ANR	1690994	UnaryOperationExpression	* inst ++		1690652	0					
ANR	1690995	UnaryOperator	*		1690652	0					
ANR	1690996	PostIncDecOperationExpression	inst ++		1690652	1					
ANR	1690997	Identifier	inst		1690652	0					
ANR	1690998	IncDec	++		1690652	1					
ANR	1690999	Identifier	GROUP_0F		1690652	1					
ANR	1691000	ExpressionStatement	* inst = CMOVNE_r_rm	1202:2:33096:33115	1690652	3	True				
ANR	1691001	AssignmentExpression	* inst = CMOVNE_r_rm		1690652	0		=			
ANR	1691002	UnaryOperationExpression	* inst		1690652	0					
ANR	1691003	UnaryOperator	*		1690652	0					
ANR	1691004	Identifier	inst		1690652	1					
ANR	1691005	Identifier	CMOVNE_r_rm		1690652	1					
ANR	1691006	ElseStatement	else		1690652	0					
ANR	1691007	CompoundStatement		63:8:1817:1817	1690652	0					
ANR	1691008	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"	1205:2:33186:33231	1690652	0	True				
ANR	1691009	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1690652	0		=			
ANR	1691010	Identifier	inst		1690652	0					
ANR	1691011	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1690652	1					
ANR	1691012	CastTarget	sljit_ub *		1690652	0					
ANR	1691013	CallExpression	"ensure_buf ( compiler , 1 + 4 )"		1690652	1					
ANR	1691014	Callee	ensure_buf		1690652	0					
ANR	1691015	Identifier	ensure_buf		1690652	0					
ANR	1691016	ArgumentList	compiler		1690652	1					
ANR	1691017	Argument	compiler		1690652	0					
ANR	1691018	Identifier	compiler		1690652	0					
ANR	1691019	Argument	1 + 4		1690652	1					
ANR	1691020	AdditiveExpression	1 + 4		1690652	0		+			
ANR	1691021	PrimaryExpression	1		1690652	0					
ANR	1691022	PrimaryExpression	4		1690652	1					
ANR	1691023	ExpressionStatement	FAIL_IF ( ! inst )	1206:2:33235:33249	1690652	1	True				
ANR	1691024	CallExpression	FAIL_IF ( ! inst )		1690652	0					
ANR	1691025	Callee	FAIL_IF		1690652	0					
ANR	1691026	Identifier	FAIL_IF		1690652	0					
ANR	1691027	ArgumentList	! inst		1690652	1					
ANR	1691028	Argument	! inst		1690652	0					
ANR	1691029	UnaryOperationExpression	! inst		1690652	0					
ANR	1691030	UnaryOperator	!		1690652	0					
ANR	1691031	Identifier	inst		1690652	1					
ANR	1691032	ExpressionStatement	INC_SIZE ( 4 )	1207:2:33253:33264	1690652	2	True				
ANR	1691033	CallExpression	INC_SIZE ( 4 )		1690652	0					
ANR	1691034	Callee	INC_SIZE		1690652	0					
ANR	1691035	Identifier	INC_SIZE		1690652	0					
ANR	1691036	ArgumentList	4		1690652	1					
ANR	1691037	Argument	4		1690652	0					
ANR	1691038	PrimaryExpression	4		1690652	0					
ANR	1691039	ExpressionStatement	* inst ++ = JE_i8	1209:2:33269:33284	1690652	3	True				
ANR	1691040	AssignmentExpression	* inst ++ = JE_i8		1690652	0		=			
ANR	1691041	UnaryOperationExpression	* inst ++		1690652	0					
ANR	1691042	UnaryOperator	*		1690652	0					
ANR	1691043	PostIncDecOperationExpression	inst ++		1690652	1					
ANR	1691044	Identifier	inst		1690652	0					
ANR	1691045	IncDec	++		1690652	1					
ANR	1691046	Identifier	JE_i8		1690652	1					
ANR	1691047	ExpressionStatement	* inst ++ = 2	1210:2:33288:33299	1690652	4	True				
ANR	1691048	AssignmentExpression	* inst ++ = 2		1690652	0		=			
ANR	1691049	UnaryOperationExpression	* inst ++		1690652	0					
ANR	1691050	UnaryOperator	*		1690652	0					
ANR	1691051	PostIncDecOperationExpression	inst ++		1690652	1					
ANR	1691052	Identifier	inst		1690652	0					
ANR	1691053	IncDec	++		1690652	1					
ANR	1691054	PrimaryExpression	2		1690652	1					
ANR	1691055	ExpressionStatement	* inst ++ = MOV_r_rm	1211:2:33303:33321	1690652	5	True				
ANR	1691056	AssignmentExpression	* inst ++ = MOV_r_rm		1690652	0		=			
ANR	1691057	UnaryOperationExpression	* inst ++		1690652	0					
ANR	1691058	UnaryOperator	*		1690652	0					
ANR	1691059	PostIncDecOperationExpression	inst ++		1690652	1					
ANR	1691060	Identifier	inst		1690652	0					
ANR	1691061	IncDec	++		1690652	1					
ANR	1691062	Identifier	MOV_r_rm		1690652	1					
ANR	1691063	ExpressionStatement	* inst ++ = MOD_REG | ( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]	1212:2:33325:33386	1690652	6	True				
ANR	1691064	AssignmentExpression	* inst ++ = MOD_REG | ( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]		1690652	0		=			
ANR	1691065	UnaryOperationExpression	* inst ++		1690652	0					
ANR	1691066	UnaryOperator	*		1690652	0					
ANR	1691067	PostIncDecOperationExpression	inst ++		1690652	1					
ANR	1691068	Identifier	inst		1690652	0					
ANR	1691069	IncDec	++		1690652	1					
ANR	1691070	InclusiveOrExpression	MOD_REG | ( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]		1690652	1		|			
ANR	1691071	Identifier	MOD_REG		1690652	0					
ANR	1691072	InclusiveOrExpression	( reg_map [ dst_r ] << 3 ) | reg_map [ TMP_REG1 ]		1690652	1		|			
ANR	1691073	ShiftExpression	reg_map [ dst_r ] << 3		1690652	0		<<			
ANR	1691074	ArrayIndexing	reg_map [ dst_r ]		1690652	0					
ANR	1691075	Identifier	reg_map		1690652	0					
ANR	1691076	Identifier	dst_r		1690652	1					
ANR	1691077	PrimaryExpression	3		1690652	1					
ANR	1691078	ArrayIndexing	reg_map [ TMP_REG1 ]		1690652	1					
ANR	1691079	Identifier	reg_map		1690652	0					
ANR	1691080	Identifier	TMP_REG1		1690652	1					
ANR	1691081	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 31 , dst_r , 0 )"	1227:1:33763:33843	1690652	13	True				
ANR	1691082	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 31 , dst_r , 0 )"		1690652	0		=			
ANR	1691083	Identifier	inst		1690652	0					
ANR	1691084	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_BIN_INS , SLJIT_IMM , 31 , dst_r , 0 )"		1690652	1					
ANR	1691085	Callee	emit_x86_instruction		1690652	0					
ANR	1691086	Identifier	emit_x86_instruction		1690652	0					
ANR	1691087	ArgumentList	compiler		1690652	1					
ANR	1691088	Argument	compiler		1690652	0					
ANR	1691089	Identifier	compiler		1690652	0					
ANR	1691090	Argument	1 | EX86_BIN_INS		1690652	1					
ANR	1691091	InclusiveOrExpression	1 | EX86_BIN_INS		1690652	0		|			
ANR	1691092	PrimaryExpression	1		1690652	0					
ANR	1691093	Identifier	EX86_BIN_INS		1690652	1					
ANR	1691094	Argument	SLJIT_IMM		1690652	2					
ANR	1691095	Identifier	SLJIT_IMM		1690652	0					
ANR	1691096	Argument	31		1690652	3					
ANR	1691097	PrimaryExpression	31		1690652	0					
ANR	1691098	Argument	dst_r		1690652	4					
ANR	1691099	Identifier	dst_r		1690652	0					
ANR	1691100	Argument	0		1690652	5					
ANR	1691101	PrimaryExpression	0		1690652	0					
ANR	1691102	ExpressionStatement	FAIL_IF ( ! inst )	1231:1:33976:33990	1690652	14	True				
ANR	1691103	CallExpression	FAIL_IF ( ! inst )		1690652	0					
ANR	1691104	Callee	FAIL_IF		1690652	0					
ANR	1691105	Identifier	FAIL_IF		1690652	0					
ANR	1691106	ArgumentList	! inst		1690652	1					
ANR	1691107	Argument	! inst		1690652	0					
ANR	1691108	UnaryOperationExpression	! inst		1690652	0					
ANR	1691109	UnaryOperator	!		1690652	0					
ANR	1691110	Identifier	inst		1690652	1					
ANR	1691111	ExpressionStatement	* ( inst + 1 ) |= XOR	1232:1:33993:34011	1690652	15	True				
ANR	1691112	AssignmentExpression	* ( inst + 1 ) |= XOR		1690652	0		|=			
ANR	1691113	UnaryOperationExpression	* ( inst + 1 )		1690652	0					
ANR	1691114	UnaryOperator	*		1690652	0					
ANR	1691115	AdditiveExpression	inst + 1		1690652	1		+			
ANR	1691116	Identifier	inst		1690652	0					
ANR	1691117	PrimaryExpression	1		1690652	1					
ANR	1691118	Identifier	XOR		1690652	1					
ANR	1691119	IfStatement	if ( dst & SLJIT_MEM )		1690652	16					
ANR	1691120	Condition	dst & SLJIT_MEM	1235:5:34076:34090	1690652	0	True				
ANR	1691121	BitAndExpression	dst & SLJIT_MEM		1690652	0		&			
ANR	1691122	Identifier	dst		1690652	0					
ANR	1691123	Identifier	SLJIT_MEM		1690652	1					
ANR	1691124	CompoundStatement		95:22:2785:2785	1690652	1					
ANR	1691125	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"	1236:2:34097:34158	1690652	0	True				
ANR	1691126	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1690652	0		=			
ANR	1691127	Identifier	inst		1690652	0					
ANR	1691128	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , dst , dstw )"		1690652	1					
ANR	1691129	Callee	emit_x86_instruction		1690652	0					
ANR	1691130	Identifier	emit_x86_instruction		1690652	0					
ANR	1691131	ArgumentList	compiler		1690652	1					
ANR	1691132	Argument	compiler		1690652	0					
ANR	1691133	Identifier	compiler		1690652	0					
ANR	1691134	Argument	1		1690652	1					
ANR	1691135	PrimaryExpression	1		1690652	0					
ANR	1691136	Argument	dst_r		1690652	2					
ANR	1691137	Identifier	dst_r		1690652	0					
ANR	1691138	Argument	0		1690652	3					
ANR	1691139	PrimaryExpression	0		1690652	0					
ANR	1691140	Argument	dst		1690652	4					
ANR	1691141	Identifier	dst		1690652	0					
ANR	1691142	Argument	dstw		1690652	5					
ANR	1691143	Identifier	dstw		1690652	0					
ANR	1691144	ExpressionStatement	FAIL_IF ( ! inst )	1237:2:34162:34176	1690652	1	True				
ANR	1691145	CallExpression	FAIL_IF ( ! inst )		1690652	0					
ANR	1691146	Callee	FAIL_IF		1690652	0					
ANR	1691147	Identifier	FAIL_IF		1690652	0					
ANR	1691148	ArgumentList	! inst		1690652	1					
ANR	1691149	Argument	! inst		1690652	0					
ANR	1691150	UnaryOperationExpression	! inst		1690652	0					
ANR	1691151	UnaryOperator	!		1690652	0					
ANR	1691152	Identifier	inst		1690652	1					
ANR	1691153	ExpressionStatement	* inst = XCHG_r_rm	1238:2:34180:34197	1690652	2	True				
ANR	1691154	AssignmentExpression	* inst = XCHG_r_rm		1690652	0		=			
ANR	1691155	UnaryOperationExpression	* inst		1690652	0					
ANR	1691156	UnaryOperator	*		1690652	0					
ANR	1691157	Identifier	inst		1690652	1					
ANR	1691158	Identifier	XCHG_r_rm		1690652	1					
ANR	1691159	ReturnStatement	return SLJIT_SUCCESS ;	1244:1:34284:34304	1690652	17	True				
ANR	1691160	Identifier	SLJIT_SUCCESS		1690652	0					
ANR	1691161	ReturnType	static sljit_si		1690652	1					
ANR	1691162	Identifier	emit_clz		1690652	2					
ANR	1691163	ParameterList	"struct sljit_compiler * compiler , sljit_si op_flags , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1690652	3					
ANR	1691164	Parameter	struct sljit_compiler * compiler	1138:25:31195:31225	1690652	0	True				
ANR	1691165	ParameterType	struct sljit_compiler *		1690652	0					
ANR	1691166	Identifier	compiler		1690652	1					
ANR	1691167	Parameter	sljit_si op_flags	1138:58:31228:31244	1690652	1	True				
ANR	1691168	ParameterType	sljit_si		1690652	0					
ANR	1691169	Identifier	op_flags		1690652	1					
ANR	1691170	Parameter	sljit_si dst	1139:1:31248:31259	1690652	2	True				
ANR	1691171	ParameterType	sljit_si		1690652	0					
ANR	1691172	Identifier	dst		1690652	1					
ANR	1691173	Parameter	sljit_sw dstw	1139:15:31262:31274	1690652	3	True				
ANR	1691174	ParameterType	sljit_sw		1690652	0					
ANR	1691175	Identifier	dstw		1690652	1					
ANR	1691176	Parameter	sljit_si src	1140:1:31278:31289	1690652	4	True				
ANR	1691177	ParameterType	sljit_si		1690652	0					
ANR	1691178	Identifier	src		1690652	1					
ANR	1691179	Parameter	sljit_sw srcw	1140:15:31292:31304	1690652	5	True				
ANR	1691180	ParameterType	sljit_sw		1690652	0					
ANR	1691181	Identifier	srcw		1690652	1					
ANR	1691182	CFGEntryNode	ENTRY		1690652		True				
ANR	1691183	CFGExitNode	EXIT		1690652		True				
ANR	1691184	Symbol	JE_i8		1690652						
ANR	1691185	Symbol	TMP_REG1		1690652						
ANR	1691186	Symbol	dst		1690652						
ANR	1691187	Symbol	GROUP_F7		1690652						
ANR	1691188	Symbol	SLJIT_MEM		1690652						
ANR	1691189	Symbol	* inst ++		1690652						
ANR	1691190	Symbol	reg_map		1690652						
ANR	1691191	Symbol	SLJIT_R1		1690652						
ANR	1691192	Symbol	SLJIT_R2		1690652						
ANR	1691193	Symbol	dst_r		1690652						
ANR	1691194	Symbol	SLJIT_R0		1690652						
ANR	1691195	Symbol	XCHG_r_rm		1690652						
ANR	1691196	Symbol	SLJIT_IMM		1690652						
ANR	1691197	Symbol	BSR_r_rm		1690652						
ANR	1691198	Symbol	cpu_has_cmov		1690652						
ANR	1691199	Symbol	* TMP_REG1		1690652						
ANR	1691200	Symbol	* dst_r		1690652						
ANR	1691201	Symbol	EX86_BIN_INS		1690652						
ANR	1691202	Symbol	compiler		1690652						
ANR	1691203	Symbol	SHR		1690652						
ANR	1691204	Symbol	NOT_rm		1690652						
ANR	1691205	Symbol	op_flags		1690652						
ANR	1691206	Symbol	TO_OFFS_REG		1690652						
ANR	1691207	Symbol	emit_x86_instruction		1690652						
ANR	1691208	Symbol	GROUP_0F		1690652						
ANR	1691209	Symbol	REG_MASK		1690652						
ANR	1691210	Symbol	* inst		1690652						
ANR	1691211	Symbol	FAST_IS_REG		1690652						
ANR	1691212	Symbol	MOV_r_rm		1690652						
ANR	1691213	Symbol	src		1690652						
ANR	1691214	Symbol	srcw		1690652						
ANR	1691215	Symbol	OFFS_REG_MASK		1690652						
ANR	1691216	Symbol	SLJIT_SUCCESS		1690652						
ANR	1691217	Symbol	* reg_map		1690652						
ANR	1691218	Symbol	MOD_REG		1690652						
ANR	1691219	Symbol	SLJIT_UNUSED		1690652						
ANR	1691220	Symbol	EX86_SHIFT_INS		1690652						
ANR	1691221	Symbol	CMOVNE_r_rm		1690652						
ANR	1691222	Symbol	inst		1690652						
ANR	1691223	Symbol	ensure_buf		1690652						
ANR	1691224	Symbol	XOR		1690652						
ANR	1691225	Symbol	* ( inst + 1 )		1690652						
ANR	1691226	Symbol	dstw		1690652						
ANR	1691227	Symbol	SLJIT_UNLIKELY		1690652						
ANR	1691228	Function	sljit_emit_op1	1247:0:34309:39103							
ANR	1691229	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1691228	0					
ANR	1691230	CompoundStatement		1250:0:34464:39103	1691228	0					
ANR	1691231	IdentifierDeclStatement	sljit_ub * inst ;	1251:1:34467:34481	1691228	0	True				
ANR	1691232	IdentifierDecl	* inst		1691228	0					
ANR	1691233	IdentifierDeclType	sljit_ub *		1691228	0					
ANR	1691234	Identifier	inst		1691228	1					
ANR	1691235	IdentifierDeclStatement	sljit_si update = 0 ;	1252:1:34484:34503	1691228	1	True				
ANR	1691236	IdentifierDecl	update = 0		1691228	0					
ANR	1691237	IdentifierDeclType	sljit_si		1691228	0					
ANR	1691238	Identifier	update		1691228	1					
ANR	1691239	AssignmentExpression	update = 0		1691228	2		=			
ANR	1691240	Identifier	update		1691228	0					
ANR	1691241	PrimaryExpression	0		1691228	1					
ANR	1691242	IdentifierDeclStatement	sljit_si op_flags = GET_ALL_FLAGS ( op ) ;	1253:1:34506:34543	1691228	2	True				
ANR	1691243	IdentifierDecl	op_flags = GET_ALL_FLAGS ( op )		1691228	0					
ANR	1691244	IdentifierDeclType	sljit_si		1691228	0					
ANR	1691245	Identifier	op_flags		1691228	1					
ANR	1691246	AssignmentExpression	op_flags = GET_ALL_FLAGS ( op )		1691228	2		=			
ANR	1691247	Identifier	op_flags		1691228	0					
ANR	1691248	CallExpression	GET_ALL_FLAGS ( op )		1691228	1					
ANR	1691249	Callee	GET_ALL_FLAGS		1691228	0					
ANR	1691250	Identifier	GET_ALL_FLAGS		1691228	0					
ANR	1691251	ArgumentList	op		1691228	1					
ANR	1691252	Argument	op		1691228	0					
ANR	1691253	Identifier	op		1691228	0					
ANR	1691254	IdentifierDeclStatement	sljit_si dst_is_ereg = 0 ;	1255:1:34603:34627	1691228	3	True				
ANR	1691255	IdentifierDecl	dst_is_ereg = 0		1691228	0					
ANR	1691256	IdentifierDeclType	sljit_si		1691228	0					
ANR	1691257	Identifier	dst_is_ereg		1691228	1					
ANR	1691258	AssignmentExpression	dst_is_ereg = 0		1691228	2		=			
ANR	1691259	Identifier	dst_is_ereg		1691228	0					
ANR	1691260	PrimaryExpression	0		1691228	1					
ANR	1691261	IdentifierDeclStatement	sljit_si src_is_ereg = 0 ;	1256:1:34630:34654	1691228	4	True				
ANR	1691262	IdentifierDecl	src_is_ereg = 0		1691228	0					
ANR	1691263	IdentifierDeclType	sljit_si		1691228	0					
ANR	1691264	Identifier	src_is_ereg		1691228	1					
ANR	1691265	AssignmentExpression	src_is_ereg = 0		1691228	2		=			
ANR	1691266	Identifier	src_is_ereg		1691228	0					
ANR	1691267	PrimaryExpression	0		1691228	1					
ANR	1691268	ExpressionStatement	CHECK_ERROR ( )	1261:1:34694:34707	1691228	5	True				
ANR	1691269	CallExpression	CHECK_ERROR ( )		1691228	0					
ANR	1691270	Callee	CHECK_ERROR		1691228	0					
ANR	1691271	Identifier	CHECK_ERROR		1691228	0					
ANR	1691272	ArgumentList			1691228	1					
ANR	1691273	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1262:1:34710:34773	1691228	6	True				
ANR	1691274	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691275	Callee	CHECK		1691228	0					
ANR	1691276	Identifier	CHECK		1691228	0					
ANR	1691277	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1691228	1					
ANR	1691278	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1691228	0					
ANR	1691279	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1691228	0					
ANR	1691280	Callee	check_sljit_emit_op1		1691228	0					
ANR	1691281	Identifier	check_sljit_emit_op1		1691228	0					
ANR	1691282	ArgumentList	compiler		1691228	1					
ANR	1691283	Argument	compiler		1691228	0					
ANR	1691284	Identifier	compiler		1691228	0					
ANR	1691285	Argument	op		1691228	1					
ANR	1691286	Identifier	op		1691228	0					
ANR	1691287	Argument	dst		1691228	2					
ANR	1691288	Identifier	dst		1691228	0					
ANR	1691289	Argument	dstw		1691228	3					
ANR	1691290	Identifier	dstw		1691228	0					
ANR	1691291	Argument	src		1691228	4					
ANR	1691292	Identifier	src		1691228	0					
ANR	1691293	Argument	srcw		1691228	5					
ANR	1691294	Identifier	srcw		1691228	0					
ANR	1691295	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1263:1:34776:34806	1691228	7	True				
ANR	1691296	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1691228	0					
ANR	1691297	Callee	ADJUST_LOCAL_OFFSET		1691228	0					
ANR	1691298	Identifier	ADJUST_LOCAL_OFFSET		1691228	0					
ANR	1691299	ArgumentList	dst		1691228	1					
ANR	1691300	Argument	dst		1691228	0					
ANR	1691301	Identifier	dst		1691228	0					
ANR	1691302	Argument	dstw		1691228	1					
ANR	1691303	Identifier	dstw		1691228	0					
ANR	1691304	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1264:1:34809:34839	1691228	8	True				
ANR	1691305	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1691228	0					
ANR	1691306	Callee	ADJUST_LOCAL_OFFSET		1691228	0					
ANR	1691307	Identifier	ADJUST_LOCAL_OFFSET		1691228	0					
ANR	1691308	ArgumentList	src		1691228	1					
ANR	1691309	Argument	src		1691228	0					
ANR	1691310	Identifier	src		1691228	0					
ANR	1691311	Argument	srcw		1691228	1					
ANR	1691312	Identifier	srcw		1691228	0					
ANR	1691313	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , dst_is_ereg = 1 )"	1266:1:34843:34887	1691228	9	True				
ANR	1691314	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , dst_is_ereg = 1 )"		1691228	0					
ANR	1691315	Callee	CHECK_EXTRA_REGS		1691228	0					
ANR	1691316	Identifier	CHECK_EXTRA_REGS		1691228	0					
ANR	1691317	ArgumentList	dst		1691228	1					
ANR	1691318	Argument	dst		1691228	0					
ANR	1691319	Identifier	dst		1691228	0					
ANR	1691320	Argument	dstw		1691228	1					
ANR	1691321	Identifier	dstw		1691228	0					
ANR	1691322	Argument	dst_is_ereg = 1		1691228	2					
ANR	1691323	AssignmentExpression	dst_is_ereg = 1		1691228	0		=			
ANR	1691324	Identifier	dst_is_ereg		1691228	0					
ANR	1691325	PrimaryExpression	1		1691228	1					
ANR	1691326	ExpressionStatement	"CHECK_EXTRA_REGS ( src , srcw , src_is_ereg = 1 )"	1267:1:34890:34934	1691228	10	True				
ANR	1691327	CallExpression	"CHECK_EXTRA_REGS ( src , srcw , src_is_ereg = 1 )"		1691228	0					
ANR	1691328	Callee	CHECK_EXTRA_REGS		1691228	0					
ANR	1691329	Identifier	CHECK_EXTRA_REGS		1691228	0					
ANR	1691330	ArgumentList	src		1691228	1					
ANR	1691331	Argument	src		1691228	0					
ANR	1691332	Identifier	src		1691228	0					
ANR	1691333	Argument	srcw		1691228	1					
ANR	1691334	Identifier	srcw		1691228	0					
ANR	1691335	Argument	src_is_ereg = 1		1691228	2					
ANR	1691336	AssignmentExpression	src_is_ereg = 1		1691228	0		=			
ANR	1691337	Identifier	src_is_ereg		1691228	0					
ANR	1691338	PrimaryExpression	1		1691228	1					
ANR	1691339	ExpressionStatement	compiler -> mode32 = op_flags & SLJIT_INT_OP	1269:1:34994:35036	1691228	11	True				
ANR	1691340	AssignmentExpression	compiler -> mode32 = op_flags & SLJIT_INT_OP		1691228	0		=			
ANR	1691341	PtrMemberAccess	compiler -> mode32		1691228	0					
ANR	1691342	Identifier	compiler		1691228	0					
ANR	1691343	Identifier	mode32		1691228	1					
ANR	1691344	BitAndExpression	op_flags & SLJIT_INT_OP		1691228	1		&			
ANR	1691345	Identifier	op_flags		1691228	0					
ANR	1691346	Identifier	SLJIT_INT_OP		1691228	1					
ANR	1691347	ExpressionStatement	op = GET_OPCODE ( op )	1272:1:35047:35066	1691228	12	True				
ANR	1691348	AssignmentExpression	op = GET_OPCODE ( op )		1691228	0		=			
ANR	1691349	Identifier	op		1691228	0					
ANR	1691350	CallExpression	GET_OPCODE ( op )		1691228	1					
ANR	1691351	Callee	GET_OPCODE		1691228	0					
ANR	1691352	Identifier	GET_OPCODE		1691228	0					
ANR	1691353	ArgumentList	op		1691228	1					
ANR	1691354	Argument	op		1691228	0					
ANR	1691355	Identifier	op		1691228	0					
ANR	1691356	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_P )		1691228	13					
ANR	1691357	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_P	1273:5:35073:35109	1691228	0	True				
ANR	1691358	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_P		1691228	0		&&			
ANR	1691359	RelationalExpression	op >= SLJIT_MOV		1691228	0		>=			
ANR	1691360	Identifier	op		1691228	0					
ANR	1691361	Identifier	SLJIT_MOV		1691228	1					
ANR	1691362	RelationalExpression	op <= SLJIT_MOVU_P		1691228	1		<=			
ANR	1691363	Identifier	op		1691228	0					
ANR	1691364	Identifier	SLJIT_MOVU_P		1691228	1					
ANR	1691365	CompoundStatement		24:44:647:647	1691228	1					
ANR	1691366	ExpressionStatement	compiler -> mode32 = 0	1275:2:35173:35193	1691228	0	True				
ANR	1691367	AssignmentExpression	compiler -> mode32 = 0		1691228	0		=			
ANR	1691368	PtrMemberAccess	compiler -> mode32		1691228	0					
ANR	1691369	Identifier	compiler		1691228	0					
ANR	1691370	Identifier	mode32		1691228	1					
ANR	1691371	PrimaryExpression	0		1691228	1					
ANR	1691372	IfStatement	if ( op_flags & SLJIT_INT_OP )		1691228	1					
ANR	1691373	Condition	op_flags & SLJIT_INT_OP	1278:6:35209:35231	1691228	0	True				
ANR	1691374	BitAndExpression	op_flags & SLJIT_INT_OP		1691228	0		&			
ANR	1691375	Identifier	op_flags		1691228	0					
ANR	1691376	Identifier	SLJIT_INT_OP		1691228	1					
ANR	1691377	CompoundStatement		29:31:769:769	1691228	1					
ANR	1691378	IfStatement	if ( FAST_IS_REG ( src ) && src == dst )		1691228	0					
ANR	1691379	Condition	FAST_IS_REG ( src ) && src == dst	1279:7:35243:35272	1691228	0	True				
ANR	1691380	AndExpression	FAST_IS_REG ( src ) && src == dst		1691228	0		&&			
ANR	1691381	CallExpression	FAST_IS_REG ( src )		1691228	0					
ANR	1691382	Callee	FAST_IS_REG		1691228	0					
ANR	1691383	Identifier	FAST_IS_REG		1691228	0					
ANR	1691384	ArgumentList	src		1691228	1					
ANR	1691385	Argument	src		1691228	0					
ANR	1691386	Identifier	src		1691228	0					
ANR	1691387	EqualityExpression	src == dst		1691228	1		==			
ANR	1691388	Identifier	src		1691228	0					
ANR	1691389	Identifier	dst		1691228	1					
ANR	1691390	CompoundStatement		30:39:810:810	1691228	1					
ANR	1691391	IfStatement	if ( ! TYPE_CAST_NEEDED ( op ) )		1691228	0					
ANR	1691392	Condition	! TYPE_CAST_NEEDED ( op )	1280:8:35285:35305	1691228	0	True				
ANR	1691393	UnaryOperationExpression	! TYPE_CAST_NEEDED ( op )		1691228	0					
ANR	1691394	UnaryOperator	!		1691228	0					
ANR	1691395	CallExpression	TYPE_CAST_NEEDED ( op )		1691228	1					
ANR	1691396	Callee	TYPE_CAST_NEEDED		1691228	0					
ANR	1691397	Identifier	TYPE_CAST_NEEDED		1691228	0					
ANR	1691398	ArgumentList	op		1691228	1					
ANR	1691399	Argument	op		1691228	0					
ANR	1691400	Identifier	op		1691228	0					
ANR	1691401	ReturnStatement	return SLJIT_SUCCESS ;	1281:5:35313:35333	1691228	1	True				
ANR	1691402	Identifier	SLJIT_SUCCESS		1691228	0					
ANR	1691403	IfStatement	if ( op == SLJIT_MOV_SI && ( src & SLJIT_MEM ) )		1691228	1					
ANR	1691404	Condition	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )	1284:7:35404:35442	1691228	0	True				
ANR	1691405	AndExpression	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )		1691228	0		&&			
ANR	1691406	EqualityExpression	op == SLJIT_MOV_SI		1691228	0		==			
ANR	1691407	Identifier	op		1691228	0					
ANR	1691408	Identifier	SLJIT_MOV_SI		1691228	1					
ANR	1691409	BitAndExpression	src & SLJIT_MEM		1691228	1		&			
ANR	1691410	Identifier	src		1691228	0					
ANR	1691411	Identifier	SLJIT_MEM		1691228	1					
ANR	1691412	ExpressionStatement	op = SLJIT_MOV_UI	1285:4:35449:35466	1691228	1	True				
ANR	1691413	AssignmentExpression	op = SLJIT_MOV_UI		1691228	0		=			
ANR	1691414	Identifier	op		1691228	0					
ANR	1691415	Identifier	SLJIT_MOV_UI		1691228	1					
ANR	1691416	IfStatement	if ( op == SLJIT_MOVU_SI && ( src & SLJIT_MEM ) )		1691228	2					
ANR	1691417	Condition	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )	1286:7:35475:35514	1691228	0	True				
ANR	1691418	AndExpression	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )		1691228	0		&&			
ANR	1691419	EqualityExpression	op == SLJIT_MOVU_SI		1691228	0		==			
ANR	1691420	Identifier	op		1691228	0					
ANR	1691421	Identifier	SLJIT_MOVU_SI		1691228	1					
ANR	1691422	BitAndExpression	src & SLJIT_MEM		1691228	1		&			
ANR	1691423	Identifier	src		1691228	0					
ANR	1691424	Identifier	SLJIT_MEM		1691228	1					
ANR	1691425	ExpressionStatement	op = SLJIT_MOVU_UI	1287:4:35521:35539	1691228	1	True				
ANR	1691426	AssignmentExpression	op = SLJIT_MOVU_UI		1691228	0		=			
ANR	1691427	Identifier	op		1691228	0					
ANR	1691428	Identifier	SLJIT_MOVU_UI		1691228	1					
ANR	1691429	IfStatement	if ( op == SLJIT_MOV_UI && ( src & SLJIT_IMM ) )		1691228	3					
ANR	1691430	Condition	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )	1288:7:35548:35586	1691228	0	True				
ANR	1691431	AndExpression	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )		1691228	0		&&			
ANR	1691432	EqualityExpression	op == SLJIT_MOV_UI		1691228	0		==			
ANR	1691433	Identifier	op		1691228	0					
ANR	1691434	Identifier	SLJIT_MOV_UI		1691228	1					
ANR	1691435	BitAndExpression	src & SLJIT_IMM		1691228	1		&			
ANR	1691436	Identifier	src		1691228	0					
ANR	1691437	Identifier	SLJIT_IMM		1691228	1					
ANR	1691438	ExpressionStatement	op = SLJIT_MOV_SI	1289:4:35593:35610	1691228	1	True				
ANR	1691439	AssignmentExpression	op = SLJIT_MOV_SI		1691228	0		=			
ANR	1691440	Identifier	op		1691228	0					
ANR	1691441	Identifier	SLJIT_MOV_SI		1691228	1					
ANR	1691442	IfStatement	if ( op == SLJIT_MOVU_UI && ( src & SLJIT_IMM ) )		1691228	4					
ANR	1691443	Condition	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )	1290:7:35619:35658	1691228	0	True				
ANR	1691444	AndExpression	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )		1691228	0		&&			
ANR	1691445	EqualityExpression	op == SLJIT_MOVU_UI		1691228	0		==			
ANR	1691446	Identifier	op		1691228	0					
ANR	1691447	Identifier	SLJIT_MOVU_UI		1691228	1					
ANR	1691448	BitAndExpression	src & SLJIT_IMM		1691228	1		&			
ANR	1691449	Identifier	src		1691228	0					
ANR	1691450	Identifier	SLJIT_IMM		1691228	1					
ANR	1691451	ExpressionStatement	op = SLJIT_MOVU_SI	1291:4:35665:35683	1691228	1	True				
ANR	1691452	AssignmentExpression	op = SLJIT_MOVU_SI		1691228	0		=			
ANR	1691453	Identifier	op		1691228	0					
ANR	1691454	Identifier	SLJIT_MOVU_SI		1691228	1					
ANR	1691455	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( SLJIT_MOV + 8 == SLJIT_MOVU , movu_offset )"	1295:2:35699:35761	1691228	2	True				
ANR	1691456	CallExpression	"SLJIT_COMPILE_ASSERT ( SLJIT_MOV + 8 == SLJIT_MOVU , movu_offset )"		1691228	0					
ANR	1691457	Callee	SLJIT_COMPILE_ASSERT		1691228	0					
ANR	1691458	Identifier	SLJIT_COMPILE_ASSERT		1691228	0					
ANR	1691459	ArgumentList	SLJIT_MOV + 8 == SLJIT_MOVU		1691228	1					
ANR	1691460	Argument	SLJIT_MOV + 8 == SLJIT_MOVU		1691228	0					
ANR	1691461	EqualityExpression	SLJIT_MOV + 8 == SLJIT_MOVU		1691228	0		==			
ANR	1691462	AdditiveExpression	SLJIT_MOV + 8		1691228	0		+			
ANR	1691463	Identifier	SLJIT_MOV		1691228	0					
ANR	1691464	PrimaryExpression	8		1691228	1					
ANR	1691465	Identifier	SLJIT_MOVU		1691228	1					
ANR	1691466	Argument	movu_offset		1691228	1					
ANR	1691467	Identifier	movu_offset		1691228	0					
ANR	1691468	IfStatement	if ( op >= SLJIT_MOVU )		1691228	3					
ANR	1691469	Condition	op >= SLJIT_MOVU	1296:6:35769:35784	1691228	0	True				
ANR	1691470	RelationalExpression	op >= SLJIT_MOVU		1691228	0		>=			
ANR	1691471	Identifier	op		1691228	0					
ANR	1691472	Identifier	SLJIT_MOVU		1691228	1					
ANR	1691473	CompoundStatement		47:24:1322:1322	1691228	1					
ANR	1691474	ExpressionStatement	update = 1	1297:3:35792:35802	1691228	0	True				
ANR	1691475	AssignmentExpression	update = 1		1691228	0		=			
ANR	1691476	Identifier	update		1691228	0					
ANR	1691477	PrimaryExpression	1		1691228	1					
ANR	1691478	ExpressionStatement	op -= 8	1298:3:35807:35814	1691228	1	True				
ANR	1691479	AssignmentExpression	op -= 8		1691228	0		-=			
ANR	1691480	Identifier	op		1691228	0					
ANR	1691481	PrimaryExpression	8		1691228	1					
ANR	1691482	IfStatement	if ( src & SLJIT_IMM )		1691228	4					
ANR	1691483	Condition	src & SLJIT_IMM	1301:6:35827:35841	1691228	0	True				
ANR	1691484	BitAndExpression	src & SLJIT_IMM		1691228	0		&			
ANR	1691485	Identifier	src		1691228	0					
ANR	1691486	Identifier	SLJIT_IMM		1691228	1					
ANR	1691487	CompoundStatement		52:23:1379:1379	1691228	1					
ANR	1691488	SwitchStatement	switch ( op )		1691228	0					
ANR	1691489	Condition	op	1302:11:35857:35858	1691228	0	True				
ANR	1691490	Identifier	op		1691228	0					
ANR	1691491	CompoundStatement		53:15:1396:1396	1691228	1					
ANR	1691492	Label	case SLJIT_MOV_UB :	1303:3:35866:35883	1691228	0	True				
ANR	1691493	Identifier	SLJIT_MOV_UB		1691228	0					
ANR	1691494	ExpressionStatement	srcw = ( sljit_ub ) srcw	1304:4:35889:35910	1691228	1	True				
ANR	1691495	AssignmentExpression	srcw = ( sljit_ub ) srcw		1691228	0		=			
ANR	1691496	Identifier	srcw		1691228	0					
ANR	1691497	CastExpression	( sljit_ub ) srcw		1691228	1					
ANR	1691498	CastTarget	sljit_ub		1691228	0					
ANR	1691499	Identifier	srcw		1691228	1					
ANR	1691500	BreakStatement	break ;	1305:4:35916:35921	1691228	2	True				
ANR	1691501	Label	case SLJIT_MOV_SB :	1306:3:35926:35943	1691228	3	True				
ANR	1691502	Identifier	SLJIT_MOV_SB		1691228	0					
ANR	1691503	ExpressionStatement	srcw = ( sljit_sb ) srcw	1307:4:35949:35970	1691228	4	True				
ANR	1691504	AssignmentExpression	srcw = ( sljit_sb ) srcw		1691228	0		=			
ANR	1691505	Identifier	srcw		1691228	0					
ANR	1691506	CastExpression	( sljit_sb ) srcw		1691228	1					
ANR	1691507	CastTarget	sljit_sb		1691228	0					
ANR	1691508	Identifier	srcw		1691228	1					
ANR	1691509	BreakStatement	break ;	1308:4:35976:35981	1691228	5	True				
ANR	1691510	Label	case SLJIT_MOV_UH :	1309:3:35986:36003	1691228	6	True				
ANR	1691511	Identifier	SLJIT_MOV_UH		1691228	0					
ANR	1691512	ExpressionStatement	srcw = ( sljit_uh ) srcw	1310:4:36009:36030	1691228	7	True				
ANR	1691513	AssignmentExpression	srcw = ( sljit_uh ) srcw		1691228	0		=			
ANR	1691514	Identifier	srcw		1691228	0					
ANR	1691515	CastExpression	( sljit_uh ) srcw		1691228	1					
ANR	1691516	CastTarget	sljit_uh		1691228	0					
ANR	1691517	Identifier	srcw		1691228	1					
ANR	1691518	BreakStatement	break ;	1311:4:36036:36041	1691228	8	True				
ANR	1691519	Label	case SLJIT_MOV_SH :	1312:3:36046:36063	1691228	9	True				
ANR	1691520	Identifier	SLJIT_MOV_SH		1691228	0					
ANR	1691521	ExpressionStatement	srcw = ( sljit_sh ) srcw	1313:4:36069:36090	1691228	10	True				
ANR	1691522	AssignmentExpression	srcw = ( sljit_sh ) srcw		1691228	0		=			
ANR	1691523	Identifier	srcw		1691228	0					
ANR	1691524	CastExpression	( sljit_sh ) srcw		1691228	1					
ANR	1691525	CastTarget	sljit_sh		1691228	0					
ANR	1691526	Identifier	srcw		1691228	1					
ANR	1691527	BreakStatement	break ;	1314:4:36096:36101	1691228	11	True				
ANR	1691528	Label	case SLJIT_MOV_UI :	1316:3:36163:36180	1691228	12	True				
ANR	1691529	Identifier	SLJIT_MOV_UI		1691228	0					
ANR	1691530	ExpressionStatement	srcw = ( sljit_ui ) srcw	1317:4:36186:36207	1691228	13	True				
ANR	1691531	AssignmentExpression	srcw = ( sljit_ui ) srcw		1691228	0		=			
ANR	1691532	Identifier	srcw		1691228	0					
ANR	1691533	CastExpression	( sljit_ui ) srcw		1691228	1					
ANR	1691534	CastTarget	sljit_ui		1691228	0					
ANR	1691535	Identifier	srcw		1691228	1					
ANR	1691536	BreakStatement	break ;	1318:4:36213:36218	1691228	14	True				
ANR	1691537	Label	case SLJIT_MOV_SI :	1319:3:36223:36240	1691228	15	True				
ANR	1691538	Identifier	SLJIT_MOV_SI		1691228	0					
ANR	1691539	ExpressionStatement	srcw = ( sljit_si ) srcw	1320:4:36246:36267	1691228	16	True				
ANR	1691540	AssignmentExpression	srcw = ( sljit_si ) srcw		1691228	0		=			
ANR	1691541	Identifier	srcw		1691228	0					
ANR	1691542	CastExpression	( sljit_si ) srcw		1691228	1					
ANR	1691543	CastTarget	sljit_si		1691228	0					
ANR	1691544	Identifier	srcw		1691228	1					
ANR	1691545	BreakStatement	break ;	1321:4:36273:36278	1691228	17	True				
ANR	1691546	IfStatement	if ( SLJIT_UNLIKELY ( dst_is_ereg ) )		1691228	1					
ANR	1691547	Condition	SLJIT_UNLIKELY ( dst_is_ereg )	1325:7:36356:36382	1691228	0	True				
ANR	1691548	CallExpression	SLJIT_UNLIKELY ( dst_is_ereg )		1691228	0					
ANR	1691549	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1691550	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1691551	ArgumentList	dst_is_ereg		1691228	1					
ANR	1691552	Argument	dst_is_ereg		1691228	0					
ANR	1691553	Identifier	dst_is_ereg		1691228	0					
ANR	1691554	ReturnStatement	"return emit_mov ( compiler , dst , dstw , src , srcw ) ;"	1326:4:36389:36436	1691228	1	True				
ANR	1691555	CallExpression	"emit_mov ( compiler , dst , dstw , src , srcw )"		1691228	0					
ANR	1691556	Callee	emit_mov		1691228	0					
ANR	1691557	Identifier	emit_mov		1691228	0					
ANR	1691558	ArgumentList	compiler		1691228	1					
ANR	1691559	Argument	compiler		1691228	0					
ANR	1691560	Identifier	compiler		1691228	0					
ANR	1691561	Argument	dst		1691228	1					
ANR	1691562	Identifier	dst		1691228	0					
ANR	1691563	Argument	dstw		1691228	2					
ANR	1691564	Identifier	dstw		1691228	0					
ANR	1691565	Argument	src		1691228	3					
ANR	1691566	Identifier	src		1691228	0					
ANR	1691567	Argument	srcw		1691228	4					
ANR	1691568	Identifier	srcw		1691228	0					
ANR	1691569	IfStatement	if ( SLJIT_UNLIKELY ( update ) && ( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 ) )		1691228	5					
ANR	1691570	Condition	SLJIT_UNLIKELY ( update ) && ( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )	1330:6:36456:36579	1691228	0	True				
ANR	1691571	AndExpression	SLJIT_UNLIKELY ( update ) && ( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1691228	0		&&			
ANR	1691572	CallExpression	SLJIT_UNLIKELY ( update )		1691228	0					
ANR	1691573	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1691574	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1691575	ArgumentList	update		1691228	1					
ANR	1691576	Argument	update		1691228	0					
ANR	1691577	Identifier	update		1691228	0					
ANR	1691578	AndExpression	( src & SLJIT_MEM ) && ! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1691228	1		&&			
ANR	1691579	BitAndExpression	src & SLJIT_MEM		1691228	0		&			
ANR	1691580	Identifier	src		1691228	0					
ANR	1691581	Identifier	SLJIT_MEM		1691228	1					
ANR	1691582	AndExpression	! src_is_ereg && ( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1691228	1		&&			
ANR	1691583	UnaryOperationExpression	! src_is_ereg		1691228	0					
ANR	1691584	UnaryOperator	!		1691228	0					
ANR	1691585	Identifier	src_is_ereg		1691228	1					
ANR	1691586	AndExpression	( src & REG_MASK ) && ( srcw != 0 || ( src & OFFS_REG_MASK ) != 0 )		1691228	1		&&			
ANR	1691587	BitAndExpression	src & REG_MASK		1691228	0		&			
ANR	1691588	Identifier	src		1691228	0					
ANR	1691589	Identifier	REG_MASK		1691228	1					
ANR	1691590	OrExpression	srcw != 0 || ( src & OFFS_REG_MASK ) != 0		1691228	1		||			
ANR	1691591	EqualityExpression	srcw != 0		1691228	0		!=			
ANR	1691592	Identifier	srcw		1691228	0					
ANR	1691593	PrimaryExpression	0		1691228	1					
ANR	1691594	EqualityExpression	( src & OFFS_REG_MASK ) != 0		1691228	1		!=			
ANR	1691595	BitAndExpression	src & OFFS_REG_MASK		1691228	0		&			
ANR	1691596	Identifier	src		1691228	0					
ANR	1691597	Identifier	OFFS_REG_MASK		1691228	1					
ANR	1691598	PrimaryExpression	0		1691228	1					
ANR	1691599	CompoundStatement		81:132:2117:2117	1691228	1					
ANR	1691600	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src & REG_MASK , 0 , src , srcw )"	1331:3:36587:36657	1691228	0	True				
ANR	1691601	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src & REG_MASK , 0 , src , srcw )"		1691228	0		=			
ANR	1691602	Identifier	inst		1691228	0					
ANR	1691603	CallExpression	"emit_x86_instruction ( compiler , 1 , src & REG_MASK , 0 , src , srcw )"		1691228	1					
ANR	1691604	Callee	emit_x86_instruction		1691228	0					
ANR	1691605	Identifier	emit_x86_instruction		1691228	0					
ANR	1691606	ArgumentList	compiler		1691228	1					
ANR	1691607	Argument	compiler		1691228	0					
ANR	1691608	Identifier	compiler		1691228	0					
ANR	1691609	Argument	1		1691228	1					
ANR	1691610	PrimaryExpression	1		1691228	0					
ANR	1691611	Argument	src & REG_MASK		1691228	2					
ANR	1691612	BitAndExpression	src & REG_MASK		1691228	0		&			
ANR	1691613	Identifier	src		1691228	0					
ANR	1691614	Identifier	REG_MASK		1691228	1					
ANR	1691615	Argument	0		1691228	3					
ANR	1691616	PrimaryExpression	0		1691228	0					
ANR	1691617	Argument	src		1691228	4					
ANR	1691618	Identifier	src		1691228	0					
ANR	1691619	Argument	srcw		1691228	5					
ANR	1691620	Identifier	srcw		1691228	0					
ANR	1691621	ExpressionStatement	FAIL_IF ( ! inst )	1332:3:36662:36676	1691228	1	True				
ANR	1691622	CallExpression	FAIL_IF ( ! inst )		1691228	0					
ANR	1691623	Callee	FAIL_IF		1691228	0					
ANR	1691624	Identifier	FAIL_IF		1691228	0					
ANR	1691625	ArgumentList	! inst		1691228	1					
ANR	1691626	Argument	! inst		1691228	0					
ANR	1691627	UnaryOperationExpression	! inst		1691228	0					
ANR	1691628	UnaryOperator	!		1691228	0					
ANR	1691629	Identifier	inst		1691228	1					
ANR	1691630	ExpressionStatement	* inst = LEA_r_m	1333:3:36681:36696	1691228	2	True				
ANR	1691631	AssignmentExpression	* inst = LEA_r_m		1691228	0		=			
ANR	1691632	UnaryOperationExpression	* inst		1691228	0					
ANR	1691633	UnaryOperator	*		1691228	0					
ANR	1691634	Identifier	inst		1691228	1					
ANR	1691635	Identifier	LEA_r_m		1691228	1					
ANR	1691636	ExpressionStatement	src &= SLJIT_MEM | 0xf	1334:3:36701:36723	1691228	3	True				
ANR	1691637	AssignmentExpression	src &= SLJIT_MEM | 0xf		1691228	0		&=			
ANR	1691638	Identifier	src		1691228	0					
ANR	1691639	InclusiveOrExpression	SLJIT_MEM | 0xf		1691228	1		|			
ANR	1691640	Identifier	SLJIT_MEM		1691228	0					
ANR	1691641	PrimaryExpression	0xf		1691228	1					
ANR	1691642	ExpressionStatement	srcw = 0	1335:3:36728:36736	1691228	4	True				
ANR	1691643	AssignmentExpression	srcw = 0		1691228	0		=			
ANR	1691644	Identifier	srcw		1691228	0					
ANR	1691645	PrimaryExpression	0		1691228	1					
ANR	1691646	IfStatement	if ( SLJIT_UNLIKELY ( dst_is_ereg ) && ( ! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM ) ) )		1691228	6					
ANR	1691647	Condition	SLJIT_UNLIKELY ( dst_is_ereg ) && ( ! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM ) )	1339:6:36806:36942	1691228	0	True				
ANR	1691648	AndExpression	SLJIT_UNLIKELY ( dst_is_ereg ) && ( ! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM ) )		1691228	0		&&			
ANR	1691649	CallExpression	SLJIT_UNLIKELY ( dst_is_ereg )		1691228	0					
ANR	1691650	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1691651	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1691652	ArgumentList	dst_is_ereg		1691228	1					
ANR	1691653	Argument	dst_is_ereg		1691228	0					
ANR	1691654	Identifier	dst_is_ereg		1691228	0					
ANR	1691655	OrExpression	! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P ) || ( src & SLJIT_MEM )		1691228	1		||			
ANR	1691656	UnaryOperationExpression	! ( op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P )		1691228	0					
ANR	1691657	UnaryOperator	!		1691228	0					
ANR	1691658	OrExpression	op == SLJIT_MOV || op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P		1691228	1		||			
ANR	1691659	EqualityExpression	op == SLJIT_MOV		1691228	0		==			
ANR	1691660	Identifier	op		1691228	0					
ANR	1691661	Identifier	SLJIT_MOV		1691228	1					
ANR	1691662	OrExpression	op == SLJIT_MOV_UI || op == SLJIT_MOV_SI || op == SLJIT_MOV_P		1691228	1		||			
ANR	1691663	EqualityExpression	op == SLJIT_MOV_UI		1691228	0		==			
ANR	1691664	Identifier	op		1691228	0					
ANR	1691665	Identifier	SLJIT_MOV_UI		1691228	1					
ANR	1691666	OrExpression	op == SLJIT_MOV_SI || op == SLJIT_MOV_P		1691228	1		||			
ANR	1691667	EqualityExpression	op == SLJIT_MOV_SI		1691228	0		==			
ANR	1691668	Identifier	op		1691228	0					
ANR	1691669	Identifier	SLJIT_MOV_SI		1691228	1					
ANR	1691670	EqualityExpression	op == SLJIT_MOV_P		1691228	1		==			
ANR	1691671	Identifier	op		1691228	0					
ANR	1691672	Identifier	SLJIT_MOV_P		1691228	1					
ANR	1691673	BitAndExpression	src & SLJIT_MEM		1691228	1		&			
ANR	1691674	Identifier	src		1691228	0					
ANR	1691675	Identifier	SLJIT_MEM		1691228	1					
ANR	1691676	CompoundStatement		90:145:2480:2480	1691228	1					
ANR	1691677	ExpressionStatement	SLJIT_ASSERT ( dst == SLJIT_MEM1 ( SLJIT_SP ) )	1340:3:36950:36991	1691228	0	True				
ANR	1691678	CallExpression	SLJIT_ASSERT ( dst == SLJIT_MEM1 ( SLJIT_SP ) )		1691228	0					
ANR	1691679	Callee	SLJIT_ASSERT		1691228	0					
ANR	1691680	Identifier	SLJIT_ASSERT		1691228	0					
ANR	1691681	ArgumentList	dst == SLJIT_MEM1 ( SLJIT_SP )		1691228	1					
ANR	1691682	Argument	dst == SLJIT_MEM1 ( SLJIT_SP )		1691228	0					
ANR	1691683	EqualityExpression	dst == SLJIT_MEM1 ( SLJIT_SP )		1691228	0		==			
ANR	1691684	Identifier	dst		1691228	0					
ANR	1691685	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1691228	1					
ANR	1691686	Callee	SLJIT_MEM1		1691228	0					
ANR	1691687	Identifier	SLJIT_MEM1		1691228	0					
ANR	1691688	ArgumentList	SLJIT_SP		1691228	1					
ANR	1691689	Argument	SLJIT_SP		1691228	0					
ANR	1691690	Identifier	SLJIT_SP		1691228	0					
ANR	1691691	ExpressionStatement	dst = TMP_REG1	1341:3:36996:37010	1691228	1	True				
ANR	1691692	AssignmentExpression	dst = TMP_REG1		1691228	0		=			
ANR	1691693	Identifier	dst		1691228	0					
ANR	1691694	Identifier	TMP_REG1		1691228	1					
ANR	1691695	SwitchStatement	switch ( op )		1691228	7					
ANR	1691696	Condition	op	1345:10:37034:37035	1691228	0	True				
ANR	1691697	Identifier	op		1691228	0					
ANR	1691698	CompoundStatement		96:14:2573:2573	1691228	1					
ANR	1691699	Label	case SLJIT_MOV :	1346:2:37042:37056	1691228	0	True				
ANR	1691700	Identifier	SLJIT_MOV		1691228	0					
ANR	1691701	Label	case SLJIT_MOV_P :	1347:2:37060:37076	1691228	1	True				
ANR	1691702	Identifier	SLJIT_MOV_P		1691228	0					
ANR	1691703	Label	case SLJIT_MOV_UI :	1349:2:37137:37154	1691228	2	True				
ANR	1691704	Identifier	SLJIT_MOV_UI		1691228	0					
ANR	1691705	Label	case SLJIT_MOV_SI :	1350:2:37158:37175	1691228	3	True				
ANR	1691706	Identifier	SLJIT_MOV_SI		1691228	0					
ANR	1691707	ExpressionStatement	"FAIL_IF ( emit_mov ( compiler , dst , dstw , src , srcw ) )"	1352:3:37187:37236	1691228	4	True				
ANR	1691708	CallExpression	"FAIL_IF ( emit_mov ( compiler , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691709	Callee	FAIL_IF		1691228	0					
ANR	1691710	Identifier	FAIL_IF		1691228	0					
ANR	1691711	ArgumentList	"emit_mov ( compiler , dst , dstw , src , srcw )"		1691228	1					
ANR	1691712	Argument	"emit_mov ( compiler , dst , dstw , src , srcw )"		1691228	0					
ANR	1691713	CallExpression	"emit_mov ( compiler , dst , dstw , src , srcw )"		1691228	0					
ANR	1691714	Callee	emit_mov		1691228	0					
ANR	1691715	Identifier	emit_mov		1691228	0					
ANR	1691716	ArgumentList	compiler		1691228	1					
ANR	1691717	Argument	compiler		1691228	0					
ANR	1691718	Identifier	compiler		1691228	0					
ANR	1691719	Argument	dst		1691228	1					
ANR	1691720	Identifier	dst		1691228	0					
ANR	1691721	Argument	dstw		1691228	2					
ANR	1691722	Identifier	dstw		1691228	0					
ANR	1691723	Argument	src		1691228	3					
ANR	1691724	Identifier	src		1691228	0					
ANR	1691725	Argument	srcw		1691228	4					
ANR	1691726	Identifier	srcw		1691228	0					
ANR	1691727	BreakStatement	break ;	1353:3:37241:37246	1691228	5	True				
ANR	1691728	Label	case SLJIT_MOV_UB :	1354:2:37250:37267	1691228	6	True				
ANR	1691729	Identifier	SLJIT_MOV_UB		1691228	0					
ANR	1691730	ExpressionStatement	"FAIL_IF ( emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw ) )"	1355:3:37272:37329	1691228	7	True				
ANR	1691731	CallExpression	"FAIL_IF ( emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691732	Callee	FAIL_IF		1691228	0					
ANR	1691733	Identifier	FAIL_IF		1691228	0					
ANR	1691734	ArgumentList	"emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw )"		1691228	1					
ANR	1691735	Argument	"emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691736	CallExpression	"emit_mov_byte ( compiler , 0 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691737	Callee	emit_mov_byte		1691228	0					
ANR	1691738	Identifier	emit_mov_byte		1691228	0					
ANR	1691739	ArgumentList	compiler		1691228	1					
ANR	1691740	Argument	compiler		1691228	0					
ANR	1691741	Identifier	compiler		1691228	0					
ANR	1691742	Argument	0		1691228	1					
ANR	1691743	PrimaryExpression	0		1691228	0					
ANR	1691744	Argument	dst		1691228	2					
ANR	1691745	Identifier	dst		1691228	0					
ANR	1691746	Argument	dstw		1691228	3					
ANR	1691747	Identifier	dstw		1691228	0					
ANR	1691748	Argument	src		1691228	4					
ANR	1691749	Identifier	src		1691228	0					
ANR	1691750	Argument	srcw		1691228	5					
ANR	1691751	Identifier	srcw		1691228	0					
ANR	1691752	BreakStatement	break ;	1356:3:37334:37339	1691228	8	True				
ANR	1691753	Label	case SLJIT_MOV_SB :	1357:2:37343:37360	1691228	9	True				
ANR	1691754	Identifier	SLJIT_MOV_SB		1691228	0					
ANR	1691755	ExpressionStatement	"FAIL_IF ( emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw ) )"	1358:3:37365:37422	1691228	10	True				
ANR	1691756	CallExpression	"FAIL_IF ( emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691757	Callee	FAIL_IF		1691228	0					
ANR	1691758	Identifier	FAIL_IF		1691228	0					
ANR	1691759	ArgumentList	"emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw )"		1691228	1					
ANR	1691760	Argument	"emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691761	CallExpression	"emit_mov_byte ( compiler , 1 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691762	Callee	emit_mov_byte		1691228	0					
ANR	1691763	Identifier	emit_mov_byte		1691228	0					
ANR	1691764	ArgumentList	compiler		1691228	1					
ANR	1691765	Argument	compiler		1691228	0					
ANR	1691766	Identifier	compiler		1691228	0					
ANR	1691767	Argument	1		1691228	1					
ANR	1691768	PrimaryExpression	1		1691228	0					
ANR	1691769	Argument	dst		1691228	2					
ANR	1691770	Identifier	dst		1691228	0					
ANR	1691771	Argument	dstw		1691228	3					
ANR	1691772	Identifier	dstw		1691228	0					
ANR	1691773	Argument	src		1691228	4					
ANR	1691774	Identifier	src		1691228	0					
ANR	1691775	Argument	srcw		1691228	5					
ANR	1691776	Identifier	srcw		1691228	0					
ANR	1691777	BreakStatement	break ;	1359:3:37427:37432	1691228	11	True				
ANR	1691778	Label	case SLJIT_MOV_UH :	1360:2:37436:37453	1691228	12	True				
ANR	1691779	Identifier	SLJIT_MOV_UH		1691228	0					
ANR	1691780	ExpressionStatement	"FAIL_IF ( emit_mov_half ( compiler , 0 , dst , dstw , src , srcw ) )"	1361:3:37458:37515	1691228	13	True				
ANR	1691781	CallExpression	"FAIL_IF ( emit_mov_half ( compiler , 0 , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691782	Callee	FAIL_IF		1691228	0					
ANR	1691783	Identifier	FAIL_IF		1691228	0					
ANR	1691784	ArgumentList	"emit_mov_half ( compiler , 0 , dst , dstw , src , srcw )"		1691228	1					
ANR	1691785	Argument	"emit_mov_half ( compiler , 0 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691786	CallExpression	"emit_mov_half ( compiler , 0 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691787	Callee	emit_mov_half		1691228	0					
ANR	1691788	Identifier	emit_mov_half		1691228	0					
ANR	1691789	ArgumentList	compiler		1691228	1					
ANR	1691790	Argument	compiler		1691228	0					
ANR	1691791	Identifier	compiler		1691228	0					
ANR	1691792	Argument	0		1691228	1					
ANR	1691793	PrimaryExpression	0		1691228	0					
ANR	1691794	Argument	dst		1691228	2					
ANR	1691795	Identifier	dst		1691228	0					
ANR	1691796	Argument	dstw		1691228	3					
ANR	1691797	Identifier	dstw		1691228	0					
ANR	1691798	Argument	src		1691228	4					
ANR	1691799	Identifier	src		1691228	0					
ANR	1691800	Argument	srcw		1691228	5					
ANR	1691801	Identifier	srcw		1691228	0					
ANR	1691802	BreakStatement	break ;	1362:3:37520:37525	1691228	14	True				
ANR	1691803	Label	case SLJIT_MOV_SH :	1363:2:37529:37546	1691228	15	True				
ANR	1691804	Identifier	SLJIT_MOV_SH		1691228	0					
ANR	1691805	ExpressionStatement	"FAIL_IF ( emit_mov_half ( compiler , 1 , dst , dstw , src , srcw ) )"	1364:3:37551:37608	1691228	16	True				
ANR	1691806	CallExpression	"FAIL_IF ( emit_mov_half ( compiler , 1 , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691807	Callee	FAIL_IF		1691228	0					
ANR	1691808	Identifier	FAIL_IF		1691228	0					
ANR	1691809	ArgumentList	"emit_mov_half ( compiler , 1 , dst , dstw , src , srcw )"		1691228	1					
ANR	1691810	Argument	"emit_mov_half ( compiler , 1 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691811	CallExpression	"emit_mov_half ( compiler , 1 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691812	Callee	emit_mov_half		1691228	0					
ANR	1691813	Identifier	emit_mov_half		1691228	0					
ANR	1691814	ArgumentList	compiler		1691228	1					
ANR	1691815	Argument	compiler		1691228	0					
ANR	1691816	Identifier	compiler		1691228	0					
ANR	1691817	Argument	1		1691228	1					
ANR	1691818	PrimaryExpression	1		1691228	0					
ANR	1691819	Argument	dst		1691228	2					
ANR	1691820	Identifier	dst		1691228	0					
ANR	1691821	Argument	dstw		1691228	3					
ANR	1691822	Identifier	dstw		1691228	0					
ANR	1691823	Argument	src		1691228	4					
ANR	1691824	Identifier	src		1691228	0					
ANR	1691825	Argument	srcw		1691228	5					
ANR	1691826	Identifier	srcw		1691228	0					
ANR	1691827	BreakStatement	break ;	1365:3:37613:37618	1691228	17	True				
ANR	1691828	Label	case SLJIT_MOV_UI :	1367:2:37679:37696	1691228	18	True				
ANR	1691829	Identifier	SLJIT_MOV_UI		1691228	0					
ANR	1691830	ExpressionStatement	"FAIL_IF ( emit_mov_int ( compiler , 0 , dst , dstw , src , srcw ) )"	1368:3:37701:37757	1691228	19	True				
ANR	1691831	CallExpression	"FAIL_IF ( emit_mov_int ( compiler , 0 , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691832	Callee	FAIL_IF		1691228	0					
ANR	1691833	Identifier	FAIL_IF		1691228	0					
ANR	1691834	ArgumentList	"emit_mov_int ( compiler , 0 , dst , dstw , src , srcw )"		1691228	1					
ANR	1691835	Argument	"emit_mov_int ( compiler , 0 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691836	CallExpression	"emit_mov_int ( compiler , 0 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691837	Callee	emit_mov_int		1691228	0					
ANR	1691838	Identifier	emit_mov_int		1691228	0					
ANR	1691839	ArgumentList	compiler		1691228	1					
ANR	1691840	Argument	compiler		1691228	0					
ANR	1691841	Identifier	compiler		1691228	0					
ANR	1691842	Argument	0		1691228	1					
ANR	1691843	PrimaryExpression	0		1691228	0					
ANR	1691844	Argument	dst		1691228	2					
ANR	1691845	Identifier	dst		1691228	0					
ANR	1691846	Argument	dstw		1691228	3					
ANR	1691847	Identifier	dstw		1691228	0					
ANR	1691848	Argument	src		1691228	4					
ANR	1691849	Identifier	src		1691228	0					
ANR	1691850	Argument	srcw		1691228	5					
ANR	1691851	Identifier	srcw		1691228	0					
ANR	1691852	BreakStatement	break ;	1369:3:37762:37767	1691228	20	True				
ANR	1691853	Label	case SLJIT_MOV_SI :	1370:2:37771:37788	1691228	21	True				
ANR	1691854	Identifier	SLJIT_MOV_SI		1691228	0					
ANR	1691855	ExpressionStatement	"FAIL_IF ( emit_mov_int ( compiler , 1 , dst , dstw , src , srcw ) )"	1371:3:37793:37849	1691228	22	True				
ANR	1691856	CallExpression	"FAIL_IF ( emit_mov_int ( compiler , 1 , dst , dstw , src , srcw ) )"		1691228	0					
ANR	1691857	Callee	FAIL_IF		1691228	0					
ANR	1691858	Identifier	FAIL_IF		1691228	0					
ANR	1691859	ArgumentList	"emit_mov_int ( compiler , 1 , dst , dstw , src , srcw )"		1691228	1					
ANR	1691860	Argument	"emit_mov_int ( compiler , 1 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691861	CallExpression	"emit_mov_int ( compiler , 1 , dst , dstw , src , srcw )"		1691228	0					
ANR	1691862	Callee	emit_mov_int		1691228	0					
ANR	1691863	Identifier	emit_mov_int		1691228	0					
ANR	1691864	ArgumentList	compiler		1691228	1					
ANR	1691865	Argument	compiler		1691228	0					
ANR	1691866	Identifier	compiler		1691228	0					
ANR	1691867	Argument	1		1691228	1					
ANR	1691868	PrimaryExpression	1		1691228	0					
ANR	1691869	Argument	dst		1691228	2					
ANR	1691870	Identifier	dst		1691228	0					
ANR	1691871	Argument	dstw		1691228	3					
ANR	1691872	Identifier	dstw		1691228	0					
ANR	1691873	Argument	src		1691228	4					
ANR	1691874	Identifier	src		1691228	0					
ANR	1691875	Argument	srcw		1691228	5					
ANR	1691876	Identifier	srcw		1691228	0					
ANR	1691877	BreakStatement	break ;	1372:3:37854:37859	1691228	23	True				
ANR	1691878	IfStatement	if ( SLJIT_UNLIKELY ( dst_is_ereg ) && dst == TMP_REG1 )		1691228	8					
ANR	1691879	Condition	SLJIT_UNLIKELY ( dst_is_ereg ) && dst == TMP_REG1	1377:6:37936:37981	1691228	0	True				
ANR	1691880	AndExpression	SLJIT_UNLIKELY ( dst_is_ereg ) && dst == TMP_REG1		1691228	0		&&			
ANR	1691881	CallExpression	SLJIT_UNLIKELY ( dst_is_ereg )		1691228	0					
ANR	1691882	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1691883	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1691884	ArgumentList	dst_is_ereg		1691228	1					
ANR	1691885	Argument	dst_is_ereg		1691228	0					
ANR	1691886	Identifier	dst_is_ereg		1691228	0					
ANR	1691887	EqualityExpression	dst == TMP_REG1		1691228	1		==			
ANR	1691888	Identifier	dst		1691228	0					
ANR	1691889	Identifier	TMP_REG1		1691228	1					
ANR	1691890	ReturnStatement	"return emit_mov ( compiler , SLJIT_MEM1 ( SLJIT_SP ) , dstw , TMP_REG1 , 0 ) ;"	1378:3:37987:38053	1691228	1	True				
ANR	1691891	CallExpression	"emit_mov ( compiler , SLJIT_MEM1 ( SLJIT_SP ) , dstw , TMP_REG1 , 0 )"		1691228	0					
ANR	1691892	Callee	emit_mov		1691228	0					
ANR	1691893	Identifier	emit_mov		1691228	0					
ANR	1691894	ArgumentList	compiler		1691228	1					
ANR	1691895	Argument	compiler		1691228	0					
ANR	1691896	Identifier	compiler		1691228	0					
ANR	1691897	Argument	SLJIT_MEM1 ( SLJIT_SP )		1691228	1					
ANR	1691898	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1691228	0					
ANR	1691899	Callee	SLJIT_MEM1		1691228	0					
ANR	1691900	Identifier	SLJIT_MEM1		1691228	0					
ANR	1691901	ArgumentList	SLJIT_SP		1691228	1					
ANR	1691902	Argument	SLJIT_SP		1691228	0					
ANR	1691903	Identifier	SLJIT_SP		1691228	0					
ANR	1691904	Argument	dstw		1691228	2					
ANR	1691905	Identifier	dstw		1691228	0					
ANR	1691906	Argument	TMP_REG1		1691228	3					
ANR	1691907	Identifier	TMP_REG1		1691228	0					
ANR	1691908	Argument	0		1691228	4					
ANR	1691909	PrimaryExpression	0		1691228	0					
ANR	1691910	IfStatement	if ( SLJIT_UNLIKELY ( update ) && ( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 ) )		1691228	9					
ANR	1691911	Condition	SLJIT_UNLIKELY ( update ) && ( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )	1381:6:38069:38176	1691228	0	True				
ANR	1691912	AndExpression	SLJIT_UNLIKELY ( update ) && ( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )		1691228	0		&&			
ANR	1691913	CallExpression	SLJIT_UNLIKELY ( update )		1691228	0					
ANR	1691914	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1691915	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1691916	ArgumentList	update		1691228	1					
ANR	1691917	Argument	update		1691228	0					
ANR	1691918	Identifier	update		1691228	0					
ANR	1691919	AndExpression	( dst & SLJIT_MEM ) && ( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )		1691228	1		&&			
ANR	1691920	BitAndExpression	dst & SLJIT_MEM		1691228	0		&			
ANR	1691921	Identifier	dst		1691228	0					
ANR	1691922	Identifier	SLJIT_MEM		1691228	1					
ANR	1691923	AndExpression	( dst & REG_MASK ) && ( dstw != 0 || ( dst & OFFS_REG_MASK ) != 0 )		1691228	1		&&			
ANR	1691924	BitAndExpression	dst & REG_MASK		1691228	0		&			
ANR	1691925	Identifier	dst		1691228	0					
ANR	1691926	Identifier	REG_MASK		1691228	1					
ANR	1691927	OrExpression	dstw != 0 || ( dst & OFFS_REG_MASK ) != 0		1691228	1		||			
ANR	1691928	EqualityExpression	dstw != 0		1691228	0		!=			
ANR	1691929	Identifier	dstw		1691228	0					
ANR	1691930	PrimaryExpression	0		1691228	1					
ANR	1691931	EqualityExpression	( dst & OFFS_REG_MASK ) != 0		1691228	1		!=			
ANR	1691932	BitAndExpression	dst & OFFS_REG_MASK		1691228	0		&			
ANR	1691933	Identifier	dst		1691228	0					
ANR	1691934	Identifier	OFFS_REG_MASK		1691228	1					
ANR	1691935	PrimaryExpression	0		1691228	1					
ANR	1691936	CompoundStatement		132:116:3714:3714	1691228	1					
ANR	1691937	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst & REG_MASK , 0 , dst , dstw )"	1382:3:38184:38254	1691228	0	True				
ANR	1691938	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst & REG_MASK , 0 , dst , dstw )"		1691228	0		=			
ANR	1691939	Identifier	inst		1691228	0					
ANR	1691940	CallExpression	"emit_x86_instruction ( compiler , 1 , dst & REG_MASK , 0 , dst , dstw )"		1691228	1					
ANR	1691941	Callee	emit_x86_instruction		1691228	0					
ANR	1691942	Identifier	emit_x86_instruction		1691228	0					
ANR	1691943	ArgumentList	compiler		1691228	1					
ANR	1691944	Argument	compiler		1691228	0					
ANR	1691945	Identifier	compiler		1691228	0					
ANR	1691946	Argument	1		1691228	1					
ANR	1691947	PrimaryExpression	1		1691228	0					
ANR	1691948	Argument	dst & REG_MASK		1691228	2					
ANR	1691949	BitAndExpression	dst & REG_MASK		1691228	0		&			
ANR	1691950	Identifier	dst		1691228	0					
ANR	1691951	Identifier	REG_MASK		1691228	1					
ANR	1691952	Argument	0		1691228	3					
ANR	1691953	PrimaryExpression	0		1691228	0					
ANR	1691954	Argument	dst		1691228	4					
ANR	1691955	Identifier	dst		1691228	0					
ANR	1691956	Argument	dstw		1691228	5					
ANR	1691957	Identifier	dstw		1691228	0					
ANR	1691958	ExpressionStatement	FAIL_IF ( ! inst )	1383:3:38259:38273	1691228	1	True				
ANR	1691959	CallExpression	FAIL_IF ( ! inst )		1691228	0					
ANR	1691960	Callee	FAIL_IF		1691228	0					
ANR	1691961	Identifier	FAIL_IF		1691228	0					
ANR	1691962	ArgumentList	! inst		1691228	1					
ANR	1691963	Argument	! inst		1691228	0					
ANR	1691964	UnaryOperationExpression	! inst		1691228	0					
ANR	1691965	UnaryOperator	!		1691228	0					
ANR	1691966	Identifier	inst		1691228	1					
ANR	1691967	ExpressionStatement	* inst = LEA_r_m	1384:3:38278:38293	1691228	2	True				
ANR	1691968	AssignmentExpression	* inst = LEA_r_m		1691228	0		=			
ANR	1691969	UnaryOperationExpression	* inst		1691228	0					
ANR	1691970	UnaryOperator	*		1691228	0					
ANR	1691971	Identifier	inst		1691228	1					
ANR	1691972	Identifier	LEA_r_m		1691228	1					
ANR	1691973	ReturnStatement	return SLJIT_SUCCESS ;	1386:2:38301:38321	1691228	10	True				
ANR	1691974	Identifier	SLJIT_SUCCESS		1691228	0					
ANR	1691975	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op_flags ) ) )		1691228	14					
ANR	1691976	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op_flags ) )	1389:5:38332:38366	1691228	0	True				
ANR	1691977	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op_flags ) )		1691228	0					
ANR	1691978	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1691979	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1691980	ArgumentList	GET_FLAGS ( op_flags )		1691228	1					
ANR	1691981	Argument	GET_FLAGS ( op_flags )		1691228	0					
ANR	1691982	CallExpression	GET_FLAGS ( op_flags )		1691228	0					
ANR	1691983	Callee	GET_FLAGS		1691228	0					
ANR	1691984	Identifier	GET_FLAGS		1691228	0					
ANR	1691985	ArgumentList	op_flags		1691228	1					
ANR	1691986	Argument	op_flags		1691228	0					
ANR	1691987	Identifier	op_flags		1691228	0					
ANR	1691988	ExpressionStatement	compiler -> flags_saved = 0	1390:2:38371:38396	1691228	1	True				
ANR	1691989	AssignmentExpression	compiler -> flags_saved = 0		1691228	0		=			
ANR	1691990	PtrMemberAccess	compiler -> flags_saved		1691228	0					
ANR	1691991	Identifier	compiler		1691228	0					
ANR	1691992	Identifier	flags_saved		1691228	1					
ANR	1691993	PrimaryExpression	0		1691228	1					
ANR	1691994	SwitchStatement	switch ( op )		1691228	15					
ANR	1691995	Condition	op	1392:9:38408:38409	1691228	0	True				
ANR	1691996	Identifier	op		1691228	0					
ANR	1691997	CompoundStatement		143:13:3947:3947	1691228	1					
ANR	1691998	Label	case SLJIT_NOT :	1393:1:38415:38429	1691228	0	True				
ANR	1691999	Identifier	SLJIT_NOT		1691228	0					
ANR	1692000	IfStatement	if ( SLJIT_UNLIKELY ( op_flags & SLJIT_SET_E ) )		1691228	1					
ANR	1692001	Condition	SLJIT_UNLIKELY ( op_flags & SLJIT_SET_E )	1394:6:38437:38474	1691228	0	True				
ANR	1692002	CallExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_SET_E )		1691228	0					
ANR	1692003	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1692004	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1692005	ArgumentList	op_flags & SLJIT_SET_E		1691228	1					
ANR	1692006	Argument	op_flags & SLJIT_SET_E		1691228	0					
ANR	1692007	BitAndExpression	op_flags & SLJIT_SET_E		1691228	0		&			
ANR	1692008	Identifier	op_flags		1691228	0					
ANR	1692009	Identifier	SLJIT_SET_E		1691228	1					
ANR	1692010	ReturnStatement	"return emit_not_with_flags ( compiler , dst , dstw , src , srcw ) ;"	1395:3:38480:38538	1691228	1	True				
ANR	1692011	CallExpression	"emit_not_with_flags ( compiler , dst , dstw , src , srcw )"		1691228	0					
ANR	1692012	Callee	emit_not_with_flags		1691228	0					
ANR	1692013	Identifier	emit_not_with_flags		1691228	0					
ANR	1692014	ArgumentList	compiler		1691228	1					
ANR	1692015	Argument	compiler		1691228	0					
ANR	1692016	Identifier	compiler		1691228	0					
ANR	1692017	Argument	dst		1691228	1					
ANR	1692018	Identifier	dst		1691228	0					
ANR	1692019	Argument	dstw		1691228	2					
ANR	1692020	Identifier	dstw		1691228	0					
ANR	1692021	Argument	src		1691228	3					
ANR	1692022	Identifier	src		1691228	0					
ANR	1692023	Argument	srcw		1691228	4					
ANR	1692024	Identifier	srcw		1691228	0					
ANR	1692025	ReturnStatement	"return emit_unary ( compiler , NOT_rm , dst , dstw , src , srcw ) ;"	1396:2:38542:38599	1691228	2	True				
ANR	1692026	CallExpression	"emit_unary ( compiler , NOT_rm , dst , dstw , src , srcw )"		1691228	0					
ANR	1692027	Callee	emit_unary		1691228	0					
ANR	1692028	Identifier	emit_unary		1691228	0					
ANR	1692029	ArgumentList	compiler		1691228	1					
ANR	1692030	Argument	compiler		1691228	0					
ANR	1692031	Identifier	compiler		1691228	0					
ANR	1692032	Argument	NOT_rm		1691228	1					
ANR	1692033	Identifier	NOT_rm		1691228	0					
ANR	1692034	Argument	dst		1691228	2					
ANR	1692035	Identifier	dst		1691228	0					
ANR	1692036	Argument	dstw		1691228	3					
ANR	1692037	Identifier	dstw		1691228	0					
ANR	1692038	Argument	src		1691228	4					
ANR	1692039	Identifier	src		1691228	0					
ANR	1692040	Argument	srcw		1691228	5					
ANR	1692041	Identifier	srcw		1691228	0					
ANR	1692042	Label	case SLJIT_NEG :	1398:1:38603:38617	1691228	3	True				
ANR	1692043	Identifier	SLJIT_NEG		1691228	0					
ANR	1692044	IfStatement	if ( SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1691228	4					
ANR	1692045	Condition	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	1399:6:38625:38693	1691228	0	True				
ANR	1692046	AndExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1691228	0		&&			
ANR	1692047	CallExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS )		1691228	0					
ANR	1692048	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1692049	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1692050	ArgumentList	op_flags & SLJIT_KEEP_FLAGS		1691228	1					
ANR	1692051	Argument	op_flags & SLJIT_KEEP_FLAGS		1691228	0					
ANR	1692052	BitAndExpression	op_flags & SLJIT_KEEP_FLAGS		1691228	0		&			
ANR	1692053	Identifier	op_flags		1691228	0					
ANR	1692054	Identifier	SLJIT_KEEP_FLAGS		1691228	1					
ANR	1692055	UnaryOperationExpression	! compiler -> flags_saved		1691228	1					
ANR	1692056	UnaryOperator	!		1691228	0					
ANR	1692057	PtrMemberAccess	compiler -> flags_saved		1691228	1					
ANR	1692058	Identifier	compiler		1691228	0					
ANR	1692059	Identifier	flags_saved		1691228	1					
ANR	1692060	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	1400:3:38699:38733	1691228	1	True				
ANR	1692061	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1691228	0					
ANR	1692062	Callee	FAIL_IF		1691228	0					
ANR	1692063	Identifier	FAIL_IF		1691228	0					
ANR	1692064	ArgumentList	emit_save_flags ( compiler )		1691228	1					
ANR	1692065	Argument	emit_save_flags ( compiler )		1691228	0					
ANR	1692066	CallExpression	emit_save_flags ( compiler )		1691228	0					
ANR	1692067	Callee	emit_save_flags		1691228	0					
ANR	1692068	Identifier	emit_save_flags		1691228	0					
ANR	1692069	ArgumentList	compiler		1691228	1					
ANR	1692070	Argument	compiler		1691228	0					
ANR	1692071	Identifier	compiler		1691228	0					
ANR	1692072	ReturnStatement	"return emit_unary ( compiler , NEG_rm , dst , dstw , src , srcw ) ;"	1401:2:38737:38794	1691228	5	True				
ANR	1692073	CallExpression	"emit_unary ( compiler , NEG_rm , dst , dstw , src , srcw )"		1691228	0					
ANR	1692074	Callee	emit_unary		1691228	0					
ANR	1692075	Identifier	emit_unary		1691228	0					
ANR	1692076	ArgumentList	compiler		1691228	1					
ANR	1692077	Argument	compiler		1691228	0					
ANR	1692078	Identifier	compiler		1691228	0					
ANR	1692079	Argument	NEG_rm		1691228	1					
ANR	1692080	Identifier	NEG_rm		1691228	0					
ANR	1692081	Argument	dst		1691228	2					
ANR	1692082	Identifier	dst		1691228	0					
ANR	1692083	Argument	dstw		1691228	3					
ANR	1692084	Identifier	dstw		1691228	0					
ANR	1692085	Argument	src		1691228	4					
ANR	1692086	Identifier	src		1691228	0					
ANR	1692087	Argument	srcw		1691228	5					
ANR	1692088	Identifier	srcw		1691228	0					
ANR	1692089	Label	case SLJIT_CLZ :	1403:1:38798:38812	1691228	6	True				
ANR	1692090	Identifier	SLJIT_CLZ		1691228	0					
ANR	1692091	IfStatement	if ( SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1691228	7					
ANR	1692092	Condition	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	1404:6:38820:38888	1691228	0	True				
ANR	1692093	AndExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1691228	0		&&			
ANR	1692094	CallExpression	SLJIT_UNLIKELY ( op_flags & SLJIT_KEEP_FLAGS )		1691228	0					
ANR	1692095	Callee	SLJIT_UNLIKELY		1691228	0					
ANR	1692096	Identifier	SLJIT_UNLIKELY		1691228	0					
ANR	1692097	ArgumentList	op_flags & SLJIT_KEEP_FLAGS		1691228	1					
ANR	1692098	Argument	op_flags & SLJIT_KEEP_FLAGS		1691228	0					
ANR	1692099	BitAndExpression	op_flags & SLJIT_KEEP_FLAGS		1691228	0		&			
ANR	1692100	Identifier	op_flags		1691228	0					
ANR	1692101	Identifier	SLJIT_KEEP_FLAGS		1691228	1					
ANR	1692102	UnaryOperationExpression	! compiler -> flags_saved		1691228	1					
ANR	1692103	UnaryOperator	!		1691228	0					
ANR	1692104	PtrMemberAccess	compiler -> flags_saved		1691228	1					
ANR	1692105	Identifier	compiler		1691228	0					
ANR	1692106	Identifier	flags_saved		1691228	1					
ANR	1692107	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	1405:3:38894:38928	1691228	1	True				
ANR	1692108	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1691228	0					
ANR	1692109	Callee	FAIL_IF		1691228	0					
ANR	1692110	Identifier	FAIL_IF		1691228	0					
ANR	1692111	ArgumentList	emit_save_flags ( compiler )		1691228	1					
ANR	1692112	Argument	emit_save_flags ( compiler )		1691228	0					
ANR	1692113	CallExpression	emit_save_flags ( compiler )		1691228	0					
ANR	1692114	Callee	emit_save_flags		1691228	0					
ANR	1692115	Identifier	emit_save_flags		1691228	0					
ANR	1692116	ArgumentList	compiler		1691228	1					
ANR	1692117	Argument	compiler		1691228	0					
ANR	1692118	Identifier	compiler		1691228	0					
ANR	1692119	ReturnStatement	"return emit_clz ( compiler , op_flags , dst , dstw , src , srcw ) ;"	1406:2:38932:38989	1691228	8	True				
ANR	1692120	CallExpression	"emit_clz ( compiler , op_flags , dst , dstw , src , srcw )"		1691228	0					
ANR	1692121	Callee	emit_clz		1691228	0					
ANR	1692122	Identifier	emit_clz		1691228	0					
ANR	1692123	ArgumentList	compiler		1691228	1					
ANR	1692124	Argument	compiler		1691228	0					
ANR	1692125	Identifier	compiler		1691228	0					
ANR	1692126	Argument	op_flags		1691228	1					
ANR	1692127	Identifier	op_flags		1691228	0					
ANR	1692128	Argument	dst		1691228	2					
ANR	1692129	Identifier	dst		1691228	0					
ANR	1692130	Argument	dstw		1691228	3					
ANR	1692131	Identifier	dstw		1691228	0					
ANR	1692132	Argument	src		1691228	4					
ANR	1692133	Identifier	src		1691228	0					
ANR	1692134	Argument	srcw		1691228	5					
ANR	1692135	Identifier	srcw		1691228	0					
ANR	1692136	ReturnStatement	return SLJIT_SUCCESS ;	1409:1:38996:39016	1691228	16	True				
ANR	1692137	Identifier	SLJIT_SUCCESS		1691228	0					
ANR	1692138	Statement	undef	1412:2:39078:39082	1691228	17	True				
ANR	1692139	Statement	src_is_ereg	1412:8:39084:39094	1691228	18	True				
ANR	1692140	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1691228	1					
ANR	1692141	Identifier	sljit_emit_op1		1691228	2					
ANR	1692142	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1691228	3					
ANR	1692143	Parameter	struct sljit_compiler * compiler	1247:49:34358:34388	1691228	0	True				
ANR	1692144	ParameterType	struct sljit_compiler *		1691228	0					
ANR	1692145	Identifier	compiler		1691228	1					
ANR	1692146	Parameter	sljit_si op	1247:82:34391:34401	1691228	1	True				
ANR	1692147	ParameterType	sljit_si		1691228	0					
ANR	1692148	Identifier	op		1691228	1					
ANR	1692149	Parameter	sljit_si dst	1248:1:34405:34416	1691228	2	True				
ANR	1692150	ParameterType	sljit_si		1691228	0					
ANR	1692151	Identifier	dst		1691228	1					
ANR	1692152	Parameter	sljit_sw dstw	1248:15:34419:34431	1691228	3	True				
ANR	1692153	ParameterType	sljit_sw		1691228	0					
ANR	1692154	Identifier	dstw		1691228	1					
ANR	1692155	Parameter	sljit_si src	1249:1:34435:34446	1691228	4	True				
ANR	1692156	ParameterType	sljit_si		1691228	0					
ANR	1692157	Identifier	src		1691228	1					
ANR	1692158	Parameter	sljit_sw srcw	1249:15:34449:34461	1691228	5	True				
ANR	1692159	ParameterType	sljit_sw		1691228	0					
ANR	1692160	Identifier	srcw		1691228	1					
ANR	1692161	CFGEntryNode	ENTRY		1691228		True				
ANR	1692162	CFGExitNode	EXIT		1691228		True				
ANR	1692163	Symbol	TMP_REG1		1691228						
ANR	1692164	Symbol	SLJIT_MEM		1691228						
ANR	1692165	Symbol	compiler -> flags_saved		1691228						
ANR	1692166	Symbol	TYPE_CAST_NEEDED		1691228						
ANR	1692167	Symbol	SLJIT_MOVU_SI		1691228						
ANR	1692168	Symbol	* compiler		1691228						
ANR	1692169	Symbol	GET_OPCODE		1691228						
ANR	1692170	Symbol	SLJIT_IMM		1691228						
ANR	1692171	Symbol	emit_not_with_flags		1691228						
ANR	1692172	Symbol	SLJIT_KEEP_FLAGS		1691228						
ANR	1692173	Symbol	SLJIT_MOV_UI		1691228						
ANR	1692174	Symbol	emit_mov_int		1691228						
ANR	1692175	Symbol	FAST_IS_REG		1691228						
ANR	1692176	Symbol	emit_mov_half		1691228						
ANR	1692177	Symbol	emit_save_flags		1691228						
ANR	1692178	Symbol	src_is_ereg		1691228						
ANR	1692179	Symbol	check_sljit_emit_op1		1691228						
ANR	1692180	Symbol	srcw		1691228						
ANR	1692181	Symbol	OFFS_REG_MASK		1691228						
ANR	1692182	Symbol	emit_mov		1691228						
ANR	1692183	Symbol	SLJIT_MOV_P		1691228						
ANR	1692184	Symbol	SLJIT_UNLIKELY		1691228						
ANR	1692185	Symbol	dst		1691228						
ANR	1692186	Symbol	SLJIT_MOV		1691228						
ANR	1692187	Symbol	emit_unary		1691228						
ANR	1692188	Symbol	update		1691228						
ANR	1692189	Symbol	SLJIT_SP		1691228						
ANR	1692190	Symbol	SLJIT_SET_E		1691228						
ANR	1692191	Symbol	GET_FLAGS		1691228						
ANR	1692192	Symbol	SLJIT_MOVU		1691228						
ANR	1692193	Symbol	GET_ALL_FLAGS		1691228						
ANR	1692194	Symbol	SLJIT_MOV_SI		1691228						
ANR	1692195	Symbol	LEA_r_m		1691228						
ANR	1692196	Symbol	SLJIT_MOVU_UI		1691228						
ANR	1692197	Symbol	compiler		1691228						
ANR	1692198	Symbol	NOT_rm		1691228						
ANR	1692199	Symbol	emit_clz		1691228						
ANR	1692200	Symbol	SLJIT_MOVU_P		1691228						
ANR	1692201	Symbol	op		1691228						
ANR	1692202	Symbol	op_flags		1691228						
ANR	1692203	Symbol	REG_MASK		1691228						
ANR	1692204	Symbol	emit_x86_instruction		1691228						
ANR	1692205	Symbol	NEG_rm		1691228						
ANR	1692206	Symbol	* inst		1691228						
ANR	1692207	Symbol	src		1691228						
ANR	1692208	Symbol	movu_offset		1691228						
ANR	1692209	Symbol	SLJIT_INT_OP		1691228						
ANR	1692210	Symbol	SLJIT_SUCCESS		1691228						
ANR	1692211	Symbol	SLJIT_MEM1		1691228						
ANR	1692212	Symbol	dst_is_ereg		1691228						
ANR	1692213	Symbol	inst		1691228						
ANR	1692214	Symbol	emit_mov_byte		1691228						
ANR	1692215	Symbol	compiler -> mode32		1691228						
ANR	1692216	Symbol	dstw		1691228						
ANR	1692217	Function	emit_cum_binary	1446:0:40018:43111							
ANR	1692218	FunctionDef	"emit_cum_binary (struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1692217	0					
ANR	1692219	CompoundStatement		1451:0:40248:43111	1692217	0					
ANR	1692220	IdentifierDeclStatement	sljit_ub * inst ;	1452:1:40251:40265	1692217	0	True				
ANR	1692221	IdentifierDecl	* inst		1692217	0					
ANR	1692222	IdentifierDeclType	sljit_ub *		1692217	0					
ANR	1692223	Identifier	inst		1692217	1					
ANR	1692224	IfStatement	if ( dst == SLJIT_UNUSED )		1692217	1					
ANR	1692225	Condition	dst == SLJIT_UNUSED	1454:5:40273:40291	1692217	0	True				
ANR	1692226	EqualityExpression	dst == SLJIT_UNUSED		1692217	0		==			
ANR	1692227	Identifier	dst		1692217	0					
ANR	1692228	Identifier	SLJIT_UNUSED		1692217	1					
ANR	1692229	CompoundStatement		4:26:45:45	1692217	1					
ANR	1692230	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1455:2:40298:40342	1692217	0	True				
ANR	1692231	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1692217	0					
ANR	1692232	Callee	EMIT_MOV		1692217	0					
ANR	1692233	Identifier	EMIT_MOV		1692217	0					
ANR	1692234	ArgumentList	compiler		1692217	1					
ANR	1692235	Argument	compiler		1692217	0					
ANR	1692236	Identifier	compiler		1692217	0					
ANR	1692237	Argument	TMP_REG1		1692217	1					
ANR	1692238	Identifier	TMP_REG1		1692217	0					
ANR	1692239	Argument	0		1692217	2					
ANR	1692240	PrimaryExpression	0		1692217	0					
ANR	1692241	Argument	src1		1692217	3					
ANR	1692242	Identifier	src1		1692217	0					
ANR	1692243	Argument	src1w		1692217	4					
ANR	1692244	Identifier	src1w		1692217	0					
ANR	1692245	IfStatement	if ( src2 & SLJIT_IMM )		1692217	1					
ANR	1692246	Condition	src2 & SLJIT_IMM	1456:6:40350:40365	1692217	0	True				
ANR	1692247	BitAndExpression	src2 & SLJIT_IMM		1692217	0		&			
ANR	1692248	Identifier	src2		1692217	0					
ANR	1692249	Identifier	SLJIT_IMM		1692217	1					
ANR	1692250	CompoundStatement		6:24:119:119	1692217	1					
ANR	1692251	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1457:3:40373:40418	1692217	0	True				
ANR	1692252	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1692217	0					
ANR	1692253	Callee	BINARY_IMM		1692217	0					
ANR	1692254	Identifier	BINARY_IMM		1692217	0					
ANR	1692255	ArgumentList	op_imm		1692217	1					
ANR	1692256	Argument	op_imm		1692217	0					
ANR	1692257	Identifier	op_imm		1692217	0					
ANR	1692258	Argument	op_mr		1692217	1					
ANR	1692259	Identifier	op_mr		1692217	0					
ANR	1692260	Argument	src2w		1692217	2					
ANR	1692261	Identifier	src2w		1692217	0					
ANR	1692262	Argument	TMP_REG1		1692217	3					
ANR	1692263	Identifier	TMP_REG1		1692217	0					
ANR	1692264	Argument	0		1692217	4					
ANR	1692265	PrimaryExpression	0		1692217	0					
ANR	1692266	ElseStatement	else		1692217	0					
ANR	1692267	CompoundStatement		9:7:182:182	1692217	0					
ANR	1692268	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1460:3:40436:40502	1692217	0	True				
ANR	1692269	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692217	0		=			
ANR	1692270	Identifier	inst		1692217	0					
ANR	1692271	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692217	1					
ANR	1692272	Callee	emit_x86_instruction		1692217	0					
ANR	1692273	Identifier	emit_x86_instruction		1692217	0					
ANR	1692274	ArgumentList	compiler		1692217	1					
ANR	1692275	Argument	compiler		1692217	0					
ANR	1692276	Identifier	compiler		1692217	0					
ANR	1692277	Argument	1		1692217	1					
ANR	1692278	PrimaryExpression	1		1692217	0					
ANR	1692279	Argument	TMP_REG1		1692217	2					
ANR	1692280	Identifier	TMP_REG1		1692217	0					
ANR	1692281	Argument	0		1692217	3					
ANR	1692282	PrimaryExpression	0		1692217	0					
ANR	1692283	Argument	src2		1692217	4					
ANR	1692284	Identifier	src2		1692217	0					
ANR	1692285	Argument	src2w		1692217	5					
ANR	1692286	Identifier	src2w		1692217	0					
ANR	1692287	ExpressionStatement	FAIL_IF ( ! inst )	1461:3:40507:40521	1692217	1	True				
ANR	1692288	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692289	Callee	FAIL_IF		1692217	0					
ANR	1692290	Identifier	FAIL_IF		1692217	0					
ANR	1692291	ArgumentList	! inst		1692217	1					
ANR	1692292	Argument	! inst		1692217	0					
ANR	1692293	UnaryOperationExpression	! inst		1692217	0					
ANR	1692294	UnaryOperator	!		1692217	0					
ANR	1692295	Identifier	inst		1692217	1					
ANR	1692296	ExpressionStatement	* inst = op_rm	1462:3:40526:40539	1692217	2	True				
ANR	1692297	AssignmentExpression	* inst = op_rm		1692217	0		=			
ANR	1692298	UnaryOperationExpression	* inst		1692217	0					
ANR	1692299	UnaryOperator	*		1692217	0					
ANR	1692300	Identifier	inst		1692217	1					
ANR	1692301	Identifier	op_rm		1692217	1					
ANR	1692302	ReturnStatement	return SLJIT_SUCCESS ;	1464:2:40547:40567	1692217	2	True				
ANR	1692303	Identifier	SLJIT_SUCCESS		1692217	0					
ANR	1692304	IfStatement	if ( dst == src1 && dstw == src1w )		1692217	2					
ANR	1692305	Condition	dst == src1 && dstw == src1w	1467:5:40578:40605	1692217	0	True				
ANR	1692306	AndExpression	dst == src1 && dstw == src1w		1692217	0		&&			
ANR	1692307	EqualityExpression	dst == src1		1692217	0		==			
ANR	1692308	Identifier	dst		1692217	0					
ANR	1692309	Identifier	src1		1692217	1					
ANR	1692310	EqualityExpression	dstw == src1w		1692217	1		==			
ANR	1692311	Identifier	dstw		1692217	0					
ANR	1692312	Identifier	src1w		1692217	1					
ANR	1692313	CompoundStatement		17:35:359:359	1692217	1					
ANR	1692314	IfStatement	if ( src2 & SLJIT_IMM )		1692217	0					
ANR	1692315	Condition	src2 & SLJIT_IMM	1468:6:40616:40631	1692217	0	True				
ANR	1692316	BitAndExpression	src2 & SLJIT_IMM		1692217	0		&			
ANR	1692317	Identifier	src2		1692217	0					
ANR	1692318	Identifier	SLJIT_IMM		1692217	1					
ANR	1692319	CompoundStatement		18:24:385:385	1692217	1					
ANR	1692320	IfStatement	if ( ( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1692217	0					
ANR	1692321	Condition	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1470:7:40700:40793	1692217	0	True				
ANR	1692322	AndExpression	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1692217	0		&&			
ANR	1692323	EqualityExpression	dst == SLJIT_R0		1692217	0		==			
ANR	1692324	Identifier	dst		1692217	0					
ANR	1692325	Identifier	SLJIT_R0		1692217	1					
ANR	1692326	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1692217	1		&&			
ANR	1692327	OrExpression	src2w > 127 || src2w < - 128		1692217	0		||			
ANR	1692328	RelationalExpression	src2w > 127		1692217	0		>			
ANR	1692329	Identifier	src2w		1692217	0					
ANR	1692330	PrimaryExpression	127		1692217	1					
ANR	1692331	RelationalExpression	src2w < - 128		1692217	1		<			
ANR	1692332	Identifier	src2w		1692217	0					
ANR	1692333	UnaryOperationExpression	- 128		1692217	1					
ANR	1692334	UnaryOperator	-		1692217	0					
ANR	1692335	PrimaryExpression	128		1692217	1					
ANR	1692336	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1692217	1		||			
ANR	1692337	PtrMemberAccess	compiler -> mode32		1692217	0					
ANR	1692338	Identifier	compiler		1692217	0					
ANR	1692339	Identifier	mode32		1692217	1					
ANR	1692340	CallExpression	IS_HALFWORD ( src2w )		1692217	1					
ANR	1692341	Callee	IS_HALFWORD		1692217	0					
ANR	1692342	Identifier	IS_HALFWORD		1692217	0					
ANR	1692343	ArgumentList	src2w		1692217	1					
ANR	1692344	Argument	src2w		1692217	0					
ANR	1692345	Identifier	src2w		1692217	0					
ANR	1692346	CompoundStatement		20:103:547:547	1692217	1					
ANR	1692347	ExpressionStatement	"BINARY_EAX_IMM ( op_eax_imm , src2w )"	1474:4:40876:40909	1692217	0	True				
ANR	1692348	CallExpression	"BINARY_EAX_IMM ( op_eax_imm , src2w )"		1692217	0					
ANR	1692349	Callee	BINARY_EAX_IMM		1692217	0					
ANR	1692350	Identifier	BINARY_EAX_IMM		1692217	0					
ANR	1692351	ArgumentList	op_eax_imm		1692217	1					
ANR	1692352	Argument	op_eax_imm		1692217	0					
ANR	1692353	Identifier	op_eax_imm		1692217	0					
ANR	1692354	Argument	src2w		1692217	1					
ANR	1692355	Identifier	src2w		1692217	0					
ANR	1692356	ElseStatement	else		1692217	0					
ANR	1692357	CompoundStatement		26:8:675:675	1692217	0					
ANR	1692358	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"	1477:4:40930:40973	1692217	0	True				
ANR	1692359	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"		1692217	0					
ANR	1692360	Callee	BINARY_IMM		1692217	0					
ANR	1692361	Identifier	BINARY_IMM		1692217	0					
ANR	1692362	ArgumentList	op_imm		1692217	1					
ANR	1692363	Argument	op_imm		1692217	0					
ANR	1692364	Identifier	op_imm		1692217	0					
ANR	1692365	Argument	op_mr		1692217	1					
ANR	1692366	Identifier	op_mr		1692217	0					
ANR	1692367	Argument	src2w		1692217	2					
ANR	1692368	Identifier	src2w		1692217	0					
ANR	1692369	Argument	dst		1692217	3					
ANR	1692370	Identifier	dst		1692217	0					
ANR	1692371	Argument	dstw		1692217	4					
ANR	1692372	Identifier	dstw		1692217	0					
ANR	1692373	ElseStatement	else		1692217	0					
ANR	1692374	IfStatement	if ( FAST_IS_REG ( dst ) )		1692217	0					
ANR	1692375	Condition	FAST_IS_REG ( dst )	1480:11:40995:41010	1692217	0	True				
ANR	1692376	CallExpression	FAST_IS_REG ( dst )		1692217	0					
ANR	1692377	Callee	FAST_IS_REG		1692217	0					
ANR	1692378	Identifier	FAST_IS_REG		1692217	0					
ANR	1692379	ArgumentList	dst		1692217	1					
ANR	1692380	Argument	dst		1692217	0					
ANR	1692381	Identifier	dst		1692217	0					
ANR	1692382	CompoundStatement		30:29:764:764	1692217	1					
ANR	1692383	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"	1481:3:41018:41082	1692217	0	True				
ANR	1692384	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1692217	0		=			
ANR	1692385	Identifier	inst		1692217	0					
ANR	1692386	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1692217	1					
ANR	1692387	Callee	emit_x86_instruction		1692217	0					
ANR	1692388	Identifier	emit_x86_instruction		1692217	0					
ANR	1692389	ArgumentList	compiler		1692217	1					
ANR	1692390	Argument	compiler		1692217	0					
ANR	1692391	Identifier	compiler		1692217	0					
ANR	1692392	Argument	1		1692217	1					
ANR	1692393	PrimaryExpression	1		1692217	0					
ANR	1692394	Argument	dst		1692217	2					
ANR	1692395	Identifier	dst		1692217	0					
ANR	1692396	Argument	dstw		1692217	3					
ANR	1692397	Identifier	dstw		1692217	0					
ANR	1692398	Argument	src2		1692217	4					
ANR	1692399	Identifier	src2		1692217	0					
ANR	1692400	Argument	src2w		1692217	5					
ANR	1692401	Identifier	src2w		1692217	0					
ANR	1692402	ExpressionStatement	FAIL_IF ( ! inst )	1482:3:41087:41101	1692217	1	True				
ANR	1692403	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692404	Callee	FAIL_IF		1692217	0					
ANR	1692405	Identifier	FAIL_IF		1692217	0					
ANR	1692406	ArgumentList	! inst		1692217	1					
ANR	1692407	Argument	! inst		1692217	0					
ANR	1692408	UnaryOperationExpression	! inst		1692217	0					
ANR	1692409	UnaryOperator	!		1692217	0					
ANR	1692410	Identifier	inst		1692217	1					
ANR	1692411	ExpressionStatement	* inst = op_rm	1483:3:41106:41119	1692217	2	True				
ANR	1692412	AssignmentExpression	* inst = op_rm		1692217	0		=			
ANR	1692413	UnaryOperationExpression	* inst		1692217	0					
ANR	1692414	UnaryOperator	*		1692217	0					
ANR	1692415	Identifier	inst		1692217	1					
ANR	1692416	Identifier	op_rm		1692217	1					
ANR	1692417	ElseStatement	else		1692217	0					
ANR	1692418	IfStatement	if ( FAST_IS_REG ( src2 ) )		1692217	0					
ANR	1692419	Condition	FAST_IS_REG ( src2 )	1485:11:41136:41152	1692217	0	True				
ANR	1692420	CallExpression	FAST_IS_REG ( src2 )		1692217	0					
ANR	1692421	Callee	FAST_IS_REG		1692217	0					
ANR	1692422	Identifier	FAST_IS_REG		1692217	0					
ANR	1692423	ArgumentList	src2		1692217	1					
ANR	1692424	Argument	src2		1692217	0					
ANR	1692425	Identifier	src2		1692217	0					
ANR	1692426	CompoundStatement		35:30:906:906	1692217	1					
ANR	1692427	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"	1487:3:41212:41276	1692217	0	True				
ANR	1692428	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1692217	0		=			
ANR	1692429	Identifier	inst		1692217	0					
ANR	1692430	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1692217	1					
ANR	1692431	Callee	emit_x86_instruction		1692217	0					
ANR	1692432	Identifier	emit_x86_instruction		1692217	0					
ANR	1692433	ArgumentList	compiler		1692217	1					
ANR	1692434	Argument	compiler		1692217	0					
ANR	1692435	Identifier	compiler		1692217	0					
ANR	1692436	Argument	1		1692217	1					
ANR	1692437	PrimaryExpression	1		1692217	0					
ANR	1692438	Argument	src2		1692217	2					
ANR	1692439	Identifier	src2		1692217	0					
ANR	1692440	Argument	src2w		1692217	3					
ANR	1692441	Identifier	src2w		1692217	0					
ANR	1692442	Argument	dst		1692217	4					
ANR	1692443	Identifier	dst		1692217	0					
ANR	1692444	Argument	dstw		1692217	5					
ANR	1692445	Identifier	dstw		1692217	0					
ANR	1692446	ExpressionStatement	FAIL_IF ( ! inst )	1488:3:41281:41295	1692217	1	True				
ANR	1692447	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692448	Callee	FAIL_IF		1692217	0					
ANR	1692449	Identifier	FAIL_IF		1692217	0					
ANR	1692450	ArgumentList	! inst		1692217	1					
ANR	1692451	Argument	! inst		1692217	0					
ANR	1692452	UnaryOperationExpression	! inst		1692217	0					
ANR	1692453	UnaryOperator	!		1692217	0					
ANR	1692454	Identifier	inst		1692217	1					
ANR	1692455	ExpressionStatement	* inst = op_mr	1489:3:41300:41313	1692217	2	True				
ANR	1692456	AssignmentExpression	* inst = op_mr		1692217	0		=			
ANR	1692457	UnaryOperationExpression	* inst		1692217	0					
ANR	1692458	UnaryOperator	*		1692217	0					
ANR	1692459	Identifier	inst		1692217	1					
ANR	1692460	Identifier	op_mr		1692217	1					
ANR	1692461	ElseStatement	else		1692217	0					
ANR	1692462	CompoundStatement		41:7:1077:1077	1692217	0					
ANR	1692463	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"	1492:3:41331:41375	1692217	0	True				
ANR	1692464	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"		1692217	0					
ANR	1692465	Callee	EMIT_MOV		1692217	0					
ANR	1692466	Identifier	EMIT_MOV		1692217	0					
ANR	1692467	ArgumentList	compiler		1692217	1					
ANR	1692468	Argument	compiler		1692217	0					
ANR	1692469	Identifier	compiler		1692217	0					
ANR	1692470	Argument	TMP_REG1		1692217	1					
ANR	1692471	Identifier	TMP_REG1		1692217	0					
ANR	1692472	Argument	0		1692217	2					
ANR	1692473	PrimaryExpression	0		1692217	0					
ANR	1692474	Argument	src2		1692217	3					
ANR	1692475	Identifier	src2		1692217	0					
ANR	1692476	Argument	src2w		1692217	4					
ANR	1692477	Identifier	src2w		1692217	0					
ANR	1692478	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	1493:3:41380:41444	1692217	1	True				
ANR	1692479	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1692217	0		=			
ANR	1692480	Identifier	inst		1692217	0					
ANR	1692481	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1692217	1					
ANR	1692482	Callee	emit_x86_instruction		1692217	0					
ANR	1692483	Identifier	emit_x86_instruction		1692217	0					
ANR	1692484	ArgumentList	compiler		1692217	1					
ANR	1692485	Argument	compiler		1692217	0					
ANR	1692486	Identifier	compiler		1692217	0					
ANR	1692487	Argument	1		1692217	1					
ANR	1692488	PrimaryExpression	1		1692217	0					
ANR	1692489	Argument	TMP_REG1		1692217	2					
ANR	1692490	Identifier	TMP_REG1		1692217	0					
ANR	1692491	Argument	0		1692217	3					
ANR	1692492	PrimaryExpression	0		1692217	0					
ANR	1692493	Argument	dst		1692217	4					
ANR	1692494	Identifier	dst		1692217	0					
ANR	1692495	Argument	dstw		1692217	5					
ANR	1692496	Identifier	dstw		1692217	0					
ANR	1692497	ExpressionStatement	FAIL_IF ( ! inst )	1494:3:41449:41463	1692217	2	True				
ANR	1692498	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692499	Callee	FAIL_IF		1692217	0					
ANR	1692500	Identifier	FAIL_IF		1692217	0					
ANR	1692501	ArgumentList	! inst		1692217	1					
ANR	1692502	Argument	! inst		1692217	0					
ANR	1692503	UnaryOperationExpression	! inst		1692217	0					
ANR	1692504	UnaryOperator	!		1692217	0					
ANR	1692505	Identifier	inst		1692217	1					
ANR	1692506	ExpressionStatement	* inst = op_mr	1495:3:41468:41481	1692217	3	True				
ANR	1692507	AssignmentExpression	* inst = op_mr		1692217	0		=			
ANR	1692508	UnaryOperationExpression	* inst		1692217	0					
ANR	1692509	UnaryOperator	*		1692217	0					
ANR	1692510	Identifier	inst		1692217	1					
ANR	1692511	Identifier	op_mr		1692217	1					
ANR	1692512	ReturnStatement	return SLJIT_SUCCESS ;	1497:2:41489:41509	1692217	1	True				
ANR	1692513	Identifier	SLJIT_SUCCESS		1692217	0					
ANR	1692514	IfStatement	if ( dst == src2 && dstw == src2w )		1692217	3					
ANR	1692515	Condition	dst == src2 && dstw == src2w	1501:5:41559:41586	1692217	0	True				
ANR	1692516	AndExpression	dst == src2 && dstw == src2w		1692217	0		&&			
ANR	1692517	EqualityExpression	dst == src2		1692217	0		==			
ANR	1692518	Identifier	dst		1692217	0					
ANR	1692519	Identifier	src2		1692217	1					
ANR	1692520	EqualityExpression	dstw == src2w		1692217	1		==			
ANR	1692521	Identifier	dstw		1692217	0					
ANR	1692522	Identifier	src2w		1692217	1					
ANR	1692523	CompoundStatement		51:35:1340:1340	1692217	1					
ANR	1692524	IfStatement	if ( src1 & SLJIT_IMM )		1692217	0					
ANR	1692525	Condition	src1 & SLJIT_IMM	1502:6:41597:41612	1692217	0	True				
ANR	1692526	BitAndExpression	src1 & SLJIT_IMM		1692217	0		&			
ANR	1692527	Identifier	src1		1692217	0					
ANR	1692528	Identifier	SLJIT_IMM		1692217	1					
ANR	1692529	CompoundStatement		52:24:1366:1366	1692217	1					
ANR	1692530	IfStatement	if ( ( dst == SLJIT_R0 ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) ) )		1692217	0					
ANR	1692531	Condition	( dst == SLJIT_R0 ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )	1504:7:41681:41774	1692217	0	True				
ANR	1692532	AndExpression	( dst == SLJIT_R0 ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1692217	0		&&			
ANR	1692533	EqualityExpression	dst == SLJIT_R0		1692217	0		==			
ANR	1692534	Identifier	dst		1692217	0					
ANR	1692535	Identifier	SLJIT_R0		1692217	1					
ANR	1692536	AndExpression	( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1692217	1		&&			
ANR	1692537	OrExpression	src1w > 127 || src1w < - 128		1692217	0		||			
ANR	1692538	RelationalExpression	src1w > 127		1692217	0		>			
ANR	1692539	Identifier	src1w		1692217	0					
ANR	1692540	PrimaryExpression	127		1692217	1					
ANR	1692541	RelationalExpression	src1w < - 128		1692217	1		<			
ANR	1692542	Identifier	src1w		1692217	0					
ANR	1692543	UnaryOperationExpression	- 128		1692217	1					
ANR	1692544	UnaryOperator	-		1692217	0					
ANR	1692545	PrimaryExpression	128		1692217	1					
ANR	1692546	OrExpression	compiler -> mode32 || IS_HALFWORD ( src1w )		1692217	1		||			
ANR	1692547	PtrMemberAccess	compiler -> mode32		1692217	0					
ANR	1692548	Identifier	compiler		1692217	0					
ANR	1692549	Identifier	mode32		1692217	1					
ANR	1692550	CallExpression	IS_HALFWORD ( src1w )		1692217	1					
ANR	1692551	Callee	IS_HALFWORD		1692217	0					
ANR	1692552	Identifier	IS_HALFWORD		1692217	0					
ANR	1692553	ArgumentList	src1w		1692217	1					
ANR	1692554	Argument	src1w		1692217	0					
ANR	1692555	Identifier	src1w		1692217	0					
ANR	1692556	CompoundStatement		54:103:1528:1528	1692217	1					
ANR	1692557	ExpressionStatement	"BINARY_EAX_IMM ( op_eax_imm , src1w )"	1508:4:41857:41890	1692217	0	True				
ANR	1692558	CallExpression	"BINARY_EAX_IMM ( op_eax_imm , src1w )"		1692217	0					
ANR	1692559	Callee	BINARY_EAX_IMM		1692217	0					
ANR	1692560	Identifier	BINARY_EAX_IMM		1692217	0					
ANR	1692561	ArgumentList	op_eax_imm		1692217	1					
ANR	1692562	Argument	op_eax_imm		1692217	0					
ANR	1692563	Identifier	op_eax_imm		1692217	0					
ANR	1692564	Argument	src1w		1692217	1					
ANR	1692565	Identifier	src1w		1692217	0					
ANR	1692566	ElseStatement	else		1692217	0					
ANR	1692567	CompoundStatement		60:8:1656:1656	1692217	0					
ANR	1692568	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src1w , dst , dstw )"	1511:4:41911:41954	1692217	0	True				
ANR	1692569	CallExpression	"BINARY_IMM ( op_imm , op_mr , src1w , dst , dstw )"		1692217	0					
ANR	1692570	Callee	BINARY_IMM		1692217	0					
ANR	1692571	Identifier	BINARY_IMM		1692217	0					
ANR	1692572	ArgumentList	op_imm		1692217	1					
ANR	1692573	Argument	op_imm		1692217	0					
ANR	1692574	Identifier	op_imm		1692217	0					
ANR	1692575	Argument	op_mr		1692217	1					
ANR	1692576	Identifier	op_mr		1692217	0					
ANR	1692577	Argument	src1w		1692217	2					
ANR	1692578	Identifier	src1w		1692217	0					
ANR	1692579	Argument	dst		1692217	3					
ANR	1692580	Identifier	dst		1692217	0					
ANR	1692581	Argument	dstw		1692217	4					
ANR	1692582	Identifier	dstw		1692217	0					
ANR	1692583	ElseStatement	else		1692217	0					
ANR	1692584	IfStatement	if ( FAST_IS_REG ( dst ) )		1692217	0					
ANR	1692585	Condition	FAST_IS_REG ( dst )	1514:11:41976:41991	1692217	0	True				
ANR	1692586	CallExpression	FAST_IS_REG ( dst )		1692217	0					
ANR	1692587	Callee	FAST_IS_REG		1692217	0					
ANR	1692588	Identifier	FAST_IS_REG		1692217	0					
ANR	1692589	ArgumentList	dst		1692217	1					
ANR	1692590	Argument	dst		1692217	0					
ANR	1692591	Identifier	dst		1692217	0					
ANR	1692592	CompoundStatement		64:29:1745:1745	1692217	1					
ANR	1692593	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src1 , src1w )"	1515:3:41999:42063	1692217	0	True				
ANR	1692594	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src1 , src1w )"		1692217	0		=			
ANR	1692595	Identifier	inst		1692217	0					
ANR	1692596	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , dstw , src1 , src1w )"		1692217	1					
ANR	1692597	Callee	emit_x86_instruction		1692217	0					
ANR	1692598	Identifier	emit_x86_instruction		1692217	0					
ANR	1692599	ArgumentList	compiler		1692217	1					
ANR	1692600	Argument	compiler		1692217	0					
ANR	1692601	Identifier	compiler		1692217	0					
ANR	1692602	Argument	1		1692217	1					
ANR	1692603	PrimaryExpression	1		1692217	0					
ANR	1692604	Argument	dst		1692217	2					
ANR	1692605	Identifier	dst		1692217	0					
ANR	1692606	Argument	dstw		1692217	3					
ANR	1692607	Identifier	dstw		1692217	0					
ANR	1692608	Argument	src1		1692217	4					
ANR	1692609	Identifier	src1		1692217	0					
ANR	1692610	Argument	src1w		1692217	5					
ANR	1692611	Identifier	src1w		1692217	0					
ANR	1692612	ExpressionStatement	FAIL_IF ( ! inst )	1516:3:42068:42082	1692217	1	True				
ANR	1692613	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692614	Callee	FAIL_IF		1692217	0					
ANR	1692615	Identifier	FAIL_IF		1692217	0					
ANR	1692616	ArgumentList	! inst		1692217	1					
ANR	1692617	Argument	! inst		1692217	0					
ANR	1692618	UnaryOperationExpression	! inst		1692217	0					
ANR	1692619	UnaryOperator	!		1692217	0					
ANR	1692620	Identifier	inst		1692217	1					
ANR	1692621	ExpressionStatement	* inst = op_rm	1517:3:42087:42100	1692217	2	True				
ANR	1692622	AssignmentExpression	* inst = op_rm		1692217	0		=			
ANR	1692623	UnaryOperationExpression	* inst		1692217	0					
ANR	1692624	UnaryOperator	*		1692217	0					
ANR	1692625	Identifier	inst		1692217	1					
ANR	1692626	Identifier	op_rm		1692217	1					
ANR	1692627	ElseStatement	else		1692217	0					
ANR	1692628	IfStatement	if ( FAST_IS_REG ( src1 ) )		1692217	0					
ANR	1692629	Condition	FAST_IS_REG ( src1 )	1519:11:42117:42133	1692217	0	True				
ANR	1692630	CallExpression	FAST_IS_REG ( src1 )		1692217	0					
ANR	1692631	Callee	FAST_IS_REG		1692217	0					
ANR	1692632	Identifier	FAST_IS_REG		1692217	0					
ANR	1692633	ArgumentList	src1		1692217	1					
ANR	1692634	Argument	src1		1692217	0					
ANR	1692635	Identifier	src1		1692217	0					
ANR	1692636	CompoundStatement		69:30:1887:1887	1692217	1					
ANR	1692637	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src1 , src1w , dst , dstw )"	1520:3:42141:42205	1692217	0	True				
ANR	1692638	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src1 , src1w , dst , dstw )"		1692217	0		=			
ANR	1692639	Identifier	inst		1692217	0					
ANR	1692640	CallExpression	"emit_x86_instruction ( compiler , 1 , src1 , src1w , dst , dstw )"		1692217	1					
ANR	1692641	Callee	emit_x86_instruction		1692217	0					
ANR	1692642	Identifier	emit_x86_instruction		1692217	0					
ANR	1692643	ArgumentList	compiler		1692217	1					
ANR	1692644	Argument	compiler		1692217	0					
ANR	1692645	Identifier	compiler		1692217	0					
ANR	1692646	Argument	1		1692217	1					
ANR	1692647	PrimaryExpression	1		1692217	0					
ANR	1692648	Argument	src1		1692217	2					
ANR	1692649	Identifier	src1		1692217	0					
ANR	1692650	Argument	src1w		1692217	3					
ANR	1692651	Identifier	src1w		1692217	0					
ANR	1692652	Argument	dst		1692217	4					
ANR	1692653	Identifier	dst		1692217	0					
ANR	1692654	Argument	dstw		1692217	5					
ANR	1692655	Identifier	dstw		1692217	0					
ANR	1692656	ExpressionStatement	FAIL_IF ( ! inst )	1521:3:42210:42224	1692217	1	True				
ANR	1692657	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692658	Callee	FAIL_IF		1692217	0					
ANR	1692659	Identifier	FAIL_IF		1692217	0					
ANR	1692660	ArgumentList	! inst		1692217	1					
ANR	1692661	Argument	! inst		1692217	0					
ANR	1692662	UnaryOperationExpression	! inst		1692217	0					
ANR	1692663	UnaryOperator	!		1692217	0					
ANR	1692664	Identifier	inst		1692217	1					
ANR	1692665	ExpressionStatement	* inst = op_mr	1522:3:42229:42242	1692217	2	True				
ANR	1692666	AssignmentExpression	* inst = op_mr		1692217	0		=			
ANR	1692667	UnaryOperationExpression	* inst		1692217	0					
ANR	1692668	UnaryOperator	*		1692217	0					
ANR	1692669	Identifier	inst		1692217	1					
ANR	1692670	Identifier	op_mr		1692217	1					
ANR	1692671	ElseStatement	else		1692217	0					
ANR	1692672	CompoundStatement		74:7:2006:2006	1692217	0					
ANR	1692673	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1525:3:42260:42304	1692217	0	True				
ANR	1692674	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1692217	0					
ANR	1692675	Callee	EMIT_MOV		1692217	0					
ANR	1692676	Identifier	EMIT_MOV		1692217	0					
ANR	1692677	ArgumentList	compiler		1692217	1					
ANR	1692678	Argument	compiler		1692217	0					
ANR	1692679	Identifier	compiler		1692217	0					
ANR	1692680	Argument	TMP_REG1		1692217	1					
ANR	1692681	Identifier	TMP_REG1		1692217	0					
ANR	1692682	Argument	0		1692217	2					
ANR	1692683	PrimaryExpression	0		1692217	0					
ANR	1692684	Argument	src1		1692217	3					
ANR	1692685	Identifier	src1		1692217	0					
ANR	1692686	Argument	src1w		1692217	4					
ANR	1692687	Identifier	src1w		1692217	0					
ANR	1692688	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	1526:3:42309:42373	1692217	1	True				
ANR	1692689	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1692217	0		=			
ANR	1692690	Identifier	inst		1692217	0					
ANR	1692691	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1692217	1					
ANR	1692692	Callee	emit_x86_instruction		1692217	0					
ANR	1692693	Identifier	emit_x86_instruction		1692217	0					
ANR	1692694	ArgumentList	compiler		1692217	1					
ANR	1692695	Argument	compiler		1692217	0					
ANR	1692696	Identifier	compiler		1692217	0					
ANR	1692697	Argument	1		1692217	1					
ANR	1692698	PrimaryExpression	1		1692217	0					
ANR	1692699	Argument	TMP_REG1		1692217	2					
ANR	1692700	Identifier	TMP_REG1		1692217	0					
ANR	1692701	Argument	0		1692217	3					
ANR	1692702	PrimaryExpression	0		1692217	0					
ANR	1692703	Argument	dst		1692217	4					
ANR	1692704	Identifier	dst		1692217	0					
ANR	1692705	Argument	dstw		1692217	5					
ANR	1692706	Identifier	dstw		1692217	0					
ANR	1692707	ExpressionStatement	FAIL_IF ( ! inst )	1527:3:42378:42392	1692217	2	True				
ANR	1692708	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692709	Callee	FAIL_IF		1692217	0					
ANR	1692710	Identifier	FAIL_IF		1692217	0					
ANR	1692711	ArgumentList	! inst		1692217	1					
ANR	1692712	Argument	! inst		1692217	0					
ANR	1692713	UnaryOperationExpression	! inst		1692217	0					
ANR	1692714	UnaryOperator	!		1692217	0					
ANR	1692715	Identifier	inst		1692217	1					
ANR	1692716	ExpressionStatement	* inst = op_mr	1528:3:42397:42410	1692217	3	True				
ANR	1692717	AssignmentExpression	* inst = op_mr		1692217	0		=			
ANR	1692718	UnaryOperationExpression	* inst		1692217	0					
ANR	1692719	UnaryOperator	*		1692217	0					
ANR	1692720	Identifier	inst		1692217	1					
ANR	1692721	Identifier	op_mr		1692217	1					
ANR	1692722	ReturnStatement	return SLJIT_SUCCESS ;	1530:2:42418:42438	1692217	1	True				
ANR	1692723	Identifier	SLJIT_SUCCESS		1692217	0					
ANR	1692724	IfStatement	if ( FAST_IS_REG ( dst ) )		1692217	4					
ANR	1692725	Condition	FAST_IS_REG ( dst )	1534:5:42473:42488	1692217	0	True				
ANR	1692726	CallExpression	FAST_IS_REG ( dst )		1692217	0					
ANR	1692727	Callee	FAST_IS_REG		1692217	0					
ANR	1692728	Identifier	FAST_IS_REG		1692217	0					
ANR	1692729	ArgumentList	dst		1692217	1					
ANR	1692730	Argument	dst		1692217	0					
ANR	1692731	Identifier	dst		1692217	0					
ANR	1692732	CompoundStatement		84:23:2242:2242	1692217	1					
ANR	1692733	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	1535:2:42495:42534	1692217	0	True				
ANR	1692734	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1692217	0					
ANR	1692735	Callee	EMIT_MOV		1692217	0					
ANR	1692736	Identifier	EMIT_MOV		1692217	0					
ANR	1692737	ArgumentList	compiler		1692217	1					
ANR	1692738	Argument	compiler		1692217	0					
ANR	1692739	Identifier	compiler		1692217	0					
ANR	1692740	Argument	dst		1692217	1					
ANR	1692741	Identifier	dst		1692217	0					
ANR	1692742	Argument	0		1692217	2					
ANR	1692743	PrimaryExpression	0		1692217	0					
ANR	1692744	Argument	src1		1692217	3					
ANR	1692745	Identifier	src1		1692217	0					
ANR	1692746	Argument	src1w		1692217	4					
ANR	1692747	Identifier	src1w		1692217	0					
ANR	1692748	IfStatement	if ( src2 & SLJIT_IMM )		1692217	1					
ANR	1692749	Condition	src2 & SLJIT_IMM	1536:6:42542:42557	1692217	0	True				
ANR	1692750	BitAndExpression	src2 & SLJIT_IMM		1692217	0		&			
ANR	1692751	Identifier	src2		1692217	0					
ANR	1692752	Identifier	SLJIT_IMM		1692217	1					
ANR	1692753	CompoundStatement		86:24:2311:2311	1692217	1					
ANR	1692754	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"	1537:3:42565:42605	1692217	0	True				
ANR	1692755	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"		1692217	0					
ANR	1692756	Callee	BINARY_IMM		1692217	0					
ANR	1692757	Identifier	BINARY_IMM		1692217	0					
ANR	1692758	ArgumentList	op_imm		1692217	1					
ANR	1692759	Argument	op_imm		1692217	0					
ANR	1692760	Identifier	op_imm		1692217	0					
ANR	1692761	Argument	op_mr		1692217	1					
ANR	1692762	Identifier	op_mr		1692217	0					
ANR	1692763	Argument	src2w		1692217	2					
ANR	1692764	Identifier	src2w		1692217	0					
ANR	1692765	Argument	dst		1692217	3					
ANR	1692766	Identifier	dst		1692217	0					
ANR	1692767	Argument	0		1692217	4					
ANR	1692768	PrimaryExpression	0		1692217	0					
ANR	1692769	ElseStatement	else		1692217	0					
ANR	1692770	CompoundStatement		89:7:2369:2369	1692217	0					
ANR	1692771	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"	1540:3:42623:42684	1692217	0	True				
ANR	1692772	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1692217	0		=			
ANR	1692773	Identifier	inst		1692217	0					
ANR	1692774	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1692217	1					
ANR	1692775	Callee	emit_x86_instruction		1692217	0					
ANR	1692776	Identifier	emit_x86_instruction		1692217	0					
ANR	1692777	ArgumentList	compiler		1692217	1					
ANR	1692778	Argument	compiler		1692217	0					
ANR	1692779	Identifier	compiler		1692217	0					
ANR	1692780	Argument	1		1692217	1					
ANR	1692781	PrimaryExpression	1		1692217	0					
ANR	1692782	Argument	dst		1692217	2					
ANR	1692783	Identifier	dst		1692217	0					
ANR	1692784	Argument	0		1692217	3					
ANR	1692785	PrimaryExpression	0		1692217	0					
ANR	1692786	Argument	src2		1692217	4					
ANR	1692787	Identifier	src2		1692217	0					
ANR	1692788	Argument	src2w		1692217	5					
ANR	1692789	Identifier	src2w		1692217	0					
ANR	1692790	ExpressionStatement	FAIL_IF ( ! inst )	1541:3:42689:42703	1692217	1	True				
ANR	1692791	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692792	Callee	FAIL_IF		1692217	0					
ANR	1692793	Identifier	FAIL_IF		1692217	0					
ANR	1692794	ArgumentList	! inst		1692217	1					
ANR	1692795	Argument	! inst		1692217	0					
ANR	1692796	UnaryOperationExpression	! inst		1692217	0					
ANR	1692797	UnaryOperator	!		1692217	0					
ANR	1692798	Identifier	inst		1692217	1					
ANR	1692799	ExpressionStatement	* inst = op_rm	1542:3:42708:42721	1692217	2	True				
ANR	1692800	AssignmentExpression	* inst = op_rm		1692217	0		=			
ANR	1692801	UnaryOperationExpression	* inst		1692217	0					
ANR	1692802	UnaryOperator	*		1692217	0					
ANR	1692803	Identifier	inst		1692217	1					
ANR	1692804	Identifier	op_rm		1692217	1					
ANR	1692805	ElseStatement	else		1692217	0					
ANR	1692806	CompoundStatement		95:6:2487:2487	1692217	0					
ANR	1692807	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1547:2:42791:42835	1692217	0	True				
ANR	1692808	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1692217	0					
ANR	1692809	Callee	EMIT_MOV		1692217	0					
ANR	1692810	Identifier	EMIT_MOV		1692217	0					
ANR	1692811	ArgumentList	compiler		1692217	1					
ANR	1692812	Argument	compiler		1692217	0					
ANR	1692813	Identifier	compiler		1692217	0					
ANR	1692814	Argument	TMP_REG1		1692217	1					
ANR	1692815	Identifier	TMP_REG1		1692217	0					
ANR	1692816	Argument	0		1692217	2					
ANR	1692817	PrimaryExpression	0		1692217	0					
ANR	1692818	Argument	src1		1692217	3					
ANR	1692819	Identifier	src1		1692217	0					
ANR	1692820	Argument	src1w		1692217	4					
ANR	1692821	Identifier	src1w		1692217	0					
ANR	1692822	IfStatement	if ( src2 & SLJIT_IMM )		1692217	1					
ANR	1692823	Condition	src2 & SLJIT_IMM	1548:6:42843:42858	1692217	0	True				
ANR	1692824	BitAndExpression	src2 & SLJIT_IMM		1692217	0		&			
ANR	1692825	Identifier	src2		1692217	0					
ANR	1692826	Identifier	SLJIT_IMM		1692217	1					
ANR	1692827	CompoundStatement		98:24:2612:2612	1692217	1					
ANR	1692828	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1549:3:42866:42911	1692217	0	True				
ANR	1692829	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1692217	0					
ANR	1692830	Callee	BINARY_IMM		1692217	0					
ANR	1692831	Identifier	BINARY_IMM		1692217	0					
ANR	1692832	ArgumentList	op_imm		1692217	1					
ANR	1692833	Argument	op_imm		1692217	0					
ANR	1692834	Identifier	op_imm		1692217	0					
ANR	1692835	Argument	op_mr		1692217	1					
ANR	1692836	Identifier	op_mr		1692217	0					
ANR	1692837	Argument	src2w		1692217	2					
ANR	1692838	Identifier	src2w		1692217	0					
ANR	1692839	Argument	TMP_REG1		1692217	3					
ANR	1692840	Identifier	TMP_REG1		1692217	0					
ANR	1692841	Argument	0		1692217	4					
ANR	1692842	PrimaryExpression	0		1692217	0					
ANR	1692843	ElseStatement	else		1692217	0					
ANR	1692844	CompoundStatement		101:7:2675:2675	1692217	0					
ANR	1692845	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1552:3:42929:42995	1692217	0	True				
ANR	1692846	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692217	0		=			
ANR	1692847	Identifier	inst		1692217	0					
ANR	1692848	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692217	1					
ANR	1692849	Callee	emit_x86_instruction		1692217	0					
ANR	1692850	Identifier	emit_x86_instruction		1692217	0					
ANR	1692851	ArgumentList	compiler		1692217	1					
ANR	1692852	Argument	compiler		1692217	0					
ANR	1692853	Identifier	compiler		1692217	0					
ANR	1692854	Argument	1		1692217	1					
ANR	1692855	PrimaryExpression	1		1692217	0					
ANR	1692856	Argument	TMP_REG1		1692217	2					
ANR	1692857	Identifier	TMP_REG1		1692217	0					
ANR	1692858	Argument	0		1692217	3					
ANR	1692859	PrimaryExpression	0		1692217	0					
ANR	1692860	Argument	src2		1692217	4					
ANR	1692861	Identifier	src2		1692217	0					
ANR	1692862	Argument	src2w		1692217	5					
ANR	1692863	Identifier	src2w		1692217	0					
ANR	1692864	ExpressionStatement	FAIL_IF ( ! inst )	1553:3:43000:43014	1692217	1	True				
ANR	1692865	CallExpression	FAIL_IF ( ! inst )		1692217	0					
ANR	1692866	Callee	FAIL_IF		1692217	0					
ANR	1692867	Identifier	FAIL_IF		1692217	0					
ANR	1692868	ArgumentList	! inst		1692217	1					
ANR	1692869	Argument	! inst		1692217	0					
ANR	1692870	UnaryOperationExpression	! inst		1692217	0					
ANR	1692871	UnaryOperator	!		1692217	0					
ANR	1692872	Identifier	inst		1692217	1					
ANR	1692873	ExpressionStatement	* inst = op_rm	1554:3:43019:43032	1692217	2	True				
ANR	1692874	AssignmentExpression	* inst = op_rm		1692217	0		=			
ANR	1692875	UnaryOperationExpression	* inst		1692217	0					
ANR	1692876	UnaryOperator	*		1692217	0					
ANR	1692877	Identifier	inst		1692217	1					
ANR	1692878	Identifier	op_rm		1692217	1					
ANR	1692879	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1556:2:43040:43082	1692217	2	True				
ANR	1692880	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1692217	0					
ANR	1692881	Callee	EMIT_MOV		1692217	0					
ANR	1692882	Identifier	EMIT_MOV		1692217	0					
ANR	1692883	ArgumentList	compiler		1692217	1					
ANR	1692884	Argument	compiler		1692217	0					
ANR	1692885	Identifier	compiler		1692217	0					
ANR	1692886	Argument	dst		1692217	1					
ANR	1692887	Identifier	dst		1692217	0					
ANR	1692888	Argument	dstw		1692217	2					
ANR	1692889	Identifier	dstw		1692217	0					
ANR	1692890	Argument	TMP_REG1		1692217	3					
ANR	1692891	Identifier	TMP_REG1		1692217	0					
ANR	1692892	Argument	0		1692217	4					
ANR	1692893	PrimaryExpression	0		1692217	0					
ANR	1692894	ReturnStatement	return SLJIT_SUCCESS ;	1559:1:43089:43109	1692217	5	True				
ANR	1692895	Identifier	SLJIT_SUCCESS		1692217	0					
ANR	1692896	ReturnType	static sljit_si		1692217	1					
ANR	1692897	Identifier	emit_cum_binary		1692217	2					
ANR	1692898	ParameterList	"struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1692217	3					
ANR	1692899	Parameter	struct sljit_compiler * compiler	1446:32:40050:40080	1692217	0	True				
ANR	1692900	ParameterType	struct sljit_compiler *		1692217	0					
ANR	1692901	Identifier	compiler		1692217	1					
ANR	1692902	Parameter	sljit_ub op_rm	1447:1:40084:40097	1692217	1	True				
ANR	1692903	ParameterType	sljit_ub		1692217	0					
ANR	1692904	Identifier	op_rm		1692217	1					
ANR	1692905	Parameter	sljit_ub op_mr	1447:17:40100:40113	1692217	2	True				
ANR	1692906	ParameterType	sljit_ub		1692217	0					
ANR	1692907	Identifier	op_mr		1692217	1					
ANR	1692908	Parameter	sljit_ub op_imm	1447:33:40116:40130	1692217	3	True				
ANR	1692909	ParameterType	sljit_ub		1692217	0					
ANR	1692910	Identifier	op_imm		1692217	1					
ANR	1692911	Parameter	sljit_ub op_eax_imm	1447:50:40133:40151	1692217	4	True				
ANR	1692912	ParameterType	sljit_ub		1692217	0					
ANR	1692913	Identifier	op_eax_imm		1692217	1					
ANR	1692914	Parameter	sljit_si dst	1448:1:40155:40166	1692217	5	True				
ANR	1692915	ParameterType	sljit_si		1692217	0					
ANR	1692916	Identifier	dst		1692217	1					
ANR	1692917	Parameter	sljit_sw dstw	1448:15:40169:40181	1692217	6	True				
ANR	1692918	ParameterType	sljit_sw		1692217	0					
ANR	1692919	Identifier	dstw		1692217	1					
ANR	1692920	Parameter	sljit_si src1	1449:1:40185:40197	1692217	7	True				
ANR	1692921	ParameterType	sljit_si		1692217	0					
ANR	1692922	Identifier	src1		1692217	1					
ANR	1692923	Parameter	sljit_sw src1w	1449:16:40200:40213	1692217	8	True				
ANR	1692924	ParameterType	sljit_sw		1692217	0					
ANR	1692925	Identifier	src1w		1692217	1					
ANR	1692926	Parameter	sljit_si src2	1450:1:40217:40229	1692217	9	True				
ANR	1692927	ParameterType	sljit_si		1692217	0					
ANR	1692928	Identifier	src2		1692217	1					
ANR	1692929	Parameter	sljit_sw src2w	1450:16:40232:40245	1692217	10	True				
ANR	1692930	ParameterType	sljit_sw		1692217	0					
ANR	1692931	Identifier	src2w		1692217	1					
ANR	1692932	CFGEntryNode	ENTRY		1692217		True				
ANR	1692933	CFGExitNode	EXIT		1692217		True				
ANR	1692934	Symbol	src2w		1692217						
ANR	1692935	Symbol	TMP_REG1		1692217						
ANR	1692936	Symbol	emit_x86_instruction		1692217						
ANR	1692937	Symbol	src1w		1692217						
ANR	1692938	Symbol	* inst		1692217						
ANR	1692939	Symbol	FAST_IS_REG		1692217						
ANR	1692940	Symbol	dst		1692217						
ANR	1692941	Symbol	op_rm		1692217						
ANR	1692942	Symbol	SLJIT_SUCCESS		1692217						
ANR	1692943	Symbol	op_imm		1692217						
ANR	1692944	Symbol	* compiler		1692217						
ANR	1692945	Symbol	SLJIT_R0		1692217						
ANR	1692946	Symbol	SLJIT_IMM		1692217						
ANR	1692947	Symbol	op_mr		1692217						
ANR	1692948	Symbol	op_eax_imm		1692217						
ANR	1692949	Symbol	SLJIT_UNUSED		1692217						
ANR	1692950	Symbol	inst		1692217						
ANR	1692951	Symbol	src1		1692217						
ANR	1692952	Symbol	compiler -> mode32		1692217						
ANR	1692953	Symbol	IS_HALFWORD		1692217						
ANR	1692954	Symbol	src2		1692217						
ANR	1692955	Symbol	compiler		1692217						
ANR	1692956	Symbol	dstw		1692217						
ANR	1692957	Function	emit_non_cum_binary	1562:0:43114:45245							
ANR	1692958	FunctionDef	"emit_non_cum_binary (struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1692957	0					
ANR	1692959	CompoundStatement		1567:0:43348:45245	1692957	0					
ANR	1692960	IdentifierDeclStatement	sljit_ub * inst ;	1568:1:43351:43365	1692957	0	True				
ANR	1692961	IdentifierDecl	* inst		1692957	0					
ANR	1692962	IdentifierDeclType	sljit_ub *		1692957	0					
ANR	1692963	Identifier	inst		1692957	1					
ANR	1692964	IfStatement	if ( dst == SLJIT_UNUSED )		1692957	1					
ANR	1692965	Condition	dst == SLJIT_UNUSED	1570:5:43373:43391	1692957	0	True				
ANR	1692966	EqualityExpression	dst == SLJIT_UNUSED		1692957	0		==			
ANR	1692967	Identifier	dst		1692957	0					
ANR	1692968	Identifier	SLJIT_UNUSED		1692957	1					
ANR	1692969	CompoundStatement		4:26:45:45	1692957	1					
ANR	1692970	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1571:2:43398:43442	1692957	0	True				
ANR	1692971	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1692957	0					
ANR	1692972	Callee	EMIT_MOV		1692957	0					
ANR	1692973	Identifier	EMIT_MOV		1692957	0					
ANR	1692974	ArgumentList	compiler		1692957	1					
ANR	1692975	Argument	compiler		1692957	0					
ANR	1692976	Identifier	compiler		1692957	0					
ANR	1692977	Argument	TMP_REG1		1692957	1					
ANR	1692978	Identifier	TMP_REG1		1692957	0					
ANR	1692979	Argument	0		1692957	2					
ANR	1692980	PrimaryExpression	0		1692957	0					
ANR	1692981	Argument	src1		1692957	3					
ANR	1692982	Identifier	src1		1692957	0					
ANR	1692983	Argument	src1w		1692957	4					
ANR	1692984	Identifier	src1w		1692957	0					
ANR	1692985	IfStatement	if ( src2 & SLJIT_IMM )		1692957	1					
ANR	1692986	Condition	src2 & SLJIT_IMM	1572:6:43450:43465	1692957	0	True				
ANR	1692987	BitAndExpression	src2 & SLJIT_IMM		1692957	0		&			
ANR	1692988	Identifier	src2		1692957	0					
ANR	1692989	Identifier	SLJIT_IMM		1692957	1					
ANR	1692990	CompoundStatement		6:24:119:119	1692957	1					
ANR	1692991	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1573:3:43473:43518	1692957	0	True				
ANR	1692992	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1692957	0					
ANR	1692993	Callee	BINARY_IMM		1692957	0					
ANR	1692994	Identifier	BINARY_IMM		1692957	0					
ANR	1692995	ArgumentList	op_imm		1692957	1					
ANR	1692996	Argument	op_imm		1692957	0					
ANR	1692997	Identifier	op_imm		1692957	0					
ANR	1692998	Argument	op_mr		1692957	1					
ANR	1692999	Identifier	op_mr		1692957	0					
ANR	1693000	Argument	src2w		1692957	2					
ANR	1693001	Identifier	src2w		1692957	0					
ANR	1693002	Argument	TMP_REG1		1692957	3					
ANR	1693003	Identifier	TMP_REG1		1692957	0					
ANR	1693004	Argument	0		1692957	4					
ANR	1693005	PrimaryExpression	0		1692957	0					
ANR	1693006	ElseStatement	else		1692957	0					
ANR	1693007	CompoundStatement		9:7:182:182	1692957	0					
ANR	1693008	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1576:3:43536:43602	1692957	0	True				
ANR	1693009	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692957	0		=			
ANR	1693010	Identifier	inst		1692957	0					
ANR	1693011	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692957	1					
ANR	1693012	Callee	emit_x86_instruction		1692957	0					
ANR	1693013	Identifier	emit_x86_instruction		1692957	0					
ANR	1693014	ArgumentList	compiler		1692957	1					
ANR	1693015	Argument	compiler		1692957	0					
ANR	1693016	Identifier	compiler		1692957	0					
ANR	1693017	Argument	1		1692957	1					
ANR	1693018	PrimaryExpression	1		1692957	0					
ANR	1693019	Argument	TMP_REG1		1692957	2					
ANR	1693020	Identifier	TMP_REG1		1692957	0					
ANR	1693021	Argument	0		1692957	3					
ANR	1693022	PrimaryExpression	0		1692957	0					
ANR	1693023	Argument	src2		1692957	4					
ANR	1693024	Identifier	src2		1692957	0					
ANR	1693025	Argument	src2w		1692957	5					
ANR	1693026	Identifier	src2w		1692957	0					
ANR	1693027	ExpressionStatement	FAIL_IF ( ! inst )	1577:3:43607:43621	1692957	1	True				
ANR	1693028	CallExpression	FAIL_IF ( ! inst )		1692957	0					
ANR	1693029	Callee	FAIL_IF		1692957	0					
ANR	1693030	Identifier	FAIL_IF		1692957	0					
ANR	1693031	ArgumentList	! inst		1692957	1					
ANR	1693032	Argument	! inst		1692957	0					
ANR	1693033	UnaryOperationExpression	! inst		1692957	0					
ANR	1693034	UnaryOperator	!		1692957	0					
ANR	1693035	Identifier	inst		1692957	1					
ANR	1693036	ExpressionStatement	* inst = op_rm	1578:3:43626:43639	1692957	2	True				
ANR	1693037	AssignmentExpression	* inst = op_rm		1692957	0		=			
ANR	1693038	UnaryOperationExpression	* inst		1692957	0					
ANR	1693039	UnaryOperator	*		1692957	0					
ANR	1693040	Identifier	inst		1692957	1					
ANR	1693041	Identifier	op_rm		1692957	1					
ANR	1693042	ReturnStatement	return SLJIT_SUCCESS ;	1580:2:43647:43667	1692957	2	True				
ANR	1693043	Identifier	SLJIT_SUCCESS		1692957	0					
ANR	1693044	IfStatement	if ( dst == src1 && dstw == src1w )		1692957	2					
ANR	1693045	Condition	dst == src1 && dstw == src1w	1583:5:43678:43705	1692957	0	True				
ANR	1693046	AndExpression	dst == src1 && dstw == src1w		1692957	0		&&			
ANR	1693047	EqualityExpression	dst == src1		1692957	0		==			
ANR	1693048	Identifier	dst		1692957	0					
ANR	1693049	Identifier	src1		1692957	1					
ANR	1693050	EqualityExpression	dstw == src1w		1692957	1		==			
ANR	1693051	Identifier	dstw		1692957	0					
ANR	1693052	Identifier	src1w		1692957	1					
ANR	1693053	CompoundStatement		17:35:359:359	1692957	1					
ANR	1693054	IfStatement	if ( src2 & SLJIT_IMM )		1692957	0					
ANR	1693055	Condition	src2 & SLJIT_IMM	1584:6:43716:43731	1692957	0	True				
ANR	1693056	BitAndExpression	src2 & SLJIT_IMM		1692957	0		&			
ANR	1693057	Identifier	src2		1692957	0					
ANR	1693058	Identifier	SLJIT_IMM		1692957	1					
ANR	1693059	CompoundStatement		18:24:385:385	1692957	1					
ANR	1693060	IfStatement	if ( ( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1692957	0					
ANR	1693061	Condition	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1586:7:43800:43893	1692957	0	True				
ANR	1693062	AndExpression	( dst == SLJIT_R0 ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1692957	0		&&			
ANR	1693063	EqualityExpression	dst == SLJIT_R0		1692957	0		==			
ANR	1693064	Identifier	dst		1692957	0					
ANR	1693065	Identifier	SLJIT_R0		1692957	1					
ANR	1693066	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1692957	1		&&			
ANR	1693067	OrExpression	src2w > 127 || src2w < - 128		1692957	0		||			
ANR	1693068	RelationalExpression	src2w > 127		1692957	0		>			
ANR	1693069	Identifier	src2w		1692957	0					
ANR	1693070	PrimaryExpression	127		1692957	1					
ANR	1693071	RelationalExpression	src2w < - 128		1692957	1		<			
ANR	1693072	Identifier	src2w		1692957	0					
ANR	1693073	UnaryOperationExpression	- 128		1692957	1					
ANR	1693074	UnaryOperator	-		1692957	0					
ANR	1693075	PrimaryExpression	128		1692957	1					
ANR	1693076	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1692957	1		||			
ANR	1693077	PtrMemberAccess	compiler -> mode32		1692957	0					
ANR	1693078	Identifier	compiler		1692957	0					
ANR	1693079	Identifier	mode32		1692957	1					
ANR	1693080	CallExpression	IS_HALFWORD ( src2w )		1692957	1					
ANR	1693081	Callee	IS_HALFWORD		1692957	0					
ANR	1693082	Identifier	IS_HALFWORD		1692957	0					
ANR	1693083	ArgumentList	src2w		1692957	1					
ANR	1693084	Argument	src2w		1692957	0					
ANR	1693085	Identifier	src2w		1692957	0					
ANR	1693086	CompoundStatement		20:103:547:547	1692957	1					
ANR	1693087	ExpressionStatement	"BINARY_EAX_IMM ( op_eax_imm , src2w )"	1590:4:43976:44009	1692957	0	True				
ANR	1693088	CallExpression	"BINARY_EAX_IMM ( op_eax_imm , src2w )"		1692957	0					
ANR	1693089	Callee	BINARY_EAX_IMM		1692957	0					
ANR	1693090	Identifier	BINARY_EAX_IMM		1692957	0					
ANR	1693091	ArgumentList	op_eax_imm		1692957	1					
ANR	1693092	Argument	op_eax_imm		1692957	0					
ANR	1693093	Identifier	op_eax_imm		1692957	0					
ANR	1693094	Argument	src2w		1692957	1					
ANR	1693095	Identifier	src2w		1692957	0					
ANR	1693096	ElseStatement	else		1692957	0					
ANR	1693097	CompoundStatement		26:8:675:675	1692957	0					
ANR	1693098	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"	1593:4:44030:44073	1692957	0	True				
ANR	1693099	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , dstw )"		1692957	0					
ANR	1693100	Callee	BINARY_IMM		1692957	0					
ANR	1693101	Identifier	BINARY_IMM		1692957	0					
ANR	1693102	ArgumentList	op_imm		1692957	1					
ANR	1693103	Argument	op_imm		1692957	0					
ANR	1693104	Identifier	op_imm		1692957	0					
ANR	1693105	Argument	op_mr		1692957	1					
ANR	1693106	Identifier	op_mr		1692957	0					
ANR	1693107	Argument	src2w		1692957	2					
ANR	1693108	Identifier	src2w		1692957	0					
ANR	1693109	Argument	dst		1692957	3					
ANR	1693110	Identifier	dst		1692957	0					
ANR	1693111	Argument	dstw		1692957	4					
ANR	1693112	Identifier	dstw		1692957	0					
ANR	1693113	ElseStatement	else		1692957	0					
ANR	1693114	IfStatement	if ( FAST_IS_REG ( dst ) )		1692957	0					
ANR	1693115	Condition	FAST_IS_REG ( dst )	1596:11:44095:44110	1692957	0	True				
ANR	1693116	CallExpression	FAST_IS_REG ( dst )		1692957	0					
ANR	1693117	Callee	FAST_IS_REG		1692957	0					
ANR	1693118	Identifier	FAST_IS_REG		1692957	0					
ANR	1693119	ArgumentList	dst		1692957	1					
ANR	1693120	Argument	dst		1692957	0					
ANR	1693121	Identifier	dst		1692957	0					
ANR	1693122	CompoundStatement		30:29:764:764	1692957	1					
ANR	1693123	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"	1597:3:44118:44182	1692957	0	True				
ANR	1693124	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1692957	0		=			
ANR	1693125	Identifier	inst		1692957	0					
ANR	1693126	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , dstw , src2 , src2w )"		1692957	1					
ANR	1693127	Callee	emit_x86_instruction		1692957	0					
ANR	1693128	Identifier	emit_x86_instruction		1692957	0					
ANR	1693129	ArgumentList	compiler		1692957	1					
ANR	1693130	Argument	compiler		1692957	0					
ANR	1693131	Identifier	compiler		1692957	0					
ANR	1693132	Argument	1		1692957	1					
ANR	1693133	PrimaryExpression	1		1692957	0					
ANR	1693134	Argument	dst		1692957	2					
ANR	1693135	Identifier	dst		1692957	0					
ANR	1693136	Argument	dstw		1692957	3					
ANR	1693137	Identifier	dstw		1692957	0					
ANR	1693138	Argument	src2		1692957	4					
ANR	1693139	Identifier	src2		1692957	0					
ANR	1693140	Argument	src2w		1692957	5					
ANR	1693141	Identifier	src2w		1692957	0					
ANR	1693142	ExpressionStatement	FAIL_IF ( ! inst )	1598:3:44187:44201	1692957	1	True				
ANR	1693143	CallExpression	FAIL_IF ( ! inst )		1692957	0					
ANR	1693144	Callee	FAIL_IF		1692957	0					
ANR	1693145	Identifier	FAIL_IF		1692957	0					
ANR	1693146	ArgumentList	! inst		1692957	1					
ANR	1693147	Argument	! inst		1692957	0					
ANR	1693148	UnaryOperationExpression	! inst		1692957	0					
ANR	1693149	UnaryOperator	!		1692957	0					
ANR	1693150	Identifier	inst		1692957	1					
ANR	1693151	ExpressionStatement	* inst = op_rm	1599:3:44206:44219	1692957	2	True				
ANR	1693152	AssignmentExpression	* inst = op_rm		1692957	0		=			
ANR	1693153	UnaryOperationExpression	* inst		1692957	0					
ANR	1693154	UnaryOperator	*		1692957	0					
ANR	1693155	Identifier	inst		1692957	1					
ANR	1693156	Identifier	op_rm		1692957	1					
ANR	1693157	ElseStatement	else		1692957	0					
ANR	1693158	IfStatement	if ( FAST_IS_REG ( src2 ) )		1692957	0					
ANR	1693159	Condition	FAST_IS_REG ( src2 )	1601:11:44236:44252	1692957	0	True				
ANR	1693160	CallExpression	FAST_IS_REG ( src2 )		1692957	0					
ANR	1693161	Callee	FAST_IS_REG		1692957	0					
ANR	1693162	Identifier	FAST_IS_REG		1692957	0					
ANR	1693163	ArgumentList	src2		1692957	1					
ANR	1693164	Argument	src2		1692957	0					
ANR	1693165	Identifier	src2		1692957	0					
ANR	1693166	CompoundStatement		35:30:906:906	1692957	1					
ANR	1693167	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"	1602:3:44260:44324	1692957	0	True				
ANR	1693168	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1692957	0		=			
ANR	1693169	Identifier	inst		1692957	0					
ANR	1693170	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , src2w , dst , dstw )"		1692957	1					
ANR	1693171	Callee	emit_x86_instruction		1692957	0					
ANR	1693172	Identifier	emit_x86_instruction		1692957	0					
ANR	1693173	ArgumentList	compiler		1692957	1					
ANR	1693174	Argument	compiler		1692957	0					
ANR	1693175	Identifier	compiler		1692957	0					
ANR	1693176	Argument	1		1692957	1					
ANR	1693177	PrimaryExpression	1		1692957	0					
ANR	1693178	Argument	src2		1692957	2					
ANR	1693179	Identifier	src2		1692957	0					
ANR	1693180	Argument	src2w		1692957	3					
ANR	1693181	Identifier	src2w		1692957	0					
ANR	1693182	Argument	dst		1692957	4					
ANR	1693183	Identifier	dst		1692957	0					
ANR	1693184	Argument	dstw		1692957	5					
ANR	1693185	Identifier	dstw		1692957	0					
ANR	1693186	ExpressionStatement	FAIL_IF ( ! inst )	1603:3:44329:44343	1692957	1	True				
ANR	1693187	CallExpression	FAIL_IF ( ! inst )		1692957	0					
ANR	1693188	Callee	FAIL_IF		1692957	0					
ANR	1693189	Identifier	FAIL_IF		1692957	0					
ANR	1693190	ArgumentList	! inst		1692957	1					
ANR	1693191	Argument	! inst		1692957	0					
ANR	1693192	UnaryOperationExpression	! inst		1692957	0					
ANR	1693193	UnaryOperator	!		1692957	0					
ANR	1693194	Identifier	inst		1692957	1					
ANR	1693195	ExpressionStatement	* inst = op_mr	1604:3:44348:44361	1692957	2	True				
ANR	1693196	AssignmentExpression	* inst = op_mr		1692957	0		=			
ANR	1693197	UnaryOperationExpression	* inst		1692957	0					
ANR	1693198	UnaryOperator	*		1692957	0					
ANR	1693199	Identifier	inst		1692957	1					
ANR	1693200	Identifier	op_mr		1692957	1					
ANR	1693201	ElseStatement	else		1692957	0					
ANR	1693202	CompoundStatement		40:7:1025:1025	1692957	0					
ANR	1693203	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"	1607:3:44379:44423	1692957	0	True				
ANR	1693204	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src2 , src2w )"		1692957	0					
ANR	1693205	Callee	EMIT_MOV		1692957	0					
ANR	1693206	Identifier	EMIT_MOV		1692957	0					
ANR	1693207	ArgumentList	compiler		1692957	1					
ANR	1693208	Argument	compiler		1692957	0					
ANR	1693209	Identifier	compiler		1692957	0					
ANR	1693210	Argument	TMP_REG1		1692957	1					
ANR	1693211	Identifier	TMP_REG1		1692957	0					
ANR	1693212	Argument	0		1692957	2					
ANR	1693213	PrimaryExpression	0		1692957	0					
ANR	1693214	Argument	src2		1692957	3					
ANR	1693215	Identifier	src2		1692957	0					
ANR	1693216	Argument	src2w		1692957	4					
ANR	1693217	Identifier	src2w		1692957	0					
ANR	1693218	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"	1608:3:44428:44492	1692957	1	True				
ANR	1693219	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1692957	0		=			
ANR	1693220	Identifier	inst		1692957	0					
ANR	1693221	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , dst , dstw )"		1692957	1					
ANR	1693222	Callee	emit_x86_instruction		1692957	0					
ANR	1693223	Identifier	emit_x86_instruction		1692957	0					
ANR	1693224	ArgumentList	compiler		1692957	1					
ANR	1693225	Argument	compiler		1692957	0					
ANR	1693226	Identifier	compiler		1692957	0					
ANR	1693227	Argument	1		1692957	1					
ANR	1693228	PrimaryExpression	1		1692957	0					
ANR	1693229	Argument	TMP_REG1		1692957	2					
ANR	1693230	Identifier	TMP_REG1		1692957	0					
ANR	1693231	Argument	0		1692957	3					
ANR	1693232	PrimaryExpression	0		1692957	0					
ANR	1693233	Argument	dst		1692957	4					
ANR	1693234	Identifier	dst		1692957	0					
ANR	1693235	Argument	dstw		1692957	5					
ANR	1693236	Identifier	dstw		1692957	0					
ANR	1693237	ExpressionStatement	FAIL_IF ( ! inst )	1609:3:44497:44511	1692957	2	True				
ANR	1693238	CallExpression	FAIL_IF ( ! inst )		1692957	0					
ANR	1693239	Callee	FAIL_IF		1692957	0					
ANR	1693240	Identifier	FAIL_IF		1692957	0					
ANR	1693241	ArgumentList	! inst		1692957	1					
ANR	1693242	Argument	! inst		1692957	0					
ANR	1693243	UnaryOperationExpression	! inst		1692957	0					
ANR	1693244	UnaryOperator	!		1692957	0					
ANR	1693245	Identifier	inst		1692957	1					
ANR	1693246	ExpressionStatement	* inst = op_mr	1610:3:44516:44529	1692957	3	True				
ANR	1693247	AssignmentExpression	* inst = op_mr		1692957	0		=			
ANR	1693248	UnaryOperationExpression	* inst		1692957	0					
ANR	1693249	UnaryOperator	*		1692957	0					
ANR	1693250	Identifier	inst		1692957	1					
ANR	1693251	Identifier	op_mr		1692957	1					
ANR	1693252	ReturnStatement	return SLJIT_SUCCESS ;	1612:2:44537:44557	1692957	1	True				
ANR	1693253	Identifier	SLJIT_SUCCESS		1692957	0					
ANR	1693254	IfStatement	if ( FAST_IS_REG ( dst ) && dst != src2 )		1692957	3					
ANR	1693255	Condition	FAST_IS_REG ( dst ) && dst != src2	1616:5:44592:44622	1692957	0	True				
ANR	1693256	AndExpression	FAST_IS_REG ( dst ) && dst != src2		1692957	0		&&			
ANR	1693257	CallExpression	FAST_IS_REG ( dst )		1692957	0					
ANR	1693258	Callee	FAST_IS_REG		1692957	0					
ANR	1693259	Identifier	FAST_IS_REG		1692957	0					
ANR	1693260	ArgumentList	dst		1692957	1					
ANR	1693261	Argument	dst		1692957	0					
ANR	1693262	Identifier	dst		1692957	0					
ANR	1693263	EqualityExpression	dst != src2		1692957	1		!=			
ANR	1693264	Identifier	dst		1692957	0					
ANR	1693265	Identifier	src2		1692957	1					
ANR	1693266	CompoundStatement		50:38:1276:1276	1692957	1					
ANR	1693267	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	1617:2:44629:44668	1692957	0	True				
ANR	1693268	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1692957	0					
ANR	1693269	Callee	EMIT_MOV		1692957	0					
ANR	1693270	Identifier	EMIT_MOV		1692957	0					
ANR	1693271	ArgumentList	compiler		1692957	1					
ANR	1693272	Argument	compiler		1692957	0					
ANR	1693273	Identifier	compiler		1692957	0					
ANR	1693274	Argument	dst		1692957	1					
ANR	1693275	Identifier	dst		1692957	0					
ANR	1693276	Argument	0		1692957	2					
ANR	1693277	PrimaryExpression	0		1692957	0					
ANR	1693278	Argument	src1		1692957	3					
ANR	1693279	Identifier	src1		1692957	0					
ANR	1693280	Argument	src1w		1692957	4					
ANR	1693281	Identifier	src1w		1692957	0					
ANR	1693282	IfStatement	if ( src2 & SLJIT_IMM )		1692957	1					
ANR	1693283	Condition	src2 & SLJIT_IMM	1618:6:44676:44691	1692957	0	True				
ANR	1693284	BitAndExpression	src2 & SLJIT_IMM		1692957	0		&			
ANR	1693285	Identifier	src2		1692957	0					
ANR	1693286	Identifier	SLJIT_IMM		1692957	1					
ANR	1693287	CompoundStatement		52:24:1345:1345	1692957	1					
ANR	1693288	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"	1619:3:44699:44739	1692957	0	True				
ANR	1693289	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , dst , 0 )"		1692957	0					
ANR	1693290	Callee	BINARY_IMM		1692957	0					
ANR	1693291	Identifier	BINARY_IMM		1692957	0					
ANR	1693292	ArgumentList	op_imm		1692957	1					
ANR	1693293	Argument	op_imm		1692957	0					
ANR	1693294	Identifier	op_imm		1692957	0					
ANR	1693295	Argument	op_mr		1692957	1					
ANR	1693296	Identifier	op_mr		1692957	0					
ANR	1693297	Argument	src2w		1692957	2					
ANR	1693298	Identifier	src2w		1692957	0					
ANR	1693299	Argument	dst		1692957	3					
ANR	1693300	Identifier	dst		1692957	0					
ANR	1693301	Argument	0		1692957	4					
ANR	1693302	PrimaryExpression	0		1692957	0					
ANR	1693303	ElseStatement	else		1692957	0					
ANR	1693304	CompoundStatement		55:7:1403:1403	1692957	0					
ANR	1693305	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"	1622:3:44757:44818	1692957	0	True				
ANR	1693306	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1692957	0		=			
ANR	1693307	Identifier	inst		1692957	0					
ANR	1693308	CallExpression	"emit_x86_instruction ( compiler , 1 , dst , 0 , src2 , src2w )"		1692957	1					
ANR	1693309	Callee	emit_x86_instruction		1692957	0					
ANR	1693310	Identifier	emit_x86_instruction		1692957	0					
ANR	1693311	ArgumentList	compiler		1692957	1					
ANR	1693312	Argument	compiler		1692957	0					
ANR	1693313	Identifier	compiler		1692957	0					
ANR	1693314	Argument	1		1692957	1					
ANR	1693315	PrimaryExpression	1		1692957	0					
ANR	1693316	Argument	dst		1692957	2					
ANR	1693317	Identifier	dst		1692957	0					
ANR	1693318	Argument	0		1692957	3					
ANR	1693319	PrimaryExpression	0		1692957	0					
ANR	1693320	Argument	src2		1692957	4					
ANR	1693321	Identifier	src2		1692957	0					
ANR	1693322	Argument	src2w		1692957	5					
ANR	1693323	Identifier	src2w		1692957	0					
ANR	1693324	ExpressionStatement	FAIL_IF ( ! inst )	1623:3:44823:44837	1692957	1	True				
ANR	1693325	CallExpression	FAIL_IF ( ! inst )		1692957	0					
ANR	1693326	Callee	FAIL_IF		1692957	0					
ANR	1693327	Identifier	FAIL_IF		1692957	0					
ANR	1693328	ArgumentList	! inst		1692957	1					
ANR	1693329	Argument	! inst		1692957	0					
ANR	1693330	UnaryOperationExpression	! inst		1692957	0					
ANR	1693331	UnaryOperator	!		1692957	0					
ANR	1693332	Identifier	inst		1692957	1					
ANR	1693333	ExpressionStatement	* inst = op_rm	1624:3:44842:44855	1692957	2	True				
ANR	1693334	AssignmentExpression	* inst = op_rm		1692957	0		=			
ANR	1693335	UnaryOperationExpression	* inst		1692957	0					
ANR	1693336	UnaryOperator	*		1692957	0					
ANR	1693337	Identifier	inst		1692957	1					
ANR	1693338	Identifier	op_rm		1692957	1					
ANR	1693339	ElseStatement	else		1692957	0					
ANR	1693340	CompoundStatement		61:6:1521:1521	1692957	0					
ANR	1693341	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1629:2:44925:44969	1692957	0	True				
ANR	1693342	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1692957	0					
ANR	1693343	Callee	EMIT_MOV		1692957	0					
ANR	1693344	Identifier	EMIT_MOV		1692957	0					
ANR	1693345	ArgumentList	compiler		1692957	1					
ANR	1693346	Argument	compiler		1692957	0					
ANR	1693347	Identifier	compiler		1692957	0					
ANR	1693348	Argument	TMP_REG1		1692957	1					
ANR	1693349	Identifier	TMP_REG1		1692957	0					
ANR	1693350	Argument	0		1692957	2					
ANR	1693351	PrimaryExpression	0		1692957	0					
ANR	1693352	Argument	src1		1692957	3					
ANR	1693353	Identifier	src1		1692957	0					
ANR	1693354	Argument	src1w		1692957	4					
ANR	1693355	Identifier	src1w		1692957	0					
ANR	1693356	IfStatement	if ( src2 & SLJIT_IMM )		1692957	1					
ANR	1693357	Condition	src2 & SLJIT_IMM	1630:6:44977:44992	1692957	0	True				
ANR	1693358	BitAndExpression	src2 & SLJIT_IMM		1692957	0		&			
ANR	1693359	Identifier	src2		1692957	0					
ANR	1693360	Identifier	SLJIT_IMM		1692957	1					
ANR	1693361	CompoundStatement		64:24:1646:1646	1692957	1					
ANR	1693362	ExpressionStatement	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"	1631:3:45000:45045	1692957	0	True				
ANR	1693363	CallExpression	"BINARY_IMM ( op_imm , op_mr , src2w , TMP_REG1 , 0 )"		1692957	0					
ANR	1693364	Callee	BINARY_IMM		1692957	0					
ANR	1693365	Identifier	BINARY_IMM		1692957	0					
ANR	1693366	ArgumentList	op_imm		1692957	1					
ANR	1693367	Argument	op_imm		1692957	0					
ANR	1693368	Identifier	op_imm		1692957	0					
ANR	1693369	Argument	op_mr		1692957	1					
ANR	1693370	Identifier	op_mr		1692957	0					
ANR	1693371	Argument	src2w		1692957	2					
ANR	1693372	Identifier	src2w		1692957	0					
ANR	1693373	Argument	TMP_REG1		1692957	3					
ANR	1693374	Identifier	TMP_REG1		1692957	0					
ANR	1693375	Argument	0		1692957	4					
ANR	1693376	PrimaryExpression	0		1692957	0					
ANR	1693377	ElseStatement	else		1692957	0					
ANR	1693378	CompoundStatement		67:7:1709:1709	1692957	0					
ANR	1693379	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1634:3:45063:45129	1692957	0	True				
ANR	1693380	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692957	0		=			
ANR	1693381	Identifier	inst		1692957	0					
ANR	1693382	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1692957	1					
ANR	1693383	Callee	emit_x86_instruction		1692957	0					
ANR	1693384	Identifier	emit_x86_instruction		1692957	0					
ANR	1693385	ArgumentList	compiler		1692957	1					
ANR	1693386	Argument	compiler		1692957	0					
ANR	1693387	Identifier	compiler		1692957	0					
ANR	1693388	Argument	1		1692957	1					
ANR	1693389	PrimaryExpression	1		1692957	0					
ANR	1693390	Argument	TMP_REG1		1692957	2					
ANR	1693391	Identifier	TMP_REG1		1692957	0					
ANR	1693392	Argument	0		1692957	3					
ANR	1693393	PrimaryExpression	0		1692957	0					
ANR	1693394	Argument	src2		1692957	4					
ANR	1693395	Identifier	src2		1692957	0					
ANR	1693396	Argument	src2w		1692957	5					
ANR	1693397	Identifier	src2w		1692957	0					
ANR	1693398	ExpressionStatement	FAIL_IF ( ! inst )	1635:3:45134:45148	1692957	1	True				
ANR	1693399	CallExpression	FAIL_IF ( ! inst )		1692957	0					
ANR	1693400	Callee	FAIL_IF		1692957	0					
ANR	1693401	Identifier	FAIL_IF		1692957	0					
ANR	1693402	ArgumentList	! inst		1692957	1					
ANR	1693403	Argument	! inst		1692957	0					
ANR	1693404	UnaryOperationExpression	! inst		1692957	0					
ANR	1693405	UnaryOperator	!		1692957	0					
ANR	1693406	Identifier	inst		1692957	1					
ANR	1693407	ExpressionStatement	* inst = op_rm	1636:3:45153:45166	1692957	2	True				
ANR	1693408	AssignmentExpression	* inst = op_rm		1692957	0		=			
ANR	1693409	UnaryOperationExpression	* inst		1692957	0					
ANR	1693410	UnaryOperator	*		1692957	0					
ANR	1693411	Identifier	inst		1692957	1					
ANR	1693412	Identifier	op_rm		1692957	1					
ANR	1693413	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1638:2:45174:45216	1692957	2	True				
ANR	1693414	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1692957	0					
ANR	1693415	Callee	EMIT_MOV		1692957	0					
ANR	1693416	Identifier	EMIT_MOV		1692957	0					
ANR	1693417	ArgumentList	compiler		1692957	1					
ANR	1693418	Argument	compiler		1692957	0					
ANR	1693419	Identifier	compiler		1692957	0					
ANR	1693420	Argument	dst		1692957	1					
ANR	1693421	Identifier	dst		1692957	0					
ANR	1693422	Argument	dstw		1692957	2					
ANR	1693423	Identifier	dstw		1692957	0					
ANR	1693424	Argument	TMP_REG1		1692957	3					
ANR	1693425	Identifier	TMP_REG1		1692957	0					
ANR	1693426	Argument	0		1692957	4					
ANR	1693427	PrimaryExpression	0		1692957	0					
ANR	1693428	ReturnStatement	return SLJIT_SUCCESS ;	1641:1:45223:45243	1692957	4	True				
ANR	1693429	Identifier	SLJIT_SUCCESS		1692957	0					
ANR	1693430	ReturnType	static sljit_si		1692957	1					
ANR	1693431	Identifier	emit_non_cum_binary		1692957	2					
ANR	1693432	ParameterList	"struct sljit_compiler * compiler , sljit_ub op_rm , sljit_ub op_mr , sljit_ub op_imm , sljit_ub op_eax_imm , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1692957	3					
ANR	1693433	Parameter	struct sljit_compiler * compiler	1562:36:43150:43180	1692957	0	True				
ANR	1693434	ParameterType	struct sljit_compiler *		1692957	0					
ANR	1693435	Identifier	compiler		1692957	1					
ANR	1693436	Parameter	sljit_ub op_rm	1563:1:43184:43197	1692957	1	True				
ANR	1693437	ParameterType	sljit_ub		1692957	0					
ANR	1693438	Identifier	op_rm		1692957	1					
ANR	1693439	Parameter	sljit_ub op_mr	1563:17:43200:43213	1692957	2	True				
ANR	1693440	ParameterType	sljit_ub		1692957	0					
ANR	1693441	Identifier	op_mr		1692957	1					
ANR	1693442	Parameter	sljit_ub op_imm	1563:33:43216:43230	1692957	3	True				
ANR	1693443	ParameterType	sljit_ub		1692957	0					
ANR	1693444	Identifier	op_imm		1692957	1					
ANR	1693445	Parameter	sljit_ub op_eax_imm	1563:50:43233:43251	1692957	4	True				
ANR	1693446	ParameterType	sljit_ub		1692957	0					
ANR	1693447	Identifier	op_eax_imm		1692957	1					
ANR	1693448	Parameter	sljit_si dst	1564:1:43255:43266	1692957	5	True				
ANR	1693449	ParameterType	sljit_si		1692957	0					
ANR	1693450	Identifier	dst		1692957	1					
ANR	1693451	Parameter	sljit_sw dstw	1564:15:43269:43281	1692957	6	True				
ANR	1693452	ParameterType	sljit_sw		1692957	0					
ANR	1693453	Identifier	dstw		1692957	1					
ANR	1693454	Parameter	sljit_si src1	1565:1:43285:43297	1692957	7	True				
ANR	1693455	ParameterType	sljit_si		1692957	0					
ANR	1693456	Identifier	src1		1692957	1					
ANR	1693457	Parameter	sljit_sw src1w	1565:16:43300:43313	1692957	8	True				
ANR	1693458	ParameterType	sljit_sw		1692957	0					
ANR	1693459	Identifier	src1w		1692957	1					
ANR	1693460	Parameter	sljit_si src2	1566:1:43317:43329	1692957	9	True				
ANR	1693461	ParameterType	sljit_si		1692957	0					
ANR	1693462	Identifier	src2		1692957	1					
ANR	1693463	Parameter	sljit_sw src2w	1566:16:43332:43345	1692957	10	True				
ANR	1693464	ParameterType	sljit_sw		1692957	0					
ANR	1693465	Identifier	src2w		1692957	1					
ANR	1693466	CFGEntryNode	ENTRY		1692957		True				
ANR	1693467	CFGExitNode	EXIT		1692957		True				
ANR	1693468	Symbol	src2w		1692957						
ANR	1693469	Symbol	TMP_REG1		1692957						
ANR	1693470	Symbol	emit_x86_instruction		1692957						
ANR	1693471	Symbol	src1w		1692957						
ANR	1693472	Symbol	* inst		1692957						
ANR	1693473	Symbol	FAST_IS_REG		1692957						
ANR	1693474	Symbol	dst		1692957						
ANR	1693475	Symbol	op_rm		1692957						
ANR	1693476	Symbol	SLJIT_SUCCESS		1692957						
ANR	1693477	Symbol	op_imm		1692957						
ANR	1693478	Symbol	* compiler		1692957						
ANR	1693479	Symbol	SLJIT_R0		1692957						
ANR	1693480	Symbol	SLJIT_IMM		1692957						
ANR	1693481	Symbol	op_mr		1692957						
ANR	1693482	Symbol	op_eax_imm		1692957						
ANR	1693483	Symbol	SLJIT_UNUSED		1692957						
ANR	1693484	Symbol	inst		1692957						
ANR	1693485	Symbol	src1		1692957						
ANR	1693486	Symbol	compiler -> mode32		1692957						
ANR	1693487	Symbol	IS_HALFWORD		1692957						
ANR	1693488	Symbol	src2		1692957						
ANR	1693489	Symbol	compiler		1692957						
ANR	1693490	Symbol	dstw		1692957						
ANR	1693491	Function	emit_mul	1644:0:45248:48706							
ANR	1693492	FunctionDef	"emit_mul (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1693491	0					
ANR	1693493	CompoundStatement		1648:0:45400:48706	1693491	0					
ANR	1693494	IdentifierDeclStatement	sljit_ub * inst ;	1649:1:45403:45417	1693491	0	True				
ANR	1693495	IdentifierDecl	* inst		1693491	0					
ANR	1693496	IdentifierDeclType	sljit_ub *		1693491	0					
ANR	1693497	Identifier	inst		1693491	1					
ANR	1693498	IdentifierDeclStatement	sljit_si dst_r ;	1650:1:45420:45434	1693491	1	True				
ANR	1693499	IdentifierDecl	dst_r		1693491	0					
ANR	1693500	IdentifierDeclType	sljit_si		1693491	0					
ANR	1693501	Identifier	dst_r		1693491	1					
ANR	1693502	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	1652:1:45438:45479	1693491	2	True				
ANR	1693503	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1693491	0		=			
ANR	1693504	Identifier	dst_r		1693491	0					
ANR	1693505	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1693491	1					
ANR	1693506	Condition	FAST_IS_REG ( dst )		1693491	0					
ANR	1693507	CallExpression	FAST_IS_REG ( dst )		1693491	0					
ANR	1693508	Callee	FAST_IS_REG		1693491	0					
ANR	1693509	Identifier	FAST_IS_REG		1693491	0					
ANR	1693510	ArgumentList	dst		1693491	1					
ANR	1693511	Argument	dst		1693491	0					
ANR	1693512	Identifier	dst		1693491	0					
ANR	1693513	Identifier	dst		1693491	1					
ANR	1693514	Identifier	TMP_REG1		1693491	2					
ANR	1693515	IfStatement	if ( dst_r == src1 && ! ( src2 & SLJIT_IMM ) )		1693491	3					
ANR	1693516	Condition	dst_r == src1 && ! ( src2 & SLJIT_IMM )	1655:5:45516:45551	1693491	0	True				
ANR	1693517	AndExpression	dst_r == src1 && ! ( src2 & SLJIT_IMM )		1693491	0		&&			
ANR	1693518	EqualityExpression	dst_r == src1		1693491	0		==			
ANR	1693519	Identifier	dst_r		1693491	0					
ANR	1693520	Identifier	src1		1693491	1					
ANR	1693521	UnaryOperationExpression	! ( src2 & SLJIT_IMM )		1693491	1					
ANR	1693522	UnaryOperator	!		1693491	0					
ANR	1693523	BitAndExpression	src2 & SLJIT_IMM		1693491	1		&			
ANR	1693524	Identifier	src2		1693491	0					
ANR	1693525	Identifier	SLJIT_IMM		1693491	1					
ANR	1693526	CompoundStatement		8:43:153:153	1693491	1					
ANR	1693527	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"	1656:2:45558:45621	1693491	0	True				
ANR	1693528	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1693491	0		=			
ANR	1693529	Identifier	inst		1693491	0					
ANR	1693530	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1693491	1					
ANR	1693531	Callee	emit_x86_instruction		1693491	0					
ANR	1693532	Identifier	emit_x86_instruction		1693491	0					
ANR	1693533	ArgumentList	compiler		1693491	1					
ANR	1693534	Argument	compiler		1693491	0					
ANR	1693535	Identifier	compiler		1693491	0					
ANR	1693536	Argument	2		1693491	1					
ANR	1693537	PrimaryExpression	2		1693491	0					
ANR	1693538	Argument	dst_r		1693491	2					
ANR	1693539	Identifier	dst_r		1693491	0					
ANR	1693540	Argument	0		1693491	3					
ANR	1693541	PrimaryExpression	0		1693491	0					
ANR	1693542	Argument	src2		1693491	4					
ANR	1693543	Identifier	src2		1693491	0					
ANR	1693544	Argument	src2w		1693491	5					
ANR	1693545	Identifier	src2w		1693491	0					
ANR	1693546	ExpressionStatement	FAIL_IF ( ! inst )	1657:2:45625:45639	1693491	1	True				
ANR	1693547	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693548	Callee	FAIL_IF		1693491	0					
ANR	1693549	Identifier	FAIL_IF		1693491	0					
ANR	1693550	ArgumentList	! inst		1693491	1					
ANR	1693551	Argument	! inst		1693491	0					
ANR	1693552	UnaryOperationExpression	! inst		1693491	0					
ANR	1693553	UnaryOperator	!		1693491	0					
ANR	1693554	Identifier	inst		1693491	1					
ANR	1693555	ExpressionStatement	* inst ++ = GROUP_0F	1658:2:45643:45661	1693491	2	True				
ANR	1693556	AssignmentExpression	* inst ++ = GROUP_0F		1693491	0		=			
ANR	1693557	UnaryOperationExpression	* inst ++		1693491	0					
ANR	1693558	UnaryOperator	*		1693491	0					
ANR	1693559	PostIncDecOperationExpression	inst ++		1693491	1					
ANR	1693560	Identifier	inst		1693491	0					
ANR	1693561	IncDec	++		1693491	1					
ANR	1693562	Identifier	GROUP_0F		1693491	1					
ANR	1693563	ExpressionStatement	* inst = IMUL_r_rm	1659:2:45665:45682	1693491	3	True				
ANR	1693564	AssignmentExpression	* inst = IMUL_r_rm		1693491	0		=			
ANR	1693565	UnaryOperationExpression	* inst		1693491	0					
ANR	1693566	UnaryOperator	*		1693491	0					
ANR	1693567	Identifier	inst		1693491	1					
ANR	1693568	Identifier	IMUL_r_rm		1693491	1					
ANR	1693569	ElseStatement	else		1693491	0					
ANR	1693570	IfStatement	if ( dst_r == src2 && ! ( src1 & SLJIT_IMM ) )		1693491	0					
ANR	1693571	Condition	dst_r == src2 && ! ( src1 & SLJIT_IMM )	1661:10:45697:45732	1693491	0	True				
ANR	1693572	AndExpression	dst_r == src2 && ! ( src1 & SLJIT_IMM )		1693491	0		&&			
ANR	1693573	EqualityExpression	dst_r == src2		1693491	0		==			
ANR	1693574	Identifier	dst_r		1693491	0					
ANR	1693575	Identifier	src2		1693491	1					
ANR	1693576	UnaryOperationExpression	! ( src1 & SLJIT_IMM )		1693491	1					
ANR	1693577	UnaryOperator	!		1693491	0					
ANR	1693578	BitAndExpression	src1 & SLJIT_IMM		1693491	1		&			
ANR	1693579	Identifier	src1		1693491	0					
ANR	1693580	Identifier	SLJIT_IMM		1693491	1					
ANR	1693581	CompoundStatement		14:48:334:334	1693491	1					
ANR	1693582	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src1 , src1w )"	1662:2:45739:45802	1693491	0	True				
ANR	1693583	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src1 , src1w )"		1693491	0		=			
ANR	1693584	Identifier	inst		1693491	0					
ANR	1693585	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src1 , src1w )"		1693491	1					
ANR	1693586	Callee	emit_x86_instruction		1693491	0					
ANR	1693587	Identifier	emit_x86_instruction		1693491	0					
ANR	1693588	ArgumentList	compiler		1693491	1					
ANR	1693589	Argument	compiler		1693491	0					
ANR	1693590	Identifier	compiler		1693491	0					
ANR	1693591	Argument	2		1693491	1					
ANR	1693592	PrimaryExpression	2		1693491	0					
ANR	1693593	Argument	dst_r		1693491	2					
ANR	1693594	Identifier	dst_r		1693491	0					
ANR	1693595	Argument	0		1693491	3					
ANR	1693596	PrimaryExpression	0		1693491	0					
ANR	1693597	Argument	src1		1693491	4					
ANR	1693598	Identifier	src1		1693491	0					
ANR	1693599	Argument	src1w		1693491	5					
ANR	1693600	Identifier	src1w		1693491	0					
ANR	1693601	ExpressionStatement	FAIL_IF ( ! inst )	1663:2:45806:45820	1693491	1	True				
ANR	1693602	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693603	Callee	FAIL_IF		1693491	0					
ANR	1693604	Identifier	FAIL_IF		1693491	0					
ANR	1693605	ArgumentList	! inst		1693491	1					
ANR	1693606	Argument	! inst		1693491	0					
ANR	1693607	UnaryOperationExpression	! inst		1693491	0					
ANR	1693608	UnaryOperator	!		1693491	0					
ANR	1693609	Identifier	inst		1693491	1					
ANR	1693610	ExpressionStatement	* inst ++ = GROUP_0F	1664:2:45824:45842	1693491	2	True				
ANR	1693611	AssignmentExpression	* inst ++ = GROUP_0F		1693491	0		=			
ANR	1693612	UnaryOperationExpression	* inst ++		1693491	0					
ANR	1693613	UnaryOperator	*		1693491	0					
ANR	1693614	PostIncDecOperationExpression	inst ++		1693491	1					
ANR	1693615	Identifier	inst		1693491	0					
ANR	1693616	IncDec	++		1693491	1					
ANR	1693617	Identifier	GROUP_0F		1693491	1					
ANR	1693618	ExpressionStatement	* inst = IMUL_r_rm	1665:2:45846:45863	1693491	3	True				
ANR	1693619	AssignmentExpression	* inst = IMUL_r_rm		1693491	0		=			
ANR	1693620	UnaryOperationExpression	* inst		1693491	0					
ANR	1693621	UnaryOperator	*		1693491	0					
ANR	1693622	Identifier	inst		1693491	1					
ANR	1693623	Identifier	IMUL_r_rm		1693491	1					
ANR	1693624	ElseStatement	else		1693491	0					
ANR	1693625	IfStatement	if ( src1 & SLJIT_IMM )		1693491	0					
ANR	1693626	Condition	src1 & SLJIT_IMM	1667:10:45878:45893	1693491	0	True				
ANR	1693627	BitAndExpression	src1 & SLJIT_IMM		1693491	0		&			
ANR	1693628	Identifier	src1		1693491	0					
ANR	1693629	Identifier	SLJIT_IMM		1693491	1					
ANR	1693630	CompoundStatement		20:28:495:495	1693491	1					
ANR	1693631	IfStatement	if ( src2 & SLJIT_IMM )		1693491	0					
ANR	1693632	Condition	src2 & SLJIT_IMM	1668:6:45904:45919	1693491	0	True				
ANR	1693633	BitAndExpression	src2 & SLJIT_IMM		1693491	0		&			
ANR	1693634	Identifier	src2		1693491	0					
ANR	1693635	Identifier	SLJIT_IMM		1693491	1					
ANR	1693636	CompoundStatement		21:24:521:521	1693491	1					
ANR	1693637	ExpressionStatement	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , src2w )"	1669:3:45927:45973	1693491	0	True				
ANR	1693638	CallExpression	"EMIT_MOV ( compiler , dst_r , 0 , SLJIT_IMM , src2w )"		1693491	0					
ANR	1693639	Callee	EMIT_MOV		1693491	0					
ANR	1693640	Identifier	EMIT_MOV		1693491	0					
ANR	1693641	ArgumentList	compiler		1693491	1					
ANR	1693642	Argument	compiler		1693491	0					
ANR	1693643	Identifier	compiler		1693491	0					
ANR	1693644	Argument	dst_r		1693491	1					
ANR	1693645	Identifier	dst_r		1693491	0					
ANR	1693646	Argument	0		1693491	2					
ANR	1693647	PrimaryExpression	0		1693491	0					
ANR	1693648	Argument	SLJIT_IMM		1693491	3					
ANR	1693649	Identifier	SLJIT_IMM		1693491	0					
ANR	1693650	Argument	src2w		1693491	4					
ANR	1693651	Identifier	src2w		1693491	0					
ANR	1693652	ExpressionStatement	src2 = dst_r	1670:3:45978:45990	1693491	1	True				
ANR	1693653	AssignmentExpression	src2 = dst_r		1693491	0		=			
ANR	1693654	Identifier	src2		1693491	0					
ANR	1693655	Identifier	dst_r		1693491	1					
ANR	1693656	ExpressionStatement	src2w = 0	1671:3:45995:46004	1693491	2	True				
ANR	1693657	AssignmentExpression	src2w = 0		1693491	0		=			
ANR	1693658	Identifier	src2w		1693491	0					
ANR	1693659	PrimaryExpression	0		1693491	1					
ANR	1693660	IfStatement	if ( src1w <= 127 && src1w >= - 128 )		1693491	1					
ANR	1693661	Condition	src1w <= 127 && src1w >= - 128	1674:6:46017:46045	1693491	0	True				
ANR	1693662	AndExpression	src1w <= 127 && src1w >= - 128		1693491	0		&&			
ANR	1693663	RelationalExpression	src1w <= 127		1693491	0		<=			
ANR	1693664	Identifier	src1w		1693491	0					
ANR	1693665	PrimaryExpression	127		1693491	1					
ANR	1693666	RelationalExpression	src1w >= - 128		1693491	1		>=			
ANR	1693667	Identifier	src1w		1693491	0					
ANR	1693668	UnaryOperationExpression	- 128		1693491	1					
ANR	1693669	UnaryOperator	-		1693491	0					
ANR	1693670	PrimaryExpression	128		1693491	1					
ANR	1693671	CompoundStatement		27:37:647:647	1693491	1					
ANR	1693672	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"	1675:3:46053:46116	1693491	0	True				
ANR	1693673	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1693491	0		=			
ANR	1693674	Identifier	inst		1693491	0					
ANR	1693675	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1693491	1					
ANR	1693676	Callee	emit_x86_instruction		1693491	0					
ANR	1693677	Identifier	emit_x86_instruction		1693491	0					
ANR	1693678	ArgumentList	compiler		1693491	1					
ANR	1693679	Argument	compiler		1693491	0					
ANR	1693680	Identifier	compiler		1693491	0					
ANR	1693681	Argument	1		1693491	1					
ANR	1693682	PrimaryExpression	1		1693491	0					
ANR	1693683	Argument	dst_r		1693491	2					
ANR	1693684	Identifier	dst_r		1693491	0					
ANR	1693685	Argument	0		1693491	3					
ANR	1693686	PrimaryExpression	0		1693491	0					
ANR	1693687	Argument	src2		1693491	4					
ANR	1693688	Identifier	src2		1693491	0					
ANR	1693689	Argument	src2w		1693491	5					
ANR	1693690	Identifier	src2w		1693491	0					
ANR	1693691	ExpressionStatement	FAIL_IF ( ! inst )	1676:3:46121:46135	1693491	1	True				
ANR	1693692	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693693	Callee	FAIL_IF		1693491	0					
ANR	1693694	Identifier	FAIL_IF		1693491	0					
ANR	1693695	ArgumentList	! inst		1693491	1					
ANR	1693696	Argument	! inst		1693491	0					
ANR	1693697	UnaryOperationExpression	! inst		1693491	0					
ANR	1693698	UnaryOperator	!		1693491	0					
ANR	1693699	Identifier	inst		1693491	1					
ANR	1693700	ExpressionStatement	* inst = IMUL_r_rm_i8	1677:3:46140:46160	1693491	2	True				
ANR	1693701	AssignmentExpression	* inst = IMUL_r_rm_i8		1693491	0		=			
ANR	1693702	UnaryOperationExpression	* inst		1693491	0					
ANR	1693703	UnaryOperator	*		1693491	0					
ANR	1693704	Identifier	inst		1693491	1					
ANR	1693705	Identifier	IMUL_r_rm_i8		1693491	1					
ANR	1693706	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	1678:3:46165:46210	1693491	3	True				
ANR	1693707	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1693491	0		=			
ANR	1693708	Identifier	inst		1693491	0					
ANR	1693709	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1693491	1					
ANR	1693710	CastTarget	sljit_ub *		1693491	0					
ANR	1693711	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1693491	1					
ANR	1693712	Callee	ensure_buf		1693491	0					
ANR	1693713	Identifier	ensure_buf		1693491	0					
ANR	1693714	ArgumentList	compiler		1693491	1					
ANR	1693715	Argument	compiler		1693491	0					
ANR	1693716	Identifier	compiler		1693491	0					
ANR	1693717	Argument	1 + 1		1693491	1					
ANR	1693718	AdditiveExpression	1 + 1		1693491	0		+			
ANR	1693719	PrimaryExpression	1		1693491	0					
ANR	1693720	PrimaryExpression	1		1693491	1					
ANR	1693721	ExpressionStatement	FAIL_IF ( ! inst )	1679:3:46215:46229	1693491	4	True				
ANR	1693722	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693723	Callee	FAIL_IF		1693491	0					
ANR	1693724	Identifier	FAIL_IF		1693491	0					
ANR	1693725	ArgumentList	! inst		1693491	1					
ANR	1693726	Argument	! inst		1693491	0					
ANR	1693727	UnaryOperationExpression	! inst		1693491	0					
ANR	1693728	UnaryOperator	!		1693491	0					
ANR	1693729	Identifier	inst		1693491	1					
ANR	1693730	ExpressionStatement	INC_SIZE ( 1 )	1680:3:46234:46245	1693491	5	True				
ANR	1693731	CallExpression	INC_SIZE ( 1 )		1693491	0					
ANR	1693732	Callee	INC_SIZE		1693491	0					
ANR	1693733	Identifier	INC_SIZE		1693491	0					
ANR	1693734	ArgumentList	1		1693491	1					
ANR	1693735	Argument	1		1693491	0					
ANR	1693736	PrimaryExpression	1		1693491	0					
ANR	1693737	ExpressionStatement	* inst = ( sljit_sb ) src1w	1681:3:46250:46273	1693491	6	True				
ANR	1693738	AssignmentExpression	* inst = ( sljit_sb ) src1w		1693491	0		=			
ANR	1693739	UnaryOperationExpression	* inst		1693491	0					
ANR	1693740	UnaryOperator	*		1693491	0					
ANR	1693741	Identifier	inst		1693491	1					
ANR	1693742	CastExpression	( sljit_sb ) src1w		1693491	1					
ANR	1693743	CastTarget	sljit_sb		1693491	0					
ANR	1693744	Identifier	src1w		1693491	1					
ANR	1693745	ElseStatement	else		1693491	0					
ANR	1693746	CompoundStatement		37:7:942:942	1693491	0					
ANR	1693747	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"	1685:3:46348:46411	1693491	0	True				
ANR	1693748	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1693491	0		=			
ANR	1693749	Identifier	inst		1693491	0					
ANR	1693750	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src2 , src2w )"		1693491	1					
ANR	1693751	Callee	emit_x86_instruction		1693491	0					
ANR	1693752	Identifier	emit_x86_instruction		1693491	0					
ANR	1693753	ArgumentList	compiler		1693491	1					
ANR	1693754	Argument	compiler		1693491	0					
ANR	1693755	Identifier	compiler		1693491	0					
ANR	1693756	Argument	1		1693491	1					
ANR	1693757	PrimaryExpression	1		1693491	0					
ANR	1693758	Argument	dst_r		1693491	2					
ANR	1693759	Identifier	dst_r		1693491	0					
ANR	1693760	Argument	0		1693491	3					
ANR	1693761	PrimaryExpression	0		1693491	0					
ANR	1693762	Argument	src2		1693491	4					
ANR	1693763	Identifier	src2		1693491	0					
ANR	1693764	Argument	src2w		1693491	5					
ANR	1693765	Identifier	src2w		1693491	0					
ANR	1693766	ExpressionStatement	FAIL_IF ( ! inst )	1686:3:46416:46430	1693491	1	True				
ANR	1693767	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693768	Callee	FAIL_IF		1693491	0					
ANR	1693769	Identifier	FAIL_IF		1693491	0					
ANR	1693770	ArgumentList	! inst		1693491	1					
ANR	1693771	Argument	! inst		1693491	0					
ANR	1693772	UnaryOperationExpression	! inst		1693491	0					
ANR	1693773	UnaryOperator	!		1693491	0					
ANR	1693774	Identifier	inst		1693491	1					
ANR	1693775	ExpressionStatement	* inst = IMUL_r_rm_i32	1687:3:46435:46456	1693491	2	True				
ANR	1693776	AssignmentExpression	* inst = IMUL_r_rm_i32		1693491	0		=			
ANR	1693777	UnaryOperationExpression	* inst		1693491	0					
ANR	1693778	UnaryOperator	*		1693491	0					
ANR	1693779	Identifier	inst		1693491	1					
ANR	1693780	Identifier	IMUL_r_rm_i32		1693491	1					
ANR	1693781	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"	1688:3:46461:46506	1693491	3	True				
ANR	1693782	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1693491	0		=			
ANR	1693783	Identifier	inst		1693491	0					
ANR	1693784	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1693491	1					
ANR	1693785	CastTarget	sljit_ub *		1693491	0					
ANR	1693786	CallExpression	"ensure_buf ( compiler , 1 + 4 )"		1693491	1					
ANR	1693787	Callee	ensure_buf		1693491	0					
ANR	1693788	Identifier	ensure_buf		1693491	0					
ANR	1693789	ArgumentList	compiler		1693491	1					
ANR	1693790	Argument	compiler		1693491	0					
ANR	1693791	Identifier	compiler		1693491	0					
ANR	1693792	Argument	1 + 4		1693491	1					
ANR	1693793	AdditiveExpression	1 + 4		1693491	0		+			
ANR	1693794	PrimaryExpression	1		1693491	0					
ANR	1693795	PrimaryExpression	4		1693491	1					
ANR	1693796	ExpressionStatement	FAIL_IF ( ! inst )	1689:3:46511:46525	1693491	4	True				
ANR	1693797	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693798	Callee	FAIL_IF		1693491	0					
ANR	1693799	Identifier	FAIL_IF		1693491	0					
ANR	1693800	ArgumentList	! inst		1693491	1					
ANR	1693801	Argument	! inst		1693491	0					
ANR	1693802	UnaryOperationExpression	! inst		1693491	0					
ANR	1693803	UnaryOperator	!		1693491	0					
ANR	1693804	Identifier	inst		1693491	1					
ANR	1693805	ExpressionStatement	INC_SIZE ( 4 )	1690:3:46530:46541	1693491	5	True				
ANR	1693806	CallExpression	INC_SIZE ( 4 )		1693491	0					
ANR	1693807	Callee	INC_SIZE		1693491	0					
ANR	1693808	Identifier	INC_SIZE		1693491	0					
ANR	1693809	ArgumentList	4		1693491	1					
ANR	1693810	Argument	4		1693491	0					
ANR	1693811	PrimaryExpression	4		1693491	0					
ANR	1693812	ExpressionStatement	* ( sljit_sw * ) inst = src1w	1691:3:46546:46570	1693491	6	True				
ANR	1693813	AssignmentExpression	* ( sljit_sw * ) inst = src1w		1693491	0		=			
ANR	1693814	UnaryOperationExpression	* ( sljit_sw * ) inst		1693491	0					
ANR	1693815	UnaryOperator	*		1693491	0					
ANR	1693816	CastExpression	( sljit_sw * ) inst		1693491	1					
ANR	1693817	CastTarget	sljit_sw *		1693491	0					
ANR	1693818	Identifier	inst		1693491	1					
ANR	1693819	Identifier	src1w		1693491	1					
ANR	1693820	ElseStatement	else		1693491	0					
ANR	1693821	IfStatement	if ( src2 & SLJIT_IMM )		1693491	0					
ANR	1693822	Condition	src2 & SLJIT_IMM	1714:10:47144:47159	1693491	0	True				
ANR	1693823	BitAndExpression	src2 & SLJIT_IMM		1693491	0		&			
ANR	1693824	Identifier	src2		1693491	0					
ANR	1693825	Identifier	SLJIT_IMM		1693491	1					
ANR	1693826	CompoundStatement		67:28:1761:1761	1693491	1					
ANR	1693827	IfStatement	if ( src2w <= 127 && src2w >= - 128 )		1693491	0					
ANR	1693828	Condition	src2w <= 127 && src2w >= - 128	1717:6:47208:47236	1693491	0	True				
ANR	1693829	AndExpression	src2w <= 127 && src2w >= - 128		1693491	0		&&			
ANR	1693830	RelationalExpression	src2w <= 127		1693491	0		<=			
ANR	1693831	Identifier	src2w		1693491	0					
ANR	1693832	PrimaryExpression	127		1693491	1					
ANR	1693833	RelationalExpression	src2w >= - 128		1693491	1		>=			
ANR	1693834	Identifier	src2w		1693491	0					
ANR	1693835	UnaryOperationExpression	- 128		1693491	1					
ANR	1693836	UnaryOperator	-		1693491	0					
ANR	1693837	PrimaryExpression	128		1693491	1					
ANR	1693838	CompoundStatement		70:37:1838:1838	1693491	1					
ANR	1693839	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"	1718:3:47244:47307	1693491	0	True				
ANR	1693840	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1693491	0		=			
ANR	1693841	Identifier	inst		1693491	0					
ANR	1693842	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1693491	1					
ANR	1693843	Callee	emit_x86_instruction		1693491	0					
ANR	1693844	Identifier	emit_x86_instruction		1693491	0					
ANR	1693845	ArgumentList	compiler		1693491	1					
ANR	1693846	Argument	compiler		1693491	0					
ANR	1693847	Identifier	compiler		1693491	0					
ANR	1693848	Argument	1		1693491	1					
ANR	1693849	PrimaryExpression	1		1693491	0					
ANR	1693850	Argument	dst_r		1693491	2					
ANR	1693851	Identifier	dst_r		1693491	0					
ANR	1693852	Argument	0		1693491	3					
ANR	1693853	PrimaryExpression	0		1693491	0					
ANR	1693854	Argument	src1		1693491	4					
ANR	1693855	Identifier	src1		1693491	0					
ANR	1693856	Argument	src1w		1693491	5					
ANR	1693857	Identifier	src1w		1693491	0					
ANR	1693858	ExpressionStatement	FAIL_IF ( ! inst )	1719:3:47312:47326	1693491	1	True				
ANR	1693859	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693860	Callee	FAIL_IF		1693491	0					
ANR	1693861	Identifier	FAIL_IF		1693491	0					
ANR	1693862	ArgumentList	! inst		1693491	1					
ANR	1693863	Argument	! inst		1693491	0					
ANR	1693864	UnaryOperationExpression	! inst		1693491	0					
ANR	1693865	UnaryOperator	!		1693491	0					
ANR	1693866	Identifier	inst		1693491	1					
ANR	1693867	ExpressionStatement	* inst = IMUL_r_rm_i8	1720:3:47331:47351	1693491	2	True				
ANR	1693868	AssignmentExpression	* inst = IMUL_r_rm_i8		1693491	0		=			
ANR	1693869	UnaryOperationExpression	* inst		1693491	0					
ANR	1693870	UnaryOperator	*		1693491	0					
ANR	1693871	Identifier	inst		1693491	1					
ANR	1693872	Identifier	IMUL_r_rm_i8		1693491	1					
ANR	1693873	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"	1721:3:47356:47401	1693491	3	True				
ANR	1693874	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1693491	0		=			
ANR	1693875	Identifier	inst		1693491	0					
ANR	1693876	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 1 )"		1693491	1					
ANR	1693877	CastTarget	sljit_ub *		1693491	0					
ANR	1693878	CallExpression	"ensure_buf ( compiler , 1 + 1 )"		1693491	1					
ANR	1693879	Callee	ensure_buf		1693491	0					
ANR	1693880	Identifier	ensure_buf		1693491	0					
ANR	1693881	ArgumentList	compiler		1693491	1					
ANR	1693882	Argument	compiler		1693491	0					
ANR	1693883	Identifier	compiler		1693491	0					
ANR	1693884	Argument	1 + 1		1693491	1					
ANR	1693885	AdditiveExpression	1 + 1		1693491	0		+			
ANR	1693886	PrimaryExpression	1		1693491	0					
ANR	1693887	PrimaryExpression	1		1693491	1					
ANR	1693888	ExpressionStatement	FAIL_IF ( ! inst )	1722:3:47406:47420	1693491	4	True				
ANR	1693889	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693890	Callee	FAIL_IF		1693491	0					
ANR	1693891	Identifier	FAIL_IF		1693491	0					
ANR	1693892	ArgumentList	! inst		1693491	1					
ANR	1693893	Argument	! inst		1693491	0					
ANR	1693894	UnaryOperationExpression	! inst		1693491	0					
ANR	1693895	UnaryOperator	!		1693491	0					
ANR	1693896	Identifier	inst		1693491	1					
ANR	1693897	ExpressionStatement	INC_SIZE ( 1 )	1723:3:47425:47436	1693491	5	True				
ANR	1693898	CallExpression	INC_SIZE ( 1 )		1693491	0					
ANR	1693899	Callee	INC_SIZE		1693491	0					
ANR	1693900	Identifier	INC_SIZE		1693491	0					
ANR	1693901	ArgumentList	1		1693491	1					
ANR	1693902	Argument	1		1693491	0					
ANR	1693903	PrimaryExpression	1		1693491	0					
ANR	1693904	ExpressionStatement	* inst = ( sljit_sb ) src2w	1724:3:47441:47464	1693491	6	True				
ANR	1693905	AssignmentExpression	* inst = ( sljit_sb ) src2w		1693491	0		=			
ANR	1693906	UnaryOperationExpression	* inst		1693491	0					
ANR	1693907	UnaryOperator	*		1693491	0					
ANR	1693908	Identifier	inst		1693491	1					
ANR	1693909	CastExpression	( sljit_sb ) src2w		1693491	1					
ANR	1693910	CastTarget	sljit_sb		1693491	0					
ANR	1693911	Identifier	src2w		1693491	1					
ANR	1693912	ElseStatement	else		1693491	0					
ANR	1693913	CompoundStatement		80:7:2133:2133	1693491	0					
ANR	1693914	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"	1728:3:47539:47602	1693491	0	True				
ANR	1693915	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1693491	0		=			
ANR	1693916	Identifier	inst		1693491	0					
ANR	1693917	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , src1 , src1w )"		1693491	1					
ANR	1693918	Callee	emit_x86_instruction		1693491	0					
ANR	1693919	Identifier	emit_x86_instruction		1693491	0					
ANR	1693920	ArgumentList	compiler		1693491	1					
ANR	1693921	Argument	compiler		1693491	0					
ANR	1693922	Identifier	compiler		1693491	0					
ANR	1693923	Argument	1		1693491	1					
ANR	1693924	PrimaryExpression	1		1693491	0					
ANR	1693925	Argument	dst_r		1693491	2					
ANR	1693926	Identifier	dst_r		1693491	0					
ANR	1693927	Argument	0		1693491	3					
ANR	1693928	PrimaryExpression	0		1693491	0					
ANR	1693929	Argument	src1		1693491	4					
ANR	1693930	Identifier	src1		1693491	0					
ANR	1693931	Argument	src1w		1693491	5					
ANR	1693932	Identifier	src1w		1693491	0					
ANR	1693933	ExpressionStatement	FAIL_IF ( ! inst )	1729:3:47607:47621	1693491	1	True				
ANR	1693934	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693935	Callee	FAIL_IF		1693491	0					
ANR	1693936	Identifier	FAIL_IF		1693491	0					
ANR	1693937	ArgumentList	! inst		1693491	1					
ANR	1693938	Argument	! inst		1693491	0					
ANR	1693939	UnaryOperationExpression	! inst		1693491	0					
ANR	1693940	UnaryOperator	!		1693491	0					
ANR	1693941	Identifier	inst		1693491	1					
ANR	1693942	ExpressionStatement	* inst = IMUL_r_rm_i32	1730:3:47626:47647	1693491	2	True				
ANR	1693943	AssignmentExpression	* inst = IMUL_r_rm_i32		1693491	0		=			
ANR	1693944	UnaryOperationExpression	* inst		1693491	0					
ANR	1693945	UnaryOperator	*		1693491	0					
ANR	1693946	Identifier	inst		1693491	1					
ANR	1693947	Identifier	IMUL_r_rm_i32		1693491	1					
ANR	1693948	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"	1731:3:47652:47697	1693491	3	True				
ANR	1693949	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1693491	0		=			
ANR	1693950	Identifier	inst		1693491	0					
ANR	1693951	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 )"		1693491	1					
ANR	1693952	CastTarget	sljit_ub *		1693491	0					
ANR	1693953	CallExpression	"ensure_buf ( compiler , 1 + 4 )"		1693491	1					
ANR	1693954	Callee	ensure_buf		1693491	0					
ANR	1693955	Identifier	ensure_buf		1693491	0					
ANR	1693956	ArgumentList	compiler		1693491	1					
ANR	1693957	Argument	compiler		1693491	0					
ANR	1693958	Identifier	compiler		1693491	0					
ANR	1693959	Argument	1 + 4		1693491	1					
ANR	1693960	AdditiveExpression	1 + 4		1693491	0		+			
ANR	1693961	PrimaryExpression	1		1693491	0					
ANR	1693962	PrimaryExpression	4		1693491	1					
ANR	1693963	ExpressionStatement	FAIL_IF ( ! inst )	1732:3:47702:47716	1693491	4	True				
ANR	1693964	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1693965	Callee	FAIL_IF		1693491	0					
ANR	1693966	Identifier	FAIL_IF		1693491	0					
ANR	1693967	ArgumentList	! inst		1693491	1					
ANR	1693968	Argument	! inst		1693491	0					
ANR	1693969	UnaryOperationExpression	! inst		1693491	0					
ANR	1693970	UnaryOperator	!		1693491	0					
ANR	1693971	Identifier	inst		1693491	1					
ANR	1693972	ExpressionStatement	INC_SIZE ( 4 )	1733:3:47721:47732	1693491	5	True				
ANR	1693973	CallExpression	INC_SIZE ( 4 )		1693491	0					
ANR	1693974	Callee	INC_SIZE		1693491	0					
ANR	1693975	Identifier	INC_SIZE		1693491	0					
ANR	1693976	ArgumentList	4		1693491	1					
ANR	1693977	Argument	4		1693491	0					
ANR	1693978	PrimaryExpression	4		1693491	0					
ANR	1693979	ExpressionStatement	* ( sljit_sw * ) inst = src2w	1734:3:47737:47761	1693491	6	True				
ANR	1693980	AssignmentExpression	* ( sljit_sw * ) inst = src2w		1693491	0		=			
ANR	1693981	UnaryOperationExpression	* ( sljit_sw * ) inst		1693491	0					
ANR	1693982	UnaryOperator	*		1693491	0					
ANR	1693983	CastExpression	( sljit_sw * ) inst		1693491	1					
ANR	1693984	CastTarget	sljit_sw *		1693491	0					
ANR	1693985	Identifier	inst		1693491	1					
ANR	1693986	Identifier	src2w		1693491	1					
ANR	1693987	ElseStatement	else		1693491	0					
ANR	1693988	CompoundStatement		110:6:2930:2930	1693491	0					
ANR	1693989	IfStatement	"if ( ADDRESSING_DEPENDS_ON ( src2 , dst_r ) )"		1693491	0					
ANR	1693990	Condition	"ADDRESSING_DEPENDS_ON ( src2 , dst_r )"	1759:6:48378:48411	1693491	0	True				
ANR	1693991	CallExpression	"ADDRESSING_DEPENDS_ON ( src2 , dst_r )"		1693491	0					
ANR	1693992	Callee	ADDRESSING_DEPENDS_ON		1693491	0					
ANR	1693993	Identifier	ADDRESSING_DEPENDS_ON		1693491	0					
ANR	1693994	ArgumentList	src2		1693491	1					
ANR	1693995	Argument	src2		1693491	0					
ANR	1693996	Identifier	src2		1693491	0					
ANR	1693997	Argument	dst_r		1693491	1					
ANR	1693998	Identifier	dst_r		1693491	0					
ANR	1693999	ExpressionStatement	dst_r = TMP_REG1	1760:3:48417:48433	1693491	1	True				
ANR	1694000	AssignmentExpression	dst_r = TMP_REG1		1693491	0		=			
ANR	1694001	Identifier	dst_r		1693491	0					
ANR	1694002	Identifier	TMP_REG1		1693491	1					
ANR	1694003	ExpressionStatement	"EMIT_MOV ( compiler , dst_r , 0 , src1 , src1w )"	1761:2:48437:48478	1693491	1	True				
ANR	1694004	CallExpression	"EMIT_MOV ( compiler , dst_r , 0 , src1 , src1w )"		1693491	0					
ANR	1694005	Callee	EMIT_MOV		1693491	0					
ANR	1694006	Identifier	EMIT_MOV		1693491	0					
ANR	1694007	ArgumentList	compiler		1693491	1					
ANR	1694008	Argument	compiler		1693491	0					
ANR	1694009	Identifier	compiler		1693491	0					
ANR	1694010	Argument	dst_r		1693491	1					
ANR	1694011	Identifier	dst_r		1693491	0					
ANR	1694012	Argument	0		1693491	2					
ANR	1694013	PrimaryExpression	0		1693491	0					
ANR	1694014	Argument	src1		1693491	3					
ANR	1694015	Identifier	src1		1693491	0					
ANR	1694016	Argument	src1w		1693491	4					
ANR	1694017	Identifier	src1w		1693491	0					
ANR	1694018	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"	1762:2:48482:48545	1693491	2	True				
ANR	1694019	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1693491	0		=			
ANR	1694020	Identifier	inst		1693491	0					
ANR	1694021	CallExpression	"emit_x86_instruction ( compiler , 2 , dst_r , 0 , src2 , src2w )"		1693491	1					
ANR	1694022	Callee	emit_x86_instruction		1693491	0					
ANR	1694023	Identifier	emit_x86_instruction		1693491	0					
ANR	1694024	ArgumentList	compiler		1693491	1					
ANR	1694025	Argument	compiler		1693491	0					
ANR	1694026	Identifier	compiler		1693491	0					
ANR	1694027	Argument	2		1693491	1					
ANR	1694028	PrimaryExpression	2		1693491	0					
ANR	1694029	Argument	dst_r		1693491	2					
ANR	1694030	Identifier	dst_r		1693491	0					
ANR	1694031	Argument	0		1693491	3					
ANR	1694032	PrimaryExpression	0		1693491	0					
ANR	1694033	Argument	src2		1693491	4					
ANR	1694034	Identifier	src2		1693491	0					
ANR	1694035	Argument	src2w		1693491	5					
ANR	1694036	Identifier	src2w		1693491	0					
ANR	1694037	ExpressionStatement	FAIL_IF ( ! inst )	1763:2:48549:48563	1693491	3	True				
ANR	1694038	CallExpression	FAIL_IF ( ! inst )		1693491	0					
ANR	1694039	Callee	FAIL_IF		1693491	0					
ANR	1694040	Identifier	FAIL_IF		1693491	0					
ANR	1694041	ArgumentList	! inst		1693491	1					
ANR	1694042	Argument	! inst		1693491	0					
ANR	1694043	UnaryOperationExpression	! inst		1693491	0					
ANR	1694044	UnaryOperator	!		1693491	0					
ANR	1694045	Identifier	inst		1693491	1					
ANR	1694046	ExpressionStatement	* inst ++ = GROUP_0F	1764:2:48567:48585	1693491	4	True				
ANR	1694047	AssignmentExpression	* inst ++ = GROUP_0F		1693491	0		=			
ANR	1694048	UnaryOperationExpression	* inst ++		1693491	0					
ANR	1694049	UnaryOperator	*		1693491	0					
ANR	1694050	PostIncDecOperationExpression	inst ++		1693491	1					
ANR	1694051	Identifier	inst		1693491	0					
ANR	1694052	IncDec	++		1693491	1					
ANR	1694053	Identifier	GROUP_0F		1693491	1					
ANR	1694054	ExpressionStatement	* inst = IMUL_r_rm	1765:2:48589:48606	1693491	5	True				
ANR	1694055	AssignmentExpression	* inst = IMUL_r_rm		1693491	0		=			
ANR	1694056	UnaryOperationExpression	* inst		1693491	0					
ANR	1694057	UnaryOperator	*		1693491	0					
ANR	1694058	Identifier	inst		1693491	1					
ANR	1694059	Identifier	IMUL_r_rm		1693491	1					
ANR	1694060	IfStatement	if ( dst_r == TMP_REG1 )		1693491	4					
ANR	1694061	Condition	dst_r == TMP_REG1	1768:5:48617:48633	1693491	0	True				
ANR	1694062	EqualityExpression	dst_r == TMP_REG1		1693491	0		==			
ANR	1694063	Identifier	dst_r		1693491	0					
ANR	1694064	Identifier	TMP_REG1		1693491	1					
ANR	1694065	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	1769:2:48638:48680	1693491	1	True				
ANR	1694066	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1693491	0					
ANR	1694067	Callee	EMIT_MOV		1693491	0					
ANR	1694068	Identifier	EMIT_MOV		1693491	0					
ANR	1694069	ArgumentList	compiler		1693491	1					
ANR	1694070	Argument	compiler		1693491	0					
ANR	1694071	Identifier	compiler		1693491	0					
ANR	1694072	Argument	dst		1693491	1					
ANR	1694073	Identifier	dst		1693491	0					
ANR	1694074	Argument	dstw		1693491	2					
ANR	1694075	Identifier	dstw		1693491	0					
ANR	1694076	Argument	TMP_REG1		1693491	3					
ANR	1694077	Identifier	TMP_REG1		1693491	0					
ANR	1694078	Argument	0		1693491	4					
ANR	1694079	PrimaryExpression	0		1693491	0					
ANR	1694080	ReturnStatement	return SLJIT_SUCCESS ;	1771:1:48684:48704	1693491	5	True				
ANR	1694081	Identifier	SLJIT_SUCCESS		1693491	0					
ANR	1694082	ReturnType	static sljit_si		1693491	1					
ANR	1694083	Identifier	emit_mul		1693491	2					
ANR	1694084	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1693491	3					
ANR	1694085	Parameter	struct sljit_compiler * compiler	1644:25:45273:45303	1693491	0	True				
ANR	1694086	ParameterType	struct sljit_compiler *		1693491	0					
ANR	1694087	Identifier	compiler		1693491	1					
ANR	1694088	Parameter	sljit_si dst	1645:1:45307:45318	1693491	1	True				
ANR	1694089	ParameterType	sljit_si		1693491	0					
ANR	1694090	Identifier	dst		1693491	1					
ANR	1694091	Parameter	sljit_sw dstw	1645:15:45321:45333	1693491	2	True				
ANR	1694092	ParameterType	sljit_sw		1693491	0					
ANR	1694093	Identifier	dstw		1693491	1					
ANR	1694094	Parameter	sljit_si src1	1646:1:45337:45349	1693491	3	True				
ANR	1694095	ParameterType	sljit_si		1693491	0					
ANR	1694096	Identifier	src1		1693491	1					
ANR	1694097	Parameter	sljit_sw src1w	1646:16:45352:45365	1693491	4	True				
ANR	1694098	ParameterType	sljit_sw		1693491	0					
ANR	1694099	Identifier	src1w		1693491	1					
ANR	1694100	Parameter	sljit_si src2	1647:1:45369:45381	1693491	5	True				
ANR	1694101	ParameterType	sljit_si		1693491	0					
ANR	1694102	Identifier	src2		1693491	1					
ANR	1694103	Parameter	sljit_sw src2w	1647:16:45384:45397	1693491	6	True				
ANR	1694104	ParameterType	sljit_sw		1693491	0					
ANR	1694105	Identifier	src2w		1693491	1					
ANR	1694106	CFGEntryNode	ENTRY		1693491		True				
ANR	1694107	CFGExitNode	EXIT		1693491		True				
ANR	1694108	Symbol	src2w		1693491						
ANR	1694109	Symbol	TMP_REG1		1693491						
ANR	1694110	Symbol	emit_x86_instruction		1693491						
ANR	1694111	Symbol	GROUP_0F		1693491						
ANR	1694112	Symbol	src1w		1693491						
ANR	1694113	Symbol	FAST_IS_REG		1693491						
ANR	1694114	Symbol	* inst		1693491						
ANR	1694115	Symbol	dst		1693491						
ANR	1694116	Symbol	* inst ++		1693491						
ANR	1694117	Symbol	SLJIT_SUCCESS		1693491						
ANR	1694118	Symbol	* ( sljit_sw * ) inst		1693491						
ANR	1694119	Symbol	IMUL_r_rm_i32		1693491						
ANR	1694120	Symbol	dst_r		1693491						
ANR	1694121	Symbol	SLJIT_IMM		1693491						
ANR	1694122	Symbol	IMUL_r_rm_i8		1693491						
ANR	1694123	Symbol	inst		1693491						
ANR	1694124	Symbol	ensure_buf		1693491						
ANR	1694125	Symbol	src1		1693491						
ANR	1694126	Symbol	src2		1693491						
ANR	1694127	Symbol	ADDRESSING_DEPENDS_ON		1693491						
ANR	1694128	Symbol	compiler		1693491						
ANR	1694129	Symbol	IMUL_r_rm		1693491						
ANR	1694130	Symbol	dstw		1693491						
ANR	1694131	Function	emit_lea_binary	1774:0:48709:50370							
ANR	1694132	FunctionDef	"emit_lea_binary (struct sljit_compiler * compiler , sljit_si keep_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1694131	0					
ANR	1694133	CompoundStatement		1778:0:48889:50370	1694131	0					
ANR	1694134	IdentifierDeclStatement	sljit_ub * inst ;	1779:1:48892:48906	1694131	0	True				
ANR	1694135	IdentifierDecl	* inst		1694131	0					
ANR	1694136	IdentifierDeclType	sljit_ub *		1694131	0					
ANR	1694137	Identifier	inst		1694131	1					
ANR	1694138	IdentifierDeclStatement	"sljit_si dst_r , done = 0 ;"	1780:1:48909:48933	1694131	1	True				
ANR	1694139	IdentifierDecl	dst_r		1694131	0					
ANR	1694140	IdentifierDeclType	sljit_si		1694131	0					
ANR	1694141	Identifier	dst_r		1694131	1					
ANR	1694142	IdentifierDecl	done = 0		1694131	1					
ANR	1694143	IdentifierDeclType	sljit_si		1694131	0					
ANR	1694144	Identifier	done		1694131	1					
ANR	1694145	AssignmentExpression	done = 0		1694131	2		=			
ANR	1694146	Identifier	done		1694131	0					
ANR	1694147	PrimaryExpression	0		1694131	1					
ANR	1694148	IfStatement	if ( ! keep_flags )		1694131	2					
ANR	1694149	Condition	! keep_flags	1783:5:49001:49011	1694131	0	True				
ANR	1694150	UnaryOperationExpression	! keep_flags		1694131	0					
ANR	1694151	UnaryOperator	!		1694131	0					
ANR	1694152	Identifier	keep_flags		1694131	1					
ANR	1694153	CompoundStatement		6:18:124:124	1694131	1					
ANR	1694154	IfStatement	if ( dst == src1 && dstw == src1w )		1694131	0					
ANR	1694155	Condition	dst == src1 && dstw == src1w	1784:6:49022:49049	1694131	0	True				
ANR	1694156	AndExpression	dst == src1 && dstw == src1w		1694131	0		&&			
ANR	1694157	EqualityExpression	dst == src1		1694131	0		==			
ANR	1694158	Identifier	dst		1694131	0					
ANR	1694159	Identifier	src1		1694131	1					
ANR	1694160	EqualityExpression	dstw == src1w		1694131	1		==			
ANR	1694161	Identifier	dstw		1694131	0					
ANR	1694162	Identifier	src1w		1694131	1					
ANR	1694163	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1785:3:49055:49083	1694131	1	True				
ANR	1694164	Identifier	SLJIT_ERR_UNSUPPORTED		1694131	0					
ANR	1694165	IfStatement	if ( dst == src2 && dstw == src2w )		1694131	1					
ANR	1694166	Condition	dst == src2 && dstw == src2w	1786:6:49091:49118	1694131	0	True				
ANR	1694167	AndExpression	dst == src2 && dstw == src2w		1694131	0		&&			
ANR	1694168	EqualityExpression	dst == src2		1694131	0		==			
ANR	1694169	Identifier	dst		1694131	0					
ANR	1694170	Identifier	src2		1694131	1					
ANR	1694171	EqualityExpression	dstw == src2w		1694131	1		==			
ANR	1694172	Identifier	dstw		1694131	0					
ANR	1694173	Identifier	src2w		1694131	1					
ANR	1694174	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1787:3:49124:49152	1694131	1	True				
ANR	1694175	Identifier	SLJIT_ERR_UNSUPPORTED		1694131	0					
ANR	1694176	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1	1790:1:49159:49200	1694131	3	True				
ANR	1694177	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG1		1694131	0		=			
ANR	1694178	Identifier	dst_r		1694131	0					
ANR	1694179	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG1		1694131	1					
ANR	1694180	Condition	FAST_IS_REG ( dst )		1694131	0					
ANR	1694181	CallExpression	FAST_IS_REG ( dst )		1694131	0					
ANR	1694182	Callee	FAST_IS_REG		1694131	0					
ANR	1694183	Identifier	FAST_IS_REG		1694131	0					
ANR	1694184	ArgumentList	dst		1694131	1					
ANR	1694185	Argument	dst		1694131	0					
ANR	1694186	Identifier	dst		1694131	0					
ANR	1694187	Identifier	dst		1694131	1					
ANR	1694188	Identifier	TMP_REG1		1694131	2					
ANR	1694189	IfStatement	if ( FAST_IS_REG ( src1 ) )		1694131	4					
ANR	1694190	Condition	FAST_IS_REG ( src1 )	1792:5:49208:49224	1694131	0	True				
ANR	1694191	CallExpression	FAST_IS_REG ( src1 )		1694131	0					
ANR	1694192	Callee	FAST_IS_REG		1694131	0					
ANR	1694193	Identifier	FAST_IS_REG		1694131	0					
ANR	1694194	ArgumentList	src1		1694131	1					
ANR	1694195	Argument	src1		1694131	0					
ANR	1694196	Identifier	src1		1694131	0					
ANR	1694197	CompoundStatement		15:24:337:337	1694131	1					
ANR	1694198	IfStatement	if ( FAST_IS_REG ( src2 ) )		1694131	0					
ANR	1694199	Condition	FAST_IS_REG ( src2 )	1793:6:49235:49251	1694131	0	True				
ANR	1694200	CallExpression	FAST_IS_REG ( src2 )		1694131	0					
ANR	1694201	Callee	FAST_IS_REG		1694131	0					
ANR	1694202	Identifier	FAST_IS_REG		1694131	0					
ANR	1694203	ArgumentList	src2		1694131	1					
ANR	1694204	Argument	src2		1694131	0					
ANR	1694205	Identifier	src2		1694131	0					
ANR	1694206	CompoundStatement		16:25:364:364	1694131	1					
ANR	1694207	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM2 ( src1 , src2 ) , 0 )"	1794:3:49259:49336	1694131	0	True				
ANR	1694208	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM2 ( src1 , src2 ) , 0 )"		1694131	0		=			
ANR	1694209	Identifier	inst		1694131	0					
ANR	1694210	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM2 ( src1 , src2 ) , 0 )"		1694131	1					
ANR	1694211	Callee	emit_x86_instruction		1694131	0					
ANR	1694212	Identifier	emit_x86_instruction		1694131	0					
ANR	1694213	ArgumentList	compiler		1694131	1					
ANR	1694214	Argument	compiler		1694131	0					
ANR	1694215	Identifier	compiler		1694131	0					
ANR	1694216	Argument	1		1694131	1					
ANR	1694217	PrimaryExpression	1		1694131	0					
ANR	1694218	Argument	dst_r		1694131	2					
ANR	1694219	Identifier	dst_r		1694131	0					
ANR	1694220	Argument	0		1694131	3					
ANR	1694221	PrimaryExpression	0		1694131	0					
ANR	1694222	Argument	"SLJIT_MEM2 ( src1 , src2 )"		1694131	4					
ANR	1694223	CallExpression	"SLJIT_MEM2 ( src1 , src2 )"		1694131	0					
ANR	1694224	Callee	SLJIT_MEM2		1694131	0					
ANR	1694225	Identifier	SLJIT_MEM2		1694131	0					
ANR	1694226	ArgumentList	src1		1694131	1					
ANR	1694227	Argument	src1		1694131	0					
ANR	1694228	Identifier	src1		1694131	0					
ANR	1694229	Argument	src2		1694131	1					
ANR	1694230	Identifier	src2		1694131	0					
ANR	1694231	Argument	0		1694131	5					
ANR	1694232	PrimaryExpression	0		1694131	0					
ANR	1694233	ExpressionStatement	FAIL_IF ( ! inst )	1795:3:49341:49355	1694131	1	True				
ANR	1694234	CallExpression	FAIL_IF ( ! inst )		1694131	0					
ANR	1694235	Callee	FAIL_IF		1694131	0					
ANR	1694236	Identifier	FAIL_IF		1694131	0					
ANR	1694237	ArgumentList	! inst		1694131	1					
ANR	1694238	Argument	! inst		1694131	0					
ANR	1694239	UnaryOperationExpression	! inst		1694131	0					
ANR	1694240	UnaryOperator	!		1694131	0					
ANR	1694241	Identifier	inst		1694131	1					
ANR	1694242	ExpressionStatement	* inst = LEA_r_m	1796:3:49360:49375	1694131	2	True				
ANR	1694243	AssignmentExpression	* inst = LEA_r_m		1694131	0		=			
ANR	1694244	UnaryOperationExpression	* inst		1694131	0					
ANR	1694245	UnaryOperator	*		1694131	0					
ANR	1694246	Identifier	inst		1694131	1					
ANR	1694247	Identifier	LEA_r_m		1694131	1					
ANR	1694248	ExpressionStatement	done = 1	1797:3:49380:49388	1694131	3	True				
ANR	1694249	AssignmentExpression	done = 1		1694131	0		=			
ANR	1694250	Identifier	done		1694131	0					
ANR	1694251	PrimaryExpression	1		1694131	1					
ANR	1694252	IfStatement	if ( ( src2 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1694131	1					
ANR	1694253	Condition	( src2 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1800:6:49457:49518	1694131	0	True				
ANR	1694254	AndExpression	( src2 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1694131	0		&&			
ANR	1694255	BitAndExpression	src2 & SLJIT_IMM		1694131	0		&			
ANR	1694256	Identifier	src2		1694131	0					
ANR	1694257	Identifier	SLJIT_IMM		1694131	1					
ANR	1694258	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1694131	1		||			
ANR	1694259	PtrMemberAccess	compiler -> mode32		1694131	0					
ANR	1694260	Identifier	compiler		1694131	0					
ANR	1694261	Identifier	mode32		1694131	1					
ANR	1694262	CallExpression	IS_HALFWORD ( src2w )		1694131	1					
ANR	1694263	Callee	IS_HALFWORD		1694131	0					
ANR	1694264	Identifier	IS_HALFWORD		1694131	0					
ANR	1694265	ArgumentList	src2w		1694131	1					
ANR	1694266	Argument	src2w		1694131	0					
ANR	1694267	Identifier	src2w		1694131	0					
ANR	1694268	CompoundStatement		23:70:631:631	1694131	1					
ANR	1694269	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src1 ) , ( sljit_si ) src2w )"	1801:3:49526:49611	1694131	0	True				
ANR	1694270	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src1 ) , ( sljit_si ) src2w )"		1694131	0		=			
ANR	1694271	Identifier	inst		1694131	0					
ANR	1694272	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src1 ) , ( sljit_si ) src2w )"		1694131	1					
ANR	1694273	Callee	emit_x86_instruction		1694131	0					
ANR	1694274	Identifier	emit_x86_instruction		1694131	0					
ANR	1694275	ArgumentList	compiler		1694131	1					
ANR	1694276	Argument	compiler		1694131	0					
ANR	1694277	Identifier	compiler		1694131	0					
ANR	1694278	Argument	1		1694131	1					
ANR	1694279	PrimaryExpression	1		1694131	0					
ANR	1694280	Argument	dst_r		1694131	2					
ANR	1694281	Identifier	dst_r		1694131	0					
ANR	1694282	Argument	0		1694131	3					
ANR	1694283	PrimaryExpression	0		1694131	0					
ANR	1694284	Argument	SLJIT_MEM1 ( src1 )		1694131	4					
ANR	1694285	CallExpression	SLJIT_MEM1 ( src1 )		1694131	0					
ANR	1694286	Callee	SLJIT_MEM1		1694131	0					
ANR	1694287	Identifier	SLJIT_MEM1		1694131	0					
ANR	1694288	ArgumentList	src1		1694131	1					
ANR	1694289	Argument	src1		1694131	0					
ANR	1694290	Identifier	src1		1694131	0					
ANR	1694291	Argument	( sljit_si ) src2w		1694131	5					
ANR	1694292	CastExpression	( sljit_si ) src2w		1694131	0					
ANR	1694293	CastTarget	sljit_si		1694131	0					
ANR	1694294	Identifier	src2w		1694131	1					
ANR	1694295	ExpressionStatement	FAIL_IF ( ! inst )	1806:3:49735:49749	1694131	1	True				
ANR	1694296	CallExpression	FAIL_IF ( ! inst )		1694131	0					
ANR	1694297	Callee	FAIL_IF		1694131	0					
ANR	1694298	Identifier	FAIL_IF		1694131	0					
ANR	1694299	ArgumentList	! inst		1694131	1					
ANR	1694300	Argument	! inst		1694131	0					
ANR	1694301	UnaryOperationExpression	! inst		1694131	0					
ANR	1694302	UnaryOperator	!		1694131	0					
ANR	1694303	Identifier	inst		1694131	1					
ANR	1694304	ExpressionStatement	* inst = LEA_r_m	1807:3:49754:49769	1694131	2	True				
ANR	1694305	AssignmentExpression	* inst = LEA_r_m		1694131	0		=			
ANR	1694306	UnaryOperationExpression	* inst		1694131	0					
ANR	1694307	UnaryOperator	*		1694131	0					
ANR	1694308	Identifier	inst		1694131	1					
ANR	1694309	Identifier	LEA_r_m		1694131	1					
ANR	1694310	ExpressionStatement	done = 1	1808:3:49774:49782	1694131	3	True				
ANR	1694311	AssignmentExpression	done = 1		1694131	0		=			
ANR	1694312	Identifier	done		1694131	0					
ANR	1694313	PrimaryExpression	1		1694131	1					
ANR	1694314	ElseStatement	else		1694131	0					
ANR	1694315	IfStatement	if ( FAST_IS_REG ( src2 ) )		1694131	0					
ANR	1694316	Condition	FAST_IS_REG ( src2 )	1811:10:49801:49817	1694131	0	True				
ANR	1694317	CallExpression	FAST_IS_REG ( src2 )		1694131	0					
ANR	1694318	Callee	FAST_IS_REG		1694131	0					
ANR	1694319	Identifier	FAST_IS_REG		1694131	0					
ANR	1694320	ArgumentList	src2		1694131	1					
ANR	1694321	Argument	src2		1694131	0					
ANR	1694322	Identifier	src2		1694131	0					
ANR	1694323	CompoundStatement		34:29:930:930	1694131	1					
ANR	1694324	IfStatement	if ( ( src1 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) ) )		1694131	0					
ANR	1694325	Condition	( src1 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )	1813:6:49885:49946	1694131	0	True				
ANR	1694326	AndExpression	( src1 & SLJIT_IMM ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1694131	0		&&			
ANR	1694327	BitAndExpression	src1 & SLJIT_IMM		1694131	0		&			
ANR	1694328	Identifier	src1		1694131	0					
ANR	1694329	Identifier	SLJIT_IMM		1694131	1					
ANR	1694330	OrExpression	compiler -> mode32 || IS_HALFWORD ( src1w )		1694131	1		||			
ANR	1694331	PtrMemberAccess	compiler -> mode32		1694131	0					
ANR	1694332	Identifier	compiler		1694131	0					
ANR	1694333	Identifier	mode32		1694131	1					
ANR	1694334	CallExpression	IS_HALFWORD ( src1w )		1694131	1					
ANR	1694335	Callee	IS_HALFWORD		1694131	0					
ANR	1694336	Identifier	IS_HALFWORD		1694131	0					
ANR	1694337	ArgumentList	src1w		1694131	1					
ANR	1694338	Argument	src1w		1694131	0					
ANR	1694339	Identifier	src1w		1694131	0					
ANR	1694340	CompoundStatement		36:70:1059:1059	1694131	1					
ANR	1694341	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src2 ) , ( sljit_si ) src1w )"	1814:3:49954:50039	1694131	0	True				
ANR	1694342	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src2 ) , ( sljit_si ) src1w )"		1694131	0		=			
ANR	1694343	Identifier	inst		1694131	0					
ANR	1694344	CallExpression	"emit_x86_instruction ( compiler , 1 , dst_r , 0 , SLJIT_MEM1 ( src2 ) , ( sljit_si ) src1w )"		1694131	1					
ANR	1694345	Callee	emit_x86_instruction		1694131	0					
ANR	1694346	Identifier	emit_x86_instruction		1694131	0					
ANR	1694347	ArgumentList	compiler		1694131	1					
ANR	1694348	Argument	compiler		1694131	0					
ANR	1694349	Identifier	compiler		1694131	0					
ANR	1694350	Argument	1		1694131	1					
ANR	1694351	PrimaryExpression	1		1694131	0					
ANR	1694352	Argument	dst_r		1694131	2					
ANR	1694353	Identifier	dst_r		1694131	0					
ANR	1694354	Argument	0		1694131	3					
ANR	1694355	PrimaryExpression	0		1694131	0					
ANR	1694356	Argument	SLJIT_MEM1 ( src2 )		1694131	4					
ANR	1694357	CallExpression	SLJIT_MEM1 ( src2 )		1694131	0					
ANR	1694358	Callee	SLJIT_MEM1		1694131	0					
ANR	1694359	Identifier	SLJIT_MEM1		1694131	0					
ANR	1694360	ArgumentList	src2		1694131	1					
ANR	1694361	Argument	src2		1694131	0					
ANR	1694362	Identifier	src2		1694131	0					
ANR	1694363	Argument	( sljit_si ) src1w		1694131	5					
ANR	1694364	CastExpression	( sljit_si ) src1w		1694131	0					
ANR	1694365	CastTarget	sljit_si		1694131	0					
ANR	1694366	Identifier	src1w		1694131	1					
ANR	1694367	ExpressionStatement	FAIL_IF ( ! inst )	1819:3:50163:50177	1694131	1	True				
ANR	1694368	CallExpression	FAIL_IF ( ! inst )		1694131	0					
ANR	1694369	Callee	FAIL_IF		1694131	0					
ANR	1694370	Identifier	FAIL_IF		1694131	0					
ANR	1694371	ArgumentList	! inst		1694131	1					
ANR	1694372	Argument	! inst		1694131	0					
ANR	1694373	UnaryOperationExpression	! inst		1694131	0					
ANR	1694374	UnaryOperator	!		1694131	0					
ANR	1694375	Identifier	inst		1694131	1					
ANR	1694376	ExpressionStatement	* inst = LEA_r_m	1820:3:50182:50197	1694131	2	True				
ANR	1694377	AssignmentExpression	* inst = LEA_r_m		1694131	0		=			
ANR	1694378	UnaryOperationExpression	* inst		1694131	0					
ANR	1694379	UnaryOperator	*		1694131	0					
ANR	1694380	Identifier	inst		1694131	1					
ANR	1694381	Identifier	LEA_r_m		1694131	1					
ANR	1694382	ExpressionStatement	done = 1	1821:3:50202:50210	1694131	3	True				
ANR	1694383	AssignmentExpression	done = 1		1694131	0		=			
ANR	1694384	Identifier	done		1694131	0					
ANR	1694385	PrimaryExpression	1		1694131	1					
ANR	1694386	IfStatement	if ( done )		1694131	5					
ANR	1694387	Condition	done	1825:5:50225:50228	1694131	0	True				
ANR	1694388	Identifier	done		1694131	0					
ANR	1694389	CompoundStatement		48:11:1341:1341	1694131	1					
ANR	1694390	IfStatement	if ( dst_r == TMP_REG1 )		1694131	0					
ANR	1694391	Condition	dst_r == TMP_REG1	1826:6:50239:50255	1694131	0	True				
ANR	1694392	EqualityExpression	dst_r == TMP_REG1		1694131	0		==			
ANR	1694393	Identifier	dst_r		1694131	0					
ANR	1694394	Identifier	TMP_REG1		1694131	1					
ANR	1694395	ReturnStatement	"return emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) ;"	1827:3:50261:50310	1694131	1	True				
ANR	1694396	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1694131	0					
ANR	1694397	Callee	emit_mov		1694131	0					
ANR	1694398	Identifier	emit_mov		1694131	0					
ANR	1694399	ArgumentList	compiler		1694131	1					
ANR	1694400	Argument	compiler		1694131	0					
ANR	1694401	Identifier	compiler		1694131	0					
ANR	1694402	Argument	dst		1694131	1					
ANR	1694403	Identifier	dst		1694131	0					
ANR	1694404	Argument	dstw		1694131	2					
ANR	1694405	Identifier	dstw		1694131	0					
ANR	1694406	Argument	TMP_REG1		1694131	3					
ANR	1694407	Identifier	TMP_REG1		1694131	0					
ANR	1694408	Argument	0		1694131	4					
ANR	1694409	PrimaryExpression	0		1694131	0					
ANR	1694410	ReturnStatement	return SLJIT_SUCCESS ;	1828:2:50314:50334	1694131	1	True				
ANR	1694411	Identifier	SLJIT_SUCCESS		1694131	0					
ANR	1694412	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1830:1:50340:50368	1694131	6	True				
ANR	1694413	Identifier	SLJIT_ERR_UNSUPPORTED		1694131	0					
ANR	1694414	ReturnType	static sljit_si		1694131	1					
ANR	1694415	Identifier	emit_lea_binary		1694131	2					
ANR	1694416	ParameterList	"struct sljit_compiler * compiler , sljit_si keep_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1694131	3					
ANR	1694417	Parameter	struct sljit_compiler * compiler	1774:32:48741:48771	1694131	0	True				
ANR	1694418	ParameterType	struct sljit_compiler *		1694131	0					
ANR	1694419	Identifier	compiler		1694131	1					
ANR	1694420	Parameter	sljit_si keep_flags	1774:65:48774:48792	1694131	1	True				
ANR	1694421	ParameterType	sljit_si		1694131	0					
ANR	1694422	Identifier	keep_flags		1694131	1					
ANR	1694423	Parameter	sljit_si dst	1775:1:48796:48807	1694131	2	True				
ANR	1694424	ParameterType	sljit_si		1694131	0					
ANR	1694425	Identifier	dst		1694131	1					
ANR	1694426	Parameter	sljit_sw dstw	1775:15:48810:48822	1694131	3	True				
ANR	1694427	ParameterType	sljit_sw		1694131	0					
ANR	1694428	Identifier	dstw		1694131	1					
ANR	1694429	Parameter	sljit_si src1	1776:1:48826:48838	1694131	4	True				
ANR	1694430	ParameterType	sljit_si		1694131	0					
ANR	1694431	Identifier	src1		1694131	1					
ANR	1694432	Parameter	sljit_sw src1w	1776:16:48841:48854	1694131	5	True				
ANR	1694433	ParameterType	sljit_sw		1694131	0					
ANR	1694434	Identifier	src1w		1694131	1					
ANR	1694435	Parameter	sljit_si src2	1777:1:48858:48870	1694131	6	True				
ANR	1694436	ParameterType	sljit_si		1694131	0					
ANR	1694437	Identifier	src2		1694131	1					
ANR	1694438	Parameter	sljit_sw src2w	1777:16:48873:48886	1694131	7	True				
ANR	1694439	ParameterType	sljit_sw		1694131	0					
ANR	1694440	Identifier	src2w		1694131	1					
ANR	1694441	CFGEntryNode	ENTRY		1694131		True				
ANR	1694442	CFGExitNode	EXIT		1694131		True				
ANR	1694443	Symbol	TMP_REG1		1694131						
ANR	1694444	Symbol	src1w		1694131						
ANR	1694445	Symbol	dst		1694131						
ANR	1694446	Symbol	* compiler		1694131						
ANR	1694447	Symbol	dst_r		1694131						
ANR	1694448	Symbol	LEA_r_m		1694131						
ANR	1694449	Symbol	SLJIT_IMM		1694131						
ANR	1694450	Symbol	SLJIT_MEM2		1694131						
ANR	1694451	Symbol	IS_HALFWORD		1694131						
ANR	1694452	Symbol	compiler		1694131						
ANR	1694453	Symbol	src2w		1694131						
ANR	1694454	Symbol	keep_flags		1694131						
ANR	1694455	Symbol	emit_x86_instruction		1694131						
ANR	1694456	Symbol	FAST_IS_REG		1694131						
ANR	1694457	Symbol	* inst		1694131						
ANR	1694458	Symbol	SLJIT_SUCCESS		1694131						
ANR	1694459	Symbol	SLJIT_MEM1		1694131						
ANR	1694460	Symbol	done		1694131						
ANR	1694461	Symbol	emit_mov		1694131						
ANR	1694462	Symbol	inst		1694131						
ANR	1694463	Symbol	src1		1694131						
ANR	1694464	Symbol	compiler -> mode32		1694131						
ANR	1694465	Symbol	src2		1694131						
ANR	1694466	Symbol	dstw		1694131						
ANR	1694467	Symbol	SLJIT_ERR_UNSUPPORTED		1694131						
ANR	1694468	Function	emit_cmp_binary	1833:0:50373:51673							
ANR	1694469	FunctionDef	"emit_cmp_binary (struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1694468	0					
ANR	1694470	CompoundStatement		1836:0:50502:51673	1694468	0					
ANR	1694471	IdentifierDeclStatement	sljit_ub * inst ;	1837:1:50505:50519	1694468	0	True				
ANR	1694472	IdentifierDecl	* inst		1694468	0					
ANR	1694473	IdentifierDeclType	sljit_ub *		1694468	0					
ANR	1694474	Identifier	inst		1694468	1					
ANR	1694475	IfStatement	if ( src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1694468	1					
ANR	1694476	Condition	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1840:5:50584:50698	1694468	0	True				
ANR	1694477	AndExpression	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1694468	0		&&			
ANR	1694478	EqualityExpression	src1 == SLJIT_R0		1694468	0		==			
ANR	1694479	Identifier	src1		1694468	0					
ANR	1694480	Identifier	SLJIT_R0		1694468	1					
ANR	1694481	AndExpression	( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1694468	1		&&			
ANR	1694482	BitAndExpression	src2 & SLJIT_IMM		1694468	0		&			
ANR	1694483	Identifier	src2		1694468	0					
ANR	1694484	Identifier	SLJIT_IMM		1694468	1					
ANR	1694485	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1694468	1		&&			
ANR	1694486	OrExpression	src2w > 127 || src2w < - 128		1694468	0		||			
ANR	1694487	RelationalExpression	src2w > 127		1694468	0		>			
ANR	1694488	Identifier	src2w		1694468	0					
ANR	1694489	PrimaryExpression	127		1694468	1					
ANR	1694490	RelationalExpression	src2w < - 128		1694468	1		<			
ANR	1694491	Identifier	src2w		1694468	0					
ANR	1694492	UnaryOperationExpression	- 128		1694468	1					
ANR	1694493	UnaryOperator	-		1694468	0					
ANR	1694494	PrimaryExpression	128		1694468	1					
ANR	1694495	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1694468	1		||			
ANR	1694496	PtrMemberAccess	compiler -> mode32		1694468	0					
ANR	1694497	Identifier	compiler		1694468	0					
ANR	1694498	Identifier	mode32		1694468	1					
ANR	1694499	CallExpression	IS_HALFWORD ( src2w )		1694468	1					
ANR	1694500	Callee	IS_HALFWORD		1694468	0					
ANR	1694501	Identifier	IS_HALFWORD		1694468	0					
ANR	1694502	ArgumentList	src2w		1694468	1					
ANR	1694503	Argument	src2w		1694468	0					
ANR	1694504	Identifier	src2w		1694468	0					
ANR	1694505	CompoundStatement		5:122:198:198	1694468	1					
ANR	1694506	ExpressionStatement	"BINARY_EAX_IMM ( CMP_EAX_i32 , src2w )"	1844:2:50798:50832	1694468	0	True				
ANR	1694507	CallExpression	"BINARY_EAX_IMM ( CMP_EAX_i32 , src2w )"		1694468	0					
ANR	1694508	Callee	BINARY_EAX_IMM		1694468	0					
ANR	1694509	Identifier	BINARY_EAX_IMM		1694468	0					
ANR	1694510	ArgumentList	CMP_EAX_i32		1694468	1					
ANR	1694511	Argument	CMP_EAX_i32		1694468	0					
ANR	1694512	Identifier	CMP_EAX_i32		1694468	0					
ANR	1694513	Argument	src2w		1694468	1					
ANR	1694514	Identifier	src2w		1694468	0					
ANR	1694515	ReturnStatement	return SLJIT_SUCCESS ;	1845:2:50836:50856	1694468	1	True				
ANR	1694516	Identifier	SLJIT_SUCCESS		1694468	0					
ANR	1694517	IfStatement	if ( FAST_IS_REG ( src1 ) )		1694468	2					
ANR	1694518	Condition	FAST_IS_REG ( src1 )	1848:5:50867:50883	1694468	0	True				
ANR	1694519	CallExpression	FAST_IS_REG ( src1 )		1694468	0					
ANR	1694520	Callee	FAST_IS_REG		1694468	0					
ANR	1694521	Identifier	FAST_IS_REG		1694468	0					
ANR	1694522	ArgumentList	src1		1694468	1					
ANR	1694523	Argument	src1		1694468	0					
ANR	1694524	Identifier	src1		1694468	0					
ANR	1694525	CompoundStatement		13:24:383:383	1694468	1					
ANR	1694526	IfStatement	if ( src2 & SLJIT_IMM )		1694468	0					
ANR	1694527	Condition	src2 & SLJIT_IMM	1849:6:50894:50909	1694468	0	True				
ANR	1694528	BitAndExpression	src2 & SLJIT_IMM		1694468	0		&			
ANR	1694529	Identifier	src2		1694468	0					
ANR	1694530	Identifier	SLJIT_IMM		1694468	1					
ANR	1694531	CompoundStatement		14:24:409:409	1694468	1					
ANR	1694532	ExpressionStatement	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , 0 )"	1850:3:50917:50958	1694468	0	True				
ANR	1694533	CallExpression	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , 0 )"		1694468	0					
ANR	1694534	Callee	BINARY_IMM		1694468	0					
ANR	1694535	Identifier	BINARY_IMM		1694468	0					
ANR	1694536	ArgumentList	CMP		1694468	1					
ANR	1694537	Argument	CMP		1694468	0					
ANR	1694538	Identifier	CMP		1694468	0					
ANR	1694539	Argument	CMP_rm_r		1694468	1					
ANR	1694540	Identifier	CMP_rm_r		1694468	0					
ANR	1694541	Argument	src2w		1694468	2					
ANR	1694542	Identifier	src2w		1694468	0					
ANR	1694543	Argument	src1		1694468	3					
ANR	1694544	Identifier	src1		1694468	0					
ANR	1694545	Argument	0		1694468	4					
ANR	1694546	PrimaryExpression	0		1694468	0					
ANR	1694547	ElseStatement	else		1694468	0					
ANR	1694548	CompoundStatement		17:7:468:468	1694468	0					
ANR	1694549	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"	1853:3:50976:51038	1694468	0	True				
ANR	1694550	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1694468	0		=			
ANR	1694551	Identifier	inst		1694468	0					
ANR	1694552	CallExpression	"emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1694468	1					
ANR	1694553	Callee	emit_x86_instruction		1694468	0					
ANR	1694554	Identifier	emit_x86_instruction		1694468	0					
ANR	1694555	ArgumentList	compiler		1694468	1					
ANR	1694556	Argument	compiler		1694468	0					
ANR	1694557	Identifier	compiler		1694468	0					
ANR	1694558	Argument	1		1694468	1					
ANR	1694559	PrimaryExpression	1		1694468	0					
ANR	1694560	Argument	src1		1694468	2					
ANR	1694561	Identifier	src1		1694468	0					
ANR	1694562	Argument	0		1694468	3					
ANR	1694563	PrimaryExpression	0		1694468	0					
ANR	1694564	Argument	src2		1694468	4					
ANR	1694565	Identifier	src2		1694468	0					
ANR	1694566	Argument	src2w		1694468	5					
ANR	1694567	Identifier	src2w		1694468	0					
ANR	1694568	ExpressionStatement	FAIL_IF ( ! inst )	1854:3:51043:51057	1694468	1	True				
ANR	1694569	CallExpression	FAIL_IF ( ! inst )		1694468	0					
ANR	1694570	Callee	FAIL_IF		1694468	0					
ANR	1694571	Identifier	FAIL_IF		1694468	0					
ANR	1694572	ArgumentList	! inst		1694468	1					
ANR	1694573	Argument	! inst		1694468	0					
ANR	1694574	UnaryOperationExpression	! inst		1694468	0					
ANR	1694575	UnaryOperator	!		1694468	0					
ANR	1694576	Identifier	inst		1694468	1					
ANR	1694577	ExpressionStatement	* inst = CMP_r_rm	1855:3:51062:51078	1694468	2	True				
ANR	1694578	AssignmentExpression	* inst = CMP_r_rm		1694468	0		=			
ANR	1694579	UnaryOperationExpression	* inst		1694468	0					
ANR	1694580	UnaryOperator	*		1694468	0					
ANR	1694581	Identifier	inst		1694468	1					
ANR	1694582	Identifier	CMP_r_rm		1694468	1					
ANR	1694583	ReturnStatement	return SLJIT_SUCCESS ;	1857:2:51086:51106	1694468	1	True				
ANR	1694584	Identifier	SLJIT_SUCCESS		1694468	0					
ANR	1694585	IfStatement	if ( FAST_IS_REG ( src2 ) && ! ( src1 & SLJIT_IMM ) )		1694468	3					
ANR	1694586	Condition	FAST_IS_REG ( src2 ) && ! ( src1 & SLJIT_IMM )	1860:5:51117:51156	1694468	0	True				
ANR	1694587	AndExpression	FAST_IS_REG ( src2 ) && ! ( src1 & SLJIT_IMM )		1694468	0		&&			
ANR	1694588	CallExpression	FAST_IS_REG ( src2 )		1694468	0					
ANR	1694589	Callee	FAST_IS_REG		1694468	0					
ANR	1694590	Identifier	FAST_IS_REG		1694468	0					
ANR	1694591	ArgumentList	src2		1694468	1					
ANR	1694592	Argument	src2		1694468	0					
ANR	1694593	Identifier	src2		1694468	0					
ANR	1694594	UnaryOperationExpression	! ( src1 & SLJIT_IMM )		1694468	1					
ANR	1694595	UnaryOperator	!		1694468	0					
ANR	1694596	BitAndExpression	src1 & SLJIT_IMM		1694468	1		&			
ANR	1694597	Identifier	src1		1694468	0					
ANR	1694598	Identifier	SLJIT_IMM		1694468	1					
ANR	1694599	CompoundStatement		25:47:656:656	1694468	1					
ANR	1694600	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"	1861:2:51163:51225	1694468	0	True				
ANR	1694601	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1694468	0		=			
ANR	1694602	Identifier	inst		1694468	0					
ANR	1694603	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1694468	1					
ANR	1694604	Callee	emit_x86_instruction		1694468	0					
ANR	1694605	Identifier	emit_x86_instruction		1694468	0					
ANR	1694606	ArgumentList	compiler		1694468	1					
ANR	1694607	Argument	compiler		1694468	0					
ANR	1694608	Identifier	compiler		1694468	0					
ANR	1694609	Argument	1		1694468	1					
ANR	1694610	PrimaryExpression	1		1694468	0					
ANR	1694611	Argument	src2		1694468	2					
ANR	1694612	Identifier	src2		1694468	0					
ANR	1694613	Argument	0		1694468	3					
ANR	1694614	PrimaryExpression	0		1694468	0					
ANR	1694615	Argument	src1		1694468	4					
ANR	1694616	Identifier	src1		1694468	0					
ANR	1694617	Argument	src1w		1694468	5					
ANR	1694618	Identifier	src1w		1694468	0					
ANR	1694619	ExpressionStatement	FAIL_IF ( ! inst )	1862:2:51229:51243	1694468	1	True				
ANR	1694620	CallExpression	FAIL_IF ( ! inst )		1694468	0					
ANR	1694621	Callee	FAIL_IF		1694468	0					
ANR	1694622	Identifier	FAIL_IF		1694468	0					
ANR	1694623	ArgumentList	! inst		1694468	1					
ANR	1694624	Argument	! inst		1694468	0					
ANR	1694625	UnaryOperationExpression	! inst		1694468	0					
ANR	1694626	UnaryOperator	!		1694468	0					
ANR	1694627	Identifier	inst		1694468	1					
ANR	1694628	ExpressionStatement	* inst = CMP_rm_r	1863:2:51247:51263	1694468	2	True				
ANR	1694629	AssignmentExpression	* inst = CMP_rm_r		1694468	0		=			
ANR	1694630	UnaryOperationExpression	* inst		1694468	0					
ANR	1694631	UnaryOperator	*		1694468	0					
ANR	1694632	Identifier	inst		1694468	1					
ANR	1694633	Identifier	CMP_rm_r		1694468	1					
ANR	1694634	ReturnStatement	return SLJIT_SUCCESS ;	1864:2:51267:51287	1694468	3	True				
ANR	1694635	Identifier	SLJIT_SUCCESS		1694468	0					
ANR	1694636	IfStatement	if ( src2 & SLJIT_IMM )		1694468	4					
ANR	1694637	Condition	src2 & SLJIT_IMM	1867:5:51298:51313	1694468	0	True				
ANR	1694638	BitAndExpression	src2 & SLJIT_IMM		1694468	0		&			
ANR	1694639	Identifier	src2		1694468	0					
ANR	1694640	Identifier	SLJIT_IMM		1694468	1					
ANR	1694641	CompoundStatement		32:23:813:813	1694468	1					
ANR	1694642	IfStatement	if ( src1 & SLJIT_IMM )		1694468	0					
ANR	1694643	Condition	src1 & SLJIT_IMM	1868:6:51324:51339	1694468	0	True				
ANR	1694644	BitAndExpression	src1 & SLJIT_IMM		1694468	0		&			
ANR	1694645	Identifier	src1		1694468	0					
ANR	1694646	Identifier	SLJIT_IMM		1694468	1					
ANR	1694647	CompoundStatement		33:24:839:839	1694468	1					
ANR	1694648	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1869:3:51347:51391	1694468	0	True				
ANR	1694649	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1694468	0					
ANR	1694650	Callee	EMIT_MOV		1694468	0					
ANR	1694651	Identifier	EMIT_MOV		1694468	0					
ANR	1694652	ArgumentList	compiler		1694468	1					
ANR	1694653	Argument	compiler		1694468	0					
ANR	1694654	Identifier	compiler		1694468	0					
ANR	1694655	Argument	TMP_REG1		1694468	1					
ANR	1694656	Identifier	TMP_REG1		1694468	0					
ANR	1694657	Argument	0		1694468	2					
ANR	1694658	PrimaryExpression	0		1694468	0					
ANR	1694659	Argument	src1		1694468	3					
ANR	1694660	Identifier	src1		1694468	0					
ANR	1694661	Argument	src1w		1694468	4					
ANR	1694662	Identifier	src1w		1694468	0					
ANR	1694663	ExpressionStatement	src1 = TMP_REG1	1870:3:51396:51411	1694468	1	True				
ANR	1694664	AssignmentExpression	src1 = TMP_REG1		1694468	0		=			
ANR	1694665	Identifier	src1		1694468	0					
ANR	1694666	Identifier	TMP_REG1		1694468	1					
ANR	1694667	ExpressionStatement	src1w = 0	1871:3:51416:51425	1694468	2	True				
ANR	1694668	AssignmentExpression	src1w = 0		1694468	0		=			
ANR	1694669	Identifier	src1w		1694468	0					
ANR	1694670	PrimaryExpression	0		1694468	1					
ANR	1694671	ExpressionStatement	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , src1w )"	1873:2:51433:51478	1694468	1	True				
ANR	1694672	CallExpression	"BINARY_IMM ( CMP , CMP_rm_r , src2w , src1 , src1w )"		1694468	0					
ANR	1694673	Callee	BINARY_IMM		1694468	0					
ANR	1694674	Identifier	BINARY_IMM		1694468	0					
ANR	1694675	ArgumentList	CMP		1694468	1					
ANR	1694676	Argument	CMP		1694468	0					
ANR	1694677	Identifier	CMP		1694468	0					
ANR	1694678	Argument	CMP_rm_r		1694468	1					
ANR	1694679	Identifier	CMP_rm_r		1694468	0					
ANR	1694680	Argument	src2w		1694468	2					
ANR	1694681	Identifier	src2w		1694468	0					
ANR	1694682	Argument	src1		1694468	3					
ANR	1694683	Identifier	src1		1694468	0					
ANR	1694684	Argument	src1w		1694468	4					
ANR	1694685	Identifier	src1w		1694468	0					
ANR	1694686	ElseStatement	else		1694468	0					
ANR	1694687	CompoundStatement		40:6:986:986	1694468	0					
ANR	1694688	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1876:2:51493:51537	1694468	0	True				
ANR	1694689	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1694468	0					
ANR	1694690	Callee	EMIT_MOV		1694468	0					
ANR	1694691	Identifier	EMIT_MOV		1694468	0					
ANR	1694692	ArgumentList	compiler		1694468	1					
ANR	1694693	Argument	compiler		1694468	0					
ANR	1694694	Identifier	compiler		1694468	0					
ANR	1694695	Argument	TMP_REG1		1694468	1					
ANR	1694696	Identifier	TMP_REG1		1694468	0					
ANR	1694697	Argument	0		1694468	2					
ANR	1694698	PrimaryExpression	0		1694468	0					
ANR	1694699	Argument	src1		1694468	3					
ANR	1694700	Identifier	src1		1694468	0					
ANR	1694701	Argument	src1w		1694468	4					
ANR	1694702	Identifier	src1w		1694468	0					
ANR	1694703	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1877:2:51541:51607	1694468	1	True				
ANR	1694704	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1694468	0		=			
ANR	1694705	Identifier	inst		1694468	0					
ANR	1694706	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1694468	1					
ANR	1694707	Callee	emit_x86_instruction		1694468	0					
ANR	1694708	Identifier	emit_x86_instruction		1694468	0					
ANR	1694709	ArgumentList	compiler		1694468	1					
ANR	1694710	Argument	compiler		1694468	0					
ANR	1694711	Identifier	compiler		1694468	0					
ANR	1694712	Argument	1		1694468	1					
ANR	1694713	PrimaryExpression	1		1694468	0					
ANR	1694714	Argument	TMP_REG1		1694468	2					
ANR	1694715	Identifier	TMP_REG1		1694468	0					
ANR	1694716	Argument	0		1694468	3					
ANR	1694717	PrimaryExpression	0		1694468	0					
ANR	1694718	Argument	src2		1694468	4					
ANR	1694719	Identifier	src2		1694468	0					
ANR	1694720	Argument	src2w		1694468	5					
ANR	1694721	Identifier	src2w		1694468	0					
ANR	1694722	ExpressionStatement	FAIL_IF ( ! inst )	1878:2:51611:51625	1694468	2	True				
ANR	1694723	CallExpression	FAIL_IF ( ! inst )		1694468	0					
ANR	1694724	Callee	FAIL_IF		1694468	0					
ANR	1694725	Identifier	FAIL_IF		1694468	0					
ANR	1694726	ArgumentList	! inst		1694468	1					
ANR	1694727	Argument	! inst		1694468	0					
ANR	1694728	UnaryOperationExpression	! inst		1694468	0					
ANR	1694729	UnaryOperator	!		1694468	0					
ANR	1694730	Identifier	inst		1694468	1					
ANR	1694731	ExpressionStatement	* inst = CMP_r_rm	1879:2:51629:51645	1694468	3	True				
ANR	1694732	AssignmentExpression	* inst = CMP_r_rm		1694468	0		=			
ANR	1694733	UnaryOperationExpression	* inst		1694468	0					
ANR	1694734	UnaryOperator	*		1694468	0					
ANR	1694735	Identifier	inst		1694468	1					
ANR	1694736	Identifier	CMP_r_rm		1694468	1					
ANR	1694737	ReturnStatement	return SLJIT_SUCCESS ;	1881:1:51651:51671	1694468	5	True				
ANR	1694738	Identifier	SLJIT_SUCCESS		1694468	0					
ANR	1694739	ReturnType	static sljit_si		1694468	1					
ANR	1694740	Identifier	emit_cmp_binary		1694468	2					
ANR	1694741	ParameterList	"struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1694468	3					
ANR	1694742	Parameter	struct sljit_compiler * compiler	1833:32:50405:50435	1694468	0	True				
ANR	1694743	ParameterType	struct sljit_compiler *		1694468	0					
ANR	1694744	Identifier	compiler		1694468	1					
ANR	1694745	Parameter	sljit_si src1	1834:1:50439:50451	1694468	1	True				
ANR	1694746	ParameterType	sljit_si		1694468	0					
ANR	1694747	Identifier	src1		1694468	1					
ANR	1694748	Parameter	sljit_sw src1w	1834:16:50454:50467	1694468	2	True				
ANR	1694749	ParameterType	sljit_sw		1694468	0					
ANR	1694750	Identifier	src1w		1694468	1					
ANR	1694751	Parameter	sljit_si src2	1835:1:50471:50483	1694468	3	True				
ANR	1694752	ParameterType	sljit_si		1694468	0					
ANR	1694753	Identifier	src2		1694468	1					
ANR	1694754	Parameter	sljit_sw src2w	1835:16:50486:50499	1694468	4	True				
ANR	1694755	ParameterType	sljit_sw		1694468	0					
ANR	1694756	Identifier	src2w		1694468	1					
ANR	1694757	CFGEntryNode	ENTRY		1694468		True				
ANR	1694758	CFGExitNode	EXIT		1694468		True				
ANR	1694759	Symbol	src2w		1694468						
ANR	1694760	Symbol	emit_x86_instruction		1694468						
ANR	1694761	Symbol	TMP_REG1		1694468						
ANR	1694762	Symbol	src1w		1694468						
ANR	1694763	Symbol	FAST_IS_REG		1694468						
ANR	1694764	Symbol	* inst		1694468						
ANR	1694765	Symbol	CMP_r_rm		1694468						
ANR	1694766	Symbol	CMP_rm_r		1694468						
ANR	1694767	Symbol	CMP		1694468						
ANR	1694768	Symbol	SLJIT_SUCCESS		1694468						
ANR	1694769	Symbol	* compiler		1694468						
ANR	1694770	Symbol	CMP_EAX_i32		1694468						
ANR	1694771	Symbol	SLJIT_R0		1694468						
ANR	1694772	Symbol	SLJIT_IMM		1694468						
ANR	1694773	Symbol	inst		1694468						
ANR	1694774	Symbol	src1		1694468						
ANR	1694775	Symbol	compiler -> mode32		1694468						
ANR	1694776	Symbol	IS_HALFWORD		1694468						
ANR	1694777	Symbol	src2		1694468						
ANR	1694778	Symbol	compiler		1694468						
ANR	1694779	Function	emit_test_binary	1884:0:51676:54731							
ANR	1694780	FunctionDef	"emit_test_binary (struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1694779	0					
ANR	1694781	CompoundStatement		1887:0:51806:54731	1694779	0					
ANR	1694782	IdentifierDeclStatement	sljit_ub * inst ;	1888:1:51809:51823	1694779	0	True				
ANR	1694783	IdentifierDecl	* inst		1694779	0					
ANR	1694784	IdentifierDeclType	sljit_ub *		1694779	0					
ANR	1694785	Identifier	inst		1694779	1					
ANR	1694786	IfStatement	if ( src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) ) )		1694779	1					
ANR	1694787	Condition	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )	1891:5:51888:52002	1694779	0	True				
ANR	1694788	AndExpression	src1 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1694779	0		&&			
ANR	1694789	EqualityExpression	src1 == SLJIT_R0		1694779	0		==			
ANR	1694790	Identifier	src1		1694779	0					
ANR	1694791	Identifier	SLJIT_R0		1694779	1					
ANR	1694792	AndExpression	( src2 & SLJIT_IMM ) && ( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1694779	1		&&			
ANR	1694793	BitAndExpression	src2 & SLJIT_IMM		1694779	0		&			
ANR	1694794	Identifier	src2		1694779	0					
ANR	1694795	Identifier	SLJIT_IMM		1694779	1					
ANR	1694796	AndExpression	( src2w > 127 || src2w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src2w ) )		1694779	1		&&			
ANR	1694797	OrExpression	src2w > 127 || src2w < - 128		1694779	0		||			
ANR	1694798	RelationalExpression	src2w > 127		1694779	0		>			
ANR	1694799	Identifier	src2w		1694779	0					
ANR	1694800	PrimaryExpression	127		1694779	1					
ANR	1694801	RelationalExpression	src2w < - 128		1694779	1		<			
ANR	1694802	Identifier	src2w		1694779	0					
ANR	1694803	UnaryOperationExpression	- 128		1694779	1					
ANR	1694804	UnaryOperator	-		1694779	0					
ANR	1694805	PrimaryExpression	128		1694779	1					
ANR	1694806	OrExpression	compiler -> mode32 || IS_HALFWORD ( src2w )		1694779	1		||			
ANR	1694807	PtrMemberAccess	compiler -> mode32		1694779	0					
ANR	1694808	Identifier	compiler		1694779	0					
ANR	1694809	Identifier	mode32		1694779	1					
ANR	1694810	CallExpression	IS_HALFWORD ( src2w )		1694779	1					
ANR	1694811	Callee	IS_HALFWORD		1694779	0					
ANR	1694812	Identifier	IS_HALFWORD		1694779	0					
ANR	1694813	ArgumentList	src2w		1694779	1					
ANR	1694814	Argument	src2w		1694779	0					
ANR	1694815	Identifier	src2w		1694779	0					
ANR	1694816	CompoundStatement		5:122:198:198	1694779	1					
ANR	1694817	ExpressionStatement	"BINARY_EAX_IMM ( TEST_EAX_i32 , src2w )"	1895:2:52102:52137	1694779	0	True				
ANR	1694818	CallExpression	"BINARY_EAX_IMM ( TEST_EAX_i32 , src2w )"		1694779	0					
ANR	1694819	Callee	BINARY_EAX_IMM		1694779	0					
ANR	1694820	Identifier	BINARY_EAX_IMM		1694779	0					
ANR	1694821	ArgumentList	TEST_EAX_i32		1694779	1					
ANR	1694822	Argument	TEST_EAX_i32		1694779	0					
ANR	1694823	Identifier	TEST_EAX_i32		1694779	0					
ANR	1694824	Argument	src2w		1694779	1					
ANR	1694825	Identifier	src2w		1694779	0					
ANR	1694826	ReturnStatement	return SLJIT_SUCCESS ;	1896:2:52141:52161	1694779	1	True				
ANR	1694827	Identifier	SLJIT_SUCCESS		1694779	0					
ANR	1694828	IfStatement	if ( src2 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) ) )		1694779	2					
ANR	1694829	Condition	src2 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )	1900:5:52229:52343	1694779	0	True				
ANR	1694830	AndExpression	src2 == SLJIT_R0 && ( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1694779	0		&&			
ANR	1694831	EqualityExpression	src2 == SLJIT_R0		1694779	0		==			
ANR	1694832	Identifier	src2		1694779	0					
ANR	1694833	Identifier	SLJIT_R0		1694779	1					
ANR	1694834	AndExpression	( src2 & SLJIT_IMM ) && ( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1694779	1		&&			
ANR	1694835	BitAndExpression	src2 & SLJIT_IMM		1694779	0		&			
ANR	1694836	Identifier	src2		1694779	0					
ANR	1694837	Identifier	SLJIT_IMM		1694779	1					
ANR	1694838	AndExpression	( src1w > 127 || src1w < - 128 ) && ( compiler -> mode32 || IS_HALFWORD ( src1w ) )		1694779	1		&&			
ANR	1694839	OrExpression	src1w > 127 || src1w < - 128		1694779	0		||			
ANR	1694840	RelationalExpression	src1w > 127		1694779	0		>			
ANR	1694841	Identifier	src1w		1694779	0					
ANR	1694842	PrimaryExpression	127		1694779	1					
ANR	1694843	RelationalExpression	src1w < - 128		1694779	1		<			
ANR	1694844	Identifier	src1w		1694779	0					
ANR	1694845	UnaryOperationExpression	- 128		1694779	1					
ANR	1694846	UnaryOperator	-		1694779	0					
ANR	1694847	PrimaryExpression	128		1694779	1					
ANR	1694848	OrExpression	compiler -> mode32 || IS_HALFWORD ( src1w )		1694779	1		||			
ANR	1694849	PtrMemberAccess	compiler -> mode32		1694779	0					
ANR	1694850	Identifier	compiler		1694779	0					
ANR	1694851	Identifier	mode32		1694779	1					
ANR	1694852	CallExpression	IS_HALFWORD ( src1w )		1694779	1					
ANR	1694853	Callee	IS_HALFWORD		1694779	0					
ANR	1694854	Identifier	IS_HALFWORD		1694779	0					
ANR	1694855	ArgumentList	src1w		1694779	1					
ANR	1694856	Argument	src1w		1694779	0					
ANR	1694857	Identifier	src1w		1694779	0					
ANR	1694858	CompoundStatement		14:122:539:539	1694779	1					
ANR	1694859	ExpressionStatement	"BINARY_EAX_IMM ( TEST_EAX_i32 , src1w )"	1904:2:52443:52478	1694779	0	True				
ANR	1694860	CallExpression	"BINARY_EAX_IMM ( TEST_EAX_i32 , src1w )"		1694779	0					
ANR	1694861	Callee	BINARY_EAX_IMM		1694779	0					
ANR	1694862	Identifier	BINARY_EAX_IMM		1694779	0					
ANR	1694863	ArgumentList	TEST_EAX_i32		1694779	1					
ANR	1694864	Argument	TEST_EAX_i32		1694779	0					
ANR	1694865	Identifier	TEST_EAX_i32		1694779	0					
ANR	1694866	Argument	src1w		1694779	1					
ANR	1694867	Identifier	src1w		1694779	0					
ANR	1694868	ReturnStatement	return SLJIT_SUCCESS ;	1905:2:52482:52502	1694779	1	True				
ANR	1694869	Identifier	SLJIT_SUCCESS		1694779	0					
ANR	1694870	IfStatement	if ( FAST_IS_REG ( src1 ) )		1694779	3					
ANR	1694871	Condition	FAST_IS_REG ( src1 )	1908:5:52513:52529	1694779	0	True				
ANR	1694872	CallExpression	FAST_IS_REG ( src1 )		1694779	0					
ANR	1694873	Callee	FAST_IS_REG		1694779	0					
ANR	1694874	Identifier	FAST_IS_REG		1694779	0					
ANR	1694875	ArgumentList	src1		1694779	1					
ANR	1694876	Argument	src1		1694779	0					
ANR	1694877	Identifier	src1		1694779	0					
ANR	1694878	CompoundStatement		22:24:725:725	1694779	1					
ANR	1694879	IfStatement	if ( src2 & SLJIT_IMM )		1694779	0					
ANR	1694880	Condition	src2 & SLJIT_IMM	1909:6:52540:52555	1694779	0	True				
ANR	1694881	BitAndExpression	src2 & SLJIT_IMM		1694779	0		&			
ANR	1694882	Identifier	src2		1694779	0					
ANR	1694883	Identifier	SLJIT_IMM		1694779	1					
ANR	1694884	CompoundStatement		23:24:751:751	1694779	1					
ANR	1694885	IfStatement	if ( IS_HALFWORD ( src2w ) || compiler -> mode32 )		1694779	0					
ANR	1694886	Condition	IS_HALFWORD ( src2w ) || compiler -> mode32	1911:7:52624:52661	1694779	0	True				
ANR	1694887	OrExpression	IS_HALFWORD ( src2w ) || compiler -> mode32		1694779	0		||			
ANR	1694888	CallExpression	IS_HALFWORD ( src2w )		1694779	0					
ANR	1694889	Callee	IS_HALFWORD		1694779	0					
ANR	1694890	Identifier	IS_HALFWORD		1694779	0					
ANR	1694891	ArgumentList	src2w		1694779	1					
ANR	1694892	Argument	src2w		1694779	0					
ANR	1694893	Identifier	src2w		1694779	0					
ANR	1694894	PtrMemberAccess	compiler -> mode32		1694779	1					
ANR	1694895	Identifier	compiler		1694779	0					
ANR	1694896	Identifier	mode32		1694779	1					
ANR	1694897	CompoundStatement		25:47:857:857	1694779	1					
ANR	1694898	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , src1 , 0 )"	1912:4:52670:52737	1694779	0	True				
ANR	1694899	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , src1 , 0 )"		1694779	0		=			
ANR	1694900	Identifier	inst		1694779	0					
ANR	1694901	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , src1 , 0 )"		1694779	1					
ANR	1694902	Callee	emit_x86_instruction		1694779	0					
ANR	1694903	Identifier	emit_x86_instruction		1694779	0					
ANR	1694904	ArgumentList	compiler		1694779	1					
ANR	1694905	Argument	compiler		1694779	0					
ANR	1694906	Identifier	compiler		1694779	0					
ANR	1694907	Argument	1		1694779	1					
ANR	1694908	PrimaryExpression	1		1694779	0					
ANR	1694909	Argument	SLJIT_IMM		1694779	2					
ANR	1694910	Identifier	SLJIT_IMM		1694779	0					
ANR	1694911	Argument	src2w		1694779	3					
ANR	1694912	Identifier	src2w		1694779	0					
ANR	1694913	Argument	src1		1694779	4					
ANR	1694914	Identifier	src1		1694779	0					
ANR	1694915	Argument	0		1694779	5					
ANR	1694916	PrimaryExpression	0		1694779	0					
ANR	1694917	ExpressionStatement	FAIL_IF ( ! inst )	1913:4:52743:52757	1694779	1	True				
ANR	1694918	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1694919	Callee	FAIL_IF		1694779	0					
ANR	1694920	Identifier	FAIL_IF		1694779	0					
ANR	1694921	ArgumentList	! inst		1694779	1					
ANR	1694922	Argument	! inst		1694779	0					
ANR	1694923	UnaryOperationExpression	! inst		1694779	0					
ANR	1694924	UnaryOperator	!		1694779	0					
ANR	1694925	Identifier	inst		1694779	1					
ANR	1694926	ExpressionStatement	* inst = GROUP_F7	1914:4:52763:52779	1694779	2	True				
ANR	1694927	AssignmentExpression	* inst = GROUP_F7		1694779	0		=			
ANR	1694928	UnaryOperationExpression	* inst		1694779	0					
ANR	1694929	UnaryOperator	*		1694779	0					
ANR	1694930	Identifier	inst		1694779	1					
ANR	1694931	Identifier	GROUP_F7		1694779	1					
ANR	1694932	ElseStatement	else		1694779	0					
ANR	1694933	CompoundStatement		30:8:987:987	1694779	0					
ANR	1694934	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"	1917:4:52800:52851	1694779	0	True				
ANR	1694935	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"		1694779	0					
ANR	1694936	Callee	FAIL_IF		1694779	0					
ANR	1694937	Identifier	FAIL_IF		1694779	0					
ANR	1694938	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1694779	1					
ANR	1694939	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1694779	0					
ANR	1694940	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1694779	0					
ANR	1694941	Callee	emit_load_imm64		1694779	0					
ANR	1694942	Identifier	emit_load_imm64		1694779	0					
ANR	1694943	ArgumentList	compiler		1694779	1					
ANR	1694944	Argument	compiler		1694779	0					
ANR	1694945	Identifier	compiler		1694779	0					
ANR	1694946	Argument	TMP_REG2		1694779	1					
ANR	1694947	Identifier	TMP_REG2		1694779	0					
ANR	1694948	Argument	src2w		1694779	2					
ANR	1694949	Identifier	src2w		1694779	0					
ANR	1694950	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src1 , 0 )"	1918:4:52857:52919	1694779	1	True				
ANR	1694951	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src1 , 0 )"		1694779	0		=			
ANR	1694952	Identifier	inst		1694779	0					
ANR	1694953	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src1 , 0 )"		1694779	1					
ANR	1694954	Callee	emit_x86_instruction		1694779	0					
ANR	1694955	Identifier	emit_x86_instruction		1694779	0					
ANR	1694956	ArgumentList	compiler		1694779	1					
ANR	1694957	Argument	compiler		1694779	0					
ANR	1694958	Identifier	compiler		1694779	0					
ANR	1694959	Argument	1		1694779	1					
ANR	1694960	PrimaryExpression	1		1694779	0					
ANR	1694961	Argument	TMP_REG2		1694779	2					
ANR	1694962	Identifier	TMP_REG2		1694779	0					
ANR	1694963	Argument	0		1694779	3					
ANR	1694964	PrimaryExpression	0		1694779	0					
ANR	1694965	Argument	src1		1694779	4					
ANR	1694966	Identifier	src1		1694779	0					
ANR	1694967	Argument	0		1694779	5					
ANR	1694968	PrimaryExpression	0		1694779	0					
ANR	1694969	ExpressionStatement	FAIL_IF ( ! inst )	1919:4:52925:52939	1694779	2	True				
ANR	1694970	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1694971	Callee	FAIL_IF		1694779	0					
ANR	1694972	Identifier	FAIL_IF		1694779	0					
ANR	1694973	ArgumentList	! inst		1694779	1					
ANR	1694974	Argument	! inst		1694779	0					
ANR	1694975	UnaryOperationExpression	! inst		1694779	0					
ANR	1694976	UnaryOperator	!		1694779	0					
ANR	1694977	Identifier	inst		1694779	1					
ANR	1694978	ExpressionStatement	* inst = TEST_rm_r	1920:4:52945:52962	1694779	3	True				
ANR	1694979	AssignmentExpression	* inst = TEST_rm_r		1694779	0		=			
ANR	1694980	UnaryOperationExpression	* inst		1694779	0					
ANR	1694981	UnaryOperator	*		1694779	0					
ANR	1694982	Identifier	inst		1694779	1					
ANR	1694983	Identifier	TEST_rm_r		1694779	1					
ANR	1694984	ElseStatement	else		1694779	0					
ANR	1694985	CompoundStatement		42:7:1298:1298	1694779	0					
ANR	1694986	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"	1929:3:53110:53172	1694779	0	True				
ANR	1694987	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1694779	0		=			
ANR	1694988	Identifier	inst		1694779	0					
ANR	1694989	CallExpression	"emit_x86_instruction ( compiler , 1 , src1 , 0 , src2 , src2w )"		1694779	1					
ANR	1694990	Callee	emit_x86_instruction		1694779	0					
ANR	1694991	Identifier	emit_x86_instruction		1694779	0					
ANR	1694992	ArgumentList	compiler		1694779	1					
ANR	1694993	Argument	compiler		1694779	0					
ANR	1694994	Identifier	compiler		1694779	0					
ANR	1694995	Argument	1		1694779	1					
ANR	1694996	PrimaryExpression	1		1694779	0					
ANR	1694997	Argument	src1		1694779	2					
ANR	1694998	Identifier	src1		1694779	0					
ANR	1694999	Argument	0		1694779	3					
ANR	1695000	PrimaryExpression	0		1694779	0					
ANR	1695001	Argument	src2		1694779	4					
ANR	1695002	Identifier	src2		1694779	0					
ANR	1695003	Argument	src2w		1694779	5					
ANR	1695004	Identifier	src2w		1694779	0					
ANR	1695005	ExpressionStatement	FAIL_IF ( ! inst )	1930:3:53177:53191	1694779	1	True				
ANR	1695006	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1695007	Callee	FAIL_IF		1694779	0					
ANR	1695008	Identifier	FAIL_IF		1694779	0					
ANR	1695009	ArgumentList	! inst		1694779	1					
ANR	1695010	Argument	! inst		1694779	0					
ANR	1695011	UnaryOperationExpression	! inst		1694779	0					
ANR	1695012	UnaryOperator	!		1694779	0					
ANR	1695013	Identifier	inst		1694779	1					
ANR	1695014	ExpressionStatement	* inst = TEST_rm_r	1931:3:53196:53213	1694779	2	True				
ANR	1695015	AssignmentExpression	* inst = TEST_rm_r		1694779	0		=			
ANR	1695016	UnaryOperationExpression	* inst		1694779	0					
ANR	1695017	UnaryOperator	*		1694779	0					
ANR	1695018	Identifier	inst		1694779	1					
ANR	1695019	Identifier	TEST_rm_r		1694779	1					
ANR	1695020	ReturnStatement	return SLJIT_SUCCESS ;	1933:2:53221:53241	1694779	1	True				
ANR	1695021	Identifier	SLJIT_SUCCESS		1694779	0					
ANR	1695022	IfStatement	if ( FAST_IS_REG ( src2 ) )		1694779	4					
ANR	1695023	Condition	FAST_IS_REG ( src2 )	1936:5:53252:53268	1694779	0	True				
ANR	1695024	CallExpression	FAST_IS_REG ( src2 )		1694779	0					
ANR	1695025	Callee	FAST_IS_REG		1694779	0					
ANR	1695026	Identifier	FAST_IS_REG		1694779	0					
ANR	1695027	ArgumentList	src2		1694779	1					
ANR	1695028	Argument	src2		1694779	0					
ANR	1695029	Identifier	src2		1694779	0					
ANR	1695030	CompoundStatement		50:24:1464:1464	1694779	1					
ANR	1695031	IfStatement	if ( src1 & SLJIT_IMM )		1694779	0					
ANR	1695032	Condition	src1 & SLJIT_IMM	1937:6:53279:53294	1694779	0	True				
ANR	1695033	BitAndExpression	src1 & SLJIT_IMM		1694779	0		&			
ANR	1695034	Identifier	src1		1694779	0					
ANR	1695035	Identifier	SLJIT_IMM		1694779	1					
ANR	1695036	CompoundStatement		51:24:1490:1490	1694779	1					
ANR	1695037	IfStatement	if ( IS_HALFWORD ( src1w ) || compiler -> mode32 )		1694779	0					
ANR	1695038	Condition	IS_HALFWORD ( src1w ) || compiler -> mode32	1939:7:53363:53400	1694779	0	True				
ANR	1695039	OrExpression	IS_HALFWORD ( src1w ) || compiler -> mode32		1694779	0		||			
ANR	1695040	CallExpression	IS_HALFWORD ( src1w )		1694779	0					
ANR	1695041	Callee	IS_HALFWORD		1694779	0					
ANR	1695042	Identifier	IS_HALFWORD		1694779	0					
ANR	1695043	ArgumentList	src1w		1694779	1					
ANR	1695044	Argument	src1w		1694779	0					
ANR	1695045	Identifier	src1w		1694779	0					
ANR	1695046	PtrMemberAccess	compiler -> mode32		1694779	1					
ANR	1695047	Identifier	compiler		1694779	0					
ANR	1695048	Identifier	mode32		1694779	1					
ANR	1695049	CompoundStatement		53:47:1596:1596	1694779	1					
ANR	1695050	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src1w , src2 , 0 )"	1940:4:53409:53476	1694779	0	True				
ANR	1695051	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src1w , src2 , 0 )"		1694779	0		=			
ANR	1695052	Identifier	inst		1694779	0					
ANR	1695053	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src1w , src2 , 0 )"		1694779	1					
ANR	1695054	Callee	emit_x86_instruction		1694779	0					
ANR	1695055	Identifier	emit_x86_instruction		1694779	0					
ANR	1695056	ArgumentList	compiler		1694779	1					
ANR	1695057	Argument	compiler		1694779	0					
ANR	1695058	Identifier	compiler		1694779	0					
ANR	1695059	Argument	1		1694779	1					
ANR	1695060	PrimaryExpression	1		1694779	0					
ANR	1695061	Argument	SLJIT_IMM		1694779	2					
ANR	1695062	Identifier	SLJIT_IMM		1694779	0					
ANR	1695063	Argument	src1w		1694779	3					
ANR	1695064	Identifier	src1w		1694779	0					
ANR	1695065	Argument	src2		1694779	4					
ANR	1695066	Identifier	src2		1694779	0					
ANR	1695067	Argument	0		1694779	5					
ANR	1695068	PrimaryExpression	0		1694779	0					
ANR	1695069	ExpressionStatement	FAIL_IF ( ! inst )	1941:4:53482:53496	1694779	1	True				
ANR	1695070	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1695071	Callee	FAIL_IF		1694779	0					
ANR	1695072	Identifier	FAIL_IF		1694779	0					
ANR	1695073	ArgumentList	! inst		1694779	1					
ANR	1695074	Argument	! inst		1694779	0					
ANR	1695075	UnaryOperationExpression	! inst		1694779	0					
ANR	1695076	UnaryOperator	!		1694779	0					
ANR	1695077	Identifier	inst		1694779	1					
ANR	1695078	ExpressionStatement	* inst = GROUP_F7	1942:4:53502:53518	1694779	2	True				
ANR	1695079	AssignmentExpression	* inst = GROUP_F7		1694779	0		=			
ANR	1695080	UnaryOperationExpression	* inst		1694779	0					
ANR	1695081	UnaryOperator	*		1694779	0					
ANR	1695082	Identifier	inst		1694779	1					
ANR	1695083	Identifier	GROUP_F7		1694779	1					
ANR	1695084	ElseStatement	else		1694779	0					
ANR	1695085	CompoundStatement		58:8:1726:1726	1694779	0					
ANR	1695086	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src1w ) )"	1945:4:53539:53590	1694779	0	True				
ANR	1695087	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src1w ) )"		1694779	0					
ANR	1695088	Callee	FAIL_IF		1694779	0					
ANR	1695089	Identifier	FAIL_IF		1694779	0					
ANR	1695090	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , src1w )"		1694779	1					
ANR	1695091	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , src1w )"		1694779	0					
ANR	1695092	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , src1w )"		1694779	0					
ANR	1695093	Callee	emit_load_imm64		1694779	0					
ANR	1695094	Identifier	emit_load_imm64		1694779	0					
ANR	1695095	ArgumentList	compiler		1694779	1					
ANR	1695096	Argument	compiler		1694779	0					
ANR	1695097	Identifier	compiler		1694779	0					
ANR	1695098	Argument	TMP_REG2		1694779	1					
ANR	1695099	Identifier	TMP_REG2		1694779	0					
ANR	1695100	Argument	src1w		1694779	2					
ANR	1695101	Identifier	src1w		1694779	0					
ANR	1695102	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src2 , 0 )"	1946:4:53596:53658	1694779	1	True				
ANR	1695103	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src2 , 0 )"		1694779	0		=			
ANR	1695104	Identifier	inst		1694779	0					
ANR	1695105	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , src2 , 0 )"		1694779	1					
ANR	1695106	Callee	emit_x86_instruction		1694779	0					
ANR	1695107	Identifier	emit_x86_instruction		1694779	0					
ANR	1695108	ArgumentList	compiler		1694779	1					
ANR	1695109	Argument	compiler		1694779	0					
ANR	1695110	Identifier	compiler		1694779	0					
ANR	1695111	Argument	1		1694779	1					
ANR	1695112	PrimaryExpression	1		1694779	0					
ANR	1695113	Argument	TMP_REG2		1694779	2					
ANR	1695114	Identifier	TMP_REG2		1694779	0					
ANR	1695115	Argument	0		1694779	3					
ANR	1695116	PrimaryExpression	0		1694779	0					
ANR	1695117	Argument	src2		1694779	4					
ANR	1695118	Identifier	src2		1694779	0					
ANR	1695119	Argument	0		1694779	5					
ANR	1695120	PrimaryExpression	0		1694779	0					
ANR	1695121	ExpressionStatement	FAIL_IF ( ! inst )	1947:4:53664:53678	1694779	2	True				
ANR	1695122	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1695123	Callee	FAIL_IF		1694779	0					
ANR	1695124	Identifier	FAIL_IF		1694779	0					
ANR	1695125	ArgumentList	! inst		1694779	1					
ANR	1695126	Argument	! inst		1694779	0					
ANR	1695127	UnaryOperationExpression	! inst		1694779	0					
ANR	1695128	UnaryOperator	!		1694779	0					
ANR	1695129	Identifier	inst		1694779	1					
ANR	1695130	ExpressionStatement	* inst = TEST_rm_r	1948:4:53684:53701	1694779	3	True				
ANR	1695131	AssignmentExpression	* inst = TEST_rm_r		1694779	0		=			
ANR	1695132	UnaryOperationExpression	* inst		1694779	0					
ANR	1695133	UnaryOperator	*		1694779	0					
ANR	1695134	Identifier	inst		1694779	1					
ANR	1695135	Identifier	TEST_rm_r		1694779	1					
ANR	1695136	ElseStatement	else		1694779	0					
ANR	1695137	CompoundStatement		70:7:2032:2032	1694779	0					
ANR	1695138	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"	1957:3:53844:53906	1694779	0	True				
ANR	1695139	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1694779	0		=			
ANR	1695140	Identifier	inst		1694779	0					
ANR	1695141	CallExpression	"emit_x86_instruction ( compiler , 1 , src2 , 0 , src1 , src1w )"		1694779	1					
ANR	1695142	Callee	emit_x86_instruction		1694779	0					
ANR	1695143	Identifier	emit_x86_instruction		1694779	0					
ANR	1695144	ArgumentList	compiler		1694779	1					
ANR	1695145	Argument	compiler		1694779	0					
ANR	1695146	Identifier	compiler		1694779	0					
ANR	1695147	Argument	1		1694779	1					
ANR	1695148	PrimaryExpression	1		1694779	0					
ANR	1695149	Argument	src2		1694779	2					
ANR	1695150	Identifier	src2		1694779	0					
ANR	1695151	Argument	0		1694779	3					
ANR	1695152	PrimaryExpression	0		1694779	0					
ANR	1695153	Argument	src1		1694779	4					
ANR	1695154	Identifier	src1		1694779	0					
ANR	1695155	Argument	src1w		1694779	5					
ANR	1695156	Identifier	src1w		1694779	0					
ANR	1695157	ExpressionStatement	FAIL_IF ( ! inst )	1958:3:53911:53925	1694779	1	True				
ANR	1695158	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1695159	Callee	FAIL_IF		1694779	0					
ANR	1695160	Identifier	FAIL_IF		1694779	0					
ANR	1695161	ArgumentList	! inst		1694779	1					
ANR	1695162	Argument	! inst		1694779	0					
ANR	1695163	UnaryOperationExpression	! inst		1694779	0					
ANR	1695164	UnaryOperator	!		1694779	0					
ANR	1695165	Identifier	inst		1694779	1					
ANR	1695166	ExpressionStatement	* inst = TEST_rm_r	1959:3:53930:53947	1694779	2	True				
ANR	1695167	AssignmentExpression	* inst = TEST_rm_r		1694779	0		=			
ANR	1695168	UnaryOperationExpression	* inst		1694779	0					
ANR	1695169	UnaryOperator	*		1694779	0					
ANR	1695170	Identifier	inst		1694779	1					
ANR	1695171	Identifier	TEST_rm_r		1694779	1					
ANR	1695172	ReturnStatement	return SLJIT_SUCCESS ;	1961:2:53955:53975	1694779	1	True				
ANR	1695173	Identifier	SLJIT_SUCCESS		1694779	0					
ANR	1695174	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	1964:1:53982:54026	1694779	5	True				
ANR	1695175	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1694779	0					
ANR	1695176	Callee	EMIT_MOV		1694779	0					
ANR	1695177	Identifier	EMIT_MOV		1694779	0					
ANR	1695178	ArgumentList	compiler		1694779	1					
ANR	1695179	Argument	compiler		1694779	0					
ANR	1695180	Identifier	compiler		1694779	0					
ANR	1695181	Argument	TMP_REG1		1694779	1					
ANR	1695182	Identifier	TMP_REG1		1694779	0					
ANR	1695183	Argument	0		1694779	2					
ANR	1695184	PrimaryExpression	0		1694779	0					
ANR	1695185	Argument	src1		1694779	3					
ANR	1695186	Identifier	src1		1694779	0					
ANR	1695187	Argument	src1w		1694779	4					
ANR	1695188	Identifier	src1w		1694779	0					
ANR	1695189	IfStatement	if ( src2 & SLJIT_IMM )		1694779	6					
ANR	1695190	Condition	src2 & SLJIT_IMM	1965:5:54033:54048	1694779	0	True				
ANR	1695191	BitAndExpression	src2 & SLJIT_IMM		1694779	0		&			
ANR	1695192	Identifier	src2		1694779	0					
ANR	1695193	Identifier	SLJIT_IMM		1694779	1					
ANR	1695194	CompoundStatement		79:23:2244:2244	1694779	1					
ANR	1695195	IfStatement	if ( IS_HALFWORD ( src2w ) || compiler -> mode32 )		1694779	0					
ANR	1695196	Condition	IS_HALFWORD ( src2w ) || compiler -> mode32	1967:6:54116:54153	1694779	0	True				
ANR	1695197	OrExpression	IS_HALFWORD ( src2w ) || compiler -> mode32		1694779	0		||			
ANR	1695198	CallExpression	IS_HALFWORD ( src2w )		1694779	0					
ANR	1695199	Callee	IS_HALFWORD		1694779	0					
ANR	1695200	Identifier	IS_HALFWORD		1694779	0					
ANR	1695201	ArgumentList	src2w		1694779	1					
ANR	1695202	Argument	src2w		1694779	0					
ANR	1695203	Identifier	src2w		1694779	0					
ANR	1695204	PtrMemberAccess	compiler -> mode32		1694779	1					
ANR	1695205	Identifier	compiler		1694779	0					
ANR	1695206	Identifier	mode32		1694779	1					
ANR	1695207	CompoundStatement		81:46:2349:2349	1694779	1					
ANR	1695208	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , TMP_REG1 , 0 )"	1968:3:54161:54232	1694779	0	True				
ANR	1695209	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , TMP_REG1 , 0 )"		1694779	0		=			
ANR	1695210	Identifier	inst		1694779	0					
ANR	1695211	CallExpression	"emit_x86_instruction ( compiler , 1 , SLJIT_IMM , src2w , TMP_REG1 , 0 )"		1694779	1					
ANR	1695212	Callee	emit_x86_instruction		1694779	0					
ANR	1695213	Identifier	emit_x86_instruction		1694779	0					
ANR	1695214	ArgumentList	compiler		1694779	1					
ANR	1695215	Argument	compiler		1694779	0					
ANR	1695216	Identifier	compiler		1694779	0					
ANR	1695217	Argument	1		1694779	1					
ANR	1695218	PrimaryExpression	1		1694779	0					
ANR	1695219	Argument	SLJIT_IMM		1694779	2					
ANR	1695220	Identifier	SLJIT_IMM		1694779	0					
ANR	1695221	Argument	src2w		1694779	3					
ANR	1695222	Identifier	src2w		1694779	0					
ANR	1695223	Argument	TMP_REG1		1694779	4					
ANR	1695224	Identifier	TMP_REG1		1694779	0					
ANR	1695225	Argument	0		1694779	5					
ANR	1695226	PrimaryExpression	0		1694779	0					
ANR	1695227	ExpressionStatement	FAIL_IF ( ! inst )	1969:3:54237:54251	1694779	1	True				
ANR	1695228	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1695229	Callee	FAIL_IF		1694779	0					
ANR	1695230	Identifier	FAIL_IF		1694779	0					
ANR	1695231	ArgumentList	! inst		1694779	1					
ANR	1695232	Argument	! inst		1694779	0					
ANR	1695233	UnaryOperationExpression	! inst		1694779	0					
ANR	1695234	UnaryOperator	!		1694779	0					
ANR	1695235	Identifier	inst		1694779	1					
ANR	1695236	ExpressionStatement	* inst = GROUP_F7	1970:3:54256:54272	1694779	2	True				
ANR	1695237	AssignmentExpression	* inst = GROUP_F7		1694779	0		=			
ANR	1695238	UnaryOperationExpression	* inst		1694779	0					
ANR	1695239	UnaryOperator	*		1694779	0					
ANR	1695240	Identifier	inst		1694779	1					
ANR	1695241	Identifier	GROUP_F7		1694779	1					
ANR	1695242	ElseStatement	else		1694779	0					
ANR	1695243	CompoundStatement		86:7:2478:2478	1694779	0					
ANR	1695244	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"	1973:3:54290:54341	1694779	0	True				
ANR	1695245	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG2 , src2w ) )"		1694779	0					
ANR	1695246	Callee	FAIL_IF		1694779	0					
ANR	1695247	Identifier	FAIL_IF		1694779	0					
ANR	1695248	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1694779	1					
ANR	1695249	Argument	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1694779	0					
ANR	1695250	CallExpression	"emit_load_imm64 ( compiler , TMP_REG2 , src2w )"		1694779	0					
ANR	1695251	Callee	emit_load_imm64		1694779	0					
ANR	1695252	Identifier	emit_load_imm64		1694779	0					
ANR	1695253	ArgumentList	compiler		1694779	1					
ANR	1695254	Argument	compiler		1694779	0					
ANR	1695255	Identifier	compiler		1694779	0					
ANR	1695256	Argument	TMP_REG2		1694779	1					
ANR	1695257	Identifier	TMP_REG2		1694779	0					
ANR	1695258	Argument	src2w		1694779	2					
ANR	1695259	Identifier	src2w		1694779	0					
ANR	1695260	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , TMP_REG1 , 0 )"	1974:3:54346:54412	1694779	1	True				
ANR	1695261	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , TMP_REG1 , 0 )"		1694779	0		=			
ANR	1695262	Identifier	inst		1694779	0					
ANR	1695263	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG2 , 0 , TMP_REG1 , 0 )"		1694779	1					
ANR	1695264	Callee	emit_x86_instruction		1694779	0					
ANR	1695265	Identifier	emit_x86_instruction		1694779	0					
ANR	1695266	ArgumentList	compiler		1694779	1					
ANR	1695267	Argument	compiler		1694779	0					
ANR	1695268	Identifier	compiler		1694779	0					
ANR	1695269	Argument	1		1694779	1					
ANR	1695270	PrimaryExpression	1		1694779	0					
ANR	1695271	Argument	TMP_REG2		1694779	2					
ANR	1695272	Identifier	TMP_REG2		1694779	0					
ANR	1695273	Argument	0		1694779	3					
ANR	1695274	PrimaryExpression	0		1694779	0					
ANR	1695275	Argument	TMP_REG1		1694779	4					
ANR	1695276	Identifier	TMP_REG1		1694779	0					
ANR	1695277	Argument	0		1694779	5					
ANR	1695278	PrimaryExpression	0		1694779	0					
ANR	1695279	ExpressionStatement	FAIL_IF ( ! inst )	1975:3:54417:54431	1694779	2	True				
ANR	1695280	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1695281	Callee	FAIL_IF		1694779	0					
ANR	1695282	Identifier	FAIL_IF		1694779	0					
ANR	1695283	ArgumentList	! inst		1694779	1					
ANR	1695284	Argument	! inst		1694779	0					
ANR	1695285	UnaryOperationExpression	! inst		1694779	0					
ANR	1695286	UnaryOperator	!		1694779	0					
ANR	1695287	Identifier	inst		1694779	1					
ANR	1695288	ExpressionStatement	* inst = TEST_rm_r	1976:3:54436:54453	1694779	3	True				
ANR	1695289	AssignmentExpression	* inst = TEST_rm_r		1694779	0		=			
ANR	1695290	UnaryOperationExpression	* inst		1694779	0					
ANR	1695291	UnaryOperator	*		1694779	0					
ANR	1695292	Identifier	inst		1694779	1					
ANR	1695293	Identifier	TEST_rm_r		1694779	1					
ANR	1695294	ElseStatement	else		1694779	0					
ANR	1695295	CompoundStatement		98:6:2787:2787	1694779	0					
ANR	1695296	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"	1985:2:54598:54664	1694779	0	True				
ANR	1695297	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1694779	0		=			
ANR	1695298	Identifier	inst		1694779	0					
ANR	1695299	CallExpression	"emit_x86_instruction ( compiler , 1 , TMP_REG1 , 0 , src2 , src2w )"		1694779	1					
ANR	1695300	Callee	emit_x86_instruction		1694779	0					
ANR	1695301	Identifier	emit_x86_instruction		1694779	0					
ANR	1695302	ArgumentList	compiler		1694779	1					
ANR	1695303	Argument	compiler		1694779	0					
ANR	1695304	Identifier	compiler		1694779	0					
ANR	1695305	Argument	1		1694779	1					
ANR	1695306	PrimaryExpression	1		1694779	0					
ANR	1695307	Argument	TMP_REG1		1694779	2					
ANR	1695308	Identifier	TMP_REG1		1694779	0					
ANR	1695309	Argument	0		1694779	3					
ANR	1695310	PrimaryExpression	0		1694779	0					
ANR	1695311	Argument	src2		1694779	4					
ANR	1695312	Identifier	src2		1694779	0					
ANR	1695313	Argument	src2w		1694779	5					
ANR	1695314	Identifier	src2w		1694779	0					
ANR	1695315	ExpressionStatement	FAIL_IF ( ! inst )	1986:2:54668:54682	1694779	1	True				
ANR	1695316	CallExpression	FAIL_IF ( ! inst )		1694779	0					
ANR	1695317	Callee	FAIL_IF		1694779	0					
ANR	1695318	Identifier	FAIL_IF		1694779	0					
ANR	1695319	ArgumentList	! inst		1694779	1					
ANR	1695320	Argument	! inst		1694779	0					
ANR	1695321	UnaryOperationExpression	! inst		1694779	0					
ANR	1695322	UnaryOperator	!		1694779	0					
ANR	1695323	Identifier	inst		1694779	1					
ANR	1695324	ExpressionStatement	* inst = TEST_rm_r	1987:2:54686:54703	1694779	2	True				
ANR	1695325	AssignmentExpression	* inst = TEST_rm_r		1694779	0		=			
ANR	1695326	UnaryOperationExpression	* inst		1694779	0					
ANR	1695327	UnaryOperator	*		1694779	0					
ANR	1695328	Identifier	inst		1694779	1					
ANR	1695329	Identifier	TEST_rm_r		1694779	1					
ANR	1695330	ReturnStatement	return SLJIT_SUCCESS ;	1989:1:54709:54729	1694779	7	True				
ANR	1695331	Identifier	SLJIT_SUCCESS		1694779	0					
ANR	1695332	ReturnType	static sljit_si		1694779	1					
ANR	1695333	Identifier	emit_test_binary		1694779	2					
ANR	1695334	ParameterList	"struct sljit_compiler * compiler , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1694779	3					
ANR	1695335	Parameter	struct sljit_compiler * compiler	1884:33:51709:51739	1694779	0	True				
ANR	1695336	ParameterType	struct sljit_compiler *		1694779	0					
ANR	1695337	Identifier	compiler		1694779	1					
ANR	1695338	Parameter	sljit_si src1	1885:1:51743:51755	1694779	1	True				
ANR	1695339	ParameterType	sljit_si		1694779	0					
ANR	1695340	Identifier	src1		1694779	1					
ANR	1695341	Parameter	sljit_sw src1w	1885:16:51758:51771	1694779	2	True				
ANR	1695342	ParameterType	sljit_sw		1694779	0					
ANR	1695343	Identifier	src1w		1694779	1					
ANR	1695344	Parameter	sljit_si src2	1886:1:51775:51787	1694779	3	True				
ANR	1695345	ParameterType	sljit_si		1694779	0					
ANR	1695346	Identifier	src2		1694779	1					
ANR	1695347	Parameter	sljit_sw src2w	1886:16:51790:51803	1694779	4	True				
ANR	1695348	ParameterType	sljit_sw		1694779	0					
ANR	1695349	Identifier	src2w		1694779	1					
ANR	1695350	CFGEntryNode	ENTRY		1694779		True				
ANR	1695351	CFGExitNode	EXIT		1694779		True				
ANR	1695352	Symbol	src2w		1694779						
ANR	1695353	Symbol	emit_load_imm64		1694779						
ANR	1695354	Symbol	TMP_REG2		1694779						
ANR	1695355	Symbol	emit_x86_instruction		1694779						
ANR	1695356	Symbol	TMP_REG1		1694779						
ANR	1695357	Symbol	src1w		1694779						
ANR	1695358	Symbol	FAST_IS_REG		1694779						
ANR	1695359	Symbol	* inst		1694779						
ANR	1695360	Symbol	GROUP_F7		1694779						
ANR	1695361	Symbol	TEST_EAX_i32		1694779						
ANR	1695362	Symbol	SLJIT_SUCCESS		1694779						
ANR	1695363	Symbol	TEST_rm_r		1694779						
ANR	1695364	Symbol	* compiler		1694779						
ANR	1695365	Symbol	SLJIT_R0		1694779						
ANR	1695366	Symbol	SLJIT_IMM		1694779						
ANR	1695367	Symbol	inst		1694779						
ANR	1695368	Symbol	src1		1694779						
ANR	1695369	Symbol	compiler -> mode32		1694779						
ANR	1695370	Symbol	IS_HALFWORD		1694779						
ANR	1695371	Symbol	src2		1694779						
ANR	1695372	Symbol	compiler		1694779						
ANR	1695373	Function	emit_shift	1992:0:54734:57939							
ANR	1695374	FunctionDef	"emit_shift (struct sljit_compiler * compiler , sljit_ub mode , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1695373	0					
ANR	1695375	CompoundStatement		1997:0:54904:57939	1695373	0					
ANR	1695376	IdentifierDeclStatement	sljit_ub * inst ;	1998:1:54907:54921	1695373	0	True				
ANR	1695377	IdentifierDecl	* inst		1695373	0					
ANR	1695378	IdentifierDeclType	sljit_ub *		1695373	0					
ANR	1695379	Identifier	inst		1695373	1					
ANR	1695380	IfStatement	if ( ( src2 & SLJIT_IMM ) || ( src2 == SLJIT_PREF_SHIFT_REG ) )		1695373	1					
ANR	1695381	Condition	( src2 & SLJIT_IMM ) || ( src2 == SLJIT_PREF_SHIFT_REG )	2000:5:54929:54980	1695373	0	True				
ANR	1695382	OrExpression	( src2 & SLJIT_IMM ) || ( src2 == SLJIT_PREF_SHIFT_REG )		1695373	0		||			
ANR	1695383	BitAndExpression	src2 & SLJIT_IMM		1695373	0		&			
ANR	1695384	Identifier	src2		1695373	0					
ANR	1695385	Identifier	SLJIT_IMM		1695373	1					
ANR	1695386	EqualityExpression	src2 == SLJIT_PREF_SHIFT_REG		1695373	1		==			
ANR	1695387	Identifier	src2		1695373	0					
ANR	1695388	Identifier	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695389	CompoundStatement		4:59:78:78	1695373	1					
ANR	1695390	IfStatement	if ( dst == src1 && dstw == src1w )		1695373	0					
ANR	1695391	Condition	dst == src1 && dstw == src1w	2001:6:54991:55018	1695373	0	True				
ANR	1695392	AndExpression	dst == src1 && dstw == src1w		1695373	0		&&			
ANR	1695393	EqualityExpression	dst == src1		1695373	0		==			
ANR	1695394	Identifier	dst		1695373	0					
ANR	1695395	Identifier	src1		1695373	1					
ANR	1695396	EqualityExpression	dstw == src1w		1695373	1		==			
ANR	1695397	Identifier	dstw		1695373	0					
ANR	1695398	Identifier	src1w		1695373	1					
ANR	1695399	CompoundStatement		5:36:116:116	1695373	1					
ANR	1695400	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , dstw )"	2002:3:55026:55107	1695373	0	True				
ANR	1695401	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , dstw )"		1695373	0		=			
ANR	1695402	Identifier	inst		1695373	0					
ANR	1695403	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , dstw )"		1695373	1					
ANR	1695404	Callee	emit_x86_instruction		1695373	0					
ANR	1695405	Identifier	emit_x86_instruction		1695373	0					
ANR	1695406	ArgumentList	compiler		1695373	1					
ANR	1695407	Argument	compiler		1695373	0					
ANR	1695408	Identifier	compiler		1695373	0					
ANR	1695409	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695410	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695411	PrimaryExpression	1		1695373	0					
ANR	1695412	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695413	Argument	src2		1695373	2					
ANR	1695414	Identifier	src2		1695373	0					
ANR	1695415	Argument	src2w		1695373	3					
ANR	1695416	Identifier	src2w		1695373	0					
ANR	1695417	Argument	dst		1695373	4					
ANR	1695418	Identifier	dst		1695373	0					
ANR	1695419	Argument	dstw		1695373	5					
ANR	1695420	Identifier	dstw		1695373	0					
ANR	1695421	ExpressionStatement	FAIL_IF ( ! inst )	2003:3:55112:55126	1695373	1	True				
ANR	1695422	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695423	Callee	FAIL_IF		1695373	0					
ANR	1695424	Identifier	FAIL_IF		1695373	0					
ANR	1695425	ArgumentList	! inst		1695373	1					
ANR	1695426	Argument	! inst		1695373	0					
ANR	1695427	UnaryOperationExpression	! inst		1695373	0					
ANR	1695428	UnaryOperator	!		1695373	0					
ANR	1695429	Identifier	inst		1695373	1					
ANR	1695430	ExpressionStatement	* inst |= mode	2004:3:55131:55144	1695373	2	True				
ANR	1695431	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695432	UnaryOperationExpression	* inst		1695373	0					
ANR	1695433	UnaryOperator	*		1695373	0					
ANR	1695434	Identifier	inst		1695373	1					
ANR	1695435	Identifier	mode		1695373	1					
ANR	1695436	ReturnStatement	return SLJIT_SUCCESS ;	2005:3:55149:55169	1695373	3	True				
ANR	1695437	Identifier	SLJIT_SUCCESS		1695373	0					
ANR	1695438	IfStatement	if ( dst == SLJIT_UNUSED )		1695373	1					
ANR	1695439	Condition	dst == SLJIT_UNUSED	2007:6:55181:55199	1695373	0	True				
ANR	1695440	EqualityExpression	dst == SLJIT_UNUSED		1695373	0		==			
ANR	1695441	Identifier	dst		1695373	0					
ANR	1695442	Identifier	SLJIT_UNUSED		1695373	1					
ANR	1695443	CompoundStatement		11:27:297:297	1695373	1					
ANR	1695444	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2008:3:55207:55251	1695373	0	True				
ANR	1695445	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1695373	0					
ANR	1695446	Callee	EMIT_MOV		1695373	0					
ANR	1695447	Identifier	EMIT_MOV		1695373	0					
ANR	1695448	ArgumentList	compiler		1695373	1					
ANR	1695449	Argument	compiler		1695373	0					
ANR	1695450	Identifier	compiler		1695373	0					
ANR	1695451	Argument	TMP_REG1		1695373	1					
ANR	1695452	Identifier	TMP_REG1		1695373	0					
ANR	1695453	Argument	0		1695373	2					
ANR	1695454	PrimaryExpression	0		1695373	0					
ANR	1695455	Argument	src1		1695373	3					
ANR	1695456	Identifier	src1		1695373	0					
ANR	1695457	Argument	src1w		1695373	4					
ANR	1695458	Identifier	src1w		1695373	0					
ANR	1695459	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"	2009:3:55256:55339	1695373	1	True				
ANR	1695460	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1695373	0		=			
ANR	1695461	Identifier	inst		1695373	0					
ANR	1695462	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1695373	1					
ANR	1695463	Callee	emit_x86_instruction		1695373	0					
ANR	1695464	Identifier	emit_x86_instruction		1695373	0					
ANR	1695465	ArgumentList	compiler		1695373	1					
ANR	1695466	Argument	compiler		1695373	0					
ANR	1695467	Identifier	compiler		1695373	0					
ANR	1695468	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695469	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695470	PrimaryExpression	1		1695373	0					
ANR	1695471	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695472	Argument	src2		1695373	2					
ANR	1695473	Identifier	src2		1695373	0					
ANR	1695474	Argument	src2w		1695373	3					
ANR	1695475	Identifier	src2w		1695373	0					
ANR	1695476	Argument	TMP_REG1		1695373	4					
ANR	1695477	Identifier	TMP_REG1		1695373	0					
ANR	1695478	Argument	0		1695373	5					
ANR	1695479	PrimaryExpression	0		1695373	0					
ANR	1695480	ExpressionStatement	FAIL_IF ( ! inst )	2010:3:55344:55358	1695373	2	True				
ANR	1695481	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695482	Callee	FAIL_IF		1695373	0					
ANR	1695483	Identifier	FAIL_IF		1695373	0					
ANR	1695484	ArgumentList	! inst		1695373	1					
ANR	1695485	Argument	! inst		1695373	0					
ANR	1695486	UnaryOperationExpression	! inst		1695373	0					
ANR	1695487	UnaryOperator	!		1695373	0					
ANR	1695488	Identifier	inst		1695373	1					
ANR	1695489	ExpressionStatement	* inst |= mode	2011:3:55363:55376	1695373	3	True				
ANR	1695490	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695491	UnaryOperationExpression	* inst		1695373	0					
ANR	1695492	UnaryOperator	*		1695373	0					
ANR	1695493	Identifier	inst		1695373	1					
ANR	1695494	Identifier	mode		1695373	1					
ANR	1695495	ReturnStatement	return SLJIT_SUCCESS ;	2012:3:55381:55401	1695373	4	True				
ANR	1695496	Identifier	SLJIT_SUCCESS		1695373	0					
ANR	1695497	IfStatement	if ( dst == SLJIT_PREF_SHIFT_REG && src2 == SLJIT_PREF_SHIFT_REG )		1695373	2					
ANR	1695498	Condition	dst == SLJIT_PREF_SHIFT_REG && src2 == SLJIT_PREF_SHIFT_REG	2014:6:55413:55471	1695373	0	True				
ANR	1695499	AndExpression	dst == SLJIT_PREF_SHIFT_REG && src2 == SLJIT_PREF_SHIFT_REG		1695373	0		&&			
ANR	1695500	EqualityExpression	dst == SLJIT_PREF_SHIFT_REG		1695373	0		==			
ANR	1695501	Identifier	dst		1695373	0					
ANR	1695502	Identifier	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695503	EqualityExpression	src2 == SLJIT_PREF_SHIFT_REG		1695373	1		==			
ANR	1695504	Identifier	src2		1695373	0					
ANR	1695505	Identifier	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695506	CompoundStatement		18:67:569:569	1695373	1					
ANR	1695507	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2015:3:55479:55523	1695373	0	True				
ANR	1695508	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1695373	0					
ANR	1695509	Callee	EMIT_MOV		1695373	0					
ANR	1695510	Identifier	EMIT_MOV		1695373	0					
ANR	1695511	ArgumentList	compiler		1695373	1					
ANR	1695512	Argument	compiler		1695373	0					
ANR	1695513	Identifier	compiler		1695373	0					
ANR	1695514	Argument	TMP_REG1		1695373	1					
ANR	1695515	Identifier	TMP_REG1		1695373	0					
ANR	1695516	Argument	0		1695373	2					
ANR	1695517	PrimaryExpression	0		1695373	0					
ANR	1695518	Argument	src1		1695373	3					
ANR	1695519	Identifier	src1		1695373	0					
ANR	1695520	Argument	src1w		1695373	4					
ANR	1695521	Identifier	src1w		1695373	0					
ANR	1695522	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2016:3:55528:55623	1695373	1	True				
ANR	1695523	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	0		=			
ANR	1695524	Identifier	inst		1695373	0					
ANR	1695525	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	1					
ANR	1695526	Callee	emit_x86_instruction		1695373	0					
ANR	1695527	Identifier	emit_x86_instruction		1695373	0					
ANR	1695528	ArgumentList	compiler		1695373	1					
ANR	1695529	Argument	compiler		1695373	0					
ANR	1695530	Identifier	compiler		1695373	0					
ANR	1695531	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695532	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695533	PrimaryExpression	1		1695373	0					
ANR	1695534	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695535	Argument	SLJIT_PREF_SHIFT_REG		1695373	2					
ANR	1695536	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695537	Argument	0		1695373	3					
ANR	1695538	PrimaryExpression	0		1695373	0					
ANR	1695539	Argument	TMP_REG1		1695373	4					
ANR	1695540	Identifier	TMP_REG1		1695373	0					
ANR	1695541	Argument	0		1695373	5					
ANR	1695542	PrimaryExpression	0		1695373	0					
ANR	1695543	ExpressionStatement	FAIL_IF ( ! inst )	2017:3:55628:55642	1695373	2	True				
ANR	1695544	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695545	Callee	FAIL_IF		1695373	0					
ANR	1695546	Identifier	FAIL_IF		1695373	0					
ANR	1695547	ArgumentList	! inst		1695373	1					
ANR	1695548	Argument	! inst		1695373	0					
ANR	1695549	UnaryOperationExpression	! inst		1695373	0					
ANR	1695550	UnaryOperator	!		1695373	0					
ANR	1695551	Identifier	inst		1695373	1					
ANR	1695552	ExpressionStatement	* inst |= mode	2018:3:55647:55660	1695373	3	True				
ANR	1695553	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695554	UnaryOperationExpression	* inst		1695373	0					
ANR	1695555	UnaryOperator	*		1695373	0					
ANR	1695556	Identifier	inst		1695373	1					
ANR	1695557	Identifier	mode		1695373	1					
ANR	1695558	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2019:3:55665:55721	1695373	4	True				
ANR	1695559	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	0					
ANR	1695560	Callee	EMIT_MOV		1695373	0					
ANR	1695561	Identifier	EMIT_MOV		1695373	0					
ANR	1695562	ArgumentList	compiler		1695373	1					
ANR	1695563	Argument	compiler		1695373	0					
ANR	1695564	Identifier	compiler		1695373	0					
ANR	1695565	Argument	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695566	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695567	Argument	0		1695373	2					
ANR	1695568	PrimaryExpression	0		1695373	0					
ANR	1695569	Argument	TMP_REG1		1695373	3					
ANR	1695570	Identifier	TMP_REG1		1695373	0					
ANR	1695571	Argument	0		1695373	4					
ANR	1695572	PrimaryExpression	0		1695373	0					
ANR	1695573	ReturnStatement	return SLJIT_SUCCESS ;	2020:3:55726:55746	1695373	5	True				
ANR	1695574	Identifier	SLJIT_SUCCESS		1695373	0					
ANR	1695575	IfStatement	if ( FAST_IS_REG ( dst ) )		1695373	3					
ANR	1695576	Condition	FAST_IS_REG ( dst )	2022:6:55758:55773	1695373	0	True				
ANR	1695577	CallExpression	FAST_IS_REG ( dst )		1695373	0					
ANR	1695578	Callee	FAST_IS_REG		1695373	0					
ANR	1695579	Identifier	FAST_IS_REG		1695373	0					
ANR	1695580	ArgumentList	dst		1695373	1					
ANR	1695581	Argument	dst		1695373	0					
ANR	1695582	Identifier	dst		1695373	0					
ANR	1695583	CompoundStatement		26:24:871:871	1695373	1					
ANR	1695584	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	2023:3:55781:55820	1695373	0	True				
ANR	1695585	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1695373	0					
ANR	1695586	Callee	EMIT_MOV		1695373	0					
ANR	1695587	Identifier	EMIT_MOV		1695373	0					
ANR	1695588	ArgumentList	compiler		1695373	1					
ANR	1695589	Argument	compiler		1695373	0					
ANR	1695590	Identifier	compiler		1695373	0					
ANR	1695591	Argument	dst		1695373	1					
ANR	1695592	Identifier	dst		1695373	0					
ANR	1695593	Argument	0		1695373	2					
ANR	1695594	PrimaryExpression	0		1695373	0					
ANR	1695595	Argument	src1		1695373	3					
ANR	1695596	Identifier	src1		1695373	0					
ANR	1695597	Argument	src1w		1695373	4					
ANR	1695598	Identifier	src1w		1695373	0					
ANR	1695599	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , 0 )"	2024:3:55825:55903	1695373	1	True				
ANR	1695600	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , 0 )"		1695373	0		=			
ANR	1695601	Identifier	inst		1695373	0					
ANR	1695602	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , dst , 0 )"		1695373	1					
ANR	1695603	Callee	emit_x86_instruction		1695373	0					
ANR	1695604	Identifier	emit_x86_instruction		1695373	0					
ANR	1695605	ArgumentList	compiler		1695373	1					
ANR	1695606	Argument	compiler		1695373	0					
ANR	1695607	Identifier	compiler		1695373	0					
ANR	1695608	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695609	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695610	PrimaryExpression	1		1695373	0					
ANR	1695611	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695612	Argument	src2		1695373	2					
ANR	1695613	Identifier	src2		1695373	0					
ANR	1695614	Argument	src2w		1695373	3					
ANR	1695615	Identifier	src2w		1695373	0					
ANR	1695616	Argument	dst		1695373	4					
ANR	1695617	Identifier	dst		1695373	0					
ANR	1695618	Argument	0		1695373	5					
ANR	1695619	PrimaryExpression	0		1695373	0					
ANR	1695620	ExpressionStatement	FAIL_IF ( ! inst )	2025:3:55908:55922	1695373	2	True				
ANR	1695621	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695622	Callee	FAIL_IF		1695373	0					
ANR	1695623	Identifier	FAIL_IF		1695373	0					
ANR	1695624	ArgumentList	! inst		1695373	1					
ANR	1695625	Argument	! inst		1695373	0					
ANR	1695626	UnaryOperationExpression	! inst		1695373	0					
ANR	1695627	UnaryOperator	!		1695373	0					
ANR	1695628	Identifier	inst		1695373	1					
ANR	1695629	ExpressionStatement	* inst |= mode	2026:3:55927:55940	1695373	3	True				
ANR	1695630	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695631	UnaryOperationExpression	* inst		1695373	0					
ANR	1695632	UnaryOperator	*		1695373	0					
ANR	1695633	Identifier	inst		1695373	1					
ANR	1695634	Identifier	mode		1695373	1					
ANR	1695635	ReturnStatement	return SLJIT_SUCCESS ;	2027:3:55945:55965	1695373	4	True				
ANR	1695636	Identifier	SLJIT_SUCCESS		1695373	0					
ANR	1695637	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2030:2:55974:56018	1695373	4	True				
ANR	1695638	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1695373	0					
ANR	1695639	Callee	EMIT_MOV		1695373	0					
ANR	1695640	Identifier	EMIT_MOV		1695373	0					
ANR	1695641	ArgumentList	compiler		1695373	1					
ANR	1695642	Argument	compiler		1695373	0					
ANR	1695643	Identifier	compiler		1695373	0					
ANR	1695644	Argument	TMP_REG1		1695373	1					
ANR	1695645	Identifier	TMP_REG1		1695373	0					
ANR	1695646	Argument	0		1695373	2					
ANR	1695647	PrimaryExpression	0		1695373	0					
ANR	1695648	Argument	src1		1695373	3					
ANR	1695649	Identifier	src1		1695373	0					
ANR	1695650	Argument	src1w		1695373	4					
ANR	1695651	Identifier	src1w		1695373	0					
ANR	1695652	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"	2031:2:56022:56105	1695373	5	True				
ANR	1695653	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1695373	0		=			
ANR	1695654	Identifier	inst		1695373	0					
ANR	1695655	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , src2 , src2w , TMP_REG1 , 0 )"		1695373	1					
ANR	1695656	Callee	emit_x86_instruction		1695373	0					
ANR	1695657	Identifier	emit_x86_instruction		1695373	0					
ANR	1695658	ArgumentList	compiler		1695373	1					
ANR	1695659	Argument	compiler		1695373	0					
ANR	1695660	Identifier	compiler		1695373	0					
ANR	1695661	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695662	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695663	PrimaryExpression	1		1695373	0					
ANR	1695664	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695665	Argument	src2		1695373	2					
ANR	1695666	Identifier	src2		1695373	0					
ANR	1695667	Argument	src2w		1695373	3					
ANR	1695668	Identifier	src2w		1695373	0					
ANR	1695669	Argument	TMP_REG1		1695373	4					
ANR	1695670	Identifier	TMP_REG1		1695373	0					
ANR	1695671	Argument	0		1695373	5					
ANR	1695672	PrimaryExpression	0		1695373	0					
ANR	1695673	ExpressionStatement	FAIL_IF ( ! inst )	2032:2:56109:56123	1695373	6	True				
ANR	1695674	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695675	Callee	FAIL_IF		1695373	0					
ANR	1695676	Identifier	FAIL_IF		1695373	0					
ANR	1695677	ArgumentList	! inst		1695373	1					
ANR	1695678	Argument	! inst		1695373	0					
ANR	1695679	UnaryOperationExpression	! inst		1695373	0					
ANR	1695680	UnaryOperator	!		1695373	0					
ANR	1695681	Identifier	inst		1695373	1					
ANR	1695682	ExpressionStatement	* inst |= mode	2033:2:56127:56140	1695373	7	True				
ANR	1695683	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695684	UnaryOperationExpression	* inst		1695373	0					
ANR	1695685	UnaryOperator	*		1695373	0					
ANR	1695686	Identifier	inst		1695373	1					
ANR	1695687	Identifier	mode		1695373	1					
ANR	1695688	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	2034:2:56144:56186	1695373	8	True				
ANR	1695689	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1695373	0					
ANR	1695690	Callee	EMIT_MOV		1695373	0					
ANR	1695691	Identifier	EMIT_MOV		1695373	0					
ANR	1695692	ArgumentList	compiler		1695373	1					
ANR	1695693	Argument	compiler		1695373	0					
ANR	1695694	Identifier	compiler		1695373	0					
ANR	1695695	Argument	dst		1695373	1					
ANR	1695696	Identifier	dst		1695373	0					
ANR	1695697	Argument	dstw		1695373	2					
ANR	1695698	Identifier	dstw		1695373	0					
ANR	1695699	Argument	TMP_REG1		1695373	3					
ANR	1695700	Identifier	TMP_REG1		1695373	0					
ANR	1695701	Argument	0		1695373	4					
ANR	1695702	PrimaryExpression	0		1695373	0					
ANR	1695703	ReturnStatement	return SLJIT_SUCCESS ;	2035:2:56190:56210	1695373	9	True				
ANR	1695704	Identifier	SLJIT_SUCCESS		1695373	0					
ANR	1695705	IfStatement	if ( dst == SLJIT_PREF_SHIFT_REG )		1695373	2					
ANR	1695706	Condition	dst == SLJIT_PREF_SHIFT_REG	2038:5:56221:56247	1695373	0	True				
ANR	1695707	EqualityExpression	dst == SLJIT_PREF_SHIFT_REG		1695373	0		==			
ANR	1695708	Identifier	dst		1695373	0					
ANR	1695709	Identifier	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695710	CompoundStatement		42:34:1345:1345	1695373	1					
ANR	1695711	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2039:2:56254:56298	1695373	0	True				
ANR	1695712	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1695373	0					
ANR	1695713	Callee	EMIT_MOV		1695373	0					
ANR	1695714	Identifier	EMIT_MOV		1695373	0					
ANR	1695715	ArgumentList	compiler		1695373	1					
ANR	1695716	Argument	compiler		1695373	0					
ANR	1695717	Identifier	compiler		1695373	0					
ANR	1695718	Argument	TMP_REG1		1695373	1					
ANR	1695719	Identifier	TMP_REG1		1695373	0					
ANR	1695720	Argument	0		1695373	2					
ANR	1695721	PrimaryExpression	0		1695373	0					
ANR	1695722	Argument	src1		1695373	3					
ANR	1695723	Identifier	src1		1695373	0					
ANR	1695724	Argument	src1w		1695373	4					
ANR	1695725	Identifier	src1w		1695373	0					
ANR	1695726	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"	2040:2:56302:56358	1695373	1	True				
ANR	1695727	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"		1695373	0					
ANR	1695728	Callee	EMIT_MOV		1695373	0					
ANR	1695729	Identifier	EMIT_MOV		1695373	0					
ANR	1695730	ArgumentList	compiler		1695373	1					
ANR	1695731	Argument	compiler		1695373	0					
ANR	1695732	Identifier	compiler		1695373	0					
ANR	1695733	Argument	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695734	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695735	Argument	0		1695373	2					
ANR	1695736	PrimaryExpression	0		1695373	0					
ANR	1695737	Argument	src2		1695373	3					
ANR	1695738	Identifier	src2		1695373	0					
ANR	1695739	Argument	src2w		1695373	4					
ANR	1695740	Identifier	src2w		1695373	0					
ANR	1695741	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2041:2:56362:56457	1695373	2	True				
ANR	1695742	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	0		=			
ANR	1695743	Identifier	inst		1695373	0					
ANR	1695744	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	1					
ANR	1695745	Callee	emit_x86_instruction		1695373	0					
ANR	1695746	Identifier	emit_x86_instruction		1695373	0					
ANR	1695747	ArgumentList	compiler		1695373	1					
ANR	1695748	Argument	compiler		1695373	0					
ANR	1695749	Identifier	compiler		1695373	0					
ANR	1695750	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695751	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695752	PrimaryExpression	1		1695373	0					
ANR	1695753	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695754	Argument	SLJIT_PREF_SHIFT_REG		1695373	2					
ANR	1695755	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695756	Argument	0		1695373	3					
ANR	1695757	PrimaryExpression	0		1695373	0					
ANR	1695758	Argument	TMP_REG1		1695373	4					
ANR	1695759	Identifier	TMP_REG1		1695373	0					
ANR	1695760	Argument	0		1695373	5					
ANR	1695761	PrimaryExpression	0		1695373	0					
ANR	1695762	ExpressionStatement	FAIL_IF ( ! inst )	2042:2:56461:56475	1695373	3	True				
ANR	1695763	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695764	Callee	FAIL_IF		1695373	0					
ANR	1695765	Identifier	FAIL_IF		1695373	0					
ANR	1695766	ArgumentList	! inst		1695373	1					
ANR	1695767	Argument	! inst		1695373	0					
ANR	1695768	UnaryOperationExpression	! inst		1695373	0					
ANR	1695769	UnaryOperator	!		1695373	0					
ANR	1695770	Identifier	inst		1695373	1					
ANR	1695771	ExpressionStatement	* inst |= mode	2043:2:56479:56492	1695373	4	True				
ANR	1695772	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695773	UnaryOperationExpression	* inst		1695373	0					
ANR	1695774	UnaryOperator	*		1695373	0					
ANR	1695775	Identifier	inst		1695373	1					
ANR	1695776	Identifier	mode		1695373	1					
ANR	1695777	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2044:2:56496:56552	1695373	5	True				
ANR	1695778	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	0					
ANR	1695779	Callee	EMIT_MOV		1695373	0					
ANR	1695780	Identifier	EMIT_MOV		1695373	0					
ANR	1695781	ArgumentList	compiler		1695373	1					
ANR	1695782	Argument	compiler		1695373	0					
ANR	1695783	Identifier	compiler		1695373	0					
ANR	1695784	Argument	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695785	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695786	Argument	0		1695373	2					
ANR	1695787	PrimaryExpression	0		1695373	0					
ANR	1695788	Argument	TMP_REG1		1695373	3					
ANR	1695789	Identifier	TMP_REG1		1695373	0					
ANR	1695790	Argument	0		1695373	4					
ANR	1695791	PrimaryExpression	0		1695373	0					
ANR	1695792	ElseStatement	else		1695373	0					
ANR	1695793	IfStatement	"if ( FAST_IS_REG ( dst ) && dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst ) )"		1695373	0					
ANR	1695794	Condition	"FAST_IS_REG ( dst ) && dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst )"	2046:10:56567:56634	1695373	0	True				
ANR	1695795	AndExpression	"FAST_IS_REG ( dst ) && dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst )"		1695373	0		&&			
ANR	1695796	CallExpression	FAST_IS_REG ( dst )		1695373	0					
ANR	1695797	Callee	FAST_IS_REG		1695373	0					
ANR	1695798	Identifier	FAST_IS_REG		1695373	0					
ANR	1695799	ArgumentList	dst		1695373	1					
ANR	1695800	Argument	dst		1695373	0					
ANR	1695801	Identifier	dst		1695373	0					
ANR	1695802	AndExpression	"dst != src2 && ! ADDRESSING_DEPENDS_ON ( src2 , dst )"		1695373	1		&&			
ANR	1695803	EqualityExpression	dst != src2		1695373	0		!=			
ANR	1695804	Identifier	dst		1695373	0					
ANR	1695805	Identifier	src2		1695373	1					
ANR	1695806	UnaryOperationExpression	"! ADDRESSING_DEPENDS_ON ( src2 , dst )"		1695373	1					
ANR	1695807	UnaryOperator	!		1695373	0					
ANR	1695808	CallExpression	"ADDRESSING_DEPENDS_ON ( src2 , dst )"		1695373	1					
ANR	1695809	Callee	ADDRESSING_DEPENDS_ON		1695373	0					
ANR	1695810	Identifier	ADDRESSING_DEPENDS_ON		1695373	0					
ANR	1695811	ArgumentList	src2		1695373	1					
ANR	1695812	Argument	src2		1695373	0					
ANR	1695813	Identifier	src2		1695373	0					
ANR	1695814	Argument	dst		1695373	1					
ANR	1695815	Identifier	dst		1695373	0					
ANR	1695816	CompoundStatement		50:80:1732:1732	1695373	1					
ANR	1695817	IfStatement	if ( src1 != dst )		1695373	0					
ANR	1695818	Condition	src1 != dst	2047:6:56645:56655	1695373	0	True				
ANR	1695819	EqualityExpression	src1 != dst		1695373	0		!=			
ANR	1695820	Identifier	src1		1695373	0					
ANR	1695821	Identifier	dst		1695373	1					
ANR	1695822	ExpressionStatement	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"	2048:3:56661:56700	1695373	1	True				
ANR	1695823	CallExpression	"EMIT_MOV ( compiler , dst , 0 , src1 , src1w )"		1695373	0					
ANR	1695824	Callee	EMIT_MOV		1695373	0					
ANR	1695825	Identifier	EMIT_MOV		1695373	0					
ANR	1695826	ArgumentList	compiler		1695373	1					
ANR	1695827	Argument	compiler		1695373	0					
ANR	1695828	Identifier	compiler		1695373	0					
ANR	1695829	Argument	dst		1695373	1					
ANR	1695830	Identifier	dst		1695373	0					
ANR	1695831	Argument	0		1695373	2					
ANR	1695832	PrimaryExpression	0		1695373	0					
ANR	1695833	Argument	src1		1695373	3					
ANR	1695834	Identifier	src1		1695373	0					
ANR	1695835	Argument	src1w		1695373	4					
ANR	1695836	Identifier	src1w		1695373	0					
ANR	1695837	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"	2049:2:56704:56760	1695373	1	True				
ANR	1695838	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"		1695373	0					
ANR	1695839	Callee	EMIT_MOV		1695373	0					
ANR	1695840	Identifier	EMIT_MOV		1695373	0					
ANR	1695841	ArgumentList	compiler		1695373	1					
ANR	1695842	Argument	compiler		1695373	0					
ANR	1695843	Identifier	compiler		1695373	0					
ANR	1695844	Argument	TMP_REG1		1695373	1					
ANR	1695845	Identifier	TMP_REG1		1695373	0					
ANR	1695846	Argument	0		1695373	2					
ANR	1695847	PrimaryExpression	0		1695373	0					
ANR	1695848	Argument	SLJIT_PREF_SHIFT_REG		1695373	3					
ANR	1695849	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695850	Argument	0		1695373	4					
ANR	1695851	PrimaryExpression	0		1695373	0					
ANR	1695852	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"	2050:2:56764:56820	1695373	2	True				
ANR	1695853	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"		1695373	0					
ANR	1695854	Callee	EMIT_MOV		1695373	0					
ANR	1695855	Identifier	EMIT_MOV		1695373	0					
ANR	1695856	ArgumentList	compiler		1695373	1					
ANR	1695857	Argument	compiler		1695373	0					
ANR	1695858	Identifier	compiler		1695373	0					
ANR	1695859	Argument	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695860	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695861	Argument	0		1695373	2					
ANR	1695862	PrimaryExpression	0		1695373	0					
ANR	1695863	Argument	src2		1695373	3					
ANR	1695864	Identifier	src2		1695373	0					
ANR	1695865	Argument	src2w		1695373	4					
ANR	1695866	Identifier	src2w		1695373	0					
ANR	1695867	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , dst , 0 )"	2051:2:56824:56914	1695373	3	True				
ANR	1695868	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , dst , 0 )"		1695373	0		=			
ANR	1695869	Identifier	inst		1695373	0					
ANR	1695870	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , dst , 0 )"		1695373	1					
ANR	1695871	Callee	emit_x86_instruction		1695373	0					
ANR	1695872	Identifier	emit_x86_instruction		1695373	0					
ANR	1695873	ArgumentList	compiler		1695373	1					
ANR	1695874	Argument	compiler		1695373	0					
ANR	1695875	Identifier	compiler		1695373	0					
ANR	1695876	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695877	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695878	PrimaryExpression	1		1695373	0					
ANR	1695879	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695880	Argument	SLJIT_PREF_SHIFT_REG		1695373	2					
ANR	1695881	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695882	Argument	0		1695373	3					
ANR	1695883	PrimaryExpression	0		1695373	0					
ANR	1695884	Argument	dst		1695373	4					
ANR	1695885	Identifier	dst		1695373	0					
ANR	1695886	Argument	0		1695373	5					
ANR	1695887	PrimaryExpression	0		1695373	0					
ANR	1695888	ExpressionStatement	FAIL_IF ( ! inst )	2052:2:56918:56932	1695373	4	True				
ANR	1695889	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695890	Callee	FAIL_IF		1695373	0					
ANR	1695891	Identifier	FAIL_IF		1695373	0					
ANR	1695892	ArgumentList	! inst		1695373	1					
ANR	1695893	Argument	! inst		1695373	0					
ANR	1695894	UnaryOperationExpression	! inst		1695373	0					
ANR	1695895	UnaryOperator	!		1695373	0					
ANR	1695896	Identifier	inst		1695373	1					
ANR	1695897	ExpressionStatement	* inst |= mode	2053:2:56936:56949	1695373	5	True				
ANR	1695898	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695899	UnaryOperationExpression	* inst		1695373	0					
ANR	1695900	UnaryOperator	*		1695373	0					
ANR	1695901	Identifier	inst		1695373	1					
ANR	1695902	Identifier	mode		1695373	1					
ANR	1695903	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2054:2:56953:57009	1695373	6	True				
ANR	1695904	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	0					
ANR	1695905	Callee	EMIT_MOV		1695373	0					
ANR	1695906	Identifier	EMIT_MOV		1695373	0					
ANR	1695907	ArgumentList	compiler		1695373	1					
ANR	1695908	Argument	compiler		1695373	0					
ANR	1695909	Identifier	compiler		1695373	0					
ANR	1695910	Argument	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695911	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695912	Argument	0		1695373	2					
ANR	1695913	PrimaryExpression	0		1695373	0					
ANR	1695914	Argument	TMP_REG1		1695373	3					
ANR	1695915	Identifier	TMP_REG1		1695373	0					
ANR	1695916	Argument	0		1695373	4					
ANR	1695917	PrimaryExpression	0		1695373	0					
ANR	1695918	ElseStatement	else		1695373	0					
ANR	1695919	CompoundStatement		60:6:2115:2115	1695373	0					
ANR	1695920	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"	2059:2:57156:57200	1695373	0	True				
ANR	1695921	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src1 , src1w )"		1695373	0					
ANR	1695922	Callee	EMIT_MOV		1695373	0					
ANR	1695923	Identifier	EMIT_MOV		1695373	0					
ANR	1695924	ArgumentList	compiler		1695373	1					
ANR	1695925	Argument	compiler		1695373	0					
ANR	1695926	Identifier	compiler		1695373	0					
ANR	1695927	Argument	TMP_REG1		1695373	1					
ANR	1695928	Identifier	TMP_REG1		1695373	0					
ANR	1695929	Argument	0		1695373	2					
ANR	1695930	PrimaryExpression	0		1695373	0					
ANR	1695931	Argument	src1		1695373	3					
ANR	1695932	Identifier	src1		1695373	0					
ANR	1695933	Argument	src1w		1695373	4					
ANR	1695934	Identifier	src1w		1695373	0					
ANR	1695935	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG2 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"	2061:2:57261:57317	1695373	1	True				
ANR	1695936	CallExpression	"EMIT_MOV ( compiler , TMP_REG2 , 0 , SLJIT_PREF_SHIFT_REG , 0 )"		1695373	0					
ANR	1695937	Callee	EMIT_MOV		1695373	0					
ANR	1695938	Identifier	EMIT_MOV		1695373	0					
ANR	1695939	ArgumentList	compiler		1695373	1					
ANR	1695940	Argument	compiler		1695373	0					
ANR	1695941	Identifier	compiler		1695373	0					
ANR	1695942	Argument	TMP_REG2		1695373	1					
ANR	1695943	Identifier	TMP_REG2		1695373	0					
ANR	1695944	Argument	0		1695373	2					
ANR	1695945	PrimaryExpression	0		1695373	0					
ANR	1695946	Argument	SLJIT_PREF_SHIFT_REG		1695373	3					
ANR	1695947	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695948	Argument	0		1695373	4					
ANR	1695949	PrimaryExpression	0		1695373	0					
ANR	1695950	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"	2066:2:57457:57513	1695373	2	True				
ANR	1695951	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , src2 , src2w )"		1695373	0					
ANR	1695952	Callee	EMIT_MOV		1695373	0					
ANR	1695953	Identifier	EMIT_MOV		1695373	0					
ANR	1695954	ArgumentList	compiler		1695373	1					
ANR	1695955	Argument	compiler		1695373	0					
ANR	1695956	Identifier	compiler		1695373	0					
ANR	1695957	Argument	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1695958	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695959	Argument	0		1695373	2					
ANR	1695960	PrimaryExpression	0		1695373	0					
ANR	1695961	Argument	src2		1695373	3					
ANR	1695962	Identifier	src2		1695373	0					
ANR	1695963	Argument	src2w		1695373	4					
ANR	1695964	Identifier	src2w		1695373	0					
ANR	1695965	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"	2067:2:57517:57612	1695373	3	True				
ANR	1695966	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	0		=			
ANR	1695967	Identifier	inst		1695373	0					
ANR	1695968	CallExpression	"emit_x86_instruction ( compiler , 1 | EX86_SHIFT_INS , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG1 , 0 )"		1695373	1					
ANR	1695969	Callee	emit_x86_instruction		1695373	0					
ANR	1695970	Identifier	emit_x86_instruction		1695373	0					
ANR	1695971	ArgumentList	compiler		1695373	1					
ANR	1695972	Argument	compiler		1695373	0					
ANR	1695973	Identifier	compiler		1695373	0					
ANR	1695974	Argument	1 | EX86_SHIFT_INS		1695373	1					
ANR	1695975	InclusiveOrExpression	1 | EX86_SHIFT_INS		1695373	0		|			
ANR	1695976	PrimaryExpression	1		1695373	0					
ANR	1695977	Identifier	EX86_SHIFT_INS		1695373	1					
ANR	1695978	Argument	SLJIT_PREF_SHIFT_REG		1695373	2					
ANR	1695979	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1695980	Argument	0		1695373	3					
ANR	1695981	PrimaryExpression	0		1695373	0					
ANR	1695982	Argument	TMP_REG1		1695373	4					
ANR	1695983	Identifier	TMP_REG1		1695373	0					
ANR	1695984	Argument	0		1695373	5					
ANR	1695985	PrimaryExpression	0		1695373	0					
ANR	1695986	ExpressionStatement	FAIL_IF ( ! inst )	2068:2:57616:57630	1695373	4	True				
ANR	1695987	CallExpression	FAIL_IF ( ! inst )		1695373	0					
ANR	1695988	Callee	FAIL_IF		1695373	0					
ANR	1695989	Identifier	FAIL_IF		1695373	0					
ANR	1695990	ArgumentList	! inst		1695373	1					
ANR	1695991	Argument	! inst		1695373	0					
ANR	1695992	UnaryOperationExpression	! inst		1695373	0					
ANR	1695993	UnaryOperator	!		1695373	0					
ANR	1695994	Identifier	inst		1695373	1					
ANR	1695995	ExpressionStatement	* inst |= mode	2069:2:57634:57647	1695373	5	True				
ANR	1695996	AssignmentExpression	* inst |= mode		1695373	0		|=			
ANR	1695997	UnaryOperationExpression	* inst		1695373	0					
ANR	1695998	UnaryOperator	*		1695373	0					
ANR	1695999	Identifier	inst		1695373	1					
ANR	1696000	Identifier	mode		1695373	1					
ANR	1696001	ExpressionStatement	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG2 , 0 )"	2071:2:57708:57764	1695373	6	True				
ANR	1696002	CallExpression	"EMIT_MOV ( compiler , SLJIT_PREF_SHIFT_REG , 0 , TMP_REG2 , 0 )"		1695373	0					
ANR	1696003	Callee	EMIT_MOV		1695373	0					
ANR	1696004	Identifier	EMIT_MOV		1695373	0					
ANR	1696005	ArgumentList	compiler		1695373	1					
ANR	1696006	Argument	compiler		1695373	0					
ANR	1696007	Identifier	compiler		1695373	0					
ANR	1696008	Argument	SLJIT_PREF_SHIFT_REG		1695373	1					
ANR	1696009	Identifier	SLJIT_PREF_SHIFT_REG		1695373	0					
ANR	1696010	Argument	0		1695373	2					
ANR	1696011	PrimaryExpression	0		1695373	0					
ANR	1696012	Argument	TMP_REG2		1695373	3					
ANR	1696013	Identifier	TMP_REG2		1695373	0					
ANR	1696014	Argument	0		1695373	4					
ANR	1696015	PrimaryExpression	0		1695373	0					
ANR	1696016	ExpressionStatement	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"	2075:2:57868:57910	1695373	7	True				
ANR	1696017	CallExpression	"EMIT_MOV ( compiler , dst , dstw , TMP_REG1 , 0 )"		1695373	0					
ANR	1696018	Callee	EMIT_MOV		1695373	0					
ANR	1696019	Identifier	EMIT_MOV		1695373	0					
ANR	1696020	ArgumentList	compiler		1695373	1					
ANR	1696021	Argument	compiler		1695373	0					
ANR	1696022	Identifier	compiler		1695373	0					
ANR	1696023	Argument	dst		1695373	1					
ANR	1696024	Identifier	dst		1695373	0					
ANR	1696025	Argument	dstw		1695373	2					
ANR	1696026	Identifier	dstw		1695373	0					
ANR	1696027	Argument	TMP_REG1		1695373	3					
ANR	1696028	Identifier	TMP_REG1		1695373	0					
ANR	1696029	Argument	0		1695373	4					
ANR	1696030	PrimaryExpression	0		1695373	0					
ANR	1696031	ReturnStatement	return SLJIT_SUCCESS ;	2078:1:57917:57937	1695373	3	True				
ANR	1696032	Identifier	SLJIT_SUCCESS		1695373	0					
ANR	1696033	ReturnType	static sljit_si		1695373	1					
ANR	1696034	Identifier	emit_shift		1695373	2					
ANR	1696035	ParameterList	"struct sljit_compiler * compiler , sljit_ub mode , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1695373	3					
ANR	1696036	Parameter	struct sljit_compiler * compiler	1992:27:54761:54791	1695373	0	True				
ANR	1696037	ParameterType	struct sljit_compiler *		1695373	0					
ANR	1696038	Identifier	compiler		1695373	1					
ANR	1696039	Parameter	sljit_ub mode	1993:1:54795:54807	1695373	1	True				
ANR	1696040	ParameterType	sljit_ub		1695373	0					
ANR	1696041	Identifier	mode		1695373	1					
ANR	1696042	Parameter	sljit_si dst	1994:1:54811:54822	1695373	2	True				
ANR	1696043	ParameterType	sljit_si		1695373	0					
ANR	1696044	Identifier	dst		1695373	1					
ANR	1696045	Parameter	sljit_sw dstw	1994:15:54825:54837	1695373	3	True				
ANR	1696046	ParameterType	sljit_sw		1695373	0					
ANR	1696047	Identifier	dstw		1695373	1					
ANR	1696048	Parameter	sljit_si src1	1995:1:54841:54853	1695373	4	True				
ANR	1696049	ParameterType	sljit_si		1695373	0					
ANR	1696050	Identifier	src1		1695373	1					
ANR	1696051	Parameter	sljit_sw src1w	1995:16:54856:54869	1695373	5	True				
ANR	1696052	ParameterType	sljit_sw		1695373	0					
ANR	1696053	Identifier	src1w		1695373	1					
ANR	1696054	Parameter	sljit_si src2	1996:1:54873:54885	1695373	6	True				
ANR	1696055	ParameterType	sljit_si		1695373	0					
ANR	1696056	Identifier	src2		1695373	1					
ANR	1696057	Parameter	sljit_sw src2w	1996:16:54888:54901	1695373	7	True				
ANR	1696058	ParameterType	sljit_sw		1695373	0					
ANR	1696059	Identifier	src2w		1695373	1					
ANR	1696060	CFGEntryNode	ENTRY		1695373		True				
ANR	1696061	CFGExitNode	EXIT		1695373		True				
ANR	1696062	Symbol	src2w		1695373						
ANR	1696063	Symbol	TMP_REG2		1695373						
ANR	1696064	Symbol	emit_x86_instruction		1695373						
ANR	1696065	Symbol	TMP_REG1		1695373						
ANR	1696066	Symbol	src1w		1695373						
ANR	1696067	Symbol	* inst		1695373						
ANR	1696068	Symbol	FAST_IS_REG		1695373						
ANR	1696069	Symbol	dst		1695373						
ANR	1696070	Symbol	SLJIT_SUCCESS		1695373						
ANR	1696071	Symbol	mode		1695373						
ANR	1696072	Symbol	SLJIT_PREF_SHIFT_REG		1695373						
ANR	1696073	Symbol	SLJIT_IMM		1695373						
ANR	1696074	Symbol	EX86_SHIFT_INS		1695373						
ANR	1696075	Symbol	SLJIT_UNUSED		1695373						
ANR	1696076	Symbol	inst		1695373						
ANR	1696077	Symbol	src1		1695373						
ANR	1696078	Symbol	src2		1695373						
ANR	1696079	Symbol	ADDRESSING_DEPENDS_ON		1695373						
ANR	1696080	Symbol	compiler		1695373						
ANR	1696081	Symbol	dstw		1695373						
ANR	1696082	Function	emit_shift_with_flags	2081:0:57942:59122							
ANR	1696083	FunctionDef	"emit_shift_with_flags (struct sljit_compiler * compiler , sljit_ub mode , sljit_si set_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1696082	0					
ANR	1696084	CompoundStatement		2086:0:58143:59122	1696082	0					
ANR	1696085	IfStatement	if ( src2 & SLJIT_IMM )		1696082	0					
ANR	1696086	Condition	src2 & SLJIT_IMM	2088:5:58209:58224	1696082	0	True				
ANR	1696087	BitAndExpression	src2 & SLJIT_IMM		1696082	0		&			
ANR	1696088	Identifier	src2		1696082	0					
ANR	1696089	Identifier	SLJIT_IMM		1696082	1					
ANR	1696090	CompoundStatement		3:23:83:83	1696082	1					
ANR	1696091	IfStatement	if ( ( src2w & 0x3f ) != 0 || ( compiler -> mode32 && ( src2w & 0x1f ) != 0 ) )		1696082	0					
ANR	1696092	Condition	( src2w & 0x3f ) != 0 || ( compiler -> mode32 && ( src2w & 0x1f ) != 0 )	2090:6:58292:58355	1696082	0	True				
ANR	1696093	OrExpression	( src2w & 0x3f ) != 0 || ( compiler -> mode32 && ( src2w & 0x1f ) != 0 )		1696082	0		||			
ANR	1696094	EqualityExpression	( src2w & 0x3f ) != 0		1696082	0		!=			
ANR	1696095	BitAndExpression	src2w & 0x3f		1696082	0		&			
ANR	1696096	Identifier	src2w		1696082	0					
ANR	1696097	PrimaryExpression	0x3f		1696082	1					
ANR	1696098	PrimaryExpression	0		1696082	1					
ANR	1696099	AndExpression	compiler -> mode32 && ( src2w & 0x1f ) != 0		1696082	1		&&			
ANR	1696100	PtrMemberAccess	compiler -> mode32		1696082	0					
ANR	1696101	Identifier	compiler		1696082	0					
ANR	1696102	Identifier	mode32		1696082	1					
ANR	1696103	EqualityExpression	( src2w & 0x1f ) != 0		1696082	1		!=			
ANR	1696104	BitAndExpression	src2w & 0x1f		1696082	0		&			
ANR	1696105	Identifier	src2w		1696082	0					
ANR	1696106	PrimaryExpression	0x1f		1696082	1					
ANR	1696107	PrimaryExpression	0		1696082	1					
ANR	1696108	ReturnStatement	"return emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2091:3:58361:58431	1696082	1	True				
ANR	1696109	CallExpression	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1696082	0					
ANR	1696110	Callee	emit_shift		1696082	0					
ANR	1696111	Identifier	emit_shift		1696082	0					
ANR	1696112	ArgumentList	compiler		1696082	1					
ANR	1696113	Argument	compiler		1696082	0					
ANR	1696114	Identifier	compiler		1696082	0					
ANR	1696115	Argument	mode		1696082	1					
ANR	1696116	Identifier	mode		1696082	0					
ANR	1696117	Argument	dst		1696082	2					
ANR	1696118	Identifier	dst		1696082	0					
ANR	1696119	Argument	dstw		1696082	3					
ANR	1696120	Identifier	dstw		1696082	0					
ANR	1696121	Argument	src1		1696082	4					
ANR	1696122	Identifier	src1		1696082	0					
ANR	1696123	Argument	src1w		1696082	5					
ANR	1696124	Identifier	src1w		1696082	0					
ANR	1696125	Argument	src2		1696082	6					
ANR	1696126	Identifier	src2		1696082	0					
ANR	1696127	Argument	src2w		1696082	7					
ANR	1696128	Identifier	src2w		1696082	0					
ANR	1696129	IfStatement	if ( ! set_flags )		1696082	1					
ANR	1696130	Condition	! set_flags	2096:6:58554:58563	1696082	0	True				
ANR	1696131	UnaryOperationExpression	! set_flags		1696082	0					
ANR	1696132	UnaryOperator	!		1696082	0					
ANR	1696133	Identifier	set_flags		1696082	1					
ANR	1696134	ReturnStatement	"return emit_mov ( compiler , dst , dstw , src1 , src1w ) ;"	2097:3:58569:58618	1696082	1	True				
ANR	1696135	CallExpression	"emit_mov ( compiler , dst , dstw , src1 , src1w )"		1696082	0					
ANR	1696136	Callee	emit_mov		1696082	0					
ANR	1696137	Identifier	emit_mov		1696082	0					
ANR	1696138	ArgumentList	compiler		1696082	1					
ANR	1696139	Argument	compiler		1696082	0					
ANR	1696140	Identifier	compiler		1696082	0					
ANR	1696141	Argument	dst		1696082	1					
ANR	1696142	Identifier	dst		1696082	0					
ANR	1696143	Argument	dstw		1696082	2					
ANR	1696144	Identifier	dstw		1696082	0					
ANR	1696145	Argument	src1		1696082	3					
ANR	1696146	Identifier	src1		1696082	0					
ANR	1696147	Argument	src1w		1696082	4					
ANR	1696148	Identifier	src1w		1696082	0					
ANR	1696149	ReturnStatement	"return emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , SLJIT_IMM , 0 ) ;"	2099:2:58645:58752	1696082	2	True				
ANR	1696150	CallExpression	"emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , SLJIT_IMM , 0 )"		1696082	0					
ANR	1696151	Callee	emit_cum_binary		1696082	0					
ANR	1696152	Identifier	emit_cum_binary		1696082	0					
ANR	1696153	ArgumentList	compiler		1696082	1					
ANR	1696154	Argument	compiler		1696082	0					
ANR	1696155	Identifier	compiler		1696082	0					
ANR	1696156	Argument	OR_r_rm		1696082	1					
ANR	1696157	Identifier	OR_r_rm		1696082	0					
ANR	1696158	Argument	OR_rm_r		1696082	2					
ANR	1696159	Identifier	OR_rm_r		1696082	0					
ANR	1696160	Argument	OR		1696082	3					
ANR	1696161	Identifier	OR		1696082	0					
ANR	1696162	Argument	OR_EAX_i32		1696082	4					
ANR	1696163	Identifier	OR_EAX_i32		1696082	0					
ANR	1696164	Argument	dst		1696082	5					
ANR	1696165	Identifier	dst		1696082	0					
ANR	1696166	Argument	dstw		1696082	6					
ANR	1696167	Identifier	dstw		1696082	0					
ANR	1696168	Argument	src1		1696082	7					
ANR	1696169	Identifier	src1		1696082	0					
ANR	1696170	Argument	src1w		1696082	8					
ANR	1696171	Identifier	src1w		1696082	0					
ANR	1696172	Argument	SLJIT_IMM		1696082	9					
ANR	1696173	Identifier	SLJIT_IMM		1696082	0					
ANR	1696174	Argument	0		1696082	10					
ANR	1696175	PrimaryExpression	0		1696082	0					
ANR	1696176	IfStatement	if ( ! set_flags )		1696082	1					
ANR	1696177	Condition	! set_flags	2103:5:58763:58772	1696082	0	True				
ANR	1696178	UnaryOperationExpression	! set_flags		1696082	0					
ANR	1696179	UnaryOperator	!		1696082	0					
ANR	1696180	Identifier	set_flags		1696082	1					
ANR	1696181	ReturnStatement	"return emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2104:2:58777:58847	1696082	1	True				
ANR	1696182	CallExpression	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1696082	0					
ANR	1696183	Callee	emit_shift		1696082	0					
ANR	1696184	Identifier	emit_shift		1696082	0					
ANR	1696185	ArgumentList	compiler		1696082	1					
ANR	1696186	Argument	compiler		1696082	0					
ANR	1696187	Identifier	compiler		1696082	0					
ANR	1696188	Argument	mode		1696082	1					
ANR	1696189	Identifier	mode		1696082	0					
ANR	1696190	Argument	dst		1696082	2					
ANR	1696191	Identifier	dst		1696082	0					
ANR	1696192	Argument	dstw		1696082	3					
ANR	1696193	Identifier	dstw		1696082	0					
ANR	1696194	Argument	src1		1696082	4					
ANR	1696195	Identifier	src1		1696082	0					
ANR	1696196	Argument	src1w		1696082	5					
ANR	1696197	Identifier	src1w		1696082	0					
ANR	1696198	Argument	src2		1696082	6					
ANR	1696199	Identifier	src2		1696082	0					
ANR	1696200	Argument	src2w		1696082	7					
ANR	1696201	Identifier	src2w		1696082	0					
ANR	1696202	IfStatement	if ( ! FAST_IS_REG ( dst ) )		1696082	2					
ANR	1696203	Condition	! FAST_IS_REG ( dst )	2106:5:58855:58871	1696082	0	True				
ANR	1696204	UnaryOperationExpression	! FAST_IS_REG ( dst )		1696082	0					
ANR	1696205	UnaryOperator	!		1696082	0					
ANR	1696206	CallExpression	FAST_IS_REG ( dst )		1696082	1					
ANR	1696207	Callee	FAST_IS_REG		1696082	0					
ANR	1696208	Identifier	FAST_IS_REG		1696082	0					
ANR	1696209	ArgumentList	dst		1696082	1					
ANR	1696210	Argument	dst		1696082	0					
ANR	1696211	Identifier	dst		1696082	0					
ANR	1696212	ExpressionStatement	"FAIL_IF ( emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 ) )"	2107:2:58876:58937	1696082	1	True				
ANR	1696213	CallExpression	"FAIL_IF ( emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 ) )"		1696082	0					
ANR	1696214	Callee	FAIL_IF		1696082	0					
ANR	1696215	Identifier	FAIL_IF		1696082	0					
ANR	1696216	ArgumentList	"emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 )"		1696082	1					
ANR	1696217	Argument	"emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 )"		1696082	0					
ANR	1696218	CallExpression	"emit_cmp_binary ( compiler , src1 , src1w , SLJIT_IMM , 0 )"		1696082	0					
ANR	1696219	Callee	emit_cmp_binary		1696082	0					
ANR	1696220	Identifier	emit_cmp_binary		1696082	0					
ANR	1696221	ArgumentList	compiler		1696082	1					
ANR	1696222	Argument	compiler		1696082	0					
ANR	1696223	Identifier	compiler		1696082	0					
ANR	1696224	Argument	src1		1696082	1					
ANR	1696225	Identifier	src1		1696082	0					
ANR	1696226	Argument	src1w		1696082	2					
ANR	1696227	Identifier	src1w		1696082	0					
ANR	1696228	Argument	SLJIT_IMM		1696082	3					
ANR	1696229	Identifier	SLJIT_IMM		1696082	0					
ANR	1696230	Argument	0		1696082	4					
ANR	1696231	PrimaryExpression	0		1696082	0					
ANR	1696232	ExpressionStatement	"FAIL_IF ( emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) )"	2109:1:58941:59012	1696082	3	True				
ANR	1696233	CallExpression	"FAIL_IF ( emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w ) )"		1696082	0					
ANR	1696234	Callee	FAIL_IF		1696082	0					
ANR	1696235	Identifier	FAIL_IF		1696082	0					
ANR	1696236	ArgumentList	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1696082	1					
ANR	1696237	Argument	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1696082	0					
ANR	1696238	CallExpression	"emit_shift ( compiler , mode , dst , dstw , src1 , src1w , src2 , src2w )"		1696082	0					
ANR	1696239	Callee	emit_shift		1696082	0					
ANR	1696240	Identifier	emit_shift		1696082	0					
ANR	1696241	ArgumentList	compiler		1696082	1					
ANR	1696242	Argument	compiler		1696082	0					
ANR	1696243	Identifier	compiler		1696082	0					
ANR	1696244	Argument	mode		1696082	1					
ANR	1696245	Identifier	mode		1696082	0					
ANR	1696246	Argument	dst		1696082	2					
ANR	1696247	Identifier	dst		1696082	0					
ANR	1696248	Argument	dstw		1696082	3					
ANR	1696249	Identifier	dstw		1696082	0					
ANR	1696250	Argument	src1		1696082	4					
ANR	1696251	Identifier	src1		1696082	0					
ANR	1696252	Argument	src1w		1696082	5					
ANR	1696253	Identifier	src1w		1696082	0					
ANR	1696254	Argument	src2		1696082	6					
ANR	1696255	Identifier	src2		1696082	0					
ANR	1696256	Argument	src2w		1696082	7					
ANR	1696257	Identifier	src2w		1696082	0					
ANR	1696258	IfStatement	if ( FAST_IS_REG ( dst ) )		1696082	4					
ANR	1696259	Condition	FAST_IS_REG ( dst )	2111:5:59020:59035	1696082	0	True				
ANR	1696260	CallExpression	FAST_IS_REG ( dst )		1696082	0					
ANR	1696261	Callee	FAST_IS_REG		1696082	0					
ANR	1696262	Identifier	FAST_IS_REG		1696082	0					
ANR	1696263	ArgumentList	dst		1696082	1					
ANR	1696264	Argument	dst		1696082	0					
ANR	1696265	Identifier	dst		1696082	0					
ANR	1696266	ReturnStatement	"return emit_cmp_binary ( compiler , dst , dstw , SLJIT_IMM , 0 ) ;"	2112:2:59040:59097	1696082	1	True				
ANR	1696267	CallExpression	"emit_cmp_binary ( compiler , dst , dstw , SLJIT_IMM , 0 )"		1696082	0					
ANR	1696268	Callee	emit_cmp_binary		1696082	0					
ANR	1696269	Identifier	emit_cmp_binary		1696082	0					
ANR	1696270	ArgumentList	compiler		1696082	1					
ANR	1696271	Argument	compiler		1696082	0					
ANR	1696272	Identifier	compiler		1696082	0					
ANR	1696273	Argument	dst		1696082	1					
ANR	1696274	Identifier	dst		1696082	0					
ANR	1696275	Argument	dstw		1696082	2					
ANR	1696276	Identifier	dstw		1696082	0					
ANR	1696277	Argument	SLJIT_IMM		1696082	3					
ANR	1696278	Identifier	SLJIT_IMM		1696082	0					
ANR	1696279	Argument	0		1696082	4					
ANR	1696280	PrimaryExpression	0		1696082	0					
ANR	1696281	ReturnStatement	return SLJIT_SUCCESS ;	2113:1:59100:59120	1696082	5	True				
ANR	1696282	Identifier	SLJIT_SUCCESS		1696082	0					
ANR	1696283	ReturnType	static sljit_si		1696082	1					
ANR	1696284	Identifier	emit_shift_with_flags		1696082	2					
ANR	1696285	ParameterList	"struct sljit_compiler * compiler , sljit_ub mode , sljit_si set_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1696082	3					
ANR	1696286	Parameter	struct sljit_compiler * compiler	2081:38:57980:58010	1696082	0	True				
ANR	1696287	ParameterType	struct sljit_compiler *		1696082	0					
ANR	1696288	Identifier	compiler		1696082	1					
ANR	1696289	Parameter	sljit_ub mode	2082:1:58014:58026	1696082	1	True				
ANR	1696290	ParameterType	sljit_ub		1696082	0					
ANR	1696291	Identifier	mode		1696082	1					
ANR	1696292	Parameter	sljit_si set_flags	2082:16:58029:58046	1696082	2	True				
ANR	1696293	ParameterType	sljit_si		1696082	0					
ANR	1696294	Identifier	set_flags		1696082	1					
ANR	1696295	Parameter	sljit_si dst	2083:1:58050:58061	1696082	3	True				
ANR	1696296	ParameterType	sljit_si		1696082	0					
ANR	1696297	Identifier	dst		1696082	1					
ANR	1696298	Parameter	sljit_sw dstw	2083:15:58064:58076	1696082	4	True				
ANR	1696299	ParameterType	sljit_sw		1696082	0					
ANR	1696300	Identifier	dstw		1696082	1					
ANR	1696301	Parameter	sljit_si src1	2084:1:58080:58092	1696082	5	True				
ANR	1696302	ParameterType	sljit_si		1696082	0					
ANR	1696303	Identifier	src1		1696082	1					
ANR	1696304	Parameter	sljit_sw src1w	2084:16:58095:58108	1696082	6	True				
ANR	1696305	ParameterType	sljit_sw		1696082	0					
ANR	1696306	Identifier	src1w		1696082	1					
ANR	1696307	Parameter	sljit_si src2	2085:1:58112:58124	1696082	7	True				
ANR	1696308	ParameterType	sljit_si		1696082	0					
ANR	1696309	Identifier	src2		1696082	1					
ANR	1696310	Parameter	sljit_sw src2w	2085:16:58127:58140	1696082	8	True				
ANR	1696311	ParameterType	sljit_sw		1696082	0					
ANR	1696312	Identifier	src2w		1696082	1					
ANR	1696313	CFGEntryNode	ENTRY		1696082		True				
ANR	1696314	CFGExitNode	EXIT		1696082		True				
ANR	1696315	Symbol	src2w		1696082						
ANR	1696316	Symbol	src1w		1696082						
ANR	1696317	Symbol	OR_rm_r		1696082						
ANR	1696318	Symbol	OR		1696082						
ANR	1696319	Symbol	FAST_IS_REG		1696082						
ANR	1696320	Symbol	dst		1696082						
ANR	1696321	Symbol	emit_cmp_binary		1696082						
ANR	1696322	Symbol	SLJIT_SUCCESS		1696082						
ANR	1696323	Symbol	* compiler		1696082						
ANR	1696324	Symbol	OR_EAX_i32		1696082						
ANR	1696325	Symbol	OR_r_rm		1696082						
ANR	1696326	Symbol	mode		1696082						
ANR	1696327	Symbol	SLJIT_IMM		1696082						
ANR	1696328	Symbol	emit_mov		1696082						
ANR	1696329	Symbol	src1		1696082						
ANR	1696330	Symbol	set_flags		1696082						
ANR	1696331	Symbol	compiler -> mode32		1696082						
ANR	1696332	Symbol	emit_shift		1696082						
ANR	1696333	Symbol	src2		1696082						
ANR	1696334	Symbol	compiler		1696082						
ANR	1696335	Symbol	dstw		1696082						
ANR	1696336	Symbol	emit_cum_binary		1696082						
ANR	1696337	Function	sljit_emit_op2	2116:0:59125:62789							
ANR	1696338	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1696337	0					
ANR	1696339	CompoundStatement		2120:0:59314:62789	1696337	0					
ANR	1696340	ExpressionStatement	CHECK_ERROR ( )	2121:1:59317:59330	1696337	0	True				
ANR	1696341	CallExpression	CHECK_ERROR ( )		1696337	0					
ANR	1696342	Callee	CHECK_ERROR		1696337	0					
ANR	1696343	Identifier	CHECK_ERROR		1696337	0					
ANR	1696344	ArgumentList			1696337	1					
ANR	1696345	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	2122:1:59333:59411	1696337	1	True				
ANR	1696346	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1696337	0					
ANR	1696347	Callee	CHECK		1696337	0					
ANR	1696348	Identifier	CHECK		1696337	0					
ANR	1696349	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	1					
ANR	1696350	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696351	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696352	Callee	check_sljit_emit_op2		1696337	0					
ANR	1696353	Identifier	check_sljit_emit_op2		1696337	0					
ANR	1696354	ArgumentList	compiler		1696337	1					
ANR	1696355	Argument	compiler		1696337	0					
ANR	1696356	Identifier	compiler		1696337	0					
ANR	1696357	Argument	op		1696337	1					
ANR	1696358	Identifier	op		1696337	0					
ANR	1696359	Argument	dst		1696337	2					
ANR	1696360	Identifier	dst		1696337	0					
ANR	1696361	Argument	dstw		1696337	3					
ANR	1696362	Identifier	dstw		1696337	0					
ANR	1696363	Argument	src1		1696337	4					
ANR	1696364	Identifier	src1		1696337	0					
ANR	1696365	Argument	src1w		1696337	5					
ANR	1696366	Identifier	src1w		1696337	0					
ANR	1696367	Argument	src2		1696337	6					
ANR	1696368	Identifier	src2		1696337	0					
ANR	1696369	Argument	src2w		1696337	7					
ANR	1696370	Identifier	src2w		1696337	0					
ANR	1696371	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2123:1:59414:59444	1696337	2	True				
ANR	1696372	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1696337	0					
ANR	1696373	Callee	ADJUST_LOCAL_OFFSET		1696337	0					
ANR	1696374	Identifier	ADJUST_LOCAL_OFFSET		1696337	0					
ANR	1696375	ArgumentList	dst		1696337	1					
ANR	1696376	Argument	dst		1696337	0					
ANR	1696377	Identifier	dst		1696337	0					
ANR	1696378	Argument	dstw		1696337	1					
ANR	1696379	Identifier	dstw		1696337	0					
ANR	1696380	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	2124:1:59447:59479	1696337	3	True				
ANR	1696381	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1696337	0					
ANR	1696382	Callee	ADJUST_LOCAL_OFFSET		1696337	0					
ANR	1696383	Identifier	ADJUST_LOCAL_OFFSET		1696337	0					
ANR	1696384	ArgumentList	src1		1696337	1					
ANR	1696385	Argument	src1		1696337	0					
ANR	1696386	Identifier	src1		1696337	0					
ANR	1696387	Argument	src1w		1696337	1					
ANR	1696388	Identifier	src1w		1696337	0					
ANR	1696389	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	2125:1:59482:59514	1696337	4	True				
ANR	1696390	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1696337	0					
ANR	1696391	Callee	ADJUST_LOCAL_OFFSET		1696337	0					
ANR	1696392	Identifier	ADJUST_LOCAL_OFFSET		1696337	0					
ANR	1696393	ArgumentList	src2		1696337	1					
ANR	1696394	Argument	src2		1696337	0					
ANR	1696395	Identifier	src2		1696337	0					
ANR	1696396	Argument	src2w		1696337	1					
ANR	1696397	Identifier	src2w		1696337	0					
ANR	1696398	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2127:1:59518:59554	1696337	5	True				
ANR	1696399	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1696337	0					
ANR	1696400	Callee	CHECK_EXTRA_REGS		1696337	0					
ANR	1696401	Identifier	CHECK_EXTRA_REGS		1696337	0					
ANR	1696402	ArgumentList	dst		1696337	1					
ANR	1696403	Argument	dst		1696337	0					
ANR	1696404	Identifier	dst		1696337	0					
ANR	1696405	Argument	dstw		1696337	1					
ANR	1696406	Identifier	dstw		1696337	0					
ANR	1696407	Argument	( void ) 0		1696337	2					
ANR	1696408	CastExpression	( void ) 0		1696337	0					
ANR	1696409	CastTarget	void		1696337	0					
ANR	1696410	PrimaryExpression	0		1696337	1					
ANR	1696411	ExpressionStatement	"CHECK_EXTRA_REGS ( src1 , src1w , ( void ) 0 )"	2128:1:59557:59595	1696337	6	True				
ANR	1696412	CallExpression	"CHECK_EXTRA_REGS ( src1 , src1w , ( void ) 0 )"		1696337	0					
ANR	1696413	Callee	CHECK_EXTRA_REGS		1696337	0					
ANR	1696414	Identifier	CHECK_EXTRA_REGS		1696337	0					
ANR	1696415	ArgumentList	src1		1696337	1					
ANR	1696416	Argument	src1		1696337	0					
ANR	1696417	Identifier	src1		1696337	0					
ANR	1696418	Argument	src1w		1696337	1					
ANR	1696419	Identifier	src1w		1696337	0					
ANR	1696420	Argument	( void ) 0		1696337	2					
ANR	1696421	CastExpression	( void ) 0		1696337	0					
ANR	1696422	CastTarget	void		1696337	0					
ANR	1696423	PrimaryExpression	0		1696337	1					
ANR	1696424	ExpressionStatement	"CHECK_EXTRA_REGS ( src2 , src2w , ( void ) 0 )"	2129:1:59598:59636	1696337	7	True				
ANR	1696425	CallExpression	"CHECK_EXTRA_REGS ( src2 , src2w , ( void ) 0 )"		1696337	0					
ANR	1696426	Callee	CHECK_EXTRA_REGS		1696337	0					
ANR	1696427	Identifier	CHECK_EXTRA_REGS		1696337	0					
ANR	1696428	ArgumentList	src2		1696337	1					
ANR	1696429	Argument	src2		1696337	0					
ANR	1696430	Identifier	src2		1696337	0					
ANR	1696431	Argument	src2w		1696337	1					
ANR	1696432	Identifier	src2w		1696337	0					
ANR	1696433	Argument	( void ) 0		1696337	2					
ANR	1696434	CastExpression	( void ) 0		1696337	0					
ANR	1696435	CastTarget	void		1696337	0					
ANR	1696436	PrimaryExpression	0		1696337	1					
ANR	1696437	ExpressionStatement	compiler -> mode32 = op & SLJIT_INT_OP	2131:1:59696:59732	1696337	8	True				
ANR	1696438	AssignmentExpression	compiler -> mode32 = op & SLJIT_INT_OP		1696337	0		=			
ANR	1696439	PtrMemberAccess	compiler -> mode32		1696337	0					
ANR	1696440	Identifier	compiler		1696337	0					
ANR	1696441	Identifier	mode32		1696337	1					
ANR	1696442	BitAndExpression	op & SLJIT_INT_OP		1696337	1		&			
ANR	1696443	Identifier	op		1696337	0					
ANR	1696444	Identifier	SLJIT_INT_OP		1696337	1					
ANR	1696445	IfStatement	if ( GET_OPCODE ( op ) >= SLJIT_MUL )		1696337	9					
ANR	1696446	Condition	GET_OPCODE ( op ) >= SLJIT_MUL	2134:5:59747:59773	1696337	0	True				
ANR	1696447	RelationalExpression	GET_OPCODE ( op ) >= SLJIT_MUL		1696337	0		>=			
ANR	1696448	CallExpression	GET_OPCODE ( op )		1696337	0					
ANR	1696449	Callee	GET_OPCODE		1696337	0					
ANR	1696450	Identifier	GET_OPCODE		1696337	0					
ANR	1696451	ArgumentList	op		1696337	1					
ANR	1696452	Argument	op		1696337	0					
ANR	1696453	Identifier	op		1696337	0					
ANR	1696454	Identifier	SLJIT_MUL		1696337	1					
ANR	1696455	CompoundStatement		15:34:461:461	1696337	1					
ANR	1696456	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op ) ) )		1696337	0					
ANR	1696457	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )	2135:6:59784:59812	1696337	0	True				
ANR	1696458	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )		1696337	0					
ANR	1696459	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696460	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696461	ArgumentList	GET_FLAGS ( op )		1696337	1					
ANR	1696462	Argument	GET_FLAGS ( op )		1696337	0					
ANR	1696463	CallExpression	GET_FLAGS ( op )		1696337	0					
ANR	1696464	Callee	GET_FLAGS		1696337	0					
ANR	1696465	Identifier	GET_FLAGS		1696337	0					
ANR	1696466	ArgumentList	op		1696337	1					
ANR	1696467	Argument	op		1696337	0					
ANR	1696468	Identifier	op		1696337	0					
ANR	1696469	ExpressionStatement	compiler -> flags_saved = 0	2136:3:59818:59843	1696337	1	True				
ANR	1696470	AssignmentExpression	compiler -> flags_saved = 0		1696337	0		=			
ANR	1696471	PtrMemberAccess	compiler -> flags_saved		1696337	0					
ANR	1696472	Identifier	compiler		1696337	0					
ANR	1696473	Identifier	flags_saved		1696337	1					
ANR	1696474	PrimaryExpression	0		1696337	1					
ANR	1696475	ElseStatement	else		1696337	0					
ANR	1696476	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1696337	0					
ANR	1696477	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	2137:11:59856:59918	1696337	0	True				
ANR	1696478	AndExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1696337	0		&&			
ANR	1696479	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1696337	0					
ANR	1696480	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696481	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696482	ArgumentList	op & SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696483	Argument	op & SLJIT_KEEP_FLAGS		1696337	0					
ANR	1696484	BitAndExpression	op & SLJIT_KEEP_FLAGS		1696337	0		&			
ANR	1696485	Identifier	op		1696337	0					
ANR	1696486	Identifier	SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696487	UnaryOperationExpression	! compiler -> flags_saved		1696337	1					
ANR	1696488	UnaryOperator	!		1696337	0					
ANR	1696489	PtrMemberAccess	compiler -> flags_saved		1696337	1					
ANR	1696490	Identifier	compiler		1696337	0					
ANR	1696491	Identifier	flags_saved		1696337	1					
ANR	1696492	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2138:3:59924:59958	1696337	1	True				
ANR	1696493	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1696337	0					
ANR	1696494	Callee	FAIL_IF		1696337	0					
ANR	1696495	Identifier	FAIL_IF		1696337	0					
ANR	1696496	ArgumentList	emit_save_flags ( compiler )		1696337	1					
ANR	1696497	Argument	emit_save_flags ( compiler )		1696337	0					
ANR	1696498	CallExpression	emit_save_flags ( compiler )		1696337	0					
ANR	1696499	Callee	emit_save_flags		1696337	0					
ANR	1696500	Identifier	emit_save_flags		1696337	0					
ANR	1696501	ArgumentList	compiler		1696337	1					
ANR	1696502	Argument	compiler		1696337	0					
ANR	1696503	Identifier	compiler		1696337	0					
ANR	1696504	SwitchStatement	switch ( GET_OPCODE ( op ) )		1696337	10					
ANR	1696505	Condition	GET_OPCODE ( op )	2141:9:59973:59986	1696337	0	True				
ANR	1696506	CallExpression	GET_OPCODE ( op )		1696337	0					
ANR	1696507	Callee	GET_OPCODE		1696337	0					
ANR	1696508	Identifier	GET_OPCODE		1696337	0					
ANR	1696509	ArgumentList	op		1696337	1					
ANR	1696510	Argument	op		1696337	0					
ANR	1696511	Identifier	op		1696337	0					
ANR	1696512	CompoundStatement		22:25:674:674	1696337	1					
ANR	1696513	Label	case SLJIT_ADD :	2142:1:59992:60006	1696337	0	True				
ANR	1696514	Identifier	SLJIT_ADD		1696337	0					
ANR	1696515	IfStatement	if ( ! GET_FLAGS ( op ) )		1696337	1					
ANR	1696516	Condition	! GET_FLAGS ( op )	2143:6:60014:60027	1696337	0	True				
ANR	1696517	UnaryOperationExpression	! GET_FLAGS ( op )		1696337	0					
ANR	1696518	UnaryOperator	!		1696337	0					
ANR	1696519	CallExpression	GET_FLAGS ( op )		1696337	1					
ANR	1696520	Callee	GET_FLAGS		1696337	0					
ANR	1696521	Identifier	GET_FLAGS		1696337	0					
ANR	1696522	ArgumentList	op		1696337	1					
ANR	1696523	Argument	op		1696337	0					
ANR	1696524	Identifier	op		1696337	0					
ANR	1696525	CompoundStatement		24:22:715:715	1696337	1					
ANR	1696526	IfStatement	"if ( emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w ) != SLJIT_ERR_UNSUPPORTED )"		1696337	0					
ANR	1696527	Condition	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w ) != SLJIT_ERR_UNSUPPORTED"	2144:7:60039:60148	1696337	0	True				
ANR	1696528	EqualityExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w ) != SLJIT_ERR_UNSUPPORTED"		1696337	0		!=			
ANR	1696529	CallExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696530	Callee	emit_lea_binary		1696337	0					
ANR	1696531	Identifier	emit_lea_binary		1696337	0					
ANR	1696532	ArgumentList	compiler		1696337	1					
ANR	1696533	Argument	compiler		1696337	0					
ANR	1696534	Identifier	compiler		1696337	0					
ANR	1696535	Argument	op & SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696536	BitAndExpression	op & SLJIT_KEEP_FLAGS		1696337	0		&			
ANR	1696537	Identifier	op		1696337	0					
ANR	1696538	Identifier	SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696539	Argument	dst		1696337	2					
ANR	1696540	Identifier	dst		1696337	0					
ANR	1696541	Argument	dstw		1696337	3					
ANR	1696542	Identifier	dstw		1696337	0					
ANR	1696543	Argument	src1		1696337	4					
ANR	1696544	Identifier	src1		1696337	0					
ANR	1696545	Argument	src1w		1696337	5					
ANR	1696546	Identifier	src1w		1696337	0					
ANR	1696547	Argument	src2		1696337	6					
ANR	1696548	Identifier	src2		1696337	0					
ANR	1696549	Argument	src2w		1696337	7					
ANR	1696550	Identifier	src2w		1696337	0					
ANR	1696551	Identifier	SLJIT_ERR_UNSUPPORTED		1696337	1					
ANR	1696552	ReturnStatement	return compiler -> error ;	2145:4:60155:60177	1696337	1	True				
ANR	1696553	PtrMemberAccess	compiler -> error		1696337	0					
ANR	1696554	Identifier	compiler		1696337	0					
ANR	1696555	Identifier	error		1696337	1					
ANR	1696556	ElseStatement	else		1696337	0					
ANR	1696557	ExpressionStatement	compiler -> flags_saved = 0	2148:3:60193:60218	1696337	0	True				
ANR	1696558	AssignmentExpression	compiler -> flags_saved = 0		1696337	0		=			
ANR	1696559	PtrMemberAccess	compiler -> flags_saved		1696337	0					
ANR	1696560	Identifier	compiler		1696337	0					
ANR	1696561	Identifier	flags_saved		1696337	1					
ANR	1696562	PrimaryExpression	0		1696337	1					
ANR	1696563	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1696337	2					
ANR	1696564	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	2149:6:60226:60288	1696337	0	True				
ANR	1696565	AndExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1696337	0		&&			
ANR	1696566	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1696337	0					
ANR	1696567	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696568	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696569	ArgumentList	op & SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696570	Argument	op & SLJIT_KEEP_FLAGS		1696337	0					
ANR	1696571	BitAndExpression	op & SLJIT_KEEP_FLAGS		1696337	0		&			
ANR	1696572	Identifier	op		1696337	0					
ANR	1696573	Identifier	SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696574	UnaryOperationExpression	! compiler -> flags_saved		1696337	1					
ANR	1696575	UnaryOperator	!		1696337	0					
ANR	1696576	PtrMemberAccess	compiler -> flags_saved		1696337	1					
ANR	1696577	Identifier	compiler		1696337	0					
ANR	1696578	Identifier	flags_saved		1696337	1					
ANR	1696579	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2150:3:60294:60328	1696337	1	True				
ANR	1696580	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1696337	0					
ANR	1696581	Callee	FAIL_IF		1696337	0					
ANR	1696582	Identifier	FAIL_IF		1696337	0					
ANR	1696583	ArgumentList	emit_save_flags ( compiler )		1696337	1					
ANR	1696584	Argument	emit_save_flags ( compiler )		1696337	0					
ANR	1696585	CallExpression	emit_save_flags ( compiler )		1696337	0					
ANR	1696586	Callee	emit_save_flags		1696337	0					
ANR	1696587	Identifier	emit_save_flags		1696337	0					
ANR	1696588	ArgumentList	compiler		1696337	1					
ANR	1696589	Argument	compiler		1696337	0					
ANR	1696590	Identifier	compiler		1696337	0					
ANR	1696591	ReturnStatement	"return emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2151:2:60332:60442	1696337	3	True				
ANR	1696592	CallExpression	"emit_cum_binary ( compiler , ADD_r_rm , ADD_rm_r , ADD , ADD_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696593	Callee	emit_cum_binary		1696337	0					
ANR	1696594	Identifier	emit_cum_binary		1696337	0					
ANR	1696595	ArgumentList	compiler		1696337	1					
ANR	1696596	Argument	compiler		1696337	0					
ANR	1696597	Identifier	compiler		1696337	0					
ANR	1696598	Argument	ADD_r_rm		1696337	1					
ANR	1696599	Identifier	ADD_r_rm		1696337	0					
ANR	1696600	Argument	ADD_rm_r		1696337	2					
ANR	1696601	Identifier	ADD_rm_r		1696337	0					
ANR	1696602	Argument	ADD		1696337	3					
ANR	1696603	Identifier	ADD		1696337	0					
ANR	1696604	Argument	ADD_EAX_i32		1696337	4					
ANR	1696605	Identifier	ADD_EAX_i32		1696337	0					
ANR	1696606	Argument	dst		1696337	5					
ANR	1696607	Identifier	dst		1696337	0					
ANR	1696608	Argument	dstw		1696337	6					
ANR	1696609	Identifier	dstw		1696337	0					
ANR	1696610	Argument	src1		1696337	7					
ANR	1696611	Identifier	src1		1696337	0					
ANR	1696612	Argument	src1w		1696337	8					
ANR	1696613	Identifier	src1w		1696337	0					
ANR	1696614	Argument	src2		1696337	9					
ANR	1696615	Identifier	src2		1696337	0					
ANR	1696616	Argument	src2w		1696337	10					
ANR	1696617	Identifier	src2w		1696337	0					
ANR	1696618	Label	case SLJIT_ADDC :	2153:1:60445:60460	1696337	4	True				
ANR	1696619	Identifier	SLJIT_ADDC		1696337	0					
ANR	1696620	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1696337	5					
ANR	1696621	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2154:6:60468:60504	1696337	0	True				
ANR	1696622	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1696337	0					
ANR	1696623	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696624	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696625	ArgumentList	compiler -> flags_saved		1696337	1					
ANR	1696626	Argument	compiler -> flags_saved		1696337	0					
ANR	1696627	PtrMemberAccess	compiler -> flags_saved		1696337	0					
ANR	1696628	Identifier	compiler		1696337	0					
ANR	1696629	Identifier	flags_saved		1696337	1					
ANR	1696630	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"	2155:3:60541:60581	1696337	1	True				
ANR	1696631	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"		1696337	0					
ANR	1696632	Callee	FAIL_IF		1696337	0					
ANR	1696633	Identifier	FAIL_IF		1696337	0					
ANR	1696634	ArgumentList	"emit_restore_flags ( compiler , 1 )"		1696337	1					
ANR	1696635	Argument	"emit_restore_flags ( compiler , 1 )"		1696337	0					
ANR	1696636	CallExpression	"emit_restore_flags ( compiler , 1 )"		1696337	0					
ANR	1696637	Callee	emit_restore_flags		1696337	0					
ANR	1696638	Identifier	emit_restore_flags		1696337	0					
ANR	1696639	ArgumentList	compiler		1696337	1					
ANR	1696640	Argument	compiler		1696337	0					
ANR	1696641	Identifier	compiler		1696337	0					
ANR	1696642	Argument	1		1696337	1					
ANR	1696643	PrimaryExpression	1		1696337	0					
ANR	1696644	ElseStatement	else		1696337	0					
ANR	1696645	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) )		1696337	0					
ANR	1696646	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )	2156:11:60594:60630	1696337	0	True				
ANR	1696647	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1696337	0					
ANR	1696648	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696649	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696650	ArgumentList	op & SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696651	Argument	op & SLJIT_KEEP_FLAGS		1696337	0					
ANR	1696652	BitAndExpression	op & SLJIT_KEEP_FLAGS		1696337	0		&			
ANR	1696653	Identifier	op		1696337	0					
ANR	1696654	Identifier	SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696655	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2157:3:60636:60670	1696337	1	True				
ANR	1696656	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1696337	0					
ANR	1696657	Callee	FAIL_IF		1696337	0					
ANR	1696658	Identifier	FAIL_IF		1696337	0					
ANR	1696659	ArgumentList	emit_save_flags ( compiler )		1696337	1					
ANR	1696660	Argument	emit_save_flags ( compiler )		1696337	0					
ANR	1696661	CallExpression	emit_save_flags ( compiler )		1696337	0					
ANR	1696662	Callee	emit_save_flags		1696337	0					
ANR	1696663	Identifier	emit_save_flags		1696337	0					
ANR	1696664	ArgumentList	compiler		1696337	1					
ANR	1696665	Argument	compiler		1696337	0					
ANR	1696666	Identifier	compiler		1696337	0					
ANR	1696667	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op ) ) )		1696337	6					
ANR	1696668	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )	2158:6:60678:60706	1696337	0	True				
ANR	1696669	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )		1696337	0					
ANR	1696670	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696671	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696672	ArgumentList	GET_FLAGS ( op )		1696337	1					
ANR	1696673	Argument	GET_FLAGS ( op )		1696337	0					
ANR	1696674	CallExpression	GET_FLAGS ( op )		1696337	0					
ANR	1696675	Callee	GET_FLAGS		1696337	0					
ANR	1696676	Identifier	GET_FLAGS		1696337	0					
ANR	1696677	ArgumentList	op		1696337	1					
ANR	1696678	Argument	op		1696337	0					
ANR	1696679	Identifier	op		1696337	0					
ANR	1696680	ExpressionStatement	compiler -> flags_saved = 0	2159:3:60712:60737	1696337	1	True				
ANR	1696681	AssignmentExpression	compiler -> flags_saved = 0		1696337	0		=			
ANR	1696682	PtrMemberAccess	compiler -> flags_saved		1696337	0					
ANR	1696683	Identifier	compiler		1696337	0					
ANR	1696684	Identifier	flags_saved		1696337	1					
ANR	1696685	PrimaryExpression	0		1696337	1					
ANR	1696686	ReturnStatement	"return emit_cum_binary ( compiler , ADC_r_rm , ADC_rm_r , ADC , ADC_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2160:2:60741:60851	1696337	7	True				
ANR	1696687	CallExpression	"emit_cum_binary ( compiler , ADC_r_rm , ADC_rm_r , ADC , ADC_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696688	Callee	emit_cum_binary		1696337	0					
ANR	1696689	Identifier	emit_cum_binary		1696337	0					
ANR	1696690	ArgumentList	compiler		1696337	1					
ANR	1696691	Argument	compiler		1696337	0					
ANR	1696692	Identifier	compiler		1696337	0					
ANR	1696693	Argument	ADC_r_rm		1696337	1					
ANR	1696694	Identifier	ADC_r_rm		1696337	0					
ANR	1696695	Argument	ADC_rm_r		1696337	2					
ANR	1696696	Identifier	ADC_rm_r		1696337	0					
ANR	1696697	Argument	ADC		1696337	3					
ANR	1696698	Identifier	ADC		1696337	0					
ANR	1696699	Argument	ADC_EAX_i32		1696337	4					
ANR	1696700	Identifier	ADC_EAX_i32		1696337	0					
ANR	1696701	Argument	dst		1696337	5					
ANR	1696702	Identifier	dst		1696337	0					
ANR	1696703	Argument	dstw		1696337	6					
ANR	1696704	Identifier	dstw		1696337	0					
ANR	1696705	Argument	src1		1696337	7					
ANR	1696706	Identifier	src1		1696337	0					
ANR	1696707	Argument	src1w		1696337	8					
ANR	1696708	Identifier	src1w		1696337	0					
ANR	1696709	Argument	src2		1696337	9					
ANR	1696710	Identifier	src2		1696337	0					
ANR	1696711	Argument	src2w		1696337	10					
ANR	1696712	Identifier	src2w		1696337	0					
ANR	1696713	Label	case SLJIT_SUB :	2162:1:60854:60868	1696337	8	True				
ANR	1696714	Identifier	SLJIT_SUB		1696337	0					
ANR	1696715	IfStatement	if ( ! GET_FLAGS ( op ) )		1696337	9					
ANR	1696716	Condition	! GET_FLAGS ( op )	2163:6:60876:60889	1696337	0	True				
ANR	1696717	UnaryOperationExpression	! GET_FLAGS ( op )		1696337	0					
ANR	1696718	UnaryOperator	!		1696337	0					
ANR	1696719	CallExpression	GET_FLAGS ( op )		1696337	1					
ANR	1696720	Callee	GET_FLAGS		1696337	0					
ANR	1696721	Identifier	GET_FLAGS		1696337	0					
ANR	1696722	ArgumentList	op		1696337	1					
ANR	1696723	Argument	op		1696337	0					
ANR	1696724	Identifier	op		1696337	0					
ANR	1696725	CompoundStatement		44:22:1577:1577	1696337	1					
ANR	1696726	IfStatement	"if ( ( src2 & SLJIT_IMM ) && emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED )"		1696337	0					
ANR	1696727	Condition	"( src2 & SLJIT_IMM ) && emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED"	2164:7:60901:61038	1696337	0	True				
ANR	1696728	AndExpression	"( src2 & SLJIT_IMM ) && emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED"		1696337	0		&&			
ANR	1696729	BitAndExpression	src2 & SLJIT_IMM		1696337	0		&			
ANR	1696730	Identifier	src2		1696337	0					
ANR	1696731	Identifier	SLJIT_IMM		1696337	1					
ANR	1696732	EqualityExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w ) != SLJIT_ERR_UNSUPPORTED"		1696337	1		!=			
ANR	1696733	CallExpression	"emit_lea_binary ( compiler , op & SLJIT_KEEP_FLAGS , dst , dstw , src1 , src1w , SLJIT_IMM , - src2w )"		1696337	0					
ANR	1696734	Callee	emit_lea_binary		1696337	0					
ANR	1696735	Identifier	emit_lea_binary		1696337	0					
ANR	1696736	ArgumentList	compiler		1696337	1					
ANR	1696737	Argument	compiler		1696337	0					
ANR	1696738	Identifier	compiler		1696337	0					
ANR	1696739	Argument	op & SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696740	BitAndExpression	op & SLJIT_KEEP_FLAGS		1696337	0		&			
ANR	1696741	Identifier	op		1696337	0					
ANR	1696742	Identifier	SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696743	Argument	dst		1696337	2					
ANR	1696744	Identifier	dst		1696337	0					
ANR	1696745	Argument	dstw		1696337	3					
ANR	1696746	Identifier	dstw		1696337	0					
ANR	1696747	Argument	src1		1696337	4					
ANR	1696748	Identifier	src1		1696337	0					
ANR	1696749	Argument	src1w		1696337	5					
ANR	1696750	Identifier	src1w		1696337	0					
ANR	1696751	Argument	SLJIT_IMM		1696337	6					
ANR	1696752	Identifier	SLJIT_IMM		1696337	0					
ANR	1696753	Argument	- src2w		1696337	7					
ANR	1696754	UnaryOperationExpression	- src2w		1696337	0					
ANR	1696755	UnaryOperator	-		1696337	0					
ANR	1696756	Identifier	src2w		1696337	1					
ANR	1696757	Identifier	SLJIT_ERR_UNSUPPORTED		1696337	1					
ANR	1696758	ReturnStatement	return compiler -> error ;	2165:4:61045:61067	1696337	1	True				
ANR	1696759	PtrMemberAccess	compiler -> error		1696337	0					
ANR	1696760	Identifier	compiler		1696337	0					
ANR	1696761	Identifier	error		1696337	1					
ANR	1696762	ElseStatement	else		1696337	0					
ANR	1696763	ExpressionStatement	compiler -> flags_saved = 0	2168:3:61083:61108	1696337	0	True				
ANR	1696764	AssignmentExpression	compiler -> flags_saved = 0		1696337	0		=			
ANR	1696765	PtrMemberAccess	compiler -> flags_saved		1696337	0					
ANR	1696766	Identifier	compiler		1696337	0					
ANR	1696767	Identifier	flags_saved		1696337	1					
ANR	1696768	PrimaryExpression	0		1696337	1					
ANR	1696769	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved )		1696337	10					
ANR	1696770	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved	2169:6:61116:61178	1696337	0	True				
ANR	1696771	AndExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) && ! compiler -> flags_saved		1696337	0		&&			
ANR	1696772	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1696337	0					
ANR	1696773	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696774	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696775	ArgumentList	op & SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696776	Argument	op & SLJIT_KEEP_FLAGS		1696337	0					
ANR	1696777	BitAndExpression	op & SLJIT_KEEP_FLAGS		1696337	0		&			
ANR	1696778	Identifier	op		1696337	0					
ANR	1696779	Identifier	SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696780	UnaryOperationExpression	! compiler -> flags_saved		1696337	1					
ANR	1696781	UnaryOperator	!		1696337	0					
ANR	1696782	PtrMemberAccess	compiler -> flags_saved		1696337	1					
ANR	1696783	Identifier	compiler		1696337	0					
ANR	1696784	Identifier	flags_saved		1696337	1					
ANR	1696785	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2170:3:61184:61218	1696337	1	True				
ANR	1696786	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1696337	0					
ANR	1696787	Callee	FAIL_IF		1696337	0					
ANR	1696788	Identifier	FAIL_IF		1696337	0					
ANR	1696789	ArgumentList	emit_save_flags ( compiler )		1696337	1					
ANR	1696790	Argument	emit_save_flags ( compiler )		1696337	0					
ANR	1696791	CallExpression	emit_save_flags ( compiler )		1696337	0					
ANR	1696792	Callee	emit_save_flags		1696337	0					
ANR	1696793	Identifier	emit_save_flags		1696337	0					
ANR	1696794	ArgumentList	compiler		1696337	1					
ANR	1696795	Argument	compiler		1696337	0					
ANR	1696796	Identifier	compiler		1696337	0					
ANR	1696797	IfStatement	if ( dst == SLJIT_UNUSED )		1696337	11					
ANR	1696798	Condition	dst == SLJIT_UNUSED	2171:6:61226:61244	1696337	0	True				
ANR	1696799	EqualityExpression	dst == SLJIT_UNUSED		1696337	0		==			
ANR	1696800	Identifier	dst		1696337	0					
ANR	1696801	Identifier	SLJIT_UNUSED		1696337	1					
ANR	1696802	ReturnStatement	"return emit_cmp_binary ( compiler , src1 , src1w , src2 , src2w ) ;"	2172:3:61250:61308	1696337	1	True				
ANR	1696803	CallExpression	"emit_cmp_binary ( compiler , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696804	Callee	emit_cmp_binary		1696337	0					
ANR	1696805	Identifier	emit_cmp_binary		1696337	0					
ANR	1696806	ArgumentList	compiler		1696337	1					
ANR	1696807	Argument	compiler		1696337	0					
ANR	1696808	Identifier	compiler		1696337	0					
ANR	1696809	Argument	src1		1696337	1					
ANR	1696810	Identifier	src1		1696337	0					
ANR	1696811	Argument	src1w		1696337	2					
ANR	1696812	Identifier	src1w		1696337	0					
ANR	1696813	Argument	src2		1696337	3					
ANR	1696814	Identifier	src2		1696337	0					
ANR	1696815	Argument	src2w		1696337	4					
ANR	1696816	Identifier	src2w		1696337	0					
ANR	1696817	ReturnStatement	"return emit_non_cum_binary ( compiler , SUB_r_rm , SUB_rm_r , SUB , SUB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2173:2:61312:61426	1696337	12	True				
ANR	1696818	CallExpression	"emit_non_cum_binary ( compiler , SUB_r_rm , SUB_rm_r , SUB , SUB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696819	Callee	emit_non_cum_binary		1696337	0					
ANR	1696820	Identifier	emit_non_cum_binary		1696337	0					
ANR	1696821	ArgumentList	compiler		1696337	1					
ANR	1696822	Argument	compiler		1696337	0					
ANR	1696823	Identifier	compiler		1696337	0					
ANR	1696824	Argument	SUB_r_rm		1696337	1					
ANR	1696825	Identifier	SUB_r_rm		1696337	0					
ANR	1696826	Argument	SUB_rm_r		1696337	2					
ANR	1696827	Identifier	SUB_rm_r		1696337	0					
ANR	1696828	Argument	SUB		1696337	3					
ANR	1696829	Identifier	SUB		1696337	0					
ANR	1696830	Argument	SUB_EAX_i32		1696337	4					
ANR	1696831	Identifier	SUB_EAX_i32		1696337	0					
ANR	1696832	Argument	dst		1696337	5					
ANR	1696833	Identifier	dst		1696337	0					
ANR	1696834	Argument	dstw		1696337	6					
ANR	1696835	Identifier	dstw		1696337	0					
ANR	1696836	Argument	src1		1696337	7					
ANR	1696837	Identifier	src1		1696337	0					
ANR	1696838	Argument	src1w		1696337	8					
ANR	1696839	Identifier	src1w		1696337	0					
ANR	1696840	Argument	src2		1696337	9					
ANR	1696841	Identifier	src2		1696337	0					
ANR	1696842	Argument	src2w		1696337	10					
ANR	1696843	Identifier	src2w		1696337	0					
ANR	1696844	Label	case SLJIT_SUBC :	2175:1:61429:61444	1696337	13	True				
ANR	1696845	Identifier	SLJIT_SUBC		1696337	0					
ANR	1696846	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1696337	14					
ANR	1696847	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2176:6:61452:61488	1696337	0	True				
ANR	1696848	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1696337	0					
ANR	1696849	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696850	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696851	ArgumentList	compiler -> flags_saved		1696337	1					
ANR	1696852	Argument	compiler -> flags_saved		1696337	0					
ANR	1696853	PtrMemberAccess	compiler -> flags_saved		1696337	0					
ANR	1696854	Identifier	compiler		1696337	0					
ANR	1696855	Identifier	flags_saved		1696337	1					
ANR	1696856	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"	2177:3:61525:61565	1696337	1	True				
ANR	1696857	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , 1 ) )"		1696337	0					
ANR	1696858	Callee	FAIL_IF		1696337	0					
ANR	1696859	Identifier	FAIL_IF		1696337	0					
ANR	1696860	ArgumentList	"emit_restore_flags ( compiler , 1 )"		1696337	1					
ANR	1696861	Argument	"emit_restore_flags ( compiler , 1 )"		1696337	0					
ANR	1696862	CallExpression	"emit_restore_flags ( compiler , 1 )"		1696337	0					
ANR	1696863	Callee	emit_restore_flags		1696337	0					
ANR	1696864	Identifier	emit_restore_flags		1696337	0					
ANR	1696865	ArgumentList	compiler		1696337	1					
ANR	1696866	Argument	compiler		1696337	0					
ANR	1696867	Identifier	compiler		1696337	0					
ANR	1696868	Argument	1		1696337	1					
ANR	1696869	PrimaryExpression	1		1696337	0					
ANR	1696870	ElseStatement	else		1696337	0					
ANR	1696871	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS ) )		1696337	0					
ANR	1696872	Condition	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )	2178:11:61578:61614	1696337	0	True				
ANR	1696873	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_KEEP_FLAGS )		1696337	0					
ANR	1696874	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696875	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696876	ArgumentList	op & SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696877	Argument	op & SLJIT_KEEP_FLAGS		1696337	0					
ANR	1696878	BitAndExpression	op & SLJIT_KEEP_FLAGS		1696337	0		&			
ANR	1696879	Identifier	op		1696337	0					
ANR	1696880	Identifier	SLJIT_KEEP_FLAGS		1696337	1					
ANR	1696881	ExpressionStatement	FAIL_IF ( emit_save_flags ( compiler ) )	2179:3:61620:61654	1696337	1	True				
ANR	1696882	CallExpression	FAIL_IF ( emit_save_flags ( compiler ) )		1696337	0					
ANR	1696883	Callee	FAIL_IF		1696337	0					
ANR	1696884	Identifier	FAIL_IF		1696337	0					
ANR	1696885	ArgumentList	emit_save_flags ( compiler )		1696337	1					
ANR	1696886	Argument	emit_save_flags ( compiler )		1696337	0					
ANR	1696887	CallExpression	emit_save_flags ( compiler )		1696337	0					
ANR	1696888	Callee	emit_save_flags		1696337	0					
ANR	1696889	Identifier	emit_save_flags		1696337	0					
ANR	1696890	ArgumentList	compiler		1696337	1					
ANR	1696891	Argument	compiler		1696337	0					
ANR	1696892	Identifier	compiler		1696337	0					
ANR	1696893	IfStatement	if ( SLJIT_UNLIKELY ( GET_FLAGS ( op ) ) )		1696337	15					
ANR	1696894	Condition	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )	2180:6:61662:61690	1696337	0	True				
ANR	1696895	CallExpression	SLJIT_UNLIKELY ( GET_FLAGS ( op ) )		1696337	0					
ANR	1696896	Callee	SLJIT_UNLIKELY		1696337	0					
ANR	1696897	Identifier	SLJIT_UNLIKELY		1696337	0					
ANR	1696898	ArgumentList	GET_FLAGS ( op )		1696337	1					
ANR	1696899	Argument	GET_FLAGS ( op )		1696337	0					
ANR	1696900	CallExpression	GET_FLAGS ( op )		1696337	0					
ANR	1696901	Callee	GET_FLAGS		1696337	0					
ANR	1696902	Identifier	GET_FLAGS		1696337	0					
ANR	1696903	ArgumentList	op		1696337	1					
ANR	1696904	Argument	op		1696337	0					
ANR	1696905	Identifier	op		1696337	0					
ANR	1696906	ExpressionStatement	compiler -> flags_saved = 0	2181:3:61696:61721	1696337	1	True				
ANR	1696907	AssignmentExpression	compiler -> flags_saved = 0		1696337	0		=			
ANR	1696908	PtrMemberAccess	compiler -> flags_saved		1696337	0					
ANR	1696909	Identifier	compiler		1696337	0					
ANR	1696910	Identifier	flags_saved		1696337	1					
ANR	1696911	PrimaryExpression	0		1696337	1					
ANR	1696912	ReturnStatement	"return emit_non_cum_binary ( compiler , SBB_r_rm , SBB_rm_r , SBB , SBB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2182:2:61725:61839	1696337	16	True				
ANR	1696913	CallExpression	"emit_non_cum_binary ( compiler , SBB_r_rm , SBB_rm_r , SBB , SBB_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696914	Callee	emit_non_cum_binary		1696337	0					
ANR	1696915	Identifier	emit_non_cum_binary		1696337	0					
ANR	1696916	ArgumentList	compiler		1696337	1					
ANR	1696917	Argument	compiler		1696337	0					
ANR	1696918	Identifier	compiler		1696337	0					
ANR	1696919	Argument	SBB_r_rm		1696337	1					
ANR	1696920	Identifier	SBB_r_rm		1696337	0					
ANR	1696921	Argument	SBB_rm_r		1696337	2					
ANR	1696922	Identifier	SBB_rm_r		1696337	0					
ANR	1696923	Argument	SBB		1696337	3					
ANR	1696924	Identifier	SBB		1696337	0					
ANR	1696925	Argument	SBB_EAX_i32		1696337	4					
ANR	1696926	Identifier	SBB_EAX_i32		1696337	0					
ANR	1696927	Argument	dst		1696337	5					
ANR	1696928	Identifier	dst		1696337	0					
ANR	1696929	Argument	dstw		1696337	6					
ANR	1696930	Identifier	dstw		1696337	0					
ANR	1696931	Argument	src1		1696337	7					
ANR	1696932	Identifier	src1		1696337	0					
ANR	1696933	Argument	src1w		1696337	8					
ANR	1696934	Identifier	src1w		1696337	0					
ANR	1696935	Argument	src2		1696337	9					
ANR	1696936	Identifier	src2		1696337	0					
ANR	1696937	Argument	src2w		1696337	10					
ANR	1696938	Identifier	src2w		1696337	0					
ANR	1696939	Label	case SLJIT_MUL :	2184:1:61842:61856	1696337	17	True				
ANR	1696940	Identifier	SLJIT_MUL		1696337	0					
ANR	1696941	ReturnStatement	"return emit_mul ( compiler , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2185:2:61860:61922	1696337	18	True				
ANR	1696942	CallExpression	"emit_mul ( compiler , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696943	Callee	emit_mul		1696337	0					
ANR	1696944	Identifier	emit_mul		1696337	0					
ANR	1696945	ArgumentList	compiler		1696337	1					
ANR	1696946	Argument	compiler		1696337	0					
ANR	1696947	Identifier	compiler		1696337	0					
ANR	1696948	Argument	dst		1696337	1					
ANR	1696949	Identifier	dst		1696337	0					
ANR	1696950	Argument	dstw		1696337	2					
ANR	1696951	Identifier	dstw		1696337	0					
ANR	1696952	Argument	src1		1696337	3					
ANR	1696953	Identifier	src1		1696337	0					
ANR	1696954	Argument	src1w		1696337	4					
ANR	1696955	Identifier	src1w		1696337	0					
ANR	1696956	Argument	src2		1696337	5					
ANR	1696957	Identifier	src2		1696337	0					
ANR	1696958	Argument	src2w		1696337	6					
ANR	1696959	Identifier	src2w		1696337	0					
ANR	1696960	Label	case SLJIT_AND :	2186:1:61925:61939	1696337	19	True				
ANR	1696961	Identifier	SLJIT_AND		1696337	0					
ANR	1696962	IfStatement	if ( dst == SLJIT_UNUSED )		1696337	20					
ANR	1696963	Condition	dst == SLJIT_UNUSED	2187:6:61947:61965	1696337	0	True				
ANR	1696964	EqualityExpression	dst == SLJIT_UNUSED		1696337	0		==			
ANR	1696965	Identifier	dst		1696337	0					
ANR	1696966	Identifier	SLJIT_UNUSED		1696337	1					
ANR	1696967	ReturnStatement	"return emit_test_binary ( compiler , src1 , src1w , src2 , src2w ) ;"	2188:3:61971:62030	1696337	1	True				
ANR	1696968	CallExpression	"emit_test_binary ( compiler , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696969	Callee	emit_test_binary		1696337	0					
ANR	1696970	Identifier	emit_test_binary		1696337	0					
ANR	1696971	ArgumentList	compiler		1696337	1					
ANR	1696972	Argument	compiler		1696337	0					
ANR	1696973	Identifier	compiler		1696337	0					
ANR	1696974	Argument	src1		1696337	1					
ANR	1696975	Identifier	src1		1696337	0					
ANR	1696976	Argument	src1w		1696337	2					
ANR	1696977	Identifier	src1w		1696337	0					
ANR	1696978	Argument	src2		1696337	3					
ANR	1696979	Identifier	src2		1696337	0					
ANR	1696980	Argument	src2w		1696337	4					
ANR	1696981	Identifier	src2w		1696337	0					
ANR	1696982	ReturnStatement	"return emit_cum_binary ( compiler , AND_r_rm , AND_rm_r , AND , AND_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2189:2:62034:62144	1696337	21	True				
ANR	1696983	CallExpression	"emit_cum_binary ( compiler , AND_r_rm , AND_rm_r , AND , AND_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1696984	Callee	emit_cum_binary		1696337	0					
ANR	1696985	Identifier	emit_cum_binary		1696337	0					
ANR	1696986	ArgumentList	compiler		1696337	1					
ANR	1696987	Argument	compiler		1696337	0					
ANR	1696988	Identifier	compiler		1696337	0					
ANR	1696989	Argument	AND_r_rm		1696337	1					
ANR	1696990	Identifier	AND_r_rm		1696337	0					
ANR	1696991	Argument	AND_rm_r		1696337	2					
ANR	1696992	Identifier	AND_rm_r		1696337	0					
ANR	1696993	Argument	AND		1696337	3					
ANR	1696994	Identifier	AND		1696337	0					
ANR	1696995	Argument	AND_EAX_i32		1696337	4					
ANR	1696996	Identifier	AND_EAX_i32		1696337	0					
ANR	1696997	Argument	dst		1696337	5					
ANR	1696998	Identifier	dst		1696337	0					
ANR	1696999	Argument	dstw		1696337	6					
ANR	1697000	Identifier	dstw		1696337	0					
ANR	1697001	Argument	src1		1696337	7					
ANR	1697002	Identifier	src1		1696337	0					
ANR	1697003	Argument	src1w		1696337	8					
ANR	1697004	Identifier	src1w		1696337	0					
ANR	1697005	Argument	src2		1696337	9					
ANR	1697006	Identifier	src2		1696337	0					
ANR	1697007	Argument	src2w		1696337	10					
ANR	1697008	Identifier	src2w		1696337	0					
ANR	1697009	Label	case SLJIT_OR :	2191:1:62147:62160	1696337	22	True				
ANR	1697010	Identifier	SLJIT_OR		1696337	0					
ANR	1697011	ReturnStatement	"return emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2192:2:62164:62270	1696337	23	True				
ANR	1697012	CallExpression	"emit_cum_binary ( compiler , OR_r_rm , OR_rm_r , OR , OR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1697013	Callee	emit_cum_binary		1696337	0					
ANR	1697014	Identifier	emit_cum_binary		1696337	0					
ANR	1697015	ArgumentList	compiler		1696337	1					
ANR	1697016	Argument	compiler		1696337	0					
ANR	1697017	Identifier	compiler		1696337	0					
ANR	1697018	Argument	OR_r_rm		1696337	1					
ANR	1697019	Identifier	OR_r_rm		1696337	0					
ANR	1697020	Argument	OR_rm_r		1696337	2					
ANR	1697021	Identifier	OR_rm_r		1696337	0					
ANR	1697022	Argument	OR		1696337	3					
ANR	1697023	Identifier	OR		1696337	0					
ANR	1697024	Argument	OR_EAX_i32		1696337	4					
ANR	1697025	Identifier	OR_EAX_i32		1696337	0					
ANR	1697026	Argument	dst		1696337	5					
ANR	1697027	Identifier	dst		1696337	0					
ANR	1697028	Argument	dstw		1696337	6					
ANR	1697029	Identifier	dstw		1696337	0					
ANR	1697030	Argument	src1		1696337	7					
ANR	1697031	Identifier	src1		1696337	0					
ANR	1697032	Argument	src1w		1696337	8					
ANR	1697033	Identifier	src1w		1696337	0					
ANR	1697034	Argument	src2		1696337	9					
ANR	1697035	Identifier	src2		1696337	0					
ANR	1697036	Argument	src2w		1696337	10					
ANR	1697037	Identifier	src2w		1696337	0					
ANR	1697038	Label	case SLJIT_XOR :	2194:1:62273:62287	1696337	24	True				
ANR	1697039	Identifier	SLJIT_XOR		1696337	0					
ANR	1697040	ReturnStatement	"return emit_cum_binary ( compiler , XOR_r_rm , XOR_rm_r , XOR , XOR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2195:2:62291:62401	1696337	25	True				
ANR	1697041	CallExpression	"emit_cum_binary ( compiler , XOR_r_rm , XOR_rm_r , XOR , XOR_EAX_i32 , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1697042	Callee	emit_cum_binary		1696337	0					
ANR	1697043	Identifier	emit_cum_binary		1696337	0					
ANR	1697044	ArgumentList	compiler		1696337	1					
ANR	1697045	Argument	compiler		1696337	0					
ANR	1697046	Identifier	compiler		1696337	0					
ANR	1697047	Argument	XOR_r_rm		1696337	1					
ANR	1697048	Identifier	XOR_r_rm		1696337	0					
ANR	1697049	Argument	XOR_rm_r		1696337	2					
ANR	1697050	Identifier	XOR_rm_r		1696337	0					
ANR	1697051	Argument	XOR		1696337	3					
ANR	1697052	Identifier	XOR		1696337	0					
ANR	1697053	Argument	XOR_EAX_i32		1696337	4					
ANR	1697054	Identifier	XOR_EAX_i32		1696337	0					
ANR	1697055	Argument	dst		1696337	5					
ANR	1697056	Identifier	dst		1696337	0					
ANR	1697057	Argument	dstw		1696337	6					
ANR	1697058	Identifier	dstw		1696337	0					
ANR	1697059	Argument	src1		1696337	7					
ANR	1697060	Identifier	src1		1696337	0					
ANR	1697061	Argument	src1w		1696337	8					
ANR	1697062	Identifier	src1w		1696337	0					
ANR	1697063	Argument	src2		1696337	9					
ANR	1697064	Identifier	src2		1696337	0					
ANR	1697065	Argument	src2w		1696337	10					
ANR	1697066	Identifier	src2w		1696337	0					
ANR	1697067	Label	case SLJIT_SHL :	2197:1:62404:62418	1696337	26	True				
ANR	1697068	Identifier	SLJIT_SHL		1696337	0					
ANR	1697069	ReturnStatement	"return emit_shift_with_flags ( compiler , SHL , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2198:2:62422:62520	1696337	27	True				
ANR	1697070	CallExpression	"emit_shift_with_flags ( compiler , SHL , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1697071	Callee	emit_shift_with_flags		1696337	0					
ANR	1697072	Identifier	emit_shift_with_flags		1696337	0					
ANR	1697073	ArgumentList	compiler		1696337	1					
ANR	1697074	Argument	compiler		1696337	0					
ANR	1697075	Identifier	compiler		1696337	0					
ANR	1697076	Argument	SHL		1696337	1					
ANR	1697077	Identifier	SHL		1696337	0					
ANR	1697078	Argument	GET_FLAGS ( op )		1696337	2					
ANR	1697079	CallExpression	GET_FLAGS ( op )		1696337	0					
ANR	1697080	Callee	GET_FLAGS		1696337	0					
ANR	1697081	Identifier	GET_FLAGS		1696337	0					
ANR	1697082	ArgumentList	op		1696337	1					
ANR	1697083	Argument	op		1696337	0					
ANR	1697084	Identifier	op		1696337	0					
ANR	1697085	Argument	dst		1696337	3					
ANR	1697086	Identifier	dst		1696337	0					
ANR	1697087	Argument	dstw		1696337	4					
ANR	1697088	Identifier	dstw		1696337	0					
ANR	1697089	Argument	src1		1696337	5					
ANR	1697090	Identifier	src1		1696337	0					
ANR	1697091	Argument	src1w		1696337	6					
ANR	1697092	Identifier	src1w		1696337	0					
ANR	1697093	Argument	src2		1696337	7					
ANR	1697094	Identifier	src2		1696337	0					
ANR	1697095	Argument	src2w		1696337	8					
ANR	1697096	Identifier	src2w		1696337	0					
ANR	1697097	Label	case SLJIT_LSHR :	2200:1:62523:62538	1696337	28	True				
ANR	1697098	Identifier	SLJIT_LSHR		1696337	0					
ANR	1697099	ReturnStatement	"return emit_shift_with_flags ( compiler , SHR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2201:2:62542:62640	1696337	29	True				
ANR	1697100	CallExpression	"emit_shift_with_flags ( compiler , SHR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1697101	Callee	emit_shift_with_flags		1696337	0					
ANR	1697102	Identifier	emit_shift_with_flags		1696337	0					
ANR	1697103	ArgumentList	compiler		1696337	1					
ANR	1697104	Argument	compiler		1696337	0					
ANR	1697105	Identifier	compiler		1696337	0					
ANR	1697106	Argument	SHR		1696337	1					
ANR	1697107	Identifier	SHR		1696337	0					
ANR	1697108	Argument	GET_FLAGS ( op )		1696337	2					
ANR	1697109	CallExpression	GET_FLAGS ( op )		1696337	0					
ANR	1697110	Callee	GET_FLAGS		1696337	0					
ANR	1697111	Identifier	GET_FLAGS		1696337	0					
ANR	1697112	ArgumentList	op		1696337	1					
ANR	1697113	Argument	op		1696337	0					
ANR	1697114	Identifier	op		1696337	0					
ANR	1697115	Argument	dst		1696337	3					
ANR	1697116	Identifier	dst		1696337	0					
ANR	1697117	Argument	dstw		1696337	4					
ANR	1697118	Identifier	dstw		1696337	0					
ANR	1697119	Argument	src1		1696337	5					
ANR	1697120	Identifier	src1		1696337	0					
ANR	1697121	Argument	src1w		1696337	6					
ANR	1697122	Identifier	src1w		1696337	0					
ANR	1697123	Argument	src2		1696337	7					
ANR	1697124	Identifier	src2		1696337	0					
ANR	1697125	Argument	src2w		1696337	8					
ANR	1697126	Identifier	src2w		1696337	0					
ANR	1697127	Label	case SLJIT_ASHR :	2203:1:62643:62658	1696337	30	True				
ANR	1697128	Identifier	SLJIT_ASHR		1696337	0					
ANR	1697129	ReturnStatement	"return emit_shift_with_flags ( compiler , SAR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	2204:2:62662:62760	1696337	31	True				
ANR	1697130	CallExpression	"emit_shift_with_flags ( compiler , SAR , GET_FLAGS ( op ) , dst , dstw , src1 , src1w , src2 , src2w )"		1696337	0					
ANR	1697131	Callee	emit_shift_with_flags		1696337	0					
ANR	1697132	Identifier	emit_shift_with_flags		1696337	0					
ANR	1697133	ArgumentList	compiler		1696337	1					
ANR	1697134	Argument	compiler		1696337	0					
ANR	1697135	Identifier	compiler		1696337	0					
ANR	1697136	Argument	SAR		1696337	1					
ANR	1697137	Identifier	SAR		1696337	0					
ANR	1697138	Argument	GET_FLAGS ( op )		1696337	2					
ANR	1697139	CallExpression	GET_FLAGS ( op )		1696337	0					
ANR	1697140	Callee	GET_FLAGS		1696337	0					
ANR	1697141	Identifier	GET_FLAGS		1696337	0					
ANR	1697142	ArgumentList	op		1696337	1					
ANR	1697143	Argument	op		1696337	0					
ANR	1697144	Identifier	op		1696337	0					
ANR	1697145	Argument	dst		1696337	3					
ANR	1697146	Identifier	dst		1696337	0					
ANR	1697147	Argument	dstw		1696337	4					
ANR	1697148	Identifier	dstw		1696337	0					
ANR	1697149	Argument	src1		1696337	5					
ANR	1697150	Identifier	src1		1696337	0					
ANR	1697151	Argument	src1w		1696337	6					
ANR	1697152	Identifier	src1w		1696337	0					
ANR	1697153	Argument	src2		1696337	7					
ANR	1697154	Identifier	src2		1696337	0					
ANR	1697155	Argument	src2w		1696337	8					
ANR	1697156	Identifier	src2w		1696337	0					
ANR	1697157	ReturnStatement	return SLJIT_SUCCESS ;	2208:1:62767:62787	1696337	11	True				
ANR	1697158	Identifier	SLJIT_SUCCESS		1696337	0					
ANR	1697159	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1696337	1					
ANR	1697160	Identifier	sljit_emit_op2		1696337	2					
ANR	1697161	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1696337	3					
ANR	1697162	Parameter	struct sljit_compiler * compiler	2116:49:59174:59204	1696337	0	True				
ANR	1697163	ParameterType	struct sljit_compiler *		1696337	0					
ANR	1697164	Identifier	compiler		1696337	1					
ANR	1697165	Parameter	sljit_si op	2116:82:59207:59217	1696337	1	True				
ANR	1697166	ParameterType	sljit_si		1696337	0					
ANR	1697167	Identifier	op		1696337	1					
ANR	1697168	Parameter	sljit_si dst	2117:1:59221:59232	1696337	2	True				
ANR	1697169	ParameterType	sljit_si		1696337	0					
ANR	1697170	Identifier	dst		1696337	1					
ANR	1697171	Parameter	sljit_sw dstw	2117:15:59235:59247	1696337	3	True				
ANR	1697172	ParameterType	sljit_sw		1696337	0					
ANR	1697173	Identifier	dstw		1696337	1					
ANR	1697174	Parameter	sljit_si src1	2118:1:59251:59263	1696337	4	True				
ANR	1697175	ParameterType	sljit_si		1696337	0					
ANR	1697176	Identifier	src1		1696337	1					
ANR	1697177	Parameter	sljit_sw src1w	2118:16:59266:59279	1696337	5	True				
ANR	1697178	ParameterType	sljit_sw		1696337	0					
ANR	1697179	Identifier	src1w		1696337	1					
ANR	1697180	Parameter	sljit_si src2	2119:1:59283:59295	1696337	6	True				
ANR	1697181	ParameterType	sljit_si		1696337	0					
ANR	1697182	Identifier	src2		1696337	1					
ANR	1697183	Parameter	sljit_sw src2w	2119:16:59298:59311	1696337	7	True				
ANR	1697184	ParameterType	sljit_sw		1696337	0					
ANR	1697185	Identifier	src2w		1696337	1					
ANR	1697186	CFGEntryNode	ENTRY		1696337		True				
ANR	1697187	CFGExitNode	EXIT		1696337		True				
ANR	1697188	Symbol	ADC		1696337						
ANR	1697189	Symbol	ADD		1696337						
ANR	1697190	Symbol	compiler -> flags_saved		1696337						
ANR	1697191	Symbol	ADD_EAX_i32		1696337						
ANR	1697192	Symbol	emit_lea_binary		1696337						
ANR	1697193	Symbol	* compiler		1696337						
ANR	1697194	Symbol	OR_EAX_i32		1696337						
ANR	1697195	Symbol	GET_OPCODE		1696337						
ANR	1697196	Symbol	SLJIT_IMM		1696337						
ANR	1697197	Symbol	SLJIT_KEEP_FLAGS		1696337						
ANR	1697198	Symbol	SLJIT_MUL		1696337						
ANR	1697199	Symbol	SHL		1696337						
ANR	1697200	Symbol	SHR		1696337						
ANR	1697201	Symbol	ADC_r_rm		1696337						
ANR	1697202	Symbol	emit_test_binary		1696337						
ANR	1697203	Symbol	ADD_rm_r		1696337						
ANR	1697204	Symbol	SUB		1696337						
ANR	1697205	Symbol	emit_save_flags		1696337						
ANR	1697206	Symbol	OR_rm_r		1696337						
ANR	1697207	Symbol	XOR_rm_r		1696337						
ANR	1697208	Symbol	check_sljit_emit_op2		1696337						
ANR	1697209	Symbol	emit_non_cum_binary		1696337						
ANR	1697210	Symbol	SUB_rm_r		1696337						
ANR	1697211	Symbol	SBB_rm_r		1696337						
ANR	1697212	Symbol	AND		1696337						
ANR	1697213	Symbol	AND_rm_r		1696337						
ANR	1697214	Symbol	XOR		1696337						
ANR	1697215	Symbol	emit_shift_with_flags		1696337						
ANR	1697216	Symbol	emit_restore_flags		1696337						
ANR	1697217	Symbol	SLJIT_UNLIKELY		1696337						
ANR	1697218	Symbol	emit_cum_binary		1696337						
ANR	1697219	Symbol	XOR_EAX_i32		1696337						
ANR	1697220	Symbol	emit_mul		1696337						
ANR	1697221	Symbol	src1w		1696337						
ANR	1697222	Symbol	dst		1696337						
ANR	1697223	Symbol	SAR		1696337						
ANR	1697224	Symbol	emit_cmp_binary		1696337						
ANR	1697225	Symbol	GET_FLAGS		1696337						
ANR	1697226	Symbol	ADC_EAX_i32		1696337						
ANR	1697227	Symbol	AND_EAX_i32		1696337						
ANR	1697228	Symbol	SBB		1696337						
ANR	1697229	Symbol	ADC_rm_r		1696337						
ANR	1697230	Symbol	compiler		1696337						
ANR	1697231	Symbol	SUB_EAX_i32		1696337						
ANR	1697232	Symbol	SBB_EAX_i32		1696337						
ANR	1697233	Symbol	src2w		1696337						
ANR	1697234	Symbol	op		1696337						
ANR	1697235	Symbol	OR		1696337						
ANR	1697236	Symbol	SUB_r_rm		1696337						
ANR	1697237	Symbol	SLJIT_INT_OP		1696337						
ANR	1697238	Symbol	SLJIT_SUCCESS		1696337						
ANR	1697239	Symbol	ADD_r_rm		1696337						
ANR	1697240	Symbol	OR_r_rm		1696337						
ANR	1697241	Symbol	SLJIT_UNUSED		1696337						
ANR	1697242	Symbol	src1		1696337						
ANR	1697243	Symbol	SBB_r_rm		1696337						
ANR	1697244	Symbol	compiler -> mode32		1696337						
ANR	1697245	Symbol	src2		1696337						
ANR	1697246	Symbol	AND_r_rm		1696337						
ANR	1697247	Symbol	dstw		1696337						
ANR	1697248	Symbol	compiler -> error		1696337						
ANR	1697249	Symbol	XOR_r_rm		1696337						
ANR	1697250	Symbol	SLJIT_ERR_UNSUPPORTED		1696337						
ANR	1697251	Function	sljit_get_register_index	2211:0:62792:63062							
ANR	1697252	FunctionDef	sljit_get_register_index (sljit_si reg)		1697251	0					
ANR	1697253	CompoundStatement		2212:0:62865:63062	1697251	0					
ANR	1697254	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	2213:1:62868:62920	1697251	0	True				
ANR	1697255	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1697251	0					
ANR	1697256	Callee	CHECK_REG_INDEX		1697251	0					
ANR	1697257	Identifier	CHECK_REG_INDEX		1697251	0					
ANR	1697258	ArgumentList	check_sljit_get_register_index ( reg )		1697251	1					
ANR	1697259	Argument	check_sljit_get_register_index ( reg )		1697251	0					
ANR	1697260	CallExpression	check_sljit_get_register_index ( reg )		1697251	0					
ANR	1697261	Callee	check_sljit_get_register_index		1697251	0					
ANR	1697262	Identifier	check_sljit_get_register_index		1697251	0					
ANR	1697263	ArgumentList	reg		1697251	1					
ANR	1697264	Argument	reg		1697251	0					
ANR	1697265	Identifier	reg		1697251	0					
ANR	1697266	IfStatement	if ( reg >= SLJIT_R3 && reg <= SLJIT_R6 )		1697251	1					
ANR	1697267	Condition	reg >= SLJIT_R3 && reg <= SLJIT_R6	2215:5:62984:63017	1697251	0	True				
ANR	1697268	AndExpression	reg >= SLJIT_R3 && reg <= SLJIT_R6		1697251	0		&&			
ANR	1697269	RelationalExpression	reg >= SLJIT_R3		1697251	0		>=			
ANR	1697270	Identifier	reg		1697251	0					
ANR	1697271	Identifier	SLJIT_R3		1697251	1					
ANR	1697272	RelationalExpression	reg <= SLJIT_R6		1697251	1		<=			
ANR	1697273	Identifier	reg		1697251	0					
ANR	1697274	Identifier	SLJIT_R6		1697251	1					
ANR	1697275	ReturnStatement	return - 1 ;	2216:2:63022:63031	1697251	1	True				
ANR	1697276	UnaryOperationExpression	- 1		1697251	0					
ANR	1697277	UnaryOperator	-		1697251	0					
ANR	1697278	PrimaryExpression	1		1697251	1					
ANR	1697279	ReturnStatement	return reg_map [ reg ] ;	2218:1:63041:63060	1697251	2	True				
ANR	1697280	ArrayIndexing	reg_map [ reg ]		1697251	0					
ANR	1697281	Identifier	reg_map		1697251	0					
ANR	1697282	Identifier	reg		1697251	1					
ANR	1697283	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1697251	1					
ANR	1697284	Identifier	sljit_get_register_index		1697251	2					
ANR	1697285	ParameterList	sljit_si reg		1697251	3					
ANR	1697286	Parameter	sljit_si reg	2211:59:62851:62862	1697251	0	True				
ANR	1697287	ParameterType	sljit_si		1697251	0					
ANR	1697288	Identifier	reg		1697251	1					
ANR	1697289	CFGEntryNode	ENTRY		1697251		True				
ANR	1697290	CFGExitNode	EXIT		1697251		True				
ANR	1697291	Symbol	reg		1697251						
ANR	1697292	Symbol	SLJIT_R6		1697251						
ANR	1697293	Symbol	reg_map		1697251						
ANR	1697294	Symbol	SLJIT_R3		1697251						
ANR	1697295	Symbol	* reg_map		1697251						
ANR	1697296	Symbol	* reg		1697251						
ANR	1697297	Symbol	check_sljit_get_register_index		1697251						
ANR	1697298	Function	sljit_get_float_register_index	2221:0:63065:63220							
ANR	1697299	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1697298	0					
ANR	1697300	CompoundStatement		2222:0:63144:63220	1697298	0					
ANR	1697301	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	2223:1:63147:63205	1697298	0	True				
ANR	1697302	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1697298	0					
ANR	1697303	Callee	CHECK_REG_INDEX		1697298	0					
ANR	1697304	Identifier	CHECK_REG_INDEX		1697298	0					
ANR	1697305	ArgumentList	check_sljit_get_float_register_index ( reg )		1697298	1					
ANR	1697306	Argument	check_sljit_get_float_register_index ( reg )		1697298	0					
ANR	1697307	CallExpression	check_sljit_get_float_register_index ( reg )		1697298	0					
ANR	1697308	Callee	check_sljit_get_float_register_index		1697298	0					
ANR	1697309	Identifier	check_sljit_get_float_register_index		1697298	0					
ANR	1697310	ArgumentList	reg		1697298	1					
ANR	1697311	Argument	reg		1697298	0					
ANR	1697312	Identifier	reg		1697298	0					
ANR	1697313	ReturnStatement	return reg ;	2224:1:63208:63218	1697298	1	True				
ANR	1697314	Identifier	reg		1697298	0					
ANR	1697315	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1697298	1					
ANR	1697316	Identifier	sljit_get_float_register_index		1697298	2					
ANR	1697317	ParameterList	sljit_si reg		1697298	3					
ANR	1697318	Parameter	sljit_si reg	2221:65:63130:63141	1697298	0	True				
ANR	1697319	ParameterType	sljit_si		1697298	0					
ANR	1697320	Identifier	reg		1697298	1					
ANR	1697321	CFGEntryNode	ENTRY		1697298		True				
ANR	1697322	CFGExitNode	EXIT		1697298		True				
ANR	1697323	Symbol	reg		1697298						
ANR	1697324	Symbol	check_sljit_get_float_register_index		1697298						
ANR	1697325	Function	sljit_emit_op_custom	2227:0:63223:63597							
ANR	1697326	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1697325	0					
ANR	1697327	CompoundStatement		2229:0:63346:63597	1697325	0					
ANR	1697328	IdentifierDeclStatement	sljit_ub * inst ;	2230:1:63349:63363	1697325	0	True				
ANR	1697329	IdentifierDecl	* inst		1697325	0					
ANR	1697330	IdentifierDeclType	sljit_ub *		1697325	0					
ANR	1697331	Identifier	inst		1697325	1					
ANR	1697332	ExpressionStatement	CHECK_ERROR ( )	2232:1:63367:63380	1697325	1	True				
ANR	1697333	CallExpression	CHECK_ERROR ( )		1697325	0					
ANR	1697334	Callee	CHECK_ERROR		1697325	0					
ANR	1697335	Identifier	CHECK_ERROR		1697325	0					
ANR	1697336	ArgumentList			1697325	1					
ANR	1697337	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	2233:1:63383:63445	1697325	2	True				
ANR	1697338	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1697325	0					
ANR	1697339	Callee	CHECK		1697325	0					
ANR	1697340	Identifier	CHECK		1697325	0					
ANR	1697341	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1697325	1					
ANR	1697342	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1697325	0					
ANR	1697343	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1697325	0					
ANR	1697344	Callee	check_sljit_emit_op_custom		1697325	0					
ANR	1697345	Identifier	check_sljit_emit_op_custom		1697325	0					
ANR	1697346	ArgumentList	compiler		1697325	1					
ANR	1697347	Argument	compiler		1697325	0					
ANR	1697348	Identifier	compiler		1697325	0					
ANR	1697349	Argument	instruction		1697325	1					
ANR	1697350	Identifier	instruction		1697325	0					
ANR	1697351	Argument	size		1697325	2					
ANR	1697352	Identifier	size		1697325	0					
ANR	1697353	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"	2235:1:63449:63497	1697325	3	True				
ANR	1697354	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1697325	0		=			
ANR	1697355	Identifier	inst		1697325	0					
ANR	1697356	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + size )"		1697325	1					
ANR	1697357	CastTarget	sljit_ub *		1697325	0					
ANR	1697358	CallExpression	"ensure_buf ( compiler , 1 + size )"		1697325	1					
ANR	1697359	Callee	ensure_buf		1697325	0					
ANR	1697360	Identifier	ensure_buf		1697325	0					
ANR	1697361	ArgumentList	compiler		1697325	1					
ANR	1697362	Argument	compiler		1697325	0					
ANR	1697363	Identifier	compiler		1697325	0					
ANR	1697364	Argument	1 + size		1697325	1					
ANR	1697365	AdditiveExpression	1 + size		1697325	0		+			
ANR	1697366	PrimaryExpression	1		1697325	0					
ANR	1697367	Identifier	size		1697325	1					
ANR	1697368	ExpressionStatement	FAIL_IF ( ! inst )	2236:1:63500:63514	1697325	4	True				
ANR	1697369	CallExpression	FAIL_IF ( ! inst )		1697325	0					
ANR	1697370	Callee	FAIL_IF		1697325	0					
ANR	1697371	Identifier	FAIL_IF		1697325	0					
ANR	1697372	ArgumentList	! inst		1697325	1					
ANR	1697373	Argument	! inst		1697325	0					
ANR	1697374	UnaryOperationExpression	! inst		1697325	0					
ANR	1697375	UnaryOperator	!		1697325	0					
ANR	1697376	Identifier	inst		1697325	1					
ANR	1697377	ExpressionStatement	INC_SIZE ( size )	2237:1:63517:63531	1697325	5	True				
ANR	1697378	CallExpression	INC_SIZE ( size )		1697325	0					
ANR	1697379	Callee	INC_SIZE		1697325	0					
ANR	1697380	Identifier	INC_SIZE		1697325	0					
ANR	1697381	ArgumentList	size		1697325	1					
ANR	1697382	Argument	size		1697325	0					
ANR	1697383	Identifier	size		1697325	0					
ANR	1697384	ExpressionStatement	"SLJIT_MEMMOVE ( inst , instruction , size )"	2238:1:63534:63572	1697325	6	True				
ANR	1697385	CallExpression	"SLJIT_MEMMOVE ( inst , instruction , size )"		1697325	0					
ANR	1697386	Callee	SLJIT_MEMMOVE		1697325	0					
ANR	1697387	Identifier	SLJIT_MEMMOVE		1697325	0					
ANR	1697388	ArgumentList	inst		1697325	1					
ANR	1697389	Argument	inst		1697325	0					
ANR	1697390	Identifier	inst		1697325	0					
ANR	1697391	Argument	instruction		1697325	1					
ANR	1697392	Identifier	instruction		1697325	0					
ANR	1697393	Argument	size		1697325	2					
ANR	1697394	Identifier	size		1697325	0					
ANR	1697395	ReturnStatement	return SLJIT_SUCCESS ;	2239:1:63575:63595	1697325	7	True				
ANR	1697396	Identifier	SLJIT_SUCCESS		1697325	0					
ANR	1697397	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1697325	1					
ANR	1697398	Identifier	sljit_emit_op_custom		1697325	2					
ANR	1697399	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1697325	3					
ANR	1697400	Parameter	struct sljit_compiler * compiler	2227:55:63278:63308	1697325	0	True				
ANR	1697401	ParameterType	struct sljit_compiler *		1697325	0					
ANR	1697402	Identifier	compiler		1697325	1					
ANR	1697403	Parameter	void * instruction	2228:1:63312:63328	1697325	1	True				
ANR	1697404	ParameterType	void *		1697325	0					
ANR	1697405	Identifier	instruction		1697325	1					
ANR	1697406	Parameter	sljit_si size	2228:20:63331:63343	1697325	2	True				
ANR	1697407	ParameterType	sljit_si		1697325	0					
ANR	1697408	Identifier	size		1697325	1					
ANR	1697409	CFGEntryNode	ENTRY		1697325		True				
ANR	1697410	CFGExitNode	EXIT		1697325		True				
ANR	1697411	Symbol	size		1697325						
ANR	1697412	Symbol	instruction		1697325						
ANR	1697413	Symbol	inst		1697325						
ANR	1697414	Symbol	check_sljit_emit_op_custom		1697325						
ANR	1697415	Symbol	ensure_buf		1697325						
ANR	1697416	Symbol	SLJIT_SUCCESS		1697325						
ANR	1697417	Symbol	compiler		1697325						
ANR	1697418	DeclStmt									
ANR	1697419	Decl							sljit_si	sljit_si [ 3 + ( 4 + 4 ) * 2 ]	sse2_data
ANR	1697420	DeclStmt									
ANR	1697421	Decl							sljit_si	sljit_si *	sse2_buffer
ANR	1697422	Function	init_compiler	2250:0:63936:64276							
ANR	1697423	FunctionDef	init_compiler ()		1697422	0					
ANR	1697424	CompoundStatement		2251:0:63968:64276	1697422	0					
ANR	1697425	ExpressionStatement	sse2_buffer = ( sljit_si * ) ( ( ( sljit_uw ) sse2_data + 15 ) & ~0xf )	2252:1:63971:64031	1697422	0	True				
ANR	1697426	AssignmentExpression	sse2_buffer = ( sljit_si * ) ( ( ( sljit_uw ) sse2_data + 15 ) & ~0xf )		1697422	0		=			
ANR	1697427	Identifier	sse2_buffer		1697422	0					
ANR	1697428	CastExpression	( sljit_si * ) ( ( ( sljit_uw ) sse2_data + 15 ) & ~0xf )		1697422	1					
ANR	1697429	CastTarget	sljit_si *		1697422	0					
ANR	1697430	BitAndExpression	( ( sljit_uw ) sse2_data + 15 ) & ~0xf		1697422	1		&			
ANR	1697431	AdditiveExpression	( sljit_uw ) sse2_data + 15		1697422	0		+			
ANR	1697432	CastExpression	( sljit_uw ) sse2_data		1697422	0					
ANR	1697433	CastTarget	sljit_uw		1697422	0					
ANR	1697434	Identifier	sse2_data		1697422	1					
ANR	1697435	PrimaryExpression	15		1697422	1					
ANR	1697436	Identifier	~0xf		1697422	1					
ANR	1697437	ExpressionStatement	sse2_buffer [ 0 ] = 0x80000000	2254:1:64069:64096	1697422	1	True				
ANR	1697438	AssignmentExpression	sse2_buffer [ 0 ] = 0x80000000		1697422	0		=			
ANR	1697439	ArrayIndexing	sse2_buffer [ 0 ]		1697422	0					
ANR	1697440	Identifier	sse2_buffer		1697422	0					
ANR	1697441	PrimaryExpression	0		1697422	1					
ANR	1697442	PrimaryExpression	0x80000000		1697422	1					
ANR	1697443	ExpressionStatement	sse2_buffer [ 4 ] = 0x7fffffff	2255:1:64099:64126	1697422	2	True				
ANR	1697444	AssignmentExpression	sse2_buffer [ 4 ] = 0x7fffffff		1697422	0		=			
ANR	1697445	ArrayIndexing	sse2_buffer [ 4 ]		1697422	0					
ANR	1697446	Identifier	sse2_buffer		1697422	0					
ANR	1697447	PrimaryExpression	4		1697422	1					
ANR	1697448	PrimaryExpression	0x7fffffff		1697422	1					
ANR	1697449	ExpressionStatement	sse2_buffer [ 8 ] = 0	2257:1:64164:64182	1697422	3	True				
ANR	1697450	AssignmentExpression	sse2_buffer [ 8 ] = 0		1697422	0		=			
ANR	1697451	ArrayIndexing	sse2_buffer [ 8 ]		1697422	0					
ANR	1697452	Identifier	sse2_buffer		1697422	0					
ANR	1697453	PrimaryExpression	8		1697422	1					
ANR	1697454	PrimaryExpression	0		1697422	1					
ANR	1697455	ExpressionStatement	sse2_buffer [ 9 ] = 0x80000000	2258:1:64185:64212	1697422	4	True				
ANR	1697456	AssignmentExpression	sse2_buffer [ 9 ] = 0x80000000		1697422	0		=			
ANR	1697457	ArrayIndexing	sse2_buffer [ 9 ]		1697422	0					
ANR	1697458	Identifier	sse2_buffer		1697422	0					
ANR	1697459	PrimaryExpression	9		1697422	1					
ANR	1697460	PrimaryExpression	0x80000000		1697422	1					
ANR	1697461	ExpressionStatement	sse2_buffer [ 12 ] = 0xffffffff	2259:1:64215:64243	1697422	5	True				
ANR	1697462	AssignmentExpression	sse2_buffer [ 12 ] = 0xffffffff		1697422	0		=			
ANR	1697463	ArrayIndexing	sse2_buffer [ 12 ]		1697422	0					
ANR	1697464	Identifier	sse2_buffer		1697422	0					
ANR	1697465	PrimaryExpression	12		1697422	1					
ANR	1697466	PrimaryExpression	0xffffffff		1697422	1					
ANR	1697467	ExpressionStatement	sse2_buffer [ 13 ] = 0x7fffffff	2260:1:64246:64274	1697422	6	True				
ANR	1697468	AssignmentExpression	sse2_buffer [ 13 ] = 0x7fffffff		1697422	0		=			
ANR	1697469	ArrayIndexing	sse2_buffer [ 13 ]		1697422	0					
ANR	1697470	Identifier	sse2_buffer		1697422	0					
ANR	1697471	PrimaryExpression	13		1697422	1					
ANR	1697472	PrimaryExpression	0x7fffffff		1697422	1					
ANR	1697473	ReturnType	static void		1697422	1					
ANR	1697474	Identifier	init_compiler		1697422	2					
ANR	1697475	ParameterList			1697422	3					
ANR	1697476	CFGEntryNode	ENTRY		1697422		True				
ANR	1697477	CFGExitNode	EXIT		1697422		True				
ANR	1697478	Symbol	sse2_buffer		1697422						
ANR	1697479	Symbol	~0xf		1697422						
ANR	1697480	Symbol	sse2_data		1697422						
ANR	1697481	Symbol	* sse2_buffer		1697422						
ANR	1697482	Function	sljit_is_fpu_available	2263:0:64279:64602							
ANR	1697483	FunctionDef	sljit_is_fpu_available ()		1697482	0					
ANR	1697484	CompoundStatement		2264:0:64342:64602	1697482	0					
ANR	1697485	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	2266:1:64375:64404	1697482	0	True				
ANR	1697486	Identifier	SLJIT_IS_FPU_AVAILABLE		1697482	0					
ANR	1697487	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1697482	1					
ANR	1697488	Identifier	sljit_is_fpu_available		1697482	2					
ANR	1697489	ParameterList			1697482	3					
ANR	1697490	CFGEntryNode	ENTRY		1697482		True				
ANR	1697491	CFGExitNode	EXIT		1697482		True				
ANR	1697492	Symbol	SLJIT_IS_FPU_AVAILABLE		1697482						
ANR	1697493	Function	emit_sse2	2276:0:64605:64961							
ANR	1697494	FunctionDef	"emit_sse2 (struct sljit_compiler * compiler , sljit_ub opcode , sljit_si single , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w)"		1697493	0					
ANR	1697495	CompoundStatement		2278:0:64745:64961	1697493	0					
ANR	1697496	IdentifierDeclStatement	sljit_ub * inst ;	2279:1:64748:64762	1697493	0	True				
ANR	1697497	IdentifierDecl	* inst		1697493	0					
ANR	1697498	IdentifierDeclType	sljit_ub *		1697493	0					
ANR	1697499	Identifier	inst		1697493	1					
ANR	1697500	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"	2281:1:64766:64881	1697493	1	True				
ANR	1697501	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1697493	0		=			
ANR	1697502	Identifier	inst		1697493	0					
ANR	1697503	CallExpression	"emit_x86_instruction ( compiler , 2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1697493	1					
ANR	1697504	Callee	emit_x86_instruction		1697493	0					
ANR	1697505	Identifier	emit_x86_instruction		1697493	0					
ANR	1697506	ArgumentList	compiler		1697493	1					
ANR	1697507	Argument	compiler		1697493	0					
ANR	1697508	Identifier	compiler		1697493	0					
ANR	1697509	Argument	2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2		1697493	1					
ANR	1697510	InclusiveOrExpression	2 | ( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2		1697493	0		|			
ANR	1697511	PrimaryExpression	2		1697493	0					
ANR	1697512	InclusiveOrExpression	( single ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2		1697493	1		|			
ANR	1697513	ConditionalExpression	single ? EX86_PREF_F3 : EX86_PREF_F2		1697493	0					
ANR	1697514	Condition	single		1697493	0					
ANR	1697515	Identifier	single		1697493	0					
ANR	1697516	Identifier	EX86_PREF_F3		1697493	1					
ANR	1697517	Identifier	EX86_PREF_F2		1697493	2					
ANR	1697518	Identifier	EX86_SSE2		1697493	1					
ANR	1697519	Argument	xmm1		1697493	2					
ANR	1697520	Identifier	xmm1		1697493	0					
ANR	1697521	Argument	0		1697493	3					
ANR	1697522	PrimaryExpression	0		1697493	0					
ANR	1697523	Argument	xmm2		1697493	4					
ANR	1697524	Identifier	xmm2		1697493	0					
ANR	1697525	Argument	xmm2w		1697493	5					
ANR	1697526	Identifier	xmm2w		1697493	0					
ANR	1697527	ExpressionStatement	FAIL_IF ( ! inst )	2282:1:64884:64898	1697493	2	True				
ANR	1697528	CallExpression	FAIL_IF ( ! inst )		1697493	0					
ANR	1697529	Callee	FAIL_IF		1697493	0					
ANR	1697530	Identifier	FAIL_IF		1697493	0					
ANR	1697531	ArgumentList	! inst		1697493	1					
ANR	1697532	Argument	! inst		1697493	0					
ANR	1697533	UnaryOperationExpression	! inst		1697493	0					
ANR	1697534	UnaryOperator	!		1697493	0					
ANR	1697535	Identifier	inst		1697493	1					
ANR	1697536	ExpressionStatement	* inst ++ = GROUP_0F	2283:1:64901:64919	1697493	3	True				
ANR	1697537	AssignmentExpression	* inst ++ = GROUP_0F		1697493	0		=			
ANR	1697538	UnaryOperationExpression	* inst ++		1697493	0					
ANR	1697539	UnaryOperator	*		1697493	0					
ANR	1697540	PostIncDecOperationExpression	inst ++		1697493	1					
ANR	1697541	Identifier	inst		1697493	0					
ANR	1697542	IncDec	++		1697493	1					
ANR	1697543	Identifier	GROUP_0F		1697493	1					
ANR	1697544	ExpressionStatement	* inst = opcode	2284:1:64922:64936	1697493	4	True				
ANR	1697545	AssignmentExpression	* inst = opcode		1697493	0		=			
ANR	1697546	UnaryOperationExpression	* inst		1697493	0					
ANR	1697547	UnaryOperator	*		1697493	0					
ANR	1697548	Identifier	inst		1697493	1					
ANR	1697549	Identifier	opcode		1697493	1					
ANR	1697550	ReturnStatement	return SLJIT_SUCCESS ;	2285:1:64939:64959	1697493	5	True				
ANR	1697551	Identifier	SLJIT_SUCCESS		1697493	0					
ANR	1697552	ReturnType	static sljit_si		1697493	1					
ANR	1697553	Identifier	emit_sse2		1697493	2					
ANR	1697554	ParameterList	"struct sljit_compiler * compiler , sljit_ub opcode , sljit_si single , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w"		1697493	3					
ANR	1697555	Parameter	struct sljit_compiler * compiler	2276:26:64631:64661	1697493	0	True				
ANR	1697556	ParameterType	struct sljit_compiler *		1697493	0					
ANR	1697557	Identifier	compiler		1697493	1					
ANR	1697558	Parameter	sljit_ub opcode	2276:59:64664:64678	1697493	1	True				
ANR	1697559	ParameterType	sljit_ub		1697493	0					
ANR	1697560	Identifier	opcode		1697493	1					
ANR	1697561	Parameter	sljit_si single	2277:1:64682:64696	1697493	2	True				
ANR	1697562	ParameterType	sljit_si		1697493	0					
ANR	1697563	Identifier	single		1697493	1					
ANR	1697564	Parameter	sljit_si xmm1	2277:18:64699:64711	1697493	3	True				
ANR	1697565	ParameterType	sljit_si		1697493	0					
ANR	1697566	Identifier	xmm1		1697493	1					
ANR	1697567	Parameter	sljit_si xmm2	2277:33:64714:64726	1697493	4	True				
ANR	1697568	ParameterType	sljit_si		1697493	0					
ANR	1697569	Identifier	xmm2		1697493	1					
ANR	1697570	Parameter	sljit_sw xmm2w	2277:48:64729:64742	1697493	5	True				
ANR	1697571	ParameterType	sljit_sw		1697493	0					
ANR	1697572	Identifier	xmm2w		1697493	1					
ANR	1697573	CFGEntryNode	ENTRY		1697493		True				
ANR	1697574	CFGExitNode	EXIT		1697493		True				
ANR	1697575	Symbol	xmm1		1697493						
ANR	1697576	Symbol	xmm2		1697493						
ANR	1697577	Symbol	emit_x86_instruction		1697493						
ANR	1697578	Symbol	GROUP_0F		1697493						
ANR	1697579	Symbol	* inst		1697493						
ANR	1697580	Symbol	EX86_SSE2		1697493						
ANR	1697581	Symbol	EX86_PREF_F2		1697493						
ANR	1697582	Symbol	EX86_PREF_F3		1697493						
ANR	1697583	Symbol	* inst ++		1697493						
ANR	1697584	Symbol	SLJIT_SUCCESS		1697493						
ANR	1697585	Symbol	opcode		1697493						
ANR	1697586	Symbol	single		1697493						
ANR	1697587	Symbol	xmm2w		1697493						
ANR	1697588	Symbol	inst		1697493						
ANR	1697589	Symbol	compiler		1697493						
ANR	1697590	Function	emit_sse2_logic	2288:0:64964:65315							
ANR	1697591	FunctionDef	"emit_sse2_logic (struct sljit_compiler * compiler , sljit_ub opcode , sljit_si pref66 , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w)"		1697590	0					
ANR	1697592	CompoundStatement		2290:0:65110:65315	1697590	0					
ANR	1697593	IdentifierDeclStatement	sljit_ub * inst ;	2291:1:65113:65127	1697590	0	True				
ANR	1697594	IdentifierDecl	* inst		1697590	0					
ANR	1697595	IdentifierDeclType	sljit_ub *		1697590	0					
ANR	1697596	Identifier	inst		1697590	1					
ANR	1697597	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"	2293:1:65131:65235	1697590	1	True				
ANR	1697598	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1697590	0		=			
ANR	1697599	Identifier	inst		1697590	0					
ANR	1697600	CallExpression	"emit_x86_instruction ( compiler , 2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2 , xmm1 , 0 , xmm2 , xmm2w )"		1697590	1					
ANR	1697601	Callee	emit_x86_instruction		1697590	0					
ANR	1697602	Identifier	emit_x86_instruction		1697590	0					
ANR	1697603	ArgumentList	compiler		1697590	1					
ANR	1697604	Argument	compiler		1697590	0					
ANR	1697605	Identifier	compiler		1697590	0					
ANR	1697606	Argument	2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2		1697590	1					
ANR	1697607	InclusiveOrExpression	2 | ( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2		1697590	0		|			
ANR	1697608	PrimaryExpression	2		1697590	0					
ANR	1697609	InclusiveOrExpression	( pref66 ? EX86_PREF_66 : 0 ) | EX86_SSE2		1697590	1		|			
ANR	1697610	ConditionalExpression	pref66 ? EX86_PREF_66 : 0		1697590	0					
ANR	1697611	Condition	pref66		1697590	0					
ANR	1697612	Identifier	pref66		1697590	0					
ANR	1697613	Identifier	EX86_PREF_66		1697590	1					
ANR	1697614	PrimaryExpression	0		1697590	2					
ANR	1697615	Identifier	EX86_SSE2		1697590	1					
ANR	1697616	Argument	xmm1		1697590	2					
ANR	1697617	Identifier	xmm1		1697590	0					
ANR	1697618	Argument	0		1697590	3					
ANR	1697619	PrimaryExpression	0		1697590	0					
ANR	1697620	Argument	xmm2		1697590	4					
ANR	1697621	Identifier	xmm2		1697590	0					
ANR	1697622	Argument	xmm2w		1697590	5					
ANR	1697623	Identifier	xmm2w		1697590	0					
ANR	1697624	ExpressionStatement	FAIL_IF ( ! inst )	2294:1:65238:65252	1697590	2	True				
ANR	1697625	CallExpression	FAIL_IF ( ! inst )		1697590	0					
ANR	1697626	Callee	FAIL_IF		1697590	0					
ANR	1697627	Identifier	FAIL_IF		1697590	0					
ANR	1697628	ArgumentList	! inst		1697590	1					
ANR	1697629	Argument	! inst		1697590	0					
ANR	1697630	UnaryOperationExpression	! inst		1697590	0					
ANR	1697631	UnaryOperator	!		1697590	0					
ANR	1697632	Identifier	inst		1697590	1					
ANR	1697633	ExpressionStatement	* inst ++ = GROUP_0F	2295:1:65255:65273	1697590	3	True				
ANR	1697634	AssignmentExpression	* inst ++ = GROUP_0F		1697590	0		=			
ANR	1697635	UnaryOperationExpression	* inst ++		1697590	0					
ANR	1697636	UnaryOperator	*		1697590	0					
ANR	1697637	PostIncDecOperationExpression	inst ++		1697590	1					
ANR	1697638	Identifier	inst		1697590	0					
ANR	1697639	IncDec	++		1697590	1					
ANR	1697640	Identifier	GROUP_0F		1697590	1					
ANR	1697641	ExpressionStatement	* inst = opcode	2296:1:65276:65290	1697590	4	True				
ANR	1697642	AssignmentExpression	* inst = opcode		1697590	0		=			
ANR	1697643	UnaryOperationExpression	* inst		1697590	0					
ANR	1697644	UnaryOperator	*		1697590	0					
ANR	1697645	Identifier	inst		1697590	1					
ANR	1697646	Identifier	opcode		1697590	1					
ANR	1697647	ReturnStatement	return SLJIT_SUCCESS ;	2297:1:65293:65313	1697590	5	True				
ANR	1697648	Identifier	SLJIT_SUCCESS		1697590	0					
ANR	1697649	ReturnType	static sljit_si		1697590	1					
ANR	1697650	Identifier	emit_sse2_logic		1697590	2					
ANR	1697651	ParameterList	"struct sljit_compiler * compiler , sljit_ub opcode , sljit_si pref66 , sljit_si xmm1 , sljit_si xmm2 , sljit_sw xmm2w"		1697590	3					
ANR	1697652	Parameter	struct sljit_compiler * compiler	2288:32:64996:65026	1697590	0	True				
ANR	1697653	ParameterType	struct sljit_compiler *		1697590	0					
ANR	1697654	Identifier	compiler		1697590	1					
ANR	1697655	Parameter	sljit_ub opcode	2288:65:65029:65043	1697590	1	True				
ANR	1697656	ParameterType	sljit_ub		1697590	0					
ANR	1697657	Identifier	opcode		1697590	1					
ANR	1697658	Parameter	sljit_si pref66	2289:1:65047:65061	1697590	2	True				
ANR	1697659	ParameterType	sljit_si		1697590	0					
ANR	1697660	Identifier	pref66		1697590	1					
ANR	1697661	Parameter	sljit_si xmm1	2289:18:65064:65076	1697590	3	True				
ANR	1697662	ParameterType	sljit_si		1697590	0					
ANR	1697663	Identifier	xmm1		1697590	1					
ANR	1697664	Parameter	sljit_si xmm2	2289:33:65079:65091	1697590	4	True				
ANR	1697665	ParameterType	sljit_si		1697590	0					
ANR	1697666	Identifier	xmm2		1697590	1					
ANR	1697667	Parameter	sljit_sw xmm2w	2289:48:65094:65107	1697590	5	True				
ANR	1697668	ParameterType	sljit_sw		1697590	0					
ANR	1697669	Identifier	xmm2w		1697590	1					
ANR	1697670	CFGEntryNode	ENTRY		1697590		True				
ANR	1697671	CFGExitNode	EXIT		1697590		True				
ANR	1697672	Symbol	xmm1		1697590						
ANR	1697673	Symbol	xmm2		1697590						
ANR	1697674	Symbol	emit_x86_instruction		1697590						
ANR	1697675	Symbol	GROUP_0F		1697590						
ANR	1697676	Symbol	* inst		1697590						
ANR	1697677	Symbol	EX86_SSE2		1697590						
ANR	1697678	Symbol	* inst ++		1697590						
ANR	1697679	Symbol	SLJIT_SUCCESS		1697590						
ANR	1697680	Symbol	opcode		1697590						
ANR	1697681	Symbol	EX86_PREF_66		1697590						
ANR	1697682	Symbol	xmm2w		1697590						
ANR	1697683	Symbol	pref66		1697590						
ANR	1697684	Symbol	inst		1697590						
ANR	1697685	Symbol	compiler		1697590						
ANR	1697686	Function	emit_sse2_load	2300:0:65318:65523							
ANR	1697687	FunctionDef	"emit_sse2_load (struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_si src , sljit_sw srcw)"		1697686	0					
ANR	1697688	CompoundStatement		2302:0:65456:65523	1697686	0					
ANR	1697689	ReturnStatement	"return emit_sse2 ( compiler , MOVSD_x_xm , single , dst , src , srcw ) ;"	2303:1:65459:65521	1697686	0	True				
ANR	1697690	CallExpression	"emit_sse2 ( compiler , MOVSD_x_xm , single , dst , src , srcw )"		1697686	0					
ANR	1697691	Callee	emit_sse2		1697686	0					
ANR	1697692	Identifier	emit_sse2		1697686	0					
ANR	1697693	ArgumentList	compiler		1697686	1					
ANR	1697694	Argument	compiler		1697686	0					
ANR	1697695	Identifier	compiler		1697686	0					
ANR	1697696	Argument	MOVSD_x_xm		1697686	1					
ANR	1697697	Identifier	MOVSD_x_xm		1697686	0					
ANR	1697698	Argument	single		1697686	2					
ANR	1697699	Identifier	single		1697686	0					
ANR	1697700	Argument	dst		1697686	3					
ANR	1697701	Identifier	dst		1697686	0					
ANR	1697702	Argument	src		1697686	4					
ANR	1697703	Identifier	src		1697686	0					
ANR	1697704	Argument	srcw		1697686	5					
ANR	1697705	Identifier	srcw		1697686	0					
ANR	1697706	ReturnType	static SLJIT_INLINE sljit_si		1697686	1					
ANR	1697707	Identifier	emit_sse2_load		1697686	2					
ANR	1697708	ParameterList	"struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_si src , sljit_sw srcw"		1697686	3					
ANR	1697709	Parameter	struct sljit_compiler * compiler	2300:44:65362:65392	1697686	0	True				
ANR	1697710	ParameterType	struct sljit_compiler *		1697686	0					
ANR	1697711	Identifier	compiler		1697686	1					
ANR	1697712	Parameter	sljit_si single	2301:1:65396:65410	1697686	1	True				
ANR	1697713	ParameterType	sljit_si		1697686	0					
ANR	1697714	Identifier	single		1697686	1					
ANR	1697715	Parameter	sljit_si dst	2301:18:65413:65424	1697686	2	True				
ANR	1697716	ParameterType	sljit_si		1697686	0					
ANR	1697717	Identifier	dst		1697686	1					
ANR	1697718	Parameter	sljit_si src	2301:32:65427:65438	1697686	3	True				
ANR	1697719	ParameterType	sljit_si		1697686	0					
ANR	1697720	Identifier	src		1697686	1					
ANR	1697721	Parameter	sljit_sw srcw	2301:46:65441:65453	1697686	4	True				
ANR	1697722	ParameterType	sljit_sw		1697686	0					
ANR	1697723	Identifier	srcw		1697686	1					
ANR	1697724	CFGEntryNode	ENTRY		1697686		True				
ANR	1697725	CFGExitNode	EXIT		1697686		True				
ANR	1697726	Symbol	single		1697686						
ANR	1697727	Symbol	dst		1697686						
ANR	1697728	Symbol	src		1697686						
ANR	1697729	Symbol	srcw		1697686						
ANR	1697730	Symbol	emit_sse2		1697686						
ANR	1697731	Symbol	compiler		1697686						
ANR	1697732	Symbol	MOVSD_x_xm		1697686						
ANR	1697733	Function	emit_sse2_store	2306:0:65526:65732							
ANR	1697734	FunctionDef	"emit_sse2_store (struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_sw dstw , sljit_si src)"		1697733	0					
ANR	1697735	CompoundStatement		2308:0:65665:65732	1697733	0					
ANR	1697736	ReturnStatement	"return emit_sse2 ( compiler , MOVSD_xm_x , single , src , dst , dstw ) ;"	2309:1:65668:65730	1697733	0	True				
ANR	1697737	CallExpression	"emit_sse2 ( compiler , MOVSD_xm_x , single , src , dst , dstw )"		1697733	0					
ANR	1697738	Callee	emit_sse2		1697733	0					
ANR	1697739	Identifier	emit_sse2		1697733	0					
ANR	1697740	ArgumentList	compiler		1697733	1					
ANR	1697741	Argument	compiler		1697733	0					
ANR	1697742	Identifier	compiler		1697733	0					
ANR	1697743	Argument	MOVSD_xm_x		1697733	1					
ANR	1697744	Identifier	MOVSD_xm_x		1697733	0					
ANR	1697745	Argument	single		1697733	2					
ANR	1697746	Identifier	single		1697733	0					
ANR	1697747	Argument	src		1697733	3					
ANR	1697748	Identifier	src		1697733	0					
ANR	1697749	Argument	dst		1697733	4					
ANR	1697750	Identifier	dst		1697733	0					
ANR	1697751	Argument	dstw		1697733	5					
ANR	1697752	Identifier	dstw		1697733	0					
ANR	1697753	ReturnType	static SLJIT_INLINE sljit_si		1697733	1					
ANR	1697754	Identifier	emit_sse2_store		1697733	2					
ANR	1697755	ParameterList	"struct sljit_compiler * compiler , sljit_si single , sljit_si dst , sljit_sw dstw , sljit_si src"		1697733	3					
ANR	1697756	Parameter	struct sljit_compiler * compiler	2306:45:65571:65601	1697733	0	True				
ANR	1697757	ParameterType	struct sljit_compiler *		1697733	0					
ANR	1697758	Identifier	compiler		1697733	1					
ANR	1697759	Parameter	sljit_si single	2307:1:65605:65619	1697733	1	True				
ANR	1697760	ParameterType	sljit_si		1697733	0					
ANR	1697761	Identifier	single		1697733	1					
ANR	1697762	Parameter	sljit_si dst	2307:18:65622:65633	1697733	2	True				
ANR	1697763	ParameterType	sljit_si		1697733	0					
ANR	1697764	Identifier	dst		1697733	1					
ANR	1697765	Parameter	sljit_sw dstw	2307:32:65636:65648	1697733	3	True				
ANR	1697766	ParameterType	sljit_sw		1697733	0					
ANR	1697767	Identifier	dstw		1697733	1					
ANR	1697768	Parameter	sljit_si src	2307:47:65651:65662	1697733	4	True				
ANR	1697769	ParameterType	sljit_si		1697733	0					
ANR	1697770	Identifier	src		1697733	1					
ANR	1697771	CFGEntryNode	ENTRY		1697733		True				
ANR	1697772	CFGExitNode	EXIT		1697733		True				
ANR	1697773	Symbol	single		1697733						
ANR	1697774	Symbol	dst		1697733						
ANR	1697775	Symbol	MOVSD_xm_x		1697733						
ANR	1697776	Symbol	src		1697733						
ANR	1697777	Symbol	emit_sse2		1697733						
ANR	1697778	Symbol	compiler		1697733						
ANR	1697779	Symbol	dstw		1697733						
ANR	1697780	Function	sljit_emit_fop1_convw_fromd	2312:0:65735:66426							
ANR	1697781	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1697780	0					
ANR	1697782	CompoundStatement		2315:0:65898:66426	1697780	0					
ANR	1697783	IdentifierDeclStatement	sljit_si dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1 ;	2316:1:65901:65951	1697780	0	True				
ANR	1697784	IdentifierDecl	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1697780	0					
ANR	1697785	IdentifierDeclType	sljit_si		1697780	0					
ANR	1697786	Identifier	dst_r		1697780	1					
ANR	1697787	AssignmentExpression	dst_r = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1697780	2		=			
ANR	1697788	Identifier	dst_r		1697780	0					
ANR	1697789	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1697780	1					
ANR	1697790	Condition	SLOW_IS_REG ( dst )		1697780	0					
ANR	1697791	CallExpression	SLOW_IS_REG ( dst )		1697780	0					
ANR	1697792	Callee	SLOW_IS_REG		1697780	0					
ANR	1697793	Identifier	SLOW_IS_REG		1697780	0					
ANR	1697794	ArgumentList	dst		1697780	1					
ANR	1697795	Argument	dst		1697780	0					
ANR	1697796	Identifier	dst		1697780	0					
ANR	1697797	Identifier	dst		1697780	1					
ANR	1697798	Identifier	TMP_REG1		1697780	2					
ANR	1697799	IdentifierDeclStatement	sljit_ub * inst ;	2317:1:65954:65968	1697780	1	True				
ANR	1697800	IdentifierDecl	* inst		1697780	0					
ANR	1697801	IdentifierDeclType	sljit_ub *		1697780	0					
ANR	1697802	Identifier	inst		1697780	1					
ANR	1697803	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVW_FROMD )		1697780	2					
ANR	1697804	Condition	GET_OPCODE ( op ) == SLJIT_CONVW_FROMD	2320:5:66033:66067	1697780	0	True				
ANR	1697805	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVW_FROMD		1697780	0		==			
ANR	1697806	CallExpression	GET_OPCODE ( op )		1697780	0					
ANR	1697807	Callee	GET_OPCODE		1697780	0					
ANR	1697808	Identifier	GET_OPCODE		1697780	0					
ANR	1697809	ArgumentList	op		1697780	1					
ANR	1697810	Argument	op		1697780	0					
ANR	1697811	Identifier	op		1697780	0					
ANR	1697812	Identifier	SLJIT_CONVW_FROMD		1697780	1					
ANR	1697813	ExpressionStatement	compiler -> mode32 = 0	2321:2:66072:66092	1697780	1	True				
ANR	1697814	AssignmentExpression	compiler -> mode32 = 0		1697780	0		=			
ANR	1697815	PtrMemberAccess	compiler -> mode32		1697780	0					
ANR	1697816	Identifier	compiler		1697780	0					
ANR	1697817	Identifier	mode32		1697780	1					
ANR	1697818	PrimaryExpression	0		1697780	1					
ANR	1697819	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2 , dst_r , 0 , src , srcw )"	2324:1:66103:66237	1697780	3	True				
ANR	1697820	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2 , dst_r , 0 , src , srcw )"		1697780	0		=			
ANR	1697821	Identifier	inst		1697780	0					
ANR	1697822	CallExpression	"emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2 , dst_r , 0 , src , srcw )"		1697780	1					
ANR	1697823	Callee	emit_x86_instruction		1697780	0					
ANR	1697824	Identifier	emit_x86_instruction		1697780	0					
ANR	1697825	ArgumentList	compiler		1697780	1					
ANR	1697826	Argument	compiler		1697780	0					
ANR	1697827	Identifier	compiler		1697780	0					
ANR	1697828	Argument	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2		1697780	1					
ANR	1697829	InclusiveOrExpression	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2		1697780	0		|			
ANR	1697830	PrimaryExpression	2		1697780	0					
ANR	1697831	InclusiveOrExpression	( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP2		1697780	1		|			
ANR	1697832	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2		1697780	0					
ANR	1697833	Condition	op & SLJIT_SINGLE_OP		1697780	0					
ANR	1697834	BitAndExpression	op & SLJIT_SINGLE_OP		1697780	0		&			
ANR	1697835	Identifier	op		1697780	0					
ANR	1697836	Identifier	SLJIT_SINGLE_OP		1697780	1					
ANR	1697837	Identifier	EX86_PREF_F3		1697780	1					
ANR	1697838	Identifier	EX86_PREF_F2		1697780	2					
ANR	1697839	Identifier	EX86_SSE2_OP2		1697780	1					
ANR	1697840	Argument	dst_r		1697780	2					
ANR	1697841	Identifier	dst_r		1697780	0					
ANR	1697842	Argument	0		1697780	3					
ANR	1697843	PrimaryExpression	0		1697780	0					
ANR	1697844	Argument	src		1697780	4					
ANR	1697845	Identifier	src		1697780	0					
ANR	1697846	Argument	srcw		1697780	5					
ANR	1697847	Identifier	srcw		1697780	0					
ANR	1697848	ExpressionStatement	FAIL_IF ( ! inst )	2325:1:66240:66254	1697780	4	True				
ANR	1697849	CallExpression	FAIL_IF ( ! inst )		1697780	0					
ANR	1697850	Callee	FAIL_IF		1697780	0					
ANR	1697851	Identifier	FAIL_IF		1697780	0					
ANR	1697852	ArgumentList	! inst		1697780	1					
ANR	1697853	Argument	! inst		1697780	0					
ANR	1697854	UnaryOperationExpression	! inst		1697780	0					
ANR	1697855	UnaryOperator	!		1697780	0					
ANR	1697856	Identifier	inst		1697780	1					
ANR	1697857	ExpressionStatement	* inst ++ = GROUP_0F	2326:1:66257:66275	1697780	5	True				
ANR	1697858	AssignmentExpression	* inst ++ = GROUP_0F		1697780	0		=			
ANR	1697859	UnaryOperationExpression	* inst ++		1697780	0					
ANR	1697860	UnaryOperator	*		1697780	0					
ANR	1697861	PostIncDecOperationExpression	inst ++		1697780	1					
ANR	1697862	Identifier	inst		1697780	0					
ANR	1697863	IncDec	++		1697780	1					
ANR	1697864	Identifier	GROUP_0F		1697780	1					
ANR	1697865	ExpressionStatement	* inst = CVTTSD2SI_r_xm	2327:1:66278:66300	1697780	6	True				
ANR	1697866	AssignmentExpression	* inst = CVTTSD2SI_r_xm		1697780	0		=			
ANR	1697867	UnaryOperationExpression	* inst		1697780	0					
ANR	1697868	UnaryOperator	*		1697780	0					
ANR	1697869	Identifier	inst		1697780	1					
ANR	1697870	Identifier	CVTTSD2SI_r_xm		1697780	1					
ANR	1697871	IfStatement	if ( dst_r == TMP_REG1 && dst != SLJIT_UNUSED )		1697780	7					
ANR	1697872	Condition	dst_r == TMP_REG1 && dst != SLJIT_UNUSED	2329:5:66308:66347	1697780	0	True				
ANR	1697873	AndExpression	dst_r == TMP_REG1 && dst != SLJIT_UNUSED		1697780	0		&&			
ANR	1697874	EqualityExpression	dst_r == TMP_REG1		1697780	0		==			
ANR	1697875	Identifier	dst_r		1697780	0					
ANR	1697876	Identifier	TMP_REG1		1697780	1					
ANR	1697877	EqualityExpression	dst != SLJIT_UNUSED		1697780	1		!=			
ANR	1697878	Identifier	dst		1697780	0					
ANR	1697879	Identifier	SLJIT_UNUSED		1697780	1					
ANR	1697880	ReturnStatement	"return emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) ;"	2330:2:66352:66401	1697780	1	True				
ANR	1697881	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1697780	0					
ANR	1697882	Callee	emit_mov		1697780	0					
ANR	1697883	Identifier	emit_mov		1697780	0					
ANR	1697884	ArgumentList	compiler		1697780	1					
ANR	1697885	Argument	compiler		1697780	0					
ANR	1697886	Identifier	compiler		1697780	0					
ANR	1697887	Argument	dst		1697780	1					
ANR	1697888	Identifier	dst		1697780	0					
ANR	1697889	Argument	dstw		1697780	2					
ANR	1697890	Identifier	dstw		1697780	0					
ANR	1697891	Argument	TMP_REG1		1697780	3					
ANR	1697892	Identifier	TMP_REG1		1697780	0					
ANR	1697893	Argument	0		1697780	4					
ANR	1697894	PrimaryExpression	0		1697780	0					
ANR	1697895	ReturnStatement	return SLJIT_SUCCESS ;	2331:1:66404:66424	1697780	8	True				
ANR	1697896	Identifier	SLJIT_SUCCESS		1697780	0					
ANR	1697897	ReturnType	static SLJIT_INLINE sljit_si		1697780	1					
ANR	1697898	Identifier	sljit_emit_fop1_convw_fromd		1697780	2					
ANR	1697899	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1697780	3					
ANR	1697900	Parameter	struct sljit_compiler * compiler	2312:57:65792:65822	1697780	0	True				
ANR	1697901	ParameterType	struct sljit_compiler *		1697780	0					
ANR	1697902	Identifier	compiler		1697780	1					
ANR	1697903	Parameter	sljit_si op	2312:90:65825:65835	1697780	1	True				
ANR	1697904	ParameterType	sljit_si		1697780	0					
ANR	1697905	Identifier	op		1697780	1					
ANR	1697906	Parameter	sljit_si dst	2313:1:65839:65850	1697780	2	True				
ANR	1697907	ParameterType	sljit_si		1697780	0					
ANR	1697908	Identifier	dst		1697780	1					
ANR	1697909	Parameter	sljit_sw dstw	2313:15:65853:65865	1697780	3	True				
ANR	1697910	ParameterType	sljit_sw		1697780	0					
ANR	1697911	Identifier	dstw		1697780	1					
ANR	1697912	Parameter	sljit_si src	2314:1:65869:65880	1697780	4	True				
ANR	1697913	ParameterType	sljit_si		1697780	0					
ANR	1697914	Identifier	src		1697780	1					
ANR	1697915	Parameter	sljit_sw srcw	2314:15:65883:65895	1697780	5	True				
ANR	1697916	ParameterType	sljit_sw		1697780	0					
ANR	1697917	Identifier	srcw		1697780	1					
ANR	1697918	CFGEntryNode	ENTRY		1697780		True				
ANR	1697919	CFGExitNode	EXIT		1697780		True				
ANR	1697920	Symbol	TMP_REG1		1697780						
ANR	1697921	Symbol	dst		1697780						
ANR	1697922	Symbol	* inst ++		1697780						
ANR	1697923	Symbol	SLOW_IS_REG		1697780						
ANR	1697924	Symbol	* compiler		1697780						
ANR	1697925	Symbol	dst_r		1697780						
ANR	1697926	Symbol	GET_OPCODE		1697780						
ANR	1697927	Symbol	compiler		1697780						
ANR	1697928	Symbol	op		1697780						
ANR	1697929	Symbol	emit_x86_instruction		1697780						
ANR	1697930	Symbol	GROUP_0F		1697780						
ANR	1697931	Symbol	* inst		1697780						
ANR	1697932	Symbol	src		1697780						
ANR	1697933	Symbol	srcw		1697780						
ANR	1697934	Symbol	EX86_PREF_F2		1697780						
ANR	1697935	Symbol	SLJIT_SINGLE_OP		1697780						
ANR	1697936	Symbol	EX86_PREF_F3		1697780						
ANR	1697937	Symbol	SLJIT_SUCCESS		1697780						
ANR	1697938	Symbol	SLJIT_CONVW_FROMD		1697780						
ANR	1697939	Symbol	EX86_SSE2_OP2		1697780						
ANR	1697940	Symbol	emit_mov		1697780						
ANR	1697941	Symbol	SLJIT_UNUSED		1697780						
ANR	1697942	Symbol	inst		1697780						
ANR	1697943	Symbol	compiler -> mode32		1697780						
ANR	1697944	Symbol	dstw		1697780						
ANR	1697945	Symbol	CVTTSD2SI_r_xm		1697780						
ANR	1697946	Function	sljit_emit_fop1_convd_fromw	2334:0:66429:67446							
ANR	1697947	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1697946	0					
ANR	1697948	CompoundStatement		2337:0:66592:67446	1697946	0					
ANR	1697949	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG ;	2338:1:66595:66645	1697946	0	True				
ANR	1697950	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG		1697946	0					
ANR	1697951	IdentifierDeclType	sljit_si		1697946	0					
ANR	1697952	Identifier	dst_r		1697946	1					
ANR	1697953	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG		1697946	2		=			
ANR	1697954	Identifier	dst_r		1697946	0					
ANR	1697955	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG		1697946	1					
ANR	1697956	Condition	FAST_IS_REG ( dst )		1697946	0					
ANR	1697957	CallExpression	FAST_IS_REG ( dst )		1697946	0					
ANR	1697958	Callee	FAST_IS_REG		1697946	0					
ANR	1697959	Identifier	FAST_IS_REG		1697946	0					
ANR	1697960	ArgumentList	dst		1697946	1					
ANR	1697961	Argument	dst		1697946	0					
ANR	1697962	Identifier	dst		1697946	0					
ANR	1697963	Identifier	dst		1697946	1					
ANR	1697964	Identifier	TMP_FREG		1697946	2					
ANR	1697965	IdentifierDeclStatement	sljit_ub * inst ;	2339:1:66648:66662	1697946	1	True				
ANR	1697966	IdentifierDecl	* inst		1697946	0					
ANR	1697967	IdentifierDeclType	sljit_ub *		1697946	0					
ANR	1697968	Identifier	inst		1697946	1					
ANR	1697969	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMW )		1697946	2					
ANR	1697970	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMW	2342:5:66727:66761	1697946	0	True				
ANR	1697971	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMW		1697946	0		==			
ANR	1697972	CallExpression	GET_OPCODE ( op )		1697946	0					
ANR	1697973	Callee	GET_OPCODE		1697946	0					
ANR	1697974	Identifier	GET_OPCODE		1697946	0					
ANR	1697975	ArgumentList	op		1697946	1					
ANR	1697976	Argument	op		1697946	0					
ANR	1697977	Identifier	op		1697946	0					
ANR	1697978	Identifier	SLJIT_CONVD_FROMW		1697946	1					
ANR	1697979	ExpressionStatement	compiler -> mode32 = 0	2343:2:66766:66786	1697946	1	True				
ANR	1697980	AssignmentExpression	compiler -> mode32 = 0		1697946	0		=			
ANR	1697981	PtrMemberAccess	compiler -> mode32		1697946	0					
ANR	1697982	Identifier	compiler		1697946	0					
ANR	1697983	Identifier	mode32		1697946	1					
ANR	1697984	PrimaryExpression	0		1697946	1					
ANR	1697985	IfStatement	if ( src & SLJIT_IMM )		1697946	3					
ANR	1697986	Condition	src & SLJIT_IMM	2346:5:66801:66815	1697946	0	True				
ANR	1697987	BitAndExpression	src & SLJIT_IMM		1697946	0		&			
ANR	1697988	Identifier	src		1697946	0					
ANR	1697989	Identifier	SLJIT_IMM		1697946	1					
ANR	1697990	CompoundStatement		10:22:225:225	1697946	1					
ANR	1697991	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1697946	0					
ANR	1697992	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	2348:6:66883:66917	1697946	0	True				
ANR	1697993	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1697946	0		==			
ANR	1697994	CallExpression	GET_OPCODE ( op )		1697946	0					
ANR	1697995	Callee	GET_OPCODE		1697946	0					
ANR	1697996	Identifier	GET_OPCODE		1697946	0					
ANR	1697997	ArgumentList	op		1697946	1					
ANR	1697998	Argument	op		1697946	0					
ANR	1697999	Identifier	op		1697946	0					
ANR	1698000	Identifier	SLJIT_CONVD_FROMI		1697946	1					
ANR	1698001	ExpressionStatement	srcw = ( sljit_si ) srcw	2349:3:66923:66944	1697946	1	True				
ANR	1698002	AssignmentExpression	srcw = ( sljit_si ) srcw		1697946	0		=			
ANR	1698003	Identifier	srcw		1697946	0					
ANR	1698004	CastExpression	( sljit_si ) srcw		1697946	1					
ANR	1698005	CastTarget	sljit_si		1697946	0					
ANR	1698006	Identifier	srcw		1697946	1					
ANR	1698007	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"	2351:2:66955:66997	1697946	1	True				
ANR	1698008	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , srcw )"		1697946	0					
ANR	1698009	Callee	EMIT_MOV		1697946	0					
ANR	1698010	Identifier	EMIT_MOV		1697946	0					
ANR	1698011	ArgumentList	compiler		1697946	1					
ANR	1698012	Argument	compiler		1697946	0					
ANR	1698013	Identifier	compiler		1697946	0					
ANR	1698014	Argument	TMP_REG1		1697946	1					
ANR	1698015	Identifier	TMP_REG1		1697946	0					
ANR	1698016	Argument	0		1697946	2					
ANR	1698017	PrimaryExpression	0		1697946	0					
ANR	1698018	Argument	src		1697946	3					
ANR	1698019	Identifier	src		1697946	0					
ANR	1698020	Argument	srcw		1697946	4					
ANR	1698021	Identifier	srcw		1697946	0					
ANR	1698022	ExpressionStatement	src = TMP_REG1	2352:2:67001:67015	1697946	2	True				
ANR	1698023	AssignmentExpression	src = TMP_REG1		1697946	0		=			
ANR	1698024	Identifier	src		1697946	0					
ANR	1698025	Identifier	TMP_REG1		1697946	1					
ANR	1698026	ExpressionStatement	srcw = 0	2353:2:67019:67027	1697946	3	True				
ANR	1698027	AssignmentExpression	srcw = 0		1697946	0		=			
ANR	1698028	Identifier	srcw		1697946	0					
ANR	1698029	PrimaryExpression	0		1697946	1					
ANR	1698030	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1 , dst_r , 0 , src , srcw )"	2356:1:67034:67168	1697946	4	True				
ANR	1698031	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1 , dst_r , 0 , src , srcw )"		1697946	0		=			
ANR	1698032	Identifier	inst		1697946	0					
ANR	1698033	CallExpression	"emit_x86_instruction ( compiler , 2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1 , dst_r , 0 , src , srcw )"		1697946	1					
ANR	1698034	Callee	emit_x86_instruction		1697946	0					
ANR	1698035	Identifier	emit_x86_instruction		1697946	0					
ANR	1698036	ArgumentList	compiler		1697946	1					
ANR	1698037	Argument	compiler		1697946	0					
ANR	1698038	Identifier	compiler		1697946	0					
ANR	1698039	Argument	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1		1697946	1					
ANR	1698040	InclusiveOrExpression	2 | ( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1		1697946	0		|			
ANR	1698041	PrimaryExpression	2		1697946	0					
ANR	1698042	InclusiveOrExpression	( ( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2 ) | EX86_SSE2_OP1		1697946	1		|			
ANR	1698043	ConditionalExpression	( op & SLJIT_SINGLE_OP ) ? EX86_PREF_F3 : EX86_PREF_F2		1697946	0					
ANR	1698044	Condition	op & SLJIT_SINGLE_OP		1697946	0					
ANR	1698045	BitAndExpression	op & SLJIT_SINGLE_OP		1697946	0		&			
ANR	1698046	Identifier	op		1697946	0					
ANR	1698047	Identifier	SLJIT_SINGLE_OP		1697946	1					
ANR	1698048	Identifier	EX86_PREF_F3		1697946	1					
ANR	1698049	Identifier	EX86_PREF_F2		1697946	2					
ANR	1698050	Identifier	EX86_SSE2_OP1		1697946	1					
ANR	1698051	Argument	dst_r		1697946	2					
ANR	1698052	Identifier	dst_r		1697946	0					
ANR	1698053	Argument	0		1697946	3					
ANR	1698054	PrimaryExpression	0		1697946	0					
ANR	1698055	Argument	src		1697946	4					
ANR	1698056	Identifier	src		1697946	0					
ANR	1698057	Argument	srcw		1697946	5					
ANR	1698058	Identifier	srcw		1697946	0					
ANR	1698059	ExpressionStatement	FAIL_IF ( ! inst )	2357:1:67171:67185	1697946	5	True				
ANR	1698060	CallExpression	FAIL_IF ( ! inst )		1697946	0					
ANR	1698061	Callee	FAIL_IF		1697946	0					
ANR	1698062	Identifier	FAIL_IF		1697946	0					
ANR	1698063	ArgumentList	! inst		1697946	1					
ANR	1698064	Argument	! inst		1697946	0					
ANR	1698065	UnaryOperationExpression	! inst		1697946	0					
ANR	1698066	UnaryOperator	!		1697946	0					
ANR	1698067	Identifier	inst		1697946	1					
ANR	1698068	ExpressionStatement	* inst ++ = GROUP_0F	2358:1:67188:67206	1697946	6	True				
ANR	1698069	AssignmentExpression	* inst ++ = GROUP_0F		1697946	0		=			
ANR	1698070	UnaryOperationExpression	* inst ++		1697946	0					
ANR	1698071	UnaryOperator	*		1697946	0					
ANR	1698072	PostIncDecOperationExpression	inst ++		1697946	1					
ANR	1698073	Identifier	inst		1697946	0					
ANR	1698074	IncDec	++		1697946	1					
ANR	1698075	Identifier	GROUP_0F		1697946	1					
ANR	1698076	ExpressionStatement	* inst = CVTSI2SD_x_rm	2359:1:67209:67230	1697946	7	True				
ANR	1698077	AssignmentExpression	* inst = CVTSI2SD_x_rm		1697946	0		=			
ANR	1698078	UnaryOperationExpression	* inst		1697946	0					
ANR	1698079	UnaryOperator	*		1697946	0					
ANR	1698080	Identifier	inst		1697946	1					
ANR	1698081	Identifier	CVTSI2SD_x_rm		1697946	1					
ANR	1698082	ExpressionStatement	compiler -> mode32 = 1	2362:1:67291:67311	1697946	8	True				
ANR	1698083	AssignmentExpression	compiler -> mode32 = 1		1697946	0		=			
ANR	1698084	PtrMemberAccess	compiler -> mode32		1697946	0					
ANR	1698085	Identifier	compiler		1697946	0					
ANR	1698086	Identifier	mode32		1697946	1					
ANR	1698087	PrimaryExpression	1		1697946	1					
ANR	1698088	IfStatement	if ( dst_r == TMP_FREG )		1697946	9					
ANR	1698089	Condition	dst_r == TMP_FREG	2364:5:67325:67341	1697946	0	True				
ANR	1698090	EqualityExpression	dst_r == TMP_FREG		1697946	0		==			
ANR	1698091	Identifier	dst_r		1697946	0					
ANR	1698092	Identifier	TMP_FREG		1697946	1					
ANR	1698093	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2365:2:67346:67421	1697946	1	True				
ANR	1698094	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1697946	0					
ANR	1698095	Callee	emit_sse2_store		1697946	0					
ANR	1698096	Identifier	emit_sse2_store		1697946	0					
ANR	1698097	ArgumentList	compiler		1697946	1					
ANR	1698098	Argument	compiler		1697946	0					
ANR	1698099	Identifier	compiler		1697946	0					
ANR	1698100	Argument	op & SLJIT_SINGLE_OP		1697946	1					
ANR	1698101	BitAndExpression	op & SLJIT_SINGLE_OP		1697946	0		&			
ANR	1698102	Identifier	op		1697946	0					
ANR	1698103	Identifier	SLJIT_SINGLE_OP		1697946	1					
ANR	1698104	Argument	dst		1697946	2					
ANR	1698105	Identifier	dst		1697946	0					
ANR	1698106	Argument	dstw		1697946	3					
ANR	1698107	Identifier	dstw		1697946	0					
ANR	1698108	Argument	TMP_FREG		1697946	4					
ANR	1698109	Identifier	TMP_FREG		1697946	0					
ANR	1698110	ReturnStatement	return SLJIT_SUCCESS ;	2366:1:67424:67444	1697946	10	True				
ANR	1698111	Identifier	SLJIT_SUCCESS		1697946	0					
ANR	1698112	ReturnType	static SLJIT_INLINE sljit_si		1697946	1					
ANR	1698113	Identifier	sljit_emit_fop1_convd_fromw		1697946	2					
ANR	1698114	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1697946	3					
ANR	1698115	Parameter	struct sljit_compiler * compiler	2334:57:66486:66516	1697946	0	True				
ANR	1698116	ParameterType	struct sljit_compiler *		1697946	0					
ANR	1698117	Identifier	compiler		1697946	1					
ANR	1698118	Parameter	sljit_si op	2334:90:66519:66529	1697946	1	True				
ANR	1698119	ParameterType	sljit_si		1697946	0					
ANR	1698120	Identifier	op		1697946	1					
ANR	1698121	Parameter	sljit_si dst	2335:1:66533:66544	1697946	2	True				
ANR	1698122	ParameterType	sljit_si		1697946	0					
ANR	1698123	Identifier	dst		1697946	1					
ANR	1698124	Parameter	sljit_sw dstw	2335:15:66547:66559	1697946	3	True				
ANR	1698125	ParameterType	sljit_sw		1697946	0					
ANR	1698126	Identifier	dstw		1697946	1					
ANR	1698127	Parameter	sljit_si src	2336:1:66563:66574	1697946	4	True				
ANR	1698128	ParameterType	sljit_si		1697946	0					
ANR	1698129	Identifier	src		1697946	1					
ANR	1698130	Parameter	sljit_sw srcw	2336:15:66577:66589	1697946	5	True				
ANR	1698131	ParameterType	sljit_sw		1697946	0					
ANR	1698132	Identifier	srcw		1697946	1					
ANR	1698133	CFGEntryNode	ENTRY		1697946		True				
ANR	1698134	CFGExitNode	EXIT		1697946		True				
ANR	1698135	Symbol	TMP_REG1		1697946						
ANR	1698136	Symbol	dst		1697946						
ANR	1698137	Symbol	SLJIT_CONVD_FROMW		1697946						
ANR	1698138	Symbol	CVTSI2SD_x_rm		1697946						
ANR	1698139	Symbol	* inst ++		1697946						
ANR	1698140	Symbol	* compiler		1697946						
ANR	1698141	Symbol	dst_r		1697946						
ANR	1698142	Symbol	GET_OPCODE		1697946						
ANR	1698143	Symbol	SLJIT_IMM		1697946						
ANR	1698144	Symbol	SLJIT_CONVD_FROMI		1697946						
ANR	1698145	Symbol	emit_sse2_store		1697946						
ANR	1698146	Symbol	compiler		1697946						
ANR	1698147	Symbol	op		1697946						
ANR	1698148	Symbol	emit_x86_instruction		1697946						
ANR	1698149	Symbol	GROUP_0F		1697946						
ANR	1698150	Symbol	FAST_IS_REG		1697946						
ANR	1698151	Symbol	* inst		1697946						
ANR	1698152	Symbol	src		1697946						
ANR	1698153	Symbol	srcw		1697946						
ANR	1698154	Symbol	EX86_PREF_F2		1697946						
ANR	1698155	Symbol	EX86_PREF_F3		1697946						
ANR	1698156	Symbol	SLJIT_SINGLE_OP		1697946						
ANR	1698157	Symbol	SLJIT_SUCCESS		1697946						
ANR	1698158	Symbol	EX86_SSE2_OP1		1697946						
ANR	1698159	Symbol	TMP_FREG		1697946						
ANR	1698160	Symbol	inst		1697946						
ANR	1698161	Symbol	compiler -> mode32		1697946						
ANR	1698162	Symbol	dstw		1697946						
ANR	1698163	Function	sljit_emit_fop1_cmp	2369:0:67449:67862							
ANR	1698164	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1698163	0					
ANR	1698165	CompoundStatement		2372:0:67608:67862	1698163	0					
ANR	1698166	ExpressionStatement	compiler -> flags_saved = 0	2373:1:67611:67636	1698163	0	True				
ANR	1698167	AssignmentExpression	compiler -> flags_saved = 0		1698163	0		=			
ANR	1698168	PtrMemberAccess	compiler -> flags_saved		1698163	0					
ANR	1698169	Identifier	compiler		1698163	0					
ANR	1698170	Identifier	flags_saved		1698163	1					
ANR	1698171	PrimaryExpression	0		1698163	1					
ANR	1698172	IfStatement	if ( ! FAST_IS_REG ( src1 ) )		1698163	1					
ANR	1698173	Condition	! FAST_IS_REG ( src1 )	2374:5:67643:67660	1698163	0	True				
ANR	1698174	UnaryOperationExpression	! FAST_IS_REG ( src1 )		1698163	0					
ANR	1698175	UnaryOperator	!		1698163	0					
ANR	1698176	CallExpression	FAST_IS_REG ( src1 )		1698163	1					
ANR	1698177	Callee	FAST_IS_REG		1698163	0					
ANR	1698178	Identifier	FAST_IS_REG		1698163	0					
ANR	1698179	ArgumentList	src1		1698163	1					
ANR	1698180	Argument	src1		1698163	0					
ANR	1698181	Identifier	src1		1698163	0					
ANR	1698182	CompoundStatement		3:25:54:54	1698163	1					
ANR	1698183	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"	2375:2:67667:67745	1698163	0	True				
ANR	1698184	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"		1698163	0					
ANR	1698185	Callee	FAIL_IF		1698163	0					
ANR	1698186	Identifier	FAIL_IF		1698163	0					
ANR	1698187	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698163	1					
ANR	1698188	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698163	0					
ANR	1698189	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698163	0					
ANR	1698190	Callee	emit_sse2_load		1698163	0					
ANR	1698191	Identifier	emit_sse2_load		1698163	0					
ANR	1698192	ArgumentList	compiler		1698163	1					
ANR	1698193	Argument	compiler		1698163	0					
ANR	1698194	Identifier	compiler		1698163	0					
ANR	1698195	Argument	op & SLJIT_SINGLE_OP		1698163	1					
ANR	1698196	BitAndExpression	op & SLJIT_SINGLE_OP		1698163	0		&			
ANR	1698197	Identifier	op		1698163	0					
ANR	1698198	Identifier	SLJIT_SINGLE_OP		1698163	1					
ANR	1698199	Argument	TMP_FREG		1698163	2					
ANR	1698200	Identifier	TMP_FREG		1698163	0					
ANR	1698201	Argument	src1		1698163	3					
ANR	1698202	Identifier	src1		1698163	0					
ANR	1698203	Argument	src1w		1698163	4					
ANR	1698204	Identifier	src1w		1698163	0					
ANR	1698205	ExpressionStatement	src1 = TMP_FREG	2376:2:67749:67764	1698163	1	True				
ANR	1698206	AssignmentExpression	src1 = TMP_FREG		1698163	0		=			
ANR	1698207	Identifier	src1		1698163	0					
ANR	1698208	Identifier	TMP_FREG		1698163	1					
ANR	1698209	ReturnStatement	"return emit_sse2_logic ( compiler , UCOMISD_x_xm , ! ( op & SLJIT_SINGLE_OP ) , src1 , src2 , src2w ) ;"	2378:1:67770:67860	1698163	2	True				
ANR	1698210	CallExpression	"emit_sse2_logic ( compiler , UCOMISD_x_xm , ! ( op & SLJIT_SINGLE_OP ) , src1 , src2 , src2w )"		1698163	0					
ANR	1698211	Callee	emit_sse2_logic		1698163	0					
ANR	1698212	Identifier	emit_sse2_logic		1698163	0					
ANR	1698213	ArgumentList	compiler		1698163	1					
ANR	1698214	Argument	compiler		1698163	0					
ANR	1698215	Identifier	compiler		1698163	0					
ANR	1698216	Argument	UCOMISD_x_xm		1698163	1					
ANR	1698217	Identifier	UCOMISD_x_xm		1698163	0					
ANR	1698218	Argument	! ( op & SLJIT_SINGLE_OP )		1698163	2					
ANR	1698219	UnaryOperationExpression	! ( op & SLJIT_SINGLE_OP )		1698163	0					
ANR	1698220	UnaryOperator	!		1698163	0					
ANR	1698221	BitAndExpression	op & SLJIT_SINGLE_OP		1698163	1		&			
ANR	1698222	Identifier	op		1698163	0					
ANR	1698223	Identifier	SLJIT_SINGLE_OP		1698163	1					
ANR	1698224	Argument	src1		1698163	3					
ANR	1698225	Identifier	src1		1698163	0					
ANR	1698226	Argument	src2		1698163	4					
ANR	1698227	Identifier	src2		1698163	0					
ANR	1698228	Argument	src2w		1698163	5					
ANR	1698229	Identifier	src2w		1698163	0					
ANR	1698230	ReturnType	static SLJIT_INLINE sljit_si		1698163	1					
ANR	1698231	Identifier	sljit_emit_fop1_cmp		1698163	2					
ANR	1698232	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1698163	3					
ANR	1698233	Parameter	struct sljit_compiler * compiler	2369:49:67498:67528	1698163	0	True				
ANR	1698234	ParameterType	struct sljit_compiler *		1698163	0					
ANR	1698235	Identifier	compiler		1698163	1					
ANR	1698236	Parameter	sljit_si op	2369:82:67531:67541	1698163	1	True				
ANR	1698237	ParameterType	sljit_si		1698163	0					
ANR	1698238	Identifier	op		1698163	1					
ANR	1698239	Parameter	sljit_si src1	2370:1:67545:67557	1698163	2	True				
ANR	1698240	ParameterType	sljit_si		1698163	0					
ANR	1698241	Identifier	src1		1698163	1					
ANR	1698242	Parameter	sljit_sw src1w	2370:16:67560:67573	1698163	3	True				
ANR	1698243	ParameterType	sljit_sw		1698163	0					
ANR	1698244	Identifier	src1w		1698163	1					
ANR	1698245	Parameter	sljit_si src2	2371:1:67577:67589	1698163	4	True				
ANR	1698246	ParameterType	sljit_si		1698163	0					
ANR	1698247	Identifier	src2		1698163	1					
ANR	1698248	Parameter	sljit_sw src2w	2371:16:67592:67605	1698163	5	True				
ANR	1698249	ParameterType	sljit_sw		1698163	0					
ANR	1698250	Identifier	src2w		1698163	1					
ANR	1698251	CFGEntryNode	ENTRY		1698163		True				
ANR	1698252	CFGExitNode	EXIT		1698163		True				
ANR	1698253	Symbol	src2w		1698163						
ANR	1698254	Symbol	UCOMISD_x_xm		1698163						
ANR	1698255	Symbol	op		1698163						
ANR	1698256	Symbol	src1w		1698163						
ANR	1698257	Symbol	FAST_IS_REG		1698163						
ANR	1698258	Symbol	compiler -> flags_saved		1698163						
ANR	1698259	Symbol	SLJIT_SINGLE_OP		1698163						
ANR	1698260	Symbol	* compiler		1698163						
ANR	1698261	Symbol	emit_sse2_load		1698163						
ANR	1698262	Symbol	TMP_FREG		1698163						
ANR	1698263	Symbol	src1		1698163						
ANR	1698264	Symbol	src2		1698163						
ANR	1698265	Symbol	compiler		1698163						
ANR	1698266	Symbol	emit_sse2_logic		1698163						
ANR	1698267	Function	sljit_emit_fop1	2381:0:67865:70070							
ANR	1698268	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1698267	0					
ANR	1698269	CompoundStatement		2384:0:68021:70070	1698267	0					
ANR	1698270	IdentifierDeclStatement	sljit_si dst_r ;	2385:1:68024:68038	1698267	0	True				
ANR	1698271	IdentifierDecl	dst_r		1698267	0					
ANR	1698272	IdentifierDeclType	sljit_si		1698267	0					
ANR	1698273	Identifier	dst_r		1698267	1					
ANR	1698274	ExpressionStatement	compiler -> mode32 = 1	2388:1:68099:68119	1698267	1	True				
ANR	1698275	AssignmentExpression	compiler -> mode32 = 1		1698267	0		=			
ANR	1698276	PtrMemberAccess	compiler -> mode32		1698267	0					
ANR	1698277	Identifier	compiler		1698267	0					
ANR	1698278	Identifier	mode32		1698267	1					
ANR	1698279	PrimaryExpression	1		1698267	1					
ANR	1698280	ExpressionStatement	CHECK_ERROR ( )	2391:1:68130:68143	1698267	2	True				
ANR	1698281	CallExpression	CHECK_ERROR ( )		1698267	0					
ANR	1698282	Callee	CHECK_ERROR		1698267	0					
ANR	1698283	Identifier	CHECK_ERROR		1698267	0					
ANR	1698284	ArgumentList			1698267	1					
ANR	1698285	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	2392:1:68146:68215	1698267	3	True				
ANR	1698286	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1698267	0					
ANR	1698287	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1698267	0					
ANR	1698288	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1698267	0					
ANR	1698289	ArgumentList	compiler		1698267	1					
ANR	1698290	Argument	compiler		1698267	0					
ANR	1698291	Identifier	compiler		1698267	0					
ANR	1698292	Argument	op		1698267	1					
ANR	1698293	Identifier	op		1698267	0					
ANR	1698294	Argument	dst		1698267	2					
ANR	1698295	Identifier	dst		1698267	0					
ANR	1698296	Argument	dstw		1698267	3					
ANR	1698297	Identifier	dstw		1698267	0					
ANR	1698298	Argument	src		1698267	4					
ANR	1698299	Identifier	src		1698267	0					
ANR	1698300	Argument	srcw		1698267	5					
ANR	1698301	Identifier	srcw		1698267	0					
ANR	1698302	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_DMOV )		1698267	4					
ANR	1698303	Condition	GET_OPCODE ( op ) == SLJIT_DMOV	2394:5:68223:68250	1698267	0	True				
ANR	1698304	EqualityExpression	GET_OPCODE ( op ) == SLJIT_DMOV		1698267	0		==			
ANR	1698305	CallExpression	GET_OPCODE ( op )		1698267	0					
ANR	1698306	Callee	GET_OPCODE		1698267	0					
ANR	1698307	Identifier	GET_OPCODE		1698267	0					
ANR	1698308	ArgumentList	op		1698267	1					
ANR	1698309	Argument	op		1698267	0					
ANR	1698310	Identifier	op		1698267	0					
ANR	1698311	Identifier	SLJIT_DMOV		1698267	1					
ANR	1698312	CompoundStatement		11:35:231:231	1698267	1					
ANR	1698313	IfStatement	if ( FAST_IS_REG ( dst ) )		1698267	0					
ANR	1698314	Condition	FAST_IS_REG ( dst )	2395:6:68261:68276	1698267	0	True				
ANR	1698315	CallExpression	FAST_IS_REG ( dst )		1698267	0					
ANR	1698316	Callee	FAST_IS_REG		1698267	0					
ANR	1698317	Identifier	FAST_IS_REG		1698267	0					
ANR	1698318	ArgumentList	dst		1698267	1					
ANR	1698319	Argument	dst		1698267	0					
ANR	1698320	Identifier	dst		1698267	0					
ANR	1698321	ReturnStatement	"return emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst , src , srcw ) ;"	2396:3:68282:68351	1698267	1	True				
ANR	1698322	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst , src , srcw )"		1698267	0					
ANR	1698323	Callee	emit_sse2_load		1698267	0					
ANR	1698324	Identifier	emit_sse2_load		1698267	0					
ANR	1698325	ArgumentList	compiler		1698267	1					
ANR	1698326	Argument	compiler		1698267	0					
ANR	1698327	Identifier	compiler		1698267	0					
ANR	1698328	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698329	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698330	Identifier	op		1698267	0					
ANR	1698331	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698332	Argument	dst		1698267	2					
ANR	1698333	Identifier	dst		1698267	0					
ANR	1698334	Argument	src		1698267	3					
ANR	1698335	Identifier	src		1698267	0					
ANR	1698336	Argument	srcw		1698267	4					
ANR	1698337	Identifier	srcw		1698267	0					
ANR	1698338	IfStatement	if ( FAST_IS_REG ( src ) )		1698267	1					
ANR	1698339	Condition	FAST_IS_REG ( src )	2397:6:68359:68374	1698267	0	True				
ANR	1698340	CallExpression	FAST_IS_REG ( src )		1698267	0					
ANR	1698341	Callee	FAST_IS_REG		1698267	0					
ANR	1698342	Identifier	FAST_IS_REG		1698267	0					
ANR	1698343	ArgumentList	src		1698267	1					
ANR	1698344	Argument	src		1698267	0					
ANR	1698345	Identifier	src		1698267	0					
ANR	1698346	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , src ) ;"	2398:3:68380:68450	1698267	1	True				
ANR	1698347	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , src )"		1698267	0					
ANR	1698348	Callee	emit_sse2_store		1698267	0					
ANR	1698349	Identifier	emit_sse2_store		1698267	0					
ANR	1698350	ArgumentList	compiler		1698267	1					
ANR	1698351	Argument	compiler		1698267	0					
ANR	1698352	Identifier	compiler		1698267	0					
ANR	1698353	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698354	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698355	Identifier	op		1698267	0					
ANR	1698356	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698357	Argument	dst		1698267	2					
ANR	1698358	Identifier	dst		1698267	0					
ANR	1698359	Argument	dstw		1698267	3					
ANR	1698360	Identifier	dstw		1698267	0					
ANR	1698361	Argument	src		1698267	4					
ANR	1698362	Identifier	src		1698267	0					
ANR	1698363	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw ) )"	2399:2:68454:68530	1698267	2	True				
ANR	1698364	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw ) )"		1698267	0					
ANR	1698365	Callee	FAIL_IF		1698267	0					
ANR	1698366	Identifier	FAIL_IF		1698267	0					
ANR	1698367	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw )"		1698267	1					
ANR	1698368	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw )"		1698267	0					
ANR	1698369	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src , srcw )"		1698267	0					
ANR	1698370	Callee	emit_sse2_load		1698267	0					
ANR	1698371	Identifier	emit_sse2_load		1698267	0					
ANR	1698372	ArgumentList	compiler		1698267	1					
ANR	1698373	Argument	compiler		1698267	0					
ANR	1698374	Identifier	compiler		1698267	0					
ANR	1698375	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698376	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698377	Identifier	op		1698267	0					
ANR	1698378	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698379	Argument	TMP_FREG		1698267	2					
ANR	1698380	Identifier	TMP_FREG		1698267	0					
ANR	1698381	Argument	src		1698267	3					
ANR	1698382	Identifier	src		1698267	0					
ANR	1698383	Argument	srcw		1698267	4					
ANR	1698384	Identifier	srcw		1698267	0					
ANR	1698385	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2400:2:68534:68609	1698267	3	True				
ANR	1698386	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1698267	0					
ANR	1698387	Callee	emit_sse2_store		1698267	0					
ANR	1698388	Identifier	emit_sse2_store		1698267	0					
ANR	1698389	ArgumentList	compiler		1698267	1					
ANR	1698390	Argument	compiler		1698267	0					
ANR	1698391	Identifier	compiler		1698267	0					
ANR	1698392	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698393	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698394	Identifier	op		1698267	0					
ANR	1698395	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698396	Argument	dst		1698267	2					
ANR	1698397	Identifier	dst		1698267	0					
ANR	1698398	Argument	dstw		1698267	3					
ANR	1698399	Identifier	dstw		1698267	0					
ANR	1698400	Argument	TMP_FREG		1698267	4					
ANR	1698401	Identifier	TMP_FREG		1698267	0					
ANR	1698402	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS )		1698267	5					
ANR	1698403	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS	2403:5:68620:68654	1698267	0	True				
ANR	1698404	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1698267	0		==			
ANR	1698405	CallExpression	GET_OPCODE ( op )		1698267	0					
ANR	1698406	Callee	GET_OPCODE		1698267	0					
ANR	1698407	Identifier	GET_OPCODE		1698267	0					
ANR	1698408	ArgumentList	op		1698267	1					
ANR	1698409	Argument	op		1698267	0					
ANR	1698410	Identifier	op		1698267	0					
ANR	1698411	Identifier	SLJIT_CONVD_FROMS		1698267	1					
ANR	1698412	CompoundStatement		20:42:635:635	1698267	1					
ANR	1698413	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG	2404:2:68661:68702	1698267	0	True				
ANR	1698414	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG		1698267	0		=			
ANR	1698415	Identifier	dst_r		1698267	0					
ANR	1698416	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG		1698267	1					
ANR	1698417	Condition	FAST_IS_REG ( dst )		1698267	0					
ANR	1698418	CallExpression	FAST_IS_REG ( dst )		1698267	0					
ANR	1698419	Callee	FAST_IS_REG		1698267	0					
ANR	1698420	Identifier	FAST_IS_REG		1698267	0					
ANR	1698421	ArgumentList	dst		1698267	1					
ANR	1698422	Argument	dst		1698267	0					
ANR	1698423	Identifier	dst		1698267	0					
ANR	1698424	Identifier	dst		1698267	1					
ANR	1698425	Identifier	TMP_FREG		1698267	2					
ANR	1698426	IfStatement	if ( FAST_IS_REG ( src ) )		1698267	1					
ANR	1698427	Condition	FAST_IS_REG ( src )	2405:6:68710:68725	1698267	0	True				
ANR	1698428	CallExpression	FAST_IS_REG ( src )		1698267	0					
ANR	1698429	Callee	FAST_IS_REG		1698267	0					
ANR	1698430	Identifier	FAST_IS_REG		1698267	0					
ANR	1698431	ArgumentList	src		1698267	1					
ANR	1698432	Argument	src		1698267	0					
ANR	1698433	Identifier	src		1698267	0					
ANR	1698434	CompoundStatement		22:24:706:706	1698267	1					
ANR	1698435	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 ) )"	2409:3:68895:68979	1698267	0	True				
ANR	1698436	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 ) )"		1698267	0					
ANR	1698437	Callee	FAIL_IF		1698267	0					
ANR	1698438	Identifier	FAIL_IF		1698267	0					
ANR	1698439	ArgumentList	"emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 )"		1698267	1					
ANR	1698440	Argument	"emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 )"		1698267	0					
ANR	1698441	CallExpression	"emit_sse2_logic ( compiler , UNPCKLPD_x_xm , op & SLJIT_SINGLE_OP , src , src , 0 )"		1698267	0					
ANR	1698442	Callee	emit_sse2_logic		1698267	0					
ANR	1698443	Identifier	emit_sse2_logic		1698267	0					
ANR	1698444	ArgumentList	compiler		1698267	1					
ANR	1698445	Argument	compiler		1698267	0					
ANR	1698446	Identifier	compiler		1698267	0					
ANR	1698447	Argument	UNPCKLPD_x_xm		1698267	1					
ANR	1698448	Identifier	UNPCKLPD_x_xm		1698267	0					
ANR	1698449	Argument	op & SLJIT_SINGLE_OP		1698267	2					
ANR	1698450	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698451	Identifier	op		1698267	0					
ANR	1698452	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698453	Argument	src		1698267	3					
ANR	1698454	Identifier	src		1698267	0					
ANR	1698455	Argument	src		1698267	4					
ANR	1698456	Identifier	src		1698267	0					
ANR	1698457	Argument	0		1698267	5					
ANR	1698458	PrimaryExpression	0		1698267	0					
ANR	1698459	ElseStatement	else		1698267	0					
ANR	1698460	CompoundStatement		28:7:970:970	1698267	0					
ANR	1698461	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw ) )"	2412:3:68997:69076	1698267	0	True				
ANR	1698462	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw ) )"		1698267	0					
ANR	1698463	Callee	FAIL_IF		1698267	0					
ANR	1698464	Identifier	FAIL_IF		1698267	0					
ANR	1698465	ArgumentList	"emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw )"		1698267	1					
ANR	1698466	Argument	"emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw )"		1698267	0					
ANR	1698467	CallExpression	"emit_sse2_load ( compiler , ! ( op & SLJIT_SINGLE_OP ) , TMP_FREG , src , srcw )"		1698267	0					
ANR	1698468	Callee	emit_sse2_load		1698267	0					
ANR	1698469	Identifier	emit_sse2_load		1698267	0					
ANR	1698470	ArgumentList	compiler		1698267	1					
ANR	1698471	Argument	compiler		1698267	0					
ANR	1698472	Identifier	compiler		1698267	0					
ANR	1698473	Argument	! ( op & SLJIT_SINGLE_OP )		1698267	1					
ANR	1698474	UnaryOperationExpression	! ( op & SLJIT_SINGLE_OP )		1698267	0					
ANR	1698475	UnaryOperator	!		1698267	0					
ANR	1698476	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	1		&			
ANR	1698477	Identifier	op		1698267	0					
ANR	1698478	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698479	Argument	TMP_FREG		1698267	2					
ANR	1698480	Identifier	TMP_FREG		1698267	0					
ANR	1698481	Argument	src		1698267	3					
ANR	1698482	Identifier	src		1698267	0					
ANR	1698483	Argument	srcw		1698267	4					
ANR	1698484	Identifier	srcw		1698267	0					
ANR	1698485	ExpressionStatement	src = TMP_FREG	2413:3:69081:69095	1698267	1	True				
ANR	1698486	AssignmentExpression	src = TMP_FREG		1698267	0		=			
ANR	1698487	Identifier	src		1698267	0					
ANR	1698488	Identifier	TMP_FREG		1698267	1					
ANR	1698489	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"	2416:2:69104:69190	1698267	2	True				
ANR	1698490	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1698267	0					
ANR	1698491	Callee	FAIL_IF		1698267	0					
ANR	1698492	Identifier	FAIL_IF		1698267	0					
ANR	1698493	ArgumentList	"emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1698267	1					
ANR	1698494	Argument	"emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1698267	0					
ANR	1698495	CallExpression	"emit_sse2_logic ( compiler , CVTPD2PS_x_xm , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1698267	0					
ANR	1698496	Callee	emit_sse2_logic		1698267	0					
ANR	1698497	Identifier	emit_sse2_logic		1698267	0					
ANR	1698498	ArgumentList	compiler		1698267	1					
ANR	1698499	Argument	compiler		1698267	0					
ANR	1698500	Identifier	compiler		1698267	0					
ANR	1698501	Argument	CVTPD2PS_x_xm		1698267	1					
ANR	1698502	Identifier	CVTPD2PS_x_xm		1698267	0					
ANR	1698503	Argument	op & SLJIT_SINGLE_OP		1698267	2					
ANR	1698504	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698505	Identifier	op		1698267	0					
ANR	1698506	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698507	Argument	dst_r		1698267	3					
ANR	1698508	Identifier	dst_r		1698267	0					
ANR	1698509	Argument	src		1698267	4					
ANR	1698510	Identifier	src		1698267	0					
ANR	1698511	Argument	0		1698267	5					
ANR	1698512	PrimaryExpression	0		1698267	0					
ANR	1698513	IfStatement	if ( dst_r == TMP_FREG )		1698267	3					
ANR	1698514	Condition	dst_r == TMP_FREG	2417:6:69198:69214	1698267	0	True				
ANR	1698515	EqualityExpression	dst_r == TMP_FREG		1698267	0		==			
ANR	1698516	Identifier	dst_r		1698267	0					
ANR	1698517	Identifier	TMP_FREG		1698267	1					
ANR	1698518	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2418:3:69220:69295	1698267	1	True				
ANR	1698519	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1698267	0					
ANR	1698520	Callee	emit_sse2_store		1698267	0					
ANR	1698521	Identifier	emit_sse2_store		1698267	0					
ANR	1698522	ArgumentList	compiler		1698267	1					
ANR	1698523	Argument	compiler		1698267	0					
ANR	1698524	Identifier	compiler		1698267	0					
ANR	1698525	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698526	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698527	Identifier	op		1698267	0					
ANR	1698528	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698529	Argument	dst		1698267	2					
ANR	1698530	Identifier	dst		1698267	0					
ANR	1698531	Argument	dstw		1698267	3					
ANR	1698532	Identifier	dstw		1698267	0					
ANR	1698533	Argument	TMP_FREG		1698267	4					
ANR	1698534	Identifier	TMP_FREG		1698267	0					
ANR	1698535	ReturnStatement	return SLJIT_SUCCESS ;	2419:2:69299:69319	1698267	4	True				
ANR	1698536	Identifier	SLJIT_SUCCESS		1698267	0					
ANR	1698537	IfStatement	if ( SLOW_IS_REG ( dst ) )		1698267	6					
ANR	1698538	Condition	SLOW_IS_REG ( dst )	2422:5:69330:69345	1698267	0	True				
ANR	1698539	CallExpression	SLOW_IS_REG ( dst )		1698267	0					
ANR	1698540	Callee	SLOW_IS_REG		1698267	0					
ANR	1698541	Identifier	SLOW_IS_REG		1698267	0					
ANR	1698542	ArgumentList	dst		1698267	1					
ANR	1698543	Argument	dst		1698267	0					
ANR	1698544	Identifier	dst		1698267	0					
ANR	1698545	CompoundStatement		39:23:1326:1326	1698267	1					
ANR	1698546	ExpressionStatement	dst_r = dst	2423:2:69352:69363	1698267	0	True				
ANR	1698547	AssignmentExpression	dst_r = dst		1698267	0		=			
ANR	1698548	Identifier	dst_r		1698267	0					
ANR	1698549	Identifier	dst		1698267	1					
ANR	1698550	IfStatement	if ( dst != src )		1698267	1					
ANR	1698551	Condition	dst != src	2424:6:69371:69380	1698267	0	True				
ANR	1698552	EqualityExpression	dst != src		1698267	0		!=			
ANR	1698553	Identifier	dst		1698267	0					
ANR	1698554	Identifier	src		1698267	1					
ANR	1698555	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"	2425:3:69386:69459	1698267	1	True				
ANR	1698556	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"		1698267	0					
ANR	1698557	Callee	FAIL_IF		1698267	0					
ANR	1698558	Identifier	FAIL_IF		1698267	0					
ANR	1698559	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1698267	1					
ANR	1698560	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1698267	0					
ANR	1698561	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1698267	0					
ANR	1698562	Callee	emit_sse2_load		1698267	0					
ANR	1698563	Identifier	emit_sse2_load		1698267	0					
ANR	1698564	ArgumentList	compiler		1698267	1					
ANR	1698565	Argument	compiler		1698267	0					
ANR	1698566	Identifier	compiler		1698267	0					
ANR	1698567	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698568	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698569	Identifier	op		1698267	0					
ANR	1698570	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698571	Argument	dst_r		1698267	2					
ANR	1698572	Identifier	dst_r		1698267	0					
ANR	1698573	Argument	src		1698267	3					
ANR	1698574	Identifier	src		1698267	0					
ANR	1698575	Argument	srcw		1698267	4					
ANR	1698576	Identifier	srcw		1698267	0					
ANR	1698577	ElseStatement	else		1698267	0					
ANR	1698578	CompoundStatement		44:6:1448:1448	1698267	0					
ANR	1698579	ExpressionStatement	dst_r = TMP_FREG	2428:2:69474:69490	1698267	0	True				
ANR	1698580	AssignmentExpression	dst_r = TMP_FREG		1698267	0		=			
ANR	1698581	Identifier	dst_r		1698267	0					
ANR	1698582	Identifier	TMP_FREG		1698267	1					
ANR	1698583	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"	2429:2:69494:69567	1698267	1	True				
ANR	1698584	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw ) )"		1698267	0					
ANR	1698585	Callee	FAIL_IF		1698267	0					
ANR	1698586	Identifier	FAIL_IF		1698267	0					
ANR	1698587	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1698267	1					
ANR	1698588	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1698267	0					
ANR	1698589	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src , srcw )"		1698267	0					
ANR	1698590	Callee	emit_sse2_load		1698267	0					
ANR	1698591	Identifier	emit_sse2_load		1698267	0					
ANR	1698592	ArgumentList	compiler		1698267	1					
ANR	1698593	Argument	compiler		1698267	0					
ANR	1698594	Identifier	compiler		1698267	0					
ANR	1698595	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698596	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698597	Identifier	op		1698267	0					
ANR	1698598	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698599	Argument	dst_r		1698267	2					
ANR	1698600	Identifier	dst_r		1698267	0					
ANR	1698601	Argument	src		1698267	3					
ANR	1698602	Identifier	src		1698267	0					
ANR	1698603	Argument	srcw		1698267	4					
ANR	1698604	Identifier	srcw		1698267	0					
ANR	1698605	SwitchStatement	switch ( GET_OPCODE ( op ) )		1698267	7					
ANR	1698606	Condition	GET_OPCODE ( op )	2432:9:69582:69595	1698267	0	True				
ANR	1698607	CallExpression	GET_OPCODE ( op )		1698267	0					
ANR	1698608	Callee	GET_OPCODE		1698267	0					
ANR	1698609	Identifier	GET_OPCODE		1698267	0					
ANR	1698610	ArgumentList	op		1698267	1					
ANR	1698611	Argument	op		1698267	0					
ANR	1698612	Identifier	op		1698267	0					
ANR	1698613	CompoundStatement		49:25:1576:1576	1698267	1					
ANR	1698614	Label	case SLJIT_DNEG :	2433:1:69601:69616	1698267	0	True				
ANR	1698615	Identifier	SLJIT_DNEG		1698267	0					
ANR	1698616	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) ) )"	2434:2:69620:69756	1698267	1	True				
ANR	1698617	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) ) )"		1698267	0					
ANR	1698618	Callee	FAIL_IF		1698267	0					
ANR	1698619	Identifier	FAIL_IF		1698267	0					
ANR	1698620	ArgumentList	"emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) )"		1698267	1					
ANR	1698621	Argument	"emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) )"		1698267	0					
ANR	1698622	CallExpression	"emit_sse2_logic ( compiler , XORPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 ) )"		1698267	0					
ANR	1698623	Callee	emit_sse2_logic		1698267	0					
ANR	1698624	Identifier	emit_sse2_logic		1698267	0					
ANR	1698625	ArgumentList	compiler		1698267	1					
ANR	1698626	Argument	compiler		1698267	0					
ANR	1698627	Identifier	compiler		1698267	0					
ANR	1698628	Argument	XORPD_x_xm		1698267	1					
ANR	1698629	Identifier	XORPD_x_xm		1698267	0					
ANR	1698630	Argument	1		1698267	2					
ANR	1698631	PrimaryExpression	1		1698267	0					
ANR	1698632	Argument	dst_r		1698267	3					
ANR	1698633	Identifier	dst_r		1698267	0					
ANR	1698634	Argument	SLJIT_MEM0 ( )		1698267	4					
ANR	1698635	CallExpression	SLJIT_MEM0 ( )		1698267	0					
ANR	1698636	Callee	SLJIT_MEM0		1698267	0					
ANR	1698637	Identifier	SLJIT_MEM0		1698267	0					
ANR	1698638	ArgumentList			1698267	1					
ANR	1698639	Argument	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 )		1698267	5					
ANR	1698640	CastExpression	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8 )		1698267	0					
ANR	1698641	CastTarget	sljit_sw		1698267	0					
ANR	1698642	ConditionalExpression	op & SLJIT_SINGLE_OP ? sse2_buffer : sse2_buffer + 8		1698267	1					
ANR	1698643	Condition	op & SLJIT_SINGLE_OP		1698267	0					
ANR	1698644	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698645	Identifier	op		1698267	0					
ANR	1698646	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698647	Identifier	sse2_buffer		1698267	1					
ANR	1698648	AdditiveExpression	sse2_buffer + 8		1698267	2		+			
ANR	1698649	Identifier	sse2_buffer		1698267	0					
ANR	1698650	PrimaryExpression	8		1698267	1					
ANR	1698651	BreakStatement	break ;	2435:2:69760:69765	1698267	2	True				
ANR	1698652	Label	case SLJIT_DABS :	2437:1:69769:69784	1698267	3	True				
ANR	1698653	Identifier	SLJIT_DABS		1698267	0					
ANR	1698654	ExpressionStatement	"FAIL_IF ( emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) ) )"	2438:2:69788:69929	1698267	4	True				
ANR	1698655	CallExpression	"FAIL_IF ( emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) ) )"		1698267	0					
ANR	1698656	Callee	FAIL_IF		1698267	0					
ANR	1698657	Identifier	FAIL_IF		1698267	0					
ANR	1698658	ArgumentList	"emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) )"		1698267	1					
ANR	1698659	Argument	"emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) )"		1698267	0					
ANR	1698660	CallExpression	"emit_sse2_logic ( compiler , ANDPD_x_xm , 1 , dst_r , SLJIT_MEM0 ( ) , ( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 ) )"		1698267	0					
ANR	1698661	Callee	emit_sse2_logic		1698267	0					
ANR	1698662	Identifier	emit_sse2_logic		1698267	0					
ANR	1698663	ArgumentList	compiler		1698267	1					
ANR	1698664	Argument	compiler		1698267	0					
ANR	1698665	Identifier	compiler		1698267	0					
ANR	1698666	Argument	ANDPD_x_xm		1698267	1					
ANR	1698667	Identifier	ANDPD_x_xm		1698267	0					
ANR	1698668	Argument	1		1698267	2					
ANR	1698669	PrimaryExpression	1		1698267	0					
ANR	1698670	Argument	dst_r		1698267	3					
ANR	1698671	Identifier	dst_r		1698267	0					
ANR	1698672	Argument	SLJIT_MEM0 ( )		1698267	4					
ANR	1698673	CallExpression	SLJIT_MEM0 ( )		1698267	0					
ANR	1698674	Callee	SLJIT_MEM0		1698267	0					
ANR	1698675	Identifier	SLJIT_MEM0		1698267	0					
ANR	1698676	ArgumentList			1698267	1					
ANR	1698677	Argument	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 )		1698267	5					
ANR	1698678	CastExpression	( sljit_sw ) ( op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12 )		1698267	0					
ANR	1698679	CastTarget	sljit_sw		1698267	0					
ANR	1698680	ConditionalExpression	op & SLJIT_SINGLE_OP ? sse2_buffer + 4 : sse2_buffer + 12		1698267	1					
ANR	1698681	Condition	op & SLJIT_SINGLE_OP		1698267	0					
ANR	1698682	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698683	Identifier	op		1698267	0					
ANR	1698684	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698685	AdditiveExpression	sse2_buffer + 4		1698267	1		+			
ANR	1698686	Identifier	sse2_buffer		1698267	0					
ANR	1698687	PrimaryExpression	4		1698267	1					
ANR	1698688	AdditiveExpression	sse2_buffer + 12		1698267	2		+			
ANR	1698689	Identifier	sse2_buffer		1698267	0					
ANR	1698690	PrimaryExpression	12		1698267	1					
ANR	1698691	BreakStatement	break ;	2439:2:69933:69938	1698267	5	True				
ANR	1698692	IfStatement	if ( dst_r == TMP_FREG )		1698267	8					
ANR	1698693	Condition	dst_r == TMP_FREG	2442:5:69949:69965	1698267	0	True				
ANR	1698694	EqualityExpression	dst_r == TMP_FREG		1698267	0		==			
ANR	1698695	Identifier	dst_r		1698267	0					
ANR	1698696	Identifier	TMP_FREG		1698267	1					
ANR	1698697	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2443:2:69970:70045	1698267	1	True				
ANR	1698698	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1698267	0					
ANR	1698699	Callee	emit_sse2_store		1698267	0					
ANR	1698700	Identifier	emit_sse2_store		1698267	0					
ANR	1698701	ArgumentList	compiler		1698267	1					
ANR	1698702	Argument	compiler		1698267	0					
ANR	1698703	Identifier	compiler		1698267	0					
ANR	1698704	Argument	op & SLJIT_SINGLE_OP		1698267	1					
ANR	1698705	BitAndExpression	op & SLJIT_SINGLE_OP		1698267	0		&			
ANR	1698706	Identifier	op		1698267	0					
ANR	1698707	Identifier	SLJIT_SINGLE_OP		1698267	1					
ANR	1698708	Argument	dst		1698267	2					
ANR	1698709	Identifier	dst		1698267	0					
ANR	1698710	Argument	dstw		1698267	3					
ANR	1698711	Identifier	dstw		1698267	0					
ANR	1698712	Argument	TMP_FREG		1698267	4					
ANR	1698713	Identifier	TMP_FREG		1698267	0					
ANR	1698714	ReturnStatement	return SLJIT_SUCCESS ;	2444:1:70048:70068	1698267	9	True				
ANR	1698715	Identifier	SLJIT_SUCCESS		1698267	0					
ANR	1698716	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1698267	1					
ANR	1698717	Identifier	sljit_emit_fop1		1698267	2					
ANR	1698718	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1698267	3					
ANR	1698719	Parameter	struct sljit_compiler * compiler	2381:50:67915:67945	1698267	0	True				
ANR	1698720	ParameterType	struct sljit_compiler *		1698267	0					
ANR	1698721	Identifier	compiler		1698267	1					
ANR	1698722	Parameter	sljit_si op	2381:83:67948:67958	1698267	1	True				
ANR	1698723	ParameterType	sljit_si		1698267	0					
ANR	1698724	Identifier	op		1698267	1					
ANR	1698725	Parameter	sljit_si dst	2382:1:67962:67973	1698267	2	True				
ANR	1698726	ParameterType	sljit_si		1698267	0					
ANR	1698727	Identifier	dst		1698267	1					
ANR	1698728	Parameter	sljit_sw dstw	2382:15:67976:67988	1698267	3	True				
ANR	1698729	ParameterType	sljit_sw		1698267	0					
ANR	1698730	Identifier	dstw		1698267	1					
ANR	1698731	Parameter	sljit_si src	2383:1:67992:68003	1698267	4	True				
ANR	1698732	ParameterType	sljit_si		1698267	0					
ANR	1698733	Identifier	src		1698267	1					
ANR	1698734	Parameter	sljit_sw srcw	2383:15:68006:68018	1698267	5	True				
ANR	1698735	ParameterType	sljit_sw		1698267	0					
ANR	1698736	Identifier	srcw		1698267	1					
ANR	1698737	CFGEntryNode	ENTRY		1698267		True				
ANR	1698738	CFGExitNode	EXIT		1698267		True				
ANR	1698739	Symbol	XORPD_x_xm		1698267						
ANR	1698740	Symbol	SLJIT_DMOV		1698267						
ANR	1698741	Symbol	dst		1698267						
ANR	1698742	Symbol	SLJIT_CONVD_FROMS		1698267						
ANR	1698743	Symbol	SLOW_IS_REG		1698267						
ANR	1698744	Symbol	* compiler		1698267						
ANR	1698745	Symbol	ANDPD_x_xm		1698267						
ANR	1698746	Symbol	dst_r		1698267						
ANR	1698747	Symbol	GET_OPCODE		1698267						
ANR	1698748	Symbol	emit_sse2_store		1698267						
ANR	1698749	Symbol	compiler		1698267						
ANR	1698750	Symbol	UNPCKLPD_x_xm		1698267						
ANR	1698751	Symbol	op		1698267						
ANR	1698752	Symbol	FAST_IS_REG		1698267						
ANR	1698753	Symbol	src		1698267						
ANR	1698754	Symbol	srcw		1698267						
ANR	1698755	Symbol	SLJIT_SINGLE_OP		1698267						
ANR	1698756	Symbol	SLJIT_SUCCESS		1698267						
ANR	1698757	Symbol	SLJIT_MEM0		1698267						
ANR	1698758	Symbol	emit_sse2_load		1698267						
ANR	1698759	Symbol	sse2_buffer		1698267						
ANR	1698760	Symbol	TMP_FREG		1698267						
ANR	1698761	Symbol	compiler -> mode32		1698267						
ANR	1698762	Symbol	dstw		1698267						
ANR	1698763	Symbol	emit_sse2_logic		1698267						
ANR	1698764	Symbol	CVTPD2PS_x_xm		1698267						
ANR	1698765	Function	sljit_emit_fop2	2447:0:70073:71741							
ANR	1698766	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1698765	0					
ANR	1698767	CompoundStatement		2451:0:70263:71741	1698765	0					
ANR	1698768	IdentifierDeclStatement	sljit_si dst_r ;	2452:1:70266:70280	1698765	0	True				
ANR	1698769	IdentifierDecl	dst_r		1698765	0					
ANR	1698770	IdentifierDeclType	sljit_si		1698765	0					
ANR	1698771	Identifier	dst_r		1698765	1					
ANR	1698772	ExpressionStatement	CHECK_ERROR ( )	2454:1:70284:70297	1698765	1	True				
ANR	1698773	CallExpression	CHECK_ERROR ( )		1698765	0					
ANR	1698774	Callee	CHECK_ERROR		1698765	0					
ANR	1698775	Identifier	CHECK_ERROR		1698765	0					
ANR	1698776	ArgumentList			1698765	1					
ANR	1698777	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	2455:1:70300:70379	1698765	2	True				
ANR	1698778	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1698765	0					
ANR	1698779	Callee	CHECK		1698765	0					
ANR	1698780	Identifier	CHECK		1698765	0					
ANR	1698781	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1698765	1					
ANR	1698782	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1698765	0					
ANR	1698783	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1698765	0					
ANR	1698784	Callee	check_sljit_emit_fop2		1698765	0					
ANR	1698785	Identifier	check_sljit_emit_fop2		1698765	0					
ANR	1698786	ArgumentList	compiler		1698765	1					
ANR	1698787	Argument	compiler		1698765	0					
ANR	1698788	Identifier	compiler		1698765	0					
ANR	1698789	Argument	op		1698765	1					
ANR	1698790	Identifier	op		1698765	0					
ANR	1698791	Argument	dst		1698765	2					
ANR	1698792	Identifier	dst		1698765	0					
ANR	1698793	Argument	dstw		1698765	3					
ANR	1698794	Identifier	dstw		1698765	0					
ANR	1698795	Argument	src1		1698765	4					
ANR	1698796	Identifier	src1		1698765	0					
ANR	1698797	Argument	src1w		1698765	5					
ANR	1698798	Identifier	src1w		1698765	0					
ANR	1698799	Argument	src2		1698765	6					
ANR	1698800	Identifier	src2		1698765	0					
ANR	1698801	Argument	src2w		1698765	7					
ANR	1698802	Identifier	src2w		1698765	0					
ANR	1698803	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2456:1:70382:70412	1698765	3	True				
ANR	1698804	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1698765	0					
ANR	1698805	Callee	ADJUST_LOCAL_OFFSET		1698765	0					
ANR	1698806	Identifier	ADJUST_LOCAL_OFFSET		1698765	0					
ANR	1698807	ArgumentList	dst		1698765	1					
ANR	1698808	Argument	dst		1698765	0					
ANR	1698809	Identifier	dst		1698765	0					
ANR	1698810	Argument	dstw		1698765	1					
ANR	1698811	Identifier	dstw		1698765	0					
ANR	1698812	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	2457:1:70415:70447	1698765	4	True				
ANR	1698813	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1698765	0					
ANR	1698814	Callee	ADJUST_LOCAL_OFFSET		1698765	0					
ANR	1698815	Identifier	ADJUST_LOCAL_OFFSET		1698765	0					
ANR	1698816	ArgumentList	src1		1698765	1					
ANR	1698817	Argument	src1		1698765	0					
ANR	1698818	Identifier	src1		1698765	0					
ANR	1698819	Argument	src1w		1698765	1					
ANR	1698820	Identifier	src1w		1698765	0					
ANR	1698821	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	2458:1:70450:70482	1698765	5	True				
ANR	1698822	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1698765	0					
ANR	1698823	Callee	ADJUST_LOCAL_OFFSET		1698765	0					
ANR	1698824	Identifier	ADJUST_LOCAL_OFFSET		1698765	0					
ANR	1698825	ArgumentList	src2		1698765	1					
ANR	1698826	Argument	src2		1698765	0					
ANR	1698827	Identifier	src2		1698765	0					
ANR	1698828	Argument	src2w		1698765	1					
ANR	1698829	Identifier	src2w		1698765	0					
ANR	1698830	ExpressionStatement	compiler -> mode32 = 1	2461:1:70543:70563	1698765	6	True				
ANR	1698831	AssignmentExpression	compiler -> mode32 = 1		1698765	0		=			
ANR	1698832	PtrMemberAccess	compiler -> mode32		1698765	0					
ANR	1698833	Identifier	compiler		1698765	0					
ANR	1698834	Identifier	mode32		1698765	1					
ANR	1698835	PrimaryExpression	1		1698765	1					
ANR	1698836	IfStatement	if ( FAST_IS_REG ( dst ) )		1698765	7					
ANR	1698837	Condition	FAST_IS_REG ( dst )	2464:5:70578:70593	1698765	0	True				
ANR	1698838	CallExpression	FAST_IS_REG ( dst )		1698765	0					
ANR	1698839	Callee	FAST_IS_REG		1698765	0					
ANR	1698840	Identifier	FAST_IS_REG		1698765	0					
ANR	1698841	ArgumentList	dst		1698765	1					
ANR	1698842	Argument	dst		1698765	0					
ANR	1698843	Identifier	dst		1698765	0					
ANR	1698844	CompoundStatement		14:23:332:332	1698765	1					
ANR	1698845	ExpressionStatement	dst_r = dst	2465:2:70600:70611	1698765	0	True				
ANR	1698846	AssignmentExpression	dst_r = dst		1698765	0		=			
ANR	1698847	Identifier	dst_r		1698765	0					
ANR	1698848	Identifier	dst		1698765	1					
ANR	1698849	IfStatement	if ( dst == src1 )		1698765	1					
ANR	1698850	Condition	dst == src1	2466:6:70619:70629	1698765	0	True				
ANR	1698851	EqualityExpression	dst == src1		1698765	0		==			
ANR	1698852	Identifier	dst		1698765	0					
ANR	1698853	Identifier	src1		1698765	1					
ANR	1698854	ExpressionStatement		2467:3:70635:70635	1698765	1	True				
ANR	1698855	ElseStatement	else		1698765	0					
ANR	1698856	IfStatement	if ( dst == src2 && ( op == SLJIT_DADD || op == SLJIT_DMUL ) )		1698765	0					
ANR	1698857	Condition	dst == src2 && ( op == SLJIT_DADD || op == SLJIT_DMUL )	2468:11:70671:70723	1698765	0	True				
ANR	1698858	AndExpression	dst == src2 && ( op == SLJIT_DADD || op == SLJIT_DMUL )		1698765	0		&&			
ANR	1698859	EqualityExpression	dst == src2		1698765	0		==			
ANR	1698860	Identifier	dst		1698765	0					
ANR	1698861	Identifier	src2		1698765	1					
ANR	1698862	OrExpression	op == SLJIT_DADD || op == SLJIT_DMUL		1698765	1		||			
ANR	1698863	EqualityExpression	op == SLJIT_DADD		1698765	0		==			
ANR	1698864	Identifier	op		1698765	0					
ANR	1698865	Identifier	SLJIT_DADD		1698765	1					
ANR	1698866	EqualityExpression	op == SLJIT_DMUL		1698765	1		==			
ANR	1698867	Identifier	op		1698765	0					
ANR	1698868	Identifier	SLJIT_DMUL		1698765	1					
ANR	1698869	CompoundStatement		18:66:462:462	1698765	1					
ANR	1698870	ExpressionStatement	src2 = src1	2470:3:70756:70767	1698765	0	True				
ANR	1698871	AssignmentExpression	src2 = src1		1698765	0		=			
ANR	1698872	Identifier	src2		1698765	0					
ANR	1698873	Identifier	src1		1698765	1					
ANR	1698874	ExpressionStatement	src2w = src1w	2471:3:70772:70785	1698765	1	True				
ANR	1698875	AssignmentExpression	src2w = src1w		1698765	0		=			
ANR	1698876	Identifier	src2w		1698765	0					
ANR	1698877	Identifier	src1w		1698765	1					
ANR	1698878	ElseStatement	else		1698765	0					
ANR	1698879	IfStatement	if ( dst != src2 )		1698765	0					
ANR	1698880	Condition	dst != src2	2473:11:70802:70812	1698765	0	True				
ANR	1698881	EqualityExpression	dst != src2		1698765	0		!=			
ANR	1698882	Identifier	dst		1698765	0					
ANR	1698883	Identifier	src2		1698765	1					
ANR	1698884	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w ) )"	2474:3:70818:70893	1698765	1	True				
ANR	1698885	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w ) )"		1698765	0					
ANR	1698886	Callee	FAIL_IF		1698765	0					
ANR	1698887	Identifier	FAIL_IF		1698765	0					
ANR	1698888	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w )"		1698765	1					
ANR	1698889	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w )"		1698765	0					
ANR	1698890	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , dst_r , src1 , src1w )"		1698765	0					
ANR	1698891	Callee	emit_sse2_load		1698765	0					
ANR	1698892	Identifier	emit_sse2_load		1698765	0					
ANR	1698893	ArgumentList	compiler		1698765	1					
ANR	1698894	Argument	compiler		1698765	0					
ANR	1698895	Identifier	compiler		1698765	0					
ANR	1698896	Argument	op & SLJIT_SINGLE_OP		1698765	1					
ANR	1698897	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1698898	Identifier	op		1698765	0					
ANR	1698899	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1698900	Argument	dst_r		1698765	2					
ANR	1698901	Identifier	dst_r		1698765	0					
ANR	1698902	Argument	src1		1698765	3					
ANR	1698903	Identifier	src1		1698765	0					
ANR	1698904	Argument	src1w		1698765	4					
ANR	1698905	Identifier	src1w		1698765	0					
ANR	1698906	ElseStatement	else		1698765	0					
ANR	1698907	CompoundStatement		25:7:638:638	1698765	0					
ANR	1698908	ExpressionStatement	dst_r = TMP_FREG	2476:3:70907:70923	1698765	0	True				
ANR	1698909	AssignmentExpression	dst_r = TMP_FREG		1698765	0		=			
ANR	1698910	Identifier	dst_r		1698765	0					
ANR	1698911	Identifier	TMP_FREG		1698765	1					
ANR	1698912	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"	2477:3:70928:71006	1698765	1	True				
ANR	1698913	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"		1698765	0					
ANR	1698914	Callee	FAIL_IF		1698765	0					
ANR	1698915	Identifier	FAIL_IF		1698765	0					
ANR	1698916	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698765	1					
ANR	1698917	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698765	0					
ANR	1698918	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698765	0					
ANR	1698919	Callee	emit_sse2_load		1698765	0					
ANR	1698920	Identifier	emit_sse2_load		1698765	0					
ANR	1698921	ArgumentList	compiler		1698765	1					
ANR	1698922	Argument	compiler		1698765	0					
ANR	1698923	Identifier	compiler		1698765	0					
ANR	1698924	Argument	op & SLJIT_SINGLE_OP		1698765	1					
ANR	1698925	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1698926	Identifier	op		1698765	0					
ANR	1698927	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1698928	Argument	TMP_FREG		1698765	2					
ANR	1698929	Identifier	TMP_FREG		1698765	0					
ANR	1698930	Argument	src1		1698765	3					
ANR	1698931	Identifier	src1		1698765	0					
ANR	1698932	Argument	src1w		1698765	4					
ANR	1698933	Identifier	src1w		1698765	0					
ANR	1698934	ElseStatement	else		1698765	0					
ANR	1698935	CompoundStatement		30:6:757:757	1698765	0					
ANR	1698936	ExpressionStatement	dst_r = TMP_FREG	2481:2:71025:71041	1698765	0	True				
ANR	1698937	AssignmentExpression	dst_r = TMP_FREG		1698765	0		=			
ANR	1698938	Identifier	dst_r		1698765	0					
ANR	1698939	Identifier	TMP_FREG		1698765	1					
ANR	1698940	ExpressionStatement	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"	2482:2:71045:71123	1698765	1	True				
ANR	1698941	CallExpression	"FAIL_IF ( emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w ) )"		1698765	0					
ANR	1698942	Callee	FAIL_IF		1698765	0					
ANR	1698943	Identifier	FAIL_IF		1698765	0					
ANR	1698944	ArgumentList	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698765	1					
ANR	1698945	Argument	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698765	0					
ANR	1698946	CallExpression	"emit_sse2_load ( compiler , op & SLJIT_SINGLE_OP , TMP_FREG , src1 , src1w )"		1698765	0					
ANR	1698947	Callee	emit_sse2_load		1698765	0					
ANR	1698948	Identifier	emit_sse2_load		1698765	0					
ANR	1698949	ArgumentList	compiler		1698765	1					
ANR	1698950	Argument	compiler		1698765	0					
ANR	1698951	Identifier	compiler		1698765	0					
ANR	1698952	Argument	op & SLJIT_SINGLE_OP		1698765	1					
ANR	1698953	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1698954	Identifier	op		1698765	0					
ANR	1698955	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1698956	Argument	TMP_FREG		1698765	2					
ANR	1698957	Identifier	TMP_FREG		1698765	0					
ANR	1698958	Argument	src1		1698765	3					
ANR	1698959	Identifier	src1		1698765	0					
ANR	1698960	Argument	src1w		1698765	4					
ANR	1698961	Identifier	src1w		1698765	0					
ANR	1698962	SwitchStatement	switch ( GET_OPCODE ( op ) )		1698765	8					
ANR	1698963	Condition	GET_OPCODE ( op )	2485:9:71138:71151	1698765	0	True				
ANR	1698964	CallExpression	GET_OPCODE ( op )		1698765	0					
ANR	1698965	Callee	GET_OPCODE		1698765	0					
ANR	1698966	Identifier	GET_OPCODE		1698765	0					
ANR	1698967	ArgumentList	op		1698765	1					
ANR	1698968	Argument	op		1698765	0					
ANR	1698969	Identifier	op		1698765	0					
ANR	1698970	CompoundStatement		35:25:890:890	1698765	1					
ANR	1698971	Label	case SLJIT_DADD :	2486:1:71157:71172	1698765	0	True				
ANR	1698972	Identifier	SLJIT_DADD		1698765	0					
ANR	1698973	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2487:2:71176:71258	1698765	1	True				
ANR	1698974	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1698765	0					
ANR	1698975	Callee	FAIL_IF		1698765	0					
ANR	1698976	Identifier	FAIL_IF		1698765	0					
ANR	1698977	ArgumentList	"emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	1					
ANR	1698978	Argument	"emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1698979	CallExpression	"emit_sse2 ( compiler , ADDSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1698980	Callee	emit_sse2		1698765	0					
ANR	1698981	Identifier	emit_sse2		1698765	0					
ANR	1698982	ArgumentList	compiler		1698765	1					
ANR	1698983	Argument	compiler		1698765	0					
ANR	1698984	Identifier	compiler		1698765	0					
ANR	1698985	Argument	ADDSD_x_xm		1698765	1					
ANR	1698986	Identifier	ADDSD_x_xm		1698765	0					
ANR	1698987	Argument	op & SLJIT_SINGLE_OP		1698765	2					
ANR	1698988	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1698989	Identifier	op		1698765	0					
ANR	1698990	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1698991	Argument	dst_r		1698765	3					
ANR	1698992	Identifier	dst_r		1698765	0					
ANR	1698993	Argument	src2		1698765	4					
ANR	1698994	Identifier	src2		1698765	0					
ANR	1698995	Argument	src2w		1698765	5					
ANR	1698996	Identifier	src2w		1698765	0					
ANR	1698997	BreakStatement	break ;	2488:2:71262:71267	1698765	2	True				
ANR	1698998	Label	case SLJIT_DSUB :	2490:1:71271:71286	1698765	3	True				
ANR	1698999	Identifier	SLJIT_DSUB		1698765	0					
ANR	1699000	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2491:2:71290:71372	1698765	4	True				
ANR	1699001	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1698765	0					
ANR	1699002	Callee	FAIL_IF		1698765	0					
ANR	1699003	Identifier	FAIL_IF		1698765	0					
ANR	1699004	ArgumentList	"emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	1					
ANR	1699005	Argument	"emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1699006	CallExpression	"emit_sse2 ( compiler , SUBSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1699007	Callee	emit_sse2		1698765	0					
ANR	1699008	Identifier	emit_sse2		1698765	0					
ANR	1699009	ArgumentList	compiler		1698765	1					
ANR	1699010	Argument	compiler		1698765	0					
ANR	1699011	Identifier	compiler		1698765	0					
ANR	1699012	Argument	SUBSD_x_xm		1698765	1					
ANR	1699013	Identifier	SUBSD_x_xm		1698765	0					
ANR	1699014	Argument	op & SLJIT_SINGLE_OP		1698765	2					
ANR	1699015	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1699016	Identifier	op		1698765	0					
ANR	1699017	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1699018	Argument	dst_r		1698765	3					
ANR	1699019	Identifier	dst_r		1698765	0					
ANR	1699020	Argument	src2		1698765	4					
ANR	1699021	Identifier	src2		1698765	0					
ANR	1699022	Argument	src2w		1698765	5					
ANR	1699023	Identifier	src2w		1698765	0					
ANR	1699024	BreakStatement	break ;	2492:2:71376:71381	1698765	5	True				
ANR	1699025	Label	case SLJIT_DMUL :	2494:1:71385:71400	1698765	6	True				
ANR	1699026	Identifier	SLJIT_DMUL		1698765	0					
ANR	1699027	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2495:2:71404:71486	1698765	7	True				
ANR	1699028	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1698765	0					
ANR	1699029	Callee	FAIL_IF		1698765	0					
ANR	1699030	Identifier	FAIL_IF		1698765	0					
ANR	1699031	ArgumentList	"emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	1					
ANR	1699032	Argument	"emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1699033	CallExpression	"emit_sse2 ( compiler , MULSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1699034	Callee	emit_sse2		1698765	0					
ANR	1699035	Identifier	emit_sse2		1698765	0					
ANR	1699036	ArgumentList	compiler		1698765	1					
ANR	1699037	Argument	compiler		1698765	0					
ANR	1699038	Identifier	compiler		1698765	0					
ANR	1699039	Argument	MULSD_x_xm		1698765	1					
ANR	1699040	Identifier	MULSD_x_xm		1698765	0					
ANR	1699041	Argument	op & SLJIT_SINGLE_OP		1698765	2					
ANR	1699042	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1699043	Identifier	op		1698765	0					
ANR	1699044	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1699045	Argument	dst_r		1698765	3					
ANR	1699046	Identifier	dst_r		1698765	0					
ANR	1699047	Argument	src2		1698765	4					
ANR	1699048	Identifier	src2		1698765	0					
ANR	1699049	Argument	src2w		1698765	5					
ANR	1699050	Identifier	src2w		1698765	0					
ANR	1699051	BreakStatement	break ;	2496:2:71490:71495	1698765	8	True				
ANR	1699052	Label	case SLJIT_DDIV :	2498:1:71499:71514	1698765	9	True				
ANR	1699053	Identifier	SLJIT_DDIV		1698765	0					
ANR	1699054	ExpressionStatement	"FAIL_IF ( emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"	2499:2:71518:71600	1698765	10	True				
ANR	1699055	CallExpression	"FAIL_IF ( emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w ) )"		1698765	0					
ANR	1699056	Callee	FAIL_IF		1698765	0					
ANR	1699057	Identifier	FAIL_IF		1698765	0					
ANR	1699058	ArgumentList	"emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	1					
ANR	1699059	Argument	"emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1699060	CallExpression	"emit_sse2 ( compiler , DIVSD_x_xm , op & SLJIT_SINGLE_OP , dst_r , src2 , src2w )"		1698765	0					
ANR	1699061	Callee	emit_sse2		1698765	0					
ANR	1699062	Identifier	emit_sse2		1698765	0					
ANR	1699063	ArgumentList	compiler		1698765	1					
ANR	1699064	Argument	compiler		1698765	0					
ANR	1699065	Identifier	compiler		1698765	0					
ANR	1699066	Argument	DIVSD_x_xm		1698765	1					
ANR	1699067	Identifier	DIVSD_x_xm		1698765	0					
ANR	1699068	Argument	op & SLJIT_SINGLE_OP		1698765	2					
ANR	1699069	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1699070	Identifier	op		1698765	0					
ANR	1699071	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1699072	Argument	dst_r		1698765	3					
ANR	1699073	Identifier	dst_r		1698765	0					
ANR	1699074	Argument	src2		1698765	4					
ANR	1699075	Identifier	src2		1698765	0					
ANR	1699076	Argument	src2w		1698765	5					
ANR	1699077	Identifier	src2w		1698765	0					
ANR	1699078	BreakStatement	break ;	2500:2:71604:71609	1698765	11	True				
ANR	1699079	IfStatement	if ( dst_r == TMP_FREG )		1698765	9					
ANR	1699080	Condition	dst_r == TMP_FREG	2503:5:71620:71636	1698765	0	True				
ANR	1699081	EqualityExpression	dst_r == TMP_FREG		1698765	0		==			
ANR	1699082	Identifier	dst_r		1698765	0					
ANR	1699083	Identifier	TMP_FREG		1698765	1					
ANR	1699084	ReturnStatement	"return emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG ) ;"	2504:2:71641:71716	1698765	1	True				
ANR	1699085	CallExpression	"emit_sse2_store ( compiler , op & SLJIT_SINGLE_OP , dst , dstw , TMP_FREG )"		1698765	0					
ANR	1699086	Callee	emit_sse2_store		1698765	0					
ANR	1699087	Identifier	emit_sse2_store		1698765	0					
ANR	1699088	ArgumentList	compiler		1698765	1					
ANR	1699089	Argument	compiler		1698765	0					
ANR	1699090	Identifier	compiler		1698765	0					
ANR	1699091	Argument	op & SLJIT_SINGLE_OP		1698765	1					
ANR	1699092	BitAndExpression	op & SLJIT_SINGLE_OP		1698765	0		&			
ANR	1699093	Identifier	op		1698765	0					
ANR	1699094	Identifier	SLJIT_SINGLE_OP		1698765	1					
ANR	1699095	Argument	dst		1698765	2					
ANR	1699096	Identifier	dst		1698765	0					
ANR	1699097	Argument	dstw		1698765	3					
ANR	1699098	Identifier	dstw		1698765	0					
ANR	1699099	Argument	TMP_FREG		1698765	4					
ANR	1699100	Identifier	TMP_FREG		1698765	0					
ANR	1699101	ReturnStatement	return SLJIT_SUCCESS ;	2505:1:71719:71739	1698765	10	True				
ANR	1699102	Identifier	SLJIT_SUCCESS		1698765	0					
ANR	1699103	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1698765	1					
ANR	1699104	Identifier	sljit_emit_fop2		1698765	2					
ANR	1699105	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1698765	3					
ANR	1699106	Parameter	struct sljit_compiler * compiler	2447:50:70123:70153	1698765	0	True				
ANR	1699107	ParameterType	struct sljit_compiler *		1698765	0					
ANR	1699108	Identifier	compiler		1698765	1					
ANR	1699109	Parameter	sljit_si op	2447:83:70156:70166	1698765	1	True				
ANR	1699110	ParameterType	sljit_si		1698765	0					
ANR	1699111	Identifier	op		1698765	1					
ANR	1699112	Parameter	sljit_si dst	2448:1:70170:70181	1698765	2	True				
ANR	1699113	ParameterType	sljit_si		1698765	0					
ANR	1699114	Identifier	dst		1698765	1					
ANR	1699115	Parameter	sljit_sw dstw	2448:15:70184:70196	1698765	3	True				
ANR	1699116	ParameterType	sljit_sw		1698765	0					
ANR	1699117	Identifier	dstw		1698765	1					
ANR	1699118	Parameter	sljit_si src1	2449:1:70200:70212	1698765	4	True				
ANR	1699119	ParameterType	sljit_si		1698765	0					
ANR	1699120	Identifier	src1		1698765	1					
ANR	1699121	Parameter	sljit_sw src1w	2449:16:70215:70228	1698765	5	True				
ANR	1699122	ParameterType	sljit_sw		1698765	0					
ANR	1699123	Identifier	src1w		1698765	1					
ANR	1699124	Parameter	sljit_si src2	2450:1:70232:70244	1698765	6	True				
ANR	1699125	ParameterType	sljit_si		1698765	0					
ANR	1699126	Identifier	src2		1698765	1					
ANR	1699127	Parameter	sljit_sw src2w	2450:16:70247:70260	1698765	7	True				
ANR	1699128	ParameterType	sljit_sw		1698765	0					
ANR	1699129	Identifier	src2w		1698765	1					
ANR	1699130	CFGEntryNode	ENTRY		1698765		True				
ANR	1699131	CFGExitNode	EXIT		1698765		True				
ANR	1699132	Symbol	src1w		1698765						
ANR	1699133	Symbol	dst		1698765						
ANR	1699134	Symbol	emit_sse2		1698765						
ANR	1699135	Symbol	* compiler		1698765						
ANR	1699136	Symbol	dst_r		1698765						
ANR	1699137	Symbol	GET_OPCODE		1698765						
ANR	1699138	Symbol	SLJIT_DMUL		1698765						
ANR	1699139	Symbol	emit_sse2_store		1698765						
ANR	1699140	Symbol	compiler		1698765						
ANR	1699141	Symbol	SUBSD_x_xm		1698765						
ANR	1699142	Symbol	src2w		1698765						
ANR	1699143	Symbol	op		1698765						
ANR	1699144	Symbol	FAST_IS_REG		1698765						
ANR	1699145	Symbol	SLJIT_SINGLE_OP		1698765						
ANR	1699146	Symbol	SLJIT_SUCCESS		1698765						
ANR	1699147	Symbol	check_sljit_emit_fop2		1698765						
ANR	1699148	Symbol	MULSD_x_xm		1698765						
ANR	1699149	Symbol	ADDSD_x_xm		1698765						
ANR	1699150	Symbol	emit_sse2_load		1698765						
ANR	1699151	Symbol	SLJIT_DADD		1698765						
ANR	1699152	Symbol	TMP_FREG		1698765						
ANR	1699153	Symbol	DIVSD_x_xm		1698765						
ANR	1699154	Symbol	src1		1698765						
ANR	1699155	Symbol	compiler -> mode32		1698765						
ANR	1699156	Symbol	src2		1698765						
ANR	1699157	Symbol	dstw		1698765						
ANR	1699158	Function	sljit_emit_label	2512:25:71998:72736							
ANR	1699159	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1699158	0					
ANR	1699160	CompoundStatement		2513:0:72068:72736	1699158	0					
ANR	1699161	IdentifierDeclStatement	sljit_ub * inst ;	2514:1:72071:72085	1699158	0	True				
ANR	1699162	IdentifierDecl	* inst		1699158	0					
ANR	1699163	IdentifierDeclType	sljit_ub *		1699158	0					
ANR	1699164	Identifier	inst		1699158	1					
ANR	1699165	IdentifierDeclStatement	struct sljit_label * label ;	2515:1:72088:72113	1699158	1	True				
ANR	1699166	IdentifierDecl	* label		1699158	0					
ANR	1699167	IdentifierDeclType	struct sljit_label *		1699158	0					
ANR	1699168	Identifier	label		1699158	1					
ANR	1699169	ExpressionStatement	CHECK_ERROR_PTR ( )	2517:1:72117:72134	1699158	2	True				
ANR	1699170	CallExpression	CHECK_ERROR_PTR ( )		1699158	0					
ANR	1699171	Callee	CHECK_ERROR_PTR		1699158	0					
ANR	1699172	Identifier	CHECK_ERROR_PTR		1699158	0					
ANR	1699173	ArgumentList			1699158	1					
ANR	1699174	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	2518:1:72137:72180	1699158	3	True				
ANR	1699175	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1699158	0					
ANR	1699176	Callee	CHECK_PTR		1699158	0					
ANR	1699177	Identifier	CHECK_PTR		1699158	0					
ANR	1699178	ArgumentList	check_sljit_emit_label ( compiler )		1699158	1					
ANR	1699179	Argument	check_sljit_emit_label ( compiler )		1699158	0					
ANR	1699180	CallExpression	check_sljit_emit_label ( compiler )		1699158	0					
ANR	1699181	Callee	check_sljit_emit_label		1699158	0					
ANR	1699182	Identifier	check_sljit_emit_label		1699158	0					
ANR	1699183	ArgumentList	compiler		1699158	1					
ANR	1699184	Argument	compiler		1699158	0					
ANR	1699185	Identifier	compiler		1699158	0					
ANR	1699186	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1699158	4					
ANR	1699187	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2522:5:72298:72334	1699158	0	True				
ANR	1699188	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1699158	0					
ANR	1699189	Callee	SLJIT_UNLIKELY		1699158	0					
ANR	1699190	Identifier	SLJIT_UNLIKELY		1699158	0					
ANR	1699191	ArgumentList	compiler -> flags_saved		1699158	1					
ANR	1699192	Argument	compiler -> flags_saved		1699158	0					
ANR	1699193	PtrMemberAccess	compiler -> flags_saved		1699158	0					
ANR	1699194	Identifier	compiler		1699158	0					
ANR	1699195	Identifier	flags_saved		1699158	1					
ANR	1699196	ExpressionStatement	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"	2523:2:72339:72383	1699158	1	True				
ANR	1699197	CallExpression	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"		1699158	0					
ANR	1699198	Callee	PTR_FAIL_IF		1699158	0					
ANR	1699199	Identifier	PTR_FAIL_IF		1699158	0					
ANR	1699200	ArgumentList	"emit_restore_flags ( compiler , 0 )"		1699158	1					
ANR	1699201	Argument	"emit_restore_flags ( compiler , 0 )"		1699158	0					
ANR	1699202	CallExpression	"emit_restore_flags ( compiler , 0 )"		1699158	0					
ANR	1699203	Callee	emit_restore_flags		1699158	0					
ANR	1699204	Identifier	emit_restore_flags		1699158	0					
ANR	1699205	ArgumentList	compiler		1699158	1					
ANR	1699206	Argument	compiler		1699158	0					
ANR	1699207	Identifier	compiler		1699158	0					
ANR	1699208	Argument	0		1699158	1					
ANR	1699209	PrimaryExpression	0		1699158	0					
ANR	1699210	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1699158	5					
ANR	1699211	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	2525:5:72391:72458	1699158	0	True				
ANR	1699212	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1699158	0		&&			
ANR	1699213	PtrMemberAccess	compiler -> last_label		1699158	0					
ANR	1699214	Identifier	compiler		1699158	0					
ANR	1699215	Identifier	last_label		1699158	1					
ANR	1699216	EqualityExpression	compiler -> last_label -> size == compiler -> size		1699158	1		==			
ANR	1699217	PtrMemberAccess	compiler -> last_label -> size		1699158	0					
ANR	1699218	PtrMemberAccess	compiler -> last_label		1699158	0					
ANR	1699219	Identifier	compiler		1699158	0					
ANR	1699220	Identifier	last_label		1699158	1					
ANR	1699221	Identifier	size		1699158	1					
ANR	1699222	PtrMemberAccess	compiler -> size		1699158	1					
ANR	1699223	Identifier	compiler		1699158	0					
ANR	1699224	Identifier	size		1699158	1					
ANR	1699225	ReturnStatement	return compiler -> last_label ;	2526:2:72463:72490	1699158	1	True				
ANR	1699226	PtrMemberAccess	compiler -> last_label		1699158	0					
ANR	1699227	Identifier	compiler		1699158	0					
ANR	1699228	Identifier	last_label		1699158	1					
ANR	1699229	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	2528:1:72494:72572	1699158	6	True				
ANR	1699230	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1699158	0		=			
ANR	1699231	Identifier	label		1699158	0					
ANR	1699232	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1699158	1					
ANR	1699233	CastTarget	struct sljit_label *		1699158	0					
ANR	1699234	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1699158	1					
ANR	1699235	Callee	ensure_abuf		1699158	0					
ANR	1699236	Identifier	ensure_abuf		1699158	0					
ANR	1699237	ArgumentList	compiler		1699158	1					
ANR	1699238	Argument	compiler		1699158	0					
ANR	1699239	Identifier	compiler		1699158	0					
ANR	1699240	Argument	sizeof ( struct sljit_label )		1699158	1					
ANR	1699241	SizeofExpression	sizeof ( struct sljit_label )		1699158	0					
ANR	1699242	Sizeof	sizeof		1699158	0					
ANR	1699243	SizeofOperand	struct sljit_label		1699158	1					
ANR	1699244	ExpressionStatement	PTR_FAIL_IF ( ! label )	2529:1:72575:72594	1699158	7	True				
ANR	1699245	CallExpression	PTR_FAIL_IF ( ! label )		1699158	0					
ANR	1699246	Callee	PTR_FAIL_IF		1699158	0					
ANR	1699247	Identifier	PTR_FAIL_IF		1699158	0					
ANR	1699248	ArgumentList	! label		1699158	1					
ANR	1699249	Argument	! label		1699158	0					
ANR	1699250	UnaryOperationExpression	! label		1699158	0					
ANR	1699251	UnaryOperator	!		1699158	0					
ANR	1699252	Identifier	label		1699158	1					
ANR	1699253	ExpressionStatement	"set_label ( label , compiler )"	2530:1:72597:72623	1699158	8	True				
ANR	1699254	CallExpression	"set_label ( label , compiler )"		1699158	0					
ANR	1699255	Callee	set_label		1699158	0					
ANR	1699256	Identifier	set_label		1699158	0					
ANR	1699257	ArgumentList	label		1699158	1					
ANR	1699258	Argument	label		1699158	0					
ANR	1699259	Identifier	label		1699158	0					
ANR	1699260	Argument	compiler		1699158	1					
ANR	1699261	Identifier	compiler		1699158	0					
ANR	1699262	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2532:1:72627:72668	1699158	9	True				
ANR	1699263	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1699158	0		=			
ANR	1699264	Identifier	inst		1699158	0					
ANR	1699265	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1699158	1					
ANR	1699266	CastTarget	sljit_ub *		1699158	0					
ANR	1699267	CallExpression	"ensure_buf ( compiler , 2 )"		1699158	1					
ANR	1699268	Callee	ensure_buf		1699158	0					
ANR	1699269	Identifier	ensure_buf		1699158	0					
ANR	1699270	ArgumentList	compiler		1699158	1					
ANR	1699271	Argument	compiler		1699158	0					
ANR	1699272	Identifier	compiler		1699158	0					
ANR	1699273	Argument	2		1699158	1					
ANR	1699274	PrimaryExpression	2		1699158	0					
ANR	1699275	ExpressionStatement	PTR_FAIL_IF ( ! inst )	2533:1:72671:72689	1699158	10	True				
ANR	1699276	CallExpression	PTR_FAIL_IF ( ! inst )		1699158	0					
ANR	1699277	Callee	PTR_FAIL_IF		1699158	0					
ANR	1699278	Identifier	PTR_FAIL_IF		1699158	0					
ANR	1699279	ArgumentList	! inst		1699158	1					
ANR	1699280	Argument	! inst		1699158	0					
ANR	1699281	UnaryOperationExpression	! inst		1699158	0					
ANR	1699282	UnaryOperator	!		1699158	0					
ANR	1699283	Identifier	inst		1699158	1					
ANR	1699284	ExpressionStatement	* inst ++ = 0	2535:1:72693:72704	1699158	11	True				
ANR	1699285	AssignmentExpression	* inst ++ = 0		1699158	0		=			
ANR	1699286	UnaryOperationExpression	* inst ++		1699158	0					
ANR	1699287	UnaryOperator	*		1699158	0					
ANR	1699288	PostIncDecOperationExpression	inst ++		1699158	1					
ANR	1699289	Identifier	inst		1699158	0					
ANR	1699290	IncDec	++		1699158	1					
ANR	1699291	PrimaryExpression	0		1699158	1					
ANR	1699292	ExpressionStatement	* inst ++ = 0	2536:1:72707:72718	1699158	12	True				
ANR	1699293	AssignmentExpression	* inst ++ = 0		1699158	0		=			
ANR	1699294	UnaryOperationExpression	* inst ++		1699158	0					
ANR	1699295	UnaryOperator	*		1699158	0					
ANR	1699296	PostIncDecOperationExpression	inst ++		1699158	1					
ANR	1699297	Identifier	inst		1699158	0					
ANR	1699298	IncDec	++		1699158	1					
ANR	1699299	PrimaryExpression	0		1699158	1					
ANR	1699300	ReturnStatement	return label ;	2538:1:72722:72734	1699158	13	True				
ANR	1699301	Identifier	label		1699158	0					
ANR	1699302	ReturnType	struct sljit_label *		1699158	1					
ANR	1699303	Identifier	sljit_emit_label		1699158	2					
ANR	1699304	ParameterList	struct sljit_compiler * compiler		1699158	3					
ANR	1699305	Parameter	struct sljit_compiler * compiler	2512:62:72035:72065	1699158	0	True				
ANR	1699306	ParameterType	struct sljit_compiler *		1699158	0					
ANR	1699307	Identifier	compiler		1699158	1					
ANR	1699308	CFGEntryNode	ENTRY		1699158		True				
ANR	1699309	CFGExitNode	EXIT		1699158		True				
ANR	1699310	Symbol	* compiler -> last_label		1699158						
ANR	1699311	Symbol	compiler -> last_label		1699158						
ANR	1699312	Symbol	compiler -> flags_saved		1699158						
ANR	1699313	Symbol	check_sljit_emit_label		1699158						
ANR	1699314	Symbol	* inst ++		1699158						
ANR	1699315	Symbol	label		1699158						
ANR	1699316	Symbol	* compiler		1699158						
ANR	1699317	Symbol	ensure_abuf		1699158						
ANR	1699318	Symbol	compiler -> last_label -> size		1699158						
ANR	1699319	Symbol	* * compiler		1699158						
ANR	1699320	Symbol	compiler -> size		1699158						
ANR	1699321	Symbol	inst		1699158						
ANR	1699322	Symbol	ensure_buf		1699158						
ANR	1699323	Symbol	compiler		1699158						
ANR	1699324	Symbol	emit_restore_flags		1699158						
ANR	1699325	Symbol	SLJIT_UNLIKELY		1699158						
ANR	1699326	Function	sljit_emit_jump	2541:25:72764:73708							
ANR	1699327	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1699326	0					
ANR	1699328	CompoundStatement		2542:0:72847:73708	1699326	0					
ANR	1699329	IdentifierDeclStatement	sljit_ub * inst ;	2543:1:72850:72864	1699326	0	True				
ANR	1699330	IdentifierDecl	* inst		1699326	0					
ANR	1699331	IdentifierDeclType	sljit_ub *		1699326	0					
ANR	1699332	Identifier	inst		1699326	1					
ANR	1699333	IdentifierDeclStatement	struct sljit_jump * jump ;	2544:1:72867:72890	1699326	1	True				
ANR	1699334	IdentifierDecl	* jump		1699326	0					
ANR	1699335	IdentifierDeclType	struct sljit_jump *		1699326	0					
ANR	1699336	Identifier	jump		1699326	1					
ANR	1699337	ExpressionStatement	CHECK_ERROR_PTR ( )	2546:1:72894:72911	1699326	2	True				
ANR	1699338	CallExpression	CHECK_ERROR_PTR ( )		1699326	0					
ANR	1699339	Callee	CHECK_ERROR_PTR		1699326	0					
ANR	1699340	Identifier	CHECK_ERROR_PTR		1699326	0					
ANR	1699341	ArgumentList			1699326	1					
ANR	1699342	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	2547:1:72914:72962	1699326	3	True				
ANR	1699343	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1699326	0					
ANR	1699344	Callee	CHECK_PTR		1699326	0					
ANR	1699345	Identifier	CHECK_PTR		1699326	0					
ANR	1699346	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1699326	1					
ANR	1699347	Argument	"check_sljit_emit_jump ( compiler , type )"		1699326	0					
ANR	1699348	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1699326	0					
ANR	1699349	Callee	check_sljit_emit_jump		1699326	0					
ANR	1699350	Identifier	check_sljit_emit_jump		1699326	0					
ANR	1699351	ArgumentList	compiler		1699326	1					
ANR	1699352	Argument	compiler		1699326	0					
ANR	1699353	Identifier	compiler		1699326	0					
ANR	1699354	Argument	type		1699326	1					
ANR	1699355	Identifier	type		1699326	0					
ANR	1699356	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1699326	4					
ANR	1699357	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2549:5:72970:73006	1699326	0	True				
ANR	1699358	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1699326	0					
ANR	1699359	Callee	SLJIT_UNLIKELY		1699326	0					
ANR	1699360	Identifier	SLJIT_UNLIKELY		1699326	0					
ANR	1699361	ArgumentList	compiler -> flags_saved		1699326	1					
ANR	1699362	Argument	compiler -> flags_saved		1699326	0					
ANR	1699363	PtrMemberAccess	compiler -> flags_saved		1699326	0					
ANR	1699364	Identifier	compiler		1699326	0					
ANR	1699365	Identifier	flags_saved		1699326	1					
ANR	1699366	CompoundStatement		8:44:161:161	1699326	1					
ANR	1699367	IfStatement	if ( ( type & 0xff ) <= SLJIT_JUMP )		1699326	0					
ANR	1699368	Condition	( type & 0xff ) <= SLJIT_JUMP	2550:6:73017:73043	1699326	0	True				
ANR	1699369	RelationalExpression	( type & 0xff ) <= SLJIT_JUMP		1699326	0		<=			
ANR	1699370	BitAndExpression	type & 0xff		1699326	0		&			
ANR	1699371	Identifier	type		1699326	0					
ANR	1699372	PrimaryExpression	0xff		1699326	1					
ANR	1699373	Identifier	SLJIT_JUMP		1699326	1					
ANR	1699374	ExpressionStatement	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"	2551:3:73049:73093	1699326	1	True				
ANR	1699375	CallExpression	"PTR_FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"		1699326	0					
ANR	1699376	Callee	PTR_FAIL_IF		1699326	0					
ANR	1699377	Identifier	PTR_FAIL_IF		1699326	0					
ANR	1699378	ArgumentList	"emit_restore_flags ( compiler , 0 )"		1699326	1					
ANR	1699379	Argument	"emit_restore_flags ( compiler , 0 )"		1699326	0					
ANR	1699380	CallExpression	"emit_restore_flags ( compiler , 0 )"		1699326	0					
ANR	1699381	Callee	emit_restore_flags		1699326	0					
ANR	1699382	Identifier	emit_restore_flags		1699326	0					
ANR	1699383	ArgumentList	compiler		1699326	1					
ANR	1699384	Argument	compiler		1699326	0					
ANR	1699385	Identifier	compiler		1699326	0					
ANR	1699386	Argument	0		1699326	1					
ANR	1699387	PrimaryExpression	0		1699326	0					
ANR	1699388	ExpressionStatement	compiler -> flags_saved = 0	2552:2:73097:73122	1699326	1	True				
ANR	1699389	AssignmentExpression	compiler -> flags_saved = 0		1699326	0		=			
ANR	1699390	PtrMemberAccess	compiler -> flags_saved		1699326	0					
ANR	1699391	Identifier	compiler		1699326	0					
ANR	1699392	Identifier	flags_saved		1699326	1					
ANR	1699393	PrimaryExpression	0		1699326	1					
ANR	1699394	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2555:1:73129:73204	1699326	5	True				
ANR	1699395	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1699326	0		=			
ANR	1699396	Identifier	jump		1699326	0					
ANR	1699397	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1699326	1					
ANR	1699398	CastTarget	struct sljit_jump *		1699326	0					
ANR	1699399	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1699326	1					
ANR	1699400	Callee	ensure_abuf		1699326	0					
ANR	1699401	Identifier	ensure_abuf		1699326	0					
ANR	1699402	ArgumentList	compiler		1699326	1					
ANR	1699403	Argument	compiler		1699326	0					
ANR	1699404	Identifier	compiler		1699326	0					
ANR	1699405	Argument	sizeof ( struct sljit_jump )		1699326	1					
ANR	1699406	SizeofExpression	sizeof ( struct sljit_jump )		1699326	0					
ANR	1699407	Sizeof	sizeof		1699326	0					
ANR	1699408	SizeofOperand	struct sljit_jump		1699326	1					
ANR	1699409	ExpressionStatement	PTR_FAIL_IF_NULL ( jump )	2556:1:73207:73229	1699326	6	True				
ANR	1699410	CallExpression	PTR_FAIL_IF_NULL ( jump )		1699326	0					
ANR	1699411	Callee	PTR_FAIL_IF_NULL		1699326	0					
ANR	1699412	Identifier	PTR_FAIL_IF_NULL		1699326	0					
ANR	1699413	ArgumentList	jump		1699326	1					
ANR	1699414	Argument	jump		1699326	0					
ANR	1699415	Identifier	jump		1699326	0					
ANR	1699416	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	2557:1:73232:73286	1699326	7	True				
ANR	1699417	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1699326	0					
ANR	1699418	Callee	set_jump		1699326	0					
ANR	1699419	Identifier	set_jump		1699326	0					
ANR	1699420	ArgumentList	jump		1699326	1					
ANR	1699421	Argument	jump		1699326	0					
ANR	1699422	Identifier	jump		1699326	0					
ANR	1699423	Argument	compiler		1699326	1					
ANR	1699424	Identifier	compiler		1699326	0					
ANR	1699425	Argument	type & SLJIT_REWRITABLE_JUMP		1699326	2					
ANR	1699426	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1699326	0		&			
ANR	1699427	Identifier	type		1699326	0					
ANR	1699428	Identifier	SLJIT_REWRITABLE_JUMP		1699326	1					
ANR	1699429	ExpressionStatement	type &= 0xff	2558:1:73289:73301	1699326	8	True				
ANR	1699430	AssignmentExpression	type &= 0xff		1699326	0		&=			
ANR	1699431	Identifier	type		1699326	0					
ANR	1699432	PrimaryExpression	0xff		1699326	1					
ANR	1699433	IfStatement	if ( type >= SLJIT_CALL1 )		1699326	9					
ANR	1699434	Condition	type >= SLJIT_CALL1	2560:5:73309:73327	1699326	0	True				
ANR	1699435	RelationalExpression	type >= SLJIT_CALL1		1699326	0		>=			
ANR	1699436	Identifier	type		1699326	0					
ANR	1699437	Identifier	SLJIT_CALL1		1699326	1					
ANR	1699438	ExpressionStatement	"PTR_FAIL_IF ( call_with_args ( compiler , type ) )"	2561:2:73332:73375	1699326	1	True				
ANR	1699439	CallExpression	"PTR_FAIL_IF ( call_with_args ( compiler , type ) )"		1699326	0					
ANR	1699440	Callee	PTR_FAIL_IF		1699326	0					
ANR	1699441	Identifier	PTR_FAIL_IF		1699326	0					
ANR	1699442	ArgumentList	"call_with_args ( compiler , type )"		1699326	1					
ANR	1699443	Argument	"call_with_args ( compiler , type )"		1699326	0					
ANR	1699444	CallExpression	"call_with_args ( compiler , type )"		1699326	0					
ANR	1699445	Callee	call_with_args		1699326	0					
ANR	1699446	Identifier	call_with_args		1699326	0					
ANR	1699447	ArgumentList	compiler		1699326	1					
ANR	1699448	Argument	compiler		1699326	0					
ANR	1699449	Identifier	compiler		1699326	0					
ANR	1699450	Argument	type		1699326	1					
ANR	1699451	Identifier	type		1699326	0					
ANR	1699452	ExpressionStatement	compiler -> size += ( type >= SLJIT_JUMP ) ? 5 : 6	2565:1:73460:73506	1699326	10	True				
ANR	1699453	AssignmentExpression	compiler -> size += ( type >= SLJIT_JUMP ) ? 5 : 6		1699326	0		+=			
ANR	1699454	PtrMemberAccess	compiler -> size		1699326	0					
ANR	1699455	Identifier	compiler		1699326	0					
ANR	1699456	Identifier	size		1699326	1					
ANR	1699457	ConditionalExpression	( type >= SLJIT_JUMP ) ? 5 : 6		1699326	1					
ANR	1699458	Condition	type >= SLJIT_JUMP		1699326	0					
ANR	1699459	RelationalExpression	type >= SLJIT_JUMP		1699326	0		>=			
ANR	1699460	Identifier	type		1699326	0					
ANR	1699461	Identifier	SLJIT_JUMP		1699326	1					
ANR	1699462	PrimaryExpression	5		1699326	1					
ANR	1699463	PrimaryExpression	6		1699326	2					
ANR	1699464	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2570:1:73590:73631	1699326	11	True				
ANR	1699465	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1699326	0		=			
ANR	1699466	Identifier	inst		1699326	0					
ANR	1699467	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1699326	1					
ANR	1699468	CastTarget	sljit_ub *		1699326	0					
ANR	1699469	CallExpression	"ensure_buf ( compiler , 2 )"		1699326	1					
ANR	1699470	Callee	ensure_buf		1699326	0					
ANR	1699471	Identifier	ensure_buf		1699326	0					
ANR	1699472	ArgumentList	compiler		1699326	1					
ANR	1699473	Argument	compiler		1699326	0					
ANR	1699474	Identifier	compiler		1699326	0					
ANR	1699475	Argument	2		1699326	1					
ANR	1699476	PrimaryExpression	2		1699326	0					
ANR	1699477	ExpressionStatement	PTR_FAIL_IF_NULL ( inst )	2571:1:73634:73656	1699326	12	True				
ANR	1699478	CallExpression	PTR_FAIL_IF_NULL ( inst )		1699326	0					
ANR	1699479	Callee	PTR_FAIL_IF_NULL		1699326	0					
ANR	1699480	Identifier	PTR_FAIL_IF_NULL		1699326	0					
ANR	1699481	ArgumentList	inst		1699326	1					
ANR	1699482	Argument	inst		1699326	0					
ANR	1699483	Identifier	inst		1699326	0					
ANR	1699484	ExpressionStatement	* inst ++ = 0	2573:1:73660:73671	1699326	13	True				
ANR	1699485	AssignmentExpression	* inst ++ = 0		1699326	0		=			
ANR	1699486	UnaryOperationExpression	* inst ++		1699326	0					
ANR	1699487	UnaryOperator	*		1699326	0					
ANR	1699488	PostIncDecOperationExpression	inst ++		1699326	1					
ANR	1699489	Identifier	inst		1699326	0					
ANR	1699490	IncDec	++		1699326	1					
ANR	1699491	PrimaryExpression	0		1699326	1					
ANR	1699492	ExpressionStatement	* inst ++ = type + 4	2574:1:73674:73692	1699326	14	True				
ANR	1699493	AssignmentExpression	* inst ++ = type + 4		1699326	0		=			
ANR	1699494	UnaryOperationExpression	* inst ++		1699326	0					
ANR	1699495	UnaryOperator	*		1699326	0					
ANR	1699496	PostIncDecOperationExpression	inst ++		1699326	1					
ANR	1699497	Identifier	inst		1699326	0					
ANR	1699498	IncDec	++		1699326	1					
ANR	1699499	AdditiveExpression	type + 4		1699326	1		+			
ANR	1699500	Identifier	type		1699326	0					
ANR	1699501	PrimaryExpression	4		1699326	1					
ANR	1699502	ReturnStatement	return jump ;	2575:1:73695:73706	1699326	15	True				
ANR	1699503	Identifier	jump		1699326	0					
ANR	1699504	ReturnType	struct sljit_jump *		1699326	1					
ANR	1699505	Identifier	sljit_emit_jump		1699326	2					
ANR	1699506	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1699326	3					
ANR	1699507	Parameter	struct sljit_compiler * compiler	2541:60:72799:72829	1699326	0	True				
ANR	1699508	ParameterType	struct sljit_compiler *		1699326	0					
ANR	1699509	Identifier	compiler		1699326	1					
ANR	1699510	Parameter	sljit_si type	2541:93:72832:72844	1699326	1	True				
ANR	1699511	ParameterType	sljit_si		1699326	0					
ANR	1699512	Identifier	type		1699326	1					
ANR	1699513	CFGEntryNode	ENTRY		1699326		True				
ANR	1699514	CFGExitNode	EXIT		1699326		True				
ANR	1699515	Symbol	SLJIT_JUMP		1699326						
ANR	1699516	Symbol	call_with_args		1699326						
ANR	1699517	Symbol	compiler -> flags_saved		1699326						
ANR	1699518	Symbol	* inst ++		1699326						
ANR	1699519	Symbol	* compiler		1699326						
ANR	1699520	Symbol	ensure_abuf		1699326						
ANR	1699521	Symbol	type		1699326						
ANR	1699522	Symbol	compiler -> size		1699326						
ANR	1699523	Symbol	inst		1699326						
ANR	1699524	Symbol	ensure_buf		1699326						
ANR	1699525	Symbol	check_sljit_emit_jump		1699326						
ANR	1699526	Symbol	SLJIT_CALL1		1699326						
ANR	1699527	Symbol	SLJIT_REWRITABLE_JUMP		1699326						
ANR	1699528	Symbol	compiler		1699326						
ANR	1699529	Symbol	emit_restore_flags		1699326						
ANR	1699530	Symbol	jump		1699326						
ANR	1699531	Symbol	SLJIT_UNLIKELY		1699326						
ANR	1699532	Function	sljit_emit_ijump	2578:0:73711:75526							
ANR	1699533	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1699532	0					
ANR	1699534	CompoundStatement		2579:0:73839:75526	1699532	0					
ANR	1699535	IdentifierDeclStatement	sljit_ub * inst ;	2580:1:73842:73856	1699532	0	True				
ANR	1699536	IdentifierDecl	* inst		1699532	0					
ANR	1699537	IdentifierDeclType	sljit_ub *		1699532	0					
ANR	1699538	Identifier	inst		1699532	1					
ANR	1699539	IdentifierDeclStatement	struct sljit_jump * jump ;	2581:1:73859:73882	1699532	1	True				
ANR	1699540	IdentifierDecl	* jump		1699532	0					
ANR	1699541	IdentifierDeclType	struct sljit_jump *		1699532	0					
ANR	1699542	Identifier	jump		1699532	1					
ANR	1699543	ExpressionStatement	CHECK_ERROR ( )	2583:1:73886:73899	1699532	2	True				
ANR	1699544	CallExpression	CHECK_ERROR ( )		1699532	0					
ANR	1699545	Callee	CHECK_ERROR		1699532	0					
ANR	1699546	Identifier	CHECK_ERROR		1699532	0					
ANR	1699547	ArgumentList			1699532	1					
ANR	1699548	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	2584:1:73902:73958	1699532	3	True				
ANR	1699549	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1699532	0					
ANR	1699550	Callee	CHECK		1699532	0					
ANR	1699551	Identifier	CHECK		1699532	0					
ANR	1699552	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1699532	1					
ANR	1699553	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1699532	0					
ANR	1699554	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1699532	0					
ANR	1699555	Callee	check_sljit_emit_ijump		1699532	0					
ANR	1699556	Identifier	check_sljit_emit_ijump		1699532	0					
ANR	1699557	ArgumentList	compiler		1699532	1					
ANR	1699558	Argument	compiler		1699532	0					
ANR	1699559	Identifier	compiler		1699532	0					
ANR	1699560	Argument	type		1699532	1					
ANR	1699561	Identifier	type		1699532	0					
ANR	1699562	Argument	src		1699532	2					
ANR	1699563	Identifier	src		1699532	0					
ANR	1699564	Argument	srcw		1699532	3					
ANR	1699565	Identifier	srcw		1699532	0					
ANR	1699566	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2585:1:73961:73991	1699532	4	True				
ANR	1699567	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1699532	0					
ANR	1699568	Callee	ADJUST_LOCAL_OFFSET		1699532	0					
ANR	1699569	Identifier	ADJUST_LOCAL_OFFSET		1699532	0					
ANR	1699570	ArgumentList	src		1699532	1					
ANR	1699571	Argument	src		1699532	0					
ANR	1699572	Identifier	src		1699532	0					
ANR	1699573	Argument	srcw		1699532	1					
ANR	1699574	Identifier	srcw		1699532	0					
ANR	1699575	ExpressionStatement	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"	2587:1:73995:74031	1699532	5	True				
ANR	1699576	CallExpression	"CHECK_EXTRA_REGS ( src , srcw , ( void ) 0 )"		1699532	0					
ANR	1699577	Callee	CHECK_EXTRA_REGS		1699532	0					
ANR	1699578	Identifier	CHECK_EXTRA_REGS		1699532	0					
ANR	1699579	ArgumentList	src		1699532	1					
ANR	1699580	Argument	src		1699532	0					
ANR	1699581	Identifier	src		1699532	0					
ANR	1699582	Argument	srcw		1699532	1					
ANR	1699583	Identifier	srcw		1699532	0					
ANR	1699584	Argument	( void ) 0		1699532	2					
ANR	1699585	CastExpression	( void ) 0		1699532	0					
ANR	1699586	CastTarget	void		1699532	0					
ANR	1699587	PrimaryExpression	0		1699532	1					
ANR	1699588	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1699532	6					
ANR	1699589	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2589:5:74039:74075	1699532	0	True				
ANR	1699590	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1699532	0					
ANR	1699591	Callee	SLJIT_UNLIKELY		1699532	0					
ANR	1699592	Identifier	SLJIT_UNLIKELY		1699532	0					
ANR	1699593	ArgumentList	compiler -> flags_saved		1699532	1					
ANR	1699594	Argument	compiler -> flags_saved		1699532	0					
ANR	1699595	PtrMemberAccess	compiler -> flags_saved		1699532	0					
ANR	1699596	Identifier	compiler		1699532	0					
ANR	1699597	Identifier	flags_saved		1699532	1					
ANR	1699598	CompoundStatement		11:44:238:238	1699532	1					
ANR	1699599	IfStatement	if ( type <= SLJIT_JUMP )		1699532	0					
ANR	1699600	Condition	type <= SLJIT_JUMP	2590:6:74086:74103	1699532	0	True				
ANR	1699601	RelationalExpression	type <= SLJIT_JUMP		1699532	0		<=			
ANR	1699602	Identifier	type		1699532	0					
ANR	1699603	Identifier	SLJIT_JUMP		1699532	1					
ANR	1699604	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"	2591:3:74109:74149	1699532	1	True				
ANR	1699605	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , 0 ) )"		1699532	0					
ANR	1699606	Callee	FAIL_IF		1699532	0					
ANR	1699607	Identifier	FAIL_IF		1699532	0					
ANR	1699608	ArgumentList	"emit_restore_flags ( compiler , 0 )"		1699532	1					
ANR	1699609	Argument	"emit_restore_flags ( compiler , 0 )"		1699532	0					
ANR	1699610	CallExpression	"emit_restore_flags ( compiler , 0 )"		1699532	0					
ANR	1699611	Callee	emit_restore_flags		1699532	0					
ANR	1699612	Identifier	emit_restore_flags		1699532	0					
ANR	1699613	ArgumentList	compiler		1699532	1					
ANR	1699614	Argument	compiler		1699532	0					
ANR	1699615	Identifier	compiler		1699532	0					
ANR	1699616	Argument	0		1699532	1					
ANR	1699617	PrimaryExpression	0		1699532	0					
ANR	1699618	ExpressionStatement	compiler -> flags_saved = 0	2592:2:74153:74178	1699532	1	True				
ANR	1699619	AssignmentExpression	compiler -> flags_saved = 0		1699532	0		=			
ANR	1699620	PtrMemberAccess	compiler -> flags_saved		1699532	0					
ANR	1699621	Identifier	compiler		1699532	0					
ANR	1699622	Identifier	flags_saved		1699532	1					
ANR	1699623	PrimaryExpression	0		1699532	1					
ANR	1699624	IfStatement	if ( type >= SLJIT_CALL1 )		1699532	7					
ANR	1699625	Condition	type >= SLJIT_CALL1	2595:5:74189:74207	1699532	0	True				
ANR	1699626	RelationalExpression	type >= SLJIT_CALL1		1699532	0		>=			
ANR	1699627	Identifier	type		1699532	0					
ANR	1699628	Identifier	SLJIT_CALL1		1699532	1					
ANR	1699629	CompoundStatement		17:26:370:370	1699532	1					
ANR	1699630	IfStatement	if ( src == SLJIT_R2 )		1699532	0					
ANR	1699631	Condition	src == SLJIT_R2	2598:6:74336:74350	1699532	0	True				
ANR	1699632	EqualityExpression	src == SLJIT_R2		1699532	0		==			
ANR	1699633	Identifier	src		1699532	0					
ANR	1699634	Identifier	SLJIT_R2		1699532	1					
ANR	1699635	CompoundStatement		20:23:513:513	1699532	1					
ANR	1699636	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"	2599:3:74358:74397	1699532	0	True				
ANR	1699637	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"		1699532	0					
ANR	1699638	Callee	EMIT_MOV		1699532	0					
ANR	1699639	Identifier	EMIT_MOV		1699532	0					
ANR	1699640	ArgumentList	compiler		1699532	1					
ANR	1699641	Argument	compiler		1699532	0					
ANR	1699642	Identifier	compiler		1699532	0					
ANR	1699643	Argument	TMP_REG1		1699532	1					
ANR	1699644	Identifier	TMP_REG1		1699532	0					
ANR	1699645	Argument	0		1699532	2					
ANR	1699646	PrimaryExpression	0		1699532	0					
ANR	1699647	Argument	src		1699532	3					
ANR	1699648	Identifier	src		1699532	0					
ANR	1699649	Argument	0		1699532	4					
ANR	1699650	PrimaryExpression	0		1699532	0					
ANR	1699651	ExpressionStatement	src = TMP_REG1	2600:3:74402:74416	1699532	1	True				
ANR	1699652	AssignmentExpression	src = TMP_REG1		1699532	0		=			
ANR	1699653	Identifier	src		1699532	0					
ANR	1699654	Identifier	TMP_REG1		1699532	1					
ANR	1699655	IfStatement	if ( src == SLJIT_MEM1 ( SLJIT_SP ) && type >= SLJIT_CALL3 )		1699532	1					
ANR	1699656	Condition	src == SLJIT_MEM1 ( SLJIT_SP ) && type >= SLJIT_CALL3	2602:6:74428:74477	1699532	0	True				
ANR	1699657	AndExpression	src == SLJIT_MEM1 ( SLJIT_SP ) && type >= SLJIT_CALL3		1699532	0		&&			
ANR	1699658	EqualityExpression	src == SLJIT_MEM1 ( SLJIT_SP )		1699532	0		==			
ANR	1699659	Identifier	src		1699532	0					
ANR	1699660	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1699532	1					
ANR	1699661	Callee	SLJIT_MEM1		1699532	0					
ANR	1699662	Identifier	SLJIT_MEM1		1699532	0					
ANR	1699663	ArgumentList	SLJIT_SP		1699532	1					
ANR	1699664	Argument	SLJIT_SP		1699532	0					
ANR	1699665	Identifier	SLJIT_SP		1699532	0					
ANR	1699666	RelationalExpression	type >= SLJIT_CALL3		1699532	1		>=			
ANR	1699667	Identifier	type		1699532	0					
ANR	1699668	Identifier	SLJIT_CALL3		1699532	1					
ANR	1699669	ExpressionStatement	srcw += sizeof ( sljit_sw )	2603:3:74483:74507	1699532	1	True				
ANR	1699670	AssignmentExpression	srcw += sizeof ( sljit_sw )		1699532	0		+=			
ANR	1699671	Identifier	srcw		1699532	0					
ANR	1699672	SizeofExpression	sizeof ( sljit_sw )		1699532	1					
ANR	1699673	Sizeof	sizeof		1699532	0					
ANR	1699674	SizeofOperand	sljit_sw		1699532	1					
ANR	1699675	IfStatement	if ( src == SLJIT_R2 )		1699532	2					
ANR	1699676	Condition	src == SLJIT_R2	2607:6:74605:74619	1699532	0	True				
ANR	1699677	EqualityExpression	src == SLJIT_R2		1699532	0		==			
ANR	1699678	Identifier	src		1699532	0					
ANR	1699679	Identifier	SLJIT_R2		1699532	1					
ANR	1699680	CompoundStatement		29:23:782:782	1699532	1					
ANR	1699681	ExpressionStatement	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"	2608:3:74627:74666	1699532	0	True				
ANR	1699682	CallExpression	"EMIT_MOV ( compiler , TMP_REG1 , 0 , src , 0 )"		1699532	0					
ANR	1699683	Callee	EMIT_MOV		1699532	0					
ANR	1699684	Identifier	EMIT_MOV		1699532	0					
ANR	1699685	ArgumentList	compiler		1699532	1					
ANR	1699686	Argument	compiler		1699532	0					
ANR	1699687	Identifier	compiler		1699532	0					
ANR	1699688	Argument	TMP_REG1		1699532	1					
ANR	1699689	Identifier	TMP_REG1		1699532	0					
ANR	1699690	Argument	0		1699532	2					
ANR	1699691	PrimaryExpression	0		1699532	0					
ANR	1699692	Argument	src		1699532	3					
ANR	1699693	Identifier	src		1699532	0					
ANR	1699694	Argument	0		1699532	4					
ANR	1699695	PrimaryExpression	0		1699532	0					
ANR	1699696	ExpressionStatement	src = TMP_REG1	2609:3:74671:74685	1699532	1	True				
ANR	1699697	AssignmentExpression	src = TMP_REG1		1699532	0		=			
ANR	1699698	Identifier	src		1699532	0					
ANR	1699699	Identifier	TMP_REG1		1699532	1					
ANR	1699700	ExpressionStatement	"FAIL_IF ( call_with_args ( compiler , type ) )"	2612:2:74700:74739	1699532	3	True				
ANR	1699701	CallExpression	"FAIL_IF ( call_with_args ( compiler , type ) )"		1699532	0					
ANR	1699702	Callee	FAIL_IF		1699532	0					
ANR	1699703	Identifier	FAIL_IF		1699532	0					
ANR	1699704	ArgumentList	"call_with_args ( compiler , type )"		1699532	1					
ANR	1699705	Argument	"call_with_args ( compiler , type )"		1699532	0					
ANR	1699706	CallExpression	"call_with_args ( compiler , type )"		1699532	0					
ANR	1699707	Callee	call_with_args		1699532	0					
ANR	1699708	Identifier	call_with_args		1699532	0					
ANR	1699709	ArgumentList	compiler		1699532	1					
ANR	1699710	Argument	compiler		1699532	0					
ANR	1699711	Identifier	compiler		1699532	0					
ANR	1699712	Argument	type		1699532	1					
ANR	1699713	Identifier	type		1699532	0					
ANR	1699714	IfStatement	if ( src == SLJIT_IMM )		1699532	8					
ANR	1699715	Condition	src == SLJIT_IMM	2615:5:74750:74765	1699532	0	True				
ANR	1699716	EqualityExpression	src == SLJIT_IMM		1699532	0		==			
ANR	1699717	Identifier	src		1699532	0					
ANR	1699718	Identifier	SLJIT_IMM		1699532	1					
ANR	1699719	CompoundStatement		37:23:928:928	1699532	1					
ANR	1699720	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2616:2:74772:74847	1699532	0	True				
ANR	1699721	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1699532	0		=			
ANR	1699722	Identifier	jump		1699532	0					
ANR	1699723	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1699532	1					
ANR	1699724	CastTarget	struct sljit_jump *		1699532	0					
ANR	1699725	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1699532	1					
ANR	1699726	Callee	ensure_abuf		1699532	0					
ANR	1699727	Identifier	ensure_abuf		1699532	0					
ANR	1699728	ArgumentList	compiler		1699532	1					
ANR	1699729	Argument	compiler		1699532	0					
ANR	1699730	Identifier	compiler		1699532	0					
ANR	1699731	Argument	sizeof ( struct sljit_jump )		1699532	1					
ANR	1699732	SizeofExpression	sizeof ( struct sljit_jump )		1699532	0					
ANR	1699733	Sizeof	sizeof		1699532	0					
ANR	1699734	SizeofOperand	struct sljit_jump		1699532	1					
ANR	1699735	ExpressionStatement	FAIL_IF_NULL ( jump )	2617:2:74851:74869	1699532	1	True				
ANR	1699736	CallExpression	FAIL_IF_NULL ( jump )		1699532	0					
ANR	1699737	Callee	FAIL_IF_NULL		1699532	0					
ANR	1699738	Identifier	FAIL_IF_NULL		1699532	0					
ANR	1699739	ArgumentList	jump		1699532	1					
ANR	1699740	Argument	jump		1699532	0					
ANR	1699741	Identifier	jump		1699532	0					
ANR	1699742	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR )"	2618:2:74873:74908	1699532	2	True				
ANR	1699743	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR )"		1699532	0					
ANR	1699744	Callee	set_jump		1699532	0					
ANR	1699745	Identifier	set_jump		1699532	0					
ANR	1699746	ArgumentList	jump		1699532	1					
ANR	1699747	Argument	jump		1699532	0					
ANR	1699748	Identifier	jump		1699532	0					
ANR	1699749	Argument	compiler		1699532	1					
ANR	1699750	Identifier	compiler		1699532	0					
ANR	1699751	Argument	JUMP_ADDR		1699532	2					
ANR	1699752	Identifier	JUMP_ADDR		1699532	0					
ANR	1699753	ExpressionStatement	jump -> u . target = srcw	2619:2:74912:74933	1699532	3	True				
ANR	1699754	AssignmentExpression	jump -> u . target = srcw		1699532	0		=			
ANR	1699755	MemberAccess	jump -> u . target		1699532	0					
ANR	1699756	PtrMemberAccess	jump -> u		1699532	0					
ANR	1699757	Identifier	jump		1699532	0					
ANR	1699758	Identifier	u		1699532	1					
ANR	1699759	Identifier	target		1699532	1					
ANR	1699760	Identifier	srcw		1699532	1					
ANR	1699761	ExpressionStatement	compiler -> size += 5	2623:2:75020:75039	1699532	4	True				
ANR	1699762	AssignmentExpression	compiler -> size += 5		1699532	0		+=			
ANR	1699763	PtrMemberAccess	compiler -> size		1699532	0					
ANR	1699764	Identifier	compiler		1699532	0					
ANR	1699765	Identifier	size		1699532	1					
ANR	1699766	PrimaryExpression	5		1699532	1					
ANR	1699767	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2628:2:75085:75126	1699532	5	True				
ANR	1699768	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1699532	0		=			
ANR	1699769	Identifier	inst		1699532	0					
ANR	1699770	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1699532	1					
ANR	1699771	CastTarget	sljit_ub *		1699532	0					
ANR	1699772	CallExpression	"ensure_buf ( compiler , 2 )"		1699532	1					
ANR	1699773	Callee	ensure_buf		1699532	0					
ANR	1699774	Identifier	ensure_buf		1699532	0					
ANR	1699775	ArgumentList	compiler		1699532	1					
ANR	1699776	Argument	compiler		1699532	0					
ANR	1699777	Identifier	compiler		1699532	0					
ANR	1699778	Argument	2		1699532	1					
ANR	1699779	PrimaryExpression	2		1699532	0					
ANR	1699780	ExpressionStatement	FAIL_IF_NULL ( inst )	2629:2:75130:75148	1699532	6	True				
ANR	1699781	CallExpression	FAIL_IF_NULL ( inst )		1699532	0					
ANR	1699782	Callee	FAIL_IF_NULL		1699532	0					
ANR	1699783	Identifier	FAIL_IF_NULL		1699532	0					
ANR	1699784	ArgumentList	inst		1699532	1					
ANR	1699785	Argument	inst		1699532	0					
ANR	1699786	Identifier	inst		1699532	0					
ANR	1699787	ExpressionStatement	* inst ++ = 0	2631:2:75153:75164	1699532	7	True				
ANR	1699788	AssignmentExpression	* inst ++ = 0		1699532	0		=			
ANR	1699789	UnaryOperationExpression	* inst ++		1699532	0					
ANR	1699790	UnaryOperator	*		1699532	0					
ANR	1699791	PostIncDecOperationExpression	inst ++		1699532	1					
ANR	1699792	Identifier	inst		1699532	0					
ANR	1699793	IncDec	++		1699532	1					
ANR	1699794	PrimaryExpression	0		1699532	1					
ANR	1699795	ExpressionStatement	* inst ++ = type + 4	2632:2:75168:75186	1699532	8	True				
ANR	1699796	AssignmentExpression	* inst ++ = type + 4		1699532	0		=			
ANR	1699797	UnaryOperationExpression	* inst ++		1699532	0					
ANR	1699798	UnaryOperator	*		1699532	0					
ANR	1699799	PostIncDecOperationExpression	inst ++		1699532	1					
ANR	1699800	Identifier	inst		1699532	0					
ANR	1699801	IncDec	++		1699532	1					
ANR	1699802	AdditiveExpression	type + 4		1699532	1		+			
ANR	1699803	Identifier	type		1699532	0					
ANR	1699804	PrimaryExpression	4		1699532	1					
ANR	1699805	ElseStatement	else		1699532	0					
ANR	1699806	CompoundStatement		56:6:1357:1357	1699532	0					
ANR	1699807	ExpressionStatement	compiler -> mode32 = 1	2637:2:75313:75333	1699532	0	True				
ANR	1699808	AssignmentExpression	compiler -> mode32 = 1		1699532	0		=			
ANR	1699809	PtrMemberAccess	compiler -> mode32		1699532	0					
ANR	1699810	Identifier	compiler		1699532	0					
ANR	1699811	Identifier	mode32		1699532	1					
ANR	1699812	PrimaryExpression	1		1699532	1					
ANR	1699813	ExpressionStatement	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"	2639:2:75344:75401	1699532	1	True				
ANR	1699814	AssignmentExpression	"inst = emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"		1699532	0		=			
ANR	1699815	Identifier	inst		1699532	0					
ANR	1699816	CallExpression	"emit_x86_instruction ( compiler , 1 , 0 , 0 , src , srcw )"		1699532	1					
ANR	1699817	Callee	emit_x86_instruction		1699532	0					
ANR	1699818	Identifier	emit_x86_instruction		1699532	0					
ANR	1699819	ArgumentList	compiler		1699532	1					
ANR	1699820	Argument	compiler		1699532	0					
ANR	1699821	Identifier	compiler		1699532	0					
ANR	1699822	Argument	1		1699532	1					
ANR	1699823	PrimaryExpression	1		1699532	0					
ANR	1699824	Argument	0		1699532	2					
ANR	1699825	PrimaryExpression	0		1699532	0					
ANR	1699826	Argument	0		1699532	3					
ANR	1699827	PrimaryExpression	0		1699532	0					
ANR	1699828	Argument	src		1699532	4					
ANR	1699829	Identifier	src		1699532	0					
ANR	1699830	Argument	srcw		1699532	5					
ANR	1699831	Identifier	srcw		1699532	0					
ANR	1699832	ExpressionStatement	FAIL_IF ( ! inst )	2640:2:75405:75419	1699532	2	True				
ANR	1699833	CallExpression	FAIL_IF ( ! inst )		1699532	0					
ANR	1699834	Callee	FAIL_IF		1699532	0					
ANR	1699835	Identifier	FAIL_IF		1699532	0					
ANR	1699836	ArgumentList	! inst		1699532	1					
ANR	1699837	Argument	! inst		1699532	0					
ANR	1699838	UnaryOperationExpression	! inst		1699532	0					
ANR	1699839	UnaryOperator	!		1699532	0					
ANR	1699840	Identifier	inst		1699532	1					
ANR	1699841	ExpressionStatement	* inst ++ = GROUP_FF	2641:2:75423:75441	1699532	3	True				
ANR	1699842	AssignmentExpression	* inst ++ = GROUP_FF		1699532	0		=			
ANR	1699843	UnaryOperationExpression	* inst ++		1699532	0					
ANR	1699844	UnaryOperator	*		1699532	0					
ANR	1699845	PostIncDecOperationExpression	inst ++		1699532	1					
ANR	1699846	Identifier	inst		1699532	0					
ANR	1699847	IncDec	++		1699532	1					
ANR	1699848	Identifier	GROUP_FF		1699532	1					
ANR	1699849	ExpressionStatement	* inst |= ( type >= SLJIT_FAST_CALL ) ? CALL_rm : JMP_rm	2642:2:75445:75498	1699532	4	True				
ANR	1699850	AssignmentExpression	* inst |= ( type >= SLJIT_FAST_CALL ) ? CALL_rm : JMP_rm		1699532	0		|=			
ANR	1699851	UnaryOperationExpression	* inst		1699532	0					
ANR	1699852	UnaryOperator	*		1699532	0					
ANR	1699853	Identifier	inst		1699532	1					
ANR	1699854	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? CALL_rm : JMP_rm		1699532	1					
ANR	1699855	Condition	type >= SLJIT_FAST_CALL		1699532	0					
ANR	1699856	RelationalExpression	type >= SLJIT_FAST_CALL		1699532	0		>=			
ANR	1699857	Identifier	type		1699532	0					
ANR	1699858	Identifier	SLJIT_FAST_CALL		1699532	1					
ANR	1699859	Identifier	CALL_rm		1699532	1					
ANR	1699860	Identifier	JMP_rm		1699532	2					
ANR	1699861	ReturnStatement	return SLJIT_SUCCESS ;	2644:1:75504:75524	1699532	9	True				
ANR	1699862	Identifier	SLJIT_SUCCESS		1699532	0					
ANR	1699863	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1699532	1					
ANR	1699864	Identifier	sljit_emit_ijump		1699532	2					
ANR	1699865	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1699532	3					
ANR	1699866	Parameter	struct sljit_compiler * compiler	2578:51:73762:73792	1699532	0	True				
ANR	1699867	ParameterType	struct sljit_compiler *		1699532	0					
ANR	1699868	Identifier	compiler		1699532	1					
ANR	1699869	Parameter	sljit_si type	2578:84:73795:73807	1699532	1	True				
ANR	1699870	ParameterType	sljit_si		1699532	0					
ANR	1699871	Identifier	type		1699532	1					
ANR	1699872	Parameter	sljit_si src	2578:99:73810:73821	1699532	2	True				
ANR	1699873	ParameterType	sljit_si		1699532	0					
ANR	1699874	Identifier	src		1699532	1					
ANR	1699875	Parameter	sljit_sw srcw	2578:113:73824:73836	1699532	3	True				
ANR	1699876	ParameterType	sljit_sw		1699532	0					
ANR	1699877	Identifier	srcw		1699532	1					
ANR	1699878	CFGEntryNode	ENTRY		1699532		True				
ANR	1699879	CFGExitNode	EXIT		1699532		True				
ANR	1699880	Symbol	check_sljit_emit_ijump		1699532						
ANR	1699881	Symbol	SLJIT_JUMP		1699532						
ANR	1699882	Symbol	TMP_REG1		1699532						
ANR	1699883	Symbol	CALL_rm		1699532						
ANR	1699884	Symbol	* jump		1699532						
ANR	1699885	Symbol	jump -> u		1699532						
ANR	1699886	Symbol	compiler -> flags_saved		1699532						
ANR	1699887	Symbol	* inst ++		1699532						
ANR	1699888	Symbol	JUMP_ADDR		1699532						
ANR	1699889	Symbol	* compiler		1699532						
ANR	1699890	Symbol	type		1699532						
ANR	1699891	Symbol	SLJIT_R2		1699532						
ANR	1699892	Symbol	SLJIT_SP		1699532						
ANR	1699893	Symbol	SLJIT_IMM		1699532						
ANR	1699894	Symbol	SLJIT_FAST_CALL		1699532						
ANR	1699895	Symbol	compiler		1699532						
ANR	1699896	Symbol	jump		1699532						
ANR	1699897	Symbol	emit_x86_instruction		1699532						
ANR	1699898	Symbol	call_with_args		1699532						
ANR	1699899	Symbol	* inst		1699532						
ANR	1699900	Symbol	JMP_rm		1699532						
ANR	1699901	Symbol	src		1699532						
ANR	1699902	Symbol	srcw		1699532						
ANR	1699903	Symbol	SLJIT_SUCCESS		1699532						
ANR	1699904	Symbol	SLJIT_MEM1		1699532						
ANR	1699905	Symbol	ensure_abuf		1699532						
ANR	1699906	Symbol	compiler -> size		1699532						
ANR	1699907	Symbol	GROUP_FF		1699532						
ANR	1699908	Symbol	inst		1699532						
ANR	1699909	Symbol	jump -> u . target		1699532						
ANR	1699910	Symbol	ensure_buf		1699532						
ANR	1699911	Symbol	SLJIT_CALL1		1699532						
ANR	1699912	Symbol	compiler -> mode32		1699532						
ANR	1699913	Symbol	SLJIT_CALL3		1699532						
ANR	1699914	Symbol	emit_restore_flags		1699532						
ANR	1699915	Symbol	SLJIT_UNLIKELY		1699532						
ANR	1699916	Function	sljit_emit_op_flags	2647:0:75529:81319							
ANR	1699917	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1699916	0					
ANR	1699918	CompoundStatement		2651:0:75705:81319	1699916	0					
ANR	1699919	IdentifierDeclStatement	sljit_ub * inst ;	2652:1:75708:75722	1699916	0	True				
ANR	1699920	IdentifierDecl	* inst		1699916	0					
ANR	1699921	IdentifierDeclType	sljit_ub *		1699916	0					
ANR	1699922	Identifier	inst		1699916	1					
ANR	1699923	IdentifierDeclStatement	sljit_ub cond_set = 0 ;	2653:1:75725:75746	1699916	1	True				
ANR	1699924	IdentifierDecl	cond_set = 0		1699916	0					
ANR	1699925	IdentifierDeclType	sljit_ub		1699916	0					
ANR	1699926	Identifier	cond_set		1699916	1					
ANR	1699927	AssignmentExpression	cond_set = 0		1699916	2		=			
ANR	1699928	Identifier	cond_set		1699916	0					
ANR	1699929	PrimaryExpression	0		1699916	1					
ANR	1699930	IdentifierDeclStatement	sljit_si reg ;	2655:1:75806:75818	1699916	2	True				
ANR	1699931	IdentifierDecl	reg		1699916	0					
ANR	1699932	IdentifierDeclType	sljit_si		1699916	0					
ANR	1699933	Identifier	reg		1699916	1					
ANR	1699934	ExpressionStatement	CHECK_ERROR ( )	2662:1:75942:75955	1699916	3	True				
ANR	1699935	CallExpression	CHECK_ERROR ( )		1699916	0					
ANR	1699936	Callee	CHECK_ERROR		1699916	0					
ANR	1699937	Identifier	CHECK_ERROR		1699916	0					
ANR	1699938	ArgumentList			1699916	1					
ANR	1699939	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	2663:1:75958:76032	1699916	4	True				
ANR	1699940	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1699916	0					
ANR	1699941	Callee	CHECK		1699916	0					
ANR	1699942	Identifier	CHECK		1699916	0					
ANR	1699943	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1699916	1					
ANR	1699944	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1699916	0					
ANR	1699945	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1699916	0					
ANR	1699946	Callee	check_sljit_emit_op_flags		1699916	0					
ANR	1699947	Identifier	check_sljit_emit_op_flags		1699916	0					
ANR	1699948	ArgumentList	compiler		1699916	1					
ANR	1699949	Argument	compiler		1699916	0					
ANR	1699950	Identifier	compiler		1699916	0					
ANR	1699951	Argument	op		1699916	1					
ANR	1699952	Identifier	op		1699916	0					
ANR	1699953	Argument	dst		1699916	2					
ANR	1699954	Identifier	dst		1699916	0					
ANR	1699955	Argument	dstw		1699916	3					
ANR	1699956	Identifier	dstw		1699916	0					
ANR	1699957	Argument	src		1699916	4					
ANR	1699958	Identifier	src		1699916	0					
ANR	1699959	Argument	srcw		1699916	5					
ANR	1699960	Identifier	srcw		1699916	0					
ANR	1699961	Argument	type		1699916	6					
ANR	1699962	Identifier	type		1699916	0					
ANR	1699963	ExpressionStatement	SLJIT_UNUSED_ARG ( srcw )	2664:1:76035:76057	1699916	5	True				
ANR	1699964	CallExpression	SLJIT_UNUSED_ARG ( srcw )		1699916	0					
ANR	1699965	Callee	SLJIT_UNUSED_ARG		1699916	0					
ANR	1699966	Identifier	SLJIT_UNUSED_ARG		1699916	0					
ANR	1699967	ArgumentList	srcw		1699916	1					
ANR	1699968	Argument	srcw		1699916	0					
ANR	1699969	Identifier	srcw		1699916	0					
ANR	1699970	IfStatement	if ( dst == SLJIT_UNUSED )		1699916	6					
ANR	1699971	Condition	dst == SLJIT_UNUSED	2666:5:76065:76083	1699916	0	True				
ANR	1699972	EqualityExpression	dst == SLJIT_UNUSED		1699916	0		==			
ANR	1699973	Identifier	dst		1699916	0					
ANR	1699974	Identifier	SLJIT_UNUSED		1699916	1					
ANR	1699975	ReturnStatement	return SLJIT_SUCCESS ;	2667:2:76088:76108	1699916	1	True				
ANR	1699976	Identifier	SLJIT_SUCCESS		1699916	0					
ANR	1699977	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2669:1:76112:76142	1699916	7	True				
ANR	1699978	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1699916	0					
ANR	1699979	Callee	ADJUST_LOCAL_OFFSET		1699916	0					
ANR	1699980	Identifier	ADJUST_LOCAL_OFFSET		1699916	0					
ANR	1699981	ArgumentList	dst		1699916	1					
ANR	1699982	Argument	dst		1699916	0					
ANR	1699983	Identifier	dst		1699916	0					
ANR	1699984	Argument	dstw		1699916	1					
ANR	1699985	Identifier	dstw		1699916	0					
ANR	1699986	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2670:1:76145:76181	1699916	8	True				
ANR	1699987	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1699916	0					
ANR	1699988	Callee	CHECK_EXTRA_REGS		1699916	0					
ANR	1699989	Identifier	CHECK_EXTRA_REGS		1699916	0					
ANR	1699990	ArgumentList	dst		1699916	1					
ANR	1699991	Argument	dst		1699916	0					
ANR	1699992	Identifier	dst		1699916	0					
ANR	1699993	Argument	dstw		1699916	1					
ANR	1699994	Identifier	dstw		1699916	0					
ANR	1699995	Argument	( void ) 0		1699916	2					
ANR	1699996	CastExpression	( void ) 0		1699916	0					
ANR	1699997	CastTarget	void		1699916	0					
ANR	1699998	PrimaryExpression	0		1699916	1					
ANR	1699999	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> flags_saved ) )		1699916	9					
ANR	1700000	Condition	SLJIT_UNLIKELY ( compiler -> flags_saved )	2671:5:76188:76224	1699916	0	True				
ANR	1700001	CallExpression	SLJIT_UNLIKELY ( compiler -> flags_saved )		1699916	0					
ANR	1700002	Callee	SLJIT_UNLIKELY		1699916	0					
ANR	1700003	Identifier	SLJIT_UNLIKELY		1699916	0					
ANR	1700004	ArgumentList	compiler -> flags_saved		1699916	1					
ANR	1700005	Argument	compiler -> flags_saved		1699916	0					
ANR	1700006	PtrMemberAccess	compiler -> flags_saved		1699916	0					
ANR	1700007	Identifier	compiler		1699916	0					
ANR	1700008	Identifier	flags_saved		1699916	1					
ANR	1700009	ExpressionStatement	"FAIL_IF ( emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS ) )"	2672:2:76229:76289	1699916	1	True				
ANR	1700010	CallExpression	"FAIL_IF ( emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS ) )"		1699916	0					
ANR	1700011	Callee	FAIL_IF		1699916	0					
ANR	1700012	Identifier	FAIL_IF		1699916	0					
ANR	1700013	ArgumentList	"emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS )"		1699916	1					
ANR	1700014	Argument	"emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS )"		1699916	0					
ANR	1700015	CallExpression	"emit_restore_flags ( compiler , op & SLJIT_KEEP_FLAGS )"		1699916	0					
ANR	1700016	Callee	emit_restore_flags		1699916	0					
ANR	1700017	Identifier	emit_restore_flags		1699916	0					
ANR	1700018	ArgumentList	compiler		1699916	1					
ANR	1700019	Argument	compiler		1699916	0					
ANR	1700020	Identifier	compiler		1699916	0					
ANR	1700021	Argument	op & SLJIT_KEEP_FLAGS		1699916	1					
ANR	1700022	BitAndExpression	op & SLJIT_KEEP_FLAGS		1699916	0		&			
ANR	1700023	Identifier	op		1699916	0					
ANR	1700024	Identifier	SLJIT_KEEP_FLAGS		1699916	1					
ANR	1700025	ExpressionStatement	type &= 0xff	2674:1:76293:76305	1699916	10	True				
ANR	1700026	AssignmentExpression	type &= 0xff		1699916	0		&=			
ANR	1700027	Identifier	type		1699916	0					
ANR	1700028	PrimaryExpression	0xff		1699916	1					
ANR	1700029	ExpressionStatement	cond_set = get_jump_code ( type ) + 0x10	2676:1:76335:76372	1699916	11	True				
ANR	1700030	AssignmentExpression	cond_set = get_jump_code ( type ) + 0x10		1699916	0		=			
ANR	1700031	Identifier	cond_set		1699916	0					
ANR	1700032	AdditiveExpression	get_jump_code ( type ) + 0x10		1699916	1		+			
ANR	1700033	CallExpression	get_jump_code ( type )		1699916	0					
ANR	1700034	Callee	get_jump_code		1699916	0					
ANR	1700035	Identifier	get_jump_code		1699916	0					
ANR	1700036	ArgumentList	type		1699916	1					
ANR	1700037	Argument	type		1699916	0					
ANR	1700038	Identifier	type		1699916	0					
ANR	1700039	PrimaryExpression	0x10		1699916	1					
ANR	1700040	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_OR && ! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src )		1699916	12					
ANR	1700041	Condition	GET_OPCODE ( op ) == SLJIT_OR && ! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src	2679:5:76437:76518	1699916	0	True				
ANR	1700042	AndExpression	GET_OPCODE ( op ) == SLJIT_OR && ! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src		1699916	0		&&			
ANR	1700043	EqualityExpression	GET_OPCODE ( op ) == SLJIT_OR		1699916	0		==			
ANR	1700044	CallExpression	GET_OPCODE ( op )		1699916	0					
ANR	1700045	Callee	GET_OPCODE		1699916	0					
ANR	1700046	Identifier	GET_OPCODE		1699916	0					
ANR	1700047	ArgumentList	op		1699916	1					
ANR	1700048	Argument	op		1699916	0					
ANR	1700049	Identifier	op		1699916	0					
ANR	1700050	Identifier	SLJIT_OR		1699916	1					
ANR	1700051	AndExpression	! GET_ALL_FLAGS ( op ) && FAST_IS_REG ( dst ) && dst == src		1699916	1		&&			
ANR	1700052	UnaryOperationExpression	! GET_ALL_FLAGS ( op )		1699916	0					
ANR	1700053	UnaryOperator	!		1699916	0					
ANR	1700054	CallExpression	GET_ALL_FLAGS ( op )		1699916	1					
ANR	1700055	Callee	GET_ALL_FLAGS		1699916	0					
ANR	1700056	Identifier	GET_ALL_FLAGS		1699916	0					
ANR	1700057	ArgumentList	op		1699916	1					
ANR	1700058	Argument	op		1699916	0					
ANR	1700059	Identifier	op		1699916	0					
ANR	1700060	AndExpression	FAST_IS_REG ( dst ) && dst == src		1699916	1		&&			
ANR	1700061	CallExpression	FAST_IS_REG ( dst )		1699916	0					
ANR	1700062	Callee	FAST_IS_REG		1699916	0					
ANR	1700063	Identifier	FAST_IS_REG		1699916	0					
ANR	1700064	ArgumentList	dst		1699916	1					
ANR	1700065	Argument	dst		1699916	0					
ANR	1700066	Identifier	dst		1699916	0					
ANR	1700067	EqualityExpression	dst == src		1699916	1		==			
ANR	1700068	Identifier	dst		1699916	0					
ANR	1700069	Identifier	src		1699916	1					
ANR	1700070	CompoundStatement		29:89:815:815	1699916	1					
ANR	1700071	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 3 )"	2680:2:76525:76574	1699916	0	True				
ANR	1700072	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 3 )"		1699916	0		=			
ANR	1700073	Identifier	inst		1699916	0					
ANR	1700074	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 3 )"		1699916	1					
ANR	1700075	CastTarget	sljit_ub *		1699916	0					
ANR	1700076	CallExpression	"ensure_buf ( compiler , 1 + 4 + 3 )"		1699916	1					
ANR	1700077	Callee	ensure_buf		1699916	0					
ANR	1700078	Identifier	ensure_buf		1699916	0					
ANR	1700079	ArgumentList	compiler		1699916	1					
ANR	1700080	Argument	compiler		1699916	0					
ANR	1700081	Identifier	compiler		1699916	0					
ANR	1700082	Argument	1 + 4 + 3		1699916	1					
ANR	1700083	AdditiveExpression	1 + 4 + 3		1699916	0		+			
ANR	1700084	PrimaryExpression	1		1699916	0					
ANR	1700085	AdditiveExpression	4 + 3		1699916	1		+			
ANR	1700086	PrimaryExpression	4		1699916	0					
ANR	1700087	PrimaryExpression	3		1699916	1					
ANR	1700088	ExpressionStatement	FAIL_IF ( ! inst )	2681:2:76578:76592	1699916	1	True				
ANR	1700089	CallExpression	FAIL_IF ( ! inst )		1699916	0					
ANR	1700090	Callee	FAIL_IF		1699916	0					
ANR	1700091	Identifier	FAIL_IF		1699916	0					
ANR	1700092	ArgumentList	! inst		1699916	1					
ANR	1700093	Argument	! inst		1699916	0					
ANR	1700094	UnaryOperationExpression	! inst		1699916	0					
ANR	1700095	UnaryOperator	!		1699916	0					
ANR	1700096	Identifier	inst		1699916	1					
ANR	1700097	ExpressionStatement	INC_SIZE ( 4 + 3 )	2682:2:76596:76611	1699916	2	True				
ANR	1700098	CallExpression	INC_SIZE ( 4 + 3 )		1699916	0					
ANR	1700099	Callee	INC_SIZE		1699916	0					
ANR	1700100	Identifier	INC_SIZE		1699916	0					
ANR	1700101	ArgumentList	4 + 3		1699916	1					
ANR	1700102	Argument	4 + 3		1699916	0					
ANR	1700103	AdditiveExpression	4 + 3		1699916	0		+			
ANR	1700104	PrimaryExpression	4		1699916	0					
ANR	1700105	PrimaryExpression	3		1699916	1					
ANR	1700106	ExpressionStatement	* inst ++ = ( reg_map [ TMP_REG1 ] <= 7 ) ? REX : REX_B	2684:2:76661:76709	1699916	3	True				
ANR	1700107	AssignmentExpression	* inst ++ = ( reg_map [ TMP_REG1 ] <= 7 ) ? REX : REX_B		1699916	0		=			
ANR	1700108	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700109	UnaryOperator	*		1699916	0					
ANR	1700110	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700111	Identifier	inst		1699916	0					
ANR	1700112	IncDec	++		1699916	1					
ANR	1700113	ConditionalExpression	( reg_map [ TMP_REG1 ] <= 7 ) ? REX : REX_B		1699916	1					
ANR	1700114	Condition	reg_map [ TMP_REG1 ] <= 7		1699916	0					
ANR	1700115	RelationalExpression	reg_map [ TMP_REG1 ] <= 7		1699916	0		<=			
ANR	1700116	ArrayIndexing	reg_map [ TMP_REG1 ]		1699916	0					
ANR	1700117	Identifier	reg_map		1699916	0					
ANR	1700118	Identifier	TMP_REG1		1699916	1					
ANR	1700119	PrimaryExpression	7		1699916	1					
ANR	1700120	Identifier	REX		1699916	1					
ANR	1700121	Identifier	REX_B		1699916	2					
ANR	1700122	ExpressionStatement	* inst ++ = GROUP_0F	2685:2:76713:76731	1699916	4	True				
ANR	1700123	AssignmentExpression	* inst ++ = GROUP_0F		1699916	0		=			
ANR	1700124	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700125	UnaryOperator	*		1699916	0					
ANR	1700126	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700127	Identifier	inst		1699916	0					
ANR	1700128	IncDec	++		1699916	1					
ANR	1700129	Identifier	GROUP_0F		1699916	1					
ANR	1700130	ExpressionStatement	* inst ++ = cond_set	2686:2:76735:76753	1699916	5	True				
ANR	1700131	AssignmentExpression	* inst ++ = cond_set		1699916	0		=			
ANR	1700132	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700133	UnaryOperator	*		1699916	0					
ANR	1700134	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700135	Identifier	inst		1699916	0					
ANR	1700136	IncDec	++		1699916	1					
ANR	1700137	Identifier	cond_set		1699916	1					
ANR	1700138	ExpressionStatement	* inst ++ = MOD_REG | reg_lmap [ TMP_REG1 ]	2687:2:76757:76795	1699916	6	True				
ANR	1700139	AssignmentExpression	* inst ++ = MOD_REG | reg_lmap [ TMP_REG1 ]		1699916	0		=			
ANR	1700140	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700141	UnaryOperator	*		1699916	0					
ANR	1700142	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700143	Identifier	inst		1699916	0					
ANR	1700144	IncDec	++		1699916	1					
ANR	1700145	InclusiveOrExpression	MOD_REG | reg_lmap [ TMP_REG1 ]		1699916	1		|			
ANR	1700146	Identifier	MOD_REG		1699916	0					
ANR	1700147	ArrayIndexing	reg_lmap [ TMP_REG1 ]		1699916	1					
ANR	1700148	Identifier	reg_lmap		1699916	0					
ANR	1700149	Identifier	TMP_REG1		1699916	1					
ANR	1700150	ExpressionStatement	* inst ++ = REX | ( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )	2688:2:76799:76885	1699916	7	True				
ANR	1700151	AssignmentExpression	* inst ++ = REX | ( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )		1699916	0		=			
ANR	1700152	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700153	UnaryOperator	*		1699916	0					
ANR	1700154	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700155	Identifier	inst		1699916	0					
ANR	1700156	IncDec	++		1699916	1					
ANR	1700157	InclusiveOrExpression	REX | ( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )		1699916	1		|			
ANR	1700158	Identifier	REX		1699916	0					
ANR	1700159	InclusiveOrExpression	( reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R ) | ( reg_map [ dst ] <= 7 ? 0 : REX_B )		1699916	1		|			
ANR	1700160	ConditionalExpression	reg_map [ TMP_REG1 ] <= 7 ? 0 : REX_R		1699916	0					
ANR	1700161	Condition	reg_map [ TMP_REG1 ] <= 7		1699916	0					
ANR	1700162	RelationalExpression	reg_map [ TMP_REG1 ] <= 7		1699916	0		<=			
ANR	1700163	ArrayIndexing	reg_map [ TMP_REG1 ]		1699916	0					
ANR	1700164	Identifier	reg_map		1699916	0					
ANR	1700165	Identifier	TMP_REG1		1699916	1					
ANR	1700166	PrimaryExpression	7		1699916	1					
ANR	1700167	PrimaryExpression	0		1699916	1					
ANR	1700168	Identifier	REX_R		1699916	2					
ANR	1700169	ConditionalExpression	reg_map [ dst ] <= 7 ? 0 : REX_B		1699916	1					
ANR	1700170	Condition	reg_map [ dst ] <= 7		1699916	0					
ANR	1700171	RelationalExpression	reg_map [ dst ] <= 7		1699916	0		<=			
ANR	1700172	ArrayIndexing	reg_map [ dst ]		1699916	0					
ANR	1700173	Identifier	reg_map		1699916	0					
ANR	1700174	Identifier	dst		1699916	1					
ANR	1700175	PrimaryExpression	7		1699916	1					
ANR	1700176	PrimaryExpression	0		1699916	1					
ANR	1700177	Identifier	REX_B		1699916	2					
ANR	1700178	ExpressionStatement	* inst ++ = OR_rm8_r8	2689:2:76889:76908	1699916	8	True				
ANR	1700179	AssignmentExpression	* inst ++ = OR_rm8_r8		1699916	0		=			
ANR	1700180	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700181	UnaryOperator	*		1699916	0					
ANR	1700182	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700183	Identifier	inst		1699916	0					
ANR	1700184	IncDec	++		1699916	1					
ANR	1700185	Identifier	OR_rm8_r8		1699916	1					
ANR	1700186	ExpressionStatement	* inst ++ = MOD_REG | ( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]	2690:2:76912:76973	1699916	9	True				
ANR	1700187	AssignmentExpression	* inst ++ = MOD_REG | ( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]		1699916	0		=			
ANR	1700188	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700189	UnaryOperator	*		1699916	0					
ANR	1700190	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700191	Identifier	inst		1699916	0					
ANR	1700192	IncDec	++		1699916	1					
ANR	1700193	InclusiveOrExpression	MOD_REG | ( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]		1699916	1		|			
ANR	1700194	Identifier	MOD_REG		1699916	0					
ANR	1700195	InclusiveOrExpression	( reg_lmap [ TMP_REG1 ] << 3 ) | reg_lmap [ dst ]		1699916	1		|			
ANR	1700196	ShiftExpression	reg_lmap [ TMP_REG1 ] << 3		1699916	0		<<			
ANR	1700197	ArrayIndexing	reg_lmap [ TMP_REG1 ]		1699916	0					
ANR	1700198	Identifier	reg_lmap		1699916	0					
ANR	1700199	Identifier	TMP_REG1		1699916	1					
ANR	1700200	PrimaryExpression	3		1699916	1					
ANR	1700201	ArrayIndexing	reg_lmap [ dst ]		1699916	1					
ANR	1700202	Identifier	reg_lmap		1699916	0					
ANR	1700203	Identifier	dst		1699916	1					
ANR	1700204	ReturnStatement	return SLJIT_SUCCESS ;	2691:2:76977:76997	1699916	10	True				
ANR	1700205	Identifier	SLJIT_SUCCESS		1699916	0					
ANR	1700206	ExpressionStatement	reg = ( op == SLJIT_MOV && FAST_IS_REG ( dst ) ) ? dst : TMP_REG1	2694:1:77004:77064	1699916	13	True				
ANR	1700207	AssignmentExpression	reg = ( op == SLJIT_MOV && FAST_IS_REG ( dst ) ) ? dst : TMP_REG1		1699916	0		=			
ANR	1700208	Identifier	reg		1699916	0					
ANR	1700209	ConditionalExpression	( op == SLJIT_MOV && FAST_IS_REG ( dst ) ) ? dst : TMP_REG1		1699916	1					
ANR	1700210	Condition	op == SLJIT_MOV && FAST_IS_REG ( dst )		1699916	0					
ANR	1700211	AndExpression	op == SLJIT_MOV && FAST_IS_REG ( dst )		1699916	0		&&			
ANR	1700212	EqualityExpression	op == SLJIT_MOV		1699916	0		==			
ANR	1700213	Identifier	op		1699916	0					
ANR	1700214	Identifier	SLJIT_MOV		1699916	1					
ANR	1700215	CallExpression	FAST_IS_REG ( dst )		1699916	1					
ANR	1700216	Callee	FAST_IS_REG		1699916	0					
ANR	1700217	Identifier	FAST_IS_REG		1699916	0					
ANR	1700218	ArgumentList	dst		1699916	1					
ANR	1700219	Argument	dst		1699916	0					
ANR	1700220	Identifier	dst		1699916	0					
ANR	1700221	Identifier	dst		1699916	1					
ANR	1700222	Identifier	TMP_REG1		1699916	2					
ANR	1700223	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 4 )"	2696:1:77068:77117	1699916	14	True				
ANR	1700224	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 4 )"		1699916	0		=			
ANR	1700225	Identifier	inst		1699916	0					
ANR	1700226	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 1 + 4 + 4 )"		1699916	1					
ANR	1700227	CastTarget	sljit_ub *		1699916	0					
ANR	1700228	CallExpression	"ensure_buf ( compiler , 1 + 4 + 4 )"		1699916	1					
ANR	1700229	Callee	ensure_buf		1699916	0					
ANR	1700230	Identifier	ensure_buf		1699916	0					
ANR	1700231	ArgumentList	compiler		1699916	1					
ANR	1700232	Argument	compiler		1699916	0					
ANR	1700233	Identifier	compiler		1699916	0					
ANR	1700234	Argument	1 + 4 + 4		1699916	1					
ANR	1700235	AdditiveExpression	1 + 4 + 4		1699916	0		+			
ANR	1700236	PrimaryExpression	1		1699916	0					
ANR	1700237	AdditiveExpression	4 + 4		1699916	1		+			
ANR	1700238	PrimaryExpression	4		1699916	0					
ANR	1700239	PrimaryExpression	4		1699916	1					
ANR	1700240	ExpressionStatement	FAIL_IF ( ! inst )	2697:1:77120:77134	1699916	15	True				
ANR	1700241	CallExpression	FAIL_IF ( ! inst )		1699916	0					
ANR	1700242	Callee	FAIL_IF		1699916	0					
ANR	1700243	Identifier	FAIL_IF		1699916	0					
ANR	1700244	ArgumentList	! inst		1699916	1					
ANR	1700245	Argument	! inst		1699916	0					
ANR	1700246	UnaryOperationExpression	! inst		1699916	0					
ANR	1700247	UnaryOperator	!		1699916	0					
ANR	1700248	Identifier	inst		1699916	1					
ANR	1700249	ExpressionStatement	INC_SIZE ( 4 + 4 )	2698:1:77137:77152	1699916	16	True				
ANR	1700250	CallExpression	INC_SIZE ( 4 + 4 )		1699916	0					
ANR	1700251	Callee	INC_SIZE		1699916	0					
ANR	1700252	Identifier	INC_SIZE		1699916	0					
ANR	1700253	ArgumentList	4 + 4		1699916	1					
ANR	1700254	Argument	4 + 4		1699916	0					
ANR	1700255	AdditiveExpression	4 + 4		1699916	0		+			
ANR	1700256	PrimaryExpression	4		1699916	0					
ANR	1700257	PrimaryExpression	4		1699916	1					
ANR	1700258	ExpressionStatement	* inst ++ = ( reg_map [ reg ] <= 7 ) ? REX : REX_B	2700:1:77200:77243	1699916	17	True				
ANR	1700259	AssignmentExpression	* inst ++ = ( reg_map [ reg ] <= 7 ) ? REX : REX_B		1699916	0		=			
ANR	1700260	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700261	UnaryOperator	*		1699916	0					
ANR	1700262	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700263	Identifier	inst		1699916	0					
ANR	1700264	IncDec	++		1699916	1					
ANR	1700265	ConditionalExpression	( reg_map [ reg ] <= 7 ) ? REX : REX_B		1699916	1					
ANR	1700266	Condition	reg_map [ reg ] <= 7		1699916	0					
ANR	1700267	RelationalExpression	reg_map [ reg ] <= 7		1699916	0		<=			
ANR	1700268	ArrayIndexing	reg_map [ reg ]		1699916	0					
ANR	1700269	Identifier	reg_map		1699916	0					
ANR	1700270	Identifier	reg		1699916	1					
ANR	1700271	PrimaryExpression	7		1699916	1					
ANR	1700272	Identifier	REX		1699916	1					
ANR	1700273	Identifier	REX_B		1699916	2					
ANR	1700274	ExpressionStatement	* inst ++ = GROUP_0F	2701:1:77246:77264	1699916	18	True				
ANR	1700275	AssignmentExpression	* inst ++ = GROUP_0F		1699916	0		=			
ANR	1700276	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700277	UnaryOperator	*		1699916	0					
ANR	1700278	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700279	Identifier	inst		1699916	0					
ANR	1700280	IncDec	++		1699916	1					
ANR	1700281	Identifier	GROUP_0F		1699916	1					
ANR	1700282	ExpressionStatement	* inst ++ = cond_set	2702:1:77267:77285	1699916	19	True				
ANR	1700283	AssignmentExpression	* inst ++ = cond_set		1699916	0		=			
ANR	1700284	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700285	UnaryOperator	*		1699916	0					
ANR	1700286	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700287	Identifier	inst		1699916	0					
ANR	1700288	IncDec	++		1699916	1					
ANR	1700289	Identifier	cond_set		1699916	1					
ANR	1700290	ExpressionStatement	* inst ++ = MOD_REG | reg_lmap [ reg ]	2703:1:77288:77321	1699916	20	True				
ANR	1700291	AssignmentExpression	* inst ++ = MOD_REG | reg_lmap [ reg ]		1699916	0		=			
ANR	1700292	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700293	UnaryOperator	*		1699916	0					
ANR	1700294	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700295	Identifier	inst		1699916	0					
ANR	1700296	IncDec	++		1699916	1					
ANR	1700297	InclusiveOrExpression	MOD_REG | reg_lmap [ reg ]		1699916	1		|			
ANR	1700298	Identifier	MOD_REG		1699916	0					
ANR	1700299	ArrayIndexing	reg_lmap [ reg ]		1699916	1					
ANR	1700300	Identifier	reg_lmap		1699916	0					
ANR	1700301	Identifier	reg		1699916	1					
ANR	1700302	ExpressionStatement	* inst ++ = REX_W | ( reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R ) )	2704:1:77324:77383	1699916	21	True				
ANR	1700303	AssignmentExpression	* inst ++ = REX_W | ( reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R ) )		1699916	0		=			
ANR	1700304	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700305	UnaryOperator	*		1699916	0					
ANR	1700306	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700307	Identifier	inst		1699916	0					
ANR	1700308	IncDec	++		1699916	1					
ANR	1700309	InclusiveOrExpression	REX_W | ( reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R ) )		1699916	1		|			
ANR	1700310	Identifier	REX_W		1699916	0					
ANR	1700311	ConditionalExpression	reg_map [ reg ] <= 7 ? 0 : ( REX_B | REX_R )		1699916	1					
ANR	1700312	Condition	reg_map [ reg ] <= 7		1699916	0					
ANR	1700313	RelationalExpression	reg_map [ reg ] <= 7		1699916	0		<=			
ANR	1700314	ArrayIndexing	reg_map [ reg ]		1699916	0					
ANR	1700315	Identifier	reg_map		1699916	0					
ANR	1700316	Identifier	reg		1699916	1					
ANR	1700317	PrimaryExpression	7		1699916	1					
ANR	1700318	PrimaryExpression	0		1699916	1					
ANR	1700319	InclusiveOrExpression	REX_B | REX_R		1699916	2		|			
ANR	1700320	Identifier	REX_B		1699916	0					
ANR	1700321	Identifier	REX_R		1699916	1					
ANR	1700322	ExpressionStatement	* inst ++ = GROUP_0F	2705:1:77386:77404	1699916	22	True				
ANR	1700323	AssignmentExpression	* inst ++ = GROUP_0F		1699916	0		=			
ANR	1700324	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700325	UnaryOperator	*		1699916	0					
ANR	1700326	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700327	Identifier	inst		1699916	0					
ANR	1700328	IncDec	++		1699916	1					
ANR	1700329	Identifier	GROUP_0F		1699916	1					
ANR	1700330	ExpressionStatement	* inst ++ = MOVZX_r_rm8	2706:1:77407:77428	1699916	23	True				
ANR	1700331	AssignmentExpression	* inst ++ = MOVZX_r_rm8		1699916	0		=			
ANR	1700332	UnaryOperationExpression	* inst ++		1699916	0					
ANR	1700333	UnaryOperator	*		1699916	0					
ANR	1700334	PostIncDecOperationExpression	inst ++		1699916	1					
ANR	1700335	Identifier	inst		1699916	0					
ANR	1700336	IncDec	++		1699916	1					
ANR	1700337	Identifier	MOVZX_r_rm8		1699916	1					
ANR	1700338	ExpressionStatement	* inst = MOD_REG | ( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]	2707:1:77431:77485	1699916	24	True				
ANR	1700339	AssignmentExpression	* inst = MOD_REG | ( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]		1699916	0		=			
ANR	1700340	UnaryOperationExpression	* inst		1699916	0					
ANR	1700341	UnaryOperator	*		1699916	0					
ANR	1700342	Identifier	inst		1699916	1					
ANR	1700343	InclusiveOrExpression	MOD_REG | ( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]		1699916	1		|			
ANR	1700344	Identifier	MOD_REG		1699916	0					
ANR	1700345	InclusiveOrExpression	( reg_lmap [ reg ] << 3 ) | reg_lmap [ reg ]		1699916	1		|			
ANR	1700346	ShiftExpression	reg_lmap [ reg ] << 3		1699916	0		<<			
ANR	1700347	ArrayIndexing	reg_lmap [ reg ]		1699916	0					
ANR	1700348	Identifier	reg_lmap		1699916	0					
ANR	1700349	Identifier	reg		1699916	1					
ANR	1700350	PrimaryExpression	3		1699916	1					
ANR	1700351	ArrayIndexing	reg_lmap [ reg ]		1699916	1					
ANR	1700352	Identifier	reg_lmap		1699916	0					
ANR	1700353	Identifier	reg		1699916	1					
ANR	1700354	IfStatement	if ( reg != TMP_REG1 )		1699916	25					
ANR	1700355	Condition	reg != TMP_REG1	2709:5:77493:77507	1699916	0	True				
ANR	1700356	EqualityExpression	reg != TMP_REG1		1699916	0		!=			
ANR	1700357	Identifier	reg		1699916	0					
ANR	1700358	Identifier	TMP_REG1		1699916	1					
ANR	1700359	ReturnStatement	return SLJIT_SUCCESS ;	2710:2:77512:77532	1699916	1	True				
ANR	1700360	Identifier	SLJIT_SUCCESS		1699916	0					
ANR	1700361	IfStatement	if ( GET_OPCODE ( op ) < SLJIT_ADD )		1699916	26					
ANR	1700362	Condition	GET_OPCODE ( op ) < SLJIT_ADD	2712:5:77540:77565	1699916	0	True				
ANR	1700363	RelationalExpression	GET_OPCODE ( op ) < SLJIT_ADD		1699916	0		<			
ANR	1700364	CallExpression	GET_OPCODE ( op )		1699916	0					
ANR	1700365	Callee	GET_OPCODE		1699916	0					
ANR	1700366	Identifier	GET_OPCODE		1699916	0					
ANR	1700367	ArgumentList	op		1699916	1					
ANR	1700368	Argument	op		1699916	0					
ANR	1700369	Identifier	op		1699916	0					
ANR	1700370	Identifier	SLJIT_ADD		1699916	1					
ANR	1700371	CompoundStatement		62:33:1862:1862	1699916	1					
ANR	1700372	ExpressionStatement	compiler -> mode32 = GET_OPCODE ( op ) != SLJIT_MOV	2713:2:77572:77618	1699916	0	True				
ANR	1700373	AssignmentExpression	compiler -> mode32 = GET_OPCODE ( op ) != SLJIT_MOV		1699916	0		=			
ANR	1700374	PtrMemberAccess	compiler -> mode32		1699916	0					
ANR	1700375	Identifier	compiler		1699916	0					
ANR	1700376	Identifier	mode32		1699916	1					
ANR	1700377	EqualityExpression	GET_OPCODE ( op ) != SLJIT_MOV		1699916	1		!=			
ANR	1700378	CallExpression	GET_OPCODE ( op )		1699916	0					
ANR	1700379	Callee	GET_OPCODE		1699916	0					
ANR	1700380	Identifier	GET_OPCODE		1699916	0					
ANR	1700381	ArgumentList	op		1699916	1					
ANR	1700382	Argument	op		1699916	0					
ANR	1700383	Identifier	op		1699916	0					
ANR	1700384	Identifier	SLJIT_MOV		1699916	1					
ANR	1700385	ReturnStatement	"return emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) ;"	2714:2:77622:77671	1699916	1	True				
ANR	1700386	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1699916	0					
ANR	1700387	Callee	emit_mov		1699916	0					
ANR	1700388	Identifier	emit_mov		1699916	0					
ANR	1700389	ArgumentList	compiler		1699916	1					
ANR	1700390	Argument	compiler		1699916	0					
ANR	1700391	Identifier	compiler		1699916	0					
ANR	1700392	Argument	dst		1699916	1					
ANR	1700393	Identifier	dst		1699916	0					
ANR	1700394	Argument	dstw		1699916	2					
ANR	1700395	Identifier	dstw		1699916	0					
ANR	1700396	Argument	TMP_REG1		1699916	3					
ANR	1700397	Identifier	TMP_REG1		1699916	0					
ANR	1700398	Argument	0		1699916	4					
ANR	1700399	PrimaryExpression	0		1699916	0					
ANR	1700400	Statement	||	2717:2:77725:77726	1699916	27	True				
ANR	1700401	Statement	(	2717:5:77728:77728	1699916	28	True				
ANR	1700402	Statement	defined	2717:6:77729:77735	1699916	29	True				
ANR	1700403	Statement	SLJIT_ARGUMENT_CHECKS	2717:14:77737:77757	1699916	30	True				
ANR	1700404	Statement	&&	2717:36:77759:77760	1699916	31	True				
ANR	1700405	Statement	SLJIT_ARGUMENT_CHECKS	2717:39:77762:77782	1699916	32	True				
ANR	1700406	Statement	)	2717:60:77783:77783	1699916	33	True				
ANR	1700407	ExpressionStatement	compiler -> skip_checks = 1	2718:1:77786:77811	1699916	34	True				
ANR	1700408	AssignmentExpression	compiler -> skip_checks = 1		1699916	0		=			
ANR	1700409	PtrMemberAccess	compiler -> skip_checks		1699916	0					
ANR	1700410	Identifier	compiler		1699916	0					
ANR	1700411	Identifier	skip_checks		1699916	1					
ANR	1700412	PrimaryExpression	1		1699916	1					
ANR	1700413	ReturnStatement	"return sljit_emit_op2 ( compiler , op , dst , dstw , dst , dstw , TMP_REG1 , 0 ) ;"	2720:1:77821:77891	1699916	35	True				
ANR	1700414	CallExpression	"sljit_emit_op2 ( compiler , op , dst , dstw , dst , dstw , TMP_REG1 , 0 )"		1699916	0					
ANR	1700415	Callee	sljit_emit_op2		1699916	0					
ANR	1700416	Identifier	sljit_emit_op2		1699916	0					
ANR	1700417	ArgumentList	compiler		1699916	1					
ANR	1700418	Argument	compiler		1699916	0					
ANR	1700419	Identifier	compiler		1699916	0					
ANR	1700420	Argument	op		1699916	1					
ANR	1700421	Identifier	op		1699916	0					
ANR	1700422	Argument	dst		1699916	2					
ANR	1700423	Identifier	dst		1699916	0					
ANR	1700424	Argument	dstw		1699916	3					
ANR	1700425	Identifier	dstw		1699916	0					
ANR	1700426	Argument	dst		1699916	4					
ANR	1700427	Identifier	dst		1699916	0					
ANR	1700428	Argument	dstw		1699916	5					
ANR	1700429	Identifier	dstw		1699916	0					
ANR	1700430	Argument	TMP_REG1		1699916	6					
ANR	1700431	Identifier	TMP_REG1		1699916	0					
ANR	1700432	Argument	0		1699916	7					
ANR	1700433	PrimaryExpression	0		1699916	0					
ANR	1700434	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1699916	1					
ANR	1700435	Identifier	sljit_emit_op_flags		1699916	2					
ANR	1700436	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1699916	3					
ANR	1700437	Parameter	struct sljit_compiler * compiler	2647:54:75583:75613	1699916	0	True				
ANR	1700438	ParameterType	struct sljit_compiler *		1699916	0					
ANR	1700439	Identifier	compiler		1699916	1					
ANR	1700440	Parameter	sljit_si op	2647:87:75616:75626	1699916	1	True				
ANR	1700441	ParameterType	sljit_si		1699916	0					
ANR	1700442	Identifier	op		1699916	1					
ANR	1700443	Parameter	sljit_si dst	2648:1:75630:75641	1699916	2	True				
ANR	1700444	ParameterType	sljit_si		1699916	0					
ANR	1700445	Identifier	dst		1699916	1					
ANR	1700446	Parameter	sljit_sw dstw	2648:15:75644:75656	1699916	3	True				
ANR	1700447	ParameterType	sljit_sw		1699916	0					
ANR	1700448	Identifier	dstw		1699916	1					
ANR	1700449	Parameter	sljit_si src	2649:1:75660:75671	1699916	4	True				
ANR	1700450	ParameterType	sljit_si		1699916	0					
ANR	1700451	Identifier	src		1699916	1					
ANR	1700452	Parameter	sljit_sw srcw	2649:15:75674:75686	1699916	5	True				
ANR	1700453	ParameterType	sljit_sw		1699916	0					
ANR	1700454	Identifier	srcw		1699916	1					
ANR	1700455	Parameter	sljit_si type	2650:1:75690:75702	1699916	6	True				
ANR	1700456	ParameterType	sljit_si		1699916	0					
ANR	1700457	Identifier	type		1699916	1					
ANR	1700458	CFGEntryNode	ENTRY		1699916		True				
ANR	1700459	CFGExitNode	EXIT		1699916		True				
ANR	1700460	Symbol	TMP_REG1		1699916						
ANR	1700461	Symbol	sljit_emit_op2		1699916						
ANR	1700462	Symbol	dst		1699916						
ANR	1700463	Symbol	REX		1699916						
ANR	1700464	Symbol	SLJIT_MOV		1699916						
ANR	1700465	Symbol	compiler -> flags_saved		1699916						
ANR	1700466	Symbol	SLJIT_OR		1699916						
ANR	1700467	Symbol	* inst ++		1699916						
ANR	1700468	Symbol	reg_map		1699916						
ANR	1700469	Symbol	SLJIT_ADD		1699916						
ANR	1700470	Symbol	* compiler		1699916						
ANR	1700471	Symbol	get_jump_code		1699916						
ANR	1700472	Symbol	type		1699916						
ANR	1700473	Symbol	MOVZX_r_rm8		1699916						
ANR	1700474	Symbol	cond_set		1699916						
ANR	1700475	Symbol	GET_OPCODE		1699916						
ANR	1700476	Symbol	* dst		1699916						
ANR	1700477	Symbol	GET_ALL_FLAGS		1699916						
ANR	1700478	Symbol	SLJIT_KEEP_FLAGS		1699916						
ANR	1700479	Symbol	reg		1699916						
ANR	1700480	Symbol	OR_rm8_r8		1699916						
ANR	1700481	Symbol	* reg_lmap		1699916						
ANR	1700482	Symbol	* TMP_REG1		1699916						
ANR	1700483	Symbol	compiler		1699916						
ANR	1700484	Symbol	check_sljit_emit_op_flags		1699916						
ANR	1700485	Symbol	op		1699916						
ANR	1700486	Symbol	GROUP_0F		1699916						
ANR	1700487	Symbol	FAST_IS_REG		1699916						
ANR	1700488	Symbol	* inst		1699916						
ANR	1700489	Symbol	src		1699916						
ANR	1700490	Symbol	srcw		1699916						
ANR	1700491	Symbol	SLJIT_SUCCESS		1699916						
ANR	1700492	Symbol	REX_B		1699916						
ANR	1700493	Symbol	* reg_map		1699916						
ANR	1700494	Symbol	MOD_REG		1699916						
ANR	1700495	Symbol	reg_lmap		1699916						
ANR	1700496	Symbol	emit_mov		1699916						
ANR	1700497	Symbol	SLJIT_UNUSED		1699916						
ANR	1700498	Symbol	inst		1699916						
ANR	1700499	Symbol	ensure_buf		1699916						
ANR	1700500	Symbol	compiler -> skip_checks		1699916						
ANR	1700501	Symbol	REX_W		1699916						
ANR	1700502	Symbol	compiler -> mode32		1699916						
ANR	1700503	Symbol	emit_restore_flags		1699916						
ANR	1700504	Symbol	REX_R		1699916						
ANR	1700505	Symbol	dstw		1699916						
ANR	1700506	Symbol	* reg		1699916						
ANR	1700507	Symbol	SLJIT_UNLIKELY		1699916						
ANR	1700508	Function	sljit_get_local_base	2835:0:81322:82368							
ANR	1700509	FunctionDef	"sljit_get_local_base (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset)"		1700508	0					
ANR	1700510	CompoundStatement		2836:0:81456:82368	1700508	0					
ANR	1700511	ExpressionStatement	CHECK_ERROR ( )	2837:1:81459:81472	1700508	0	True				
ANR	1700512	CallExpression	CHECK_ERROR ( )		1700508	0					
ANR	1700513	Callee	CHECK_ERROR		1700508	0					
ANR	1700514	Identifier	CHECK_ERROR		1700508	0					
ANR	1700515	ArgumentList			1700508	1					
ANR	1700516	ExpressionStatement	"CHECK ( check_sljit_get_local_base ( compiler , dst , dstw , offset ) )"	2838:1:81475:81537	1700508	1	True				
ANR	1700517	CallExpression	"CHECK ( check_sljit_get_local_base ( compiler , dst , dstw , offset ) )"		1700508	0					
ANR	1700518	Callee	CHECK		1700508	0					
ANR	1700519	Identifier	CHECK		1700508	0					
ANR	1700520	ArgumentList	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1700508	1					
ANR	1700521	Argument	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1700508	0					
ANR	1700522	CallExpression	"check_sljit_get_local_base ( compiler , dst , dstw , offset )"		1700508	0					
ANR	1700523	Callee	check_sljit_get_local_base		1700508	0					
ANR	1700524	Identifier	check_sljit_get_local_base		1700508	0					
ANR	1700525	ArgumentList	compiler		1700508	1					
ANR	1700526	Argument	compiler		1700508	0					
ANR	1700527	Identifier	compiler		1700508	0					
ANR	1700528	Argument	dst		1700508	1					
ANR	1700529	Identifier	dst		1700508	0					
ANR	1700530	Argument	dstw		1700508	2					
ANR	1700531	Identifier	dstw		1700508	0					
ANR	1700532	Argument	offset		1700508	3					
ANR	1700533	Identifier	offset		1700508	0					
ANR	1700534	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2839:1:81540:81570	1700508	2	True				
ANR	1700535	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1700508	0					
ANR	1700536	Callee	ADJUST_LOCAL_OFFSET		1700508	0					
ANR	1700537	Identifier	ADJUST_LOCAL_OFFSET		1700508	0					
ANR	1700538	ArgumentList	dst		1700508	1					
ANR	1700539	Argument	dst		1700508	0					
ANR	1700540	Identifier	dst		1700508	0					
ANR	1700541	Argument	dstw		1700508	1					
ANR	1700542	Identifier	dstw		1700508	0					
ANR	1700543	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2841:1:81574:81610	1700508	3	True				
ANR	1700544	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1700508	0					
ANR	1700545	Callee	CHECK_EXTRA_REGS		1700508	0					
ANR	1700546	Identifier	CHECK_EXTRA_REGS		1700508	0					
ANR	1700547	ArgumentList	dst		1700508	1					
ANR	1700548	Argument	dst		1700508	0					
ANR	1700549	Identifier	dst		1700508	0					
ANR	1700550	Argument	dstw		1700508	1					
ANR	1700551	Identifier	dstw		1700508	0					
ANR	1700552	Argument	( void ) 0		1700508	2					
ANR	1700553	CastExpression	( void ) 0		1700508	0					
ANR	1700554	CastTarget	void		1700508	0					
ANR	1700555	PrimaryExpression	0		1700508	1					
ANR	1700556	ExpressionStatement	compiler -> mode32 = 0	2844:1:81671:81691	1700508	4	True				
ANR	1700557	AssignmentExpression	compiler -> mode32 = 0		1700508	0		=			
ANR	1700558	PtrMemberAccess	compiler -> mode32		1700508	0					
ANR	1700559	Identifier	compiler		1700508	0					
ANR	1700560	Identifier	mode32		1700508	1					
ANR	1700561	PrimaryExpression	0		1700508	1					
ANR	1700562	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( SLJIT_MEM1 ( SLJIT_SP ) , offset )"	2847:1:81702:81751	1700508	5	True				
ANR	1700563	CallExpression	"ADJUST_LOCAL_OFFSET ( SLJIT_MEM1 ( SLJIT_SP ) , offset )"		1700508	0					
ANR	1700564	Callee	ADJUST_LOCAL_OFFSET		1700508	0					
ANR	1700565	Identifier	ADJUST_LOCAL_OFFSET		1700508	0					
ANR	1700566	ArgumentList	SLJIT_MEM1 ( SLJIT_SP )		1700508	1					
ANR	1700567	Argument	SLJIT_MEM1 ( SLJIT_SP )		1700508	0					
ANR	1700568	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1700508	0					
ANR	1700569	Callee	SLJIT_MEM1		1700508	0					
ANR	1700570	Identifier	SLJIT_MEM1		1700508	0					
ANR	1700571	ArgumentList	SLJIT_SP		1700508	1					
ANR	1700572	Argument	SLJIT_SP		1700508	0					
ANR	1700573	Identifier	SLJIT_SP		1700508	0					
ANR	1700574	Argument	offset		1700508	1					
ANR	1700575	Identifier	offset		1700508	0					
ANR	1700576	IfStatement	if ( NOT_HALFWORD ( offset ) )		1700508	6					
ANR	1700577	Condition	NOT_HALFWORD ( offset )	2850:5:81816:81835	1700508	0	True				
ANR	1700578	CallExpression	NOT_HALFWORD ( offset )		1700508	0					
ANR	1700579	Callee	NOT_HALFWORD		1700508	0					
ANR	1700580	Identifier	NOT_HALFWORD		1700508	0					
ANR	1700581	ArgumentList	offset		1700508	1					
ANR	1700582	Argument	offset		1700508	0					
ANR	1700583	Identifier	offset		1700508	0					
ANR	1700584	CompoundStatement		15:27:381:381	1700508	1					
ANR	1700585	ExpressionStatement	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG1 , offset ) )"	2851:2:81842:81894	1700508	0	True				
ANR	1700586	CallExpression	"FAIL_IF ( emit_load_imm64 ( compiler , TMP_REG1 , offset ) )"		1700508	0					
ANR	1700587	Callee	FAIL_IF		1700508	0					
ANR	1700588	Identifier	FAIL_IF		1700508	0					
ANR	1700589	ArgumentList	"emit_load_imm64 ( compiler , TMP_REG1 , offset )"		1700508	1					
ANR	1700590	Argument	"emit_load_imm64 ( compiler , TMP_REG1 , offset )"		1700508	0					
ANR	1700591	CallExpression	"emit_load_imm64 ( compiler , TMP_REG1 , offset )"		1700508	0					
ANR	1700592	Callee	emit_load_imm64		1700508	0					
ANR	1700593	Identifier	emit_load_imm64		1700508	0					
ANR	1700594	ArgumentList	compiler		1700508	1					
ANR	1700595	Argument	compiler		1700508	0					
ANR	1700596	Identifier	compiler		1700508	0					
ANR	1700597	Argument	TMP_REG1		1700508	1					
ANR	1700598	Identifier	TMP_REG1		1700508	0					
ANR	1700599	Argument	offset		1700508	2					
ANR	1700600	Identifier	offset		1700508	0					
ANR	1700601	ExpressionStatement	"SLJIT_ASSERT ( emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED )"	2853:2:81939:82058	1700508	1	True				
ANR	1700602	CallExpression	"SLJIT_ASSERT ( emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED )"		1700508	0					
ANR	1700603	Callee	SLJIT_ASSERT		1700508	0					
ANR	1700604	Identifier	SLJIT_ASSERT		1700508	0					
ANR	1700605	ArgumentList	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED"		1700508	1					
ANR	1700606	Argument	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED"		1700508	0					
ANR	1700607	EqualityExpression	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 ) != SLJIT_ERR_UNSUPPORTED"		1700508	0		!=			
ANR	1700608	CallExpression	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , TMP_REG1 , 0 )"		1700508	0					
ANR	1700609	Callee	emit_lea_binary		1700508	0					
ANR	1700610	Identifier	emit_lea_binary		1700508	0					
ANR	1700611	ArgumentList	compiler		1700508	1					
ANR	1700612	Argument	compiler		1700508	0					
ANR	1700613	Identifier	compiler		1700508	0					
ANR	1700614	Argument	SLJIT_KEEP_FLAGS		1700508	1					
ANR	1700615	Identifier	SLJIT_KEEP_FLAGS		1700508	0					
ANR	1700616	Argument	dst		1700508	2					
ANR	1700617	Identifier	dst		1700508	0					
ANR	1700618	Argument	dstw		1700508	3					
ANR	1700619	Identifier	dstw		1700508	0					
ANR	1700620	Argument	SLJIT_SP		1700508	4					
ANR	1700621	Identifier	SLJIT_SP		1700508	0					
ANR	1700622	Argument	0		1700508	5					
ANR	1700623	PrimaryExpression	0		1700508	0					
ANR	1700624	Argument	TMP_REG1		1700508	6					
ANR	1700625	Identifier	TMP_REG1		1700508	0					
ANR	1700626	Argument	0		1700508	7					
ANR	1700627	PrimaryExpression	0		1700508	0					
ANR	1700628	Identifier	SLJIT_ERR_UNSUPPORTED		1700508	1					
ANR	1700629	ReturnStatement	return compiler -> error ;	2854:2:82062:82084	1700508	2	True				
ANR	1700630	PtrMemberAccess	compiler -> error		1700508	0					
ANR	1700631	Identifier	compiler		1700508	0					
ANR	1700632	Identifier	error		1700508	1					
ANR	1700633	IfStatement	if ( offset != 0 )		1700508	7					
ANR	1700634	Condition	offset != 0	2861:5:82206:82216	1700508	0	True				
ANR	1700635	EqualityExpression	offset != 0		1700508	0		!=			
ANR	1700636	Identifier	offset		1700508	0					
ANR	1700637	PrimaryExpression	0		1700508	1					
ANR	1700638	ReturnStatement	"return emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , SLJIT_IMM , offset ) ;"	2862:2:82221:82314	1700508	1	True				
ANR	1700639	CallExpression	"emit_lea_binary ( compiler , SLJIT_KEEP_FLAGS , dst , dstw , SLJIT_SP , 0 , SLJIT_IMM , offset )"		1700508	0					
ANR	1700640	Callee	emit_lea_binary		1700508	0					
ANR	1700641	Identifier	emit_lea_binary		1700508	0					
ANR	1700642	ArgumentList	compiler		1700508	1					
ANR	1700643	Argument	compiler		1700508	0					
ANR	1700644	Identifier	compiler		1700508	0					
ANR	1700645	Argument	SLJIT_KEEP_FLAGS		1700508	1					
ANR	1700646	Identifier	SLJIT_KEEP_FLAGS		1700508	0					
ANR	1700647	Argument	dst		1700508	2					
ANR	1700648	Identifier	dst		1700508	0					
ANR	1700649	Argument	dstw		1700508	3					
ANR	1700650	Identifier	dstw		1700508	0					
ANR	1700651	Argument	SLJIT_SP		1700508	4					
ANR	1700652	Identifier	SLJIT_SP		1700508	0					
ANR	1700653	Argument	0		1700508	5					
ANR	1700654	PrimaryExpression	0		1700508	0					
ANR	1700655	Argument	SLJIT_IMM		1700508	6					
ANR	1700656	Identifier	SLJIT_IMM		1700508	0					
ANR	1700657	Argument	offset		1700508	7					
ANR	1700658	Identifier	offset		1700508	0					
ANR	1700659	ReturnStatement	"return emit_mov ( compiler , dst , dstw , SLJIT_SP , 0 ) ;"	2863:1:82317:82366	1700508	8	True				
ANR	1700660	CallExpression	"emit_mov ( compiler , dst , dstw , SLJIT_SP , 0 )"		1700508	0					
ANR	1700661	Callee	emit_mov		1700508	0					
ANR	1700662	Identifier	emit_mov		1700508	0					
ANR	1700663	ArgumentList	compiler		1700508	1					
ANR	1700664	Argument	compiler		1700508	0					
ANR	1700665	Identifier	compiler		1700508	0					
ANR	1700666	Argument	dst		1700508	1					
ANR	1700667	Identifier	dst		1700508	0					
ANR	1700668	Argument	dstw		1700508	2					
ANR	1700669	Identifier	dstw		1700508	0					
ANR	1700670	Argument	SLJIT_SP		1700508	3					
ANR	1700671	Identifier	SLJIT_SP		1700508	0					
ANR	1700672	Argument	0		1700508	4					
ANR	1700673	PrimaryExpression	0		1700508	0					
ANR	1700674	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1700508	1					
ANR	1700675	Identifier	sljit_get_local_base		1700508	2					
ANR	1700676	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw offset"		1700508	3					
ANR	1700677	Parameter	struct sljit_compiler * compiler	2835:55:81377:81407	1700508	0	True				
ANR	1700678	ParameterType	struct sljit_compiler *		1700508	0					
ANR	1700679	Identifier	compiler		1700508	1					
ANR	1700680	Parameter	sljit_si dst	2835:88:81410:81421	1700508	1	True				
ANR	1700681	ParameterType	sljit_si		1700508	0					
ANR	1700682	Identifier	dst		1700508	1					
ANR	1700683	Parameter	sljit_sw dstw	2835:102:81424:81436	1700508	2	True				
ANR	1700684	ParameterType	sljit_sw		1700508	0					
ANR	1700685	Identifier	dstw		1700508	1					
ANR	1700686	Parameter	sljit_sw offset	2835:117:81439:81453	1700508	3	True				
ANR	1700687	ParameterType	sljit_sw		1700508	0					
ANR	1700688	Identifier	offset		1700508	1					
ANR	1700689	CFGEntryNode	ENTRY		1700508		True				
ANR	1700690	CFGExitNode	EXIT		1700508		True				
ANR	1700691	Symbol	emit_load_imm64		1700508						
ANR	1700692	Symbol	TMP_REG1		1700508						
ANR	1700693	Symbol	dst		1700508						
ANR	1700694	Symbol	offset		1700508						
ANR	1700695	Symbol	NOT_HALFWORD		1700508						
ANR	1700696	Symbol	emit_lea_binary		1700508						
ANR	1700697	Symbol	check_sljit_get_local_base		1700508						
ANR	1700698	Symbol	* compiler		1700508						
ANR	1700699	Symbol	SLJIT_MEM1		1700508						
ANR	1700700	Symbol	SLJIT_SP		1700508						
ANR	1700701	Symbol	SLJIT_IMM		1700508						
ANR	1700702	Symbol	emit_mov		1700508						
ANR	1700703	Symbol	SLJIT_KEEP_FLAGS		1700508						
ANR	1700704	Symbol	compiler -> mode32		1700508						
ANR	1700705	Symbol	compiler		1700508						
ANR	1700706	Symbol	dstw		1700508						
ANR	1700707	Symbol	compiler -> error		1700508						
ANR	1700708	Symbol	SLJIT_ERR_UNSUPPORTED		1700508						
ANR	1700709	Function	sljit_emit_const	2866:25:82396:83527							
ANR	1700710	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1700709	0					
ANR	1700711	CompoundStatement		2867:0:82516:83527	1700709	0					
ANR	1700712	IdentifierDeclStatement	sljit_ub * inst ;	2868:1:82519:82533	1700709	0	True				
ANR	1700713	IdentifierDecl	* inst		1700709	0					
ANR	1700714	IdentifierDeclType	sljit_ub *		1700709	0					
ANR	1700715	Identifier	inst		1700709	1					
ANR	1700716	IdentifierDeclStatement	struct sljit_const * const_ ;	2869:1:82536:82562	1700709	1	True				
ANR	1700717	IdentifierDecl	* const_		1700709	0					
ANR	1700718	IdentifierDeclType	struct sljit_const *		1700709	0					
ANR	1700719	Identifier	const_		1700709	1					
ANR	1700720	IdentifierDeclStatement	sljit_si reg ;	2871:1:82622:82634	1700709	2	True				
ANR	1700721	IdentifierDecl	reg		1700709	0					
ANR	1700722	IdentifierDeclType	sljit_si		1700709	0					
ANR	1700723	Identifier	reg		1700709	1					
ANR	1700724	ExpressionStatement	CHECK_ERROR_PTR ( )	2874:1:82645:82662	1700709	3	True				
ANR	1700725	CallExpression	CHECK_ERROR_PTR ( )		1700709	0					
ANR	1700726	Callee	CHECK_ERROR_PTR		1700709	0					
ANR	1700727	Identifier	CHECK_ERROR_PTR		1700709	0					
ANR	1700728	ArgumentList			1700709	1					
ANR	1700729	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2875:1:82665:82731	1700709	4	True				
ANR	1700730	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1700709	0					
ANR	1700731	Callee	CHECK_PTR		1700709	0					
ANR	1700732	Identifier	CHECK_PTR		1700709	0					
ANR	1700733	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1700709	1					
ANR	1700734	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1700709	0					
ANR	1700735	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1700709	0					
ANR	1700736	Callee	check_sljit_emit_const		1700709	0					
ANR	1700737	Identifier	check_sljit_emit_const		1700709	0					
ANR	1700738	ArgumentList	compiler		1700709	1					
ANR	1700739	Argument	compiler		1700709	0					
ANR	1700740	Identifier	compiler		1700709	0					
ANR	1700741	Argument	dst		1700709	1					
ANR	1700742	Identifier	dst		1700709	0					
ANR	1700743	Argument	dstw		1700709	2					
ANR	1700744	Identifier	dstw		1700709	0					
ANR	1700745	Argument	init_value		1700709	3					
ANR	1700746	Identifier	init_value		1700709	0					
ANR	1700747	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2876:1:82734:82764	1700709	5	True				
ANR	1700748	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1700709	0					
ANR	1700749	Callee	ADJUST_LOCAL_OFFSET		1700709	0					
ANR	1700750	Identifier	ADJUST_LOCAL_OFFSET		1700709	0					
ANR	1700751	ArgumentList	dst		1700709	1					
ANR	1700752	Argument	dst		1700709	0					
ANR	1700753	Identifier	dst		1700709	0					
ANR	1700754	Argument	dstw		1700709	1					
ANR	1700755	Identifier	dstw		1700709	0					
ANR	1700756	ExpressionStatement	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"	2878:1:82768:82804	1700709	6	True				
ANR	1700757	CallExpression	"CHECK_EXTRA_REGS ( dst , dstw , ( void ) 0 )"		1700709	0					
ANR	1700758	Callee	CHECK_EXTRA_REGS		1700709	0					
ANR	1700759	Identifier	CHECK_EXTRA_REGS		1700709	0					
ANR	1700760	ArgumentList	dst		1700709	1					
ANR	1700761	Argument	dst		1700709	0					
ANR	1700762	Identifier	dst		1700709	0					
ANR	1700763	Argument	dstw		1700709	1					
ANR	1700764	Identifier	dstw		1700709	0					
ANR	1700765	Argument	( void ) 0		1700709	2					
ANR	1700766	CastExpression	( void ) 0		1700709	0					
ANR	1700767	CastTarget	void		1700709	0					
ANR	1700768	PrimaryExpression	0		1700709	1					
ANR	1700769	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2880:1:82808:82887	1700709	7	True				
ANR	1700770	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1700709	0		=			
ANR	1700771	Identifier	const_		1700709	0					
ANR	1700772	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1700709	1					
ANR	1700773	CastTarget	struct sljit_const *		1700709	0					
ANR	1700774	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1700709	1					
ANR	1700775	Callee	ensure_abuf		1700709	0					
ANR	1700776	Identifier	ensure_abuf		1700709	0					
ANR	1700777	ArgumentList	compiler		1700709	1					
ANR	1700778	Argument	compiler		1700709	0					
ANR	1700779	Identifier	compiler		1700709	0					
ANR	1700780	Argument	sizeof ( struct sljit_const )		1700709	1					
ANR	1700781	SizeofExpression	sizeof ( struct sljit_const )		1700709	0					
ANR	1700782	Sizeof	sizeof		1700709	0					
ANR	1700783	SizeofOperand	struct sljit_const		1700709	1					
ANR	1700784	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2881:1:82890:82910	1700709	8	True				
ANR	1700785	CallExpression	PTR_FAIL_IF ( ! const_ )		1700709	0					
ANR	1700786	Callee	PTR_FAIL_IF		1700709	0					
ANR	1700787	Identifier	PTR_FAIL_IF		1700709	0					
ANR	1700788	ArgumentList	! const_		1700709	1					
ANR	1700789	Argument	! const_		1700709	0					
ANR	1700790	UnaryOperationExpression	! const_		1700709	0					
ANR	1700791	UnaryOperator	!		1700709	0					
ANR	1700792	Identifier	const_		1700709	1					
ANR	1700793	ExpressionStatement	"set_const ( const_ , compiler )"	2882:1:82913:82940	1700709	9	True				
ANR	1700794	CallExpression	"set_const ( const_ , compiler )"		1700709	0					
ANR	1700795	Callee	set_const		1700709	0					
ANR	1700796	Identifier	set_const		1700709	0					
ANR	1700797	ArgumentList	const_		1700709	1					
ANR	1700798	Argument	const_		1700709	0					
ANR	1700799	Identifier	const_		1700709	0					
ANR	1700800	Argument	compiler		1700709	1					
ANR	1700801	Identifier	compiler		1700709	0					
ANR	1700802	ExpressionStatement	compiler -> mode32 = 0	2885:1:83001:83021	1700709	10	True				
ANR	1700803	AssignmentExpression	compiler -> mode32 = 0		1700709	0		=			
ANR	1700804	PtrMemberAccess	compiler -> mode32		1700709	0					
ANR	1700805	Identifier	compiler		1700709	0					
ANR	1700806	Identifier	mode32		1700709	1					
ANR	1700807	PrimaryExpression	0		1700709	1					
ANR	1700808	ExpressionStatement	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG1	2886:1:83024:83063	1700709	11	True				
ANR	1700809	AssignmentExpression	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1700709	0		=			
ANR	1700810	Identifier	reg		1700709	0					
ANR	1700811	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG1		1700709	1					
ANR	1700812	Condition	SLOW_IS_REG ( dst )		1700709	0					
ANR	1700813	CallExpression	SLOW_IS_REG ( dst )		1700709	0					
ANR	1700814	Callee	SLOW_IS_REG		1700709	0					
ANR	1700815	Identifier	SLOW_IS_REG		1700709	0					
ANR	1700816	ArgumentList	dst		1700709	1					
ANR	1700817	Argument	dst		1700709	0					
ANR	1700818	Identifier	dst		1700709	0					
ANR	1700819	Identifier	dst		1700709	1					
ANR	1700820	Identifier	TMP_REG1		1700709	2					
ANR	1700821	IfStatement	"if ( emit_load_imm64 ( compiler , reg , init_value ) )"		1700709	12					
ANR	1700822	Condition	"emit_load_imm64 ( compiler , reg , init_value )"	2888:5:83071:83112	1700709	0	True				
ANR	1700823	CallExpression	"emit_load_imm64 ( compiler , reg , init_value )"		1700709	0					
ANR	1700824	Callee	emit_load_imm64		1700709	0					
ANR	1700825	Identifier	emit_load_imm64		1700709	0					
ANR	1700826	ArgumentList	compiler		1700709	1					
ANR	1700827	Argument	compiler		1700709	0					
ANR	1700828	Identifier	compiler		1700709	0					
ANR	1700829	Argument	reg		1700709	1					
ANR	1700830	Identifier	reg		1700709	0					
ANR	1700831	Argument	init_value		1700709	2					
ANR	1700832	Identifier	init_value		1700709	0					
ANR	1700833	ReturnStatement	return NULL ;	2889:2:83117:83128	1700709	1	True				
ANR	1700834	Identifier	NULL		1700709	0					
ANR	1700835	ExpressionStatement	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"	2898:1:83264:83305	1700709	13	True				
ANR	1700836	AssignmentExpression	"inst = ( sljit_ub * ) ensure_buf ( compiler , 2 )"		1700709	0		=			
ANR	1700837	Identifier	inst		1700709	0					
ANR	1700838	CastExpression	"( sljit_ub * ) ensure_buf ( compiler , 2 )"		1700709	1					
ANR	1700839	CastTarget	sljit_ub *		1700709	0					
ANR	1700840	CallExpression	"ensure_buf ( compiler , 2 )"		1700709	1					
ANR	1700841	Callee	ensure_buf		1700709	0					
ANR	1700842	Identifier	ensure_buf		1700709	0					
ANR	1700843	ArgumentList	compiler		1700709	1					
ANR	1700844	Argument	compiler		1700709	0					
ANR	1700845	Identifier	compiler		1700709	0					
ANR	1700846	Argument	2		1700709	1					
ANR	1700847	PrimaryExpression	2		1700709	0					
ANR	1700848	ExpressionStatement	PTR_FAIL_IF ( ! inst )	2899:1:83308:83326	1700709	14	True				
ANR	1700849	CallExpression	PTR_FAIL_IF ( ! inst )		1700709	0					
ANR	1700850	Callee	PTR_FAIL_IF		1700709	0					
ANR	1700851	Identifier	PTR_FAIL_IF		1700709	0					
ANR	1700852	ArgumentList	! inst		1700709	1					
ANR	1700853	Argument	! inst		1700709	0					
ANR	1700854	UnaryOperationExpression	! inst		1700709	0					
ANR	1700855	UnaryOperator	!		1700709	0					
ANR	1700856	Identifier	inst		1700709	1					
ANR	1700857	ExpressionStatement	* inst ++ = 0	2901:1:83330:83341	1700709	15	True				
ANR	1700858	AssignmentExpression	* inst ++ = 0		1700709	0		=			
ANR	1700859	UnaryOperationExpression	* inst ++		1700709	0					
ANR	1700860	UnaryOperator	*		1700709	0					
ANR	1700861	PostIncDecOperationExpression	inst ++		1700709	1					
ANR	1700862	Identifier	inst		1700709	0					
ANR	1700863	IncDec	++		1700709	1					
ANR	1700864	PrimaryExpression	0		1700709	1					
ANR	1700865	ExpressionStatement	* inst ++ = 1	2902:1:83344:83355	1700709	16	True				
ANR	1700866	AssignmentExpression	* inst ++ = 1		1700709	0		=			
ANR	1700867	UnaryOperationExpression	* inst ++		1700709	0					
ANR	1700868	UnaryOperator	*		1700709	0					
ANR	1700869	PostIncDecOperationExpression	inst ++		1700709	1					
ANR	1700870	Identifier	inst		1700709	0					
ANR	1700871	IncDec	++		1700709	1					
ANR	1700872	PrimaryExpression	1		1700709	1					
ANR	1700873	IfStatement	if ( dst & SLJIT_MEM )		1700709	17					
ANR	1700874	Condition	dst & SLJIT_MEM	2905:5:83420:83434	1700709	0	True				
ANR	1700875	BitAndExpression	dst & SLJIT_MEM		1700709	0		&			
ANR	1700876	Identifier	dst		1700709	0					
ANR	1700877	Identifier	SLJIT_MEM		1700709	1					
ANR	1700878	IfStatement	"if ( emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 ) )"		1700709	1					
ANR	1700879	Condition	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"	2906:6:83443:83484	1700709	0	True				
ANR	1700880	CallExpression	"emit_mov ( compiler , dst , dstw , TMP_REG1 , 0 )"		1700709	0					
ANR	1700881	Callee	emit_mov		1700709	0					
ANR	1700882	Identifier	emit_mov		1700709	0					
ANR	1700883	ArgumentList	compiler		1700709	1					
ANR	1700884	Argument	compiler		1700709	0					
ANR	1700885	Identifier	compiler		1700709	0					
ANR	1700886	Argument	dst		1700709	1					
ANR	1700887	Identifier	dst		1700709	0					
ANR	1700888	Argument	dstw		1700709	2					
ANR	1700889	Identifier	dstw		1700709	0					
ANR	1700890	Argument	TMP_REG1		1700709	3					
ANR	1700891	Identifier	TMP_REG1		1700709	0					
ANR	1700892	Argument	0		1700709	4					
ANR	1700893	PrimaryExpression	0		1700709	0					
ANR	1700894	ReturnStatement	return NULL ;	2907:3:83490:83501	1700709	1	True				
ANR	1700895	Identifier	NULL		1700709	0					
ANR	1700896	ReturnStatement	return const_ ;	2910:1:83512:83525	1700709	18	True				
ANR	1700897	Identifier	const_		1700709	0					
ANR	1700898	ReturnType	struct sljit_const *		1700709	1					
ANR	1700899	Identifier	sljit_emit_const		1700709	2					
ANR	1700900	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1700709	3					
ANR	1700901	Parameter	struct sljit_compiler * compiler	2866:62:82433:82463	1700709	0	True				
ANR	1700902	ParameterType	struct sljit_compiler *		1700709	0					
ANR	1700903	Identifier	compiler		1700709	1					
ANR	1700904	Parameter	sljit_si dst	2866:95:82466:82477	1700709	1	True				
ANR	1700905	ParameterType	sljit_si		1700709	0					
ANR	1700906	Identifier	dst		1700709	1					
ANR	1700907	Parameter	sljit_sw dstw	2866:109:82480:82492	1700709	2	True				
ANR	1700908	ParameterType	sljit_sw		1700709	0					
ANR	1700909	Identifier	dstw		1700709	1					
ANR	1700910	Parameter	sljit_sw init_value	2866:124:82495:82513	1700709	3	True				
ANR	1700911	ParameterType	sljit_sw		1700709	0					
ANR	1700912	Identifier	init_value		1700709	1					
ANR	1700913	CFGEntryNode	ENTRY		1700709		True				
ANR	1700914	CFGExitNode	EXIT		1700709		True				
ANR	1700915	Symbol	check_sljit_emit_const		1700709						
ANR	1700916	Symbol	emit_load_imm64		1700709						
ANR	1700917	Symbol	TMP_REG1		1700709						
ANR	1700918	Symbol	const_		1700709						
ANR	1700919	Symbol	NULL		1700709						
ANR	1700920	Symbol	dst		1700709						
ANR	1700921	Symbol	SLJIT_MEM		1700709						
ANR	1700922	Symbol	* inst ++		1700709						
ANR	1700923	Symbol	SLOW_IS_REG		1700709						
ANR	1700924	Symbol	ensure_abuf		1700709						
ANR	1700925	Symbol	* compiler		1700709						
ANR	1700926	Symbol	emit_mov		1700709						
ANR	1700927	Symbol	reg		1700709						
ANR	1700928	Symbol	inst		1700709						
ANR	1700929	Symbol	ensure_buf		1700709						
ANR	1700930	Symbol	compiler -> mode32		1700709						
ANR	1700931	Symbol	compiler		1700709						
ANR	1700932	Symbol	init_value		1700709						
ANR	1700933	Symbol	dstw		1700709						
ANR	1700934	Function	sljit_set_jump_addr	2913:0:83530:83759							
ANR	1700935	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1700934	0					
ANR	1700936	CompoundStatement		2914:0:83614:83759	1700934	0					
ANR	1700937	ExpressionStatement	* ( sljit_sw * ) addr = new_addr - ( addr + 4 )	2916:1:83674:83714	1700934	0	True				
ANR	1700938	AssignmentExpression	* ( sljit_sw * ) addr = new_addr - ( addr + 4 )		1700934	0		=			
ANR	1700939	UnaryOperationExpression	* ( sljit_sw * ) addr		1700934	0					
ANR	1700940	UnaryOperator	*		1700934	0					
ANR	1700941	CastExpression	( sljit_sw * ) addr		1700934	1					
ANR	1700942	CastTarget	sljit_sw *		1700934	0					
ANR	1700943	Identifier	addr		1700934	1					
ANR	1700944	AdditiveExpression	new_addr - ( addr + 4 )		1700934	1		-			
ANR	1700945	Identifier	new_addr		1700934	0					
ANR	1700946	AdditiveExpression	addr + 4		1700934	1		+			
ANR	1700947	Identifier	addr		1700934	0					
ANR	1700948	PrimaryExpression	4		1700934	1					
ANR	1700949	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1700934	1					
ANR	1700950	Identifier	sljit_set_jump_addr		1700934	2					
ANR	1700951	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1700934	3					
ANR	1700952	Parameter	sljit_uw addr	2913:50:83580:83592	1700934	0	True				
ANR	1700953	ParameterType	sljit_uw		1700934	0					
ANR	1700954	Identifier	addr		1700934	1					
ANR	1700955	Parameter	sljit_uw new_addr	2913:65:83595:83611	1700934	1	True				
ANR	1700956	ParameterType	sljit_uw		1700934	0					
ANR	1700957	Identifier	new_addr		1700934	1					
ANR	1700958	CFGEntryNode	ENTRY		1700934		True				
ANR	1700959	CFGExitNode	EXIT		1700934		True				
ANR	1700960	Symbol	* ( sljit_sw * ) addr		1700934						
ANR	1700961	Symbol	* addr		1700934						
ANR	1700962	Symbol	addr		1700934						
ANR	1700963	Symbol	new_addr		1700934						
ANR	1700964	Function	sljit_set_const	2922:0:83762:83882							
ANR	1700965	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1700964	0					
ANR	1700966	CompoundStatement		2923:0:83846:83882	1700964	0					
ANR	1700967	ExpressionStatement	* ( sljit_sw * ) addr = new_constant	2924:1:83849:83880	1700964	0	True				
ANR	1700968	AssignmentExpression	* ( sljit_sw * ) addr = new_constant		1700964	0		=			
ANR	1700969	UnaryOperationExpression	* ( sljit_sw * ) addr		1700964	0					
ANR	1700970	UnaryOperator	*		1700964	0					
ANR	1700971	CastExpression	( sljit_sw * ) addr		1700964	1					
ANR	1700972	CastTarget	sljit_sw *		1700964	0					
ANR	1700973	Identifier	addr		1700964	1					
ANR	1700974	Identifier	new_constant		1700964	1					
ANR	1700975	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1700964	1					
ANR	1700976	Identifier	sljit_set_const		1700964	2					
ANR	1700977	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1700964	3					
ANR	1700978	Parameter	sljit_uw addr	2922:46:83808:83820	1700964	0	True				
ANR	1700979	ParameterType	sljit_uw		1700964	0					
ANR	1700980	Identifier	addr		1700964	1					
ANR	1700981	Parameter	sljit_sw new_constant	2922:61:83823:83843	1700964	1	True				
ANR	1700982	ParameterType	sljit_sw		1700964	0					
ANR	1700983	Identifier	new_constant		1700964	1					
ANR	1700984	CFGEntryNode	ENTRY		1700964		True				
ANR	1700985	CFGExitNode	EXIT		1700964		True				
ANR	1700986	Symbol	new_constant		1700964						
ANR	1700987	Symbol	* ( sljit_sw * ) addr		1700964						
ANR	1700988	Symbol	* addr		1700964						
ANR	1700989	Symbol	addr		1700964						
