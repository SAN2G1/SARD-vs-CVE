command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	349964	File	data/converged/CVE-2015-8617_php-src/Zend_zend_strtod.c								
ANR	349965	Function	Bug	201:0:10597:10671							
ANR	349966	FunctionDef	Bug (const char * message)		349965	0					
ANR	349967	CompoundStatement		201:37:10634:10671	349965	0					
ANR	349968	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , message )"	202:1:10637:10669	349965	0	True				
ANR	349969	CallExpression	"fprintf ( stderr , ""%s\\n"" , message )"		349965	0					
ANR	349970	Callee	fprintf		349965	0					
ANR	349971	Identifier	fprintf		349965	0					
ANR	349972	ArgumentList	stderr		349965	1					
ANR	349973	Argument	stderr		349965	0					
ANR	349974	Identifier	stderr		349965	0					
ANR	349975	Argument	"""%s\\n"""		349965	1					
ANR	349976	PrimaryExpression	"""%s\\n"""		349965	0					
ANR	349977	Argument	message		349965	2					
ANR	349978	Identifier	message		349965	0					
ANR	349979	ReturnType	static void		349965	1					
ANR	349980	Identifier	Bug		349965	2					
ANR	349981	ParameterList	const char * message		349965	3					
ANR	349982	Parameter	const char * message	201:16:10613:10631	349965	0	True				
ANR	349983	ParameterType	const char *		349965	0					
ANR	349984	Identifier	message		349965	1					
ANR	349985	CFGEntryNode	ENTRY		349965		True				
ANR	349986	CFGExitNode	EXIT		349965		True				
ANR	349987	Symbol	message		349965						
ANR	349988	Symbol	stderr		349965						
ANR	349989	DeclStmt									
ANR	349990	Decl							extern char	extern char * ( )	MALLOC
ANR	349991	DeclStmt									
ANR	349992	Decl							extern void	extern void * ( size_t )	MALLOC
ANR	349993	DeclStmt									
ANR	349994	Decl							double	double [ PRIVATE_mem ]	private_mem
ANR	349995	Decl							double	double *	pmem_next
ANR	349996	ClassDef	<unnamed>	311:8:12428:12461							
ANR	349997	DeclStmt									
ANR	349998	Decl							double	double	d
ANR	349999	DeclStmt									
ANR	350000	Decl							ULong	ULong [ 2 ]	L
ANR	350001	DeclStmt									
ANR	350002	Decl									U
ANR	350003	DeclStmt									
ANR	350004	Decl							extern int	extern int	strtod_diglim
ANR	350005	DeclStmt									
ANR	350006	Decl							extern double	extern double ( )	rnd_prod
ANR	350007	Decl							extern double	extern double ( )	rnd_quot
ANR	350008	DeclStmt									
ANR	350009	Decl							extern double	"extern double ( double , double )"	rnd_prod
ANR	350010	Decl							extern double	"extern double ( double , double )"	rnd_quot
ANR	350011	DeclStmt									
ANR	350012	Decl							struct BCinfo	struct BCinfo	BCinfo
ANR	350013	ClassDef	BCinfo	496:1:16605:16696							
ANR	350014	DeclStmt									
ANR	350015	Decl							int	int	dp0
ANR	350016	Decl							int	int	dp1
ANR	350017	Decl							int	int	dplen
ANR	350018	Decl							int	int	dsign
ANR	350019	Decl							int	int	e0
ANR	350020	Decl							int	int	inexact
ANR	350021	Decl							int	int	nd
ANR	350022	Decl							int	int	nd0
ANR	350023	Decl							int	int	rounding
ANR	350024	Decl							int	int	scale
ANR	350025	Decl							int	int	uflchk
ANR	350026	DeclStmt									
ANR	350027	Decl							double	"double ( const char * s00 , char * * se )"	strtod
ANR	350028	DeclStmt									
ANR	350029	Decl							char	"char * ( double d , int mode , int ndigits , int * decpt , int * sign , char * * rve )"	dtoa
ANR	350030	ClassDef	Bigint	537:1:17632:17711							
ANR	350031	DeclStmt									
ANR	350032	Decl							struct Bigint	struct Bigint *	next
ANR	350033	DeclStmt									
ANR	350034	Decl							int	int	k
ANR	350035	Decl							int	int	maxwds
ANR	350036	Decl							int	int	sign
ANR	350037	Decl							int	int	wds
ANR	350038	DeclStmt									
ANR	350039	Decl							ULong	ULong [ 1 ]	x
ANR	350040	DeclStmt									
ANR	350041	Decl							struct Bigint	struct Bigint	Bigint
ANR	350042	DeclStmt									
ANR	350043	Decl							Bigint	Bigint * [ Kmax + 1 ]	freelist
ANR	350044	DeclStmt									
ANR	350045	Decl							void	void ( void )	destroy_freelist
ANR	350046	DeclStmt									
ANR	350047	Decl							MUTEX_T	MUTEX_T	dtoa_mutex
ANR	350048	DeclStmt									
ANR	350049	Decl							MUTEX_T	MUTEX_T	pow5mult_mutex
ANR	350050	Function	zend_startup_strtod	555:0:17906:18058							
ANR	350051	FunctionDef	zend_startup_strtod ()		350050	0					
ANR	350052	CompoundStatement		556:0:17955:18058	350050	0					
ANR	350053	ExpressionStatement	dtoa_mutex = tsrm_mutex_alloc ( )	558:1:17969:18000	350050	0	True				
ANR	350054	AssignmentExpression	dtoa_mutex = tsrm_mutex_alloc ( )		350050	0		=			
ANR	350055	Identifier	dtoa_mutex		350050	0					
ANR	350056	CallExpression	tsrm_mutex_alloc ( )		350050	1					
ANR	350057	Callee	tsrm_mutex_alloc		350050	0					
ANR	350058	Identifier	tsrm_mutex_alloc		350050	0					
ANR	350059	ArgumentList			350050	1					
ANR	350060	ExpressionStatement	pow5mult_mutex = tsrm_mutex_alloc ( )	559:1:18003:18038	350050	1	True				
ANR	350061	AssignmentExpression	pow5mult_mutex = tsrm_mutex_alloc ( )		350050	0		=			
ANR	350062	Identifier	pow5mult_mutex		350050	0					
ANR	350063	CallExpression	tsrm_mutex_alloc ( )		350050	1					
ANR	350064	Callee	tsrm_mutex_alloc		350050	0					
ANR	350065	Identifier	tsrm_mutex_alloc		350050	0					
ANR	350066	ArgumentList			350050	1					
ANR	350067	ReturnStatement	return 1 ;	561:1:18048:18056	350050	2	True				
ANR	350068	PrimaryExpression	1		350050	0					
ANR	350069	ReturnType	ZEND_API int		350050	1					
ANR	350070	Identifier	zend_startup_strtod		350050	2					
ANR	350071	ParameterList			350050	3					
ANR	350072	CFGEntryNode	ENTRY		350050		True				
ANR	350073	CFGExitNode	EXIT		350050		True				
ANR	350074	Symbol	dtoa_mutex		350050						
ANR	350075	Symbol	pow5mult_mutex		350050						
ANR	350076	Symbol	tsrm_mutex_alloc		350050						
ANR	350077	Function	zend_shutdown_strtod	564:0:18070:18281							
ANR	350078	FunctionDef	zend_shutdown_strtod ()		350077	0					
ANR	350079	CompoundStatement		565:0:18120:18281	350077	0					
ANR	350080	ExpressionStatement	destroy_freelist ( )	566:1:18123:18141	350077	0	True				
ANR	350081	CallExpression	destroy_freelist ( )		350077	0					
ANR	350082	Callee	destroy_freelist		350077	0					
ANR	350083	Identifier	destroy_freelist		350077	0					
ANR	350084	ArgumentList			350077	1					
ANR	350085	ExpressionStatement	tsrm_mutex_free ( dtoa_mutex )	568:1:18155:18182	350077	1	True				
ANR	350086	CallExpression	tsrm_mutex_free ( dtoa_mutex )		350077	0					
ANR	350087	Callee	tsrm_mutex_free		350077	0					
ANR	350088	Identifier	tsrm_mutex_free		350077	0					
ANR	350089	ArgumentList	dtoa_mutex		350077	1					
ANR	350090	Argument	dtoa_mutex		350077	0					
ANR	350091	Identifier	dtoa_mutex		350077	0					
ANR	350092	ExpressionStatement	dtoa_mutex = NULL	569:1:18185:18202	350077	2	True				
ANR	350093	AssignmentExpression	dtoa_mutex = NULL		350077	0		=			
ANR	350094	Identifier	dtoa_mutex		350077	0					
ANR	350095	Identifier	NULL		350077	1					
ANR	350096	ExpressionStatement	tsrm_mutex_free ( pow5mult_mutex )	571:1:18206:18237	350077	3	True				
ANR	350097	CallExpression	tsrm_mutex_free ( pow5mult_mutex )		350077	0					
ANR	350098	Callee	tsrm_mutex_free		350077	0					
ANR	350099	Identifier	tsrm_mutex_free		350077	0					
ANR	350100	ArgumentList	pow5mult_mutex		350077	1					
ANR	350101	Argument	pow5mult_mutex		350077	0					
ANR	350102	Identifier	pow5mult_mutex		350077	0					
ANR	350103	ExpressionStatement	pow5mult_mutex = NULL	572:1:18240:18261	350077	4	True				
ANR	350104	AssignmentExpression	pow5mult_mutex = NULL		350077	0		=			
ANR	350105	Identifier	pow5mult_mutex		350077	0					
ANR	350106	Identifier	NULL		350077	1					
ANR	350107	ReturnStatement	return 1 ;	574:1:18271:18279	350077	5	True				
ANR	350108	PrimaryExpression	1		350077	0					
ANR	350109	ReturnType	ZEND_API int		350077	1					
ANR	350110	Identifier	zend_shutdown_strtod		350077	2					
ANR	350111	ParameterList			350077	3					
ANR	350112	CFGEntryNode	ENTRY		350077		True				
ANR	350113	CFGExitNode	EXIT		350077		True				
ANR	350114	Symbol	NULL		350077						
ANR	350115	Symbol	dtoa_mutex		350077						
ANR	350116	Symbol	pow5mult_mutex		350077						
ANR	350117	DeclStmt									
ANR	350118	Decl							int	int	k
ANR	350119	DeclStmt									
ANR	350120	Decl							int	int	x
ANR	350121	DeclStmt									
ANR	350122	Decl							Bigint	Bigint *	rv
ANR	350123	DeclStmt									
ANR	350124	Decl							unsigned int	unsigned int	len
ANR	350125	DeclStmt									
ANR	350126	Decl							Bigint	Bigint *	v
ANR	350127	DeclStmt									
ANR	350128	Decl							Bigint	Bigint *	b
ANR	350129	DeclStmt									
ANR	350130	Decl							int	int	m
ANR	350131	Decl							int	int	a
ANR	350132	DeclStmt									
ANR	350133	Decl							int	int	i
ANR	350134	Decl							int	int	wds
ANR	350135	DeclStmt									
ANR	350136	Decl							ULong	ULong *	x
ANR	350137	DeclStmt									
ANR	350138	Decl							ULLong	ULLong	carry
ANR	350139	Decl							ULLong	ULLong	y
ANR	350140	DeclStmt									
ANR	350141	Decl							ULong	ULong	carry
ANR	350142	Decl							ULong	ULong *	x
ANR	350143	Decl							ULong	ULong	y
ANR	350144	DeclStmt									
ANR	350145	Decl							ULong	ULong	xi
ANR	350146	Decl							ULong	ULong	z
ANR	350147	DeclStmt									
ANR	350148	Decl							Bigint	Bigint *	b1
ANR	350149	DeclStmt									
ANR	350150	Decl							y	y &	FFFFFFFF
ANR	350151	DeclStmt									
ANR	350152	Decl							CONST char	CONST char *	s
ANR	350153	DeclStmt									
ANR	350154	Decl							int	int	nd0
ANR	350155	Decl							int	int	nd
ANR	350156	Decl							int	int	dplen
ANR	350157	DeclStmt									
ANR	350158	Decl							ULong	ULong	y9
ANR	350159	DeclStmt									
ANR	350160	Decl							Bigint	Bigint *	b
ANR	350161	DeclStmt									
ANR	350162	Decl							int	int	i
ANR	350163	Decl							int	int	k
ANR	350164	DeclStmt									
ANR	350165	Decl							Long	Long	x
ANR	350166	Decl							Long	Long	y
ANR	350167	DeclStmt									
ANR	350168	Decl							ULong	ULong	x
ANR	350169	DeclStmt									
ANR	350170	Decl							int	int	k
ANR	350171	DeclStmt									
ANR	350172	Decl							ULong	ULong *	y
ANR	350173	DeclStmt									
ANR	350174	Decl							int	int	k
ANR	350175	DeclStmt									
ANR	350176	Decl							ULong	ULong	x
ANR	350177	DeclStmt									
ANR	350178	Decl							int	int	i
ANR	350179	DeclStmt									
ANR	350180	Decl							Bigint	Bigint *	b
ANR	350181	DeclStmt									
ANR	350182	Decl							Bigint	Bigint *	a
ANR	350183	Decl							Bigint	Bigint *	b
ANR	350184	DeclStmt									
ANR	350185	Decl							Bigint	Bigint *	c
ANR	350186	DeclStmt									
ANR	350187	Decl							int	int	k
ANR	350188	Decl							int	int	wa
ANR	350189	Decl							int	int	wb
ANR	350190	Decl							int	int	wc
ANR	350191	DeclStmt									
ANR	350192	Decl							ULong	ULong *	x
ANR	350193	Decl							ULong	ULong *	xa
ANR	350194	Decl							ULong	ULong *	xae
ANR	350195	Decl							ULong	ULong *	xb
ANR	350196	Decl							ULong	ULong *	xbe
ANR	350197	Decl							ULong	ULong *	xc
ANR	350198	Decl							ULong	ULong *	xc0
ANR	350199	DeclStmt									
ANR	350200	Decl							ULong	ULong	y
ANR	350201	DeclStmt									
ANR	350202	Decl							ULLong	ULLong	carry
ANR	350203	Decl							ULLong	ULLong	z
ANR	350204	DeclStmt									
ANR	350205	Decl							ULong	ULong	carry
ANR	350206	Decl							ULong	ULong	z
ANR	350207	DeclStmt									
ANR	350208	Decl							ULong	ULong	z2
ANR	350209	DeclStmt									
ANR	350210	Decl							z	z &	FFFFFFFF
ANR	350211	DeclStmt									
ANR	350212	Decl							Bigint	Bigint *	p5s
ANR	350213	DeclStmt									
ANR	350214	Decl							Bigint	Bigint *	b
ANR	350215	DeclStmt									
ANR	350216	Decl							int	int	k
ANR	350217	DeclStmt									
ANR	350218	Decl							Bigint	Bigint *	b1
ANR	350219	Decl							Bigint	Bigint *	p5
ANR	350220	Decl							Bigint	Bigint *	p51
ANR	350221	DeclStmt									
ANR	350222	Decl							int	int	i
ANR	350223	DeclStmt									
ANR	350224	Decl							int	int [ 3 ]	p05
ANR	350225	DeclStmt									
ANR	350226	Decl							Bigint	Bigint *	b
ANR	350227	DeclStmt									
ANR	350228	Decl							int	int	k
ANR	350229	DeclStmt									
ANR	350230	Decl							int	int	i
ANR	350231	Decl							int	int	k1
ANR	350232	Decl							int	int	n
ANR	350233	Decl							int	int	n1
ANR	350234	DeclStmt									
ANR	350235	Decl							Bigint	Bigint *	b1
ANR	350236	DeclStmt									
ANR	350237	Decl							ULong	ULong *	x
ANR	350238	Decl							ULong	ULong *	x1
ANR	350239	Decl							ULong	ULong *	xe
ANR	350240	Decl							ULong	ULong	z
ANR	350241	DeclStmt									
ANR	350242	Decl							Bigint	Bigint *	a
ANR	350243	Decl							Bigint	Bigint *	b
ANR	350244	DeclStmt									
ANR	350245	Decl							ULong	ULong *	xa
ANR	350246	Decl							ULong	ULong *	xa0
ANR	350247	Decl							ULong	ULong *	xb
ANR	350248	Decl							ULong	ULong *	xb0
ANR	350249	DeclStmt									
ANR	350250	Decl							int	int	i
ANR	350251	Decl							int	int	j
ANR	350252	DeclStmt									
ANR	350253	Decl							Bigint	Bigint *	a
ANR	350254	Decl							Bigint	Bigint *	b
ANR	350255	DeclStmt									
ANR	350256	Decl							Bigint	Bigint *	c
ANR	350257	DeclStmt									
ANR	350258	Decl							int	int	i
ANR	350259	Decl							int	int	wa
ANR	350260	Decl							int	int	wb
ANR	350261	DeclStmt									
ANR	350262	Decl							ULong	ULong *	xa
ANR	350263	Decl							ULong	ULong *	xae
ANR	350264	Decl							ULong	ULong *	xb
ANR	350265	Decl							ULong	ULong *	xbe
ANR	350266	Decl							ULong	ULong *	xc
ANR	350267	DeclStmt									
ANR	350268	Decl							ULLong	ULLong	borrow
ANR	350269	Decl							ULLong	ULLong	y
ANR	350270	DeclStmt									
ANR	350271	Decl							ULong	ULong	borrow
ANR	350272	Decl							ULong	ULong	y
ANR	350273	DeclStmt									
ANR	350274	Decl							ULong	ULong	z
ANR	350275	DeclStmt									
ANR	350276	Decl							y	y &	FFFFFFFF
ANR	350277	DeclStmt									
ANR	350278	Decl							y	y &	FFFFFFFF
ANR	350279	DeclStmt									
ANR	350280	Decl							U	U *	x
ANR	350281	DeclStmt									
ANR	350282	Decl							Long	Long	L
ANR	350283	DeclStmt									
ANR	350284	Decl							U	U	u
ANR	350285	DeclStmt									
ANR	350286	Decl							Bigint	Bigint *	a
ANR	350287	DeclStmt									
ANR	350288	Decl							int	int *	e
ANR	350289	DeclStmt									
ANR	350290	Decl							ULong	ULong *	xa
ANR	350291	Decl							ULong	ULong *	xa0
ANR	350292	Decl							ULong	ULong	w
ANR	350293	Decl							ULong	ULong	y
ANR	350294	Decl							ULong	ULong	z
ANR	350295	DeclStmt									
ANR	350296	Decl							int	int	k
ANR	350297	DeclStmt									
ANR	350298	Decl							U	U	d
ANR	350299	DeclStmt									
ANR	350300	Decl							ULong	ULong	d0
ANR	350301	Decl							ULong	ULong	d1
ANR	350302	DeclStmt									
ANR	350303	Decl							U	U *	d
ANR	350304	DeclStmt									
ANR	350305	Decl							int	int *	e
ANR	350306	Decl							int	int *	bits
ANR	350307	DeclStmt									
ANR	350308	Decl							Bigint	Bigint *	b
ANR	350309	DeclStmt									
ANR	350310	Decl							int	int	de
ANR	350311	Decl							int	int	k
ANR	350312	DeclStmt									
ANR	350313	Decl							ULong	ULong *	x
ANR	350314	Decl							ULong	ULong	y
ANR	350315	Decl							ULong	ULong	z
ANR	350316	DeclStmt									
ANR	350317	Decl							int	int	i
ANR	350318	DeclStmt									
ANR	350319	Decl							ULong	ULong	d0
ANR	350320	Decl							ULong	ULong	d1
ANR	350321	DeclStmt									
ANR	350322	Decl							d0	d0 &	Frac_mask
ANR	350323	DeclStmt									
ANR	350324	Decl							Bigint	Bigint *	a
ANR	350325	Decl							Bigint	Bigint *	b
ANR	350326	DeclStmt									
ANR	350327	Decl							U	U	da
ANR	350328	Decl							U	U	db
ANR	350329	DeclStmt									
ANR	350330	Decl							int	int	k
ANR	350331	Decl							int	int	ka
ANR	350332	Decl							int	int	kb
ANR	350333	DeclStmt									
ANR	350334	Decl							k	k *	Exp_msk1
ANR	350335	DeclStmt									
ANR	350336	Decl							k	k *	Exp_msk1
ANR	350337	DeclStmt									
ANR	350338	Decl							CONST double	CONST double [ ]	tens
ANR	350339	DeclStmt									
ANR	350340	Decl							CONST double	CONST double [ ]	tinytens
ANR	350341	DeclStmt									
ANR	350342	Decl							CONST double	CONST double [ ]	tinytens
ANR	350343	DeclStmt									
ANR	350344	Decl							CONST double	CONST double [ ]	tinytens
ANR	350345	DeclStmt									
ANR	350346	Decl							unsigned char	unsigned char [ 256 ]	hexdig
ANR	350347	Function	htinit	1545:1:33417:33546							
ANR	350348	FunctionDef	"htinit (unsigned char * h , unsigned char * s , int inc)"		350347	0					
ANR	350349	CompoundStatement		1547:0:33481:33546	350347	0					
ANR	350350	IdentifierDeclStatement	"int i , j ;"	1548:1:33484:33492	350347	0	True				
ANR	350351	IdentifierDecl	i		350347	0					
ANR	350352	IdentifierDeclType	int		350347	0					
ANR	350353	Identifier	i		350347	1					
ANR	350354	IdentifierDecl	j		350347	1					
ANR	350355	IdentifierDeclType	int		350347	0					
ANR	350356	Identifier	j		350347	1					
ANR	350357	ForStatement	for ( i = 0 ; ( j = s [ i ] ) != 0 ; i ++ )		350347	1					
ANR	350358	ForInit	i = 0 ;	1549:5:33499:33504	350347	0	True				
ANR	350359	AssignmentExpression	i = 0		350347	0		=			
ANR	350360	Identifier	i		350347	0					
ANR	350361	PrimaryExpression	0		350347	1					
ANR	350362	Condition	( j = s [ i ] ) != 0	1549:12:33506:33519	350347	1	True				
ANR	350363	EqualityExpression	( j = s [ i ] ) != 0		350347	0		!=			
ANR	350364	AssignmentExpression	j = s [ i ]		350347	0		=			
ANR	350365	Identifier	j		350347	0					
ANR	350366	ArrayIndexing	s [ i ]		350347	1					
ANR	350367	Identifier	s		350347	0					
ANR	350368	Identifier	i		350347	1					
ANR	350369	PrimaryExpression	0		350347	1					
ANR	350370	PostIncDecOperationExpression	i ++	1549:28:33522:33524	350347	2	True				
ANR	350371	Identifier	i		350347	0					
ANR	350372	IncDec	++		350347	1					
ANR	350373	ExpressionStatement	h [ j ] = i + inc	1550:2:33529:33543	350347	3	True				
ANR	350374	AssignmentExpression	h [ j ] = i + inc		350347	0		=			
ANR	350375	ArrayIndexing	h [ j ]		350347	0					
ANR	350376	Identifier	h		350347	0					
ANR	350377	Identifier	j		350347	1					
ANR	350378	AdditiveExpression	i + inc		350347	1		+			
ANR	350379	Identifier	i		350347	0					
ANR	350380	Identifier	inc		350347	1					
ANR	350381	ReturnType	static void		350347	1					
ANR	350382	Identifier	htinit		350347	2					
ANR	350383	ParameterList	"unsigned char * h , unsigned char * s , int inc"		350347	3					
ANR	350384	Parameter	unsigned char * h	1546:7:33436:33451	350347	0	True				
ANR	350385	ParameterType	unsigned char *		350347	0					
ANR	350386	Identifier	h		350347	1					
ANR	350387	Parameter	unsigned char * s	1546:25:33454:33469	350347	1	True				
ANR	350388	ParameterType	unsigned char *		350347	0					
ANR	350389	Identifier	s		350347	1					
ANR	350390	Parameter	int inc	1546:43:33472:33478	350347	2	True				
ANR	350391	ParameterType	int		350347	0					
ANR	350392	Identifier	inc		350347	1					
ANR	350393	CFGEntryNode	ENTRY		350347		True				
ANR	350394	CFGExitNode	EXIT		350347		True				
ANR	350395	Symbol	* h		350347						
ANR	350396	Symbol	s		350347						
ANR	350397	Symbol	* i		350347						
ANR	350398	Symbol	* j		350347						
ANR	350399	Symbol	h		350347						
ANR	350400	Symbol	i		350347						
ANR	350401	Symbol	j		350347						
ANR	350402	Symbol	* s		350347						
ANR	350403	Symbol	inc		350347						
ANR	350404	Function	hexdig_init	1553:1:33550:33847							
ANR	350405	FunctionDef	hexdig_init ()		350404	0					
ANR	350406	CompoundStatement		1556:0:33689:33847	350404	0					
ANR	350407	Statement	define	1557:1:33692:33697	350404	0	True				
ANR	350408	Statement	USC	1557:8:33699:33701	350404	1	True				
ANR	350409	Statement	(	1557:12:33703:33703	350404	2	True				
ANR	350410	Statement	unsigned	1557:13:33704:33711	350404	3	True				
ANR	350411	Statement	char	1557:22:33713:33716	350404	4	True				
ANR	350412	Statement	*	1557:27:33718:33718	350404	5	True				
ANR	350413	Statement	)	1557:28:33719:33719	350404	6	True				
ANR	350414	Statement	htinit	1558:1:33722:33727	350404	7	True				
ANR	350415	Statement	(	1558:7:33728:33728	350404	8	True				
ANR	350416	Statement	hexdig	1558:8:33729:33734	350404	9	True				
ANR	350417	Statement	","	1558:14:33735:33735	350404	10	True				
ANR	350418	Statement	USC	1558:16:33737:33739	350404	11	True				
ANR	350419	Statement	"""0123456789"""	1558:20:33741:33752	350404	12	True				
ANR	350420	Statement	","	1558:32:33753:33753	350404	13	True				
ANR	350421	Statement	0x10	1558:34:33755:33758	350404	14	True				
ANR	350422	Statement	)	1558:38:33759:33759	350404	15	True				
ANR	350423	ExpressionStatement		1558:39:33760:33760	350404	16	True				
ANR	350424	Statement	htinit	1559:1:33763:33768	350404	17	True				
ANR	350425	Statement	(	1559:7:33769:33769	350404	18	True				
ANR	350426	Statement	hexdig	1559:8:33770:33775	350404	19	True				
ANR	350427	Statement	","	1559:14:33776:33776	350404	20	True				
ANR	350428	Statement	USC	1559:16:33778:33780	350404	21	True				
ANR	350429	Statement	"""abcdef"""	1559:20:33782:33789	350404	22	True				
ANR	350430	Statement	","	1559:28:33790:33790	350404	23	True				
ANR	350431	Statement	0x10	1559:30:33792:33795	350404	24	True				
ANR	350432	Statement	+	1559:35:33797:33797	350404	25	True				
ANR	350433	Statement	10	1559:37:33799:33800	350404	26	True				
ANR	350434	Statement	)	1559:39:33801:33801	350404	27	True				
ANR	350435	ExpressionStatement		1559:40:33802:33802	350404	28	True				
ANR	350436	Statement	htinit	1560:1:33805:33810	350404	29	True				
ANR	350437	Statement	(	1560:7:33811:33811	350404	30	True				
ANR	350438	Statement	hexdig	1560:8:33812:33817	350404	31	True				
ANR	350439	Statement	","	1560:14:33818:33818	350404	32	True				
ANR	350440	Statement	USC	1560:16:33820:33822	350404	33	True				
ANR	350441	Statement	"""ABCDEF"""	1560:20:33824:33831	350404	34	True				
ANR	350442	Statement	","	1560:28:33832:33832	350404	35	True				
ANR	350443	Statement	0x10	1560:30:33834:33837	350404	36	True				
ANR	350444	Statement	+	1560:35:33839:33839	350404	37	True				
ANR	350445	Statement	10	1560:37:33841:33842	350404	38	True				
ANR	350446	Statement	)	1560:39:33843:33843	350404	39	True				
ANR	350447	ExpressionStatement		1560:40:33844:33844	350404	40	True				
ANR	350448	ReturnType	static void		350404	1					
ANR	350449	Identifier	hexdig_init		350404	2					
ANR	350450	ParameterList			350404	3					
ANR	350451	CFGEntryNode	ENTRY		350404		True				
ANR	350452	CFGExitNode	EXIT		350404		True				
ANR	350453	DeclStmt									
ANR	350454	Decl							unsigned char	unsigned char [ 256 ]	hexdig
ANR	350455	DeclStmt									
ANR	350456	Decl							char	char * *	sp
ANR	350457	Decl							char	char *	t
ANR	350458	DeclStmt									
ANR	350459	Decl							int	int	c
ANR	350460	Decl							int	int	d
ANR	350461	DeclStmt									
ANR	350462	Decl							CONST char	CONST char *	s
ANR	350463	DeclStmt									
ANR	350464	Decl							U	U *	rvp
ANR	350465	DeclStmt									
ANR	350466	Decl							CONST char	CONST char * *	sp
ANR	350467	DeclStmt									
ANR	350468	Decl							ULong	ULong	c
ANR	350469	Decl							ULong	ULong [ 2 ]	x
ANR	350470	DeclStmt									
ANR	350471	Decl							CONST char	CONST char *	s
ANR	350472	DeclStmt									
ANR	350473	Decl							int	int	c1
ANR	350474	Decl							int	int	havedig
ANR	350475	Decl							int	int	udx0
ANR	350476	Decl							int	int	xshift
ANR	350477	DeclStmt									
ANR	350478	Decl							Bigint	Bigint *	b
ANR	350479	DeclStmt									
ANR	350480	Decl							ULong	ULong *	x
ANR	350481	Decl							ULong	ULong *	xe
ANR	350482	DeclStmt									
ANR	350483	Decl							Bigint	Bigint *	b1
ANR	350484	DeclStmt									
ANR	350485	Decl							Bigint	Bigint *	b
ANR	350486	DeclStmt									
ANR	350487	Decl							int	int	k
ANR	350488	DeclStmt									
ANR	350489	Decl							ULong	ULong *	x
ANR	350490	Decl							ULong	ULong *	x1
ANR	350491	Decl							ULong	ULong *	xe
ANR	350492	Decl							ULong	ULong	y
ANR	350493	DeclStmt									
ANR	350494	Decl							int	int	n
ANR	350495	DeclStmt									
ANR	350496	Decl							Bigint	Bigint *	b
ANR	350497	DeclStmt									
ANR	350498	Decl							int	int	k
ANR	350499	DeclStmt									
ANR	350500	Decl							int	int	n
ANR	350501	Decl							int	int	nwds
ANR	350502	DeclStmt									
ANR	350503	Decl							ULong	ULong *	x
ANR	350504	Decl							ULong	ULong *	x0
ANR	350505	Decl							ULong	ULong	x1
ANR	350506	Decl							ULong	ULong	x2
ANR	350507	ClassDef	<unnamed>	1793:0:37666:37781							
ANR	350508	DeclStmt									
ANR	350509	Decl							CONST char	CONST char * *	sp
ANR	350510	DeclStmt									
ANR	350511	Decl							U	U *	rvp
ANR	350512	DeclStmt									
ANR	350513	Decl							int	int	rounding
ANR	350514	Decl							int	int	sign
ANR	350515	DeclStmt									
ANR	350516	Decl							Bigint	Bigint *	b
ANR	350517	DeclStmt									
ANR	350518	Decl							unsigned char	unsigned char *	decpt
ANR	350519	Decl							unsigned char	unsigned char *	s0
ANR	350520	Decl							unsigned char	unsigned char *	s
ANR	350521	Decl							unsigned char	unsigned char *	s1
ANR	350522	DeclStmt									
ANR	350523	Decl							Long	Long	e
ANR	350524	Decl							Long	Long	e1
ANR	350525	DeclStmt									
ANR	350526	Decl							ULong	ULong	L
ANR	350527	Decl							ULong	ULong	lostbits
ANR	350528	Decl							ULong	ULong *	x
ANR	350529	DeclStmt									
ANR	350530	Decl							int	int	big
ANR	350531	Decl							int	int	denorm
ANR	350532	Decl							int	int	esign
ANR	350533	Decl							int	int	havedig
ANR	350534	Decl							int	int	k
ANR	350535	Decl							int	int	n
ANR	350536	Decl							int	int	nbits
ANR	350537	Decl							int	int	up
ANR	350538	Decl							int	int	zret
ANR	350539	DeclStmt									
ANR	350540	Decl							int	int	j
ANR	350541	ClassDef	<unnamed>	1816:1:38135:38359							
ANR	350542	DeclStmt									
ANR	350543	Decl							int	int	i
ANR	350544	DeclStmt									
ANR	350545	Decl							const unsigned char	const unsigned char *	decimalpoint
ANR	350546	DeclStmt									
ANR	350547	Decl							const unsigned char	const unsigned char *	decimalpoint
ANR	350548	DeclStmt									
ANR	350549	Decl							unsigned char	unsigned char *	decimalpoint_cache
ANR	350550	DeclStmt									
ANR	350551	Decl							Bigint	Bigint *	b
ANR	350552	DeclStmt									
ANR	350553	Decl							int	int	p2
ANR	350554	DeclStmt									
ANR	350555	Decl							int	int	rv
ANR	350556	DeclStmt									
ANR	350557	Decl							rv	rv &	kmask
ANR	350558	DeclStmt									
ANR	350559	Decl							Bigint	Bigint *	b
ANR	350560	Decl							Bigint	Bigint *	S
ANR	350561	DeclStmt									
ANR	350562	Decl							int	int	n
ANR	350563	DeclStmt									
ANR	350564	Decl							ULong	ULong *	bx
ANR	350565	Decl							ULong	ULong *	bxe
ANR	350566	Decl							ULong	ULong	q
ANR	350567	Decl							ULong	ULong *	sx
ANR	350568	Decl							ULong	ULong *	sxe
ANR	350569	DeclStmt									
ANR	350570	Decl							ULLong	ULLong	borrow
ANR	350571	Decl							ULLong	ULLong	carry
ANR	350572	Decl							ULLong	ULLong	y
ANR	350573	Decl							ULLong	ULLong	ys
ANR	350574	DeclStmt									
ANR	350575	Decl							ULong	ULong	borrow
ANR	350576	Decl							ULong	ULong	carry
ANR	350577	Decl							ULong	ULong	y
ANR	350578	Decl							ULong	ULong	ys
ANR	350579	DeclStmt									
ANR	350580	Decl							ULong	ULong	si
ANR	350581	Decl							ULong	ULong	z
ANR	350582	Decl							ULong	ULong	zs
ANR	350583	DeclStmt									
ANR	350584	Decl							y	y &	FFFFFFFF
ANR	350585	DeclStmt									
ANR	350586	Decl							y	y &	FFFFFFFF
ANR	350587	DeclStmt									
ANR	350588	Decl							U	U *	x
ANR	350589	DeclStmt									
ANR	350590	Decl							BCinfo	BCinfo *	bc
ANR	350591	DeclStmt									
ANR	350592	Decl							U	U	u
ANR	350593	DeclStmt									
ANR	350594	Decl							double	double	rv
ANR	350595	DeclStmt									
ANR	350596	Decl							int	int	i
ANR	350597	DeclStmt									
ANR	350598	Decl							U	U *	rv
ANR	350599	DeclStmt									
ANR	350600	Decl							CONST char	CONST char *	s0
ANR	350601	DeclStmt									
ANR	350602	Decl							BCinfo	BCinfo *	bc
ANR	350603	DeclStmt									
ANR	350604	Decl							Bigint	Bigint *	b
ANR	350605	Decl							Bigint	Bigint *	d
ANR	350606	DeclStmt									
ANR	350607	Decl							int	int	b2
ANR	350608	Decl							int	int	bbits
ANR	350609	Decl							int	int	d2
ANR	350610	Decl							int	int	dd
ANR	350611	Decl							int	int	dig
ANR	350612	Decl							int	int	dsign
ANR	350613	Decl							int	int	i
ANR	350614	Decl							int	int	j
ANR	350615	Decl							int	int	nd
ANR	350616	Decl							int	int	nd0
ANR	350617	Decl							int	int	p2
ANR	350618	Decl							int	int	p5
ANR	350619	Decl							int	int	speccase
ANR	350620	DeclStmt									
ANR	350621	Decl							CONST char	CONST char *	s00
ANR	350622	DeclStmt									
ANR	350623	Decl							char	char * *	se
ANR	350624	DeclStmt									
ANR	350625	Decl							int	int	bb2
ANR	350626	Decl							int	int	bb5
ANR	350627	Decl							int	int	bbe
ANR	350628	Decl							int	int	bd2
ANR	350629	Decl							int	int	bd5
ANR	350630	Decl							int	int	bbbits
ANR	350631	Decl							int	int	bs2
ANR	350632	Decl							int	int	c
ANR	350633	Decl							int	int	e
ANR	350634	Decl							int	int	e1
ANR	350635	DeclStmt									
ANR	350636	Decl							int	int	esign
ANR	350637	Decl							int	int	i
ANR	350638	Decl							int	int	j
ANR	350639	Decl							int	int	k
ANR	350640	Decl							int	int	nd
ANR	350641	Decl							int	int	nd0
ANR	350642	Decl							int	int	nf
ANR	350643	Decl							int	int	nz
ANR	350644	Decl							int	int	nz0
ANR	350645	Decl							int	int	nz1
ANR	350646	Decl							int	int	sign
ANR	350647	DeclStmt									
ANR	350648	Decl							CONST char	CONST char *	s
ANR	350649	Decl							CONST char	CONST char *	s0
ANR	350650	Decl							CONST char	CONST char *	s1
ANR	350651	DeclStmt									
ANR	350652	Decl							volatile double	volatile double	aadj
ANR	350653	Decl							volatile double	volatile double	aadj1
ANR	350654	DeclStmt									
ANR	350655	Decl							Long	Long	L
ANR	350656	DeclStmt									
ANR	350657	Decl							U	U	aadj2
ANR	350658	Decl							U	U	adj
ANR	350659	Decl							U	U	rv
ANR	350660	Decl							U	U	rv0
ANR	350661	DeclStmt									
ANR	350662	Decl							ULong	ULong	y
ANR	350663	Decl							ULong	ULong	z
ANR	350664	DeclStmt									
ANR	350665	Decl							BCinfo	BCinfo	bc
ANR	350666	DeclStmt									
ANR	350667	Decl							Bigint	Bigint *	bb
ANR	350668	Decl							Bigint	Bigint *	bb1
ANR	350669	Decl							Bigint	Bigint *	bd
ANR	350670	Decl							Bigint	Bigint *	bd0
ANR	350671	Decl							Bigint	Bigint *	bs
ANR	350672	Decl							Bigint	Bigint *	delta
ANR	350673	DeclStmt									
ANR	350674	Decl							ULong	ULong	Lsb
ANR	350675	Decl							ULong	ULong	Lsb1
ANR	350676	DeclStmt									
ANR	350677	Decl							int	int	oldinexact
ANR	350678	DeclStmt									
ANR	350679	Decl							int	int	req_bigcomp
ANR	350680	DeclStmt									
ANR	350681	Decl							CONST char	CONST char *	s2
ANR	350682	DeclStmt									
ANR	350683	Decl							P	P *	Exp_msk1
ANR	350684	DeclStmt									
ANR	350685	Decl							P	P *	Exp_msk1
ANR	350686	DeclStmt									
ANR	350687	Decl							P	P *	Exp_msk1
ANR	350688	DeclStmt									
ANR	350689	Decl							P	P *	Exp_msk1
ANR	350690	DeclStmt									
ANR	350691	Decl							P	P *	Exp_msk1
ANR	350692	DeclStmt									
ANR	350693	Decl							d	d * ( dval ( & rv ) )	ulp
ANR	350694	DeclStmt									
ANR	350695	Decl							P	P *	Exp_msk1
ANR	350696	DeclStmt									
ANR	350697	Decl							d	d *	ulp
ANR	350698	DeclStmt									
ANR	350699	Decl							P	P *	Exp_msk1
ANR	350700	DeclStmt									
ANR	350701	Decl							P	P *	Exp_msk1
ANR	350702	DeclStmt									
ANR	350703	Decl							P	P *	Exp_msk1
ANR	350704	DeclStmt									
ANR	350705	Decl							aadj1	aadj1 *	ulp
ANR	350706	DeclStmt									
ANR	350707	Decl							P	P *	Exp_msk1
ANR	350708	DeclStmt									
ANR	350709	Decl							aadj1	aadj1 *	ulp
ANR	350710	DeclStmt									
ANR	350711	Decl							aadj1	aadj1 *	ulp
ANR	350712	DeclStmt									
ANR	350713	Decl							P	P *	Exp_msk1
ANR	350714	DeclStmt									
ANR	350715	Decl							aadj1	aadj1 *	ulp
ANR	350716	DeclStmt									
ANR	350717	Decl							P	P *	Exp_msk1
ANR	350718	DeclStmt									
ANR	350719	Decl							aadj1	aadj1 *	ulp
ANR	350720	DeclStmt									
ANR	350721	Decl							aadj1	aadj1 *	ulp
ANR	350722	DeclStmt									
ANR	350723	Decl							P	P *	Exp_msk1
ANR	350724	DeclStmt									
ANR	350725	Decl							ZEND_TLS char	ZEND_TLS char *	dtoa_result
ANR	350726	DeclStmt									
ANR	350727	Decl							int	int	i
ANR	350728	DeclStmt									
ANR	350729	Decl							int	int	j
ANR	350730	Decl							int	int	k
ANR	350731	Decl							int	int *	r
ANR	350732	DeclStmt									
ANR	350733	Decl							char	char *	s
ANR	350734	Decl							char	char * *	rve
ANR	350735	DeclStmt									
ANR	350736	Decl							int	int	n
ANR	350737	DeclStmt									
ANR	350738	Decl							char	char *	rv
ANR	350739	Decl							char	char *	t
ANR	350740	DeclStmt									
ANR	350741	Decl							char	char *	s
ANR	350742	DeclStmt									
ANR	350743	Decl							Bigint	Bigint *	b
ANR	350744	DeclStmt									
ANR	350745	Decl							double	double	dd
ANR	350746	DeclStmt									
ANR	350747	Decl							int	int	mode
ANR	350748	Decl							int	int	ndigits
ANR	350749	Decl							int	int *	decpt
ANR	350750	Decl							int	int *	sign
ANR	350751	DeclStmt									
ANR	350752	Decl							char	char * *	rve
ANR	350753	DeclStmt									
ANR	350754	Decl							int	int	bbits
ANR	350755	Decl							int	int	b2
ANR	350756	Decl							int	int	b5
ANR	350757	Decl							int	int	be
ANR	350758	Decl							int	int	dig
ANR	350759	Decl							int	int	i
ANR	350760	Decl							int	int	ieps
ANR	350761	Decl							int	int	ilim
ANR	350762	Decl							int	int	ilim0
ANR	350763	Decl							int	int	ilim1
ANR	350764	Decl							int	int	j
ANR	350765	Decl							int	int	j1
ANR	350766	Decl							int	int	k
ANR	350767	Decl							int	int	k0
ANR	350768	Decl							int	int	k_check
ANR	350769	Decl							int	int	leftright
ANR	350770	Decl							int	int	m2
ANR	350771	Decl							int	int	m5
ANR	350772	Decl							int	int	s2
ANR	350773	Decl							int	int	s5
ANR	350774	Decl							int	int	spec_case
ANR	350775	Decl							int	int	try_quick
ANR	350776	DeclStmt									
ANR	350777	Decl							Long	Long	L
ANR	350778	DeclStmt									
ANR	350779	Decl							int	int	denorm
ANR	350780	DeclStmt									
ANR	350781	Decl							ULong	ULong	x
ANR	350782	DeclStmt									
ANR	350783	Decl							Bigint	Bigint *	b
ANR	350784	Decl							Bigint	Bigint *	b1
ANR	350785	Decl							Bigint	Bigint *	delta
ANR	350786	Decl							Bigint	Bigint *	mlo
ANR	350787	Decl							Bigint	Bigint *	mhi
ANR	350788	Decl							Bigint	Bigint *	S
ANR	350789	DeclStmt									
ANR	350790	Decl							U	U	d2
ANR	350791	Decl							U	U	eps
ANR	350792	Decl							U	U	u
ANR	350793	DeclStmt									
ANR	350794	Decl							double	double	ds
ANR	350795	DeclStmt									
ANR	350796	Decl							char	char *	s
ANR	350797	Decl							char	char *	s0
ANR	350798	DeclStmt									
ANR	350799	Decl							U	U	eps1
ANR	350800	DeclStmt									
ANR	350801	Decl							int	int	inexact
ANR	350802	Decl							int	int	oldinexact
ANR	350803	DeclStmt									
ANR	350804	Decl							int	int	Rounding
ANR	350805	DeclStmt									
ANR	350806	Decl							L	L *	ds
ANR	350807	Function	zend_hex_strtod	4412:0:90026:90601							
ANR	350808	FunctionDef	"zend_hex_strtod (const char * str , const char * * endptr)"		350807	0					
ANR	350809	CompoundStatement		4413:0:90096:90601	350807	0					
ANR	350810	IdentifierDeclStatement	const char * s = str ;	4414:1:90099:90118	350807	0	True				
ANR	350811	IdentifierDecl	* s = str		350807	0					
ANR	350812	IdentifierDeclType	const char *		350807	0					
ANR	350813	Identifier	s		350807	1					
ANR	350814	AssignmentExpression	* s = str		350807	2		=			
ANR	350815	Identifier	str		350807	0					
ANR	350816	Identifier	str		350807	1					
ANR	350817	IdentifierDeclStatement	char c ;	4415:1:90121:90127	350807	1	True				
ANR	350818	IdentifierDecl	c		350807	0					
ANR	350819	IdentifierDeclType	char		350807	0					
ANR	350820	Identifier	c		350807	1					
ANR	350821	IdentifierDeclStatement	int any = 0 ;	4416:1:90130:90141	350807	2	True				
ANR	350822	IdentifierDecl	any = 0		350807	0					
ANR	350823	IdentifierDeclType	int		350807	0					
ANR	350824	Identifier	any		350807	1					
ANR	350825	AssignmentExpression	any = 0		350807	2		=			
ANR	350826	Identifier	any		350807	0					
ANR	350827	PrimaryExpression	0		350807	1					
ANR	350828	IdentifierDeclStatement	double value = 0 ;	4417:1:90144:90160	350807	3	True				
ANR	350829	IdentifierDecl	value = 0		350807	0					
ANR	350830	IdentifierDeclType	double		350807	0					
ANR	350831	Identifier	value		350807	1					
ANR	350832	AssignmentExpression	value = 0		350807	2		=			
ANR	350833	Identifier	value		350807	0					
ANR	350834	PrimaryExpression	0		350807	1					
ANR	350835	IfStatement	if ( strlen ( str ) < 2 )		350807	4					
ANR	350836	Condition	strlen ( str ) < 2	4419:5:90168:90182	350807	0	True				
ANR	350837	RelationalExpression	strlen ( str ) < 2		350807	0		<			
ANR	350838	CallExpression	strlen ( str )		350807	0					
ANR	350839	Callee	strlen		350807	0					
ANR	350840	Identifier	strlen		350807	0					
ANR	350841	ArgumentList	str		350807	1					
ANR	350842	Argument	str		350807	0					
ANR	350843	Identifier	str		350807	0					
ANR	350844	PrimaryExpression	2		350807	1					
ANR	350845	CompoundStatement		7:22:88:88	350807	1					
ANR	350846	ExpressionStatement	* endptr = str	4420:2:90189:90202	350807	0	True				
ANR	350847	AssignmentExpression	* endptr = str		350807	0		=			
ANR	350848	UnaryOperationExpression	* endptr		350807	0					
ANR	350849	UnaryOperator	*		350807	0					
ANR	350850	Identifier	endptr		350807	1					
ANR	350851	Identifier	str		350807	1					
ANR	350852	ReturnStatement	return 0.0 ;	4421:2:90206:90216	350807	1	True				
ANR	350853	PrimaryExpression	0.0		350807	0					
ANR	350854	IfStatement	if ( * s == '0' && ( s [ 1 ] == 'x' || s [ 1 ] == 'X' ) )		350807	5					
ANR	350855	Condition	* s == '0' && ( s [ 1 ] == 'x' || s [ 1 ] == 'X' )	4424:5:90227:90267	350807	0	True				
ANR	350856	AndExpression	* s == '0' && ( s [ 1 ] == 'x' || s [ 1 ] == 'X' )		350807	0		&&			
ANR	350857	EqualityExpression	* s == '0'		350807	0		==			
ANR	350858	UnaryOperationExpression	* s		350807	0					
ANR	350859	UnaryOperator	*		350807	0					
ANR	350860	Identifier	s		350807	1					
ANR	350861	PrimaryExpression	'0'		350807	1					
ANR	350862	OrExpression	s [ 1 ] == 'x' || s [ 1 ] == 'X'		350807	1		||			
ANR	350863	EqualityExpression	s [ 1 ] == 'x'		350807	0		==			
ANR	350864	ArrayIndexing	s [ 1 ]		350807	0					
ANR	350865	Identifier	s		350807	0					
ANR	350866	PrimaryExpression	1		350807	1					
ANR	350867	PrimaryExpression	'x'		350807	1					
ANR	350868	EqualityExpression	s [ 1 ] == 'X'		350807	1		==			
ANR	350869	ArrayIndexing	s [ 1 ]		350807	0					
ANR	350870	Identifier	s		350807	0					
ANR	350871	PrimaryExpression	1		350807	1					
ANR	350872	PrimaryExpression	'X'		350807	1					
ANR	350873	CompoundStatement		12:48:173:173	350807	1					
ANR	350874	ExpressionStatement	s += 2	4425:2:90274:90280	350807	0	True				
ANR	350875	AssignmentExpression	s += 2		350807	0		+=			
ANR	350876	Identifier	s		350807	0					
ANR	350877	PrimaryExpression	2		350807	1					
ANR	350878	WhileStatement	while ( ( c = * s ++ ) )		350807	6					
ANR	350879	Condition	c = * s ++	4428:8:90294:90303	350807	0	True				
ANR	350880	AssignmentExpression	c = * s ++		350807	0		=			
ANR	350881	Identifier	c		350807	0					
ANR	350882	UnaryOperationExpression	* s ++		350807	1					
ANR	350883	UnaryOperator	*		350807	0					
ANR	350884	PostIncDecOperationExpression	s ++		350807	1					
ANR	350885	Identifier	s		350807	0					
ANR	350886	IncDec	++		350807	1					
ANR	350887	CompoundStatement		16:20:209:209	350807	1					
ANR	350888	IfStatement	if ( c >= '0' && c <= '9' )		350807	0					
ANR	350889	Condition	c >= '0' && c <= '9'	4429:6:90314:90333	350807	0	True				
ANR	350890	AndExpression	c >= '0' && c <= '9'		350807	0		&&			
ANR	350891	RelationalExpression	c >= '0'		350807	0		>=			
ANR	350892	Identifier	c		350807	0					
ANR	350893	PrimaryExpression	'0'		350807	1					
ANR	350894	RelationalExpression	c <= '9'		350807	1		<=			
ANR	350895	Identifier	c		350807	0					
ANR	350896	PrimaryExpression	'9'		350807	1					
ANR	350897	CompoundStatement		17:28:239:239	350807	1					
ANR	350898	ExpressionStatement	c -= '0'	4430:3:90341:90349	350807	0	True				
ANR	350899	AssignmentExpression	c -= '0'		350807	0		-=			
ANR	350900	Identifier	c		350807	0					
ANR	350901	PrimaryExpression	'0'		350807	1					
ANR	350902	ElseStatement	else		350807	0					
ANR	350903	IfStatement	if ( c >= 'A' && c <= 'F' )		350807	0					
ANR	350904	Condition	c >= 'A' && c <= 'F'	4431:13:90364:90383	350807	0	True				
ANR	350905	AndExpression	c >= 'A' && c <= 'F'		350807	0		&&			
ANR	350906	RelationalExpression	c >= 'A'		350807	0		>=			
ANR	350907	Identifier	c		350807	0					
ANR	350908	PrimaryExpression	'A'		350807	1					
ANR	350909	RelationalExpression	c <= 'F'		350807	1		<=			
ANR	350910	Identifier	c		350807	0					
ANR	350911	PrimaryExpression	'F'		350807	1					
ANR	350912	CompoundStatement		19:35:289:289	350807	1					
ANR	350913	ExpressionStatement	c -= 'A' - 10	4432:3:90391:90404	350807	0	True				
ANR	350914	AssignmentExpression	c -= 'A' - 10		350807	0		-=			
ANR	350915	Identifier	c		350807	0					
ANR	350916	AdditiveExpression	'A' - 10		350807	1		-			
ANR	350917	PrimaryExpression	'A'		350807	0					
ANR	350918	PrimaryExpression	10		350807	1					
ANR	350919	ElseStatement	else		350807	0					
ANR	350920	IfStatement	if ( c >= 'a' && c <= 'f' )		350807	0					
ANR	350921	Condition	c >= 'a' && c <= 'f'	4433:13:90419:90438	350807	0	True				
ANR	350922	AndExpression	c >= 'a' && c <= 'f'		350807	0		&&			
ANR	350923	RelationalExpression	c >= 'a'		350807	0		>=			
ANR	350924	Identifier	c		350807	0					
ANR	350925	PrimaryExpression	'a'		350807	1					
ANR	350926	RelationalExpression	c <= 'f'		350807	1		<=			
ANR	350927	Identifier	c		350807	0					
ANR	350928	PrimaryExpression	'f'		350807	1					
ANR	350929	CompoundStatement		21:35:344:344	350807	1					
ANR	350930	ExpressionStatement	c -= 'a' - 10	4434:3:90446:90459	350807	0	True				
ANR	350931	AssignmentExpression	c -= 'a' - 10		350807	0		-=			
ANR	350932	Identifier	c		350807	0					
ANR	350933	AdditiveExpression	'a' - 10		350807	1		-			
ANR	350934	PrimaryExpression	'a'		350807	0					
ANR	350935	PrimaryExpression	10		350807	1					
ANR	350936	ElseStatement	else		350807	0					
ANR	350937	CompoundStatement		23:9:373:373	350807	0					
ANR	350938	BreakStatement	break ;	4436:3:90475:90480	350807	0	True				
ANR	350939	ExpressionStatement	any = 1	4439:2:90489:90496	350807	1	True				
ANR	350940	AssignmentExpression	any = 1		350807	0		=			
ANR	350941	Identifier	any		350807	0					
ANR	350942	PrimaryExpression	1		350807	1					
ANR	350943	ExpressionStatement	value = value * 16 + c	4440:2:90500:90522	350807	2	True				
ANR	350944	AssignmentExpression	value = value * 16 + c		350807	0		=			
ANR	350945	Identifier	value		350807	0					
ANR	350946	AdditiveExpression	value * 16 + c		350807	1		+			
ANR	350947	MultiplicativeExpression	value * 16		350807	0		*			
ANR	350948	Identifier	value		350807	0					
ANR	350949	PrimaryExpression	16		350807	1					
ANR	350950	Identifier	c		350807	1					
ANR	350951	IfStatement	if ( endptr != NULL )		350807	7					
ANR	350952	Condition	endptr != NULL	4443:5:90533:90546	350807	0	True				
ANR	350953	EqualityExpression	endptr != NULL		350807	0		!=			
ANR	350954	Identifier	endptr		350807	0					
ANR	350955	Identifier	NULL		350807	1					
ANR	350956	CompoundStatement		31:21:452:452	350807	1					
ANR	350957	ExpressionStatement	* endptr = any ? s - 1 : str	4444:2:90553:90580	350807	0	True				
ANR	350958	AssignmentExpression	* endptr = any ? s - 1 : str		350807	0		=			
ANR	350959	UnaryOperationExpression	* endptr		350807	0					
ANR	350960	UnaryOperator	*		350807	0					
ANR	350961	Identifier	endptr		350807	1					
ANR	350962	ConditionalExpression	any ? s - 1 : str		350807	1					
ANR	350963	Condition	any		350807	0					
ANR	350964	Identifier	any		350807	0					
ANR	350965	AdditiveExpression	s - 1		350807	1		-			
ANR	350966	Identifier	s		350807	0					
ANR	350967	PrimaryExpression	1		350807	1					
ANR	350968	Identifier	str		350807	2					
ANR	350969	ReturnStatement	return value ;	4447:1:90587:90599	350807	8	True				
ANR	350970	Identifier	value		350807	0					
ANR	350971	ReturnType	ZEND_API double		350807	1					
ANR	350972	Identifier	zend_hex_strtod		350807	2					
ANR	350973	ParameterList	"const char * str , const char * * endptr"		350807	3					
ANR	350974	Parameter	const char * str	4412:32:90058:90072	350807	0	True				
ANR	350975	ParameterType	const char *		350807	0					
ANR	350976	Identifier	str		350807	1					
ANR	350977	Parameter	const char * * endptr	4412:49:90075:90093	350807	1	True				
ANR	350978	ParameterType	const char * *		350807	0					
ANR	350979	Identifier	endptr		350807	1					
ANR	350980	CFGEntryNode	ENTRY		350807		True				
ANR	350981	CFGExitNode	EXIT		350807		True				
ANR	350982	Symbol	str		350807						
ANR	350983	Symbol	* s ++		350807						
ANR	350984	Symbol	strlen		350807						
ANR	350985	Symbol	s		350807						
ANR	350986	Symbol	c		350807						
ANR	350987	Symbol	NULL		350807						
ANR	350988	Symbol	endptr		350807						
ANR	350989	Symbol	* endptr		350807						
ANR	350990	Symbol	any		350807						
ANR	350991	Symbol	value		350807						
ANR	350992	Symbol	* s		350807						
ANR	350993	Function	zend_oct_strtod	4450:0:90604:91134							
ANR	350994	FunctionDef	"zend_oct_strtod (const char * str , const char * * endptr)"		350993	0					
ANR	350995	CompoundStatement		4451:0:90674:91134	350993	0					
ANR	350996	IdentifierDeclStatement	const char * s = str ;	4452:1:90677:90696	350993	0	True				
ANR	350997	IdentifierDecl	* s = str		350993	0					
ANR	350998	IdentifierDeclType	const char *		350993	0					
ANR	350999	Identifier	s		350993	1					
ANR	351000	AssignmentExpression	* s = str		350993	2		=			
ANR	351001	Identifier	str		350993	0					
ANR	351002	Identifier	str		350993	1					
ANR	351003	IdentifierDeclStatement	char c ;	4453:1:90699:90705	350993	1	True				
ANR	351004	IdentifierDecl	c		350993	0					
ANR	351005	IdentifierDeclType	char		350993	0					
ANR	351006	Identifier	c		350993	1					
ANR	351007	IdentifierDeclStatement	double value = 0 ;	4454:1:90708:90724	350993	2	True				
ANR	351008	IdentifierDecl	value = 0		350993	0					
ANR	351009	IdentifierDeclType	double		350993	0					
ANR	351010	Identifier	value		350993	1					
ANR	351011	AssignmentExpression	value = 0		350993	2		=			
ANR	351012	Identifier	value		350993	0					
ANR	351013	PrimaryExpression	0		350993	1					
ANR	351014	IdentifierDeclStatement	int any = 0 ;	4455:1:90727:90738	350993	3	True				
ANR	351015	IdentifierDecl	any = 0		350993	0					
ANR	351016	IdentifierDeclType	int		350993	0					
ANR	351017	Identifier	any		350993	1					
ANR	351018	AssignmentExpression	any = 0		350993	2		=			
ANR	351019	Identifier	any		350993	0					
ANR	351020	PrimaryExpression	0		350993	1					
ANR	351021	IfStatement	if ( strlen ( str ) < 1 )		350993	4					
ANR	351022	Condition	strlen ( str ) < 1	4457:5:90746:90760	350993	0	True				
ANR	351023	RelationalExpression	strlen ( str ) < 1		350993	0		<			
ANR	351024	CallExpression	strlen ( str )		350993	0					
ANR	351025	Callee	strlen		350993	0					
ANR	351026	Identifier	strlen		350993	0					
ANR	351027	ArgumentList	str		350993	1					
ANR	351028	Argument	str		350993	0					
ANR	351029	Identifier	str		350993	0					
ANR	351030	PrimaryExpression	1		350993	1					
ANR	351031	CompoundStatement		7:22:88:88	350993	1					
ANR	351032	ExpressionStatement	* endptr = str	4458:2:90767:90780	350993	0	True				
ANR	351033	AssignmentExpression	* endptr = str		350993	0		=			
ANR	351034	UnaryOperationExpression	* endptr		350993	0					
ANR	351035	UnaryOperator	*		350993	0					
ANR	351036	Identifier	endptr		350993	1					
ANR	351037	Identifier	str		350993	1					
ANR	351038	ReturnStatement	return 0.0 ;	4459:2:90784:90794	350993	1	True				
ANR	351039	PrimaryExpression	0.0		350993	0					
ANR	351040	ExpressionStatement	s ++	4463:1:90826:90829	350993	5	True				
ANR	351041	PostIncDecOperationExpression	s ++		350993	0					
ANR	351042	Identifier	s		350993	0					
ANR	351043	IncDec	++		350993	1					
ANR	351044	WhileStatement	while ( ( c = * s ++ ) )		350993	6					
ANR	351045	Condition	c = * s ++	4465:8:90840:90849	350993	0	True				
ANR	351046	AssignmentExpression	c = * s ++		350993	0		=			
ANR	351047	Identifier	c		350993	0					
ANR	351048	UnaryOperationExpression	* s ++		350993	1					
ANR	351049	UnaryOperator	*		350993	0					
ANR	351050	PostIncDecOperationExpression	s ++		350993	1					
ANR	351051	Identifier	s		350993	0					
ANR	351052	IncDec	++		350993	1					
ANR	351053	CompoundStatement		15:20:177:177	350993	1					
ANR	351054	IfStatement	if ( c < '0' || c > '7' )		350993	0					
ANR	351055	Condition	c < '0' || c > '7'	4466:6:90860:90877	350993	0	True				
ANR	351056	OrExpression	c < '0' || c > '7'		350993	0		||			
ANR	351057	RelationalExpression	c < '0'		350993	0		<			
ANR	351058	Identifier	c		350993	0					
ANR	351059	PrimaryExpression	'0'		350993	1					
ANR	351060	RelationalExpression	c > '7'		350993	1		>			
ANR	351061	Identifier	c		350993	0					
ANR	351062	PrimaryExpression	'7'		350993	1					
ANR	351063	CompoundStatement		16:26:205:205	350993	1					
ANR	351064	BreakStatement	break ;	4470:3:91004:91009	350993	0	True				
ANR	351065	ExpressionStatement	value = value * 8 + c - '0'	4472:2:91017:91044	350993	1	True				
ANR	351066	AssignmentExpression	value = value * 8 + c - '0'		350993	0		=			
ANR	351067	Identifier	value		350993	0					
ANR	351068	AdditiveExpression	value * 8 + c - '0'		350993	1		+			
ANR	351069	MultiplicativeExpression	value * 8		350993	0		*			
ANR	351070	Identifier	value		350993	0					
ANR	351071	PrimaryExpression	8		350993	1					
ANR	351072	AdditiveExpression	c - '0'		350993	1		-			
ANR	351073	Identifier	c		350993	0					
ANR	351074	PrimaryExpression	'0'		350993	1					
ANR	351075	ExpressionStatement	any = 1	4473:2:91048:91055	350993	2	True				
ANR	351076	AssignmentExpression	any = 1		350993	0		=			
ANR	351077	Identifier	any		350993	0					
ANR	351078	PrimaryExpression	1		350993	1					
ANR	351079	IfStatement	if ( endptr != NULL )		350993	7					
ANR	351080	Condition	endptr != NULL	4476:5:91066:91079	350993	0	True				
ANR	351081	EqualityExpression	endptr != NULL		350993	0		!=			
ANR	351082	Identifier	endptr		350993	0					
ANR	351083	Identifier	NULL		350993	1					
ANR	351084	CompoundStatement		26:21:407:407	350993	1					
ANR	351085	ExpressionStatement	* endptr = any ? s - 1 : str	4477:2:91086:91113	350993	0	True				
ANR	351086	AssignmentExpression	* endptr = any ? s - 1 : str		350993	0		=			
ANR	351087	UnaryOperationExpression	* endptr		350993	0					
ANR	351088	UnaryOperator	*		350993	0					
ANR	351089	Identifier	endptr		350993	1					
ANR	351090	ConditionalExpression	any ? s - 1 : str		350993	1					
ANR	351091	Condition	any		350993	0					
ANR	351092	Identifier	any		350993	0					
ANR	351093	AdditiveExpression	s - 1		350993	1		-			
ANR	351094	Identifier	s		350993	0					
ANR	351095	PrimaryExpression	1		350993	1					
ANR	351096	Identifier	str		350993	2					
ANR	351097	ReturnStatement	return value ;	4480:1:91120:91132	350993	8	True				
ANR	351098	Identifier	value		350993	0					
ANR	351099	ReturnType	ZEND_API double		350993	1					
ANR	351100	Identifier	zend_oct_strtod		350993	2					
ANR	351101	ParameterList	"const char * str , const char * * endptr"		350993	3					
ANR	351102	Parameter	const char * str	4450:32:90636:90650	350993	0	True				
ANR	351103	ParameterType	const char *		350993	0					
ANR	351104	Identifier	str		350993	1					
ANR	351105	Parameter	const char * * endptr	4450:49:90653:90671	350993	1	True				
ANR	351106	ParameterType	const char * *		350993	0					
ANR	351107	Identifier	endptr		350993	1					
ANR	351108	CFGEntryNode	ENTRY		350993		True				
ANR	351109	CFGExitNode	EXIT		350993		True				
ANR	351110	Symbol	str		350993						
ANR	351111	Symbol	* s ++		350993						
ANR	351112	Symbol	strlen		350993						
ANR	351113	Symbol	s		350993						
ANR	351114	Symbol	c		350993						
ANR	351115	Symbol	NULL		350993						
ANR	351116	Symbol	endptr		350993						
ANR	351117	Symbol	* endptr		350993						
ANR	351118	Symbol	value		350993						
ANR	351119	Symbol	any		350993						
ANR	351120	Function	zend_bin_strtod	4483:0:91137:92057							
ANR	351121	FunctionDef	"zend_bin_strtod (const char * str , const char * * endptr)"		351120	0					
ANR	351122	CompoundStatement		4484:0:91207:92057	351120	0					
ANR	351123	IdentifierDeclStatement	const char * s = str ;	4485:1:91210:91229	351120	0	True				
ANR	351124	IdentifierDecl	* s = str		351120	0					
ANR	351125	IdentifierDeclType	const char *		351120	0					
ANR	351126	Identifier	s		351120	1					
ANR	351127	AssignmentExpression	* s = str		351120	2		=			
ANR	351128	Identifier	str		351120	0					
ANR	351129	Identifier	str		351120	1					
ANR	351130	IdentifierDeclStatement	char c ;	4486:1:91232:91240	351120	1	True				
ANR	351131	IdentifierDecl	c		351120	0					
ANR	351132	IdentifierDeclType	char		351120	0					
ANR	351133	Identifier	c		351120	1					
ANR	351134	IdentifierDeclStatement	double value = 0 ;	4487:1:91243:91261	351120	2	True				
ANR	351135	IdentifierDecl	value = 0		351120	0					
ANR	351136	IdentifierDeclType	double		351120	0					
ANR	351137	Identifier	value		351120	1					
ANR	351138	AssignmentExpression	value = 0		351120	2		=			
ANR	351139	Identifier	value		351120	0					
ANR	351140	PrimaryExpression	0		351120	1					
ANR	351141	IdentifierDeclStatement	int any = 0 ;	4488:1:91264:91277	351120	3	True				
ANR	351142	IdentifierDecl	any = 0		351120	0					
ANR	351143	IdentifierDeclType	int		351120	0					
ANR	351144	Identifier	any		351120	1					
ANR	351145	AssignmentExpression	any = 0		351120	2		=			
ANR	351146	Identifier	any		351120	0					
ANR	351147	PrimaryExpression	0		351120	1					
ANR	351148	IfStatement	if ( strlen ( str ) < 2 )		351120	4					
ANR	351149	Condition	strlen ( str ) < 2	4490:5:91285:91299	351120	0	True				
ANR	351150	RelationalExpression	strlen ( str ) < 2		351120	0		<			
ANR	351151	CallExpression	strlen ( str )		351120	0					
ANR	351152	Callee	strlen		351120	0					
ANR	351153	Identifier	strlen		351120	0					
ANR	351154	ArgumentList	str		351120	1					
ANR	351155	Argument	str		351120	0					
ANR	351156	Identifier	str		351120	0					
ANR	351157	PrimaryExpression	2		351120	1					
ANR	351158	CompoundStatement		7:22:94:94	351120	1					
ANR	351159	ExpressionStatement	* endptr = str	4491:2:91306:91319	351120	0	True				
ANR	351160	AssignmentExpression	* endptr = str		351120	0		=			
ANR	351161	UnaryOperationExpression	* endptr		351120	0					
ANR	351162	UnaryOperator	*		351120	0					
ANR	351163	Identifier	endptr		351120	1					
ANR	351164	Identifier	str		351120	1					
ANR	351165	ReturnStatement	return 0.0 ;	4492:2:91323:91333	351120	1	True				
ANR	351166	PrimaryExpression	0.0		351120	0					
ANR	351167	IfStatement	if ( '0' == * s && ( 'b' == s [ 1 ] || 'B' == s [ 1 ] ) )		351120	5					
ANR	351168	Condition	'0' == * s && ( 'b' == s [ 1 ] || 'B' == s [ 1 ] )	4495:5:91344:91384	351120	0	True				
ANR	351169	AndExpression	'0' == * s && ( 'b' == s [ 1 ] || 'B' == s [ 1 ] )		351120	0		&&			
ANR	351170	EqualityExpression	'0' == * s		351120	0		==			
ANR	351171	PrimaryExpression	'0'		351120	0					
ANR	351172	UnaryOperationExpression	* s		351120	1					
ANR	351173	UnaryOperator	*		351120	0					
ANR	351174	Identifier	s		351120	1					
ANR	351175	OrExpression	'b' == s [ 1 ] || 'B' == s [ 1 ]		351120	1		||			
ANR	351176	EqualityExpression	'b' == s [ 1 ]		351120	0		==			
ANR	351177	PrimaryExpression	'b'		351120	0					
ANR	351178	ArrayIndexing	s [ 1 ]		351120	1					
ANR	351179	Identifier	s		351120	0					
ANR	351180	PrimaryExpression	1		351120	1					
ANR	351181	EqualityExpression	'B' == s [ 1 ]		351120	1		==			
ANR	351182	PrimaryExpression	'B'		351120	0					
ANR	351183	ArrayIndexing	s [ 1 ]		351120	1					
ANR	351184	Identifier	s		351120	0					
ANR	351185	PrimaryExpression	1		351120	1					
ANR	351186	CompoundStatement		12:48:179:179	351120	1					
ANR	351187	ExpressionStatement	s += 2	4496:2:91391:91397	351120	0	True				
ANR	351188	AssignmentExpression	s += 2		351120	0		+=			
ANR	351189	Identifier	s		351120	0					
ANR	351190	PrimaryExpression	2		351120	1					
ANR	351191	WhileStatement	while ( ( c = * s ++ ) )		351120	6					
ANR	351192	Condition	c = * s ++	4499:8:91411:91420	351120	0	True				
ANR	351193	AssignmentExpression	c = * s ++		351120	0		=			
ANR	351194	Identifier	c		351120	0					
ANR	351195	UnaryOperationExpression	* s ++		351120	1					
ANR	351196	UnaryOperator	*		351120	0					
ANR	351197	PostIncDecOperationExpression	s ++		351120	1					
ANR	351198	Identifier	s		351120	0					
ANR	351199	IncDec	++		351120	1					
ANR	351200	CompoundStatement		16:20:215:215	351120	1					
ANR	351201	IfStatement	if ( '0' == c || '1' == c )		351120	0					
ANR	351202	Condition	'0' == c || '1' == c	4505:6:91645:91664	351120	0	True				
ANR	351203	OrExpression	'0' == c || '1' == c		351120	0		||			
ANR	351204	EqualityExpression	'0' == c		351120	0		==			
ANR	351205	PrimaryExpression	'0'		351120	0					
ANR	351206	Identifier	c		351120	1					
ANR	351207	EqualityExpression	'1' == c		351120	1		==			
ANR	351208	PrimaryExpression	'1'		351120	0					
ANR	351209	Identifier	c		351120	1					
ANR	351210	ExpressionStatement	value = value * 2 + c - '0'	4506:3:91670:91697	351120	1	True				
ANR	351211	AssignmentExpression	value = value * 2 + c - '0'		351120	0		=			
ANR	351212	Identifier	value		351120	0					
ANR	351213	AdditiveExpression	value * 2 + c - '0'		351120	1		+			
ANR	351214	MultiplicativeExpression	value * 2		351120	0		*			
ANR	351215	Identifier	value		351120	0					
ANR	351216	PrimaryExpression	2		351120	1					
ANR	351217	AdditiveExpression	c - '0'		351120	1		-			
ANR	351218	Identifier	c		351120	0					
ANR	351219	PrimaryExpression	'0'		351120	1					
ANR	351220	ElseStatement	else		351120	0					
ANR	351221	BreakStatement	break ;	4508:3:91709:91714	351120	0	True				
ANR	351222	ExpressionStatement	any = 1	4510:2:91719:91726	351120	1	True				
ANR	351223	AssignmentExpression	any = 1		351120	0		=			
ANR	351224	Identifier	any		351120	0					
ANR	351225	PrimaryExpression	1		351120	1					
ANR	351226	IfStatement	if ( NULL != endptr )		351120	7					
ANR	351227	Condition	NULL != endptr	4519:5:91979:91992	351120	0	True				
ANR	351228	EqualityExpression	NULL != endptr		351120	0		!=			
ANR	351229	Identifier	NULL		351120	0					
ANR	351230	Identifier	endptr		351120	1					
ANR	351231	CompoundStatement		36:21:787:787	351120	1					
ANR	351232	ExpressionStatement	* endptr = ( char * ) ( any ? s - 1 : str )	4520:2:91999:92036	351120	0	True				
ANR	351233	AssignmentExpression	* endptr = ( char * ) ( any ? s - 1 : str )		351120	0		=			
ANR	351234	UnaryOperationExpression	* endptr		351120	0					
ANR	351235	UnaryOperator	*		351120	0					
ANR	351236	Identifier	endptr		351120	1					
ANR	351237	CastExpression	( char * ) ( any ? s - 1 : str )		351120	1					
ANR	351238	CastTarget	char *		351120	0					
ANR	351239	ConditionalExpression	any ? s - 1 : str		351120	1					
ANR	351240	Condition	any		351120	0					
ANR	351241	Identifier	any		351120	0					
ANR	351242	AdditiveExpression	s - 1		351120	1		-			
ANR	351243	Identifier	s		351120	0					
ANR	351244	PrimaryExpression	1		351120	1					
ANR	351245	Identifier	str		351120	2					
ANR	351246	ReturnStatement	return value ;	4523:1:92043:92055	351120	8	True				
ANR	351247	Identifier	value		351120	0					
ANR	351248	ReturnType	ZEND_API double		351120	1					
ANR	351249	Identifier	zend_bin_strtod		351120	2					
ANR	351250	ParameterList	"const char * str , const char * * endptr"		351120	3					
ANR	351251	Parameter	const char * str	4483:32:91169:91183	351120	0	True				
ANR	351252	ParameterType	const char *		351120	0					
ANR	351253	Identifier	str		351120	1					
ANR	351254	Parameter	const char * * endptr	4483:49:91186:91204	351120	1	True				
ANR	351255	ParameterType	const char * *		351120	0					
ANR	351256	Identifier	endptr		351120	1					
ANR	351257	CFGEntryNode	ENTRY		351120		True				
ANR	351258	CFGExitNode	EXIT		351120		True				
ANR	351259	Symbol	str		351120						
ANR	351260	Symbol	* s ++		351120						
ANR	351261	Symbol	strlen		351120						
ANR	351262	Symbol	s		351120						
ANR	351263	Symbol	c		351120						
ANR	351264	Symbol	NULL		351120						
ANR	351265	Symbol	endptr		351120						
ANR	351266	Symbol	* endptr		351120						
ANR	351267	Symbol	value		351120						
ANR	351268	Symbol	any		351120						
ANR	351269	Symbol	* s		351120						
ANR	351270	Function	destroy_freelist	4526:0:92060:92327							
ANR	351271	FunctionDef	destroy_freelist ()		351270	0					
ANR	351272	CompoundStatement		4527:0:92095:92327	351270	0					
ANR	351273	IdentifierDeclStatement	int i ;	4528:1:92098:92103	351270	0	True				
ANR	351274	IdentifierDecl	i		351270	0					
ANR	351275	IdentifierDeclType	int		351270	0					
ANR	351276	Identifier	i		351270	1					
ANR	351277	IdentifierDeclStatement	Bigint * tmp ;	4529:1:92106:92117	351270	1	True				
ANR	351278	IdentifierDecl	* tmp		351270	0					
ANR	351279	IdentifierDeclType	Bigint *		351270	0					
ANR	351280	Identifier	tmp		351270	1					
ANR	351281	Statement	ACQUIRE_DTOA_LOCK	4531:1:92121:92137	351270	2	True				
ANR	351282	Statement	(	4531:18:92138:92138	351270	3	True				
ANR	351283	Statement	0	4531:19:92139:92139	351270	4	True				
ANR	351284	Statement	)	4531:20:92140:92140	351270	5	True				
ANR	351285	ForStatement	for ( i = 0 ; i <= Kmax ; i ++ )		351270	6					
ANR	351286	ForInit	i = 0 ;	4532:6:92148:92153	351270	0	True				
ANR	351287	AssignmentExpression	i = 0		351270	0		=			
ANR	351288	Identifier	i		351270	0					
ANR	351289	PrimaryExpression	0		351270	1					
ANR	351290	Condition	i <= Kmax	4532:13:92155:92163	351270	1	True				
ANR	351291	RelationalExpression	i <= Kmax		351270	0		<=			
ANR	351292	Identifier	i		351270	0					
ANR	351293	Identifier	Kmax		351270	1					
ANR	351294	PostIncDecOperationExpression	i ++	4532:24:92166:92168	351270	2	True				
ANR	351295	Identifier	i		351270	0					
ANR	351296	IncDec	++		351270	1					
ANR	351297	CompoundStatement		7:2:79:108	351270	3					
ANR	351298	IdentifierDeclStatement	Bigint * * listp = & freelist [ i ] ;	4533:2:92175:92204	351270	0	True				
ANR	351299	IdentifierDecl	* * listp = & freelist [ i ]		351270	0					
ANR	351300	IdentifierDeclType	Bigint * *		351270	0					
ANR	351301	Identifier	listp		351270	1					
ANR	351302	AssignmentExpression	* * listp = & freelist [ i ]		351270	2		=			
ANR	351303	Identifier	listp		351270	0					
ANR	351304	UnaryOperationExpression	& freelist [ i ]		351270	1					
ANR	351305	UnaryOperator	&		351270	0					
ANR	351306	ArrayIndexing	freelist [ i ]		351270	1					
ANR	351307	Identifier	freelist		351270	0					
ANR	351308	Identifier	i		351270	1					
ANR	351309	WhileStatement	while ( ( tmp = * listp ) != NULL )		351270	1					
ANR	351310	Condition	( tmp = * listp ) != NULL	4534:9:92215:92236	351270	0	True				
ANR	351311	EqualityExpression	( tmp = * listp ) != NULL		351270	0		!=			
ANR	351312	AssignmentExpression	tmp = * listp		351270	0		=			
ANR	351313	Identifier	tmp		351270	0					
ANR	351314	UnaryOperationExpression	* listp		351270	1					
ANR	351315	UnaryOperator	*		351270	0					
ANR	351316	Identifier	listp		351270	1					
ANR	351317	Identifier	NULL		351270	1					
ANR	351318	CompoundStatement		8:33:143:143	351270	1					
ANR	351319	ExpressionStatement	* listp = tmp -> next	4535:3:92244:92262	351270	0	True				
ANR	351320	AssignmentExpression	* listp = tmp -> next		351270	0		=			
ANR	351321	UnaryOperationExpression	* listp		351270	0					
ANR	351322	UnaryOperator	*		351270	0					
ANR	351323	Identifier	listp		351270	1					
ANR	351324	PtrMemberAccess	tmp -> next		351270	1					
ANR	351325	Identifier	tmp		351270	0					
ANR	351326	Identifier	next		351270	1					
ANR	351327	ExpressionStatement	free ( tmp )	4536:3:92267:92276	351270	1	True				
ANR	351328	CallExpression	free ( tmp )		351270	0					
ANR	351329	Callee	free		351270	0					
ANR	351330	Identifier	free		351270	0					
ANR	351331	ArgumentList	tmp		351270	1					
ANR	351332	Argument	tmp		351270	0					
ANR	351333	Identifier	tmp		351270	0					
ANR	351334	ExpressionStatement	freelist [ i ] = NULL	4538:2:92284:92302	351270	2	True				
ANR	351335	AssignmentExpression	freelist [ i ] = NULL		351270	0		=			
ANR	351336	ArrayIndexing	freelist [ i ]		351270	0					
ANR	351337	Identifier	freelist		351270	0					
ANR	351338	Identifier	i		351270	1					
ANR	351339	Identifier	NULL		351270	1					
ANR	351340	Statement	FREE_DTOA_LOCK	4540:1:92308:92321	351270	7	True				
ANR	351341	Statement	(	4540:15:92322:92322	351270	8	True				
ANR	351342	Statement	0	4540:16:92323:92323	351270	9	True				
ANR	351343	Statement	)	4540:17:92324:92324	351270	10	True				
ANR	351344	ReturnType	static void		351270	1					
ANR	351345	Identifier	destroy_freelist		351270	2					
ANR	351346	ParameterList			351270	3					
ANR	351347	CFGEntryNode	ENTRY		351270		True				
ANR	351348	CFGExitNode	EXIT		351270		True				
ANR	351349	Symbol	listp		351270						
ANR	351350	Symbol	* tmp		351270						
ANR	351351	Symbol	freelist		351270						
ANR	351352	Symbol	NULL		351270						
ANR	351353	Symbol	* i		351270						
ANR	351354	Symbol	* freelist		351270						
ANR	351355	Symbol	tmp		351270						
ANR	351356	Symbol	* listp		351270						
ANR	351357	Symbol	i		351270						
ANR	351358	Symbol	Kmax		351270						
ANR	351359	Symbol	tmp -> next		351270						
