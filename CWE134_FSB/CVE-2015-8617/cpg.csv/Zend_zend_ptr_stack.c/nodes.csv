command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	338477	File	data/converged/CVE-2015-8617_php-src/Zend_zend_ptr_stack.c								
ANR	338478	Function	zend_ptr_stack_init_ex	28:0:1331:1524							
ANR	338479	FunctionDef	"zend_ptr_stack_init_ex (zend_ptr_stack * stack , zend_bool persistent)"		338478	0					
ANR	338480	CompoundStatement		29:0:1413:1524	338478	0					
ANR	338481	ExpressionStatement	stack -> top_element = stack -> elements = NULL	30:1:1416:1459	338478	0	True				
ANR	338482	AssignmentExpression	stack -> top_element = stack -> elements = NULL		338478	0		=			
ANR	338483	PtrMemberAccess	stack -> top_element		338478	0					
ANR	338484	Identifier	stack		338478	0					
ANR	338485	Identifier	top_element		338478	1					
ANR	338486	AssignmentExpression	stack -> elements = NULL		338478	1		=			
ANR	338487	PtrMemberAccess	stack -> elements		338478	0					
ANR	338488	Identifier	stack		338478	0					
ANR	338489	Identifier	elements		338478	1					
ANR	338490	Identifier	NULL		338478	1					
ANR	338491	ExpressionStatement	stack -> top = stack -> max = 0	31:1:1462:1489	338478	1	True				
ANR	338492	AssignmentExpression	stack -> top = stack -> max = 0		338478	0		=			
ANR	338493	PtrMemberAccess	stack -> top		338478	0					
ANR	338494	Identifier	stack		338478	0					
ANR	338495	Identifier	top		338478	1					
ANR	338496	AssignmentExpression	stack -> max = 0		338478	1		=			
ANR	338497	PtrMemberAccess	stack -> max		338478	0					
ANR	338498	Identifier	stack		338478	0					
ANR	338499	Identifier	max		338478	1					
ANR	338500	PrimaryExpression	0		338478	1					
ANR	338501	ExpressionStatement	stack -> persistent = persistent	32:1:1492:1522	338478	2	True				
ANR	338502	AssignmentExpression	stack -> persistent = persistent		338478	0		=			
ANR	338503	PtrMemberAccess	stack -> persistent		338478	0					
ANR	338504	Identifier	stack		338478	0					
ANR	338505	Identifier	persistent		338478	1					
ANR	338506	Identifier	persistent		338478	1					
ANR	338507	ReturnType	ZEND_API void		338478	1					
ANR	338508	Identifier	zend_ptr_stack_init_ex		338478	2					
ANR	338509	ParameterList	"zend_ptr_stack * stack , zend_bool persistent"		338478	3					
ANR	338510	Parameter	zend_ptr_stack * stack	28:37:1368:1388	338478	0	True				
ANR	338511	ParameterType	zend_ptr_stack *		338478	0					
ANR	338512	Identifier	stack		338478	1					
ANR	338513	Parameter	zend_bool persistent	28:60:1391:1410	338478	1	True				
ANR	338514	ParameterType	zend_bool		338478	0					
ANR	338515	Identifier	persistent		338478	1					
ANR	338516	CFGEntryNode	ENTRY		338478		True				
ANR	338517	CFGExitNode	EXIT		338478		True				
ANR	338518	Symbol	stack		338478						
ANR	338519	Symbol	NULL		338478						
ANR	338520	Symbol	stack -> top_element		338478						
ANR	338521	Symbol	stack -> persistent		338478						
ANR	338522	Symbol	* stack		338478						
ANR	338523	Symbol	persistent		338478						
ANR	338524	Symbol	stack -> top		338478						
ANR	338525	Symbol	stack -> elements		338478						
ANR	338526	Symbol	stack -> max		338478						
ANR	338527	Function	zend_ptr_stack_init	35:0:1527:1621							
ANR	338528	FunctionDef	zend_ptr_stack_init (zend_ptr_stack * stack)		338527	0					
ANR	338529	CompoundStatement		36:0:1584:1621	338527	0					
ANR	338530	ExpressionStatement	"zend_ptr_stack_init_ex ( stack , 0 )"	37:1:1587:1619	338527	0	True				
ANR	338531	CallExpression	"zend_ptr_stack_init_ex ( stack , 0 )"		338527	0					
ANR	338532	Callee	zend_ptr_stack_init_ex		338527	0					
ANR	338533	Identifier	zend_ptr_stack_init_ex		338527	0					
ANR	338534	ArgumentList	stack		338527	1					
ANR	338535	Argument	stack		338527	0					
ANR	338536	Identifier	stack		338527	0					
ANR	338537	Argument	0		338527	1					
ANR	338538	PrimaryExpression	0		338527	0					
ANR	338539	ReturnType	ZEND_API void		338527	1					
ANR	338540	Identifier	zend_ptr_stack_init		338527	2					
ANR	338541	ParameterList	zend_ptr_stack * stack		338527	3					
ANR	338542	Parameter	zend_ptr_stack * stack	35:34:1561:1581	338527	0	True				
ANR	338543	ParameterType	zend_ptr_stack *		338527	0					
ANR	338544	Identifier	stack		338527	1					
ANR	338545	CFGEntryNode	ENTRY		338527		True				
ANR	338546	CFGExitNode	EXIT		338527		True				
ANR	338547	Symbol	stack		338527						
ANR	338548	Function	zend_ptr_stack_n_push	41:0:1625:1928							
ANR	338549	FunctionDef	"zend_ptr_stack_n_push (zend_ptr_stack * stack , int count)"		338548	0					
ANR	338550	CompoundStatement		42:0:1700:1928	338548	0					
ANR	338551	IdentifierDeclStatement	va_list ptr ;	43:1:1703:1714	338548	0	True				
ANR	338552	IdentifierDecl	ptr		338548	0					
ANR	338553	IdentifierDeclType	va_list		338548	0					
ANR	338554	Identifier	ptr		338548	1					
ANR	338555	IdentifierDeclStatement	void * elem ;	44:1:1717:1727	338548	1	True				
ANR	338556	IdentifierDecl	* elem		338548	0					
ANR	338557	IdentifierDeclType	void *		338548	0					
ANR	338558	Identifier	elem		338548	1					
ANR	338559	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	46:1:1731:1761	338548	2	True				
ANR	338560	Statement	(	46:32:1762:1762	338548	3	True				
ANR	338561	Statement	stack	46:33:1763:1767	338548	4	True				
ANR	338562	Statement	","	46:38:1768:1768	338548	5	True				
ANR	338563	Statement	count	46:40:1770:1774	338548	6	True				
ANR	338564	Statement	)	46:45:1775:1775	338548	7	True				
ANR	338565	ExpressionStatement	"va_start ( ptr , count )"	48:1:1779:1799	338548	8	True				
ANR	338566	CallExpression	"va_start ( ptr , count )"		338548	0					
ANR	338567	Callee	va_start		338548	0					
ANR	338568	Identifier	va_start		338548	0					
ANR	338569	ArgumentList	ptr		338548	1					
ANR	338570	Argument	ptr		338548	0					
ANR	338571	Identifier	ptr		338548	0					
ANR	338572	Argument	count		338548	1					
ANR	338573	Identifier	count		338548	0					
ANR	338574	WhileStatement	while ( count > 0 )		338548	9					
ANR	338575	Condition	count > 0	49:8:1809:1815	338548	0	True				
ANR	338576	RelationalExpression	count > 0		338548	0		>			
ANR	338577	Identifier	count		338548	0					
ANR	338578	PrimaryExpression	0		338548	1					
ANR	338579	CompoundStatement		8:17:117:117	338548	1					
ANR	338580	Statement	elem	50:2:1822:1825	338548	0	True				
ANR	338581	Statement	=	50:7:1827:1827	338548	1	True				
ANR	338582	Statement	va_arg	50:9:1829:1834	338548	2	True				
ANR	338583	Statement	(	50:15:1835:1835	338548	3	True				
ANR	338584	Statement	ptr	50:16:1836:1838	338548	4	True				
ANR	338585	Statement	","	50:19:1839:1839	338548	5	True				
ANR	338586	Statement	void	50:21:1841:1844	338548	6	True				
ANR	338587	Statement	*	50:26:1846:1846	338548	7	True				
ANR	338588	Statement	)	50:27:1847:1847	338548	8	True				
ANR	338589	ExpressionStatement		50:28:1848:1848	338548	9	True				
ANR	338590	ExpressionStatement	stack -> top ++	51:2:1852:1864	338548	10	True				
ANR	338591	PostIncDecOperationExpression	stack -> top ++		338548	0					
ANR	338592	PtrMemberAccess	stack -> top		338548	0					
ANR	338593	Identifier	stack		338548	0					
ANR	338594	Identifier	top		338548	1					
ANR	338595	IncDec	++		338548	1					
ANR	338596	ExpressionStatement	* ( stack -> top_element ++ ) = elem	52:2:1868:1898	338548	11	True				
ANR	338597	AssignmentExpression	* ( stack -> top_element ++ ) = elem		338548	0		=			
ANR	338598	UnaryOperationExpression	* ( stack -> top_element ++ )		338548	0					
ANR	338599	UnaryOperator	*		338548	0					
ANR	338600	PostIncDecOperationExpression	stack -> top_element ++		338548	1					
ANR	338601	PtrMemberAccess	stack -> top_element		338548	0					
ANR	338602	Identifier	stack		338548	0					
ANR	338603	Identifier	top_element		338548	1					
ANR	338604	IncDec	++		338548	1					
ANR	338605	Identifier	elem		338548	1					
ANR	338606	ExpressionStatement	count --	53:2:1902:1909	338548	12	True				
ANR	338607	PostIncDecOperationExpression	count --		338548	0					
ANR	338608	Identifier	count		338548	0					
ANR	338609	IncDec	--		338548	1					
ANR	338610	ExpressionStatement	va_end ( ptr )	55:1:1915:1926	338548	10	True				
ANR	338611	CallExpression	va_end ( ptr )		338548	0					
ANR	338612	Callee	va_end		338548	0					
ANR	338613	Identifier	va_end		338548	0					
ANR	338614	ArgumentList	ptr		338548	1					
ANR	338615	Argument	ptr		338548	0					
ANR	338616	Identifier	ptr		338548	0					
ANR	338617	ReturnType	ZEND_API void		338548	1					
ANR	338618	Identifier	zend_ptr_stack_n_push		338548	2					
ANR	338619	ParameterList	"zend_ptr_stack * stack , int count"		338548	3					
ANR	338620	Parameter	zend_ptr_stack * stack	41:36:1661:1681	338548	0	True				
ANR	338621	ParameterType	zend_ptr_stack *		338548	0					
ANR	338622	Identifier	stack		338548	1					
ANR	338623	Parameter	int count	41:59:1684:1692	338548	1	True				
ANR	338624	ParameterType	int		338548	0					
ANR	338625	Identifier	count		338548	1					
ANR	338626	CFGEntryNode	ENTRY		338548		True				
ANR	338627	CFGExitNode	EXIT		338548		True				
ANR	338628	Symbol	elem		338548						
ANR	338629	Symbol	stack		338548						
ANR	338630	Symbol	stack -> top_element		338548						
ANR	338631	Symbol	* ( stack -> top_element ++ )		338548						
ANR	338632	Symbol	count		338548						
ANR	338633	Symbol	* stack		338548						
ANR	338634	Symbol	stack -> top		338548						
ANR	338635	Symbol	ptr		338548						
ANR	338636	Function	zend_ptr_stack_n_pop	59:0:1932:2189							
ANR	338637	FunctionDef	"zend_ptr_stack_n_pop (zend_ptr_stack * stack , int count)"		338636	0					
ANR	338638	CompoundStatement		60:0:2006:2189	338636	0					
ANR	338639	IdentifierDeclStatement	va_list ptr ;	61:1:2009:2020	338636	0	True				
ANR	338640	IdentifierDecl	ptr		338636	0					
ANR	338641	IdentifierDeclType	va_list		338636	0					
ANR	338642	Identifier	ptr		338636	1					
ANR	338643	IdentifierDeclStatement	void * * elem ;	62:1:2023:2034	338636	1	True				
ANR	338644	IdentifierDecl	* * elem		338636	0					
ANR	338645	IdentifierDeclType	void * *		338636	0					
ANR	338646	Identifier	elem		338636	1					
ANR	338647	ExpressionStatement	"va_start ( ptr , count )"	64:1:2038:2058	338636	2	True				
ANR	338648	CallExpression	"va_start ( ptr , count )"		338636	0					
ANR	338649	Callee	va_start		338636	0					
ANR	338650	Identifier	va_start		338636	0					
ANR	338651	ArgumentList	ptr		338636	1					
ANR	338652	Argument	ptr		338636	0					
ANR	338653	Identifier	ptr		338636	0					
ANR	338654	Argument	count		338636	1					
ANR	338655	Identifier	count		338636	0					
ANR	338656	WhileStatement	while ( count > 0 )		338636	3					
ANR	338657	Condition	count > 0	65:8:2068:2074	338636	0	True				
ANR	338658	RelationalExpression	count > 0		338636	0		>			
ANR	338659	Identifier	count		338636	0					
ANR	338660	PrimaryExpression	0		338636	1					
ANR	338661	CompoundStatement		6:17:70:70	338636	1					
ANR	338662	Statement	elem	66:2:2081:2084	338636	0	True				
ANR	338663	Statement	=	66:7:2086:2086	338636	1	True				
ANR	338664	Statement	va_arg	66:9:2088:2093	338636	2	True				
ANR	338665	Statement	(	66:15:2094:2094	338636	3	True				
ANR	338666	Statement	ptr	66:16:2095:2097	338636	4	True				
ANR	338667	Statement	","	66:19:2098:2098	338636	5	True				
ANR	338668	Statement	void	66:21:2100:2103	338636	6	True				
ANR	338669	Statement	*	66:26:2105:2105	338636	7	True				
ANR	338670	Statement	*	66:27:2106:2106	338636	8	True				
ANR	338671	Statement	)	66:28:2107:2107	338636	9	True				
ANR	338672	ExpressionStatement		66:29:2108:2108	338636	10	True				
ANR	338673	ExpressionStatement	* elem = * ( -- stack -> top_element )	67:2:2112:2143	338636	11	True				
ANR	338674	AssignmentExpression	* elem = * ( -- stack -> top_element )		338636	0		=			
ANR	338675	UnaryOperationExpression	* elem		338636	0					
ANR	338676	UnaryOperator	*		338636	0					
ANR	338677	Identifier	elem		338636	1					
ANR	338678	UnaryOperationExpression	* ( -- stack -> top_element )		338636	1					
ANR	338679	UnaryOperator	*		338636	0					
ANR	338680	UnaryExpression	-- stack -> top_element		338636	1					
ANR	338681	IncDec	--		338636	0					
ANR	338682	PtrMemberAccess	stack -> top_element		338636	1					
ANR	338683	Identifier	stack		338636	0					
ANR	338684	Identifier	top_element		338636	1					
ANR	338685	ExpressionStatement	stack -> top --	68:2:2147:2159	338636	12	True				
ANR	338686	PostIncDecOperationExpression	stack -> top --		338636	0					
ANR	338687	PtrMemberAccess	stack -> top		338636	0					
ANR	338688	Identifier	stack		338636	0					
ANR	338689	Identifier	top		338636	1					
ANR	338690	IncDec	--		338636	1					
ANR	338691	ExpressionStatement	count --	69:2:2163:2170	338636	13	True				
ANR	338692	PostIncDecOperationExpression	count --		338636	0					
ANR	338693	Identifier	count		338636	0					
ANR	338694	IncDec	--		338636	1					
ANR	338695	ExpressionStatement	va_end ( ptr )	71:1:2176:2187	338636	4	True				
ANR	338696	CallExpression	va_end ( ptr )		338636	0					
ANR	338697	Callee	va_end		338636	0					
ANR	338698	Identifier	va_end		338636	0					
ANR	338699	ArgumentList	ptr		338636	1					
ANR	338700	Argument	ptr		338636	0					
ANR	338701	Identifier	ptr		338636	0					
ANR	338702	ReturnType	ZEND_API void		338636	1					
ANR	338703	Identifier	zend_ptr_stack_n_pop		338636	2					
ANR	338704	ParameterList	"zend_ptr_stack * stack , int count"		338636	3					
ANR	338705	Parameter	zend_ptr_stack * stack	59:35:1967:1987	338636	0	True				
ANR	338706	ParameterType	zend_ptr_stack *		338636	0					
ANR	338707	Identifier	stack		338636	1					
ANR	338708	Parameter	int count	59:58:1990:1998	338636	1	True				
ANR	338709	ParameterType	int		338636	0					
ANR	338710	Identifier	count		338636	1					
ANR	338711	CFGEntryNode	ENTRY		338636		True				
ANR	338712	CFGExitNode	EXIT		338636		True				
ANR	338713	Symbol	elem		338636						
ANR	338714	Symbol	stack		338636						
ANR	338715	Symbol	* ( -- stack -> top_element )		338636						
ANR	338716	Symbol	stack -> top_element		338636						
ANR	338717	Symbol	* * stack		338636						
ANR	338718	Symbol	count		338636						
ANR	338719	Symbol	* stack		338636						
ANR	338720	Symbol	* elem		338636						
ANR	338721	Symbol	stack -> top		338636						
ANR	338722	Symbol	* stack -> top_element		338636						
ANR	338723	Symbol	ptr		338636						
ANR	338724	Function	zend_ptr_stack_destroy	76:0:2194:2329							
ANR	338725	FunctionDef	zend_ptr_stack_destroy (zend_ptr_stack * stack)		338724	0					
ANR	338726	CompoundStatement		77:0:2254:2329	338724	0					
ANR	338727	IfStatement	if ( stack -> elements )		338724	0					
ANR	338728	Condition	stack -> elements	78:5:2261:2275	338724	0	True				
ANR	338729	PtrMemberAccess	stack -> elements		338724	0					
ANR	338730	Identifier	stack		338724	0					
ANR	338731	Identifier	elements		338724	1					
ANR	338732	CompoundStatement		2:22:23:23	338724	1					
ANR	338733	ExpressionStatement	"pefree ( stack -> elements , stack -> persistent )"	79:2:2282:2324	338724	0	True				
ANR	338734	CallExpression	"pefree ( stack -> elements , stack -> persistent )"		338724	0					
ANR	338735	Callee	pefree		338724	0					
ANR	338736	Identifier	pefree		338724	0					
ANR	338737	ArgumentList	stack -> elements		338724	1					
ANR	338738	Argument	stack -> elements		338724	0					
ANR	338739	PtrMemberAccess	stack -> elements		338724	0					
ANR	338740	Identifier	stack		338724	0					
ANR	338741	Identifier	elements		338724	1					
ANR	338742	Argument	stack -> persistent		338724	1					
ANR	338743	PtrMemberAccess	stack -> persistent		338724	0					
ANR	338744	Identifier	stack		338724	0					
ANR	338745	Identifier	persistent		338724	1					
ANR	338746	ReturnType	ZEND_API void		338724	1					
ANR	338747	Identifier	zend_ptr_stack_destroy		338724	2					
ANR	338748	ParameterList	zend_ptr_stack * stack		338724	3					
ANR	338749	Parameter	zend_ptr_stack * stack	76:37:2231:2251	338724	0	True				
ANR	338750	ParameterType	zend_ptr_stack *		338724	0					
ANR	338751	Identifier	stack		338724	1					
ANR	338752	CFGEntryNode	ENTRY		338724		True				
ANR	338753	CFGExitNode	EXIT		338724		True				
ANR	338754	Symbol	stack		338724						
ANR	338755	Symbol	stack -> persistent		338724						
ANR	338756	Symbol	* stack		338724						
ANR	338757	Symbol	stack -> elements		338724						
ANR	338758	Function	zend_ptr_stack_apply	84:0:2333:2488							
ANR	338759	FunctionDef	"zend_ptr_stack_apply (zend_ptr_stack * stack , void ( * func ) ( void * ))"		338758	0					
ANR	338760	CompoundStatement		85:0:2413:2488	338758	0					
ANR	338761	IdentifierDeclStatement	int i = stack -> top ;	86:1:2416:2434	338758	0	True				
ANR	338762	IdentifierDecl	i = stack -> top		338758	0					
ANR	338763	IdentifierDeclType	int		338758	0					
ANR	338764	Identifier	i		338758	1					
ANR	338765	AssignmentExpression	i = stack -> top		338758	2		=			
ANR	338766	Identifier	i		338758	0					
ANR	338767	PtrMemberAccess	stack -> top		338758	1					
ANR	338768	Identifier	stack		338758	0					
ANR	338769	Identifier	top		338758	1					
ANR	338770	WhileStatement	while ( -- i >= 0 )		338758	1					
ANR	338771	Condition	-- i >= 0	88:8:2445:2452	338758	0	True				
ANR	338772	RelationalExpression	-- i >= 0		338758	0		>=			
ANR	338773	UnaryExpression	-- i		338758	0					
ANR	338774	IncDec	--		338758	0					
ANR	338775	Identifier	i		338758	1					
ANR	338776	PrimaryExpression	0		338758	1					
ANR	338777	CompoundStatement		4:18:41:41	338758	1					
ANR	338778	ExpressionStatement	func ( stack -> elements [ i ] )	89:2:2459:2483	338758	0	True				
ANR	338779	CallExpression	func ( stack -> elements [ i ] )		338758	0					
ANR	338780	Callee	func		338758	0					
ANR	338781	Identifier	func		338758	0					
ANR	338782	ArgumentList	stack -> elements [ i ]		338758	1					
ANR	338783	Argument	stack -> elements [ i ]		338758	0					
ANR	338784	ArrayIndexing	stack -> elements [ i ]		338758	0					
ANR	338785	PtrMemberAccess	stack -> elements		338758	0					
ANR	338786	Identifier	stack		338758	0					
ANR	338787	Identifier	elements		338758	1					
ANR	338788	Identifier	i		338758	1					
ANR	338789	ReturnType	ZEND_API void		338758	1					
ANR	338790	Identifier	zend_ptr_stack_apply		338758	2					
ANR	338791	ParameterList	"zend_ptr_stack * stack , void ( * func ) ( void * )"		338758	3					
ANR	338792	Parameter	zend_ptr_stack * stack	84:35:2368:2388	338758	0	True				
ANR	338793	ParameterType	zend_ptr_stack *		338758	0					
ANR	338794	Identifier	stack		338758	1					
ANR	338795	Parameter	void ( * func ) ( void * )	84:58:2391:2410	338758	1	True				
ANR	338796	ParameterType	(( void * ) void) *		338758	0					
ANR	338797	Identifier	func		338758	1					
ANR	338798	CFGEntryNode	ENTRY		338758		True				
ANR	338799	CFGExitNode	EXIT		338758		True				
ANR	338800	Symbol	stack		338758						
ANR	338801	Symbol	* i		338758						
ANR	338802	Symbol	func		338758						
ANR	338803	Symbol	* * stack		338758						
ANR	338804	Symbol	i		338758						
ANR	338805	Symbol	* stack		338758						
ANR	338806	Symbol	* stack -> elements		338758						
ANR	338807	Symbol	stack -> top		338758						
ANR	338808	Symbol	stack -> elements		338758						
ANR	338809	Function	zend_ptr_stack_clean	94:0:2492:2814							
ANR	338810	FunctionDef	"zend_ptr_stack_clean (zend_ptr_stack * stack , void ( * func ) ( void * ) , zend_bool free_elements)"		338809	0					
ANR	338811	CompoundStatement		95:0:2597:2814	338809	0					
ANR	338812	ExpressionStatement	"zend_ptr_stack_apply ( stack , func )"	96:1:2600:2633	338809	0	True				
ANR	338813	CallExpression	"zend_ptr_stack_apply ( stack , func )"		338809	0					
ANR	338814	Callee	zend_ptr_stack_apply		338809	0					
ANR	338815	Identifier	zend_ptr_stack_apply		338809	0					
ANR	338816	ArgumentList	stack		338809	1					
ANR	338817	Argument	stack		338809	0					
ANR	338818	Identifier	stack		338809	0					
ANR	338819	Argument	func		338809	1					
ANR	338820	Identifier	func		338809	0					
ANR	338821	IfStatement	if ( free_elements )		338809	1					
ANR	338822	Condition	free_elements	97:5:2640:2652	338809	0	True				
ANR	338823	Identifier	free_elements		338809	0					
ANR	338824	CompoundStatement		4:2:61:79	338809	1					
ANR	338825	IdentifierDeclStatement	int i = stack -> top ;	98:2:2659:2677	338809	0	True				
ANR	338826	IdentifierDecl	i = stack -> top		338809	0					
ANR	338827	IdentifierDeclType	int		338809	0					
ANR	338828	Identifier	i		338809	1					
ANR	338829	AssignmentExpression	i = stack -> top		338809	2		=			
ANR	338830	Identifier	i		338809	0					
ANR	338831	PtrMemberAccess	stack -> top		338809	1					
ANR	338832	Identifier	stack		338809	0					
ANR	338833	Identifier	top		338809	1					
ANR	338834	WhileStatement	while ( -- i >= 0 )		338809	1					
ANR	338835	Condition	-- i >= 0	100:9:2689:2696	338809	0	True				
ANR	338836	RelationalExpression	-- i >= 0		338809	0		>=			
ANR	338837	UnaryExpression	-- i		338809	0					
ANR	338838	IncDec	--		338809	0					
ANR	338839	Identifier	i		338809	1					
ANR	338840	PrimaryExpression	0		338809	1					
ANR	338841	CompoundStatement		6:19:101:101	338809	1					
ANR	338842	ExpressionStatement	"pefree ( stack -> elements [ i ] , stack -> persistent )"	101:3:2704:2749	338809	0	True				
ANR	338843	CallExpression	"pefree ( stack -> elements [ i ] , stack -> persistent )"		338809	0					
ANR	338844	Callee	pefree		338809	0					
ANR	338845	Identifier	pefree		338809	0					
ANR	338846	ArgumentList	stack -> elements [ i ]		338809	1					
ANR	338847	Argument	stack -> elements [ i ]		338809	0					
ANR	338848	ArrayIndexing	stack -> elements [ i ]		338809	0					
ANR	338849	PtrMemberAccess	stack -> elements		338809	0					
ANR	338850	Identifier	stack		338809	0					
ANR	338851	Identifier	elements		338809	1					
ANR	338852	Identifier	i		338809	1					
ANR	338853	Argument	stack -> persistent		338809	1					
ANR	338854	PtrMemberAccess	stack -> persistent		338809	0					
ANR	338855	Identifier	stack		338809	0					
ANR	338856	Identifier	persistent		338809	1					
ANR	338857	ExpressionStatement	stack -> top = 0	104:1:2759:2773	338809	2	True				
ANR	338858	AssignmentExpression	stack -> top = 0		338809	0		=			
ANR	338859	PtrMemberAccess	stack -> top		338809	0					
ANR	338860	Identifier	stack		338809	0					
ANR	338861	Identifier	top		338809	1					
ANR	338862	PrimaryExpression	0		338809	1					
ANR	338863	ExpressionStatement	stack -> top_element = stack -> elements	105:1:2776:2812	338809	3	True				
ANR	338864	AssignmentExpression	stack -> top_element = stack -> elements		338809	0		=			
ANR	338865	PtrMemberAccess	stack -> top_element		338809	0					
ANR	338866	Identifier	stack		338809	0					
ANR	338867	Identifier	top_element		338809	1					
ANR	338868	PtrMemberAccess	stack -> elements		338809	1					
ANR	338869	Identifier	stack		338809	0					
ANR	338870	Identifier	elements		338809	1					
ANR	338871	ReturnType	ZEND_API void		338809	1					
ANR	338872	Identifier	zend_ptr_stack_clean		338809	2					
ANR	338873	ParameterList	"zend_ptr_stack * stack , void ( * func ) ( void * ) , zend_bool free_elements"		338809	3					
ANR	338874	Parameter	zend_ptr_stack * stack	94:35:2527:2547	338809	0	True				
ANR	338875	ParameterType	zend_ptr_stack *		338809	0					
ANR	338876	Identifier	stack		338809	1					
ANR	338877	Parameter	void ( * func ) ( void * )	94:58:2550:2569	338809	1	True				
ANR	338878	ParameterType	(( void * ) void) *		338809	0					
ANR	338879	Identifier	func		338809	1					
ANR	338880	Parameter	zend_bool free_elements	94:80:2572:2594	338809	2	True				
ANR	338881	ParameterType	zend_bool		338809	0					
ANR	338882	Identifier	free_elements		338809	1					
ANR	338883	CFGEntryNode	ENTRY		338809		True				
ANR	338884	CFGExitNode	EXIT		338809		True				
ANR	338885	Symbol	free_elements		338809						
ANR	338886	Symbol	stack		338809						
ANR	338887	Symbol	* i		338809						
ANR	338888	Symbol	func		338809						
ANR	338889	Symbol	stack -> top_element		338809						
ANR	338890	Symbol	* * stack		338809						
ANR	338891	Symbol	stack -> persistent		338809						
ANR	338892	Symbol	i		338809						
ANR	338893	Symbol	* stack		338809						
ANR	338894	Symbol	* stack -> elements		338809						
ANR	338895	Symbol	stack -> top		338809						
ANR	338896	Symbol	stack -> elements		338809						
ANR	338897	Function	zend_ptr_stack_num_elements	109:0:2818:2904							
ANR	338898	FunctionDef	zend_ptr_stack_num_elements (zend_ptr_stack * stack)		338897	0					
ANR	338899	CompoundStatement		110:0:2882:2904	338897	0					
ANR	338900	ReturnStatement	return stack -> top ;	111:1:2885:2902	338897	0	True				
ANR	338901	PtrMemberAccess	stack -> top		338897	0					
ANR	338902	Identifier	stack		338897	0					
ANR	338903	Identifier	top		338897	1					
ANR	338904	ReturnType	ZEND_API int		338897	1					
ANR	338905	Identifier	zend_ptr_stack_num_elements		338897	2					
ANR	338906	ParameterList	zend_ptr_stack * stack		338897	3					
ANR	338907	Parameter	zend_ptr_stack * stack	109:41:2859:2879	338897	0	True				
ANR	338908	ParameterType	zend_ptr_stack *		338897	0					
ANR	338909	Identifier	stack		338897	1					
ANR	338910	CFGEntryNode	ENTRY		338897		True				
ANR	338911	CFGExitNode	EXIT		338897		True				
ANR	338912	Symbol	stack		338897						
ANR	338913	Symbol	* stack		338897						
ANR	338914	Symbol	stack -> top		338897						
