command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	166361	File	data/converged/CVE-2015-8617_php-src/Zend_zend_execute_API.c								
ANR	166362	DeclStmt									
ANR	166363	Decl							ZEND_API void ( * ) ( zend_execute_data * execute_data )	ZEND_API void ( * ) ( zend_execute_data * execute_data )	zend_execute_ex
ANR	166364	DeclStmt									
ANR	166365	Decl							"ZEND_API void ( * ) ( zend_execute_data * execute_data , zval * return_value )"	"ZEND_API void ( * ) ( zend_execute_data * execute_data , zval * return_value )"	zend_execute_internal
ANR	166366	DeclStmt									
ANR	166367	Decl							const zend_fcall_info	const zend_fcall_info	empty_fcall_info
ANR	166368	DeclStmt									
ANR	166369	Decl							const zend_fcall_info_cache	const zend_fcall_info_cache	empty_fcall_info_cache
ANR	166370	DeclStmt									
ANR	166371	Decl							ZEND_TLS HANDLE	ZEND_TLS HANDLE	tq_timer
ANR	166372	DeclStmt									
ANR	166373	Decl							void ( * ) ( int )	void ( * ) ( int )	original_sigsegv_handler
ANR	166374	Function	zend_handle_sigsegv	55:0:2216:2895							
ANR	166375	FunctionDef	zend_handle_sigsegv (int dummy)		166374	0					
ANR	166376	CompoundStatement		56:0:2269:2895	166374	0					
ANR	166377	ExpressionStatement	fflush ( stdout )	57:1:2272:2286	166374	0	True				
ANR	166378	CallExpression	fflush ( stdout )		166374	0					
ANR	166379	Callee	fflush		166374	0					
ANR	166380	Identifier	fflush		166374	0					
ANR	166381	ArgumentList	stdout		166374	1					
ANR	166382	Argument	stdout		166374	0					
ANR	166383	Identifier	stdout		166374	0					
ANR	166384	ExpressionStatement	fflush ( stderr )	58:1:2289:2303	166374	1	True				
ANR	166385	CallExpression	fflush ( stderr )		166374	0					
ANR	166386	Callee	fflush		166374	0					
ANR	166387	Identifier	fflush		166374	0					
ANR	166388	ArgumentList	stderr		166374	1					
ANR	166389	Argument	stderr		166374	0					
ANR	166390	Identifier	stderr		166374	0					
ANR	166391	IfStatement	if ( original_sigsegv_handler == zend_handle_sigsegv )		166374	2					
ANR	166392	Condition	original_sigsegv_handler == zend_handle_sigsegv	59:5:2310:2356	166374	0	True				
ANR	166393	EqualityExpression	original_sigsegv_handler == zend_handle_sigsegv		166374	0		==			
ANR	166394	Identifier	original_sigsegv_handler		166374	0					
ANR	166395	Identifier	zend_handle_sigsegv		166374	1					
ANR	166396	CompoundStatement		4:54:89:89	166374	1					
ANR	166397	ExpressionStatement	"signal ( SIGSEGV , original_sigsegv_handler )"	60:2:2363:2404	166374	0	True				
ANR	166398	CallExpression	"signal ( SIGSEGV , original_sigsegv_handler )"		166374	0					
ANR	166399	Callee	signal		166374	0					
ANR	166400	Identifier	signal		166374	0					
ANR	166401	ArgumentList	SIGSEGV		166374	1					
ANR	166402	Argument	SIGSEGV		166374	0					
ANR	166403	Identifier	SIGSEGV		166374	0					
ANR	166404	Argument	original_sigsegv_handler		166374	1					
ANR	166405	Identifier	original_sigsegv_handler		166374	0					
ANR	166406	ElseStatement	else		166374	0					
ANR	166407	CompoundStatement		6:8:144:144	166374	0					
ANR	166408	ExpressionStatement	"signal ( SIGSEGV , SIG_DFL )"	62:2:2418:2442	166374	0	True				
ANR	166409	CallExpression	"signal ( SIGSEGV , SIG_DFL )"		166374	0					
ANR	166410	Callee	signal		166374	0					
ANR	166411	Identifier	signal		166374	0					
ANR	166412	ArgumentList	SIGSEGV		166374	1					
ANR	166413	Argument	SIGSEGV		166374	0					
ANR	166414	Identifier	SIGSEGV		166374	0					
ANR	166415	Argument	SIG_DFL		166374	1					
ANR	166416	Identifier	SIG_DFL		166374	0					
ANR	166417	CompoundStatement		9:1:178:178	166374	3					
ANR	166418	ExpressionStatement	"fprintf ( stderr , ""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"" , active_opline -> opcode , active_opline - EG ( active_op_array ) -> opcodes , get_active_function_name ( ) , zend_get_executed_filename ( ) , zend_get_executed_lineno ( ) )"	66:2:2453:2706	166374	0	True				
ANR	166419	CallExpression	"fprintf ( stderr , ""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"" , active_opline -> opcode , active_opline - EG ( active_op_array ) -> opcodes , get_active_function_name ( ) , zend_get_executed_filename ( ) , zend_get_executed_lineno ( ) )"		166374	0					
ANR	166420	Callee	fprintf		166374	0					
ANR	166421	Identifier	fprintf		166374	0					
ANR	166422	ArgumentList	stderr		166374	1					
ANR	166423	Argument	stderr		166374	0					
ANR	166424	Identifier	stderr		166374	0					
ANR	166425	Argument	"""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"""		166374	1					
ANR	166426	PrimaryExpression	"""SIGSEGV caught on opcode %d on opline %d of %s() at %s:%d\\n\\n"""		166374	0					
ANR	166427	Argument	active_opline -> opcode		166374	2					
ANR	166428	PtrMemberAccess	active_opline -> opcode		166374	0					
ANR	166429	Identifier	active_opline		166374	0					
ANR	166430	Identifier	opcode		166374	1					
ANR	166431	Argument	active_opline - EG ( active_op_array ) -> opcodes		166374	3					
ANR	166432	AdditiveExpression	active_opline - EG ( active_op_array ) -> opcodes		166374	0		-			
ANR	166433	Identifier	active_opline		166374	0					
ANR	166434	PtrMemberAccess	EG ( active_op_array ) -> opcodes		166374	1					
ANR	166435	CallExpression	EG ( active_op_array )		166374	0					
ANR	166436	Callee	EG		166374	0					
ANR	166437	Identifier	EG		166374	0					
ANR	166438	ArgumentList	active_op_array		166374	1					
ANR	166439	Argument	active_op_array		166374	0					
ANR	166440	Identifier	active_op_array		166374	0					
ANR	166441	Identifier	opcodes		166374	1					
ANR	166442	Argument	get_active_function_name ( )		166374	4					
ANR	166443	CallExpression	get_active_function_name ( )		166374	0					
ANR	166444	Callee	get_active_function_name		166374	0					
ANR	166445	Identifier	get_active_function_name		166374	0					
ANR	166446	ArgumentList			166374	1					
ANR	166447	Argument	zend_get_executed_filename ( )		166374	5					
ANR	166448	CallExpression	zend_get_executed_filename ( )		166374	0					
ANR	166449	Callee	zend_get_executed_filename		166374	0					
ANR	166450	Identifier	zend_get_executed_filename		166374	0					
ANR	166451	ArgumentList			166374	1					
ANR	166452	Argument	zend_get_executed_lineno ( )		166374	6					
ANR	166453	CallExpression	zend_get_executed_lineno ( )		166374	0					
ANR	166454	Callee	zend_get_executed_lineno		166374	0					
ANR	166455	Identifier	zend_get_executed_lineno		166374	0					
ANR	166456	ArgumentList			166374	1					
ANR	166457	ExpressionStatement	fflush ( stderr )	74:2:2777:2791	166374	1	True				
ANR	166458	CallExpression	fflush ( stderr )		166374	0					
ANR	166459	Callee	fflush		166374	0					
ANR	166460	Identifier	fflush		166374	0					
ANR	166461	ArgumentList	stderr		166374	1					
ANR	166462	Argument	stderr		166374	0					
ANR	166463	Identifier	stderr		166374	0					
ANR	166464	IfStatement	if ( original_sigsegv_handler != zend_handle_sigsegv )		166374	4					
ANR	166465	Condition	original_sigsegv_handler != zend_handle_sigsegv	77:5:2808:2852	166374	0	True				
ANR	166466	EqualityExpression	original_sigsegv_handler != zend_handle_sigsegv		166374	0		!=			
ANR	166467	Identifier	original_sigsegv_handler		166374	0					
ANR	166468	Identifier	zend_handle_sigsegv		166374	1					
ANR	166469	CompoundStatement		22:52:585:585	166374	1					
ANR	166470	ExpressionStatement	original_sigsegv_handler ( dummy )	78:2:2859:2890	166374	0	True				
ANR	166471	CallExpression	original_sigsegv_handler ( dummy )		166374	0					
ANR	166472	Callee	original_sigsegv_handler		166374	0					
ANR	166473	Identifier	original_sigsegv_handler		166374	0					
ANR	166474	ArgumentList	dummy		166374	1					
ANR	166475	Argument	dummy		166374	0					
ANR	166476	Identifier	dummy		166374	0					
ANR	166477	ReturnType	static void		166374	1					
ANR	166478	Identifier	zend_handle_sigsegv		166374	2					
ANR	166479	ParameterList	int dummy		166374	3					
ANR	166480	Parameter	int dummy	55:32:2248:2256	166374	0	True				
ANR	166481	ParameterType	int		166374	0					
ANR	166482	Identifier	dummy		166374	1					
ANR	166483	CFGEntryNode	ENTRY		166374		True				
ANR	166484	CFGExitNode	EXIT		166374		True				
ANR	166485	Symbol	EG ( active_op_array ) -> opcodes		166374						
ANR	166486	Symbol	EG		166374						
ANR	166487	Symbol	stdout		166374						
ANR	166488	Symbol	original_sigsegv_handler		166374						
ANR	166489	Symbol	active_op_array		166374						
ANR	166490	Symbol	get_active_function_name		166374						
ANR	166491	Symbol	* EG		166374						
ANR	166492	Symbol	stderr		166374						
ANR	166493	Symbol	zend_handle_sigsegv		166374						
ANR	166494	Symbol	dummy		166374						
ANR	166495	Symbol	zend_get_executed_lineno		166374						
ANR	166496	Symbol	* active_opline		166374						
ANR	166497	Symbol	SIGSEGV		166374						
ANR	166498	Symbol	zend_get_executed_filename		166374						
ANR	166499	Symbol	SIG_DFL		166374						
ANR	166500	Symbol	active_opline -> opcode		166374						
ANR	166501	Symbol	active_opline		166374						
ANR	166502	Function	zend_extension_activator	84:0:2915:3047							
ANR	166503	FunctionDef	zend_extension_activator (zend_extension * extension)		166502	0					
ANR	166504	CompoundStatement		85:0:2989:3047	166502	0					
ANR	166505	IfStatement	if ( extension -> activate )		166502	0					
ANR	166506	Condition	extension -> activate	86:5:2996:3014	166502	0	True				
ANR	166507	PtrMemberAccess	extension -> activate		166502	0					
ANR	166508	Identifier	extension		166502	0					
ANR	166509	Identifier	activate		166502	1					
ANR	166510	CompoundStatement		2:26:27:27	166502	1					
ANR	166511	ExpressionStatement	extension -> activate ( )	87:2:3021:3042	166502	0	True				
ANR	166512	CallExpression	extension -> activate ( )		166502	0					
ANR	166513	Callee	extension -> activate		166502	0					
ANR	166514	PtrMemberAccess	extension -> activate		166502	0					
ANR	166515	Identifier	extension		166502	0					
ANR	166516	Identifier	activate		166502	1					
ANR	166517	ArgumentList			166502	1					
ANR	166518	ReturnType	static void		166502	1					
ANR	166519	Identifier	zend_extension_activator		166502	2					
ANR	166520	ParameterList	zend_extension * extension		166502	3					
ANR	166521	Parameter	zend_extension * extension	84:37:2952:2976	166502	0	True				
ANR	166522	ParameterType	zend_extension *		166502	0					
ANR	166523	Identifier	extension		166502	1					
ANR	166524	CFGEntryNode	ENTRY		166502		True				
ANR	166525	CFGExitNode	EXIT		166502		True				
ANR	166526	Symbol	extension		166502						
ANR	166527	Symbol	* extension		166502						
ANR	166528	Symbol	extension -> activate		166502						
ANR	166529	Function	zend_extension_deactivator	92:0:3060:3198							
ANR	166530	FunctionDef	zend_extension_deactivator (zend_extension * extension)		166529	0					
ANR	166531	CompoundStatement		93:0:3136:3198	166529	0					
ANR	166532	IfStatement	if ( extension -> deactivate )		166529	0					
ANR	166533	Condition	extension -> deactivate	94:5:3143:3163	166529	0	True				
ANR	166534	PtrMemberAccess	extension -> deactivate		166529	0					
ANR	166535	Identifier	extension		166529	0					
ANR	166536	Identifier	deactivate		166529	1					
ANR	166537	CompoundStatement		2:28:29:29	166529	1					
ANR	166538	ExpressionStatement	extension -> deactivate ( )	95:2:3170:3193	166529	0	True				
ANR	166539	CallExpression	extension -> deactivate ( )		166529	0					
ANR	166540	Callee	extension -> deactivate		166529	0					
ANR	166541	PtrMemberAccess	extension -> deactivate		166529	0					
ANR	166542	Identifier	extension		166529	0					
ANR	166543	Identifier	deactivate		166529	1					
ANR	166544	ArgumentList			166529	1					
ANR	166545	ReturnType	static void		166529	1					
ANR	166546	Identifier	zend_extension_deactivator		166529	2					
ANR	166547	ParameterList	zend_extension * extension		166529	3					
ANR	166548	Parameter	zend_extension * extension	92:39:3099:3123	166529	0	True				
ANR	166549	ParameterType	zend_extension *		166529	0					
ANR	166550	Identifier	extension		166529	1					
ANR	166551	CFGEntryNode	ENTRY		166529		True				
ANR	166552	CFGExitNode	EXIT		166529		True				
ANR	166553	Symbol	extension		166529						
ANR	166554	Symbol	extension -> deactivate		166529						
ANR	166555	Symbol	* extension		166529						
ANR	166556	Function	clean_non_persistent_function	100:0:3211:3414							
ANR	166557	FunctionDef	clean_non_persistent_function (zval * zv)		166556	0					
ANR	166558	CompoundStatement		101:0:3272:3414	166556	0					
ANR	166559	IdentifierDeclStatement	zend_function * function = Z_PTR_P ( zv ) ;	102:1:3275:3312	166556	0	True				
ANR	166560	IdentifierDecl	* function = Z_PTR_P ( zv )		166556	0					
ANR	166561	IdentifierDeclType	zend_function *		166556	0					
ANR	166562	Identifier	function		166556	1					
ANR	166563	AssignmentExpression	* function = Z_PTR_P ( zv )		166556	2		=			
ANR	166564	Identifier	function		166556	0					
ANR	166565	CallExpression	Z_PTR_P ( zv )		166556	1					
ANR	166566	Callee	Z_PTR_P		166556	0					
ANR	166567	Identifier	Z_PTR_P		166556	0					
ANR	166568	ArgumentList	zv		166556	1					
ANR	166569	Argument	zv		166556	0					
ANR	166570	Identifier	zv		166556	0					
ANR	166571	ReturnStatement	return ( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE ;	103:1:3315:3412	166556	1	True				
ANR	166572	ConditionalExpression	( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE		166556	0					
ANR	166573	Condition	function -> type == ZEND_INTERNAL_FUNCTION		166556	0					
ANR	166574	EqualityExpression	function -> type == ZEND_INTERNAL_FUNCTION		166556	0		==			
ANR	166575	PtrMemberAccess	function -> type		166556	0					
ANR	166576	Identifier	function		166556	0					
ANR	166577	Identifier	type		166556	1					
ANR	166578	Identifier	ZEND_INTERNAL_FUNCTION		166556	1					
ANR	166579	Identifier	ZEND_HASH_APPLY_STOP		166556	1					
ANR	166580	Identifier	ZEND_HASH_APPLY_REMOVE		166556	2					
ANR	166581	ReturnType	static int		166556	1					
ANR	166582	Identifier	clean_non_persistent_function		166556	2					
ANR	166583	ParameterList	zval * zv		166556	3					
ANR	166584	Parameter	zval * zv	100:41:3252:3259	166556	0	True				
ANR	166585	ParameterType	zval *		166556	0					
ANR	166586	Identifier	zv		166556	1					
ANR	166587	CFGEntryNode	ENTRY		166556		True				
ANR	166588	CFGExitNode	EXIT		166556		True				
ANR	166589	Symbol	ZEND_INTERNAL_FUNCTION		166556						
ANR	166590	Symbol	Z_PTR_P		166556						
ANR	166591	Symbol	function		166556						
ANR	166592	Symbol	* function		166556						
ANR	166593	Symbol	ZEND_HASH_APPLY_STOP		166556						
ANR	166594	Symbol	ZEND_HASH_APPLY_REMOVE		166556						
ANR	166595	Symbol	zv		166556						
ANR	166596	Symbol	function -> type		166556						
ANR	166597	Function	clean_non_persistent_function_full	107:0:3427:3637							
ANR	166598	FunctionDef	clean_non_persistent_function_full (zval * zv)		166597	0					
ANR	166599	CompoundStatement		108:0:3495:3637	166597	0					
ANR	166600	IdentifierDeclStatement	zend_function * function = Z_PTR_P ( zv ) ;	109:1:3498:3535	166597	0	True				
ANR	166601	IdentifierDecl	* function = Z_PTR_P ( zv )		166597	0					
ANR	166602	IdentifierDeclType	zend_function *		166597	0					
ANR	166603	Identifier	function		166597	1					
ANR	166604	AssignmentExpression	* function = Z_PTR_P ( zv )		166597	2		=			
ANR	166605	Identifier	function		166597	0					
ANR	166606	CallExpression	Z_PTR_P ( zv )		166597	1					
ANR	166607	Callee	Z_PTR_P		166597	0					
ANR	166608	Identifier	Z_PTR_P		166597	0					
ANR	166609	ArgumentList	zv		166597	1					
ANR	166610	Argument	zv		166597	0					
ANR	166611	Identifier	zv		166597	0					
ANR	166612	ReturnStatement	return ( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE ;	110:1:3538:3635	166597	1	True				
ANR	166613	ConditionalExpression	( function -> type == ZEND_INTERNAL_FUNCTION ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE		166597	0					
ANR	166614	Condition	function -> type == ZEND_INTERNAL_FUNCTION		166597	0					
ANR	166615	EqualityExpression	function -> type == ZEND_INTERNAL_FUNCTION		166597	0		==			
ANR	166616	PtrMemberAccess	function -> type		166597	0					
ANR	166617	Identifier	function		166597	0					
ANR	166618	Identifier	type		166597	1					
ANR	166619	Identifier	ZEND_INTERNAL_FUNCTION		166597	1					
ANR	166620	Identifier	ZEND_HASH_APPLY_KEEP		166597	1					
ANR	166621	Identifier	ZEND_HASH_APPLY_REMOVE		166597	2					
ANR	166622	ReturnType	ZEND_API int		166597	1					
ANR	166623	Identifier	clean_non_persistent_function_full		166597	2					
ANR	166624	ParameterList	zval * zv		166597	3					
ANR	166625	Parameter	zval * zv	107:48:3475:3482	166597	0	True				
ANR	166626	ParameterType	zval *		166597	0					
ANR	166627	Identifier	zv		166597	1					
ANR	166628	CFGEntryNode	ENTRY		166597		True				
ANR	166629	CFGExitNode	EXIT		166597		True				
ANR	166630	Symbol	ZEND_INTERNAL_FUNCTION		166597						
ANR	166631	Symbol	Z_PTR_P		166597						
ANR	166632	Symbol	ZEND_HASH_APPLY_KEEP		166597						
ANR	166633	Symbol	function		166597						
ANR	166634	Symbol	* function		166597						
ANR	166635	Symbol	ZEND_HASH_APPLY_REMOVE		166597						
ANR	166636	Symbol	zv		166597						
ANR	166637	Symbol	function -> type		166597						
ANR	166638	Function	clean_non_persistent_class	114:0:3650:3838							
ANR	166639	FunctionDef	clean_non_persistent_class (zval * zv)		166638	0					
ANR	166640	CompoundStatement		115:0:3708:3838	166638	0					
ANR	166641	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR_P ( zv ) ;	116:1:3711:3745	166638	0	True				
ANR	166642	IdentifierDecl	* ce = Z_PTR_P ( zv )		166638	0					
ANR	166643	IdentifierDeclType	zend_class_entry *		166638	0					
ANR	166644	Identifier	ce		166638	1					
ANR	166645	AssignmentExpression	* ce = Z_PTR_P ( zv )		166638	2		=			
ANR	166646	Identifier	ce		166638	0					
ANR	166647	CallExpression	Z_PTR_P ( zv )		166638	1					
ANR	166648	Callee	Z_PTR_P		166638	0					
ANR	166649	Identifier	Z_PTR_P		166638	0					
ANR	166650	ArgumentList	zv		166638	1					
ANR	166651	Argument	zv		166638	0					
ANR	166652	Identifier	zv		166638	0					
ANR	166653	ReturnStatement	return ( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE ;	117:1:3748:3836	166638	1	True				
ANR	166654	ConditionalExpression	( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE		166638	0					
ANR	166655	Condition	ce -> type == ZEND_INTERNAL_CLASS		166638	0					
ANR	166656	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		166638	0		==			
ANR	166657	PtrMemberAccess	ce -> type		166638	0					
ANR	166658	Identifier	ce		166638	0					
ANR	166659	Identifier	type		166638	1					
ANR	166660	Identifier	ZEND_INTERNAL_CLASS		166638	1					
ANR	166661	Identifier	ZEND_HASH_APPLY_STOP		166638	1					
ANR	166662	Identifier	ZEND_HASH_APPLY_REMOVE		166638	2					
ANR	166663	ReturnType	static int		166638	1					
ANR	166664	Identifier	clean_non_persistent_class		166638	2					
ANR	166665	ParameterList	zval * zv		166638	3					
ANR	166666	Parameter	zval * zv	114:38:3688:3695	166638	0	True				
ANR	166667	ParameterType	zval *		166638	0					
ANR	166668	Identifier	zv		166638	1					
ANR	166669	CFGEntryNode	ENTRY		166638		True				
ANR	166670	CFGExitNode	EXIT		166638		True				
ANR	166671	Symbol	ZEND_INTERNAL_CLASS		166638						
ANR	166672	Symbol	Z_PTR_P		166638						
ANR	166673	Symbol	ce -> type		166638						
ANR	166674	Symbol	ce		166638						
ANR	166675	Symbol	ZEND_HASH_APPLY_REMOVE		166638						
ANR	166676	Symbol	ZEND_HASH_APPLY_STOP		166638						
ANR	166677	Symbol	* ce		166638						
ANR	166678	Symbol	zv		166638						
ANR	166679	Function	clean_non_persistent_class_full	121:0:3851:4046							
ANR	166680	FunctionDef	clean_non_persistent_class_full (zval * zv)		166679	0					
ANR	166681	CompoundStatement		122:0:3916:4046	166679	0					
ANR	166682	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR_P ( zv ) ;	123:1:3919:3953	166679	0	True				
ANR	166683	IdentifierDecl	* ce = Z_PTR_P ( zv )		166679	0					
ANR	166684	IdentifierDeclType	zend_class_entry *		166679	0					
ANR	166685	Identifier	ce		166679	1					
ANR	166686	AssignmentExpression	* ce = Z_PTR_P ( zv )		166679	2		=			
ANR	166687	Identifier	ce		166679	0					
ANR	166688	CallExpression	Z_PTR_P ( zv )		166679	1					
ANR	166689	Callee	Z_PTR_P		166679	0					
ANR	166690	Identifier	Z_PTR_P		166679	0					
ANR	166691	ArgumentList	zv		166679	1					
ANR	166692	Argument	zv		166679	0					
ANR	166693	Identifier	zv		166679	0					
ANR	166694	ReturnStatement	return ( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE ;	124:1:3956:4044	166679	1	True				
ANR	166695	ConditionalExpression	( ce -> type == ZEND_INTERNAL_CLASS ) ? ZEND_HASH_APPLY_KEEP : ZEND_HASH_APPLY_REMOVE		166679	0					
ANR	166696	Condition	ce -> type == ZEND_INTERNAL_CLASS		166679	0					
ANR	166697	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		166679	0		==			
ANR	166698	PtrMemberAccess	ce -> type		166679	0					
ANR	166699	Identifier	ce		166679	0					
ANR	166700	Identifier	type		166679	1					
ANR	166701	Identifier	ZEND_INTERNAL_CLASS		166679	1					
ANR	166702	Identifier	ZEND_HASH_APPLY_KEEP		166679	1					
ANR	166703	Identifier	ZEND_HASH_APPLY_REMOVE		166679	2					
ANR	166704	ReturnType	ZEND_API int		166679	1					
ANR	166705	Identifier	clean_non_persistent_class_full		166679	2					
ANR	166706	ParameterList	zval * zv		166679	3					
ANR	166707	Parameter	zval * zv	121:45:3896:3903	166679	0	True				
ANR	166708	ParameterType	zval *		166679	0					
ANR	166709	Identifier	zv		166679	1					
ANR	166710	CFGEntryNode	ENTRY		166679		True				
ANR	166711	CFGExitNode	EXIT		166679		True				
ANR	166712	Symbol	ZEND_INTERNAL_CLASS		166679						
ANR	166713	Symbol	Z_PTR_P		166679						
ANR	166714	Symbol	ZEND_HASH_APPLY_KEEP		166679						
ANR	166715	Symbol	ce -> type		166679						
ANR	166716	Symbol	ce		166679						
ANR	166717	Symbol	ZEND_HASH_APPLY_REMOVE		166679						
ANR	166718	Symbol	* ce		166679						
ANR	166719	Symbol	zv		166679						
ANR	166720	Function	init_executor	128:0:4059:5642							
ANR	166721	FunctionDef	init_executor ()		166720	0					
ANR	166722	CompoundStatement		129:0:4094:5642	166720	0					
ANR	166723	ExpressionStatement	zend_init_fpu ( )	130:1:4097:4112	166720	0	True				
ANR	166724	CallExpression	zend_init_fpu ( )		166720	0					
ANR	166725	Callee	zend_init_fpu		166720	0					
ANR	166726	Identifier	zend_init_fpu		166720	0					
ANR	166727	ArgumentList			166720	1					
ANR	166728	ExpressionStatement	ZVAL_NULL ( & EG ( uninitialized_zval ) )	132:1:4116:4150	166720	1	True				
ANR	166729	CallExpression	ZVAL_NULL ( & EG ( uninitialized_zval ) )		166720	0					
ANR	166730	Callee	ZVAL_NULL		166720	0					
ANR	166731	Identifier	ZVAL_NULL		166720	0					
ANR	166732	ArgumentList	& EG ( uninitialized_zval )		166720	1					
ANR	166733	Argument	& EG ( uninitialized_zval )		166720	0					
ANR	166734	UnaryOperationExpression	& EG ( uninitialized_zval )		166720	0					
ANR	166735	UnaryOperator	&		166720	0					
ANR	166736	CallExpression	EG ( uninitialized_zval )		166720	1					
ANR	166737	Callee	EG		166720	0					
ANR	166738	Identifier	EG		166720	0					
ANR	166739	ArgumentList	uninitialized_zval		166720	1					
ANR	166740	Argument	uninitialized_zval		166720	0					
ANR	166741	Identifier	uninitialized_zval		166720	0					
ANR	166742	ExpressionStatement	ZVAL_NULL ( & EG ( error_zval ) )	133:1:4153:4179	166720	2	True				
ANR	166743	CallExpression	ZVAL_NULL ( & EG ( error_zval ) )		166720	0					
ANR	166744	Callee	ZVAL_NULL		166720	0					
ANR	166745	Identifier	ZVAL_NULL		166720	0					
ANR	166746	ArgumentList	& EG ( error_zval )		166720	1					
ANR	166747	Argument	& EG ( error_zval )		166720	0					
ANR	166748	UnaryOperationExpression	& EG ( error_zval )		166720	0					
ANR	166749	UnaryOperator	&		166720	0					
ANR	166750	CallExpression	EG ( error_zval )		166720	1					
ANR	166751	Callee	EG		166720	0					
ANR	166752	Identifier	EG		166720	0					
ANR	166753	ArgumentList	error_zval		166720	1					
ANR	166754	Argument	error_zval		166720	0					
ANR	166755	Identifier	error_zval		166720	0					
ANR	166756	ExpressionStatement	"original_sigsegv_handler = signal ( SIGSEGV , zend_handle_sigsegv )"	136:1:4265:4328	166720	3	True				
ANR	166757	AssignmentExpression	"original_sigsegv_handler = signal ( SIGSEGV , zend_handle_sigsegv )"		166720	0		=			
ANR	166758	Identifier	original_sigsegv_handler		166720	0					
ANR	166759	CallExpression	"signal ( SIGSEGV , zend_handle_sigsegv )"		166720	1					
ANR	166760	Callee	signal		166720	0					
ANR	166761	Identifier	signal		166720	0					
ANR	166762	ArgumentList	SIGSEGV		166720	1					
ANR	166763	Argument	SIGSEGV		166720	0					
ANR	166764	Identifier	SIGSEGV		166720	0					
ANR	166765	Argument	zend_handle_sigsegv		166720	1					
ANR	166766	Identifier	zend_handle_sigsegv		166720	0					
ANR	166767	ExpressionStatement	EG ( symtable_cache_ptr ) = EG ( symtable_cache ) - 1	139:1:4339:4386	166720	4	True				
ANR	166768	AssignmentExpression	EG ( symtable_cache_ptr ) = EG ( symtable_cache ) - 1		166720	0		=			
ANR	166769	CallExpression	EG ( symtable_cache_ptr )		166720	0					
ANR	166770	Callee	EG		166720	0					
ANR	166771	Identifier	EG		166720	0					
ANR	166772	ArgumentList	symtable_cache_ptr		166720	1					
ANR	166773	Argument	symtable_cache_ptr		166720	0					
ANR	166774	Identifier	symtable_cache_ptr		166720	0					
ANR	166775	AdditiveExpression	EG ( symtable_cache ) - 1		166720	1		-			
ANR	166776	CallExpression	EG ( symtable_cache )		166720	0					
ANR	166777	Callee	EG		166720	0					
ANR	166778	Identifier	EG		166720	0					
ANR	166779	ArgumentList	symtable_cache		166720	1					
ANR	166780	Argument	symtable_cache		166720	0					
ANR	166781	Identifier	symtable_cache		166720	0					
ANR	166782	PrimaryExpression	1		166720	1					
ANR	166783	ExpressionStatement	EG ( symtable_cache_limit ) = EG ( symtable_cache ) + SYMTABLE_CACHE_SIZE - 1	140:1:4389:4460	166720	5	True				
ANR	166784	AssignmentExpression	EG ( symtable_cache_limit ) = EG ( symtable_cache ) + SYMTABLE_CACHE_SIZE - 1		166720	0		=			
ANR	166785	CallExpression	EG ( symtable_cache_limit )		166720	0					
ANR	166786	Callee	EG		166720	0					
ANR	166787	Identifier	EG		166720	0					
ANR	166788	ArgumentList	symtable_cache_limit		166720	1					
ANR	166789	Argument	symtable_cache_limit		166720	0					
ANR	166790	Identifier	symtable_cache_limit		166720	0					
ANR	166791	AdditiveExpression	EG ( symtable_cache ) + SYMTABLE_CACHE_SIZE - 1		166720	1		+			
ANR	166792	CallExpression	EG ( symtable_cache )		166720	0					
ANR	166793	Callee	EG		166720	0					
ANR	166794	Identifier	EG		166720	0					
ANR	166795	ArgumentList	symtable_cache		166720	1					
ANR	166796	Argument	symtable_cache		166720	0					
ANR	166797	Identifier	symtable_cache		166720	0					
ANR	166798	AdditiveExpression	SYMTABLE_CACHE_SIZE - 1		166720	1		-			
ANR	166799	Identifier	SYMTABLE_CACHE_SIZE		166720	0					
ANR	166800	PrimaryExpression	1		166720	1					
ANR	166801	ExpressionStatement	EG ( no_extensions ) = 0	141:1:4463:4484	166720	6	True				
ANR	166802	AssignmentExpression	EG ( no_extensions ) = 0		166720	0		=			
ANR	166803	CallExpression	EG ( no_extensions )		166720	0					
ANR	166804	Callee	EG		166720	0					
ANR	166805	Identifier	EG		166720	0					
ANR	166806	ArgumentList	no_extensions		166720	1					
ANR	166807	Argument	no_extensions		166720	0					
ANR	166808	Identifier	no_extensions		166720	0					
ANR	166809	PrimaryExpression	0		166720	1					
ANR	166810	ExpressionStatement	EG ( function_table ) = CG ( function_table )	143:1:4488:4527	166720	7	True				
ANR	166811	AssignmentExpression	EG ( function_table ) = CG ( function_table )		166720	0		=			
ANR	166812	CallExpression	EG ( function_table )		166720	0					
ANR	166813	Callee	EG		166720	0					
ANR	166814	Identifier	EG		166720	0					
ANR	166815	ArgumentList	function_table		166720	1					
ANR	166816	Argument	function_table		166720	0					
ANR	166817	Identifier	function_table		166720	0					
ANR	166818	CallExpression	CG ( function_table )		166720	1					
ANR	166819	Callee	CG		166720	0					
ANR	166820	Identifier	CG		166720	0					
ANR	166821	ArgumentList	function_table		166720	1					
ANR	166822	Argument	function_table		166720	0					
ANR	166823	Identifier	function_table		166720	0					
ANR	166824	ExpressionStatement	EG ( class_table ) = CG ( class_table )	144:1:4530:4563	166720	8	True				
ANR	166825	AssignmentExpression	EG ( class_table ) = CG ( class_table )		166720	0		=			
ANR	166826	CallExpression	EG ( class_table )		166720	0					
ANR	166827	Callee	EG		166720	0					
ANR	166828	Identifier	EG		166720	0					
ANR	166829	ArgumentList	class_table		166720	1					
ANR	166830	Argument	class_table		166720	0					
ANR	166831	Identifier	class_table		166720	0					
ANR	166832	CallExpression	CG ( class_table )		166720	1					
ANR	166833	Callee	CG		166720	0					
ANR	166834	Identifier	CG		166720	0					
ANR	166835	ArgumentList	class_table		166720	1					
ANR	166836	Argument	class_table		166720	0					
ANR	166837	Identifier	class_table		166720	0					
ANR	166838	ExpressionStatement	EG ( in_autoload ) = NULL	146:1:4567:4589	166720	9	True				
ANR	166839	AssignmentExpression	EG ( in_autoload ) = NULL		166720	0		=			
ANR	166840	CallExpression	EG ( in_autoload )		166720	0					
ANR	166841	Callee	EG		166720	0					
ANR	166842	Identifier	EG		166720	0					
ANR	166843	ArgumentList	in_autoload		166720	1					
ANR	166844	Argument	in_autoload		166720	0					
ANR	166845	Identifier	in_autoload		166720	0					
ANR	166846	Identifier	NULL		166720	1					
ANR	166847	ExpressionStatement	EG ( autoload_func ) = NULL	147:1:4592:4616	166720	10	True				
ANR	166848	AssignmentExpression	EG ( autoload_func ) = NULL		166720	0		=			
ANR	166849	CallExpression	EG ( autoload_func )		166720	0					
ANR	166850	Callee	EG		166720	0					
ANR	166851	Identifier	EG		166720	0					
ANR	166852	ArgumentList	autoload_func		166720	1					
ANR	166853	Argument	autoload_func		166720	0					
ANR	166854	Identifier	autoload_func		166720	0					
ANR	166855	Identifier	NULL		166720	1					
ANR	166856	ExpressionStatement	EG ( error_handling ) = EH_NORMAL	148:1:4619:4649	166720	11	True				
ANR	166857	AssignmentExpression	EG ( error_handling ) = EH_NORMAL		166720	0		=			
ANR	166858	CallExpression	EG ( error_handling )		166720	0					
ANR	166859	Callee	EG		166720	0					
ANR	166860	Identifier	EG		166720	0					
ANR	166861	ArgumentList	error_handling		166720	1					
ANR	166862	Argument	error_handling		166720	0					
ANR	166863	Identifier	error_handling		166720	0					
ANR	166864	Identifier	EH_NORMAL		166720	1					
ANR	166865	ExpressionStatement	zend_vm_stack_init ( )	150:1:4653:4673	166720	12	True				
ANR	166866	CallExpression	zend_vm_stack_init ( )		166720	0					
ANR	166867	Callee	zend_vm_stack_init		166720	0					
ANR	166868	Identifier	zend_vm_stack_init		166720	0					
ANR	166869	ArgumentList			166720	1					
ANR	166870	ExpressionStatement	"zend_hash_init ( & EG ( symbol_table ) , 64 , NULL , ZVAL_PTR_DTOR , 0 )"	152:1:4677:4738	166720	13	True				
ANR	166871	CallExpression	"zend_hash_init ( & EG ( symbol_table ) , 64 , NULL , ZVAL_PTR_DTOR , 0 )"		166720	0					
ANR	166872	Callee	zend_hash_init		166720	0					
ANR	166873	Identifier	zend_hash_init		166720	0					
ANR	166874	ArgumentList	& EG ( symbol_table )		166720	1					
ANR	166875	Argument	& EG ( symbol_table )		166720	0					
ANR	166876	UnaryOperationExpression	& EG ( symbol_table )		166720	0					
ANR	166877	UnaryOperator	&		166720	0					
ANR	166878	CallExpression	EG ( symbol_table )		166720	1					
ANR	166879	Callee	EG		166720	0					
ANR	166880	Identifier	EG		166720	0					
ANR	166881	ArgumentList	symbol_table		166720	1					
ANR	166882	Argument	symbol_table		166720	0					
ANR	166883	Identifier	symbol_table		166720	0					
ANR	166884	Argument	64		166720	1					
ANR	166885	PrimaryExpression	64		166720	0					
ANR	166886	Argument	NULL		166720	2					
ANR	166887	Identifier	NULL		166720	0					
ANR	166888	Argument	ZVAL_PTR_DTOR		166720	3					
ANR	166889	Identifier	ZVAL_PTR_DTOR		166720	0					
ANR	166890	Argument	0		166720	4					
ANR	166891	PrimaryExpression	0		166720	0					
ANR	166892	ExpressionStatement	EG ( valid_symbol_table ) = 1	153:1:4741:4767	166720	14	True				
ANR	166893	AssignmentExpression	EG ( valid_symbol_table ) = 1		166720	0		=			
ANR	166894	CallExpression	EG ( valid_symbol_table )		166720	0					
ANR	166895	Callee	EG		166720	0					
ANR	166896	Identifier	EG		166720	0					
ANR	166897	ArgumentList	valid_symbol_table		166720	1					
ANR	166898	Argument	valid_symbol_table		166720	0					
ANR	166899	Identifier	valid_symbol_table		166720	0					
ANR	166900	PrimaryExpression	1		166720	1					
ANR	166901	ExpressionStatement	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_activator )"	155:1:4771:4852	166720	15	True				
ANR	166902	CallExpression	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_activator )"		166720	0					
ANR	166903	Callee	zend_llist_apply		166720	0					
ANR	166904	Identifier	zend_llist_apply		166720	0					
ANR	166905	ArgumentList	& zend_extensions		166720	1					
ANR	166906	Argument	& zend_extensions		166720	0					
ANR	166907	UnaryOperationExpression	& zend_extensions		166720	0					
ANR	166908	UnaryOperator	&		166720	0					
ANR	166909	Identifier	zend_extensions		166720	1					
ANR	166910	Argument	( llist_apply_func_t ) zend_extension_activator		166720	1					
ANR	166911	CastExpression	( llist_apply_func_t ) zend_extension_activator		166720	0					
ANR	166912	CastTarget	llist_apply_func_t		166720	0					
ANR	166913	Identifier	zend_extension_activator		166720	1					
ANR	166914	ExpressionStatement	"zend_hash_init ( & EG ( included_files ) , 8 , NULL , NULL , 0 )"	157:1:4856:4909	166720	16	True				
ANR	166915	CallExpression	"zend_hash_init ( & EG ( included_files ) , 8 , NULL , NULL , 0 )"		166720	0					
ANR	166916	Callee	zend_hash_init		166720	0					
ANR	166917	Identifier	zend_hash_init		166720	0					
ANR	166918	ArgumentList	& EG ( included_files )		166720	1					
ANR	166919	Argument	& EG ( included_files )		166720	0					
ANR	166920	UnaryOperationExpression	& EG ( included_files )		166720	0					
ANR	166921	UnaryOperator	&		166720	0					
ANR	166922	CallExpression	EG ( included_files )		166720	1					
ANR	166923	Callee	EG		166720	0					
ANR	166924	Identifier	EG		166720	0					
ANR	166925	ArgumentList	included_files		166720	1					
ANR	166926	Argument	included_files		166720	0					
ANR	166927	Identifier	included_files		166720	0					
ANR	166928	Argument	8		166720	1					
ANR	166929	PrimaryExpression	8		166720	0					
ANR	166930	Argument	NULL		166720	2					
ANR	166931	Identifier	NULL		166720	0					
ANR	166932	Argument	NULL		166720	3					
ANR	166933	Identifier	NULL		166720	0					
ANR	166934	Argument	0		166720	4					
ANR	166935	PrimaryExpression	0		166720	0					
ANR	166936	ExpressionStatement	EG ( ticks_count ) = 0	159:1:4913:4932	166720	17	True				
ANR	166937	AssignmentExpression	EG ( ticks_count ) = 0		166720	0		=			
ANR	166938	CallExpression	EG ( ticks_count )		166720	0					
ANR	166939	Callee	EG		166720	0					
ANR	166940	Identifier	EG		166720	0					
ANR	166941	ArgumentList	ticks_count		166720	1					
ANR	166942	Argument	ticks_count		166720	0					
ANR	166943	Identifier	ticks_count		166720	0					
ANR	166944	PrimaryExpression	0		166720	1					
ANR	166945	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_error_handler ) )	161:1:4936:4971	166720	18	True				
ANR	166946	CallExpression	ZVAL_UNDEF ( & EG ( user_error_handler ) )		166720	0					
ANR	166947	Callee	ZVAL_UNDEF		166720	0					
ANR	166948	Identifier	ZVAL_UNDEF		166720	0					
ANR	166949	ArgumentList	& EG ( user_error_handler )		166720	1					
ANR	166950	Argument	& EG ( user_error_handler )		166720	0					
ANR	166951	UnaryOperationExpression	& EG ( user_error_handler )		166720	0					
ANR	166952	UnaryOperator	&		166720	0					
ANR	166953	CallExpression	EG ( user_error_handler )		166720	1					
ANR	166954	Callee	EG		166720	0					
ANR	166955	Identifier	EG		166720	0					
ANR	166956	ArgumentList	user_error_handler		166720	1					
ANR	166957	Argument	user_error_handler		166720	0					
ANR	166958	Identifier	user_error_handler		166720	0					
ANR	166959	ExpressionStatement	EG ( current_execute_data ) = NULL	163:1:4975:5006	166720	19	True				
ANR	166960	AssignmentExpression	EG ( current_execute_data ) = NULL		166720	0		=			
ANR	166961	CallExpression	EG ( current_execute_data )		166720	0					
ANR	166962	Callee	EG		166720	0					
ANR	166963	Identifier	EG		166720	0					
ANR	166964	ArgumentList	current_execute_data		166720	1					
ANR	166965	Argument	current_execute_data		166720	0					
ANR	166966	Identifier	current_execute_data		166720	0					
ANR	166967	Identifier	NULL		166720	1					
ANR	166968	ExpressionStatement	"zend_stack_init ( & EG ( user_error_handlers_error_reporting ) , sizeof ( int ) )"	165:1:5010:5080	166720	20	True				
ANR	166969	CallExpression	"zend_stack_init ( & EG ( user_error_handlers_error_reporting ) , sizeof ( int ) )"		166720	0					
ANR	166970	Callee	zend_stack_init		166720	0					
ANR	166971	Identifier	zend_stack_init		166720	0					
ANR	166972	ArgumentList	& EG ( user_error_handlers_error_reporting )		166720	1					
ANR	166973	Argument	& EG ( user_error_handlers_error_reporting )		166720	0					
ANR	166974	UnaryOperationExpression	& EG ( user_error_handlers_error_reporting )		166720	0					
ANR	166975	UnaryOperator	&		166720	0					
ANR	166976	CallExpression	EG ( user_error_handlers_error_reporting )		166720	1					
ANR	166977	Callee	EG		166720	0					
ANR	166978	Identifier	EG		166720	0					
ANR	166979	ArgumentList	user_error_handlers_error_reporting		166720	1					
ANR	166980	Argument	user_error_handlers_error_reporting		166720	0					
ANR	166981	Identifier	user_error_handlers_error_reporting		166720	0					
ANR	166982	Argument	sizeof ( int )		166720	1					
ANR	166983	SizeofExpression	sizeof ( int )		166720	0					
ANR	166984	Sizeof	sizeof		166720	0					
ANR	166985	SizeofOperand	int		166720	1					
ANR	166986	ExpressionStatement	"zend_stack_init ( & EG ( user_error_handlers ) , sizeof ( zval ) )"	166:1:5083:5138	166720	21	True				
ANR	166987	CallExpression	"zend_stack_init ( & EG ( user_error_handlers ) , sizeof ( zval ) )"		166720	0					
ANR	166988	Callee	zend_stack_init		166720	0					
ANR	166989	Identifier	zend_stack_init		166720	0					
ANR	166990	ArgumentList	& EG ( user_error_handlers )		166720	1					
ANR	166991	Argument	& EG ( user_error_handlers )		166720	0					
ANR	166992	UnaryOperationExpression	& EG ( user_error_handlers )		166720	0					
ANR	166993	UnaryOperator	&		166720	0					
ANR	166994	CallExpression	EG ( user_error_handlers )		166720	1					
ANR	166995	Callee	EG		166720	0					
ANR	166996	Identifier	EG		166720	0					
ANR	166997	ArgumentList	user_error_handlers		166720	1					
ANR	166998	Argument	user_error_handlers		166720	0					
ANR	166999	Identifier	user_error_handlers		166720	0					
ANR	167000	Argument	sizeof ( zval )		166720	1					
ANR	167001	SizeofExpression	sizeof ( zval )		166720	0					
ANR	167002	Sizeof	sizeof		166720	0					
ANR	167003	SizeofOperand	zval		166720	1					
ANR	167004	ExpressionStatement	"zend_stack_init ( & EG ( user_exception_handlers ) , sizeof ( zval ) )"	167:1:5141:5200	166720	22	True				
ANR	167005	CallExpression	"zend_stack_init ( & EG ( user_exception_handlers ) , sizeof ( zval ) )"		166720	0					
ANR	167006	Callee	zend_stack_init		166720	0					
ANR	167007	Identifier	zend_stack_init		166720	0					
ANR	167008	ArgumentList	& EG ( user_exception_handlers )		166720	1					
ANR	167009	Argument	& EG ( user_exception_handlers )		166720	0					
ANR	167010	UnaryOperationExpression	& EG ( user_exception_handlers )		166720	0					
ANR	167011	UnaryOperator	&		166720	0					
ANR	167012	CallExpression	EG ( user_exception_handlers )		166720	1					
ANR	167013	Callee	EG		166720	0					
ANR	167014	Identifier	EG		166720	0					
ANR	167015	ArgumentList	user_exception_handlers		166720	1					
ANR	167016	Argument	user_exception_handlers		166720	0					
ANR	167017	Identifier	user_exception_handlers		166720	0					
ANR	167018	Argument	sizeof ( zval )		166720	1					
ANR	167019	SizeofExpression	sizeof ( zval )		166720	0					
ANR	167020	Sizeof	sizeof		166720	0					
ANR	167021	SizeofOperand	zval		166720	1					
ANR	167022	ExpressionStatement	"zend_objects_store_init ( & EG ( objects_store ) , 1024 )"	169:1:5204:5253	166720	23	True				
ANR	167023	CallExpression	"zend_objects_store_init ( & EG ( objects_store ) , 1024 )"		166720	0					
ANR	167024	Callee	zend_objects_store_init		166720	0					
ANR	167025	Identifier	zend_objects_store_init		166720	0					
ANR	167026	ArgumentList	& EG ( objects_store )		166720	1					
ANR	167027	Argument	& EG ( objects_store )		166720	0					
ANR	167028	UnaryOperationExpression	& EG ( objects_store )		166720	0					
ANR	167029	UnaryOperator	&		166720	0					
ANR	167030	CallExpression	EG ( objects_store )		166720	1					
ANR	167031	Callee	EG		166720	0					
ANR	167032	Identifier	EG		166720	0					
ANR	167033	ArgumentList	objects_store		166720	1					
ANR	167034	Argument	objects_store		166720	0					
ANR	167035	Identifier	objects_store		166720	0					
ANR	167036	Argument	1024		166720	1					
ANR	167037	PrimaryExpression	1024		166720	0					
ANR	167038	ExpressionStatement	EG ( full_tables_cleanup ) = 0	171:1:5257:5284	166720	24	True				
ANR	167039	AssignmentExpression	EG ( full_tables_cleanup ) = 0		166720	0		=			
ANR	167040	CallExpression	EG ( full_tables_cleanup )		166720	0					
ANR	167041	Callee	EG		166720	0					
ANR	167042	Identifier	EG		166720	0					
ANR	167043	ArgumentList	full_tables_cleanup		166720	1					
ANR	167044	Argument	full_tables_cleanup		166720	0					
ANR	167045	Identifier	full_tables_cleanup		166720	0					
ANR	167046	PrimaryExpression	0		166720	1					
ANR	167047	ExpressionStatement	EG ( timed_out ) = 0	173:1:5305:5322	166720	25	True				
ANR	167048	AssignmentExpression	EG ( timed_out ) = 0		166720	0		=			
ANR	167049	CallExpression	EG ( timed_out )		166720	0					
ANR	167050	Callee	EG		166720	0					
ANR	167051	Identifier	EG		166720	0					
ANR	167052	ArgumentList	timed_out		166720	1					
ANR	167053	Argument	timed_out		166720	0					
ANR	167054	Identifier	timed_out		166720	0					
ANR	167055	PrimaryExpression	0		166720	1					
ANR	167056	ExpressionStatement	EG ( exception ) = NULL	176:1:5333:5353	166720	26	True				
ANR	167057	AssignmentExpression	EG ( exception ) = NULL		166720	0		=			
ANR	167058	CallExpression	EG ( exception )		166720	0					
ANR	167059	Callee	EG		166720	0					
ANR	167060	Identifier	EG		166720	0					
ANR	167061	ArgumentList	exception		166720	1					
ANR	167062	Argument	exception		166720	0					
ANR	167063	Identifier	exception		166720	0					
ANR	167064	Identifier	NULL		166720	1					
ANR	167065	ExpressionStatement	EG ( prev_exception ) = NULL	177:1:5356:5381	166720	27	True				
ANR	167066	AssignmentExpression	EG ( prev_exception ) = NULL		166720	0		=			
ANR	167067	CallExpression	EG ( prev_exception )		166720	0					
ANR	167068	Callee	EG		166720	0					
ANR	167069	Identifier	EG		166720	0					
ANR	167070	ArgumentList	prev_exception		166720	1					
ANR	167071	Argument	prev_exception		166720	0					
ANR	167072	Identifier	prev_exception		166720	0					
ANR	167073	Identifier	NULL		166720	1					
ANR	167074	ExpressionStatement	EG ( scope ) = NULL	179:1:5385:5401	166720	28	True				
ANR	167075	AssignmentExpression	EG ( scope ) = NULL		166720	0		=			
ANR	167076	CallExpression	EG ( scope )		166720	0					
ANR	167077	Callee	EG		166720	0					
ANR	167078	Identifier	EG		166720	0					
ANR	167079	ArgumentList	scope		166720	1					
ANR	167080	Argument	scope		166720	0					
ANR	167081	Identifier	scope		166720	0					
ANR	167082	Identifier	NULL		166720	1					
ANR	167083	ExpressionStatement	EG ( ht_iterators_count ) = sizeof ( EG ( ht_iterators_slots ) ) / sizeof ( HashTableIterator )	181:1:5405:5488	166720	29	True				
ANR	167084	AssignmentExpression	EG ( ht_iterators_count ) = sizeof ( EG ( ht_iterators_slots ) ) / sizeof ( HashTableIterator )		166720	0		=			
ANR	167085	CallExpression	EG ( ht_iterators_count )		166720	0					
ANR	167086	Callee	EG		166720	0					
ANR	167087	Identifier	EG		166720	0					
ANR	167088	ArgumentList	ht_iterators_count		166720	1					
ANR	167089	Argument	ht_iterators_count		166720	0					
ANR	167090	Identifier	ht_iterators_count		166720	0					
ANR	167091	MultiplicativeExpression	sizeof ( EG ( ht_iterators_slots ) ) / sizeof ( HashTableIterator )		166720	1		/			
ANR	167092	SizeofExpression	sizeof ( EG ( ht_iterators_slots ) )		166720	0					
ANR	167093	Sizeof	sizeof		166720	0					
ANR	167094	CallExpression	EG ( ht_iterators_slots )		166720	1					
ANR	167095	Callee	EG		166720	0					
ANR	167096	Identifier	EG		166720	0					
ANR	167097	ArgumentList	ht_iterators_slots		166720	1					
ANR	167098	Argument	ht_iterators_slots		166720	0					
ANR	167099	Identifier	ht_iterators_slots		166720	0					
ANR	167100	SizeofExpression	sizeof ( HashTableIterator )		166720	1					
ANR	167101	Sizeof	sizeof		166720	0					
ANR	167102	SizeofOperand	HashTableIterator		166720	1					
ANR	167103	ExpressionStatement	EG ( ht_iterators_used ) = 0	182:1:5491:5516	166720	30	True				
ANR	167104	AssignmentExpression	EG ( ht_iterators_used ) = 0		166720	0		=			
ANR	167105	CallExpression	EG ( ht_iterators_used )		166720	0					
ANR	167106	Callee	EG		166720	0					
ANR	167107	Identifier	EG		166720	0					
ANR	167108	ArgumentList	ht_iterators_used		166720	1					
ANR	167109	Argument	ht_iterators_used		166720	0					
ANR	167110	Identifier	ht_iterators_used		166720	0					
ANR	167111	PrimaryExpression	0		166720	1					
ANR	167112	ExpressionStatement	EG ( ht_iterators ) = EG ( ht_iterators_slots )	183:1:5519:5560	166720	31	True				
ANR	167113	AssignmentExpression	EG ( ht_iterators ) = EG ( ht_iterators_slots )		166720	0		=			
ANR	167114	CallExpression	EG ( ht_iterators )		166720	0					
ANR	167115	Callee	EG		166720	0					
ANR	167116	Identifier	EG		166720	0					
ANR	167117	ArgumentList	ht_iterators		166720	1					
ANR	167118	Argument	ht_iterators		166720	0					
ANR	167119	Identifier	ht_iterators		166720	0					
ANR	167120	CallExpression	EG ( ht_iterators_slots )		166720	1					
ANR	167121	Callee	EG		166720	0					
ANR	167122	Identifier	EG		166720	0					
ANR	167123	ArgumentList	ht_iterators_slots		166720	1					
ANR	167124	Argument	ht_iterators_slots		166720	0					
ANR	167125	Identifier	ht_iterators_slots		166720	0					
ANR	167126	ExpressionStatement	"memset ( EG ( ht_iterators ) , 0 , sizeof ( EG ( ht_iterators_slots ) ) )"	184:1:5563:5622	166720	32	True				
ANR	167127	CallExpression	"memset ( EG ( ht_iterators ) , 0 , sizeof ( EG ( ht_iterators_slots ) ) )"		166720	0					
ANR	167128	Callee	memset		166720	0					
ANR	167129	Identifier	memset		166720	0					
ANR	167130	ArgumentList	EG ( ht_iterators )		166720	1					
ANR	167131	Argument	EG ( ht_iterators )		166720	0					
ANR	167132	CallExpression	EG ( ht_iterators )		166720	0					
ANR	167133	Callee	EG		166720	0					
ANR	167134	Identifier	EG		166720	0					
ANR	167135	ArgumentList	ht_iterators		166720	1					
ANR	167136	Argument	ht_iterators		166720	0					
ANR	167137	Identifier	ht_iterators		166720	0					
ANR	167138	Argument	0		166720	1					
ANR	167139	PrimaryExpression	0		166720	0					
ANR	167140	Argument	sizeof ( EG ( ht_iterators_slots ) )		166720	2					
ANR	167141	SizeofExpression	sizeof ( EG ( ht_iterators_slots ) )		166720	0					
ANR	167142	Sizeof	sizeof		166720	0					
ANR	167143	CallExpression	EG ( ht_iterators_slots )		166720	1					
ANR	167144	Callee	EG		166720	0					
ANR	167145	Identifier	EG		166720	0					
ANR	167146	ArgumentList	ht_iterators_slots		166720	1					
ANR	167147	Argument	ht_iterators_slots		166720	0					
ANR	167148	Identifier	ht_iterators_slots		166720	0					
ANR	167149	ExpressionStatement	EG ( active ) = 1	186:1:5626:5640	166720	33	True				
ANR	167150	AssignmentExpression	EG ( active ) = 1		166720	0		=			
ANR	167151	CallExpression	EG ( active )		166720	0					
ANR	167152	Callee	EG		166720	0					
ANR	167153	Identifier	EG		166720	0					
ANR	167154	ArgumentList	active		166720	1					
ANR	167155	Argument	active		166720	0					
ANR	167156	Identifier	active		166720	0					
ANR	167157	PrimaryExpression	1		166720	1					
ANR	167158	ReturnType	void		166720	1					
ANR	167159	Identifier	init_executor		166720	2					
ANR	167160	ParameterList			166720	3					
ANR	167161	CFGEntryNode	ENTRY		166720		True				
ANR	167162	CFGExitNode	EXIT		166720		True				
ANR	167163	Symbol	exception		166720						
ANR	167164	Symbol	ht_iterators		166720						
ANR	167165	Symbol	symtable_cache		166720						
ANR	167166	Symbol	& zend_extensions		166720						
ANR	167167	Symbol	ticks_count		166720						
ANR	167168	Symbol	user_error_handler		166720						
ANR	167169	Symbol	user_exception_handlers		166720						
ANR	167170	Symbol	current_execute_data		166720						
ANR	167171	Symbol	no_extensions		166720						
ANR	167172	Symbol	zend_handle_sigsegv		166720						
ANR	167173	Symbol	& EG		166720						
ANR	167174	Symbol	SYMTABLE_CACHE_SIZE		166720						
ANR	167175	Symbol	user_error_handlers		166720						
ANR	167176	Symbol	ht_iterators_slots		166720						
ANR	167177	Symbol	EH_NORMAL		166720						
ANR	167178	Symbol	full_tables_cleanup		166720						
ANR	167179	Symbol	user_error_handlers_error_reporting		166720						
ANR	167180	Symbol	scope		166720						
ANR	167181	Symbol	ht_iterators_count		166720						
ANR	167182	Symbol	included_files		166720						
ANR	167183	Symbol	class_table		166720						
ANR	167184	Symbol	signal		166720						
ANR	167185	Symbol	uninitialized_zval		166720						
ANR	167186	Symbol	zend_extension_activator		166720						
ANR	167187	Symbol	EG		166720						
ANR	167188	Symbol	in_autoload		166720						
ANR	167189	Symbol	NULL		166720						
ANR	167190	Symbol	CG		166720						
ANR	167191	Symbol	original_sigsegv_handler		166720						
ANR	167192	Symbol	symtable_cache_ptr		166720						
ANR	167193	Symbol	objects_store		166720						
ANR	167194	Symbol	symtable_cache_limit		166720						
ANR	167195	Symbol	active		166720						
ANR	167196	Symbol	symbol_table		166720						
ANR	167197	Symbol	timed_out		166720						
ANR	167198	Symbol	error_handling		166720						
ANR	167199	Symbol	ZVAL_PTR_DTOR		166720						
ANR	167200	Symbol	prev_exception		166720						
ANR	167201	Symbol	autoload_func		166720						
ANR	167202	Symbol	ht_iterators_used		166720						
ANR	167203	Symbol	SIGSEGV		166720						
ANR	167204	Symbol	error_zval		166720						
ANR	167205	Symbol	valid_symbol_table		166720						
ANR	167206	Symbol	function_table		166720						
ANR	167207	Function	zval_call_destructor	190:0:5655:5909							
ANR	167208	FunctionDef	zval_call_destructor (zval * zv)		167207	0					
ANR	167209	CompoundStatement		191:0:5707:5909	167207	0					
ANR	167210	IfStatement	if ( Z_TYPE_P ( zv ) == IS_INDIRECT )		167207	0					
ANR	167211	Condition	Z_TYPE_P ( zv ) == IS_INDIRECT	192:5:5714:5740	167207	0	True				
ANR	167212	EqualityExpression	Z_TYPE_P ( zv ) == IS_INDIRECT		167207	0		==			
ANR	167213	CallExpression	Z_TYPE_P ( zv )		167207	0					
ANR	167214	Callee	Z_TYPE_P		167207	0					
ANR	167215	Identifier	Z_TYPE_P		167207	0					
ANR	167216	ArgumentList	zv		167207	1					
ANR	167217	Argument	zv		167207	0					
ANR	167218	Identifier	zv		167207	0					
ANR	167219	Identifier	IS_INDIRECT		167207	1					
ANR	167220	CompoundStatement		2:34:35:35	167207	1					
ANR	167221	ExpressionStatement	zv = Z_INDIRECT_P ( zv )	193:2:5747:5768	167207	0	True				
ANR	167222	AssignmentExpression	zv = Z_INDIRECT_P ( zv )		167207	0		=			
ANR	167223	Identifier	zv		167207	0					
ANR	167224	CallExpression	Z_INDIRECT_P ( zv )		167207	1					
ANR	167225	Callee	Z_INDIRECT_P		167207	0					
ANR	167226	Identifier	Z_INDIRECT_P		167207	0					
ANR	167227	ArgumentList	zv		167207	1					
ANR	167228	Argument	zv		167207	0					
ANR	167229	Identifier	zv		167207	0					
ANR	167230	IfStatement	if ( Z_TYPE_P ( zv ) == IS_OBJECT && Z_REFCOUNT_P ( zv ) == 1 )		167207	1					
ANR	167231	Condition	Z_TYPE_P ( zv ) == IS_OBJECT && Z_REFCOUNT_P ( zv ) == 1	195:5:5778:5827	167207	0	True				
ANR	167232	AndExpression	Z_TYPE_P ( zv ) == IS_OBJECT && Z_REFCOUNT_P ( zv ) == 1		167207	0		&&			
ANR	167233	EqualityExpression	Z_TYPE_P ( zv ) == IS_OBJECT		167207	0		==			
ANR	167234	CallExpression	Z_TYPE_P ( zv )		167207	0					
ANR	167235	Callee	Z_TYPE_P		167207	0					
ANR	167236	Identifier	Z_TYPE_P		167207	0					
ANR	167237	ArgumentList	zv		167207	1					
ANR	167238	Argument	zv		167207	0					
ANR	167239	Identifier	zv		167207	0					
ANR	167240	Identifier	IS_OBJECT		167207	1					
ANR	167241	EqualityExpression	Z_REFCOUNT_P ( zv ) == 1		167207	1		==			
ANR	167242	CallExpression	Z_REFCOUNT_P ( zv )		167207	0					
ANR	167243	Callee	Z_REFCOUNT_P		167207	0					
ANR	167244	Identifier	Z_REFCOUNT_P		167207	0					
ANR	167245	ArgumentList	zv		167207	1					
ANR	167246	Argument	zv		167207	0					
ANR	167247	Identifier	zv		167207	0					
ANR	167248	PrimaryExpression	1		167207	1					
ANR	167249	CompoundStatement		5:57:122:122	167207	1					
ANR	167250	ReturnStatement	return ZEND_HASH_APPLY_REMOVE ;	196:2:5834:5863	167207	0	True				
ANR	167251	Identifier	ZEND_HASH_APPLY_REMOVE		167207	0					
ANR	167252	ElseStatement	else		167207	0					
ANR	167253	CompoundStatement		7:8:165:165	167207	0					
ANR	167254	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	198:2:5877:5904	167207	0	True				
ANR	167255	Identifier	ZEND_HASH_APPLY_KEEP		167207	0					
ANR	167256	ReturnType	static int		167207	1					
ANR	167257	Identifier	zval_call_destructor		167207	2					
ANR	167258	ParameterList	zval * zv		167207	3					
ANR	167259	Parameter	zval * zv	190:32:5687:5694	167207	0	True				
ANR	167260	ParameterType	zval *		167207	0					
ANR	167261	Identifier	zv		167207	1					
ANR	167262	CFGEntryNode	ENTRY		167207		True				
ANR	167263	CFGExitNode	EXIT		167207		True				
ANR	167264	Symbol	ZEND_HASH_APPLY_KEEP		167207						
ANR	167265	Symbol	Z_INDIRECT_P		167207						
ANR	167266	Symbol	ZEND_HASH_APPLY_REMOVE		167207						
ANR	167267	Symbol	zv		167207						
ANR	167268	Symbol	Z_TYPE_P		167207						
ANR	167269	Symbol	IS_OBJECT		167207						
ANR	167270	Symbol	Z_REFCOUNT_P		167207						
ANR	167271	Symbol	IS_INDIRECT		167207						
ANR	167272	Function	zend_unclean_zval_ptr_dtor	203:0:5922:6087							
ANR	167273	FunctionDef	zend_unclean_zval_ptr_dtor (zval * zv)		167272	0					
ANR	167274	CompoundStatement		204:0:5981:6087	167272	0					
ANR	167275	IfStatement	if ( Z_TYPE_P ( zv ) == IS_INDIRECT )		167272	0					
ANR	167276	Condition	Z_TYPE_P ( zv ) == IS_INDIRECT	205:5:5988:6014	167272	0	True				
ANR	167277	EqualityExpression	Z_TYPE_P ( zv ) == IS_INDIRECT		167272	0		==			
ANR	167278	CallExpression	Z_TYPE_P ( zv )		167272	0					
ANR	167279	Callee	Z_TYPE_P		167272	0					
ANR	167280	Identifier	Z_TYPE_P		167272	0					
ANR	167281	ArgumentList	zv		167272	1					
ANR	167282	Argument	zv		167272	0					
ANR	167283	Identifier	zv		167272	0					
ANR	167284	Identifier	IS_INDIRECT		167272	1					
ANR	167285	CompoundStatement		2:34:35:35	167272	1					
ANR	167286	ExpressionStatement	zv = Z_INDIRECT_P ( zv )	206:2:6021:6042	167272	0	True				
ANR	167287	AssignmentExpression	zv = Z_INDIRECT_P ( zv )		167272	0		=			
ANR	167288	Identifier	zv		167272	0					
ANR	167289	CallExpression	Z_INDIRECT_P ( zv )		167272	1					
ANR	167290	Callee	Z_INDIRECT_P		167272	0					
ANR	167291	Identifier	Z_INDIRECT_P		167272	0					
ANR	167292	ArgumentList	zv		167272	1					
ANR	167293	Argument	zv		167272	0					
ANR	167294	Identifier	zv		167272	0					
ANR	167295	Statement	i_zval_ptr_dtor	208:1:6048:6062	167272	1	True				
ANR	167296	Statement	(	208:16:6063:6063	167272	2	True				
ANR	167297	Statement	zv	208:17:6064:6065	167272	3	True				
ANR	167298	Statement	ZEND_FILE_LINE_CC	208:20:6067:6083	167272	4	True				
ANR	167299	Statement	)	208:37:6084:6084	167272	5	True				
ANR	167300	ExpressionStatement		208:38:6085:6085	167272	6	True				
ANR	167301	ReturnType	static void		167272	1					
ANR	167302	Identifier	zend_unclean_zval_ptr_dtor		167272	2					
ANR	167303	ParameterList	zval * zv		167272	3					
ANR	167304	Parameter	zval * zv	203:39:5961:5968	167272	0	True				
ANR	167305	ParameterType	zval *		167272	0					
ANR	167306	Identifier	zv		167272	1					
ANR	167307	CFGEntryNode	ENTRY		167272		True				
ANR	167308	CFGExitNode	EXIT		167272		True				
ANR	167309	Symbol	Z_INDIRECT_P		167272						
ANR	167310	Symbol	zv		167272						
ANR	167311	Symbol	Z_TYPE_P		167272						
ANR	167312	Symbol	IS_INDIRECT		167272						
ANR	167313	Function	zend_throw_or_error	212:0:6100:6493							
ANR	167314	FunctionDef	"zend_throw_or_error (int fetch_type , zend_class_entry * exception_ce , const char * format)"		167313	0					
ANR	167315	CompoundStatement		213:0:6215:6493	167313	0					
ANR	167316	IdentifierDeclStatement	va_list va ;	214:1:6218:6228	167313	0	True				
ANR	167317	IdentifierDecl	va		167313	0					
ANR	167318	IdentifierDeclType	va_list		167313	0					
ANR	167319	Identifier	va		167313	1					
ANR	167320	IdentifierDeclStatement	char * message = NULL ;	215:1:6231:6251	167313	1	True				
ANR	167321	IdentifierDecl	* message = NULL		167313	0					
ANR	167322	IdentifierDeclType	char *		167313	0					
ANR	167323	Identifier	message		167313	1					
ANR	167324	AssignmentExpression	* message = NULL		167313	2		=			
ANR	167325	Identifier	NULL		167313	0					
ANR	167326	Identifier	NULL		167313	1					
ANR	167327	ExpressionStatement	"va_start ( va , format )"	217:1:6255:6275	167313	2	True				
ANR	167328	CallExpression	"va_start ( va , format )"		167313	0					
ANR	167329	Callee	va_start		167313	0					
ANR	167330	Identifier	va_start		167313	0					
ANR	167331	ArgumentList	va		167313	1					
ANR	167332	Argument	va		167313	0					
ANR	167333	Identifier	va		167313	0					
ANR	167334	Argument	format		167313	1					
ANR	167335	Identifier	format		167313	0					
ANR	167336	ExpressionStatement	"zend_vspprintf ( & message , 0 , format , va )"	218:1:6278:6317	167313	3	True				
ANR	167337	CallExpression	"zend_vspprintf ( & message , 0 , format , va )"		167313	0					
ANR	167338	Callee	zend_vspprintf		167313	0					
ANR	167339	Identifier	zend_vspprintf		167313	0					
ANR	167340	ArgumentList	& message		167313	1					
ANR	167341	Argument	& message		167313	0					
ANR	167342	UnaryOperationExpression	& message		167313	0					
ANR	167343	UnaryOperator	&		167313	0					
ANR	167344	Identifier	message		167313	1					
ANR	167345	Argument	0		167313	1					
ANR	167346	PrimaryExpression	0		167313	0					
ANR	167347	Argument	format		167313	2					
ANR	167348	Identifier	format		167313	0					
ANR	167349	Argument	va		167313	3					
ANR	167350	Identifier	va		167313	0					
ANR	167351	IfStatement	if ( fetch_type & ZEND_FETCH_CLASS_EXCEPTION )		167313	4					
ANR	167352	Condition	fetch_type & ZEND_FETCH_CLASS_EXCEPTION	220:5:6325:6363	167313	0	True				
ANR	167353	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_EXCEPTION		167313	0		&			
ANR	167354	Identifier	fetch_type		167313	0					
ANR	167355	Identifier	ZEND_FETCH_CLASS_EXCEPTION		167313	1					
ANR	167356	CompoundStatement		8:46:150:150	167313	1					
ANR	167357	ExpressionStatement	"zend_throw_error ( exception_ce , message )"	221:2:6370:6409	167313	0	True				
ANR	167358	CallExpression	"zend_throw_error ( exception_ce , message )"		167313	0					
ANR	167359	Callee	zend_throw_error		167313	0					
ANR	167360	Identifier	zend_throw_error		167313	0					
ANR	167361	ArgumentList	exception_ce		167313	1					
ANR	167362	Argument	exception_ce		167313	0					
ANR	167363	Identifier	exception_ce		167313	0					
ANR	167364	Argument	message		167313	1					
ANR	167365	Identifier	message		167313	0					
ANR	167366	ElseStatement	else		167313	0					
ANR	167367	CompoundStatement		10:8:203:203	167313	0					
ANR	167368	ExpressionStatement	"zend_error ( E_ERROR , ""%s"" , message )"	223:2:6423:6457	167313	0	True				
ANR	167369	CallExpression	"zend_error ( E_ERROR , ""%s"" , message )"		167313	0					
ANR	167370	Callee	zend_error		167313	0					
ANR	167371	Identifier	zend_error		167313	0					
ANR	167372	ArgumentList	E_ERROR		167313	1					
ANR	167373	Argument	E_ERROR		167313	0					
ANR	167374	Identifier	E_ERROR		167313	0					
ANR	167375	Argument	"""%s"""		167313	1					
ANR	167376	PrimaryExpression	"""%s"""		167313	0					
ANR	167377	Argument	message		167313	2					
ANR	167378	Identifier	message		167313	0					
ANR	167379	ExpressionStatement	efree ( message )	226:1:6464:6478	167313	5	True				
ANR	167380	CallExpression	efree ( message )		167313	0					
ANR	167381	Callee	efree		167313	0					
ANR	167382	Identifier	efree		167313	0					
ANR	167383	ArgumentList	message		167313	1					
ANR	167384	Argument	message		167313	0					
ANR	167385	Identifier	message		167313	0					
ANR	167386	ExpressionStatement	va_end ( va )	227:1:6481:6491	167313	6	True				
ANR	167387	CallExpression	va_end ( va )		167313	0					
ANR	167388	Callee	va_end		167313	0					
ANR	167389	Identifier	va_end		167313	0					
ANR	167390	ArgumentList	va		167313	1					
ANR	167391	Argument	va		167313	0					
ANR	167392	Identifier	va		167313	0					
ANR	167393	ReturnType	static void		167313	1					
ANR	167394	Identifier	zend_throw_or_error		167313	2					
ANR	167395	ParameterList	"int fetch_type , zend_class_entry * exception_ce , const char * format"		167313	3					
ANR	167396	Parameter	int fetch_type	212:32:6132:6145	167313	0	True				
ANR	167397	ParameterType	int		167313	0					
ANR	167398	Identifier	fetch_type		167313	1					
ANR	167399	Parameter	zend_class_entry * exception_ce	212:48:6148:6177	167313	1	True				
ANR	167400	ParameterType	zend_class_entry *		167313	0					
ANR	167401	Identifier	exception_ce		167313	1					
ANR	167402	Parameter	const char * format	212:80:6180:6197	167313	2	True				
ANR	167403	ParameterType	const char *		167313	0					
ANR	167404	Identifier	format		167313	1					
ANR	167405	CFGEntryNode	ENTRY		167313		True				
ANR	167406	CFGExitNode	EXIT		167313		True				
ANR	167407	Symbol	exception_ce		167313						
ANR	167408	Symbol	fetch_type		167313						
ANR	167409	Symbol	NULL		167313						
ANR	167410	Symbol	E_ERROR		167313						
ANR	167411	Symbol	& message		167313						
ANR	167412	Symbol	ZEND_FETCH_CLASS_EXCEPTION		167313						
ANR	167413	Symbol	format		167313						
ANR	167414	Symbol	va		167313						
ANR	167415	Symbol	message		167313						
ANR	167416	Function	shutdown_destructors	231:0:6506:7119							
ANR	167417	FunctionDef	shutdown_destructors ()		167416	0					
ANR	167418	CompoundStatement		232:0:6548:7119	167416	0					
ANR	167419	IfStatement	if ( CG ( unclean_shutdown ) )		167416	0					
ANR	167420	Condition	CG ( unclean_shutdown )	233:5:6555:6574	167416	0	True				
ANR	167421	CallExpression	CG ( unclean_shutdown )		167416	0					
ANR	167422	Callee	CG		167416	0					
ANR	167423	Identifier	CG		167416	0					
ANR	167424	ArgumentList	unclean_shutdown		167416	1					
ANR	167425	Argument	unclean_shutdown		167416	0					
ANR	167426	Identifier	unclean_shutdown		167416	0					
ANR	167427	CompoundStatement		2:27:28:28	167416	1					
ANR	167428	ExpressionStatement	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor	234:2:6581:6638	167416	0	True				
ANR	167429	AssignmentExpression	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor		167416	0		=			
ANR	167430	MemberAccess	EG ( symbol_table ) . pDestructor		167416	0					
ANR	167431	CallExpression	EG ( symbol_table )		167416	0					
ANR	167432	Callee	EG		167416	0					
ANR	167433	Identifier	EG		167416	0					
ANR	167434	ArgumentList	symbol_table		167416	1					
ANR	167435	Argument	symbol_table		167416	0					
ANR	167436	Identifier	symbol_table		167416	0					
ANR	167437	Identifier	pDestructor		167416	1					
ANR	167438	Identifier	zend_unclean_zval_ptr_dtor		167416	1					
ANR	167439	Statement	zend_try	236:1:6644:6651	167416	1	True				
ANR	167440	CompoundStatement		6:2:108:124	167416	2					
ANR	167441	IdentifierDeclStatement	uint32_t symbols ;	237:2:6657:6673	167416	0	True				
ANR	167442	IdentifierDecl	symbols		167416	0					
ANR	167443	IdentifierDeclType	uint32_t		167416	0					
ANR	167444	Identifier	symbols		167416	1					
ANR	167445	DoStatement	do		167416	1					
ANR	167446	CompoundStatement		7:5:131:131	167416	0					
ANR	167447	ExpressionStatement	symbols = zend_hash_num_elements ( & EG ( symbol_table ) )	239:3:6685:6736	167416	0	True				
ANR	167448	AssignmentExpression	symbols = zend_hash_num_elements ( & EG ( symbol_table ) )		167416	0		=			
ANR	167449	Identifier	symbols		167416	0					
ANR	167450	CallExpression	zend_hash_num_elements ( & EG ( symbol_table ) )		167416	1					
ANR	167451	Callee	zend_hash_num_elements		167416	0					
ANR	167452	Identifier	zend_hash_num_elements		167416	0					
ANR	167453	ArgumentList	& EG ( symbol_table )		167416	1					
ANR	167454	Argument	& EG ( symbol_table )		167416	0					
ANR	167455	UnaryOperationExpression	& EG ( symbol_table )		167416	0					
ANR	167456	UnaryOperator	&		167416	0					
ANR	167457	CallExpression	EG ( symbol_table )		167416	1					
ANR	167458	Callee	EG		167416	0					
ANR	167459	Identifier	EG		167416	0					
ANR	167460	ArgumentList	symbol_table		167416	1					
ANR	167461	Argument	symbol_table		167416	0					
ANR	167462	Identifier	symbol_table		167416	0					
ANR	167463	ExpressionStatement	"zend_hash_reverse_apply ( & EG ( symbol_table ) , ( apply_func_t ) zval_call_destructor )"	240:3:6741:6820	167416	1	True				
ANR	167464	CallExpression	"zend_hash_reverse_apply ( & EG ( symbol_table ) , ( apply_func_t ) zval_call_destructor )"		167416	0					
ANR	167465	Callee	zend_hash_reverse_apply		167416	0					
ANR	167466	Identifier	zend_hash_reverse_apply		167416	0					
ANR	167467	ArgumentList	& EG ( symbol_table )		167416	1					
ANR	167468	Argument	& EG ( symbol_table )		167416	0					
ANR	167469	UnaryOperationExpression	& EG ( symbol_table )		167416	0					
ANR	167470	UnaryOperator	&		167416	0					
ANR	167471	CallExpression	EG ( symbol_table )		167416	1					
ANR	167472	Callee	EG		167416	0					
ANR	167473	Identifier	EG		167416	0					
ANR	167474	ArgumentList	symbol_table		167416	1					
ANR	167475	Argument	symbol_table		167416	0					
ANR	167476	Identifier	symbol_table		167416	0					
ANR	167477	Argument	( apply_func_t ) zval_call_destructor		167416	1					
ANR	167478	CastExpression	( apply_func_t ) zval_call_destructor		167416	0					
ANR	167479	CastTarget	apply_func_t		167416	0					
ANR	167480	Identifier	zval_call_destructor		167416	1					
ANR	167481	Condition	symbols != zend_hash_num_elements ( & EG ( symbol_table ) )	241:11:6833:6884	167416	1	True				
ANR	167482	EqualityExpression	symbols != zend_hash_num_elements ( & EG ( symbol_table ) )		167416	0		!=			
ANR	167483	Identifier	symbols		167416	0					
ANR	167484	CallExpression	zend_hash_num_elements ( & EG ( symbol_table ) )		167416	1					
ANR	167485	Callee	zend_hash_num_elements		167416	0					
ANR	167486	Identifier	zend_hash_num_elements		167416	0					
ANR	167487	ArgumentList	& EG ( symbol_table )		167416	1					
ANR	167488	Argument	& EG ( symbol_table )		167416	0					
ANR	167489	UnaryOperationExpression	& EG ( symbol_table )		167416	0					
ANR	167490	UnaryOperator	&		167416	0					
ANR	167491	CallExpression	EG ( symbol_table )		167416	1					
ANR	167492	Callee	EG		167416	0					
ANR	167493	Identifier	EG		167416	0					
ANR	167494	ArgumentList	symbol_table		167416	1					
ANR	167495	Argument	symbol_table		167416	0					
ANR	167496	Identifier	symbol_table		167416	0					
ANR	167497	ExpressionStatement	zend_objects_store_call_destructors ( & EG ( objects_store ) )	242:2:6890:6945	167416	2	True				
ANR	167498	CallExpression	zend_objects_store_call_destructors ( & EG ( objects_store ) )		167416	0					
ANR	167499	Callee	zend_objects_store_call_destructors		167416	0					
ANR	167500	Identifier	zend_objects_store_call_destructors		167416	0					
ANR	167501	ArgumentList	& EG ( objects_store )		167416	1					
ANR	167502	Argument	& EG ( objects_store )		167416	0					
ANR	167503	UnaryOperationExpression	& EG ( objects_store )		167416	0					
ANR	167504	UnaryOperator	&		167416	0					
ANR	167505	CallExpression	EG ( objects_store )		167416	1					
ANR	167506	Callee	EG		167416	0					
ANR	167507	Identifier	EG		167416	0					
ANR	167508	ArgumentList	objects_store		167416	1					
ANR	167509	Argument	objects_store		167416	0					
ANR	167510	Identifier	objects_store		167416	0					
ANR	167511	Statement	zend_catch	243:3:6950:6959	167416	3	True				
ANR	167512	CompoundStatement		12:14:412:412	167416	4					
ANR	167513	ExpressionStatement	zend_objects_store_mark_destructed ( & EG ( objects_store ) )	245:2:7044:7098	167416	0	True				
ANR	167514	CallExpression	zend_objects_store_mark_destructed ( & EG ( objects_store ) )		167416	0					
ANR	167515	Callee	zend_objects_store_mark_destructed		167416	0					
ANR	167516	Identifier	zend_objects_store_mark_destructed		167416	0					
ANR	167517	ArgumentList	& EG ( objects_store )		167416	1					
ANR	167518	Argument	& EG ( objects_store )		167416	0					
ANR	167519	UnaryOperationExpression	& EG ( objects_store )		167416	0					
ANR	167520	UnaryOperator	&		167416	0					
ANR	167521	CallExpression	EG ( objects_store )		167416	1					
ANR	167522	Callee	EG		167416	0					
ANR	167523	Identifier	EG		167416	0					
ANR	167524	ArgumentList	objects_store		167416	1					
ANR	167525	Argument	objects_store		167416	0					
ANR	167526	Identifier	objects_store		167416	0					
ANR	167527	ExpressionStatement	zend_end_try ( )	246:3:7103:7117	167416	5	True				
ANR	167528	CallExpression	zend_end_try ( )		167416	0					
ANR	167529	Callee	zend_end_try		167416	0					
ANR	167530	Identifier	zend_end_try		167416	0					
ANR	167531	ArgumentList			167416	1					
ANR	167532	ReturnType	void		167416	1					
ANR	167533	Identifier	shutdown_destructors		167416	2					
ANR	167534	ParameterList			167416	3					
ANR	167535	CFGEntryNode	ENTRY		167416		True				
ANR	167536	CFGExitNode	EXIT		167416		True				
ANR	167537	Symbol	unclean_shutdown		167416						
ANR	167538	Symbol	EG		167416						
ANR	167539	Symbol	CG		167416						
ANR	167540	Symbol	zend_hash_num_elements		167416						
ANR	167541	Symbol	zval_call_destructor		167416						
ANR	167542	Symbol	objects_store		167416						
ANR	167543	Symbol	EG ( symbol_table ) . pDestructor		167416						
ANR	167544	Symbol	symbol_table		167416						
ANR	167545	Symbol	& EG		167416						
ANR	167546	Symbol	symbols		167416						
ANR	167547	Symbol	zend_unclean_zval_ptr_dtor		167416						
ANR	167548	Function	shutdown_executor	250:0:7132:12115							
ANR	167549	FunctionDef	shutdown_executor ()		167548	0					
ANR	167550	CompoundStatement		251:0:7171:12115	167548	0					
ANR	167551	IdentifierDeclStatement	zend_function * func ;	252:1:7174:7193	167548	0	True				
ANR	167552	IdentifierDecl	* func		167548	0					
ANR	167553	IdentifierDeclType	zend_function *		167548	0					
ANR	167554	Identifier	func		167548	1					
ANR	167555	IdentifierDeclStatement	zend_class_entry * ce ;	253:1:7196:7216	167548	1	True				
ANR	167556	IdentifierDecl	* ce		167548	0					
ANR	167557	IdentifierDeclType	zend_class_entry *		167548	0					
ANR	167558	Identifier	ce		167548	1					
ANR	167559	Statement	zend_try	255:1:7220:7227	167548	2	True				
ANR	167560	CompoundStatement		5:10:57:57	167548	3					
ANR	167561	ExpressionStatement	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_deactivator )"	272:2:7884:7967	167548	0	True				
ANR	167562	CallExpression	"zend_llist_apply ( & zend_extensions , ( llist_apply_func_t ) zend_extension_deactivator )"		167548	0					
ANR	167563	Callee	zend_llist_apply		167548	0					
ANR	167564	Identifier	zend_llist_apply		167548	0					
ANR	167565	ArgumentList	& zend_extensions		167548	1					
ANR	167566	Argument	& zend_extensions		167548	0					
ANR	167567	UnaryOperationExpression	& zend_extensions		167548	0					
ANR	167568	UnaryOperator	&		167548	0					
ANR	167569	Identifier	zend_extensions		167548	1					
ANR	167570	Argument	( llist_apply_func_t ) zend_extension_deactivator		167548	1					
ANR	167571	CastExpression	( llist_apply_func_t ) zend_extension_deactivator		167548	0					
ANR	167572	CastTarget	llist_apply_func_t		167548	0					
ANR	167573	Identifier	zend_extension_deactivator		167548	1					
ANR	167574	IfStatement	if ( CG ( unclean_shutdown ) )		167548	1					
ANR	167575	Condition	CG ( unclean_shutdown )	274:6:7976:7995	167548	0	True				
ANR	167576	CallExpression	CG ( unclean_shutdown )		167548	0					
ANR	167577	Callee	CG		167548	0					
ANR	167578	Identifier	CG		167548	0					
ANR	167579	ArgumentList	unclean_shutdown		167548	1					
ANR	167580	Argument	unclean_shutdown		167548	0					
ANR	167581	Identifier	unclean_shutdown		167548	0					
ANR	167582	CompoundStatement		24:28:826:826	167548	1					
ANR	167583	ExpressionStatement	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor	275:3:8003:8060	167548	0	True				
ANR	167584	AssignmentExpression	EG ( symbol_table ) . pDestructor = zend_unclean_zval_ptr_dtor		167548	0		=			
ANR	167585	MemberAccess	EG ( symbol_table ) . pDestructor		167548	0					
ANR	167586	CallExpression	EG ( symbol_table )		167548	0					
ANR	167587	Callee	EG		167548	0					
ANR	167588	Identifier	EG		167548	0					
ANR	167589	ArgumentList	symbol_table		167548	1					
ANR	167590	Argument	symbol_table		167548	0					
ANR	167591	Identifier	symbol_table		167548	0					
ANR	167592	Identifier	pDestructor		167548	1					
ANR	167593	Identifier	zend_unclean_zval_ptr_dtor		167548	1					
ANR	167594	ExpressionStatement	zend_hash_graceful_reverse_destroy ( & EG ( symbol_table ) )	277:2:8068:8121	167548	2	True				
ANR	167595	CallExpression	zend_hash_graceful_reverse_destroy ( & EG ( symbol_table ) )		167548	0					
ANR	167596	Callee	zend_hash_graceful_reverse_destroy		167548	0					
ANR	167597	Identifier	zend_hash_graceful_reverse_destroy		167548	0					
ANR	167598	ArgumentList	& EG ( symbol_table )		167548	1					
ANR	167599	Argument	& EG ( symbol_table )		167548	0					
ANR	167600	UnaryOperationExpression	& EG ( symbol_table )		167548	0					
ANR	167601	UnaryOperator	&		167548	0					
ANR	167602	CallExpression	EG ( symbol_table )		167548	1					
ANR	167603	Callee	EG		167548	0					
ANR	167604	Identifier	EG		167548	0					
ANR	167605	ArgumentList	symbol_table		167548	1					
ANR	167606	Argument	symbol_table		167548	0					
ANR	167607	Identifier	symbol_table		167548	0					
ANR	167608	ExpressionStatement	zend_end_try ( )	278:3:8126:8140	167548	4	True				
ANR	167609	CallExpression	zend_end_try ( )		167548	0					
ANR	167610	Callee	zend_end_try		167548	0					
ANR	167611	Identifier	zend_end_try		167548	0					
ANR	167612	ArgumentList			167548	1					
ANR	167613	ExpressionStatement	EG ( valid_symbol_table ) = 0	279:1:8143:8169	167548	5	True				
ANR	167614	AssignmentExpression	EG ( valid_symbol_table ) = 0		167548	0		=			
ANR	167615	CallExpression	EG ( valid_symbol_table )		167548	0					
ANR	167616	Callee	EG		167548	0					
ANR	167617	Identifier	EG		167548	0					
ANR	167618	ArgumentList	valid_symbol_table		167548	1					
ANR	167619	Argument	valid_symbol_table		167548	0					
ANR	167620	Identifier	valid_symbol_table		167548	0					
ANR	167621	PrimaryExpression	0		167548	1					
ANR	167622	Statement	zend_try	281:1:8173:8180	167548	6	True				
ANR	167623	CompoundStatement		32:2:1014:1023	167548	7					
ANR	167624	IdentifierDeclStatement	zval * zeh ;	282:2:8186:8195	167548	0	True				
ANR	167625	IdentifierDecl	* zeh		167548	0					
ANR	167626	IdentifierDeclType	zval *		167548	0					
ANR	167627	Identifier	zeh		167548	1					
ANR	167628	IfStatement	if ( Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF )		167548	1					
ANR	167629	Condition	Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF	285:6:8338:8379	167548	0	True				
ANR	167630	EqualityExpression	Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF		167548	0		!=			
ANR	167631	CallExpression	Z_TYPE ( EG ( user_error_handler ) )		167548	0					
ANR	167632	Callee	Z_TYPE		167548	0					
ANR	167633	Identifier	Z_TYPE		167548	0					
ANR	167634	ArgumentList	EG ( user_error_handler )		167548	1					
ANR	167635	Argument	EG ( user_error_handler )		167548	0					
ANR	167636	CallExpression	EG ( user_error_handler )		167548	0					
ANR	167637	Callee	EG		167548	0					
ANR	167638	Identifier	EG		167548	0					
ANR	167639	ArgumentList	user_error_handler		167548	1					
ANR	167640	Argument	user_error_handler		167548	0					
ANR	167641	Identifier	user_error_handler		167548	0					
ANR	167642	Identifier	IS_UNDEF		167548	1					
ANR	167643	CompoundStatement		35:50:1210:1210	167548	1					
ANR	167644	ExpressionStatement	zeh = & EG ( user_error_handler )	286:3:8387:8416	167548	0	True				
ANR	167645	AssignmentExpression	zeh = & EG ( user_error_handler )		167548	0		=			
ANR	167646	Identifier	zeh		167548	0					
ANR	167647	UnaryOperationExpression	& EG ( user_error_handler )		167548	1					
ANR	167648	UnaryOperator	&		167548	0					
ANR	167649	CallExpression	EG ( user_error_handler )		167548	1					
ANR	167650	Callee	EG		167548	0					
ANR	167651	Identifier	EG		167548	0					
ANR	167652	ArgumentList	user_error_handler		167548	1					
ANR	167653	Argument	user_error_handler		167548	0					
ANR	167654	Identifier	user_error_handler		167548	0					
ANR	167655	ExpressionStatement	zval_ptr_dtor ( zeh )	287:3:8421:8439	167548	1	True				
ANR	167656	CallExpression	zval_ptr_dtor ( zeh )		167548	0					
ANR	167657	Callee	zval_ptr_dtor		167548	0					
ANR	167658	Identifier	zval_ptr_dtor		167548	0					
ANR	167659	ArgumentList	zeh		167548	1					
ANR	167660	Argument	zeh		167548	0					
ANR	167661	Identifier	zeh		167548	0					
ANR	167662	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_error_handler ) )	288:3:8444:8479	167548	2	True				
ANR	167663	CallExpression	ZVAL_UNDEF ( & EG ( user_error_handler ) )		167548	0					
ANR	167664	Callee	ZVAL_UNDEF		167548	0					
ANR	167665	Identifier	ZVAL_UNDEF		167548	0					
ANR	167666	ArgumentList	& EG ( user_error_handler )		167548	1					
ANR	167667	Argument	& EG ( user_error_handler )		167548	0					
ANR	167668	UnaryOperationExpression	& EG ( user_error_handler )		167548	0					
ANR	167669	UnaryOperator	&		167548	0					
ANR	167670	CallExpression	EG ( user_error_handler )		167548	1					
ANR	167671	Callee	EG		167548	0					
ANR	167672	Identifier	EG		167548	0					
ANR	167673	ArgumentList	user_error_handler		167548	1					
ANR	167674	Argument	user_error_handler		167548	0					
ANR	167675	Identifier	user_error_handler		167548	0					
ANR	167676	IfStatement	if ( Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF )		167548	2					
ANR	167677	Condition	Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF	291:6:8492:8537	167548	0	True				
ANR	167678	EqualityExpression	Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF		167548	0		!=			
ANR	167679	CallExpression	Z_TYPE ( EG ( user_exception_handler ) )		167548	0					
ANR	167680	Callee	Z_TYPE		167548	0					
ANR	167681	Identifier	Z_TYPE		167548	0					
ANR	167682	ArgumentList	EG ( user_exception_handler )		167548	1					
ANR	167683	Argument	EG ( user_exception_handler )		167548	0					
ANR	167684	CallExpression	EG ( user_exception_handler )		167548	0					
ANR	167685	Callee	EG		167548	0					
ANR	167686	Identifier	EG		167548	0					
ANR	167687	ArgumentList	user_exception_handler		167548	1					
ANR	167688	Argument	user_exception_handler		167548	0					
ANR	167689	Identifier	user_exception_handler		167548	0					
ANR	167690	Identifier	IS_UNDEF		167548	1					
ANR	167691	CompoundStatement		41:54:1368:1368	167548	1					
ANR	167692	ExpressionStatement	zeh = & EG ( user_exception_handler )	292:3:8545:8578	167548	0	True				
ANR	167693	AssignmentExpression	zeh = & EG ( user_exception_handler )		167548	0		=			
ANR	167694	Identifier	zeh		167548	0					
ANR	167695	UnaryOperationExpression	& EG ( user_exception_handler )		167548	1					
ANR	167696	UnaryOperator	&		167548	0					
ANR	167697	CallExpression	EG ( user_exception_handler )		167548	1					
ANR	167698	Callee	EG		167548	0					
ANR	167699	Identifier	EG		167548	0					
ANR	167700	ArgumentList	user_exception_handler		167548	1					
ANR	167701	Argument	user_exception_handler		167548	0					
ANR	167702	Identifier	user_exception_handler		167548	0					
ANR	167703	ExpressionStatement	zval_ptr_dtor ( zeh )	293:3:8583:8601	167548	1	True				
ANR	167704	CallExpression	zval_ptr_dtor ( zeh )		167548	0					
ANR	167705	Callee	zval_ptr_dtor		167548	0					
ANR	167706	Identifier	zval_ptr_dtor		167548	0					
ANR	167707	ArgumentList	zeh		167548	1					
ANR	167708	Argument	zeh		167548	0					
ANR	167709	Identifier	zeh		167548	0					
ANR	167710	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_exception_handler ) )	294:3:8606:8645	167548	2	True				
ANR	167711	CallExpression	ZVAL_UNDEF ( & EG ( user_exception_handler ) )		167548	0					
ANR	167712	Callee	ZVAL_UNDEF		167548	0					
ANR	167713	Identifier	ZVAL_UNDEF		167548	0					
ANR	167714	ArgumentList	& EG ( user_exception_handler )		167548	1					
ANR	167715	Argument	& EG ( user_exception_handler )		167548	0					
ANR	167716	UnaryOperationExpression	& EG ( user_exception_handler )		167548	0					
ANR	167717	UnaryOperator	&		167548	0					
ANR	167718	CallExpression	EG ( user_exception_handler )		167548	1					
ANR	167719	Callee	EG		167548	0					
ANR	167720	Identifier	EG		167548	0					
ANR	167721	ArgumentList	user_exception_handler		167548	1					
ANR	167722	Argument	user_exception_handler		167548	0					
ANR	167723	Identifier	user_exception_handler		167548	0					
ANR	167724	ExpressionStatement	"zend_stack_clean ( & EG ( user_error_handlers_error_reporting ) , NULL , 1 )"	297:2:8654:8721	167548	3	True				
ANR	167725	CallExpression	"zend_stack_clean ( & EG ( user_error_handlers_error_reporting ) , NULL , 1 )"		167548	0					
ANR	167726	Callee	zend_stack_clean		167548	0					
ANR	167727	Identifier	zend_stack_clean		167548	0					
ANR	167728	ArgumentList	& EG ( user_error_handlers_error_reporting )		167548	1					
ANR	167729	Argument	& EG ( user_error_handlers_error_reporting )		167548	0					
ANR	167730	UnaryOperationExpression	& EG ( user_error_handlers_error_reporting )		167548	0					
ANR	167731	UnaryOperator	&		167548	0					
ANR	167732	CallExpression	EG ( user_error_handlers_error_reporting )		167548	1					
ANR	167733	Callee	EG		167548	0					
ANR	167734	Identifier	EG		167548	0					
ANR	167735	ArgumentList	user_error_handlers_error_reporting		167548	1					
ANR	167736	Argument	user_error_handlers_error_reporting		167548	0					
ANR	167737	Identifier	user_error_handlers_error_reporting		167548	0					
ANR	167738	Argument	NULL		167548	1					
ANR	167739	Identifier	NULL		167548	0					
ANR	167740	Argument	1		167548	2					
ANR	167741	PrimaryExpression	1		167548	0					
ANR	167742	Statement	zend_stack_clean	298:2:8725:8740	167548	4	True				
ANR	167743	Statement	(	298:18:8741:8741	167548	5	True				
ANR	167744	Statement	&	298:19:8742:8742	167548	6	True				
ANR	167745	Statement	EG	298:20:8743:8744	167548	7	True				
ANR	167746	Statement	(	298:22:8745:8745	167548	8	True				
ANR	167747	Statement	user_error_handlers	298:23:8746:8764	167548	9	True				
ANR	167748	Statement	)	298:42:8765:8765	167548	10	True				
ANR	167749	Statement	","	298:43:8766:8766	167548	11	True				
ANR	167750	Statement	(	298:45:8768:8768	167548	12	True				
ANR	167751	Statement	void	298:46:8769:8772	167548	13	True				
ANR	167752	Statement	(	298:51:8774:8774	167548	14	True				
ANR	167753	Statement	*	298:52:8775:8775	167548	15	True				
ANR	167754	Statement	)	298:53:8776:8776	167548	16	True				
ANR	167755	Statement	(	298:54:8777:8777	167548	17	True				
ANR	167756	Statement	void	298:55:8778:8781	167548	18	True				
ANR	167757	Statement	*	298:60:8783:8783	167548	19	True				
ANR	167758	Statement	)	298:61:8784:8784	167548	20	True				
ANR	167759	Statement	)	298:62:8785:8785	167548	21	True				
ANR	167760	Statement	ZVAL_DESTRUCTOR	298:63:8786:8800	167548	22	True				
ANR	167761	Statement	","	298:78:8801:8801	167548	23	True				
ANR	167762	Statement	1	298:80:8803:8803	167548	24	True				
ANR	167763	Statement	)	298:81:8804:8804	167548	25	True				
ANR	167764	ExpressionStatement		298:82:8805:8805	167548	26	True				
ANR	167765	Statement	zend_stack_clean	299:2:8809:8824	167548	27	True				
ANR	167766	Statement	(	299:18:8825:8825	167548	28	True				
ANR	167767	Statement	&	299:19:8826:8826	167548	29	True				
ANR	167768	Statement	EG	299:20:8827:8828	167548	30	True				
ANR	167769	Statement	(	299:22:8829:8829	167548	31	True				
ANR	167770	Statement	user_exception_handlers	299:23:8830:8852	167548	32	True				
ANR	167771	Statement	)	299:46:8853:8853	167548	33	True				
ANR	167772	Statement	","	299:47:8854:8854	167548	34	True				
ANR	167773	Statement	(	299:49:8856:8856	167548	35	True				
ANR	167774	Statement	void	299:50:8857:8860	167548	36	True				
ANR	167775	Statement	(	299:55:8862:8862	167548	37	True				
ANR	167776	Statement	*	299:56:8863:8863	167548	38	True				
ANR	167777	Statement	)	299:57:8864:8864	167548	39	True				
ANR	167778	Statement	(	299:58:8865:8865	167548	40	True				
ANR	167779	Statement	void	299:59:8866:8869	167548	41	True				
ANR	167780	Statement	*	299:64:8871:8871	167548	42	True				
ANR	167781	Statement	)	299:65:8872:8872	167548	43	True				
ANR	167782	Statement	)	299:66:8873:8873	167548	44	True				
ANR	167783	Statement	ZVAL_DESTRUCTOR	299:67:8874:8888	167548	45	True				
ANR	167784	Statement	","	299:82:8889:8889	167548	46	True				
ANR	167785	Statement	1	299:84:8891:8891	167548	47	True				
ANR	167786	Statement	)	299:85:8892:8892	167548	48	True				
ANR	167787	ExpressionStatement		299:86:8893:8893	167548	49	True				
ANR	167788	ExpressionStatement	zend_end_try ( )	300:3:8898:8912	167548	8	True				
ANR	167789	CallExpression	zend_end_try ( )		167548	0					
ANR	167790	Callee	zend_end_try		167548	0					
ANR	167791	Identifier	zend_end_try		167548	0					
ANR	167792	ArgumentList			167548	1					
ANR	167793	Statement	zend_try	302:1:8916:8923	167548	9	True				
ANR	167794	CompoundStatement		52:10:1753:1753	167548	10					
ANR	167795	IfStatement	if ( EG ( full_tables_cleanup ) )		167548	0					
ANR	167796	Condition	EG ( full_tables_cleanup )	312:6:9590:9612	167548	0	True				
ANR	167797	CallExpression	EG ( full_tables_cleanup )		167548	0					
ANR	167798	Callee	EG		167548	0					
ANR	167799	Identifier	EG		167548	0					
ANR	167800	ArgumentList	full_tables_cleanup		167548	1					
ANR	167801	Argument	full_tables_cleanup		167548	0					
ANR	167802	Identifier	full_tables_cleanup		167548	0					
ANR	167803	CompoundStatement		62:31:2443:2443	167548	1					
ANR	167804	Statement	ZEND_HASH_FOREACH_PTR	313:3:9620:9640	167548	0	True				
ANR	167805	Statement	(	313:24:9641:9641	167548	1	True				
ANR	167806	Statement	EG	313:25:9642:9643	167548	2	True				
ANR	167807	Statement	(	313:27:9644:9644	167548	3	True				
ANR	167808	Statement	function_table	313:28:9645:9658	167548	4	True				
ANR	167809	Statement	)	313:42:9659:9659	167548	5	True				
ANR	167810	Statement	","	313:43:9660:9660	167548	6	True				
ANR	167811	Statement	func	313:45:9662:9665	167548	7	True				
ANR	167812	Statement	)	313:49:9666:9666	167548	8	True				
ANR	167813	CompoundStatement		63:51:2496:2496	167548	9					
ANR	167814	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		167548	0					
ANR	167815	Condition	func -> type == ZEND_USER_FUNCTION	314:8:9678:9709	167548	0	True				
ANR	167816	EqualityExpression	func -> type == ZEND_USER_FUNCTION		167548	0		==			
ANR	167817	PtrMemberAccess	func -> type		167548	0					
ANR	167818	Identifier	func		167548	0					
ANR	167819	Identifier	type		167548	1					
ANR	167820	Identifier	ZEND_USER_FUNCTION		167548	1					
ANR	167821	CompoundStatement		64:42:2540:2540	167548	1					
ANR	167822	ExpressionStatement	zend_cleanup_op_array_data ( ( zend_op_array * ) func )	315:5:9719:9769	167548	0	True				
ANR	167823	CallExpression	zend_cleanup_op_array_data ( ( zend_op_array * ) func )		167548	0					
ANR	167824	Callee	zend_cleanup_op_array_data		167548	0					
ANR	167825	Identifier	zend_cleanup_op_array_data		167548	0					
ANR	167826	ArgumentList	( zend_op_array * ) func		167548	1					
ANR	167827	Argument	( zend_op_array * ) func		167548	0					
ANR	167828	CastExpression	( zend_op_array * ) func		167548	0					
ANR	167829	CastTarget	zend_op_array *		167548	0					
ANR	167830	Identifier	func		167548	1					
ANR	167831	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	317:5:9782:9805	167548	10	True				
ANR	167832	CallExpression	ZEND_HASH_FOREACH_END ( )		167548	0					
ANR	167833	Callee	ZEND_HASH_FOREACH_END		167548	0					
ANR	167834	Identifier	ZEND_HASH_FOREACH_END		167548	0					
ANR	167835	ArgumentList			167548	1					
ANR	167836	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	318:3:9810:9838	167548	11	True				
ANR	167837	Statement	(	318:32:9839:9839	167548	12	True				
ANR	167838	Statement	EG	318:33:9840:9841	167548	13	True				
ANR	167839	Statement	(	318:35:9842:9842	167548	14	True				
ANR	167840	Statement	class_table	318:36:9843:9853	167548	15	True				
ANR	167841	Statement	)	318:47:9854:9854	167548	16	True				
ANR	167842	Statement	","	318:48:9855:9855	167548	17	True				
ANR	167843	Statement	ce	318:50:9857:9858	167548	18	True				
ANR	167844	Statement	)	318:52:9859:9859	167548	19	True				
ANR	167845	CompoundStatement		68:54:2689:2689	167548	20					
ANR	167846	IfStatement	if ( ce -> type == ZEND_USER_CLASS )		167548	0					
ANR	167847	Condition	ce -> type == ZEND_USER_CLASS	319:8:9871:9897	167548	0	True				
ANR	167848	EqualityExpression	ce -> type == ZEND_USER_CLASS		167548	0		==			
ANR	167849	PtrMemberAccess	ce -> type		167548	0					
ANR	167850	Identifier	ce		167548	0					
ANR	167851	Identifier	type		167548	1					
ANR	167852	Identifier	ZEND_USER_CLASS		167548	1					
ANR	167853	CompoundStatement		69:37:2728:2728	167548	1					
ANR	167854	ExpressionStatement	zend_cleanup_user_class_data ( ce )	320:5:9907:9939	167548	0	True				
ANR	167855	CallExpression	zend_cleanup_user_class_data ( ce )		167548	0					
ANR	167856	Callee	zend_cleanup_user_class_data		167548	0					
ANR	167857	Identifier	zend_cleanup_user_class_data		167548	0					
ANR	167858	ArgumentList	ce		167548	1					
ANR	167859	Argument	ce		167548	0					
ANR	167860	Identifier	ce		167548	0					
ANR	167861	ElseStatement	else		167548	0					
ANR	167862	CompoundStatement		71:11:2780:2780	167548	0					
ANR	167863	ExpressionStatement	zend_cleanup_internal_class_data ( ce )	322:5:9959:9995	167548	0	True				
ANR	167864	CallExpression	zend_cleanup_internal_class_data ( ce )		167548	0					
ANR	167865	Callee	zend_cleanup_internal_class_data		167548	0					
ANR	167866	Identifier	zend_cleanup_internal_class_data		167548	0					
ANR	167867	ArgumentList	ce		167548	1					
ANR	167868	Argument	ce		167548	0					
ANR	167869	Identifier	ce		167548	0					
ANR	167870	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	324:5:10008:10031	167548	21	True				
ANR	167871	CallExpression	ZEND_HASH_FOREACH_END ( )		167548	0					
ANR	167872	Callee	ZEND_HASH_FOREACH_END		167548	0					
ANR	167873	Identifier	ZEND_HASH_FOREACH_END		167548	0					
ANR	167874	ArgumentList			167548	1					
ANR	167875	ElseStatement	else		167548	0					
ANR	167876	CompoundStatement		75:9:2870:2870	167548	0					
ANR	167877	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	326:3:10047:10075	167548	0	True				
ANR	167878	Statement	(	326:32:10076:10076	167548	1	True				
ANR	167879	Statement	EG	326:33:10077:10078	167548	2	True				
ANR	167880	Statement	(	326:35:10079:10079	167548	3	True				
ANR	167881	Statement	function_table	326:36:10080:10093	167548	4	True				
ANR	167882	Statement	)	326:50:10094:10094	167548	5	True				
ANR	167883	Statement	","	326:51:10095:10095	167548	6	True				
ANR	167884	Statement	func	326:53:10097:10100	167548	7	True				
ANR	167885	Statement	)	326:57:10101:10101	167548	8	True				
ANR	167886	CompoundStatement		76:59:2931:2931	167548	9					
ANR	167887	IfStatement	if ( func -> type != ZEND_USER_FUNCTION )		167548	0					
ANR	167888	Condition	func -> type != ZEND_USER_FUNCTION	327:8:10113:10144	167548	0	True				
ANR	167889	EqualityExpression	func -> type != ZEND_USER_FUNCTION		167548	0		!=			
ANR	167890	PtrMemberAccess	func -> type		167548	0					
ANR	167891	Identifier	func		167548	0					
ANR	167892	Identifier	type		167548	1					
ANR	167893	Identifier	ZEND_USER_FUNCTION		167548	1					
ANR	167894	CompoundStatement		77:42:2975:2975	167548	1					
ANR	167895	BreakStatement	break ;	328:5:10154:10159	167548	0	True				
ANR	167896	ExpressionStatement	zend_cleanup_op_array_data ( ( zend_op_array * ) func )	330:4:10171:10221	167548	1	True				
ANR	167897	CallExpression	zend_cleanup_op_array_data ( ( zend_op_array * ) func )		167548	0					
ANR	167898	Callee	zend_cleanup_op_array_data		167548	0					
ANR	167899	Identifier	zend_cleanup_op_array_data		167548	0					
ANR	167900	ArgumentList	( zend_op_array * ) func		167548	1					
ANR	167901	Argument	( zend_op_array * ) func		167548	0					
ANR	167902	CastExpression	( zend_op_array * ) func		167548	0					
ANR	167903	CastTarget	zend_op_array *		167548	0					
ANR	167904	Identifier	func		167548	1					
ANR	167905	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	331:5:10228:10251	167548	10	True				
ANR	167906	CallExpression	ZEND_HASH_FOREACH_END ( )		167548	0					
ANR	167907	Callee	ZEND_HASH_FOREACH_END		167548	0					
ANR	167908	Identifier	ZEND_HASH_FOREACH_END		167548	0					
ANR	167909	ArgumentList			167548	1					
ANR	167910	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	332:3:10256:10284	167548	11	True				
ANR	167911	Statement	(	332:32:10285:10285	167548	12	True				
ANR	167912	Statement	EG	332:33:10286:10287	167548	13	True				
ANR	167913	Statement	(	332:35:10288:10288	167548	14	True				
ANR	167914	Statement	class_table	332:36:10289:10299	167548	15	True				
ANR	167915	Statement	)	332:47:10300:10300	167548	16	True				
ANR	167916	Statement	","	332:48:10301:10301	167548	17	True				
ANR	167917	Statement	ce	332:50:10303:10304	167548	18	True				
ANR	167918	Statement	)	332:52:10305:10305	167548	19	True				
ANR	167919	CompoundStatement		82:54:3135:3135	167548	20					
ANR	167920	IfStatement	if ( ce -> type != ZEND_USER_CLASS )		167548	0					
ANR	167921	Condition	ce -> type != ZEND_USER_CLASS	333:8:10317:10343	167548	0	True				
ANR	167922	EqualityExpression	ce -> type != ZEND_USER_CLASS		167548	0		!=			
ANR	167923	PtrMemberAccess	ce -> type		167548	0					
ANR	167924	Identifier	ce		167548	0					
ANR	167925	Identifier	type		167548	1					
ANR	167926	Identifier	ZEND_USER_CLASS		167548	1					
ANR	167927	CompoundStatement		83:37:3174:3174	167548	1					
ANR	167928	BreakStatement	break ;	334:5:10353:10358	167548	0	True				
ANR	167929	ExpressionStatement	zend_cleanup_user_class_data ( ce )	336:4:10370:10402	167548	1	True				
ANR	167930	CallExpression	zend_cleanup_user_class_data ( ce )		167548	0					
ANR	167931	Callee	zend_cleanup_user_class_data		167548	0					
ANR	167932	Identifier	zend_cleanup_user_class_data		167548	0					
ANR	167933	ArgumentList	ce		167548	1					
ANR	167934	Argument	ce		167548	0					
ANR	167935	Identifier	ce		167548	0					
ANR	167936	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	337:5:10409:10432	167548	21	True				
ANR	167937	CallExpression	ZEND_HASH_FOREACH_END ( )		167548	0					
ANR	167938	Callee	ZEND_HASH_FOREACH_END		167548	0					
ANR	167939	Identifier	ZEND_HASH_FOREACH_END		167548	0					
ANR	167940	ArgumentList			167548	1					
ANR	167941	ExpressionStatement	zend_cleanup_internal_classes ( )	338:3:10437:10468	167548	22	True				
ANR	167942	CallExpression	zend_cleanup_internal_classes ( )		167548	0					
ANR	167943	Callee	zend_cleanup_internal_classes		167548	0					
ANR	167944	Identifier	zend_cleanup_internal_classes		167548	0					
ANR	167945	ArgumentList			167548	1					
ANR	167946	ExpressionStatement	zend_end_try ( )	340:3:10477:10491	167548	11	True				
ANR	167947	CallExpression	zend_end_try ( )		167548	0					
ANR	167948	Callee	zend_end_try		167548	0					
ANR	167949	Identifier	zend_end_try		167548	0					
ANR	167950	ArgumentList			167548	1					
ANR	167951	Statement	zend_try	342:1:10495:10502	167548	12	True				
ANR	167952	CompoundStatement		92:10:3332:3332	167548	13					
ANR	167953	ExpressionStatement	zend_llist_destroy ( & CG ( open_files ) )	343:2:10508:10543	167548	0	True				
ANR	167954	CallExpression	zend_llist_destroy ( & CG ( open_files ) )		167548	0					
ANR	167955	Callee	zend_llist_destroy		167548	0					
ANR	167956	Identifier	zend_llist_destroy		167548	0					
ANR	167957	ArgumentList	& CG ( open_files )		167548	1					
ANR	167958	Argument	& CG ( open_files )		167548	0					
ANR	167959	UnaryOperationExpression	& CG ( open_files )		167548	0					
ANR	167960	UnaryOperator	&		167548	0					
ANR	167961	CallExpression	CG ( open_files )		167548	1					
ANR	167962	Callee	CG		167548	0					
ANR	167963	Identifier	CG		167548	0					
ANR	167964	ArgumentList	open_files		167548	1					
ANR	167965	Argument	open_files		167548	0					
ANR	167966	Identifier	open_files		167548	0					
ANR	167967	ExpressionStatement	zend_end_try ( )	344:3:10548:10562	167548	14	True				
ANR	167968	CallExpression	zend_end_try ( )		167548	0					
ANR	167969	Callee	zend_end_try		167548	0					
ANR	167970	Identifier	zend_end_try		167548	0					
ANR	167971	ArgumentList			167548	1					
ANR	167972	Statement	zend_try	346:1:10566:10573	167548	15	True				
ANR	167973	CompoundStatement		96:10:3403:3403	167548	16					
ANR	167974	ExpressionStatement	zend_close_rsrc_list ( & EG ( regular_list ) )	347:2:10579:10618	167548	0	True				
ANR	167975	CallExpression	zend_close_rsrc_list ( & EG ( regular_list ) )		167548	0					
ANR	167976	Callee	zend_close_rsrc_list		167548	0					
ANR	167977	Identifier	zend_close_rsrc_list		167548	0					
ANR	167978	ArgumentList	& EG ( regular_list )		167548	1					
ANR	167979	Argument	& EG ( regular_list )		167548	0					
ANR	167980	UnaryOperationExpression	& EG ( regular_list )		167548	0					
ANR	167981	UnaryOperator	&		167548	0					
ANR	167982	CallExpression	EG ( regular_list )		167548	1					
ANR	167983	Callee	EG		167548	0					
ANR	167984	Identifier	EG		167548	0					
ANR	167985	ArgumentList	regular_list		167548	1					
ANR	167986	Argument	regular_list		167548	0					
ANR	167987	Identifier	regular_list		167548	0					
ANR	167988	ExpressionStatement	zend_end_try ( )	348:3:10623:10637	167548	17	True				
ANR	167989	CallExpression	zend_end_try ( )		167548	0					
ANR	167990	Callee	zend_end_try		167548	0					
ANR	167991	Identifier	zend_end_try		167548	0					
ANR	167992	ArgumentList			167548	1					
ANR	167993	IfStatement	if ( GC_G ( gc_enabled ) && ! CG ( unclean_shutdown ) )		167548	18					
ANR	167994	Condition	GC_G ( gc_enabled ) && ! CG ( unclean_shutdown )	351:5:10660:10700	167548	0	True				
ANR	167995	AndExpression	GC_G ( gc_enabled ) && ! CG ( unclean_shutdown )		167548	0		&&			
ANR	167996	CallExpression	GC_G ( gc_enabled )		167548	0					
ANR	167997	Callee	GC_G		167548	0					
ANR	167998	Identifier	GC_G		167548	0					
ANR	167999	ArgumentList	gc_enabled		167548	1					
ANR	168000	Argument	gc_enabled		167548	0					
ANR	168001	Identifier	gc_enabled		167548	0					
ANR	168002	UnaryOperationExpression	! CG ( unclean_shutdown )		167548	1					
ANR	168003	UnaryOperator	!		167548	0					
ANR	168004	CallExpression	CG ( unclean_shutdown )		167548	1					
ANR	168005	Callee	CG		167548	0					
ANR	168006	Identifier	CG		167548	0					
ANR	168007	ArgumentList	unclean_shutdown		167548	1					
ANR	168008	Argument	unclean_shutdown		167548	0					
ANR	168009	Identifier	unclean_shutdown		167548	0					
ANR	168010	CompoundStatement		101:48:3531:3531	167548	1					
ANR	168011	ExpressionStatement	gc_collect_cycles ( )	352:2:10707:10726	167548	0	True				
ANR	168012	CallExpression	gc_collect_cycles ( )		167548	0					
ANR	168013	Callee	gc_collect_cycles		167548	0					
ANR	168014	Identifier	gc_collect_cycles		167548	0					
ANR	168015	ArgumentList			167548	1					
ANR	168016	Statement	zend_try	356:1:10740:10747	167548	19	True				
ANR	168017	CompoundStatement		106:10:3577:3577	167548	20					
ANR	168018	ExpressionStatement	zend_objects_store_free_object_storage ( & EG ( objects_store ) )	357:2:10753:10811	167548	0	True				
ANR	168019	CallExpression	zend_objects_store_free_object_storage ( & EG ( objects_store ) )		167548	0					
ANR	168020	Callee	zend_objects_store_free_object_storage		167548	0					
ANR	168021	Identifier	zend_objects_store_free_object_storage		167548	0					
ANR	168022	ArgumentList	& EG ( objects_store )		167548	1					
ANR	168023	Argument	& EG ( objects_store )		167548	0					
ANR	168024	UnaryOperationExpression	& EG ( objects_store )		167548	0					
ANR	168025	UnaryOperator	&		167548	0					
ANR	168026	CallExpression	EG ( objects_store )		167548	1					
ANR	168027	Callee	EG		167548	0					
ANR	168028	Identifier	EG		167548	0					
ANR	168029	ArgumentList	objects_store		167548	1					
ANR	168030	Argument	objects_store		167548	0					
ANR	168031	Identifier	objects_store		167548	0					
ANR	168032	ExpressionStatement	zend_vm_stack_destroy ( )	359:2:10816:10839	167548	1	True				
ANR	168033	CallExpression	zend_vm_stack_destroy ( )		167548	0					
ANR	168034	Callee	zend_vm_stack_destroy		167548	0					
ANR	168035	Identifier	zend_vm_stack_destroy		167548	0					
ANR	168036	ArgumentList			167548	1					
ANR	168037	IfStatement	if ( EG ( full_tables_cleanup ) )		167548	2					
ANR	168038	Condition	EG ( full_tables_cleanup )	362:6:10878:10900	167548	0	True				
ANR	168039	CallExpression	EG ( full_tables_cleanup )		167548	0					
ANR	168040	Callee	EG		167548	0					
ANR	168041	Identifier	EG		167548	0					
ANR	168042	ArgumentList	full_tables_cleanup		167548	1					
ANR	168043	Argument	full_tables_cleanup		167548	0					
ANR	168044	Identifier	full_tables_cleanup		167548	0					
ANR	168045	CompoundStatement		112:31:3731:3731	167548	1					
ANR	168046	ExpressionStatement	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function_full )"	363:3:10908:10987	167548	0	True				
ANR	168047	CallExpression	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function_full )"		167548	0					
ANR	168048	Callee	zend_hash_reverse_apply		167548	0					
ANR	168049	Identifier	zend_hash_reverse_apply		167548	0					
ANR	168050	ArgumentList	EG ( function_table )		167548	1					
ANR	168051	Argument	EG ( function_table )		167548	0					
ANR	168052	CallExpression	EG ( function_table )		167548	0					
ANR	168053	Callee	EG		167548	0					
ANR	168054	Identifier	EG		167548	0					
ANR	168055	ArgumentList	function_table		167548	1					
ANR	168056	Argument	function_table		167548	0					
ANR	168057	Identifier	function_table		167548	0					
ANR	168058	Argument	clean_non_persistent_function_full		167548	1					
ANR	168059	Identifier	clean_non_persistent_function_full		167548	0					
ANR	168060	ExpressionStatement	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class_full )"	364:3:10992:11065	167548	1	True				
ANR	168061	CallExpression	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class_full )"		167548	0					
ANR	168062	Callee	zend_hash_reverse_apply		167548	0					
ANR	168063	Identifier	zend_hash_reverse_apply		167548	0					
ANR	168064	ArgumentList	EG ( class_table )		167548	1					
ANR	168065	Argument	EG ( class_table )		167548	0					
ANR	168066	CallExpression	EG ( class_table )		167548	0					
ANR	168067	Callee	EG		167548	0					
ANR	168068	Identifier	EG		167548	0					
ANR	168069	ArgumentList	class_table		167548	1					
ANR	168070	Argument	class_table		167548	0					
ANR	168071	Identifier	class_table		167548	0					
ANR	168072	Argument	clean_non_persistent_class_full		167548	1					
ANR	168073	Identifier	clean_non_persistent_class_full		167548	0					
ANR	168074	ElseStatement	else		167548	0					
ANR	168075	CompoundStatement		115:9:3904:3904	167548	0					
ANR	168076	ExpressionStatement	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function )"	366:3:11081:11155	167548	0	True				
ANR	168077	CallExpression	"zend_hash_reverse_apply ( EG ( function_table ) , clean_non_persistent_function )"		167548	0					
ANR	168078	Callee	zend_hash_reverse_apply		167548	0					
ANR	168079	Identifier	zend_hash_reverse_apply		167548	0					
ANR	168080	ArgumentList	EG ( function_table )		167548	1					
ANR	168081	Argument	EG ( function_table )		167548	0					
ANR	168082	CallExpression	EG ( function_table )		167548	0					
ANR	168083	Callee	EG		167548	0					
ANR	168084	Identifier	EG		167548	0					
ANR	168085	ArgumentList	function_table		167548	1					
ANR	168086	Argument	function_table		167548	0					
ANR	168087	Identifier	function_table		167548	0					
ANR	168088	Argument	clean_non_persistent_function		167548	1					
ANR	168089	Identifier	clean_non_persistent_function		167548	0					
ANR	168090	ExpressionStatement	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class )"	367:3:11160:11228	167548	1	True				
ANR	168091	CallExpression	"zend_hash_reverse_apply ( EG ( class_table ) , clean_non_persistent_class )"		167548	0					
ANR	168092	Callee	zend_hash_reverse_apply		167548	0					
ANR	168093	Identifier	zend_hash_reverse_apply		167548	0					
ANR	168094	ArgumentList	EG ( class_table )		167548	1					
ANR	168095	Argument	EG ( class_table )		167548	0					
ANR	168096	CallExpression	EG ( class_table )		167548	0					
ANR	168097	Callee	EG		167548	0					
ANR	168098	Identifier	EG		167548	0					
ANR	168099	ArgumentList	class_table		167548	1					
ANR	168100	Argument	class_table		167548	0					
ANR	168101	Identifier	class_table		167548	0					
ANR	168102	Argument	clean_non_persistent_class		167548	1					
ANR	168103	Identifier	clean_non_persistent_class		167548	0					
ANR	168104	WhileStatement	while ( EG ( symtable_cache_ptr ) >= EG ( symtable_cache ) )		167548	3					
ANR	168105	Condition	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )	370:9:11244:11285	167548	0	True				
ANR	168106	RelationalExpression	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )		167548	0		>=			
ANR	168107	CallExpression	EG ( symtable_cache_ptr )		167548	0					
ANR	168108	Callee	EG		167548	0					
ANR	168109	Identifier	EG		167548	0					
ANR	168110	ArgumentList	symtable_cache_ptr		167548	1					
ANR	168111	Argument	symtable_cache_ptr		167548	0					
ANR	168112	Identifier	symtable_cache_ptr		167548	0					
ANR	168113	CallExpression	EG ( symtable_cache )		167548	1					
ANR	168114	Callee	EG		167548	0					
ANR	168115	Identifier	EG		167548	0					
ANR	168116	ArgumentList	symtable_cache		167548	1					
ANR	168117	Argument	symtable_cache		167548	0					
ANR	168118	Identifier	symtable_cache		167548	0					
ANR	168119	CompoundStatement		120:53:4116:4116	167548	1					
ANR	168120	ExpressionStatement	zend_hash_destroy ( * EG ( symtable_cache_ptr ) )	371:3:11293:11335	167548	0	True				
ANR	168121	CallExpression	zend_hash_destroy ( * EG ( symtable_cache_ptr ) )		167548	0					
ANR	168122	Callee	zend_hash_destroy		167548	0					
ANR	168123	Identifier	zend_hash_destroy		167548	0					
ANR	168124	ArgumentList	* EG ( symtable_cache_ptr )		167548	1					
ANR	168125	Argument	* EG ( symtable_cache_ptr )		167548	0					
ANR	168126	UnaryOperationExpression	* EG ( symtable_cache_ptr )		167548	0					
ANR	168127	UnaryOperator	*		167548	0					
ANR	168128	CallExpression	EG ( symtable_cache_ptr )		167548	1					
ANR	168129	Callee	EG		167548	0					
ANR	168130	Identifier	EG		167548	0					
ANR	168131	ArgumentList	symtable_cache_ptr		167548	1					
ANR	168132	Argument	symtable_cache_ptr		167548	0					
ANR	168133	Identifier	symtable_cache_ptr		167548	0					
ANR	168134	ExpressionStatement	FREE_HASHTABLE ( * EG ( symtable_cache_ptr ) )	372:3:11340:11379	167548	1	True				
ANR	168135	CallExpression	FREE_HASHTABLE ( * EG ( symtable_cache_ptr ) )		167548	0					
ANR	168136	Callee	FREE_HASHTABLE		167548	0					
ANR	168137	Identifier	FREE_HASHTABLE		167548	0					
ANR	168138	ArgumentList	* EG ( symtable_cache_ptr )		167548	1					
ANR	168139	Argument	* EG ( symtable_cache_ptr )		167548	0					
ANR	168140	UnaryOperationExpression	* EG ( symtable_cache_ptr )		167548	0					
ANR	168141	UnaryOperator	*		167548	0					
ANR	168142	CallExpression	EG ( symtable_cache_ptr )		167548	1					
ANR	168143	Callee	EG		167548	0					
ANR	168144	Identifier	EG		167548	0					
ANR	168145	ArgumentList	symtable_cache_ptr		167548	1					
ANR	168146	Argument	symtable_cache_ptr		167548	0					
ANR	168147	Identifier	symtable_cache_ptr		167548	0					
ANR	168148	ExpressionStatement	EG ( symtable_cache_ptr ) --	373:3:11384:11408	167548	2	True				
ANR	168149	PostIncDecOperationExpression	EG ( symtable_cache_ptr ) --		167548	0					
ANR	168150	CallExpression	EG ( symtable_cache_ptr )		167548	0					
ANR	168151	Callee	EG		167548	0					
ANR	168152	Identifier	EG		167548	0					
ANR	168153	ArgumentList	symtable_cache_ptr		167548	1					
ANR	168154	Argument	symtable_cache_ptr		167548	0					
ANR	168155	Identifier	symtable_cache_ptr		167548	0					
ANR	168156	IncDec	--		167548	1					
ANR	168157	ExpressionStatement	zend_end_try ( )	375:3:11417:11431	167548	21	True				
ANR	168158	CallExpression	zend_end_try ( )		167548	0					
ANR	168159	Callee	zend_end_try		167548	0					
ANR	168160	Identifier	zend_end_try		167548	0					
ANR	168161	ArgumentList			167548	1					
ANR	168162	Statement	zend_try	377:1:11435:11442	167548	22	True				
ANR	168163	CompoundStatement		127:10:4272:4272	167548	23					
ANR	168164	ExpressionStatement	clean_non_persistent_constants ( )	378:2:11448:11480	167548	0	True				
ANR	168165	CallExpression	clean_non_persistent_constants ( )		167548	0					
ANR	168166	Callee	clean_non_persistent_constants		167548	0					
ANR	168167	Identifier	clean_non_persistent_constants		167548	0					
ANR	168168	ArgumentList			167548	1					
ANR	168169	ExpressionStatement	zend_end_try ( )	379:3:11485:11499	167548	24	True				
ANR	168170	CallExpression	zend_end_try ( )		167548	0					
ANR	168171	Callee	zend_end_try		167548	0					
ANR	168172	Identifier	zend_end_try		167548	0					
ANR	168173	ArgumentList			167548	1					
ANR	168174	Statement	zend_try	381:1:11503:11510	167548	25	True				
ANR	168175	CompoundStatement		131:10:4340:4340	167548	26					
ANR	168176	ExpressionStatement	"signal ( SIGSEGV , original_sigsegv_handler )"	383:1:11533:11574	167548	0	True				
ANR	168177	CallExpression	"signal ( SIGSEGV , original_sigsegv_handler )"		167548	0					
ANR	168178	Callee	signal		167548	0					
ANR	168179	Identifier	signal		167548	0					
ANR	168180	ArgumentList	SIGSEGV		167548	1					
ANR	168181	Argument	SIGSEGV		167548	0					
ANR	168182	Identifier	SIGSEGV		167548	0					
ANR	168183	Argument	original_sigsegv_handler		167548	1					
ANR	168184	Identifier	original_sigsegv_handler		167548	0					
ANR	168185	ExpressionStatement	zend_hash_destroy ( & EG ( included_files ) )	386:2:11586:11624	167548	1	True				
ANR	168186	CallExpression	zend_hash_destroy ( & EG ( included_files ) )		167548	0					
ANR	168187	Callee	zend_hash_destroy		167548	0					
ANR	168188	Identifier	zend_hash_destroy		167548	0					
ANR	168189	ArgumentList	& EG ( included_files )		167548	1					
ANR	168190	Argument	& EG ( included_files )		167548	0					
ANR	168191	UnaryOperationExpression	& EG ( included_files )		167548	0					
ANR	168192	UnaryOperator	&		167548	0					
ANR	168193	CallExpression	EG ( included_files )		167548	1					
ANR	168194	Callee	EG		167548	0					
ANR	168195	Identifier	EG		167548	0					
ANR	168196	ArgumentList	included_files		167548	1					
ANR	168197	Argument	included_files		167548	0					
ANR	168198	Identifier	included_files		167548	0					
ANR	168199	ExpressionStatement	zend_stack_destroy ( & EG ( user_error_handlers_error_reporting ) )	388:2:11629:11689	167548	2	True				
ANR	168200	CallExpression	zend_stack_destroy ( & EG ( user_error_handlers_error_reporting ) )		167548	0					
ANR	168201	Callee	zend_stack_destroy		167548	0					
ANR	168202	Identifier	zend_stack_destroy		167548	0					
ANR	168203	ArgumentList	& EG ( user_error_handlers_error_reporting )		167548	1					
ANR	168204	Argument	& EG ( user_error_handlers_error_reporting )		167548	0					
ANR	168205	UnaryOperationExpression	& EG ( user_error_handlers_error_reporting )		167548	0					
ANR	168206	UnaryOperator	&		167548	0					
ANR	168207	CallExpression	EG ( user_error_handlers_error_reporting )		167548	1					
ANR	168208	Callee	EG		167548	0					
ANR	168209	Identifier	EG		167548	0					
ANR	168210	ArgumentList	user_error_handlers_error_reporting		167548	1					
ANR	168211	Argument	user_error_handlers_error_reporting		167548	0					
ANR	168212	Identifier	user_error_handlers_error_reporting		167548	0					
ANR	168213	ExpressionStatement	zend_stack_destroy ( & EG ( user_error_handlers ) )	389:2:11693:11737	167548	3	True				
ANR	168214	CallExpression	zend_stack_destroy ( & EG ( user_error_handlers ) )		167548	0					
ANR	168215	Callee	zend_stack_destroy		167548	0					
ANR	168216	Identifier	zend_stack_destroy		167548	0					
ANR	168217	ArgumentList	& EG ( user_error_handlers )		167548	1					
ANR	168218	Argument	& EG ( user_error_handlers )		167548	0					
ANR	168219	UnaryOperationExpression	& EG ( user_error_handlers )		167548	0					
ANR	168220	UnaryOperator	&		167548	0					
ANR	168221	CallExpression	EG ( user_error_handlers )		167548	1					
ANR	168222	Callee	EG		167548	0					
ANR	168223	Identifier	EG		167548	0					
ANR	168224	ArgumentList	user_error_handlers		167548	1					
ANR	168225	Argument	user_error_handlers		167548	0					
ANR	168226	Identifier	user_error_handlers		167548	0					
ANR	168227	ExpressionStatement	zend_stack_destroy ( & EG ( user_exception_handlers ) )	390:2:11741:11789	167548	4	True				
ANR	168228	CallExpression	zend_stack_destroy ( & EG ( user_exception_handlers ) )		167548	0					
ANR	168229	Callee	zend_stack_destroy		167548	0					
ANR	168230	Identifier	zend_stack_destroy		167548	0					
ANR	168231	ArgumentList	& EG ( user_exception_handlers )		167548	1					
ANR	168232	Argument	& EG ( user_exception_handlers )		167548	0					
ANR	168233	UnaryOperationExpression	& EG ( user_exception_handlers )		167548	0					
ANR	168234	UnaryOperator	&		167548	0					
ANR	168235	CallExpression	EG ( user_exception_handlers )		167548	1					
ANR	168236	Callee	EG		167548	0					
ANR	168237	Identifier	EG		167548	0					
ANR	168238	ArgumentList	user_exception_handlers		167548	1					
ANR	168239	Argument	user_exception_handlers		167548	0					
ANR	168240	Identifier	user_exception_handlers		167548	0					
ANR	168241	ExpressionStatement	zend_objects_store_destroy ( & EG ( objects_store ) )	391:2:11793:11839	167548	5	True				
ANR	168242	CallExpression	zend_objects_store_destroy ( & EG ( objects_store ) )		167548	0					
ANR	168243	Callee	zend_objects_store_destroy		167548	0					
ANR	168244	Identifier	zend_objects_store_destroy		167548	0					
ANR	168245	ArgumentList	& EG ( objects_store )		167548	1					
ANR	168246	Argument	& EG ( objects_store )		167548	0					
ANR	168247	UnaryOperationExpression	& EG ( objects_store )		167548	0					
ANR	168248	UnaryOperator	&		167548	0					
ANR	168249	CallExpression	EG ( objects_store )		167548	1					
ANR	168250	Callee	EG		167548	0					
ANR	168251	Identifier	EG		167548	0					
ANR	168252	ArgumentList	objects_store		167548	1					
ANR	168253	Argument	objects_store		167548	0					
ANR	168254	Identifier	objects_store		167548	0					
ANR	168255	IfStatement	if ( EG ( in_autoload ) )		167548	6					
ANR	168256	Condition	EG ( in_autoload )	392:6:11847:11861	167548	0	True				
ANR	168257	CallExpression	EG ( in_autoload )		167548	0					
ANR	168258	Callee	EG		167548	0					
ANR	168259	Identifier	EG		167548	0					
ANR	168260	ArgumentList	in_autoload		167548	1					
ANR	168261	Argument	in_autoload		167548	0					
ANR	168262	Identifier	in_autoload		167548	0					
ANR	168263	CompoundStatement		142:23:4692:4692	167548	1					
ANR	168264	ExpressionStatement	zend_hash_destroy ( EG ( in_autoload ) )	393:3:11869:11903	167548	0	True				
ANR	168265	CallExpression	zend_hash_destroy ( EG ( in_autoload ) )		167548	0					
ANR	168266	Callee	zend_hash_destroy		167548	0					
ANR	168267	Identifier	zend_hash_destroy		167548	0					
ANR	168268	ArgumentList	EG ( in_autoload )		167548	1					
ANR	168269	Argument	EG ( in_autoload )		167548	0					
ANR	168270	CallExpression	EG ( in_autoload )		167548	0					
ANR	168271	Callee	EG		167548	0					
ANR	168272	Identifier	EG		167548	0					
ANR	168273	ArgumentList	in_autoload		167548	1					
ANR	168274	Argument	in_autoload		167548	0					
ANR	168275	Identifier	in_autoload		167548	0					
ANR	168276	ExpressionStatement	FREE_HASHTABLE ( EG ( in_autoload ) )	394:3:11908:11939	167548	1	True				
ANR	168277	CallExpression	FREE_HASHTABLE ( EG ( in_autoload ) )		167548	0					
ANR	168278	Callee	FREE_HASHTABLE		167548	0					
ANR	168279	Identifier	FREE_HASHTABLE		167548	0					
ANR	168280	ArgumentList	EG ( in_autoload )		167548	1					
ANR	168281	Argument	EG ( in_autoload )		167548	0					
ANR	168282	CallExpression	EG ( in_autoload )		167548	0					
ANR	168283	Callee	EG		167548	0					
ANR	168284	Identifier	EG		167548	0					
ANR	168285	ArgumentList	in_autoload		167548	1					
ANR	168286	Argument	in_autoload		167548	0					
ANR	168287	Identifier	in_autoload		167548	0					
ANR	168288	ExpressionStatement	zend_end_try ( )	396:3:11948:11962	167548	27	True				
ANR	168289	CallExpression	zend_end_try ( )		167548	0					
ANR	168290	Callee	zend_end_try		167548	0					
ANR	168291	Identifier	zend_end_try		167548	0					
ANR	168292	ArgumentList			167548	1					
ANR	168293	ExpressionStatement	zend_shutdown_fpu ( )	398:1:11966:11985	167548	28	True				
ANR	168294	CallExpression	zend_shutdown_fpu ( )		167548	0					
ANR	168295	Callee	zend_shutdown_fpu		167548	0					
ANR	168296	Identifier	zend_shutdown_fpu		167548	0					
ANR	168297	ArgumentList			167548	1					
ANR	168298	ExpressionStatement	EG ( ht_iterators_used ) = 0	400:1:11989:12014	167548	29	True				
ANR	168299	AssignmentExpression	EG ( ht_iterators_used ) = 0		167548	0		=			
ANR	168300	CallExpression	EG ( ht_iterators_used )		167548	0					
ANR	168301	Callee	EG		167548	0					
ANR	168302	Identifier	EG		167548	0					
ANR	168303	ArgumentList	ht_iterators_used		167548	1					
ANR	168304	Argument	ht_iterators_used		167548	0					
ANR	168305	Identifier	ht_iterators_used		167548	0					
ANR	168306	PrimaryExpression	0		167548	1					
ANR	168307	IfStatement	if ( EG ( ht_iterators ) != EG ( ht_iterators_slots ) )		167548	30					
ANR	168308	Condition	EG ( ht_iterators ) != EG ( ht_iterators_slots )	401:5:12021:12062	167548	0	True				
ANR	168309	EqualityExpression	EG ( ht_iterators ) != EG ( ht_iterators_slots )		167548	0		!=			
ANR	168310	CallExpression	EG ( ht_iterators )		167548	0					
ANR	168311	Callee	EG		167548	0					
ANR	168312	Identifier	EG		167548	0					
ANR	168313	ArgumentList	ht_iterators		167548	1					
ANR	168314	Argument	ht_iterators		167548	0					
ANR	168315	Identifier	ht_iterators		167548	0					
ANR	168316	CallExpression	EG ( ht_iterators_slots )		167548	1					
ANR	168317	Callee	EG		167548	0					
ANR	168318	Identifier	EG		167548	0					
ANR	168319	ArgumentList	ht_iterators_slots		167548	1					
ANR	168320	Argument	ht_iterators_slots		167548	0					
ANR	168321	Identifier	ht_iterators_slots		167548	0					
ANR	168322	CompoundStatement		151:49:4893:4893	167548	1					
ANR	168323	ExpressionStatement	efree ( EG ( ht_iterators ) )	402:2:12069:12092	167548	0	True				
ANR	168324	CallExpression	efree ( EG ( ht_iterators ) )		167548	0					
ANR	168325	Callee	efree		167548	0					
ANR	168326	Identifier	efree		167548	0					
ANR	168327	ArgumentList	EG ( ht_iterators )		167548	1					
ANR	168328	Argument	EG ( ht_iterators )		167548	0					
ANR	168329	CallExpression	EG ( ht_iterators )		167548	0					
ANR	168330	Callee	EG		167548	0					
ANR	168331	Identifier	EG		167548	0					
ANR	168332	ArgumentList	ht_iterators		167548	1					
ANR	168333	Argument	ht_iterators		167548	0					
ANR	168334	Identifier	ht_iterators		167548	0					
ANR	168335	ExpressionStatement	EG ( active ) = 0	405:1:12099:12113	167548	31	True				
ANR	168336	AssignmentExpression	EG ( active ) = 0		167548	0		=			
ANR	168337	CallExpression	EG ( active )		167548	0					
ANR	168338	Callee	EG		167548	0					
ANR	168339	Identifier	EG		167548	0					
ANR	168340	ArgumentList	active		167548	1					
ANR	168341	Argument	active		167548	0					
ANR	168342	Identifier	active		167548	0					
ANR	168343	PrimaryExpression	0		167548	1					
ANR	168344	ReturnType	void		167548	1					
ANR	168345	Identifier	shutdown_executor		167548	2					
ANR	168346	ParameterList			167548	3					
ANR	168347	CFGEntryNode	ENTRY		167548		True				
ANR	168348	CFGExitNode	EXIT		167548		True				
ANR	168349	CFGErrorNode	ERROR		167548		True				
ANR	168350	Symbol	GC_G		167548						
ANR	168351	Symbol	Z_TYPE		167548						
ANR	168352	Symbol	* ce		167548						
ANR	168353	Symbol	* EG ( symtable_cache_ptr )		167548						
ANR	168354	Symbol	& CG		167548						
ANR	168355	Symbol	user_error_handlers		167548						
ANR	168356	Symbol	ht_iterators_slots		167548						
ANR	168357	Symbol	user_error_handlers_error_reporting		167548						
ANR	168358	Symbol	ZEND_USER_CLASS		167548						
ANR	168359	Symbol	ZEND_USER_FUNCTION		167548						
ANR	168360	Symbol	zeh		167548						
ANR	168361	Symbol	IS_UNDEF		167548						
ANR	168362	Symbol	zend_unclean_zval_ptr_dtor		167548						
ANR	168363	Symbol	EG		167548						
ANR	168364	Symbol	NULL		167548						
ANR	168365	Symbol	clean_non_persistent_class_full		167548						
ANR	168366	Symbol	original_sigsegv_handler		167548						
ANR	168367	Symbol	symtable_cache_ptr		167548						
ANR	168368	Symbol	active		167548						
ANR	168369	Symbol	symbol_table		167548						
ANR	168370	Symbol	clean_non_persistent_function_full		167548						
ANR	168371	Symbol	zend_extension_deactivator		167548						
ANR	168372	Symbol	SIGSEGV		167548						
ANR	168373	Symbol	open_files		167548						
ANR	168374	Symbol	regular_list		167548						
ANR	168375	Symbol	function_table		167548						
ANR	168376	Symbol	ht_iterators		167548						
ANR	168377	Symbol	ce -> type		167548						
ANR	168378	Symbol	symtable_cache		167548						
ANR	168379	Symbol	& zend_extensions		167548						
ANR	168380	Symbol	user_error_handler		167548						
ANR	168381	Symbol	user_exception_handlers		167548						
ANR	168382	Symbol	* EG		167548						
ANR	168383	Symbol	& EG		167548						
ANR	168384	Symbol	user_exception_handler		167548						
ANR	168385	Symbol	clean_non_persistent_class		167548						
ANR	168386	Symbol	full_tables_cleanup		167548						
ANR	168387	Symbol	EG ( symbol_table ) . pDestructor		167548						
ANR	168388	Symbol	func -> type		167548						
ANR	168389	Symbol	included_files		167548						
ANR	168390	Symbol	class_table		167548						
ANR	168391	Symbol	ce		167548						
ANR	168392	Symbol	in_autoload		167548						
ANR	168393	Symbol	CG		167548						
ANR	168394	Symbol	* func		167548						
ANR	168395	Symbol	objects_store		167548						
ANR	168396	Symbol	unclean_shutdown		167548						
ANR	168397	Symbol	ht_iterators_used		167548						
ANR	168398	Symbol	func		167548						
ANR	168399	Symbol	clean_non_persistent_function		167548						
ANR	168400	Symbol	valid_symbol_table		167548						
ANR	168401	Symbol	gc_enabled		167548						
ANR	168402	Function	get_active_class_name	410:9:12177:12679							
ANR	168403	FunctionDef	get_active_class_name (const char * * space)		168402	0					
ANR	168404	CompoundStatement		411:0:12241:12679	168402	0					
ANR	168405	IdentifierDeclStatement	zend_function * func ;	412:1:12244:12263	168402	0	True				
ANR	168406	IdentifierDecl	* func		168402	0					
ANR	168407	IdentifierDeclType	zend_function *		168402	0					
ANR	168408	Identifier	func		168402	1					
ANR	168409	IfStatement	if ( ! zend_is_executing ( ) )		168402	1					
ANR	168410	Condition	! zend_is_executing ( )	414:5:12271:12290	168402	0	True				
ANR	168411	UnaryOperationExpression	! zend_is_executing ( )		168402	0					
ANR	168412	UnaryOperator	!		168402	0					
ANR	168413	CallExpression	zend_is_executing ( )		168402	1					
ANR	168414	Callee	zend_is_executing		168402	0					
ANR	168415	Identifier	zend_is_executing		168402	0					
ANR	168416	ArgumentList			168402	1					
ANR	168417	CompoundStatement		4:27:51:51	168402	1					
ANR	168418	IfStatement	if ( space )		168402	0					
ANR	168419	Condition	space	415:6:12301:12305	168402	0	True				
ANR	168420	Identifier	space		168402	0					
ANR	168421	CompoundStatement		5:13:66:66	168402	1					
ANR	168422	ExpressionStatement	"* space = """""	416:3:12313:12324	168402	0	True				
ANR	168423	AssignmentExpression	"* space = """""		168402	0		=			
ANR	168424	UnaryOperationExpression	* space		168402	0					
ANR	168425	UnaryOperator	*		168402	0					
ANR	168426	Identifier	space		168402	1					
ANR	168427	PrimaryExpression	""""""		168402	1					
ANR	168428	ReturnStatement	"return """" ;"	418:2:12332:12341	168402	1	True				
ANR	168429	PrimaryExpression	""""""		168402	0					
ANR	168430	ExpressionStatement	func = EG ( current_execute_data ) -> func	421:1:12348:12385	168402	2	True				
ANR	168431	AssignmentExpression	func = EG ( current_execute_data ) -> func		168402	0		=			
ANR	168432	Identifier	func		168402	0					
ANR	168433	PtrMemberAccess	EG ( current_execute_data ) -> func		168402	1					
ANR	168434	CallExpression	EG ( current_execute_data )		168402	0					
ANR	168435	Callee	EG		168402	0					
ANR	168436	Identifier	EG		168402	0					
ANR	168437	ArgumentList	current_execute_data		168402	1					
ANR	168438	Argument	current_execute_data		168402	0					
ANR	168439	Identifier	current_execute_data		168402	0					
ANR	168440	Identifier	func		168402	1					
ANR	168441	SwitchStatement	switch ( func -> type )		168402	3					
ANR	168442	Condition	func -> type	422:9:12396:12405	168402	0	True				
ANR	168443	PtrMemberAccess	func -> type		168402	0					
ANR	168444	Identifier	func		168402	0					
ANR	168445	Identifier	type		168402	1					
ANR	168446	CompoundStatement		12:21:166:166	168402	1					
ANR	168447	Label	case ZEND_USER_FUNCTION :	423:2:12412:12435	168402	0	True				
ANR	168448	Identifier	ZEND_USER_FUNCTION		168402	0					
ANR	168449	Label	case ZEND_INTERNAL_FUNCTION :	424:2:12439:12466	168402	1	True				
ANR	168450	Identifier	ZEND_INTERNAL_FUNCTION		168402	0					
ANR	168451	CompoundStatement		16:3:233:274	168402	2					
ANR	168452	IdentifierDeclStatement	zend_class_entry * ce = func -> common . scope ;	426:3:12475:12516	168402	0	True				
ANR	168453	IdentifierDecl	* ce = func -> common . scope		168402	0					
ANR	168454	IdentifierDeclType	zend_class_entry *		168402	0					
ANR	168455	Identifier	ce		168402	1					
ANR	168456	AssignmentExpression	* ce = func -> common . scope		168402	2		=			
ANR	168457	Identifier	ce		168402	0					
ANR	168458	MemberAccess	func -> common . scope		168402	1					
ANR	168459	PtrMemberAccess	func -> common		168402	0					
ANR	168460	Identifier	func		168402	0					
ANR	168461	Identifier	common		168402	1					
ANR	168462	Identifier	scope		168402	1					
ANR	168463	IfStatement	if ( space )		168402	1					
ANR	168464	Condition	space	428:7:12526:12530	168402	0	True				
ANR	168465	Identifier	space		168402	0					
ANR	168466	CompoundStatement		18:14:291:291	168402	1					
ANR	168467	ExpressionStatement	"* space = ce ? ""::"" : """""	429:4:12539:12562	168402	0	True				
ANR	168468	AssignmentExpression	"* space = ce ? ""::"" : """""		168402	0		=			
ANR	168469	UnaryOperationExpression	* space		168402	0					
ANR	168470	UnaryOperator	*		168402	0					
ANR	168471	Identifier	space		168402	1					
ANR	168472	ConditionalExpression	"ce ? ""::"" : """""		168402	1					
ANR	168473	Condition	ce		168402	0					
ANR	168474	Identifier	ce		168402	0					
ANR	168475	PrimaryExpression	"""::"""		168402	1					
ANR	168476	PrimaryExpression	""""""		168402	2					
ANR	168477	ReturnStatement	"return ce ? ZSTR_VAL ( ce -> name ) : """" ;"	431:3:12572:12607	168402	2	True				
ANR	168478	ConditionalExpression	"ce ? ZSTR_VAL ( ce -> name ) : """""		168402	0					
ANR	168479	Condition	ce		168402	0					
ANR	168480	Identifier	ce		168402	0					
ANR	168481	CallExpression	ZSTR_VAL ( ce -> name )		168402	1					
ANR	168482	Callee	ZSTR_VAL		168402	0					
ANR	168483	Identifier	ZSTR_VAL		168402	0					
ANR	168484	ArgumentList	ce -> name		168402	1					
ANR	168485	Argument	ce -> name		168402	0					
ANR	168486	PtrMemberAccess	ce -> name		168402	0					
ANR	168487	Identifier	ce		168402	0					
ANR	168488	Identifier	name		168402	1					
ANR	168489	PrimaryExpression	""""""		168402	2					
ANR	168490	Label	default :	433:2:12615:12622	168402	3	True				
ANR	168491	Identifier	default		168402	0					
ANR	168492	IfStatement	if ( space )		168402	4					
ANR	168493	Condition	space	434:7:12631:12635	168402	0	True				
ANR	168494	Identifier	space		168402	0					
ANR	168495	CompoundStatement		24:14:396:396	168402	1					
ANR	168496	ExpressionStatement	"* space = """""	435:4:12644:12655	168402	0	True				
ANR	168497	AssignmentExpression	"* space = """""		168402	0		=			
ANR	168498	UnaryOperationExpression	* space		168402	0					
ANR	168499	UnaryOperator	*		168402	0					
ANR	168500	Identifier	space		168402	1					
ANR	168501	PrimaryExpression	""""""		168402	1					
ANR	168502	ReturnStatement	"return """" ;"	437:3:12665:12674	168402	5	True				
ANR	168503	PrimaryExpression	""""""		168402	0					
ANR	168504	ReturnType	const char *		168402	1					
ANR	168505	Identifier	get_active_class_name		168402	2					
ANR	168506	ParameterList	const char * * space		168402	3					
ANR	168507	Parameter	const char * * space	410:43:12211:12228	168402	0	True				
ANR	168508	ParameterType	const char * *		168402	0					
ANR	168509	Identifier	space		168402	1					
ANR	168510	CFGEntryNode	ENTRY		168402		True				
ANR	168511	CFGExitNode	EXIT		168402		True				
ANR	168512	Symbol	EG		168402						
ANR	168513	Symbol	ce		168402						
ANR	168514	Symbol	* func		168402						
ANR	168515	Symbol	zend_is_executing		168402						
ANR	168516	Symbol	EG ( current_execute_data ) -> func		168402						
ANR	168517	Symbol	current_execute_data		168402						
ANR	168518	Symbol	* EG		168402						
ANR	168519	Symbol	* ce		168402						
ANR	168520	Symbol	space		168402						
ANR	168521	Symbol	ZSTR_VAL		168402						
ANR	168522	Symbol	func -> common . scope		168402						
ANR	168523	Symbol	func		168402						
ANR	168524	Symbol	func -> common		168402						
ANR	168525	Symbol	* space		168402						
ANR	168526	Symbol	func -> type		168402						
ANR	168527	Symbol	ce -> name		168402						
ANR	168528	Function	get_active_function_name	442:9:12701:13215							
ANR	168529	FunctionDef	get_active_function_name ()		168528	0					
ANR	168530	CompoundStatement		443:0:12754:13215	168528	0					
ANR	168531	IdentifierDeclStatement	zend_function * func ;	444:1:12757:12776	168528	0	True				
ANR	168532	IdentifierDecl	* func		168528	0					
ANR	168533	IdentifierDeclType	zend_function *		168528	0					
ANR	168534	Identifier	func		168528	1					
ANR	168535	IfStatement	if ( ! zend_is_executing ( ) )		168528	1					
ANR	168536	Condition	! zend_is_executing ( )	446:5:12784:12803	168528	0	True				
ANR	168537	UnaryOperationExpression	! zend_is_executing ( )		168528	0					
ANR	168538	UnaryOperator	!		168528	0					
ANR	168539	CallExpression	zend_is_executing ( )		168528	1					
ANR	168540	Callee	zend_is_executing		168528	0					
ANR	168541	Identifier	zend_is_executing		168528	0					
ANR	168542	ArgumentList			168528	1					
ANR	168543	CompoundStatement		4:27:51:51	168528	1					
ANR	168544	ReturnStatement	return NULL ;	447:2:12810:12821	168528	0	True				
ANR	168545	Identifier	NULL		168528	0					
ANR	168546	ExpressionStatement	func = EG ( current_execute_data ) -> func	449:1:12827:12864	168528	2	True				
ANR	168547	AssignmentExpression	func = EG ( current_execute_data ) -> func		168528	0		=			
ANR	168548	Identifier	func		168528	0					
ANR	168549	PtrMemberAccess	EG ( current_execute_data ) -> func		168528	1					
ANR	168550	CallExpression	EG ( current_execute_data )		168528	0					
ANR	168551	Callee	EG		168528	0					
ANR	168552	Identifier	EG		168528	0					
ANR	168553	ArgumentList	current_execute_data		168528	1					
ANR	168554	Argument	current_execute_data		168528	0					
ANR	168555	Identifier	current_execute_data		168528	0					
ANR	168556	Identifier	func		168528	1					
ANR	168557	SwitchStatement	switch ( func -> type )		168528	3					
ANR	168558	Condition	func -> type	450:9:12875:12884	168528	0	True				
ANR	168559	PtrMemberAccess	func -> type		168528	0					
ANR	168560	Identifier	func		168528	0					
ANR	168561	Identifier	type		168528	1					
ANR	168562	CompoundStatement		8:21:132:132	168528	1					
ANR	168563	Label	case ZEND_USER_FUNCTION :	451:2:12891:12914	168528	0	True				
ANR	168564	Identifier	ZEND_USER_FUNCTION		168528	0					
ANR	168565	CompoundStatement		10:4:167:222	168528	1					
ANR	168566	IdentifierDeclStatement	zend_string * function_name = func -> common . function_name ;	452:4:12922:12977	168528	0	True				
ANR	168567	IdentifierDecl	* function_name = func -> common . function_name		168528	0					
ANR	168568	IdentifierDeclType	zend_string *		168528	0					
ANR	168569	Identifier	function_name		168528	1					
ANR	168570	AssignmentExpression	* function_name = func -> common . function_name		168528	2		=			
ANR	168571	Identifier	function_name		168528	0					
ANR	168572	MemberAccess	func -> common . function_name		168528	1					
ANR	168573	PtrMemberAccess	func -> common		168528	0					
ANR	168574	Identifier	func		168528	0					
ANR	168575	Identifier	common		168528	1					
ANR	168576	Identifier	function_name		168528	1					
ANR	168577	IfStatement	if ( function_name )		168528	1					
ANR	168578	Condition	function_name	454:8:12988:13000	168528	0	True				
ANR	168579	Identifier	function_name		168528	0					
ANR	168580	CompoundStatement		12:23:248:248	168528	1					
ANR	168581	ReturnStatement	return ZSTR_VAL ( function_name ) ;	455:5:13010:13040	168528	0	True				
ANR	168582	CallExpression	ZSTR_VAL ( function_name )		168528	0					
ANR	168583	Callee	ZSTR_VAL		168528	0					
ANR	168584	Identifier	ZSTR_VAL		168528	0					
ANR	168585	ArgumentList	function_name		168528	1					
ANR	168586	Argument	function_name		168528	0					
ANR	168587	Identifier	function_name		168528	0					
ANR	168588	ElseStatement	else		168528	0					
ANR	168589	CompoundStatement		14:11:298:298	168528	0					
ANR	168590	ReturnStatement	"return ""main"" ;"	457:5:13060:13073	168528	0	True				
ANR	168591	PrimaryExpression	"""main"""		168528	0					
ANR	168592	BreakStatement	break ;	460:3:13089:13094	168528	2	True				
ANR	168593	Label	case ZEND_INTERNAL_FUNCTION :	461:2:13098:13125	168528	3	True				
ANR	168594	Identifier	ZEND_INTERNAL_FUNCTION		168528	0					
ANR	168595	ReturnStatement	return ZSTR_VAL ( func -> common . function_name ) ;	462:3:13130:13173	168528	4	True				
ANR	168596	CallExpression	ZSTR_VAL ( func -> common . function_name )		168528	0					
ANR	168597	Callee	ZSTR_VAL		168528	0					
ANR	168598	Identifier	ZSTR_VAL		168528	0					
ANR	168599	ArgumentList	func -> common . function_name		168528	1					
ANR	168600	Argument	func -> common . function_name		168528	0					
ANR	168601	MemberAccess	func -> common . function_name		168528	0					
ANR	168602	PtrMemberAccess	func -> common		168528	0					
ANR	168603	Identifier	func		168528	0					
ANR	168604	Identifier	common		168528	1					
ANR	168605	Identifier	function_name		168528	1					
ANR	168606	BreakStatement	break ;	463:3:13178:13183	168528	5	True				
ANR	168607	Label	default :	464:2:13187:13194	168528	6	True				
ANR	168608	Identifier	default		168528	0					
ANR	168609	ReturnStatement	return NULL ;	465:3:13199:13210	168528	7	True				
ANR	168610	Identifier	NULL		168528	0					
ANR	168611	ReturnType	const char *		168528	1					
ANR	168612	Identifier	get_active_function_name		168528	2					
ANR	168613	ParameterList			168528	3					
ANR	168614	CFGEntryNode	ENTRY		168528		True				
ANR	168615	CFGExitNode	EXIT		168528		True				
ANR	168616	Symbol	EG		168528						
ANR	168617	Symbol	NULL		168528						
ANR	168618	Symbol	* func		168528						
ANR	168619	Symbol	zend_is_executing		168528						
ANR	168620	Symbol	EG ( current_execute_data ) -> func		168528						
ANR	168621	Symbol	current_execute_data		168528						
ANR	168622	Symbol	func -> common . function_name		168528						
ANR	168623	Symbol	* EG		168528						
ANR	168624	Symbol	ZSTR_VAL		168528						
ANR	168625	Symbol	func		168528						
ANR	168626	Symbol	func -> common		168528						
ANR	168627	Symbol	function_name		168528						
ANR	168628	Symbol	func -> type		168528						
ANR	168629	Function	zend_get_executed_filename	470:9:13237:13544							
ANR	168630	FunctionDef	zend_get_executed_filename ()		168629	0					
ANR	168631	CompoundStatement		471:0:13292:13544	168629	0					
ANR	168632	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	472:1:13295:13343	168629	0	True				
ANR	168633	IdentifierDecl	* ex = EG ( current_execute_data )		168629	0					
ANR	168634	IdentifierDeclType	zend_execute_data *		168629	0					
ANR	168635	Identifier	ex		168629	1					
ANR	168636	AssignmentExpression	* ex = EG ( current_execute_data )		168629	2		=			
ANR	168637	Identifier	ex		168629	0					
ANR	168638	CallExpression	EG ( current_execute_data )		168629	1					
ANR	168639	Callee	EG		168629	0					
ANR	168640	Identifier	EG		168629	0					
ANR	168641	ArgumentList	current_execute_data		168629	1					
ANR	168642	Argument	current_execute_data		168629	0					
ANR	168643	Identifier	current_execute_data		168629	0					
ANR	168644	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) ) )		168629	1					
ANR	168645	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )	474:8:13354:13405	168629	0	True				
ANR	168646	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )		168629	0		&&			
ANR	168647	Identifier	ex		168629	0					
ANR	168648	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type )		168629	1		||			
ANR	168649	UnaryOperationExpression	! ex -> func		168629	0					
ANR	168650	UnaryOperator	!		168629	0					
ANR	168651	PtrMemberAccess	ex -> func		168629	1					
ANR	168652	Identifier	ex		168629	0					
ANR	168653	Identifier	func		168629	1					
ANR	168654	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> type )		168629	1					
ANR	168655	UnaryOperator	!		168629	0					
ANR	168656	CallExpression	ZEND_USER_CODE ( ex -> func -> type )		168629	1					
ANR	168657	Callee	ZEND_USER_CODE		168629	0					
ANR	168658	Identifier	ZEND_USER_CODE		168629	0					
ANR	168659	ArgumentList	ex -> func -> type		168629	1					
ANR	168660	Argument	ex -> func -> type		168629	0					
ANR	168661	PtrMemberAccess	ex -> func -> type		168629	0					
ANR	168662	PtrMemberAccess	ex -> func		168629	0					
ANR	168663	Identifier	ex		168629	0					
ANR	168664	Identifier	func		168629	1					
ANR	168665	Identifier	type		168629	1					
ANR	168666	CompoundStatement		4:62:115:115	168629	1					
ANR	168667	ExpressionStatement	ex = ex -> prev_execute_data	475:2:13412:13438	168629	0	True				
ANR	168668	AssignmentExpression	ex = ex -> prev_execute_data		168629	0		=			
ANR	168669	Identifier	ex		168629	0					
ANR	168670	PtrMemberAccess	ex -> prev_execute_data		168629	1					
ANR	168671	Identifier	ex		168629	0					
ANR	168672	Identifier	prev_execute_data		168629	1					
ANR	168673	IfStatement	if ( ex )		168629	2					
ANR	168674	Condition	ex	477:5:13448:13449	168629	0	True				
ANR	168675	Identifier	ex		168629	0					
ANR	168676	CompoundStatement		7:9:159:159	168629	1					
ANR	168677	ReturnStatement	return ZSTR_VAL ( ex -> func -> op_array . filename ) ;	478:2:13456:13500	168629	0	True				
ANR	168678	CallExpression	ZSTR_VAL ( ex -> func -> op_array . filename )		168629	0					
ANR	168679	Callee	ZSTR_VAL		168629	0					
ANR	168680	Identifier	ZSTR_VAL		168629	0					
ANR	168681	ArgumentList	ex -> func -> op_array . filename		168629	1					
ANR	168682	Argument	ex -> func -> op_array . filename		168629	0					
ANR	168683	MemberAccess	ex -> func -> op_array . filename		168629	0					
ANR	168684	PtrMemberAccess	ex -> func -> op_array		168629	0					
ANR	168685	PtrMemberAccess	ex -> func		168629	0					
ANR	168686	Identifier	ex		168629	0					
ANR	168687	Identifier	func		168629	1					
ANR	168688	Identifier	op_array		168629	1					
ANR	168689	Identifier	filename		168629	1					
ANR	168690	ElseStatement	else		168629	0					
ANR	168691	CompoundStatement		9:8:217:217	168629	0					
ANR	168692	ReturnStatement	"return ""[no active file]"" ;"	480:2:13514:13539	168629	0	True				
ANR	168693	PrimaryExpression	"""[no active file]"""		168629	0					
ANR	168694	ReturnType	const char *		168629	1					
ANR	168695	Identifier	zend_get_executed_filename		168629	2					
ANR	168696	ParameterList			168629	3					
ANR	168697	CFGEntryNode	ENTRY		168629		True				
ANR	168698	CFGExitNode	EXIT		168629		True				
ANR	168699	Symbol	EG		168629						
ANR	168700	Symbol	ex -> prev_execute_data		168629						
ANR	168701	Symbol	ex -> func -> type		168629						
ANR	168702	Symbol	ex -> func -> op_array		168629						
ANR	168703	Symbol	current_execute_data		168629						
ANR	168704	Symbol	ex -> func -> op_array . filename		168629						
ANR	168705	Symbol	ex -> func		168629						
ANR	168706	Symbol	ZSTR_VAL		168629						
ANR	168707	Symbol	ex		168629						
ANR	168708	Symbol	ZEND_USER_CODE		168629						
ANR	168709	Symbol	* ex		168629						
ANR	168710	Symbol	* ex -> func		168629						
ANR	168711	Symbol	* * ex		168629						
ANR	168712	Function	zend_get_executed_filename_ex	485:0:13557:13853							
ANR	168713	FunctionDef	zend_get_executed_filename_ex ()		168712	0					
ANR	168714	CompoundStatement		486:0:13625:13853	168712	0					
ANR	168715	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	487:1:13628:13676	168712	0	True				
ANR	168716	IdentifierDecl	* ex = EG ( current_execute_data )		168712	0					
ANR	168717	IdentifierDeclType	zend_execute_data *		168712	0					
ANR	168718	Identifier	ex		168712	1					
ANR	168719	AssignmentExpression	* ex = EG ( current_execute_data )		168712	2		=			
ANR	168720	Identifier	ex		168712	0					
ANR	168721	CallExpression	EG ( current_execute_data )		168712	1					
ANR	168722	Callee	EG		168712	0					
ANR	168723	Identifier	EG		168712	0					
ANR	168724	ArgumentList	current_execute_data		168712	1					
ANR	168725	Argument	current_execute_data		168712	0					
ANR	168726	Identifier	current_execute_data		168712	0					
ANR	168727	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) ) )		168712	1					
ANR	168728	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )	489:8:13687:13738	168712	0	True				
ANR	168729	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )		168712	0		&&			
ANR	168730	Identifier	ex		168712	0					
ANR	168731	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type )		168712	1		||			
ANR	168732	UnaryOperationExpression	! ex -> func		168712	0					
ANR	168733	UnaryOperator	!		168712	0					
ANR	168734	PtrMemberAccess	ex -> func		168712	1					
ANR	168735	Identifier	ex		168712	0					
ANR	168736	Identifier	func		168712	1					
ANR	168737	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> type )		168712	1					
ANR	168738	UnaryOperator	!		168712	0					
ANR	168739	CallExpression	ZEND_USER_CODE ( ex -> func -> type )		168712	1					
ANR	168740	Callee	ZEND_USER_CODE		168712	0					
ANR	168741	Identifier	ZEND_USER_CODE		168712	0					
ANR	168742	ArgumentList	ex -> func -> type		168712	1					
ANR	168743	Argument	ex -> func -> type		168712	0					
ANR	168744	PtrMemberAccess	ex -> func -> type		168712	0					
ANR	168745	PtrMemberAccess	ex -> func		168712	0					
ANR	168746	Identifier	ex		168712	0					
ANR	168747	Identifier	func		168712	1					
ANR	168748	Identifier	type		168712	1					
ANR	168749	CompoundStatement		4:62:115:115	168712	1					
ANR	168750	ExpressionStatement	ex = ex -> prev_execute_data	490:2:13745:13771	168712	0	True				
ANR	168751	AssignmentExpression	ex = ex -> prev_execute_data		168712	0		=			
ANR	168752	Identifier	ex		168712	0					
ANR	168753	PtrMemberAccess	ex -> prev_execute_data		168712	1					
ANR	168754	Identifier	ex		168712	0					
ANR	168755	Identifier	prev_execute_data		168712	1					
ANR	168756	IfStatement	if ( ex )		168712	2					
ANR	168757	Condition	ex	492:5:13781:13782	168712	0	True				
ANR	168758	Identifier	ex		168712	0					
ANR	168759	CompoundStatement		7:9:159:159	168712	1					
ANR	168760	ReturnStatement	return ex -> func -> op_array . filename ;	493:2:13789:13823	168712	0	True				
ANR	168761	MemberAccess	ex -> func -> op_array . filename		168712	0					
ANR	168762	PtrMemberAccess	ex -> func -> op_array		168712	0					
ANR	168763	PtrMemberAccess	ex -> func		168712	0					
ANR	168764	Identifier	ex		168712	0					
ANR	168765	Identifier	func		168712	1					
ANR	168766	Identifier	op_array		168712	1					
ANR	168767	Identifier	filename		168712	1					
ANR	168768	ElseStatement	else		168712	0					
ANR	168769	CompoundStatement		9:8:207:207	168712	0					
ANR	168770	ReturnStatement	return NULL ;	495:2:13837:13848	168712	0	True				
ANR	168771	Identifier	NULL		168712	0					
ANR	168772	ReturnType	ZEND_API zend_string *		168712	1					
ANR	168773	Identifier	zend_get_executed_filename_ex		168712	2					
ANR	168774	ParameterList			168712	3					
ANR	168775	CFGEntryNode	ENTRY		168712		True				
ANR	168776	CFGExitNode	EXIT		168712		True				
ANR	168777	Symbol	EG		168712						
ANR	168778	Symbol	ex -> prev_execute_data		168712						
ANR	168779	Symbol	NULL		168712						
ANR	168780	Symbol	ex -> func -> type		168712						
ANR	168781	Symbol	ex -> func -> op_array		168712						
ANR	168782	Symbol	current_execute_data		168712						
ANR	168783	Symbol	ex -> func -> op_array . filename		168712						
ANR	168784	Symbol	ex -> func		168712						
ANR	168785	Symbol	ex		168712						
ANR	168786	Symbol	ZEND_USER_CODE		168712						
ANR	168787	Symbol	* ex		168712						
ANR	168788	Symbol	* ex -> func		168712						
ANR	168789	Symbol	* * ex		168712						
ANR	168790	Function	zend_get_executed_lineno	500:0:13866:14322							
ANR	168791	FunctionDef	zend_get_executed_lineno ()		168790	0					
ANR	168792	CompoundStatement		501:0:13921:14322	168790	0					
ANR	168793	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	502:1:13924:13972	168790	0	True				
ANR	168794	IdentifierDecl	* ex = EG ( current_execute_data )		168790	0					
ANR	168795	IdentifierDeclType	zend_execute_data *		168790	0					
ANR	168796	Identifier	ex		168790	1					
ANR	168797	AssignmentExpression	* ex = EG ( current_execute_data )		168790	2		=			
ANR	168798	Identifier	ex		168790	0					
ANR	168799	CallExpression	EG ( current_execute_data )		168790	1					
ANR	168800	Callee	EG		168790	0					
ANR	168801	Identifier	EG		168790	0					
ANR	168802	ArgumentList	current_execute_data		168790	1					
ANR	168803	Argument	current_execute_data		168790	0					
ANR	168804	Identifier	current_execute_data		168790	0					
ANR	168805	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) ) )		168790	1					
ANR	168806	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )	504:8:13983:14034	168790	0	True				
ANR	168807	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )		168790	0		&&			
ANR	168808	Identifier	ex		168790	0					
ANR	168809	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type )		168790	1		||			
ANR	168810	UnaryOperationExpression	! ex -> func		168790	0					
ANR	168811	UnaryOperator	!		168790	0					
ANR	168812	PtrMemberAccess	ex -> func		168790	1					
ANR	168813	Identifier	ex		168790	0					
ANR	168814	Identifier	func		168790	1					
ANR	168815	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> type )		168790	1					
ANR	168816	UnaryOperator	!		168790	0					
ANR	168817	CallExpression	ZEND_USER_CODE ( ex -> func -> type )		168790	1					
ANR	168818	Callee	ZEND_USER_CODE		168790	0					
ANR	168819	Identifier	ZEND_USER_CODE		168790	0					
ANR	168820	ArgumentList	ex -> func -> type		168790	1					
ANR	168821	Argument	ex -> func -> type		168790	0					
ANR	168822	PtrMemberAccess	ex -> func -> type		168790	0					
ANR	168823	PtrMemberAccess	ex -> func		168790	0					
ANR	168824	Identifier	ex		168790	0					
ANR	168825	Identifier	func		168790	1					
ANR	168826	Identifier	type		168790	1					
ANR	168827	CompoundStatement		4:62:115:115	168790	1					
ANR	168828	ExpressionStatement	ex = ex -> prev_execute_data	505:2:14041:14067	168790	0	True				
ANR	168829	AssignmentExpression	ex = ex -> prev_execute_data		168790	0		=			
ANR	168830	Identifier	ex		168790	0					
ANR	168831	PtrMemberAccess	ex -> prev_execute_data		168790	1					
ANR	168832	Identifier	ex		168790	0					
ANR	168833	Identifier	prev_execute_data		168790	1					
ANR	168834	IfStatement	if ( ex )		168790	2					
ANR	168835	Condition	ex	507:5:14077:14078	168790	0	True				
ANR	168836	Identifier	ex		168790	0					
ANR	168837	CompoundStatement		7:9:159:159	168790	1					
ANR	168838	IfStatement	if ( EG ( exception ) && ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception ) )		168790	0					
ANR	168839	Condition	EG ( exception ) && ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception )	508:6:14089:14212	168790	0	True				
ANR	168840	AndExpression	EG ( exception ) && ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception )		168790	0		&&			
ANR	168841	CallExpression	EG ( exception )		168790	0					
ANR	168842	Callee	EG		168790	0					
ANR	168843	Identifier	EG		168790	0					
ANR	168844	ArgumentList	exception		168790	1					
ANR	168845	Argument	exception		168790	0					
ANR	168846	Identifier	exception		168790	0					
ANR	168847	AndExpression	ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION && ex -> opline -> lineno == 0 && EG ( opline_before_exception )		168790	1		&&			
ANR	168848	EqualityExpression	ex -> opline -> opcode == ZEND_HANDLE_EXCEPTION		168790	0		==			
ANR	168849	PtrMemberAccess	ex -> opline -> opcode		168790	0					
ANR	168850	PtrMemberAccess	ex -> opline		168790	0					
ANR	168851	Identifier	ex		168790	0					
ANR	168852	Identifier	opline		168790	1					
ANR	168853	Identifier	opcode		168790	1					
ANR	168854	Identifier	ZEND_HANDLE_EXCEPTION		168790	1					
ANR	168855	AndExpression	ex -> opline -> lineno == 0 && EG ( opline_before_exception )		168790	1		&&			
ANR	168856	EqualityExpression	ex -> opline -> lineno == 0		168790	0		==			
ANR	168857	PtrMemberAccess	ex -> opline -> lineno		168790	0					
ANR	168858	PtrMemberAccess	ex -> opline		168790	0					
ANR	168859	Identifier	ex		168790	0					
ANR	168860	Identifier	opline		168790	1					
ANR	168861	Identifier	lineno		168790	1					
ANR	168862	PrimaryExpression	0		168790	1					
ANR	168863	CallExpression	EG ( opline_before_exception )		168790	1					
ANR	168864	Callee	EG		168790	0					
ANR	168865	Identifier	EG		168790	0					
ANR	168866	ArgumentList	opline_before_exception		168790	1					
ANR	168867	Argument	opline_before_exception		168790	0					
ANR	168868	Identifier	opline_before_exception		168790	0					
ANR	168869	CompoundStatement		9:62:293:293	168790	1					
ANR	168870	ReturnStatement	return EG ( opline_before_exception ) -> lineno ;	510:3:14220:14262	168790	0	True				
ANR	168871	PtrMemberAccess	EG ( opline_before_exception ) -> lineno		168790	0					
ANR	168872	CallExpression	EG ( opline_before_exception )		168790	0					
ANR	168873	Callee	EG		168790	0					
ANR	168874	Identifier	EG		168790	0					
ANR	168875	ArgumentList	opline_before_exception		168790	1					
ANR	168876	Argument	opline_before_exception		168790	0					
ANR	168877	Identifier	opline_before_exception		168790	0					
ANR	168878	Identifier	lineno		168790	1					
ANR	168879	ReturnStatement	return ex -> opline -> lineno ;	512:2:14270:14295	168790	1	True				
ANR	168880	PtrMemberAccess	ex -> opline -> lineno		168790	0					
ANR	168881	PtrMemberAccess	ex -> opline		168790	0					
ANR	168882	Identifier	ex		168790	0					
ANR	168883	Identifier	opline		168790	1					
ANR	168884	Identifier	lineno		168790	1					
ANR	168885	ElseStatement	else		168790	0					
ANR	168886	CompoundStatement		13:8:383:383	168790	0					
ANR	168887	ReturnStatement	return 0 ;	514:2:14309:14317	168790	0	True				
ANR	168888	PrimaryExpression	0		168790	0					
ANR	168889	ReturnType	ZEND_API uint		168790	1					
ANR	168890	Identifier	zend_get_executed_lineno		168790	2					
ANR	168891	ParameterList			168790	3					
ANR	168892	CFGEntryNode	ENTRY		168790		True				
ANR	168893	CFGExitNode	EXIT		168790		True				
ANR	168894	Symbol	exception		168790						
ANR	168895	Symbol	ex -> opline		168790						
ANR	168896	Symbol	EG		168790						
ANR	168897	Symbol	ex -> prev_execute_data		168790						
ANR	168898	Symbol	ex -> func -> type		168790						
ANR	168899	Symbol	current_execute_data		168790						
ANR	168900	Symbol	ex -> opline -> lineno		168790						
ANR	168901	Symbol	ZEND_HANDLE_EXCEPTION		168790						
ANR	168902	Symbol	EG ( opline_before_exception ) -> lineno		168790						
ANR	168903	Symbol	* EG		168790						
ANR	168904	Symbol	ex -> func		168790						
ANR	168905	Symbol	ex -> opline -> opcode		168790						
ANR	168906	Symbol	opline_before_exception		168790						
ANR	168907	Symbol	ex		168790						
ANR	168908	Symbol	* ex -> opline		168790						
ANR	168909	Symbol	ZEND_USER_CODE		168790						
ANR	168910	Symbol	* ex		168790						
ANR	168911	Symbol	* ex -> func		168790						
ANR	168912	Symbol	* * ex		168790						
ANR	168913	Function	zend_is_executing	519:0:14335:14429							
ANR	168914	FunctionDef	zend_is_executing ()		168913	0					
ANR	168915	CompoundStatement		520:0:14388:14429	168913	0					
ANR	168916	ReturnStatement	return EG ( current_execute_data ) != 0 ;	521:1:14391:14427	168913	0	True				
ANR	168917	EqualityExpression	EG ( current_execute_data ) != 0		168913	0		!=			
ANR	168918	CallExpression	EG ( current_execute_data )		168913	0					
ANR	168919	Callee	EG		168913	0					
ANR	168920	Identifier	EG		168913	0					
ANR	168921	ArgumentList	current_execute_data		168913	1					
ANR	168922	Argument	current_execute_data		168913	0					
ANR	168923	Identifier	current_execute_data		168913	0					
ANR	168924	PrimaryExpression	0		168913	1					
ANR	168925	ReturnType	ZEND_API zend_bool		168913	1					
ANR	168926	Identifier	zend_is_executing		168913	2					
ANR	168927	ParameterList			168913	3					
ANR	168928	CFGEntryNode	ENTRY		168913		True				
ANR	168929	CFGExitNode	EXIT		168913		True				
ANR	168930	Symbol	EG		168913						
ANR	168931	Symbol	current_execute_data		168913						
ANR	168932	Function	zval_update_constant_ex	545:54:15070:18213							
ANR	168933	FunctionDef	"zval_update_constant_ex (zval * p , zend_bool inline_change , zend_class_entry * scope)"		168932	0					
ANR	168934	CompoundStatement		548:0:15198:18213	168932	0					
ANR	168935	IdentifierDeclStatement	zval * const_value ;	549:1:15201:15218	168932	0	True				
ANR	168936	IdentifierDecl	* const_value		168932	0					
ANR	168937	IdentifierDeclType	zval *		168932	0					
ANR	168938	Identifier	const_value		168932	1					
ANR	168939	IdentifierDeclStatement	char * colon ;	550:1:15221:15232	168932	1	True				
ANR	168940	IdentifierDecl	* colon		168932	0					
ANR	168941	IdentifierDeclType	char *		168932	0					
ANR	168942	Identifier	colon		168932	1					
ANR	168943	IfStatement	if ( IS_CONSTANT_VISITED ( p ) )		168932	2					
ANR	168944	Condition	IS_CONSTANT_VISITED ( p )	552:5:15240:15261	168932	0	True				
ANR	168945	CallExpression	IS_CONSTANT_VISITED ( p )		168932	0					
ANR	168946	Callee	IS_CONSTANT_VISITED		168932	0					
ANR	168947	Identifier	IS_CONSTANT_VISITED		168932	0					
ANR	168948	ArgumentList	p		168932	1					
ANR	168949	Argument	p		168932	0					
ANR	168950	Identifier	p		168932	0					
ANR	168951	CompoundStatement		5:29:65:65	168932	1					
ANR	168952	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot declare self-referencing constant '%s'"" , Z_STRVAL_P ( p ) )"	553:2:15268:15354	168932	0	True				
ANR	168953	CallExpression	"zend_throw_error ( NULL , ""Cannot declare self-referencing constant '%s'"" , Z_STRVAL_P ( p ) )"		168932	0					
ANR	168954	Callee	zend_throw_error		168932	0					
ANR	168955	Identifier	zend_throw_error		168932	0					
ANR	168956	ArgumentList	NULL		168932	1					
ANR	168957	Argument	NULL		168932	0					
ANR	168958	Identifier	NULL		168932	0					
ANR	168959	Argument	"""Cannot declare self-referencing constant '%s'"""		168932	1					
ANR	168960	PrimaryExpression	"""Cannot declare self-referencing constant '%s'"""		168932	0					
ANR	168961	Argument	Z_STRVAL_P ( p )		168932	2					
ANR	168962	CallExpression	Z_STRVAL_P ( p )		168932	0					
ANR	168963	Callee	Z_STRVAL_P		168932	0					
ANR	168964	Identifier	Z_STRVAL_P		168932	0					
ANR	168965	ArgumentList	p		168932	1					
ANR	168966	Argument	p		168932	0					
ANR	168967	Identifier	p		168932	0					
ANR	168968	ReturnStatement	return FAILURE ;	554:2:15358:15372	168932	1	True				
ANR	168969	Identifier	FAILURE		168932	0					
ANR	168970	ElseStatement	else		168932	0					
ANR	168971	IfStatement	if ( Z_TYPE_P ( p ) == IS_CONSTANT )		168932	0					
ANR	168972	Condition	Z_TYPE_P ( p ) == IS_CONSTANT	555:12:15386:15411	168932	0	True				
ANR	168973	EqualityExpression	Z_TYPE_P ( p ) == IS_CONSTANT		168932	0		==			
ANR	168974	CallExpression	Z_TYPE_P ( p )		168932	0					
ANR	168975	Callee	Z_TYPE_P		168932	0					
ANR	168976	Identifier	Z_TYPE_P		168932	0					
ANR	168977	ArgumentList	p		168932	1					
ANR	168978	Argument	p		168932	0					
ANR	168979	Identifier	p		168932	0					
ANR	168980	Identifier	IS_CONSTANT		168932	1					
ANR	168981	CompoundStatement		8:40:215:215	168932	1					
ANR	168982	ExpressionStatement	SEPARATE_ZVAL_NOREF ( p )	557:2:15419:15441	168932	0	True				
ANR	168983	CallExpression	SEPARATE_ZVAL_NOREF ( p )		168932	0					
ANR	168984	Callee	SEPARATE_ZVAL_NOREF		168932	0					
ANR	168985	Identifier	SEPARATE_ZVAL_NOREF		168932	0					
ANR	168986	ArgumentList	p		168932	1					
ANR	168987	Argument	p		168932	0					
ANR	168988	Identifier	p		168932	0					
ANR	168989	ExpressionStatement	MARK_CONSTANT_VISITED ( p )	558:2:15445:15469	168932	1	True				
ANR	168990	CallExpression	MARK_CONSTANT_VISITED ( p )		168932	0					
ANR	168991	Callee	MARK_CONSTANT_VISITED		168932	0					
ANR	168992	Identifier	MARK_CONSTANT_VISITED		168932	0					
ANR	168993	ArgumentList	p		168932	1					
ANR	168994	Argument	p		168932	0					
ANR	168995	Identifier	p		168932	0					
ANR	168996	IfStatement	if ( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_CLASS )		168932	2					
ANR	168997	Condition	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_CLASS	559:6:15477:15514	168932	0	True				
ANR	168998	BitAndExpression	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_CLASS		168932	0		&			
ANR	168999	CallExpression	Z_CONST_FLAGS_P ( p )		168932	0					
ANR	169000	Callee	Z_CONST_FLAGS_P		168932	0					
ANR	169001	Identifier	Z_CONST_FLAGS_P		168932	0					
ANR	169002	ArgumentList	p		168932	1					
ANR	169003	Argument	p		168932	0					
ANR	169004	Identifier	p		168932	0					
ANR	169005	Identifier	IS_CONSTANT_CLASS		168932	1					
ANR	169006	CompoundStatement		12:46:318:318	168932	1					
ANR	169007	ExpressionStatement	ZEND_ASSERT ( EG ( current_execute_data ) )	560:3:15522:15559	168932	0	True				
ANR	169008	CallExpression	ZEND_ASSERT ( EG ( current_execute_data ) )		168932	0					
ANR	169009	Callee	ZEND_ASSERT		168932	0					
ANR	169010	Identifier	ZEND_ASSERT		168932	0					
ANR	169011	ArgumentList	EG ( current_execute_data )		168932	1					
ANR	169012	Argument	EG ( current_execute_data )		168932	0					
ANR	169013	CallExpression	EG ( current_execute_data )		168932	0					
ANR	169014	Callee	EG		168932	0					
ANR	169015	Identifier	EG		168932	0					
ANR	169016	ArgumentList	current_execute_data		168932	1					
ANR	169017	Argument	current_execute_data		168932	0					
ANR	169018	Identifier	current_execute_data		168932	0					
ANR	169019	IfStatement	if ( inline_change )		168932	1					
ANR	169020	Condition	inline_change	561:7:15568:15580	168932	0	True				
ANR	169021	Identifier	inline_change		168932	0					
ANR	169022	CompoundStatement		14:22:384:384	168932	1					
ANR	169023	ExpressionStatement	zend_string_release ( Z_STR_P ( p ) )	562:4:15589:15620	168932	0	True				
ANR	169024	CallExpression	zend_string_release ( Z_STR_P ( p ) )		168932	0					
ANR	169025	Callee	zend_string_release		168932	0					
ANR	169026	Identifier	zend_string_release		168932	0					
ANR	169027	ArgumentList	Z_STR_P ( p )		168932	1					
ANR	169028	Argument	Z_STR_P ( p )		168932	0					
ANR	169029	CallExpression	Z_STR_P ( p )		168932	0					
ANR	169030	Callee	Z_STR_P		168932	0					
ANR	169031	Identifier	Z_STR_P		168932	0					
ANR	169032	ArgumentList	p		168932	1					
ANR	169033	Argument	p		168932	0					
ANR	169034	Identifier	p		168932	0					
ANR	169035	IfStatement	if ( EG ( scope ) && EG ( scope ) -> name )		168932	2					
ANR	169036	Condition	EG ( scope ) && EG ( scope ) -> name	564:7:15634:15661	168932	0	True				
ANR	169037	AndExpression	EG ( scope ) && EG ( scope ) -> name		168932	0		&&			
ANR	169038	CallExpression	EG ( scope )		168932	0					
ANR	169039	Callee	EG		168932	0					
ANR	169040	Identifier	EG		168932	0					
ANR	169041	ArgumentList	scope		168932	1					
ANR	169042	Argument	scope		168932	0					
ANR	169043	Identifier	scope		168932	0					
ANR	169044	PtrMemberAccess	EG ( scope ) -> name		168932	1					
ANR	169045	CallExpression	EG ( scope )		168932	0					
ANR	169046	Callee	EG		168932	0					
ANR	169047	Identifier	EG		168932	0					
ANR	169048	ArgumentList	scope		168932	1					
ANR	169049	Argument	scope		168932	0					
ANR	169050	Identifier	scope		168932	0					
ANR	169051	Identifier	name		168932	1					
ANR	169052	CompoundStatement		17:37:465:465	168932	1					
ANR	169053	ExpressionStatement	"ZVAL_STR_COPY ( p , EG ( scope ) -> name )"	565:4:15670:15703	168932	0	True				
ANR	169054	CallExpression	"ZVAL_STR_COPY ( p , EG ( scope ) -> name )"		168932	0					
ANR	169055	Callee	ZVAL_STR_COPY		168932	0					
ANR	169056	Identifier	ZVAL_STR_COPY		168932	0					
ANR	169057	ArgumentList	p		168932	1					
ANR	169058	Argument	p		168932	0					
ANR	169059	Identifier	p		168932	0					
ANR	169060	Argument	EG ( scope ) -> name		168932	1					
ANR	169061	PtrMemberAccess	EG ( scope ) -> name		168932	0					
ANR	169062	CallExpression	EG ( scope )		168932	0					
ANR	169063	Callee	EG		168932	0					
ANR	169064	Identifier	EG		168932	0					
ANR	169065	ArgumentList	scope		168932	1					
ANR	169066	Argument	scope		168932	0					
ANR	169067	Identifier	scope		168932	0					
ANR	169068	Identifier	name		168932	1					
ANR	169069	ElseStatement	else		168932	0					
ANR	169070	CompoundStatement		19:10:516:516	168932	0					
ANR	169071	ExpressionStatement	ZVAL_EMPTY_STRING ( p )	567:4:15721:15741	168932	0	True				
ANR	169072	CallExpression	ZVAL_EMPTY_STRING ( p )		168932	0					
ANR	169073	Callee	ZVAL_EMPTY_STRING		168932	0					
ANR	169074	Identifier	ZVAL_EMPTY_STRING		168932	0					
ANR	169075	ArgumentList	p		168932	1					
ANR	169076	Argument	p		168932	0					
ANR	169077	Identifier	p		168932	0					
ANR	169078	ElseStatement	else		168932	0					
ANR	169079	IfStatement	"if ( UNEXPECTED ( ( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL ) )"		168932	0					
ANR	169080	Condition	"UNEXPECTED ( ( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL )"	569:13:15761:15855	168932	0	True				
ANR	169081	CallExpression	"UNEXPECTED ( ( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL )"		168932	0					
ANR	169082	Callee	UNEXPECTED		168932	0					
ANR	169083	Identifier	UNEXPECTED		168932	0					
ANR	169084	ArgumentList	"( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL"		168932	1					
ANR	169085	Argument	"( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL"		168932	0					
ANR	169086	EqualityExpression	"( const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) ) ) == NULL"		168932	0		==			
ANR	169087	AssignmentExpression	"const_value = zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) )"		168932	0		=			
ANR	169088	Identifier	const_value		168932	0					
ANR	169089	CallExpression	"zend_get_constant_ex ( Z_STR_P ( p ) , scope , Z_CONST_FLAGS_P ( p ) )"		168932	1					
ANR	169090	Callee	zend_get_constant_ex		168932	0					
ANR	169091	Identifier	zend_get_constant_ex		168932	0					
ANR	169092	ArgumentList	Z_STR_P ( p )		168932	1					
ANR	169093	Argument	Z_STR_P ( p )		168932	0					
ANR	169094	CallExpression	Z_STR_P ( p )		168932	0					
ANR	169095	Callee	Z_STR_P		168932	0					
ANR	169096	Identifier	Z_STR_P		168932	0					
ANR	169097	ArgumentList	p		168932	1					
ANR	169098	Argument	p		168932	0					
ANR	169099	Identifier	p		168932	0					
ANR	169100	Argument	scope		168932	1					
ANR	169101	Identifier	scope		168932	0					
ANR	169102	Argument	Z_CONST_FLAGS_P ( p )		168932	2					
ANR	169103	CallExpression	Z_CONST_FLAGS_P ( p )		168932	0					
ANR	169104	Callee	Z_CONST_FLAGS_P		168932	0					
ANR	169105	Identifier	Z_CONST_FLAGS_P		168932	0					
ANR	169106	ArgumentList	p		168932	1					
ANR	169107	Argument	p		168932	0					
ANR	169108	Identifier	p		168932	0					
ANR	169109	Identifier	NULL		168932	1					
ANR	169110	CompoundStatement		23:3:664:692	168932	1					
ANR	169111	IdentifierDeclStatement	char * actual = Z_STRVAL_P ( p ) ;	570:3:15863:15891	168932	0	True				
ANR	169112	IdentifierDecl	* actual = Z_STRVAL_P ( p )		168932	0					
ANR	169113	IdentifierDeclType	char *		168932	0					
ANR	169114	Identifier	actual		168932	1					
ANR	169115	AssignmentExpression	* actual = Z_STRVAL_P ( p )		168932	2		=			
ANR	169116	Identifier	actual		168932	0					
ANR	169117	CallExpression	Z_STRVAL_P ( p )		168932	1					
ANR	169118	Callee	Z_STRVAL_P		168932	0					
ANR	169119	Identifier	Z_STRVAL_P		168932	0					
ANR	169120	ArgumentList	p		168932	1					
ANR	169121	Argument	p		168932	0					
ANR	169122	Identifier	p		168932	0					
ANR	169123	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		168932	1					
ANR	169124	Condition	UNEXPECTED ( EG ( exception ) )	572:7:15901:15925	168932	0	True				
ANR	169125	CallExpression	UNEXPECTED ( EG ( exception ) )		168932	0					
ANR	169126	Callee	UNEXPECTED		168932	0					
ANR	169127	Identifier	UNEXPECTED		168932	0					
ANR	169128	ArgumentList	EG ( exception )		168932	1					
ANR	169129	Argument	EG ( exception )		168932	0					
ANR	169130	CallExpression	EG ( exception )		168932	0					
ANR	169131	Callee	EG		168932	0					
ANR	169132	Identifier	EG		168932	0					
ANR	169133	ArgumentList	exception		168932	1					
ANR	169134	Argument	exception		168932	0					
ANR	169135	Identifier	exception		168932	0					
ANR	169136	CompoundStatement		25:34:729:729	168932	1					
ANR	169137	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	573:4:15934:15959	168932	0	True				
ANR	169138	CallExpression	RESET_CONSTANT_VISITED ( p )		168932	0					
ANR	169139	Callee	RESET_CONSTANT_VISITED		168932	0					
ANR	169140	Identifier	RESET_CONSTANT_VISITED		168932	0					
ANR	169141	ArgumentList	p		168932	1					
ANR	169142	Argument	p		168932	0					
ANR	169143	Identifier	p		168932	0					
ANR	169144	ReturnStatement	return FAILURE ;	574:4:15965:15979	168932	1	True				
ANR	169145	Identifier	FAILURE		168932	0					
ANR	169146	ElseStatement	else		168932	0					
ANR	169147	IfStatement	"if ( ( colon = ( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) ) ) )"		168932	0					
ANR	169148	Condition	"colon = ( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"	575:14:15995:16058	168932	0	True				
ANR	169149	AssignmentExpression	"colon = ( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"		168932	0		=			
ANR	169150	Identifier	colon		168932	0					
ANR	169151	CastExpression	"( char * ) zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"		168932	1					
ANR	169152	CastTarget	char *		168932	0					
ANR	169153	CallExpression	"zend_memrchr ( Z_STRVAL_P ( p ) , ':' , Z_STRLEN_P ( p ) )"		168932	1					
ANR	169154	Callee	zend_memrchr		168932	0					
ANR	169155	Identifier	zend_memrchr		168932	0					
ANR	169156	ArgumentList	Z_STRVAL_P ( p )		168932	1					
ANR	169157	Argument	Z_STRVAL_P ( p )		168932	0					
ANR	169158	CallExpression	Z_STRVAL_P ( p )		168932	0					
ANR	169159	Callee	Z_STRVAL_P		168932	0					
ANR	169160	Identifier	Z_STRVAL_P		168932	0					
ANR	169161	ArgumentList	p		168932	1					
ANR	169162	Argument	p		168932	0					
ANR	169163	Identifier	p		168932	0					
ANR	169164	Argument	':'		168932	1					
ANR	169165	PrimaryExpression	':'		168932	0					
ANR	169166	Argument	Z_STRLEN_P ( p )		168932	2					
ANR	169167	CallExpression	Z_STRLEN_P ( p )		168932	0					
ANR	169168	Callee	Z_STRLEN_P		168932	0					
ANR	169169	Identifier	Z_STRLEN_P		168932	0					
ANR	169170	ArgumentList	p		168932	1					
ANR	169171	Argument	p		168932	0					
ANR	169172	Identifier	p		168932	0					
ANR	169173	CompoundStatement		28:80:862:862	168932	1					
ANR	169174	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined class constant '%s'"" , Z_STRVAL_P ( p ) )"	576:4:16067:16137	168932	0	True				
ANR	169175	CallExpression	"zend_throw_error ( NULL , ""Undefined class constant '%s'"" , Z_STRVAL_P ( p ) )"		168932	0					
ANR	169176	Callee	zend_throw_error		168932	0					
ANR	169177	Identifier	zend_throw_error		168932	0					
ANR	169178	ArgumentList	NULL		168932	1					
ANR	169179	Argument	NULL		168932	0					
ANR	169180	Identifier	NULL		168932	0					
ANR	169181	Argument	"""Undefined class constant '%s'"""		168932	1					
ANR	169182	PrimaryExpression	"""Undefined class constant '%s'"""		168932	0					
ANR	169183	Argument	Z_STRVAL_P ( p )		168932	2					
ANR	169184	CallExpression	Z_STRVAL_P ( p )		168932	0					
ANR	169185	Callee	Z_STRVAL_P		168932	0					
ANR	169186	Identifier	Z_STRVAL_P		168932	0					
ANR	169187	ArgumentList	p		168932	1					
ANR	169188	Argument	p		168932	0					
ANR	169189	Identifier	p		168932	0					
ANR	169190	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	577:4:16143:16168	168932	1	True				
ANR	169191	CallExpression	RESET_CONSTANT_VISITED ( p )		168932	0					
ANR	169192	Callee	RESET_CONSTANT_VISITED		168932	0					
ANR	169193	Identifier	RESET_CONSTANT_VISITED		168932	0					
ANR	169194	ArgumentList	p		168932	1					
ANR	169195	Argument	p		168932	0					
ANR	169196	Identifier	p		168932	0					
ANR	169197	ReturnStatement	return FAILURE ;	578:4:16174:16188	168932	2	True				
ANR	169198	Identifier	FAILURE		168932	0					
ANR	169199	ElseStatement	else		168932	0					
ANR	169200	CompoundStatement		35:4:1060:1093	168932	0					
ANR	169201	IdentifierDeclStatement	zend_string * save = Z_STR_P ( p ) ;	580:4:16206:16236	168932	0	True				
ANR	169202	IdentifierDecl	* save = Z_STR_P ( p )		168932	0					
ANR	169203	IdentifierDeclType	zend_string *		168932	0					
ANR	169204	Identifier	save		168932	1					
ANR	169205	AssignmentExpression	* save = Z_STR_P ( p )		168932	2		=			
ANR	169206	Identifier	save		168932	0					
ANR	169207	CallExpression	Z_STR_P ( p )		168932	1					
ANR	169208	Callee	Z_STR_P		168932	0					
ANR	169209	Identifier	Z_STR_P		168932	0					
ANR	169210	ArgumentList	p		168932	1					
ANR	169211	Argument	p		168932	0					
ANR	169212	Identifier	p		168932	0					
ANR	169213	IdentifierDeclStatement	char * slash ;	581:4:16242:16253	168932	1	True				
ANR	169214	IdentifierDecl	* slash		168932	0					
ANR	169215	IdentifierDeclType	char *		168932	0					
ANR	169216	Identifier	slash		168932	1					
ANR	169217	IdentifierDeclStatement	size_t actual_len = Z_STRLEN_P ( p ) ;	582:4:16259:16292	168932	2	True				
ANR	169218	IdentifierDecl	actual_len = Z_STRLEN_P ( p )		168932	0					
ANR	169219	IdentifierDeclType	size_t		168932	0					
ANR	169220	Identifier	actual_len		168932	1					
ANR	169221	AssignmentExpression	actual_len = Z_STRLEN_P ( p )		168932	2		=			
ANR	169222	Identifier	actual_len		168932	0					
ANR	169223	CallExpression	Z_STRLEN_P ( p )		168932	1					
ANR	169224	Callee	Z_STRLEN_P		168932	0					
ANR	169225	Identifier	Z_STRLEN_P		168932	0					
ANR	169226	ArgumentList	p		168932	1					
ANR	169227	Argument	p		168932	0					
ANR	169228	Identifier	p		168932	0					
ANR	169229	IfStatement	"if ( ( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) && ( slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len ) ) )"		168932	3					
ANR	169230	Condition	"( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) && ( slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len ) )"	583:8:16302:16407	168932	0	True				
ANR	169231	AndExpression	"( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) && ( slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len ) )"		168932	0		&&			
ANR	169232	BitAndExpression	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED		168932	0		&			
ANR	169233	CallExpression	Z_CONST_FLAGS_P ( p )		168932	0					
ANR	169234	Callee	Z_CONST_FLAGS_P		168932	0					
ANR	169235	Identifier	Z_CONST_FLAGS_P		168932	0					
ANR	169236	ArgumentList	p		168932	1					
ANR	169237	Argument	p		168932	0					
ANR	169238	Identifier	p		168932	0					
ANR	169239	Identifier	IS_CONSTANT_UNQUALIFIED		168932	1					
ANR	169240	AssignmentExpression	"slash = ( char * ) zend_memrchr ( actual , '\\\\' , actual_len )"		168932	1		=			
ANR	169241	Identifier	slash		168932	0					
ANR	169242	CastExpression	"( char * ) zend_memrchr ( actual , '\\\\' , actual_len )"		168932	1					
ANR	169243	CastTarget	char *		168932	0					
ANR	169244	CallExpression	"zend_memrchr ( actual , '\\\\' , actual_len )"		168932	1					
ANR	169245	Callee	zend_memrchr		168932	0					
ANR	169246	Identifier	zend_memrchr		168932	0					
ANR	169247	ArgumentList	actual		168932	1					
ANR	169248	Argument	actual		168932	0					
ANR	169249	Identifier	actual		168932	0					
ANR	169250	Argument	'\\\\'		168932	1					
ANR	169251	PrimaryExpression	'\\\\'		168932	0					
ANR	169252	Argument	actual_len		168932	2					
ANR	169253	Identifier	actual_len		168932	0					
ANR	169254	CompoundStatement		36:116:1211:1211	168932	1					
ANR	169255	ExpressionStatement	actual = slash + 1	584:5:16417:16435	168932	0	True				
ANR	169256	AssignmentExpression	actual = slash + 1		168932	0		=			
ANR	169257	Identifier	actual		168932	0					
ANR	169258	AdditiveExpression	slash + 1		168932	1		+			
ANR	169259	Identifier	slash		168932	0					
ANR	169260	PrimaryExpression	1		168932	1					
ANR	169261	ExpressionStatement	actual_len -= ( actual - Z_STRVAL_P ( p ) )	585:5:16442:16480	168932	1	True				
ANR	169262	AssignmentExpression	actual_len -= ( actual - Z_STRVAL_P ( p ) )		168932	0		-=			
ANR	169263	Identifier	actual_len		168932	0					
ANR	169264	AdditiveExpression	actual - Z_STRVAL_P ( p )		168932	1		-			
ANR	169265	Identifier	actual		168932	0					
ANR	169266	CallExpression	Z_STRVAL_P ( p )		168932	1					
ANR	169267	Callee	Z_STRVAL_P		168932	0					
ANR	169268	Identifier	Z_STRVAL_P		168932	0					
ANR	169269	ArgumentList	p		168932	1					
ANR	169270	Argument	p		168932	0					
ANR	169271	Identifier	p		168932	0					
ANR	169272	IfStatement	if ( inline_change )		168932	2					
ANR	169273	Condition	inline_change	586:9:16491:16503	168932	0	True				
ANR	169274	Identifier	inline_change		168932	0					
ANR	169275	CompoundStatement		40:6:1315:1371	168932	1					
ANR	169276	IdentifierDeclStatement	"zend_string * s = zend_string_init ( actual , actual_len , 0 ) ;"	587:6:16514:16570	168932	0	True				
ANR	169277	IdentifierDecl	"* s = zend_string_init ( actual , actual_len , 0 )"		168932	0					
ANR	169278	IdentifierDeclType	zend_string *		168932	0					
ANR	169279	Identifier	s		168932	1					
ANR	169280	AssignmentExpression	"* s = zend_string_init ( actual , actual_len , 0 )"		168932	2		=			
ANR	169281	Identifier	s		168932	0					
ANR	169282	CallExpression	"zend_string_init ( actual , actual_len , 0 )"		168932	1					
ANR	169283	Callee	zend_string_init		168932	0					
ANR	169284	Identifier	zend_string_init		168932	0					
ANR	169285	ArgumentList	actual		168932	1					
ANR	169286	Argument	actual		168932	0					
ANR	169287	Identifier	actual		168932	0					
ANR	169288	Argument	actual_len		168932	1					
ANR	169289	Identifier	actual_len		168932	0					
ANR	169290	Argument	0		168932	2					
ANR	169291	PrimaryExpression	0		168932	0					
ANR	169292	ExpressionStatement	Z_STR_P ( p ) = s	588:6:16578:16592	168932	1	True				
ANR	169293	AssignmentExpression	Z_STR_P ( p ) = s		168932	0		=			
ANR	169294	CallExpression	Z_STR_P ( p )		168932	0					
ANR	169295	Callee	Z_STR_P		168932	0					
ANR	169296	Identifier	Z_STR_P		168932	0					
ANR	169297	ArgumentList	p		168932	1					
ANR	169298	Argument	p		168932	0					
ANR	169299	Identifier	p		168932	0					
ANR	169300	Identifier	s		168932	1					
ANR	169301	ExpressionStatement	Z_TYPE_FLAGS_P ( p ) = IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE	589:6:16600:16657	168932	2	True				
ANR	169302	AssignmentExpression	Z_TYPE_FLAGS_P ( p ) = IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE		168932	0		=			
ANR	169303	CallExpression	Z_TYPE_FLAGS_P ( p )		168932	0					
ANR	169304	Callee	Z_TYPE_FLAGS_P		168932	0					
ANR	169305	Identifier	Z_TYPE_FLAGS_P		168932	0					
ANR	169306	ArgumentList	p		168932	1					
ANR	169307	Argument	p		168932	0					
ANR	169308	Identifier	p		168932	0					
ANR	169309	InclusiveOrExpression	IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE		168932	1		|			
ANR	169310	Identifier	IS_TYPE_REFCOUNTED		168932	0					
ANR	169311	Identifier	IS_TYPE_COPYABLE		168932	1					
ANR	169312	IfStatement	if ( actual [ 0 ] == '\\\\' )		168932	4					
ANR	169313	Condition	actual [ 0 ] == '\\\\'	592:8:16680:16696	168932	0	True				
ANR	169314	EqualityExpression	actual [ 0 ] == '\\\\'		168932	0		==			
ANR	169315	ArrayIndexing	actual [ 0 ]		168932	0					
ANR	169316	Identifier	actual		168932	0					
ANR	169317	PrimaryExpression	0		168932	1					
ANR	169318	PrimaryExpression	'\\\\'		168932	1					
ANR	169319	CompoundStatement		45:27:1500:1500	168932	1					
ANR	169320	IfStatement	if ( inline_change )		168932	0					
ANR	169321	Condition	inline_change	593:9:16710:16722	168932	0	True				
ANR	169322	Identifier	inline_change		168932	0					
ANR	169323	CompoundStatement		46:24:1526:1526	168932	1					
ANR	169324	ExpressionStatement	"memmove ( Z_STRVAL_P ( p ) , Z_STRVAL_P ( p ) + 1 , Z_STRLEN_P ( p ) )"	594:6:16733:16787	168932	0	True				
ANR	169325	CallExpression	"memmove ( Z_STRVAL_P ( p ) , Z_STRVAL_P ( p ) + 1 , Z_STRLEN_P ( p ) )"		168932	0					
ANR	169326	Callee	memmove		168932	0					
ANR	169327	Identifier	memmove		168932	0					
ANR	169328	ArgumentList	Z_STRVAL_P ( p )		168932	1					
ANR	169329	Argument	Z_STRVAL_P ( p )		168932	0					
ANR	169330	CallExpression	Z_STRVAL_P ( p )		168932	0					
ANR	169331	Callee	Z_STRVAL_P		168932	0					
ANR	169332	Identifier	Z_STRVAL_P		168932	0					
ANR	169333	ArgumentList	p		168932	1					
ANR	169334	Argument	p		168932	0					
ANR	169335	Identifier	p		168932	0					
ANR	169336	Argument	Z_STRVAL_P ( p ) + 1		168932	1					
ANR	169337	AdditiveExpression	Z_STRVAL_P ( p ) + 1		168932	0		+			
ANR	169338	CallExpression	Z_STRVAL_P ( p )		168932	0					
ANR	169339	Callee	Z_STRVAL_P		168932	0					
ANR	169340	Identifier	Z_STRVAL_P		168932	0					
ANR	169341	ArgumentList	p		168932	1					
ANR	169342	Argument	p		168932	0					
ANR	169343	Identifier	p		168932	0					
ANR	169344	PrimaryExpression	1		168932	1					
ANR	169345	Argument	Z_STRLEN_P ( p )		168932	2					
ANR	169346	CallExpression	Z_STRLEN_P ( p )		168932	0					
ANR	169347	Callee	Z_STRLEN_P		168932	0					
ANR	169348	Identifier	Z_STRLEN_P		168932	0					
ANR	169349	ArgumentList	p		168932	1					
ANR	169350	Argument	p		168932	0					
ANR	169351	Identifier	p		168932	0					
ANR	169352	ExpressionStatement	-- Z_STRLEN_P ( p )	595:6:16795:16810	168932	1	True				
ANR	169353	UnaryExpression	-- Z_STRLEN_P ( p )		168932	0					
ANR	169354	IncDec	--		168932	0					
ANR	169355	CallExpression	Z_STRLEN_P ( p )		168932	1					
ANR	169356	Callee	Z_STRLEN_P		168932	0					
ANR	169357	Identifier	Z_STRLEN_P		168932	0					
ANR	169358	ArgumentList	p		168932	1					
ANR	169359	Argument	p		168932	0					
ANR	169360	Identifier	p		168932	0					
ANR	169361	ElseStatement	else		168932	0					
ANR	169362	CompoundStatement		49:12:1625:1625	168932	0					
ANR	169363	ExpressionStatement	++ actual	597:6:16832:16840	168932	0	True				
ANR	169364	UnaryExpression	++ actual		168932	0					
ANR	169365	IncDec	++		168932	0					
ANR	169366	Identifier	actual		168932	1					
ANR	169367	ExpressionStatement	-- actual_len	599:5:16854:16866	168932	1	True				
ANR	169368	UnaryExpression	-- actual_len		168932	0					
ANR	169369	IncDec	--		168932	0					
ANR	169370	Identifier	actual_len		168932	1					
ANR	169371	IfStatement	if ( ( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) == 0 )		168932	5					
ANR	169372	Condition	( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) == 0	601:8:16882:16932	168932	0	True				
ANR	169373	EqualityExpression	( Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED ) == 0		168932	0		==			
ANR	169374	BitAndExpression	Z_CONST_FLAGS_P ( p ) & IS_CONSTANT_UNQUALIFIED		168932	0		&			
ANR	169375	CallExpression	Z_CONST_FLAGS_P ( p )		168932	0					
ANR	169376	Callee	Z_CONST_FLAGS_P		168932	0					
ANR	169377	Identifier	Z_CONST_FLAGS_P		168932	0					
ANR	169378	ArgumentList	p		168932	1					
ANR	169379	Argument	p		168932	0					
ANR	169380	Identifier	p		168932	0					
ANR	169381	Identifier	IS_CONSTANT_UNQUALIFIED		168932	1					
ANR	169382	PrimaryExpression	0		168932	1					
ANR	169383	CompoundStatement		54:61:1736:1736	168932	1					
ANR	169384	IfStatement	if ( ZSTR_VAL ( save ) [ 0 ] == '\\\\' )		168932	0					
ANR	169385	Condition	ZSTR_VAL ( save ) [ 0 ] == '\\\\'	602:9:16946:16970	168932	0	True				
ANR	169386	EqualityExpression	ZSTR_VAL ( save ) [ 0 ] == '\\\\'		168932	0		==			
ANR	169387	ArrayIndexing	ZSTR_VAL ( save ) [ 0 ]		168932	0					
ANR	169388	CallExpression	ZSTR_VAL ( save )		168932	0					
ANR	169389	Callee	ZSTR_VAL		168932	0					
ANR	169390	Identifier	ZSTR_VAL		168932	0					
ANR	169391	ArgumentList	save		168932	1					
ANR	169392	Argument	save		168932	0					
ANR	169393	Identifier	save		168932	0					
ANR	169394	PrimaryExpression	0		168932	1					
ANR	169395	PrimaryExpression	'\\\\'		168932	1					
ANR	169396	CompoundStatement		55:36:1774:1774	168932	1					
ANR	169397	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) + 1 )"	603:6:16981:17050	168932	0	True				
ANR	169398	CallExpression	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) + 1 )"		168932	0					
ANR	169399	Callee	zend_throw_error		168932	0					
ANR	169400	Identifier	zend_throw_error		168932	0					
ANR	169401	ArgumentList	NULL		168932	1					
ANR	169402	Argument	NULL		168932	0					
ANR	169403	Identifier	NULL		168932	0					
ANR	169404	Argument	"""Undefined constant '%s'"""		168932	1					
ANR	169405	PrimaryExpression	"""Undefined constant '%s'"""		168932	0					
ANR	169406	Argument	ZSTR_VAL ( save ) + 1		168932	2					
ANR	169407	AdditiveExpression	ZSTR_VAL ( save ) + 1		168932	0		+			
ANR	169408	CallExpression	ZSTR_VAL ( save )		168932	0					
ANR	169409	Callee	ZSTR_VAL		168932	0					
ANR	169410	Identifier	ZSTR_VAL		168932	0					
ANR	169411	ArgumentList	save		168932	1					
ANR	169412	Argument	save		168932	0					
ANR	169413	Identifier	save		168932	0					
ANR	169414	PrimaryExpression	1		168932	1					
ANR	169415	ElseStatement	else		168932	0					
ANR	169416	CompoundStatement		57:12:1865:1865	168932	0					
ANR	169417	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) )"	605:6:17072:17137	168932	0	True				
ANR	169418	CallExpression	"zend_throw_error ( NULL , ""Undefined constant '%s'"" , ZSTR_VAL ( save ) )"		168932	0					
ANR	169419	Callee	zend_throw_error		168932	0					
ANR	169420	Identifier	zend_throw_error		168932	0					
ANR	169421	ArgumentList	NULL		168932	1					
ANR	169422	Argument	NULL		168932	0					
ANR	169423	Identifier	NULL		168932	0					
ANR	169424	Argument	"""Undefined constant '%s'"""		168932	1					
ANR	169425	PrimaryExpression	"""Undefined constant '%s'"""		168932	0					
ANR	169426	Argument	ZSTR_VAL ( save )		168932	2					
ANR	169427	CallExpression	ZSTR_VAL ( save )		168932	0					
ANR	169428	Callee	ZSTR_VAL		168932	0					
ANR	169429	Identifier	ZSTR_VAL		168932	0					
ANR	169430	ArgumentList	save		168932	1					
ANR	169431	Argument	save		168932	0					
ANR	169432	Identifier	save		168932	0					
ANR	169433	IfStatement	if ( inline_change )		168932	1					
ANR	169434	Condition	inline_change	607:9:17155:17167	168932	0	True				
ANR	169435	Identifier	inline_change		168932	0					
ANR	169436	CompoundStatement		60:24:1971:1971	168932	1					
ANR	169437	ExpressionStatement	zend_string_release ( save )	608:6:17178:17203	168932	0	True				
ANR	169438	CallExpression	zend_string_release ( save )		168932	0					
ANR	169439	Callee	zend_string_release		168932	0					
ANR	169440	Identifier	zend_string_release		168932	0					
ANR	169441	ArgumentList	save		168932	1					
ANR	169442	Argument	save		168932	0					
ANR	169443	Identifier	save		168932	0					
ANR	169444	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	610:5:17217:17242	168932	2	True				
ANR	169445	CallExpression	RESET_CONSTANT_VISITED ( p )		168932	0					
ANR	169446	Callee	RESET_CONSTANT_VISITED		168932	0					
ANR	169447	Identifier	RESET_CONSTANT_VISITED		168932	0					
ANR	169448	ArgumentList	p		168932	1					
ANR	169449	Argument	p		168932	0					
ANR	169450	Identifier	p		168932	0					
ANR	169451	ReturnStatement	return FAILURE ;	611:5:17249:17263	168932	3	True				
ANR	169452	Identifier	FAILURE		168932	0					
ANR	169453	ElseStatement	else		168932	0					
ANR	169454	CompoundStatement		65:11:2077:2077	168932	0					
ANR	169455	ExpressionStatement	"zend_error ( E_NOTICE , ""Use of undefined constant %s - assumed '%s'"" , actual , actual )"	613:5:17283:17368	168932	0	True				
ANR	169456	CallExpression	"zend_error ( E_NOTICE , ""Use of undefined constant %s - assumed '%s'"" , actual , actual )"		168932	0					
ANR	169457	Callee	zend_error		168932	0					
ANR	169458	Identifier	zend_error		168932	0					
ANR	169459	ArgumentList	E_NOTICE		168932	1					
ANR	169460	Argument	E_NOTICE		168932	0					
ANR	169461	Identifier	E_NOTICE		168932	0					
ANR	169462	Argument	"""Use of undefined constant %s - assumed '%s'"""		168932	1					
ANR	169463	PrimaryExpression	"""Use of undefined constant %s - assumed '%s'"""		168932	0					
ANR	169464	Argument	actual		168932	2					
ANR	169465	Identifier	actual		168932	0					
ANR	169466	Argument	actual		168932	3					
ANR	169467	Identifier	actual		168932	0					
ANR	169468	IfStatement	if ( ! inline_change )		168932	1					
ANR	169469	Condition	! inline_change	614:9:17379:17392	168932	0	True				
ANR	169470	UnaryOperationExpression	! inline_change		168932	0					
ANR	169471	UnaryOperator	!		168932	0					
ANR	169472	Identifier	inline_change		168932	1					
ANR	169473	CompoundStatement		67:25:2196:2196	168932	1					
ANR	169474	ExpressionStatement	"ZVAL_STRINGL ( p , actual , actual_len )"	615:6:17403:17438	168932	0	True				
ANR	169475	CallExpression	"ZVAL_STRINGL ( p , actual , actual_len )"		168932	0					
ANR	169476	Callee	ZVAL_STRINGL		168932	0					
ANR	169477	Identifier	ZVAL_STRINGL		168932	0					
ANR	169478	ArgumentList	p		168932	1					
ANR	169479	Argument	p		168932	0					
ANR	169480	Identifier	p		168932	0					
ANR	169481	Argument	actual		168932	1					
ANR	169482	Identifier	actual		168932	0					
ANR	169483	Argument	actual_len		168932	2					
ANR	169484	Identifier	actual_len		168932	0					
ANR	169485	ElseStatement	else		168932	0					
ANR	169486	CompoundStatement		69:12:2253:2253	168932	0					
ANR	169487	ExpressionStatement	Z_TYPE_INFO_P ( p ) = Z_REFCOUNTED_P ( p ) ? IS_STRING_EX : IS_INTERNED_STRING_EX	617:6:17460:17542	168932	0	True				
ANR	169488	AssignmentExpression	Z_TYPE_INFO_P ( p ) = Z_REFCOUNTED_P ( p ) ? IS_STRING_EX : IS_INTERNED_STRING_EX		168932	0		=			
ANR	169489	CallExpression	Z_TYPE_INFO_P ( p )		168932	0					
ANR	169490	Callee	Z_TYPE_INFO_P		168932	0					
ANR	169491	Identifier	Z_TYPE_INFO_P		168932	0					
ANR	169492	ArgumentList	p		168932	1					
ANR	169493	Argument	p		168932	0					
ANR	169494	Identifier	p		168932	0					
ANR	169495	ConditionalExpression	Z_REFCOUNTED_P ( p ) ? IS_STRING_EX : IS_INTERNED_STRING_EX		168932	1					
ANR	169496	Condition	Z_REFCOUNTED_P ( p )		168932	0					
ANR	169497	CallExpression	Z_REFCOUNTED_P ( p )		168932	0					
ANR	169498	Callee	Z_REFCOUNTED_P		168932	0					
ANR	169499	Identifier	Z_REFCOUNTED_P		168932	0					
ANR	169500	ArgumentList	p		168932	1					
ANR	169501	Argument	p		168932	0					
ANR	169502	Identifier	p		168932	0					
ANR	169503	Identifier	IS_STRING_EX		168932	1					
ANR	169504	Identifier	IS_INTERNED_STRING_EX		168932	2					
ANR	169505	IfStatement	if ( save && ZSTR_VAL ( save ) != actual )		168932	1					
ANR	169506	Condition	save && ZSTR_VAL ( save ) != actual	619:10:17554:17585	168932	0	True				
ANR	169507	AndExpression	save && ZSTR_VAL ( save ) != actual		168932	0		&&			
ANR	169508	Identifier	save		168932	0					
ANR	169509	EqualityExpression	ZSTR_VAL ( save ) != actual		168932	1		!=			
ANR	169510	CallExpression	ZSTR_VAL ( save )		168932	0					
ANR	169511	Callee	ZSTR_VAL		168932	0					
ANR	169512	Identifier	ZSTR_VAL		168932	0					
ANR	169513	ArgumentList	save		168932	1					
ANR	169514	Argument	save		168932	0					
ANR	169515	Identifier	save		168932	0					
ANR	169516	Identifier	actual		168932	1					
ANR	169517	CompoundStatement		72:44:2389:2389	168932	1					
ANR	169518	ExpressionStatement	zend_string_release ( save )	620:7:17597:17622	168932	0	True				
ANR	169519	CallExpression	zend_string_release ( save )		168932	0					
ANR	169520	Callee	zend_string_release		168932	0					
ANR	169521	Identifier	zend_string_release		168932	0					
ANR	169522	ArgumentList	save		168932	1					
ANR	169523	Argument	save		168932	0					
ANR	169524	Identifier	save		168932	0					
ANR	169525	ElseStatement	else		168932	0					
ANR	169526	CompoundStatement		78:9:2460:2460	168932	0					
ANR	169527	IfStatement	if ( inline_change )		168932	0					
ANR	169528	Condition	inline_change	626:7:17668:17680	168932	0	True				
ANR	169529	Identifier	inline_change		168932	0					
ANR	169530	CompoundStatement		79:22:2484:2484	168932	1					
ANR	169531	ExpressionStatement	zend_string_release ( Z_STR_P ( p ) )	627:4:17689:17720	168932	0	True				
ANR	169532	CallExpression	zend_string_release ( Z_STR_P ( p ) )		168932	0					
ANR	169533	Callee	zend_string_release		168932	0					
ANR	169534	Identifier	zend_string_release		168932	0					
ANR	169535	ArgumentList	Z_STR_P ( p )		168932	1					
ANR	169536	Argument	Z_STR_P ( p )		168932	0					
ANR	169537	CallExpression	Z_STR_P ( p )		168932	0					
ANR	169538	Callee	Z_STR_P		168932	0					
ANR	169539	Identifier	Z_STR_P		168932	0					
ANR	169540	ArgumentList	p		168932	1					
ANR	169541	Argument	p		168932	0					
ANR	169542	Identifier	p		168932	0					
ANR	169543	ExpressionStatement	"ZVAL_COPY_VALUE ( p , const_value )"	629:3:17730:17761	168932	1	True				
ANR	169544	CallExpression	"ZVAL_COPY_VALUE ( p , const_value )"		168932	0					
ANR	169545	Callee	ZVAL_COPY_VALUE		168932	0					
ANR	169546	Identifier	ZVAL_COPY_VALUE		168932	0					
ANR	169547	ArgumentList	p		168932	1					
ANR	169548	Argument	p		168932	0					
ANR	169549	Identifier	p		168932	0					
ANR	169550	Argument	const_value		168932	1					
ANR	169551	Identifier	const_value		168932	0					
ANR	169552	IfStatement	if ( Z_OPT_CONSTANT_P ( p ) )		168932	2					
ANR	169553	Condition	Z_OPT_CONSTANT_P ( p )	630:7:17770:17788	168932	0	True				
ANR	169554	CallExpression	Z_OPT_CONSTANT_P ( p )		168932	0					
ANR	169555	Callee	Z_OPT_CONSTANT_P		168932	0					
ANR	169556	Identifier	Z_OPT_CONSTANT_P		168932	0					
ANR	169557	ArgumentList	p		168932	1					
ANR	169558	Argument	p		168932	0					
ANR	169559	Identifier	p		168932	0					
ANR	169560	CompoundStatement		83:28:2592:2592	168932	1					
ANR	169561	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS ) )"		168932	0					
ANR	169562	Condition	"UNEXPECTED ( zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS )"	631:8:17801:17858	168932	0	True				
ANR	169563	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS )"		168932	0					
ANR	169564	Callee	UNEXPECTED		168932	0					
ANR	169565	Identifier	UNEXPECTED		168932	0					
ANR	169566	ArgumentList	"zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS"		168932	1					
ANR	169567	Argument	"zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS"		168932	0					
ANR	169568	EqualityExpression	"zval_update_constant_ex ( p , 1 , NULL ) != SUCCESS"		168932	0		!=			
ANR	169569	CallExpression	"zval_update_constant_ex ( p , 1 , NULL )"		168932	0					
ANR	169570	Callee	zval_update_constant_ex		168932	0					
ANR	169571	Identifier	zval_update_constant_ex		168932	0					
ANR	169572	ArgumentList	p		168932	1					
ANR	169573	Argument	p		168932	0					
ANR	169574	Identifier	p		168932	0					
ANR	169575	Argument	1		168932	1					
ANR	169576	PrimaryExpression	1		168932	0					
ANR	169577	Argument	NULL		168932	2					
ANR	169578	Identifier	NULL		168932	0					
ANR	169579	Identifier	SUCCESS		168932	1					
ANR	169580	CompoundStatement		84:68:2662:2662	168932	1					
ANR	169581	ExpressionStatement	RESET_CONSTANT_VISITED ( p )	632:5:17868:17893	168932	0	True				
ANR	169582	CallExpression	RESET_CONSTANT_VISITED ( p )		168932	0					
ANR	169583	Callee	RESET_CONSTANT_VISITED		168932	0					
ANR	169584	Identifier	RESET_CONSTANT_VISITED		168932	0					
ANR	169585	ArgumentList	p		168932	1					
ANR	169586	Argument	p		168932	0					
ANR	169587	Identifier	p		168932	0					
ANR	169588	ReturnStatement	return FAILURE ;	633:5:17900:17914	168932	1	True				
ANR	169589	Identifier	FAILURE		168932	0					
ANR	169590	ExpressionStatement	zval_opt_copy_ctor ( p )	636:3:17930:17951	168932	3	True				
ANR	169591	CallExpression	zval_opt_copy_ctor ( p )		168932	0					
ANR	169592	Callee	zval_opt_copy_ctor		168932	0					
ANR	169593	Identifier	zval_opt_copy_ctor		168932	0					
ANR	169594	ArgumentList	p		168932	1					
ANR	169595	Argument	p		168932	0					
ANR	169596	Identifier	p		168932	0					
ANR	169597	ElseStatement	else		168932	0					
ANR	169598	IfStatement	if ( Z_TYPE_P ( p ) == IS_CONSTANT_AST )		168932	0					
ANR	169599	Condition	Z_TYPE_P ( p ) == IS_CONSTANT_AST	638:12:17969:17998	168932	0	True				
ANR	169600	EqualityExpression	Z_TYPE_P ( p ) == IS_CONSTANT_AST		168932	0		==			
ANR	169601	CallExpression	Z_TYPE_P ( p )		168932	0					
ANR	169602	Callee	Z_TYPE_P		168932	0					
ANR	169603	Identifier	Z_TYPE_P		168932	0					
ANR	169604	ArgumentList	p		168932	1					
ANR	169605	Argument	p		168932	0					
ANR	169606	Identifier	p		168932	0					
ANR	169607	Identifier	IS_CONSTANT_AST		168932	1					
ANR	169608	CompoundStatement		92:2:2806:2814	168932	1					
ANR	169609	IdentifierDeclStatement	zval tmp ;	639:2:18005:18013	168932	0	True				
ANR	169610	IdentifierDecl	tmp		168932	0					
ANR	169611	IdentifierDeclType	zval		168932	0					
ANR	169612	Identifier	tmp		168932	1					
ANR	169613	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS ) )"		168932	1					
ANR	169614	Condition	"UNEXPECTED ( zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS )"	641:6:18022:18089	168932	0	True				
ANR	169615	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS )"		168932	0					
ANR	169616	Callee	UNEXPECTED		168932	0					
ANR	169617	Identifier	UNEXPECTED		168932	0					
ANR	169618	ArgumentList	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS"		168932	1					
ANR	169619	Argument	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS"		168932	0					
ANR	169620	EqualityExpression	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope ) != SUCCESS"		168932	0		!=			
ANR	169621	CallExpression	"zend_ast_evaluate ( & tmp , Z_ASTVAL_P ( p ) , scope )"		168932	0					
ANR	169622	Callee	zend_ast_evaluate		168932	0					
ANR	169623	Identifier	zend_ast_evaluate		168932	0					
ANR	169624	ArgumentList	& tmp		168932	1					
ANR	169625	Argument	& tmp		168932	0					
ANR	169626	UnaryOperationExpression	& tmp		168932	0					
ANR	169627	UnaryOperator	&		168932	0					
ANR	169628	Identifier	tmp		168932	1					
ANR	169629	Argument	Z_ASTVAL_P ( p )		168932	1					
ANR	169630	CallExpression	Z_ASTVAL_P ( p )		168932	0					
ANR	169631	Callee	Z_ASTVAL_P		168932	0					
ANR	169632	Identifier	Z_ASTVAL_P		168932	0					
ANR	169633	ArgumentList	p		168932	1					
ANR	169634	Argument	p		168932	0					
ANR	169635	Identifier	p		168932	0					
ANR	169636	Argument	scope		168932	2					
ANR	169637	Identifier	scope		168932	0					
ANR	169638	Identifier	SUCCESS		168932	1					
ANR	169639	CompoundStatement		94:76:2893:2893	168932	1					
ANR	169640	ReturnStatement	return FAILURE ;	642:3:18097:18111	168932	0	True				
ANR	169641	Identifier	FAILURE		168932	0					
ANR	169642	IfStatement	if ( inline_change )		168932	2					
ANR	169643	Condition	inline_change	644:6:18123:18135	168932	0	True				
ANR	169644	Identifier	inline_change		168932	0					
ANR	169645	CompoundStatement		97:21:2939:2939	168932	1					
ANR	169646	ExpressionStatement	zval_ptr_dtor ( p )	645:3:18143:18159	168932	0	True				
ANR	169647	CallExpression	zval_ptr_dtor ( p )		168932	0					
ANR	169648	Callee	zval_ptr_dtor		168932	0					
ANR	169649	Identifier	zval_ptr_dtor		168932	0					
ANR	169650	ArgumentList	p		168932	1					
ANR	169651	Argument	p		168932	0					
ANR	169652	Identifier	p		168932	0					
ANR	169653	ExpressionStatement	"ZVAL_COPY_VALUE ( p , & tmp )"	647:2:18167:18191	168932	3	True				
ANR	169654	CallExpression	"ZVAL_COPY_VALUE ( p , & tmp )"		168932	0					
ANR	169655	Callee	ZVAL_COPY_VALUE		168932	0					
ANR	169656	Identifier	ZVAL_COPY_VALUE		168932	0					
ANR	169657	ArgumentList	p		168932	1					
ANR	169658	Argument	p		168932	0					
ANR	169659	Identifier	p		168932	0					
ANR	169660	Argument	& tmp		168932	1					
ANR	169661	UnaryOperationExpression	& tmp		168932	0					
ANR	169662	UnaryOperator	&		168932	0					
ANR	169663	Identifier	tmp		168932	1					
ANR	169664	ReturnStatement	return SUCCESS ;	649:1:18197:18211	168932	3	True				
ANR	169665	Identifier	SUCCESS		168932	0					
ANR	169666	ReturnType	~IS_VISITED_CONSTANT ZEND_API int		168932	1					
ANR	169667	Identifier	zval_update_constant_ex		168932	2					
ANR	169668	ParameterList	"zval * p , zend_bool inline_change , zend_class_entry * scope"		168932	3					
ANR	169669	Parameter	zval * p	547:37:15129:15135	168932	0	True				
ANR	169670	ParameterType	zval *		168932	0					
ANR	169671	Identifier	p		168932	1					
ANR	169672	Parameter	zend_bool inline_change	547:46:15138:15160	168932	1	True				
ANR	169673	ParameterType	zend_bool		168932	0					
ANR	169674	Identifier	inline_change		168932	1					
ANR	169675	Parameter	zend_class_entry * scope	547:71:15163:15185	168932	2	True				
ANR	169676	ParameterType	zend_class_entry *		168932	0					
ANR	169677	Identifier	scope		168932	1					
ANR	169678	CFGEntryNode	ENTRY		168932		True				
ANR	169679	CFGExitNode	EXIT		168932		True				
ANR	169680	Symbol	exception		168932						
ANR	169681	Symbol	current_execute_data		168932						
ANR	169682	Symbol	Z_TYPE_FLAGS_P		168932						
ANR	169683	Symbol	IS_TYPE_REFCOUNTED		168932						
ANR	169684	Symbol	Z_ASTVAL_P		168932						
ANR	169685	Symbol	zend_string_init		168932						
ANR	169686	Symbol	IS_CONSTANT_UNQUALIFIED		168932						
ANR	169687	Symbol	IS_STRING_EX		168932						
ANR	169688	Symbol	tmp		168932						
ANR	169689	Symbol	IS_INTERNED_STRING_EX		168932						
ANR	169690	Symbol	EG ( scope ) -> name		168932						
ANR	169691	Symbol	* ZSTR_VAL		168932						
ANR	169692	Symbol	IS_CONSTANT		168932						
ANR	169693	Symbol	actual		168932						
ANR	169694	Symbol	EG		168932						
ANR	169695	Symbol	NULL		168932						
ANR	169696	Symbol	inline_change		168932						
ANR	169697	Symbol	IS_TYPE_COPYABLE		168932						
ANR	169698	Symbol	E_NOTICE		168932						
ANR	169699	Symbol	zend_get_constant_ex		168932						
ANR	169700	Symbol	* actual		168932						
ANR	169701	Symbol	Z_TYPE_INFO_P		168932						
ANR	169702	Symbol	& tmp		168932						
ANR	169703	Symbol	Z_STR_P		168932						
ANR	169704	Symbol	Z_REFCOUNTED_P		168932						
ANR	169705	Symbol	Z_CONST_FLAGS_P		168932						
ANR	169706	Symbol	Z_OPT_CONSTANT_P		168932						
ANR	169707	Symbol	IS_CONSTANT_AST		168932						
ANR	169708	Symbol	save		168932						
ANR	169709	Symbol	IS_CONSTANT_CLASS		168932						
ANR	169710	Symbol	* EG		168932						
ANR	169711	Symbol	UNEXPECTED		168932						
ANR	169712	Symbol	actual_len		168932						
ANR	169713	Symbol	scope		168932						
ANR	169714	Symbol	Z_STRLEN_P		168932						
ANR	169715	Symbol	IS_CONSTANT_VISITED		168932						
ANR	169716	Symbol	zend_memrchr		168932						
ANR	169717	Symbol	SUCCESS		168932						
ANR	169718	Symbol	const_value		168932						
ANR	169719	Symbol	Z_TYPE_P		168932						
ANR	169720	Symbol	Z_STRVAL_P		168932						
ANR	169721	Symbol	FAILURE		168932						
ANR	169722	Symbol	ZSTR_VAL		168932						
ANR	169723	Symbol	p		168932						
ANR	169724	Symbol	s		168932						
ANR	169725	Symbol	zend_ast_evaluate		168932						
ANR	169726	Symbol	colon		168932						
ANR	169727	Symbol	slash		168932						
ANR	169728	Symbol	zval_update_constant_ex		168932						
ANR	169729	Function	zval_update_constant	653:0:18226:18365							
ANR	169730	FunctionDef	"zval_update_constant (zval * pp , zend_bool inline_change)"		169729	0					
ANR	169731	CompoundStatement		654:0:18305:18365	169729	0					
ANR	169732	ReturnStatement	"return zval_update_constant_ex ( pp , inline_change , NULL ) ;"	655:1:18308:18363	169729	0	True				
ANR	169733	CallExpression	"zval_update_constant_ex ( pp , inline_change , NULL )"		169729	0					
ANR	169734	Callee	zval_update_constant_ex		169729	0					
ANR	169735	Identifier	zval_update_constant_ex		169729	0					
ANR	169736	ArgumentList	pp		169729	1					
ANR	169737	Argument	pp		169729	0					
ANR	169738	Identifier	pp		169729	0					
ANR	169739	Argument	inline_change		169729	1					
ANR	169740	Identifier	inline_change		169729	0					
ANR	169741	Argument	NULL		169729	2					
ANR	169742	Identifier	NULL		169729	0					
ANR	169743	ReturnType	ZEND_API int		169729	1					
ANR	169744	Identifier	zval_update_constant		169729	2					
ANR	169745	ParameterList	"zval * pp , zend_bool inline_change"		169729	3					
ANR	169746	Parameter	zval * pp	653:34:18260:18267	169729	0	True				
ANR	169747	ParameterType	zval *		169729	0					
ANR	169748	Identifier	pp		169729	1					
ANR	169749	Parameter	zend_bool inline_change	653:44:18270:18292	169729	1	True				
ANR	169750	ParameterType	zend_bool		169729	0					
ANR	169751	Identifier	inline_change		169729	1					
ANR	169752	CFGEntryNode	ENTRY		169729		True				
ANR	169753	CFGExitNode	EXIT		169729		True				
ANR	169754	Symbol	pp		169729						
ANR	169755	Symbol	NULL		169729						
ANR	169756	Symbol	inline_change		169729						
ANR	169757	Symbol	zval_update_constant_ex		169729						
ANR	169758	Function	call_user_function	659:0:18378:18642							
ANR	169759	FunctionDef	"call_user_function (HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ])"		169758	0					
ANR	169760	CompoundStatement		660:0:18528:18642	169758	0					
ANR	169761	ReturnStatement	"return call_user_function_ex ( function_table , object , function_name , retval_ptr , param_count , params , 1 , NULL ) ;"	661:1:18531:18640	169758	0	True				
ANR	169762	CallExpression	"call_user_function_ex ( function_table , object , function_name , retval_ptr , param_count , params , 1 , NULL )"		169758	0					
ANR	169763	Callee	call_user_function_ex		169758	0					
ANR	169764	Identifier	call_user_function_ex		169758	0					
ANR	169765	ArgumentList	function_table		169758	1					
ANR	169766	Argument	function_table		169758	0					
ANR	169767	Identifier	function_table		169758	0					
ANR	169768	Argument	object		169758	1					
ANR	169769	Identifier	object		169758	0					
ANR	169770	Argument	function_name		169758	2					
ANR	169771	Identifier	function_name		169758	0					
ANR	169772	Argument	retval_ptr		169758	3					
ANR	169773	Identifier	retval_ptr		169758	0					
ANR	169774	Argument	param_count		169758	4					
ANR	169775	Identifier	param_count		169758	0					
ANR	169776	Argument	params		169758	5					
ANR	169777	Identifier	params		169758	0					
ANR	169778	Argument	1		169758	6					
ANR	169779	PrimaryExpression	1		169758	0					
ANR	169780	Argument	NULL		169758	7					
ANR	169781	Identifier	NULL		169758	0					
ANR	169782	ReturnType	int		169758	1					
ANR	169783	Identifier	call_user_function		169758	2					
ANR	169784	ParameterList	"HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ]"		169758	3					
ANR	169785	Parameter	HashTable * function_table	659:23:18401:18425	169758	0	True				
ANR	169786	ParameterType	HashTable *		169758	0					
ANR	169787	Identifier	function_table		169758	1					
ANR	169788	Parameter	zval * object	659:50:18428:18439	169758	1	True				
ANR	169789	ParameterType	zval *		169758	0					
ANR	169790	Identifier	object		169758	1					
ANR	169791	Parameter	zval * function_name	659:64:18442:18460	169758	2	True				
ANR	169792	ParameterType	zval *		169758	0					
ANR	169793	Identifier	function_name		169758	1					
ANR	169794	Parameter	zval * retval_ptr	659:85:18463:18478	169758	3	True				
ANR	169795	ParameterType	zval *		169758	0					
ANR	169796	Identifier	retval_ptr		169758	1					
ANR	169797	Parameter	uint32_t param_count	659:103:18481:18500	169758	4	True				
ANR	169798	ParameterType	uint32_t		169758	0					
ANR	169799	Identifier	param_count		169758	1					
ANR	169800	Parameter	zval params [ ]	659:125:18503:18515	169758	5	True				
ANR	169801	ParameterType	zval [ ]		169758	0					
ANR	169802	Identifier	params		169758	1					
ANR	169803	CFGEntryNode	ENTRY		169758		True				
ANR	169804	CFGExitNode	EXIT		169758		True				
ANR	169805	Symbol	NULL		169758						
ANR	169806	Symbol	param_count		169758						
ANR	169807	Symbol	function_name		169758						
ANR	169808	Symbol	function_table		169758						
ANR	169809	Symbol	params		169758						
ANR	169810	Symbol	call_user_function_ex		169758						
ANR	169811	Symbol	object		169758						
ANR	169812	Symbol	retval_ptr		169758						
ANR	169813	Function	call_user_function_ex	665:0:18655:19244							
ANR	169814	FunctionDef	"call_user_function_ex (HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] , int no_separation , zend_array * symbol_table)"		169813	0					
ANR	169815	CompoundStatement		666:0:18853:19244	169813	0					
ANR	169816	IdentifierDeclStatement	zend_fcall_info fci ;	667:1:18856:18875	169813	0	True				
ANR	169817	IdentifierDecl	fci		169813	0					
ANR	169818	IdentifierDeclType	zend_fcall_info		169813	0					
ANR	169819	Identifier	fci		169813	1					
ANR	169820	ExpressionStatement	fci . size = sizeof ( fci )	669:1:18879:18901	169813	1	True				
ANR	169821	AssignmentExpression	fci . size = sizeof ( fci )		169813	0		=			
ANR	169822	MemberAccess	fci . size		169813	0					
ANR	169823	Identifier	fci		169813	0					
ANR	169824	Identifier	size		169813	1					
ANR	169825	SizeofExpression	sizeof ( fci )		169813	1					
ANR	169826	Sizeof	sizeof		169813	0					
ANR	169827	SizeofOperand	fci		169813	1					
ANR	169828	ExpressionStatement	fci . function_table = function_table	670:1:18904:18939	169813	2	True				
ANR	169829	AssignmentExpression	fci . function_table = function_table		169813	0		=			
ANR	169830	MemberAccess	fci . function_table		169813	0					
ANR	169831	Identifier	fci		169813	0					
ANR	169832	Identifier	function_table		169813	1					
ANR	169833	Identifier	function_table		169813	1					
ANR	169834	ExpressionStatement	fci . object = object ? Z_OBJ_P ( object ) : NULL	671:1:18942:18986	169813	3	True				
ANR	169835	AssignmentExpression	fci . object = object ? Z_OBJ_P ( object ) : NULL		169813	0		=			
ANR	169836	MemberAccess	fci . object		169813	0					
ANR	169837	Identifier	fci		169813	0					
ANR	169838	Identifier	object		169813	1					
ANR	169839	ConditionalExpression	object ? Z_OBJ_P ( object ) : NULL		169813	1					
ANR	169840	Condition	object		169813	0					
ANR	169841	Identifier	object		169813	0					
ANR	169842	CallExpression	Z_OBJ_P ( object )		169813	1					
ANR	169843	Callee	Z_OBJ_P		169813	0					
ANR	169844	Identifier	Z_OBJ_P		169813	0					
ANR	169845	ArgumentList	object		169813	1					
ANR	169846	Argument	object		169813	0					
ANR	169847	Identifier	object		169813	0					
ANR	169848	Identifier	NULL		169813	2					
ANR	169849	ExpressionStatement	"ZVAL_COPY_VALUE ( & fci . function_name , function_name )"	672:1:18989:19039	169813	4	True				
ANR	169850	CallExpression	"ZVAL_COPY_VALUE ( & fci . function_name , function_name )"		169813	0					
ANR	169851	Callee	ZVAL_COPY_VALUE		169813	0					
ANR	169852	Identifier	ZVAL_COPY_VALUE		169813	0					
ANR	169853	ArgumentList	& fci . function_name		169813	1					
ANR	169854	Argument	& fci . function_name		169813	0					
ANR	169855	UnaryOperationExpression	& fci . function_name		169813	0					
ANR	169856	UnaryOperator	&		169813	0					
ANR	169857	MemberAccess	fci . function_name		169813	1					
ANR	169858	Identifier	fci		169813	0					
ANR	169859	Identifier	function_name		169813	1					
ANR	169860	Argument	function_name		169813	1					
ANR	169861	Identifier	function_name		169813	0					
ANR	169862	ExpressionStatement	fci . retval = retval_ptr	673:1:19042:19065	169813	5	True				
ANR	169863	AssignmentExpression	fci . retval = retval_ptr		169813	0		=			
ANR	169864	MemberAccess	fci . retval		169813	0					
ANR	169865	Identifier	fci		169813	0					
ANR	169866	Identifier	retval		169813	1					
ANR	169867	Identifier	retval_ptr		169813	1					
ANR	169868	ExpressionStatement	fci . param_count = param_count	674:1:19068:19097	169813	6	True				
ANR	169869	AssignmentExpression	fci . param_count = param_count		169813	0		=			
ANR	169870	MemberAccess	fci . param_count		169813	0					
ANR	169871	Identifier	fci		169813	0					
ANR	169872	Identifier	param_count		169813	1					
ANR	169873	Identifier	param_count		169813	1					
ANR	169874	ExpressionStatement	fci . params = params	675:1:19100:19119	169813	7	True				
ANR	169875	AssignmentExpression	fci . params = params		169813	0		=			
ANR	169876	MemberAccess	fci . params		169813	0					
ANR	169877	Identifier	fci		169813	0					
ANR	169878	Identifier	params		169813	1					
ANR	169879	Identifier	params		169813	1					
ANR	169880	ExpressionStatement	fci . no_separation = ( zend_bool ) no_separation	676:1:19122:19167	169813	8	True				
ANR	169881	AssignmentExpression	fci . no_separation = ( zend_bool ) no_separation		169813	0		=			
ANR	169882	MemberAccess	fci . no_separation		169813	0					
ANR	169883	Identifier	fci		169813	0					
ANR	169884	Identifier	no_separation		169813	1					
ANR	169885	CastExpression	( zend_bool ) no_separation		169813	1					
ANR	169886	CastTarget	zend_bool		169813	0					
ANR	169887	Identifier	no_separation		169813	1					
ANR	169888	ExpressionStatement	fci . symbol_table = symbol_table	677:1:19170:19201	169813	9	True				
ANR	169889	AssignmentExpression	fci . symbol_table = symbol_table		169813	0		=			
ANR	169890	MemberAccess	fci . symbol_table		169813	0					
ANR	169891	Identifier	fci		169813	0					
ANR	169892	Identifier	symbol_table		169813	1					
ANR	169893	Identifier	symbol_table		169813	1					
ANR	169894	ReturnStatement	"return zend_call_function ( & fci , NULL ) ;"	679:1:19205:19242	169813	10	True				
ANR	169895	CallExpression	"zend_call_function ( & fci , NULL )"		169813	0					
ANR	169896	Callee	zend_call_function		169813	0					
ANR	169897	Identifier	zend_call_function		169813	0					
ANR	169898	ArgumentList	& fci		169813	1					
ANR	169899	Argument	& fci		169813	0					
ANR	169900	UnaryOperationExpression	& fci		169813	0					
ANR	169901	UnaryOperator	&		169813	0					
ANR	169902	Identifier	fci		169813	1					
ANR	169903	Argument	NULL		169813	1					
ANR	169904	Identifier	NULL		169813	0					
ANR	169905	ReturnType	int		169813	1					
ANR	169906	Identifier	call_user_function_ex		169813	2					
ANR	169907	ParameterList	"HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] , int no_separation , zend_array * symbol_table"		169813	3					
ANR	169908	Parameter	HashTable * function_table	665:26:18681:18705	169813	0	True				
ANR	169909	ParameterType	HashTable *		169813	0					
ANR	169910	Identifier	function_table		169813	1					
ANR	169911	Parameter	zval * object	665:53:18708:18719	169813	1	True				
ANR	169912	ParameterType	zval *		169813	0					
ANR	169913	Identifier	object		169813	1					
ANR	169914	Parameter	zval * function_name	665:67:18722:18740	169813	2	True				
ANR	169915	ParameterType	zval *		169813	0					
ANR	169916	Identifier	function_name		169813	1					
ANR	169917	Parameter	zval * retval_ptr	665:88:18743:18758	169813	3	True				
ANR	169918	ParameterType	zval *		169813	0					
ANR	169919	Identifier	retval_ptr		169813	1					
ANR	169920	Parameter	uint32_t param_count	665:106:18761:18780	169813	4	True				
ANR	169921	ParameterType	uint32_t		169813	0					
ANR	169922	Identifier	param_count		169813	1					
ANR	169923	Parameter	zval params [ ]	665:128:18783:18795	169813	5	True				
ANR	169924	ParameterType	zval [ ]		169813	0					
ANR	169925	Identifier	params		169813	1					
ANR	169926	Parameter	int no_separation	665:143:18798:18814	169813	6	True				
ANR	169927	ParameterType	int		169813	0					
ANR	169928	Identifier	no_separation		169813	1					
ANR	169929	Parameter	zend_array * symbol_table	665:162:18817:18840	169813	7	True				
ANR	169930	ParameterType	zend_array *		169813	0					
ANR	169931	Identifier	symbol_table		169813	1					
ANR	169932	CFGEntryNode	ENTRY		169813		True				
ANR	169933	CFGExitNode	EXIT		169813		True				
ANR	169934	Symbol	no_separation		169813						
ANR	169935	Symbol	fci . object		169813						
ANR	169936	Symbol	fci . function_table		169813						
ANR	169937	Symbol	& fci . function_name		169813						
ANR	169938	Symbol	fci . params		169813						
ANR	169939	Symbol	NULL		169813						
ANR	169940	Symbol	param_count		169813						
ANR	169941	Symbol	Z_OBJ_P		169813						
ANR	169942	Symbol	symbol_table		169813						
ANR	169943	Symbol	params		169813						
ANR	169944	Symbol	fci		169813						
ANR	169945	Symbol	retval_ptr		169813						
ANR	169946	Symbol	fci . param_count		169813						
ANR	169947	Symbol	fci . size		169813						
ANR	169948	Symbol	fci . retval		169813						
ANR	169949	Symbol	& fci		169813						
ANR	169950	Symbol	function_name		169813						
ANR	169951	Symbol	fci . symbol_table		169813						
ANR	169952	Symbol	zend_call_function		169813						
ANR	169953	Symbol	function_table		169813						
ANR	169954	Symbol	fci . no_separation		169813						
ANR	169955	Symbol	object		169813						
ANR	169956	Function	zend_call_function	683:0:19257:27345							
ANR	169957	FunctionDef	"zend_call_function (zend_fcall_info * fci , zend_fcall_info_cache * fci_cache)"		169956	0					
ANR	169958	CompoundStatement		684:0:19346:27345	169956	0					
ANR	169959	IdentifierDeclStatement	uint32_t i ;	685:1:19349:19359	169956	0	True				
ANR	169960	IdentifierDecl	i		169956	0					
ANR	169961	IdentifierDeclType	uint32_t		169956	0					
ANR	169962	Identifier	i		169956	1					
ANR	169963	IdentifierDeclStatement	zend_class_entry * calling_scope = NULL ;	686:1:19362:19400	169956	1	True				
ANR	169964	IdentifierDecl	* calling_scope = NULL		169956	0					
ANR	169965	IdentifierDeclType	zend_class_entry *		169956	0					
ANR	169966	Identifier	calling_scope		169956	1					
ANR	169967	AssignmentExpression	* calling_scope = NULL		169956	2		=			
ANR	169968	Identifier	NULL		169956	0					
ANR	169969	Identifier	NULL		169956	1					
ANR	169970	IdentifierDeclStatement	"zend_execute_data * call , dummy_execute_data ;"	687:1:19403:19446	169956	2	True				
ANR	169971	IdentifierDecl	* call		169956	0					
ANR	169972	IdentifierDeclType	zend_execute_data *		169956	0					
ANR	169973	Identifier	call		169956	1					
ANR	169974	IdentifierDecl	dummy_execute_data		169956	1					
ANR	169975	IdentifierDeclType	zend_execute_data		169956	0					
ANR	169976	Identifier	dummy_execute_data		169956	1					
ANR	169977	IdentifierDeclStatement	zend_fcall_info_cache fci_cache_local ;	688:1:19449:19486	169956	3	True				
ANR	169978	IdentifierDecl	fci_cache_local		169956	0					
ANR	169979	IdentifierDeclType	zend_fcall_info_cache		169956	0					
ANR	169980	Identifier	fci_cache_local		169956	1					
ANR	169981	IdentifierDeclStatement	zend_function * func ;	689:1:19489:19508	169956	4	True				
ANR	169982	IdentifierDecl	* func		169956	0					
ANR	169983	IdentifierDeclType	zend_function *		169956	0					
ANR	169984	Identifier	func		169956	1					
ANR	169985	IdentifierDeclStatement	zend_class_entry * orig_scope ;	690:1:19511:19539	169956	5	True				
ANR	169986	IdentifierDecl	* orig_scope		169956	0					
ANR	169987	IdentifierDeclType	zend_class_entry *		169956	0					
ANR	169988	Identifier	orig_scope		169956	1					
ANR	169989	ExpressionStatement	ZVAL_UNDEF ( fci -> retval )	692:1:19543:19566	169956	6	True				
ANR	169990	CallExpression	ZVAL_UNDEF ( fci -> retval )		169956	0					
ANR	169991	Callee	ZVAL_UNDEF		169956	0					
ANR	169992	Identifier	ZVAL_UNDEF		169956	0					
ANR	169993	ArgumentList	fci -> retval		169956	1					
ANR	169994	Argument	fci -> retval		169956	0					
ANR	169995	PtrMemberAccess	fci -> retval		169956	0					
ANR	169996	Identifier	fci		169956	0					
ANR	169997	Identifier	retval		169956	1					
ANR	169998	IfStatement	if ( ! EG ( active ) )		169956	7					
ANR	169999	Condition	! EG ( active )	694:5:19574:19584	169956	0	True				
ANR	170000	UnaryOperationExpression	! EG ( active )		169956	0					
ANR	170001	UnaryOperator	!		169956	0					
ANR	170002	CallExpression	EG ( active )		169956	1					
ANR	170003	Callee	EG		169956	0					
ANR	170004	Identifier	EG		169956	0					
ANR	170005	ArgumentList	active		169956	1					
ANR	170006	Argument	active		169956	0					
ANR	170007	Identifier	active		169956	0					
ANR	170008	CompoundStatement		11:18:240:240	169956	1					
ANR	170009	ReturnStatement	return FAILURE ;	695:2:19591:19605	169956	0	True				
ANR	170010	Identifier	FAILURE		169956	0					
ANR	170011	IfStatement	if ( EG ( exception ) )		169956	8					
ANR	170012	Condition	EG ( exception )	698:5:19651:19663	169956	0	True				
ANR	170013	CallExpression	EG ( exception )		169956	0					
ANR	170014	Callee	EG		169956	0					
ANR	170015	Identifier	EG		169956	0					
ANR	170016	ArgumentList	exception		169956	1					
ANR	170017	Argument	exception		169956	0					
ANR	170018	Identifier	exception		169956	0					
ANR	170019	CompoundStatement		15:20:319:319	169956	1					
ANR	170020	ReturnStatement	return FAILURE ;	699:2:19670:19684	169956	0	True				
ANR	170021	Identifier	FAILURE		169956	0					
ANR	170022	SwitchStatement	switch ( fci -> size )		169956	9					
ANR	170023	Condition	fci -> size	702:9:19755:19763	169956	0	True				
ANR	170024	PtrMemberAccess	fci -> size		169956	0					
ANR	170025	Identifier	fci		169956	0					
ANR	170026	Identifier	size		169956	1					
ANR	170027	CompoundStatement		19:20:419:419	169956	1					
ANR	170028	Statement	case	703:2:19770:19773	169956	0	True				
ANR	170029	Statement	sizeof	703:7:19775:19780	169956	1	True				
ANR	170030	Statement	(	703:13:19781:19781	169956	2	True				
ANR	170031	Statement	zend_fcall_info	703:14:19782:19796	169956	3	True				
ANR	170032	Statement	)	703:29:19797:19797	169956	4	True				
ANR	170033	Statement	:	703:30:19798:19798	169956	5	True				
ANR	170034	BreakStatement	break ;	704:3:19803:19808	169956	6	True				
ANR	170035	Label	default :	705:2:19842:19849	169956	7	True				
ANR	170036	Identifier	default		169956	0					
ANR	170037	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Corrupted fcall_info provided to zend_call_function()"" )"	706:3:19854:19944	169956	8	True				
ANR	170038	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Corrupted fcall_info provided to zend_call_function()"" )"		169956	0					
ANR	170039	Callee	zend_error_noreturn		169956	0					
ANR	170040	Identifier	zend_error_noreturn		169956	0					
ANR	170041	ArgumentList	E_CORE_ERROR		169956	1					
ANR	170042	Argument	E_CORE_ERROR		169956	0					
ANR	170043	Identifier	E_CORE_ERROR		169956	0					
ANR	170044	Argument	"""Corrupted fcall_info provided to zend_call_function()"""		169956	1					
ANR	170045	PrimaryExpression	"""Corrupted fcall_info provided to zend_call_function()"""		169956	0					
ANR	170046	BreakStatement	break ;	707:3:19949:19954	169956	9	True				
ANR	170047	ExpressionStatement	orig_scope = EG ( scope )	710:1:19961:19983	169956	10	True				
ANR	170048	AssignmentExpression	orig_scope = EG ( scope )		169956	0		=			
ANR	170049	Identifier	orig_scope		169956	0					
ANR	170050	CallExpression	EG ( scope )		169956	1					
ANR	170051	Callee	EG		169956	0					
ANR	170052	Identifier	EG		169956	0					
ANR	170053	ArgumentList	scope		169956	1					
ANR	170054	Argument	scope		169956	0					
ANR	170055	Identifier	scope		169956	0					
ANR	170056	IfStatement	if ( ! EG ( current_execute_data ) )		169956	11					
ANR	170057	Condition	! EG ( current_execute_data )	713:5:20022:20046	169956	0	True				
ANR	170058	UnaryOperationExpression	! EG ( current_execute_data )		169956	0					
ANR	170059	UnaryOperator	!		169956	0					
ANR	170060	CallExpression	EG ( current_execute_data )		169956	1					
ANR	170061	Callee	EG		169956	0					
ANR	170062	Identifier	EG		169956	0					
ANR	170063	ArgumentList	current_execute_data		169956	1					
ANR	170064	Argument	current_execute_data		169956	0					
ANR	170065	Identifier	current_execute_data		169956	0					
ANR	170066	CompoundStatement		30:32:702:702	169956	1					
ANR	170067	ExpressionStatement	"memset ( & dummy_execute_data , 0 , sizeof ( zend_execute_data ) )"	718:2:20231:20288	169956	0	True				
ANR	170068	CallExpression	"memset ( & dummy_execute_data , 0 , sizeof ( zend_execute_data ) )"		169956	0					
ANR	170069	Callee	memset		169956	0					
ANR	170070	Identifier	memset		169956	0					
ANR	170071	ArgumentList	& dummy_execute_data		169956	1					
ANR	170072	Argument	& dummy_execute_data		169956	0					
ANR	170073	UnaryOperationExpression	& dummy_execute_data		169956	0					
ANR	170074	UnaryOperator	&		169956	0					
ANR	170075	Identifier	dummy_execute_data		169956	1					
ANR	170076	Argument	0		169956	1					
ANR	170077	PrimaryExpression	0		169956	0					
ANR	170078	Argument	sizeof ( zend_execute_data )		169956	2					
ANR	170079	SizeofExpression	sizeof ( zend_execute_data )		169956	0					
ANR	170080	Sizeof	sizeof		169956	0					
ANR	170081	SizeofOperand	zend_execute_data		169956	1					
ANR	170082	ExpressionStatement	EG ( current_execute_data ) = & dummy_execute_data	719:2:20292:20338	169956	1	True				
ANR	170083	AssignmentExpression	EG ( current_execute_data ) = & dummy_execute_data		169956	0		=			
ANR	170084	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170085	Callee	EG		169956	0					
ANR	170086	Identifier	EG		169956	0					
ANR	170087	ArgumentList	current_execute_data		169956	1					
ANR	170088	Argument	current_execute_data		169956	0					
ANR	170089	Identifier	current_execute_data		169956	0					
ANR	170090	UnaryOperationExpression	& dummy_execute_data		169956	1					
ANR	170091	UnaryOperator	&		169956	0					
ANR	170092	Identifier	dummy_execute_data		169956	1					
ANR	170093	ElseStatement	else		169956	0					
ANR	170094	IfStatement	if ( EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME )		169956	0					
ANR	170095	Condition	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME	720:12:20352:20756	169956	0	True				
ANR	170096	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		169956	0		&&			
ANR	170097	PtrMemberAccess	EG ( current_execute_data ) -> func		169956	0					
ANR	170098	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170099	Callee	EG		169956	0					
ANR	170100	Identifier	EG		169956	0					
ANR	170101	ArgumentList	current_execute_data		169956	1					
ANR	170102	Argument	current_execute_data		169956	0					
ANR	170103	Identifier	current_execute_data		169956	0					
ANR	170104	Identifier	func		169956	1					
ANR	170105	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		169956	1		&&			
ANR	170106	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		169956	0					
ANR	170107	Callee	ZEND_USER_CODE		169956	0					
ANR	170108	Identifier	ZEND_USER_CODE		169956	0					
ANR	170109	ArgumentList	EG ( current_execute_data ) -> func -> common . type		169956	1					
ANR	170110	Argument	EG ( current_execute_data ) -> func -> common . type		169956	0					
ANR	170111	MemberAccess	EG ( current_execute_data ) -> func -> common . type		169956	0					
ANR	170112	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		169956	0					
ANR	170113	PtrMemberAccess	EG ( current_execute_data ) -> func		169956	0					
ANR	170114	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170115	Callee	EG		169956	0					
ANR	170116	Identifier	EG		169956	0					
ANR	170117	ArgumentList	current_execute_data		169956	1					
ANR	170118	Argument	current_execute_data		169956	0					
ANR	170119	Identifier	current_execute_data		169956	0					
ANR	170120	Identifier	func		169956	1					
ANR	170121	Identifier	common		169956	1					
ANR	170122	Identifier	type		169956	1					
ANR	170123	AndExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		169956	1		&&			
ANR	170124	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL		169956	0		!=			
ANR	170125	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		169956	0					
ANR	170126	PtrMemberAccess	EG ( current_execute_data ) -> opline		169956	0					
ANR	170127	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170128	Callee	EG		169956	0					
ANR	170129	Identifier	EG		169956	0					
ANR	170130	ArgumentList	current_execute_data		169956	1					
ANR	170131	Argument	current_execute_data		169956	0					
ANR	170132	Identifier	current_execute_data		169956	0					
ANR	170133	Identifier	opline		169956	1					
ANR	170134	Identifier	opcode		169956	1					
ANR	170135	Identifier	ZEND_DO_FCALL		169956	1					
ANR	170136	AndExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		169956	1		&&			
ANR	170137	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_ICALL		169956	0		!=			
ANR	170138	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		169956	0					
ANR	170139	PtrMemberAccess	EG ( current_execute_data ) -> opline		169956	0					
ANR	170140	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170141	Callee	EG		169956	0					
ANR	170142	Identifier	EG		169956	0					
ANR	170143	ArgumentList	current_execute_data		169956	1					
ANR	170144	Argument	current_execute_data		169956	0					
ANR	170145	Identifier	current_execute_data		169956	0					
ANR	170146	Identifier	opline		169956	1					
ANR	170147	Identifier	opcode		169956	1					
ANR	170148	Identifier	ZEND_DO_ICALL		169956	1					
ANR	170149	AndExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL && EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		169956	1		&&			
ANR	170150	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_UCALL		169956	0		!=			
ANR	170151	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		169956	0					
ANR	170152	PtrMemberAccess	EG ( current_execute_data ) -> opline		169956	0					
ANR	170153	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170154	Callee	EG		169956	0					
ANR	170155	Identifier	EG		169956	0					
ANR	170156	ArgumentList	current_execute_data		169956	1					
ANR	170157	Argument	current_execute_data		169956	0					
ANR	170158	Identifier	current_execute_data		169956	0					
ANR	170159	Identifier	opline		169956	1					
ANR	170160	Identifier	opcode		169956	1					
ANR	170161	Identifier	ZEND_DO_UCALL		169956	1					
ANR	170162	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		169956	1		!=			
ANR	170163	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		169956	0					
ANR	170164	PtrMemberAccess	EG ( current_execute_data ) -> opline		169956	0					
ANR	170165	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170166	Callee	EG		169956	0					
ANR	170167	Identifier	EG		169956	0					
ANR	170168	ArgumentList	current_execute_data		169956	1					
ANR	170169	Argument	current_execute_data		169956	0					
ANR	170170	Identifier	current_execute_data		169956	0					
ANR	170171	Identifier	opline		169956	1					
ANR	170172	Identifier	opcode		169956	1					
ANR	170173	Identifier	ZEND_DO_FCALL_BY_NAME		169956	1					
ANR	170174	CompoundStatement		42:79:1412:1412	169956	1					
ANR	170175	ExpressionStatement	dummy_execute_data = * EG ( current_execute_data )	727:2:20823:20869	169956	0	True				
ANR	170176	AssignmentExpression	dummy_execute_data = * EG ( current_execute_data )		169956	0		=			
ANR	170177	Identifier	dummy_execute_data		169956	0					
ANR	170178	UnaryOperationExpression	* EG ( current_execute_data )		169956	1					
ANR	170179	UnaryOperator	*		169956	0					
ANR	170180	CallExpression	EG ( current_execute_data )		169956	1					
ANR	170181	Callee	EG		169956	0					
ANR	170182	Identifier	EG		169956	0					
ANR	170183	ArgumentList	current_execute_data		169956	1					
ANR	170184	Argument	current_execute_data		169956	0					
ANR	170185	Identifier	current_execute_data		169956	0					
ANR	170186	ExpressionStatement	dummy_execute_data . prev_execute_data = EG ( current_execute_data )	728:2:20873:20936	169956	1	True				
ANR	170187	AssignmentExpression	dummy_execute_data . prev_execute_data = EG ( current_execute_data )		169956	0		=			
ANR	170188	MemberAccess	dummy_execute_data . prev_execute_data		169956	0					
ANR	170189	Identifier	dummy_execute_data		169956	0					
ANR	170190	Identifier	prev_execute_data		169956	1					
ANR	170191	CallExpression	EG ( current_execute_data )		169956	1					
ANR	170192	Callee	EG		169956	0					
ANR	170193	Identifier	EG		169956	0					
ANR	170194	ArgumentList	current_execute_data		169956	1					
ANR	170195	Argument	current_execute_data		169956	0					
ANR	170196	Identifier	current_execute_data		169956	0					
ANR	170197	ExpressionStatement	dummy_execute_data . call = NULL	729:2:20940:20970	169956	2	True				
ANR	170198	AssignmentExpression	dummy_execute_data . call = NULL		169956	0		=			
ANR	170199	MemberAccess	dummy_execute_data . call		169956	0					
ANR	170200	Identifier	dummy_execute_data		169956	0					
ANR	170201	Identifier	call		169956	1					
ANR	170202	Identifier	NULL		169956	1					
ANR	170203	ExpressionStatement	dummy_execute_data . opline = NULL	730:2:20974:21006	169956	3	True				
ANR	170204	AssignmentExpression	dummy_execute_data . opline = NULL		169956	0		=			
ANR	170205	MemberAccess	dummy_execute_data . opline		169956	0					
ANR	170206	Identifier	dummy_execute_data		169956	0					
ANR	170207	Identifier	opline		169956	1					
ANR	170208	Identifier	NULL		169956	1					
ANR	170209	ExpressionStatement	dummy_execute_data . func = NULL	731:2:21010:21040	169956	4	True				
ANR	170210	AssignmentExpression	dummy_execute_data . func = NULL		169956	0		=			
ANR	170211	MemberAccess	dummy_execute_data . func		169956	0					
ANR	170212	Identifier	dummy_execute_data		169956	0					
ANR	170213	Identifier	func		169956	1					
ANR	170214	Identifier	NULL		169956	1					
ANR	170215	ExpressionStatement	EG ( current_execute_data ) = & dummy_execute_data	732:2:21044:21090	169956	5	True				
ANR	170216	AssignmentExpression	EG ( current_execute_data ) = & dummy_execute_data		169956	0		=			
ANR	170217	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170218	Callee	EG		169956	0					
ANR	170219	Identifier	EG		169956	0					
ANR	170220	ArgumentList	current_execute_data		169956	1					
ANR	170221	Argument	current_execute_data		169956	0					
ANR	170222	Identifier	current_execute_data		169956	0					
ANR	170223	UnaryOperationExpression	& dummy_execute_data		169956	1					
ANR	170224	UnaryOperator	&		169956	0					
ANR	170225	Identifier	dummy_execute_data		169956	1					
ANR	170226	IfStatement	if ( ! fci_cache || ! fci_cache -> initialized )		169956	12					
ANR	170227	Condition	! fci_cache || ! fci_cache -> initialized	735:5:21101:21137	169956	0	True				
ANR	170228	OrExpression	! fci_cache || ! fci_cache -> initialized		169956	0		||			
ANR	170229	UnaryOperationExpression	! fci_cache		169956	0					
ANR	170230	UnaryOperator	!		169956	0					
ANR	170231	Identifier	fci_cache		169956	1					
ANR	170232	UnaryOperationExpression	! fci_cache -> initialized		169956	1					
ANR	170233	UnaryOperator	!		169956	0					
ANR	170234	PtrMemberAccess	fci_cache -> initialized		169956	1					
ANR	170235	Identifier	fci_cache		169956	0					
ANR	170236	Identifier	initialized		169956	1					
ANR	170237	CompoundStatement		54:2:1827:1845	169956	1					
ANR	170238	IdentifierDeclStatement	zend_string * callable_name ;	736:2:21144:21170	169956	0	True				
ANR	170239	IdentifierDecl	* callable_name		169956	0					
ANR	170240	IdentifierDeclType	zend_string *		169956	0					
ANR	170241	Identifier	callable_name		169956	1					
ANR	170242	IdentifierDeclStatement	char * error = NULL ;	737:2:21174:21192	169956	1	True				
ANR	170243	IdentifierDecl	* error = NULL		169956	0					
ANR	170244	IdentifierDeclType	char *		169956	0					
ANR	170245	Identifier	error		169956	1					
ANR	170246	AssignmentExpression	* error = NULL		169956	2		=			
ANR	170247	Identifier	NULL		169956	0					
ANR	170248	Identifier	NULL		169956	1					
ANR	170249	IfStatement	if ( ! fci_cache )		169956	2					
ANR	170250	Condition	! fci_cache	739:6:21201:21210	169956	0	True				
ANR	170251	UnaryOperationExpression	! fci_cache		169956	0					
ANR	170252	UnaryOperator	!		169956	0					
ANR	170253	Identifier	fci_cache		169956	1					
ANR	170254	CompoundStatement		56:18:1866:1866	169956	1					
ANR	170255	ExpressionStatement	fci_cache = & fci_cache_local	740:3:21218:21246	169956	0	True				
ANR	170256	AssignmentExpression	fci_cache = & fci_cache_local		169956	0		=			
ANR	170257	Identifier	fci_cache		169956	0					
ANR	170258	UnaryOperationExpression	& fci_cache_local		169956	1					
ANR	170259	UnaryOperator	&		169956	0					
ANR	170260	Identifier	fci_cache_local		169956	1					
ANR	170261	IfStatement	"if ( ! zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error ) )"		169956	3					
ANR	170262	Condition	"! zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error )"	743:6:21259:21373	169956	0	True				
ANR	170263	UnaryOperationExpression	"! zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error )"		169956	0					
ANR	170264	UnaryOperator	!		169956	0					
ANR	170265	CallExpression	"zend_is_callable_ex ( & fci -> function_name , fci -> object , IS_CALLABLE_CHECK_SILENT , & callable_name , fci_cache , & error )"		169956	1					
ANR	170266	Callee	zend_is_callable_ex		169956	0					
ANR	170267	Identifier	zend_is_callable_ex		169956	0					
ANR	170268	ArgumentList	& fci -> function_name		169956	1					
ANR	170269	Argument	& fci -> function_name		169956	0					
ANR	170270	UnaryOperationExpression	& fci -> function_name		169956	0					
ANR	170271	UnaryOperator	&		169956	0					
ANR	170272	PtrMemberAccess	fci -> function_name		169956	1					
ANR	170273	Identifier	fci		169956	0					
ANR	170274	Identifier	function_name		169956	1					
ANR	170275	Argument	fci -> object		169956	1					
ANR	170276	PtrMemberAccess	fci -> object		169956	0					
ANR	170277	Identifier	fci		169956	0					
ANR	170278	Identifier	object		169956	1					
ANR	170279	Argument	IS_CALLABLE_CHECK_SILENT		169956	2					
ANR	170280	Identifier	IS_CALLABLE_CHECK_SILENT		169956	0					
ANR	170281	Argument	& callable_name		169956	3					
ANR	170282	UnaryOperationExpression	& callable_name		169956	0					
ANR	170283	UnaryOperator	&		169956	0					
ANR	170284	Identifier	callable_name		169956	1					
ANR	170285	Argument	fci_cache		169956	4					
ANR	170286	Identifier	fci_cache		169956	0					
ANR	170287	Argument	& error		169956	5					
ANR	170288	UnaryOperationExpression	& error		169956	0					
ANR	170289	UnaryOperator	&		169956	0					
ANR	170290	Identifier	error		169956	1					
ANR	170291	CompoundStatement		60:123:2029:2029	169956	1					
ANR	170292	IfStatement	if ( error )		169956	0					
ANR	170293	Condition	error	744:7:21385:21389	169956	0	True				
ANR	170294	Identifier	error		169956	0					
ANR	170295	CompoundStatement		61:14:2045:2045	169956	1					
ANR	170296	ExpressionStatement	"zend_error ( E_WARNING , ""Invalid callback %s, %s"" , ZSTR_VAL ( callable_name ) , error )"	745:4:21398:21478	169956	0	True				
ANR	170297	CallExpression	"zend_error ( E_WARNING , ""Invalid callback %s, %s"" , ZSTR_VAL ( callable_name ) , error )"		169956	0					
ANR	170298	Callee	zend_error		169956	0					
ANR	170299	Identifier	zend_error		169956	0					
ANR	170300	ArgumentList	E_WARNING		169956	1					
ANR	170301	Argument	E_WARNING		169956	0					
ANR	170302	Identifier	E_WARNING		169956	0					
ANR	170303	Argument	"""Invalid callback %s, %s"""		169956	1					
ANR	170304	PrimaryExpression	"""Invalid callback %s, %s"""		169956	0					
ANR	170305	Argument	ZSTR_VAL ( callable_name )		169956	2					
ANR	170306	CallExpression	ZSTR_VAL ( callable_name )		169956	0					
ANR	170307	Callee	ZSTR_VAL		169956	0					
ANR	170308	Identifier	ZSTR_VAL		169956	0					
ANR	170309	ArgumentList	callable_name		169956	1					
ANR	170310	Argument	callable_name		169956	0					
ANR	170311	Identifier	callable_name		169956	0					
ANR	170312	Argument	error		169956	3					
ANR	170313	Identifier	error		169956	0					
ANR	170314	ExpressionStatement	efree ( error )	746:4:21484:21496	169956	1	True				
ANR	170315	CallExpression	efree ( error )		169956	0					
ANR	170316	Callee	efree		169956	0					
ANR	170317	Identifier	efree		169956	0					
ANR	170318	ArgumentList	error		169956	1					
ANR	170319	Argument	error		169956	0					
ANR	170320	Identifier	error		169956	0					
ANR	170321	IfStatement	if ( callable_name )		169956	1					
ANR	170322	Condition	callable_name	748:7:21510:21522	169956	0	True				
ANR	170323	Identifier	callable_name		169956	0					
ANR	170324	CompoundStatement		65:22:2178:2178	169956	1					
ANR	170325	ExpressionStatement	zend_string_release ( callable_name )	749:4:21531:21565	169956	0	True				
ANR	170326	CallExpression	zend_string_release ( callable_name )		169956	0					
ANR	170327	Callee	zend_string_release		169956	0					
ANR	170328	Identifier	zend_string_release		169956	0					
ANR	170329	ArgumentList	callable_name		169956	1					
ANR	170330	Argument	callable_name		169956	0					
ANR	170331	Identifier	callable_name		169956	0					
ANR	170332	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		169956	2					
ANR	170333	Condition	EG ( current_execute_data ) == & dummy_execute_data	751:7:21579:21625	169956	0	True				
ANR	170334	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		169956	0		==			
ANR	170335	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170336	Callee	EG		169956	0					
ANR	170337	Identifier	EG		169956	0					
ANR	170338	ArgumentList	current_execute_data		169956	1					
ANR	170339	Argument	current_execute_data		169956	0					
ANR	170340	Identifier	current_execute_data		169956	0					
ANR	170341	UnaryOperationExpression	& dummy_execute_data		169956	1					
ANR	170342	UnaryOperator	&		169956	0					
ANR	170343	Identifier	dummy_execute_data		169956	1					
ANR	170344	CompoundStatement		68:56:2281:2281	169956	1					
ANR	170345	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	752:4:21634:21697	169956	0	True				
ANR	170346	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		169956	0		=			
ANR	170347	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170348	Callee	EG		169956	0					
ANR	170349	Identifier	EG		169956	0					
ANR	170350	ArgumentList	current_execute_data		169956	1					
ANR	170351	Argument	current_execute_data		169956	0					
ANR	170352	Identifier	current_execute_data		169956	0					
ANR	170353	MemberAccess	dummy_execute_data . prev_execute_data		169956	1					
ANR	170354	Identifier	dummy_execute_data		169956	0					
ANR	170355	Identifier	prev_execute_data		169956	1					
ANR	170356	ReturnStatement	return FAILURE ;	754:3:21707:21721	169956	3	True				
ANR	170357	Identifier	FAILURE		169956	0					
ANR	170358	ElseStatement	else		169956	0					
ANR	170359	IfStatement	if ( error )		169956	0					
ANR	170360	Condition	error	755:13:21736:21740	169956	0	True				
ANR	170361	Identifier	error		169956	0					
ANR	170362	CompoundStatement		72:20:2396:2396	169956	1					
ANR	170363	IfStatement	if ( error [ 0 ] >= 'a' && error [ 0 ] <= 'z' )		169956	0					
ANR	170364	Condition	error [ 0 ] >= 'a' && error [ 0 ] <= 'z'	757:7:21810:21843	169956	0	True				
ANR	170365	AndExpression	error [ 0 ] >= 'a' && error [ 0 ] <= 'z'		169956	0		&&			
ANR	170366	RelationalExpression	error [ 0 ] >= 'a'		169956	0		>=			
ANR	170367	ArrayIndexing	error [ 0 ]		169956	0					
ANR	170368	Identifier	error		169956	0					
ANR	170369	PrimaryExpression	0		169956	1					
ANR	170370	PrimaryExpression	'a'		169956	1					
ANR	170371	RelationalExpression	error [ 0 ] <= 'z'		169956	1		<=			
ANR	170372	ArrayIndexing	error [ 0 ]		169956	0					
ANR	170373	Identifier	error		169956	0					
ANR	170374	PrimaryExpression	0		169956	1					
ANR	170375	PrimaryExpression	'z'		169956	1					
ANR	170376	CompoundStatement		74:43:2499:2499	169956	1					
ANR	170377	ExpressionStatement	error [ 0 ] += ( 'A' - 'a' )	758:4:21852:21875	169956	0	True				
ANR	170378	AssignmentExpression	error [ 0 ] += ( 'A' - 'a' )		169956	0		+=			
ANR	170379	ArrayIndexing	error [ 0 ]		169956	0					
ANR	170380	Identifier	error		169956	0					
ANR	170381	PrimaryExpression	0		169956	1					
ANR	170382	AdditiveExpression	'A' - 'a'		169956	1		-			
ANR	170383	PrimaryExpression	'A'		169956	0					
ANR	170384	PrimaryExpression	'a'		169956	1					
ANR	170385	ExpressionStatement	"zend_error ( E_DEPRECATED , ""%s"" , error )"	760:3:21885:21922	169956	1	True				
ANR	170386	CallExpression	"zend_error ( E_DEPRECATED , ""%s"" , error )"		169956	0					
ANR	170387	Callee	zend_error		169956	0					
ANR	170388	Identifier	zend_error		169956	0					
ANR	170389	ArgumentList	E_DEPRECATED		169956	1					
ANR	170390	Argument	E_DEPRECATED		169956	0					
ANR	170391	Identifier	E_DEPRECATED		169956	0					
ANR	170392	Argument	"""%s"""		169956	1					
ANR	170393	PrimaryExpression	"""%s"""		169956	0					
ANR	170394	Argument	error		169956	2					
ANR	170395	Identifier	error		169956	0					
ANR	170396	ExpressionStatement	efree ( error )	761:3:21927:21939	169956	2	True				
ANR	170397	CallExpression	efree ( error )		169956	0					
ANR	170398	Callee	efree		169956	0					
ANR	170399	Identifier	efree		169956	0					
ANR	170400	ArgumentList	error		169956	1					
ANR	170401	Argument	error		169956	0					
ANR	170402	Identifier	error		169956	0					
ANR	170403	ExpressionStatement	zend_string_release ( callable_name )	763:2:21947:21981	169956	4	True				
ANR	170404	CallExpression	zend_string_release ( callable_name )		169956	0					
ANR	170405	Callee	zend_string_release		169956	0					
ANR	170406	Identifier	zend_string_release		169956	0					
ANR	170407	ArgumentList	callable_name		169956	1					
ANR	170408	Argument	callable_name		169956	0					
ANR	170409	Identifier	callable_name		169956	0					
ANR	170410	ExpressionStatement	func = fci_cache -> function_handler	766:1:21988:22022	169956	13	True				
ANR	170411	AssignmentExpression	func = fci_cache -> function_handler		169956	0		=			
ANR	170412	Identifier	func		169956	0					
ANR	170413	PtrMemberAccess	fci_cache -> function_handler		169956	1					
ANR	170414	Identifier	fci_cache		169956	0					
ANR	170415	Identifier	function_handler		169956	1					
ANR	170416	ExpressionStatement	"call = zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_FUNCTION , func , fci -> param_count , fci_cache -> called_scope , fci_cache -> object )"	767:1:22025:22155	169956	14	True				
ANR	170417	AssignmentExpression	"call = zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_FUNCTION , func , fci -> param_count , fci_cache -> called_scope , fci_cache -> object )"		169956	0		=			
ANR	170418	Identifier	call		169956	0					
ANR	170419	CallExpression	"zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_FUNCTION , func , fci -> param_count , fci_cache -> called_scope , fci_cache -> object )"		169956	1					
ANR	170420	Callee	zend_vm_stack_push_call_frame		169956	0					
ANR	170421	Identifier	zend_vm_stack_push_call_frame		169956	0					
ANR	170422	ArgumentList	ZEND_CALL_TOP_FUNCTION		169956	1					
ANR	170423	Argument	ZEND_CALL_TOP_FUNCTION		169956	0					
ANR	170424	Identifier	ZEND_CALL_TOP_FUNCTION		169956	0					
ANR	170425	Argument	func		169956	1					
ANR	170426	Identifier	func		169956	0					
ANR	170427	Argument	fci -> param_count		169956	2					
ANR	170428	PtrMemberAccess	fci -> param_count		169956	0					
ANR	170429	Identifier	fci		169956	0					
ANR	170430	Identifier	param_count		169956	1					
ANR	170431	Argument	fci_cache -> called_scope		169956	3					
ANR	170432	PtrMemberAccess	fci_cache -> called_scope		169956	0					
ANR	170433	Identifier	fci_cache		169956	0					
ANR	170434	Identifier	called_scope		169956	1					
ANR	170435	Argument	fci_cache -> object		169956	4					
ANR	170436	PtrMemberAccess	fci_cache -> object		169956	0					
ANR	170437	Identifier	fci_cache		169956	0					
ANR	170438	Identifier	object		169956	1					
ANR	170439	ExpressionStatement	calling_scope = fci_cache -> calling_scope	769:1:22158:22198	169956	15	True				
ANR	170440	AssignmentExpression	calling_scope = fci_cache -> calling_scope		169956	0		=			
ANR	170441	Identifier	calling_scope		169956	0					
ANR	170442	PtrMemberAccess	fci_cache -> calling_scope		169956	1					
ANR	170443	Identifier	fci_cache		169956	0					
ANR	170444	Identifier	calling_scope		169956	1					
ANR	170445	ExpressionStatement	fci -> object = fci_cache -> object	770:1:22201:22232	169956	16	True				
ANR	170446	AssignmentExpression	fci -> object = fci_cache -> object		169956	0		=			
ANR	170447	PtrMemberAccess	fci -> object		169956	0					
ANR	170448	Identifier	fci		169956	0					
ANR	170449	Identifier	object		169956	1					
ANR	170450	PtrMemberAccess	fci_cache -> object		169956	1					
ANR	170451	Identifier	fci_cache		169956	0					
ANR	170452	Identifier	object		169956	1					
ANR	170453	IfStatement	if ( fci -> object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] ) ) )		169956	17					
ANR	170454	Condition	fci -> object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] ) )	771:5:22239:22371	169956	0	True				
ANR	170455	AndExpression	fci -> object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] ) )		169956	0		&&			
ANR	170456	PtrMemberAccess	fci -> object		169956	0					
ANR	170457	Identifier	fci		169956	0					
ANR	170458	Identifier	object		169956	1					
ANR	170459	OrExpression	! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] )		169956	1		||			
ANR	170460	UnaryOperationExpression	! EG ( objects_store ) . object_buckets		169956	0					
ANR	170461	UnaryOperator	!		169956	0					
ANR	170462	MemberAccess	EG ( objects_store ) . object_buckets		169956	1					
ANR	170463	CallExpression	EG ( objects_store )		169956	0					
ANR	170464	Callee	EG		169956	0					
ANR	170465	Identifier	EG		169956	0					
ANR	170466	ArgumentList	objects_store		169956	1					
ANR	170467	Argument	objects_store		169956	0					
ANR	170468	Identifier	objects_store		169956	0					
ANR	170469	Identifier	object_buckets		169956	1					
ANR	170470	UnaryOperationExpression	! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] )		169956	1					
ANR	170471	UnaryOperator	!		169956	0					
ANR	170472	CallExpression	IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ fci -> object -> handle ] )		169956	1					
ANR	170473	Callee	IS_OBJ_VALID		169956	0					
ANR	170474	Identifier	IS_OBJ_VALID		169956	0					
ANR	170475	ArgumentList	EG ( objects_store ) . object_buckets [ fci -> object -> handle ]		169956	1					
ANR	170476	Argument	EG ( objects_store ) . object_buckets [ fci -> object -> handle ]		169956	0					
ANR	170477	ArrayIndexing	EG ( objects_store ) . object_buckets [ fci -> object -> handle ]		169956	0					
ANR	170478	MemberAccess	EG ( objects_store ) . object_buckets		169956	0					
ANR	170479	CallExpression	EG ( objects_store )		169956	0					
ANR	170480	Callee	EG		169956	0					
ANR	170481	Identifier	EG		169956	0					
ANR	170482	ArgumentList	objects_store		169956	1					
ANR	170483	Argument	objects_store		169956	0					
ANR	170484	Identifier	objects_store		169956	0					
ANR	170485	Identifier	object_buckets		169956	1					
ANR	170486	PtrMemberAccess	fci -> object -> handle		169956	1					
ANR	170487	PtrMemberAccess	fci -> object		169956	0					
ANR	170488	Identifier	fci		169956	0					
ANR	170489	Identifier	object		169956	1					
ANR	170490	Identifier	handle		169956	1					
ANR	170491	CompoundStatement		90:77:3027:3027	169956	1					
ANR	170492	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		169956	0					
ANR	170493	Condition	EG ( current_execute_data ) == & dummy_execute_data	774:6:22382:22428	169956	0	True				
ANR	170494	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		169956	0		==			
ANR	170495	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170496	Callee	EG		169956	0					
ANR	170497	Identifier	EG		169956	0					
ANR	170498	ArgumentList	current_execute_data		169956	1					
ANR	170499	Argument	current_execute_data		169956	0					
ANR	170500	Identifier	current_execute_data		169956	0					
ANR	170501	UnaryOperationExpression	& dummy_execute_data		169956	1					
ANR	170502	UnaryOperator	&		169956	0					
ANR	170503	Identifier	dummy_execute_data		169956	1					
ANR	170504	CompoundStatement		91:55:3084:3084	169956	1					
ANR	170505	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	775:3:22436:22499	169956	0	True				
ANR	170506	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		169956	0		=			
ANR	170507	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170508	Callee	EG		169956	0					
ANR	170509	Identifier	EG		169956	0					
ANR	170510	ArgumentList	current_execute_data		169956	1					
ANR	170511	Argument	current_execute_data		169956	0					
ANR	170512	Identifier	current_execute_data		169956	0					
ANR	170513	MemberAccess	dummy_execute_data . prev_execute_data		169956	1					
ANR	170514	Identifier	dummy_execute_data		169956	0					
ANR	170515	Identifier	prev_execute_data		169956	1					
ANR	170516	ReturnStatement	return FAILURE ;	777:2:22507:22521	169956	1	True				
ANR	170517	Identifier	FAILURE		169956	0					
ANR	170518	IfStatement	if ( func -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED ) )		169956	18					
ANR	170519	Condition	func -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED )	780:5:22532:22594	169956	0	True				
ANR	170520	BitAndExpression	func -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED )		169956	0		&			
ANR	170521	MemberAccess	func -> common . fn_flags		169956	0					
ANR	170522	PtrMemberAccess	func -> common		169956	0					
ANR	170523	Identifier	func		169956	0					
ANR	170524	Identifier	common		169956	1					
ANR	170525	Identifier	fn_flags		169956	1					
ANR	170526	InclusiveOrExpression	ZEND_ACC_ABSTRACT | ZEND_ACC_DEPRECATED		169956	1		|			
ANR	170527	Identifier	ZEND_ACC_ABSTRACT		169956	0					
ANR	170528	Identifier	ZEND_ACC_DEPRECATED		169956	1					
ANR	170529	CompoundStatement		97:70:3250:3250	169956	1					
ANR	170530	IfStatement	if ( func -> common . fn_flags & ZEND_ACC_ABSTRACT )		169956	0					
ANR	170531	Condition	func -> common . fn_flags & ZEND_ACC_ABSTRACT	781:6:22605:22645	169956	0	True				
ANR	170532	BitAndExpression	func -> common . fn_flags & ZEND_ACC_ABSTRACT		169956	0		&			
ANR	170533	MemberAccess	func -> common . fn_flags		169956	0					
ANR	170534	PtrMemberAccess	func -> common		169956	0					
ANR	170535	Identifier	func		169956	0					
ANR	170536	Identifier	common		169956	1					
ANR	170537	Identifier	fn_flags		169956	1					
ANR	170538	Identifier	ZEND_ACC_ABSTRACT		169956	1					
ANR	170539	CompoundStatement		98:49:3301:3301	169956	1					
ANR	170540	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot call abstract method %s::%s()"" , ZSTR_VAL ( func -> common . scope -> name ) , ZSTR_VAL ( func -> common . function_name ) )"	782:3:22653:22789	169956	0	True				
ANR	170541	CallExpression	"zend_throw_error ( NULL , ""Cannot call abstract method %s::%s()"" , ZSTR_VAL ( func -> common . scope -> name ) , ZSTR_VAL ( func -> common . function_name ) )"		169956	0					
ANR	170542	Callee	zend_throw_error		169956	0					
ANR	170543	Identifier	zend_throw_error		169956	0					
ANR	170544	ArgumentList	NULL		169956	1					
ANR	170545	Argument	NULL		169956	0					
ANR	170546	Identifier	NULL		169956	0					
ANR	170547	Argument	"""Cannot call abstract method %s::%s()"""		169956	1					
ANR	170548	PrimaryExpression	"""Cannot call abstract method %s::%s()"""		169956	0					
ANR	170549	Argument	ZSTR_VAL ( func -> common . scope -> name )		169956	2					
ANR	170550	CallExpression	ZSTR_VAL ( func -> common . scope -> name )		169956	0					
ANR	170551	Callee	ZSTR_VAL		169956	0					
ANR	170552	Identifier	ZSTR_VAL		169956	0					
ANR	170553	ArgumentList	func -> common . scope -> name		169956	1					
ANR	170554	Argument	func -> common . scope -> name		169956	0					
ANR	170555	PtrMemberAccess	func -> common . scope -> name		169956	0					
ANR	170556	MemberAccess	func -> common . scope		169956	0					
ANR	170557	PtrMemberAccess	func -> common		169956	0					
ANR	170558	Identifier	func		169956	0					
ANR	170559	Identifier	common		169956	1					
ANR	170560	Identifier	scope		169956	1					
ANR	170561	Identifier	name		169956	1					
ANR	170562	Argument	ZSTR_VAL ( func -> common . function_name )		169956	3					
ANR	170563	CallExpression	ZSTR_VAL ( func -> common . function_name )		169956	0					
ANR	170564	Callee	ZSTR_VAL		169956	0					
ANR	170565	Identifier	ZSTR_VAL		169956	0					
ANR	170566	ArgumentList	func -> common . function_name		169956	1					
ANR	170567	Argument	func -> common . function_name		169956	0					
ANR	170568	MemberAccess	func -> common . function_name		169956	0					
ANR	170569	PtrMemberAccess	func -> common		169956	0					
ANR	170570	Identifier	func		169956	0					
ANR	170571	Identifier	common		169956	1					
ANR	170572	Identifier	function_name		169956	1					
ANR	170573	ReturnStatement	return FAILURE ;	783:3:22794:22808	169956	1	True				
ANR	170574	Identifier	FAILURE		169956	0					
ANR	170575	IfStatement	if ( func -> common . fn_flags & ZEND_ACC_DEPRECATED )		169956	1					
ANR	170576	Condition	func -> common . fn_flags & ZEND_ACC_DEPRECATED	785:6:22820:22862	169956	0	True				
ANR	170577	BitAndExpression	func -> common . fn_flags & ZEND_ACC_DEPRECATED		169956	0		&			
ANR	170578	MemberAccess	func -> common . fn_flags		169956	0					
ANR	170579	PtrMemberAccess	func -> common		169956	0					
ANR	170580	Identifier	func		169956	0					
ANR	170581	Identifier	common		169956	1					
ANR	170582	Identifier	fn_flags		169956	1					
ANR	170583	Identifier	ZEND_ACC_DEPRECATED		169956	1					
ANR	170584	CompoundStatement		102:51:3518:3518	169956	1					
ANR	170585	ExpressionStatement	"zend_error ( E_DEPRECATED , ""Function %s%s%s() is deprecated"" , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"	786:4:22871:23074	169956	0	True				
ANR	170586	CallExpression	"zend_error ( E_DEPRECATED , ""Function %s%s%s() is deprecated"" , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"		169956	0					
ANR	170587	Callee	zend_error		169956	0					
ANR	170588	Identifier	zend_error		169956	0					
ANR	170589	ArgumentList	E_DEPRECATED		169956	1					
ANR	170590	Argument	E_DEPRECATED		169956	0					
ANR	170591	Identifier	E_DEPRECATED		169956	0					
ANR	170592	Argument	"""Function %s%s%s() is deprecated"""		169956	1					
ANR	170593	PrimaryExpression	"""Function %s%s%s() is deprecated"""		169956	0					
ANR	170594	Argument	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		169956	2					
ANR	170595	ConditionalExpression	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		169956	0					
ANR	170596	Condition	func -> common . scope		169956	0					
ANR	170597	MemberAccess	func -> common . scope		169956	0					
ANR	170598	PtrMemberAccess	func -> common		169956	0					
ANR	170599	Identifier	func		169956	0					
ANR	170600	Identifier	common		169956	1					
ANR	170601	Identifier	scope		169956	1					
ANR	170602	CallExpression	ZSTR_VAL ( func -> common . scope -> name )		169956	1					
ANR	170603	Callee	ZSTR_VAL		169956	0					
ANR	170604	Identifier	ZSTR_VAL		169956	0					
ANR	170605	ArgumentList	func -> common . scope -> name		169956	1					
ANR	170606	Argument	func -> common . scope -> name		169956	0					
ANR	170607	PtrMemberAccess	func -> common . scope -> name		169956	0					
ANR	170608	MemberAccess	func -> common . scope		169956	0					
ANR	170609	PtrMemberAccess	func -> common		169956	0					
ANR	170610	Identifier	func		169956	0					
ANR	170611	Identifier	common		169956	1					
ANR	170612	Identifier	scope		169956	1					
ANR	170613	Identifier	name		169956	1					
ANR	170614	PrimaryExpression	""""""		169956	2					
ANR	170615	Argument	"func -> common . scope ? ""::"" : """""		169956	3					
ANR	170616	ConditionalExpression	"func -> common . scope ? ""::"" : """""		169956	0					
ANR	170617	Condition	func -> common . scope		169956	0					
ANR	170618	MemberAccess	func -> common . scope		169956	0					
ANR	170619	PtrMemberAccess	func -> common		169956	0					
ANR	170620	Identifier	func		169956	0					
ANR	170621	Identifier	common		169956	1					
ANR	170622	Identifier	scope		169956	1					
ANR	170623	PrimaryExpression	"""::"""		169956	1					
ANR	170624	PrimaryExpression	""""""		169956	2					
ANR	170625	Argument	ZSTR_VAL ( func -> common . function_name )		169956	4					
ANR	170626	CallExpression	ZSTR_VAL ( func -> common . function_name )		169956	0					
ANR	170627	Callee	ZSTR_VAL		169956	0					
ANR	170628	Identifier	ZSTR_VAL		169956	0					
ANR	170629	ArgumentList	func -> common . function_name		169956	1					
ANR	170630	Argument	func -> common . function_name		169956	0					
ANR	170631	MemberAccess	func -> common . function_name		169956	0					
ANR	170632	PtrMemberAccess	func -> common		169956	0					
ANR	170633	Identifier	func		169956	0					
ANR	170634	Identifier	common		169956	1					
ANR	170635	Identifier	function_name		169956	1					
ANR	170636	ForStatement	for ( i = 0 ; i < fci -> param_count ; i ++ )		169956	19					
ANR	170637	ForInit	i = 0 ;	793:6:23090:23093	169956	0	True				
ANR	170638	AssignmentExpression	i = 0		169956	0		=			
ANR	170639	Identifier	i		169956	0					
ANR	170640	PrimaryExpression	0		169956	1					
ANR	170641	Condition	i < fci -> param_count	793:11:23095:23112	169956	1	True				
ANR	170642	RelationalExpression	i < fci -> param_count		169956	0		<			
ANR	170643	Identifier	i		169956	0					
ANR	170644	PtrMemberAccess	fci -> param_count		169956	1					
ANR	170645	Identifier	fci		169956	0					
ANR	170646	Identifier	param_count		169956	1					
ANR	170647	PostIncDecOperationExpression	i ++	793:31:23115:23117	169956	2	True				
ANR	170648	Identifier	i		169956	0					
ANR	170649	IncDec	++		169956	1					
ANR	170650	CompoundStatement		112:2:3792:3819	169956	3					
ANR	170651	IdentifierDeclStatement	zval * param ;	794:2:23124:23135	169956	0	True				
ANR	170652	IdentifierDecl	* param		169956	0					
ANR	170653	IdentifierDeclType	zval *		169956	0					
ANR	170654	Identifier	param		169956	1					
ANR	170655	IdentifierDeclStatement	zval * arg = & fci -> params [ i ] ;	795:2:23139:23166	169956	1	True				
ANR	170656	IdentifierDecl	* arg = & fci -> params [ i ]		169956	0					
ANR	170657	IdentifierDeclType	zval *		169956	0					
ANR	170658	Identifier	arg		169956	1					
ANR	170659	AssignmentExpression	* arg = & fci -> params [ i ]		169956	2		=			
ANR	170660	Identifier	arg		169956	0					
ANR	170661	UnaryOperationExpression	& fci -> params [ i ]		169956	1					
ANR	170662	UnaryOperator	&		169956	0					
ANR	170663	ArrayIndexing	fci -> params [ i ]		169956	1					
ANR	170664	PtrMemberAccess	fci -> params		169956	0					
ANR	170665	Identifier	fci		169956	0					
ANR	170666	Identifier	params		169956	1					
ANR	170667	Identifier	i		169956	1					
ANR	170668	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( func , i + 1 ) )"		169956	2					
ANR	170669	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( func , i + 1 )"	797:6:23175:23212	169956	0	True				
ANR	170670	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( func , i + 1 )"		169956	0					
ANR	170671	Callee	ARG_SHOULD_BE_SENT_BY_REF		169956	0					
ANR	170672	Identifier	ARG_SHOULD_BE_SENT_BY_REF		169956	0					
ANR	170673	ArgumentList	func		169956	1					
ANR	170674	Argument	func		169956	0					
ANR	170675	Identifier	func		169956	0					
ANR	170676	Argument	i + 1		169956	1					
ANR	170677	AdditiveExpression	i + 1		169956	0		+			
ANR	170678	Identifier	i		169956	0					
ANR	170679	PrimaryExpression	1		169956	1					
ANR	170680	CompoundStatement		114:46:3868:3868	169956	1					
ANR	170681	IfStatement	if ( UNEXPECTED ( ! Z_ISREF_P ( arg ) ) )		169956	0					
ANR	170682	Condition	UNEXPECTED ( ! Z_ISREF_P ( arg ) )	798:7:23224:23250	169956	0	True				
ANR	170683	CallExpression	UNEXPECTED ( ! Z_ISREF_P ( arg ) )		169956	0					
ANR	170684	Callee	UNEXPECTED		169956	0					
ANR	170685	Identifier	UNEXPECTED		169956	0					
ANR	170686	ArgumentList	! Z_ISREF_P ( arg )		169956	1					
ANR	170687	Argument	! Z_ISREF_P ( arg )		169956	0					
ANR	170688	UnaryOperationExpression	! Z_ISREF_P ( arg )		169956	0					
ANR	170689	UnaryOperator	!		169956	0					
ANR	170690	CallExpression	Z_ISREF_P ( arg )		169956	1					
ANR	170691	Callee	Z_ISREF_P		169956	0					
ANR	170692	Identifier	Z_ISREF_P		169956	0					
ANR	170693	ArgumentList	arg		169956	1					
ANR	170694	Argument	arg		169956	0					
ANR	170695	Identifier	arg		169956	0					
ANR	170696	CompoundStatement		115:36:3906:3906	169956	1					
ANR	170697	IfStatement	"if ( fci -> no_separation && ! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 ) )"		169956	0					
ANR	170698	Condition	"fci -> no_separation && ! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"	799:8:23263:23325	169956	0	True				
ANR	170699	AndExpression	"fci -> no_separation && ! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"		169956	0		&&			
ANR	170700	PtrMemberAccess	fci -> no_separation		169956	0					
ANR	170701	Identifier	fci		169956	0					
ANR	170702	Identifier	no_separation		169956	1					
ANR	170703	UnaryOperationExpression	"! ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"		169956	1					
ANR	170704	UnaryOperator	!		169956	0					
ANR	170705	CallExpression	"ARG_MAY_BE_SENT_BY_REF ( func , i + 1 )"		169956	1					
ANR	170706	Callee	ARG_MAY_BE_SENT_BY_REF		169956	0					
ANR	170707	Identifier	ARG_MAY_BE_SENT_BY_REF		169956	0					
ANR	170708	ArgumentList	func		169956	1					
ANR	170709	Argument	func		169956	0					
ANR	170710	Identifier	func		169956	0					
ANR	170711	Argument	i + 1		169956	1					
ANR	170712	AdditiveExpression	i + 1		169956	0		+			
ANR	170713	Identifier	i		169956	0					
ANR	170714	PrimaryExpression	1		169956	1					
ANR	170715	CompoundStatement		117:43:3981:3981	169956	1					
ANR	170716	IfStatement	if ( i )		169956	0					
ANR	170717	Condition	i	801:9:23339:23339	169956	0	True				
ANR	170718	Identifier	i		169956	0					
ANR	170719	CompoundStatement		118:12:3995:3995	169956	1					
ANR	170720	ExpressionStatement	ZEND_CALL_NUM_ARGS ( call ) = i	803:6:23389:23417	169956	0	True				
ANR	170721	AssignmentExpression	ZEND_CALL_NUM_ARGS ( call ) = i		169956	0		=			
ANR	170722	CallExpression	ZEND_CALL_NUM_ARGS ( call )		169956	0					
ANR	170723	Callee	ZEND_CALL_NUM_ARGS		169956	0					
ANR	170724	Identifier	ZEND_CALL_NUM_ARGS		169956	0					
ANR	170725	ArgumentList	call		169956	1					
ANR	170726	Argument	call		169956	0					
ANR	170727	Identifier	call		169956	0					
ANR	170728	Identifier	i		169956	1					
ANR	170729	ExpressionStatement	zend_vm_stack_free_args ( call )	804:6:23425:23454	169956	1	True				
ANR	170730	CallExpression	zend_vm_stack_free_args ( call )		169956	0					
ANR	170731	Callee	zend_vm_stack_free_args		169956	0					
ANR	170732	Identifier	zend_vm_stack_free_args		169956	0					
ANR	170733	ArgumentList	call		169956	1					
ANR	170734	Argument	call		169956	0					
ANR	170735	Identifier	call		169956	0					
ANR	170736	ExpressionStatement	zend_vm_stack_free_call_frame ( call )	806:5:23468:23503	169956	1	True				
ANR	170737	CallExpression	zend_vm_stack_free_call_frame ( call )		169956	0					
ANR	170738	Callee	zend_vm_stack_free_call_frame		169956	0					
ANR	170739	Identifier	zend_vm_stack_free_call_frame		169956	0					
ANR	170740	ArgumentList	call		169956	1					
ANR	170741	Argument	call		169956	0					
ANR	170742	Identifier	call		169956	0					
ANR	170743	ExpressionStatement	"zend_error ( E_WARNING , ""Parameter %d to %s%s%s() expected to be a reference, value given"" , i + 1 , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"	808:5:23511:23761	169956	2	True				
ANR	170744	CallExpression	"zend_error ( E_WARNING , ""Parameter %d to %s%s%s() expected to be a reference, value given"" , i + 1 , func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """" , func -> common . scope ? ""::"" : """" , ZSTR_VAL ( func -> common . function_name ) )"		169956	0					
ANR	170745	Callee	zend_error		169956	0					
ANR	170746	Identifier	zend_error		169956	0					
ANR	170747	ArgumentList	E_WARNING		169956	1					
ANR	170748	Argument	E_WARNING		169956	0					
ANR	170749	Identifier	E_WARNING		169956	0					
ANR	170750	Argument	"""Parameter %d to %s%s%s() expected to be a reference, value given"""		169956	1					
ANR	170751	PrimaryExpression	"""Parameter %d to %s%s%s() expected to be a reference, value given"""		169956	0					
ANR	170752	Argument	i + 1		169956	2					
ANR	170753	AdditiveExpression	i + 1		169956	0		+			
ANR	170754	Identifier	i		169956	0					
ANR	170755	PrimaryExpression	1		169956	1					
ANR	170756	Argument	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		169956	3					
ANR	170757	ConditionalExpression	"func -> common . scope ? ZSTR_VAL ( func -> common . scope -> name ) : """""		169956	0					
ANR	170758	Condition	func -> common . scope		169956	0					
ANR	170759	MemberAccess	func -> common . scope		169956	0					
ANR	170760	PtrMemberAccess	func -> common		169956	0					
ANR	170761	Identifier	func		169956	0					
ANR	170762	Identifier	common		169956	1					
ANR	170763	Identifier	scope		169956	1					
ANR	170764	CallExpression	ZSTR_VAL ( func -> common . scope -> name )		169956	1					
ANR	170765	Callee	ZSTR_VAL		169956	0					
ANR	170766	Identifier	ZSTR_VAL		169956	0					
ANR	170767	ArgumentList	func -> common . scope -> name		169956	1					
ANR	170768	Argument	func -> common . scope -> name		169956	0					
ANR	170769	PtrMemberAccess	func -> common . scope -> name		169956	0					
ANR	170770	MemberAccess	func -> common . scope		169956	0					
ANR	170771	PtrMemberAccess	func -> common		169956	0					
ANR	170772	Identifier	func		169956	0					
ANR	170773	Identifier	common		169956	1					
ANR	170774	Identifier	scope		169956	1					
ANR	170775	Identifier	name		169956	1					
ANR	170776	PrimaryExpression	""""""		169956	2					
ANR	170777	Argument	"func -> common . scope ? ""::"" : """""		169956	4					
ANR	170778	ConditionalExpression	"func -> common . scope ? ""::"" : """""		169956	0					
ANR	170779	Condition	func -> common . scope		169956	0					
ANR	170780	MemberAccess	func -> common . scope		169956	0					
ANR	170781	PtrMemberAccess	func -> common		169956	0					
ANR	170782	Identifier	func		169956	0					
ANR	170783	Identifier	common		169956	1					
ANR	170784	Identifier	scope		169956	1					
ANR	170785	PrimaryExpression	"""::"""		169956	1					
ANR	170786	PrimaryExpression	""""""		169956	2					
ANR	170787	Argument	ZSTR_VAL ( func -> common . function_name )		169956	5					
ANR	170788	CallExpression	ZSTR_VAL ( func -> common . function_name )		169956	0					
ANR	170789	Callee	ZSTR_VAL		169956	0					
ANR	170790	Identifier	ZSTR_VAL		169956	0					
ANR	170791	ArgumentList	func -> common . function_name		169956	1					
ANR	170792	Argument	func -> common . function_name		169956	0					
ANR	170793	MemberAccess	func -> common . function_name		169956	0					
ANR	170794	PtrMemberAccess	func -> common		169956	0					
ANR	170795	Identifier	func		169956	0					
ANR	170796	Identifier	common		169956	1					
ANR	170797	Identifier	function_name		169956	1					
ANR	170798	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		169956	3					
ANR	170799	Condition	EG ( current_execute_data ) == & dummy_execute_data	813:9:23772:23818	169956	0	True				
ANR	170800	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		169956	0		==			
ANR	170801	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170802	Callee	EG		169956	0					
ANR	170803	Identifier	EG		169956	0					
ANR	170804	ArgumentList	current_execute_data		169956	1					
ANR	170805	Argument	current_execute_data		169956	0					
ANR	170806	Identifier	current_execute_data		169956	0					
ANR	170807	UnaryOperationExpression	& dummy_execute_data		169956	1					
ANR	170808	UnaryOperator	&		169956	0					
ANR	170809	Identifier	dummy_execute_data		169956	1					
ANR	170810	CompoundStatement		130:58:4474:4474	169956	1					
ANR	170811	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	814:6:23829:23892	169956	0	True				
ANR	170812	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		169956	0		=			
ANR	170813	CallExpression	EG ( current_execute_data )		169956	0					
ANR	170814	Callee	EG		169956	0					
ANR	170815	Identifier	EG		169956	0					
ANR	170816	ArgumentList	current_execute_data		169956	1					
ANR	170817	Argument	current_execute_data		169956	0					
ANR	170818	Identifier	current_execute_data		169956	0					
ANR	170819	MemberAccess	dummy_execute_data . prev_execute_data		169956	1					
ANR	170820	Identifier	dummy_execute_data		169956	0					
ANR	170821	Identifier	prev_execute_data		169956	1					
ANR	170822	ReturnStatement	return FAILURE ;	816:5:23906:23920	169956	4	True				
ANR	170823	Identifier	FAILURE		169956	0					
ANR	170824	ExpressionStatement	"ZVAL_NEW_REF ( arg , arg )"	819:4:23933:23955	169956	1	True				
ANR	170825	CallExpression	"ZVAL_NEW_REF ( arg , arg )"		169956	0					
ANR	170826	Callee	ZVAL_NEW_REF		169956	0					
ANR	170827	Identifier	ZVAL_NEW_REF		169956	0					
ANR	170828	ArgumentList	arg		169956	1					
ANR	170829	Argument	arg		169956	0					
ANR	170830	Identifier	arg		169956	0					
ANR	170831	Argument	arg		169956	1					
ANR	170832	Identifier	arg		169956	0					
ANR	170833	ExpressionStatement	Z_ADDREF_P ( arg )	821:3:23965:23980	169956	1	True				
ANR	170834	CallExpression	Z_ADDREF_P ( arg )		169956	0					
ANR	170835	Callee	Z_ADDREF_P		169956	0					
ANR	170836	Identifier	Z_ADDREF_P		169956	0					
ANR	170837	ArgumentList	arg		169956	1					
ANR	170838	Argument	arg		169956	0					
ANR	170839	Identifier	arg		169956	0					
ANR	170840	ElseStatement	else		169956	0					
ANR	170841	CompoundStatement		139:9:4644:4644	169956	0					
ANR	170842	IfStatement	if ( Z_ISREF_P ( arg ) && ! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) )		169956	0					
ANR	170843	Condition	Z_ISREF_P ( arg ) && ! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )	823:7:24000:24079	169956	0	True				
ANR	170844	AndExpression	Z_ISREF_P ( arg ) && ! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		169956	0		&&			
ANR	170845	CallExpression	Z_ISREF_P ( arg )		169956	0					
ANR	170846	Callee	Z_ISREF_P		169956	0					
ANR	170847	Identifier	Z_ISREF_P		169956	0					
ANR	170848	ArgumentList	arg		169956	1					
ANR	170849	Argument	arg		169956	0					
ANR	170850	Identifier	arg		169956	0					
ANR	170851	UnaryOperationExpression	! ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		169956	1					
ANR	170852	UnaryOperator	!		169956	0					
ANR	170853	BitAndExpression	func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		169956	1		&			
ANR	170854	MemberAccess	func -> common . fn_flags		169956	0					
ANR	170855	PtrMemberAccess	func -> common		169956	0					
ANR	170856	Identifier	func		169956	0					
ANR	170857	Identifier	common		169956	1					
ANR	170858	Identifier	fn_flags		169956	1					
ANR	170859	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		169956	1					
ANR	170860	CompoundStatement		141:64:4735:4735	169956	1					
ANR	170861	ExpressionStatement	arg = Z_REFVAL_P ( arg )	826:4:24135:24156	169956	0	True				
ANR	170862	AssignmentExpression	arg = Z_REFVAL_P ( arg )		169956	0		=			
ANR	170863	Identifier	arg		169956	0					
ANR	170864	CallExpression	Z_REFVAL_P ( arg )		169956	1					
ANR	170865	Callee	Z_REFVAL_P		169956	0					
ANR	170866	Identifier	Z_REFVAL_P		169956	0					
ANR	170867	ArgumentList	arg		169956	1					
ANR	170868	Argument	arg		169956	0					
ANR	170869	Identifier	arg		169956	0					
ANR	170870	IfStatement	if ( Z_OPT_REFCOUNTED_P ( arg ) )		169956	1					
ANR	170871	Condition	Z_OPT_REFCOUNTED_P ( arg )	828:7:24170:24192	169956	0	True				
ANR	170872	CallExpression	Z_OPT_REFCOUNTED_P ( arg )		169956	0					
ANR	170873	Callee	Z_OPT_REFCOUNTED_P		169956	0					
ANR	170874	Identifier	Z_OPT_REFCOUNTED_P		169956	0					
ANR	170875	ArgumentList	arg		169956	1					
ANR	170876	Argument	arg		169956	0					
ANR	170877	Identifier	arg		169956	0					
ANR	170878	CompoundStatement		145:32:4848:4848	169956	1					
ANR	170879	ExpressionStatement	Z_ADDREF_P ( arg )	829:4:24201:24216	169956	0	True				
ANR	170880	CallExpression	Z_ADDREF_P ( arg )		169956	0					
ANR	170881	Callee	Z_ADDREF_P		169956	0					
ANR	170882	Identifier	Z_ADDREF_P		169956	0					
ANR	170883	ArgumentList	arg		169956	1					
ANR	170884	Argument	arg		169956	0					
ANR	170885	Identifier	arg		169956	0					
ANR	170886	ExpressionStatement	"param = ZEND_CALL_ARG ( call , i + 1 )"	832:2:24229:24261	169956	3	True				
ANR	170887	AssignmentExpression	"param = ZEND_CALL_ARG ( call , i + 1 )"		169956	0		=			
ANR	170888	Identifier	param		169956	0					
ANR	170889	CallExpression	"ZEND_CALL_ARG ( call , i + 1 )"		169956	1					
ANR	170890	Callee	ZEND_CALL_ARG		169956	0					
ANR	170891	Identifier	ZEND_CALL_ARG		169956	0					
ANR	170892	ArgumentList	call		169956	1					
ANR	170893	Argument	call		169956	0					
ANR	170894	Identifier	call		169956	0					
ANR	170895	Argument	i + 1		169956	1					
ANR	170896	AdditiveExpression	i + 1		169956	0		+			
ANR	170897	Identifier	i		169956	0					
ANR	170898	PrimaryExpression	1		169956	1					
ANR	170899	ExpressionStatement	"ZVAL_COPY_VALUE ( param , arg )"	833:2:24265:24292	169956	4	True				
ANR	170900	CallExpression	"ZVAL_COPY_VALUE ( param , arg )"		169956	0					
ANR	170901	Callee	ZVAL_COPY_VALUE		169956	0					
ANR	170902	Identifier	ZVAL_COPY_VALUE		169956	0					
ANR	170903	ArgumentList	param		169956	1					
ANR	170904	Argument	param		169956	0					
ANR	170905	Identifier	param		169956	0					
ANR	170906	Argument	arg		169956	1					
ANR	170907	Identifier	arg		169956	0					
ANR	170908	ExpressionStatement	EG ( scope ) = calling_scope	836:1:24299:24324	169956	20	True				
ANR	170909	AssignmentExpression	EG ( scope ) = calling_scope		169956	0		=			
ANR	170910	CallExpression	EG ( scope )		169956	0					
ANR	170911	Callee	EG		169956	0					
ANR	170912	Identifier	EG		169956	0					
ANR	170913	ArgumentList	scope		169956	1					
ANR	170914	Argument	scope		169956	0					
ANR	170915	Identifier	scope		169956	0					
ANR	170916	Identifier	calling_scope		169956	1					
ANR	170917	IfStatement	if ( func -> common . fn_flags & ZEND_ACC_STATIC )		169956	21					
ANR	170918	Condition	func -> common . fn_flags & ZEND_ACC_STATIC	837:5:24331:24369	169956	0	True				
ANR	170919	BitAndExpression	func -> common . fn_flags & ZEND_ACC_STATIC		169956	0		&			
ANR	170920	MemberAccess	func -> common . fn_flags		169956	0					
ANR	170921	PtrMemberAccess	func -> common		169956	0					
ANR	170922	Identifier	func		169956	0					
ANR	170923	Identifier	common		169956	1					
ANR	170924	Identifier	fn_flags		169956	1					
ANR	170925	Identifier	ZEND_ACC_STATIC		169956	1					
ANR	170926	CompoundStatement		154:46:5025:5025	169956	1					
ANR	170927	ExpressionStatement	fci -> object = NULL	838:2:24376:24394	169956	0	True				
ANR	170928	AssignmentExpression	fci -> object = NULL		169956	0		=			
ANR	170929	PtrMemberAccess	fci -> object		169956	0					
ANR	170930	Identifier	fci		169956	0					
ANR	170931	Identifier	object		169956	1					
ANR	170932	Identifier	NULL		169956	1					
ANR	170933	ExpressionStatement	Z_OBJ ( call -> This ) = fci -> object	840:1:24400:24431	169956	22	True				
ANR	170934	AssignmentExpression	Z_OBJ ( call -> This ) = fci -> object		169956	0		=			
ANR	170935	CallExpression	Z_OBJ ( call -> This )		169956	0					
ANR	170936	Callee	Z_OBJ		169956	0					
ANR	170937	Identifier	Z_OBJ		169956	0					
ANR	170938	ArgumentList	call -> This		169956	1					
ANR	170939	Argument	call -> This		169956	0					
ANR	170940	PtrMemberAccess	call -> This		169956	0					
ANR	170941	Identifier	call		169956	0					
ANR	170942	Identifier	This		169956	1					
ANR	170943	PtrMemberAccess	fci -> object		169956	1					
ANR	170944	Identifier	fci		169956	0					
ANR	170945	Identifier	object		169956	1					
ANR	170946	IfStatement	if ( UNEXPECTED ( func -> op_array . fn_flags & ZEND_ACC_CLOSURE ) )		169956	23					
ANR	170947	Condition	UNEXPECTED ( func -> op_array . fn_flags & ZEND_ACC_CLOSURE )	842:5:24439:24492	169956	0	True				
ANR	170948	CallExpression	UNEXPECTED ( func -> op_array . fn_flags & ZEND_ACC_CLOSURE )		169956	0					
ANR	170949	Callee	UNEXPECTED		169956	0					
ANR	170950	Identifier	UNEXPECTED		169956	0					
ANR	170951	ArgumentList	func -> op_array . fn_flags & ZEND_ACC_CLOSURE		169956	1					
ANR	170952	Argument	func -> op_array . fn_flags & ZEND_ACC_CLOSURE		169956	0					
ANR	170953	BitAndExpression	func -> op_array . fn_flags & ZEND_ACC_CLOSURE		169956	0		&			
ANR	170954	MemberAccess	func -> op_array . fn_flags		169956	0					
ANR	170955	PtrMemberAccess	func -> op_array		169956	0					
ANR	170956	Identifier	func		169956	0					
ANR	170957	Identifier	op_array		169956	1					
ANR	170958	Identifier	fn_flags		169956	1					
ANR	170959	Identifier	ZEND_ACC_CLOSURE		169956	1					
ANR	170960	CompoundStatement		159:61:5148:5148	169956	1					
ANR	170961	ExpressionStatement	ZEND_ASSERT ( GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT )	843:2:24499:24572	169956	0	True				
ANR	170962	CallExpression	ZEND_ASSERT ( GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT )		169956	0					
ANR	170963	Callee	ZEND_ASSERT		169956	0					
ANR	170964	Identifier	ZEND_ASSERT		169956	0					
ANR	170965	ArgumentList	GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT		169956	1					
ANR	170966	Argument	GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT		169956	0					
ANR	170967	EqualityExpression	GC_TYPE ( ( zend_object * ) func -> op_array . prototype ) == IS_OBJECT		169956	0		==			
ANR	170968	CallExpression	GC_TYPE ( ( zend_object * ) func -> op_array . prototype )		169956	0					
ANR	170969	Callee	GC_TYPE		169956	0					
ANR	170970	Identifier	GC_TYPE		169956	0					
ANR	170971	ArgumentList	( zend_object * ) func -> op_array . prototype		169956	1					
ANR	170972	Argument	( zend_object * ) func -> op_array . prototype		169956	0					
ANR	170973	CastExpression	( zend_object * ) func -> op_array . prototype		169956	0					
ANR	170974	CastTarget	zend_object *		169956	0					
ANR	170975	MemberAccess	func -> op_array . prototype		169956	1					
ANR	170976	PtrMemberAccess	func -> op_array		169956	0					
ANR	170977	Identifier	func		169956	0					
ANR	170978	Identifier	op_array		169956	1					
ANR	170979	Identifier	prototype		169956	1					
ANR	170980	Identifier	IS_OBJECT		169956	1					
ANR	170981	ExpressionStatement	GC_REFCOUNT ( ( zend_object * ) func -> op_array . prototype ) ++	844:2:24576:24629	169956	1	True				
ANR	170982	PostIncDecOperationExpression	GC_REFCOUNT ( ( zend_object * ) func -> op_array . prototype ) ++		169956	0					
ANR	170983	CallExpression	GC_REFCOUNT ( ( zend_object * ) func -> op_array . prototype )		169956	0					
ANR	170984	Callee	GC_REFCOUNT		169956	0					
ANR	170985	Identifier	GC_REFCOUNT		169956	0					
ANR	170986	ArgumentList	( zend_object * ) func -> op_array . prototype		169956	1					
ANR	170987	Argument	( zend_object * ) func -> op_array . prototype		169956	0					
ANR	170988	CastExpression	( zend_object * ) func -> op_array . prototype		169956	0					
ANR	170989	CastTarget	zend_object *		169956	0					
ANR	170990	MemberAccess	func -> op_array . prototype		169956	1					
ANR	170991	PtrMemberAccess	func -> op_array		169956	0					
ANR	170992	Identifier	func		169956	0					
ANR	170993	Identifier	op_array		169956	1					
ANR	170994	Identifier	prototype		169956	1					
ANR	170995	IncDec	++		169956	1					
ANR	170996	ExpressionStatement	"ZEND_ADD_CALL_FLAG ( call , ZEND_CALL_CLOSURE )"	845:2:24633:24676	169956	2	True				
ANR	170997	CallExpression	"ZEND_ADD_CALL_FLAG ( call , ZEND_CALL_CLOSURE )"		169956	0					
ANR	170998	Callee	ZEND_ADD_CALL_FLAG		169956	0					
ANR	170999	Identifier	ZEND_ADD_CALL_FLAG		169956	0					
ANR	171000	ArgumentList	call		169956	1					
ANR	171001	Argument	call		169956	0					
ANR	171002	Identifier	call		169956	0					
ANR	171003	Argument	ZEND_CALL_CLOSURE		169956	1					
ANR	171004	Identifier	ZEND_CALL_CLOSURE		169956	0					
ANR	171005	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		169956	24					
ANR	171006	Condition	func -> type == ZEND_USER_FUNCTION	848:5:24687:24718	169956	0	True				
ANR	171007	EqualityExpression	func -> type == ZEND_USER_FUNCTION		169956	0		==			
ANR	171008	PtrMemberAccess	func -> type		169956	0					
ANR	171009	Identifier	func		169956	0					
ANR	171010	Identifier	type		169956	1					
ANR	171011	Identifier	ZEND_USER_FUNCTION		169956	1					
ANR	171012	CompoundStatement		166:2:5378:5460	169956	1					
ANR	171013	IdentifierDeclStatement	int call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0 ;	849:2:24725:24807	169956	0	True				
ANR	171014	IdentifierDecl	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		169956	0					
ANR	171015	IdentifierDeclType	int		169956	0					
ANR	171016	Identifier	call_via_handler		169956	1					
ANR	171017	AssignmentExpression	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		169956	2		=			
ANR	171018	Identifier	call_via_handler		169956	0					
ANR	171019	EqualityExpression	( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		169956	1		!=			
ANR	171020	BitAndExpression	func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		169956	0		&			
ANR	171021	MemberAccess	func -> common . fn_flags		169956	0					
ANR	171022	PtrMemberAccess	func -> common		169956	0					
ANR	171023	Identifier	func		169956	0					
ANR	171024	Identifier	common		169956	1					
ANR	171025	Identifier	fn_flags		169956	1					
ANR	171026	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		169956	1					
ANR	171027	PrimaryExpression	0		169956	1					
ANR	171028	ExpressionStatement	EG ( scope ) = func -> common . scope	850:2:24811:24841	169956	1	True				
ANR	171029	AssignmentExpression	EG ( scope ) = func -> common . scope		169956	0		=			
ANR	171030	CallExpression	EG ( scope )		169956	0					
ANR	171031	Callee	EG		169956	0					
ANR	171032	Identifier	EG		169956	0					
ANR	171033	ArgumentList	scope		169956	1					
ANR	171034	Argument	scope		169956	0					
ANR	171035	Identifier	scope		169956	0					
ANR	171036	MemberAccess	func -> common . scope		169956	1					
ANR	171037	PtrMemberAccess	func -> common		169956	0					
ANR	171038	Identifier	func		169956	0					
ANR	171039	Identifier	common		169956	1					
ANR	171040	Identifier	scope		169956	1					
ANR	171041	ExpressionStatement	call -> symbol_table = fci -> symbol_table	851:2:24845:24883	169956	2	True				
ANR	171042	AssignmentExpression	call -> symbol_table = fci -> symbol_table		169956	0		=			
ANR	171043	PtrMemberAccess	call -> symbol_table		169956	0					
ANR	171044	Identifier	call		169956	0					
ANR	171045	Identifier	symbol_table		169956	1					
ANR	171046	PtrMemberAccess	fci -> symbol_table		169956	1					
ANR	171047	Identifier	fci		169956	0					
ANR	171048	Identifier	symbol_table		169956	1					
ANR	171049	IfStatement	if ( EXPECTED ( ( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0 ) )		169956	3					
ANR	171050	Condition	EXPECTED ( ( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0 )	852:6:24891:24951	169956	0	True				
ANR	171051	CallExpression	EXPECTED ( ( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0 )		169956	0					
ANR	171052	Callee	EXPECTED		169956	0					
ANR	171053	Identifier	EXPECTED		169956	0					
ANR	171054	ArgumentList	( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0		169956	1					
ANR	171055	Argument	( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0		169956	0					
ANR	171056	EqualityExpression	( func -> op_array . fn_flags & ZEND_ACC_GENERATOR ) == 0		169956	0		==			
ANR	171057	BitAndExpression	func -> op_array . fn_flags & ZEND_ACC_GENERATOR		169956	0		&			
ANR	171058	MemberAccess	func -> op_array . fn_flags		169956	0					
ANR	171059	PtrMemberAccess	func -> op_array		169956	0					
ANR	171060	Identifier	func		169956	0					
ANR	171061	Identifier	op_array		169956	1					
ANR	171062	Identifier	fn_flags		169956	1					
ANR	171063	Identifier	ZEND_ACC_GENERATOR		169956	1					
ANR	171064	PrimaryExpression	0		169956	1					
ANR	171065	CompoundStatement		169:69:5607:5607	169956	1					
ANR	171066	ExpressionStatement	"zend_init_execute_data ( call , & func -> op_array , fci -> retval )"	853:3:24959:25017	169956	0	True				
ANR	171067	CallExpression	"zend_init_execute_data ( call , & func -> op_array , fci -> retval )"		169956	0					
ANR	171068	Callee	zend_init_execute_data		169956	0					
ANR	171069	Identifier	zend_init_execute_data		169956	0					
ANR	171070	ArgumentList	call		169956	1					
ANR	171071	Argument	call		169956	0					
ANR	171072	Identifier	call		169956	0					
ANR	171073	Argument	& func -> op_array		169956	1					
ANR	171074	UnaryOperationExpression	& func -> op_array		169956	0					
ANR	171075	UnaryOperator	&		169956	0					
ANR	171076	PtrMemberAccess	func -> op_array		169956	1					
ANR	171077	Identifier	func		169956	0					
ANR	171078	Identifier	op_array		169956	1					
ANR	171079	Argument	fci -> retval		169956	2					
ANR	171080	PtrMemberAccess	fci -> retval		169956	0					
ANR	171081	Identifier	fci		169956	0					
ANR	171082	Identifier	retval		169956	1					
ANR	171083	ExpressionStatement	zend_execute_ex ( call )	854:3:25022:25043	169956	1	True				
ANR	171084	CallExpression	zend_execute_ex ( call )		169956	0					
ANR	171085	Callee	zend_execute_ex		169956	0					
ANR	171086	Identifier	zend_execute_ex		169956	0					
ANR	171087	ArgumentList	call		169956	1					
ANR	171088	Argument	call		169956	0					
ANR	171089	Identifier	call		169956	0					
ANR	171090	ElseStatement	else		169956	0					
ANR	171091	CompoundStatement		172:9:5707:5707	169956	0					
ANR	171092	ExpressionStatement	"zend_generator_create_zval ( call , & func -> op_array , fci -> retval )"	856:3:25059:25121	169956	0	True				
ANR	171093	CallExpression	"zend_generator_create_zval ( call , & func -> op_array , fci -> retval )"		169956	0					
ANR	171094	Callee	zend_generator_create_zval		169956	0					
ANR	171095	Identifier	zend_generator_create_zval		169956	0					
ANR	171096	ArgumentList	call		169956	1					
ANR	171097	Argument	call		169956	0					
ANR	171098	Identifier	call		169956	0					
ANR	171099	Argument	& func -> op_array		169956	1					
ANR	171100	UnaryOperationExpression	& func -> op_array		169956	0					
ANR	171101	UnaryOperator	&		169956	0					
ANR	171102	PtrMemberAccess	func -> op_array		169956	1					
ANR	171103	Identifier	func		169956	0					
ANR	171104	Identifier	op_array		169956	1					
ANR	171105	Argument	fci -> retval		169956	2					
ANR	171106	PtrMemberAccess	fci -> retval		169956	0					
ANR	171107	Identifier	fci		169956	0					
ANR	171108	Identifier	retval		169956	1					
ANR	171109	IfStatement	if ( call_via_handler )		169956	4					
ANR	171110	Condition	call_via_handler	858:6:25133:25148	169956	0	True				
ANR	171111	Identifier	call_via_handler		169956	0					
ANR	171112	CompoundStatement		175:24:5804:5804	169956	1					
ANR	171113	ExpressionStatement	fci_cache -> initialized = 0	860:3:25202:25228	169956	0	True				
ANR	171114	AssignmentExpression	fci_cache -> initialized = 0		169956	0		=			
ANR	171115	PtrMemberAccess	fci_cache -> initialized		169956	0					
ANR	171116	Identifier	fci_cache		169956	0					
ANR	171117	Identifier	initialized		169956	1					
ANR	171118	PrimaryExpression	0		169956	1					
ANR	171119	ElseStatement	else		169956	0					
ANR	171120	IfStatement	if ( func -> type == ZEND_INTERNAL_FUNCTION )		169956	0					
ANR	171121	Condition	func -> type == ZEND_INTERNAL_FUNCTION	862:12:25246:25281	169956	0	True				
ANR	171122	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		169956	0		==			
ANR	171123	PtrMemberAccess	func -> type		169956	0					
ANR	171124	Identifier	func		169956	0					
ANR	171125	Identifier	type		169956	1					
ANR	171126	Identifier	ZEND_INTERNAL_FUNCTION		169956	1					
ANR	171127	CompoundStatement		180:2:5941:6023	169956	1					
ANR	171128	IdentifierDeclStatement	int call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0 ;	863:2:25288:25370	169956	0	True				
ANR	171129	IdentifierDecl	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		169956	0					
ANR	171130	IdentifierDeclType	int		169956	0					
ANR	171131	Identifier	call_via_handler		169956	1					
ANR	171132	AssignmentExpression	call_via_handler = ( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		169956	2		=			
ANR	171133	Identifier	call_via_handler		169956	0					
ANR	171134	EqualityExpression	( func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		169956	1		!=			
ANR	171135	BitAndExpression	func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		169956	0		&			
ANR	171136	MemberAccess	func -> common . fn_flags		169956	0					
ANR	171137	PtrMemberAccess	func -> common		169956	0					
ANR	171138	Identifier	func		169956	0					
ANR	171139	Identifier	common		169956	1					
ANR	171140	Identifier	fn_flags		169956	1					
ANR	171141	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		169956	1					
ANR	171142	PrimaryExpression	0		169956	1					
ANR	171143	ExpressionStatement	ZVAL_NULL ( fci -> retval )	864:2:25374:25396	169956	1	True				
ANR	171144	CallExpression	ZVAL_NULL ( fci -> retval )		169956	0					
ANR	171145	Callee	ZVAL_NULL		169956	0					
ANR	171146	Identifier	ZVAL_NULL		169956	0					
ANR	171147	ArgumentList	fci -> retval		169956	1					
ANR	171148	Argument	fci -> retval		169956	0					
ANR	171149	PtrMemberAccess	fci -> retval		169956	0					
ANR	171150	Identifier	fci		169956	0					
ANR	171151	Identifier	retval		169956	1					
ANR	171152	IfStatement	if ( func -> common . scope )		169956	2					
ANR	171153	Condition	func -> common . scope	865:6:25404:25421	169956	0	True				
ANR	171154	MemberAccess	func -> common . scope		169956	0					
ANR	171155	PtrMemberAccess	func -> common		169956	0					
ANR	171156	Identifier	func		169956	0					
ANR	171157	Identifier	common		169956	1					
ANR	171158	Identifier	scope		169956	1					
ANR	171159	CompoundStatement		182:26:6077:6077	169956	1					
ANR	171160	ExpressionStatement	EG ( scope ) = func -> common . scope	866:3:25429:25459	169956	0	True				
ANR	171161	AssignmentExpression	EG ( scope ) = func -> common . scope		169956	0		=			
ANR	171162	CallExpression	EG ( scope )		169956	0					
ANR	171163	Callee	EG		169956	0					
ANR	171164	Identifier	EG		169956	0					
ANR	171165	ArgumentList	scope		169956	1					
ANR	171166	Argument	scope		169956	0					
ANR	171167	Identifier	scope		169956	0					
ANR	171168	MemberAccess	func -> common . scope		169956	1					
ANR	171169	PtrMemberAccess	func -> common		169956	0					
ANR	171170	Identifier	func		169956	0					
ANR	171171	Identifier	common		169956	1					
ANR	171172	Identifier	scope		169956	1					
ANR	171173	ExpressionStatement	call -> prev_execute_data = EG ( current_execute_data )	868:2:25467:25517	169956	3	True				
ANR	171174	AssignmentExpression	call -> prev_execute_data = EG ( current_execute_data )		169956	0		=			
ANR	171175	PtrMemberAccess	call -> prev_execute_data		169956	0					
ANR	171176	Identifier	call		169956	0					
ANR	171177	Identifier	prev_execute_data		169956	1					
ANR	171178	CallExpression	EG ( current_execute_data )		169956	1					
ANR	171179	Callee	EG		169956	0					
ANR	171180	Identifier	EG		169956	0					
ANR	171181	ArgumentList	current_execute_data		169956	1					
ANR	171182	Argument	current_execute_data		169956	0					
ANR	171183	Identifier	current_execute_data		169956	0					
ANR	171184	ExpressionStatement	call -> return_value = NULL	869:2:25521:25546	169956	4	True				
ANR	171185	AssignmentExpression	call -> return_value = NULL		169956	0		=			
ANR	171186	PtrMemberAccess	call -> return_value		169956	0					
ANR	171187	Identifier	call		169956	0					
ANR	171188	Identifier	return_value		169956	1					
ANR	171189	Identifier	NULL		169956	1					
ANR	171190	ExpressionStatement	EG ( current_execute_data ) = call	870:2:25587:25618	169956	5	True				
ANR	171191	AssignmentExpression	EG ( current_execute_data ) = call		169956	0		=			
ANR	171192	CallExpression	EG ( current_execute_data )		169956	0					
ANR	171193	Callee	EG		169956	0					
ANR	171194	Identifier	EG		169956	0					
ANR	171195	ArgumentList	current_execute_data		169956	1					
ANR	171196	Argument	current_execute_data		169956	0					
ANR	171197	Identifier	current_execute_data		169956	0					
ANR	171198	Identifier	call		169956	1					
ANR	171199	IfStatement	if ( EXPECTED ( zend_execute_internal == NULL ) )		169956	6					
ANR	171200	Condition	EXPECTED ( zend_execute_internal == NULL )	871:6:25626:25664	169956	0	True				
ANR	171201	CallExpression	EXPECTED ( zend_execute_internal == NULL )		169956	0					
ANR	171202	Callee	EXPECTED		169956	0					
ANR	171203	Identifier	EXPECTED		169956	0					
ANR	171204	ArgumentList	zend_execute_internal == NULL		169956	1					
ANR	171205	Argument	zend_execute_internal == NULL		169956	0					
ANR	171206	EqualityExpression	zend_execute_internal == NULL		169956	0		==			
ANR	171207	Identifier	zend_execute_internal		169956	0					
ANR	171208	Identifier	NULL		169956	1					
ANR	171209	CompoundStatement		188:47:6320:6320	169956	1					
ANR	171210	ExpressionStatement	"func -> internal_function . handler ( call , fci -> retval )"	873:3:25742:25792	169956	0	True				
ANR	171211	CallExpression	"func -> internal_function . handler ( call , fci -> retval )"		169956	0					
ANR	171212	Callee	func -> internal_function . handler		169956	0					
ANR	171213	MemberAccess	func -> internal_function . handler		169956	0					
ANR	171214	PtrMemberAccess	func -> internal_function		169956	0					
ANR	171215	Identifier	func		169956	0					
ANR	171216	Identifier	internal_function		169956	1					
ANR	171217	Identifier	handler		169956	1					
ANR	171218	ArgumentList	call		169956	1					
ANR	171219	Argument	call		169956	0					
ANR	171220	Identifier	call		169956	0					
ANR	171221	Argument	fci -> retval		169956	1					
ANR	171222	PtrMemberAccess	fci -> retval		169956	0					
ANR	171223	Identifier	fci		169956	0					
ANR	171224	Identifier	retval		169956	1					
ANR	171225	ElseStatement	else		169956	0					
ANR	171226	CompoundStatement		191:9:6456:6456	169956	0					
ANR	171227	ExpressionStatement	"zend_execute_internal ( call , fci -> retval )"	875:3:25808:25848	169956	0	True				
ANR	171228	CallExpression	"zend_execute_internal ( call , fci -> retval )"		169956	0					
ANR	171229	Callee	zend_execute_internal		169956	0					
ANR	171230	Identifier	zend_execute_internal		169956	0					
ANR	171231	ArgumentList	call		169956	1					
ANR	171232	Argument	call		169956	0					
ANR	171233	Identifier	call		169956	0					
ANR	171234	Argument	fci -> retval		169956	1					
ANR	171235	PtrMemberAccess	fci -> retval		169956	0					
ANR	171236	Identifier	fci		169956	0					
ANR	171237	Identifier	retval		169956	1					
ANR	171238	ExpressionStatement	EG ( current_execute_data ) = call -> prev_execute_data	877:2:25856:25906	169956	7	True				
ANR	171239	AssignmentExpression	EG ( current_execute_data ) = call -> prev_execute_data		169956	0		=			
ANR	171240	CallExpression	EG ( current_execute_data )		169956	0					
ANR	171241	Callee	EG		169956	0					
ANR	171242	Identifier	EG		169956	0					
ANR	171243	ArgumentList	current_execute_data		169956	1					
ANR	171244	Argument	current_execute_data		169956	0					
ANR	171245	Identifier	current_execute_data		169956	0					
ANR	171246	PtrMemberAccess	call -> prev_execute_data		169956	1					
ANR	171247	Identifier	call		169956	0					
ANR	171248	Identifier	prev_execute_data		169956	1					
ANR	171249	ExpressionStatement	zend_vm_stack_free_args ( call )	878:2:25910:25939	169956	8	True				
ANR	171250	CallExpression	zend_vm_stack_free_args ( call )		169956	0					
ANR	171251	Callee	zend_vm_stack_free_args		169956	0					
ANR	171252	Identifier	zend_vm_stack_free_args		169956	0					
ANR	171253	ArgumentList	call		169956	1					
ANR	171254	Argument	call		169956	0					
ANR	171255	Identifier	call		169956	0					
ANR	171256	IfStatement	if ( EG ( exception ) )		169956	9					
ANR	171257	Condition	EG ( exception )	886:6:26138:26150	169956	0	True				
ANR	171258	CallExpression	EG ( exception )		169956	0					
ANR	171259	Callee	EG		169956	0					
ANR	171260	Identifier	EG		169956	0					
ANR	171261	ArgumentList	exception		169956	1					
ANR	171262	Argument	exception		169956	0					
ANR	171263	Identifier	exception		169956	0					
ANR	171264	CompoundStatement		203:21:6806:6806	169956	1					
ANR	171265	ExpressionStatement	zval_ptr_dtor ( fci -> retval )	887:3:26158:26184	169956	0	True				
ANR	171266	CallExpression	zval_ptr_dtor ( fci -> retval )		169956	0					
ANR	171267	Callee	zval_ptr_dtor		169956	0					
ANR	171268	Identifier	zval_ptr_dtor		169956	0					
ANR	171269	ArgumentList	fci -> retval		169956	1					
ANR	171270	Argument	fci -> retval		169956	0					
ANR	171271	PtrMemberAccess	fci -> retval		169956	0					
ANR	171272	Identifier	fci		169956	0					
ANR	171273	Identifier	retval		169956	1					
ANR	171274	ExpressionStatement	ZVAL_UNDEF ( fci -> retval )	888:3:26189:26212	169956	1	True				
ANR	171275	CallExpression	ZVAL_UNDEF ( fci -> retval )		169956	0					
ANR	171276	Callee	ZVAL_UNDEF		169956	0					
ANR	171277	Identifier	ZVAL_UNDEF		169956	0					
ANR	171278	ArgumentList	fci -> retval		169956	1					
ANR	171279	Argument	fci -> retval		169956	0					
ANR	171280	PtrMemberAccess	fci -> retval		169956	0					
ANR	171281	Identifier	fci		169956	0					
ANR	171282	Identifier	retval		169956	1					
ANR	171283	IfStatement	if ( call_via_handler )		169956	10					
ANR	171284	Condition	call_via_handler	891:6:26225:26240	169956	0	True				
ANR	171285	Identifier	call_via_handler		169956	0					
ANR	171286	CompoundStatement		208:24:6896:6896	169956	1					
ANR	171287	ExpressionStatement	fci_cache -> initialized = 0	893:3:26294:26320	169956	0	True				
ANR	171288	AssignmentExpression	fci_cache -> initialized = 0		169956	0		=			
ANR	171289	PtrMemberAccess	fci_cache -> initialized		169956	0					
ANR	171290	Identifier	fci_cache		169956	0					
ANR	171291	Identifier	initialized		169956	1					
ANR	171292	PrimaryExpression	0		169956	1					
ANR	171293	ElseStatement	else		169956	0					
ANR	171294	CompoundStatement		212:8:6987:6987	169956	0					
ANR	171295	ExpressionStatement	ZVAL_NULL ( fci -> retval )	896:2:26369:26391	169956	0	True				
ANR	171296	CallExpression	ZVAL_NULL ( fci -> retval )		169956	0					
ANR	171297	Callee	ZVAL_NULL		169956	0					
ANR	171298	Identifier	ZVAL_NULL		169956	0					
ANR	171299	ArgumentList	fci -> retval		169956	1					
ANR	171300	Argument	fci -> retval		169956	0					
ANR	171301	PtrMemberAccess	fci -> retval		169956	0					
ANR	171302	Identifier	fci		169956	0					
ANR	171303	Identifier	retval		169956	1					
ANR	171304	IfStatement	if ( fci -> object )		169956	1					
ANR	171305	Condition	fci -> object	899:6:26466:26476	169956	0	True				
ANR	171306	PtrMemberAccess	fci -> object		169956	0					
ANR	171307	Identifier	fci		169956	0					
ANR	171308	Identifier	object		169956	1					
ANR	171309	CompoundStatement		216:19:7132:7132	169956	1					
ANR	171310	ExpressionStatement	call -> prev_execute_data = EG ( current_execute_data )	900:3:26484:26534	169956	0	True				
ANR	171311	AssignmentExpression	call -> prev_execute_data = EG ( current_execute_data )		169956	0		=			
ANR	171312	PtrMemberAccess	call -> prev_execute_data		169956	0					
ANR	171313	Identifier	call		169956	0					
ANR	171314	Identifier	prev_execute_data		169956	1					
ANR	171315	CallExpression	EG ( current_execute_data )		169956	1					
ANR	171316	Callee	EG		169956	0					
ANR	171317	Identifier	EG		169956	0					
ANR	171318	ArgumentList	current_execute_data		169956	1					
ANR	171319	Argument	current_execute_data		169956	0					
ANR	171320	Identifier	current_execute_data		169956	0					
ANR	171321	ExpressionStatement	EG ( current_execute_data ) = call	901:3:26539:26570	169956	1	True				
ANR	171322	AssignmentExpression	EG ( current_execute_data ) = call		169956	0		=			
ANR	171323	CallExpression	EG ( current_execute_data )		169956	0					
ANR	171324	Callee	EG		169956	0					
ANR	171325	Identifier	EG		169956	0					
ANR	171326	ArgumentList	current_execute_data		169956	1					
ANR	171327	Argument	current_execute_data		169956	0					
ANR	171328	Identifier	current_execute_data		169956	0					
ANR	171329	Identifier	call		169956	1					
ANR	171330	ExpressionStatement	"fci -> object -> handlers -> call_method ( func -> common . function_name , fci -> object , call , fci -> retval )"	902:3:26575:26669	169956	2	True				
ANR	171331	CallExpression	"fci -> object -> handlers -> call_method ( func -> common . function_name , fci -> object , call , fci -> retval )"		169956	0					
ANR	171332	Callee	fci -> object -> handlers -> call_method		169956	0					
ANR	171333	PtrMemberAccess	fci -> object -> handlers -> call_method		169956	0					
ANR	171334	PtrMemberAccess	fci -> object -> handlers		169956	0					
ANR	171335	PtrMemberAccess	fci -> object		169956	0					
ANR	171336	Identifier	fci		169956	0					
ANR	171337	Identifier	object		169956	1					
ANR	171338	Identifier	handlers		169956	1					
ANR	171339	Identifier	call_method		169956	1					
ANR	171340	ArgumentList	func -> common . function_name		169956	1					
ANR	171341	Argument	func -> common . function_name		169956	0					
ANR	171342	MemberAccess	func -> common . function_name		169956	0					
ANR	171343	PtrMemberAccess	func -> common		169956	0					
ANR	171344	Identifier	func		169956	0					
ANR	171345	Identifier	common		169956	1					
ANR	171346	Identifier	function_name		169956	1					
ANR	171347	Argument	fci -> object		169956	1					
ANR	171348	PtrMemberAccess	fci -> object		169956	0					
ANR	171349	Identifier	fci		169956	0					
ANR	171350	Identifier	object		169956	1					
ANR	171351	Argument	call		169956	2					
ANR	171352	Identifier	call		169956	0					
ANR	171353	Argument	fci -> retval		169956	3					
ANR	171354	PtrMemberAccess	fci -> retval		169956	0					
ANR	171355	Identifier	fci		169956	0					
ANR	171356	Identifier	retval		169956	1					
ANR	171357	ExpressionStatement	EG ( current_execute_data ) = call -> prev_execute_data	903:3:26674:26724	169956	3	True				
ANR	171358	AssignmentExpression	EG ( current_execute_data ) = call -> prev_execute_data		169956	0		=			
ANR	171359	CallExpression	EG ( current_execute_data )		169956	0					
ANR	171360	Callee	EG		169956	0					
ANR	171361	Identifier	EG		169956	0					
ANR	171362	ArgumentList	current_execute_data		169956	1					
ANR	171363	Argument	current_execute_data		169956	0					
ANR	171364	Identifier	current_execute_data		169956	0					
ANR	171365	PtrMemberAccess	call -> prev_execute_data		169956	1					
ANR	171366	Identifier	call		169956	0					
ANR	171367	Identifier	prev_execute_data		169956	1					
ANR	171368	ElseStatement	else		169956	0					
ANR	171369	CompoundStatement		221:9:7388:7388	169956	0					
ANR	171370	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot call overloaded function for non-object"" )"	905:3:26740:26812	169956	0	True				
ANR	171371	CallExpression	"zend_throw_error ( NULL , ""Cannot call overloaded function for non-object"" )"		169956	0					
ANR	171372	Callee	zend_throw_error		169956	0					
ANR	171373	Identifier	zend_throw_error		169956	0					
ANR	171374	ArgumentList	NULL		169956	1					
ANR	171375	Argument	NULL		169956	0					
ANR	171376	Identifier	NULL		169956	0					
ANR	171377	Argument	"""Cannot call overloaded function for non-object"""		169956	1					
ANR	171378	PrimaryExpression	"""Cannot call overloaded function for non-object"""		169956	0					
ANR	171379	ExpressionStatement	zend_vm_stack_free_args ( call )	908:2:26821:26850	169956	2	True				
ANR	171380	CallExpression	zend_vm_stack_free_args ( call )		169956	0					
ANR	171381	Callee	zend_vm_stack_free_args		169956	0					
ANR	171382	Identifier	zend_vm_stack_free_args		169956	0					
ANR	171383	ArgumentList	call		169956	1					
ANR	171384	Argument	call		169956	0					
ANR	171385	Identifier	call		169956	0					
ANR	171386	IfStatement	if ( func -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY )		169956	3					
ANR	171387	Condition	func -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY	910:6:26859:26906	169956	0	True				
ANR	171388	EqualityExpression	func -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY		169956	0		==			
ANR	171389	PtrMemberAccess	func -> type		169956	0					
ANR	171390	Identifier	func		169956	0					
ANR	171391	Identifier	type		169956	1					
ANR	171392	Identifier	ZEND_OVERLOADED_FUNCTION_TEMPORARY		169956	1					
ANR	171393	CompoundStatement		227:56:7562:7562	169956	1					
ANR	171394	ExpressionStatement	zend_string_release ( func -> common . function_name )	911:3:26914:26961	169956	0	True				
ANR	171395	CallExpression	zend_string_release ( func -> common . function_name )		169956	0					
ANR	171396	Callee	zend_string_release		169956	0					
ANR	171397	Identifier	zend_string_release		169956	0					
ANR	171398	ArgumentList	func -> common . function_name		169956	1					
ANR	171399	Argument	func -> common . function_name		169956	0					
ANR	171400	MemberAccess	func -> common . function_name		169956	0					
ANR	171401	PtrMemberAccess	func -> common		169956	0					
ANR	171402	Identifier	func		169956	0					
ANR	171403	Identifier	common		169956	1					
ANR	171404	Identifier	function_name		169956	1					
ANR	171405	ExpressionStatement	efree ( func )	913:2:26969:26980	169956	4	True				
ANR	171406	CallExpression	efree ( func )		169956	0					
ANR	171407	Callee	efree		169956	0					
ANR	171408	Identifier	efree		169956	0					
ANR	171409	ArgumentList	func		169956	1					
ANR	171410	Argument	func		169956	0					
ANR	171411	Identifier	func		169956	0					
ANR	171412	IfStatement	if ( EG ( exception ) )		169956	5					
ANR	171413	Condition	EG ( exception )	915:6:26989:27001	169956	0	True				
ANR	171414	CallExpression	EG ( exception )		169956	0					
ANR	171415	Callee	EG		169956	0					
ANR	171416	Identifier	EG		169956	0					
ANR	171417	ArgumentList	exception		169956	1					
ANR	171418	Argument	exception		169956	0					
ANR	171419	Identifier	exception		169956	0					
ANR	171420	CompoundStatement		232:21:7657:7657	169956	1					
ANR	171421	ExpressionStatement	zval_ptr_dtor ( fci -> retval )	916:3:27009:27035	169956	0	True				
ANR	171422	CallExpression	zval_ptr_dtor ( fci -> retval )		169956	0					
ANR	171423	Callee	zval_ptr_dtor		169956	0					
ANR	171424	Identifier	zval_ptr_dtor		169956	0					
ANR	171425	ArgumentList	fci -> retval		169956	1					
ANR	171426	Argument	fci -> retval		169956	0					
ANR	171427	PtrMemberAccess	fci -> retval		169956	0					
ANR	171428	Identifier	fci		169956	0					
ANR	171429	Identifier	retval		169956	1					
ANR	171430	ExpressionStatement	ZVAL_UNDEF ( fci -> retval )	917:3:27040:27063	169956	1	True				
ANR	171431	CallExpression	ZVAL_UNDEF ( fci -> retval )		169956	0					
ANR	171432	Callee	ZVAL_UNDEF		169956	0					
ANR	171433	Identifier	ZVAL_UNDEF		169956	0					
ANR	171434	ArgumentList	fci -> retval		169956	1					
ANR	171435	Argument	fci -> retval		169956	0					
ANR	171436	PtrMemberAccess	fci -> retval		169956	0					
ANR	171437	Identifier	fci		169956	0					
ANR	171438	Identifier	retval		169956	1					
ANR	171439	ExpressionStatement	EG ( scope ) = orig_scope	921:1:27074:27096	169956	25	True				
ANR	171440	AssignmentExpression	EG ( scope ) = orig_scope		169956	0		=			
ANR	171441	CallExpression	EG ( scope )		169956	0					
ANR	171442	Callee	EG		169956	0					
ANR	171443	Identifier	EG		169956	0					
ANR	171444	ArgumentList	scope		169956	1					
ANR	171445	Argument	scope		169956	0					
ANR	171446	Identifier	scope		169956	0					
ANR	171447	Identifier	orig_scope		169956	1					
ANR	171448	ExpressionStatement	zend_vm_stack_free_call_frame ( call )	922:1:27099:27134	169956	26	True				
ANR	171449	CallExpression	zend_vm_stack_free_call_frame ( call )		169956	0					
ANR	171450	Callee	zend_vm_stack_free_call_frame		169956	0					
ANR	171451	Identifier	zend_vm_stack_free_call_frame		169956	0					
ANR	171452	ArgumentList	call		169956	1					
ANR	171453	Argument	call		169956	0					
ANR	171454	Identifier	call		169956	0					
ANR	171455	IfStatement	if ( EG ( current_execute_data ) == & dummy_execute_data )		169956	27					
ANR	171456	Condition	EG ( current_execute_data ) == & dummy_execute_data	924:5:27142:27188	169956	0	True				
ANR	171457	EqualityExpression	EG ( current_execute_data ) == & dummy_execute_data		169956	0		==			
ANR	171458	CallExpression	EG ( current_execute_data )		169956	0					
ANR	171459	Callee	EG		169956	0					
ANR	171460	Identifier	EG		169956	0					
ANR	171461	ArgumentList	current_execute_data		169956	1					
ANR	171462	Argument	current_execute_data		169956	0					
ANR	171463	Identifier	current_execute_data		169956	0					
ANR	171464	UnaryOperationExpression	& dummy_execute_data		169956	1					
ANR	171465	UnaryOperator	&		169956	0					
ANR	171466	Identifier	dummy_execute_data		169956	1					
ANR	171467	CompoundStatement		241:54:7844:7844	169956	1					
ANR	171468	ExpressionStatement	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data	925:2:27195:27258	169956	0	True				
ANR	171469	AssignmentExpression	EG ( current_execute_data ) = dummy_execute_data . prev_execute_data		169956	0		=			
ANR	171470	CallExpression	EG ( current_execute_data )		169956	0					
ANR	171471	Callee	EG		169956	0					
ANR	171472	Identifier	EG		169956	0					
ANR	171473	ArgumentList	current_execute_data		169956	1					
ANR	171474	Argument	current_execute_data		169956	0					
ANR	171475	Identifier	current_execute_data		169956	0					
ANR	171476	MemberAccess	dummy_execute_data . prev_execute_data		169956	1					
ANR	171477	Identifier	dummy_execute_data		169956	0					
ANR	171478	Identifier	prev_execute_data		169956	1					
ANR	171479	IfStatement	if ( EG ( exception ) )		169956	28					
ANR	171480	Condition	EG ( exception )	928:5:27269:27281	169956	0	True				
ANR	171481	CallExpression	EG ( exception )		169956	0					
ANR	171482	Callee	EG		169956	0					
ANR	171483	Identifier	EG		169956	0					
ANR	171484	ArgumentList	exception		169956	1					
ANR	171485	Argument	exception		169956	0					
ANR	171486	Identifier	exception		169956	0					
ANR	171487	CompoundStatement		245:20:7937:7937	169956	1					
ANR	171488	ExpressionStatement	zend_throw_exception_internal ( NULL )	929:2:27288:27323	169956	0	True				
ANR	171489	CallExpression	zend_throw_exception_internal ( NULL )		169956	0					
ANR	171490	Callee	zend_throw_exception_internal		169956	0					
ANR	171491	Identifier	zend_throw_exception_internal		169956	0					
ANR	171492	ArgumentList	NULL		169956	1					
ANR	171493	Argument	NULL		169956	0					
ANR	171494	Identifier	NULL		169956	0					
ANR	171495	ReturnStatement	return SUCCESS ;	931:1:27329:27343	169956	29	True				
ANR	171496	Identifier	SUCCESS		169956	0					
ANR	171497	ReturnType	int		169956	1					
ANR	171498	Identifier	zend_call_function		169956	2					
ANR	171499	ParameterList	"zend_fcall_info * fci , zend_fcall_info_cache * fci_cache"		169956	3					
ANR	171500	Parameter	zend_fcall_info * fci	683:23:19280:19299	169956	0	True				
ANR	171501	ParameterType	zend_fcall_info *		169956	0					
ANR	171502	Identifier	fci		169956	1					
ANR	171503	Parameter	zend_fcall_info_cache * fci_cache	683:45:19302:19333	169956	1	True				
ANR	171504	ParameterType	zend_fcall_info_cache *		169956	0					
ANR	171505	Identifier	fci_cache		169956	1					
ANR	171506	CFGEntryNode	ENTRY		169956		True				
ANR	171507	CFGExitNode	EXIT		169956		True				
ANR	171508	Symbol	exception		169956						
ANR	171509	Symbol	& error		169956						
ANR	171510	Symbol	& dummy_execute_data		169956						
ANR	171511	Symbol	ZEND_DO_FCALL_BY_NAME		169956						
ANR	171512	Symbol	EG ( current_execute_data ) -> func -> common . type		169956						
ANR	171513	Symbol	fci -> object -> handle		169956						
ANR	171514	Symbol	* call		169956						
ANR	171515	Symbol	* fci		169956						
ANR	171516	Symbol	ZEND_OVERLOADED_FUNCTION_TEMPORARY		169956						
ANR	171517	Symbol	* * EG		169956						
ANR	171518	Symbol	fci -> symbol_table		169956						
ANR	171519	Symbol	func -> common . scope -> name		169956						
ANR	171520	Symbol	func -> common		169956						
ANR	171521	Symbol	zend_execute_internal		169956						
ANR	171522	Symbol	fci -> object -> handlers		169956						
ANR	171523	Symbol	call_via_handler		169956						
ANR	171524	Symbol	func -> internal_function		169956						
ANR	171525	Symbol	IS_OBJ_VALID		169956						
ANR	171526	Symbol	* * fci		169956						
ANR	171527	Symbol	fci_cache -> called_scope		169956						
ANR	171528	Symbol	active		169956						
ANR	171529	Symbol	* EG ( current_execute_data ) -> opline		169956						
ANR	171530	Symbol	* EG ( current_execute_data ) -> func		169956						
ANR	171531	Symbol	GC_TYPE		169956						
ANR	171532	Symbol	* fci -> object -> handle		169956						
ANR	171533	Symbol	* func -> common . scope		169956						
ANR	171534	Symbol	ZEND_DO_FCALL		169956						
ANR	171535	Symbol	fci -> param_count		169956						
ANR	171536	Symbol	orig_scope		169956						
ANR	171537	Symbol	ZEND_USER_CODE		169956						
ANR	171538	Symbol	fci_cache -> initialized		169956						
ANR	171539	Symbol	& fci -> function_name		169956						
ANR	171540	Symbol	Z_ISREF_P		169956						
ANR	171541	Symbol	dummy_execute_data		169956						
ANR	171542	Symbol	* * fci -> object		169956						
ANR	171543	Symbol	func -> op_array . fn_flags		169956						
ANR	171544	Symbol	zend_is_callable_ex		169956						
ANR	171545	Symbol	dummy_execute_data . call		169956						
ANR	171546	Symbol	* EG		169956						
ANR	171547	Symbol	fci_cache		169956						
ANR	171548	Symbol	EG ( current_execute_data ) -> opline		169956						
ANR	171549	Symbol	fci		169956						
ANR	171550	Symbol	func -> op_array . prototype		169956						
ANR	171551	Symbol	E_WARNING		169956						
ANR	171552	Symbol	func -> common . scope		169956						
ANR	171553	Symbol	Z_OBJ		169956						
ANR	171554	Symbol	arg		169956						
ANR	171555	Symbol	ZEND_CALL_NUM_ARGS		169956						
ANR	171556	Symbol	func -> type		169956						
ANR	171557	Symbol	fci -> no_separation		169956						
ANR	171558	Symbol	func -> common . fn_flags		169956						
ANR	171559	Symbol	SUCCESS		169956						
ANR	171560	Symbol	* func		169956						
ANR	171561	Symbol	EG ( current_execute_data ) -> opline -> opcode		169956						
ANR	171562	Symbol	i		169956						
ANR	171563	Symbol	FAILURE		169956						
ANR	171564	Symbol	* fci_cache		169956						
ANR	171565	Symbol	& func -> op_array		169956						
ANR	171566	Symbol	call		169956						
ANR	171567	Symbol	ZEND_ACC_ABSTRACT		169956						
ANR	171568	Symbol	ZEND_CALL_TOP_FUNCTION		169956						
ANR	171569	Symbol	EG ( current_execute_data ) -> func -> common		169956						
ANR	171570	Symbol	ZEND_DO_ICALL		169956						
ANR	171571	Symbol	* EG ( current_execute_data )		169956						
ANR	171572	Symbol	IS_CALLABLE_CHECK_SILENT		169956						
ANR	171573	Symbol	IS_OBJECT		169956						
ANR	171574	Symbol	fci_cache -> calling_scope		169956						
ANR	171575	Symbol	fci -> object		169956						
ANR	171576	Symbol	call -> This		169956						
ANR	171577	Symbol	ZEND_CALL_CLOSURE		169956						
ANR	171578	Symbol	EG ( current_execute_data ) -> func		169956						
ANR	171579	Symbol	current_execute_data		169956						
ANR	171580	Symbol	ARG_MAY_BE_SENT_BY_REF		169956						
ANR	171581	Symbol	call -> prev_execute_data		169956						
ANR	171582	Symbol	func -> op_array		169956						
ANR	171583	Symbol	ZEND_DO_UCALL		169956						
ANR	171584	Symbol	ZEND_INTERNAL_FUNCTION		169956						
ANR	171585	Symbol	EG ( objects_store ) . object_buckets		169956						
ANR	171586	Symbol	ZEND_ACC_DEPRECATED		169956						
ANR	171587	Symbol	fci_cache -> function_handler		169956						
ANR	171588	Symbol	ZEND_USER_FUNCTION		169956						
ANR	171589	Symbol	& fci_cache_local		169956						
ANR	171590	Symbol	ZEND_ACC_GENERATOR		169956						
ANR	171591	Symbol	calling_scope		169956						
ANR	171592	Symbol	* EG ( objects_store ) . object_buckets		169956						
ANR	171593	Symbol	EG		169956						
ANR	171594	Symbol	NULL		169956						
ANR	171595	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		169956						
ANR	171596	Symbol	* fci -> object		169956						
ANR	171597	Symbol	E_DEPRECATED		169956						
ANR	171598	Symbol	* func -> common		169956						
ANR	171599	Symbol	* error		169956						
ANR	171600	Symbol	call -> symbol_table		169956						
ANR	171601	Symbol	ARG_SHOULD_BE_SENT_BY_REF		169956						
ANR	171602	Symbol	zend_vm_stack_push_call_frame		169956						
ANR	171603	Symbol	ZEND_CALL_ARG		169956						
ANR	171604	Symbol	fci -> size		169956						
ANR	171605	Symbol	* * * fci		169956						
ANR	171606	Symbol	error		169956						
ANR	171607	Symbol	callable_name		169956						
ANR	171608	Symbol	UNEXPECTED		169956						
ANR	171609	Symbol	fci_cache_local		169956						
ANR	171610	Symbol	fci -> retval		169956						
ANR	171611	Symbol	param		169956						
ANR	171612	Symbol	E_CORE_ERROR		169956						
ANR	171613	Symbol	scope		169956						
ANR	171614	Symbol	dummy_execute_data . prev_execute_data		169956						
ANR	171615	Symbol	ZEND_ACC_STATIC		169956						
ANR	171616	Symbol	dummy_execute_data . opline		169956						
ANR	171617	Symbol	GC_REFCOUNT		169956						
ANR	171618	Symbol	Z_OPT_REFCOUNTED_P		169956						
ANR	171619	Symbol	fci -> params		169956						
ANR	171620	Symbol	objects_store		169956						
ANR	171621	Symbol	func -> common . function_name		169956						
ANR	171622	Symbol	* * func		169956						
ANR	171623	Symbol	dummy_execute_data . func		169956						
ANR	171624	Symbol	fci_cache -> object		169956						
ANR	171625	Symbol	ZSTR_VAL		169956						
ANR	171626	Symbol	call -> return_value		169956						
ANR	171627	Symbol	ZEND_ACC_CLOSURE		169956						
ANR	171628	Symbol	func		169956						
ANR	171629	Symbol	Z_REFVAL_P		169956						
ANR	171630	Symbol	EXPECTED		169956						
ANR	171631	Symbol	& callable_name		169956						
ANR	171632	Function	zend_lookup_class_ex	935:0:27358:30786							
ANR	171633	FunctionDef	"zend_lookup_class_ex (zend_string * name , const zval * key , int use_autoload)"		171632	0					
ANR	171634	CompoundStatement		936:0:27470:30786	171632	0					
ANR	171635	IdentifierDeclStatement	zend_class_entry * ce = NULL ;	937:1:27473:27500	171632	0	True				
ANR	171636	IdentifierDecl	* ce = NULL		171632	0					
ANR	171637	IdentifierDeclType	zend_class_entry *		171632	0					
ANR	171638	Identifier	ce		171632	1					
ANR	171639	AssignmentExpression	* ce = NULL		171632	2		=			
ANR	171640	Identifier	NULL		171632	0					
ANR	171641	Identifier	NULL		171632	1					
ANR	171642	IdentifierDeclStatement	zval args [ 1 ] ;	938:1:27503:27515	171632	1	True				
ANR	171643	IdentifierDecl	args [ 1 ]		171632	0					
ANR	171644	IdentifierDeclType	zval [ 1 ]		171632	0					
ANR	171645	Identifier	args		171632	1					
ANR	171646	PrimaryExpression	1		171632	2					
ANR	171647	IdentifierDeclStatement	zval local_retval ;	939:1:27518:27535	171632	2	True				
ANR	171648	IdentifierDecl	local_retval		171632	0					
ANR	171649	IdentifierDeclType	zval		171632	0					
ANR	171650	Identifier	local_retval		171632	1					
ANR	171651	IdentifierDeclStatement	int retval ;	940:1:27538:27548	171632	3	True				
ANR	171652	IdentifierDecl	retval		171632	0					
ANR	171653	IdentifierDeclType	int		171632	0					
ANR	171654	Identifier	retval		171632	1					
ANR	171655	IdentifierDeclStatement	zend_string * lc_name ;	941:1:27551:27571	171632	4	True				
ANR	171656	IdentifierDecl	* lc_name		171632	0					
ANR	171657	IdentifierDeclType	zend_string *		171632	0					
ANR	171658	Identifier	lc_name		171632	1					
ANR	171659	IdentifierDeclStatement	zend_fcall_info fcall_info ;	942:1:27574:27600	171632	5	True				
ANR	171660	IdentifierDecl	fcall_info		171632	0					
ANR	171661	IdentifierDeclType	zend_fcall_info		171632	0					
ANR	171662	Identifier	fcall_info		171632	1					
ANR	171663	IdentifierDeclStatement	zend_fcall_info_cache fcall_cache ;	943:1:27603:27636	171632	6	True				
ANR	171664	IdentifierDecl	fcall_cache		171632	0					
ANR	171665	IdentifierDeclType	zend_fcall_info_cache		171632	0					
ANR	171666	Identifier	fcall_cache		171632	1					
ANR	171667	IfStatement	if ( key )		171632	7					
ANR	171668	Condition	key	945:5:27644:27646	171632	0	True				
ANR	171669	Identifier	key		171632	0					
ANR	171670	CompoundStatement		10:10:178:178	171632	1					
ANR	171671	ExpressionStatement	lc_name = Z_STR_P ( key )	946:2:27653:27675	171632	0	True				
ANR	171672	AssignmentExpression	lc_name = Z_STR_P ( key )		171632	0		=			
ANR	171673	Identifier	lc_name		171632	0					
ANR	171674	CallExpression	Z_STR_P ( key )		171632	1					
ANR	171675	Callee	Z_STR_P		171632	0					
ANR	171676	Identifier	Z_STR_P		171632	0					
ANR	171677	ArgumentList	key		171632	1					
ANR	171678	Argument	key		171632	0					
ANR	171679	Identifier	key		171632	0					
ANR	171680	ElseStatement	else		171632	0					
ANR	171681	CompoundStatement		12:8:214:214	171632	0					
ANR	171682	IfStatement	if ( name == NULL || ! ZSTR_LEN ( name ) )		171632	0					
ANR	171683	Condition	name == NULL || ! ZSTR_LEN ( name )	948:6:27693:27723	171632	0	True				
ANR	171684	OrExpression	name == NULL || ! ZSTR_LEN ( name )		171632	0		||			
ANR	171685	EqualityExpression	name == NULL		171632	0		==			
ANR	171686	Identifier	name		171632	0					
ANR	171687	Identifier	NULL		171632	1					
ANR	171688	UnaryOperationExpression	! ZSTR_LEN ( name )		171632	1					
ANR	171689	UnaryOperator	!		171632	0					
ANR	171690	CallExpression	ZSTR_LEN ( name )		171632	1					
ANR	171691	Callee	ZSTR_LEN		171632	0					
ANR	171692	Identifier	ZSTR_LEN		171632	0					
ANR	171693	ArgumentList	name		171632	1					
ANR	171694	Argument	name		171632	0					
ANR	171695	Identifier	name		171632	0					
ANR	171696	CompoundStatement		13:39:255:255	171632	1					
ANR	171697	ReturnStatement	return NULL ;	949:3:27731:27742	171632	0	True				
ANR	171698	Identifier	NULL		171632	0					
ANR	171699	IfStatement	if ( ZSTR_VAL ( name ) [ 0 ] == '\\\\' )		171632	1					
ANR	171700	Condition	ZSTR_VAL ( name ) [ 0 ] == '\\\\'	952:6:27755:27779	171632	0	True				
ANR	171701	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] == '\\\\'		171632	0		==			
ANR	171702	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		171632	0					
ANR	171703	CallExpression	ZSTR_VAL ( name )		171632	0					
ANR	171704	Callee	ZSTR_VAL		171632	0					
ANR	171705	Identifier	ZSTR_VAL		171632	0					
ANR	171706	ArgumentList	name		171632	1					
ANR	171707	Argument	name		171632	0					
ANR	171708	Identifier	name		171632	0					
ANR	171709	PrimaryExpression	0		171632	1					
ANR	171710	PrimaryExpression	'\\\\'		171632	1					
ANR	171711	CompoundStatement		17:33:311:311	171632	1					
ANR	171712	ExpressionStatement	"lc_name = zend_string_alloc ( ZSTR_LEN ( name ) - 1 , 0 )"	953:3:27787:27837	171632	0	True				
ANR	171713	AssignmentExpression	"lc_name = zend_string_alloc ( ZSTR_LEN ( name ) - 1 , 0 )"		171632	0		=			
ANR	171714	Identifier	lc_name		171632	0					
ANR	171715	CallExpression	"zend_string_alloc ( ZSTR_LEN ( name ) - 1 , 0 )"		171632	1					
ANR	171716	Callee	zend_string_alloc		171632	0					
ANR	171717	Identifier	zend_string_alloc		171632	0					
ANR	171718	ArgumentList	ZSTR_LEN ( name ) - 1		171632	1					
ANR	171719	Argument	ZSTR_LEN ( name ) - 1		171632	0					
ANR	171720	AdditiveExpression	ZSTR_LEN ( name ) - 1		171632	0		-			
ANR	171721	CallExpression	ZSTR_LEN ( name )		171632	0					
ANR	171722	Callee	ZSTR_LEN		171632	0					
ANR	171723	Identifier	ZSTR_LEN		171632	0					
ANR	171724	ArgumentList	name		171632	1					
ANR	171725	Argument	name		171632	0					
ANR	171726	Identifier	name		171632	0					
ANR	171727	PrimaryExpression	1		171632	1					
ANR	171728	Argument	0		171632	1					
ANR	171729	PrimaryExpression	0		171632	0					
ANR	171730	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lc_name ) , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"	954:3:27842:27922	171632	1	True				
ANR	171731	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lc_name ) , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"		171632	0					
ANR	171732	Callee	zend_str_tolower_copy		171632	0					
ANR	171733	Identifier	zend_str_tolower_copy		171632	0					
ANR	171734	ArgumentList	ZSTR_VAL ( lc_name )		171632	1					
ANR	171735	Argument	ZSTR_VAL ( lc_name )		171632	0					
ANR	171736	CallExpression	ZSTR_VAL ( lc_name )		171632	0					
ANR	171737	Callee	ZSTR_VAL		171632	0					
ANR	171738	Identifier	ZSTR_VAL		171632	0					
ANR	171739	ArgumentList	lc_name		171632	1					
ANR	171740	Argument	lc_name		171632	0					
ANR	171741	Identifier	lc_name		171632	0					
ANR	171742	Argument	ZSTR_VAL ( name ) + 1		171632	1					
ANR	171743	AdditiveExpression	ZSTR_VAL ( name ) + 1		171632	0		+			
ANR	171744	CallExpression	ZSTR_VAL ( name )		171632	0					
ANR	171745	Callee	ZSTR_VAL		171632	0					
ANR	171746	Identifier	ZSTR_VAL		171632	0					
ANR	171747	ArgumentList	name		171632	1					
ANR	171748	Argument	name		171632	0					
ANR	171749	Identifier	name		171632	0					
ANR	171750	PrimaryExpression	1		171632	1					
ANR	171751	Argument	ZSTR_LEN ( name ) - 1		171632	2					
ANR	171752	AdditiveExpression	ZSTR_LEN ( name ) - 1		171632	0		-			
ANR	171753	CallExpression	ZSTR_LEN ( name )		171632	0					
ANR	171754	Callee	ZSTR_LEN		171632	0					
ANR	171755	Identifier	ZSTR_LEN		171632	0					
ANR	171756	ArgumentList	name		171632	1					
ANR	171757	Argument	name		171632	0					
ANR	171758	Identifier	name		171632	0					
ANR	171759	PrimaryExpression	1		171632	1					
ANR	171760	ElseStatement	else		171632	0					
ANR	171761	CompoundStatement		20:9:462:462	171632	0					
ANR	171762	ExpressionStatement	lc_name = zend_string_tolower ( name )	956:3:27938:27973	171632	0	True				
ANR	171763	AssignmentExpression	lc_name = zend_string_tolower ( name )		171632	0		=			
ANR	171764	Identifier	lc_name		171632	0					
ANR	171765	CallExpression	zend_string_tolower ( name )		171632	1					
ANR	171766	Callee	zend_string_tolower		171632	0					
ANR	171767	Identifier	zend_string_tolower		171632	0					
ANR	171768	ArgumentList	name		171632	1					
ANR	171769	Argument	name		171632	0					
ANR	171770	Identifier	name		171632	0					
ANR	171771	ExpressionStatement	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"	960:1:27984:28033	171632	8	True				
ANR	171772	AssignmentExpression	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		171632	0		=			
ANR	171773	Identifier	ce		171632	0					
ANR	171774	CallExpression	"zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		171632	1					
ANR	171775	Callee	zend_hash_find_ptr		171632	0					
ANR	171776	Identifier	zend_hash_find_ptr		171632	0					
ANR	171777	ArgumentList	EG ( class_table )		171632	1					
ANR	171778	Argument	EG ( class_table )		171632	0					
ANR	171779	CallExpression	EG ( class_table )		171632	0					
ANR	171780	Callee	EG		171632	0					
ANR	171781	Identifier	EG		171632	0					
ANR	171782	ArgumentList	class_table		171632	1					
ANR	171783	Argument	class_table		171632	0					
ANR	171784	Identifier	class_table		171632	0					
ANR	171785	Argument	lc_name		171632	1					
ANR	171786	Identifier	lc_name		171632	0					
ANR	171787	IfStatement	if ( ce )		171632	9					
ANR	171788	Condition	ce	961:5:28040:28041	171632	0	True				
ANR	171789	Identifier	ce		171632	0					
ANR	171790	CompoundStatement		26:9:573:573	171632	1					
ANR	171791	IfStatement	if ( ! key )		171632	0					
ANR	171792	Condition	! key	962:6:28052:28055	171632	0	True				
ANR	171793	UnaryOperationExpression	! key		171632	0					
ANR	171794	UnaryOperator	!		171632	0					
ANR	171795	Identifier	key		171632	1					
ANR	171796	CompoundStatement		27:12:587:587	171632	1					
ANR	171797	ExpressionStatement	zend_string_release ( lc_name )	963:3:28063:28091	171632	0	True				
ANR	171798	CallExpression	zend_string_release ( lc_name )		171632	0					
ANR	171799	Callee	zend_string_release		171632	0					
ANR	171800	Identifier	zend_string_release		171632	0					
ANR	171801	ArgumentList	lc_name		171632	1					
ANR	171802	Argument	lc_name		171632	0					
ANR	171803	Identifier	lc_name		171632	0					
ANR	171804	ReturnStatement	return ce ;	965:2:28099:28108	171632	1	True				
ANR	171805	Identifier	ce		171632	0					
ANR	171806	IfStatement	if ( ! use_autoload || zend_is_compiling ( ) )		171632	10					
ANR	171807	Condition	! use_autoload || zend_is_compiling ( )	971:5:28255:28290	171632	0	True				
ANR	171808	OrExpression	! use_autoload || zend_is_compiling ( )		171632	0		||			
ANR	171809	UnaryOperationExpression	! use_autoload		171632	0					
ANR	171810	UnaryOperator	!		171632	0					
ANR	171811	Identifier	use_autoload		171632	1					
ANR	171812	CallExpression	zend_is_compiling ( )		171632	1					
ANR	171813	Callee	zend_is_compiling		171632	0					
ANR	171814	Identifier	zend_is_compiling		171632	0					
ANR	171815	ArgumentList			171632	1					
ANR	171816	CompoundStatement		36:43:822:822	171632	1					
ANR	171817	IfStatement	if ( ! key )		171632	0					
ANR	171818	Condition	! key	972:6:28301:28304	171632	0	True				
ANR	171819	UnaryOperationExpression	! key		171632	0					
ANR	171820	UnaryOperator	!		171632	0					
ANR	171821	Identifier	key		171632	1					
ANR	171822	CompoundStatement		37:12:836:836	171632	1					
ANR	171823	ExpressionStatement	zend_string_release ( lc_name )	973:3:28312:28340	171632	0	True				
ANR	171824	CallExpression	zend_string_release ( lc_name )		171632	0					
ANR	171825	Callee	zend_string_release		171632	0					
ANR	171826	Identifier	zend_string_release		171632	0					
ANR	171827	ArgumentList	lc_name		171632	1					
ANR	171828	Argument	lc_name		171632	0					
ANR	171829	Identifier	lc_name		171632	0					
ANR	171830	ReturnStatement	return NULL ;	975:2:28348:28359	171632	1	True				
ANR	171831	Identifier	NULL		171632	0					
ANR	171832	IfStatement	if ( ! EG ( autoload_func ) )		171632	11					
ANR	171833	Condition	! EG ( autoload_func )	978:5:28370:28387	171632	0	True				
ANR	171834	UnaryOperationExpression	! EG ( autoload_func )		171632	0					
ANR	171835	UnaryOperator	!		171632	0					
ANR	171836	CallExpression	EG ( autoload_func )		171632	1					
ANR	171837	Callee	EG		171632	0					
ANR	171838	Identifier	EG		171632	0					
ANR	171839	ArgumentList	autoload_func		171632	1					
ANR	171840	Argument	autoload_func		171632	0					
ANR	171841	Identifier	autoload_func		171632	0					
ANR	171842	CompoundStatement		44:2:923:1049	171632	1					
ANR	171843	IdentifierDeclStatement	"zend_function * func = zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 ) ;"	979:2:28394:28520	171632	0	True				
ANR	171844	IdentifierDecl	"* func = zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 )"		171632	0					
ANR	171845	IdentifierDeclType	zend_function *		171632	0					
ANR	171846	Identifier	func		171632	1					
ANR	171847	AssignmentExpression	"* func = zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 )"		171632	2		=			
ANR	171848	Identifier	func		171632	0					
ANR	171849	CallExpression	"zend_hash_str_find_ptr ( EG ( function_table ) , ZEND_AUTOLOAD_FUNC_NAME , sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1 )"		171632	1					
ANR	171850	Callee	zend_hash_str_find_ptr		171632	0					
ANR	171851	Identifier	zend_hash_str_find_ptr		171632	0					
ANR	171852	ArgumentList	EG ( function_table )		171632	1					
ANR	171853	Argument	EG ( function_table )		171632	0					
ANR	171854	CallExpression	EG ( function_table )		171632	0					
ANR	171855	Callee	EG		171632	0					
ANR	171856	Identifier	EG		171632	0					
ANR	171857	ArgumentList	function_table		171632	1					
ANR	171858	Argument	function_table		171632	0					
ANR	171859	Identifier	function_table		171632	0					
ANR	171860	Argument	ZEND_AUTOLOAD_FUNC_NAME		171632	1					
ANR	171861	Identifier	ZEND_AUTOLOAD_FUNC_NAME		171632	0					
ANR	171862	Argument	sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1		171632	2					
ANR	171863	AdditiveExpression	sizeof ( ZEND_AUTOLOAD_FUNC_NAME ) - 1		171632	0		-			
ANR	171864	SizeofExpression	sizeof ( ZEND_AUTOLOAD_FUNC_NAME )		171632	0					
ANR	171865	Sizeof	sizeof		171632	0					
ANR	171866	SizeofOperand	ZEND_AUTOLOAD_FUNC_NAME		171632	1					
ANR	171867	PrimaryExpression	1		171632	1					
ANR	171868	IfStatement	if ( func )		171632	1					
ANR	171869	Condition	func	980:6:28528:28531	171632	0	True				
ANR	171870	Identifier	func		171632	0					
ANR	171871	CompoundStatement		45:12:1063:1063	171632	1					
ANR	171872	ExpressionStatement	EG ( autoload_func ) = func	981:3:28539:28563	171632	0	True				
ANR	171873	AssignmentExpression	EG ( autoload_func ) = func		171632	0		=			
ANR	171874	CallExpression	EG ( autoload_func )		171632	0					
ANR	171875	Callee	EG		171632	0					
ANR	171876	Identifier	EG		171632	0					
ANR	171877	ArgumentList	autoload_func		171632	1					
ANR	171878	Argument	autoload_func		171632	0					
ANR	171879	Identifier	autoload_func		171632	0					
ANR	171880	Identifier	func		171632	1					
ANR	171881	ElseStatement	else		171632	0					
ANR	171882	CompoundStatement		47:9:1103:1103	171632	0					
ANR	171883	IfStatement	if ( ! key )		171632	0					
ANR	171884	Condition	! key	983:7:28583:28586	171632	0	True				
ANR	171885	UnaryOperationExpression	! key		171632	0					
ANR	171886	UnaryOperator	!		171632	0					
ANR	171887	Identifier	key		171632	1					
ANR	171888	CompoundStatement		48:13:1118:1118	171632	1					
ANR	171889	ExpressionStatement	zend_string_release ( lc_name )	984:4:28595:28623	171632	0	True				
ANR	171890	CallExpression	zend_string_release ( lc_name )		171632	0					
ANR	171891	Callee	zend_string_release		171632	0					
ANR	171892	Identifier	zend_string_release		171632	0					
ANR	171893	ArgumentList	lc_name		171632	1					
ANR	171894	Argument	lc_name		171632	0					
ANR	171895	Identifier	lc_name		171632	0					
ANR	171896	ReturnStatement	return NULL ;	986:3:28633:28644	171632	1	True				
ANR	171897	Identifier	NULL		171632	0					
ANR	171898	IfStatement	"if ( strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" ) != ZSTR_LEN ( name ) )"		171632	12					
ANR	171899	Condition	"strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" ) != ZSTR_LEN ( name )"	992:5:28719:29343	171632	0	True				
ANR	171900	EqualityExpression	"strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" ) != ZSTR_LEN ( name )"		171632	0		!=			
ANR	171901	CallExpression	"strspn ( ZSTR_VAL ( name ) , ""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"" )"		171632	0					
ANR	171902	Callee	strspn		171632	0					
ANR	171903	Identifier	strspn		171632	0					
ANR	171904	ArgumentList	ZSTR_VAL ( name )		171632	1					
ANR	171905	Argument	ZSTR_VAL ( name )		171632	0					
ANR	171906	CallExpression	ZSTR_VAL ( name )		171632	0					
ANR	171907	Callee	ZSTR_VAL		171632	0					
ANR	171908	Identifier	ZSTR_VAL		171632	0					
ANR	171909	ArgumentList	name		171632	1					
ANR	171910	Argument	name		171632	0					
ANR	171911	Identifier	name		171632	0					
ANR	171912	Argument	"""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"""		171632	1					
ANR	171913	PrimaryExpression	"""0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\"""		171632	0					
ANR	171914	CallExpression	ZSTR_LEN ( name )		171632	1					
ANR	171915	Callee	ZSTR_LEN		171632	0					
ANR	171916	Identifier	ZSTR_LEN		171632	0					
ANR	171917	ArgumentList	name		171632	1					
ANR	171918	Argument	name		171632	0					
ANR	171919	Identifier	name		171632	0					
ANR	171920	CompoundStatement		57:632:1875:1875	171632	1					
ANR	171921	IfStatement	if ( ! key )		171632	0					
ANR	171922	Condition	! key	993:6:29354:29357	171632	0	True				
ANR	171923	UnaryOperationExpression	! key		171632	0					
ANR	171924	UnaryOperator	!		171632	0					
ANR	171925	Identifier	key		171632	1					
ANR	171926	CompoundStatement		58:12:1889:1889	171632	1					
ANR	171927	ExpressionStatement	zend_string_release ( lc_name )	994:3:29365:29393	171632	0	True				
ANR	171928	CallExpression	zend_string_release ( lc_name )		171632	0					
ANR	171929	Callee	zend_string_release		171632	0					
ANR	171930	Identifier	zend_string_release		171632	0					
ANR	171931	ArgumentList	lc_name		171632	1					
ANR	171932	Argument	lc_name		171632	0					
ANR	171933	Identifier	lc_name		171632	0					
ANR	171934	ReturnStatement	return NULL ;	996:2:29401:29412	171632	1	True				
ANR	171935	Identifier	NULL		171632	0					
ANR	171936	IfStatement	if ( EG ( in_autoload ) == NULL )		171632	13					
ANR	171937	Condition	EG ( in_autoload ) == NULL	999:5:29423:29445	171632	0	True				
ANR	171938	EqualityExpression	EG ( in_autoload ) == NULL		171632	0		==			
ANR	171939	CallExpression	EG ( in_autoload )		171632	0					
ANR	171940	Callee	EG		171632	0					
ANR	171941	Identifier	EG		171632	0					
ANR	171942	ArgumentList	in_autoload		171632	1					
ANR	171943	Argument	in_autoload		171632	0					
ANR	171944	Identifier	in_autoload		171632	0					
ANR	171945	Identifier	NULL		171632	1					
ANR	171946	CompoundStatement		64:30:1977:1977	171632	1					
ANR	171947	ExpressionStatement	ALLOC_HASHTABLE ( EG ( in_autoload ) )	1000:2:29452:29484	171632	0	True				
ANR	171948	CallExpression	ALLOC_HASHTABLE ( EG ( in_autoload ) )		171632	0					
ANR	171949	Callee	ALLOC_HASHTABLE		171632	0					
ANR	171950	Identifier	ALLOC_HASHTABLE		171632	0					
ANR	171951	ArgumentList	EG ( in_autoload )		171632	1					
ANR	171952	Argument	EG ( in_autoload )		171632	0					
ANR	171953	CallExpression	EG ( in_autoload )		171632	0					
ANR	171954	Callee	EG		171632	0					
ANR	171955	Identifier	EG		171632	0					
ANR	171956	ArgumentList	in_autoload		171632	1					
ANR	171957	Argument	in_autoload		171632	0					
ANR	171958	Identifier	in_autoload		171632	0					
ANR	171959	ExpressionStatement	"zend_hash_init ( EG ( in_autoload ) , 8 , NULL , NULL , 0 )"	1001:2:29488:29537	171632	1	True				
ANR	171960	CallExpression	"zend_hash_init ( EG ( in_autoload ) , 8 , NULL , NULL , 0 )"		171632	0					
ANR	171961	Callee	zend_hash_init		171632	0					
ANR	171962	Identifier	zend_hash_init		171632	0					
ANR	171963	ArgumentList	EG ( in_autoload )		171632	1					
ANR	171964	Argument	EG ( in_autoload )		171632	0					
ANR	171965	CallExpression	EG ( in_autoload )		171632	0					
ANR	171966	Callee	EG		171632	0					
ANR	171967	Identifier	EG		171632	0					
ANR	171968	ArgumentList	in_autoload		171632	1					
ANR	171969	Argument	in_autoload		171632	0					
ANR	171970	Identifier	in_autoload		171632	0					
ANR	171971	Argument	8		171632	1					
ANR	171972	PrimaryExpression	8		171632	0					
ANR	171973	Argument	NULL		171632	2					
ANR	171974	Identifier	NULL		171632	0					
ANR	171975	Argument	NULL		171632	3					
ANR	171976	Identifier	NULL		171632	0					
ANR	171977	Argument	0		171632	4					
ANR	171978	PrimaryExpression	0		171632	0					
ANR	171979	IfStatement	"if ( zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name ) == NULL )"		171632	14					
ANR	171980	Condition	"zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name ) == NULL"	1004:5:29548:29608	171632	0	True				
ANR	171981	EqualityExpression	"zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name ) == NULL"		171632	0		==			
ANR	171982	CallExpression	"zend_hash_add_empty_element ( EG ( in_autoload ) , lc_name )"		171632	0					
ANR	171983	Callee	zend_hash_add_empty_element		171632	0					
ANR	171984	Identifier	zend_hash_add_empty_element		171632	0					
ANR	171985	ArgumentList	EG ( in_autoload )		171632	1					
ANR	171986	Argument	EG ( in_autoload )		171632	0					
ANR	171987	CallExpression	EG ( in_autoload )		171632	0					
ANR	171988	Callee	EG		171632	0					
ANR	171989	Identifier	EG		171632	0					
ANR	171990	ArgumentList	in_autoload		171632	1					
ANR	171991	Argument	in_autoload		171632	0					
ANR	171992	Identifier	in_autoload		171632	0					
ANR	171993	Argument	lc_name		171632	1					
ANR	171994	Identifier	lc_name		171632	0					
ANR	171995	Identifier	NULL		171632	1					
ANR	171996	CompoundStatement		69:68:2140:2140	171632	1					
ANR	171997	IfStatement	if ( ! key )		171632	0					
ANR	171998	Condition	! key	1005:6:29619:29622	171632	0	True				
ANR	171999	UnaryOperationExpression	! key		171632	0					
ANR	172000	UnaryOperator	!		171632	0					
ANR	172001	Identifier	key		171632	1					
ANR	172002	CompoundStatement		70:12:2154:2154	171632	1					
ANR	172003	ExpressionStatement	zend_string_release ( lc_name )	1006:3:29630:29658	171632	0	True				
ANR	172004	CallExpression	zend_string_release ( lc_name )		171632	0					
ANR	172005	Callee	zend_string_release		171632	0					
ANR	172006	Identifier	zend_string_release		171632	0					
ANR	172007	ArgumentList	lc_name		171632	1					
ANR	172008	Argument	lc_name		171632	0					
ANR	172009	Identifier	lc_name		171632	0					
ANR	172010	ReturnStatement	return NULL ;	1008:2:29666:29677	171632	1	True				
ANR	172011	Identifier	NULL		171632	0					
ANR	172012	ExpressionStatement	ZVAL_UNDEF ( & local_retval )	1011:1:29684:29709	171632	15	True				
ANR	172013	CallExpression	ZVAL_UNDEF ( & local_retval )		171632	0					
ANR	172014	Callee	ZVAL_UNDEF		171632	0					
ANR	172015	Identifier	ZVAL_UNDEF		171632	0					
ANR	172016	ArgumentList	& local_retval		171632	1					
ANR	172017	Argument	& local_retval		171632	0					
ANR	172018	UnaryOperationExpression	& local_retval		171632	0					
ANR	172019	UnaryOperator	&		171632	0					
ANR	172020	Identifier	local_retval		171632	1					
ANR	172021	IfStatement	if ( ZSTR_VAL ( name ) [ 0 ] == '\\\\' )		171632	16					
ANR	172022	Condition	ZSTR_VAL ( name ) [ 0 ] == '\\\\'	1013:5:29717:29741	171632	0	True				
ANR	172023	EqualityExpression	ZSTR_VAL ( name ) [ 0 ] == '\\\\'		171632	0		==			
ANR	172024	ArrayIndexing	ZSTR_VAL ( name ) [ 0 ]		171632	0					
ANR	172025	CallExpression	ZSTR_VAL ( name )		171632	0					
ANR	172026	Callee	ZSTR_VAL		171632	0					
ANR	172027	Identifier	ZSTR_VAL		171632	0					
ANR	172028	ArgumentList	name		171632	1					
ANR	172029	Argument	name		171632	0					
ANR	172030	Identifier	name		171632	0					
ANR	172031	PrimaryExpression	0		171632	1					
ANR	172032	PrimaryExpression	'\\\\'		171632	1					
ANR	172033	CompoundStatement		78:32:2273:2273	171632	1					
ANR	172034	ExpressionStatement	"ZVAL_STRINGL ( & args [ 0 ] , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"	1014:2:29748:29810	171632	0	True				
ANR	172035	CallExpression	"ZVAL_STRINGL ( & args [ 0 ] , ZSTR_VAL ( name ) + 1 , ZSTR_LEN ( name ) - 1 )"		171632	0					
ANR	172036	Callee	ZVAL_STRINGL		171632	0					
ANR	172037	Identifier	ZVAL_STRINGL		171632	0					
ANR	172038	ArgumentList	& args [ 0 ]		171632	1					
ANR	172039	Argument	& args [ 0 ]		171632	0					
ANR	172040	UnaryOperationExpression	& args [ 0 ]		171632	0					
ANR	172041	UnaryOperator	&		171632	0					
ANR	172042	ArrayIndexing	args [ 0 ]		171632	1					
ANR	172043	Identifier	args		171632	0					
ANR	172044	PrimaryExpression	0		171632	1					
ANR	172045	Argument	ZSTR_VAL ( name ) + 1		171632	1					
ANR	172046	AdditiveExpression	ZSTR_VAL ( name ) + 1		171632	0		+			
ANR	172047	CallExpression	ZSTR_VAL ( name )		171632	0					
ANR	172048	Callee	ZSTR_VAL		171632	0					
ANR	172049	Identifier	ZSTR_VAL		171632	0					
ANR	172050	ArgumentList	name		171632	1					
ANR	172051	Argument	name		171632	0					
ANR	172052	Identifier	name		171632	0					
ANR	172053	PrimaryExpression	1		171632	1					
ANR	172054	Argument	ZSTR_LEN ( name ) - 1		171632	2					
ANR	172055	AdditiveExpression	ZSTR_LEN ( name ) - 1		171632	0		-			
ANR	172056	CallExpression	ZSTR_LEN ( name )		171632	0					
ANR	172057	Callee	ZSTR_LEN		171632	0					
ANR	172058	Identifier	ZSTR_LEN		171632	0					
ANR	172059	ArgumentList	name		171632	1					
ANR	172060	Argument	name		171632	0					
ANR	172061	Identifier	name		171632	0					
ANR	172062	PrimaryExpression	1		171632	1					
ANR	172063	ElseStatement	else		171632	0					
ANR	172064	CompoundStatement		80:8:2349:2349	171632	0					
ANR	172065	ExpressionStatement	"ZVAL_STR_COPY ( & args [ 0 ] , name )"	1016:2:29824:29853	171632	0	True				
ANR	172066	CallExpression	"ZVAL_STR_COPY ( & args [ 0 ] , name )"		171632	0					
ANR	172067	Callee	ZVAL_STR_COPY		171632	0					
ANR	172068	Identifier	ZVAL_STR_COPY		171632	0					
ANR	172069	ArgumentList	& args [ 0 ]		171632	1					
ANR	172070	Argument	& args [ 0 ]		171632	0					
ANR	172071	UnaryOperationExpression	& args [ 0 ]		171632	0					
ANR	172072	UnaryOperator	&		171632	0					
ANR	172073	ArrayIndexing	args [ 0 ]		171632	1					
ANR	172074	Identifier	args		171632	0					
ANR	172075	PrimaryExpression	0		171632	1					
ANR	172076	Argument	name		171632	1					
ANR	172077	Identifier	name		171632	0					
ANR	172078	ExpressionStatement	fcall_info . size = sizeof ( fcall_info )	1019:1:29860:29896	171632	17	True				
ANR	172079	AssignmentExpression	fcall_info . size = sizeof ( fcall_info )		171632	0		=			
ANR	172080	MemberAccess	fcall_info . size		171632	0					
ANR	172081	Identifier	fcall_info		171632	0					
ANR	172082	Identifier	size		171632	1					
ANR	172083	SizeofExpression	sizeof ( fcall_info )		171632	1					
ANR	172084	Sizeof	sizeof		171632	0					
ANR	172085	SizeofOperand	fcall_info		171632	1					
ANR	172086	ExpressionStatement	fcall_info . function_table = EG ( function_table )	1020:1:29899:29945	171632	18	True				
ANR	172087	AssignmentExpression	fcall_info . function_table = EG ( function_table )		171632	0		=			
ANR	172088	MemberAccess	fcall_info . function_table		171632	0					
ANR	172089	Identifier	fcall_info		171632	0					
ANR	172090	Identifier	function_table		171632	1					
ANR	172091	CallExpression	EG ( function_table )		171632	1					
ANR	172092	Callee	EG		171632	0					
ANR	172093	Identifier	EG		171632	0					
ANR	172094	ArgumentList	function_table		171632	1					
ANR	172095	Argument	function_table		171632	0					
ANR	172096	Identifier	function_table		171632	0					
ANR	172097	ExpressionStatement	"ZVAL_STR_COPY ( & fcall_info . function_name , EG ( autoload_func ) -> common . function_name )"	1021:1:29948:30029	171632	19	True				
ANR	172098	CallExpression	"ZVAL_STR_COPY ( & fcall_info . function_name , EG ( autoload_func ) -> common . function_name )"		171632	0					
ANR	172099	Callee	ZVAL_STR_COPY		171632	0					
ANR	172100	Identifier	ZVAL_STR_COPY		171632	0					
ANR	172101	ArgumentList	& fcall_info . function_name		171632	1					
ANR	172102	Argument	& fcall_info . function_name		171632	0					
ANR	172103	UnaryOperationExpression	& fcall_info . function_name		171632	0					
ANR	172104	UnaryOperator	&		171632	0					
ANR	172105	MemberAccess	fcall_info . function_name		171632	1					
ANR	172106	Identifier	fcall_info		171632	0					
ANR	172107	Identifier	function_name		171632	1					
ANR	172108	Argument	EG ( autoload_func ) -> common . function_name		171632	1					
ANR	172109	MemberAccess	EG ( autoload_func ) -> common . function_name		171632	0					
ANR	172110	PtrMemberAccess	EG ( autoload_func ) -> common		171632	0					
ANR	172111	CallExpression	EG ( autoload_func )		171632	0					
ANR	172112	Callee	EG		171632	0					
ANR	172113	Identifier	EG		171632	0					
ANR	172114	ArgumentList	autoload_func		171632	1					
ANR	172115	Argument	autoload_func		171632	0					
ANR	172116	Identifier	autoload_func		171632	0					
ANR	172117	Identifier	common		171632	1					
ANR	172118	Identifier	function_name		171632	1					
ANR	172119	ExpressionStatement	fcall_info . symbol_table = NULL	1022:1:30032:30062	171632	20	True				
ANR	172120	AssignmentExpression	fcall_info . symbol_table = NULL		171632	0		=			
ANR	172121	MemberAccess	fcall_info . symbol_table		171632	0					
ANR	172122	Identifier	fcall_info		171632	0					
ANR	172123	Identifier	symbol_table		171632	1					
ANR	172124	Identifier	NULL		171632	1					
ANR	172125	ExpressionStatement	fcall_info . retval = & local_retval	1023:1:30065:30098	171632	21	True				
ANR	172126	AssignmentExpression	fcall_info . retval = & local_retval		171632	0		=			
ANR	172127	MemberAccess	fcall_info . retval		171632	0					
ANR	172128	Identifier	fcall_info		171632	0					
ANR	172129	Identifier	retval		171632	1					
ANR	172130	UnaryOperationExpression	& local_retval		171632	1					
ANR	172131	UnaryOperator	&		171632	0					
ANR	172132	Identifier	local_retval		171632	1					
ANR	172133	ExpressionStatement	fcall_info . param_count = 1	1024:1:30101:30127	171632	22	True				
ANR	172134	AssignmentExpression	fcall_info . param_count = 1		171632	0		=			
ANR	172135	MemberAccess	fcall_info . param_count		171632	0					
ANR	172136	Identifier	fcall_info		171632	0					
ANR	172137	Identifier	param_count		171632	1					
ANR	172138	PrimaryExpression	1		171632	1					
ANR	172139	ExpressionStatement	fcall_info . params = args	1025:1:30130:30154	171632	23	True				
ANR	172140	AssignmentExpression	fcall_info . params = args		171632	0		=			
ANR	172141	MemberAccess	fcall_info . params		171632	0					
ANR	172142	Identifier	fcall_info		171632	0					
ANR	172143	Identifier	params		171632	1					
ANR	172144	Identifier	args		171632	1					
ANR	172145	ExpressionStatement	fcall_info . object = NULL	1026:1:30157:30181	171632	24	True				
ANR	172146	AssignmentExpression	fcall_info . object = NULL		171632	0		=			
ANR	172147	MemberAccess	fcall_info . object		171632	0					
ANR	172148	Identifier	fcall_info		171632	0					
ANR	172149	Identifier	object		171632	1					
ANR	172150	Identifier	NULL		171632	1					
ANR	172151	ExpressionStatement	fcall_info . no_separation = 1	1027:1:30184:30212	171632	25	True				
ANR	172152	AssignmentExpression	fcall_info . no_separation = 1		171632	0		=			
ANR	172153	MemberAccess	fcall_info . no_separation		171632	0					
ANR	172154	Identifier	fcall_info		171632	0					
ANR	172155	Identifier	no_separation		171632	1					
ANR	172156	PrimaryExpression	1		171632	1					
ANR	172157	ExpressionStatement	fcall_cache . initialized = 1	1029:1:30216:30243	171632	26	True				
ANR	172158	AssignmentExpression	fcall_cache . initialized = 1		171632	0		=			
ANR	172159	MemberAccess	fcall_cache . initialized		171632	0					
ANR	172160	Identifier	fcall_cache		171632	0					
ANR	172161	Identifier	initialized		171632	1					
ANR	172162	PrimaryExpression	1		171632	1					
ANR	172163	ExpressionStatement	fcall_cache . function_handler = EG ( autoload_func )	1030:1:30246:30294	171632	27	True				
ANR	172164	AssignmentExpression	fcall_cache . function_handler = EG ( autoload_func )		171632	0		=			
ANR	172165	MemberAccess	fcall_cache . function_handler		171632	0					
ANR	172166	Identifier	fcall_cache		171632	0					
ANR	172167	Identifier	function_handler		171632	1					
ANR	172168	CallExpression	EG ( autoload_func )		171632	1					
ANR	172169	Callee	EG		171632	0					
ANR	172170	Identifier	EG		171632	0					
ANR	172171	ArgumentList	autoload_func		171632	1					
ANR	172172	Argument	autoload_func		171632	0					
ANR	172173	Identifier	autoload_func		171632	0					
ANR	172174	ExpressionStatement	fcall_cache . calling_scope = NULL	1031:1:30297:30329	171632	28	True				
ANR	172175	AssignmentExpression	fcall_cache . calling_scope = NULL		171632	0		=			
ANR	172176	MemberAccess	fcall_cache . calling_scope		171632	0					
ANR	172177	Identifier	fcall_cache		171632	0					
ANR	172178	Identifier	calling_scope		171632	1					
ANR	172179	Identifier	NULL		171632	1					
ANR	172180	ExpressionStatement	fcall_cache . called_scope = NULL	1032:1:30332:30363	171632	29	True				
ANR	172181	AssignmentExpression	fcall_cache . called_scope = NULL		171632	0		=			
ANR	172182	MemberAccess	fcall_cache . called_scope		171632	0					
ANR	172183	Identifier	fcall_cache		171632	0					
ANR	172184	Identifier	called_scope		171632	1					
ANR	172185	Identifier	NULL		171632	1					
ANR	172186	ExpressionStatement	fcall_cache . object = NULL	1033:1:30366:30391	171632	30	True				
ANR	172187	AssignmentExpression	fcall_cache . object = NULL		171632	0		=			
ANR	172188	MemberAccess	fcall_cache . object		171632	0					
ANR	172189	Identifier	fcall_cache		171632	0					
ANR	172190	Identifier	object		171632	1					
ANR	172191	Identifier	NULL		171632	1					
ANR	172192	ExpressionStatement	zend_exception_save ( )	1035:1:30395:30416	171632	31	True				
ANR	172193	CallExpression	zend_exception_save ( )		171632	0					
ANR	172194	Callee	zend_exception_save		171632	0					
ANR	172195	Identifier	zend_exception_save		171632	0					
ANR	172196	ArgumentList			171632	1					
ANR	172197	ExpressionStatement	"retval = zend_call_function ( & fcall_info , & fcall_cache )"	1036:1:30419:30473	171632	32	True				
ANR	172198	AssignmentExpression	"retval = zend_call_function ( & fcall_info , & fcall_cache )"		171632	0		=			
ANR	172199	Identifier	retval		171632	0					
ANR	172200	CallExpression	"zend_call_function ( & fcall_info , & fcall_cache )"		171632	1					
ANR	172201	Callee	zend_call_function		171632	0					
ANR	172202	Identifier	zend_call_function		171632	0					
ANR	172203	ArgumentList	& fcall_info		171632	1					
ANR	172204	Argument	& fcall_info		171632	0					
ANR	172205	UnaryOperationExpression	& fcall_info		171632	0					
ANR	172206	UnaryOperator	&		171632	0					
ANR	172207	Identifier	fcall_info		171632	1					
ANR	172208	Argument	& fcall_cache		171632	1					
ANR	172209	UnaryOperationExpression	& fcall_cache		171632	0					
ANR	172210	UnaryOperator	&		171632	0					
ANR	172211	Identifier	fcall_cache		171632	1					
ANR	172212	ExpressionStatement	zend_exception_restore ( )	1037:1:30476:30500	171632	33	True				
ANR	172213	CallExpression	zend_exception_restore ( )		171632	0					
ANR	172214	Callee	zend_exception_restore		171632	0					
ANR	172215	Identifier	zend_exception_restore		171632	0					
ANR	172216	ArgumentList			171632	1					
ANR	172217	ExpressionStatement	zval_ptr_dtor ( & args [ 0 ] )	1039:1:30504:30527	171632	34	True				
ANR	172218	CallExpression	zval_ptr_dtor ( & args [ 0 ] )		171632	0					
ANR	172219	Callee	zval_ptr_dtor		171632	0					
ANR	172220	Identifier	zval_ptr_dtor		171632	0					
ANR	172221	ArgumentList	& args [ 0 ]		171632	1					
ANR	172222	Argument	& args [ 0 ]		171632	0					
ANR	172223	UnaryOperationExpression	& args [ 0 ]		171632	0					
ANR	172224	UnaryOperator	&		171632	0					
ANR	172225	ArrayIndexing	args [ 0 ]		171632	1					
ANR	172226	Identifier	args		171632	0					
ANR	172227	PrimaryExpression	0		171632	1					
ANR	172228	ExpressionStatement	zval_dtor ( & fcall_info . function_name )	1040:1:30530:30566	171632	35	True				
ANR	172229	CallExpression	zval_dtor ( & fcall_info . function_name )		171632	0					
ANR	172230	Callee	zval_dtor		171632	0					
ANR	172231	Identifier	zval_dtor		171632	0					
ANR	172232	ArgumentList	& fcall_info . function_name		171632	1					
ANR	172233	Argument	& fcall_info . function_name		171632	0					
ANR	172234	UnaryOperationExpression	& fcall_info . function_name		171632	0					
ANR	172235	UnaryOperator	&		171632	0					
ANR	172236	MemberAccess	fcall_info . function_name		171632	1					
ANR	172237	Identifier	fcall_info		171632	0					
ANR	172238	Identifier	function_name		171632	1					
ANR	172239	ExpressionStatement	"zend_hash_del ( EG ( in_autoload ) , lc_name )"	1042:1:30570:30609	171632	36	True				
ANR	172240	CallExpression	"zend_hash_del ( EG ( in_autoload ) , lc_name )"		171632	0					
ANR	172241	Callee	zend_hash_del		171632	0					
ANR	172242	Identifier	zend_hash_del		171632	0					
ANR	172243	ArgumentList	EG ( in_autoload )		171632	1					
ANR	172244	Argument	EG ( in_autoload )		171632	0					
ANR	172245	CallExpression	EG ( in_autoload )		171632	0					
ANR	172246	Callee	EG		171632	0					
ANR	172247	Identifier	EG		171632	0					
ANR	172248	ArgumentList	in_autoload		171632	1					
ANR	172249	Argument	in_autoload		171632	0					
ANR	172250	Identifier	in_autoload		171632	0					
ANR	172251	Argument	lc_name		171632	1					
ANR	172252	Identifier	lc_name		171632	0					
ANR	172253	ExpressionStatement	zval_ptr_dtor ( & local_retval )	1044:1:30613:30641	171632	37	True				
ANR	172254	CallExpression	zval_ptr_dtor ( & local_retval )		171632	0					
ANR	172255	Callee	zval_ptr_dtor		171632	0					
ANR	172256	Identifier	zval_ptr_dtor		171632	0					
ANR	172257	ArgumentList	& local_retval		171632	1					
ANR	172258	Argument	& local_retval		171632	0					
ANR	172259	UnaryOperationExpression	& local_retval		171632	0					
ANR	172260	UnaryOperator	&		171632	0					
ANR	172261	Identifier	local_retval		171632	1					
ANR	172262	IfStatement	if ( retval == SUCCESS )		171632	38					
ANR	172263	Condition	retval == SUCCESS	1046:5:30649:30665	171632	0	True				
ANR	172264	EqualityExpression	retval == SUCCESS		171632	0		==			
ANR	172265	Identifier	retval		171632	0					
ANR	172266	Identifier	SUCCESS		171632	1					
ANR	172267	CompoundStatement		111:24:3197:3197	171632	1					
ANR	172268	ExpressionStatement	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"	1047:2:30672:30721	171632	0	True				
ANR	172269	AssignmentExpression	"ce = zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		171632	0		=			
ANR	172270	Identifier	ce		171632	0					
ANR	172271	CallExpression	"zend_hash_find_ptr ( EG ( class_table ) , lc_name )"		171632	1					
ANR	172272	Callee	zend_hash_find_ptr		171632	0					
ANR	172273	Identifier	zend_hash_find_ptr		171632	0					
ANR	172274	ArgumentList	EG ( class_table )		171632	1					
ANR	172275	Argument	EG ( class_table )		171632	0					
ANR	172276	CallExpression	EG ( class_table )		171632	0					
ANR	172277	Callee	EG		171632	0					
ANR	172278	Identifier	EG		171632	0					
ANR	172279	ArgumentList	class_table		171632	1					
ANR	172280	Argument	class_table		171632	0					
ANR	172281	Identifier	class_table		171632	0					
ANR	172282	Argument	lc_name		171632	1					
ANR	172283	Identifier	lc_name		171632	0					
ANR	172284	IfStatement	if ( ! key )		171632	39					
ANR	172285	Condition	! key	1049:5:30731:30734	171632	0	True				
ANR	172286	UnaryOperationExpression	! key		171632	0					
ANR	172287	UnaryOperator	!		171632	0					
ANR	172288	Identifier	key		171632	1					
ANR	172289	CompoundStatement		114:11:3266:3266	171632	1					
ANR	172290	ExpressionStatement	zend_string_release ( lc_name )	1050:2:30741:30769	171632	0	True				
ANR	172291	CallExpression	zend_string_release ( lc_name )		171632	0					
ANR	172292	Callee	zend_string_release		171632	0					
ANR	172293	Identifier	zend_string_release		171632	0					
ANR	172294	ArgumentList	lc_name		171632	1					
ANR	172295	Argument	lc_name		171632	0					
ANR	172296	Identifier	lc_name		171632	0					
ANR	172297	ReturnStatement	return ce ;	1052:1:30775:30784	171632	40	True				
ANR	172298	Identifier	ce		171632	0					
ANR	172299	ReturnType	ZEND_API zend_class_entry *		171632	1					
ANR	172300	Identifier	zend_lookup_class_ex		171632	2					
ANR	172301	ParameterList	"zend_string * name , const zval * key , int use_autoload"		171632	3					
ANR	172302	Parameter	zend_string * name	935:48:27406:27422	171632	0	True				
ANR	172303	ParameterType	zend_string *		171632	0					
ANR	172304	Identifier	name		171632	1					
ANR	172305	Parameter	const zval * key	935:67:27425:27439	171632	1	True				
ANR	172306	ParameterType	const zval *		171632	0					
ANR	172307	Identifier	key		171632	1					
ANR	172308	Parameter	int use_autoload	935:84:27442:27457	171632	2	True				
ANR	172309	ParameterType	int		171632	0					
ANR	172310	Identifier	use_autoload		171632	1					
ANR	172311	CFGEntryNode	ENTRY		171632		True				
ANR	172312	CFGExitNode	EXIT		171632		True				
ANR	172313	Symbol	fcall_info . object		171632						
ANR	172314	Symbol	fcall_info . no_separation		171632						
ANR	172315	Symbol	zend_string_tolower		171632						
ANR	172316	Symbol	fcall_cache . initialized		171632						
ANR	172317	Symbol	zend_hash_add_empty_element		171632						
ANR	172318	Symbol	fcall_cache		171632						
ANR	172319	Symbol	& local_retval		171632						
ANR	172320	Symbol	local_retval		171632						
ANR	172321	Symbol	zend_call_function		171632						
ANR	172322	Symbol	zend_hash_find_ptr		171632						
ANR	172323	Symbol	* ZSTR_VAL		171632						
ANR	172324	Symbol	zend_string_alloc		171632						
ANR	172325	Symbol	EG		171632						
ANR	172326	Symbol	NULL		171632						
ANR	172327	Symbol	zend_is_compiling		171632						
ANR	172328	Symbol	fcall_cache . calling_scope		171632						
ANR	172329	Symbol	EG ( autoload_func ) -> common . function_name		171632						
ANR	172330	Symbol	lc_name		171632						
ANR	172331	Symbol	fcall_info		171632						
ANR	172332	Symbol	retval		171632						
ANR	172333	Symbol	autoload_func		171632						
ANR	172334	Symbol	strspn		171632						
ANR	172335	Symbol	& fcall_cache		171632						
ANR	172336	Symbol	name		171632						
ANR	172337	Symbol	Z_STR_P		171632						
ANR	172338	Symbol	fcall_cache . object		171632						
ANR	172339	Symbol	function_table		171632						
ANR	172340	Symbol	fcall_info . params		171632						
ANR	172341	Symbol	fcall_info . retval		171632						
ANR	172342	Symbol	& fcall_info . function_name		171632						
ANR	172343	Symbol	fcall_info . symbol_table		171632						
ANR	172344	Symbol	* EG		171632						
ANR	172345	Symbol	fcall_info . param_count		171632						
ANR	172346	Symbol	zend_hash_str_find_ptr		171632						
ANR	172347	Symbol	use_autoload		171632						
ANR	172348	Symbol	& fcall_info		171632						
ANR	172349	Symbol	class_table		171632						
ANR	172350	Symbol	ZEND_AUTOLOAD_FUNC_NAME		171632						
ANR	172351	Symbol	key		171632						
ANR	172352	Symbol	fcall_cache . function_handler		171632						
ANR	172353	Symbol	ce		171632						
ANR	172354	Symbol	in_autoload		171632						
ANR	172355	Symbol	SUCCESS		171632						
ANR	172356	Symbol	fcall_info . size		171632						
ANR	172357	Symbol	fcall_cache . called_scope		171632						
ANR	172358	Symbol	ZSTR_VAL		171632						
ANR	172359	Symbol	fcall_info . function_table		171632						
ANR	172360	Symbol	args		171632						
ANR	172361	Symbol	func		171632						
ANR	172362	Symbol	ZSTR_LEN		171632						
ANR	172363	Symbol	EG ( autoload_func ) -> common		171632						
ANR	172364	Function	zend_lookup_class	1056:0:30799:30920							
ANR	172365	FunctionDef	zend_lookup_class (zend_string * name)		172364	0					
ANR	172366	CompoundStatement		1057:0:30873:30920	172364	0					
ANR	172367	ReturnStatement	"return zend_lookup_class_ex ( name , NULL , 1 ) ;"	1058:1:30876:30918	172364	0	True				
ANR	172368	CallExpression	"zend_lookup_class_ex ( name , NULL , 1 )"		172364	0					
ANR	172369	Callee	zend_lookup_class_ex		172364	0					
ANR	172370	Identifier	zend_lookup_class_ex		172364	0					
ANR	172371	ArgumentList	name		172364	1					
ANR	172372	Argument	name		172364	0					
ANR	172373	Identifier	name		172364	0					
ANR	172374	Argument	NULL		172364	1					
ANR	172375	Identifier	NULL		172364	0					
ANR	172376	Argument	1		172364	2					
ANR	172377	PrimaryExpression	1		172364	0					
ANR	172378	ReturnType	ZEND_API zend_class_entry *		172364	1					
ANR	172379	Identifier	zend_lookup_class		172364	2					
ANR	172380	ParameterList	zend_string * name		172364	3					
ANR	172381	Parameter	zend_string * name	1056:45:30844:30860	172364	0	True				
ANR	172382	ParameterType	zend_string *		172364	0					
ANR	172383	Identifier	name		172364	1					
ANR	172384	CFGEntryNode	ENTRY		172364		True				
ANR	172385	CFGExitNode	EXIT		172364		True				
ANR	172386	Symbol	zend_lookup_class_ex		172364						
ANR	172387	Symbol	NULL		172364						
ANR	172388	Symbol	name		172364						
ANR	172389	Function	zend_get_called_scope	1062:0:30933:31272							
ANR	172390	FunctionDef	zend_get_called_scope (zend_execute_data * ex)		172389	0					
ANR	172391	CompoundStatement		1063:0:31015:31272	172389	0					
ANR	172392	WhileStatement	while ( ex )		172389	0					
ANR	172393	Condition	ex	1064:8:31025:31026	172389	0	True				
ANR	172394	Identifier	ex		172389	0					
ANR	172395	CompoundStatement		2:12:13:13	172389	1					
ANR	172396	IfStatement	if ( ex -> called_scope )		172389	0					
ANR	172397	Condition	ex -> called_scope	1065:6:31037:31052	172389	0	True				
ANR	172398	PtrMemberAccess	ex -> called_scope		172389	0					
ANR	172399	Identifier	ex		172389	0					
ANR	172400	Identifier	called_scope		172389	1					
ANR	172401	CompoundStatement		3:24:39:39	172389	1					
ANR	172402	ReturnStatement	return ex -> called_scope ;	1066:3:31060:31083	172389	0	True				
ANR	172403	PtrMemberAccess	ex -> called_scope		172389	0					
ANR	172404	Identifier	ex		172389	0					
ANR	172405	Identifier	called_scope		172389	1					
ANR	172406	ElseStatement	else		172389	0					
ANR	172407	IfStatement	if ( ex -> func )		172389	0					
ANR	172408	Condition	ex -> func	1067:13:31098:31105	172389	0	True				
ANR	172409	PtrMemberAccess	ex -> func		172389	0					
ANR	172410	Identifier	ex		172389	0					
ANR	172411	Identifier	func		172389	1					
ANR	172412	CompoundStatement		5:23:92:92	172389	1					
ANR	172413	IfStatement	if ( ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope )		172389	0					
ANR	172414	Condition	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope	1068:7:31117:31182	172389	0	True				
ANR	172415	OrExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope		172389	0		||			
ANR	172416	EqualityExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION		172389	0		!=			
ANR	172417	PtrMemberAccess	ex -> func -> type		172389	0					
ANR	172418	PtrMemberAccess	ex -> func		172389	0					
ANR	172419	Identifier	ex		172389	0					
ANR	172420	Identifier	func		172389	1					
ANR	172421	Identifier	type		172389	1					
ANR	172422	Identifier	ZEND_INTERNAL_FUNCTION		172389	1					
ANR	172423	MemberAccess	ex -> func -> common . scope		172389	1					
ANR	172424	PtrMemberAccess	ex -> func -> common		172389	0					
ANR	172425	PtrMemberAccess	ex -> func		172389	0					
ANR	172426	Identifier	ex		172389	0					
ANR	172427	Identifier	func		172389	1					
ANR	172428	Identifier	common		172389	1					
ANR	172429	Identifier	scope		172389	1					
ANR	172430	CompoundStatement		6:75:169:169	172389	1					
ANR	172431	ReturnStatement	return ex -> called_scope ;	1069:4:31191:31214	172389	0	True				
ANR	172432	PtrMemberAccess	ex -> called_scope		172389	0					
ANR	172433	Identifier	ex		172389	0					
ANR	172434	Identifier	called_scope		172389	1					
ANR	172435	ExpressionStatement	ex = ex -> prev_execute_data	1072:2:31227:31253	172389	1	True				
ANR	172436	AssignmentExpression	ex = ex -> prev_execute_data		172389	0		=			
ANR	172437	Identifier	ex		172389	0					
ANR	172438	PtrMemberAccess	ex -> prev_execute_data		172389	1					
ANR	172439	Identifier	ex		172389	0					
ANR	172440	Identifier	prev_execute_data		172389	1					
ANR	172441	ReturnStatement	return NULL ;	1074:1:31259:31270	172389	1	True				
ANR	172442	Identifier	NULL		172389	0					
ANR	172443	ReturnType	ZEND_API zend_class_entry *		172389	1					
ANR	172444	Identifier	zend_get_called_scope		172389	2					
ANR	172445	ParameterList	zend_execute_data * ex		172389	3					
ANR	172446	Parameter	zend_execute_data * ex	1062:49:30982:31002	172389	0	True				
ANR	172447	ParameterType	zend_execute_data *		172389	0					
ANR	172448	Identifier	ex		172389	1					
ANR	172449	CFGEntryNode	ENTRY		172389		True				
ANR	172450	CFGExitNode	EXIT		172389		True				
ANR	172451	Symbol	ZEND_INTERNAL_FUNCTION		172389						
ANR	172452	Symbol	ex		172389						
ANR	172453	Symbol	ex -> prev_execute_data		172389						
ANR	172454	Symbol	NULL		172389						
ANR	172455	Symbol	ex -> func -> type		172389						
ANR	172456	Symbol	ex -> func -> common . scope		172389						
ANR	172457	Symbol	ex -> called_scope		172389						
ANR	172458	Symbol	* ex		172389						
ANR	172459	Symbol	* ex -> func		172389						
ANR	172460	Symbol	ex -> func -> common		172389						
ANR	172461	Symbol	ex -> func		172389						
ANR	172462	Symbol	* * ex		172389						
ANR	172463	Function	zend_get_this_object	1078:0:31285:31615							
ANR	172464	FunctionDef	zend_get_this_object (zend_execute_data * ex)		172463	0					
ANR	172465	CompoundStatement		1079:0:31361:31615	172463	0					
ANR	172466	WhileStatement	while ( ex )		172463	0					
ANR	172467	Condition	ex	1080:8:31371:31372	172463	0	True				
ANR	172468	Identifier	ex		172463	0					
ANR	172469	CompoundStatement		2:12:13:13	172463	1					
ANR	172470	IfStatement	if ( Z_OBJ ( ex -> This ) )		172463	0					
ANR	172471	Condition	Z_OBJ ( ex -> This )	1081:6:31383:31397	172463	0	True				
ANR	172472	CallExpression	Z_OBJ ( ex -> This )		172463	0					
ANR	172473	Callee	Z_OBJ		172463	0					
ANR	172474	Identifier	Z_OBJ		172463	0					
ANR	172475	ArgumentList	ex -> This		172463	1					
ANR	172476	Argument	ex -> This		172463	0					
ANR	172477	PtrMemberAccess	ex -> This		172463	0					
ANR	172478	Identifier	ex		172463	0					
ANR	172479	Identifier	This		172463	1					
ANR	172480	CompoundStatement		3:23:38:38	172463	1					
ANR	172481	ReturnStatement	return Z_OBJ ( ex -> This ) ;	1082:3:31405:31427	172463	0	True				
ANR	172482	CallExpression	Z_OBJ ( ex -> This )		172463	0					
ANR	172483	Callee	Z_OBJ		172463	0					
ANR	172484	Identifier	Z_OBJ		172463	0					
ANR	172485	ArgumentList	ex -> This		172463	1					
ANR	172486	Argument	ex -> This		172463	0					
ANR	172487	PtrMemberAccess	ex -> This		172463	0					
ANR	172488	Identifier	ex		172463	0					
ANR	172489	Identifier	This		172463	1					
ANR	172490	ElseStatement	else		172463	0					
ANR	172491	IfStatement	if ( ex -> func )		172463	0					
ANR	172492	Condition	ex -> func	1083:13:31442:31449	172463	0	True				
ANR	172493	PtrMemberAccess	ex -> func		172463	0					
ANR	172494	Identifier	ex		172463	0					
ANR	172495	Identifier	func		172463	1					
ANR	172496	CompoundStatement		5:23:90:90	172463	1					
ANR	172497	IfStatement	if ( ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope )		172463	0					
ANR	172498	Condition	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope	1084:7:31461:31526	172463	0	True				
ANR	172499	OrExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION || ex -> func -> common . scope		172463	0		||			
ANR	172500	EqualityExpression	ex -> func -> type != ZEND_INTERNAL_FUNCTION		172463	0		!=			
ANR	172501	PtrMemberAccess	ex -> func -> type		172463	0					
ANR	172502	PtrMemberAccess	ex -> func		172463	0					
ANR	172503	Identifier	ex		172463	0					
ANR	172504	Identifier	func		172463	1					
ANR	172505	Identifier	type		172463	1					
ANR	172506	Identifier	ZEND_INTERNAL_FUNCTION		172463	1					
ANR	172507	MemberAccess	ex -> func -> common . scope		172463	1					
ANR	172508	PtrMemberAccess	ex -> func -> common		172463	0					
ANR	172509	PtrMemberAccess	ex -> func		172463	0					
ANR	172510	Identifier	ex		172463	0					
ANR	172511	Identifier	func		172463	1					
ANR	172512	Identifier	common		172463	1					
ANR	172513	Identifier	scope		172463	1					
ANR	172514	CompoundStatement		6:75:167:167	172463	1					
ANR	172515	ReturnStatement	return Z_OBJ ( ex -> This ) ;	1085:4:31535:31557	172463	0	True				
ANR	172516	CallExpression	Z_OBJ ( ex -> This )		172463	0					
ANR	172517	Callee	Z_OBJ		172463	0					
ANR	172518	Identifier	Z_OBJ		172463	0					
ANR	172519	ArgumentList	ex -> This		172463	1					
ANR	172520	Argument	ex -> This		172463	0					
ANR	172521	PtrMemberAccess	ex -> This		172463	0					
ANR	172522	Identifier	ex		172463	0					
ANR	172523	Identifier	This		172463	1					
ANR	172524	ExpressionStatement	ex = ex -> prev_execute_data	1088:2:31570:31596	172463	1	True				
ANR	172525	AssignmentExpression	ex = ex -> prev_execute_data		172463	0		=			
ANR	172526	Identifier	ex		172463	0					
ANR	172527	PtrMemberAccess	ex -> prev_execute_data		172463	1					
ANR	172528	Identifier	ex		172463	0					
ANR	172529	Identifier	prev_execute_data		172463	1					
ANR	172530	ReturnStatement	return NULL ;	1090:1:31602:31613	172463	1	True				
ANR	172531	Identifier	NULL		172463	0					
ANR	172532	ReturnType	ZEND_API zend_object *		172463	1					
ANR	172533	Identifier	zend_get_this_object		172463	2					
ANR	172534	ParameterList	zend_execute_data * ex		172463	3					
ANR	172535	Parameter	zend_execute_data * ex	1078:43:31328:31348	172463	0	True				
ANR	172536	ParameterType	zend_execute_data *		172463	0					
ANR	172537	Identifier	ex		172463	1					
ANR	172538	CFGEntryNode	ENTRY		172463		True				
ANR	172539	CFGExitNode	EXIT		172463		True				
ANR	172540	Symbol	ex -> This		172463						
ANR	172541	Symbol	ex -> prev_execute_data		172463						
ANR	172542	Symbol	NULL		172463						
ANR	172543	Symbol	ex -> func -> type		172463						
ANR	172544	Symbol	ex -> func -> common . scope		172463						
ANR	172545	Symbol	ex -> func		172463						
ANR	172546	Symbol	ZEND_INTERNAL_FUNCTION		172463						
ANR	172547	Symbol	Z_OBJ		172463						
ANR	172548	Symbol	ex		172463						
ANR	172549	Symbol	* ex		172463						
ANR	172550	Symbol	* ex -> func		172463						
ANR	172551	Symbol	ex -> func -> common		172463						
ANR	172552	Symbol	* * ex		172463						
ANR	172553	Function	zend_eval_stringl	1094:0:31628:33157							
ANR	172554	FunctionDef	"zend_eval_stringl (char * str , size_t str_len , zval * retval_ptr , char * string_name)"		172553	0					
ANR	172555	CompoundStatement		1095:0:31733:33157	172553	0					
ANR	172556	IdentifierDeclStatement	zval pv ;	1096:1:31736:31743	172553	0	True				
ANR	172557	IdentifierDecl	pv		172553	0					
ANR	172558	IdentifierDeclType	zval		172553	0					
ANR	172559	Identifier	pv		172553	1					
ANR	172560	IdentifierDeclStatement	zend_op_array * new_op_array ;	1097:1:31746:31773	172553	1	True				
ANR	172561	IdentifierDecl	* new_op_array		172553	0					
ANR	172562	IdentifierDeclType	zend_op_array *		172553	0					
ANR	172563	Identifier	new_op_array		172553	1					
ANR	172564	IdentifierDeclStatement	uint32_t original_compiler_options ;	1098:1:31776:31810	172553	2	True				
ANR	172565	IdentifierDecl	original_compiler_options		172553	0					
ANR	172566	IdentifierDeclType	uint32_t		172553	0					
ANR	172567	Identifier	original_compiler_options		172553	1					
ANR	172568	IdentifierDeclStatement	int retval ;	1099:1:31813:31823	172553	3	True				
ANR	172569	IdentifierDecl	retval		172553	0					
ANR	172570	IdentifierDeclType	int		172553	0					
ANR	172571	Identifier	retval		172553	1					
ANR	172572	IfStatement	if ( retval_ptr )		172553	4					
ANR	172573	Condition	retval_ptr	1101:5:31831:31840	172553	0	True				
ANR	172574	Identifier	retval_ptr		172553	0					
ANR	172575	CompoundStatement		7:17:109:109	172553	1					
ANR	172576	ExpressionStatement	"ZVAL_NEW_STR ( & pv , zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 ) )"	1102:2:31847:31918	172553	0	True				
ANR	172577	CallExpression	"ZVAL_NEW_STR ( & pv , zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 ) )"		172553	0					
ANR	172578	Callee	ZVAL_NEW_STR		172553	0					
ANR	172579	Identifier	ZVAL_NEW_STR		172553	0					
ANR	172580	ArgumentList	& pv		172553	1					
ANR	172581	Argument	& pv		172553	0					
ANR	172582	UnaryOperationExpression	& pv		172553	0					
ANR	172583	UnaryOperator	&		172553	0					
ANR	172584	Identifier	pv		172553	1					
ANR	172585	Argument	"zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 )"		172553	1					
ANR	172586	CallExpression	"zend_string_alloc ( str_len + sizeof ( ""return ;"" ) - 1 , 1 )"		172553	0					
ANR	172587	Callee	zend_string_alloc		172553	0					
ANR	172588	Identifier	zend_string_alloc		172553	0					
ANR	172589	ArgumentList	"str_len + sizeof ( ""return ;"" ) - 1"		172553	1					
ANR	172590	Argument	"str_len + sizeof ( ""return ;"" ) - 1"		172553	0					
ANR	172591	AdditiveExpression	"str_len + sizeof ( ""return ;"" ) - 1"		172553	0		+			
ANR	172592	Identifier	str_len		172553	0					
ANR	172593	AdditiveExpression	"sizeof ( ""return ;"" ) - 1"		172553	1		-			
ANR	172594	SizeofExpression	"sizeof ( ""return ;"" )"		172553	0					
ANR	172595	Sizeof	sizeof		172553	0					
ANR	172596	PrimaryExpression	"""return ;"""		172553	1					
ANR	172597	PrimaryExpression	1		172553	1					
ANR	172598	Argument	1		172553	1					
ANR	172599	PrimaryExpression	1		172553	0					
ANR	172600	ExpressionStatement	"memcpy ( Z_STRVAL ( pv ) , ""return "" , sizeof ( ""return "" ) - 1 )"	1103:2:31922:31976	172553	1	True				
ANR	172601	CallExpression	"memcpy ( Z_STRVAL ( pv ) , ""return "" , sizeof ( ""return "" ) - 1 )"		172553	0					
ANR	172602	Callee	memcpy		172553	0					
ANR	172603	Identifier	memcpy		172553	0					
ANR	172604	ArgumentList	Z_STRVAL ( pv )		172553	1					
ANR	172605	Argument	Z_STRVAL ( pv )		172553	0					
ANR	172606	CallExpression	Z_STRVAL ( pv )		172553	0					
ANR	172607	Callee	Z_STRVAL		172553	0					
ANR	172608	Identifier	Z_STRVAL		172553	0					
ANR	172609	ArgumentList	pv		172553	1					
ANR	172610	Argument	pv		172553	0					
ANR	172611	Identifier	pv		172553	0					
ANR	172612	Argument	"""return """		172553	1					
ANR	172613	PrimaryExpression	"""return """		172553	0					
ANR	172614	Argument	"sizeof ( ""return "" ) - 1"		172553	2					
ANR	172615	AdditiveExpression	"sizeof ( ""return "" ) - 1"		172553	0		-			
ANR	172616	SizeofExpression	"sizeof ( ""return "" )"		172553	0					
ANR	172617	Sizeof	sizeof		172553	0					
ANR	172618	PrimaryExpression	"""return """		172553	1					
ANR	172619	PrimaryExpression	1		172553	1					
ANR	172620	ExpressionStatement	"memcpy ( Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1 , str , str_len )"	1104:2:31980:32038	172553	2	True				
ANR	172621	CallExpression	"memcpy ( Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1 , str , str_len )"		172553	0					
ANR	172622	Callee	memcpy		172553	0					
ANR	172623	Identifier	memcpy		172553	0					
ANR	172624	ArgumentList	"Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1"		172553	1					
ANR	172625	Argument	"Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1"		172553	0					
ANR	172626	AdditiveExpression	"Z_STRVAL ( pv ) + sizeof ( ""return "" ) - 1"		172553	0		+			
ANR	172627	CallExpression	Z_STRVAL ( pv )		172553	0					
ANR	172628	Callee	Z_STRVAL		172553	0					
ANR	172629	Identifier	Z_STRVAL		172553	0					
ANR	172630	ArgumentList	pv		172553	1					
ANR	172631	Argument	pv		172553	0					
ANR	172632	Identifier	pv		172553	0					
ANR	172633	AdditiveExpression	"sizeof ( ""return "" ) - 1"		172553	1		-			
ANR	172634	SizeofExpression	"sizeof ( ""return "" )"		172553	0					
ANR	172635	Sizeof	sizeof		172553	0					
ANR	172636	PrimaryExpression	"""return """		172553	1					
ANR	172637	PrimaryExpression	1		172553	1					
ANR	172638	Argument	str		172553	1					
ANR	172639	Identifier	str		172553	0					
ANR	172640	Argument	str_len		172553	2					
ANR	172641	Identifier	str_len		172553	0					
ANR	172642	ExpressionStatement	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) - 1 ] = ';'	1105:2:32042:32078	172553	3	True				
ANR	172643	AssignmentExpression	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) - 1 ] = ';'		172553	0		=			
ANR	172644	ArrayIndexing	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) - 1 ]		172553	0					
ANR	172645	CallExpression	Z_STRVAL ( pv )		172553	0					
ANR	172646	Callee	Z_STRVAL		172553	0					
ANR	172647	Identifier	Z_STRVAL		172553	0					
ANR	172648	ArgumentList	pv		172553	1					
ANR	172649	Argument	pv		172553	0					
ANR	172650	Identifier	pv		172553	0					
ANR	172651	AdditiveExpression	Z_STRLEN ( pv ) - 1		172553	1		-			
ANR	172652	CallExpression	Z_STRLEN ( pv )		172553	0					
ANR	172653	Callee	Z_STRLEN		172553	0					
ANR	172654	Identifier	Z_STRLEN		172553	0					
ANR	172655	ArgumentList	pv		172553	1					
ANR	172656	Argument	pv		172553	0					
ANR	172657	Identifier	pv		172553	0					
ANR	172658	PrimaryExpression	1		172553	1					
ANR	172659	PrimaryExpression	';'		172553	1					
ANR	172660	ExpressionStatement	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) ] = '\\0'	1106:2:32082:32115	172553	4	True				
ANR	172661	AssignmentExpression	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) ] = '\\0'		172553	0		=			
ANR	172662	ArrayIndexing	Z_STRVAL ( pv ) [ Z_STRLEN ( pv ) ]		172553	0					
ANR	172663	CallExpression	Z_STRVAL ( pv )		172553	0					
ANR	172664	Callee	Z_STRVAL		172553	0					
ANR	172665	Identifier	Z_STRVAL		172553	0					
ANR	172666	ArgumentList	pv		172553	1					
ANR	172667	Argument	pv		172553	0					
ANR	172668	Identifier	pv		172553	0					
ANR	172669	CallExpression	Z_STRLEN ( pv )		172553	1					
ANR	172670	Callee	Z_STRLEN		172553	0					
ANR	172671	Identifier	Z_STRLEN		172553	0					
ANR	172672	ArgumentList	pv		172553	1					
ANR	172673	Argument	pv		172553	0					
ANR	172674	Identifier	pv		172553	0					
ANR	172675	PrimaryExpression	'\\0'		172553	1					
ANR	172676	ElseStatement	else		172553	0					
ANR	172677	CompoundStatement		13:8:391:391	172553	0					
ANR	172678	ExpressionStatement	"ZVAL_STRINGL ( & pv , str , str_len )"	1108:2:32129:32160	172553	0	True				
ANR	172679	CallExpression	"ZVAL_STRINGL ( & pv , str , str_len )"		172553	0					
ANR	172680	Callee	ZVAL_STRINGL		172553	0					
ANR	172681	Identifier	ZVAL_STRINGL		172553	0					
ANR	172682	ArgumentList	& pv		172553	1					
ANR	172683	Argument	& pv		172553	0					
ANR	172684	UnaryOperationExpression	& pv		172553	0					
ANR	172685	UnaryOperator	&		172553	0					
ANR	172686	Identifier	pv		172553	1					
ANR	172687	Argument	str		172553	1					
ANR	172688	Identifier	str		172553	0					
ANR	172689	Argument	str_len		172553	2					
ANR	172690	Identifier	str_len		172553	0					
ANR	172691	ExpressionStatement	original_compiler_options = CG ( compiler_options )	1113:1:32220:32268	172553	5	True				
ANR	172692	AssignmentExpression	original_compiler_options = CG ( compiler_options )		172553	0		=			
ANR	172693	Identifier	original_compiler_options		172553	0					
ANR	172694	CallExpression	CG ( compiler_options )		172553	1					
ANR	172695	Callee	CG		172553	0					
ANR	172696	Identifier	CG		172553	0					
ANR	172697	ArgumentList	compiler_options		172553	1					
ANR	172698	Argument	compiler_options		172553	0					
ANR	172699	Identifier	compiler_options		172553	0					
ANR	172700	ExpressionStatement	CG ( compiler_options ) = ZEND_COMPILE_DEFAULT_FOR_EVAL	1114:1:32271:32323	172553	6	True				
ANR	172701	AssignmentExpression	CG ( compiler_options ) = ZEND_COMPILE_DEFAULT_FOR_EVAL		172553	0		=			
ANR	172702	CallExpression	CG ( compiler_options )		172553	0					
ANR	172703	Callee	CG		172553	0					
ANR	172704	Identifier	CG		172553	0					
ANR	172705	ArgumentList	compiler_options		172553	1					
ANR	172706	Argument	compiler_options		172553	0					
ANR	172707	Identifier	compiler_options		172553	0					
ANR	172708	Identifier	ZEND_COMPILE_DEFAULT_FOR_EVAL		172553	1					
ANR	172709	ExpressionStatement	"new_op_array = zend_compile_string ( & pv , string_name )"	1115:1:32326:32378	172553	7	True				
ANR	172710	AssignmentExpression	"new_op_array = zend_compile_string ( & pv , string_name )"		172553	0		=			
ANR	172711	Identifier	new_op_array		172553	0					
ANR	172712	CallExpression	"zend_compile_string ( & pv , string_name )"		172553	1					
ANR	172713	Callee	zend_compile_string		172553	0					
ANR	172714	Identifier	zend_compile_string		172553	0					
ANR	172715	ArgumentList	& pv		172553	1					
ANR	172716	Argument	& pv		172553	0					
ANR	172717	UnaryOperationExpression	& pv		172553	0					
ANR	172718	UnaryOperator	&		172553	0					
ANR	172719	Identifier	pv		172553	1					
ANR	172720	Argument	string_name		172553	1					
ANR	172721	Identifier	string_name		172553	0					
ANR	172722	ExpressionStatement	CG ( compiler_options ) = original_compiler_options	1116:1:32381:32429	172553	8	True				
ANR	172723	AssignmentExpression	CG ( compiler_options ) = original_compiler_options		172553	0		=			
ANR	172724	CallExpression	CG ( compiler_options )		172553	0					
ANR	172725	Callee	CG		172553	0					
ANR	172726	Identifier	CG		172553	0					
ANR	172727	ArgumentList	compiler_options		172553	1					
ANR	172728	Argument	compiler_options		172553	0					
ANR	172729	Identifier	compiler_options		172553	0					
ANR	172730	Identifier	original_compiler_options		172553	1					
ANR	172731	IfStatement	if ( new_op_array )		172553	9					
ANR	172732	Condition	new_op_array	1118:5:32437:32448	172553	0	True				
ANR	172733	Identifier	new_op_array		172553	0					
ANR	172734	CompoundStatement		25:2:721:738	172553	1					
ANR	172735	IdentifierDeclStatement	zval local_retval ;	1119:2:32455:32472	172553	0	True				
ANR	172736	IdentifierDecl	local_retval		172553	0					
ANR	172737	IdentifierDeclType	zval		172553	0					
ANR	172738	Identifier	local_retval		172553	1					
ANR	172739	ExpressionStatement	EG ( no_extensions ) = 1	1121:2:32477:32496	172553	1	True				
ANR	172740	AssignmentExpression	EG ( no_extensions ) = 1		172553	0		=			
ANR	172741	CallExpression	EG ( no_extensions )		172553	0					
ANR	172742	Callee	EG		172553	0					
ANR	172743	Identifier	EG		172553	0					
ANR	172744	ArgumentList	no_extensions		172553	1					
ANR	172745	Argument	no_extensions		172553	0					
ANR	172746	Identifier	no_extensions		172553	0					
ANR	172747	PrimaryExpression	1		172553	1					
ANR	172748	Statement	zend_try	1123:2:32501:32508	172553	2	True				
ANR	172749	CompoundStatement		29:11:776:776	172553	3					
ANR	172750	ExpressionStatement	ZVAL_UNDEF ( & local_retval )	1124:3:32515:32540	172553	0	True				
ANR	172751	CallExpression	ZVAL_UNDEF ( & local_retval )		172553	0					
ANR	172752	Callee	ZVAL_UNDEF		172553	0					
ANR	172753	Identifier	ZVAL_UNDEF		172553	0					
ANR	172754	ArgumentList	& local_retval		172553	1					
ANR	172755	Argument	& local_retval		172553	0					
ANR	172756	UnaryOperationExpression	& local_retval		172553	0					
ANR	172757	UnaryOperator	&		172553	0					
ANR	172758	Identifier	local_retval		172553	1					
ANR	172759	ExpressionStatement	"zend_execute ( new_op_array , & local_retval )"	1125:3:32545:32586	172553	1	True				
ANR	172760	CallExpression	"zend_execute ( new_op_array , & local_retval )"		172553	0					
ANR	172761	Callee	zend_execute		172553	0					
ANR	172762	Identifier	zend_execute		172553	0					
ANR	172763	ArgumentList	new_op_array		172553	1					
ANR	172764	Argument	new_op_array		172553	0					
ANR	172765	Identifier	new_op_array		172553	0					
ANR	172766	Argument	& local_retval		172553	1					
ANR	172767	UnaryOperationExpression	& local_retval		172553	0					
ANR	172768	UnaryOperator	&		172553	0					
ANR	172769	Identifier	local_retval		172553	1					
ANR	172770	Statement	zend_catch	1126:4:32592:32601	172553	4	True				
ANR	172771	CompoundStatement		32:15:869:869	172553	5					
ANR	172772	ExpressionStatement	destroy_op_array ( new_op_array )	1127:3:32608:32638	172553	0	True				
ANR	172773	CallExpression	destroy_op_array ( new_op_array )		172553	0					
ANR	172774	Callee	destroy_op_array		172553	0					
ANR	172775	Identifier	destroy_op_array		172553	0					
ANR	172776	ArgumentList	new_op_array		172553	1					
ANR	172777	Argument	new_op_array		172553	0					
ANR	172778	Identifier	new_op_array		172553	0					
ANR	172779	ExpressionStatement	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"	1128:3:32643:32690	172553	1	True				
ANR	172780	CallExpression	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"		172553	0					
ANR	172781	Callee	efree_size		172553	0					
ANR	172782	Identifier	efree_size		172553	0					
ANR	172783	ArgumentList	new_op_array		172553	1					
ANR	172784	Argument	new_op_array		172553	0					
ANR	172785	Identifier	new_op_array		172553	0					
ANR	172786	Argument	sizeof ( zend_op_array )		172553	1					
ANR	172787	SizeofExpression	sizeof ( zend_op_array )		172553	0					
ANR	172788	Sizeof	sizeof		172553	0					
ANR	172789	SizeofOperand	zend_op_array		172553	1					
ANR	172790	ExpressionStatement	zend_bailout ( )	1129:3:32695:32709	172553	2	True				
ANR	172791	CallExpression	zend_bailout ( )		172553	0					
ANR	172792	Callee	zend_bailout		172553	0					
ANR	172793	Identifier	zend_bailout		172553	0					
ANR	172794	ArgumentList			172553	1					
ANR	172795	ExpressionStatement	zend_end_try ( )	1130:4:32715:32729	172553	6	True				
ANR	172796	CallExpression	zend_end_try ( )		172553	0					
ANR	172797	Callee	zend_end_try		172553	0					
ANR	172798	Identifier	zend_end_try		172553	0					
ANR	172799	ArgumentList			172553	1					
ANR	172800	IfStatement	if ( Z_TYPE ( local_retval ) != IS_UNDEF )		172553	7					
ANR	172801	Condition	Z_TYPE ( local_retval ) != IS_UNDEF	1132:6:32738:32769	172553	0	True				
ANR	172802	EqualityExpression	Z_TYPE ( local_retval ) != IS_UNDEF		172553	0		!=			
ANR	172803	CallExpression	Z_TYPE ( local_retval )		172553	0					
ANR	172804	Callee	Z_TYPE		172553	0					
ANR	172805	Identifier	Z_TYPE		172553	0					
ANR	172806	ArgumentList	local_retval		172553	1					
ANR	172807	Argument	local_retval		172553	0					
ANR	172808	Identifier	local_retval		172553	0					
ANR	172809	Identifier	IS_UNDEF		172553	1					
ANR	172810	CompoundStatement		38:40:1038:1038	172553	1					
ANR	172811	IfStatement	if ( retval_ptr )		172553	0					
ANR	172812	Condition	retval_ptr	1133:7:32781:32790	172553	0	True				
ANR	172813	Identifier	retval_ptr		172553	0					
ANR	172814	CompoundStatement		39:19:1059:1059	172553	1					
ANR	172815	ExpressionStatement	"ZVAL_COPY_VALUE ( retval_ptr , & local_retval )"	1134:4:32799:32841	172553	0	True				
ANR	172816	CallExpression	"ZVAL_COPY_VALUE ( retval_ptr , & local_retval )"		172553	0					
ANR	172817	Callee	ZVAL_COPY_VALUE		172553	0					
ANR	172818	Identifier	ZVAL_COPY_VALUE		172553	0					
ANR	172819	ArgumentList	retval_ptr		172553	1					
ANR	172820	Argument	retval_ptr		172553	0					
ANR	172821	Identifier	retval_ptr		172553	0					
ANR	172822	Argument	& local_retval		172553	1					
ANR	172823	UnaryOperationExpression	& local_retval		172553	0					
ANR	172824	UnaryOperator	&		172553	0					
ANR	172825	Identifier	local_retval		172553	1					
ANR	172826	ElseStatement	else		172553	0					
ANR	172827	CompoundStatement		41:10:1119:1119	172553	0					
ANR	172828	ExpressionStatement	zval_ptr_dtor ( & local_retval )	1136:4:32859:32887	172553	0	True				
ANR	172829	CallExpression	zval_ptr_dtor ( & local_retval )		172553	0					
ANR	172830	Callee	zval_ptr_dtor		172553	0					
ANR	172831	Identifier	zval_ptr_dtor		172553	0					
ANR	172832	ArgumentList	& local_retval		172553	1					
ANR	172833	Argument	& local_retval		172553	0					
ANR	172834	UnaryOperationExpression	& local_retval		172553	0					
ANR	172835	UnaryOperator	&		172553	0					
ANR	172836	Identifier	local_retval		172553	1					
ANR	172837	ElseStatement	else		172553	0					
ANR	172838	CompoundStatement		44:9:1169:1169	172553	0					
ANR	172839	IfStatement	if ( retval_ptr )		172553	0					
ANR	172840	Condition	retval_ptr	1139:7:32912:32921	172553	0	True				
ANR	172841	Identifier	retval_ptr		172553	0					
ANR	172842	CompoundStatement		45:19:1190:1190	172553	1					
ANR	172843	ExpressionStatement	ZVAL_NULL ( retval_ptr )	1140:4:32930:32951	172553	0	True				
ANR	172844	CallExpression	ZVAL_NULL ( retval_ptr )		172553	0					
ANR	172845	Callee	ZVAL_NULL		172553	0					
ANR	172846	Identifier	ZVAL_NULL		172553	0					
ANR	172847	ArgumentList	retval_ptr		172553	1					
ANR	172848	Argument	retval_ptr		172553	0					
ANR	172849	Identifier	retval_ptr		172553	0					
ANR	172850	ExpressionStatement	EG ( no_extensions ) = 0	1144:2:32965:32984	172553	8	True				
ANR	172851	AssignmentExpression	EG ( no_extensions ) = 0		172553	0		=			
ANR	172852	CallExpression	EG ( no_extensions )		172553	0					
ANR	172853	Callee	EG		172553	0					
ANR	172854	Identifier	EG		172553	0					
ANR	172855	ArgumentList	no_extensions		172553	1					
ANR	172856	Argument	no_extensions		172553	0					
ANR	172857	Identifier	no_extensions		172553	0					
ANR	172858	PrimaryExpression	0		172553	1					
ANR	172859	ExpressionStatement	destroy_op_array ( new_op_array )	1145:2:32988:33018	172553	9	True				
ANR	172860	CallExpression	destroy_op_array ( new_op_array )		172553	0					
ANR	172861	Callee	destroy_op_array		172553	0					
ANR	172862	Identifier	destroy_op_array		172553	0					
ANR	172863	ArgumentList	new_op_array		172553	1					
ANR	172864	Argument	new_op_array		172553	0					
ANR	172865	Identifier	new_op_array		172553	0					
ANR	172866	ExpressionStatement	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"	1146:2:33022:33069	172553	10	True				
ANR	172867	CallExpression	"efree_size ( new_op_array , sizeof ( zend_op_array ) )"		172553	0					
ANR	172868	Callee	efree_size		172553	0					
ANR	172869	Identifier	efree_size		172553	0					
ANR	172870	ArgumentList	new_op_array		172553	1					
ANR	172871	Argument	new_op_array		172553	0					
ANR	172872	Identifier	new_op_array		172553	0					
ANR	172873	Argument	sizeof ( zend_op_array )		172553	1					
ANR	172874	SizeofExpression	sizeof ( zend_op_array )		172553	0					
ANR	172875	Sizeof	sizeof		172553	0					
ANR	172876	SizeofOperand	zend_op_array		172553	1					
ANR	172877	ExpressionStatement	retval = SUCCESS	1147:2:33073:33089	172553	11	True				
ANR	172878	AssignmentExpression	retval = SUCCESS		172553	0		=			
ANR	172879	Identifier	retval		172553	0					
ANR	172880	Identifier	SUCCESS		172553	1					
ANR	172881	ElseStatement	else		172553	0					
ANR	172882	CompoundStatement		54:8:1365:1365	172553	0					
ANR	172883	ExpressionStatement	retval = FAILURE	1149:2:33103:33119	172553	0	True				
ANR	172884	AssignmentExpression	retval = FAILURE		172553	0		=			
ANR	172885	Identifier	retval		172553	0					
ANR	172886	Identifier	FAILURE		172553	1					
ANR	172887	ExpressionStatement	zval_dtor ( & pv )	1151:1:33125:33139	172553	10	True				
ANR	172888	CallExpression	zval_dtor ( & pv )		172553	0					
ANR	172889	Callee	zval_dtor		172553	0					
ANR	172890	Identifier	zval_dtor		172553	0					
ANR	172891	ArgumentList	& pv		172553	1					
ANR	172892	Argument	& pv		172553	0					
ANR	172893	UnaryOperationExpression	& pv		172553	0					
ANR	172894	UnaryOperator	&		172553	0					
ANR	172895	Identifier	pv		172553	1					
ANR	172896	ReturnStatement	return retval ;	1152:1:33142:33155	172553	11	True				
ANR	172897	Identifier	retval		172553	0					
ANR	172898	ReturnType	ZEND_API int		172553	1					
ANR	172899	Identifier	zend_eval_stringl		172553	2					
ANR	172900	ParameterList	"char * str , size_t str_len , zval * retval_ptr , char * string_name"		172553	3					
ANR	172901	Parameter	char * str	1094:31:31659:31667	172553	0	True				
ANR	172902	ParameterType	char *		172553	0					
ANR	172903	Identifier	str		172553	1					
ANR	172904	Parameter	size_t str_len	1094:42:31670:31683	172553	1	True				
ANR	172905	ParameterType	size_t		172553	0					
ANR	172906	Identifier	str_len		172553	1					
ANR	172907	Parameter	zval * retval_ptr	1094:58:31686:31701	172553	2	True				
ANR	172908	ParameterType	zval *		172553	0					
ANR	172909	Identifier	retval_ptr		172553	1					
ANR	172910	Parameter	char * string_name	1094:76:31704:31720	172553	3	True				
ANR	172911	ParameterType	char *		172553	0					
ANR	172912	Identifier	string_name		172553	1					
ANR	172913	CFGEntryNode	ENTRY		172553		True				
ANR	172914	CFGExitNode	EXIT		172553		True				
ANR	172915	Symbol	pv		172553						
ANR	172916	Symbol	Z_TYPE		172553						
ANR	172917	Symbol	no_extensions		172553						
ANR	172918	Symbol	Z_STRLEN		172553						
ANR	172919	Symbol	string_name		172553						
ANR	172920	Symbol	original_compiler_options		172553						
ANR	172921	Symbol	retval_ptr		172553						
ANR	172922	Symbol	& pv		172553						
ANR	172923	Symbol	compiler_options		172553						
ANR	172924	Symbol	str_len		172553						
ANR	172925	Symbol	Z_STRVAL		172553						
ANR	172926	Symbol	* Z_STRVAL		172553						
ANR	172927	Symbol	& local_retval		172553						
ANR	172928	Symbol	local_retval		172553						
ANR	172929	Symbol	IS_UNDEF		172553						
ANR	172930	Symbol	zend_string_alloc		172553						
ANR	172931	Symbol	EG		172553						
ANR	172932	Symbol	* Z_STRLEN		172553						
ANR	172933	Symbol	SUCCESS		172553						
ANR	172934	Symbol	CG		172553						
ANR	172935	Symbol	new_op_array		172553						
ANR	172936	Symbol	FAILURE		172553						
ANR	172937	Symbol	retval		172553						
ANR	172938	Symbol	str		172553						
ANR	172939	Symbol	ZEND_COMPILE_DEFAULT_FOR_EVAL		172553						
ANR	172940	Symbol	zend_compile_string		172553						
ANR	172941	Function	zend_eval_string	1156:0:33170:33330							
ANR	172942	FunctionDef	"zend_eval_string (char * str , zval * retval_ptr , char * string_name)"		172941	0					
ANR	172943	CompoundStatement		1157:0:33258:33330	172941	0					
ANR	172944	ReturnStatement	"return zend_eval_stringl ( str , strlen ( str ) , retval_ptr , string_name ) ;"	1158:1:33261:33328	172941	0	True				
ANR	172945	CallExpression	"zend_eval_stringl ( str , strlen ( str ) , retval_ptr , string_name )"		172941	0					
ANR	172946	Callee	zend_eval_stringl		172941	0					
ANR	172947	Identifier	zend_eval_stringl		172941	0					
ANR	172948	ArgumentList	str		172941	1					
ANR	172949	Argument	str		172941	0					
ANR	172950	Identifier	str		172941	0					
ANR	172951	Argument	strlen ( str )		172941	1					
ANR	172952	CallExpression	strlen ( str )		172941	0					
ANR	172953	Callee	strlen		172941	0					
ANR	172954	Identifier	strlen		172941	0					
ANR	172955	ArgumentList	str		172941	1					
ANR	172956	Argument	str		172941	0					
ANR	172957	Identifier	str		172941	0					
ANR	172958	Argument	retval_ptr		172941	2					
ANR	172959	Identifier	retval_ptr		172941	0					
ANR	172960	Argument	string_name		172941	3					
ANR	172961	Identifier	string_name		172941	0					
ANR	172962	ReturnType	ZEND_API int		172941	1					
ANR	172963	Identifier	zend_eval_string		172941	2					
ANR	172964	ParameterList	"char * str , zval * retval_ptr , char * string_name"		172941	3					
ANR	172965	Parameter	char * str	1156:30:33200:33208	172941	0	True				
ANR	172966	ParameterType	char *		172941	0					
ANR	172967	Identifier	str		172941	1					
ANR	172968	Parameter	zval * retval_ptr	1156:41:33211:33226	172941	1	True				
ANR	172969	ParameterType	zval *		172941	0					
ANR	172970	Identifier	retval_ptr		172941	1					
ANR	172971	Parameter	char * string_name	1156:59:33229:33245	172941	2	True				
ANR	172972	ParameterType	char *		172941	0					
ANR	172973	Identifier	string_name		172941	1					
ANR	172974	CFGEntryNode	ENTRY		172941		True				
ANR	172975	CFGExitNode	EXIT		172941		True				
ANR	172976	Symbol	str		172941						
ANR	172977	Symbol	strlen		172941						
ANR	172978	Symbol	zend_eval_stringl		172941						
ANR	172979	Symbol	string_name		172941						
ANR	172980	Symbol	retval_ptr		172941						
ANR	172981	Function	zend_eval_stringl_ex	1162:0:33343:33688							
ANR	172982	FunctionDef	"zend_eval_stringl_ex (char * str , size_t str_len , zval * retval_ptr , char * string_name , int handle_exceptions)"		172981	0					
ANR	172983	CompoundStatement		1163:0:33474:33688	172981	0					
ANR	172984	IdentifierDeclStatement	int result ;	1164:1:33477:33487	172981	0	True				
ANR	172985	IdentifierDecl	result		172981	0					
ANR	172986	IdentifierDeclType	int		172981	0					
ANR	172987	Identifier	result		172981	1					
ANR	172988	ExpressionStatement	"result = zend_eval_stringl ( str , str_len , retval_ptr , string_name )"	1166:1:33491:33556	172981	1	True				
ANR	172989	AssignmentExpression	"result = zend_eval_stringl ( str , str_len , retval_ptr , string_name )"		172981	0		=			
ANR	172990	Identifier	result		172981	0					
ANR	172991	CallExpression	"zend_eval_stringl ( str , str_len , retval_ptr , string_name )"		172981	1					
ANR	172992	Callee	zend_eval_stringl		172981	0					
ANR	172993	Identifier	zend_eval_stringl		172981	0					
ANR	172994	ArgumentList	str		172981	1					
ANR	172995	Argument	str		172981	0					
ANR	172996	Identifier	str		172981	0					
ANR	172997	Argument	str_len		172981	1					
ANR	172998	Identifier	str_len		172981	0					
ANR	172999	Argument	retval_ptr		172981	2					
ANR	173000	Identifier	retval_ptr		172981	0					
ANR	173001	Argument	string_name		172981	3					
ANR	173002	Identifier	string_name		172981	0					
ANR	173003	IfStatement	if ( handle_exceptions && EG ( exception ) )		172981	2					
ANR	173004	Condition	handle_exceptions && EG ( exception )	1167:5:33563:33596	172981	0	True				
ANR	173005	AndExpression	handle_exceptions && EG ( exception )		172981	0		&&			
ANR	173006	Identifier	handle_exceptions		172981	0					
ANR	173007	CallExpression	EG ( exception )		172981	1					
ANR	173008	Callee	EG		172981	0					
ANR	173009	Identifier	EG		172981	0					
ANR	173010	ArgumentList	exception		172981	1					
ANR	173011	Argument	exception		172981	0					
ANR	173012	Identifier	exception		172981	0					
ANR	173013	CompoundStatement		5:41:124:124	172981	1					
ANR	173014	ExpressionStatement	"zend_exception_error ( EG ( exception ) , E_ERROR )"	1168:2:33603:33647	172981	0	True				
ANR	173015	CallExpression	"zend_exception_error ( EG ( exception ) , E_ERROR )"		172981	0					
ANR	173016	Callee	zend_exception_error		172981	0					
ANR	173017	Identifier	zend_exception_error		172981	0					
ANR	173018	ArgumentList	EG ( exception )		172981	1					
ANR	173019	Argument	EG ( exception )		172981	0					
ANR	173020	CallExpression	EG ( exception )		172981	0					
ANR	173021	Callee	EG		172981	0					
ANR	173022	Identifier	EG		172981	0					
ANR	173023	ArgumentList	exception		172981	1					
ANR	173024	Argument	exception		172981	0					
ANR	173025	Identifier	exception		172981	0					
ANR	173026	Argument	E_ERROR		172981	1					
ANR	173027	Identifier	E_ERROR		172981	0					
ANR	173028	ExpressionStatement	result = FAILURE	1169:2:33651:33667	172981	1	True				
ANR	173029	AssignmentExpression	result = FAILURE		172981	0		=			
ANR	173030	Identifier	result		172981	0					
ANR	173031	Identifier	FAILURE		172981	1					
ANR	173032	ReturnStatement	return result ;	1171:1:33673:33686	172981	3	True				
ANR	173033	Identifier	result		172981	0					
ANR	173034	ReturnType	ZEND_API int		172981	1					
ANR	173035	Identifier	zend_eval_stringl_ex		172981	2					
ANR	173036	ParameterList	"char * str , size_t str_len , zval * retval_ptr , char * string_name , int handle_exceptions"		172981	3					
ANR	173037	Parameter	char * str	1162:34:33377:33385	172981	0	True				
ANR	173038	ParameterType	char *		172981	0					
ANR	173039	Identifier	str		172981	1					
ANR	173040	Parameter	size_t str_len	1162:45:33388:33401	172981	1	True				
ANR	173041	ParameterType	size_t		172981	0					
ANR	173042	Identifier	str_len		172981	1					
ANR	173043	Parameter	zval * retval_ptr	1162:61:33404:33419	172981	2	True				
ANR	173044	ParameterType	zval *		172981	0					
ANR	173045	Identifier	retval_ptr		172981	1					
ANR	173046	Parameter	char * string_name	1162:79:33422:33438	172981	3	True				
ANR	173047	ParameterType	char *		172981	0					
ANR	173048	Identifier	string_name		172981	1					
ANR	173049	Parameter	int handle_exceptions	1162:98:33441:33461	172981	4	True				
ANR	173050	ParameterType	int		172981	0					
ANR	173051	Identifier	handle_exceptions		172981	1					
ANR	173052	CFGEntryNode	ENTRY		172981		True				
ANR	173053	CFGExitNode	EXIT		172981		True				
ANR	173054	Symbol	str		172981						
ANR	173055	Symbol	result		172981						
ANR	173056	Symbol	exception		172981						
ANR	173057	Symbol	EG		172981						
ANR	173058	Symbol	E_ERROR		172981						
ANR	173059	Symbol	str_len		172981						
ANR	173060	Symbol	zend_eval_stringl		172981						
ANR	173061	Symbol	handle_exceptions		172981						
ANR	173062	Symbol	FAILURE		172981						
ANR	173063	Symbol	string_name		172981						
ANR	173064	Symbol	retval_ptr		172981						
ANR	173065	Function	zend_eval_string_ex	1175:0:33701:33909							
ANR	173066	FunctionDef	"zend_eval_string_ex (char * str , zval * retval_ptr , char * string_name , int handle_exceptions)"		173065	0					
ANR	173067	CompoundStatement		1176:0:33815:33909	173065	0					
ANR	173068	ReturnStatement	"return zend_eval_stringl_ex ( str , strlen ( str ) , retval_ptr , string_name , handle_exceptions ) ;"	1177:1:33818:33907	173065	0	True				
ANR	173069	CallExpression	"zend_eval_stringl_ex ( str , strlen ( str ) , retval_ptr , string_name , handle_exceptions )"		173065	0					
ANR	173070	Callee	zend_eval_stringl_ex		173065	0					
ANR	173071	Identifier	zend_eval_stringl_ex		173065	0					
ANR	173072	ArgumentList	str		173065	1					
ANR	173073	Argument	str		173065	0					
ANR	173074	Identifier	str		173065	0					
ANR	173075	Argument	strlen ( str )		173065	1					
ANR	173076	CallExpression	strlen ( str )		173065	0					
ANR	173077	Callee	strlen		173065	0					
ANR	173078	Identifier	strlen		173065	0					
ANR	173079	ArgumentList	str		173065	1					
ANR	173080	Argument	str		173065	0					
ANR	173081	Identifier	str		173065	0					
ANR	173082	Argument	retval_ptr		173065	2					
ANR	173083	Identifier	retval_ptr		173065	0					
ANR	173084	Argument	string_name		173065	3					
ANR	173085	Identifier	string_name		173065	0					
ANR	173086	Argument	handle_exceptions		173065	4					
ANR	173087	Identifier	handle_exceptions		173065	0					
ANR	173088	ReturnType	ZEND_API int		173065	1					
ANR	173089	Identifier	zend_eval_string_ex		173065	2					
ANR	173090	ParameterList	"char * str , zval * retval_ptr , char * string_name , int handle_exceptions"		173065	3					
ANR	173091	Parameter	char * str	1175:33:33734:33742	173065	0	True				
ANR	173092	ParameterType	char *		173065	0					
ANR	173093	Identifier	str		173065	1					
ANR	173094	Parameter	zval * retval_ptr	1175:44:33745:33760	173065	1	True				
ANR	173095	ParameterType	zval *		173065	0					
ANR	173096	Identifier	retval_ptr		173065	1					
ANR	173097	Parameter	char * string_name	1175:62:33763:33779	173065	2	True				
ANR	173098	ParameterType	char *		173065	0					
ANR	173099	Identifier	string_name		173065	1					
ANR	173100	Parameter	int handle_exceptions	1175:81:33782:33802	173065	3	True				
ANR	173101	ParameterType	int		173065	0					
ANR	173102	Identifier	handle_exceptions		173065	1					
ANR	173103	CFGEntryNode	ENTRY		173065		True				
ANR	173104	CFGExitNode	EXIT		173065		True				
ANR	173105	Symbol	str		173065						
ANR	173106	Symbol	zend_eval_stringl_ex		173065						
ANR	173107	Symbol	strlen		173065						
ANR	173108	Symbol	handle_exceptions		173065						
ANR	173109	Symbol	string_name		173065						
ANR	173110	Symbol	retval_ptr		173065						
ANR	173111	Function	zend_timeout	1181:0:33922:34495							
ANR	173112	FunctionDef	zend_timeout (int dummy)		173111	0					
ANR	173113	CompoundStatement		1182:0:33970:34495	173111	0					
ANR	173114	IfStatement	if ( zend_on_timeout )		173111	0					
ANR	173115	Condition	zend_on_timeout	1184:5:33978:33992	173111	0	True				
ANR	173116	Identifier	zend_on_timeout		173111	0					
ANR	173117	CompoundStatement		3:22:24:24	173111	1					
ANR	173118	ExpressionStatement	SIGG ( running ) = 0	1192:2:34285:34302	173111	0	True				
ANR	173119	AssignmentExpression	SIGG ( running ) = 0		173111	0		=			
ANR	173120	CallExpression	SIGG ( running )		173111	0					
ANR	173121	Callee	SIGG		173111	0					
ANR	173122	Identifier	SIGG		173111	0					
ANR	173123	ArgumentList	running		173111	1					
ANR	173124	Argument	running		173111	0					
ANR	173125	Identifier	running		173111	0					
ANR	173126	PrimaryExpression	0		173111	1					
ANR	173127	ExpressionStatement	zend_on_timeout ( EG ( timeout_seconds ) )	1194:2:34313:34349	173111	1	True				
ANR	173128	CallExpression	zend_on_timeout ( EG ( timeout_seconds ) )		173111	0					
ANR	173129	Callee	zend_on_timeout		173111	0					
ANR	173130	Identifier	zend_on_timeout		173111	0					
ANR	173131	ArgumentList	EG ( timeout_seconds )		173111	1					
ANR	173132	Argument	EG ( timeout_seconds )		173111	0					
ANR	173133	CallExpression	EG ( timeout_seconds )		173111	0					
ANR	173134	Callee	EG		173111	0					
ANR	173135	Identifier	EG		173111	0					
ANR	173136	ArgumentList	timeout_seconds		173111	1					
ANR	173137	Argument	timeout_seconds		173111	0					
ANR	173138	Identifier	timeout_seconds		173111	0					
ANR	173139	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Maximum execution time of %pd second%s exceeded"" , EG ( timeout_seconds ) , EG ( timeout_seconds ) == 1 ? """" : ""s"" )"	1197:1:34356:34493	173111	1	True				
ANR	173140	CallExpression	"zend_error_noreturn ( E_ERROR , ""Maximum execution time of %pd second%s exceeded"" , EG ( timeout_seconds ) , EG ( timeout_seconds ) == 1 ? """" : ""s"" )"		173111	0					
ANR	173141	Callee	zend_error_noreturn		173111	0					
ANR	173142	Identifier	zend_error_noreturn		173111	0					
ANR	173143	ArgumentList	E_ERROR		173111	1					
ANR	173144	Argument	E_ERROR		173111	0					
ANR	173145	Identifier	E_ERROR		173111	0					
ANR	173146	Argument	"""Maximum execution time of %pd second%s exceeded"""		173111	1					
ANR	173147	PrimaryExpression	"""Maximum execution time of %pd second%s exceeded"""		173111	0					
ANR	173148	Argument	EG ( timeout_seconds )		173111	2					
ANR	173149	CallExpression	EG ( timeout_seconds )		173111	0					
ANR	173150	Callee	EG		173111	0					
ANR	173151	Identifier	EG		173111	0					
ANR	173152	ArgumentList	timeout_seconds		173111	1					
ANR	173153	Argument	timeout_seconds		173111	0					
ANR	173154	Identifier	timeout_seconds		173111	0					
ANR	173155	Argument	"EG ( timeout_seconds ) == 1 ? """" : ""s"""		173111	3					
ANR	173156	ConditionalExpression	"EG ( timeout_seconds ) == 1 ? """" : ""s"""		173111	0					
ANR	173157	Condition	EG ( timeout_seconds ) == 1		173111	0					
ANR	173158	EqualityExpression	EG ( timeout_seconds ) == 1		173111	0		==			
ANR	173159	CallExpression	EG ( timeout_seconds )		173111	0					
ANR	173160	Callee	EG		173111	0					
ANR	173161	Identifier	EG		173111	0					
ANR	173162	ArgumentList	timeout_seconds		173111	1					
ANR	173163	Argument	timeout_seconds		173111	0					
ANR	173164	Identifier	timeout_seconds		173111	0					
ANR	173165	PrimaryExpression	1		173111	1					
ANR	173166	PrimaryExpression	""""""		173111	1					
ANR	173167	PrimaryExpression	"""s"""		173111	2					
ANR	173168	ReturnType	ZEND_API void		173111	1					
ANR	173169	Identifier	zend_timeout		173111	2					
ANR	173170	ParameterList	int dummy		173111	3					
ANR	173171	Parameter	int dummy	1181:27:33949:33957	173111	0	True				
ANR	173172	ParameterType	int		173111	0					
ANR	173173	Identifier	dummy		173111	1					
ANR	173174	CFGEntryNode	ENTRY		173111		True				
ANR	173175	CFGExitNode	EXIT		173111		True				
ANR	173176	Symbol	dummy		173111						
ANR	173177	Symbol	zend_on_timeout		173111						
ANR	173178	Symbol	SIGG		173111						
ANR	173179	Symbol	running		173111						
ANR	173180	Symbol	EG		173111						
ANR	173181	Symbol	E_ERROR		173111						
ANR	173182	Symbol	timeout_seconds		173111						
ANR	173183	Function	tq_timer_cb	1202:0:34526:34817							
ANR	173184	FunctionDef	"tq_timer_cb (PVOID arg , BOOLEAN timed_out)"		173183	0					
ANR	173185	CompoundStatement		1203:0:34582:34817	173183	0					
ANR	173186	IdentifierDeclStatement	zend_bool * php_timed_out ;	1204:1:34585:34609	173183	0	True				
ANR	173187	IdentifierDecl	* php_timed_out		173183	0					
ANR	173188	IdentifierDeclType	zend_bool *		173183	0					
ANR	173189	Identifier	php_timed_out		173183	1					
ANR	173190	IfStatement	if ( ! timed_out )		173183	1					
ANR	173191	Condition	! timed_out	1208:5:34733:34742	173183	0	True				
ANR	173192	UnaryOperationExpression	! timed_out		173183	0					
ANR	173193	UnaryOperator	!		173183	0					
ANR	173194	Identifier	timed_out		173183	1					
ANR	173195	CompoundStatement		6:17:162:162	173183	1					
ANR	173196	ReturnStatement	return ;	1209:2:34749:34755	173183	0	True				
ANR	173197	ExpressionStatement	php_timed_out = ( zend_bool * ) arg	1212:1:34762:34794	173183	2	True				
ANR	173198	AssignmentExpression	php_timed_out = ( zend_bool * ) arg		173183	0		=			
ANR	173199	Identifier	php_timed_out		173183	0					
ANR	173200	CastExpression	( zend_bool * ) arg		173183	1					
ANR	173201	CastTarget	zend_bool *		173183	0					
ANR	173202	Identifier	arg		173183	1					
ANR	173203	ExpressionStatement	* php_timed_out = 1	1213:1:34797:34815	173183	3	True				
ANR	173204	AssignmentExpression	* php_timed_out = 1		173183	0		=			
ANR	173205	UnaryOperationExpression	* php_timed_out		173183	0					
ANR	173206	UnaryOperator	*		173183	0					
ANR	173207	Identifier	php_timed_out		173183	1					
ANR	173208	PrimaryExpression	1		173183	1					
ANR	173209	ReturnType	VOID CALLBACK		173183	1					
ANR	173210	Identifier	tq_timer_cb		173183	2					
ANR	173211	ParameterList	"PVOID arg , BOOLEAN timed_out"		173183	3					
ANR	173212	Parameter	PVOID arg	1202:26:34552:34560	173183	0	True				
ANR	173213	ParameterType	PVOID		173183	0					
ANR	173214	Identifier	arg		173183	1					
ANR	173215	Parameter	BOOLEAN timed_out	1202:37:34563:34579	173183	1	True				
ANR	173216	ParameterType	BOOLEAN		173183	0					
ANR	173217	Identifier	timed_out		173183	1					
ANR	173218	CFGEntryNode	ENTRY		173183		True				
ANR	173219	CFGExitNode	EXIT		173183		True				
ANR	173220	Symbol	php_timed_out		173183						
ANR	173221	Symbol	arg		173183						
ANR	173222	Symbol	timed_out		173183						
ANR	173223	Symbol	* php_timed_out		173183						
ANR	173224	Function	zend_set_timeout	1222:0:34907:36494							
ANR	173225	FunctionDef	"zend_set_timeout (zend_long seconds , int reset_signals)"		173224	0					
ANR	173226	CompoundStatement		1223:0:34977:36494	173224	0					
ANR	173227	ExpressionStatement	EG ( timeout_seconds ) = seconds	1225:1:34981:35010	173224	0	True				
ANR	173228	AssignmentExpression	EG ( timeout_seconds ) = seconds		173224	0		=			
ANR	173229	CallExpression	EG ( timeout_seconds )		173224	0					
ANR	173230	Callee	EG		173224	0					
ANR	173231	Identifier	EG		173224	0					
ANR	173232	ArgumentList	timeout_seconds		173224	1					
ANR	173233	Argument	timeout_seconds		173224	0					
ANR	173234	Identifier	timeout_seconds		173224	0					
ANR	173235	Identifier	seconds		173224	1					
ANR	173236	IfStatement	if ( ! seconds )		173224	1					
ANR	173237	Condition	! seconds	1228:4:35035:35042	173224	0	True				
ANR	173238	UnaryOperationExpression	! seconds		173224	0					
ANR	173239	UnaryOperator	!		173224	0					
ANR	173240	Identifier	seconds		173224	1					
ANR	173241	CompoundStatement		6:14:67:67	173224	1					
ANR	173242	ReturnStatement	return ;	1229:2:35049:35055	173224	0	True				
ANR	173243	IfStatement	if ( NULL != tq_timer )		173224	2					
ANR	173244	Condition	NULL != tq_timer	1235:5:35237:35252	173224	0	True				
ANR	173245	EqualityExpression	NULL != tq_timer		173224	0		!=			
ANR	173246	Identifier	NULL		173224	0					
ANR	173247	Identifier	tq_timer		173224	1					
ANR	173248	CompoundStatement		13:23:277:277	173224	1					
ANR	173249	IfStatement	"if ( ! DeleteTimerQueueTimer ( NULL , tq_timer , NULL ) )"		173224	0					
ANR	173250	Condition	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"	1236:6:35263:35306	173224	0	True				
ANR	173251	UnaryOperationExpression	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		173224	0					
ANR	173252	UnaryOperator	!		173224	0					
ANR	173253	CallExpression	"DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		173224	1					
ANR	173254	Callee	DeleteTimerQueueTimer		173224	0					
ANR	173255	Identifier	DeleteTimerQueueTimer		173224	0					
ANR	173256	ArgumentList	NULL		173224	1					
ANR	173257	Argument	NULL		173224	0					
ANR	173258	Identifier	NULL		173224	0					
ANR	173259	Argument	tq_timer		173224	1					
ANR	173260	Identifier	tq_timer		173224	0					
ANR	173261	Argument	NULL		173224	2					
ANR	173262	Identifier	NULL		173224	0					
ANR	173263	CompoundStatement		14:52:331:331	173224	1					
ANR	173264	ExpressionStatement	EG ( timed_out ) = 0	1237:3:35314:35331	173224	0	True				
ANR	173265	AssignmentExpression	EG ( timed_out ) = 0		173224	0		=			
ANR	173266	CallExpression	EG ( timed_out )		173224	0					
ANR	173267	Callee	EG		173224	0					
ANR	173268	Identifier	EG		173224	0					
ANR	173269	ArgumentList	timed_out		173224	1					
ANR	173270	Argument	timed_out		173224	0					
ANR	173271	Identifier	timed_out		173224	0					
ANR	173272	PrimaryExpression	0		173224	1					
ANR	173273	ExpressionStatement	tq_timer = NULL	1238:3:35336:35351	173224	1	True				
ANR	173274	AssignmentExpression	tq_timer = NULL		173224	0		=			
ANR	173275	Identifier	tq_timer		173224	0					
ANR	173276	Identifier	NULL		173224	1					
ANR	173277	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"	1239:3:35356:35417	173224	2	True				
ANR	173278	CallExpression	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"		173224	0					
ANR	173279	Callee	zend_error_noreturn		173224	0					
ANR	173280	Identifier	zend_error_noreturn		173224	0					
ANR	173281	ArgumentList	E_ERROR		173224	1					
ANR	173282	Argument	E_ERROR		173224	0					
ANR	173283	Identifier	E_ERROR		173224	0					
ANR	173284	Argument	"""Could not delete queued timer"""		173224	1					
ANR	173285	PrimaryExpression	"""Could not delete queued timer"""		173224	0					
ANR	173286	ReturnStatement	return ;	1240:3:35422:35428	173224	3	True				
ANR	173287	ExpressionStatement	tq_timer = NULL	1242:2:35436:35451	173224	1	True				
ANR	173288	AssignmentExpression	tq_timer = NULL		173224	0		=			
ANR	173289	Identifier	tq_timer		173224	0					
ANR	173290	Identifier	NULL		173224	1					
ANR	173291	IfStatement	"if ( ! CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE ) )"		173224	3					
ANR	173292	Condition	"! CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE )"	1246:5:35547:35679	173224	0	True				
ANR	173293	UnaryOperationExpression	"! CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE )"		173224	0					
ANR	173294	UnaryOperator	!		173224	0					
ANR	173295	CallExpression	"CreateTimerQueueTimer ( & tq_timer , NULL , ( WAITORTIMERCALLBACK ) tq_timer_cb , ( VOID * ) & EG ( timed_out ) , seconds * 1000 , 0 , WT_EXECUTEONLYONCE )"		173224	1					
ANR	173296	Callee	CreateTimerQueueTimer		173224	0					
ANR	173297	Identifier	CreateTimerQueueTimer		173224	0					
ANR	173298	ArgumentList	& tq_timer		173224	1					
ANR	173299	Argument	& tq_timer		173224	0					
ANR	173300	UnaryOperationExpression	& tq_timer		173224	0					
ANR	173301	UnaryOperator	&		173224	0					
ANR	173302	Identifier	tq_timer		173224	1					
ANR	173303	Argument	NULL		173224	1					
ANR	173304	Identifier	NULL		173224	0					
ANR	173305	Argument	( WAITORTIMERCALLBACK ) tq_timer_cb		173224	2					
ANR	173306	CastExpression	( WAITORTIMERCALLBACK ) tq_timer_cb		173224	0					
ANR	173307	CastTarget	WAITORTIMERCALLBACK		173224	0					
ANR	173308	Identifier	tq_timer_cb		173224	1					
ANR	173309	Argument	( VOID * ) & EG ( timed_out )		173224	3					
ANR	173310	CastExpression	( VOID * ) & EG ( timed_out )		173224	0					
ANR	173311	CastTarget	VOID *		173224	0					
ANR	173312	UnaryOperationExpression	& EG ( timed_out )		173224	1					
ANR	173313	UnaryOperator	&		173224	0					
ANR	173314	CallExpression	EG ( timed_out )		173224	1					
ANR	173315	Callee	EG		173224	0					
ANR	173316	Identifier	EG		173224	0					
ANR	173317	ArgumentList	timed_out		173224	1					
ANR	173318	Argument	timed_out		173224	0					
ANR	173319	Identifier	timed_out		173224	0					
ANR	173320	Argument	seconds * 1000		173224	4					
ANR	173321	MultiplicativeExpression	seconds * 1000		173224	0		*			
ANR	173322	Identifier	seconds		173224	0					
ANR	173323	PrimaryExpression	1000		173224	1					
ANR	173324	Argument	0		173224	5					
ANR	173325	PrimaryExpression	0		173224	0					
ANR	173326	Argument	WT_EXECUTEONLYONCE		173224	6					
ANR	173327	Identifier	WT_EXECUTEONLYONCE		173224	0					
ANR	173328	CompoundStatement		24:140:704:704	173224	1					
ANR	173329	ExpressionStatement	EG ( timed_out ) = 0	1247:2:35686:35703	173224	0	True				
ANR	173330	AssignmentExpression	EG ( timed_out ) = 0		173224	0		=			
ANR	173331	CallExpression	EG ( timed_out )		173224	0					
ANR	173332	Callee	EG		173224	0					
ANR	173333	Identifier	EG		173224	0					
ANR	173334	ArgumentList	timed_out		173224	1					
ANR	173335	Argument	timed_out		173224	0					
ANR	173336	Identifier	timed_out		173224	0					
ANR	173337	PrimaryExpression	0		173224	1					
ANR	173338	ExpressionStatement	tq_timer = NULL	1248:2:35707:35722	173224	1	True				
ANR	173339	AssignmentExpression	tq_timer = NULL		173224	0		=			
ANR	173340	Identifier	tq_timer		173224	0					
ANR	173341	Identifier	NULL		173224	1					
ANR	173342	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Could not queue new timer"" )"	1249:2:35726:35783	173224	2	True				
ANR	173343	CallExpression	"zend_error_noreturn ( E_ERROR , ""Could not queue new timer"" )"		173224	0					
ANR	173344	Callee	zend_error_noreturn		173224	0					
ANR	173345	Identifier	zend_error_noreturn		173224	0					
ANR	173346	ArgumentList	E_ERROR		173224	1					
ANR	173347	Argument	E_ERROR		173224	0					
ANR	173348	Identifier	E_ERROR		173224	0					
ANR	173349	Argument	"""Could not queue new timer"""		173224	1					
ANR	173350	PrimaryExpression	"""Could not queue new timer"""		173224	0					
ANR	173351	ReturnStatement	return ;	1250:2:35787:35793	173224	3	True				
ANR	173352	ExpressionStatement	EG ( timed_out ) = 0	1252:1:35799:35816	173224	4	True				
ANR	173353	AssignmentExpression	EG ( timed_out ) = 0		173224	0		=			
ANR	173354	CallExpression	EG ( timed_out )		173224	0					
ANR	173355	Callee	EG		173224	0					
ANR	173356	Identifier	EG		173224	0					
ANR	173357	ArgumentList	timed_out		173224	1					
ANR	173358	Argument	timed_out		173224	0					
ANR	173359	Identifier	timed_out		173224	0					
ANR	173360	PrimaryExpression	0		173224	1					
ANR	173361	ReturnType	void		173224	1					
ANR	173362	Identifier	zend_set_timeout		173224	2					
ANR	173363	ParameterList	"zend_long seconds , int reset_signals"		173224	3					
ANR	173364	Parameter	zend_long seconds	1222:22:34929:34945	173224	0	True				
ANR	173365	ParameterType	zend_long		173224	0					
ANR	173366	Identifier	seconds		173224	1					
ANR	173367	Parameter	int reset_signals	1222:41:34948:34964	173224	1	True				
ANR	173368	ParameterType	int		173224	0					
ANR	173369	Identifier	reset_signals		173224	1					
ANR	173370	CFGEntryNode	ENTRY		173224		True				
ANR	173371	CFGExitNode	EXIT		173224		True				
ANR	173372	Symbol	EG		173224						
ANR	173373	Symbol	NULL		173224						
ANR	173374	Symbol	timed_out		173224						
ANR	173375	Symbol	& EG		173224						
ANR	173376	Symbol	& tq_timer		173224						
ANR	173377	Symbol	seconds		173224						
ANR	173378	Symbol	E_ERROR		173224						
ANR	173379	Symbol	reset_signals		173224						
ANR	173380	Symbol	DeleteTimerQueueTimer		173224						
ANR	173381	Symbol	tq_timer_cb		173224						
ANR	173382	Symbol	CreateTimerQueueTimer		173224						
ANR	173383	Symbol	WT_EXECUTEONLYONCE		173224						
ANR	173384	Symbol	tq_timer		173224						
ANR	173385	Symbol	timeout_seconds		173224						
ANR	173386	Function	zend_unset_timeout	1291:0:36507:37169							
ANR	173387	FunctionDef	zend_unset_timeout ()		173386	0					
ANR	173388	CompoundStatement		1292:0:36547:37169	173386	0					
ANR	173389	IfStatement	if ( NULL != tq_timer )		173386	0					
ANR	173390	Condition	NULL != tq_timer	1294:5:36572:36587	173386	0	True				
ANR	173391	EqualityExpression	NULL != tq_timer		173386	0		!=			
ANR	173392	Identifier	NULL		173386	0					
ANR	173393	Identifier	tq_timer		173386	1					
ANR	173394	CompoundStatement		3:23:42:42	173386	1					
ANR	173395	IfStatement	"if ( ! DeleteTimerQueueTimer ( NULL , tq_timer , NULL ) )"		173386	0					
ANR	173396	Condition	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"	1295:6:36598:36641	173386	0	True				
ANR	173397	UnaryOperationExpression	"! DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		173386	0					
ANR	173398	UnaryOperator	!		173386	0					
ANR	173399	CallExpression	"DeleteTimerQueueTimer ( NULL , tq_timer , NULL )"		173386	1					
ANR	173400	Callee	DeleteTimerQueueTimer		173386	0					
ANR	173401	Identifier	DeleteTimerQueueTimer		173386	0					
ANR	173402	ArgumentList	NULL		173386	1					
ANR	173403	Argument	NULL		173386	0					
ANR	173404	Identifier	NULL		173386	0					
ANR	173405	Argument	tq_timer		173386	1					
ANR	173406	Identifier	tq_timer		173386	0					
ANR	173407	Argument	NULL		173386	2					
ANR	173408	Identifier	NULL		173386	0					
ANR	173409	CompoundStatement		4:52:96:96	173386	1					
ANR	173410	ExpressionStatement	EG ( timed_out ) = 0	1296:3:36649:36666	173386	0	True				
ANR	173411	AssignmentExpression	EG ( timed_out ) = 0		173386	0		=			
ANR	173412	CallExpression	EG ( timed_out )		173386	0					
ANR	173413	Callee	EG		173386	0					
ANR	173414	Identifier	EG		173386	0					
ANR	173415	ArgumentList	timed_out		173386	1					
ANR	173416	Argument	timed_out		173386	0					
ANR	173417	Identifier	timed_out		173386	0					
ANR	173418	PrimaryExpression	0		173386	1					
ANR	173419	ExpressionStatement	tq_timer = NULL	1297:3:36671:36686	173386	1	True				
ANR	173420	AssignmentExpression	tq_timer = NULL		173386	0		=			
ANR	173421	Identifier	tq_timer		173386	0					
ANR	173422	Identifier	NULL		173386	1					
ANR	173423	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"	1298:3:36691:36752	173386	2	True				
ANR	173424	CallExpression	"zend_error_noreturn ( E_ERROR , ""Could not delete queued timer"" )"		173386	0					
ANR	173425	Callee	zend_error_noreturn		173386	0					
ANR	173426	Identifier	zend_error_noreturn		173386	0					
ANR	173427	ArgumentList	E_ERROR		173386	1					
ANR	173428	Argument	E_ERROR		173386	0					
ANR	173429	Identifier	E_ERROR		173386	0					
ANR	173430	Argument	"""Could not delete queued timer"""		173386	1					
ANR	173431	PrimaryExpression	"""Could not delete queued timer"""		173386	0					
ANR	173432	ReturnStatement	return ;	1299:3:36757:36763	173386	3	True				
ANR	173433	ExpressionStatement	tq_timer = NULL	1301:2:36771:36786	173386	1	True				
ANR	173434	AssignmentExpression	tq_timer = NULL		173386	0		=			
ANR	173435	Identifier	tq_timer		173386	0					
ANR	173436	Identifier	NULL		173386	1					
ANR	173437	ExpressionStatement	EG ( timed_out ) = 0	1303:1:36792:36809	173386	1	True				
ANR	173438	AssignmentExpression	EG ( timed_out ) = 0		173386	0		=			
ANR	173439	CallExpression	EG ( timed_out )		173386	0					
ANR	173440	Callee	EG		173386	0					
ANR	173441	Identifier	EG		173386	0					
ANR	173442	ArgumentList	timed_out		173386	1					
ANR	173443	Argument	timed_out		173386	0					
ANR	173444	Identifier	timed_out		173386	0					
ANR	173445	PrimaryExpression	0		173386	1					
ANR	173446	ReturnType	void		173386	1					
ANR	173447	Identifier	zend_unset_timeout		173386	2					
ANR	173448	ParameterList			173386	3					
ANR	173449	CFGEntryNode	ENTRY		173386		True				
ANR	173450	CFGExitNode	EXIT		173386		True				
ANR	173451	Symbol	EG		173386						
ANR	173452	Symbol	NULL		173386						
ANR	173453	Symbol	E_ERROR		173386						
ANR	173454	Symbol	DeleteTimerQueueTimer		173386						
ANR	173455	Symbol	timed_out		173386						
ANR	173456	Symbol	tq_timer		173386						
ANR	173457	Function	zend_fetch_class	1322:0:37182:39089							
ANR	173458	FunctionDef	"zend_fetch_class (zend_string * class_name , int fetch_type)"		173457	0					
ANR	173459	CompoundStatement		1323:0:37268:39089	173457	0					
ANR	173460	IdentifierDeclStatement	zend_class_entry * ce ;	1324:1:37271:37291	173457	0	True				
ANR	173461	IdentifierDecl	* ce		173457	0					
ANR	173462	IdentifierDeclType	zend_class_entry *		173457	0					
ANR	173463	Identifier	ce		173457	1					
ANR	173464	IdentifierDeclStatement	int fetch_sub_type = fetch_type & ZEND_FETCH_CLASS_MASK ;	1325:1:37294:37349	173457	1	True				
ANR	173465	IdentifierDecl	fetch_sub_type = fetch_type & ZEND_FETCH_CLASS_MASK		173457	0					
ANR	173466	IdentifierDeclType	int		173457	0					
ANR	173467	Identifier	fetch_sub_type		173457	1					
ANR	173468	AssignmentExpression	fetch_sub_type = fetch_type & ZEND_FETCH_CLASS_MASK		173457	2		=			
ANR	173469	Identifier	fetch_sub_type		173457	0					
ANR	173470	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_MASK		173457	1		&			
ANR	173471	Identifier	fetch_type		173457	0					
ANR	173472	Identifier	ZEND_FETCH_CLASS_MASK		173457	1					
ANR	173473	Label	check_fetch_type :	1327:0:37352:37368	173457	2	True				
ANR	173474	Identifier	check_fetch_type		173457	0					
ANR	173475	SwitchStatement	switch ( fetch_sub_type )		173457	3					
ANR	173476	Condition	fetch_sub_type	1328:9:37379:37392	173457	0	True				
ANR	173477	Identifier	fetch_sub_type		173457	0					
ANR	173478	CompoundStatement		6:25:126:126	173457	1					
ANR	173479	Label	case ZEND_FETCH_CLASS_SELF :	1329:2:37399:37425	173457	0	True				
ANR	173480	Identifier	ZEND_FETCH_CLASS_SELF		173457	0					
ANR	173481	IfStatement	if ( UNEXPECTED ( ! EG ( scope ) ) )		173457	1					
ANR	173482	Condition	UNEXPECTED ( ! EG ( scope ) )	1330:7:37434:37455	173457	0	True				
ANR	173483	CallExpression	UNEXPECTED ( ! EG ( scope ) )		173457	0					
ANR	173484	Callee	UNEXPECTED		173457	0					
ANR	173485	Identifier	UNEXPECTED		173457	0					
ANR	173486	ArgumentList	! EG ( scope )		173457	1					
ANR	173487	Argument	! EG ( scope )		173457	0					
ANR	173488	UnaryOperationExpression	! EG ( scope )		173457	0					
ANR	173489	UnaryOperator	!		173457	0					
ANR	173490	CallExpression	EG ( scope )		173457	1					
ANR	173491	Callee	EG		173457	0					
ANR	173492	Identifier	EG		173457	0					
ANR	173493	ArgumentList	scope		173457	1					
ANR	173494	Argument	scope		173457	0					
ANR	173495	Identifier	scope		173457	0					
ANR	173496	CompoundStatement		8:31:189:189	173457	1					
ANR	173497	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access self:: when no class scope is active"" )"	1331:4:37464:37555	173457	0	True				
ANR	173498	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access self:: when no class scope is active"" )"		173457	0					
ANR	173499	Callee	zend_throw_or_error		173457	0					
ANR	173500	Identifier	zend_throw_or_error		173457	0					
ANR	173501	ArgumentList	fetch_type		173457	1					
ANR	173502	Argument	fetch_type		173457	0					
ANR	173503	Identifier	fetch_type		173457	0					
ANR	173504	Argument	NULL		173457	1					
ANR	173505	Identifier	NULL		173457	0					
ANR	173506	Argument	"""Cannot access self:: when no class scope is active"""		173457	2					
ANR	173507	PrimaryExpression	"""Cannot access self:: when no class scope is active"""		173457	0					
ANR	173508	ReturnStatement	return EG ( scope ) ;	1333:3:37565:37581	173457	2	True				
ANR	173509	CallExpression	EG ( scope )		173457	0					
ANR	173510	Callee	EG		173457	0					
ANR	173511	Identifier	EG		173457	0					
ANR	173512	ArgumentList	scope		173457	1					
ANR	173513	Argument	scope		173457	0					
ANR	173514	Identifier	scope		173457	0					
ANR	173515	Label	case ZEND_FETCH_CLASS_PARENT :	1334:2:37585:37613	173457	3	True				
ANR	173516	Identifier	ZEND_FETCH_CLASS_PARENT		173457	0					
ANR	173517	IfStatement	if ( UNEXPECTED ( ! EG ( scope ) ) )		173457	4					
ANR	173518	Condition	UNEXPECTED ( ! EG ( scope ) )	1335:7:37622:37643	173457	0	True				
ANR	173519	CallExpression	UNEXPECTED ( ! EG ( scope ) )		173457	0					
ANR	173520	Callee	UNEXPECTED		173457	0					
ANR	173521	Identifier	UNEXPECTED		173457	0					
ANR	173522	ArgumentList	! EG ( scope )		173457	1					
ANR	173523	Argument	! EG ( scope )		173457	0					
ANR	173524	UnaryOperationExpression	! EG ( scope )		173457	0					
ANR	173525	UnaryOperator	!		173457	0					
ANR	173526	CallExpression	EG ( scope )		173457	1					
ANR	173527	Callee	EG		173457	0					
ANR	173528	Identifier	EG		173457	0					
ANR	173529	ArgumentList	scope		173457	1					
ANR	173530	Argument	scope		173457	0					
ANR	173531	Identifier	scope		173457	0					
ANR	173532	CompoundStatement		13:31:377:377	173457	1					
ANR	173533	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when no class scope is active"" )"	1336:4:37652:37745	173457	0	True				
ANR	173534	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when no class scope is active"" )"		173457	0					
ANR	173535	Callee	zend_throw_or_error		173457	0					
ANR	173536	Identifier	zend_throw_or_error		173457	0					
ANR	173537	ArgumentList	fetch_type		173457	1					
ANR	173538	Argument	fetch_type		173457	0					
ANR	173539	Identifier	fetch_type		173457	0					
ANR	173540	Argument	NULL		173457	1					
ANR	173541	Identifier	NULL		173457	0					
ANR	173542	Argument	"""Cannot access parent:: when no class scope is active"""		173457	2					
ANR	173543	PrimaryExpression	"""Cannot access parent:: when no class scope is active"""		173457	0					
ANR	173544	ReturnStatement	return NULL ;	1337:4:37751:37762	173457	1	True				
ANR	173545	Identifier	NULL		173457	0					
ANR	173546	IfStatement	if ( UNEXPECTED ( ! EG ( scope ) -> parent ) )		173457	5					
ANR	173547	Condition	UNEXPECTED ( ! EG ( scope ) -> parent )	1339:7:37776:37805	173457	0	True				
ANR	173548	CallExpression	UNEXPECTED ( ! EG ( scope ) -> parent )		173457	0					
ANR	173549	Callee	UNEXPECTED		173457	0					
ANR	173550	Identifier	UNEXPECTED		173457	0					
ANR	173551	ArgumentList	! EG ( scope ) -> parent		173457	1					
ANR	173552	Argument	! EG ( scope ) -> parent		173457	0					
ANR	173553	UnaryOperationExpression	! EG ( scope ) -> parent		173457	0					
ANR	173554	UnaryOperator	!		173457	0					
ANR	173555	PtrMemberAccess	EG ( scope ) -> parent		173457	1					
ANR	173556	CallExpression	EG ( scope )		173457	0					
ANR	173557	Callee	EG		173457	0					
ANR	173558	Identifier	EG		173457	0					
ANR	173559	ArgumentList	scope		173457	1					
ANR	173560	Argument	scope		173457	0					
ANR	173561	Identifier	scope		173457	0					
ANR	173562	Identifier	parent		173457	1					
ANR	173563	CompoundStatement		17:39:539:539	173457	1					
ANR	173564	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when current class scope has no parent"" )"	1340:4:37814:37916	173457	0	True				
ANR	173565	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access parent:: when current class scope has no parent"" )"		173457	0					
ANR	173566	Callee	zend_throw_or_error		173457	0					
ANR	173567	Identifier	zend_throw_or_error		173457	0					
ANR	173568	ArgumentList	fetch_type		173457	1					
ANR	173569	Argument	fetch_type		173457	0					
ANR	173570	Identifier	fetch_type		173457	0					
ANR	173571	Argument	NULL		173457	1					
ANR	173572	Identifier	NULL		173457	0					
ANR	173573	Argument	"""Cannot access parent:: when current class scope has no parent"""		173457	2					
ANR	173574	PrimaryExpression	"""Cannot access parent:: when current class scope has no parent"""		173457	0					
ANR	173575	ReturnStatement	return EG ( scope ) -> parent ;	1342:3:37926:37950	173457	6	True				
ANR	173576	PtrMemberAccess	EG ( scope ) -> parent		173457	0					
ANR	173577	CallExpression	EG ( scope )		173457	0					
ANR	173578	Callee	EG		173457	0					
ANR	173579	Identifier	EG		173457	0					
ANR	173580	ArgumentList	scope		173457	1					
ANR	173581	Argument	scope		173457	0					
ANR	173582	Identifier	scope		173457	0					
ANR	173583	Identifier	parent		173457	1					
ANR	173584	Label	case ZEND_FETCH_CLASS_STATIC :	1343:2:37954:37982	173457	7	True				
ANR	173585	Identifier	ZEND_FETCH_CLASS_STATIC		173457	0					
ANR	173586	ExpressionStatement	ce = zend_get_called_scope ( EG ( current_execute_data ) )	1344:3:37987:38039	173457	8	True				
ANR	173587	AssignmentExpression	ce = zend_get_called_scope ( EG ( current_execute_data ) )		173457	0		=			
ANR	173588	Identifier	ce		173457	0					
ANR	173589	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		173457	1					
ANR	173590	Callee	zend_get_called_scope		173457	0					
ANR	173591	Identifier	zend_get_called_scope		173457	0					
ANR	173592	ArgumentList	EG ( current_execute_data )		173457	1					
ANR	173593	Argument	EG ( current_execute_data )		173457	0					
ANR	173594	CallExpression	EG ( current_execute_data )		173457	0					
ANR	173595	Callee	EG		173457	0					
ANR	173596	Identifier	EG		173457	0					
ANR	173597	ArgumentList	current_execute_data		173457	1					
ANR	173598	Argument	current_execute_data		173457	0					
ANR	173599	Identifier	current_execute_data		173457	0					
ANR	173600	IfStatement	if ( UNEXPECTED ( ! ce ) )		173457	9					
ANR	173601	Condition	UNEXPECTED ( ! ce )	1345:7:38048:38062	173457	0	True				
ANR	173602	CallExpression	UNEXPECTED ( ! ce )		173457	0					
ANR	173603	Callee	UNEXPECTED		173457	0					
ANR	173604	Identifier	UNEXPECTED		173457	0					
ANR	173605	ArgumentList	! ce		173457	1					
ANR	173606	Argument	! ce		173457	0					
ANR	173607	UnaryOperationExpression	! ce		173457	0					
ANR	173608	UnaryOperator	!		173457	0					
ANR	173609	Identifier	ce		173457	1					
ANR	173610	CompoundStatement		23:24:796:796	173457	1					
ANR	173611	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access static:: when no class scope is active"" )"	1346:4:38071:38164	173457	0	True				
ANR	173612	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Cannot access static:: when no class scope is active"" )"		173457	0					
ANR	173613	Callee	zend_throw_or_error		173457	0					
ANR	173614	Identifier	zend_throw_or_error		173457	0					
ANR	173615	ArgumentList	fetch_type		173457	1					
ANR	173616	Argument	fetch_type		173457	0					
ANR	173617	Identifier	fetch_type		173457	0					
ANR	173618	Argument	NULL		173457	1					
ANR	173619	Identifier	NULL		173457	0					
ANR	173620	Argument	"""Cannot access static:: when no class scope is active"""		173457	2					
ANR	173621	PrimaryExpression	"""Cannot access static:: when no class scope is active"""		173457	0					
ANR	173622	ReturnStatement	return NULL ;	1347:4:38170:38181	173457	1	True				
ANR	173623	Identifier	NULL		173457	0					
ANR	173624	ReturnStatement	return ce ;	1349:3:38191:38200	173457	10	True				
ANR	173625	Identifier	ce		173457	0					
ANR	173626	Label	case ZEND_FETCH_CLASS_AUTO :	1350:2:38204:38230	173457	11	True				
ANR	173627	Identifier	ZEND_FETCH_CLASS_AUTO		173457	0					
ANR	173628	CompoundStatement		28:30:963:963	173457	12					
ANR	173629	ExpressionStatement	fetch_sub_type = zend_get_class_fetch_type ( class_name )	1351:4:38238:38292	173457	0	True				
ANR	173630	AssignmentExpression	fetch_sub_type = zend_get_class_fetch_type ( class_name )		173457	0		=			
ANR	173631	Identifier	fetch_sub_type		173457	0					
ANR	173632	CallExpression	zend_get_class_fetch_type ( class_name )		173457	1					
ANR	173633	Callee	zend_get_class_fetch_type		173457	0					
ANR	173634	Identifier	zend_get_class_fetch_type		173457	0					
ANR	173635	ArgumentList	class_name		173457	1					
ANR	173636	Argument	class_name		173457	0					
ANR	173637	Identifier	class_name		173457	0					
ANR	173638	IfStatement	if ( UNEXPECTED ( fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT ) )		173457	1					
ANR	173639	Condition	UNEXPECTED ( fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT )	1352:8:38302:38355	173457	0	True				
ANR	173640	CallExpression	UNEXPECTED ( fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT )		173457	0					
ANR	173641	Callee	UNEXPECTED		173457	0					
ANR	173642	Identifier	UNEXPECTED		173457	0					
ANR	173643	ArgumentList	fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT		173457	1					
ANR	173644	Argument	fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT		173457	0					
ANR	173645	EqualityExpression	fetch_sub_type != ZEND_FETCH_CLASS_DEFAULT		173457	0		!=			
ANR	173646	Identifier	fetch_sub_type		173457	0					
ANR	173647	Identifier	ZEND_FETCH_CLASS_DEFAULT		173457	1					
ANR	173648	CompoundStatement		30:64:1089:1089	173457	1					
ANR	173649	GotoStatement	goto check_fetch_type ;	1353:5:38365:38386	173457	0	True				
ANR	173650	Identifier	check_fetch_type		173457	0					
ANR	173651	BreakStatement	break ;	1356:3:38402:38407	173457	13	True				
ANR	173652	IfStatement	if ( fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD )		173457	4					
ANR	173653	Condition	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD	1359:5:38418:38458	173457	0	True				
ANR	173654	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD		173457	0		&			
ANR	173655	Identifier	fetch_type		173457	0					
ANR	173656	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		173457	1					
ANR	173657	CompoundStatement		37:48:1192:1192	173457	1					
ANR	173658	ReturnStatement	"return zend_lookup_class_ex ( class_name , NULL , 0 ) ;"	1360:2:38465:38513	173457	0	True				
ANR	173659	CallExpression	"zend_lookup_class_ex ( class_name , NULL , 0 )"		173457	0					
ANR	173660	Callee	zend_lookup_class_ex		173457	0					
ANR	173661	Identifier	zend_lookup_class_ex		173457	0					
ANR	173662	ArgumentList	class_name		173457	1					
ANR	173663	Argument	class_name		173457	0					
ANR	173664	Identifier	class_name		173457	0					
ANR	173665	Argument	NULL		173457	1					
ANR	173666	Identifier	NULL		173457	0					
ANR	173667	Argument	0		173457	2					
ANR	173668	PrimaryExpression	0		173457	0					
ANR	173669	ElseStatement	else		173457	0					
ANR	173670	IfStatement	"if ( ( ce = zend_lookup_class_ex ( class_name , NULL , 1 ) ) == NULL )"		173457	0					
ANR	173671	Condition	"( ce = zend_lookup_class_ex ( class_name , NULL , 1 ) ) == NULL"	1361:12:38527:38582	173457	0	True				
ANR	173672	EqualityExpression	"( ce = zend_lookup_class_ex ( class_name , NULL , 1 ) ) == NULL"		173457	0		==			
ANR	173673	AssignmentExpression	"ce = zend_lookup_class_ex ( class_name , NULL , 1 )"		173457	0		=			
ANR	173674	Identifier	ce		173457	0					
ANR	173675	CallExpression	"zend_lookup_class_ex ( class_name , NULL , 1 )"		173457	1					
ANR	173676	Callee	zend_lookup_class_ex		173457	0					
ANR	173677	Identifier	zend_lookup_class_ex		173457	0					
ANR	173678	ArgumentList	class_name		173457	1					
ANR	173679	Argument	class_name		173457	0					
ANR	173680	Identifier	class_name		173457	0					
ANR	173681	Argument	NULL		173457	1					
ANR	173682	Identifier	NULL		173457	0					
ANR	173683	Argument	1		173457	2					
ANR	173684	PrimaryExpression	1		173457	0					
ANR	173685	Identifier	NULL		173457	1					
ANR	173686	CompoundStatement		39:70:1316:1316	173457	1					
ANR	173687	IfStatement	if ( ! ( fetch_type & ZEND_FETCH_CLASS_SILENT ) && ! EG ( exception ) )		173457	0					
ANR	173688	Condition	! ( fetch_type & ZEND_FETCH_CLASS_SILENT ) && ! EG ( exception )	1362:6:38593:38649	173457	0	True				
ANR	173689	AndExpression	! ( fetch_type & ZEND_FETCH_CLASS_SILENT ) && ! EG ( exception )		173457	0		&&			
ANR	173690	UnaryOperationExpression	! ( fetch_type & ZEND_FETCH_CLASS_SILENT )		173457	0					
ANR	173691	UnaryOperator	!		173457	0					
ANR	173692	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_SILENT		173457	1		&			
ANR	173693	Identifier	fetch_type		173457	0					
ANR	173694	Identifier	ZEND_FETCH_CLASS_SILENT		173457	1					
ANR	173695	UnaryOperationExpression	! EG ( exception )		173457	1					
ANR	173696	UnaryOperator	!		173457	0					
ANR	173697	CallExpression	EG ( exception )		173457	1					
ANR	173698	Callee	EG		173457	0					
ANR	173699	Identifier	EG		173457	0					
ANR	173700	ArgumentList	exception		173457	1					
ANR	173701	Argument	exception		173457	0					
ANR	173702	Identifier	exception		173457	0					
ANR	173703	CompoundStatement		40:65:1383:1383	173457	1					
ANR	173704	IfStatement	if ( fetch_sub_type == ZEND_FETCH_CLASS_INTERFACE )		173457	0					
ANR	173705	Condition	fetch_sub_type == ZEND_FETCH_CLASS_INTERFACE	1363:7:38661:38704	173457	0	True				
ANR	173706	EqualityExpression	fetch_sub_type == ZEND_FETCH_CLASS_INTERFACE		173457	0		==			
ANR	173707	Identifier	fetch_sub_type		173457	0					
ANR	173708	Identifier	ZEND_FETCH_CLASS_INTERFACE		173457	1					
ANR	173709	CompoundStatement		41:53:1438:1438	173457	1					
ANR	173710	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"	1364:4:38713:38800	173457	0	True				
ANR	173711	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"		173457	0					
ANR	173712	Callee	zend_throw_or_error		173457	0					
ANR	173713	Identifier	zend_throw_or_error		173457	0					
ANR	173714	ArgumentList	fetch_type		173457	1					
ANR	173715	Argument	fetch_type		173457	0					
ANR	173716	Identifier	fetch_type		173457	0					
ANR	173717	Argument	NULL		173457	1					
ANR	173718	Identifier	NULL		173457	0					
ANR	173719	Argument	"""Interface '%s' not found"""		173457	2					
ANR	173720	PrimaryExpression	"""Interface '%s' not found"""		173457	0					
ANR	173721	Argument	ZSTR_VAL ( class_name )		173457	3					
ANR	173722	CallExpression	ZSTR_VAL ( class_name )		173457	0					
ANR	173723	Callee	ZSTR_VAL		173457	0					
ANR	173724	Identifier	ZSTR_VAL		173457	0					
ANR	173725	ArgumentList	class_name		173457	1					
ANR	173726	Argument	class_name		173457	0					
ANR	173727	Identifier	class_name		173457	0					
ANR	173728	ElseStatement	else		173457	0					
ANR	173729	IfStatement	if ( fetch_sub_type == ZEND_FETCH_CLASS_TRAIT )		173457	0					
ANR	173730	Condition	fetch_sub_type == ZEND_FETCH_CLASS_TRAIT	1365:14:38816:38855	173457	0	True				
ANR	173731	EqualityExpression	fetch_sub_type == ZEND_FETCH_CLASS_TRAIT		173457	0		==			
ANR	173732	Identifier	fetch_sub_type		173457	0					
ANR	173733	Identifier	ZEND_FETCH_CLASS_TRAIT		173457	1					
ANR	173734	CompoundStatement		43:56:1589:1589	173457	1					
ANR	173735	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"	1366:4:38864:38947	173457	0	True				
ANR	173736	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"		173457	0					
ANR	173737	Callee	zend_throw_or_error		173457	0					
ANR	173738	Identifier	zend_throw_or_error		173457	0					
ANR	173739	ArgumentList	fetch_type		173457	1					
ANR	173740	Argument	fetch_type		173457	0					
ANR	173741	Identifier	fetch_type		173457	0					
ANR	173742	Argument	NULL		173457	1					
ANR	173743	Identifier	NULL		173457	0					
ANR	173744	Argument	"""Trait '%s' not found"""		173457	2					
ANR	173745	PrimaryExpression	"""Trait '%s' not found"""		173457	0					
ANR	173746	Argument	ZSTR_VAL ( class_name )		173457	3					
ANR	173747	CallExpression	ZSTR_VAL ( class_name )		173457	0					
ANR	173748	Callee	ZSTR_VAL		173457	0					
ANR	173749	Identifier	ZSTR_VAL		173457	0					
ANR	173750	ArgumentList	class_name		173457	1					
ANR	173751	Argument	class_name		173457	0					
ANR	173752	Identifier	class_name		173457	0					
ANR	173753	ElseStatement	else		173457	0					
ANR	173754	CompoundStatement		45:10:1690:1690	173457	0					
ANR	173755	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"	1368:4:38965:39048	173457	0	True				
ANR	173756	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"		173457	0					
ANR	173757	Callee	zend_throw_or_error		173457	0					
ANR	173758	Identifier	zend_throw_or_error		173457	0					
ANR	173759	ArgumentList	fetch_type		173457	1					
ANR	173760	Argument	fetch_type		173457	0					
ANR	173761	Identifier	fetch_type		173457	0					
ANR	173762	Argument	NULL		173457	1					
ANR	173763	Identifier	NULL		173457	0					
ANR	173764	Argument	"""Class '%s' not found"""		173457	2					
ANR	173765	PrimaryExpression	"""Class '%s' not found"""		173457	0					
ANR	173766	Argument	ZSTR_VAL ( class_name )		173457	3					
ANR	173767	CallExpression	ZSTR_VAL ( class_name )		173457	0					
ANR	173768	Callee	ZSTR_VAL		173457	0					
ANR	173769	Identifier	ZSTR_VAL		173457	0					
ANR	173770	ArgumentList	class_name		173457	1					
ANR	173771	Argument	class_name		173457	0					
ANR	173772	Identifier	class_name		173457	0					
ANR	173773	ReturnStatement	return NULL ;	1371:2:39061:39072	173457	1	True				
ANR	173774	Identifier	NULL		173457	0					
ANR	173775	ReturnStatement	return ce ;	1373:1:39078:39087	173457	5	True				
ANR	173776	Identifier	ce		173457	0					
ANR	173777	ReturnType	zend_class_entry *		173457	1					
ANR	173778	Identifier	zend_fetch_class		173457	2					
ANR	173779	ParameterList	"zend_string * class_name , int fetch_type"		173457	3					
ANR	173780	Parameter	zend_string * class_name	1322:35:37217:37239	173457	0	True				
ANR	173781	ParameterType	zend_string *		173457	0					
ANR	173782	Identifier	class_name		173457	1					
ANR	173783	Parameter	int fetch_type	1322:60:37242:37255	173457	1	True				
ANR	173784	ParameterType	int		173457	0					
ANR	173785	Identifier	fetch_type		173457	1					
ANR	173786	CFGEntryNode	ENTRY		173457		True				
ANR	173787	CFGExitNode	EXIT		173457		True				
ANR	173788	Symbol	ZEND_FETCH_CLASS_DEFAULT		173457						
ANR	173789	Symbol	zend_lookup_class_ex		173457						
ANR	173790	Symbol	exception		173457						
ANR	173791	Symbol	fetch_type		173457						
ANR	173792	Symbol	ce		173457						
ANR	173793	Symbol	EG		173457						
ANR	173794	Symbol	NULL		173457						
ANR	173795	Symbol	current_execute_data		173457						
ANR	173796	Symbol	ZEND_FETCH_CLASS_SILENT		173457						
ANR	173797	Symbol	EG ( scope ) -> parent		173457						
ANR	173798	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		173457						
ANR	173799	Symbol	* EG		173457						
ANR	173800	Symbol	zend_get_called_scope		173457						
ANR	173801	Symbol	ZSTR_VAL		173457						
ANR	173802	Symbol	UNEXPECTED		173457						
ANR	173803	Symbol	ZEND_FETCH_CLASS_TRAIT		173457						
ANR	173804	Symbol	ZEND_FETCH_CLASS_MASK		173457						
ANR	173805	Symbol	scope		173457						
ANR	173806	Symbol	ZEND_FETCH_CLASS_INTERFACE		173457						
ANR	173807	Symbol	fetch_sub_type		173457						
ANR	173808	Symbol	class_name		173457						
ANR	173809	Symbol	zend_get_class_fetch_type		173457						
ANR	173810	Function	zend_fetch_class_by_name	1377:0:39102:39961							
ANR	173811	FunctionDef	"zend_fetch_class_by_name (zend_string * class_name , const zval * key , int fetch_type)"		173810	0					
ANR	173812	CompoundStatement		1378:0:39213:39961	173810	0					
ANR	173813	IdentifierDeclStatement	zend_class_entry * ce ;	1379:1:39216:39236	173810	0	True				
ANR	173814	IdentifierDecl	* ce		173810	0					
ANR	173815	IdentifierDeclType	zend_class_entry *		173810	0					
ANR	173816	Identifier	ce		173810	1					
ANR	173817	IfStatement	if ( fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD )		173810	1					
ANR	173818	Condition	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD	1381:5:39244:39284	173810	0	True				
ANR	173819	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_NO_AUTOLOAD		173810	0		&			
ANR	173820	Identifier	fetch_type		173810	0					
ANR	173821	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		173810	1					
ANR	173822	CompoundStatement		4:48:73:73	173810	1					
ANR	173823	ReturnStatement	"return zend_lookup_class_ex ( class_name , key , 0 ) ;"	1382:2:39291:39338	173810	0	True				
ANR	173824	CallExpression	"zend_lookup_class_ex ( class_name , key , 0 )"		173810	0					
ANR	173825	Callee	zend_lookup_class_ex		173810	0					
ANR	173826	Identifier	zend_lookup_class_ex		173810	0					
ANR	173827	ArgumentList	class_name		173810	1					
ANR	173828	Argument	class_name		173810	0					
ANR	173829	Identifier	class_name		173810	0					
ANR	173830	Argument	key		173810	1					
ANR	173831	Identifier	key		173810	0					
ANR	173832	Argument	0		173810	2					
ANR	173833	PrimaryExpression	0		173810	0					
ANR	173834	ElseStatement	else		173810	0					
ANR	173835	IfStatement	"if ( ( ce = zend_lookup_class_ex ( class_name , key , 1 ) ) == NULL )"		173810	0					
ANR	173836	Condition	"( ce = zend_lookup_class_ex ( class_name , key , 1 ) ) == NULL"	1383:12:39352:39406	173810	0	True				
ANR	173837	EqualityExpression	"( ce = zend_lookup_class_ex ( class_name , key , 1 ) ) == NULL"		173810	0		==			
ANR	173838	AssignmentExpression	"ce = zend_lookup_class_ex ( class_name , key , 1 )"		173810	0		=			
ANR	173839	Identifier	ce		173810	0					
ANR	173840	CallExpression	"zend_lookup_class_ex ( class_name , key , 1 )"		173810	1					
ANR	173841	Callee	zend_lookup_class_ex		173810	0					
ANR	173842	Identifier	zend_lookup_class_ex		173810	0					
ANR	173843	ArgumentList	class_name		173810	1					
ANR	173844	Argument	class_name		173810	0					
ANR	173845	Identifier	class_name		173810	0					
ANR	173846	Argument	key		173810	1					
ANR	173847	Identifier	key		173810	0					
ANR	173848	Argument	1		173810	2					
ANR	173849	PrimaryExpression	1		173810	0					
ANR	173850	Identifier	NULL		173810	1					
ANR	173851	CompoundStatement		6:69:195:195	173810	1					
ANR	173852	IfStatement	if ( ( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0 && ! EG ( exception ) )		173810	0					
ANR	173853	Condition	( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0 && ! EG ( exception )	1384:6:39417:39477	173810	0	True				
ANR	173854	AndExpression	( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0 && ! EG ( exception )		173810	0		&&			
ANR	173855	EqualityExpression	( fetch_type & ZEND_FETCH_CLASS_SILENT ) == 0		173810	0		==			
ANR	173856	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_SILENT		173810	0		&			
ANR	173857	Identifier	fetch_type		173810	0					
ANR	173858	Identifier	ZEND_FETCH_CLASS_SILENT		173810	1					
ANR	173859	PrimaryExpression	0		173810	1					
ANR	173860	UnaryOperationExpression	! EG ( exception )		173810	1					
ANR	173861	UnaryOperator	!		173810	0					
ANR	173862	CallExpression	EG ( exception )		173810	1					
ANR	173863	Callee	EG		173810	0					
ANR	173864	Identifier	EG		173810	0					
ANR	173865	ArgumentList	exception		173810	1					
ANR	173866	Argument	exception		173810	0					
ANR	173867	Identifier	exception		173810	0					
ANR	173868	CompoundStatement		7:69:266:266	173810	1					
ANR	173869	IfStatement	if ( ( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_INTERFACE )		173810	0					
ANR	173870	Condition	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_INTERFACE	1385:7:39489:39554	173810	0	True				
ANR	173871	EqualityExpression	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_INTERFACE		173810	0		==			
ANR	173872	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_MASK		173810	0		&			
ANR	173873	Identifier	fetch_type		173810	0					
ANR	173874	Identifier	ZEND_FETCH_CLASS_MASK		173810	1					
ANR	173875	Identifier	ZEND_FETCH_CLASS_INTERFACE		173810	1					
ANR	173876	CompoundStatement		8:75:343:343	173810	1					
ANR	173877	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"	1386:4:39563:39650	173810	0	True				
ANR	173878	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Interface '%s' not found"" , ZSTR_VAL ( class_name ) )"		173810	0					
ANR	173879	Callee	zend_throw_or_error		173810	0					
ANR	173880	Identifier	zend_throw_or_error		173810	0					
ANR	173881	ArgumentList	fetch_type		173810	1					
ANR	173882	Argument	fetch_type		173810	0					
ANR	173883	Identifier	fetch_type		173810	0					
ANR	173884	Argument	NULL		173810	1					
ANR	173885	Identifier	NULL		173810	0					
ANR	173886	Argument	"""Interface '%s' not found"""		173810	2					
ANR	173887	PrimaryExpression	"""Interface '%s' not found"""		173810	0					
ANR	173888	Argument	ZSTR_VAL ( class_name )		173810	3					
ANR	173889	CallExpression	ZSTR_VAL ( class_name )		173810	0					
ANR	173890	Callee	ZSTR_VAL		173810	0					
ANR	173891	Identifier	ZSTR_VAL		173810	0					
ANR	173892	ArgumentList	class_name		173810	1					
ANR	173893	Argument	class_name		173810	0					
ANR	173894	Identifier	class_name		173810	0					
ANR	173895	ElseStatement	else		173810	0					
ANR	173896	IfStatement	if ( ( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_TRAIT )		173810	0					
ANR	173897	Condition	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_TRAIT	1387:14:39666:39727	173810	0	True				
ANR	173898	EqualityExpression	( fetch_type & ZEND_FETCH_CLASS_MASK ) == ZEND_FETCH_CLASS_TRAIT		173810	0		==			
ANR	173899	BitAndExpression	fetch_type & ZEND_FETCH_CLASS_MASK		173810	0		&			
ANR	173900	Identifier	fetch_type		173810	0					
ANR	173901	Identifier	ZEND_FETCH_CLASS_MASK		173810	1					
ANR	173902	Identifier	ZEND_FETCH_CLASS_TRAIT		173810	1					
ANR	173903	CompoundStatement		10:78:516:516	173810	1					
ANR	173904	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"	1388:4:39736:39819	173810	0	True				
ANR	173905	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Trait '%s' not found"" , ZSTR_VAL ( class_name ) )"		173810	0					
ANR	173906	Callee	zend_throw_or_error		173810	0					
ANR	173907	Identifier	zend_throw_or_error		173810	0					
ANR	173908	ArgumentList	fetch_type		173810	1					
ANR	173909	Argument	fetch_type		173810	0					
ANR	173910	Identifier	fetch_type		173810	0					
ANR	173911	Argument	NULL		173810	1					
ANR	173912	Identifier	NULL		173810	0					
ANR	173913	Argument	"""Trait '%s' not found"""		173810	2					
ANR	173914	PrimaryExpression	"""Trait '%s' not found"""		173810	0					
ANR	173915	Argument	ZSTR_VAL ( class_name )		173810	3					
ANR	173916	CallExpression	ZSTR_VAL ( class_name )		173810	0					
ANR	173917	Callee	ZSTR_VAL		173810	0					
ANR	173918	Identifier	ZSTR_VAL		173810	0					
ANR	173919	ArgumentList	class_name		173810	1					
ANR	173920	Argument	class_name		173810	0					
ANR	173921	Identifier	class_name		173810	0					
ANR	173922	ElseStatement	else		173810	0					
ANR	173923	CompoundStatement		12:10:617:617	173810	0					
ANR	173924	ExpressionStatement	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"	1390:4:39837:39920	173810	0	True				
ANR	173925	CallExpression	"zend_throw_or_error ( fetch_type , NULL , ""Class '%s' not found"" , ZSTR_VAL ( class_name ) )"		173810	0					
ANR	173926	Callee	zend_throw_or_error		173810	0					
ANR	173927	Identifier	zend_throw_or_error		173810	0					
ANR	173928	ArgumentList	fetch_type		173810	1					
ANR	173929	Argument	fetch_type		173810	0					
ANR	173930	Identifier	fetch_type		173810	0					
ANR	173931	Argument	NULL		173810	1					
ANR	173932	Identifier	NULL		173810	0					
ANR	173933	Argument	"""Class '%s' not found"""		173810	2					
ANR	173934	PrimaryExpression	"""Class '%s' not found"""		173810	0					
ANR	173935	Argument	ZSTR_VAL ( class_name )		173810	3					
ANR	173936	CallExpression	ZSTR_VAL ( class_name )		173810	0					
ANR	173937	Callee	ZSTR_VAL		173810	0					
ANR	173938	Identifier	ZSTR_VAL		173810	0					
ANR	173939	ArgumentList	class_name		173810	1					
ANR	173940	Argument	class_name		173810	0					
ANR	173941	Identifier	class_name		173810	0					
ANR	173942	ReturnStatement	return NULL ;	1393:2:39933:39944	173810	1	True				
ANR	173943	Identifier	NULL		173810	0					
ANR	173944	ReturnStatement	return ce ;	1395:1:39950:39959	173810	2	True				
ANR	173945	Identifier	ce		173810	0					
ANR	173946	ReturnType	zend_class_entry *		173810	1					
ANR	173947	Identifier	zend_fetch_class_by_name		173810	2					
ANR	173948	ParameterList	"zend_string * class_name , const zval * key , int fetch_type"		173810	3					
ANR	173949	Parameter	zend_string * class_name	1377:43:39145:39167	173810	0	True				
ANR	173950	ParameterType	zend_string *		173810	0					
ANR	173951	Identifier	class_name		173810	1					
ANR	173952	Parameter	const zval * key	1377:68:39170:39184	173810	1	True				
ANR	173953	ParameterType	const zval *		173810	0					
ANR	173954	Identifier	key		173810	1					
ANR	173955	Parameter	int fetch_type	1377:85:39187:39200	173810	2	True				
ANR	173956	ParameterType	int		173810	0					
ANR	173957	Identifier	fetch_type		173810	1					
ANR	173958	CFGEntryNode	ENTRY		173810		True				
ANR	173959	CFGExitNode	EXIT		173810		True				
ANR	173960	Symbol	zend_lookup_class_ex		173810						
ANR	173961	Symbol	exception		173810						
ANR	173962	Symbol	fetch_type		173810						
ANR	173963	Symbol	ce		173810						
ANR	173964	Symbol	EG		173810						
ANR	173965	Symbol	NULL		173810						
ANR	173966	Symbol	ZEND_FETCH_CLASS_SILENT		173810						
ANR	173967	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		173810						
ANR	173968	Symbol	ZSTR_VAL		173810						
ANR	173969	Symbol	ZEND_FETCH_CLASS_TRAIT		173810						
ANR	173970	Symbol	ZEND_FETCH_CLASS_MASK		173810						
ANR	173971	Symbol	ZEND_FETCH_CLASS_INTERFACE		173810						
ANR	173972	Symbol	class_name		173810						
ANR	173973	Symbol	key		173810						
ANR	173974	ClassDef	_zend_abstract_info	1407:8:40345:40463							
ANR	173975	DeclStmt									
ANR	173976	Decl							zend_function	zend_function * [ MAX_ABSTRACT_INFO_CNT + 1 ]	afn
ANR	173977	DeclStmt									
ANR	173978	Decl							int	int	cnt
ANR	173979	DeclStmt									
ANR	173980	Decl							int	int	ctor
ANR	173981	DeclStmt									
ANR	173982	Decl							_zend_abstract_info	_zend_abstract_info	zend_abstract_info
ANR	173983	Function	zend_verify_abstract_class_function	1413:0:40466:40864							
ANR	173984	FunctionDef	"zend_verify_abstract_class_function (zend_function * fn , zend_abstract_info * ai)"		173983	0					
ANR	173985	CompoundStatement		1414:0:40567:40864	173983	0					
ANR	173986	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		173983	0					
ANR	173987	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1415:5:40574:40612	173983	0	True				
ANR	173988	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		173983	0		&			
ANR	173989	MemberAccess	fn -> common . fn_flags		173983	0					
ANR	173990	PtrMemberAccess	fn -> common		173983	0					
ANR	173991	Identifier	fn		173983	0					
ANR	173992	Identifier	common		173983	1					
ANR	173993	Identifier	fn_flags		173983	1					
ANR	173994	Identifier	ZEND_ACC_ABSTRACT		173983	1					
ANR	173995	CompoundStatement		2:46:47:47	173983	1					
ANR	173996	IfStatement	if ( ai -> cnt < MAX_ABSTRACT_INFO_CNT )		173983	0					
ANR	173997	Condition	ai -> cnt < MAX_ABSTRACT_INFO_CNT	1416:6:40623:40653	173983	0	True				
ANR	173998	RelationalExpression	ai -> cnt < MAX_ABSTRACT_INFO_CNT		173983	0		<			
ANR	173999	PtrMemberAccess	ai -> cnt		173983	0					
ANR	174000	Identifier	ai		173983	0					
ANR	174001	Identifier	cnt		173983	1					
ANR	174002	Identifier	MAX_ABSTRACT_INFO_CNT		173983	1					
ANR	174003	CompoundStatement		3:39:88:88	173983	1					
ANR	174004	ExpressionStatement	ai -> afn [ ai -> cnt ] = fn	1417:3:40661:40682	173983	0	True				
ANR	174005	AssignmentExpression	ai -> afn [ ai -> cnt ] = fn		173983	0		=			
ANR	174006	ArrayIndexing	ai -> afn [ ai -> cnt ]		173983	0					
ANR	174007	PtrMemberAccess	ai -> afn		173983	0					
ANR	174008	Identifier	ai		173983	0					
ANR	174009	Identifier	afn		173983	1					
ANR	174010	PtrMemberAccess	ai -> cnt		173983	1					
ANR	174011	Identifier	ai		173983	0					
ANR	174012	Identifier	cnt		173983	1					
ANR	174013	Identifier	fn		173983	1					
ANR	174014	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_CTOR )		173983	1					
ANR	174015	Condition	fn -> common . fn_flags & ZEND_ACC_CTOR	1419:6:40694:40728	173983	0	True				
ANR	174016	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_CTOR		173983	0		&			
ANR	174017	MemberAccess	fn -> common . fn_flags		173983	0					
ANR	174018	PtrMemberAccess	fn -> common		173983	0					
ANR	174019	Identifier	fn		173983	0					
ANR	174020	Identifier	common		173983	1					
ANR	174021	Identifier	fn_flags		173983	1					
ANR	174022	Identifier	ZEND_ACC_CTOR		173983	1					
ANR	174023	CompoundStatement		6:43:163:163	173983	1					
ANR	174024	IfStatement	if ( ! ai -> ctor )		173983	0					
ANR	174025	Condition	! ai -> ctor	1420:7:40740:40748	173983	0	True				
ANR	174026	UnaryOperationExpression	! ai -> ctor		173983	0					
ANR	174027	UnaryOperator	!		173983	0					
ANR	174028	PtrMemberAccess	ai -> ctor		173983	1					
ANR	174029	Identifier	ai		173983	0					
ANR	174030	Identifier	ctor		173983	1					
ANR	174031	CompoundStatement		7:18:183:183	173983	1					
ANR	174032	ExpressionStatement	ai -> cnt ++	1421:4:40757:40766	173983	0	True				
ANR	174033	PostIncDecOperationExpression	ai -> cnt ++		173983	0					
ANR	174034	PtrMemberAccess	ai -> cnt		173983	0					
ANR	174035	Identifier	ai		173983	0					
ANR	174036	Identifier	cnt		173983	1					
ANR	174037	IncDec	++		173983	1					
ANR	174038	ExpressionStatement	ai -> ctor = 1	1422:4:40772:40784	173983	1	True				
ANR	174039	AssignmentExpression	ai -> ctor = 1		173983	0		=			
ANR	174040	PtrMemberAccess	ai -> ctor		173983	0					
ANR	174041	Identifier	ai		173983	0					
ANR	174042	Identifier	ctor		173983	1					
ANR	174043	PrimaryExpression	1		173983	1					
ANR	174044	ElseStatement	else		173983	0					
ANR	174045	CompoundStatement		10:10:228:228	173983	0					
ANR	174046	ExpressionStatement	ai -> afn [ ai -> cnt ] = NULL	1424:4:40802:40825	173983	0	True				
ANR	174047	AssignmentExpression	ai -> afn [ ai -> cnt ] = NULL		173983	0		=			
ANR	174048	ArrayIndexing	ai -> afn [ ai -> cnt ]		173983	0					
ANR	174049	PtrMemberAccess	ai -> afn		173983	0					
ANR	174050	Identifier	ai		173983	0					
ANR	174051	Identifier	afn		173983	1					
ANR	174052	PtrMemberAccess	ai -> cnt		173983	1					
ANR	174053	Identifier	ai		173983	0					
ANR	174054	Identifier	cnt		173983	1					
ANR	174055	Identifier	NULL		173983	1					
ANR	174056	ElseStatement	else		173983	0					
ANR	174057	CompoundStatement		13:9:273:273	173983	0					
ANR	174058	ExpressionStatement	ai -> cnt ++	1427:3:40846:40855	173983	0	True				
ANR	174059	PostIncDecOperationExpression	ai -> cnt ++		173983	0					
ANR	174060	PtrMemberAccess	ai -> cnt		173983	0					
ANR	174061	Identifier	ai		173983	0					
ANR	174062	Identifier	cnt		173983	1					
ANR	174063	IncDec	++		173983	1					
ANR	174064	ReturnType	static void		173983	1					
ANR	174065	Identifier	zend_verify_abstract_class_function		173983	2					
ANR	174066	ParameterList	"zend_function * fn , zend_abstract_info * ai"		173983	3					
ANR	174067	Parameter	zend_function * fn	1413:48:40514:40530	173983	0	True				
ANR	174068	ParameterType	zend_function *		173983	0					
ANR	174069	Identifier	fn		173983	1					
ANR	174070	Parameter	zend_abstract_info * ai	1413:67:40533:40554	173983	1	True				
ANR	174071	ParameterType	zend_abstract_info *		173983	0					
ANR	174072	Identifier	ai		173983	1					
ANR	174073	CFGEntryNode	ENTRY		173983		True				
ANR	174074	CFGExitNode	EXIT		173983		True				
ANR	174075	Symbol	fn -> common . fn_flags		173983						
ANR	174076	Symbol	NULL		173983						
ANR	174077	Symbol	ai -> cnt		173983						
ANR	174078	Symbol	ai -> afn		173983						
ANR	174079	Symbol	fn		173983						
ANR	174080	Symbol	ai		173983						
ANR	174081	Symbol	ai -> ctor		173983						
ANR	174082	Symbol	* fn		173983						
ANR	174083	Symbol	* ai		173983						
ANR	174084	Symbol	MAX_ABSTRACT_INFO_CNT		173983						
ANR	174085	Symbol	ZEND_ACC_ABSTRACT		173983						
ANR	174086	Symbol	fn -> common		173983						
ANR	174087	Symbol	* ai -> cnt		173983						
ANR	174088	Symbol	* ai -> afn		173983						
ANR	174089	Symbol	ZEND_ACC_CTOR		173983						
ANR	174090	Symbol	* * ai		173983						
ANR	174091	Function	zend_verify_abstract_class	1433:0:40877:41679							
ANR	174092	FunctionDef	zend_verify_abstract_class (zend_class_entry * ce)		174091	0					
ANR	174093	CompoundStatement		1434:0:40941:41679	174091	0					
ANR	174094	IdentifierDeclStatement	zend_function * func ;	1435:1:40944:40963	174091	0	True				
ANR	174095	IdentifierDecl	* func		174091	0					
ANR	174096	IdentifierDeclType	zend_function *		174091	0					
ANR	174097	Identifier	func		174091	1					
ANR	174098	IdentifierDeclStatement	zend_abstract_info ai ;	1436:1:40966:40987	174091	1	True				
ANR	174099	IdentifierDecl	ai		174091	0					
ANR	174100	IdentifierDeclType	zend_abstract_info		174091	0					
ANR	174101	Identifier	ai		174091	1					
ANR	174102	IfStatement	if ( ( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS ) && ! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) ) )		174091	2					
ANR	174103	Condition	( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS ) && ! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )	1438:5:40995:41116	174091	0	True				
ANR	174104	AndExpression	( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS ) && ! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )		174091	0		&&			
ANR	174105	BitAndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		174091	0		&			
ANR	174106	PtrMemberAccess	ce -> ce_flags		174091	0					
ANR	174107	Identifier	ce		174091	0					
ANR	174108	Identifier	ce_flags		174091	1					
ANR	174109	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		174091	1					
ANR	174110	UnaryOperationExpression	! ( ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS ) )		174091	1					
ANR	174111	UnaryOperator	!		174091	0					
ANR	174112	BitAndExpression	ce -> ce_flags & ( ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS )		174091	1		&			
ANR	174113	PtrMemberAccess	ce -> ce_flags		174091	0					
ANR	174114	Identifier	ce		174091	0					
ANR	174115	Identifier	ce_flags		174091	1					
ANR	174116	InclusiveOrExpression	ZEND_ACC_TRAIT | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		174091	1		|			
ANR	174117	Identifier	ZEND_ACC_TRAIT		174091	0					
ANR	174118	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		174091	1					
ANR	174119	CompoundStatement		5:129:177:177	174091	1					
ANR	174120	ExpressionStatement	"memset ( & ai , 0 , sizeof ( ai ) )"	1439:2:41123:41149	174091	0	True				
ANR	174121	CallExpression	"memset ( & ai , 0 , sizeof ( ai ) )"		174091	0					
ANR	174122	Callee	memset		174091	0					
ANR	174123	Identifier	memset		174091	0					
ANR	174124	ArgumentList	& ai		174091	1					
ANR	174125	Argument	& ai		174091	0					
ANR	174126	UnaryOperationExpression	& ai		174091	0					
ANR	174127	UnaryOperator	&		174091	0					
ANR	174128	Identifier	ai		174091	1					
ANR	174129	Argument	0		174091	1					
ANR	174130	PrimaryExpression	0		174091	0					
ANR	174131	Argument	sizeof ( ai )		174091	2					
ANR	174132	SizeofExpression	sizeof ( ai )		174091	0					
ANR	174133	Sizeof	sizeof		174091	0					
ANR	174134	SizeofOperand	ai		174091	1					
ANR	174135	Statement	ZEND_HASH_FOREACH_PTR	1441:2:41154:41174	174091	1	True				
ANR	174136	Statement	(	1441:23:41175:41175	174091	2	True				
ANR	174137	Statement	&	1441:24:41176:41176	174091	3	True				
ANR	174138	Statement	ce	1441:25:41177:41178	174091	4	True				
ANR	174139	Statement	->	1441:27:41179:41180	174091	5	True				
ANR	174140	Statement	function_table	1441:29:41181:41194	174091	6	True				
ANR	174141	Statement	","	1441:43:41195:41195	174091	7	True				
ANR	174142	Statement	func	1441:45:41197:41200	174091	8	True				
ANR	174143	Statement	)	1441:49:41201:41201	174091	9	True				
ANR	174144	CompoundStatement		8:51:261:261	174091	10					
ANR	174145	ExpressionStatement	"zend_verify_abstract_class_function ( func , & ai )"	1442:3:41208:41254	174091	0	True				
ANR	174146	CallExpression	"zend_verify_abstract_class_function ( func , & ai )"		174091	0					
ANR	174147	Callee	zend_verify_abstract_class_function		174091	0					
ANR	174148	Identifier	zend_verify_abstract_class_function		174091	0					
ANR	174149	ArgumentList	func		174091	1					
ANR	174150	Argument	func		174091	0					
ANR	174151	Identifier	func		174091	0					
ANR	174152	Argument	& ai		174091	1					
ANR	174153	UnaryOperationExpression	& ai		174091	0					
ANR	174154	UnaryOperator	&		174091	0					
ANR	174155	Identifier	ai		174091	1					
ANR	174156	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1443:4:41260:41283	174091	11	True				
ANR	174157	CallExpression	ZEND_HASH_FOREACH_END ( )		174091	0					
ANR	174158	Callee	ZEND_HASH_FOREACH_END		174091	0					
ANR	174159	Identifier	ZEND_HASH_FOREACH_END		174091	0					
ANR	174160	ArgumentList			174091	1					
ANR	174161	IfStatement	if ( ai . cnt )		174091	12					
ANR	174162	Condition	ai . cnt	1445:6:41292:41297	174091	0	True				
ANR	174163	MemberAccess	ai . cnt		174091	0					
ANR	174164	Identifier	ai		174091	0					
ANR	174165	Identifier	cnt		174091	1					
ANR	174166	CompoundStatement		12:14:358:358	174091	1					
ANR	174167	Statement	zend_error_noreturn	1446:3:41305:41323	174091	0	True				
ANR	174168	Statement	(	1446:22:41324:41324	174091	1	True				
ANR	174169	Statement	E_ERROR	1446:23:41325:41331	174091	2	True				
ANR	174170	Statement	","	1446:30:41332:41332	174091	3	True				
ANR	174171	Statement	"""Class %s contains %d abstract method%s and must therefore be declared abstract or implement the remaining methods ("""	1446:32:41334:41450	174091	4	True				
ANR	174172	Statement	MAX_ABSTRACT_INFO_FMT	1446:150:41452:41472	174091	5	True				
ANR	174173	Statement	MAX_ABSTRACT_INFO_FMT	1446:172:41474:41494	174091	6	True				
ANR	174174	Statement	MAX_ABSTRACT_INFO_FMT	1446:194:41496:41516	174091	7	True				
ANR	174175	Statement	""")"""	1446:216:41518:41520	174091	8	True				
ANR	174176	Statement	","	1446:219:41521:41521	174091	9	True				
ANR	174177	Statement	ZSTR_VAL	1447:4:41527:41534	174091	10	True				
ANR	174178	Statement	(	1447:12:41535:41535	174091	11	True				
ANR	174179	Statement	ce	1447:13:41536:41537	174091	12	True				
ANR	174180	Statement	->	1447:15:41538:41539	174091	13	True				
ANR	174181	Statement	name	1447:17:41540:41543	174091	14	True				
ANR	174182	Statement	)	1447:21:41544:41544	174091	15	True				
ANR	174183	Statement	","	1447:22:41545:41545	174091	16	True				
ANR	174184	Statement	ai	1447:24:41547:41548	174091	17	True				
ANR	174185	Statement	.	1447:26:41549:41549	174091	18	True				
ANR	174186	Statement	cnt	1447:27:41550:41552	174091	19	True				
ANR	174187	Statement	","	1447:30:41553:41553	174091	20	True				
ANR	174188	Statement	ai	1448:4:41559:41560	174091	21	True				
ANR	174189	Statement	.	1448:6:41561:41561	174091	22	True				
ANR	174190	Statement	cnt	1448:7:41562:41564	174091	23	True				
ANR	174191	Statement	>	1448:11:41566:41566	174091	24	True				
ANR	174192	Statement	1	1448:13:41568:41568	174091	25	True				
ANR	174193	Statement	?	1448:15:41570:41570	174091	26	True				
ANR	174194	Statement	"""s"""	1448:17:41572:41574	174091	27	True				
ANR	174195	Statement	:	1448:21:41576:41576	174091	28	True				
ANR	174196	Statement	""""""	1448:23:41578:41579	174091	29	True				
ANR	174197	Statement	","	1448:25:41580:41580	174091	30	True				
ANR	174198	Statement	DISPLAY_ABSTRACT_FN	1449:4:41586:41604	174091	31	True				
ANR	174199	Statement	(	1449:23:41605:41605	174091	32	True				
ANR	174200	Statement	0	1449:24:41606:41606	174091	33	True				
ANR	174201	Statement	)	1449:25:41607:41607	174091	34	True				
ANR	174202	Statement	","	1449:26:41608:41608	174091	35	True				
ANR	174203	Statement	DISPLAY_ABSTRACT_FN	1450:4:41614:41632	174091	36	True				
ANR	174204	Statement	(	1450:23:41633:41633	174091	37	True				
ANR	174205	Statement	1	1450:24:41634:41634	174091	38	True				
ANR	174206	Statement	)	1450:25:41635:41635	174091	39	True				
ANR	174207	Statement	","	1450:26:41636:41636	174091	40	True				
ANR	174208	Statement	DISPLAY_ABSTRACT_FN	1451:4:41642:41660	174091	41	True				
ANR	174209	Statement	(	1451:23:41661:41661	174091	42	True				
ANR	174210	Statement	2	1451:24:41662:41662	174091	43	True				
ANR	174211	Statement	)	1451:25:41663:41663	174091	44	True				
ANR	174212	Statement	)	1452:4:41669:41669	174091	45	True				
ANR	174213	ExpressionStatement		1452:5:41670:41670	174091	46	True				
ANR	174214	ReturnType	void		174091	1					
ANR	174215	Identifier	zend_verify_abstract_class		174091	2					
ANR	174216	ParameterList	zend_class_entry * ce		174091	3					
ANR	174217	Parameter	zend_class_entry * ce	1433:32:40909:40928	174091	0	True				
ANR	174218	ParameterType	zend_class_entry *		174091	0					
ANR	174219	Identifier	ce		174091	1					
ANR	174220	CFGEntryNode	ENTRY		174091		True				
ANR	174221	CFGExitNode	EXIT		174091		True				
ANR	174222	Symbol	ce -> ce_flags		174091						
ANR	174223	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		174091						
ANR	174224	Symbol	ce		174091						
ANR	174225	Symbol	& ai		174091						
ANR	174226	Symbol	func		174091						
ANR	174227	Symbol	ai		174091						
ANR	174228	Symbol	* ce		174091						
ANR	174229	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		174091						
ANR	174230	Symbol	ai . cnt		174091						
ANR	174231	Symbol	ZEND_ACC_TRAIT		174091						
ANR	174232	Function	zend_delete_global_variable	1458:0:41692:41819							
ANR	174233	FunctionDef	zend_delete_global_variable (zend_string * name)		174232	0					
ANR	174234	CompoundStatement		1459:0:41762:41819	174232	0					
ANR	174235	ReturnStatement	"return zend_hash_del_ind ( & EG ( symbol_table ) , name ) ;"	1460:4:41768:41817	174232	0	True				
ANR	174236	CallExpression	"zend_hash_del_ind ( & EG ( symbol_table ) , name )"		174232	0					
ANR	174237	Callee	zend_hash_del_ind		174232	0					
ANR	174238	Identifier	zend_hash_del_ind		174232	0					
ANR	174239	ArgumentList	& EG ( symbol_table )		174232	1					
ANR	174240	Argument	& EG ( symbol_table )		174232	0					
ANR	174241	UnaryOperationExpression	& EG ( symbol_table )		174232	0					
ANR	174242	UnaryOperator	&		174232	0					
ANR	174243	CallExpression	EG ( symbol_table )		174232	1					
ANR	174244	Callee	EG		174232	0					
ANR	174245	Identifier	EG		174232	0					
ANR	174246	ArgumentList	symbol_table		174232	1					
ANR	174247	Argument	symbol_table		174232	0					
ANR	174248	Identifier	symbol_table		174232	0					
ANR	174249	Argument	name		174232	1					
ANR	174250	Identifier	name		174232	0					
ANR	174251	ReturnType	ZEND_API int		174232	1					
ANR	174252	Identifier	zend_delete_global_variable		174232	2					
ANR	174253	ParameterList	zend_string * name		174232	3					
ANR	174254	Parameter	zend_string * name	1458:41:41733:41749	174232	0	True				
ANR	174255	ParameterType	zend_string *		174232	0					
ANR	174256	Identifier	name		174232	1					
ANR	174257	CFGEntryNode	ENTRY		174232		True				
ANR	174258	CFGExitNode	EXIT		174232		True				
ANR	174259	Symbol	zend_hash_del_ind		174232						
ANR	174260	Symbol	name		174232						
ANR	174261	Symbol	symbol_table		174232						
ANR	174262	Symbol	& EG		174232						
ANR	174263	Function	zend_rebuild_symbol_table	1464:0:41832:43202							
ANR	174264	FunctionDef	zend_rebuild_symbol_table ()		174263	0					
ANR	174265	CompoundStatement		1465:0:41895:43202	174263	0					
ANR	174266	IdentifierDeclStatement	zend_execute_data * ex ;	1466:1:41898:41919	174263	0	True				
ANR	174267	IdentifierDecl	* ex		174263	0					
ANR	174268	IdentifierDeclType	zend_execute_data *		174263	0					
ANR	174269	Identifier	ex		174263	1					
ANR	174270	IdentifierDeclStatement	zend_array * symbol_table ;	1467:1:41922:41946	174263	1	True				
ANR	174271	IdentifierDecl	* symbol_table		174263	0					
ANR	174272	IdentifierDeclType	zend_array *		174263	0					
ANR	174273	Identifier	symbol_table		174263	1					
ANR	174274	ExpressionStatement	ex = EG ( current_execute_data )	1470:1:41994:42023	174263	2	True				
ANR	174275	AssignmentExpression	ex = EG ( current_execute_data )		174263	0		=			
ANR	174276	Identifier	ex		174263	0					
ANR	174277	CallExpression	EG ( current_execute_data )		174263	1					
ANR	174278	Callee	EG		174263	0					
ANR	174279	Identifier	EG		174263	0					
ANR	174280	ArgumentList	current_execute_data		174263	1					
ANR	174281	Argument	current_execute_data		174263	0					
ANR	174282	Identifier	current_execute_data		174263	0					
ANR	174283	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type ) ) )		174263	3					
ANR	174284	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type ) )	1471:8:42033:42091	174263	0	True				
ANR	174285	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type ) )		174263	0		&&			
ANR	174286	Identifier	ex		174263	0					
ANR	174287	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> common . type )		174263	1		||			
ANR	174288	UnaryOperationExpression	! ex -> func		174263	0					
ANR	174289	UnaryOperator	!		174263	0					
ANR	174290	PtrMemberAccess	ex -> func		174263	1					
ANR	174291	Identifier	ex		174263	0					
ANR	174292	Identifier	func		174263	1					
ANR	174293	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> common . type )		174263	1					
ANR	174294	UnaryOperator	!		174263	0					
ANR	174295	CallExpression	ZEND_USER_CODE ( ex -> func -> common . type )		174263	1					
ANR	174296	Callee	ZEND_USER_CODE		174263	0					
ANR	174297	Identifier	ZEND_USER_CODE		174263	0					
ANR	174298	ArgumentList	ex -> func -> common . type		174263	1					
ANR	174299	Argument	ex -> func -> common . type		174263	0					
ANR	174300	MemberAccess	ex -> func -> common . type		174263	0					
ANR	174301	PtrMemberAccess	ex -> func -> common		174263	0					
ANR	174302	PtrMemberAccess	ex -> func		174263	0					
ANR	174303	Identifier	ex		174263	0					
ANR	174304	Identifier	func		174263	1					
ANR	174305	Identifier	common		174263	1					
ANR	174306	Identifier	type		174263	1					
ANR	174307	CompoundStatement		7:69:198:198	174263	1					
ANR	174308	ExpressionStatement	ex = ex -> prev_execute_data	1472:2:42098:42124	174263	0	True				
ANR	174309	AssignmentExpression	ex = ex -> prev_execute_data		174263	0		=			
ANR	174310	Identifier	ex		174263	0					
ANR	174311	PtrMemberAccess	ex -> prev_execute_data		174263	1					
ANR	174312	Identifier	ex		174263	0					
ANR	174313	Identifier	prev_execute_data		174263	1					
ANR	174314	IfStatement	if ( ! ex )		174263	4					
ANR	174315	Condition	! ex	1474:5:42134:42136	174263	0	True				
ANR	174316	UnaryOperationExpression	! ex		174263	0					
ANR	174317	UnaryOperator	!		174263	0					
ANR	174318	Identifier	ex		174263	1					
ANR	174319	CompoundStatement		10:10:243:243	174263	1					
ANR	174320	ReturnStatement	return NULL ;	1475:2:42143:42154	174263	0	True				
ANR	174321	Identifier	NULL		174263	0					
ANR	174322	IfStatement	if ( ex -> symbol_table )		174263	5					
ANR	174323	Condition	ex -> symbol_table	1477:5:42164:42179	174263	0	True				
ANR	174324	PtrMemberAccess	ex -> symbol_table		174263	0					
ANR	174325	Identifier	ex		174263	0					
ANR	174326	Identifier	symbol_table		174263	1					
ANR	174327	CompoundStatement		13:23:286:286	174263	1					
ANR	174328	ReturnStatement	return ex -> symbol_table ;	1478:2:42186:42209	174263	0	True				
ANR	174329	PtrMemberAccess	ex -> symbol_table		174263	0					
ANR	174330	Identifier	ex		174263	0					
ANR	174331	Identifier	symbol_table		174263	1					
ANR	174332	IfStatement	if ( EG ( symtable_cache_ptr ) >= EG ( symtable_cache ) )		174263	6					
ANR	174333	Condition	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )	1481:5:42220:42263	174263	0	True				
ANR	174334	RelationalExpression	EG ( symtable_cache_ptr ) >= EG ( symtable_cache )		174263	0		>=			
ANR	174335	CallExpression	EG ( symtable_cache_ptr )		174263	0					
ANR	174336	Callee	EG		174263	0					
ANR	174337	Identifier	EG		174263	0					
ANR	174338	ArgumentList	symtable_cache_ptr		174263	1					
ANR	174339	Argument	symtable_cache_ptr		174263	0					
ANR	174340	Identifier	symtable_cache_ptr		174263	0					
ANR	174341	CallExpression	EG ( symtable_cache )		174263	1					
ANR	174342	Callee	EG		174263	0					
ANR	174343	Identifier	EG		174263	0					
ANR	174344	ArgumentList	symtable_cache		174263	1					
ANR	174345	Argument	symtable_cache		174263	0					
ANR	174346	Identifier	symtable_cache		174263	0					
ANR	174347	CompoundStatement		17:51:370:370	174263	1					
ANR	174348	ExpressionStatement	symbol_table = ex -> symbol_table = * ( EG ( symtable_cache_ptr ) -- )	1483:2:42348:42409	174263	0	True				
ANR	174349	AssignmentExpression	symbol_table = ex -> symbol_table = * ( EG ( symtable_cache_ptr ) -- )		174263	0		=			
ANR	174350	Identifier	symbol_table		174263	0					
ANR	174351	AssignmentExpression	ex -> symbol_table = * ( EG ( symtable_cache_ptr ) -- )		174263	1		=			
ANR	174352	PtrMemberAccess	ex -> symbol_table		174263	0					
ANR	174353	Identifier	ex		174263	0					
ANR	174354	Identifier	symbol_table		174263	1					
ANR	174355	UnaryOperationExpression	* ( EG ( symtable_cache_ptr ) -- )		174263	1					
ANR	174356	UnaryOperator	*		174263	0					
ANR	174357	PostIncDecOperationExpression	EG ( symtable_cache_ptr ) --		174263	1					
ANR	174358	CallExpression	EG ( symtable_cache_ptr )		174263	0					
ANR	174359	Callee	EG		174263	0					
ANR	174360	Identifier	EG		174263	0					
ANR	174361	ArgumentList	symtable_cache_ptr		174263	1					
ANR	174362	Argument	symtable_cache_ptr		174263	0					
ANR	174363	Identifier	symtable_cache_ptr		174263	0					
ANR	174364	IncDec	--		174263	1					
ANR	174365	IfStatement	if ( ! ex -> func -> op_array . last_var )		174263	1					
ANR	174366	Condition	! ex -> func -> op_array . last_var	1484:6:42417:42444	174263	0	True				
ANR	174367	UnaryOperationExpression	! ex -> func -> op_array . last_var		174263	0					
ANR	174368	UnaryOperator	!		174263	0					
ANR	174369	MemberAccess	ex -> func -> op_array . last_var		174263	1					
ANR	174370	PtrMemberAccess	ex -> func -> op_array		174263	0					
ANR	174371	PtrMemberAccess	ex -> func		174263	0					
ANR	174372	Identifier	ex		174263	0					
ANR	174373	Identifier	func		174263	1					
ANR	174374	Identifier	op_array		174263	1					
ANR	174375	Identifier	last_var		174263	1					
ANR	174376	CompoundStatement		20:36:551:551	174263	1					
ANR	174377	ReturnStatement	return symbol_table ;	1485:3:42452:42471	174263	0	True				
ANR	174378	Identifier	symbol_table		174263	0					
ANR	174379	ExpressionStatement	"zend_hash_extend ( symbol_table , ex -> func -> op_array . last_var , 0 )"	1487:2:42479:42541	174263	2	True				
ANR	174380	CallExpression	"zend_hash_extend ( symbol_table , ex -> func -> op_array . last_var , 0 )"		174263	0					
ANR	174381	Callee	zend_hash_extend		174263	0					
ANR	174382	Identifier	zend_hash_extend		174263	0					
ANR	174383	ArgumentList	symbol_table		174263	1					
ANR	174384	Argument	symbol_table		174263	0					
ANR	174385	Identifier	symbol_table		174263	0					
ANR	174386	Argument	ex -> func -> op_array . last_var		174263	1					
ANR	174387	MemberAccess	ex -> func -> op_array . last_var		174263	0					
ANR	174388	PtrMemberAccess	ex -> func -> op_array		174263	0					
ANR	174389	PtrMemberAccess	ex -> func		174263	0					
ANR	174390	Identifier	ex		174263	0					
ANR	174391	Identifier	func		174263	1					
ANR	174392	Identifier	op_array		174263	1					
ANR	174393	Identifier	last_var		174263	1					
ANR	174394	Argument	0		174263	2					
ANR	174395	PrimaryExpression	0		174263	0					
ANR	174396	ElseStatement	else		174263	0					
ANR	174397	CompoundStatement		24:8:655:655	174263	0					
ANR	174398	ExpressionStatement	symbol_table = ex -> symbol_table = emalloc ( sizeof ( zend_array ) )	1489:2:42555:42616	174263	0	True				
ANR	174399	AssignmentExpression	symbol_table = ex -> symbol_table = emalloc ( sizeof ( zend_array ) )		174263	0		=			
ANR	174400	Identifier	symbol_table		174263	0					
ANR	174401	AssignmentExpression	ex -> symbol_table = emalloc ( sizeof ( zend_array ) )		174263	1		=			
ANR	174402	PtrMemberAccess	ex -> symbol_table		174263	0					
ANR	174403	Identifier	ex		174263	0					
ANR	174404	Identifier	symbol_table		174263	1					
ANR	174405	CallExpression	emalloc ( sizeof ( zend_array ) )		174263	1					
ANR	174406	Callee	emalloc		174263	0					
ANR	174407	Identifier	emalloc		174263	0					
ANR	174408	ArgumentList	sizeof ( zend_array )		174263	1					
ANR	174409	Argument	sizeof ( zend_array )		174263	0					
ANR	174410	SizeofExpression	sizeof ( zend_array )		174263	0					
ANR	174411	Sizeof	sizeof		174263	0					
ANR	174412	SizeofOperand	zend_array		174263	1					
ANR	174413	ExpressionStatement	"zend_hash_init ( symbol_table , ex -> func -> op_array . last_var , NULL , ZVAL_PTR_DTOR , 0 )"	1490:2:42620:42701	174263	1	True				
ANR	174414	CallExpression	"zend_hash_init ( symbol_table , ex -> func -> op_array . last_var , NULL , ZVAL_PTR_DTOR , 0 )"		174263	0					
ANR	174415	Callee	zend_hash_init		174263	0					
ANR	174416	Identifier	zend_hash_init		174263	0					
ANR	174417	ArgumentList	symbol_table		174263	1					
ANR	174418	Argument	symbol_table		174263	0					
ANR	174419	Identifier	symbol_table		174263	0					
ANR	174420	Argument	ex -> func -> op_array . last_var		174263	1					
ANR	174421	MemberAccess	ex -> func -> op_array . last_var		174263	0					
ANR	174422	PtrMemberAccess	ex -> func -> op_array		174263	0					
ANR	174423	PtrMemberAccess	ex -> func		174263	0					
ANR	174424	Identifier	ex		174263	0					
ANR	174425	Identifier	func		174263	1					
ANR	174426	Identifier	op_array		174263	1					
ANR	174427	Identifier	last_var		174263	1					
ANR	174428	Argument	NULL		174263	2					
ANR	174429	Identifier	NULL		174263	0					
ANR	174430	Argument	ZVAL_PTR_DTOR		174263	3					
ANR	174431	Identifier	ZVAL_PTR_DTOR		174263	0					
ANR	174432	Argument	0		174263	4					
ANR	174433	PrimaryExpression	0		174263	0					
ANR	174434	IfStatement	if ( ! ex -> func -> op_array . last_var )		174263	2					
ANR	174435	Condition	! ex -> func -> op_array . last_var	1491:6:42709:42736	174263	0	True				
ANR	174436	UnaryOperationExpression	! ex -> func -> op_array . last_var		174263	0					
ANR	174437	UnaryOperator	!		174263	0					
ANR	174438	MemberAccess	ex -> func -> op_array . last_var		174263	1					
ANR	174439	PtrMemberAccess	ex -> func -> op_array		174263	0					
ANR	174440	PtrMemberAccess	ex -> func		174263	0					
ANR	174441	Identifier	ex		174263	0					
ANR	174442	Identifier	func		174263	1					
ANR	174443	Identifier	op_array		174263	1					
ANR	174444	Identifier	last_var		174263	1					
ANR	174445	CompoundStatement		27:36:843:843	174263	1					
ANR	174446	ReturnStatement	return symbol_table ;	1492:3:42744:42763	174263	0	True				
ANR	174447	Identifier	symbol_table		174263	0					
ANR	174448	ExpressionStatement	"zend_hash_real_init ( symbol_table , 0 )"	1494:2:42771:42807	174263	3	True				
ANR	174449	CallExpression	"zend_hash_real_init ( symbol_table , 0 )"		174263	0					
ANR	174450	Callee	zend_hash_real_init		174263	0					
ANR	174451	Identifier	zend_hash_real_init		174263	0					
ANR	174452	ArgumentList	symbol_table		174263	1					
ANR	174453	Argument	symbol_table		174263	0					
ANR	174454	Identifier	symbol_table		174263	0					
ANR	174455	Argument	0		174263	1					
ANR	174456	PrimaryExpression	0		174263	0					
ANR	174457	IfStatement	if ( EXPECTED ( ex -> func -> op_array . last_var ) )		174263	7					
ANR	174458	Condition	EXPECTED ( ex -> func -> op_array . last_var )	1497:5:42889:42925	174263	0	True				
ANR	174459	CallExpression	EXPECTED ( ex -> func -> op_array . last_var )		174263	0					
ANR	174460	Callee	EXPECTED		174263	0					
ANR	174461	Identifier	EXPECTED		174263	0					
ANR	174462	ArgumentList	ex -> func -> op_array . last_var		174263	1					
ANR	174463	Argument	ex -> func -> op_array . last_var		174263	0					
ANR	174464	MemberAccess	ex -> func -> op_array . last_var		174263	0					
ANR	174465	PtrMemberAccess	ex -> func -> op_array		174263	0					
ANR	174466	PtrMemberAccess	ex -> func		174263	0					
ANR	174467	Identifier	ex		174263	0					
ANR	174468	Identifier	func		174263	1					
ANR	174469	Identifier	op_array		174263	1					
ANR	174470	Identifier	last_var		174263	1					
ANR	174471	CompoundStatement		36:2:1140:1176	174263	1					
ANR	174472	IdentifierDeclStatement	zend_string * * str = ex -> func -> op_array . vars ;	1498:2:42932:42975	174263	0	True				
ANR	174473	IdentifierDecl	* * str = ex -> func -> op_array . vars		174263	0					
ANR	174474	IdentifierDeclType	zend_string * *		174263	0					
ANR	174475	Identifier	str		174263	1					
ANR	174476	AssignmentExpression	* * str = ex -> func -> op_array . vars		174263	2		=			
ANR	174477	Identifier	str		174263	0					
ANR	174478	MemberAccess	ex -> func -> op_array . vars		174263	1					
ANR	174479	PtrMemberAccess	ex -> func -> op_array		174263	0					
ANR	174480	PtrMemberAccess	ex -> func		174263	0					
ANR	174481	Identifier	ex		174263	0					
ANR	174482	Identifier	func		174263	1					
ANR	174483	Identifier	op_array		174263	1					
ANR	174484	Identifier	vars		174263	1					
ANR	174485	IdentifierDeclStatement	zend_string * * end = str + ex -> func -> op_array . last_var ;	1499:2:42979:43032	174263	1	True				
ANR	174486	IdentifierDecl	* * end = str + ex -> func -> op_array . last_var		174263	0					
ANR	174487	IdentifierDeclType	zend_string * *		174263	0					
ANR	174488	Identifier	end		174263	1					
ANR	174489	AssignmentExpression	* * end = str + ex -> func -> op_array . last_var		174263	2		=			
ANR	174490	Identifier	end		174263	0					
ANR	174491	AdditiveExpression	str + ex -> func -> op_array . last_var		174263	1		+			
ANR	174492	Identifier	str		174263	0					
ANR	174493	MemberAccess	ex -> func -> op_array . last_var		174263	1					
ANR	174494	PtrMemberAccess	ex -> func -> op_array		174263	0					
ANR	174495	PtrMemberAccess	ex -> func		174263	0					
ANR	174496	Identifier	ex		174263	0					
ANR	174497	Identifier	func		174263	1					
ANR	174498	Identifier	op_array		174263	1					
ANR	174499	Identifier	last_var		174263	1					
ANR	174500	IdentifierDeclStatement	"zval * var = ZEND_CALL_VAR_NUM ( ex , 0 ) ;"	1500:2:43036:43072	174263	2	True				
ANR	174501	IdentifierDecl	"* var = ZEND_CALL_VAR_NUM ( ex , 0 )"		174263	0					
ANR	174502	IdentifierDeclType	zval *		174263	0					
ANR	174503	Identifier	var		174263	1					
ANR	174504	AssignmentExpression	"* var = ZEND_CALL_VAR_NUM ( ex , 0 )"		174263	2		=			
ANR	174505	Identifier	var		174263	0					
ANR	174506	CallExpression	"ZEND_CALL_VAR_NUM ( ex , 0 )"		174263	1					
ANR	174507	Callee	ZEND_CALL_VAR_NUM		174263	0					
ANR	174508	Identifier	ZEND_CALL_VAR_NUM		174263	0					
ANR	174509	ArgumentList	ex		174263	1					
ANR	174510	Argument	ex		174263	0					
ANR	174511	Identifier	ex		174263	0					
ANR	174512	Argument	0		174263	1					
ANR	174513	PrimaryExpression	0		174263	0					
ANR	174514	DoStatement	do		174263	3					
ANR	174515	CompoundStatement		38:5:1184:1184	174263	0					
ANR	174516	ExpressionStatement	"_zend_hash_append_ind ( symbol_table , * str , var )"	1503:3:43085:43131	174263	0	True				
ANR	174517	CallExpression	"_zend_hash_append_ind ( symbol_table , * str , var )"		174263	0					
ANR	174518	Callee	_zend_hash_append_ind		174263	0					
ANR	174519	Identifier	_zend_hash_append_ind		174263	0					
ANR	174520	ArgumentList	symbol_table		174263	1					
ANR	174521	Argument	symbol_table		174263	0					
ANR	174522	Identifier	symbol_table		174263	0					
ANR	174523	Argument	* str		174263	1					
ANR	174524	UnaryOperationExpression	* str		174263	0					
ANR	174525	UnaryOperator	*		174263	0					
ANR	174526	Identifier	str		174263	1					
ANR	174527	Argument	var		174263	2					
ANR	174528	Identifier	var		174263	0					
ANR	174529	ExpressionStatement	str ++	1504:3:43136:43141	174263	1	True				
ANR	174530	PostIncDecOperationExpression	str ++		174263	0					
ANR	174531	Identifier	str		174263	0					
ANR	174532	IncDec	++		174263	1					
ANR	174533	ExpressionStatement	var ++	1505:3:43146:43151	174263	2	True				
ANR	174534	PostIncDecOperationExpression	var ++		174263	0					
ANR	174535	Identifier	var		174263	0					
ANR	174536	IncDec	++		174263	1					
ANR	174537	Condition	str != end	1506:11:43164:43173	174263	1	True				
ANR	174538	EqualityExpression	str != end		174263	0		!=			
ANR	174539	Identifier	str		174263	0					
ANR	174540	Identifier	end		174263	1					
ANR	174541	ReturnStatement	return symbol_table ;	1508:1:43181:43200	174263	8	True				
ANR	174542	Identifier	symbol_table		174263	0					
ANR	174543	ReturnType	ZEND_API zend_array *		174263	1					
ANR	174544	Identifier	zend_rebuild_symbol_table		174263	2					
ANR	174545	ParameterList			174263	3					
ANR	174546	CFGEntryNode	ENTRY		174263		True				
ANR	174547	CFGExitNode	EXIT		174263		True				
ANR	174548	Symbol	symtable_cache		174263						
ANR	174549	Symbol	ex -> func -> op_array		174263						
ANR	174550	Symbol	current_execute_data		174263						
ANR	174551	Symbol	ex -> func		174263						
ANR	174552	Symbol	ex -> func -> op_array . vars		174263						
ANR	174553	Symbol	emalloc		174263						
ANR	174554	Symbol	ex -> func -> op_array . last_var		174263						
ANR	174555	Symbol	end		174263						
ANR	174556	Symbol	* str		174263						
ANR	174557	Symbol	ex -> func -> common		174263						
ANR	174558	Symbol	* * ex		174263						
ANR	174559	Symbol	* ( EG ( symtable_cache_ptr ) -- )		174263						
ANR	174560	Symbol	EG		174263						
ANR	174561	Symbol	ex -> func -> common . type		174263						
ANR	174562	Symbol	ex -> prev_execute_data		174263						
ANR	174563	Symbol	NULL		174263						
ANR	174564	Symbol	symtable_cache_ptr		174263						
ANR	174565	Symbol	var		174263						
ANR	174566	Symbol	ex -> symbol_table		174263						
ANR	174567	Symbol	symbol_table		174263						
ANR	174568	Symbol	ZVAL_PTR_DTOR		174263						
ANR	174569	Symbol	str		174263						
ANR	174570	Symbol	ex		174263						
ANR	174571	Symbol	ZEND_CALL_VAR_NUM		174263						
ANR	174572	Symbol	ZEND_USER_CODE		174263						
ANR	174573	Symbol	* ex		174263						
ANR	174574	Symbol	* ex -> func		174263						
ANR	174575	Symbol	EXPECTED		174263						
ANR	174576	Function	zend_attach_symbol_table	1512:0:43215:44043							
ANR	174577	FunctionDef	zend_attach_symbol_table (zend_execute_data * execute_data)		174576	0					
ANR	174578	CompoundStatement		1513:0:43297:44043	174576	0					
ANR	174579	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1514:1:43300:43355	174576	0	True				
ANR	174580	IdentifierDecl	* op_array = & execute_data -> func -> op_array		174576	0					
ANR	174581	IdentifierDeclType	zend_op_array *		174576	0					
ANR	174582	Identifier	op_array		174576	1					
ANR	174583	AssignmentExpression	* op_array = & execute_data -> func -> op_array		174576	2		=			
ANR	174584	Identifier	op_array		174576	0					
ANR	174585	UnaryOperationExpression	& execute_data -> func -> op_array		174576	1					
ANR	174586	UnaryOperator	&		174576	0					
ANR	174587	PtrMemberAccess	execute_data -> func -> op_array		174576	1					
ANR	174588	PtrMemberAccess	execute_data -> func		174576	0					
ANR	174589	Identifier	execute_data		174576	0					
ANR	174590	Identifier	func		174576	1					
ANR	174591	Identifier	op_array		174576	1					
ANR	174592	IdentifierDeclStatement	HashTable * ht = execute_data -> symbol_table ;	1515:1:43358:43400	174576	1	True				
ANR	174593	IdentifierDecl	* ht = execute_data -> symbol_table		174576	0					
ANR	174594	IdentifierDeclType	HashTable *		174576	0					
ANR	174595	Identifier	ht		174576	1					
ANR	174596	AssignmentExpression	* ht = execute_data -> symbol_table		174576	2		=			
ANR	174597	Identifier	ht		174576	0					
ANR	174598	PtrMemberAccess	execute_data -> symbol_table		174576	1					
ANR	174599	Identifier	execute_data		174576	0					
ANR	174600	Identifier	symbol_table		174576	1					
ANR	174601	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		174576	2					
ANR	174602	Condition	EXPECTED ( op_array -> last_var )	1519:5:43522:43549	174576	0	True				
ANR	174603	CallExpression	EXPECTED ( op_array -> last_var )		174576	0					
ANR	174604	Callee	EXPECTED		174576	0					
ANR	174605	Identifier	EXPECTED		174576	0					
ANR	174606	ArgumentList	op_array -> last_var		174576	1					
ANR	174607	Argument	op_array -> last_var		174576	0					
ANR	174608	PtrMemberAccess	op_array -> last_var		174576	0					
ANR	174609	Identifier	op_array		174576	0					
ANR	174610	Identifier	last_var		174576	1					
ANR	174611	CompoundStatement		10:2:344:369	174576	1					
ANR	174612	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1520:2:43556:43590	174576	0	True				
ANR	174613	IdentifierDecl	* * str = op_array -> vars		174576	0					
ANR	174614	IdentifierDeclType	zend_string * *		174576	0					
ANR	174615	Identifier	str		174576	1					
ANR	174616	AssignmentExpression	* * str = op_array -> vars		174576	2		=			
ANR	174617	Identifier	str		174576	0					
ANR	174618	PtrMemberAccess	op_array -> vars		174576	1					
ANR	174619	Identifier	op_array		174576	0					
ANR	174620	Identifier	vars		174576	1					
ANR	174621	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1521:2:43594:43638	174576	1	True				
ANR	174622	IdentifierDecl	* * end = str + op_array -> last_var		174576	0					
ANR	174623	IdentifierDeclType	zend_string * *		174576	0					
ANR	174624	Identifier	end		174576	1					
ANR	174625	AssignmentExpression	* * end = str + op_array -> last_var		174576	2		=			
ANR	174626	Identifier	end		174576	0					
ANR	174627	AdditiveExpression	str + op_array -> last_var		174576	1		+			
ANR	174628	Identifier	str		174576	0					
ANR	174629	PtrMemberAccess	op_array -> last_var		174576	1					
ANR	174630	Identifier	op_array		174576	0					
ANR	174631	Identifier	last_var		174576	1					
ANR	174632	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( 0 ) ;	1522:2:43642:43667	174576	2	True				
ANR	174633	IdentifierDecl	* var = EX_VAR_NUM ( 0 )		174576	0					
ANR	174634	IdentifierDeclType	zval *		174576	0					
ANR	174635	Identifier	var		174576	1					
ANR	174636	AssignmentExpression	* var = EX_VAR_NUM ( 0 )		174576	2		=			
ANR	174637	Identifier	var		174576	0					
ANR	174638	CallExpression	EX_VAR_NUM ( 0 )		174576	1					
ANR	174639	Callee	EX_VAR_NUM		174576	0					
ANR	174640	Identifier	EX_VAR_NUM		174576	0					
ANR	174641	ArgumentList	0		174576	1					
ANR	174642	Argument	0		174576	0					
ANR	174643	PrimaryExpression	0		174576	0					
ANR	174644	DoStatement	do		174576	3					
ANR	174645	CompoundStatement		13:3:382:417	174576	0					
ANR	174646	IdentifierDeclStatement	"zval * zv = zend_hash_find ( ht , * str ) ;"	1525:3:43680:43715	174576	0	True				
ANR	174647	IdentifierDecl	"* zv = zend_hash_find ( ht , * str )"		174576	0					
ANR	174648	IdentifierDeclType	zval *		174576	0					
ANR	174649	Identifier	zv		174576	1					
ANR	174650	AssignmentExpression	"* zv = zend_hash_find ( ht , * str )"		174576	2		=			
ANR	174651	Identifier	zv		174576	0					
ANR	174652	CallExpression	"zend_hash_find ( ht , * str )"		174576	1					
ANR	174653	Callee	zend_hash_find		174576	0					
ANR	174654	Identifier	zend_hash_find		174576	0					
ANR	174655	ArgumentList	ht		174576	1					
ANR	174656	Argument	ht		174576	0					
ANR	174657	Identifier	ht		174576	0					
ANR	174658	Argument	* str		174576	1					
ANR	174659	UnaryOperationExpression	* str		174576	0					
ANR	174660	UnaryOperator	*		174576	0					
ANR	174661	Identifier	str		174576	1					
ANR	174662	IfStatement	if ( zv )		174576	1					
ANR	174663	Condition	zv	1527:7:43725:43726	174576	0	True				
ANR	174664	Identifier	zv		174576	0					
ANR	174665	CompoundStatement		15:11:431:431	174576	1					
ANR	174666	IfStatement	if ( Z_TYPE_P ( zv ) == IS_INDIRECT )		174576	0					
ANR	174667	Condition	Z_TYPE_P ( zv ) == IS_INDIRECT	1528:8:43739:43765	174576	0	True				
ANR	174668	EqualityExpression	Z_TYPE_P ( zv ) == IS_INDIRECT		174576	0		==			
ANR	174669	CallExpression	Z_TYPE_P ( zv )		174576	0					
ANR	174670	Callee	Z_TYPE_P		174576	0					
ANR	174671	Identifier	Z_TYPE_P		174576	0					
ANR	174672	ArgumentList	zv		174576	1					
ANR	174673	Argument	zv		174576	0					
ANR	174674	Identifier	zv		174576	0					
ANR	174675	Identifier	IS_INDIRECT		174576	1					
ANR	174676	CompoundStatement		17:5:477:505	174576	1					
ANR	174677	IdentifierDeclStatement	zval * val = Z_INDIRECT_P ( zv ) ;	1529:5:43775:43803	174576	0	True				
ANR	174678	IdentifierDecl	* val = Z_INDIRECT_P ( zv )		174576	0					
ANR	174679	IdentifierDeclType	zval *		174576	0					
ANR	174680	Identifier	val		174576	1					
ANR	174681	AssignmentExpression	* val = Z_INDIRECT_P ( zv )		174576	2		=			
ANR	174682	Identifier	val		174576	0					
ANR	174683	CallExpression	Z_INDIRECT_P ( zv )		174576	1					
ANR	174684	Callee	Z_INDIRECT_P		174576	0					
ANR	174685	Identifier	Z_INDIRECT_P		174576	0					
ANR	174686	ArgumentList	zv		174576	1					
ANR	174687	Argument	zv		174576	0					
ANR	174688	Identifier	zv		174576	0					
ANR	174689	ExpressionStatement	"ZVAL_COPY_VALUE ( var , val )"	1531:5:43811:43836	174576	1	True				
ANR	174690	CallExpression	"ZVAL_COPY_VALUE ( var , val )"		174576	0					
ANR	174691	Callee	ZVAL_COPY_VALUE		174576	0					
ANR	174692	Identifier	ZVAL_COPY_VALUE		174576	0					
ANR	174693	ArgumentList	var		174576	1					
ANR	174694	Argument	var		174576	0					
ANR	174695	Identifier	var		174576	0					
ANR	174696	Argument	val		174576	1					
ANR	174697	Identifier	val		174576	0					
ANR	174698	ElseStatement	else		174576	0					
ANR	174699	CompoundStatement		20:11:551:551	174576	0					
ANR	174700	ExpressionStatement	"ZVAL_COPY_VALUE ( var , zv )"	1533:5:43856:43880	174576	0	True				
ANR	174701	CallExpression	"ZVAL_COPY_VALUE ( var , zv )"		174576	0					
ANR	174702	Callee	ZVAL_COPY_VALUE		174576	0					
ANR	174703	Identifier	ZVAL_COPY_VALUE		174576	0					
ANR	174704	ArgumentList	var		174576	1					
ANR	174705	Argument	var		174576	0					
ANR	174706	Identifier	var		174576	0					
ANR	174707	Argument	zv		174576	1					
ANR	174708	Identifier	zv		174576	0					
ANR	174709	ElseStatement	else		174576	0					
ANR	174710	CompoundStatement		23:10:600:600	174576	0					
ANR	174711	ExpressionStatement	ZVAL_UNDEF ( var )	1536:4:43904:43919	174576	0	True				
ANR	174712	CallExpression	ZVAL_UNDEF ( var )		174576	0					
ANR	174713	Callee	ZVAL_UNDEF		174576	0					
ANR	174714	Identifier	ZVAL_UNDEF		174576	0					
ANR	174715	ArgumentList	var		174576	1					
ANR	174716	Argument	var		174576	0					
ANR	174717	Identifier	var		174576	0					
ANR	174718	ExpressionStatement	"zv = zend_hash_add_new ( ht , * str , var )"	1537:4:43925:43962	174576	1	True				
ANR	174719	AssignmentExpression	"zv = zend_hash_add_new ( ht , * str , var )"		174576	0		=			
ANR	174720	Identifier	zv		174576	0					
ANR	174721	CallExpression	"zend_hash_add_new ( ht , * str , var )"		174576	1					
ANR	174722	Callee	zend_hash_add_new		174576	0					
ANR	174723	Identifier	zend_hash_add_new		174576	0					
ANR	174724	ArgumentList	ht		174576	1					
ANR	174725	Argument	ht		174576	0					
ANR	174726	Identifier	ht		174576	0					
ANR	174727	Argument	* str		174576	1					
ANR	174728	UnaryOperationExpression	* str		174576	0					
ANR	174729	UnaryOperator	*		174576	0					
ANR	174730	Identifier	str		174576	1					
ANR	174731	Argument	var		174576	2					
ANR	174732	Identifier	var		174576	0					
ANR	174733	ExpressionStatement	"ZVAL_INDIRECT ( zv , var )"	1539:3:43972:43994	174576	2	True				
ANR	174734	CallExpression	"ZVAL_INDIRECT ( zv , var )"		174576	0					
ANR	174735	Callee	ZVAL_INDIRECT		174576	0					
ANR	174736	Identifier	ZVAL_INDIRECT		174576	0					
ANR	174737	ArgumentList	zv		174576	1					
ANR	174738	Argument	zv		174576	0					
ANR	174739	Identifier	zv		174576	0					
ANR	174740	Argument	var		174576	1					
ANR	174741	Identifier	var		174576	0					
ANR	174742	ExpressionStatement	str ++	1540:3:43999:44004	174576	3	True				
ANR	174743	PostIncDecOperationExpression	str ++		174576	0					
ANR	174744	Identifier	str		174576	0					
ANR	174745	IncDec	++		174576	1					
ANR	174746	ExpressionStatement	var ++	1541:3:44009:44014	174576	4	True				
ANR	174747	PostIncDecOperationExpression	var ++		174576	0					
ANR	174748	Identifier	var		174576	0					
ANR	174749	IncDec	++		174576	1					
ANR	174750	Condition	str != end	1542:11:44027:44036	174576	1	True				
ANR	174751	EqualityExpression	str != end		174576	0		!=			
ANR	174752	Identifier	str		174576	0					
ANR	174753	Identifier	end		174576	1					
ANR	174754	ReturnType	ZEND_API void		174576	1					
ANR	174755	Identifier	zend_attach_symbol_table		174576	2					
ANR	174756	ParameterList	zend_execute_data * execute_data		174576	3					
ANR	174757	Parameter	zend_execute_data * execute_data	1512:39:43254:43284	174576	0	True				
ANR	174758	ParameterType	zend_execute_data *		174576	0					
ANR	174759	Identifier	execute_data		174576	1					
ANR	174760	CFGEntryNode	ENTRY		174576		True				
ANR	174761	CFGExitNode	EXIT		174576		True				
ANR	174762	Symbol	val		174576						
ANR	174763	Symbol	execute_data -> symbol_table		174576						
ANR	174764	Symbol	op_array -> vars		174576						
ANR	174765	Symbol	var		174576						
ANR	174766	Symbol	op_array -> last_var		174576						
ANR	174767	Symbol	Z_INDIRECT_P		174576						
ANR	174768	Symbol	zend_hash_add_new		174576						
ANR	174769	Symbol	execute_data -> func		174576						
ANR	174770	Symbol	ht		174576						
ANR	174771	Symbol	Z_TYPE_P		174576						
ANR	174772	Symbol	execute_data		174576						
ANR	174773	Symbol	* op_array		174576						
ANR	174774	Symbol	str		174576						
ANR	174775	Symbol	zend_hash_find		174576						
ANR	174776	Symbol	& execute_data -> func -> op_array		174576						
ANR	174777	Symbol	EX_VAR_NUM		174576						
ANR	174778	Symbol	* execute_data		174576						
ANR	174779	Symbol	end		174576						
ANR	174780	Symbol	* str		174576						
ANR	174781	Symbol	zv		174576						
ANR	174782	Symbol	EXPECTED		174576						
ANR	174783	Symbol	op_array		174576						
ANR	174784	Symbol	IS_INDIRECT		174576						
ANR	174785	Function	zend_detach_symbol_table	1547:0:44056:44647							
ANR	174786	FunctionDef	zend_detach_symbol_table (zend_execute_data * execute_data)		174785	0					
ANR	174787	CompoundStatement		1548:0:44138:44647	174785	0					
ANR	174788	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1549:1:44141:44196	174785	0	True				
ANR	174789	IdentifierDecl	* op_array = & execute_data -> func -> op_array		174785	0					
ANR	174790	IdentifierDeclType	zend_op_array *		174785	0					
ANR	174791	Identifier	op_array		174785	1					
ANR	174792	AssignmentExpression	* op_array = & execute_data -> func -> op_array		174785	2		=			
ANR	174793	Identifier	op_array		174785	0					
ANR	174794	UnaryOperationExpression	& execute_data -> func -> op_array		174785	1					
ANR	174795	UnaryOperator	&		174785	0					
ANR	174796	PtrMemberAccess	execute_data -> func -> op_array		174785	1					
ANR	174797	PtrMemberAccess	execute_data -> func		174785	0					
ANR	174798	Identifier	execute_data		174785	0					
ANR	174799	Identifier	func		174785	1					
ANR	174800	Identifier	op_array		174785	1					
ANR	174801	IdentifierDeclStatement	HashTable * ht = execute_data -> symbol_table ;	1550:1:44199:44241	174785	1	True				
ANR	174802	IdentifierDecl	* ht = execute_data -> symbol_table		174785	0					
ANR	174803	IdentifierDeclType	HashTable *		174785	0					
ANR	174804	Identifier	ht		174785	1					
ANR	174805	AssignmentExpression	* ht = execute_data -> symbol_table		174785	2		=			
ANR	174806	Identifier	ht		174785	0					
ANR	174807	PtrMemberAccess	execute_data -> symbol_table		174785	1					
ANR	174808	Identifier	execute_data		174785	0					
ANR	174809	Identifier	symbol_table		174785	1					
ANR	174810	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		174785	2					
ANR	174811	Condition	EXPECTED ( op_array -> last_var )	1553:5:44305:44332	174785	0	True				
ANR	174812	CallExpression	EXPECTED ( op_array -> last_var )		174785	0					
ANR	174813	Callee	EXPECTED		174785	0					
ANR	174814	Identifier	EXPECTED		174785	0					
ANR	174815	ArgumentList	op_array -> last_var		174785	1					
ANR	174816	Argument	op_array -> last_var		174785	0					
ANR	174817	PtrMemberAccess	op_array -> last_var		174785	0					
ANR	174818	Identifier	op_array		174785	0					
ANR	174819	Identifier	last_var		174785	1					
ANR	174820	CompoundStatement		9:2:286:311	174785	1					
ANR	174821	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1554:2:44339:44373	174785	0	True				
ANR	174822	IdentifierDecl	* * str = op_array -> vars		174785	0					
ANR	174823	IdentifierDeclType	zend_string * *		174785	0					
ANR	174824	Identifier	str		174785	1					
ANR	174825	AssignmentExpression	* * str = op_array -> vars		174785	2		=			
ANR	174826	Identifier	str		174785	0					
ANR	174827	PtrMemberAccess	op_array -> vars		174785	1					
ANR	174828	Identifier	op_array		174785	0					
ANR	174829	Identifier	vars		174785	1					
ANR	174830	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1555:2:44377:44421	174785	1	True				
ANR	174831	IdentifierDecl	* * end = str + op_array -> last_var		174785	0					
ANR	174832	IdentifierDeclType	zend_string * *		174785	0					
ANR	174833	Identifier	end		174785	1					
ANR	174834	AssignmentExpression	* * end = str + op_array -> last_var		174785	2		=			
ANR	174835	Identifier	end		174785	0					
ANR	174836	AdditiveExpression	str + op_array -> last_var		174785	1		+			
ANR	174837	Identifier	str		174785	0					
ANR	174838	PtrMemberAccess	op_array -> last_var		174785	1					
ANR	174839	Identifier	op_array		174785	0					
ANR	174840	Identifier	last_var		174785	1					
ANR	174841	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( 0 ) ;	1556:2:44425:44450	174785	2	True				
ANR	174842	IdentifierDecl	* var = EX_VAR_NUM ( 0 )		174785	0					
ANR	174843	IdentifierDeclType	zval *		174785	0					
ANR	174844	Identifier	var		174785	1					
ANR	174845	AssignmentExpression	* var = EX_VAR_NUM ( 0 )		174785	2		=			
ANR	174846	Identifier	var		174785	0					
ANR	174847	CallExpression	EX_VAR_NUM ( 0 )		174785	1					
ANR	174848	Callee	EX_VAR_NUM		174785	0					
ANR	174849	Identifier	EX_VAR_NUM		174785	0					
ANR	174850	ArgumentList	0		174785	1					
ANR	174851	Argument	0		174785	0					
ANR	174852	PrimaryExpression	0		174785	0					
ANR	174853	DoStatement	do		174785	3					
ANR	174854	CompoundStatement		11:5:319:319	174785	0					
ANR	174855	IfStatement	if ( Z_TYPE_P ( var ) == IS_UNDEF )		174785	0					
ANR	174856	Condition	Z_TYPE_P ( var ) == IS_UNDEF	1559:7:44467:44491	174785	0	True				
ANR	174857	EqualityExpression	Z_TYPE_P ( var ) == IS_UNDEF		174785	0		==			
ANR	174858	CallExpression	Z_TYPE_P ( var )		174785	0					
ANR	174859	Callee	Z_TYPE_P		174785	0					
ANR	174860	Identifier	Z_TYPE_P		174785	0					
ANR	174861	ArgumentList	var		174785	1					
ANR	174862	Argument	var		174785	0					
ANR	174863	Identifier	var		174785	0					
ANR	174864	Identifier	IS_UNDEF		174785	1					
ANR	174865	CompoundStatement		12:34:355:355	174785	1					
ANR	174866	ExpressionStatement	"zend_hash_del ( ht , * str )"	1560:4:44500:44523	174785	0	True				
ANR	174867	CallExpression	"zend_hash_del ( ht , * str )"		174785	0					
ANR	174868	Callee	zend_hash_del		174785	0					
ANR	174869	Identifier	zend_hash_del		174785	0					
ANR	174870	ArgumentList	ht		174785	1					
ANR	174871	Argument	ht		174785	0					
ANR	174872	Identifier	ht		174785	0					
ANR	174873	Argument	* str		174785	1					
ANR	174874	UnaryOperationExpression	* str		174785	0					
ANR	174875	UnaryOperator	*		174785	0					
ANR	174876	Identifier	str		174785	1					
ANR	174877	ElseStatement	else		174785	0					
ANR	174878	CompoundStatement		14:10:396:396	174785	0					
ANR	174879	ExpressionStatement	"zend_hash_update ( ht , * str , var )"	1562:4:44541:44572	174785	0	True				
ANR	174880	CallExpression	"zend_hash_update ( ht , * str , var )"		174785	0					
ANR	174881	Callee	zend_hash_update		174785	0					
ANR	174882	Identifier	zend_hash_update		174785	0					
ANR	174883	ArgumentList	ht		174785	1					
ANR	174884	Argument	ht		174785	0					
ANR	174885	Identifier	ht		174785	0					
ANR	174886	Argument	* str		174785	1					
ANR	174887	UnaryOperationExpression	* str		174785	0					
ANR	174888	UnaryOperator	*		174785	0					
ANR	174889	Identifier	str		174785	1					
ANR	174890	Argument	var		174785	2					
ANR	174891	Identifier	var		174785	0					
ANR	174892	ExpressionStatement	ZVAL_UNDEF ( var )	1563:4:44578:44593	174785	1	True				
ANR	174893	CallExpression	ZVAL_UNDEF ( var )		174785	0					
ANR	174894	Callee	ZVAL_UNDEF		174785	0					
ANR	174895	Identifier	ZVAL_UNDEF		174785	0					
ANR	174896	ArgumentList	var		174785	1					
ANR	174897	Argument	var		174785	0					
ANR	174898	Identifier	var		174785	0					
ANR	174899	ExpressionStatement	str ++	1565:3:44603:44608	174785	1	True				
ANR	174900	PostIncDecOperationExpression	str ++		174785	0					
ANR	174901	Identifier	str		174785	0					
ANR	174902	IncDec	++		174785	1					
ANR	174903	ExpressionStatement	var ++	1566:3:44613:44618	174785	2	True				
ANR	174904	PostIncDecOperationExpression	var ++		174785	0					
ANR	174905	Identifier	var		174785	0					
ANR	174906	IncDec	++		174785	1					
ANR	174907	Condition	str != end	1567:11:44631:44640	174785	1	True				
ANR	174908	EqualityExpression	str != end		174785	0		!=			
ANR	174909	Identifier	str		174785	0					
ANR	174910	Identifier	end		174785	1					
ANR	174911	ReturnType	ZEND_API void		174785	1					
ANR	174912	Identifier	zend_detach_symbol_table		174785	2					
ANR	174913	ParameterList	zend_execute_data * execute_data		174785	3					
ANR	174914	Parameter	zend_execute_data * execute_data	1547:39:44095:44125	174785	0	True				
ANR	174915	ParameterType	zend_execute_data *		174785	0					
ANR	174916	Identifier	execute_data		174785	1					
ANR	174917	CFGEntryNode	ENTRY		174785		True				
ANR	174918	CFGExitNode	EXIT		174785		True				
ANR	174919	Symbol	execute_data -> symbol_table		174785						
ANR	174920	Symbol	op_array -> vars		174785						
ANR	174921	Symbol	var		174785						
ANR	174922	Symbol	op_array -> last_var		174785						
ANR	174923	Symbol	execute_data -> func		174785						
ANR	174924	Symbol	ht		174785						
ANR	174925	Symbol	Z_TYPE_P		174785						
ANR	174926	Symbol	execute_data		174785						
ANR	174927	Symbol	* op_array		174785						
ANR	174928	Symbol	str		174785						
ANR	174929	Symbol	& execute_data -> func -> op_array		174785						
ANR	174930	Symbol	EX_VAR_NUM		174785						
ANR	174931	Symbol	* execute_data		174785						
ANR	174932	Symbol	end		174785						
ANR	174933	Symbol	* str		174785						
ANR	174934	Symbol	EXPECTED		174785						
ANR	174935	Symbol	op_array		174785						
ANR	174936	Symbol	IS_UNDEF		174785						
ANR	174937	Function	zend_set_local_var	1572:0:44660:45901							
ANR	174938	FunctionDef	"zend_set_local_var (zend_string * name , zval * value , int force)"		174937	0					
ANR	174939	CompoundStatement		1573:0:44745:45901	174937	0					
ANR	174940	IdentifierDeclStatement	zend_execute_data * execute_data = EG ( current_execute_data ) ;	1574:1:44748:44806	174937	0	True				
ANR	174941	IdentifierDecl	* execute_data = EG ( current_execute_data )		174937	0					
ANR	174942	IdentifierDeclType	zend_execute_data *		174937	0					
ANR	174943	Identifier	execute_data		174937	1					
ANR	174944	AssignmentExpression	* execute_data = EG ( current_execute_data )		174937	2		=			
ANR	174945	Identifier	execute_data		174937	0					
ANR	174946	CallExpression	EG ( current_execute_data )		174937	1					
ANR	174947	Callee	EG		174937	0					
ANR	174948	Identifier	EG		174937	0					
ANR	174949	ArgumentList	current_execute_data		174937	1					
ANR	174950	Argument	current_execute_data		174937	0					
ANR	174951	Identifier	current_execute_data		174937	0					
ANR	174952	WhileStatement	while ( execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) ) )		174937	1					
ANR	174953	Condition	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )	1576:8:44817:44905	174937	0	True				
ANR	174954	AndExpression	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )		174937	0		&&			
ANR	174955	Identifier	execute_data		174937	0					
ANR	174956	OrExpression	! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type )		174937	1		||			
ANR	174957	UnaryOperationExpression	! execute_data -> func		174937	0					
ANR	174958	UnaryOperator	!		174937	0					
ANR	174959	PtrMemberAccess	execute_data -> func		174937	1					
ANR	174960	Identifier	execute_data		174937	0					
ANR	174961	Identifier	func		174937	1					
ANR	174962	UnaryOperationExpression	! ZEND_USER_CODE ( execute_data -> func -> common . type )		174937	1					
ANR	174963	UnaryOperator	!		174937	0					
ANR	174964	CallExpression	ZEND_USER_CODE ( execute_data -> func -> common . type )		174937	1					
ANR	174965	Callee	ZEND_USER_CODE		174937	0					
ANR	174966	Identifier	ZEND_USER_CODE		174937	0					
ANR	174967	ArgumentList	execute_data -> func -> common . type		174937	1					
ANR	174968	Argument	execute_data -> func -> common . type		174937	0					
ANR	174969	MemberAccess	execute_data -> func -> common . type		174937	0					
ANR	174970	PtrMemberAccess	execute_data -> func -> common		174937	0					
ANR	174971	PtrMemberAccess	execute_data -> func		174937	0					
ANR	174972	Identifier	execute_data		174937	0					
ANR	174973	Identifier	func		174937	1					
ANR	174974	Identifier	common		174937	1					
ANR	174975	Identifier	type		174937	1					
ANR	174976	CompoundStatement		4:99:162:162	174937	1					
ANR	174977	ExpressionStatement	execute_data = execute_data -> prev_execute_data	1577:2:44912:44958	174937	0	True				
ANR	174978	AssignmentExpression	execute_data = execute_data -> prev_execute_data		174937	0		=			
ANR	174979	Identifier	execute_data		174937	0					
ANR	174980	PtrMemberAccess	execute_data -> prev_execute_data		174937	1					
ANR	174981	Identifier	execute_data		174937	0					
ANR	174982	Identifier	prev_execute_data		174937	1					
ANR	174983	IfStatement	if ( execute_data )		174937	2					
ANR	174984	Condition	execute_data	1580:5:44969:44980	174937	0	True				
ANR	174985	Identifier	execute_data		174937	0					
ANR	174986	CompoundStatement		8:19:237:237	174937	1					
ANR	174987	IfStatement	if ( ! execute_data -> symbol_table )		174937	0					
ANR	174988	Condition	! execute_data -> symbol_table	1581:6:44991:45017	174937	0	True				
ANR	174989	UnaryOperationExpression	! execute_data -> symbol_table		174937	0					
ANR	174990	UnaryOperator	!		174937	0					
ANR	174991	PtrMemberAccess	execute_data -> symbol_table		174937	1					
ANR	174992	Identifier	execute_data		174937	0					
ANR	174993	Identifier	symbol_table		174937	1					
ANR	174994	CompoundStatement		11:3:325:380	174937	1					
ANR	174995	IdentifierDeclStatement	zend_ulong h = zend_string_hash_val ( name ) ;	1582:3:45025:45066	174937	0	True				
ANR	174996	IdentifierDecl	h = zend_string_hash_val ( name )		174937	0					
ANR	174997	IdentifierDeclType	zend_ulong		174937	0					
ANR	174998	Identifier	h		174937	1					
ANR	174999	AssignmentExpression	h = zend_string_hash_val ( name )		174937	2		=			
ANR	175000	Identifier	h		174937	0					
ANR	175001	CallExpression	zend_string_hash_val ( name )		174937	1					
ANR	175002	Callee	zend_string_hash_val		174937	0					
ANR	175003	Identifier	zend_string_hash_val		174937	0					
ANR	175004	ArgumentList	name		174937	1					
ANR	175005	Argument	name		174937	0					
ANR	175006	Identifier	name		174937	0					
ANR	175007	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1583:3:45071:45126	174937	1	True				
ANR	175008	IdentifierDecl	* op_array = & execute_data -> func -> op_array		174937	0					
ANR	175009	IdentifierDeclType	zend_op_array *		174937	0					
ANR	175010	Identifier	op_array		174937	1					
ANR	175011	AssignmentExpression	* op_array = & execute_data -> func -> op_array		174937	2		=			
ANR	175012	Identifier	op_array		174937	0					
ANR	175013	UnaryOperationExpression	& execute_data -> func -> op_array		174937	1					
ANR	175014	UnaryOperator	&		174937	0					
ANR	175015	PtrMemberAccess	execute_data -> func -> op_array		174937	1					
ANR	175016	PtrMemberAccess	execute_data -> func		174937	0					
ANR	175017	Identifier	execute_data		174937	0					
ANR	175018	Identifier	func		174937	1					
ANR	175019	Identifier	op_array		174937	1					
ANR	175020	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		174937	2					
ANR	175021	Condition	EXPECTED ( op_array -> last_var )	1585:7:45136:45163	174937	0	True				
ANR	175022	CallExpression	EXPECTED ( op_array -> last_var )		174937	0					
ANR	175023	Callee	EXPECTED		174937	0					
ANR	175024	Identifier	EXPECTED		174937	0					
ANR	175025	ArgumentList	op_array -> last_var		174937	1					
ANR	175026	Argument	op_array -> last_var		174937	0					
ANR	175027	PtrMemberAccess	op_array -> last_var		174937	0					
ANR	175028	Identifier	op_array		174937	0					
ANR	175029	Identifier	last_var		174937	1					
ANR	175030	CompoundStatement		15:4:466:510	174937	1					
ANR	175031	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1586:4:45172:45206	174937	0	True				
ANR	175032	IdentifierDecl	* * str = op_array -> vars		174937	0					
ANR	175033	IdentifierDeclType	zend_string * *		174937	0					
ANR	175034	Identifier	str		174937	1					
ANR	175035	AssignmentExpression	* * str = op_array -> vars		174937	2		=			
ANR	175036	Identifier	str		174937	0					
ANR	175037	PtrMemberAccess	op_array -> vars		174937	1					
ANR	175038	Identifier	op_array		174937	0					
ANR	175039	Identifier	vars		174937	1					
ANR	175040	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1587:4:45212:45256	174937	1	True				
ANR	175041	IdentifierDecl	* * end = str + op_array -> last_var		174937	0					
ANR	175042	IdentifierDeclType	zend_string * *		174937	0					
ANR	175043	Identifier	end		174937	1					
ANR	175044	AssignmentExpression	* * end = str + op_array -> last_var		174937	2		=			
ANR	175045	Identifier	end		174937	0					
ANR	175046	AdditiveExpression	str + op_array -> last_var		174937	1		+			
ANR	175047	Identifier	str		174937	0					
ANR	175048	PtrMemberAccess	op_array -> last_var		174937	1					
ANR	175049	Identifier	op_array		174937	0					
ANR	175050	Identifier	last_var		174937	1					
ANR	175051	DoStatement	do		174937	2					
ANR	175052	CompoundStatement		17:7:520:520	174937	0					
ANR	175053	IfStatement	"if ( ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0 )"		174937	0					
ANR	175054	Condition	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"	1590:9:45277:45410	174937	0	True				
ANR	175055	AndExpression	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		174937	0		&&			
ANR	175056	EqualityExpression	ZSTR_H ( * str ) == h		174937	0		==			
ANR	175057	CallExpression	ZSTR_H ( * str )		174937	0					
ANR	175058	Callee	ZSTR_H		174937	0					
ANR	175059	Identifier	ZSTR_H		174937	0					
ANR	175060	ArgumentList	* str		174937	1					
ANR	175061	Argument	* str		174937	0					
ANR	175062	UnaryOperationExpression	* str		174937	0					
ANR	175063	UnaryOperator	*		174937	0					
ANR	175064	Identifier	str		174937	1					
ANR	175065	Identifier	h		174937	1					
ANR	175066	AndExpression	"ZSTR_LEN ( * str ) == ZSTR_LEN ( name ) && memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		174937	1		&&			
ANR	175067	EqualityExpression	ZSTR_LEN ( * str ) == ZSTR_LEN ( name )		174937	0		==			
ANR	175068	CallExpression	ZSTR_LEN ( * str )		174937	0					
ANR	175069	Callee	ZSTR_LEN		174937	0					
ANR	175070	Identifier	ZSTR_LEN		174937	0					
ANR	175071	ArgumentList	* str		174937	1					
ANR	175072	Argument	* str		174937	0					
ANR	175073	UnaryOperationExpression	* str		174937	0					
ANR	175074	UnaryOperator	*		174937	0					
ANR	175075	Identifier	str		174937	1					
ANR	175076	CallExpression	ZSTR_LEN ( name )		174937	1					
ANR	175077	Callee	ZSTR_LEN		174937	0					
ANR	175078	Identifier	ZSTR_LEN		174937	0					
ANR	175079	ArgumentList	name		174937	1					
ANR	175080	Argument	name		174937	0					
ANR	175081	Identifier	name		174937	0					
ANR	175082	EqualityExpression	"memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) ) == 0"		174937	1		==			
ANR	175083	CallExpression	"memcmp ( ZSTR_VAL ( * str ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		174937	0					
ANR	175084	Callee	memcmp		174937	0					
ANR	175085	Identifier	memcmp		174937	0					
ANR	175086	ArgumentList	ZSTR_VAL ( * str )		174937	1					
ANR	175087	Argument	ZSTR_VAL ( * str )		174937	0					
ANR	175088	CallExpression	ZSTR_VAL ( * str )		174937	0					
ANR	175089	Callee	ZSTR_VAL		174937	0					
ANR	175090	Identifier	ZSTR_VAL		174937	0					
ANR	175091	ArgumentList	* str		174937	1					
ANR	175092	Argument	* str		174937	0					
ANR	175093	UnaryOperationExpression	* str		174937	0					
ANR	175094	UnaryOperator	*		174937	0					
ANR	175095	Identifier	str		174937	1					
ANR	175096	Argument	ZSTR_VAL ( name )		174937	1					
ANR	175097	CallExpression	ZSTR_VAL ( name )		174937	0					
ANR	175098	Callee	ZSTR_VAL		174937	0					
ANR	175099	Identifier	ZSTR_VAL		174937	0					
ANR	175100	ArgumentList	name		174937	1					
ANR	175101	Argument	name		174937	0					
ANR	175102	Identifier	name		174937	0					
ANR	175103	Argument	ZSTR_LEN ( name )		174937	2					
ANR	175104	CallExpression	ZSTR_LEN ( name )		174937	0					
ANR	175105	Callee	ZSTR_LEN		174937	0					
ANR	175106	Identifier	ZSTR_LEN		174937	0					
ANR	175107	ArgumentList	name		174937	1					
ANR	175108	Argument	name		174937	0					
ANR	175109	Identifier	name		174937	0					
ANR	175110	PrimaryExpression	0		174937	1					
ANR	175111	CompoundStatement		21:6:675:719	174937	1					
ANR	175112	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( str - op_array -> vars ) ;	1593:6:45421:45465	174937	0	True				
ANR	175113	IdentifierDecl	* var = EX_VAR_NUM ( str - op_array -> vars )		174937	0					
ANR	175114	IdentifierDeclType	zval *		174937	0					
ANR	175115	Identifier	var		174937	1					
ANR	175116	AssignmentExpression	* var = EX_VAR_NUM ( str - op_array -> vars )		174937	2		=			
ANR	175117	Identifier	var		174937	0					
ANR	175118	CallExpression	EX_VAR_NUM ( str - op_array -> vars )		174937	1					
ANR	175119	Callee	EX_VAR_NUM		174937	0					
ANR	175120	Identifier	EX_VAR_NUM		174937	0					
ANR	175121	ArgumentList	str - op_array -> vars		174937	1					
ANR	175122	Argument	str - op_array -> vars		174937	0					
ANR	175123	AdditiveExpression	str - op_array -> vars		174937	0		-			
ANR	175124	Identifier	str		174937	0					
ANR	175125	PtrMemberAccess	op_array -> vars		174937	1					
ANR	175126	Identifier	op_array		174937	0					
ANR	175127	Identifier	vars		174937	1					
ANR	175128	ExpressionStatement	"ZVAL_COPY_VALUE ( var , value )"	1594:6:45473:45500	174937	1	True				
ANR	175129	CallExpression	"ZVAL_COPY_VALUE ( var , value )"		174937	0					
ANR	175130	Callee	ZVAL_COPY_VALUE		174937	0					
ANR	175131	Identifier	ZVAL_COPY_VALUE		174937	0					
ANR	175132	ArgumentList	var		174937	1					
ANR	175133	Argument	var		174937	0					
ANR	175134	Identifier	var		174937	0					
ANR	175135	Argument	value		174937	1					
ANR	175136	Identifier	value		174937	0					
ANR	175137	ReturnStatement	return SUCCESS ;	1595:6:45508:45522	174937	2	True				
ANR	175138	Identifier	SUCCESS		174937	0					
ANR	175139	ExpressionStatement	str ++	1597:5:45536:45541	174937	1	True				
ANR	175140	PostIncDecOperationExpression	str ++		174937	0					
ANR	175141	Identifier	str		174937	0					
ANR	175142	IncDec	++		174937	1					
ANR	175143	Condition	str != end	1598:13:45556:45565	174937	1	True				
ANR	175144	EqualityExpression	str != end		174937	0		!=			
ANR	175145	Identifier	str		174937	0					
ANR	175146	Identifier	end		174937	1					
ANR	175147	IfStatement	if ( force )		174937	3					
ANR	175148	Condition	force	1600:7:45581:45585	174937	0	True				
ANR	175149	Identifier	force		174937	0					
ANR	175150	CompoundStatement		29:4:848:902	174937	1					
ANR	175151	IdentifierDeclStatement	zend_array * symbol_table = zend_rebuild_symbol_table ( ) ;	1601:4:45594:45648	174937	0	True				
ANR	175152	IdentifierDecl	* symbol_table = zend_rebuild_symbol_table ( )		174937	0					
ANR	175153	IdentifierDeclType	zend_array *		174937	0					
ANR	175154	Identifier	symbol_table		174937	1					
ANR	175155	AssignmentExpression	* symbol_table = zend_rebuild_symbol_table ( )		174937	2		=			
ANR	175156	Identifier	symbol_table		174937	0					
ANR	175157	CallExpression	zend_rebuild_symbol_table ( )		174937	1					
ANR	175158	Callee	zend_rebuild_symbol_table		174937	0					
ANR	175159	Identifier	zend_rebuild_symbol_table		174937	0					
ANR	175160	ArgumentList			174937	1					
ANR	175161	IfStatement	if ( symbol_table )		174937	1					
ANR	175162	Condition	symbol_table	1602:8:45658:45669	174937	0	True				
ANR	175163	Identifier	symbol_table		174937	0					
ANR	175164	CompoundStatement		30:22:926:926	174937	1					
ANR	175165	ReturnStatement	"return zend_hash_update ( symbol_table , name , value ) ? SUCCESS : FAILURE ;"	1603:5:45679:45749	174937	0	True				
ANR	175166	ConditionalExpression	"zend_hash_update ( symbol_table , name , value ) ? SUCCESS : FAILURE"		174937	0					
ANR	175167	Condition	"zend_hash_update ( symbol_table , name , value )"		174937	0					
ANR	175168	CallExpression	"zend_hash_update ( symbol_table , name , value )"		174937	0					
ANR	175169	Callee	zend_hash_update		174937	0					
ANR	175170	Identifier	zend_hash_update		174937	0					
ANR	175171	ArgumentList	symbol_table		174937	1					
ANR	175172	Argument	symbol_table		174937	0					
ANR	175173	Identifier	symbol_table		174937	0					
ANR	175174	Argument	name		174937	1					
ANR	175175	Identifier	name		174937	0					
ANR	175176	Argument	value		174937	2					
ANR	175177	Identifier	value		174937	0					
ANR	175178	Identifier	SUCCESS		174937	1					
ANR	175179	Identifier	FAILURE		174937	2					
ANR	175180	ExpressionStatement		1603:76:45750:45750	174937	1	True				
ANR	175181	ElseStatement	else		174937	0					
ANR	175182	CompoundStatement		34:9:1026:1026	174937	0					
ANR	175183	ReturnStatement	"return ( zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL ) ? SUCCESS : FAILURE ;"	1607:3:45777:45875	174937	0	True				
ANR	175184	ConditionalExpression	"( zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL ) ? SUCCESS : FAILURE"		174937	0					
ANR	175185	Condition	"zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL"		174937	0					
ANR	175186	EqualityExpression	"zend_hash_update_ind ( execute_data -> symbol_table , name , value ) != NULL"		174937	0		!=			
ANR	175187	CallExpression	"zend_hash_update_ind ( execute_data -> symbol_table , name , value )"		174937	0					
ANR	175188	Callee	zend_hash_update_ind		174937	0					
ANR	175189	Identifier	zend_hash_update_ind		174937	0					
ANR	175190	ArgumentList	execute_data -> symbol_table		174937	1					
ANR	175191	Argument	execute_data -> symbol_table		174937	0					
ANR	175192	PtrMemberAccess	execute_data -> symbol_table		174937	0					
ANR	175193	Identifier	execute_data		174937	0					
ANR	175194	Identifier	symbol_table		174937	1					
ANR	175195	Argument	name		174937	1					
ANR	175196	Identifier	name		174937	0					
ANR	175197	Argument	value		174937	2					
ANR	175198	Identifier	value		174937	0					
ANR	175199	Identifier	NULL		174937	1					
ANR	175200	Identifier	SUCCESS		174937	1					
ANR	175201	Identifier	FAILURE		174937	2					
ANR	175202	ReturnStatement	return FAILURE ;	1610:1:45885:45899	174937	3	True				
ANR	175203	Identifier	FAILURE		174937	0					
ANR	175204	ReturnType	ZEND_API int		174937	1					
ANR	175205	Identifier	zend_set_local_var		174937	2					
ANR	175206	ParameterList	"zend_string * name , zval * value , int force"		174937	3					
ANR	175207	Parameter	zend_string * name	1572:32:44692:44708	174937	0	True				
ANR	175208	ParameterType	zend_string *		174937	0					
ANR	175209	Identifier	name		174937	1					
ANR	175210	Parameter	zval * value	1572:51:44711:44721	174937	1	True				
ANR	175211	ParameterType	zval *		174937	0					
ANR	175212	Identifier	value		174937	1					
ANR	175213	Parameter	int force	1572:64:44724:44732	174937	2	True				
ANR	175214	ParameterType	int		174937	0					
ANR	175215	Identifier	force		174937	1					
ANR	175216	CFGEntryNode	ENTRY		174937		True				
ANR	175217	CFGExitNode	EXIT		174937		True				
ANR	175218	Symbol	zend_rebuild_symbol_table		174937						
ANR	175219	Symbol	execute_data -> symbol_table		174937						
ANR	175220	Symbol	* execute_data -> func		174937						
ANR	175221	Symbol	current_execute_data		174937						
ANR	175222	Symbol	op_array -> last_var		174937						
ANR	175223	Symbol	ZSTR_H		174937						
ANR	175224	Symbol	execute_data		174937						
ANR	175225	Symbol	memcmp		174937						
ANR	175226	Symbol	& execute_data -> func -> op_array		174937						
ANR	175227	Symbol	* execute_data		174937						
ANR	175228	Symbol	zend_string_hash_val		174937						
ANR	175229	Symbol	end		174937						
ANR	175230	Symbol	execute_data -> func -> common		174937						
ANR	175231	Symbol	* str		174937						
ANR	175232	Symbol	zend_hash_update		174937						
ANR	175233	Symbol	value		174937						
ANR	175234	Symbol	EG		174937						
ANR	175235	Symbol	op_array -> vars		174937						
ANR	175236	Symbol	SUCCESS		174937						
ANR	175237	Symbol	NULL		174937						
ANR	175238	Symbol	var		174937						
ANR	175239	Symbol	h		174937						
ANR	175240	Symbol	symbol_table		174937						
ANR	175241	Symbol	execute_data -> func		174937						
ANR	175242	Symbol	zend_hash_update_ind		174937						
ANR	175243	Symbol	FAILURE		174937						
ANR	175244	Symbol	* op_array		174937						
ANR	175245	Symbol	ZSTR_VAL		174937						
ANR	175246	Symbol	str		174937						
ANR	175247	Symbol	execute_data -> prev_execute_data		174937						
ANR	175248	Symbol	EX_VAR_NUM		174937						
ANR	175249	Symbol	name		174937						
ANR	175250	Symbol	ZSTR_LEN		174937						
ANR	175251	Symbol	ZEND_USER_CODE		174937						
ANR	175252	Symbol	* * execute_data		174937						
ANR	175253	Symbol	force		174937						
ANR	175254	Symbol	execute_data -> func -> common . type		174937						
ANR	175255	Symbol	EXPECTED		174937						
ANR	175256	Symbol	op_array		174937						
ANR	175257	Function	zend_set_local_var_str	1614:0:45914:47180							
ANR	175258	FunctionDef	"zend_set_local_var_str (const char * name , size_t len , zval * value , int force)"		175257	0					
ANR	175259	CompoundStatement		1615:0:46014:47180	175257	0					
ANR	175260	IdentifierDeclStatement	zend_execute_data * execute_data = EG ( current_execute_data ) ;	1616:1:46017:46075	175257	0	True				
ANR	175261	IdentifierDecl	* execute_data = EG ( current_execute_data )		175257	0					
ANR	175262	IdentifierDeclType	zend_execute_data *		175257	0					
ANR	175263	Identifier	execute_data		175257	1					
ANR	175264	AssignmentExpression	* execute_data = EG ( current_execute_data )		175257	2		=			
ANR	175265	Identifier	execute_data		175257	0					
ANR	175266	CallExpression	EG ( current_execute_data )		175257	1					
ANR	175267	Callee	EG		175257	0					
ANR	175268	Identifier	EG		175257	0					
ANR	175269	ArgumentList	current_execute_data		175257	1					
ANR	175270	Argument	current_execute_data		175257	0					
ANR	175271	Identifier	current_execute_data		175257	0					
ANR	175272	WhileStatement	while ( execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) ) )		175257	1					
ANR	175273	Condition	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )	1618:8:46086:46174	175257	0	True				
ANR	175274	AndExpression	execute_data && ( ! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type ) )		175257	0		&&			
ANR	175275	Identifier	execute_data		175257	0					
ANR	175276	OrExpression	! execute_data -> func || ! ZEND_USER_CODE ( execute_data -> func -> common . type )		175257	1		||			
ANR	175277	UnaryOperationExpression	! execute_data -> func		175257	0					
ANR	175278	UnaryOperator	!		175257	0					
ANR	175279	PtrMemberAccess	execute_data -> func		175257	1					
ANR	175280	Identifier	execute_data		175257	0					
ANR	175281	Identifier	func		175257	1					
ANR	175282	UnaryOperationExpression	! ZEND_USER_CODE ( execute_data -> func -> common . type )		175257	1					
ANR	175283	UnaryOperator	!		175257	0					
ANR	175284	CallExpression	ZEND_USER_CODE ( execute_data -> func -> common . type )		175257	1					
ANR	175285	Callee	ZEND_USER_CODE		175257	0					
ANR	175286	Identifier	ZEND_USER_CODE		175257	0					
ANR	175287	ArgumentList	execute_data -> func -> common . type		175257	1					
ANR	175288	Argument	execute_data -> func -> common . type		175257	0					
ANR	175289	MemberAccess	execute_data -> func -> common . type		175257	0					
ANR	175290	PtrMemberAccess	execute_data -> func -> common		175257	0					
ANR	175291	PtrMemberAccess	execute_data -> func		175257	0					
ANR	175292	Identifier	execute_data		175257	0					
ANR	175293	Identifier	func		175257	1					
ANR	175294	Identifier	common		175257	1					
ANR	175295	Identifier	type		175257	1					
ANR	175296	CompoundStatement		4:99:162:162	175257	1					
ANR	175297	ExpressionStatement	execute_data = execute_data -> prev_execute_data	1619:2:46181:46227	175257	0	True				
ANR	175298	AssignmentExpression	execute_data = execute_data -> prev_execute_data		175257	0		=			
ANR	175299	Identifier	execute_data		175257	0					
ANR	175300	PtrMemberAccess	execute_data -> prev_execute_data		175257	1					
ANR	175301	Identifier	execute_data		175257	0					
ANR	175302	Identifier	prev_execute_data		175257	1					
ANR	175303	IfStatement	if ( execute_data )		175257	2					
ANR	175304	Condition	execute_data	1622:5:46238:46249	175257	0	True				
ANR	175305	Identifier	execute_data		175257	0					
ANR	175306	CompoundStatement		8:19:237:237	175257	1					
ANR	175307	IfStatement	if ( ! execute_data -> symbol_table )		175257	0					
ANR	175308	Condition	! execute_data -> symbol_table	1623:6:46260:46286	175257	0	True				
ANR	175309	UnaryOperationExpression	! execute_data -> symbol_table		175257	0					
ANR	175310	UnaryOperator	!		175257	0					
ANR	175311	PtrMemberAccess	execute_data -> symbol_table		175257	1					
ANR	175312	Identifier	execute_data		175257	0					
ANR	175313	Identifier	symbol_table		175257	1					
ANR	175314	CompoundStatement		11:3:324:379	175257	1					
ANR	175315	IdentifierDeclStatement	"zend_ulong h = zend_hash_func ( name , len ) ;"	1624:3:46294:46334	175257	0	True				
ANR	175316	IdentifierDecl	"h = zend_hash_func ( name , len )"		175257	0					
ANR	175317	IdentifierDeclType	zend_ulong		175257	0					
ANR	175318	Identifier	h		175257	1					
ANR	175319	AssignmentExpression	"h = zend_hash_func ( name , len )"		175257	2		=			
ANR	175320	Identifier	h		175257	0					
ANR	175321	CallExpression	"zend_hash_func ( name , len )"		175257	1					
ANR	175322	Callee	zend_hash_func		175257	0					
ANR	175323	Identifier	zend_hash_func		175257	0					
ANR	175324	ArgumentList	name		175257	1					
ANR	175325	Argument	name		175257	0					
ANR	175326	Identifier	name		175257	0					
ANR	175327	Argument	len		175257	1					
ANR	175328	Identifier	len		175257	0					
ANR	175329	IdentifierDeclStatement	zend_op_array * op_array = & execute_data -> func -> op_array ;	1625:3:46339:46394	175257	1	True				
ANR	175330	IdentifierDecl	* op_array = & execute_data -> func -> op_array		175257	0					
ANR	175331	IdentifierDeclType	zend_op_array *		175257	0					
ANR	175332	Identifier	op_array		175257	1					
ANR	175333	AssignmentExpression	* op_array = & execute_data -> func -> op_array		175257	2		=			
ANR	175334	Identifier	op_array		175257	0					
ANR	175335	UnaryOperationExpression	& execute_data -> func -> op_array		175257	1					
ANR	175336	UnaryOperator	&		175257	0					
ANR	175337	PtrMemberAccess	execute_data -> func -> op_array		175257	1					
ANR	175338	PtrMemberAccess	execute_data -> func		175257	0					
ANR	175339	Identifier	execute_data		175257	0					
ANR	175340	Identifier	func		175257	1					
ANR	175341	Identifier	op_array		175257	1					
ANR	175342	IfStatement	if ( EXPECTED ( op_array -> last_var ) )		175257	2					
ANR	175343	Condition	EXPECTED ( op_array -> last_var )	1626:7:46403:46430	175257	0	True				
ANR	175344	CallExpression	EXPECTED ( op_array -> last_var )		175257	0					
ANR	175345	Callee	EXPECTED		175257	0					
ANR	175346	Identifier	EXPECTED		175257	0					
ANR	175347	ArgumentList	op_array -> last_var		175257	1					
ANR	175348	Argument	op_array -> last_var		175257	0					
ANR	175349	PtrMemberAccess	op_array -> last_var		175257	0					
ANR	175350	Identifier	op_array		175257	0					
ANR	175351	Identifier	last_var		175257	1					
ANR	175352	CompoundStatement		14:4:464:508	175257	1					
ANR	175353	IdentifierDeclStatement	zend_string * * str = op_array -> vars ;	1627:4:46439:46473	175257	0	True				
ANR	175354	IdentifierDecl	* * str = op_array -> vars		175257	0					
ANR	175355	IdentifierDeclType	zend_string * *		175257	0					
ANR	175356	Identifier	str		175257	1					
ANR	175357	AssignmentExpression	* * str = op_array -> vars		175257	2		=			
ANR	175358	Identifier	str		175257	0					
ANR	175359	PtrMemberAccess	op_array -> vars		175257	1					
ANR	175360	Identifier	op_array		175257	0					
ANR	175361	Identifier	vars		175257	1					
ANR	175362	IdentifierDeclStatement	zend_string * * end = str + op_array -> last_var ;	1628:4:46479:46523	175257	1	True				
ANR	175363	IdentifierDecl	* * end = str + op_array -> last_var		175257	0					
ANR	175364	IdentifierDeclType	zend_string * *		175257	0					
ANR	175365	Identifier	end		175257	1					
ANR	175366	AssignmentExpression	* * end = str + op_array -> last_var		175257	2		=			
ANR	175367	Identifier	end		175257	0					
ANR	175368	AdditiveExpression	str + op_array -> last_var		175257	1		+			
ANR	175369	Identifier	str		175257	0					
ANR	175370	PtrMemberAccess	op_array -> last_var		175257	1					
ANR	175371	Identifier	op_array		175257	0					
ANR	175372	Identifier	last_var		175257	1					
ANR	175373	DoStatement	do		175257	2					
ANR	175374	CompoundStatement		16:7:518:518	175257	0					
ANR	175375	IfStatement	"if ( ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0 )"		175257	0					
ANR	175376	Condition	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"	1631:9:46544:46645	175257	0	True				
ANR	175377	AndExpression	"ZSTR_H ( * str ) == h && ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"		175257	0		&&			
ANR	175378	EqualityExpression	ZSTR_H ( * str ) == h		175257	0		==			
ANR	175379	CallExpression	ZSTR_H ( * str )		175257	0					
ANR	175380	Callee	ZSTR_H		175257	0					
ANR	175381	Identifier	ZSTR_H		175257	0					
ANR	175382	ArgumentList	* str		175257	1					
ANR	175383	Argument	* str		175257	0					
ANR	175384	UnaryOperationExpression	* str		175257	0					
ANR	175385	UnaryOperator	*		175257	0					
ANR	175386	Identifier	str		175257	1					
ANR	175387	Identifier	h		175257	1					
ANR	175388	AndExpression	"ZSTR_LEN ( * str ) == len && memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"		175257	1		&&			
ANR	175389	EqualityExpression	ZSTR_LEN ( * str ) == len		175257	0		==			
ANR	175390	CallExpression	ZSTR_LEN ( * str )		175257	0					
ANR	175391	Callee	ZSTR_LEN		175257	0					
ANR	175392	Identifier	ZSTR_LEN		175257	0					
ANR	175393	ArgumentList	* str		175257	1					
ANR	175394	Argument	* str		175257	0					
ANR	175395	UnaryOperationExpression	* str		175257	0					
ANR	175396	UnaryOperator	*		175257	0					
ANR	175397	Identifier	str		175257	1					
ANR	175398	Identifier	len		175257	1					
ANR	175399	EqualityExpression	"memcmp ( ZSTR_VAL ( * str ) , name , len ) == 0"		175257	1		==			
ANR	175400	CallExpression	"memcmp ( ZSTR_VAL ( * str ) , name , len )"		175257	0					
ANR	175401	Callee	memcmp		175257	0					
ANR	175402	Identifier	memcmp		175257	0					
ANR	175403	ArgumentList	ZSTR_VAL ( * str )		175257	1					
ANR	175404	Argument	ZSTR_VAL ( * str )		175257	0					
ANR	175405	CallExpression	ZSTR_VAL ( * str )		175257	0					
ANR	175406	Callee	ZSTR_VAL		175257	0					
ANR	175407	Identifier	ZSTR_VAL		175257	0					
ANR	175408	ArgumentList	* str		175257	1					
ANR	175409	Argument	* str		175257	0					
ANR	175410	UnaryOperationExpression	* str		175257	0					
ANR	175411	UnaryOperator	*		175257	0					
ANR	175412	Identifier	str		175257	1					
ANR	175413	Argument	name		175257	1					
ANR	175414	Identifier	name		175257	0					
ANR	175415	Argument	len		175257	2					
ANR	175416	Identifier	len		175257	0					
ANR	175417	PrimaryExpression	0		175257	1					
ANR	175418	CompoundStatement		20:6:641:685	175257	1					
ANR	175419	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( str - op_array -> vars ) ;	1634:6:46656:46700	175257	0	True				
ANR	175420	IdentifierDecl	* var = EX_VAR_NUM ( str - op_array -> vars )		175257	0					
ANR	175421	IdentifierDeclType	zval *		175257	0					
ANR	175422	Identifier	var		175257	1					
ANR	175423	AssignmentExpression	* var = EX_VAR_NUM ( str - op_array -> vars )		175257	2		=			
ANR	175424	Identifier	var		175257	0					
ANR	175425	CallExpression	EX_VAR_NUM ( str - op_array -> vars )		175257	1					
ANR	175426	Callee	EX_VAR_NUM		175257	0					
ANR	175427	Identifier	EX_VAR_NUM		175257	0					
ANR	175428	ArgumentList	str - op_array -> vars		175257	1					
ANR	175429	Argument	str - op_array -> vars		175257	0					
ANR	175430	AdditiveExpression	str - op_array -> vars		175257	0		-			
ANR	175431	Identifier	str		175257	0					
ANR	175432	PtrMemberAccess	op_array -> vars		175257	1					
ANR	175433	Identifier	op_array		175257	0					
ANR	175434	Identifier	vars		175257	1					
ANR	175435	ExpressionStatement	zval_ptr_dtor ( var )	1635:6:46708:46726	175257	1	True				
ANR	175436	CallExpression	zval_ptr_dtor ( var )		175257	0					
ANR	175437	Callee	zval_ptr_dtor		175257	0					
ANR	175438	Identifier	zval_ptr_dtor		175257	0					
ANR	175439	ArgumentList	var		175257	1					
ANR	175440	Argument	var		175257	0					
ANR	175441	Identifier	var		175257	0					
ANR	175442	ExpressionStatement	"ZVAL_COPY_VALUE ( var , value )"	1636:6:46734:46761	175257	2	True				
ANR	175443	CallExpression	"ZVAL_COPY_VALUE ( var , value )"		175257	0					
ANR	175444	Callee	ZVAL_COPY_VALUE		175257	0					
ANR	175445	Identifier	ZVAL_COPY_VALUE		175257	0					
ANR	175446	ArgumentList	var		175257	1					
ANR	175447	Argument	var		175257	0					
ANR	175448	Identifier	var		175257	0					
ANR	175449	Argument	value		175257	1					
ANR	175450	Identifier	value		175257	0					
ANR	175451	ReturnStatement	return SUCCESS ;	1637:6:46769:46783	175257	3	True				
ANR	175452	Identifier	SUCCESS		175257	0					
ANR	175453	ExpressionStatement	str ++	1639:5:46797:46802	175257	1	True				
ANR	175454	PostIncDecOperationExpression	str ++		175257	0					
ANR	175455	Identifier	str		175257	0					
ANR	175456	IncDec	++		175257	1					
ANR	175457	Condition	str != end	1640:13:46817:46826	175257	1	True				
ANR	175458	EqualityExpression	str != end		175257	0		!=			
ANR	175459	Identifier	str		175257	0					
ANR	175460	Identifier	end		175257	1					
ANR	175461	IfStatement	if ( force )		175257	3					
ANR	175462	Condition	force	1642:7:46842:46846	175257	0	True				
ANR	175463	Identifier	force		175257	0					
ANR	175464	CompoundStatement		29:4:840:894	175257	1					
ANR	175465	IdentifierDeclStatement	zend_array * symbol_table = zend_rebuild_symbol_table ( ) ;	1643:4:46855:46909	175257	0	True				
ANR	175466	IdentifierDecl	* symbol_table = zend_rebuild_symbol_table ( )		175257	0					
ANR	175467	IdentifierDeclType	zend_array *		175257	0					
ANR	175468	Identifier	symbol_table		175257	1					
ANR	175469	AssignmentExpression	* symbol_table = zend_rebuild_symbol_table ( )		175257	2		=			
ANR	175470	Identifier	symbol_table		175257	0					
ANR	175471	CallExpression	zend_rebuild_symbol_table ( )		175257	1					
ANR	175472	Callee	zend_rebuild_symbol_table		175257	0					
ANR	175473	Identifier	zend_rebuild_symbol_table		175257	0					
ANR	175474	ArgumentList			175257	1					
ANR	175475	IfStatement	if ( symbol_table )		175257	1					
ANR	175476	Condition	symbol_table	1644:8:46919:46930	175257	0	True				
ANR	175477	Identifier	symbol_table		175257	0					
ANR	175478	CompoundStatement		30:22:918:918	175257	1					
ANR	175479	ReturnStatement	"return zend_hash_str_update ( symbol_table , name , len , value ) ? SUCCESS : FAILURE ;"	1645:5:46940:47019	175257	0	True				
ANR	175480	ConditionalExpression	"zend_hash_str_update ( symbol_table , name , len , value ) ? SUCCESS : FAILURE"		175257	0					
ANR	175481	Condition	"zend_hash_str_update ( symbol_table , name , len , value )"		175257	0					
ANR	175482	CallExpression	"zend_hash_str_update ( symbol_table , name , len , value )"		175257	0					
ANR	175483	Callee	zend_hash_str_update		175257	0					
ANR	175484	Identifier	zend_hash_str_update		175257	0					
ANR	175485	ArgumentList	symbol_table		175257	1					
ANR	175486	Argument	symbol_table		175257	0					
ANR	175487	Identifier	symbol_table		175257	0					
ANR	175488	Argument	name		175257	1					
ANR	175489	Identifier	name		175257	0					
ANR	175490	Argument	len		175257	2					
ANR	175491	Identifier	len		175257	0					
ANR	175492	Argument	value		175257	3					
ANR	175493	Identifier	value		175257	0					
ANR	175494	Identifier	SUCCESS		175257	1					
ANR	175495	Identifier	FAILURE		175257	2					
ANR	175496	ExpressionStatement		1645:85:47020:47020	175257	1	True				
ANR	175497	ElseStatement	else		175257	0					
ANR	175498	CompoundStatement		34:9:1027:1027	175257	0					
ANR	175499	ReturnStatement	"return ( zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL ) ? SUCCESS : FAILURE ;"	1649:3:47047:47154	175257	0	True				
ANR	175500	ConditionalExpression	"( zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL ) ? SUCCESS : FAILURE"		175257	0					
ANR	175501	Condition	"zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL"		175257	0					
ANR	175502	EqualityExpression	"zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value ) != NULL"		175257	0		!=			
ANR	175503	CallExpression	"zend_hash_str_update_ind ( execute_data -> symbol_table , name , len , value )"		175257	0					
ANR	175504	Callee	zend_hash_str_update_ind		175257	0					
ANR	175505	Identifier	zend_hash_str_update_ind		175257	0					
ANR	175506	ArgumentList	execute_data -> symbol_table		175257	1					
ANR	175507	Argument	execute_data -> symbol_table		175257	0					
ANR	175508	PtrMemberAccess	execute_data -> symbol_table		175257	0					
ANR	175509	Identifier	execute_data		175257	0					
ANR	175510	Identifier	symbol_table		175257	1					
ANR	175511	Argument	name		175257	1					
ANR	175512	Identifier	name		175257	0					
ANR	175513	Argument	len		175257	2					
ANR	175514	Identifier	len		175257	0					
ANR	175515	Argument	value		175257	3					
ANR	175516	Identifier	value		175257	0					
ANR	175517	Identifier	NULL		175257	1					
ANR	175518	Identifier	SUCCESS		175257	1					
ANR	175519	Identifier	FAILURE		175257	2					
ANR	175520	ReturnStatement	return FAILURE ;	1652:1:47164:47178	175257	3	True				
ANR	175521	Identifier	FAILURE		175257	0					
ANR	175522	ReturnType	ZEND_API int		175257	1					
ANR	175523	Identifier	zend_set_local_var_str		175257	2					
ANR	175524	ParameterList	"const char * name , size_t len , zval * value , int force"		175257	3					
ANR	175525	Parameter	const char * name	1614:36:45950:45965	175257	0	True				
ANR	175526	ParameterType	const char *		175257	0					
ANR	175527	Identifier	name		175257	1					
ANR	175528	Parameter	size_t len	1614:54:45968:45977	175257	1	True				
ANR	175529	ParameterType	size_t		175257	0					
ANR	175530	Identifier	len		175257	1					
ANR	175531	Parameter	zval * value	1614:66:45980:45990	175257	2	True				
ANR	175532	ParameterType	zval *		175257	0					
ANR	175533	Identifier	value		175257	1					
ANR	175534	Parameter	int force	1614:79:45993:46001	175257	3	True				
ANR	175535	ParameterType	int		175257	0					
ANR	175536	Identifier	force		175257	1					
ANR	175537	CFGEntryNode	ENTRY		175257		True				
ANR	175538	CFGExitNode	EXIT		175257		True				
ANR	175539	Symbol	zend_hash_str_update_ind		175257						
ANR	175540	Symbol	zend_rebuild_symbol_table		175257						
ANR	175541	Symbol	execute_data -> symbol_table		175257						
ANR	175542	Symbol	* execute_data -> func		175257						
ANR	175543	Symbol	zend_hash_str_update		175257						
ANR	175544	Symbol	current_execute_data		175257						
ANR	175545	Symbol	op_array -> last_var		175257						
ANR	175546	Symbol	zend_hash_func		175257						
ANR	175547	Symbol	ZSTR_H		175257						
ANR	175548	Symbol	execute_data		175257						
ANR	175549	Symbol	memcmp		175257						
ANR	175550	Symbol	len		175257						
ANR	175551	Symbol	& execute_data -> func -> op_array		175257						
ANR	175552	Symbol	* execute_data		175257						
ANR	175553	Symbol	end		175257						
ANR	175554	Symbol	execute_data -> func -> common		175257						
ANR	175555	Symbol	* str		175257						
ANR	175556	Symbol	value		175257						
ANR	175557	Symbol	EG		175257						
ANR	175558	Symbol	op_array -> vars		175257						
ANR	175559	Symbol	SUCCESS		175257						
ANR	175560	Symbol	NULL		175257						
ANR	175561	Symbol	var		175257						
ANR	175562	Symbol	h		175257						
ANR	175563	Symbol	symbol_table		175257						
ANR	175564	Symbol	execute_data -> func		175257						
ANR	175565	Symbol	FAILURE		175257						
ANR	175566	Symbol	* op_array		175257						
ANR	175567	Symbol	ZSTR_VAL		175257						
ANR	175568	Symbol	str		175257						
ANR	175569	Symbol	execute_data -> prev_execute_data		175257						
ANR	175570	Symbol	EX_VAR_NUM		175257						
ANR	175571	Symbol	name		175257						
ANR	175572	Symbol	ZSTR_LEN		175257						
ANR	175573	Symbol	* * execute_data		175257						
ANR	175574	Symbol	ZEND_USER_CODE		175257						
ANR	175575	Symbol	force		175257						
ANR	175576	Symbol	execute_data -> func -> common . type		175257						
ANR	175577	Symbol	EXPECTED		175257						
ANR	175578	Symbol	op_array		175257						
