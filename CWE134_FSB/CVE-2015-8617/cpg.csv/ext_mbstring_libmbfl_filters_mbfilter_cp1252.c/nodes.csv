command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1033651	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_libmbfl_filters_mbfilter_cp1252.c								
ANR	1033652	DeclStmt									
ANR	1033653	Decl							int	"int ( int c , mbfl_identify_filter * filter )"	mbfl_filt_ident_cp1252
ANR	1033654	DeclStmt									
ANR	1033655	Decl							const char	const char * [ ]	mbfl_encoding_cp1252_aliases
ANR	1033656	DeclStmt									
ANR	1033657	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_cp1252
ANR	1033658	DeclStmt									
ANR	1033659	Decl							const struct mbfl_identify_vtbl	const struct mbfl_identify_vtbl	vtbl_identify_cp1252
ANR	1033660	DeclStmt									
ANR	1033661	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_cp1252_wchar
ANR	1033662	DeclStmt									
ANR	1033663	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_cp1252
ANR	1033664	Function	mbfl_filt_conv_wchar_cp1252	81:0:2260:2906							
ANR	1033665	FunctionDef	"mbfl_filt_conv_wchar_cp1252 (int c , mbfl_convert_filter * filter)"		1033664	0					
ANR	1033666	CompoundStatement		82:0:2328:2906	1033664	0					
ANR	1033667	IdentifierDeclStatement	"int s = - 1 , n ;"	83:1:2331:2342	1033664	0	True				
ANR	1033668	IdentifierDecl	s = - 1		1033664	0					
ANR	1033669	IdentifierDeclType	int		1033664	0					
ANR	1033670	Identifier	s		1033664	1					
ANR	1033671	AssignmentExpression	s = - 1		1033664	2		=			
ANR	1033672	Identifier	s		1033664	0					
ANR	1033673	UnaryOperationExpression	- 1		1033664	1					
ANR	1033674	UnaryOperator	-		1033664	0					
ANR	1033675	PrimaryExpression	1		1033664	1					
ANR	1033676	IdentifierDecl	n		1033664	1					
ANR	1033677	IdentifierDeclType	int		1033664	0					
ANR	1033678	Identifier	n		1033664	1					
ANR	1033679	IfStatement	if ( c >= 0x100 )		1033664	1					
ANR	1033680	Condition	c >= 0x100	85:5:2350:2359	1033664	0	True				
ANR	1033681	RelationalExpression	c >= 0x100		1033664	0		>=			
ANR	1033682	Identifier	c		1033664	0					
ANR	1033683	PrimaryExpression	0x100		1033664	1					
ANR	1033684	CompoundStatement		4:17:33:33	1033664	1					
ANR	1033685	ExpressionStatement	s = - 1	87:2:2407:2413	1033664	0	True				
ANR	1033686	AssignmentExpression	s = - 1		1033664	0		=			
ANR	1033687	Identifier	s		1033664	0					
ANR	1033688	UnaryOperationExpression	- 1		1033664	1					
ANR	1033689	UnaryOperator	-		1033664	0					
ANR	1033690	PrimaryExpression	1		1033664	1					
ANR	1033691	ExpressionStatement	n = 31	88:2:2417:2423	1033664	1	True				
ANR	1033692	AssignmentExpression	n = 31		1033664	0		=			
ANR	1033693	Identifier	n		1033664	0					
ANR	1033694	PrimaryExpression	31		1033664	1					
ANR	1033695	WhileStatement	while ( n >= 0 )		1033664	2					
ANR	1033696	Condition	n >= 0	89:9:2434:2439	1033664	0	True				
ANR	1033697	RelationalExpression	n >= 0		1033664	0		>=			
ANR	1033698	Identifier	n		1033664	0					
ANR	1033699	PrimaryExpression	0		1033664	1					
ANR	1033700	CompoundStatement		8:17:113:113	1033664	1					
ANR	1033701	IfStatement	if ( c == cp1252_ucs_table [ n ] && c != 0xfffe )		1033664	0					
ANR	1033702	Condition	c == cp1252_ucs_table [ n ] && c != 0xfffe	90:7:2451:2489	1033664	0	True				
ANR	1033703	AndExpression	c == cp1252_ucs_table [ n ] && c != 0xfffe		1033664	0		&&			
ANR	1033704	EqualityExpression	c == cp1252_ucs_table [ n ]		1033664	0		==			
ANR	1033705	Identifier	c		1033664	0					
ANR	1033706	ArrayIndexing	cp1252_ucs_table [ n ]		1033664	1					
ANR	1033707	Identifier	cp1252_ucs_table		1033664	0					
ANR	1033708	Identifier	n		1033664	1					
ANR	1033709	EqualityExpression	c != 0xfffe		1033664	1		!=			
ANR	1033710	Identifier	c		1033664	0					
ANR	1033711	PrimaryExpression	0xfffe		1033664	1					
ANR	1033712	CompoundStatement		9:48:163:163	1033664	1					
ANR	1033713	ExpressionStatement	s = 0x80 + n	91:4:2498:2510	1033664	0	True				
ANR	1033714	AssignmentExpression	s = 0x80 + n		1033664	0		=			
ANR	1033715	Identifier	s		1033664	0					
ANR	1033716	AdditiveExpression	0x80 + n		1033664	1		+			
ANR	1033717	PrimaryExpression	0x80		1033664	0					
ANR	1033718	Identifier	n		1033664	1					
ANR	1033719	BreakStatement	break ;	92:4:2516:2521	1033664	1	True				
ANR	1033720	ExpressionStatement	n --	94:3:2531:2534	1033664	1	True				
ANR	1033721	PostIncDecOperationExpression	n --		1033664	0					
ANR	1033722	Identifier	n		1033664	0					
ANR	1033723	IncDec	--		1033664	1					
ANR	1033724	IfStatement	if ( s <= 0 && ( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_1 )		1033664	3					
ANR	1033725	Condition	s <= 0 && ( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_1	96:6:2546:2604	1033664	0	True				
ANR	1033726	AndExpression	s <= 0 && ( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_1		1033664	0		&&			
ANR	1033727	RelationalExpression	s <= 0		1033664	0		<=			
ANR	1033728	Identifier	s		1033664	0					
ANR	1033729	PrimaryExpression	0		1033664	1					
ANR	1033730	EqualityExpression	( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_1		1033664	1		==			
ANR	1033731	BitAndExpression	c & ~MBFL_WCSPLANE_MASK		1033664	0		&			
ANR	1033732	Identifier	c		1033664	0					
ANR	1033733	Identifier	~MBFL_WCSPLANE_MASK		1033664	1					
ANR	1033734	Identifier	MBFL_WCSPLANE_8859_1		1033664	1					
ANR	1033735	CompoundStatement		16:2:280:280	1033664	1					
ANR	1033736	ExpressionStatement	s = c & MBFL_WCSPLANE_MASK	98:3:2614:2640	1033664	0	True				
ANR	1033737	AssignmentExpression	s = c & MBFL_WCSPLANE_MASK		1033664	0		=			
ANR	1033738	Identifier	s		1033664	0					
ANR	1033739	BitAndExpression	c & MBFL_WCSPLANE_MASK		1033664	1		&			
ANR	1033740	Identifier	c		1033664	0					
ANR	1033741	Identifier	MBFL_WCSPLANE_MASK		1033664	1					
ANR	1033742	ElseStatement	else		1033664	0					
ANR	1033743	IfStatement	if ( c >= 0 && c < 0x100 )		1033664	0					
ANR	1033744	Condition	c >= 0 && c < 0x100	101:10:2659:2677	1033664	0	True				
ANR	1033745	AndExpression	c >= 0 && c < 0x100		1033664	0		&&			
ANR	1033746	RelationalExpression	c >= 0		1033664	0		>=			
ANR	1033747	Identifier	c		1033664	0					
ANR	1033748	PrimaryExpression	0		1033664	1					
ANR	1033749	RelationalExpression	c < 0x100		1033664	1		<			
ANR	1033750	Identifier	c		1033664	0					
ANR	1033751	PrimaryExpression	0x100		1033664	1					
ANR	1033752	CompoundStatement		20:31:351:351	1033664	1					
ANR	1033753	ExpressionStatement	s = c	102:2:2684:2689	1033664	0	True				
ANR	1033754	AssignmentExpression	s = c		1033664	0		=			
ANR	1033755	Identifier	s		1033664	0					
ANR	1033756	Identifier	c		1033664	1					
ANR	1033757	IfStatement	if ( s >= 0 )		1033664	2					
ANR	1033758	Condition	s >= 0	104:5:2699:2704	1033664	0	True				
ANR	1033759	RelationalExpression	s >= 0		1033664	0		>=			
ANR	1033760	Identifier	s		1033664	0					
ANR	1033761	PrimaryExpression	0		1033664	1					
ANR	1033762	CompoundStatement		23:13:378:378	1033664	1					
ANR	1033763	ExpressionStatement	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"	105:2:2711:2758	1033664	0	True				
ANR	1033764	CallExpression	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"		1033664	0					
ANR	1033765	Callee	CK		1033664	0					
ANR	1033766	Identifier	CK		1033664	0					
ANR	1033767	ArgumentList	"( * filter -> output_function ) ( s , filter -> data )"		1033664	1					
ANR	1033768	Argument	"( * filter -> output_function ) ( s , filter -> data )"		1033664	0					
ANR	1033769	CallExpression	"( * filter -> output_function ) ( s , filter -> data )"		1033664	0					
ANR	1033770	Callee	* filter -> output_function		1033664	0					
ANR	1033771	UnaryOperationExpression	* filter -> output_function		1033664	0					
ANR	1033772	UnaryOperator	*		1033664	0					
ANR	1033773	PtrMemberAccess	filter -> output_function		1033664	1					
ANR	1033774	Identifier	filter		1033664	0					
ANR	1033775	Identifier	output_function		1033664	1					
ANR	1033776	ArgumentList	s		1033664	1					
ANR	1033777	Argument	s		1033664	0					
ANR	1033778	Identifier	s		1033664	0					
ANR	1033779	Argument	filter -> data		1033664	1					
ANR	1033780	PtrMemberAccess	filter -> data		1033664	0					
ANR	1033781	Identifier	filter		1033664	0					
ANR	1033782	Identifier	data		1033664	1					
ANR	1033783	ElseStatement	else		1033664	0					
ANR	1033784	CompoundStatement		25:8:439:439	1033664	0					
ANR	1033785	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		1033664	0					
ANR	1033786	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	107:6:2776:2834	1033664	0	True				
ANR	1033787	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1033664	0		!=			
ANR	1033788	PtrMemberAccess	filter -> illegal_mode		1033664	0					
ANR	1033789	Identifier	filter		1033664	0					
ANR	1033790	Identifier	illegal_mode		1033664	1					
ANR	1033791	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1033664	1					
ANR	1033792	CompoundStatement		26:67:508:508	1033664	1					
ANR	1033793	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	108:3:2842:2886	1033664	0	True				
ANR	1033794	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		1033664	0					
ANR	1033795	Callee	CK		1033664	0					
ANR	1033796	Identifier	CK		1033664	0					
ANR	1033797	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		1033664	1					
ANR	1033798	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		1033664	0					
ANR	1033799	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		1033664	0					
ANR	1033800	Callee	mbfl_filt_conv_illegal_output		1033664	0					
ANR	1033801	Identifier	mbfl_filt_conv_illegal_output		1033664	0					
ANR	1033802	ArgumentList	c		1033664	1					
ANR	1033803	Argument	c		1033664	0					
ANR	1033804	Identifier	c		1033664	0					
ANR	1033805	Argument	filter		1033664	1					
ANR	1033806	Identifier	filter		1033664	0					
ANR	1033807	ReturnStatement	return c ;	111:1:2896:2904	1033664	3	True				
ANR	1033808	Identifier	c		1033664	0					
ANR	1033809	ReturnType	int		1033664	1					
ANR	1033810	Identifier	mbfl_filt_conv_wchar_cp1252		1033664	2					
ANR	1033811	ParameterList	"int c , mbfl_convert_filter * filter"		1033664	3					
ANR	1033812	Parameter	int c	81:32:2292:2296	1033664	0	True				
ANR	1033813	ParameterType	int		1033664	0					
ANR	1033814	Identifier	c		1033664	1					
ANR	1033815	Parameter	mbfl_convert_filter * filter	81:39:2299:2325	1033664	1	True				
ANR	1033816	ParameterType	mbfl_convert_filter *		1033664	0					
ANR	1033817	Identifier	filter		1033664	1					
ANR	1033818	CFGEntryNode	ENTRY		1033664		True				
ANR	1033819	CFGExitNode	EXIT		1033664		True				
ANR	1033820	Symbol	c		1033664						
ANR	1033821	Symbol	mbfl_filt_conv_illegal_output		1033664						
ANR	1033822	Symbol	filter -> illegal_mode		1033664						
ANR	1033823	Symbol	~MBFL_WCSPLANE_MASK		1033664						
ANR	1033824	Symbol	* filter -> output_function		1033664						
ANR	1033825	Symbol	MBFL_WCSPLANE_MASK		1033664						
ANR	1033826	Symbol	n		1033664						
ANR	1033827	Symbol	* filter		1033664						
ANR	1033828	Symbol	filter -> data		1033664						
ANR	1033829	Symbol	filter		1033664						
ANR	1033830	Symbol	MBFL_WCSPLANE_8859_1		1033664						
ANR	1033831	Symbol	* cp1252_ucs_table		1033664						
ANR	1033832	Symbol	s		1033664						
ANR	1033833	Symbol	filter -> output_function		1033664						
ANR	1033834	Symbol	* n		1033664						
ANR	1033835	Symbol	cp1252_ucs_table		1033664						
ANR	1033836	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1033664						
ANR	1033837	Symbol	* * filter		1033664						
ANR	1033838	Function	mbfl_filt_conv_cp1252_wchar	117:0:2935:3163							
ANR	1033839	FunctionDef	"mbfl_filt_conv_cp1252_wchar (int c , mbfl_convert_filter * filter)"		1033838	0					
ANR	1033840	CompoundStatement		118:0:3003:3163	1033838	0					
ANR	1033841	IdentifierDeclStatement	int s ;	119:1:3006:3011	1033838	0	True				
ANR	1033842	IdentifierDecl	s		1033838	0					
ANR	1033843	IdentifierDeclType	int		1033838	0					
ANR	1033844	Identifier	s		1033838	1					
ANR	1033845	IfStatement	if ( c >= 0x80 && c < 0xa0 )		1033838	1					
ANR	1033846	Condition	c >= 0x80 && c < 0xa0	121:5:3019:3039	1033838	0	True				
ANR	1033847	AndExpression	c >= 0x80 && c < 0xa0		1033838	0		&&			
ANR	1033848	RelationalExpression	c >= 0x80		1033838	0		>=			
ANR	1033849	Identifier	c		1033838	0					
ANR	1033850	PrimaryExpression	0x80		1033838	1					
ANR	1033851	RelationalExpression	c < 0xa0		1033838	1		<			
ANR	1033852	Identifier	c		1033838	0					
ANR	1033853	PrimaryExpression	0xa0		1033838	1					
ANR	1033854	CompoundStatement		4:28:38:38	1033838	1					
ANR	1033855	ExpressionStatement	s = cp1252_ucs_table [ c - 0x80 ]	122:2:3046:3076	1033838	0	True				
ANR	1033856	AssignmentExpression	s = cp1252_ucs_table [ c - 0x80 ]		1033838	0		=			
ANR	1033857	Identifier	s		1033838	0					
ANR	1033858	ArrayIndexing	cp1252_ucs_table [ c - 0x80 ]		1033838	1					
ANR	1033859	Identifier	cp1252_ucs_table		1033838	0					
ANR	1033860	AdditiveExpression	c - 0x80		1033838	1		-			
ANR	1033861	Identifier	c		1033838	0					
ANR	1033862	PrimaryExpression	0x80		1033838	1					
ANR	1033863	ElseStatement	else		1033838	0					
ANR	1033864	CompoundStatement		6:8:82:82	1033838	0					
ANR	1033865	ExpressionStatement	s = c	124:2:3090:3095	1033838	0	True				
ANR	1033866	AssignmentExpression	s = c		1033838	0		=			
ANR	1033867	Identifier	s		1033838	0					
ANR	1033868	Identifier	c		1033838	1					
ANR	1033869	ExpressionStatement	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"	127:1:3102:3149	1033838	2	True				
ANR	1033870	CallExpression	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"		1033838	0					
ANR	1033871	Callee	CK		1033838	0					
ANR	1033872	Identifier	CK		1033838	0					
ANR	1033873	ArgumentList	"( * filter -> output_function ) ( s , filter -> data )"		1033838	1					
ANR	1033874	Argument	"( * filter -> output_function ) ( s , filter -> data )"		1033838	0					
ANR	1033875	CallExpression	"( * filter -> output_function ) ( s , filter -> data )"		1033838	0					
ANR	1033876	Callee	* filter -> output_function		1033838	0					
ANR	1033877	UnaryOperationExpression	* filter -> output_function		1033838	0					
ANR	1033878	UnaryOperator	*		1033838	0					
ANR	1033879	PtrMemberAccess	filter -> output_function		1033838	1					
ANR	1033880	Identifier	filter		1033838	0					
ANR	1033881	Identifier	output_function		1033838	1					
ANR	1033882	ArgumentList	s		1033838	1					
ANR	1033883	Argument	s		1033838	0					
ANR	1033884	Identifier	s		1033838	0					
ANR	1033885	Argument	filter -> data		1033838	1					
ANR	1033886	PtrMemberAccess	filter -> data		1033838	0					
ANR	1033887	Identifier	filter		1033838	0					
ANR	1033888	Identifier	data		1033838	1					
ANR	1033889	ReturnStatement	return c ;	129:1:3153:3161	1033838	3	True				
ANR	1033890	Identifier	c		1033838	0					
ANR	1033891	ReturnType	int		1033838	1					
ANR	1033892	Identifier	mbfl_filt_conv_cp1252_wchar		1033838	2					
ANR	1033893	ParameterList	"int c , mbfl_convert_filter * filter"		1033838	3					
ANR	1033894	Parameter	int c	117:32:2967:2971	1033838	0	True				
ANR	1033895	ParameterType	int		1033838	0					
ANR	1033896	Identifier	c		1033838	1					
ANR	1033897	Parameter	mbfl_convert_filter * filter	117:39:2974:3000	1033838	1	True				
ANR	1033898	ParameterType	mbfl_convert_filter *		1033838	0					
ANR	1033899	Identifier	filter		1033838	1					
ANR	1033900	CFGEntryNode	ENTRY		1033838		True				
ANR	1033901	CFGExitNode	EXIT		1033838		True				
ANR	1033902	Symbol	filter		1033838						
ANR	1033903	Symbol	* cp1252_ucs_table		1033838						
ANR	1033904	Symbol	c		1033838						
ANR	1033905	Symbol	s		1033838						
ANR	1033906	Symbol	filter -> output_function		1033838						
ANR	1033907	Symbol	cp1252_ucs_table		1033838						
ANR	1033908	Symbol	* filter -> output_function		1033838						
ANR	1033909	Symbol	* c		1033838						
ANR	1033910	Symbol	* filter		1033838						
ANR	1033911	Symbol	* * filter		1033838						
ANR	1033912	Symbol	filter -> data		1033838						
ANR	1033913	Function	mbfl_filt_ident_cp1252	138:0:3480:3651							
ANR	1033914	FunctionDef	"mbfl_filt_ident_cp1252 (int c , mbfl_identify_filter * filter)"		1033913	0					
ANR	1033915	CompoundStatement		139:0:3551:3651	1033913	0					
ANR	1033916	IfStatement	if ( c >= 0x80 && c < 0xa0 )		1033913	0					
ANR	1033917	Condition	c >= 0x80 && c < 0xa0	140:5:3558:3578	1033913	0	True				
ANR	1033918	AndExpression	c >= 0x80 && c < 0xa0		1033913	0		&&			
ANR	1033919	RelationalExpression	c >= 0x80		1033913	0		>=			
ANR	1033920	Identifier	c		1033913	0					
ANR	1033921	PrimaryExpression	0x80		1033913	1					
ANR	1033922	RelationalExpression	c < 0xa0		1033913	1		<			
ANR	1033923	Identifier	c		1033913	0					
ANR	1033924	PrimaryExpression	0xa0		1033913	1					
ANR	1033925	ExpressionStatement	filter -> flag = 0	141:2:3583:3599	1033913	1	True				
ANR	1033926	AssignmentExpression	filter -> flag = 0		1033913	0		=			
ANR	1033927	PtrMemberAccess	filter -> flag		1033913	0					
ANR	1033928	Identifier	filter		1033913	0					
ANR	1033929	Identifier	flag		1033913	1					
ANR	1033930	PrimaryExpression	0		1033913	1					
ANR	1033931	ElseStatement	else		1033913	0					
ANR	1033932	ExpressionStatement	filter -> flag = 1	143:2:3609:3625	1033913	0	True				
ANR	1033933	AssignmentExpression	filter -> flag = 1		1033913	0		=			
ANR	1033934	PtrMemberAccess	filter -> flag		1033913	0					
ANR	1033935	Identifier	filter		1033913	0					
ANR	1033936	Identifier	flag		1033913	1					
ANR	1033937	PrimaryExpression	1		1033913	1					
ANR	1033938	ReturnStatement	return c ;	144:1:3641:3649	1033913	1	True				
ANR	1033939	Identifier	c		1033913	0					
ANR	1033940	ReturnType	static int		1033913	1					
ANR	1033941	Identifier	mbfl_filt_ident_cp1252		1033913	2					
ANR	1033942	ParameterList	"int c , mbfl_identify_filter * filter"		1033913	3					
ANR	1033943	Parameter	int c	138:34:3514:3518	1033913	0	True				
ANR	1033944	ParameterType	int		1033913	0					
ANR	1033945	Identifier	c		1033913	1					
ANR	1033946	Parameter	mbfl_identify_filter * filter	138:41:3521:3548	1033913	1	True				
ANR	1033947	ParameterType	mbfl_identify_filter *		1033913	0					
ANR	1033948	Identifier	filter		1033913	1					
ANR	1033949	CFGEntryNode	ENTRY		1033913		True				
ANR	1033950	CFGExitNode	EXIT		1033913		True				
ANR	1033951	Symbol	filter		1033913						
ANR	1033952	Symbol	c		1033913						
ANR	1033953	Symbol	filter -> flag		1033913						
ANR	1033954	Symbol	* filter		1033913						
