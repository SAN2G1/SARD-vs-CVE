command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1092155	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_libmbfl_filters_mbfilter_utf16.c								
ANR	1092156	DeclStmt									
ANR	1092157	Decl							const char	const char * [ ]	mbfl_encoding_utf16_aliases
ANR	1092158	DeclStmt									
ANR	1092159	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf16
ANR	1092160	DeclStmt									
ANR	1092161	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf16be
ANR	1092162	DeclStmt									
ANR	1092163	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_utf16le
ANR	1092164	DeclStmt									
ANR	1092165	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf16_wchar
ANR	1092166	DeclStmt									
ANR	1092167	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf16
ANR	1092168	DeclStmt									
ANR	1092169	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf16be_wchar
ANR	1092170	DeclStmt									
ANR	1092171	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf16be
ANR	1092172	DeclStmt									
ANR	1092173	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_utf16le_wchar
ANR	1092174	DeclStmt									
ANR	1092175	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_utf16le
ANR	1092176	Function	mbfl_filt_conv_utf16_wchar	125:0:3115:4453							
ANR	1092177	FunctionDef	"mbfl_filt_conv_utf16_wchar (int c , mbfl_convert_filter * filter)"		1092176	0					
ANR	1092178	CompoundStatement		126:0:3182:4453	1092176	0					
ANR	1092179	IdentifierDeclStatement	"int n , endian ;"	127:1:3185:3198	1092176	0	True				
ANR	1092180	IdentifierDecl	n		1092176	0					
ANR	1092181	IdentifierDeclType	int		1092176	0					
ANR	1092182	Identifier	n		1092176	1					
ANR	1092183	IdentifierDecl	endian		1092176	1					
ANR	1092184	IdentifierDeclType	int		1092176	0					
ANR	1092185	Identifier	endian		1092176	1					
ANR	1092186	ExpressionStatement	endian = filter -> status & 0xff00	129:1:3202:3234	1092176	1	True				
ANR	1092187	AssignmentExpression	endian = filter -> status & 0xff00		1092176	0		=			
ANR	1092188	Identifier	endian		1092176	0					
ANR	1092189	BitAndExpression	filter -> status & 0xff00		1092176	1		&			
ANR	1092190	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092191	Identifier	filter		1092176	0					
ANR	1092192	Identifier	status		1092176	1					
ANR	1092193	PrimaryExpression	0xff00		1092176	1					
ANR	1092194	SwitchStatement	switch ( filter -> status & 0x0f )		1092176	2					
ANR	1092195	Condition	filter -> status & 0x0f	130:9:3245:3265	1092176	0	True				
ANR	1092196	BitAndExpression	filter -> status & 0x0f		1092176	0		&			
ANR	1092197	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092198	Identifier	filter		1092176	0					
ANR	1092199	Identifier	status		1092176	1					
ANR	1092200	PrimaryExpression	0x0f		1092176	1					
ANR	1092201	CompoundStatement		5:32:85:85	1092176	1					
ANR	1092202	Label	case 0 :	131:1:3271:3277	1092176	0	True				
ANR	1092203	IfStatement	if ( endian )		1092176	1					
ANR	1092204	Condition	endian	132:6:3285:3290	1092176	0	True				
ANR	1092205	Identifier	endian		1092176	0					
ANR	1092206	CompoundStatement		7:14:110:110	1092176	1					
ANR	1092207	ExpressionStatement	n = c & 0xff	133:3:3298:3310	1092176	0	True				
ANR	1092208	AssignmentExpression	n = c & 0xff		1092176	0		=			
ANR	1092209	Identifier	n		1092176	0					
ANR	1092210	BitAndExpression	c & 0xff		1092176	1		&			
ANR	1092211	Identifier	c		1092176	0					
ANR	1092212	PrimaryExpression	0xff		1092176	1					
ANR	1092213	ElseStatement	else		1092176	0					
ANR	1092214	CompoundStatement		9:9:138:138	1092176	0					
ANR	1092215	ExpressionStatement	n = ( c & 0xff ) << 8	135:3:3326:3345	1092176	0	True				
ANR	1092216	AssignmentExpression	n = ( c & 0xff ) << 8		1092176	0		=			
ANR	1092217	Identifier	n		1092176	0					
ANR	1092218	ShiftExpression	( c & 0xff ) << 8		1092176	1		<<			
ANR	1092219	BitAndExpression	c & 0xff		1092176	0		&			
ANR	1092220	Identifier	c		1092176	0					
ANR	1092221	PrimaryExpression	0xff		1092176	1					
ANR	1092222	PrimaryExpression	8		1092176	1					
ANR	1092223	ExpressionStatement	filter -> cache |= n	137:2:3353:3371	1092176	2	True				
ANR	1092224	AssignmentExpression	filter -> cache |= n		1092176	0		|=			
ANR	1092225	PtrMemberAccess	filter -> cache		1092176	0					
ANR	1092226	Identifier	filter		1092176	0					
ANR	1092227	Identifier	cache		1092176	1					
ANR	1092228	Identifier	n		1092176	1					
ANR	1092229	ExpressionStatement	filter -> status ++	138:2:3375:3391	1092176	3	True				
ANR	1092230	PostIncDecOperationExpression	filter -> status ++		1092176	0					
ANR	1092231	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092232	Identifier	filter		1092176	0					
ANR	1092233	Identifier	status		1092176	1					
ANR	1092234	IncDec	++		1092176	1					
ANR	1092235	BreakStatement	break ;	139:2:3395:3400	1092176	4	True				
ANR	1092236	Label	default :	140:1:3403:3410	1092176	5	True				
ANR	1092237	Identifier	default		1092176	0					
ANR	1092238	IfStatement	if ( endian )		1092176	6					
ANR	1092239	Condition	endian	141:6:3418:3423	1092176	0	True				
ANR	1092240	Identifier	endian		1092176	0					
ANR	1092241	CompoundStatement		16:14:243:243	1092176	1					
ANR	1092242	ExpressionStatement	n = ( c & 0xff ) << 8	142:3:3431:3450	1092176	0	True				
ANR	1092243	AssignmentExpression	n = ( c & 0xff ) << 8		1092176	0		=			
ANR	1092244	Identifier	n		1092176	0					
ANR	1092245	ShiftExpression	( c & 0xff ) << 8		1092176	1		<<			
ANR	1092246	BitAndExpression	c & 0xff		1092176	0		&			
ANR	1092247	Identifier	c		1092176	0					
ANR	1092248	PrimaryExpression	0xff		1092176	1					
ANR	1092249	PrimaryExpression	8		1092176	1					
ANR	1092250	ElseStatement	else		1092176	0					
ANR	1092251	CompoundStatement		18:9:278:278	1092176	0					
ANR	1092252	ExpressionStatement	n = c & 0xff	144:3:3466:3478	1092176	0	True				
ANR	1092253	AssignmentExpression	n = c & 0xff		1092176	0		=			
ANR	1092254	Identifier	n		1092176	0					
ANR	1092255	BitAndExpression	c & 0xff		1092176	1		&			
ANR	1092256	Identifier	c		1092176	0					
ANR	1092257	PrimaryExpression	0xff		1092176	1					
ANR	1092258	ExpressionStatement	n |= filter -> cache & 0xffff	146:2:3486:3513	1092176	7	True				
ANR	1092259	AssignmentExpression	n |= filter -> cache & 0xffff		1092176	0		|=			
ANR	1092260	Identifier	n		1092176	0					
ANR	1092261	BitAndExpression	filter -> cache & 0xffff		1092176	1		&			
ANR	1092262	PtrMemberAccess	filter -> cache		1092176	0					
ANR	1092263	Identifier	filter		1092176	0					
ANR	1092264	Identifier	cache		1092176	1					
ANR	1092265	PrimaryExpression	0xffff		1092176	1					
ANR	1092266	ExpressionStatement	filter -> status &= ~0x0f	147:2:3517:3540	1092176	8	True				
ANR	1092267	AssignmentExpression	filter -> status &= ~0x0f		1092176	0		&=			
ANR	1092268	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092269	Identifier	filter		1092176	0					
ANR	1092270	Identifier	status		1092176	1					
ANR	1092271	Identifier	~0x0f		1092176	1					
ANR	1092272	IfStatement	if ( n >= 0xd800 && n < 0xdc00 )		1092176	9					
ANR	1092273	Condition	n >= 0xd800 && n < 0xdc00	148:6:3548:3572	1092176	0	True				
ANR	1092274	AndExpression	n >= 0xd800 && n < 0xdc00		1092176	0		&&			
ANR	1092275	RelationalExpression	n >= 0xd800		1092176	0		>=			
ANR	1092276	Identifier	n		1092176	0					
ANR	1092277	PrimaryExpression	0xd800		1092176	1					
ANR	1092278	RelationalExpression	n < 0xdc00		1092176	1		<			
ANR	1092279	Identifier	n		1092176	0					
ANR	1092280	PrimaryExpression	0xdc00		1092176	1					
ANR	1092281	CompoundStatement		23:33:392:392	1092176	1					
ANR	1092282	ExpressionStatement	filter -> cache = ( ( n & 0x3ff ) << 16 ) + 0x400000	149:3:3580:3626	1092176	0	True				
ANR	1092283	AssignmentExpression	filter -> cache = ( ( n & 0x3ff ) << 16 ) + 0x400000		1092176	0		=			
ANR	1092284	PtrMemberAccess	filter -> cache		1092176	0					
ANR	1092285	Identifier	filter		1092176	0					
ANR	1092286	Identifier	cache		1092176	1					
ANR	1092287	AdditiveExpression	( ( n & 0x3ff ) << 16 ) + 0x400000		1092176	1		+			
ANR	1092288	ShiftExpression	( n & 0x3ff ) << 16		1092176	0		<<			
ANR	1092289	BitAndExpression	n & 0x3ff		1092176	0		&			
ANR	1092290	Identifier	n		1092176	0					
ANR	1092291	PrimaryExpression	0x3ff		1092176	1					
ANR	1092292	PrimaryExpression	16		1092176	1					
ANR	1092293	PrimaryExpression	0x400000		1092176	1					
ANR	1092294	ElseStatement	else		1092176	0					
ANR	1092295	IfStatement	if ( n >= 0xdc00 && n < 0xe000 )		1092176	0					
ANR	1092296	Condition	n >= 0xdc00 && n < 0xe000	150:13:3641:3665	1092176	0	True				
ANR	1092297	AndExpression	n >= 0xdc00 && n < 0xe000		1092176	0		&&			
ANR	1092298	RelationalExpression	n >= 0xdc00		1092176	0		>=			
ANR	1092299	Identifier	n		1092176	0					
ANR	1092300	PrimaryExpression	0xdc00		1092176	1					
ANR	1092301	RelationalExpression	n < 0xe000		1092176	1		<			
ANR	1092302	Identifier	n		1092176	0					
ANR	1092303	PrimaryExpression	0xe000		1092176	1					
ANR	1092304	CompoundStatement		25:40:485:485	1092176	1					
ANR	1092305	ExpressionStatement	n &= 0x3ff	151:3:3673:3683	1092176	0	True				
ANR	1092306	AssignmentExpression	n &= 0x3ff		1092176	0		&=			
ANR	1092307	Identifier	n		1092176	0					
ANR	1092308	PrimaryExpression	0x3ff		1092176	1					
ANR	1092309	ExpressionStatement	n |= ( filter -> cache & 0xfff0000 ) >> 6	152:3:3688:3725	1092176	1	True				
ANR	1092310	AssignmentExpression	n |= ( filter -> cache & 0xfff0000 ) >> 6		1092176	0		|=			
ANR	1092311	Identifier	n		1092176	0					
ANR	1092312	ShiftExpression	( filter -> cache & 0xfff0000 ) >> 6		1092176	1		>>			
ANR	1092313	BitAndExpression	filter -> cache & 0xfff0000		1092176	0		&			
ANR	1092314	PtrMemberAccess	filter -> cache		1092176	0					
ANR	1092315	Identifier	filter		1092176	0					
ANR	1092316	Identifier	cache		1092176	1					
ANR	1092317	PrimaryExpression	0xfff0000		1092176	1					
ANR	1092318	PrimaryExpression	6		1092176	1					
ANR	1092319	ExpressionStatement	filter -> cache = 0	153:3:3730:3747	1092176	2	True				
ANR	1092320	AssignmentExpression	filter -> cache = 0		1092176	0		=			
ANR	1092321	PtrMemberAccess	filter -> cache		1092176	0					
ANR	1092322	Identifier	filter		1092176	0					
ANR	1092323	Identifier	cache		1092176	1					
ANR	1092324	PrimaryExpression	0		1092176	1					
ANR	1092325	IfStatement	if ( n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX )		1092176	3					
ANR	1092326	Condition	n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX	154:7:3756:3808	1092176	0	True				
ANR	1092327	AndExpression	n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX		1092176	0		&&			
ANR	1092328	RelationalExpression	n >= MBFL_WCSPLANE_SUPMIN		1092176	0		>=			
ANR	1092329	Identifier	n		1092176	0					
ANR	1092330	Identifier	MBFL_WCSPLANE_SUPMIN		1092176	1					
ANR	1092331	RelationalExpression	n < MBFL_WCSPLANE_SUPMAX		1092176	1		<			
ANR	1092332	Identifier	n		1092176	0					
ANR	1092333	Identifier	MBFL_WCSPLANE_SUPMAX		1092176	1					
ANR	1092334	CompoundStatement		29:62:628:628	1092176	1					
ANR	1092335	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	155:4:3817:3864	1092176	0	True				
ANR	1092336	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092176	0					
ANR	1092337	Callee	CK		1092176	0					
ANR	1092338	Identifier	CK		1092176	0					
ANR	1092339	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092176	1					
ANR	1092340	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092176	0					
ANR	1092341	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092176	0					
ANR	1092342	Callee	* filter -> output_function		1092176	0					
ANR	1092343	UnaryOperationExpression	* filter -> output_function		1092176	0					
ANR	1092344	UnaryOperator	*		1092176	0					
ANR	1092345	PtrMemberAccess	filter -> output_function		1092176	1					
ANR	1092346	Identifier	filter		1092176	0					
ANR	1092347	Identifier	output_function		1092176	1					
ANR	1092348	ArgumentList	n		1092176	1					
ANR	1092349	Argument	n		1092176	0					
ANR	1092350	Identifier	n		1092176	0					
ANR	1092351	Argument	filter -> data		1092176	1					
ANR	1092352	PtrMemberAccess	filter -> data		1092176	0					
ANR	1092353	Identifier	filter		1092176	0					
ANR	1092354	Identifier	data		1092176	1					
ANR	1092355	ElseStatement	else		1092176	0					
ANR	1092356	CompoundStatement		31:10:693:693	1092176	0					
ANR	1092357	ExpressionStatement	n &= MBFL_WCSGROUP_MASK	157:4:3907:3930	1092176	0	True				
ANR	1092358	AssignmentExpression	n &= MBFL_WCSGROUP_MASK		1092176	0		&=			
ANR	1092359	Identifier	n		1092176	0					
ANR	1092360	Identifier	MBFL_WCSGROUP_MASK		1092176	1					
ANR	1092361	ExpressionStatement	n |= MBFL_WCSGROUP_THROUGH	158:4:3936:3962	1092176	1	True				
ANR	1092362	AssignmentExpression	n |= MBFL_WCSGROUP_THROUGH		1092176	0		|=			
ANR	1092363	Identifier	n		1092176	0					
ANR	1092364	Identifier	MBFL_WCSGROUP_THROUGH		1092176	1					
ANR	1092365	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	159:4:3968:4015	1092176	2	True				
ANR	1092366	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092176	0					
ANR	1092367	Callee	CK		1092176	0					
ANR	1092368	Identifier	CK		1092176	0					
ANR	1092369	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092176	1					
ANR	1092370	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092176	0					
ANR	1092371	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092176	0					
ANR	1092372	Callee	* filter -> output_function		1092176	0					
ANR	1092373	UnaryOperationExpression	* filter -> output_function		1092176	0					
ANR	1092374	UnaryOperator	*		1092176	0					
ANR	1092375	PtrMemberAccess	filter -> output_function		1092176	1					
ANR	1092376	Identifier	filter		1092176	0					
ANR	1092377	Identifier	output_function		1092176	1					
ANR	1092378	ArgumentList	n		1092176	1					
ANR	1092379	Argument	n		1092176	0					
ANR	1092380	Identifier	n		1092176	0					
ANR	1092381	Argument	filter -> data		1092176	1					
ANR	1092382	PtrMemberAccess	filter -> data		1092176	0					
ANR	1092383	Identifier	filter		1092176	0					
ANR	1092384	Identifier	data		1092176	1					
ANR	1092385	ElseStatement	else		1092176	0					
ANR	1092386	CompoundStatement		37:3:853:889	1092176	0					
ANR	1092387	IdentifierDeclStatement	int is_first = filter -> status & 0x10 ;	162:3:4036:4072	1092176	0	True				
ANR	1092388	IdentifierDecl	is_first = filter -> status & 0x10		1092176	0					
ANR	1092389	IdentifierDeclType	int		1092176	0					
ANR	1092390	Identifier	is_first		1092176	1					
ANR	1092391	AssignmentExpression	is_first = filter -> status & 0x10		1092176	2		=			
ANR	1092392	Identifier	is_first		1092176	0					
ANR	1092393	BitAndExpression	filter -> status & 0x10		1092176	1		&			
ANR	1092394	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092395	Identifier	filter		1092176	0					
ANR	1092396	Identifier	status		1092176	1					
ANR	1092397	PrimaryExpression	0x10		1092176	1					
ANR	1092398	ExpressionStatement	filter -> cache = 0	163:3:4077:4094	1092176	1	True				
ANR	1092399	AssignmentExpression	filter -> cache = 0		1092176	0		=			
ANR	1092400	PtrMemberAccess	filter -> cache		1092176	0					
ANR	1092401	Identifier	filter		1092176	0					
ANR	1092402	Identifier	cache		1092176	1					
ANR	1092403	PrimaryExpression	0		1092176	1					
ANR	1092404	ExpressionStatement	filter -> status |= 0x10	164:3:4099:4121	1092176	2	True				
ANR	1092405	AssignmentExpression	filter -> status |= 0x10		1092176	0		|=			
ANR	1092406	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092407	Identifier	filter		1092176	0					
ANR	1092408	Identifier	status		1092176	1					
ANR	1092409	PrimaryExpression	0x10		1092176	1					
ANR	1092410	IfStatement	if ( ! is_first )		1092176	3					
ANR	1092411	Condition	! is_first	165:7:4130:4138	1092176	0	True				
ANR	1092412	UnaryOperationExpression	! is_first		1092176	0					
ANR	1092413	UnaryOperator	!		1092176	0					
ANR	1092414	Identifier	is_first		1092176	1					
ANR	1092415	CompoundStatement		40:18:958:958	1092176	1					
ANR	1092416	IfStatement	if ( n == 0xfffe )		1092176	0					
ANR	1092417	Condition	n == 0xfffe	166:8:4151:4161	1092176	0	True				
ANR	1092418	EqualityExpression	n == 0xfffe		1092176	0		==			
ANR	1092419	Identifier	n		1092176	0					
ANR	1092420	PrimaryExpression	0xfffe		1092176	1					
ANR	1092421	CompoundStatement		41:21:981:981	1092176	1					
ANR	1092422	IfStatement	if ( endian )		1092176	0					
ANR	1092423	Condition	endian	167:9:4175:4180	1092176	0	True				
ANR	1092424	Identifier	endian		1092176	0					
ANR	1092425	CompoundStatement		42:17:1000:1000	1092176	1					
ANR	1092426	ExpressionStatement	filter -> status &= ~0x100	168:6:4191:4215	1092176	0	True				
ANR	1092427	AssignmentExpression	filter -> status &= ~0x100		1092176	0		&=			
ANR	1092428	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092429	Identifier	filter		1092176	0					
ANR	1092430	Identifier	status		1092176	1					
ANR	1092431	Identifier	~0x100		1092176	1					
ANR	1092432	ElseStatement	else		1092176	0					
ANR	1092433	CompoundStatement		44:12:1064:1064	1092176	0					
ANR	1092434	ExpressionStatement	filter -> status |= 0x100	170:6:4255:4278	1092176	0	True				
ANR	1092435	AssignmentExpression	filter -> status |= 0x100		1092176	0		|=			
ANR	1092436	PtrMemberAccess	filter -> status		1092176	0					
ANR	1092437	Identifier	filter		1092176	0					
ANR	1092438	Identifier	status		1092176	1					
ANR	1092439	PrimaryExpression	0x100		1092176	1					
ANR	1092440	BreakStatement	break ;	172:5:4313:4318	1092176	1	True				
ANR	1092441	ElseStatement	else		1092176	0					
ANR	1092442	IfStatement	if ( n == 0xfeff )		1092176	0					
ANR	1092443	Condition	n == 0xfeff	173:15:4335:4345	1092176	0	True				
ANR	1092444	EqualityExpression	n == 0xfeff		1092176	0		==			
ANR	1092445	Identifier	n		1092176	0					
ANR	1092446	PrimaryExpression	0xfeff		1092176	1					
ANR	1092447	CompoundStatement		48:28:1165:1165	1092176	1					
ANR	1092448	BreakStatement	break ;	174:5:4355:4360	1092176	0	True				
ANR	1092449	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	177:3:4376:4423	1092176	4	True				
ANR	1092450	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092176	0					
ANR	1092451	Callee	CK		1092176	0					
ANR	1092452	Identifier	CK		1092176	0					
ANR	1092453	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092176	1					
ANR	1092454	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092176	0					
ANR	1092455	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092176	0					
ANR	1092456	Callee	* filter -> output_function		1092176	0					
ANR	1092457	UnaryOperationExpression	* filter -> output_function		1092176	0					
ANR	1092458	UnaryOperator	*		1092176	0					
ANR	1092459	PtrMemberAccess	filter -> output_function		1092176	1					
ANR	1092460	Identifier	filter		1092176	0					
ANR	1092461	Identifier	output_function		1092176	1					
ANR	1092462	ArgumentList	n		1092176	1					
ANR	1092463	Argument	n		1092176	0					
ANR	1092464	Identifier	n		1092176	0					
ANR	1092465	Argument	filter -> data		1092176	1					
ANR	1092466	PtrMemberAccess	filter -> data		1092176	0					
ANR	1092467	Identifier	filter		1092176	0					
ANR	1092468	Identifier	data		1092176	1					
ANR	1092469	BreakStatement	break ;	179:2:4431:4436	1092176	10	True				
ANR	1092470	ReturnStatement	return c ;	182:1:4443:4451	1092176	3	True				
ANR	1092471	Identifier	c		1092176	0					
ANR	1092472	ReturnType	int		1092176	1					
ANR	1092473	Identifier	mbfl_filt_conv_utf16_wchar		1092176	2					
ANR	1092474	ParameterList	"int c , mbfl_convert_filter * filter"		1092176	3					
ANR	1092475	Parameter	int c	125:31:3146:3150	1092176	0	True				
ANR	1092476	ParameterType	int		1092176	0					
ANR	1092477	Identifier	c		1092176	1					
ANR	1092478	Parameter	mbfl_convert_filter * filter	125:38:3153:3179	1092176	1	True				
ANR	1092479	ParameterType	mbfl_convert_filter *		1092176	0					
ANR	1092480	Identifier	filter		1092176	1					
ANR	1092481	CFGEntryNode	ENTRY		1092176		True				
ANR	1092482	CFGExitNode	EXIT		1092176		True				
ANR	1092483	Symbol	filter -> cache		1092176						
ANR	1092484	Symbol	c		1092176						
ANR	1092485	Symbol	is_first		1092176						
ANR	1092486	Symbol	MBFL_WCSGROUP_MASK		1092176						
ANR	1092487	Symbol	MBFL_WCSGROUP_THROUGH		1092176						
ANR	1092488	Symbol	* filter -> output_function		1092176						
ANR	1092489	Symbol	endian		1092176						
ANR	1092490	Symbol	n		1092176						
ANR	1092491	Symbol	MBFL_WCSPLANE_SUPMIN		1092176						
ANR	1092492	Symbol	* filter		1092176						
ANR	1092493	Symbol	filter -> data		1092176						
ANR	1092494	Symbol	filter		1092176						
ANR	1092495	Symbol	filter -> output_function		1092176						
ANR	1092496	Symbol	~0x100		1092176						
ANR	1092497	Symbol	filter -> status		1092176						
ANR	1092498	Symbol	MBFL_WCSPLANE_SUPMAX		1092176						
ANR	1092499	Symbol	~0x0f		1092176						
ANR	1092500	Symbol	* * filter		1092176						
ANR	1092501	Function	mbfl_filt_conv_utf16be_wchar	188:0:4484:5346							
ANR	1092502	FunctionDef	"mbfl_filt_conv_utf16be_wchar (int c , mbfl_convert_filter * filter)"		1092501	0					
ANR	1092503	CompoundStatement		189:0:4553:5346	1092501	0					
ANR	1092504	IdentifierDeclStatement	int n ;	190:1:4556:4561	1092501	0	True				
ANR	1092505	IdentifierDecl	n		1092501	0					
ANR	1092506	IdentifierDeclType	int		1092501	0					
ANR	1092507	Identifier	n		1092501	1					
ANR	1092508	SwitchStatement	switch ( filter -> status )		1092501	1					
ANR	1092509	Condition	filter -> status	192:9:4573:4586	1092501	0	True				
ANR	1092510	PtrMemberAccess	filter -> status		1092501	0					
ANR	1092511	Identifier	filter		1092501	0					
ANR	1092512	Identifier	status		1092501	1					
ANR	1092513	CompoundStatement		4:25:35:35	1092501	1					
ANR	1092514	Label	case 0 :	193:1:4592:4598	1092501	0	True				
ANR	1092515	ExpressionStatement	filter -> status = 1	194:2:4602:4620	1092501	1	True				
ANR	1092516	AssignmentExpression	filter -> status = 1		1092501	0		=			
ANR	1092517	PtrMemberAccess	filter -> status		1092501	0					
ANR	1092518	Identifier	filter		1092501	0					
ANR	1092519	Identifier	status		1092501	1					
ANR	1092520	PrimaryExpression	1		1092501	1					
ANR	1092521	ExpressionStatement	n = ( c & 0xff ) << 8	195:2:4624:4643	1092501	2	True				
ANR	1092522	AssignmentExpression	n = ( c & 0xff ) << 8		1092501	0		=			
ANR	1092523	Identifier	n		1092501	0					
ANR	1092524	ShiftExpression	( c & 0xff ) << 8		1092501	1		<<			
ANR	1092525	BitAndExpression	c & 0xff		1092501	0		&			
ANR	1092526	Identifier	c		1092501	0					
ANR	1092527	PrimaryExpression	0xff		1092501	1					
ANR	1092528	PrimaryExpression	8		1092501	1					
ANR	1092529	ExpressionStatement	filter -> cache |= n	196:2:4647:4665	1092501	3	True				
ANR	1092530	AssignmentExpression	filter -> cache |= n		1092501	0		|=			
ANR	1092531	PtrMemberAccess	filter -> cache		1092501	0					
ANR	1092532	Identifier	filter		1092501	0					
ANR	1092533	Identifier	cache		1092501	1					
ANR	1092534	Identifier	n		1092501	1					
ANR	1092535	BreakStatement	break ;	197:2:4669:4674	1092501	4	True				
ANR	1092536	Label	default :	198:1:4677:4684	1092501	5	True				
ANR	1092537	Identifier	default		1092501	0					
ANR	1092538	ExpressionStatement	filter -> status = 0	199:2:4688:4706	1092501	6	True				
ANR	1092539	AssignmentExpression	filter -> status = 0		1092501	0		=			
ANR	1092540	PtrMemberAccess	filter -> status		1092501	0					
ANR	1092541	Identifier	filter		1092501	0					
ANR	1092542	Identifier	status		1092501	1					
ANR	1092543	PrimaryExpression	0		1092501	1					
ANR	1092544	ExpressionStatement	n = ( filter -> cache & 0xff00 ) | ( c & 0xff )	200:2:4710:4751	1092501	7	True				
ANR	1092545	AssignmentExpression	n = ( filter -> cache & 0xff00 ) | ( c & 0xff )		1092501	0		=			
ANR	1092546	Identifier	n		1092501	0					
ANR	1092547	InclusiveOrExpression	( filter -> cache & 0xff00 ) | ( c & 0xff )		1092501	1		|			
ANR	1092548	BitAndExpression	filter -> cache & 0xff00		1092501	0		&			
ANR	1092549	PtrMemberAccess	filter -> cache		1092501	0					
ANR	1092550	Identifier	filter		1092501	0					
ANR	1092551	Identifier	cache		1092501	1					
ANR	1092552	PrimaryExpression	0xff00		1092501	1					
ANR	1092553	BitAndExpression	c & 0xff		1092501	1		&			
ANR	1092554	Identifier	c		1092501	0					
ANR	1092555	PrimaryExpression	0xff		1092501	1					
ANR	1092556	IfStatement	if ( n >= 0xd800 && n < 0xdc00 )		1092501	8					
ANR	1092557	Condition	n >= 0xd800 && n < 0xdc00	201:6:4759:4783	1092501	0	True				
ANR	1092558	AndExpression	n >= 0xd800 && n < 0xdc00		1092501	0		&&			
ANR	1092559	RelationalExpression	n >= 0xd800		1092501	0		>=			
ANR	1092560	Identifier	n		1092501	0					
ANR	1092561	PrimaryExpression	0xd800		1092501	1					
ANR	1092562	RelationalExpression	n < 0xdc00		1092501	1		<			
ANR	1092563	Identifier	n		1092501	0					
ANR	1092564	PrimaryExpression	0xdc00		1092501	1					
ANR	1092565	CompoundStatement		13:33:232:232	1092501	1					
ANR	1092566	ExpressionStatement	filter -> cache = ( ( n & 0x3ff ) << 16 ) + 0x400000	202:3:4791:4837	1092501	0	True				
ANR	1092567	AssignmentExpression	filter -> cache = ( ( n & 0x3ff ) << 16 ) + 0x400000		1092501	0		=			
ANR	1092568	PtrMemberAccess	filter -> cache		1092501	0					
ANR	1092569	Identifier	filter		1092501	0					
ANR	1092570	Identifier	cache		1092501	1					
ANR	1092571	AdditiveExpression	( ( n & 0x3ff ) << 16 ) + 0x400000		1092501	1		+			
ANR	1092572	ShiftExpression	( n & 0x3ff ) << 16		1092501	0		<<			
ANR	1092573	BitAndExpression	n & 0x3ff		1092501	0		&			
ANR	1092574	Identifier	n		1092501	0					
ANR	1092575	PrimaryExpression	0x3ff		1092501	1					
ANR	1092576	PrimaryExpression	16		1092501	1					
ANR	1092577	PrimaryExpression	0x400000		1092501	1					
ANR	1092578	ElseStatement	else		1092501	0					
ANR	1092579	IfStatement	if ( n >= 0xdc00 && n < 0xe000 )		1092501	0					
ANR	1092580	Condition	n >= 0xdc00 && n < 0xe000	203:13:4852:4876	1092501	0	True				
ANR	1092581	AndExpression	n >= 0xdc00 && n < 0xe000		1092501	0		&&			
ANR	1092582	RelationalExpression	n >= 0xdc00		1092501	0		>=			
ANR	1092583	Identifier	n		1092501	0					
ANR	1092584	PrimaryExpression	0xdc00		1092501	1					
ANR	1092585	RelationalExpression	n < 0xe000		1092501	1		<			
ANR	1092586	Identifier	n		1092501	0					
ANR	1092587	PrimaryExpression	0xe000		1092501	1					
ANR	1092588	CompoundStatement		15:40:325:325	1092501	1					
ANR	1092589	ExpressionStatement	n &= 0x3ff	204:3:4884:4894	1092501	0	True				
ANR	1092590	AssignmentExpression	n &= 0x3ff		1092501	0		&=			
ANR	1092591	Identifier	n		1092501	0					
ANR	1092592	PrimaryExpression	0x3ff		1092501	1					
ANR	1092593	ExpressionStatement	n |= ( filter -> cache & 0xfff0000 ) >> 6	205:3:4899:4936	1092501	1	True				
ANR	1092594	AssignmentExpression	n |= ( filter -> cache & 0xfff0000 ) >> 6		1092501	0		|=			
ANR	1092595	Identifier	n		1092501	0					
ANR	1092596	ShiftExpression	( filter -> cache & 0xfff0000 ) >> 6		1092501	1		>>			
ANR	1092597	BitAndExpression	filter -> cache & 0xfff0000		1092501	0		&			
ANR	1092598	PtrMemberAccess	filter -> cache		1092501	0					
ANR	1092599	Identifier	filter		1092501	0					
ANR	1092600	Identifier	cache		1092501	1					
ANR	1092601	PrimaryExpression	0xfff0000		1092501	1					
ANR	1092602	PrimaryExpression	6		1092501	1					
ANR	1092603	ExpressionStatement	filter -> cache = 0	206:3:4941:4958	1092501	2	True				
ANR	1092604	AssignmentExpression	filter -> cache = 0		1092501	0		=			
ANR	1092605	PtrMemberAccess	filter -> cache		1092501	0					
ANR	1092606	Identifier	filter		1092501	0					
ANR	1092607	Identifier	cache		1092501	1					
ANR	1092608	PrimaryExpression	0		1092501	1					
ANR	1092609	IfStatement	if ( n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX )		1092501	3					
ANR	1092610	Condition	n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX	207:7:4967:5019	1092501	0	True				
ANR	1092611	AndExpression	n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX		1092501	0		&&			
ANR	1092612	RelationalExpression	n >= MBFL_WCSPLANE_SUPMIN		1092501	0		>=			
ANR	1092613	Identifier	n		1092501	0					
ANR	1092614	Identifier	MBFL_WCSPLANE_SUPMIN		1092501	1					
ANR	1092615	RelationalExpression	n < MBFL_WCSPLANE_SUPMAX		1092501	1		<			
ANR	1092616	Identifier	n		1092501	0					
ANR	1092617	Identifier	MBFL_WCSPLANE_SUPMAX		1092501	1					
ANR	1092618	CompoundStatement		19:62:468:468	1092501	1					
ANR	1092619	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	208:4:5028:5075	1092501	0	True				
ANR	1092620	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092501	0					
ANR	1092621	Callee	CK		1092501	0					
ANR	1092622	Identifier	CK		1092501	0					
ANR	1092623	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092501	1					
ANR	1092624	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092501	0					
ANR	1092625	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092501	0					
ANR	1092626	Callee	* filter -> output_function		1092501	0					
ANR	1092627	UnaryOperationExpression	* filter -> output_function		1092501	0					
ANR	1092628	UnaryOperator	*		1092501	0					
ANR	1092629	PtrMemberAccess	filter -> output_function		1092501	1					
ANR	1092630	Identifier	filter		1092501	0					
ANR	1092631	Identifier	output_function		1092501	1					
ANR	1092632	ArgumentList	n		1092501	1					
ANR	1092633	Argument	n		1092501	0					
ANR	1092634	Identifier	n		1092501	0					
ANR	1092635	Argument	filter -> data		1092501	1					
ANR	1092636	PtrMemberAccess	filter -> data		1092501	0					
ANR	1092637	Identifier	filter		1092501	0					
ANR	1092638	Identifier	data		1092501	1					
ANR	1092639	ElseStatement	else		1092501	0					
ANR	1092640	CompoundStatement		21:10:533:533	1092501	0					
ANR	1092641	ExpressionStatement	n &= MBFL_WCSGROUP_MASK	210:4:5118:5141	1092501	0	True				
ANR	1092642	AssignmentExpression	n &= MBFL_WCSGROUP_MASK		1092501	0		&=			
ANR	1092643	Identifier	n		1092501	0					
ANR	1092644	Identifier	MBFL_WCSGROUP_MASK		1092501	1					
ANR	1092645	ExpressionStatement	n |= MBFL_WCSGROUP_THROUGH	211:4:5147:5173	1092501	1	True				
ANR	1092646	AssignmentExpression	n |= MBFL_WCSGROUP_THROUGH		1092501	0		|=			
ANR	1092647	Identifier	n		1092501	0					
ANR	1092648	Identifier	MBFL_WCSGROUP_THROUGH		1092501	1					
ANR	1092649	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	212:4:5179:5226	1092501	2	True				
ANR	1092650	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092501	0					
ANR	1092651	Callee	CK		1092501	0					
ANR	1092652	Identifier	CK		1092501	0					
ANR	1092653	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092501	1					
ANR	1092654	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092501	0					
ANR	1092655	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092501	0					
ANR	1092656	Callee	* filter -> output_function		1092501	0					
ANR	1092657	UnaryOperationExpression	* filter -> output_function		1092501	0					
ANR	1092658	UnaryOperator	*		1092501	0					
ANR	1092659	PtrMemberAccess	filter -> output_function		1092501	1					
ANR	1092660	Identifier	filter		1092501	0					
ANR	1092661	Identifier	output_function		1092501	1					
ANR	1092662	ArgumentList	n		1092501	1					
ANR	1092663	Argument	n		1092501	0					
ANR	1092664	Identifier	n		1092501	0					
ANR	1092665	Argument	filter -> data		1092501	1					
ANR	1092666	PtrMemberAccess	filter -> data		1092501	0					
ANR	1092667	Identifier	filter		1092501	0					
ANR	1092668	Identifier	data		1092501	1					
ANR	1092669	ElseStatement	else		1092501	0					
ANR	1092670	CompoundStatement		26:9:688:688	1092501	0					
ANR	1092671	ExpressionStatement	filter -> cache = 0	215:3:5247:5264	1092501	0	True				
ANR	1092672	AssignmentExpression	filter -> cache = 0		1092501	0		=			
ANR	1092673	PtrMemberAccess	filter -> cache		1092501	0					
ANR	1092674	Identifier	filter		1092501	0					
ANR	1092675	Identifier	cache		1092501	1					
ANR	1092676	PrimaryExpression	0		1092501	1					
ANR	1092677	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	216:3:5269:5316	1092501	1	True				
ANR	1092678	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092501	0					
ANR	1092679	Callee	CK		1092501	0					
ANR	1092680	Identifier	CK		1092501	0					
ANR	1092681	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092501	1					
ANR	1092682	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092501	0					
ANR	1092683	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092501	0					
ANR	1092684	Callee	* filter -> output_function		1092501	0					
ANR	1092685	UnaryOperationExpression	* filter -> output_function		1092501	0					
ANR	1092686	UnaryOperator	*		1092501	0					
ANR	1092687	PtrMemberAccess	filter -> output_function		1092501	1					
ANR	1092688	Identifier	filter		1092501	0					
ANR	1092689	Identifier	output_function		1092501	1					
ANR	1092690	ArgumentList	n		1092501	1					
ANR	1092691	Argument	n		1092501	0					
ANR	1092692	Identifier	n		1092501	0					
ANR	1092693	Argument	filter -> data		1092501	1					
ANR	1092694	PtrMemberAccess	filter -> data		1092501	0					
ANR	1092695	Identifier	filter		1092501	0					
ANR	1092696	Identifier	data		1092501	1					
ANR	1092697	BreakStatement	break ;	218:2:5324:5329	1092501	9	True				
ANR	1092698	ReturnStatement	return c ;	221:1:5336:5344	1092501	2	True				
ANR	1092699	Identifier	c		1092501	0					
ANR	1092700	ReturnType	int		1092501	1					
ANR	1092701	Identifier	mbfl_filt_conv_utf16be_wchar		1092501	2					
ANR	1092702	ParameterList	"int c , mbfl_convert_filter * filter"		1092501	3					
ANR	1092703	Parameter	int c	188:33:4517:4521	1092501	0	True				
ANR	1092704	ParameterType	int		1092501	0					
ANR	1092705	Identifier	c		1092501	1					
ANR	1092706	Parameter	mbfl_convert_filter * filter	188:40:4524:4550	1092501	1	True				
ANR	1092707	ParameterType	mbfl_convert_filter *		1092501	0					
ANR	1092708	Identifier	filter		1092501	1					
ANR	1092709	CFGEntryNode	ENTRY		1092501		True				
ANR	1092710	CFGExitNode	EXIT		1092501		True				
ANR	1092711	Symbol	filter -> cache		1092501						
ANR	1092712	Symbol	c		1092501						
ANR	1092713	Symbol	MBFL_WCSGROUP_MASK		1092501						
ANR	1092714	Symbol	MBFL_WCSGROUP_THROUGH		1092501						
ANR	1092715	Symbol	* filter -> output_function		1092501						
ANR	1092716	Symbol	n		1092501						
ANR	1092717	Symbol	MBFL_WCSPLANE_SUPMIN		1092501						
ANR	1092718	Symbol	* filter		1092501						
ANR	1092719	Symbol	filter -> data		1092501						
ANR	1092720	Symbol	filter		1092501						
ANR	1092721	Symbol	filter -> output_function		1092501						
ANR	1092722	Symbol	filter -> status		1092501						
ANR	1092723	Symbol	MBFL_WCSPLANE_SUPMAX		1092501						
ANR	1092724	Symbol	* * filter		1092501						
ANR	1092725	Function	mbfl_filt_conv_wchar_utf16be	227:0:5377:6149							
ANR	1092726	FunctionDef	"mbfl_filt_conv_wchar_utf16be (int c , mbfl_convert_filter * filter)"		1092725	0					
ANR	1092727	CompoundStatement		228:0:5446:6149	1092725	0					
ANR	1092728	IdentifierDeclStatement	int n ;	229:1:5449:5454	1092725	0	True				
ANR	1092729	IdentifierDecl	n		1092725	0					
ANR	1092730	IdentifierDeclType	int		1092725	0					
ANR	1092731	Identifier	n		1092725	1					
ANR	1092732	IfStatement	if ( c >= 0 && c < MBFL_WCSPLANE_UCS2MAX )		1092725	1					
ANR	1092733	Condition	c >= 0 && c < MBFL_WCSPLANE_UCS2MAX	231:5:5462:5496	1092725	0	True				
ANR	1092734	AndExpression	c >= 0 && c < MBFL_WCSPLANE_UCS2MAX		1092725	0		&&			
ANR	1092735	RelationalExpression	c >= 0		1092725	0		>=			
ANR	1092736	Identifier	c		1092725	0					
ANR	1092737	PrimaryExpression	0		1092725	1					
ANR	1092738	RelationalExpression	c < MBFL_WCSPLANE_UCS2MAX		1092725	1		<			
ANR	1092739	Identifier	c		1092725	0					
ANR	1092740	Identifier	MBFL_WCSPLANE_UCS2MAX		1092725	1					
ANR	1092741	CompoundStatement		4:42:52:52	1092725	1					
ANR	1092742	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	232:2:5503:5564	1092725	0	True				
ANR	1092743	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		1092725	0					
ANR	1092744	Callee	CK		1092725	0					
ANR	1092745	Identifier	CK		1092725	0					
ANR	1092746	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1092725	1					
ANR	1092747	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1092725	0					
ANR	1092748	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1092725	0					
ANR	1092749	Callee	* filter -> output_function		1092725	0					
ANR	1092750	UnaryOperationExpression	* filter -> output_function		1092725	0					
ANR	1092751	UnaryOperator	*		1092725	0					
ANR	1092752	PtrMemberAccess	filter -> output_function		1092725	1					
ANR	1092753	Identifier	filter		1092725	0					
ANR	1092754	Identifier	output_function		1092725	1					
ANR	1092755	ArgumentList	( c >> 8 ) & 0xff		1092725	1					
ANR	1092756	Argument	( c >> 8 ) & 0xff		1092725	0					
ANR	1092757	BitAndExpression	( c >> 8 ) & 0xff		1092725	0		&			
ANR	1092758	ShiftExpression	c >> 8		1092725	0		>>			
ANR	1092759	Identifier	c		1092725	0					
ANR	1092760	PrimaryExpression	8		1092725	1					
ANR	1092761	PrimaryExpression	0xff		1092725	1					
ANR	1092762	Argument	filter -> data		1092725	1					
ANR	1092763	PtrMemberAccess	filter -> data		1092725	0					
ANR	1092764	Identifier	filter		1092725	0					
ANR	1092765	Identifier	data		1092725	1					
ANR	1092766	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	233:2:5568:5622	1092725	1	True				
ANR	1092767	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		1092725	0					
ANR	1092768	Callee	CK		1092725	0					
ANR	1092769	Identifier	CK		1092725	0					
ANR	1092770	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1092725	1					
ANR	1092771	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1092725	0					
ANR	1092772	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1092725	0					
ANR	1092773	Callee	* filter -> output_function		1092725	0					
ANR	1092774	UnaryOperationExpression	* filter -> output_function		1092725	0					
ANR	1092775	UnaryOperator	*		1092725	0					
ANR	1092776	PtrMemberAccess	filter -> output_function		1092725	1					
ANR	1092777	Identifier	filter		1092725	0					
ANR	1092778	Identifier	output_function		1092725	1					
ANR	1092779	ArgumentList	c & 0xff		1092725	1					
ANR	1092780	Argument	c & 0xff		1092725	0					
ANR	1092781	BitAndExpression	c & 0xff		1092725	0		&			
ANR	1092782	Identifier	c		1092725	0					
ANR	1092783	PrimaryExpression	0xff		1092725	1					
ANR	1092784	Argument	filter -> data		1092725	1					
ANR	1092785	PtrMemberAccess	filter -> data		1092725	0					
ANR	1092786	Identifier	filter		1092725	0					
ANR	1092787	Identifier	data		1092725	1					
ANR	1092788	ElseStatement	else		1092725	0					
ANR	1092789	IfStatement	if ( c >= MBFL_WCSPLANE_SUPMIN && c < MBFL_WCSPLANE_SUPMAX )		1092725	0					
ANR	1092790	Condition	c >= MBFL_WCSPLANE_SUPMIN && c < MBFL_WCSPLANE_SUPMAX	234:12:5636:5688	1092725	0	True				
ANR	1092791	AndExpression	c >= MBFL_WCSPLANE_SUPMIN && c < MBFL_WCSPLANE_SUPMAX		1092725	0		&&			
ANR	1092792	RelationalExpression	c >= MBFL_WCSPLANE_SUPMIN		1092725	0		>=			
ANR	1092793	Identifier	c		1092725	0					
ANR	1092794	Identifier	MBFL_WCSPLANE_SUPMIN		1092725	1					
ANR	1092795	RelationalExpression	c < MBFL_WCSPLANE_SUPMAX		1092725	1		<			
ANR	1092796	Identifier	c		1092725	0					
ANR	1092797	Identifier	MBFL_WCSPLANE_SUPMAX		1092725	1					
ANR	1092798	CompoundStatement		7:67:244:244	1092725	1					
ANR	1092799	ExpressionStatement	n = ( ( c >> 10 ) - 0x40 ) | 0xd800	235:2:5695:5726	1092725	0	True				
ANR	1092800	AssignmentExpression	n = ( ( c >> 10 ) - 0x40 ) | 0xd800		1092725	0		=			
ANR	1092801	Identifier	n		1092725	0					
ANR	1092802	InclusiveOrExpression	( ( c >> 10 ) - 0x40 ) | 0xd800		1092725	1		|			
ANR	1092803	AdditiveExpression	( c >> 10 ) - 0x40		1092725	0		-			
ANR	1092804	ShiftExpression	c >> 10		1092725	0		>>			
ANR	1092805	Identifier	c		1092725	0					
ANR	1092806	PrimaryExpression	10		1092725	1					
ANR	1092807	PrimaryExpression	0x40		1092725	1					
ANR	1092808	PrimaryExpression	0xd800		1092725	1					
ANR	1092809	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"	236:2:5730:5791	1092725	1	True				
ANR	1092810	CallExpression	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"		1092725	0					
ANR	1092811	Callee	CK		1092725	0					
ANR	1092812	Identifier	CK		1092725	0					
ANR	1092813	ArgumentList	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1092725	1					
ANR	1092814	Argument	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1092725	0					
ANR	1092815	CallExpression	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1092725	0					
ANR	1092816	Callee	* filter -> output_function		1092725	0					
ANR	1092817	UnaryOperationExpression	* filter -> output_function		1092725	0					
ANR	1092818	UnaryOperator	*		1092725	0					
ANR	1092819	PtrMemberAccess	filter -> output_function		1092725	1					
ANR	1092820	Identifier	filter		1092725	0					
ANR	1092821	Identifier	output_function		1092725	1					
ANR	1092822	ArgumentList	( n >> 8 ) & 0xff		1092725	1					
ANR	1092823	Argument	( n >> 8 ) & 0xff		1092725	0					
ANR	1092824	BitAndExpression	( n >> 8 ) & 0xff		1092725	0		&			
ANR	1092825	ShiftExpression	n >> 8		1092725	0		>>			
ANR	1092826	Identifier	n		1092725	0					
ANR	1092827	PrimaryExpression	8		1092725	1					
ANR	1092828	PrimaryExpression	0xff		1092725	1					
ANR	1092829	Argument	filter -> data		1092725	1					
ANR	1092830	PtrMemberAccess	filter -> data		1092725	0					
ANR	1092831	Identifier	filter		1092725	0					
ANR	1092832	Identifier	data		1092725	1					
ANR	1092833	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"	237:2:5795:5849	1092725	2	True				
ANR	1092834	CallExpression	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"		1092725	0					
ANR	1092835	Callee	CK		1092725	0					
ANR	1092836	Identifier	CK		1092725	0					
ANR	1092837	ArgumentList	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1092725	1					
ANR	1092838	Argument	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1092725	0					
ANR	1092839	CallExpression	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1092725	0					
ANR	1092840	Callee	* filter -> output_function		1092725	0					
ANR	1092841	UnaryOperationExpression	* filter -> output_function		1092725	0					
ANR	1092842	UnaryOperator	*		1092725	0					
ANR	1092843	PtrMemberAccess	filter -> output_function		1092725	1					
ANR	1092844	Identifier	filter		1092725	0					
ANR	1092845	Identifier	output_function		1092725	1					
ANR	1092846	ArgumentList	n & 0xff		1092725	1					
ANR	1092847	Argument	n & 0xff		1092725	0					
ANR	1092848	BitAndExpression	n & 0xff		1092725	0		&			
ANR	1092849	Identifier	n		1092725	0					
ANR	1092850	PrimaryExpression	0xff		1092725	1					
ANR	1092851	Argument	filter -> data		1092725	1					
ANR	1092852	PtrMemberAccess	filter -> data		1092725	0					
ANR	1092853	Identifier	filter		1092725	0					
ANR	1092854	Identifier	data		1092725	1					
ANR	1092855	ExpressionStatement	n = ( c & 0x3ff ) | 0xdc00	238:2:5853:5877	1092725	3	True				
ANR	1092856	AssignmentExpression	n = ( c & 0x3ff ) | 0xdc00		1092725	0		=			
ANR	1092857	Identifier	n		1092725	0					
ANR	1092858	InclusiveOrExpression	( c & 0x3ff ) | 0xdc00		1092725	1		|			
ANR	1092859	BitAndExpression	c & 0x3ff		1092725	0		&			
ANR	1092860	Identifier	c		1092725	0					
ANR	1092861	PrimaryExpression	0x3ff		1092725	1					
ANR	1092862	PrimaryExpression	0xdc00		1092725	1					
ANR	1092863	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"	239:2:5881:5942	1092725	4	True				
ANR	1092864	CallExpression	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"		1092725	0					
ANR	1092865	Callee	CK		1092725	0					
ANR	1092866	Identifier	CK		1092725	0					
ANR	1092867	ArgumentList	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1092725	1					
ANR	1092868	Argument	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1092725	0					
ANR	1092869	CallExpression	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1092725	0					
ANR	1092870	Callee	* filter -> output_function		1092725	0					
ANR	1092871	UnaryOperationExpression	* filter -> output_function		1092725	0					
ANR	1092872	UnaryOperator	*		1092725	0					
ANR	1092873	PtrMemberAccess	filter -> output_function		1092725	1					
ANR	1092874	Identifier	filter		1092725	0					
ANR	1092875	Identifier	output_function		1092725	1					
ANR	1092876	ArgumentList	( n >> 8 ) & 0xff		1092725	1					
ANR	1092877	Argument	( n >> 8 ) & 0xff		1092725	0					
ANR	1092878	BitAndExpression	( n >> 8 ) & 0xff		1092725	0		&			
ANR	1092879	ShiftExpression	n >> 8		1092725	0		>>			
ANR	1092880	Identifier	n		1092725	0					
ANR	1092881	PrimaryExpression	8		1092725	1					
ANR	1092882	PrimaryExpression	0xff		1092725	1					
ANR	1092883	Argument	filter -> data		1092725	1					
ANR	1092884	PtrMemberAccess	filter -> data		1092725	0					
ANR	1092885	Identifier	filter		1092725	0					
ANR	1092886	Identifier	data		1092725	1					
ANR	1092887	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"	240:2:5946:6000	1092725	5	True				
ANR	1092888	CallExpression	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"		1092725	0					
ANR	1092889	Callee	CK		1092725	0					
ANR	1092890	Identifier	CK		1092725	0					
ANR	1092891	ArgumentList	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1092725	1					
ANR	1092892	Argument	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1092725	0					
ANR	1092893	CallExpression	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1092725	0					
ANR	1092894	Callee	* filter -> output_function		1092725	0					
ANR	1092895	UnaryOperationExpression	* filter -> output_function		1092725	0					
ANR	1092896	UnaryOperator	*		1092725	0					
ANR	1092897	PtrMemberAccess	filter -> output_function		1092725	1					
ANR	1092898	Identifier	filter		1092725	0					
ANR	1092899	Identifier	output_function		1092725	1					
ANR	1092900	ArgumentList	n & 0xff		1092725	1					
ANR	1092901	Argument	n & 0xff		1092725	0					
ANR	1092902	BitAndExpression	n & 0xff		1092725	0		&			
ANR	1092903	Identifier	n		1092725	0					
ANR	1092904	PrimaryExpression	0xff		1092725	1					
ANR	1092905	Argument	filter -> data		1092725	1					
ANR	1092906	PtrMemberAccess	filter -> data		1092725	0					
ANR	1092907	Identifier	filter		1092725	0					
ANR	1092908	Identifier	data		1092725	1					
ANR	1092909	ElseStatement	else		1092725	0					
ANR	1092910	CompoundStatement		14:8:563:563	1092725	0					
ANR	1092911	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		1092725	0					
ANR	1092912	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	242:6:6018:6076	1092725	0	True				
ANR	1092913	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1092725	0		!=			
ANR	1092914	PtrMemberAccess	filter -> illegal_mode		1092725	0					
ANR	1092915	Identifier	filter		1092725	0					
ANR	1092916	Identifier	illegal_mode		1092725	1					
ANR	1092917	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1092725	1					
ANR	1092918	CompoundStatement		15:67:632:632	1092725	1					
ANR	1092919	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	243:3:6084:6128	1092725	0	True				
ANR	1092920	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		1092725	0					
ANR	1092921	Callee	CK		1092725	0					
ANR	1092922	Identifier	CK		1092725	0					
ANR	1092923	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		1092725	1					
ANR	1092924	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		1092725	0					
ANR	1092925	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		1092725	0					
ANR	1092926	Callee	mbfl_filt_conv_illegal_output		1092725	0					
ANR	1092927	Identifier	mbfl_filt_conv_illegal_output		1092725	0					
ANR	1092928	ArgumentList	c		1092725	1					
ANR	1092929	Argument	c		1092725	0					
ANR	1092930	Identifier	c		1092725	0					
ANR	1092931	Argument	filter		1092725	1					
ANR	1092932	Identifier	filter		1092725	0					
ANR	1092933	ReturnStatement	return c ;	247:1:6139:6147	1092725	2	True				
ANR	1092934	Identifier	c		1092725	0					
ANR	1092935	ReturnType	int		1092725	1					
ANR	1092936	Identifier	mbfl_filt_conv_wchar_utf16be		1092725	2					
ANR	1092937	ParameterList	"int c , mbfl_convert_filter * filter"		1092725	3					
ANR	1092938	Parameter	int c	227:33:5410:5414	1092725	0	True				
ANR	1092939	ParameterType	int		1092725	0					
ANR	1092940	Identifier	c		1092725	1					
ANR	1092941	Parameter	mbfl_convert_filter * filter	227:40:5417:5443	1092725	1	True				
ANR	1092942	ParameterType	mbfl_convert_filter *		1092725	0					
ANR	1092943	Identifier	filter		1092725	1					
ANR	1092944	CFGEntryNode	ENTRY		1092725		True				
ANR	1092945	CFGExitNode	EXIT		1092725		True				
ANR	1092946	Symbol	c		1092725						
ANR	1092947	Symbol	mbfl_filt_conv_illegal_output		1092725						
ANR	1092948	Symbol	filter -> illegal_mode		1092725						
ANR	1092949	Symbol	* filter -> output_function		1092725						
ANR	1092950	Symbol	n		1092725						
ANR	1092951	Symbol	MBFL_WCSPLANE_SUPMIN		1092725						
ANR	1092952	Symbol	filter -> data		1092725						
ANR	1092953	Symbol	* filter		1092725						
ANR	1092954	Symbol	filter		1092725						
ANR	1092955	Symbol	filter -> output_function		1092725						
ANR	1092956	Symbol	MBFL_WCSPLANE_UCS2MAX		1092725						
ANR	1092957	Symbol	MBFL_WCSPLANE_SUPMAX		1092725						
ANR	1092958	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1092725						
ANR	1092959	Symbol	* * filter		1092725						
ANR	1092960	Function	mbfl_filt_conv_utf16le_wchar	253:0:6180:7040							
ANR	1092961	FunctionDef	"mbfl_filt_conv_utf16le_wchar (int c , mbfl_convert_filter * filter)"		1092960	0					
ANR	1092962	CompoundStatement		254:0:6249:7040	1092960	0					
ANR	1092963	IdentifierDeclStatement	int n ;	255:1:6252:6257	1092960	0	True				
ANR	1092964	IdentifierDecl	n		1092960	0					
ANR	1092965	IdentifierDeclType	int		1092960	0					
ANR	1092966	Identifier	n		1092960	1					
ANR	1092967	SwitchStatement	switch ( filter -> status )		1092960	1					
ANR	1092968	Condition	filter -> status	257:9:6269:6282	1092960	0	True				
ANR	1092969	PtrMemberAccess	filter -> status		1092960	0					
ANR	1092970	Identifier	filter		1092960	0					
ANR	1092971	Identifier	status		1092960	1					
ANR	1092972	CompoundStatement		4:25:35:35	1092960	1					
ANR	1092973	Label	case 0 :	258:1:6288:6294	1092960	0	True				
ANR	1092974	ExpressionStatement	filter -> status = 1	259:2:6298:6316	1092960	1	True				
ANR	1092975	AssignmentExpression	filter -> status = 1		1092960	0		=			
ANR	1092976	PtrMemberAccess	filter -> status		1092960	0					
ANR	1092977	Identifier	filter		1092960	0					
ANR	1092978	Identifier	status		1092960	1					
ANR	1092979	PrimaryExpression	1		1092960	1					
ANR	1092980	ExpressionStatement	n = c & 0xff	260:2:6320:6332	1092960	2	True				
ANR	1092981	AssignmentExpression	n = c & 0xff		1092960	0		=			
ANR	1092982	Identifier	n		1092960	0					
ANR	1092983	BitAndExpression	c & 0xff		1092960	1		&			
ANR	1092984	Identifier	c		1092960	0					
ANR	1092985	PrimaryExpression	0xff		1092960	1					
ANR	1092986	ExpressionStatement	filter -> cache |= n	261:2:6336:6354	1092960	3	True				
ANR	1092987	AssignmentExpression	filter -> cache |= n		1092960	0		|=			
ANR	1092988	PtrMemberAccess	filter -> cache		1092960	0					
ANR	1092989	Identifier	filter		1092960	0					
ANR	1092990	Identifier	cache		1092960	1					
ANR	1092991	Identifier	n		1092960	1					
ANR	1092992	BreakStatement	break ;	262:2:6358:6363	1092960	4	True				
ANR	1092993	Label	default :	263:1:6366:6373	1092960	5	True				
ANR	1092994	Identifier	default		1092960	0					
ANR	1092995	ExpressionStatement	filter -> status = 0	264:2:6377:6395	1092960	6	True				
ANR	1092996	AssignmentExpression	filter -> status = 0		1092960	0		=			
ANR	1092997	PtrMemberAccess	filter -> status		1092960	0					
ANR	1092998	Identifier	filter		1092960	0					
ANR	1092999	Identifier	status		1092960	1					
ANR	1093000	PrimaryExpression	0		1092960	1					
ANR	1093001	ExpressionStatement	n = ( filter -> cache & 0xff ) | ( ( c & 0xff ) << 8 )	265:2:6399:6445	1092960	7	True				
ANR	1093002	AssignmentExpression	n = ( filter -> cache & 0xff ) | ( ( c & 0xff ) << 8 )		1092960	0		=			
ANR	1093003	Identifier	n		1092960	0					
ANR	1093004	InclusiveOrExpression	( filter -> cache & 0xff ) | ( ( c & 0xff ) << 8 )		1092960	1		|			
ANR	1093005	BitAndExpression	filter -> cache & 0xff		1092960	0		&			
ANR	1093006	PtrMemberAccess	filter -> cache		1092960	0					
ANR	1093007	Identifier	filter		1092960	0					
ANR	1093008	Identifier	cache		1092960	1					
ANR	1093009	PrimaryExpression	0xff		1092960	1					
ANR	1093010	ShiftExpression	( c & 0xff ) << 8		1092960	1		<<			
ANR	1093011	BitAndExpression	c & 0xff		1092960	0		&			
ANR	1093012	Identifier	c		1092960	0					
ANR	1093013	PrimaryExpression	0xff		1092960	1					
ANR	1093014	PrimaryExpression	8		1092960	1					
ANR	1093015	IfStatement	if ( n >= 0xd800 && n < 0xdc00 )		1092960	8					
ANR	1093016	Condition	n >= 0xd800 && n < 0xdc00	266:6:6453:6477	1092960	0	True				
ANR	1093017	AndExpression	n >= 0xd800 && n < 0xdc00		1092960	0		&&			
ANR	1093018	RelationalExpression	n >= 0xd800		1092960	0		>=			
ANR	1093019	Identifier	n		1092960	0					
ANR	1093020	PrimaryExpression	0xd800		1092960	1					
ANR	1093021	RelationalExpression	n < 0xdc00		1092960	1		<			
ANR	1093022	Identifier	n		1092960	0					
ANR	1093023	PrimaryExpression	0xdc00		1092960	1					
ANR	1093024	CompoundStatement		13:33:230:230	1092960	1					
ANR	1093025	ExpressionStatement	filter -> cache = ( ( n & 0x3ff ) << 16 ) + 0x400000	267:3:6485:6531	1092960	0	True				
ANR	1093026	AssignmentExpression	filter -> cache = ( ( n & 0x3ff ) << 16 ) + 0x400000		1092960	0		=			
ANR	1093027	PtrMemberAccess	filter -> cache		1092960	0					
ANR	1093028	Identifier	filter		1092960	0					
ANR	1093029	Identifier	cache		1092960	1					
ANR	1093030	AdditiveExpression	( ( n & 0x3ff ) << 16 ) + 0x400000		1092960	1		+			
ANR	1093031	ShiftExpression	( n & 0x3ff ) << 16		1092960	0		<<			
ANR	1093032	BitAndExpression	n & 0x3ff		1092960	0		&			
ANR	1093033	Identifier	n		1092960	0					
ANR	1093034	PrimaryExpression	0x3ff		1092960	1					
ANR	1093035	PrimaryExpression	16		1092960	1					
ANR	1093036	PrimaryExpression	0x400000		1092960	1					
ANR	1093037	ElseStatement	else		1092960	0					
ANR	1093038	IfStatement	if ( n >= 0xdc00 && n < 0xe000 )		1092960	0					
ANR	1093039	Condition	n >= 0xdc00 && n < 0xe000	268:13:6546:6570	1092960	0	True				
ANR	1093040	AndExpression	n >= 0xdc00 && n < 0xe000		1092960	0		&&			
ANR	1093041	RelationalExpression	n >= 0xdc00		1092960	0		>=			
ANR	1093042	Identifier	n		1092960	0					
ANR	1093043	PrimaryExpression	0xdc00		1092960	1					
ANR	1093044	RelationalExpression	n < 0xe000		1092960	1		<			
ANR	1093045	Identifier	n		1092960	0					
ANR	1093046	PrimaryExpression	0xe000		1092960	1					
ANR	1093047	CompoundStatement		15:40:323:323	1092960	1					
ANR	1093048	ExpressionStatement	n &= 0x3ff	269:3:6578:6588	1092960	0	True				
ANR	1093049	AssignmentExpression	n &= 0x3ff		1092960	0		&=			
ANR	1093050	Identifier	n		1092960	0					
ANR	1093051	PrimaryExpression	0x3ff		1092960	1					
ANR	1093052	ExpressionStatement	n |= ( filter -> cache & 0xfff0000 ) >> 6	270:3:6593:6630	1092960	1	True				
ANR	1093053	AssignmentExpression	n |= ( filter -> cache & 0xfff0000 ) >> 6		1092960	0		|=			
ANR	1093054	Identifier	n		1092960	0					
ANR	1093055	ShiftExpression	( filter -> cache & 0xfff0000 ) >> 6		1092960	1		>>			
ANR	1093056	BitAndExpression	filter -> cache & 0xfff0000		1092960	0		&			
ANR	1093057	PtrMemberAccess	filter -> cache		1092960	0					
ANR	1093058	Identifier	filter		1092960	0					
ANR	1093059	Identifier	cache		1092960	1					
ANR	1093060	PrimaryExpression	0xfff0000		1092960	1					
ANR	1093061	PrimaryExpression	6		1092960	1					
ANR	1093062	ExpressionStatement	filter -> cache = 0	271:3:6635:6652	1092960	2	True				
ANR	1093063	AssignmentExpression	filter -> cache = 0		1092960	0		=			
ANR	1093064	PtrMemberAccess	filter -> cache		1092960	0					
ANR	1093065	Identifier	filter		1092960	0					
ANR	1093066	Identifier	cache		1092960	1					
ANR	1093067	PrimaryExpression	0		1092960	1					
ANR	1093068	IfStatement	if ( n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX )		1092960	3					
ANR	1093069	Condition	n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX	272:7:6661:6713	1092960	0	True				
ANR	1093070	AndExpression	n >= MBFL_WCSPLANE_SUPMIN && n < MBFL_WCSPLANE_SUPMAX		1092960	0		&&			
ANR	1093071	RelationalExpression	n >= MBFL_WCSPLANE_SUPMIN		1092960	0		>=			
ANR	1093072	Identifier	n		1092960	0					
ANR	1093073	Identifier	MBFL_WCSPLANE_SUPMIN		1092960	1					
ANR	1093074	RelationalExpression	n < MBFL_WCSPLANE_SUPMAX		1092960	1		<			
ANR	1093075	Identifier	n		1092960	0					
ANR	1093076	Identifier	MBFL_WCSPLANE_SUPMAX		1092960	1					
ANR	1093077	CompoundStatement		19:62:466:466	1092960	1					
ANR	1093078	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	273:4:6722:6769	1092960	0	True				
ANR	1093079	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092960	0					
ANR	1093080	Callee	CK		1092960	0					
ANR	1093081	Identifier	CK		1092960	0					
ANR	1093082	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092960	1					
ANR	1093083	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092960	0					
ANR	1093084	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092960	0					
ANR	1093085	Callee	* filter -> output_function		1092960	0					
ANR	1093086	UnaryOperationExpression	* filter -> output_function		1092960	0					
ANR	1093087	UnaryOperator	*		1092960	0					
ANR	1093088	PtrMemberAccess	filter -> output_function		1092960	1					
ANR	1093089	Identifier	filter		1092960	0					
ANR	1093090	Identifier	output_function		1092960	1					
ANR	1093091	ArgumentList	n		1092960	1					
ANR	1093092	Argument	n		1092960	0					
ANR	1093093	Identifier	n		1092960	0					
ANR	1093094	Argument	filter -> data		1092960	1					
ANR	1093095	PtrMemberAccess	filter -> data		1092960	0					
ANR	1093096	Identifier	filter		1092960	0					
ANR	1093097	Identifier	data		1092960	1					
ANR	1093098	ElseStatement	else		1092960	0					
ANR	1093099	CompoundStatement		21:10:531:531	1092960	0					
ANR	1093100	ExpressionStatement	n &= MBFL_WCSGROUP_MASK	275:4:6812:6835	1092960	0	True				
ANR	1093101	AssignmentExpression	n &= MBFL_WCSGROUP_MASK		1092960	0		&=			
ANR	1093102	Identifier	n		1092960	0					
ANR	1093103	Identifier	MBFL_WCSGROUP_MASK		1092960	1					
ANR	1093104	ExpressionStatement	n |= MBFL_WCSGROUP_THROUGH	276:4:6841:6867	1092960	1	True				
ANR	1093105	AssignmentExpression	n |= MBFL_WCSGROUP_THROUGH		1092960	0		|=			
ANR	1093106	Identifier	n		1092960	0					
ANR	1093107	Identifier	MBFL_WCSGROUP_THROUGH		1092960	1					
ANR	1093108	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	277:4:6873:6920	1092960	2	True				
ANR	1093109	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092960	0					
ANR	1093110	Callee	CK		1092960	0					
ANR	1093111	Identifier	CK		1092960	0					
ANR	1093112	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092960	1					
ANR	1093113	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092960	0					
ANR	1093114	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092960	0					
ANR	1093115	Callee	* filter -> output_function		1092960	0					
ANR	1093116	UnaryOperationExpression	* filter -> output_function		1092960	0					
ANR	1093117	UnaryOperator	*		1092960	0					
ANR	1093118	PtrMemberAccess	filter -> output_function		1092960	1					
ANR	1093119	Identifier	filter		1092960	0					
ANR	1093120	Identifier	output_function		1092960	1					
ANR	1093121	ArgumentList	n		1092960	1					
ANR	1093122	Argument	n		1092960	0					
ANR	1093123	Identifier	n		1092960	0					
ANR	1093124	Argument	filter -> data		1092960	1					
ANR	1093125	PtrMemberAccess	filter -> data		1092960	0					
ANR	1093126	Identifier	filter		1092960	0					
ANR	1093127	Identifier	data		1092960	1					
ANR	1093128	ElseStatement	else		1092960	0					
ANR	1093129	CompoundStatement		26:9:686:686	1092960	0					
ANR	1093130	ExpressionStatement	filter -> cache = 0	280:3:6941:6958	1092960	0	True				
ANR	1093131	AssignmentExpression	filter -> cache = 0		1092960	0		=			
ANR	1093132	PtrMemberAccess	filter -> cache		1092960	0					
ANR	1093133	Identifier	filter		1092960	0					
ANR	1093134	Identifier	cache		1092960	1					
ANR	1093135	PrimaryExpression	0		1092960	1					
ANR	1093136	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"	281:3:6963:7010	1092960	1	True				
ANR	1093137	CallExpression	"CK ( ( * filter -> output_function ) ( n , filter -> data ) )"		1092960	0					
ANR	1093138	Callee	CK		1092960	0					
ANR	1093139	Identifier	CK		1092960	0					
ANR	1093140	ArgumentList	"( * filter -> output_function ) ( n , filter -> data )"		1092960	1					
ANR	1093141	Argument	"( * filter -> output_function ) ( n , filter -> data )"		1092960	0					
ANR	1093142	CallExpression	"( * filter -> output_function ) ( n , filter -> data )"		1092960	0					
ANR	1093143	Callee	* filter -> output_function		1092960	0					
ANR	1093144	UnaryOperationExpression	* filter -> output_function		1092960	0					
ANR	1093145	UnaryOperator	*		1092960	0					
ANR	1093146	PtrMemberAccess	filter -> output_function		1092960	1					
ANR	1093147	Identifier	filter		1092960	0					
ANR	1093148	Identifier	output_function		1092960	1					
ANR	1093149	ArgumentList	n		1092960	1					
ANR	1093150	Argument	n		1092960	0					
ANR	1093151	Identifier	n		1092960	0					
ANR	1093152	Argument	filter -> data		1092960	1					
ANR	1093153	PtrMemberAccess	filter -> data		1092960	0					
ANR	1093154	Identifier	filter		1092960	0					
ANR	1093155	Identifier	data		1092960	1					
ANR	1093156	BreakStatement	break ;	283:2:7018:7023	1092960	9	True				
ANR	1093157	ReturnStatement	return c ;	286:1:7030:7038	1092960	2	True				
ANR	1093158	Identifier	c		1092960	0					
ANR	1093159	ReturnType	int		1092960	1					
ANR	1093160	Identifier	mbfl_filt_conv_utf16le_wchar		1092960	2					
ANR	1093161	ParameterList	"int c , mbfl_convert_filter * filter"		1092960	3					
ANR	1093162	Parameter	int c	253:33:6213:6217	1092960	0	True				
ANR	1093163	ParameterType	int		1092960	0					
ANR	1093164	Identifier	c		1092960	1					
ANR	1093165	Parameter	mbfl_convert_filter * filter	253:40:6220:6246	1092960	1	True				
ANR	1093166	ParameterType	mbfl_convert_filter *		1092960	0					
ANR	1093167	Identifier	filter		1092960	1					
ANR	1093168	CFGEntryNode	ENTRY		1092960		True				
ANR	1093169	CFGExitNode	EXIT		1092960		True				
ANR	1093170	Symbol	filter -> cache		1092960						
ANR	1093171	Symbol	c		1092960						
ANR	1093172	Symbol	MBFL_WCSGROUP_MASK		1092960						
ANR	1093173	Symbol	MBFL_WCSGROUP_THROUGH		1092960						
ANR	1093174	Symbol	* filter -> output_function		1092960						
ANR	1093175	Symbol	n		1092960						
ANR	1093176	Symbol	MBFL_WCSPLANE_SUPMIN		1092960						
ANR	1093177	Symbol	* filter		1092960						
ANR	1093178	Symbol	filter -> data		1092960						
ANR	1093179	Symbol	filter		1092960						
ANR	1093180	Symbol	filter -> output_function		1092960						
ANR	1093181	Symbol	filter -> status		1092960						
ANR	1093182	Symbol	MBFL_WCSPLANE_SUPMAX		1092960						
ANR	1093183	Symbol	* * filter		1092960						
ANR	1093184	Function	mbfl_filt_conv_wchar_utf16le	292:0:7071:7843							
ANR	1093185	FunctionDef	"mbfl_filt_conv_wchar_utf16le (int c , mbfl_convert_filter * filter)"		1093184	0					
ANR	1093186	CompoundStatement		293:0:7140:7843	1093184	0					
ANR	1093187	IdentifierDeclStatement	int n ;	294:1:7143:7148	1093184	0	True				
ANR	1093188	IdentifierDecl	n		1093184	0					
ANR	1093189	IdentifierDeclType	int		1093184	0					
ANR	1093190	Identifier	n		1093184	1					
ANR	1093191	IfStatement	if ( c >= 0 && c < MBFL_WCSPLANE_UCS2MAX )		1093184	1					
ANR	1093192	Condition	c >= 0 && c < MBFL_WCSPLANE_UCS2MAX	296:5:7156:7190	1093184	0	True				
ANR	1093193	AndExpression	c >= 0 && c < MBFL_WCSPLANE_UCS2MAX		1093184	0		&&			
ANR	1093194	RelationalExpression	c >= 0		1093184	0		>=			
ANR	1093195	Identifier	c		1093184	0					
ANR	1093196	PrimaryExpression	0		1093184	1					
ANR	1093197	RelationalExpression	c < MBFL_WCSPLANE_UCS2MAX		1093184	1		<			
ANR	1093198	Identifier	c		1093184	0					
ANR	1093199	Identifier	MBFL_WCSPLANE_UCS2MAX		1093184	1					
ANR	1093200	CompoundStatement		4:42:52:52	1093184	1					
ANR	1093201	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"	297:2:7197:7251	1093184	0	True				
ANR	1093202	CallExpression	"CK ( ( * filter -> output_function ) ( c & 0xff , filter -> data ) )"		1093184	0					
ANR	1093203	Callee	CK		1093184	0					
ANR	1093204	Identifier	CK		1093184	0					
ANR	1093205	ArgumentList	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1093184	1					
ANR	1093206	Argument	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1093184	0					
ANR	1093207	CallExpression	"( * filter -> output_function ) ( c & 0xff , filter -> data )"		1093184	0					
ANR	1093208	Callee	* filter -> output_function		1093184	0					
ANR	1093209	UnaryOperationExpression	* filter -> output_function		1093184	0					
ANR	1093210	UnaryOperator	*		1093184	0					
ANR	1093211	PtrMemberAccess	filter -> output_function		1093184	1					
ANR	1093212	Identifier	filter		1093184	0					
ANR	1093213	Identifier	output_function		1093184	1					
ANR	1093214	ArgumentList	c & 0xff		1093184	1					
ANR	1093215	Argument	c & 0xff		1093184	0					
ANR	1093216	BitAndExpression	c & 0xff		1093184	0		&			
ANR	1093217	Identifier	c		1093184	0					
ANR	1093218	PrimaryExpression	0xff		1093184	1					
ANR	1093219	Argument	filter -> data		1093184	1					
ANR	1093220	PtrMemberAccess	filter -> data		1093184	0					
ANR	1093221	Identifier	filter		1093184	0					
ANR	1093222	Identifier	data		1093184	1					
ANR	1093223	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"	298:2:7255:7316	1093184	1	True				
ANR	1093224	CallExpression	"CK ( ( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data ) )"		1093184	0					
ANR	1093225	Callee	CK		1093184	0					
ANR	1093226	Identifier	CK		1093184	0					
ANR	1093227	ArgumentList	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1093184	1					
ANR	1093228	Argument	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1093184	0					
ANR	1093229	CallExpression	"( * filter -> output_function ) ( ( c >> 8 ) & 0xff , filter -> data )"		1093184	0					
ANR	1093230	Callee	* filter -> output_function		1093184	0					
ANR	1093231	UnaryOperationExpression	* filter -> output_function		1093184	0					
ANR	1093232	UnaryOperator	*		1093184	0					
ANR	1093233	PtrMemberAccess	filter -> output_function		1093184	1					
ANR	1093234	Identifier	filter		1093184	0					
ANR	1093235	Identifier	output_function		1093184	1					
ANR	1093236	ArgumentList	( c >> 8 ) & 0xff		1093184	1					
ANR	1093237	Argument	( c >> 8 ) & 0xff		1093184	0					
ANR	1093238	BitAndExpression	( c >> 8 ) & 0xff		1093184	0		&			
ANR	1093239	ShiftExpression	c >> 8		1093184	0		>>			
ANR	1093240	Identifier	c		1093184	0					
ANR	1093241	PrimaryExpression	8		1093184	1					
ANR	1093242	PrimaryExpression	0xff		1093184	1					
ANR	1093243	Argument	filter -> data		1093184	1					
ANR	1093244	PtrMemberAccess	filter -> data		1093184	0					
ANR	1093245	Identifier	filter		1093184	0					
ANR	1093246	Identifier	data		1093184	1					
ANR	1093247	ElseStatement	else		1093184	0					
ANR	1093248	IfStatement	if ( c >= MBFL_WCSPLANE_SUPMIN && c < MBFL_WCSPLANE_SUPMAX )		1093184	0					
ANR	1093249	Condition	c >= MBFL_WCSPLANE_SUPMIN && c < MBFL_WCSPLANE_SUPMAX	299:12:7330:7382	1093184	0	True				
ANR	1093250	AndExpression	c >= MBFL_WCSPLANE_SUPMIN && c < MBFL_WCSPLANE_SUPMAX		1093184	0		&&			
ANR	1093251	RelationalExpression	c >= MBFL_WCSPLANE_SUPMIN		1093184	0		>=			
ANR	1093252	Identifier	c		1093184	0					
ANR	1093253	Identifier	MBFL_WCSPLANE_SUPMIN		1093184	1					
ANR	1093254	RelationalExpression	c < MBFL_WCSPLANE_SUPMAX		1093184	1		<			
ANR	1093255	Identifier	c		1093184	0					
ANR	1093256	Identifier	MBFL_WCSPLANE_SUPMAX		1093184	1					
ANR	1093257	CompoundStatement		7:67:244:244	1093184	1					
ANR	1093258	ExpressionStatement	n = ( ( c >> 10 ) - 0x40 ) | 0xd800	300:2:7389:7420	1093184	0	True				
ANR	1093259	AssignmentExpression	n = ( ( c >> 10 ) - 0x40 ) | 0xd800		1093184	0		=			
ANR	1093260	Identifier	n		1093184	0					
ANR	1093261	InclusiveOrExpression	( ( c >> 10 ) - 0x40 ) | 0xd800		1093184	1		|			
ANR	1093262	AdditiveExpression	( c >> 10 ) - 0x40		1093184	0		-			
ANR	1093263	ShiftExpression	c >> 10		1093184	0		>>			
ANR	1093264	Identifier	c		1093184	0					
ANR	1093265	PrimaryExpression	10		1093184	1					
ANR	1093266	PrimaryExpression	0x40		1093184	1					
ANR	1093267	PrimaryExpression	0xd800		1093184	1					
ANR	1093268	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"	301:2:7424:7478	1093184	1	True				
ANR	1093269	CallExpression	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"		1093184	0					
ANR	1093270	Callee	CK		1093184	0					
ANR	1093271	Identifier	CK		1093184	0					
ANR	1093272	ArgumentList	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1093184	1					
ANR	1093273	Argument	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1093184	0					
ANR	1093274	CallExpression	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1093184	0					
ANR	1093275	Callee	* filter -> output_function		1093184	0					
ANR	1093276	UnaryOperationExpression	* filter -> output_function		1093184	0					
ANR	1093277	UnaryOperator	*		1093184	0					
ANR	1093278	PtrMemberAccess	filter -> output_function		1093184	1					
ANR	1093279	Identifier	filter		1093184	0					
ANR	1093280	Identifier	output_function		1093184	1					
ANR	1093281	ArgumentList	n & 0xff		1093184	1					
ANR	1093282	Argument	n & 0xff		1093184	0					
ANR	1093283	BitAndExpression	n & 0xff		1093184	0		&			
ANR	1093284	Identifier	n		1093184	0					
ANR	1093285	PrimaryExpression	0xff		1093184	1					
ANR	1093286	Argument	filter -> data		1093184	1					
ANR	1093287	PtrMemberAccess	filter -> data		1093184	0					
ANR	1093288	Identifier	filter		1093184	0					
ANR	1093289	Identifier	data		1093184	1					
ANR	1093290	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"	302:2:7482:7543	1093184	2	True				
ANR	1093291	CallExpression	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"		1093184	0					
ANR	1093292	Callee	CK		1093184	0					
ANR	1093293	Identifier	CK		1093184	0					
ANR	1093294	ArgumentList	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1093184	1					
ANR	1093295	Argument	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1093184	0					
ANR	1093296	CallExpression	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1093184	0					
ANR	1093297	Callee	* filter -> output_function		1093184	0					
ANR	1093298	UnaryOperationExpression	* filter -> output_function		1093184	0					
ANR	1093299	UnaryOperator	*		1093184	0					
ANR	1093300	PtrMemberAccess	filter -> output_function		1093184	1					
ANR	1093301	Identifier	filter		1093184	0					
ANR	1093302	Identifier	output_function		1093184	1					
ANR	1093303	ArgumentList	( n >> 8 ) & 0xff		1093184	1					
ANR	1093304	Argument	( n >> 8 ) & 0xff		1093184	0					
ANR	1093305	BitAndExpression	( n >> 8 ) & 0xff		1093184	0		&			
ANR	1093306	ShiftExpression	n >> 8		1093184	0		>>			
ANR	1093307	Identifier	n		1093184	0					
ANR	1093308	PrimaryExpression	8		1093184	1					
ANR	1093309	PrimaryExpression	0xff		1093184	1					
ANR	1093310	Argument	filter -> data		1093184	1					
ANR	1093311	PtrMemberAccess	filter -> data		1093184	0					
ANR	1093312	Identifier	filter		1093184	0					
ANR	1093313	Identifier	data		1093184	1					
ANR	1093314	ExpressionStatement	n = ( c & 0x3ff ) | 0xdc00	303:2:7547:7571	1093184	3	True				
ANR	1093315	AssignmentExpression	n = ( c & 0x3ff ) | 0xdc00		1093184	0		=			
ANR	1093316	Identifier	n		1093184	0					
ANR	1093317	InclusiveOrExpression	( c & 0x3ff ) | 0xdc00		1093184	1		|			
ANR	1093318	BitAndExpression	c & 0x3ff		1093184	0		&			
ANR	1093319	Identifier	c		1093184	0					
ANR	1093320	PrimaryExpression	0x3ff		1093184	1					
ANR	1093321	PrimaryExpression	0xdc00		1093184	1					
ANR	1093322	ExpressionStatement	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"	304:2:7575:7629	1093184	4	True				
ANR	1093323	CallExpression	"CK ( ( * filter -> output_function ) ( n & 0xff , filter -> data ) )"		1093184	0					
ANR	1093324	Callee	CK		1093184	0					
ANR	1093325	Identifier	CK		1093184	0					
ANR	1093326	ArgumentList	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1093184	1					
ANR	1093327	Argument	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1093184	0					
ANR	1093328	CallExpression	"( * filter -> output_function ) ( n & 0xff , filter -> data )"		1093184	0					
ANR	1093329	Callee	* filter -> output_function		1093184	0					
ANR	1093330	UnaryOperationExpression	* filter -> output_function		1093184	0					
ANR	1093331	UnaryOperator	*		1093184	0					
ANR	1093332	PtrMemberAccess	filter -> output_function		1093184	1					
ANR	1093333	Identifier	filter		1093184	0					
ANR	1093334	Identifier	output_function		1093184	1					
ANR	1093335	ArgumentList	n & 0xff		1093184	1					
ANR	1093336	Argument	n & 0xff		1093184	0					
ANR	1093337	BitAndExpression	n & 0xff		1093184	0		&			
ANR	1093338	Identifier	n		1093184	0					
ANR	1093339	PrimaryExpression	0xff		1093184	1					
ANR	1093340	Argument	filter -> data		1093184	1					
ANR	1093341	PtrMemberAccess	filter -> data		1093184	0					
ANR	1093342	Identifier	filter		1093184	0					
ANR	1093343	Identifier	data		1093184	1					
ANR	1093344	ExpressionStatement	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"	305:2:7633:7694	1093184	5	True				
ANR	1093345	CallExpression	"CK ( ( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data ) )"		1093184	0					
ANR	1093346	Callee	CK		1093184	0					
ANR	1093347	Identifier	CK		1093184	0					
ANR	1093348	ArgumentList	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1093184	1					
ANR	1093349	Argument	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1093184	0					
ANR	1093350	CallExpression	"( * filter -> output_function ) ( ( n >> 8 ) & 0xff , filter -> data )"		1093184	0					
ANR	1093351	Callee	* filter -> output_function		1093184	0					
ANR	1093352	UnaryOperationExpression	* filter -> output_function		1093184	0					
ANR	1093353	UnaryOperator	*		1093184	0					
ANR	1093354	PtrMemberAccess	filter -> output_function		1093184	1					
ANR	1093355	Identifier	filter		1093184	0					
ANR	1093356	Identifier	output_function		1093184	1					
ANR	1093357	ArgumentList	( n >> 8 ) & 0xff		1093184	1					
ANR	1093358	Argument	( n >> 8 ) & 0xff		1093184	0					
ANR	1093359	BitAndExpression	( n >> 8 ) & 0xff		1093184	0		&			
ANR	1093360	ShiftExpression	n >> 8		1093184	0		>>			
ANR	1093361	Identifier	n		1093184	0					
ANR	1093362	PrimaryExpression	8		1093184	1					
ANR	1093363	PrimaryExpression	0xff		1093184	1					
ANR	1093364	Argument	filter -> data		1093184	1					
ANR	1093365	PtrMemberAccess	filter -> data		1093184	0					
ANR	1093366	Identifier	filter		1093184	0					
ANR	1093367	Identifier	data		1093184	1					
ANR	1093368	ElseStatement	else		1093184	0					
ANR	1093369	CompoundStatement		14:8:563:563	1093184	0					
ANR	1093370	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		1093184	0					
ANR	1093371	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	307:6:7712:7770	1093184	0	True				
ANR	1093372	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1093184	0		!=			
ANR	1093373	PtrMemberAccess	filter -> illegal_mode		1093184	0					
ANR	1093374	Identifier	filter		1093184	0					
ANR	1093375	Identifier	illegal_mode		1093184	1					
ANR	1093376	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1093184	1					
ANR	1093377	CompoundStatement		15:67:632:632	1093184	1					
ANR	1093378	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	308:3:7778:7822	1093184	0	True				
ANR	1093379	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		1093184	0					
ANR	1093380	Callee	CK		1093184	0					
ANR	1093381	Identifier	CK		1093184	0					
ANR	1093382	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		1093184	1					
ANR	1093383	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		1093184	0					
ANR	1093384	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		1093184	0					
ANR	1093385	Callee	mbfl_filt_conv_illegal_output		1093184	0					
ANR	1093386	Identifier	mbfl_filt_conv_illegal_output		1093184	0					
ANR	1093387	ArgumentList	c		1093184	1					
ANR	1093388	Argument	c		1093184	0					
ANR	1093389	Identifier	c		1093184	0					
ANR	1093390	Argument	filter		1093184	1					
ANR	1093391	Identifier	filter		1093184	0					
ANR	1093392	ReturnStatement	return c ;	312:1:7833:7841	1093184	2	True				
ANR	1093393	Identifier	c		1093184	0					
ANR	1093394	ReturnType	int		1093184	1					
ANR	1093395	Identifier	mbfl_filt_conv_wchar_utf16le		1093184	2					
ANR	1093396	ParameterList	"int c , mbfl_convert_filter * filter"		1093184	3					
ANR	1093397	Parameter	int c	292:33:7104:7108	1093184	0	True				
ANR	1093398	ParameterType	int		1093184	0					
ANR	1093399	Identifier	c		1093184	1					
ANR	1093400	Parameter	mbfl_convert_filter * filter	292:40:7111:7137	1093184	1	True				
ANR	1093401	ParameterType	mbfl_convert_filter *		1093184	0					
ANR	1093402	Identifier	filter		1093184	1					
ANR	1093403	CFGEntryNode	ENTRY		1093184		True				
ANR	1093404	CFGExitNode	EXIT		1093184		True				
ANR	1093405	Symbol	c		1093184						
ANR	1093406	Symbol	mbfl_filt_conv_illegal_output		1093184						
ANR	1093407	Symbol	filter -> illegal_mode		1093184						
ANR	1093408	Symbol	* filter -> output_function		1093184						
ANR	1093409	Symbol	n		1093184						
ANR	1093410	Symbol	MBFL_WCSPLANE_SUPMIN		1093184						
ANR	1093411	Symbol	filter -> data		1093184						
ANR	1093412	Symbol	* filter		1093184						
ANR	1093413	Symbol	filter		1093184						
ANR	1093414	Symbol	filter -> output_function		1093184						
ANR	1093415	Symbol	MBFL_WCSPLANE_UCS2MAX		1093184						
ANR	1093416	Symbol	MBFL_WCSPLANE_SUPMAX		1093184						
ANR	1093417	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1093184						
ANR	1093418	Symbol	* * filter		1093184						
