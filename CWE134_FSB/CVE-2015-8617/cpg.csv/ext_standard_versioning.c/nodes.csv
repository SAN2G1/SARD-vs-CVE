command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2822659	File	data/converged/CVE-2015-8617_php-src/ext_standard_versioning.c								
ANR	2822660	Function	php_canonicalize_version	33:0:1385:2277							
ANR	2822661	FunctionDef	php_canonicalize_version (const char * version)		2822660	0					
ANR	2822662	CompoundStatement		35:0:1445:2277	2822660	0					
ANR	2822663	IdentifierDeclStatement	int len = strlen ( version ) ;	36:4:1451:1476	2822660	0	True				
ANR	2822664	IdentifierDecl	len = strlen ( version )		2822660	0					
ANR	2822665	IdentifierDeclType	int		2822660	0					
ANR	2822666	Identifier	len		2822660	1					
ANR	2822667	AssignmentExpression	len = strlen ( version )		2822660	2		=			
ANR	2822668	Identifier	len		2822660	0					
ANR	2822669	CallExpression	strlen ( version )		2822660	1					
ANR	2822670	Callee	strlen		2822660	0					
ANR	2822671	Identifier	strlen		2822660	0					
ANR	2822672	ArgumentList	version		2822660	1					
ANR	2822673	Argument	version		2822660	0					
ANR	2822674	Identifier	version		2822660	0					
ANR	2822675	IdentifierDeclStatement	"char * buf = safe_emalloc ( len , 2 , 1 ) , * q , lp , lq ;"	37:4:1482:1529	2822660	1	True				
ANR	2822676	IdentifierDecl	"* buf = safe_emalloc ( len , 2 , 1 )"		2822660	0					
ANR	2822677	IdentifierDeclType	char *		2822660	0					
ANR	2822678	Identifier	buf		2822660	1					
ANR	2822679	AssignmentExpression	"* buf = safe_emalloc ( len , 2 , 1 )"		2822660	2		=			
ANR	2822680	Identifier	buf		2822660	0					
ANR	2822681	CallExpression	"safe_emalloc ( len , 2 , 1 )"		2822660	1					
ANR	2822682	Callee	safe_emalloc		2822660	0					
ANR	2822683	Identifier	safe_emalloc		2822660	0					
ANR	2822684	ArgumentList	len		2822660	1					
ANR	2822685	Argument	len		2822660	0					
ANR	2822686	Identifier	len		2822660	0					
ANR	2822687	Argument	2		2822660	1					
ANR	2822688	PrimaryExpression	2		2822660	0					
ANR	2822689	Argument	1		2822660	2					
ANR	2822690	PrimaryExpression	1		2822660	0					
ANR	2822691	IdentifierDecl	* q		2822660	1					
ANR	2822692	IdentifierDeclType	char *		2822660	0					
ANR	2822693	Identifier	q		2822660	1					
ANR	2822694	IdentifierDecl	lp		2822660	2					
ANR	2822695	IdentifierDeclType	char		2822660	0					
ANR	2822696	Identifier	lp		2822660	1					
ANR	2822697	IdentifierDecl	lq		2822660	3					
ANR	2822698	IdentifierDeclType	char		2822660	0					
ANR	2822699	Identifier	lq		2822660	1					
ANR	2822700	IdentifierDeclStatement	const char * p ;	38:4:1535:1548	2822660	2	True				
ANR	2822701	IdentifierDecl	* p		2822660	0					
ANR	2822702	IdentifierDeclType	const char *		2822660	0					
ANR	2822703	Identifier	p		2822660	1					
ANR	2822704	IfStatement	if ( len == 0 )		2822660	3					
ANR	2822705	Condition	len == 0	40:8:1559:1566	2822660	0	True				
ANR	2822706	EqualityExpression	len == 0		2822660	0		==			
ANR	2822707	Identifier	len		2822660	0					
ANR	2822708	PrimaryExpression	0		2822660	1					
ANR	2822709	CompoundStatement		6:18:123:123	2822660	1					
ANR	2822710	ExpressionStatement	* buf = '\\0'	41:8:1579:1590	2822660	0	True				
ANR	2822711	AssignmentExpression	* buf = '\\0'		2822660	0		=			
ANR	2822712	UnaryOperationExpression	* buf		2822660	0					
ANR	2822713	UnaryOperator	*		2822660	0					
ANR	2822714	Identifier	buf		2822660	1					
ANR	2822715	PrimaryExpression	'\\0'		2822660	1					
ANR	2822716	ReturnStatement	return buf ;	42:8:1600:1610	2822660	1	True				
ANR	2822717	Identifier	buf		2822660	0					
ANR	2822718	ExpressionStatement	p = version	45:4:1623:1634	2822660	4	True				
ANR	2822719	AssignmentExpression	p = version		2822660	0		=			
ANR	2822720	Identifier	p		2822660	0					
ANR	2822721	Identifier	version		2822660	1					
ANR	2822722	ExpressionStatement	q = buf	46:4:1640:1647	2822660	5	True				
ANR	2822723	AssignmentExpression	q = buf		2822660	0		=			
ANR	2822724	Identifier	q		2822660	0					
ANR	2822725	Identifier	buf		2822660	1					
ANR	2822726	ExpressionStatement	* q ++ = lp = * p ++	47:4:1653:1669	2822660	6	True				
ANR	2822727	AssignmentExpression	* q ++ = lp = * p ++		2822660	0		=			
ANR	2822728	UnaryOperationExpression	* q ++		2822660	0					
ANR	2822729	UnaryOperator	*		2822660	0					
ANR	2822730	PostIncDecOperationExpression	q ++		2822660	1					
ANR	2822731	Identifier	q		2822660	0					
ANR	2822732	IncDec	++		2822660	1					
ANR	2822733	AssignmentExpression	lp = * p ++		2822660	1		=			
ANR	2822734	Identifier	lp		2822660	0					
ANR	2822735	UnaryOperationExpression	* p ++		2822660	1					
ANR	2822736	UnaryOperator	*		2822660	0					
ANR	2822737	PostIncDecOperationExpression	p ++		2822660	1					
ANR	2822738	Identifier	p		2822660	0					
ANR	2822739	IncDec	++		2822660	1					
ANR	2822740	WhileStatement	while ( * p )		2822660	7					
ANR	2822741	Condition	* p	49:11:1683:1684	2822660	0	True				
ANR	2822742	UnaryOperationExpression	* p		2822660	0					
ANR	2822743	UnaryOperator	*		2822660	0					
ANR	2822744	Identifier	p		2822660	1					
ANR	2822745	CompoundStatement		15:15:241:241	2822660	1					
ANR	2822746	Statement	define	54:1:1779:1784	2822660	0	True				
ANR	2822747	Statement	isdig	54:8:1786:1790	2822660	1	True				
ANR	2822748	Statement	(	54:13:1791:1791	2822660	2	True				
ANR	2822749	Statement	x	54:14:1792:1792	2822660	3	True				
ANR	2822750	Statement	)	54:15:1793:1793	2822660	4	True				
ANR	2822751	Statement	(	54:17:1795:1795	2822660	5	True				
ANR	2822752	Statement	isdigit	54:18:1796:1802	2822660	6	True				
ANR	2822753	Statement	(	54:25:1803:1803	2822660	7	True				
ANR	2822754	Statement	x	54:26:1804:1804	2822660	8	True				
ANR	2822755	Statement	)	54:27:1805:1805	2822660	9	True				
ANR	2822756	Statement	&&	54:28:1806:1807	2822660	10	True				
ANR	2822757	Statement	(	54:30:1808:1808	2822660	11	True				
ANR	2822758	Statement	x	54:31:1809:1809	2822660	12	True				
ANR	2822759	Statement	)	54:32:1810:1810	2822660	13	True				
ANR	2822760	Statement	!=	54:33:1811:1812	2822660	14	True				
ANR	2822761	Statement	'.'	54:35:1813:1815	2822660	15	True				
ANR	2822762	Statement	)	54:38:1816:1816	2822660	16	True				
ANR	2822763	Statement	define	55:1:1819:1824	2822660	17	True				
ANR	2822764	Statement	isndig	55:8:1826:1831	2822660	18	True				
ANR	2822765	Statement	(	55:14:1832:1832	2822660	19	True				
ANR	2822766	Statement	x	55:15:1833:1833	2822660	20	True				
ANR	2822767	Statement	)	55:16:1834:1834	2822660	21	True				
ANR	2822768	Statement	(	55:18:1836:1836	2822660	22	True				
ANR	2822769	Statement	!	55:19:1837:1837	2822660	23	True				
ANR	2822770	Statement	isdigit	55:20:1838:1844	2822660	24	True				
ANR	2822771	Statement	(	55:27:1845:1845	2822660	25	True				
ANR	2822772	Statement	x	55:28:1846:1846	2822660	26	True				
ANR	2822773	Statement	)	55:29:1847:1847	2822660	27	True				
ANR	2822774	Statement	&&	55:30:1848:1849	2822660	28	True				
ANR	2822775	Statement	(	55:32:1850:1850	2822660	29	True				
ANR	2822776	Statement	x	55:33:1851:1851	2822660	30	True				
ANR	2822777	Statement	)	55:34:1852:1852	2822660	31	True				
ANR	2822778	Statement	!=	55:35:1853:1854	2822660	32	True				
ANR	2822779	Statement	'.'	55:37:1855:1857	2822660	33	True				
ANR	2822780	Statement	)	55:40:1858:1858	2822660	34	True				
ANR	2822781	Statement	define	56:1:1861:1866	2822660	35	True				
ANR	2822782	Statement	isspecialver	56:8:1868:1879	2822660	36	True				
ANR	2822783	Statement	(	56:20:1880:1880	2822660	37	True				
ANR	2822784	Statement	x	56:21:1881:1881	2822660	38	True				
ANR	2822785	Statement	)	56:22:1882:1882	2822660	39	True				
ANR	2822786	Statement	(	56:24:1884:1884	2822660	40	True				
ANR	2822787	Statement	(	56:25:1885:1885	2822660	41	True				
ANR	2822788	Statement	x	56:26:1886:1886	2822660	42	True				
ANR	2822789	Statement	)	56:27:1887:1887	2822660	43	True				
ANR	2822790	Statement	==	56:28:1888:1889	2822660	44	True				
ANR	2822791	Statement	'-'	56:30:1890:1892	2822660	45	True				
ANR	2822792	Statement	||	56:33:1893:1894	2822660	46	True				
ANR	2822793	Statement	(	56:35:1895:1895	2822660	47	True				
ANR	2822794	Statement	x	56:36:1896:1896	2822660	48	True				
ANR	2822795	Statement	)	56:37:1897:1897	2822660	49	True				
ANR	2822796	Statement	==	56:38:1898:1899	2822660	50	True				
ANR	2822797	Statement	'_'	56:40:1900:1902	2822660	51	True				
ANR	2822798	Statement	||	56:43:1903:1904	2822660	52	True				
ANR	2822799	Statement	(	56:45:1905:1905	2822660	53	True				
ANR	2822800	Statement	x	56:46:1906:1906	2822660	54	True				
ANR	2822801	Statement	)	56:47:1907:1907	2822660	55	True				
ANR	2822802	Statement	==	56:48:1908:1909	2822660	56	True				
ANR	2822803	Statement	'+'	56:50:1910:1912	2822660	57	True				
ANR	2822804	Statement	)	56:53:1913:1913	2822660	58	True				
ANR	2822805	ExpressionStatement	lq = * ( q - 1 )	58:2:1918:1931	2822660	59	True				
ANR	2822806	AssignmentExpression	lq = * ( q - 1 )		2822660	0		=			
ANR	2822807	Identifier	lq		2822660	0					
ANR	2822808	UnaryOperationExpression	* ( q - 1 )		2822660	1					
ANR	2822809	UnaryOperator	*		2822660	0					
ANR	2822810	AdditiveExpression	q - 1		2822660	1		-			
ANR	2822811	Identifier	q		2822660	0					
ANR	2822812	PrimaryExpression	1		2822660	1					
ANR	2822813	IfStatement	if ( isspecialver ( * p ) )		2822660	60					
ANR	2822814	Condition	isspecialver ( * p )	59:6:1939:1954	2822660	0	True				
ANR	2822815	CallExpression	isspecialver ( * p )		2822660	0					
ANR	2822816	Callee	isspecialver		2822660	0					
ANR	2822817	Identifier	isspecialver		2822660	0					
ANR	2822818	ArgumentList	* p		2822660	1					
ANR	2822819	Argument	* p		2822660	0					
ANR	2822820	UnaryOperationExpression	* p		2822660	0					
ANR	2822821	UnaryOperator	*		2822660	0					
ANR	2822822	Identifier	p		2822660	1					
ANR	2822823	CompoundStatement		25:24:511:511	2822660	1					
ANR	2822824	IfStatement	if ( lq != '.' )		2822660	0					
ANR	2822825	Condition	lq != '.'	60:7:1966:1974	2822660	0	True				
ANR	2822826	EqualityExpression	lq != '.'		2822660	0		!=			
ANR	2822827	Identifier	lq		2822660	0					
ANR	2822828	PrimaryExpression	'.'		2822660	1					
ANR	2822829	CompoundStatement		26:18:531:531	2822660	1					
ANR	2822830	ExpressionStatement	* q ++ = '.'	61:4:1983:1993	2822660	0	True				
ANR	2822831	AssignmentExpression	* q ++ = '.'		2822660	0		=			
ANR	2822832	UnaryOperationExpression	* q ++		2822660	0					
ANR	2822833	UnaryOperator	*		2822660	0					
ANR	2822834	PostIncDecOperationExpression	q ++		2822660	1					
ANR	2822835	Identifier	q		2822660	0					
ANR	2822836	IncDec	++		2822660	1					
ANR	2822837	PrimaryExpression	'.'		2822660	1					
ANR	2822838	ElseStatement	else		2822660	0					
ANR	2822839	IfStatement	if ( ( isndig ( lp ) && isdig ( * p ) ) || ( isdig ( lp ) && isndig ( * p ) ) )		2822660	0					
ANR	2822840	Condition	( isndig ( lp ) && isdig ( * p ) ) || ( isdig ( lp ) && isndig ( * p ) )	63:13:2013:2066	2822660	0	True				
ANR	2822841	OrExpression	( isndig ( lp ) && isdig ( * p ) ) || ( isdig ( lp ) && isndig ( * p ) )		2822660	0		||			
ANR	2822842	AndExpression	isndig ( lp ) && isdig ( * p )		2822660	0		&&			
ANR	2822843	CallExpression	isndig ( lp )		2822660	0					
ANR	2822844	Callee	isndig		2822660	0					
ANR	2822845	Identifier	isndig		2822660	0					
ANR	2822846	ArgumentList	lp		2822660	1					
ANR	2822847	Argument	lp		2822660	0					
ANR	2822848	Identifier	lp		2822660	0					
ANR	2822849	CallExpression	isdig ( * p )		2822660	1					
ANR	2822850	Callee	isdig		2822660	0					
ANR	2822851	Identifier	isdig		2822660	0					
ANR	2822852	ArgumentList	* p		2822660	1					
ANR	2822853	Argument	* p		2822660	0					
ANR	2822854	UnaryOperationExpression	* p		2822660	0					
ANR	2822855	UnaryOperator	*		2822660	0					
ANR	2822856	Identifier	p		2822660	1					
ANR	2822857	AndExpression	isdig ( lp ) && isndig ( * p )		2822660	1		&&			
ANR	2822858	CallExpression	isdig ( lp )		2822660	0					
ANR	2822859	Callee	isdig		2822660	0					
ANR	2822860	Identifier	isdig		2822660	0					
ANR	2822861	ArgumentList	lp		2822660	1					
ANR	2822862	Argument	lp		2822660	0					
ANR	2822863	Identifier	lp		2822660	0					
ANR	2822864	CallExpression	isndig ( * p )		2822660	1					
ANR	2822865	Callee	isndig		2822660	0					
ANR	2822866	Identifier	isndig		2822660	0					
ANR	2822867	ArgumentList	* p		2822660	1					
ANR	2822868	Argument	* p		2822660	0					
ANR	2822869	UnaryOperationExpression	* p		2822660	0					
ANR	2822870	UnaryOperator	*		2822660	0					
ANR	2822871	Identifier	p		2822660	1					
ANR	2822872	CompoundStatement		29:69:623:623	2822660	1					
ANR	2822873	IfStatement	if ( lq != '.' )		2822660	0					
ANR	2822874	Condition	lq != '.'	64:7:2078:2086	2822660	0	True				
ANR	2822875	EqualityExpression	lq != '.'		2822660	0		!=			
ANR	2822876	Identifier	lq		2822660	0					
ANR	2822877	PrimaryExpression	'.'		2822660	1					
ANR	2822878	CompoundStatement		30:18:643:643	2822660	1					
ANR	2822879	ExpressionStatement	* q ++ = '.'	65:4:2095:2105	2822660	0	True				
ANR	2822880	AssignmentExpression	* q ++ = '.'		2822660	0		=			
ANR	2822881	UnaryOperationExpression	* q ++		2822660	0					
ANR	2822882	UnaryOperator	*		2822660	0					
ANR	2822883	PostIncDecOperationExpression	q ++		2822660	1					
ANR	2822884	Identifier	q		2822660	0					
ANR	2822885	IncDec	++		2822660	1					
ANR	2822886	PrimaryExpression	'.'		2822660	1					
ANR	2822887	ExpressionStatement	* q ++ = * p	67:3:2115:2124	2822660	1	True				
ANR	2822888	AssignmentExpression	* q ++ = * p		2822660	0		=			
ANR	2822889	UnaryOperationExpression	* q ++		2822660	0					
ANR	2822890	UnaryOperator	*		2822660	0					
ANR	2822891	PostIncDecOperationExpression	q ++		2822660	1					
ANR	2822892	Identifier	q		2822660	0					
ANR	2822893	IncDec	++		2822660	1					
ANR	2822894	UnaryOperationExpression	* p		2822660	1					
ANR	2822895	UnaryOperator	*		2822660	0					
ANR	2822896	Identifier	p		2822660	1					
ANR	2822897	ElseStatement	else		2822660	0					
ANR	2822898	IfStatement	if ( ! isalnum ( * p ) )		2822660	0					
ANR	2822899	Condition	! isalnum ( * p )	68:13:2139:2150	2822660	0	True				
ANR	2822900	UnaryOperationExpression	! isalnum ( * p )		2822660	0					
ANR	2822901	UnaryOperator	!		2822660	0					
ANR	2822902	CallExpression	isalnum ( * p )		2822660	1					
ANR	2822903	Callee	isalnum		2822660	0					
ANR	2822904	Identifier	isalnum		2822660	0					
ANR	2822905	ArgumentList	* p		2822660	1					
ANR	2822906	Argument	* p		2822660	0					
ANR	2822907	UnaryOperationExpression	* p		2822660	0					
ANR	2822908	UnaryOperator	*		2822660	0					
ANR	2822909	Identifier	p		2822660	1					
ANR	2822910	CompoundStatement		34:27:707:707	2822660	1					
ANR	2822911	IfStatement	if ( lq != '.' )		2822660	0					
ANR	2822912	Condition	lq != '.'	69:7:2162:2170	2822660	0	True				
ANR	2822913	EqualityExpression	lq != '.'		2822660	0		!=			
ANR	2822914	Identifier	lq		2822660	0					
ANR	2822915	PrimaryExpression	'.'		2822660	1					
ANR	2822916	CompoundStatement		35:18:727:727	2822660	1					
ANR	2822917	ExpressionStatement	* q ++ = '.'	70:4:2179:2189	2822660	0	True				
ANR	2822918	AssignmentExpression	* q ++ = '.'		2822660	0		=			
ANR	2822919	UnaryOperationExpression	* q ++		2822660	0					
ANR	2822920	UnaryOperator	*		2822660	0					
ANR	2822921	PostIncDecOperationExpression	q ++		2822660	1					
ANR	2822922	Identifier	q		2822660	0					
ANR	2822923	IncDec	++		2822660	1					
ANR	2822924	PrimaryExpression	'.'		2822660	1					
ANR	2822925	ElseStatement	else		2822660	0					
ANR	2822926	CompoundStatement		38:9:759:759	2822660	0					
ANR	2822927	ExpressionStatement	* q ++ = * p	73:3:2210:2219	2822660	0	True				
ANR	2822928	AssignmentExpression	* q ++ = * p		2822660	0		=			
ANR	2822929	UnaryOperationExpression	* q ++		2822660	0					
ANR	2822930	UnaryOperator	*		2822660	0					
ANR	2822931	PostIncDecOperationExpression	q ++		2822660	1					
ANR	2822932	Identifier	q		2822660	0					
ANR	2822933	IncDec	++		2822660	1					
ANR	2822934	UnaryOperationExpression	* p		2822660	1					
ANR	2822935	UnaryOperator	*		2822660	0					
ANR	2822936	Identifier	p		2822660	1					
ANR	2822937	ExpressionStatement	lp = * p ++	75:2:2227:2236	2822660	61	True				
ANR	2822938	AssignmentExpression	lp = * p ++		2822660	0		=			
ANR	2822939	Identifier	lp		2822660	0					
ANR	2822940	UnaryOperationExpression	* p ++		2822660	1					
ANR	2822941	UnaryOperator	*		2822660	0					
ANR	2822942	PostIncDecOperationExpression	p ++		2822660	1					
ANR	2822943	Identifier	p		2822660	0					
ANR	2822944	IncDec	++		2822660	1					
ANR	2822945	ExpressionStatement	* q ++ = '\\0'	77:4:2248:2259	2822660	8	True				
ANR	2822946	AssignmentExpression	* q ++ = '\\0'		2822660	0		=			
ANR	2822947	UnaryOperationExpression	* q ++		2822660	0					
ANR	2822948	UnaryOperator	*		2822660	0					
ANR	2822949	PostIncDecOperationExpression	q ++		2822660	1					
ANR	2822950	Identifier	q		2822660	0					
ANR	2822951	IncDec	++		2822660	1					
ANR	2822952	PrimaryExpression	'\\0'		2822660	1					
ANR	2822953	ReturnStatement	return buf ;	78:4:2265:2275	2822660	9	True				
ANR	2822954	Identifier	buf		2822660	0					
ANR	2822955	ReturnType	PHPAPI char *		2822660	1					
ANR	2822956	Identifier	php_canonicalize_version		2822660	2					
ANR	2822957	ParameterList	const char * version		2822660	3					
ANR	2822958	Parameter	const char * version	34:25:1424:1442	2822660	0	True				
ANR	2822959	ParameterType	const char *		2822660	0					
ANR	2822960	Identifier	version		2822660	1					
ANR	2822961	CFGEntryNode	ENTRY		2822660		True				
ANR	2822962	CFGExitNode	EXIT		2822660		True				
ANR	2822963	Symbol	* buf		2822660						
ANR	2822964	Symbol	lp		2822660						
ANR	2822965	Symbol	isalnum		2822660						
ANR	2822966	Symbol	lq		2822660						
ANR	2822967	Symbol	* ( q - 1 )		2822660						
ANR	2822968	Symbol	isdig		2822660						
ANR	2822969	Symbol	* p ++		2822660						
ANR	2822970	Symbol	* q ++		2822660						
ANR	2822971	Symbol	isspecialver		2822660						
ANR	2822972	Symbol	isndig		2822660						
ANR	2822973	Symbol	version		2822660						
ANR	2822974	Symbol	p		2822660						
ANR	2822975	Symbol	strlen		2822660						
ANR	2822976	Symbol	q		2822660						
ANR	2822977	Symbol	buf		2822660						
ANR	2822978	Symbol	len		2822660						
ANR	2822979	Symbol	* p		2822660						
ANR	2822980	Symbol	* q		2822660						
ANR	2822981	Symbol	safe_emalloc		2822660						
ANR	2822982	ClassDef	<unnamed>	84:8:2341:2398							
ANR	2822983	DeclStmt									
ANR	2822984	Decl							const char	const char *	name
ANR	2822985	DeclStmt									
ANR	2822986	Decl							int	int	order
ANR	2822987	DeclStmt									
ANR	2822988	Decl									special_forms_t
ANR	2822989	Function	compare_special_version_forms	89:0:2401:3037							
ANR	2822990	FunctionDef	"compare_special_version_forms (char * form1 , char * form2)"		2822989	0					
ANR	2822991	CompoundStatement		91:0:2468:3037	2822989	0					
ANR	2822992	IdentifierDeclStatement	"int found1 = - 1 , found2 = - 1 ;"	92:1:2471:2499	2822989	0	True				
ANR	2822993	IdentifierDecl	found1 = - 1		2822989	0					
ANR	2822994	IdentifierDeclType	int		2822989	0					
ANR	2822995	Identifier	found1		2822989	1					
ANR	2822996	AssignmentExpression	found1 = - 1		2822989	2		=			
ANR	2822997	Identifier	found1		2822989	0					
ANR	2822998	UnaryOperationExpression	- 1		2822989	1					
ANR	2822999	UnaryOperator	-		2822989	0					
ANR	2823000	PrimaryExpression	1		2822989	1					
ANR	2823001	IdentifierDecl	found2 = - 1		2822989	1					
ANR	2823002	IdentifierDeclType	int		2822989	0					
ANR	2823003	Identifier	found2		2822989	1					
ANR	2823004	AssignmentExpression	found2 = - 1		2822989	2		=			
ANR	2823005	Identifier	found2		2822989	0					
ANR	2823006	UnaryOperationExpression	- 1		2822989	1					
ANR	2823007	UnaryOperator	-		2822989	0					
ANR	2823008	PrimaryExpression	1		2822989	1					
ANR	2823009	Statement	special_forms_t	93:1:2502:2516	2822989	1	True				
ANR	2823010	Statement	special_forms	93:17:2518:2530	2822989	2	True				
ANR	2823011	Statement	[	93:30:2531:2531	2822989	3	True				
ANR	2823012	Statement	11	93:31:2532:2533	2822989	4	True				
ANR	2823013	Statement	]	93:33:2534:2534	2822989	5	True				
ANR	2823014	Statement	=	93:35:2536:2536	2822989	6	True				
ANR	2823015	CompoundStatement		3:37:69:69	2822989	7					
ANR	2823016	CompoundStatement		4:2:73:73	2822989	0					
ANR	2823017	Statement	"""dev"""	94:3:2543:2547	2822989	0	True				
ANR	2823018	Statement	","	94:8:2548:2548	2822989	1	True				
ANR	2823019	Statement	0	94:10:2550:2550	2822989	2	True				
ANR	2823020	Statement	","	94:12:2552:2552	2822989	1	True				
ANR	2823021	CompoundStatement		5:2:87:87	2822989	2					
ANR	2823022	Statement	"""alpha"""	95:3:2557:2563	2822989	0	True				
ANR	2823023	Statement	","	95:10:2564:2564	2822989	1	True				
ANR	2823024	Statement	1	95:12:2566:2566	2822989	2	True				
ANR	2823025	Statement	","	95:14:2568:2568	2822989	3	True				
ANR	2823026	CompoundStatement		6:2:103:103	2822989	4					
ANR	2823027	Statement	"""a"""	96:3:2573:2575	2822989	0	True				
ANR	2823028	Statement	","	96:6:2576:2576	2822989	1	True				
ANR	2823029	Statement	1	96:8:2578:2578	2822989	2	True				
ANR	2823030	Statement	","	96:10:2580:2580	2822989	5	True				
ANR	2823031	CompoundStatement		7:2:115:115	2822989	6					
ANR	2823032	Statement	"""beta"""	97:3:2585:2590	2822989	0	True				
ANR	2823033	Statement	","	97:9:2591:2591	2822989	1	True				
ANR	2823034	Statement	2	97:11:2593:2593	2822989	2	True				
ANR	2823035	Statement	","	97:13:2595:2595	2822989	7	True				
ANR	2823036	CompoundStatement		8:2:130:130	2822989	8					
ANR	2823037	Statement	"""b"""	98:3:2600:2602	2822989	0	True				
ANR	2823038	Statement	","	98:6:2603:2603	2822989	1	True				
ANR	2823039	Statement	2	98:8:2605:2605	2822989	2	True				
ANR	2823040	Statement	","	98:10:2607:2607	2822989	9	True				
ANR	2823041	CompoundStatement		9:2:142:142	2822989	10					
ANR	2823042	Statement	"""RC"""	99:3:2612:2615	2822989	0	True				
ANR	2823043	Statement	","	99:7:2616:2616	2822989	1	True				
ANR	2823044	Statement	3	99:9:2618:2618	2822989	2	True				
ANR	2823045	Statement	","	99:11:2620:2620	2822989	11	True				
ANR	2823046	CompoundStatement		10:2:155:155	2822989	12					
ANR	2823047	Statement	"""rc"""	100:3:2625:2628	2822989	0	True				
ANR	2823048	Statement	","	100:7:2629:2629	2822989	1	True				
ANR	2823049	Statement	3	100:9:2631:2631	2822989	2	True				
ANR	2823050	Statement	","	100:11:2633:2633	2822989	13	True				
ANR	2823051	CompoundStatement		11:2:168:168	2822989	14					
ANR	2823052	Statement	"""#"""	101:3:2638:2640	2822989	0	True				
ANR	2823053	Statement	","	101:6:2641:2641	2822989	1	True				
ANR	2823054	Statement	4	101:8:2643:2643	2822989	2	True				
ANR	2823055	Statement	","	101:10:2645:2645	2822989	15	True				
ANR	2823056	CompoundStatement		12:2:180:180	2822989	16					
ANR	2823057	Statement	"""pl"""	102:3:2650:2653	2822989	0	True				
ANR	2823058	Statement	","	102:7:2654:2654	2822989	1	True				
ANR	2823059	Statement	5	102:9:2656:2656	2822989	2	True				
ANR	2823060	Statement	","	102:11:2658:2658	2822989	17	True				
ANR	2823061	CompoundStatement		13:2:193:193	2822989	18					
ANR	2823062	Statement	"""p"""	103:3:2663:2665	2822989	0	True				
ANR	2823063	Statement	","	103:6:2666:2666	2822989	1	True				
ANR	2823064	Statement	5	103:8:2668:2668	2822989	2	True				
ANR	2823065	Statement	","	103:10:2670:2670	2822989	19	True				
ANR	2823066	CompoundStatement		14:2:205:205	2822989	20					
ANR	2823067	Statement	NULL	104:3:2675:2678	2822989	0	True				
ANR	2823068	Statement	","	104:7:2679:2679	2822989	1	True				
ANR	2823069	Statement	0	104:9:2681:2681	2822989	2	True				
ANR	2823070	Statement	","	104:11:2683:2683	2822989	21	True				
ANR	2823071	ExpressionStatement		105:2:2687:2687	2822989	8	True				
ANR	2823072	IdentifierDeclStatement	special_forms_t * pp ;	106:1:2690:2709	2822989	9	True				
ANR	2823073	IdentifierDecl	* pp		2822989	0					
ANR	2823074	IdentifierDeclType	special_forms_t *		2822989	0					
ANR	2823075	Identifier	pp		2822989	1					
ANR	2823076	ForStatement	for ( pp = special_forms ; pp && pp -> name ; pp ++ )		2822989	10					
ANR	2823077	ForInit	pp = special_forms ;	108:6:2718:2736	2822989	0	True				
ANR	2823078	AssignmentExpression	pp = special_forms		2822989	0		=			
ANR	2823079	Identifier	pp		2822989	0					
ANR	2823080	Identifier	special_forms		2822989	1					
ANR	2823081	Condition	pp && pp -> name	108:26:2738:2751	2822989	1	True				
ANR	2823082	AndExpression	pp && pp -> name		2822989	0		&&			
ANR	2823083	Identifier	pp		2822989	0					
ANR	2823084	PtrMemberAccess	pp -> name		2822989	1					
ANR	2823085	Identifier	pp		2822989	0					
ANR	2823086	Identifier	name		2822989	1					
ANR	2823087	PostIncDecOperationExpression	pp ++	108:42:2754:2757	2822989	2	True				
ANR	2823088	Identifier	pp		2822989	0					
ANR	2823089	IncDec	++		2822989	1					
ANR	2823090	CompoundStatement		18:48:291:291	2822989	3					
ANR	2823091	IfStatement	"if ( strncmp ( form1 , pp -> name , strlen ( pp -> name ) ) == 0 )"		2822989	0					
ANR	2823092	Condition	"strncmp ( form1 , pp -> name , strlen ( pp -> name ) ) == 0"	109:6:2768:2814	2822989	0	True				
ANR	2823093	EqualityExpression	"strncmp ( form1 , pp -> name , strlen ( pp -> name ) ) == 0"		2822989	0		==			
ANR	2823094	CallExpression	"strncmp ( form1 , pp -> name , strlen ( pp -> name ) )"		2822989	0					
ANR	2823095	Callee	strncmp		2822989	0					
ANR	2823096	Identifier	strncmp		2822989	0					
ANR	2823097	ArgumentList	form1		2822989	1					
ANR	2823098	Argument	form1		2822989	0					
ANR	2823099	Identifier	form1		2822989	0					
ANR	2823100	Argument	pp -> name		2822989	1					
ANR	2823101	PtrMemberAccess	pp -> name		2822989	0					
ANR	2823102	Identifier	pp		2822989	0					
ANR	2823103	Identifier	name		2822989	1					
ANR	2823104	Argument	strlen ( pp -> name )		2822989	2					
ANR	2823105	CallExpression	strlen ( pp -> name )		2822989	0					
ANR	2823106	Callee	strlen		2822989	0					
ANR	2823107	Identifier	strlen		2822989	0					
ANR	2823108	ArgumentList	pp -> name		2822989	1					
ANR	2823109	Argument	pp -> name		2822989	0					
ANR	2823110	PtrMemberAccess	pp -> name		2822989	0					
ANR	2823111	Identifier	pp		2822989	0					
ANR	2823112	Identifier	name		2822989	1					
ANR	2823113	PrimaryExpression	0		2822989	1					
ANR	2823114	CompoundStatement		19:55:348:348	2822989	1					
ANR	2823115	ExpressionStatement	found1 = pp -> order	110:3:2822:2840	2822989	0	True				
ANR	2823116	AssignmentExpression	found1 = pp -> order		2822989	0		=			
ANR	2823117	Identifier	found1		2822989	0					
ANR	2823118	PtrMemberAccess	pp -> order		2822989	1					
ANR	2823119	Identifier	pp		2822989	0					
ANR	2823120	Identifier	order		2822989	1					
ANR	2823121	BreakStatement	break ;	111:3:2845:2850	2822989	1	True				
ANR	2823122	ForStatement	for ( pp = special_forms ; pp && pp -> name ; pp ++ )		2822989	11					
ANR	2823123	ForInit	pp = special_forms ;	114:6:2865:2883	2822989	0	True				
ANR	2823124	AssignmentExpression	pp = special_forms		2822989	0		=			
ANR	2823125	Identifier	pp		2822989	0					
ANR	2823126	Identifier	special_forms		2822989	1					
ANR	2823127	Condition	pp && pp -> name	114:26:2885:2898	2822989	1	True				
ANR	2823128	AndExpression	pp && pp -> name		2822989	0		&&			
ANR	2823129	Identifier	pp		2822989	0					
ANR	2823130	PtrMemberAccess	pp -> name		2822989	1					
ANR	2823131	Identifier	pp		2822989	0					
ANR	2823132	Identifier	name		2822989	1					
ANR	2823133	PostIncDecOperationExpression	pp ++	114:42:2901:2904	2822989	2	True				
ANR	2823134	Identifier	pp		2822989	0					
ANR	2823135	IncDec	++		2822989	1					
ANR	2823136	CompoundStatement		24:48:438:438	2822989	3					
ANR	2823137	IfStatement	"if ( strncmp ( form2 , pp -> name , strlen ( pp -> name ) ) == 0 )"		2822989	0					
ANR	2823138	Condition	"strncmp ( form2 , pp -> name , strlen ( pp -> name ) ) == 0"	115:6:2915:2961	2822989	0	True				
ANR	2823139	EqualityExpression	"strncmp ( form2 , pp -> name , strlen ( pp -> name ) ) == 0"		2822989	0		==			
ANR	2823140	CallExpression	"strncmp ( form2 , pp -> name , strlen ( pp -> name ) )"		2822989	0					
ANR	2823141	Callee	strncmp		2822989	0					
ANR	2823142	Identifier	strncmp		2822989	0					
ANR	2823143	ArgumentList	form2		2822989	1					
ANR	2823144	Argument	form2		2822989	0					
ANR	2823145	Identifier	form2		2822989	0					
ANR	2823146	Argument	pp -> name		2822989	1					
ANR	2823147	PtrMemberAccess	pp -> name		2822989	0					
ANR	2823148	Identifier	pp		2822989	0					
ANR	2823149	Identifier	name		2822989	1					
ANR	2823150	Argument	strlen ( pp -> name )		2822989	2					
ANR	2823151	CallExpression	strlen ( pp -> name )		2822989	0					
ANR	2823152	Callee	strlen		2822989	0					
ANR	2823153	Identifier	strlen		2822989	0					
ANR	2823154	ArgumentList	pp -> name		2822989	1					
ANR	2823155	Argument	pp -> name		2822989	0					
ANR	2823156	PtrMemberAccess	pp -> name		2822989	0					
ANR	2823157	Identifier	pp		2822989	0					
ANR	2823158	Identifier	name		2822989	1					
ANR	2823159	PrimaryExpression	0		2822989	1					
ANR	2823160	CompoundStatement		25:55:495:495	2822989	1					
ANR	2823161	ExpressionStatement	found2 = pp -> order	116:3:2969:2987	2822989	0	True				
ANR	2823162	AssignmentExpression	found2 = pp -> order		2822989	0		=			
ANR	2823163	Identifier	found2		2822989	0					
ANR	2823164	PtrMemberAccess	pp -> order		2822989	1					
ANR	2823165	Identifier	pp		2822989	0					
ANR	2823166	Identifier	order		2822989	1					
ANR	2823167	BreakStatement	break ;	117:3:2992:2997	2822989	1	True				
ANR	2823168	ReturnStatement	return sign ( found1 - found2 ) ;	120:1:3007:3035	2822989	12	True				
ANR	2823169	CallExpression	sign ( found1 - found2 )		2822989	0					
ANR	2823170	Callee	sign		2822989	0					
ANR	2823171	Identifier	sign		2822989	0					
ANR	2823172	ArgumentList	found1 - found2		2822989	1					
ANR	2823173	Argument	found1 - found2		2822989	0					
ANR	2823174	AdditiveExpression	found1 - found2		2822989	0		-			
ANR	2823175	Identifier	found1		2822989	0					
ANR	2823176	Identifier	found2		2822989	1					
ANR	2823177	ReturnType	static int		2822989	1					
ANR	2823178	Identifier	compare_special_version_forms		2822989	2					
ANR	2823179	ParameterList	"char * form1 , char * form2"		2822989	3					
ANR	2823180	Parameter	char * form1	90:30:2442:2452	2822989	0	True				
ANR	2823181	ParameterType	char *		2822989	0					
ANR	2823182	Identifier	form1		2822989	1					
ANR	2823183	Parameter	char * form2	90:43:2455:2465	2822989	1	True				
ANR	2823184	ParameterType	char *		2822989	0					
ANR	2823185	Identifier	form2		2822989	1					
ANR	2823186	CFGEntryNode	ENTRY		2822989		True				
ANR	2823187	CFGExitNode	EXIT		2822989		True				
ANR	2823188	Symbol	pp		2822989						
ANR	2823189	Symbol	found2		2822989						
ANR	2823190	Symbol	special_forms		2822989						
ANR	2823191	Symbol	strlen		2822989						
ANR	2823192	Symbol	strncmp		2822989						
ANR	2823193	Symbol	* pp		2822989						
ANR	2823194	Symbol	pp -> name		2822989						
ANR	2823195	Symbol	sign		2822989						
ANR	2823196	Symbol	form1		2822989						
ANR	2823197	Symbol	found1		2822989						
ANR	2823198	Symbol	pp -> order		2822989						
ANR	2823199	Symbol	form2		2822989						
ANR	2823200	Function	php_version_compare	126:0:3083:4738							
ANR	2823201	FunctionDef	"php_version_compare (const char * orig_ver1 , const char * orig_ver2)"		2823200	0					
ANR	2823202	CompoundStatement		128:0:3160:4738	2823200	0					
ANR	2823203	IdentifierDeclStatement	char * ver1 ;	129:1:3163:3173	2823200	0	True				
ANR	2823204	IdentifierDecl	* ver1		2823200	0					
ANR	2823205	IdentifierDeclType	char *		2823200	0					
ANR	2823206	Identifier	ver1		2823200	1					
ANR	2823207	IdentifierDeclStatement	char * ver2 ;	130:1:3176:3186	2823200	1	True				
ANR	2823208	IdentifierDecl	* ver2		2823200	0					
ANR	2823209	IdentifierDeclType	char *		2823200	0					
ANR	2823210	Identifier	ver2		2823200	1					
ANR	2823211	IdentifierDeclStatement	"char * p1 , * p2 , * n1 , * n2 ;"	131:1:3189:3212	2823200	2	True				
ANR	2823212	IdentifierDecl	* p1		2823200	0					
ANR	2823213	IdentifierDeclType	char *		2823200	0					
ANR	2823214	Identifier	p1		2823200	1					
ANR	2823215	IdentifierDecl	* p2		2823200	1					
ANR	2823216	IdentifierDeclType	char *		2823200	0					
ANR	2823217	Identifier	p2		2823200	1					
ANR	2823218	IdentifierDecl	* n1		2823200	2					
ANR	2823219	IdentifierDeclType	char *		2823200	0					
ANR	2823220	Identifier	n1		2823200	1					
ANR	2823221	IdentifierDecl	* n2		2823200	3					
ANR	2823222	IdentifierDeclType	char *		2823200	0					
ANR	2823223	Identifier	n2		2823200	1					
ANR	2823224	IdentifierDeclStatement	"long l1 , l2 ;"	132:1:3215:3226	2823200	3	True				
ANR	2823225	IdentifierDecl	l1		2823200	0					
ANR	2823226	IdentifierDeclType	long		2823200	0					
ANR	2823227	Identifier	l1		2823200	1					
ANR	2823228	IdentifierDecl	l2		2823200	1					
ANR	2823229	IdentifierDeclType	long		2823200	0					
ANR	2823230	Identifier	l2		2823200	1					
ANR	2823231	IdentifierDeclStatement	int compare = 0 ;	133:1:3229:3244	2823200	4	True				
ANR	2823232	IdentifierDecl	compare = 0		2823200	0					
ANR	2823233	IdentifierDeclType	int		2823200	0					
ANR	2823234	Identifier	compare		2823200	1					
ANR	2823235	AssignmentExpression	compare = 0		2823200	2		=			
ANR	2823236	Identifier	compare		2823200	0					
ANR	2823237	PrimaryExpression	0		2823200	1					
ANR	2823238	IfStatement	if ( ! * orig_ver1 || ! * orig_ver2 )		2823200	5					
ANR	2823239	Condition	! * orig_ver1 || ! * orig_ver2	135:5:3252:3277	2823200	0	True				
ANR	2823240	OrExpression	! * orig_ver1 || ! * orig_ver2		2823200	0		||			
ANR	2823241	UnaryOperationExpression	! * orig_ver1		2823200	0					
ANR	2823242	UnaryOperator	!		2823200	0					
ANR	2823243	UnaryOperationExpression	* orig_ver1		2823200	1					
ANR	2823244	UnaryOperator	*		2823200	0					
ANR	2823245	Identifier	orig_ver1		2823200	1					
ANR	2823246	UnaryOperationExpression	! * orig_ver2		2823200	1					
ANR	2823247	UnaryOperator	!		2823200	0					
ANR	2823248	UnaryOperationExpression	* orig_ver2		2823200	1					
ANR	2823249	UnaryOperator	*		2823200	0					
ANR	2823250	Identifier	orig_ver2		2823200	1					
ANR	2823251	CompoundStatement		8:33:119:119	2823200	1					
ANR	2823252	IfStatement	if ( ! * orig_ver1 && ! * orig_ver2 )		2823200	0					
ANR	2823253	Condition	! * orig_ver1 && ! * orig_ver2	136:6:3288:3313	2823200	0	True				
ANR	2823254	AndExpression	! * orig_ver1 && ! * orig_ver2		2823200	0		&&			
ANR	2823255	UnaryOperationExpression	! * orig_ver1		2823200	0					
ANR	2823256	UnaryOperator	!		2823200	0					
ANR	2823257	UnaryOperationExpression	* orig_ver1		2823200	1					
ANR	2823258	UnaryOperator	*		2823200	0					
ANR	2823259	Identifier	orig_ver1		2823200	1					
ANR	2823260	UnaryOperationExpression	! * orig_ver2		2823200	1					
ANR	2823261	UnaryOperator	!		2823200	0					
ANR	2823262	UnaryOperationExpression	* orig_ver2		2823200	1					
ANR	2823263	UnaryOperator	*		2823200	0					
ANR	2823264	Identifier	orig_ver2		2823200	1					
ANR	2823265	CompoundStatement		9:34:155:155	2823200	1					
ANR	2823266	ReturnStatement	return 0 ;	137:3:3321:3329	2823200	0	True				
ANR	2823267	PrimaryExpression	0		2823200	0					
ANR	2823268	ElseStatement	else		2823200	0					
ANR	2823269	CompoundStatement		11:9:179:179	2823200	0					
ANR	2823270	ReturnStatement	return * orig_ver1 ? 1 : - 1 ;	139:3:3345:3371	2823200	0	True				
ANR	2823271	ConditionalExpression	* orig_ver1 ? 1 : - 1		2823200	0					
ANR	2823272	Condition	* orig_ver1		2823200	0					
ANR	2823273	UnaryOperationExpression	* orig_ver1		2823200	0					
ANR	2823274	UnaryOperator	*		2823200	0					
ANR	2823275	Identifier	orig_ver1		2823200	1					
ANR	2823276	PrimaryExpression	1		2823200	1					
ANR	2823277	UnaryOperationExpression	- 1		2823200	2					
ANR	2823278	UnaryOperator	-		2823200	0					
ANR	2823279	PrimaryExpression	1		2823200	1					
ANR	2823280	IfStatement	if ( orig_ver1 [ 0 ] == '#' )		2823200	6					
ANR	2823281	Condition	orig_ver1 [ 0 ] == '#'	142:5:3385:3403	2823200	0	True				
ANR	2823282	EqualityExpression	orig_ver1 [ 0 ] == '#'		2823200	0		==			
ANR	2823283	ArrayIndexing	orig_ver1 [ 0 ]		2823200	0					
ANR	2823284	Identifier	orig_ver1		2823200	0					
ANR	2823285	PrimaryExpression	0		2823200	1					
ANR	2823286	PrimaryExpression	'#'		2823200	1					
ANR	2823287	CompoundStatement		15:26:245:245	2823200	1					
ANR	2823288	ExpressionStatement	ver1 = estrdup ( orig_ver1 )	143:2:3410:3435	2823200	0	True				
ANR	2823289	AssignmentExpression	ver1 = estrdup ( orig_ver1 )		2823200	0		=			
ANR	2823290	Identifier	ver1		2823200	0					
ANR	2823291	CallExpression	estrdup ( orig_ver1 )		2823200	1					
ANR	2823292	Callee	estrdup		2823200	0					
ANR	2823293	Identifier	estrdup		2823200	0					
ANR	2823294	ArgumentList	orig_ver1		2823200	1					
ANR	2823295	Argument	orig_ver1		2823200	0					
ANR	2823296	Identifier	orig_ver1		2823200	0					
ANR	2823297	ElseStatement	else		2823200	0					
ANR	2823298	CompoundStatement		17:8:284:284	2823200	0					
ANR	2823299	ExpressionStatement	ver1 = php_canonicalize_version ( orig_ver1 )	145:2:3449:3491	2823200	0	True				
ANR	2823300	AssignmentExpression	ver1 = php_canonicalize_version ( orig_ver1 )		2823200	0		=			
ANR	2823301	Identifier	ver1		2823200	0					
ANR	2823302	CallExpression	php_canonicalize_version ( orig_ver1 )		2823200	1					
ANR	2823303	Callee	php_canonicalize_version		2823200	0					
ANR	2823304	Identifier	php_canonicalize_version		2823200	0					
ANR	2823305	ArgumentList	orig_ver1		2823200	1					
ANR	2823306	Argument	orig_ver1		2823200	0					
ANR	2823307	Identifier	orig_ver1		2823200	0					
ANR	2823308	IfStatement	if ( orig_ver2 [ 0 ] == '#' )		2823200	7					
ANR	2823309	Condition	orig_ver2 [ 0 ] == '#'	147:5:3501:3519	2823200	0	True				
ANR	2823310	EqualityExpression	orig_ver2 [ 0 ] == '#'		2823200	0		==			
ANR	2823311	ArrayIndexing	orig_ver2 [ 0 ]		2823200	0					
ANR	2823312	Identifier	orig_ver2		2823200	0					
ANR	2823313	PrimaryExpression	0		2823200	1					
ANR	2823314	PrimaryExpression	'#'		2823200	1					
ANR	2823315	CompoundStatement		20:26:361:361	2823200	1					
ANR	2823316	ExpressionStatement	ver2 = estrdup ( orig_ver2 )	148:2:3526:3551	2823200	0	True				
ANR	2823317	AssignmentExpression	ver2 = estrdup ( orig_ver2 )		2823200	0		=			
ANR	2823318	Identifier	ver2		2823200	0					
ANR	2823319	CallExpression	estrdup ( orig_ver2 )		2823200	1					
ANR	2823320	Callee	estrdup		2823200	0					
ANR	2823321	Identifier	estrdup		2823200	0					
ANR	2823322	ArgumentList	orig_ver2		2823200	1					
ANR	2823323	Argument	orig_ver2		2823200	0					
ANR	2823324	Identifier	orig_ver2		2823200	0					
ANR	2823325	ElseStatement	else		2823200	0					
ANR	2823326	CompoundStatement		22:8:400:400	2823200	0					
ANR	2823327	ExpressionStatement	ver2 = php_canonicalize_version ( orig_ver2 )	150:2:3565:3607	2823200	0	True				
ANR	2823328	AssignmentExpression	ver2 = php_canonicalize_version ( orig_ver2 )		2823200	0		=			
ANR	2823329	Identifier	ver2		2823200	0					
ANR	2823330	CallExpression	php_canonicalize_version ( orig_ver2 )		2823200	1					
ANR	2823331	Callee	php_canonicalize_version		2823200	0					
ANR	2823332	Identifier	php_canonicalize_version		2823200	0					
ANR	2823333	ArgumentList	orig_ver2		2823200	1					
ANR	2823334	Argument	orig_ver2		2823200	0					
ANR	2823335	Identifier	orig_ver2		2823200	0					
ANR	2823336	ExpressionStatement	p1 = n1 = ver1	152:1:3613:3627	2823200	8	True				
ANR	2823337	AssignmentExpression	p1 = n1 = ver1		2823200	0		=			
ANR	2823338	Identifier	p1		2823200	0					
ANR	2823339	AssignmentExpression	n1 = ver1		2823200	1		=			
ANR	2823340	Identifier	n1		2823200	0					
ANR	2823341	Identifier	ver1		2823200	1					
ANR	2823342	ExpressionStatement	p2 = n2 = ver2	153:1:3630:3644	2823200	9	True				
ANR	2823343	AssignmentExpression	p2 = n2 = ver2		2823200	0		=			
ANR	2823344	Identifier	p2		2823200	0					
ANR	2823345	AssignmentExpression	n2 = ver2		2823200	1		=			
ANR	2823346	Identifier	n2		2823200	0					
ANR	2823347	Identifier	ver2		2823200	1					
ANR	2823348	WhileStatement	while ( * p1 && * p2 && n1 && n2 )		2823200	10					
ANR	2823349	Condition	* p1 && * p2 && n1 && n2	154:8:3654:3675	2823200	0	True				
ANR	2823350	AndExpression	* p1 && * p2 && n1 && n2		2823200	0		&&			
ANR	2823351	UnaryOperationExpression	* p1		2823200	0					
ANR	2823352	UnaryOperator	*		2823200	0					
ANR	2823353	Identifier	p1		2823200	1					
ANR	2823354	AndExpression	* p2 && n1 && n2		2823200	1		&&			
ANR	2823355	UnaryOperationExpression	* p2		2823200	0					
ANR	2823356	UnaryOperator	*		2823200	0					
ANR	2823357	Identifier	p2		2823200	1					
ANR	2823358	AndExpression	n1 && n2		2823200	1		&&			
ANR	2823359	Identifier	n1		2823200	0					
ANR	2823360	Identifier	n2		2823200	1					
ANR	2823361	CompoundStatement		27:32:517:517	2823200	1					
ANR	2823362	IfStatement	"if ( ( n1 = strchr ( p1 , '.' ) ) != NULL )"		2823200	0					
ANR	2823363	Condition	"( n1 = strchr ( p1 , '.' ) ) != NULL"	155:6:3686:3715	2823200	0	True				
ANR	2823364	EqualityExpression	"( n1 = strchr ( p1 , '.' ) ) != NULL"		2823200	0		!=			
ANR	2823365	AssignmentExpression	"n1 = strchr ( p1 , '.' )"		2823200	0		=			
ANR	2823366	Identifier	n1		2823200	0					
ANR	2823367	CallExpression	"strchr ( p1 , '.' )"		2823200	1					
ANR	2823368	Callee	strchr		2823200	0					
ANR	2823369	Identifier	strchr		2823200	0					
ANR	2823370	ArgumentList	p1		2823200	1					
ANR	2823371	Argument	p1		2823200	0					
ANR	2823372	Identifier	p1		2823200	0					
ANR	2823373	Argument	'.'		2823200	1					
ANR	2823374	PrimaryExpression	'.'		2823200	0					
ANR	2823375	Identifier	NULL		2823200	1					
ANR	2823376	CompoundStatement		28:38:557:557	2823200	1					
ANR	2823377	ExpressionStatement	* n1 = '\\0'	156:3:3723:3733	2823200	0	True				
ANR	2823378	AssignmentExpression	* n1 = '\\0'		2823200	0		=			
ANR	2823379	UnaryOperationExpression	* n1		2823200	0					
ANR	2823380	UnaryOperator	*		2823200	0					
ANR	2823381	Identifier	n1		2823200	1					
ANR	2823382	PrimaryExpression	'\\0'		2823200	1					
ANR	2823383	IfStatement	"if ( ( n2 = strchr ( p2 , '.' ) ) != NULL )"		2823200	1					
ANR	2823384	Condition	"( n2 = strchr ( p2 , '.' ) ) != NULL"	158:6:3745:3774	2823200	0	True				
ANR	2823385	EqualityExpression	"( n2 = strchr ( p2 , '.' ) ) != NULL"		2823200	0		!=			
ANR	2823386	AssignmentExpression	"n2 = strchr ( p2 , '.' )"		2823200	0		=			
ANR	2823387	Identifier	n2		2823200	0					
ANR	2823388	CallExpression	"strchr ( p2 , '.' )"		2823200	1					
ANR	2823389	Callee	strchr		2823200	0					
ANR	2823390	Identifier	strchr		2823200	0					
ANR	2823391	ArgumentList	p2		2823200	1					
ANR	2823392	Argument	p2		2823200	0					
ANR	2823393	Identifier	p2		2823200	0					
ANR	2823394	Argument	'.'		2823200	1					
ANR	2823395	PrimaryExpression	'.'		2823200	0					
ANR	2823396	Identifier	NULL		2823200	1					
ANR	2823397	CompoundStatement		31:38:616:616	2823200	1					
ANR	2823398	ExpressionStatement	* n2 = '\\0'	159:3:3782:3792	2823200	0	True				
ANR	2823399	AssignmentExpression	* n2 = '\\0'		2823200	0		=			
ANR	2823400	UnaryOperationExpression	* n2		2823200	0					
ANR	2823401	UnaryOperator	*		2823200	0					
ANR	2823402	Identifier	n2		2823200	1					
ANR	2823403	PrimaryExpression	'\\0'		2823200	1					
ANR	2823404	IfStatement	if ( isdigit ( * p1 ) && isdigit ( * p2 ) )		2823200	2					
ANR	2823405	Condition	isdigit ( * p1 ) && isdigit ( * p2 )	161:6:3804:3831	2823200	0	True				
ANR	2823406	AndExpression	isdigit ( * p1 ) && isdigit ( * p2 )		2823200	0		&&			
ANR	2823407	CallExpression	isdigit ( * p1 )		2823200	0					
ANR	2823408	Callee	isdigit		2823200	0					
ANR	2823409	Identifier	isdigit		2823200	0					
ANR	2823410	ArgumentList	* p1		2823200	1					
ANR	2823411	Argument	* p1		2823200	0					
ANR	2823412	UnaryOperationExpression	* p1		2823200	0					
ANR	2823413	UnaryOperator	*		2823200	0					
ANR	2823414	Identifier	p1		2823200	1					
ANR	2823415	CallExpression	isdigit ( * p2 )		2823200	1					
ANR	2823416	Callee	isdigit		2823200	0					
ANR	2823417	Identifier	isdigit		2823200	0					
ANR	2823418	ArgumentList	* p2		2823200	1					
ANR	2823419	Argument	* p2		2823200	0					
ANR	2823420	UnaryOperationExpression	* p2		2823200	0					
ANR	2823421	UnaryOperator	*		2823200	0					
ANR	2823422	Identifier	p2		2823200	1					
ANR	2823423	CompoundStatement		34:36:673:673	2823200	1					
ANR	2823424	ExpressionStatement	"l1 = strtol ( p1 , NULL , 10 )"	163:3:3876:3901	2823200	0	True				
ANR	2823425	AssignmentExpression	"l1 = strtol ( p1 , NULL , 10 )"		2823200	0		=			
ANR	2823426	Identifier	l1		2823200	0					
ANR	2823427	CallExpression	"strtol ( p1 , NULL , 10 )"		2823200	1					
ANR	2823428	Callee	strtol		2823200	0					
ANR	2823429	Identifier	strtol		2823200	0					
ANR	2823430	ArgumentList	p1		2823200	1					
ANR	2823431	Argument	p1		2823200	0					
ANR	2823432	Identifier	p1		2823200	0					
ANR	2823433	Argument	NULL		2823200	1					
ANR	2823434	Identifier	NULL		2823200	0					
ANR	2823435	Argument	10		2823200	2					
ANR	2823436	PrimaryExpression	10		2823200	0					
ANR	2823437	ExpressionStatement	"l2 = strtol ( p2 , NULL , 10 )"	164:3:3906:3931	2823200	1	True				
ANR	2823438	AssignmentExpression	"l2 = strtol ( p2 , NULL , 10 )"		2823200	0		=			
ANR	2823439	Identifier	l2		2823200	0					
ANR	2823440	CallExpression	"strtol ( p2 , NULL , 10 )"		2823200	1					
ANR	2823441	Callee	strtol		2823200	0					
ANR	2823442	Identifier	strtol		2823200	0					
ANR	2823443	ArgumentList	p2		2823200	1					
ANR	2823444	Argument	p2		2823200	0					
ANR	2823445	Identifier	p2		2823200	0					
ANR	2823446	Argument	NULL		2823200	1					
ANR	2823447	Identifier	NULL		2823200	0					
ANR	2823448	Argument	10		2823200	2					
ANR	2823449	PrimaryExpression	10		2823200	0					
ANR	2823450	ExpressionStatement	compare = sign ( l1 - l2 )	165:3:3936:3959	2823200	2	True				
ANR	2823451	AssignmentExpression	compare = sign ( l1 - l2 )		2823200	0		=			
ANR	2823452	Identifier	compare		2823200	0					
ANR	2823453	CallExpression	sign ( l1 - l2 )		2823200	1					
ANR	2823454	Callee	sign		2823200	0					
ANR	2823455	Identifier	sign		2823200	0					
ANR	2823456	ArgumentList	l1 - l2		2823200	1					
ANR	2823457	Argument	l1 - l2		2823200	0					
ANR	2823458	AdditiveExpression	l1 - l2		2823200	0		-			
ANR	2823459	Identifier	l1		2823200	0					
ANR	2823460	Identifier	l2		2823200	1					
ANR	2823461	ElseStatement	else		2823200	0					
ANR	2823462	IfStatement	if ( ! isdigit ( * p1 ) && ! isdigit ( * p2 ) )		2823200	0					
ANR	2823463	Condition	! isdigit ( * p1 ) && ! isdigit ( * p2 )	166:13:3974:4003	2823200	0	True				
ANR	2823464	AndExpression	! isdigit ( * p1 ) && ! isdigit ( * p2 )		2823200	0		&&			
ANR	2823465	UnaryOperationExpression	! isdigit ( * p1 )		2823200	0					
ANR	2823466	UnaryOperator	!		2823200	0					
ANR	2823467	CallExpression	isdigit ( * p1 )		2823200	1					
ANR	2823468	Callee	isdigit		2823200	0					
ANR	2823469	Identifier	isdigit		2823200	0					
ANR	2823470	ArgumentList	* p1		2823200	1					
ANR	2823471	Argument	* p1		2823200	0					
ANR	2823472	UnaryOperationExpression	* p1		2823200	0					
ANR	2823473	UnaryOperator	*		2823200	0					
ANR	2823474	Identifier	p1		2823200	1					
ANR	2823475	UnaryOperationExpression	! isdigit ( * p2 )		2823200	1					
ANR	2823476	UnaryOperator	!		2823200	0					
ANR	2823477	CallExpression	isdigit ( * p2 )		2823200	1					
ANR	2823478	Callee	isdigit		2823200	0					
ANR	2823479	Identifier	isdigit		2823200	0					
ANR	2823480	ArgumentList	* p2		2823200	1					
ANR	2823481	Argument	* p2		2823200	0					
ANR	2823482	UnaryOperationExpression	* p2		2823200	0					
ANR	2823483	UnaryOperator	*		2823200	0					
ANR	2823484	Identifier	p2		2823200	1					
ANR	2823485	CompoundStatement		39:45:845:845	2823200	1					
ANR	2823486	ExpressionStatement	"compare = compare_special_version_forms ( p1 , p2 )"	168:3:4042:4089	2823200	0	True				
ANR	2823487	AssignmentExpression	"compare = compare_special_version_forms ( p1 , p2 )"		2823200	0		=			
ANR	2823488	Identifier	compare		2823200	0					
ANR	2823489	CallExpression	"compare_special_version_forms ( p1 , p2 )"		2823200	1					
ANR	2823490	Callee	compare_special_version_forms		2823200	0					
ANR	2823491	Identifier	compare_special_version_forms		2823200	0					
ANR	2823492	ArgumentList	p1		2823200	1					
ANR	2823493	Argument	p1		2823200	0					
ANR	2823494	Identifier	p1		2823200	0					
ANR	2823495	Argument	p2		2823200	1					
ANR	2823496	Identifier	p2		2823200	0					
ANR	2823497	ElseStatement	else		2823200	0					
ANR	2823498	CompoundStatement		42:9:939:939	2823200	0					
ANR	2823499	IfStatement	if ( isdigit ( * p1 ) )		2823200	0					
ANR	2823500	Condition	isdigit ( * p1 )	171:7:4143:4154	2823200	0	True				
ANR	2823501	CallExpression	isdigit ( * p1 )		2823200	0					
ANR	2823502	Callee	isdigit		2823200	0					
ANR	2823503	Identifier	isdigit		2823200	0					
ANR	2823504	ArgumentList	* p1		2823200	1					
ANR	2823505	Argument	* p1		2823200	0					
ANR	2823506	UnaryOperationExpression	* p1		2823200	0					
ANR	2823507	UnaryOperator	*		2823200	0					
ANR	2823508	Identifier	p1		2823200	1					
ANR	2823509	CompoundStatement		44:21:996:996	2823200	1					
ANR	2823510	ExpressionStatement	"compare = compare_special_version_forms ( ""#N#"" , p2 )"	172:4:4163:4213	2823200	0	True				
ANR	2823511	AssignmentExpression	"compare = compare_special_version_forms ( ""#N#"" , p2 )"		2823200	0		=			
ANR	2823512	Identifier	compare		2823200	0					
ANR	2823513	CallExpression	"compare_special_version_forms ( ""#N#"" , p2 )"		2823200	1					
ANR	2823514	Callee	compare_special_version_forms		2823200	0					
ANR	2823515	Identifier	compare_special_version_forms		2823200	0					
ANR	2823516	ArgumentList	"""#N#"""		2823200	1					
ANR	2823517	Argument	"""#N#"""		2823200	0					
ANR	2823518	PrimaryExpression	"""#N#"""		2823200	0					
ANR	2823519	Argument	p2		2823200	1					
ANR	2823520	Identifier	p2		2823200	0					
ANR	2823521	ElseStatement	else		2823200	0					
ANR	2823522	CompoundStatement		46:10:1064:1064	2823200	0					
ANR	2823523	ExpressionStatement	"compare = compare_special_version_forms ( p1 , ""#N#"" )"	174:4:4231:4281	2823200	0	True				
ANR	2823524	AssignmentExpression	"compare = compare_special_version_forms ( p1 , ""#N#"" )"		2823200	0		=			
ANR	2823525	Identifier	compare		2823200	0					
ANR	2823526	CallExpression	"compare_special_version_forms ( p1 , ""#N#"" )"		2823200	1					
ANR	2823527	Callee	compare_special_version_forms		2823200	0					
ANR	2823528	Identifier	compare_special_version_forms		2823200	0					
ANR	2823529	ArgumentList	p1		2823200	1					
ANR	2823530	Argument	p1		2823200	0					
ANR	2823531	Identifier	p1		2823200	0					
ANR	2823532	Argument	"""#N#"""		2823200	1					
ANR	2823533	PrimaryExpression	"""#N#"""		2823200	0					
ANR	2823534	IfStatement	if ( compare != 0 )		2823200	3					
ANR	2823535	Condition	compare != 0	177:6:4298:4309	2823200	0	True				
ANR	2823536	EqualityExpression	compare != 0		2823200	0		!=			
ANR	2823537	Identifier	compare		2823200	0					
ANR	2823538	PrimaryExpression	0		2823200	1					
ANR	2823539	CompoundStatement		50:20:1151:1151	2823200	1					
ANR	2823540	BreakStatement	break ;	178:3:4317:4322	2823200	0	True				
ANR	2823541	IfStatement	if ( n1 != NULL )		2823200	4					
ANR	2823542	Condition	n1 != NULL	180:6:4334:4343	2823200	0	True				
ANR	2823543	EqualityExpression	n1 != NULL		2823200	0		!=			
ANR	2823544	Identifier	n1		2823200	0					
ANR	2823545	Identifier	NULL		2823200	1					
ANR	2823546	CompoundStatement		53:18:1185:1185	2823200	1					
ANR	2823547	ExpressionStatement	p1 = n1 + 1	181:3:4351:4362	2823200	0	True				
ANR	2823548	AssignmentExpression	p1 = n1 + 1		2823200	0		=			
ANR	2823549	Identifier	p1		2823200	0					
ANR	2823550	AdditiveExpression	n1 + 1		2823200	1		+			
ANR	2823551	Identifier	n1		2823200	0					
ANR	2823552	PrimaryExpression	1		2823200	1					
ANR	2823553	IfStatement	if ( n2 != NULL )		2823200	5					
ANR	2823554	Condition	n2 != NULL	183:6:4374:4383	2823200	0	True				
ANR	2823555	EqualityExpression	n2 != NULL		2823200	0		!=			
ANR	2823556	Identifier	n2		2823200	0					
ANR	2823557	Identifier	NULL		2823200	1					
ANR	2823558	CompoundStatement		56:18:1225:1225	2823200	1					
ANR	2823559	ExpressionStatement	p2 = n2 + 1	184:3:4391:4402	2823200	0	True				
ANR	2823560	AssignmentExpression	p2 = n2 + 1		2823200	0		=			
ANR	2823561	Identifier	p2		2823200	0					
ANR	2823562	AdditiveExpression	n2 + 1		2823200	1		+			
ANR	2823563	Identifier	n2		2823200	0					
ANR	2823564	PrimaryExpression	1		2823200	1					
ANR	2823565	IfStatement	if ( compare == 0 )		2823200	11					
ANR	2823566	Condition	compare == 0	187:5:4416:4427	2823200	0	True				
ANR	2823567	EqualityExpression	compare == 0		2823200	0		==			
ANR	2823568	Identifier	compare		2823200	0					
ANR	2823569	PrimaryExpression	0		2823200	1					
ANR	2823570	CompoundStatement		60:19:1269:1269	2823200	1					
ANR	2823571	IfStatement	if ( n1 != NULL )		2823200	0					
ANR	2823572	Condition	n1 != NULL	188:6:4438:4447	2823200	0	True				
ANR	2823573	EqualityExpression	n1 != NULL		2823200	0		!=			
ANR	2823574	Identifier	n1		2823200	0					
ANR	2823575	Identifier	NULL		2823200	1					
ANR	2823576	CompoundStatement		61:18:1289:1289	2823200	1					
ANR	2823577	IfStatement	if ( isdigit ( * p1 ) )		2823200	0					
ANR	2823578	Condition	isdigit ( * p1 )	189:7:4459:4470	2823200	0	True				
ANR	2823579	CallExpression	isdigit ( * p1 )		2823200	0					
ANR	2823580	Callee	isdigit		2823200	0					
ANR	2823581	Identifier	isdigit		2823200	0					
ANR	2823582	ArgumentList	* p1		2823200	1					
ANR	2823583	Argument	* p1		2823200	0					
ANR	2823584	UnaryOperationExpression	* p1		2823200	0					
ANR	2823585	UnaryOperator	*		2823200	0					
ANR	2823586	Identifier	p1		2823200	1					
ANR	2823587	CompoundStatement		62:21:1312:1312	2823200	1					
ANR	2823588	ExpressionStatement	compare = 1	190:4:4479:4490	2823200	0	True				
ANR	2823589	AssignmentExpression	compare = 1		2823200	0		=			
ANR	2823590	Identifier	compare		2823200	0					
ANR	2823591	PrimaryExpression	1		2823200	1					
ANR	2823592	ElseStatement	else		2823200	0					
ANR	2823593	CompoundStatement		64:10:1341:1341	2823200	0					
ANR	2823594	ExpressionStatement	"compare = php_version_compare ( p1 , ""#N#"" )"	192:4:4508:4548	2823200	0	True				
ANR	2823595	AssignmentExpression	"compare = php_version_compare ( p1 , ""#N#"" )"		2823200	0		=			
ANR	2823596	Identifier	compare		2823200	0					
ANR	2823597	CallExpression	"php_version_compare ( p1 , ""#N#"" )"		2823200	1					
ANR	2823598	Callee	php_version_compare		2823200	0					
ANR	2823599	Identifier	php_version_compare		2823200	0					
ANR	2823600	ArgumentList	p1		2823200	1					
ANR	2823601	Argument	p1		2823200	0					
ANR	2823602	Identifier	p1		2823200	0					
ANR	2823603	Argument	"""#N#"""		2823200	1					
ANR	2823604	PrimaryExpression	"""#N#"""		2823200	0					
ANR	2823605	ElseStatement	else		2823200	0					
ANR	2823606	IfStatement	if ( n2 != NULL )		2823200	0					
ANR	2823607	Condition	n2 != NULL	194:13:4568:4577	2823200	0	True				
ANR	2823608	EqualityExpression	n2 != NULL		2823200	0		!=			
ANR	2823609	Identifier	n2		2823200	0					
ANR	2823610	Identifier	NULL		2823200	1					
ANR	2823611	CompoundStatement		67:25:1419:1419	2823200	1					
ANR	2823612	IfStatement	if ( isdigit ( * p2 ) )		2823200	0					
ANR	2823613	Condition	isdigit ( * p2 )	195:7:4589:4600	2823200	0	True				
ANR	2823614	CallExpression	isdigit ( * p2 )		2823200	0					
ANR	2823615	Callee	isdigit		2823200	0					
ANR	2823616	Identifier	isdigit		2823200	0					
ANR	2823617	ArgumentList	* p2		2823200	1					
ANR	2823618	Argument	* p2		2823200	0					
ANR	2823619	UnaryOperationExpression	* p2		2823200	0					
ANR	2823620	UnaryOperator	*		2823200	0					
ANR	2823621	Identifier	p2		2823200	1					
ANR	2823622	CompoundStatement		68:21:1442:1442	2823200	1					
ANR	2823623	ExpressionStatement	compare = - 1	196:4:4609:4621	2823200	0	True				
ANR	2823624	AssignmentExpression	compare = - 1		2823200	0		=			
ANR	2823625	Identifier	compare		2823200	0					
ANR	2823626	UnaryOperationExpression	- 1		2823200	1					
ANR	2823627	UnaryOperator	-		2823200	0					
ANR	2823628	PrimaryExpression	1		2823200	1					
ANR	2823629	ElseStatement	else		2823200	0					
ANR	2823630	CompoundStatement		70:10:1472:1472	2823200	0					
ANR	2823631	ExpressionStatement	"compare = php_version_compare ( ""#N#"" , p2 )"	198:4:4639:4679	2823200	0	True				
ANR	2823632	AssignmentExpression	"compare = php_version_compare ( ""#N#"" , p2 )"		2823200	0		=			
ANR	2823633	Identifier	compare		2823200	0					
ANR	2823634	CallExpression	"php_version_compare ( ""#N#"" , p2 )"		2823200	1					
ANR	2823635	Callee	php_version_compare		2823200	0					
ANR	2823636	Identifier	php_version_compare		2823200	0					
ANR	2823637	ArgumentList	"""#N#"""		2823200	1					
ANR	2823638	Argument	"""#N#"""		2823200	0					
ANR	2823639	PrimaryExpression	"""#N#"""		2823200	0					
ANR	2823640	Argument	p2		2823200	1					
ANR	2823641	Identifier	p2		2823200	0					
ANR	2823642	ExpressionStatement	efree ( ver1 )	202:1:4694:4705	2823200	12	True				
ANR	2823643	CallExpression	efree ( ver1 )		2823200	0					
ANR	2823644	Callee	efree		2823200	0					
ANR	2823645	Identifier	efree		2823200	0					
ANR	2823646	ArgumentList	ver1		2823200	1					
ANR	2823647	Argument	ver1		2823200	0					
ANR	2823648	Identifier	ver1		2823200	0					
ANR	2823649	ExpressionStatement	efree ( ver2 )	203:1:4708:4719	2823200	13	True				
ANR	2823650	CallExpression	efree ( ver2 )		2823200	0					
ANR	2823651	Callee	efree		2823200	0					
ANR	2823652	Identifier	efree		2823200	0					
ANR	2823653	ArgumentList	ver2		2823200	1					
ANR	2823654	Argument	ver2		2823200	0					
ANR	2823655	Identifier	ver2		2823200	0					
ANR	2823656	ReturnStatement	return compare ;	204:1:4722:4736	2823200	14	True				
ANR	2823657	Identifier	compare		2823200	0					
ANR	2823658	ReturnType	PHPAPI int		2823200	1					
ANR	2823659	Identifier	php_version_compare		2823200	2					
ANR	2823660	ParameterList	"const char * orig_ver1 , const char * orig_ver2"		2823200	3					
ANR	2823661	Parameter	const char * orig_ver1	127:20:3114:3134	2823200	0	True				
ANR	2823662	ParameterType	const char *		2823200	0					
ANR	2823663	Identifier	orig_ver1		2823200	1					
ANR	2823664	Parameter	const char * orig_ver2	127:43:3137:3157	2823200	1	True				
ANR	2823665	ParameterType	const char *		2823200	0					
ANR	2823666	Identifier	orig_ver2		2823200	1					
ANR	2823667	CFGEntryNode	ENTRY		2823200		True				
ANR	2823668	CFGExitNode	EXIT		2823200		True				
ANR	2823669	Symbol	p1		2823200						
ANR	2823670	Symbol	p2		2823200						
ANR	2823671	Symbol	compare		2823200						
ANR	2823672	Symbol	n1		2823200						
ANR	2823673	Symbol	n2		2823200						
ANR	2823674	Symbol	l1		2823200						
ANR	2823675	Symbol	l2		2823200						
ANR	2823676	Symbol	sign		2823200						
ANR	2823677	Symbol	strchr		2823200						
ANR	2823678	Symbol	php_canonicalize_version		2823200						
ANR	2823679	Symbol	compare_special_version_forms		2823200						
ANR	2823680	Symbol	strtol		2823200						
ANR	2823681	Symbol	ver2		2823200						
ANR	2823682	Symbol	ver1		2823200						
ANR	2823683	Symbol	isdigit		2823200						
ANR	2823684	Symbol	NULL		2823200						
ANR	2823685	Symbol	* p1		2823200						
ANR	2823686	Symbol	* n2		2823200						
ANR	2823687	Symbol	* n1		2823200						
ANR	2823688	Symbol	* p2		2823200						
ANR	2823689	Symbol	orig_ver2		2823200						
ANR	2823690	Symbol	orig_ver1		2823200						
ANR	2823691	Symbol	estrdup		2823200						
ANR	2823692	Symbol	php_version_compare		2823200						
ANR	2823693	Symbol	* orig_ver1		2823200						
ANR	2823694	Symbol	* orig_ver2		2823200						
ANR	2823695	DeclStmt									
ANR	2823696	Decl							char	char *	v1
ANR	2823697	Decl							char	char *	v2
ANR	2823698	Decl							char	char *	op
ANR	2823699	DeclStmt									
ANR	2823700	Decl							size_t	size_t	v1_len
ANR	2823701	Decl							size_t	size_t	v2_len
ANR	2823702	Decl							size_t	size_t	op_len
ANR	2823703	DeclStmt									
ANR	2823704	Decl							int	int	compare
ANR	2823705	Decl							int	int	argc
