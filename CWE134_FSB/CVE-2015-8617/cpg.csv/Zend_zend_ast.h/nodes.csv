command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	81566	File	data/converged/CVE-2015-8617_php-src/Zend_zend_ast.h								
ANR	81567	ClassDef	_zend_ast_kind	32:0:1484:3839							
ANR	81568	DeclStmt									
ANR	81569	Decl							uint16_t	uint16_t	zend_ast_kind
ANR	81570	DeclStmt									
ANR	81571	Decl							uint16_t	uint16_t	zend_ast_attr
ANR	81572	ClassDef	_zend_ast	154:0:3908:4178							
ANR	81573	DeclStmt									
ANR	81574	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	81575	DeclStmt									
ANR	81576	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	81577	DeclStmt									
ANR	81578	Decl							uint32_t	uint32_t	lineno
ANR	81579	DeclStmt									
ANR	81580	Decl							zend_ast	zend_ast * [ 1 ]	child
ANR	81581	ClassDef	_zend_ast_list	162:8:4268:4408							
ANR	81582	DeclStmt									
ANR	81583	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	81584	DeclStmt									
ANR	81585	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	81586	DeclStmt									
ANR	81587	Decl							uint32_t	uint32_t	lineno
ANR	81588	DeclStmt									
ANR	81589	Decl							uint32_t	uint32_t	children
ANR	81590	DeclStmt									
ANR	81591	Decl							zend_ast	zend_ast * [ 1 ]	child
ANR	81592	DeclStmt									
ANR	81593	Decl							_zend_ast_list	_zend_ast_list	zend_ast_list
ANR	81594	ClassDef	_zend_ast_zval	171:8:4459:4551							
ANR	81595	DeclStmt									
ANR	81596	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	81597	DeclStmt									
ANR	81598	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	81599	DeclStmt									
ANR	81600	Decl							zval	zval	val
ANR	81601	DeclStmt									
ANR	81602	Decl							_zend_ast_zval	_zend_ast_zval	zend_ast_zval
ANR	81603	ClassDef	_zend_ast_decl	178:8:4655:4935							
ANR	81604	DeclStmt									
ANR	81605	Decl							zend_ast_kind	zend_ast_kind	kind
ANR	81606	DeclStmt									
ANR	81607	Decl							zend_ast_attr	zend_ast_attr	attr
ANR	81608	DeclStmt									
ANR	81609	Decl							uint32_t	uint32_t	start_lineno
ANR	81610	DeclStmt									
ANR	81611	Decl							uint32_t	uint32_t	end_lineno
ANR	81612	DeclStmt									
ANR	81613	Decl							uint32_t	uint32_t	flags
ANR	81614	DeclStmt									
ANR	81615	Decl							unsigned char	unsigned char *	lex_pos
ANR	81616	DeclStmt									
ANR	81617	Decl							zend_string	zend_string *	doc_comment
ANR	81618	DeclStmt									
ANR	81619	Decl							zend_string	zend_string *	name
ANR	81620	DeclStmt									
ANR	81621	Decl							zend_ast	zend_ast * [ 4 ]	child
ANR	81622	DeclStmt									
ANR	81623	Decl							_zend_ast_decl	_zend_ast_decl	zend_ast_decl
ANR	81624	DeclStmt									
ANR	81625	Decl							void ( * ) ( zend_ast * ast )	void ( * ) ( zend_ast * ast )	zend_ast_process_t
ANR	81626	DeclStmt									
ANR	81627	Decl							extern ZEND_API zend_ast_process_t	extern ZEND_API zend_ast_process_t	zend_ast_process
ANR	81628	DeclStmt									
ANR	81629	Decl							ZEND_API zend_ast	"ZEND_API zend_ast * ( zval * zv , zend_ast_attr attr )"	zend_ast_create_zval_ex
ANR	81630	DeclStmt									
ANR	81631	Decl							ZEND_API zend_ast	"ZEND_API zend_ast * ( zend_ast_kind kind , uint32_t flags , uint32_t start_lineno , zend_string * doc_comment , zend_string * name , zend_ast * child0 , zend_ast * child1 , zend_ast * child2 , zend_ast * child3 )"	zend_ast_create_decl
ANR	81632	DeclStmt									
ANR	81633	Decl							ZEND_API zend_ast	"ZEND_API zend_ast * ( zend_ast * list , zend_ast * op )"	zend_ast_list_add
ANR	81634	DeclStmt									
ANR	81635	Decl							ZEND_API int	"ZEND_API int ( zval * result , zend_ast * ast , zend_class_entry * scope )"	zend_ast_evaluate
ANR	81636	DeclStmt									
ANR	81637	Decl							ZEND_API zend_string	"ZEND_API zend_string * ( const char * prefix , zend_ast * ast , const char * suffix )"	zend_ast_export
ANR	81638	DeclStmt									
ANR	81639	Decl							ZEND_API zend_ast	ZEND_API zend_ast * ( zend_ast * ast )	zend_ast_copy
ANR	81640	DeclStmt									
ANR	81641	Decl							ZEND_API void	ZEND_API void ( zend_ast * ast )	zend_ast_destroy
ANR	81642	DeclStmt									
ANR	81643	Decl							ZEND_API void	ZEND_API void ( zend_ast * ast )	zend_ast_destroy_and_free
ANR	81644	DeclStmt									
ANR	81645	Decl							void ( * ) ( zend_ast * * ast_ptr )	void ( * ) ( zend_ast * * ast_ptr )	zend_ast_apply_func
ANR	81646	DeclStmt									
ANR	81647	Decl							ZEND_API void	"ZEND_API void ( zend_ast * ast , zend_ast_apply_func fn )"	zend_ast_apply
ANR	81648	Function	zend_ast_is_list	216:0:6106:6227							
ANR	81649	FunctionDef	zend_ast_is_list (zend_ast * ast)		81648	0					
ANR	81650	CompoundStatement		216:68:6174:6227	81648	0					
ANR	81651	ReturnStatement	return ( ast -> kind >> ZEND_AST_IS_LIST_SHIFT ) & 1 ;	217:1:6177:6225	81648	0	True				
ANR	81652	BitAndExpression	( ast -> kind >> ZEND_AST_IS_LIST_SHIFT ) & 1		81648	0		&			
ANR	81653	ShiftExpression	ast -> kind >> ZEND_AST_IS_LIST_SHIFT		81648	0		>>			
ANR	81654	PtrMemberAccess	ast -> kind		81648	0					
ANR	81655	Identifier	ast		81648	0					
ANR	81656	Identifier	kind		81648	1					
ANR	81657	Identifier	ZEND_AST_IS_LIST_SHIFT		81648	1					
ANR	81658	PrimaryExpression	1		81648	1					
ANR	81659	ReturnType	static zend_always_inline zend_bool		81648	1					
ANR	81660	Identifier	zend_ast_is_list		81648	2					
ANR	81661	ParameterList	zend_ast * ast		81648	3					
ANR	81662	Parameter	zend_ast * ast	216:53:6159:6171	81648	0	True				
ANR	81663	ParameterType	zend_ast *		81648	0					
ANR	81664	Identifier	ast		81648	1					
ANR	81665	CFGEntryNode	ENTRY		81648		True				
ANR	81666	CFGExitNode	EXIT		81648		True				
ANR	81667	Symbol	ast -> kind		81648						
ANR	81668	Symbol	ast		81648						
ANR	81669	Symbol	* ast		81648						
ANR	81670	Symbol	ZEND_AST_IS_LIST_SHIFT		81648						
ANR	81671	Function	zend_ast_get_list	219:0:6229:6373							
ANR	81672	FunctionDef	zend_ast_get_list (zend_ast * ast)		81671	0					
ANR	81673	CompoundStatement		219:74:6303:6373	81671	0					
ANR	81674	ExpressionStatement	ZEND_ASSERT ( zend_ast_is_list ( ast ) )	220:1:6306:6340	81671	0	True				
ANR	81675	CallExpression	ZEND_ASSERT ( zend_ast_is_list ( ast ) )		81671	0					
ANR	81676	Callee	ZEND_ASSERT		81671	0					
ANR	81677	Identifier	ZEND_ASSERT		81671	0					
ANR	81678	ArgumentList	zend_ast_is_list ( ast )		81671	1					
ANR	81679	Argument	zend_ast_is_list ( ast )		81671	0					
ANR	81680	CallExpression	zend_ast_is_list ( ast )		81671	0					
ANR	81681	Callee	zend_ast_is_list		81671	0					
ANR	81682	Identifier	zend_ast_is_list		81671	0					
ANR	81683	ArgumentList	ast		81671	1					
ANR	81684	Argument	ast		81671	0					
ANR	81685	Identifier	ast		81671	0					
ANR	81686	ReturnStatement	return ( zend_ast_list * ) ast ;	221:1:6343:6371	81671	1	True				
ANR	81687	CastExpression	( zend_ast_list * ) ast		81671	0					
ANR	81688	CastTarget	zend_ast_list *		81671	0					
ANR	81689	Identifier	ast		81671	1					
ANR	81690	ReturnType	static zend_always_inline zend_ast_list *		81671	1					
ANR	81691	Identifier	zend_ast_get_list		81671	2					
ANR	81692	ParameterList	zend_ast * ast		81671	3					
ANR	81693	Parameter	zend_ast * ast	219:59:6288:6300	81671	0	True				
ANR	81694	ParameterType	zend_ast *		81671	0					
ANR	81695	Identifier	ast		81671	1					
ANR	81696	CFGEntryNode	ENTRY		81671		True				
ANR	81697	CFGExitNode	EXIT		81671		True				
ANR	81698	Symbol	ast		81671						
ANR	81699	Symbol	zend_ast_is_list		81671						
ANR	81700	Function	zend_ast_get_zval	224:0:6376:6524							
ANR	81701	FunctionDef	zend_ast_get_zval (zend_ast * ast)		81700	0					
ANR	81702	CompoundStatement		224:65:6441:6524	81700	0					
ANR	81703	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_ZVAL )	225:1:6444:6483	81700	0	True				
ANR	81704	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_ZVAL )		81700	0					
ANR	81705	Callee	ZEND_ASSERT		81700	0					
ANR	81706	Identifier	ZEND_ASSERT		81700	0					
ANR	81707	ArgumentList	ast -> kind == ZEND_AST_ZVAL		81700	1					
ANR	81708	Argument	ast -> kind == ZEND_AST_ZVAL		81700	0					
ANR	81709	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		81700	0		==			
ANR	81710	PtrMemberAccess	ast -> kind		81700	0					
ANR	81711	Identifier	ast		81700	0					
ANR	81712	Identifier	kind		81700	1					
ANR	81713	Identifier	ZEND_AST_ZVAL		81700	1					
ANR	81714	ReturnStatement	return & ( ( zend_ast_zval * ) ast ) -> val ;	226:1:6486:6522	81700	1	True				
ANR	81715	UnaryOperationExpression	& ( ( zend_ast_zval * ) ast ) -> val		81700	0					
ANR	81716	UnaryOperator	&		81700	0					
ANR	81717	PtrMemberAccess	( ( zend_ast_zval * ) ast ) -> val		81700	1					
ANR	81718	CastExpression	( zend_ast_zval * ) ast		81700	0					
ANR	81719	CastTarget	zend_ast_zval *		81700	0					
ANR	81720	Identifier	ast		81700	1					
ANR	81721	Identifier	val		81700	1					
ANR	81722	ReturnType	static zend_always_inline zval *		81700	1					
ANR	81723	Identifier	zend_ast_get_zval		81700	2					
ANR	81724	ParameterList	zend_ast * ast		81700	3					
ANR	81725	Parameter	zend_ast * ast	224:50:6426:6438	81700	0	True				
ANR	81726	ParameterType	zend_ast *		81700	0					
ANR	81727	Identifier	ast		81700	1					
ANR	81728	CFGEntryNode	ENTRY		81700		True				
ANR	81729	CFGExitNode	EXIT		81700		True				
ANR	81730	Symbol	ast -> kind		81700						
ANR	81731	Symbol	ast		81700						
ANR	81732	Symbol	* ast		81700						
ANR	81733	Symbol	& ( ( zend_ast_zval * ) ast ) -> val		81700						
ANR	81734	Symbol	ZEND_AST_ZVAL		81700						
ANR	81735	Function	zend_ast_get_str	228:0:6526:6697							
ANR	81736	FunctionDef	zend_ast_get_str (zend_ast * ast)		81735	0					
ANR	81737	CompoundStatement		228:71:6597:6697	81735	0					
ANR	81738	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	229:1:6600:6633	81735	0	True				
ANR	81739	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		81735	0					
ANR	81740	IdentifierDeclType	zval *		81735	0					
ANR	81741	Identifier	zv		81735	1					
ANR	81742	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		81735	2		=			
ANR	81743	Identifier	zv		81735	0					
ANR	81744	CallExpression	zend_ast_get_zval ( ast )		81735	1					
ANR	81745	Callee	zend_ast_get_zval		81735	0					
ANR	81746	Identifier	zend_ast_get_zval		81735	0					
ANR	81747	ArgumentList	ast		81735	1					
ANR	81748	Argument	ast		81735	0					
ANR	81749	Identifier	ast		81735	0					
ANR	81750	ExpressionStatement	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )	230:1:6636:6674	81735	1	True				
ANR	81751	CallExpression	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )		81735	0					
ANR	81752	Callee	ZEND_ASSERT		81735	0					
ANR	81753	Identifier	ZEND_ASSERT		81735	0					
ANR	81754	ArgumentList	Z_TYPE_P ( zv ) == IS_STRING		81735	1					
ANR	81755	Argument	Z_TYPE_P ( zv ) == IS_STRING		81735	0					
ANR	81756	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		81735	0		==			
ANR	81757	CallExpression	Z_TYPE_P ( zv )		81735	0					
ANR	81758	Callee	Z_TYPE_P		81735	0					
ANR	81759	Identifier	Z_TYPE_P		81735	0					
ANR	81760	ArgumentList	zv		81735	1					
ANR	81761	Argument	zv		81735	0					
ANR	81762	Identifier	zv		81735	0					
ANR	81763	Identifier	IS_STRING		81735	1					
ANR	81764	ReturnStatement	return Z_STR_P ( zv ) ;	231:1:6677:6695	81735	2	True				
ANR	81765	CallExpression	Z_STR_P ( zv )		81735	0					
ANR	81766	Callee	Z_STR_P		81735	0					
ANR	81767	Identifier	Z_STR_P		81735	0					
ANR	81768	ArgumentList	zv		81735	1					
ANR	81769	Argument	zv		81735	0					
ANR	81770	Identifier	zv		81735	0					
ANR	81771	ReturnType	static zend_always_inline zend_string *		81735	1					
ANR	81772	Identifier	zend_ast_get_str		81735	2					
ANR	81773	ParameterList	zend_ast * ast		81735	3					
ANR	81774	Parameter	zend_ast * ast	228:56:6582:6594	81735	0	True				
ANR	81775	ParameterType	zend_ast *		81735	0					
ANR	81776	Identifier	ast		81735	1					
ANR	81777	CFGEntryNode	ENTRY		81735		True				
ANR	81778	CFGExitNode	EXIT		81735		True				
ANR	81779	Symbol	ast		81735						
ANR	81780	Symbol	IS_STRING		81735						
ANR	81781	Symbol	Z_STR_P		81735						
ANR	81782	Symbol	zend_ast_get_zval		81735						
ANR	81783	Symbol	zv		81735						
ANR	81784	Symbol	Z_TYPE_P		81735						
ANR	81785	Function	zend_ast_get_num_children	234:0:6700:6866							
ANR	81786	FunctionDef	zend_ast_get_num_children (zend_ast * ast)		81785	0					
ANR	81787	CompoundStatement		234:76:6776:6866	81785	0					
ANR	81788	ExpressionStatement	ZEND_ASSERT ( ! zend_ast_is_list ( ast ) )	235:1:6779:6814	81785	0	True				
ANR	81789	CallExpression	ZEND_ASSERT ( ! zend_ast_is_list ( ast ) )		81785	0					
ANR	81790	Callee	ZEND_ASSERT		81785	0					
ANR	81791	Identifier	ZEND_ASSERT		81785	0					
ANR	81792	ArgumentList	! zend_ast_is_list ( ast )		81785	1					
ANR	81793	Argument	! zend_ast_is_list ( ast )		81785	0					
ANR	81794	UnaryOperationExpression	! zend_ast_is_list ( ast )		81785	0					
ANR	81795	UnaryOperator	!		81785	0					
ANR	81796	CallExpression	zend_ast_is_list ( ast )		81785	1					
ANR	81797	Callee	zend_ast_is_list		81785	0					
ANR	81798	Identifier	zend_ast_is_list		81785	0					
ANR	81799	ArgumentList	ast		81785	1					
ANR	81800	Argument	ast		81785	0					
ANR	81801	Identifier	ast		81785	0					
ANR	81802	ReturnStatement	return ast -> kind >> ZEND_AST_NUM_CHILDREN_SHIFT ;	236:1:6817:6864	81785	1	True				
ANR	81803	ShiftExpression	ast -> kind >> ZEND_AST_NUM_CHILDREN_SHIFT		81785	0		>>			
ANR	81804	PtrMemberAccess	ast -> kind		81785	0					
ANR	81805	Identifier	ast		81785	0					
ANR	81806	Identifier	kind		81785	1					
ANR	81807	Identifier	ZEND_AST_NUM_CHILDREN_SHIFT		81785	1					
ANR	81808	ReturnType	static zend_always_inline uint32_t		81785	1					
ANR	81809	Identifier	zend_ast_get_num_children		81785	2					
ANR	81810	ParameterList	zend_ast * ast		81785	3					
ANR	81811	Parameter	zend_ast * ast	234:61:6761:6773	81785	0	True				
ANR	81812	ParameterType	zend_ast *		81785	0					
ANR	81813	Identifier	ast		81785	1					
ANR	81814	CFGEntryNode	ENTRY		81785		True				
ANR	81815	CFGExitNode	EXIT		81785		True				
ANR	81816	Symbol	ast -> kind		81785						
ANR	81817	Symbol	ast		81785						
ANR	81818	Symbol	* ast		81785						
ANR	81819	Symbol	zend_ast_is_list		81785						
ANR	81820	Symbol	ZEND_AST_NUM_CHILDREN_SHIFT		81785						
ANR	81821	Function	zend_ast_get_lineno	238:0:6868:7071							
ANR	81822	FunctionDef	zend_ast_get_lineno (zend_ast * ast)		81821	0					
ANR	81823	CompoundStatement		238:70:6938:7071	81821	0					
ANR	81824	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		81821	0					
ANR	81825	Condition	ast -> kind == ZEND_AST_ZVAL	239:5:6945:6970	81821	0	True				
ANR	81826	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		81821	0		==			
ANR	81827	PtrMemberAccess	ast -> kind		81821	0					
ANR	81828	Identifier	ast		81821	0					
ANR	81829	Identifier	kind		81821	1					
ANR	81830	Identifier	ZEND_AST_ZVAL		81821	1					
ANR	81831	CompoundStatement		3:2:38:71	81821	1					
ANR	81832	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	240:2:6977:7010	81821	0	True				
ANR	81833	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		81821	0					
ANR	81834	IdentifierDeclType	zval *		81821	0					
ANR	81835	Identifier	zv		81821	1					
ANR	81836	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		81821	2		=			
ANR	81837	Identifier	zv		81821	0					
ANR	81838	CallExpression	zend_ast_get_zval ( ast )		81821	1					
ANR	81839	Callee	zend_ast_get_zval		81821	0					
ANR	81840	Identifier	zend_ast_get_zval		81821	0					
ANR	81841	ArgumentList	ast		81821	1					
ANR	81842	Argument	ast		81821	0					
ANR	81843	Identifier	ast		81821	0					
ANR	81844	ReturnStatement	return zv -> u2 . lineno ;	241:2:7014:7034	81821	1	True				
ANR	81845	MemberAccess	zv -> u2 . lineno		81821	0					
ANR	81846	PtrMemberAccess	zv -> u2		81821	0					
ANR	81847	Identifier	zv		81821	0					
ANR	81848	Identifier	u2		81821	1					
ANR	81849	Identifier	lineno		81821	1					
ANR	81850	ElseStatement	else		81821	0					
ANR	81851	CompoundStatement		5:8:105:105	81821	0					
ANR	81852	ReturnStatement	return ast -> lineno ;	243:2:7048:7066	81821	0	True				
ANR	81853	PtrMemberAccess	ast -> lineno		81821	0					
ANR	81854	Identifier	ast		81821	0					
ANR	81855	Identifier	lineno		81821	1					
ANR	81856	ReturnType	static zend_always_inline uint32_t		81821	1					
ANR	81857	Identifier	zend_ast_get_lineno		81821	2					
ANR	81858	ParameterList	zend_ast * ast		81821	3					
ANR	81859	Parameter	zend_ast * ast	238:55:6923:6935	81821	0	True				
ANR	81860	ParameterType	zend_ast *		81821	0					
ANR	81861	Identifier	ast		81821	1					
ANR	81862	CFGEntryNode	ENTRY		81821		True				
ANR	81863	CFGExitNode	EXIT		81821		True				
ANR	81864	Symbol	* zv		81821						
ANR	81865	Symbol	ast -> kind		81821						
ANR	81866	Symbol	ast		81821						
ANR	81867	Symbol	* ast		81821						
ANR	81868	Symbol	zv -> u2 . lineno		81821						
ANR	81869	Symbol	ast -> lineno		81821						
ANR	81870	Symbol	ZEND_AST_ZVAL		81821						
ANR	81871	Symbol	zv -> u2		81821						
ANR	81872	Symbol	zv		81821						
ANR	81873	Symbol	zend_ast_get_zval		81821						
ANR	81874	Function	zend_ast_create_zval	247:0:7074:7183							
ANR	81875	FunctionDef	zend_ast_create_zval (zval * zv)		81874	0					
ANR	81876	CompoundStatement		247:67:7141:7183	81874	0					
ANR	81877	ReturnStatement	"return zend_ast_create_zval_ex ( zv , 0 ) ;"	248:1:7144:7181	81874	0	True				
ANR	81878	CallExpression	"zend_ast_create_zval_ex ( zv , 0 )"		81874	0					
ANR	81879	Callee	zend_ast_create_zval_ex		81874	0					
ANR	81880	Identifier	zend_ast_create_zval_ex		81874	0					
ANR	81881	ArgumentList	zv		81874	1					
ANR	81882	Argument	zv		81874	0					
ANR	81883	Identifier	zv		81874	0					
ANR	81884	Argument	0		81874	1					
ANR	81885	PrimaryExpression	0		81874	0					
ANR	81886	ReturnType	static zend_always_inline zend_ast *		81874	1					
ANR	81887	Identifier	zend_ast_create_zval		81874	2					
ANR	81888	ParameterList	zval * zv		81874	3					
ANR	81889	Parameter	zval * zv	247:57:7131:7138	81874	0	True				
ANR	81890	ParameterType	zval *		81874	0					
ANR	81891	Identifier	zv		81874	1					
ANR	81892	CFGEntryNode	ENTRY		81874		True				
ANR	81893	CFGExitNode	EXIT		81874		True				
ANR	81894	Symbol	zend_ast_create_zval_ex		81874						
ANR	81895	Symbol	zv		81874						
ANR	81896	Function	zend_ast_create_zval_from_str	250:0:7185:7337							
ANR	81897	FunctionDef	zend_ast_create_zval_from_str (zend_string * str)		81896	0					
ANR	81898	CompoundStatement		250:84:7269:7337	81896	0					
ANR	81899	IdentifierDeclStatement	zval zv ;	251:1:7272:7279	81896	0	True				
ANR	81900	IdentifierDecl	zv		81896	0					
ANR	81901	IdentifierDeclType	zval		81896	0					
ANR	81902	Identifier	zv		81896	1					
ANR	81903	ExpressionStatement	"ZVAL_STR ( & zv , str )"	252:1:7282:7300	81896	1	True				
ANR	81904	CallExpression	"ZVAL_STR ( & zv , str )"		81896	0					
ANR	81905	Callee	ZVAL_STR		81896	0					
ANR	81906	Identifier	ZVAL_STR		81896	0					
ANR	81907	ArgumentList	& zv		81896	1					
ANR	81908	Argument	& zv		81896	0					
ANR	81909	UnaryOperationExpression	& zv		81896	0					
ANR	81910	UnaryOperator	&		81896	0					
ANR	81911	Identifier	zv		81896	1					
ANR	81912	Argument	str		81896	1					
ANR	81913	Identifier	str		81896	0					
ANR	81914	ReturnStatement	return zend_ast_create_zval ( & zv ) ;	253:1:7303:7335	81896	2	True				
ANR	81915	CallExpression	zend_ast_create_zval ( & zv )		81896	0					
ANR	81916	Callee	zend_ast_create_zval		81896	0					
ANR	81917	Identifier	zend_ast_create_zval		81896	0					
ANR	81918	ArgumentList	& zv		81896	1					
ANR	81919	Argument	& zv		81896	0					
ANR	81920	UnaryOperationExpression	& zv		81896	0					
ANR	81921	UnaryOperator	&		81896	0					
ANR	81922	Identifier	zv		81896	1					
ANR	81923	ReturnType	static zend_always_inline zend_ast *		81896	1					
ANR	81924	Identifier	zend_ast_create_zval_from_str		81896	2					
ANR	81925	ParameterList	zend_string * str		81896	3					
ANR	81926	Parameter	zend_string * str	250:66:7251:7266	81896	0	True				
ANR	81927	ParameterType	zend_string *		81896	0					
ANR	81928	Identifier	str		81896	1					
ANR	81929	CFGEntryNode	ENTRY		81896		True				
ANR	81930	CFGExitNode	EXIT		81896		True				
ANR	81931	Symbol	str		81896						
ANR	81932	Symbol	zend_ast_create_zval		81896						
ANR	81933	Symbol	& zv		81896						
ANR	81934	Symbol	zv		81896						
ANR	81935	Function	zend_ast_create_zval_from_long	255:0:7339:7492							
ANR	81936	FunctionDef	zend_ast_create_zval_from_long (zend_long lval)		81935	0					
ANR	81937	CompoundStatement		255:83:7422:7492	81935	0					
ANR	81938	IdentifierDeclStatement	zval zv ;	256:1:7425:7432	81935	0	True				
ANR	81939	IdentifierDecl	zv		81935	0					
ANR	81940	IdentifierDeclType	zval		81935	0					
ANR	81941	Identifier	zv		81935	1					
ANR	81942	ExpressionStatement	"ZVAL_LONG ( & zv , lval )"	257:1:7435:7455	81935	1	True				
ANR	81943	CallExpression	"ZVAL_LONG ( & zv , lval )"		81935	0					
ANR	81944	Callee	ZVAL_LONG		81935	0					
ANR	81945	Identifier	ZVAL_LONG		81935	0					
ANR	81946	ArgumentList	& zv		81935	1					
ANR	81947	Argument	& zv		81935	0					
ANR	81948	UnaryOperationExpression	& zv		81935	0					
ANR	81949	UnaryOperator	&		81935	0					
ANR	81950	Identifier	zv		81935	1					
ANR	81951	Argument	lval		81935	1					
ANR	81952	Identifier	lval		81935	0					
ANR	81953	ReturnStatement	return zend_ast_create_zval ( & zv ) ;	258:1:7458:7490	81935	2	True				
ANR	81954	CallExpression	zend_ast_create_zval ( & zv )		81935	0					
ANR	81955	Callee	zend_ast_create_zval		81935	0					
ANR	81956	Identifier	zend_ast_create_zval		81935	0					
ANR	81957	ArgumentList	& zv		81935	1					
ANR	81958	Argument	& zv		81935	0					
ANR	81959	UnaryOperationExpression	& zv		81935	0					
ANR	81960	UnaryOperator	&		81935	0					
ANR	81961	Identifier	zv		81935	1					
ANR	81962	ReturnType	static zend_always_inline zend_ast *		81935	1					
ANR	81963	Identifier	zend_ast_create_zval_from_long		81935	2					
ANR	81964	ParameterList	zend_long lval		81935	3					
ANR	81965	Parameter	zend_long lval	255:67:7406:7419	81935	0	True				
ANR	81966	ParameterType	zend_long		81935	0					
ANR	81967	Identifier	lval		81935	1					
ANR	81968	CFGEntryNode	ENTRY		81935		True				
ANR	81969	CFGExitNode	EXIT		81935		True				
ANR	81970	Symbol	zend_ast_create_zval		81935						
ANR	81971	Symbol	lval		81935						
ANR	81972	Symbol	& zv		81935						
ANR	81973	Symbol	zv		81935						
ANR	81974	Function	zend_ast_create_binary_op	261:0:7495:7672							
ANR	81975	FunctionDef	"zend_ast_create_binary_op (uint32_t opcode , zend_ast * op0 , zend_ast * op1)"		81974	0					
ANR	81976	CompoundStatement		261:109:7604:7672	81974	0					
ANR	81977	ReturnStatement	"return zend_ast_create_ex ( ZEND_AST_BINARY_OP , opcode , op0 , op1 ) ;"	262:1:7607:7670	81974	0	True				
ANR	81978	CallExpression	"zend_ast_create_ex ( ZEND_AST_BINARY_OP , opcode , op0 , op1 )"		81974	0					
ANR	81979	Callee	zend_ast_create_ex		81974	0					
ANR	81980	Identifier	zend_ast_create_ex		81974	0					
ANR	81981	ArgumentList	ZEND_AST_BINARY_OP		81974	1					
ANR	81982	Argument	ZEND_AST_BINARY_OP		81974	0					
ANR	81983	Identifier	ZEND_AST_BINARY_OP		81974	0					
ANR	81984	Argument	opcode		81974	1					
ANR	81985	Identifier	opcode		81974	0					
ANR	81986	Argument	op0		81974	2					
ANR	81987	Identifier	op0		81974	0					
ANR	81988	Argument	op1		81974	3					
ANR	81989	Identifier	op1		81974	0					
ANR	81990	ReturnType	static zend_always_inline zend_ast *		81974	1					
ANR	81991	Identifier	zend_ast_create_binary_op		81974	2					
ANR	81992	ParameterList	"uint32_t opcode , zend_ast * op0 , zend_ast * op1"		81974	3					
ANR	81993	Parameter	uint32_t opcode	261:62:7557:7571	81974	0	True				
ANR	81994	ParameterType	uint32_t		81974	0					
ANR	81995	Identifier	opcode		81974	1					
ANR	81996	Parameter	zend_ast * op0	261:79:7574:7586	81974	1	True				
ANR	81997	ParameterType	zend_ast *		81974	0					
ANR	81998	Identifier	op0		81974	1					
ANR	81999	Parameter	zend_ast * op1	261:94:7589:7601	81974	2	True				
ANR	82000	ParameterType	zend_ast *		81974	0					
ANR	82001	Identifier	op1		81974	1					
ANR	82002	CFGEntryNode	ENTRY		81974		True				
ANR	82003	CFGExitNode	EXIT		81974		True				
ANR	82004	Symbol	op1		81974						
ANR	82005	Symbol	zend_ast_create_ex		81974						
ANR	82006	Symbol	opcode		81974						
ANR	82007	Symbol	op0		81974						
ANR	82008	Symbol	ZEND_AST_BINARY_OP		81974						
ANR	82009	Function	zend_ast_create_assign_op	264:0:7674:7851							
ANR	82010	FunctionDef	"zend_ast_create_assign_op (uint32_t opcode , zend_ast * op0 , zend_ast * op1)"		82009	0					
ANR	82011	CompoundStatement		264:109:7783:7851	82009	0					
ANR	82012	ReturnStatement	"return zend_ast_create_ex ( ZEND_AST_ASSIGN_OP , opcode , op0 , op1 ) ;"	265:1:7786:7849	82009	0	True				
ANR	82013	CallExpression	"zend_ast_create_ex ( ZEND_AST_ASSIGN_OP , opcode , op0 , op1 )"		82009	0					
ANR	82014	Callee	zend_ast_create_ex		82009	0					
ANR	82015	Identifier	zend_ast_create_ex		82009	0					
ANR	82016	ArgumentList	ZEND_AST_ASSIGN_OP		82009	1					
ANR	82017	Argument	ZEND_AST_ASSIGN_OP		82009	0					
ANR	82018	Identifier	ZEND_AST_ASSIGN_OP		82009	0					
ANR	82019	Argument	opcode		82009	1					
ANR	82020	Identifier	opcode		82009	0					
ANR	82021	Argument	op0		82009	2					
ANR	82022	Identifier	op0		82009	0					
ANR	82023	Argument	op1		82009	3					
ANR	82024	Identifier	op1		82009	0					
ANR	82025	ReturnType	static zend_always_inline zend_ast *		82009	1					
ANR	82026	Identifier	zend_ast_create_assign_op		82009	2					
ANR	82027	ParameterList	"uint32_t opcode , zend_ast * op0 , zend_ast * op1"		82009	3					
ANR	82028	Parameter	uint32_t opcode	264:62:7736:7750	82009	0	True				
ANR	82029	ParameterType	uint32_t		82009	0					
ANR	82030	Identifier	opcode		82009	1					
ANR	82031	Parameter	zend_ast * op0	264:79:7753:7765	82009	1	True				
ANR	82032	ParameterType	zend_ast *		82009	0					
ANR	82033	Identifier	op0		82009	1					
ANR	82034	Parameter	zend_ast * op1	264:94:7768:7780	82009	2	True				
ANR	82035	ParameterType	zend_ast *		82009	0					
ANR	82036	Identifier	op1		82009	1					
ANR	82037	CFGEntryNode	ENTRY		82009		True				
ANR	82038	CFGExitNode	EXIT		82009		True				
ANR	82039	Symbol	op1		82009						
ANR	82040	Symbol	zend_ast_create_ex		82009						
ANR	82041	Symbol	opcode		82009						
ANR	82042	Symbol	op0		82009						
ANR	82043	Symbol	ZEND_AST_ASSIGN_OP		82009						
ANR	82044	Function	zend_ast_create_cast	267:0:7853:7996							
ANR	82045	FunctionDef	"zend_ast_create_cast (uint32_t type , zend_ast * op0)"		82044	0					
ANR	82046	CompoundStatement		267:87:7940:7996	82044	0					
ANR	82047	ReturnStatement	"return zend_ast_create_ex ( ZEND_AST_CAST , type , op0 ) ;"	268:1:7943:7994	82044	0	True				
ANR	82048	CallExpression	"zend_ast_create_ex ( ZEND_AST_CAST , type , op0 )"		82044	0					
ANR	82049	Callee	zend_ast_create_ex		82044	0					
ANR	82050	Identifier	zend_ast_create_ex		82044	0					
ANR	82051	ArgumentList	ZEND_AST_CAST		82044	1					
ANR	82052	Argument	ZEND_AST_CAST		82044	0					
ANR	82053	Identifier	ZEND_AST_CAST		82044	0					
ANR	82054	Argument	type		82044	1					
ANR	82055	Identifier	type		82044	0					
ANR	82056	Argument	op0		82044	2					
ANR	82057	Identifier	op0		82044	0					
ANR	82058	ReturnType	static zend_always_inline zend_ast *		82044	1					
ANR	82059	Identifier	zend_ast_create_cast		82044	2					
ANR	82060	ParameterList	"uint32_t type , zend_ast * op0"		82044	3					
ANR	82061	Parameter	uint32_t type	267:57:7910:7922	82044	0	True				
ANR	82062	ParameterType	uint32_t		82044	0					
ANR	82063	Identifier	type		82044	1					
ANR	82064	Parameter	zend_ast * op0	267:72:7925:7937	82044	1	True				
ANR	82065	ParameterType	zend_ast *		82044	0					
ANR	82066	Identifier	op0		82044	1					
ANR	82067	CFGEntryNode	ENTRY		82044		True				
ANR	82068	CFGExitNode	EXIT		82044		True				
ANR	82069	Symbol	ZEND_AST_CAST		82044						
ANR	82070	Symbol	zend_ast_create_ex		82044						
ANR	82071	Symbol	type		82044						
ANR	82072	Symbol	op0		82044						
