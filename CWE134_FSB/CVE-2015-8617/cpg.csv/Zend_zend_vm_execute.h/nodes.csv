command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	365712	File	data/converged/CVE-2015-8617_php-src/Zend_zend_vm_execute.h								
ANR	365713	DeclStmt									
ANR	365714	Decl							user_opcode_handler_t	user_opcode_handler_t [ 256 ]	zend_user_opcode_handlers
ANR	365715	DeclStmt									
ANR	365716	Decl							zend_uchar	zend_uchar [ 256 ]	zend_user_opcodes
ANR	365717	DeclStmt									
ANR	365718	Decl							const void	const void * *	zend_opcode_handlers
ANR	365719	DeclStmt									
ANR	365720	Decl							const void	"const void * ( zend_uchar opcode , const zend_op * op )"	zend_vm_get_opcode_handler
ANR	365721	DeclStmt									
ANR	365722	Decl							volatile execute_data	volatile execute_data ( ZEND_VM_FP_GLOBAL_REG )	__asm__
ANR	365723	DeclStmt									
ANR	365724	Decl							volatile opline	volatile opline ( ZEND_VM_IP_GLOBAL_REG )	__asm__
ANR	365725	DeclStmt									
ANR	365726	Decl							const zend_op	const zend_op *	opline
ANR	365727	Function	execute_ex	392:0:13394:14517							
ANR	365728	FunctionDef	execute_ex (zend_execute_data * ex)		365727	0					
ANR	365729	CompoundStatement		393:0:13442:14517	365727	0					
ANR	365730	Statement	DCL_OPLINE	394:1:13445:13454	365727	0	True				
ANR	365731	IdentifierDeclStatement	const zend_op * orig_opline = opline ;	397:1:13487:13522	365727	1	True				
ANR	365732	IdentifierDecl	* orig_opline = opline		365727	0					
ANR	365733	IdentifierDeclType	const zend_op *		365727	0					
ANR	365734	Identifier	orig_opline		365727	1					
ANR	365735	AssignmentExpression	* orig_opline = opline		365727	2		=			
ANR	365736	Identifier	opline		365727	0					
ANR	365737	Identifier	opline		365727	1					
ANR	365738	IdentifierDeclStatement	zend_execute_data * orig_execute_data = execute_data ;	400:1:13561:13612	365727	2	True				
ANR	365739	IdentifierDecl	* orig_execute_data = execute_data		365727	0					
ANR	365740	IdentifierDeclType	zend_execute_data *		365727	0					
ANR	365741	Identifier	orig_execute_data		365727	1					
ANR	365742	AssignmentExpression	* orig_execute_data = execute_data		365727	2		=			
ANR	365743	Identifier	execute_data		365727	0					
ANR	365744	Identifier	execute_data		365727	1					
ANR	365745	ExpressionStatement	execute_data = ex	401:1:13615:13632	365727	3	True				
ANR	365746	AssignmentExpression	execute_data = ex		365727	0		=			
ANR	365747	Identifier	execute_data		365727	0					
ANR	365748	Identifier	ex		365727	1					
ANR	365749	ExpressionStatement	LOAD_OPLINE ( )	407:1:13689:13702	365727	4	True				
ANR	365750	CallExpression	LOAD_OPLINE ( )		365727	0					
ANR	365751	Callee	LOAD_OPLINE		365727	0					
ANR	365752	Identifier	LOAD_OPLINE		365727	0					
ANR	365753	ArgumentList			365727	1					
ANR	365754	WhileStatement	while ( 1 )		365727	5					
ANR	365755	Condition	1	409:8:13713:13713	365727	0	True				
ANR	365756	PrimaryExpression	1		365727	0					
ANR	365757	CompoundStatement		19:5:351:358	365727	1					
ANR	365758	IdentifierDeclStatement	int ret ;	411:5:13794:13801	365727	0	True				
ANR	365759	IdentifierDecl	ret		365727	0					
ANR	365760	IdentifierDeclType	int		365727	0					
ANR	365761	Identifier	ret		365727	1					
ANR	365762	ExpressionStatement	( ( opcode_handler_t ) OPLINE -> handler ) ( ZEND_OPCODE_HANDLER_ARGS_PASSTHRU )	414:2:13881:13951	365727	1	True				
ANR	365763	CallExpression	( ( opcode_handler_t ) OPLINE -> handler ) ( ZEND_OPCODE_HANDLER_ARGS_PASSTHRU )		365727	0					
ANR	365764	Callee	( opcode_handler_t ) OPLINE -> handler		365727	0					
ANR	365765	CastExpression	( opcode_handler_t ) OPLINE -> handler		365727	0					
ANR	365766	CastTarget	opcode_handler_t		365727	0					
ANR	365767	PtrMemberAccess	OPLINE -> handler		365727	1					
ANR	365768	Identifier	OPLINE		365727	0					
ANR	365769	Identifier	handler		365727	1					
ANR	365770	ArgumentList	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		365727	1					
ANR	365771	Argument	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		365727	0					
ANR	365772	Identifier	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		365727	0					
ANR	365773	IfStatement	if ( UNEXPECTED ( ! OPLINE ) )		365727	2					
ANR	365774	Condition	UNEXPECTED ( ! OPLINE )	415:6:13959:13977	365727	0	True				
ANR	365775	CallExpression	UNEXPECTED ( ! OPLINE )		365727	0					
ANR	365776	Callee	UNEXPECTED		365727	0					
ANR	365777	Identifier	UNEXPECTED		365727	0					
ANR	365778	ArgumentList	! OPLINE		365727	1					
ANR	365779	Argument	! OPLINE		365727	0					
ANR	365780	UnaryOperationExpression	! OPLINE		365727	0					
ANR	365781	UnaryOperator	!		365727	0					
ANR	365782	Identifier	OPLINE		365727	1					
ANR	365783	CompoundStatement		29:2:725:776	365727	1					
ANR	365784	ExpressionStatement	execute_data = orig_execute_data	420:3:14132:14164	365727	0	True				
ANR	365785	AssignmentExpression	execute_data = orig_execute_data		365727	0		=			
ANR	365786	Identifier	execute_data		365727	0					
ANR	365787	Identifier	orig_execute_data		365727	1					
ANR	365788	IdentifierDeclStatement	ifdef ZEND_VM_IP_GLOBAL_REG opline = orig_opline ;	421:2:14168:14219	365727	1	True				
ANR	365789	IdentifierDecl	opline = orig_opline		365727	0					
ANR	365790	IdentifierDeclType	ifdef ZEND_VM_IP_GLOBAL_REG		365727	0					
ANR	365791	Identifier	opline		365727	1					
ANR	365792	AssignmentExpression	opline = orig_opline		365727	2		=			
ANR	365793	Identifier	orig_opline		365727	0					
ANR	365794	Identifier	orig_opline		365727	1					
ANR	365795	Statement	endif	423:2:14223:14227	365727	2	True				
ANR	365796	ReturnStatement	return ;	424:3:14232:14238	365727	3	True				
ANR	365797	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Arrived at end of main loop which shouldn't happen"" )"	438:1:14428:14515	365727	6	True				
ANR	365798	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Arrived at end of main loop which shouldn't happen"" )"		365727	0					
ANR	365799	Callee	zend_error_noreturn		365727	0					
ANR	365800	Identifier	zend_error_noreturn		365727	0					
ANR	365801	ArgumentList	E_CORE_ERROR		365727	1					
ANR	365802	Argument	E_CORE_ERROR		365727	0					
ANR	365803	Identifier	E_CORE_ERROR		365727	0					
ANR	365804	Argument	"""Arrived at end of main loop which shouldn't happen"""		365727	1					
ANR	365805	PrimaryExpression	"""Arrived at end of main loop which shouldn't happen"""		365727	0					
ANR	365806	ReturnType	ZEND_API void		365727	1					
ANR	365807	Identifier	execute_ex		365727	2					
ANR	365808	ParameterList	zend_execute_data * ex		365727	3					
ANR	365809	Parameter	zend_execute_data * ex	392:25:13419:13439	365727	0	True				
ANR	365810	ParameterType	zend_execute_data *		365727	0					
ANR	365811	Identifier	ex		365727	1					
ANR	365812	CFGEntryNode	ENTRY		365727		True				
ANR	365813	CFGExitNode	EXIT		365727		True				
ANR	365814	Symbol	ret		365727						
ANR	365815	Symbol	UNEXPECTED		365727						
ANR	365816	Symbol	orig_execute_data		365727						
ANR	365817	Symbol	ex		365727						
ANR	365818	Symbol	opline		365727						
ANR	365819	Symbol	E_CORE_ERROR		365727						
ANR	365820	Symbol	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		365727						
ANR	365821	Symbol	orig_opline		365727						
ANR	365822	Symbol	OPLINE		365727						
ANR	365823	Symbol	execute_data		365727						
ANR	365824	Function	zend_execute	441:0:14520:15213							
ANR	365825	FunctionDef	"zend_execute (zend_op_array * op_array , zval * return_value)"		365824	0					
ANR	365826	CompoundStatement		442:0:14592:15213	365824	0					
ANR	365827	IdentifierDeclStatement	zend_execute_data * execute_data ;	443:1:14595:14626	365824	0	True				
ANR	365828	IdentifierDecl	* execute_data		365824	0					
ANR	365829	IdentifierDeclType	zend_execute_data *		365824	0					
ANR	365830	Identifier	execute_data		365824	1					
ANR	365831	IfStatement	if ( EG ( exception ) != NULL )		365824	1					
ANR	365832	Condition	EG ( exception ) != NULL	445:5:14634:14654	365824	0	True				
ANR	365833	EqualityExpression	EG ( exception ) != NULL		365824	0		!=			
ANR	365834	CallExpression	EG ( exception )		365824	0					
ANR	365835	Callee	EG		365824	0					
ANR	365836	Identifier	EG		365824	0					
ANR	365837	ArgumentList	exception		365824	1					
ANR	365838	Argument	exception		365824	0					
ANR	365839	Identifier	exception		365824	0					
ANR	365840	Identifier	NULL		365824	1					
ANR	365841	CompoundStatement		4:28:64:64	365824	1					
ANR	365842	ReturnStatement	return ;	446:2:14661:14667	365824	0	True				
ANR	365843	ExpressionStatement	"execute_data = zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_CODE , ( zend_function * ) op_array , 0 , zend_get_called_scope ( EG ( current_execute_data ) ) , zend_get_this_object ( EG ( current_execute_data ) ) )"	449:1:14674:14866	365824	2	True				
ANR	365844	AssignmentExpression	"execute_data = zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_CODE , ( zend_function * ) op_array , 0 , zend_get_called_scope ( EG ( current_execute_data ) ) , zend_get_this_object ( EG ( current_execute_data ) ) )"		365824	0		=			
ANR	365845	Identifier	execute_data		365824	0					
ANR	365846	CallExpression	"zend_vm_stack_push_call_frame ( ZEND_CALL_TOP_CODE , ( zend_function * ) op_array , 0 , zend_get_called_scope ( EG ( current_execute_data ) ) , zend_get_this_object ( EG ( current_execute_data ) ) )"		365824	1					
ANR	365847	Callee	zend_vm_stack_push_call_frame		365824	0					
ANR	365848	Identifier	zend_vm_stack_push_call_frame		365824	0					
ANR	365849	ArgumentList	ZEND_CALL_TOP_CODE		365824	1					
ANR	365850	Argument	ZEND_CALL_TOP_CODE		365824	0					
ANR	365851	Identifier	ZEND_CALL_TOP_CODE		365824	0					
ANR	365852	Argument	( zend_function * ) op_array		365824	1					
ANR	365853	CastExpression	( zend_function * ) op_array		365824	0					
ANR	365854	CastTarget	zend_function *		365824	0					
ANR	365855	Identifier	op_array		365824	1					
ANR	365856	Argument	0		365824	2					
ANR	365857	PrimaryExpression	0		365824	0					
ANR	365858	Argument	zend_get_called_scope ( EG ( current_execute_data ) )		365824	3					
ANR	365859	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		365824	0					
ANR	365860	Callee	zend_get_called_scope		365824	0					
ANR	365861	Identifier	zend_get_called_scope		365824	0					
ANR	365862	ArgumentList	EG ( current_execute_data )		365824	1					
ANR	365863	Argument	EG ( current_execute_data )		365824	0					
ANR	365864	CallExpression	EG ( current_execute_data )		365824	0					
ANR	365865	Callee	EG		365824	0					
ANR	365866	Identifier	EG		365824	0					
ANR	365867	ArgumentList	current_execute_data		365824	1					
ANR	365868	Argument	current_execute_data		365824	0					
ANR	365869	Identifier	current_execute_data		365824	0					
ANR	365870	Argument	zend_get_this_object ( EG ( current_execute_data ) )		365824	4					
ANR	365871	CallExpression	zend_get_this_object ( EG ( current_execute_data ) )		365824	0					
ANR	365872	Callee	zend_get_this_object		365824	0					
ANR	365873	Identifier	zend_get_this_object		365824	0					
ANR	365874	ArgumentList	EG ( current_execute_data )		365824	1					
ANR	365875	Argument	EG ( current_execute_data )		365824	0					
ANR	365876	CallExpression	EG ( current_execute_data )		365824	0					
ANR	365877	Callee	EG		365824	0					
ANR	365878	Identifier	EG		365824	0					
ANR	365879	ArgumentList	current_execute_data		365824	1					
ANR	365880	Argument	current_execute_data		365824	0					
ANR	365881	Identifier	current_execute_data		365824	0					
ANR	365882	IfStatement	if ( EG ( current_execute_data ) )		365824	3					
ANR	365883	Condition	EG ( current_execute_data )	451:5:14873:14896	365824	0	True				
ANR	365884	CallExpression	EG ( current_execute_data )		365824	0					
ANR	365885	Callee	EG		365824	0					
ANR	365886	Identifier	EG		365824	0					
ANR	365887	ArgumentList	current_execute_data		365824	1					
ANR	365888	Argument	current_execute_data		365824	0					
ANR	365889	Identifier	current_execute_data		365824	0					
ANR	365890	CompoundStatement		10:31:306:306	365824	1					
ANR	365891	ExpressionStatement	execute_data -> symbol_table = zend_rebuild_symbol_table ( )	452:2:14903:14959	365824	0	True				
ANR	365892	AssignmentExpression	execute_data -> symbol_table = zend_rebuild_symbol_table ( )		365824	0		=			
ANR	365893	PtrMemberAccess	execute_data -> symbol_table		365824	0					
ANR	365894	Identifier	execute_data		365824	0					
ANR	365895	Identifier	symbol_table		365824	1					
ANR	365896	CallExpression	zend_rebuild_symbol_table ( )		365824	1					
ANR	365897	Callee	zend_rebuild_symbol_table		365824	0					
ANR	365898	Identifier	zend_rebuild_symbol_table		365824	0					
ANR	365899	ArgumentList			365824	1					
ANR	365900	ElseStatement	else		365824	0					
ANR	365901	CompoundStatement		12:8:376:376	365824	0					
ANR	365902	ExpressionStatement	execute_data -> symbol_table = & EG ( symbol_table )	454:2:14973:15019	365824	0	True				
ANR	365903	AssignmentExpression	execute_data -> symbol_table = & EG ( symbol_table )		365824	0		=			
ANR	365904	PtrMemberAccess	execute_data -> symbol_table		365824	0					
ANR	365905	Identifier	execute_data		365824	0					
ANR	365906	Identifier	symbol_table		365824	1					
ANR	365907	UnaryOperationExpression	& EG ( symbol_table )		365824	1					
ANR	365908	UnaryOperator	&		365824	0					
ANR	365909	CallExpression	EG ( symbol_table )		365824	1					
ANR	365910	Callee	EG		365824	0					
ANR	365911	Identifier	EG		365824	0					
ANR	365912	ArgumentList	symbol_table		365824	1					
ANR	365913	Argument	symbol_table		365824	0					
ANR	365914	Identifier	symbol_table		365824	0					
ANR	365915	ExpressionStatement	EX ( prev_execute_data ) = EG ( current_execute_data )	456:1:15025:15073	365824	4	True				
ANR	365916	AssignmentExpression	EX ( prev_execute_data ) = EG ( current_execute_data )		365824	0		=			
ANR	365917	CallExpression	EX ( prev_execute_data )		365824	0					
ANR	365918	Callee	EX		365824	0					
ANR	365919	Identifier	EX		365824	0					
ANR	365920	ArgumentList	prev_execute_data		365824	1					
ANR	365921	Argument	prev_execute_data		365824	0					
ANR	365922	Identifier	prev_execute_data		365824	0					
ANR	365923	CallExpression	EG ( current_execute_data )		365824	1					
ANR	365924	Callee	EG		365824	0					
ANR	365925	Identifier	EG		365824	0					
ANR	365926	ArgumentList	current_execute_data		365824	1					
ANR	365927	Argument	current_execute_data		365824	0					
ANR	365928	Identifier	current_execute_data		365824	0					
ANR	365929	ExpressionStatement	"i_init_execute_data ( execute_data , op_array , return_value )"	457:1:15076:15133	365824	5	True				
ANR	365930	CallExpression	"i_init_execute_data ( execute_data , op_array , return_value )"		365824	0					
ANR	365931	Callee	i_init_execute_data		365824	0					
ANR	365932	Identifier	i_init_execute_data		365824	0					
ANR	365933	ArgumentList	execute_data		365824	1					
ANR	365934	Argument	execute_data		365824	0					
ANR	365935	Identifier	execute_data		365824	0					
ANR	365936	Argument	op_array		365824	1					
ANR	365937	Identifier	op_array		365824	0					
ANR	365938	Argument	return_value		365824	2					
ANR	365939	Identifier	return_value		365824	0					
ANR	365940	ExpressionStatement	zend_execute_ex ( execute_data )	458:1:15136:15165	365824	6	True				
ANR	365941	CallExpression	zend_execute_ex ( execute_data )		365824	0					
ANR	365942	Callee	zend_execute_ex		365824	0					
ANR	365943	Identifier	zend_execute_ex		365824	0					
ANR	365944	ArgumentList	execute_data		365824	1					
ANR	365945	Argument	execute_data		365824	0					
ANR	365946	Identifier	execute_data		365824	0					
ANR	365947	ExpressionStatement	zend_vm_stack_free_call_frame ( execute_data )	459:1:15168:15211	365824	7	True				
ANR	365948	CallExpression	zend_vm_stack_free_call_frame ( execute_data )		365824	0					
ANR	365949	Callee	zend_vm_stack_free_call_frame		365824	0					
ANR	365950	Identifier	zend_vm_stack_free_call_frame		365824	0					
ANR	365951	ArgumentList	execute_data		365824	1					
ANR	365952	Argument	execute_data		365824	0					
ANR	365953	Identifier	execute_data		365824	0					
ANR	365954	ReturnType	ZEND_API void		365824	1					
ANR	365955	Identifier	zend_execute		365824	2					
ANR	365956	ParameterList	"zend_op_array * op_array , zval * return_value"		365824	3					
ANR	365957	Parameter	zend_op_array * op_array	441:27:14547:14569	365824	0	True				
ANR	365958	ParameterType	zend_op_array *		365824	0					
ANR	365959	Identifier	op_array		365824	1					
ANR	365960	Parameter	zval * return_value	441:52:14572:14589	365824	1	True				
ANR	365961	ParameterType	zval *		365824	0					
ANR	365962	Identifier	return_value		365824	1					
ANR	365963	CFGEntryNode	ENTRY		365824		True				
ANR	365964	CFGExitNode	EXIT		365824		True				
ANR	365965	Symbol	exception		365824						
ANR	365966	Symbol	return_value		365824						
ANR	365967	Symbol	EG		365824						
ANR	365968	Symbol	zend_vm_stack_push_call_frame		365824						
ANR	365969	Symbol	zend_rebuild_symbol_table		365824						
ANR	365970	Symbol	NULL		365824						
ANR	365971	Symbol	execute_data -> symbol_table		365824						
ANR	365972	Symbol	current_execute_data		365824						
ANR	365973	Symbol	symbol_table		365824						
ANR	365974	Symbol	prev_execute_data		365824						
ANR	365975	Symbol	zend_get_called_scope		365824						
ANR	365976	Symbol	& EG		365824						
ANR	365977	Symbol	execute_data		365824						
ANR	365978	Symbol	zend_get_this_object		365824						
ANR	365979	Symbol	EX		365824						
ANR	365980	Symbol	* execute_data		365824						
ANR	365981	Symbol	op_array		365824						
ANR	365982	Symbol	ZEND_CALL_TOP_CODE		365824						
ANR	365983	DeclStmt									
ANR	365984	Decl							zend_execute_data	zend_execute_data *	old_execute_data
ANR	365985	DeclStmt									
ANR	365986	Decl							uint32_t	uint32_t	call_info
ANR	365987	DeclStmt									
ANR	365988	Decl							zend_object	zend_object *	object
ANR	365989	DeclStmt									
ANR	365990	Decl							const zend_op	const zend_op *	old_opline
ANR	365991	DeclStmt									
ANR	365992	Decl							zend_array	zend_array *	symbol_table
ANR	365993	DeclStmt									
ANR	365994	Decl							USE_OPLINE	USE_OPLINE	ZEND_VM_SET_OPCODE
ANR	365995	DeclStmt									
ANR	365996	Decl							USE_OPLINE zend_execute_data	USE_OPLINE zend_execute_data *	call
ANR	365997	DeclStmt									
ANR	365998	Decl							zend_function	zend_function *	fbc
ANR	365999	DeclStmt									
ANR	366000	Decl							zval	zval *	ret
ANR	366001	DeclStmt									
ANR	366002	Decl							USE_OPLINE zend_execute_data	USE_OPLINE zend_execute_data *	call
ANR	366003	DeclStmt									
ANR	366004	Decl							zend_function	zend_function *	fbc
ANR	366005	DeclStmt									
ANR	366006	Decl							zval	zval *	ret
ANR	366007	DeclStmt									
ANR	366008	Decl							USE_OPLINE zend_execute_data	USE_OPLINE zend_execute_data *	call
ANR	366009	DeclStmt									
ANR	366010	Decl							zend_function	zend_function *	fbc
ANR	366011	DeclStmt									
ANR	366012	Decl							zval	zval *	ret
ANR	366013	DeclStmt									
ANR	366014	Decl							uint32_t	uint32_t	i
ANR	366015	DeclStmt									
ANR	366016	Decl							uint32_t	uint32_t	num_args
ANR	366017	DeclStmt									
ANR	366018	Decl							zval	zval *	p
ANR	366019	DeclStmt									
ANR	366020	Decl							USE_OPLINE zend_execute_data	USE_OPLINE zend_execute_data *	call
ANR	366021	DeclStmt									
ANR	366022	Decl							zend_function	zend_function *	fbc
ANR	366023	DeclStmt									
ANR	366024	Decl							zend_object	zend_object *	object
ANR	366025	DeclStmt									
ANR	366026	Decl							zval	zval *	ret
ANR	366027	DeclStmt									
ANR	366028	Decl							int	int	should_change_scope
ANR	366029	DeclStmt									
ANR	366030	Decl							uint32_t	uint32_t	i
ANR	366031	DeclStmt									
ANR	366032	Decl							uint32_t	uint32_t	num_args
ANR	366033	DeclStmt									
ANR	366034	Decl							zval	zval *	p
ANR	366035	DeclStmt									
ANR	366036	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	366037	DeclStmt									
ANR	366038	Decl							zval	zval *	args
ANR	366039	DeclStmt									
ANR	366040	Decl							int	int	arg_num
ANR	366041	DeclStmt									
ANR	366042	Decl							HashTable	HashTable *	ht
ANR	366043	DeclStmt									
ANR	366044	Decl							zval	zval *	arg
ANR	366045	Decl							zval	zval *	top
ANR	366046	DeclStmt									
ANR	366047	Decl							zend_string	zend_string *	name
ANR	366048	DeclStmt									
ANR	366049	Decl							uint32_t	uint32_t	i
ANR	366050	DeclStmt									
ANR	366051	Decl							int	int	separate
ANR	366052	DeclStmt									
ANR	366053	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366054	DeclStmt									
ANR	366055	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	366056	DeclStmt									
ANR	366057	Decl							zval	zval *	arg
ANR	366058	Decl							zval	zval *	top
ANR	366059	DeclStmt									
ANR	366060	Decl							zval	zval	key
ANR	366061	DeclStmt									
ANR	366062	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	366063	DeclStmt									
ANR	366064	Decl							zval	zval *	args
ANR	366065	DeclStmt									
ANR	366066	Decl							uint32_t	uint32_t	arg_num
ANR	366067	DeclStmt									
ANR	366068	Decl							HashTable	HashTable *	ht
ANR	366069	DeclStmt									
ANR	366070	Decl							zval	zval *	arg
ANR	366071	Decl							zval	zval *	param
ANR	366072	DeclStmt									
ANR	366073	Decl							int	int	separate
ANR	366074	DeclStmt									
ANR	366075	Decl							USE_OPLINE uint32_t	USE_OPLINE uint32_t	arg_num
ANR	366076	DeclStmt									
ANR	366077	Decl							zval	zval *	param
ANR	366078	DeclStmt									
ANR	366079	Decl							USE_OPLINE uint32_t	USE_OPLINE uint32_t	arg_num
ANR	366080	DeclStmt									
ANR	366081	Decl							uint32_t	uint32_t	arg_count
ANR	366082	DeclStmt									
ANR	366083	Decl							zval	zval *	params
ANR	366084	DeclStmt									
ANR	366085	Decl							zval	zval *	param
ANR	366086	Function	ZEND_HASH_FILL_PACKED	1237:2:37251:37856							
ANR	366087	FunctionDef	ZEND_HASH_FILL_PACKED (Z_ARRVAL_P ( params ))		366086	0					
ANR	366088	CompoundStatement		1237:44:37293:37856	366086	0					
ANR	366089	ExpressionStatement	param = EX_VAR_NUM ( EX ( func ) -> op_array . last_var + EX ( func ) -> op_array . T )	1238:3:37298:37368	366086	0	True				
ANR	366090	AssignmentExpression	param = EX_VAR_NUM ( EX ( func ) -> op_array . last_var + EX ( func ) -> op_array . T )		366086	0		=			
ANR	366091	Identifier	param		366086	0					
ANR	366092	CallExpression	EX_VAR_NUM ( EX ( func ) -> op_array . last_var + EX ( func ) -> op_array . T )		366086	1					
ANR	366093	Callee	EX_VAR_NUM		366086	0					
ANR	366094	Identifier	EX_VAR_NUM		366086	0					
ANR	366095	ArgumentList	EX ( func ) -> op_array . last_var + EX ( func ) -> op_array . T		366086	1					
ANR	366096	Argument	EX ( func ) -> op_array . last_var + EX ( func ) -> op_array . T		366086	0					
ANR	366097	AdditiveExpression	EX ( func ) -> op_array . last_var + EX ( func ) -> op_array . T		366086	0		+			
ANR	366098	MemberAccess	EX ( func ) -> op_array . last_var		366086	0					
ANR	366099	PtrMemberAccess	EX ( func ) -> op_array		366086	0					
ANR	366100	CallExpression	EX ( func )		366086	0					
ANR	366101	Callee	EX		366086	0					
ANR	366102	Identifier	EX		366086	0					
ANR	366103	ArgumentList	func		366086	1					
ANR	366104	Argument	func		366086	0					
ANR	366105	Identifier	func		366086	0					
ANR	366106	Identifier	op_array		366086	1					
ANR	366107	Identifier	last_var		366086	1					
ANR	366108	MemberAccess	EX ( func ) -> op_array . T		366086	1					
ANR	366109	PtrMemberAccess	EX ( func ) -> op_array		366086	0					
ANR	366110	CallExpression	EX ( func )		366086	0					
ANR	366111	Callee	EX		366086	0					
ANR	366112	Identifier	EX		366086	0					
ANR	366113	ArgumentList	func		366086	1					
ANR	366114	Argument	func		366086	0					
ANR	366115	Identifier	func		366086	0					
ANR	366116	Identifier	op_array		366086	1					
ANR	366117	Identifier	T		366086	1					
ANR	366118	IfStatement	if ( UNEXPECTED ( ( EX ( func ) -> op_array . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) != 0 ) )		366086	1					
ANR	366119	Condition	UNEXPECTED ( ( EX ( func ) -> op_array . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) != 0 )	1239:7:37377:37448	366086	0	True				
ANR	366120	CallExpression	UNEXPECTED ( ( EX ( func ) -> op_array . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) != 0 )		366086	0					
ANR	366121	Callee	UNEXPECTED		366086	0					
ANR	366122	Identifier	UNEXPECTED		366086	0					
ANR	366123	ArgumentList	( EX ( func ) -> op_array . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) != 0		366086	1					
ANR	366124	Argument	( EX ( func ) -> op_array . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) != 0		366086	0					
ANR	366125	EqualityExpression	( EX ( func ) -> op_array . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) != 0		366086	0		!=			
ANR	366126	BitAndExpression	EX ( func ) -> op_array . fn_flags & ZEND_ACC_HAS_TYPE_HINTS		366086	0		&			
ANR	366127	MemberAccess	EX ( func ) -> op_array . fn_flags		366086	0					
ANR	366128	PtrMemberAccess	EX ( func ) -> op_array		366086	0					
ANR	366129	CallExpression	EX ( func )		366086	0					
ANR	366130	Callee	EX		366086	0					
ANR	366131	Identifier	EX		366086	0					
ANR	366132	ArgumentList	func		366086	1					
ANR	366133	Argument	func		366086	0					
ANR	366134	Identifier	func		366086	0					
ANR	366135	Identifier	op_array		366086	1					
ANR	366136	Identifier	fn_flags		366086	1					
ANR	366137	Identifier	ZEND_ACC_HAS_TYPE_HINTS		366086	1					
ANR	366138	PrimaryExpression	0		366086	1					
ANR	366139	CompoundStatement		3:81:157:157	366086	1					
ANR	366140	DoStatement	do		366086	0					
ANR	366141	CompoundStatement		4:7:166:166	366086	0					
ANR	366142	ExpressionStatement	"zend_verify_arg_type ( EX ( func ) , arg_num , param , NULL , CACHE_ADDR ( opline -> op2 . num ) )"	1241:5:37467:37548	366086	0	True				
ANR	366143	CallExpression	"zend_verify_arg_type ( EX ( func ) , arg_num , param , NULL , CACHE_ADDR ( opline -> op2 . num ) )"		366086	0					
ANR	366144	Callee	zend_verify_arg_type		366086	0					
ANR	366145	Identifier	zend_verify_arg_type		366086	0					
ANR	366146	ArgumentList	EX ( func )		366086	1					
ANR	366147	Argument	EX ( func )		366086	0					
ANR	366148	CallExpression	EX ( func )		366086	0					
ANR	366149	Callee	EX		366086	0					
ANR	366150	Identifier	EX		366086	0					
ANR	366151	ArgumentList	func		366086	1					
ANR	366152	Argument	func		366086	0					
ANR	366153	Identifier	func		366086	0					
ANR	366154	Argument	arg_num		366086	1					
ANR	366155	Identifier	arg_num		366086	0					
ANR	366156	Argument	param		366086	2					
ANR	366157	Identifier	param		366086	0					
ANR	366158	Argument	NULL		366086	3					
ANR	366159	Identifier	NULL		366086	0					
ANR	366160	Argument	CACHE_ADDR ( opline -> op2 . num )		366086	4					
ANR	366161	CallExpression	CACHE_ADDR ( opline -> op2 . num )		366086	0					
ANR	366162	Callee	CACHE_ADDR		366086	0					
ANR	366163	Identifier	CACHE_ADDR		366086	0					
ANR	366164	ArgumentList	opline -> op2 . num		366086	1					
ANR	366165	Argument	opline -> op2 . num		366086	0					
ANR	366166	MemberAccess	opline -> op2 . num		366086	0					
ANR	366167	PtrMemberAccess	opline -> op2		366086	0					
ANR	366168	Identifier	opline		366086	0					
ANR	366169	Identifier	op2		366086	1					
ANR	366170	Identifier	num		366086	1					
ANR	366171	IfStatement	if ( Z_OPT_REFCOUNTED_P ( param ) )		366086	1					
ANR	366172	Condition	Z_OPT_REFCOUNTED_P ( param )	1242:9:37559:37583	366086	0	True				
ANR	366173	CallExpression	Z_OPT_REFCOUNTED_P ( param )		366086	0					
ANR	366174	Callee	Z_OPT_REFCOUNTED_P		366086	0					
ANR	366175	Identifier	Z_OPT_REFCOUNTED_P		366086	0					
ANR	366176	ArgumentList	param		366086	1					
ANR	366177	Argument	param		366086	0					
ANR	366178	Identifier	param		366086	0					
ANR	366179	ExpressionStatement	Z_ADDREF_P ( param )	1242:36:37586:37603	366086	1	True				
ANR	366180	CallExpression	Z_ADDREF_P ( param )		366086	0					
ANR	366181	Callee	Z_ADDREF_P		366086	0					
ANR	366182	Identifier	Z_ADDREF_P		366086	0					
ANR	366183	ArgumentList	param		366086	1					
ANR	366184	Argument	param		366086	0					
ANR	366185	Identifier	param		366086	0					
ANR	366186	ExpressionStatement	ZEND_HASH_FILL_ADD ( param )	1243:5:37610:37635	366086	2	True				
ANR	366187	CallExpression	ZEND_HASH_FILL_ADD ( param )		366086	0					
ANR	366188	Callee	ZEND_HASH_FILL_ADD		366086	0					
ANR	366189	Identifier	ZEND_HASH_FILL_ADD		366086	0					
ANR	366190	ArgumentList	param		366086	1					
ANR	366191	Argument	param		366086	0					
ANR	366192	Identifier	param		366086	0					
ANR	366193	ExpressionStatement	param ++	1244:5:37642:37649	366086	3	True				
ANR	366194	PostIncDecOperationExpression	param ++		366086	0					
ANR	366195	Identifier	param		366086	0					
ANR	366196	IncDec	++		366086	1					
ANR	366197	Condition	++ arg_num <= arg_count	1245:13:37664:37685	366086	1	True				
ANR	366198	RelationalExpression	++ arg_num <= arg_count		366086	0		<=			
ANR	366199	UnaryExpression	++ arg_num		366086	0					
ANR	366200	IncDec	++		366086	0					
ANR	366201	Identifier	arg_num		366086	1					
ANR	366202	Identifier	arg_count		366086	1					
ANR	366203	ElseStatement	else		366086	0					
ANR	366204	CompoundStatement		10:10:405:405	366086	0					
ANR	366205	DoStatement	do		366086	0					
ANR	366206	CompoundStatement		11:7:414:414	366086	0					
ANR	366207	IfStatement	if ( Z_OPT_REFCOUNTED_P ( param ) )		366086	0					
ANR	366208	Condition	Z_OPT_REFCOUNTED_P ( param )	1248:9:37719:37743	366086	0	True				
ANR	366209	CallExpression	Z_OPT_REFCOUNTED_P ( param )		366086	0					
ANR	366210	Callee	Z_OPT_REFCOUNTED_P		366086	0					
ANR	366211	Identifier	Z_OPT_REFCOUNTED_P		366086	0					
ANR	366212	ArgumentList	param		366086	1					
ANR	366213	Argument	param		366086	0					
ANR	366214	Identifier	param		366086	0					
ANR	366215	ExpressionStatement	Z_ADDREF_P ( param )	1248:36:37746:37763	366086	1	True				
ANR	366216	CallExpression	Z_ADDREF_P ( param )		366086	0					
ANR	366217	Callee	Z_ADDREF_P		366086	0					
ANR	366218	Identifier	Z_ADDREF_P		366086	0					
ANR	366219	ArgumentList	param		366086	1					
ANR	366220	Argument	param		366086	0					
ANR	366221	Identifier	param		366086	0					
ANR	366222	ExpressionStatement	ZEND_HASH_FILL_ADD ( param )	1249:5:37770:37795	366086	1	True				
ANR	366223	CallExpression	ZEND_HASH_FILL_ADD ( param )		366086	0					
ANR	366224	Callee	ZEND_HASH_FILL_ADD		366086	0					
ANR	366225	Identifier	ZEND_HASH_FILL_ADD		366086	0					
ANR	366226	ArgumentList	param		366086	1					
ANR	366227	Argument	param		366086	0					
ANR	366228	Identifier	param		366086	0					
ANR	366229	ExpressionStatement	param ++	1250:5:37802:37809	366086	2	True				
ANR	366230	PostIncDecOperationExpression	param ++		366086	0					
ANR	366231	Identifier	param		366086	0					
ANR	366232	IncDec	++		366086	1					
ANR	366233	Condition	++ arg_num <= arg_count	1251:13:37824:37845	366086	1	True				
ANR	366234	RelationalExpression	++ arg_num <= arg_count		366086	0		<=			
ANR	366235	UnaryExpression	++ arg_num		366086	0					
ANR	366236	IncDec	++		366086	0					
ANR	366237	Identifier	arg_num		366086	1					
ANR	366238	Identifier	arg_count		366086	1					
ANR	366239	Identifier	ZEND_HASH_FILL_PACKED		366086	1					
ANR	366240	ParameterList	Z_ARRVAL_P ( params )		366086	2					
ANR	366241	Parameter	Z_ARRVAL_P ( params )	1237:24:37273:37290	366086	0	True				
ANR	366242	ParameterType	(Z_ARRVAL_P)		366086	0					
ANR	366243	Identifier	params		366086	1					
ANR	366244	CFGEntryNode	ENTRY		366086		True				
ANR	366245	CFGExitNode	EXIT		366086		True				
ANR	366246	Symbol	arg_num		366086						
ANR	366247	Symbol	opline -> op2		366086						
ANR	366248	Symbol	opline -> op2 . num		366086						
ANR	366249	Symbol	NULL		366086						
ANR	366250	Symbol	Z_OPT_REFCOUNTED_P		366086						
ANR	366251	Symbol	params		366086						
ANR	366252	Symbol	ZEND_ACC_HAS_TYPE_HINTS		366086						
ANR	366253	Symbol	UNEXPECTED		366086						
ANR	366254	Symbol	EX ( func ) -> op_array . fn_flags		366086						
ANR	366255	Symbol	CACHE_ADDR		366086						
ANR	366256	Symbol	EX ( func ) -> op_array		366086						
ANR	366257	Symbol	EX ( func ) -> op_array . T		366086						
ANR	366258	Symbol	EX		366086						
ANR	366259	Symbol	opline		366086						
ANR	366260	Symbol	func		366086						
ANR	366261	Symbol	* opline		366086						
ANR	366262	Symbol	param		366086						
ANR	366263	Symbol	EX_VAR_NUM		366086						
ANR	366264	Symbol	* EX		366086						
ANR	366265	Symbol	EX ( func ) -> op_array . last_var		366086						
ANR	366266	Symbol	arg_count		366086						
ANR	366267	DeclStmt									
ANR	366268	Decl							USE_OPLINE	USE_OPLINE	ZVAL_LONG
ANR	366269	DeclStmt									
ANR	366270	Decl							zend_ini_entry	zend_ini_entry *	p
ANR	366271	DeclStmt									
ANR	366272	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366273	DeclStmt									
ANR	366274	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366275	DeclStmt									
ANR	366276	Decl							USE_OPLINE zval	USE_OPLINE zval *	zce
ANR	366277	Decl							USE_OPLINE zval	USE_OPLINE zval *	orig_zce
ANR	366278	DeclStmt									
ANR	366279	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366280	DeclStmt									
ANR	366281	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366282	DeclStmt									
ANR	366283	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366284	DeclStmt									
ANR	366285	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366286	DeclStmt									
ANR	366287	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366288	DeclStmt									
ANR	366289	Decl							USE_OPLINE	USE_OPLINE ( )	ZEND_VM_NEXT_OPCODE
ANR	366290	DeclStmt									
ANR	366291	Decl							USE_OPLINE	USE_OPLINE ( )	ZEND_VM_NEXT_OPCODE
ANR	366292	DeclStmt									
ANR	366293	Decl							USE_OPLINE zend_class_entry	USE_OPLINE zend_class_entry *	ce
ANR	366294	DeclStmt									
ANR	366295	Decl							zend_class_entry	zend_class_entry *	trait
ANR	366296	DeclStmt									
ANR	366297	Decl							USE_OPLINE zend_class_entry	USE_OPLINE zend_class_entry *	ce
ANR	366298	DeclStmt									
ANR	366299	Decl							uint32_t	uint32_t	op_num
ANR	366300	DeclStmt									
ANR	366301	Decl							int	int	i
ANR	366302	DeclStmt									
ANR	366303	Decl							uint32_t	uint32_t	catch_op_num
ANR	366304	Decl							uint32_t	uint32_t	finally_op_num
ANR	366305	Decl							uint32_t	uint32_t	finally_op_end
ANR	366306	DeclStmt									
ANR	366307	Decl							int	int	in_finally
ANR	366308	DeclStmt									
ANR	366309	Decl							const zend_op	const zend_op *	exc_opline
ANR	366310	DeclStmt									
ANR	366311	Decl							zval	zval *	fast_call
ANR	366312	DeclStmt									
ANR	366313	Decl							zval	zval *	fast_call
ANR	366314	DeclStmt									
ANR	366315	Decl							zend_generator	zend_generator *	generator
ANR	366316	DeclStmt									
ANR	366317	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366318	DeclStmt									
ANR	366319	Decl							USE_OPLINE int	USE_OPLINE int	ret
ANR	366320	DeclStmt									
ANR	366321	Decl							zend_generator	zend_generator *	generator
ANR	366322	DeclStmt									
ANR	366323	Decl							USE_OPLINE zval	USE_OPLINE zval *	fast_call
ANR	366324	DeclStmt									
ANR	366325	Decl							USE_OPLINE zval	USE_OPLINE zval *	fast_call
ANR	366326	DeclStmt									
ANR	366327	Decl							USE_OPLINE zval	USE_OPLINE zval *	fast_call
ANR	366328	DeclStmt									
ANR	366329	Decl							const zend_op	const zend_op *	fast_ret
ANR	366330	DeclStmt									
ANR	366331	Decl							zend_generator	zend_generator *	generator
ANR	366332	DeclStmt									
ANR	366333	Decl							zend_op	zend_op *	target
ANR	366334	DeclStmt									
ANR	366335	Decl							zend_op	zend_op *	result
ANR	366336	DeclStmt									
ANR	366337	Decl							uint32_t	uint32_t	fetch_type
ANR	366338	DeclStmt									
ANR	366339	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366340	DeclStmt									
ANR	366341	Decl							zend_array	zend_array *	args
ANR	366342	DeclStmt									
ANR	366343	Decl							zend_function	zend_function *	fbc
ANR	366344	DeclStmt									
ANR	366345	Decl							zend_object	zend_object *	object
ANR	366346	DeclStmt									
ANR	366347	Decl							zval	zval *	ret
ANR	366348	DeclStmt									
ANR	366349	Decl							uint32_t	uint32_t	call_info
ANR	366350	DeclStmt									
ANR	366351	Decl							zend_class_entry	zend_class_entry *	scope
ANR	366352	DeclStmt									
ANR	366353	Decl							uint32_t	uint32_t	num_args
ANR	366354	DeclStmt									
ANR	366355	Decl							zend_execute_data	zend_execute_data *	call
ANR	366356	DeclStmt									
ANR	366357	Decl							USE_OPLINE	USE_OPLINE	args
ANR	366358	DeclStmt									
ANR	366359	Decl							zval	zval *	p
ANR	366360	DeclStmt									
ANR	366361	Decl							zval	zval *	end
ANR	366362	DeclStmt									
ANR	366363	Decl							zval	zval	retval
ANR	366364	DeclStmt									
ANR	366365	Decl							uint32_t	uint32_t	i
ANR	366366	DeclStmt									
ANR	366367	Decl							uint32_t	uint32_t	num_args
ANR	366368	DeclStmt									
ANR	366369	Decl							zval	zval *	p
ANR	366370	DeclStmt									
ANR	366371	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366372	DeclStmt									
ANR	366373	Decl							zval	zval *	class_name
ANR	366374	DeclStmt									
ANR	366375	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366376	DeclStmt									
ANR	366377	Decl							USE_OPLINE zend_function	USE_OPLINE zend_function *	fbc
ANR	366378	DeclStmt									
ANR	366379	Decl							zval	zval *	function_name
ANR	366380	Decl							zval	zval *	func
ANR	366381	DeclStmt									
ANR	366382	Decl							zend_execute_data	zend_execute_data *	call
ANR	366383	DeclStmt									
ANR	366384	Decl							USE_OPLINE zend_function	USE_OPLINE zend_function *	fbc
ANR	366385	DeclStmt									
ANR	366386	Decl							zval	zval *	function_name
ANR	366387	Decl							zval	zval *	func
ANR	366388	DeclStmt									
ANR	366389	Decl							zend_string	zend_string *	lcname
ANR	366390	DeclStmt									
ANR	366391	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	366392	DeclStmt									
ANR	366393	Decl							zend_object	zend_object *	object
ANR	366394	DeclStmt									
ANR	366395	Decl							zend_execute_data	zend_execute_data *	call
ANR	366396	DeclStmt									
ANR	366397	Decl							uint32_t	uint32_t	call_info
ANR	366398	DeclStmt									
ANR	366399	Decl							const char	const char *	colon
ANR	366400	DeclStmt									
ANR	366401	Decl							zend_string	zend_string *	mname
ANR	366402	DeclStmt									
ANR	366403	Decl							size_t	size_t	cname_length
ANR	366404	DeclStmt									
ANR	366405	Decl							size_t	size_t	mname_length
ANR	366406	DeclStmt									
ANR	366407	Decl							zval	zval *	obj
ANR	366408	DeclStmt									
ANR	366409	Decl							zval	zval *	method
ANR	366410	DeclStmt									
ANR	366411	Decl							USE_OPLINE zval	USE_OPLINE zval *	func_name
ANR	366412	DeclStmt									
ANR	366413	Decl							zval	zval *	func
ANR	366414	DeclStmt									
ANR	366415	Decl							zend_function	zend_function *	fbc
ANR	366416	DeclStmt									
ANR	366417	Decl							zend_execute_data	zend_execute_data *	call
ANR	366418	DeclStmt									
ANR	366419	Decl							USE_OPLINE zval	USE_OPLINE zval *	fname
ANR	366420	DeclStmt									
ANR	366421	Decl							zval	zval *	func
ANR	366422	DeclStmt									
ANR	366423	Decl							zend_function	zend_function *	fbc
ANR	366424	DeclStmt									
ANR	366425	Decl							zend_execute_data	zend_execute_data *	call
ANR	366426	DeclStmt									
ANR	366427	Decl							USE_OPLINE uint32_t	USE_OPLINE uint32_t	arg_num
ANR	366428	DeclStmt									
ANR	366429	Decl							zval	zval *	param
ANR	366430	DeclStmt									
ANR	366431	Decl							ZEND_VM_REPEATABLE_OPCODE	ZEND_VM_REPEATABLE_OPCODE	arg_num
ANR	366432	DeclStmt									
ANR	366433	Decl							zval	zval *	default_value
ANR	366434	DeclStmt									
ANR	366435	Decl							USE_OPLINE zend_class_entry	USE_OPLINE zend_class_entry *	ce
ANR	366436	DeclStmt									
ANR	366437	Decl							zend_class_entry	zend_class_entry *	iface
ANR	366438	DeclStmt									
ANR	366439	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366440	DeclStmt									
ANR	366441	Decl							zval	zval *	class_name
ANR	366442	DeclStmt									
ANR	366443	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366444	DeclStmt									
ANR	366445	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366446	DeclStmt									
ANR	366447	Decl							zval	zval *	class_name
ANR	366448	DeclStmt									
ANR	366449	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366450	DeclStmt									
ANR	366451	Decl							USE_OPLINE zend_function	USE_OPLINE zend_function *	fbc
ANR	366452	DeclStmt									
ANR	366453	Decl							zval	zval *	function_name
ANR	366454	Decl							zval	zval *	func
ANR	366455	DeclStmt									
ANR	366456	Decl							zend_string	zend_string *	lcname
ANR	366457	DeclStmt									
ANR	366458	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	366459	DeclStmt									
ANR	366460	Decl							zend_object	zend_object *	object
ANR	366461	DeclStmt									
ANR	366462	Decl							zend_execute_data	zend_execute_data *	call
ANR	366463	DeclStmt									
ANR	366464	Decl							uint32_t	uint32_t	call_info
ANR	366465	DeclStmt									
ANR	366466	Decl							const char	const char *	colon
ANR	366467	DeclStmt									
ANR	366468	Decl							zend_string	zend_string *	mname
ANR	366469	DeclStmt									
ANR	366470	Decl							size_t	size_t	cname_length
ANR	366471	DeclStmt									
ANR	366472	Decl							size_t	size_t	mname_length
ANR	366473	DeclStmt									
ANR	366474	Decl							zval	zval *	obj
ANR	366475	DeclStmt									
ANR	366476	Decl							zval	zval *	method
ANR	366477	DeclStmt									
ANR	366478	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366479	DeclStmt									
ANR	366480	Decl							zend_free_op	zend_free_op	free_op2
ANR	366481	DeclStmt									
ANR	366482	Decl							zval	zval *	class_name
ANR	366483	DeclStmt									
ANR	366484	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366485	DeclStmt									
ANR	366486	Decl							USE_OPLINE zend_function	USE_OPLINE zend_function *	fbc
ANR	366487	DeclStmt									
ANR	366488	Decl							zval	zval *	function_name
ANR	366489	Decl							zval	zval *	func
ANR	366490	DeclStmt									
ANR	366491	Decl							zend_string	zend_string *	lcname
ANR	366492	DeclStmt									
ANR	366493	Decl							zend_free_op	zend_free_op	free_op2
ANR	366494	DeclStmt									
ANR	366495	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	366496	DeclStmt									
ANR	366497	Decl							zend_object	zend_object *	object
ANR	366498	DeclStmt									
ANR	366499	Decl							zend_execute_data	zend_execute_data *	call
ANR	366500	DeclStmt									
ANR	366501	Decl							uint32_t	uint32_t	call_info
ANR	366502	DeclStmt									
ANR	366503	Decl							const char	const char *	colon
ANR	366504	DeclStmt									
ANR	366505	Decl							zend_string	zend_string *	mname
ANR	366506	DeclStmt									
ANR	366507	Decl							size_t	size_t	cname_length
ANR	366508	DeclStmt									
ANR	366509	Decl							size_t	size_t	mname_length
ANR	366510	DeclStmt									
ANR	366511	Decl							zval	zval *	obj
ANR	366512	DeclStmt									
ANR	366513	Decl							zval	zval *	method
ANR	366514	DeclStmt									
ANR	366515	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366516	DeclStmt									
ANR	366517	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	366518	DeclStmt									
ANR	366519	Decl							USE_OPLINE zval	USE_OPLINE zval *	z
ANR	366520	DeclStmt									
ANR	366521	Decl							zend_string	zend_string *	str
ANR	366522	DeclStmt									
ANR	366523	Decl							zend_string	zend_string *	str
ANR	366524	DeclStmt									
ANR	366525	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	366526	DeclStmt									
ANR	366527	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	366528	DeclStmt									
ANR	366529	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	366530	DeclStmt									
ANR	366531	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	366532	DeclStmt									
ANR	366533	Decl							int	int	ret
ANR	366534	DeclStmt									
ANR	366535	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	366536	DeclStmt									
ANR	366537	Decl							int	int	ret
ANR	366538	DeclStmt									
ANR	366539	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	366540	DeclStmt									
ANR	366541	Decl							zend_free_op	zend_free_op	free_op1
ANR	366542	DeclStmt									
ANR	366543	Decl							zend_refcounted	zend_refcounted *	ref
ANR	366544	DeclStmt									
ANR	366545	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	366546	DeclStmt									
ANR	366547	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval
ANR	366548	DeclStmt									
ANR	366549	Decl							zend_generator	zend_generator *	generator
ANR	366550	DeclStmt									
ANR	366551	Decl							zend_refcounted	zend_refcounted *	ref
ANR	366552	DeclStmt									
ANR	366553	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366554	DeclStmt									
ANR	366555	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366556	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	366557	DeclStmt									
ANR	366558	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366559	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	366560	DeclStmt									
ANR	366561	Decl							uint32_t	uint32_t	arg_num
ANR	366562	DeclStmt									
ANR	366563	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	366564	DeclStmt									
ANR	366565	Decl							USE_OPLINE zval	USE_OPLINE zval	object_zval
ANR	366566	DeclStmt									
ANR	366567	Decl							zend_function	zend_function *	constructor
ANR	366568	DeclStmt									
ANR	366569	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366570	DeclStmt									
ANR	366571	Decl							zend_execute_data	zend_execute_data *	call
ANR	366572	DeclStmt									
ANR	366573	Decl							USE_OPLINE zval	USE_OPLINE zval *	obj
ANR	366574	DeclStmt									
ANR	366575	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366576	DeclStmt									
ANR	366577	Decl							zend_function	zend_function *	clone
ANR	366578	DeclStmt									
ANR	366579	Decl							zend_object_clone_obj_t	zend_object_clone_obj_t	clone_call
ANR	366580	DeclStmt									
ANR	366581	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr
ANR	366582	DeclStmt									
ANR	366583	Decl							zval	zval *	result
ANR	366584	DeclStmt									
ANR	366585	Decl							USE_OPLINE zend_op_array	USE_OPLINE zend_op_array *	new_op_array
ANR	366586	DeclStmt									
ANR	366587	Decl							zval	zval *	inc_filename
ANR	366588	DeclStmt									
ANR	366589	Decl							zval	zval	tmp_inc_filename
ANR	366590	DeclStmt									
ANR	366591	Decl							zend_bool	zend_bool	failure_retval
ANR	366592	DeclStmt									
ANR	366593	Decl							zend_file_handle	zend_file_handle	file_handle
ANR	366594	DeclStmt									
ANR	366595	Decl							zend_string	zend_string *	resolved_path
ANR	366596	DeclStmt									
ANR	366597	Decl							char	char *	eval_desc
ANR	366598	DeclStmt									
ANR	366599	Decl							zval	zval *	return_value
ANR	366600	DeclStmt									
ANR	366601	Decl							zend_execute_data	zend_execute_data *	call
ANR	366602	DeclStmt									
ANR	366603	Decl							USE_OPLINE zval	USE_OPLINE zval *	array_ptr
ANR	366604	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366605	DeclStmt									
ANR	366606	Decl							HashTable	HashTable *	fe_ht
ANR	366607	DeclStmt									
ANR	366608	Decl							HashPosition	HashPosition	pos
ANR	366609	DeclStmt									
ANR	366610	Decl							Bucket	Bucket *	p
ANR	366611	DeclStmt									
ANR	366612	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366613	DeclStmt									
ANR	366614	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	366615	DeclStmt									
ANR	366616	Decl							zend_bool	zend_bool	is_empty
ANR	366617	DeclStmt									
ANR	366618	Decl							USE_OPLINE zval	USE_OPLINE zval *	array_ptr
ANR	366619	Decl							USE_OPLINE zval	USE_OPLINE zval *	array_ref
ANR	366620	DeclStmt									
ANR	366621	Decl							HashTable	HashTable *	fe_ht
ANR	366622	DeclStmt									
ANR	366623	Decl							HashPosition	HashPosition	pos
ANR	366624	DeclStmt									
ANR	366625	Decl							Bucket	Bucket *	p
ANR	366626	DeclStmt									
ANR	366627	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366628	DeclStmt									
ANR	366629	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	366630	DeclStmt									
ANR	366631	Decl							zend_bool	zend_bool	is_empty
ANR	366632	DeclStmt									
ANR	366633	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	366634	DeclStmt									
ANR	366635	Decl							zval	zval *	ptr
ANR	366636	DeclStmt									
ANR	366637	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366638	DeclStmt									
ANR	366639	Decl							zval	zval *	ref
ANR	366640	DeclStmt									
ANR	366641	Decl							zend_reference	zend_reference *	r
ANR	366642	DeclStmt									
ANR	366643	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366644	DeclStmt									
ANR	366645	Decl							zval	zval *	ref
ANR	366646	DeclStmt									
ANR	366647	Decl							zend_reference	zend_reference *	r
ANR	366648	DeclStmt									
ANR	366649	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366650	DeclStmt									
ANR	366651	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	366652	DeclStmt									
ANR	366653	Decl							zval	zval *	val
ANR	366654	DeclStmt									
ANR	366655	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366656	DeclStmt									
ANR	366657	Decl							zend_generator	zend_generator *	new_gen
ANR	366658	DeclStmt									
ANR	366659	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	366660	DeclStmt									
ANR	366661	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366662	DeclStmt									
ANR	366663	Decl							zend_bool	zend_bool	strict
ANR	366664	DeclStmt									
ANR	366665	Decl							zend_string	zend_string *	str
ANR	366666	DeclStmt									
ANR	366667	Decl							zval	zval	tmp
ANR	366668	DeclStmt									
ANR	366669	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	366670	DeclStmt									
ANR	366671	Decl							int	int	result
ANR	366672	DeclStmt									
ANR	366673	Decl							zend_class_entry	zend_class_entry *	ce
ANR	366674	DeclStmt									
ANR	366675	Decl							const char	const char *	type_name
ANR	366676	DeclStmt									
ANR	366677	Decl							USE_OPLINE zend_constant	USE_OPLINE zend_constant *	c
ANR	366678	DeclStmt									
ANR	366679	Decl							int	int	result
ANR	366680	DeclStmt									
ANR	366681	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366682	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366683	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366684	DeclStmt									
ANR	366685	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366686	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366687	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366688	DeclStmt									
ANR	366689	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366690	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366691	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366692	DeclStmt									
ANR	366693	Decl							zend_long	zend_long	overflow
ANR	366694	DeclStmt									
ANR	366695	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366696	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366697	DeclStmt									
ANR	366698	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366699	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366700	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366701	DeclStmt									
ANR	366702	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366703	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366704	DeclStmt									
ANR	366705	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366706	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366707	DeclStmt									
ANR	366708	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366709	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366710	DeclStmt									
ANR	366711	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366712	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366713	DeclStmt									
ANR	366714	Decl							zend_string	zend_string *	op1_str
ANR	366715	DeclStmt									
ANR	366716	Decl							zend_string	zend_string *	op2_str
ANR	366717	DeclStmt									
ANR	366718	Decl							zend_string	zend_string *	str
ANR	366719	DeclStmt									
ANR	366720	Decl							size_t	size_t	len
ANR	366721	DeclStmt									
ANR	366722	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366723	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366724	DeclStmt									
ANR	366725	Decl							int	int	result
ANR	366726	DeclStmt									
ANR	366727	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366728	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366729	DeclStmt									
ANR	366730	Decl							int	int	result
ANR	366731	DeclStmt									
ANR	366732	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366733	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366734	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366735	DeclStmt									
ANR	366736	Decl							int	int	result
ANR	366737	DeclStmt									
ANR	366738	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366739	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366740	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366741	DeclStmt									
ANR	366742	Decl							int	int	result
ANR	366743	DeclStmt									
ANR	366744	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366745	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366746	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366747	DeclStmt									
ANR	366748	Decl							int	int	result
ANR	366749	DeclStmt									
ANR	366750	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366751	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366752	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	366753	DeclStmt									
ANR	366754	Decl							int	int	result
ANR	366755	DeclStmt									
ANR	366756	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366757	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366758	DeclStmt									
ANR	366759	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366760	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366761	DeclStmt									
ANR	366762	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366763	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366764	DeclStmt									
ANR	366765	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366766	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366767	DeclStmt									
ANR	366768	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	366769	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	366770	Function	zend_fetch_var_address_helper_SPEC_CONST_CONST	4932:0:146010:150628							
ANR	366771	FunctionDef	zend_fetch_var_address_helper_SPEC_CONST_CONST (int type ZEND_OPCODE_HANDLER_ARGS_DC)		366770	0					
ANR	366772	CompoundStatement		4933:0:146140:150628	366770	0					
ANR	366773	IdentifierDeclStatement	USE_OPLINE zval * varname ;	4934:1:146143:146169	366770	0	True				
ANR	366774	IdentifierDecl	* varname		366770	0					
ANR	366775	IdentifierDeclType	USE_OPLINE zval *		366770	0					
ANR	366776	Identifier	varname		366770	1					
ANR	366777	IdentifierDeclStatement	zval * retval ;	4937:1:146172:146184	366770	1	True				
ANR	366778	IdentifierDecl	* retval		366770	0					
ANR	366779	IdentifierDeclType	zval *		366770	0					
ANR	366780	Identifier	retval		366770	1					
ANR	366781	IdentifierDeclStatement	zend_string * name ;	4938:1:146187:146204	366770	2	True				
ANR	366782	IdentifierDecl	* name		366770	0					
ANR	366783	IdentifierDeclType	zend_string *		366770	0					
ANR	366784	Identifier	name		366770	1					
ANR	366785	IdentifierDeclStatement	HashTable * target_symbol_table ;	4939:1:146207:146237	366770	3	True				
ANR	366786	IdentifierDecl	* target_symbol_table		366770	0					
ANR	366787	IdentifierDeclType	HashTable *		366770	0					
ANR	366788	Identifier	target_symbol_table		366770	1					
ANR	366789	ExpressionStatement	SAVE_OPLINE ( )	4941:1:146241:146254	366770	4	True				
ANR	366790	CallExpression	SAVE_OPLINE ( )		366770	0					
ANR	366791	Callee	SAVE_OPLINE		366770	0					
ANR	366792	Identifier	SAVE_OPLINE		366770	0					
ANR	366793	ArgumentList			366770	1					
ANR	366794	ExpressionStatement	varname = EX_CONSTANT ( opline -> op1 )	4942:1:146257:146291	366770	5	True				
ANR	366795	AssignmentExpression	varname = EX_CONSTANT ( opline -> op1 )		366770	0		=			
ANR	366796	Identifier	varname		366770	0					
ANR	366797	CallExpression	EX_CONSTANT ( opline -> op1 )		366770	1					
ANR	366798	Callee	EX_CONSTANT		366770	0					
ANR	366799	Identifier	EX_CONSTANT		366770	0					
ANR	366800	ArgumentList	opline -> op1		366770	1					
ANR	366801	Argument	opline -> op1		366770	0					
ANR	366802	PtrMemberAccess	opline -> op1		366770	0					
ANR	366803	Identifier	opline		366770	0					
ANR	366804	Identifier	op1		366770	1					
ANR	366805	IfStatement	if ( IS_CONST == IS_CONST )		366770	6					
ANR	366806	Condition	IS_CONST == IS_CONST	4944:6:146300:146319	366770	0	True				
ANR	366807	EqualityExpression	IS_CONST == IS_CONST		366770	0		==			
ANR	366808	Identifier	IS_CONST		366770	0					
ANR	366809	Identifier	IS_CONST		366770	1					
ANR	366810	CompoundStatement		12:28:181:181	366770	1					
ANR	366811	ExpressionStatement	name = Z_STR_P ( varname )	4945:2:146326:146349	366770	0	True				
ANR	366812	AssignmentExpression	name = Z_STR_P ( varname )		366770	0		=			
ANR	366813	Identifier	name		366770	0					
ANR	366814	CallExpression	Z_STR_P ( varname )		366770	1					
ANR	366815	Callee	Z_STR_P		366770	0					
ANR	366816	Identifier	Z_STR_P		366770	0					
ANR	366817	ArgumentList	varname		366770	1					
ANR	366818	Argument	varname		366770	0					
ANR	366819	Identifier	varname		366770	0					
ANR	366820	ElseStatement	else		366770	0					
ANR	366821	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		366770	0					
ANR	366822	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	4946:12:146363:146402	366770	0	True				
ANR	366823	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		366770	0					
ANR	366824	Callee	EXPECTED		366770	0					
ANR	366825	Identifier	EXPECTED		366770	0					
ANR	366826	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		366770	1					
ANR	366827	Argument	Z_TYPE_P ( varname ) == IS_STRING		366770	0					
ANR	366828	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		366770	0		==			
ANR	366829	CallExpression	Z_TYPE_P ( varname )		366770	0					
ANR	366830	Callee	Z_TYPE_P		366770	0					
ANR	366831	Identifier	Z_TYPE_P		366770	0					
ANR	366832	ArgumentList	varname		366770	1					
ANR	366833	Argument	varname		366770	0					
ANR	366834	Identifier	varname		366770	0					
ANR	366835	Identifier	IS_STRING		366770	1					
ANR	366836	CompoundStatement		14:54:264:264	366770	1					
ANR	366837	ExpressionStatement	name = Z_STR_P ( varname )	4947:2:146409:146432	366770	0	True				
ANR	366838	AssignmentExpression	name = Z_STR_P ( varname )		366770	0		=			
ANR	366839	Identifier	name		366770	0					
ANR	366840	CallExpression	Z_STR_P ( varname )		366770	1					
ANR	366841	Callee	Z_STR_P		366770	0					
ANR	366842	Identifier	Z_STR_P		366770	0					
ANR	366843	ArgumentList	varname		366770	1					
ANR	366844	Argument	varname		366770	0					
ANR	366845	Identifier	varname		366770	0					
ANR	366846	ExpressionStatement	zend_string_addref ( name )	4948:2:146436:146460	366770	1	True				
ANR	366847	CallExpression	zend_string_addref ( name )		366770	0					
ANR	366848	Callee	zend_string_addref		366770	0					
ANR	366849	Identifier	zend_string_addref		366770	0					
ANR	366850	ArgumentList	name		366770	1					
ANR	366851	Argument	name		366770	0					
ANR	366852	Identifier	name		366770	0					
ANR	366853	ElseStatement	else		366770	0					
ANR	366854	CompoundStatement		17:8:329:329	366770	0					
ANR	366855	IfStatement	if ( IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		366770	0					
ANR	366856	Condition	IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	4950:6:146478:146539	366770	0	True				
ANR	366857	AndExpression	IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		366770	0		&&			
ANR	366858	EqualityExpression	IS_CONST == IS_CV		366770	0		==			
ANR	366859	Identifier	IS_CONST		366770	0					
ANR	366860	Identifier	IS_CV		366770	1					
ANR	366861	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		366770	1					
ANR	366862	Callee	UNEXPECTED		366770	0					
ANR	366863	Identifier	UNEXPECTED		366770	0					
ANR	366864	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		366770	1					
ANR	366865	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		366770	0					
ANR	366866	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		366770	0		==			
ANR	366867	CallExpression	Z_TYPE_P ( varname )		366770	0					
ANR	366868	Callee	Z_TYPE_P		366770	0					
ANR	366869	Identifier	Z_TYPE_P		366770	0					
ANR	366870	ArgumentList	varname		366770	1					
ANR	366871	Argument	varname		366770	0					
ANR	366872	Identifier	varname		366770	0					
ANR	366873	Identifier	IS_UNDEF		366770	1					
ANR	366874	CompoundStatement		18:70:401:401	366770	1					
ANR	366875	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	4951:3:146547:146582	366770	0	True				
ANR	366876	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		366770	0					
ANR	366877	Callee	GET_OP1_UNDEF_CV		366770	0					
ANR	366878	Identifier	GET_OP1_UNDEF_CV		366770	0					
ANR	366879	ArgumentList	varname		366770	1					
ANR	366880	Argument	varname		366770	0					
ANR	366881	Identifier	varname		366770	0					
ANR	366882	Argument	BP_VAR_R		366770	1					
ANR	366883	Identifier	BP_VAR_R		366770	0					
ANR	366884	ExpressionStatement	name = zval_get_string ( varname )	4953:2:146590:146621	366770	1	True				
ANR	366885	AssignmentExpression	name = zval_get_string ( varname )		366770	0		=			
ANR	366886	Identifier	name		366770	0					
ANR	366887	CallExpression	zval_get_string ( varname )		366770	1					
ANR	366888	Callee	zval_get_string		366770	0					
ANR	366889	Identifier	zval_get_string		366770	0					
ANR	366890	ArgumentList	varname		366770	1					
ANR	366891	Argument	varname		366770	0					
ANR	366892	Identifier	varname		366770	0					
ANR	366893	IfStatement	if ( IS_CONST != IS_UNUSED )		366770	7					
ANR	366894	Condition	IS_CONST != IS_UNUSED	4956:5:146632:146652	366770	0	True				
ANR	366895	EqualityExpression	IS_CONST != IS_UNUSED		366770	0		!=			
ANR	366896	Identifier	IS_CONST		366770	0					
ANR	366897	Identifier	IS_UNUSED		366770	1					
ANR	366898	CompoundStatement		25:2:518:538	366770	1					
ANR	366899	IdentifierDeclStatement	zend_class_entry * ce ;	4957:2:146659:146679	366770	0	True				
ANR	366900	IdentifierDecl	* ce		366770	0					
ANR	366901	IdentifierDeclType	zend_class_entry *		366770	0					
ANR	366902	Identifier	ce		366770	1					
ANR	366903	IfStatement	if ( IS_CONST == IS_CONST )		366770	1					
ANR	366904	Condition	IS_CONST == IS_CONST	4959:6:146688:146707	366770	0	True				
ANR	366905	EqualityExpression	IS_CONST == IS_CONST		366770	0		==			
ANR	366906	Identifier	IS_CONST		366770	0					
ANR	366907	Identifier	IS_CONST		366770	1					
ANR	366908	CompoundStatement		27:28:569:569	366770	1					
ANR	366909	IfStatement	if ( IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		366770	0					
ANR	366910	Condition	IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	4960:7:146719:146819	366770	0	True				
ANR	366911	AndExpression	IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		366770	0		&&			
ANR	366912	EqualityExpression	IS_CONST == IS_CONST		366770	0		==			
ANR	366913	Identifier	IS_CONST		366770	0					
ANR	366914	Identifier	IS_CONST		366770	1					
ANR	366915	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		366770	1					
ANR	366916	Callee	EXPECTED		366770	0					
ANR	366917	Identifier	EXPECTED		366770	0					
ANR	366918	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		366770	1					
ANR	366919	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		366770	0					
ANR	366920	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		366770	0		!=			
ANR	366921	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		366770	0		=			
ANR	366922	Identifier	ce		366770	0					
ANR	366923	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		366770	1					
ANR	366924	Callee	CACHED_PTR		366770	0					
ANR	366925	Identifier	CACHED_PTR		366770	0					
ANR	366926	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	1					
ANR	366927	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	0					
ANR	366928	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	0					
ANR	366929	Callee	Z_CACHE_SLOT_P		366770	0					
ANR	366930	Identifier	Z_CACHE_SLOT_P		366770	0					
ANR	366931	ArgumentList	EX_CONSTANT ( opline -> op1 )		366770	1					
ANR	366932	Argument	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	366933	CallExpression	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	366934	Callee	EX_CONSTANT		366770	0					
ANR	366935	Identifier	EX_CONSTANT		366770	0					
ANR	366936	ArgumentList	opline -> op1		366770	1					
ANR	366937	Argument	opline -> op1		366770	0					
ANR	366938	PtrMemberAccess	opline -> op1		366770	0					
ANR	366939	Identifier	opline		366770	0					
ANR	366940	Identifier	op1		366770	1					
ANR	366941	Identifier	NULL		366770	1					
ANR	366942	CompoundStatement		28:110:681:681	366770	1					
ANR	366943	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	4961:4:146828:146905	366770	0	True				
ANR	366944	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		366770	0		=			
ANR	366945	Identifier	retval		366770	0					
ANR	366946	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		366770	1					
ANR	366947	Callee	CACHED_PTR		366770	0					
ANR	366948	Identifier	CACHED_PTR		366770	0					
ANR	366949	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		366770	1					
ANR	366950	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		366770	0					
ANR	366951	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		366770	0		+			
ANR	366952	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	0					
ANR	366953	Callee	Z_CACHE_SLOT_P		366770	0					
ANR	366954	Identifier	Z_CACHE_SLOT_P		366770	0					
ANR	366955	ArgumentList	EX_CONSTANT ( opline -> op1 )		366770	1					
ANR	366956	Argument	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	366957	CallExpression	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	366958	Callee	EX_CONSTANT		366770	0					
ANR	366959	Identifier	EX_CONSTANT		366770	0					
ANR	366960	ArgumentList	opline -> op1		366770	1					
ANR	366961	Argument	opline -> op1		366770	0					
ANR	366962	PtrMemberAccess	opline -> op1		366770	0					
ANR	366963	Identifier	opline		366770	0					
ANR	366964	Identifier	op1		366770	1					
ANR	366965	SizeofExpression	sizeof ( void * )		366770	1					
ANR	366966	Sizeof	sizeof		366770	0					
ANR	366967	SizeofOperand	void *		366770	1					
ANR	366968	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		366770	1					
ANR	366969	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	4964:8:146967:147007	366770	0	True				
ANR	366970	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		366770	0					
ANR	366971	Callee	UNEXPECTED		366770	0					
ANR	366972	Identifier	UNEXPECTED		366770	0					
ANR	366973	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		366770	1					
ANR	366974	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		366770	0					
ANR	366975	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		366770	0		==			
ANR	366976	CallExpression	CE_STATIC_MEMBERS ( ce )		366770	0					
ANR	366977	Callee	CE_STATIC_MEMBERS		366770	0					
ANR	366978	Identifier	CE_STATIC_MEMBERS		366770	0					
ANR	366979	ArgumentList	ce		366770	1					
ANR	366980	Argument	ce		366770	0					
ANR	366981	Identifier	ce		366770	0					
ANR	366982	Identifier	NULL		366770	1					
ANR	366983	CompoundStatement		32:51:869:869	366770	1					
ANR	366984	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4965:5:147017:147124	366770	0	True				
ANR	366985	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		366770	0					
ANR	366986	Callee	zend_throw_error		366770	0					
ANR	366987	Identifier	zend_throw_error		366770	0					
ANR	366988	ArgumentList	NULL		366770	1					
ANR	366989	Argument	NULL		366770	0					
ANR	366990	Identifier	NULL		366770	0					
ANR	366991	Argument	"""Access to undeclared static property: %s::$%s"""		366770	1					
ANR	366992	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		366770	0					
ANR	366993	Argument	ZSTR_VAL ( ce -> name )		366770	2					
ANR	366994	CallExpression	ZSTR_VAL ( ce -> name )		366770	0					
ANR	366995	Callee	ZSTR_VAL		366770	0					
ANR	366996	Identifier	ZSTR_VAL		366770	0					
ANR	366997	ArgumentList	ce -> name		366770	1					
ANR	366998	Argument	ce -> name		366770	0					
ANR	366999	PtrMemberAccess	ce -> name		366770	0					
ANR	367000	Identifier	ce		366770	0					
ANR	367001	Identifier	name		366770	1					
ANR	367002	Argument	ZSTR_VAL ( name )		366770	3					
ANR	367003	CallExpression	ZSTR_VAL ( name )		366770	0					
ANR	367004	Callee	ZSTR_VAL		366770	0					
ANR	367005	Identifier	ZSTR_VAL		366770	0					
ANR	367006	ArgumentList	name		366770	1					
ANR	367007	Argument	name		366770	0					
ANR	367008	Identifier	name		366770	0					
ANR	367009	ExpressionStatement	HANDLE_EXCEPTION ( )	4967:5:147132:147150	366770	1	True				
ANR	367010	CallExpression	HANDLE_EXCEPTION ( )		366770	0					
ANR	367011	Callee	HANDLE_EXCEPTION		366770	0					
ANR	367012	Identifier	HANDLE_EXCEPTION		366770	0					
ANR	367013	ArgumentList			366770	1					
ANR	367014	GotoStatement	goto fetch_var_return ;	4970:4:147163:147184	366770	2	True				
ANR	367015	Identifier	fetch_var_return		366770	0					
ANR	367016	ElseStatement	else		366770	0					
ANR	367017	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		366770	0					
ANR	367018	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	4971:14:147200:147278	366770	0	True				
ANR	367019	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		366770	0					
ANR	367020	Callee	UNEXPECTED		366770	0					
ANR	367021	Identifier	UNEXPECTED		366770	0					
ANR	367022	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		366770	1					
ANR	367023	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		366770	0					
ANR	367024	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		366770	0		==			
ANR	367025	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		366770	0		=			
ANR	367026	Identifier	ce		366770	0					
ANR	367027	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		366770	1					
ANR	367028	Callee	CACHED_PTR		366770	0					
ANR	367029	Identifier	CACHED_PTR		366770	0					
ANR	367030	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		366770	1					
ANR	367031	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		366770	0					
ANR	367032	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		366770	0					
ANR	367033	Callee	Z_CACHE_SLOT_P		366770	0					
ANR	367034	Identifier	Z_CACHE_SLOT_P		366770	0					
ANR	367035	ArgumentList	EX_CONSTANT ( opline -> op2 )		366770	1					
ANR	367036	Argument	EX_CONSTANT ( opline -> op2 )		366770	0					
ANR	367037	CallExpression	EX_CONSTANT ( opline -> op2 )		366770	0					
ANR	367038	Callee	EX_CONSTANT		366770	0					
ANR	367039	Identifier	EX_CONSTANT		366770	0					
ANR	367040	ArgumentList	opline -> op2		366770	1					
ANR	367041	Argument	opline -> op2		366770	0					
ANR	367042	PtrMemberAccess	opline -> op2		366770	0					
ANR	367043	Identifier	opline		366770	0					
ANR	367044	Identifier	op2		366770	1					
ANR	367045	Identifier	NULL		366770	1					
ANR	367046	CompoundStatement		39:95:1140:1140	366770	1					
ANR	367047	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	4972:4:147287:147436	366770	0	True				
ANR	367048	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		366770	0		=			
ANR	367049	Identifier	ce		366770	0					
ANR	367050	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		366770	1					
ANR	367051	Callee	zend_fetch_class_by_name		366770	0					
ANR	367052	Identifier	zend_fetch_class_by_name		366770	0					
ANR	367053	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		366770	1					
ANR	367054	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		366770	0					
ANR	367055	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		366770	0					
ANR	367056	Callee	Z_STR_P		366770	0					
ANR	367057	Identifier	Z_STR_P		366770	0					
ANR	367058	ArgumentList	EX_CONSTANT ( opline -> op2 )		366770	1					
ANR	367059	Argument	EX_CONSTANT ( opline -> op2 )		366770	0					
ANR	367060	CallExpression	EX_CONSTANT ( opline -> op2 )		366770	0					
ANR	367061	Callee	EX_CONSTANT		366770	0					
ANR	367062	Identifier	EX_CONSTANT		366770	0					
ANR	367063	ArgumentList	opline -> op2		366770	1					
ANR	367064	Argument	opline -> op2		366770	0					
ANR	367065	PtrMemberAccess	opline -> op2		366770	0					
ANR	367066	Identifier	opline		366770	0					
ANR	367067	Identifier	op2		366770	1					
ANR	367068	Argument	EX_CONSTANT ( opline -> op2 ) + 1		366770	1					
ANR	367069	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		366770	0		+			
ANR	367070	CallExpression	EX_CONSTANT ( opline -> op2 )		366770	0					
ANR	367071	Callee	EX_CONSTANT		366770	0					
ANR	367072	Identifier	EX_CONSTANT		366770	0					
ANR	367073	ArgumentList	opline -> op2		366770	1					
ANR	367074	Argument	opline -> op2		366770	0					
ANR	367075	PtrMemberAccess	opline -> op2		366770	0					
ANR	367076	Identifier	opline		366770	0					
ANR	367077	Identifier	op2		366770	1					
ANR	367078	PrimaryExpression	1		366770	1					
ANR	367079	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		366770	2					
ANR	367080	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		366770	0		|			
ANR	367081	Identifier	ZEND_FETCH_CLASS_DEFAULT		366770	0					
ANR	367082	Identifier	ZEND_FETCH_CLASS_EXCEPTION		366770	1					
ANR	367083	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		366770	1					
ANR	367084	Condition	UNEXPECTED ( ce == NULL )	4973:8:147446:147467	366770	0	True				
ANR	367085	CallExpression	UNEXPECTED ( ce == NULL )		366770	0					
ANR	367086	Callee	UNEXPECTED		366770	0					
ANR	367087	Identifier	UNEXPECTED		366770	0					
ANR	367088	ArgumentList	ce == NULL		366770	1					
ANR	367089	Argument	ce == NULL		366770	0					
ANR	367090	EqualityExpression	ce == NULL		366770	0		==			
ANR	367091	Identifier	ce		366770	0					
ANR	367092	Identifier	NULL		366770	1					
ANR	367093	CompoundStatement		41:32:1329:1329	366770	1					
ANR	367094	IfStatement	if ( IS_CONST != IS_CONST )		366770	0					
ANR	367095	Condition	IS_CONST != IS_CONST	4974:9:147481:147500	366770	0	True				
ANR	367096	EqualityExpression	IS_CONST != IS_CONST		366770	0		!=			
ANR	367097	Identifier	IS_CONST		366770	0					
ANR	367098	Identifier	IS_CONST		366770	1					
ANR	367099	CompoundStatement		42:31:1362:1362	366770	1					
ANR	367100	ExpressionStatement	zend_string_release ( name )	4975:6:147511:147536	366770	0	True				
ANR	367101	CallExpression	zend_string_release ( name )		366770	0					
ANR	367102	Callee	zend_string_release		366770	0					
ANR	367103	Identifier	zend_string_release		366770	0					
ANR	367104	ArgumentList	name		366770	1					
ANR	367105	Argument	name		366770	0					
ANR	367106	Identifier	name		366770	0					
ANR	367107	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	4978:5:147551:147588	366770	1	True				
ANR	367108	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		366770	0					
ANR	367109	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		366770	0					
ANR	367110	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		366770	0					
ANR	367111	ArgumentList			366770	1					
ANR	367112	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	4980:4:147600:147655	366770	2	True				
ANR	367113	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		366770	0					
ANR	367114	Callee	CACHE_PTR		366770	0					
ANR	367115	Identifier	CACHE_PTR		366770	0					
ANR	367116	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		366770	1					
ANR	367117	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		366770	0					
ANR	367118	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		366770	0					
ANR	367119	Callee	Z_CACHE_SLOT_P		366770	0					
ANR	367120	Identifier	Z_CACHE_SLOT_P		366770	0					
ANR	367121	ArgumentList	EX_CONSTANT ( opline -> op2 )		366770	1					
ANR	367122	Argument	EX_CONSTANT ( opline -> op2 )		366770	0					
ANR	367123	CallExpression	EX_CONSTANT ( opline -> op2 )		366770	0					
ANR	367124	Callee	EX_CONSTANT		366770	0					
ANR	367125	Identifier	EX_CONSTANT		366770	0					
ANR	367126	ArgumentList	opline -> op2		366770	1					
ANR	367127	Argument	opline -> op2		366770	0					
ANR	367128	PtrMemberAccess	opline -> op2		366770	0					
ANR	367129	Identifier	opline		366770	0					
ANR	367130	Identifier	op2		366770	1					
ANR	367131	Argument	ce		366770	1					
ANR	367132	Identifier	ce		366770	0					
ANR	367133	ElseStatement	else		366770	0					
ANR	367134	CompoundStatement		50:9:1530:1530	366770	0					
ANR	367135	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	4983:3:147676:147712	366770	0	True				
ANR	367136	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		366770	0		=			
ANR	367137	Identifier	ce		366770	0					
ANR	367138	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		366770	1					
ANR	367139	Callee	Z_CE_P		366770	0					
ANR	367140	Identifier	Z_CE_P		366770	0					
ANR	367141	ArgumentList	EX_VAR ( opline -> op2 . var )		366770	1					
ANR	367142	Argument	EX_VAR ( opline -> op2 . var )		366770	0					
ANR	367143	CallExpression	EX_VAR ( opline -> op2 . var )		366770	0					
ANR	367144	Callee	EX_VAR		366770	0					
ANR	367145	Identifier	EX_VAR		366770	0					
ANR	367146	ArgumentList	opline -> op2 . var		366770	1					
ANR	367147	Argument	opline -> op2 . var		366770	0					
ANR	367148	MemberAccess	opline -> op2 . var		366770	0					
ANR	367149	PtrMemberAccess	opline -> op2		366770	0					
ANR	367150	Identifier	opline		366770	0					
ANR	367151	Identifier	op2		366770	1					
ANR	367152	Identifier	var		366770	1					
ANR	367153	IfStatement	"if ( IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		366770	1					
ANR	367154	Condition	"IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	4984:7:147721:147838	366770	0	True				
ANR	367155	AndExpression	"IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		366770	0		&&			
ANR	367156	EqualityExpression	IS_CONST == IS_CONST		366770	0		==			
ANR	367157	Identifier	IS_CONST		366770	0					
ANR	367158	Identifier	IS_CONST		366770	1					
ANR	367159	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		366770	1		!=			
ANR	367160	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		366770	0		=			
ANR	367161	Identifier	retval		366770	0					
ANR	367162	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		366770	1					
ANR	367163	Callee	CACHED_POLYMORPHIC_PTR		366770	0					
ANR	367164	Identifier	CACHED_POLYMORPHIC_PTR		366770	0					
ANR	367165	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	1					
ANR	367166	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	0					
ANR	367167	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	0					
ANR	367168	Callee	Z_CACHE_SLOT_P		366770	0					
ANR	367169	Identifier	Z_CACHE_SLOT_P		366770	0					
ANR	367170	ArgumentList	EX_CONSTANT ( opline -> op1 )		366770	1					
ANR	367171	Argument	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	367172	CallExpression	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	367173	Callee	EX_CONSTANT		366770	0					
ANR	367174	Identifier	EX_CONSTANT		366770	0					
ANR	367175	ArgumentList	opline -> op1		366770	1					
ANR	367176	Argument	opline -> op1		366770	0					
ANR	367177	PtrMemberAccess	opline -> op1		366770	0					
ANR	367178	Identifier	opline		366770	0					
ANR	367179	Identifier	op1		366770	1					
ANR	367180	Argument	ce		366770	1					
ANR	367181	Identifier	ce		366770	0					
ANR	367182	Identifier	NULL		366770	1					
ANR	367183	CompoundStatement		53:96:1700:1700	366770	1					
ANR	367184	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		366770	0					
ANR	367185	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	4988:8:147903:147943	366770	0	True				
ANR	367186	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		366770	0					
ANR	367187	Callee	UNEXPECTED		366770	0					
ANR	367188	Identifier	UNEXPECTED		366770	0					
ANR	367189	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		366770	1					
ANR	367190	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		366770	0					
ANR	367191	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		366770	0		==			
ANR	367192	CallExpression	CE_STATIC_MEMBERS ( ce )		366770	0					
ANR	367193	Callee	CE_STATIC_MEMBERS		366770	0					
ANR	367194	Identifier	CE_STATIC_MEMBERS		366770	0					
ANR	367195	ArgumentList	ce		366770	1					
ANR	367196	Argument	ce		366770	0					
ANR	367197	Identifier	ce		366770	0					
ANR	367198	Identifier	NULL		366770	1					
ANR	367199	CompoundStatement		56:51:1805:1805	366770	1					
ANR	367200	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	4989:5:147953:148060	366770	0	True				
ANR	367201	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		366770	0					
ANR	367202	Callee	zend_throw_error		366770	0					
ANR	367203	Identifier	zend_throw_error		366770	0					
ANR	367204	ArgumentList	NULL		366770	1					
ANR	367205	Argument	NULL		366770	0					
ANR	367206	Identifier	NULL		366770	0					
ANR	367207	Argument	"""Access to undeclared static property: %s::$%s"""		366770	1					
ANR	367208	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		366770	0					
ANR	367209	Argument	ZSTR_VAL ( ce -> name )		366770	2					
ANR	367210	CallExpression	ZSTR_VAL ( ce -> name )		366770	0					
ANR	367211	Callee	ZSTR_VAL		366770	0					
ANR	367212	Identifier	ZSTR_VAL		366770	0					
ANR	367213	ArgumentList	ce -> name		366770	1					
ANR	367214	Argument	ce -> name		366770	0					
ANR	367215	PtrMemberAccess	ce -> name		366770	0					
ANR	367216	Identifier	ce		366770	0					
ANR	367217	Identifier	name		366770	1					
ANR	367218	Argument	ZSTR_VAL ( name )		366770	3					
ANR	367219	CallExpression	ZSTR_VAL ( name )		366770	0					
ANR	367220	Callee	ZSTR_VAL		366770	0					
ANR	367221	Identifier	ZSTR_VAL		366770	0					
ANR	367222	ArgumentList	name		366770	1					
ANR	367223	Argument	name		366770	0					
ANR	367224	Identifier	name		366770	0					
ANR	367225	ExpressionStatement	HANDLE_EXCEPTION ( )	4991:5:148068:148086	366770	1	True				
ANR	367226	CallExpression	HANDLE_EXCEPTION ( )		366770	0					
ANR	367227	Callee	HANDLE_EXCEPTION		366770	0					
ANR	367228	Identifier	HANDLE_EXCEPTION		366770	0					
ANR	367229	ArgumentList			366770	1					
ANR	367230	GotoStatement	goto fetch_var_return ;	4994:4:148099:148120	366770	1	True				
ANR	367231	Identifier	fetch_var_return		366770	0					
ANR	367232	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	4997:2:148133:148183	366770	2	True				
ANR	367233	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		366770	0		=			
ANR	367234	Identifier	retval		366770	0					
ANR	367235	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		366770	1					
ANR	367236	Callee	zend_std_get_static_property		366770	0					
ANR	367237	Identifier	zend_std_get_static_property		366770	0					
ANR	367238	ArgumentList	ce		366770	1					
ANR	367239	Argument	ce		366770	0					
ANR	367240	Identifier	ce		366770	0					
ANR	367241	Argument	name		366770	1					
ANR	367242	Identifier	name		366770	0					
ANR	367243	Argument	0		366770	2					
ANR	367244	PrimaryExpression	0		366770	0					
ANR	367245	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		366770	3					
ANR	367246	Condition	UNEXPECTED ( EG ( exception ) )	4998:6:148191:148215	366770	0	True				
ANR	367247	CallExpression	UNEXPECTED ( EG ( exception ) )		366770	0					
ANR	367248	Callee	UNEXPECTED		366770	0					
ANR	367249	Identifier	UNEXPECTED		366770	0					
ANR	367250	ArgumentList	EG ( exception )		366770	1					
ANR	367251	Argument	EG ( exception )		366770	0					
ANR	367252	CallExpression	EG ( exception )		366770	0					
ANR	367253	Callee	EG		366770	0					
ANR	367254	Identifier	EG		366770	0					
ANR	367255	ArgumentList	exception		366770	1					
ANR	367256	Argument	exception		366770	0					
ANR	367257	Identifier	exception		366770	0					
ANR	367258	CompoundStatement		66:33:2077:2077	366770	1					
ANR	367259	IfStatement	if ( IS_CONST != IS_CONST )		366770	0					
ANR	367260	Condition	IS_CONST != IS_CONST	4999:7:148227:148246	366770	0	True				
ANR	367261	EqualityExpression	IS_CONST != IS_CONST		366770	0		!=			
ANR	367262	Identifier	IS_CONST		366770	0					
ANR	367263	Identifier	IS_CONST		366770	1					
ANR	367264	CompoundStatement		67:29:2108:2108	366770	1					
ANR	367265	ExpressionStatement	zend_string_release ( name )	5000:4:148255:148280	366770	0	True				
ANR	367266	CallExpression	zend_string_release ( name )		366770	0					
ANR	367267	Callee	zend_string_release		366770	0					
ANR	367268	Identifier	zend_string_release		366770	0					
ANR	367269	ArgumentList	name		366770	1					
ANR	367270	Argument	name		366770	0					
ANR	367271	Identifier	name		366770	0					
ANR	367272	ExpressionStatement	HANDLE_EXCEPTION ( )	5003:3:148291:148309	366770	1	True				
ANR	367273	CallExpression	HANDLE_EXCEPTION ( )		366770	0					
ANR	367274	Callee	HANDLE_EXCEPTION		366770	0					
ANR	367275	Identifier	HANDLE_EXCEPTION		366770	0					
ANR	367276	ArgumentList			366770	1					
ANR	367277	IfStatement	if ( IS_CONST == IS_CONST && retval )		366770	4					
ANR	367278	Condition	IS_CONST == IS_CONST && retval	5005:6:148321:148350	366770	0	True				
ANR	367279	AndExpression	IS_CONST == IS_CONST && retval		366770	0		&&			
ANR	367280	EqualityExpression	IS_CONST == IS_CONST		366770	0		==			
ANR	367281	Identifier	IS_CONST		366770	0					
ANR	367282	Identifier	IS_CONST		366770	1					
ANR	367283	Identifier	retval		366770	1					
ANR	367284	CompoundStatement		73:38:2212:2212	366770	1					
ANR	367285	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	5006:3:148358:148433	366770	0	True				
ANR	367286	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		366770	0					
ANR	367287	Callee	CACHE_POLYMORPHIC_PTR		366770	0					
ANR	367288	Identifier	CACHE_POLYMORPHIC_PTR		366770	0					
ANR	367289	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	1					
ANR	367290	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	0					
ANR	367291	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		366770	0					
ANR	367292	Callee	Z_CACHE_SLOT_P		366770	0					
ANR	367293	Identifier	Z_CACHE_SLOT_P		366770	0					
ANR	367294	ArgumentList	EX_CONSTANT ( opline -> op1 )		366770	1					
ANR	367295	Argument	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	367296	CallExpression	EX_CONSTANT ( opline -> op1 )		366770	0					
ANR	367297	Callee	EX_CONSTANT		366770	0					
ANR	367298	Identifier	EX_CONSTANT		366770	0					
ANR	367299	ArgumentList	opline -> op1		366770	1					
ANR	367300	Argument	opline -> op1		366770	0					
ANR	367301	PtrMemberAccess	opline -> op1		366770	0					
ANR	367302	Identifier	opline		366770	0					
ANR	367303	Identifier	op1		366770	1					
ANR	367304	Argument	ce		366770	1					
ANR	367305	Identifier	ce		366770	0					
ANR	367306	Argument	retval		366770	2					
ANR	367307	Identifier	retval		366770	0					
ANR	367308	ElseStatement	else		366770	0					
ANR	367309	CompoundStatement		77:8:2307:2307	366770	0					
ANR	367310	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	5010:2:148452:148563	366770	0	True				
ANR	367311	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		366770	0		=			
ANR	367312	Identifier	target_symbol_table		366770	0					
ANR	367313	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		366770	1					
ANR	367314	Callee	zend_get_target_symbol_table		366770	0					
ANR	367315	Identifier	zend_get_target_symbol_table		366770	0					
ANR	367316	ArgumentList	execute_data		366770	1					
ANR	367317	Argument	execute_data		366770	0					
ANR	367318	Identifier	execute_data		366770	0					
ANR	367319	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		366770	1					
ANR	367320	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		366770	0		&			
ANR	367321	PtrMemberAccess	opline -> extended_value		366770	0					
ANR	367322	Identifier	opline		366770	0					
ANR	367323	Identifier	extended_value		366770	1					
ANR	367324	Identifier	ZEND_FETCH_TYPE_MASK		366770	1					
ANR	367325	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	5011:2:148567:148617	366770	1	True				
ANR	367326	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		366770	0		=			
ANR	367327	Identifier	retval		366770	0					
ANR	367328	CallExpression	"zend_hash_find ( target_symbol_table , name )"		366770	1					
ANR	367329	Callee	zend_hash_find		366770	0					
ANR	367330	Identifier	zend_hash_find		366770	0					
ANR	367331	ArgumentList	target_symbol_table		366770	1					
ANR	367332	Argument	target_symbol_table		366770	0					
ANR	367333	Identifier	target_symbol_table		366770	0					
ANR	367334	Argument	name		366770	1					
ANR	367335	Identifier	name		366770	0					
ANR	367336	IfStatement	if ( retval == NULL )		366770	2					
ANR	367337	Condition	retval == NULL	5012:6:148625:148638	366770	0	True				
ANR	367338	EqualityExpression	retval == NULL		366770	0		==			
ANR	367339	Identifier	retval		366770	0					
ANR	367340	Identifier	NULL		366770	1					
ANR	367341	CompoundStatement		80:22:2500:2500	366770	1					
ANR	367342	SwitchStatement	switch ( type )		366770	0					
ANR	367343	Condition	type	5013:11:148654:148657	366770	0	True				
ANR	367344	Identifier	type		366770	0					
ANR	367345	CompoundStatement		81:17:2519:2519	366770	1					
ANR	367346	Label	case BP_VAR_R :	5014:4:148666:148679	366770	0	True				
ANR	367347	Identifier	BP_VAR_R		366770	0					
ANR	367348	Label	case BP_VAR_UNSET :	5015:4:148685:148702	366770	1	True				
ANR	367349	Identifier	BP_VAR_UNSET		366770	0					
ANR	367350	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	5016:5:148709:148770	366770	2	True				
ANR	367351	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		366770	0					
ANR	367352	Callee	zend_error		366770	0					
ANR	367353	Identifier	zend_error		366770	0					
ANR	367354	ArgumentList	E_NOTICE		366770	1					
ANR	367355	Argument	E_NOTICE		366770	0					
ANR	367356	Identifier	E_NOTICE		366770	0					
ANR	367357	Argument	"""Undefined variable: %s"""		366770	1					
ANR	367358	PrimaryExpression	"""Undefined variable: %s"""		366770	0					
ANR	367359	Argument	ZSTR_VAL ( name )		366770	2					
ANR	367360	CallExpression	ZSTR_VAL ( name )		366770	0					
ANR	367361	Callee	ZSTR_VAL		366770	0					
ANR	367362	Identifier	ZSTR_VAL		366770	0					
ANR	367363	ArgumentList	name		366770	1					
ANR	367364	Argument	name		366770	0					
ANR	367365	Identifier	name		366770	0					
ANR	367366	Label	case BP_VAR_IS :	5018:4:148815:148829	366770	3	True				
ANR	367367	Identifier	BP_VAR_IS		366770	0					
ANR	367368	ExpressionStatement	retval = & EG ( uninitialized_zval )	5019:5:148836:148868	366770	4	True				
ANR	367369	AssignmentExpression	retval = & EG ( uninitialized_zval )		366770	0		=			
ANR	367370	Identifier	retval		366770	0					
ANR	367371	UnaryOperationExpression	& EG ( uninitialized_zval )		366770	1					
ANR	367372	UnaryOperator	&		366770	0					
ANR	367373	CallExpression	EG ( uninitialized_zval )		366770	1					
ANR	367374	Callee	EG		366770	0					
ANR	367375	Identifier	EG		366770	0					
ANR	367376	ArgumentList	uninitialized_zval		366770	1					
ANR	367377	Argument	uninitialized_zval		366770	0					
ANR	367378	Identifier	uninitialized_zval		366770	0					
ANR	367379	BreakStatement	break ;	5020:5:148875:148880	366770	5	True				
ANR	367380	Label	case BP_VAR_RW :	5021:4:148886:148900	366770	6	True				
ANR	367381	Identifier	BP_VAR_RW		366770	0					
ANR	367382	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	5022:5:148907:148968	366770	7	True				
ANR	367383	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		366770	0					
ANR	367384	Callee	zend_error		366770	0					
ANR	367385	Identifier	zend_error		366770	0					
ANR	367386	ArgumentList	E_NOTICE		366770	1					
ANR	367387	Argument	E_NOTICE		366770	0					
ANR	367388	Identifier	E_NOTICE		366770	0					
ANR	367389	Argument	"""Undefined variable: %s"""		366770	1					
ANR	367390	PrimaryExpression	"""Undefined variable: %s"""		366770	0					
ANR	367391	Argument	ZSTR_VAL ( name )		366770	2					
ANR	367392	CallExpression	ZSTR_VAL ( name )		366770	0					
ANR	367393	Callee	ZSTR_VAL		366770	0					
ANR	367394	Identifier	ZSTR_VAL		366770	0					
ANR	367395	ArgumentList	name		366770	1					
ANR	367396	Argument	name		366770	0					
ANR	367397	Identifier	name		366770	0					
ANR	367398	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	5023:5:148975:149052	366770	8	True				
ANR	367399	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		366770	0		=			
ANR	367400	Identifier	retval		366770	0					
ANR	367401	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		366770	1					
ANR	367402	Callee	zend_hash_update		366770	0					
ANR	367403	Identifier	zend_hash_update		366770	0					
ANR	367404	ArgumentList	target_symbol_table		366770	1					
ANR	367405	Argument	target_symbol_table		366770	0					
ANR	367406	Identifier	target_symbol_table		366770	0					
ANR	367407	Argument	name		366770	1					
ANR	367408	Identifier	name		366770	0					
ANR	367409	Argument	& EG ( uninitialized_zval )		366770	2					
ANR	367410	UnaryOperationExpression	& EG ( uninitialized_zval )		366770	0					
ANR	367411	UnaryOperator	&		366770	0					
ANR	367412	CallExpression	EG ( uninitialized_zval )		366770	1					
ANR	367413	Callee	EG		366770	0					
ANR	367414	Identifier	EG		366770	0					
ANR	367415	ArgumentList	uninitialized_zval		366770	1					
ANR	367416	Argument	uninitialized_zval		366770	0					
ANR	367417	Identifier	uninitialized_zval		366770	0					
ANR	367418	BreakStatement	break ;	5024:5:149059:149064	366770	9	True				
ANR	367419	Label	case BP_VAR_W :	5025:4:149070:149083	366770	10	True				
ANR	367420	Identifier	BP_VAR_W		366770	0					
ANR	367421	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	5026:5:149090:149168	366770	11	True				
ANR	367422	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		366770	0		=			
ANR	367423	Identifier	retval		366770	0					
ANR	367424	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		366770	1					
ANR	367425	Callee	zend_hash_add_new		366770	0					
ANR	367426	Identifier	zend_hash_add_new		366770	0					
ANR	367427	ArgumentList	target_symbol_table		366770	1					
ANR	367428	Argument	target_symbol_table		366770	0					
ANR	367429	Identifier	target_symbol_table		366770	0					
ANR	367430	Argument	name		366770	1					
ANR	367431	Identifier	name		366770	0					
ANR	367432	Argument	& EG ( uninitialized_zval )		366770	2					
ANR	367433	UnaryOperationExpression	& EG ( uninitialized_zval )		366770	0					
ANR	367434	UnaryOperator	&		366770	0					
ANR	367435	CallExpression	EG ( uninitialized_zval )		366770	1					
ANR	367436	Callee	EG		366770	0					
ANR	367437	Identifier	EG		366770	0					
ANR	367438	ArgumentList	uninitialized_zval		366770	1					
ANR	367439	Argument	uninitialized_zval		366770	0					
ANR	367440	Identifier	uninitialized_zval		366770	0					
ANR	367441	BreakStatement	break ;	5027:5:149175:149180	366770	12	True				
ANR	367442	Statement	EMPTY_SWITCH_DEFAULT_CASE	5028:4:149186:149210	366770	13	True				
ANR	367443	Statement	(	5028:29:149211:149211	366770	14	True				
ANR	367444	Statement	)	5028:30:149212:149212	366770	15	True				
ANR	367445	ElseStatement	else		366770	0					
ANR	367446	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		366770	0					
ANR	367447	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	5031:13:149299:149329	366770	0	True				
ANR	367448	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		366770	0		==			
ANR	367449	CallExpression	Z_TYPE_P ( retval )		366770	0					
ANR	367450	Callee	Z_TYPE_P		366770	0					
ANR	367451	Identifier	Z_TYPE_P		366770	0					
ANR	367452	ArgumentList	retval		366770	1					
ANR	367453	Argument	retval		366770	0					
ANR	367454	Identifier	retval		366770	0					
ANR	367455	Identifier	IS_INDIRECT		366770	1					
ANR	367456	CompoundStatement		99:46:3191:3191	366770	1					
ANR	367457	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	5032:3:149337:149366	366770	0	True				
ANR	367458	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		366770	0		=			
ANR	367459	Identifier	retval		366770	0					
ANR	367460	CallExpression	Z_INDIRECT_P ( retval )		366770	1					
ANR	367461	Callee	Z_INDIRECT_P		366770	0					
ANR	367462	Identifier	Z_INDIRECT_P		366770	0					
ANR	367463	ArgumentList	retval		366770	1					
ANR	367464	Argument	retval		366770	0					
ANR	367465	Identifier	retval		366770	0					
ANR	367466	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		366770	1					
ANR	367467	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	5033:7:149375:149402	366770	0	True				
ANR	367468	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		366770	0		==			
ANR	367469	CallExpression	Z_TYPE_P ( retval )		366770	0					
ANR	367470	Callee	Z_TYPE_P		366770	0					
ANR	367471	Identifier	Z_TYPE_P		366770	0					
ANR	367472	ArgumentList	retval		366770	1					
ANR	367473	Argument	retval		366770	0					
ANR	367474	Identifier	retval		366770	0					
ANR	367475	Identifier	IS_UNDEF		366770	1					
ANR	367476	CompoundStatement		101:37:3264:3264	366770	1					
ANR	367477	SwitchStatement	switch ( type )		366770	0					
ANR	367478	Condition	type	5034:12:149419:149422	366770	0	True				
ANR	367479	Identifier	type		366770	0					
ANR	367480	CompoundStatement		102:18:3284:3284	366770	1					
ANR	367481	Label	case BP_VAR_R :	5035:5:149432:149445	366770	0	True				
ANR	367482	Identifier	BP_VAR_R		366770	0					
ANR	367483	Label	case BP_VAR_UNSET :	5036:5:149452:149469	366770	1	True				
ANR	367484	Identifier	BP_VAR_UNSET		366770	0					
ANR	367485	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	5037:6:149477:149538	366770	2	True				
ANR	367486	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		366770	0					
ANR	367487	Callee	zend_error		366770	0					
ANR	367488	Identifier	zend_error		366770	0					
ANR	367489	ArgumentList	E_NOTICE		366770	1					
ANR	367490	Argument	E_NOTICE		366770	0					
ANR	367491	Identifier	E_NOTICE		366770	0					
ANR	367492	Argument	"""Undefined variable: %s"""		366770	1					
ANR	367493	PrimaryExpression	"""Undefined variable: %s"""		366770	0					
ANR	367494	Argument	ZSTR_VAL ( name )		366770	2					
ANR	367495	CallExpression	ZSTR_VAL ( name )		366770	0					
ANR	367496	Callee	ZSTR_VAL		366770	0					
ANR	367497	Identifier	ZSTR_VAL		366770	0					
ANR	367498	ArgumentList	name		366770	1					
ANR	367499	Argument	name		366770	0					
ANR	367500	Identifier	name		366770	0					
ANR	367501	Label	case BP_VAR_IS :	5039:5:149585:149599	366770	3	True				
ANR	367502	Identifier	BP_VAR_IS		366770	0					
ANR	367503	ExpressionStatement	retval = & EG ( uninitialized_zval )	5040:6:149607:149639	366770	4	True				
ANR	367504	AssignmentExpression	retval = & EG ( uninitialized_zval )		366770	0		=			
ANR	367505	Identifier	retval		366770	0					
ANR	367506	UnaryOperationExpression	& EG ( uninitialized_zval )		366770	1					
ANR	367507	UnaryOperator	&		366770	0					
ANR	367508	CallExpression	EG ( uninitialized_zval )		366770	1					
ANR	367509	Callee	EG		366770	0					
ANR	367510	Identifier	EG		366770	0					
ANR	367511	ArgumentList	uninitialized_zval		366770	1					
ANR	367512	Argument	uninitialized_zval		366770	0					
ANR	367513	Identifier	uninitialized_zval		366770	0					
ANR	367514	BreakStatement	break ;	5041:6:149647:149652	366770	5	True				
ANR	367515	Label	case BP_VAR_RW :	5042:5:149659:149673	366770	6	True				
ANR	367516	Identifier	BP_VAR_RW		366770	0					
ANR	367517	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	5043:6:149681:149742	366770	7	True				
ANR	367518	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		366770	0					
ANR	367519	Callee	zend_error		366770	0					
ANR	367520	Identifier	zend_error		366770	0					
ANR	367521	ArgumentList	E_NOTICE		366770	1					
ANR	367522	Argument	E_NOTICE		366770	0					
ANR	367523	Identifier	E_NOTICE		366770	0					
ANR	367524	Argument	"""Undefined variable: %s"""		366770	1					
ANR	367525	PrimaryExpression	"""Undefined variable: %s"""		366770	0					
ANR	367526	Argument	ZSTR_VAL ( name )		366770	2					
ANR	367527	CallExpression	ZSTR_VAL ( name )		366770	0					
ANR	367528	Callee	ZSTR_VAL		366770	0					
ANR	367529	Identifier	ZSTR_VAL		366770	0					
ANR	367530	ArgumentList	name		366770	1					
ANR	367531	Argument	name		366770	0					
ANR	367532	Identifier	name		366770	0					
ANR	367533	Label	case BP_VAR_W :	5045:5:149789:149802	366770	8	True				
ANR	367534	Identifier	BP_VAR_W		366770	0					
ANR	367535	ExpressionStatement	ZVAL_NULL ( retval )	5046:6:149810:149827	366770	9	True				
ANR	367536	CallExpression	ZVAL_NULL ( retval )		366770	0					
ANR	367537	Callee	ZVAL_NULL		366770	0					
ANR	367538	Identifier	ZVAL_NULL		366770	0					
ANR	367539	ArgumentList	retval		366770	1					
ANR	367540	Argument	retval		366770	0					
ANR	367541	Identifier	retval		366770	0					
ANR	367542	BreakStatement	break ;	5047:6:149835:149840	366770	10	True				
ANR	367543	Statement	EMPTY_SWITCH_DEFAULT_CASE	5048:5:149847:149871	366770	11	True				
ANR	367544	Statement	(	5048:30:149872:149872	366770	12	True				
ANR	367545	Statement	)	5048:31:149873:149873	366770	13	True				
ANR	367546	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		366770	3					
ANR	367547	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	5052:6:149896:149963	366770	0	True				
ANR	367548	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		366770	0		==			
ANR	367549	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		366770	0		&			
ANR	367550	PtrMemberAccess	opline -> extended_value		366770	0					
ANR	367551	Identifier	opline		366770	0					
ANR	367552	Identifier	extended_value		366770	1					
ANR	367553	Identifier	ZEND_FETCH_TYPE_MASK		366770	1					
ANR	367554	Identifier	ZEND_FETCH_STATIC		366770	1					
ANR	367555	CompoundStatement		120:76:3825:3825	366770	1					
ANR	367556	IfStatement	if ( Z_CONSTANT_P ( retval ) )		366770	0					
ANR	367557	Condition	Z_CONSTANT_P ( retval )	5053:7:149975:149994	366770	0	True				
ANR	367558	CallExpression	Z_CONSTANT_P ( retval )		366770	0					
ANR	367559	Callee	Z_CONSTANT_P		366770	0					
ANR	367560	Identifier	Z_CONSTANT_P		366770	0					
ANR	367561	ArgumentList	retval		366770	1					
ANR	367562	Argument	retval		366770	0					
ANR	367563	Identifier	retval		366770	0					
ANR	367564	CompoundStatement		121:29:3856:3856	366770	1					
ANR	367565	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		366770	0					
ANR	367566	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	5054:8:150007:150069	366770	0	True				
ANR	367567	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		366770	0					
ANR	367568	Callee	UNEXPECTED		366770	0					
ANR	367569	Identifier	UNEXPECTED		366770	0					
ANR	367570	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		366770	1					
ANR	367571	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		366770	0					
ANR	367572	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		366770	0		!=			
ANR	367573	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		366770	0					
ANR	367574	Callee	zval_update_constant_ex		366770	0					
ANR	367575	Identifier	zval_update_constant_ex		366770	0					
ANR	367576	ArgumentList	retval		366770	1					
ANR	367577	Argument	retval		366770	0					
ANR	367578	Identifier	retval		366770	0					
ANR	367579	Argument	1		366770	1					
ANR	367580	PrimaryExpression	1		366770	0					
ANR	367581	Argument	NULL		366770	2					
ANR	367582	Identifier	NULL		366770	0					
ANR	367583	Identifier	SUCCESS		366770	1					
ANR	367584	CompoundStatement		122:73:3931:3931	366770	1					
ANR	367585	ExpressionStatement	HANDLE_EXCEPTION ( )	5056:5:150080:150098	366770	0	True				
ANR	367586	CallExpression	HANDLE_EXCEPTION ( )		366770	0					
ANR	367587	Callee	HANDLE_EXCEPTION		366770	0					
ANR	367588	Identifier	HANDLE_EXCEPTION		366770	0					
ANR	367589	ArgumentList			366770	1					
ANR	367590	ElseStatement	else		366770	0					
ANR	367591	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		366770	0					
ANR	367592	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	5059:13:150124:150196	366770	0	True				
ANR	367593	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		366770	0		!=			
ANR	367594	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		366770	0		&			
ANR	367595	PtrMemberAccess	opline -> extended_value		366770	0					
ANR	367596	Identifier	opline		366770	0					
ANR	367597	Identifier	extended_value		366770	1					
ANR	367598	Identifier	ZEND_FETCH_TYPE_MASK		366770	1					
ANR	367599	Identifier	ZEND_FETCH_GLOBAL_LOCK		366770	1					
ANR	367600	CompoundStatement		127:88:4058:4058	366770	1					
ANR	367601	IfStatement	if ( IS_CONST != IS_CONST )		366770	8					
ANR	367602	Condition	IS_CONST != IS_CONST	5064:5:150215:150234	366770	0	True				
ANR	367603	EqualityExpression	IS_CONST != IS_CONST		366770	0		!=			
ANR	367604	Identifier	IS_CONST		366770	0					
ANR	367605	Identifier	IS_CONST		366770	1					
ANR	367606	CompoundStatement		132:27:4096:4096	366770	1					
ANR	367607	ExpressionStatement	zend_string_release ( name )	5065:2:150241:150266	366770	0	True				
ANR	367608	CallExpression	zend_string_release ( name )		366770	0					
ANR	367609	Callee	zend_string_release		366770	0					
ANR	367610	Identifier	zend_string_release		366770	0					
ANR	367611	ArgumentList	name		366770	1					
ANR	367612	Argument	name		366770	0					
ANR	367613	Identifier	name		366770	0					
ANR	367614	Label	fetch_var_return :	5068:0:150272:150288	366770	9	True				
ANR	367615	Identifier	fetch_var_return		366770	0					
ANR	367616	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	5069:1:150291:150318	366770	10	True				
ANR	367617	CallExpression	ZEND_ASSERT ( retval != NULL )		366770	0					
ANR	367618	Callee	ZEND_ASSERT		366770	0					
ANR	367619	Identifier	ZEND_ASSERT		366770	0					
ANR	367620	ArgumentList	retval != NULL		366770	1					
ANR	367621	Argument	retval != NULL		366770	0					
ANR	367622	EqualityExpression	retval != NULL		366770	0		!=			
ANR	367623	Identifier	retval		366770	0					
ANR	367624	Identifier	NULL		366770	1					
ANR	367625	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		366770	11					
ANR	367626	Condition	type == BP_VAR_R || type == BP_VAR_IS	5070:5:150325:150361	366770	0	True				
ANR	367627	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		366770	0		||			
ANR	367628	EqualityExpression	type == BP_VAR_R		366770	0		==			
ANR	367629	Identifier	type		366770	0					
ANR	367630	Identifier	BP_VAR_R		366770	1					
ANR	367631	EqualityExpression	type == BP_VAR_IS		366770	1		==			
ANR	367632	Identifier	type		366770	0					
ANR	367633	Identifier	BP_VAR_IS		366770	1					
ANR	367634	CompoundStatement		138:44:4223:4223	366770	1					
ANR	367635	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		366770	0					
ANR	367636	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	5071:30:150396:150441	366770	0	True				
ANR	367637	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		366770	0		&&			
ANR	367638	CallExpression	Z_ISREF_P ( retval )		366770	0					
ANR	367639	Callee	Z_ISREF_P		366770	0					
ANR	367640	Identifier	Z_ISREF_P		366770	0					
ANR	367641	ArgumentList	retval		366770	1					
ANR	367642	Argument	retval		366770	0					
ANR	367643	Identifier	retval		366770	0					
ANR	367644	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		366770	1		==			
ANR	367645	CallExpression	Z_REFCOUNT_P ( retval )		366770	0					
ANR	367646	Callee	Z_REFCOUNT_P		366770	0					
ANR	367647	Identifier	Z_REFCOUNT_P		366770	0					
ANR	367648	ArgumentList	retval		366770	1					
ANR	367649	Argument	retval		366770	0					
ANR	367650	Identifier	retval		366770	0					
ANR	367651	PrimaryExpression	1		366770	1					
ANR	367652	CompoundStatement		139:78:4303:4303	366770	1					
ANR	367653	ExpressionStatement	ZVAL_UNREF ( retval )	5072:3:150449:150467	366770	0	True				
ANR	367654	CallExpression	ZVAL_UNREF ( retval )		366770	0					
ANR	367655	Callee	ZVAL_UNREF		366770	0					
ANR	367656	Identifier	ZVAL_UNREF		366770	0					
ANR	367657	ArgumentList	retval		366770	1					
ANR	367658	Argument	retval		366770	0					
ANR	367659	Identifier	retval		366770	0					
ANR	367660	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	5074:2:150475:150520	366770	1	True				
ANR	367661	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		366770	0					
ANR	367662	Callee	ZVAL_COPY		366770	0					
ANR	367663	Identifier	ZVAL_COPY		366770	0					
ANR	367664	ArgumentList	EX_VAR ( opline -> result . var )		366770	1					
ANR	367665	Argument	EX_VAR ( opline -> result . var )		366770	0					
ANR	367666	CallExpression	EX_VAR ( opline -> result . var )		366770	0					
ANR	367667	Callee	EX_VAR		366770	0					
ANR	367668	Identifier	EX_VAR		366770	0					
ANR	367669	ArgumentList	opline -> result . var		366770	1					
ANR	367670	Argument	opline -> result . var		366770	0					
ANR	367671	MemberAccess	opline -> result . var		366770	0					
ANR	367672	PtrMemberAccess	opline -> result		366770	0					
ANR	367673	Identifier	opline		366770	0					
ANR	367674	Identifier	result		366770	1					
ANR	367675	Identifier	var		366770	1					
ANR	367676	Argument	retval		366770	1					
ANR	367677	Identifier	retval		366770	0					
ANR	367678	ElseStatement	else		366770	0					
ANR	367679	CompoundStatement		143:8:4389:4389	366770	0					
ANR	367680	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	5076:2:150534:150583	366770	0	True				
ANR	367681	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		366770	0					
ANR	367682	Callee	ZVAL_INDIRECT		366770	0					
ANR	367683	Identifier	ZVAL_INDIRECT		366770	0					
ANR	367684	ArgumentList	EX_VAR ( opline -> result . var )		366770	1					
ANR	367685	Argument	EX_VAR ( opline -> result . var )		366770	0					
ANR	367686	CallExpression	EX_VAR ( opline -> result . var )		366770	0					
ANR	367687	Callee	EX_VAR		366770	0					
ANR	367688	Identifier	EX_VAR		366770	0					
ANR	367689	ArgumentList	opline -> result . var		366770	1					
ANR	367690	Argument	opline -> result . var		366770	0					
ANR	367691	MemberAccess	opline -> result . var		366770	0					
ANR	367692	PtrMemberAccess	opline -> result		366770	0					
ANR	367693	Identifier	opline		366770	0					
ANR	367694	Identifier	result		366770	1					
ANR	367695	Identifier	var		366770	1					
ANR	367696	Argument	retval		366770	1					
ANR	367697	Identifier	retval		366770	0					
ANR	367698	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	5078:1:150589:150626	366770	12	True				
ANR	367699	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		366770	0					
ANR	367700	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		366770	0					
ANR	367701	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		366770	0					
ANR	367702	ArgumentList			366770	1					
ANR	367703	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		366770	1					
ANR	367704	Identifier	zend_fetch_var_address_helper_SPEC_CONST_CONST		366770	2					
ANR	367705	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		366770	3					
ANR	367706	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	4932:92:146102:146137	366770	0	True				
ANR	367707	ParameterType	int type		366770	0					
ANR	367708	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		366770	1					
ANR	367709	CFGEntryNode	ENTRY		366770		True				
ANR	367710	CFGExitNode	EXIT		366770		True				
ANR	367711	Symbol	ZEND_FETCH_CLASS_DEFAULT		366770						
ANR	367712	Symbol	exception		366770						
ANR	367713	Symbol	zend_get_target_symbol_table		366770						
ANR	367714	Symbol	opline -> op2 . var		366770						
ANR	367715	Symbol	IS_CV		366770						
ANR	367716	Symbol	Z_CONSTANT_P		366770						
ANR	367717	Symbol	* ce		366770						
ANR	367718	Symbol	type		366770						
ANR	367719	Symbol	Z_REFCOUNT_P		366770						
ANR	367720	Symbol	execute_data		366770						
ANR	367721	Symbol	opline -> extended_value		366770						
ANR	367722	Symbol	opline -> result		366770						
ANR	367723	Symbol	zend_std_get_static_property		366770						
ANR	367724	Symbol	zend_hash_find		366770						
ANR	367725	Symbol	opline		366770						
ANR	367726	Symbol	Z_CE_P		366770						
ANR	367727	Symbol	target_symbol_table		366770						
ANR	367728	Symbol	IS_STRING		366770						
ANR	367729	Symbol	ce -> name		366770						
ANR	367730	Symbol	zend_hash_update		366770						
ANR	367731	Symbol	BP_VAR_IS		366770						
ANR	367732	Symbol	IS_UNDEF		366770						
ANR	367733	Symbol	BP_VAR_R		366770						
ANR	367734	Symbol	IS_CONST		366770						
ANR	367735	Symbol	EG		366770						
ANR	367736	Symbol	NULL		366770						
ANR	367737	Symbol	EX_CONSTANT		366770						
ANR	367738	Symbol	Z_CACHE_SLOT_P		366770						
ANR	367739	Symbol	CE_STATIC_MEMBERS		366770						
ANR	367740	Symbol	E_NOTICE		366770						
ANR	367741	Symbol	varname		366770						
ANR	367742	Symbol	retval		366770						
ANR	367743	Symbol	name		366770						
ANR	367744	Symbol	EX_VAR		366770						
ANR	367745	Symbol	zend_fetch_class_by_name		366770						
ANR	367746	Symbol	Z_STR_P		366770						
ANR	367747	Symbol	Z_ISREF_P		366770						
ANR	367748	Symbol	IS_INDIRECT		366770						
ANR	367749	Symbol	opline -> op1		366770						
ANR	367750	Symbol	CACHED_PTR		366770						
ANR	367751	Symbol	opline -> op2		366770						
ANR	367752	Symbol	Z_INDIRECT_P		366770						
ANR	367753	Symbol	& EG		366770						
ANR	367754	Symbol	UNEXPECTED		366770						
ANR	367755	Symbol	ZEND_FETCH_CLASS_EXCEPTION		366770						
ANR	367756	Symbol	ZEND_FETCH_STATIC		366770						
ANR	367757	Symbol	uninitialized_zval		366770						
ANR	367758	Symbol	ce		366770						
ANR	367759	Symbol	SUCCESS		366770						
ANR	367760	Symbol	zval_get_string		366770						
ANR	367761	Symbol	ZEND_FETCH_TYPE_MASK		366770						
ANR	367762	Symbol	zend_hash_add_new		366770						
ANR	367763	Symbol	Z_TYPE_P		366770						
ANR	367764	Symbol	CACHED_POLYMORPHIC_PTR		366770						
ANR	367765	Symbol	ZSTR_VAL		366770						
ANR	367766	Symbol	* opline		366770						
ANR	367767	Symbol	ZEND_FETCH_GLOBAL_LOCK		366770						
ANR	367768	Symbol	zval_update_constant_ex		366770						
ANR	367769	Symbol	EXPECTED		366770						
ANR	367770	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		366770						
ANR	367771	Symbol	opline -> result . var		366770						
ANR	367772	Symbol	IS_UNUSED		366770						
ANR	367773	DeclStmt									
ANR	367774	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367775	DeclStmt									
ANR	367776	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367777	DeclStmt									
ANR	367778	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367779	DeclStmt									
ANR	367780	Decl							zend_free_op	zend_free_op	free_op1
ANR	367781	DeclStmt									
ANR	367782	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367783	DeclStmt									
ANR	367784	Decl							zval	zval *	offset
ANR	367785	DeclStmt									
ANR	367786	Decl							zend_object	zend_object *	zobj
ANR	367787	DeclStmt									
ANR	367788	Decl							zval	zval *	retval
ANR	367789	DeclStmt									
ANR	367790	Decl							uint32_t	uint32_t	prop_offset
ANR	367791	DeclStmt									
ANR	367792	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367793	DeclStmt									
ANR	367794	Decl							zval	zval *	offset
ANR	367795	DeclStmt									
ANR	367796	Decl							zend_object	zend_object *	zobj
ANR	367797	DeclStmt									
ANR	367798	Decl							zval	zval *	retval
ANR	367799	DeclStmt									
ANR	367800	Decl							uint32_t	uint32_t	prop_offset
ANR	367801	DeclStmt									
ANR	367802	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367803	DeclStmt									
ANR	367804	Decl							zend_free_op	zend_free_op	free_op1
ANR	367805	DeclStmt									
ANR	367806	Decl							zval	zval *	property
ANR	367807	DeclStmt									
ANR	367808	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367809	DeclStmt									
ANR	367810	Decl							zval	zval *	value
ANR	367811	DeclStmt									
ANR	367812	Decl							zval	zval *	result
ANR	367813	DeclStmt									
ANR	367814	Decl							zval	zval *	retval
ANR	367815	DeclStmt									
ANR	367816	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	367817	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	367818	DeclStmt									
ANR	367819	Decl							zend_string	zend_string *	op1_str
ANR	367820	Decl							zend_string	zend_string *	op2_str
ANR	367821	Decl							zend_string	zend_string *	str
ANR	367822	DeclStmt									
ANR	367823	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	367824	DeclStmt									
ANR	367825	Decl							zval	zval *	object
ANR	367826	DeclStmt									
ANR	367827	Decl							zend_function	zend_function *	fbc
ANR	367828	DeclStmt									
ANR	367829	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	367830	DeclStmt									
ANR	367831	Decl							zend_object	zend_object *	obj
ANR	367832	DeclStmt									
ANR	367833	Decl							zend_execute_data	zend_execute_data *	call
ANR	367834	DeclStmt									
ANR	367835	Decl							uint32_t	uint32_t	call_info
ANR	367836	DeclStmt									
ANR	367837	Decl							zend_object	zend_object *	orig_obj
ANR	367838	DeclStmt									
ANR	367839	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	367840	DeclStmt									
ANR	367841	Decl							zend_class_entry	zend_class_entry *	ce
ANR	367842	DeclStmt									
ANR	367843	Decl							zend_object	zend_object *	object
ANR	367844	DeclStmt									
ANR	367845	Decl							zend_function	zend_function *	fbc
ANR	367846	DeclStmt									
ANR	367847	Decl							zend_execute_data	zend_execute_data *	call
ANR	367848	DeclStmt									
ANR	367849	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	367850	DeclStmt									
ANR	367851	Decl							zend_fcall_info_cache	zend_fcall_info_cache	fcc
ANR	367852	DeclStmt									
ANR	367853	Decl							char	char *	error
ANR	367854	DeclStmt									
ANR	367855	Decl							zend_function	zend_function *	func
ANR	367856	DeclStmt									
ANR	367857	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	367858	DeclStmt									
ANR	367859	Decl							zend_object	zend_object *	object
ANR	367860	DeclStmt									
ANR	367861	Decl							zend_execute_data	zend_execute_data *	call
ANR	367862	DeclStmt									
ANR	367863	Decl							uint32_t	uint32_t	call_info
ANR	367864	DeclStmt									
ANR	367865	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	367866	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	367867	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	367868	DeclStmt									
ANR	367869	Decl							int	int	result
ANR	367870	DeclStmt									
ANR	367871	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	367872	DeclStmt									
ANR	367873	Decl							zend_constant	zend_constant *	c
ANR	367874	DeclStmt									
ANR	367875	Decl							char	char *	actual
ANR	367876	DeclStmt									
ANR	367877	Decl							zend_class_entry	zend_class_entry *	ce
ANR	367878	DeclStmt									
ANR	367879	Decl							zval	zval *	value
ANR	367880	DeclStmt									
ANR	367881	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	367882	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	367883	DeclStmt									
ANR	367884	Decl							zend_refcounted	zend_refcounted *	ref
ANR	367885	DeclStmt									
ANR	367886	Decl							zval	zval *	offset
ANR	367887	DeclStmt									
ANR	367888	Decl							zend_string	zend_string *	str
ANR	367889	DeclStmt									
ANR	367890	Decl							zend_ulong	zend_ulong	hval
ANR	367891	DeclStmt									
ANR	367892	Decl							zval	zval *	array
ANR	367893	DeclStmt									
ANR	367894	Decl							uint32_t	uint32_t	size
ANR	367895	DeclStmt									
ANR	367896	Decl							USE_OPLINE	USE_OPLINE	array
ANR	367897	DeclStmt									
ANR	367898	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	367899	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	367900	DeclStmt									
ANR	367901	Decl							HashTable	HashTable *	target_symbol_table
ANR	367902	DeclStmt									
ANR	367903	Decl							zval	zval *	var
ANR	367904	DeclStmt									
ANR	367905	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	367906	DeclStmt									
ANR	367907	Decl							zval	zval *	z
ANR	367908	DeclStmt									
ANR	367909	Decl							zend_class_entry	zend_class_entry *	ce
ANR	367910	DeclStmt									
ANR	367911	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	367912	DeclStmt									
ANR	367913	Decl							int	int	result
ANR	367914	DeclStmt									
ANR	367915	Decl							zval	zval	tmp
ANR	367916	Decl							zval	zval *	varname
ANR	367917	DeclStmt									
ANR	367918	Decl							zend_class_entry	zend_class_entry *	ce
ANR	367919	DeclStmt									
ANR	367920	Decl							HashTable	HashTable *	target_symbol_table
ANR	367921	DeclStmt									
ANR	367922	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367923	DeclStmt									
ANR	367924	Decl							int	int	result
ANR	367925	DeclStmt									
ANR	367926	Decl							zend_ulong	zend_ulong	hval
ANR	367927	DeclStmt									
ANR	367928	Decl							zval	zval *	offset
ANR	367929	DeclStmt									
ANR	367930	Decl							HashTable	HashTable *	ht
ANR	367931	DeclStmt									
ANR	367932	Decl							zval	zval *	value
ANR	367933	DeclStmt									
ANR	367934	Decl							zend_string	zend_string *	str
ANR	367935	DeclStmt									
ANR	367936	Decl							zend_long	zend_long	lval
ANR	367937	DeclStmt									
ANR	367938	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	367939	DeclStmt									
ANR	367940	Decl							int	int	result
ANR	367941	DeclStmt									
ANR	367942	Decl							zval	zval *	offset
ANR	367943	DeclStmt									
ANR	367944	Decl							USE_OPLINE zval	USE_OPLINE zval *	name
ANR	367945	DeclStmt									
ANR	367946	Decl							zval	zval *	val
ANR	367947	DeclStmt									
ANR	367948	Decl							zend_constant	zend_constant	c
ANR	367949	DeclStmt									
ANR	367950	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	367951	DeclStmt									
ANR	367952	Decl							zval	zval *	value
ANR	367953	DeclStmt									
ANR	367954	Decl							zval	zval *	value_ptr
ANR	367955	DeclStmt									
ANR	367956	Decl							zval	zval *	value
ANR	367957	DeclStmt									
ANR	367958	Decl							zval	zval *	key
ANR	367959	DeclStmt									
ANR	367960	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	367961	DeclStmt									
ANR	367962	Decl							zval	zval *	op1
ANR	367963	Decl							zval	zval *	op2
ANR	367964	DeclStmt									
ANR	367965	Decl							int	int	result
ANR	367966	DeclStmt									
ANR	367967	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	367968	DeclStmt									
ANR	367969	Decl							zval	zval *	op1
ANR	367970	Decl							zval	zval *	op2
ANR	367971	DeclStmt									
ANR	367972	Decl							int	int	result
ANR	367973	DeclStmt									
ANR	367974	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	367975	DeclStmt									
ANR	367976	Decl							zval	zval *	value
ANR	367977	DeclStmt									
ANR	367978	Decl							zval	zval *	value_ptr
ANR	367979	DeclStmt									
ANR	367980	Decl							zval	zval *	value
ANR	367981	DeclStmt									
ANR	367982	Decl							zend_free_op	zend_free_op	free_op2
ANR	367983	DeclStmt									
ANR	367984	Decl							zval	zval *	key
ANR	367985	DeclStmt									
ANR	367986	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	367987	DeclStmt									
ANR	367988	Decl							zval	zval *	op1
ANR	367989	Decl							zval	zval *	op2
ANR	367990	DeclStmt									
ANR	367991	Decl							int	int	result
ANR	367992	DeclStmt									
ANR	367993	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	367994	DeclStmt									
ANR	367995	Decl							zval	zval *	op1
ANR	367996	Decl							zval	zval *	op2
ANR	367997	DeclStmt									
ANR	367998	Decl							int	int	result
ANR	367999	Function	zend_fetch_var_address_helper_SPEC_CONST_VAR	6851:0:204329:208941							
ANR	368000	FunctionDef	zend_fetch_var_address_helper_SPEC_CONST_VAR (int type ZEND_OPCODE_HANDLER_ARGS_DC)		367999	0					
ANR	368001	CompoundStatement		6852:0:204457:208941	367999	0					
ANR	368002	IdentifierDeclStatement	USE_OPLINE zval * varname ;	6853:1:204460:204486	367999	0	True				
ANR	368003	IdentifierDecl	* varname		367999	0					
ANR	368004	IdentifierDeclType	USE_OPLINE zval *		367999	0					
ANR	368005	Identifier	varname		367999	1					
ANR	368006	IdentifierDeclStatement	zval * retval ;	6856:1:204489:204501	367999	1	True				
ANR	368007	IdentifierDecl	* retval		367999	0					
ANR	368008	IdentifierDeclType	zval *		367999	0					
ANR	368009	Identifier	retval		367999	1					
ANR	368010	IdentifierDeclStatement	zend_string * name ;	6857:1:204504:204521	367999	2	True				
ANR	368011	IdentifierDecl	* name		367999	0					
ANR	368012	IdentifierDeclType	zend_string *		367999	0					
ANR	368013	Identifier	name		367999	1					
ANR	368014	IdentifierDeclStatement	HashTable * target_symbol_table ;	6858:1:204524:204554	367999	3	True				
ANR	368015	IdentifierDecl	* target_symbol_table		367999	0					
ANR	368016	IdentifierDeclType	HashTable *		367999	0					
ANR	368017	Identifier	target_symbol_table		367999	1					
ANR	368018	ExpressionStatement	SAVE_OPLINE ( )	6860:1:204558:204571	367999	4	True				
ANR	368019	CallExpression	SAVE_OPLINE ( )		367999	0					
ANR	368020	Callee	SAVE_OPLINE		367999	0					
ANR	368021	Identifier	SAVE_OPLINE		367999	0					
ANR	368022	ArgumentList			367999	1					
ANR	368023	ExpressionStatement	varname = EX_CONSTANT ( opline -> op1 )	6861:1:204574:204608	367999	5	True				
ANR	368024	AssignmentExpression	varname = EX_CONSTANT ( opline -> op1 )		367999	0		=			
ANR	368025	Identifier	varname		367999	0					
ANR	368026	CallExpression	EX_CONSTANT ( opline -> op1 )		367999	1					
ANR	368027	Callee	EX_CONSTANT		367999	0					
ANR	368028	Identifier	EX_CONSTANT		367999	0					
ANR	368029	ArgumentList	opline -> op1		367999	1					
ANR	368030	Argument	opline -> op1		367999	0					
ANR	368031	PtrMemberAccess	opline -> op1		367999	0					
ANR	368032	Identifier	opline		367999	0					
ANR	368033	Identifier	op1		367999	1					
ANR	368034	IfStatement	if ( IS_CONST == IS_CONST )		367999	6					
ANR	368035	Condition	IS_CONST == IS_CONST	6863:6:204617:204636	367999	0	True				
ANR	368036	EqualityExpression	IS_CONST == IS_CONST		367999	0		==			
ANR	368037	Identifier	IS_CONST		367999	0					
ANR	368038	Identifier	IS_CONST		367999	1					
ANR	368039	CompoundStatement		12:28:181:181	367999	1					
ANR	368040	ExpressionStatement	name = Z_STR_P ( varname )	6864:2:204643:204666	367999	0	True				
ANR	368041	AssignmentExpression	name = Z_STR_P ( varname )		367999	0		=			
ANR	368042	Identifier	name		367999	0					
ANR	368043	CallExpression	Z_STR_P ( varname )		367999	1					
ANR	368044	Callee	Z_STR_P		367999	0					
ANR	368045	Identifier	Z_STR_P		367999	0					
ANR	368046	ArgumentList	varname		367999	1					
ANR	368047	Argument	varname		367999	0					
ANR	368048	Identifier	varname		367999	0					
ANR	368049	ElseStatement	else		367999	0					
ANR	368050	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		367999	0					
ANR	368051	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	6865:12:204680:204719	367999	0	True				
ANR	368052	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		367999	0					
ANR	368053	Callee	EXPECTED		367999	0					
ANR	368054	Identifier	EXPECTED		367999	0					
ANR	368055	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		367999	1					
ANR	368056	Argument	Z_TYPE_P ( varname ) == IS_STRING		367999	0					
ANR	368057	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		367999	0		==			
ANR	368058	CallExpression	Z_TYPE_P ( varname )		367999	0					
ANR	368059	Callee	Z_TYPE_P		367999	0					
ANR	368060	Identifier	Z_TYPE_P		367999	0					
ANR	368061	ArgumentList	varname		367999	1					
ANR	368062	Argument	varname		367999	0					
ANR	368063	Identifier	varname		367999	0					
ANR	368064	Identifier	IS_STRING		367999	1					
ANR	368065	CompoundStatement		14:54:264:264	367999	1					
ANR	368066	ExpressionStatement	name = Z_STR_P ( varname )	6866:2:204726:204749	367999	0	True				
ANR	368067	AssignmentExpression	name = Z_STR_P ( varname )		367999	0		=			
ANR	368068	Identifier	name		367999	0					
ANR	368069	CallExpression	Z_STR_P ( varname )		367999	1					
ANR	368070	Callee	Z_STR_P		367999	0					
ANR	368071	Identifier	Z_STR_P		367999	0					
ANR	368072	ArgumentList	varname		367999	1					
ANR	368073	Argument	varname		367999	0					
ANR	368074	Identifier	varname		367999	0					
ANR	368075	ExpressionStatement	zend_string_addref ( name )	6867:2:204753:204777	367999	1	True				
ANR	368076	CallExpression	zend_string_addref ( name )		367999	0					
ANR	368077	Callee	zend_string_addref		367999	0					
ANR	368078	Identifier	zend_string_addref		367999	0					
ANR	368079	ArgumentList	name		367999	1					
ANR	368080	Argument	name		367999	0					
ANR	368081	Identifier	name		367999	0					
ANR	368082	ElseStatement	else		367999	0					
ANR	368083	CompoundStatement		17:8:329:329	367999	0					
ANR	368084	IfStatement	if ( IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		367999	0					
ANR	368085	Condition	IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	6869:6:204795:204856	367999	0	True				
ANR	368086	AndExpression	IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		367999	0		&&			
ANR	368087	EqualityExpression	IS_CONST == IS_CV		367999	0		==			
ANR	368088	Identifier	IS_CONST		367999	0					
ANR	368089	Identifier	IS_CV		367999	1					
ANR	368090	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		367999	1					
ANR	368091	Callee	UNEXPECTED		367999	0					
ANR	368092	Identifier	UNEXPECTED		367999	0					
ANR	368093	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		367999	1					
ANR	368094	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		367999	0					
ANR	368095	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		367999	0		==			
ANR	368096	CallExpression	Z_TYPE_P ( varname )		367999	0					
ANR	368097	Callee	Z_TYPE_P		367999	0					
ANR	368098	Identifier	Z_TYPE_P		367999	0					
ANR	368099	ArgumentList	varname		367999	1					
ANR	368100	Argument	varname		367999	0					
ANR	368101	Identifier	varname		367999	0					
ANR	368102	Identifier	IS_UNDEF		367999	1					
ANR	368103	CompoundStatement		18:70:401:401	367999	1					
ANR	368104	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	6870:3:204864:204899	367999	0	True				
ANR	368105	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		367999	0					
ANR	368106	Callee	GET_OP1_UNDEF_CV		367999	0					
ANR	368107	Identifier	GET_OP1_UNDEF_CV		367999	0					
ANR	368108	ArgumentList	varname		367999	1					
ANR	368109	Argument	varname		367999	0					
ANR	368110	Identifier	varname		367999	0					
ANR	368111	Argument	BP_VAR_R		367999	1					
ANR	368112	Identifier	BP_VAR_R		367999	0					
ANR	368113	ExpressionStatement	name = zval_get_string ( varname )	6872:2:204907:204938	367999	1	True				
ANR	368114	AssignmentExpression	name = zval_get_string ( varname )		367999	0		=			
ANR	368115	Identifier	name		367999	0					
ANR	368116	CallExpression	zval_get_string ( varname )		367999	1					
ANR	368117	Callee	zval_get_string		367999	0					
ANR	368118	Identifier	zval_get_string		367999	0					
ANR	368119	ArgumentList	varname		367999	1					
ANR	368120	Argument	varname		367999	0					
ANR	368121	Identifier	varname		367999	0					
ANR	368122	IfStatement	if ( IS_VAR != IS_UNUSED )		367999	7					
ANR	368123	Condition	IS_VAR != IS_UNUSED	6875:5:204949:204967	367999	0	True				
ANR	368124	EqualityExpression	IS_VAR != IS_UNUSED		367999	0		!=			
ANR	368125	Identifier	IS_VAR		367999	0					
ANR	368126	Identifier	IS_UNUSED		367999	1					
ANR	368127	CompoundStatement		25:2:516:536	367999	1					
ANR	368128	IdentifierDeclStatement	zend_class_entry * ce ;	6876:2:204974:204994	367999	0	True				
ANR	368129	IdentifierDecl	* ce		367999	0					
ANR	368130	IdentifierDeclType	zend_class_entry *		367999	0					
ANR	368131	Identifier	ce		367999	1					
ANR	368132	IfStatement	if ( IS_VAR == IS_CONST )		367999	1					
ANR	368133	Condition	IS_VAR == IS_CONST	6878:6:205003:205020	367999	0	True				
ANR	368134	EqualityExpression	IS_VAR == IS_CONST		367999	0		==			
ANR	368135	Identifier	IS_VAR		367999	0					
ANR	368136	Identifier	IS_CONST		367999	1					
ANR	368137	CompoundStatement		27:26:565:565	367999	1					
ANR	368138	IfStatement	if ( IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		367999	0					
ANR	368139	Condition	IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	6879:7:205032:205132	367999	0	True				
ANR	368140	AndExpression	IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		367999	0		&&			
ANR	368141	EqualityExpression	IS_CONST == IS_CONST		367999	0		==			
ANR	368142	Identifier	IS_CONST		367999	0					
ANR	368143	Identifier	IS_CONST		367999	1					
ANR	368144	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		367999	1					
ANR	368145	Callee	EXPECTED		367999	0					
ANR	368146	Identifier	EXPECTED		367999	0					
ANR	368147	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		367999	1					
ANR	368148	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		367999	0					
ANR	368149	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		367999	0		!=			
ANR	368150	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		367999	0		=			
ANR	368151	Identifier	ce		367999	0					
ANR	368152	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		367999	1					
ANR	368153	Callee	CACHED_PTR		367999	0					
ANR	368154	Identifier	CACHED_PTR		367999	0					
ANR	368155	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	1					
ANR	368156	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	0					
ANR	368157	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	0					
ANR	368158	Callee	Z_CACHE_SLOT_P		367999	0					
ANR	368159	Identifier	Z_CACHE_SLOT_P		367999	0					
ANR	368160	ArgumentList	EX_CONSTANT ( opline -> op1 )		367999	1					
ANR	368161	Argument	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368162	CallExpression	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368163	Callee	EX_CONSTANT		367999	0					
ANR	368164	Identifier	EX_CONSTANT		367999	0					
ANR	368165	ArgumentList	opline -> op1		367999	1					
ANR	368166	Argument	opline -> op1		367999	0					
ANR	368167	PtrMemberAccess	opline -> op1		367999	0					
ANR	368168	Identifier	opline		367999	0					
ANR	368169	Identifier	op1		367999	1					
ANR	368170	Identifier	NULL		367999	1					
ANR	368171	CompoundStatement		28:110:677:677	367999	1					
ANR	368172	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	6880:4:205141:205218	367999	0	True				
ANR	368173	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		367999	0		=			
ANR	368174	Identifier	retval		367999	0					
ANR	368175	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		367999	1					
ANR	368176	Callee	CACHED_PTR		367999	0					
ANR	368177	Identifier	CACHED_PTR		367999	0					
ANR	368178	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		367999	1					
ANR	368179	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		367999	0					
ANR	368180	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		367999	0		+			
ANR	368181	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	0					
ANR	368182	Callee	Z_CACHE_SLOT_P		367999	0					
ANR	368183	Identifier	Z_CACHE_SLOT_P		367999	0					
ANR	368184	ArgumentList	EX_CONSTANT ( opline -> op1 )		367999	1					
ANR	368185	Argument	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368186	CallExpression	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368187	Callee	EX_CONSTANT		367999	0					
ANR	368188	Identifier	EX_CONSTANT		367999	0					
ANR	368189	ArgumentList	opline -> op1		367999	1					
ANR	368190	Argument	opline -> op1		367999	0					
ANR	368191	PtrMemberAccess	opline -> op1		367999	0					
ANR	368192	Identifier	opline		367999	0					
ANR	368193	Identifier	op1		367999	1					
ANR	368194	SizeofExpression	sizeof ( void * )		367999	1					
ANR	368195	Sizeof	sizeof		367999	0					
ANR	368196	SizeofOperand	void *		367999	1					
ANR	368197	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		367999	1					
ANR	368198	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	6883:8:205280:205320	367999	0	True				
ANR	368199	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		367999	0					
ANR	368200	Callee	UNEXPECTED		367999	0					
ANR	368201	Identifier	UNEXPECTED		367999	0					
ANR	368202	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		367999	1					
ANR	368203	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		367999	0					
ANR	368204	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		367999	0		==			
ANR	368205	CallExpression	CE_STATIC_MEMBERS ( ce )		367999	0					
ANR	368206	Callee	CE_STATIC_MEMBERS		367999	0					
ANR	368207	Identifier	CE_STATIC_MEMBERS		367999	0					
ANR	368208	ArgumentList	ce		367999	1					
ANR	368209	Argument	ce		367999	0					
ANR	368210	Identifier	ce		367999	0					
ANR	368211	Identifier	NULL		367999	1					
ANR	368212	CompoundStatement		32:51:865:865	367999	1					
ANR	368213	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	6884:5:205330:205437	367999	0	True				
ANR	368214	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		367999	0					
ANR	368215	Callee	zend_throw_error		367999	0					
ANR	368216	Identifier	zend_throw_error		367999	0					
ANR	368217	ArgumentList	NULL		367999	1					
ANR	368218	Argument	NULL		367999	0					
ANR	368219	Identifier	NULL		367999	0					
ANR	368220	Argument	"""Access to undeclared static property: %s::$%s"""		367999	1					
ANR	368221	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		367999	0					
ANR	368222	Argument	ZSTR_VAL ( ce -> name )		367999	2					
ANR	368223	CallExpression	ZSTR_VAL ( ce -> name )		367999	0					
ANR	368224	Callee	ZSTR_VAL		367999	0					
ANR	368225	Identifier	ZSTR_VAL		367999	0					
ANR	368226	ArgumentList	ce -> name		367999	1					
ANR	368227	Argument	ce -> name		367999	0					
ANR	368228	PtrMemberAccess	ce -> name		367999	0					
ANR	368229	Identifier	ce		367999	0					
ANR	368230	Identifier	name		367999	1					
ANR	368231	Argument	ZSTR_VAL ( name )		367999	3					
ANR	368232	CallExpression	ZSTR_VAL ( name )		367999	0					
ANR	368233	Callee	ZSTR_VAL		367999	0					
ANR	368234	Identifier	ZSTR_VAL		367999	0					
ANR	368235	ArgumentList	name		367999	1					
ANR	368236	Argument	name		367999	0					
ANR	368237	Identifier	name		367999	0					
ANR	368238	ExpressionStatement	HANDLE_EXCEPTION ( )	6886:5:205445:205463	367999	1	True				
ANR	368239	CallExpression	HANDLE_EXCEPTION ( )		367999	0					
ANR	368240	Callee	HANDLE_EXCEPTION		367999	0					
ANR	368241	Identifier	HANDLE_EXCEPTION		367999	0					
ANR	368242	ArgumentList			367999	1					
ANR	368243	GotoStatement	goto fetch_var_return ;	6889:4:205476:205497	367999	2	True				
ANR	368244	Identifier	fetch_var_return		367999	0					
ANR	368245	ElseStatement	else		367999	0					
ANR	368246	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		367999	0					
ANR	368247	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	6890:14:205513:205591	367999	0	True				
ANR	368248	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		367999	0					
ANR	368249	Callee	UNEXPECTED		367999	0					
ANR	368250	Identifier	UNEXPECTED		367999	0					
ANR	368251	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		367999	1					
ANR	368252	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		367999	0					
ANR	368253	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		367999	0		==			
ANR	368254	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		367999	0		=			
ANR	368255	Identifier	ce		367999	0					
ANR	368256	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		367999	1					
ANR	368257	Callee	CACHED_PTR		367999	0					
ANR	368258	Identifier	CACHED_PTR		367999	0					
ANR	368259	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		367999	1					
ANR	368260	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		367999	0					
ANR	368261	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		367999	0					
ANR	368262	Callee	Z_CACHE_SLOT_P		367999	0					
ANR	368263	Identifier	Z_CACHE_SLOT_P		367999	0					
ANR	368264	ArgumentList	EX_CONSTANT ( opline -> op2 )		367999	1					
ANR	368265	Argument	EX_CONSTANT ( opline -> op2 )		367999	0					
ANR	368266	CallExpression	EX_CONSTANT ( opline -> op2 )		367999	0					
ANR	368267	Callee	EX_CONSTANT		367999	0					
ANR	368268	Identifier	EX_CONSTANT		367999	0					
ANR	368269	ArgumentList	opline -> op2		367999	1					
ANR	368270	Argument	opline -> op2		367999	0					
ANR	368271	PtrMemberAccess	opline -> op2		367999	0					
ANR	368272	Identifier	opline		367999	0					
ANR	368273	Identifier	op2		367999	1					
ANR	368274	Identifier	NULL		367999	1					
ANR	368275	CompoundStatement		39:95:1136:1136	367999	1					
ANR	368276	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	6891:4:205600:205749	367999	0	True				
ANR	368277	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		367999	0		=			
ANR	368278	Identifier	ce		367999	0					
ANR	368279	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		367999	1					
ANR	368280	Callee	zend_fetch_class_by_name		367999	0					
ANR	368281	Identifier	zend_fetch_class_by_name		367999	0					
ANR	368282	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		367999	1					
ANR	368283	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		367999	0					
ANR	368284	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		367999	0					
ANR	368285	Callee	Z_STR_P		367999	0					
ANR	368286	Identifier	Z_STR_P		367999	0					
ANR	368287	ArgumentList	EX_CONSTANT ( opline -> op2 )		367999	1					
ANR	368288	Argument	EX_CONSTANT ( opline -> op2 )		367999	0					
ANR	368289	CallExpression	EX_CONSTANT ( opline -> op2 )		367999	0					
ANR	368290	Callee	EX_CONSTANT		367999	0					
ANR	368291	Identifier	EX_CONSTANT		367999	0					
ANR	368292	ArgumentList	opline -> op2		367999	1					
ANR	368293	Argument	opline -> op2		367999	0					
ANR	368294	PtrMemberAccess	opline -> op2		367999	0					
ANR	368295	Identifier	opline		367999	0					
ANR	368296	Identifier	op2		367999	1					
ANR	368297	Argument	EX_CONSTANT ( opline -> op2 ) + 1		367999	1					
ANR	368298	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		367999	0		+			
ANR	368299	CallExpression	EX_CONSTANT ( opline -> op2 )		367999	0					
ANR	368300	Callee	EX_CONSTANT		367999	0					
ANR	368301	Identifier	EX_CONSTANT		367999	0					
ANR	368302	ArgumentList	opline -> op2		367999	1					
ANR	368303	Argument	opline -> op2		367999	0					
ANR	368304	PtrMemberAccess	opline -> op2		367999	0					
ANR	368305	Identifier	opline		367999	0					
ANR	368306	Identifier	op2		367999	1					
ANR	368307	PrimaryExpression	1		367999	1					
ANR	368308	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		367999	2					
ANR	368309	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		367999	0		|			
ANR	368310	Identifier	ZEND_FETCH_CLASS_DEFAULT		367999	0					
ANR	368311	Identifier	ZEND_FETCH_CLASS_EXCEPTION		367999	1					
ANR	368312	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		367999	1					
ANR	368313	Condition	UNEXPECTED ( ce == NULL )	6892:8:205759:205780	367999	0	True				
ANR	368314	CallExpression	UNEXPECTED ( ce == NULL )		367999	0					
ANR	368315	Callee	UNEXPECTED		367999	0					
ANR	368316	Identifier	UNEXPECTED		367999	0					
ANR	368317	ArgumentList	ce == NULL		367999	1					
ANR	368318	Argument	ce == NULL		367999	0					
ANR	368319	EqualityExpression	ce == NULL		367999	0		==			
ANR	368320	Identifier	ce		367999	0					
ANR	368321	Identifier	NULL		367999	1					
ANR	368322	CompoundStatement		41:32:1325:1325	367999	1					
ANR	368323	IfStatement	if ( IS_CONST != IS_CONST )		367999	0					
ANR	368324	Condition	IS_CONST != IS_CONST	6893:9:205794:205813	367999	0	True				
ANR	368325	EqualityExpression	IS_CONST != IS_CONST		367999	0		!=			
ANR	368326	Identifier	IS_CONST		367999	0					
ANR	368327	Identifier	IS_CONST		367999	1					
ANR	368328	CompoundStatement		42:31:1358:1358	367999	1					
ANR	368329	ExpressionStatement	zend_string_release ( name )	6894:6:205824:205849	367999	0	True				
ANR	368330	CallExpression	zend_string_release ( name )		367999	0					
ANR	368331	Callee	zend_string_release		367999	0					
ANR	368332	Identifier	zend_string_release		367999	0					
ANR	368333	ArgumentList	name		367999	1					
ANR	368334	Argument	name		367999	0					
ANR	368335	Identifier	name		367999	0					
ANR	368336	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	6897:5:205864:205901	367999	1	True				
ANR	368337	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		367999	0					
ANR	368338	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		367999	0					
ANR	368339	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		367999	0					
ANR	368340	ArgumentList			367999	1					
ANR	368341	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	6899:4:205913:205968	367999	2	True				
ANR	368342	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		367999	0					
ANR	368343	Callee	CACHE_PTR		367999	0					
ANR	368344	Identifier	CACHE_PTR		367999	0					
ANR	368345	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		367999	1					
ANR	368346	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		367999	0					
ANR	368347	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		367999	0					
ANR	368348	Callee	Z_CACHE_SLOT_P		367999	0					
ANR	368349	Identifier	Z_CACHE_SLOT_P		367999	0					
ANR	368350	ArgumentList	EX_CONSTANT ( opline -> op2 )		367999	1					
ANR	368351	Argument	EX_CONSTANT ( opline -> op2 )		367999	0					
ANR	368352	CallExpression	EX_CONSTANT ( opline -> op2 )		367999	0					
ANR	368353	Callee	EX_CONSTANT		367999	0					
ANR	368354	Identifier	EX_CONSTANT		367999	0					
ANR	368355	ArgumentList	opline -> op2		367999	1					
ANR	368356	Argument	opline -> op2		367999	0					
ANR	368357	PtrMemberAccess	opline -> op2		367999	0					
ANR	368358	Identifier	opline		367999	0					
ANR	368359	Identifier	op2		367999	1					
ANR	368360	Argument	ce		367999	1					
ANR	368361	Identifier	ce		367999	0					
ANR	368362	ElseStatement	else		367999	0					
ANR	368363	CompoundStatement		50:9:1526:1526	367999	0					
ANR	368364	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	6902:3:205989:206025	367999	0	True				
ANR	368365	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		367999	0		=			
ANR	368366	Identifier	ce		367999	0					
ANR	368367	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		367999	1					
ANR	368368	Callee	Z_CE_P		367999	0					
ANR	368369	Identifier	Z_CE_P		367999	0					
ANR	368370	ArgumentList	EX_VAR ( opline -> op2 . var )		367999	1					
ANR	368371	Argument	EX_VAR ( opline -> op2 . var )		367999	0					
ANR	368372	CallExpression	EX_VAR ( opline -> op2 . var )		367999	0					
ANR	368373	Callee	EX_VAR		367999	0					
ANR	368374	Identifier	EX_VAR		367999	0					
ANR	368375	ArgumentList	opline -> op2 . var		367999	1					
ANR	368376	Argument	opline -> op2 . var		367999	0					
ANR	368377	MemberAccess	opline -> op2 . var		367999	0					
ANR	368378	PtrMemberAccess	opline -> op2		367999	0					
ANR	368379	Identifier	opline		367999	0					
ANR	368380	Identifier	op2		367999	1					
ANR	368381	Identifier	var		367999	1					
ANR	368382	IfStatement	"if ( IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		367999	1					
ANR	368383	Condition	"IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	6903:7:206034:206151	367999	0	True				
ANR	368384	AndExpression	"IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		367999	0		&&			
ANR	368385	EqualityExpression	IS_CONST == IS_CONST		367999	0		==			
ANR	368386	Identifier	IS_CONST		367999	0					
ANR	368387	Identifier	IS_CONST		367999	1					
ANR	368388	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		367999	1		!=			
ANR	368389	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		367999	0		=			
ANR	368390	Identifier	retval		367999	0					
ANR	368391	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		367999	1					
ANR	368392	Callee	CACHED_POLYMORPHIC_PTR		367999	0					
ANR	368393	Identifier	CACHED_POLYMORPHIC_PTR		367999	0					
ANR	368394	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	1					
ANR	368395	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	0					
ANR	368396	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	0					
ANR	368397	Callee	Z_CACHE_SLOT_P		367999	0					
ANR	368398	Identifier	Z_CACHE_SLOT_P		367999	0					
ANR	368399	ArgumentList	EX_CONSTANT ( opline -> op1 )		367999	1					
ANR	368400	Argument	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368401	CallExpression	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368402	Callee	EX_CONSTANT		367999	0					
ANR	368403	Identifier	EX_CONSTANT		367999	0					
ANR	368404	ArgumentList	opline -> op1		367999	1					
ANR	368405	Argument	opline -> op1		367999	0					
ANR	368406	PtrMemberAccess	opline -> op1		367999	0					
ANR	368407	Identifier	opline		367999	0					
ANR	368408	Identifier	op1		367999	1					
ANR	368409	Argument	ce		367999	1					
ANR	368410	Identifier	ce		367999	0					
ANR	368411	Identifier	NULL		367999	1					
ANR	368412	CompoundStatement		53:96:1696:1696	367999	1					
ANR	368413	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		367999	0					
ANR	368414	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	6907:8:206216:206256	367999	0	True				
ANR	368415	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		367999	0					
ANR	368416	Callee	UNEXPECTED		367999	0					
ANR	368417	Identifier	UNEXPECTED		367999	0					
ANR	368418	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		367999	1					
ANR	368419	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		367999	0					
ANR	368420	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		367999	0		==			
ANR	368421	CallExpression	CE_STATIC_MEMBERS ( ce )		367999	0					
ANR	368422	Callee	CE_STATIC_MEMBERS		367999	0					
ANR	368423	Identifier	CE_STATIC_MEMBERS		367999	0					
ANR	368424	ArgumentList	ce		367999	1					
ANR	368425	Argument	ce		367999	0					
ANR	368426	Identifier	ce		367999	0					
ANR	368427	Identifier	NULL		367999	1					
ANR	368428	CompoundStatement		56:51:1801:1801	367999	1					
ANR	368429	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	6908:5:206266:206373	367999	0	True				
ANR	368430	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		367999	0					
ANR	368431	Callee	zend_throw_error		367999	0					
ANR	368432	Identifier	zend_throw_error		367999	0					
ANR	368433	ArgumentList	NULL		367999	1					
ANR	368434	Argument	NULL		367999	0					
ANR	368435	Identifier	NULL		367999	0					
ANR	368436	Argument	"""Access to undeclared static property: %s::$%s"""		367999	1					
ANR	368437	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		367999	0					
ANR	368438	Argument	ZSTR_VAL ( ce -> name )		367999	2					
ANR	368439	CallExpression	ZSTR_VAL ( ce -> name )		367999	0					
ANR	368440	Callee	ZSTR_VAL		367999	0					
ANR	368441	Identifier	ZSTR_VAL		367999	0					
ANR	368442	ArgumentList	ce -> name		367999	1					
ANR	368443	Argument	ce -> name		367999	0					
ANR	368444	PtrMemberAccess	ce -> name		367999	0					
ANR	368445	Identifier	ce		367999	0					
ANR	368446	Identifier	name		367999	1					
ANR	368447	Argument	ZSTR_VAL ( name )		367999	3					
ANR	368448	CallExpression	ZSTR_VAL ( name )		367999	0					
ANR	368449	Callee	ZSTR_VAL		367999	0					
ANR	368450	Identifier	ZSTR_VAL		367999	0					
ANR	368451	ArgumentList	name		367999	1					
ANR	368452	Argument	name		367999	0					
ANR	368453	Identifier	name		367999	0					
ANR	368454	ExpressionStatement	HANDLE_EXCEPTION ( )	6910:5:206381:206399	367999	1	True				
ANR	368455	CallExpression	HANDLE_EXCEPTION ( )		367999	0					
ANR	368456	Callee	HANDLE_EXCEPTION		367999	0					
ANR	368457	Identifier	HANDLE_EXCEPTION		367999	0					
ANR	368458	ArgumentList			367999	1					
ANR	368459	GotoStatement	goto fetch_var_return ;	6913:4:206412:206433	367999	1	True				
ANR	368460	Identifier	fetch_var_return		367999	0					
ANR	368461	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	6916:2:206446:206496	367999	2	True				
ANR	368462	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		367999	0		=			
ANR	368463	Identifier	retval		367999	0					
ANR	368464	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		367999	1					
ANR	368465	Callee	zend_std_get_static_property		367999	0					
ANR	368466	Identifier	zend_std_get_static_property		367999	0					
ANR	368467	ArgumentList	ce		367999	1					
ANR	368468	Argument	ce		367999	0					
ANR	368469	Identifier	ce		367999	0					
ANR	368470	Argument	name		367999	1					
ANR	368471	Identifier	name		367999	0					
ANR	368472	Argument	0		367999	2					
ANR	368473	PrimaryExpression	0		367999	0					
ANR	368474	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		367999	3					
ANR	368475	Condition	UNEXPECTED ( EG ( exception ) )	6917:6:206504:206528	367999	0	True				
ANR	368476	CallExpression	UNEXPECTED ( EG ( exception ) )		367999	0					
ANR	368477	Callee	UNEXPECTED		367999	0					
ANR	368478	Identifier	UNEXPECTED		367999	0					
ANR	368479	ArgumentList	EG ( exception )		367999	1					
ANR	368480	Argument	EG ( exception )		367999	0					
ANR	368481	CallExpression	EG ( exception )		367999	0					
ANR	368482	Callee	EG		367999	0					
ANR	368483	Identifier	EG		367999	0					
ANR	368484	ArgumentList	exception		367999	1					
ANR	368485	Argument	exception		367999	0					
ANR	368486	Identifier	exception		367999	0					
ANR	368487	CompoundStatement		66:33:2073:2073	367999	1					
ANR	368488	IfStatement	if ( IS_CONST != IS_CONST )		367999	0					
ANR	368489	Condition	IS_CONST != IS_CONST	6918:7:206540:206559	367999	0	True				
ANR	368490	EqualityExpression	IS_CONST != IS_CONST		367999	0		!=			
ANR	368491	Identifier	IS_CONST		367999	0					
ANR	368492	Identifier	IS_CONST		367999	1					
ANR	368493	CompoundStatement		67:29:2104:2104	367999	1					
ANR	368494	ExpressionStatement	zend_string_release ( name )	6919:4:206568:206593	367999	0	True				
ANR	368495	CallExpression	zend_string_release ( name )		367999	0					
ANR	368496	Callee	zend_string_release		367999	0					
ANR	368497	Identifier	zend_string_release		367999	0					
ANR	368498	ArgumentList	name		367999	1					
ANR	368499	Argument	name		367999	0					
ANR	368500	Identifier	name		367999	0					
ANR	368501	ExpressionStatement	HANDLE_EXCEPTION ( )	6922:3:206604:206622	367999	1	True				
ANR	368502	CallExpression	HANDLE_EXCEPTION ( )		367999	0					
ANR	368503	Callee	HANDLE_EXCEPTION		367999	0					
ANR	368504	Identifier	HANDLE_EXCEPTION		367999	0					
ANR	368505	ArgumentList			367999	1					
ANR	368506	IfStatement	if ( IS_CONST == IS_CONST && retval )		367999	4					
ANR	368507	Condition	IS_CONST == IS_CONST && retval	6924:6:206634:206663	367999	0	True				
ANR	368508	AndExpression	IS_CONST == IS_CONST && retval		367999	0		&&			
ANR	368509	EqualityExpression	IS_CONST == IS_CONST		367999	0		==			
ANR	368510	Identifier	IS_CONST		367999	0					
ANR	368511	Identifier	IS_CONST		367999	1					
ANR	368512	Identifier	retval		367999	1					
ANR	368513	CompoundStatement		73:38:2208:2208	367999	1					
ANR	368514	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	6925:3:206671:206746	367999	0	True				
ANR	368515	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		367999	0					
ANR	368516	Callee	CACHE_POLYMORPHIC_PTR		367999	0					
ANR	368517	Identifier	CACHE_POLYMORPHIC_PTR		367999	0					
ANR	368518	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	1					
ANR	368519	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	0					
ANR	368520	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		367999	0					
ANR	368521	Callee	Z_CACHE_SLOT_P		367999	0					
ANR	368522	Identifier	Z_CACHE_SLOT_P		367999	0					
ANR	368523	ArgumentList	EX_CONSTANT ( opline -> op1 )		367999	1					
ANR	368524	Argument	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368525	CallExpression	EX_CONSTANT ( opline -> op1 )		367999	0					
ANR	368526	Callee	EX_CONSTANT		367999	0					
ANR	368527	Identifier	EX_CONSTANT		367999	0					
ANR	368528	ArgumentList	opline -> op1		367999	1					
ANR	368529	Argument	opline -> op1		367999	0					
ANR	368530	PtrMemberAccess	opline -> op1		367999	0					
ANR	368531	Identifier	opline		367999	0					
ANR	368532	Identifier	op1		367999	1					
ANR	368533	Argument	ce		367999	1					
ANR	368534	Identifier	ce		367999	0					
ANR	368535	Argument	retval		367999	2					
ANR	368536	Identifier	retval		367999	0					
ANR	368537	ElseStatement	else		367999	0					
ANR	368538	CompoundStatement		77:8:2303:2303	367999	0					
ANR	368539	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	6929:2:206765:206876	367999	0	True				
ANR	368540	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		367999	0		=			
ANR	368541	Identifier	target_symbol_table		367999	0					
ANR	368542	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		367999	1					
ANR	368543	Callee	zend_get_target_symbol_table		367999	0					
ANR	368544	Identifier	zend_get_target_symbol_table		367999	0					
ANR	368545	ArgumentList	execute_data		367999	1					
ANR	368546	Argument	execute_data		367999	0					
ANR	368547	Identifier	execute_data		367999	0					
ANR	368548	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		367999	1					
ANR	368549	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		367999	0		&			
ANR	368550	PtrMemberAccess	opline -> extended_value		367999	0					
ANR	368551	Identifier	opline		367999	0					
ANR	368552	Identifier	extended_value		367999	1					
ANR	368553	Identifier	ZEND_FETCH_TYPE_MASK		367999	1					
ANR	368554	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	6930:2:206880:206930	367999	1	True				
ANR	368555	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		367999	0		=			
ANR	368556	Identifier	retval		367999	0					
ANR	368557	CallExpression	"zend_hash_find ( target_symbol_table , name )"		367999	1					
ANR	368558	Callee	zend_hash_find		367999	0					
ANR	368559	Identifier	zend_hash_find		367999	0					
ANR	368560	ArgumentList	target_symbol_table		367999	1					
ANR	368561	Argument	target_symbol_table		367999	0					
ANR	368562	Identifier	target_symbol_table		367999	0					
ANR	368563	Argument	name		367999	1					
ANR	368564	Identifier	name		367999	0					
ANR	368565	IfStatement	if ( retval == NULL )		367999	2					
ANR	368566	Condition	retval == NULL	6931:6:206938:206951	367999	0	True				
ANR	368567	EqualityExpression	retval == NULL		367999	0		==			
ANR	368568	Identifier	retval		367999	0					
ANR	368569	Identifier	NULL		367999	1					
ANR	368570	CompoundStatement		80:22:2496:2496	367999	1					
ANR	368571	SwitchStatement	switch ( type )		367999	0					
ANR	368572	Condition	type	6932:11:206967:206970	367999	0	True				
ANR	368573	Identifier	type		367999	0					
ANR	368574	CompoundStatement		81:17:2515:2515	367999	1					
ANR	368575	Label	case BP_VAR_R :	6933:4:206979:206992	367999	0	True				
ANR	368576	Identifier	BP_VAR_R		367999	0					
ANR	368577	Label	case BP_VAR_UNSET :	6934:4:206998:207015	367999	1	True				
ANR	368578	Identifier	BP_VAR_UNSET		367999	0					
ANR	368579	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	6935:5:207022:207083	367999	2	True				
ANR	368580	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		367999	0					
ANR	368581	Callee	zend_error		367999	0					
ANR	368582	Identifier	zend_error		367999	0					
ANR	368583	ArgumentList	E_NOTICE		367999	1					
ANR	368584	Argument	E_NOTICE		367999	0					
ANR	368585	Identifier	E_NOTICE		367999	0					
ANR	368586	Argument	"""Undefined variable: %s"""		367999	1					
ANR	368587	PrimaryExpression	"""Undefined variable: %s"""		367999	0					
ANR	368588	Argument	ZSTR_VAL ( name )		367999	2					
ANR	368589	CallExpression	ZSTR_VAL ( name )		367999	0					
ANR	368590	Callee	ZSTR_VAL		367999	0					
ANR	368591	Identifier	ZSTR_VAL		367999	0					
ANR	368592	ArgumentList	name		367999	1					
ANR	368593	Argument	name		367999	0					
ANR	368594	Identifier	name		367999	0					
ANR	368595	Label	case BP_VAR_IS :	6937:4:207128:207142	367999	3	True				
ANR	368596	Identifier	BP_VAR_IS		367999	0					
ANR	368597	ExpressionStatement	retval = & EG ( uninitialized_zval )	6938:5:207149:207181	367999	4	True				
ANR	368598	AssignmentExpression	retval = & EG ( uninitialized_zval )		367999	0		=			
ANR	368599	Identifier	retval		367999	0					
ANR	368600	UnaryOperationExpression	& EG ( uninitialized_zval )		367999	1					
ANR	368601	UnaryOperator	&		367999	0					
ANR	368602	CallExpression	EG ( uninitialized_zval )		367999	1					
ANR	368603	Callee	EG		367999	0					
ANR	368604	Identifier	EG		367999	0					
ANR	368605	ArgumentList	uninitialized_zval		367999	1					
ANR	368606	Argument	uninitialized_zval		367999	0					
ANR	368607	Identifier	uninitialized_zval		367999	0					
ANR	368608	BreakStatement	break ;	6939:5:207188:207193	367999	5	True				
ANR	368609	Label	case BP_VAR_RW :	6940:4:207199:207213	367999	6	True				
ANR	368610	Identifier	BP_VAR_RW		367999	0					
ANR	368611	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	6941:5:207220:207281	367999	7	True				
ANR	368612	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		367999	0					
ANR	368613	Callee	zend_error		367999	0					
ANR	368614	Identifier	zend_error		367999	0					
ANR	368615	ArgumentList	E_NOTICE		367999	1					
ANR	368616	Argument	E_NOTICE		367999	0					
ANR	368617	Identifier	E_NOTICE		367999	0					
ANR	368618	Argument	"""Undefined variable: %s"""		367999	1					
ANR	368619	PrimaryExpression	"""Undefined variable: %s"""		367999	0					
ANR	368620	Argument	ZSTR_VAL ( name )		367999	2					
ANR	368621	CallExpression	ZSTR_VAL ( name )		367999	0					
ANR	368622	Callee	ZSTR_VAL		367999	0					
ANR	368623	Identifier	ZSTR_VAL		367999	0					
ANR	368624	ArgumentList	name		367999	1					
ANR	368625	Argument	name		367999	0					
ANR	368626	Identifier	name		367999	0					
ANR	368627	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	6942:5:207288:207365	367999	8	True				
ANR	368628	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		367999	0		=			
ANR	368629	Identifier	retval		367999	0					
ANR	368630	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		367999	1					
ANR	368631	Callee	zend_hash_update		367999	0					
ANR	368632	Identifier	zend_hash_update		367999	0					
ANR	368633	ArgumentList	target_symbol_table		367999	1					
ANR	368634	Argument	target_symbol_table		367999	0					
ANR	368635	Identifier	target_symbol_table		367999	0					
ANR	368636	Argument	name		367999	1					
ANR	368637	Identifier	name		367999	0					
ANR	368638	Argument	& EG ( uninitialized_zval )		367999	2					
ANR	368639	UnaryOperationExpression	& EG ( uninitialized_zval )		367999	0					
ANR	368640	UnaryOperator	&		367999	0					
ANR	368641	CallExpression	EG ( uninitialized_zval )		367999	1					
ANR	368642	Callee	EG		367999	0					
ANR	368643	Identifier	EG		367999	0					
ANR	368644	ArgumentList	uninitialized_zval		367999	1					
ANR	368645	Argument	uninitialized_zval		367999	0					
ANR	368646	Identifier	uninitialized_zval		367999	0					
ANR	368647	BreakStatement	break ;	6943:5:207372:207377	367999	9	True				
ANR	368648	Label	case BP_VAR_W :	6944:4:207383:207396	367999	10	True				
ANR	368649	Identifier	BP_VAR_W		367999	0					
ANR	368650	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	6945:5:207403:207481	367999	11	True				
ANR	368651	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		367999	0		=			
ANR	368652	Identifier	retval		367999	0					
ANR	368653	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		367999	1					
ANR	368654	Callee	zend_hash_add_new		367999	0					
ANR	368655	Identifier	zend_hash_add_new		367999	0					
ANR	368656	ArgumentList	target_symbol_table		367999	1					
ANR	368657	Argument	target_symbol_table		367999	0					
ANR	368658	Identifier	target_symbol_table		367999	0					
ANR	368659	Argument	name		367999	1					
ANR	368660	Identifier	name		367999	0					
ANR	368661	Argument	& EG ( uninitialized_zval )		367999	2					
ANR	368662	UnaryOperationExpression	& EG ( uninitialized_zval )		367999	0					
ANR	368663	UnaryOperator	&		367999	0					
ANR	368664	CallExpression	EG ( uninitialized_zval )		367999	1					
ANR	368665	Callee	EG		367999	0					
ANR	368666	Identifier	EG		367999	0					
ANR	368667	ArgumentList	uninitialized_zval		367999	1					
ANR	368668	Argument	uninitialized_zval		367999	0					
ANR	368669	Identifier	uninitialized_zval		367999	0					
ANR	368670	BreakStatement	break ;	6946:5:207488:207493	367999	12	True				
ANR	368671	Statement	EMPTY_SWITCH_DEFAULT_CASE	6947:4:207499:207523	367999	13	True				
ANR	368672	Statement	(	6947:29:207524:207524	367999	14	True				
ANR	368673	Statement	)	6947:30:207525:207525	367999	15	True				
ANR	368674	ElseStatement	else		367999	0					
ANR	368675	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		367999	0					
ANR	368676	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	6950:13:207612:207642	367999	0	True				
ANR	368677	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		367999	0		==			
ANR	368678	CallExpression	Z_TYPE_P ( retval )		367999	0					
ANR	368679	Callee	Z_TYPE_P		367999	0					
ANR	368680	Identifier	Z_TYPE_P		367999	0					
ANR	368681	ArgumentList	retval		367999	1					
ANR	368682	Argument	retval		367999	0					
ANR	368683	Identifier	retval		367999	0					
ANR	368684	Identifier	IS_INDIRECT		367999	1					
ANR	368685	CompoundStatement		99:46:3187:3187	367999	1					
ANR	368686	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	6951:3:207650:207679	367999	0	True				
ANR	368687	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		367999	0		=			
ANR	368688	Identifier	retval		367999	0					
ANR	368689	CallExpression	Z_INDIRECT_P ( retval )		367999	1					
ANR	368690	Callee	Z_INDIRECT_P		367999	0					
ANR	368691	Identifier	Z_INDIRECT_P		367999	0					
ANR	368692	ArgumentList	retval		367999	1					
ANR	368693	Argument	retval		367999	0					
ANR	368694	Identifier	retval		367999	0					
ANR	368695	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		367999	1					
ANR	368696	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	6952:7:207688:207715	367999	0	True				
ANR	368697	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		367999	0		==			
ANR	368698	CallExpression	Z_TYPE_P ( retval )		367999	0					
ANR	368699	Callee	Z_TYPE_P		367999	0					
ANR	368700	Identifier	Z_TYPE_P		367999	0					
ANR	368701	ArgumentList	retval		367999	1					
ANR	368702	Argument	retval		367999	0					
ANR	368703	Identifier	retval		367999	0					
ANR	368704	Identifier	IS_UNDEF		367999	1					
ANR	368705	CompoundStatement		101:37:3260:3260	367999	1					
ANR	368706	SwitchStatement	switch ( type )		367999	0					
ANR	368707	Condition	type	6953:12:207732:207735	367999	0	True				
ANR	368708	Identifier	type		367999	0					
ANR	368709	CompoundStatement		102:18:3280:3280	367999	1					
ANR	368710	Label	case BP_VAR_R :	6954:5:207745:207758	367999	0	True				
ANR	368711	Identifier	BP_VAR_R		367999	0					
ANR	368712	Label	case BP_VAR_UNSET :	6955:5:207765:207782	367999	1	True				
ANR	368713	Identifier	BP_VAR_UNSET		367999	0					
ANR	368714	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	6956:6:207790:207851	367999	2	True				
ANR	368715	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		367999	0					
ANR	368716	Callee	zend_error		367999	0					
ANR	368717	Identifier	zend_error		367999	0					
ANR	368718	ArgumentList	E_NOTICE		367999	1					
ANR	368719	Argument	E_NOTICE		367999	0					
ANR	368720	Identifier	E_NOTICE		367999	0					
ANR	368721	Argument	"""Undefined variable: %s"""		367999	1					
ANR	368722	PrimaryExpression	"""Undefined variable: %s"""		367999	0					
ANR	368723	Argument	ZSTR_VAL ( name )		367999	2					
ANR	368724	CallExpression	ZSTR_VAL ( name )		367999	0					
ANR	368725	Callee	ZSTR_VAL		367999	0					
ANR	368726	Identifier	ZSTR_VAL		367999	0					
ANR	368727	ArgumentList	name		367999	1					
ANR	368728	Argument	name		367999	0					
ANR	368729	Identifier	name		367999	0					
ANR	368730	Label	case BP_VAR_IS :	6958:5:207898:207912	367999	3	True				
ANR	368731	Identifier	BP_VAR_IS		367999	0					
ANR	368732	ExpressionStatement	retval = & EG ( uninitialized_zval )	6959:6:207920:207952	367999	4	True				
ANR	368733	AssignmentExpression	retval = & EG ( uninitialized_zval )		367999	0		=			
ANR	368734	Identifier	retval		367999	0					
ANR	368735	UnaryOperationExpression	& EG ( uninitialized_zval )		367999	1					
ANR	368736	UnaryOperator	&		367999	0					
ANR	368737	CallExpression	EG ( uninitialized_zval )		367999	1					
ANR	368738	Callee	EG		367999	0					
ANR	368739	Identifier	EG		367999	0					
ANR	368740	ArgumentList	uninitialized_zval		367999	1					
ANR	368741	Argument	uninitialized_zval		367999	0					
ANR	368742	Identifier	uninitialized_zval		367999	0					
ANR	368743	BreakStatement	break ;	6960:6:207960:207965	367999	5	True				
ANR	368744	Label	case BP_VAR_RW :	6961:5:207972:207986	367999	6	True				
ANR	368745	Identifier	BP_VAR_RW		367999	0					
ANR	368746	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	6962:6:207994:208055	367999	7	True				
ANR	368747	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		367999	0					
ANR	368748	Callee	zend_error		367999	0					
ANR	368749	Identifier	zend_error		367999	0					
ANR	368750	ArgumentList	E_NOTICE		367999	1					
ANR	368751	Argument	E_NOTICE		367999	0					
ANR	368752	Identifier	E_NOTICE		367999	0					
ANR	368753	Argument	"""Undefined variable: %s"""		367999	1					
ANR	368754	PrimaryExpression	"""Undefined variable: %s"""		367999	0					
ANR	368755	Argument	ZSTR_VAL ( name )		367999	2					
ANR	368756	CallExpression	ZSTR_VAL ( name )		367999	0					
ANR	368757	Callee	ZSTR_VAL		367999	0					
ANR	368758	Identifier	ZSTR_VAL		367999	0					
ANR	368759	ArgumentList	name		367999	1					
ANR	368760	Argument	name		367999	0					
ANR	368761	Identifier	name		367999	0					
ANR	368762	Label	case BP_VAR_W :	6964:5:208102:208115	367999	8	True				
ANR	368763	Identifier	BP_VAR_W		367999	0					
ANR	368764	ExpressionStatement	ZVAL_NULL ( retval )	6965:6:208123:208140	367999	9	True				
ANR	368765	CallExpression	ZVAL_NULL ( retval )		367999	0					
ANR	368766	Callee	ZVAL_NULL		367999	0					
ANR	368767	Identifier	ZVAL_NULL		367999	0					
ANR	368768	ArgumentList	retval		367999	1					
ANR	368769	Argument	retval		367999	0					
ANR	368770	Identifier	retval		367999	0					
ANR	368771	BreakStatement	break ;	6966:6:208148:208153	367999	10	True				
ANR	368772	Statement	EMPTY_SWITCH_DEFAULT_CASE	6967:5:208160:208184	367999	11	True				
ANR	368773	Statement	(	6967:30:208185:208185	367999	12	True				
ANR	368774	Statement	)	6967:31:208186:208186	367999	13	True				
ANR	368775	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		367999	3					
ANR	368776	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	6971:6:208209:208276	367999	0	True				
ANR	368777	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		367999	0		==			
ANR	368778	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		367999	0		&			
ANR	368779	PtrMemberAccess	opline -> extended_value		367999	0					
ANR	368780	Identifier	opline		367999	0					
ANR	368781	Identifier	extended_value		367999	1					
ANR	368782	Identifier	ZEND_FETCH_TYPE_MASK		367999	1					
ANR	368783	Identifier	ZEND_FETCH_STATIC		367999	1					
ANR	368784	CompoundStatement		120:76:3821:3821	367999	1					
ANR	368785	IfStatement	if ( Z_CONSTANT_P ( retval ) )		367999	0					
ANR	368786	Condition	Z_CONSTANT_P ( retval )	6972:7:208288:208307	367999	0	True				
ANR	368787	CallExpression	Z_CONSTANT_P ( retval )		367999	0					
ANR	368788	Callee	Z_CONSTANT_P		367999	0					
ANR	368789	Identifier	Z_CONSTANT_P		367999	0					
ANR	368790	ArgumentList	retval		367999	1					
ANR	368791	Argument	retval		367999	0					
ANR	368792	Identifier	retval		367999	0					
ANR	368793	CompoundStatement		121:29:3852:3852	367999	1					
ANR	368794	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		367999	0					
ANR	368795	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	6973:8:208320:208382	367999	0	True				
ANR	368796	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		367999	0					
ANR	368797	Callee	UNEXPECTED		367999	0					
ANR	368798	Identifier	UNEXPECTED		367999	0					
ANR	368799	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		367999	1					
ANR	368800	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		367999	0					
ANR	368801	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		367999	0		!=			
ANR	368802	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		367999	0					
ANR	368803	Callee	zval_update_constant_ex		367999	0					
ANR	368804	Identifier	zval_update_constant_ex		367999	0					
ANR	368805	ArgumentList	retval		367999	1					
ANR	368806	Argument	retval		367999	0					
ANR	368807	Identifier	retval		367999	0					
ANR	368808	Argument	1		367999	1					
ANR	368809	PrimaryExpression	1		367999	0					
ANR	368810	Argument	NULL		367999	2					
ANR	368811	Identifier	NULL		367999	0					
ANR	368812	Identifier	SUCCESS		367999	1					
ANR	368813	CompoundStatement		122:73:3927:3927	367999	1					
ANR	368814	ExpressionStatement	HANDLE_EXCEPTION ( )	6975:5:208393:208411	367999	0	True				
ANR	368815	CallExpression	HANDLE_EXCEPTION ( )		367999	0					
ANR	368816	Callee	HANDLE_EXCEPTION		367999	0					
ANR	368817	Identifier	HANDLE_EXCEPTION		367999	0					
ANR	368818	ArgumentList			367999	1					
ANR	368819	ElseStatement	else		367999	0					
ANR	368820	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		367999	0					
ANR	368821	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	6978:13:208437:208509	367999	0	True				
ANR	368822	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		367999	0		!=			
ANR	368823	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		367999	0		&			
ANR	368824	PtrMemberAccess	opline -> extended_value		367999	0					
ANR	368825	Identifier	opline		367999	0					
ANR	368826	Identifier	extended_value		367999	1					
ANR	368827	Identifier	ZEND_FETCH_TYPE_MASK		367999	1					
ANR	368828	Identifier	ZEND_FETCH_GLOBAL_LOCK		367999	1					
ANR	368829	CompoundStatement		127:88:4054:4054	367999	1					
ANR	368830	IfStatement	if ( IS_CONST != IS_CONST )		367999	8					
ANR	368831	Condition	IS_CONST != IS_CONST	6983:5:208528:208547	367999	0	True				
ANR	368832	EqualityExpression	IS_CONST != IS_CONST		367999	0		!=			
ANR	368833	Identifier	IS_CONST		367999	0					
ANR	368834	Identifier	IS_CONST		367999	1					
ANR	368835	CompoundStatement		132:27:4092:4092	367999	1					
ANR	368836	ExpressionStatement	zend_string_release ( name )	6984:2:208554:208579	367999	0	True				
ANR	368837	CallExpression	zend_string_release ( name )		367999	0					
ANR	368838	Callee	zend_string_release		367999	0					
ANR	368839	Identifier	zend_string_release		367999	0					
ANR	368840	ArgumentList	name		367999	1					
ANR	368841	Argument	name		367999	0					
ANR	368842	Identifier	name		367999	0					
ANR	368843	Label	fetch_var_return :	6987:0:208585:208601	367999	9	True				
ANR	368844	Identifier	fetch_var_return		367999	0					
ANR	368845	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	6988:1:208604:208631	367999	10	True				
ANR	368846	CallExpression	ZEND_ASSERT ( retval != NULL )		367999	0					
ANR	368847	Callee	ZEND_ASSERT		367999	0					
ANR	368848	Identifier	ZEND_ASSERT		367999	0					
ANR	368849	ArgumentList	retval != NULL		367999	1					
ANR	368850	Argument	retval != NULL		367999	0					
ANR	368851	EqualityExpression	retval != NULL		367999	0		!=			
ANR	368852	Identifier	retval		367999	0					
ANR	368853	Identifier	NULL		367999	1					
ANR	368854	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		367999	11					
ANR	368855	Condition	type == BP_VAR_R || type == BP_VAR_IS	6989:5:208638:208674	367999	0	True				
ANR	368856	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		367999	0		||			
ANR	368857	EqualityExpression	type == BP_VAR_R		367999	0		==			
ANR	368858	Identifier	type		367999	0					
ANR	368859	Identifier	BP_VAR_R		367999	1					
ANR	368860	EqualityExpression	type == BP_VAR_IS		367999	1		==			
ANR	368861	Identifier	type		367999	0					
ANR	368862	Identifier	BP_VAR_IS		367999	1					
ANR	368863	CompoundStatement		138:44:4219:4219	367999	1					
ANR	368864	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		367999	0					
ANR	368865	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	6990:30:208709:208754	367999	0	True				
ANR	368866	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		367999	0		&&			
ANR	368867	CallExpression	Z_ISREF_P ( retval )		367999	0					
ANR	368868	Callee	Z_ISREF_P		367999	0					
ANR	368869	Identifier	Z_ISREF_P		367999	0					
ANR	368870	ArgumentList	retval		367999	1					
ANR	368871	Argument	retval		367999	0					
ANR	368872	Identifier	retval		367999	0					
ANR	368873	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		367999	1		==			
ANR	368874	CallExpression	Z_REFCOUNT_P ( retval )		367999	0					
ANR	368875	Callee	Z_REFCOUNT_P		367999	0					
ANR	368876	Identifier	Z_REFCOUNT_P		367999	0					
ANR	368877	ArgumentList	retval		367999	1					
ANR	368878	Argument	retval		367999	0					
ANR	368879	Identifier	retval		367999	0					
ANR	368880	PrimaryExpression	1		367999	1					
ANR	368881	CompoundStatement		139:78:4299:4299	367999	1					
ANR	368882	ExpressionStatement	ZVAL_UNREF ( retval )	6991:3:208762:208780	367999	0	True				
ANR	368883	CallExpression	ZVAL_UNREF ( retval )		367999	0					
ANR	368884	Callee	ZVAL_UNREF		367999	0					
ANR	368885	Identifier	ZVAL_UNREF		367999	0					
ANR	368886	ArgumentList	retval		367999	1					
ANR	368887	Argument	retval		367999	0					
ANR	368888	Identifier	retval		367999	0					
ANR	368889	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	6993:2:208788:208833	367999	1	True				
ANR	368890	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		367999	0					
ANR	368891	Callee	ZVAL_COPY		367999	0					
ANR	368892	Identifier	ZVAL_COPY		367999	0					
ANR	368893	ArgumentList	EX_VAR ( opline -> result . var )		367999	1					
ANR	368894	Argument	EX_VAR ( opline -> result . var )		367999	0					
ANR	368895	CallExpression	EX_VAR ( opline -> result . var )		367999	0					
ANR	368896	Callee	EX_VAR		367999	0					
ANR	368897	Identifier	EX_VAR		367999	0					
ANR	368898	ArgumentList	opline -> result . var		367999	1					
ANR	368899	Argument	opline -> result . var		367999	0					
ANR	368900	MemberAccess	opline -> result . var		367999	0					
ANR	368901	PtrMemberAccess	opline -> result		367999	0					
ANR	368902	Identifier	opline		367999	0					
ANR	368903	Identifier	result		367999	1					
ANR	368904	Identifier	var		367999	1					
ANR	368905	Argument	retval		367999	1					
ANR	368906	Identifier	retval		367999	0					
ANR	368907	ElseStatement	else		367999	0					
ANR	368908	CompoundStatement		143:8:4385:4385	367999	0					
ANR	368909	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	6995:2:208847:208896	367999	0	True				
ANR	368910	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		367999	0					
ANR	368911	Callee	ZVAL_INDIRECT		367999	0					
ANR	368912	Identifier	ZVAL_INDIRECT		367999	0					
ANR	368913	ArgumentList	EX_VAR ( opline -> result . var )		367999	1					
ANR	368914	Argument	EX_VAR ( opline -> result . var )		367999	0					
ANR	368915	CallExpression	EX_VAR ( opline -> result . var )		367999	0					
ANR	368916	Callee	EX_VAR		367999	0					
ANR	368917	Identifier	EX_VAR		367999	0					
ANR	368918	ArgumentList	opline -> result . var		367999	1					
ANR	368919	Argument	opline -> result . var		367999	0					
ANR	368920	MemberAccess	opline -> result . var		367999	0					
ANR	368921	PtrMemberAccess	opline -> result		367999	0					
ANR	368922	Identifier	opline		367999	0					
ANR	368923	Identifier	result		367999	1					
ANR	368924	Identifier	var		367999	1					
ANR	368925	Argument	retval		367999	1					
ANR	368926	Identifier	retval		367999	0					
ANR	368927	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	6997:1:208902:208939	367999	12	True				
ANR	368928	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		367999	0					
ANR	368929	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		367999	0					
ANR	368930	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		367999	0					
ANR	368931	ArgumentList			367999	1					
ANR	368932	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		367999	1					
ANR	368933	Identifier	zend_fetch_var_address_helper_SPEC_CONST_VAR		367999	2					
ANR	368934	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		367999	3					
ANR	368935	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	6851:90:204419:204454	367999	0	True				
ANR	368936	ParameterType	int type		367999	0					
ANR	368937	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		367999	1					
ANR	368938	CFGEntryNode	ENTRY		367999		True				
ANR	368939	CFGExitNode	EXIT		367999		True				
ANR	368940	Symbol	ZEND_FETCH_CLASS_DEFAULT		367999						
ANR	368941	Symbol	exception		367999						
ANR	368942	Symbol	zend_get_target_symbol_table		367999						
ANR	368943	Symbol	opline -> op2 . var		367999						
ANR	368944	Symbol	IS_CV		367999						
ANR	368945	Symbol	Z_CONSTANT_P		367999						
ANR	368946	Symbol	* ce		367999						
ANR	368947	Symbol	type		367999						
ANR	368948	Symbol	Z_REFCOUNT_P		367999						
ANR	368949	Symbol	opline -> extended_value		367999						
ANR	368950	Symbol	execute_data		367999						
ANR	368951	Symbol	opline -> result		367999						
ANR	368952	Symbol	zend_std_get_static_property		367999						
ANR	368953	Symbol	zend_hash_find		367999						
ANR	368954	Symbol	opline		367999						
ANR	368955	Symbol	Z_CE_P		367999						
ANR	368956	Symbol	target_symbol_table		367999						
ANR	368957	Symbol	IS_STRING		367999						
ANR	368958	Symbol	ce -> name		367999						
ANR	368959	Symbol	zend_hash_update		367999						
ANR	368960	Symbol	BP_VAR_IS		367999						
ANR	368961	Symbol	IS_UNDEF		367999						
ANR	368962	Symbol	BP_VAR_R		367999						
ANR	368963	Symbol	IS_CONST		367999						
ANR	368964	Symbol	EG		367999						
ANR	368965	Symbol	NULL		367999						
ANR	368966	Symbol	EX_CONSTANT		367999						
ANR	368967	Symbol	Z_CACHE_SLOT_P		367999						
ANR	368968	Symbol	CE_STATIC_MEMBERS		367999						
ANR	368969	Symbol	E_NOTICE		367999						
ANR	368970	Symbol	varname		367999						
ANR	368971	Symbol	retval		367999						
ANR	368972	Symbol	name		367999						
ANR	368973	Symbol	EX_VAR		367999						
ANR	368974	Symbol	zend_fetch_class_by_name		367999						
ANR	368975	Symbol	Z_STR_P		367999						
ANR	368976	Symbol	IS_VAR		367999						
ANR	368977	Symbol	Z_ISREF_P		367999						
ANR	368978	Symbol	IS_INDIRECT		367999						
ANR	368979	Symbol	opline -> op1		367999						
ANR	368980	Symbol	CACHED_PTR		367999						
ANR	368981	Symbol	opline -> op2		367999						
ANR	368982	Symbol	Z_INDIRECT_P		367999						
ANR	368983	Symbol	& EG		367999						
ANR	368984	Symbol	UNEXPECTED		367999						
ANR	368985	Symbol	ZEND_FETCH_CLASS_EXCEPTION		367999						
ANR	368986	Symbol	ZEND_FETCH_STATIC		367999						
ANR	368987	Symbol	uninitialized_zval		367999						
ANR	368988	Symbol	ce		367999						
ANR	368989	Symbol	SUCCESS		367999						
ANR	368990	Symbol	zval_get_string		367999						
ANR	368991	Symbol	ZEND_FETCH_TYPE_MASK		367999						
ANR	368992	Symbol	zend_hash_add_new		367999						
ANR	368993	Symbol	Z_TYPE_P		367999						
ANR	368994	Symbol	CACHED_POLYMORPHIC_PTR		367999						
ANR	368995	Symbol	ZSTR_VAL		367999						
ANR	368996	Symbol	* opline		367999						
ANR	368997	Symbol	ZEND_FETCH_GLOBAL_LOCK		367999						
ANR	368998	Symbol	zval_update_constant_ex		367999						
ANR	368999	Symbol	EXPECTED		367999						
ANR	369000	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		367999						
ANR	369001	Symbol	opline -> result . var		367999						
ANR	369002	Symbol	IS_UNUSED		367999						
ANR	369003	DeclStmt									
ANR	369004	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	369005	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	369006	DeclStmt									
ANR	369007	Decl							HashTable	HashTable *	target_symbol_table
ANR	369008	DeclStmt									
ANR	369009	Decl							zval	zval *	var
ANR	369010	DeclStmt									
ANR	369011	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	369012	DeclStmt									
ANR	369013	Decl							zval	zval *	z
ANR	369014	DeclStmt									
ANR	369015	Decl							zend_class_entry	zend_class_entry *	ce
ANR	369016	DeclStmt									
ANR	369017	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	369018	DeclStmt									
ANR	369019	Decl							int	int	result
ANR	369020	DeclStmt									
ANR	369021	Decl							zval	zval	tmp
ANR	369022	Decl							zval	zval *	varname
ANR	369023	DeclStmt									
ANR	369024	Decl							zend_class_entry	zend_class_entry *	ce
ANR	369025	DeclStmt									
ANR	369026	Decl							HashTable	HashTable *	target_symbol_table
ANR	369027	DeclStmt									
ANR	369028	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	369029	DeclStmt									
ANR	369030	Decl							zval	zval *	value
ANR	369031	DeclStmt									
ANR	369032	Decl							zval	zval *	value_ptr
ANR	369033	DeclStmt									
ANR	369034	Decl							zval	zval *	value
ANR	369035	DeclStmt									
ANR	369036	Decl							zend_free_op	zend_free_op	free_op2
ANR	369037	DeclStmt									
ANR	369038	Decl							zval	zval *	key
ANR	369039	Function	zend_fetch_var_address_helper_SPEC_CONST_UNUSED	7357:0:220406:225027							
ANR	369040	FunctionDef	zend_fetch_var_address_helper_SPEC_CONST_UNUSED (int type ZEND_OPCODE_HANDLER_ARGS_DC)		369039	0					
ANR	369041	CompoundStatement		7358:0:220537:225027	369039	0					
ANR	369042	IdentifierDeclStatement	USE_OPLINE zval * varname ;	7359:1:220540:220566	369039	0	True				
ANR	369043	IdentifierDecl	* varname		369039	0					
ANR	369044	IdentifierDeclType	USE_OPLINE zval *		369039	0					
ANR	369045	Identifier	varname		369039	1					
ANR	369046	IdentifierDeclStatement	zval * retval ;	7362:1:220569:220581	369039	1	True				
ANR	369047	IdentifierDecl	* retval		369039	0					
ANR	369048	IdentifierDeclType	zval *		369039	0					
ANR	369049	Identifier	retval		369039	1					
ANR	369050	IdentifierDeclStatement	zend_string * name ;	7363:1:220584:220601	369039	2	True				
ANR	369051	IdentifierDecl	* name		369039	0					
ANR	369052	IdentifierDeclType	zend_string *		369039	0					
ANR	369053	Identifier	name		369039	1					
ANR	369054	IdentifierDeclStatement	HashTable * target_symbol_table ;	7364:1:220604:220634	369039	3	True				
ANR	369055	IdentifierDecl	* target_symbol_table		369039	0					
ANR	369056	IdentifierDeclType	HashTable *		369039	0					
ANR	369057	Identifier	target_symbol_table		369039	1					
ANR	369058	ExpressionStatement	SAVE_OPLINE ( )	7366:1:220638:220651	369039	4	True				
ANR	369059	CallExpression	SAVE_OPLINE ( )		369039	0					
ANR	369060	Callee	SAVE_OPLINE		369039	0					
ANR	369061	Identifier	SAVE_OPLINE		369039	0					
ANR	369062	ArgumentList			369039	1					
ANR	369063	ExpressionStatement	varname = EX_CONSTANT ( opline -> op1 )	7367:1:220654:220688	369039	5	True				
ANR	369064	AssignmentExpression	varname = EX_CONSTANT ( opline -> op1 )		369039	0		=			
ANR	369065	Identifier	varname		369039	0					
ANR	369066	CallExpression	EX_CONSTANT ( opline -> op1 )		369039	1					
ANR	369067	Callee	EX_CONSTANT		369039	0					
ANR	369068	Identifier	EX_CONSTANT		369039	0					
ANR	369069	ArgumentList	opline -> op1		369039	1					
ANR	369070	Argument	opline -> op1		369039	0					
ANR	369071	PtrMemberAccess	opline -> op1		369039	0					
ANR	369072	Identifier	opline		369039	0					
ANR	369073	Identifier	op1		369039	1					
ANR	369074	IfStatement	if ( IS_CONST == IS_CONST )		369039	6					
ANR	369075	Condition	IS_CONST == IS_CONST	7369:6:220697:220716	369039	0	True				
ANR	369076	EqualityExpression	IS_CONST == IS_CONST		369039	0		==			
ANR	369077	Identifier	IS_CONST		369039	0					
ANR	369078	Identifier	IS_CONST		369039	1					
ANR	369079	CompoundStatement		12:28:181:181	369039	1					
ANR	369080	ExpressionStatement	name = Z_STR_P ( varname )	7370:2:220723:220746	369039	0	True				
ANR	369081	AssignmentExpression	name = Z_STR_P ( varname )		369039	0		=			
ANR	369082	Identifier	name		369039	0					
ANR	369083	CallExpression	Z_STR_P ( varname )		369039	1					
ANR	369084	Callee	Z_STR_P		369039	0					
ANR	369085	Identifier	Z_STR_P		369039	0					
ANR	369086	ArgumentList	varname		369039	1					
ANR	369087	Argument	varname		369039	0					
ANR	369088	Identifier	varname		369039	0					
ANR	369089	ElseStatement	else		369039	0					
ANR	369090	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		369039	0					
ANR	369091	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	7371:12:220760:220799	369039	0	True				
ANR	369092	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		369039	0					
ANR	369093	Callee	EXPECTED		369039	0					
ANR	369094	Identifier	EXPECTED		369039	0					
ANR	369095	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		369039	1					
ANR	369096	Argument	Z_TYPE_P ( varname ) == IS_STRING		369039	0					
ANR	369097	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		369039	0		==			
ANR	369098	CallExpression	Z_TYPE_P ( varname )		369039	0					
ANR	369099	Callee	Z_TYPE_P		369039	0					
ANR	369100	Identifier	Z_TYPE_P		369039	0					
ANR	369101	ArgumentList	varname		369039	1					
ANR	369102	Argument	varname		369039	0					
ANR	369103	Identifier	varname		369039	0					
ANR	369104	Identifier	IS_STRING		369039	1					
ANR	369105	CompoundStatement		14:54:264:264	369039	1					
ANR	369106	ExpressionStatement	name = Z_STR_P ( varname )	7372:2:220806:220829	369039	0	True				
ANR	369107	AssignmentExpression	name = Z_STR_P ( varname )		369039	0		=			
ANR	369108	Identifier	name		369039	0					
ANR	369109	CallExpression	Z_STR_P ( varname )		369039	1					
ANR	369110	Callee	Z_STR_P		369039	0					
ANR	369111	Identifier	Z_STR_P		369039	0					
ANR	369112	ArgumentList	varname		369039	1					
ANR	369113	Argument	varname		369039	0					
ANR	369114	Identifier	varname		369039	0					
ANR	369115	ExpressionStatement	zend_string_addref ( name )	7373:2:220833:220857	369039	1	True				
ANR	369116	CallExpression	zend_string_addref ( name )		369039	0					
ANR	369117	Callee	zend_string_addref		369039	0					
ANR	369118	Identifier	zend_string_addref		369039	0					
ANR	369119	ArgumentList	name		369039	1					
ANR	369120	Argument	name		369039	0					
ANR	369121	Identifier	name		369039	0					
ANR	369122	ElseStatement	else		369039	0					
ANR	369123	CompoundStatement		17:8:329:329	369039	0					
ANR	369124	IfStatement	if ( IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		369039	0					
ANR	369125	Condition	IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	7375:6:220875:220936	369039	0	True				
ANR	369126	AndExpression	IS_CONST == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		369039	0		&&			
ANR	369127	EqualityExpression	IS_CONST == IS_CV		369039	0		==			
ANR	369128	Identifier	IS_CONST		369039	0					
ANR	369129	Identifier	IS_CV		369039	1					
ANR	369130	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		369039	1					
ANR	369131	Callee	UNEXPECTED		369039	0					
ANR	369132	Identifier	UNEXPECTED		369039	0					
ANR	369133	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		369039	1					
ANR	369134	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		369039	0					
ANR	369135	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		369039	0		==			
ANR	369136	CallExpression	Z_TYPE_P ( varname )		369039	0					
ANR	369137	Callee	Z_TYPE_P		369039	0					
ANR	369138	Identifier	Z_TYPE_P		369039	0					
ANR	369139	ArgumentList	varname		369039	1					
ANR	369140	Argument	varname		369039	0					
ANR	369141	Identifier	varname		369039	0					
ANR	369142	Identifier	IS_UNDEF		369039	1					
ANR	369143	CompoundStatement		18:70:401:401	369039	1					
ANR	369144	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	7376:3:220944:220979	369039	0	True				
ANR	369145	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		369039	0					
ANR	369146	Callee	GET_OP1_UNDEF_CV		369039	0					
ANR	369147	Identifier	GET_OP1_UNDEF_CV		369039	0					
ANR	369148	ArgumentList	varname		369039	1					
ANR	369149	Argument	varname		369039	0					
ANR	369150	Identifier	varname		369039	0					
ANR	369151	Argument	BP_VAR_R		369039	1					
ANR	369152	Identifier	BP_VAR_R		369039	0					
ANR	369153	ExpressionStatement	name = zval_get_string ( varname )	7378:2:220987:221018	369039	1	True				
ANR	369154	AssignmentExpression	name = zval_get_string ( varname )		369039	0		=			
ANR	369155	Identifier	name		369039	0					
ANR	369156	CallExpression	zval_get_string ( varname )		369039	1					
ANR	369157	Callee	zval_get_string		369039	0					
ANR	369158	Identifier	zval_get_string		369039	0					
ANR	369159	ArgumentList	varname		369039	1					
ANR	369160	Argument	varname		369039	0					
ANR	369161	Identifier	varname		369039	0					
ANR	369162	IfStatement	if ( IS_UNUSED != IS_UNUSED )		369039	7					
ANR	369163	Condition	IS_UNUSED != IS_UNUSED	7381:5:221029:221050	369039	0	True				
ANR	369164	EqualityExpression	IS_UNUSED != IS_UNUSED		369039	0		!=			
ANR	369165	Identifier	IS_UNUSED		369039	0					
ANR	369166	Identifier	IS_UNUSED		369039	1					
ANR	369167	CompoundStatement		25:2:519:539	369039	1					
ANR	369168	IdentifierDeclStatement	zend_class_entry * ce ;	7382:2:221057:221077	369039	0	True				
ANR	369169	IdentifierDecl	* ce		369039	0					
ANR	369170	IdentifierDeclType	zend_class_entry *		369039	0					
ANR	369171	Identifier	ce		369039	1					
ANR	369172	IfStatement	if ( IS_UNUSED == IS_CONST )		369039	1					
ANR	369173	Condition	IS_UNUSED == IS_CONST	7384:6:221086:221106	369039	0	True				
ANR	369174	EqualityExpression	IS_UNUSED == IS_CONST		369039	0		==			
ANR	369175	Identifier	IS_UNUSED		369039	0					
ANR	369176	Identifier	IS_CONST		369039	1					
ANR	369177	CompoundStatement		27:29:571:571	369039	1					
ANR	369178	IfStatement	if ( IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		369039	0					
ANR	369179	Condition	IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	7385:7:221118:221218	369039	0	True				
ANR	369180	AndExpression	IS_CONST == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		369039	0		&&			
ANR	369181	EqualityExpression	IS_CONST == IS_CONST		369039	0		==			
ANR	369182	Identifier	IS_CONST		369039	0					
ANR	369183	Identifier	IS_CONST		369039	1					
ANR	369184	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		369039	1					
ANR	369185	Callee	EXPECTED		369039	0					
ANR	369186	Identifier	EXPECTED		369039	0					
ANR	369187	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		369039	1					
ANR	369188	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		369039	0					
ANR	369189	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		369039	0		!=			
ANR	369190	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		369039	0		=			
ANR	369191	Identifier	ce		369039	0					
ANR	369192	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		369039	1					
ANR	369193	Callee	CACHED_PTR		369039	0					
ANR	369194	Identifier	CACHED_PTR		369039	0					
ANR	369195	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	1					
ANR	369196	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	0					
ANR	369197	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	0					
ANR	369198	Callee	Z_CACHE_SLOT_P		369039	0					
ANR	369199	Identifier	Z_CACHE_SLOT_P		369039	0					
ANR	369200	ArgumentList	EX_CONSTANT ( opline -> op1 )		369039	1					
ANR	369201	Argument	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369202	CallExpression	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369203	Callee	EX_CONSTANT		369039	0					
ANR	369204	Identifier	EX_CONSTANT		369039	0					
ANR	369205	ArgumentList	opline -> op1		369039	1					
ANR	369206	Argument	opline -> op1		369039	0					
ANR	369207	PtrMemberAccess	opline -> op1		369039	0					
ANR	369208	Identifier	opline		369039	0					
ANR	369209	Identifier	op1		369039	1					
ANR	369210	Identifier	NULL		369039	1					
ANR	369211	CompoundStatement		28:110:683:683	369039	1					
ANR	369212	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	7386:4:221227:221304	369039	0	True				
ANR	369213	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		369039	0		=			
ANR	369214	Identifier	retval		369039	0					
ANR	369215	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		369039	1					
ANR	369216	Callee	CACHED_PTR		369039	0					
ANR	369217	Identifier	CACHED_PTR		369039	0					
ANR	369218	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		369039	1					
ANR	369219	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		369039	0					
ANR	369220	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		369039	0		+			
ANR	369221	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	0					
ANR	369222	Callee	Z_CACHE_SLOT_P		369039	0					
ANR	369223	Identifier	Z_CACHE_SLOT_P		369039	0					
ANR	369224	ArgumentList	EX_CONSTANT ( opline -> op1 )		369039	1					
ANR	369225	Argument	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369226	CallExpression	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369227	Callee	EX_CONSTANT		369039	0					
ANR	369228	Identifier	EX_CONSTANT		369039	0					
ANR	369229	ArgumentList	opline -> op1		369039	1					
ANR	369230	Argument	opline -> op1		369039	0					
ANR	369231	PtrMemberAccess	opline -> op1		369039	0					
ANR	369232	Identifier	opline		369039	0					
ANR	369233	Identifier	op1		369039	1					
ANR	369234	SizeofExpression	sizeof ( void * )		369039	1					
ANR	369235	Sizeof	sizeof		369039	0					
ANR	369236	SizeofOperand	void *		369039	1					
ANR	369237	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		369039	1					
ANR	369238	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	7389:8:221366:221406	369039	0	True				
ANR	369239	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		369039	0					
ANR	369240	Callee	UNEXPECTED		369039	0					
ANR	369241	Identifier	UNEXPECTED		369039	0					
ANR	369242	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		369039	1					
ANR	369243	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		369039	0					
ANR	369244	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		369039	0		==			
ANR	369245	CallExpression	CE_STATIC_MEMBERS ( ce )		369039	0					
ANR	369246	Callee	CE_STATIC_MEMBERS		369039	0					
ANR	369247	Identifier	CE_STATIC_MEMBERS		369039	0					
ANR	369248	ArgumentList	ce		369039	1					
ANR	369249	Argument	ce		369039	0					
ANR	369250	Identifier	ce		369039	0					
ANR	369251	Identifier	NULL		369039	1					
ANR	369252	CompoundStatement		32:51:871:871	369039	1					
ANR	369253	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	7390:5:221416:221523	369039	0	True				
ANR	369254	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		369039	0					
ANR	369255	Callee	zend_throw_error		369039	0					
ANR	369256	Identifier	zend_throw_error		369039	0					
ANR	369257	ArgumentList	NULL		369039	1					
ANR	369258	Argument	NULL		369039	0					
ANR	369259	Identifier	NULL		369039	0					
ANR	369260	Argument	"""Access to undeclared static property: %s::$%s"""		369039	1					
ANR	369261	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		369039	0					
ANR	369262	Argument	ZSTR_VAL ( ce -> name )		369039	2					
ANR	369263	CallExpression	ZSTR_VAL ( ce -> name )		369039	0					
ANR	369264	Callee	ZSTR_VAL		369039	0					
ANR	369265	Identifier	ZSTR_VAL		369039	0					
ANR	369266	ArgumentList	ce -> name		369039	1					
ANR	369267	Argument	ce -> name		369039	0					
ANR	369268	PtrMemberAccess	ce -> name		369039	0					
ANR	369269	Identifier	ce		369039	0					
ANR	369270	Identifier	name		369039	1					
ANR	369271	Argument	ZSTR_VAL ( name )		369039	3					
ANR	369272	CallExpression	ZSTR_VAL ( name )		369039	0					
ANR	369273	Callee	ZSTR_VAL		369039	0					
ANR	369274	Identifier	ZSTR_VAL		369039	0					
ANR	369275	ArgumentList	name		369039	1					
ANR	369276	Argument	name		369039	0					
ANR	369277	Identifier	name		369039	0					
ANR	369278	ExpressionStatement	HANDLE_EXCEPTION ( )	7392:5:221531:221549	369039	1	True				
ANR	369279	CallExpression	HANDLE_EXCEPTION ( )		369039	0					
ANR	369280	Callee	HANDLE_EXCEPTION		369039	0					
ANR	369281	Identifier	HANDLE_EXCEPTION		369039	0					
ANR	369282	ArgumentList			369039	1					
ANR	369283	GotoStatement	goto fetch_var_return ;	7395:4:221562:221583	369039	2	True				
ANR	369284	Identifier	fetch_var_return		369039	0					
ANR	369285	ElseStatement	else		369039	0					
ANR	369286	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		369039	0					
ANR	369287	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	7396:14:221599:221677	369039	0	True				
ANR	369288	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		369039	0					
ANR	369289	Callee	UNEXPECTED		369039	0					
ANR	369290	Identifier	UNEXPECTED		369039	0					
ANR	369291	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		369039	1					
ANR	369292	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		369039	0					
ANR	369293	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		369039	0		==			
ANR	369294	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		369039	0		=			
ANR	369295	Identifier	ce		369039	0					
ANR	369296	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		369039	1					
ANR	369297	Callee	CACHED_PTR		369039	0					
ANR	369298	Identifier	CACHED_PTR		369039	0					
ANR	369299	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		369039	1					
ANR	369300	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		369039	0					
ANR	369301	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		369039	0					
ANR	369302	Callee	Z_CACHE_SLOT_P		369039	0					
ANR	369303	Identifier	Z_CACHE_SLOT_P		369039	0					
ANR	369304	ArgumentList	EX_CONSTANT ( opline -> op2 )		369039	1					
ANR	369305	Argument	EX_CONSTANT ( opline -> op2 )		369039	0					
ANR	369306	CallExpression	EX_CONSTANT ( opline -> op2 )		369039	0					
ANR	369307	Callee	EX_CONSTANT		369039	0					
ANR	369308	Identifier	EX_CONSTANT		369039	0					
ANR	369309	ArgumentList	opline -> op2		369039	1					
ANR	369310	Argument	opline -> op2		369039	0					
ANR	369311	PtrMemberAccess	opline -> op2		369039	0					
ANR	369312	Identifier	opline		369039	0					
ANR	369313	Identifier	op2		369039	1					
ANR	369314	Identifier	NULL		369039	1					
ANR	369315	CompoundStatement		39:95:1142:1142	369039	1					
ANR	369316	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	7397:4:221686:221835	369039	0	True				
ANR	369317	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		369039	0		=			
ANR	369318	Identifier	ce		369039	0					
ANR	369319	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		369039	1					
ANR	369320	Callee	zend_fetch_class_by_name		369039	0					
ANR	369321	Identifier	zend_fetch_class_by_name		369039	0					
ANR	369322	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		369039	1					
ANR	369323	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		369039	0					
ANR	369324	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		369039	0					
ANR	369325	Callee	Z_STR_P		369039	0					
ANR	369326	Identifier	Z_STR_P		369039	0					
ANR	369327	ArgumentList	EX_CONSTANT ( opline -> op2 )		369039	1					
ANR	369328	Argument	EX_CONSTANT ( opline -> op2 )		369039	0					
ANR	369329	CallExpression	EX_CONSTANT ( opline -> op2 )		369039	0					
ANR	369330	Callee	EX_CONSTANT		369039	0					
ANR	369331	Identifier	EX_CONSTANT		369039	0					
ANR	369332	ArgumentList	opline -> op2		369039	1					
ANR	369333	Argument	opline -> op2		369039	0					
ANR	369334	PtrMemberAccess	opline -> op2		369039	0					
ANR	369335	Identifier	opline		369039	0					
ANR	369336	Identifier	op2		369039	1					
ANR	369337	Argument	EX_CONSTANT ( opline -> op2 ) + 1		369039	1					
ANR	369338	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		369039	0		+			
ANR	369339	CallExpression	EX_CONSTANT ( opline -> op2 )		369039	0					
ANR	369340	Callee	EX_CONSTANT		369039	0					
ANR	369341	Identifier	EX_CONSTANT		369039	0					
ANR	369342	ArgumentList	opline -> op2		369039	1					
ANR	369343	Argument	opline -> op2		369039	0					
ANR	369344	PtrMemberAccess	opline -> op2		369039	0					
ANR	369345	Identifier	opline		369039	0					
ANR	369346	Identifier	op2		369039	1					
ANR	369347	PrimaryExpression	1		369039	1					
ANR	369348	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		369039	2					
ANR	369349	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		369039	0		|			
ANR	369350	Identifier	ZEND_FETCH_CLASS_DEFAULT		369039	0					
ANR	369351	Identifier	ZEND_FETCH_CLASS_EXCEPTION		369039	1					
ANR	369352	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		369039	1					
ANR	369353	Condition	UNEXPECTED ( ce == NULL )	7398:8:221845:221866	369039	0	True				
ANR	369354	CallExpression	UNEXPECTED ( ce == NULL )		369039	0					
ANR	369355	Callee	UNEXPECTED		369039	0					
ANR	369356	Identifier	UNEXPECTED		369039	0					
ANR	369357	ArgumentList	ce == NULL		369039	1					
ANR	369358	Argument	ce == NULL		369039	0					
ANR	369359	EqualityExpression	ce == NULL		369039	0		==			
ANR	369360	Identifier	ce		369039	0					
ANR	369361	Identifier	NULL		369039	1					
ANR	369362	CompoundStatement		41:32:1331:1331	369039	1					
ANR	369363	IfStatement	if ( IS_CONST != IS_CONST )		369039	0					
ANR	369364	Condition	IS_CONST != IS_CONST	7399:9:221880:221899	369039	0	True				
ANR	369365	EqualityExpression	IS_CONST != IS_CONST		369039	0		!=			
ANR	369366	Identifier	IS_CONST		369039	0					
ANR	369367	Identifier	IS_CONST		369039	1					
ANR	369368	CompoundStatement		42:31:1364:1364	369039	1					
ANR	369369	ExpressionStatement	zend_string_release ( name )	7400:6:221910:221935	369039	0	True				
ANR	369370	CallExpression	zend_string_release ( name )		369039	0					
ANR	369371	Callee	zend_string_release		369039	0					
ANR	369372	Identifier	zend_string_release		369039	0					
ANR	369373	ArgumentList	name		369039	1					
ANR	369374	Argument	name		369039	0					
ANR	369375	Identifier	name		369039	0					
ANR	369376	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	7403:5:221950:221987	369039	1	True				
ANR	369377	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		369039	0					
ANR	369378	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		369039	0					
ANR	369379	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		369039	0					
ANR	369380	ArgumentList			369039	1					
ANR	369381	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	7405:4:221999:222054	369039	2	True				
ANR	369382	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		369039	0					
ANR	369383	Callee	CACHE_PTR		369039	0					
ANR	369384	Identifier	CACHE_PTR		369039	0					
ANR	369385	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		369039	1					
ANR	369386	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		369039	0					
ANR	369387	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		369039	0					
ANR	369388	Callee	Z_CACHE_SLOT_P		369039	0					
ANR	369389	Identifier	Z_CACHE_SLOT_P		369039	0					
ANR	369390	ArgumentList	EX_CONSTANT ( opline -> op2 )		369039	1					
ANR	369391	Argument	EX_CONSTANT ( opline -> op2 )		369039	0					
ANR	369392	CallExpression	EX_CONSTANT ( opline -> op2 )		369039	0					
ANR	369393	Callee	EX_CONSTANT		369039	0					
ANR	369394	Identifier	EX_CONSTANT		369039	0					
ANR	369395	ArgumentList	opline -> op2		369039	1					
ANR	369396	Argument	opline -> op2		369039	0					
ANR	369397	PtrMemberAccess	opline -> op2		369039	0					
ANR	369398	Identifier	opline		369039	0					
ANR	369399	Identifier	op2		369039	1					
ANR	369400	Argument	ce		369039	1					
ANR	369401	Identifier	ce		369039	0					
ANR	369402	ElseStatement	else		369039	0					
ANR	369403	CompoundStatement		50:9:1532:1532	369039	0					
ANR	369404	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	7408:3:222075:222111	369039	0	True				
ANR	369405	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		369039	0		=			
ANR	369406	Identifier	ce		369039	0					
ANR	369407	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		369039	1					
ANR	369408	Callee	Z_CE_P		369039	0					
ANR	369409	Identifier	Z_CE_P		369039	0					
ANR	369410	ArgumentList	EX_VAR ( opline -> op2 . var )		369039	1					
ANR	369411	Argument	EX_VAR ( opline -> op2 . var )		369039	0					
ANR	369412	CallExpression	EX_VAR ( opline -> op2 . var )		369039	0					
ANR	369413	Callee	EX_VAR		369039	0					
ANR	369414	Identifier	EX_VAR		369039	0					
ANR	369415	ArgumentList	opline -> op2 . var		369039	1					
ANR	369416	Argument	opline -> op2 . var		369039	0					
ANR	369417	MemberAccess	opline -> op2 . var		369039	0					
ANR	369418	PtrMemberAccess	opline -> op2		369039	0					
ANR	369419	Identifier	opline		369039	0					
ANR	369420	Identifier	op2		369039	1					
ANR	369421	Identifier	var		369039	1					
ANR	369422	IfStatement	"if ( IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		369039	1					
ANR	369423	Condition	"IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	7409:7:222120:222237	369039	0	True				
ANR	369424	AndExpression	"IS_CONST == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		369039	0		&&			
ANR	369425	EqualityExpression	IS_CONST == IS_CONST		369039	0		==			
ANR	369426	Identifier	IS_CONST		369039	0					
ANR	369427	Identifier	IS_CONST		369039	1					
ANR	369428	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		369039	1		!=			
ANR	369429	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		369039	0		=			
ANR	369430	Identifier	retval		369039	0					
ANR	369431	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		369039	1					
ANR	369432	Callee	CACHED_POLYMORPHIC_PTR		369039	0					
ANR	369433	Identifier	CACHED_POLYMORPHIC_PTR		369039	0					
ANR	369434	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	1					
ANR	369435	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	0					
ANR	369436	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	0					
ANR	369437	Callee	Z_CACHE_SLOT_P		369039	0					
ANR	369438	Identifier	Z_CACHE_SLOT_P		369039	0					
ANR	369439	ArgumentList	EX_CONSTANT ( opline -> op1 )		369039	1					
ANR	369440	Argument	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369441	CallExpression	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369442	Callee	EX_CONSTANT		369039	0					
ANR	369443	Identifier	EX_CONSTANT		369039	0					
ANR	369444	ArgumentList	opline -> op1		369039	1					
ANR	369445	Argument	opline -> op1		369039	0					
ANR	369446	PtrMemberAccess	opline -> op1		369039	0					
ANR	369447	Identifier	opline		369039	0					
ANR	369448	Identifier	op1		369039	1					
ANR	369449	Argument	ce		369039	1					
ANR	369450	Identifier	ce		369039	0					
ANR	369451	Identifier	NULL		369039	1					
ANR	369452	CompoundStatement		53:96:1702:1702	369039	1					
ANR	369453	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		369039	0					
ANR	369454	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	7413:8:222302:222342	369039	0	True				
ANR	369455	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		369039	0					
ANR	369456	Callee	UNEXPECTED		369039	0					
ANR	369457	Identifier	UNEXPECTED		369039	0					
ANR	369458	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		369039	1					
ANR	369459	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		369039	0					
ANR	369460	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		369039	0		==			
ANR	369461	CallExpression	CE_STATIC_MEMBERS ( ce )		369039	0					
ANR	369462	Callee	CE_STATIC_MEMBERS		369039	0					
ANR	369463	Identifier	CE_STATIC_MEMBERS		369039	0					
ANR	369464	ArgumentList	ce		369039	1					
ANR	369465	Argument	ce		369039	0					
ANR	369466	Identifier	ce		369039	0					
ANR	369467	Identifier	NULL		369039	1					
ANR	369468	CompoundStatement		56:51:1807:1807	369039	1					
ANR	369469	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	7414:5:222352:222459	369039	0	True				
ANR	369470	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		369039	0					
ANR	369471	Callee	zend_throw_error		369039	0					
ANR	369472	Identifier	zend_throw_error		369039	0					
ANR	369473	ArgumentList	NULL		369039	1					
ANR	369474	Argument	NULL		369039	0					
ANR	369475	Identifier	NULL		369039	0					
ANR	369476	Argument	"""Access to undeclared static property: %s::$%s"""		369039	1					
ANR	369477	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		369039	0					
ANR	369478	Argument	ZSTR_VAL ( ce -> name )		369039	2					
ANR	369479	CallExpression	ZSTR_VAL ( ce -> name )		369039	0					
ANR	369480	Callee	ZSTR_VAL		369039	0					
ANR	369481	Identifier	ZSTR_VAL		369039	0					
ANR	369482	ArgumentList	ce -> name		369039	1					
ANR	369483	Argument	ce -> name		369039	0					
ANR	369484	PtrMemberAccess	ce -> name		369039	0					
ANR	369485	Identifier	ce		369039	0					
ANR	369486	Identifier	name		369039	1					
ANR	369487	Argument	ZSTR_VAL ( name )		369039	3					
ANR	369488	CallExpression	ZSTR_VAL ( name )		369039	0					
ANR	369489	Callee	ZSTR_VAL		369039	0					
ANR	369490	Identifier	ZSTR_VAL		369039	0					
ANR	369491	ArgumentList	name		369039	1					
ANR	369492	Argument	name		369039	0					
ANR	369493	Identifier	name		369039	0					
ANR	369494	ExpressionStatement	HANDLE_EXCEPTION ( )	7416:5:222467:222485	369039	1	True				
ANR	369495	CallExpression	HANDLE_EXCEPTION ( )		369039	0					
ANR	369496	Callee	HANDLE_EXCEPTION		369039	0					
ANR	369497	Identifier	HANDLE_EXCEPTION		369039	0					
ANR	369498	ArgumentList			369039	1					
ANR	369499	GotoStatement	goto fetch_var_return ;	7419:4:222498:222519	369039	1	True				
ANR	369500	Identifier	fetch_var_return		369039	0					
ANR	369501	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	7422:2:222532:222582	369039	2	True				
ANR	369502	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		369039	0		=			
ANR	369503	Identifier	retval		369039	0					
ANR	369504	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		369039	1					
ANR	369505	Callee	zend_std_get_static_property		369039	0					
ANR	369506	Identifier	zend_std_get_static_property		369039	0					
ANR	369507	ArgumentList	ce		369039	1					
ANR	369508	Argument	ce		369039	0					
ANR	369509	Identifier	ce		369039	0					
ANR	369510	Argument	name		369039	1					
ANR	369511	Identifier	name		369039	0					
ANR	369512	Argument	0		369039	2					
ANR	369513	PrimaryExpression	0		369039	0					
ANR	369514	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		369039	3					
ANR	369515	Condition	UNEXPECTED ( EG ( exception ) )	7423:6:222590:222614	369039	0	True				
ANR	369516	CallExpression	UNEXPECTED ( EG ( exception ) )		369039	0					
ANR	369517	Callee	UNEXPECTED		369039	0					
ANR	369518	Identifier	UNEXPECTED		369039	0					
ANR	369519	ArgumentList	EG ( exception )		369039	1					
ANR	369520	Argument	EG ( exception )		369039	0					
ANR	369521	CallExpression	EG ( exception )		369039	0					
ANR	369522	Callee	EG		369039	0					
ANR	369523	Identifier	EG		369039	0					
ANR	369524	ArgumentList	exception		369039	1					
ANR	369525	Argument	exception		369039	0					
ANR	369526	Identifier	exception		369039	0					
ANR	369527	CompoundStatement		66:33:2079:2079	369039	1					
ANR	369528	IfStatement	if ( IS_CONST != IS_CONST )		369039	0					
ANR	369529	Condition	IS_CONST != IS_CONST	7424:7:222626:222645	369039	0	True				
ANR	369530	EqualityExpression	IS_CONST != IS_CONST		369039	0		!=			
ANR	369531	Identifier	IS_CONST		369039	0					
ANR	369532	Identifier	IS_CONST		369039	1					
ANR	369533	CompoundStatement		67:29:2110:2110	369039	1					
ANR	369534	ExpressionStatement	zend_string_release ( name )	7425:4:222654:222679	369039	0	True				
ANR	369535	CallExpression	zend_string_release ( name )		369039	0					
ANR	369536	Callee	zend_string_release		369039	0					
ANR	369537	Identifier	zend_string_release		369039	0					
ANR	369538	ArgumentList	name		369039	1					
ANR	369539	Argument	name		369039	0					
ANR	369540	Identifier	name		369039	0					
ANR	369541	ExpressionStatement	HANDLE_EXCEPTION ( )	7428:3:222690:222708	369039	1	True				
ANR	369542	CallExpression	HANDLE_EXCEPTION ( )		369039	0					
ANR	369543	Callee	HANDLE_EXCEPTION		369039	0					
ANR	369544	Identifier	HANDLE_EXCEPTION		369039	0					
ANR	369545	ArgumentList			369039	1					
ANR	369546	IfStatement	if ( IS_CONST == IS_CONST && retval )		369039	4					
ANR	369547	Condition	IS_CONST == IS_CONST && retval	7430:6:222720:222749	369039	0	True				
ANR	369548	AndExpression	IS_CONST == IS_CONST && retval		369039	0		&&			
ANR	369549	EqualityExpression	IS_CONST == IS_CONST		369039	0		==			
ANR	369550	Identifier	IS_CONST		369039	0					
ANR	369551	Identifier	IS_CONST		369039	1					
ANR	369552	Identifier	retval		369039	1					
ANR	369553	CompoundStatement		73:38:2214:2214	369039	1					
ANR	369554	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	7431:3:222757:222832	369039	0	True				
ANR	369555	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		369039	0					
ANR	369556	Callee	CACHE_POLYMORPHIC_PTR		369039	0					
ANR	369557	Identifier	CACHE_POLYMORPHIC_PTR		369039	0					
ANR	369558	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	1					
ANR	369559	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	0					
ANR	369560	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		369039	0					
ANR	369561	Callee	Z_CACHE_SLOT_P		369039	0					
ANR	369562	Identifier	Z_CACHE_SLOT_P		369039	0					
ANR	369563	ArgumentList	EX_CONSTANT ( opline -> op1 )		369039	1					
ANR	369564	Argument	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369565	CallExpression	EX_CONSTANT ( opline -> op1 )		369039	0					
ANR	369566	Callee	EX_CONSTANT		369039	0					
ANR	369567	Identifier	EX_CONSTANT		369039	0					
ANR	369568	ArgumentList	opline -> op1		369039	1					
ANR	369569	Argument	opline -> op1		369039	0					
ANR	369570	PtrMemberAccess	opline -> op1		369039	0					
ANR	369571	Identifier	opline		369039	0					
ANR	369572	Identifier	op1		369039	1					
ANR	369573	Argument	ce		369039	1					
ANR	369574	Identifier	ce		369039	0					
ANR	369575	Argument	retval		369039	2					
ANR	369576	Identifier	retval		369039	0					
ANR	369577	ElseStatement	else		369039	0					
ANR	369578	CompoundStatement		77:8:2309:2309	369039	0					
ANR	369579	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	7435:2:222851:222962	369039	0	True				
ANR	369580	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		369039	0		=			
ANR	369581	Identifier	target_symbol_table		369039	0					
ANR	369582	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		369039	1					
ANR	369583	Callee	zend_get_target_symbol_table		369039	0					
ANR	369584	Identifier	zend_get_target_symbol_table		369039	0					
ANR	369585	ArgumentList	execute_data		369039	1					
ANR	369586	Argument	execute_data		369039	0					
ANR	369587	Identifier	execute_data		369039	0					
ANR	369588	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		369039	1					
ANR	369589	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		369039	0		&			
ANR	369590	PtrMemberAccess	opline -> extended_value		369039	0					
ANR	369591	Identifier	opline		369039	0					
ANR	369592	Identifier	extended_value		369039	1					
ANR	369593	Identifier	ZEND_FETCH_TYPE_MASK		369039	1					
ANR	369594	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	7436:2:222966:223016	369039	1	True				
ANR	369595	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		369039	0		=			
ANR	369596	Identifier	retval		369039	0					
ANR	369597	CallExpression	"zend_hash_find ( target_symbol_table , name )"		369039	1					
ANR	369598	Callee	zend_hash_find		369039	0					
ANR	369599	Identifier	zend_hash_find		369039	0					
ANR	369600	ArgumentList	target_symbol_table		369039	1					
ANR	369601	Argument	target_symbol_table		369039	0					
ANR	369602	Identifier	target_symbol_table		369039	0					
ANR	369603	Argument	name		369039	1					
ANR	369604	Identifier	name		369039	0					
ANR	369605	IfStatement	if ( retval == NULL )		369039	2					
ANR	369606	Condition	retval == NULL	7437:6:223024:223037	369039	0	True				
ANR	369607	EqualityExpression	retval == NULL		369039	0		==			
ANR	369608	Identifier	retval		369039	0					
ANR	369609	Identifier	NULL		369039	1					
ANR	369610	CompoundStatement		80:22:2502:2502	369039	1					
ANR	369611	SwitchStatement	switch ( type )		369039	0					
ANR	369612	Condition	type	7438:11:223053:223056	369039	0	True				
ANR	369613	Identifier	type		369039	0					
ANR	369614	CompoundStatement		81:17:2521:2521	369039	1					
ANR	369615	Label	case BP_VAR_R :	7439:4:223065:223078	369039	0	True				
ANR	369616	Identifier	BP_VAR_R		369039	0					
ANR	369617	Label	case BP_VAR_UNSET :	7440:4:223084:223101	369039	1	True				
ANR	369618	Identifier	BP_VAR_UNSET		369039	0					
ANR	369619	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	7441:5:223108:223169	369039	2	True				
ANR	369620	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		369039	0					
ANR	369621	Callee	zend_error		369039	0					
ANR	369622	Identifier	zend_error		369039	0					
ANR	369623	ArgumentList	E_NOTICE		369039	1					
ANR	369624	Argument	E_NOTICE		369039	0					
ANR	369625	Identifier	E_NOTICE		369039	0					
ANR	369626	Argument	"""Undefined variable: %s"""		369039	1					
ANR	369627	PrimaryExpression	"""Undefined variable: %s"""		369039	0					
ANR	369628	Argument	ZSTR_VAL ( name )		369039	2					
ANR	369629	CallExpression	ZSTR_VAL ( name )		369039	0					
ANR	369630	Callee	ZSTR_VAL		369039	0					
ANR	369631	Identifier	ZSTR_VAL		369039	0					
ANR	369632	ArgumentList	name		369039	1					
ANR	369633	Argument	name		369039	0					
ANR	369634	Identifier	name		369039	0					
ANR	369635	Label	case BP_VAR_IS :	7443:4:223214:223228	369039	3	True				
ANR	369636	Identifier	BP_VAR_IS		369039	0					
ANR	369637	ExpressionStatement	retval = & EG ( uninitialized_zval )	7444:5:223235:223267	369039	4	True				
ANR	369638	AssignmentExpression	retval = & EG ( uninitialized_zval )		369039	0		=			
ANR	369639	Identifier	retval		369039	0					
ANR	369640	UnaryOperationExpression	& EG ( uninitialized_zval )		369039	1					
ANR	369641	UnaryOperator	&		369039	0					
ANR	369642	CallExpression	EG ( uninitialized_zval )		369039	1					
ANR	369643	Callee	EG		369039	0					
ANR	369644	Identifier	EG		369039	0					
ANR	369645	ArgumentList	uninitialized_zval		369039	1					
ANR	369646	Argument	uninitialized_zval		369039	0					
ANR	369647	Identifier	uninitialized_zval		369039	0					
ANR	369648	BreakStatement	break ;	7445:5:223274:223279	369039	5	True				
ANR	369649	Label	case BP_VAR_RW :	7446:4:223285:223299	369039	6	True				
ANR	369650	Identifier	BP_VAR_RW		369039	0					
ANR	369651	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	7447:5:223306:223367	369039	7	True				
ANR	369652	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		369039	0					
ANR	369653	Callee	zend_error		369039	0					
ANR	369654	Identifier	zend_error		369039	0					
ANR	369655	ArgumentList	E_NOTICE		369039	1					
ANR	369656	Argument	E_NOTICE		369039	0					
ANR	369657	Identifier	E_NOTICE		369039	0					
ANR	369658	Argument	"""Undefined variable: %s"""		369039	1					
ANR	369659	PrimaryExpression	"""Undefined variable: %s"""		369039	0					
ANR	369660	Argument	ZSTR_VAL ( name )		369039	2					
ANR	369661	CallExpression	ZSTR_VAL ( name )		369039	0					
ANR	369662	Callee	ZSTR_VAL		369039	0					
ANR	369663	Identifier	ZSTR_VAL		369039	0					
ANR	369664	ArgumentList	name		369039	1					
ANR	369665	Argument	name		369039	0					
ANR	369666	Identifier	name		369039	0					
ANR	369667	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	7448:5:223374:223451	369039	8	True				
ANR	369668	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		369039	0		=			
ANR	369669	Identifier	retval		369039	0					
ANR	369670	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		369039	1					
ANR	369671	Callee	zend_hash_update		369039	0					
ANR	369672	Identifier	zend_hash_update		369039	0					
ANR	369673	ArgumentList	target_symbol_table		369039	1					
ANR	369674	Argument	target_symbol_table		369039	0					
ANR	369675	Identifier	target_symbol_table		369039	0					
ANR	369676	Argument	name		369039	1					
ANR	369677	Identifier	name		369039	0					
ANR	369678	Argument	& EG ( uninitialized_zval )		369039	2					
ANR	369679	UnaryOperationExpression	& EG ( uninitialized_zval )		369039	0					
ANR	369680	UnaryOperator	&		369039	0					
ANR	369681	CallExpression	EG ( uninitialized_zval )		369039	1					
ANR	369682	Callee	EG		369039	0					
ANR	369683	Identifier	EG		369039	0					
ANR	369684	ArgumentList	uninitialized_zval		369039	1					
ANR	369685	Argument	uninitialized_zval		369039	0					
ANR	369686	Identifier	uninitialized_zval		369039	0					
ANR	369687	BreakStatement	break ;	7449:5:223458:223463	369039	9	True				
ANR	369688	Label	case BP_VAR_W :	7450:4:223469:223482	369039	10	True				
ANR	369689	Identifier	BP_VAR_W		369039	0					
ANR	369690	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	7451:5:223489:223567	369039	11	True				
ANR	369691	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		369039	0		=			
ANR	369692	Identifier	retval		369039	0					
ANR	369693	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		369039	1					
ANR	369694	Callee	zend_hash_add_new		369039	0					
ANR	369695	Identifier	zend_hash_add_new		369039	0					
ANR	369696	ArgumentList	target_symbol_table		369039	1					
ANR	369697	Argument	target_symbol_table		369039	0					
ANR	369698	Identifier	target_symbol_table		369039	0					
ANR	369699	Argument	name		369039	1					
ANR	369700	Identifier	name		369039	0					
ANR	369701	Argument	& EG ( uninitialized_zval )		369039	2					
ANR	369702	UnaryOperationExpression	& EG ( uninitialized_zval )		369039	0					
ANR	369703	UnaryOperator	&		369039	0					
ANR	369704	CallExpression	EG ( uninitialized_zval )		369039	1					
ANR	369705	Callee	EG		369039	0					
ANR	369706	Identifier	EG		369039	0					
ANR	369707	ArgumentList	uninitialized_zval		369039	1					
ANR	369708	Argument	uninitialized_zval		369039	0					
ANR	369709	Identifier	uninitialized_zval		369039	0					
ANR	369710	BreakStatement	break ;	7452:5:223574:223579	369039	12	True				
ANR	369711	Statement	EMPTY_SWITCH_DEFAULT_CASE	7453:4:223585:223609	369039	13	True				
ANR	369712	Statement	(	7453:29:223610:223610	369039	14	True				
ANR	369713	Statement	)	7453:30:223611:223611	369039	15	True				
ANR	369714	ElseStatement	else		369039	0					
ANR	369715	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		369039	0					
ANR	369716	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	7456:13:223698:223728	369039	0	True				
ANR	369717	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		369039	0		==			
ANR	369718	CallExpression	Z_TYPE_P ( retval )		369039	0					
ANR	369719	Callee	Z_TYPE_P		369039	0					
ANR	369720	Identifier	Z_TYPE_P		369039	0					
ANR	369721	ArgumentList	retval		369039	1					
ANR	369722	Argument	retval		369039	0					
ANR	369723	Identifier	retval		369039	0					
ANR	369724	Identifier	IS_INDIRECT		369039	1					
ANR	369725	CompoundStatement		99:46:3193:3193	369039	1					
ANR	369726	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	7457:3:223736:223765	369039	0	True				
ANR	369727	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		369039	0		=			
ANR	369728	Identifier	retval		369039	0					
ANR	369729	CallExpression	Z_INDIRECT_P ( retval )		369039	1					
ANR	369730	Callee	Z_INDIRECT_P		369039	0					
ANR	369731	Identifier	Z_INDIRECT_P		369039	0					
ANR	369732	ArgumentList	retval		369039	1					
ANR	369733	Argument	retval		369039	0					
ANR	369734	Identifier	retval		369039	0					
ANR	369735	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		369039	1					
ANR	369736	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	7458:7:223774:223801	369039	0	True				
ANR	369737	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		369039	0		==			
ANR	369738	CallExpression	Z_TYPE_P ( retval )		369039	0					
ANR	369739	Callee	Z_TYPE_P		369039	0					
ANR	369740	Identifier	Z_TYPE_P		369039	0					
ANR	369741	ArgumentList	retval		369039	1					
ANR	369742	Argument	retval		369039	0					
ANR	369743	Identifier	retval		369039	0					
ANR	369744	Identifier	IS_UNDEF		369039	1					
ANR	369745	CompoundStatement		101:37:3266:3266	369039	1					
ANR	369746	SwitchStatement	switch ( type )		369039	0					
ANR	369747	Condition	type	7459:12:223818:223821	369039	0	True				
ANR	369748	Identifier	type		369039	0					
ANR	369749	CompoundStatement		102:18:3286:3286	369039	1					
ANR	369750	Label	case BP_VAR_R :	7460:5:223831:223844	369039	0	True				
ANR	369751	Identifier	BP_VAR_R		369039	0					
ANR	369752	Label	case BP_VAR_UNSET :	7461:5:223851:223868	369039	1	True				
ANR	369753	Identifier	BP_VAR_UNSET		369039	0					
ANR	369754	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	7462:6:223876:223937	369039	2	True				
ANR	369755	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		369039	0					
ANR	369756	Callee	zend_error		369039	0					
ANR	369757	Identifier	zend_error		369039	0					
ANR	369758	ArgumentList	E_NOTICE		369039	1					
ANR	369759	Argument	E_NOTICE		369039	0					
ANR	369760	Identifier	E_NOTICE		369039	0					
ANR	369761	Argument	"""Undefined variable: %s"""		369039	1					
ANR	369762	PrimaryExpression	"""Undefined variable: %s"""		369039	0					
ANR	369763	Argument	ZSTR_VAL ( name )		369039	2					
ANR	369764	CallExpression	ZSTR_VAL ( name )		369039	0					
ANR	369765	Callee	ZSTR_VAL		369039	0					
ANR	369766	Identifier	ZSTR_VAL		369039	0					
ANR	369767	ArgumentList	name		369039	1					
ANR	369768	Argument	name		369039	0					
ANR	369769	Identifier	name		369039	0					
ANR	369770	Label	case BP_VAR_IS :	7464:5:223984:223998	369039	3	True				
ANR	369771	Identifier	BP_VAR_IS		369039	0					
ANR	369772	ExpressionStatement	retval = & EG ( uninitialized_zval )	7465:6:224006:224038	369039	4	True				
ANR	369773	AssignmentExpression	retval = & EG ( uninitialized_zval )		369039	0		=			
ANR	369774	Identifier	retval		369039	0					
ANR	369775	UnaryOperationExpression	& EG ( uninitialized_zval )		369039	1					
ANR	369776	UnaryOperator	&		369039	0					
ANR	369777	CallExpression	EG ( uninitialized_zval )		369039	1					
ANR	369778	Callee	EG		369039	0					
ANR	369779	Identifier	EG		369039	0					
ANR	369780	ArgumentList	uninitialized_zval		369039	1					
ANR	369781	Argument	uninitialized_zval		369039	0					
ANR	369782	Identifier	uninitialized_zval		369039	0					
ANR	369783	BreakStatement	break ;	7466:6:224046:224051	369039	5	True				
ANR	369784	Label	case BP_VAR_RW :	7467:5:224058:224072	369039	6	True				
ANR	369785	Identifier	BP_VAR_RW		369039	0					
ANR	369786	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	7468:6:224080:224141	369039	7	True				
ANR	369787	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		369039	0					
ANR	369788	Callee	zend_error		369039	0					
ANR	369789	Identifier	zend_error		369039	0					
ANR	369790	ArgumentList	E_NOTICE		369039	1					
ANR	369791	Argument	E_NOTICE		369039	0					
ANR	369792	Identifier	E_NOTICE		369039	0					
ANR	369793	Argument	"""Undefined variable: %s"""		369039	1					
ANR	369794	PrimaryExpression	"""Undefined variable: %s"""		369039	0					
ANR	369795	Argument	ZSTR_VAL ( name )		369039	2					
ANR	369796	CallExpression	ZSTR_VAL ( name )		369039	0					
ANR	369797	Callee	ZSTR_VAL		369039	0					
ANR	369798	Identifier	ZSTR_VAL		369039	0					
ANR	369799	ArgumentList	name		369039	1					
ANR	369800	Argument	name		369039	0					
ANR	369801	Identifier	name		369039	0					
ANR	369802	Label	case BP_VAR_W :	7470:5:224188:224201	369039	8	True				
ANR	369803	Identifier	BP_VAR_W		369039	0					
ANR	369804	ExpressionStatement	ZVAL_NULL ( retval )	7471:6:224209:224226	369039	9	True				
ANR	369805	CallExpression	ZVAL_NULL ( retval )		369039	0					
ANR	369806	Callee	ZVAL_NULL		369039	0					
ANR	369807	Identifier	ZVAL_NULL		369039	0					
ANR	369808	ArgumentList	retval		369039	1					
ANR	369809	Argument	retval		369039	0					
ANR	369810	Identifier	retval		369039	0					
ANR	369811	BreakStatement	break ;	7472:6:224234:224239	369039	10	True				
ANR	369812	Statement	EMPTY_SWITCH_DEFAULT_CASE	7473:5:224246:224270	369039	11	True				
ANR	369813	Statement	(	7473:30:224271:224271	369039	12	True				
ANR	369814	Statement	)	7473:31:224272:224272	369039	13	True				
ANR	369815	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		369039	3					
ANR	369816	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	7477:6:224295:224362	369039	0	True				
ANR	369817	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		369039	0		==			
ANR	369818	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		369039	0		&			
ANR	369819	PtrMemberAccess	opline -> extended_value		369039	0					
ANR	369820	Identifier	opline		369039	0					
ANR	369821	Identifier	extended_value		369039	1					
ANR	369822	Identifier	ZEND_FETCH_TYPE_MASK		369039	1					
ANR	369823	Identifier	ZEND_FETCH_STATIC		369039	1					
ANR	369824	CompoundStatement		120:76:3827:3827	369039	1					
ANR	369825	IfStatement	if ( Z_CONSTANT_P ( retval ) )		369039	0					
ANR	369826	Condition	Z_CONSTANT_P ( retval )	7478:7:224374:224393	369039	0	True				
ANR	369827	CallExpression	Z_CONSTANT_P ( retval )		369039	0					
ANR	369828	Callee	Z_CONSTANT_P		369039	0					
ANR	369829	Identifier	Z_CONSTANT_P		369039	0					
ANR	369830	ArgumentList	retval		369039	1					
ANR	369831	Argument	retval		369039	0					
ANR	369832	Identifier	retval		369039	0					
ANR	369833	CompoundStatement		121:29:3858:3858	369039	1					
ANR	369834	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		369039	0					
ANR	369835	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	7479:8:224406:224468	369039	0	True				
ANR	369836	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		369039	0					
ANR	369837	Callee	UNEXPECTED		369039	0					
ANR	369838	Identifier	UNEXPECTED		369039	0					
ANR	369839	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		369039	1					
ANR	369840	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		369039	0					
ANR	369841	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		369039	0		!=			
ANR	369842	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		369039	0					
ANR	369843	Callee	zval_update_constant_ex		369039	0					
ANR	369844	Identifier	zval_update_constant_ex		369039	0					
ANR	369845	ArgumentList	retval		369039	1					
ANR	369846	Argument	retval		369039	0					
ANR	369847	Identifier	retval		369039	0					
ANR	369848	Argument	1		369039	1					
ANR	369849	PrimaryExpression	1		369039	0					
ANR	369850	Argument	NULL		369039	2					
ANR	369851	Identifier	NULL		369039	0					
ANR	369852	Identifier	SUCCESS		369039	1					
ANR	369853	CompoundStatement		122:73:3933:3933	369039	1					
ANR	369854	ExpressionStatement	HANDLE_EXCEPTION ( )	7481:5:224479:224497	369039	0	True				
ANR	369855	CallExpression	HANDLE_EXCEPTION ( )		369039	0					
ANR	369856	Callee	HANDLE_EXCEPTION		369039	0					
ANR	369857	Identifier	HANDLE_EXCEPTION		369039	0					
ANR	369858	ArgumentList			369039	1					
ANR	369859	ElseStatement	else		369039	0					
ANR	369860	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		369039	0					
ANR	369861	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	7484:13:224523:224595	369039	0	True				
ANR	369862	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		369039	0		!=			
ANR	369863	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		369039	0		&			
ANR	369864	PtrMemberAccess	opline -> extended_value		369039	0					
ANR	369865	Identifier	opline		369039	0					
ANR	369866	Identifier	extended_value		369039	1					
ANR	369867	Identifier	ZEND_FETCH_TYPE_MASK		369039	1					
ANR	369868	Identifier	ZEND_FETCH_GLOBAL_LOCK		369039	1					
ANR	369869	CompoundStatement		127:88:4060:4060	369039	1					
ANR	369870	IfStatement	if ( IS_CONST != IS_CONST )		369039	8					
ANR	369871	Condition	IS_CONST != IS_CONST	7489:5:224614:224633	369039	0	True				
ANR	369872	EqualityExpression	IS_CONST != IS_CONST		369039	0		!=			
ANR	369873	Identifier	IS_CONST		369039	0					
ANR	369874	Identifier	IS_CONST		369039	1					
ANR	369875	CompoundStatement		132:27:4098:4098	369039	1					
ANR	369876	ExpressionStatement	zend_string_release ( name )	7490:2:224640:224665	369039	0	True				
ANR	369877	CallExpression	zend_string_release ( name )		369039	0					
ANR	369878	Callee	zend_string_release		369039	0					
ANR	369879	Identifier	zend_string_release		369039	0					
ANR	369880	ArgumentList	name		369039	1					
ANR	369881	Argument	name		369039	0					
ANR	369882	Identifier	name		369039	0					
ANR	369883	Label	fetch_var_return :	7493:0:224671:224687	369039	9	True				
ANR	369884	Identifier	fetch_var_return		369039	0					
ANR	369885	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	7494:1:224690:224717	369039	10	True				
ANR	369886	CallExpression	ZEND_ASSERT ( retval != NULL )		369039	0					
ANR	369887	Callee	ZEND_ASSERT		369039	0					
ANR	369888	Identifier	ZEND_ASSERT		369039	0					
ANR	369889	ArgumentList	retval != NULL		369039	1					
ANR	369890	Argument	retval != NULL		369039	0					
ANR	369891	EqualityExpression	retval != NULL		369039	0		!=			
ANR	369892	Identifier	retval		369039	0					
ANR	369893	Identifier	NULL		369039	1					
ANR	369894	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		369039	11					
ANR	369895	Condition	type == BP_VAR_R || type == BP_VAR_IS	7495:5:224724:224760	369039	0	True				
ANR	369896	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		369039	0		||			
ANR	369897	EqualityExpression	type == BP_VAR_R		369039	0		==			
ANR	369898	Identifier	type		369039	0					
ANR	369899	Identifier	BP_VAR_R		369039	1					
ANR	369900	EqualityExpression	type == BP_VAR_IS		369039	1		==			
ANR	369901	Identifier	type		369039	0					
ANR	369902	Identifier	BP_VAR_IS		369039	1					
ANR	369903	CompoundStatement		138:44:4225:4225	369039	1					
ANR	369904	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		369039	0					
ANR	369905	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	7496:30:224795:224840	369039	0	True				
ANR	369906	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		369039	0		&&			
ANR	369907	CallExpression	Z_ISREF_P ( retval )		369039	0					
ANR	369908	Callee	Z_ISREF_P		369039	0					
ANR	369909	Identifier	Z_ISREF_P		369039	0					
ANR	369910	ArgumentList	retval		369039	1					
ANR	369911	Argument	retval		369039	0					
ANR	369912	Identifier	retval		369039	0					
ANR	369913	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		369039	1		==			
ANR	369914	CallExpression	Z_REFCOUNT_P ( retval )		369039	0					
ANR	369915	Callee	Z_REFCOUNT_P		369039	0					
ANR	369916	Identifier	Z_REFCOUNT_P		369039	0					
ANR	369917	ArgumentList	retval		369039	1					
ANR	369918	Argument	retval		369039	0					
ANR	369919	Identifier	retval		369039	0					
ANR	369920	PrimaryExpression	1		369039	1					
ANR	369921	CompoundStatement		139:78:4305:4305	369039	1					
ANR	369922	ExpressionStatement	ZVAL_UNREF ( retval )	7497:3:224848:224866	369039	0	True				
ANR	369923	CallExpression	ZVAL_UNREF ( retval )		369039	0					
ANR	369924	Callee	ZVAL_UNREF		369039	0					
ANR	369925	Identifier	ZVAL_UNREF		369039	0					
ANR	369926	ArgumentList	retval		369039	1					
ANR	369927	Argument	retval		369039	0					
ANR	369928	Identifier	retval		369039	0					
ANR	369929	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	7499:2:224874:224919	369039	1	True				
ANR	369930	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		369039	0					
ANR	369931	Callee	ZVAL_COPY		369039	0					
ANR	369932	Identifier	ZVAL_COPY		369039	0					
ANR	369933	ArgumentList	EX_VAR ( opline -> result . var )		369039	1					
ANR	369934	Argument	EX_VAR ( opline -> result . var )		369039	0					
ANR	369935	CallExpression	EX_VAR ( opline -> result . var )		369039	0					
ANR	369936	Callee	EX_VAR		369039	0					
ANR	369937	Identifier	EX_VAR		369039	0					
ANR	369938	ArgumentList	opline -> result . var		369039	1					
ANR	369939	Argument	opline -> result . var		369039	0					
ANR	369940	MemberAccess	opline -> result . var		369039	0					
ANR	369941	PtrMemberAccess	opline -> result		369039	0					
ANR	369942	Identifier	opline		369039	0					
ANR	369943	Identifier	result		369039	1					
ANR	369944	Identifier	var		369039	1					
ANR	369945	Argument	retval		369039	1					
ANR	369946	Identifier	retval		369039	0					
ANR	369947	ElseStatement	else		369039	0					
ANR	369948	CompoundStatement		143:8:4391:4391	369039	0					
ANR	369949	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	7501:2:224933:224982	369039	0	True				
ANR	369950	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		369039	0					
ANR	369951	Callee	ZVAL_INDIRECT		369039	0					
ANR	369952	Identifier	ZVAL_INDIRECT		369039	0					
ANR	369953	ArgumentList	EX_VAR ( opline -> result . var )		369039	1					
ANR	369954	Argument	EX_VAR ( opline -> result . var )		369039	0					
ANR	369955	CallExpression	EX_VAR ( opline -> result . var )		369039	0					
ANR	369956	Callee	EX_VAR		369039	0					
ANR	369957	Identifier	EX_VAR		369039	0					
ANR	369958	ArgumentList	opline -> result . var		369039	1					
ANR	369959	Argument	opline -> result . var		369039	0					
ANR	369960	MemberAccess	opline -> result . var		369039	0					
ANR	369961	PtrMemberAccess	opline -> result		369039	0					
ANR	369962	Identifier	opline		369039	0					
ANR	369963	Identifier	result		369039	1					
ANR	369964	Identifier	var		369039	1					
ANR	369965	Argument	retval		369039	1					
ANR	369966	Identifier	retval		369039	0					
ANR	369967	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	7503:1:224988:225025	369039	12	True				
ANR	369968	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		369039	0					
ANR	369969	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		369039	0					
ANR	369970	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		369039	0					
ANR	369971	ArgumentList			369039	1					
ANR	369972	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		369039	1					
ANR	369973	Identifier	zend_fetch_var_address_helper_SPEC_CONST_UNUSED		369039	2					
ANR	369974	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		369039	3					
ANR	369975	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	7357:93:220499:220534	369039	0	True				
ANR	369976	ParameterType	int type		369039	0					
ANR	369977	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		369039	1					
ANR	369978	CFGEntryNode	ENTRY		369039		True				
ANR	369979	CFGExitNode	EXIT		369039		True				
ANR	369980	Symbol	ZEND_FETCH_CLASS_DEFAULT		369039						
ANR	369981	Symbol	exception		369039						
ANR	369982	Symbol	zend_get_target_symbol_table		369039						
ANR	369983	Symbol	opline -> op2 . var		369039						
ANR	369984	Symbol	IS_CV		369039						
ANR	369985	Symbol	Z_CONSTANT_P		369039						
ANR	369986	Symbol	* ce		369039						
ANR	369987	Symbol	type		369039						
ANR	369988	Symbol	Z_REFCOUNT_P		369039						
ANR	369989	Symbol	execute_data		369039						
ANR	369990	Symbol	opline -> extended_value		369039						
ANR	369991	Symbol	opline -> result		369039						
ANR	369992	Symbol	zend_std_get_static_property		369039						
ANR	369993	Symbol	zend_hash_find		369039						
ANR	369994	Symbol	opline		369039						
ANR	369995	Symbol	Z_CE_P		369039						
ANR	369996	Symbol	target_symbol_table		369039						
ANR	369997	Symbol	IS_STRING		369039						
ANR	369998	Symbol	ce -> name		369039						
ANR	369999	Symbol	zend_hash_update		369039						
ANR	370000	Symbol	BP_VAR_IS		369039						
ANR	370001	Symbol	IS_UNDEF		369039						
ANR	370002	Symbol	BP_VAR_R		369039						
ANR	370003	Symbol	IS_CONST		369039						
ANR	370004	Symbol	EG		369039						
ANR	370005	Symbol	NULL		369039						
ANR	370006	Symbol	EX_CONSTANT		369039						
ANR	370007	Symbol	Z_CACHE_SLOT_P		369039						
ANR	370008	Symbol	CE_STATIC_MEMBERS		369039						
ANR	370009	Symbol	E_NOTICE		369039						
ANR	370010	Symbol	varname		369039						
ANR	370011	Symbol	retval		369039						
ANR	370012	Symbol	name		369039						
ANR	370013	Symbol	EX_VAR		369039						
ANR	370014	Symbol	zend_fetch_class_by_name		369039						
ANR	370015	Symbol	Z_STR_P		369039						
ANR	370016	Symbol	Z_ISREF_P		369039						
ANR	370017	Symbol	IS_INDIRECT		369039						
ANR	370018	Symbol	opline -> op1		369039						
ANR	370019	Symbol	CACHED_PTR		369039						
ANR	370020	Symbol	opline -> op2		369039						
ANR	370021	Symbol	Z_INDIRECT_P		369039						
ANR	370022	Symbol	& EG		369039						
ANR	370023	Symbol	UNEXPECTED		369039						
ANR	370024	Symbol	ZEND_FETCH_CLASS_EXCEPTION		369039						
ANR	370025	Symbol	ZEND_FETCH_STATIC		369039						
ANR	370026	Symbol	uninitialized_zval		369039						
ANR	370027	Symbol	ce		369039						
ANR	370028	Symbol	SUCCESS		369039						
ANR	370029	Symbol	zval_get_string		369039						
ANR	370030	Symbol	ZEND_FETCH_TYPE_MASK		369039						
ANR	370031	Symbol	zend_hash_add_new		369039						
ANR	370032	Symbol	Z_TYPE_P		369039						
ANR	370033	Symbol	CACHED_POLYMORPHIC_PTR		369039						
ANR	370034	Symbol	ZSTR_VAL		369039						
ANR	370035	Symbol	* opline		369039						
ANR	370036	Symbol	ZEND_FETCH_GLOBAL_LOCK		369039						
ANR	370037	Symbol	zval_update_constant_ex		369039						
ANR	370038	Symbol	EXPECTED		369039						
ANR	370039	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		369039						
ANR	370040	Symbol	opline -> result . var		369039						
ANR	370041	Symbol	IS_UNUSED		369039						
ANR	370042	DeclStmt									
ANR	370043	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370044	DeclStmt									
ANR	370045	Decl							zend_free_op	zend_free_op	free_op1
ANR	370046	DeclStmt									
ANR	370047	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	370048	DeclStmt									
ANR	370049	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370050	DeclStmt									
ANR	370051	Decl							zend_object	zend_object *	object
ANR	370052	DeclStmt									
ANR	370053	Decl							zend_function	zend_function *	fbc
ANR	370054	DeclStmt									
ANR	370055	Decl							zend_execute_data	zend_execute_data *	call
ANR	370056	DeclStmt									
ANR	370057	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	370058	DeclStmt									
ANR	370059	Decl							zval	zval *	retval_ref
ANR	370060	Decl							zval	zval *	retval_ptr
ANR	370061	DeclStmt									
ANR	370062	Decl							zend_arg_info	zend_arg_info *	ret_info
ANR	370063	DeclStmt									
ANR	370064	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	370065	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	370066	DeclStmt									
ANR	370067	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370068	DeclStmt									
ANR	370069	Decl							zval	zval *	offset
ANR	370070	DeclStmt									
ANR	370071	Decl							zend_string	zend_string *	str
ANR	370072	DeclStmt									
ANR	370073	Decl							zend_ulong	zend_ulong	hval
ANR	370074	DeclStmt									
ANR	370075	Decl							zval	zval *	array
ANR	370076	DeclStmt									
ANR	370077	Decl							uint32_t	uint32_t	size
ANR	370078	DeclStmt									
ANR	370079	Decl							USE_OPLINE	USE_OPLINE	array
ANR	370080	DeclStmt									
ANR	370081	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	370082	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	370083	DeclStmt									
ANR	370084	Decl							HashTable	HashTable *	target_symbol_table
ANR	370085	DeclStmt									
ANR	370086	Decl							zval	zval *	var
ANR	370087	DeclStmt									
ANR	370088	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	370089	DeclStmt									
ANR	370090	Decl							zval	zval *	z
ANR	370091	DeclStmt									
ANR	370092	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370093	DeclStmt									
ANR	370094	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	370095	DeclStmt									
ANR	370096	Decl							int	int	result
ANR	370097	DeclStmt									
ANR	370098	Decl							zval	zval	tmp
ANR	370099	Decl							zval	zval *	varname
ANR	370100	DeclStmt									
ANR	370101	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370102	DeclStmt									
ANR	370103	Decl							HashTable	HashTable *	target_symbol_table
ANR	370104	DeclStmt									
ANR	370105	Decl							USE_OPLINE zval	USE_OPLINE zval *	zfunc
ANR	370106	DeclStmt									
ANR	370107	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370108	DeclStmt									
ANR	370109	Decl							zval	zval *	value
ANR	370110	DeclStmt									
ANR	370111	Decl							zval	zval *	value_ptr
ANR	370112	DeclStmt									
ANR	370113	Decl							zval	zval *	value
ANR	370114	DeclStmt									
ANR	370115	Decl							zval	zval *	key
ANR	370116	DeclStmt									
ANR	370117	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370118	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370119	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370120	DeclStmt									
ANR	370121	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370122	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370123	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370124	DeclStmt									
ANR	370125	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370126	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370127	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370128	DeclStmt									
ANR	370129	Decl							zend_long	zend_long	overflow
ANR	370130	DeclStmt									
ANR	370131	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370132	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370133	DeclStmt									
ANR	370134	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370135	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370136	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370137	DeclStmt									
ANR	370138	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370139	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370140	DeclStmt									
ANR	370141	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370142	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370143	DeclStmt									
ANR	370144	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370145	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370146	DeclStmt									
ANR	370147	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370148	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370149	DeclStmt									
ANR	370150	Decl							zend_string	zend_string *	op1_str
ANR	370151	DeclStmt									
ANR	370152	Decl							zend_string	zend_string *	op2_str
ANR	370153	DeclStmt									
ANR	370154	Decl							zend_string	zend_string *	str
ANR	370155	DeclStmt									
ANR	370156	Decl							size_t	size_t	len
ANR	370157	DeclStmt									
ANR	370158	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370159	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370160	DeclStmt									
ANR	370161	Decl							int	int	result
ANR	370162	DeclStmt									
ANR	370163	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370164	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370165	DeclStmt									
ANR	370166	Decl							int	int	result
ANR	370167	DeclStmt									
ANR	370168	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370169	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370170	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370171	DeclStmt									
ANR	370172	Decl							int	int	result
ANR	370173	DeclStmt									
ANR	370174	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370175	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370176	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370177	DeclStmt									
ANR	370178	Decl							int	int	result
ANR	370179	DeclStmt									
ANR	370180	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370181	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370182	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370183	DeclStmt									
ANR	370184	Decl							int	int	result
ANR	370185	DeclStmt									
ANR	370186	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370187	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370188	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370189	DeclStmt									
ANR	370190	Decl							int	int	result
ANR	370191	DeclStmt									
ANR	370192	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370193	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370194	DeclStmt									
ANR	370195	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370196	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370197	DeclStmt									
ANR	370198	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370199	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370200	DeclStmt									
ANR	370201	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370202	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370203	DeclStmt									
ANR	370204	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370205	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370206	DeclStmt									
ANR	370207	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370208	DeclStmt									
ANR	370209	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370210	DeclStmt									
ANR	370211	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370212	DeclStmt									
ANR	370213	Decl							zend_free_op	zend_free_op	free_op1
ANR	370214	DeclStmt									
ANR	370215	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370216	DeclStmt									
ANR	370217	Decl							zval	zval *	offset
ANR	370218	DeclStmt									
ANR	370219	Decl							zend_object	zend_object *	zobj
ANR	370220	DeclStmt									
ANR	370221	Decl							zval	zval *	retval
ANR	370222	DeclStmt									
ANR	370223	Decl							uint32_t	uint32_t	prop_offset
ANR	370224	DeclStmt									
ANR	370225	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370226	DeclStmt									
ANR	370227	Decl							zval	zval *	offset
ANR	370228	DeclStmt									
ANR	370229	Decl							zend_object	zend_object *	zobj
ANR	370230	DeclStmt									
ANR	370231	Decl							zval	zval *	retval
ANR	370232	DeclStmt									
ANR	370233	Decl							uint32_t	uint32_t	prop_offset
ANR	370234	DeclStmt									
ANR	370235	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370236	DeclStmt									
ANR	370237	Decl							zend_free_op	zend_free_op	free_op1
ANR	370238	DeclStmt									
ANR	370239	Decl							zval	zval *	property
ANR	370240	DeclStmt									
ANR	370241	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370242	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370243	DeclStmt									
ANR	370244	Decl							zend_string	zend_string *	op1_str
ANR	370245	Decl							zend_string	zend_string *	op2_str
ANR	370246	Decl							zend_string	zend_string *	str
ANR	370247	DeclStmt									
ANR	370248	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	370249	DeclStmt									
ANR	370250	Decl							zval	zval *	object
ANR	370251	DeclStmt									
ANR	370252	Decl							zend_function	zend_function *	fbc
ANR	370253	DeclStmt									
ANR	370254	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	370255	DeclStmt									
ANR	370256	Decl							zend_object	zend_object *	obj
ANR	370257	DeclStmt									
ANR	370258	Decl							zend_execute_data	zend_execute_data *	call
ANR	370259	DeclStmt									
ANR	370260	Decl							uint32_t	uint32_t	call_info
ANR	370261	DeclStmt									
ANR	370262	Decl							zend_object	zend_object *	orig_obj
ANR	370263	DeclStmt									
ANR	370264	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	370265	DeclStmt									
ANR	370266	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370267	DeclStmt									
ANR	370268	Decl							zend_object	zend_object *	object
ANR	370269	DeclStmt									
ANR	370270	Decl							zend_function	zend_function *	fbc
ANR	370271	DeclStmt									
ANR	370272	Decl							zend_execute_data	zend_execute_data *	call
ANR	370273	DeclStmt									
ANR	370274	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	370275	DeclStmt									
ANR	370276	Decl							zend_fcall_info_cache	zend_fcall_info_cache	fcc
ANR	370277	DeclStmt									
ANR	370278	Decl							char	char *	error
ANR	370279	DeclStmt									
ANR	370280	Decl							zend_function	zend_function *	func
ANR	370281	DeclStmt									
ANR	370282	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	370283	DeclStmt									
ANR	370284	Decl							zend_object	zend_object *	object
ANR	370285	DeclStmt									
ANR	370286	Decl							zend_execute_data	zend_execute_data *	call
ANR	370287	DeclStmt									
ANR	370288	Decl							uint32_t	uint32_t	call_info
ANR	370289	DeclStmt									
ANR	370290	Decl							USE_OPLINE zend_class_entry	USE_OPLINE zend_class_entry *	ce
ANR	370291	Decl							USE_OPLINE zend_class_entry	USE_OPLINE zend_class_entry *	catch_ce
ANR	370292	DeclStmt									
ANR	370293	Decl							zend_object	zend_object *	exception
ANR	370294	DeclStmt									
ANR	370295	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	370296	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	370297	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	370298	DeclStmt									
ANR	370299	Decl							int	int	result
ANR	370300	DeclStmt									
ANR	370301	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	370302	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	370303	DeclStmt									
ANR	370304	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370305	DeclStmt									
ANR	370306	Decl							zval	zval *	offset
ANR	370307	DeclStmt									
ANR	370308	Decl							zend_string	zend_string *	str
ANR	370309	DeclStmt									
ANR	370310	Decl							zend_ulong	zend_ulong	hval
ANR	370311	DeclStmt									
ANR	370312	Decl							zval	zval *	array
ANR	370313	DeclStmt									
ANR	370314	Decl							uint32_t	uint32_t	size
ANR	370315	DeclStmt									
ANR	370316	Decl							USE_OPLINE	USE_OPLINE	array
ANR	370317	DeclStmt									
ANR	370318	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370319	DeclStmt									
ANR	370320	Decl							int	int	result
ANR	370321	DeclStmt									
ANR	370322	Decl							zend_ulong	zend_ulong	hval
ANR	370323	DeclStmt									
ANR	370324	Decl							zval	zval *	offset
ANR	370325	DeclStmt									
ANR	370326	Decl							HashTable	HashTable *	ht
ANR	370327	DeclStmt									
ANR	370328	Decl							zval	zval *	value
ANR	370329	DeclStmt									
ANR	370330	Decl							zend_string	zend_string *	str
ANR	370331	DeclStmt									
ANR	370332	Decl							zend_long	zend_long	lval
ANR	370333	DeclStmt									
ANR	370334	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370335	DeclStmt									
ANR	370336	Decl							int	int	result
ANR	370337	DeclStmt									
ANR	370338	Decl							zval	zval *	offset
ANR	370339	DeclStmt									
ANR	370340	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370341	DeclStmt									
ANR	370342	Decl							zval	zval *	value
ANR	370343	DeclStmt									
ANR	370344	Decl							zval	zval *	value_ptr
ANR	370345	DeclStmt									
ANR	370346	Decl							zval	zval *	value
ANR	370347	DeclStmt									
ANR	370348	Decl							zval	zval *	key
ANR	370349	DeclStmt									
ANR	370350	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370351	DeclStmt									
ANR	370352	Decl							zval	zval *	op1
ANR	370353	Decl							zval	zval *	op2
ANR	370354	Decl							zval	zval *	result
ANR	370355	DeclStmt									
ANR	370356	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370357	DeclStmt									
ANR	370358	Decl							zval	zval *	op1
ANR	370359	Decl							zval	zval *	op2
ANR	370360	Decl							zval	zval *	result
ANR	370361	DeclStmt									
ANR	370362	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370363	DeclStmt									
ANR	370364	Decl							zval	zval *	op1
ANR	370365	Decl							zval	zval *	op2
ANR	370366	Decl							zval	zval *	result
ANR	370367	DeclStmt									
ANR	370368	Decl							zend_long	zend_long	overflow
ANR	370369	DeclStmt									
ANR	370370	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370371	DeclStmt									
ANR	370372	Decl							zval	zval *	op1
ANR	370373	Decl							zval	zval *	op2
ANR	370374	DeclStmt									
ANR	370375	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370376	DeclStmt									
ANR	370377	Decl							zval	zval *	op1
ANR	370378	Decl							zval	zval *	op2
ANR	370379	Decl							zval	zval *	result
ANR	370380	DeclStmt									
ANR	370381	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370382	DeclStmt									
ANR	370383	Decl							zval	zval *	op1
ANR	370384	Decl							zval	zval *	op2
ANR	370385	DeclStmt									
ANR	370386	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370387	DeclStmt									
ANR	370388	Decl							zval	zval *	op1
ANR	370389	Decl							zval	zval *	op2
ANR	370390	DeclStmt									
ANR	370391	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370392	DeclStmt									
ANR	370393	Decl							zval	zval *	op1
ANR	370394	Decl							zval	zval *	op2
ANR	370395	DeclStmt									
ANR	370396	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370397	DeclStmt									
ANR	370398	Decl							zval	zval *	op1
ANR	370399	Decl							zval	zval *	op2
ANR	370400	DeclStmt									
ANR	370401	Decl							zend_string	zend_string *	op1_str
ANR	370402	DeclStmt									
ANR	370403	Decl							zend_string	zend_string *	op2_str
ANR	370404	DeclStmt									
ANR	370405	Decl							zend_string	zend_string *	str
ANR	370406	DeclStmt									
ANR	370407	Decl							size_t	size_t	len
ANR	370408	DeclStmt									
ANR	370409	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370410	DeclStmt									
ANR	370411	Decl							zval	zval *	op1
ANR	370412	Decl							zval	zval *	op2
ANR	370413	Decl							zval	zval *	result
ANR	370414	DeclStmt									
ANR	370415	Decl							int	int	result
ANR	370416	DeclStmt									
ANR	370417	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370418	DeclStmt									
ANR	370419	Decl							zval	zval *	op1
ANR	370420	Decl							zval	zval *	op2
ANR	370421	Decl							zval	zval *	result
ANR	370422	DeclStmt									
ANR	370423	Decl							int	int	result
ANR	370424	DeclStmt									
ANR	370425	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370426	DeclStmt									
ANR	370427	Decl							zval	zval *	op1
ANR	370428	Decl							zval	zval *	op2
ANR	370429	Decl							zval	zval *	result
ANR	370430	DeclStmt									
ANR	370431	Decl							int	int	result
ANR	370432	DeclStmt									
ANR	370433	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370434	DeclStmt									
ANR	370435	Decl							zval	zval *	op1
ANR	370436	Decl							zval	zval *	op2
ANR	370437	Decl							zval	zval *	result
ANR	370438	DeclStmt									
ANR	370439	Decl							int	int	result
ANR	370440	DeclStmt									
ANR	370441	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370442	DeclStmt									
ANR	370443	Decl							zval	zval *	op1
ANR	370444	Decl							zval	zval *	op2
ANR	370445	DeclStmt									
ANR	370446	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370447	DeclStmt									
ANR	370448	Decl							zval	zval *	op1
ANR	370449	Decl							zval	zval *	op2
ANR	370450	DeclStmt									
ANR	370451	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370452	DeclStmt									
ANR	370453	Decl							zval	zval *	op1
ANR	370454	Decl							zval	zval *	op2
ANR	370455	DeclStmt									
ANR	370456	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370457	DeclStmt									
ANR	370458	Decl							zval	zval *	op1
ANR	370459	Decl							zval	zval *	op2
ANR	370460	DeclStmt									
ANR	370461	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370462	DeclStmt									
ANR	370463	Decl							zval	zval *	op1
ANR	370464	Decl							zval	zval *	op2
ANR	370465	DeclStmt									
ANR	370466	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370467	DeclStmt									
ANR	370468	Decl							zval	zval *	container
ANR	370469	DeclStmt									
ANR	370470	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370471	DeclStmt									
ANR	370472	Decl							zval	zval *	container
ANR	370473	DeclStmt									
ANR	370474	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370475	DeclStmt									
ANR	370476	Decl							zend_free_op	zend_free_op	free_op1
ANR	370477	Decl							zend_free_op	zend_free_op	free_op2
ANR	370478	DeclStmt									
ANR	370479	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370480	DeclStmt									
ANR	370481	Decl							zend_free_op	zend_free_op	free_op2
ANR	370482	DeclStmt									
ANR	370483	Decl							zval	zval *	offset
ANR	370484	DeclStmt									
ANR	370485	Decl							zend_object	zend_object *	zobj
ANR	370486	DeclStmt									
ANR	370487	Decl							zval	zval *	retval
ANR	370488	DeclStmt									
ANR	370489	Decl							uint32_t	uint32_t	prop_offset
ANR	370490	DeclStmt									
ANR	370491	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370492	DeclStmt									
ANR	370493	Decl							zend_free_op	zend_free_op	free_op2
ANR	370494	DeclStmt									
ANR	370495	Decl							zval	zval *	offset
ANR	370496	DeclStmt									
ANR	370497	Decl							zend_object	zend_object *	zobj
ANR	370498	DeclStmt									
ANR	370499	Decl							zval	zval *	retval
ANR	370500	DeclStmt									
ANR	370501	Decl							uint32_t	uint32_t	prop_offset
ANR	370502	DeclStmt									
ANR	370503	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370504	DeclStmt									
ANR	370505	Decl							zend_free_op	zend_free_op	free_op1
ANR	370506	Decl							zend_free_op	zend_free_op	free_op2
ANR	370507	DeclStmt									
ANR	370508	Decl							zval	zval *	property
ANR	370509	DeclStmt									
ANR	370510	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370511	DeclStmt									
ANR	370512	Decl							zval	zval *	op1
ANR	370513	Decl							zval	zval *	op2
ANR	370514	DeclStmt									
ANR	370515	Decl							zend_string	zend_string *	op1_str
ANR	370516	Decl							zend_string	zend_string *	op2_str
ANR	370517	Decl							zend_string	zend_string *	str
ANR	370518	DeclStmt									
ANR	370519	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	370520	DeclStmt									
ANR	370521	Decl							zend_free_op	zend_free_op	free_op2
ANR	370522	DeclStmt									
ANR	370523	Decl							zval	zval *	object
ANR	370524	DeclStmt									
ANR	370525	Decl							zend_function	zend_function *	fbc
ANR	370526	DeclStmt									
ANR	370527	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	370528	DeclStmt									
ANR	370529	Decl							zend_object	zend_object *	obj
ANR	370530	DeclStmt									
ANR	370531	Decl							zend_execute_data	zend_execute_data *	call
ANR	370532	DeclStmt									
ANR	370533	Decl							uint32_t	uint32_t	call_info
ANR	370534	DeclStmt									
ANR	370535	Decl							zend_object	zend_object *	orig_obj
ANR	370536	DeclStmt									
ANR	370537	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	370538	DeclStmt									
ANR	370539	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370540	DeclStmt									
ANR	370541	Decl							zend_object	zend_object *	object
ANR	370542	DeclStmt									
ANR	370543	Decl							zend_function	zend_function *	fbc
ANR	370544	DeclStmt									
ANR	370545	Decl							zend_execute_data	zend_execute_data *	call
ANR	370546	DeclStmt									
ANR	370547	Decl							zend_free_op	zend_free_op	free_op2
ANR	370548	DeclStmt									
ANR	370549	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370550	DeclStmt									
ANR	370551	Decl							zval	zval *	function_name
ANR	370552	DeclStmt									
ANR	370553	Decl							zend_fcall_info_cache	zend_fcall_info_cache	fcc
ANR	370554	DeclStmt									
ANR	370555	Decl							char	char *	error
ANR	370556	DeclStmt									
ANR	370557	Decl							zend_function	zend_function *	func
ANR	370558	DeclStmt									
ANR	370559	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	370560	DeclStmt									
ANR	370561	Decl							zend_object	zend_object *	object
ANR	370562	DeclStmt									
ANR	370563	Decl							zend_execute_data	zend_execute_data *	call
ANR	370564	DeclStmt									
ANR	370565	Decl							uint32_t	uint32_t	call_info
ANR	370566	DeclStmt									
ANR	370567	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370568	DeclStmt									
ANR	370569	Decl							zval	zval *	op1
ANR	370570	Decl							zval	zval *	op2
ANR	370571	Decl							zval	zval *	result
ANR	370572	DeclStmt									
ANR	370573	Decl							int	int	result
ANR	370574	DeclStmt									
ANR	370575	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	370576	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	370577	DeclStmt									
ANR	370578	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370579	DeclStmt									
ANR	370580	Decl							zend_free_op	zend_free_op	free_op2
ANR	370581	DeclStmt									
ANR	370582	Decl							zval	zval *	offset
ANR	370583	DeclStmt									
ANR	370584	Decl							zend_string	zend_string *	str
ANR	370585	DeclStmt									
ANR	370586	Decl							zend_ulong	zend_ulong	hval
ANR	370587	DeclStmt									
ANR	370588	Decl							zval	zval *	array
ANR	370589	DeclStmt									
ANR	370590	Decl							uint32_t	uint32_t	size
ANR	370591	DeclStmt									
ANR	370592	Decl							USE_OPLINE	USE_OPLINE	array
ANR	370593	DeclStmt									
ANR	370594	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370595	DeclStmt									
ANR	370596	Decl							zval	zval *	container
ANR	370597	DeclStmt									
ANR	370598	Decl							int	int	result
ANR	370599	DeclStmt									
ANR	370600	Decl							zend_ulong	zend_ulong	hval
ANR	370601	DeclStmt									
ANR	370602	Decl							zval	zval *	offset
ANR	370603	DeclStmt									
ANR	370604	Decl							HashTable	HashTable *	ht
ANR	370605	DeclStmt									
ANR	370606	Decl							zval	zval *	value
ANR	370607	DeclStmt									
ANR	370608	Decl							zend_string	zend_string *	str
ANR	370609	DeclStmt									
ANR	370610	Decl							zend_long	zend_long	lval
ANR	370611	DeclStmt									
ANR	370612	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370613	DeclStmt									
ANR	370614	Decl							zval	zval *	container
ANR	370615	DeclStmt									
ANR	370616	Decl							int	int	result
ANR	370617	DeclStmt									
ANR	370618	Decl							zval	zval *	offset
ANR	370619	DeclStmt									
ANR	370620	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	370621	DeclStmt									
ANR	370622	Decl							zend_free_op	zend_free_op	free_op1
ANR	370623	DeclStmt									
ANR	370624	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370625	DeclStmt									
ANR	370626	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	370627	DeclStmt									
ANR	370628	Decl							zend_free_op	zend_free_op	free_op1
ANR	370629	DeclStmt									
ANR	370630	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval
ANR	370631	DeclStmt									
ANR	370632	Decl							zend_free_op	zend_free_op	free_op1
ANR	370633	DeclStmt									
ANR	370634	Decl							zend_generator	zend_generator *	generator
ANR	370635	DeclStmt									
ANR	370636	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370637	DeclStmt									
ANR	370638	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	370639	DeclStmt									
ANR	370640	Decl							zend_free_op	zend_free_op	free_op1
ANR	370641	DeclStmt									
ANR	370642	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	370643	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	370644	DeclStmt									
ANR	370645	Decl							zend_free_op	zend_free_op	free_op1
ANR	370646	DeclStmt									
ANR	370647	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	370648	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	370649	DeclStmt									
ANR	370650	Decl							zend_free_op	zend_free_op	free_op1
ANR	370651	DeclStmt									
ANR	370652	Decl							uint32_t	uint32_t	arg_num
ANR	370653	DeclStmt									
ANR	370654	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370655	DeclStmt									
ANR	370656	Decl							zval	zval *	expr
ANR	370657	DeclStmt									
ANR	370658	Decl							zval	zval *	result
ANR	370659	DeclStmt									
ANR	370660	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370661	DeclStmt									
ANR	370662	Decl							zval	zval *	array_ptr
ANR	370663	Decl							zval	zval *	result
ANR	370664	DeclStmt									
ANR	370665	Decl							HashTable	HashTable *	fe_ht
ANR	370666	DeclStmt									
ANR	370667	Decl							HashPosition	HashPosition	pos
ANR	370668	DeclStmt									
ANR	370669	Decl							Bucket	Bucket *	p
ANR	370670	DeclStmt									
ANR	370671	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370672	DeclStmt									
ANR	370673	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	370674	DeclStmt									
ANR	370675	Decl							zend_bool	zend_bool	is_empty
ANR	370676	DeclStmt									
ANR	370677	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370678	DeclStmt									
ANR	370679	Decl							zval	zval *	array_ptr
ANR	370680	Decl							zval	zval *	array_ref
ANR	370681	DeclStmt									
ANR	370682	Decl							HashTable	HashTable *	fe_ht
ANR	370683	DeclStmt									
ANR	370684	Decl							HashPosition	HashPosition	pos
ANR	370685	DeclStmt									
ANR	370686	Decl							Bucket	Bucket *	p
ANR	370687	DeclStmt									
ANR	370688	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370689	DeclStmt									
ANR	370690	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	370691	DeclStmt									
ANR	370692	Decl							zend_bool	zend_bool	is_empty
ANR	370693	DeclStmt									
ANR	370694	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370695	DeclStmt									
ANR	370696	Decl							zval	zval *	value
ANR	370697	DeclStmt									
ANR	370698	Decl							zval	zval *	ref
ANR	370699	DeclStmt									
ANR	370700	Decl							zend_reference	zend_reference *	r
ANR	370701	DeclStmt									
ANR	370702	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370703	DeclStmt									
ANR	370704	Decl							zval	zval *	value
ANR	370705	DeclStmt									
ANR	370706	Decl							zval	zval *	ref
ANR	370707	DeclStmt									
ANR	370708	Decl							zend_reference	zend_reference *	r
ANR	370709	DeclStmt									
ANR	370710	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370711	DeclStmt									
ANR	370712	Decl							zval	zval *	value
ANR	370713	DeclStmt									
ANR	370714	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370715	DeclStmt									
ANR	370716	Decl							zval	zval *	val
ANR	370717	DeclStmt									
ANR	370718	Decl							zend_free_op	zend_free_op	free_op1
ANR	370719	DeclStmt									
ANR	370720	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370721	DeclStmt									
ANR	370722	Decl							zend_generator	zend_generator *	new_gen
ANR	370723	DeclStmt									
ANR	370724	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	370725	DeclStmt									
ANR	370726	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	370727	DeclStmt									
ANR	370728	Decl							int	int	result
ANR	370729	DeclStmt									
ANR	370730	Decl							zend_free_op	zend_free_op	free_op1
ANR	370731	DeclStmt									
ANR	370732	Decl							zend_class_entry	zend_class_entry *	ce
ANR	370733	DeclStmt									
ANR	370734	Decl							const char	const char *	type_name
ANR	370735	DeclStmt									
ANR	370736	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370737	DeclStmt									
ANR	370738	Decl							zval	zval *	op1
ANR	370739	Decl							zval	zval *	op2
ANR	370740	DeclStmt									
ANR	370741	Decl							int	int	result
ANR	370742	DeclStmt									
ANR	370743	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370744	DeclStmt									
ANR	370745	Decl							zval	zval *	op1
ANR	370746	Decl							zval	zval *	op2
ANR	370747	DeclStmt									
ANR	370748	Decl							int	int	result
ANR	370749	DeclStmt									
ANR	370750	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370751	DeclStmt									
ANR	370752	Decl							zend_free_op	zend_free_op	free_op1
ANR	370753	DeclStmt									
ANR	370754	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370755	DeclStmt									
ANR	370756	Decl							zval	zval *	container
ANR	370757	DeclStmt									
ANR	370758	Decl							zval	zval *	offset
ANR	370759	DeclStmt									
ANR	370760	Decl							zend_object	zend_object *	zobj
ANR	370761	DeclStmt									
ANR	370762	Decl							zval	zval *	retval
ANR	370763	DeclStmt									
ANR	370764	Decl							uint32_t	uint32_t	prop_offset
ANR	370765	DeclStmt									
ANR	370766	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370767	DeclStmt									
ANR	370768	Decl							zend_free_op	zend_free_op	free_op1
ANR	370769	DeclStmt									
ANR	370770	Decl							zval	zval *	property
ANR	370771	DeclStmt									
ANR	370772	Decl							USE_OPLINE zend_string	USE_OPLINE zend_string * *	rope
ANR	370773	DeclStmt									
ANR	370774	Decl							zval	zval *	var
ANR	370775	DeclStmt									
ANR	370776	Decl							USE_OPLINE zend_string	USE_OPLINE zend_string * *	rope
ANR	370777	DeclStmt									
ANR	370778	Decl							zval	zval *	var
ANR	370779	Decl							zval	zval *	ret
ANR	370780	DeclStmt									
ANR	370781	Decl							uint32_t	uint32_t	i
ANR	370782	DeclStmt									
ANR	370783	Decl							size_t	size_t	len
ANR	370784	DeclStmt									
ANR	370785	Decl							char	char *	target
ANR	370786	DeclStmt									
ANR	370787	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370788	DeclStmt									
ANR	370789	Decl							zval	zval *	expr_ptr
ANR	370790	Decl							zval	zval	new_expr
ANR	370791	DeclStmt									
ANR	370792	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370793	DeclStmt									
ANR	370794	Decl							zval	zval *	offset
ANR	370795	DeclStmt									
ANR	370796	Decl							zend_string	zend_string *	str
ANR	370797	DeclStmt									
ANR	370798	Decl							zend_ulong	zend_ulong	hval
ANR	370799	DeclStmt									
ANR	370800	Decl							zval	zval *	array
ANR	370801	DeclStmt									
ANR	370802	Decl							uint32_t	uint32_t	size
ANR	370803	DeclStmt									
ANR	370804	Decl							USE_OPLINE	USE_OPLINE	array
ANR	370805	DeclStmt									
ANR	370806	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370807	DeclStmt									
ANR	370808	Decl							zend_free_op	zend_free_op	free_op1
ANR	370809	DeclStmt									
ANR	370810	Decl							zval	zval *	value
ANR	370811	DeclStmt									
ANR	370812	Decl							zval	zval *	value_ptr
ANR	370813	DeclStmt									
ANR	370814	Decl							zval	zval *	value
ANR	370815	DeclStmt									
ANR	370816	Decl							zval	zval *	key
ANR	370817	DeclStmt									
ANR	370818	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370819	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370820	DeclStmt									
ANR	370821	Decl							zval	zval *	op1
ANR	370822	Decl							zval	zval *	op2
ANR	370823	DeclStmt									
ANR	370824	Decl							int	int	result
ANR	370825	DeclStmt									
ANR	370826	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370827	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370828	DeclStmt									
ANR	370829	Decl							zval	zval *	op1
ANR	370830	Decl							zval	zval *	op2
ANR	370831	DeclStmt									
ANR	370832	Decl							int	int	result
ANR	370833	DeclStmt									
ANR	370834	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370835	DeclStmt									
ANR	370836	Decl							zend_free_op	zend_free_op	free_op1
ANR	370837	DeclStmt									
ANR	370838	Decl							zval	zval *	value
ANR	370839	DeclStmt									
ANR	370840	Decl							zval	zval *	value_ptr
ANR	370841	DeclStmt									
ANR	370842	Decl							zval	zval *	value
ANR	370843	DeclStmt									
ANR	370844	Decl							zend_free_op	zend_free_op	free_op2
ANR	370845	DeclStmt									
ANR	370846	Decl							zval	zval *	key
ANR	370847	DeclStmt									
ANR	370848	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370849	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370850	DeclStmt									
ANR	370851	Decl							zval	zval *	op1
ANR	370852	Decl							zval	zval *	op2
ANR	370853	DeclStmt									
ANR	370854	Decl							int	int	result
ANR	370855	DeclStmt									
ANR	370856	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370857	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	370858	DeclStmt									
ANR	370859	Decl							zval	zval *	op1
ANR	370860	Decl							zval	zval *	op2
ANR	370861	DeclStmt									
ANR	370862	Decl							int	int	result
ANR	370863	DeclStmt									
ANR	370864	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370865	DeclStmt									
ANR	370866	Decl							zend_free_op	zend_free_op	free_op1
ANR	370867	DeclStmt									
ANR	370868	Decl							zval	zval *	value
ANR	370869	DeclStmt									
ANR	370870	Decl							zval	zval *	value_ptr
ANR	370871	DeclStmt									
ANR	370872	Decl							zval	zval *	value
ANR	370873	DeclStmt									
ANR	370874	Decl							zend_free_op	zend_free_op	free_op2
ANR	370875	DeclStmt									
ANR	370876	Decl							zval	zval *	key
ANR	370877	DeclStmt									
ANR	370878	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370879	DeclStmt									
ANR	370880	Decl							zend_free_op	zend_free_op	free_op1
ANR	370881	DeclStmt									
ANR	370882	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	370883	DeclStmt									
ANR	370884	Decl							zval	zval *	retval_ref
ANR	370885	Decl							zval	zval *	retval_ptr
ANR	370886	DeclStmt									
ANR	370887	Decl							zend_free_op	zend_free_op	free_op1
ANR	370888	DeclStmt									
ANR	370889	Decl							zend_arg_info	zend_arg_info *	ret_info
ANR	370890	DeclStmt									
ANR	370891	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370892	DeclStmt									
ANR	370893	Decl							zval	zval *	expr_ptr
ANR	370894	Decl							zval	zval	new_expr
ANR	370895	DeclStmt									
ANR	370896	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370897	DeclStmt									
ANR	370898	Decl							zval	zval *	offset
ANR	370899	DeclStmt									
ANR	370900	Decl							zend_string	zend_string *	str
ANR	370901	DeclStmt									
ANR	370902	Decl							zend_ulong	zend_ulong	hval
ANR	370903	DeclStmt									
ANR	370904	Decl							zval	zval *	array
ANR	370905	DeclStmt									
ANR	370906	Decl							uint32_t	uint32_t	size
ANR	370907	DeclStmt									
ANR	370908	Decl							USE_OPLINE	USE_OPLINE	array
ANR	370909	DeclStmt									
ANR	370910	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370911	DeclStmt									
ANR	370912	Decl							zend_free_op	zend_free_op	free_op1
ANR	370913	DeclStmt									
ANR	370914	Decl							zval	zval *	value
ANR	370915	DeclStmt									
ANR	370916	Decl							zval	zval *	value_ptr
ANR	370917	DeclStmt									
ANR	370918	Decl							zval	zval *	value
ANR	370919	DeclStmt									
ANR	370920	Decl							zval	zval *	key
ANR	370921	DeclStmt									
ANR	370922	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370923	DeclStmt									
ANR	370924	Decl							zval	zval *	op1
ANR	370925	Decl							zval	zval *	op2
ANR	370926	DeclStmt									
ANR	370927	Decl							int	int	result
ANR	370928	DeclStmt									
ANR	370929	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370930	DeclStmt									
ANR	370931	Decl							zval	zval *	op1
ANR	370932	Decl							zval	zval *	op2
ANR	370933	DeclStmt									
ANR	370934	Decl							int	int	result
ANR	370935	DeclStmt									
ANR	370936	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370937	DeclStmt									
ANR	370938	Decl							zend_free_op	zend_free_op	free_op1
ANR	370939	DeclStmt									
ANR	370940	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370941	DeclStmt									
ANR	370942	Decl							zval	zval *	container
ANR	370943	DeclStmt									
ANR	370944	Decl							zval	zval *	offset
ANR	370945	DeclStmt									
ANR	370946	Decl							zend_object	zend_object *	zobj
ANR	370947	DeclStmt									
ANR	370948	Decl							zval	zval *	retval
ANR	370949	DeclStmt									
ANR	370950	Decl							uint32_t	uint32_t	prop_offset
ANR	370951	DeclStmt									
ANR	370952	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	370953	DeclStmt									
ANR	370954	Decl							zend_free_op	zend_free_op	free_op1
ANR	370955	DeclStmt									
ANR	370956	Decl							zval	zval *	property
ANR	370957	DeclStmt									
ANR	370958	Decl							USE_OPLINE zend_string	USE_OPLINE zend_string * *	rope
ANR	370959	DeclStmt									
ANR	370960	Decl							zval	zval *	var
ANR	370961	DeclStmt									
ANR	370962	Decl							USE_OPLINE zend_string	USE_OPLINE zend_string * *	rope
ANR	370963	DeclStmt									
ANR	370964	Decl							zval	zval *	var
ANR	370965	Decl							zval	zval *	ret
ANR	370966	DeclStmt									
ANR	370967	Decl							uint32_t	uint32_t	i
ANR	370968	DeclStmt									
ANR	370969	Decl							size_t	size_t	len
ANR	370970	DeclStmt									
ANR	370971	Decl							char	char *	target
ANR	370972	DeclStmt									
ANR	370973	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	370974	DeclStmt									
ANR	370975	Decl							zval	zval *	expr_ptr
ANR	370976	Decl							zval	zval	new_expr
ANR	370977	DeclStmt									
ANR	370978	Decl							zend_refcounted	zend_refcounted *	ref
ANR	370979	DeclStmt									
ANR	370980	Decl							zval	zval *	offset
ANR	370981	DeclStmt									
ANR	370982	Decl							zend_string	zend_string *	str
ANR	370983	DeclStmt									
ANR	370984	Decl							zend_ulong	zend_ulong	hval
ANR	370985	DeclStmt									
ANR	370986	Decl							zval	zval *	array
ANR	370987	DeclStmt									
ANR	370988	Decl							uint32_t	uint32_t	size
ANR	370989	DeclStmt									
ANR	370990	Decl							USE_OPLINE	USE_OPLINE	array
ANR	370991	DeclStmt									
ANR	370992	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	370993	DeclStmt									
ANR	370994	Decl							zend_free_op	zend_free_op	free_op1
ANR	370995	DeclStmt									
ANR	370996	Decl							zval	zval *	value
ANR	370997	DeclStmt									
ANR	370998	Decl							zval	zval *	value_ptr
ANR	370999	DeclStmt									
ANR	371000	Decl							zval	zval *	value
ANR	371001	DeclStmt									
ANR	371002	Decl							zval	zval *	key
ANR	371003	DeclStmt									
ANR	371004	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	371005	DeclStmt									
ANR	371006	Decl							zend_free_op	zend_free_op	free_op1
ANR	371007	Decl							zend_free_op	zend_free_op	free_op2
ANR	371008	DeclStmt									
ANR	371009	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371010	DeclStmt									
ANR	371011	Decl							zval	zval *	container
ANR	371012	DeclStmt									
ANR	371013	Decl							zend_free_op	zend_free_op	free_op2
ANR	371014	DeclStmt									
ANR	371015	Decl							zval	zval *	offset
ANR	371016	DeclStmt									
ANR	371017	Decl							zend_object	zend_object *	zobj
ANR	371018	DeclStmt									
ANR	371019	Decl							zval	zval *	retval
ANR	371020	DeclStmt									
ANR	371021	Decl							uint32_t	uint32_t	prop_offset
ANR	371022	DeclStmt									
ANR	371023	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	371024	DeclStmt									
ANR	371025	Decl							zend_free_op	zend_free_op	free_op1
ANR	371026	Decl							zend_free_op	zend_free_op	free_op2
ANR	371027	DeclStmt									
ANR	371028	Decl							zval	zval *	property
ANR	371029	DeclStmt									
ANR	371030	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	371031	DeclStmt									
ANR	371032	Decl							zend_string	zend_string * *	rope
ANR	371033	DeclStmt									
ANR	371034	Decl							zval	zval *	var
ANR	371035	DeclStmt									
ANR	371036	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	371037	DeclStmt									
ANR	371038	Decl							zend_string	zend_string * *	rope
ANR	371039	DeclStmt									
ANR	371040	Decl							zval	zval *	var
ANR	371041	Decl							zval	zval *	ret
ANR	371042	DeclStmt									
ANR	371043	Decl							uint32_t	uint32_t	i
ANR	371044	DeclStmt									
ANR	371045	Decl							size_t	size_t	len
ANR	371046	DeclStmt									
ANR	371047	Decl							char	char *	target
ANR	371048	DeclStmt									
ANR	371049	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371050	DeclStmt									
ANR	371051	Decl							zval	zval *	expr_ptr
ANR	371052	Decl							zval	zval	new_expr
ANR	371053	DeclStmt									
ANR	371054	Decl							zend_refcounted	zend_refcounted *	ref
ANR	371055	DeclStmt									
ANR	371056	Decl							zend_free_op	zend_free_op	free_op2
ANR	371057	DeclStmt									
ANR	371058	Decl							zval	zval *	offset
ANR	371059	DeclStmt									
ANR	371060	Decl							zend_string	zend_string *	str
ANR	371061	DeclStmt									
ANR	371062	Decl							zend_ulong	zend_ulong	hval
ANR	371063	DeclStmt									
ANR	371064	Decl							zval	zval *	array
ANR	371065	DeclStmt									
ANR	371066	Decl							uint32_t	uint32_t	size
ANR	371067	DeclStmt									
ANR	371068	Decl							USE_OPLINE	USE_OPLINE	array
ANR	371069	DeclStmt									
ANR	371070	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371071	DeclStmt									
ANR	371072	Decl							zval	zval *	var_ptr
ANR	371073	DeclStmt									
ANR	371074	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371075	DeclStmt									
ANR	371076	Decl							zval	zval *	var_ptr
ANR	371077	DeclStmt									
ANR	371078	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371079	DeclStmt									
ANR	371080	Decl							zval	zval *	var_ptr
ANR	371081	DeclStmt									
ANR	371082	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371083	DeclStmt									
ANR	371084	Decl							zval	zval *	var_ptr
ANR	371085	DeclStmt									
ANR	371086	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	371087	DeclStmt									
ANR	371088	Decl							zend_free_op	zend_free_op	free_op1
ANR	371089	DeclStmt									
ANR	371090	Decl							zend_refcounted	zend_refcounted *	ref
ANR	371091	DeclStmt									
ANR	371092	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	371093	DeclStmt									
ANR	371094	Decl							zend_free_op	zend_free_op	free_op1
ANR	371095	DeclStmt									
ANR	371096	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval
ANR	371097	DeclStmt									
ANR	371098	Decl							zend_free_op	zend_free_op	free_op1
ANR	371099	DeclStmt									
ANR	371100	Decl							zend_generator	zend_generator *	generator
ANR	371101	DeclStmt									
ANR	371102	Decl							zend_refcounted	zend_refcounted *	ref
ANR	371103	DeclStmt									
ANR	371104	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	371105	DeclStmt									
ANR	371106	Decl							zend_free_op	zend_free_op	free_op1
ANR	371107	DeclStmt									
ANR	371108	Decl							USE_OPLINE zval	USE_OPLINE zval *	varptr
ANR	371109	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	371110	DeclStmt									
ANR	371111	Decl							zend_free_op	zend_free_op	free_op1
ANR	371112	DeclStmt									
ANR	371113	Decl							zend_refcounted	zend_refcounted *	ref
ANR	371114	DeclStmt									
ANR	371115	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371116	DeclStmt									
ANR	371117	Decl							zval	zval *	varptr
ANR	371118	Decl							zval	zval *	arg
ANR	371119	DeclStmt									
ANR	371120	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371121	DeclStmt									
ANR	371122	Decl							zval	zval *	varptr
ANR	371123	Decl							zval	zval *	arg
ANR	371124	DeclStmt									
ANR	371125	Decl							USE_OPLINE zval	USE_OPLINE zval *	varptr
ANR	371126	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	371127	DeclStmt									
ANR	371128	Decl							zend_free_op	zend_free_op	free_op1
ANR	371129	DeclStmt									
ANR	371130	Decl							uint32_t	uint32_t	arg_num
ANR	371131	DeclStmt									
ANR	371132	Decl							zend_refcounted	zend_refcounted *	ref
ANR	371133	DeclStmt									
ANR	371134	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	371135	Decl							USE_OPLINE zval	USE_OPLINE zval *	param
ANR	371136	DeclStmt									
ANR	371137	Decl							zend_free_op	zend_free_op	free_op1
ANR	371138	DeclStmt									
ANR	371139	Decl							USE_OPLINE zval	USE_OPLINE zval	object_zval
ANR	371140	DeclStmt									
ANR	371141	Decl							zend_function	zend_function *	constructor
ANR	371142	DeclStmt									
ANR	371143	Decl							zend_class_entry	zend_class_entry *	ce
ANR	371144	DeclStmt									
ANR	371145	Decl							zend_execute_data	zend_execute_data *	call
ANR	371146	DeclStmt									
ANR	371147	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371148	DeclStmt									
ANR	371149	Decl							zval	zval *	expr
ANR	371150	DeclStmt									
ANR	371151	Decl							zval	zval *	result
ANR	371152	DeclStmt									
ANR	371153	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371154	DeclStmt									
ANR	371155	Decl							zval	zval *	array_ptr
ANR	371156	Decl							zval	zval *	result
ANR	371157	DeclStmt									
ANR	371158	Decl							HashTable	HashTable *	fe_ht
ANR	371159	DeclStmt									
ANR	371160	Decl							HashPosition	HashPosition	pos
ANR	371161	DeclStmt									
ANR	371162	Decl							Bucket	Bucket *	p
ANR	371163	DeclStmt									
ANR	371164	Decl							zend_class_entry	zend_class_entry *	ce
ANR	371165	DeclStmt									
ANR	371166	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	371167	DeclStmt									
ANR	371168	Decl							zend_bool	zend_bool	is_empty
ANR	371169	DeclStmt									
ANR	371170	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371171	DeclStmt									
ANR	371172	Decl							zval	zval *	array_ptr
ANR	371173	Decl							zval	zval *	array_ref
ANR	371174	DeclStmt									
ANR	371175	Decl							HashTable	HashTable *	fe_ht
ANR	371176	DeclStmt									
ANR	371177	Decl							HashPosition	HashPosition	pos
ANR	371178	DeclStmt									
ANR	371179	Decl							Bucket	Bucket *	p
ANR	371180	DeclStmt									
ANR	371181	Decl							zend_class_entry	zend_class_entry *	ce
ANR	371182	DeclStmt									
ANR	371183	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	371184	DeclStmt									
ANR	371185	Decl							zend_bool	zend_bool	is_empty
ANR	371186	DeclStmt									
ANR	371187	Decl							USE_OPLINE zval	USE_OPLINE zval *	array
ANR	371188	DeclStmt									
ANR	371189	Decl							zval	zval *	value
ANR	371190	DeclStmt									
ANR	371191	Decl							uint32_t	uint32_t	value_type
ANR	371192	DeclStmt									
ANR	371193	Decl							HashTable	HashTable *	fe_ht
ANR	371194	DeclStmt									
ANR	371195	Decl							HashPosition	HashPosition	pos
ANR	371196	DeclStmt									
ANR	371197	Decl							Bucket	Bucket *	p
ANR	371198	DeclStmt									
ANR	371199	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	371200	DeclStmt									
ANR	371201	Decl							const char	const char *	class_name
ANR	371202	Decl							const char	const char *	prop_name
ANR	371203	DeclStmt									
ANR	371204	Decl							size_t	size_t	prop_name_len
ANR	371205	DeclStmt									
ANR	371206	Decl							zval	zval *	variable_ptr
ANR	371207	DeclStmt									
ANR	371208	Decl							zval	zval *	res
ANR	371209	DeclStmt									
ANR	371210	Decl							zend_refcounted	zend_refcounted *	gc
ANR	371211	DeclStmt									
ANR	371212	Decl							USE_OPLINE zval	USE_OPLINE zval *	array
ANR	371213	DeclStmt									
ANR	371214	Decl							zval	zval *	value
ANR	371215	DeclStmt									
ANR	371216	Decl							uint32_t	uint32_t	value_type
ANR	371217	DeclStmt									
ANR	371218	Decl							HashTable	HashTable *	fe_ht
ANR	371219	DeclStmt									
ANR	371220	Decl							HashPosition	HashPosition	pos
ANR	371221	DeclStmt									
ANR	371222	Decl							Bucket	Bucket *	p
ANR	371223	DeclStmt									
ANR	371224	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	371225	DeclStmt									
ANR	371226	Decl							const char	const char *	class_name
ANR	371227	Decl							const char	const char *	prop_name
ANR	371228	DeclStmt									
ANR	371229	Decl							size_t	size_t	prop_name_len
ANR	371230	DeclStmt									
ANR	371231	Decl							zend_refcounted	zend_refcounted *	gc
ANR	371232	DeclStmt									
ANR	371233	Decl							zval	zval *	ref
ANR	371234	DeclStmt									
ANR	371235	Decl							zval	zval *	variable_ptr
ANR	371236	DeclStmt									
ANR	371237	Decl							zend_reference	zend_reference *	ref
ANR	371238	DeclStmt									
ANR	371239	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371240	DeclStmt									
ANR	371241	Decl							zval	zval *	value
ANR	371242	DeclStmt									
ANR	371243	Decl							zval	zval *	ref
ANR	371244	DeclStmt									
ANR	371245	Decl							zend_reference	zend_reference *	r
ANR	371246	DeclStmt									
ANR	371247	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371248	DeclStmt									
ANR	371249	Decl							zval	zval *	value
ANR	371250	DeclStmt									
ANR	371251	Decl							zval	zval *	ref
ANR	371252	DeclStmt									
ANR	371253	Decl							zend_reference	zend_reference *	r
ANR	371254	DeclStmt									
ANR	371255	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371256	DeclStmt									
ANR	371257	Decl							zval	zval *	value
ANR	371258	DeclStmt									
ANR	371259	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	371260	DeclStmt									
ANR	371261	Decl							zval	zval *	val
ANR	371262	DeclStmt									
ANR	371263	Decl							zend_free_op	zend_free_op	free_op1
ANR	371264	DeclStmt									
ANR	371265	Decl							zend_class_entry	zend_class_entry *	ce
ANR	371266	DeclStmt									
ANR	371267	Decl							zend_generator	zend_generator *	new_gen
ANR	371268	DeclStmt									
ANR	371269	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	371270	DeclStmt									
ANR	371271	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	371272	DeclStmt									
ANR	371273	Decl							int	int	result
ANR	371274	DeclStmt									
ANR	371275	Decl							zend_free_op	zend_free_op	free_op1
ANR	371276	DeclStmt									
ANR	371277	Decl							zend_class_entry	zend_class_entry *	ce
ANR	371278	DeclStmt									
ANR	371279	Decl							const char	const char *	type_name
ANR	371280	DeclStmt									
ANR	371281	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371282	DeclStmt									
ANR	371283	Decl							zval	zval *	op1
ANR	371284	Decl							zval	zval *	op2
ANR	371285	DeclStmt									
ANR	371286	Decl							int	int	result
ANR	371287	DeclStmt									
ANR	371288	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	371289	DeclStmt									
ANR	371290	Decl							zval	zval *	op1
ANR	371291	Decl							zval	zval *	op2
ANR	371292	DeclStmt									
ANR	371293	Decl							int	int	result
ANR	371294	Function	zend_binary_assign_op_obj_helper_SPEC_VAR_CONST	16418:0:493758:495910							
ANR	371295	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_VAR_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		371294	0					
ANR	371296	CompoundStatement		16419:0:493905:495910	371294	0					
ANR	371297	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op_data1 ;"	16420:1:493908:493956	371294	0	True				
ANR	371298	IdentifierDecl	free_op1		371294	0					
ANR	371299	IdentifierDeclType	USE_OPLINE zend_free_op		371294	0					
ANR	371300	Identifier	free_op1		371294	1					
ANR	371301	IdentifierDecl	free_op_data1		371294	1					
ANR	371302	IdentifierDeclType	USE_OPLINE zend_free_op		371294	0					
ANR	371303	Identifier	free_op_data1		371294	1					
ANR	371304	IdentifierDeclStatement	zval * object ;	16422:1:493959:493971	371294	1	True				
ANR	371305	IdentifierDecl	* object		371294	0					
ANR	371306	IdentifierDeclType	zval *		371294	0					
ANR	371307	Identifier	object		371294	1					
ANR	371308	IdentifierDeclStatement	zval * property ;	16423:1:493974:493988	371294	2	True				
ANR	371309	IdentifierDecl	* property		371294	0					
ANR	371310	IdentifierDeclType	zval *		371294	0					
ANR	371311	Identifier	property		371294	1					
ANR	371312	IdentifierDeclStatement	zval * value ;	16424:1:493991:494002	371294	3	True				
ANR	371313	IdentifierDecl	* value		371294	0					
ANR	371314	IdentifierDeclType	zval *		371294	0					
ANR	371315	Identifier	value		371294	1					
ANR	371316	IdentifierDeclStatement	zval * zptr ;	16425:1:494005:494015	371294	4	True				
ANR	371317	IdentifierDecl	* zptr		371294	0					
ANR	371318	IdentifierDeclType	zval *		371294	0					
ANR	371319	Identifier	zptr		371294	1					
ANR	371320	ExpressionStatement	SAVE_OPLINE ( )	16427:1:494019:494032	371294	5	True				
ANR	371321	CallExpression	SAVE_OPLINE ( )		371294	0					
ANR	371322	Callee	SAVE_OPLINE		371294	0					
ANR	371323	Identifier	SAVE_OPLINE		371294	0					
ANR	371324	ArgumentList			371294	1					
ANR	371325	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	16428:1:494035:494107	371294	6	True				
ANR	371326	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		371294	0		=			
ANR	371327	Identifier	object		371294	0					
ANR	371328	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		371294	1					
ANR	371329	Callee	_get_zval_ptr_ptr_var		371294	0					
ANR	371330	Identifier	_get_zval_ptr_ptr_var		371294	0					
ANR	371331	ArgumentList	opline -> op1 . var		371294	1					
ANR	371332	Argument	opline -> op1 . var		371294	0					
ANR	371333	MemberAccess	opline -> op1 . var		371294	0					
ANR	371334	PtrMemberAccess	opline -> op1		371294	0					
ANR	371335	Identifier	opline		371294	0					
ANR	371336	Identifier	op1		371294	1					
ANR	371337	Identifier	var		371294	1					
ANR	371338	Argument	execute_data		371294	1					
ANR	371339	Identifier	execute_data		371294	0					
ANR	371340	Argument	& free_op1		371294	2					
ANR	371341	UnaryOperationExpression	& free_op1		371294	0					
ANR	371342	UnaryOperator	&		371294	0					
ANR	371343	Identifier	free_op1		371294	1					
ANR	371344	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		371294	7					
ANR	371345	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	16430:5:494115:494172	371294	0	True				
ANR	371346	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		371294	0		&&			
ANR	371347	EqualityExpression	IS_VAR == IS_UNUSED		371294	0		==			
ANR	371348	Identifier	IS_VAR		371294	0					
ANR	371349	Identifier	IS_UNUSED		371294	1					
ANR	371350	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		371294	1					
ANR	371351	Callee	UNEXPECTED		371294	0					
ANR	371352	Identifier	UNEXPECTED		371294	0					
ANR	371353	ArgumentList	Z_OBJ_P ( object ) == NULL		371294	1					
ANR	371354	Argument	Z_OBJ_P ( object ) == NULL		371294	0					
ANR	371355	EqualityExpression	Z_OBJ_P ( object ) == NULL		371294	0		==			
ANR	371356	CallExpression	Z_OBJ_P ( object )		371294	0					
ANR	371357	Callee	Z_OBJ_P		371294	0					
ANR	371358	Identifier	Z_OBJ_P		371294	0					
ANR	371359	ArgumentList	object		371294	1					
ANR	371360	Argument	object		371294	0					
ANR	371361	Identifier	object		371294	0					
ANR	371362	Identifier	NULL		371294	1					
ANR	371363	CompoundStatement		12:65:269:269	371294	1					
ANR	371364	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	16431:2:494179:494243	371294	0	True				
ANR	371365	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		371294	0					
ANR	371366	Callee	zend_throw_error		371294	0					
ANR	371367	Identifier	zend_throw_error		371294	0					
ANR	371368	ArgumentList	NULL		371294	1					
ANR	371369	Argument	NULL		371294	0					
ANR	371370	Identifier	NULL		371294	0					
ANR	371371	Argument	"""Using $this when not in object context"""		371294	1					
ANR	371372	PrimaryExpression	"""Using $this when not in object context"""		371294	0					
ANR	371373	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	16432:2:494247:494307	371294	1	True				
ANR	371374	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		371294	0					
ANR	371375	Callee	FREE_UNFETCHED_OP		371294	0					
ANR	371376	Identifier	FREE_UNFETCHED_OP		371294	0					
ANR	371377	ArgumentList	( opline + 1 ) -> op1_type		371294	1					
ANR	371378	Argument	( opline + 1 ) -> op1_type		371294	0					
ANR	371379	PtrMemberAccess	( opline + 1 ) -> op1_type		371294	0					
ANR	371380	AdditiveExpression	opline + 1		371294	0		+			
ANR	371381	Identifier	opline		371294	0					
ANR	371382	PrimaryExpression	1		371294	1					
ANR	371383	Identifier	op1_type		371294	1					
ANR	371384	Argument	( opline + 1 ) -> op1 . var		371294	1					
ANR	371385	MemberAccess	( opline + 1 ) -> op1 . var		371294	0					
ANR	371386	PtrMemberAccess	( opline + 1 ) -> op1		371294	0					
ANR	371387	AdditiveExpression	opline + 1		371294	0		+			
ANR	371388	Identifier	opline		371294	0					
ANR	371389	PrimaryExpression	1		371294	1					
ANR	371390	Identifier	op1		371294	1					
ANR	371391	Identifier	var		371294	1					
ANR	371392	ExpressionStatement	HANDLE_EXCEPTION ( )	16434:2:494312:494330	371294	2	True				
ANR	371393	CallExpression	HANDLE_EXCEPTION ( )		371294	0					
ANR	371394	Callee	HANDLE_EXCEPTION		371294	0					
ANR	371395	Identifier	HANDLE_EXCEPTION		371294	0					
ANR	371396	ArgumentList			371294	1					
ANR	371397	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	16437:1:494337:494372	371294	8	True				
ANR	371398	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		371294	0		=			
ANR	371399	Identifier	property		371294	0					
ANR	371400	CallExpression	EX_CONSTANT ( opline -> op2 )		371294	1					
ANR	371401	Callee	EX_CONSTANT		371294	0					
ANR	371402	Identifier	EX_CONSTANT		371294	0					
ANR	371403	ArgumentList	opline -> op2		371294	1					
ANR	371404	Argument	opline -> op2		371294	0					
ANR	371405	PtrMemberAccess	opline -> op2		371294	0					
ANR	371406	Identifier	opline		371294	0					
ANR	371407	Identifier	op2		371294	1					
ANR	371408	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		371294	9					
ANR	371409	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	16439:5:494380:494425	371294	0	True				
ANR	371410	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		371294	0		&&			
ANR	371411	EqualityExpression	IS_VAR == IS_VAR		371294	0		==			
ANR	371412	Identifier	IS_VAR		371294	0					
ANR	371413	Identifier	IS_VAR		371294	1					
ANR	371414	CallExpression	UNEXPECTED ( object == NULL )		371294	1					
ANR	371415	Callee	UNEXPECTED		371294	0					
ANR	371416	Identifier	UNEXPECTED		371294	0					
ANR	371417	ArgumentList	object == NULL		371294	1					
ANR	371418	Argument	object == NULL		371294	0					
ANR	371419	EqualityExpression	object == NULL		371294	0		==			
ANR	371420	Identifier	object		371294	0					
ANR	371421	Identifier	NULL		371294	1					
ANR	371422	CompoundStatement		21:53:522:522	371294	1					
ANR	371423	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	16440:2:494432:494495	371294	0	True				
ANR	371424	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		371294	0					
ANR	371425	Callee	zend_throw_error		371294	0					
ANR	371426	Identifier	zend_throw_error		371294	0					
ANR	371427	ArgumentList	NULL		371294	1					
ANR	371428	Argument	NULL		371294	0					
ANR	371429	Identifier	NULL		371294	0					
ANR	371430	Argument	"""Cannot use string offset as an object"""		371294	1					
ANR	371431	PrimaryExpression	"""Cannot use string offset as an object"""		371294	0					
ANR	371432	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	16441:2:494499:494559	371294	1	True				
ANR	371433	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		371294	0					
ANR	371434	Callee	FREE_UNFETCHED_OP		371294	0					
ANR	371435	Identifier	FREE_UNFETCHED_OP		371294	0					
ANR	371436	ArgumentList	( opline + 1 ) -> op1_type		371294	1					
ANR	371437	Argument	( opline + 1 ) -> op1_type		371294	0					
ANR	371438	PtrMemberAccess	( opline + 1 ) -> op1_type		371294	0					
ANR	371439	AdditiveExpression	opline + 1		371294	0		+			
ANR	371440	Identifier	opline		371294	0					
ANR	371441	PrimaryExpression	1		371294	1					
ANR	371442	Identifier	op1_type		371294	1					
ANR	371443	Argument	( opline + 1 ) -> op1 . var		371294	1					
ANR	371444	MemberAccess	( opline + 1 ) -> op1 . var		371294	0					
ANR	371445	PtrMemberAccess	( opline + 1 ) -> op1		371294	0					
ANR	371446	AdditiveExpression	opline + 1		371294	0		+			
ANR	371447	Identifier	opline		371294	0					
ANR	371448	PrimaryExpression	1		371294	1					
ANR	371449	Identifier	op1		371294	1					
ANR	371450	Identifier	var		371294	1					
ANR	371451	ExpressionStatement	HANDLE_EXCEPTION ( )	16443:2:494564:494582	371294	2	True				
ANR	371452	CallExpression	HANDLE_EXCEPTION ( )		371294	0					
ANR	371453	Callee	HANDLE_EXCEPTION		371294	0					
ANR	371454	Identifier	HANDLE_EXCEPTION		371294	0					
ANR	371455	ArgumentList			371294	1					
ANR	371456	DoStatement	do		371294	10					
ANR	371457	CompoundStatement		28:4:686:686	371294	0					
ANR	371458	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	16447:2:494596:494687	371294	0	True				
ANR	371459	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		371294	0		=			
ANR	371460	Identifier	value		371294	0					
ANR	371461	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		371294	1					
ANR	371462	Callee	get_zval_ptr_r		371294	0					
ANR	371463	Identifier	get_zval_ptr_r		371294	0					
ANR	371464	ArgumentList	( opline + 1 ) -> op1_type		371294	1					
ANR	371465	Argument	( opline + 1 ) -> op1_type		371294	0					
ANR	371466	PtrMemberAccess	( opline + 1 ) -> op1_type		371294	0					
ANR	371467	AdditiveExpression	opline + 1		371294	0		+			
ANR	371468	Identifier	opline		371294	0					
ANR	371469	PrimaryExpression	1		371294	1					
ANR	371470	Identifier	op1_type		371294	1					
ANR	371471	Argument	( opline + 1 ) -> op1		371294	1					
ANR	371472	PtrMemberAccess	( opline + 1 ) -> op1		371294	0					
ANR	371473	AdditiveExpression	opline + 1		371294	0		+			
ANR	371474	Identifier	opline		371294	0					
ANR	371475	PrimaryExpression	1		371294	1					
ANR	371476	Identifier	op1		371294	1					
ANR	371477	Argument	execute_data		371294	2					
ANR	371478	Identifier	execute_data		371294	0					
ANR	371479	Argument	& free_op_data1		371294	3					
ANR	371480	UnaryOperationExpression	& free_op_data1		371294	0					
ANR	371481	UnaryOperator	&		371294	0					
ANR	371482	Identifier	free_op_data1		371294	1					
ANR	371483	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		371294	1					
ANR	371484	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	16449:6:494696:494759	371294	0	True				
ANR	371485	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		371294	0		&&			
ANR	371486	EqualityExpression	IS_VAR != IS_UNUSED		371294	0		!=			
ANR	371487	Identifier	IS_VAR		371294	0					
ANR	371488	Identifier	IS_UNUSED		371294	1					
ANR	371489	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		371294	1					
ANR	371490	Callee	UNEXPECTED		371294	0					
ANR	371491	Identifier	UNEXPECTED		371294	0					
ANR	371492	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		371294	1					
ANR	371493	Argument	Z_TYPE_P ( object ) != IS_OBJECT		371294	0					
ANR	371494	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		371294	0		!=			
ANR	371495	CallExpression	Z_TYPE_P ( object )		371294	0					
ANR	371496	Callee	Z_TYPE_P		371294	0					
ANR	371497	Identifier	Z_TYPE_P		371294	0					
ANR	371498	ArgumentList	object		371294	1					
ANR	371499	Argument	object		371294	0					
ANR	371500	Identifier	object		371294	0					
ANR	371501	Identifier	IS_OBJECT		371294	1					
ANR	371502	CompoundStatement		31:72:856:856	371294	1					
ANR	371503	ExpressionStatement	ZVAL_DEREF ( object )	16450:3:494767:494785	371294	0	True				
ANR	371504	CallExpression	ZVAL_DEREF ( object )		371294	0					
ANR	371505	Callee	ZVAL_DEREF		371294	0					
ANR	371506	Identifier	ZVAL_DEREF		371294	0					
ANR	371507	ArgumentList	object		371294	1					
ANR	371508	Argument	object		371294	0					
ANR	371509	Identifier	object		371294	0					
ANR	371510	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		371294	1					
ANR	371511	Condition	UNEXPECTED ( ! make_real_object ( object ) )	16451:7:494794:494830	371294	0	True				
ANR	371512	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		371294	0					
ANR	371513	Callee	UNEXPECTED		371294	0					
ANR	371514	Identifier	UNEXPECTED		371294	0					
ANR	371515	ArgumentList	! make_real_object ( object )		371294	1					
ANR	371516	Argument	! make_real_object ( object )		371294	0					
ANR	371517	UnaryOperationExpression	! make_real_object ( object )		371294	0					
ANR	371518	UnaryOperator	!		371294	0					
ANR	371519	CallExpression	make_real_object ( object )		371294	1					
ANR	371520	Callee	make_real_object		371294	0					
ANR	371521	Identifier	make_real_object		371294	0					
ANR	371522	ArgumentList	object		371294	1					
ANR	371523	Argument	object		371294	0					
ANR	371524	Identifier	object		371294	0					
ANR	371525	CompoundStatement		33:46:927:927	371294	1					
ANR	371526	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	16452:4:494839:494904	371294	0	True				
ANR	371527	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		371294	0					
ANR	371528	Callee	zend_error		371294	0					
ANR	371529	Identifier	zend_error		371294	0					
ANR	371530	ArgumentList	E_WARNING		371294	1					
ANR	371531	Argument	E_WARNING		371294	0					
ANR	371532	Identifier	E_WARNING		371294	0					
ANR	371533	Argument	"""Attempt to assign property of non-object"""		371294	1					
ANR	371534	PrimaryExpression	"""Attempt to assign property of non-object"""		371294	0					
ANR	371535	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		371294	1					
ANR	371536	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16453:8:494914:494950	371294	0	True				
ANR	371537	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371294	0					
ANR	371538	Callee	UNEXPECTED		371294	0					
ANR	371539	Identifier	UNEXPECTED		371294	0					
ANR	371540	ArgumentList	RETURN_VALUE_USED ( opline )		371294	1					
ANR	371541	Argument	RETURN_VALUE_USED ( opline )		371294	0					
ANR	371542	CallExpression	RETURN_VALUE_USED ( opline )		371294	0					
ANR	371543	Callee	RETURN_VALUE_USED		371294	0					
ANR	371544	Identifier	RETURN_VALUE_USED		371294	0					
ANR	371545	ArgumentList	opline		371294	1					
ANR	371546	Argument	opline		371294	0					
ANR	371547	Identifier	opline		371294	0					
ANR	371548	CompoundStatement		35:47:1047:1047	371294	1					
ANR	371549	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	16454:5:494960:494997	371294	0	True				
ANR	371550	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		371294	0					
ANR	371551	Callee	ZVAL_NULL		371294	0					
ANR	371552	Identifier	ZVAL_NULL		371294	0					
ANR	371553	ArgumentList	EX_VAR ( opline -> result . var )		371294	1					
ANR	371554	Argument	EX_VAR ( opline -> result . var )		371294	0					
ANR	371555	CallExpression	EX_VAR ( opline -> result . var )		371294	0					
ANR	371556	Callee	EX_VAR		371294	0					
ANR	371557	Identifier	EX_VAR		371294	0					
ANR	371558	ArgumentList	opline -> result . var		371294	1					
ANR	371559	Argument	opline -> result . var		371294	0					
ANR	371560	MemberAccess	opline -> result . var		371294	0					
ANR	371561	PtrMemberAccess	opline -> result		371294	0					
ANR	371562	Identifier	opline		371294	0					
ANR	371563	Identifier	result		371294	1					
ANR	371564	Identifier	var		371294	1					
ANR	371565	BreakStatement	break ;	16456:4:495009:495014	371294	2	True				
ANR	371566	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		371294	2					
ANR	371567	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	16461:6:495087:495311	371294	0	True				
ANR	371568	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		371294	0		&&			
ANR	371569	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		371294	0					
ANR	371570	Callee	EXPECTED		371294	0					
ANR	371571	Identifier	EXPECTED		371294	0					
ANR	371572	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		371294	1					
ANR	371573	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		371294	0					
ANR	371574	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		371294	0					
ANR	371575	CallExpression	Z_OBJ_HT_P ( object )		371294	0					
ANR	371576	Callee	Z_OBJ_HT_P		371294	0					
ANR	371577	Identifier	Z_OBJ_HT_P		371294	0					
ANR	371578	ArgumentList	object		371294	1					
ANR	371579	Argument	object		371294	0					
ANR	371580	Identifier	object		371294	0					
ANR	371581	Identifier	get_property_ptr_ptr		371294	1					
ANR	371582	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		371294	1					
ANR	371583	Callee	EXPECTED		371294	0					
ANR	371584	Identifier	EXPECTED		371294	0					
ANR	371585	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		371294	1					
ANR	371586	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		371294	0					
ANR	371587	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		371294	0		!=			
ANR	371588	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		371294	0		=			
ANR	371589	Identifier	zptr		371294	0					
ANR	371590	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		371294	1					
ANR	371591	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		371294	0					
ANR	371592	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		371294	0					
ANR	371593	CallExpression	Z_OBJ_HT_P ( object )		371294	0					
ANR	371594	Callee	Z_OBJ_HT_P		371294	0					
ANR	371595	Identifier	Z_OBJ_HT_P		371294	0					
ANR	371596	ArgumentList	object		371294	1					
ANR	371597	Argument	object		371294	0					
ANR	371598	Identifier	object		371294	0					
ANR	371599	Identifier	get_property_ptr_ptr		371294	1					
ANR	371600	ArgumentList	object		371294	1					
ANR	371601	Argument	object		371294	0					
ANR	371602	Identifier	object		371294	0					
ANR	371603	Argument	property		371294	1					
ANR	371604	Identifier	property		371294	0					
ANR	371605	Argument	BP_VAR_RW		371294	2					
ANR	371606	Identifier	BP_VAR_RW		371294	0					
ANR	371607	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		371294	3					
ANR	371608	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		371294	0					
ANR	371609	Condition	IS_CONST == IS_CONST		371294	0					
ANR	371610	EqualityExpression	IS_CONST == IS_CONST		371294	0		==			
ANR	371611	Identifier	IS_CONST		371294	0					
ANR	371612	Identifier	IS_CONST		371294	1					
ANR	371613	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		371294	1					
ANR	371614	Callee	CACHE_ADDR		371294	0					
ANR	371615	Identifier	CACHE_ADDR		371294	0					
ANR	371616	ArgumentList	Z_CACHE_SLOT_P ( property )		371294	1					
ANR	371617	Argument	Z_CACHE_SLOT_P ( property )		371294	0					
ANR	371618	CallExpression	Z_CACHE_SLOT_P ( property )		371294	0					
ANR	371619	Callee	Z_CACHE_SLOT_P		371294	0					
ANR	371620	Identifier	Z_CACHE_SLOT_P		371294	0					
ANR	371621	ArgumentList	property		371294	1					
ANR	371622	Argument	property		371294	0					
ANR	371623	Identifier	property		371294	0					
ANR	371624	Identifier	NULL		371294	2					
ANR	371625	Identifier	NULL		371294	1					
ANR	371626	CompoundStatement		44:176:1408:1408	371294	1					
ANR	371627	ExpressionStatement	ZVAL_DEREF ( zptr )	16464:3:495320:495336	371294	0	True				
ANR	371628	CallExpression	ZVAL_DEREF ( zptr )		371294	0					
ANR	371629	Callee	ZVAL_DEREF		371294	0					
ANR	371630	Identifier	ZVAL_DEREF		371294	0					
ANR	371631	ArgumentList	zptr		371294	1					
ANR	371632	Argument	zptr		371294	0					
ANR	371633	Identifier	zptr		371294	0					
ANR	371634	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	16465:3:495341:495366	371294	1	True				
ANR	371635	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		371294	0					
ANR	371636	Callee	SEPARATE_ZVAL_NOREF		371294	0					
ANR	371637	Identifier	SEPARATE_ZVAL_NOREF		371294	0					
ANR	371638	ArgumentList	zptr		371294	1					
ANR	371639	Argument	zptr		371294	0					
ANR	371640	Identifier	zptr		371294	0					
ANR	371641	ExpressionStatement	"binary_op ( zptr , zptr , value )"	16467:3:495372:495400	371294	2	True				
ANR	371642	CallExpression	"binary_op ( zptr , zptr , value )"		371294	0					
ANR	371643	Callee	binary_op		371294	0					
ANR	371644	Identifier	binary_op		371294	0					
ANR	371645	ArgumentList	zptr		371294	1					
ANR	371646	Argument	zptr		371294	0					
ANR	371647	Identifier	zptr		371294	0					
ANR	371648	Argument	zptr		371294	1					
ANR	371649	Identifier	zptr		371294	0					
ANR	371650	Argument	value		371294	2					
ANR	371651	Identifier	value		371294	0					
ANR	371652	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		371294	3					
ANR	371653	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16468:7:495409:495445	371294	0	True				
ANR	371654	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371294	0					
ANR	371655	Callee	UNEXPECTED		371294	0					
ANR	371656	Identifier	UNEXPECTED		371294	0					
ANR	371657	ArgumentList	RETURN_VALUE_USED ( opline )		371294	1					
ANR	371658	Argument	RETURN_VALUE_USED ( opline )		371294	0					
ANR	371659	CallExpression	RETURN_VALUE_USED ( opline )		371294	0					
ANR	371660	Callee	RETURN_VALUE_USED		371294	0					
ANR	371661	Identifier	RETURN_VALUE_USED		371294	0					
ANR	371662	ArgumentList	opline		371294	1					
ANR	371663	Argument	opline		371294	0					
ANR	371664	Identifier	opline		371294	0					
ANR	371665	CompoundStatement		50:46:1542:1542	371294	1					
ANR	371666	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	16469:4:495454:495497	371294	0	True				
ANR	371667	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		371294	0					
ANR	371668	Callee	ZVAL_COPY		371294	0					
ANR	371669	Identifier	ZVAL_COPY		371294	0					
ANR	371670	ArgumentList	EX_VAR ( opline -> result . var )		371294	1					
ANR	371671	Argument	EX_VAR ( opline -> result . var )		371294	0					
ANR	371672	CallExpression	EX_VAR ( opline -> result . var )		371294	0					
ANR	371673	Callee	EX_VAR		371294	0					
ANR	371674	Identifier	EX_VAR		371294	0					
ANR	371675	ArgumentList	opline -> result . var		371294	1					
ANR	371676	Argument	opline -> result . var		371294	0					
ANR	371677	MemberAccess	opline -> result . var		371294	0					
ANR	371678	PtrMemberAccess	opline -> result		371294	0					
ANR	371679	Identifier	opline		371294	0					
ANR	371680	Identifier	result		371294	1					
ANR	371681	Identifier	var		371294	1					
ANR	371682	Argument	zptr		371294	1					
ANR	371683	Identifier	zptr		371294	0					
ANR	371684	ElseStatement	else		371294	0					
ANR	371685	CompoundStatement		53:9:1607:1607	371294	0					
ANR	371686	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	16472:3:495518:495737	371294	0	True				
ANR	371687	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		371294	0					
ANR	371688	Callee	zend_assign_op_overloaded_property		371294	0					
ANR	371689	Identifier	zend_assign_op_overloaded_property		371294	0					
ANR	371690	ArgumentList	object		371294	1					
ANR	371691	Argument	object		371294	0					
ANR	371692	Identifier	object		371294	0					
ANR	371693	Argument	property		371294	1					
ANR	371694	Identifier	property		371294	0					
ANR	371695	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		371294	2					
ANR	371696	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		371294	0					
ANR	371697	Condition	IS_CONST == IS_CONST		371294	0					
ANR	371698	EqualityExpression	IS_CONST == IS_CONST		371294	0		==			
ANR	371699	Identifier	IS_CONST		371294	0					
ANR	371700	Identifier	IS_CONST		371294	1					
ANR	371701	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		371294	1					
ANR	371702	Callee	CACHE_ADDR		371294	0					
ANR	371703	Identifier	CACHE_ADDR		371294	0					
ANR	371704	ArgumentList	Z_CACHE_SLOT_P ( property )		371294	1					
ANR	371705	Argument	Z_CACHE_SLOT_P ( property )		371294	0					
ANR	371706	CallExpression	Z_CACHE_SLOT_P ( property )		371294	0					
ANR	371707	Callee	Z_CACHE_SLOT_P		371294	0					
ANR	371708	Identifier	Z_CACHE_SLOT_P		371294	0					
ANR	371709	ArgumentList	property		371294	1					
ANR	371710	Argument	property		371294	0					
ANR	371711	Identifier	property		371294	0					
ANR	371712	Identifier	NULL		371294	2					
ANR	371713	Argument	value		371294	3					
ANR	371714	Identifier	value		371294	0					
ANR	371715	Argument	binary_op		371294	4					
ANR	371716	Identifier	binary_op		371294	0					
ANR	371717	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		371294	5					
ANR	371718	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		371294	0					
ANR	371719	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371294	0					
ANR	371720	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371294	0					
ANR	371721	Callee	UNEXPECTED		371294	0					
ANR	371722	Identifier	UNEXPECTED		371294	0					
ANR	371723	ArgumentList	RETURN_VALUE_USED ( opline )		371294	1					
ANR	371724	Argument	RETURN_VALUE_USED ( opline )		371294	0					
ANR	371725	CallExpression	RETURN_VALUE_USED ( opline )		371294	0					
ANR	371726	Callee	RETURN_VALUE_USED		371294	0					
ANR	371727	Identifier	RETURN_VALUE_USED		371294	0					
ANR	371728	ArgumentList	opline		371294	1					
ANR	371729	Argument	opline		371294	0					
ANR	371730	Identifier	opline		371294	0					
ANR	371731	CallExpression	EX_VAR ( opline -> result . var )		371294	1					
ANR	371732	Callee	EX_VAR		371294	0					
ANR	371733	Identifier	EX_VAR		371294	0					
ANR	371734	ArgumentList	opline -> result . var		371294	1					
ANR	371735	Argument	opline -> result . var		371294	0					
ANR	371736	MemberAccess	opline -> result . var		371294	0					
ANR	371737	PtrMemberAccess	opline -> result		371294	0					
ANR	371738	Identifier	opline		371294	0					
ANR	371739	Identifier	result		371294	1					
ANR	371740	Identifier	var		371294	1					
ANR	371741	Identifier	NULL		371294	2					
ANR	371742	Condition	0	16474:10:495753:495753	371294	1	True				
ANR	371743	PrimaryExpression	0		371294	0					
ANR	371744	ExpressionStatement	FREE_OP ( free_op_data1 )	16476:1:495759:495781	371294	11	True				
ANR	371745	CallExpression	FREE_OP ( free_op_data1 )		371294	0					
ANR	371746	Callee	FREE_OP		371294	0					
ANR	371747	Identifier	FREE_OP		371294	0					
ANR	371748	ArgumentList	free_op_data1		371294	1					
ANR	371749	Argument	free_op_data1		371294	0					
ANR	371750	Identifier	free_op_data1		371294	0					
ANR	371751	IfStatement	if ( UNEXPECTED ( free_op1 ) )		371294	12					
ANR	371752	Condition	UNEXPECTED ( free_op1 )	16478:5:495789:495808	371294	0	True				
ANR	371753	CallExpression	UNEXPECTED ( free_op1 )		371294	0					
ANR	371754	Callee	UNEXPECTED		371294	0					
ANR	371755	Identifier	UNEXPECTED		371294	0					
ANR	371756	ArgumentList	free_op1		371294	1					
ANR	371757	Argument	free_op1		371294	0					
ANR	371758	Identifier	free_op1		371294	0					
ANR	371759	CompoundStatement		60:27:1905:1905	371294	1					
ANR	371760	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	16478:28:495812:495840	371294	0	True				
ANR	371761	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		371294	0					
ANR	371762	Callee	zval_ptr_dtor_nogc		371294	0					
ANR	371763	Identifier	zval_ptr_dtor_nogc		371294	0					
ANR	371764	ArgumentList	free_op1		371294	1					
ANR	371765	Argument	free_op1		371294	0					
ANR	371766	Identifier	free_op1		371294	0					
ANR	371767	ExpressionStatement		16478:58:495842:495842	371294	13	True				
ANR	371768	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	16480:1:495880:495908	371294	14	True				
ANR	371769	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		371294	0					
ANR	371770	Callee	ZEND_VM_NEXT_OPCODE_EX		371294	0					
ANR	371771	Identifier	ZEND_VM_NEXT_OPCODE_EX		371294	0					
ANR	371772	ArgumentList	1		371294	1					
ANR	371773	Argument	1		371294	0					
ANR	371774	PrimaryExpression	1		371294	0					
ANR	371775	Argument	2		371294	1					
ANR	371776	PrimaryExpression	2		371294	0					
ANR	371777	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		371294	1					
ANR	371778	Identifier	zend_binary_assign_op_obj_helper_SPEC_VAR_CONST		371294	2					
ANR	371779	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		371294	3					
ANR	371780	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	16418:93:493851:493902	371294	0	True				
ANR	371781	ParameterType	binary_op_type binary_op		371294	0					
ANR	371782	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		371294	1					
ANR	371783	CFGEntryNode	ENTRY		371294		True				
ANR	371784	CFGExitNode	EXIT		371294		True				
ANR	371785	Symbol	opline -> op1		371294						
ANR	371786	Symbol	opline -> op2		371294						
ANR	371787	Symbol	Z_OBJ_P		371294						
ANR	371788	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		371294						
ANR	371789	Symbol	_get_zval_ptr_ptr_var		371294						
ANR	371790	Symbol	free_op_data1		371294						
ANR	371791	Symbol	zptr		371294						
ANR	371792	Symbol	free_op1		371294						
ANR	371793	Symbol	execute_data		371294						
ANR	371794	Symbol	opline -> result		371294						
ANR	371795	Symbol	( opline + 1 ) -> op1		371294						
ANR	371796	Symbol	UNEXPECTED		371294						
ANR	371797	Symbol	E_WARNING		371294						
ANR	371798	Symbol	make_real_object		371294						
ANR	371799	Symbol	RETURN_VALUE_USED		371294						
ANR	371800	Symbol	( opline + 1 ) -> op1 . var		371294						
ANR	371801	Symbol	opline		371294						
ANR	371802	Symbol	get_zval_ptr_r		371294						
ANR	371803	Symbol	property		371294						
ANR	371804	Symbol	opline -> op1 . var		371294						
ANR	371805	Symbol	value		371294						
ANR	371806	Symbol	& free_op1		371294						
ANR	371807	Symbol	binary_op		371294						
ANR	371808	Symbol	BP_VAR_RW		371294						
ANR	371809	Symbol	( opline + 1 ) -> op1_type		371294						
ANR	371810	Symbol	IS_CONST		371294						
ANR	371811	Symbol	NULL		371294						
ANR	371812	Symbol	EX_CONSTANT		371294						
ANR	371813	Symbol	Z_CACHE_SLOT_P		371294						
ANR	371814	Symbol	Z_TYPE_P		371294						
ANR	371815	Symbol	* Z_OBJ_HT_P		371294						
ANR	371816	Symbol	CACHE_ADDR		371294						
ANR	371817	Symbol	* opline		371294						
ANR	371818	Symbol	Z_OBJ_HT_P		371294						
ANR	371819	Symbol	EX_VAR		371294						
ANR	371820	Symbol	IS_OBJECT		371294						
ANR	371821	Symbol	IS_VAR		371294						
ANR	371822	Symbol	EXPECTED		371294						
ANR	371823	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		371294						
ANR	371824	Symbol	& free_op_data1		371294						
ANR	371825	Symbol	opline -> result . var		371294						
ANR	371826	Symbol	object		371294						
ANR	371827	Symbol	IS_UNUSED		371294						
ANR	371828	Function	zend_binary_assign_op_dim_helper_SPEC_VAR_CONST	16483:0:495913:498203							
ANR	371829	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_VAR_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		371828	0					
ANR	371830	CompoundStatement		16484:0:496060:498203	371828	0					
ANR	371831	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op_data1 ;"	16485:1:496063:496111	371828	0	True				
ANR	371832	IdentifierDecl	free_op1		371828	0					
ANR	371833	IdentifierDeclType	USE_OPLINE zend_free_op		371828	0					
ANR	371834	Identifier	free_op1		371828	1					
ANR	371835	IdentifierDecl	free_op_data1		371828	1					
ANR	371836	IdentifierDeclType	USE_OPLINE zend_free_op		371828	0					
ANR	371837	Identifier	free_op_data1		371828	1					
ANR	371838	IdentifierDeclStatement	"zval * var_ptr , rv ;"	16487:1:496114:496131	371828	1	True				
ANR	371839	IdentifierDecl	* var_ptr		371828	0					
ANR	371840	IdentifierDeclType	zval *		371828	0					
ANR	371841	Identifier	var_ptr		371828	1					
ANR	371842	IdentifierDecl	rv		371828	1					
ANR	371843	IdentifierDeclType	zval		371828	0					
ANR	371844	Identifier	rv		371828	1					
ANR	371845	IdentifierDeclStatement	"zval * value , * container , * dim ;"	16488:1:496134:496163	371828	2	True				
ANR	371846	IdentifierDecl	* value		371828	0					
ANR	371847	IdentifierDeclType	zval *		371828	0					
ANR	371848	Identifier	value		371828	1					
ANR	371849	IdentifierDecl	* container		371828	1					
ANR	371850	IdentifierDeclType	zval *		371828	0					
ANR	371851	Identifier	container		371828	1					
ANR	371852	IdentifierDecl	* dim		371828	2					
ANR	371853	IdentifierDeclType	zval *		371828	0					
ANR	371854	Identifier	dim		371828	1					
ANR	371855	ExpressionStatement	SAVE_OPLINE ( )	16490:1:496167:496180	371828	3	True				
ANR	371856	CallExpression	SAVE_OPLINE ( )		371828	0					
ANR	371857	Callee	SAVE_OPLINE		371828	0					
ANR	371858	Identifier	SAVE_OPLINE		371828	0					
ANR	371859	ArgumentList			371828	1					
ANR	371860	ExpressionStatement	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	16491:1:496183:496258	371828	4	True				
ANR	371861	AssignmentExpression	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		371828	0		=			
ANR	371862	Identifier	container		371828	0					
ANR	371863	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		371828	1					
ANR	371864	Callee	_get_zval_ptr_ptr_var		371828	0					
ANR	371865	Identifier	_get_zval_ptr_ptr_var		371828	0					
ANR	371866	ArgumentList	opline -> op1 . var		371828	1					
ANR	371867	Argument	opline -> op1 . var		371828	0					
ANR	371868	MemberAccess	opline -> op1 . var		371828	0					
ANR	371869	PtrMemberAccess	opline -> op1		371828	0					
ANR	371870	Identifier	opline		371828	0					
ANR	371871	Identifier	op1		371828	1					
ANR	371872	Identifier	var		371828	1					
ANR	371873	Argument	execute_data		371828	1					
ANR	371874	Identifier	execute_data		371828	0					
ANR	371875	Argument	& free_op1		371828	2					
ANR	371876	UnaryOperationExpression	& free_op1		371828	0					
ANR	371877	UnaryOperator	&		371828	0					
ANR	371878	Identifier	free_op1		371828	1					
ANR	371879	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		371828	5					
ANR	371880	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	16492:5:496265:496325	371828	0	True				
ANR	371881	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		371828	0		&&			
ANR	371882	EqualityExpression	IS_VAR == IS_UNUSED		371828	0		==			
ANR	371883	Identifier	IS_VAR		371828	0					
ANR	371884	Identifier	IS_UNUSED		371828	1					
ANR	371885	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		371828	1					
ANR	371886	Callee	UNEXPECTED		371828	0					
ANR	371887	Identifier	UNEXPECTED		371828	0					
ANR	371888	ArgumentList	Z_OBJ_P ( container ) == NULL		371828	1					
ANR	371889	Argument	Z_OBJ_P ( container ) == NULL		371828	0					
ANR	371890	EqualityExpression	Z_OBJ_P ( container ) == NULL		371828	0		==			
ANR	371891	CallExpression	Z_OBJ_P ( container )		371828	0					
ANR	371892	Callee	Z_OBJ_P		371828	0					
ANR	371893	Identifier	Z_OBJ_P		371828	0					
ANR	371894	ArgumentList	container		371828	1					
ANR	371895	Argument	container		371828	0					
ANR	371896	Identifier	container		371828	0					
ANR	371897	Identifier	NULL		371828	1					
ANR	371898	CompoundStatement		9:68:267:267	371828	1					
ANR	371899	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	16493:2:496332:496396	371828	0	True				
ANR	371900	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		371828	0					
ANR	371901	Callee	zend_throw_error		371828	0					
ANR	371902	Identifier	zend_throw_error		371828	0					
ANR	371903	ArgumentList	NULL		371828	1					
ANR	371904	Argument	NULL		371828	0					
ANR	371905	Identifier	NULL		371828	0					
ANR	371906	Argument	"""Using $this when not in object context"""		371828	1					
ANR	371907	PrimaryExpression	"""Using $this when not in object context"""		371828	0					
ANR	371908	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	16494:2:496400:496460	371828	1	True				
ANR	371909	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		371828	0					
ANR	371910	Callee	FREE_UNFETCHED_OP		371828	0					
ANR	371911	Identifier	FREE_UNFETCHED_OP		371828	0					
ANR	371912	ArgumentList	( opline + 1 ) -> op1_type		371828	1					
ANR	371913	Argument	( opline + 1 ) -> op1_type		371828	0					
ANR	371914	PtrMemberAccess	( opline + 1 ) -> op1_type		371828	0					
ANR	371915	AdditiveExpression	opline + 1		371828	0		+			
ANR	371916	Identifier	opline		371828	0					
ANR	371917	PrimaryExpression	1		371828	1					
ANR	371918	Identifier	op1_type		371828	1					
ANR	371919	Argument	( opline + 1 ) -> op1 . var		371828	1					
ANR	371920	MemberAccess	( opline + 1 ) -> op1 . var		371828	0					
ANR	371921	PtrMemberAccess	( opline + 1 ) -> op1		371828	0					
ANR	371922	AdditiveExpression	opline + 1		371828	0		+			
ANR	371923	Identifier	opline		371828	0					
ANR	371924	PrimaryExpression	1		371828	1					
ANR	371925	Identifier	op1		371828	1					
ANR	371926	Identifier	var		371828	1					
ANR	371927	ExpressionStatement	HANDLE_EXCEPTION ( )	16496:2:496465:496483	371828	2	True				
ANR	371928	CallExpression	HANDLE_EXCEPTION ( )		371828	0					
ANR	371929	Callee	HANDLE_EXCEPTION		371828	0					
ANR	371930	Identifier	HANDLE_EXCEPTION		371828	0					
ANR	371931	ArgumentList			371828	1					
ANR	371932	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( container == NULL ) )		371828	6					
ANR	371933	Condition	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )	16498:5:496493:496541	371828	0	True				
ANR	371934	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )		371828	0		&&			
ANR	371935	EqualityExpression	IS_VAR == IS_VAR		371828	0		==			
ANR	371936	Identifier	IS_VAR		371828	0					
ANR	371937	Identifier	IS_VAR		371828	1					
ANR	371938	CallExpression	UNEXPECTED ( container == NULL )		371828	1					
ANR	371939	Callee	UNEXPECTED		371828	0					
ANR	371940	Identifier	UNEXPECTED		371828	0					
ANR	371941	ArgumentList	container == NULL		371828	1					
ANR	371942	Argument	container == NULL		371828	0					
ANR	371943	EqualityExpression	container == NULL		371828	0		==			
ANR	371944	Identifier	container		371828	0					
ANR	371945	Identifier	NULL		371828	1					
ANR	371946	CompoundStatement		15:56:483:483	371828	1					
ANR	371947	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	16499:2:496548:496610	371828	0	True				
ANR	371948	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		371828	0					
ANR	371949	Callee	zend_throw_error		371828	0					
ANR	371950	Identifier	zend_throw_error		371828	0					
ANR	371951	ArgumentList	NULL		371828	1					
ANR	371952	Argument	NULL		371828	0					
ANR	371953	Identifier	NULL		371828	0					
ANR	371954	Argument	"""Cannot use string offset as an array"""		371828	1					
ANR	371955	PrimaryExpression	"""Cannot use string offset as an array"""		371828	0					
ANR	371956	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	16500:2:496614:496674	371828	1	True				
ANR	371957	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		371828	0					
ANR	371958	Callee	FREE_UNFETCHED_OP		371828	0					
ANR	371959	Identifier	FREE_UNFETCHED_OP		371828	0					
ANR	371960	ArgumentList	( opline + 1 ) -> op1_type		371828	1					
ANR	371961	Argument	( opline + 1 ) -> op1_type		371828	0					
ANR	371962	PtrMemberAccess	( opline + 1 ) -> op1_type		371828	0					
ANR	371963	AdditiveExpression	opline + 1		371828	0		+			
ANR	371964	Identifier	opline		371828	0					
ANR	371965	PrimaryExpression	1		371828	1					
ANR	371966	Identifier	op1_type		371828	1					
ANR	371967	Argument	( opline + 1 ) -> op1 . var		371828	1					
ANR	371968	MemberAccess	( opline + 1 ) -> op1 . var		371828	0					
ANR	371969	PtrMemberAccess	( opline + 1 ) -> op1		371828	0					
ANR	371970	AdditiveExpression	opline + 1		371828	0		+			
ANR	371971	Identifier	opline		371828	0					
ANR	371972	PrimaryExpression	1		371828	1					
ANR	371973	Identifier	op1		371828	1					
ANR	371974	Identifier	var		371828	1					
ANR	371975	ExpressionStatement	HANDLE_EXCEPTION ( )	16502:2:496679:496697	371828	2	True				
ANR	371976	CallExpression	HANDLE_EXCEPTION ( )		371828	0					
ANR	371977	Callee	HANDLE_EXCEPTION		371828	0					
ANR	371978	Identifier	HANDLE_EXCEPTION		371828	0					
ANR	371979	ArgumentList			371828	1					
ANR	371980	ExpressionStatement	dim = EX_CONSTANT ( opline -> op2 )	16505:1:496704:496734	371828	7	True				
ANR	371981	AssignmentExpression	dim = EX_CONSTANT ( opline -> op2 )		371828	0		=			
ANR	371982	Identifier	dim		371828	0					
ANR	371983	CallExpression	EX_CONSTANT ( opline -> op2 )		371828	1					
ANR	371984	Callee	EX_CONSTANT		371828	0					
ANR	371985	Identifier	EX_CONSTANT		371828	0					
ANR	371986	ArgumentList	opline -> op2		371828	1					
ANR	371987	Argument	opline -> op2		371828	0					
ANR	371988	PtrMemberAccess	opline -> op2		371828	0					
ANR	371989	Identifier	opline		371828	0					
ANR	371990	Identifier	op2		371828	1					
ANR	371991	DoStatement	do		371828	8					
ANR	371992	CompoundStatement		24:4:680:680	371828	0					
ANR	371993	IfStatement	if ( IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		371828	0					
ANR	371994	Condition	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	16508:6:496749:496814	371828	0	True				
ANR	371995	OrExpression	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		371828	0		||			
ANR	371996	EqualityExpression	IS_VAR == IS_UNUSED		371828	0		==			
ANR	371997	Identifier	IS_VAR		371828	0					
ANR	371998	Identifier	IS_UNUSED		371828	1					
ANR	371999	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		371828	1					
ANR	372000	Callee	UNEXPECTED		371828	0					
ANR	372001	Identifier	UNEXPECTED		371828	0					
ANR	372002	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		371828	1					
ANR	372003	Argument	Z_TYPE_P ( container ) != IS_ARRAY		371828	0					
ANR	372004	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		371828	0		!=			
ANR	372005	CallExpression	Z_TYPE_P ( container )		371828	0					
ANR	372006	Callee	Z_TYPE_P		371828	0					
ANR	372007	Identifier	Z_TYPE_P		371828	0					
ANR	372008	ArgumentList	container		371828	1					
ANR	372009	Argument	container		371828	0					
ANR	372010	Identifier	container		371828	0					
ANR	372011	Identifier	IS_ARRAY		371828	1					
ANR	372012	CompoundStatement		25:74:756:756	371828	1					
ANR	372013	IfStatement	if ( IS_VAR != IS_UNUSED )		371828	0					
ANR	372014	Condition	IS_VAR != IS_UNUSED	16509:7:496826:496844	371828	0	True				
ANR	372015	EqualityExpression	IS_VAR != IS_UNUSED		371828	0		!=			
ANR	372016	Identifier	IS_VAR		371828	0					
ANR	372017	Identifier	IS_UNUSED		371828	1					
ANR	372018	CompoundStatement		26:28:786:786	371828	1					
ANR	372019	ExpressionStatement	ZVAL_DEREF ( container )	16510:4:496853:496874	371828	0	True				
ANR	372020	CallExpression	ZVAL_DEREF ( container )		371828	0					
ANR	372021	Callee	ZVAL_DEREF		371828	0					
ANR	372022	Identifier	ZVAL_DEREF		371828	0					
ANR	372023	ArgumentList	container		371828	1					
ANR	372024	Argument	container		371828	0					
ANR	372025	Identifier	container		371828	0					
ANR	372026	IfStatement	if ( IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		371828	1					
ANR	372027	Condition	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	16512:7:496888:496952	371828	0	True				
ANR	372028	OrExpression	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		371828	0		||			
ANR	372029	EqualityExpression	IS_VAR == IS_UNUSED		371828	0		==			
ANR	372030	Identifier	IS_VAR		371828	0					
ANR	372031	Identifier	IS_UNUSED		371828	1					
ANR	372032	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		371828	1					
ANR	372033	Callee	EXPECTED		371828	0					
ANR	372034	Identifier	EXPECTED		371828	0					
ANR	372035	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		371828	1					
ANR	372036	Argument	Z_TYPE_P ( container ) == IS_OBJECT		371828	0					
ANR	372037	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		371828	0		==			
ANR	372038	CallExpression	Z_TYPE_P ( container )		371828	0					
ANR	372039	Callee	Z_TYPE_P		371828	0					
ANR	372040	Identifier	Z_TYPE_P		371828	0					
ANR	372041	ArgumentList	container		371828	1					
ANR	372042	Argument	container		371828	0					
ANR	372043	Identifier	container		371828	0					
ANR	372044	Identifier	IS_OBJECT		371828	1					
ANR	372045	CompoundStatement		29:74:894:894	371828	1					
ANR	372046	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	16513:4:496961:497052	371828	0	True				
ANR	372047	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		371828	0		=			
ANR	372048	Identifier	value		371828	0					
ANR	372049	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		371828	1					
ANR	372050	Callee	get_zval_ptr_r		371828	0					
ANR	372051	Identifier	get_zval_ptr_r		371828	0					
ANR	372052	ArgumentList	( opline + 1 ) -> op1_type		371828	1					
ANR	372053	Argument	( opline + 1 ) -> op1_type		371828	0					
ANR	372054	PtrMemberAccess	( opline + 1 ) -> op1_type		371828	0					
ANR	372055	AdditiveExpression	opline + 1		371828	0		+			
ANR	372056	Identifier	opline		371828	0					
ANR	372057	PrimaryExpression	1		371828	1					
ANR	372058	Identifier	op1_type		371828	1					
ANR	372059	Argument	( opline + 1 ) -> op1		371828	1					
ANR	372060	PtrMemberAccess	( opline + 1 ) -> op1		371828	0					
ANR	372061	AdditiveExpression	opline + 1		371828	0		+			
ANR	372062	Identifier	opline		371828	0					
ANR	372063	PrimaryExpression	1		371828	1					
ANR	372064	Identifier	op1		371828	1					
ANR	372065	Argument	execute_data		371828	2					
ANR	372066	Identifier	execute_data		371828	0					
ANR	372067	Argument	& free_op_data1		371828	3					
ANR	372068	UnaryOperationExpression	& free_op_data1		371828	0					
ANR	372069	UnaryOperator	&		371828	0					
ANR	372070	Identifier	free_op_data1		371828	1					
ANR	372071	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	16514:4:497058:497196	371828	1	True				
ANR	372072	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		371828	0					
ANR	372073	Callee	zend_binary_assign_op_obj_dim		371828	0					
ANR	372074	Identifier	zend_binary_assign_op_obj_dim		371828	0					
ANR	372075	ArgumentList	container		371828	1					
ANR	372076	Argument	container		371828	0					
ANR	372077	Identifier	container		371828	0					
ANR	372078	Argument	dim		371828	1					
ANR	372079	Identifier	dim		371828	0					
ANR	372080	Argument	value		371828	2					
ANR	372081	Identifier	value		371828	0					
ANR	372082	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		371828	3					
ANR	372083	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		371828	0					
ANR	372084	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371828	0					
ANR	372085	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371828	0					
ANR	372086	Callee	UNEXPECTED		371828	0					
ANR	372087	Identifier	UNEXPECTED		371828	0					
ANR	372088	ArgumentList	RETURN_VALUE_USED ( opline )		371828	1					
ANR	372089	Argument	RETURN_VALUE_USED ( opline )		371828	0					
ANR	372090	CallExpression	RETURN_VALUE_USED ( opline )		371828	0					
ANR	372091	Callee	RETURN_VALUE_USED		371828	0					
ANR	372092	Identifier	RETURN_VALUE_USED		371828	0					
ANR	372093	ArgumentList	opline		371828	1					
ANR	372094	Argument	opline		371828	0					
ANR	372095	Identifier	opline		371828	0					
ANR	372096	CallExpression	EX_VAR ( opline -> result . var )		371828	1					
ANR	372097	Callee	EX_VAR		371828	0					
ANR	372098	Identifier	EX_VAR		371828	0					
ANR	372099	ArgumentList	opline -> result . var		371828	1					
ANR	372100	Argument	opline -> result . var		371828	0					
ANR	372101	MemberAccess	opline -> result . var		371828	0					
ANR	372102	PtrMemberAccess	opline -> result		371828	0					
ANR	372103	Identifier	opline		371828	0					
ANR	372104	Identifier	result		371828	1					
ANR	372105	Identifier	var		371828	1					
ANR	372106	Identifier	NULL		371828	2					
ANR	372107	Argument	binary_op		371828	4					
ANR	372108	Identifier	binary_op		371828	0					
ANR	372109	BreakStatement	break ;	16515:4:497202:497207	371828	2	True				
ANR	372110	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CONST )"	16519:2:497221:497283	371828	1	True				
ANR	372111	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CONST )"		371828	0					
ANR	372112	Callee	zend_fetch_dimension_address_RW		371828	0					
ANR	372113	Identifier	zend_fetch_dimension_address_RW		371828	0					
ANR	372114	ArgumentList	& rv		371828	1					
ANR	372115	Argument	& rv		371828	0					
ANR	372116	UnaryOperationExpression	& rv		371828	0					
ANR	372117	UnaryOperator	&		371828	0					
ANR	372118	Identifier	rv		371828	1					
ANR	372119	Argument	container		371828	1					
ANR	372120	Identifier	container		371828	0					
ANR	372121	Argument	dim		371828	2					
ANR	372122	Identifier	dim		371828	0					
ANR	372123	Argument	IS_CONST		371828	3					
ANR	372124	Identifier	IS_CONST		371828	0					
ANR	372125	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	16520:2:497287:497378	371828	2	True				
ANR	372126	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		371828	0		=			
ANR	372127	Identifier	value		371828	0					
ANR	372128	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		371828	1					
ANR	372129	Callee	get_zval_ptr_r		371828	0					
ANR	372130	Identifier	get_zval_ptr_r		371828	0					
ANR	372131	ArgumentList	( opline + 1 ) -> op1_type		371828	1					
ANR	372132	Argument	( opline + 1 ) -> op1_type		371828	0					
ANR	372133	PtrMemberAccess	( opline + 1 ) -> op1_type		371828	0					
ANR	372134	AdditiveExpression	opline + 1		371828	0		+			
ANR	372135	Identifier	opline		371828	0					
ANR	372136	PrimaryExpression	1		371828	1					
ANR	372137	Identifier	op1_type		371828	1					
ANR	372138	Argument	( opline + 1 ) -> op1		371828	1					
ANR	372139	PtrMemberAccess	( opline + 1 ) -> op1		371828	0					
ANR	372140	AdditiveExpression	opline + 1		371828	0		+			
ANR	372141	Identifier	opline		371828	0					
ANR	372142	PrimaryExpression	1		371828	1					
ANR	372143	Identifier	op1		371828	1					
ANR	372144	Argument	execute_data		371828	2					
ANR	372145	Identifier	execute_data		371828	0					
ANR	372146	Argument	& free_op_data1		371828	3					
ANR	372147	UnaryOperationExpression	& free_op_data1		371828	0					
ANR	372148	UnaryOperator	&		371828	0					
ANR	372149	Identifier	free_op_data1		371828	1					
ANR	372150	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	16521:2:497382:497420	371828	3	True				
ANR	372151	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		371828	0					
ANR	372152	Callee	ZEND_ASSERT		371828	0					
ANR	372153	Identifier	ZEND_ASSERT		371828	0					
ANR	372154	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		371828	1					
ANR	372155	Argument	Z_TYPE ( rv ) == IS_INDIRECT		371828	0					
ANR	372156	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		371828	0		==			
ANR	372157	CallExpression	Z_TYPE ( rv )		371828	0					
ANR	372158	Callee	Z_TYPE		371828	0					
ANR	372159	Identifier	Z_TYPE		371828	0					
ANR	372160	ArgumentList	rv		371828	1					
ANR	372161	Argument	rv		371828	0					
ANR	372162	Identifier	rv		371828	0					
ANR	372163	Identifier	IS_INDIRECT		371828	1					
ANR	372164	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	16522:2:497424:497448	371828	4	True				
ANR	372165	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		371828	0		=			
ANR	372166	Identifier	var_ptr		371828	0					
ANR	372167	CallExpression	Z_INDIRECT ( rv )		371828	1					
ANR	372168	Callee	Z_INDIRECT		371828	0					
ANR	372169	Identifier	Z_INDIRECT		371828	0					
ANR	372170	ArgumentList	rv		371828	1					
ANR	372171	Argument	rv		371828	0					
ANR	372172	Identifier	rv		371828	0					
ANR	372173	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		371828	5					
ANR	372174	Condition	UNEXPECTED ( var_ptr == NULL )	16524:6:497457:497483	371828	0	True				
ANR	372175	CallExpression	UNEXPECTED ( var_ptr == NULL )		371828	0					
ANR	372176	Callee	UNEXPECTED		371828	0					
ANR	372177	Identifier	UNEXPECTED		371828	0					
ANR	372178	ArgumentList	var_ptr == NULL		371828	1					
ANR	372179	Argument	var_ptr == NULL		371828	0					
ANR	372180	EqualityExpression	var_ptr == NULL		371828	0		==			
ANR	372181	Identifier	var_ptr		371828	0					
ANR	372182	Identifier	NULL		371828	1					
ANR	372183	CompoundStatement		41:35:1425:1425	371828	1					
ANR	372184	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	16525:3:497491:497590	371828	0	True				
ANR	372185	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		371828	0					
ANR	372186	Callee	zend_throw_error		371828	0					
ANR	372187	Identifier	zend_throw_error		371828	0					
ANR	372188	ArgumentList	NULL		371828	1					
ANR	372189	Argument	NULL		371828	0					
ANR	372190	Identifier	NULL		371828	0					
ANR	372191	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		371828	1					
ANR	372192	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		371828	0					
ANR	372193	ExpressionStatement	FREE_OP ( free_op_data1 )	16527:3:497596:497618	371828	1	True				
ANR	372194	CallExpression	FREE_OP ( free_op_data1 )		371828	0					
ANR	372195	Callee	FREE_OP		371828	0					
ANR	372196	Identifier	FREE_OP		371828	0					
ANR	372197	ArgumentList	free_op_data1		371828	1					
ANR	372198	Argument	free_op_data1		371828	0					
ANR	372199	Identifier	free_op_data1		371828	0					
ANR	372200	IfStatement	if ( UNEXPECTED ( free_op1 ) )		371828	2					
ANR	372201	Condition	UNEXPECTED ( free_op1 )	16528:7:497627:497646	371828	0	True				
ANR	372202	CallExpression	UNEXPECTED ( free_op1 )		371828	0					
ANR	372203	Callee	UNEXPECTED		371828	0					
ANR	372204	Identifier	UNEXPECTED		371828	0					
ANR	372205	ArgumentList	free_op1		371828	1					
ANR	372206	Argument	free_op1		371828	0					
ANR	372207	Identifier	free_op1		371828	0					
ANR	372208	CompoundStatement		45:29:1588:1588	371828	1					
ANR	372209	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	16528:30:497650:497678	371828	0	True				
ANR	372210	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		371828	0					
ANR	372211	Callee	zval_ptr_dtor_nogc		371828	0					
ANR	372212	Identifier	zval_ptr_dtor_nogc		371828	0					
ANR	372213	ArgumentList	free_op1		371828	1					
ANR	372214	Argument	free_op1		371828	0					
ANR	372215	Identifier	free_op1		371828	0					
ANR	372216	ExpressionStatement		16528:60:497680:497680	371828	3	True				
ANR	372217	ExpressionStatement	HANDLE_EXCEPTION ( )	16529:3:497685:497703	371828	4	True				
ANR	372218	CallExpression	HANDLE_EXCEPTION ( )		371828	0					
ANR	372219	Callee	HANDLE_EXCEPTION		371828	0					
ANR	372220	Identifier	HANDLE_EXCEPTION		371828	0					
ANR	372221	ArgumentList			371828	1					
ANR	372222	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		371828	6					
ANR	372223	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	16532:6:497716:497753	371828	0	True				
ANR	372224	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		371828	0					
ANR	372225	Callee	UNEXPECTED		371828	0					
ANR	372226	Identifier	UNEXPECTED		371828	0					
ANR	372227	ArgumentList	var_ptr == & EG ( error_zval )		371828	1					
ANR	372228	Argument	var_ptr == & EG ( error_zval )		371828	0					
ANR	372229	EqualityExpression	var_ptr == & EG ( error_zval )		371828	0		==			
ANR	372230	Identifier	var_ptr		371828	0					
ANR	372231	UnaryOperationExpression	& EG ( error_zval )		371828	1					
ANR	372232	UnaryOperator	&		371828	0					
ANR	372233	CallExpression	EG ( error_zval )		371828	1					
ANR	372234	Callee	EG		371828	0					
ANR	372235	Identifier	EG		371828	0					
ANR	372236	ArgumentList	error_zval		371828	1					
ANR	372237	Argument	error_zval		371828	0					
ANR	372238	Identifier	error_zval		371828	0					
ANR	372239	CompoundStatement		49:46:1695:1695	371828	1					
ANR	372240	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		371828	0					
ANR	372241	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16533:7:497765:497801	371828	0	True				
ANR	372242	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371828	0					
ANR	372243	Callee	UNEXPECTED		371828	0					
ANR	372244	Identifier	UNEXPECTED		371828	0					
ANR	372245	ArgumentList	RETURN_VALUE_USED ( opline )		371828	1					
ANR	372246	Argument	RETURN_VALUE_USED ( opline )		371828	0					
ANR	372247	CallExpression	RETURN_VALUE_USED ( opline )		371828	0					
ANR	372248	Callee	RETURN_VALUE_USED		371828	0					
ANR	372249	Identifier	RETURN_VALUE_USED		371828	0					
ANR	372250	ArgumentList	opline		371828	1					
ANR	372251	Argument	opline		371828	0					
ANR	372252	Identifier	opline		371828	0					
ANR	372253	CompoundStatement		50:46:1743:1743	371828	1					
ANR	372254	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	16534:4:497810:497847	371828	0	True				
ANR	372255	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		371828	0					
ANR	372256	Callee	ZVAL_NULL		371828	0					
ANR	372257	Identifier	ZVAL_NULL		371828	0					
ANR	372258	ArgumentList	EX_VAR ( opline -> result . var )		371828	1					
ANR	372259	Argument	EX_VAR ( opline -> result . var )		371828	0					
ANR	372260	CallExpression	EX_VAR ( opline -> result . var )		371828	0					
ANR	372261	Callee	EX_VAR		371828	0					
ANR	372262	Identifier	EX_VAR		371828	0					
ANR	372263	ArgumentList	opline -> result . var		371828	1					
ANR	372264	Argument	opline -> result . var		371828	0					
ANR	372265	MemberAccess	opline -> result . var		371828	0					
ANR	372266	PtrMemberAccess	opline -> result		371828	0					
ANR	372267	Identifier	opline		371828	0					
ANR	372268	Identifier	result		371828	1					
ANR	372269	Identifier	var		371828	1					
ANR	372270	ElseStatement	else		371828	0					
ANR	372271	CompoundStatement		53:9:1802:1802	371828	0					
ANR	372272	ExpressionStatement	ZVAL_DEREF ( var_ptr )	16537:3:497868:497887	371828	0	True				
ANR	372273	CallExpression	ZVAL_DEREF ( var_ptr )		371828	0					
ANR	372274	Callee	ZVAL_DEREF		371828	0					
ANR	372275	Identifier	ZVAL_DEREF		371828	0					
ANR	372276	ArgumentList	var_ptr		371828	1					
ANR	372277	Argument	var_ptr		371828	0					
ANR	372278	Identifier	var_ptr		371828	0					
ANR	372279	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	16538:3:497892:497920	371828	1	True				
ANR	372280	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		371828	0					
ANR	372281	Callee	SEPARATE_ZVAL_NOREF		371828	0					
ANR	372282	Identifier	SEPARATE_ZVAL_NOREF		371828	0					
ANR	372283	ArgumentList	var_ptr		371828	1					
ANR	372284	Argument	var_ptr		371828	0					
ANR	372285	Identifier	var_ptr		371828	0					
ANR	372286	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	16540:3:497926:497960	371828	2	True				
ANR	372287	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		371828	0					
ANR	372288	Callee	binary_op		371828	0					
ANR	372289	Identifier	binary_op		371828	0					
ANR	372290	ArgumentList	var_ptr		371828	1					
ANR	372291	Argument	var_ptr		371828	0					
ANR	372292	Identifier	var_ptr		371828	0					
ANR	372293	Argument	var_ptr		371828	1					
ANR	372294	Identifier	var_ptr		371828	0					
ANR	372295	Argument	value		371828	2					
ANR	372296	Identifier	value		371828	0					
ANR	372297	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		371828	3					
ANR	372298	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16542:7:497970:498006	371828	0	True				
ANR	372299	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		371828	0					
ANR	372300	Callee	UNEXPECTED		371828	0					
ANR	372301	Identifier	UNEXPECTED		371828	0					
ANR	372302	ArgumentList	RETURN_VALUE_USED ( opline )		371828	1					
ANR	372303	Argument	RETURN_VALUE_USED ( opline )		371828	0					
ANR	372304	CallExpression	RETURN_VALUE_USED ( opline )		371828	0					
ANR	372305	Callee	RETURN_VALUE_USED		371828	0					
ANR	372306	Identifier	RETURN_VALUE_USED		371828	0					
ANR	372307	ArgumentList	opline		371828	1					
ANR	372308	Argument	opline		371828	0					
ANR	372309	Identifier	opline		371828	0					
ANR	372310	CompoundStatement		59:46:1948:1948	371828	1					
ANR	372311	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	16543:4:498015:498061	371828	0	True				
ANR	372312	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		371828	0					
ANR	372313	Callee	ZVAL_COPY		371828	0					
ANR	372314	Identifier	ZVAL_COPY		371828	0					
ANR	372315	ArgumentList	EX_VAR ( opline -> result . var )		371828	1					
ANR	372316	Argument	EX_VAR ( opline -> result . var )		371828	0					
ANR	372317	CallExpression	EX_VAR ( opline -> result . var )		371828	0					
ANR	372318	Callee	EX_VAR		371828	0					
ANR	372319	Identifier	EX_VAR		371828	0					
ANR	372320	ArgumentList	opline -> result . var		371828	1					
ANR	372321	Argument	opline -> result . var		371828	0					
ANR	372322	MemberAccess	opline -> result . var		371828	0					
ANR	372323	PtrMemberAccess	opline -> result		371828	0					
ANR	372324	Identifier	opline		371828	0					
ANR	372325	Identifier	result		371828	1					
ANR	372326	Identifier	var		371828	1					
ANR	372327	Argument	var_ptr		371828	1					
ANR	372328	Identifier	var_ptr		371828	0					
ANR	372329	Condition	0	16546:10:498082:498082	371828	1	True				
ANR	372330	PrimaryExpression	0		371828	0					
ANR	372331	ExpressionStatement	FREE_OP ( free_op_data1 )	16548:1:498088:498110	371828	9	True				
ANR	372332	CallExpression	FREE_OP ( free_op_data1 )		371828	0					
ANR	372333	Callee	FREE_OP		371828	0					
ANR	372334	Identifier	FREE_OP		371828	0					
ANR	372335	ArgumentList	free_op_data1		371828	1					
ANR	372336	Argument	free_op_data1		371828	0					
ANR	372337	Identifier	free_op_data1		371828	0					
ANR	372338	IfStatement	if ( UNEXPECTED ( free_op1 ) )		371828	10					
ANR	372339	Condition	UNEXPECTED ( free_op1 )	16549:5:498117:498136	371828	0	True				
ANR	372340	CallExpression	UNEXPECTED ( free_op1 )		371828	0					
ANR	372341	Callee	UNEXPECTED		371828	0					
ANR	372342	Identifier	UNEXPECTED		371828	0					
ANR	372343	ArgumentList	free_op1		371828	1					
ANR	372344	Argument	free_op1		371828	0					
ANR	372345	Identifier	free_op1		371828	0					
ANR	372346	CompoundStatement		66:27:2078:2078	371828	1					
ANR	372347	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	16549:28:498140:498168	371828	0	True				
ANR	372348	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		371828	0					
ANR	372349	Callee	zval_ptr_dtor_nogc		371828	0					
ANR	372350	Identifier	zval_ptr_dtor_nogc		371828	0					
ANR	372351	ArgumentList	free_op1		371828	1					
ANR	372352	Argument	free_op1		371828	0					
ANR	372353	Identifier	free_op1		371828	0					
ANR	372354	ExpressionStatement		16549:58:498170:498170	371828	11	True				
ANR	372355	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	16550:1:498173:498201	371828	12	True				
ANR	372356	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		371828	0					
ANR	372357	Callee	ZEND_VM_NEXT_OPCODE_EX		371828	0					
ANR	372358	Identifier	ZEND_VM_NEXT_OPCODE_EX		371828	0					
ANR	372359	ArgumentList	1		371828	1					
ANR	372360	Argument	1		371828	0					
ANR	372361	PrimaryExpression	1		371828	0					
ANR	372362	Argument	2		371828	1					
ANR	372363	PrimaryExpression	2		371828	0					
ANR	372364	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		371828	1					
ANR	372365	Identifier	zend_binary_assign_op_dim_helper_SPEC_VAR_CONST		371828	2					
ANR	372366	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		371828	3					
ANR	372367	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	16483:93:496006:496057	371828	0	True				
ANR	372368	ParameterType	binary_op_type binary_op		371828	0					
ANR	372369	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		371828	1					
ANR	372370	CFGEntryNode	ENTRY		371828		True				
ANR	372371	CFGExitNode	EXIT		371828		True				
ANR	372372	Symbol	container		371828						
ANR	372373	Symbol	opline -> op1		371828						
ANR	372374	Symbol	opline -> op2		371828						
ANR	372375	Symbol	rv		371828						
ANR	372376	Symbol	Z_OBJ_P		371828						
ANR	372377	Symbol	dim		371828						
ANR	372378	Symbol	Z_TYPE		371828						
ANR	372379	Symbol	_get_zval_ptr_ptr_var		371828						
ANR	372380	Symbol	free_op_data1		371828						
ANR	372381	Symbol	& EG		371828						
ANR	372382	Symbol	free_op1		371828						
ANR	372383	Symbol	var_ptr		371828						
ANR	372384	Symbol	execute_data		371828						
ANR	372385	Symbol	opline -> result		371828						
ANR	372386	Symbol	( opline + 1 ) -> op1		371828						
ANR	372387	Symbol	UNEXPECTED		371828						
ANR	372388	Symbol	RETURN_VALUE_USED		371828						
ANR	372389	Symbol	( opline + 1 ) -> op1 . var		371828						
ANR	372390	Symbol	opline		371828						
ANR	372391	Symbol	get_zval_ptr_r		371828						
ANR	372392	Symbol	Z_INDIRECT		371828						
ANR	372393	Symbol	IS_ARRAY		371828						
ANR	372394	Symbol	opline -> op1 . var		371828						
ANR	372395	Symbol	value		371828						
ANR	372396	Symbol	& free_op1		371828						
ANR	372397	Symbol	binary_op		371828						
ANR	372398	Symbol	( opline + 1 ) -> op1_type		371828						
ANR	372399	Symbol	IS_CONST		371828						
ANR	372400	Symbol	NULL		371828						
ANR	372401	Symbol	EX_CONSTANT		371828						
ANR	372402	Symbol	Z_TYPE_P		371828						
ANR	372403	Symbol	& rv		371828						
ANR	372404	Symbol	* opline		371828						
ANR	372405	Symbol	error_zval		371828						
ANR	372406	Symbol	EX_VAR		371828						
ANR	372407	Symbol	IS_OBJECT		371828						
ANR	372408	Symbol	IS_VAR		371828						
ANR	372409	Symbol	EXPECTED		371828						
ANR	372410	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		371828						
ANR	372411	Symbol	& free_op_data1		371828						
ANR	372412	Symbol	opline -> result . var		371828						
ANR	372413	Symbol	IS_UNUSED		371828						
ANR	372414	Symbol	IS_INDIRECT		371828						
ANR	372415	Function	zend_binary_assign_op_helper_SPEC_VAR_CONST	16553:0:498206:499203							
ANR	372416	FunctionDef	zend_binary_assign_op_helper_SPEC_VAR_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		372415	0					
ANR	372417	CompoundStatement		16554:0:498349:499203	372415	0					
ANR	372418	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	16555:1:498352:498385	372415	0	True				
ANR	372419	IdentifierDecl	free_op1		372415	0					
ANR	372420	IdentifierDeclType	USE_OPLINE zend_free_op		372415	0					
ANR	372421	Identifier	free_op1		372415	1					
ANR	372422	IdentifierDeclStatement	zval * var_ptr ;	16557:1:498388:498401	372415	1	True				
ANR	372423	IdentifierDecl	* var_ptr		372415	0					
ANR	372424	IdentifierDeclType	zval *		372415	0					
ANR	372425	Identifier	var_ptr		372415	1					
ANR	372426	IdentifierDeclStatement	zval * value ;	16558:1:498404:498415	372415	2	True				
ANR	372427	IdentifierDecl	* value		372415	0					
ANR	372428	IdentifierDeclType	zval *		372415	0					
ANR	372429	Identifier	value		372415	1					
ANR	372430	ExpressionStatement	SAVE_OPLINE ( )	16560:1:498419:498432	372415	3	True				
ANR	372431	CallExpression	SAVE_OPLINE ( )		372415	0					
ANR	372432	Callee	SAVE_OPLINE		372415	0					
ANR	372433	Identifier	SAVE_OPLINE		372415	0					
ANR	372434	ArgumentList			372415	1					
ANR	372435	ExpressionStatement	value = EX_CONSTANT ( opline -> op2 )	16561:1:498435:498467	372415	4	True				
ANR	372436	AssignmentExpression	value = EX_CONSTANT ( opline -> op2 )		372415	0		=			
ANR	372437	Identifier	value		372415	0					
ANR	372438	CallExpression	EX_CONSTANT ( opline -> op2 )		372415	1					
ANR	372439	Callee	EX_CONSTANT		372415	0					
ANR	372440	Identifier	EX_CONSTANT		372415	0					
ANR	372441	ArgumentList	opline -> op2		372415	1					
ANR	372442	Argument	opline -> op2		372415	0					
ANR	372443	PtrMemberAccess	opline -> op2		372415	0					
ANR	372444	Identifier	opline		372415	0					
ANR	372445	Identifier	op2		372415	1					
ANR	372446	ExpressionStatement	"var_ptr = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	16562:1:498470:498543	372415	5	True				
ANR	372447	AssignmentExpression	"var_ptr = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		372415	0		=			
ANR	372448	Identifier	var_ptr		372415	0					
ANR	372449	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		372415	1					
ANR	372450	Callee	_get_zval_ptr_ptr_var		372415	0					
ANR	372451	Identifier	_get_zval_ptr_ptr_var		372415	0					
ANR	372452	ArgumentList	opline -> op1 . var		372415	1					
ANR	372453	Argument	opline -> op1 . var		372415	0					
ANR	372454	MemberAccess	opline -> op1 . var		372415	0					
ANR	372455	PtrMemberAccess	opline -> op1		372415	0					
ANR	372456	Identifier	opline		372415	0					
ANR	372457	Identifier	op1		372415	1					
ANR	372458	Identifier	var		372415	1					
ANR	372459	Argument	execute_data		372415	1					
ANR	372460	Identifier	execute_data		372415	0					
ANR	372461	Argument	& free_op1		372415	2					
ANR	372462	UnaryOperationExpression	& free_op1		372415	0					
ANR	372463	UnaryOperator	&		372415	0					
ANR	372464	Identifier	free_op1		372415	1					
ANR	372465	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL ) )		372415	6					
ANR	372466	Condition	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL )	16564:5:498551:498597	372415	0	True				
ANR	372467	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL )		372415	0		&&			
ANR	372468	EqualityExpression	IS_VAR == IS_VAR		372415	0		==			
ANR	372469	Identifier	IS_VAR		372415	0					
ANR	372470	Identifier	IS_VAR		372415	1					
ANR	372471	CallExpression	UNEXPECTED ( var_ptr == NULL )		372415	1					
ANR	372472	Callee	UNEXPECTED		372415	0					
ANR	372473	Identifier	UNEXPECTED		372415	0					
ANR	372474	ArgumentList	var_ptr == NULL		372415	1					
ANR	372475	Argument	var_ptr == NULL		372415	0					
ANR	372476	EqualityExpression	var_ptr == NULL		372415	0		==			
ANR	372477	Identifier	var_ptr		372415	0					
ANR	372478	Identifier	NULL		372415	1					
ANR	372479	CompoundStatement		11:54:250:250	372415	1					
ANR	372480	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	16565:2:498604:498703	372415	0	True				
ANR	372481	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		372415	0					
ANR	372482	Callee	zend_throw_error		372415	0					
ANR	372483	Identifier	zend_throw_error		372415	0					
ANR	372484	ArgumentList	NULL		372415	1					
ANR	372485	Argument	NULL		372415	0					
ANR	372486	Identifier	NULL		372415	0					
ANR	372487	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		372415	1					
ANR	372488	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		372415	0					
ANR	372489	ExpressionStatement	HANDLE_EXCEPTION ( )	16567:2:498708:498726	372415	1	True				
ANR	372490	CallExpression	HANDLE_EXCEPTION ( )		372415	0					
ANR	372491	Callee	HANDLE_EXCEPTION		372415	0					
ANR	372492	Identifier	HANDLE_EXCEPTION		372415	0					
ANR	372493	ArgumentList			372415	1					
ANR	372494	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		372415	7					
ANR	372495	Condition	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )	16570:5:498737:498794	372415	0	True				
ANR	372496	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )		372415	0		&&			
ANR	372497	EqualityExpression	IS_VAR == IS_VAR		372415	0		==			
ANR	372498	Identifier	IS_VAR		372415	0					
ANR	372499	Identifier	IS_VAR		372415	1					
ANR	372500	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		372415	1					
ANR	372501	Callee	UNEXPECTED		372415	0					
ANR	372502	Identifier	UNEXPECTED		372415	0					
ANR	372503	ArgumentList	var_ptr == & EG ( error_zval )		372415	1					
ANR	372504	Argument	var_ptr == & EG ( error_zval )		372415	0					
ANR	372505	EqualityExpression	var_ptr == & EG ( error_zval )		372415	0		==			
ANR	372506	Identifier	var_ptr		372415	0					
ANR	372507	UnaryOperationExpression	& EG ( error_zval )		372415	1					
ANR	372508	UnaryOperator	&		372415	0					
ANR	372509	CallExpression	EG ( error_zval )		372415	1					
ANR	372510	Callee	EG		372415	0					
ANR	372511	Identifier	EG		372415	0					
ANR	372512	ArgumentList	error_zval		372415	1					
ANR	372513	Argument	error_zval		372415	0					
ANR	372514	Identifier	error_zval		372415	0					
ANR	372515	CompoundStatement		17:65:447:447	372415	1					
ANR	372516	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		372415	0					
ANR	372517	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16571:6:498805:498841	372415	0	True				
ANR	372518	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		372415	0					
ANR	372519	Callee	UNEXPECTED		372415	0					
ANR	372520	Identifier	UNEXPECTED		372415	0					
ANR	372521	ArgumentList	RETURN_VALUE_USED ( opline )		372415	1					
ANR	372522	Argument	RETURN_VALUE_USED ( opline )		372415	0					
ANR	372523	CallExpression	RETURN_VALUE_USED ( opline )		372415	0					
ANR	372524	Callee	RETURN_VALUE_USED		372415	0					
ANR	372525	Identifier	RETURN_VALUE_USED		372415	0					
ANR	372526	ArgumentList	opline		372415	1					
ANR	372527	Argument	opline		372415	0					
ANR	372528	Identifier	opline		372415	0					
ANR	372529	CompoundStatement		18:45:494:494	372415	1					
ANR	372530	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	16572:3:498849:498886	372415	0	True				
ANR	372531	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		372415	0					
ANR	372532	Callee	ZVAL_NULL		372415	0					
ANR	372533	Identifier	ZVAL_NULL		372415	0					
ANR	372534	ArgumentList	EX_VAR ( opline -> result . var )		372415	1					
ANR	372535	Argument	EX_VAR ( opline -> result . var )		372415	0					
ANR	372536	CallExpression	EX_VAR ( opline -> result . var )		372415	0					
ANR	372537	Callee	EX_VAR		372415	0					
ANR	372538	Identifier	EX_VAR		372415	0					
ANR	372539	ArgumentList	opline -> result . var		372415	1					
ANR	372540	Argument	opline -> result . var		372415	0					
ANR	372541	MemberAccess	opline -> result . var		372415	0					
ANR	372542	PtrMemberAccess	opline -> result		372415	0					
ANR	372543	Identifier	opline		372415	0					
ANR	372544	Identifier	result		372415	1					
ANR	372545	Identifier	var		372415	1					
ANR	372546	ElseStatement	else		372415	0					
ANR	372547	CompoundStatement		21:8:550:550	372415	0					
ANR	372548	ExpressionStatement	ZVAL_DEREF ( var_ptr )	16575:2:498904:498923	372415	0	True				
ANR	372549	CallExpression	ZVAL_DEREF ( var_ptr )		372415	0					
ANR	372550	Callee	ZVAL_DEREF		372415	0					
ANR	372551	Identifier	ZVAL_DEREF		372415	0					
ANR	372552	ArgumentList	var_ptr		372415	1					
ANR	372553	Argument	var_ptr		372415	0					
ANR	372554	Identifier	var_ptr		372415	0					
ANR	372555	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	16576:2:498927:498955	372415	1	True				
ANR	372556	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		372415	0					
ANR	372557	Callee	SEPARATE_ZVAL_NOREF		372415	0					
ANR	372558	Identifier	SEPARATE_ZVAL_NOREF		372415	0					
ANR	372559	ArgumentList	var_ptr		372415	1					
ANR	372560	Argument	var_ptr		372415	0					
ANR	372561	Identifier	var_ptr		372415	0					
ANR	372562	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	16578:2:498960:498994	372415	2	True				
ANR	372563	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		372415	0					
ANR	372564	Callee	binary_op		372415	0					
ANR	372565	Identifier	binary_op		372415	0					
ANR	372566	ArgumentList	var_ptr		372415	1					
ANR	372567	Argument	var_ptr		372415	0					
ANR	372568	Identifier	var_ptr		372415	0					
ANR	372569	Argument	var_ptr		372415	1					
ANR	372570	Identifier	var_ptr		372415	0					
ANR	372571	Argument	value		372415	2					
ANR	372572	Identifier	value		372415	0					
ANR	372573	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		372415	3					
ANR	372574	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16580:6:499003:499039	372415	0	True				
ANR	372575	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		372415	0					
ANR	372576	Callee	UNEXPECTED		372415	0					
ANR	372577	Identifier	UNEXPECTED		372415	0					
ANR	372578	ArgumentList	RETURN_VALUE_USED ( opline )		372415	1					
ANR	372579	Argument	RETURN_VALUE_USED ( opline )		372415	0					
ANR	372580	CallExpression	RETURN_VALUE_USED ( opline )		372415	0					
ANR	372581	Callee	RETURN_VALUE_USED		372415	0					
ANR	372582	Identifier	RETURN_VALUE_USED		372415	0					
ANR	372583	ArgumentList	opline		372415	1					
ANR	372584	Argument	opline		372415	0					
ANR	372585	Identifier	opline		372415	0					
ANR	372586	CompoundStatement		27:45:692:692	372415	1					
ANR	372587	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	16581:3:499047:499093	372415	0	True				
ANR	372588	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		372415	0					
ANR	372589	Callee	ZVAL_COPY		372415	0					
ANR	372590	Identifier	ZVAL_COPY		372415	0					
ANR	372591	ArgumentList	EX_VAR ( opline -> result . var )		372415	1					
ANR	372592	Argument	EX_VAR ( opline -> result . var )		372415	0					
ANR	372593	CallExpression	EX_VAR ( opline -> result . var )		372415	0					
ANR	372594	Callee	EX_VAR		372415	0					
ANR	372595	Identifier	EX_VAR		372415	0					
ANR	372596	ArgumentList	opline -> result . var		372415	1					
ANR	372597	Argument	opline -> result . var		372415	0					
ANR	372598	MemberAccess	opline -> result . var		372415	0					
ANR	372599	PtrMemberAccess	opline -> result		372415	0					
ANR	372600	Identifier	opline		372415	0					
ANR	372601	Identifier	result		372415	1					
ANR	372602	Identifier	var		372415	1					
ANR	372603	Argument	var_ptr		372415	1					
ANR	372604	Identifier	var_ptr		372415	0					
ANR	372605	IfStatement	if ( UNEXPECTED ( free_op1 ) )		372415	8					
ANR	372606	Condition	UNEXPECTED ( free_op1 )	16585:5:499108:499127	372415	0	True				
ANR	372607	CallExpression	UNEXPECTED ( free_op1 )		372415	0					
ANR	372608	Callee	UNEXPECTED		372415	0					
ANR	372609	Identifier	UNEXPECTED		372415	0					
ANR	372610	ArgumentList	free_op1		372415	1					
ANR	372611	Argument	free_op1		372415	0					
ANR	372612	Identifier	free_op1		372415	0					
ANR	372613	CompoundStatement		32:27:780:780	372415	1					
ANR	372614	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	16585:28:499131:499159	372415	0	True				
ANR	372615	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		372415	0					
ANR	372616	Callee	zval_ptr_dtor_nogc		372415	0					
ANR	372617	Identifier	zval_ptr_dtor_nogc		372415	0					
ANR	372618	ArgumentList	free_op1		372415	1					
ANR	372619	Argument	free_op1		372415	0					
ANR	372620	Identifier	free_op1		372415	0					
ANR	372621	ExpressionStatement		16585:58:499161:499161	372415	9	True				
ANR	372622	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	16586:1:499164:499201	372415	10	True				
ANR	372623	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		372415	0					
ANR	372624	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		372415	0					
ANR	372625	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		372415	0					
ANR	372626	ArgumentList			372415	1					
ANR	372627	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		372415	1					
ANR	372628	Identifier	zend_binary_assign_op_helper_SPEC_VAR_CONST		372415	2					
ANR	372629	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		372415	3					
ANR	372630	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	16553:89:498295:498346	372415	0	True				
ANR	372631	ParameterType	binary_op_type binary_op		372415	0					
ANR	372632	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		372415	1					
ANR	372633	CFGEntryNode	ENTRY		372415		True				
ANR	372634	CFGExitNode	EXIT		372415		True				
ANR	372635	Symbol	opline -> op1		372415						
ANR	372636	Symbol	opline -> op2		372415						
ANR	372637	Symbol	NULL		372415						
ANR	372638	Symbol	EX_CONSTANT		372415						
ANR	372639	Symbol	_get_zval_ptr_ptr_var		372415						
ANR	372640	Symbol	& EG		372415						
ANR	372641	Symbol	free_op1		372415						
ANR	372642	Symbol	var_ptr		372415						
ANR	372643	Symbol	execute_data		372415						
ANR	372644	Symbol	opline -> result		372415						
ANR	372645	Symbol	UNEXPECTED		372415						
ANR	372646	Symbol	RETURN_VALUE_USED		372415						
ANR	372647	Symbol	opline		372415						
ANR	372648	Symbol	* opline		372415						
ANR	372649	Symbol	error_zval		372415						
ANR	372650	Symbol	EX_VAR		372415						
ANR	372651	Symbol	opline -> op1 . var		372415						
ANR	372652	Symbol	value		372415						
ANR	372653	Symbol	IS_VAR		372415						
ANR	372654	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		372415						
ANR	372655	Symbol	opline -> result . var		372415						
ANR	372656	Symbol	& free_op1		372415						
ANR	372657	Function	zend_pre_incdec_property_helper_SPEC_VAR_CONST	16829:0:509915:512017							
ANR	372658	FunctionDef	zend_pre_incdec_property_helper_SPEC_VAR_CONST (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		372657	0					
ANR	372659	CompoundStatement		16830:0:510044:512017	372657	0					
ANR	372660	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	16831:1:510047:510080	372657	0	True				
ANR	372661	IdentifierDecl	free_op1		372657	0					
ANR	372662	IdentifierDeclType	USE_OPLINE zend_free_op		372657	0					
ANR	372663	Identifier	free_op1		372657	1					
ANR	372664	IdentifierDeclStatement	zval * object ;	16833:1:510083:510095	372657	1	True				
ANR	372665	IdentifierDecl	* object		372657	0					
ANR	372666	IdentifierDeclType	zval *		372657	0					
ANR	372667	Identifier	object		372657	1					
ANR	372668	IdentifierDeclStatement	zval * property ;	16834:1:510098:510112	372657	2	True				
ANR	372669	IdentifierDecl	* property		372657	0					
ANR	372670	IdentifierDeclType	zval *		372657	0					
ANR	372671	Identifier	property		372657	1					
ANR	372672	IdentifierDeclStatement	zval * zptr ;	16835:1:510115:510125	372657	3	True				
ANR	372673	IdentifierDecl	* zptr		372657	0					
ANR	372674	IdentifierDeclType	zval *		372657	0					
ANR	372675	Identifier	zptr		372657	1					
ANR	372676	ExpressionStatement	SAVE_OPLINE ( )	16837:1:510129:510142	372657	4	True				
ANR	372677	CallExpression	SAVE_OPLINE ( )		372657	0					
ANR	372678	Callee	SAVE_OPLINE		372657	0					
ANR	372679	Identifier	SAVE_OPLINE		372657	0					
ANR	372680	ArgumentList			372657	1					
ANR	372681	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	16838:1:510145:510217	372657	5	True				
ANR	372682	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		372657	0		=			
ANR	372683	Identifier	object		372657	0					
ANR	372684	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		372657	1					
ANR	372685	Callee	_get_zval_ptr_ptr_var		372657	0					
ANR	372686	Identifier	_get_zval_ptr_ptr_var		372657	0					
ANR	372687	ArgumentList	opline -> op1 . var		372657	1					
ANR	372688	Argument	opline -> op1 . var		372657	0					
ANR	372689	MemberAccess	opline -> op1 . var		372657	0					
ANR	372690	PtrMemberAccess	opline -> op1		372657	0					
ANR	372691	Identifier	opline		372657	0					
ANR	372692	Identifier	op1		372657	1					
ANR	372693	Identifier	var		372657	1					
ANR	372694	Argument	execute_data		372657	1					
ANR	372695	Identifier	execute_data		372657	0					
ANR	372696	Argument	& free_op1		372657	2					
ANR	372697	UnaryOperationExpression	& free_op1		372657	0					
ANR	372698	UnaryOperator	&		372657	0					
ANR	372699	Identifier	free_op1		372657	1					
ANR	372700	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		372657	6					
ANR	372701	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	16840:5:510225:510282	372657	0	True				
ANR	372702	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		372657	0		&&			
ANR	372703	EqualityExpression	IS_VAR == IS_UNUSED		372657	0		==			
ANR	372704	Identifier	IS_VAR		372657	0					
ANR	372705	Identifier	IS_UNUSED		372657	1					
ANR	372706	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		372657	1					
ANR	372707	Callee	UNEXPECTED		372657	0					
ANR	372708	Identifier	UNEXPECTED		372657	0					
ANR	372709	ArgumentList	Z_OBJ_P ( object ) == NULL		372657	1					
ANR	372710	Argument	Z_OBJ_P ( object ) == NULL		372657	0					
ANR	372711	EqualityExpression	Z_OBJ_P ( object ) == NULL		372657	0		==			
ANR	372712	CallExpression	Z_OBJ_P ( object )		372657	0					
ANR	372713	Callee	Z_OBJ_P		372657	0					
ANR	372714	Identifier	Z_OBJ_P		372657	0					
ANR	372715	ArgumentList	object		372657	1					
ANR	372716	Argument	object		372657	0					
ANR	372717	Identifier	object		372657	0					
ANR	372718	Identifier	NULL		372657	1					
ANR	372719	CompoundStatement		11:65:240:240	372657	1					
ANR	372720	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	16841:2:510289:510353	372657	0	True				
ANR	372721	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		372657	0					
ANR	372722	Callee	zend_throw_error		372657	0					
ANR	372723	Identifier	zend_throw_error		372657	0					
ANR	372724	ArgumentList	NULL		372657	1					
ANR	372725	Argument	NULL		372657	0					
ANR	372726	Identifier	NULL		372657	0					
ANR	372727	Argument	"""Using $this when not in object context"""		372657	1					
ANR	372728	PrimaryExpression	"""Using $this when not in object context"""		372657	0					
ANR	372729	ExpressionStatement	HANDLE_EXCEPTION ( )	16843:2:510358:510376	372657	1	True				
ANR	372730	CallExpression	HANDLE_EXCEPTION ( )		372657	0					
ANR	372731	Callee	HANDLE_EXCEPTION		372657	0					
ANR	372732	Identifier	HANDLE_EXCEPTION		372657	0					
ANR	372733	ArgumentList			372657	1					
ANR	372734	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	16846:1:510383:510418	372657	7	True				
ANR	372735	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		372657	0		=			
ANR	372736	Identifier	property		372657	0					
ANR	372737	CallExpression	EX_CONSTANT ( opline -> op2 )		372657	1					
ANR	372738	Callee	EX_CONSTANT		372657	0					
ANR	372739	Identifier	EX_CONSTANT		372657	0					
ANR	372740	ArgumentList	opline -> op2		372657	1					
ANR	372741	Argument	opline -> op2		372657	0					
ANR	372742	PtrMemberAccess	opline -> op2		372657	0					
ANR	372743	Identifier	opline		372657	0					
ANR	372744	Identifier	op2		372657	1					
ANR	372745	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		372657	8					
ANR	372746	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	16848:5:510426:510471	372657	0	True				
ANR	372747	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		372657	0		&&			
ANR	372748	EqualityExpression	IS_VAR == IS_VAR		372657	0		==			
ANR	372749	Identifier	IS_VAR		372657	0					
ANR	372750	Identifier	IS_VAR		372657	1					
ANR	372751	CallExpression	UNEXPECTED ( object == NULL )		372657	1					
ANR	372752	Callee	UNEXPECTED		372657	0					
ANR	372753	Identifier	UNEXPECTED		372657	0					
ANR	372754	ArgumentList	object == NULL		372657	1					
ANR	372755	Argument	object == NULL		372657	0					
ANR	372756	EqualityExpression	object == NULL		372657	0		==			
ANR	372757	Identifier	object		372657	0					
ANR	372758	Identifier	NULL		372657	1					
ANR	372759	CompoundStatement		19:53:429:429	372657	1					
ANR	372760	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	16849:2:510478:510568	372657	0	True				
ANR	372761	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		372657	0					
ANR	372762	Callee	zend_throw_error		372657	0					
ANR	372763	Identifier	zend_throw_error		372657	0					
ANR	372764	ArgumentList	NULL		372657	1					
ANR	372765	Argument	NULL		372657	0					
ANR	372766	Identifier	NULL		372657	0					
ANR	372767	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		372657	1					
ANR	372768	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		372657	0					
ANR	372769	ExpressionStatement	HANDLE_EXCEPTION ( )	16851:2:510573:510591	372657	1	True				
ANR	372770	CallExpression	HANDLE_EXCEPTION ( )		372657	0					
ANR	372771	Callee	HANDLE_EXCEPTION		372657	0					
ANR	372772	Identifier	HANDLE_EXCEPTION		372657	0					
ANR	372773	ArgumentList			372657	1					
ANR	372774	DoStatement	do		372657	9					
ANR	372775	CompoundStatement		25:4:556:556	372657	0					
ANR	372776	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		372657	0					
ANR	372777	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	16855:6:510609:510672	372657	0	True				
ANR	372778	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		372657	0		&&			
ANR	372779	EqualityExpression	IS_VAR != IS_UNUSED		372657	0		!=			
ANR	372780	Identifier	IS_VAR		372657	0					
ANR	372781	Identifier	IS_UNUSED		372657	1					
ANR	372782	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		372657	1					
ANR	372783	Callee	UNEXPECTED		372657	0					
ANR	372784	Identifier	UNEXPECTED		372657	0					
ANR	372785	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		372657	1					
ANR	372786	Argument	Z_TYPE_P ( object ) != IS_OBJECT		372657	0					
ANR	372787	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		372657	0		!=			
ANR	372788	CallExpression	Z_TYPE_P ( object )		372657	0					
ANR	372789	Callee	Z_TYPE_P		372657	0					
ANR	372790	Identifier	Z_TYPE_P		372657	0					
ANR	372791	ArgumentList	object		372657	1					
ANR	372792	Argument	object		372657	0					
ANR	372793	Identifier	object		372657	0					
ANR	372794	Identifier	IS_OBJECT		372657	1					
ANR	372795	CompoundStatement		26:72:630:630	372657	1					
ANR	372796	ExpressionStatement	ZVAL_DEREF ( object )	16856:3:510680:510698	372657	0	True				
ANR	372797	CallExpression	ZVAL_DEREF ( object )		372657	0					
ANR	372798	Callee	ZVAL_DEREF		372657	0					
ANR	372799	Identifier	ZVAL_DEREF		372657	0					
ANR	372800	ArgumentList	object		372657	1					
ANR	372801	Argument	object		372657	0					
ANR	372802	Identifier	object		372657	0					
ANR	372803	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		372657	1					
ANR	372804	Condition	UNEXPECTED ( ! make_real_object ( object ) )	16857:7:510707:510743	372657	0	True				
ANR	372805	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		372657	0					
ANR	372806	Callee	UNEXPECTED		372657	0					
ANR	372807	Identifier	UNEXPECTED		372657	0					
ANR	372808	ArgumentList	! make_real_object ( object )		372657	1					
ANR	372809	Argument	! make_real_object ( object )		372657	0					
ANR	372810	UnaryOperationExpression	! make_real_object ( object )		372657	0					
ANR	372811	UnaryOperator	!		372657	0					
ANR	372812	CallExpression	make_real_object ( object )		372657	1					
ANR	372813	Callee	make_real_object		372657	0					
ANR	372814	Identifier	make_real_object		372657	0					
ANR	372815	ArgumentList	object		372657	1					
ANR	372816	Argument	object		372657	0					
ANR	372817	Identifier	object		372657	0					
ANR	372818	CompoundStatement		28:46:701:701	372657	1					
ANR	372819	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	16858:4:510752:510830	372657	0	True				
ANR	372820	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		372657	0					
ANR	372821	Callee	zend_error		372657	0					
ANR	372822	Identifier	zend_error		372657	0					
ANR	372823	ArgumentList	E_WARNING		372657	1					
ANR	372824	Argument	E_WARNING		372657	0					
ANR	372825	Identifier	E_WARNING		372657	0					
ANR	372826	Argument	"""Attempt to increment/decrement property of non-object"""		372657	1					
ANR	372827	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		372657	0					
ANR	372828	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		372657	1					
ANR	372829	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16859:8:510840:510876	372657	0	True				
ANR	372830	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		372657	0					
ANR	372831	Callee	UNEXPECTED		372657	0					
ANR	372832	Identifier	UNEXPECTED		372657	0					
ANR	372833	ArgumentList	RETURN_VALUE_USED ( opline )		372657	1					
ANR	372834	Argument	RETURN_VALUE_USED ( opline )		372657	0					
ANR	372835	CallExpression	RETURN_VALUE_USED ( opline )		372657	0					
ANR	372836	Callee	RETURN_VALUE_USED		372657	0					
ANR	372837	Identifier	RETURN_VALUE_USED		372657	0					
ANR	372838	ArgumentList	opline		372657	1					
ANR	372839	Argument	opline		372657	0					
ANR	372840	Identifier	opline		372657	0					
ANR	372841	CompoundStatement		30:47:834:834	372657	1					
ANR	372842	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	16860:5:510886:510923	372657	0	True				
ANR	372843	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		372657	0					
ANR	372844	Callee	ZVAL_NULL		372657	0					
ANR	372845	Identifier	ZVAL_NULL		372657	0					
ANR	372846	ArgumentList	EX_VAR ( opline -> result . var )		372657	1					
ANR	372847	Argument	EX_VAR ( opline -> result . var )		372657	0					
ANR	372848	CallExpression	EX_VAR ( opline -> result . var )		372657	0					
ANR	372849	Callee	EX_VAR		372657	0					
ANR	372850	Identifier	EX_VAR		372657	0					
ANR	372851	ArgumentList	opline -> result . var		372657	1					
ANR	372852	Argument	opline -> result . var		372657	0					
ANR	372853	MemberAccess	opline -> result . var		372657	0					
ANR	372854	PtrMemberAccess	opline -> result		372657	0					
ANR	372855	Identifier	opline		372657	0					
ANR	372856	Identifier	result		372657	1					
ANR	372857	Identifier	var		372657	1					
ANR	372858	BreakStatement	break ;	16862:4:510935:510940	372657	2	True				
ANR	372859	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		372657	1					
ANR	372860	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	16868:6:511014:511238	372657	0	True				
ANR	372861	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		372657	0		&&			
ANR	372862	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		372657	0					
ANR	372863	Callee	EXPECTED		372657	0					
ANR	372864	Identifier	EXPECTED		372657	0					
ANR	372865	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		372657	1					
ANR	372866	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		372657	0					
ANR	372867	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		372657	0					
ANR	372868	CallExpression	Z_OBJ_HT_P ( object )		372657	0					
ANR	372869	Callee	Z_OBJ_HT_P		372657	0					
ANR	372870	Identifier	Z_OBJ_HT_P		372657	0					
ANR	372871	ArgumentList	object		372657	1					
ANR	372872	Argument	object		372657	0					
ANR	372873	Identifier	object		372657	0					
ANR	372874	Identifier	get_property_ptr_ptr		372657	1					
ANR	372875	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		372657	1					
ANR	372876	Callee	EXPECTED		372657	0					
ANR	372877	Identifier	EXPECTED		372657	0					
ANR	372878	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		372657	1					
ANR	372879	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		372657	0					
ANR	372880	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		372657	0		!=			
ANR	372881	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		372657	0		=			
ANR	372882	Identifier	zptr		372657	0					
ANR	372883	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		372657	1					
ANR	372884	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		372657	0					
ANR	372885	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		372657	0					
ANR	372886	CallExpression	Z_OBJ_HT_P ( object )		372657	0					
ANR	372887	Callee	Z_OBJ_HT_P		372657	0					
ANR	372888	Identifier	Z_OBJ_HT_P		372657	0					
ANR	372889	ArgumentList	object		372657	1					
ANR	372890	Argument	object		372657	0					
ANR	372891	Identifier	object		372657	0					
ANR	372892	Identifier	get_property_ptr_ptr		372657	1					
ANR	372893	ArgumentList	object		372657	1					
ANR	372894	Argument	object		372657	0					
ANR	372895	Identifier	object		372657	0					
ANR	372896	Argument	property		372657	1					
ANR	372897	Identifier	property		372657	0					
ANR	372898	Argument	BP_VAR_RW		372657	2					
ANR	372899	Identifier	BP_VAR_RW		372657	0					
ANR	372900	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		372657	3					
ANR	372901	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		372657	0					
ANR	372902	Condition	IS_CONST == IS_CONST		372657	0					
ANR	372903	EqualityExpression	IS_CONST == IS_CONST		372657	0		==			
ANR	372904	Identifier	IS_CONST		372657	0					
ANR	372905	Identifier	IS_CONST		372657	1					
ANR	372906	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		372657	1					
ANR	372907	Callee	CACHE_ADDR		372657	0					
ANR	372908	Identifier	CACHE_ADDR		372657	0					
ANR	372909	ArgumentList	Z_CACHE_SLOT_P ( property )		372657	1					
ANR	372910	Argument	Z_CACHE_SLOT_P ( property )		372657	0					
ANR	372911	CallExpression	Z_CACHE_SLOT_P ( property )		372657	0					
ANR	372912	Callee	Z_CACHE_SLOT_P		372657	0					
ANR	372913	Identifier	Z_CACHE_SLOT_P		372657	0					
ANR	372914	ArgumentList	property		372657	1					
ANR	372915	Argument	property		372657	0					
ANR	372916	Identifier	property		372657	0					
ANR	372917	Identifier	NULL		372657	2					
ANR	372918	Identifier	NULL		372657	1					
ANR	372919	CompoundStatement		40:176:1196:1196	372657	1					
ANR	372920	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		372657	0					
ANR	372921	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	16871:7:511251:511285	372657	0	True				
ANR	372922	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		372657	0					
ANR	372923	Callee	EXPECTED		372657	0					
ANR	372924	Identifier	EXPECTED		372657	0					
ANR	372925	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		372657	1					
ANR	372926	Argument	Z_TYPE_P ( zptr ) == IS_LONG		372657	0					
ANR	372927	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		372657	0		==			
ANR	372928	CallExpression	Z_TYPE_P ( zptr )		372657	0					
ANR	372929	Callee	Z_TYPE_P		372657	0					
ANR	372930	Identifier	Z_TYPE_P		372657	0					
ANR	372931	ArgumentList	zptr		372657	1					
ANR	372932	Argument	zptr		372657	0					
ANR	372933	Identifier	zptr		372657	0					
ANR	372934	Identifier	IS_LONG		372657	1					
ANR	372935	CompoundStatement		42:44:1243:1243	372657	1					
ANR	372936	IfStatement	if ( inc )		372657	0					
ANR	372937	Condition	inc	16872:8:511298:511300	372657	0	True				
ANR	372938	Identifier	inc		372657	0					
ANR	372939	CompoundStatement		43:13:1258:1258	372657	1					
ANR	372940	ExpressionStatement	fast_long_increment_function ( zptr )	16873:5:511310:511344	372657	0	True				
ANR	372941	CallExpression	fast_long_increment_function ( zptr )		372657	0					
ANR	372942	Callee	fast_long_increment_function		372657	0					
ANR	372943	Identifier	fast_long_increment_function		372657	0					
ANR	372944	ArgumentList	zptr		372657	1					
ANR	372945	Argument	zptr		372657	0					
ANR	372946	Identifier	zptr		372657	0					
ANR	372947	ElseStatement	else		372657	0					
ANR	372948	CompoundStatement		45:11:1312:1312	372657	0					
ANR	372949	ExpressionStatement	fast_long_decrement_function ( zptr )	16875:5:511364:511398	372657	0	True				
ANR	372950	CallExpression	fast_long_decrement_function ( zptr )		372657	0					
ANR	372951	Callee	fast_long_decrement_function		372657	0					
ANR	372952	Identifier	fast_long_decrement_function		372657	0					
ANR	372953	ArgumentList	zptr		372657	1					
ANR	372954	Argument	zptr		372657	0					
ANR	372955	Identifier	zptr		372657	0					
ANR	372956	ElseStatement	else		372657	0					
ANR	372957	CompoundStatement		48:10:1371:1371	372657	0					
ANR	372958	ExpressionStatement	ZVAL_DEREF ( zptr )	16878:4:511422:511438	372657	0	True				
ANR	372959	CallExpression	ZVAL_DEREF ( zptr )		372657	0					
ANR	372960	Callee	ZVAL_DEREF		372657	0					
ANR	372961	Identifier	ZVAL_DEREF		372657	0					
ANR	372962	ArgumentList	zptr		372657	1					
ANR	372963	Argument	zptr		372657	0					
ANR	372964	Identifier	zptr		372657	0					
ANR	372965	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	16879:4:511444:511469	372657	1	True				
ANR	372966	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		372657	0					
ANR	372967	Callee	SEPARATE_ZVAL_NOREF		372657	0					
ANR	372968	Identifier	SEPARATE_ZVAL_NOREF		372657	0					
ANR	372969	ArgumentList	zptr		372657	1					
ANR	372970	Argument	zptr		372657	0					
ANR	372971	Identifier	zptr		372657	0					
ANR	372972	IfStatement	if ( inc )		372657	2					
ANR	372973	Condition	inc	16881:8:511480:511482	372657	0	True				
ANR	372974	Identifier	inc		372657	0					
ANR	372975	CompoundStatement		52:13:1440:1440	372657	1					
ANR	372976	ExpressionStatement	increment_function ( zptr )	16882:5:511492:511516	372657	0	True				
ANR	372977	CallExpression	increment_function ( zptr )		372657	0					
ANR	372978	Callee	increment_function		372657	0					
ANR	372979	Identifier	increment_function		372657	0					
ANR	372980	ArgumentList	zptr		372657	1					
ANR	372981	Argument	zptr		372657	0					
ANR	372982	Identifier	zptr		372657	0					
ANR	372983	ElseStatement	else		372657	0					
ANR	372984	CompoundStatement		54:11:1484:1484	372657	0					
ANR	372985	ExpressionStatement	decrement_function ( zptr )	16884:5:511536:511560	372657	0	True				
ANR	372986	CallExpression	decrement_function ( zptr )		372657	0					
ANR	372987	Callee	decrement_function		372657	0					
ANR	372988	Identifier	decrement_function		372657	0					
ANR	372989	ArgumentList	zptr		372657	1					
ANR	372990	Argument	zptr		372657	0					
ANR	372991	Identifier	zptr		372657	0					
ANR	372992	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		372657	1					
ANR	372993	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	16887:7:511580:511616	372657	0	True				
ANR	372994	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		372657	0					
ANR	372995	Callee	UNEXPECTED		372657	0					
ANR	372996	Identifier	UNEXPECTED		372657	0					
ANR	372997	ArgumentList	RETURN_VALUE_USED ( opline )		372657	1					
ANR	372998	Argument	RETURN_VALUE_USED ( opline )		372657	0					
ANR	372999	CallExpression	RETURN_VALUE_USED ( opline )		372657	0					
ANR	373000	Callee	RETURN_VALUE_USED		372657	0					
ANR	373001	Identifier	RETURN_VALUE_USED		372657	0					
ANR	373002	ArgumentList	opline		372657	1					
ANR	373003	Argument	opline		372657	0					
ANR	373004	Identifier	opline		372657	0					
ANR	373005	CompoundStatement		58:46:1574:1574	372657	1					
ANR	373006	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	16888:4:511625:511668	372657	0	True				
ANR	373007	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		372657	0					
ANR	373008	Callee	ZVAL_COPY		372657	0					
ANR	373009	Identifier	ZVAL_COPY		372657	0					
ANR	373010	ArgumentList	EX_VAR ( opline -> result . var )		372657	1					
ANR	373011	Argument	EX_VAR ( opline -> result . var )		372657	0					
ANR	373012	CallExpression	EX_VAR ( opline -> result . var )		372657	0					
ANR	373013	Callee	EX_VAR		372657	0					
ANR	373014	Identifier	EX_VAR		372657	0					
ANR	373015	ArgumentList	opline -> result . var		372657	1					
ANR	373016	Argument	opline -> result . var		372657	0					
ANR	373017	MemberAccess	opline -> result . var		372657	0					
ANR	373018	PtrMemberAccess	opline -> result		372657	0					
ANR	373019	Identifier	opline		372657	0					
ANR	373020	Identifier	result		372657	1					
ANR	373021	Identifier	var		372657	1					
ANR	373022	Argument	zptr		372657	1					
ANR	373023	Identifier	zptr		372657	0					
ANR	373024	ElseStatement	else		372657	0					
ANR	373025	CompoundStatement		61:9:1639:1639	372657	0					
ANR	373026	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	16891:3:511689:511896	372657	0	True				
ANR	373027	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		372657	0					
ANR	373028	Callee	zend_pre_incdec_overloaded_property		372657	0					
ANR	373029	Identifier	zend_pre_incdec_overloaded_property		372657	0					
ANR	373030	ArgumentList	object		372657	1					
ANR	373031	Argument	object		372657	0					
ANR	373032	Identifier	object		372657	0					
ANR	373033	Argument	property		372657	1					
ANR	373034	Identifier	property		372657	0					
ANR	373035	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		372657	2					
ANR	373036	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		372657	0					
ANR	373037	Condition	IS_CONST == IS_CONST		372657	0					
ANR	373038	EqualityExpression	IS_CONST == IS_CONST		372657	0		==			
ANR	373039	Identifier	IS_CONST		372657	0					
ANR	373040	Identifier	IS_CONST		372657	1					
ANR	373041	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		372657	1					
ANR	373042	Callee	CACHE_ADDR		372657	0					
ANR	373043	Identifier	CACHE_ADDR		372657	0					
ANR	373044	ArgumentList	Z_CACHE_SLOT_P ( property )		372657	1					
ANR	373045	Argument	Z_CACHE_SLOT_P ( property )		372657	0					
ANR	373046	CallExpression	Z_CACHE_SLOT_P ( property )		372657	0					
ANR	373047	Callee	Z_CACHE_SLOT_P		372657	0					
ANR	373048	Identifier	Z_CACHE_SLOT_P		372657	0					
ANR	373049	ArgumentList	property		372657	1					
ANR	373050	Argument	property		372657	0					
ANR	373051	Identifier	property		372657	0					
ANR	373052	Identifier	NULL		372657	2					
ANR	373053	Argument	inc		372657	3					
ANR	373054	Identifier	inc		372657	0					
ANR	373055	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		372657	4					
ANR	373056	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		372657	0					
ANR	373057	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		372657	0					
ANR	373058	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		372657	0					
ANR	373059	Callee	UNEXPECTED		372657	0					
ANR	373060	Identifier	UNEXPECTED		372657	0					
ANR	373061	ArgumentList	RETURN_VALUE_USED ( opline )		372657	1					
ANR	373062	Argument	RETURN_VALUE_USED ( opline )		372657	0					
ANR	373063	CallExpression	RETURN_VALUE_USED ( opline )		372657	0					
ANR	373064	Callee	RETURN_VALUE_USED		372657	0					
ANR	373065	Identifier	RETURN_VALUE_USED		372657	0					
ANR	373066	ArgumentList	opline		372657	1					
ANR	373067	Argument	opline		372657	0					
ANR	373068	Identifier	opline		372657	0					
ANR	373069	CallExpression	EX_VAR ( opline -> result . var )		372657	1					
ANR	373070	Callee	EX_VAR		372657	0					
ANR	373071	Identifier	EX_VAR		372657	0					
ANR	373072	ArgumentList	opline -> result . var		372657	1					
ANR	373073	Argument	opline -> result . var		372657	0					
ANR	373074	MemberAccess	opline -> result . var		372657	0					
ANR	373075	PtrMemberAccess	opline -> result		372657	0					
ANR	373076	Identifier	opline		372657	0					
ANR	373077	Identifier	result		372657	1					
ANR	373078	Identifier	var		372657	1					
ANR	373079	Identifier	NULL		372657	2					
ANR	373080	Condition	0	16893:10:511912:511912	372657	1	True				
ANR	373081	PrimaryExpression	0		372657	0					
ANR	373082	IfStatement	if ( UNEXPECTED ( free_op1 ) )		372657	10					
ANR	373083	Condition	UNEXPECTED ( free_op1 )	16895:5:511922:511941	372657	0	True				
ANR	373084	CallExpression	UNEXPECTED ( free_op1 )		372657	0					
ANR	373085	Callee	UNEXPECTED		372657	0					
ANR	373086	Identifier	UNEXPECTED		372657	0					
ANR	373087	ArgumentList	free_op1		372657	1					
ANR	373088	Argument	free_op1		372657	0					
ANR	373089	Identifier	free_op1		372657	0					
ANR	373090	CompoundStatement		66:27:1899:1899	372657	1					
ANR	373091	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	16895:28:511945:511973	372657	0	True				
ANR	373092	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		372657	0					
ANR	373093	Callee	zval_ptr_dtor_nogc		372657	0					
ANR	373094	Identifier	zval_ptr_dtor_nogc		372657	0					
ANR	373095	ArgumentList	free_op1		372657	1					
ANR	373096	Argument	free_op1		372657	0					
ANR	373097	Identifier	free_op1		372657	0					
ANR	373098	ExpressionStatement		16895:58:511975:511975	372657	11	True				
ANR	373099	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	16896:1:511978:512015	372657	12	True				
ANR	373100	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		372657	0					
ANR	373101	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		372657	0					
ANR	373102	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		372657	0					
ANR	373103	ArgumentList			372657	1					
ANR	373104	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		372657	1					
ANR	373105	Identifier	zend_pre_incdec_property_helper_SPEC_VAR_CONST		372657	2					
ANR	373106	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		372657	3					
ANR	373107	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	16829:92:510007:510041	372657	0	True				
ANR	373108	ParameterType	int inc		372657	0					
ANR	373109	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		372657	1					
ANR	373110	CFGEntryNode	ENTRY		372657		True				
ANR	373111	CFGExitNode	EXIT		372657		True				
ANR	373112	Symbol	opline -> op1		372657						
ANR	373113	Symbol	opline -> op2		372657						
ANR	373114	Symbol	Z_OBJ_P		372657						
ANR	373115	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		372657						
ANR	373116	Symbol	_get_zval_ptr_ptr_var		372657						
ANR	373117	Symbol	zptr		372657						
ANR	373118	Symbol	free_op1		372657						
ANR	373119	Symbol	execute_data		372657						
ANR	373120	Symbol	opline -> result		372657						
ANR	373121	Symbol	UNEXPECTED		372657						
ANR	373122	Symbol	E_WARNING		372657						
ANR	373123	Symbol	make_real_object		372657						
ANR	373124	Symbol	RETURN_VALUE_USED		372657						
ANR	373125	Symbol	opline		372657						
ANR	373126	Symbol	IS_LONG		372657						
ANR	373127	Symbol	property		372657						
ANR	373128	Symbol	opline -> op1 . var		372657						
ANR	373129	Symbol	& free_op1		372657						
ANR	373130	Symbol	inc		372657						
ANR	373131	Symbol	BP_VAR_RW		372657						
ANR	373132	Symbol	IS_CONST		372657						
ANR	373133	Symbol	NULL		372657						
ANR	373134	Symbol	EX_CONSTANT		372657						
ANR	373135	Symbol	Z_CACHE_SLOT_P		372657						
ANR	373136	Symbol	Z_TYPE_P		372657						
ANR	373137	Symbol	* Z_OBJ_HT_P		372657						
ANR	373138	Symbol	CACHE_ADDR		372657						
ANR	373139	Symbol	* opline		372657						
ANR	373140	Symbol	Z_OBJ_HT_P		372657						
ANR	373141	Symbol	EX_VAR		372657						
ANR	373142	Symbol	IS_OBJECT		372657						
ANR	373143	Symbol	IS_VAR		372657						
ANR	373144	Symbol	EXPECTED		372657						
ANR	373145	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		372657						
ANR	373146	Symbol	opline -> result . var		372657						
ANR	373147	Symbol	object		372657						
ANR	373148	Symbol	IS_UNUSED		372657						
ANR	373149	Function	zend_post_incdec_property_helper_SPEC_VAR_CONST	16909:0:512468:514473							
ANR	373150	FunctionDef	zend_post_incdec_property_helper_SPEC_VAR_CONST (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		373149	0					
ANR	373151	CompoundStatement		16910:0:512598:514473	373149	0					
ANR	373152	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	16911:1:512601:512634	373149	0	True				
ANR	373153	IdentifierDecl	free_op1		373149	0					
ANR	373154	IdentifierDeclType	USE_OPLINE zend_free_op		373149	0					
ANR	373155	Identifier	free_op1		373149	1					
ANR	373156	IdentifierDeclStatement	zval * object ;	16913:1:512637:512649	373149	1	True				
ANR	373157	IdentifierDecl	* object		373149	0					
ANR	373158	IdentifierDeclType	zval *		373149	0					
ANR	373159	Identifier	object		373149	1					
ANR	373160	IdentifierDeclStatement	zval * property ;	16914:1:512652:512666	373149	2	True				
ANR	373161	IdentifierDecl	* property		373149	0					
ANR	373162	IdentifierDeclType	zval *		373149	0					
ANR	373163	Identifier	property		373149	1					
ANR	373164	IdentifierDeclStatement	zval * zptr ;	16915:1:512669:512679	373149	3	True				
ANR	373165	IdentifierDecl	* zptr		373149	0					
ANR	373166	IdentifierDeclType	zval *		373149	0					
ANR	373167	Identifier	zptr		373149	1					
ANR	373168	ExpressionStatement	SAVE_OPLINE ( )	16917:1:512683:512696	373149	4	True				
ANR	373169	CallExpression	SAVE_OPLINE ( )		373149	0					
ANR	373170	Callee	SAVE_OPLINE		373149	0					
ANR	373171	Identifier	SAVE_OPLINE		373149	0					
ANR	373172	ArgumentList			373149	1					
ANR	373173	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	16918:1:512699:512771	373149	5	True				
ANR	373174	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		373149	0		=			
ANR	373175	Identifier	object		373149	0					
ANR	373176	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		373149	1					
ANR	373177	Callee	_get_zval_ptr_ptr_var		373149	0					
ANR	373178	Identifier	_get_zval_ptr_ptr_var		373149	0					
ANR	373179	ArgumentList	opline -> op1 . var		373149	1					
ANR	373180	Argument	opline -> op1 . var		373149	0					
ANR	373181	MemberAccess	opline -> op1 . var		373149	0					
ANR	373182	PtrMemberAccess	opline -> op1		373149	0					
ANR	373183	Identifier	opline		373149	0					
ANR	373184	Identifier	op1		373149	1					
ANR	373185	Identifier	var		373149	1					
ANR	373186	Argument	execute_data		373149	1					
ANR	373187	Identifier	execute_data		373149	0					
ANR	373188	Argument	& free_op1		373149	2					
ANR	373189	UnaryOperationExpression	& free_op1		373149	0					
ANR	373190	UnaryOperator	&		373149	0					
ANR	373191	Identifier	free_op1		373149	1					
ANR	373192	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		373149	6					
ANR	373193	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	16920:5:512779:512836	373149	0	True				
ANR	373194	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		373149	0		&&			
ANR	373195	EqualityExpression	IS_VAR == IS_UNUSED		373149	0		==			
ANR	373196	Identifier	IS_VAR		373149	0					
ANR	373197	Identifier	IS_UNUSED		373149	1					
ANR	373198	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		373149	1					
ANR	373199	Callee	UNEXPECTED		373149	0					
ANR	373200	Identifier	UNEXPECTED		373149	0					
ANR	373201	ArgumentList	Z_OBJ_P ( object ) == NULL		373149	1					
ANR	373202	Argument	Z_OBJ_P ( object ) == NULL		373149	0					
ANR	373203	EqualityExpression	Z_OBJ_P ( object ) == NULL		373149	0		==			
ANR	373204	CallExpression	Z_OBJ_P ( object )		373149	0					
ANR	373205	Callee	Z_OBJ_P		373149	0					
ANR	373206	Identifier	Z_OBJ_P		373149	0					
ANR	373207	ArgumentList	object		373149	1					
ANR	373208	Argument	object		373149	0					
ANR	373209	Identifier	object		373149	0					
ANR	373210	Identifier	NULL		373149	1					
ANR	373211	CompoundStatement		11:65:240:240	373149	1					
ANR	373212	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	16921:2:512843:512907	373149	0	True				
ANR	373213	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		373149	0					
ANR	373214	Callee	zend_throw_error		373149	0					
ANR	373215	Identifier	zend_throw_error		373149	0					
ANR	373216	ArgumentList	NULL		373149	1					
ANR	373217	Argument	NULL		373149	0					
ANR	373218	Identifier	NULL		373149	0					
ANR	373219	Argument	"""Using $this when not in object context"""		373149	1					
ANR	373220	PrimaryExpression	"""Using $this when not in object context"""		373149	0					
ANR	373221	ExpressionStatement	HANDLE_EXCEPTION ( )	16923:2:512912:512930	373149	1	True				
ANR	373222	CallExpression	HANDLE_EXCEPTION ( )		373149	0					
ANR	373223	Callee	HANDLE_EXCEPTION		373149	0					
ANR	373224	Identifier	HANDLE_EXCEPTION		373149	0					
ANR	373225	ArgumentList			373149	1					
ANR	373226	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	16926:1:512937:512972	373149	7	True				
ANR	373227	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		373149	0		=			
ANR	373228	Identifier	property		373149	0					
ANR	373229	CallExpression	EX_CONSTANT ( opline -> op2 )		373149	1					
ANR	373230	Callee	EX_CONSTANT		373149	0					
ANR	373231	Identifier	EX_CONSTANT		373149	0					
ANR	373232	ArgumentList	opline -> op2		373149	1					
ANR	373233	Argument	opline -> op2		373149	0					
ANR	373234	PtrMemberAccess	opline -> op2		373149	0					
ANR	373235	Identifier	opline		373149	0					
ANR	373236	Identifier	op2		373149	1					
ANR	373237	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		373149	8					
ANR	373238	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	16928:5:512980:513025	373149	0	True				
ANR	373239	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		373149	0		&&			
ANR	373240	EqualityExpression	IS_VAR == IS_VAR		373149	0		==			
ANR	373241	Identifier	IS_VAR		373149	0					
ANR	373242	Identifier	IS_VAR		373149	1					
ANR	373243	CallExpression	UNEXPECTED ( object == NULL )		373149	1					
ANR	373244	Callee	UNEXPECTED		373149	0					
ANR	373245	Identifier	UNEXPECTED		373149	0					
ANR	373246	ArgumentList	object == NULL		373149	1					
ANR	373247	Argument	object == NULL		373149	0					
ANR	373248	EqualityExpression	object == NULL		373149	0		==			
ANR	373249	Identifier	object		373149	0					
ANR	373250	Identifier	NULL		373149	1					
ANR	373251	CompoundStatement		19:53:429:429	373149	1					
ANR	373252	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	16929:2:513032:513122	373149	0	True				
ANR	373253	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		373149	0					
ANR	373254	Callee	zend_throw_error		373149	0					
ANR	373255	Identifier	zend_throw_error		373149	0					
ANR	373256	ArgumentList	NULL		373149	1					
ANR	373257	Argument	NULL		373149	0					
ANR	373258	Identifier	NULL		373149	0					
ANR	373259	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		373149	1					
ANR	373260	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		373149	0					
ANR	373261	ExpressionStatement	HANDLE_EXCEPTION ( )	16931:2:513127:513145	373149	1	True				
ANR	373262	CallExpression	HANDLE_EXCEPTION ( )		373149	0					
ANR	373263	Callee	HANDLE_EXCEPTION		373149	0					
ANR	373264	Identifier	HANDLE_EXCEPTION		373149	0					
ANR	373265	ArgumentList			373149	1					
ANR	373266	DoStatement	do		373149	9					
ANR	373267	CompoundStatement		25:4:556:556	373149	0					
ANR	373268	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		373149	0					
ANR	373269	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	16935:6:513163:513226	373149	0	True				
ANR	373270	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		373149	0		&&			
ANR	373271	EqualityExpression	IS_VAR != IS_UNUSED		373149	0		!=			
ANR	373272	Identifier	IS_VAR		373149	0					
ANR	373273	Identifier	IS_UNUSED		373149	1					
ANR	373274	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		373149	1					
ANR	373275	Callee	UNEXPECTED		373149	0					
ANR	373276	Identifier	UNEXPECTED		373149	0					
ANR	373277	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		373149	1					
ANR	373278	Argument	Z_TYPE_P ( object ) != IS_OBJECT		373149	0					
ANR	373279	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		373149	0		!=			
ANR	373280	CallExpression	Z_TYPE_P ( object )		373149	0					
ANR	373281	Callee	Z_TYPE_P		373149	0					
ANR	373282	Identifier	Z_TYPE_P		373149	0					
ANR	373283	ArgumentList	object		373149	1					
ANR	373284	Argument	object		373149	0					
ANR	373285	Identifier	object		373149	0					
ANR	373286	Identifier	IS_OBJECT		373149	1					
ANR	373287	CompoundStatement		26:72:630:630	373149	1					
ANR	373288	ExpressionStatement	ZVAL_DEREF ( object )	16936:3:513234:513252	373149	0	True				
ANR	373289	CallExpression	ZVAL_DEREF ( object )		373149	0					
ANR	373290	Callee	ZVAL_DEREF		373149	0					
ANR	373291	Identifier	ZVAL_DEREF		373149	0					
ANR	373292	ArgumentList	object		373149	1					
ANR	373293	Argument	object		373149	0					
ANR	373294	Identifier	object		373149	0					
ANR	373295	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		373149	1					
ANR	373296	Condition	UNEXPECTED ( ! make_real_object ( object ) )	16937:7:513261:513297	373149	0	True				
ANR	373297	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		373149	0					
ANR	373298	Callee	UNEXPECTED		373149	0					
ANR	373299	Identifier	UNEXPECTED		373149	0					
ANR	373300	ArgumentList	! make_real_object ( object )		373149	1					
ANR	373301	Argument	! make_real_object ( object )		373149	0					
ANR	373302	UnaryOperationExpression	! make_real_object ( object )		373149	0					
ANR	373303	UnaryOperator	!		373149	0					
ANR	373304	CallExpression	make_real_object ( object )		373149	1					
ANR	373305	Callee	make_real_object		373149	0					
ANR	373306	Identifier	make_real_object		373149	0					
ANR	373307	ArgumentList	object		373149	1					
ANR	373308	Argument	object		373149	0					
ANR	373309	Identifier	object		373149	0					
ANR	373310	CompoundStatement		28:46:701:701	373149	1					
ANR	373311	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	16938:4:513306:513384	373149	0	True				
ANR	373312	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		373149	0					
ANR	373313	Callee	zend_error		373149	0					
ANR	373314	Identifier	zend_error		373149	0					
ANR	373315	ArgumentList	E_WARNING		373149	1					
ANR	373316	Argument	E_WARNING		373149	0					
ANR	373317	Identifier	E_WARNING		373149	0					
ANR	373318	Argument	"""Attempt to increment/decrement property of non-object"""		373149	1					
ANR	373319	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		373149	0					
ANR	373320	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	16939:4:513390:513427	373149	1	True				
ANR	373321	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		373149	0					
ANR	373322	Callee	ZVAL_NULL		373149	0					
ANR	373323	Identifier	ZVAL_NULL		373149	0					
ANR	373324	ArgumentList	EX_VAR ( opline -> result . var )		373149	1					
ANR	373325	Argument	EX_VAR ( opline -> result . var )		373149	0					
ANR	373326	CallExpression	EX_VAR ( opline -> result . var )		373149	0					
ANR	373327	Callee	EX_VAR		373149	0					
ANR	373328	Identifier	EX_VAR		373149	0					
ANR	373329	ArgumentList	opline -> result . var		373149	1					
ANR	373330	Argument	opline -> result . var		373149	0					
ANR	373331	MemberAccess	opline -> result . var		373149	0					
ANR	373332	PtrMemberAccess	opline -> result		373149	0					
ANR	373333	Identifier	opline		373149	0					
ANR	373334	Identifier	result		373149	1					
ANR	373335	Identifier	var		373149	1					
ANR	373336	BreakStatement	break ;	16940:4:513433:513438	373149	2	True				
ANR	373337	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		373149	1					
ANR	373338	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	16946:6:513512:513736	373149	0	True				
ANR	373339	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		373149	0		&&			
ANR	373340	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		373149	0					
ANR	373341	Callee	EXPECTED		373149	0					
ANR	373342	Identifier	EXPECTED		373149	0					
ANR	373343	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		373149	1					
ANR	373344	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		373149	0					
ANR	373345	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		373149	0					
ANR	373346	CallExpression	Z_OBJ_HT_P ( object )		373149	0					
ANR	373347	Callee	Z_OBJ_HT_P		373149	0					
ANR	373348	Identifier	Z_OBJ_HT_P		373149	0					
ANR	373349	ArgumentList	object		373149	1					
ANR	373350	Argument	object		373149	0					
ANR	373351	Identifier	object		373149	0					
ANR	373352	Identifier	get_property_ptr_ptr		373149	1					
ANR	373353	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		373149	1					
ANR	373354	Callee	EXPECTED		373149	0					
ANR	373355	Identifier	EXPECTED		373149	0					
ANR	373356	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		373149	1					
ANR	373357	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		373149	0					
ANR	373358	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		373149	0		!=			
ANR	373359	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		373149	0		=			
ANR	373360	Identifier	zptr		373149	0					
ANR	373361	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		373149	1					
ANR	373362	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		373149	0					
ANR	373363	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		373149	0					
ANR	373364	CallExpression	Z_OBJ_HT_P ( object )		373149	0					
ANR	373365	Callee	Z_OBJ_HT_P		373149	0					
ANR	373366	Identifier	Z_OBJ_HT_P		373149	0					
ANR	373367	ArgumentList	object		373149	1					
ANR	373368	Argument	object		373149	0					
ANR	373369	Identifier	object		373149	0					
ANR	373370	Identifier	get_property_ptr_ptr		373149	1					
ANR	373371	ArgumentList	object		373149	1					
ANR	373372	Argument	object		373149	0					
ANR	373373	Identifier	object		373149	0					
ANR	373374	Argument	property		373149	1					
ANR	373375	Identifier	property		373149	0					
ANR	373376	Argument	BP_VAR_RW		373149	2					
ANR	373377	Identifier	BP_VAR_RW		373149	0					
ANR	373378	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		373149	3					
ANR	373379	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		373149	0					
ANR	373380	Condition	IS_CONST == IS_CONST		373149	0					
ANR	373381	EqualityExpression	IS_CONST == IS_CONST		373149	0		==			
ANR	373382	Identifier	IS_CONST		373149	0					
ANR	373383	Identifier	IS_CONST		373149	1					
ANR	373384	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		373149	1					
ANR	373385	Callee	CACHE_ADDR		373149	0					
ANR	373386	Identifier	CACHE_ADDR		373149	0					
ANR	373387	ArgumentList	Z_CACHE_SLOT_P ( property )		373149	1					
ANR	373388	Argument	Z_CACHE_SLOT_P ( property )		373149	0					
ANR	373389	CallExpression	Z_CACHE_SLOT_P ( property )		373149	0					
ANR	373390	Callee	Z_CACHE_SLOT_P		373149	0					
ANR	373391	Identifier	Z_CACHE_SLOT_P		373149	0					
ANR	373392	ArgumentList	property		373149	1					
ANR	373393	Argument	property		373149	0					
ANR	373394	Identifier	property		373149	0					
ANR	373395	Identifier	NULL		373149	2					
ANR	373396	Identifier	NULL		373149	1					
ANR	373397	CompoundStatement		38:176:1140:1140	373149	1					
ANR	373398	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		373149	0					
ANR	373399	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	16949:7:513749:513783	373149	0	True				
ANR	373400	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		373149	0					
ANR	373401	Callee	EXPECTED		373149	0					
ANR	373402	Identifier	EXPECTED		373149	0					
ANR	373403	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		373149	1					
ANR	373404	Argument	Z_TYPE_P ( zptr ) == IS_LONG		373149	0					
ANR	373405	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		373149	0		==			
ANR	373406	CallExpression	Z_TYPE_P ( zptr )		373149	0					
ANR	373407	Callee	Z_TYPE_P		373149	0					
ANR	373408	Identifier	Z_TYPE_P		373149	0					
ANR	373409	ArgumentList	zptr		373149	1					
ANR	373410	Argument	zptr		373149	0					
ANR	373411	Identifier	zptr		373149	0					
ANR	373412	Identifier	IS_LONG		373149	1					
ANR	373413	CompoundStatement		40:44:1187:1187	373149	1					
ANR	373414	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	16950:4:513792:513841	373149	0	True				
ANR	373415	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		373149	0					
ANR	373416	Callee	ZVAL_COPY_VALUE		373149	0					
ANR	373417	Identifier	ZVAL_COPY_VALUE		373149	0					
ANR	373418	ArgumentList	EX_VAR ( opline -> result . var )		373149	1					
ANR	373419	Argument	EX_VAR ( opline -> result . var )		373149	0					
ANR	373420	CallExpression	EX_VAR ( opline -> result . var )		373149	0					
ANR	373421	Callee	EX_VAR		373149	0					
ANR	373422	Identifier	EX_VAR		373149	0					
ANR	373423	ArgumentList	opline -> result . var		373149	1					
ANR	373424	Argument	opline -> result . var		373149	0					
ANR	373425	MemberAccess	opline -> result . var		373149	0					
ANR	373426	PtrMemberAccess	opline -> result		373149	0					
ANR	373427	Identifier	opline		373149	0					
ANR	373428	Identifier	result		373149	1					
ANR	373429	Identifier	var		373149	1					
ANR	373430	Argument	zptr		373149	1					
ANR	373431	Identifier	zptr		373149	0					
ANR	373432	IfStatement	if ( inc )		373149	1					
ANR	373433	Condition	inc	16951:8:513851:513853	373149	0	True				
ANR	373434	Identifier	inc		373149	0					
ANR	373435	CompoundStatement		42:13:1257:1257	373149	1					
ANR	373436	ExpressionStatement	fast_long_increment_function ( zptr )	16952:5:513863:513897	373149	0	True				
ANR	373437	CallExpression	fast_long_increment_function ( zptr )		373149	0					
ANR	373438	Callee	fast_long_increment_function		373149	0					
ANR	373439	Identifier	fast_long_increment_function		373149	0					
ANR	373440	ArgumentList	zptr		373149	1					
ANR	373441	Argument	zptr		373149	0					
ANR	373442	Identifier	zptr		373149	0					
ANR	373443	ElseStatement	else		373149	0					
ANR	373444	CompoundStatement		44:11:1311:1311	373149	0					
ANR	373445	ExpressionStatement	fast_long_decrement_function ( zptr )	16954:5:513917:513951	373149	0	True				
ANR	373446	CallExpression	fast_long_decrement_function ( zptr )		373149	0					
ANR	373447	Callee	fast_long_decrement_function		373149	0					
ANR	373448	Identifier	fast_long_decrement_function		373149	0					
ANR	373449	ArgumentList	zptr		373149	1					
ANR	373450	Argument	zptr		373149	0					
ANR	373451	Identifier	zptr		373149	0					
ANR	373452	ElseStatement	else		373149	0					
ANR	373453	CompoundStatement		47:10:1370:1370	373149	0					
ANR	373454	ExpressionStatement	ZVAL_DEREF ( zptr )	16957:4:513975:513991	373149	0	True				
ANR	373455	CallExpression	ZVAL_DEREF ( zptr )		373149	0					
ANR	373456	Callee	ZVAL_DEREF		373149	0					
ANR	373457	Identifier	ZVAL_DEREF		373149	0					
ANR	373458	ArgumentList	zptr		373149	1					
ANR	373459	Argument	zptr		373149	0					
ANR	373460	Identifier	zptr		373149	0					
ANR	373461	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	16958:4:513997:514046	373149	1	True				
ANR	373462	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		373149	0					
ANR	373463	Callee	ZVAL_COPY_VALUE		373149	0					
ANR	373464	Identifier	ZVAL_COPY_VALUE		373149	0					
ANR	373465	ArgumentList	EX_VAR ( opline -> result . var )		373149	1					
ANR	373466	Argument	EX_VAR ( opline -> result . var )		373149	0					
ANR	373467	CallExpression	EX_VAR ( opline -> result . var )		373149	0					
ANR	373468	Callee	EX_VAR		373149	0					
ANR	373469	Identifier	EX_VAR		373149	0					
ANR	373470	ArgumentList	opline -> result . var		373149	1					
ANR	373471	Argument	opline -> result . var		373149	0					
ANR	373472	MemberAccess	opline -> result . var		373149	0					
ANR	373473	PtrMemberAccess	opline -> result		373149	0					
ANR	373474	Identifier	opline		373149	0					
ANR	373475	Identifier	result		373149	1					
ANR	373476	Identifier	var		373149	1					
ANR	373477	Argument	zptr		373149	1					
ANR	373478	Identifier	zptr		373149	0					
ANR	373479	ExpressionStatement	zval_opt_copy_ctor ( zptr )	16959:4:514052:514076	373149	2	True				
ANR	373480	CallExpression	zval_opt_copy_ctor ( zptr )		373149	0					
ANR	373481	Callee	zval_opt_copy_ctor		373149	0					
ANR	373482	Identifier	zval_opt_copy_ctor		373149	0					
ANR	373483	ArgumentList	zptr		373149	1					
ANR	373484	Argument	zptr		373149	0					
ANR	373485	Identifier	zptr		373149	0					
ANR	373486	IfStatement	if ( inc )		373149	3					
ANR	373487	Condition	inc	16960:8:514086:514088	373149	0	True				
ANR	373488	Identifier	inc		373149	0					
ANR	373489	CompoundStatement		51:13:1492:1492	373149	1					
ANR	373490	ExpressionStatement	increment_function ( zptr )	16961:5:514098:514122	373149	0	True				
ANR	373491	CallExpression	increment_function ( zptr )		373149	0					
ANR	373492	Callee	increment_function		373149	0					
ANR	373493	Identifier	increment_function		373149	0					
ANR	373494	ArgumentList	zptr		373149	1					
ANR	373495	Argument	zptr		373149	0					
ANR	373496	Identifier	zptr		373149	0					
ANR	373497	ElseStatement	else		373149	0					
ANR	373498	CompoundStatement		53:11:1536:1536	373149	0					
ANR	373499	ExpressionStatement	decrement_function ( zptr )	16963:5:514142:514166	373149	0	True				
ANR	373500	CallExpression	decrement_function ( zptr )		373149	0					
ANR	373501	Callee	decrement_function		373149	0					
ANR	373502	Identifier	decrement_function		373149	0					
ANR	373503	ArgumentList	zptr		373149	1					
ANR	373504	Argument	zptr		373149	0					
ANR	373505	Identifier	zptr		373149	0					
ANR	373506	ElseStatement	else		373149	0					
ANR	373507	CompoundStatement		57:9:1589:1589	373149	0					
ANR	373508	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	16967:3:514193:514352	373149	0	True				
ANR	373509	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		373149	0					
ANR	373510	Callee	zend_post_incdec_overloaded_property		373149	0					
ANR	373511	Identifier	zend_post_incdec_overloaded_property		373149	0					
ANR	373512	ArgumentList	object		373149	1					
ANR	373513	Argument	object		373149	0					
ANR	373514	Identifier	object		373149	0					
ANR	373515	Argument	property		373149	1					
ANR	373516	Identifier	property		373149	0					
ANR	373517	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		373149	2					
ANR	373518	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		373149	0					
ANR	373519	Condition	IS_CONST == IS_CONST		373149	0					
ANR	373520	EqualityExpression	IS_CONST == IS_CONST		373149	0		==			
ANR	373521	Identifier	IS_CONST		373149	0					
ANR	373522	Identifier	IS_CONST		373149	1					
ANR	373523	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		373149	1					
ANR	373524	Callee	CACHE_ADDR		373149	0					
ANR	373525	Identifier	CACHE_ADDR		373149	0					
ANR	373526	ArgumentList	Z_CACHE_SLOT_P ( property )		373149	1					
ANR	373527	Argument	Z_CACHE_SLOT_P ( property )		373149	0					
ANR	373528	CallExpression	Z_CACHE_SLOT_P ( property )		373149	0					
ANR	373529	Callee	Z_CACHE_SLOT_P		373149	0					
ANR	373530	Identifier	Z_CACHE_SLOT_P		373149	0					
ANR	373531	ArgumentList	property		373149	1					
ANR	373532	Argument	property		373149	0					
ANR	373533	Identifier	property		373149	0					
ANR	373534	Identifier	NULL		373149	2					
ANR	373535	Argument	inc		373149	3					
ANR	373536	Identifier	inc		373149	0					
ANR	373537	Argument	EX_VAR ( opline -> result . var )		373149	4					
ANR	373538	CallExpression	EX_VAR ( opline -> result . var )		373149	0					
ANR	373539	Callee	EX_VAR		373149	0					
ANR	373540	Identifier	EX_VAR		373149	0					
ANR	373541	ArgumentList	opline -> result . var		373149	1					
ANR	373542	Argument	opline -> result . var		373149	0					
ANR	373543	MemberAccess	opline -> result . var		373149	0					
ANR	373544	PtrMemberAccess	opline -> result		373149	0					
ANR	373545	Identifier	opline		373149	0					
ANR	373546	Identifier	result		373149	1					
ANR	373547	Identifier	var		373149	1					
ANR	373548	Condition	0	16969:10:514368:514368	373149	1	True				
ANR	373549	PrimaryExpression	0		373149	0					
ANR	373550	IfStatement	if ( UNEXPECTED ( free_op1 ) )		373149	10					
ANR	373551	Condition	UNEXPECTED ( free_op1 )	16971:5:514378:514397	373149	0	True				
ANR	373552	CallExpression	UNEXPECTED ( free_op1 )		373149	0					
ANR	373553	Callee	UNEXPECTED		373149	0					
ANR	373554	Identifier	UNEXPECTED		373149	0					
ANR	373555	ArgumentList	free_op1		373149	1					
ANR	373556	Argument	free_op1		373149	0					
ANR	373557	Identifier	free_op1		373149	0					
ANR	373558	CompoundStatement		62:27:1801:1801	373149	1					
ANR	373559	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	16971:28:514401:514429	373149	0	True				
ANR	373560	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		373149	0					
ANR	373561	Callee	zval_ptr_dtor_nogc		373149	0					
ANR	373562	Identifier	zval_ptr_dtor_nogc		373149	0					
ANR	373563	ArgumentList	free_op1		373149	1					
ANR	373564	Argument	free_op1		373149	0					
ANR	373565	Identifier	free_op1		373149	0					
ANR	373566	ExpressionStatement		16971:58:514431:514431	373149	11	True				
ANR	373567	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	16972:1:514434:514471	373149	12	True				
ANR	373568	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		373149	0					
ANR	373569	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		373149	0					
ANR	373570	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		373149	0					
ANR	373571	ArgumentList			373149	1					
ANR	373572	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		373149	1					
ANR	373573	Identifier	zend_post_incdec_property_helper_SPEC_VAR_CONST		373149	2					
ANR	373574	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		373149	3					
ANR	373575	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	16909:93:512561:512595	373149	0	True				
ANR	373576	ParameterType	int inc		373149	0					
ANR	373577	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		373149	1					
ANR	373578	CFGEntryNode	ENTRY		373149		True				
ANR	373579	CFGExitNode	EXIT		373149		True				
ANR	373580	Symbol	opline -> op1		373149						
ANR	373581	Symbol	opline -> op2		373149						
ANR	373582	Symbol	Z_OBJ_P		373149						
ANR	373583	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		373149						
ANR	373584	Symbol	_get_zval_ptr_ptr_var		373149						
ANR	373585	Symbol	zptr		373149						
ANR	373586	Symbol	free_op1		373149						
ANR	373587	Symbol	execute_data		373149						
ANR	373588	Symbol	opline -> result		373149						
ANR	373589	Symbol	UNEXPECTED		373149						
ANR	373590	Symbol	E_WARNING		373149						
ANR	373591	Symbol	make_real_object		373149						
ANR	373592	Symbol	opline		373149						
ANR	373593	Symbol	IS_LONG		373149						
ANR	373594	Symbol	property		373149						
ANR	373595	Symbol	opline -> op1 . var		373149						
ANR	373596	Symbol	& free_op1		373149						
ANR	373597	Symbol	inc		373149						
ANR	373598	Symbol	BP_VAR_RW		373149						
ANR	373599	Symbol	IS_CONST		373149						
ANR	373600	Symbol	NULL		373149						
ANR	373601	Symbol	EX_CONSTANT		373149						
ANR	373602	Symbol	Z_CACHE_SLOT_P		373149						
ANR	373603	Symbol	Z_TYPE_P		373149						
ANR	373604	Symbol	* Z_OBJ_HT_P		373149						
ANR	373605	Symbol	CACHE_ADDR		373149						
ANR	373606	Symbol	* opline		373149						
ANR	373607	Symbol	Z_OBJ_HT_P		373149						
ANR	373608	Symbol	EX_VAR		373149						
ANR	373609	Symbol	IS_OBJECT		373149						
ANR	373610	Symbol	IS_VAR		373149						
ANR	373611	Symbol	EXPECTED		373149						
ANR	373612	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		373149						
ANR	373613	Symbol	opline -> result . var		373149						
ANR	373614	Symbol	object		373149						
ANR	373615	Symbol	IS_UNUSED		373149						
ANR	373616	DeclStmt									
ANR	373617	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373618	DeclStmt									
ANR	373619	Decl							zval	zval *	container
ANR	373620	DeclStmt									
ANR	373621	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373622	DeclStmt									
ANR	373623	Decl							zval	zval *	container
ANR	373624	DeclStmt									
ANR	373625	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	373626	DeclStmt									
ANR	373627	Decl							zend_free_op	zend_free_op	free_op1
ANR	373628	DeclStmt									
ANR	373629	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373630	DeclStmt									
ANR	373631	Decl							zval	zval *	container
ANR	373632	DeclStmt									
ANR	373633	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373634	DeclStmt									
ANR	373635	Decl							zval	zval *	container
ANR	373636	DeclStmt									
ANR	373637	Decl							zval	zval *	offset
ANR	373638	DeclStmt									
ANR	373639	Decl							zend_object	zend_object *	zobj
ANR	373640	DeclStmt									
ANR	373641	Decl							zval	zval *	retval
ANR	373642	DeclStmt									
ANR	373643	Decl							uint32_t	uint32_t	prop_offset
ANR	373644	DeclStmt									
ANR	373645	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373646	DeclStmt									
ANR	373647	Decl							zval	zval *	property
ANR	373648	DeclStmt									
ANR	373649	Decl							zval	zval *	container
ANR	373650	DeclStmt									
ANR	373651	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373652	DeclStmt									
ANR	373653	Decl							zval	zval *	property
ANR	373654	DeclStmt									
ANR	373655	Decl							zval	zval *	container
ANR	373656	DeclStmt									
ANR	373657	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	373658	DeclStmt									
ANR	373659	Decl							zend_free_op	zend_free_op	free_op1
ANR	373660	DeclStmt									
ANR	373661	Decl							zval	zval *	property
ANR	373662	DeclStmt									
ANR	373663	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373664	DeclStmt									
ANR	373665	Decl							zval	zval *	container
ANR	373666	Decl							zval	zval *	property
ANR	373667	DeclStmt									
ANR	373668	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373669	DeclStmt									
ANR	373670	Decl							zval	zval *	object
ANR	373671	DeclStmt									
ANR	373672	Decl							zval	zval *	property_name
ANR	373673	DeclStmt									
ANR	373674	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373675	DeclStmt									
ANR	373676	Decl							zval	zval *	object_ptr
ANR	373677	DeclStmt									
ANR	373678	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	373679	DeclStmt									
ANR	373680	Decl							zval	zval *	value
ANR	373681	DeclStmt									
ANR	373682	Decl							zval	zval *	variable_ptr
ANR	373683	DeclStmt									
ANR	373684	Decl							zval	zval *	dim
ANR	373685	DeclStmt									
ANR	373686	Decl							zval	zval *	property_name
ANR	373687	DeclStmt									
ANR	373688	Decl							zend_long	zend_long	offset
ANR	373689	DeclStmt									
ANR	373690	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373691	DeclStmt									
ANR	373692	Decl							zval	zval *	value
ANR	373693	DeclStmt									
ANR	373694	Decl							zval	zval *	variable_ptr
ANR	373695	DeclStmt									
ANR	373696	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	373697	DeclStmt									
ANR	373698	Decl							zend_class_entry	zend_class_entry *	ce
ANR	373699	DeclStmt									
ANR	373700	Decl							zend_object	zend_object *	object
ANR	373701	DeclStmt									
ANR	373702	Decl							zend_function	zend_function *	fbc
ANR	373703	DeclStmt									
ANR	373704	Decl							zend_execute_data	zend_execute_data *	call
ANR	373705	DeclStmt									
ANR	373706	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	373707	DeclStmt									
ANR	373708	Decl							zend_constant	zend_constant *	c
ANR	373709	DeclStmt									
ANR	373710	Decl							char	char *	actual
ANR	373711	DeclStmt									
ANR	373712	Decl							zend_class_entry	zend_class_entry *	ce
ANR	373713	DeclStmt									
ANR	373714	Decl							zval	zval *	value
ANR	373715	DeclStmt									
ANR	373716	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373717	DeclStmt									
ANR	373718	Decl							zval	zval *	expr_ptr
ANR	373719	Decl							zval	zval	new_expr
ANR	373720	DeclStmt									
ANR	373721	Decl							zend_refcounted	zend_refcounted *	ref
ANR	373722	DeclStmt									
ANR	373723	Decl							zval	zval *	offset
ANR	373724	DeclStmt									
ANR	373725	Decl							zend_string	zend_string *	str
ANR	373726	DeclStmt									
ANR	373727	Decl							zend_ulong	zend_ulong	hval
ANR	373728	DeclStmt									
ANR	373729	Decl							zval	zval *	array
ANR	373730	DeclStmt									
ANR	373731	Decl							uint32_t	uint32_t	size
ANR	373732	DeclStmt									
ANR	373733	Decl							USE_OPLINE	USE_OPLINE	array
ANR	373734	DeclStmt									
ANR	373735	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373736	DeclStmt									
ANR	373737	Decl							zval	zval *	container
ANR	373738	DeclStmt									
ANR	373739	Decl							zval	zval *	offset
ANR	373740	DeclStmt									
ANR	373741	Decl							zend_ulong	zend_ulong	hval
ANR	373742	DeclStmt									
ANR	373743	Decl							zend_string	zend_string *	key
ANR	373744	DeclStmt									
ANR	373745	Decl							HashTable	HashTable *	ht
ANR	373746	DeclStmt									
ANR	373747	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373748	DeclStmt									
ANR	373749	Decl							zval	zval *	container
ANR	373750	DeclStmt									
ANR	373751	Decl							zval	zval *	offset
ANR	373752	DeclStmt									
ANR	373753	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	373754	DeclStmt									
ANR	373755	Decl							zend_free_op	zend_free_op	free_op1
ANR	373756	DeclStmt									
ANR	373757	Decl							zval	zval *	value
ANR	373758	DeclStmt									
ANR	373759	Decl							zval	zval *	value_ptr
ANR	373760	DeclStmt									
ANR	373761	Decl							zval	zval *	value
ANR	373762	DeclStmt									
ANR	373763	Decl							zval	zval *	key
ANR	373764	DeclStmt									
ANR	373765	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373766	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	373767	DeclStmt									
ANR	373768	Decl							zval	zval *	op1
ANR	373769	Decl							zval	zval *	op2
ANR	373770	DeclStmt									
ANR	373771	Decl							int	int	result
ANR	373772	DeclStmt									
ANR	373773	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373774	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	373775	DeclStmt									
ANR	373776	Decl							zval	zval *	op1
ANR	373777	Decl							zval	zval *	op2
ANR	373778	DeclStmt									
ANR	373779	Decl							int	int	result
ANR	373780	DeclStmt									
ANR	373781	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373782	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	373783	DeclStmt									
ANR	373784	Decl							zval	zval *	value
ANR	373785	DeclStmt									
ANR	373786	Decl							zval	zval *	variable_ptr
ANR	373787	DeclStmt									
ANR	373788	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	373789	DeclStmt									
ANR	373790	Decl							zend_free_op	zend_free_op	free_op1
ANR	373791	DeclStmt									
ANR	373792	Decl							zval	zval *	value
ANR	373793	DeclStmt									
ANR	373794	Decl							zval	zval *	value_ptr
ANR	373795	DeclStmt									
ANR	373796	Decl							zval	zval *	value
ANR	373797	DeclStmt									
ANR	373798	Decl							zend_free_op	zend_free_op	free_op2
ANR	373799	DeclStmt									
ANR	373800	Decl							zval	zval *	key
ANR	373801	DeclStmt									
ANR	373802	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373803	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	373804	DeclStmt									
ANR	373805	Decl							zval	zval *	op1
ANR	373806	Decl							zval	zval *	op2
ANR	373807	DeclStmt									
ANR	373808	Decl							int	int	result
ANR	373809	DeclStmt									
ANR	373810	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373811	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	373812	DeclStmt									
ANR	373813	Decl							zval	zval *	op1
ANR	373814	Decl							zval	zval *	op2
ANR	373815	DeclStmt									
ANR	373816	Decl							int	int	result
ANR	373817	DeclStmt									
ANR	373818	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373819	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	373820	DeclStmt									
ANR	373821	Decl							zval	zval *	value
ANR	373822	DeclStmt									
ANR	373823	Decl							zval	zval *	variable_ptr
ANR	373824	DeclStmt									
ANR	373825	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	373826	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	373827	DeclStmt									
ANR	373828	Decl							zval	zval *	variable_ptr
ANR	373829	DeclStmt									
ANR	373830	Decl							zval	zval *	value_ptr
ANR	373831	DeclStmt									
ANR	373832	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	373833	DeclStmt									
ANR	373834	Decl							zend_free_op	zend_free_op	free_op1
ANR	373835	DeclStmt									
ANR	373836	Decl							zval	zval *	value
ANR	373837	DeclStmt									
ANR	373838	Decl							zval	zval *	value_ptr
ANR	373839	DeclStmt									
ANR	373840	Decl							zval	zval *	value
ANR	373841	DeclStmt									
ANR	373842	Decl							zend_free_op	zend_free_op	free_op2
ANR	373843	DeclStmt									
ANR	373844	Decl							zval	zval *	key
ANR	373845	Function	zend_binary_assign_op_dim_helper_SPEC_VAR_UNUSED	18590:0:567832:570104							
ANR	373846	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_VAR_UNUSED (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		373845	0					
ANR	373847	CompoundStatement		18591:0:567980:570104	373845	0					
ANR	373848	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op_data1 ;"	18592:1:567983:568031	373845	0	True				
ANR	373849	IdentifierDecl	free_op1		373845	0					
ANR	373850	IdentifierDeclType	USE_OPLINE zend_free_op		373845	0					
ANR	373851	Identifier	free_op1		373845	1					
ANR	373852	IdentifierDecl	free_op_data1		373845	1					
ANR	373853	IdentifierDeclType	USE_OPLINE zend_free_op		373845	0					
ANR	373854	Identifier	free_op_data1		373845	1					
ANR	373855	IdentifierDeclStatement	"zval * var_ptr , rv ;"	18594:1:568034:568051	373845	1	True				
ANR	373856	IdentifierDecl	* var_ptr		373845	0					
ANR	373857	IdentifierDeclType	zval *		373845	0					
ANR	373858	Identifier	var_ptr		373845	1					
ANR	373859	IdentifierDecl	rv		373845	1					
ANR	373860	IdentifierDeclType	zval		373845	0					
ANR	373861	Identifier	rv		373845	1					
ANR	373862	IdentifierDeclStatement	"zval * value , * container , * dim ;"	18595:1:568054:568083	373845	2	True				
ANR	373863	IdentifierDecl	* value		373845	0					
ANR	373864	IdentifierDeclType	zval *		373845	0					
ANR	373865	Identifier	value		373845	1					
ANR	373866	IdentifierDecl	* container		373845	1					
ANR	373867	IdentifierDeclType	zval *		373845	0					
ANR	373868	Identifier	container		373845	1					
ANR	373869	IdentifierDecl	* dim		373845	2					
ANR	373870	IdentifierDeclType	zval *		373845	0					
ANR	373871	Identifier	dim		373845	1					
ANR	373872	ExpressionStatement	SAVE_OPLINE ( )	18597:1:568087:568100	373845	3	True				
ANR	373873	CallExpression	SAVE_OPLINE ( )		373845	0					
ANR	373874	Callee	SAVE_OPLINE		373845	0					
ANR	373875	Identifier	SAVE_OPLINE		373845	0					
ANR	373876	ArgumentList			373845	1					
ANR	373877	ExpressionStatement	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	18598:1:568103:568178	373845	4	True				
ANR	373878	AssignmentExpression	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		373845	0		=			
ANR	373879	Identifier	container		373845	0					
ANR	373880	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		373845	1					
ANR	373881	Callee	_get_zval_ptr_ptr_var		373845	0					
ANR	373882	Identifier	_get_zval_ptr_ptr_var		373845	0					
ANR	373883	ArgumentList	opline -> op1 . var		373845	1					
ANR	373884	Argument	opline -> op1 . var		373845	0					
ANR	373885	MemberAccess	opline -> op1 . var		373845	0					
ANR	373886	PtrMemberAccess	opline -> op1		373845	0					
ANR	373887	Identifier	opline		373845	0					
ANR	373888	Identifier	op1		373845	1					
ANR	373889	Identifier	var		373845	1					
ANR	373890	Argument	execute_data		373845	1					
ANR	373891	Identifier	execute_data		373845	0					
ANR	373892	Argument	& free_op1		373845	2					
ANR	373893	UnaryOperationExpression	& free_op1		373845	0					
ANR	373894	UnaryOperator	&		373845	0					
ANR	373895	Identifier	free_op1		373845	1					
ANR	373896	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		373845	5					
ANR	373897	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	18599:5:568185:568245	373845	0	True				
ANR	373898	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		373845	0		&&			
ANR	373899	EqualityExpression	IS_VAR == IS_UNUSED		373845	0		==			
ANR	373900	Identifier	IS_VAR		373845	0					
ANR	373901	Identifier	IS_UNUSED		373845	1					
ANR	373902	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		373845	1					
ANR	373903	Callee	UNEXPECTED		373845	0					
ANR	373904	Identifier	UNEXPECTED		373845	0					
ANR	373905	ArgumentList	Z_OBJ_P ( container ) == NULL		373845	1					
ANR	373906	Argument	Z_OBJ_P ( container ) == NULL		373845	0					
ANR	373907	EqualityExpression	Z_OBJ_P ( container ) == NULL		373845	0		==			
ANR	373908	CallExpression	Z_OBJ_P ( container )		373845	0					
ANR	373909	Callee	Z_OBJ_P		373845	0					
ANR	373910	Identifier	Z_OBJ_P		373845	0					
ANR	373911	ArgumentList	container		373845	1					
ANR	373912	Argument	container		373845	0					
ANR	373913	Identifier	container		373845	0					
ANR	373914	Identifier	NULL		373845	1					
ANR	373915	CompoundStatement		9:68:267:267	373845	1					
ANR	373916	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	18600:2:568252:568316	373845	0	True				
ANR	373917	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		373845	0					
ANR	373918	Callee	zend_throw_error		373845	0					
ANR	373919	Identifier	zend_throw_error		373845	0					
ANR	373920	ArgumentList	NULL		373845	1					
ANR	373921	Argument	NULL		373845	0					
ANR	373922	Identifier	NULL		373845	0					
ANR	373923	Argument	"""Using $this when not in object context"""		373845	1					
ANR	373924	PrimaryExpression	"""Using $this when not in object context"""		373845	0					
ANR	373925	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	18601:2:568320:568380	373845	1	True				
ANR	373926	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		373845	0					
ANR	373927	Callee	FREE_UNFETCHED_OP		373845	0					
ANR	373928	Identifier	FREE_UNFETCHED_OP		373845	0					
ANR	373929	ArgumentList	( opline + 1 ) -> op1_type		373845	1					
ANR	373930	Argument	( opline + 1 ) -> op1_type		373845	0					
ANR	373931	PtrMemberAccess	( opline + 1 ) -> op1_type		373845	0					
ANR	373932	AdditiveExpression	opline + 1		373845	0		+			
ANR	373933	Identifier	opline		373845	0					
ANR	373934	PrimaryExpression	1		373845	1					
ANR	373935	Identifier	op1_type		373845	1					
ANR	373936	Argument	( opline + 1 ) -> op1 . var		373845	1					
ANR	373937	MemberAccess	( opline + 1 ) -> op1 . var		373845	0					
ANR	373938	PtrMemberAccess	( opline + 1 ) -> op1		373845	0					
ANR	373939	AdditiveExpression	opline + 1		373845	0		+			
ANR	373940	Identifier	opline		373845	0					
ANR	373941	PrimaryExpression	1		373845	1					
ANR	373942	Identifier	op1		373845	1					
ANR	373943	Identifier	var		373845	1					
ANR	373944	ExpressionStatement	HANDLE_EXCEPTION ( )	18603:2:568385:568403	373845	2	True				
ANR	373945	CallExpression	HANDLE_EXCEPTION ( )		373845	0					
ANR	373946	Callee	HANDLE_EXCEPTION		373845	0					
ANR	373947	Identifier	HANDLE_EXCEPTION		373845	0					
ANR	373948	ArgumentList			373845	1					
ANR	373949	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( container == NULL ) )		373845	6					
ANR	373950	Condition	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )	18605:5:568413:568461	373845	0	True				
ANR	373951	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )		373845	0		&&			
ANR	373952	EqualityExpression	IS_VAR == IS_VAR		373845	0		==			
ANR	373953	Identifier	IS_VAR		373845	0					
ANR	373954	Identifier	IS_VAR		373845	1					
ANR	373955	CallExpression	UNEXPECTED ( container == NULL )		373845	1					
ANR	373956	Callee	UNEXPECTED		373845	0					
ANR	373957	Identifier	UNEXPECTED		373845	0					
ANR	373958	ArgumentList	container == NULL		373845	1					
ANR	373959	Argument	container == NULL		373845	0					
ANR	373960	EqualityExpression	container == NULL		373845	0		==			
ANR	373961	Identifier	container		373845	0					
ANR	373962	Identifier	NULL		373845	1					
ANR	373963	CompoundStatement		15:56:483:483	373845	1					
ANR	373964	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	18606:2:568468:568530	373845	0	True				
ANR	373965	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		373845	0					
ANR	373966	Callee	zend_throw_error		373845	0					
ANR	373967	Identifier	zend_throw_error		373845	0					
ANR	373968	ArgumentList	NULL		373845	1					
ANR	373969	Argument	NULL		373845	0					
ANR	373970	Identifier	NULL		373845	0					
ANR	373971	Argument	"""Cannot use string offset as an array"""		373845	1					
ANR	373972	PrimaryExpression	"""Cannot use string offset as an array"""		373845	0					
ANR	373973	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	18607:2:568534:568594	373845	1	True				
ANR	373974	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		373845	0					
ANR	373975	Callee	FREE_UNFETCHED_OP		373845	0					
ANR	373976	Identifier	FREE_UNFETCHED_OP		373845	0					
ANR	373977	ArgumentList	( opline + 1 ) -> op1_type		373845	1					
ANR	373978	Argument	( opline + 1 ) -> op1_type		373845	0					
ANR	373979	PtrMemberAccess	( opline + 1 ) -> op1_type		373845	0					
ANR	373980	AdditiveExpression	opline + 1		373845	0		+			
ANR	373981	Identifier	opline		373845	0					
ANR	373982	PrimaryExpression	1		373845	1					
ANR	373983	Identifier	op1_type		373845	1					
ANR	373984	Argument	( opline + 1 ) -> op1 . var		373845	1					
ANR	373985	MemberAccess	( opline + 1 ) -> op1 . var		373845	0					
ANR	373986	PtrMemberAccess	( opline + 1 ) -> op1		373845	0					
ANR	373987	AdditiveExpression	opline + 1		373845	0		+			
ANR	373988	Identifier	opline		373845	0					
ANR	373989	PrimaryExpression	1		373845	1					
ANR	373990	Identifier	op1		373845	1					
ANR	373991	Identifier	var		373845	1					
ANR	373992	ExpressionStatement	HANDLE_EXCEPTION ( )	18609:2:568599:568617	373845	2	True				
ANR	373993	CallExpression	HANDLE_EXCEPTION ( )		373845	0					
ANR	373994	Callee	HANDLE_EXCEPTION		373845	0					
ANR	373995	Identifier	HANDLE_EXCEPTION		373845	0					
ANR	373996	ArgumentList			373845	1					
ANR	373997	ExpressionStatement	dim = NULL	18612:1:568624:568634	373845	7	True				
ANR	373998	AssignmentExpression	dim = NULL		373845	0		=			
ANR	373999	Identifier	dim		373845	0					
ANR	374000	Identifier	NULL		373845	1					
ANR	374001	DoStatement	do		373845	8					
ANR	374002	CompoundStatement		24:4:660:660	373845	0					
ANR	374003	IfStatement	if ( IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		373845	0					
ANR	374004	Condition	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	18615:6:568649:568714	373845	0	True				
ANR	374005	OrExpression	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		373845	0		||			
ANR	374006	EqualityExpression	IS_VAR == IS_UNUSED		373845	0		==			
ANR	374007	Identifier	IS_VAR		373845	0					
ANR	374008	Identifier	IS_UNUSED		373845	1					
ANR	374009	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		373845	1					
ANR	374010	Callee	UNEXPECTED		373845	0					
ANR	374011	Identifier	UNEXPECTED		373845	0					
ANR	374012	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		373845	1					
ANR	374013	Argument	Z_TYPE_P ( container ) != IS_ARRAY		373845	0					
ANR	374014	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		373845	0		!=			
ANR	374015	CallExpression	Z_TYPE_P ( container )		373845	0					
ANR	374016	Callee	Z_TYPE_P		373845	0					
ANR	374017	Identifier	Z_TYPE_P		373845	0					
ANR	374018	ArgumentList	container		373845	1					
ANR	374019	Argument	container		373845	0					
ANR	374020	Identifier	container		373845	0					
ANR	374021	Identifier	IS_ARRAY		373845	1					
ANR	374022	CompoundStatement		25:74:736:736	373845	1					
ANR	374023	IfStatement	if ( IS_VAR != IS_UNUSED )		373845	0					
ANR	374024	Condition	IS_VAR != IS_UNUSED	18616:7:568726:568744	373845	0	True				
ANR	374025	EqualityExpression	IS_VAR != IS_UNUSED		373845	0		!=			
ANR	374026	Identifier	IS_VAR		373845	0					
ANR	374027	Identifier	IS_UNUSED		373845	1					
ANR	374028	CompoundStatement		26:28:766:766	373845	1					
ANR	374029	ExpressionStatement	ZVAL_DEREF ( container )	18617:4:568753:568774	373845	0	True				
ANR	374030	CallExpression	ZVAL_DEREF ( container )		373845	0					
ANR	374031	Callee	ZVAL_DEREF		373845	0					
ANR	374032	Identifier	ZVAL_DEREF		373845	0					
ANR	374033	ArgumentList	container		373845	1					
ANR	374034	Argument	container		373845	0					
ANR	374035	Identifier	container		373845	0					
ANR	374036	IfStatement	if ( IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		373845	1					
ANR	374037	Condition	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	18619:7:568788:568852	373845	0	True				
ANR	374038	OrExpression	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		373845	0		||			
ANR	374039	EqualityExpression	IS_VAR == IS_UNUSED		373845	0		==			
ANR	374040	Identifier	IS_VAR		373845	0					
ANR	374041	Identifier	IS_UNUSED		373845	1					
ANR	374042	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		373845	1					
ANR	374043	Callee	EXPECTED		373845	0					
ANR	374044	Identifier	EXPECTED		373845	0					
ANR	374045	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		373845	1					
ANR	374046	Argument	Z_TYPE_P ( container ) == IS_OBJECT		373845	0					
ANR	374047	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		373845	0		==			
ANR	374048	CallExpression	Z_TYPE_P ( container )		373845	0					
ANR	374049	Callee	Z_TYPE_P		373845	0					
ANR	374050	Identifier	Z_TYPE_P		373845	0					
ANR	374051	ArgumentList	container		373845	1					
ANR	374052	Argument	container		373845	0					
ANR	374053	Identifier	container		373845	0					
ANR	374054	Identifier	IS_OBJECT		373845	1					
ANR	374055	CompoundStatement		29:74:874:874	373845	1					
ANR	374056	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	18620:4:568861:568952	373845	0	True				
ANR	374057	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		373845	0		=			
ANR	374058	Identifier	value		373845	0					
ANR	374059	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		373845	1					
ANR	374060	Callee	get_zval_ptr_r		373845	0					
ANR	374061	Identifier	get_zval_ptr_r		373845	0					
ANR	374062	ArgumentList	( opline + 1 ) -> op1_type		373845	1					
ANR	374063	Argument	( opline + 1 ) -> op1_type		373845	0					
ANR	374064	PtrMemberAccess	( opline + 1 ) -> op1_type		373845	0					
ANR	374065	AdditiveExpression	opline + 1		373845	0		+			
ANR	374066	Identifier	opline		373845	0					
ANR	374067	PrimaryExpression	1		373845	1					
ANR	374068	Identifier	op1_type		373845	1					
ANR	374069	Argument	( opline + 1 ) -> op1		373845	1					
ANR	374070	PtrMemberAccess	( opline + 1 ) -> op1		373845	0					
ANR	374071	AdditiveExpression	opline + 1		373845	0		+			
ANR	374072	Identifier	opline		373845	0					
ANR	374073	PrimaryExpression	1		373845	1					
ANR	374074	Identifier	op1		373845	1					
ANR	374075	Argument	execute_data		373845	2					
ANR	374076	Identifier	execute_data		373845	0					
ANR	374077	Argument	& free_op_data1		373845	3					
ANR	374078	UnaryOperationExpression	& free_op_data1		373845	0					
ANR	374079	UnaryOperator	&		373845	0					
ANR	374080	Identifier	free_op_data1		373845	1					
ANR	374081	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	18621:4:568958:569096	373845	1	True				
ANR	374082	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		373845	0					
ANR	374083	Callee	zend_binary_assign_op_obj_dim		373845	0					
ANR	374084	Identifier	zend_binary_assign_op_obj_dim		373845	0					
ANR	374085	ArgumentList	container		373845	1					
ANR	374086	Argument	container		373845	0					
ANR	374087	Identifier	container		373845	0					
ANR	374088	Argument	dim		373845	1					
ANR	374089	Identifier	dim		373845	0					
ANR	374090	Argument	value		373845	2					
ANR	374091	Identifier	value		373845	0					
ANR	374092	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		373845	3					
ANR	374093	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		373845	0					
ANR	374094	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		373845	0					
ANR	374095	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		373845	0					
ANR	374096	Callee	UNEXPECTED		373845	0					
ANR	374097	Identifier	UNEXPECTED		373845	0					
ANR	374098	ArgumentList	RETURN_VALUE_USED ( opline )		373845	1					
ANR	374099	Argument	RETURN_VALUE_USED ( opline )		373845	0					
ANR	374100	CallExpression	RETURN_VALUE_USED ( opline )		373845	0					
ANR	374101	Callee	RETURN_VALUE_USED		373845	0					
ANR	374102	Identifier	RETURN_VALUE_USED		373845	0					
ANR	374103	ArgumentList	opline		373845	1					
ANR	374104	Argument	opline		373845	0					
ANR	374105	Identifier	opline		373845	0					
ANR	374106	CallExpression	EX_VAR ( opline -> result . var )		373845	1					
ANR	374107	Callee	EX_VAR		373845	0					
ANR	374108	Identifier	EX_VAR		373845	0					
ANR	374109	ArgumentList	opline -> result . var		373845	1					
ANR	374110	Argument	opline -> result . var		373845	0					
ANR	374111	MemberAccess	opline -> result . var		373845	0					
ANR	374112	PtrMemberAccess	opline -> result		373845	0					
ANR	374113	Identifier	opline		373845	0					
ANR	374114	Identifier	result		373845	1					
ANR	374115	Identifier	var		373845	1					
ANR	374116	Identifier	NULL		373845	2					
ANR	374117	Argument	binary_op		373845	4					
ANR	374118	Identifier	binary_op		373845	0					
ANR	374119	BreakStatement	break ;	18622:4:569102:569107	373845	2	True				
ANR	374120	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_UNUSED )"	18626:2:569121:569184	373845	1	True				
ANR	374121	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_UNUSED )"		373845	0					
ANR	374122	Callee	zend_fetch_dimension_address_RW		373845	0					
ANR	374123	Identifier	zend_fetch_dimension_address_RW		373845	0					
ANR	374124	ArgumentList	& rv		373845	1					
ANR	374125	Argument	& rv		373845	0					
ANR	374126	UnaryOperationExpression	& rv		373845	0					
ANR	374127	UnaryOperator	&		373845	0					
ANR	374128	Identifier	rv		373845	1					
ANR	374129	Argument	container		373845	1					
ANR	374130	Identifier	container		373845	0					
ANR	374131	Argument	dim		373845	2					
ANR	374132	Identifier	dim		373845	0					
ANR	374133	Argument	IS_UNUSED		373845	3					
ANR	374134	Identifier	IS_UNUSED		373845	0					
ANR	374135	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	18627:2:569188:569279	373845	2	True				
ANR	374136	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		373845	0		=			
ANR	374137	Identifier	value		373845	0					
ANR	374138	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		373845	1					
ANR	374139	Callee	get_zval_ptr_r		373845	0					
ANR	374140	Identifier	get_zval_ptr_r		373845	0					
ANR	374141	ArgumentList	( opline + 1 ) -> op1_type		373845	1					
ANR	374142	Argument	( opline + 1 ) -> op1_type		373845	0					
ANR	374143	PtrMemberAccess	( opline + 1 ) -> op1_type		373845	0					
ANR	374144	AdditiveExpression	opline + 1		373845	0		+			
ANR	374145	Identifier	opline		373845	0					
ANR	374146	PrimaryExpression	1		373845	1					
ANR	374147	Identifier	op1_type		373845	1					
ANR	374148	Argument	( opline + 1 ) -> op1		373845	1					
ANR	374149	PtrMemberAccess	( opline + 1 ) -> op1		373845	0					
ANR	374150	AdditiveExpression	opline + 1		373845	0		+			
ANR	374151	Identifier	opline		373845	0					
ANR	374152	PrimaryExpression	1		373845	1					
ANR	374153	Identifier	op1		373845	1					
ANR	374154	Argument	execute_data		373845	2					
ANR	374155	Identifier	execute_data		373845	0					
ANR	374156	Argument	& free_op_data1		373845	3					
ANR	374157	UnaryOperationExpression	& free_op_data1		373845	0					
ANR	374158	UnaryOperator	&		373845	0					
ANR	374159	Identifier	free_op_data1		373845	1					
ANR	374160	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	18628:2:569283:569321	373845	3	True				
ANR	374161	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		373845	0					
ANR	374162	Callee	ZEND_ASSERT		373845	0					
ANR	374163	Identifier	ZEND_ASSERT		373845	0					
ANR	374164	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		373845	1					
ANR	374165	Argument	Z_TYPE ( rv ) == IS_INDIRECT		373845	0					
ANR	374166	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		373845	0		==			
ANR	374167	CallExpression	Z_TYPE ( rv )		373845	0					
ANR	374168	Callee	Z_TYPE		373845	0					
ANR	374169	Identifier	Z_TYPE		373845	0					
ANR	374170	ArgumentList	rv		373845	1					
ANR	374171	Argument	rv		373845	0					
ANR	374172	Identifier	rv		373845	0					
ANR	374173	Identifier	IS_INDIRECT		373845	1					
ANR	374174	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	18629:2:569325:569349	373845	4	True				
ANR	374175	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		373845	0		=			
ANR	374176	Identifier	var_ptr		373845	0					
ANR	374177	CallExpression	Z_INDIRECT ( rv )		373845	1					
ANR	374178	Callee	Z_INDIRECT		373845	0					
ANR	374179	Identifier	Z_INDIRECT		373845	0					
ANR	374180	ArgumentList	rv		373845	1					
ANR	374181	Argument	rv		373845	0					
ANR	374182	Identifier	rv		373845	0					
ANR	374183	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		373845	5					
ANR	374184	Condition	UNEXPECTED ( var_ptr == NULL )	18631:6:569358:569384	373845	0	True				
ANR	374185	CallExpression	UNEXPECTED ( var_ptr == NULL )		373845	0					
ANR	374186	Callee	UNEXPECTED		373845	0					
ANR	374187	Identifier	UNEXPECTED		373845	0					
ANR	374188	ArgumentList	var_ptr == NULL		373845	1					
ANR	374189	Argument	var_ptr == NULL		373845	0					
ANR	374190	EqualityExpression	var_ptr == NULL		373845	0		==			
ANR	374191	Identifier	var_ptr		373845	0					
ANR	374192	Identifier	NULL		373845	1					
ANR	374193	CompoundStatement		41:35:1406:1406	373845	1					
ANR	374194	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	18632:3:569392:569491	373845	0	True				
ANR	374195	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		373845	0					
ANR	374196	Callee	zend_throw_error		373845	0					
ANR	374197	Identifier	zend_throw_error		373845	0					
ANR	374198	ArgumentList	NULL		373845	1					
ANR	374199	Argument	NULL		373845	0					
ANR	374200	Identifier	NULL		373845	0					
ANR	374201	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		373845	1					
ANR	374202	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		373845	0					
ANR	374203	ExpressionStatement	FREE_OP ( free_op_data1 )	18634:3:569497:569519	373845	1	True				
ANR	374204	CallExpression	FREE_OP ( free_op_data1 )		373845	0					
ANR	374205	Callee	FREE_OP		373845	0					
ANR	374206	Identifier	FREE_OP		373845	0					
ANR	374207	ArgumentList	free_op_data1		373845	1					
ANR	374208	Argument	free_op_data1		373845	0					
ANR	374209	Identifier	free_op_data1		373845	0					
ANR	374210	IfStatement	if ( UNEXPECTED ( free_op1 ) )		373845	2					
ANR	374211	Condition	UNEXPECTED ( free_op1 )	18635:7:569528:569547	373845	0	True				
ANR	374212	CallExpression	UNEXPECTED ( free_op1 )		373845	0					
ANR	374213	Callee	UNEXPECTED		373845	0					
ANR	374214	Identifier	UNEXPECTED		373845	0					
ANR	374215	ArgumentList	free_op1		373845	1					
ANR	374216	Argument	free_op1		373845	0					
ANR	374217	Identifier	free_op1		373845	0					
ANR	374218	CompoundStatement		45:29:1569:1569	373845	1					
ANR	374219	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	18635:30:569551:569579	373845	0	True				
ANR	374220	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		373845	0					
ANR	374221	Callee	zval_ptr_dtor_nogc		373845	0					
ANR	374222	Identifier	zval_ptr_dtor_nogc		373845	0					
ANR	374223	ArgumentList	free_op1		373845	1					
ANR	374224	Argument	free_op1		373845	0					
ANR	374225	Identifier	free_op1		373845	0					
ANR	374226	ExpressionStatement		18635:60:569581:569581	373845	3	True				
ANR	374227	ExpressionStatement	HANDLE_EXCEPTION ( )	18636:3:569586:569604	373845	4	True				
ANR	374228	CallExpression	HANDLE_EXCEPTION ( )		373845	0					
ANR	374229	Callee	HANDLE_EXCEPTION		373845	0					
ANR	374230	Identifier	HANDLE_EXCEPTION		373845	0					
ANR	374231	ArgumentList			373845	1					
ANR	374232	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		373845	6					
ANR	374233	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	18639:6:569617:569654	373845	0	True				
ANR	374234	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		373845	0					
ANR	374235	Callee	UNEXPECTED		373845	0					
ANR	374236	Identifier	UNEXPECTED		373845	0					
ANR	374237	ArgumentList	var_ptr == & EG ( error_zval )		373845	1					
ANR	374238	Argument	var_ptr == & EG ( error_zval )		373845	0					
ANR	374239	EqualityExpression	var_ptr == & EG ( error_zval )		373845	0		==			
ANR	374240	Identifier	var_ptr		373845	0					
ANR	374241	UnaryOperationExpression	& EG ( error_zval )		373845	1					
ANR	374242	UnaryOperator	&		373845	0					
ANR	374243	CallExpression	EG ( error_zval )		373845	1					
ANR	374244	Callee	EG		373845	0					
ANR	374245	Identifier	EG		373845	0					
ANR	374246	ArgumentList	error_zval		373845	1					
ANR	374247	Argument	error_zval		373845	0					
ANR	374248	Identifier	error_zval		373845	0					
ANR	374249	CompoundStatement		49:46:1676:1676	373845	1					
ANR	374250	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		373845	0					
ANR	374251	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	18640:7:569666:569702	373845	0	True				
ANR	374252	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		373845	0					
ANR	374253	Callee	UNEXPECTED		373845	0					
ANR	374254	Identifier	UNEXPECTED		373845	0					
ANR	374255	ArgumentList	RETURN_VALUE_USED ( opline )		373845	1					
ANR	374256	Argument	RETURN_VALUE_USED ( opline )		373845	0					
ANR	374257	CallExpression	RETURN_VALUE_USED ( opline )		373845	0					
ANR	374258	Callee	RETURN_VALUE_USED		373845	0					
ANR	374259	Identifier	RETURN_VALUE_USED		373845	0					
ANR	374260	ArgumentList	opline		373845	1					
ANR	374261	Argument	opline		373845	0					
ANR	374262	Identifier	opline		373845	0					
ANR	374263	CompoundStatement		50:46:1724:1724	373845	1					
ANR	374264	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	18641:4:569711:569748	373845	0	True				
ANR	374265	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		373845	0					
ANR	374266	Callee	ZVAL_NULL		373845	0					
ANR	374267	Identifier	ZVAL_NULL		373845	0					
ANR	374268	ArgumentList	EX_VAR ( opline -> result . var )		373845	1					
ANR	374269	Argument	EX_VAR ( opline -> result . var )		373845	0					
ANR	374270	CallExpression	EX_VAR ( opline -> result . var )		373845	0					
ANR	374271	Callee	EX_VAR		373845	0					
ANR	374272	Identifier	EX_VAR		373845	0					
ANR	374273	ArgumentList	opline -> result . var		373845	1					
ANR	374274	Argument	opline -> result . var		373845	0					
ANR	374275	MemberAccess	opline -> result . var		373845	0					
ANR	374276	PtrMemberAccess	opline -> result		373845	0					
ANR	374277	Identifier	opline		373845	0					
ANR	374278	Identifier	result		373845	1					
ANR	374279	Identifier	var		373845	1					
ANR	374280	ElseStatement	else		373845	0					
ANR	374281	CompoundStatement		53:9:1783:1783	373845	0					
ANR	374282	ExpressionStatement	ZVAL_DEREF ( var_ptr )	18644:3:569769:569788	373845	0	True				
ANR	374283	CallExpression	ZVAL_DEREF ( var_ptr )		373845	0					
ANR	374284	Callee	ZVAL_DEREF		373845	0					
ANR	374285	Identifier	ZVAL_DEREF		373845	0					
ANR	374286	ArgumentList	var_ptr		373845	1					
ANR	374287	Argument	var_ptr		373845	0					
ANR	374288	Identifier	var_ptr		373845	0					
ANR	374289	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	18645:3:569793:569821	373845	1	True				
ANR	374290	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		373845	0					
ANR	374291	Callee	SEPARATE_ZVAL_NOREF		373845	0					
ANR	374292	Identifier	SEPARATE_ZVAL_NOREF		373845	0					
ANR	374293	ArgumentList	var_ptr		373845	1					
ANR	374294	Argument	var_ptr		373845	0					
ANR	374295	Identifier	var_ptr		373845	0					
ANR	374296	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	18647:3:569827:569861	373845	2	True				
ANR	374297	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		373845	0					
ANR	374298	Callee	binary_op		373845	0					
ANR	374299	Identifier	binary_op		373845	0					
ANR	374300	ArgumentList	var_ptr		373845	1					
ANR	374301	Argument	var_ptr		373845	0					
ANR	374302	Identifier	var_ptr		373845	0					
ANR	374303	Argument	var_ptr		373845	1					
ANR	374304	Identifier	var_ptr		373845	0					
ANR	374305	Argument	value		373845	2					
ANR	374306	Identifier	value		373845	0					
ANR	374307	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		373845	3					
ANR	374308	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	18649:7:569871:569907	373845	0	True				
ANR	374309	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		373845	0					
ANR	374310	Callee	UNEXPECTED		373845	0					
ANR	374311	Identifier	UNEXPECTED		373845	0					
ANR	374312	ArgumentList	RETURN_VALUE_USED ( opline )		373845	1					
ANR	374313	Argument	RETURN_VALUE_USED ( opline )		373845	0					
ANR	374314	CallExpression	RETURN_VALUE_USED ( opline )		373845	0					
ANR	374315	Callee	RETURN_VALUE_USED		373845	0					
ANR	374316	Identifier	RETURN_VALUE_USED		373845	0					
ANR	374317	ArgumentList	opline		373845	1					
ANR	374318	Argument	opline		373845	0					
ANR	374319	Identifier	opline		373845	0					
ANR	374320	CompoundStatement		59:46:1929:1929	373845	1					
ANR	374321	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	18650:4:569916:569962	373845	0	True				
ANR	374322	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		373845	0					
ANR	374323	Callee	ZVAL_COPY		373845	0					
ANR	374324	Identifier	ZVAL_COPY		373845	0					
ANR	374325	ArgumentList	EX_VAR ( opline -> result . var )		373845	1					
ANR	374326	Argument	EX_VAR ( opline -> result . var )		373845	0					
ANR	374327	CallExpression	EX_VAR ( opline -> result . var )		373845	0					
ANR	374328	Callee	EX_VAR		373845	0					
ANR	374329	Identifier	EX_VAR		373845	0					
ANR	374330	ArgumentList	opline -> result . var		373845	1					
ANR	374331	Argument	opline -> result . var		373845	0					
ANR	374332	MemberAccess	opline -> result . var		373845	0					
ANR	374333	PtrMemberAccess	opline -> result		373845	0					
ANR	374334	Identifier	opline		373845	0					
ANR	374335	Identifier	result		373845	1					
ANR	374336	Identifier	var		373845	1					
ANR	374337	Argument	var_ptr		373845	1					
ANR	374338	Identifier	var_ptr		373845	0					
ANR	374339	Condition	0	18653:10:569983:569983	373845	1	True				
ANR	374340	PrimaryExpression	0		373845	0					
ANR	374341	ExpressionStatement	FREE_OP ( free_op_data1 )	18655:1:569989:570011	373845	9	True				
ANR	374342	CallExpression	FREE_OP ( free_op_data1 )		373845	0					
ANR	374343	Callee	FREE_OP		373845	0					
ANR	374344	Identifier	FREE_OP		373845	0					
ANR	374345	ArgumentList	free_op_data1		373845	1					
ANR	374346	Argument	free_op_data1		373845	0					
ANR	374347	Identifier	free_op_data1		373845	0					
ANR	374348	IfStatement	if ( UNEXPECTED ( free_op1 ) )		373845	10					
ANR	374349	Condition	UNEXPECTED ( free_op1 )	18656:5:570018:570037	373845	0	True				
ANR	374350	CallExpression	UNEXPECTED ( free_op1 )		373845	0					
ANR	374351	Callee	UNEXPECTED		373845	0					
ANR	374352	Identifier	UNEXPECTED		373845	0					
ANR	374353	ArgumentList	free_op1		373845	1					
ANR	374354	Argument	free_op1		373845	0					
ANR	374355	Identifier	free_op1		373845	0					
ANR	374356	CompoundStatement		66:27:2059:2059	373845	1					
ANR	374357	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	18656:28:570041:570069	373845	0	True				
ANR	374358	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		373845	0					
ANR	374359	Callee	zval_ptr_dtor_nogc		373845	0					
ANR	374360	Identifier	zval_ptr_dtor_nogc		373845	0					
ANR	374361	ArgumentList	free_op1		373845	1					
ANR	374362	Argument	free_op1		373845	0					
ANR	374363	Identifier	free_op1		373845	0					
ANR	374364	ExpressionStatement		18656:58:570071:570071	373845	11	True				
ANR	374365	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	18657:1:570074:570102	373845	12	True				
ANR	374366	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		373845	0					
ANR	374367	Callee	ZEND_VM_NEXT_OPCODE_EX		373845	0					
ANR	374368	Identifier	ZEND_VM_NEXT_OPCODE_EX		373845	0					
ANR	374369	ArgumentList	1		373845	1					
ANR	374370	Argument	1		373845	0					
ANR	374371	PrimaryExpression	1		373845	0					
ANR	374372	Argument	2		373845	1					
ANR	374373	PrimaryExpression	2		373845	0					
ANR	374374	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		373845	1					
ANR	374375	Identifier	zend_binary_assign_op_dim_helper_SPEC_VAR_UNUSED		373845	2					
ANR	374376	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		373845	3					
ANR	374377	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	18590:94:567926:567977	373845	0	True				
ANR	374378	ParameterType	binary_op_type binary_op		373845	0					
ANR	374379	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		373845	1					
ANR	374380	CFGEntryNode	ENTRY		373845		True				
ANR	374381	CFGExitNode	EXIT		373845		True				
ANR	374382	Symbol	container		373845						
ANR	374383	Symbol	opline -> op1		373845						
ANR	374384	Symbol	rv		373845						
ANR	374385	Symbol	Z_OBJ_P		373845						
ANR	374386	Symbol	dim		373845						
ANR	374387	Symbol	Z_TYPE		373845						
ANR	374388	Symbol	_get_zval_ptr_ptr_var		373845						
ANR	374389	Symbol	free_op_data1		373845						
ANR	374390	Symbol	& EG		373845						
ANR	374391	Symbol	free_op1		373845						
ANR	374392	Symbol	var_ptr		373845						
ANR	374393	Symbol	execute_data		373845						
ANR	374394	Symbol	opline -> result		373845						
ANR	374395	Symbol	( opline + 1 ) -> op1		373845						
ANR	374396	Symbol	UNEXPECTED		373845						
ANR	374397	Symbol	RETURN_VALUE_USED		373845						
ANR	374398	Symbol	( opline + 1 ) -> op1 . var		373845						
ANR	374399	Symbol	opline		373845						
ANR	374400	Symbol	get_zval_ptr_r		373845						
ANR	374401	Symbol	Z_INDIRECT		373845						
ANR	374402	Symbol	IS_ARRAY		373845						
ANR	374403	Symbol	opline -> op1 . var		373845						
ANR	374404	Symbol	value		373845						
ANR	374405	Symbol	& free_op1		373845						
ANR	374406	Symbol	binary_op		373845						
ANR	374407	Symbol	( opline + 1 ) -> op1_type		373845						
ANR	374408	Symbol	NULL		373845						
ANR	374409	Symbol	Z_TYPE_P		373845						
ANR	374410	Symbol	& rv		373845						
ANR	374411	Symbol	* opline		373845						
ANR	374412	Symbol	error_zval		373845						
ANR	374413	Symbol	EX_VAR		373845						
ANR	374414	Symbol	IS_OBJECT		373845						
ANR	374415	Symbol	IS_VAR		373845						
ANR	374416	Symbol	EXPECTED		373845						
ANR	374417	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		373845						
ANR	374418	Symbol	& free_op_data1		373845						
ANR	374419	Symbol	opline -> result . var		373845						
ANR	374420	Symbol	IS_UNUSED		373845						
ANR	374421	Symbol	IS_INDIRECT		373845						
ANR	374422	DeclStmt									
ANR	374423	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	374424	DeclStmt									
ANR	374425	Decl							zval	zval *	container
ANR	374426	DeclStmt									
ANR	374427	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	374428	DeclStmt									
ANR	374429	Decl							zval	zval *	container
ANR	374430	DeclStmt									
ANR	374431	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	374432	DeclStmt									
ANR	374433	Decl							zend_free_op	zend_free_op	free_op1
ANR	374434	DeclStmt									
ANR	374435	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	374436	DeclStmt									
ANR	374437	Decl							zval	zval *	object_ptr
ANR	374438	DeclStmt									
ANR	374439	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	374440	DeclStmt									
ANR	374441	Decl							zval	zval *	value
ANR	374442	DeclStmt									
ANR	374443	Decl							zval	zval *	variable_ptr
ANR	374444	DeclStmt									
ANR	374445	Decl							zval	zval *	dim
ANR	374446	DeclStmt									
ANR	374447	Decl							zval	zval *	property_name
ANR	374448	DeclStmt									
ANR	374449	Decl							zend_long	zend_long	offset
ANR	374450	DeclStmt									
ANR	374451	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	374452	DeclStmt									
ANR	374453	Decl							zend_class_entry	zend_class_entry *	ce
ANR	374454	DeclStmt									
ANR	374455	Decl							zend_object	zend_object *	object
ANR	374456	DeclStmt									
ANR	374457	Decl							zend_function	zend_function *	fbc
ANR	374458	DeclStmt									
ANR	374459	Decl							zend_execute_data	zend_execute_data *	call
ANR	374460	DeclStmt									
ANR	374461	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	374462	DeclStmt									
ANR	374463	Decl							zval	zval *	retval_ref
ANR	374464	Decl							zval	zval *	retval_ptr
ANR	374465	DeclStmt									
ANR	374466	Decl							zend_free_op	zend_free_op	free_op1
ANR	374467	DeclStmt									
ANR	374468	Decl							zend_arg_info	zend_arg_info *	ret_info
ANR	374469	DeclStmt									
ANR	374470	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	374471	DeclStmt									
ANR	374472	Decl							zval	zval *	expr_ptr
ANR	374473	Decl							zval	zval	new_expr
ANR	374474	DeclStmt									
ANR	374475	Decl							zend_refcounted	zend_refcounted *	ref
ANR	374476	DeclStmt									
ANR	374477	Decl							zval	zval *	offset
ANR	374478	DeclStmt									
ANR	374479	Decl							zend_string	zend_string *	str
ANR	374480	DeclStmt									
ANR	374481	Decl							zend_ulong	zend_ulong	hval
ANR	374482	DeclStmt									
ANR	374483	Decl							zval	zval *	array
ANR	374484	DeclStmt									
ANR	374485	Decl							uint32_t	uint32_t	size
ANR	374486	DeclStmt									
ANR	374487	Decl							USE_OPLINE	USE_OPLINE	array
ANR	374488	DeclStmt									
ANR	374489	Decl							USE_OPLINE zval	USE_OPLINE zval *	var_ptr
ANR	374490	DeclStmt									
ANR	374491	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	374492	DeclStmt									
ANR	374493	Decl							zend_free_op	zend_free_op	free_op1
ANR	374494	DeclStmt									
ANR	374495	Decl							zval	zval *	value
ANR	374496	DeclStmt									
ANR	374497	Decl							zval	zval *	value_ptr
ANR	374498	DeclStmt									
ANR	374499	Decl							zval	zval *	value
ANR	374500	DeclStmt									
ANR	374501	Decl							zval	zval *	key
ANR	374502	DeclStmt									
ANR	374503	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	374504	DeclStmt									
ANR	374505	Decl							zval	zval *	op1
ANR	374506	Decl							zval	zval *	op2
ANR	374507	DeclStmt									
ANR	374508	Decl							int	int	result
ANR	374509	DeclStmt									
ANR	374510	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	374511	DeclStmt									
ANR	374512	Decl							zval	zval *	op1
ANR	374513	Decl							zval	zval *	op2
ANR	374514	DeclStmt									
ANR	374515	Decl							int	int	result
ANR	374516	Function	zend_binary_assign_op_obj_helper_SPEC_VAR_CV	19608:0:603528:605703							
ANR	374517	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_VAR_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		374516	0					
ANR	374518	CompoundStatement		19609:0:603672:605703	374516	0					
ANR	374519	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op_data1 ;"	19610:1:603675:603723	374516	0	True				
ANR	374520	IdentifierDecl	free_op1		374516	0					
ANR	374521	IdentifierDeclType	USE_OPLINE zend_free_op		374516	0					
ANR	374522	Identifier	free_op1		374516	1					
ANR	374523	IdentifierDecl	free_op_data1		374516	1					
ANR	374524	IdentifierDeclType	USE_OPLINE zend_free_op		374516	0					
ANR	374525	Identifier	free_op_data1		374516	1					
ANR	374526	IdentifierDeclStatement	zval * object ;	19612:1:603726:603738	374516	1	True				
ANR	374527	IdentifierDecl	* object		374516	0					
ANR	374528	IdentifierDeclType	zval *		374516	0					
ANR	374529	Identifier	object		374516	1					
ANR	374530	IdentifierDeclStatement	zval * property ;	19613:1:603741:603755	374516	2	True				
ANR	374531	IdentifierDecl	* property		374516	0					
ANR	374532	IdentifierDeclType	zval *		374516	0					
ANR	374533	Identifier	property		374516	1					
ANR	374534	IdentifierDeclStatement	zval * value ;	19614:1:603758:603769	374516	3	True				
ANR	374535	IdentifierDecl	* value		374516	0					
ANR	374536	IdentifierDeclType	zval *		374516	0					
ANR	374537	Identifier	value		374516	1					
ANR	374538	IdentifierDeclStatement	zval * zptr ;	19615:1:603772:603782	374516	4	True				
ANR	374539	IdentifierDecl	* zptr		374516	0					
ANR	374540	IdentifierDeclType	zval *		374516	0					
ANR	374541	Identifier	zptr		374516	1					
ANR	374542	ExpressionStatement	SAVE_OPLINE ( )	19617:1:603786:603799	374516	5	True				
ANR	374543	CallExpression	SAVE_OPLINE ( )		374516	0					
ANR	374544	Callee	SAVE_OPLINE		374516	0					
ANR	374545	Identifier	SAVE_OPLINE		374516	0					
ANR	374546	ArgumentList			374516	1					
ANR	374547	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	19618:1:603802:603874	374516	6	True				
ANR	374548	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		374516	0		=			
ANR	374549	Identifier	object		374516	0					
ANR	374550	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		374516	1					
ANR	374551	Callee	_get_zval_ptr_ptr_var		374516	0					
ANR	374552	Identifier	_get_zval_ptr_ptr_var		374516	0					
ANR	374553	ArgumentList	opline -> op1 . var		374516	1					
ANR	374554	Argument	opline -> op1 . var		374516	0					
ANR	374555	MemberAccess	opline -> op1 . var		374516	0					
ANR	374556	PtrMemberAccess	opline -> op1		374516	0					
ANR	374557	Identifier	opline		374516	0					
ANR	374558	Identifier	op1		374516	1					
ANR	374559	Identifier	var		374516	1					
ANR	374560	Argument	execute_data		374516	1					
ANR	374561	Identifier	execute_data		374516	0					
ANR	374562	Argument	& free_op1		374516	2					
ANR	374563	UnaryOperationExpression	& free_op1		374516	0					
ANR	374564	UnaryOperator	&		374516	0					
ANR	374565	Identifier	free_op1		374516	1					
ANR	374566	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		374516	7					
ANR	374567	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	19620:5:603882:603939	374516	0	True				
ANR	374568	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		374516	0		&&			
ANR	374569	EqualityExpression	IS_VAR == IS_UNUSED		374516	0		==			
ANR	374570	Identifier	IS_VAR		374516	0					
ANR	374571	Identifier	IS_UNUSED		374516	1					
ANR	374572	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		374516	1					
ANR	374573	Callee	UNEXPECTED		374516	0					
ANR	374574	Identifier	UNEXPECTED		374516	0					
ANR	374575	ArgumentList	Z_OBJ_P ( object ) == NULL		374516	1					
ANR	374576	Argument	Z_OBJ_P ( object ) == NULL		374516	0					
ANR	374577	EqualityExpression	Z_OBJ_P ( object ) == NULL		374516	0		==			
ANR	374578	CallExpression	Z_OBJ_P ( object )		374516	0					
ANR	374579	Callee	Z_OBJ_P		374516	0					
ANR	374580	Identifier	Z_OBJ_P		374516	0					
ANR	374581	ArgumentList	object		374516	1					
ANR	374582	Argument	object		374516	0					
ANR	374583	Identifier	object		374516	0					
ANR	374584	Identifier	NULL		374516	1					
ANR	374585	CompoundStatement		12:65:269:269	374516	1					
ANR	374586	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	19621:2:603946:604010	374516	0	True				
ANR	374587	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		374516	0					
ANR	374588	Callee	zend_throw_error		374516	0					
ANR	374589	Identifier	zend_throw_error		374516	0					
ANR	374590	ArgumentList	NULL		374516	1					
ANR	374591	Argument	NULL		374516	0					
ANR	374592	Identifier	NULL		374516	0					
ANR	374593	Argument	"""Using $this when not in object context"""		374516	1					
ANR	374594	PrimaryExpression	"""Using $this when not in object context"""		374516	0					
ANR	374595	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	19622:2:604014:604074	374516	1	True				
ANR	374596	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		374516	0					
ANR	374597	Callee	FREE_UNFETCHED_OP		374516	0					
ANR	374598	Identifier	FREE_UNFETCHED_OP		374516	0					
ANR	374599	ArgumentList	( opline + 1 ) -> op1_type		374516	1					
ANR	374600	Argument	( opline + 1 ) -> op1_type		374516	0					
ANR	374601	PtrMemberAccess	( opline + 1 ) -> op1_type		374516	0					
ANR	374602	AdditiveExpression	opline + 1		374516	0		+			
ANR	374603	Identifier	opline		374516	0					
ANR	374604	PrimaryExpression	1		374516	1					
ANR	374605	Identifier	op1_type		374516	1					
ANR	374606	Argument	( opline + 1 ) -> op1 . var		374516	1					
ANR	374607	MemberAccess	( opline + 1 ) -> op1 . var		374516	0					
ANR	374608	PtrMemberAccess	( opline + 1 ) -> op1		374516	0					
ANR	374609	AdditiveExpression	opline + 1		374516	0		+			
ANR	374610	Identifier	opline		374516	0					
ANR	374611	PrimaryExpression	1		374516	1					
ANR	374612	Identifier	op1		374516	1					
ANR	374613	Identifier	var		374516	1					
ANR	374614	ExpressionStatement	HANDLE_EXCEPTION ( )	19624:2:604079:604097	374516	2	True				
ANR	374615	CallExpression	HANDLE_EXCEPTION ( )		374516	0					
ANR	374616	Callee	HANDLE_EXCEPTION		374516	0					
ANR	374617	Identifier	HANDLE_EXCEPTION		374516	0					
ANR	374618	ArgumentList			374516	1					
ANR	374619	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	19627:1:604104:604171	374516	8	True				
ANR	374620	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		374516	0		=			
ANR	374621	Identifier	property		374516	0					
ANR	374622	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		374516	1					
ANR	374623	Callee	_get_zval_ptr_cv_BP_VAR_R		374516	0					
ANR	374624	Identifier	_get_zval_ptr_cv_BP_VAR_R		374516	0					
ANR	374625	ArgumentList	execute_data		374516	1					
ANR	374626	Argument	execute_data		374516	0					
ANR	374627	Identifier	execute_data		374516	0					
ANR	374628	Argument	opline -> op2 . var		374516	1					
ANR	374629	MemberAccess	opline -> op2 . var		374516	0					
ANR	374630	PtrMemberAccess	opline -> op2		374516	0					
ANR	374631	Identifier	opline		374516	0					
ANR	374632	Identifier	op2		374516	1					
ANR	374633	Identifier	var		374516	1					
ANR	374634	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		374516	9					
ANR	374635	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	19629:5:604179:604224	374516	0	True				
ANR	374636	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		374516	0		&&			
ANR	374637	EqualityExpression	IS_VAR == IS_VAR		374516	0		==			
ANR	374638	Identifier	IS_VAR		374516	0					
ANR	374639	Identifier	IS_VAR		374516	1					
ANR	374640	CallExpression	UNEXPECTED ( object == NULL )		374516	1					
ANR	374641	Callee	UNEXPECTED		374516	0					
ANR	374642	Identifier	UNEXPECTED		374516	0					
ANR	374643	ArgumentList	object == NULL		374516	1					
ANR	374644	Argument	object == NULL		374516	0					
ANR	374645	EqualityExpression	object == NULL		374516	0		==			
ANR	374646	Identifier	object		374516	0					
ANR	374647	Identifier	NULL		374516	1					
ANR	374648	CompoundStatement		21:53:554:554	374516	1					
ANR	374649	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	19630:2:604231:604294	374516	0	True				
ANR	374650	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		374516	0					
ANR	374651	Callee	zend_throw_error		374516	0					
ANR	374652	Identifier	zend_throw_error		374516	0					
ANR	374653	ArgumentList	NULL		374516	1					
ANR	374654	Argument	NULL		374516	0					
ANR	374655	Identifier	NULL		374516	0					
ANR	374656	Argument	"""Cannot use string offset as an object"""		374516	1					
ANR	374657	PrimaryExpression	"""Cannot use string offset as an object"""		374516	0					
ANR	374658	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	19631:2:604298:604358	374516	1	True				
ANR	374659	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		374516	0					
ANR	374660	Callee	FREE_UNFETCHED_OP		374516	0					
ANR	374661	Identifier	FREE_UNFETCHED_OP		374516	0					
ANR	374662	ArgumentList	( opline + 1 ) -> op1_type		374516	1					
ANR	374663	Argument	( opline + 1 ) -> op1_type		374516	0					
ANR	374664	PtrMemberAccess	( opline + 1 ) -> op1_type		374516	0					
ANR	374665	AdditiveExpression	opline + 1		374516	0		+			
ANR	374666	Identifier	opline		374516	0					
ANR	374667	PrimaryExpression	1		374516	1					
ANR	374668	Identifier	op1_type		374516	1					
ANR	374669	Argument	( opline + 1 ) -> op1 . var		374516	1					
ANR	374670	MemberAccess	( opline + 1 ) -> op1 . var		374516	0					
ANR	374671	PtrMemberAccess	( opline + 1 ) -> op1		374516	0					
ANR	374672	AdditiveExpression	opline + 1		374516	0		+			
ANR	374673	Identifier	opline		374516	0					
ANR	374674	PrimaryExpression	1		374516	1					
ANR	374675	Identifier	op1		374516	1					
ANR	374676	Identifier	var		374516	1					
ANR	374677	ExpressionStatement	HANDLE_EXCEPTION ( )	19633:2:604363:604381	374516	2	True				
ANR	374678	CallExpression	HANDLE_EXCEPTION ( )		374516	0					
ANR	374679	Callee	HANDLE_EXCEPTION		374516	0					
ANR	374680	Identifier	HANDLE_EXCEPTION		374516	0					
ANR	374681	ArgumentList			374516	1					
ANR	374682	DoStatement	do		374516	10					
ANR	374683	CompoundStatement		28:4:718:718	374516	0					
ANR	374684	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	19637:2:604395:604486	374516	0	True				
ANR	374685	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		374516	0		=			
ANR	374686	Identifier	value		374516	0					
ANR	374687	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		374516	1					
ANR	374688	Callee	get_zval_ptr_r		374516	0					
ANR	374689	Identifier	get_zval_ptr_r		374516	0					
ANR	374690	ArgumentList	( opline + 1 ) -> op1_type		374516	1					
ANR	374691	Argument	( opline + 1 ) -> op1_type		374516	0					
ANR	374692	PtrMemberAccess	( opline + 1 ) -> op1_type		374516	0					
ANR	374693	AdditiveExpression	opline + 1		374516	0		+			
ANR	374694	Identifier	opline		374516	0					
ANR	374695	PrimaryExpression	1		374516	1					
ANR	374696	Identifier	op1_type		374516	1					
ANR	374697	Argument	( opline + 1 ) -> op1		374516	1					
ANR	374698	PtrMemberAccess	( opline + 1 ) -> op1		374516	0					
ANR	374699	AdditiveExpression	opline + 1		374516	0		+			
ANR	374700	Identifier	opline		374516	0					
ANR	374701	PrimaryExpression	1		374516	1					
ANR	374702	Identifier	op1		374516	1					
ANR	374703	Argument	execute_data		374516	2					
ANR	374704	Identifier	execute_data		374516	0					
ANR	374705	Argument	& free_op_data1		374516	3					
ANR	374706	UnaryOperationExpression	& free_op_data1		374516	0					
ANR	374707	UnaryOperator	&		374516	0					
ANR	374708	Identifier	free_op_data1		374516	1					
ANR	374709	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		374516	1					
ANR	374710	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	19639:6:604495:604558	374516	0	True				
ANR	374711	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		374516	0		&&			
ANR	374712	EqualityExpression	IS_VAR != IS_UNUSED		374516	0		!=			
ANR	374713	Identifier	IS_VAR		374516	0					
ANR	374714	Identifier	IS_UNUSED		374516	1					
ANR	374715	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		374516	1					
ANR	374716	Callee	UNEXPECTED		374516	0					
ANR	374717	Identifier	UNEXPECTED		374516	0					
ANR	374718	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		374516	1					
ANR	374719	Argument	Z_TYPE_P ( object ) != IS_OBJECT		374516	0					
ANR	374720	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		374516	0		!=			
ANR	374721	CallExpression	Z_TYPE_P ( object )		374516	0					
ANR	374722	Callee	Z_TYPE_P		374516	0					
ANR	374723	Identifier	Z_TYPE_P		374516	0					
ANR	374724	ArgumentList	object		374516	1					
ANR	374725	Argument	object		374516	0					
ANR	374726	Identifier	object		374516	0					
ANR	374727	Identifier	IS_OBJECT		374516	1					
ANR	374728	CompoundStatement		31:72:888:888	374516	1					
ANR	374729	ExpressionStatement	ZVAL_DEREF ( object )	19640:3:604566:604584	374516	0	True				
ANR	374730	CallExpression	ZVAL_DEREF ( object )		374516	0					
ANR	374731	Callee	ZVAL_DEREF		374516	0					
ANR	374732	Identifier	ZVAL_DEREF		374516	0					
ANR	374733	ArgumentList	object		374516	1					
ANR	374734	Argument	object		374516	0					
ANR	374735	Identifier	object		374516	0					
ANR	374736	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		374516	1					
ANR	374737	Condition	UNEXPECTED ( ! make_real_object ( object ) )	19641:7:604593:604629	374516	0	True				
ANR	374738	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		374516	0					
ANR	374739	Callee	UNEXPECTED		374516	0					
ANR	374740	Identifier	UNEXPECTED		374516	0					
ANR	374741	ArgumentList	! make_real_object ( object )		374516	1					
ANR	374742	Argument	! make_real_object ( object )		374516	0					
ANR	374743	UnaryOperationExpression	! make_real_object ( object )		374516	0					
ANR	374744	UnaryOperator	!		374516	0					
ANR	374745	CallExpression	make_real_object ( object )		374516	1					
ANR	374746	Callee	make_real_object		374516	0					
ANR	374747	Identifier	make_real_object		374516	0					
ANR	374748	ArgumentList	object		374516	1					
ANR	374749	Argument	object		374516	0					
ANR	374750	Identifier	object		374516	0					
ANR	374751	CompoundStatement		33:46:959:959	374516	1					
ANR	374752	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	19642:4:604638:604703	374516	0	True				
ANR	374753	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		374516	0					
ANR	374754	Callee	zend_error		374516	0					
ANR	374755	Identifier	zend_error		374516	0					
ANR	374756	ArgumentList	E_WARNING		374516	1					
ANR	374757	Argument	E_WARNING		374516	0					
ANR	374758	Identifier	E_WARNING		374516	0					
ANR	374759	Argument	"""Attempt to assign property of non-object"""		374516	1					
ANR	374760	PrimaryExpression	"""Attempt to assign property of non-object"""		374516	0					
ANR	374761	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		374516	1					
ANR	374762	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	19643:8:604713:604749	374516	0	True				
ANR	374763	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		374516	0					
ANR	374764	Callee	UNEXPECTED		374516	0					
ANR	374765	Identifier	UNEXPECTED		374516	0					
ANR	374766	ArgumentList	RETURN_VALUE_USED ( opline )		374516	1					
ANR	374767	Argument	RETURN_VALUE_USED ( opline )		374516	0					
ANR	374768	CallExpression	RETURN_VALUE_USED ( opline )		374516	0					
ANR	374769	Callee	RETURN_VALUE_USED		374516	0					
ANR	374770	Identifier	RETURN_VALUE_USED		374516	0					
ANR	374771	ArgumentList	opline		374516	1					
ANR	374772	Argument	opline		374516	0					
ANR	374773	Identifier	opline		374516	0					
ANR	374774	CompoundStatement		35:47:1079:1079	374516	1					
ANR	374775	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	19644:5:604759:604796	374516	0	True				
ANR	374776	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		374516	0					
ANR	374777	Callee	ZVAL_NULL		374516	0					
ANR	374778	Identifier	ZVAL_NULL		374516	0					
ANR	374779	ArgumentList	EX_VAR ( opline -> result . var )		374516	1					
ANR	374780	Argument	EX_VAR ( opline -> result . var )		374516	0					
ANR	374781	CallExpression	EX_VAR ( opline -> result . var )		374516	0					
ANR	374782	Callee	EX_VAR		374516	0					
ANR	374783	Identifier	EX_VAR		374516	0					
ANR	374784	ArgumentList	opline -> result . var		374516	1					
ANR	374785	Argument	opline -> result . var		374516	0					
ANR	374786	MemberAccess	opline -> result . var		374516	0					
ANR	374787	PtrMemberAccess	opline -> result		374516	0					
ANR	374788	Identifier	opline		374516	0					
ANR	374789	Identifier	result		374516	1					
ANR	374790	Identifier	var		374516	1					
ANR	374791	BreakStatement	break ;	19646:4:604808:604813	374516	2	True				
ANR	374792	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		374516	2					
ANR	374793	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	19651:6:604886:605107	374516	0	True				
ANR	374794	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		374516	0		&&			
ANR	374795	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		374516	0					
ANR	374796	Callee	EXPECTED		374516	0					
ANR	374797	Identifier	EXPECTED		374516	0					
ANR	374798	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		374516	1					
ANR	374799	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		374516	0					
ANR	374800	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		374516	0					
ANR	374801	CallExpression	Z_OBJ_HT_P ( object )		374516	0					
ANR	374802	Callee	Z_OBJ_HT_P		374516	0					
ANR	374803	Identifier	Z_OBJ_HT_P		374516	0					
ANR	374804	ArgumentList	object		374516	1					
ANR	374805	Argument	object		374516	0					
ANR	374806	Identifier	object		374516	0					
ANR	374807	Identifier	get_property_ptr_ptr		374516	1					
ANR	374808	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		374516	1					
ANR	374809	Callee	EXPECTED		374516	0					
ANR	374810	Identifier	EXPECTED		374516	0					
ANR	374811	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		374516	1					
ANR	374812	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		374516	0					
ANR	374813	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		374516	0		!=			
ANR	374814	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		374516	0		=			
ANR	374815	Identifier	zptr		374516	0					
ANR	374816	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		374516	1					
ANR	374817	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		374516	0					
ANR	374818	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		374516	0					
ANR	374819	CallExpression	Z_OBJ_HT_P ( object )		374516	0					
ANR	374820	Callee	Z_OBJ_HT_P		374516	0					
ANR	374821	Identifier	Z_OBJ_HT_P		374516	0					
ANR	374822	ArgumentList	object		374516	1					
ANR	374823	Argument	object		374516	0					
ANR	374824	Identifier	object		374516	0					
ANR	374825	Identifier	get_property_ptr_ptr		374516	1					
ANR	374826	ArgumentList	object		374516	1					
ANR	374827	Argument	object		374516	0					
ANR	374828	Identifier	object		374516	0					
ANR	374829	Argument	property		374516	1					
ANR	374830	Identifier	property		374516	0					
ANR	374831	Argument	BP_VAR_RW		374516	2					
ANR	374832	Identifier	BP_VAR_RW		374516	0					
ANR	374833	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		374516	3					
ANR	374834	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		374516	0					
ANR	374835	Condition	IS_CV == IS_CONST		374516	0					
ANR	374836	EqualityExpression	IS_CV == IS_CONST		374516	0		==			
ANR	374837	Identifier	IS_CV		374516	0					
ANR	374838	Identifier	IS_CONST		374516	1					
ANR	374839	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		374516	1					
ANR	374840	Callee	CACHE_ADDR		374516	0					
ANR	374841	Identifier	CACHE_ADDR		374516	0					
ANR	374842	ArgumentList	Z_CACHE_SLOT_P ( property )		374516	1					
ANR	374843	Argument	Z_CACHE_SLOT_P ( property )		374516	0					
ANR	374844	CallExpression	Z_CACHE_SLOT_P ( property )		374516	0					
ANR	374845	Callee	Z_CACHE_SLOT_P		374516	0					
ANR	374846	Identifier	Z_CACHE_SLOT_P		374516	0					
ANR	374847	ArgumentList	property		374516	1					
ANR	374848	Argument	property		374516	0					
ANR	374849	Identifier	property		374516	0					
ANR	374850	Identifier	NULL		374516	2					
ANR	374851	Identifier	NULL		374516	1					
ANR	374852	CompoundStatement		44:173:1437:1437	374516	1					
ANR	374853	ExpressionStatement	ZVAL_DEREF ( zptr )	19654:3:605116:605132	374516	0	True				
ANR	374854	CallExpression	ZVAL_DEREF ( zptr )		374516	0					
ANR	374855	Callee	ZVAL_DEREF		374516	0					
ANR	374856	Identifier	ZVAL_DEREF		374516	0					
ANR	374857	ArgumentList	zptr		374516	1					
ANR	374858	Argument	zptr		374516	0					
ANR	374859	Identifier	zptr		374516	0					
ANR	374860	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	19655:3:605137:605162	374516	1	True				
ANR	374861	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		374516	0					
ANR	374862	Callee	SEPARATE_ZVAL_NOREF		374516	0					
ANR	374863	Identifier	SEPARATE_ZVAL_NOREF		374516	0					
ANR	374864	ArgumentList	zptr		374516	1					
ANR	374865	Argument	zptr		374516	0					
ANR	374866	Identifier	zptr		374516	0					
ANR	374867	ExpressionStatement	"binary_op ( zptr , zptr , value )"	19657:3:605168:605196	374516	2	True				
ANR	374868	CallExpression	"binary_op ( zptr , zptr , value )"		374516	0					
ANR	374869	Callee	binary_op		374516	0					
ANR	374870	Identifier	binary_op		374516	0					
ANR	374871	ArgumentList	zptr		374516	1					
ANR	374872	Argument	zptr		374516	0					
ANR	374873	Identifier	zptr		374516	0					
ANR	374874	Argument	zptr		374516	1					
ANR	374875	Identifier	zptr		374516	0					
ANR	374876	Argument	value		374516	2					
ANR	374877	Identifier	value		374516	0					
ANR	374878	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		374516	3					
ANR	374879	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	19658:7:605205:605241	374516	0	True				
ANR	374880	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		374516	0					
ANR	374881	Callee	UNEXPECTED		374516	0					
ANR	374882	Identifier	UNEXPECTED		374516	0					
ANR	374883	ArgumentList	RETURN_VALUE_USED ( opline )		374516	1					
ANR	374884	Argument	RETURN_VALUE_USED ( opline )		374516	0					
ANR	374885	CallExpression	RETURN_VALUE_USED ( opline )		374516	0					
ANR	374886	Callee	RETURN_VALUE_USED		374516	0					
ANR	374887	Identifier	RETURN_VALUE_USED		374516	0					
ANR	374888	ArgumentList	opline		374516	1					
ANR	374889	Argument	opline		374516	0					
ANR	374890	Identifier	opline		374516	0					
ANR	374891	CompoundStatement		50:46:1571:1571	374516	1					
ANR	374892	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	19659:4:605250:605293	374516	0	True				
ANR	374893	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		374516	0					
ANR	374894	Callee	ZVAL_COPY		374516	0					
ANR	374895	Identifier	ZVAL_COPY		374516	0					
ANR	374896	ArgumentList	EX_VAR ( opline -> result . var )		374516	1					
ANR	374897	Argument	EX_VAR ( opline -> result . var )		374516	0					
ANR	374898	CallExpression	EX_VAR ( opline -> result . var )		374516	0					
ANR	374899	Callee	EX_VAR		374516	0					
ANR	374900	Identifier	EX_VAR		374516	0					
ANR	374901	ArgumentList	opline -> result . var		374516	1					
ANR	374902	Argument	opline -> result . var		374516	0					
ANR	374903	MemberAccess	opline -> result . var		374516	0					
ANR	374904	PtrMemberAccess	opline -> result		374516	0					
ANR	374905	Identifier	opline		374516	0					
ANR	374906	Identifier	result		374516	1					
ANR	374907	Identifier	var		374516	1					
ANR	374908	Argument	zptr		374516	1					
ANR	374909	Identifier	zptr		374516	0					
ANR	374910	ElseStatement	else		374516	0					
ANR	374911	CompoundStatement		53:9:1636:1636	374516	0					
ANR	374912	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	19662:3:605314:605530	374516	0	True				
ANR	374913	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		374516	0					
ANR	374914	Callee	zend_assign_op_overloaded_property		374516	0					
ANR	374915	Identifier	zend_assign_op_overloaded_property		374516	0					
ANR	374916	ArgumentList	object		374516	1					
ANR	374917	Argument	object		374516	0					
ANR	374918	Identifier	object		374516	0					
ANR	374919	Argument	property		374516	1					
ANR	374920	Identifier	property		374516	0					
ANR	374921	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		374516	2					
ANR	374922	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		374516	0					
ANR	374923	Condition	IS_CV == IS_CONST		374516	0					
ANR	374924	EqualityExpression	IS_CV == IS_CONST		374516	0		==			
ANR	374925	Identifier	IS_CV		374516	0					
ANR	374926	Identifier	IS_CONST		374516	1					
ANR	374927	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		374516	1					
ANR	374928	Callee	CACHE_ADDR		374516	0					
ANR	374929	Identifier	CACHE_ADDR		374516	0					
ANR	374930	ArgumentList	Z_CACHE_SLOT_P ( property )		374516	1					
ANR	374931	Argument	Z_CACHE_SLOT_P ( property )		374516	0					
ANR	374932	CallExpression	Z_CACHE_SLOT_P ( property )		374516	0					
ANR	374933	Callee	Z_CACHE_SLOT_P		374516	0					
ANR	374934	Identifier	Z_CACHE_SLOT_P		374516	0					
ANR	374935	ArgumentList	property		374516	1					
ANR	374936	Argument	property		374516	0					
ANR	374937	Identifier	property		374516	0					
ANR	374938	Identifier	NULL		374516	2					
ANR	374939	Argument	value		374516	3					
ANR	374940	Identifier	value		374516	0					
ANR	374941	Argument	binary_op		374516	4					
ANR	374942	Identifier	binary_op		374516	0					
ANR	374943	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		374516	5					
ANR	374944	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		374516	0					
ANR	374945	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		374516	0					
ANR	374946	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		374516	0					
ANR	374947	Callee	UNEXPECTED		374516	0					
ANR	374948	Identifier	UNEXPECTED		374516	0					
ANR	374949	ArgumentList	RETURN_VALUE_USED ( opline )		374516	1					
ANR	374950	Argument	RETURN_VALUE_USED ( opline )		374516	0					
ANR	374951	CallExpression	RETURN_VALUE_USED ( opline )		374516	0					
ANR	374952	Callee	RETURN_VALUE_USED		374516	0					
ANR	374953	Identifier	RETURN_VALUE_USED		374516	0					
ANR	374954	ArgumentList	opline		374516	1					
ANR	374955	Argument	opline		374516	0					
ANR	374956	Identifier	opline		374516	0					
ANR	374957	CallExpression	EX_VAR ( opline -> result . var )		374516	1					
ANR	374958	Callee	EX_VAR		374516	0					
ANR	374959	Identifier	EX_VAR		374516	0					
ANR	374960	ArgumentList	opline -> result . var		374516	1					
ANR	374961	Argument	opline -> result . var		374516	0					
ANR	374962	MemberAccess	opline -> result . var		374516	0					
ANR	374963	PtrMemberAccess	opline -> result		374516	0					
ANR	374964	Identifier	opline		374516	0					
ANR	374965	Identifier	result		374516	1					
ANR	374966	Identifier	var		374516	1					
ANR	374967	Identifier	NULL		374516	2					
ANR	374968	Condition	0	19664:10:605546:605546	374516	1	True				
ANR	374969	PrimaryExpression	0		374516	0					
ANR	374970	ExpressionStatement	FREE_OP ( free_op_data1 )	19666:1:605552:605574	374516	11	True				
ANR	374971	CallExpression	FREE_OP ( free_op_data1 )		374516	0					
ANR	374972	Callee	FREE_OP		374516	0					
ANR	374973	Identifier	FREE_OP		374516	0					
ANR	374974	ArgumentList	free_op_data1		374516	1					
ANR	374975	Argument	free_op_data1		374516	0					
ANR	374976	Identifier	free_op_data1		374516	0					
ANR	374977	IfStatement	if ( UNEXPECTED ( free_op1 ) )		374516	12					
ANR	374978	Condition	UNEXPECTED ( free_op1 )	19668:5:605582:605601	374516	0	True				
ANR	374979	CallExpression	UNEXPECTED ( free_op1 )		374516	0					
ANR	374980	Callee	UNEXPECTED		374516	0					
ANR	374981	Identifier	UNEXPECTED		374516	0					
ANR	374982	ArgumentList	free_op1		374516	1					
ANR	374983	Argument	free_op1		374516	0					
ANR	374984	Identifier	free_op1		374516	0					
ANR	374985	CompoundStatement		60:27:1931:1931	374516	1					
ANR	374986	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	19668:28:605605:605633	374516	0	True				
ANR	374987	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		374516	0					
ANR	374988	Callee	zval_ptr_dtor_nogc		374516	0					
ANR	374989	Identifier	zval_ptr_dtor_nogc		374516	0					
ANR	374990	ArgumentList	free_op1		374516	1					
ANR	374991	Argument	free_op1		374516	0					
ANR	374992	Identifier	free_op1		374516	0					
ANR	374993	ExpressionStatement		19668:58:605635:605635	374516	13	True				
ANR	374994	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	19670:1:605673:605701	374516	14	True				
ANR	374995	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		374516	0					
ANR	374996	Callee	ZEND_VM_NEXT_OPCODE_EX		374516	0					
ANR	374997	Identifier	ZEND_VM_NEXT_OPCODE_EX		374516	0					
ANR	374998	ArgumentList	1		374516	1					
ANR	374999	Argument	1		374516	0					
ANR	375000	PrimaryExpression	1		374516	0					
ANR	375001	Argument	2		374516	1					
ANR	375002	PrimaryExpression	2		374516	0					
ANR	375003	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		374516	1					
ANR	375004	Identifier	zend_binary_assign_op_obj_helper_SPEC_VAR_CV		374516	2					
ANR	375005	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		374516	3					
ANR	375006	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	19608:90:603618:603669	374516	0	True				
ANR	375007	ParameterType	binary_op_type binary_op		374516	0					
ANR	375008	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		374516	1					
ANR	375009	CFGEntryNode	ENTRY		374516		True				
ANR	375010	CFGExitNode	EXIT		374516		True				
ANR	375011	Symbol	opline -> op1		374516						
ANR	375012	Symbol	opline -> op2		374516						
ANR	375013	Symbol	opline -> op2 . var		374516						
ANR	375014	Symbol	IS_CV		374516						
ANR	375015	Symbol	Z_OBJ_P		374516						
ANR	375016	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		374516						
ANR	375017	Symbol	_get_zval_ptr_ptr_var		374516						
ANR	375018	Symbol	free_op_data1		374516						
ANR	375019	Symbol	zptr		374516						
ANR	375020	Symbol	free_op1		374516						
ANR	375021	Symbol	execute_data		374516						
ANR	375022	Symbol	opline -> result		374516						
ANR	375023	Symbol	( opline + 1 ) -> op1		374516						
ANR	375024	Symbol	UNEXPECTED		374516						
ANR	375025	Symbol	E_WARNING		374516						
ANR	375026	Symbol	make_real_object		374516						
ANR	375027	Symbol	RETURN_VALUE_USED		374516						
ANR	375028	Symbol	( opline + 1 ) -> op1 . var		374516						
ANR	375029	Symbol	opline		374516						
ANR	375030	Symbol	get_zval_ptr_r		374516						
ANR	375031	Symbol	property		374516						
ANR	375032	Symbol	opline -> op1 . var		374516						
ANR	375033	Symbol	value		374516						
ANR	375034	Symbol	& free_op1		374516						
ANR	375035	Symbol	binary_op		374516						
ANR	375036	Symbol	BP_VAR_RW		374516						
ANR	375037	Symbol	( opline + 1 ) -> op1_type		374516						
ANR	375038	Symbol	IS_CONST		374516						
ANR	375039	Symbol	NULL		374516						
ANR	375040	Symbol	Z_CACHE_SLOT_P		374516						
ANR	375041	Symbol	_get_zval_ptr_cv_BP_VAR_R		374516						
ANR	375042	Symbol	Z_TYPE_P		374516						
ANR	375043	Symbol	* Z_OBJ_HT_P		374516						
ANR	375044	Symbol	CACHE_ADDR		374516						
ANR	375045	Symbol	* opline		374516						
ANR	375046	Symbol	Z_OBJ_HT_P		374516						
ANR	375047	Symbol	EX_VAR		374516						
ANR	375048	Symbol	IS_OBJECT		374516						
ANR	375049	Symbol	IS_VAR		374516						
ANR	375050	Symbol	EXPECTED		374516						
ANR	375051	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		374516						
ANR	375052	Symbol	& free_op_data1		374516						
ANR	375053	Symbol	opline -> result . var		374516						
ANR	375054	Symbol	object		374516						
ANR	375055	Symbol	IS_UNUSED		374516						
ANR	375056	Function	zend_binary_assign_op_dim_helper_SPEC_VAR_CV	19673:0:605706:608022							
ANR	375057	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_VAR_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		375056	0					
ANR	375058	CompoundStatement		19674:0:605850:608022	375056	0					
ANR	375059	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op_data1 ;"	19675:1:605853:605901	375056	0	True				
ANR	375060	IdentifierDecl	free_op1		375056	0					
ANR	375061	IdentifierDeclType	USE_OPLINE zend_free_op		375056	0					
ANR	375062	Identifier	free_op1		375056	1					
ANR	375063	IdentifierDecl	free_op_data1		375056	1					
ANR	375064	IdentifierDeclType	USE_OPLINE zend_free_op		375056	0					
ANR	375065	Identifier	free_op_data1		375056	1					
ANR	375066	IdentifierDeclStatement	"zval * var_ptr , rv ;"	19677:1:605904:605921	375056	1	True				
ANR	375067	IdentifierDecl	* var_ptr		375056	0					
ANR	375068	IdentifierDeclType	zval *		375056	0					
ANR	375069	Identifier	var_ptr		375056	1					
ANR	375070	IdentifierDecl	rv		375056	1					
ANR	375071	IdentifierDeclType	zval		375056	0					
ANR	375072	Identifier	rv		375056	1					
ANR	375073	IdentifierDeclStatement	"zval * value , * container , * dim ;"	19678:1:605924:605953	375056	2	True				
ANR	375074	IdentifierDecl	* value		375056	0					
ANR	375075	IdentifierDeclType	zval *		375056	0					
ANR	375076	Identifier	value		375056	1					
ANR	375077	IdentifierDecl	* container		375056	1					
ANR	375078	IdentifierDeclType	zval *		375056	0					
ANR	375079	Identifier	container		375056	1					
ANR	375080	IdentifierDecl	* dim		375056	2					
ANR	375081	IdentifierDeclType	zval *		375056	0					
ANR	375082	Identifier	dim		375056	1					
ANR	375083	ExpressionStatement	SAVE_OPLINE ( )	19680:1:605957:605970	375056	3	True				
ANR	375084	CallExpression	SAVE_OPLINE ( )		375056	0					
ANR	375085	Callee	SAVE_OPLINE		375056	0					
ANR	375086	Identifier	SAVE_OPLINE		375056	0					
ANR	375087	ArgumentList			375056	1					
ANR	375088	ExpressionStatement	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	19681:1:605973:606048	375056	4	True				
ANR	375089	AssignmentExpression	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		375056	0		=			
ANR	375090	Identifier	container		375056	0					
ANR	375091	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		375056	1					
ANR	375092	Callee	_get_zval_ptr_ptr_var		375056	0					
ANR	375093	Identifier	_get_zval_ptr_ptr_var		375056	0					
ANR	375094	ArgumentList	opline -> op1 . var		375056	1					
ANR	375095	Argument	opline -> op1 . var		375056	0					
ANR	375096	MemberAccess	opline -> op1 . var		375056	0					
ANR	375097	PtrMemberAccess	opline -> op1		375056	0					
ANR	375098	Identifier	opline		375056	0					
ANR	375099	Identifier	op1		375056	1					
ANR	375100	Identifier	var		375056	1					
ANR	375101	Argument	execute_data		375056	1					
ANR	375102	Identifier	execute_data		375056	0					
ANR	375103	Argument	& free_op1		375056	2					
ANR	375104	UnaryOperationExpression	& free_op1		375056	0					
ANR	375105	UnaryOperator	&		375056	0					
ANR	375106	Identifier	free_op1		375056	1					
ANR	375107	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		375056	5					
ANR	375108	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	19682:5:606055:606115	375056	0	True				
ANR	375109	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		375056	0		&&			
ANR	375110	EqualityExpression	IS_VAR == IS_UNUSED		375056	0		==			
ANR	375111	Identifier	IS_VAR		375056	0					
ANR	375112	Identifier	IS_UNUSED		375056	1					
ANR	375113	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		375056	1					
ANR	375114	Callee	UNEXPECTED		375056	0					
ANR	375115	Identifier	UNEXPECTED		375056	0					
ANR	375116	ArgumentList	Z_OBJ_P ( container ) == NULL		375056	1					
ANR	375117	Argument	Z_OBJ_P ( container ) == NULL		375056	0					
ANR	375118	EqualityExpression	Z_OBJ_P ( container ) == NULL		375056	0		==			
ANR	375119	CallExpression	Z_OBJ_P ( container )		375056	0					
ANR	375120	Callee	Z_OBJ_P		375056	0					
ANR	375121	Identifier	Z_OBJ_P		375056	0					
ANR	375122	ArgumentList	container		375056	1					
ANR	375123	Argument	container		375056	0					
ANR	375124	Identifier	container		375056	0					
ANR	375125	Identifier	NULL		375056	1					
ANR	375126	CompoundStatement		9:68:267:267	375056	1					
ANR	375127	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	19683:2:606122:606186	375056	0	True				
ANR	375128	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		375056	0					
ANR	375129	Callee	zend_throw_error		375056	0					
ANR	375130	Identifier	zend_throw_error		375056	0					
ANR	375131	ArgumentList	NULL		375056	1					
ANR	375132	Argument	NULL		375056	0					
ANR	375133	Identifier	NULL		375056	0					
ANR	375134	Argument	"""Using $this when not in object context"""		375056	1					
ANR	375135	PrimaryExpression	"""Using $this when not in object context"""		375056	0					
ANR	375136	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	19684:2:606190:606250	375056	1	True				
ANR	375137	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		375056	0					
ANR	375138	Callee	FREE_UNFETCHED_OP		375056	0					
ANR	375139	Identifier	FREE_UNFETCHED_OP		375056	0					
ANR	375140	ArgumentList	( opline + 1 ) -> op1_type		375056	1					
ANR	375141	Argument	( opline + 1 ) -> op1_type		375056	0					
ANR	375142	PtrMemberAccess	( opline + 1 ) -> op1_type		375056	0					
ANR	375143	AdditiveExpression	opline + 1		375056	0		+			
ANR	375144	Identifier	opline		375056	0					
ANR	375145	PrimaryExpression	1		375056	1					
ANR	375146	Identifier	op1_type		375056	1					
ANR	375147	Argument	( opline + 1 ) -> op1 . var		375056	1					
ANR	375148	MemberAccess	( opline + 1 ) -> op1 . var		375056	0					
ANR	375149	PtrMemberAccess	( opline + 1 ) -> op1		375056	0					
ANR	375150	AdditiveExpression	opline + 1		375056	0		+			
ANR	375151	Identifier	opline		375056	0					
ANR	375152	PrimaryExpression	1		375056	1					
ANR	375153	Identifier	op1		375056	1					
ANR	375154	Identifier	var		375056	1					
ANR	375155	ExpressionStatement	HANDLE_EXCEPTION ( )	19686:2:606255:606273	375056	2	True				
ANR	375156	CallExpression	HANDLE_EXCEPTION ( )		375056	0					
ANR	375157	Callee	HANDLE_EXCEPTION		375056	0					
ANR	375158	Identifier	HANDLE_EXCEPTION		375056	0					
ANR	375159	ArgumentList			375056	1					
ANR	375160	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( container == NULL ) )		375056	6					
ANR	375161	Condition	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )	19688:5:606283:606331	375056	0	True				
ANR	375162	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )		375056	0		&&			
ANR	375163	EqualityExpression	IS_VAR == IS_VAR		375056	0		==			
ANR	375164	Identifier	IS_VAR		375056	0					
ANR	375165	Identifier	IS_VAR		375056	1					
ANR	375166	CallExpression	UNEXPECTED ( container == NULL )		375056	1					
ANR	375167	Callee	UNEXPECTED		375056	0					
ANR	375168	Identifier	UNEXPECTED		375056	0					
ANR	375169	ArgumentList	container == NULL		375056	1					
ANR	375170	Argument	container == NULL		375056	0					
ANR	375171	EqualityExpression	container == NULL		375056	0		==			
ANR	375172	Identifier	container		375056	0					
ANR	375173	Identifier	NULL		375056	1					
ANR	375174	CompoundStatement		15:56:483:483	375056	1					
ANR	375175	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	19689:2:606338:606400	375056	0	True				
ANR	375176	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		375056	0					
ANR	375177	Callee	zend_throw_error		375056	0					
ANR	375178	Identifier	zend_throw_error		375056	0					
ANR	375179	ArgumentList	NULL		375056	1					
ANR	375180	Argument	NULL		375056	0					
ANR	375181	Identifier	NULL		375056	0					
ANR	375182	Argument	"""Cannot use string offset as an array"""		375056	1					
ANR	375183	PrimaryExpression	"""Cannot use string offset as an array"""		375056	0					
ANR	375184	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	19690:2:606404:606464	375056	1	True				
ANR	375185	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		375056	0					
ANR	375186	Callee	FREE_UNFETCHED_OP		375056	0					
ANR	375187	Identifier	FREE_UNFETCHED_OP		375056	0					
ANR	375188	ArgumentList	( opline + 1 ) -> op1_type		375056	1					
ANR	375189	Argument	( opline + 1 ) -> op1_type		375056	0					
ANR	375190	PtrMemberAccess	( opline + 1 ) -> op1_type		375056	0					
ANR	375191	AdditiveExpression	opline + 1		375056	0		+			
ANR	375192	Identifier	opline		375056	0					
ANR	375193	PrimaryExpression	1		375056	1					
ANR	375194	Identifier	op1_type		375056	1					
ANR	375195	Argument	( opline + 1 ) -> op1 . var		375056	1					
ANR	375196	MemberAccess	( opline + 1 ) -> op1 . var		375056	0					
ANR	375197	PtrMemberAccess	( opline + 1 ) -> op1		375056	0					
ANR	375198	AdditiveExpression	opline + 1		375056	0		+			
ANR	375199	Identifier	opline		375056	0					
ANR	375200	PrimaryExpression	1		375056	1					
ANR	375201	Identifier	op1		375056	1					
ANR	375202	Identifier	var		375056	1					
ANR	375203	ExpressionStatement	HANDLE_EXCEPTION ( )	19692:2:606469:606487	375056	2	True				
ANR	375204	CallExpression	HANDLE_EXCEPTION ( )		375056	0					
ANR	375205	Callee	HANDLE_EXCEPTION		375056	0					
ANR	375206	Identifier	HANDLE_EXCEPTION		375056	0					
ANR	375207	ArgumentList			375056	1					
ANR	375208	ExpressionStatement	"dim = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	19695:1:606494:606556	375056	7	True				
ANR	375209	AssignmentExpression	"dim = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		375056	0		=			
ANR	375210	Identifier	dim		375056	0					
ANR	375211	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		375056	1					
ANR	375212	Callee	_get_zval_ptr_cv_BP_VAR_R		375056	0					
ANR	375213	Identifier	_get_zval_ptr_cv_BP_VAR_R		375056	0					
ANR	375214	ArgumentList	execute_data		375056	1					
ANR	375215	Argument	execute_data		375056	0					
ANR	375216	Identifier	execute_data		375056	0					
ANR	375217	Argument	opline -> op2 . var		375056	1					
ANR	375218	MemberAccess	opline -> op2 . var		375056	0					
ANR	375219	PtrMemberAccess	opline -> op2		375056	0					
ANR	375220	Identifier	opline		375056	0					
ANR	375221	Identifier	op2		375056	1					
ANR	375222	Identifier	var		375056	1					
ANR	375223	DoStatement	do		375056	8					
ANR	375224	CompoundStatement		24:4:712:712	375056	0					
ANR	375225	IfStatement	if ( IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		375056	0					
ANR	375226	Condition	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	19698:6:606571:606636	375056	0	True				
ANR	375227	OrExpression	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		375056	0		||			
ANR	375228	EqualityExpression	IS_VAR == IS_UNUSED		375056	0		==			
ANR	375229	Identifier	IS_VAR		375056	0					
ANR	375230	Identifier	IS_UNUSED		375056	1					
ANR	375231	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		375056	1					
ANR	375232	Callee	UNEXPECTED		375056	0					
ANR	375233	Identifier	UNEXPECTED		375056	0					
ANR	375234	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		375056	1					
ANR	375235	Argument	Z_TYPE_P ( container ) != IS_ARRAY		375056	0					
ANR	375236	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		375056	0		!=			
ANR	375237	CallExpression	Z_TYPE_P ( container )		375056	0					
ANR	375238	Callee	Z_TYPE_P		375056	0					
ANR	375239	Identifier	Z_TYPE_P		375056	0					
ANR	375240	ArgumentList	container		375056	1					
ANR	375241	Argument	container		375056	0					
ANR	375242	Identifier	container		375056	0					
ANR	375243	Identifier	IS_ARRAY		375056	1					
ANR	375244	CompoundStatement		25:74:788:788	375056	1					
ANR	375245	IfStatement	if ( IS_VAR != IS_UNUSED )		375056	0					
ANR	375246	Condition	IS_VAR != IS_UNUSED	19699:7:606648:606666	375056	0	True				
ANR	375247	EqualityExpression	IS_VAR != IS_UNUSED		375056	0		!=			
ANR	375248	Identifier	IS_VAR		375056	0					
ANR	375249	Identifier	IS_UNUSED		375056	1					
ANR	375250	CompoundStatement		26:28:818:818	375056	1					
ANR	375251	ExpressionStatement	ZVAL_DEREF ( container )	19700:4:606675:606696	375056	0	True				
ANR	375252	CallExpression	ZVAL_DEREF ( container )		375056	0					
ANR	375253	Callee	ZVAL_DEREF		375056	0					
ANR	375254	Identifier	ZVAL_DEREF		375056	0					
ANR	375255	ArgumentList	container		375056	1					
ANR	375256	Argument	container		375056	0					
ANR	375257	Identifier	container		375056	0					
ANR	375258	IfStatement	if ( IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		375056	1					
ANR	375259	Condition	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	19702:7:606710:606774	375056	0	True				
ANR	375260	OrExpression	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		375056	0		||			
ANR	375261	EqualityExpression	IS_VAR == IS_UNUSED		375056	0		==			
ANR	375262	Identifier	IS_VAR		375056	0					
ANR	375263	Identifier	IS_UNUSED		375056	1					
ANR	375264	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		375056	1					
ANR	375265	Callee	EXPECTED		375056	0					
ANR	375266	Identifier	EXPECTED		375056	0					
ANR	375267	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		375056	1					
ANR	375268	Argument	Z_TYPE_P ( container ) == IS_OBJECT		375056	0					
ANR	375269	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		375056	0		==			
ANR	375270	CallExpression	Z_TYPE_P ( container )		375056	0					
ANR	375271	Callee	Z_TYPE_P		375056	0					
ANR	375272	Identifier	Z_TYPE_P		375056	0					
ANR	375273	ArgumentList	container		375056	1					
ANR	375274	Argument	container		375056	0					
ANR	375275	Identifier	container		375056	0					
ANR	375276	Identifier	IS_OBJECT		375056	1					
ANR	375277	CompoundStatement		29:74:926:926	375056	1					
ANR	375278	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	19703:4:606783:606874	375056	0	True				
ANR	375279	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		375056	0		=			
ANR	375280	Identifier	value		375056	0					
ANR	375281	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		375056	1					
ANR	375282	Callee	get_zval_ptr_r		375056	0					
ANR	375283	Identifier	get_zval_ptr_r		375056	0					
ANR	375284	ArgumentList	( opline + 1 ) -> op1_type		375056	1					
ANR	375285	Argument	( opline + 1 ) -> op1_type		375056	0					
ANR	375286	PtrMemberAccess	( opline + 1 ) -> op1_type		375056	0					
ANR	375287	AdditiveExpression	opline + 1		375056	0		+			
ANR	375288	Identifier	opline		375056	0					
ANR	375289	PrimaryExpression	1		375056	1					
ANR	375290	Identifier	op1_type		375056	1					
ANR	375291	Argument	( opline + 1 ) -> op1		375056	1					
ANR	375292	PtrMemberAccess	( opline + 1 ) -> op1		375056	0					
ANR	375293	AdditiveExpression	opline + 1		375056	0		+			
ANR	375294	Identifier	opline		375056	0					
ANR	375295	PrimaryExpression	1		375056	1					
ANR	375296	Identifier	op1		375056	1					
ANR	375297	Argument	execute_data		375056	2					
ANR	375298	Identifier	execute_data		375056	0					
ANR	375299	Argument	& free_op_data1		375056	3					
ANR	375300	UnaryOperationExpression	& free_op_data1		375056	0					
ANR	375301	UnaryOperator	&		375056	0					
ANR	375302	Identifier	free_op_data1		375056	1					
ANR	375303	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	19704:4:606880:607018	375056	1	True				
ANR	375304	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		375056	0					
ANR	375305	Callee	zend_binary_assign_op_obj_dim		375056	0					
ANR	375306	Identifier	zend_binary_assign_op_obj_dim		375056	0					
ANR	375307	ArgumentList	container		375056	1					
ANR	375308	Argument	container		375056	0					
ANR	375309	Identifier	container		375056	0					
ANR	375310	Argument	dim		375056	1					
ANR	375311	Identifier	dim		375056	0					
ANR	375312	Argument	value		375056	2					
ANR	375313	Identifier	value		375056	0					
ANR	375314	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		375056	3					
ANR	375315	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		375056	0					
ANR	375316	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375056	0					
ANR	375317	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375056	0					
ANR	375318	Callee	UNEXPECTED		375056	0					
ANR	375319	Identifier	UNEXPECTED		375056	0					
ANR	375320	ArgumentList	RETURN_VALUE_USED ( opline )		375056	1					
ANR	375321	Argument	RETURN_VALUE_USED ( opline )		375056	0					
ANR	375322	CallExpression	RETURN_VALUE_USED ( opline )		375056	0					
ANR	375323	Callee	RETURN_VALUE_USED		375056	0					
ANR	375324	Identifier	RETURN_VALUE_USED		375056	0					
ANR	375325	ArgumentList	opline		375056	1					
ANR	375326	Argument	opline		375056	0					
ANR	375327	Identifier	opline		375056	0					
ANR	375328	CallExpression	EX_VAR ( opline -> result . var )		375056	1					
ANR	375329	Callee	EX_VAR		375056	0					
ANR	375330	Identifier	EX_VAR		375056	0					
ANR	375331	ArgumentList	opline -> result . var		375056	1					
ANR	375332	Argument	opline -> result . var		375056	0					
ANR	375333	MemberAccess	opline -> result . var		375056	0					
ANR	375334	PtrMemberAccess	opline -> result		375056	0					
ANR	375335	Identifier	opline		375056	0					
ANR	375336	Identifier	result		375056	1					
ANR	375337	Identifier	var		375056	1					
ANR	375338	Identifier	NULL		375056	2					
ANR	375339	Argument	binary_op		375056	4					
ANR	375340	Identifier	binary_op		375056	0					
ANR	375341	BreakStatement	break ;	19705:4:607024:607029	375056	2	True				
ANR	375342	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CV )"	19709:2:607043:607102	375056	1	True				
ANR	375343	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CV )"		375056	0					
ANR	375344	Callee	zend_fetch_dimension_address_RW		375056	0					
ANR	375345	Identifier	zend_fetch_dimension_address_RW		375056	0					
ANR	375346	ArgumentList	& rv		375056	1					
ANR	375347	Argument	& rv		375056	0					
ANR	375348	UnaryOperationExpression	& rv		375056	0					
ANR	375349	UnaryOperator	&		375056	0					
ANR	375350	Identifier	rv		375056	1					
ANR	375351	Argument	container		375056	1					
ANR	375352	Identifier	container		375056	0					
ANR	375353	Argument	dim		375056	2					
ANR	375354	Identifier	dim		375056	0					
ANR	375355	Argument	IS_CV		375056	3					
ANR	375356	Identifier	IS_CV		375056	0					
ANR	375357	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	19710:2:607106:607197	375056	2	True				
ANR	375358	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		375056	0		=			
ANR	375359	Identifier	value		375056	0					
ANR	375360	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		375056	1					
ANR	375361	Callee	get_zval_ptr_r		375056	0					
ANR	375362	Identifier	get_zval_ptr_r		375056	0					
ANR	375363	ArgumentList	( opline + 1 ) -> op1_type		375056	1					
ANR	375364	Argument	( opline + 1 ) -> op1_type		375056	0					
ANR	375365	PtrMemberAccess	( opline + 1 ) -> op1_type		375056	0					
ANR	375366	AdditiveExpression	opline + 1		375056	0		+			
ANR	375367	Identifier	opline		375056	0					
ANR	375368	PrimaryExpression	1		375056	1					
ANR	375369	Identifier	op1_type		375056	1					
ANR	375370	Argument	( opline + 1 ) -> op1		375056	1					
ANR	375371	PtrMemberAccess	( opline + 1 ) -> op1		375056	0					
ANR	375372	AdditiveExpression	opline + 1		375056	0		+			
ANR	375373	Identifier	opline		375056	0					
ANR	375374	PrimaryExpression	1		375056	1					
ANR	375375	Identifier	op1		375056	1					
ANR	375376	Argument	execute_data		375056	2					
ANR	375377	Identifier	execute_data		375056	0					
ANR	375378	Argument	& free_op_data1		375056	3					
ANR	375379	UnaryOperationExpression	& free_op_data1		375056	0					
ANR	375380	UnaryOperator	&		375056	0					
ANR	375381	Identifier	free_op_data1		375056	1					
ANR	375382	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	19711:2:607201:607239	375056	3	True				
ANR	375383	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		375056	0					
ANR	375384	Callee	ZEND_ASSERT		375056	0					
ANR	375385	Identifier	ZEND_ASSERT		375056	0					
ANR	375386	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		375056	1					
ANR	375387	Argument	Z_TYPE ( rv ) == IS_INDIRECT		375056	0					
ANR	375388	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		375056	0		==			
ANR	375389	CallExpression	Z_TYPE ( rv )		375056	0					
ANR	375390	Callee	Z_TYPE		375056	0					
ANR	375391	Identifier	Z_TYPE		375056	0					
ANR	375392	ArgumentList	rv		375056	1					
ANR	375393	Argument	rv		375056	0					
ANR	375394	Identifier	rv		375056	0					
ANR	375395	Identifier	IS_INDIRECT		375056	1					
ANR	375396	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	19712:2:607243:607267	375056	4	True				
ANR	375397	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		375056	0		=			
ANR	375398	Identifier	var_ptr		375056	0					
ANR	375399	CallExpression	Z_INDIRECT ( rv )		375056	1					
ANR	375400	Callee	Z_INDIRECT		375056	0					
ANR	375401	Identifier	Z_INDIRECT		375056	0					
ANR	375402	ArgumentList	rv		375056	1					
ANR	375403	Argument	rv		375056	0					
ANR	375404	Identifier	rv		375056	0					
ANR	375405	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		375056	5					
ANR	375406	Condition	UNEXPECTED ( var_ptr == NULL )	19714:6:607276:607302	375056	0	True				
ANR	375407	CallExpression	UNEXPECTED ( var_ptr == NULL )		375056	0					
ANR	375408	Callee	UNEXPECTED		375056	0					
ANR	375409	Identifier	UNEXPECTED		375056	0					
ANR	375410	ArgumentList	var_ptr == NULL		375056	1					
ANR	375411	Argument	var_ptr == NULL		375056	0					
ANR	375412	EqualityExpression	var_ptr == NULL		375056	0		==			
ANR	375413	Identifier	var_ptr		375056	0					
ANR	375414	Identifier	NULL		375056	1					
ANR	375415	CompoundStatement		41:35:1454:1454	375056	1					
ANR	375416	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	19715:3:607310:607409	375056	0	True				
ANR	375417	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		375056	0					
ANR	375418	Callee	zend_throw_error		375056	0					
ANR	375419	Identifier	zend_throw_error		375056	0					
ANR	375420	ArgumentList	NULL		375056	1					
ANR	375421	Argument	NULL		375056	0					
ANR	375422	Identifier	NULL		375056	0					
ANR	375423	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		375056	1					
ANR	375424	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		375056	0					
ANR	375425	ExpressionStatement	FREE_OP ( free_op_data1 )	19717:3:607415:607437	375056	1	True				
ANR	375426	CallExpression	FREE_OP ( free_op_data1 )		375056	0					
ANR	375427	Callee	FREE_OP		375056	0					
ANR	375428	Identifier	FREE_OP		375056	0					
ANR	375429	ArgumentList	free_op_data1		375056	1					
ANR	375430	Argument	free_op_data1		375056	0					
ANR	375431	Identifier	free_op_data1		375056	0					
ANR	375432	IfStatement	if ( UNEXPECTED ( free_op1 ) )		375056	2					
ANR	375433	Condition	UNEXPECTED ( free_op1 )	19718:7:607446:607465	375056	0	True				
ANR	375434	CallExpression	UNEXPECTED ( free_op1 )		375056	0					
ANR	375435	Callee	UNEXPECTED		375056	0					
ANR	375436	Identifier	UNEXPECTED		375056	0					
ANR	375437	ArgumentList	free_op1		375056	1					
ANR	375438	Argument	free_op1		375056	0					
ANR	375439	Identifier	free_op1		375056	0					
ANR	375440	CompoundStatement		45:29:1617:1617	375056	1					
ANR	375441	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	19718:30:607469:607497	375056	0	True				
ANR	375442	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		375056	0					
ANR	375443	Callee	zval_ptr_dtor_nogc		375056	0					
ANR	375444	Identifier	zval_ptr_dtor_nogc		375056	0					
ANR	375445	ArgumentList	free_op1		375056	1					
ANR	375446	Argument	free_op1		375056	0					
ANR	375447	Identifier	free_op1		375056	0					
ANR	375448	ExpressionStatement		19718:60:607499:607499	375056	3	True				
ANR	375449	ExpressionStatement	HANDLE_EXCEPTION ( )	19719:3:607504:607522	375056	4	True				
ANR	375450	CallExpression	HANDLE_EXCEPTION ( )		375056	0					
ANR	375451	Callee	HANDLE_EXCEPTION		375056	0					
ANR	375452	Identifier	HANDLE_EXCEPTION		375056	0					
ANR	375453	ArgumentList			375056	1					
ANR	375454	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		375056	6					
ANR	375455	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	19722:6:607535:607572	375056	0	True				
ANR	375456	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		375056	0					
ANR	375457	Callee	UNEXPECTED		375056	0					
ANR	375458	Identifier	UNEXPECTED		375056	0					
ANR	375459	ArgumentList	var_ptr == & EG ( error_zval )		375056	1					
ANR	375460	Argument	var_ptr == & EG ( error_zval )		375056	0					
ANR	375461	EqualityExpression	var_ptr == & EG ( error_zval )		375056	0		==			
ANR	375462	Identifier	var_ptr		375056	0					
ANR	375463	UnaryOperationExpression	& EG ( error_zval )		375056	1					
ANR	375464	UnaryOperator	&		375056	0					
ANR	375465	CallExpression	EG ( error_zval )		375056	1					
ANR	375466	Callee	EG		375056	0					
ANR	375467	Identifier	EG		375056	0					
ANR	375468	ArgumentList	error_zval		375056	1					
ANR	375469	Argument	error_zval		375056	0					
ANR	375470	Identifier	error_zval		375056	0					
ANR	375471	CompoundStatement		49:46:1724:1724	375056	1					
ANR	375472	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		375056	0					
ANR	375473	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	19723:7:607584:607620	375056	0	True				
ANR	375474	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375056	0					
ANR	375475	Callee	UNEXPECTED		375056	0					
ANR	375476	Identifier	UNEXPECTED		375056	0					
ANR	375477	ArgumentList	RETURN_VALUE_USED ( opline )		375056	1					
ANR	375478	Argument	RETURN_VALUE_USED ( opline )		375056	0					
ANR	375479	CallExpression	RETURN_VALUE_USED ( opline )		375056	0					
ANR	375480	Callee	RETURN_VALUE_USED		375056	0					
ANR	375481	Identifier	RETURN_VALUE_USED		375056	0					
ANR	375482	ArgumentList	opline		375056	1					
ANR	375483	Argument	opline		375056	0					
ANR	375484	Identifier	opline		375056	0					
ANR	375485	CompoundStatement		50:46:1772:1772	375056	1					
ANR	375486	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	19724:4:607629:607666	375056	0	True				
ANR	375487	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		375056	0					
ANR	375488	Callee	ZVAL_NULL		375056	0					
ANR	375489	Identifier	ZVAL_NULL		375056	0					
ANR	375490	ArgumentList	EX_VAR ( opline -> result . var )		375056	1					
ANR	375491	Argument	EX_VAR ( opline -> result . var )		375056	0					
ANR	375492	CallExpression	EX_VAR ( opline -> result . var )		375056	0					
ANR	375493	Callee	EX_VAR		375056	0					
ANR	375494	Identifier	EX_VAR		375056	0					
ANR	375495	ArgumentList	opline -> result . var		375056	1					
ANR	375496	Argument	opline -> result . var		375056	0					
ANR	375497	MemberAccess	opline -> result . var		375056	0					
ANR	375498	PtrMemberAccess	opline -> result		375056	0					
ANR	375499	Identifier	opline		375056	0					
ANR	375500	Identifier	result		375056	1					
ANR	375501	Identifier	var		375056	1					
ANR	375502	ElseStatement	else		375056	0					
ANR	375503	CompoundStatement		53:9:1831:1831	375056	0					
ANR	375504	ExpressionStatement	ZVAL_DEREF ( var_ptr )	19727:3:607687:607706	375056	0	True				
ANR	375505	CallExpression	ZVAL_DEREF ( var_ptr )		375056	0					
ANR	375506	Callee	ZVAL_DEREF		375056	0					
ANR	375507	Identifier	ZVAL_DEREF		375056	0					
ANR	375508	ArgumentList	var_ptr		375056	1					
ANR	375509	Argument	var_ptr		375056	0					
ANR	375510	Identifier	var_ptr		375056	0					
ANR	375511	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	19728:3:607711:607739	375056	1	True				
ANR	375512	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		375056	0					
ANR	375513	Callee	SEPARATE_ZVAL_NOREF		375056	0					
ANR	375514	Identifier	SEPARATE_ZVAL_NOREF		375056	0					
ANR	375515	ArgumentList	var_ptr		375056	1					
ANR	375516	Argument	var_ptr		375056	0					
ANR	375517	Identifier	var_ptr		375056	0					
ANR	375518	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	19730:3:607745:607779	375056	2	True				
ANR	375519	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		375056	0					
ANR	375520	Callee	binary_op		375056	0					
ANR	375521	Identifier	binary_op		375056	0					
ANR	375522	ArgumentList	var_ptr		375056	1					
ANR	375523	Argument	var_ptr		375056	0					
ANR	375524	Identifier	var_ptr		375056	0					
ANR	375525	Argument	var_ptr		375056	1					
ANR	375526	Identifier	var_ptr		375056	0					
ANR	375527	Argument	value		375056	2					
ANR	375528	Identifier	value		375056	0					
ANR	375529	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		375056	3					
ANR	375530	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	19732:7:607789:607825	375056	0	True				
ANR	375531	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375056	0					
ANR	375532	Callee	UNEXPECTED		375056	0					
ANR	375533	Identifier	UNEXPECTED		375056	0					
ANR	375534	ArgumentList	RETURN_VALUE_USED ( opline )		375056	1					
ANR	375535	Argument	RETURN_VALUE_USED ( opline )		375056	0					
ANR	375536	CallExpression	RETURN_VALUE_USED ( opline )		375056	0					
ANR	375537	Callee	RETURN_VALUE_USED		375056	0					
ANR	375538	Identifier	RETURN_VALUE_USED		375056	0					
ANR	375539	ArgumentList	opline		375056	1					
ANR	375540	Argument	opline		375056	0					
ANR	375541	Identifier	opline		375056	0					
ANR	375542	CompoundStatement		59:46:1977:1977	375056	1					
ANR	375543	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	19733:4:607834:607880	375056	0	True				
ANR	375544	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		375056	0					
ANR	375545	Callee	ZVAL_COPY		375056	0					
ANR	375546	Identifier	ZVAL_COPY		375056	0					
ANR	375547	ArgumentList	EX_VAR ( opline -> result . var )		375056	1					
ANR	375548	Argument	EX_VAR ( opline -> result . var )		375056	0					
ANR	375549	CallExpression	EX_VAR ( opline -> result . var )		375056	0					
ANR	375550	Callee	EX_VAR		375056	0					
ANR	375551	Identifier	EX_VAR		375056	0					
ANR	375552	ArgumentList	opline -> result . var		375056	1					
ANR	375553	Argument	opline -> result . var		375056	0					
ANR	375554	MemberAccess	opline -> result . var		375056	0					
ANR	375555	PtrMemberAccess	opline -> result		375056	0					
ANR	375556	Identifier	opline		375056	0					
ANR	375557	Identifier	result		375056	1					
ANR	375558	Identifier	var		375056	1					
ANR	375559	Argument	var_ptr		375056	1					
ANR	375560	Identifier	var_ptr		375056	0					
ANR	375561	Condition	0	19736:10:607901:607901	375056	1	True				
ANR	375562	PrimaryExpression	0		375056	0					
ANR	375563	ExpressionStatement	FREE_OP ( free_op_data1 )	19738:1:607907:607929	375056	9	True				
ANR	375564	CallExpression	FREE_OP ( free_op_data1 )		375056	0					
ANR	375565	Callee	FREE_OP		375056	0					
ANR	375566	Identifier	FREE_OP		375056	0					
ANR	375567	ArgumentList	free_op_data1		375056	1					
ANR	375568	Argument	free_op_data1		375056	0					
ANR	375569	Identifier	free_op_data1		375056	0					
ANR	375570	IfStatement	if ( UNEXPECTED ( free_op1 ) )		375056	10					
ANR	375571	Condition	UNEXPECTED ( free_op1 )	19739:5:607936:607955	375056	0	True				
ANR	375572	CallExpression	UNEXPECTED ( free_op1 )		375056	0					
ANR	375573	Callee	UNEXPECTED		375056	0					
ANR	375574	Identifier	UNEXPECTED		375056	0					
ANR	375575	ArgumentList	free_op1		375056	1					
ANR	375576	Argument	free_op1		375056	0					
ANR	375577	Identifier	free_op1		375056	0					
ANR	375578	CompoundStatement		66:27:2107:2107	375056	1					
ANR	375579	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	19739:28:607959:607987	375056	0	True				
ANR	375580	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		375056	0					
ANR	375581	Callee	zval_ptr_dtor_nogc		375056	0					
ANR	375582	Identifier	zval_ptr_dtor_nogc		375056	0					
ANR	375583	ArgumentList	free_op1		375056	1					
ANR	375584	Argument	free_op1		375056	0					
ANR	375585	Identifier	free_op1		375056	0					
ANR	375586	ExpressionStatement		19739:58:607989:607989	375056	11	True				
ANR	375587	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	19740:1:607992:608020	375056	12	True				
ANR	375588	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		375056	0					
ANR	375589	Callee	ZEND_VM_NEXT_OPCODE_EX		375056	0					
ANR	375590	Identifier	ZEND_VM_NEXT_OPCODE_EX		375056	0					
ANR	375591	ArgumentList	1		375056	1					
ANR	375592	Argument	1		375056	0					
ANR	375593	PrimaryExpression	1		375056	0					
ANR	375594	Argument	2		375056	1					
ANR	375595	PrimaryExpression	2		375056	0					
ANR	375596	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		375056	1					
ANR	375597	Identifier	zend_binary_assign_op_dim_helper_SPEC_VAR_CV		375056	2					
ANR	375598	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		375056	3					
ANR	375599	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	19673:90:605796:605847	375056	0	True				
ANR	375600	ParameterType	binary_op_type binary_op		375056	0					
ANR	375601	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		375056	1					
ANR	375602	CFGEntryNode	ENTRY		375056		True				
ANR	375603	CFGExitNode	EXIT		375056		True				
ANR	375604	Symbol	container		375056						
ANR	375605	Symbol	opline -> op1		375056						
ANR	375606	Symbol	opline -> op2		375056						
ANR	375607	Symbol	opline -> op2 . var		375056						
ANR	375608	Symbol	IS_CV		375056						
ANR	375609	Symbol	rv		375056						
ANR	375610	Symbol	Z_OBJ_P		375056						
ANR	375611	Symbol	dim		375056						
ANR	375612	Symbol	Z_TYPE		375056						
ANR	375613	Symbol	_get_zval_ptr_ptr_var		375056						
ANR	375614	Symbol	free_op_data1		375056						
ANR	375615	Symbol	& EG		375056						
ANR	375616	Symbol	free_op1		375056						
ANR	375617	Symbol	var_ptr		375056						
ANR	375618	Symbol	execute_data		375056						
ANR	375619	Symbol	opline -> result		375056						
ANR	375620	Symbol	( opline + 1 ) -> op1		375056						
ANR	375621	Symbol	UNEXPECTED		375056						
ANR	375622	Symbol	RETURN_VALUE_USED		375056						
ANR	375623	Symbol	( opline + 1 ) -> op1 . var		375056						
ANR	375624	Symbol	opline		375056						
ANR	375625	Symbol	get_zval_ptr_r		375056						
ANR	375626	Symbol	Z_INDIRECT		375056						
ANR	375627	Symbol	IS_ARRAY		375056						
ANR	375628	Symbol	opline -> op1 . var		375056						
ANR	375629	Symbol	value		375056						
ANR	375630	Symbol	& free_op1		375056						
ANR	375631	Symbol	binary_op		375056						
ANR	375632	Symbol	( opline + 1 ) -> op1_type		375056						
ANR	375633	Symbol	NULL		375056						
ANR	375634	Symbol	_get_zval_ptr_cv_BP_VAR_R		375056						
ANR	375635	Symbol	Z_TYPE_P		375056						
ANR	375636	Symbol	& rv		375056						
ANR	375637	Symbol	* opline		375056						
ANR	375638	Symbol	error_zval		375056						
ANR	375639	Symbol	EX_VAR		375056						
ANR	375640	Symbol	IS_OBJECT		375056						
ANR	375641	Symbol	IS_VAR		375056						
ANR	375642	Symbol	EXPECTED		375056						
ANR	375643	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		375056						
ANR	375644	Symbol	& free_op_data1		375056						
ANR	375645	Symbol	opline -> result . var		375056						
ANR	375646	Symbol	IS_UNUSED		375056						
ANR	375647	Symbol	IS_INDIRECT		375056						
ANR	375648	Function	zend_binary_assign_op_helper_SPEC_VAR_CV	19743:0:608025:609051							
ANR	375649	FunctionDef	zend_binary_assign_op_helper_SPEC_VAR_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		375648	0					
ANR	375650	CompoundStatement		19744:0:608165:609051	375648	0					
ANR	375651	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	19745:1:608168:608201	375648	0	True				
ANR	375652	IdentifierDecl	free_op1		375648	0					
ANR	375653	IdentifierDeclType	USE_OPLINE zend_free_op		375648	0					
ANR	375654	Identifier	free_op1		375648	1					
ANR	375655	IdentifierDeclStatement	zval * var_ptr ;	19747:1:608204:608217	375648	1	True				
ANR	375656	IdentifierDecl	* var_ptr		375648	0					
ANR	375657	IdentifierDeclType	zval *		375648	0					
ANR	375658	Identifier	var_ptr		375648	1					
ANR	375659	IdentifierDeclStatement	zval * value ;	19748:1:608220:608231	375648	2	True				
ANR	375660	IdentifierDecl	* value		375648	0					
ANR	375661	IdentifierDeclType	zval *		375648	0					
ANR	375662	Identifier	value		375648	1					
ANR	375663	ExpressionStatement	SAVE_OPLINE ( )	19750:1:608235:608248	375648	3	True				
ANR	375664	CallExpression	SAVE_OPLINE ( )		375648	0					
ANR	375665	Callee	SAVE_OPLINE		375648	0					
ANR	375666	Identifier	SAVE_OPLINE		375648	0					
ANR	375667	ArgumentList			375648	1					
ANR	375668	ExpressionStatement	"value = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	19751:1:608251:608315	375648	4	True				
ANR	375669	AssignmentExpression	"value = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		375648	0		=			
ANR	375670	Identifier	value		375648	0					
ANR	375671	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		375648	1					
ANR	375672	Callee	_get_zval_ptr_cv_BP_VAR_R		375648	0					
ANR	375673	Identifier	_get_zval_ptr_cv_BP_VAR_R		375648	0					
ANR	375674	ArgumentList	execute_data		375648	1					
ANR	375675	Argument	execute_data		375648	0					
ANR	375676	Identifier	execute_data		375648	0					
ANR	375677	Argument	opline -> op2 . var		375648	1					
ANR	375678	MemberAccess	opline -> op2 . var		375648	0					
ANR	375679	PtrMemberAccess	opline -> op2		375648	0					
ANR	375680	Identifier	opline		375648	0					
ANR	375681	Identifier	op2		375648	1					
ANR	375682	Identifier	var		375648	1					
ANR	375683	ExpressionStatement	"var_ptr = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	19752:1:608318:608391	375648	5	True				
ANR	375684	AssignmentExpression	"var_ptr = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		375648	0		=			
ANR	375685	Identifier	var_ptr		375648	0					
ANR	375686	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		375648	1					
ANR	375687	Callee	_get_zval_ptr_ptr_var		375648	0					
ANR	375688	Identifier	_get_zval_ptr_ptr_var		375648	0					
ANR	375689	ArgumentList	opline -> op1 . var		375648	1					
ANR	375690	Argument	opline -> op1 . var		375648	0					
ANR	375691	MemberAccess	opline -> op1 . var		375648	0					
ANR	375692	PtrMemberAccess	opline -> op1		375648	0					
ANR	375693	Identifier	opline		375648	0					
ANR	375694	Identifier	op1		375648	1					
ANR	375695	Identifier	var		375648	1					
ANR	375696	Argument	execute_data		375648	1					
ANR	375697	Identifier	execute_data		375648	0					
ANR	375698	Argument	& free_op1		375648	2					
ANR	375699	UnaryOperationExpression	& free_op1		375648	0					
ANR	375700	UnaryOperator	&		375648	0					
ANR	375701	Identifier	free_op1		375648	1					
ANR	375702	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL ) )		375648	6					
ANR	375703	Condition	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL )	19754:5:608399:608445	375648	0	True				
ANR	375704	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL )		375648	0		&&			
ANR	375705	EqualityExpression	IS_VAR == IS_VAR		375648	0		==			
ANR	375706	Identifier	IS_VAR		375648	0					
ANR	375707	Identifier	IS_VAR		375648	1					
ANR	375708	CallExpression	UNEXPECTED ( var_ptr == NULL )		375648	1					
ANR	375709	Callee	UNEXPECTED		375648	0					
ANR	375710	Identifier	UNEXPECTED		375648	0					
ANR	375711	ArgumentList	var_ptr == NULL		375648	1					
ANR	375712	Argument	var_ptr == NULL		375648	0					
ANR	375713	EqualityExpression	var_ptr == NULL		375648	0		==			
ANR	375714	Identifier	var_ptr		375648	0					
ANR	375715	Identifier	NULL		375648	1					
ANR	375716	CompoundStatement		11:54:282:282	375648	1					
ANR	375717	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	19755:2:608452:608551	375648	0	True				
ANR	375718	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		375648	0					
ANR	375719	Callee	zend_throw_error		375648	0					
ANR	375720	Identifier	zend_throw_error		375648	0					
ANR	375721	ArgumentList	NULL		375648	1					
ANR	375722	Argument	NULL		375648	0					
ANR	375723	Identifier	NULL		375648	0					
ANR	375724	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		375648	1					
ANR	375725	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		375648	0					
ANR	375726	ExpressionStatement	HANDLE_EXCEPTION ( )	19757:2:608556:608574	375648	1	True				
ANR	375727	CallExpression	HANDLE_EXCEPTION ( )		375648	0					
ANR	375728	Callee	HANDLE_EXCEPTION		375648	0					
ANR	375729	Identifier	HANDLE_EXCEPTION		375648	0					
ANR	375730	ArgumentList			375648	1					
ANR	375731	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		375648	7					
ANR	375732	Condition	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )	19760:5:608585:608642	375648	0	True				
ANR	375733	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )		375648	0		&&			
ANR	375734	EqualityExpression	IS_VAR == IS_VAR		375648	0		==			
ANR	375735	Identifier	IS_VAR		375648	0					
ANR	375736	Identifier	IS_VAR		375648	1					
ANR	375737	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		375648	1					
ANR	375738	Callee	UNEXPECTED		375648	0					
ANR	375739	Identifier	UNEXPECTED		375648	0					
ANR	375740	ArgumentList	var_ptr == & EG ( error_zval )		375648	1					
ANR	375741	Argument	var_ptr == & EG ( error_zval )		375648	0					
ANR	375742	EqualityExpression	var_ptr == & EG ( error_zval )		375648	0		==			
ANR	375743	Identifier	var_ptr		375648	0					
ANR	375744	UnaryOperationExpression	& EG ( error_zval )		375648	1					
ANR	375745	UnaryOperator	&		375648	0					
ANR	375746	CallExpression	EG ( error_zval )		375648	1					
ANR	375747	Callee	EG		375648	0					
ANR	375748	Identifier	EG		375648	0					
ANR	375749	ArgumentList	error_zval		375648	1					
ANR	375750	Argument	error_zval		375648	0					
ANR	375751	Identifier	error_zval		375648	0					
ANR	375752	CompoundStatement		17:65:479:479	375648	1					
ANR	375753	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		375648	0					
ANR	375754	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	19761:6:608653:608689	375648	0	True				
ANR	375755	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375648	0					
ANR	375756	Callee	UNEXPECTED		375648	0					
ANR	375757	Identifier	UNEXPECTED		375648	0					
ANR	375758	ArgumentList	RETURN_VALUE_USED ( opline )		375648	1					
ANR	375759	Argument	RETURN_VALUE_USED ( opline )		375648	0					
ANR	375760	CallExpression	RETURN_VALUE_USED ( opline )		375648	0					
ANR	375761	Callee	RETURN_VALUE_USED		375648	0					
ANR	375762	Identifier	RETURN_VALUE_USED		375648	0					
ANR	375763	ArgumentList	opline		375648	1					
ANR	375764	Argument	opline		375648	0					
ANR	375765	Identifier	opline		375648	0					
ANR	375766	CompoundStatement		18:45:526:526	375648	1					
ANR	375767	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	19762:3:608697:608734	375648	0	True				
ANR	375768	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		375648	0					
ANR	375769	Callee	ZVAL_NULL		375648	0					
ANR	375770	Identifier	ZVAL_NULL		375648	0					
ANR	375771	ArgumentList	EX_VAR ( opline -> result . var )		375648	1					
ANR	375772	Argument	EX_VAR ( opline -> result . var )		375648	0					
ANR	375773	CallExpression	EX_VAR ( opline -> result . var )		375648	0					
ANR	375774	Callee	EX_VAR		375648	0					
ANR	375775	Identifier	EX_VAR		375648	0					
ANR	375776	ArgumentList	opline -> result . var		375648	1					
ANR	375777	Argument	opline -> result . var		375648	0					
ANR	375778	MemberAccess	opline -> result . var		375648	0					
ANR	375779	PtrMemberAccess	opline -> result		375648	0					
ANR	375780	Identifier	opline		375648	0					
ANR	375781	Identifier	result		375648	1					
ANR	375782	Identifier	var		375648	1					
ANR	375783	ElseStatement	else		375648	0					
ANR	375784	CompoundStatement		21:8:582:582	375648	0					
ANR	375785	ExpressionStatement	ZVAL_DEREF ( var_ptr )	19765:2:608752:608771	375648	0	True				
ANR	375786	CallExpression	ZVAL_DEREF ( var_ptr )		375648	0					
ANR	375787	Callee	ZVAL_DEREF		375648	0					
ANR	375788	Identifier	ZVAL_DEREF		375648	0					
ANR	375789	ArgumentList	var_ptr		375648	1					
ANR	375790	Argument	var_ptr		375648	0					
ANR	375791	Identifier	var_ptr		375648	0					
ANR	375792	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	19766:2:608775:608803	375648	1	True				
ANR	375793	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		375648	0					
ANR	375794	Callee	SEPARATE_ZVAL_NOREF		375648	0					
ANR	375795	Identifier	SEPARATE_ZVAL_NOREF		375648	0					
ANR	375796	ArgumentList	var_ptr		375648	1					
ANR	375797	Argument	var_ptr		375648	0					
ANR	375798	Identifier	var_ptr		375648	0					
ANR	375799	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	19768:2:608808:608842	375648	2	True				
ANR	375800	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		375648	0					
ANR	375801	Callee	binary_op		375648	0					
ANR	375802	Identifier	binary_op		375648	0					
ANR	375803	ArgumentList	var_ptr		375648	1					
ANR	375804	Argument	var_ptr		375648	0					
ANR	375805	Identifier	var_ptr		375648	0					
ANR	375806	Argument	var_ptr		375648	1					
ANR	375807	Identifier	var_ptr		375648	0					
ANR	375808	Argument	value		375648	2					
ANR	375809	Identifier	value		375648	0					
ANR	375810	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		375648	3					
ANR	375811	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	19770:6:608851:608887	375648	0	True				
ANR	375812	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375648	0					
ANR	375813	Callee	UNEXPECTED		375648	0					
ANR	375814	Identifier	UNEXPECTED		375648	0					
ANR	375815	ArgumentList	RETURN_VALUE_USED ( opline )		375648	1					
ANR	375816	Argument	RETURN_VALUE_USED ( opline )		375648	0					
ANR	375817	CallExpression	RETURN_VALUE_USED ( opline )		375648	0					
ANR	375818	Callee	RETURN_VALUE_USED		375648	0					
ANR	375819	Identifier	RETURN_VALUE_USED		375648	0					
ANR	375820	ArgumentList	opline		375648	1					
ANR	375821	Argument	opline		375648	0					
ANR	375822	Identifier	opline		375648	0					
ANR	375823	CompoundStatement		27:45:724:724	375648	1					
ANR	375824	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	19771:3:608895:608941	375648	0	True				
ANR	375825	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		375648	0					
ANR	375826	Callee	ZVAL_COPY		375648	0					
ANR	375827	Identifier	ZVAL_COPY		375648	0					
ANR	375828	ArgumentList	EX_VAR ( opline -> result . var )		375648	1					
ANR	375829	Argument	EX_VAR ( opline -> result . var )		375648	0					
ANR	375830	CallExpression	EX_VAR ( opline -> result . var )		375648	0					
ANR	375831	Callee	EX_VAR		375648	0					
ANR	375832	Identifier	EX_VAR		375648	0					
ANR	375833	ArgumentList	opline -> result . var		375648	1					
ANR	375834	Argument	opline -> result . var		375648	0					
ANR	375835	MemberAccess	opline -> result . var		375648	0					
ANR	375836	PtrMemberAccess	opline -> result		375648	0					
ANR	375837	Identifier	opline		375648	0					
ANR	375838	Identifier	result		375648	1					
ANR	375839	Identifier	var		375648	1					
ANR	375840	Argument	var_ptr		375648	1					
ANR	375841	Identifier	var_ptr		375648	0					
ANR	375842	IfStatement	if ( UNEXPECTED ( free_op1 ) )		375648	8					
ANR	375843	Condition	UNEXPECTED ( free_op1 )	19775:5:608956:608975	375648	0	True				
ANR	375844	CallExpression	UNEXPECTED ( free_op1 )		375648	0					
ANR	375845	Callee	UNEXPECTED		375648	0					
ANR	375846	Identifier	UNEXPECTED		375648	0					
ANR	375847	ArgumentList	free_op1		375648	1					
ANR	375848	Argument	free_op1		375648	0					
ANR	375849	Identifier	free_op1		375648	0					
ANR	375850	CompoundStatement		32:27:812:812	375648	1					
ANR	375851	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	19775:28:608979:609007	375648	0	True				
ANR	375852	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		375648	0					
ANR	375853	Callee	zval_ptr_dtor_nogc		375648	0					
ANR	375854	Identifier	zval_ptr_dtor_nogc		375648	0					
ANR	375855	ArgumentList	free_op1		375648	1					
ANR	375856	Argument	free_op1		375648	0					
ANR	375857	Identifier	free_op1		375648	0					
ANR	375858	ExpressionStatement		19775:58:609009:609009	375648	9	True				
ANR	375859	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	19776:1:609012:609049	375648	10	True				
ANR	375860	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		375648	0					
ANR	375861	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		375648	0					
ANR	375862	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		375648	0					
ANR	375863	ArgumentList			375648	1					
ANR	375864	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		375648	1					
ANR	375865	Identifier	zend_binary_assign_op_helper_SPEC_VAR_CV		375648	2					
ANR	375866	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		375648	3					
ANR	375867	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	19743:86:608111:608162	375648	0	True				
ANR	375868	ParameterType	binary_op_type binary_op		375648	0					
ANR	375869	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		375648	1					
ANR	375870	CFGEntryNode	ENTRY		375648		True				
ANR	375871	CFGExitNode	EXIT		375648		True				
ANR	375872	Symbol	opline -> op1		375648						
ANR	375873	Symbol	opline -> op2		375648						
ANR	375874	Symbol	opline -> op2 . var		375648						
ANR	375875	Symbol	NULL		375648						
ANR	375876	Symbol	_get_zval_ptr_cv_BP_VAR_R		375648						
ANR	375877	Symbol	_get_zval_ptr_ptr_var		375648						
ANR	375878	Symbol	& EG		375648						
ANR	375879	Symbol	free_op1		375648						
ANR	375880	Symbol	var_ptr		375648						
ANR	375881	Symbol	execute_data		375648						
ANR	375882	Symbol	opline -> result		375648						
ANR	375883	Symbol	UNEXPECTED		375648						
ANR	375884	Symbol	RETURN_VALUE_USED		375648						
ANR	375885	Symbol	opline		375648						
ANR	375886	Symbol	* opline		375648						
ANR	375887	Symbol	error_zval		375648						
ANR	375888	Symbol	EX_VAR		375648						
ANR	375889	Symbol	opline -> op1 . var		375648						
ANR	375890	Symbol	value		375648						
ANR	375891	Symbol	IS_VAR		375648						
ANR	375892	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		375648						
ANR	375893	Symbol	opline -> result . var		375648						
ANR	375894	Symbol	& free_op1		375648						
ANR	375895	Function	zend_pre_incdec_property_helper_SPEC_VAR_CV	20019:0:619547:621672							
ANR	375896	FunctionDef	zend_pre_incdec_property_helper_SPEC_VAR_CV (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		375895	0					
ANR	375897	CompoundStatement		20020:0:619673:621672	375895	0					
ANR	375898	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	20021:1:619676:619709	375895	0	True				
ANR	375899	IdentifierDecl	free_op1		375895	0					
ANR	375900	IdentifierDeclType	USE_OPLINE zend_free_op		375895	0					
ANR	375901	Identifier	free_op1		375895	1					
ANR	375902	IdentifierDeclStatement	zval * object ;	20023:1:619712:619724	375895	1	True				
ANR	375903	IdentifierDecl	* object		375895	0					
ANR	375904	IdentifierDeclType	zval *		375895	0					
ANR	375905	Identifier	object		375895	1					
ANR	375906	IdentifierDeclStatement	zval * property ;	20024:1:619727:619741	375895	2	True				
ANR	375907	IdentifierDecl	* property		375895	0					
ANR	375908	IdentifierDeclType	zval *		375895	0					
ANR	375909	Identifier	property		375895	1					
ANR	375910	IdentifierDeclStatement	zval * zptr ;	20025:1:619744:619754	375895	3	True				
ANR	375911	IdentifierDecl	* zptr		375895	0					
ANR	375912	IdentifierDeclType	zval *		375895	0					
ANR	375913	Identifier	zptr		375895	1					
ANR	375914	ExpressionStatement	SAVE_OPLINE ( )	20027:1:619758:619771	375895	4	True				
ANR	375915	CallExpression	SAVE_OPLINE ( )		375895	0					
ANR	375916	Callee	SAVE_OPLINE		375895	0					
ANR	375917	Identifier	SAVE_OPLINE		375895	0					
ANR	375918	ArgumentList			375895	1					
ANR	375919	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	20028:1:619774:619846	375895	5	True				
ANR	375920	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		375895	0		=			
ANR	375921	Identifier	object		375895	0					
ANR	375922	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		375895	1					
ANR	375923	Callee	_get_zval_ptr_ptr_var		375895	0					
ANR	375924	Identifier	_get_zval_ptr_ptr_var		375895	0					
ANR	375925	ArgumentList	opline -> op1 . var		375895	1					
ANR	375926	Argument	opline -> op1 . var		375895	0					
ANR	375927	MemberAccess	opline -> op1 . var		375895	0					
ANR	375928	PtrMemberAccess	opline -> op1		375895	0					
ANR	375929	Identifier	opline		375895	0					
ANR	375930	Identifier	op1		375895	1					
ANR	375931	Identifier	var		375895	1					
ANR	375932	Argument	execute_data		375895	1					
ANR	375933	Identifier	execute_data		375895	0					
ANR	375934	Argument	& free_op1		375895	2					
ANR	375935	UnaryOperationExpression	& free_op1		375895	0					
ANR	375936	UnaryOperator	&		375895	0					
ANR	375937	Identifier	free_op1		375895	1					
ANR	375938	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		375895	6					
ANR	375939	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	20030:5:619854:619911	375895	0	True				
ANR	375940	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		375895	0		&&			
ANR	375941	EqualityExpression	IS_VAR == IS_UNUSED		375895	0		==			
ANR	375942	Identifier	IS_VAR		375895	0					
ANR	375943	Identifier	IS_UNUSED		375895	1					
ANR	375944	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		375895	1					
ANR	375945	Callee	UNEXPECTED		375895	0					
ANR	375946	Identifier	UNEXPECTED		375895	0					
ANR	375947	ArgumentList	Z_OBJ_P ( object ) == NULL		375895	1					
ANR	375948	Argument	Z_OBJ_P ( object ) == NULL		375895	0					
ANR	375949	EqualityExpression	Z_OBJ_P ( object ) == NULL		375895	0		==			
ANR	375950	CallExpression	Z_OBJ_P ( object )		375895	0					
ANR	375951	Callee	Z_OBJ_P		375895	0					
ANR	375952	Identifier	Z_OBJ_P		375895	0					
ANR	375953	ArgumentList	object		375895	1					
ANR	375954	Argument	object		375895	0					
ANR	375955	Identifier	object		375895	0					
ANR	375956	Identifier	NULL		375895	1					
ANR	375957	CompoundStatement		11:65:240:240	375895	1					
ANR	375958	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	20031:2:619918:619982	375895	0	True				
ANR	375959	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		375895	0					
ANR	375960	Callee	zend_throw_error		375895	0					
ANR	375961	Identifier	zend_throw_error		375895	0					
ANR	375962	ArgumentList	NULL		375895	1					
ANR	375963	Argument	NULL		375895	0					
ANR	375964	Identifier	NULL		375895	0					
ANR	375965	Argument	"""Using $this when not in object context"""		375895	1					
ANR	375966	PrimaryExpression	"""Using $this when not in object context"""		375895	0					
ANR	375967	ExpressionStatement	HANDLE_EXCEPTION ( )	20033:2:619987:620005	375895	1	True				
ANR	375968	CallExpression	HANDLE_EXCEPTION ( )		375895	0					
ANR	375969	Callee	HANDLE_EXCEPTION		375895	0					
ANR	375970	Identifier	HANDLE_EXCEPTION		375895	0					
ANR	375971	ArgumentList			375895	1					
ANR	375972	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	20036:1:620012:620079	375895	7	True				
ANR	375973	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		375895	0		=			
ANR	375974	Identifier	property		375895	0					
ANR	375975	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		375895	1					
ANR	375976	Callee	_get_zval_ptr_cv_BP_VAR_R		375895	0					
ANR	375977	Identifier	_get_zval_ptr_cv_BP_VAR_R		375895	0					
ANR	375978	ArgumentList	execute_data		375895	1					
ANR	375979	Argument	execute_data		375895	0					
ANR	375980	Identifier	execute_data		375895	0					
ANR	375981	Argument	opline -> op2 . var		375895	1					
ANR	375982	MemberAccess	opline -> op2 . var		375895	0					
ANR	375983	PtrMemberAccess	opline -> op2		375895	0					
ANR	375984	Identifier	opline		375895	0					
ANR	375985	Identifier	op2		375895	1					
ANR	375986	Identifier	var		375895	1					
ANR	375987	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		375895	8					
ANR	375988	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	20038:5:620087:620132	375895	0	True				
ANR	375989	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		375895	0		&&			
ANR	375990	EqualityExpression	IS_VAR == IS_VAR		375895	0		==			
ANR	375991	Identifier	IS_VAR		375895	0					
ANR	375992	Identifier	IS_VAR		375895	1					
ANR	375993	CallExpression	UNEXPECTED ( object == NULL )		375895	1					
ANR	375994	Callee	UNEXPECTED		375895	0					
ANR	375995	Identifier	UNEXPECTED		375895	0					
ANR	375996	ArgumentList	object == NULL		375895	1					
ANR	375997	Argument	object == NULL		375895	0					
ANR	375998	EqualityExpression	object == NULL		375895	0		==			
ANR	375999	Identifier	object		375895	0					
ANR	376000	Identifier	NULL		375895	1					
ANR	376001	CompoundStatement		19:53:461:461	375895	1					
ANR	376002	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	20039:2:620139:620229	375895	0	True				
ANR	376003	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		375895	0					
ANR	376004	Callee	zend_throw_error		375895	0					
ANR	376005	Identifier	zend_throw_error		375895	0					
ANR	376006	ArgumentList	NULL		375895	1					
ANR	376007	Argument	NULL		375895	0					
ANR	376008	Identifier	NULL		375895	0					
ANR	376009	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		375895	1					
ANR	376010	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		375895	0					
ANR	376011	ExpressionStatement	HANDLE_EXCEPTION ( )	20041:2:620234:620252	375895	1	True				
ANR	376012	CallExpression	HANDLE_EXCEPTION ( )		375895	0					
ANR	376013	Callee	HANDLE_EXCEPTION		375895	0					
ANR	376014	Identifier	HANDLE_EXCEPTION		375895	0					
ANR	376015	ArgumentList			375895	1					
ANR	376016	DoStatement	do		375895	9					
ANR	376017	CompoundStatement		25:4:588:588	375895	0					
ANR	376018	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		375895	0					
ANR	376019	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	20045:6:620270:620333	375895	0	True				
ANR	376020	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		375895	0		&&			
ANR	376021	EqualityExpression	IS_VAR != IS_UNUSED		375895	0		!=			
ANR	376022	Identifier	IS_VAR		375895	0					
ANR	376023	Identifier	IS_UNUSED		375895	1					
ANR	376024	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		375895	1					
ANR	376025	Callee	UNEXPECTED		375895	0					
ANR	376026	Identifier	UNEXPECTED		375895	0					
ANR	376027	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		375895	1					
ANR	376028	Argument	Z_TYPE_P ( object ) != IS_OBJECT		375895	0					
ANR	376029	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		375895	0		!=			
ANR	376030	CallExpression	Z_TYPE_P ( object )		375895	0					
ANR	376031	Callee	Z_TYPE_P		375895	0					
ANR	376032	Identifier	Z_TYPE_P		375895	0					
ANR	376033	ArgumentList	object		375895	1					
ANR	376034	Argument	object		375895	0					
ANR	376035	Identifier	object		375895	0					
ANR	376036	Identifier	IS_OBJECT		375895	1					
ANR	376037	CompoundStatement		26:72:662:662	375895	1					
ANR	376038	ExpressionStatement	ZVAL_DEREF ( object )	20046:3:620341:620359	375895	0	True				
ANR	376039	CallExpression	ZVAL_DEREF ( object )		375895	0					
ANR	376040	Callee	ZVAL_DEREF		375895	0					
ANR	376041	Identifier	ZVAL_DEREF		375895	0					
ANR	376042	ArgumentList	object		375895	1					
ANR	376043	Argument	object		375895	0					
ANR	376044	Identifier	object		375895	0					
ANR	376045	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		375895	1					
ANR	376046	Condition	UNEXPECTED ( ! make_real_object ( object ) )	20047:7:620368:620404	375895	0	True				
ANR	376047	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		375895	0					
ANR	376048	Callee	UNEXPECTED		375895	0					
ANR	376049	Identifier	UNEXPECTED		375895	0					
ANR	376050	ArgumentList	! make_real_object ( object )		375895	1					
ANR	376051	Argument	! make_real_object ( object )		375895	0					
ANR	376052	UnaryOperationExpression	! make_real_object ( object )		375895	0					
ANR	376053	UnaryOperator	!		375895	0					
ANR	376054	CallExpression	make_real_object ( object )		375895	1					
ANR	376055	Callee	make_real_object		375895	0					
ANR	376056	Identifier	make_real_object		375895	0					
ANR	376057	ArgumentList	object		375895	1					
ANR	376058	Argument	object		375895	0					
ANR	376059	Identifier	object		375895	0					
ANR	376060	CompoundStatement		28:46:733:733	375895	1					
ANR	376061	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	20048:4:620413:620491	375895	0	True				
ANR	376062	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		375895	0					
ANR	376063	Callee	zend_error		375895	0					
ANR	376064	Identifier	zend_error		375895	0					
ANR	376065	ArgumentList	E_WARNING		375895	1					
ANR	376066	Argument	E_WARNING		375895	0					
ANR	376067	Identifier	E_WARNING		375895	0					
ANR	376068	Argument	"""Attempt to increment/decrement property of non-object"""		375895	1					
ANR	376069	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		375895	0					
ANR	376070	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		375895	1					
ANR	376071	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	20049:8:620501:620537	375895	0	True				
ANR	376072	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375895	0					
ANR	376073	Callee	UNEXPECTED		375895	0					
ANR	376074	Identifier	UNEXPECTED		375895	0					
ANR	376075	ArgumentList	RETURN_VALUE_USED ( opline )		375895	1					
ANR	376076	Argument	RETURN_VALUE_USED ( opline )		375895	0					
ANR	376077	CallExpression	RETURN_VALUE_USED ( opline )		375895	0					
ANR	376078	Callee	RETURN_VALUE_USED		375895	0					
ANR	376079	Identifier	RETURN_VALUE_USED		375895	0					
ANR	376080	ArgumentList	opline		375895	1					
ANR	376081	Argument	opline		375895	0					
ANR	376082	Identifier	opline		375895	0					
ANR	376083	CompoundStatement		30:47:866:866	375895	1					
ANR	376084	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	20050:5:620547:620584	375895	0	True				
ANR	376085	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		375895	0					
ANR	376086	Callee	ZVAL_NULL		375895	0					
ANR	376087	Identifier	ZVAL_NULL		375895	0					
ANR	376088	ArgumentList	EX_VAR ( opline -> result . var )		375895	1					
ANR	376089	Argument	EX_VAR ( opline -> result . var )		375895	0					
ANR	376090	CallExpression	EX_VAR ( opline -> result . var )		375895	0					
ANR	376091	Callee	EX_VAR		375895	0					
ANR	376092	Identifier	EX_VAR		375895	0					
ANR	376093	ArgumentList	opline -> result . var		375895	1					
ANR	376094	Argument	opline -> result . var		375895	0					
ANR	376095	MemberAccess	opline -> result . var		375895	0					
ANR	376096	PtrMemberAccess	opline -> result		375895	0					
ANR	376097	Identifier	opline		375895	0					
ANR	376098	Identifier	result		375895	1					
ANR	376099	Identifier	var		375895	1					
ANR	376100	BreakStatement	break ;	20052:4:620596:620601	375895	2	True				
ANR	376101	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		375895	1					
ANR	376102	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	20058:6:620675:620896	375895	0	True				
ANR	376103	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		375895	0		&&			
ANR	376104	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		375895	0					
ANR	376105	Callee	EXPECTED		375895	0					
ANR	376106	Identifier	EXPECTED		375895	0					
ANR	376107	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		375895	1					
ANR	376108	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		375895	0					
ANR	376109	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		375895	0					
ANR	376110	CallExpression	Z_OBJ_HT_P ( object )		375895	0					
ANR	376111	Callee	Z_OBJ_HT_P		375895	0					
ANR	376112	Identifier	Z_OBJ_HT_P		375895	0					
ANR	376113	ArgumentList	object		375895	1					
ANR	376114	Argument	object		375895	0					
ANR	376115	Identifier	object		375895	0					
ANR	376116	Identifier	get_property_ptr_ptr		375895	1					
ANR	376117	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		375895	1					
ANR	376118	Callee	EXPECTED		375895	0					
ANR	376119	Identifier	EXPECTED		375895	0					
ANR	376120	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		375895	1					
ANR	376121	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		375895	0					
ANR	376122	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		375895	0		!=			
ANR	376123	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		375895	0		=			
ANR	376124	Identifier	zptr		375895	0					
ANR	376125	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		375895	1					
ANR	376126	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		375895	0					
ANR	376127	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		375895	0					
ANR	376128	CallExpression	Z_OBJ_HT_P ( object )		375895	0					
ANR	376129	Callee	Z_OBJ_HT_P		375895	0					
ANR	376130	Identifier	Z_OBJ_HT_P		375895	0					
ANR	376131	ArgumentList	object		375895	1					
ANR	376132	Argument	object		375895	0					
ANR	376133	Identifier	object		375895	0					
ANR	376134	Identifier	get_property_ptr_ptr		375895	1					
ANR	376135	ArgumentList	object		375895	1					
ANR	376136	Argument	object		375895	0					
ANR	376137	Identifier	object		375895	0					
ANR	376138	Argument	property		375895	1					
ANR	376139	Identifier	property		375895	0					
ANR	376140	Argument	BP_VAR_RW		375895	2					
ANR	376141	Identifier	BP_VAR_RW		375895	0					
ANR	376142	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		375895	3					
ANR	376143	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		375895	0					
ANR	376144	Condition	IS_CV == IS_CONST		375895	0					
ANR	376145	EqualityExpression	IS_CV == IS_CONST		375895	0		==			
ANR	376146	Identifier	IS_CV		375895	0					
ANR	376147	Identifier	IS_CONST		375895	1					
ANR	376148	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		375895	1					
ANR	376149	Callee	CACHE_ADDR		375895	0					
ANR	376150	Identifier	CACHE_ADDR		375895	0					
ANR	376151	ArgumentList	Z_CACHE_SLOT_P ( property )		375895	1					
ANR	376152	Argument	Z_CACHE_SLOT_P ( property )		375895	0					
ANR	376153	CallExpression	Z_CACHE_SLOT_P ( property )		375895	0					
ANR	376154	Callee	Z_CACHE_SLOT_P		375895	0					
ANR	376155	Identifier	Z_CACHE_SLOT_P		375895	0					
ANR	376156	ArgumentList	property		375895	1					
ANR	376157	Argument	property		375895	0					
ANR	376158	Identifier	property		375895	0					
ANR	376159	Identifier	NULL		375895	2					
ANR	376160	Identifier	NULL		375895	1					
ANR	376161	CompoundStatement		40:173:1225:1225	375895	1					
ANR	376162	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		375895	0					
ANR	376163	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	20061:7:620909:620943	375895	0	True				
ANR	376164	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		375895	0					
ANR	376165	Callee	EXPECTED		375895	0					
ANR	376166	Identifier	EXPECTED		375895	0					
ANR	376167	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		375895	1					
ANR	376168	Argument	Z_TYPE_P ( zptr ) == IS_LONG		375895	0					
ANR	376169	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		375895	0		==			
ANR	376170	CallExpression	Z_TYPE_P ( zptr )		375895	0					
ANR	376171	Callee	Z_TYPE_P		375895	0					
ANR	376172	Identifier	Z_TYPE_P		375895	0					
ANR	376173	ArgumentList	zptr		375895	1					
ANR	376174	Argument	zptr		375895	0					
ANR	376175	Identifier	zptr		375895	0					
ANR	376176	Identifier	IS_LONG		375895	1					
ANR	376177	CompoundStatement		42:44:1272:1272	375895	1					
ANR	376178	IfStatement	if ( inc )		375895	0					
ANR	376179	Condition	inc	20062:8:620956:620958	375895	0	True				
ANR	376180	Identifier	inc		375895	0					
ANR	376181	CompoundStatement		43:13:1287:1287	375895	1					
ANR	376182	ExpressionStatement	fast_long_increment_function ( zptr )	20063:5:620968:621002	375895	0	True				
ANR	376183	CallExpression	fast_long_increment_function ( zptr )		375895	0					
ANR	376184	Callee	fast_long_increment_function		375895	0					
ANR	376185	Identifier	fast_long_increment_function		375895	0					
ANR	376186	ArgumentList	zptr		375895	1					
ANR	376187	Argument	zptr		375895	0					
ANR	376188	Identifier	zptr		375895	0					
ANR	376189	ElseStatement	else		375895	0					
ANR	376190	CompoundStatement		45:11:1341:1341	375895	0					
ANR	376191	ExpressionStatement	fast_long_decrement_function ( zptr )	20065:5:621022:621056	375895	0	True				
ANR	376192	CallExpression	fast_long_decrement_function ( zptr )		375895	0					
ANR	376193	Callee	fast_long_decrement_function		375895	0					
ANR	376194	Identifier	fast_long_decrement_function		375895	0					
ANR	376195	ArgumentList	zptr		375895	1					
ANR	376196	Argument	zptr		375895	0					
ANR	376197	Identifier	zptr		375895	0					
ANR	376198	ElseStatement	else		375895	0					
ANR	376199	CompoundStatement		48:10:1400:1400	375895	0					
ANR	376200	ExpressionStatement	ZVAL_DEREF ( zptr )	20068:4:621080:621096	375895	0	True				
ANR	376201	CallExpression	ZVAL_DEREF ( zptr )		375895	0					
ANR	376202	Callee	ZVAL_DEREF		375895	0					
ANR	376203	Identifier	ZVAL_DEREF		375895	0					
ANR	376204	ArgumentList	zptr		375895	1					
ANR	376205	Argument	zptr		375895	0					
ANR	376206	Identifier	zptr		375895	0					
ANR	376207	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	20069:4:621102:621127	375895	1	True				
ANR	376208	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		375895	0					
ANR	376209	Callee	SEPARATE_ZVAL_NOREF		375895	0					
ANR	376210	Identifier	SEPARATE_ZVAL_NOREF		375895	0					
ANR	376211	ArgumentList	zptr		375895	1					
ANR	376212	Argument	zptr		375895	0					
ANR	376213	Identifier	zptr		375895	0					
ANR	376214	IfStatement	if ( inc )		375895	2					
ANR	376215	Condition	inc	20071:8:621138:621140	375895	0	True				
ANR	376216	Identifier	inc		375895	0					
ANR	376217	CompoundStatement		52:13:1469:1469	375895	1					
ANR	376218	ExpressionStatement	increment_function ( zptr )	20072:5:621150:621174	375895	0	True				
ANR	376219	CallExpression	increment_function ( zptr )		375895	0					
ANR	376220	Callee	increment_function		375895	0					
ANR	376221	Identifier	increment_function		375895	0					
ANR	376222	ArgumentList	zptr		375895	1					
ANR	376223	Argument	zptr		375895	0					
ANR	376224	Identifier	zptr		375895	0					
ANR	376225	ElseStatement	else		375895	0					
ANR	376226	CompoundStatement		54:11:1513:1513	375895	0					
ANR	376227	ExpressionStatement	decrement_function ( zptr )	20074:5:621194:621218	375895	0	True				
ANR	376228	CallExpression	decrement_function ( zptr )		375895	0					
ANR	376229	Callee	decrement_function		375895	0					
ANR	376230	Identifier	decrement_function		375895	0					
ANR	376231	ArgumentList	zptr		375895	1					
ANR	376232	Argument	zptr		375895	0					
ANR	376233	Identifier	zptr		375895	0					
ANR	376234	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		375895	1					
ANR	376235	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	20077:7:621238:621274	375895	0	True				
ANR	376236	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375895	0					
ANR	376237	Callee	UNEXPECTED		375895	0					
ANR	376238	Identifier	UNEXPECTED		375895	0					
ANR	376239	ArgumentList	RETURN_VALUE_USED ( opline )		375895	1					
ANR	376240	Argument	RETURN_VALUE_USED ( opline )		375895	0					
ANR	376241	CallExpression	RETURN_VALUE_USED ( opline )		375895	0					
ANR	376242	Callee	RETURN_VALUE_USED		375895	0					
ANR	376243	Identifier	RETURN_VALUE_USED		375895	0					
ANR	376244	ArgumentList	opline		375895	1					
ANR	376245	Argument	opline		375895	0					
ANR	376246	Identifier	opline		375895	0					
ANR	376247	CompoundStatement		58:46:1603:1603	375895	1					
ANR	376248	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	20078:4:621283:621326	375895	0	True				
ANR	376249	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		375895	0					
ANR	376250	Callee	ZVAL_COPY		375895	0					
ANR	376251	Identifier	ZVAL_COPY		375895	0					
ANR	376252	ArgumentList	EX_VAR ( opline -> result . var )		375895	1					
ANR	376253	Argument	EX_VAR ( opline -> result . var )		375895	0					
ANR	376254	CallExpression	EX_VAR ( opline -> result . var )		375895	0					
ANR	376255	Callee	EX_VAR		375895	0					
ANR	376256	Identifier	EX_VAR		375895	0					
ANR	376257	ArgumentList	opline -> result . var		375895	1					
ANR	376258	Argument	opline -> result . var		375895	0					
ANR	376259	MemberAccess	opline -> result . var		375895	0					
ANR	376260	PtrMemberAccess	opline -> result		375895	0					
ANR	376261	Identifier	opline		375895	0					
ANR	376262	Identifier	result		375895	1					
ANR	376263	Identifier	var		375895	1					
ANR	376264	Argument	zptr		375895	1					
ANR	376265	Identifier	zptr		375895	0					
ANR	376266	ElseStatement	else		375895	0					
ANR	376267	CompoundStatement		61:9:1668:1668	375895	0					
ANR	376268	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	20081:3:621347:621551	375895	0	True				
ANR	376269	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		375895	0					
ANR	376270	Callee	zend_pre_incdec_overloaded_property		375895	0					
ANR	376271	Identifier	zend_pre_incdec_overloaded_property		375895	0					
ANR	376272	ArgumentList	object		375895	1					
ANR	376273	Argument	object		375895	0					
ANR	376274	Identifier	object		375895	0					
ANR	376275	Argument	property		375895	1					
ANR	376276	Identifier	property		375895	0					
ANR	376277	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		375895	2					
ANR	376278	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		375895	0					
ANR	376279	Condition	IS_CV == IS_CONST		375895	0					
ANR	376280	EqualityExpression	IS_CV == IS_CONST		375895	0		==			
ANR	376281	Identifier	IS_CV		375895	0					
ANR	376282	Identifier	IS_CONST		375895	1					
ANR	376283	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		375895	1					
ANR	376284	Callee	CACHE_ADDR		375895	0					
ANR	376285	Identifier	CACHE_ADDR		375895	0					
ANR	376286	ArgumentList	Z_CACHE_SLOT_P ( property )		375895	1					
ANR	376287	Argument	Z_CACHE_SLOT_P ( property )		375895	0					
ANR	376288	CallExpression	Z_CACHE_SLOT_P ( property )		375895	0					
ANR	376289	Callee	Z_CACHE_SLOT_P		375895	0					
ANR	376290	Identifier	Z_CACHE_SLOT_P		375895	0					
ANR	376291	ArgumentList	property		375895	1					
ANR	376292	Argument	property		375895	0					
ANR	376293	Identifier	property		375895	0					
ANR	376294	Identifier	NULL		375895	2					
ANR	376295	Argument	inc		375895	3					
ANR	376296	Identifier	inc		375895	0					
ANR	376297	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		375895	4					
ANR	376298	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		375895	0					
ANR	376299	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375895	0					
ANR	376300	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		375895	0					
ANR	376301	Callee	UNEXPECTED		375895	0					
ANR	376302	Identifier	UNEXPECTED		375895	0					
ANR	376303	ArgumentList	RETURN_VALUE_USED ( opline )		375895	1					
ANR	376304	Argument	RETURN_VALUE_USED ( opline )		375895	0					
ANR	376305	CallExpression	RETURN_VALUE_USED ( opline )		375895	0					
ANR	376306	Callee	RETURN_VALUE_USED		375895	0					
ANR	376307	Identifier	RETURN_VALUE_USED		375895	0					
ANR	376308	ArgumentList	opline		375895	1					
ANR	376309	Argument	opline		375895	0					
ANR	376310	Identifier	opline		375895	0					
ANR	376311	CallExpression	EX_VAR ( opline -> result . var )		375895	1					
ANR	376312	Callee	EX_VAR		375895	0					
ANR	376313	Identifier	EX_VAR		375895	0					
ANR	376314	ArgumentList	opline -> result . var		375895	1					
ANR	376315	Argument	opline -> result . var		375895	0					
ANR	376316	MemberAccess	opline -> result . var		375895	0					
ANR	376317	PtrMemberAccess	opline -> result		375895	0					
ANR	376318	Identifier	opline		375895	0					
ANR	376319	Identifier	result		375895	1					
ANR	376320	Identifier	var		375895	1					
ANR	376321	Identifier	NULL		375895	2					
ANR	376322	Condition	0	20083:10:621567:621567	375895	1	True				
ANR	376323	PrimaryExpression	0		375895	0					
ANR	376324	IfStatement	if ( UNEXPECTED ( free_op1 ) )		375895	10					
ANR	376325	Condition	UNEXPECTED ( free_op1 )	20085:5:621577:621596	375895	0	True				
ANR	376326	CallExpression	UNEXPECTED ( free_op1 )		375895	0					
ANR	376327	Callee	UNEXPECTED		375895	0					
ANR	376328	Identifier	UNEXPECTED		375895	0					
ANR	376329	ArgumentList	free_op1		375895	1					
ANR	376330	Argument	free_op1		375895	0					
ANR	376331	Identifier	free_op1		375895	0					
ANR	376332	CompoundStatement		66:27:1925:1925	375895	1					
ANR	376333	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	20085:28:621600:621628	375895	0	True				
ANR	376334	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		375895	0					
ANR	376335	Callee	zval_ptr_dtor_nogc		375895	0					
ANR	376336	Identifier	zval_ptr_dtor_nogc		375895	0					
ANR	376337	ArgumentList	free_op1		375895	1					
ANR	376338	Argument	free_op1		375895	0					
ANR	376339	Identifier	free_op1		375895	0					
ANR	376340	ExpressionStatement		20085:58:621630:621630	375895	11	True				
ANR	376341	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	20086:1:621633:621670	375895	12	True				
ANR	376342	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		375895	0					
ANR	376343	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		375895	0					
ANR	376344	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		375895	0					
ANR	376345	ArgumentList			375895	1					
ANR	376346	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		375895	1					
ANR	376347	Identifier	zend_pre_incdec_property_helper_SPEC_VAR_CV		375895	2					
ANR	376348	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		375895	3					
ANR	376349	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	20019:89:619636:619670	375895	0	True				
ANR	376350	ParameterType	int inc		375895	0					
ANR	376351	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		375895	1					
ANR	376352	CFGEntryNode	ENTRY		375895		True				
ANR	376353	CFGExitNode	EXIT		375895		True				
ANR	376354	Symbol	opline -> op1		375895						
ANR	376355	Symbol	opline -> op2		375895						
ANR	376356	Symbol	opline -> op2 . var		375895						
ANR	376357	Symbol	IS_CV		375895						
ANR	376358	Symbol	Z_OBJ_P		375895						
ANR	376359	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		375895						
ANR	376360	Symbol	_get_zval_ptr_ptr_var		375895						
ANR	376361	Symbol	zptr		375895						
ANR	376362	Symbol	free_op1		375895						
ANR	376363	Symbol	execute_data		375895						
ANR	376364	Symbol	opline -> result		375895						
ANR	376365	Symbol	UNEXPECTED		375895						
ANR	376366	Symbol	E_WARNING		375895						
ANR	376367	Symbol	make_real_object		375895						
ANR	376368	Symbol	RETURN_VALUE_USED		375895						
ANR	376369	Symbol	opline		375895						
ANR	376370	Symbol	IS_LONG		375895						
ANR	376371	Symbol	property		375895						
ANR	376372	Symbol	opline -> op1 . var		375895						
ANR	376373	Symbol	& free_op1		375895						
ANR	376374	Symbol	inc		375895						
ANR	376375	Symbol	BP_VAR_RW		375895						
ANR	376376	Symbol	IS_CONST		375895						
ANR	376377	Symbol	NULL		375895						
ANR	376378	Symbol	Z_CACHE_SLOT_P		375895						
ANR	376379	Symbol	_get_zval_ptr_cv_BP_VAR_R		375895						
ANR	376380	Symbol	Z_TYPE_P		375895						
ANR	376381	Symbol	* Z_OBJ_HT_P		375895						
ANR	376382	Symbol	CACHE_ADDR		375895						
ANR	376383	Symbol	* opline		375895						
ANR	376384	Symbol	Z_OBJ_HT_P		375895						
ANR	376385	Symbol	EX_VAR		375895						
ANR	376386	Symbol	IS_OBJECT		375895						
ANR	376387	Symbol	IS_VAR		375895						
ANR	376388	Symbol	EXPECTED		375895						
ANR	376389	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		375895						
ANR	376390	Symbol	opline -> result . var		375895						
ANR	376391	Symbol	object		375895						
ANR	376392	Symbol	IS_UNUSED		375895						
ANR	376393	Function	zend_post_incdec_property_helper_SPEC_VAR_CV	20099:0:622111:624139							
ANR	376394	FunctionDef	zend_post_incdec_property_helper_SPEC_VAR_CV (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		376393	0					
ANR	376395	CompoundStatement		20100:0:622238:624139	376393	0					
ANR	376396	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	20101:1:622241:622274	376393	0	True				
ANR	376397	IdentifierDecl	free_op1		376393	0					
ANR	376398	IdentifierDeclType	USE_OPLINE zend_free_op		376393	0					
ANR	376399	Identifier	free_op1		376393	1					
ANR	376400	IdentifierDeclStatement	zval * object ;	20103:1:622277:622289	376393	1	True				
ANR	376401	IdentifierDecl	* object		376393	0					
ANR	376402	IdentifierDeclType	zval *		376393	0					
ANR	376403	Identifier	object		376393	1					
ANR	376404	IdentifierDeclStatement	zval * property ;	20104:1:622292:622306	376393	2	True				
ANR	376405	IdentifierDecl	* property		376393	0					
ANR	376406	IdentifierDeclType	zval *		376393	0					
ANR	376407	Identifier	property		376393	1					
ANR	376408	IdentifierDeclStatement	zval * zptr ;	20105:1:622309:622319	376393	3	True				
ANR	376409	IdentifierDecl	* zptr		376393	0					
ANR	376410	IdentifierDeclType	zval *		376393	0					
ANR	376411	Identifier	zptr		376393	1					
ANR	376412	ExpressionStatement	SAVE_OPLINE ( )	20107:1:622323:622336	376393	4	True				
ANR	376413	CallExpression	SAVE_OPLINE ( )		376393	0					
ANR	376414	Callee	SAVE_OPLINE		376393	0					
ANR	376415	Identifier	SAVE_OPLINE		376393	0					
ANR	376416	ArgumentList			376393	1					
ANR	376417	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	20108:1:622339:622411	376393	5	True				
ANR	376418	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		376393	0		=			
ANR	376419	Identifier	object		376393	0					
ANR	376420	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		376393	1					
ANR	376421	Callee	_get_zval_ptr_ptr_var		376393	0					
ANR	376422	Identifier	_get_zval_ptr_ptr_var		376393	0					
ANR	376423	ArgumentList	opline -> op1 . var		376393	1					
ANR	376424	Argument	opline -> op1 . var		376393	0					
ANR	376425	MemberAccess	opline -> op1 . var		376393	0					
ANR	376426	PtrMemberAccess	opline -> op1		376393	0					
ANR	376427	Identifier	opline		376393	0					
ANR	376428	Identifier	op1		376393	1					
ANR	376429	Identifier	var		376393	1					
ANR	376430	Argument	execute_data		376393	1					
ANR	376431	Identifier	execute_data		376393	0					
ANR	376432	Argument	& free_op1		376393	2					
ANR	376433	UnaryOperationExpression	& free_op1		376393	0					
ANR	376434	UnaryOperator	&		376393	0					
ANR	376435	Identifier	free_op1		376393	1					
ANR	376436	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		376393	6					
ANR	376437	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	20110:5:622419:622476	376393	0	True				
ANR	376438	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		376393	0		&&			
ANR	376439	EqualityExpression	IS_VAR == IS_UNUSED		376393	0		==			
ANR	376440	Identifier	IS_VAR		376393	0					
ANR	376441	Identifier	IS_UNUSED		376393	1					
ANR	376442	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		376393	1					
ANR	376443	Callee	UNEXPECTED		376393	0					
ANR	376444	Identifier	UNEXPECTED		376393	0					
ANR	376445	ArgumentList	Z_OBJ_P ( object ) == NULL		376393	1					
ANR	376446	Argument	Z_OBJ_P ( object ) == NULL		376393	0					
ANR	376447	EqualityExpression	Z_OBJ_P ( object ) == NULL		376393	0		==			
ANR	376448	CallExpression	Z_OBJ_P ( object )		376393	0					
ANR	376449	Callee	Z_OBJ_P		376393	0					
ANR	376450	Identifier	Z_OBJ_P		376393	0					
ANR	376451	ArgumentList	object		376393	1					
ANR	376452	Argument	object		376393	0					
ANR	376453	Identifier	object		376393	0					
ANR	376454	Identifier	NULL		376393	1					
ANR	376455	CompoundStatement		11:65:240:240	376393	1					
ANR	376456	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	20111:2:622483:622547	376393	0	True				
ANR	376457	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		376393	0					
ANR	376458	Callee	zend_throw_error		376393	0					
ANR	376459	Identifier	zend_throw_error		376393	0					
ANR	376460	ArgumentList	NULL		376393	1					
ANR	376461	Argument	NULL		376393	0					
ANR	376462	Identifier	NULL		376393	0					
ANR	376463	Argument	"""Using $this when not in object context"""		376393	1					
ANR	376464	PrimaryExpression	"""Using $this when not in object context"""		376393	0					
ANR	376465	ExpressionStatement	HANDLE_EXCEPTION ( )	20113:2:622552:622570	376393	1	True				
ANR	376466	CallExpression	HANDLE_EXCEPTION ( )		376393	0					
ANR	376467	Callee	HANDLE_EXCEPTION		376393	0					
ANR	376468	Identifier	HANDLE_EXCEPTION		376393	0					
ANR	376469	ArgumentList			376393	1					
ANR	376470	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	20116:1:622577:622644	376393	7	True				
ANR	376471	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		376393	0		=			
ANR	376472	Identifier	property		376393	0					
ANR	376473	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		376393	1					
ANR	376474	Callee	_get_zval_ptr_cv_BP_VAR_R		376393	0					
ANR	376475	Identifier	_get_zval_ptr_cv_BP_VAR_R		376393	0					
ANR	376476	ArgumentList	execute_data		376393	1					
ANR	376477	Argument	execute_data		376393	0					
ANR	376478	Identifier	execute_data		376393	0					
ANR	376479	Argument	opline -> op2 . var		376393	1					
ANR	376480	MemberAccess	opline -> op2 . var		376393	0					
ANR	376481	PtrMemberAccess	opline -> op2		376393	0					
ANR	376482	Identifier	opline		376393	0					
ANR	376483	Identifier	op2		376393	1					
ANR	376484	Identifier	var		376393	1					
ANR	376485	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		376393	8					
ANR	376486	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	20118:5:622652:622697	376393	0	True				
ANR	376487	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		376393	0		&&			
ANR	376488	EqualityExpression	IS_VAR == IS_VAR		376393	0		==			
ANR	376489	Identifier	IS_VAR		376393	0					
ANR	376490	Identifier	IS_VAR		376393	1					
ANR	376491	CallExpression	UNEXPECTED ( object == NULL )		376393	1					
ANR	376492	Callee	UNEXPECTED		376393	0					
ANR	376493	Identifier	UNEXPECTED		376393	0					
ANR	376494	ArgumentList	object == NULL		376393	1					
ANR	376495	Argument	object == NULL		376393	0					
ANR	376496	EqualityExpression	object == NULL		376393	0		==			
ANR	376497	Identifier	object		376393	0					
ANR	376498	Identifier	NULL		376393	1					
ANR	376499	CompoundStatement		19:53:461:461	376393	1					
ANR	376500	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	20119:2:622704:622794	376393	0	True				
ANR	376501	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		376393	0					
ANR	376502	Callee	zend_throw_error		376393	0					
ANR	376503	Identifier	zend_throw_error		376393	0					
ANR	376504	ArgumentList	NULL		376393	1					
ANR	376505	Argument	NULL		376393	0					
ANR	376506	Identifier	NULL		376393	0					
ANR	376507	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		376393	1					
ANR	376508	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		376393	0					
ANR	376509	ExpressionStatement	HANDLE_EXCEPTION ( )	20121:2:622799:622817	376393	1	True				
ANR	376510	CallExpression	HANDLE_EXCEPTION ( )		376393	0					
ANR	376511	Callee	HANDLE_EXCEPTION		376393	0					
ANR	376512	Identifier	HANDLE_EXCEPTION		376393	0					
ANR	376513	ArgumentList			376393	1					
ANR	376514	DoStatement	do		376393	9					
ANR	376515	CompoundStatement		25:4:588:588	376393	0					
ANR	376516	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		376393	0					
ANR	376517	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	20125:6:622835:622898	376393	0	True				
ANR	376518	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		376393	0		&&			
ANR	376519	EqualityExpression	IS_VAR != IS_UNUSED		376393	0		!=			
ANR	376520	Identifier	IS_VAR		376393	0					
ANR	376521	Identifier	IS_UNUSED		376393	1					
ANR	376522	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		376393	1					
ANR	376523	Callee	UNEXPECTED		376393	0					
ANR	376524	Identifier	UNEXPECTED		376393	0					
ANR	376525	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		376393	1					
ANR	376526	Argument	Z_TYPE_P ( object ) != IS_OBJECT		376393	0					
ANR	376527	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		376393	0		!=			
ANR	376528	CallExpression	Z_TYPE_P ( object )		376393	0					
ANR	376529	Callee	Z_TYPE_P		376393	0					
ANR	376530	Identifier	Z_TYPE_P		376393	0					
ANR	376531	ArgumentList	object		376393	1					
ANR	376532	Argument	object		376393	0					
ANR	376533	Identifier	object		376393	0					
ANR	376534	Identifier	IS_OBJECT		376393	1					
ANR	376535	CompoundStatement		26:72:662:662	376393	1					
ANR	376536	ExpressionStatement	ZVAL_DEREF ( object )	20126:3:622906:622924	376393	0	True				
ANR	376537	CallExpression	ZVAL_DEREF ( object )		376393	0					
ANR	376538	Callee	ZVAL_DEREF		376393	0					
ANR	376539	Identifier	ZVAL_DEREF		376393	0					
ANR	376540	ArgumentList	object		376393	1					
ANR	376541	Argument	object		376393	0					
ANR	376542	Identifier	object		376393	0					
ANR	376543	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		376393	1					
ANR	376544	Condition	UNEXPECTED ( ! make_real_object ( object ) )	20127:7:622933:622969	376393	0	True				
ANR	376545	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		376393	0					
ANR	376546	Callee	UNEXPECTED		376393	0					
ANR	376547	Identifier	UNEXPECTED		376393	0					
ANR	376548	ArgumentList	! make_real_object ( object )		376393	1					
ANR	376549	Argument	! make_real_object ( object )		376393	0					
ANR	376550	UnaryOperationExpression	! make_real_object ( object )		376393	0					
ANR	376551	UnaryOperator	!		376393	0					
ANR	376552	CallExpression	make_real_object ( object )		376393	1					
ANR	376553	Callee	make_real_object		376393	0					
ANR	376554	Identifier	make_real_object		376393	0					
ANR	376555	ArgumentList	object		376393	1					
ANR	376556	Argument	object		376393	0					
ANR	376557	Identifier	object		376393	0					
ANR	376558	CompoundStatement		28:46:733:733	376393	1					
ANR	376559	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	20128:4:622978:623056	376393	0	True				
ANR	376560	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		376393	0					
ANR	376561	Callee	zend_error		376393	0					
ANR	376562	Identifier	zend_error		376393	0					
ANR	376563	ArgumentList	E_WARNING		376393	1					
ANR	376564	Argument	E_WARNING		376393	0					
ANR	376565	Identifier	E_WARNING		376393	0					
ANR	376566	Argument	"""Attempt to increment/decrement property of non-object"""		376393	1					
ANR	376567	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		376393	0					
ANR	376568	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	20129:4:623062:623099	376393	1	True				
ANR	376569	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		376393	0					
ANR	376570	Callee	ZVAL_NULL		376393	0					
ANR	376571	Identifier	ZVAL_NULL		376393	0					
ANR	376572	ArgumentList	EX_VAR ( opline -> result . var )		376393	1					
ANR	376573	Argument	EX_VAR ( opline -> result . var )		376393	0					
ANR	376574	CallExpression	EX_VAR ( opline -> result . var )		376393	0					
ANR	376575	Callee	EX_VAR		376393	0					
ANR	376576	Identifier	EX_VAR		376393	0					
ANR	376577	ArgumentList	opline -> result . var		376393	1					
ANR	376578	Argument	opline -> result . var		376393	0					
ANR	376579	MemberAccess	opline -> result . var		376393	0					
ANR	376580	PtrMemberAccess	opline -> result		376393	0					
ANR	376581	Identifier	opline		376393	0					
ANR	376582	Identifier	result		376393	1					
ANR	376583	Identifier	var		376393	1					
ANR	376584	BreakStatement	break ;	20130:4:623105:623110	376393	2	True				
ANR	376585	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		376393	1					
ANR	376586	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	20136:6:623184:623405	376393	0	True				
ANR	376587	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		376393	0		&&			
ANR	376588	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		376393	0					
ANR	376589	Callee	EXPECTED		376393	0					
ANR	376590	Identifier	EXPECTED		376393	0					
ANR	376591	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		376393	1					
ANR	376592	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		376393	0					
ANR	376593	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		376393	0					
ANR	376594	CallExpression	Z_OBJ_HT_P ( object )		376393	0					
ANR	376595	Callee	Z_OBJ_HT_P		376393	0					
ANR	376596	Identifier	Z_OBJ_HT_P		376393	0					
ANR	376597	ArgumentList	object		376393	1					
ANR	376598	Argument	object		376393	0					
ANR	376599	Identifier	object		376393	0					
ANR	376600	Identifier	get_property_ptr_ptr		376393	1					
ANR	376601	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		376393	1					
ANR	376602	Callee	EXPECTED		376393	0					
ANR	376603	Identifier	EXPECTED		376393	0					
ANR	376604	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		376393	1					
ANR	376605	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		376393	0					
ANR	376606	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		376393	0		!=			
ANR	376607	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		376393	0		=			
ANR	376608	Identifier	zptr		376393	0					
ANR	376609	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		376393	1					
ANR	376610	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		376393	0					
ANR	376611	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		376393	0					
ANR	376612	CallExpression	Z_OBJ_HT_P ( object )		376393	0					
ANR	376613	Callee	Z_OBJ_HT_P		376393	0					
ANR	376614	Identifier	Z_OBJ_HT_P		376393	0					
ANR	376615	ArgumentList	object		376393	1					
ANR	376616	Argument	object		376393	0					
ANR	376617	Identifier	object		376393	0					
ANR	376618	Identifier	get_property_ptr_ptr		376393	1					
ANR	376619	ArgumentList	object		376393	1					
ANR	376620	Argument	object		376393	0					
ANR	376621	Identifier	object		376393	0					
ANR	376622	Argument	property		376393	1					
ANR	376623	Identifier	property		376393	0					
ANR	376624	Argument	BP_VAR_RW		376393	2					
ANR	376625	Identifier	BP_VAR_RW		376393	0					
ANR	376626	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		376393	3					
ANR	376627	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		376393	0					
ANR	376628	Condition	IS_CV == IS_CONST		376393	0					
ANR	376629	EqualityExpression	IS_CV == IS_CONST		376393	0		==			
ANR	376630	Identifier	IS_CV		376393	0					
ANR	376631	Identifier	IS_CONST		376393	1					
ANR	376632	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		376393	1					
ANR	376633	Callee	CACHE_ADDR		376393	0					
ANR	376634	Identifier	CACHE_ADDR		376393	0					
ANR	376635	ArgumentList	Z_CACHE_SLOT_P ( property )		376393	1					
ANR	376636	Argument	Z_CACHE_SLOT_P ( property )		376393	0					
ANR	376637	CallExpression	Z_CACHE_SLOT_P ( property )		376393	0					
ANR	376638	Callee	Z_CACHE_SLOT_P		376393	0					
ANR	376639	Identifier	Z_CACHE_SLOT_P		376393	0					
ANR	376640	ArgumentList	property		376393	1					
ANR	376641	Argument	property		376393	0					
ANR	376642	Identifier	property		376393	0					
ANR	376643	Identifier	NULL		376393	2					
ANR	376644	Identifier	NULL		376393	1					
ANR	376645	CompoundStatement		38:173:1169:1169	376393	1					
ANR	376646	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		376393	0					
ANR	376647	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	20139:7:623418:623452	376393	0	True				
ANR	376648	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		376393	0					
ANR	376649	Callee	EXPECTED		376393	0					
ANR	376650	Identifier	EXPECTED		376393	0					
ANR	376651	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		376393	1					
ANR	376652	Argument	Z_TYPE_P ( zptr ) == IS_LONG		376393	0					
ANR	376653	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		376393	0		==			
ANR	376654	CallExpression	Z_TYPE_P ( zptr )		376393	0					
ANR	376655	Callee	Z_TYPE_P		376393	0					
ANR	376656	Identifier	Z_TYPE_P		376393	0					
ANR	376657	ArgumentList	zptr		376393	1					
ANR	376658	Argument	zptr		376393	0					
ANR	376659	Identifier	zptr		376393	0					
ANR	376660	Identifier	IS_LONG		376393	1					
ANR	376661	CompoundStatement		40:44:1216:1216	376393	1					
ANR	376662	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	20140:4:623461:623510	376393	0	True				
ANR	376663	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		376393	0					
ANR	376664	Callee	ZVAL_COPY_VALUE		376393	0					
ANR	376665	Identifier	ZVAL_COPY_VALUE		376393	0					
ANR	376666	ArgumentList	EX_VAR ( opline -> result . var )		376393	1					
ANR	376667	Argument	EX_VAR ( opline -> result . var )		376393	0					
ANR	376668	CallExpression	EX_VAR ( opline -> result . var )		376393	0					
ANR	376669	Callee	EX_VAR		376393	0					
ANR	376670	Identifier	EX_VAR		376393	0					
ANR	376671	ArgumentList	opline -> result . var		376393	1					
ANR	376672	Argument	opline -> result . var		376393	0					
ANR	376673	MemberAccess	opline -> result . var		376393	0					
ANR	376674	PtrMemberAccess	opline -> result		376393	0					
ANR	376675	Identifier	opline		376393	0					
ANR	376676	Identifier	result		376393	1					
ANR	376677	Identifier	var		376393	1					
ANR	376678	Argument	zptr		376393	1					
ANR	376679	Identifier	zptr		376393	0					
ANR	376680	IfStatement	if ( inc )		376393	1					
ANR	376681	Condition	inc	20141:8:623520:623522	376393	0	True				
ANR	376682	Identifier	inc		376393	0					
ANR	376683	CompoundStatement		42:13:1286:1286	376393	1					
ANR	376684	ExpressionStatement	fast_long_increment_function ( zptr )	20142:5:623532:623566	376393	0	True				
ANR	376685	CallExpression	fast_long_increment_function ( zptr )		376393	0					
ANR	376686	Callee	fast_long_increment_function		376393	0					
ANR	376687	Identifier	fast_long_increment_function		376393	0					
ANR	376688	ArgumentList	zptr		376393	1					
ANR	376689	Argument	zptr		376393	0					
ANR	376690	Identifier	zptr		376393	0					
ANR	376691	ElseStatement	else		376393	0					
ANR	376692	CompoundStatement		44:11:1340:1340	376393	0					
ANR	376693	ExpressionStatement	fast_long_decrement_function ( zptr )	20144:5:623586:623620	376393	0	True				
ANR	376694	CallExpression	fast_long_decrement_function ( zptr )		376393	0					
ANR	376695	Callee	fast_long_decrement_function		376393	0					
ANR	376696	Identifier	fast_long_decrement_function		376393	0					
ANR	376697	ArgumentList	zptr		376393	1					
ANR	376698	Argument	zptr		376393	0					
ANR	376699	Identifier	zptr		376393	0					
ANR	376700	ElseStatement	else		376393	0					
ANR	376701	CompoundStatement		47:10:1399:1399	376393	0					
ANR	376702	ExpressionStatement	ZVAL_DEREF ( zptr )	20147:4:623644:623660	376393	0	True				
ANR	376703	CallExpression	ZVAL_DEREF ( zptr )		376393	0					
ANR	376704	Callee	ZVAL_DEREF		376393	0					
ANR	376705	Identifier	ZVAL_DEREF		376393	0					
ANR	376706	ArgumentList	zptr		376393	1					
ANR	376707	Argument	zptr		376393	0					
ANR	376708	Identifier	zptr		376393	0					
ANR	376709	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	20148:4:623666:623715	376393	1	True				
ANR	376710	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		376393	0					
ANR	376711	Callee	ZVAL_COPY_VALUE		376393	0					
ANR	376712	Identifier	ZVAL_COPY_VALUE		376393	0					
ANR	376713	ArgumentList	EX_VAR ( opline -> result . var )		376393	1					
ANR	376714	Argument	EX_VAR ( opline -> result . var )		376393	0					
ANR	376715	CallExpression	EX_VAR ( opline -> result . var )		376393	0					
ANR	376716	Callee	EX_VAR		376393	0					
ANR	376717	Identifier	EX_VAR		376393	0					
ANR	376718	ArgumentList	opline -> result . var		376393	1					
ANR	376719	Argument	opline -> result . var		376393	0					
ANR	376720	MemberAccess	opline -> result . var		376393	0					
ANR	376721	PtrMemberAccess	opline -> result		376393	0					
ANR	376722	Identifier	opline		376393	0					
ANR	376723	Identifier	result		376393	1					
ANR	376724	Identifier	var		376393	1					
ANR	376725	Argument	zptr		376393	1					
ANR	376726	Identifier	zptr		376393	0					
ANR	376727	ExpressionStatement	zval_opt_copy_ctor ( zptr )	20149:4:623721:623745	376393	2	True				
ANR	376728	CallExpression	zval_opt_copy_ctor ( zptr )		376393	0					
ANR	376729	Callee	zval_opt_copy_ctor		376393	0					
ANR	376730	Identifier	zval_opt_copy_ctor		376393	0					
ANR	376731	ArgumentList	zptr		376393	1					
ANR	376732	Argument	zptr		376393	0					
ANR	376733	Identifier	zptr		376393	0					
ANR	376734	IfStatement	if ( inc )		376393	3					
ANR	376735	Condition	inc	20150:8:623755:623757	376393	0	True				
ANR	376736	Identifier	inc		376393	0					
ANR	376737	CompoundStatement		51:13:1521:1521	376393	1					
ANR	376738	ExpressionStatement	increment_function ( zptr )	20151:5:623767:623791	376393	0	True				
ANR	376739	CallExpression	increment_function ( zptr )		376393	0					
ANR	376740	Callee	increment_function		376393	0					
ANR	376741	Identifier	increment_function		376393	0					
ANR	376742	ArgumentList	zptr		376393	1					
ANR	376743	Argument	zptr		376393	0					
ANR	376744	Identifier	zptr		376393	0					
ANR	376745	ElseStatement	else		376393	0					
ANR	376746	CompoundStatement		53:11:1565:1565	376393	0					
ANR	376747	ExpressionStatement	decrement_function ( zptr )	20153:5:623811:623835	376393	0	True				
ANR	376748	CallExpression	decrement_function ( zptr )		376393	0					
ANR	376749	Callee	decrement_function		376393	0					
ANR	376750	Identifier	decrement_function		376393	0					
ANR	376751	ArgumentList	zptr		376393	1					
ANR	376752	Argument	zptr		376393	0					
ANR	376753	Identifier	zptr		376393	0					
ANR	376754	ElseStatement	else		376393	0					
ANR	376755	CompoundStatement		57:9:1618:1618	376393	0					
ANR	376756	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	20157:3:623862:624018	376393	0	True				
ANR	376757	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		376393	0					
ANR	376758	Callee	zend_post_incdec_overloaded_property		376393	0					
ANR	376759	Identifier	zend_post_incdec_overloaded_property		376393	0					
ANR	376760	ArgumentList	object		376393	1					
ANR	376761	Argument	object		376393	0					
ANR	376762	Identifier	object		376393	0					
ANR	376763	Argument	property		376393	1					
ANR	376764	Identifier	property		376393	0					
ANR	376765	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		376393	2					
ANR	376766	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		376393	0					
ANR	376767	Condition	IS_CV == IS_CONST		376393	0					
ANR	376768	EqualityExpression	IS_CV == IS_CONST		376393	0		==			
ANR	376769	Identifier	IS_CV		376393	0					
ANR	376770	Identifier	IS_CONST		376393	1					
ANR	376771	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		376393	1					
ANR	376772	Callee	CACHE_ADDR		376393	0					
ANR	376773	Identifier	CACHE_ADDR		376393	0					
ANR	376774	ArgumentList	Z_CACHE_SLOT_P ( property )		376393	1					
ANR	376775	Argument	Z_CACHE_SLOT_P ( property )		376393	0					
ANR	376776	CallExpression	Z_CACHE_SLOT_P ( property )		376393	0					
ANR	376777	Callee	Z_CACHE_SLOT_P		376393	0					
ANR	376778	Identifier	Z_CACHE_SLOT_P		376393	0					
ANR	376779	ArgumentList	property		376393	1					
ANR	376780	Argument	property		376393	0					
ANR	376781	Identifier	property		376393	0					
ANR	376782	Identifier	NULL		376393	2					
ANR	376783	Argument	inc		376393	3					
ANR	376784	Identifier	inc		376393	0					
ANR	376785	Argument	EX_VAR ( opline -> result . var )		376393	4					
ANR	376786	CallExpression	EX_VAR ( opline -> result . var )		376393	0					
ANR	376787	Callee	EX_VAR		376393	0					
ANR	376788	Identifier	EX_VAR		376393	0					
ANR	376789	ArgumentList	opline -> result . var		376393	1					
ANR	376790	Argument	opline -> result . var		376393	0					
ANR	376791	MemberAccess	opline -> result . var		376393	0					
ANR	376792	PtrMemberAccess	opline -> result		376393	0					
ANR	376793	Identifier	opline		376393	0					
ANR	376794	Identifier	result		376393	1					
ANR	376795	Identifier	var		376393	1					
ANR	376796	Condition	0	20159:10:624034:624034	376393	1	True				
ANR	376797	PrimaryExpression	0		376393	0					
ANR	376798	IfStatement	if ( UNEXPECTED ( free_op1 ) )		376393	10					
ANR	376799	Condition	UNEXPECTED ( free_op1 )	20161:5:624044:624063	376393	0	True				
ANR	376800	CallExpression	UNEXPECTED ( free_op1 )		376393	0					
ANR	376801	Callee	UNEXPECTED		376393	0					
ANR	376802	Identifier	UNEXPECTED		376393	0					
ANR	376803	ArgumentList	free_op1		376393	1					
ANR	376804	Argument	free_op1		376393	0					
ANR	376805	Identifier	free_op1		376393	0					
ANR	376806	CompoundStatement		62:27:1827:1827	376393	1					
ANR	376807	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	20161:28:624067:624095	376393	0	True				
ANR	376808	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		376393	0					
ANR	376809	Callee	zval_ptr_dtor_nogc		376393	0					
ANR	376810	Identifier	zval_ptr_dtor_nogc		376393	0					
ANR	376811	ArgumentList	free_op1		376393	1					
ANR	376812	Argument	free_op1		376393	0					
ANR	376813	Identifier	free_op1		376393	0					
ANR	376814	ExpressionStatement		20161:58:624097:624097	376393	11	True				
ANR	376815	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	20162:1:624100:624137	376393	12	True				
ANR	376816	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		376393	0					
ANR	376817	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		376393	0					
ANR	376818	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		376393	0					
ANR	376819	ArgumentList			376393	1					
ANR	376820	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		376393	1					
ANR	376821	Identifier	zend_post_incdec_property_helper_SPEC_VAR_CV		376393	2					
ANR	376822	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		376393	3					
ANR	376823	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	20099:90:622201:622235	376393	0	True				
ANR	376824	ParameterType	int inc		376393	0					
ANR	376825	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		376393	1					
ANR	376826	CFGEntryNode	ENTRY		376393		True				
ANR	376827	CFGExitNode	EXIT		376393		True				
ANR	376828	Symbol	opline -> op1		376393						
ANR	376829	Symbol	opline -> op2		376393						
ANR	376830	Symbol	opline -> op2 . var		376393						
ANR	376831	Symbol	IS_CV		376393						
ANR	376832	Symbol	Z_OBJ_P		376393						
ANR	376833	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		376393						
ANR	376834	Symbol	_get_zval_ptr_ptr_var		376393						
ANR	376835	Symbol	zptr		376393						
ANR	376836	Symbol	free_op1		376393						
ANR	376837	Symbol	execute_data		376393						
ANR	376838	Symbol	opline -> result		376393						
ANR	376839	Symbol	UNEXPECTED		376393						
ANR	376840	Symbol	E_WARNING		376393						
ANR	376841	Symbol	make_real_object		376393						
ANR	376842	Symbol	opline		376393						
ANR	376843	Symbol	IS_LONG		376393						
ANR	376844	Symbol	property		376393						
ANR	376845	Symbol	opline -> op1 . var		376393						
ANR	376846	Symbol	& free_op1		376393						
ANR	376847	Symbol	inc		376393						
ANR	376848	Symbol	BP_VAR_RW		376393						
ANR	376849	Symbol	IS_CONST		376393						
ANR	376850	Symbol	NULL		376393						
ANR	376851	Symbol	Z_CACHE_SLOT_P		376393						
ANR	376852	Symbol	_get_zval_ptr_cv_BP_VAR_R		376393						
ANR	376853	Symbol	Z_TYPE_P		376393						
ANR	376854	Symbol	* Z_OBJ_HT_P		376393						
ANR	376855	Symbol	CACHE_ADDR		376393						
ANR	376856	Symbol	* opline		376393						
ANR	376857	Symbol	Z_OBJ_HT_P		376393						
ANR	376858	Symbol	EX_VAR		376393						
ANR	376859	Symbol	IS_OBJECT		376393						
ANR	376860	Symbol	IS_VAR		376393						
ANR	376861	Symbol	EXPECTED		376393						
ANR	376862	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		376393						
ANR	376863	Symbol	opline -> result . var		376393						
ANR	376864	Symbol	object		376393						
ANR	376865	Symbol	IS_UNUSED		376393						
ANR	376866	DeclStmt									
ANR	376867	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376868	DeclStmt									
ANR	376869	Decl							zval	zval *	container
ANR	376870	DeclStmt									
ANR	376871	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376872	DeclStmt									
ANR	376873	Decl							zval	zval *	container
ANR	376874	DeclStmt									
ANR	376875	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	376876	DeclStmt									
ANR	376877	Decl							zend_free_op	zend_free_op	free_op1
ANR	376878	DeclStmt									
ANR	376879	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376880	DeclStmt									
ANR	376881	Decl							zval	zval *	container
ANR	376882	DeclStmt									
ANR	376883	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376884	DeclStmt									
ANR	376885	Decl							zval	zval *	container
ANR	376886	DeclStmt									
ANR	376887	Decl							zval	zval *	offset
ANR	376888	DeclStmt									
ANR	376889	Decl							zend_object	zend_object *	zobj
ANR	376890	DeclStmt									
ANR	376891	Decl							zval	zval *	retval
ANR	376892	DeclStmt									
ANR	376893	Decl							uint32_t	uint32_t	prop_offset
ANR	376894	DeclStmt									
ANR	376895	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376896	DeclStmt									
ANR	376897	Decl							zval	zval *	property
ANR	376898	DeclStmt									
ANR	376899	Decl							zval	zval *	container
ANR	376900	DeclStmt									
ANR	376901	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376902	DeclStmt									
ANR	376903	Decl							zval	zval *	property
ANR	376904	DeclStmt									
ANR	376905	Decl							zval	zval *	container
ANR	376906	DeclStmt									
ANR	376907	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	376908	DeclStmt									
ANR	376909	Decl							zend_free_op	zend_free_op	free_op1
ANR	376910	DeclStmt									
ANR	376911	Decl							zval	zval *	property
ANR	376912	DeclStmt									
ANR	376913	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376914	DeclStmt									
ANR	376915	Decl							zval	zval *	container
ANR	376916	Decl							zval	zval *	property
ANR	376917	DeclStmt									
ANR	376918	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376919	DeclStmt									
ANR	376920	Decl							zval	zval *	object
ANR	376921	DeclStmt									
ANR	376922	Decl							zval	zval *	property_name
ANR	376923	DeclStmt									
ANR	376924	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376925	DeclStmt									
ANR	376926	Decl							zval	zval *	object_ptr
ANR	376927	DeclStmt									
ANR	376928	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	376929	DeclStmt									
ANR	376930	Decl							zval	zval *	value
ANR	376931	DeclStmt									
ANR	376932	Decl							zval	zval *	variable_ptr
ANR	376933	DeclStmt									
ANR	376934	Decl							zval	zval *	dim
ANR	376935	DeclStmt									
ANR	376936	Decl							zval	zval *	property_name
ANR	376937	DeclStmt									
ANR	376938	Decl							zend_long	zend_long	offset
ANR	376939	DeclStmt									
ANR	376940	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376941	DeclStmt									
ANR	376942	Decl							zval	zval *	value
ANR	376943	DeclStmt									
ANR	376944	Decl							zval	zval *	variable_ptr
ANR	376945	DeclStmt									
ANR	376946	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376947	DeclStmt									
ANR	376948	Decl							zval	zval *	variable_ptr
ANR	376949	DeclStmt									
ANR	376950	Decl							zval	zval *	value_ptr
ANR	376951	DeclStmt									
ANR	376952	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	376953	DeclStmt									
ANR	376954	Decl							zend_class_entry	zend_class_entry *	ce
ANR	376955	DeclStmt									
ANR	376956	Decl							zend_object	zend_object *	object
ANR	376957	DeclStmt									
ANR	376958	Decl							zend_function	zend_function *	fbc
ANR	376959	DeclStmt									
ANR	376960	Decl							zend_execute_data	zend_execute_data *	call
ANR	376961	DeclStmt									
ANR	376962	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376963	DeclStmt									
ANR	376964	Decl							zval	zval *	expr_ptr
ANR	376965	Decl							zval	zval	new_expr
ANR	376966	DeclStmt									
ANR	376967	Decl							zend_refcounted	zend_refcounted *	ref
ANR	376968	DeclStmt									
ANR	376969	Decl							zval	zval *	offset
ANR	376970	DeclStmt									
ANR	376971	Decl							zend_string	zend_string *	str
ANR	376972	DeclStmt									
ANR	376973	Decl							zend_ulong	zend_ulong	hval
ANR	376974	DeclStmt									
ANR	376975	Decl							zval	zval *	array
ANR	376976	DeclStmt									
ANR	376977	Decl							uint32_t	uint32_t	size
ANR	376978	DeclStmt									
ANR	376979	Decl							USE_OPLINE	USE_OPLINE	array
ANR	376980	DeclStmt									
ANR	376981	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376982	DeclStmt									
ANR	376983	Decl							zval	zval *	container
ANR	376984	DeclStmt									
ANR	376985	Decl							zval	zval *	offset
ANR	376986	DeclStmt									
ANR	376987	Decl							zend_ulong	zend_ulong	hval
ANR	376988	DeclStmt									
ANR	376989	Decl							zend_string	zend_string *	key
ANR	376990	DeclStmt									
ANR	376991	Decl							HashTable	HashTable *	ht
ANR	376992	DeclStmt									
ANR	376993	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	376994	DeclStmt									
ANR	376995	Decl							zval	zval *	container
ANR	376996	DeclStmt									
ANR	376997	Decl							zval	zval *	offset
ANR	376998	DeclStmt									
ANR	376999	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	377000	DeclStmt									
ANR	377001	Decl							zend_free_op	zend_free_op	free_op1
ANR	377002	DeclStmt									
ANR	377003	Decl							zval	zval *	value
ANR	377004	DeclStmt									
ANR	377005	Decl							zval	zval *	value_ptr
ANR	377006	DeclStmt									
ANR	377007	Decl							zval	zval *	value
ANR	377008	DeclStmt									
ANR	377009	Decl							zval	zval *	key
ANR	377010	Function	zend_binary_assign_op_obj_helper_SPEC_VAR_TMPVAR	21260:0:660276:662603							
ANR	377011	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_VAR_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		377010	0					
ANR	377012	CompoundStatement		21261:0:660424:662603	377010	0					
ANR	377013	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op2 , free_op_data1 ;"	21262:1:660427:660485	377010	0	True				
ANR	377014	IdentifierDecl	free_op1		377010	0					
ANR	377015	IdentifierDeclType	USE_OPLINE zend_free_op		377010	0					
ANR	377016	Identifier	free_op1		377010	1					
ANR	377017	IdentifierDecl	free_op2		377010	1					
ANR	377018	IdentifierDeclType	USE_OPLINE zend_free_op		377010	0					
ANR	377019	Identifier	free_op2		377010	1					
ANR	377020	IdentifierDecl	free_op_data1		377010	2					
ANR	377021	IdentifierDeclType	USE_OPLINE zend_free_op		377010	0					
ANR	377022	Identifier	free_op_data1		377010	1					
ANR	377023	IdentifierDeclStatement	zval * object ;	21264:1:660488:660500	377010	1	True				
ANR	377024	IdentifierDecl	* object		377010	0					
ANR	377025	IdentifierDeclType	zval *		377010	0					
ANR	377026	Identifier	object		377010	1					
ANR	377027	IdentifierDeclStatement	zval * property ;	21265:1:660503:660517	377010	2	True				
ANR	377028	IdentifierDecl	* property		377010	0					
ANR	377029	IdentifierDeclType	zval *		377010	0					
ANR	377030	Identifier	property		377010	1					
ANR	377031	IdentifierDeclStatement	zval * value ;	21266:1:660520:660531	377010	3	True				
ANR	377032	IdentifierDecl	* value		377010	0					
ANR	377033	IdentifierDeclType	zval *		377010	0					
ANR	377034	Identifier	value		377010	1					
ANR	377035	IdentifierDeclStatement	zval * zptr ;	21267:1:660534:660544	377010	4	True				
ANR	377036	IdentifierDecl	* zptr		377010	0					
ANR	377037	IdentifierDeclType	zval *		377010	0					
ANR	377038	Identifier	zptr		377010	1					
ANR	377039	ExpressionStatement	SAVE_OPLINE ( )	21269:1:660548:660561	377010	5	True				
ANR	377040	CallExpression	SAVE_OPLINE ( )		377010	0					
ANR	377041	Callee	SAVE_OPLINE		377010	0					
ANR	377042	Identifier	SAVE_OPLINE		377010	0					
ANR	377043	ArgumentList			377010	1					
ANR	377044	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	21270:1:660564:660636	377010	6	True				
ANR	377045	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		377010	0		=			
ANR	377046	Identifier	object		377010	0					
ANR	377047	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		377010	1					
ANR	377048	Callee	_get_zval_ptr_ptr_var		377010	0					
ANR	377049	Identifier	_get_zval_ptr_ptr_var		377010	0					
ANR	377050	ArgumentList	opline -> op1 . var		377010	1					
ANR	377051	Argument	opline -> op1 . var		377010	0					
ANR	377052	MemberAccess	opline -> op1 . var		377010	0					
ANR	377053	PtrMemberAccess	opline -> op1		377010	0					
ANR	377054	Identifier	opline		377010	0					
ANR	377055	Identifier	op1		377010	1					
ANR	377056	Identifier	var		377010	1					
ANR	377057	Argument	execute_data		377010	1					
ANR	377058	Identifier	execute_data		377010	0					
ANR	377059	Argument	& free_op1		377010	2					
ANR	377060	UnaryOperationExpression	& free_op1		377010	0					
ANR	377061	UnaryOperator	&		377010	0					
ANR	377062	Identifier	free_op1		377010	1					
ANR	377063	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		377010	7					
ANR	377064	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	21272:5:660644:660701	377010	0	True				
ANR	377065	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		377010	0		&&			
ANR	377066	EqualityExpression	IS_VAR == IS_UNUSED		377010	0		==			
ANR	377067	Identifier	IS_VAR		377010	0					
ANR	377068	Identifier	IS_UNUSED		377010	1					
ANR	377069	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		377010	1					
ANR	377070	Callee	UNEXPECTED		377010	0					
ANR	377071	Identifier	UNEXPECTED		377010	0					
ANR	377072	ArgumentList	Z_OBJ_P ( object ) == NULL		377010	1					
ANR	377073	Argument	Z_OBJ_P ( object ) == NULL		377010	0					
ANR	377074	EqualityExpression	Z_OBJ_P ( object ) == NULL		377010	0		==			
ANR	377075	CallExpression	Z_OBJ_P ( object )		377010	0					
ANR	377076	Callee	Z_OBJ_P		377010	0					
ANR	377077	Identifier	Z_OBJ_P		377010	0					
ANR	377078	ArgumentList	object		377010	1					
ANR	377079	Argument	object		377010	0					
ANR	377080	Identifier	object		377010	0					
ANR	377081	Identifier	NULL		377010	1					
ANR	377082	CompoundStatement		12:65:279:279	377010	1					
ANR	377083	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	21273:2:660708:660772	377010	0	True				
ANR	377084	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		377010	0					
ANR	377085	Callee	zend_throw_error		377010	0					
ANR	377086	Identifier	zend_throw_error		377010	0					
ANR	377087	ArgumentList	NULL		377010	1					
ANR	377088	Argument	NULL		377010	0					
ANR	377089	Identifier	NULL		377010	0					
ANR	377090	Argument	"""Using $this when not in object context"""		377010	1					
ANR	377091	PrimaryExpression	"""Using $this when not in object context"""		377010	0					
ANR	377092	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	21274:2:660776:660836	377010	1	True				
ANR	377093	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		377010	0					
ANR	377094	Callee	FREE_UNFETCHED_OP		377010	0					
ANR	377095	Identifier	FREE_UNFETCHED_OP		377010	0					
ANR	377096	ArgumentList	( opline + 1 ) -> op1_type		377010	1					
ANR	377097	Argument	( opline + 1 ) -> op1_type		377010	0					
ANR	377098	PtrMemberAccess	( opline + 1 ) -> op1_type		377010	0					
ANR	377099	AdditiveExpression	opline + 1		377010	0		+			
ANR	377100	Identifier	opline		377010	0					
ANR	377101	PrimaryExpression	1		377010	1					
ANR	377102	Identifier	op1_type		377010	1					
ANR	377103	Argument	( opline + 1 ) -> op1 . var		377010	1					
ANR	377104	MemberAccess	( opline + 1 ) -> op1 . var		377010	0					
ANR	377105	PtrMemberAccess	( opline + 1 ) -> op1		377010	0					
ANR	377106	AdditiveExpression	opline + 1		377010	0		+			
ANR	377107	Identifier	opline		377010	0					
ANR	377108	PrimaryExpression	1		377010	1					
ANR	377109	Identifier	op1		377010	1					
ANR	377110	Identifier	var		377010	1					
ANR	377111	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	21275:2:660840:660883	377010	2	True				
ANR	377112	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		377010	0					
ANR	377113	Callee	zval_ptr_dtor_nogc		377010	0					
ANR	377114	Identifier	zval_ptr_dtor_nogc		377010	0					
ANR	377115	ArgumentList	EX_VAR ( opline -> op2 . var )		377010	1					
ANR	377116	Argument	EX_VAR ( opline -> op2 . var )		377010	0					
ANR	377117	CallExpression	EX_VAR ( opline -> op2 . var )		377010	0					
ANR	377118	Callee	EX_VAR		377010	0					
ANR	377119	Identifier	EX_VAR		377010	0					
ANR	377120	ArgumentList	opline -> op2 . var		377010	1					
ANR	377121	Argument	opline -> op2 . var		377010	0					
ANR	377122	MemberAccess	opline -> op2 . var		377010	0					
ANR	377123	PtrMemberAccess	opline -> op2		377010	0					
ANR	377124	Identifier	opline		377010	0					
ANR	377125	Identifier	op2		377010	1					
ANR	377126	Identifier	var		377010	1					
ANR	377127	ExpressionStatement	HANDLE_EXCEPTION ( )	21276:2:660887:660905	377010	3	True				
ANR	377128	CallExpression	HANDLE_EXCEPTION ( )		377010	0					
ANR	377129	Callee	HANDLE_EXCEPTION		377010	0					
ANR	377130	Identifier	HANDLE_EXCEPTION		377010	0					
ANR	377131	ArgumentList			377010	1					
ANR	377132	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	21279:1:660912:660982	377010	8	True				
ANR	377133	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		377010	0		=			
ANR	377134	Identifier	property		377010	0					
ANR	377135	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		377010	1					
ANR	377136	Callee	_get_zval_ptr_var		377010	0					
ANR	377137	Identifier	_get_zval_ptr_var		377010	0					
ANR	377138	ArgumentList	opline -> op2 . var		377010	1					
ANR	377139	Argument	opline -> op2 . var		377010	0					
ANR	377140	MemberAccess	opline -> op2 . var		377010	0					
ANR	377141	PtrMemberAccess	opline -> op2		377010	0					
ANR	377142	Identifier	opline		377010	0					
ANR	377143	Identifier	op2		377010	1					
ANR	377144	Identifier	var		377010	1					
ANR	377145	Argument	execute_data		377010	1					
ANR	377146	Identifier	execute_data		377010	0					
ANR	377147	Argument	& free_op2		377010	2					
ANR	377148	UnaryOperationExpression	& free_op2		377010	0					
ANR	377149	UnaryOperator	&		377010	0					
ANR	377150	Identifier	free_op2		377010	1					
ANR	377151	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		377010	9					
ANR	377152	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	21281:5:660990:661035	377010	0	True				
ANR	377153	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		377010	0		&&			
ANR	377154	EqualityExpression	IS_VAR == IS_VAR		377010	0		==			
ANR	377155	Identifier	IS_VAR		377010	0					
ANR	377156	Identifier	IS_VAR		377010	1					
ANR	377157	CallExpression	UNEXPECTED ( object == NULL )		377010	1					
ANR	377158	Callee	UNEXPECTED		377010	0					
ANR	377159	Identifier	UNEXPECTED		377010	0					
ANR	377160	ArgumentList	object == NULL		377010	1					
ANR	377161	Argument	object == NULL		377010	0					
ANR	377162	EqualityExpression	object == NULL		377010	0		==			
ANR	377163	Identifier	object		377010	0					
ANR	377164	Identifier	NULL		377010	1					
ANR	377165	CompoundStatement		21:53:613:613	377010	1					
ANR	377166	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	21282:2:661042:661105	377010	0	True				
ANR	377167	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		377010	0					
ANR	377168	Callee	zend_throw_error		377010	0					
ANR	377169	Identifier	zend_throw_error		377010	0					
ANR	377170	ArgumentList	NULL		377010	1					
ANR	377171	Argument	NULL		377010	0					
ANR	377172	Identifier	NULL		377010	0					
ANR	377173	Argument	"""Cannot use string offset as an object"""		377010	1					
ANR	377174	PrimaryExpression	"""Cannot use string offset as an object"""		377010	0					
ANR	377175	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	21283:2:661109:661169	377010	1	True				
ANR	377176	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		377010	0					
ANR	377177	Callee	FREE_UNFETCHED_OP		377010	0					
ANR	377178	Identifier	FREE_UNFETCHED_OP		377010	0					
ANR	377179	ArgumentList	( opline + 1 ) -> op1_type		377010	1					
ANR	377180	Argument	( opline + 1 ) -> op1_type		377010	0					
ANR	377181	PtrMemberAccess	( opline + 1 ) -> op1_type		377010	0					
ANR	377182	AdditiveExpression	opline + 1		377010	0		+			
ANR	377183	Identifier	opline		377010	0					
ANR	377184	PrimaryExpression	1		377010	1					
ANR	377185	Identifier	op1_type		377010	1					
ANR	377186	Argument	( opline + 1 ) -> op1 . var		377010	1					
ANR	377187	MemberAccess	( opline + 1 ) -> op1 . var		377010	0					
ANR	377188	PtrMemberAccess	( opline + 1 ) -> op1		377010	0					
ANR	377189	AdditiveExpression	opline + 1		377010	0		+			
ANR	377190	Identifier	opline		377010	0					
ANR	377191	PrimaryExpression	1		377010	1					
ANR	377192	Identifier	op1		377010	1					
ANR	377193	Identifier	var		377010	1					
ANR	377194	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21284:2:661173:661201	377010	2	True				
ANR	377195	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		377010	0					
ANR	377196	Callee	zval_ptr_dtor_nogc		377010	0					
ANR	377197	Identifier	zval_ptr_dtor_nogc		377010	0					
ANR	377198	ArgumentList	free_op2		377010	1					
ANR	377199	Argument	free_op2		377010	0					
ANR	377200	Identifier	free_op2		377010	0					
ANR	377201	ExpressionStatement	HANDLE_EXCEPTION ( )	21285:2:661205:661223	377010	3	True				
ANR	377202	CallExpression	HANDLE_EXCEPTION ( )		377010	0					
ANR	377203	Callee	HANDLE_EXCEPTION		377010	0					
ANR	377204	Identifier	HANDLE_EXCEPTION		377010	0					
ANR	377205	ArgumentList			377010	1					
ANR	377206	DoStatement	do		377010	10					
ANR	377207	CompoundStatement		28:4:808:808	377010	0					
ANR	377208	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	21289:2:661237:661328	377010	0	True				
ANR	377209	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		377010	0		=			
ANR	377210	Identifier	value		377010	0					
ANR	377211	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		377010	1					
ANR	377212	Callee	get_zval_ptr_r		377010	0					
ANR	377213	Identifier	get_zval_ptr_r		377010	0					
ANR	377214	ArgumentList	( opline + 1 ) -> op1_type		377010	1					
ANR	377215	Argument	( opline + 1 ) -> op1_type		377010	0					
ANR	377216	PtrMemberAccess	( opline + 1 ) -> op1_type		377010	0					
ANR	377217	AdditiveExpression	opline + 1		377010	0		+			
ANR	377218	Identifier	opline		377010	0					
ANR	377219	PrimaryExpression	1		377010	1					
ANR	377220	Identifier	op1_type		377010	1					
ANR	377221	Argument	( opline + 1 ) -> op1		377010	1					
ANR	377222	PtrMemberAccess	( opline + 1 ) -> op1		377010	0					
ANR	377223	AdditiveExpression	opline + 1		377010	0		+			
ANR	377224	Identifier	opline		377010	0					
ANR	377225	PrimaryExpression	1		377010	1					
ANR	377226	Identifier	op1		377010	1					
ANR	377227	Argument	execute_data		377010	2					
ANR	377228	Identifier	execute_data		377010	0					
ANR	377229	Argument	& free_op_data1		377010	3					
ANR	377230	UnaryOperationExpression	& free_op_data1		377010	0					
ANR	377231	UnaryOperator	&		377010	0					
ANR	377232	Identifier	free_op_data1		377010	1					
ANR	377233	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		377010	1					
ANR	377234	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	21291:6:661337:661400	377010	0	True				
ANR	377235	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		377010	0		&&			
ANR	377236	EqualityExpression	IS_VAR != IS_UNUSED		377010	0		!=			
ANR	377237	Identifier	IS_VAR		377010	0					
ANR	377238	Identifier	IS_UNUSED		377010	1					
ANR	377239	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		377010	1					
ANR	377240	Callee	UNEXPECTED		377010	0					
ANR	377241	Identifier	UNEXPECTED		377010	0					
ANR	377242	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		377010	1					
ANR	377243	Argument	Z_TYPE_P ( object ) != IS_OBJECT		377010	0					
ANR	377244	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		377010	0		!=			
ANR	377245	CallExpression	Z_TYPE_P ( object )		377010	0					
ANR	377246	Callee	Z_TYPE_P		377010	0					
ANR	377247	Identifier	Z_TYPE_P		377010	0					
ANR	377248	ArgumentList	object		377010	1					
ANR	377249	Argument	object		377010	0					
ANR	377250	Identifier	object		377010	0					
ANR	377251	Identifier	IS_OBJECT		377010	1					
ANR	377252	CompoundStatement		31:72:978:978	377010	1					
ANR	377253	ExpressionStatement	ZVAL_DEREF ( object )	21292:3:661408:661426	377010	0	True				
ANR	377254	CallExpression	ZVAL_DEREF ( object )		377010	0					
ANR	377255	Callee	ZVAL_DEREF		377010	0					
ANR	377256	Identifier	ZVAL_DEREF		377010	0					
ANR	377257	ArgumentList	object		377010	1					
ANR	377258	Argument	object		377010	0					
ANR	377259	Identifier	object		377010	0					
ANR	377260	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		377010	1					
ANR	377261	Condition	UNEXPECTED ( ! make_real_object ( object ) )	21293:7:661435:661471	377010	0	True				
ANR	377262	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		377010	0					
ANR	377263	Callee	UNEXPECTED		377010	0					
ANR	377264	Identifier	UNEXPECTED		377010	0					
ANR	377265	ArgumentList	! make_real_object ( object )		377010	1					
ANR	377266	Argument	! make_real_object ( object )		377010	0					
ANR	377267	UnaryOperationExpression	! make_real_object ( object )		377010	0					
ANR	377268	UnaryOperator	!		377010	0					
ANR	377269	CallExpression	make_real_object ( object )		377010	1					
ANR	377270	Callee	make_real_object		377010	0					
ANR	377271	Identifier	make_real_object		377010	0					
ANR	377272	ArgumentList	object		377010	1					
ANR	377273	Argument	object		377010	0					
ANR	377274	Identifier	object		377010	0					
ANR	377275	CompoundStatement		33:46:1049:1049	377010	1					
ANR	377276	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	21294:4:661480:661545	377010	0	True				
ANR	377277	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		377010	0					
ANR	377278	Callee	zend_error		377010	0					
ANR	377279	Identifier	zend_error		377010	0					
ANR	377280	ArgumentList	E_WARNING		377010	1					
ANR	377281	Argument	E_WARNING		377010	0					
ANR	377282	Identifier	E_WARNING		377010	0					
ANR	377283	Argument	"""Attempt to assign property of non-object"""		377010	1					
ANR	377284	PrimaryExpression	"""Attempt to assign property of non-object"""		377010	0					
ANR	377285	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		377010	1					
ANR	377286	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21295:8:661555:661591	377010	0	True				
ANR	377287	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377010	0					
ANR	377288	Callee	UNEXPECTED		377010	0					
ANR	377289	Identifier	UNEXPECTED		377010	0					
ANR	377290	ArgumentList	RETURN_VALUE_USED ( opline )		377010	1					
ANR	377291	Argument	RETURN_VALUE_USED ( opline )		377010	0					
ANR	377292	CallExpression	RETURN_VALUE_USED ( opline )		377010	0					
ANR	377293	Callee	RETURN_VALUE_USED		377010	0					
ANR	377294	Identifier	RETURN_VALUE_USED		377010	0					
ANR	377295	ArgumentList	opline		377010	1					
ANR	377296	Argument	opline		377010	0					
ANR	377297	Identifier	opline		377010	0					
ANR	377298	CompoundStatement		35:47:1169:1169	377010	1					
ANR	377299	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	21296:5:661601:661638	377010	0	True				
ANR	377300	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		377010	0					
ANR	377301	Callee	ZVAL_NULL		377010	0					
ANR	377302	Identifier	ZVAL_NULL		377010	0					
ANR	377303	ArgumentList	EX_VAR ( opline -> result . var )		377010	1					
ANR	377304	Argument	EX_VAR ( opline -> result . var )		377010	0					
ANR	377305	CallExpression	EX_VAR ( opline -> result . var )		377010	0					
ANR	377306	Callee	EX_VAR		377010	0					
ANR	377307	Identifier	EX_VAR		377010	0					
ANR	377308	ArgumentList	opline -> result . var		377010	1					
ANR	377309	Argument	opline -> result . var		377010	0					
ANR	377310	MemberAccess	opline -> result . var		377010	0					
ANR	377311	PtrMemberAccess	opline -> result		377010	0					
ANR	377312	Identifier	opline		377010	0					
ANR	377313	Identifier	result		377010	1					
ANR	377314	Identifier	var		377010	1					
ANR	377315	BreakStatement	break ;	21298:4:661650:661655	377010	2	True				
ANR	377316	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		377010	2					
ANR	377317	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	21303:6:661728:661963	377010	0	True				
ANR	377318	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		377010	0		&&			
ANR	377319	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		377010	0					
ANR	377320	Callee	EXPECTED		377010	0					
ANR	377321	Identifier	EXPECTED		377010	0					
ANR	377322	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		377010	1					
ANR	377323	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		377010	0					
ANR	377324	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		377010	0					
ANR	377325	CallExpression	Z_OBJ_HT_P ( object )		377010	0					
ANR	377326	Callee	Z_OBJ_HT_P		377010	0					
ANR	377327	Identifier	Z_OBJ_HT_P		377010	0					
ANR	377328	ArgumentList	object		377010	1					
ANR	377329	Argument	object		377010	0					
ANR	377330	Identifier	object		377010	0					
ANR	377331	Identifier	get_property_ptr_ptr		377010	1					
ANR	377332	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		377010	1					
ANR	377333	Callee	EXPECTED		377010	0					
ANR	377334	Identifier	EXPECTED		377010	0					
ANR	377335	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		377010	1					
ANR	377336	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		377010	0					
ANR	377337	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		377010	0		!=			
ANR	377338	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		377010	0		=			
ANR	377339	Identifier	zptr		377010	0					
ANR	377340	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		377010	1					
ANR	377341	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		377010	0					
ANR	377342	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		377010	0					
ANR	377343	CallExpression	Z_OBJ_HT_P ( object )		377010	0					
ANR	377344	Callee	Z_OBJ_HT_P		377010	0					
ANR	377345	Identifier	Z_OBJ_HT_P		377010	0					
ANR	377346	ArgumentList	object		377010	1					
ANR	377347	Argument	object		377010	0					
ANR	377348	Identifier	object		377010	0					
ANR	377349	Identifier	get_property_ptr_ptr		377010	1					
ANR	377350	ArgumentList	object		377010	1					
ANR	377351	Argument	object		377010	0					
ANR	377352	Identifier	object		377010	0					
ANR	377353	Argument	property		377010	1					
ANR	377354	Identifier	property		377010	0					
ANR	377355	Argument	BP_VAR_RW		377010	2					
ANR	377356	Identifier	BP_VAR_RW		377010	0					
ANR	377357	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		377010	3					
ANR	377358	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		377010	0					
ANR	377359	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		377010	0					
ANR	377360	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		377010	0		==			
ANR	377361	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		377010	0		|			
ANR	377362	Identifier	IS_TMP_VAR		377010	0					
ANR	377363	Identifier	IS_VAR		377010	1					
ANR	377364	Identifier	IS_CONST		377010	1					
ANR	377365	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		377010	1					
ANR	377366	Callee	CACHE_ADDR		377010	0					
ANR	377367	Identifier	CACHE_ADDR		377010	0					
ANR	377368	ArgumentList	Z_CACHE_SLOT_P ( property )		377010	1					
ANR	377369	Argument	Z_CACHE_SLOT_P ( property )		377010	0					
ANR	377370	CallExpression	Z_CACHE_SLOT_P ( property )		377010	0					
ANR	377371	Callee	Z_CACHE_SLOT_P		377010	0					
ANR	377372	Identifier	Z_CACHE_SLOT_P		377010	0					
ANR	377373	ArgumentList	property		377010	1					
ANR	377374	Argument	property		377010	0					
ANR	377375	Identifier	property		377010	0					
ANR	377376	Identifier	NULL		377010	2					
ANR	377377	Identifier	NULL		377010	1					
ANR	377378	CompoundStatement		44:187:1541:1541	377010	1					
ANR	377379	ExpressionStatement	ZVAL_DEREF ( zptr )	21306:3:661972:661988	377010	0	True				
ANR	377380	CallExpression	ZVAL_DEREF ( zptr )		377010	0					
ANR	377381	Callee	ZVAL_DEREF		377010	0					
ANR	377382	Identifier	ZVAL_DEREF		377010	0					
ANR	377383	ArgumentList	zptr		377010	1					
ANR	377384	Argument	zptr		377010	0					
ANR	377385	Identifier	zptr		377010	0					
ANR	377386	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	21307:3:661993:662018	377010	1	True				
ANR	377387	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		377010	0					
ANR	377388	Callee	SEPARATE_ZVAL_NOREF		377010	0					
ANR	377389	Identifier	SEPARATE_ZVAL_NOREF		377010	0					
ANR	377390	ArgumentList	zptr		377010	1					
ANR	377391	Argument	zptr		377010	0					
ANR	377392	Identifier	zptr		377010	0					
ANR	377393	ExpressionStatement	"binary_op ( zptr , zptr , value )"	21309:3:662024:662052	377010	2	True				
ANR	377394	CallExpression	"binary_op ( zptr , zptr , value )"		377010	0					
ANR	377395	Callee	binary_op		377010	0					
ANR	377396	Identifier	binary_op		377010	0					
ANR	377397	ArgumentList	zptr		377010	1					
ANR	377398	Argument	zptr		377010	0					
ANR	377399	Identifier	zptr		377010	0					
ANR	377400	Argument	zptr		377010	1					
ANR	377401	Identifier	zptr		377010	0					
ANR	377402	Argument	value		377010	2					
ANR	377403	Identifier	value		377010	0					
ANR	377404	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		377010	3					
ANR	377405	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21310:7:662061:662097	377010	0	True				
ANR	377406	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377010	0					
ANR	377407	Callee	UNEXPECTED		377010	0					
ANR	377408	Identifier	UNEXPECTED		377010	0					
ANR	377409	ArgumentList	RETURN_VALUE_USED ( opline )		377010	1					
ANR	377410	Argument	RETURN_VALUE_USED ( opline )		377010	0					
ANR	377411	CallExpression	RETURN_VALUE_USED ( opline )		377010	0					
ANR	377412	Callee	RETURN_VALUE_USED		377010	0					
ANR	377413	Identifier	RETURN_VALUE_USED		377010	0					
ANR	377414	ArgumentList	opline		377010	1					
ANR	377415	Argument	opline		377010	0					
ANR	377416	Identifier	opline		377010	0					
ANR	377417	CompoundStatement		50:46:1675:1675	377010	1					
ANR	377418	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	21311:4:662106:662149	377010	0	True				
ANR	377419	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		377010	0					
ANR	377420	Callee	ZVAL_COPY		377010	0					
ANR	377421	Identifier	ZVAL_COPY		377010	0					
ANR	377422	ArgumentList	EX_VAR ( opline -> result . var )		377010	1					
ANR	377423	Argument	EX_VAR ( opline -> result . var )		377010	0					
ANR	377424	CallExpression	EX_VAR ( opline -> result . var )		377010	0					
ANR	377425	Callee	EX_VAR		377010	0					
ANR	377426	Identifier	EX_VAR		377010	0					
ANR	377427	ArgumentList	opline -> result . var		377010	1					
ANR	377428	Argument	opline -> result . var		377010	0					
ANR	377429	MemberAccess	opline -> result . var		377010	0					
ANR	377430	PtrMemberAccess	opline -> result		377010	0					
ANR	377431	Identifier	opline		377010	0					
ANR	377432	Identifier	result		377010	1					
ANR	377433	Identifier	var		377010	1					
ANR	377434	Argument	zptr		377010	1					
ANR	377435	Identifier	zptr		377010	0					
ANR	377436	ElseStatement	else		377010	0					
ANR	377437	CompoundStatement		53:9:1740:1740	377010	0					
ANR	377438	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	21314:3:662170:662400	377010	0	True				
ANR	377439	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		377010	0					
ANR	377440	Callee	zend_assign_op_overloaded_property		377010	0					
ANR	377441	Identifier	zend_assign_op_overloaded_property		377010	0					
ANR	377442	ArgumentList	object		377010	1					
ANR	377443	Argument	object		377010	0					
ANR	377444	Identifier	object		377010	0					
ANR	377445	Argument	property		377010	1					
ANR	377446	Identifier	property		377010	0					
ANR	377447	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		377010	2					
ANR	377448	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		377010	0					
ANR	377449	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		377010	0					
ANR	377450	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		377010	0		==			
ANR	377451	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		377010	0		|			
ANR	377452	Identifier	IS_TMP_VAR		377010	0					
ANR	377453	Identifier	IS_VAR		377010	1					
ANR	377454	Identifier	IS_CONST		377010	1					
ANR	377455	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		377010	1					
ANR	377456	Callee	CACHE_ADDR		377010	0					
ANR	377457	Identifier	CACHE_ADDR		377010	0					
ANR	377458	ArgumentList	Z_CACHE_SLOT_P ( property )		377010	1					
ANR	377459	Argument	Z_CACHE_SLOT_P ( property )		377010	0					
ANR	377460	CallExpression	Z_CACHE_SLOT_P ( property )		377010	0					
ANR	377461	Callee	Z_CACHE_SLOT_P		377010	0					
ANR	377462	Identifier	Z_CACHE_SLOT_P		377010	0					
ANR	377463	ArgumentList	property		377010	1					
ANR	377464	Argument	property		377010	0					
ANR	377465	Identifier	property		377010	0					
ANR	377466	Identifier	NULL		377010	2					
ANR	377467	Argument	value		377010	3					
ANR	377468	Identifier	value		377010	0					
ANR	377469	Argument	binary_op		377010	4					
ANR	377470	Identifier	binary_op		377010	0					
ANR	377471	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		377010	5					
ANR	377472	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		377010	0					
ANR	377473	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377010	0					
ANR	377474	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377010	0					
ANR	377475	Callee	UNEXPECTED		377010	0					
ANR	377476	Identifier	UNEXPECTED		377010	0					
ANR	377477	ArgumentList	RETURN_VALUE_USED ( opline )		377010	1					
ANR	377478	Argument	RETURN_VALUE_USED ( opline )		377010	0					
ANR	377479	CallExpression	RETURN_VALUE_USED ( opline )		377010	0					
ANR	377480	Callee	RETURN_VALUE_USED		377010	0					
ANR	377481	Identifier	RETURN_VALUE_USED		377010	0					
ANR	377482	ArgumentList	opline		377010	1					
ANR	377483	Argument	opline		377010	0					
ANR	377484	Identifier	opline		377010	0					
ANR	377485	CallExpression	EX_VAR ( opline -> result . var )		377010	1					
ANR	377486	Callee	EX_VAR		377010	0					
ANR	377487	Identifier	EX_VAR		377010	0					
ANR	377488	ArgumentList	opline -> result . var		377010	1					
ANR	377489	Argument	opline -> result . var		377010	0					
ANR	377490	MemberAccess	opline -> result . var		377010	0					
ANR	377491	PtrMemberAccess	opline -> result		377010	0					
ANR	377492	Identifier	opline		377010	0					
ANR	377493	Identifier	result		377010	1					
ANR	377494	Identifier	var		377010	1					
ANR	377495	Identifier	NULL		377010	2					
ANR	377496	Condition	0	21316:10:662416:662416	377010	1	True				
ANR	377497	PrimaryExpression	0		377010	0					
ANR	377498	ExpressionStatement	FREE_OP ( free_op_data1 )	21318:1:662422:662444	377010	11	True				
ANR	377499	CallExpression	FREE_OP ( free_op_data1 )		377010	0					
ANR	377500	Callee	FREE_OP		377010	0					
ANR	377501	Identifier	FREE_OP		377010	0					
ANR	377502	ArgumentList	free_op_data1		377010	1					
ANR	377503	Argument	free_op_data1		377010	0					
ANR	377504	Identifier	free_op_data1		377010	0					
ANR	377505	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21319:1:662447:662475	377010	12	True				
ANR	377506	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		377010	0					
ANR	377507	Callee	zval_ptr_dtor_nogc		377010	0					
ANR	377508	Identifier	zval_ptr_dtor_nogc		377010	0					
ANR	377509	ArgumentList	free_op2		377010	1					
ANR	377510	Argument	free_op2		377010	0					
ANR	377511	Identifier	free_op2		377010	0					
ANR	377512	IfStatement	if ( UNEXPECTED ( free_op1 ) )		377010	13					
ANR	377513	Condition	UNEXPECTED ( free_op1 )	21320:5:662482:662501	377010	0	True				
ANR	377514	CallExpression	UNEXPECTED ( free_op1 )		377010	0					
ANR	377515	Callee	UNEXPECTED		377010	0					
ANR	377516	Identifier	UNEXPECTED		377010	0					
ANR	377517	ArgumentList	free_op1		377010	1					
ANR	377518	Argument	free_op1		377010	0					
ANR	377519	Identifier	free_op1		377010	0					
ANR	377520	CompoundStatement		60:27:2079:2079	377010	1					
ANR	377521	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	21320:28:662505:662533	377010	0	True				
ANR	377522	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		377010	0					
ANR	377523	Callee	zval_ptr_dtor_nogc		377010	0					
ANR	377524	Identifier	zval_ptr_dtor_nogc		377010	0					
ANR	377525	ArgumentList	free_op1		377010	1					
ANR	377526	Argument	free_op1		377010	0					
ANR	377527	Identifier	free_op1		377010	0					
ANR	377528	ExpressionStatement		21320:58:662535:662535	377010	14	True				
ANR	377529	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	21322:1:662573:662601	377010	15	True				
ANR	377530	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		377010	0					
ANR	377531	Callee	ZEND_VM_NEXT_OPCODE_EX		377010	0					
ANR	377532	Identifier	ZEND_VM_NEXT_OPCODE_EX		377010	0					
ANR	377533	ArgumentList	1		377010	1					
ANR	377534	Argument	1		377010	0					
ANR	377535	PrimaryExpression	1		377010	0					
ANR	377536	Argument	2		377010	1					
ANR	377537	PrimaryExpression	2		377010	0					
ANR	377538	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		377010	1					
ANR	377539	Identifier	zend_binary_assign_op_obj_helper_SPEC_VAR_TMPVAR		377010	2					
ANR	377540	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		377010	3					
ANR	377541	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	21260:94:660370:660421	377010	0	True				
ANR	377542	ParameterType	binary_op_type binary_op		377010	0					
ANR	377543	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		377010	1					
ANR	377544	CFGEntryNode	ENTRY		377010		True				
ANR	377545	CFGExitNode	EXIT		377010		True				
ANR	377546	Symbol	opline -> op1		377010						
ANR	377547	Symbol	opline -> op2		377010						
ANR	377548	Symbol	opline -> op2 . var		377010						
ANR	377549	Symbol	Z_OBJ_P		377010						
ANR	377550	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		377010						
ANR	377551	Symbol	_get_zval_ptr_ptr_var		377010						
ANR	377552	Symbol	free_op2		377010						
ANR	377553	Symbol	free_op_data1		377010						
ANR	377554	Symbol	zptr		377010						
ANR	377555	Symbol	free_op1		377010						
ANR	377556	Symbol	execute_data		377010						
ANR	377557	Symbol	opline -> result		377010						
ANR	377558	Symbol	( opline + 1 ) -> op1		377010						
ANR	377559	Symbol	UNEXPECTED		377010						
ANR	377560	Symbol	& free_op2		377010						
ANR	377561	Symbol	E_WARNING		377010						
ANR	377562	Symbol	make_real_object		377010						
ANR	377563	Symbol	RETURN_VALUE_USED		377010						
ANR	377564	Symbol	( opline + 1 ) -> op1 . var		377010						
ANR	377565	Symbol	opline		377010						
ANR	377566	Symbol	get_zval_ptr_r		377010						
ANR	377567	Symbol	property		377010						
ANR	377568	Symbol	opline -> op1 . var		377010						
ANR	377569	Symbol	value		377010						
ANR	377570	Symbol	& free_op1		377010						
ANR	377571	Symbol	IS_TMP_VAR		377010						
ANR	377572	Symbol	binary_op		377010						
ANR	377573	Symbol	BP_VAR_RW		377010						
ANR	377574	Symbol	( opline + 1 ) -> op1_type		377010						
ANR	377575	Symbol	IS_CONST		377010						
ANR	377576	Symbol	NULL		377010						
ANR	377577	Symbol	Z_CACHE_SLOT_P		377010						
ANR	377578	Symbol	Z_TYPE_P		377010						
ANR	377579	Symbol	* Z_OBJ_HT_P		377010						
ANR	377580	Symbol	CACHE_ADDR		377010						
ANR	377581	Symbol	* opline		377010						
ANR	377582	Symbol	_get_zval_ptr_var		377010						
ANR	377583	Symbol	Z_OBJ_HT_P		377010						
ANR	377584	Symbol	EX_VAR		377010						
ANR	377585	Symbol	IS_OBJECT		377010						
ANR	377586	Symbol	IS_VAR		377010						
ANR	377587	Symbol	EXPECTED		377010						
ANR	377588	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		377010						
ANR	377589	Symbol	& free_op_data1		377010						
ANR	377590	Symbol	opline -> result . var		377010						
ANR	377591	Symbol	object		377010						
ANR	377592	Symbol	IS_UNUSED		377010						
ANR	377593	Function	zend_binary_assign_op_dim_helper_SPEC_VAR_TMPVAR	21325:0:662606:665108							
ANR	377594	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_VAR_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		377593	0					
ANR	377595	CompoundStatement		21326:0:662754:665108	377593	0					
ANR	377596	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op2 , free_op_data1 ;"	21327:1:662757:662815	377593	0	True				
ANR	377597	IdentifierDecl	free_op1		377593	0					
ANR	377598	IdentifierDeclType	USE_OPLINE zend_free_op		377593	0					
ANR	377599	Identifier	free_op1		377593	1					
ANR	377600	IdentifierDecl	free_op2		377593	1					
ANR	377601	IdentifierDeclType	USE_OPLINE zend_free_op		377593	0					
ANR	377602	Identifier	free_op2		377593	1					
ANR	377603	IdentifierDecl	free_op_data1		377593	2					
ANR	377604	IdentifierDeclType	USE_OPLINE zend_free_op		377593	0					
ANR	377605	Identifier	free_op_data1		377593	1					
ANR	377606	IdentifierDeclStatement	"zval * var_ptr , rv ;"	21329:1:662818:662835	377593	1	True				
ANR	377607	IdentifierDecl	* var_ptr		377593	0					
ANR	377608	IdentifierDeclType	zval *		377593	0					
ANR	377609	Identifier	var_ptr		377593	1					
ANR	377610	IdentifierDecl	rv		377593	1					
ANR	377611	IdentifierDeclType	zval		377593	0					
ANR	377612	Identifier	rv		377593	1					
ANR	377613	IdentifierDeclStatement	"zval * value , * container , * dim ;"	21330:1:662838:662867	377593	2	True				
ANR	377614	IdentifierDecl	* value		377593	0					
ANR	377615	IdentifierDeclType	zval *		377593	0					
ANR	377616	Identifier	value		377593	1					
ANR	377617	IdentifierDecl	* container		377593	1					
ANR	377618	IdentifierDeclType	zval *		377593	0					
ANR	377619	Identifier	container		377593	1					
ANR	377620	IdentifierDecl	* dim		377593	2					
ANR	377621	IdentifierDeclType	zval *		377593	0					
ANR	377622	Identifier	dim		377593	1					
ANR	377623	ExpressionStatement	SAVE_OPLINE ( )	21332:1:662871:662884	377593	3	True				
ANR	377624	CallExpression	SAVE_OPLINE ( )		377593	0					
ANR	377625	Callee	SAVE_OPLINE		377593	0					
ANR	377626	Identifier	SAVE_OPLINE		377593	0					
ANR	377627	ArgumentList			377593	1					
ANR	377628	ExpressionStatement	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	21333:1:662887:662962	377593	4	True				
ANR	377629	AssignmentExpression	"container = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		377593	0		=			
ANR	377630	Identifier	container		377593	0					
ANR	377631	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		377593	1					
ANR	377632	Callee	_get_zval_ptr_ptr_var		377593	0					
ANR	377633	Identifier	_get_zval_ptr_ptr_var		377593	0					
ANR	377634	ArgumentList	opline -> op1 . var		377593	1					
ANR	377635	Argument	opline -> op1 . var		377593	0					
ANR	377636	MemberAccess	opline -> op1 . var		377593	0					
ANR	377637	PtrMemberAccess	opline -> op1		377593	0					
ANR	377638	Identifier	opline		377593	0					
ANR	377639	Identifier	op1		377593	1					
ANR	377640	Identifier	var		377593	1					
ANR	377641	Argument	execute_data		377593	1					
ANR	377642	Identifier	execute_data		377593	0					
ANR	377643	Argument	& free_op1		377593	2					
ANR	377644	UnaryOperationExpression	& free_op1		377593	0					
ANR	377645	UnaryOperator	&		377593	0					
ANR	377646	Identifier	free_op1		377593	1					
ANR	377647	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		377593	5					
ANR	377648	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	21334:5:662969:663029	377593	0	True				
ANR	377649	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		377593	0		&&			
ANR	377650	EqualityExpression	IS_VAR == IS_UNUSED		377593	0		==			
ANR	377651	Identifier	IS_VAR		377593	0					
ANR	377652	Identifier	IS_UNUSED		377593	1					
ANR	377653	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		377593	1					
ANR	377654	Callee	UNEXPECTED		377593	0					
ANR	377655	Identifier	UNEXPECTED		377593	0					
ANR	377656	ArgumentList	Z_OBJ_P ( container ) == NULL		377593	1					
ANR	377657	Argument	Z_OBJ_P ( container ) == NULL		377593	0					
ANR	377658	EqualityExpression	Z_OBJ_P ( container ) == NULL		377593	0		==			
ANR	377659	CallExpression	Z_OBJ_P ( container )		377593	0					
ANR	377660	Callee	Z_OBJ_P		377593	0					
ANR	377661	Identifier	Z_OBJ_P		377593	0					
ANR	377662	ArgumentList	container		377593	1					
ANR	377663	Argument	container		377593	0					
ANR	377664	Identifier	container		377593	0					
ANR	377665	Identifier	NULL		377593	1					
ANR	377666	CompoundStatement		9:68:277:277	377593	1					
ANR	377667	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	21335:2:663036:663100	377593	0	True				
ANR	377668	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		377593	0					
ANR	377669	Callee	zend_throw_error		377593	0					
ANR	377670	Identifier	zend_throw_error		377593	0					
ANR	377671	ArgumentList	NULL		377593	1					
ANR	377672	Argument	NULL		377593	0					
ANR	377673	Identifier	NULL		377593	0					
ANR	377674	Argument	"""Using $this when not in object context"""		377593	1					
ANR	377675	PrimaryExpression	"""Using $this when not in object context"""		377593	0					
ANR	377676	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	21336:2:663104:663164	377593	1	True				
ANR	377677	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		377593	0					
ANR	377678	Callee	FREE_UNFETCHED_OP		377593	0					
ANR	377679	Identifier	FREE_UNFETCHED_OP		377593	0					
ANR	377680	ArgumentList	( opline + 1 ) -> op1_type		377593	1					
ANR	377681	Argument	( opline + 1 ) -> op1_type		377593	0					
ANR	377682	PtrMemberAccess	( opline + 1 ) -> op1_type		377593	0					
ANR	377683	AdditiveExpression	opline + 1		377593	0		+			
ANR	377684	Identifier	opline		377593	0					
ANR	377685	PrimaryExpression	1		377593	1					
ANR	377686	Identifier	op1_type		377593	1					
ANR	377687	Argument	( opline + 1 ) -> op1 . var		377593	1					
ANR	377688	MemberAccess	( opline + 1 ) -> op1 . var		377593	0					
ANR	377689	PtrMemberAccess	( opline + 1 ) -> op1		377593	0					
ANR	377690	AdditiveExpression	opline + 1		377593	0		+			
ANR	377691	Identifier	opline		377593	0					
ANR	377692	PrimaryExpression	1		377593	1					
ANR	377693	Identifier	op1		377593	1					
ANR	377694	Identifier	var		377593	1					
ANR	377695	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	21337:2:663168:663211	377593	2	True				
ANR	377696	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		377593	0					
ANR	377697	Callee	zval_ptr_dtor_nogc		377593	0					
ANR	377698	Identifier	zval_ptr_dtor_nogc		377593	0					
ANR	377699	ArgumentList	EX_VAR ( opline -> op2 . var )		377593	1					
ANR	377700	Argument	EX_VAR ( opline -> op2 . var )		377593	0					
ANR	377701	CallExpression	EX_VAR ( opline -> op2 . var )		377593	0					
ANR	377702	Callee	EX_VAR		377593	0					
ANR	377703	Identifier	EX_VAR		377593	0					
ANR	377704	ArgumentList	opline -> op2 . var		377593	1					
ANR	377705	Argument	opline -> op2 . var		377593	0					
ANR	377706	MemberAccess	opline -> op2 . var		377593	0					
ANR	377707	PtrMemberAccess	opline -> op2		377593	0					
ANR	377708	Identifier	opline		377593	0					
ANR	377709	Identifier	op2		377593	1					
ANR	377710	Identifier	var		377593	1					
ANR	377711	ExpressionStatement	HANDLE_EXCEPTION ( )	21338:2:663215:663233	377593	3	True				
ANR	377712	CallExpression	HANDLE_EXCEPTION ( )		377593	0					
ANR	377713	Callee	HANDLE_EXCEPTION		377593	0					
ANR	377714	Identifier	HANDLE_EXCEPTION		377593	0					
ANR	377715	ArgumentList			377593	1					
ANR	377716	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( container == NULL ) )		377593	6					
ANR	377717	Condition	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )	21340:5:663243:663291	377593	0	True				
ANR	377718	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( container == NULL )		377593	0		&&			
ANR	377719	EqualityExpression	IS_VAR == IS_VAR		377593	0		==			
ANR	377720	Identifier	IS_VAR		377593	0					
ANR	377721	Identifier	IS_VAR		377593	1					
ANR	377722	CallExpression	UNEXPECTED ( container == NULL )		377593	1					
ANR	377723	Callee	UNEXPECTED		377593	0					
ANR	377724	Identifier	UNEXPECTED		377593	0					
ANR	377725	ArgumentList	container == NULL		377593	1					
ANR	377726	Argument	container == NULL		377593	0					
ANR	377727	EqualityExpression	container == NULL		377593	0		==			
ANR	377728	Identifier	container		377593	0					
ANR	377729	Identifier	NULL		377593	1					
ANR	377730	CompoundStatement		15:56:539:539	377593	1					
ANR	377731	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	21341:2:663298:663360	377593	0	True				
ANR	377732	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		377593	0					
ANR	377733	Callee	zend_throw_error		377593	0					
ANR	377734	Identifier	zend_throw_error		377593	0					
ANR	377735	ArgumentList	NULL		377593	1					
ANR	377736	Argument	NULL		377593	0					
ANR	377737	Identifier	NULL		377593	0					
ANR	377738	Argument	"""Cannot use string offset as an array"""		377593	1					
ANR	377739	PrimaryExpression	"""Cannot use string offset as an array"""		377593	0					
ANR	377740	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	21342:2:663364:663424	377593	1	True				
ANR	377741	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		377593	0					
ANR	377742	Callee	FREE_UNFETCHED_OP		377593	0					
ANR	377743	Identifier	FREE_UNFETCHED_OP		377593	0					
ANR	377744	ArgumentList	( opline + 1 ) -> op1_type		377593	1					
ANR	377745	Argument	( opline + 1 ) -> op1_type		377593	0					
ANR	377746	PtrMemberAccess	( opline + 1 ) -> op1_type		377593	0					
ANR	377747	AdditiveExpression	opline + 1		377593	0		+			
ANR	377748	Identifier	opline		377593	0					
ANR	377749	PrimaryExpression	1		377593	1					
ANR	377750	Identifier	op1_type		377593	1					
ANR	377751	Argument	( opline + 1 ) -> op1 . var		377593	1					
ANR	377752	MemberAccess	( opline + 1 ) -> op1 . var		377593	0					
ANR	377753	PtrMemberAccess	( opline + 1 ) -> op1		377593	0					
ANR	377754	AdditiveExpression	opline + 1		377593	0		+			
ANR	377755	Identifier	opline		377593	0					
ANR	377756	PrimaryExpression	1		377593	1					
ANR	377757	Identifier	op1		377593	1					
ANR	377758	Identifier	var		377593	1					
ANR	377759	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	21343:2:663428:663471	377593	2	True				
ANR	377760	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		377593	0					
ANR	377761	Callee	zval_ptr_dtor_nogc		377593	0					
ANR	377762	Identifier	zval_ptr_dtor_nogc		377593	0					
ANR	377763	ArgumentList	EX_VAR ( opline -> op2 . var )		377593	1					
ANR	377764	Argument	EX_VAR ( opline -> op2 . var )		377593	0					
ANR	377765	CallExpression	EX_VAR ( opline -> op2 . var )		377593	0					
ANR	377766	Callee	EX_VAR		377593	0					
ANR	377767	Identifier	EX_VAR		377593	0					
ANR	377768	ArgumentList	opline -> op2 . var		377593	1					
ANR	377769	Argument	opline -> op2 . var		377593	0					
ANR	377770	MemberAccess	opline -> op2 . var		377593	0					
ANR	377771	PtrMemberAccess	opline -> op2		377593	0					
ANR	377772	Identifier	opline		377593	0					
ANR	377773	Identifier	op2		377593	1					
ANR	377774	Identifier	var		377593	1					
ANR	377775	ExpressionStatement	HANDLE_EXCEPTION ( )	21344:2:663475:663493	377593	3	True				
ANR	377776	CallExpression	HANDLE_EXCEPTION ( )		377593	0					
ANR	377777	Callee	HANDLE_EXCEPTION		377593	0					
ANR	377778	Identifier	HANDLE_EXCEPTION		377593	0					
ANR	377779	ArgumentList			377593	1					
ANR	377780	ExpressionStatement	"dim = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	21347:1:663500:663565	377593	7	True				
ANR	377781	AssignmentExpression	"dim = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		377593	0		=			
ANR	377782	Identifier	dim		377593	0					
ANR	377783	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		377593	1					
ANR	377784	Callee	_get_zval_ptr_var		377593	0					
ANR	377785	Identifier	_get_zval_ptr_var		377593	0					
ANR	377786	ArgumentList	opline -> op2 . var		377593	1					
ANR	377787	Argument	opline -> op2 . var		377593	0					
ANR	377788	MemberAccess	opline -> op2 . var		377593	0					
ANR	377789	PtrMemberAccess	opline -> op2		377593	0					
ANR	377790	Identifier	opline		377593	0					
ANR	377791	Identifier	op2		377593	1					
ANR	377792	Identifier	var		377593	1					
ANR	377793	Argument	execute_data		377593	1					
ANR	377794	Identifier	execute_data		377593	0					
ANR	377795	Argument	& free_op2		377593	2					
ANR	377796	UnaryOperationExpression	& free_op2		377593	0					
ANR	377797	UnaryOperator	&		377593	0					
ANR	377798	Identifier	free_op2		377593	1					
ANR	377799	DoStatement	do		377593	8					
ANR	377800	CompoundStatement		24:4:817:817	377593	0					
ANR	377801	IfStatement	if ( IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		377593	0					
ANR	377802	Condition	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	21350:6:663580:663645	377593	0	True				
ANR	377803	OrExpression	IS_VAR == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		377593	0		||			
ANR	377804	EqualityExpression	IS_VAR == IS_UNUSED		377593	0		==			
ANR	377805	Identifier	IS_VAR		377593	0					
ANR	377806	Identifier	IS_UNUSED		377593	1					
ANR	377807	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		377593	1					
ANR	377808	Callee	UNEXPECTED		377593	0					
ANR	377809	Identifier	UNEXPECTED		377593	0					
ANR	377810	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		377593	1					
ANR	377811	Argument	Z_TYPE_P ( container ) != IS_ARRAY		377593	0					
ANR	377812	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		377593	0		!=			
ANR	377813	CallExpression	Z_TYPE_P ( container )		377593	0					
ANR	377814	Callee	Z_TYPE_P		377593	0					
ANR	377815	Identifier	Z_TYPE_P		377593	0					
ANR	377816	ArgumentList	container		377593	1					
ANR	377817	Argument	container		377593	0					
ANR	377818	Identifier	container		377593	0					
ANR	377819	Identifier	IS_ARRAY		377593	1					
ANR	377820	CompoundStatement		25:74:893:893	377593	1					
ANR	377821	IfStatement	if ( IS_VAR != IS_UNUSED )		377593	0					
ANR	377822	Condition	IS_VAR != IS_UNUSED	21351:7:663657:663675	377593	0	True				
ANR	377823	EqualityExpression	IS_VAR != IS_UNUSED		377593	0		!=			
ANR	377824	Identifier	IS_VAR		377593	0					
ANR	377825	Identifier	IS_UNUSED		377593	1					
ANR	377826	CompoundStatement		26:28:923:923	377593	1					
ANR	377827	ExpressionStatement	ZVAL_DEREF ( container )	21352:4:663684:663705	377593	0	True				
ANR	377828	CallExpression	ZVAL_DEREF ( container )		377593	0					
ANR	377829	Callee	ZVAL_DEREF		377593	0					
ANR	377830	Identifier	ZVAL_DEREF		377593	0					
ANR	377831	ArgumentList	container		377593	1					
ANR	377832	Argument	container		377593	0					
ANR	377833	Identifier	container		377593	0					
ANR	377834	IfStatement	if ( IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		377593	1					
ANR	377835	Condition	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	21354:7:663719:663783	377593	0	True				
ANR	377836	OrExpression	IS_VAR == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		377593	0		||			
ANR	377837	EqualityExpression	IS_VAR == IS_UNUSED		377593	0		==			
ANR	377838	Identifier	IS_VAR		377593	0					
ANR	377839	Identifier	IS_UNUSED		377593	1					
ANR	377840	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		377593	1					
ANR	377841	Callee	EXPECTED		377593	0					
ANR	377842	Identifier	EXPECTED		377593	0					
ANR	377843	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		377593	1					
ANR	377844	Argument	Z_TYPE_P ( container ) == IS_OBJECT		377593	0					
ANR	377845	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		377593	0		==			
ANR	377846	CallExpression	Z_TYPE_P ( container )		377593	0					
ANR	377847	Callee	Z_TYPE_P		377593	0					
ANR	377848	Identifier	Z_TYPE_P		377593	0					
ANR	377849	ArgumentList	container		377593	1					
ANR	377850	Argument	container		377593	0					
ANR	377851	Identifier	container		377593	0					
ANR	377852	Identifier	IS_OBJECT		377593	1					
ANR	377853	CompoundStatement		29:74:1031:1031	377593	1					
ANR	377854	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	21355:4:663792:663883	377593	0	True				
ANR	377855	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		377593	0		=			
ANR	377856	Identifier	value		377593	0					
ANR	377857	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		377593	1					
ANR	377858	Callee	get_zval_ptr_r		377593	0					
ANR	377859	Identifier	get_zval_ptr_r		377593	0					
ANR	377860	ArgumentList	( opline + 1 ) -> op1_type		377593	1					
ANR	377861	Argument	( opline + 1 ) -> op1_type		377593	0					
ANR	377862	PtrMemberAccess	( opline + 1 ) -> op1_type		377593	0					
ANR	377863	AdditiveExpression	opline + 1		377593	0		+			
ANR	377864	Identifier	opline		377593	0					
ANR	377865	PrimaryExpression	1		377593	1					
ANR	377866	Identifier	op1_type		377593	1					
ANR	377867	Argument	( opline + 1 ) -> op1		377593	1					
ANR	377868	PtrMemberAccess	( opline + 1 ) -> op1		377593	0					
ANR	377869	AdditiveExpression	opline + 1		377593	0		+			
ANR	377870	Identifier	opline		377593	0					
ANR	377871	PrimaryExpression	1		377593	1					
ANR	377872	Identifier	op1		377593	1					
ANR	377873	Argument	execute_data		377593	2					
ANR	377874	Identifier	execute_data		377593	0					
ANR	377875	Argument	& free_op_data1		377593	3					
ANR	377876	UnaryOperationExpression	& free_op_data1		377593	0					
ANR	377877	UnaryOperator	&		377593	0					
ANR	377878	Identifier	free_op_data1		377593	1					
ANR	377879	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	21356:4:663889:664027	377593	1	True				
ANR	377880	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		377593	0					
ANR	377881	Callee	zend_binary_assign_op_obj_dim		377593	0					
ANR	377882	Identifier	zend_binary_assign_op_obj_dim		377593	0					
ANR	377883	ArgumentList	container		377593	1					
ANR	377884	Argument	container		377593	0					
ANR	377885	Identifier	container		377593	0					
ANR	377886	Argument	dim		377593	1					
ANR	377887	Identifier	dim		377593	0					
ANR	377888	Argument	value		377593	2					
ANR	377889	Identifier	value		377593	0					
ANR	377890	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		377593	3					
ANR	377891	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		377593	0					
ANR	377892	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377593	0					
ANR	377893	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377593	0					
ANR	377894	Callee	UNEXPECTED		377593	0					
ANR	377895	Identifier	UNEXPECTED		377593	0					
ANR	377896	ArgumentList	RETURN_VALUE_USED ( opline )		377593	1					
ANR	377897	Argument	RETURN_VALUE_USED ( opline )		377593	0					
ANR	377898	CallExpression	RETURN_VALUE_USED ( opline )		377593	0					
ANR	377899	Callee	RETURN_VALUE_USED		377593	0					
ANR	377900	Identifier	RETURN_VALUE_USED		377593	0					
ANR	377901	ArgumentList	opline		377593	1					
ANR	377902	Argument	opline		377593	0					
ANR	377903	Identifier	opline		377593	0					
ANR	377904	CallExpression	EX_VAR ( opline -> result . var )		377593	1					
ANR	377905	Callee	EX_VAR		377593	0					
ANR	377906	Identifier	EX_VAR		377593	0					
ANR	377907	ArgumentList	opline -> result . var		377593	1					
ANR	377908	Argument	opline -> result . var		377593	0					
ANR	377909	MemberAccess	opline -> result . var		377593	0					
ANR	377910	PtrMemberAccess	opline -> result		377593	0					
ANR	377911	Identifier	opline		377593	0					
ANR	377912	Identifier	result		377593	1					
ANR	377913	Identifier	var		377593	1					
ANR	377914	Identifier	NULL		377593	2					
ANR	377915	Argument	binary_op		377593	4					
ANR	377916	Identifier	binary_op		377593	0					
ANR	377917	BreakStatement	break ;	21357:4:664033:664038	377593	2	True				
ANR	377918	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , ( IS_TMP_VAR | IS_VAR ) )"	21361:2:664052:664125	377593	1	True				
ANR	377919	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , ( IS_TMP_VAR | IS_VAR ) )"		377593	0					
ANR	377920	Callee	zend_fetch_dimension_address_RW		377593	0					
ANR	377921	Identifier	zend_fetch_dimension_address_RW		377593	0					
ANR	377922	ArgumentList	& rv		377593	1					
ANR	377923	Argument	& rv		377593	0					
ANR	377924	UnaryOperationExpression	& rv		377593	0					
ANR	377925	UnaryOperator	&		377593	0					
ANR	377926	Identifier	rv		377593	1					
ANR	377927	Argument	container		377593	1					
ANR	377928	Identifier	container		377593	0					
ANR	377929	Argument	dim		377593	2					
ANR	377930	Identifier	dim		377593	0					
ANR	377931	Argument	IS_TMP_VAR | IS_VAR		377593	3					
ANR	377932	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		377593	0		|			
ANR	377933	Identifier	IS_TMP_VAR		377593	0					
ANR	377934	Identifier	IS_VAR		377593	1					
ANR	377935	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	21362:2:664129:664220	377593	2	True				
ANR	377936	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		377593	0		=			
ANR	377937	Identifier	value		377593	0					
ANR	377938	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		377593	1					
ANR	377939	Callee	get_zval_ptr_r		377593	0					
ANR	377940	Identifier	get_zval_ptr_r		377593	0					
ANR	377941	ArgumentList	( opline + 1 ) -> op1_type		377593	1					
ANR	377942	Argument	( opline + 1 ) -> op1_type		377593	0					
ANR	377943	PtrMemberAccess	( opline + 1 ) -> op1_type		377593	0					
ANR	377944	AdditiveExpression	opline + 1		377593	0		+			
ANR	377945	Identifier	opline		377593	0					
ANR	377946	PrimaryExpression	1		377593	1					
ANR	377947	Identifier	op1_type		377593	1					
ANR	377948	Argument	( opline + 1 ) -> op1		377593	1					
ANR	377949	PtrMemberAccess	( opline + 1 ) -> op1		377593	0					
ANR	377950	AdditiveExpression	opline + 1		377593	0		+			
ANR	377951	Identifier	opline		377593	0					
ANR	377952	PrimaryExpression	1		377593	1					
ANR	377953	Identifier	op1		377593	1					
ANR	377954	Argument	execute_data		377593	2					
ANR	377955	Identifier	execute_data		377593	0					
ANR	377956	Argument	& free_op_data1		377593	3					
ANR	377957	UnaryOperationExpression	& free_op_data1		377593	0					
ANR	377958	UnaryOperator	&		377593	0					
ANR	377959	Identifier	free_op_data1		377593	1					
ANR	377960	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	21363:2:664224:664262	377593	3	True				
ANR	377961	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		377593	0					
ANR	377962	Callee	ZEND_ASSERT		377593	0					
ANR	377963	Identifier	ZEND_ASSERT		377593	0					
ANR	377964	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		377593	1					
ANR	377965	Argument	Z_TYPE ( rv ) == IS_INDIRECT		377593	0					
ANR	377966	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		377593	0		==			
ANR	377967	CallExpression	Z_TYPE ( rv )		377593	0					
ANR	377968	Callee	Z_TYPE		377593	0					
ANR	377969	Identifier	Z_TYPE		377593	0					
ANR	377970	ArgumentList	rv		377593	1					
ANR	377971	Argument	rv		377593	0					
ANR	377972	Identifier	rv		377593	0					
ANR	377973	Identifier	IS_INDIRECT		377593	1					
ANR	377974	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	21364:2:664266:664290	377593	4	True				
ANR	377975	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		377593	0		=			
ANR	377976	Identifier	var_ptr		377593	0					
ANR	377977	CallExpression	Z_INDIRECT ( rv )		377593	1					
ANR	377978	Callee	Z_INDIRECT		377593	0					
ANR	377979	Identifier	Z_INDIRECT		377593	0					
ANR	377980	ArgumentList	rv		377593	1					
ANR	377981	Argument	rv		377593	0					
ANR	377982	Identifier	rv		377593	0					
ANR	377983	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		377593	5					
ANR	377984	Condition	UNEXPECTED ( var_ptr == NULL )	21366:6:664299:664325	377593	0	True				
ANR	377985	CallExpression	UNEXPECTED ( var_ptr == NULL )		377593	0					
ANR	377986	Callee	UNEXPECTED		377593	0					
ANR	377987	Identifier	UNEXPECTED		377593	0					
ANR	377988	ArgumentList	var_ptr == NULL		377593	1					
ANR	377989	Argument	var_ptr == NULL		377593	0					
ANR	377990	EqualityExpression	var_ptr == NULL		377593	0		==			
ANR	377991	Identifier	var_ptr		377593	0					
ANR	377992	Identifier	NULL		377593	1					
ANR	377993	CompoundStatement		41:35:1573:1573	377593	1					
ANR	377994	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	21367:3:664333:664432	377593	0	True				
ANR	377995	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		377593	0					
ANR	377996	Callee	zend_throw_error		377593	0					
ANR	377997	Identifier	zend_throw_error		377593	0					
ANR	377998	ArgumentList	NULL		377593	1					
ANR	377999	Argument	NULL		377593	0					
ANR	378000	Identifier	NULL		377593	0					
ANR	378001	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		377593	1					
ANR	378002	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		377593	0					
ANR	378003	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21368:3:664437:664465	377593	1	True				
ANR	378004	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		377593	0					
ANR	378005	Callee	zval_ptr_dtor_nogc		377593	0					
ANR	378006	Identifier	zval_ptr_dtor_nogc		377593	0					
ANR	378007	ArgumentList	free_op2		377593	1					
ANR	378008	Argument	free_op2		377593	0					
ANR	378009	Identifier	free_op2		377593	0					
ANR	378010	ExpressionStatement	FREE_OP ( free_op_data1 )	21369:3:664470:664492	377593	2	True				
ANR	378011	CallExpression	FREE_OP ( free_op_data1 )		377593	0					
ANR	378012	Callee	FREE_OP		377593	0					
ANR	378013	Identifier	FREE_OP		377593	0					
ANR	378014	ArgumentList	free_op_data1		377593	1					
ANR	378015	Argument	free_op_data1		377593	0					
ANR	378016	Identifier	free_op_data1		377593	0					
ANR	378017	IfStatement	if ( UNEXPECTED ( free_op1 ) )		377593	3					
ANR	378018	Condition	UNEXPECTED ( free_op1 )	21370:7:664501:664520	377593	0	True				
ANR	378019	CallExpression	UNEXPECTED ( free_op1 )		377593	0					
ANR	378020	Callee	UNEXPECTED		377593	0					
ANR	378021	Identifier	UNEXPECTED		377593	0					
ANR	378022	ArgumentList	free_op1		377593	1					
ANR	378023	Argument	free_op1		377593	0					
ANR	378024	Identifier	free_op1		377593	0					
ANR	378025	CompoundStatement		45:29:1768:1768	377593	1					
ANR	378026	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	21370:30:664524:664552	377593	0	True				
ANR	378027	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		377593	0					
ANR	378028	Callee	zval_ptr_dtor_nogc		377593	0					
ANR	378029	Identifier	zval_ptr_dtor_nogc		377593	0					
ANR	378030	ArgumentList	free_op1		377593	1					
ANR	378031	Argument	free_op1		377593	0					
ANR	378032	Identifier	free_op1		377593	0					
ANR	378033	ExpressionStatement		21370:60:664554:664554	377593	4	True				
ANR	378034	ExpressionStatement	HANDLE_EXCEPTION ( )	21371:3:664559:664577	377593	5	True				
ANR	378035	CallExpression	HANDLE_EXCEPTION ( )		377593	0					
ANR	378036	Callee	HANDLE_EXCEPTION		377593	0					
ANR	378037	Identifier	HANDLE_EXCEPTION		377593	0					
ANR	378038	ArgumentList			377593	1					
ANR	378039	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		377593	6					
ANR	378040	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	21374:6:664590:664627	377593	0	True				
ANR	378041	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		377593	0					
ANR	378042	Callee	UNEXPECTED		377593	0					
ANR	378043	Identifier	UNEXPECTED		377593	0					
ANR	378044	ArgumentList	var_ptr == & EG ( error_zval )		377593	1					
ANR	378045	Argument	var_ptr == & EG ( error_zval )		377593	0					
ANR	378046	EqualityExpression	var_ptr == & EG ( error_zval )		377593	0		==			
ANR	378047	Identifier	var_ptr		377593	0					
ANR	378048	UnaryOperationExpression	& EG ( error_zval )		377593	1					
ANR	378049	UnaryOperator	&		377593	0					
ANR	378050	CallExpression	EG ( error_zval )		377593	1					
ANR	378051	Callee	EG		377593	0					
ANR	378052	Identifier	EG		377593	0					
ANR	378053	ArgumentList	error_zval		377593	1					
ANR	378054	Argument	error_zval		377593	0					
ANR	378055	Identifier	error_zval		377593	0					
ANR	378056	CompoundStatement		49:46:1875:1875	377593	1					
ANR	378057	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		377593	0					
ANR	378058	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21375:7:664639:664675	377593	0	True				
ANR	378059	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377593	0					
ANR	378060	Callee	UNEXPECTED		377593	0					
ANR	378061	Identifier	UNEXPECTED		377593	0					
ANR	378062	ArgumentList	RETURN_VALUE_USED ( opline )		377593	1					
ANR	378063	Argument	RETURN_VALUE_USED ( opline )		377593	0					
ANR	378064	CallExpression	RETURN_VALUE_USED ( opline )		377593	0					
ANR	378065	Callee	RETURN_VALUE_USED		377593	0					
ANR	378066	Identifier	RETURN_VALUE_USED		377593	0					
ANR	378067	ArgumentList	opline		377593	1					
ANR	378068	Argument	opline		377593	0					
ANR	378069	Identifier	opline		377593	0					
ANR	378070	CompoundStatement		50:46:1923:1923	377593	1					
ANR	378071	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	21376:4:664684:664721	377593	0	True				
ANR	378072	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		377593	0					
ANR	378073	Callee	ZVAL_NULL		377593	0					
ANR	378074	Identifier	ZVAL_NULL		377593	0					
ANR	378075	ArgumentList	EX_VAR ( opline -> result . var )		377593	1					
ANR	378076	Argument	EX_VAR ( opline -> result . var )		377593	0					
ANR	378077	CallExpression	EX_VAR ( opline -> result . var )		377593	0					
ANR	378078	Callee	EX_VAR		377593	0					
ANR	378079	Identifier	EX_VAR		377593	0					
ANR	378080	ArgumentList	opline -> result . var		377593	1					
ANR	378081	Argument	opline -> result . var		377593	0					
ANR	378082	MemberAccess	opline -> result . var		377593	0					
ANR	378083	PtrMemberAccess	opline -> result		377593	0					
ANR	378084	Identifier	opline		377593	0					
ANR	378085	Identifier	result		377593	1					
ANR	378086	Identifier	var		377593	1					
ANR	378087	ElseStatement	else		377593	0					
ANR	378088	CompoundStatement		53:9:1982:1982	377593	0					
ANR	378089	ExpressionStatement	ZVAL_DEREF ( var_ptr )	21379:3:664742:664761	377593	0	True				
ANR	378090	CallExpression	ZVAL_DEREF ( var_ptr )		377593	0					
ANR	378091	Callee	ZVAL_DEREF		377593	0					
ANR	378092	Identifier	ZVAL_DEREF		377593	0					
ANR	378093	ArgumentList	var_ptr		377593	1					
ANR	378094	Argument	var_ptr		377593	0					
ANR	378095	Identifier	var_ptr		377593	0					
ANR	378096	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	21380:3:664766:664794	377593	1	True				
ANR	378097	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		377593	0					
ANR	378098	Callee	SEPARATE_ZVAL_NOREF		377593	0					
ANR	378099	Identifier	SEPARATE_ZVAL_NOREF		377593	0					
ANR	378100	ArgumentList	var_ptr		377593	1					
ANR	378101	Argument	var_ptr		377593	0					
ANR	378102	Identifier	var_ptr		377593	0					
ANR	378103	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	21382:3:664800:664834	377593	2	True				
ANR	378104	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		377593	0					
ANR	378105	Callee	binary_op		377593	0					
ANR	378106	Identifier	binary_op		377593	0					
ANR	378107	ArgumentList	var_ptr		377593	1					
ANR	378108	Argument	var_ptr		377593	0					
ANR	378109	Identifier	var_ptr		377593	0					
ANR	378110	Argument	var_ptr		377593	1					
ANR	378111	Identifier	var_ptr		377593	0					
ANR	378112	Argument	value		377593	2					
ANR	378113	Identifier	value		377593	0					
ANR	378114	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		377593	3					
ANR	378115	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21384:7:664844:664880	377593	0	True				
ANR	378116	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		377593	0					
ANR	378117	Callee	UNEXPECTED		377593	0					
ANR	378118	Identifier	UNEXPECTED		377593	0					
ANR	378119	ArgumentList	RETURN_VALUE_USED ( opline )		377593	1					
ANR	378120	Argument	RETURN_VALUE_USED ( opline )		377593	0					
ANR	378121	CallExpression	RETURN_VALUE_USED ( opline )		377593	0					
ANR	378122	Callee	RETURN_VALUE_USED		377593	0					
ANR	378123	Identifier	RETURN_VALUE_USED		377593	0					
ANR	378124	ArgumentList	opline		377593	1					
ANR	378125	Argument	opline		377593	0					
ANR	378126	Identifier	opline		377593	0					
ANR	378127	CompoundStatement		59:46:2128:2128	377593	1					
ANR	378128	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	21385:4:664889:664935	377593	0	True				
ANR	378129	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		377593	0					
ANR	378130	Callee	ZVAL_COPY		377593	0					
ANR	378131	Identifier	ZVAL_COPY		377593	0					
ANR	378132	ArgumentList	EX_VAR ( opline -> result . var )		377593	1					
ANR	378133	Argument	EX_VAR ( opline -> result . var )		377593	0					
ANR	378134	CallExpression	EX_VAR ( opline -> result . var )		377593	0					
ANR	378135	Callee	EX_VAR		377593	0					
ANR	378136	Identifier	EX_VAR		377593	0					
ANR	378137	ArgumentList	opline -> result . var		377593	1					
ANR	378138	Argument	opline -> result . var		377593	0					
ANR	378139	MemberAccess	opline -> result . var		377593	0					
ANR	378140	PtrMemberAccess	opline -> result		377593	0					
ANR	378141	Identifier	opline		377593	0					
ANR	378142	Identifier	result		377593	1					
ANR	378143	Identifier	var		377593	1					
ANR	378144	Argument	var_ptr		377593	1					
ANR	378145	Identifier	var_ptr		377593	0					
ANR	378146	Condition	0	21388:10:664956:664956	377593	1	True				
ANR	378147	PrimaryExpression	0		377593	0					
ANR	378148	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21390:1:664962:664990	377593	9	True				
ANR	378149	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		377593	0					
ANR	378150	Callee	zval_ptr_dtor_nogc		377593	0					
ANR	378151	Identifier	zval_ptr_dtor_nogc		377593	0					
ANR	378152	ArgumentList	free_op2		377593	1					
ANR	378153	Argument	free_op2		377593	0					
ANR	378154	Identifier	free_op2		377593	0					
ANR	378155	ExpressionStatement	FREE_OP ( free_op_data1 )	21391:1:664993:665015	377593	10	True				
ANR	378156	CallExpression	FREE_OP ( free_op_data1 )		377593	0					
ANR	378157	Callee	FREE_OP		377593	0					
ANR	378158	Identifier	FREE_OP		377593	0					
ANR	378159	ArgumentList	free_op_data1		377593	1					
ANR	378160	Argument	free_op_data1		377593	0					
ANR	378161	Identifier	free_op_data1		377593	0					
ANR	378162	IfStatement	if ( UNEXPECTED ( free_op1 ) )		377593	11					
ANR	378163	Condition	UNEXPECTED ( free_op1 )	21392:5:665022:665041	377593	0	True				
ANR	378164	CallExpression	UNEXPECTED ( free_op1 )		377593	0					
ANR	378165	Callee	UNEXPECTED		377593	0					
ANR	378166	Identifier	UNEXPECTED		377593	0					
ANR	378167	ArgumentList	free_op1		377593	1					
ANR	378168	Argument	free_op1		377593	0					
ANR	378169	Identifier	free_op1		377593	0					
ANR	378170	CompoundStatement		67:27:2289:2289	377593	1					
ANR	378171	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	21392:28:665045:665073	377593	0	True				
ANR	378172	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		377593	0					
ANR	378173	Callee	zval_ptr_dtor_nogc		377593	0					
ANR	378174	Identifier	zval_ptr_dtor_nogc		377593	0					
ANR	378175	ArgumentList	free_op1		377593	1					
ANR	378176	Argument	free_op1		377593	0					
ANR	378177	Identifier	free_op1		377593	0					
ANR	378178	ExpressionStatement		21392:58:665075:665075	377593	12	True				
ANR	378179	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	21393:1:665078:665106	377593	13	True				
ANR	378180	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		377593	0					
ANR	378181	Callee	ZEND_VM_NEXT_OPCODE_EX		377593	0					
ANR	378182	Identifier	ZEND_VM_NEXT_OPCODE_EX		377593	0					
ANR	378183	ArgumentList	1		377593	1					
ANR	378184	Argument	1		377593	0					
ANR	378185	PrimaryExpression	1		377593	0					
ANR	378186	Argument	2		377593	1					
ANR	378187	PrimaryExpression	2		377593	0					
ANR	378188	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		377593	1					
ANR	378189	Identifier	zend_binary_assign_op_dim_helper_SPEC_VAR_TMPVAR		377593	2					
ANR	378190	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		377593	3					
ANR	378191	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	21325:94:662700:662751	377593	0	True				
ANR	378192	ParameterType	binary_op_type binary_op		377593	0					
ANR	378193	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		377593	1					
ANR	378194	CFGEntryNode	ENTRY		377593		True				
ANR	378195	CFGExitNode	EXIT		377593		True				
ANR	378196	Symbol	container		377593						
ANR	378197	Symbol	opline -> op1		377593						
ANR	378198	Symbol	opline -> op2		377593						
ANR	378199	Symbol	opline -> op2 . var		377593						
ANR	378200	Symbol	rv		377593						
ANR	378201	Symbol	Z_OBJ_P		377593						
ANR	378202	Symbol	dim		377593						
ANR	378203	Symbol	Z_TYPE		377593						
ANR	378204	Symbol	_get_zval_ptr_ptr_var		377593						
ANR	378205	Symbol	free_op2		377593						
ANR	378206	Symbol	free_op_data1		377593						
ANR	378207	Symbol	& EG		377593						
ANR	378208	Symbol	free_op1		377593						
ANR	378209	Symbol	var_ptr		377593						
ANR	378210	Symbol	execute_data		377593						
ANR	378211	Symbol	opline -> result		377593						
ANR	378212	Symbol	( opline + 1 ) -> op1		377593						
ANR	378213	Symbol	UNEXPECTED		377593						
ANR	378214	Symbol	& free_op2		377593						
ANR	378215	Symbol	RETURN_VALUE_USED		377593						
ANR	378216	Symbol	( opline + 1 ) -> op1 . var		377593						
ANR	378217	Symbol	opline		377593						
ANR	378218	Symbol	get_zval_ptr_r		377593						
ANR	378219	Symbol	Z_INDIRECT		377593						
ANR	378220	Symbol	IS_ARRAY		377593						
ANR	378221	Symbol	opline -> op1 . var		377593						
ANR	378222	Symbol	value		377593						
ANR	378223	Symbol	& free_op1		377593						
ANR	378224	Symbol	binary_op		377593						
ANR	378225	Symbol	IS_TMP_VAR		377593						
ANR	378226	Symbol	( opline + 1 ) -> op1_type		377593						
ANR	378227	Symbol	NULL		377593						
ANR	378228	Symbol	Z_TYPE_P		377593						
ANR	378229	Symbol	& rv		377593						
ANR	378230	Symbol	* opline		377593						
ANR	378231	Symbol	error_zval		377593						
ANR	378232	Symbol	_get_zval_ptr_var		377593						
ANR	378233	Symbol	EX_VAR		377593						
ANR	378234	Symbol	IS_OBJECT		377593						
ANR	378235	Symbol	IS_VAR		377593						
ANR	378236	Symbol	EXPECTED		377593						
ANR	378237	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		377593						
ANR	378238	Symbol	& free_op_data1		377593						
ANR	378239	Symbol	opline -> result . var		377593						
ANR	378240	Symbol	IS_UNUSED		377593						
ANR	378241	Symbol	IS_INDIRECT		377593						
ANR	378242	Function	zend_binary_assign_op_helper_SPEC_VAR_TMPVAR	21396:0:665111:666216							
ANR	378243	FunctionDef	zend_binary_assign_op_helper_SPEC_VAR_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		378242	0					
ANR	378244	CompoundStatement		21397:0:665255:666216	378242	0					
ANR	378245	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op2 ;"	21398:1:665258:665301	378242	0	True				
ANR	378246	IdentifierDecl	free_op1		378242	0					
ANR	378247	IdentifierDeclType	USE_OPLINE zend_free_op		378242	0					
ANR	378248	Identifier	free_op1		378242	1					
ANR	378249	IdentifierDecl	free_op2		378242	1					
ANR	378250	IdentifierDeclType	USE_OPLINE zend_free_op		378242	0					
ANR	378251	Identifier	free_op2		378242	1					
ANR	378252	IdentifierDeclStatement	zval * var_ptr ;	21400:1:665304:665317	378242	1	True				
ANR	378253	IdentifierDecl	* var_ptr		378242	0					
ANR	378254	IdentifierDeclType	zval *		378242	0					
ANR	378255	Identifier	var_ptr		378242	1					
ANR	378256	IdentifierDeclStatement	zval * value ;	21401:1:665320:665331	378242	2	True				
ANR	378257	IdentifierDecl	* value		378242	0					
ANR	378258	IdentifierDeclType	zval *		378242	0					
ANR	378259	Identifier	value		378242	1					
ANR	378260	ExpressionStatement	SAVE_OPLINE ( )	21403:1:665335:665348	378242	3	True				
ANR	378261	CallExpression	SAVE_OPLINE ( )		378242	0					
ANR	378262	Callee	SAVE_OPLINE		378242	0					
ANR	378263	Identifier	SAVE_OPLINE		378242	0					
ANR	378264	ArgumentList			378242	1					
ANR	378265	ExpressionStatement	"value = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	21404:1:665351:665418	378242	4	True				
ANR	378266	AssignmentExpression	"value = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		378242	0		=			
ANR	378267	Identifier	value		378242	0					
ANR	378268	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		378242	1					
ANR	378269	Callee	_get_zval_ptr_var		378242	0					
ANR	378270	Identifier	_get_zval_ptr_var		378242	0					
ANR	378271	ArgumentList	opline -> op2 . var		378242	1					
ANR	378272	Argument	opline -> op2 . var		378242	0					
ANR	378273	MemberAccess	opline -> op2 . var		378242	0					
ANR	378274	PtrMemberAccess	opline -> op2		378242	0					
ANR	378275	Identifier	opline		378242	0					
ANR	378276	Identifier	op2		378242	1					
ANR	378277	Identifier	var		378242	1					
ANR	378278	Argument	execute_data		378242	1					
ANR	378279	Identifier	execute_data		378242	0					
ANR	378280	Argument	& free_op2		378242	2					
ANR	378281	UnaryOperationExpression	& free_op2		378242	0					
ANR	378282	UnaryOperator	&		378242	0					
ANR	378283	Identifier	free_op2		378242	1					
ANR	378284	ExpressionStatement	"var_ptr = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	21405:1:665421:665494	378242	5	True				
ANR	378285	AssignmentExpression	"var_ptr = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		378242	0		=			
ANR	378286	Identifier	var_ptr		378242	0					
ANR	378287	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		378242	1					
ANR	378288	Callee	_get_zval_ptr_ptr_var		378242	0					
ANR	378289	Identifier	_get_zval_ptr_ptr_var		378242	0					
ANR	378290	ArgumentList	opline -> op1 . var		378242	1					
ANR	378291	Argument	opline -> op1 . var		378242	0					
ANR	378292	MemberAccess	opline -> op1 . var		378242	0					
ANR	378293	PtrMemberAccess	opline -> op1		378242	0					
ANR	378294	Identifier	opline		378242	0					
ANR	378295	Identifier	op1		378242	1					
ANR	378296	Identifier	var		378242	1					
ANR	378297	Argument	execute_data		378242	1					
ANR	378298	Identifier	execute_data		378242	0					
ANR	378299	Argument	& free_op1		378242	2					
ANR	378300	UnaryOperationExpression	& free_op1		378242	0					
ANR	378301	UnaryOperator	&		378242	0					
ANR	378302	Identifier	free_op1		378242	1					
ANR	378303	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL ) )		378242	6					
ANR	378304	Condition	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL )	21407:5:665502:665548	378242	0	True				
ANR	378305	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == NULL )		378242	0		&&			
ANR	378306	EqualityExpression	IS_VAR == IS_VAR		378242	0		==			
ANR	378307	Identifier	IS_VAR		378242	0					
ANR	378308	Identifier	IS_VAR		378242	1					
ANR	378309	CallExpression	UNEXPECTED ( var_ptr == NULL )		378242	1					
ANR	378310	Callee	UNEXPECTED		378242	0					
ANR	378311	Identifier	UNEXPECTED		378242	0					
ANR	378312	ArgumentList	var_ptr == NULL		378242	1					
ANR	378313	Argument	var_ptr == NULL		378242	0					
ANR	378314	EqualityExpression	var_ptr == NULL		378242	0		==			
ANR	378315	Identifier	var_ptr		378242	0					
ANR	378316	Identifier	NULL		378242	1					
ANR	378317	CompoundStatement		11:54:295:295	378242	1					
ANR	378318	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	21408:2:665555:665654	378242	0	True				
ANR	378319	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		378242	0					
ANR	378320	Callee	zend_throw_error		378242	0					
ANR	378321	Identifier	zend_throw_error		378242	0					
ANR	378322	ArgumentList	NULL		378242	1					
ANR	378323	Argument	NULL		378242	0					
ANR	378324	Identifier	NULL		378242	0					
ANR	378325	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		378242	1					
ANR	378326	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		378242	0					
ANR	378327	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21409:2:665658:665686	378242	1	True				
ANR	378328	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		378242	0					
ANR	378329	Callee	zval_ptr_dtor_nogc		378242	0					
ANR	378330	Identifier	zval_ptr_dtor_nogc		378242	0					
ANR	378331	ArgumentList	free_op2		378242	1					
ANR	378332	Argument	free_op2		378242	0					
ANR	378333	Identifier	free_op2		378242	0					
ANR	378334	ExpressionStatement	HANDLE_EXCEPTION ( )	21410:2:665690:665708	378242	2	True				
ANR	378335	CallExpression	HANDLE_EXCEPTION ( )		378242	0					
ANR	378336	Callee	HANDLE_EXCEPTION		378242	0					
ANR	378337	Identifier	HANDLE_EXCEPTION		378242	0					
ANR	378338	ArgumentList			378242	1					
ANR	378339	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		378242	7					
ANR	378340	Condition	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )	21413:5:665719:665776	378242	0	True				
ANR	378341	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )		378242	0		&&			
ANR	378342	EqualityExpression	IS_VAR == IS_VAR		378242	0		==			
ANR	378343	Identifier	IS_VAR		378242	0					
ANR	378344	Identifier	IS_VAR		378242	1					
ANR	378345	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		378242	1					
ANR	378346	Callee	UNEXPECTED		378242	0					
ANR	378347	Identifier	UNEXPECTED		378242	0					
ANR	378348	ArgumentList	var_ptr == & EG ( error_zval )		378242	1					
ANR	378349	Argument	var_ptr == & EG ( error_zval )		378242	0					
ANR	378350	EqualityExpression	var_ptr == & EG ( error_zval )		378242	0		==			
ANR	378351	Identifier	var_ptr		378242	0					
ANR	378352	UnaryOperationExpression	& EG ( error_zval )		378242	1					
ANR	378353	UnaryOperator	&		378242	0					
ANR	378354	CallExpression	EG ( error_zval )		378242	1					
ANR	378355	Callee	EG		378242	0					
ANR	378356	Identifier	EG		378242	0					
ANR	378357	ArgumentList	error_zval		378242	1					
ANR	378358	Argument	error_zval		378242	0					
ANR	378359	Identifier	error_zval		378242	0					
ANR	378360	CompoundStatement		17:65:523:523	378242	1					
ANR	378361	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		378242	0					
ANR	378362	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21414:6:665787:665823	378242	0	True				
ANR	378363	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		378242	0					
ANR	378364	Callee	UNEXPECTED		378242	0					
ANR	378365	Identifier	UNEXPECTED		378242	0					
ANR	378366	ArgumentList	RETURN_VALUE_USED ( opline )		378242	1					
ANR	378367	Argument	RETURN_VALUE_USED ( opline )		378242	0					
ANR	378368	CallExpression	RETURN_VALUE_USED ( opline )		378242	0					
ANR	378369	Callee	RETURN_VALUE_USED		378242	0					
ANR	378370	Identifier	RETURN_VALUE_USED		378242	0					
ANR	378371	ArgumentList	opline		378242	1					
ANR	378372	Argument	opline		378242	0					
ANR	378373	Identifier	opline		378242	0					
ANR	378374	CompoundStatement		18:45:570:570	378242	1					
ANR	378375	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	21415:3:665831:665868	378242	0	True				
ANR	378376	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		378242	0					
ANR	378377	Callee	ZVAL_NULL		378242	0					
ANR	378378	Identifier	ZVAL_NULL		378242	0					
ANR	378379	ArgumentList	EX_VAR ( opline -> result . var )		378242	1					
ANR	378380	Argument	EX_VAR ( opline -> result . var )		378242	0					
ANR	378381	CallExpression	EX_VAR ( opline -> result . var )		378242	0					
ANR	378382	Callee	EX_VAR		378242	0					
ANR	378383	Identifier	EX_VAR		378242	0					
ANR	378384	ArgumentList	opline -> result . var		378242	1					
ANR	378385	Argument	opline -> result . var		378242	0					
ANR	378386	MemberAccess	opline -> result . var		378242	0					
ANR	378387	PtrMemberAccess	opline -> result		378242	0					
ANR	378388	Identifier	opline		378242	0					
ANR	378389	Identifier	result		378242	1					
ANR	378390	Identifier	var		378242	1					
ANR	378391	ElseStatement	else		378242	0					
ANR	378392	CompoundStatement		21:8:626:626	378242	0					
ANR	378393	ExpressionStatement	ZVAL_DEREF ( var_ptr )	21418:2:665886:665905	378242	0	True				
ANR	378394	CallExpression	ZVAL_DEREF ( var_ptr )		378242	0					
ANR	378395	Callee	ZVAL_DEREF		378242	0					
ANR	378396	Identifier	ZVAL_DEREF		378242	0					
ANR	378397	ArgumentList	var_ptr		378242	1					
ANR	378398	Argument	var_ptr		378242	0					
ANR	378399	Identifier	var_ptr		378242	0					
ANR	378400	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	21419:2:665909:665937	378242	1	True				
ANR	378401	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		378242	0					
ANR	378402	Callee	SEPARATE_ZVAL_NOREF		378242	0					
ANR	378403	Identifier	SEPARATE_ZVAL_NOREF		378242	0					
ANR	378404	ArgumentList	var_ptr		378242	1					
ANR	378405	Argument	var_ptr		378242	0					
ANR	378406	Identifier	var_ptr		378242	0					
ANR	378407	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	21421:2:665942:665976	378242	2	True				
ANR	378408	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		378242	0					
ANR	378409	Callee	binary_op		378242	0					
ANR	378410	Identifier	binary_op		378242	0					
ANR	378411	ArgumentList	var_ptr		378242	1					
ANR	378412	Argument	var_ptr		378242	0					
ANR	378413	Identifier	var_ptr		378242	0					
ANR	378414	Argument	var_ptr		378242	1					
ANR	378415	Identifier	var_ptr		378242	0					
ANR	378416	Argument	value		378242	2					
ANR	378417	Identifier	value		378242	0					
ANR	378418	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		378242	3					
ANR	378419	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21423:6:665985:666021	378242	0	True				
ANR	378420	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		378242	0					
ANR	378421	Callee	UNEXPECTED		378242	0					
ANR	378422	Identifier	UNEXPECTED		378242	0					
ANR	378423	ArgumentList	RETURN_VALUE_USED ( opline )		378242	1					
ANR	378424	Argument	RETURN_VALUE_USED ( opline )		378242	0					
ANR	378425	CallExpression	RETURN_VALUE_USED ( opline )		378242	0					
ANR	378426	Callee	RETURN_VALUE_USED		378242	0					
ANR	378427	Identifier	RETURN_VALUE_USED		378242	0					
ANR	378428	ArgumentList	opline		378242	1					
ANR	378429	Argument	opline		378242	0					
ANR	378430	Identifier	opline		378242	0					
ANR	378431	CompoundStatement		27:45:768:768	378242	1					
ANR	378432	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	21424:3:666029:666075	378242	0	True				
ANR	378433	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		378242	0					
ANR	378434	Callee	ZVAL_COPY		378242	0					
ANR	378435	Identifier	ZVAL_COPY		378242	0					
ANR	378436	ArgumentList	EX_VAR ( opline -> result . var )		378242	1					
ANR	378437	Argument	EX_VAR ( opline -> result . var )		378242	0					
ANR	378438	CallExpression	EX_VAR ( opline -> result . var )		378242	0					
ANR	378439	Callee	EX_VAR		378242	0					
ANR	378440	Identifier	EX_VAR		378242	0					
ANR	378441	ArgumentList	opline -> result . var		378242	1					
ANR	378442	Argument	opline -> result . var		378242	0					
ANR	378443	MemberAccess	opline -> result . var		378242	0					
ANR	378444	PtrMemberAccess	opline -> result		378242	0					
ANR	378445	Identifier	opline		378242	0					
ANR	378446	Identifier	result		378242	1					
ANR	378447	Identifier	var		378242	1					
ANR	378448	Argument	var_ptr		378242	1					
ANR	378449	Identifier	var_ptr		378242	0					
ANR	378450	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21428:1:666086:666114	378242	8	True				
ANR	378451	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		378242	0					
ANR	378452	Callee	zval_ptr_dtor_nogc		378242	0					
ANR	378453	Identifier	zval_ptr_dtor_nogc		378242	0					
ANR	378454	ArgumentList	free_op2		378242	1					
ANR	378455	Argument	free_op2		378242	0					
ANR	378456	Identifier	free_op2		378242	0					
ANR	378457	IfStatement	if ( UNEXPECTED ( free_op1 ) )		378242	9					
ANR	378458	Condition	UNEXPECTED ( free_op1 )	21429:5:666121:666140	378242	0	True				
ANR	378459	CallExpression	UNEXPECTED ( free_op1 )		378242	0					
ANR	378460	Callee	UNEXPECTED		378242	0					
ANR	378461	Identifier	UNEXPECTED		378242	0					
ANR	378462	ArgumentList	free_op1		378242	1					
ANR	378463	Argument	free_op1		378242	0					
ANR	378464	Identifier	free_op1		378242	0					
ANR	378465	CompoundStatement		33:27:887:887	378242	1					
ANR	378466	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	21429:28:666144:666172	378242	0	True				
ANR	378467	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		378242	0					
ANR	378468	Callee	zval_ptr_dtor_nogc		378242	0					
ANR	378469	Identifier	zval_ptr_dtor_nogc		378242	0					
ANR	378470	ArgumentList	free_op1		378242	1					
ANR	378471	Argument	free_op1		378242	0					
ANR	378472	Identifier	free_op1		378242	0					
ANR	378473	ExpressionStatement		21429:58:666174:666174	378242	10	True				
ANR	378474	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	21430:1:666177:666214	378242	11	True				
ANR	378475	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		378242	0					
ANR	378476	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		378242	0					
ANR	378477	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		378242	0					
ANR	378478	ArgumentList			378242	1					
ANR	378479	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		378242	1					
ANR	378480	Identifier	zend_binary_assign_op_helper_SPEC_VAR_TMPVAR		378242	2					
ANR	378481	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		378242	3					
ANR	378482	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	21396:90:665201:665252	378242	0	True				
ANR	378483	ParameterType	binary_op_type binary_op		378242	0					
ANR	378484	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		378242	1					
ANR	378485	CFGEntryNode	ENTRY		378242		True				
ANR	378486	CFGExitNode	EXIT		378242		True				
ANR	378487	Symbol	opline -> op1		378242						
ANR	378488	Symbol	opline -> op2		378242						
ANR	378489	Symbol	opline -> op2 . var		378242						
ANR	378490	Symbol	_get_zval_ptr_ptr_var		378242						
ANR	378491	Symbol	free_op2		378242						
ANR	378492	Symbol	& EG		378242						
ANR	378493	Symbol	free_op1		378242						
ANR	378494	Symbol	var_ptr		378242						
ANR	378495	Symbol	execute_data		378242						
ANR	378496	Symbol	opline -> result		378242						
ANR	378497	Symbol	& free_op2		378242						
ANR	378498	Symbol	UNEXPECTED		378242						
ANR	378499	Symbol	RETURN_VALUE_USED		378242						
ANR	378500	Symbol	opline		378242						
ANR	378501	Symbol	opline -> op1 . var		378242						
ANR	378502	Symbol	value		378242						
ANR	378503	Symbol	& free_op1		378242						
ANR	378504	Symbol	NULL		378242						
ANR	378505	Symbol	* opline		378242						
ANR	378506	Symbol	error_zval		378242						
ANR	378507	Symbol	_get_zval_ptr_var		378242						
ANR	378508	Symbol	EX_VAR		378242						
ANR	378509	Symbol	IS_VAR		378242						
ANR	378510	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		378242						
ANR	378511	Symbol	opline -> result . var		378242						
ANR	378512	Function	zend_pre_incdec_property_helper_SPEC_VAR_TMPVAR	21673:0:677120:679398							
ANR	378513	FunctionDef	zend_pre_incdec_property_helper_SPEC_VAR_TMPVAR (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		378512	0					
ANR	378514	CompoundStatement		21674:0:677250:679398	378512	0					
ANR	378515	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op2 ;"	21675:1:677253:677296	378512	0	True				
ANR	378516	IdentifierDecl	free_op1		378512	0					
ANR	378517	IdentifierDeclType	USE_OPLINE zend_free_op		378512	0					
ANR	378518	Identifier	free_op1		378512	1					
ANR	378519	IdentifierDecl	free_op2		378512	1					
ANR	378520	IdentifierDeclType	USE_OPLINE zend_free_op		378512	0					
ANR	378521	Identifier	free_op2		378512	1					
ANR	378522	IdentifierDeclStatement	zval * object ;	21677:1:677299:677311	378512	1	True				
ANR	378523	IdentifierDecl	* object		378512	0					
ANR	378524	IdentifierDeclType	zval *		378512	0					
ANR	378525	Identifier	object		378512	1					
ANR	378526	IdentifierDeclStatement	zval * property ;	21678:1:677314:677328	378512	2	True				
ANR	378527	IdentifierDecl	* property		378512	0					
ANR	378528	IdentifierDeclType	zval *		378512	0					
ANR	378529	Identifier	property		378512	1					
ANR	378530	IdentifierDeclStatement	zval * zptr ;	21679:1:677331:677341	378512	3	True				
ANR	378531	IdentifierDecl	* zptr		378512	0					
ANR	378532	IdentifierDeclType	zval *		378512	0					
ANR	378533	Identifier	zptr		378512	1					
ANR	378534	ExpressionStatement	SAVE_OPLINE ( )	21681:1:677345:677358	378512	4	True				
ANR	378535	CallExpression	SAVE_OPLINE ( )		378512	0					
ANR	378536	Callee	SAVE_OPLINE		378512	0					
ANR	378537	Identifier	SAVE_OPLINE		378512	0					
ANR	378538	ArgumentList			378512	1					
ANR	378539	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	21682:1:677361:677433	378512	5	True				
ANR	378540	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		378512	0		=			
ANR	378541	Identifier	object		378512	0					
ANR	378542	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		378512	1					
ANR	378543	Callee	_get_zval_ptr_ptr_var		378512	0					
ANR	378544	Identifier	_get_zval_ptr_ptr_var		378512	0					
ANR	378545	ArgumentList	opline -> op1 . var		378512	1					
ANR	378546	Argument	opline -> op1 . var		378512	0					
ANR	378547	MemberAccess	opline -> op1 . var		378512	0					
ANR	378548	PtrMemberAccess	opline -> op1		378512	0					
ANR	378549	Identifier	opline		378512	0					
ANR	378550	Identifier	op1		378512	1					
ANR	378551	Identifier	var		378512	1					
ANR	378552	Argument	execute_data		378512	1					
ANR	378553	Identifier	execute_data		378512	0					
ANR	378554	Argument	& free_op1		378512	2					
ANR	378555	UnaryOperationExpression	& free_op1		378512	0					
ANR	378556	UnaryOperator	&		378512	0					
ANR	378557	Identifier	free_op1		378512	1					
ANR	378558	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		378512	6					
ANR	378559	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	21684:5:677441:677498	378512	0	True				
ANR	378560	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		378512	0		&&			
ANR	378561	EqualityExpression	IS_VAR == IS_UNUSED		378512	0		==			
ANR	378562	Identifier	IS_VAR		378512	0					
ANR	378563	Identifier	IS_UNUSED		378512	1					
ANR	378564	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		378512	1					
ANR	378565	Callee	UNEXPECTED		378512	0					
ANR	378566	Identifier	UNEXPECTED		378512	0					
ANR	378567	ArgumentList	Z_OBJ_P ( object ) == NULL		378512	1					
ANR	378568	Argument	Z_OBJ_P ( object ) == NULL		378512	0					
ANR	378569	EqualityExpression	Z_OBJ_P ( object ) == NULL		378512	0		==			
ANR	378570	CallExpression	Z_OBJ_P ( object )		378512	0					
ANR	378571	Callee	Z_OBJ_P		378512	0					
ANR	378572	Identifier	Z_OBJ_P		378512	0					
ANR	378573	ArgumentList	object		378512	1					
ANR	378574	Argument	object		378512	0					
ANR	378575	Identifier	object		378512	0					
ANR	378576	Identifier	NULL		378512	1					
ANR	378577	CompoundStatement		11:65:250:250	378512	1					
ANR	378578	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	21685:2:677505:677569	378512	0	True				
ANR	378579	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		378512	0					
ANR	378580	Callee	zend_throw_error		378512	0					
ANR	378581	Identifier	zend_throw_error		378512	0					
ANR	378582	ArgumentList	NULL		378512	1					
ANR	378583	Argument	NULL		378512	0					
ANR	378584	Identifier	NULL		378512	0					
ANR	378585	Argument	"""Using $this when not in object context"""		378512	1					
ANR	378586	PrimaryExpression	"""Using $this when not in object context"""		378512	0					
ANR	378587	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	21686:2:677573:677616	378512	1	True				
ANR	378588	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		378512	0					
ANR	378589	Callee	zval_ptr_dtor_nogc		378512	0					
ANR	378590	Identifier	zval_ptr_dtor_nogc		378512	0					
ANR	378591	ArgumentList	EX_VAR ( opline -> op2 . var )		378512	1					
ANR	378592	Argument	EX_VAR ( opline -> op2 . var )		378512	0					
ANR	378593	CallExpression	EX_VAR ( opline -> op2 . var )		378512	0					
ANR	378594	Callee	EX_VAR		378512	0					
ANR	378595	Identifier	EX_VAR		378512	0					
ANR	378596	ArgumentList	opline -> op2 . var		378512	1					
ANR	378597	Argument	opline -> op2 . var		378512	0					
ANR	378598	MemberAccess	opline -> op2 . var		378512	0					
ANR	378599	PtrMemberAccess	opline -> op2		378512	0					
ANR	378600	Identifier	opline		378512	0					
ANR	378601	Identifier	op2		378512	1					
ANR	378602	Identifier	var		378512	1					
ANR	378603	ExpressionStatement	HANDLE_EXCEPTION ( )	21687:2:677620:677638	378512	2	True				
ANR	378604	CallExpression	HANDLE_EXCEPTION ( )		378512	0					
ANR	378605	Callee	HANDLE_EXCEPTION		378512	0					
ANR	378606	Identifier	HANDLE_EXCEPTION		378512	0					
ANR	378607	ArgumentList			378512	1					
ANR	378608	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	21690:1:677645:677715	378512	7	True				
ANR	378609	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		378512	0		=			
ANR	378610	Identifier	property		378512	0					
ANR	378611	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		378512	1					
ANR	378612	Callee	_get_zval_ptr_var		378512	0					
ANR	378613	Identifier	_get_zval_ptr_var		378512	0					
ANR	378614	ArgumentList	opline -> op2 . var		378512	1					
ANR	378615	Argument	opline -> op2 . var		378512	0					
ANR	378616	MemberAccess	opline -> op2 . var		378512	0					
ANR	378617	PtrMemberAccess	opline -> op2		378512	0					
ANR	378618	Identifier	opline		378512	0					
ANR	378619	Identifier	op2		378512	1					
ANR	378620	Identifier	var		378512	1					
ANR	378621	Argument	execute_data		378512	1					
ANR	378622	Identifier	execute_data		378512	0					
ANR	378623	Argument	& free_op2		378512	2					
ANR	378624	UnaryOperationExpression	& free_op2		378512	0					
ANR	378625	UnaryOperator	&		378512	0					
ANR	378626	Identifier	free_op2		378512	1					
ANR	378627	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		378512	8					
ANR	378628	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	21692:5:677723:677768	378512	0	True				
ANR	378629	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		378512	0		&&			
ANR	378630	EqualityExpression	IS_VAR == IS_VAR		378512	0		==			
ANR	378631	Identifier	IS_VAR		378512	0					
ANR	378632	Identifier	IS_VAR		378512	1					
ANR	378633	CallExpression	UNEXPECTED ( object == NULL )		378512	1					
ANR	378634	Callee	UNEXPECTED		378512	0					
ANR	378635	Identifier	UNEXPECTED		378512	0					
ANR	378636	ArgumentList	object == NULL		378512	1					
ANR	378637	Argument	object == NULL		378512	0					
ANR	378638	EqualityExpression	object == NULL		378512	0		==			
ANR	378639	Identifier	object		378512	0					
ANR	378640	Identifier	NULL		378512	1					
ANR	378641	CompoundStatement		19:53:520:520	378512	1					
ANR	378642	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	21693:2:677775:677865	378512	0	True				
ANR	378643	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		378512	0					
ANR	378644	Callee	zend_throw_error		378512	0					
ANR	378645	Identifier	zend_throw_error		378512	0					
ANR	378646	ArgumentList	NULL		378512	1					
ANR	378647	Argument	NULL		378512	0					
ANR	378648	Identifier	NULL		378512	0					
ANR	378649	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		378512	1					
ANR	378650	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		378512	0					
ANR	378651	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21694:2:677869:677897	378512	1	True				
ANR	378652	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		378512	0					
ANR	378653	Callee	zval_ptr_dtor_nogc		378512	0					
ANR	378654	Identifier	zval_ptr_dtor_nogc		378512	0					
ANR	378655	ArgumentList	free_op2		378512	1					
ANR	378656	Argument	free_op2		378512	0					
ANR	378657	Identifier	free_op2		378512	0					
ANR	378658	ExpressionStatement	HANDLE_EXCEPTION ( )	21695:2:677901:677919	378512	2	True				
ANR	378659	CallExpression	HANDLE_EXCEPTION ( )		378512	0					
ANR	378660	Callee	HANDLE_EXCEPTION		378512	0					
ANR	378661	Identifier	HANDLE_EXCEPTION		378512	0					
ANR	378662	ArgumentList			378512	1					
ANR	378663	DoStatement	do		378512	9					
ANR	378664	CompoundStatement		25:4:678:678	378512	0					
ANR	378665	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		378512	0					
ANR	378666	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	21699:6:677937:678000	378512	0	True				
ANR	378667	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		378512	0		&&			
ANR	378668	EqualityExpression	IS_VAR != IS_UNUSED		378512	0		!=			
ANR	378669	Identifier	IS_VAR		378512	0					
ANR	378670	Identifier	IS_UNUSED		378512	1					
ANR	378671	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		378512	1					
ANR	378672	Callee	UNEXPECTED		378512	0					
ANR	378673	Identifier	UNEXPECTED		378512	0					
ANR	378674	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		378512	1					
ANR	378675	Argument	Z_TYPE_P ( object ) != IS_OBJECT		378512	0					
ANR	378676	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		378512	0		!=			
ANR	378677	CallExpression	Z_TYPE_P ( object )		378512	0					
ANR	378678	Callee	Z_TYPE_P		378512	0					
ANR	378679	Identifier	Z_TYPE_P		378512	0					
ANR	378680	ArgumentList	object		378512	1					
ANR	378681	Argument	object		378512	0					
ANR	378682	Identifier	object		378512	0					
ANR	378683	Identifier	IS_OBJECT		378512	1					
ANR	378684	CompoundStatement		26:72:752:752	378512	1					
ANR	378685	ExpressionStatement	ZVAL_DEREF ( object )	21700:3:678008:678026	378512	0	True				
ANR	378686	CallExpression	ZVAL_DEREF ( object )		378512	0					
ANR	378687	Callee	ZVAL_DEREF		378512	0					
ANR	378688	Identifier	ZVAL_DEREF		378512	0					
ANR	378689	ArgumentList	object		378512	1					
ANR	378690	Argument	object		378512	0					
ANR	378691	Identifier	object		378512	0					
ANR	378692	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		378512	1					
ANR	378693	Condition	UNEXPECTED ( ! make_real_object ( object ) )	21701:7:678035:678071	378512	0	True				
ANR	378694	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		378512	0					
ANR	378695	Callee	UNEXPECTED		378512	0					
ANR	378696	Identifier	UNEXPECTED		378512	0					
ANR	378697	ArgumentList	! make_real_object ( object )		378512	1					
ANR	378698	Argument	! make_real_object ( object )		378512	0					
ANR	378699	UnaryOperationExpression	! make_real_object ( object )		378512	0					
ANR	378700	UnaryOperator	!		378512	0					
ANR	378701	CallExpression	make_real_object ( object )		378512	1					
ANR	378702	Callee	make_real_object		378512	0					
ANR	378703	Identifier	make_real_object		378512	0					
ANR	378704	ArgumentList	object		378512	1					
ANR	378705	Argument	object		378512	0					
ANR	378706	Identifier	object		378512	0					
ANR	378707	CompoundStatement		28:46:823:823	378512	1					
ANR	378708	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	21702:4:678080:678158	378512	0	True				
ANR	378709	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		378512	0					
ANR	378710	Callee	zend_error		378512	0					
ANR	378711	Identifier	zend_error		378512	0					
ANR	378712	ArgumentList	E_WARNING		378512	1					
ANR	378713	Argument	E_WARNING		378512	0					
ANR	378714	Identifier	E_WARNING		378512	0					
ANR	378715	Argument	"""Attempt to increment/decrement property of non-object"""		378512	1					
ANR	378716	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		378512	0					
ANR	378717	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		378512	1					
ANR	378718	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21703:8:678168:678204	378512	0	True				
ANR	378719	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		378512	0					
ANR	378720	Callee	UNEXPECTED		378512	0					
ANR	378721	Identifier	UNEXPECTED		378512	0					
ANR	378722	ArgumentList	RETURN_VALUE_USED ( opline )		378512	1					
ANR	378723	Argument	RETURN_VALUE_USED ( opline )		378512	0					
ANR	378724	CallExpression	RETURN_VALUE_USED ( opline )		378512	0					
ANR	378725	Callee	RETURN_VALUE_USED		378512	0					
ANR	378726	Identifier	RETURN_VALUE_USED		378512	0					
ANR	378727	ArgumentList	opline		378512	1					
ANR	378728	Argument	opline		378512	0					
ANR	378729	Identifier	opline		378512	0					
ANR	378730	CompoundStatement		30:47:956:956	378512	1					
ANR	378731	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	21704:5:678214:678251	378512	0	True				
ANR	378732	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		378512	0					
ANR	378733	Callee	ZVAL_NULL		378512	0					
ANR	378734	Identifier	ZVAL_NULL		378512	0					
ANR	378735	ArgumentList	EX_VAR ( opline -> result . var )		378512	1					
ANR	378736	Argument	EX_VAR ( opline -> result . var )		378512	0					
ANR	378737	CallExpression	EX_VAR ( opline -> result . var )		378512	0					
ANR	378738	Callee	EX_VAR		378512	0					
ANR	378739	Identifier	EX_VAR		378512	0					
ANR	378740	ArgumentList	opline -> result . var		378512	1					
ANR	378741	Argument	opline -> result . var		378512	0					
ANR	378742	MemberAccess	opline -> result . var		378512	0					
ANR	378743	PtrMemberAccess	opline -> result		378512	0					
ANR	378744	Identifier	opline		378512	0					
ANR	378745	Identifier	result		378512	1					
ANR	378746	Identifier	var		378512	1					
ANR	378747	BreakStatement	break ;	21706:4:678263:678268	378512	2	True				
ANR	378748	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		378512	1					
ANR	378749	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	21712:6:678342:678577	378512	0	True				
ANR	378750	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		378512	0		&&			
ANR	378751	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		378512	0					
ANR	378752	Callee	EXPECTED		378512	0					
ANR	378753	Identifier	EXPECTED		378512	0					
ANR	378754	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		378512	1					
ANR	378755	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		378512	0					
ANR	378756	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		378512	0					
ANR	378757	CallExpression	Z_OBJ_HT_P ( object )		378512	0					
ANR	378758	Callee	Z_OBJ_HT_P		378512	0					
ANR	378759	Identifier	Z_OBJ_HT_P		378512	0					
ANR	378760	ArgumentList	object		378512	1					
ANR	378761	Argument	object		378512	0					
ANR	378762	Identifier	object		378512	0					
ANR	378763	Identifier	get_property_ptr_ptr		378512	1					
ANR	378764	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		378512	1					
ANR	378765	Callee	EXPECTED		378512	0					
ANR	378766	Identifier	EXPECTED		378512	0					
ANR	378767	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		378512	1					
ANR	378768	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		378512	0					
ANR	378769	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		378512	0		!=			
ANR	378770	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		378512	0		=			
ANR	378771	Identifier	zptr		378512	0					
ANR	378772	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		378512	1					
ANR	378773	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		378512	0					
ANR	378774	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		378512	0					
ANR	378775	CallExpression	Z_OBJ_HT_P ( object )		378512	0					
ANR	378776	Callee	Z_OBJ_HT_P		378512	0					
ANR	378777	Identifier	Z_OBJ_HT_P		378512	0					
ANR	378778	ArgumentList	object		378512	1					
ANR	378779	Argument	object		378512	0					
ANR	378780	Identifier	object		378512	0					
ANR	378781	Identifier	get_property_ptr_ptr		378512	1					
ANR	378782	ArgumentList	object		378512	1					
ANR	378783	Argument	object		378512	0					
ANR	378784	Identifier	object		378512	0					
ANR	378785	Argument	property		378512	1					
ANR	378786	Identifier	property		378512	0					
ANR	378787	Argument	BP_VAR_RW		378512	2					
ANR	378788	Identifier	BP_VAR_RW		378512	0					
ANR	378789	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		378512	3					
ANR	378790	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		378512	0					
ANR	378791	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		378512	0					
ANR	378792	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		378512	0		==			
ANR	378793	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		378512	0		|			
ANR	378794	Identifier	IS_TMP_VAR		378512	0					
ANR	378795	Identifier	IS_VAR		378512	1					
ANR	378796	Identifier	IS_CONST		378512	1					
ANR	378797	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		378512	1					
ANR	378798	Callee	CACHE_ADDR		378512	0					
ANR	378799	Identifier	CACHE_ADDR		378512	0					
ANR	378800	ArgumentList	Z_CACHE_SLOT_P ( property )		378512	1					
ANR	378801	Argument	Z_CACHE_SLOT_P ( property )		378512	0					
ANR	378802	CallExpression	Z_CACHE_SLOT_P ( property )		378512	0					
ANR	378803	Callee	Z_CACHE_SLOT_P		378512	0					
ANR	378804	Identifier	Z_CACHE_SLOT_P		378512	0					
ANR	378805	ArgumentList	property		378512	1					
ANR	378806	Argument	property		378512	0					
ANR	378807	Identifier	property		378512	0					
ANR	378808	Identifier	NULL		378512	2					
ANR	378809	Identifier	NULL		378512	1					
ANR	378810	CompoundStatement		40:187:1329:1329	378512	1					
ANR	378811	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		378512	0					
ANR	378812	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	21715:7:678590:678624	378512	0	True				
ANR	378813	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		378512	0					
ANR	378814	Callee	EXPECTED		378512	0					
ANR	378815	Identifier	EXPECTED		378512	0					
ANR	378816	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		378512	1					
ANR	378817	Argument	Z_TYPE_P ( zptr ) == IS_LONG		378512	0					
ANR	378818	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		378512	0		==			
ANR	378819	CallExpression	Z_TYPE_P ( zptr )		378512	0					
ANR	378820	Callee	Z_TYPE_P		378512	0					
ANR	378821	Identifier	Z_TYPE_P		378512	0					
ANR	378822	ArgumentList	zptr		378512	1					
ANR	378823	Argument	zptr		378512	0					
ANR	378824	Identifier	zptr		378512	0					
ANR	378825	Identifier	IS_LONG		378512	1					
ANR	378826	CompoundStatement		42:44:1376:1376	378512	1					
ANR	378827	IfStatement	if ( inc )		378512	0					
ANR	378828	Condition	inc	21716:8:678637:678639	378512	0	True				
ANR	378829	Identifier	inc		378512	0					
ANR	378830	CompoundStatement		43:13:1391:1391	378512	1					
ANR	378831	ExpressionStatement	fast_long_increment_function ( zptr )	21717:5:678649:678683	378512	0	True				
ANR	378832	CallExpression	fast_long_increment_function ( zptr )		378512	0					
ANR	378833	Callee	fast_long_increment_function		378512	0					
ANR	378834	Identifier	fast_long_increment_function		378512	0					
ANR	378835	ArgumentList	zptr		378512	1					
ANR	378836	Argument	zptr		378512	0					
ANR	378837	Identifier	zptr		378512	0					
ANR	378838	ElseStatement	else		378512	0					
ANR	378839	CompoundStatement		45:11:1445:1445	378512	0					
ANR	378840	ExpressionStatement	fast_long_decrement_function ( zptr )	21719:5:678703:678737	378512	0	True				
ANR	378841	CallExpression	fast_long_decrement_function ( zptr )		378512	0					
ANR	378842	Callee	fast_long_decrement_function		378512	0					
ANR	378843	Identifier	fast_long_decrement_function		378512	0					
ANR	378844	ArgumentList	zptr		378512	1					
ANR	378845	Argument	zptr		378512	0					
ANR	378846	Identifier	zptr		378512	0					
ANR	378847	ElseStatement	else		378512	0					
ANR	378848	CompoundStatement		48:10:1504:1504	378512	0					
ANR	378849	ExpressionStatement	ZVAL_DEREF ( zptr )	21722:4:678761:678777	378512	0	True				
ANR	378850	CallExpression	ZVAL_DEREF ( zptr )		378512	0					
ANR	378851	Callee	ZVAL_DEREF		378512	0					
ANR	378852	Identifier	ZVAL_DEREF		378512	0					
ANR	378853	ArgumentList	zptr		378512	1					
ANR	378854	Argument	zptr		378512	0					
ANR	378855	Identifier	zptr		378512	0					
ANR	378856	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	21723:4:678783:678808	378512	1	True				
ANR	378857	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		378512	0					
ANR	378858	Callee	SEPARATE_ZVAL_NOREF		378512	0					
ANR	378859	Identifier	SEPARATE_ZVAL_NOREF		378512	0					
ANR	378860	ArgumentList	zptr		378512	1					
ANR	378861	Argument	zptr		378512	0					
ANR	378862	Identifier	zptr		378512	0					
ANR	378863	IfStatement	if ( inc )		378512	2					
ANR	378864	Condition	inc	21725:8:678819:678821	378512	0	True				
ANR	378865	Identifier	inc		378512	0					
ANR	378866	CompoundStatement		52:13:1573:1573	378512	1					
ANR	378867	ExpressionStatement	increment_function ( zptr )	21726:5:678831:678855	378512	0	True				
ANR	378868	CallExpression	increment_function ( zptr )		378512	0					
ANR	378869	Callee	increment_function		378512	0					
ANR	378870	Identifier	increment_function		378512	0					
ANR	378871	ArgumentList	zptr		378512	1					
ANR	378872	Argument	zptr		378512	0					
ANR	378873	Identifier	zptr		378512	0					
ANR	378874	ElseStatement	else		378512	0					
ANR	378875	CompoundStatement		54:11:1617:1617	378512	0					
ANR	378876	ExpressionStatement	decrement_function ( zptr )	21728:5:678875:678899	378512	0	True				
ANR	378877	CallExpression	decrement_function ( zptr )		378512	0					
ANR	378878	Callee	decrement_function		378512	0					
ANR	378879	Identifier	decrement_function		378512	0					
ANR	378880	ArgumentList	zptr		378512	1					
ANR	378881	Argument	zptr		378512	0					
ANR	378882	Identifier	zptr		378512	0					
ANR	378883	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		378512	1					
ANR	378884	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	21731:7:678919:678955	378512	0	True				
ANR	378885	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		378512	0					
ANR	378886	Callee	UNEXPECTED		378512	0					
ANR	378887	Identifier	UNEXPECTED		378512	0					
ANR	378888	ArgumentList	RETURN_VALUE_USED ( opline )		378512	1					
ANR	378889	Argument	RETURN_VALUE_USED ( opline )		378512	0					
ANR	378890	CallExpression	RETURN_VALUE_USED ( opline )		378512	0					
ANR	378891	Callee	RETURN_VALUE_USED		378512	0					
ANR	378892	Identifier	RETURN_VALUE_USED		378512	0					
ANR	378893	ArgumentList	opline		378512	1					
ANR	378894	Argument	opline		378512	0					
ANR	378895	Identifier	opline		378512	0					
ANR	378896	CompoundStatement		58:46:1707:1707	378512	1					
ANR	378897	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	21732:4:678964:679007	378512	0	True				
ANR	378898	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		378512	0					
ANR	378899	Callee	ZVAL_COPY		378512	0					
ANR	378900	Identifier	ZVAL_COPY		378512	0					
ANR	378901	ArgumentList	EX_VAR ( opline -> result . var )		378512	1					
ANR	378902	Argument	EX_VAR ( opline -> result . var )		378512	0					
ANR	378903	CallExpression	EX_VAR ( opline -> result . var )		378512	0					
ANR	378904	Callee	EX_VAR		378512	0					
ANR	378905	Identifier	EX_VAR		378512	0					
ANR	378906	ArgumentList	opline -> result . var		378512	1					
ANR	378907	Argument	opline -> result . var		378512	0					
ANR	378908	MemberAccess	opline -> result . var		378512	0					
ANR	378909	PtrMemberAccess	opline -> result		378512	0					
ANR	378910	Identifier	opline		378512	0					
ANR	378911	Identifier	result		378512	1					
ANR	378912	Identifier	var		378512	1					
ANR	378913	Argument	zptr		378512	1					
ANR	378914	Identifier	zptr		378512	0					
ANR	378915	ElseStatement	else		378512	0					
ANR	378916	CompoundStatement		61:9:1772:1772	378512	0					
ANR	378917	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	21735:3:679028:679246	378512	0	True				
ANR	378918	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		378512	0					
ANR	378919	Callee	zend_pre_incdec_overloaded_property		378512	0					
ANR	378920	Identifier	zend_pre_incdec_overloaded_property		378512	0					
ANR	378921	ArgumentList	object		378512	1					
ANR	378922	Argument	object		378512	0					
ANR	378923	Identifier	object		378512	0					
ANR	378924	Argument	property		378512	1					
ANR	378925	Identifier	property		378512	0					
ANR	378926	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		378512	2					
ANR	378927	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		378512	0					
ANR	378928	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		378512	0					
ANR	378929	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		378512	0		==			
ANR	378930	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		378512	0		|			
ANR	378931	Identifier	IS_TMP_VAR		378512	0					
ANR	378932	Identifier	IS_VAR		378512	1					
ANR	378933	Identifier	IS_CONST		378512	1					
ANR	378934	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		378512	1					
ANR	378935	Callee	CACHE_ADDR		378512	0					
ANR	378936	Identifier	CACHE_ADDR		378512	0					
ANR	378937	ArgumentList	Z_CACHE_SLOT_P ( property )		378512	1					
ANR	378938	Argument	Z_CACHE_SLOT_P ( property )		378512	0					
ANR	378939	CallExpression	Z_CACHE_SLOT_P ( property )		378512	0					
ANR	378940	Callee	Z_CACHE_SLOT_P		378512	0					
ANR	378941	Identifier	Z_CACHE_SLOT_P		378512	0					
ANR	378942	ArgumentList	property		378512	1					
ANR	378943	Argument	property		378512	0					
ANR	378944	Identifier	property		378512	0					
ANR	378945	Identifier	NULL		378512	2					
ANR	378946	Argument	inc		378512	3					
ANR	378947	Identifier	inc		378512	0					
ANR	378948	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		378512	4					
ANR	378949	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		378512	0					
ANR	378950	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		378512	0					
ANR	378951	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		378512	0					
ANR	378952	Callee	UNEXPECTED		378512	0					
ANR	378953	Identifier	UNEXPECTED		378512	0					
ANR	378954	ArgumentList	RETURN_VALUE_USED ( opline )		378512	1					
ANR	378955	Argument	RETURN_VALUE_USED ( opline )		378512	0					
ANR	378956	CallExpression	RETURN_VALUE_USED ( opline )		378512	0					
ANR	378957	Callee	RETURN_VALUE_USED		378512	0					
ANR	378958	Identifier	RETURN_VALUE_USED		378512	0					
ANR	378959	ArgumentList	opline		378512	1					
ANR	378960	Argument	opline		378512	0					
ANR	378961	Identifier	opline		378512	0					
ANR	378962	CallExpression	EX_VAR ( opline -> result . var )		378512	1					
ANR	378963	Callee	EX_VAR		378512	0					
ANR	378964	Identifier	EX_VAR		378512	0					
ANR	378965	ArgumentList	opline -> result . var		378512	1					
ANR	378966	Argument	opline -> result . var		378512	0					
ANR	378967	MemberAccess	opline -> result . var		378512	0					
ANR	378968	PtrMemberAccess	opline -> result		378512	0					
ANR	378969	Identifier	opline		378512	0					
ANR	378970	Identifier	result		378512	1					
ANR	378971	Identifier	var		378512	1					
ANR	378972	Identifier	NULL		378512	2					
ANR	378973	Condition	0	21737:10:679262:679262	378512	1	True				
ANR	378974	PrimaryExpression	0		378512	0					
ANR	378975	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21739:1:679268:679296	378512	10	True				
ANR	378976	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		378512	0					
ANR	378977	Callee	zval_ptr_dtor_nogc		378512	0					
ANR	378978	Identifier	zval_ptr_dtor_nogc		378512	0					
ANR	378979	ArgumentList	free_op2		378512	1					
ANR	378980	Argument	free_op2		378512	0					
ANR	378981	Identifier	free_op2		378512	0					
ANR	378982	IfStatement	if ( UNEXPECTED ( free_op1 ) )		378512	11					
ANR	378983	Condition	UNEXPECTED ( free_op1 )	21740:5:679303:679322	378512	0	True				
ANR	378984	CallExpression	UNEXPECTED ( free_op1 )		378512	0					
ANR	378985	Callee	UNEXPECTED		378512	0					
ANR	378986	Identifier	UNEXPECTED		378512	0					
ANR	378987	ArgumentList	free_op1		378512	1					
ANR	378988	Argument	free_op1		378512	0					
ANR	378989	Identifier	free_op1		378512	0					
ANR	378990	CompoundStatement		67:27:2074:2074	378512	1					
ANR	378991	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	21740:28:679326:679354	378512	0	True				
ANR	378992	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		378512	0					
ANR	378993	Callee	zval_ptr_dtor_nogc		378512	0					
ANR	378994	Identifier	zval_ptr_dtor_nogc		378512	0					
ANR	378995	ArgumentList	free_op1		378512	1					
ANR	378996	Argument	free_op1		378512	0					
ANR	378997	Identifier	free_op1		378512	0					
ANR	378998	ExpressionStatement		21740:58:679356:679356	378512	12	True				
ANR	378999	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	21741:1:679359:679396	378512	13	True				
ANR	379000	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		378512	0					
ANR	379001	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		378512	0					
ANR	379002	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		378512	0					
ANR	379003	ArgumentList			378512	1					
ANR	379004	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		378512	1					
ANR	379005	Identifier	zend_pre_incdec_property_helper_SPEC_VAR_TMPVAR		378512	2					
ANR	379006	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		378512	3					
ANR	379007	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	21673:93:677213:677247	378512	0	True				
ANR	379008	ParameterType	int inc		378512	0					
ANR	379009	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		378512	1					
ANR	379010	CFGEntryNode	ENTRY		378512		True				
ANR	379011	CFGExitNode	EXIT		378512		True				
ANR	379012	Symbol	opline -> op1		378512						
ANR	379013	Symbol	opline -> op2		378512						
ANR	379014	Symbol	opline -> op2 . var		378512						
ANR	379015	Symbol	Z_OBJ_P		378512						
ANR	379016	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		378512						
ANR	379017	Symbol	_get_zval_ptr_ptr_var		378512						
ANR	379018	Symbol	free_op2		378512						
ANR	379019	Symbol	zptr		378512						
ANR	379020	Symbol	free_op1		378512						
ANR	379021	Symbol	execute_data		378512						
ANR	379022	Symbol	opline -> result		378512						
ANR	379023	Symbol	UNEXPECTED		378512						
ANR	379024	Symbol	& free_op2		378512						
ANR	379025	Symbol	E_WARNING		378512						
ANR	379026	Symbol	make_real_object		378512						
ANR	379027	Symbol	RETURN_VALUE_USED		378512						
ANR	379028	Symbol	opline		378512						
ANR	379029	Symbol	IS_LONG		378512						
ANR	379030	Symbol	property		378512						
ANR	379031	Symbol	opline -> op1 . var		378512						
ANR	379032	Symbol	& free_op1		378512						
ANR	379033	Symbol	IS_TMP_VAR		378512						
ANR	379034	Symbol	inc		378512						
ANR	379035	Symbol	BP_VAR_RW		378512						
ANR	379036	Symbol	IS_CONST		378512						
ANR	379037	Symbol	NULL		378512						
ANR	379038	Symbol	Z_CACHE_SLOT_P		378512						
ANR	379039	Symbol	Z_TYPE_P		378512						
ANR	379040	Symbol	* Z_OBJ_HT_P		378512						
ANR	379041	Symbol	CACHE_ADDR		378512						
ANR	379042	Symbol	* opline		378512						
ANR	379043	Symbol	_get_zval_ptr_var		378512						
ANR	379044	Symbol	Z_OBJ_HT_P		378512						
ANR	379045	Symbol	EX_VAR		378512						
ANR	379046	Symbol	IS_OBJECT		378512						
ANR	379047	Symbol	IS_VAR		378512						
ANR	379048	Symbol	EXPECTED		378512						
ANR	379049	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		378512						
ANR	379050	Symbol	opline -> result . var		378512						
ANR	379051	Symbol	object		378512						
ANR	379052	Symbol	IS_UNUSED		378512						
ANR	379053	Function	zend_post_incdec_property_helper_SPEC_VAR_TMPVAR	21754:0:679853:682034							
ANR	379054	FunctionDef	zend_post_incdec_property_helper_SPEC_VAR_TMPVAR (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		379053	0					
ANR	379055	CompoundStatement		21755:0:679984:682034	379053	0					
ANR	379056	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op1 , free_op2 ;"	21756:1:679987:680030	379053	0	True				
ANR	379057	IdentifierDecl	free_op1		379053	0					
ANR	379058	IdentifierDeclType	USE_OPLINE zend_free_op		379053	0					
ANR	379059	Identifier	free_op1		379053	1					
ANR	379060	IdentifierDecl	free_op2		379053	1					
ANR	379061	IdentifierDeclType	USE_OPLINE zend_free_op		379053	0					
ANR	379062	Identifier	free_op2		379053	1					
ANR	379063	IdentifierDeclStatement	zval * object ;	21758:1:680033:680045	379053	1	True				
ANR	379064	IdentifierDecl	* object		379053	0					
ANR	379065	IdentifierDeclType	zval *		379053	0					
ANR	379066	Identifier	object		379053	1					
ANR	379067	IdentifierDeclStatement	zval * property ;	21759:1:680048:680062	379053	2	True				
ANR	379068	IdentifierDecl	* property		379053	0					
ANR	379069	IdentifierDeclType	zval *		379053	0					
ANR	379070	Identifier	property		379053	1					
ANR	379071	IdentifierDeclStatement	zval * zptr ;	21760:1:680065:680075	379053	3	True				
ANR	379072	IdentifierDecl	* zptr		379053	0					
ANR	379073	IdentifierDeclType	zval *		379053	0					
ANR	379074	Identifier	zptr		379053	1					
ANR	379075	ExpressionStatement	SAVE_OPLINE ( )	21762:1:680079:680092	379053	4	True				
ANR	379076	CallExpression	SAVE_OPLINE ( )		379053	0					
ANR	379077	Callee	SAVE_OPLINE		379053	0					
ANR	379078	Identifier	SAVE_OPLINE		379053	0					
ANR	379079	ArgumentList			379053	1					
ANR	379080	ExpressionStatement	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	21763:1:680095:680167	379053	5	True				
ANR	379081	AssignmentExpression	"object = _get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		379053	0		=			
ANR	379082	Identifier	object		379053	0					
ANR	379083	CallExpression	"_get_zval_ptr_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		379053	1					
ANR	379084	Callee	_get_zval_ptr_ptr_var		379053	0					
ANR	379085	Identifier	_get_zval_ptr_ptr_var		379053	0					
ANR	379086	ArgumentList	opline -> op1 . var		379053	1					
ANR	379087	Argument	opline -> op1 . var		379053	0					
ANR	379088	MemberAccess	opline -> op1 . var		379053	0					
ANR	379089	PtrMemberAccess	opline -> op1		379053	0					
ANR	379090	Identifier	opline		379053	0					
ANR	379091	Identifier	op1		379053	1					
ANR	379092	Identifier	var		379053	1					
ANR	379093	Argument	execute_data		379053	1					
ANR	379094	Identifier	execute_data		379053	0					
ANR	379095	Argument	& free_op1		379053	2					
ANR	379096	UnaryOperationExpression	& free_op1		379053	0					
ANR	379097	UnaryOperator	&		379053	0					
ANR	379098	Identifier	free_op1		379053	1					
ANR	379099	IfStatement	if ( IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		379053	6					
ANR	379100	Condition	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	21765:5:680175:680232	379053	0	True				
ANR	379101	AndExpression	IS_VAR == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		379053	0		&&			
ANR	379102	EqualityExpression	IS_VAR == IS_UNUSED		379053	0		==			
ANR	379103	Identifier	IS_VAR		379053	0					
ANR	379104	Identifier	IS_UNUSED		379053	1					
ANR	379105	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		379053	1					
ANR	379106	Callee	UNEXPECTED		379053	0					
ANR	379107	Identifier	UNEXPECTED		379053	0					
ANR	379108	ArgumentList	Z_OBJ_P ( object ) == NULL		379053	1					
ANR	379109	Argument	Z_OBJ_P ( object ) == NULL		379053	0					
ANR	379110	EqualityExpression	Z_OBJ_P ( object ) == NULL		379053	0		==			
ANR	379111	CallExpression	Z_OBJ_P ( object )		379053	0					
ANR	379112	Callee	Z_OBJ_P		379053	0					
ANR	379113	Identifier	Z_OBJ_P		379053	0					
ANR	379114	ArgumentList	object		379053	1					
ANR	379115	Argument	object		379053	0					
ANR	379116	Identifier	object		379053	0					
ANR	379117	Identifier	NULL		379053	1					
ANR	379118	CompoundStatement		11:65:250:250	379053	1					
ANR	379119	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	21766:2:680239:680303	379053	0	True				
ANR	379120	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		379053	0					
ANR	379121	Callee	zend_throw_error		379053	0					
ANR	379122	Identifier	zend_throw_error		379053	0					
ANR	379123	ArgumentList	NULL		379053	1					
ANR	379124	Argument	NULL		379053	0					
ANR	379125	Identifier	NULL		379053	0					
ANR	379126	Argument	"""Using $this when not in object context"""		379053	1					
ANR	379127	PrimaryExpression	"""Using $this when not in object context"""		379053	0					
ANR	379128	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	21767:2:680307:680350	379053	1	True				
ANR	379129	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		379053	0					
ANR	379130	Callee	zval_ptr_dtor_nogc		379053	0					
ANR	379131	Identifier	zval_ptr_dtor_nogc		379053	0					
ANR	379132	ArgumentList	EX_VAR ( opline -> op2 . var )		379053	1					
ANR	379133	Argument	EX_VAR ( opline -> op2 . var )		379053	0					
ANR	379134	CallExpression	EX_VAR ( opline -> op2 . var )		379053	0					
ANR	379135	Callee	EX_VAR		379053	0					
ANR	379136	Identifier	EX_VAR		379053	0					
ANR	379137	ArgumentList	opline -> op2 . var		379053	1					
ANR	379138	Argument	opline -> op2 . var		379053	0					
ANR	379139	MemberAccess	opline -> op2 . var		379053	0					
ANR	379140	PtrMemberAccess	opline -> op2		379053	0					
ANR	379141	Identifier	opline		379053	0					
ANR	379142	Identifier	op2		379053	1					
ANR	379143	Identifier	var		379053	1					
ANR	379144	ExpressionStatement	HANDLE_EXCEPTION ( )	21768:2:680354:680372	379053	2	True				
ANR	379145	CallExpression	HANDLE_EXCEPTION ( )		379053	0					
ANR	379146	Callee	HANDLE_EXCEPTION		379053	0					
ANR	379147	Identifier	HANDLE_EXCEPTION		379053	0					
ANR	379148	ArgumentList			379053	1					
ANR	379149	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	21771:1:680379:680449	379053	7	True				
ANR	379150	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		379053	0		=			
ANR	379151	Identifier	property		379053	0					
ANR	379152	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		379053	1					
ANR	379153	Callee	_get_zval_ptr_var		379053	0					
ANR	379154	Identifier	_get_zval_ptr_var		379053	0					
ANR	379155	ArgumentList	opline -> op2 . var		379053	1					
ANR	379156	Argument	opline -> op2 . var		379053	0					
ANR	379157	MemberAccess	opline -> op2 . var		379053	0					
ANR	379158	PtrMemberAccess	opline -> op2		379053	0					
ANR	379159	Identifier	opline		379053	0					
ANR	379160	Identifier	op2		379053	1					
ANR	379161	Identifier	var		379053	1					
ANR	379162	Argument	execute_data		379053	1					
ANR	379163	Identifier	execute_data		379053	0					
ANR	379164	Argument	& free_op2		379053	2					
ANR	379165	UnaryOperationExpression	& free_op2		379053	0					
ANR	379166	UnaryOperator	&		379053	0					
ANR	379167	Identifier	free_op2		379053	1					
ANR	379168	IfStatement	if ( IS_VAR == IS_VAR && UNEXPECTED ( object == NULL ) )		379053	8					
ANR	379169	Condition	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )	21773:5:680457:680502	379053	0	True				
ANR	379170	AndExpression	IS_VAR == IS_VAR && UNEXPECTED ( object == NULL )		379053	0		&&			
ANR	379171	EqualityExpression	IS_VAR == IS_VAR		379053	0		==			
ANR	379172	Identifier	IS_VAR		379053	0					
ANR	379173	Identifier	IS_VAR		379053	1					
ANR	379174	CallExpression	UNEXPECTED ( object == NULL )		379053	1					
ANR	379175	Callee	UNEXPECTED		379053	0					
ANR	379176	Identifier	UNEXPECTED		379053	0					
ANR	379177	ArgumentList	object == NULL		379053	1					
ANR	379178	Argument	object == NULL		379053	0					
ANR	379179	EqualityExpression	object == NULL		379053	0		==			
ANR	379180	Identifier	object		379053	0					
ANR	379181	Identifier	NULL		379053	1					
ANR	379182	CompoundStatement		19:53:520:520	379053	1					
ANR	379183	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	21774:2:680509:680599	379053	0	True				
ANR	379184	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		379053	0					
ANR	379185	Callee	zend_throw_error		379053	0					
ANR	379186	Identifier	zend_throw_error		379053	0					
ANR	379187	ArgumentList	NULL		379053	1					
ANR	379188	Argument	NULL		379053	0					
ANR	379189	Identifier	NULL		379053	0					
ANR	379190	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		379053	1					
ANR	379191	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		379053	0					
ANR	379192	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21775:2:680603:680631	379053	1	True				
ANR	379193	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		379053	0					
ANR	379194	Callee	zval_ptr_dtor_nogc		379053	0					
ANR	379195	Identifier	zval_ptr_dtor_nogc		379053	0					
ANR	379196	ArgumentList	free_op2		379053	1					
ANR	379197	Argument	free_op2		379053	0					
ANR	379198	Identifier	free_op2		379053	0					
ANR	379199	ExpressionStatement	HANDLE_EXCEPTION ( )	21776:2:680635:680653	379053	2	True				
ANR	379200	CallExpression	HANDLE_EXCEPTION ( )		379053	0					
ANR	379201	Callee	HANDLE_EXCEPTION		379053	0					
ANR	379202	Identifier	HANDLE_EXCEPTION		379053	0					
ANR	379203	ArgumentList			379053	1					
ANR	379204	DoStatement	do		379053	9					
ANR	379205	CompoundStatement		25:4:678:678	379053	0					
ANR	379206	IfStatement	if ( IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		379053	0					
ANR	379207	Condition	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	21780:6:680671:680734	379053	0	True				
ANR	379208	AndExpression	IS_VAR != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		379053	0		&&			
ANR	379209	EqualityExpression	IS_VAR != IS_UNUSED		379053	0		!=			
ANR	379210	Identifier	IS_VAR		379053	0					
ANR	379211	Identifier	IS_UNUSED		379053	1					
ANR	379212	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		379053	1					
ANR	379213	Callee	UNEXPECTED		379053	0					
ANR	379214	Identifier	UNEXPECTED		379053	0					
ANR	379215	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		379053	1					
ANR	379216	Argument	Z_TYPE_P ( object ) != IS_OBJECT		379053	0					
ANR	379217	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		379053	0		!=			
ANR	379218	CallExpression	Z_TYPE_P ( object )		379053	0					
ANR	379219	Callee	Z_TYPE_P		379053	0					
ANR	379220	Identifier	Z_TYPE_P		379053	0					
ANR	379221	ArgumentList	object		379053	1					
ANR	379222	Argument	object		379053	0					
ANR	379223	Identifier	object		379053	0					
ANR	379224	Identifier	IS_OBJECT		379053	1					
ANR	379225	CompoundStatement		26:72:752:752	379053	1					
ANR	379226	ExpressionStatement	ZVAL_DEREF ( object )	21781:3:680742:680760	379053	0	True				
ANR	379227	CallExpression	ZVAL_DEREF ( object )		379053	0					
ANR	379228	Callee	ZVAL_DEREF		379053	0					
ANR	379229	Identifier	ZVAL_DEREF		379053	0					
ANR	379230	ArgumentList	object		379053	1					
ANR	379231	Argument	object		379053	0					
ANR	379232	Identifier	object		379053	0					
ANR	379233	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		379053	1					
ANR	379234	Condition	UNEXPECTED ( ! make_real_object ( object ) )	21782:7:680769:680805	379053	0	True				
ANR	379235	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		379053	0					
ANR	379236	Callee	UNEXPECTED		379053	0					
ANR	379237	Identifier	UNEXPECTED		379053	0					
ANR	379238	ArgumentList	! make_real_object ( object )		379053	1					
ANR	379239	Argument	! make_real_object ( object )		379053	0					
ANR	379240	UnaryOperationExpression	! make_real_object ( object )		379053	0					
ANR	379241	UnaryOperator	!		379053	0					
ANR	379242	CallExpression	make_real_object ( object )		379053	1					
ANR	379243	Callee	make_real_object		379053	0					
ANR	379244	Identifier	make_real_object		379053	0					
ANR	379245	ArgumentList	object		379053	1					
ANR	379246	Argument	object		379053	0					
ANR	379247	Identifier	object		379053	0					
ANR	379248	CompoundStatement		28:46:823:823	379053	1					
ANR	379249	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	21783:4:680814:680892	379053	0	True				
ANR	379250	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		379053	0					
ANR	379251	Callee	zend_error		379053	0					
ANR	379252	Identifier	zend_error		379053	0					
ANR	379253	ArgumentList	E_WARNING		379053	1					
ANR	379254	Argument	E_WARNING		379053	0					
ANR	379255	Identifier	E_WARNING		379053	0					
ANR	379256	Argument	"""Attempt to increment/decrement property of non-object"""		379053	1					
ANR	379257	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		379053	0					
ANR	379258	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	21784:4:680898:680935	379053	1	True				
ANR	379259	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		379053	0					
ANR	379260	Callee	ZVAL_NULL		379053	0					
ANR	379261	Identifier	ZVAL_NULL		379053	0					
ANR	379262	ArgumentList	EX_VAR ( opline -> result . var )		379053	1					
ANR	379263	Argument	EX_VAR ( opline -> result . var )		379053	0					
ANR	379264	CallExpression	EX_VAR ( opline -> result . var )		379053	0					
ANR	379265	Callee	EX_VAR		379053	0					
ANR	379266	Identifier	EX_VAR		379053	0					
ANR	379267	ArgumentList	opline -> result . var		379053	1					
ANR	379268	Argument	opline -> result . var		379053	0					
ANR	379269	MemberAccess	opline -> result . var		379053	0					
ANR	379270	PtrMemberAccess	opline -> result		379053	0					
ANR	379271	Identifier	opline		379053	0					
ANR	379272	Identifier	result		379053	1					
ANR	379273	Identifier	var		379053	1					
ANR	379274	BreakStatement	break ;	21785:4:680941:680946	379053	2	True				
ANR	379275	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		379053	1					
ANR	379276	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	21791:6:681020:681255	379053	0	True				
ANR	379277	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		379053	0		&&			
ANR	379278	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		379053	0					
ANR	379279	Callee	EXPECTED		379053	0					
ANR	379280	Identifier	EXPECTED		379053	0					
ANR	379281	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379053	1					
ANR	379282	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379053	0					
ANR	379283	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379053	0					
ANR	379284	CallExpression	Z_OBJ_HT_P ( object )		379053	0					
ANR	379285	Callee	Z_OBJ_HT_P		379053	0					
ANR	379286	Identifier	Z_OBJ_HT_P		379053	0					
ANR	379287	ArgumentList	object		379053	1					
ANR	379288	Argument	object		379053	0					
ANR	379289	Identifier	object		379053	0					
ANR	379290	Identifier	get_property_ptr_ptr		379053	1					
ANR	379291	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		379053	1					
ANR	379292	Callee	EXPECTED		379053	0					
ANR	379293	Identifier	EXPECTED		379053	0					
ANR	379294	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		379053	1					
ANR	379295	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		379053	0					
ANR	379296	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		379053	0		!=			
ANR	379297	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		379053	0		=			
ANR	379298	Identifier	zptr		379053	0					
ANR	379299	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		379053	1					
ANR	379300	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379053	0					
ANR	379301	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379053	0					
ANR	379302	CallExpression	Z_OBJ_HT_P ( object )		379053	0					
ANR	379303	Callee	Z_OBJ_HT_P		379053	0					
ANR	379304	Identifier	Z_OBJ_HT_P		379053	0					
ANR	379305	ArgumentList	object		379053	1					
ANR	379306	Argument	object		379053	0					
ANR	379307	Identifier	object		379053	0					
ANR	379308	Identifier	get_property_ptr_ptr		379053	1					
ANR	379309	ArgumentList	object		379053	1					
ANR	379310	Argument	object		379053	0					
ANR	379311	Identifier	object		379053	0					
ANR	379312	Argument	property		379053	1					
ANR	379313	Identifier	property		379053	0					
ANR	379314	Argument	BP_VAR_RW		379053	2					
ANR	379315	Identifier	BP_VAR_RW		379053	0					
ANR	379316	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379053	3					
ANR	379317	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379053	0					
ANR	379318	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		379053	0					
ANR	379319	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		379053	0		==			
ANR	379320	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		379053	0		|			
ANR	379321	Identifier	IS_TMP_VAR		379053	0					
ANR	379322	Identifier	IS_VAR		379053	1					
ANR	379323	Identifier	IS_CONST		379053	1					
ANR	379324	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		379053	1					
ANR	379325	Callee	CACHE_ADDR		379053	0					
ANR	379326	Identifier	CACHE_ADDR		379053	0					
ANR	379327	ArgumentList	Z_CACHE_SLOT_P ( property )		379053	1					
ANR	379328	Argument	Z_CACHE_SLOT_P ( property )		379053	0					
ANR	379329	CallExpression	Z_CACHE_SLOT_P ( property )		379053	0					
ANR	379330	Callee	Z_CACHE_SLOT_P		379053	0					
ANR	379331	Identifier	Z_CACHE_SLOT_P		379053	0					
ANR	379332	ArgumentList	property		379053	1					
ANR	379333	Argument	property		379053	0					
ANR	379334	Identifier	property		379053	0					
ANR	379335	Identifier	NULL		379053	2					
ANR	379336	Identifier	NULL		379053	1					
ANR	379337	CompoundStatement		38:187:1273:1273	379053	1					
ANR	379338	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		379053	0					
ANR	379339	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	21794:7:681268:681302	379053	0	True				
ANR	379340	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		379053	0					
ANR	379341	Callee	EXPECTED		379053	0					
ANR	379342	Identifier	EXPECTED		379053	0					
ANR	379343	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		379053	1					
ANR	379344	Argument	Z_TYPE_P ( zptr ) == IS_LONG		379053	0					
ANR	379345	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		379053	0		==			
ANR	379346	CallExpression	Z_TYPE_P ( zptr )		379053	0					
ANR	379347	Callee	Z_TYPE_P		379053	0					
ANR	379348	Identifier	Z_TYPE_P		379053	0					
ANR	379349	ArgumentList	zptr		379053	1					
ANR	379350	Argument	zptr		379053	0					
ANR	379351	Identifier	zptr		379053	0					
ANR	379352	Identifier	IS_LONG		379053	1					
ANR	379353	CompoundStatement		40:44:1320:1320	379053	1					
ANR	379354	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	21795:4:681311:681360	379053	0	True				
ANR	379355	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		379053	0					
ANR	379356	Callee	ZVAL_COPY_VALUE		379053	0					
ANR	379357	Identifier	ZVAL_COPY_VALUE		379053	0					
ANR	379358	ArgumentList	EX_VAR ( opline -> result . var )		379053	1					
ANR	379359	Argument	EX_VAR ( opline -> result . var )		379053	0					
ANR	379360	CallExpression	EX_VAR ( opline -> result . var )		379053	0					
ANR	379361	Callee	EX_VAR		379053	0					
ANR	379362	Identifier	EX_VAR		379053	0					
ANR	379363	ArgumentList	opline -> result . var		379053	1					
ANR	379364	Argument	opline -> result . var		379053	0					
ANR	379365	MemberAccess	opline -> result . var		379053	0					
ANR	379366	PtrMemberAccess	opline -> result		379053	0					
ANR	379367	Identifier	opline		379053	0					
ANR	379368	Identifier	result		379053	1					
ANR	379369	Identifier	var		379053	1					
ANR	379370	Argument	zptr		379053	1					
ANR	379371	Identifier	zptr		379053	0					
ANR	379372	IfStatement	if ( inc )		379053	1					
ANR	379373	Condition	inc	21796:8:681370:681372	379053	0	True				
ANR	379374	Identifier	inc		379053	0					
ANR	379375	CompoundStatement		42:13:1390:1390	379053	1					
ANR	379376	ExpressionStatement	fast_long_increment_function ( zptr )	21797:5:681382:681416	379053	0	True				
ANR	379377	CallExpression	fast_long_increment_function ( zptr )		379053	0					
ANR	379378	Callee	fast_long_increment_function		379053	0					
ANR	379379	Identifier	fast_long_increment_function		379053	0					
ANR	379380	ArgumentList	zptr		379053	1					
ANR	379381	Argument	zptr		379053	0					
ANR	379382	Identifier	zptr		379053	0					
ANR	379383	ElseStatement	else		379053	0					
ANR	379384	CompoundStatement		44:11:1444:1444	379053	0					
ANR	379385	ExpressionStatement	fast_long_decrement_function ( zptr )	21799:5:681436:681470	379053	0	True				
ANR	379386	CallExpression	fast_long_decrement_function ( zptr )		379053	0					
ANR	379387	Callee	fast_long_decrement_function		379053	0					
ANR	379388	Identifier	fast_long_decrement_function		379053	0					
ANR	379389	ArgumentList	zptr		379053	1					
ANR	379390	Argument	zptr		379053	0					
ANR	379391	Identifier	zptr		379053	0					
ANR	379392	ElseStatement	else		379053	0					
ANR	379393	CompoundStatement		47:10:1503:1503	379053	0					
ANR	379394	ExpressionStatement	ZVAL_DEREF ( zptr )	21802:4:681494:681510	379053	0	True				
ANR	379395	CallExpression	ZVAL_DEREF ( zptr )		379053	0					
ANR	379396	Callee	ZVAL_DEREF		379053	0					
ANR	379397	Identifier	ZVAL_DEREF		379053	0					
ANR	379398	ArgumentList	zptr		379053	1					
ANR	379399	Argument	zptr		379053	0					
ANR	379400	Identifier	zptr		379053	0					
ANR	379401	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	21803:4:681516:681565	379053	1	True				
ANR	379402	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		379053	0					
ANR	379403	Callee	ZVAL_COPY_VALUE		379053	0					
ANR	379404	Identifier	ZVAL_COPY_VALUE		379053	0					
ANR	379405	ArgumentList	EX_VAR ( opline -> result . var )		379053	1					
ANR	379406	Argument	EX_VAR ( opline -> result . var )		379053	0					
ANR	379407	CallExpression	EX_VAR ( opline -> result . var )		379053	0					
ANR	379408	Callee	EX_VAR		379053	0					
ANR	379409	Identifier	EX_VAR		379053	0					
ANR	379410	ArgumentList	opline -> result . var		379053	1					
ANR	379411	Argument	opline -> result . var		379053	0					
ANR	379412	MemberAccess	opline -> result . var		379053	0					
ANR	379413	PtrMemberAccess	opline -> result		379053	0					
ANR	379414	Identifier	opline		379053	0					
ANR	379415	Identifier	result		379053	1					
ANR	379416	Identifier	var		379053	1					
ANR	379417	Argument	zptr		379053	1					
ANR	379418	Identifier	zptr		379053	0					
ANR	379419	ExpressionStatement	zval_opt_copy_ctor ( zptr )	21804:4:681571:681595	379053	2	True				
ANR	379420	CallExpression	zval_opt_copy_ctor ( zptr )		379053	0					
ANR	379421	Callee	zval_opt_copy_ctor		379053	0					
ANR	379422	Identifier	zval_opt_copy_ctor		379053	0					
ANR	379423	ArgumentList	zptr		379053	1					
ANR	379424	Argument	zptr		379053	0					
ANR	379425	Identifier	zptr		379053	0					
ANR	379426	IfStatement	if ( inc )		379053	3					
ANR	379427	Condition	inc	21805:8:681605:681607	379053	0	True				
ANR	379428	Identifier	inc		379053	0					
ANR	379429	CompoundStatement		51:13:1625:1625	379053	1					
ANR	379430	ExpressionStatement	increment_function ( zptr )	21806:5:681617:681641	379053	0	True				
ANR	379431	CallExpression	increment_function ( zptr )		379053	0					
ANR	379432	Callee	increment_function		379053	0					
ANR	379433	Identifier	increment_function		379053	0					
ANR	379434	ArgumentList	zptr		379053	1					
ANR	379435	Argument	zptr		379053	0					
ANR	379436	Identifier	zptr		379053	0					
ANR	379437	ElseStatement	else		379053	0					
ANR	379438	CompoundStatement		53:11:1669:1669	379053	0					
ANR	379439	ExpressionStatement	decrement_function ( zptr )	21808:5:681661:681685	379053	0	True				
ANR	379440	CallExpression	decrement_function ( zptr )		379053	0					
ANR	379441	Callee	decrement_function		379053	0					
ANR	379442	Identifier	decrement_function		379053	0					
ANR	379443	ArgumentList	zptr		379053	1					
ANR	379444	Argument	zptr		379053	0					
ANR	379445	Identifier	zptr		379053	0					
ANR	379446	ElseStatement	else		379053	0					
ANR	379447	CompoundStatement		57:9:1722:1722	379053	0					
ANR	379448	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	21812:3:681712:681882	379053	0	True				
ANR	379449	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		379053	0					
ANR	379450	Callee	zend_post_incdec_overloaded_property		379053	0					
ANR	379451	Identifier	zend_post_incdec_overloaded_property		379053	0					
ANR	379452	ArgumentList	object		379053	1					
ANR	379453	Argument	object		379053	0					
ANR	379454	Identifier	object		379053	0					
ANR	379455	Argument	property		379053	1					
ANR	379456	Identifier	property		379053	0					
ANR	379457	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379053	2					
ANR	379458	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379053	0					
ANR	379459	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		379053	0					
ANR	379460	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		379053	0		==			
ANR	379461	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		379053	0		|			
ANR	379462	Identifier	IS_TMP_VAR		379053	0					
ANR	379463	Identifier	IS_VAR		379053	1					
ANR	379464	Identifier	IS_CONST		379053	1					
ANR	379465	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		379053	1					
ANR	379466	Callee	CACHE_ADDR		379053	0					
ANR	379467	Identifier	CACHE_ADDR		379053	0					
ANR	379468	ArgumentList	Z_CACHE_SLOT_P ( property )		379053	1					
ANR	379469	Argument	Z_CACHE_SLOT_P ( property )		379053	0					
ANR	379470	CallExpression	Z_CACHE_SLOT_P ( property )		379053	0					
ANR	379471	Callee	Z_CACHE_SLOT_P		379053	0					
ANR	379472	Identifier	Z_CACHE_SLOT_P		379053	0					
ANR	379473	ArgumentList	property		379053	1					
ANR	379474	Argument	property		379053	0					
ANR	379475	Identifier	property		379053	0					
ANR	379476	Identifier	NULL		379053	2					
ANR	379477	Argument	inc		379053	3					
ANR	379478	Identifier	inc		379053	0					
ANR	379479	Argument	EX_VAR ( opline -> result . var )		379053	4					
ANR	379480	CallExpression	EX_VAR ( opline -> result . var )		379053	0					
ANR	379481	Callee	EX_VAR		379053	0					
ANR	379482	Identifier	EX_VAR		379053	0					
ANR	379483	ArgumentList	opline -> result . var		379053	1					
ANR	379484	Argument	opline -> result . var		379053	0					
ANR	379485	MemberAccess	opline -> result . var		379053	0					
ANR	379486	PtrMemberAccess	opline -> result		379053	0					
ANR	379487	Identifier	opline		379053	0					
ANR	379488	Identifier	result		379053	1					
ANR	379489	Identifier	var		379053	1					
ANR	379490	Condition	0	21814:10:681898:681898	379053	1	True				
ANR	379491	PrimaryExpression	0		379053	0					
ANR	379492	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	21816:1:681904:681932	379053	10	True				
ANR	379493	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		379053	0					
ANR	379494	Callee	zval_ptr_dtor_nogc		379053	0					
ANR	379495	Identifier	zval_ptr_dtor_nogc		379053	0					
ANR	379496	ArgumentList	free_op2		379053	1					
ANR	379497	Argument	free_op2		379053	0					
ANR	379498	Identifier	free_op2		379053	0					
ANR	379499	IfStatement	if ( UNEXPECTED ( free_op1 ) )		379053	11					
ANR	379500	Condition	UNEXPECTED ( free_op1 )	21817:5:681939:681958	379053	0	True				
ANR	379501	CallExpression	UNEXPECTED ( free_op1 )		379053	0					
ANR	379502	Callee	UNEXPECTED		379053	0					
ANR	379503	Identifier	UNEXPECTED		379053	0					
ANR	379504	ArgumentList	free_op1		379053	1					
ANR	379505	Argument	free_op1		379053	0					
ANR	379506	Identifier	free_op1		379053	0					
ANR	379507	CompoundStatement		63:27:1976:1976	379053	1					
ANR	379508	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	21817:28:681962:681990	379053	0	True				
ANR	379509	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		379053	0					
ANR	379510	Callee	zval_ptr_dtor_nogc		379053	0					
ANR	379511	Identifier	zval_ptr_dtor_nogc		379053	0					
ANR	379512	ArgumentList	free_op1		379053	1					
ANR	379513	Argument	free_op1		379053	0					
ANR	379514	Identifier	free_op1		379053	0					
ANR	379515	ExpressionStatement		21817:58:681992:681992	379053	12	True				
ANR	379516	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	21818:1:681995:682032	379053	13	True				
ANR	379517	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		379053	0					
ANR	379518	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		379053	0					
ANR	379519	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		379053	0					
ANR	379520	ArgumentList			379053	1					
ANR	379521	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		379053	1					
ANR	379522	Identifier	zend_post_incdec_property_helper_SPEC_VAR_TMPVAR		379053	2					
ANR	379523	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		379053	3					
ANR	379524	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	21754:94:679947:679981	379053	0	True				
ANR	379525	ParameterType	int inc		379053	0					
ANR	379526	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		379053	1					
ANR	379527	CFGEntryNode	ENTRY		379053		True				
ANR	379528	CFGExitNode	EXIT		379053		True				
ANR	379529	Symbol	opline -> op1		379053						
ANR	379530	Symbol	opline -> op2		379053						
ANR	379531	Symbol	opline -> op2 . var		379053						
ANR	379532	Symbol	Z_OBJ_P		379053						
ANR	379533	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379053						
ANR	379534	Symbol	_get_zval_ptr_ptr_var		379053						
ANR	379535	Symbol	free_op2		379053						
ANR	379536	Symbol	zptr		379053						
ANR	379537	Symbol	free_op1		379053						
ANR	379538	Symbol	execute_data		379053						
ANR	379539	Symbol	opline -> result		379053						
ANR	379540	Symbol	UNEXPECTED		379053						
ANR	379541	Symbol	& free_op2		379053						
ANR	379542	Symbol	E_WARNING		379053						
ANR	379543	Symbol	make_real_object		379053						
ANR	379544	Symbol	opline		379053						
ANR	379545	Symbol	IS_LONG		379053						
ANR	379546	Symbol	property		379053						
ANR	379547	Symbol	opline -> op1 . var		379053						
ANR	379548	Symbol	& free_op1		379053						
ANR	379549	Symbol	IS_TMP_VAR		379053						
ANR	379550	Symbol	inc		379053						
ANR	379551	Symbol	BP_VAR_RW		379053						
ANR	379552	Symbol	IS_CONST		379053						
ANR	379553	Symbol	NULL		379053						
ANR	379554	Symbol	Z_CACHE_SLOT_P		379053						
ANR	379555	Symbol	Z_TYPE_P		379053						
ANR	379556	Symbol	* Z_OBJ_HT_P		379053						
ANR	379557	Symbol	CACHE_ADDR		379053						
ANR	379558	Symbol	* opline		379053						
ANR	379559	Symbol	_get_zval_ptr_var		379053						
ANR	379560	Symbol	Z_OBJ_HT_P		379053						
ANR	379561	Symbol	EX_VAR		379053						
ANR	379562	Symbol	IS_OBJECT		379053						
ANR	379563	Symbol	IS_VAR		379053						
ANR	379564	Symbol	EXPECTED		379053						
ANR	379565	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		379053						
ANR	379566	Symbol	opline -> result . var		379053						
ANR	379567	Symbol	object		379053						
ANR	379568	Symbol	IS_UNUSED		379053						
ANR	379569	DeclStmt									
ANR	379570	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379571	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379572	DeclStmt									
ANR	379573	Decl							zval	zval *	container
ANR	379574	DeclStmt									
ANR	379575	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379576	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379577	DeclStmt									
ANR	379578	Decl							zval	zval *	container
ANR	379579	DeclStmt									
ANR	379580	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	379581	DeclStmt									
ANR	379582	Decl							zend_free_op	zend_free_op	free_op1
ANR	379583	Decl							zend_free_op	zend_free_op	free_op2
ANR	379584	DeclStmt									
ANR	379585	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379586	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379587	DeclStmt									
ANR	379588	Decl							zval	zval *	container
ANR	379589	DeclStmt									
ANR	379590	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379591	DeclStmt									
ANR	379592	Decl							zval	zval *	container
ANR	379593	DeclStmt									
ANR	379594	Decl							zend_free_op	zend_free_op	free_op2
ANR	379595	DeclStmt									
ANR	379596	Decl							zval	zval *	offset
ANR	379597	DeclStmt									
ANR	379598	Decl							zend_object	zend_object *	zobj
ANR	379599	DeclStmt									
ANR	379600	Decl							zval	zval *	retval
ANR	379601	DeclStmt									
ANR	379602	Decl							uint32_t	uint32_t	prop_offset
ANR	379603	DeclStmt									
ANR	379604	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379605	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379606	DeclStmt									
ANR	379607	Decl							zval	zval *	property
ANR	379608	DeclStmt									
ANR	379609	Decl							zval	zval *	container
ANR	379610	DeclStmt									
ANR	379611	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379612	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379613	DeclStmt									
ANR	379614	Decl							zval	zval *	property
ANR	379615	DeclStmt									
ANR	379616	Decl							zval	zval *	container
ANR	379617	DeclStmt									
ANR	379618	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	379619	DeclStmt									
ANR	379620	Decl							zend_free_op	zend_free_op	free_op1
ANR	379621	Decl							zend_free_op	zend_free_op	free_op2
ANR	379622	DeclStmt									
ANR	379623	Decl							zval	zval *	property
ANR	379624	DeclStmt									
ANR	379625	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379626	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379627	DeclStmt									
ANR	379628	Decl							zval	zval *	container
ANR	379629	Decl							zval	zval *	property
ANR	379630	DeclStmt									
ANR	379631	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379632	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379633	DeclStmt									
ANR	379634	Decl							zval	zval *	object
ANR	379635	DeclStmt									
ANR	379636	Decl							zval	zval *	property_name
ANR	379637	DeclStmt									
ANR	379638	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379639	DeclStmt									
ANR	379640	Decl							zval	zval *	object_ptr
ANR	379641	DeclStmt									
ANR	379642	Decl							zend_free_op	zend_free_op	free_op2
ANR	379643	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	379644	DeclStmt									
ANR	379645	Decl							zval	zval *	value
ANR	379646	DeclStmt									
ANR	379647	Decl							zval	zval *	variable_ptr
ANR	379648	DeclStmt									
ANR	379649	Decl							zval	zval *	dim
ANR	379650	DeclStmt									
ANR	379651	Decl							zend_free_op	zend_free_op	free_op2
ANR	379652	DeclStmt									
ANR	379653	Decl							zval	zval *	property_name
ANR	379654	DeclStmt									
ANR	379655	Decl							zend_long	zend_long	offset
ANR	379656	DeclStmt									
ANR	379657	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	379658	DeclStmt									
ANR	379659	Decl							zend_class_entry	zend_class_entry *	ce
ANR	379660	DeclStmt									
ANR	379661	Decl							zend_object	zend_object *	object
ANR	379662	DeclStmt									
ANR	379663	Decl							zend_function	zend_function *	fbc
ANR	379664	DeclStmt									
ANR	379665	Decl							zend_execute_data	zend_execute_data *	call
ANR	379666	DeclStmt									
ANR	379667	Decl							zend_free_op	zend_free_op	free_op2
ANR	379668	DeclStmt									
ANR	379669	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379670	DeclStmt									
ANR	379671	Decl							zval	zval *	expr_ptr
ANR	379672	Decl							zval	zval	new_expr
ANR	379673	DeclStmt									
ANR	379674	Decl							zend_refcounted	zend_refcounted *	ref
ANR	379675	DeclStmt									
ANR	379676	Decl							zend_free_op	zend_free_op	free_op2
ANR	379677	DeclStmt									
ANR	379678	Decl							zval	zval *	offset
ANR	379679	DeclStmt									
ANR	379680	Decl							zend_string	zend_string *	str
ANR	379681	DeclStmt									
ANR	379682	Decl							zend_ulong	zend_ulong	hval
ANR	379683	DeclStmt									
ANR	379684	Decl							zval	zval *	array
ANR	379685	DeclStmt									
ANR	379686	Decl							uint32_t	uint32_t	size
ANR	379687	DeclStmt									
ANR	379688	Decl							USE_OPLINE	USE_OPLINE	array
ANR	379689	DeclStmt									
ANR	379690	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379691	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379692	DeclStmt									
ANR	379693	Decl							zval	zval *	container
ANR	379694	DeclStmt									
ANR	379695	Decl							zval	zval *	offset
ANR	379696	DeclStmt									
ANR	379697	Decl							zend_ulong	zend_ulong	hval
ANR	379698	DeclStmt									
ANR	379699	Decl							zend_string	zend_string *	key
ANR	379700	DeclStmt									
ANR	379701	Decl							HashTable	HashTable *	ht
ANR	379702	DeclStmt									
ANR	379703	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	379704	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	379705	DeclStmt									
ANR	379706	Decl							zval	zval *	container
ANR	379707	DeclStmt									
ANR	379708	Decl							zval	zval *	offset
ANR	379709	DeclStmt									
ANR	379710	Decl							USE_OPLINE zval	USE_OPLINE zval *	obj
ANR	379711	DeclStmt									
ANR	379712	Decl							zend_class_entry	zend_class_entry *	ce
ANR	379713	DeclStmt									
ANR	379714	Decl							zend_function	zend_function *	clone
ANR	379715	DeclStmt									
ANR	379716	Decl							zend_object_clone_obj_t	zend_object_clone_obj_t	clone_call
ANR	379717	DeclStmt									
ANR	379718	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	379719	DeclStmt									
ANR	379720	Decl							zval	zval *	ptr
ANR	379721	Function	zend_binary_assign_op_obj_helper_SPEC_UNUSED_CONST	22800:0:716077:718147							
ANR	379722	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_UNUSED_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		379721	0					
ANR	379723	CompoundStatement		22801:0:716227:718147	379721	0					
ANR	379724	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	22802:1:716230:716268	379721	0	True				
ANR	379725	IdentifierDecl	free_op_data1		379721	0					
ANR	379726	IdentifierDeclType	USE_OPLINE zend_free_op		379721	0					
ANR	379727	Identifier	free_op_data1		379721	1					
ANR	379728	IdentifierDeclStatement	zval * object ;	22804:1:716271:716283	379721	1	True				
ANR	379729	IdentifierDecl	* object		379721	0					
ANR	379730	IdentifierDeclType	zval *		379721	0					
ANR	379731	Identifier	object		379721	1					
ANR	379732	IdentifierDeclStatement	zval * property ;	22805:1:716286:716300	379721	2	True				
ANR	379733	IdentifierDecl	* property		379721	0					
ANR	379734	IdentifierDeclType	zval *		379721	0					
ANR	379735	Identifier	property		379721	1					
ANR	379736	IdentifierDeclStatement	zval * value ;	22806:1:716303:716314	379721	3	True				
ANR	379737	IdentifierDecl	* value		379721	0					
ANR	379738	IdentifierDeclType	zval *		379721	0					
ANR	379739	Identifier	value		379721	1					
ANR	379740	IdentifierDeclStatement	zval * zptr ;	22807:1:716317:716327	379721	4	True				
ANR	379741	IdentifierDecl	* zptr		379721	0					
ANR	379742	IdentifierDeclType	zval *		379721	0					
ANR	379743	Identifier	zptr		379721	1					
ANR	379744	ExpressionStatement	SAVE_OPLINE ( )	22809:1:716331:716344	379721	5	True				
ANR	379745	CallExpression	SAVE_OPLINE ( )		379721	0					
ANR	379746	Callee	SAVE_OPLINE		379721	0					
ANR	379747	Identifier	SAVE_OPLINE		379721	0					
ANR	379748	ArgumentList			379721	1					
ANR	379749	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	22810:1:716347:716394	379721	6	True				
ANR	379750	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		379721	0		=			
ANR	379751	Identifier	object		379721	0					
ANR	379752	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		379721	1					
ANR	379753	Callee	_get_obj_zval_ptr_unused		379721	0					
ANR	379754	Identifier	_get_obj_zval_ptr_unused		379721	0					
ANR	379755	ArgumentList	execute_data		379721	1					
ANR	379756	Argument	execute_data		379721	0					
ANR	379757	Identifier	execute_data		379721	0					
ANR	379758	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		379721	7					
ANR	379759	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	22812:5:716402:716462	379721	0	True				
ANR	379760	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		379721	0		&&			
ANR	379761	EqualityExpression	IS_UNUSED == IS_UNUSED		379721	0		==			
ANR	379762	Identifier	IS_UNUSED		379721	0					
ANR	379763	Identifier	IS_UNUSED		379721	1					
ANR	379764	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		379721	1					
ANR	379765	Callee	UNEXPECTED		379721	0					
ANR	379766	Identifier	UNEXPECTED		379721	0					
ANR	379767	ArgumentList	Z_OBJ_P ( object ) == NULL		379721	1					
ANR	379768	Argument	Z_OBJ_P ( object ) == NULL		379721	0					
ANR	379769	EqualityExpression	Z_OBJ_P ( object ) == NULL		379721	0		==			
ANR	379770	CallExpression	Z_OBJ_P ( object )		379721	0					
ANR	379771	Callee	Z_OBJ_P		379721	0					
ANR	379772	Identifier	Z_OBJ_P		379721	0					
ANR	379773	ArgumentList	object		379721	1					
ANR	379774	Argument	object		379721	0					
ANR	379775	Identifier	object		379721	0					
ANR	379776	Identifier	NULL		379721	1					
ANR	379777	CompoundStatement		12:68:237:237	379721	1					
ANR	379778	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	22813:2:716469:716533	379721	0	True				
ANR	379779	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		379721	0					
ANR	379780	Callee	zend_throw_error		379721	0					
ANR	379781	Identifier	zend_throw_error		379721	0					
ANR	379782	ArgumentList	NULL		379721	1					
ANR	379783	Argument	NULL		379721	0					
ANR	379784	Identifier	NULL		379721	0					
ANR	379785	Argument	"""Using $this when not in object context"""		379721	1					
ANR	379786	PrimaryExpression	"""Using $this when not in object context"""		379721	0					
ANR	379787	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	22814:2:716537:716597	379721	1	True				
ANR	379788	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		379721	0					
ANR	379789	Callee	FREE_UNFETCHED_OP		379721	0					
ANR	379790	Identifier	FREE_UNFETCHED_OP		379721	0					
ANR	379791	ArgumentList	( opline + 1 ) -> op1_type		379721	1					
ANR	379792	Argument	( opline + 1 ) -> op1_type		379721	0					
ANR	379793	PtrMemberAccess	( opline + 1 ) -> op1_type		379721	0					
ANR	379794	AdditiveExpression	opline + 1		379721	0		+			
ANR	379795	Identifier	opline		379721	0					
ANR	379796	PrimaryExpression	1		379721	1					
ANR	379797	Identifier	op1_type		379721	1					
ANR	379798	Argument	( opline + 1 ) -> op1 . var		379721	1					
ANR	379799	MemberAccess	( opline + 1 ) -> op1 . var		379721	0					
ANR	379800	PtrMemberAccess	( opline + 1 ) -> op1		379721	0					
ANR	379801	AdditiveExpression	opline + 1		379721	0		+			
ANR	379802	Identifier	opline		379721	0					
ANR	379803	PrimaryExpression	1		379721	1					
ANR	379804	Identifier	op1		379721	1					
ANR	379805	Identifier	var		379721	1					
ANR	379806	ExpressionStatement	HANDLE_EXCEPTION ( )	22816:2:716602:716620	379721	2	True				
ANR	379807	CallExpression	HANDLE_EXCEPTION ( )		379721	0					
ANR	379808	Callee	HANDLE_EXCEPTION		379721	0					
ANR	379809	Identifier	HANDLE_EXCEPTION		379721	0					
ANR	379810	ArgumentList			379721	1					
ANR	379811	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	22819:1:716627:716662	379721	8	True				
ANR	379812	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		379721	0		=			
ANR	379813	Identifier	property		379721	0					
ANR	379814	CallExpression	EX_CONSTANT ( opline -> op2 )		379721	1					
ANR	379815	Callee	EX_CONSTANT		379721	0					
ANR	379816	Identifier	EX_CONSTANT		379721	0					
ANR	379817	ArgumentList	opline -> op2		379721	1					
ANR	379818	Argument	opline -> op2		379721	0					
ANR	379819	PtrMemberAccess	opline -> op2		379721	0					
ANR	379820	Identifier	opline		379721	0					
ANR	379821	Identifier	op2		379721	1					
ANR	379822	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		379721	9					
ANR	379823	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	22821:5:716670:716718	379721	0	True				
ANR	379824	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		379721	0		&&			
ANR	379825	EqualityExpression	IS_UNUSED == IS_VAR		379721	0		==			
ANR	379826	Identifier	IS_UNUSED		379721	0					
ANR	379827	Identifier	IS_VAR		379721	1					
ANR	379828	CallExpression	UNEXPECTED ( object == NULL )		379721	1					
ANR	379829	Callee	UNEXPECTED		379721	0					
ANR	379830	Identifier	UNEXPECTED		379721	0					
ANR	379831	ArgumentList	object == NULL		379721	1					
ANR	379832	Argument	object == NULL		379721	0					
ANR	379833	EqualityExpression	object == NULL		379721	0		==			
ANR	379834	Identifier	object		379721	0					
ANR	379835	Identifier	NULL		379721	1					
ANR	379836	CompoundStatement		21:56:493:493	379721	1					
ANR	379837	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	22822:2:716725:716788	379721	0	True				
ANR	379838	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		379721	0					
ANR	379839	Callee	zend_throw_error		379721	0					
ANR	379840	Identifier	zend_throw_error		379721	0					
ANR	379841	ArgumentList	NULL		379721	1					
ANR	379842	Argument	NULL		379721	0					
ANR	379843	Identifier	NULL		379721	0					
ANR	379844	Argument	"""Cannot use string offset as an object"""		379721	1					
ANR	379845	PrimaryExpression	"""Cannot use string offset as an object"""		379721	0					
ANR	379846	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	22823:2:716792:716852	379721	1	True				
ANR	379847	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		379721	0					
ANR	379848	Callee	FREE_UNFETCHED_OP		379721	0					
ANR	379849	Identifier	FREE_UNFETCHED_OP		379721	0					
ANR	379850	ArgumentList	( opline + 1 ) -> op1_type		379721	1					
ANR	379851	Argument	( opline + 1 ) -> op1_type		379721	0					
ANR	379852	PtrMemberAccess	( opline + 1 ) -> op1_type		379721	0					
ANR	379853	AdditiveExpression	opline + 1		379721	0		+			
ANR	379854	Identifier	opline		379721	0					
ANR	379855	PrimaryExpression	1		379721	1					
ANR	379856	Identifier	op1_type		379721	1					
ANR	379857	Argument	( opline + 1 ) -> op1 . var		379721	1					
ANR	379858	MemberAccess	( opline + 1 ) -> op1 . var		379721	0					
ANR	379859	PtrMemberAccess	( opline + 1 ) -> op1		379721	0					
ANR	379860	AdditiveExpression	opline + 1		379721	0		+			
ANR	379861	Identifier	opline		379721	0					
ANR	379862	PrimaryExpression	1		379721	1					
ANR	379863	Identifier	op1		379721	1					
ANR	379864	Identifier	var		379721	1					
ANR	379865	ExpressionStatement	HANDLE_EXCEPTION ( )	22825:2:716857:716875	379721	2	True				
ANR	379866	CallExpression	HANDLE_EXCEPTION ( )		379721	0					
ANR	379867	Callee	HANDLE_EXCEPTION		379721	0					
ANR	379868	Identifier	HANDLE_EXCEPTION		379721	0					
ANR	379869	ArgumentList			379721	1					
ANR	379870	DoStatement	do		379721	10					
ANR	379871	CompoundStatement		28:4:657:657	379721	0					
ANR	379872	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	22829:2:716889:716980	379721	0	True				
ANR	379873	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		379721	0		=			
ANR	379874	Identifier	value		379721	0					
ANR	379875	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		379721	1					
ANR	379876	Callee	get_zval_ptr_r		379721	0					
ANR	379877	Identifier	get_zval_ptr_r		379721	0					
ANR	379878	ArgumentList	( opline + 1 ) -> op1_type		379721	1					
ANR	379879	Argument	( opline + 1 ) -> op1_type		379721	0					
ANR	379880	PtrMemberAccess	( opline + 1 ) -> op1_type		379721	0					
ANR	379881	AdditiveExpression	opline + 1		379721	0		+			
ANR	379882	Identifier	opline		379721	0					
ANR	379883	PrimaryExpression	1		379721	1					
ANR	379884	Identifier	op1_type		379721	1					
ANR	379885	Argument	( opline + 1 ) -> op1		379721	1					
ANR	379886	PtrMemberAccess	( opline + 1 ) -> op1		379721	0					
ANR	379887	AdditiveExpression	opline + 1		379721	0		+			
ANR	379888	Identifier	opline		379721	0					
ANR	379889	PrimaryExpression	1		379721	1					
ANR	379890	Identifier	op1		379721	1					
ANR	379891	Argument	execute_data		379721	2					
ANR	379892	Identifier	execute_data		379721	0					
ANR	379893	Argument	& free_op_data1		379721	3					
ANR	379894	UnaryOperationExpression	& free_op_data1		379721	0					
ANR	379895	UnaryOperator	&		379721	0					
ANR	379896	Identifier	free_op_data1		379721	1					
ANR	379897	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		379721	1					
ANR	379898	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	22831:6:716989:717055	379721	0	True				
ANR	379899	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		379721	0		&&			
ANR	379900	EqualityExpression	IS_UNUSED != IS_UNUSED		379721	0		!=			
ANR	379901	Identifier	IS_UNUSED		379721	0					
ANR	379902	Identifier	IS_UNUSED		379721	1					
ANR	379903	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		379721	1					
ANR	379904	Callee	UNEXPECTED		379721	0					
ANR	379905	Identifier	UNEXPECTED		379721	0					
ANR	379906	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		379721	1					
ANR	379907	Argument	Z_TYPE_P ( object ) != IS_OBJECT		379721	0					
ANR	379908	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		379721	0		!=			
ANR	379909	CallExpression	Z_TYPE_P ( object )		379721	0					
ANR	379910	Callee	Z_TYPE_P		379721	0					
ANR	379911	Identifier	Z_TYPE_P		379721	0					
ANR	379912	ArgumentList	object		379721	1					
ANR	379913	Argument	object		379721	0					
ANR	379914	Identifier	object		379721	0					
ANR	379915	Identifier	IS_OBJECT		379721	1					
ANR	379916	CompoundStatement		31:75:830:830	379721	1					
ANR	379917	ExpressionStatement	ZVAL_DEREF ( object )	22832:3:717063:717081	379721	0	True				
ANR	379918	CallExpression	ZVAL_DEREF ( object )		379721	0					
ANR	379919	Callee	ZVAL_DEREF		379721	0					
ANR	379920	Identifier	ZVAL_DEREF		379721	0					
ANR	379921	ArgumentList	object		379721	1					
ANR	379922	Argument	object		379721	0					
ANR	379923	Identifier	object		379721	0					
ANR	379924	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		379721	1					
ANR	379925	Condition	UNEXPECTED ( ! make_real_object ( object ) )	22833:7:717090:717126	379721	0	True				
ANR	379926	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		379721	0					
ANR	379927	Callee	UNEXPECTED		379721	0					
ANR	379928	Identifier	UNEXPECTED		379721	0					
ANR	379929	ArgumentList	! make_real_object ( object )		379721	1					
ANR	379930	Argument	! make_real_object ( object )		379721	0					
ANR	379931	UnaryOperationExpression	! make_real_object ( object )		379721	0					
ANR	379932	UnaryOperator	!		379721	0					
ANR	379933	CallExpression	make_real_object ( object )		379721	1					
ANR	379934	Callee	make_real_object		379721	0					
ANR	379935	Identifier	make_real_object		379721	0					
ANR	379936	ArgumentList	object		379721	1					
ANR	379937	Argument	object		379721	0					
ANR	379938	Identifier	object		379721	0					
ANR	379939	CompoundStatement		33:46:901:901	379721	1					
ANR	379940	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	22834:4:717135:717200	379721	0	True				
ANR	379941	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		379721	0					
ANR	379942	Callee	zend_error		379721	0					
ANR	379943	Identifier	zend_error		379721	0					
ANR	379944	ArgumentList	E_WARNING		379721	1					
ANR	379945	Argument	E_WARNING		379721	0					
ANR	379946	Identifier	E_WARNING		379721	0					
ANR	379947	Argument	"""Attempt to assign property of non-object"""		379721	1					
ANR	379948	PrimaryExpression	"""Attempt to assign property of non-object"""		379721	0					
ANR	379949	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		379721	1					
ANR	379950	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	22835:8:717210:717246	379721	0	True				
ANR	379951	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		379721	0					
ANR	379952	Callee	UNEXPECTED		379721	0					
ANR	379953	Identifier	UNEXPECTED		379721	0					
ANR	379954	ArgumentList	RETURN_VALUE_USED ( opline )		379721	1					
ANR	379955	Argument	RETURN_VALUE_USED ( opline )		379721	0					
ANR	379956	CallExpression	RETURN_VALUE_USED ( opline )		379721	0					
ANR	379957	Callee	RETURN_VALUE_USED		379721	0					
ANR	379958	Identifier	RETURN_VALUE_USED		379721	0					
ANR	379959	ArgumentList	opline		379721	1					
ANR	379960	Argument	opline		379721	0					
ANR	379961	Identifier	opline		379721	0					
ANR	379962	CompoundStatement		35:47:1021:1021	379721	1					
ANR	379963	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	22836:5:717256:717293	379721	0	True				
ANR	379964	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		379721	0					
ANR	379965	Callee	ZVAL_NULL		379721	0					
ANR	379966	Identifier	ZVAL_NULL		379721	0					
ANR	379967	ArgumentList	EX_VAR ( opline -> result . var )		379721	1					
ANR	379968	Argument	EX_VAR ( opline -> result . var )		379721	0					
ANR	379969	CallExpression	EX_VAR ( opline -> result . var )		379721	0					
ANR	379970	Callee	EX_VAR		379721	0					
ANR	379971	Identifier	EX_VAR		379721	0					
ANR	379972	ArgumentList	opline -> result . var		379721	1					
ANR	379973	Argument	opline -> result . var		379721	0					
ANR	379974	MemberAccess	opline -> result . var		379721	0					
ANR	379975	PtrMemberAccess	opline -> result		379721	0					
ANR	379976	Identifier	opline		379721	0					
ANR	379977	Identifier	result		379721	1					
ANR	379978	Identifier	var		379721	1					
ANR	379979	BreakStatement	break ;	22838:4:717305:717310	379721	2	True				
ANR	379980	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		379721	2					
ANR	379981	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	22843:6:717383:717607	379721	0	True				
ANR	379982	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		379721	0		&&			
ANR	379983	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		379721	0					
ANR	379984	Callee	EXPECTED		379721	0					
ANR	379985	Identifier	EXPECTED		379721	0					
ANR	379986	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379721	1					
ANR	379987	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379721	0					
ANR	379988	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379721	0					
ANR	379989	CallExpression	Z_OBJ_HT_P ( object )		379721	0					
ANR	379990	Callee	Z_OBJ_HT_P		379721	0					
ANR	379991	Identifier	Z_OBJ_HT_P		379721	0					
ANR	379992	ArgumentList	object		379721	1					
ANR	379993	Argument	object		379721	0					
ANR	379994	Identifier	object		379721	0					
ANR	379995	Identifier	get_property_ptr_ptr		379721	1					
ANR	379996	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		379721	1					
ANR	379997	Callee	EXPECTED		379721	0					
ANR	379998	Identifier	EXPECTED		379721	0					
ANR	379999	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		379721	1					
ANR	380000	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		379721	0					
ANR	380001	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		379721	0		!=			
ANR	380002	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		379721	0		=			
ANR	380003	Identifier	zptr		379721	0					
ANR	380004	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		379721	1					
ANR	380005	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379721	0					
ANR	380006	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379721	0					
ANR	380007	CallExpression	Z_OBJ_HT_P ( object )		379721	0					
ANR	380008	Callee	Z_OBJ_HT_P		379721	0					
ANR	380009	Identifier	Z_OBJ_HT_P		379721	0					
ANR	380010	ArgumentList	object		379721	1					
ANR	380011	Argument	object		379721	0					
ANR	380012	Identifier	object		379721	0					
ANR	380013	Identifier	get_property_ptr_ptr		379721	1					
ANR	380014	ArgumentList	object		379721	1					
ANR	380015	Argument	object		379721	0					
ANR	380016	Identifier	object		379721	0					
ANR	380017	Argument	property		379721	1					
ANR	380018	Identifier	property		379721	0					
ANR	380019	Argument	BP_VAR_RW		379721	2					
ANR	380020	Identifier	BP_VAR_RW		379721	0					
ANR	380021	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379721	3					
ANR	380022	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379721	0					
ANR	380023	Condition	IS_CONST == IS_CONST		379721	0					
ANR	380024	EqualityExpression	IS_CONST == IS_CONST		379721	0		==			
ANR	380025	Identifier	IS_CONST		379721	0					
ANR	380026	Identifier	IS_CONST		379721	1					
ANR	380027	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		379721	1					
ANR	380028	Callee	CACHE_ADDR		379721	0					
ANR	380029	Identifier	CACHE_ADDR		379721	0					
ANR	380030	ArgumentList	Z_CACHE_SLOT_P ( property )		379721	1					
ANR	380031	Argument	Z_CACHE_SLOT_P ( property )		379721	0					
ANR	380032	CallExpression	Z_CACHE_SLOT_P ( property )		379721	0					
ANR	380033	Callee	Z_CACHE_SLOT_P		379721	0					
ANR	380034	Identifier	Z_CACHE_SLOT_P		379721	0					
ANR	380035	ArgumentList	property		379721	1					
ANR	380036	Argument	property		379721	0					
ANR	380037	Identifier	property		379721	0					
ANR	380038	Identifier	NULL		379721	2					
ANR	380039	Identifier	NULL		379721	1					
ANR	380040	CompoundStatement		44:176:1382:1382	379721	1					
ANR	380041	ExpressionStatement	ZVAL_DEREF ( zptr )	22846:3:717616:717632	379721	0	True				
ANR	380042	CallExpression	ZVAL_DEREF ( zptr )		379721	0					
ANR	380043	Callee	ZVAL_DEREF		379721	0					
ANR	380044	Identifier	ZVAL_DEREF		379721	0					
ANR	380045	ArgumentList	zptr		379721	1					
ANR	380046	Argument	zptr		379721	0					
ANR	380047	Identifier	zptr		379721	0					
ANR	380048	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	22847:3:717637:717662	379721	1	True				
ANR	380049	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		379721	0					
ANR	380050	Callee	SEPARATE_ZVAL_NOREF		379721	0					
ANR	380051	Identifier	SEPARATE_ZVAL_NOREF		379721	0					
ANR	380052	ArgumentList	zptr		379721	1					
ANR	380053	Argument	zptr		379721	0					
ANR	380054	Identifier	zptr		379721	0					
ANR	380055	ExpressionStatement	"binary_op ( zptr , zptr , value )"	22849:3:717668:717696	379721	2	True				
ANR	380056	CallExpression	"binary_op ( zptr , zptr , value )"		379721	0					
ANR	380057	Callee	binary_op		379721	0					
ANR	380058	Identifier	binary_op		379721	0					
ANR	380059	ArgumentList	zptr		379721	1					
ANR	380060	Argument	zptr		379721	0					
ANR	380061	Identifier	zptr		379721	0					
ANR	380062	Argument	zptr		379721	1					
ANR	380063	Identifier	zptr		379721	0					
ANR	380064	Argument	value		379721	2					
ANR	380065	Identifier	value		379721	0					
ANR	380066	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		379721	3					
ANR	380067	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	22850:7:717705:717741	379721	0	True				
ANR	380068	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		379721	0					
ANR	380069	Callee	UNEXPECTED		379721	0					
ANR	380070	Identifier	UNEXPECTED		379721	0					
ANR	380071	ArgumentList	RETURN_VALUE_USED ( opline )		379721	1					
ANR	380072	Argument	RETURN_VALUE_USED ( opline )		379721	0					
ANR	380073	CallExpression	RETURN_VALUE_USED ( opline )		379721	0					
ANR	380074	Callee	RETURN_VALUE_USED		379721	0					
ANR	380075	Identifier	RETURN_VALUE_USED		379721	0					
ANR	380076	ArgumentList	opline		379721	1					
ANR	380077	Argument	opline		379721	0					
ANR	380078	Identifier	opline		379721	0					
ANR	380079	CompoundStatement		50:46:1516:1516	379721	1					
ANR	380080	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	22851:4:717750:717793	379721	0	True				
ANR	380081	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		379721	0					
ANR	380082	Callee	ZVAL_COPY		379721	0					
ANR	380083	Identifier	ZVAL_COPY		379721	0					
ANR	380084	ArgumentList	EX_VAR ( opline -> result . var )		379721	1					
ANR	380085	Argument	EX_VAR ( opline -> result . var )		379721	0					
ANR	380086	CallExpression	EX_VAR ( opline -> result . var )		379721	0					
ANR	380087	Callee	EX_VAR		379721	0					
ANR	380088	Identifier	EX_VAR		379721	0					
ANR	380089	ArgumentList	opline -> result . var		379721	1					
ANR	380090	Argument	opline -> result . var		379721	0					
ANR	380091	MemberAccess	opline -> result . var		379721	0					
ANR	380092	PtrMemberAccess	opline -> result		379721	0					
ANR	380093	Identifier	opline		379721	0					
ANR	380094	Identifier	result		379721	1					
ANR	380095	Identifier	var		379721	1					
ANR	380096	Argument	zptr		379721	1					
ANR	380097	Identifier	zptr		379721	0					
ANR	380098	ElseStatement	else		379721	0					
ANR	380099	CompoundStatement		53:9:1581:1581	379721	0					
ANR	380100	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	22854:3:717814:718033	379721	0	True				
ANR	380101	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		379721	0					
ANR	380102	Callee	zend_assign_op_overloaded_property		379721	0					
ANR	380103	Identifier	zend_assign_op_overloaded_property		379721	0					
ANR	380104	ArgumentList	object		379721	1					
ANR	380105	Argument	object		379721	0					
ANR	380106	Identifier	object		379721	0					
ANR	380107	Argument	property		379721	1					
ANR	380108	Identifier	property		379721	0					
ANR	380109	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379721	2					
ANR	380110	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		379721	0					
ANR	380111	Condition	IS_CONST == IS_CONST		379721	0					
ANR	380112	EqualityExpression	IS_CONST == IS_CONST		379721	0		==			
ANR	380113	Identifier	IS_CONST		379721	0					
ANR	380114	Identifier	IS_CONST		379721	1					
ANR	380115	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		379721	1					
ANR	380116	Callee	CACHE_ADDR		379721	0					
ANR	380117	Identifier	CACHE_ADDR		379721	0					
ANR	380118	ArgumentList	Z_CACHE_SLOT_P ( property )		379721	1					
ANR	380119	Argument	Z_CACHE_SLOT_P ( property )		379721	0					
ANR	380120	CallExpression	Z_CACHE_SLOT_P ( property )		379721	0					
ANR	380121	Callee	Z_CACHE_SLOT_P		379721	0					
ANR	380122	Identifier	Z_CACHE_SLOT_P		379721	0					
ANR	380123	ArgumentList	property		379721	1					
ANR	380124	Argument	property		379721	0					
ANR	380125	Identifier	property		379721	0					
ANR	380126	Identifier	NULL		379721	2					
ANR	380127	Argument	value		379721	3					
ANR	380128	Identifier	value		379721	0					
ANR	380129	Argument	binary_op		379721	4					
ANR	380130	Identifier	binary_op		379721	0					
ANR	380131	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		379721	5					
ANR	380132	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		379721	0					
ANR	380133	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		379721	0					
ANR	380134	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		379721	0					
ANR	380135	Callee	UNEXPECTED		379721	0					
ANR	380136	Identifier	UNEXPECTED		379721	0					
ANR	380137	ArgumentList	RETURN_VALUE_USED ( opline )		379721	1					
ANR	380138	Argument	RETURN_VALUE_USED ( opline )		379721	0					
ANR	380139	CallExpression	RETURN_VALUE_USED ( opline )		379721	0					
ANR	380140	Callee	RETURN_VALUE_USED		379721	0					
ANR	380141	Identifier	RETURN_VALUE_USED		379721	0					
ANR	380142	ArgumentList	opline		379721	1					
ANR	380143	Argument	opline		379721	0					
ANR	380144	Identifier	opline		379721	0					
ANR	380145	CallExpression	EX_VAR ( opline -> result . var )		379721	1					
ANR	380146	Callee	EX_VAR		379721	0					
ANR	380147	Identifier	EX_VAR		379721	0					
ANR	380148	ArgumentList	opline -> result . var		379721	1					
ANR	380149	Argument	opline -> result . var		379721	0					
ANR	380150	MemberAccess	opline -> result . var		379721	0					
ANR	380151	PtrMemberAccess	opline -> result		379721	0					
ANR	380152	Identifier	opline		379721	0					
ANR	380153	Identifier	result		379721	1					
ANR	380154	Identifier	var		379721	1					
ANR	380155	Identifier	NULL		379721	2					
ANR	380156	Condition	0	22856:10:718049:718049	379721	1	True				
ANR	380157	PrimaryExpression	0		379721	0					
ANR	380158	ExpressionStatement	FREE_OP ( free_op_data1 )	22858:1:718055:718077	379721	11	True				
ANR	380159	CallExpression	FREE_OP ( free_op_data1 )		379721	0					
ANR	380160	Callee	FREE_OP		379721	0					
ANR	380161	Identifier	FREE_OP		379721	0					
ANR	380162	ArgumentList	free_op_data1		379721	1					
ANR	380163	Argument	free_op_data1		379721	0					
ANR	380164	Identifier	free_op_data1		379721	0					
ANR	380165	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	22862:1:718117:718145	379721	12	True				
ANR	380166	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		379721	0					
ANR	380167	Callee	ZEND_VM_NEXT_OPCODE_EX		379721	0					
ANR	380168	Identifier	ZEND_VM_NEXT_OPCODE_EX		379721	0					
ANR	380169	ArgumentList	1		379721	1					
ANR	380170	Argument	1		379721	0					
ANR	380171	PrimaryExpression	1		379721	0					
ANR	380172	Argument	2		379721	1					
ANR	380173	PrimaryExpression	2		379721	0					
ANR	380174	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		379721	1					
ANR	380175	Identifier	zend_binary_assign_op_obj_helper_SPEC_UNUSED_CONST		379721	2					
ANR	380176	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		379721	3					
ANR	380177	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	22800:96:716173:716224	379721	0	True				
ANR	380178	ParameterType	binary_op_type binary_op		379721	0					
ANR	380179	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		379721	1					
ANR	380180	CFGEntryNode	ENTRY		379721		True				
ANR	380181	CFGExitNode	EXIT		379721		True				
ANR	380182	Symbol	opline -> op2		379721						
ANR	380183	Symbol	Z_OBJ_P		379721						
ANR	380184	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		379721						
ANR	380185	Symbol	free_op_data1		379721						
ANR	380186	Symbol	zptr		379721						
ANR	380187	Symbol	execute_data		379721						
ANR	380188	Symbol	opline -> result		379721						
ANR	380189	Symbol	_get_obj_zval_ptr_unused		379721						
ANR	380190	Symbol	( opline + 1 ) -> op1		379721						
ANR	380191	Symbol	UNEXPECTED		379721						
ANR	380192	Symbol	E_WARNING		379721						
ANR	380193	Symbol	make_real_object		379721						
ANR	380194	Symbol	RETURN_VALUE_USED		379721						
ANR	380195	Symbol	( opline + 1 ) -> op1 . var		379721						
ANR	380196	Symbol	opline		379721						
ANR	380197	Symbol	get_zval_ptr_r		379721						
ANR	380198	Symbol	property		379721						
ANR	380199	Symbol	value		379721						
ANR	380200	Symbol	binary_op		379721						
ANR	380201	Symbol	BP_VAR_RW		379721						
ANR	380202	Symbol	( opline + 1 ) -> op1_type		379721						
ANR	380203	Symbol	IS_CONST		379721						
ANR	380204	Symbol	NULL		379721						
ANR	380205	Symbol	EX_CONSTANT		379721						
ANR	380206	Symbol	Z_CACHE_SLOT_P		379721						
ANR	380207	Symbol	Z_TYPE_P		379721						
ANR	380208	Symbol	* Z_OBJ_HT_P		379721						
ANR	380209	Symbol	CACHE_ADDR		379721						
ANR	380210	Symbol	* opline		379721						
ANR	380211	Symbol	Z_OBJ_HT_P		379721						
ANR	380212	Symbol	EX_VAR		379721						
ANR	380213	Symbol	IS_OBJECT		379721						
ANR	380214	Symbol	IS_VAR		379721						
ANR	380215	Symbol	EXPECTED		379721						
ANR	380216	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		379721						
ANR	380217	Symbol	& free_op_data1		379721						
ANR	380218	Symbol	opline -> result . var		379721						
ANR	380219	Symbol	object		379721						
ANR	380220	Symbol	IS_UNUSED		379721						
ANR	380221	Function	zend_binary_assign_op_dim_helper_SPEC_UNUSED_CONST	22865:0:718150:720303							
ANR	380222	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_UNUSED_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		380221	0					
ANR	380223	CompoundStatement		22866:0:718300:720303	380221	0					
ANR	380224	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	22867:1:718303:718341	380221	0	True				
ANR	380225	IdentifierDecl	free_op_data1		380221	0					
ANR	380226	IdentifierDeclType	USE_OPLINE zend_free_op		380221	0					
ANR	380227	Identifier	free_op_data1		380221	1					
ANR	380228	IdentifierDeclStatement	"zval * var_ptr , rv ;"	22869:1:718344:718361	380221	1	True				
ANR	380229	IdentifierDecl	* var_ptr		380221	0					
ANR	380230	IdentifierDeclType	zval *		380221	0					
ANR	380231	Identifier	var_ptr		380221	1					
ANR	380232	IdentifierDecl	rv		380221	1					
ANR	380233	IdentifierDeclType	zval		380221	0					
ANR	380234	Identifier	rv		380221	1					
ANR	380235	IdentifierDeclStatement	"zval * value , * container , * dim ;"	22870:1:718364:718393	380221	2	True				
ANR	380236	IdentifierDecl	* value		380221	0					
ANR	380237	IdentifierDeclType	zval *		380221	0					
ANR	380238	Identifier	value		380221	1					
ANR	380239	IdentifierDecl	* container		380221	1					
ANR	380240	IdentifierDeclType	zval *		380221	0					
ANR	380241	Identifier	container		380221	1					
ANR	380242	IdentifierDecl	* dim		380221	2					
ANR	380243	IdentifierDeclType	zval *		380221	0					
ANR	380244	Identifier	dim		380221	1					
ANR	380245	ExpressionStatement	SAVE_OPLINE ( )	22872:1:718397:718410	380221	3	True				
ANR	380246	CallExpression	SAVE_OPLINE ( )		380221	0					
ANR	380247	Callee	SAVE_OPLINE		380221	0					
ANR	380248	Identifier	SAVE_OPLINE		380221	0					
ANR	380249	ArgumentList			380221	1					
ANR	380250	ExpressionStatement	container = _get_obj_zval_ptr_unused ( execute_data )	22873:1:718413:718463	380221	4	True				
ANR	380251	AssignmentExpression	container = _get_obj_zval_ptr_unused ( execute_data )		380221	0		=			
ANR	380252	Identifier	container		380221	0					
ANR	380253	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		380221	1					
ANR	380254	Callee	_get_obj_zval_ptr_unused		380221	0					
ANR	380255	Identifier	_get_obj_zval_ptr_unused		380221	0					
ANR	380256	ArgumentList	execute_data		380221	1					
ANR	380257	Argument	execute_data		380221	0					
ANR	380258	Identifier	execute_data		380221	0					
ANR	380259	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		380221	5					
ANR	380260	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	22874:5:718470:718533	380221	0	True				
ANR	380261	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		380221	0		&&			
ANR	380262	EqualityExpression	IS_UNUSED == IS_UNUSED		380221	0		==			
ANR	380263	Identifier	IS_UNUSED		380221	0					
ANR	380264	Identifier	IS_UNUSED		380221	1					
ANR	380265	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		380221	1					
ANR	380266	Callee	UNEXPECTED		380221	0					
ANR	380267	Identifier	UNEXPECTED		380221	0					
ANR	380268	ArgumentList	Z_OBJ_P ( container ) == NULL		380221	1					
ANR	380269	Argument	Z_OBJ_P ( container ) == NULL		380221	0					
ANR	380270	EqualityExpression	Z_OBJ_P ( container ) == NULL		380221	0		==			
ANR	380271	CallExpression	Z_OBJ_P ( container )		380221	0					
ANR	380272	Callee	Z_OBJ_P		380221	0					
ANR	380273	Identifier	Z_OBJ_P		380221	0					
ANR	380274	ArgumentList	container		380221	1					
ANR	380275	Argument	container		380221	0					
ANR	380276	Identifier	container		380221	0					
ANR	380277	Identifier	NULL		380221	1					
ANR	380278	CompoundStatement		9:71:235:235	380221	1					
ANR	380279	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	22875:2:718540:718604	380221	0	True				
ANR	380280	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		380221	0					
ANR	380281	Callee	zend_throw_error		380221	0					
ANR	380282	Identifier	zend_throw_error		380221	0					
ANR	380283	ArgumentList	NULL		380221	1					
ANR	380284	Argument	NULL		380221	0					
ANR	380285	Identifier	NULL		380221	0					
ANR	380286	Argument	"""Using $this when not in object context"""		380221	1					
ANR	380287	PrimaryExpression	"""Using $this when not in object context"""		380221	0					
ANR	380288	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	22876:2:718608:718668	380221	1	True				
ANR	380289	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		380221	0					
ANR	380290	Callee	FREE_UNFETCHED_OP		380221	0					
ANR	380291	Identifier	FREE_UNFETCHED_OP		380221	0					
ANR	380292	ArgumentList	( opline + 1 ) -> op1_type		380221	1					
ANR	380293	Argument	( opline + 1 ) -> op1_type		380221	0					
ANR	380294	PtrMemberAccess	( opline + 1 ) -> op1_type		380221	0					
ANR	380295	AdditiveExpression	opline + 1		380221	0		+			
ANR	380296	Identifier	opline		380221	0					
ANR	380297	PrimaryExpression	1		380221	1					
ANR	380298	Identifier	op1_type		380221	1					
ANR	380299	Argument	( opline + 1 ) -> op1 . var		380221	1					
ANR	380300	MemberAccess	( opline + 1 ) -> op1 . var		380221	0					
ANR	380301	PtrMemberAccess	( opline + 1 ) -> op1		380221	0					
ANR	380302	AdditiveExpression	opline + 1		380221	0		+			
ANR	380303	Identifier	opline		380221	0					
ANR	380304	PrimaryExpression	1		380221	1					
ANR	380305	Identifier	op1		380221	1					
ANR	380306	Identifier	var		380221	1					
ANR	380307	ExpressionStatement	HANDLE_EXCEPTION ( )	22878:2:718673:718691	380221	2	True				
ANR	380308	CallExpression	HANDLE_EXCEPTION ( )		380221	0					
ANR	380309	Callee	HANDLE_EXCEPTION		380221	0					
ANR	380310	Identifier	HANDLE_EXCEPTION		380221	0					
ANR	380311	ArgumentList			380221	1					
ANR	380312	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL ) )		380221	6					
ANR	380313	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )	22880:5:718701:718752	380221	0	True				
ANR	380314	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )		380221	0		&&			
ANR	380315	EqualityExpression	IS_UNUSED == IS_VAR		380221	0		==			
ANR	380316	Identifier	IS_UNUSED		380221	0					
ANR	380317	Identifier	IS_VAR		380221	1					
ANR	380318	CallExpression	UNEXPECTED ( container == NULL )		380221	1					
ANR	380319	Callee	UNEXPECTED		380221	0					
ANR	380320	Identifier	UNEXPECTED		380221	0					
ANR	380321	ArgumentList	container == NULL		380221	1					
ANR	380322	Argument	container == NULL		380221	0					
ANR	380323	EqualityExpression	container == NULL		380221	0		==			
ANR	380324	Identifier	container		380221	0					
ANR	380325	Identifier	NULL		380221	1					
ANR	380326	CompoundStatement		15:59:454:454	380221	1					
ANR	380327	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	22881:2:718759:718821	380221	0	True				
ANR	380328	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		380221	0					
ANR	380329	Callee	zend_throw_error		380221	0					
ANR	380330	Identifier	zend_throw_error		380221	0					
ANR	380331	ArgumentList	NULL		380221	1					
ANR	380332	Argument	NULL		380221	0					
ANR	380333	Identifier	NULL		380221	0					
ANR	380334	Argument	"""Cannot use string offset as an array"""		380221	1					
ANR	380335	PrimaryExpression	"""Cannot use string offset as an array"""		380221	0					
ANR	380336	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	22882:2:718825:718885	380221	1	True				
ANR	380337	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		380221	0					
ANR	380338	Callee	FREE_UNFETCHED_OP		380221	0					
ANR	380339	Identifier	FREE_UNFETCHED_OP		380221	0					
ANR	380340	ArgumentList	( opline + 1 ) -> op1_type		380221	1					
ANR	380341	Argument	( opline + 1 ) -> op1_type		380221	0					
ANR	380342	PtrMemberAccess	( opline + 1 ) -> op1_type		380221	0					
ANR	380343	AdditiveExpression	opline + 1		380221	0		+			
ANR	380344	Identifier	opline		380221	0					
ANR	380345	PrimaryExpression	1		380221	1					
ANR	380346	Identifier	op1_type		380221	1					
ANR	380347	Argument	( opline + 1 ) -> op1 . var		380221	1					
ANR	380348	MemberAccess	( opline + 1 ) -> op1 . var		380221	0					
ANR	380349	PtrMemberAccess	( opline + 1 ) -> op1		380221	0					
ANR	380350	AdditiveExpression	opline + 1		380221	0		+			
ANR	380351	Identifier	opline		380221	0					
ANR	380352	PrimaryExpression	1		380221	1					
ANR	380353	Identifier	op1		380221	1					
ANR	380354	Identifier	var		380221	1					
ANR	380355	ExpressionStatement	HANDLE_EXCEPTION ( )	22884:2:718890:718908	380221	2	True				
ANR	380356	CallExpression	HANDLE_EXCEPTION ( )		380221	0					
ANR	380357	Callee	HANDLE_EXCEPTION		380221	0					
ANR	380358	Identifier	HANDLE_EXCEPTION		380221	0					
ANR	380359	ArgumentList			380221	1					
ANR	380360	ExpressionStatement	dim = EX_CONSTANT ( opline -> op2 )	22887:1:718915:718945	380221	7	True				
ANR	380361	AssignmentExpression	dim = EX_CONSTANT ( opline -> op2 )		380221	0		=			
ANR	380362	Identifier	dim		380221	0					
ANR	380363	CallExpression	EX_CONSTANT ( opline -> op2 )		380221	1					
ANR	380364	Callee	EX_CONSTANT		380221	0					
ANR	380365	Identifier	EX_CONSTANT		380221	0					
ANR	380366	ArgumentList	opline -> op2		380221	1					
ANR	380367	Argument	opline -> op2		380221	0					
ANR	380368	PtrMemberAccess	opline -> op2		380221	0					
ANR	380369	Identifier	opline		380221	0					
ANR	380370	Identifier	op2		380221	1					
ANR	380371	DoStatement	do		380221	8					
ANR	380372	CompoundStatement		24:4:651:651	380221	0					
ANR	380373	IfStatement	if ( IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		380221	0					
ANR	380374	Condition	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	22890:6:718960:719028	380221	0	True				
ANR	380375	OrExpression	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		380221	0		||			
ANR	380376	EqualityExpression	IS_UNUSED == IS_UNUSED		380221	0		==			
ANR	380377	Identifier	IS_UNUSED		380221	0					
ANR	380378	Identifier	IS_UNUSED		380221	1					
ANR	380379	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		380221	1					
ANR	380380	Callee	UNEXPECTED		380221	0					
ANR	380381	Identifier	UNEXPECTED		380221	0					
ANR	380382	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		380221	1					
ANR	380383	Argument	Z_TYPE_P ( container ) != IS_ARRAY		380221	0					
ANR	380384	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		380221	0		!=			
ANR	380385	CallExpression	Z_TYPE_P ( container )		380221	0					
ANR	380386	Callee	Z_TYPE_P		380221	0					
ANR	380387	Identifier	Z_TYPE_P		380221	0					
ANR	380388	ArgumentList	container		380221	1					
ANR	380389	Argument	container		380221	0					
ANR	380390	Identifier	container		380221	0					
ANR	380391	Identifier	IS_ARRAY		380221	1					
ANR	380392	CompoundStatement		25:77:730:730	380221	1					
ANR	380393	IfStatement	if ( IS_UNUSED != IS_UNUSED )		380221	0					
ANR	380394	Condition	IS_UNUSED != IS_UNUSED	22891:7:719040:719061	380221	0	True				
ANR	380395	EqualityExpression	IS_UNUSED != IS_UNUSED		380221	0		!=			
ANR	380396	Identifier	IS_UNUSED		380221	0					
ANR	380397	Identifier	IS_UNUSED		380221	1					
ANR	380398	CompoundStatement		26:31:763:763	380221	1					
ANR	380399	ExpressionStatement	ZVAL_DEREF ( container )	22892:4:719070:719091	380221	0	True				
ANR	380400	CallExpression	ZVAL_DEREF ( container )		380221	0					
ANR	380401	Callee	ZVAL_DEREF		380221	0					
ANR	380402	Identifier	ZVAL_DEREF		380221	0					
ANR	380403	ArgumentList	container		380221	1					
ANR	380404	Argument	container		380221	0					
ANR	380405	Identifier	container		380221	0					
ANR	380406	IfStatement	if ( IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		380221	1					
ANR	380407	Condition	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	22894:7:719105:719172	380221	0	True				
ANR	380408	OrExpression	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		380221	0		||			
ANR	380409	EqualityExpression	IS_UNUSED == IS_UNUSED		380221	0		==			
ANR	380410	Identifier	IS_UNUSED		380221	0					
ANR	380411	Identifier	IS_UNUSED		380221	1					
ANR	380412	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		380221	1					
ANR	380413	Callee	EXPECTED		380221	0					
ANR	380414	Identifier	EXPECTED		380221	0					
ANR	380415	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		380221	1					
ANR	380416	Argument	Z_TYPE_P ( container ) == IS_OBJECT		380221	0					
ANR	380417	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		380221	0		==			
ANR	380418	CallExpression	Z_TYPE_P ( container )		380221	0					
ANR	380419	Callee	Z_TYPE_P		380221	0					
ANR	380420	Identifier	Z_TYPE_P		380221	0					
ANR	380421	ArgumentList	container		380221	1					
ANR	380422	Argument	container		380221	0					
ANR	380423	Identifier	container		380221	0					
ANR	380424	Identifier	IS_OBJECT		380221	1					
ANR	380425	CompoundStatement		29:77:874:874	380221	1					
ANR	380426	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	22895:4:719181:719272	380221	0	True				
ANR	380427	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		380221	0		=			
ANR	380428	Identifier	value		380221	0					
ANR	380429	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		380221	1					
ANR	380430	Callee	get_zval_ptr_r		380221	0					
ANR	380431	Identifier	get_zval_ptr_r		380221	0					
ANR	380432	ArgumentList	( opline + 1 ) -> op1_type		380221	1					
ANR	380433	Argument	( opline + 1 ) -> op1_type		380221	0					
ANR	380434	PtrMemberAccess	( opline + 1 ) -> op1_type		380221	0					
ANR	380435	AdditiveExpression	opline + 1		380221	0		+			
ANR	380436	Identifier	opline		380221	0					
ANR	380437	PrimaryExpression	1		380221	1					
ANR	380438	Identifier	op1_type		380221	1					
ANR	380439	Argument	( opline + 1 ) -> op1		380221	1					
ANR	380440	PtrMemberAccess	( opline + 1 ) -> op1		380221	0					
ANR	380441	AdditiveExpression	opline + 1		380221	0		+			
ANR	380442	Identifier	opline		380221	0					
ANR	380443	PrimaryExpression	1		380221	1					
ANR	380444	Identifier	op1		380221	1					
ANR	380445	Argument	execute_data		380221	2					
ANR	380446	Identifier	execute_data		380221	0					
ANR	380447	Argument	& free_op_data1		380221	3					
ANR	380448	UnaryOperationExpression	& free_op_data1		380221	0					
ANR	380449	UnaryOperator	&		380221	0					
ANR	380450	Identifier	free_op_data1		380221	1					
ANR	380451	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	22896:4:719278:719416	380221	1	True				
ANR	380452	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		380221	0					
ANR	380453	Callee	zend_binary_assign_op_obj_dim		380221	0					
ANR	380454	Identifier	zend_binary_assign_op_obj_dim		380221	0					
ANR	380455	ArgumentList	container		380221	1					
ANR	380456	Argument	container		380221	0					
ANR	380457	Identifier	container		380221	0					
ANR	380458	Argument	dim		380221	1					
ANR	380459	Identifier	dim		380221	0					
ANR	380460	Argument	value		380221	2					
ANR	380461	Identifier	value		380221	0					
ANR	380462	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		380221	3					
ANR	380463	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		380221	0					
ANR	380464	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380221	0					
ANR	380465	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380221	0					
ANR	380466	Callee	UNEXPECTED		380221	0					
ANR	380467	Identifier	UNEXPECTED		380221	0					
ANR	380468	ArgumentList	RETURN_VALUE_USED ( opline )		380221	1					
ANR	380469	Argument	RETURN_VALUE_USED ( opline )		380221	0					
ANR	380470	CallExpression	RETURN_VALUE_USED ( opline )		380221	0					
ANR	380471	Callee	RETURN_VALUE_USED		380221	0					
ANR	380472	Identifier	RETURN_VALUE_USED		380221	0					
ANR	380473	ArgumentList	opline		380221	1					
ANR	380474	Argument	opline		380221	0					
ANR	380475	Identifier	opline		380221	0					
ANR	380476	CallExpression	EX_VAR ( opline -> result . var )		380221	1					
ANR	380477	Callee	EX_VAR		380221	0					
ANR	380478	Identifier	EX_VAR		380221	0					
ANR	380479	ArgumentList	opline -> result . var		380221	1					
ANR	380480	Argument	opline -> result . var		380221	0					
ANR	380481	MemberAccess	opline -> result . var		380221	0					
ANR	380482	PtrMemberAccess	opline -> result		380221	0					
ANR	380483	Identifier	opline		380221	0					
ANR	380484	Identifier	result		380221	1					
ANR	380485	Identifier	var		380221	1					
ANR	380486	Identifier	NULL		380221	2					
ANR	380487	Argument	binary_op		380221	4					
ANR	380488	Identifier	binary_op		380221	0					
ANR	380489	BreakStatement	break ;	22897:4:719422:719427	380221	2	True				
ANR	380490	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CONST )"	22901:2:719441:719503	380221	1	True				
ANR	380491	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CONST )"		380221	0					
ANR	380492	Callee	zend_fetch_dimension_address_RW		380221	0					
ANR	380493	Identifier	zend_fetch_dimension_address_RW		380221	0					
ANR	380494	ArgumentList	& rv		380221	1					
ANR	380495	Argument	& rv		380221	0					
ANR	380496	UnaryOperationExpression	& rv		380221	0					
ANR	380497	UnaryOperator	&		380221	0					
ANR	380498	Identifier	rv		380221	1					
ANR	380499	Argument	container		380221	1					
ANR	380500	Identifier	container		380221	0					
ANR	380501	Argument	dim		380221	2					
ANR	380502	Identifier	dim		380221	0					
ANR	380503	Argument	IS_CONST		380221	3					
ANR	380504	Identifier	IS_CONST		380221	0					
ANR	380505	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	22902:2:719507:719598	380221	2	True				
ANR	380506	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		380221	0		=			
ANR	380507	Identifier	value		380221	0					
ANR	380508	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		380221	1					
ANR	380509	Callee	get_zval_ptr_r		380221	0					
ANR	380510	Identifier	get_zval_ptr_r		380221	0					
ANR	380511	ArgumentList	( opline + 1 ) -> op1_type		380221	1					
ANR	380512	Argument	( opline + 1 ) -> op1_type		380221	0					
ANR	380513	PtrMemberAccess	( opline + 1 ) -> op1_type		380221	0					
ANR	380514	AdditiveExpression	opline + 1		380221	0		+			
ANR	380515	Identifier	opline		380221	0					
ANR	380516	PrimaryExpression	1		380221	1					
ANR	380517	Identifier	op1_type		380221	1					
ANR	380518	Argument	( opline + 1 ) -> op1		380221	1					
ANR	380519	PtrMemberAccess	( opline + 1 ) -> op1		380221	0					
ANR	380520	AdditiveExpression	opline + 1		380221	0		+			
ANR	380521	Identifier	opline		380221	0					
ANR	380522	PrimaryExpression	1		380221	1					
ANR	380523	Identifier	op1		380221	1					
ANR	380524	Argument	execute_data		380221	2					
ANR	380525	Identifier	execute_data		380221	0					
ANR	380526	Argument	& free_op_data1		380221	3					
ANR	380527	UnaryOperationExpression	& free_op_data1		380221	0					
ANR	380528	UnaryOperator	&		380221	0					
ANR	380529	Identifier	free_op_data1		380221	1					
ANR	380530	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	22903:2:719602:719640	380221	3	True				
ANR	380531	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		380221	0					
ANR	380532	Callee	ZEND_ASSERT		380221	0					
ANR	380533	Identifier	ZEND_ASSERT		380221	0					
ANR	380534	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		380221	1					
ANR	380535	Argument	Z_TYPE ( rv ) == IS_INDIRECT		380221	0					
ANR	380536	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		380221	0		==			
ANR	380537	CallExpression	Z_TYPE ( rv )		380221	0					
ANR	380538	Callee	Z_TYPE		380221	0					
ANR	380539	Identifier	Z_TYPE		380221	0					
ANR	380540	ArgumentList	rv		380221	1					
ANR	380541	Argument	rv		380221	0					
ANR	380542	Identifier	rv		380221	0					
ANR	380543	Identifier	IS_INDIRECT		380221	1					
ANR	380544	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	22904:2:719644:719668	380221	4	True				
ANR	380545	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		380221	0		=			
ANR	380546	Identifier	var_ptr		380221	0					
ANR	380547	CallExpression	Z_INDIRECT ( rv )		380221	1					
ANR	380548	Callee	Z_INDIRECT		380221	0					
ANR	380549	Identifier	Z_INDIRECT		380221	0					
ANR	380550	ArgumentList	rv		380221	1					
ANR	380551	Argument	rv		380221	0					
ANR	380552	Identifier	rv		380221	0					
ANR	380553	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		380221	5					
ANR	380554	Condition	UNEXPECTED ( var_ptr == NULL )	22906:6:719677:719703	380221	0	True				
ANR	380555	CallExpression	UNEXPECTED ( var_ptr == NULL )		380221	0					
ANR	380556	Callee	UNEXPECTED		380221	0					
ANR	380557	Identifier	UNEXPECTED		380221	0					
ANR	380558	ArgumentList	var_ptr == NULL		380221	1					
ANR	380559	Argument	var_ptr == NULL		380221	0					
ANR	380560	EqualityExpression	var_ptr == NULL		380221	0		==			
ANR	380561	Identifier	var_ptr		380221	0					
ANR	380562	Identifier	NULL		380221	1					
ANR	380563	CompoundStatement		41:35:1405:1405	380221	1					
ANR	380564	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	22907:3:719711:719810	380221	0	True				
ANR	380565	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		380221	0					
ANR	380566	Callee	zend_throw_error		380221	0					
ANR	380567	Identifier	zend_throw_error		380221	0					
ANR	380568	ArgumentList	NULL		380221	1					
ANR	380569	Argument	NULL		380221	0					
ANR	380570	Identifier	NULL		380221	0					
ANR	380571	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		380221	1					
ANR	380572	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		380221	0					
ANR	380573	ExpressionStatement	FREE_OP ( free_op_data1 )	22909:3:719816:719838	380221	1	True				
ANR	380574	CallExpression	FREE_OP ( free_op_data1 )		380221	0					
ANR	380575	Callee	FREE_OP		380221	0					
ANR	380576	Identifier	FREE_OP		380221	0					
ANR	380577	ArgumentList	free_op_data1		380221	1					
ANR	380578	Argument	free_op_data1		380221	0					
ANR	380579	Identifier	free_op_data1		380221	0					
ANR	380580	ExpressionStatement	HANDLE_EXCEPTION ( )	22911:3:719844:719862	380221	2	True				
ANR	380581	CallExpression	HANDLE_EXCEPTION ( )		380221	0					
ANR	380582	Callee	HANDLE_EXCEPTION		380221	0					
ANR	380583	Identifier	HANDLE_EXCEPTION		380221	0					
ANR	380584	ArgumentList			380221	1					
ANR	380585	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		380221	6					
ANR	380586	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	22914:6:719875:719912	380221	0	True				
ANR	380587	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		380221	0					
ANR	380588	Callee	UNEXPECTED		380221	0					
ANR	380589	Identifier	UNEXPECTED		380221	0					
ANR	380590	ArgumentList	var_ptr == & EG ( error_zval )		380221	1					
ANR	380591	Argument	var_ptr == & EG ( error_zval )		380221	0					
ANR	380592	EqualityExpression	var_ptr == & EG ( error_zval )		380221	0		==			
ANR	380593	Identifier	var_ptr		380221	0					
ANR	380594	UnaryOperationExpression	& EG ( error_zval )		380221	1					
ANR	380595	UnaryOperator	&		380221	0					
ANR	380596	CallExpression	EG ( error_zval )		380221	1					
ANR	380597	Callee	EG		380221	0					
ANR	380598	Identifier	EG		380221	0					
ANR	380599	ArgumentList	error_zval		380221	1					
ANR	380600	Argument	error_zval		380221	0					
ANR	380601	Identifier	error_zval		380221	0					
ANR	380602	CompoundStatement		49:46:1614:1614	380221	1					
ANR	380603	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		380221	0					
ANR	380604	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	22915:7:719924:719960	380221	0	True				
ANR	380605	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380221	0					
ANR	380606	Callee	UNEXPECTED		380221	0					
ANR	380607	Identifier	UNEXPECTED		380221	0					
ANR	380608	ArgumentList	RETURN_VALUE_USED ( opline )		380221	1					
ANR	380609	Argument	RETURN_VALUE_USED ( opline )		380221	0					
ANR	380610	CallExpression	RETURN_VALUE_USED ( opline )		380221	0					
ANR	380611	Callee	RETURN_VALUE_USED		380221	0					
ANR	380612	Identifier	RETURN_VALUE_USED		380221	0					
ANR	380613	ArgumentList	opline		380221	1					
ANR	380614	Argument	opline		380221	0					
ANR	380615	Identifier	opline		380221	0					
ANR	380616	CompoundStatement		50:46:1662:1662	380221	1					
ANR	380617	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	22916:4:719969:720006	380221	0	True				
ANR	380618	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		380221	0					
ANR	380619	Callee	ZVAL_NULL		380221	0					
ANR	380620	Identifier	ZVAL_NULL		380221	0					
ANR	380621	ArgumentList	EX_VAR ( opline -> result . var )		380221	1					
ANR	380622	Argument	EX_VAR ( opline -> result . var )		380221	0					
ANR	380623	CallExpression	EX_VAR ( opline -> result . var )		380221	0					
ANR	380624	Callee	EX_VAR		380221	0					
ANR	380625	Identifier	EX_VAR		380221	0					
ANR	380626	ArgumentList	opline -> result . var		380221	1					
ANR	380627	Argument	opline -> result . var		380221	0					
ANR	380628	MemberAccess	opline -> result . var		380221	0					
ANR	380629	PtrMemberAccess	opline -> result		380221	0					
ANR	380630	Identifier	opline		380221	0					
ANR	380631	Identifier	result		380221	1					
ANR	380632	Identifier	var		380221	1					
ANR	380633	ElseStatement	else		380221	0					
ANR	380634	CompoundStatement		53:9:1721:1721	380221	0					
ANR	380635	ExpressionStatement	ZVAL_DEREF ( var_ptr )	22919:3:720027:720046	380221	0	True				
ANR	380636	CallExpression	ZVAL_DEREF ( var_ptr )		380221	0					
ANR	380637	Callee	ZVAL_DEREF		380221	0					
ANR	380638	Identifier	ZVAL_DEREF		380221	0					
ANR	380639	ArgumentList	var_ptr		380221	1					
ANR	380640	Argument	var_ptr		380221	0					
ANR	380641	Identifier	var_ptr		380221	0					
ANR	380642	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	22920:3:720051:720079	380221	1	True				
ANR	380643	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		380221	0					
ANR	380644	Callee	SEPARATE_ZVAL_NOREF		380221	0					
ANR	380645	Identifier	SEPARATE_ZVAL_NOREF		380221	0					
ANR	380646	ArgumentList	var_ptr		380221	1					
ANR	380647	Argument	var_ptr		380221	0					
ANR	380648	Identifier	var_ptr		380221	0					
ANR	380649	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	22922:3:720085:720119	380221	2	True				
ANR	380650	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		380221	0					
ANR	380651	Callee	binary_op		380221	0					
ANR	380652	Identifier	binary_op		380221	0					
ANR	380653	ArgumentList	var_ptr		380221	1					
ANR	380654	Argument	var_ptr		380221	0					
ANR	380655	Identifier	var_ptr		380221	0					
ANR	380656	Argument	var_ptr		380221	1					
ANR	380657	Identifier	var_ptr		380221	0					
ANR	380658	Argument	value		380221	2					
ANR	380659	Identifier	value		380221	0					
ANR	380660	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		380221	3					
ANR	380661	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	22924:7:720129:720165	380221	0	True				
ANR	380662	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380221	0					
ANR	380663	Callee	UNEXPECTED		380221	0					
ANR	380664	Identifier	UNEXPECTED		380221	0					
ANR	380665	ArgumentList	RETURN_VALUE_USED ( opline )		380221	1					
ANR	380666	Argument	RETURN_VALUE_USED ( opline )		380221	0					
ANR	380667	CallExpression	RETURN_VALUE_USED ( opline )		380221	0					
ANR	380668	Callee	RETURN_VALUE_USED		380221	0					
ANR	380669	Identifier	RETURN_VALUE_USED		380221	0					
ANR	380670	ArgumentList	opline		380221	1					
ANR	380671	Argument	opline		380221	0					
ANR	380672	Identifier	opline		380221	0					
ANR	380673	CompoundStatement		59:46:1867:1867	380221	1					
ANR	380674	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	22925:4:720174:720220	380221	0	True				
ANR	380675	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		380221	0					
ANR	380676	Callee	ZVAL_COPY		380221	0					
ANR	380677	Identifier	ZVAL_COPY		380221	0					
ANR	380678	ArgumentList	EX_VAR ( opline -> result . var )		380221	1					
ANR	380679	Argument	EX_VAR ( opline -> result . var )		380221	0					
ANR	380680	CallExpression	EX_VAR ( opline -> result . var )		380221	0					
ANR	380681	Callee	EX_VAR		380221	0					
ANR	380682	Identifier	EX_VAR		380221	0					
ANR	380683	ArgumentList	opline -> result . var		380221	1					
ANR	380684	Argument	opline -> result . var		380221	0					
ANR	380685	MemberAccess	opline -> result . var		380221	0					
ANR	380686	PtrMemberAccess	opline -> result		380221	0					
ANR	380687	Identifier	opline		380221	0					
ANR	380688	Identifier	result		380221	1					
ANR	380689	Identifier	var		380221	1					
ANR	380690	Argument	var_ptr		380221	1					
ANR	380691	Identifier	var_ptr		380221	0					
ANR	380692	Condition	0	22928:10:720241:720241	380221	1	True				
ANR	380693	PrimaryExpression	0		380221	0					
ANR	380694	ExpressionStatement	FREE_OP ( free_op_data1 )	22930:1:720247:720269	380221	9	True				
ANR	380695	CallExpression	FREE_OP ( free_op_data1 )		380221	0					
ANR	380696	Callee	FREE_OP		380221	0					
ANR	380697	Identifier	FREE_OP		380221	0					
ANR	380698	ArgumentList	free_op_data1		380221	1					
ANR	380699	Argument	free_op_data1		380221	0					
ANR	380700	Identifier	free_op_data1		380221	0					
ANR	380701	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	22932:1:720273:720301	380221	10	True				
ANR	380702	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		380221	0					
ANR	380703	Callee	ZEND_VM_NEXT_OPCODE_EX		380221	0					
ANR	380704	Identifier	ZEND_VM_NEXT_OPCODE_EX		380221	0					
ANR	380705	ArgumentList	1		380221	1					
ANR	380706	Argument	1		380221	0					
ANR	380707	PrimaryExpression	1		380221	0					
ANR	380708	Argument	2		380221	1					
ANR	380709	PrimaryExpression	2		380221	0					
ANR	380710	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		380221	1					
ANR	380711	Identifier	zend_binary_assign_op_dim_helper_SPEC_UNUSED_CONST		380221	2					
ANR	380712	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		380221	3					
ANR	380713	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	22865:96:718246:718297	380221	0	True				
ANR	380714	ParameterType	binary_op_type binary_op		380221	0					
ANR	380715	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		380221	1					
ANR	380716	CFGEntryNode	ENTRY		380221		True				
ANR	380717	CFGExitNode	EXIT		380221		True				
ANR	380718	Symbol	container		380221						
ANR	380719	Symbol	opline -> op2		380221						
ANR	380720	Symbol	rv		380221						
ANR	380721	Symbol	Z_OBJ_P		380221						
ANR	380722	Symbol	dim		380221						
ANR	380723	Symbol	Z_TYPE		380221						
ANR	380724	Symbol	free_op_data1		380221						
ANR	380725	Symbol	& EG		380221						
ANR	380726	Symbol	var_ptr		380221						
ANR	380727	Symbol	execute_data		380221						
ANR	380728	Symbol	opline -> result		380221						
ANR	380729	Symbol	_get_obj_zval_ptr_unused		380221						
ANR	380730	Symbol	( opline + 1 ) -> op1		380221						
ANR	380731	Symbol	UNEXPECTED		380221						
ANR	380732	Symbol	RETURN_VALUE_USED		380221						
ANR	380733	Symbol	( opline + 1 ) -> op1 . var		380221						
ANR	380734	Symbol	opline		380221						
ANR	380735	Symbol	get_zval_ptr_r		380221						
ANR	380736	Symbol	Z_INDIRECT		380221						
ANR	380737	Symbol	IS_ARRAY		380221						
ANR	380738	Symbol	value		380221						
ANR	380739	Symbol	binary_op		380221						
ANR	380740	Symbol	( opline + 1 ) -> op1_type		380221						
ANR	380741	Symbol	IS_CONST		380221						
ANR	380742	Symbol	NULL		380221						
ANR	380743	Symbol	EX_CONSTANT		380221						
ANR	380744	Symbol	Z_TYPE_P		380221						
ANR	380745	Symbol	& rv		380221						
ANR	380746	Symbol	* opline		380221						
ANR	380747	Symbol	error_zval		380221						
ANR	380748	Symbol	EX_VAR		380221						
ANR	380749	Symbol	IS_OBJECT		380221						
ANR	380750	Symbol	IS_VAR		380221						
ANR	380751	Symbol	EXPECTED		380221						
ANR	380752	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		380221						
ANR	380753	Symbol	& free_op_data1		380221						
ANR	380754	Symbol	opline -> result . var		380221						
ANR	380755	Symbol	IS_UNUSED		380221						
ANR	380756	Symbol	IS_INDIRECT		380221						
ANR	380757	Function	zend_pre_incdec_property_helper_SPEC_UNUSED_CONST	23175:0:731231:733238							
ANR	380758	FunctionDef	zend_pre_incdec_property_helper_SPEC_UNUSED_CONST (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		380757	0					
ANR	380759	CompoundStatement		23176:0:731363:733238	380757	0					
ANR	380760	IdentifierDeclStatement	USE_OPLINE zval * object ;	23177:1:731366:731391	380757	0	True				
ANR	380761	IdentifierDecl	* object		380757	0					
ANR	380762	IdentifierDeclType	USE_OPLINE zval *		380757	0					
ANR	380763	Identifier	object		380757	1					
ANR	380764	IdentifierDeclStatement	zval * property ;	23180:1:731394:731408	380757	1	True				
ANR	380765	IdentifierDecl	* property		380757	0					
ANR	380766	IdentifierDeclType	zval *		380757	0					
ANR	380767	Identifier	property		380757	1					
ANR	380768	IdentifierDeclStatement	zval * zptr ;	23181:1:731411:731421	380757	2	True				
ANR	380769	IdentifierDecl	* zptr		380757	0					
ANR	380770	IdentifierDeclType	zval *		380757	0					
ANR	380771	Identifier	zptr		380757	1					
ANR	380772	ExpressionStatement	SAVE_OPLINE ( )	23183:1:731425:731438	380757	3	True				
ANR	380773	CallExpression	SAVE_OPLINE ( )		380757	0					
ANR	380774	Callee	SAVE_OPLINE		380757	0					
ANR	380775	Identifier	SAVE_OPLINE		380757	0					
ANR	380776	ArgumentList			380757	1					
ANR	380777	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	23184:1:731441:731488	380757	4	True				
ANR	380778	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		380757	0		=			
ANR	380779	Identifier	object		380757	0					
ANR	380780	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		380757	1					
ANR	380781	Callee	_get_obj_zval_ptr_unused		380757	0					
ANR	380782	Identifier	_get_obj_zval_ptr_unused		380757	0					
ANR	380783	ArgumentList	execute_data		380757	1					
ANR	380784	Argument	execute_data		380757	0					
ANR	380785	Identifier	execute_data		380757	0					
ANR	380786	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		380757	5					
ANR	380787	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	23186:5:731496:731556	380757	0	True				
ANR	380788	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		380757	0		&&			
ANR	380789	EqualityExpression	IS_UNUSED == IS_UNUSED		380757	0		==			
ANR	380790	Identifier	IS_UNUSED		380757	0					
ANR	380791	Identifier	IS_UNUSED		380757	1					
ANR	380792	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		380757	1					
ANR	380793	Callee	UNEXPECTED		380757	0					
ANR	380794	Identifier	UNEXPECTED		380757	0					
ANR	380795	ArgumentList	Z_OBJ_P ( object ) == NULL		380757	1					
ANR	380796	Argument	Z_OBJ_P ( object ) == NULL		380757	0					
ANR	380797	EqualityExpression	Z_OBJ_P ( object ) == NULL		380757	0		==			
ANR	380798	CallExpression	Z_OBJ_P ( object )		380757	0					
ANR	380799	Callee	Z_OBJ_P		380757	0					
ANR	380800	Identifier	Z_OBJ_P		380757	0					
ANR	380801	ArgumentList	object		380757	1					
ANR	380802	Argument	object		380757	0					
ANR	380803	Identifier	object		380757	0					
ANR	380804	Identifier	NULL		380757	1					
ANR	380805	CompoundStatement		11:68:195:195	380757	1					
ANR	380806	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	23187:2:731563:731627	380757	0	True				
ANR	380807	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		380757	0					
ANR	380808	Callee	zend_throw_error		380757	0					
ANR	380809	Identifier	zend_throw_error		380757	0					
ANR	380810	ArgumentList	NULL		380757	1					
ANR	380811	Argument	NULL		380757	0					
ANR	380812	Identifier	NULL		380757	0					
ANR	380813	Argument	"""Using $this when not in object context"""		380757	1					
ANR	380814	PrimaryExpression	"""Using $this when not in object context"""		380757	0					
ANR	380815	ExpressionStatement	HANDLE_EXCEPTION ( )	23189:2:731632:731650	380757	1	True				
ANR	380816	CallExpression	HANDLE_EXCEPTION ( )		380757	0					
ANR	380817	Callee	HANDLE_EXCEPTION		380757	0					
ANR	380818	Identifier	HANDLE_EXCEPTION		380757	0					
ANR	380819	ArgumentList			380757	1					
ANR	380820	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	23192:1:731657:731692	380757	6	True				
ANR	380821	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		380757	0		=			
ANR	380822	Identifier	property		380757	0					
ANR	380823	CallExpression	EX_CONSTANT ( opline -> op2 )		380757	1					
ANR	380824	Callee	EX_CONSTANT		380757	0					
ANR	380825	Identifier	EX_CONSTANT		380757	0					
ANR	380826	ArgumentList	opline -> op2		380757	1					
ANR	380827	Argument	opline -> op2		380757	0					
ANR	380828	PtrMemberAccess	opline -> op2		380757	0					
ANR	380829	Identifier	opline		380757	0					
ANR	380830	Identifier	op2		380757	1					
ANR	380831	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		380757	7					
ANR	380832	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	23194:5:731700:731748	380757	0	True				
ANR	380833	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		380757	0		&&			
ANR	380834	EqualityExpression	IS_UNUSED == IS_VAR		380757	0		==			
ANR	380835	Identifier	IS_UNUSED		380757	0					
ANR	380836	Identifier	IS_VAR		380757	1					
ANR	380837	CallExpression	UNEXPECTED ( object == NULL )		380757	1					
ANR	380838	Callee	UNEXPECTED		380757	0					
ANR	380839	Identifier	UNEXPECTED		380757	0					
ANR	380840	ArgumentList	object == NULL		380757	1					
ANR	380841	Argument	object == NULL		380757	0					
ANR	380842	EqualityExpression	object == NULL		380757	0		==			
ANR	380843	Identifier	object		380757	0					
ANR	380844	Identifier	NULL		380757	1					
ANR	380845	CompoundStatement		19:56:387:387	380757	1					
ANR	380846	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	23195:2:731755:731845	380757	0	True				
ANR	380847	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		380757	0					
ANR	380848	Callee	zend_throw_error		380757	0					
ANR	380849	Identifier	zend_throw_error		380757	0					
ANR	380850	ArgumentList	NULL		380757	1					
ANR	380851	Argument	NULL		380757	0					
ANR	380852	Identifier	NULL		380757	0					
ANR	380853	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		380757	1					
ANR	380854	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		380757	0					
ANR	380855	ExpressionStatement	HANDLE_EXCEPTION ( )	23197:2:731850:731868	380757	1	True				
ANR	380856	CallExpression	HANDLE_EXCEPTION ( )		380757	0					
ANR	380857	Callee	HANDLE_EXCEPTION		380757	0					
ANR	380858	Identifier	HANDLE_EXCEPTION		380757	0					
ANR	380859	ArgumentList			380757	1					
ANR	380860	DoStatement	do		380757	8					
ANR	380861	CompoundStatement		25:4:514:514	380757	0					
ANR	380862	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		380757	0					
ANR	380863	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	23201:6:731886:731952	380757	0	True				
ANR	380864	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		380757	0		&&			
ANR	380865	EqualityExpression	IS_UNUSED != IS_UNUSED		380757	0		!=			
ANR	380866	Identifier	IS_UNUSED		380757	0					
ANR	380867	Identifier	IS_UNUSED		380757	1					
ANR	380868	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		380757	1					
ANR	380869	Callee	UNEXPECTED		380757	0					
ANR	380870	Identifier	UNEXPECTED		380757	0					
ANR	380871	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		380757	1					
ANR	380872	Argument	Z_TYPE_P ( object ) != IS_OBJECT		380757	0					
ANR	380873	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		380757	0		!=			
ANR	380874	CallExpression	Z_TYPE_P ( object )		380757	0					
ANR	380875	Callee	Z_TYPE_P		380757	0					
ANR	380876	Identifier	Z_TYPE_P		380757	0					
ANR	380877	ArgumentList	object		380757	1					
ANR	380878	Argument	object		380757	0					
ANR	380879	Identifier	object		380757	0					
ANR	380880	Identifier	IS_OBJECT		380757	1					
ANR	380881	CompoundStatement		26:75:591:591	380757	1					
ANR	380882	ExpressionStatement	ZVAL_DEREF ( object )	23202:3:731960:731978	380757	0	True				
ANR	380883	CallExpression	ZVAL_DEREF ( object )		380757	0					
ANR	380884	Callee	ZVAL_DEREF		380757	0					
ANR	380885	Identifier	ZVAL_DEREF		380757	0					
ANR	380886	ArgumentList	object		380757	1					
ANR	380887	Argument	object		380757	0					
ANR	380888	Identifier	object		380757	0					
ANR	380889	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		380757	1					
ANR	380890	Condition	UNEXPECTED ( ! make_real_object ( object ) )	23203:7:731987:732023	380757	0	True				
ANR	380891	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		380757	0					
ANR	380892	Callee	UNEXPECTED		380757	0					
ANR	380893	Identifier	UNEXPECTED		380757	0					
ANR	380894	ArgumentList	! make_real_object ( object )		380757	1					
ANR	380895	Argument	! make_real_object ( object )		380757	0					
ANR	380896	UnaryOperationExpression	! make_real_object ( object )		380757	0					
ANR	380897	UnaryOperator	!		380757	0					
ANR	380898	CallExpression	make_real_object ( object )		380757	1					
ANR	380899	Callee	make_real_object		380757	0					
ANR	380900	Identifier	make_real_object		380757	0					
ANR	380901	ArgumentList	object		380757	1					
ANR	380902	Argument	object		380757	0					
ANR	380903	Identifier	object		380757	0					
ANR	380904	CompoundStatement		28:46:662:662	380757	1					
ANR	380905	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	23204:4:732032:732110	380757	0	True				
ANR	380906	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		380757	0					
ANR	380907	Callee	zend_error		380757	0					
ANR	380908	Identifier	zend_error		380757	0					
ANR	380909	ArgumentList	E_WARNING		380757	1					
ANR	380910	Argument	E_WARNING		380757	0					
ANR	380911	Identifier	E_WARNING		380757	0					
ANR	380912	Argument	"""Attempt to increment/decrement property of non-object"""		380757	1					
ANR	380913	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		380757	0					
ANR	380914	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		380757	1					
ANR	380915	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	23205:8:732120:732156	380757	0	True				
ANR	380916	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380757	0					
ANR	380917	Callee	UNEXPECTED		380757	0					
ANR	380918	Identifier	UNEXPECTED		380757	0					
ANR	380919	ArgumentList	RETURN_VALUE_USED ( opline )		380757	1					
ANR	380920	Argument	RETURN_VALUE_USED ( opline )		380757	0					
ANR	380921	CallExpression	RETURN_VALUE_USED ( opline )		380757	0					
ANR	380922	Callee	RETURN_VALUE_USED		380757	0					
ANR	380923	Identifier	RETURN_VALUE_USED		380757	0					
ANR	380924	ArgumentList	opline		380757	1					
ANR	380925	Argument	opline		380757	0					
ANR	380926	Identifier	opline		380757	0					
ANR	380927	CompoundStatement		30:47:795:795	380757	1					
ANR	380928	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	23206:5:732166:732203	380757	0	True				
ANR	380929	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		380757	0					
ANR	380930	Callee	ZVAL_NULL		380757	0					
ANR	380931	Identifier	ZVAL_NULL		380757	0					
ANR	380932	ArgumentList	EX_VAR ( opline -> result . var )		380757	1					
ANR	380933	Argument	EX_VAR ( opline -> result . var )		380757	0					
ANR	380934	CallExpression	EX_VAR ( opline -> result . var )		380757	0					
ANR	380935	Callee	EX_VAR		380757	0					
ANR	380936	Identifier	EX_VAR		380757	0					
ANR	380937	ArgumentList	opline -> result . var		380757	1					
ANR	380938	Argument	opline -> result . var		380757	0					
ANR	380939	MemberAccess	opline -> result . var		380757	0					
ANR	380940	PtrMemberAccess	opline -> result		380757	0					
ANR	380941	Identifier	opline		380757	0					
ANR	380942	Identifier	result		380757	1					
ANR	380943	Identifier	var		380757	1					
ANR	380944	BreakStatement	break ;	23208:4:732215:732220	380757	2	True				
ANR	380945	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		380757	1					
ANR	380946	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	23214:6:732294:732518	380757	0	True				
ANR	380947	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		380757	0		&&			
ANR	380948	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		380757	0					
ANR	380949	Callee	EXPECTED		380757	0					
ANR	380950	Identifier	EXPECTED		380757	0					
ANR	380951	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		380757	1					
ANR	380952	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		380757	0					
ANR	380953	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		380757	0					
ANR	380954	CallExpression	Z_OBJ_HT_P ( object )		380757	0					
ANR	380955	Callee	Z_OBJ_HT_P		380757	0					
ANR	380956	Identifier	Z_OBJ_HT_P		380757	0					
ANR	380957	ArgumentList	object		380757	1					
ANR	380958	Argument	object		380757	0					
ANR	380959	Identifier	object		380757	0					
ANR	380960	Identifier	get_property_ptr_ptr		380757	1					
ANR	380961	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		380757	1					
ANR	380962	Callee	EXPECTED		380757	0					
ANR	380963	Identifier	EXPECTED		380757	0					
ANR	380964	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		380757	1					
ANR	380965	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		380757	0					
ANR	380966	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		380757	0		!=			
ANR	380967	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		380757	0		=			
ANR	380968	Identifier	zptr		380757	0					
ANR	380969	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		380757	1					
ANR	380970	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		380757	0					
ANR	380971	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		380757	0					
ANR	380972	CallExpression	Z_OBJ_HT_P ( object )		380757	0					
ANR	380973	Callee	Z_OBJ_HT_P		380757	0					
ANR	380974	Identifier	Z_OBJ_HT_P		380757	0					
ANR	380975	ArgumentList	object		380757	1					
ANR	380976	Argument	object		380757	0					
ANR	380977	Identifier	object		380757	0					
ANR	380978	Identifier	get_property_ptr_ptr		380757	1					
ANR	380979	ArgumentList	object		380757	1					
ANR	380980	Argument	object		380757	0					
ANR	380981	Identifier	object		380757	0					
ANR	380982	Argument	property		380757	1					
ANR	380983	Identifier	property		380757	0					
ANR	380984	Argument	BP_VAR_RW		380757	2					
ANR	380985	Identifier	BP_VAR_RW		380757	0					
ANR	380986	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		380757	3					
ANR	380987	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		380757	0					
ANR	380988	Condition	IS_CONST == IS_CONST		380757	0					
ANR	380989	EqualityExpression	IS_CONST == IS_CONST		380757	0		==			
ANR	380990	Identifier	IS_CONST		380757	0					
ANR	380991	Identifier	IS_CONST		380757	1					
ANR	380992	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		380757	1					
ANR	380993	Callee	CACHE_ADDR		380757	0					
ANR	380994	Identifier	CACHE_ADDR		380757	0					
ANR	380995	ArgumentList	Z_CACHE_SLOT_P ( property )		380757	1					
ANR	380996	Argument	Z_CACHE_SLOT_P ( property )		380757	0					
ANR	380997	CallExpression	Z_CACHE_SLOT_P ( property )		380757	0					
ANR	380998	Callee	Z_CACHE_SLOT_P		380757	0					
ANR	380999	Identifier	Z_CACHE_SLOT_P		380757	0					
ANR	381000	ArgumentList	property		380757	1					
ANR	381001	Argument	property		380757	0					
ANR	381002	Identifier	property		380757	0					
ANR	381003	Identifier	NULL		380757	2					
ANR	381004	Identifier	NULL		380757	1					
ANR	381005	CompoundStatement		40:176:1157:1157	380757	1					
ANR	381006	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		380757	0					
ANR	381007	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	23217:7:732531:732565	380757	0	True				
ANR	381008	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		380757	0					
ANR	381009	Callee	EXPECTED		380757	0					
ANR	381010	Identifier	EXPECTED		380757	0					
ANR	381011	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		380757	1					
ANR	381012	Argument	Z_TYPE_P ( zptr ) == IS_LONG		380757	0					
ANR	381013	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		380757	0		==			
ANR	381014	CallExpression	Z_TYPE_P ( zptr )		380757	0					
ANR	381015	Callee	Z_TYPE_P		380757	0					
ANR	381016	Identifier	Z_TYPE_P		380757	0					
ANR	381017	ArgumentList	zptr		380757	1					
ANR	381018	Argument	zptr		380757	0					
ANR	381019	Identifier	zptr		380757	0					
ANR	381020	Identifier	IS_LONG		380757	1					
ANR	381021	CompoundStatement		42:44:1204:1204	380757	1					
ANR	381022	IfStatement	if ( inc )		380757	0					
ANR	381023	Condition	inc	23218:8:732578:732580	380757	0	True				
ANR	381024	Identifier	inc		380757	0					
ANR	381025	CompoundStatement		43:13:1219:1219	380757	1					
ANR	381026	ExpressionStatement	fast_long_increment_function ( zptr )	23219:5:732590:732624	380757	0	True				
ANR	381027	CallExpression	fast_long_increment_function ( zptr )		380757	0					
ANR	381028	Callee	fast_long_increment_function		380757	0					
ANR	381029	Identifier	fast_long_increment_function		380757	0					
ANR	381030	ArgumentList	zptr		380757	1					
ANR	381031	Argument	zptr		380757	0					
ANR	381032	Identifier	zptr		380757	0					
ANR	381033	ElseStatement	else		380757	0					
ANR	381034	CompoundStatement		45:11:1273:1273	380757	0					
ANR	381035	ExpressionStatement	fast_long_decrement_function ( zptr )	23221:5:732644:732678	380757	0	True				
ANR	381036	CallExpression	fast_long_decrement_function ( zptr )		380757	0					
ANR	381037	Callee	fast_long_decrement_function		380757	0					
ANR	381038	Identifier	fast_long_decrement_function		380757	0					
ANR	381039	ArgumentList	zptr		380757	1					
ANR	381040	Argument	zptr		380757	0					
ANR	381041	Identifier	zptr		380757	0					
ANR	381042	ElseStatement	else		380757	0					
ANR	381043	CompoundStatement		48:10:1332:1332	380757	0					
ANR	381044	ExpressionStatement	ZVAL_DEREF ( zptr )	23224:4:732702:732718	380757	0	True				
ANR	381045	CallExpression	ZVAL_DEREF ( zptr )		380757	0					
ANR	381046	Callee	ZVAL_DEREF		380757	0					
ANR	381047	Identifier	ZVAL_DEREF		380757	0					
ANR	381048	ArgumentList	zptr		380757	1					
ANR	381049	Argument	zptr		380757	0					
ANR	381050	Identifier	zptr		380757	0					
ANR	381051	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	23225:4:732724:732749	380757	1	True				
ANR	381052	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		380757	0					
ANR	381053	Callee	SEPARATE_ZVAL_NOREF		380757	0					
ANR	381054	Identifier	SEPARATE_ZVAL_NOREF		380757	0					
ANR	381055	ArgumentList	zptr		380757	1					
ANR	381056	Argument	zptr		380757	0					
ANR	381057	Identifier	zptr		380757	0					
ANR	381058	IfStatement	if ( inc )		380757	2					
ANR	381059	Condition	inc	23227:8:732760:732762	380757	0	True				
ANR	381060	Identifier	inc		380757	0					
ANR	381061	CompoundStatement		52:13:1401:1401	380757	1					
ANR	381062	ExpressionStatement	increment_function ( zptr )	23228:5:732772:732796	380757	0	True				
ANR	381063	CallExpression	increment_function ( zptr )		380757	0					
ANR	381064	Callee	increment_function		380757	0					
ANR	381065	Identifier	increment_function		380757	0					
ANR	381066	ArgumentList	zptr		380757	1					
ANR	381067	Argument	zptr		380757	0					
ANR	381068	Identifier	zptr		380757	0					
ANR	381069	ElseStatement	else		380757	0					
ANR	381070	CompoundStatement		54:11:1445:1445	380757	0					
ANR	381071	ExpressionStatement	decrement_function ( zptr )	23230:5:732816:732840	380757	0	True				
ANR	381072	CallExpression	decrement_function ( zptr )		380757	0					
ANR	381073	Callee	decrement_function		380757	0					
ANR	381074	Identifier	decrement_function		380757	0					
ANR	381075	ArgumentList	zptr		380757	1					
ANR	381076	Argument	zptr		380757	0					
ANR	381077	Identifier	zptr		380757	0					
ANR	381078	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		380757	1					
ANR	381079	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	23233:7:732860:732896	380757	0	True				
ANR	381080	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380757	0					
ANR	381081	Callee	UNEXPECTED		380757	0					
ANR	381082	Identifier	UNEXPECTED		380757	0					
ANR	381083	ArgumentList	RETURN_VALUE_USED ( opline )		380757	1					
ANR	381084	Argument	RETURN_VALUE_USED ( opline )		380757	0					
ANR	381085	CallExpression	RETURN_VALUE_USED ( opline )		380757	0					
ANR	381086	Callee	RETURN_VALUE_USED		380757	0					
ANR	381087	Identifier	RETURN_VALUE_USED		380757	0					
ANR	381088	ArgumentList	opline		380757	1					
ANR	381089	Argument	opline		380757	0					
ANR	381090	Identifier	opline		380757	0					
ANR	381091	CompoundStatement		58:46:1535:1535	380757	1					
ANR	381092	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	23234:4:732905:732948	380757	0	True				
ANR	381093	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		380757	0					
ANR	381094	Callee	ZVAL_COPY		380757	0					
ANR	381095	Identifier	ZVAL_COPY		380757	0					
ANR	381096	ArgumentList	EX_VAR ( opline -> result . var )		380757	1					
ANR	381097	Argument	EX_VAR ( opline -> result . var )		380757	0					
ANR	381098	CallExpression	EX_VAR ( opline -> result . var )		380757	0					
ANR	381099	Callee	EX_VAR		380757	0					
ANR	381100	Identifier	EX_VAR		380757	0					
ANR	381101	ArgumentList	opline -> result . var		380757	1					
ANR	381102	Argument	opline -> result . var		380757	0					
ANR	381103	MemberAccess	opline -> result . var		380757	0					
ANR	381104	PtrMemberAccess	opline -> result		380757	0					
ANR	381105	Identifier	opline		380757	0					
ANR	381106	Identifier	result		380757	1					
ANR	381107	Identifier	var		380757	1					
ANR	381108	Argument	zptr		380757	1					
ANR	381109	Identifier	zptr		380757	0					
ANR	381110	ElseStatement	else		380757	0					
ANR	381111	CompoundStatement		61:9:1600:1600	380757	0					
ANR	381112	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	23237:3:732969:733176	380757	0	True				
ANR	381113	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		380757	0					
ANR	381114	Callee	zend_pre_incdec_overloaded_property		380757	0					
ANR	381115	Identifier	zend_pre_incdec_overloaded_property		380757	0					
ANR	381116	ArgumentList	object		380757	1					
ANR	381117	Argument	object		380757	0					
ANR	381118	Identifier	object		380757	0					
ANR	381119	Argument	property		380757	1					
ANR	381120	Identifier	property		380757	0					
ANR	381121	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		380757	2					
ANR	381122	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		380757	0					
ANR	381123	Condition	IS_CONST == IS_CONST		380757	0					
ANR	381124	EqualityExpression	IS_CONST == IS_CONST		380757	0		==			
ANR	381125	Identifier	IS_CONST		380757	0					
ANR	381126	Identifier	IS_CONST		380757	1					
ANR	381127	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		380757	1					
ANR	381128	Callee	CACHE_ADDR		380757	0					
ANR	381129	Identifier	CACHE_ADDR		380757	0					
ANR	381130	ArgumentList	Z_CACHE_SLOT_P ( property )		380757	1					
ANR	381131	Argument	Z_CACHE_SLOT_P ( property )		380757	0					
ANR	381132	CallExpression	Z_CACHE_SLOT_P ( property )		380757	0					
ANR	381133	Callee	Z_CACHE_SLOT_P		380757	0					
ANR	381134	Identifier	Z_CACHE_SLOT_P		380757	0					
ANR	381135	ArgumentList	property		380757	1					
ANR	381136	Argument	property		380757	0					
ANR	381137	Identifier	property		380757	0					
ANR	381138	Identifier	NULL		380757	2					
ANR	381139	Argument	inc		380757	3					
ANR	381140	Identifier	inc		380757	0					
ANR	381141	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		380757	4					
ANR	381142	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		380757	0					
ANR	381143	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380757	0					
ANR	381144	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		380757	0					
ANR	381145	Callee	UNEXPECTED		380757	0					
ANR	381146	Identifier	UNEXPECTED		380757	0					
ANR	381147	ArgumentList	RETURN_VALUE_USED ( opline )		380757	1					
ANR	381148	Argument	RETURN_VALUE_USED ( opline )		380757	0					
ANR	381149	CallExpression	RETURN_VALUE_USED ( opline )		380757	0					
ANR	381150	Callee	RETURN_VALUE_USED		380757	0					
ANR	381151	Identifier	RETURN_VALUE_USED		380757	0					
ANR	381152	ArgumentList	opline		380757	1					
ANR	381153	Argument	opline		380757	0					
ANR	381154	Identifier	opline		380757	0					
ANR	381155	CallExpression	EX_VAR ( opline -> result . var )		380757	1					
ANR	381156	Callee	EX_VAR		380757	0					
ANR	381157	Identifier	EX_VAR		380757	0					
ANR	381158	ArgumentList	opline -> result . var		380757	1					
ANR	381159	Argument	opline -> result . var		380757	0					
ANR	381160	MemberAccess	opline -> result . var		380757	0					
ANR	381161	PtrMemberAccess	opline -> result		380757	0					
ANR	381162	Identifier	opline		380757	0					
ANR	381163	Identifier	result		380757	1					
ANR	381164	Identifier	var		380757	1					
ANR	381165	Identifier	NULL		380757	2					
ANR	381166	Condition	0	23239:10:733192:733192	380757	1	True				
ANR	381167	PrimaryExpression	0		380757	0					
ANR	381168	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	23242:1:733199:733236	380757	9	True				
ANR	381169	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		380757	0					
ANR	381170	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		380757	0					
ANR	381171	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		380757	0					
ANR	381172	ArgumentList			380757	1					
ANR	381173	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		380757	1					
ANR	381174	Identifier	zend_pre_incdec_property_helper_SPEC_UNUSED_CONST		380757	2					
ANR	381175	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		380757	3					
ANR	381176	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	23175:95:731326:731360	380757	0	True				
ANR	381177	ParameterType	int inc		380757	0					
ANR	381178	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		380757	1					
ANR	381179	CFGEntryNode	ENTRY		380757		True				
ANR	381180	CFGExitNode	EXIT		380757		True				
ANR	381181	Symbol	opline -> op2		380757						
ANR	381182	Symbol	Z_OBJ_P		380757						
ANR	381183	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		380757						
ANR	381184	Symbol	zptr		380757						
ANR	381185	Symbol	execute_data		380757						
ANR	381186	Symbol	opline -> result		380757						
ANR	381187	Symbol	_get_obj_zval_ptr_unused		380757						
ANR	381188	Symbol	UNEXPECTED		380757						
ANR	381189	Symbol	E_WARNING		380757						
ANR	381190	Symbol	make_real_object		380757						
ANR	381191	Symbol	RETURN_VALUE_USED		380757						
ANR	381192	Symbol	opline		380757						
ANR	381193	Symbol	IS_LONG		380757						
ANR	381194	Symbol	property		380757						
ANR	381195	Symbol	inc		380757						
ANR	381196	Symbol	BP_VAR_RW		380757						
ANR	381197	Symbol	IS_CONST		380757						
ANR	381198	Symbol	NULL		380757						
ANR	381199	Symbol	EX_CONSTANT		380757						
ANR	381200	Symbol	Z_CACHE_SLOT_P		380757						
ANR	381201	Symbol	Z_TYPE_P		380757						
ANR	381202	Symbol	* Z_OBJ_HT_P		380757						
ANR	381203	Symbol	CACHE_ADDR		380757						
ANR	381204	Symbol	* opline		380757						
ANR	381205	Symbol	Z_OBJ_HT_P		380757						
ANR	381206	Symbol	EX_VAR		380757						
ANR	381207	Symbol	IS_OBJECT		380757						
ANR	381208	Symbol	IS_VAR		380757						
ANR	381209	Symbol	EXPECTED		380757						
ANR	381210	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		380757						
ANR	381211	Symbol	opline -> result . var		380757						
ANR	381212	Symbol	object		380757						
ANR	381213	Symbol	IS_UNUSED		380757						
ANR	381214	Function	zend_post_incdec_property_helper_SPEC_UNUSED_CONST	23255:0:733701:735611							
ANR	381215	FunctionDef	zend_post_incdec_property_helper_SPEC_UNUSED_CONST (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		381214	0					
ANR	381216	CompoundStatement		23256:0:733834:735611	381214	0					
ANR	381217	IdentifierDeclStatement	USE_OPLINE zval * object ;	23257:1:733837:733862	381214	0	True				
ANR	381218	IdentifierDecl	* object		381214	0					
ANR	381219	IdentifierDeclType	USE_OPLINE zval *		381214	0					
ANR	381220	Identifier	object		381214	1					
ANR	381221	IdentifierDeclStatement	zval * property ;	23260:1:733865:733879	381214	1	True				
ANR	381222	IdentifierDecl	* property		381214	0					
ANR	381223	IdentifierDeclType	zval *		381214	0					
ANR	381224	Identifier	property		381214	1					
ANR	381225	IdentifierDeclStatement	zval * zptr ;	23261:1:733882:733892	381214	2	True				
ANR	381226	IdentifierDecl	* zptr		381214	0					
ANR	381227	IdentifierDeclType	zval *		381214	0					
ANR	381228	Identifier	zptr		381214	1					
ANR	381229	ExpressionStatement	SAVE_OPLINE ( )	23263:1:733896:733909	381214	3	True				
ANR	381230	CallExpression	SAVE_OPLINE ( )		381214	0					
ANR	381231	Callee	SAVE_OPLINE		381214	0					
ANR	381232	Identifier	SAVE_OPLINE		381214	0					
ANR	381233	ArgumentList			381214	1					
ANR	381234	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	23264:1:733912:733959	381214	4	True				
ANR	381235	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		381214	0		=			
ANR	381236	Identifier	object		381214	0					
ANR	381237	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		381214	1					
ANR	381238	Callee	_get_obj_zval_ptr_unused		381214	0					
ANR	381239	Identifier	_get_obj_zval_ptr_unused		381214	0					
ANR	381240	ArgumentList	execute_data		381214	1					
ANR	381241	Argument	execute_data		381214	0					
ANR	381242	Identifier	execute_data		381214	0					
ANR	381243	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		381214	5					
ANR	381244	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	23266:5:733967:734027	381214	0	True				
ANR	381245	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		381214	0		&&			
ANR	381246	EqualityExpression	IS_UNUSED == IS_UNUSED		381214	0		==			
ANR	381247	Identifier	IS_UNUSED		381214	0					
ANR	381248	Identifier	IS_UNUSED		381214	1					
ANR	381249	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		381214	1					
ANR	381250	Callee	UNEXPECTED		381214	0					
ANR	381251	Identifier	UNEXPECTED		381214	0					
ANR	381252	ArgumentList	Z_OBJ_P ( object ) == NULL		381214	1					
ANR	381253	Argument	Z_OBJ_P ( object ) == NULL		381214	0					
ANR	381254	EqualityExpression	Z_OBJ_P ( object ) == NULL		381214	0		==			
ANR	381255	CallExpression	Z_OBJ_P ( object )		381214	0					
ANR	381256	Callee	Z_OBJ_P		381214	0					
ANR	381257	Identifier	Z_OBJ_P		381214	0					
ANR	381258	ArgumentList	object		381214	1					
ANR	381259	Argument	object		381214	0					
ANR	381260	Identifier	object		381214	0					
ANR	381261	Identifier	NULL		381214	1					
ANR	381262	CompoundStatement		11:68:195:195	381214	1					
ANR	381263	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	23267:2:734034:734098	381214	0	True				
ANR	381264	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		381214	0					
ANR	381265	Callee	zend_throw_error		381214	0					
ANR	381266	Identifier	zend_throw_error		381214	0					
ANR	381267	ArgumentList	NULL		381214	1					
ANR	381268	Argument	NULL		381214	0					
ANR	381269	Identifier	NULL		381214	0					
ANR	381270	Argument	"""Using $this when not in object context"""		381214	1					
ANR	381271	PrimaryExpression	"""Using $this when not in object context"""		381214	0					
ANR	381272	ExpressionStatement	HANDLE_EXCEPTION ( )	23269:2:734103:734121	381214	1	True				
ANR	381273	CallExpression	HANDLE_EXCEPTION ( )		381214	0					
ANR	381274	Callee	HANDLE_EXCEPTION		381214	0					
ANR	381275	Identifier	HANDLE_EXCEPTION		381214	0					
ANR	381276	ArgumentList			381214	1					
ANR	381277	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	23272:1:734128:734163	381214	6	True				
ANR	381278	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		381214	0		=			
ANR	381279	Identifier	property		381214	0					
ANR	381280	CallExpression	EX_CONSTANT ( opline -> op2 )		381214	1					
ANR	381281	Callee	EX_CONSTANT		381214	0					
ANR	381282	Identifier	EX_CONSTANT		381214	0					
ANR	381283	ArgumentList	opline -> op2		381214	1					
ANR	381284	Argument	opline -> op2		381214	0					
ANR	381285	PtrMemberAccess	opline -> op2		381214	0					
ANR	381286	Identifier	opline		381214	0					
ANR	381287	Identifier	op2		381214	1					
ANR	381288	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		381214	7					
ANR	381289	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	23274:5:734171:734219	381214	0	True				
ANR	381290	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		381214	0		&&			
ANR	381291	EqualityExpression	IS_UNUSED == IS_VAR		381214	0		==			
ANR	381292	Identifier	IS_UNUSED		381214	0					
ANR	381293	Identifier	IS_VAR		381214	1					
ANR	381294	CallExpression	UNEXPECTED ( object == NULL )		381214	1					
ANR	381295	Callee	UNEXPECTED		381214	0					
ANR	381296	Identifier	UNEXPECTED		381214	0					
ANR	381297	ArgumentList	object == NULL		381214	1					
ANR	381298	Argument	object == NULL		381214	0					
ANR	381299	EqualityExpression	object == NULL		381214	0		==			
ANR	381300	Identifier	object		381214	0					
ANR	381301	Identifier	NULL		381214	1					
ANR	381302	CompoundStatement		19:56:387:387	381214	1					
ANR	381303	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	23275:2:734226:734316	381214	0	True				
ANR	381304	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		381214	0					
ANR	381305	Callee	zend_throw_error		381214	0					
ANR	381306	Identifier	zend_throw_error		381214	0					
ANR	381307	ArgumentList	NULL		381214	1					
ANR	381308	Argument	NULL		381214	0					
ANR	381309	Identifier	NULL		381214	0					
ANR	381310	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		381214	1					
ANR	381311	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		381214	0					
ANR	381312	ExpressionStatement	HANDLE_EXCEPTION ( )	23277:2:734321:734339	381214	1	True				
ANR	381313	CallExpression	HANDLE_EXCEPTION ( )		381214	0					
ANR	381314	Callee	HANDLE_EXCEPTION		381214	0					
ANR	381315	Identifier	HANDLE_EXCEPTION		381214	0					
ANR	381316	ArgumentList			381214	1					
ANR	381317	DoStatement	do		381214	8					
ANR	381318	CompoundStatement		25:4:514:514	381214	0					
ANR	381319	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		381214	0					
ANR	381320	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	23281:6:734357:734423	381214	0	True				
ANR	381321	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		381214	0		&&			
ANR	381322	EqualityExpression	IS_UNUSED != IS_UNUSED		381214	0		!=			
ANR	381323	Identifier	IS_UNUSED		381214	0					
ANR	381324	Identifier	IS_UNUSED		381214	1					
ANR	381325	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		381214	1					
ANR	381326	Callee	UNEXPECTED		381214	0					
ANR	381327	Identifier	UNEXPECTED		381214	0					
ANR	381328	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		381214	1					
ANR	381329	Argument	Z_TYPE_P ( object ) != IS_OBJECT		381214	0					
ANR	381330	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		381214	0		!=			
ANR	381331	CallExpression	Z_TYPE_P ( object )		381214	0					
ANR	381332	Callee	Z_TYPE_P		381214	0					
ANR	381333	Identifier	Z_TYPE_P		381214	0					
ANR	381334	ArgumentList	object		381214	1					
ANR	381335	Argument	object		381214	0					
ANR	381336	Identifier	object		381214	0					
ANR	381337	Identifier	IS_OBJECT		381214	1					
ANR	381338	CompoundStatement		26:75:591:591	381214	1					
ANR	381339	ExpressionStatement	ZVAL_DEREF ( object )	23282:3:734431:734449	381214	0	True				
ANR	381340	CallExpression	ZVAL_DEREF ( object )		381214	0					
ANR	381341	Callee	ZVAL_DEREF		381214	0					
ANR	381342	Identifier	ZVAL_DEREF		381214	0					
ANR	381343	ArgumentList	object		381214	1					
ANR	381344	Argument	object		381214	0					
ANR	381345	Identifier	object		381214	0					
ANR	381346	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		381214	1					
ANR	381347	Condition	UNEXPECTED ( ! make_real_object ( object ) )	23283:7:734458:734494	381214	0	True				
ANR	381348	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		381214	0					
ANR	381349	Callee	UNEXPECTED		381214	0					
ANR	381350	Identifier	UNEXPECTED		381214	0					
ANR	381351	ArgumentList	! make_real_object ( object )		381214	1					
ANR	381352	Argument	! make_real_object ( object )		381214	0					
ANR	381353	UnaryOperationExpression	! make_real_object ( object )		381214	0					
ANR	381354	UnaryOperator	!		381214	0					
ANR	381355	CallExpression	make_real_object ( object )		381214	1					
ANR	381356	Callee	make_real_object		381214	0					
ANR	381357	Identifier	make_real_object		381214	0					
ANR	381358	ArgumentList	object		381214	1					
ANR	381359	Argument	object		381214	0					
ANR	381360	Identifier	object		381214	0					
ANR	381361	CompoundStatement		28:46:662:662	381214	1					
ANR	381362	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	23284:4:734503:734581	381214	0	True				
ANR	381363	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		381214	0					
ANR	381364	Callee	zend_error		381214	0					
ANR	381365	Identifier	zend_error		381214	0					
ANR	381366	ArgumentList	E_WARNING		381214	1					
ANR	381367	Argument	E_WARNING		381214	0					
ANR	381368	Identifier	E_WARNING		381214	0					
ANR	381369	Argument	"""Attempt to increment/decrement property of non-object"""		381214	1					
ANR	381370	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		381214	0					
ANR	381371	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	23285:4:734587:734624	381214	1	True				
ANR	381372	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		381214	0					
ANR	381373	Callee	ZVAL_NULL		381214	0					
ANR	381374	Identifier	ZVAL_NULL		381214	0					
ANR	381375	ArgumentList	EX_VAR ( opline -> result . var )		381214	1					
ANR	381376	Argument	EX_VAR ( opline -> result . var )		381214	0					
ANR	381377	CallExpression	EX_VAR ( opline -> result . var )		381214	0					
ANR	381378	Callee	EX_VAR		381214	0					
ANR	381379	Identifier	EX_VAR		381214	0					
ANR	381380	ArgumentList	opline -> result . var		381214	1					
ANR	381381	Argument	opline -> result . var		381214	0					
ANR	381382	MemberAccess	opline -> result . var		381214	0					
ANR	381383	PtrMemberAccess	opline -> result		381214	0					
ANR	381384	Identifier	opline		381214	0					
ANR	381385	Identifier	result		381214	1					
ANR	381386	Identifier	var		381214	1					
ANR	381387	BreakStatement	break ;	23286:4:734630:734635	381214	2	True				
ANR	381388	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		381214	1					
ANR	381389	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	23292:6:734709:734933	381214	0	True				
ANR	381390	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		381214	0		&&			
ANR	381391	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		381214	0					
ANR	381392	Callee	EXPECTED		381214	0					
ANR	381393	Identifier	EXPECTED		381214	0					
ANR	381394	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		381214	1					
ANR	381395	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		381214	0					
ANR	381396	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		381214	0					
ANR	381397	CallExpression	Z_OBJ_HT_P ( object )		381214	0					
ANR	381398	Callee	Z_OBJ_HT_P		381214	0					
ANR	381399	Identifier	Z_OBJ_HT_P		381214	0					
ANR	381400	ArgumentList	object		381214	1					
ANR	381401	Argument	object		381214	0					
ANR	381402	Identifier	object		381214	0					
ANR	381403	Identifier	get_property_ptr_ptr		381214	1					
ANR	381404	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		381214	1					
ANR	381405	Callee	EXPECTED		381214	0					
ANR	381406	Identifier	EXPECTED		381214	0					
ANR	381407	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		381214	1					
ANR	381408	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		381214	0					
ANR	381409	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		381214	0		!=			
ANR	381410	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		381214	0		=			
ANR	381411	Identifier	zptr		381214	0					
ANR	381412	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		381214	1					
ANR	381413	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		381214	0					
ANR	381414	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		381214	0					
ANR	381415	CallExpression	Z_OBJ_HT_P ( object )		381214	0					
ANR	381416	Callee	Z_OBJ_HT_P		381214	0					
ANR	381417	Identifier	Z_OBJ_HT_P		381214	0					
ANR	381418	ArgumentList	object		381214	1					
ANR	381419	Argument	object		381214	0					
ANR	381420	Identifier	object		381214	0					
ANR	381421	Identifier	get_property_ptr_ptr		381214	1					
ANR	381422	ArgumentList	object		381214	1					
ANR	381423	Argument	object		381214	0					
ANR	381424	Identifier	object		381214	0					
ANR	381425	Argument	property		381214	1					
ANR	381426	Identifier	property		381214	0					
ANR	381427	Argument	BP_VAR_RW		381214	2					
ANR	381428	Identifier	BP_VAR_RW		381214	0					
ANR	381429	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		381214	3					
ANR	381430	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		381214	0					
ANR	381431	Condition	IS_CONST == IS_CONST		381214	0					
ANR	381432	EqualityExpression	IS_CONST == IS_CONST		381214	0		==			
ANR	381433	Identifier	IS_CONST		381214	0					
ANR	381434	Identifier	IS_CONST		381214	1					
ANR	381435	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		381214	1					
ANR	381436	Callee	CACHE_ADDR		381214	0					
ANR	381437	Identifier	CACHE_ADDR		381214	0					
ANR	381438	ArgumentList	Z_CACHE_SLOT_P ( property )		381214	1					
ANR	381439	Argument	Z_CACHE_SLOT_P ( property )		381214	0					
ANR	381440	CallExpression	Z_CACHE_SLOT_P ( property )		381214	0					
ANR	381441	Callee	Z_CACHE_SLOT_P		381214	0					
ANR	381442	Identifier	Z_CACHE_SLOT_P		381214	0					
ANR	381443	ArgumentList	property		381214	1					
ANR	381444	Argument	property		381214	0					
ANR	381445	Identifier	property		381214	0					
ANR	381446	Identifier	NULL		381214	2					
ANR	381447	Identifier	NULL		381214	1					
ANR	381448	CompoundStatement		38:176:1101:1101	381214	1					
ANR	381449	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		381214	0					
ANR	381450	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	23295:7:734946:734980	381214	0	True				
ANR	381451	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		381214	0					
ANR	381452	Callee	EXPECTED		381214	0					
ANR	381453	Identifier	EXPECTED		381214	0					
ANR	381454	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		381214	1					
ANR	381455	Argument	Z_TYPE_P ( zptr ) == IS_LONG		381214	0					
ANR	381456	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		381214	0		==			
ANR	381457	CallExpression	Z_TYPE_P ( zptr )		381214	0					
ANR	381458	Callee	Z_TYPE_P		381214	0					
ANR	381459	Identifier	Z_TYPE_P		381214	0					
ANR	381460	ArgumentList	zptr		381214	1					
ANR	381461	Argument	zptr		381214	0					
ANR	381462	Identifier	zptr		381214	0					
ANR	381463	Identifier	IS_LONG		381214	1					
ANR	381464	CompoundStatement		40:44:1148:1148	381214	1					
ANR	381465	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	23296:4:734989:735038	381214	0	True				
ANR	381466	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		381214	0					
ANR	381467	Callee	ZVAL_COPY_VALUE		381214	0					
ANR	381468	Identifier	ZVAL_COPY_VALUE		381214	0					
ANR	381469	ArgumentList	EX_VAR ( opline -> result . var )		381214	1					
ANR	381470	Argument	EX_VAR ( opline -> result . var )		381214	0					
ANR	381471	CallExpression	EX_VAR ( opline -> result . var )		381214	0					
ANR	381472	Callee	EX_VAR		381214	0					
ANR	381473	Identifier	EX_VAR		381214	0					
ANR	381474	ArgumentList	opline -> result . var		381214	1					
ANR	381475	Argument	opline -> result . var		381214	0					
ANR	381476	MemberAccess	opline -> result . var		381214	0					
ANR	381477	PtrMemberAccess	opline -> result		381214	0					
ANR	381478	Identifier	opline		381214	0					
ANR	381479	Identifier	result		381214	1					
ANR	381480	Identifier	var		381214	1					
ANR	381481	Argument	zptr		381214	1					
ANR	381482	Identifier	zptr		381214	0					
ANR	381483	IfStatement	if ( inc )		381214	1					
ANR	381484	Condition	inc	23297:8:735048:735050	381214	0	True				
ANR	381485	Identifier	inc		381214	0					
ANR	381486	CompoundStatement		42:13:1218:1218	381214	1					
ANR	381487	ExpressionStatement	fast_long_increment_function ( zptr )	23298:5:735060:735094	381214	0	True				
ANR	381488	CallExpression	fast_long_increment_function ( zptr )		381214	0					
ANR	381489	Callee	fast_long_increment_function		381214	0					
ANR	381490	Identifier	fast_long_increment_function		381214	0					
ANR	381491	ArgumentList	zptr		381214	1					
ANR	381492	Argument	zptr		381214	0					
ANR	381493	Identifier	zptr		381214	0					
ANR	381494	ElseStatement	else		381214	0					
ANR	381495	CompoundStatement		44:11:1272:1272	381214	0					
ANR	381496	ExpressionStatement	fast_long_decrement_function ( zptr )	23300:5:735114:735148	381214	0	True				
ANR	381497	CallExpression	fast_long_decrement_function ( zptr )		381214	0					
ANR	381498	Callee	fast_long_decrement_function		381214	0					
ANR	381499	Identifier	fast_long_decrement_function		381214	0					
ANR	381500	ArgumentList	zptr		381214	1					
ANR	381501	Argument	zptr		381214	0					
ANR	381502	Identifier	zptr		381214	0					
ANR	381503	ElseStatement	else		381214	0					
ANR	381504	CompoundStatement		47:10:1331:1331	381214	0					
ANR	381505	ExpressionStatement	ZVAL_DEREF ( zptr )	23303:4:735172:735188	381214	0	True				
ANR	381506	CallExpression	ZVAL_DEREF ( zptr )		381214	0					
ANR	381507	Callee	ZVAL_DEREF		381214	0					
ANR	381508	Identifier	ZVAL_DEREF		381214	0					
ANR	381509	ArgumentList	zptr		381214	1					
ANR	381510	Argument	zptr		381214	0					
ANR	381511	Identifier	zptr		381214	0					
ANR	381512	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	23304:4:735194:735243	381214	1	True				
ANR	381513	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		381214	0					
ANR	381514	Callee	ZVAL_COPY_VALUE		381214	0					
ANR	381515	Identifier	ZVAL_COPY_VALUE		381214	0					
ANR	381516	ArgumentList	EX_VAR ( opline -> result . var )		381214	1					
ANR	381517	Argument	EX_VAR ( opline -> result . var )		381214	0					
ANR	381518	CallExpression	EX_VAR ( opline -> result . var )		381214	0					
ANR	381519	Callee	EX_VAR		381214	0					
ANR	381520	Identifier	EX_VAR		381214	0					
ANR	381521	ArgumentList	opline -> result . var		381214	1					
ANR	381522	Argument	opline -> result . var		381214	0					
ANR	381523	MemberAccess	opline -> result . var		381214	0					
ANR	381524	PtrMemberAccess	opline -> result		381214	0					
ANR	381525	Identifier	opline		381214	0					
ANR	381526	Identifier	result		381214	1					
ANR	381527	Identifier	var		381214	1					
ANR	381528	Argument	zptr		381214	1					
ANR	381529	Identifier	zptr		381214	0					
ANR	381530	ExpressionStatement	zval_opt_copy_ctor ( zptr )	23305:4:735249:735273	381214	2	True				
ANR	381531	CallExpression	zval_opt_copy_ctor ( zptr )		381214	0					
ANR	381532	Callee	zval_opt_copy_ctor		381214	0					
ANR	381533	Identifier	zval_opt_copy_ctor		381214	0					
ANR	381534	ArgumentList	zptr		381214	1					
ANR	381535	Argument	zptr		381214	0					
ANR	381536	Identifier	zptr		381214	0					
ANR	381537	IfStatement	if ( inc )		381214	3					
ANR	381538	Condition	inc	23306:8:735283:735285	381214	0	True				
ANR	381539	Identifier	inc		381214	0					
ANR	381540	CompoundStatement		51:13:1453:1453	381214	1					
ANR	381541	ExpressionStatement	increment_function ( zptr )	23307:5:735295:735319	381214	0	True				
ANR	381542	CallExpression	increment_function ( zptr )		381214	0					
ANR	381543	Callee	increment_function		381214	0					
ANR	381544	Identifier	increment_function		381214	0					
ANR	381545	ArgumentList	zptr		381214	1					
ANR	381546	Argument	zptr		381214	0					
ANR	381547	Identifier	zptr		381214	0					
ANR	381548	ElseStatement	else		381214	0					
ANR	381549	CompoundStatement		53:11:1497:1497	381214	0					
ANR	381550	ExpressionStatement	decrement_function ( zptr )	23309:5:735339:735363	381214	0	True				
ANR	381551	CallExpression	decrement_function ( zptr )		381214	0					
ANR	381552	Callee	decrement_function		381214	0					
ANR	381553	Identifier	decrement_function		381214	0					
ANR	381554	ArgumentList	zptr		381214	1					
ANR	381555	Argument	zptr		381214	0					
ANR	381556	Identifier	zptr		381214	0					
ANR	381557	ElseStatement	else		381214	0					
ANR	381558	CompoundStatement		57:9:1550:1550	381214	0					
ANR	381559	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	23313:3:735390:735549	381214	0	True				
ANR	381560	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		381214	0					
ANR	381561	Callee	zend_post_incdec_overloaded_property		381214	0					
ANR	381562	Identifier	zend_post_incdec_overloaded_property		381214	0					
ANR	381563	ArgumentList	object		381214	1					
ANR	381564	Argument	object		381214	0					
ANR	381565	Identifier	object		381214	0					
ANR	381566	Argument	property		381214	1					
ANR	381567	Identifier	property		381214	0					
ANR	381568	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		381214	2					
ANR	381569	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		381214	0					
ANR	381570	Condition	IS_CONST == IS_CONST		381214	0					
ANR	381571	EqualityExpression	IS_CONST == IS_CONST		381214	0		==			
ANR	381572	Identifier	IS_CONST		381214	0					
ANR	381573	Identifier	IS_CONST		381214	1					
ANR	381574	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		381214	1					
ANR	381575	Callee	CACHE_ADDR		381214	0					
ANR	381576	Identifier	CACHE_ADDR		381214	0					
ANR	381577	ArgumentList	Z_CACHE_SLOT_P ( property )		381214	1					
ANR	381578	Argument	Z_CACHE_SLOT_P ( property )		381214	0					
ANR	381579	CallExpression	Z_CACHE_SLOT_P ( property )		381214	0					
ANR	381580	Callee	Z_CACHE_SLOT_P		381214	0					
ANR	381581	Identifier	Z_CACHE_SLOT_P		381214	0					
ANR	381582	ArgumentList	property		381214	1					
ANR	381583	Argument	property		381214	0					
ANR	381584	Identifier	property		381214	0					
ANR	381585	Identifier	NULL		381214	2					
ANR	381586	Argument	inc		381214	3					
ANR	381587	Identifier	inc		381214	0					
ANR	381588	Argument	EX_VAR ( opline -> result . var )		381214	4					
ANR	381589	CallExpression	EX_VAR ( opline -> result . var )		381214	0					
ANR	381590	Callee	EX_VAR		381214	0					
ANR	381591	Identifier	EX_VAR		381214	0					
ANR	381592	ArgumentList	opline -> result . var		381214	1					
ANR	381593	Argument	opline -> result . var		381214	0					
ANR	381594	MemberAccess	opline -> result . var		381214	0					
ANR	381595	PtrMemberAccess	opline -> result		381214	0					
ANR	381596	Identifier	opline		381214	0					
ANR	381597	Identifier	result		381214	1					
ANR	381598	Identifier	var		381214	1					
ANR	381599	Condition	0	23315:10:735565:735565	381214	1	True				
ANR	381600	PrimaryExpression	0		381214	0					
ANR	381601	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	23318:1:735572:735609	381214	9	True				
ANR	381602	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		381214	0					
ANR	381603	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		381214	0					
ANR	381604	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		381214	0					
ANR	381605	ArgumentList			381214	1					
ANR	381606	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		381214	1					
ANR	381607	Identifier	zend_post_incdec_property_helper_SPEC_UNUSED_CONST		381214	2					
ANR	381608	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		381214	3					
ANR	381609	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	23255:96:733797:733831	381214	0	True				
ANR	381610	ParameterType	int inc		381214	0					
ANR	381611	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		381214	1					
ANR	381612	CFGEntryNode	ENTRY		381214		True				
ANR	381613	CFGExitNode	EXIT		381214		True				
ANR	381614	Symbol	opline -> op2		381214						
ANR	381615	Symbol	Z_OBJ_P		381214						
ANR	381616	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		381214						
ANR	381617	Symbol	zptr		381214						
ANR	381618	Symbol	execute_data		381214						
ANR	381619	Symbol	opline -> result		381214						
ANR	381620	Symbol	_get_obj_zval_ptr_unused		381214						
ANR	381621	Symbol	UNEXPECTED		381214						
ANR	381622	Symbol	E_WARNING		381214						
ANR	381623	Symbol	make_real_object		381214						
ANR	381624	Symbol	opline		381214						
ANR	381625	Symbol	IS_LONG		381214						
ANR	381626	Symbol	property		381214						
ANR	381627	Symbol	inc		381214						
ANR	381628	Symbol	BP_VAR_RW		381214						
ANR	381629	Symbol	IS_CONST		381214						
ANR	381630	Symbol	NULL		381214						
ANR	381631	Symbol	EX_CONSTANT		381214						
ANR	381632	Symbol	Z_CACHE_SLOT_P		381214						
ANR	381633	Symbol	Z_TYPE_P		381214						
ANR	381634	Symbol	* Z_OBJ_HT_P		381214						
ANR	381635	Symbol	CACHE_ADDR		381214						
ANR	381636	Symbol	* opline		381214						
ANR	381637	Symbol	Z_OBJ_HT_P		381214						
ANR	381638	Symbol	EX_VAR		381214						
ANR	381639	Symbol	IS_OBJECT		381214						
ANR	381640	Symbol	IS_VAR		381214						
ANR	381641	Symbol	EXPECTED		381214						
ANR	381642	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		381214						
ANR	381643	Symbol	opline -> result . var		381214						
ANR	381644	Symbol	object		381214						
ANR	381645	Symbol	IS_UNUSED		381214						
ANR	381646	DeclStmt									
ANR	381647	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	381648	DeclStmt									
ANR	381649	Decl							zval	zval *	offset
ANR	381650	DeclStmt									
ANR	381651	Decl							zend_object	zend_object *	zobj
ANR	381652	DeclStmt									
ANR	381653	Decl							zval	zval *	retval
ANR	381654	DeclStmt									
ANR	381655	Decl							uint32_t	uint32_t	prop_offset
ANR	381656	DeclStmt									
ANR	381657	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	381658	DeclStmt									
ANR	381659	Decl							zval	zval *	property
ANR	381660	DeclStmt									
ANR	381661	Decl							zval	zval *	container
ANR	381662	DeclStmt									
ANR	381663	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	381664	DeclStmt									
ANR	381665	Decl							zval	zval *	property
ANR	381666	DeclStmt									
ANR	381667	Decl							zval	zval *	container
ANR	381668	DeclStmt									
ANR	381669	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	381670	DeclStmt									
ANR	381671	Decl							zval	zval *	offset
ANR	381672	DeclStmt									
ANR	381673	Decl							zend_object	zend_object *	zobj
ANR	381674	DeclStmt									
ANR	381675	Decl							zval	zval *	retval
ANR	381676	DeclStmt									
ANR	381677	Decl							uint32_t	uint32_t	prop_offset
ANR	381678	DeclStmt									
ANR	381679	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	381680	DeclStmt									
ANR	381681	Decl							zend_free_op	zend_free_op	free_op1
ANR	381682	DeclStmt									
ANR	381683	Decl							zval	zval *	property
ANR	381684	DeclStmt									
ANR	381685	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	381686	DeclStmt									
ANR	381687	Decl							zval	zval *	container
ANR	381688	Decl							zval	zval *	property
ANR	381689	DeclStmt									
ANR	381690	Decl							USE_OPLINE zval	USE_OPLINE zval *	object
ANR	381691	DeclStmt									
ANR	381692	Decl							zval	zval *	property_name
ANR	381693	DeclStmt									
ANR	381694	Decl							USE_OPLINE zend_string	USE_OPLINE zend_string * *	rope
ANR	381695	DeclStmt									
ANR	381696	Decl							zval	zval *	var
ANR	381697	DeclStmt									
ANR	381698	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	381699	DeclStmt									
ANR	381700	Decl							zval	zval *	object
ANR	381701	DeclStmt									
ANR	381702	Decl							zend_function	zend_function *	fbc
ANR	381703	DeclStmt									
ANR	381704	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	381705	DeclStmt									
ANR	381706	Decl							zend_object	zend_object *	obj
ANR	381707	DeclStmt									
ANR	381708	Decl							zend_execute_data	zend_execute_data *	call
ANR	381709	DeclStmt									
ANR	381710	Decl							uint32_t	uint32_t	call_info
ANR	381711	DeclStmt									
ANR	381712	Decl							zend_object	zend_object *	orig_obj
ANR	381713	DeclStmt									
ANR	381714	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	381715	DeclStmt									
ANR	381716	Decl							zend_constant	zend_constant *	c
ANR	381717	DeclStmt									
ANR	381718	Decl							char	char *	actual
ANR	381719	DeclStmt									
ANR	381720	Decl							zend_class_entry	zend_class_entry *	ce
ANR	381721	DeclStmt									
ANR	381722	Decl							zval	zval *	value
ANR	381723	DeclStmt									
ANR	381724	Decl							zval	zval *	array
ANR	381725	DeclStmt									
ANR	381726	Decl							uint32_t	uint32_t	size
ANR	381727	DeclStmt									
ANR	381728	Decl							USE_OPLINE	USE_OPLINE	array
ANR	381729	DeclStmt									
ANR	381730	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	381731	DeclStmt									
ANR	381732	Decl							zval	zval *	offset
ANR	381733	DeclStmt									
ANR	381734	Decl							zend_ulong	zend_ulong	hval
ANR	381735	DeclStmt									
ANR	381736	Decl							zend_string	zend_string *	key
ANR	381737	DeclStmt									
ANR	381738	Decl							HashTable	HashTable *	ht
ANR	381739	DeclStmt									
ANR	381740	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	381741	DeclStmt									
ANR	381742	Decl							zval	zval *	offset
ANR	381743	DeclStmt									
ANR	381744	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	381745	DeclStmt									
ANR	381746	Decl							int	int	result
ANR	381747	DeclStmt									
ANR	381748	Decl							zend_ulong	zend_ulong	hval
ANR	381749	DeclStmt									
ANR	381750	Decl							zval	zval *	offset
ANR	381751	DeclStmt									
ANR	381752	Decl							HashTable	HashTable *	ht
ANR	381753	DeclStmt									
ANR	381754	Decl							zval	zval *	value
ANR	381755	DeclStmt									
ANR	381756	Decl							zend_string	zend_string *	str
ANR	381757	DeclStmt									
ANR	381758	Decl							zend_long	zend_long	lval
ANR	381759	DeclStmt									
ANR	381760	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	381761	DeclStmt									
ANR	381762	Decl							int	int	result
ANR	381763	DeclStmt									
ANR	381764	Decl							zval	zval *	offset
ANR	381765	DeclStmt									
ANR	381766	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	381767	DeclStmt									
ANR	381768	Decl							zval	zval *	value
ANR	381769	DeclStmt									
ANR	381770	Decl							zval	zval *	value_ptr
ANR	381771	DeclStmt									
ANR	381772	Decl							zval	zval *	value
ANR	381773	DeclStmt									
ANR	381774	Decl							zval	zval *	key
ANR	381775	DeclStmt									
ANR	381776	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	381777	DeclStmt									
ANR	381778	Decl							zval	zval *	value
ANR	381779	DeclStmt									
ANR	381780	Decl							zval	zval *	value_ptr
ANR	381781	DeclStmt									
ANR	381782	Decl							zval	zval *	value
ANR	381783	DeclStmt									
ANR	381784	Decl							zend_free_op	zend_free_op	free_op2
ANR	381785	DeclStmt									
ANR	381786	Decl							zval	zval *	key
ANR	381787	DeclStmt									
ANR	381788	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	381789	DeclStmt									
ANR	381790	Decl							zval	zval *	value
ANR	381791	DeclStmt									
ANR	381792	Decl							zval	zval *	value_ptr
ANR	381793	DeclStmt									
ANR	381794	Decl							zval	zval *	value
ANR	381795	DeclStmt									
ANR	381796	Decl							zend_free_op	zend_free_op	free_op2
ANR	381797	DeclStmt									
ANR	381798	Decl							zval	zval *	key
ANR	381799	Function	zend_binary_assign_op_dim_helper_SPEC_UNUSED_UNUSED	24676:0:777031:779166							
ANR	381800	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_UNUSED_UNUSED (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		381799	0					
ANR	381801	CompoundStatement		24677:0:777182:779166	381799	0					
ANR	381802	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	24678:1:777185:777223	381799	0	True				
ANR	381803	IdentifierDecl	free_op_data1		381799	0					
ANR	381804	IdentifierDeclType	USE_OPLINE zend_free_op		381799	0					
ANR	381805	Identifier	free_op_data1		381799	1					
ANR	381806	IdentifierDeclStatement	"zval * var_ptr , rv ;"	24680:1:777226:777243	381799	1	True				
ANR	381807	IdentifierDecl	* var_ptr		381799	0					
ANR	381808	IdentifierDeclType	zval *		381799	0					
ANR	381809	Identifier	var_ptr		381799	1					
ANR	381810	IdentifierDecl	rv		381799	1					
ANR	381811	IdentifierDeclType	zval		381799	0					
ANR	381812	Identifier	rv		381799	1					
ANR	381813	IdentifierDeclStatement	"zval * value , * container , * dim ;"	24681:1:777246:777275	381799	2	True				
ANR	381814	IdentifierDecl	* value		381799	0					
ANR	381815	IdentifierDeclType	zval *		381799	0					
ANR	381816	Identifier	value		381799	1					
ANR	381817	IdentifierDecl	* container		381799	1					
ANR	381818	IdentifierDeclType	zval *		381799	0					
ANR	381819	Identifier	container		381799	1					
ANR	381820	IdentifierDecl	* dim		381799	2					
ANR	381821	IdentifierDeclType	zval *		381799	0					
ANR	381822	Identifier	dim		381799	1					
ANR	381823	ExpressionStatement	SAVE_OPLINE ( )	24683:1:777279:777292	381799	3	True				
ANR	381824	CallExpression	SAVE_OPLINE ( )		381799	0					
ANR	381825	Callee	SAVE_OPLINE		381799	0					
ANR	381826	Identifier	SAVE_OPLINE		381799	0					
ANR	381827	ArgumentList			381799	1					
ANR	381828	ExpressionStatement	container = _get_obj_zval_ptr_unused ( execute_data )	24684:1:777295:777345	381799	4	True				
ANR	381829	AssignmentExpression	container = _get_obj_zval_ptr_unused ( execute_data )		381799	0		=			
ANR	381830	Identifier	container		381799	0					
ANR	381831	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		381799	1					
ANR	381832	Callee	_get_obj_zval_ptr_unused		381799	0					
ANR	381833	Identifier	_get_obj_zval_ptr_unused		381799	0					
ANR	381834	ArgumentList	execute_data		381799	1					
ANR	381835	Argument	execute_data		381799	0					
ANR	381836	Identifier	execute_data		381799	0					
ANR	381837	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		381799	5					
ANR	381838	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	24685:5:777352:777415	381799	0	True				
ANR	381839	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		381799	0		&&			
ANR	381840	EqualityExpression	IS_UNUSED == IS_UNUSED		381799	0		==			
ANR	381841	Identifier	IS_UNUSED		381799	0					
ANR	381842	Identifier	IS_UNUSED		381799	1					
ANR	381843	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		381799	1					
ANR	381844	Callee	UNEXPECTED		381799	0					
ANR	381845	Identifier	UNEXPECTED		381799	0					
ANR	381846	ArgumentList	Z_OBJ_P ( container ) == NULL		381799	1					
ANR	381847	Argument	Z_OBJ_P ( container ) == NULL		381799	0					
ANR	381848	EqualityExpression	Z_OBJ_P ( container ) == NULL		381799	0		==			
ANR	381849	CallExpression	Z_OBJ_P ( container )		381799	0					
ANR	381850	Callee	Z_OBJ_P		381799	0					
ANR	381851	Identifier	Z_OBJ_P		381799	0					
ANR	381852	ArgumentList	container		381799	1					
ANR	381853	Argument	container		381799	0					
ANR	381854	Identifier	container		381799	0					
ANR	381855	Identifier	NULL		381799	1					
ANR	381856	CompoundStatement		9:71:235:235	381799	1					
ANR	381857	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	24686:2:777422:777486	381799	0	True				
ANR	381858	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		381799	0					
ANR	381859	Callee	zend_throw_error		381799	0					
ANR	381860	Identifier	zend_throw_error		381799	0					
ANR	381861	ArgumentList	NULL		381799	1					
ANR	381862	Argument	NULL		381799	0					
ANR	381863	Identifier	NULL		381799	0					
ANR	381864	Argument	"""Using $this when not in object context"""		381799	1					
ANR	381865	PrimaryExpression	"""Using $this when not in object context"""		381799	0					
ANR	381866	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	24687:2:777490:777550	381799	1	True				
ANR	381867	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		381799	0					
ANR	381868	Callee	FREE_UNFETCHED_OP		381799	0					
ANR	381869	Identifier	FREE_UNFETCHED_OP		381799	0					
ANR	381870	ArgumentList	( opline + 1 ) -> op1_type		381799	1					
ANR	381871	Argument	( opline + 1 ) -> op1_type		381799	0					
ANR	381872	PtrMemberAccess	( opline + 1 ) -> op1_type		381799	0					
ANR	381873	AdditiveExpression	opline + 1		381799	0		+			
ANR	381874	Identifier	opline		381799	0					
ANR	381875	PrimaryExpression	1		381799	1					
ANR	381876	Identifier	op1_type		381799	1					
ANR	381877	Argument	( opline + 1 ) -> op1 . var		381799	1					
ANR	381878	MemberAccess	( opline + 1 ) -> op1 . var		381799	0					
ANR	381879	PtrMemberAccess	( opline + 1 ) -> op1		381799	0					
ANR	381880	AdditiveExpression	opline + 1		381799	0		+			
ANR	381881	Identifier	opline		381799	0					
ANR	381882	PrimaryExpression	1		381799	1					
ANR	381883	Identifier	op1		381799	1					
ANR	381884	Identifier	var		381799	1					
ANR	381885	ExpressionStatement	HANDLE_EXCEPTION ( )	24689:2:777555:777573	381799	2	True				
ANR	381886	CallExpression	HANDLE_EXCEPTION ( )		381799	0					
ANR	381887	Callee	HANDLE_EXCEPTION		381799	0					
ANR	381888	Identifier	HANDLE_EXCEPTION		381799	0					
ANR	381889	ArgumentList			381799	1					
ANR	381890	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL ) )		381799	6					
ANR	381891	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )	24691:5:777583:777634	381799	0	True				
ANR	381892	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )		381799	0		&&			
ANR	381893	EqualityExpression	IS_UNUSED == IS_VAR		381799	0		==			
ANR	381894	Identifier	IS_UNUSED		381799	0					
ANR	381895	Identifier	IS_VAR		381799	1					
ANR	381896	CallExpression	UNEXPECTED ( container == NULL )		381799	1					
ANR	381897	Callee	UNEXPECTED		381799	0					
ANR	381898	Identifier	UNEXPECTED		381799	0					
ANR	381899	ArgumentList	container == NULL		381799	1					
ANR	381900	Argument	container == NULL		381799	0					
ANR	381901	EqualityExpression	container == NULL		381799	0		==			
ANR	381902	Identifier	container		381799	0					
ANR	381903	Identifier	NULL		381799	1					
ANR	381904	CompoundStatement		15:59:454:454	381799	1					
ANR	381905	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	24692:2:777641:777703	381799	0	True				
ANR	381906	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		381799	0					
ANR	381907	Callee	zend_throw_error		381799	0					
ANR	381908	Identifier	zend_throw_error		381799	0					
ANR	381909	ArgumentList	NULL		381799	1					
ANR	381910	Argument	NULL		381799	0					
ANR	381911	Identifier	NULL		381799	0					
ANR	381912	Argument	"""Cannot use string offset as an array"""		381799	1					
ANR	381913	PrimaryExpression	"""Cannot use string offset as an array"""		381799	0					
ANR	381914	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	24693:2:777707:777767	381799	1	True				
ANR	381915	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		381799	0					
ANR	381916	Callee	FREE_UNFETCHED_OP		381799	0					
ANR	381917	Identifier	FREE_UNFETCHED_OP		381799	0					
ANR	381918	ArgumentList	( opline + 1 ) -> op1_type		381799	1					
ANR	381919	Argument	( opline + 1 ) -> op1_type		381799	0					
ANR	381920	PtrMemberAccess	( opline + 1 ) -> op1_type		381799	0					
ANR	381921	AdditiveExpression	opline + 1		381799	0		+			
ANR	381922	Identifier	opline		381799	0					
ANR	381923	PrimaryExpression	1		381799	1					
ANR	381924	Identifier	op1_type		381799	1					
ANR	381925	Argument	( opline + 1 ) -> op1 . var		381799	1					
ANR	381926	MemberAccess	( opline + 1 ) -> op1 . var		381799	0					
ANR	381927	PtrMemberAccess	( opline + 1 ) -> op1		381799	0					
ANR	381928	AdditiveExpression	opline + 1		381799	0		+			
ANR	381929	Identifier	opline		381799	0					
ANR	381930	PrimaryExpression	1		381799	1					
ANR	381931	Identifier	op1		381799	1					
ANR	381932	Identifier	var		381799	1					
ANR	381933	ExpressionStatement	HANDLE_EXCEPTION ( )	24695:2:777772:777790	381799	2	True				
ANR	381934	CallExpression	HANDLE_EXCEPTION ( )		381799	0					
ANR	381935	Callee	HANDLE_EXCEPTION		381799	0					
ANR	381936	Identifier	HANDLE_EXCEPTION		381799	0					
ANR	381937	ArgumentList			381799	1					
ANR	381938	ExpressionStatement	dim = NULL	24698:1:777797:777807	381799	7	True				
ANR	381939	AssignmentExpression	dim = NULL		381799	0		=			
ANR	381940	Identifier	dim		381799	0					
ANR	381941	Identifier	NULL		381799	1					
ANR	381942	DoStatement	do		381799	8					
ANR	381943	CompoundStatement		24:4:631:631	381799	0					
ANR	381944	IfStatement	if ( IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		381799	0					
ANR	381945	Condition	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	24701:6:777822:777890	381799	0	True				
ANR	381946	OrExpression	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		381799	0		||			
ANR	381947	EqualityExpression	IS_UNUSED == IS_UNUSED		381799	0		==			
ANR	381948	Identifier	IS_UNUSED		381799	0					
ANR	381949	Identifier	IS_UNUSED		381799	1					
ANR	381950	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		381799	1					
ANR	381951	Callee	UNEXPECTED		381799	0					
ANR	381952	Identifier	UNEXPECTED		381799	0					
ANR	381953	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		381799	1					
ANR	381954	Argument	Z_TYPE_P ( container ) != IS_ARRAY		381799	0					
ANR	381955	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		381799	0		!=			
ANR	381956	CallExpression	Z_TYPE_P ( container )		381799	0					
ANR	381957	Callee	Z_TYPE_P		381799	0					
ANR	381958	Identifier	Z_TYPE_P		381799	0					
ANR	381959	ArgumentList	container		381799	1					
ANR	381960	Argument	container		381799	0					
ANR	381961	Identifier	container		381799	0					
ANR	381962	Identifier	IS_ARRAY		381799	1					
ANR	381963	CompoundStatement		25:77:710:710	381799	1					
ANR	381964	IfStatement	if ( IS_UNUSED != IS_UNUSED )		381799	0					
ANR	381965	Condition	IS_UNUSED != IS_UNUSED	24702:7:777902:777923	381799	0	True				
ANR	381966	EqualityExpression	IS_UNUSED != IS_UNUSED		381799	0		!=			
ANR	381967	Identifier	IS_UNUSED		381799	0					
ANR	381968	Identifier	IS_UNUSED		381799	1					
ANR	381969	CompoundStatement		26:31:743:743	381799	1					
ANR	381970	ExpressionStatement	ZVAL_DEREF ( container )	24703:4:777932:777953	381799	0	True				
ANR	381971	CallExpression	ZVAL_DEREF ( container )		381799	0					
ANR	381972	Callee	ZVAL_DEREF		381799	0					
ANR	381973	Identifier	ZVAL_DEREF		381799	0					
ANR	381974	ArgumentList	container		381799	1					
ANR	381975	Argument	container		381799	0					
ANR	381976	Identifier	container		381799	0					
ANR	381977	IfStatement	if ( IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		381799	1					
ANR	381978	Condition	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	24705:7:777967:778034	381799	0	True				
ANR	381979	OrExpression	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		381799	0		||			
ANR	381980	EqualityExpression	IS_UNUSED == IS_UNUSED		381799	0		==			
ANR	381981	Identifier	IS_UNUSED		381799	0					
ANR	381982	Identifier	IS_UNUSED		381799	1					
ANR	381983	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		381799	1					
ANR	381984	Callee	EXPECTED		381799	0					
ANR	381985	Identifier	EXPECTED		381799	0					
ANR	381986	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		381799	1					
ANR	381987	Argument	Z_TYPE_P ( container ) == IS_OBJECT		381799	0					
ANR	381988	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		381799	0		==			
ANR	381989	CallExpression	Z_TYPE_P ( container )		381799	0					
ANR	381990	Callee	Z_TYPE_P		381799	0					
ANR	381991	Identifier	Z_TYPE_P		381799	0					
ANR	381992	ArgumentList	container		381799	1					
ANR	381993	Argument	container		381799	0					
ANR	381994	Identifier	container		381799	0					
ANR	381995	Identifier	IS_OBJECT		381799	1					
ANR	381996	CompoundStatement		29:77:854:854	381799	1					
ANR	381997	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	24706:4:778043:778134	381799	0	True				
ANR	381998	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		381799	0		=			
ANR	381999	Identifier	value		381799	0					
ANR	382000	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		381799	1					
ANR	382001	Callee	get_zval_ptr_r		381799	0					
ANR	382002	Identifier	get_zval_ptr_r		381799	0					
ANR	382003	ArgumentList	( opline + 1 ) -> op1_type		381799	1					
ANR	382004	Argument	( opline + 1 ) -> op1_type		381799	0					
ANR	382005	PtrMemberAccess	( opline + 1 ) -> op1_type		381799	0					
ANR	382006	AdditiveExpression	opline + 1		381799	0		+			
ANR	382007	Identifier	opline		381799	0					
ANR	382008	PrimaryExpression	1		381799	1					
ANR	382009	Identifier	op1_type		381799	1					
ANR	382010	Argument	( opline + 1 ) -> op1		381799	1					
ANR	382011	PtrMemberAccess	( opline + 1 ) -> op1		381799	0					
ANR	382012	AdditiveExpression	opline + 1		381799	0		+			
ANR	382013	Identifier	opline		381799	0					
ANR	382014	PrimaryExpression	1		381799	1					
ANR	382015	Identifier	op1		381799	1					
ANR	382016	Argument	execute_data		381799	2					
ANR	382017	Identifier	execute_data		381799	0					
ANR	382018	Argument	& free_op_data1		381799	3					
ANR	382019	UnaryOperationExpression	& free_op_data1		381799	0					
ANR	382020	UnaryOperator	&		381799	0					
ANR	382021	Identifier	free_op_data1		381799	1					
ANR	382022	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	24707:4:778140:778278	381799	1	True				
ANR	382023	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		381799	0					
ANR	382024	Callee	zend_binary_assign_op_obj_dim		381799	0					
ANR	382025	Identifier	zend_binary_assign_op_obj_dim		381799	0					
ANR	382026	ArgumentList	container		381799	1					
ANR	382027	Argument	container		381799	0					
ANR	382028	Identifier	container		381799	0					
ANR	382029	Argument	dim		381799	1					
ANR	382030	Identifier	dim		381799	0					
ANR	382031	Argument	value		381799	2					
ANR	382032	Identifier	value		381799	0					
ANR	382033	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		381799	3					
ANR	382034	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		381799	0					
ANR	382035	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		381799	0					
ANR	382036	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		381799	0					
ANR	382037	Callee	UNEXPECTED		381799	0					
ANR	382038	Identifier	UNEXPECTED		381799	0					
ANR	382039	ArgumentList	RETURN_VALUE_USED ( opline )		381799	1					
ANR	382040	Argument	RETURN_VALUE_USED ( opline )		381799	0					
ANR	382041	CallExpression	RETURN_VALUE_USED ( opline )		381799	0					
ANR	382042	Callee	RETURN_VALUE_USED		381799	0					
ANR	382043	Identifier	RETURN_VALUE_USED		381799	0					
ANR	382044	ArgumentList	opline		381799	1					
ANR	382045	Argument	opline		381799	0					
ANR	382046	Identifier	opline		381799	0					
ANR	382047	CallExpression	EX_VAR ( opline -> result . var )		381799	1					
ANR	382048	Callee	EX_VAR		381799	0					
ANR	382049	Identifier	EX_VAR		381799	0					
ANR	382050	ArgumentList	opline -> result . var		381799	1					
ANR	382051	Argument	opline -> result . var		381799	0					
ANR	382052	MemberAccess	opline -> result . var		381799	0					
ANR	382053	PtrMemberAccess	opline -> result		381799	0					
ANR	382054	Identifier	opline		381799	0					
ANR	382055	Identifier	result		381799	1					
ANR	382056	Identifier	var		381799	1					
ANR	382057	Identifier	NULL		381799	2					
ANR	382058	Argument	binary_op		381799	4					
ANR	382059	Identifier	binary_op		381799	0					
ANR	382060	BreakStatement	break ;	24708:4:778284:778289	381799	2	True				
ANR	382061	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_UNUSED )"	24712:2:778303:778366	381799	1	True				
ANR	382062	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_UNUSED )"		381799	0					
ANR	382063	Callee	zend_fetch_dimension_address_RW		381799	0					
ANR	382064	Identifier	zend_fetch_dimension_address_RW		381799	0					
ANR	382065	ArgumentList	& rv		381799	1					
ANR	382066	Argument	& rv		381799	0					
ANR	382067	UnaryOperationExpression	& rv		381799	0					
ANR	382068	UnaryOperator	&		381799	0					
ANR	382069	Identifier	rv		381799	1					
ANR	382070	Argument	container		381799	1					
ANR	382071	Identifier	container		381799	0					
ANR	382072	Argument	dim		381799	2					
ANR	382073	Identifier	dim		381799	0					
ANR	382074	Argument	IS_UNUSED		381799	3					
ANR	382075	Identifier	IS_UNUSED		381799	0					
ANR	382076	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	24713:2:778370:778461	381799	2	True				
ANR	382077	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		381799	0		=			
ANR	382078	Identifier	value		381799	0					
ANR	382079	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		381799	1					
ANR	382080	Callee	get_zval_ptr_r		381799	0					
ANR	382081	Identifier	get_zval_ptr_r		381799	0					
ANR	382082	ArgumentList	( opline + 1 ) -> op1_type		381799	1					
ANR	382083	Argument	( opline + 1 ) -> op1_type		381799	0					
ANR	382084	PtrMemberAccess	( opline + 1 ) -> op1_type		381799	0					
ANR	382085	AdditiveExpression	opline + 1		381799	0		+			
ANR	382086	Identifier	opline		381799	0					
ANR	382087	PrimaryExpression	1		381799	1					
ANR	382088	Identifier	op1_type		381799	1					
ANR	382089	Argument	( opline + 1 ) -> op1		381799	1					
ANR	382090	PtrMemberAccess	( opline + 1 ) -> op1		381799	0					
ANR	382091	AdditiveExpression	opline + 1		381799	0		+			
ANR	382092	Identifier	opline		381799	0					
ANR	382093	PrimaryExpression	1		381799	1					
ANR	382094	Identifier	op1		381799	1					
ANR	382095	Argument	execute_data		381799	2					
ANR	382096	Identifier	execute_data		381799	0					
ANR	382097	Argument	& free_op_data1		381799	3					
ANR	382098	UnaryOperationExpression	& free_op_data1		381799	0					
ANR	382099	UnaryOperator	&		381799	0					
ANR	382100	Identifier	free_op_data1		381799	1					
ANR	382101	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	24714:2:778465:778503	381799	3	True				
ANR	382102	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		381799	0					
ANR	382103	Callee	ZEND_ASSERT		381799	0					
ANR	382104	Identifier	ZEND_ASSERT		381799	0					
ANR	382105	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		381799	1					
ANR	382106	Argument	Z_TYPE ( rv ) == IS_INDIRECT		381799	0					
ANR	382107	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		381799	0		==			
ANR	382108	CallExpression	Z_TYPE ( rv )		381799	0					
ANR	382109	Callee	Z_TYPE		381799	0					
ANR	382110	Identifier	Z_TYPE		381799	0					
ANR	382111	ArgumentList	rv		381799	1					
ANR	382112	Argument	rv		381799	0					
ANR	382113	Identifier	rv		381799	0					
ANR	382114	Identifier	IS_INDIRECT		381799	1					
ANR	382115	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	24715:2:778507:778531	381799	4	True				
ANR	382116	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		381799	0		=			
ANR	382117	Identifier	var_ptr		381799	0					
ANR	382118	CallExpression	Z_INDIRECT ( rv )		381799	1					
ANR	382119	Callee	Z_INDIRECT		381799	0					
ANR	382120	Identifier	Z_INDIRECT		381799	0					
ANR	382121	ArgumentList	rv		381799	1					
ANR	382122	Argument	rv		381799	0					
ANR	382123	Identifier	rv		381799	0					
ANR	382124	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		381799	5					
ANR	382125	Condition	UNEXPECTED ( var_ptr == NULL )	24717:6:778540:778566	381799	0	True				
ANR	382126	CallExpression	UNEXPECTED ( var_ptr == NULL )		381799	0					
ANR	382127	Callee	UNEXPECTED		381799	0					
ANR	382128	Identifier	UNEXPECTED		381799	0					
ANR	382129	ArgumentList	var_ptr == NULL		381799	1					
ANR	382130	Argument	var_ptr == NULL		381799	0					
ANR	382131	EqualityExpression	var_ptr == NULL		381799	0		==			
ANR	382132	Identifier	var_ptr		381799	0					
ANR	382133	Identifier	NULL		381799	1					
ANR	382134	CompoundStatement		41:35:1386:1386	381799	1					
ANR	382135	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	24718:3:778574:778673	381799	0	True				
ANR	382136	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		381799	0					
ANR	382137	Callee	zend_throw_error		381799	0					
ANR	382138	Identifier	zend_throw_error		381799	0					
ANR	382139	ArgumentList	NULL		381799	1					
ANR	382140	Argument	NULL		381799	0					
ANR	382141	Identifier	NULL		381799	0					
ANR	382142	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		381799	1					
ANR	382143	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		381799	0					
ANR	382144	ExpressionStatement	FREE_OP ( free_op_data1 )	24720:3:778679:778701	381799	1	True				
ANR	382145	CallExpression	FREE_OP ( free_op_data1 )		381799	0					
ANR	382146	Callee	FREE_OP		381799	0					
ANR	382147	Identifier	FREE_OP		381799	0					
ANR	382148	ArgumentList	free_op_data1		381799	1					
ANR	382149	Argument	free_op_data1		381799	0					
ANR	382150	Identifier	free_op_data1		381799	0					
ANR	382151	ExpressionStatement	HANDLE_EXCEPTION ( )	24722:3:778707:778725	381799	2	True				
ANR	382152	CallExpression	HANDLE_EXCEPTION ( )		381799	0					
ANR	382153	Callee	HANDLE_EXCEPTION		381799	0					
ANR	382154	Identifier	HANDLE_EXCEPTION		381799	0					
ANR	382155	ArgumentList			381799	1					
ANR	382156	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		381799	6					
ANR	382157	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	24725:6:778738:778775	381799	0	True				
ANR	382158	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		381799	0					
ANR	382159	Callee	UNEXPECTED		381799	0					
ANR	382160	Identifier	UNEXPECTED		381799	0					
ANR	382161	ArgumentList	var_ptr == & EG ( error_zval )		381799	1					
ANR	382162	Argument	var_ptr == & EG ( error_zval )		381799	0					
ANR	382163	EqualityExpression	var_ptr == & EG ( error_zval )		381799	0		==			
ANR	382164	Identifier	var_ptr		381799	0					
ANR	382165	UnaryOperationExpression	& EG ( error_zval )		381799	1					
ANR	382166	UnaryOperator	&		381799	0					
ANR	382167	CallExpression	EG ( error_zval )		381799	1					
ANR	382168	Callee	EG		381799	0					
ANR	382169	Identifier	EG		381799	0					
ANR	382170	ArgumentList	error_zval		381799	1					
ANR	382171	Argument	error_zval		381799	0					
ANR	382172	Identifier	error_zval		381799	0					
ANR	382173	CompoundStatement		49:46:1595:1595	381799	1					
ANR	382174	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		381799	0					
ANR	382175	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	24726:7:778787:778823	381799	0	True				
ANR	382176	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		381799	0					
ANR	382177	Callee	UNEXPECTED		381799	0					
ANR	382178	Identifier	UNEXPECTED		381799	0					
ANR	382179	ArgumentList	RETURN_VALUE_USED ( opline )		381799	1					
ANR	382180	Argument	RETURN_VALUE_USED ( opline )		381799	0					
ANR	382181	CallExpression	RETURN_VALUE_USED ( opline )		381799	0					
ANR	382182	Callee	RETURN_VALUE_USED		381799	0					
ANR	382183	Identifier	RETURN_VALUE_USED		381799	0					
ANR	382184	ArgumentList	opline		381799	1					
ANR	382185	Argument	opline		381799	0					
ANR	382186	Identifier	opline		381799	0					
ANR	382187	CompoundStatement		50:46:1643:1643	381799	1					
ANR	382188	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	24727:4:778832:778869	381799	0	True				
ANR	382189	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		381799	0					
ANR	382190	Callee	ZVAL_NULL		381799	0					
ANR	382191	Identifier	ZVAL_NULL		381799	0					
ANR	382192	ArgumentList	EX_VAR ( opline -> result . var )		381799	1					
ANR	382193	Argument	EX_VAR ( opline -> result . var )		381799	0					
ANR	382194	CallExpression	EX_VAR ( opline -> result . var )		381799	0					
ANR	382195	Callee	EX_VAR		381799	0					
ANR	382196	Identifier	EX_VAR		381799	0					
ANR	382197	ArgumentList	opline -> result . var		381799	1					
ANR	382198	Argument	opline -> result . var		381799	0					
ANR	382199	MemberAccess	opline -> result . var		381799	0					
ANR	382200	PtrMemberAccess	opline -> result		381799	0					
ANR	382201	Identifier	opline		381799	0					
ANR	382202	Identifier	result		381799	1					
ANR	382203	Identifier	var		381799	1					
ANR	382204	ElseStatement	else		381799	0					
ANR	382205	CompoundStatement		53:9:1702:1702	381799	0					
ANR	382206	ExpressionStatement	ZVAL_DEREF ( var_ptr )	24730:3:778890:778909	381799	0	True				
ANR	382207	CallExpression	ZVAL_DEREF ( var_ptr )		381799	0					
ANR	382208	Callee	ZVAL_DEREF		381799	0					
ANR	382209	Identifier	ZVAL_DEREF		381799	0					
ANR	382210	ArgumentList	var_ptr		381799	1					
ANR	382211	Argument	var_ptr		381799	0					
ANR	382212	Identifier	var_ptr		381799	0					
ANR	382213	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	24731:3:778914:778942	381799	1	True				
ANR	382214	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		381799	0					
ANR	382215	Callee	SEPARATE_ZVAL_NOREF		381799	0					
ANR	382216	Identifier	SEPARATE_ZVAL_NOREF		381799	0					
ANR	382217	ArgumentList	var_ptr		381799	1					
ANR	382218	Argument	var_ptr		381799	0					
ANR	382219	Identifier	var_ptr		381799	0					
ANR	382220	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	24733:3:778948:778982	381799	2	True				
ANR	382221	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		381799	0					
ANR	382222	Callee	binary_op		381799	0					
ANR	382223	Identifier	binary_op		381799	0					
ANR	382224	ArgumentList	var_ptr		381799	1					
ANR	382225	Argument	var_ptr		381799	0					
ANR	382226	Identifier	var_ptr		381799	0					
ANR	382227	Argument	var_ptr		381799	1					
ANR	382228	Identifier	var_ptr		381799	0					
ANR	382229	Argument	value		381799	2					
ANR	382230	Identifier	value		381799	0					
ANR	382231	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		381799	3					
ANR	382232	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	24735:7:778992:779028	381799	0	True				
ANR	382233	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		381799	0					
ANR	382234	Callee	UNEXPECTED		381799	0					
ANR	382235	Identifier	UNEXPECTED		381799	0					
ANR	382236	ArgumentList	RETURN_VALUE_USED ( opline )		381799	1					
ANR	382237	Argument	RETURN_VALUE_USED ( opline )		381799	0					
ANR	382238	CallExpression	RETURN_VALUE_USED ( opline )		381799	0					
ANR	382239	Callee	RETURN_VALUE_USED		381799	0					
ANR	382240	Identifier	RETURN_VALUE_USED		381799	0					
ANR	382241	ArgumentList	opline		381799	1					
ANR	382242	Argument	opline		381799	0					
ANR	382243	Identifier	opline		381799	0					
ANR	382244	CompoundStatement		59:46:1848:1848	381799	1					
ANR	382245	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	24736:4:779037:779083	381799	0	True				
ANR	382246	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		381799	0					
ANR	382247	Callee	ZVAL_COPY		381799	0					
ANR	382248	Identifier	ZVAL_COPY		381799	0					
ANR	382249	ArgumentList	EX_VAR ( opline -> result . var )		381799	1					
ANR	382250	Argument	EX_VAR ( opline -> result . var )		381799	0					
ANR	382251	CallExpression	EX_VAR ( opline -> result . var )		381799	0					
ANR	382252	Callee	EX_VAR		381799	0					
ANR	382253	Identifier	EX_VAR		381799	0					
ANR	382254	ArgumentList	opline -> result . var		381799	1					
ANR	382255	Argument	opline -> result . var		381799	0					
ANR	382256	MemberAccess	opline -> result . var		381799	0					
ANR	382257	PtrMemberAccess	opline -> result		381799	0					
ANR	382258	Identifier	opline		381799	0					
ANR	382259	Identifier	result		381799	1					
ANR	382260	Identifier	var		381799	1					
ANR	382261	Argument	var_ptr		381799	1					
ANR	382262	Identifier	var_ptr		381799	0					
ANR	382263	Condition	0	24739:10:779104:779104	381799	1	True				
ANR	382264	PrimaryExpression	0		381799	0					
ANR	382265	ExpressionStatement	FREE_OP ( free_op_data1 )	24741:1:779110:779132	381799	9	True				
ANR	382266	CallExpression	FREE_OP ( free_op_data1 )		381799	0					
ANR	382267	Callee	FREE_OP		381799	0					
ANR	382268	Identifier	FREE_OP		381799	0					
ANR	382269	ArgumentList	free_op_data1		381799	1					
ANR	382270	Argument	free_op_data1		381799	0					
ANR	382271	Identifier	free_op_data1		381799	0					
ANR	382272	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	24743:1:779136:779164	381799	10	True				
ANR	382273	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		381799	0					
ANR	382274	Callee	ZEND_VM_NEXT_OPCODE_EX		381799	0					
ANR	382275	Identifier	ZEND_VM_NEXT_OPCODE_EX		381799	0					
ANR	382276	ArgumentList	1		381799	1					
ANR	382277	Argument	1		381799	0					
ANR	382278	PrimaryExpression	1		381799	0					
ANR	382279	Argument	2		381799	1					
ANR	382280	PrimaryExpression	2		381799	0					
ANR	382281	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		381799	1					
ANR	382282	Identifier	zend_binary_assign_op_dim_helper_SPEC_UNUSED_UNUSED		381799	2					
ANR	382283	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		381799	3					
ANR	382284	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	24676:97:777128:777179	381799	0	True				
ANR	382285	ParameterType	binary_op_type binary_op		381799	0					
ANR	382286	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		381799	1					
ANR	382287	CFGEntryNode	ENTRY		381799		True				
ANR	382288	CFGExitNode	EXIT		381799		True				
ANR	382289	Symbol	container		381799						
ANR	382290	Symbol	rv		381799						
ANR	382291	Symbol	Z_OBJ_P		381799						
ANR	382292	Symbol	dim		381799						
ANR	382293	Symbol	Z_TYPE		381799						
ANR	382294	Symbol	free_op_data1		381799						
ANR	382295	Symbol	& EG		381799						
ANR	382296	Symbol	var_ptr		381799						
ANR	382297	Symbol	execute_data		381799						
ANR	382298	Symbol	opline -> result		381799						
ANR	382299	Symbol	_get_obj_zval_ptr_unused		381799						
ANR	382300	Symbol	( opline + 1 ) -> op1		381799						
ANR	382301	Symbol	UNEXPECTED		381799						
ANR	382302	Symbol	RETURN_VALUE_USED		381799						
ANR	382303	Symbol	( opline + 1 ) -> op1 . var		381799						
ANR	382304	Symbol	opline		381799						
ANR	382305	Symbol	get_zval_ptr_r		381799						
ANR	382306	Symbol	Z_INDIRECT		381799						
ANR	382307	Symbol	IS_ARRAY		381799						
ANR	382308	Symbol	value		381799						
ANR	382309	Symbol	binary_op		381799						
ANR	382310	Symbol	( opline + 1 ) -> op1_type		381799						
ANR	382311	Symbol	NULL		381799						
ANR	382312	Symbol	Z_TYPE_P		381799						
ANR	382313	Symbol	& rv		381799						
ANR	382314	Symbol	* opline		381799						
ANR	382315	Symbol	error_zval		381799						
ANR	382316	Symbol	EX_VAR		381799						
ANR	382317	Symbol	IS_OBJECT		381799						
ANR	382318	Symbol	IS_VAR		381799						
ANR	382319	Symbol	EXPECTED		381799						
ANR	382320	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		381799						
ANR	382321	Symbol	& free_op_data1		381799						
ANR	382322	Symbol	opline -> result . var		381799						
ANR	382323	Symbol	IS_UNUSED		381799						
ANR	382324	Symbol	IS_INDIRECT		381799						
ANR	382325	DeclStmt									
ANR	382326	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	382327	DeclStmt									
ANR	382328	Decl							zval	zval *	retval_ref
ANR	382329	Decl							zval	zval *	retval_ptr
ANR	382330	DeclStmt									
ANR	382331	Decl							zend_arg_info	zend_arg_info *	ret_info
ANR	382332	DeclStmt									
ANR	382333	Decl							zval	zval *	array
ANR	382334	DeclStmt									
ANR	382335	Decl							uint32_t	uint32_t	size
ANR	382336	DeclStmt									
ANR	382337	Decl							USE_OPLINE	USE_OPLINE	array
ANR	382338	DeclStmt									
ANR	382339	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	382340	DeclStmt									
ANR	382341	Decl							zval	zval *	value
ANR	382342	DeclStmt									
ANR	382343	Decl							zval	zval *	value_ptr
ANR	382344	DeclStmt									
ANR	382345	Decl							zval	zval *	value
ANR	382346	DeclStmt									
ANR	382347	Decl							zval	zval *	key
ANR	382348	Function	zend_binary_assign_op_obj_helper_SPEC_UNUSED_CV	25215:0:796891:798984							
ANR	382349	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_UNUSED_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		382348	0					
ANR	382350	CompoundStatement		25216:0:797038:798984	382348	0					
ANR	382351	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	25217:1:797041:797079	382348	0	True				
ANR	382352	IdentifierDecl	free_op_data1		382348	0					
ANR	382353	IdentifierDeclType	USE_OPLINE zend_free_op		382348	0					
ANR	382354	Identifier	free_op_data1		382348	1					
ANR	382355	IdentifierDeclStatement	zval * object ;	25219:1:797082:797094	382348	1	True				
ANR	382356	IdentifierDecl	* object		382348	0					
ANR	382357	IdentifierDeclType	zval *		382348	0					
ANR	382358	Identifier	object		382348	1					
ANR	382359	IdentifierDeclStatement	zval * property ;	25220:1:797097:797111	382348	2	True				
ANR	382360	IdentifierDecl	* property		382348	0					
ANR	382361	IdentifierDeclType	zval *		382348	0					
ANR	382362	Identifier	property		382348	1					
ANR	382363	IdentifierDeclStatement	zval * value ;	25221:1:797114:797125	382348	3	True				
ANR	382364	IdentifierDecl	* value		382348	0					
ANR	382365	IdentifierDeclType	zval *		382348	0					
ANR	382366	Identifier	value		382348	1					
ANR	382367	IdentifierDeclStatement	zval * zptr ;	25222:1:797128:797138	382348	4	True				
ANR	382368	IdentifierDecl	* zptr		382348	0					
ANR	382369	IdentifierDeclType	zval *		382348	0					
ANR	382370	Identifier	zptr		382348	1					
ANR	382371	ExpressionStatement	SAVE_OPLINE ( )	25224:1:797142:797155	382348	5	True				
ANR	382372	CallExpression	SAVE_OPLINE ( )		382348	0					
ANR	382373	Callee	SAVE_OPLINE		382348	0					
ANR	382374	Identifier	SAVE_OPLINE		382348	0					
ANR	382375	ArgumentList			382348	1					
ANR	382376	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	25225:1:797158:797205	382348	6	True				
ANR	382377	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		382348	0		=			
ANR	382378	Identifier	object		382348	0					
ANR	382379	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		382348	1					
ANR	382380	Callee	_get_obj_zval_ptr_unused		382348	0					
ANR	382381	Identifier	_get_obj_zval_ptr_unused		382348	0					
ANR	382382	ArgumentList	execute_data		382348	1					
ANR	382383	Argument	execute_data		382348	0					
ANR	382384	Identifier	execute_data		382348	0					
ANR	382385	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		382348	7					
ANR	382386	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	25227:5:797213:797273	382348	0	True				
ANR	382387	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		382348	0		&&			
ANR	382388	EqualityExpression	IS_UNUSED == IS_UNUSED		382348	0		==			
ANR	382389	Identifier	IS_UNUSED		382348	0					
ANR	382390	Identifier	IS_UNUSED		382348	1					
ANR	382391	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		382348	1					
ANR	382392	Callee	UNEXPECTED		382348	0					
ANR	382393	Identifier	UNEXPECTED		382348	0					
ANR	382394	ArgumentList	Z_OBJ_P ( object ) == NULL		382348	1					
ANR	382395	Argument	Z_OBJ_P ( object ) == NULL		382348	0					
ANR	382396	EqualityExpression	Z_OBJ_P ( object ) == NULL		382348	0		==			
ANR	382397	CallExpression	Z_OBJ_P ( object )		382348	0					
ANR	382398	Callee	Z_OBJ_P		382348	0					
ANR	382399	Identifier	Z_OBJ_P		382348	0					
ANR	382400	ArgumentList	object		382348	1					
ANR	382401	Argument	object		382348	0					
ANR	382402	Identifier	object		382348	0					
ANR	382403	Identifier	NULL		382348	1					
ANR	382404	CompoundStatement		12:68:237:237	382348	1					
ANR	382405	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	25228:2:797280:797344	382348	0	True				
ANR	382406	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		382348	0					
ANR	382407	Callee	zend_throw_error		382348	0					
ANR	382408	Identifier	zend_throw_error		382348	0					
ANR	382409	ArgumentList	NULL		382348	1					
ANR	382410	Argument	NULL		382348	0					
ANR	382411	Identifier	NULL		382348	0					
ANR	382412	Argument	"""Using $this when not in object context"""		382348	1					
ANR	382413	PrimaryExpression	"""Using $this when not in object context"""		382348	0					
ANR	382414	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	25229:2:797348:797408	382348	1	True				
ANR	382415	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		382348	0					
ANR	382416	Callee	FREE_UNFETCHED_OP		382348	0					
ANR	382417	Identifier	FREE_UNFETCHED_OP		382348	0					
ANR	382418	ArgumentList	( opline + 1 ) -> op1_type		382348	1					
ANR	382419	Argument	( opline + 1 ) -> op1_type		382348	0					
ANR	382420	PtrMemberAccess	( opline + 1 ) -> op1_type		382348	0					
ANR	382421	AdditiveExpression	opline + 1		382348	0		+			
ANR	382422	Identifier	opline		382348	0					
ANR	382423	PrimaryExpression	1		382348	1					
ANR	382424	Identifier	op1_type		382348	1					
ANR	382425	Argument	( opline + 1 ) -> op1 . var		382348	1					
ANR	382426	MemberAccess	( opline + 1 ) -> op1 . var		382348	0					
ANR	382427	PtrMemberAccess	( opline + 1 ) -> op1		382348	0					
ANR	382428	AdditiveExpression	opline + 1		382348	0		+			
ANR	382429	Identifier	opline		382348	0					
ANR	382430	PrimaryExpression	1		382348	1					
ANR	382431	Identifier	op1		382348	1					
ANR	382432	Identifier	var		382348	1					
ANR	382433	ExpressionStatement	HANDLE_EXCEPTION ( )	25231:2:797413:797431	382348	2	True				
ANR	382434	CallExpression	HANDLE_EXCEPTION ( )		382348	0					
ANR	382435	Callee	HANDLE_EXCEPTION		382348	0					
ANR	382436	Identifier	HANDLE_EXCEPTION		382348	0					
ANR	382437	ArgumentList			382348	1					
ANR	382438	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	25234:1:797438:797505	382348	8	True				
ANR	382439	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		382348	0		=			
ANR	382440	Identifier	property		382348	0					
ANR	382441	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		382348	1					
ANR	382442	Callee	_get_zval_ptr_cv_BP_VAR_R		382348	0					
ANR	382443	Identifier	_get_zval_ptr_cv_BP_VAR_R		382348	0					
ANR	382444	ArgumentList	execute_data		382348	1					
ANR	382445	Argument	execute_data		382348	0					
ANR	382446	Identifier	execute_data		382348	0					
ANR	382447	Argument	opline -> op2 . var		382348	1					
ANR	382448	MemberAccess	opline -> op2 . var		382348	0					
ANR	382449	PtrMemberAccess	opline -> op2		382348	0					
ANR	382450	Identifier	opline		382348	0					
ANR	382451	Identifier	op2		382348	1					
ANR	382452	Identifier	var		382348	1					
ANR	382453	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		382348	9					
ANR	382454	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	25236:5:797513:797561	382348	0	True				
ANR	382455	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		382348	0		&&			
ANR	382456	EqualityExpression	IS_UNUSED == IS_VAR		382348	0		==			
ANR	382457	Identifier	IS_UNUSED		382348	0					
ANR	382458	Identifier	IS_VAR		382348	1					
ANR	382459	CallExpression	UNEXPECTED ( object == NULL )		382348	1					
ANR	382460	Callee	UNEXPECTED		382348	0					
ANR	382461	Identifier	UNEXPECTED		382348	0					
ANR	382462	ArgumentList	object == NULL		382348	1					
ANR	382463	Argument	object == NULL		382348	0					
ANR	382464	EqualityExpression	object == NULL		382348	0		==			
ANR	382465	Identifier	object		382348	0					
ANR	382466	Identifier	NULL		382348	1					
ANR	382467	CompoundStatement		21:56:525:525	382348	1					
ANR	382468	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	25237:2:797568:797631	382348	0	True				
ANR	382469	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		382348	0					
ANR	382470	Callee	zend_throw_error		382348	0					
ANR	382471	Identifier	zend_throw_error		382348	0					
ANR	382472	ArgumentList	NULL		382348	1					
ANR	382473	Argument	NULL		382348	0					
ANR	382474	Identifier	NULL		382348	0					
ANR	382475	Argument	"""Cannot use string offset as an object"""		382348	1					
ANR	382476	PrimaryExpression	"""Cannot use string offset as an object"""		382348	0					
ANR	382477	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	25238:2:797635:797695	382348	1	True				
ANR	382478	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		382348	0					
ANR	382479	Callee	FREE_UNFETCHED_OP		382348	0					
ANR	382480	Identifier	FREE_UNFETCHED_OP		382348	0					
ANR	382481	ArgumentList	( opline + 1 ) -> op1_type		382348	1					
ANR	382482	Argument	( opline + 1 ) -> op1_type		382348	0					
ANR	382483	PtrMemberAccess	( opline + 1 ) -> op1_type		382348	0					
ANR	382484	AdditiveExpression	opline + 1		382348	0		+			
ANR	382485	Identifier	opline		382348	0					
ANR	382486	PrimaryExpression	1		382348	1					
ANR	382487	Identifier	op1_type		382348	1					
ANR	382488	Argument	( opline + 1 ) -> op1 . var		382348	1					
ANR	382489	MemberAccess	( opline + 1 ) -> op1 . var		382348	0					
ANR	382490	PtrMemberAccess	( opline + 1 ) -> op1		382348	0					
ANR	382491	AdditiveExpression	opline + 1		382348	0		+			
ANR	382492	Identifier	opline		382348	0					
ANR	382493	PrimaryExpression	1		382348	1					
ANR	382494	Identifier	op1		382348	1					
ANR	382495	Identifier	var		382348	1					
ANR	382496	ExpressionStatement	HANDLE_EXCEPTION ( )	25240:2:797700:797718	382348	2	True				
ANR	382497	CallExpression	HANDLE_EXCEPTION ( )		382348	0					
ANR	382498	Callee	HANDLE_EXCEPTION		382348	0					
ANR	382499	Identifier	HANDLE_EXCEPTION		382348	0					
ANR	382500	ArgumentList			382348	1					
ANR	382501	DoStatement	do		382348	10					
ANR	382502	CompoundStatement		28:4:689:689	382348	0					
ANR	382503	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	25244:2:797732:797823	382348	0	True				
ANR	382504	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		382348	0		=			
ANR	382505	Identifier	value		382348	0					
ANR	382506	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		382348	1					
ANR	382507	Callee	get_zval_ptr_r		382348	0					
ANR	382508	Identifier	get_zval_ptr_r		382348	0					
ANR	382509	ArgumentList	( opline + 1 ) -> op1_type		382348	1					
ANR	382510	Argument	( opline + 1 ) -> op1_type		382348	0					
ANR	382511	PtrMemberAccess	( opline + 1 ) -> op1_type		382348	0					
ANR	382512	AdditiveExpression	opline + 1		382348	0		+			
ANR	382513	Identifier	opline		382348	0					
ANR	382514	PrimaryExpression	1		382348	1					
ANR	382515	Identifier	op1_type		382348	1					
ANR	382516	Argument	( opline + 1 ) -> op1		382348	1					
ANR	382517	PtrMemberAccess	( opline + 1 ) -> op1		382348	0					
ANR	382518	AdditiveExpression	opline + 1		382348	0		+			
ANR	382519	Identifier	opline		382348	0					
ANR	382520	PrimaryExpression	1		382348	1					
ANR	382521	Identifier	op1		382348	1					
ANR	382522	Argument	execute_data		382348	2					
ANR	382523	Identifier	execute_data		382348	0					
ANR	382524	Argument	& free_op_data1		382348	3					
ANR	382525	UnaryOperationExpression	& free_op_data1		382348	0					
ANR	382526	UnaryOperator	&		382348	0					
ANR	382527	Identifier	free_op_data1		382348	1					
ANR	382528	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		382348	1					
ANR	382529	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	25246:6:797832:797898	382348	0	True				
ANR	382530	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		382348	0		&&			
ANR	382531	EqualityExpression	IS_UNUSED != IS_UNUSED		382348	0		!=			
ANR	382532	Identifier	IS_UNUSED		382348	0					
ANR	382533	Identifier	IS_UNUSED		382348	1					
ANR	382534	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		382348	1					
ANR	382535	Callee	UNEXPECTED		382348	0					
ANR	382536	Identifier	UNEXPECTED		382348	0					
ANR	382537	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		382348	1					
ANR	382538	Argument	Z_TYPE_P ( object ) != IS_OBJECT		382348	0					
ANR	382539	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		382348	0		!=			
ANR	382540	CallExpression	Z_TYPE_P ( object )		382348	0					
ANR	382541	Callee	Z_TYPE_P		382348	0					
ANR	382542	Identifier	Z_TYPE_P		382348	0					
ANR	382543	ArgumentList	object		382348	1					
ANR	382544	Argument	object		382348	0					
ANR	382545	Identifier	object		382348	0					
ANR	382546	Identifier	IS_OBJECT		382348	1					
ANR	382547	CompoundStatement		31:75:862:862	382348	1					
ANR	382548	ExpressionStatement	ZVAL_DEREF ( object )	25247:3:797906:797924	382348	0	True				
ANR	382549	CallExpression	ZVAL_DEREF ( object )		382348	0					
ANR	382550	Callee	ZVAL_DEREF		382348	0					
ANR	382551	Identifier	ZVAL_DEREF		382348	0					
ANR	382552	ArgumentList	object		382348	1					
ANR	382553	Argument	object		382348	0					
ANR	382554	Identifier	object		382348	0					
ANR	382555	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		382348	1					
ANR	382556	Condition	UNEXPECTED ( ! make_real_object ( object ) )	25248:7:797933:797969	382348	0	True				
ANR	382557	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		382348	0					
ANR	382558	Callee	UNEXPECTED		382348	0					
ANR	382559	Identifier	UNEXPECTED		382348	0					
ANR	382560	ArgumentList	! make_real_object ( object )		382348	1					
ANR	382561	Argument	! make_real_object ( object )		382348	0					
ANR	382562	UnaryOperationExpression	! make_real_object ( object )		382348	0					
ANR	382563	UnaryOperator	!		382348	0					
ANR	382564	CallExpression	make_real_object ( object )		382348	1					
ANR	382565	Callee	make_real_object		382348	0					
ANR	382566	Identifier	make_real_object		382348	0					
ANR	382567	ArgumentList	object		382348	1					
ANR	382568	Argument	object		382348	0					
ANR	382569	Identifier	object		382348	0					
ANR	382570	CompoundStatement		33:46:933:933	382348	1					
ANR	382571	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	25249:4:797978:798043	382348	0	True				
ANR	382572	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		382348	0					
ANR	382573	Callee	zend_error		382348	0					
ANR	382574	Identifier	zend_error		382348	0					
ANR	382575	ArgumentList	E_WARNING		382348	1					
ANR	382576	Argument	E_WARNING		382348	0					
ANR	382577	Identifier	E_WARNING		382348	0					
ANR	382578	Argument	"""Attempt to assign property of non-object"""		382348	1					
ANR	382579	PrimaryExpression	"""Attempt to assign property of non-object"""		382348	0					
ANR	382580	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		382348	1					
ANR	382581	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	25250:8:798053:798089	382348	0	True				
ANR	382582	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382348	0					
ANR	382583	Callee	UNEXPECTED		382348	0					
ANR	382584	Identifier	UNEXPECTED		382348	0					
ANR	382585	ArgumentList	RETURN_VALUE_USED ( opline )		382348	1					
ANR	382586	Argument	RETURN_VALUE_USED ( opline )		382348	0					
ANR	382587	CallExpression	RETURN_VALUE_USED ( opline )		382348	0					
ANR	382588	Callee	RETURN_VALUE_USED		382348	0					
ANR	382589	Identifier	RETURN_VALUE_USED		382348	0					
ANR	382590	ArgumentList	opline		382348	1					
ANR	382591	Argument	opline		382348	0					
ANR	382592	Identifier	opline		382348	0					
ANR	382593	CompoundStatement		35:47:1053:1053	382348	1					
ANR	382594	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	25251:5:798099:798136	382348	0	True				
ANR	382595	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		382348	0					
ANR	382596	Callee	ZVAL_NULL		382348	0					
ANR	382597	Identifier	ZVAL_NULL		382348	0					
ANR	382598	ArgumentList	EX_VAR ( opline -> result . var )		382348	1					
ANR	382599	Argument	EX_VAR ( opline -> result . var )		382348	0					
ANR	382600	CallExpression	EX_VAR ( opline -> result . var )		382348	0					
ANR	382601	Callee	EX_VAR		382348	0					
ANR	382602	Identifier	EX_VAR		382348	0					
ANR	382603	ArgumentList	opline -> result . var		382348	1					
ANR	382604	Argument	opline -> result . var		382348	0					
ANR	382605	MemberAccess	opline -> result . var		382348	0					
ANR	382606	PtrMemberAccess	opline -> result		382348	0					
ANR	382607	Identifier	opline		382348	0					
ANR	382608	Identifier	result		382348	1					
ANR	382609	Identifier	var		382348	1					
ANR	382610	BreakStatement	break ;	25253:4:798148:798153	382348	2	True				
ANR	382611	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		382348	2					
ANR	382612	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	25258:6:798226:798447	382348	0	True				
ANR	382613	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		382348	0		&&			
ANR	382614	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		382348	0					
ANR	382615	Callee	EXPECTED		382348	0					
ANR	382616	Identifier	EXPECTED		382348	0					
ANR	382617	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		382348	1					
ANR	382618	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		382348	0					
ANR	382619	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		382348	0					
ANR	382620	CallExpression	Z_OBJ_HT_P ( object )		382348	0					
ANR	382621	Callee	Z_OBJ_HT_P		382348	0					
ANR	382622	Identifier	Z_OBJ_HT_P		382348	0					
ANR	382623	ArgumentList	object		382348	1					
ANR	382624	Argument	object		382348	0					
ANR	382625	Identifier	object		382348	0					
ANR	382626	Identifier	get_property_ptr_ptr		382348	1					
ANR	382627	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		382348	1					
ANR	382628	Callee	EXPECTED		382348	0					
ANR	382629	Identifier	EXPECTED		382348	0					
ANR	382630	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		382348	1					
ANR	382631	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		382348	0					
ANR	382632	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		382348	0		!=			
ANR	382633	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		382348	0		=			
ANR	382634	Identifier	zptr		382348	0					
ANR	382635	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		382348	1					
ANR	382636	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		382348	0					
ANR	382637	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		382348	0					
ANR	382638	CallExpression	Z_OBJ_HT_P ( object )		382348	0					
ANR	382639	Callee	Z_OBJ_HT_P		382348	0					
ANR	382640	Identifier	Z_OBJ_HT_P		382348	0					
ANR	382641	ArgumentList	object		382348	1					
ANR	382642	Argument	object		382348	0					
ANR	382643	Identifier	object		382348	0					
ANR	382644	Identifier	get_property_ptr_ptr		382348	1					
ANR	382645	ArgumentList	object		382348	1					
ANR	382646	Argument	object		382348	0					
ANR	382647	Identifier	object		382348	0					
ANR	382648	Argument	property		382348	1					
ANR	382649	Identifier	property		382348	0					
ANR	382650	Argument	BP_VAR_RW		382348	2					
ANR	382651	Identifier	BP_VAR_RW		382348	0					
ANR	382652	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		382348	3					
ANR	382653	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		382348	0					
ANR	382654	Condition	IS_CV == IS_CONST		382348	0					
ANR	382655	EqualityExpression	IS_CV == IS_CONST		382348	0		==			
ANR	382656	Identifier	IS_CV		382348	0					
ANR	382657	Identifier	IS_CONST		382348	1					
ANR	382658	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		382348	1					
ANR	382659	Callee	CACHE_ADDR		382348	0					
ANR	382660	Identifier	CACHE_ADDR		382348	0					
ANR	382661	ArgumentList	Z_CACHE_SLOT_P ( property )		382348	1					
ANR	382662	Argument	Z_CACHE_SLOT_P ( property )		382348	0					
ANR	382663	CallExpression	Z_CACHE_SLOT_P ( property )		382348	0					
ANR	382664	Callee	Z_CACHE_SLOT_P		382348	0					
ANR	382665	Identifier	Z_CACHE_SLOT_P		382348	0					
ANR	382666	ArgumentList	property		382348	1					
ANR	382667	Argument	property		382348	0					
ANR	382668	Identifier	property		382348	0					
ANR	382669	Identifier	NULL		382348	2					
ANR	382670	Identifier	NULL		382348	1					
ANR	382671	CompoundStatement		44:173:1411:1411	382348	1					
ANR	382672	ExpressionStatement	ZVAL_DEREF ( zptr )	25261:3:798456:798472	382348	0	True				
ANR	382673	CallExpression	ZVAL_DEREF ( zptr )		382348	0					
ANR	382674	Callee	ZVAL_DEREF		382348	0					
ANR	382675	Identifier	ZVAL_DEREF		382348	0					
ANR	382676	ArgumentList	zptr		382348	1					
ANR	382677	Argument	zptr		382348	0					
ANR	382678	Identifier	zptr		382348	0					
ANR	382679	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	25262:3:798477:798502	382348	1	True				
ANR	382680	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		382348	0					
ANR	382681	Callee	SEPARATE_ZVAL_NOREF		382348	0					
ANR	382682	Identifier	SEPARATE_ZVAL_NOREF		382348	0					
ANR	382683	ArgumentList	zptr		382348	1					
ANR	382684	Argument	zptr		382348	0					
ANR	382685	Identifier	zptr		382348	0					
ANR	382686	ExpressionStatement	"binary_op ( zptr , zptr , value )"	25264:3:798508:798536	382348	2	True				
ANR	382687	CallExpression	"binary_op ( zptr , zptr , value )"		382348	0					
ANR	382688	Callee	binary_op		382348	0					
ANR	382689	Identifier	binary_op		382348	0					
ANR	382690	ArgumentList	zptr		382348	1					
ANR	382691	Argument	zptr		382348	0					
ANR	382692	Identifier	zptr		382348	0					
ANR	382693	Argument	zptr		382348	1					
ANR	382694	Identifier	zptr		382348	0					
ANR	382695	Argument	value		382348	2					
ANR	382696	Identifier	value		382348	0					
ANR	382697	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		382348	3					
ANR	382698	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	25265:7:798545:798581	382348	0	True				
ANR	382699	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382348	0					
ANR	382700	Callee	UNEXPECTED		382348	0					
ANR	382701	Identifier	UNEXPECTED		382348	0					
ANR	382702	ArgumentList	RETURN_VALUE_USED ( opline )		382348	1					
ANR	382703	Argument	RETURN_VALUE_USED ( opline )		382348	0					
ANR	382704	CallExpression	RETURN_VALUE_USED ( opline )		382348	0					
ANR	382705	Callee	RETURN_VALUE_USED		382348	0					
ANR	382706	Identifier	RETURN_VALUE_USED		382348	0					
ANR	382707	ArgumentList	opline		382348	1					
ANR	382708	Argument	opline		382348	0					
ANR	382709	Identifier	opline		382348	0					
ANR	382710	CompoundStatement		50:46:1545:1545	382348	1					
ANR	382711	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	25266:4:798590:798633	382348	0	True				
ANR	382712	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		382348	0					
ANR	382713	Callee	ZVAL_COPY		382348	0					
ANR	382714	Identifier	ZVAL_COPY		382348	0					
ANR	382715	ArgumentList	EX_VAR ( opline -> result . var )		382348	1					
ANR	382716	Argument	EX_VAR ( opline -> result . var )		382348	0					
ANR	382717	CallExpression	EX_VAR ( opline -> result . var )		382348	0					
ANR	382718	Callee	EX_VAR		382348	0					
ANR	382719	Identifier	EX_VAR		382348	0					
ANR	382720	ArgumentList	opline -> result . var		382348	1					
ANR	382721	Argument	opline -> result . var		382348	0					
ANR	382722	MemberAccess	opline -> result . var		382348	0					
ANR	382723	PtrMemberAccess	opline -> result		382348	0					
ANR	382724	Identifier	opline		382348	0					
ANR	382725	Identifier	result		382348	1					
ANR	382726	Identifier	var		382348	1					
ANR	382727	Argument	zptr		382348	1					
ANR	382728	Identifier	zptr		382348	0					
ANR	382729	ElseStatement	else		382348	0					
ANR	382730	CompoundStatement		53:9:1610:1610	382348	0					
ANR	382731	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	25269:3:798654:798870	382348	0	True				
ANR	382732	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		382348	0					
ANR	382733	Callee	zend_assign_op_overloaded_property		382348	0					
ANR	382734	Identifier	zend_assign_op_overloaded_property		382348	0					
ANR	382735	ArgumentList	object		382348	1					
ANR	382736	Argument	object		382348	0					
ANR	382737	Identifier	object		382348	0					
ANR	382738	Argument	property		382348	1					
ANR	382739	Identifier	property		382348	0					
ANR	382740	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		382348	2					
ANR	382741	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		382348	0					
ANR	382742	Condition	IS_CV == IS_CONST		382348	0					
ANR	382743	EqualityExpression	IS_CV == IS_CONST		382348	0		==			
ANR	382744	Identifier	IS_CV		382348	0					
ANR	382745	Identifier	IS_CONST		382348	1					
ANR	382746	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		382348	1					
ANR	382747	Callee	CACHE_ADDR		382348	0					
ANR	382748	Identifier	CACHE_ADDR		382348	0					
ANR	382749	ArgumentList	Z_CACHE_SLOT_P ( property )		382348	1					
ANR	382750	Argument	Z_CACHE_SLOT_P ( property )		382348	0					
ANR	382751	CallExpression	Z_CACHE_SLOT_P ( property )		382348	0					
ANR	382752	Callee	Z_CACHE_SLOT_P		382348	0					
ANR	382753	Identifier	Z_CACHE_SLOT_P		382348	0					
ANR	382754	ArgumentList	property		382348	1					
ANR	382755	Argument	property		382348	0					
ANR	382756	Identifier	property		382348	0					
ANR	382757	Identifier	NULL		382348	2					
ANR	382758	Argument	value		382348	3					
ANR	382759	Identifier	value		382348	0					
ANR	382760	Argument	binary_op		382348	4					
ANR	382761	Identifier	binary_op		382348	0					
ANR	382762	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		382348	5					
ANR	382763	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		382348	0					
ANR	382764	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382348	0					
ANR	382765	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382348	0					
ANR	382766	Callee	UNEXPECTED		382348	0					
ANR	382767	Identifier	UNEXPECTED		382348	0					
ANR	382768	ArgumentList	RETURN_VALUE_USED ( opline )		382348	1					
ANR	382769	Argument	RETURN_VALUE_USED ( opline )		382348	0					
ANR	382770	CallExpression	RETURN_VALUE_USED ( opline )		382348	0					
ANR	382771	Callee	RETURN_VALUE_USED		382348	0					
ANR	382772	Identifier	RETURN_VALUE_USED		382348	0					
ANR	382773	ArgumentList	opline		382348	1					
ANR	382774	Argument	opline		382348	0					
ANR	382775	Identifier	opline		382348	0					
ANR	382776	CallExpression	EX_VAR ( opline -> result . var )		382348	1					
ANR	382777	Callee	EX_VAR		382348	0					
ANR	382778	Identifier	EX_VAR		382348	0					
ANR	382779	ArgumentList	opline -> result . var		382348	1					
ANR	382780	Argument	opline -> result . var		382348	0					
ANR	382781	MemberAccess	opline -> result . var		382348	0					
ANR	382782	PtrMemberAccess	opline -> result		382348	0					
ANR	382783	Identifier	opline		382348	0					
ANR	382784	Identifier	result		382348	1					
ANR	382785	Identifier	var		382348	1					
ANR	382786	Identifier	NULL		382348	2					
ANR	382787	Condition	0	25271:10:798886:798886	382348	1	True				
ANR	382788	PrimaryExpression	0		382348	0					
ANR	382789	ExpressionStatement	FREE_OP ( free_op_data1 )	25273:1:798892:798914	382348	11	True				
ANR	382790	CallExpression	FREE_OP ( free_op_data1 )		382348	0					
ANR	382791	Callee	FREE_OP		382348	0					
ANR	382792	Identifier	FREE_OP		382348	0					
ANR	382793	ArgumentList	free_op_data1		382348	1					
ANR	382794	Argument	free_op_data1		382348	0					
ANR	382795	Identifier	free_op_data1		382348	0					
ANR	382796	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	25277:1:798954:798982	382348	12	True				
ANR	382797	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		382348	0					
ANR	382798	Callee	ZEND_VM_NEXT_OPCODE_EX		382348	0					
ANR	382799	Identifier	ZEND_VM_NEXT_OPCODE_EX		382348	0					
ANR	382800	ArgumentList	1		382348	1					
ANR	382801	Argument	1		382348	0					
ANR	382802	PrimaryExpression	1		382348	0					
ANR	382803	Argument	2		382348	1					
ANR	382804	PrimaryExpression	2		382348	0					
ANR	382805	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		382348	1					
ANR	382806	Identifier	zend_binary_assign_op_obj_helper_SPEC_UNUSED_CV		382348	2					
ANR	382807	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		382348	3					
ANR	382808	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	25215:93:796984:797035	382348	0	True				
ANR	382809	ParameterType	binary_op_type binary_op		382348	0					
ANR	382810	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		382348	1					
ANR	382811	CFGEntryNode	ENTRY		382348		True				
ANR	382812	CFGExitNode	EXIT		382348		True				
ANR	382813	Symbol	opline -> op2		382348						
ANR	382814	Symbol	opline -> op2 . var		382348						
ANR	382815	Symbol	IS_CV		382348						
ANR	382816	Symbol	Z_OBJ_P		382348						
ANR	382817	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		382348						
ANR	382818	Symbol	free_op_data1		382348						
ANR	382819	Symbol	zptr		382348						
ANR	382820	Symbol	execute_data		382348						
ANR	382821	Symbol	opline -> result		382348						
ANR	382822	Symbol	_get_obj_zval_ptr_unused		382348						
ANR	382823	Symbol	( opline + 1 ) -> op1		382348						
ANR	382824	Symbol	UNEXPECTED		382348						
ANR	382825	Symbol	E_WARNING		382348						
ANR	382826	Symbol	make_real_object		382348						
ANR	382827	Symbol	RETURN_VALUE_USED		382348						
ANR	382828	Symbol	( opline + 1 ) -> op1 . var		382348						
ANR	382829	Symbol	opline		382348						
ANR	382830	Symbol	get_zval_ptr_r		382348						
ANR	382831	Symbol	property		382348						
ANR	382832	Symbol	value		382348						
ANR	382833	Symbol	binary_op		382348						
ANR	382834	Symbol	BP_VAR_RW		382348						
ANR	382835	Symbol	( opline + 1 ) -> op1_type		382348						
ANR	382836	Symbol	IS_CONST		382348						
ANR	382837	Symbol	NULL		382348						
ANR	382838	Symbol	Z_CACHE_SLOT_P		382348						
ANR	382839	Symbol	_get_zval_ptr_cv_BP_VAR_R		382348						
ANR	382840	Symbol	Z_TYPE_P		382348						
ANR	382841	Symbol	* Z_OBJ_HT_P		382348						
ANR	382842	Symbol	CACHE_ADDR		382348						
ANR	382843	Symbol	* opline		382348						
ANR	382844	Symbol	Z_OBJ_HT_P		382348						
ANR	382845	Symbol	EX_VAR		382348						
ANR	382846	Symbol	IS_OBJECT		382348						
ANR	382847	Symbol	IS_VAR		382348						
ANR	382848	Symbol	EXPECTED		382348						
ANR	382849	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		382348						
ANR	382850	Symbol	& free_op_data1		382348						
ANR	382851	Symbol	opline -> result . var		382348						
ANR	382852	Symbol	object		382348						
ANR	382853	Symbol	IS_UNUSED		382348						
ANR	382854	Function	zend_binary_assign_op_dim_helper_SPEC_UNUSED_CV	25280:0:798987:801166							
ANR	382855	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_UNUSED_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		382854	0					
ANR	382856	CompoundStatement		25281:0:799134:801166	382854	0					
ANR	382857	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	25282:1:799137:799175	382854	0	True				
ANR	382858	IdentifierDecl	free_op_data1		382854	0					
ANR	382859	IdentifierDeclType	USE_OPLINE zend_free_op		382854	0					
ANR	382860	Identifier	free_op_data1		382854	1					
ANR	382861	IdentifierDeclStatement	"zval * var_ptr , rv ;"	25284:1:799178:799195	382854	1	True				
ANR	382862	IdentifierDecl	* var_ptr		382854	0					
ANR	382863	IdentifierDeclType	zval *		382854	0					
ANR	382864	Identifier	var_ptr		382854	1					
ANR	382865	IdentifierDecl	rv		382854	1					
ANR	382866	IdentifierDeclType	zval		382854	0					
ANR	382867	Identifier	rv		382854	1					
ANR	382868	IdentifierDeclStatement	"zval * value , * container , * dim ;"	25285:1:799198:799227	382854	2	True				
ANR	382869	IdentifierDecl	* value		382854	0					
ANR	382870	IdentifierDeclType	zval *		382854	0					
ANR	382871	Identifier	value		382854	1					
ANR	382872	IdentifierDecl	* container		382854	1					
ANR	382873	IdentifierDeclType	zval *		382854	0					
ANR	382874	Identifier	container		382854	1					
ANR	382875	IdentifierDecl	* dim		382854	2					
ANR	382876	IdentifierDeclType	zval *		382854	0					
ANR	382877	Identifier	dim		382854	1					
ANR	382878	ExpressionStatement	SAVE_OPLINE ( )	25287:1:799231:799244	382854	3	True				
ANR	382879	CallExpression	SAVE_OPLINE ( )		382854	0					
ANR	382880	Callee	SAVE_OPLINE		382854	0					
ANR	382881	Identifier	SAVE_OPLINE		382854	0					
ANR	382882	ArgumentList			382854	1					
ANR	382883	ExpressionStatement	container = _get_obj_zval_ptr_unused ( execute_data )	25288:1:799247:799297	382854	4	True				
ANR	382884	AssignmentExpression	container = _get_obj_zval_ptr_unused ( execute_data )		382854	0		=			
ANR	382885	Identifier	container		382854	0					
ANR	382886	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		382854	1					
ANR	382887	Callee	_get_obj_zval_ptr_unused		382854	0					
ANR	382888	Identifier	_get_obj_zval_ptr_unused		382854	0					
ANR	382889	ArgumentList	execute_data		382854	1					
ANR	382890	Argument	execute_data		382854	0					
ANR	382891	Identifier	execute_data		382854	0					
ANR	382892	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		382854	5					
ANR	382893	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	25289:5:799304:799367	382854	0	True				
ANR	382894	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		382854	0		&&			
ANR	382895	EqualityExpression	IS_UNUSED == IS_UNUSED		382854	0		==			
ANR	382896	Identifier	IS_UNUSED		382854	0					
ANR	382897	Identifier	IS_UNUSED		382854	1					
ANR	382898	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		382854	1					
ANR	382899	Callee	UNEXPECTED		382854	0					
ANR	382900	Identifier	UNEXPECTED		382854	0					
ANR	382901	ArgumentList	Z_OBJ_P ( container ) == NULL		382854	1					
ANR	382902	Argument	Z_OBJ_P ( container ) == NULL		382854	0					
ANR	382903	EqualityExpression	Z_OBJ_P ( container ) == NULL		382854	0		==			
ANR	382904	CallExpression	Z_OBJ_P ( container )		382854	0					
ANR	382905	Callee	Z_OBJ_P		382854	0					
ANR	382906	Identifier	Z_OBJ_P		382854	0					
ANR	382907	ArgumentList	container		382854	1					
ANR	382908	Argument	container		382854	0					
ANR	382909	Identifier	container		382854	0					
ANR	382910	Identifier	NULL		382854	1					
ANR	382911	CompoundStatement		9:71:235:235	382854	1					
ANR	382912	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	25290:2:799374:799438	382854	0	True				
ANR	382913	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		382854	0					
ANR	382914	Callee	zend_throw_error		382854	0					
ANR	382915	Identifier	zend_throw_error		382854	0					
ANR	382916	ArgumentList	NULL		382854	1					
ANR	382917	Argument	NULL		382854	0					
ANR	382918	Identifier	NULL		382854	0					
ANR	382919	Argument	"""Using $this when not in object context"""		382854	1					
ANR	382920	PrimaryExpression	"""Using $this when not in object context"""		382854	0					
ANR	382921	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	25291:2:799442:799502	382854	1	True				
ANR	382922	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		382854	0					
ANR	382923	Callee	FREE_UNFETCHED_OP		382854	0					
ANR	382924	Identifier	FREE_UNFETCHED_OP		382854	0					
ANR	382925	ArgumentList	( opline + 1 ) -> op1_type		382854	1					
ANR	382926	Argument	( opline + 1 ) -> op1_type		382854	0					
ANR	382927	PtrMemberAccess	( opline + 1 ) -> op1_type		382854	0					
ANR	382928	AdditiveExpression	opline + 1		382854	0		+			
ANR	382929	Identifier	opline		382854	0					
ANR	382930	PrimaryExpression	1		382854	1					
ANR	382931	Identifier	op1_type		382854	1					
ANR	382932	Argument	( opline + 1 ) -> op1 . var		382854	1					
ANR	382933	MemberAccess	( opline + 1 ) -> op1 . var		382854	0					
ANR	382934	PtrMemberAccess	( opline + 1 ) -> op1		382854	0					
ANR	382935	AdditiveExpression	opline + 1		382854	0		+			
ANR	382936	Identifier	opline		382854	0					
ANR	382937	PrimaryExpression	1		382854	1					
ANR	382938	Identifier	op1		382854	1					
ANR	382939	Identifier	var		382854	1					
ANR	382940	ExpressionStatement	HANDLE_EXCEPTION ( )	25293:2:799507:799525	382854	2	True				
ANR	382941	CallExpression	HANDLE_EXCEPTION ( )		382854	0					
ANR	382942	Callee	HANDLE_EXCEPTION		382854	0					
ANR	382943	Identifier	HANDLE_EXCEPTION		382854	0					
ANR	382944	ArgumentList			382854	1					
ANR	382945	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL ) )		382854	6					
ANR	382946	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )	25295:5:799535:799586	382854	0	True				
ANR	382947	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )		382854	0		&&			
ANR	382948	EqualityExpression	IS_UNUSED == IS_VAR		382854	0		==			
ANR	382949	Identifier	IS_UNUSED		382854	0					
ANR	382950	Identifier	IS_VAR		382854	1					
ANR	382951	CallExpression	UNEXPECTED ( container == NULL )		382854	1					
ANR	382952	Callee	UNEXPECTED		382854	0					
ANR	382953	Identifier	UNEXPECTED		382854	0					
ANR	382954	ArgumentList	container == NULL		382854	1					
ANR	382955	Argument	container == NULL		382854	0					
ANR	382956	EqualityExpression	container == NULL		382854	0		==			
ANR	382957	Identifier	container		382854	0					
ANR	382958	Identifier	NULL		382854	1					
ANR	382959	CompoundStatement		15:59:454:454	382854	1					
ANR	382960	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	25296:2:799593:799655	382854	0	True				
ANR	382961	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		382854	0					
ANR	382962	Callee	zend_throw_error		382854	0					
ANR	382963	Identifier	zend_throw_error		382854	0					
ANR	382964	ArgumentList	NULL		382854	1					
ANR	382965	Argument	NULL		382854	0					
ANR	382966	Identifier	NULL		382854	0					
ANR	382967	Argument	"""Cannot use string offset as an array"""		382854	1					
ANR	382968	PrimaryExpression	"""Cannot use string offset as an array"""		382854	0					
ANR	382969	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	25297:2:799659:799719	382854	1	True				
ANR	382970	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		382854	0					
ANR	382971	Callee	FREE_UNFETCHED_OP		382854	0					
ANR	382972	Identifier	FREE_UNFETCHED_OP		382854	0					
ANR	382973	ArgumentList	( opline + 1 ) -> op1_type		382854	1					
ANR	382974	Argument	( opline + 1 ) -> op1_type		382854	0					
ANR	382975	PtrMemberAccess	( opline + 1 ) -> op1_type		382854	0					
ANR	382976	AdditiveExpression	opline + 1		382854	0		+			
ANR	382977	Identifier	opline		382854	0					
ANR	382978	PrimaryExpression	1		382854	1					
ANR	382979	Identifier	op1_type		382854	1					
ANR	382980	Argument	( opline + 1 ) -> op1 . var		382854	1					
ANR	382981	MemberAccess	( opline + 1 ) -> op1 . var		382854	0					
ANR	382982	PtrMemberAccess	( opline + 1 ) -> op1		382854	0					
ANR	382983	AdditiveExpression	opline + 1		382854	0		+			
ANR	382984	Identifier	opline		382854	0					
ANR	382985	PrimaryExpression	1		382854	1					
ANR	382986	Identifier	op1		382854	1					
ANR	382987	Identifier	var		382854	1					
ANR	382988	ExpressionStatement	HANDLE_EXCEPTION ( )	25299:2:799724:799742	382854	2	True				
ANR	382989	CallExpression	HANDLE_EXCEPTION ( )		382854	0					
ANR	382990	Callee	HANDLE_EXCEPTION		382854	0					
ANR	382991	Identifier	HANDLE_EXCEPTION		382854	0					
ANR	382992	ArgumentList			382854	1					
ANR	382993	ExpressionStatement	"dim = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	25302:1:799749:799811	382854	7	True				
ANR	382994	AssignmentExpression	"dim = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		382854	0		=			
ANR	382995	Identifier	dim		382854	0					
ANR	382996	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		382854	1					
ANR	382997	Callee	_get_zval_ptr_cv_BP_VAR_R		382854	0					
ANR	382998	Identifier	_get_zval_ptr_cv_BP_VAR_R		382854	0					
ANR	382999	ArgumentList	execute_data		382854	1					
ANR	383000	Argument	execute_data		382854	0					
ANR	383001	Identifier	execute_data		382854	0					
ANR	383002	Argument	opline -> op2 . var		382854	1					
ANR	383003	MemberAccess	opline -> op2 . var		382854	0					
ANR	383004	PtrMemberAccess	opline -> op2		382854	0					
ANR	383005	Identifier	opline		382854	0					
ANR	383006	Identifier	op2		382854	1					
ANR	383007	Identifier	var		382854	1					
ANR	383008	DoStatement	do		382854	8					
ANR	383009	CompoundStatement		24:4:683:683	382854	0					
ANR	383010	IfStatement	if ( IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		382854	0					
ANR	383011	Condition	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	25305:6:799826:799894	382854	0	True				
ANR	383012	OrExpression	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		382854	0		||			
ANR	383013	EqualityExpression	IS_UNUSED == IS_UNUSED		382854	0		==			
ANR	383014	Identifier	IS_UNUSED		382854	0					
ANR	383015	Identifier	IS_UNUSED		382854	1					
ANR	383016	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		382854	1					
ANR	383017	Callee	UNEXPECTED		382854	0					
ANR	383018	Identifier	UNEXPECTED		382854	0					
ANR	383019	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		382854	1					
ANR	383020	Argument	Z_TYPE_P ( container ) != IS_ARRAY		382854	0					
ANR	383021	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		382854	0		!=			
ANR	383022	CallExpression	Z_TYPE_P ( container )		382854	0					
ANR	383023	Callee	Z_TYPE_P		382854	0					
ANR	383024	Identifier	Z_TYPE_P		382854	0					
ANR	383025	ArgumentList	container		382854	1					
ANR	383026	Argument	container		382854	0					
ANR	383027	Identifier	container		382854	0					
ANR	383028	Identifier	IS_ARRAY		382854	1					
ANR	383029	CompoundStatement		25:77:762:762	382854	1					
ANR	383030	IfStatement	if ( IS_UNUSED != IS_UNUSED )		382854	0					
ANR	383031	Condition	IS_UNUSED != IS_UNUSED	25306:7:799906:799927	382854	0	True				
ANR	383032	EqualityExpression	IS_UNUSED != IS_UNUSED		382854	0		!=			
ANR	383033	Identifier	IS_UNUSED		382854	0					
ANR	383034	Identifier	IS_UNUSED		382854	1					
ANR	383035	CompoundStatement		26:31:795:795	382854	1					
ANR	383036	ExpressionStatement	ZVAL_DEREF ( container )	25307:4:799936:799957	382854	0	True				
ANR	383037	CallExpression	ZVAL_DEREF ( container )		382854	0					
ANR	383038	Callee	ZVAL_DEREF		382854	0					
ANR	383039	Identifier	ZVAL_DEREF		382854	0					
ANR	383040	ArgumentList	container		382854	1					
ANR	383041	Argument	container		382854	0					
ANR	383042	Identifier	container		382854	0					
ANR	383043	IfStatement	if ( IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		382854	1					
ANR	383044	Condition	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	25309:7:799971:800038	382854	0	True				
ANR	383045	OrExpression	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		382854	0		||			
ANR	383046	EqualityExpression	IS_UNUSED == IS_UNUSED		382854	0		==			
ANR	383047	Identifier	IS_UNUSED		382854	0					
ANR	383048	Identifier	IS_UNUSED		382854	1					
ANR	383049	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		382854	1					
ANR	383050	Callee	EXPECTED		382854	0					
ANR	383051	Identifier	EXPECTED		382854	0					
ANR	383052	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		382854	1					
ANR	383053	Argument	Z_TYPE_P ( container ) == IS_OBJECT		382854	0					
ANR	383054	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		382854	0		==			
ANR	383055	CallExpression	Z_TYPE_P ( container )		382854	0					
ANR	383056	Callee	Z_TYPE_P		382854	0					
ANR	383057	Identifier	Z_TYPE_P		382854	0					
ANR	383058	ArgumentList	container		382854	1					
ANR	383059	Argument	container		382854	0					
ANR	383060	Identifier	container		382854	0					
ANR	383061	Identifier	IS_OBJECT		382854	1					
ANR	383062	CompoundStatement		29:77:906:906	382854	1					
ANR	383063	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	25310:4:800047:800138	382854	0	True				
ANR	383064	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		382854	0		=			
ANR	383065	Identifier	value		382854	0					
ANR	383066	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		382854	1					
ANR	383067	Callee	get_zval_ptr_r		382854	0					
ANR	383068	Identifier	get_zval_ptr_r		382854	0					
ANR	383069	ArgumentList	( opline + 1 ) -> op1_type		382854	1					
ANR	383070	Argument	( opline + 1 ) -> op1_type		382854	0					
ANR	383071	PtrMemberAccess	( opline + 1 ) -> op1_type		382854	0					
ANR	383072	AdditiveExpression	opline + 1		382854	0		+			
ANR	383073	Identifier	opline		382854	0					
ANR	383074	PrimaryExpression	1		382854	1					
ANR	383075	Identifier	op1_type		382854	1					
ANR	383076	Argument	( opline + 1 ) -> op1		382854	1					
ANR	383077	PtrMemberAccess	( opline + 1 ) -> op1		382854	0					
ANR	383078	AdditiveExpression	opline + 1		382854	0		+			
ANR	383079	Identifier	opline		382854	0					
ANR	383080	PrimaryExpression	1		382854	1					
ANR	383081	Identifier	op1		382854	1					
ANR	383082	Argument	execute_data		382854	2					
ANR	383083	Identifier	execute_data		382854	0					
ANR	383084	Argument	& free_op_data1		382854	3					
ANR	383085	UnaryOperationExpression	& free_op_data1		382854	0					
ANR	383086	UnaryOperator	&		382854	0					
ANR	383087	Identifier	free_op_data1		382854	1					
ANR	383088	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	25311:4:800144:800282	382854	1	True				
ANR	383089	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		382854	0					
ANR	383090	Callee	zend_binary_assign_op_obj_dim		382854	0					
ANR	383091	Identifier	zend_binary_assign_op_obj_dim		382854	0					
ANR	383092	ArgumentList	container		382854	1					
ANR	383093	Argument	container		382854	0					
ANR	383094	Identifier	container		382854	0					
ANR	383095	Argument	dim		382854	1					
ANR	383096	Identifier	dim		382854	0					
ANR	383097	Argument	value		382854	2					
ANR	383098	Identifier	value		382854	0					
ANR	383099	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		382854	3					
ANR	383100	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		382854	0					
ANR	383101	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382854	0					
ANR	383102	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382854	0					
ANR	383103	Callee	UNEXPECTED		382854	0					
ANR	383104	Identifier	UNEXPECTED		382854	0					
ANR	383105	ArgumentList	RETURN_VALUE_USED ( opline )		382854	1					
ANR	383106	Argument	RETURN_VALUE_USED ( opline )		382854	0					
ANR	383107	CallExpression	RETURN_VALUE_USED ( opline )		382854	0					
ANR	383108	Callee	RETURN_VALUE_USED		382854	0					
ANR	383109	Identifier	RETURN_VALUE_USED		382854	0					
ANR	383110	ArgumentList	opline		382854	1					
ANR	383111	Argument	opline		382854	0					
ANR	383112	Identifier	opline		382854	0					
ANR	383113	CallExpression	EX_VAR ( opline -> result . var )		382854	1					
ANR	383114	Callee	EX_VAR		382854	0					
ANR	383115	Identifier	EX_VAR		382854	0					
ANR	383116	ArgumentList	opline -> result . var		382854	1					
ANR	383117	Argument	opline -> result . var		382854	0					
ANR	383118	MemberAccess	opline -> result . var		382854	0					
ANR	383119	PtrMemberAccess	opline -> result		382854	0					
ANR	383120	Identifier	opline		382854	0					
ANR	383121	Identifier	result		382854	1					
ANR	383122	Identifier	var		382854	1					
ANR	383123	Identifier	NULL		382854	2					
ANR	383124	Argument	binary_op		382854	4					
ANR	383125	Identifier	binary_op		382854	0					
ANR	383126	BreakStatement	break ;	25312:4:800288:800293	382854	2	True				
ANR	383127	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CV )"	25316:2:800307:800366	382854	1	True				
ANR	383128	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CV )"		382854	0					
ANR	383129	Callee	zend_fetch_dimension_address_RW		382854	0					
ANR	383130	Identifier	zend_fetch_dimension_address_RW		382854	0					
ANR	383131	ArgumentList	& rv		382854	1					
ANR	383132	Argument	& rv		382854	0					
ANR	383133	UnaryOperationExpression	& rv		382854	0					
ANR	383134	UnaryOperator	&		382854	0					
ANR	383135	Identifier	rv		382854	1					
ANR	383136	Argument	container		382854	1					
ANR	383137	Identifier	container		382854	0					
ANR	383138	Argument	dim		382854	2					
ANR	383139	Identifier	dim		382854	0					
ANR	383140	Argument	IS_CV		382854	3					
ANR	383141	Identifier	IS_CV		382854	0					
ANR	383142	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	25317:2:800370:800461	382854	2	True				
ANR	383143	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		382854	0		=			
ANR	383144	Identifier	value		382854	0					
ANR	383145	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		382854	1					
ANR	383146	Callee	get_zval_ptr_r		382854	0					
ANR	383147	Identifier	get_zval_ptr_r		382854	0					
ANR	383148	ArgumentList	( opline + 1 ) -> op1_type		382854	1					
ANR	383149	Argument	( opline + 1 ) -> op1_type		382854	0					
ANR	383150	PtrMemberAccess	( opline + 1 ) -> op1_type		382854	0					
ANR	383151	AdditiveExpression	opline + 1		382854	0		+			
ANR	383152	Identifier	opline		382854	0					
ANR	383153	PrimaryExpression	1		382854	1					
ANR	383154	Identifier	op1_type		382854	1					
ANR	383155	Argument	( opline + 1 ) -> op1		382854	1					
ANR	383156	PtrMemberAccess	( opline + 1 ) -> op1		382854	0					
ANR	383157	AdditiveExpression	opline + 1		382854	0		+			
ANR	383158	Identifier	opline		382854	0					
ANR	383159	PrimaryExpression	1		382854	1					
ANR	383160	Identifier	op1		382854	1					
ANR	383161	Argument	execute_data		382854	2					
ANR	383162	Identifier	execute_data		382854	0					
ANR	383163	Argument	& free_op_data1		382854	3					
ANR	383164	UnaryOperationExpression	& free_op_data1		382854	0					
ANR	383165	UnaryOperator	&		382854	0					
ANR	383166	Identifier	free_op_data1		382854	1					
ANR	383167	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	25318:2:800465:800503	382854	3	True				
ANR	383168	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		382854	0					
ANR	383169	Callee	ZEND_ASSERT		382854	0					
ANR	383170	Identifier	ZEND_ASSERT		382854	0					
ANR	383171	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		382854	1					
ANR	383172	Argument	Z_TYPE ( rv ) == IS_INDIRECT		382854	0					
ANR	383173	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		382854	0		==			
ANR	383174	CallExpression	Z_TYPE ( rv )		382854	0					
ANR	383175	Callee	Z_TYPE		382854	0					
ANR	383176	Identifier	Z_TYPE		382854	0					
ANR	383177	ArgumentList	rv		382854	1					
ANR	383178	Argument	rv		382854	0					
ANR	383179	Identifier	rv		382854	0					
ANR	383180	Identifier	IS_INDIRECT		382854	1					
ANR	383181	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	25319:2:800507:800531	382854	4	True				
ANR	383182	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		382854	0		=			
ANR	383183	Identifier	var_ptr		382854	0					
ANR	383184	CallExpression	Z_INDIRECT ( rv )		382854	1					
ANR	383185	Callee	Z_INDIRECT		382854	0					
ANR	383186	Identifier	Z_INDIRECT		382854	0					
ANR	383187	ArgumentList	rv		382854	1					
ANR	383188	Argument	rv		382854	0					
ANR	383189	Identifier	rv		382854	0					
ANR	383190	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		382854	5					
ANR	383191	Condition	UNEXPECTED ( var_ptr == NULL )	25321:6:800540:800566	382854	0	True				
ANR	383192	CallExpression	UNEXPECTED ( var_ptr == NULL )		382854	0					
ANR	383193	Callee	UNEXPECTED		382854	0					
ANR	383194	Identifier	UNEXPECTED		382854	0					
ANR	383195	ArgumentList	var_ptr == NULL		382854	1					
ANR	383196	Argument	var_ptr == NULL		382854	0					
ANR	383197	EqualityExpression	var_ptr == NULL		382854	0		==			
ANR	383198	Identifier	var_ptr		382854	0					
ANR	383199	Identifier	NULL		382854	1					
ANR	383200	CompoundStatement		41:35:1434:1434	382854	1					
ANR	383201	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	25322:3:800574:800673	382854	0	True				
ANR	383202	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		382854	0					
ANR	383203	Callee	zend_throw_error		382854	0					
ANR	383204	Identifier	zend_throw_error		382854	0					
ANR	383205	ArgumentList	NULL		382854	1					
ANR	383206	Argument	NULL		382854	0					
ANR	383207	Identifier	NULL		382854	0					
ANR	383208	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		382854	1					
ANR	383209	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		382854	0					
ANR	383210	ExpressionStatement	FREE_OP ( free_op_data1 )	25324:3:800679:800701	382854	1	True				
ANR	383211	CallExpression	FREE_OP ( free_op_data1 )		382854	0					
ANR	383212	Callee	FREE_OP		382854	0					
ANR	383213	Identifier	FREE_OP		382854	0					
ANR	383214	ArgumentList	free_op_data1		382854	1					
ANR	383215	Argument	free_op_data1		382854	0					
ANR	383216	Identifier	free_op_data1		382854	0					
ANR	383217	ExpressionStatement	HANDLE_EXCEPTION ( )	25326:3:800707:800725	382854	2	True				
ANR	383218	CallExpression	HANDLE_EXCEPTION ( )		382854	0					
ANR	383219	Callee	HANDLE_EXCEPTION		382854	0					
ANR	383220	Identifier	HANDLE_EXCEPTION		382854	0					
ANR	383221	ArgumentList			382854	1					
ANR	383222	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		382854	6					
ANR	383223	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	25329:6:800738:800775	382854	0	True				
ANR	383224	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		382854	0					
ANR	383225	Callee	UNEXPECTED		382854	0					
ANR	383226	Identifier	UNEXPECTED		382854	0					
ANR	383227	ArgumentList	var_ptr == & EG ( error_zval )		382854	1					
ANR	383228	Argument	var_ptr == & EG ( error_zval )		382854	0					
ANR	383229	EqualityExpression	var_ptr == & EG ( error_zval )		382854	0		==			
ANR	383230	Identifier	var_ptr		382854	0					
ANR	383231	UnaryOperationExpression	& EG ( error_zval )		382854	1					
ANR	383232	UnaryOperator	&		382854	0					
ANR	383233	CallExpression	EG ( error_zval )		382854	1					
ANR	383234	Callee	EG		382854	0					
ANR	383235	Identifier	EG		382854	0					
ANR	383236	ArgumentList	error_zval		382854	1					
ANR	383237	Argument	error_zval		382854	0					
ANR	383238	Identifier	error_zval		382854	0					
ANR	383239	CompoundStatement		49:46:1643:1643	382854	1					
ANR	383240	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		382854	0					
ANR	383241	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	25330:7:800787:800823	382854	0	True				
ANR	383242	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382854	0					
ANR	383243	Callee	UNEXPECTED		382854	0					
ANR	383244	Identifier	UNEXPECTED		382854	0					
ANR	383245	ArgumentList	RETURN_VALUE_USED ( opline )		382854	1					
ANR	383246	Argument	RETURN_VALUE_USED ( opline )		382854	0					
ANR	383247	CallExpression	RETURN_VALUE_USED ( opline )		382854	0					
ANR	383248	Callee	RETURN_VALUE_USED		382854	0					
ANR	383249	Identifier	RETURN_VALUE_USED		382854	0					
ANR	383250	ArgumentList	opline		382854	1					
ANR	383251	Argument	opline		382854	0					
ANR	383252	Identifier	opline		382854	0					
ANR	383253	CompoundStatement		50:46:1691:1691	382854	1					
ANR	383254	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	25331:4:800832:800869	382854	0	True				
ANR	383255	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		382854	0					
ANR	383256	Callee	ZVAL_NULL		382854	0					
ANR	383257	Identifier	ZVAL_NULL		382854	0					
ANR	383258	ArgumentList	EX_VAR ( opline -> result . var )		382854	1					
ANR	383259	Argument	EX_VAR ( opline -> result . var )		382854	0					
ANR	383260	CallExpression	EX_VAR ( opline -> result . var )		382854	0					
ANR	383261	Callee	EX_VAR		382854	0					
ANR	383262	Identifier	EX_VAR		382854	0					
ANR	383263	ArgumentList	opline -> result . var		382854	1					
ANR	383264	Argument	opline -> result . var		382854	0					
ANR	383265	MemberAccess	opline -> result . var		382854	0					
ANR	383266	PtrMemberAccess	opline -> result		382854	0					
ANR	383267	Identifier	opline		382854	0					
ANR	383268	Identifier	result		382854	1					
ANR	383269	Identifier	var		382854	1					
ANR	383270	ElseStatement	else		382854	0					
ANR	383271	CompoundStatement		53:9:1750:1750	382854	0					
ANR	383272	ExpressionStatement	ZVAL_DEREF ( var_ptr )	25334:3:800890:800909	382854	0	True				
ANR	383273	CallExpression	ZVAL_DEREF ( var_ptr )		382854	0					
ANR	383274	Callee	ZVAL_DEREF		382854	0					
ANR	383275	Identifier	ZVAL_DEREF		382854	0					
ANR	383276	ArgumentList	var_ptr		382854	1					
ANR	383277	Argument	var_ptr		382854	0					
ANR	383278	Identifier	var_ptr		382854	0					
ANR	383279	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	25335:3:800914:800942	382854	1	True				
ANR	383280	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		382854	0					
ANR	383281	Callee	SEPARATE_ZVAL_NOREF		382854	0					
ANR	383282	Identifier	SEPARATE_ZVAL_NOREF		382854	0					
ANR	383283	ArgumentList	var_ptr		382854	1					
ANR	383284	Argument	var_ptr		382854	0					
ANR	383285	Identifier	var_ptr		382854	0					
ANR	383286	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	25337:3:800948:800982	382854	2	True				
ANR	383287	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		382854	0					
ANR	383288	Callee	binary_op		382854	0					
ANR	383289	Identifier	binary_op		382854	0					
ANR	383290	ArgumentList	var_ptr		382854	1					
ANR	383291	Argument	var_ptr		382854	0					
ANR	383292	Identifier	var_ptr		382854	0					
ANR	383293	Argument	var_ptr		382854	1					
ANR	383294	Identifier	var_ptr		382854	0					
ANR	383295	Argument	value		382854	2					
ANR	383296	Identifier	value		382854	0					
ANR	383297	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		382854	3					
ANR	383298	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	25339:7:800992:801028	382854	0	True				
ANR	383299	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		382854	0					
ANR	383300	Callee	UNEXPECTED		382854	0					
ANR	383301	Identifier	UNEXPECTED		382854	0					
ANR	383302	ArgumentList	RETURN_VALUE_USED ( opline )		382854	1					
ANR	383303	Argument	RETURN_VALUE_USED ( opline )		382854	0					
ANR	383304	CallExpression	RETURN_VALUE_USED ( opline )		382854	0					
ANR	383305	Callee	RETURN_VALUE_USED		382854	0					
ANR	383306	Identifier	RETURN_VALUE_USED		382854	0					
ANR	383307	ArgumentList	opline		382854	1					
ANR	383308	Argument	opline		382854	0					
ANR	383309	Identifier	opline		382854	0					
ANR	383310	CompoundStatement		59:46:1896:1896	382854	1					
ANR	383311	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	25340:4:801037:801083	382854	0	True				
ANR	383312	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		382854	0					
ANR	383313	Callee	ZVAL_COPY		382854	0					
ANR	383314	Identifier	ZVAL_COPY		382854	0					
ANR	383315	ArgumentList	EX_VAR ( opline -> result . var )		382854	1					
ANR	383316	Argument	EX_VAR ( opline -> result . var )		382854	0					
ANR	383317	CallExpression	EX_VAR ( opline -> result . var )		382854	0					
ANR	383318	Callee	EX_VAR		382854	0					
ANR	383319	Identifier	EX_VAR		382854	0					
ANR	383320	ArgumentList	opline -> result . var		382854	1					
ANR	383321	Argument	opline -> result . var		382854	0					
ANR	383322	MemberAccess	opline -> result . var		382854	0					
ANR	383323	PtrMemberAccess	opline -> result		382854	0					
ANR	383324	Identifier	opline		382854	0					
ANR	383325	Identifier	result		382854	1					
ANR	383326	Identifier	var		382854	1					
ANR	383327	Argument	var_ptr		382854	1					
ANR	383328	Identifier	var_ptr		382854	0					
ANR	383329	Condition	0	25343:10:801104:801104	382854	1	True				
ANR	383330	PrimaryExpression	0		382854	0					
ANR	383331	ExpressionStatement	FREE_OP ( free_op_data1 )	25345:1:801110:801132	382854	9	True				
ANR	383332	CallExpression	FREE_OP ( free_op_data1 )		382854	0					
ANR	383333	Callee	FREE_OP		382854	0					
ANR	383334	Identifier	FREE_OP		382854	0					
ANR	383335	ArgumentList	free_op_data1		382854	1					
ANR	383336	Argument	free_op_data1		382854	0					
ANR	383337	Identifier	free_op_data1		382854	0					
ANR	383338	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	25347:1:801136:801164	382854	10	True				
ANR	383339	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		382854	0					
ANR	383340	Callee	ZEND_VM_NEXT_OPCODE_EX		382854	0					
ANR	383341	Identifier	ZEND_VM_NEXT_OPCODE_EX		382854	0					
ANR	383342	ArgumentList	1		382854	1					
ANR	383343	Argument	1		382854	0					
ANR	383344	PrimaryExpression	1		382854	0					
ANR	383345	Argument	2		382854	1					
ANR	383346	PrimaryExpression	2		382854	0					
ANR	383347	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		382854	1					
ANR	383348	Identifier	zend_binary_assign_op_dim_helper_SPEC_UNUSED_CV		382854	2					
ANR	383349	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		382854	3					
ANR	383350	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	25280:93:799080:799131	382854	0	True				
ANR	383351	ParameterType	binary_op_type binary_op		382854	0					
ANR	383352	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		382854	1					
ANR	383353	CFGEntryNode	ENTRY		382854		True				
ANR	383354	CFGExitNode	EXIT		382854		True				
ANR	383355	Symbol	container		382854						
ANR	383356	Symbol	opline -> op2		382854						
ANR	383357	Symbol	opline -> op2 . var		382854						
ANR	383358	Symbol	IS_CV		382854						
ANR	383359	Symbol	rv		382854						
ANR	383360	Symbol	Z_OBJ_P		382854						
ANR	383361	Symbol	dim		382854						
ANR	383362	Symbol	Z_TYPE		382854						
ANR	383363	Symbol	free_op_data1		382854						
ANR	383364	Symbol	& EG		382854						
ANR	383365	Symbol	var_ptr		382854						
ANR	383366	Symbol	execute_data		382854						
ANR	383367	Symbol	opline -> result		382854						
ANR	383368	Symbol	_get_obj_zval_ptr_unused		382854						
ANR	383369	Symbol	( opline + 1 ) -> op1		382854						
ANR	383370	Symbol	UNEXPECTED		382854						
ANR	383371	Symbol	RETURN_VALUE_USED		382854						
ANR	383372	Symbol	( opline + 1 ) -> op1 . var		382854						
ANR	383373	Symbol	opline		382854						
ANR	383374	Symbol	get_zval_ptr_r		382854						
ANR	383375	Symbol	Z_INDIRECT		382854						
ANR	383376	Symbol	IS_ARRAY		382854						
ANR	383377	Symbol	value		382854						
ANR	383378	Symbol	binary_op		382854						
ANR	383379	Symbol	( opline + 1 ) -> op1_type		382854						
ANR	383380	Symbol	NULL		382854						
ANR	383381	Symbol	_get_zval_ptr_cv_BP_VAR_R		382854						
ANR	383382	Symbol	Z_TYPE_P		382854						
ANR	383383	Symbol	& rv		382854						
ANR	383384	Symbol	* opline		382854						
ANR	383385	Symbol	error_zval		382854						
ANR	383386	Symbol	EX_VAR		382854						
ANR	383387	Symbol	IS_OBJECT		382854						
ANR	383388	Symbol	IS_VAR		382854						
ANR	383389	Symbol	EXPECTED		382854						
ANR	383390	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		382854						
ANR	383391	Symbol	& free_op_data1		382854						
ANR	383392	Symbol	opline -> result . var		382854						
ANR	383393	Symbol	IS_UNUSED		382854						
ANR	383394	Symbol	IS_INDIRECT		382854						
ANR	383395	Function	zend_pre_incdec_property_helper_SPEC_UNUSED_CV	25590:0:811878:813908							
ANR	383396	FunctionDef	zend_pre_incdec_property_helper_SPEC_UNUSED_CV (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		383395	0					
ANR	383397	CompoundStatement		25591:0:812007:813908	383395	0					
ANR	383398	IdentifierDeclStatement	USE_OPLINE zval * object ;	25592:1:812010:812035	383395	0	True				
ANR	383399	IdentifierDecl	* object		383395	0					
ANR	383400	IdentifierDeclType	USE_OPLINE zval *		383395	0					
ANR	383401	Identifier	object		383395	1					
ANR	383402	IdentifierDeclStatement	zval * property ;	25595:1:812038:812052	383395	1	True				
ANR	383403	IdentifierDecl	* property		383395	0					
ANR	383404	IdentifierDeclType	zval *		383395	0					
ANR	383405	Identifier	property		383395	1					
ANR	383406	IdentifierDeclStatement	zval * zptr ;	25596:1:812055:812065	383395	2	True				
ANR	383407	IdentifierDecl	* zptr		383395	0					
ANR	383408	IdentifierDeclType	zval *		383395	0					
ANR	383409	Identifier	zptr		383395	1					
ANR	383410	ExpressionStatement	SAVE_OPLINE ( )	25598:1:812069:812082	383395	3	True				
ANR	383411	CallExpression	SAVE_OPLINE ( )		383395	0					
ANR	383412	Callee	SAVE_OPLINE		383395	0					
ANR	383413	Identifier	SAVE_OPLINE		383395	0					
ANR	383414	ArgumentList			383395	1					
ANR	383415	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	25599:1:812085:812132	383395	4	True				
ANR	383416	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		383395	0		=			
ANR	383417	Identifier	object		383395	0					
ANR	383418	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		383395	1					
ANR	383419	Callee	_get_obj_zval_ptr_unused		383395	0					
ANR	383420	Identifier	_get_obj_zval_ptr_unused		383395	0					
ANR	383421	ArgumentList	execute_data		383395	1					
ANR	383422	Argument	execute_data		383395	0					
ANR	383423	Identifier	execute_data		383395	0					
ANR	383424	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		383395	5					
ANR	383425	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	25601:5:812140:812200	383395	0	True				
ANR	383426	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		383395	0		&&			
ANR	383427	EqualityExpression	IS_UNUSED == IS_UNUSED		383395	0		==			
ANR	383428	Identifier	IS_UNUSED		383395	0					
ANR	383429	Identifier	IS_UNUSED		383395	1					
ANR	383430	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		383395	1					
ANR	383431	Callee	UNEXPECTED		383395	0					
ANR	383432	Identifier	UNEXPECTED		383395	0					
ANR	383433	ArgumentList	Z_OBJ_P ( object ) == NULL		383395	1					
ANR	383434	Argument	Z_OBJ_P ( object ) == NULL		383395	0					
ANR	383435	EqualityExpression	Z_OBJ_P ( object ) == NULL		383395	0		==			
ANR	383436	CallExpression	Z_OBJ_P ( object )		383395	0					
ANR	383437	Callee	Z_OBJ_P		383395	0					
ANR	383438	Identifier	Z_OBJ_P		383395	0					
ANR	383439	ArgumentList	object		383395	1					
ANR	383440	Argument	object		383395	0					
ANR	383441	Identifier	object		383395	0					
ANR	383442	Identifier	NULL		383395	1					
ANR	383443	CompoundStatement		11:68:195:195	383395	1					
ANR	383444	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	25602:2:812207:812271	383395	0	True				
ANR	383445	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		383395	0					
ANR	383446	Callee	zend_throw_error		383395	0					
ANR	383447	Identifier	zend_throw_error		383395	0					
ANR	383448	ArgumentList	NULL		383395	1					
ANR	383449	Argument	NULL		383395	0					
ANR	383450	Identifier	NULL		383395	0					
ANR	383451	Argument	"""Using $this when not in object context"""		383395	1					
ANR	383452	PrimaryExpression	"""Using $this when not in object context"""		383395	0					
ANR	383453	ExpressionStatement	HANDLE_EXCEPTION ( )	25604:2:812276:812294	383395	1	True				
ANR	383454	CallExpression	HANDLE_EXCEPTION ( )		383395	0					
ANR	383455	Callee	HANDLE_EXCEPTION		383395	0					
ANR	383456	Identifier	HANDLE_EXCEPTION		383395	0					
ANR	383457	ArgumentList			383395	1					
ANR	383458	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	25607:1:812301:812368	383395	6	True				
ANR	383459	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		383395	0		=			
ANR	383460	Identifier	property		383395	0					
ANR	383461	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		383395	1					
ANR	383462	Callee	_get_zval_ptr_cv_BP_VAR_R		383395	0					
ANR	383463	Identifier	_get_zval_ptr_cv_BP_VAR_R		383395	0					
ANR	383464	ArgumentList	execute_data		383395	1					
ANR	383465	Argument	execute_data		383395	0					
ANR	383466	Identifier	execute_data		383395	0					
ANR	383467	Argument	opline -> op2 . var		383395	1					
ANR	383468	MemberAccess	opline -> op2 . var		383395	0					
ANR	383469	PtrMemberAccess	opline -> op2		383395	0					
ANR	383470	Identifier	opline		383395	0					
ANR	383471	Identifier	op2		383395	1					
ANR	383472	Identifier	var		383395	1					
ANR	383473	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		383395	7					
ANR	383474	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	25609:5:812376:812424	383395	0	True				
ANR	383475	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		383395	0		&&			
ANR	383476	EqualityExpression	IS_UNUSED == IS_VAR		383395	0		==			
ANR	383477	Identifier	IS_UNUSED		383395	0					
ANR	383478	Identifier	IS_VAR		383395	1					
ANR	383479	CallExpression	UNEXPECTED ( object == NULL )		383395	1					
ANR	383480	Callee	UNEXPECTED		383395	0					
ANR	383481	Identifier	UNEXPECTED		383395	0					
ANR	383482	ArgumentList	object == NULL		383395	1					
ANR	383483	Argument	object == NULL		383395	0					
ANR	383484	EqualityExpression	object == NULL		383395	0		==			
ANR	383485	Identifier	object		383395	0					
ANR	383486	Identifier	NULL		383395	1					
ANR	383487	CompoundStatement		19:56:419:419	383395	1					
ANR	383488	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	25610:2:812431:812521	383395	0	True				
ANR	383489	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		383395	0					
ANR	383490	Callee	zend_throw_error		383395	0					
ANR	383491	Identifier	zend_throw_error		383395	0					
ANR	383492	ArgumentList	NULL		383395	1					
ANR	383493	Argument	NULL		383395	0					
ANR	383494	Identifier	NULL		383395	0					
ANR	383495	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		383395	1					
ANR	383496	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		383395	0					
ANR	383497	ExpressionStatement	HANDLE_EXCEPTION ( )	25612:2:812526:812544	383395	1	True				
ANR	383498	CallExpression	HANDLE_EXCEPTION ( )		383395	0					
ANR	383499	Callee	HANDLE_EXCEPTION		383395	0					
ANR	383500	Identifier	HANDLE_EXCEPTION		383395	0					
ANR	383501	ArgumentList			383395	1					
ANR	383502	DoStatement	do		383395	8					
ANR	383503	CompoundStatement		25:4:546:546	383395	0					
ANR	383504	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		383395	0					
ANR	383505	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	25616:6:812562:812628	383395	0	True				
ANR	383506	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		383395	0		&&			
ANR	383507	EqualityExpression	IS_UNUSED != IS_UNUSED		383395	0		!=			
ANR	383508	Identifier	IS_UNUSED		383395	0					
ANR	383509	Identifier	IS_UNUSED		383395	1					
ANR	383510	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		383395	1					
ANR	383511	Callee	UNEXPECTED		383395	0					
ANR	383512	Identifier	UNEXPECTED		383395	0					
ANR	383513	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		383395	1					
ANR	383514	Argument	Z_TYPE_P ( object ) != IS_OBJECT		383395	0					
ANR	383515	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		383395	0		!=			
ANR	383516	CallExpression	Z_TYPE_P ( object )		383395	0					
ANR	383517	Callee	Z_TYPE_P		383395	0					
ANR	383518	Identifier	Z_TYPE_P		383395	0					
ANR	383519	ArgumentList	object		383395	1					
ANR	383520	Argument	object		383395	0					
ANR	383521	Identifier	object		383395	0					
ANR	383522	Identifier	IS_OBJECT		383395	1					
ANR	383523	CompoundStatement		26:75:623:623	383395	1					
ANR	383524	ExpressionStatement	ZVAL_DEREF ( object )	25617:3:812636:812654	383395	0	True				
ANR	383525	CallExpression	ZVAL_DEREF ( object )		383395	0					
ANR	383526	Callee	ZVAL_DEREF		383395	0					
ANR	383527	Identifier	ZVAL_DEREF		383395	0					
ANR	383528	ArgumentList	object		383395	1					
ANR	383529	Argument	object		383395	0					
ANR	383530	Identifier	object		383395	0					
ANR	383531	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		383395	1					
ANR	383532	Condition	UNEXPECTED ( ! make_real_object ( object ) )	25618:7:812663:812699	383395	0	True				
ANR	383533	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		383395	0					
ANR	383534	Callee	UNEXPECTED		383395	0					
ANR	383535	Identifier	UNEXPECTED		383395	0					
ANR	383536	ArgumentList	! make_real_object ( object )		383395	1					
ANR	383537	Argument	! make_real_object ( object )		383395	0					
ANR	383538	UnaryOperationExpression	! make_real_object ( object )		383395	0					
ANR	383539	UnaryOperator	!		383395	0					
ANR	383540	CallExpression	make_real_object ( object )		383395	1					
ANR	383541	Callee	make_real_object		383395	0					
ANR	383542	Identifier	make_real_object		383395	0					
ANR	383543	ArgumentList	object		383395	1					
ANR	383544	Argument	object		383395	0					
ANR	383545	Identifier	object		383395	0					
ANR	383546	CompoundStatement		28:46:694:694	383395	1					
ANR	383547	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	25619:4:812708:812786	383395	0	True				
ANR	383548	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		383395	0					
ANR	383549	Callee	zend_error		383395	0					
ANR	383550	Identifier	zend_error		383395	0					
ANR	383551	ArgumentList	E_WARNING		383395	1					
ANR	383552	Argument	E_WARNING		383395	0					
ANR	383553	Identifier	E_WARNING		383395	0					
ANR	383554	Argument	"""Attempt to increment/decrement property of non-object"""		383395	1					
ANR	383555	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		383395	0					
ANR	383556	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		383395	1					
ANR	383557	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	25620:8:812796:812832	383395	0	True				
ANR	383558	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		383395	0					
ANR	383559	Callee	UNEXPECTED		383395	0					
ANR	383560	Identifier	UNEXPECTED		383395	0					
ANR	383561	ArgumentList	RETURN_VALUE_USED ( opline )		383395	1					
ANR	383562	Argument	RETURN_VALUE_USED ( opline )		383395	0					
ANR	383563	CallExpression	RETURN_VALUE_USED ( opline )		383395	0					
ANR	383564	Callee	RETURN_VALUE_USED		383395	0					
ANR	383565	Identifier	RETURN_VALUE_USED		383395	0					
ANR	383566	ArgumentList	opline		383395	1					
ANR	383567	Argument	opline		383395	0					
ANR	383568	Identifier	opline		383395	0					
ANR	383569	CompoundStatement		30:47:827:827	383395	1					
ANR	383570	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	25621:5:812842:812879	383395	0	True				
ANR	383571	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		383395	0					
ANR	383572	Callee	ZVAL_NULL		383395	0					
ANR	383573	Identifier	ZVAL_NULL		383395	0					
ANR	383574	ArgumentList	EX_VAR ( opline -> result . var )		383395	1					
ANR	383575	Argument	EX_VAR ( opline -> result . var )		383395	0					
ANR	383576	CallExpression	EX_VAR ( opline -> result . var )		383395	0					
ANR	383577	Callee	EX_VAR		383395	0					
ANR	383578	Identifier	EX_VAR		383395	0					
ANR	383579	ArgumentList	opline -> result . var		383395	1					
ANR	383580	Argument	opline -> result . var		383395	0					
ANR	383581	MemberAccess	opline -> result . var		383395	0					
ANR	383582	PtrMemberAccess	opline -> result		383395	0					
ANR	383583	Identifier	opline		383395	0					
ANR	383584	Identifier	result		383395	1					
ANR	383585	Identifier	var		383395	1					
ANR	383586	BreakStatement	break ;	25623:4:812891:812896	383395	2	True				
ANR	383587	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		383395	1					
ANR	383588	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	25629:6:812970:813191	383395	0	True				
ANR	383589	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		383395	0		&&			
ANR	383590	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		383395	0					
ANR	383591	Callee	EXPECTED		383395	0					
ANR	383592	Identifier	EXPECTED		383395	0					
ANR	383593	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383395	1					
ANR	383594	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383395	0					
ANR	383595	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383395	0					
ANR	383596	CallExpression	Z_OBJ_HT_P ( object )		383395	0					
ANR	383597	Callee	Z_OBJ_HT_P		383395	0					
ANR	383598	Identifier	Z_OBJ_HT_P		383395	0					
ANR	383599	ArgumentList	object		383395	1					
ANR	383600	Argument	object		383395	0					
ANR	383601	Identifier	object		383395	0					
ANR	383602	Identifier	get_property_ptr_ptr		383395	1					
ANR	383603	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		383395	1					
ANR	383604	Callee	EXPECTED		383395	0					
ANR	383605	Identifier	EXPECTED		383395	0					
ANR	383606	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		383395	1					
ANR	383607	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		383395	0					
ANR	383608	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		383395	0		!=			
ANR	383609	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		383395	0		=			
ANR	383610	Identifier	zptr		383395	0					
ANR	383611	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		383395	1					
ANR	383612	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383395	0					
ANR	383613	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383395	0					
ANR	383614	CallExpression	Z_OBJ_HT_P ( object )		383395	0					
ANR	383615	Callee	Z_OBJ_HT_P		383395	0					
ANR	383616	Identifier	Z_OBJ_HT_P		383395	0					
ANR	383617	ArgumentList	object		383395	1					
ANR	383618	Argument	object		383395	0					
ANR	383619	Identifier	object		383395	0					
ANR	383620	Identifier	get_property_ptr_ptr		383395	1					
ANR	383621	ArgumentList	object		383395	1					
ANR	383622	Argument	object		383395	0					
ANR	383623	Identifier	object		383395	0					
ANR	383624	Argument	property		383395	1					
ANR	383625	Identifier	property		383395	0					
ANR	383626	Argument	BP_VAR_RW		383395	2					
ANR	383627	Identifier	BP_VAR_RW		383395	0					
ANR	383628	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383395	3					
ANR	383629	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383395	0					
ANR	383630	Condition	IS_CV == IS_CONST		383395	0					
ANR	383631	EqualityExpression	IS_CV == IS_CONST		383395	0		==			
ANR	383632	Identifier	IS_CV		383395	0					
ANR	383633	Identifier	IS_CONST		383395	1					
ANR	383634	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		383395	1					
ANR	383635	Callee	CACHE_ADDR		383395	0					
ANR	383636	Identifier	CACHE_ADDR		383395	0					
ANR	383637	ArgumentList	Z_CACHE_SLOT_P ( property )		383395	1					
ANR	383638	Argument	Z_CACHE_SLOT_P ( property )		383395	0					
ANR	383639	CallExpression	Z_CACHE_SLOT_P ( property )		383395	0					
ANR	383640	Callee	Z_CACHE_SLOT_P		383395	0					
ANR	383641	Identifier	Z_CACHE_SLOT_P		383395	0					
ANR	383642	ArgumentList	property		383395	1					
ANR	383643	Argument	property		383395	0					
ANR	383644	Identifier	property		383395	0					
ANR	383645	Identifier	NULL		383395	2					
ANR	383646	Identifier	NULL		383395	1					
ANR	383647	CompoundStatement		40:173:1186:1186	383395	1					
ANR	383648	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		383395	0					
ANR	383649	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	25632:7:813204:813238	383395	0	True				
ANR	383650	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		383395	0					
ANR	383651	Callee	EXPECTED		383395	0					
ANR	383652	Identifier	EXPECTED		383395	0					
ANR	383653	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		383395	1					
ANR	383654	Argument	Z_TYPE_P ( zptr ) == IS_LONG		383395	0					
ANR	383655	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		383395	0		==			
ANR	383656	CallExpression	Z_TYPE_P ( zptr )		383395	0					
ANR	383657	Callee	Z_TYPE_P		383395	0					
ANR	383658	Identifier	Z_TYPE_P		383395	0					
ANR	383659	ArgumentList	zptr		383395	1					
ANR	383660	Argument	zptr		383395	0					
ANR	383661	Identifier	zptr		383395	0					
ANR	383662	Identifier	IS_LONG		383395	1					
ANR	383663	CompoundStatement		42:44:1233:1233	383395	1					
ANR	383664	IfStatement	if ( inc )		383395	0					
ANR	383665	Condition	inc	25633:8:813251:813253	383395	0	True				
ANR	383666	Identifier	inc		383395	0					
ANR	383667	CompoundStatement		43:13:1248:1248	383395	1					
ANR	383668	ExpressionStatement	fast_long_increment_function ( zptr )	25634:5:813263:813297	383395	0	True				
ANR	383669	CallExpression	fast_long_increment_function ( zptr )		383395	0					
ANR	383670	Callee	fast_long_increment_function		383395	0					
ANR	383671	Identifier	fast_long_increment_function		383395	0					
ANR	383672	ArgumentList	zptr		383395	1					
ANR	383673	Argument	zptr		383395	0					
ANR	383674	Identifier	zptr		383395	0					
ANR	383675	ElseStatement	else		383395	0					
ANR	383676	CompoundStatement		45:11:1302:1302	383395	0					
ANR	383677	ExpressionStatement	fast_long_decrement_function ( zptr )	25636:5:813317:813351	383395	0	True				
ANR	383678	CallExpression	fast_long_decrement_function ( zptr )		383395	0					
ANR	383679	Callee	fast_long_decrement_function		383395	0					
ANR	383680	Identifier	fast_long_decrement_function		383395	0					
ANR	383681	ArgumentList	zptr		383395	1					
ANR	383682	Argument	zptr		383395	0					
ANR	383683	Identifier	zptr		383395	0					
ANR	383684	ElseStatement	else		383395	0					
ANR	383685	CompoundStatement		48:10:1361:1361	383395	0					
ANR	383686	ExpressionStatement	ZVAL_DEREF ( zptr )	25639:4:813375:813391	383395	0	True				
ANR	383687	CallExpression	ZVAL_DEREF ( zptr )		383395	0					
ANR	383688	Callee	ZVAL_DEREF		383395	0					
ANR	383689	Identifier	ZVAL_DEREF		383395	0					
ANR	383690	ArgumentList	zptr		383395	1					
ANR	383691	Argument	zptr		383395	0					
ANR	383692	Identifier	zptr		383395	0					
ANR	383693	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	25640:4:813397:813422	383395	1	True				
ANR	383694	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		383395	0					
ANR	383695	Callee	SEPARATE_ZVAL_NOREF		383395	0					
ANR	383696	Identifier	SEPARATE_ZVAL_NOREF		383395	0					
ANR	383697	ArgumentList	zptr		383395	1					
ANR	383698	Argument	zptr		383395	0					
ANR	383699	Identifier	zptr		383395	0					
ANR	383700	IfStatement	if ( inc )		383395	2					
ANR	383701	Condition	inc	25642:8:813433:813435	383395	0	True				
ANR	383702	Identifier	inc		383395	0					
ANR	383703	CompoundStatement		52:13:1430:1430	383395	1					
ANR	383704	ExpressionStatement	increment_function ( zptr )	25643:5:813445:813469	383395	0	True				
ANR	383705	CallExpression	increment_function ( zptr )		383395	0					
ANR	383706	Callee	increment_function		383395	0					
ANR	383707	Identifier	increment_function		383395	0					
ANR	383708	ArgumentList	zptr		383395	1					
ANR	383709	Argument	zptr		383395	0					
ANR	383710	Identifier	zptr		383395	0					
ANR	383711	ElseStatement	else		383395	0					
ANR	383712	CompoundStatement		54:11:1474:1474	383395	0					
ANR	383713	ExpressionStatement	decrement_function ( zptr )	25645:5:813489:813513	383395	0	True				
ANR	383714	CallExpression	decrement_function ( zptr )		383395	0					
ANR	383715	Callee	decrement_function		383395	0					
ANR	383716	Identifier	decrement_function		383395	0					
ANR	383717	ArgumentList	zptr		383395	1					
ANR	383718	Argument	zptr		383395	0					
ANR	383719	Identifier	zptr		383395	0					
ANR	383720	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		383395	1					
ANR	383721	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	25648:7:813533:813569	383395	0	True				
ANR	383722	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		383395	0					
ANR	383723	Callee	UNEXPECTED		383395	0					
ANR	383724	Identifier	UNEXPECTED		383395	0					
ANR	383725	ArgumentList	RETURN_VALUE_USED ( opline )		383395	1					
ANR	383726	Argument	RETURN_VALUE_USED ( opline )		383395	0					
ANR	383727	CallExpression	RETURN_VALUE_USED ( opline )		383395	0					
ANR	383728	Callee	RETURN_VALUE_USED		383395	0					
ANR	383729	Identifier	RETURN_VALUE_USED		383395	0					
ANR	383730	ArgumentList	opline		383395	1					
ANR	383731	Argument	opline		383395	0					
ANR	383732	Identifier	opline		383395	0					
ANR	383733	CompoundStatement		58:46:1564:1564	383395	1					
ANR	383734	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	25649:4:813578:813621	383395	0	True				
ANR	383735	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		383395	0					
ANR	383736	Callee	ZVAL_COPY		383395	0					
ANR	383737	Identifier	ZVAL_COPY		383395	0					
ANR	383738	ArgumentList	EX_VAR ( opline -> result . var )		383395	1					
ANR	383739	Argument	EX_VAR ( opline -> result . var )		383395	0					
ANR	383740	CallExpression	EX_VAR ( opline -> result . var )		383395	0					
ANR	383741	Callee	EX_VAR		383395	0					
ANR	383742	Identifier	EX_VAR		383395	0					
ANR	383743	ArgumentList	opline -> result . var		383395	1					
ANR	383744	Argument	opline -> result . var		383395	0					
ANR	383745	MemberAccess	opline -> result . var		383395	0					
ANR	383746	PtrMemberAccess	opline -> result		383395	0					
ANR	383747	Identifier	opline		383395	0					
ANR	383748	Identifier	result		383395	1					
ANR	383749	Identifier	var		383395	1					
ANR	383750	Argument	zptr		383395	1					
ANR	383751	Identifier	zptr		383395	0					
ANR	383752	ElseStatement	else		383395	0					
ANR	383753	CompoundStatement		61:9:1629:1629	383395	0					
ANR	383754	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	25652:3:813642:813846	383395	0	True				
ANR	383755	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		383395	0					
ANR	383756	Callee	zend_pre_incdec_overloaded_property		383395	0					
ANR	383757	Identifier	zend_pre_incdec_overloaded_property		383395	0					
ANR	383758	ArgumentList	object		383395	1					
ANR	383759	Argument	object		383395	0					
ANR	383760	Identifier	object		383395	0					
ANR	383761	Argument	property		383395	1					
ANR	383762	Identifier	property		383395	0					
ANR	383763	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383395	2					
ANR	383764	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383395	0					
ANR	383765	Condition	IS_CV == IS_CONST		383395	0					
ANR	383766	EqualityExpression	IS_CV == IS_CONST		383395	0		==			
ANR	383767	Identifier	IS_CV		383395	0					
ANR	383768	Identifier	IS_CONST		383395	1					
ANR	383769	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		383395	1					
ANR	383770	Callee	CACHE_ADDR		383395	0					
ANR	383771	Identifier	CACHE_ADDR		383395	0					
ANR	383772	ArgumentList	Z_CACHE_SLOT_P ( property )		383395	1					
ANR	383773	Argument	Z_CACHE_SLOT_P ( property )		383395	0					
ANR	383774	CallExpression	Z_CACHE_SLOT_P ( property )		383395	0					
ANR	383775	Callee	Z_CACHE_SLOT_P		383395	0					
ANR	383776	Identifier	Z_CACHE_SLOT_P		383395	0					
ANR	383777	ArgumentList	property		383395	1					
ANR	383778	Argument	property		383395	0					
ANR	383779	Identifier	property		383395	0					
ANR	383780	Identifier	NULL		383395	2					
ANR	383781	Argument	inc		383395	3					
ANR	383782	Identifier	inc		383395	0					
ANR	383783	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		383395	4					
ANR	383784	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		383395	0					
ANR	383785	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		383395	0					
ANR	383786	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		383395	0					
ANR	383787	Callee	UNEXPECTED		383395	0					
ANR	383788	Identifier	UNEXPECTED		383395	0					
ANR	383789	ArgumentList	RETURN_VALUE_USED ( opline )		383395	1					
ANR	383790	Argument	RETURN_VALUE_USED ( opline )		383395	0					
ANR	383791	CallExpression	RETURN_VALUE_USED ( opline )		383395	0					
ANR	383792	Callee	RETURN_VALUE_USED		383395	0					
ANR	383793	Identifier	RETURN_VALUE_USED		383395	0					
ANR	383794	ArgumentList	opline		383395	1					
ANR	383795	Argument	opline		383395	0					
ANR	383796	Identifier	opline		383395	0					
ANR	383797	CallExpression	EX_VAR ( opline -> result . var )		383395	1					
ANR	383798	Callee	EX_VAR		383395	0					
ANR	383799	Identifier	EX_VAR		383395	0					
ANR	383800	ArgumentList	opline -> result . var		383395	1					
ANR	383801	Argument	opline -> result . var		383395	0					
ANR	383802	MemberAccess	opline -> result . var		383395	0					
ANR	383803	PtrMemberAccess	opline -> result		383395	0					
ANR	383804	Identifier	opline		383395	0					
ANR	383805	Identifier	result		383395	1					
ANR	383806	Identifier	var		383395	1					
ANR	383807	Identifier	NULL		383395	2					
ANR	383808	Condition	0	25654:10:813862:813862	383395	1	True				
ANR	383809	PrimaryExpression	0		383395	0					
ANR	383810	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	25657:1:813869:813906	383395	9	True				
ANR	383811	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		383395	0					
ANR	383812	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		383395	0					
ANR	383813	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		383395	0					
ANR	383814	ArgumentList			383395	1					
ANR	383815	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		383395	1					
ANR	383816	Identifier	zend_pre_incdec_property_helper_SPEC_UNUSED_CV		383395	2					
ANR	383817	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		383395	3					
ANR	383818	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	25590:92:811970:812004	383395	0	True				
ANR	383819	ParameterType	int inc		383395	0					
ANR	383820	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		383395	1					
ANR	383821	CFGEntryNode	ENTRY		383395		True				
ANR	383822	CFGExitNode	EXIT		383395		True				
ANR	383823	Symbol	opline -> op2		383395						
ANR	383824	Symbol	opline -> op2 . var		383395						
ANR	383825	Symbol	IS_CV		383395						
ANR	383826	Symbol	Z_OBJ_P		383395						
ANR	383827	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383395						
ANR	383828	Symbol	zptr		383395						
ANR	383829	Symbol	execute_data		383395						
ANR	383830	Symbol	opline -> result		383395						
ANR	383831	Symbol	_get_obj_zval_ptr_unused		383395						
ANR	383832	Symbol	UNEXPECTED		383395						
ANR	383833	Symbol	E_WARNING		383395						
ANR	383834	Symbol	make_real_object		383395						
ANR	383835	Symbol	RETURN_VALUE_USED		383395						
ANR	383836	Symbol	opline		383395						
ANR	383837	Symbol	IS_LONG		383395						
ANR	383838	Symbol	property		383395						
ANR	383839	Symbol	inc		383395						
ANR	383840	Symbol	BP_VAR_RW		383395						
ANR	383841	Symbol	IS_CONST		383395						
ANR	383842	Symbol	NULL		383395						
ANR	383843	Symbol	Z_CACHE_SLOT_P		383395						
ANR	383844	Symbol	_get_zval_ptr_cv_BP_VAR_R		383395						
ANR	383845	Symbol	Z_TYPE_P		383395						
ANR	383846	Symbol	* Z_OBJ_HT_P		383395						
ANR	383847	Symbol	CACHE_ADDR		383395						
ANR	383848	Symbol	* opline		383395						
ANR	383849	Symbol	Z_OBJ_HT_P		383395						
ANR	383850	Symbol	EX_VAR		383395						
ANR	383851	Symbol	IS_OBJECT		383395						
ANR	383852	Symbol	IS_VAR		383395						
ANR	383853	Symbol	EXPECTED		383395						
ANR	383854	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		383395						
ANR	383855	Symbol	opline -> result . var		383395						
ANR	383856	Symbol	object		383395						
ANR	383857	Symbol	IS_UNUSED		383395						
ANR	383858	Function	zend_post_incdec_property_helper_SPEC_UNUSED_CV	25670:0:814359:816292							
ANR	383859	FunctionDef	zend_post_incdec_property_helper_SPEC_UNUSED_CV (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		383858	0					
ANR	383860	CompoundStatement		25671:0:814489:816292	383858	0					
ANR	383861	IdentifierDeclStatement	USE_OPLINE zval * object ;	25672:1:814492:814517	383858	0	True				
ANR	383862	IdentifierDecl	* object		383858	0					
ANR	383863	IdentifierDeclType	USE_OPLINE zval *		383858	0					
ANR	383864	Identifier	object		383858	1					
ANR	383865	IdentifierDeclStatement	zval * property ;	25675:1:814520:814534	383858	1	True				
ANR	383866	IdentifierDecl	* property		383858	0					
ANR	383867	IdentifierDeclType	zval *		383858	0					
ANR	383868	Identifier	property		383858	1					
ANR	383869	IdentifierDeclStatement	zval * zptr ;	25676:1:814537:814547	383858	2	True				
ANR	383870	IdentifierDecl	* zptr		383858	0					
ANR	383871	IdentifierDeclType	zval *		383858	0					
ANR	383872	Identifier	zptr		383858	1					
ANR	383873	ExpressionStatement	SAVE_OPLINE ( )	25678:1:814551:814564	383858	3	True				
ANR	383874	CallExpression	SAVE_OPLINE ( )		383858	0					
ANR	383875	Callee	SAVE_OPLINE		383858	0					
ANR	383876	Identifier	SAVE_OPLINE		383858	0					
ANR	383877	ArgumentList			383858	1					
ANR	383878	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	25679:1:814567:814614	383858	4	True				
ANR	383879	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		383858	0		=			
ANR	383880	Identifier	object		383858	0					
ANR	383881	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		383858	1					
ANR	383882	Callee	_get_obj_zval_ptr_unused		383858	0					
ANR	383883	Identifier	_get_obj_zval_ptr_unused		383858	0					
ANR	383884	ArgumentList	execute_data		383858	1					
ANR	383885	Argument	execute_data		383858	0					
ANR	383886	Identifier	execute_data		383858	0					
ANR	383887	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		383858	5					
ANR	383888	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	25681:5:814622:814682	383858	0	True				
ANR	383889	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		383858	0		&&			
ANR	383890	EqualityExpression	IS_UNUSED == IS_UNUSED		383858	0		==			
ANR	383891	Identifier	IS_UNUSED		383858	0					
ANR	383892	Identifier	IS_UNUSED		383858	1					
ANR	383893	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		383858	1					
ANR	383894	Callee	UNEXPECTED		383858	0					
ANR	383895	Identifier	UNEXPECTED		383858	0					
ANR	383896	ArgumentList	Z_OBJ_P ( object ) == NULL		383858	1					
ANR	383897	Argument	Z_OBJ_P ( object ) == NULL		383858	0					
ANR	383898	EqualityExpression	Z_OBJ_P ( object ) == NULL		383858	0		==			
ANR	383899	CallExpression	Z_OBJ_P ( object )		383858	0					
ANR	383900	Callee	Z_OBJ_P		383858	0					
ANR	383901	Identifier	Z_OBJ_P		383858	0					
ANR	383902	ArgumentList	object		383858	1					
ANR	383903	Argument	object		383858	0					
ANR	383904	Identifier	object		383858	0					
ANR	383905	Identifier	NULL		383858	1					
ANR	383906	CompoundStatement		11:68:195:195	383858	1					
ANR	383907	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	25682:2:814689:814753	383858	0	True				
ANR	383908	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		383858	0					
ANR	383909	Callee	zend_throw_error		383858	0					
ANR	383910	Identifier	zend_throw_error		383858	0					
ANR	383911	ArgumentList	NULL		383858	1					
ANR	383912	Argument	NULL		383858	0					
ANR	383913	Identifier	NULL		383858	0					
ANR	383914	Argument	"""Using $this when not in object context"""		383858	1					
ANR	383915	PrimaryExpression	"""Using $this when not in object context"""		383858	0					
ANR	383916	ExpressionStatement	HANDLE_EXCEPTION ( )	25684:2:814758:814776	383858	1	True				
ANR	383917	CallExpression	HANDLE_EXCEPTION ( )		383858	0					
ANR	383918	Callee	HANDLE_EXCEPTION		383858	0					
ANR	383919	Identifier	HANDLE_EXCEPTION		383858	0					
ANR	383920	ArgumentList			383858	1					
ANR	383921	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	25687:1:814783:814850	383858	6	True				
ANR	383922	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		383858	0		=			
ANR	383923	Identifier	property		383858	0					
ANR	383924	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		383858	1					
ANR	383925	Callee	_get_zval_ptr_cv_BP_VAR_R		383858	0					
ANR	383926	Identifier	_get_zval_ptr_cv_BP_VAR_R		383858	0					
ANR	383927	ArgumentList	execute_data		383858	1					
ANR	383928	Argument	execute_data		383858	0					
ANR	383929	Identifier	execute_data		383858	0					
ANR	383930	Argument	opline -> op2 . var		383858	1					
ANR	383931	MemberAccess	opline -> op2 . var		383858	0					
ANR	383932	PtrMemberAccess	opline -> op2		383858	0					
ANR	383933	Identifier	opline		383858	0					
ANR	383934	Identifier	op2		383858	1					
ANR	383935	Identifier	var		383858	1					
ANR	383936	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		383858	7					
ANR	383937	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	25689:5:814858:814906	383858	0	True				
ANR	383938	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		383858	0		&&			
ANR	383939	EqualityExpression	IS_UNUSED == IS_VAR		383858	0		==			
ANR	383940	Identifier	IS_UNUSED		383858	0					
ANR	383941	Identifier	IS_VAR		383858	1					
ANR	383942	CallExpression	UNEXPECTED ( object == NULL )		383858	1					
ANR	383943	Callee	UNEXPECTED		383858	0					
ANR	383944	Identifier	UNEXPECTED		383858	0					
ANR	383945	ArgumentList	object == NULL		383858	1					
ANR	383946	Argument	object == NULL		383858	0					
ANR	383947	EqualityExpression	object == NULL		383858	0		==			
ANR	383948	Identifier	object		383858	0					
ANR	383949	Identifier	NULL		383858	1					
ANR	383950	CompoundStatement		19:56:419:419	383858	1					
ANR	383951	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	25690:2:814913:815003	383858	0	True				
ANR	383952	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		383858	0					
ANR	383953	Callee	zend_throw_error		383858	0					
ANR	383954	Identifier	zend_throw_error		383858	0					
ANR	383955	ArgumentList	NULL		383858	1					
ANR	383956	Argument	NULL		383858	0					
ANR	383957	Identifier	NULL		383858	0					
ANR	383958	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		383858	1					
ANR	383959	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		383858	0					
ANR	383960	ExpressionStatement	HANDLE_EXCEPTION ( )	25692:2:815008:815026	383858	1	True				
ANR	383961	CallExpression	HANDLE_EXCEPTION ( )		383858	0					
ANR	383962	Callee	HANDLE_EXCEPTION		383858	0					
ANR	383963	Identifier	HANDLE_EXCEPTION		383858	0					
ANR	383964	ArgumentList			383858	1					
ANR	383965	DoStatement	do		383858	8					
ANR	383966	CompoundStatement		25:4:546:546	383858	0					
ANR	383967	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		383858	0					
ANR	383968	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	25696:6:815044:815110	383858	0	True				
ANR	383969	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		383858	0		&&			
ANR	383970	EqualityExpression	IS_UNUSED != IS_UNUSED		383858	0		!=			
ANR	383971	Identifier	IS_UNUSED		383858	0					
ANR	383972	Identifier	IS_UNUSED		383858	1					
ANR	383973	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		383858	1					
ANR	383974	Callee	UNEXPECTED		383858	0					
ANR	383975	Identifier	UNEXPECTED		383858	0					
ANR	383976	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		383858	1					
ANR	383977	Argument	Z_TYPE_P ( object ) != IS_OBJECT		383858	0					
ANR	383978	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		383858	0		!=			
ANR	383979	CallExpression	Z_TYPE_P ( object )		383858	0					
ANR	383980	Callee	Z_TYPE_P		383858	0					
ANR	383981	Identifier	Z_TYPE_P		383858	0					
ANR	383982	ArgumentList	object		383858	1					
ANR	383983	Argument	object		383858	0					
ANR	383984	Identifier	object		383858	0					
ANR	383985	Identifier	IS_OBJECT		383858	1					
ANR	383986	CompoundStatement		26:75:623:623	383858	1					
ANR	383987	ExpressionStatement	ZVAL_DEREF ( object )	25697:3:815118:815136	383858	0	True				
ANR	383988	CallExpression	ZVAL_DEREF ( object )		383858	0					
ANR	383989	Callee	ZVAL_DEREF		383858	0					
ANR	383990	Identifier	ZVAL_DEREF		383858	0					
ANR	383991	ArgumentList	object		383858	1					
ANR	383992	Argument	object		383858	0					
ANR	383993	Identifier	object		383858	0					
ANR	383994	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		383858	1					
ANR	383995	Condition	UNEXPECTED ( ! make_real_object ( object ) )	25698:7:815145:815181	383858	0	True				
ANR	383996	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		383858	0					
ANR	383997	Callee	UNEXPECTED		383858	0					
ANR	383998	Identifier	UNEXPECTED		383858	0					
ANR	383999	ArgumentList	! make_real_object ( object )		383858	1					
ANR	384000	Argument	! make_real_object ( object )		383858	0					
ANR	384001	UnaryOperationExpression	! make_real_object ( object )		383858	0					
ANR	384002	UnaryOperator	!		383858	0					
ANR	384003	CallExpression	make_real_object ( object )		383858	1					
ANR	384004	Callee	make_real_object		383858	0					
ANR	384005	Identifier	make_real_object		383858	0					
ANR	384006	ArgumentList	object		383858	1					
ANR	384007	Argument	object		383858	0					
ANR	384008	Identifier	object		383858	0					
ANR	384009	CompoundStatement		28:46:694:694	383858	1					
ANR	384010	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	25699:4:815190:815268	383858	0	True				
ANR	384011	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		383858	0					
ANR	384012	Callee	zend_error		383858	0					
ANR	384013	Identifier	zend_error		383858	0					
ANR	384014	ArgumentList	E_WARNING		383858	1					
ANR	384015	Argument	E_WARNING		383858	0					
ANR	384016	Identifier	E_WARNING		383858	0					
ANR	384017	Argument	"""Attempt to increment/decrement property of non-object"""		383858	1					
ANR	384018	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		383858	0					
ANR	384019	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	25700:4:815274:815311	383858	1	True				
ANR	384020	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		383858	0					
ANR	384021	Callee	ZVAL_NULL		383858	0					
ANR	384022	Identifier	ZVAL_NULL		383858	0					
ANR	384023	ArgumentList	EX_VAR ( opline -> result . var )		383858	1					
ANR	384024	Argument	EX_VAR ( opline -> result . var )		383858	0					
ANR	384025	CallExpression	EX_VAR ( opline -> result . var )		383858	0					
ANR	384026	Callee	EX_VAR		383858	0					
ANR	384027	Identifier	EX_VAR		383858	0					
ANR	384028	ArgumentList	opline -> result . var		383858	1					
ANR	384029	Argument	opline -> result . var		383858	0					
ANR	384030	MemberAccess	opline -> result . var		383858	0					
ANR	384031	PtrMemberAccess	opline -> result		383858	0					
ANR	384032	Identifier	opline		383858	0					
ANR	384033	Identifier	result		383858	1					
ANR	384034	Identifier	var		383858	1					
ANR	384035	BreakStatement	break ;	25701:4:815317:815322	383858	2	True				
ANR	384036	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		383858	1					
ANR	384037	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	25707:6:815396:815617	383858	0	True				
ANR	384038	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		383858	0		&&			
ANR	384039	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		383858	0					
ANR	384040	Callee	EXPECTED		383858	0					
ANR	384041	Identifier	EXPECTED		383858	0					
ANR	384042	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383858	1					
ANR	384043	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383858	0					
ANR	384044	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383858	0					
ANR	384045	CallExpression	Z_OBJ_HT_P ( object )		383858	0					
ANR	384046	Callee	Z_OBJ_HT_P		383858	0					
ANR	384047	Identifier	Z_OBJ_HT_P		383858	0					
ANR	384048	ArgumentList	object		383858	1					
ANR	384049	Argument	object		383858	0					
ANR	384050	Identifier	object		383858	0					
ANR	384051	Identifier	get_property_ptr_ptr		383858	1					
ANR	384052	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		383858	1					
ANR	384053	Callee	EXPECTED		383858	0					
ANR	384054	Identifier	EXPECTED		383858	0					
ANR	384055	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		383858	1					
ANR	384056	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		383858	0					
ANR	384057	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		383858	0		!=			
ANR	384058	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		383858	0		=			
ANR	384059	Identifier	zptr		383858	0					
ANR	384060	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		383858	1					
ANR	384061	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383858	0					
ANR	384062	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383858	0					
ANR	384063	CallExpression	Z_OBJ_HT_P ( object )		383858	0					
ANR	384064	Callee	Z_OBJ_HT_P		383858	0					
ANR	384065	Identifier	Z_OBJ_HT_P		383858	0					
ANR	384066	ArgumentList	object		383858	1					
ANR	384067	Argument	object		383858	0					
ANR	384068	Identifier	object		383858	0					
ANR	384069	Identifier	get_property_ptr_ptr		383858	1					
ANR	384070	ArgumentList	object		383858	1					
ANR	384071	Argument	object		383858	0					
ANR	384072	Identifier	object		383858	0					
ANR	384073	Argument	property		383858	1					
ANR	384074	Identifier	property		383858	0					
ANR	384075	Argument	BP_VAR_RW		383858	2					
ANR	384076	Identifier	BP_VAR_RW		383858	0					
ANR	384077	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383858	3					
ANR	384078	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383858	0					
ANR	384079	Condition	IS_CV == IS_CONST		383858	0					
ANR	384080	EqualityExpression	IS_CV == IS_CONST		383858	0		==			
ANR	384081	Identifier	IS_CV		383858	0					
ANR	384082	Identifier	IS_CONST		383858	1					
ANR	384083	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		383858	1					
ANR	384084	Callee	CACHE_ADDR		383858	0					
ANR	384085	Identifier	CACHE_ADDR		383858	0					
ANR	384086	ArgumentList	Z_CACHE_SLOT_P ( property )		383858	1					
ANR	384087	Argument	Z_CACHE_SLOT_P ( property )		383858	0					
ANR	384088	CallExpression	Z_CACHE_SLOT_P ( property )		383858	0					
ANR	384089	Callee	Z_CACHE_SLOT_P		383858	0					
ANR	384090	Identifier	Z_CACHE_SLOT_P		383858	0					
ANR	384091	ArgumentList	property		383858	1					
ANR	384092	Argument	property		383858	0					
ANR	384093	Identifier	property		383858	0					
ANR	384094	Identifier	NULL		383858	2					
ANR	384095	Identifier	NULL		383858	1					
ANR	384096	CompoundStatement		38:173:1130:1130	383858	1					
ANR	384097	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		383858	0					
ANR	384098	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	25710:7:815630:815664	383858	0	True				
ANR	384099	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		383858	0					
ANR	384100	Callee	EXPECTED		383858	0					
ANR	384101	Identifier	EXPECTED		383858	0					
ANR	384102	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		383858	1					
ANR	384103	Argument	Z_TYPE_P ( zptr ) == IS_LONG		383858	0					
ANR	384104	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		383858	0		==			
ANR	384105	CallExpression	Z_TYPE_P ( zptr )		383858	0					
ANR	384106	Callee	Z_TYPE_P		383858	0					
ANR	384107	Identifier	Z_TYPE_P		383858	0					
ANR	384108	ArgumentList	zptr		383858	1					
ANR	384109	Argument	zptr		383858	0					
ANR	384110	Identifier	zptr		383858	0					
ANR	384111	Identifier	IS_LONG		383858	1					
ANR	384112	CompoundStatement		40:44:1177:1177	383858	1					
ANR	384113	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	25711:4:815673:815722	383858	0	True				
ANR	384114	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		383858	0					
ANR	384115	Callee	ZVAL_COPY_VALUE		383858	0					
ANR	384116	Identifier	ZVAL_COPY_VALUE		383858	0					
ANR	384117	ArgumentList	EX_VAR ( opline -> result . var )		383858	1					
ANR	384118	Argument	EX_VAR ( opline -> result . var )		383858	0					
ANR	384119	CallExpression	EX_VAR ( opline -> result . var )		383858	0					
ANR	384120	Callee	EX_VAR		383858	0					
ANR	384121	Identifier	EX_VAR		383858	0					
ANR	384122	ArgumentList	opline -> result . var		383858	1					
ANR	384123	Argument	opline -> result . var		383858	0					
ANR	384124	MemberAccess	opline -> result . var		383858	0					
ANR	384125	PtrMemberAccess	opline -> result		383858	0					
ANR	384126	Identifier	opline		383858	0					
ANR	384127	Identifier	result		383858	1					
ANR	384128	Identifier	var		383858	1					
ANR	384129	Argument	zptr		383858	1					
ANR	384130	Identifier	zptr		383858	0					
ANR	384131	IfStatement	if ( inc )		383858	1					
ANR	384132	Condition	inc	25712:8:815732:815734	383858	0	True				
ANR	384133	Identifier	inc		383858	0					
ANR	384134	CompoundStatement		42:13:1247:1247	383858	1					
ANR	384135	ExpressionStatement	fast_long_increment_function ( zptr )	25713:5:815744:815778	383858	0	True				
ANR	384136	CallExpression	fast_long_increment_function ( zptr )		383858	0					
ANR	384137	Callee	fast_long_increment_function		383858	0					
ANR	384138	Identifier	fast_long_increment_function		383858	0					
ANR	384139	ArgumentList	zptr		383858	1					
ANR	384140	Argument	zptr		383858	0					
ANR	384141	Identifier	zptr		383858	0					
ANR	384142	ElseStatement	else		383858	0					
ANR	384143	CompoundStatement		44:11:1301:1301	383858	0					
ANR	384144	ExpressionStatement	fast_long_decrement_function ( zptr )	25715:5:815798:815832	383858	0	True				
ANR	384145	CallExpression	fast_long_decrement_function ( zptr )		383858	0					
ANR	384146	Callee	fast_long_decrement_function		383858	0					
ANR	384147	Identifier	fast_long_decrement_function		383858	0					
ANR	384148	ArgumentList	zptr		383858	1					
ANR	384149	Argument	zptr		383858	0					
ANR	384150	Identifier	zptr		383858	0					
ANR	384151	ElseStatement	else		383858	0					
ANR	384152	CompoundStatement		47:10:1360:1360	383858	0					
ANR	384153	ExpressionStatement	ZVAL_DEREF ( zptr )	25718:4:815856:815872	383858	0	True				
ANR	384154	CallExpression	ZVAL_DEREF ( zptr )		383858	0					
ANR	384155	Callee	ZVAL_DEREF		383858	0					
ANR	384156	Identifier	ZVAL_DEREF		383858	0					
ANR	384157	ArgumentList	zptr		383858	1					
ANR	384158	Argument	zptr		383858	0					
ANR	384159	Identifier	zptr		383858	0					
ANR	384160	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	25719:4:815878:815927	383858	1	True				
ANR	384161	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		383858	0					
ANR	384162	Callee	ZVAL_COPY_VALUE		383858	0					
ANR	384163	Identifier	ZVAL_COPY_VALUE		383858	0					
ANR	384164	ArgumentList	EX_VAR ( opline -> result . var )		383858	1					
ANR	384165	Argument	EX_VAR ( opline -> result . var )		383858	0					
ANR	384166	CallExpression	EX_VAR ( opline -> result . var )		383858	0					
ANR	384167	Callee	EX_VAR		383858	0					
ANR	384168	Identifier	EX_VAR		383858	0					
ANR	384169	ArgumentList	opline -> result . var		383858	1					
ANR	384170	Argument	opline -> result . var		383858	0					
ANR	384171	MemberAccess	opline -> result . var		383858	0					
ANR	384172	PtrMemberAccess	opline -> result		383858	0					
ANR	384173	Identifier	opline		383858	0					
ANR	384174	Identifier	result		383858	1					
ANR	384175	Identifier	var		383858	1					
ANR	384176	Argument	zptr		383858	1					
ANR	384177	Identifier	zptr		383858	0					
ANR	384178	ExpressionStatement	zval_opt_copy_ctor ( zptr )	25720:4:815933:815957	383858	2	True				
ANR	384179	CallExpression	zval_opt_copy_ctor ( zptr )		383858	0					
ANR	384180	Callee	zval_opt_copy_ctor		383858	0					
ANR	384181	Identifier	zval_opt_copy_ctor		383858	0					
ANR	384182	ArgumentList	zptr		383858	1					
ANR	384183	Argument	zptr		383858	0					
ANR	384184	Identifier	zptr		383858	0					
ANR	384185	IfStatement	if ( inc )		383858	3					
ANR	384186	Condition	inc	25721:8:815967:815969	383858	0	True				
ANR	384187	Identifier	inc		383858	0					
ANR	384188	CompoundStatement		51:13:1482:1482	383858	1					
ANR	384189	ExpressionStatement	increment_function ( zptr )	25722:5:815979:816003	383858	0	True				
ANR	384190	CallExpression	increment_function ( zptr )		383858	0					
ANR	384191	Callee	increment_function		383858	0					
ANR	384192	Identifier	increment_function		383858	0					
ANR	384193	ArgumentList	zptr		383858	1					
ANR	384194	Argument	zptr		383858	0					
ANR	384195	Identifier	zptr		383858	0					
ANR	384196	ElseStatement	else		383858	0					
ANR	384197	CompoundStatement		53:11:1526:1526	383858	0					
ANR	384198	ExpressionStatement	decrement_function ( zptr )	25724:5:816023:816047	383858	0	True				
ANR	384199	CallExpression	decrement_function ( zptr )		383858	0					
ANR	384200	Callee	decrement_function		383858	0					
ANR	384201	Identifier	decrement_function		383858	0					
ANR	384202	ArgumentList	zptr		383858	1					
ANR	384203	Argument	zptr		383858	0					
ANR	384204	Identifier	zptr		383858	0					
ANR	384205	ElseStatement	else		383858	0					
ANR	384206	CompoundStatement		57:9:1579:1579	383858	0					
ANR	384207	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	25728:3:816074:816230	383858	0	True				
ANR	384208	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		383858	0					
ANR	384209	Callee	zend_post_incdec_overloaded_property		383858	0					
ANR	384210	Identifier	zend_post_incdec_overloaded_property		383858	0					
ANR	384211	ArgumentList	object		383858	1					
ANR	384212	Argument	object		383858	0					
ANR	384213	Identifier	object		383858	0					
ANR	384214	Argument	property		383858	1					
ANR	384215	Identifier	property		383858	0					
ANR	384216	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383858	2					
ANR	384217	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		383858	0					
ANR	384218	Condition	IS_CV == IS_CONST		383858	0					
ANR	384219	EqualityExpression	IS_CV == IS_CONST		383858	0		==			
ANR	384220	Identifier	IS_CV		383858	0					
ANR	384221	Identifier	IS_CONST		383858	1					
ANR	384222	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		383858	1					
ANR	384223	Callee	CACHE_ADDR		383858	0					
ANR	384224	Identifier	CACHE_ADDR		383858	0					
ANR	384225	ArgumentList	Z_CACHE_SLOT_P ( property )		383858	1					
ANR	384226	Argument	Z_CACHE_SLOT_P ( property )		383858	0					
ANR	384227	CallExpression	Z_CACHE_SLOT_P ( property )		383858	0					
ANR	384228	Callee	Z_CACHE_SLOT_P		383858	0					
ANR	384229	Identifier	Z_CACHE_SLOT_P		383858	0					
ANR	384230	ArgumentList	property		383858	1					
ANR	384231	Argument	property		383858	0					
ANR	384232	Identifier	property		383858	0					
ANR	384233	Identifier	NULL		383858	2					
ANR	384234	Argument	inc		383858	3					
ANR	384235	Identifier	inc		383858	0					
ANR	384236	Argument	EX_VAR ( opline -> result . var )		383858	4					
ANR	384237	CallExpression	EX_VAR ( opline -> result . var )		383858	0					
ANR	384238	Callee	EX_VAR		383858	0					
ANR	384239	Identifier	EX_VAR		383858	0					
ANR	384240	ArgumentList	opline -> result . var		383858	1					
ANR	384241	Argument	opline -> result . var		383858	0					
ANR	384242	MemberAccess	opline -> result . var		383858	0					
ANR	384243	PtrMemberAccess	opline -> result		383858	0					
ANR	384244	Identifier	opline		383858	0					
ANR	384245	Identifier	result		383858	1					
ANR	384246	Identifier	var		383858	1					
ANR	384247	Condition	0	25730:10:816246:816246	383858	1	True				
ANR	384248	PrimaryExpression	0		383858	0					
ANR	384249	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	25733:1:816253:816290	383858	9	True				
ANR	384250	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		383858	0					
ANR	384251	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		383858	0					
ANR	384252	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		383858	0					
ANR	384253	ArgumentList			383858	1					
ANR	384254	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		383858	1					
ANR	384255	Identifier	zend_post_incdec_property_helper_SPEC_UNUSED_CV		383858	2					
ANR	384256	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		383858	3					
ANR	384257	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	25670:93:814452:814486	383858	0	True				
ANR	384258	ParameterType	int inc		383858	0					
ANR	384259	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		383858	1					
ANR	384260	CFGEntryNode	ENTRY		383858		True				
ANR	384261	CFGExitNode	EXIT		383858		True				
ANR	384262	Symbol	opline -> op2		383858						
ANR	384263	Symbol	opline -> op2 . var		383858						
ANR	384264	Symbol	IS_CV		383858						
ANR	384265	Symbol	Z_OBJ_P		383858						
ANR	384266	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		383858						
ANR	384267	Symbol	zptr		383858						
ANR	384268	Symbol	execute_data		383858						
ANR	384269	Symbol	opline -> result		383858						
ANR	384270	Symbol	_get_obj_zval_ptr_unused		383858						
ANR	384271	Symbol	UNEXPECTED		383858						
ANR	384272	Symbol	E_WARNING		383858						
ANR	384273	Symbol	make_real_object		383858						
ANR	384274	Symbol	opline		383858						
ANR	384275	Symbol	IS_LONG		383858						
ANR	384276	Symbol	property		383858						
ANR	384277	Symbol	inc		383858						
ANR	384278	Symbol	BP_VAR_RW		383858						
ANR	384279	Symbol	IS_CONST		383858						
ANR	384280	Symbol	NULL		383858						
ANR	384281	Symbol	Z_CACHE_SLOT_P		383858						
ANR	384282	Symbol	_get_zval_ptr_cv_BP_VAR_R		383858						
ANR	384283	Symbol	Z_TYPE_P		383858						
ANR	384284	Symbol	* Z_OBJ_HT_P		383858						
ANR	384285	Symbol	CACHE_ADDR		383858						
ANR	384286	Symbol	* opline		383858						
ANR	384287	Symbol	Z_OBJ_HT_P		383858						
ANR	384288	Symbol	EX_VAR		383858						
ANR	384289	Symbol	IS_OBJECT		383858						
ANR	384290	Symbol	IS_VAR		383858						
ANR	384291	Symbol	EXPECTED		383858						
ANR	384292	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		383858						
ANR	384293	Symbol	opline -> result . var		383858						
ANR	384294	Symbol	object		383858						
ANR	384295	Symbol	IS_UNUSED		383858						
ANR	384296	DeclStmt									
ANR	384297	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	384298	DeclStmt									
ANR	384299	Decl							zval	zval *	offset
ANR	384300	DeclStmt									
ANR	384301	Decl							zend_object	zend_object *	zobj
ANR	384302	DeclStmt									
ANR	384303	Decl							zval	zval *	retval
ANR	384304	DeclStmt									
ANR	384305	Decl							uint32_t	uint32_t	prop_offset
ANR	384306	DeclStmt									
ANR	384307	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	384308	DeclStmt									
ANR	384309	Decl							zval	zval *	property
ANR	384310	DeclStmt									
ANR	384311	Decl							zval	zval *	container
ANR	384312	DeclStmt									
ANR	384313	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	384314	DeclStmt									
ANR	384315	Decl							zval	zval *	property
ANR	384316	DeclStmt									
ANR	384317	Decl							zval	zval *	container
ANR	384318	DeclStmt									
ANR	384319	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	384320	DeclStmt									
ANR	384321	Decl							zval	zval *	offset
ANR	384322	DeclStmt									
ANR	384323	Decl							zend_object	zend_object *	zobj
ANR	384324	DeclStmt									
ANR	384325	Decl							zval	zval *	retval
ANR	384326	DeclStmt									
ANR	384327	Decl							uint32_t	uint32_t	prop_offset
ANR	384328	DeclStmt									
ANR	384329	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	384330	DeclStmt									
ANR	384331	Decl							zend_free_op	zend_free_op	free_op1
ANR	384332	DeclStmt									
ANR	384333	Decl							zval	zval *	property
ANR	384334	DeclStmt									
ANR	384335	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	384336	DeclStmt									
ANR	384337	Decl							zval	zval *	container
ANR	384338	Decl							zval	zval *	property
ANR	384339	DeclStmt									
ANR	384340	Decl							USE_OPLINE zval	USE_OPLINE zval *	object
ANR	384341	DeclStmt									
ANR	384342	Decl							zval	zval *	property_name
ANR	384343	DeclStmt									
ANR	384344	Decl							USE_OPLINE zend_string	USE_OPLINE zend_string * *	rope
ANR	384345	DeclStmt									
ANR	384346	Decl							zval	zval *	var
ANR	384347	DeclStmt									
ANR	384348	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	384349	DeclStmt									
ANR	384350	Decl							zval	zval *	object
ANR	384351	DeclStmt									
ANR	384352	Decl							zend_function	zend_function *	fbc
ANR	384353	DeclStmt									
ANR	384354	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	384355	DeclStmt									
ANR	384356	Decl							zend_object	zend_object *	obj
ANR	384357	DeclStmt									
ANR	384358	Decl							zend_execute_data	zend_execute_data *	call
ANR	384359	DeclStmt									
ANR	384360	Decl							uint32_t	uint32_t	call_info
ANR	384361	DeclStmt									
ANR	384362	Decl							zend_object	zend_object *	orig_obj
ANR	384363	DeclStmt									
ANR	384364	Decl							zval	zval *	array
ANR	384365	DeclStmt									
ANR	384366	Decl							uint32_t	uint32_t	size
ANR	384367	DeclStmt									
ANR	384368	Decl							USE_OPLINE	USE_OPLINE	array
ANR	384369	DeclStmt									
ANR	384370	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	384371	DeclStmt									
ANR	384372	Decl							zval	zval *	offset
ANR	384373	DeclStmt									
ANR	384374	Decl							zend_ulong	zend_ulong	hval
ANR	384375	DeclStmt									
ANR	384376	Decl							zend_string	zend_string *	key
ANR	384377	DeclStmt									
ANR	384378	Decl							HashTable	HashTable *	ht
ANR	384379	DeclStmt									
ANR	384380	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	384381	DeclStmt									
ANR	384382	Decl							zval	zval *	offset
ANR	384383	DeclStmt									
ANR	384384	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	384385	DeclStmt									
ANR	384386	Decl							int	int	result
ANR	384387	DeclStmt									
ANR	384388	Decl							zend_ulong	zend_ulong	hval
ANR	384389	DeclStmt									
ANR	384390	Decl							zval	zval *	offset
ANR	384391	DeclStmt									
ANR	384392	Decl							HashTable	HashTable *	ht
ANR	384393	DeclStmt									
ANR	384394	Decl							zval	zval *	value
ANR	384395	DeclStmt									
ANR	384396	Decl							zend_string	zend_string *	str
ANR	384397	DeclStmt									
ANR	384398	Decl							zend_long	zend_long	lval
ANR	384399	DeclStmt									
ANR	384400	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	384401	DeclStmt									
ANR	384402	Decl							int	int	result
ANR	384403	DeclStmt									
ANR	384404	Decl							zval	zval *	offset
ANR	384405	DeclStmt									
ANR	384406	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	384407	DeclStmt									
ANR	384408	Decl							zval	zval *	value
ANR	384409	DeclStmt									
ANR	384410	Decl							zval	zval *	value_ptr
ANR	384411	DeclStmt									
ANR	384412	Decl							zval	zval *	value
ANR	384413	DeclStmt									
ANR	384414	Decl							zval	zval *	key
ANR	384415	Function	zend_binary_assign_op_obj_helper_SPEC_UNUSED_TMPVAR	26702:0:845375:847620							
ANR	384416	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_UNUSED_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		384415	0					
ANR	384417	CompoundStatement		26703:0:845526:847620	384415	0					
ANR	384418	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op2 , free_op_data1 ;"	26704:1:845529:845577	384415	0	True				
ANR	384419	IdentifierDecl	free_op2		384415	0					
ANR	384420	IdentifierDeclType	USE_OPLINE zend_free_op		384415	0					
ANR	384421	Identifier	free_op2		384415	1					
ANR	384422	IdentifierDecl	free_op_data1		384415	1					
ANR	384423	IdentifierDeclType	USE_OPLINE zend_free_op		384415	0					
ANR	384424	Identifier	free_op_data1		384415	1					
ANR	384425	IdentifierDeclStatement	zval * object ;	26706:1:845580:845592	384415	1	True				
ANR	384426	IdentifierDecl	* object		384415	0					
ANR	384427	IdentifierDeclType	zval *		384415	0					
ANR	384428	Identifier	object		384415	1					
ANR	384429	IdentifierDeclStatement	zval * property ;	26707:1:845595:845609	384415	2	True				
ANR	384430	IdentifierDecl	* property		384415	0					
ANR	384431	IdentifierDeclType	zval *		384415	0					
ANR	384432	Identifier	property		384415	1					
ANR	384433	IdentifierDeclStatement	zval * value ;	26708:1:845612:845623	384415	3	True				
ANR	384434	IdentifierDecl	* value		384415	0					
ANR	384435	IdentifierDeclType	zval *		384415	0					
ANR	384436	Identifier	value		384415	1					
ANR	384437	IdentifierDeclStatement	zval * zptr ;	26709:1:845626:845636	384415	4	True				
ANR	384438	IdentifierDecl	* zptr		384415	0					
ANR	384439	IdentifierDeclType	zval *		384415	0					
ANR	384440	Identifier	zptr		384415	1					
ANR	384441	ExpressionStatement	SAVE_OPLINE ( )	26711:1:845640:845653	384415	5	True				
ANR	384442	CallExpression	SAVE_OPLINE ( )		384415	0					
ANR	384443	Callee	SAVE_OPLINE		384415	0					
ANR	384444	Identifier	SAVE_OPLINE		384415	0					
ANR	384445	ArgumentList			384415	1					
ANR	384446	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	26712:1:845656:845703	384415	6	True				
ANR	384447	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		384415	0		=			
ANR	384448	Identifier	object		384415	0					
ANR	384449	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		384415	1					
ANR	384450	Callee	_get_obj_zval_ptr_unused		384415	0					
ANR	384451	Identifier	_get_obj_zval_ptr_unused		384415	0					
ANR	384452	ArgumentList	execute_data		384415	1					
ANR	384453	Argument	execute_data		384415	0					
ANR	384454	Identifier	execute_data		384415	0					
ANR	384455	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		384415	7					
ANR	384456	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	26714:5:845711:845771	384415	0	True				
ANR	384457	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		384415	0		&&			
ANR	384458	EqualityExpression	IS_UNUSED == IS_UNUSED		384415	0		==			
ANR	384459	Identifier	IS_UNUSED		384415	0					
ANR	384460	Identifier	IS_UNUSED		384415	1					
ANR	384461	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		384415	1					
ANR	384462	Callee	UNEXPECTED		384415	0					
ANR	384463	Identifier	UNEXPECTED		384415	0					
ANR	384464	ArgumentList	Z_OBJ_P ( object ) == NULL		384415	1					
ANR	384465	Argument	Z_OBJ_P ( object ) == NULL		384415	0					
ANR	384466	EqualityExpression	Z_OBJ_P ( object ) == NULL		384415	0		==			
ANR	384467	CallExpression	Z_OBJ_P ( object )		384415	0					
ANR	384468	Callee	Z_OBJ_P		384415	0					
ANR	384469	Identifier	Z_OBJ_P		384415	0					
ANR	384470	ArgumentList	object		384415	1					
ANR	384471	Argument	object		384415	0					
ANR	384472	Identifier	object		384415	0					
ANR	384473	Identifier	NULL		384415	1					
ANR	384474	CompoundStatement		12:68:247:247	384415	1					
ANR	384475	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	26715:2:845778:845842	384415	0	True				
ANR	384476	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		384415	0					
ANR	384477	Callee	zend_throw_error		384415	0					
ANR	384478	Identifier	zend_throw_error		384415	0					
ANR	384479	ArgumentList	NULL		384415	1					
ANR	384480	Argument	NULL		384415	0					
ANR	384481	Identifier	NULL		384415	0					
ANR	384482	Argument	"""Using $this when not in object context"""		384415	1					
ANR	384483	PrimaryExpression	"""Using $this when not in object context"""		384415	0					
ANR	384484	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	26716:2:845846:845906	384415	1	True				
ANR	384485	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		384415	0					
ANR	384486	Callee	FREE_UNFETCHED_OP		384415	0					
ANR	384487	Identifier	FREE_UNFETCHED_OP		384415	0					
ANR	384488	ArgumentList	( opline + 1 ) -> op1_type		384415	1					
ANR	384489	Argument	( opline + 1 ) -> op1_type		384415	0					
ANR	384490	PtrMemberAccess	( opline + 1 ) -> op1_type		384415	0					
ANR	384491	AdditiveExpression	opline + 1		384415	0		+			
ANR	384492	Identifier	opline		384415	0					
ANR	384493	PrimaryExpression	1		384415	1					
ANR	384494	Identifier	op1_type		384415	1					
ANR	384495	Argument	( opline + 1 ) -> op1 . var		384415	1					
ANR	384496	MemberAccess	( opline + 1 ) -> op1 . var		384415	0					
ANR	384497	PtrMemberAccess	( opline + 1 ) -> op1		384415	0					
ANR	384498	AdditiveExpression	opline + 1		384415	0		+			
ANR	384499	Identifier	opline		384415	0					
ANR	384500	PrimaryExpression	1		384415	1					
ANR	384501	Identifier	op1		384415	1					
ANR	384502	Identifier	var		384415	1					
ANR	384503	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	26717:2:845910:845953	384415	2	True				
ANR	384504	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		384415	0					
ANR	384505	Callee	zval_ptr_dtor_nogc		384415	0					
ANR	384506	Identifier	zval_ptr_dtor_nogc		384415	0					
ANR	384507	ArgumentList	EX_VAR ( opline -> op2 . var )		384415	1					
ANR	384508	Argument	EX_VAR ( opline -> op2 . var )		384415	0					
ANR	384509	CallExpression	EX_VAR ( opline -> op2 . var )		384415	0					
ANR	384510	Callee	EX_VAR		384415	0					
ANR	384511	Identifier	EX_VAR		384415	0					
ANR	384512	ArgumentList	opline -> op2 . var		384415	1					
ANR	384513	Argument	opline -> op2 . var		384415	0					
ANR	384514	MemberAccess	opline -> op2 . var		384415	0					
ANR	384515	PtrMemberAccess	opline -> op2		384415	0					
ANR	384516	Identifier	opline		384415	0					
ANR	384517	Identifier	op2		384415	1					
ANR	384518	Identifier	var		384415	1					
ANR	384519	ExpressionStatement	HANDLE_EXCEPTION ( )	26718:2:845957:845975	384415	3	True				
ANR	384520	CallExpression	HANDLE_EXCEPTION ( )		384415	0					
ANR	384521	Callee	HANDLE_EXCEPTION		384415	0					
ANR	384522	Identifier	HANDLE_EXCEPTION		384415	0					
ANR	384523	ArgumentList			384415	1					
ANR	384524	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	26721:1:845982:846052	384415	8	True				
ANR	384525	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		384415	0		=			
ANR	384526	Identifier	property		384415	0					
ANR	384527	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		384415	1					
ANR	384528	Callee	_get_zval_ptr_var		384415	0					
ANR	384529	Identifier	_get_zval_ptr_var		384415	0					
ANR	384530	ArgumentList	opline -> op2 . var		384415	1					
ANR	384531	Argument	opline -> op2 . var		384415	0					
ANR	384532	MemberAccess	opline -> op2 . var		384415	0					
ANR	384533	PtrMemberAccess	opline -> op2		384415	0					
ANR	384534	Identifier	opline		384415	0					
ANR	384535	Identifier	op2		384415	1					
ANR	384536	Identifier	var		384415	1					
ANR	384537	Argument	execute_data		384415	1					
ANR	384538	Identifier	execute_data		384415	0					
ANR	384539	Argument	& free_op2		384415	2					
ANR	384540	UnaryOperationExpression	& free_op2		384415	0					
ANR	384541	UnaryOperator	&		384415	0					
ANR	384542	Identifier	free_op2		384415	1					
ANR	384543	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		384415	9					
ANR	384544	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	26723:5:846060:846108	384415	0	True				
ANR	384545	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		384415	0		&&			
ANR	384546	EqualityExpression	IS_UNUSED == IS_VAR		384415	0		==			
ANR	384547	Identifier	IS_UNUSED		384415	0					
ANR	384548	Identifier	IS_VAR		384415	1					
ANR	384549	CallExpression	UNEXPECTED ( object == NULL )		384415	1					
ANR	384550	Callee	UNEXPECTED		384415	0					
ANR	384551	Identifier	UNEXPECTED		384415	0					
ANR	384552	ArgumentList	object == NULL		384415	1					
ANR	384553	Argument	object == NULL		384415	0					
ANR	384554	EqualityExpression	object == NULL		384415	0		==			
ANR	384555	Identifier	object		384415	0					
ANR	384556	Identifier	NULL		384415	1					
ANR	384557	CompoundStatement		21:56:584:584	384415	1					
ANR	384558	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	26724:2:846115:846178	384415	0	True				
ANR	384559	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		384415	0					
ANR	384560	Callee	zend_throw_error		384415	0					
ANR	384561	Identifier	zend_throw_error		384415	0					
ANR	384562	ArgumentList	NULL		384415	1					
ANR	384563	Argument	NULL		384415	0					
ANR	384564	Identifier	NULL		384415	0					
ANR	384565	Argument	"""Cannot use string offset as an object"""		384415	1					
ANR	384566	PrimaryExpression	"""Cannot use string offset as an object"""		384415	0					
ANR	384567	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	26725:2:846182:846242	384415	1	True				
ANR	384568	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		384415	0					
ANR	384569	Callee	FREE_UNFETCHED_OP		384415	0					
ANR	384570	Identifier	FREE_UNFETCHED_OP		384415	0					
ANR	384571	ArgumentList	( opline + 1 ) -> op1_type		384415	1					
ANR	384572	Argument	( opline + 1 ) -> op1_type		384415	0					
ANR	384573	PtrMemberAccess	( opline + 1 ) -> op1_type		384415	0					
ANR	384574	AdditiveExpression	opline + 1		384415	0		+			
ANR	384575	Identifier	opline		384415	0					
ANR	384576	PrimaryExpression	1		384415	1					
ANR	384577	Identifier	op1_type		384415	1					
ANR	384578	Argument	( opline + 1 ) -> op1 . var		384415	1					
ANR	384579	MemberAccess	( opline + 1 ) -> op1 . var		384415	0					
ANR	384580	PtrMemberAccess	( opline + 1 ) -> op1		384415	0					
ANR	384581	AdditiveExpression	opline + 1		384415	0		+			
ANR	384582	Identifier	opline		384415	0					
ANR	384583	PrimaryExpression	1		384415	1					
ANR	384584	Identifier	op1		384415	1					
ANR	384585	Identifier	var		384415	1					
ANR	384586	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	26726:2:846246:846274	384415	2	True				
ANR	384587	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		384415	0					
ANR	384588	Callee	zval_ptr_dtor_nogc		384415	0					
ANR	384589	Identifier	zval_ptr_dtor_nogc		384415	0					
ANR	384590	ArgumentList	free_op2		384415	1					
ANR	384591	Argument	free_op2		384415	0					
ANR	384592	Identifier	free_op2		384415	0					
ANR	384593	ExpressionStatement	HANDLE_EXCEPTION ( )	26727:2:846278:846296	384415	3	True				
ANR	384594	CallExpression	HANDLE_EXCEPTION ( )		384415	0					
ANR	384595	Callee	HANDLE_EXCEPTION		384415	0					
ANR	384596	Identifier	HANDLE_EXCEPTION		384415	0					
ANR	384597	ArgumentList			384415	1					
ANR	384598	DoStatement	do		384415	10					
ANR	384599	CompoundStatement		28:4:779:779	384415	0					
ANR	384600	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	26731:2:846310:846401	384415	0	True				
ANR	384601	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		384415	0		=			
ANR	384602	Identifier	value		384415	0					
ANR	384603	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		384415	1					
ANR	384604	Callee	get_zval_ptr_r		384415	0					
ANR	384605	Identifier	get_zval_ptr_r		384415	0					
ANR	384606	ArgumentList	( opline + 1 ) -> op1_type		384415	1					
ANR	384607	Argument	( opline + 1 ) -> op1_type		384415	0					
ANR	384608	PtrMemberAccess	( opline + 1 ) -> op1_type		384415	0					
ANR	384609	AdditiveExpression	opline + 1		384415	0		+			
ANR	384610	Identifier	opline		384415	0					
ANR	384611	PrimaryExpression	1		384415	1					
ANR	384612	Identifier	op1_type		384415	1					
ANR	384613	Argument	( opline + 1 ) -> op1		384415	1					
ANR	384614	PtrMemberAccess	( opline + 1 ) -> op1		384415	0					
ANR	384615	AdditiveExpression	opline + 1		384415	0		+			
ANR	384616	Identifier	opline		384415	0					
ANR	384617	PrimaryExpression	1		384415	1					
ANR	384618	Identifier	op1		384415	1					
ANR	384619	Argument	execute_data		384415	2					
ANR	384620	Identifier	execute_data		384415	0					
ANR	384621	Argument	& free_op_data1		384415	3					
ANR	384622	UnaryOperationExpression	& free_op_data1		384415	0					
ANR	384623	UnaryOperator	&		384415	0					
ANR	384624	Identifier	free_op_data1		384415	1					
ANR	384625	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		384415	1					
ANR	384626	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	26733:6:846410:846476	384415	0	True				
ANR	384627	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		384415	0		&&			
ANR	384628	EqualityExpression	IS_UNUSED != IS_UNUSED		384415	0		!=			
ANR	384629	Identifier	IS_UNUSED		384415	0					
ANR	384630	Identifier	IS_UNUSED		384415	1					
ANR	384631	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		384415	1					
ANR	384632	Callee	UNEXPECTED		384415	0					
ANR	384633	Identifier	UNEXPECTED		384415	0					
ANR	384634	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		384415	1					
ANR	384635	Argument	Z_TYPE_P ( object ) != IS_OBJECT		384415	0					
ANR	384636	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		384415	0		!=			
ANR	384637	CallExpression	Z_TYPE_P ( object )		384415	0					
ANR	384638	Callee	Z_TYPE_P		384415	0					
ANR	384639	Identifier	Z_TYPE_P		384415	0					
ANR	384640	ArgumentList	object		384415	1					
ANR	384641	Argument	object		384415	0					
ANR	384642	Identifier	object		384415	0					
ANR	384643	Identifier	IS_OBJECT		384415	1					
ANR	384644	CompoundStatement		31:75:952:952	384415	1					
ANR	384645	ExpressionStatement	ZVAL_DEREF ( object )	26734:3:846484:846502	384415	0	True				
ANR	384646	CallExpression	ZVAL_DEREF ( object )		384415	0					
ANR	384647	Callee	ZVAL_DEREF		384415	0					
ANR	384648	Identifier	ZVAL_DEREF		384415	0					
ANR	384649	ArgumentList	object		384415	1					
ANR	384650	Argument	object		384415	0					
ANR	384651	Identifier	object		384415	0					
ANR	384652	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		384415	1					
ANR	384653	Condition	UNEXPECTED ( ! make_real_object ( object ) )	26735:7:846511:846547	384415	0	True				
ANR	384654	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		384415	0					
ANR	384655	Callee	UNEXPECTED		384415	0					
ANR	384656	Identifier	UNEXPECTED		384415	0					
ANR	384657	ArgumentList	! make_real_object ( object )		384415	1					
ANR	384658	Argument	! make_real_object ( object )		384415	0					
ANR	384659	UnaryOperationExpression	! make_real_object ( object )		384415	0					
ANR	384660	UnaryOperator	!		384415	0					
ANR	384661	CallExpression	make_real_object ( object )		384415	1					
ANR	384662	Callee	make_real_object		384415	0					
ANR	384663	Identifier	make_real_object		384415	0					
ANR	384664	ArgumentList	object		384415	1					
ANR	384665	Argument	object		384415	0					
ANR	384666	Identifier	object		384415	0					
ANR	384667	CompoundStatement		33:46:1023:1023	384415	1					
ANR	384668	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	26736:4:846556:846621	384415	0	True				
ANR	384669	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		384415	0					
ANR	384670	Callee	zend_error		384415	0					
ANR	384671	Identifier	zend_error		384415	0					
ANR	384672	ArgumentList	E_WARNING		384415	1					
ANR	384673	Argument	E_WARNING		384415	0					
ANR	384674	Identifier	E_WARNING		384415	0					
ANR	384675	Argument	"""Attempt to assign property of non-object"""		384415	1					
ANR	384676	PrimaryExpression	"""Attempt to assign property of non-object"""		384415	0					
ANR	384677	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		384415	1					
ANR	384678	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	26737:8:846631:846667	384415	0	True				
ANR	384679	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384415	0					
ANR	384680	Callee	UNEXPECTED		384415	0					
ANR	384681	Identifier	UNEXPECTED		384415	0					
ANR	384682	ArgumentList	RETURN_VALUE_USED ( opline )		384415	1					
ANR	384683	Argument	RETURN_VALUE_USED ( opline )		384415	0					
ANR	384684	CallExpression	RETURN_VALUE_USED ( opline )		384415	0					
ANR	384685	Callee	RETURN_VALUE_USED		384415	0					
ANR	384686	Identifier	RETURN_VALUE_USED		384415	0					
ANR	384687	ArgumentList	opline		384415	1					
ANR	384688	Argument	opline		384415	0					
ANR	384689	Identifier	opline		384415	0					
ANR	384690	CompoundStatement		35:47:1143:1143	384415	1					
ANR	384691	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	26738:5:846677:846714	384415	0	True				
ANR	384692	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		384415	0					
ANR	384693	Callee	ZVAL_NULL		384415	0					
ANR	384694	Identifier	ZVAL_NULL		384415	0					
ANR	384695	ArgumentList	EX_VAR ( opline -> result . var )		384415	1					
ANR	384696	Argument	EX_VAR ( opline -> result . var )		384415	0					
ANR	384697	CallExpression	EX_VAR ( opline -> result . var )		384415	0					
ANR	384698	Callee	EX_VAR		384415	0					
ANR	384699	Identifier	EX_VAR		384415	0					
ANR	384700	ArgumentList	opline -> result . var		384415	1					
ANR	384701	Argument	opline -> result . var		384415	0					
ANR	384702	MemberAccess	opline -> result . var		384415	0					
ANR	384703	PtrMemberAccess	opline -> result		384415	0					
ANR	384704	Identifier	opline		384415	0					
ANR	384705	Identifier	result		384415	1					
ANR	384706	Identifier	var		384415	1					
ANR	384707	BreakStatement	break ;	26740:4:846726:846731	384415	2	True				
ANR	384708	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		384415	2					
ANR	384709	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	26745:6:846804:847039	384415	0	True				
ANR	384710	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		384415	0		&&			
ANR	384711	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		384415	0					
ANR	384712	Callee	EXPECTED		384415	0					
ANR	384713	Identifier	EXPECTED		384415	0					
ANR	384714	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		384415	1					
ANR	384715	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		384415	0					
ANR	384716	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		384415	0					
ANR	384717	CallExpression	Z_OBJ_HT_P ( object )		384415	0					
ANR	384718	Callee	Z_OBJ_HT_P		384415	0					
ANR	384719	Identifier	Z_OBJ_HT_P		384415	0					
ANR	384720	ArgumentList	object		384415	1					
ANR	384721	Argument	object		384415	0					
ANR	384722	Identifier	object		384415	0					
ANR	384723	Identifier	get_property_ptr_ptr		384415	1					
ANR	384724	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		384415	1					
ANR	384725	Callee	EXPECTED		384415	0					
ANR	384726	Identifier	EXPECTED		384415	0					
ANR	384727	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		384415	1					
ANR	384728	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		384415	0					
ANR	384729	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		384415	0		!=			
ANR	384730	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		384415	0		=			
ANR	384731	Identifier	zptr		384415	0					
ANR	384732	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		384415	1					
ANR	384733	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		384415	0					
ANR	384734	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		384415	0					
ANR	384735	CallExpression	Z_OBJ_HT_P ( object )		384415	0					
ANR	384736	Callee	Z_OBJ_HT_P		384415	0					
ANR	384737	Identifier	Z_OBJ_HT_P		384415	0					
ANR	384738	ArgumentList	object		384415	1					
ANR	384739	Argument	object		384415	0					
ANR	384740	Identifier	object		384415	0					
ANR	384741	Identifier	get_property_ptr_ptr		384415	1					
ANR	384742	ArgumentList	object		384415	1					
ANR	384743	Argument	object		384415	0					
ANR	384744	Identifier	object		384415	0					
ANR	384745	Argument	property		384415	1					
ANR	384746	Identifier	property		384415	0					
ANR	384747	Argument	BP_VAR_RW		384415	2					
ANR	384748	Identifier	BP_VAR_RW		384415	0					
ANR	384749	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		384415	3					
ANR	384750	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		384415	0					
ANR	384751	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		384415	0					
ANR	384752	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		384415	0		==			
ANR	384753	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		384415	0		|			
ANR	384754	Identifier	IS_TMP_VAR		384415	0					
ANR	384755	Identifier	IS_VAR		384415	1					
ANR	384756	Identifier	IS_CONST		384415	1					
ANR	384757	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		384415	1					
ANR	384758	Callee	CACHE_ADDR		384415	0					
ANR	384759	Identifier	CACHE_ADDR		384415	0					
ANR	384760	ArgumentList	Z_CACHE_SLOT_P ( property )		384415	1					
ANR	384761	Argument	Z_CACHE_SLOT_P ( property )		384415	0					
ANR	384762	CallExpression	Z_CACHE_SLOT_P ( property )		384415	0					
ANR	384763	Callee	Z_CACHE_SLOT_P		384415	0					
ANR	384764	Identifier	Z_CACHE_SLOT_P		384415	0					
ANR	384765	ArgumentList	property		384415	1					
ANR	384766	Argument	property		384415	0					
ANR	384767	Identifier	property		384415	0					
ANR	384768	Identifier	NULL		384415	2					
ANR	384769	Identifier	NULL		384415	1					
ANR	384770	CompoundStatement		44:187:1515:1515	384415	1					
ANR	384771	ExpressionStatement	ZVAL_DEREF ( zptr )	26748:3:847048:847064	384415	0	True				
ANR	384772	CallExpression	ZVAL_DEREF ( zptr )		384415	0					
ANR	384773	Callee	ZVAL_DEREF		384415	0					
ANR	384774	Identifier	ZVAL_DEREF		384415	0					
ANR	384775	ArgumentList	zptr		384415	1					
ANR	384776	Argument	zptr		384415	0					
ANR	384777	Identifier	zptr		384415	0					
ANR	384778	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	26749:3:847069:847094	384415	1	True				
ANR	384779	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		384415	0					
ANR	384780	Callee	SEPARATE_ZVAL_NOREF		384415	0					
ANR	384781	Identifier	SEPARATE_ZVAL_NOREF		384415	0					
ANR	384782	ArgumentList	zptr		384415	1					
ANR	384783	Argument	zptr		384415	0					
ANR	384784	Identifier	zptr		384415	0					
ANR	384785	ExpressionStatement	"binary_op ( zptr , zptr , value )"	26751:3:847100:847128	384415	2	True				
ANR	384786	CallExpression	"binary_op ( zptr , zptr , value )"		384415	0					
ANR	384787	Callee	binary_op		384415	0					
ANR	384788	Identifier	binary_op		384415	0					
ANR	384789	ArgumentList	zptr		384415	1					
ANR	384790	Argument	zptr		384415	0					
ANR	384791	Identifier	zptr		384415	0					
ANR	384792	Argument	zptr		384415	1					
ANR	384793	Identifier	zptr		384415	0					
ANR	384794	Argument	value		384415	2					
ANR	384795	Identifier	value		384415	0					
ANR	384796	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		384415	3					
ANR	384797	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	26752:7:847137:847173	384415	0	True				
ANR	384798	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384415	0					
ANR	384799	Callee	UNEXPECTED		384415	0					
ANR	384800	Identifier	UNEXPECTED		384415	0					
ANR	384801	ArgumentList	RETURN_VALUE_USED ( opline )		384415	1					
ANR	384802	Argument	RETURN_VALUE_USED ( opline )		384415	0					
ANR	384803	CallExpression	RETURN_VALUE_USED ( opline )		384415	0					
ANR	384804	Callee	RETURN_VALUE_USED		384415	0					
ANR	384805	Identifier	RETURN_VALUE_USED		384415	0					
ANR	384806	ArgumentList	opline		384415	1					
ANR	384807	Argument	opline		384415	0					
ANR	384808	Identifier	opline		384415	0					
ANR	384809	CompoundStatement		50:46:1649:1649	384415	1					
ANR	384810	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	26753:4:847182:847225	384415	0	True				
ANR	384811	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		384415	0					
ANR	384812	Callee	ZVAL_COPY		384415	0					
ANR	384813	Identifier	ZVAL_COPY		384415	0					
ANR	384814	ArgumentList	EX_VAR ( opline -> result . var )		384415	1					
ANR	384815	Argument	EX_VAR ( opline -> result . var )		384415	0					
ANR	384816	CallExpression	EX_VAR ( opline -> result . var )		384415	0					
ANR	384817	Callee	EX_VAR		384415	0					
ANR	384818	Identifier	EX_VAR		384415	0					
ANR	384819	ArgumentList	opline -> result . var		384415	1					
ANR	384820	Argument	opline -> result . var		384415	0					
ANR	384821	MemberAccess	opline -> result . var		384415	0					
ANR	384822	PtrMemberAccess	opline -> result		384415	0					
ANR	384823	Identifier	opline		384415	0					
ANR	384824	Identifier	result		384415	1					
ANR	384825	Identifier	var		384415	1					
ANR	384826	Argument	zptr		384415	1					
ANR	384827	Identifier	zptr		384415	0					
ANR	384828	ElseStatement	else		384415	0					
ANR	384829	CompoundStatement		53:9:1714:1714	384415	0					
ANR	384830	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	26756:3:847246:847476	384415	0	True				
ANR	384831	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		384415	0					
ANR	384832	Callee	zend_assign_op_overloaded_property		384415	0					
ANR	384833	Identifier	zend_assign_op_overloaded_property		384415	0					
ANR	384834	ArgumentList	object		384415	1					
ANR	384835	Argument	object		384415	0					
ANR	384836	Identifier	object		384415	0					
ANR	384837	Argument	property		384415	1					
ANR	384838	Identifier	property		384415	0					
ANR	384839	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		384415	2					
ANR	384840	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		384415	0					
ANR	384841	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		384415	0					
ANR	384842	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		384415	0		==			
ANR	384843	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		384415	0		|			
ANR	384844	Identifier	IS_TMP_VAR		384415	0					
ANR	384845	Identifier	IS_VAR		384415	1					
ANR	384846	Identifier	IS_CONST		384415	1					
ANR	384847	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		384415	1					
ANR	384848	Callee	CACHE_ADDR		384415	0					
ANR	384849	Identifier	CACHE_ADDR		384415	0					
ANR	384850	ArgumentList	Z_CACHE_SLOT_P ( property )		384415	1					
ANR	384851	Argument	Z_CACHE_SLOT_P ( property )		384415	0					
ANR	384852	CallExpression	Z_CACHE_SLOT_P ( property )		384415	0					
ANR	384853	Callee	Z_CACHE_SLOT_P		384415	0					
ANR	384854	Identifier	Z_CACHE_SLOT_P		384415	0					
ANR	384855	ArgumentList	property		384415	1					
ANR	384856	Argument	property		384415	0					
ANR	384857	Identifier	property		384415	0					
ANR	384858	Identifier	NULL		384415	2					
ANR	384859	Argument	value		384415	3					
ANR	384860	Identifier	value		384415	0					
ANR	384861	Argument	binary_op		384415	4					
ANR	384862	Identifier	binary_op		384415	0					
ANR	384863	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		384415	5					
ANR	384864	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		384415	0					
ANR	384865	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384415	0					
ANR	384866	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384415	0					
ANR	384867	Callee	UNEXPECTED		384415	0					
ANR	384868	Identifier	UNEXPECTED		384415	0					
ANR	384869	ArgumentList	RETURN_VALUE_USED ( opline )		384415	1					
ANR	384870	Argument	RETURN_VALUE_USED ( opline )		384415	0					
ANR	384871	CallExpression	RETURN_VALUE_USED ( opline )		384415	0					
ANR	384872	Callee	RETURN_VALUE_USED		384415	0					
ANR	384873	Identifier	RETURN_VALUE_USED		384415	0					
ANR	384874	ArgumentList	opline		384415	1					
ANR	384875	Argument	opline		384415	0					
ANR	384876	Identifier	opline		384415	0					
ANR	384877	CallExpression	EX_VAR ( opline -> result . var )		384415	1					
ANR	384878	Callee	EX_VAR		384415	0					
ANR	384879	Identifier	EX_VAR		384415	0					
ANR	384880	ArgumentList	opline -> result . var		384415	1					
ANR	384881	Argument	opline -> result . var		384415	0					
ANR	384882	MemberAccess	opline -> result . var		384415	0					
ANR	384883	PtrMemberAccess	opline -> result		384415	0					
ANR	384884	Identifier	opline		384415	0					
ANR	384885	Identifier	result		384415	1					
ANR	384886	Identifier	var		384415	1					
ANR	384887	Identifier	NULL		384415	2					
ANR	384888	Condition	0	26758:10:847492:847492	384415	1	True				
ANR	384889	PrimaryExpression	0		384415	0					
ANR	384890	ExpressionStatement	FREE_OP ( free_op_data1 )	26760:1:847498:847520	384415	11	True				
ANR	384891	CallExpression	FREE_OP ( free_op_data1 )		384415	0					
ANR	384892	Callee	FREE_OP		384415	0					
ANR	384893	Identifier	FREE_OP		384415	0					
ANR	384894	ArgumentList	free_op_data1		384415	1					
ANR	384895	Argument	free_op_data1		384415	0					
ANR	384896	Identifier	free_op_data1		384415	0					
ANR	384897	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	26761:1:847523:847551	384415	12	True				
ANR	384898	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		384415	0					
ANR	384899	Callee	zval_ptr_dtor_nogc		384415	0					
ANR	384900	Identifier	zval_ptr_dtor_nogc		384415	0					
ANR	384901	ArgumentList	free_op2		384415	1					
ANR	384902	Argument	free_op2		384415	0					
ANR	384903	Identifier	free_op2		384415	0					
ANR	384904	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	26764:1:847590:847618	384415	13	True				
ANR	384905	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		384415	0					
ANR	384906	Callee	ZEND_VM_NEXT_OPCODE_EX		384415	0					
ANR	384907	Identifier	ZEND_VM_NEXT_OPCODE_EX		384415	0					
ANR	384908	ArgumentList	1		384415	1					
ANR	384909	Argument	1		384415	0					
ANR	384910	PrimaryExpression	1		384415	0					
ANR	384911	Argument	2		384415	1					
ANR	384912	PrimaryExpression	2		384415	0					
ANR	384913	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		384415	1					
ANR	384914	Identifier	zend_binary_assign_op_obj_helper_SPEC_UNUSED_TMPVAR		384415	2					
ANR	384915	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		384415	3					
ANR	384916	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	26702:97:845472:845523	384415	0	True				
ANR	384917	ParameterType	binary_op_type binary_op		384415	0					
ANR	384918	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		384415	1					
ANR	384919	CFGEntryNode	ENTRY		384415		True				
ANR	384920	CFGExitNode	EXIT		384415		True				
ANR	384921	Symbol	opline -> op2		384415						
ANR	384922	Symbol	opline -> op2 . var		384415						
ANR	384923	Symbol	Z_OBJ_P		384415						
ANR	384924	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		384415						
ANR	384925	Symbol	free_op_data1		384415						
ANR	384926	Symbol	free_op2		384415						
ANR	384927	Symbol	zptr		384415						
ANR	384928	Symbol	execute_data		384415						
ANR	384929	Symbol	opline -> result		384415						
ANR	384930	Symbol	_get_obj_zval_ptr_unused		384415						
ANR	384931	Symbol	( opline + 1 ) -> op1		384415						
ANR	384932	Symbol	UNEXPECTED		384415						
ANR	384933	Symbol	& free_op2		384415						
ANR	384934	Symbol	E_WARNING		384415						
ANR	384935	Symbol	make_real_object		384415						
ANR	384936	Symbol	RETURN_VALUE_USED		384415						
ANR	384937	Symbol	( opline + 1 ) -> op1 . var		384415						
ANR	384938	Symbol	opline		384415						
ANR	384939	Symbol	get_zval_ptr_r		384415						
ANR	384940	Symbol	property		384415						
ANR	384941	Symbol	value		384415						
ANR	384942	Symbol	IS_TMP_VAR		384415						
ANR	384943	Symbol	binary_op		384415						
ANR	384944	Symbol	BP_VAR_RW		384415						
ANR	384945	Symbol	( opline + 1 ) -> op1_type		384415						
ANR	384946	Symbol	IS_CONST		384415						
ANR	384947	Symbol	NULL		384415						
ANR	384948	Symbol	Z_CACHE_SLOT_P		384415						
ANR	384949	Symbol	Z_TYPE_P		384415						
ANR	384950	Symbol	* Z_OBJ_HT_P		384415						
ANR	384951	Symbol	CACHE_ADDR		384415						
ANR	384952	Symbol	* opline		384415						
ANR	384953	Symbol	_get_zval_ptr_var		384415						
ANR	384954	Symbol	Z_OBJ_HT_P		384415						
ANR	384955	Symbol	EX_VAR		384415						
ANR	384956	Symbol	IS_OBJECT		384415						
ANR	384957	Symbol	IS_VAR		384415						
ANR	384958	Symbol	EXPECTED		384415						
ANR	384959	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		384415						
ANR	384960	Symbol	& free_op_data1		384415						
ANR	384961	Symbol	opline -> result . var		384415						
ANR	384962	Symbol	object		384415						
ANR	384963	Symbol	IS_UNUSED		384415						
ANR	384964	Function	zend_binary_assign_op_dim_helper_SPEC_UNUSED_TMPVAR	26767:0:847623:849988							
ANR	384965	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_UNUSED_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		384964	0					
ANR	384966	CompoundStatement		26768:0:847774:849988	384964	0					
ANR	384967	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op2 , free_op_data1 ;"	26769:1:847777:847825	384964	0	True				
ANR	384968	IdentifierDecl	free_op2		384964	0					
ANR	384969	IdentifierDeclType	USE_OPLINE zend_free_op		384964	0					
ANR	384970	Identifier	free_op2		384964	1					
ANR	384971	IdentifierDecl	free_op_data1		384964	1					
ANR	384972	IdentifierDeclType	USE_OPLINE zend_free_op		384964	0					
ANR	384973	Identifier	free_op_data1		384964	1					
ANR	384974	IdentifierDeclStatement	"zval * var_ptr , rv ;"	26771:1:847828:847845	384964	1	True				
ANR	384975	IdentifierDecl	* var_ptr		384964	0					
ANR	384976	IdentifierDeclType	zval *		384964	0					
ANR	384977	Identifier	var_ptr		384964	1					
ANR	384978	IdentifierDecl	rv		384964	1					
ANR	384979	IdentifierDeclType	zval		384964	0					
ANR	384980	Identifier	rv		384964	1					
ANR	384981	IdentifierDeclStatement	"zval * value , * container , * dim ;"	26772:1:847848:847877	384964	2	True				
ANR	384982	IdentifierDecl	* value		384964	0					
ANR	384983	IdentifierDeclType	zval *		384964	0					
ANR	384984	Identifier	value		384964	1					
ANR	384985	IdentifierDecl	* container		384964	1					
ANR	384986	IdentifierDeclType	zval *		384964	0					
ANR	384987	Identifier	container		384964	1					
ANR	384988	IdentifierDecl	* dim		384964	2					
ANR	384989	IdentifierDeclType	zval *		384964	0					
ANR	384990	Identifier	dim		384964	1					
ANR	384991	ExpressionStatement	SAVE_OPLINE ( )	26774:1:847881:847894	384964	3	True				
ANR	384992	CallExpression	SAVE_OPLINE ( )		384964	0					
ANR	384993	Callee	SAVE_OPLINE		384964	0					
ANR	384994	Identifier	SAVE_OPLINE		384964	0					
ANR	384995	ArgumentList			384964	1					
ANR	384996	ExpressionStatement	container = _get_obj_zval_ptr_unused ( execute_data )	26775:1:847897:847947	384964	4	True				
ANR	384997	AssignmentExpression	container = _get_obj_zval_ptr_unused ( execute_data )		384964	0		=			
ANR	384998	Identifier	container		384964	0					
ANR	384999	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		384964	1					
ANR	385000	Callee	_get_obj_zval_ptr_unused		384964	0					
ANR	385001	Identifier	_get_obj_zval_ptr_unused		384964	0					
ANR	385002	ArgumentList	execute_data		384964	1					
ANR	385003	Argument	execute_data		384964	0					
ANR	385004	Identifier	execute_data		384964	0					
ANR	385005	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		384964	5					
ANR	385006	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	26776:5:847954:848017	384964	0	True				
ANR	385007	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		384964	0		&&			
ANR	385008	EqualityExpression	IS_UNUSED == IS_UNUSED		384964	0		==			
ANR	385009	Identifier	IS_UNUSED		384964	0					
ANR	385010	Identifier	IS_UNUSED		384964	1					
ANR	385011	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		384964	1					
ANR	385012	Callee	UNEXPECTED		384964	0					
ANR	385013	Identifier	UNEXPECTED		384964	0					
ANR	385014	ArgumentList	Z_OBJ_P ( container ) == NULL		384964	1					
ANR	385015	Argument	Z_OBJ_P ( container ) == NULL		384964	0					
ANR	385016	EqualityExpression	Z_OBJ_P ( container ) == NULL		384964	0		==			
ANR	385017	CallExpression	Z_OBJ_P ( container )		384964	0					
ANR	385018	Callee	Z_OBJ_P		384964	0					
ANR	385019	Identifier	Z_OBJ_P		384964	0					
ANR	385020	ArgumentList	container		384964	1					
ANR	385021	Argument	container		384964	0					
ANR	385022	Identifier	container		384964	0					
ANR	385023	Identifier	NULL		384964	1					
ANR	385024	CompoundStatement		9:71:245:245	384964	1					
ANR	385025	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	26777:2:848024:848088	384964	0	True				
ANR	385026	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		384964	0					
ANR	385027	Callee	zend_throw_error		384964	0					
ANR	385028	Identifier	zend_throw_error		384964	0					
ANR	385029	ArgumentList	NULL		384964	1					
ANR	385030	Argument	NULL		384964	0					
ANR	385031	Identifier	NULL		384964	0					
ANR	385032	Argument	"""Using $this when not in object context"""		384964	1					
ANR	385033	PrimaryExpression	"""Using $this when not in object context"""		384964	0					
ANR	385034	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	26778:2:848092:848152	384964	1	True				
ANR	385035	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		384964	0					
ANR	385036	Callee	FREE_UNFETCHED_OP		384964	0					
ANR	385037	Identifier	FREE_UNFETCHED_OP		384964	0					
ANR	385038	ArgumentList	( opline + 1 ) -> op1_type		384964	1					
ANR	385039	Argument	( opline + 1 ) -> op1_type		384964	0					
ANR	385040	PtrMemberAccess	( opline + 1 ) -> op1_type		384964	0					
ANR	385041	AdditiveExpression	opline + 1		384964	0		+			
ANR	385042	Identifier	opline		384964	0					
ANR	385043	PrimaryExpression	1		384964	1					
ANR	385044	Identifier	op1_type		384964	1					
ANR	385045	Argument	( opline + 1 ) -> op1 . var		384964	1					
ANR	385046	MemberAccess	( opline + 1 ) -> op1 . var		384964	0					
ANR	385047	PtrMemberAccess	( opline + 1 ) -> op1		384964	0					
ANR	385048	AdditiveExpression	opline + 1		384964	0		+			
ANR	385049	Identifier	opline		384964	0					
ANR	385050	PrimaryExpression	1		384964	1					
ANR	385051	Identifier	op1		384964	1					
ANR	385052	Identifier	var		384964	1					
ANR	385053	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	26779:2:848156:848199	384964	2	True				
ANR	385054	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		384964	0					
ANR	385055	Callee	zval_ptr_dtor_nogc		384964	0					
ANR	385056	Identifier	zval_ptr_dtor_nogc		384964	0					
ANR	385057	ArgumentList	EX_VAR ( opline -> op2 . var )		384964	1					
ANR	385058	Argument	EX_VAR ( opline -> op2 . var )		384964	0					
ANR	385059	CallExpression	EX_VAR ( opline -> op2 . var )		384964	0					
ANR	385060	Callee	EX_VAR		384964	0					
ANR	385061	Identifier	EX_VAR		384964	0					
ANR	385062	ArgumentList	opline -> op2 . var		384964	1					
ANR	385063	Argument	opline -> op2 . var		384964	0					
ANR	385064	MemberAccess	opline -> op2 . var		384964	0					
ANR	385065	PtrMemberAccess	opline -> op2		384964	0					
ANR	385066	Identifier	opline		384964	0					
ANR	385067	Identifier	op2		384964	1					
ANR	385068	Identifier	var		384964	1					
ANR	385069	ExpressionStatement	HANDLE_EXCEPTION ( )	26780:2:848203:848221	384964	3	True				
ANR	385070	CallExpression	HANDLE_EXCEPTION ( )		384964	0					
ANR	385071	Callee	HANDLE_EXCEPTION		384964	0					
ANR	385072	Identifier	HANDLE_EXCEPTION		384964	0					
ANR	385073	ArgumentList			384964	1					
ANR	385074	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL ) )		384964	6					
ANR	385075	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )	26782:5:848231:848282	384964	0	True				
ANR	385076	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( container == NULL )		384964	0		&&			
ANR	385077	EqualityExpression	IS_UNUSED == IS_VAR		384964	0		==			
ANR	385078	Identifier	IS_UNUSED		384964	0					
ANR	385079	Identifier	IS_VAR		384964	1					
ANR	385080	CallExpression	UNEXPECTED ( container == NULL )		384964	1					
ANR	385081	Callee	UNEXPECTED		384964	0					
ANR	385082	Identifier	UNEXPECTED		384964	0					
ANR	385083	ArgumentList	container == NULL		384964	1					
ANR	385084	Argument	container == NULL		384964	0					
ANR	385085	EqualityExpression	container == NULL		384964	0		==			
ANR	385086	Identifier	container		384964	0					
ANR	385087	Identifier	NULL		384964	1					
ANR	385088	CompoundStatement		15:59:510:510	384964	1					
ANR	385089	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	26783:2:848289:848351	384964	0	True				
ANR	385090	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		384964	0					
ANR	385091	Callee	zend_throw_error		384964	0					
ANR	385092	Identifier	zend_throw_error		384964	0					
ANR	385093	ArgumentList	NULL		384964	1					
ANR	385094	Argument	NULL		384964	0					
ANR	385095	Identifier	NULL		384964	0					
ANR	385096	Argument	"""Cannot use string offset as an array"""		384964	1					
ANR	385097	PrimaryExpression	"""Cannot use string offset as an array"""		384964	0					
ANR	385098	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	26784:2:848355:848415	384964	1	True				
ANR	385099	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		384964	0					
ANR	385100	Callee	FREE_UNFETCHED_OP		384964	0					
ANR	385101	Identifier	FREE_UNFETCHED_OP		384964	0					
ANR	385102	ArgumentList	( opline + 1 ) -> op1_type		384964	1					
ANR	385103	Argument	( opline + 1 ) -> op1_type		384964	0					
ANR	385104	PtrMemberAccess	( opline + 1 ) -> op1_type		384964	0					
ANR	385105	AdditiveExpression	opline + 1		384964	0		+			
ANR	385106	Identifier	opline		384964	0					
ANR	385107	PrimaryExpression	1		384964	1					
ANR	385108	Identifier	op1_type		384964	1					
ANR	385109	Argument	( opline + 1 ) -> op1 . var		384964	1					
ANR	385110	MemberAccess	( opline + 1 ) -> op1 . var		384964	0					
ANR	385111	PtrMemberAccess	( opline + 1 ) -> op1		384964	0					
ANR	385112	AdditiveExpression	opline + 1		384964	0		+			
ANR	385113	Identifier	opline		384964	0					
ANR	385114	PrimaryExpression	1		384964	1					
ANR	385115	Identifier	op1		384964	1					
ANR	385116	Identifier	var		384964	1					
ANR	385117	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	26785:2:848419:848462	384964	2	True				
ANR	385118	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		384964	0					
ANR	385119	Callee	zval_ptr_dtor_nogc		384964	0					
ANR	385120	Identifier	zval_ptr_dtor_nogc		384964	0					
ANR	385121	ArgumentList	EX_VAR ( opline -> op2 . var )		384964	1					
ANR	385122	Argument	EX_VAR ( opline -> op2 . var )		384964	0					
ANR	385123	CallExpression	EX_VAR ( opline -> op2 . var )		384964	0					
ANR	385124	Callee	EX_VAR		384964	0					
ANR	385125	Identifier	EX_VAR		384964	0					
ANR	385126	ArgumentList	opline -> op2 . var		384964	1					
ANR	385127	Argument	opline -> op2 . var		384964	0					
ANR	385128	MemberAccess	opline -> op2 . var		384964	0					
ANR	385129	PtrMemberAccess	opline -> op2		384964	0					
ANR	385130	Identifier	opline		384964	0					
ANR	385131	Identifier	op2		384964	1					
ANR	385132	Identifier	var		384964	1					
ANR	385133	ExpressionStatement	HANDLE_EXCEPTION ( )	26786:2:848466:848484	384964	3	True				
ANR	385134	CallExpression	HANDLE_EXCEPTION ( )		384964	0					
ANR	385135	Callee	HANDLE_EXCEPTION		384964	0					
ANR	385136	Identifier	HANDLE_EXCEPTION		384964	0					
ANR	385137	ArgumentList			384964	1					
ANR	385138	ExpressionStatement	"dim = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	26789:1:848491:848556	384964	7	True				
ANR	385139	AssignmentExpression	"dim = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		384964	0		=			
ANR	385140	Identifier	dim		384964	0					
ANR	385141	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		384964	1					
ANR	385142	Callee	_get_zval_ptr_var		384964	0					
ANR	385143	Identifier	_get_zval_ptr_var		384964	0					
ANR	385144	ArgumentList	opline -> op2 . var		384964	1					
ANR	385145	Argument	opline -> op2 . var		384964	0					
ANR	385146	MemberAccess	opline -> op2 . var		384964	0					
ANR	385147	PtrMemberAccess	opline -> op2		384964	0					
ANR	385148	Identifier	opline		384964	0					
ANR	385149	Identifier	op2		384964	1					
ANR	385150	Identifier	var		384964	1					
ANR	385151	Argument	execute_data		384964	1					
ANR	385152	Identifier	execute_data		384964	0					
ANR	385153	Argument	& free_op2		384964	2					
ANR	385154	UnaryOperationExpression	& free_op2		384964	0					
ANR	385155	UnaryOperator	&		384964	0					
ANR	385156	Identifier	free_op2		384964	1					
ANR	385157	DoStatement	do		384964	8					
ANR	385158	CompoundStatement		24:4:788:788	384964	0					
ANR	385159	IfStatement	if ( IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		384964	0					
ANR	385160	Condition	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	26792:6:848571:848639	384964	0	True				
ANR	385161	OrExpression	IS_UNUSED == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		384964	0		||			
ANR	385162	EqualityExpression	IS_UNUSED == IS_UNUSED		384964	0		==			
ANR	385163	Identifier	IS_UNUSED		384964	0					
ANR	385164	Identifier	IS_UNUSED		384964	1					
ANR	385165	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		384964	1					
ANR	385166	Callee	UNEXPECTED		384964	0					
ANR	385167	Identifier	UNEXPECTED		384964	0					
ANR	385168	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		384964	1					
ANR	385169	Argument	Z_TYPE_P ( container ) != IS_ARRAY		384964	0					
ANR	385170	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		384964	0		!=			
ANR	385171	CallExpression	Z_TYPE_P ( container )		384964	0					
ANR	385172	Callee	Z_TYPE_P		384964	0					
ANR	385173	Identifier	Z_TYPE_P		384964	0					
ANR	385174	ArgumentList	container		384964	1					
ANR	385175	Argument	container		384964	0					
ANR	385176	Identifier	container		384964	0					
ANR	385177	Identifier	IS_ARRAY		384964	1					
ANR	385178	CompoundStatement		25:77:867:867	384964	1					
ANR	385179	IfStatement	if ( IS_UNUSED != IS_UNUSED )		384964	0					
ANR	385180	Condition	IS_UNUSED != IS_UNUSED	26793:7:848651:848672	384964	0	True				
ANR	385181	EqualityExpression	IS_UNUSED != IS_UNUSED		384964	0		!=			
ANR	385182	Identifier	IS_UNUSED		384964	0					
ANR	385183	Identifier	IS_UNUSED		384964	1					
ANR	385184	CompoundStatement		26:31:900:900	384964	1					
ANR	385185	ExpressionStatement	ZVAL_DEREF ( container )	26794:4:848681:848702	384964	0	True				
ANR	385186	CallExpression	ZVAL_DEREF ( container )		384964	0					
ANR	385187	Callee	ZVAL_DEREF		384964	0					
ANR	385188	Identifier	ZVAL_DEREF		384964	0					
ANR	385189	ArgumentList	container		384964	1					
ANR	385190	Argument	container		384964	0					
ANR	385191	Identifier	container		384964	0					
ANR	385192	IfStatement	if ( IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		384964	1					
ANR	385193	Condition	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	26796:7:848716:848783	384964	0	True				
ANR	385194	OrExpression	IS_UNUSED == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		384964	0		||			
ANR	385195	EqualityExpression	IS_UNUSED == IS_UNUSED		384964	0		==			
ANR	385196	Identifier	IS_UNUSED		384964	0					
ANR	385197	Identifier	IS_UNUSED		384964	1					
ANR	385198	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		384964	1					
ANR	385199	Callee	EXPECTED		384964	0					
ANR	385200	Identifier	EXPECTED		384964	0					
ANR	385201	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		384964	1					
ANR	385202	Argument	Z_TYPE_P ( container ) == IS_OBJECT		384964	0					
ANR	385203	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		384964	0		==			
ANR	385204	CallExpression	Z_TYPE_P ( container )		384964	0					
ANR	385205	Callee	Z_TYPE_P		384964	0					
ANR	385206	Identifier	Z_TYPE_P		384964	0					
ANR	385207	ArgumentList	container		384964	1					
ANR	385208	Argument	container		384964	0					
ANR	385209	Identifier	container		384964	0					
ANR	385210	Identifier	IS_OBJECT		384964	1					
ANR	385211	CompoundStatement		29:77:1011:1011	384964	1					
ANR	385212	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	26797:4:848792:848883	384964	0	True				
ANR	385213	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		384964	0		=			
ANR	385214	Identifier	value		384964	0					
ANR	385215	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		384964	1					
ANR	385216	Callee	get_zval_ptr_r		384964	0					
ANR	385217	Identifier	get_zval_ptr_r		384964	0					
ANR	385218	ArgumentList	( opline + 1 ) -> op1_type		384964	1					
ANR	385219	Argument	( opline + 1 ) -> op1_type		384964	0					
ANR	385220	PtrMemberAccess	( opline + 1 ) -> op1_type		384964	0					
ANR	385221	AdditiveExpression	opline + 1		384964	0		+			
ANR	385222	Identifier	opline		384964	0					
ANR	385223	PrimaryExpression	1		384964	1					
ANR	385224	Identifier	op1_type		384964	1					
ANR	385225	Argument	( opline + 1 ) -> op1		384964	1					
ANR	385226	PtrMemberAccess	( opline + 1 ) -> op1		384964	0					
ANR	385227	AdditiveExpression	opline + 1		384964	0		+			
ANR	385228	Identifier	opline		384964	0					
ANR	385229	PrimaryExpression	1		384964	1					
ANR	385230	Identifier	op1		384964	1					
ANR	385231	Argument	execute_data		384964	2					
ANR	385232	Identifier	execute_data		384964	0					
ANR	385233	Argument	& free_op_data1		384964	3					
ANR	385234	UnaryOperationExpression	& free_op_data1		384964	0					
ANR	385235	UnaryOperator	&		384964	0					
ANR	385236	Identifier	free_op_data1		384964	1					
ANR	385237	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	26798:4:848889:849027	384964	1	True				
ANR	385238	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		384964	0					
ANR	385239	Callee	zend_binary_assign_op_obj_dim		384964	0					
ANR	385240	Identifier	zend_binary_assign_op_obj_dim		384964	0					
ANR	385241	ArgumentList	container		384964	1					
ANR	385242	Argument	container		384964	0					
ANR	385243	Identifier	container		384964	0					
ANR	385244	Argument	dim		384964	1					
ANR	385245	Identifier	dim		384964	0					
ANR	385246	Argument	value		384964	2					
ANR	385247	Identifier	value		384964	0					
ANR	385248	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		384964	3					
ANR	385249	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		384964	0					
ANR	385250	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384964	0					
ANR	385251	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384964	0					
ANR	385252	Callee	UNEXPECTED		384964	0					
ANR	385253	Identifier	UNEXPECTED		384964	0					
ANR	385254	ArgumentList	RETURN_VALUE_USED ( opline )		384964	1					
ANR	385255	Argument	RETURN_VALUE_USED ( opline )		384964	0					
ANR	385256	CallExpression	RETURN_VALUE_USED ( opline )		384964	0					
ANR	385257	Callee	RETURN_VALUE_USED		384964	0					
ANR	385258	Identifier	RETURN_VALUE_USED		384964	0					
ANR	385259	ArgumentList	opline		384964	1					
ANR	385260	Argument	opline		384964	0					
ANR	385261	Identifier	opline		384964	0					
ANR	385262	CallExpression	EX_VAR ( opline -> result . var )		384964	1					
ANR	385263	Callee	EX_VAR		384964	0					
ANR	385264	Identifier	EX_VAR		384964	0					
ANR	385265	ArgumentList	opline -> result . var		384964	1					
ANR	385266	Argument	opline -> result . var		384964	0					
ANR	385267	MemberAccess	opline -> result . var		384964	0					
ANR	385268	PtrMemberAccess	opline -> result		384964	0					
ANR	385269	Identifier	opline		384964	0					
ANR	385270	Identifier	result		384964	1					
ANR	385271	Identifier	var		384964	1					
ANR	385272	Identifier	NULL		384964	2					
ANR	385273	Argument	binary_op		384964	4					
ANR	385274	Identifier	binary_op		384964	0					
ANR	385275	BreakStatement	break ;	26799:4:849033:849038	384964	2	True				
ANR	385276	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , ( IS_TMP_VAR | IS_VAR ) )"	26803:2:849052:849125	384964	1	True				
ANR	385277	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , ( IS_TMP_VAR | IS_VAR ) )"		384964	0					
ANR	385278	Callee	zend_fetch_dimension_address_RW		384964	0					
ANR	385279	Identifier	zend_fetch_dimension_address_RW		384964	0					
ANR	385280	ArgumentList	& rv		384964	1					
ANR	385281	Argument	& rv		384964	0					
ANR	385282	UnaryOperationExpression	& rv		384964	0					
ANR	385283	UnaryOperator	&		384964	0					
ANR	385284	Identifier	rv		384964	1					
ANR	385285	Argument	container		384964	1					
ANR	385286	Identifier	container		384964	0					
ANR	385287	Argument	dim		384964	2					
ANR	385288	Identifier	dim		384964	0					
ANR	385289	Argument	IS_TMP_VAR | IS_VAR		384964	3					
ANR	385290	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		384964	0		|			
ANR	385291	Identifier	IS_TMP_VAR		384964	0					
ANR	385292	Identifier	IS_VAR		384964	1					
ANR	385293	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	26804:2:849129:849220	384964	2	True				
ANR	385294	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		384964	0		=			
ANR	385295	Identifier	value		384964	0					
ANR	385296	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		384964	1					
ANR	385297	Callee	get_zval_ptr_r		384964	0					
ANR	385298	Identifier	get_zval_ptr_r		384964	0					
ANR	385299	ArgumentList	( opline + 1 ) -> op1_type		384964	1					
ANR	385300	Argument	( opline + 1 ) -> op1_type		384964	0					
ANR	385301	PtrMemberAccess	( opline + 1 ) -> op1_type		384964	0					
ANR	385302	AdditiveExpression	opline + 1		384964	0		+			
ANR	385303	Identifier	opline		384964	0					
ANR	385304	PrimaryExpression	1		384964	1					
ANR	385305	Identifier	op1_type		384964	1					
ANR	385306	Argument	( opline + 1 ) -> op1		384964	1					
ANR	385307	PtrMemberAccess	( opline + 1 ) -> op1		384964	0					
ANR	385308	AdditiveExpression	opline + 1		384964	0		+			
ANR	385309	Identifier	opline		384964	0					
ANR	385310	PrimaryExpression	1		384964	1					
ANR	385311	Identifier	op1		384964	1					
ANR	385312	Argument	execute_data		384964	2					
ANR	385313	Identifier	execute_data		384964	0					
ANR	385314	Argument	& free_op_data1		384964	3					
ANR	385315	UnaryOperationExpression	& free_op_data1		384964	0					
ANR	385316	UnaryOperator	&		384964	0					
ANR	385317	Identifier	free_op_data1		384964	1					
ANR	385318	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	26805:2:849224:849262	384964	3	True				
ANR	385319	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		384964	0					
ANR	385320	Callee	ZEND_ASSERT		384964	0					
ANR	385321	Identifier	ZEND_ASSERT		384964	0					
ANR	385322	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		384964	1					
ANR	385323	Argument	Z_TYPE ( rv ) == IS_INDIRECT		384964	0					
ANR	385324	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		384964	0		==			
ANR	385325	CallExpression	Z_TYPE ( rv )		384964	0					
ANR	385326	Callee	Z_TYPE		384964	0					
ANR	385327	Identifier	Z_TYPE		384964	0					
ANR	385328	ArgumentList	rv		384964	1					
ANR	385329	Argument	rv		384964	0					
ANR	385330	Identifier	rv		384964	0					
ANR	385331	Identifier	IS_INDIRECT		384964	1					
ANR	385332	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	26806:2:849266:849290	384964	4	True				
ANR	385333	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		384964	0		=			
ANR	385334	Identifier	var_ptr		384964	0					
ANR	385335	CallExpression	Z_INDIRECT ( rv )		384964	1					
ANR	385336	Callee	Z_INDIRECT		384964	0					
ANR	385337	Identifier	Z_INDIRECT		384964	0					
ANR	385338	ArgumentList	rv		384964	1					
ANR	385339	Argument	rv		384964	0					
ANR	385340	Identifier	rv		384964	0					
ANR	385341	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		384964	5					
ANR	385342	Condition	UNEXPECTED ( var_ptr == NULL )	26808:6:849299:849325	384964	0	True				
ANR	385343	CallExpression	UNEXPECTED ( var_ptr == NULL )		384964	0					
ANR	385344	Callee	UNEXPECTED		384964	0					
ANR	385345	Identifier	UNEXPECTED		384964	0					
ANR	385346	ArgumentList	var_ptr == NULL		384964	1					
ANR	385347	Argument	var_ptr == NULL		384964	0					
ANR	385348	EqualityExpression	var_ptr == NULL		384964	0		==			
ANR	385349	Identifier	var_ptr		384964	0					
ANR	385350	Identifier	NULL		384964	1					
ANR	385351	CompoundStatement		41:35:1553:1553	384964	1					
ANR	385352	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	26809:3:849333:849432	384964	0	True				
ANR	385353	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		384964	0					
ANR	385354	Callee	zend_throw_error		384964	0					
ANR	385355	Identifier	zend_throw_error		384964	0					
ANR	385356	ArgumentList	NULL		384964	1					
ANR	385357	Argument	NULL		384964	0					
ANR	385358	Identifier	NULL		384964	0					
ANR	385359	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		384964	1					
ANR	385360	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		384964	0					
ANR	385361	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	26810:3:849437:849465	384964	1	True				
ANR	385362	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		384964	0					
ANR	385363	Callee	zval_ptr_dtor_nogc		384964	0					
ANR	385364	Identifier	zval_ptr_dtor_nogc		384964	0					
ANR	385365	ArgumentList	free_op2		384964	1					
ANR	385366	Argument	free_op2		384964	0					
ANR	385367	Identifier	free_op2		384964	0					
ANR	385368	ExpressionStatement	FREE_OP ( free_op_data1 )	26811:3:849470:849492	384964	2	True				
ANR	385369	CallExpression	FREE_OP ( free_op_data1 )		384964	0					
ANR	385370	Callee	FREE_OP		384964	0					
ANR	385371	Identifier	FREE_OP		384964	0					
ANR	385372	ArgumentList	free_op_data1		384964	1					
ANR	385373	Argument	free_op_data1		384964	0					
ANR	385374	Identifier	free_op_data1		384964	0					
ANR	385375	ExpressionStatement	HANDLE_EXCEPTION ( )	26813:3:849498:849516	384964	3	True				
ANR	385376	CallExpression	HANDLE_EXCEPTION ( )		384964	0					
ANR	385377	Callee	HANDLE_EXCEPTION		384964	0					
ANR	385378	Identifier	HANDLE_EXCEPTION		384964	0					
ANR	385379	ArgumentList			384964	1					
ANR	385380	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		384964	6					
ANR	385381	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	26816:6:849529:849566	384964	0	True				
ANR	385382	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		384964	0					
ANR	385383	Callee	UNEXPECTED		384964	0					
ANR	385384	Identifier	UNEXPECTED		384964	0					
ANR	385385	ArgumentList	var_ptr == & EG ( error_zval )		384964	1					
ANR	385386	Argument	var_ptr == & EG ( error_zval )		384964	0					
ANR	385387	EqualityExpression	var_ptr == & EG ( error_zval )		384964	0		==			
ANR	385388	Identifier	var_ptr		384964	0					
ANR	385389	UnaryOperationExpression	& EG ( error_zval )		384964	1					
ANR	385390	UnaryOperator	&		384964	0					
ANR	385391	CallExpression	EG ( error_zval )		384964	1					
ANR	385392	Callee	EG		384964	0					
ANR	385393	Identifier	EG		384964	0					
ANR	385394	ArgumentList	error_zval		384964	1					
ANR	385395	Argument	error_zval		384964	0					
ANR	385396	Identifier	error_zval		384964	0					
ANR	385397	CompoundStatement		49:46:1794:1794	384964	1					
ANR	385398	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		384964	0					
ANR	385399	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	26817:7:849578:849614	384964	0	True				
ANR	385400	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384964	0					
ANR	385401	Callee	UNEXPECTED		384964	0					
ANR	385402	Identifier	UNEXPECTED		384964	0					
ANR	385403	ArgumentList	RETURN_VALUE_USED ( opline )		384964	1					
ANR	385404	Argument	RETURN_VALUE_USED ( opline )		384964	0					
ANR	385405	CallExpression	RETURN_VALUE_USED ( opline )		384964	0					
ANR	385406	Callee	RETURN_VALUE_USED		384964	0					
ANR	385407	Identifier	RETURN_VALUE_USED		384964	0					
ANR	385408	ArgumentList	opline		384964	1					
ANR	385409	Argument	opline		384964	0					
ANR	385410	Identifier	opline		384964	0					
ANR	385411	CompoundStatement		50:46:1842:1842	384964	1					
ANR	385412	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	26818:4:849623:849660	384964	0	True				
ANR	385413	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		384964	0					
ANR	385414	Callee	ZVAL_NULL		384964	0					
ANR	385415	Identifier	ZVAL_NULL		384964	0					
ANR	385416	ArgumentList	EX_VAR ( opline -> result . var )		384964	1					
ANR	385417	Argument	EX_VAR ( opline -> result . var )		384964	0					
ANR	385418	CallExpression	EX_VAR ( opline -> result . var )		384964	0					
ANR	385419	Callee	EX_VAR		384964	0					
ANR	385420	Identifier	EX_VAR		384964	0					
ANR	385421	ArgumentList	opline -> result . var		384964	1					
ANR	385422	Argument	opline -> result . var		384964	0					
ANR	385423	MemberAccess	opline -> result . var		384964	0					
ANR	385424	PtrMemberAccess	opline -> result		384964	0					
ANR	385425	Identifier	opline		384964	0					
ANR	385426	Identifier	result		384964	1					
ANR	385427	Identifier	var		384964	1					
ANR	385428	ElseStatement	else		384964	0					
ANR	385429	CompoundStatement		53:9:1901:1901	384964	0					
ANR	385430	ExpressionStatement	ZVAL_DEREF ( var_ptr )	26821:3:849681:849700	384964	0	True				
ANR	385431	CallExpression	ZVAL_DEREF ( var_ptr )		384964	0					
ANR	385432	Callee	ZVAL_DEREF		384964	0					
ANR	385433	Identifier	ZVAL_DEREF		384964	0					
ANR	385434	ArgumentList	var_ptr		384964	1					
ANR	385435	Argument	var_ptr		384964	0					
ANR	385436	Identifier	var_ptr		384964	0					
ANR	385437	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	26822:3:849705:849733	384964	1	True				
ANR	385438	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		384964	0					
ANR	385439	Callee	SEPARATE_ZVAL_NOREF		384964	0					
ANR	385440	Identifier	SEPARATE_ZVAL_NOREF		384964	0					
ANR	385441	ArgumentList	var_ptr		384964	1					
ANR	385442	Argument	var_ptr		384964	0					
ANR	385443	Identifier	var_ptr		384964	0					
ANR	385444	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	26824:3:849739:849773	384964	2	True				
ANR	385445	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		384964	0					
ANR	385446	Callee	binary_op		384964	0					
ANR	385447	Identifier	binary_op		384964	0					
ANR	385448	ArgumentList	var_ptr		384964	1					
ANR	385449	Argument	var_ptr		384964	0					
ANR	385450	Identifier	var_ptr		384964	0					
ANR	385451	Argument	var_ptr		384964	1					
ANR	385452	Identifier	var_ptr		384964	0					
ANR	385453	Argument	value		384964	2					
ANR	385454	Identifier	value		384964	0					
ANR	385455	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		384964	3					
ANR	385456	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	26826:7:849783:849819	384964	0	True				
ANR	385457	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		384964	0					
ANR	385458	Callee	UNEXPECTED		384964	0					
ANR	385459	Identifier	UNEXPECTED		384964	0					
ANR	385460	ArgumentList	RETURN_VALUE_USED ( opline )		384964	1					
ANR	385461	Argument	RETURN_VALUE_USED ( opline )		384964	0					
ANR	385462	CallExpression	RETURN_VALUE_USED ( opline )		384964	0					
ANR	385463	Callee	RETURN_VALUE_USED		384964	0					
ANR	385464	Identifier	RETURN_VALUE_USED		384964	0					
ANR	385465	ArgumentList	opline		384964	1					
ANR	385466	Argument	opline		384964	0					
ANR	385467	Identifier	opline		384964	0					
ANR	385468	CompoundStatement		59:46:2047:2047	384964	1					
ANR	385469	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	26827:4:849828:849874	384964	0	True				
ANR	385470	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		384964	0					
ANR	385471	Callee	ZVAL_COPY		384964	0					
ANR	385472	Identifier	ZVAL_COPY		384964	0					
ANR	385473	ArgumentList	EX_VAR ( opline -> result . var )		384964	1					
ANR	385474	Argument	EX_VAR ( opline -> result . var )		384964	0					
ANR	385475	CallExpression	EX_VAR ( opline -> result . var )		384964	0					
ANR	385476	Callee	EX_VAR		384964	0					
ANR	385477	Identifier	EX_VAR		384964	0					
ANR	385478	ArgumentList	opline -> result . var		384964	1					
ANR	385479	Argument	opline -> result . var		384964	0					
ANR	385480	MemberAccess	opline -> result . var		384964	0					
ANR	385481	PtrMemberAccess	opline -> result		384964	0					
ANR	385482	Identifier	opline		384964	0					
ANR	385483	Identifier	result		384964	1					
ANR	385484	Identifier	var		384964	1					
ANR	385485	Argument	var_ptr		384964	1					
ANR	385486	Identifier	var_ptr		384964	0					
ANR	385487	Condition	0	26830:10:849895:849895	384964	1	True				
ANR	385488	PrimaryExpression	0		384964	0					
ANR	385489	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	26832:1:849901:849929	384964	9	True				
ANR	385490	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		384964	0					
ANR	385491	Callee	zval_ptr_dtor_nogc		384964	0					
ANR	385492	Identifier	zval_ptr_dtor_nogc		384964	0					
ANR	385493	ArgumentList	free_op2		384964	1					
ANR	385494	Argument	free_op2		384964	0					
ANR	385495	Identifier	free_op2		384964	0					
ANR	385496	ExpressionStatement	FREE_OP ( free_op_data1 )	26833:1:849932:849954	384964	10	True				
ANR	385497	CallExpression	FREE_OP ( free_op_data1 )		384964	0					
ANR	385498	Callee	FREE_OP		384964	0					
ANR	385499	Identifier	FREE_OP		384964	0					
ANR	385500	ArgumentList	free_op_data1		384964	1					
ANR	385501	Argument	free_op_data1		384964	0					
ANR	385502	Identifier	free_op_data1		384964	0					
ANR	385503	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	26835:1:849958:849986	384964	11	True				
ANR	385504	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		384964	0					
ANR	385505	Callee	ZEND_VM_NEXT_OPCODE_EX		384964	0					
ANR	385506	Identifier	ZEND_VM_NEXT_OPCODE_EX		384964	0					
ANR	385507	ArgumentList	1		384964	1					
ANR	385508	Argument	1		384964	0					
ANR	385509	PrimaryExpression	1		384964	0					
ANR	385510	Argument	2		384964	1					
ANR	385511	PrimaryExpression	2		384964	0					
ANR	385512	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		384964	1					
ANR	385513	Identifier	zend_binary_assign_op_dim_helper_SPEC_UNUSED_TMPVAR		384964	2					
ANR	385514	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		384964	3					
ANR	385515	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	26767:97:847720:847771	384964	0	True				
ANR	385516	ParameterType	binary_op_type binary_op		384964	0					
ANR	385517	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		384964	1					
ANR	385518	CFGEntryNode	ENTRY		384964		True				
ANR	385519	CFGExitNode	EXIT		384964		True				
ANR	385520	Symbol	container		384964						
ANR	385521	Symbol	opline -> op2		384964						
ANR	385522	Symbol	opline -> op2 . var		384964						
ANR	385523	Symbol	rv		384964						
ANR	385524	Symbol	Z_OBJ_P		384964						
ANR	385525	Symbol	dim		384964						
ANR	385526	Symbol	Z_TYPE		384964						
ANR	385527	Symbol	free_op_data1		384964						
ANR	385528	Symbol	free_op2		384964						
ANR	385529	Symbol	& EG		384964						
ANR	385530	Symbol	var_ptr		384964						
ANR	385531	Symbol	execute_data		384964						
ANR	385532	Symbol	opline -> result		384964						
ANR	385533	Symbol	_get_obj_zval_ptr_unused		384964						
ANR	385534	Symbol	( opline + 1 ) -> op1		384964						
ANR	385535	Symbol	UNEXPECTED		384964						
ANR	385536	Symbol	& free_op2		384964						
ANR	385537	Symbol	RETURN_VALUE_USED		384964						
ANR	385538	Symbol	( opline + 1 ) -> op1 . var		384964						
ANR	385539	Symbol	opline		384964						
ANR	385540	Symbol	get_zval_ptr_r		384964						
ANR	385541	Symbol	Z_INDIRECT		384964						
ANR	385542	Symbol	IS_ARRAY		384964						
ANR	385543	Symbol	value		384964						
ANR	385544	Symbol	binary_op		384964						
ANR	385545	Symbol	IS_TMP_VAR		384964						
ANR	385546	Symbol	( opline + 1 ) -> op1_type		384964						
ANR	385547	Symbol	NULL		384964						
ANR	385548	Symbol	Z_TYPE_P		384964						
ANR	385549	Symbol	& rv		384964						
ANR	385550	Symbol	* opline		384964						
ANR	385551	Symbol	error_zval		384964						
ANR	385552	Symbol	_get_zval_ptr_var		384964						
ANR	385553	Symbol	EX_VAR		384964						
ANR	385554	Symbol	IS_OBJECT		384964						
ANR	385555	Symbol	IS_VAR		384964						
ANR	385556	Symbol	EXPECTED		384964						
ANR	385557	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		384964						
ANR	385558	Symbol	& free_op_data1		384964						
ANR	385559	Symbol	opline -> result . var		384964						
ANR	385560	Symbol	IS_UNUSED		384964						
ANR	385561	Symbol	IS_INDIRECT		384964						
ANR	385562	Function	zend_pre_incdec_property_helper_SPEC_UNUSED_TMPVAR	27078:0:861108:863304							
ANR	385563	FunctionDef	zend_pre_incdec_property_helper_SPEC_UNUSED_TMPVAR (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		385562	0					
ANR	385564	CompoundStatement		27079:0:861241:863304	385562	0					
ANR	385565	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op2 ;	27080:1:861244:861277	385562	0	True				
ANR	385566	IdentifierDecl	free_op2		385562	0					
ANR	385567	IdentifierDeclType	USE_OPLINE zend_free_op		385562	0					
ANR	385568	Identifier	free_op2		385562	1					
ANR	385569	IdentifierDeclStatement	zval * object ;	27082:1:861280:861292	385562	1	True				
ANR	385570	IdentifierDecl	* object		385562	0					
ANR	385571	IdentifierDeclType	zval *		385562	0					
ANR	385572	Identifier	object		385562	1					
ANR	385573	IdentifierDeclStatement	zval * property ;	27083:1:861295:861309	385562	2	True				
ANR	385574	IdentifierDecl	* property		385562	0					
ANR	385575	IdentifierDeclType	zval *		385562	0					
ANR	385576	Identifier	property		385562	1					
ANR	385577	IdentifierDeclStatement	zval * zptr ;	27084:1:861312:861322	385562	3	True				
ANR	385578	IdentifierDecl	* zptr		385562	0					
ANR	385579	IdentifierDeclType	zval *		385562	0					
ANR	385580	Identifier	zptr		385562	1					
ANR	385581	ExpressionStatement	SAVE_OPLINE ( )	27086:1:861326:861339	385562	4	True				
ANR	385582	CallExpression	SAVE_OPLINE ( )		385562	0					
ANR	385583	Callee	SAVE_OPLINE		385562	0					
ANR	385584	Identifier	SAVE_OPLINE		385562	0					
ANR	385585	ArgumentList			385562	1					
ANR	385586	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	27087:1:861342:861389	385562	5	True				
ANR	385587	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		385562	0		=			
ANR	385588	Identifier	object		385562	0					
ANR	385589	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		385562	1					
ANR	385590	Callee	_get_obj_zval_ptr_unused		385562	0					
ANR	385591	Identifier	_get_obj_zval_ptr_unused		385562	0					
ANR	385592	ArgumentList	execute_data		385562	1					
ANR	385593	Argument	execute_data		385562	0					
ANR	385594	Identifier	execute_data		385562	0					
ANR	385595	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		385562	6					
ANR	385596	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	27089:5:861397:861457	385562	0	True				
ANR	385597	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		385562	0		&&			
ANR	385598	EqualityExpression	IS_UNUSED == IS_UNUSED		385562	0		==			
ANR	385599	Identifier	IS_UNUSED		385562	0					
ANR	385600	Identifier	IS_UNUSED		385562	1					
ANR	385601	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		385562	1					
ANR	385602	Callee	UNEXPECTED		385562	0					
ANR	385603	Identifier	UNEXPECTED		385562	0					
ANR	385604	ArgumentList	Z_OBJ_P ( object ) == NULL		385562	1					
ANR	385605	Argument	Z_OBJ_P ( object ) == NULL		385562	0					
ANR	385606	EqualityExpression	Z_OBJ_P ( object ) == NULL		385562	0		==			
ANR	385607	CallExpression	Z_OBJ_P ( object )		385562	0					
ANR	385608	Callee	Z_OBJ_P		385562	0					
ANR	385609	Identifier	Z_OBJ_P		385562	0					
ANR	385610	ArgumentList	object		385562	1					
ANR	385611	Argument	object		385562	0					
ANR	385612	Identifier	object		385562	0					
ANR	385613	Identifier	NULL		385562	1					
ANR	385614	CompoundStatement		11:68:218:218	385562	1					
ANR	385615	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	27090:2:861464:861528	385562	0	True				
ANR	385616	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		385562	0					
ANR	385617	Callee	zend_throw_error		385562	0					
ANR	385618	Identifier	zend_throw_error		385562	0					
ANR	385619	ArgumentList	NULL		385562	1					
ANR	385620	Argument	NULL		385562	0					
ANR	385621	Identifier	NULL		385562	0					
ANR	385622	Argument	"""Using $this when not in object context"""		385562	1					
ANR	385623	PrimaryExpression	"""Using $this when not in object context"""		385562	0					
ANR	385624	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	27091:2:861532:861575	385562	1	True				
ANR	385625	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		385562	0					
ANR	385626	Callee	zval_ptr_dtor_nogc		385562	0					
ANR	385627	Identifier	zval_ptr_dtor_nogc		385562	0					
ANR	385628	ArgumentList	EX_VAR ( opline -> op2 . var )		385562	1					
ANR	385629	Argument	EX_VAR ( opline -> op2 . var )		385562	0					
ANR	385630	CallExpression	EX_VAR ( opline -> op2 . var )		385562	0					
ANR	385631	Callee	EX_VAR		385562	0					
ANR	385632	Identifier	EX_VAR		385562	0					
ANR	385633	ArgumentList	opline -> op2 . var		385562	1					
ANR	385634	Argument	opline -> op2 . var		385562	0					
ANR	385635	MemberAccess	opline -> op2 . var		385562	0					
ANR	385636	PtrMemberAccess	opline -> op2		385562	0					
ANR	385637	Identifier	opline		385562	0					
ANR	385638	Identifier	op2		385562	1					
ANR	385639	Identifier	var		385562	1					
ANR	385640	ExpressionStatement	HANDLE_EXCEPTION ( )	27092:2:861579:861597	385562	2	True				
ANR	385641	CallExpression	HANDLE_EXCEPTION ( )		385562	0					
ANR	385642	Callee	HANDLE_EXCEPTION		385562	0					
ANR	385643	Identifier	HANDLE_EXCEPTION		385562	0					
ANR	385644	ArgumentList			385562	1					
ANR	385645	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	27095:1:861604:861674	385562	7	True				
ANR	385646	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		385562	0		=			
ANR	385647	Identifier	property		385562	0					
ANR	385648	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		385562	1					
ANR	385649	Callee	_get_zval_ptr_var		385562	0					
ANR	385650	Identifier	_get_zval_ptr_var		385562	0					
ANR	385651	ArgumentList	opline -> op2 . var		385562	1					
ANR	385652	Argument	opline -> op2 . var		385562	0					
ANR	385653	MemberAccess	opline -> op2 . var		385562	0					
ANR	385654	PtrMemberAccess	opline -> op2		385562	0					
ANR	385655	Identifier	opline		385562	0					
ANR	385656	Identifier	op2		385562	1					
ANR	385657	Identifier	var		385562	1					
ANR	385658	Argument	execute_data		385562	1					
ANR	385659	Identifier	execute_data		385562	0					
ANR	385660	Argument	& free_op2		385562	2					
ANR	385661	UnaryOperationExpression	& free_op2		385562	0					
ANR	385662	UnaryOperator	&		385562	0					
ANR	385663	Identifier	free_op2		385562	1					
ANR	385664	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		385562	8					
ANR	385665	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	27097:5:861682:861730	385562	0	True				
ANR	385666	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		385562	0		&&			
ANR	385667	EqualityExpression	IS_UNUSED == IS_VAR		385562	0		==			
ANR	385668	Identifier	IS_UNUSED		385562	0					
ANR	385669	Identifier	IS_VAR		385562	1					
ANR	385670	CallExpression	UNEXPECTED ( object == NULL )		385562	1					
ANR	385671	Callee	UNEXPECTED		385562	0					
ANR	385672	Identifier	UNEXPECTED		385562	0					
ANR	385673	ArgumentList	object == NULL		385562	1					
ANR	385674	Argument	object == NULL		385562	0					
ANR	385675	EqualityExpression	object == NULL		385562	0		==			
ANR	385676	Identifier	object		385562	0					
ANR	385677	Identifier	NULL		385562	1					
ANR	385678	CompoundStatement		19:56:491:491	385562	1					
ANR	385679	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	27098:2:861737:861827	385562	0	True				
ANR	385680	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		385562	0					
ANR	385681	Callee	zend_throw_error		385562	0					
ANR	385682	Identifier	zend_throw_error		385562	0					
ANR	385683	ArgumentList	NULL		385562	1					
ANR	385684	Argument	NULL		385562	0					
ANR	385685	Identifier	NULL		385562	0					
ANR	385686	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		385562	1					
ANR	385687	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		385562	0					
ANR	385688	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	27099:2:861831:861859	385562	1	True				
ANR	385689	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		385562	0					
ANR	385690	Callee	zval_ptr_dtor_nogc		385562	0					
ANR	385691	Identifier	zval_ptr_dtor_nogc		385562	0					
ANR	385692	ArgumentList	free_op2		385562	1					
ANR	385693	Argument	free_op2		385562	0					
ANR	385694	Identifier	free_op2		385562	0					
ANR	385695	ExpressionStatement	HANDLE_EXCEPTION ( )	27100:2:861863:861881	385562	2	True				
ANR	385696	CallExpression	HANDLE_EXCEPTION ( )		385562	0					
ANR	385697	Callee	HANDLE_EXCEPTION		385562	0					
ANR	385698	Identifier	HANDLE_EXCEPTION		385562	0					
ANR	385699	ArgumentList			385562	1					
ANR	385700	DoStatement	do		385562	9					
ANR	385701	CompoundStatement		25:4:649:649	385562	0					
ANR	385702	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		385562	0					
ANR	385703	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	27104:6:861899:861965	385562	0	True				
ANR	385704	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		385562	0		&&			
ANR	385705	EqualityExpression	IS_UNUSED != IS_UNUSED		385562	0		!=			
ANR	385706	Identifier	IS_UNUSED		385562	0					
ANR	385707	Identifier	IS_UNUSED		385562	1					
ANR	385708	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		385562	1					
ANR	385709	Callee	UNEXPECTED		385562	0					
ANR	385710	Identifier	UNEXPECTED		385562	0					
ANR	385711	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		385562	1					
ANR	385712	Argument	Z_TYPE_P ( object ) != IS_OBJECT		385562	0					
ANR	385713	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		385562	0		!=			
ANR	385714	CallExpression	Z_TYPE_P ( object )		385562	0					
ANR	385715	Callee	Z_TYPE_P		385562	0					
ANR	385716	Identifier	Z_TYPE_P		385562	0					
ANR	385717	ArgumentList	object		385562	1					
ANR	385718	Argument	object		385562	0					
ANR	385719	Identifier	object		385562	0					
ANR	385720	Identifier	IS_OBJECT		385562	1					
ANR	385721	CompoundStatement		26:75:726:726	385562	1					
ANR	385722	ExpressionStatement	ZVAL_DEREF ( object )	27105:3:861973:861991	385562	0	True				
ANR	385723	CallExpression	ZVAL_DEREF ( object )		385562	0					
ANR	385724	Callee	ZVAL_DEREF		385562	0					
ANR	385725	Identifier	ZVAL_DEREF		385562	0					
ANR	385726	ArgumentList	object		385562	1					
ANR	385727	Argument	object		385562	0					
ANR	385728	Identifier	object		385562	0					
ANR	385729	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		385562	1					
ANR	385730	Condition	UNEXPECTED ( ! make_real_object ( object ) )	27106:7:862000:862036	385562	0	True				
ANR	385731	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		385562	0					
ANR	385732	Callee	UNEXPECTED		385562	0					
ANR	385733	Identifier	UNEXPECTED		385562	0					
ANR	385734	ArgumentList	! make_real_object ( object )		385562	1					
ANR	385735	Argument	! make_real_object ( object )		385562	0					
ANR	385736	UnaryOperationExpression	! make_real_object ( object )		385562	0					
ANR	385737	UnaryOperator	!		385562	0					
ANR	385738	CallExpression	make_real_object ( object )		385562	1					
ANR	385739	Callee	make_real_object		385562	0					
ANR	385740	Identifier	make_real_object		385562	0					
ANR	385741	ArgumentList	object		385562	1					
ANR	385742	Argument	object		385562	0					
ANR	385743	Identifier	object		385562	0					
ANR	385744	CompoundStatement		28:46:797:797	385562	1					
ANR	385745	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	27107:4:862045:862123	385562	0	True				
ANR	385746	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		385562	0					
ANR	385747	Callee	zend_error		385562	0					
ANR	385748	Identifier	zend_error		385562	0					
ANR	385749	ArgumentList	E_WARNING		385562	1					
ANR	385750	Argument	E_WARNING		385562	0					
ANR	385751	Identifier	E_WARNING		385562	0					
ANR	385752	Argument	"""Attempt to increment/decrement property of non-object"""		385562	1					
ANR	385753	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		385562	0					
ANR	385754	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		385562	1					
ANR	385755	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	27108:8:862133:862169	385562	0	True				
ANR	385756	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		385562	0					
ANR	385757	Callee	UNEXPECTED		385562	0					
ANR	385758	Identifier	UNEXPECTED		385562	0					
ANR	385759	ArgumentList	RETURN_VALUE_USED ( opline )		385562	1					
ANR	385760	Argument	RETURN_VALUE_USED ( opline )		385562	0					
ANR	385761	CallExpression	RETURN_VALUE_USED ( opline )		385562	0					
ANR	385762	Callee	RETURN_VALUE_USED		385562	0					
ANR	385763	Identifier	RETURN_VALUE_USED		385562	0					
ANR	385764	ArgumentList	opline		385562	1					
ANR	385765	Argument	opline		385562	0					
ANR	385766	Identifier	opline		385562	0					
ANR	385767	CompoundStatement		30:47:930:930	385562	1					
ANR	385768	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	27109:5:862179:862216	385562	0	True				
ANR	385769	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		385562	0					
ANR	385770	Callee	ZVAL_NULL		385562	0					
ANR	385771	Identifier	ZVAL_NULL		385562	0					
ANR	385772	ArgumentList	EX_VAR ( opline -> result . var )		385562	1					
ANR	385773	Argument	EX_VAR ( opline -> result . var )		385562	0					
ANR	385774	CallExpression	EX_VAR ( opline -> result . var )		385562	0					
ANR	385775	Callee	EX_VAR		385562	0					
ANR	385776	Identifier	EX_VAR		385562	0					
ANR	385777	ArgumentList	opline -> result . var		385562	1					
ANR	385778	Argument	opline -> result . var		385562	0					
ANR	385779	MemberAccess	opline -> result . var		385562	0					
ANR	385780	PtrMemberAccess	opline -> result		385562	0					
ANR	385781	Identifier	opline		385562	0					
ANR	385782	Identifier	result		385562	1					
ANR	385783	Identifier	var		385562	1					
ANR	385784	BreakStatement	break ;	27111:4:862228:862233	385562	2	True				
ANR	385785	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		385562	1					
ANR	385786	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	27117:6:862307:862542	385562	0	True				
ANR	385787	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		385562	0		&&			
ANR	385788	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		385562	0					
ANR	385789	Callee	EXPECTED		385562	0					
ANR	385790	Identifier	EXPECTED		385562	0					
ANR	385791	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		385562	1					
ANR	385792	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		385562	0					
ANR	385793	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		385562	0					
ANR	385794	CallExpression	Z_OBJ_HT_P ( object )		385562	0					
ANR	385795	Callee	Z_OBJ_HT_P		385562	0					
ANR	385796	Identifier	Z_OBJ_HT_P		385562	0					
ANR	385797	ArgumentList	object		385562	1					
ANR	385798	Argument	object		385562	0					
ANR	385799	Identifier	object		385562	0					
ANR	385800	Identifier	get_property_ptr_ptr		385562	1					
ANR	385801	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		385562	1					
ANR	385802	Callee	EXPECTED		385562	0					
ANR	385803	Identifier	EXPECTED		385562	0					
ANR	385804	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		385562	1					
ANR	385805	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		385562	0					
ANR	385806	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		385562	0		!=			
ANR	385807	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		385562	0		=			
ANR	385808	Identifier	zptr		385562	0					
ANR	385809	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		385562	1					
ANR	385810	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		385562	0					
ANR	385811	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		385562	0					
ANR	385812	CallExpression	Z_OBJ_HT_P ( object )		385562	0					
ANR	385813	Callee	Z_OBJ_HT_P		385562	0					
ANR	385814	Identifier	Z_OBJ_HT_P		385562	0					
ANR	385815	ArgumentList	object		385562	1					
ANR	385816	Argument	object		385562	0					
ANR	385817	Identifier	object		385562	0					
ANR	385818	Identifier	get_property_ptr_ptr		385562	1					
ANR	385819	ArgumentList	object		385562	1					
ANR	385820	Argument	object		385562	0					
ANR	385821	Identifier	object		385562	0					
ANR	385822	Argument	property		385562	1					
ANR	385823	Identifier	property		385562	0					
ANR	385824	Argument	BP_VAR_RW		385562	2					
ANR	385825	Identifier	BP_VAR_RW		385562	0					
ANR	385826	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		385562	3					
ANR	385827	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		385562	0					
ANR	385828	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		385562	0					
ANR	385829	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		385562	0		==			
ANR	385830	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		385562	0		|			
ANR	385831	Identifier	IS_TMP_VAR		385562	0					
ANR	385832	Identifier	IS_VAR		385562	1					
ANR	385833	Identifier	IS_CONST		385562	1					
ANR	385834	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		385562	1					
ANR	385835	Callee	CACHE_ADDR		385562	0					
ANR	385836	Identifier	CACHE_ADDR		385562	0					
ANR	385837	ArgumentList	Z_CACHE_SLOT_P ( property )		385562	1					
ANR	385838	Argument	Z_CACHE_SLOT_P ( property )		385562	0					
ANR	385839	CallExpression	Z_CACHE_SLOT_P ( property )		385562	0					
ANR	385840	Callee	Z_CACHE_SLOT_P		385562	0					
ANR	385841	Identifier	Z_CACHE_SLOT_P		385562	0					
ANR	385842	ArgumentList	property		385562	1					
ANR	385843	Argument	property		385562	0					
ANR	385844	Identifier	property		385562	0					
ANR	385845	Identifier	NULL		385562	2					
ANR	385846	Identifier	NULL		385562	1					
ANR	385847	CompoundStatement		40:187:1303:1303	385562	1					
ANR	385848	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		385562	0					
ANR	385849	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	27120:7:862555:862589	385562	0	True				
ANR	385850	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		385562	0					
ANR	385851	Callee	EXPECTED		385562	0					
ANR	385852	Identifier	EXPECTED		385562	0					
ANR	385853	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		385562	1					
ANR	385854	Argument	Z_TYPE_P ( zptr ) == IS_LONG		385562	0					
ANR	385855	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		385562	0		==			
ANR	385856	CallExpression	Z_TYPE_P ( zptr )		385562	0					
ANR	385857	Callee	Z_TYPE_P		385562	0					
ANR	385858	Identifier	Z_TYPE_P		385562	0					
ANR	385859	ArgumentList	zptr		385562	1					
ANR	385860	Argument	zptr		385562	0					
ANR	385861	Identifier	zptr		385562	0					
ANR	385862	Identifier	IS_LONG		385562	1					
ANR	385863	CompoundStatement		42:44:1350:1350	385562	1					
ANR	385864	IfStatement	if ( inc )		385562	0					
ANR	385865	Condition	inc	27121:8:862602:862604	385562	0	True				
ANR	385866	Identifier	inc		385562	0					
ANR	385867	CompoundStatement		43:13:1365:1365	385562	1					
ANR	385868	ExpressionStatement	fast_long_increment_function ( zptr )	27122:5:862614:862648	385562	0	True				
ANR	385869	CallExpression	fast_long_increment_function ( zptr )		385562	0					
ANR	385870	Callee	fast_long_increment_function		385562	0					
ANR	385871	Identifier	fast_long_increment_function		385562	0					
ANR	385872	ArgumentList	zptr		385562	1					
ANR	385873	Argument	zptr		385562	0					
ANR	385874	Identifier	zptr		385562	0					
ANR	385875	ElseStatement	else		385562	0					
ANR	385876	CompoundStatement		45:11:1419:1419	385562	0					
ANR	385877	ExpressionStatement	fast_long_decrement_function ( zptr )	27124:5:862668:862702	385562	0	True				
ANR	385878	CallExpression	fast_long_decrement_function ( zptr )		385562	0					
ANR	385879	Callee	fast_long_decrement_function		385562	0					
ANR	385880	Identifier	fast_long_decrement_function		385562	0					
ANR	385881	ArgumentList	zptr		385562	1					
ANR	385882	Argument	zptr		385562	0					
ANR	385883	Identifier	zptr		385562	0					
ANR	385884	ElseStatement	else		385562	0					
ANR	385885	CompoundStatement		48:10:1478:1478	385562	0					
ANR	385886	ExpressionStatement	ZVAL_DEREF ( zptr )	27127:4:862726:862742	385562	0	True				
ANR	385887	CallExpression	ZVAL_DEREF ( zptr )		385562	0					
ANR	385888	Callee	ZVAL_DEREF		385562	0					
ANR	385889	Identifier	ZVAL_DEREF		385562	0					
ANR	385890	ArgumentList	zptr		385562	1					
ANR	385891	Argument	zptr		385562	0					
ANR	385892	Identifier	zptr		385562	0					
ANR	385893	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	27128:4:862748:862773	385562	1	True				
ANR	385894	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		385562	0					
ANR	385895	Callee	SEPARATE_ZVAL_NOREF		385562	0					
ANR	385896	Identifier	SEPARATE_ZVAL_NOREF		385562	0					
ANR	385897	ArgumentList	zptr		385562	1					
ANR	385898	Argument	zptr		385562	0					
ANR	385899	Identifier	zptr		385562	0					
ANR	385900	IfStatement	if ( inc )		385562	2					
ANR	385901	Condition	inc	27130:8:862784:862786	385562	0	True				
ANR	385902	Identifier	inc		385562	0					
ANR	385903	CompoundStatement		52:13:1547:1547	385562	1					
ANR	385904	ExpressionStatement	increment_function ( zptr )	27131:5:862796:862820	385562	0	True				
ANR	385905	CallExpression	increment_function ( zptr )		385562	0					
ANR	385906	Callee	increment_function		385562	0					
ANR	385907	Identifier	increment_function		385562	0					
ANR	385908	ArgumentList	zptr		385562	1					
ANR	385909	Argument	zptr		385562	0					
ANR	385910	Identifier	zptr		385562	0					
ANR	385911	ElseStatement	else		385562	0					
ANR	385912	CompoundStatement		54:11:1591:1591	385562	0					
ANR	385913	ExpressionStatement	decrement_function ( zptr )	27133:5:862840:862864	385562	0	True				
ANR	385914	CallExpression	decrement_function ( zptr )		385562	0					
ANR	385915	Callee	decrement_function		385562	0					
ANR	385916	Identifier	decrement_function		385562	0					
ANR	385917	ArgumentList	zptr		385562	1					
ANR	385918	Argument	zptr		385562	0					
ANR	385919	Identifier	zptr		385562	0					
ANR	385920	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		385562	1					
ANR	385921	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	27136:7:862884:862920	385562	0	True				
ANR	385922	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		385562	0					
ANR	385923	Callee	UNEXPECTED		385562	0					
ANR	385924	Identifier	UNEXPECTED		385562	0					
ANR	385925	ArgumentList	RETURN_VALUE_USED ( opline )		385562	1					
ANR	385926	Argument	RETURN_VALUE_USED ( opline )		385562	0					
ANR	385927	CallExpression	RETURN_VALUE_USED ( opline )		385562	0					
ANR	385928	Callee	RETURN_VALUE_USED		385562	0					
ANR	385929	Identifier	RETURN_VALUE_USED		385562	0					
ANR	385930	ArgumentList	opline		385562	1					
ANR	385931	Argument	opline		385562	0					
ANR	385932	Identifier	opline		385562	0					
ANR	385933	CompoundStatement		58:46:1681:1681	385562	1					
ANR	385934	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	27137:4:862929:862972	385562	0	True				
ANR	385935	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		385562	0					
ANR	385936	Callee	ZVAL_COPY		385562	0					
ANR	385937	Identifier	ZVAL_COPY		385562	0					
ANR	385938	ArgumentList	EX_VAR ( opline -> result . var )		385562	1					
ANR	385939	Argument	EX_VAR ( opline -> result . var )		385562	0					
ANR	385940	CallExpression	EX_VAR ( opline -> result . var )		385562	0					
ANR	385941	Callee	EX_VAR		385562	0					
ANR	385942	Identifier	EX_VAR		385562	0					
ANR	385943	ArgumentList	opline -> result . var		385562	1					
ANR	385944	Argument	opline -> result . var		385562	0					
ANR	385945	MemberAccess	opline -> result . var		385562	0					
ANR	385946	PtrMemberAccess	opline -> result		385562	0					
ANR	385947	Identifier	opline		385562	0					
ANR	385948	Identifier	result		385562	1					
ANR	385949	Identifier	var		385562	1					
ANR	385950	Argument	zptr		385562	1					
ANR	385951	Identifier	zptr		385562	0					
ANR	385952	ElseStatement	else		385562	0					
ANR	385953	CompoundStatement		61:9:1746:1746	385562	0					
ANR	385954	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	27140:3:862993:863211	385562	0	True				
ANR	385955	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		385562	0					
ANR	385956	Callee	zend_pre_incdec_overloaded_property		385562	0					
ANR	385957	Identifier	zend_pre_incdec_overloaded_property		385562	0					
ANR	385958	ArgumentList	object		385562	1					
ANR	385959	Argument	object		385562	0					
ANR	385960	Identifier	object		385562	0					
ANR	385961	Argument	property		385562	1					
ANR	385962	Identifier	property		385562	0					
ANR	385963	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		385562	2					
ANR	385964	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		385562	0					
ANR	385965	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		385562	0					
ANR	385966	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		385562	0		==			
ANR	385967	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		385562	0		|			
ANR	385968	Identifier	IS_TMP_VAR		385562	0					
ANR	385969	Identifier	IS_VAR		385562	1					
ANR	385970	Identifier	IS_CONST		385562	1					
ANR	385971	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		385562	1					
ANR	385972	Callee	CACHE_ADDR		385562	0					
ANR	385973	Identifier	CACHE_ADDR		385562	0					
ANR	385974	ArgumentList	Z_CACHE_SLOT_P ( property )		385562	1					
ANR	385975	Argument	Z_CACHE_SLOT_P ( property )		385562	0					
ANR	385976	CallExpression	Z_CACHE_SLOT_P ( property )		385562	0					
ANR	385977	Callee	Z_CACHE_SLOT_P		385562	0					
ANR	385978	Identifier	Z_CACHE_SLOT_P		385562	0					
ANR	385979	ArgumentList	property		385562	1					
ANR	385980	Argument	property		385562	0					
ANR	385981	Identifier	property		385562	0					
ANR	385982	Identifier	NULL		385562	2					
ANR	385983	Argument	inc		385562	3					
ANR	385984	Identifier	inc		385562	0					
ANR	385985	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		385562	4					
ANR	385986	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		385562	0					
ANR	385987	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		385562	0					
ANR	385988	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		385562	0					
ANR	385989	Callee	UNEXPECTED		385562	0					
ANR	385990	Identifier	UNEXPECTED		385562	0					
ANR	385991	ArgumentList	RETURN_VALUE_USED ( opline )		385562	1					
ANR	385992	Argument	RETURN_VALUE_USED ( opline )		385562	0					
ANR	385993	CallExpression	RETURN_VALUE_USED ( opline )		385562	0					
ANR	385994	Callee	RETURN_VALUE_USED		385562	0					
ANR	385995	Identifier	RETURN_VALUE_USED		385562	0					
ANR	385996	ArgumentList	opline		385562	1					
ANR	385997	Argument	opline		385562	0					
ANR	385998	Identifier	opline		385562	0					
ANR	385999	CallExpression	EX_VAR ( opline -> result . var )		385562	1					
ANR	386000	Callee	EX_VAR		385562	0					
ANR	386001	Identifier	EX_VAR		385562	0					
ANR	386002	ArgumentList	opline -> result . var		385562	1					
ANR	386003	Argument	opline -> result . var		385562	0					
ANR	386004	MemberAccess	opline -> result . var		385562	0					
ANR	386005	PtrMemberAccess	opline -> result		385562	0					
ANR	386006	Identifier	opline		385562	0					
ANR	386007	Identifier	result		385562	1					
ANR	386008	Identifier	var		385562	1					
ANR	386009	Identifier	NULL		385562	2					
ANR	386010	Condition	0	27142:10:863227:863227	385562	1	True				
ANR	386011	PrimaryExpression	0		385562	0					
ANR	386012	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	27144:1:863233:863261	385562	10	True				
ANR	386013	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		385562	0					
ANR	386014	Callee	zval_ptr_dtor_nogc		385562	0					
ANR	386015	Identifier	zval_ptr_dtor_nogc		385562	0					
ANR	386016	ArgumentList	free_op2		385562	1					
ANR	386017	Argument	free_op2		385562	0					
ANR	386018	Identifier	free_op2		385562	0					
ANR	386019	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	27146:1:863265:863302	385562	11	True				
ANR	386020	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		385562	0					
ANR	386021	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		385562	0					
ANR	386022	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		385562	0					
ANR	386023	ArgumentList			385562	1					
ANR	386024	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		385562	1					
ANR	386025	Identifier	zend_pre_incdec_property_helper_SPEC_UNUSED_TMPVAR		385562	2					
ANR	386026	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		385562	3					
ANR	386027	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	27078:96:861204:861238	385562	0	True				
ANR	386028	ParameterType	int inc		385562	0					
ANR	386029	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		385562	1					
ANR	386030	CFGEntryNode	ENTRY		385562		True				
ANR	386031	CFGExitNode	EXIT		385562		True				
ANR	386032	Symbol	opline -> op2		385562						
ANR	386033	Symbol	opline -> op2 . var		385562						
ANR	386034	Symbol	Z_OBJ_P		385562						
ANR	386035	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		385562						
ANR	386036	Symbol	free_op2		385562						
ANR	386037	Symbol	zptr		385562						
ANR	386038	Symbol	execute_data		385562						
ANR	386039	Symbol	opline -> result		385562						
ANR	386040	Symbol	_get_obj_zval_ptr_unused		385562						
ANR	386041	Symbol	UNEXPECTED		385562						
ANR	386042	Symbol	& free_op2		385562						
ANR	386043	Symbol	E_WARNING		385562						
ANR	386044	Symbol	make_real_object		385562						
ANR	386045	Symbol	RETURN_VALUE_USED		385562						
ANR	386046	Symbol	opline		385562						
ANR	386047	Symbol	IS_LONG		385562						
ANR	386048	Symbol	property		385562						
ANR	386049	Symbol	IS_TMP_VAR		385562						
ANR	386050	Symbol	inc		385562						
ANR	386051	Symbol	BP_VAR_RW		385562						
ANR	386052	Symbol	IS_CONST		385562						
ANR	386053	Symbol	NULL		385562						
ANR	386054	Symbol	Z_CACHE_SLOT_P		385562						
ANR	386055	Symbol	Z_TYPE_P		385562						
ANR	386056	Symbol	* Z_OBJ_HT_P		385562						
ANR	386057	Symbol	CACHE_ADDR		385562						
ANR	386058	Symbol	* opline		385562						
ANR	386059	Symbol	_get_zval_ptr_var		385562						
ANR	386060	Symbol	Z_OBJ_HT_P		385562						
ANR	386061	Symbol	EX_VAR		385562						
ANR	386062	Symbol	IS_OBJECT		385562						
ANR	386063	Symbol	IS_VAR		385562						
ANR	386064	Symbol	EXPECTED		385562						
ANR	386065	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		385562						
ANR	386066	Symbol	opline -> result . var		385562						
ANR	386067	Symbol	object		385562						
ANR	386068	Symbol	IS_UNUSED		385562						
ANR	386069	Function	zend_post_incdec_property_helper_SPEC_UNUSED_TMPVAR	27159:0:863771:865870							
ANR	386070	FunctionDef	zend_post_incdec_property_helper_SPEC_UNUSED_TMPVAR (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		386069	0					
ANR	386071	CompoundStatement		27160:0:863905:865870	386069	0					
ANR	386072	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op2 ;	27161:1:863908:863941	386069	0	True				
ANR	386073	IdentifierDecl	free_op2		386069	0					
ANR	386074	IdentifierDeclType	USE_OPLINE zend_free_op		386069	0					
ANR	386075	Identifier	free_op2		386069	1					
ANR	386076	IdentifierDeclStatement	zval * object ;	27163:1:863944:863956	386069	1	True				
ANR	386077	IdentifierDecl	* object		386069	0					
ANR	386078	IdentifierDeclType	zval *		386069	0					
ANR	386079	Identifier	object		386069	1					
ANR	386080	IdentifierDeclStatement	zval * property ;	27164:1:863959:863973	386069	2	True				
ANR	386081	IdentifierDecl	* property		386069	0					
ANR	386082	IdentifierDeclType	zval *		386069	0					
ANR	386083	Identifier	property		386069	1					
ANR	386084	IdentifierDeclStatement	zval * zptr ;	27165:1:863976:863986	386069	3	True				
ANR	386085	IdentifierDecl	* zptr		386069	0					
ANR	386086	IdentifierDeclType	zval *		386069	0					
ANR	386087	Identifier	zptr		386069	1					
ANR	386088	ExpressionStatement	SAVE_OPLINE ( )	27167:1:863990:864003	386069	4	True				
ANR	386089	CallExpression	SAVE_OPLINE ( )		386069	0					
ANR	386090	Callee	SAVE_OPLINE		386069	0					
ANR	386091	Identifier	SAVE_OPLINE		386069	0					
ANR	386092	ArgumentList			386069	1					
ANR	386093	ExpressionStatement	object = _get_obj_zval_ptr_unused ( execute_data )	27168:1:864006:864053	386069	5	True				
ANR	386094	AssignmentExpression	object = _get_obj_zval_ptr_unused ( execute_data )		386069	0		=			
ANR	386095	Identifier	object		386069	0					
ANR	386096	CallExpression	_get_obj_zval_ptr_unused ( execute_data )		386069	1					
ANR	386097	Callee	_get_obj_zval_ptr_unused		386069	0					
ANR	386098	Identifier	_get_obj_zval_ptr_unused		386069	0					
ANR	386099	ArgumentList	execute_data		386069	1					
ANR	386100	Argument	execute_data		386069	0					
ANR	386101	Identifier	execute_data		386069	0					
ANR	386102	IfStatement	if ( IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		386069	6					
ANR	386103	Condition	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	27170:5:864061:864121	386069	0	True				
ANR	386104	AndExpression	IS_UNUSED == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		386069	0		&&			
ANR	386105	EqualityExpression	IS_UNUSED == IS_UNUSED		386069	0		==			
ANR	386106	Identifier	IS_UNUSED		386069	0					
ANR	386107	Identifier	IS_UNUSED		386069	1					
ANR	386108	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		386069	1					
ANR	386109	Callee	UNEXPECTED		386069	0					
ANR	386110	Identifier	UNEXPECTED		386069	0					
ANR	386111	ArgumentList	Z_OBJ_P ( object ) == NULL		386069	1					
ANR	386112	Argument	Z_OBJ_P ( object ) == NULL		386069	0					
ANR	386113	EqualityExpression	Z_OBJ_P ( object ) == NULL		386069	0		==			
ANR	386114	CallExpression	Z_OBJ_P ( object )		386069	0					
ANR	386115	Callee	Z_OBJ_P		386069	0					
ANR	386116	Identifier	Z_OBJ_P		386069	0					
ANR	386117	ArgumentList	object		386069	1					
ANR	386118	Argument	object		386069	0					
ANR	386119	Identifier	object		386069	0					
ANR	386120	Identifier	NULL		386069	1					
ANR	386121	CompoundStatement		11:68:218:218	386069	1					
ANR	386122	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	27171:2:864128:864192	386069	0	True				
ANR	386123	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		386069	0					
ANR	386124	Callee	zend_throw_error		386069	0					
ANR	386125	Identifier	zend_throw_error		386069	0					
ANR	386126	ArgumentList	NULL		386069	1					
ANR	386127	Argument	NULL		386069	0					
ANR	386128	Identifier	NULL		386069	0					
ANR	386129	Argument	"""Using $this when not in object context"""		386069	1					
ANR	386130	PrimaryExpression	"""Using $this when not in object context"""		386069	0					
ANR	386131	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	27172:2:864196:864239	386069	1	True				
ANR	386132	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		386069	0					
ANR	386133	Callee	zval_ptr_dtor_nogc		386069	0					
ANR	386134	Identifier	zval_ptr_dtor_nogc		386069	0					
ANR	386135	ArgumentList	EX_VAR ( opline -> op2 . var )		386069	1					
ANR	386136	Argument	EX_VAR ( opline -> op2 . var )		386069	0					
ANR	386137	CallExpression	EX_VAR ( opline -> op2 . var )		386069	0					
ANR	386138	Callee	EX_VAR		386069	0					
ANR	386139	Identifier	EX_VAR		386069	0					
ANR	386140	ArgumentList	opline -> op2 . var		386069	1					
ANR	386141	Argument	opline -> op2 . var		386069	0					
ANR	386142	MemberAccess	opline -> op2 . var		386069	0					
ANR	386143	PtrMemberAccess	opline -> op2		386069	0					
ANR	386144	Identifier	opline		386069	0					
ANR	386145	Identifier	op2		386069	1					
ANR	386146	Identifier	var		386069	1					
ANR	386147	ExpressionStatement	HANDLE_EXCEPTION ( )	27173:2:864243:864261	386069	2	True				
ANR	386148	CallExpression	HANDLE_EXCEPTION ( )		386069	0					
ANR	386149	Callee	HANDLE_EXCEPTION		386069	0					
ANR	386150	Identifier	HANDLE_EXCEPTION		386069	0					
ANR	386151	ArgumentList			386069	1					
ANR	386152	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	27176:1:864268:864338	386069	7	True				
ANR	386153	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		386069	0		=			
ANR	386154	Identifier	property		386069	0					
ANR	386155	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		386069	1					
ANR	386156	Callee	_get_zval_ptr_var		386069	0					
ANR	386157	Identifier	_get_zval_ptr_var		386069	0					
ANR	386158	ArgumentList	opline -> op2 . var		386069	1					
ANR	386159	Argument	opline -> op2 . var		386069	0					
ANR	386160	MemberAccess	opline -> op2 . var		386069	0					
ANR	386161	PtrMemberAccess	opline -> op2		386069	0					
ANR	386162	Identifier	opline		386069	0					
ANR	386163	Identifier	op2		386069	1					
ANR	386164	Identifier	var		386069	1					
ANR	386165	Argument	execute_data		386069	1					
ANR	386166	Identifier	execute_data		386069	0					
ANR	386167	Argument	& free_op2		386069	2					
ANR	386168	UnaryOperationExpression	& free_op2		386069	0					
ANR	386169	UnaryOperator	&		386069	0					
ANR	386170	Identifier	free_op2		386069	1					
ANR	386171	IfStatement	if ( IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL ) )		386069	8					
ANR	386172	Condition	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )	27178:5:864346:864394	386069	0	True				
ANR	386173	AndExpression	IS_UNUSED == IS_VAR && UNEXPECTED ( object == NULL )		386069	0		&&			
ANR	386174	EqualityExpression	IS_UNUSED == IS_VAR		386069	0		==			
ANR	386175	Identifier	IS_UNUSED		386069	0					
ANR	386176	Identifier	IS_VAR		386069	1					
ANR	386177	CallExpression	UNEXPECTED ( object == NULL )		386069	1					
ANR	386178	Callee	UNEXPECTED		386069	0					
ANR	386179	Identifier	UNEXPECTED		386069	0					
ANR	386180	ArgumentList	object == NULL		386069	1					
ANR	386181	Argument	object == NULL		386069	0					
ANR	386182	EqualityExpression	object == NULL		386069	0		==			
ANR	386183	Identifier	object		386069	0					
ANR	386184	Identifier	NULL		386069	1					
ANR	386185	CompoundStatement		19:56:491:491	386069	1					
ANR	386186	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	27179:2:864401:864491	386069	0	True				
ANR	386187	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		386069	0					
ANR	386188	Callee	zend_throw_error		386069	0					
ANR	386189	Identifier	zend_throw_error		386069	0					
ANR	386190	ArgumentList	NULL		386069	1					
ANR	386191	Argument	NULL		386069	0					
ANR	386192	Identifier	NULL		386069	0					
ANR	386193	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		386069	1					
ANR	386194	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		386069	0					
ANR	386195	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	27180:2:864495:864523	386069	1	True				
ANR	386196	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		386069	0					
ANR	386197	Callee	zval_ptr_dtor_nogc		386069	0					
ANR	386198	Identifier	zval_ptr_dtor_nogc		386069	0					
ANR	386199	ArgumentList	free_op2		386069	1					
ANR	386200	Argument	free_op2		386069	0					
ANR	386201	Identifier	free_op2		386069	0					
ANR	386202	ExpressionStatement	HANDLE_EXCEPTION ( )	27181:2:864527:864545	386069	2	True				
ANR	386203	CallExpression	HANDLE_EXCEPTION ( )		386069	0					
ANR	386204	Callee	HANDLE_EXCEPTION		386069	0					
ANR	386205	Identifier	HANDLE_EXCEPTION		386069	0					
ANR	386206	ArgumentList			386069	1					
ANR	386207	DoStatement	do		386069	9					
ANR	386208	CompoundStatement		25:4:649:649	386069	0					
ANR	386209	IfStatement	if ( IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		386069	0					
ANR	386210	Condition	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	27185:6:864563:864629	386069	0	True				
ANR	386211	AndExpression	IS_UNUSED != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		386069	0		&&			
ANR	386212	EqualityExpression	IS_UNUSED != IS_UNUSED		386069	0		!=			
ANR	386213	Identifier	IS_UNUSED		386069	0					
ANR	386214	Identifier	IS_UNUSED		386069	1					
ANR	386215	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		386069	1					
ANR	386216	Callee	UNEXPECTED		386069	0					
ANR	386217	Identifier	UNEXPECTED		386069	0					
ANR	386218	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		386069	1					
ANR	386219	Argument	Z_TYPE_P ( object ) != IS_OBJECT		386069	0					
ANR	386220	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		386069	0		!=			
ANR	386221	CallExpression	Z_TYPE_P ( object )		386069	0					
ANR	386222	Callee	Z_TYPE_P		386069	0					
ANR	386223	Identifier	Z_TYPE_P		386069	0					
ANR	386224	ArgumentList	object		386069	1					
ANR	386225	Argument	object		386069	0					
ANR	386226	Identifier	object		386069	0					
ANR	386227	Identifier	IS_OBJECT		386069	1					
ANR	386228	CompoundStatement		26:75:726:726	386069	1					
ANR	386229	ExpressionStatement	ZVAL_DEREF ( object )	27186:3:864637:864655	386069	0	True				
ANR	386230	CallExpression	ZVAL_DEREF ( object )		386069	0					
ANR	386231	Callee	ZVAL_DEREF		386069	0					
ANR	386232	Identifier	ZVAL_DEREF		386069	0					
ANR	386233	ArgumentList	object		386069	1					
ANR	386234	Argument	object		386069	0					
ANR	386235	Identifier	object		386069	0					
ANR	386236	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		386069	1					
ANR	386237	Condition	UNEXPECTED ( ! make_real_object ( object ) )	27187:7:864664:864700	386069	0	True				
ANR	386238	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		386069	0					
ANR	386239	Callee	UNEXPECTED		386069	0					
ANR	386240	Identifier	UNEXPECTED		386069	0					
ANR	386241	ArgumentList	! make_real_object ( object )		386069	1					
ANR	386242	Argument	! make_real_object ( object )		386069	0					
ANR	386243	UnaryOperationExpression	! make_real_object ( object )		386069	0					
ANR	386244	UnaryOperator	!		386069	0					
ANR	386245	CallExpression	make_real_object ( object )		386069	1					
ANR	386246	Callee	make_real_object		386069	0					
ANR	386247	Identifier	make_real_object		386069	0					
ANR	386248	ArgumentList	object		386069	1					
ANR	386249	Argument	object		386069	0					
ANR	386250	Identifier	object		386069	0					
ANR	386251	CompoundStatement		28:46:797:797	386069	1					
ANR	386252	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	27188:4:864709:864787	386069	0	True				
ANR	386253	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		386069	0					
ANR	386254	Callee	zend_error		386069	0					
ANR	386255	Identifier	zend_error		386069	0					
ANR	386256	ArgumentList	E_WARNING		386069	1					
ANR	386257	Argument	E_WARNING		386069	0					
ANR	386258	Identifier	E_WARNING		386069	0					
ANR	386259	Argument	"""Attempt to increment/decrement property of non-object"""		386069	1					
ANR	386260	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		386069	0					
ANR	386261	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	27189:4:864793:864830	386069	1	True				
ANR	386262	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		386069	0					
ANR	386263	Callee	ZVAL_NULL		386069	0					
ANR	386264	Identifier	ZVAL_NULL		386069	0					
ANR	386265	ArgumentList	EX_VAR ( opline -> result . var )		386069	1					
ANR	386266	Argument	EX_VAR ( opline -> result . var )		386069	0					
ANR	386267	CallExpression	EX_VAR ( opline -> result . var )		386069	0					
ANR	386268	Callee	EX_VAR		386069	0					
ANR	386269	Identifier	EX_VAR		386069	0					
ANR	386270	ArgumentList	opline -> result . var		386069	1					
ANR	386271	Argument	opline -> result . var		386069	0					
ANR	386272	MemberAccess	opline -> result . var		386069	0					
ANR	386273	PtrMemberAccess	opline -> result		386069	0					
ANR	386274	Identifier	opline		386069	0					
ANR	386275	Identifier	result		386069	1					
ANR	386276	Identifier	var		386069	1					
ANR	386277	BreakStatement	break ;	27190:4:864836:864841	386069	2	True				
ANR	386278	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		386069	1					
ANR	386279	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	27196:6:864915:865150	386069	0	True				
ANR	386280	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		386069	0		&&			
ANR	386281	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		386069	0					
ANR	386282	Callee	EXPECTED		386069	0					
ANR	386283	Identifier	EXPECTED		386069	0					
ANR	386284	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386069	1					
ANR	386285	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386069	0					
ANR	386286	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386069	0					
ANR	386287	CallExpression	Z_OBJ_HT_P ( object )		386069	0					
ANR	386288	Callee	Z_OBJ_HT_P		386069	0					
ANR	386289	Identifier	Z_OBJ_HT_P		386069	0					
ANR	386290	ArgumentList	object		386069	1					
ANR	386291	Argument	object		386069	0					
ANR	386292	Identifier	object		386069	0					
ANR	386293	Identifier	get_property_ptr_ptr		386069	1					
ANR	386294	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		386069	1					
ANR	386295	Callee	EXPECTED		386069	0					
ANR	386296	Identifier	EXPECTED		386069	0					
ANR	386297	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		386069	1					
ANR	386298	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		386069	0					
ANR	386299	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		386069	0		!=			
ANR	386300	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		386069	0		=			
ANR	386301	Identifier	zptr		386069	0					
ANR	386302	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		386069	1					
ANR	386303	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386069	0					
ANR	386304	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386069	0					
ANR	386305	CallExpression	Z_OBJ_HT_P ( object )		386069	0					
ANR	386306	Callee	Z_OBJ_HT_P		386069	0					
ANR	386307	Identifier	Z_OBJ_HT_P		386069	0					
ANR	386308	ArgumentList	object		386069	1					
ANR	386309	Argument	object		386069	0					
ANR	386310	Identifier	object		386069	0					
ANR	386311	Identifier	get_property_ptr_ptr		386069	1					
ANR	386312	ArgumentList	object		386069	1					
ANR	386313	Argument	object		386069	0					
ANR	386314	Identifier	object		386069	0					
ANR	386315	Argument	property		386069	1					
ANR	386316	Identifier	property		386069	0					
ANR	386317	Argument	BP_VAR_RW		386069	2					
ANR	386318	Identifier	BP_VAR_RW		386069	0					
ANR	386319	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386069	3					
ANR	386320	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386069	0					
ANR	386321	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		386069	0					
ANR	386322	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		386069	0		==			
ANR	386323	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		386069	0		|			
ANR	386324	Identifier	IS_TMP_VAR		386069	0					
ANR	386325	Identifier	IS_VAR		386069	1					
ANR	386326	Identifier	IS_CONST		386069	1					
ANR	386327	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		386069	1					
ANR	386328	Callee	CACHE_ADDR		386069	0					
ANR	386329	Identifier	CACHE_ADDR		386069	0					
ANR	386330	ArgumentList	Z_CACHE_SLOT_P ( property )		386069	1					
ANR	386331	Argument	Z_CACHE_SLOT_P ( property )		386069	0					
ANR	386332	CallExpression	Z_CACHE_SLOT_P ( property )		386069	0					
ANR	386333	Callee	Z_CACHE_SLOT_P		386069	0					
ANR	386334	Identifier	Z_CACHE_SLOT_P		386069	0					
ANR	386335	ArgumentList	property		386069	1					
ANR	386336	Argument	property		386069	0					
ANR	386337	Identifier	property		386069	0					
ANR	386338	Identifier	NULL		386069	2					
ANR	386339	Identifier	NULL		386069	1					
ANR	386340	CompoundStatement		38:187:1247:1247	386069	1					
ANR	386341	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		386069	0					
ANR	386342	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	27199:7:865163:865197	386069	0	True				
ANR	386343	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		386069	0					
ANR	386344	Callee	EXPECTED		386069	0					
ANR	386345	Identifier	EXPECTED		386069	0					
ANR	386346	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		386069	1					
ANR	386347	Argument	Z_TYPE_P ( zptr ) == IS_LONG		386069	0					
ANR	386348	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		386069	0		==			
ANR	386349	CallExpression	Z_TYPE_P ( zptr )		386069	0					
ANR	386350	Callee	Z_TYPE_P		386069	0					
ANR	386351	Identifier	Z_TYPE_P		386069	0					
ANR	386352	ArgumentList	zptr		386069	1					
ANR	386353	Argument	zptr		386069	0					
ANR	386354	Identifier	zptr		386069	0					
ANR	386355	Identifier	IS_LONG		386069	1					
ANR	386356	CompoundStatement		40:44:1294:1294	386069	1					
ANR	386357	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	27200:4:865206:865255	386069	0	True				
ANR	386358	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		386069	0					
ANR	386359	Callee	ZVAL_COPY_VALUE		386069	0					
ANR	386360	Identifier	ZVAL_COPY_VALUE		386069	0					
ANR	386361	ArgumentList	EX_VAR ( opline -> result . var )		386069	1					
ANR	386362	Argument	EX_VAR ( opline -> result . var )		386069	0					
ANR	386363	CallExpression	EX_VAR ( opline -> result . var )		386069	0					
ANR	386364	Callee	EX_VAR		386069	0					
ANR	386365	Identifier	EX_VAR		386069	0					
ANR	386366	ArgumentList	opline -> result . var		386069	1					
ANR	386367	Argument	opline -> result . var		386069	0					
ANR	386368	MemberAccess	opline -> result . var		386069	0					
ANR	386369	PtrMemberAccess	opline -> result		386069	0					
ANR	386370	Identifier	opline		386069	0					
ANR	386371	Identifier	result		386069	1					
ANR	386372	Identifier	var		386069	1					
ANR	386373	Argument	zptr		386069	1					
ANR	386374	Identifier	zptr		386069	0					
ANR	386375	IfStatement	if ( inc )		386069	1					
ANR	386376	Condition	inc	27201:8:865265:865267	386069	0	True				
ANR	386377	Identifier	inc		386069	0					
ANR	386378	CompoundStatement		42:13:1364:1364	386069	1					
ANR	386379	ExpressionStatement	fast_long_increment_function ( zptr )	27202:5:865277:865311	386069	0	True				
ANR	386380	CallExpression	fast_long_increment_function ( zptr )		386069	0					
ANR	386381	Callee	fast_long_increment_function		386069	0					
ANR	386382	Identifier	fast_long_increment_function		386069	0					
ANR	386383	ArgumentList	zptr		386069	1					
ANR	386384	Argument	zptr		386069	0					
ANR	386385	Identifier	zptr		386069	0					
ANR	386386	ElseStatement	else		386069	0					
ANR	386387	CompoundStatement		44:11:1418:1418	386069	0					
ANR	386388	ExpressionStatement	fast_long_decrement_function ( zptr )	27204:5:865331:865365	386069	0	True				
ANR	386389	CallExpression	fast_long_decrement_function ( zptr )		386069	0					
ANR	386390	Callee	fast_long_decrement_function		386069	0					
ANR	386391	Identifier	fast_long_decrement_function		386069	0					
ANR	386392	ArgumentList	zptr		386069	1					
ANR	386393	Argument	zptr		386069	0					
ANR	386394	Identifier	zptr		386069	0					
ANR	386395	ElseStatement	else		386069	0					
ANR	386396	CompoundStatement		47:10:1477:1477	386069	0					
ANR	386397	ExpressionStatement	ZVAL_DEREF ( zptr )	27207:4:865389:865405	386069	0	True				
ANR	386398	CallExpression	ZVAL_DEREF ( zptr )		386069	0					
ANR	386399	Callee	ZVAL_DEREF		386069	0					
ANR	386400	Identifier	ZVAL_DEREF		386069	0					
ANR	386401	ArgumentList	zptr		386069	1					
ANR	386402	Argument	zptr		386069	0					
ANR	386403	Identifier	zptr		386069	0					
ANR	386404	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	27208:4:865411:865460	386069	1	True				
ANR	386405	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		386069	0					
ANR	386406	Callee	ZVAL_COPY_VALUE		386069	0					
ANR	386407	Identifier	ZVAL_COPY_VALUE		386069	0					
ANR	386408	ArgumentList	EX_VAR ( opline -> result . var )		386069	1					
ANR	386409	Argument	EX_VAR ( opline -> result . var )		386069	0					
ANR	386410	CallExpression	EX_VAR ( opline -> result . var )		386069	0					
ANR	386411	Callee	EX_VAR		386069	0					
ANR	386412	Identifier	EX_VAR		386069	0					
ANR	386413	ArgumentList	opline -> result . var		386069	1					
ANR	386414	Argument	opline -> result . var		386069	0					
ANR	386415	MemberAccess	opline -> result . var		386069	0					
ANR	386416	PtrMemberAccess	opline -> result		386069	0					
ANR	386417	Identifier	opline		386069	0					
ANR	386418	Identifier	result		386069	1					
ANR	386419	Identifier	var		386069	1					
ANR	386420	Argument	zptr		386069	1					
ANR	386421	Identifier	zptr		386069	0					
ANR	386422	ExpressionStatement	zval_opt_copy_ctor ( zptr )	27209:4:865466:865490	386069	2	True				
ANR	386423	CallExpression	zval_opt_copy_ctor ( zptr )		386069	0					
ANR	386424	Callee	zval_opt_copy_ctor		386069	0					
ANR	386425	Identifier	zval_opt_copy_ctor		386069	0					
ANR	386426	ArgumentList	zptr		386069	1					
ANR	386427	Argument	zptr		386069	0					
ANR	386428	Identifier	zptr		386069	0					
ANR	386429	IfStatement	if ( inc )		386069	3					
ANR	386430	Condition	inc	27210:8:865500:865502	386069	0	True				
ANR	386431	Identifier	inc		386069	0					
ANR	386432	CompoundStatement		51:13:1599:1599	386069	1					
ANR	386433	ExpressionStatement	increment_function ( zptr )	27211:5:865512:865536	386069	0	True				
ANR	386434	CallExpression	increment_function ( zptr )		386069	0					
ANR	386435	Callee	increment_function		386069	0					
ANR	386436	Identifier	increment_function		386069	0					
ANR	386437	ArgumentList	zptr		386069	1					
ANR	386438	Argument	zptr		386069	0					
ANR	386439	Identifier	zptr		386069	0					
ANR	386440	ElseStatement	else		386069	0					
ANR	386441	CompoundStatement		53:11:1643:1643	386069	0					
ANR	386442	ExpressionStatement	decrement_function ( zptr )	27213:5:865556:865580	386069	0	True				
ANR	386443	CallExpression	decrement_function ( zptr )		386069	0					
ANR	386444	Callee	decrement_function		386069	0					
ANR	386445	Identifier	decrement_function		386069	0					
ANR	386446	ArgumentList	zptr		386069	1					
ANR	386447	Argument	zptr		386069	0					
ANR	386448	Identifier	zptr		386069	0					
ANR	386449	ElseStatement	else		386069	0					
ANR	386450	CompoundStatement		57:9:1696:1696	386069	0					
ANR	386451	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	27217:3:865607:865777	386069	0	True				
ANR	386452	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		386069	0					
ANR	386453	Callee	zend_post_incdec_overloaded_property		386069	0					
ANR	386454	Identifier	zend_post_incdec_overloaded_property		386069	0					
ANR	386455	ArgumentList	object		386069	1					
ANR	386456	Argument	object		386069	0					
ANR	386457	Identifier	object		386069	0					
ANR	386458	Argument	property		386069	1					
ANR	386459	Identifier	property		386069	0					
ANR	386460	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386069	2					
ANR	386461	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386069	0					
ANR	386462	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		386069	0					
ANR	386463	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		386069	0		==			
ANR	386464	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		386069	0		|			
ANR	386465	Identifier	IS_TMP_VAR		386069	0					
ANR	386466	Identifier	IS_VAR		386069	1					
ANR	386467	Identifier	IS_CONST		386069	1					
ANR	386468	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		386069	1					
ANR	386469	Callee	CACHE_ADDR		386069	0					
ANR	386470	Identifier	CACHE_ADDR		386069	0					
ANR	386471	ArgumentList	Z_CACHE_SLOT_P ( property )		386069	1					
ANR	386472	Argument	Z_CACHE_SLOT_P ( property )		386069	0					
ANR	386473	CallExpression	Z_CACHE_SLOT_P ( property )		386069	0					
ANR	386474	Callee	Z_CACHE_SLOT_P		386069	0					
ANR	386475	Identifier	Z_CACHE_SLOT_P		386069	0					
ANR	386476	ArgumentList	property		386069	1					
ANR	386477	Argument	property		386069	0					
ANR	386478	Identifier	property		386069	0					
ANR	386479	Identifier	NULL		386069	2					
ANR	386480	Argument	inc		386069	3					
ANR	386481	Identifier	inc		386069	0					
ANR	386482	Argument	EX_VAR ( opline -> result . var )		386069	4					
ANR	386483	CallExpression	EX_VAR ( opline -> result . var )		386069	0					
ANR	386484	Callee	EX_VAR		386069	0					
ANR	386485	Identifier	EX_VAR		386069	0					
ANR	386486	ArgumentList	opline -> result . var		386069	1					
ANR	386487	Argument	opline -> result . var		386069	0					
ANR	386488	MemberAccess	opline -> result . var		386069	0					
ANR	386489	PtrMemberAccess	opline -> result		386069	0					
ANR	386490	Identifier	opline		386069	0					
ANR	386491	Identifier	result		386069	1					
ANR	386492	Identifier	var		386069	1					
ANR	386493	Condition	0	27219:10:865793:865793	386069	1	True				
ANR	386494	PrimaryExpression	0		386069	0					
ANR	386495	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	27221:1:865799:865827	386069	10	True				
ANR	386496	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		386069	0					
ANR	386497	Callee	zval_ptr_dtor_nogc		386069	0					
ANR	386498	Identifier	zval_ptr_dtor_nogc		386069	0					
ANR	386499	ArgumentList	free_op2		386069	1					
ANR	386500	Argument	free_op2		386069	0					
ANR	386501	Identifier	free_op2		386069	0					
ANR	386502	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	27223:1:865831:865868	386069	11	True				
ANR	386503	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		386069	0					
ANR	386504	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		386069	0					
ANR	386505	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		386069	0					
ANR	386506	ArgumentList			386069	1					
ANR	386507	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		386069	1					
ANR	386508	Identifier	zend_post_incdec_property_helper_SPEC_UNUSED_TMPVAR		386069	2					
ANR	386509	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		386069	3					
ANR	386510	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	27159:97:863868:863902	386069	0	True				
ANR	386511	ParameterType	int inc		386069	0					
ANR	386512	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		386069	1					
ANR	386513	CFGEntryNode	ENTRY		386069		True				
ANR	386514	CFGExitNode	EXIT		386069		True				
ANR	386515	Symbol	opline -> op2		386069						
ANR	386516	Symbol	opline -> op2 . var		386069						
ANR	386517	Symbol	Z_OBJ_P		386069						
ANR	386518	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386069						
ANR	386519	Symbol	free_op2		386069						
ANR	386520	Symbol	zptr		386069						
ANR	386521	Symbol	execute_data		386069						
ANR	386522	Symbol	opline -> result		386069						
ANR	386523	Symbol	_get_obj_zval_ptr_unused		386069						
ANR	386524	Symbol	UNEXPECTED		386069						
ANR	386525	Symbol	& free_op2		386069						
ANR	386526	Symbol	E_WARNING		386069						
ANR	386527	Symbol	make_real_object		386069						
ANR	386528	Symbol	opline		386069						
ANR	386529	Symbol	IS_LONG		386069						
ANR	386530	Symbol	property		386069						
ANR	386531	Symbol	IS_TMP_VAR		386069						
ANR	386532	Symbol	inc		386069						
ANR	386533	Symbol	BP_VAR_RW		386069						
ANR	386534	Symbol	IS_CONST		386069						
ANR	386535	Symbol	NULL		386069						
ANR	386536	Symbol	Z_CACHE_SLOT_P		386069						
ANR	386537	Symbol	Z_TYPE_P		386069						
ANR	386538	Symbol	* Z_OBJ_HT_P		386069						
ANR	386539	Symbol	CACHE_ADDR		386069						
ANR	386540	Symbol	* opline		386069						
ANR	386541	Symbol	_get_zval_ptr_var		386069						
ANR	386542	Symbol	Z_OBJ_HT_P		386069						
ANR	386543	Symbol	EX_VAR		386069						
ANR	386544	Symbol	IS_OBJECT		386069						
ANR	386545	Symbol	IS_VAR		386069						
ANR	386546	Symbol	EXPECTED		386069						
ANR	386547	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		386069						
ANR	386548	Symbol	opline -> result . var		386069						
ANR	386549	Symbol	object		386069						
ANR	386550	Symbol	IS_UNUSED		386069						
ANR	386551	DeclStmt									
ANR	386552	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	386553	DeclStmt									
ANR	386554	Decl							zend_free_op	zend_free_op	free_op2
ANR	386555	DeclStmt									
ANR	386556	Decl							zval	zval *	offset
ANR	386557	DeclStmt									
ANR	386558	Decl							zend_object	zend_object *	zobj
ANR	386559	DeclStmt									
ANR	386560	Decl							zval	zval *	retval
ANR	386561	DeclStmt									
ANR	386562	Decl							uint32_t	uint32_t	prop_offset
ANR	386563	DeclStmt									
ANR	386564	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	386565	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386566	DeclStmt									
ANR	386567	Decl							zval	zval *	property
ANR	386568	DeclStmt									
ANR	386569	Decl							zval	zval *	container
ANR	386570	DeclStmt									
ANR	386571	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	386572	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386573	DeclStmt									
ANR	386574	Decl							zval	zval *	property
ANR	386575	DeclStmt									
ANR	386576	Decl							zval	zval *	container
ANR	386577	DeclStmt									
ANR	386578	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	386579	DeclStmt									
ANR	386580	Decl							zend_free_op	zend_free_op	free_op2
ANR	386581	DeclStmt									
ANR	386582	Decl							zval	zval *	offset
ANR	386583	DeclStmt									
ANR	386584	Decl							zend_object	zend_object *	zobj
ANR	386585	DeclStmt									
ANR	386586	Decl							zval	zval *	retval
ANR	386587	DeclStmt									
ANR	386588	Decl							uint32_t	uint32_t	prop_offset
ANR	386589	DeclStmt									
ANR	386590	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	386591	DeclStmt									
ANR	386592	Decl							zend_free_op	zend_free_op	free_op1
ANR	386593	Decl							zend_free_op	zend_free_op	free_op2
ANR	386594	DeclStmt									
ANR	386595	Decl							zval	zval *	property
ANR	386596	DeclStmt									
ANR	386597	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	386598	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386599	DeclStmt									
ANR	386600	Decl							zval	zval *	container
ANR	386601	Decl							zval	zval *	property
ANR	386602	DeclStmt									
ANR	386603	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386604	DeclStmt									
ANR	386605	Decl							zval	zval *	object
ANR	386606	DeclStmt									
ANR	386607	Decl							zval	zval *	property_name
ANR	386608	DeclStmt									
ANR	386609	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386610	DeclStmt									
ANR	386611	Decl							zend_string	zend_string * *	rope
ANR	386612	DeclStmt									
ANR	386613	Decl							zval	zval *	var
ANR	386614	DeclStmt									
ANR	386615	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	386616	DeclStmt									
ANR	386617	Decl							zend_free_op	zend_free_op	free_op2
ANR	386618	DeclStmt									
ANR	386619	Decl							zval	zval *	object
ANR	386620	DeclStmt									
ANR	386621	Decl							zend_function	zend_function *	fbc
ANR	386622	DeclStmt									
ANR	386623	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	386624	DeclStmt									
ANR	386625	Decl							zend_object	zend_object *	obj
ANR	386626	DeclStmt									
ANR	386627	Decl							zend_execute_data	zend_execute_data *	call
ANR	386628	DeclStmt									
ANR	386629	Decl							uint32_t	uint32_t	call_info
ANR	386630	DeclStmt									
ANR	386631	Decl							zend_object	zend_object *	orig_obj
ANR	386632	DeclStmt									
ANR	386633	Decl							zval	zval *	array
ANR	386634	DeclStmt									
ANR	386635	Decl							uint32_t	uint32_t	size
ANR	386636	DeclStmt									
ANR	386637	Decl							USE_OPLINE	USE_OPLINE	array
ANR	386638	DeclStmt									
ANR	386639	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386640	DeclStmt									
ANR	386641	Decl							zval	zval *	container
ANR	386642	DeclStmt									
ANR	386643	Decl							zval	zval *	offset
ANR	386644	DeclStmt									
ANR	386645	Decl							zend_ulong	zend_ulong	hval
ANR	386646	DeclStmt									
ANR	386647	Decl							zend_string	zend_string *	key
ANR	386648	DeclStmt									
ANR	386649	Decl							HashTable	HashTable *	ht
ANR	386650	DeclStmt									
ANR	386651	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386652	DeclStmt									
ANR	386653	Decl							zval	zval *	container
ANR	386654	DeclStmt									
ANR	386655	Decl							zval	zval *	offset
ANR	386656	DeclStmt									
ANR	386657	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386658	DeclStmt									
ANR	386659	Decl							zval	zval *	container
ANR	386660	DeclStmt									
ANR	386661	Decl							int	int	result
ANR	386662	DeclStmt									
ANR	386663	Decl							zend_ulong	zend_ulong	hval
ANR	386664	DeclStmt									
ANR	386665	Decl							zval	zval *	offset
ANR	386666	DeclStmt									
ANR	386667	Decl							HashTable	HashTable *	ht
ANR	386668	DeclStmt									
ANR	386669	Decl							zval	zval *	value
ANR	386670	DeclStmt									
ANR	386671	Decl							zend_string	zend_string *	str
ANR	386672	DeclStmt									
ANR	386673	Decl							zend_long	zend_long	lval
ANR	386674	DeclStmt									
ANR	386675	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	386676	DeclStmt									
ANR	386677	Decl							zval	zval *	container
ANR	386678	DeclStmt									
ANR	386679	Decl							int	int	result
ANR	386680	DeclStmt									
ANR	386681	Decl							zval	zval *	offset
ANR	386682	DeclStmt									
ANR	386683	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	386684	DeclStmt									
ANR	386685	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	386686	DeclStmt									
ANR	386687	Decl							USE_OPLINE zval	USE_OPLINE zval *	var_ptr
ANR	386688	DeclStmt									
ANR	386689	Decl							USE_OPLINE zval	USE_OPLINE zval *	var_ptr
ANR	386690	DeclStmt									
ANR	386691	Decl							USE_OPLINE zval	USE_OPLINE zval *	var_ptr
ANR	386692	DeclStmt									
ANR	386693	Decl							USE_OPLINE zval	USE_OPLINE zval *	var_ptr
ANR	386694	DeclStmt									
ANR	386695	Decl							USE_OPLINE zval	USE_OPLINE zval *	z
ANR	386696	DeclStmt									
ANR	386697	Decl							zend_string	zend_string *	str
ANR	386698	DeclStmt									
ANR	386699	Decl							zend_string	zend_string *	str
ANR	386700	DeclStmt									
ANR	386701	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	386702	DeclStmt									
ANR	386703	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	386704	DeclStmt									
ANR	386705	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	386706	DeclStmt									
ANR	386707	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	386708	DeclStmt									
ANR	386709	Decl							int	int	ret
ANR	386710	DeclStmt									
ANR	386711	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	386712	DeclStmt									
ANR	386713	Decl							int	int	ret
ANR	386714	DeclStmt									
ANR	386715	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	386716	DeclStmt									
ANR	386717	Decl							zend_free_op	zend_free_op	free_op1
ANR	386718	DeclStmt									
ANR	386719	Decl							zend_refcounted	zend_refcounted *	ref
ANR	386720	DeclStmt									
ANR	386721	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval_ptr
ANR	386722	DeclStmt									
ANR	386723	Decl							USE_OPLINE zval	USE_OPLINE zval *	retval
ANR	386724	DeclStmt									
ANR	386725	Decl							zend_generator	zend_generator *	generator
ANR	386726	DeclStmt									
ANR	386727	Decl							zend_refcounted	zend_refcounted *	ref
ANR	386728	DeclStmt									
ANR	386729	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	386730	DeclStmt									
ANR	386731	Decl							USE_OPLINE zval	USE_OPLINE zval *	varptr
ANR	386732	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	386733	DeclStmt									
ANR	386734	Decl							zend_refcounted	zend_refcounted *	ref
ANR	386735	DeclStmt									
ANR	386736	Decl							USE_OPLINE zval	USE_OPLINE zval *	varptr
ANR	386737	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	386738	DeclStmt									
ANR	386739	Decl							USE_OPLINE zval	USE_OPLINE zval *	varptr
ANR	386740	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	386741	DeclStmt									
ANR	386742	Decl							uint32_t	uint32_t	arg_num
ANR	386743	DeclStmt									
ANR	386744	Decl							zend_refcounted	zend_refcounted *	ref
ANR	386745	DeclStmt									
ANR	386746	Decl							USE_OPLINE zval	USE_OPLINE zval *	arg
ANR	386747	Decl							USE_OPLINE zval	USE_OPLINE zval *	param
ANR	386748	DeclStmt									
ANR	386749	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	386750	DeclStmt									
ANR	386751	Decl							USE_OPLINE zval	USE_OPLINE zval *	obj
ANR	386752	DeclStmt									
ANR	386753	Decl							zend_class_entry	zend_class_entry *	ce
ANR	386754	DeclStmt									
ANR	386755	Decl							zend_function	zend_function *	clone
ANR	386756	DeclStmt									
ANR	386757	Decl							zend_object_clone_obj_t	zend_object_clone_obj_t	clone_call
ANR	386758	DeclStmt									
ANR	386759	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr
ANR	386760	DeclStmt									
ANR	386761	Decl							zval	zval *	result
ANR	386762	DeclStmt									
ANR	386763	Decl							USE_OPLINE zend_op_array	USE_OPLINE zend_op_array *	new_op_array
ANR	386764	DeclStmt									
ANR	386765	Decl							zval	zval *	inc_filename
ANR	386766	DeclStmt									
ANR	386767	Decl							zval	zval	tmp_inc_filename
ANR	386768	DeclStmt									
ANR	386769	Decl							zend_bool	zend_bool	failure_retval
ANR	386770	DeclStmt									
ANR	386771	Decl							zend_file_handle	zend_file_handle	file_handle
ANR	386772	DeclStmt									
ANR	386773	Decl							zend_string	zend_string *	resolved_path
ANR	386774	DeclStmt									
ANR	386775	Decl							char	char *	eval_desc
ANR	386776	DeclStmt									
ANR	386777	Decl							zval	zval *	return_value
ANR	386778	DeclStmt									
ANR	386779	Decl							zend_execute_data	zend_execute_data *	call
ANR	386780	DeclStmt									
ANR	386781	Decl							USE_OPLINE zval	USE_OPLINE zval *	array_ptr
ANR	386782	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386783	DeclStmt									
ANR	386784	Decl							HashTable	HashTable *	fe_ht
ANR	386785	DeclStmt									
ANR	386786	Decl							HashPosition	HashPosition	pos
ANR	386787	DeclStmt									
ANR	386788	Decl							Bucket	Bucket *	p
ANR	386789	DeclStmt									
ANR	386790	Decl							zend_class_entry	zend_class_entry *	ce
ANR	386791	DeclStmt									
ANR	386792	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	386793	DeclStmt									
ANR	386794	Decl							zend_bool	zend_bool	is_empty
ANR	386795	DeclStmt									
ANR	386796	Decl							USE_OPLINE zval	USE_OPLINE zval *	array_ptr
ANR	386797	Decl							USE_OPLINE zval	USE_OPLINE zval *	array_ref
ANR	386798	DeclStmt									
ANR	386799	Decl							HashTable	HashTable *	fe_ht
ANR	386800	DeclStmt									
ANR	386801	Decl							HashPosition	HashPosition	pos
ANR	386802	DeclStmt									
ANR	386803	Decl							Bucket	Bucket *	p
ANR	386804	DeclStmt									
ANR	386805	Decl							zend_class_entry	zend_class_entry *	ce
ANR	386806	DeclStmt									
ANR	386807	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	386808	DeclStmt									
ANR	386809	Decl							zend_bool	zend_bool	is_empty
ANR	386810	DeclStmt									
ANR	386811	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	386812	DeclStmt									
ANR	386813	Decl							zval	zval *	ptr
ANR	386814	DeclStmt									
ANR	386815	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	386816	DeclStmt									
ANR	386817	Decl							zval	zval *	ref
ANR	386818	DeclStmt									
ANR	386819	Decl							zend_reference	zend_reference *	r
ANR	386820	DeclStmt									
ANR	386821	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	386822	DeclStmt									
ANR	386823	Decl							zval	zval *	ref
ANR	386824	DeclStmt									
ANR	386825	Decl							zend_reference	zend_reference *	r
ANR	386826	DeclStmt									
ANR	386827	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	386828	DeclStmt									
ANR	386829	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	386830	DeclStmt									
ANR	386831	Decl							zval	zval *	val
ANR	386832	DeclStmt									
ANR	386833	Decl							zend_class_entry	zend_class_entry *	ce
ANR	386834	DeclStmt									
ANR	386835	Decl							zend_generator	zend_generator *	new_gen
ANR	386836	DeclStmt									
ANR	386837	Decl							zend_object_iterator	zend_object_iterator *	iter
ANR	386838	DeclStmt									
ANR	386839	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	386840	DeclStmt									
ANR	386841	Decl							zend_bool	zend_bool	strict
ANR	386842	DeclStmt									
ANR	386843	Decl							zend_string	zend_string *	str
ANR	386844	DeclStmt									
ANR	386845	Decl							zval	zval	tmp
ANR	386846	DeclStmt									
ANR	386847	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	386848	DeclStmt									
ANR	386849	Decl							int	int	result
ANR	386850	DeclStmt									
ANR	386851	Decl							zend_class_entry	zend_class_entry *	ce
ANR	386852	DeclStmt									
ANR	386853	Decl							const char	const char *	type_name
ANR	386854	DeclStmt									
ANR	386855	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386856	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386857	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386858	DeclStmt									
ANR	386859	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386860	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386861	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386862	DeclStmt									
ANR	386863	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386864	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386865	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386866	DeclStmt									
ANR	386867	Decl							zend_long	zend_long	overflow
ANR	386868	DeclStmt									
ANR	386869	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386870	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386871	DeclStmt									
ANR	386872	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386873	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386874	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386875	DeclStmt									
ANR	386876	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386877	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386878	DeclStmt									
ANR	386879	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386880	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386881	DeclStmt									
ANR	386882	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386883	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386884	DeclStmt									
ANR	386885	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386886	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386887	DeclStmt									
ANR	386888	Decl							zend_string	zend_string *	op1_str
ANR	386889	DeclStmt									
ANR	386890	Decl							zend_string	zend_string *	op2_str
ANR	386891	DeclStmt									
ANR	386892	Decl							zend_string	zend_string *	str
ANR	386893	DeclStmt									
ANR	386894	Decl							size_t	size_t	len
ANR	386895	DeclStmt									
ANR	386896	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386897	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386898	DeclStmt									
ANR	386899	Decl							int	int	result
ANR	386900	DeclStmt									
ANR	386901	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386902	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386903	DeclStmt									
ANR	386904	Decl							int	int	result
ANR	386905	DeclStmt									
ANR	386906	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386907	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386908	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386909	DeclStmt									
ANR	386910	Decl							int	int	result
ANR	386911	DeclStmt									
ANR	386912	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386913	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386914	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386915	DeclStmt									
ANR	386916	Decl							int	int	result
ANR	386917	DeclStmt									
ANR	386918	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386919	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386920	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386921	DeclStmt									
ANR	386922	Decl							int	int	result
ANR	386923	DeclStmt									
ANR	386924	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386925	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386926	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	386927	DeclStmt									
ANR	386928	Decl							int	int	result
ANR	386929	DeclStmt									
ANR	386930	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386931	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386932	DeclStmt									
ANR	386933	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386934	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386935	DeclStmt									
ANR	386936	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386937	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386938	DeclStmt									
ANR	386939	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386940	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386941	DeclStmt									
ANR	386942	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	386943	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	386944	Function	zend_binary_assign_op_obj_helper_SPEC_CV_CONST	30391:0:957406:959479							
ANR	386945	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_CV_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		386944	0					
ANR	386946	CompoundStatement		30392:0:957552:959479	386944	0					
ANR	386947	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	30393:1:957555:957593	386944	0	True				
ANR	386948	IdentifierDecl	free_op_data1		386944	0					
ANR	386949	IdentifierDeclType	USE_OPLINE zend_free_op		386944	0					
ANR	386950	Identifier	free_op_data1		386944	1					
ANR	386951	IdentifierDeclStatement	zval * object ;	30395:1:957596:957608	386944	1	True				
ANR	386952	IdentifierDecl	* object		386944	0					
ANR	386953	IdentifierDeclType	zval *		386944	0					
ANR	386954	Identifier	object		386944	1					
ANR	386955	IdentifierDeclStatement	zval * property ;	30396:1:957611:957625	386944	2	True				
ANR	386956	IdentifierDecl	* property		386944	0					
ANR	386957	IdentifierDeclType	zval *		386944	0					
ANR	386958	Identifier	property		386944	1					
ANR	386959	IdentifierDeclStatement	zval * value ;	30397:1:957628:957639	386944	3	True				
ANR	386960	IdentifierDecl	* value		386944	0					
ANR	386961	IdentifierDeclType	zval *		386944	0					
ANR	386962	Identifier	value		386944	1					
ANR	386963	IdentifierDeclStatement	zval * zptr ;	30398:1:957642:957652	386944	4	True				
ANR	386964	IdentifierDecl	* zptr		386944	0					
ANR	386965	IdentifierDeclType	zval *		386944	0					
ANR	386966	Identifier	zptr		386944	1					
ANR	386967	ExpressionStatement	SAVE_OPLINE ( )	30400:1:957656:957669	386944	5	True				
ANR	386968	CallExpression	SAVE_OPLINE ( )		386944	0					
ANR	386969	Callee	SAVE_OPLINE		386944	0					
ANR	386970	Identifier	SAVE_OPLINE		386944	0					
ANR	386971	ArgumentList			386944	1					
ANR	386972	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	30401:1:957672:957738	386944	6	True				
ANR	386973	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		386944	0		=			
ANR	386974	Identifier	object		386944	0					
ANR	386975	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		386944	1					
ANR	386976	Callee	_get_zval_ptr_cv_BP_VAR_RW		386944	0					
ANR	386977	Identifier	_get_zval_ptr_cv_BP_VAR_RW		386944	0					
ANR	386978	ArgumentList	execute_data		386944	1					
ANR	386979	Argument	execute_data		386944	0					
ANR	386980	Identifier	execute_data		386944	0					
ANR	386981	Argument	opline -> op1 . var		386944	1					
ANR	386982	MemberAccess	opline -> op1 . var		386944	0					
ANR	386983	PtrMemberAccess	opline -> op1		386944	0					
ANR	386984	Identifier	opline		386944	0					
ANR	386985	Identifier	op1		386944	1					
ANR	386986	Identifier	var		386944	1					
ANR	386987	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		386944	7					
ANR	386988	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	30403:5:957746:957802	386944	0	True				
ANR	386989	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		386944	0		&&			
ANR	386990	EqualityExpression	IS_CV == IS_UNUSED		386944	0		==			
ANR	386991	Identifier	IS_CV		386944	0					
ANR	386992	Identifier	IS_UNUSED		386944	1					
ANR	386993	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		386944	1					
ANR	386994	Callee	UNEXPECTED		386944	0					
ANR	386995	Identifier	UNEXPECTED		386944	0					
ANR	386996	ArgumentList	Z_OBJ_P ( object ) == NULL		386944	1					
ANR	386997	Argument	Z_OBJ_P ( object ) == NULL		386944	0					
ANR	386998	EqualityExpression	Z_OBJ_P ( object ) == NULL		386944	0		==			
ANR	386999	CallExpression	Z_OBJ_P ( object )		386944	0					
ANR	387000	Callee	Z_OBJ_P		386944	0					
ANR	387001	Identifier	Z_OBJ_P		386944	0					
ANR	387002	ArgumentList	object		386944	1					
ANR	387003	Argument	object		386944	0					
ANR	387004	Identifier	object		386944	0					
ANR	387005	Identifier	NULL		386944	1					
ANR	387006	CompoundStatement		12:64:252:252	386944	1					
ANR	387007	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	30404:2:957809:957873	386944	0	True				
ANR	387008	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		386944	0					
ANR	387009	Callee	zend_throw_error		386944	0					
ANR	387010	Identifier	zend_throw_error		386944	0					
ANR	387011	ArgumentList	NULL		386944	1					
ANR	387012	Argument	NULL		386944	0					
ANR	387013	Identifier	NULL		386944	0					
ANR	387014	Argument	"""Using $this when not in object context"""		386944	1					
ANR	387015	PrimaryExpression	"""Using $this when not in object context"""		386944	0					
ANR	387016	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	30405:2:957877:957937	386944	1	True				
ANR	387017	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		386944	0					
ANR	387018	Callee	FREE_UNFETCHED_OP		386944	0					
ANR	387019	Identifier	FREE_UNFETCHED_OP		386944	0					
ANR	387020	ArgumentList	( opline + 1 ) -> op1_type		386944	1					
ANR	387021	Argument	( opline + 1 ) -> op1_type		386944	0					
ANR	387022	PtrMemberAccess	( opline + 1 ) -> op1_type		386944	0					
ANR	387023	AdditiveExpression	opline + 1		386944	0		+			
ANR	387024	Identifier	opline		386944	0					
ANR	387025	PrimaryExpression	1		386944	1					
ANR	387026	Identifier	op1_type		386944	1					
ANR	387027	Argument	( opline + 1 ) -> op1 . var		386944	1					
ANR	387028	MemberAccess	( opline + 1 ) -> op1 . var		386944	0					
ANR	387029	PtrMemberAccess	( opline + 1 ) -> op1		386944	0					
ANR	387030	AdditiveExpression	opline + 1		386944	0		+			
ANR	387031	Identifier	opline		386944	0					
ANR	387032	PrimaryExpression	1		386944	1					
ANR	387033	Identifier	op1		386944	1					
ANR	387034	Identifier	var		386944	1					
ANR	387035	ExpressionStatement	HANDLE_EXCEPTION ( )	30407:2:957942:957960	386944	2	True				
ANR	387036	CallExpression	HANDLE_EXCEPTION ( )		386944	0					
ANR	387037	Callee	HANDLE_EXCEPTION		386944	0					
ANR	387038	Identifier	HANDLE_EXCEPTION		386944	0					
ANR	387039	ArgumentList			386944	1					
ANR	387040	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	30410:1:957967:958002	386944	8	True				
ANR	387041	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		386944	0		=			
ANR	387042	Identifier	property		386944	0					
ANR	387043	CallExpression	EX_CONSTANT ( opline -> op2 )		386944	1					
ANR	387044	Callee	EX_CONSTANT		386944	0					
ANR	387045	Identifier	EX_CONSTANT		386944	0					
ANR	387046	ArgumentList	opline -> op2		386944	1					
ANR	387047	Argument	opline -> op2		386944	0					
ANR	387048	PtrMemberAccess	opline -> op2		386944	0					
ANR	387049	Identifier	opline		386944	0					
ANR	387050	Identifier	op2		386944	1					
ANR	387051	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		386944	9					
ANR	387052	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	30412:5:958010:958054	386944	0	True				
ANR	387053	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		386944	0		&&			
ANR	387054	EqualityExpression	IS_CV == IS_VAR		386944	0		==			
ANR	387055	Identifier	IS_CV		386944	0					
ANR	387056	Identifier	IS_VAR		386944	1					
ANR	387057	CallExpression	UNEXPECTED ( object == NULL )		386944	1					
ANR	387058	Callee	UNEXPECTED		386944	0					
ANR	387059	Identifier	UNEXPECTED		386944	0					
ANR	387060	ArgumentList	object == NULL		386944	1					
ANR	387061	Argument	object == NULL		386944	0					
ANR	387062	EqualityExpression	object == NULL		386944	0		==			
ANR	387063	Identifier	object		386944	0					
ANR	387064	Identifier	NULL		386944	1					
ANR	387065	CompoundStatement		21:52:504:504	386944	1					
ANR	387066	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	30413:2:958061:958124	386944	0	True				
ANR	387067	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		386944	0					
ANR	387068	Callee	zend_throw_error		386944	0					
ANR	387069	Identifier	zend_throw_error		386944	0					
ANR	387070	ArgumentList	NULL		386944	1					
ANR	387071	Argument	NULL		386944	0					
ANR	387072	Identifier	NULL		386944	0					
ANR	387073	Argument	"""Cannot use string offset as an object"""		386944	1					
ANR	387074	PrimaryExpression	"""Cannot use string offset as an object"""		386944	0					
ANR	387075	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	30414:2:958128:958188	386944	1	True				
ANR	387076	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		386944	0					
ANR	387077	Callee	FREE_UNFETCHED_OP		386944	0					
ANR	387078	Identifier	FREE_UNFETCHED_OP		386944	0					
ANR	387079	ArgumentList	( opline + 1 ) -> op1_type		386944	1					
ANR	387080	Argument	( opline + 1 ) -> op1_type		386944	0					
ANR	387081	PtrMemberAccess	( opline + 1 ) -> op1_type		386944	0					
ANR	387082	AdditiveExpression	opline + 1		386944	0		+			
ANR	387083	Identifier	opline		386944	0					
ANR	387084	PrimaryExpression	1		386944	1					
ANR	387085	Identifier	op1_type		386944	1					
ANR	387086	Argument	( opline + 1 ) -> op1 . var		386944	1					
ANR	387087	MemberAccess	( opline + 1 ) -> op1 . var		386944	0					
ANR	387088	PtrMemberAccess	( opline + 1 ) -> op1		386944	0					
ANR	387089	AdditiveExpression	opline + 1		386944	0		+			
ANR	387090	Identifier	opline		386944	0					
ANR	387091	PrimaryExpression	1		386944	1					
ANR	387092	Identifier	op1		386944	1					
ANR	387093	Identifier	var		386944	1					
ANR	387094	ExpressionStatement	HANDLE_EXCEPTION ( )	30416:2:958193:958211	386944	2	True				
ANR	387095	CallExpression	HANDLE_EXCEPTION ( )		386944	0					
ANR	387096	Callee	HANDLE_EXCEPTION		386944	0					
ANR	387097	Identifier	HANDLE_EXCEPTION		386944	0					
ANR	387098	ArgumentList			386944	1					
ANR	387099	DoStatement	do		386944	10					
ANR	387100	CompoundStatement		28:4:668:668	386944	0					
ANR	387101	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	30420:2:958225:958316	386944	0	True				
ANR	387102	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		386944	0		=			
ANR	387103	Identifier	value		386944	0					
ANR	387104	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		386944	1					
ANR	387105	Callee	get_zval_ptr_r		386944	0					
ANR	387106	Identifier	get_zval_ptr_r		386944	0					
ANR	387107	ArgumentList	( opline + 1 ) -> op1_type		386944	1					
ANR	387108	Argument	( opline + 1 ) -> op1_type		386944	0					
ANR	387109	PtrMemberAccess	( opline + 1 ) -> op1_type		386944	0					
ANR	387110	AdditiveExpression	opline + 1		386944	0		+			
ANR	387111	Identifier	opline		386944	0					
ANR	387112	PrimaryExpression	1		386944	1					
ANR	387113	Identifier	op1_type		386944	1					
ANR	387114	Argument	( opline + 1 ) -> op1		386944	1					
ANR	387115	PtrMemberAccess	( opline + 1 ) -> op1		386944	0					
ANR	387116	AdditiveExpression	opline + 1		386944	0		+			
ANR	387117	Identifier	opline		386944	0					
ANR	387118	PrimaryExpression	1		386944	1					
ANR	387119	Identifier	op1		386944	1					
ANR	387120	Argument	execute_data		386944	2					
ANR	387121	Identifier	execute_data		386944	0					
ANR	387122	Argument	& free_op_data1		386944	3					
ANR	387123	UnaryOperationExpression	& free_op_data1		386944	0					
ANR	387124	UnaryOperator	&		386944	0					
ANR	387125	Identifier	free_op_data1		386944	1					
ANR	387126	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		386944	1					
ANR	387127	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	30422:6:958325:958387	386944	0	True				
ANR	387128	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		386944	0		&&			
ANR	387129	EqualityExpression	IS_CV != IS_UNUSED		386944	0		!=			
ANR	387130	Identifier	IS_CV		386944	0					
ANR	387131	Identifier	IS_UNUSED		386944	1					
ANR	387132	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		386944	1					
ANR	387133	Callee	UNEXPECTED		386944	0					
ANR	387134	Identifier	UNEXPECTED		386944	0					
ANR	387135	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		386944	1					
ANR	387136	Argument	Z_TYPE_P ( object ) != IS_OBJECT		386944	0					
ANR	387137	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		386944	0		!=			
ANR	387138	CallExpression	Z_TYPE_P ( object )		386944	0					
ANR	387139	Callee	Z_TYPE_P		386944	0					
ANR	387140	Identifier	Z_TYPE_P		386944	0					
ANR	387141	ArgumentList	object		386944	1					
ANR	387142	Argument	object		386944	0					
ANR	387143	Identifier	object		386944	0					
ANR	387144	Identifier	IS_OBJECT		386944	1					
ANR	387145	CompoundStatement		31:71:837:837	386944	1					
ANR	387146	ExpressionStatement	ZVAL_DEREF ( object )	30423:3:958395:958413	386944	0	True				
ANR	387147	CallExpression	ZVAL_DEREF ( object )		386944	0					
ANR	387148	Callee	ZVAL_DEREF		386944	0					
ANR	387149	Identifier	ZVAL_DEREF		386944	0					
ANR	387150	ArgumentList	object		386944	1					
ANR	387151	Argument	object		386944	0					
ANR	387152	Identifier	object		386944	0					
ANR	387153	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		386944	1					
ANR	387154	Condition	UNEXPECTED ( ! make_real_object ( object ) )	30424:7:958422:958458	386944	0	True				
ANR	387155	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		386944	0					
ANR	387156	Callee	UNEXPECTED		386944	0					
ANR	387157	Identifier	UNEXPECTED		386944	0					
ANR	387158	ArgumentList	! make_real_object ( object )		386944	1					
ANR	387159	Argument	! make_real_object ( object )		386944	0					
ANR	387160	UnaryOperationExpression	! make_real_object ( object )		386944	0					
ANR	387161	UnaryOperator	!		386944	0					
ANR	387162	CallExpression	make_real_object ( object )		386944	1					
ANR	387163	Callee	make_real_object		386944	0					
ANR	387164	Identifier	make_real_object		386944	0					
ANR	387165	ArgumentList	object		386944	1					
ANR	387166	Argument	object		386944	0					
ANR	387167	Identifier	object		386944	0					
ANR	387168	CompoundStatement		33:46:908:908	386944	1					
ANR	387169	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	30425:4:958467:958532	386944	0	True				
ANR	387170	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		386944	0					
ANR	387171	Callee	zend_error		386944	0					
ANR	387172	Identifier	zend_error		386944	0					
ANR	387173	ArgumentList	E_WARNING		386944	1					
ANR	387174	Argument	E_WARNING		386944	0					
ANR	387175	Identifier	E_WARNING		386944	0					
ANR	387176	Argument	"""Attempt to assign property of non-object"""		386944	1					
ANR	387177	PrimaryExpression	"""Attempt to assign property of non-object"""		386944	0					
ANR	387178	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		386944	1					
ANR	387179	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30426:8:958542:958578	386944	0	True				
ANR	387180	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		386944	0					
ANR	387181	Callee	UNEXPECTED		386944	0					
ANR	387182	Identifier	UNEXPECTED		386944	0					
ANR	387183	ArgumentList	RETURN_VALUE_USED ( opline )		386944	1					
ANR	387184	Argument	RETURN_VALUE_USED ( opline )		386944	0					
ANR	387185	CallExpression	RETURN_VALUE_USED ( opline )		386944	0					
ANR	387186	Callee	RETURN_VALUE_USED		386944	0					
ANR	387187	Identifier	RETURN_VALUE_USED		386944	0					
ANR	387188	ArgumentList	opline		386944	1					
ANR	387189	Argument	opline		386944	0					
ANR	387190	Identifier	opline		386944	0					
ANR	387191	CompoundStatement		35:47:1028:1028	386944	1					
ANR	387192	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	30427:5:958588:958625	386944	0	True				
ANR	387193	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		386944	0					
ANR	387194	Callee	ZVAL_NULL		386944	0					
ANR	387195	Identifier	ZVAL_NULL		386944	0					
ANR	387196	ArgumentList	EX_VAR ( opline -> result . var )		386944	1					
ANR	387197	Argument	EX_VAR ( opline -> result . var )		386944	0					
ANR	387198	CallExpression	EX_VAR ( opline -> result . var )		386944	0					
ANR	387199	Callee	EX_VAR		386944	0					
ANR	387200	Identifier	EX_VAR		386944	0					
ANR	387201	ArgumentList	opline -> result . var		386944	1					
ANR	387202	Argument	opline -> result . var		386944	0					
ANR	387203	MemberAccess	opline -> result . var		386944	0					
ANR	387204	PtrMemberAccess	opline -> result		386944	0					
ANR	387205	Identifier	opline		386944	0					
ANR	387206	Identifier	result		386944	1					
ANR	387207	Identifier	var		386944	1					
ANR	387208	BreakStatement	break ;	30429:4:958637:958642	386944	2	True				
ANR	387209	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		386944	2					
ANR	387210	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	30434:6:958715:958939	386944	0	True				
ANR	387211	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		386944	0		&&			
ANR	387212	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		386944	0					
ANR	387213	Callee	EXPECTED		386944	0					
ANR	387214	Identifier	EXPECTED		386944	0					
ANR	387215	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386944	1					
ANR	387216	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386944	0					
ANR	387217	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386944	0					
ANR	387218	CallExpression	Z_OBJ_HT_P ( object )		386944	0					
ANR	387219	Callee	Z_OBJ_HT_P		386944	0					
ANR	387220	Identifier	Z_OBJ_HT_P		386944	0					
ANR	387221	ArgumentList	object		386944	1					
ANR	387222	Argument	object		386944	0					
ANR	387223	Identifier	object		386944	0					
ANR	387224	Identifier	get_property_ptr_ptr		386944	1					
ANR	387225	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		386944	1					
ANR	387226	Callee	EXPECTED		386944	0					
ANR	387227	Identifier	EXPECTED		386944	0					
ANR	387228	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		386944	1					
ANR	387229	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		386944	0					
ANR	387230	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		386944	0		!=			
ANR	387231	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		386944	0		=			
ANR	387232	Identifier	zptr		386944	0					
ANR	387233	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		386944	1					
ANR	387234	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386944	0					
ANR	387235	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386944	0					
ANR	387236	CallExpression	Z_OBJ_HT_P ( object )		386944	0					
ANR	387237	Callee	Z_OBJ_HT_P		386944	0					
ANR	387238	Identifier	Z_OBJ_HT_P		386944	0					
ANR	387239	ArgumentList	object		386944	1					
ANR	387240	Argument	object		386944	0					
ANR	387241	Identifier	object		386944	0					
ANR	387242	Identifier	get_property_ptr_ptr		386944	1					
ANR	387243	ArgumentList	object		386944	1					
ANR	387244	Argument	object		386944	0					
ANR	387245	Identifier	object		386944	0					
ANR	387246	Argument	property		386944	1					
ANR	387247	Identifier	property		386944	0					
ANR	387248	Argument	BP_VAR_RW		386944	2					
ANR	387249	Identifier	BP_VAR_RW		386944	0					
ANR	387250	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386944	3					
ANR	387251	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386944	0					
ANR	387252	Condition	IS_CONST == IS_CONST		386944	0					
ANR	387253	EqualityExpression	IS_CONST == IS_CONST		386944	0		==			
ANR	387254	Identifier	IS_CONST		386944	0					
ANR	387255	Identifier	IS_CONST		386944	1					
ANR	387256	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		386944	1					
ANR	387257	Callee	CACHE_ADDR		386944	0					
ANR	387258	Identifier	CACHE_ADDR		386944	0					
ANR	387259	ArgumentList	Z_CACHE_SLOT_P ( property )		386944	1					
ANR	387260	Argument	Z_CACHE_SLOT_P ( property )		386944	0					
ANR	387261	CallExpression	Z_CACHE_SLOT_P ( property )		386944	0					
ANR	387262	Callee	Z_CACHE_SLOT_P		386944	0					
ANR	387263	Identifier	Z_CACHE_SLOT_P		386944	0					
ANR	387264	ArgumentList	property		386944	1					
ANR	387265	Argument	property		386944	0					
ANR	387266	Identifier	property		386944	0					
ANR	387267	Identifier	NULL		386944	2					
ANR	387268	Identifier	NULL		386944	1					
ANR	387269	CompoundStatement		44:176:1389:1389	386944	1					
ANR	387270	ExpressionStatement	ZVAL_DEREF ( zptr )	30437:3:958948:958964	386944	0	True				
ANR	387271	CallExpression	ZVAL_DEREF ( zptr )		386944	0					
ANR	387272	Callee	ZVAL_DEREF		386944	0					
ANR	387273	Identifier	ZVAL_DEREF		386944	0					
ANR	387274	ArgumentList	zptr		386944	1					
ANR	387275	Argument	zptr		386944	0					
ANR	387276	Identifier	zptr		386944	0					
ANR	387277	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	30438:3:958969:958994	386944	1	True				
ANR	387278	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		386944	0					
ANR	387279	Callee	SEPARATE_ZVAL_NOREF		386944	0					
ANR	387280	Identifier	SEPARATE_ZVAL_NOREF		386944	0					
ANR	387281	ArgumentList	zptr		386944	1					
ANR	387282	Argument	zptr		386944	0					
ANR	387283	Identifier	zptr		386944	0					
ANR	387284	ExpressionStatement	"binary_op ( zptr , zptr , value )"	30440:3:959000:959028	386944	2	True				
ANR	387285	CallExpression	"binary_op ( zptr , zptr , value )"		386944	0					
ANR	387286	Callee	binary_op		386944	0					
ANR	387287	Identifier	binary_op		386944	0					
ANR	387288	ArgumentList	zptr		386944	1					
ANR	387289	Argument	zptr		386944	0					
ANR	387290	Identifier	zptr		386944	0					
ANR	387291	Argument	zptr		386944	1					
ANR	387292	Identifier	zptr		386944	0					
ANR	387293	Argument	value		386944	2					
ANR	387294	Identifier	value		386944	0					
ANR	387295	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		386944	3					
ANR	387296	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30441:7:959037:959073	386944	0	True				
ANR	387297	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		386944	0					
ANR	387298	Callee	UNEXPECTED		386944	0					
ANR	387299	Identifier	UNEXPECTED		386944	0					
ANR	387300	ArgumentList	RETURN_VALUE_USED ( opline )		386944	1					
ANR	387301	Argument	RETURN_VALUE_USED ( opline )		386944	0					
ANR	387302	CallExpression	RETURN_VALUE_USED ( opline )		386944	0					
ANR	387303	Callee	RETURN_VALUE_USED		386944	0					
ANR	387304	Identifier	RETURN_VALUE_USED		386944	0					
ANR	387305	ArgumentList	opline		386944	1					
ANR	387306	Argument	opline		386944	0					
ANR	387307	Identifier	opline		386944	0					
ANR	387308	CompoundStatement		50:46:1523:1523	386944	1					
ANR	387309	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	30442:4:959082:959125	386944	0	True				
ANR	387310	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		386944	0					
ANR	387311	Callee	ZVAL_COPY		386944	0					
ANR	387312	Identifier	ZVAL_COPY		386944	0					
ANR	387313	ArgumentList	EX_VAR ( opline -> result . var )		386944	1					
ANR	387314	Argument	EX_VAR ( opline -> result . var )		386944	0					
ANR	387315	CallExpression	EX_VAR ( opline -> result . var )		386944	0					
ANR	387316	Callee	EX_VAR		386944	0					
ANR	387317	Identifier	EX_VAR		386944	0					
ANR	387318	ArgumentList	opline -> result . var		386944	1					
ANR	387319	Argument	opline -> result . var		386944	0					
ANR	387320	MemberAccess	opline -> result . var		386944	0					
ANR	387321	PtrMemberAccess	opline -> result		386944	0					
ANR	387322	Identifier	opline		386944	0					
ANR	387323	Identifier	result		386944	1					
ANR	387324	Identifier	var		386944	1					
ANR	387325	Argument	zptr		386944	1					
ANR	387326	Identifier	zptr		386944	0					
ANR	387327	ElseStatement	else		386944	0					
ANR	387328	CompoundStatement		53:9:1588:1588	386944	0					
ANR	387329	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	30445:3:959146:959365	386944	0	True				
ANR	387330	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		386944	0					
ANR	387331	Callee	zend_assign_op_overloaded_property		386944	0					
ANR	387332	Identifier	zend_assign_op_overloaded_property		386944	0					
ANR	387333	ArgumentList	object		386944	1					
ANR	387334	Argument	object		386944	0					
ANR	387335	Identifier	object		386944	0					
ANR	387336	Argument	property		386944	1					
ANR	387337	Identifier	property		386944	0					
ANR	387338	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386944	2					
ANR	387339	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		386944	0					
ANR	387340	Condition	IS_CONST == IS_CONST		386944	0					
ANR	387341	EqualityExpression	IS_CONST == IS_CONST		386944	0		==			
ANR	387342	Identifier	IS_CONST		386944	0					
ANR	387343	Identifier	IS_CONST		386944	1					
ANR	387344	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		386944	1					
ANR	387345	Callee	CACHE_ADDR		386944	0					
ANR	387346	Identifier	CACHE_ADDR		386944	0					
ANR	387347	ArgumentList	Z_CACHE_SLOT_P ( property )		386944	1					
ANR	387348	Argument	Z_CACHE_SLOT_P ( property )		386944	0					
ANR	387349	CallExpression	Z_CACHE_SLOT_P ( property )		386944	0					
ANR	387350	Callee	Z_CACHE_SLOT_P		386944	0					
ANR	387351	Identifier	Z_CACHE_SLOT_P		386944	0					
ANR	387352	ArgumentList	property		386944	1					
ANR	387353	Argument	property		386944	0					
ANR	387354	Identifier	property		386944	0					
ANR	387355	Identifier	NULL		386944	2					
ANR	387356	Argument	value		386944	3					
ANR	387357	Identifier	value		386944	0					
ANR	387358	Argument	binary_op		386944	4					
ANR	387359	Identifier	binary_op		386944	0					
ANR	387360	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		386944	5					
ANR	387361	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		386944	0					
ANR	387362	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		386944	0					
ANR	387363	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		386944	0					
ANR	387364	Callee	UNEXPECTED		386944	0					
ANR	387365	Identifier	UNEXPECTED		386944	0					
ANR	387366	ArgumentList	RETURN_VALUE_USED ( opline )		386944	1					
ANR	387367	Argument	RETURN_VALUE_USED ( opline )		386944	0					
ANR	387368	CallExpression	RETURN_VALUE_USED ( opline )		386944	0					
ANR	387369	Callee	RETURN_VALUE_USED		386944	0					
ANR	387370	Identifier	RETURN_VALUE_USED		386944	0					
ANR	387371	ArgumentList	opline		386944	1					
ANR	387372	Argument	opline		386944	0					
ANR	387373	Identifier	opline		386944	0					
ANR	387374	CallExpression	EX_VAR ( opline -> result . var )		386944	1					
ANR	387375	Callee	EX_VAR		386944	0					
ANR	387376	Identifier	EX_VAR		386944	0					
ANR	387377	ArgumentList	opline -> result . var		386944	1					
ANR	387378	Argument	opline -> result . var		386944	0					
ANR	387379	MemberAccess	opline -> result . var		386944	0					
ANR	387380	PtrMemberAccess	opline -> result		386944	0					
ANR	387381	Identifier	opline		386944	0					
ANR	387382	Identifier	result		386944	1					
ANR	387383	Identifier	var		386944	1					
ANR	387384	Identifier	NULL		386944	2					
ANR	387385	Condition	0	30447:10:959381:959381	386944	1	True				
ANR	387386	PrimaryExpression	0		386944	0					
ANR	387387	ExpressionStatement	FREE_OP ( free_op_data1 )	30449:1:959387:959409	386944	11	True				
ANR	387388	CallExpression	FREE_OP ( free_op_data1 )		386944	0					
ANR	387389	Callee	FREE_OP		386944	0					
ANR	387390	Identifier	FREE_OP		386944	0					
ANR	387391	ArgumentList	free_op_data1		386944	1					
ANR	387392	Argument	free_op_data1		386944	0					
ANR	387393	Identifier	free_op_data1		386944	0					
ANR	387394	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	30453:1:959449:959477	386944	12	True				
ANR	387395	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		386944	0					
ANR	387396	Callee	ZEND_VM_NEXT_OPCODE_EX		386944	0					
ANR	387397	Identifier	ZEND_VM_NEXT_OPCODE_EX		386944	0					
ANR	387398	ArgumentList	1		386944	1					
ANR	387399	Argument	1		386944	0					
ANR	387400	PrimaryExpression	1		386944	0					
ANR	387401	Argument	2		386944	1					
ANR	387402	PrimaryExpression	2		386944	0					
ANR	387403	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		386944	1					
ANR	387404	Identifier	zend_binary_assign_op_obj_helper_SPEC_CV_CONST		386944	2					
ANR	387405	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		386944	3					
ANR	387406	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	30391:92:957498:957549	386944	0	True				
ANR	387407	ParameterType	binary_op_type binary_op		386944	0					
ANR	387408	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		386944	1					
ANR	387409	CFGEntryNode	ENTRY		386944		True				
ANR	387410	CFGExitNode	EXIT		386944		True				
ANR	387411	Symbol	opline -> op1		386944						
ANR	387412	Symbol	opline -> op2		386944						
ANR	387413	Symbol	IS_CV		386944						
ANR	387414	Symbol	Z_OBJ_P		386944						
ANR	387415	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		386944						
ANR	387416	Symbol	free_op_data1		386944						
ANR	387417	Symbol	zptr		386944						
ANR	387418	Symbol	execute_data		386944						
ANR	387419	Symbol	opline -> result		386944						
ANR	387420	Symbol	( opline + 1 ) -> op1		386944						
ANR	387421	Symbol	UNEXPECTED		386944						
ANR	387422	Symbol	E_WARNING		386944						
ANR	387423	Symbol	make_real_object		386944						
ANR	387424	Symbol	RETURN_VALUE_USED		386944						
ANR	387425	Symbol	( opline + 1 ) -> op1 . var		386944						
ANR	387426	Symbol	opline		386944						
ANR	387427	Symbol	get_zval_ptr_r		386944						
ANR	387428	Symbol	property		386944						
ANR	387429	Symbol	opline -> op1 . var		386944						
ANR	387430	Symbol	value		386944						
ANR	387431	Symbol	binary_op		386944						
ANR	387432	Symbol	BP_VAR_RW		386944						
ANR	387433	Symbol	( opline + 1 ) -> op1_type		386944						
ANR	387434	Symbol	IS_CONST		386944						
ANR	387435	Symbol	NULL		386944						
ANR	387436	Symbol	EX_CONSTANT		386944						
ANR	387437	Symbol	Z_CACHE_SLOT_P		386944						
ANR	387438	Symbol	Z_TYPE_P		386944						
ANR	387439	Symbol	* Z_OBJ_HT_P		386944						
ANR	387440	Symbol	CACHE_ADDR		386944						
ANR	387441	Symbol	* opline		386944						
ANR	387442	Symbol	Z_OBJ_HT_P		386944						
ANR	387443	Symbol	_get_zval_ptr_cv_BP_VAR_RW		386944						
ANR	387444	Symbol	EX_VAR		386944						
ANR	387445	Symbol	IS_OBJECT		386944						
ANR	387446	Symbol	IS_VAR		386944						
ANR	387447	Symbol	EXPECTED		386944						
ANR	387448	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		386944						
ANR	387449	Symbol	& free_op_data1		386944						
ANR	387450	Symbol	opline -> result . var		386944						
ANR	387451	Symbol	object		386944						
ANR	387452	Symbol	IS_UNUSED		386944						
ANR	387453	Function	zend_binary_assign_op_dim_helper_SPEC_CV_CONST	30456:0:959482:961630							
ANR	387454	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_CV_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		387453	0					
ANR	387455	CompoundStatement		30457:0:959628:961630	387453	0					
ANR	387456	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	30458:1:959631:959669	387453	0	True				
ANR	387457	IdentifierDecl	free_op_data1		387453	0					
ANR	387458	IdentifierDeclType	USE_OPLINE zend_free_op		387453	0					
ANR	387459	Identifier	free_op_data1		387453	1					
ANR	387460	IdentifierDeclStatement	"zval * var_ptr , rv ;"	30460:1:959672:959689	387453	1	True				
ANR	387461	IdentifierDecl	* var_ptr		387453	0					
ANR	387462	IdentifierDeclType	zval *		387453	0					
ANR	387463	Identifier	var_ptr		387453	1					
ANR	387464	IdentifierDecl	rv		387453	1					
ANR	387465	IdentifierDeclType	zval		387453	0					
ANR	387466	Identifier	rv		387453	1					
ANR	387467	IdentifierDeclStatement	"zval * value , * container , * dim ;"	30461:1:959692:959721	387453	2	True				
ANR	387468	IdentifierDecl	* value		387453	0					
ANR	387469	IdentifierDeclType	zval *		387453	0					
ANR	387470	Identifier	value		387453	1					
ANR	387471	IdentifierDecl	* container		387453	1					
ANR	387472	IdentifierDeclType	zval *		387453	0					
ANR	387473	Identifier	container		387453	1					
ANR	387474	IdentifierDecl	* dim		387453	2					
ANR	387475	IdentifierDeclType	zval *		387453	0					
ANR	387476	Identifier	dim		387453	1					
ANR	387477	ExpressionStatement	SAVE_OPLINE ( )	30463:1:959725:959738	387453	3	True				
ANR	387478	CallExpression	SAVE_OPLINE ( )		387453	0					
ANR	387479	Callee	SAVE_OPLINE		387453	0					
ANR	387480	Identifier	SAVE_OPLINE		387453	0					
ANR	387481	ArgumentList			387453	1					
ANR	387482	ExpressionStatement	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	30464:1:959741:959810	387453	4	True				
ANR	387483	AssignmentExpression	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		387453	0		=			
ANR	387484	Identifier	container		387453	0					
ANR	387485	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		387453	1					
ANR	387486	Callee	_get_zval_ptr_cv_BP_VAR_RW		387453	0					
ANR	387487	Identifier	_get_zval_ptr_cv_BP_VAR_RW		387453	0					
ANR	387488	ArgumentList	execute_data		387453	1					
ANR	387489	Argument	execute_data		387453	0					
ANR	387490	Identifier	execute_data		387453	0					
ANR	387491	Argument	opline -> op1 . var		387453	1					
ANR	387492	MemberAccess	opline -> op1 . var		387453	0					
ANR	387493	PtrMemberAccess	opline -> op1		387453	0					
ANR	387494	Identifier	opline		387453	0					
ANR	387495	Identifier	op1		387453	1					
ANR	387496	Identifier	var		387453	1					
ANR	387497	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		387453	5					
ANR	387498	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	30465:5:959817:959876	387453	0	True				
ANR	387499	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		387453	0		&&			
ANR	387500	EqualityExpression	IS_CV == IS_UNUSED		387453	0		==			
ANR	387501	Identifier	IS_CV		387453	0					
ANR	387502	Identifier	IS_UNUSED		387453	1					
ANR	387503	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		387453	1					
ANR	387504	Callee	UNEXPECTED		387453	0					
ANR	387505	Identifier	UNEXPECTED		387453	0					
ANR	387506	ArgumentList	Z_OBJ_P ( container ) == NULL		387453	1					
ANR	387507	Argument	Z_OBJ_P ( container ) == NULL		387453	0					
ANR	387508	EqualityExpression	Z_OBJ_P ( container ) == NULL		387453	0		==			
ANR	387509	CallExpression	Z_OBJ_P ( container )		387453	0					
ANR	387510	Callee	Z_OBJ_P		387453	0					
ANR	387511	Identifier	Z_OBJ_P		387453	0					
ANR	387512	ArgumentList	container		387453	1					
ANR	387513	Argument	container		387453	0					
ANR	387514	Identifier	container		387453	0					
ANR	387515	Identifier	NULL		387453	1					
ANR	387516	CompoundStatement		9:67:250:250	387453	1					
ANR	387517	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	30466:2:959883:959947	387453	0	True				
ANR	387518	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		387453	0					
ANR	387519	Callee	zend_throw_error		387453	0					
ANR	387520	Identifier	zend_throw_error		387453	0					
ANR	387521	ArgumentList	NULL		387453	1					
ANR	387522	Argument	NULL		387453	0					
ANR	387523	Identifier	NULL		387453	0					
ANR	387524	Argument	"""Using $this when not in object context"""		387453	1					
ANR	387525	PrimaryExpression	"""Using $this when not in object context"""		387453	0					
ANR	387526	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	30467:2:959951:960011	387453	1	True				
ANR	387527	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		387453	0					
ANR	387528	Callee	FREE_UNFETCHED_OP		387453	0					
ANR	387529	Identifier	FREE_UNFETCHED_OP		387453	0					
ANR	387530	ArgumentList	( opline + 1 ) -> op1_type		387453	1					
ANR	387531	Argument	( opline + 1 ) -> op1_type		387453	0					
ANR	387532	PtrMemberAccess	( opline + 1 ) -> op1_type		387453	0					
ANR	387533	AdditiveExpression	opline + 1		387453	0		+			
ANR	387534	Identifier	opline		387453	0					
ANR	387535	PrimaryExpression	1		387453	1					
ANR	387536	Identifier	op1_type		387453	1					
ANR	387537	Argument	( opline + 1 ) -> op1 . var		387453	1					
ANR	387538	MemberAccess	( opline + 1 ) -> op1 . var		387453	0					
ANR	387539	PtrMemberAccess	( opline + 1 ) -> op1		387453	0					
ANR	387540	AdditiveExpression	opline + 1		387453	0		+			
ANR	387541	Identifier	opline		387453	0					
ANR	387542	PrimaryExpression	1		387453	1					
ANR	387543	Identifier	op1		387453	1					
ANR	387544	Identifier	var		387453	1					
ANR	387545	ExpressionStatement	HANDLE_EXCEPTION ( )	30469:2:960016:960034	387453	2	True				
ANR	387546	CallExpression	HANDLE_EXCEPTION ( )		387453	0					
ANR	387547	Callee	HANDLE_EXCEPTION		387453	0					
ANR	387548	Identifier	HANDLE_EXCEPTION		387453	0					
ANR	387549	ArgumentList			387453	1					
ANR	387550	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( container == NULL ) )		387453	6					
ANR	387551	Condition	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )	30471:5:960044:960091	387453	0	True				
ANR	387552	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )		387453	0		&&			
ANR	387553	EqualityExpression	IS_CV == IS_VAR		387453	0		==			
ANR	387554	Identifier	IS_CV		387453	0					
ANR	387555	Identifier	IS_VAR		387453	1					
ANR	387556	CallExpression	UNEXPECTED ( container == NULL )		387453	1					
ANR	387557	Callee	UNEXPECTED		387453	0					
ANR	387558	Identifier	UNEXPECTED		387453	0					
ANR	387559	ArgumentList	container == NULL		387453	1					
ANR	387560	Argument	container == NULL		387453	0					
ANR	387561	EqualityExpression	container == NULL		387453	0		==			
ANR	387562	Identifier	container		387453	0					
ANR	387563	Identifier	NULL		387453	1					
ANR	387564	CompoundStatement		15:55:465:465	387453	1					
ANR	387565	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	30472:2:960098:960160	387453	0	True				
ANR	387566	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		387453	0					
ANR	387567	Callee	zend_throw_error		387453	0					
ANR	387568	Identifier	zend_throw_error		387453	0					
ANR	387569	ArgumentList	NULL		387453	1					
ANR	387570	Argument	NULL		387453	0					
ANR	387571	Identifier	NULL		387453	0					
ANR	387572	Argument	"""Cannot use string offset as an array"""		387453	1					
ANR	387573	PrimaryExpression	"""Cannot use string offset as an array"""		387453	0					
ANR	387574	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	30473:2:960164:960224	387453	1	True				
ANR	387575	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		387453	0					
ANR	387576	Callee	FREE_UNFETCHED_OP		387453	0					
ANR	387577	Identifier	FREE_UNFETCHED_OP		387453	0					
ANR	387578	ArgumentList	( opline + 1 ) -> op1_type		387453	1					
ANR	387579	Argument	( opline + 1 ) -> op1_type		387453	0					
ANR	387580	PtrMemberAccess	( opline + 1 ) -> op1_type		387453	0					
ANR	387581	AdditiveExpression	opline + 1		387453	0		+			
ANR	387582	Identifier	opline		387453	0					
ANR	387583	PrimaryExpression	1		387453	1					
ANR	387584	Identifier	op1_type		387453	1					
ANR	387585	Argument	( opline + 1 ) -> op1 . var		387453	1					
ANR	387586	MemberAccess	( opline + 1 ) -> op1 . var		387453	0					
ANR	387587	PtrMemberAccess	( opline + 1 ) -> op1		387453	0					
ANR	387588	AdditiveExpression	opline + 1		387453	0		+			
ANR	387589	Identifier	opline		387453	0					
ANR	387590	PrimaryExpression	1		387453	1					
ANR	387591	Identifier	op1		387453	1					
ANR	387592	Identifier	var		387453	1					
ANR	387593	ExpressionStatement	HANDLE_EXCEPTION ( )	30475:2:960229:960247	387453	2	True				
ANR	387594	CallExpression	HANDLE_EXCEPTION ( )		387453	0					
ANR	387595	Callee	HANDLE_EXCEPTION		387453	0					
ANR	387596	Identifier	HANDLE_EXCEPTION		387453	0					
ANR	387597	ArgumentList			387453	1					
ANR	387598	ExpressionStatement	dim = EX_CONSTANT ( opline -> op2 )	30478:1:960254:960284	387453	7	True				
ANR	387599	AssignmentExpression	dim = EX_CONSTANT ( opline -> op2 )		387453	0		=			
ANR	387600	Identifier	dim		387453	0					
ANR	387601	CallExpression	EX_CONSTANT ( opline -> op2 )		387453	1					
ANR	387602	Callee	EX_CONSTANT		387453	0					
ANR	387603	Identifier	EX_CONSTANT		387453	0					
ANR	387604	ArgumentList	opline -> op2		387453	1					
ANR	387605	Argument	opline -> op2		387453	0					
ANR	387606	PtrMemberAccess	opline -> op2		387453	0					
ANR	387607	Identifier	opline		387453	0					
ANR	387608	Identifier	op2		387453	1					
ANR	387609	DoStatement	do		387453	8					
ANR	387610	CompoundStatement		24:4:662:662	387453	0					
ANR	387611	IfStatement	if ( IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		387453	0					
ANR	387612	Condition	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	30481:6:960299:960363	387453	0	True				
ANR	387613	OrExpression	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		387453	0		||			
ANR	387614	EqualityExpression	IS_CV == IS_UNUSED		387453	0		==			
ANR	387615	Identifier	IS_CV		387453	0					
ANR	387616	Identifier	IS_UNUSED		387453	1					
ANR	387617	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		387453	1					
ANR	387618	Callee	UNEXPECTED		387453	0					
ANR	387619	Identifier	UNEXPECTED		387453	0					
ANR	387620	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		387453	1					
ANR	387621	Argument	Z_TYPE_P ( container ) != IS_ARRAY		387453	0					
ANR	387622	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		387453	0		!=			
ANR	387623	CallExpression	Z_TYPE_P ( container )		387453	0					
ANR	387624	Callee	Z_TYPE_P		387453	0					
ANR	387625	Identifier	Z_TYPE_P		387453	0					
ANR	387626	ArgumentList	container		387453	1					
ANR	387627	Argument	container		387453	0					
ANR	387628	Identifier	container		387453	0					
ANR	387629	Identifier	IS_ARRAY		387453	1					
ANR	387630	CompoundStatement		25:73:737:737	387453	1					
ANR	387631	IfStatement	if ( IS_CV != IS_UNUSED )		387453	0					
ANR	387632	Condition	IS_CV != IS_UNUSED	30482:7:960375:960392	387453	0	True				
ANR	387633	EqualityExpression	IS_CV != IS_UNUSED		387453	0		!=			
ANR	387634	Identifier	IS_CV		387453	0					
ANR	387635	Identifier	IS_UNUSED		387453	1					
ANR	387636	CompoundStatement		26:27:766:766	387453	1					
ANR	387637	ExpressionStatement	ZVAL_DEREF ( container )	30483:4:960401:960422	387453	0	True				
ANR	387638	CallExpression	ZVAL_DEREF ( container )		387453	0					
ANR	387639	Callee	ZVAL_DEREF		387453	0					
ANR	387640	Identifier	ZVAL_DEREF		387453	0					
ANR	387641	ArgumentList	container		387453	1					
ANR	387642	Argument	container		387453	0					
ANR	387643	Identifier	container		387453	0					
ANR	387644	IfStatement	if ( IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		387453	1					
ANR	387645	Condition	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	30485:7:960436:960499	387453	0	True				
ANR	387646	OrExpression	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		387453	0		||			
ANR	387647	EqualityExpression	IS_CV == IS_UNUSED		387453	0		==			
ANR	387648	Identifier	IS_CV		387453	0					
ANR	387649	Identifier	IS_UNUSED		387453	1					
ANR	387650	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		387453	1					
ANR	387651	Callee	EXPECTED		387453	0					
ANR	387652	Identifier	EXPECTED		387453	0					
ANR	387653	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		387453	1					
ANR	387654	Argument	Z_TYPE_P ( container ) == IS_OBJECT		387453	0					
ANR	387655	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		387453	0		==			
ANR	387656	CallExpression	Z_TYPE_P ( container )		387453	0					
ANR	387657	Callee	Z_TYPE_P		387453	0					
ANR	387658	Identifier	Z_TYPE_P		387453	0					
ANR	387659	ArgumentList	container		387453	1					
ANR	387660	Argument	container		387453	0					
ANR	387661	Identifier	container		387453	0					
ANR	387662	Identifier	IS_OBJECT		387453	1					
ANR	387663	CompoundStatement		29:73:873:873	387453	1					
ANR	387664	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	30486:4:960508:960599	387453	0	True				
ANR	387665	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		387453	0		=			
ANR	387666	Identifier	value		387453	0					
ANR	387667	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		387453	1					
ANR	387668	Callee	get_zval_ptr_r		387453	0					
ANR	387669	Identifier	get_zval_ptr_r		387453	0					
ANR	387670	ArgumentList	( opline + 1 ) -> op1_type		387453	1					
ANR	387671	Argument	( opline + 1 ) -> op1_type		387453	0					
ANR	387672	PtrMemberAccess	( opline + 1 ) -> op1_type		387453	0					
ANR	387673	AdditiveExpression	opline + 1		387453	0		+			
ANR	387674	Identifier	opline		387453	0					
ANR	387675	PrimaryExpression	1		387453	1					
ANR	387676	Identifier	op1_type		387453	1					
ANR	387677	Argument	( opline + 1 ) -> op1		387453	1					
ANR	387678	PtrMemberAccess	( opline + 1 ) -> op1		387453	0					
ANR	387679	AdditiveExpression	opline + 1		387453	0		+			
ANR	387680	Identifier	opline		387453	0					
ANR	387681	PrimaryExpression	1		387453	1					
ANR	387682	Identifier	op1		387453	1					
ANR	387683	Argument	execute_data		387453	2					
ANR	387684	Identifier	execute_data		387453	0					
ANR	387685	Argument	& free_op_data1		387453	3					
ANR	387686	UnaryOperationExpression	& free_op_data1		387453	0					
ANR	387687	UnaryOperator	&		387453	0					
ANR	387688	Identifier	free_op_data1		387453	1					
ANR	387689	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	30487:4:960605:960743	387453	1	True				
ANR	387690	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		387453	0					
ANR	387691	Callee	zend_binary_assign_op_obj_dim		387453	0					
ANR	387692	Identifier	zend_binary_assign_op_obj_dim		387453	0					
ANR	387693	ArgumentList	container		387453	1					
ANR	387694	Argument	container		387453	0					
ANR	387695	Identifier	container		387453	0					
ANR	387696	Argument	dim		387453	1					
ANR	387697	Identifier	dim		387453	0					
ANR	387698	Argument	value		387453	2					
ANR	387699	Identifier	value		387453	0					
ANR	387700	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		387453	3					
ANR	387701	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		387453	0					
ANR	387702	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		387453	0					
ANR	387703	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		387453	0					
ANR	387704	Callee	UNEXPECTED		387453	0					
ANR	387705	Identifier	UNEXPECTED		387453	0					
ANR	387706	ArgumentList	RETURN_VALUE_USED ( opline )		387453	1					
ANR	387707	Argument	RETURN_VALUE_USED ( opline )		387453	0					
ANR	387708	CallExpression	RETURN_VALUE_USED ( opline )		387453	0					
ANR	387709	Callee	RETURN_VALUE_USED		387453	0					
ANR	387710	Identifier	RETURN_VALUE_USED		387453	0					
ANR	387711	ArgumentList	opline		387453	1					
ANR	387712	Argument	opline		387453	0					
ANR	387713	Identifier	opline		387453	0					
ANR	387714	CallExpression	EX_VAR ( opline -> result . var )		387453	1					
ANR	387715	Callee	EX_VAR		387453	0					
ANR	387716	Identifier	EX_VAR		387453	0					
ANR	387717	ArgumentList	opline -> result . var		387453	1					
ANR	387718	Argument	opline -> result . var		387453	0					
ANR	387719	MemberAccess	opline -> result . var		387453	0					
ANR	387720	PtrMemberAccess	opline -> result		387453	0					
ANR	387721	Identifier	opline		387453	0					
ANR	387722	Identifier	result		387453	1					
ANR	387723	Identifier	var		387453	1					
ANR	387724	Identifier	NULL		387453	2					
ANR	387725	Argument	binary_op		387453	4					
ANR	387726	Identifier	binary_op		387453	0					
ANR	387727	BreakStatement	break ;	30488:4:960749:960754	387453	2	True				
ANR	387728	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CONST )"	30492:2:960768:960830	387453	1	True				
ANR	387729	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CONST )"		387453	0					
ANR	387730	Callee	zend_fetch_dimension_address_RW		387453	0					
ANR	387731	Identifier	zend_fetch_dimension_address_RW		387453	0					
ANR	387732	ArgumentList	& rv		387453	1					
ANR	387733	Argument	& rv		387453	0					
ANR	387734	UnaryOperationExpression	& rv		387453	0					
ANR	387735	UnaryOperator	&		387453	0					
ANR	387736	Identifier	rv		387453	1					
ANR	387737	Argument	container		387453	1					
ANR	387738	Identifier	container		387453	0					
ANR	387739	Argument	dim		387453	2					
ANR	387740	Identifier	dim		387453	0					
ANR	387741	Argument	IS_CONST		387453	3					
ANR	387742	Identifier	IS_CONST		387453	0					
ANR	387743	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	30493:2:960834:960925	387453	2	True				
ANR	387744	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		387453	0		=			
ANR	387745	Identifier	value		387453	0					
ANR	387746	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		387453	1					
ANR	387747	Callee	get_zval_ptr_r		387453	0					
ANR	387748	Identifier	get_zval_ptr_r		387453	0					
ANR	387749	ArgumentList	( opline + 1 ) -> op1_type		387453	1					
ANR	387750	Argument	( opline + 1 ) -> op1_type		387453	0					
ANR	387751	PtrMemberAccess	( opline + 1 ) -> op1_type		387453	0					
ANR	387752	AdditiveExpression	opline + 1		387453	0		+			
ANR	387753	Identifier	opline		387453	0					
ANR	387754	PrimaryExpression	1		387453	1					
ANR	387755	Identifier	op1_type		387453	1					
ANR	387756	Argument	( opline + 1 ) -> op1		387453	1					
ANR	387757	PtrMemberAccess	( opline + 1 ) -> op1		387453	0					
ANR	387758	AdditiveExpression	opline + 1		387453	0		+			
ANR	387759	Identifier	opline		387453	0					
ANR	387760	PrimaryExpression	1		387453	1					
ANR	387761	Identifier	op1		387453	1					
ANR	387762	Argument	execute_data		387453	2					
ANR	387763	Identifier	execute_data		387453	0					
ANR	387764	Argument	& free_op_data1		387453	3					
ANR	387765	UnaryOperationExpression	& free_op_data1		387453	0					
ANR	387766	UnaryOperator	&		387453	0					
ANR	387767	Identifier	free_op_data1		387453	1					
ANR	387768	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	30494:2:960929:960967	387453	3	True				
ANR	387769	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		387453	0					
ANR	387770	Callee	ZEND_ASSERT		387453	0					
ANR	387771	Identifier	ZEND_ASSERT		387453	0					
ANR	387772	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		387453	1					
ANR	387773	Argument	Z_TYPE ( rv ) == IS_INDIRECT		387453	0					
ANR	387774	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		387453	0		==			
ANR	387775	CallExpression	Z_TYPE ( rv )		387453	0					
ANR	387776	Callee	Z_TYPE		387453	0					
ANR	387777	Identifier	Z_TYPE		387453	0					
ANR	387778	ArgumentList	rv		387453	1					
ANR	387779	Argument	rv		387453	0					
ANR	387780	Identifier	rv		387453	0					
ANR	387781	Identifier	IS_INDIRECT		387453	1					
ANR	387782	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	30495:2:960971:960995	387453	4	True				
ANR	387783	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		387453	0		=			
ANR	387784	Identifier	var_ptr		387453	0					
ANR	387785	CallExpression	Z_INDIRECT ( rv )		387453	1					
ANR	387786	Callee	Z_INDIRECT		387453	0					
ANR	387787	Identifier	Z_INDIRECT		387453	0					
ANR	387788	ArgumentList	rv		387453	1					
ANR	387789	Argument	rv		387453	0					
ANR	387790	Identifier	rv		387453	0					
ANR	387791	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		387453	5					
ANR	387792	Condition	UNEXPECTED ( var_ptr == NULL )	30497:6:961004:961030	387453	0	True				
ANR	387793	CallExpression	UNEXPECTED ( var_ptr == NULL )		387453	0					
ANR	387794	Callee	UNEXPECTED		387453	0					
ANR	387795	Identifier	UNEXPECTED		387453	0					
ANR	387796	ArgumentList	var_ptr == NULL		387453	1					
ANR	387797	Argument	var_ptr == NULL		387453	0					
ANR	387798	EqualityExpression	var_ptr == NULL		387453	0		==			
ANR	387799	Identifier	var_ptr		387453	0					
ANR	387800	Identifier	NULL		387453	1					
ANR	387801	CompoundStatement		41:35:1404:1404	387453	1					
ANR	387802	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	30498:3:961038:961137	387453	0	True				
ANR	387803	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		387453	0					
ANR	387804	Callee	zend_throw_error		387453	0					
ANR	387805	Identifier	zend_throw_error		387453	0					
ANR	387806	ArgumentList	NULL		387453	1					
ANR	387807	Argument	NULL		387453	0					
ANR	387808	Identifier	NULL		387453	0					
ANR	387809	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		387453	1					
ANR	387810	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		387453	0					
ANR	387811	ExpressionStatement	FREE_OP ( free_op_data1 )	30500:3:961143:961165	387453	1	True				
ANR	387812	CallExpression	FREE_OP ( free_op_data1 )		387453	0					
ANR	387813	Callee	FREE_OP		387453	0					
ANR	387814	Identifier	FREE_OP		387453	0					
ANR	387815	ArgumentList	free_op_data1		387453	1					
ANR	387816	Argument	free_op_data1		387453	0					
ANR	387817	Identifier	free_op_data1		387453	0					
ANR	387818	ExpressionStatement	HANDLE_EXCEPTION ( )	30502:3:961171:961189	387453	2	True				
ANR	387819	CallExpression	HANDLE_EXCEPTION ( )		387453	0					
ANR	387820	Callee	HANDLE_EXCEPTION		387453	0					
ANR	387821	Identifier	HANDLE_EXCEPTION		387453	0					
ANR	387822	ArgumentList			387453	1					
ANR	387823	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		387453	6					
ANR	387824	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	30505:6:961202:961239	387453	0	True				
ANR	387825	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		387453	0					
ANR	387826	Callee	UNEXPECTED		387453	0					
ANR	387827	Identifier	UNEXPECTED		387453	0					
ANR	387828	ArgumentList	var_ptr == & EG ( error_zval )		387453	1					
ANR	387829	Argument	var_ptr == & EG ( error_zval )		387453	0					
ANR	387830	EqualityExpression	var_ptr == & EG ( error_zval )		387453	0		==			
ANR	387831	Identifier	var_ptr		387453	0					
ANR	387832	UnaryOperationExpression	& EG ( error_zval )		387453	1					
ANR	387833	UnaryOperator	&		387453	0					
ANR	387834	CallExpression	EG ( error_zval )		387453	1					
ANR	387835	Callee	EG		387453	0					
ANR	387836	Identifier	EG		387453	0					
ANR	387837	ArgumentList	error_zval		387453	1					
ANR	387838	Argument	error_zval		387453	0					
ANR	387839	Identifier	error_zval		387453	0					
ANR	387840	CompoundStatement		49:46:1613:1613	387453	1					
ANR	387841	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		387453	0					
ANR	387842	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30506:7:961251:961287	387453	0	True				
ANR	387843	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		387453	0					
ANR	387844	Callee	UNEXPECTED		387453	0					
ANR	387845	Identifier	UNEXPECTED		387453	0					
ANR	387846	ArgumentList	RETURN_VALUE_USED ( opline )		387453	1					
ANR	387847	Argument	RETURN_VALUE_USED ( opline )		387453	0					
ANR	387848	CallExpression	RETURN_VALUE_USED ( opline )		387453	0					
ANR	387849	Callee	RETURN_VALUE_USED		387453	0					
ANR	387850	Identifier	RETURN_VALUE_USED		387453	0					
ANR	387851	ArgumentList	opline		387453	1					
ANR	387852	Argument	opline		387453	0					
ANR	387853	Identifier	opline		387453	0					
ANR	387854	CompoundStatement		50:46:1661:1661	387453	1					
ANR	387855	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	30507:4:961296:961333	387453	0	True				
ANR	387856	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		387453	0					
ANR	387857	Callee	ZVAL_NULL		387453	0					
ANR	387858	Identifier	ZVAL_NULL		387453	0					
ANR	387859	ArgumentList	EX_VAR ( opline -> result . var )		387453	1					
ANR	387860	Argument	EX_VAR ( opline -> result . var )		387453	0					
ANR	387861	CallExpression	EX_VAR ( opline -> result . var )		387453	0					
ANR	387862	Callee	EX_VAR		387453	0					
ANR	387863	Identifier	EX_VAR		387453	0					
ANR	387864	ArgumentList	opline -> result . var		387453	1					
ANR	387865	Argument	opline -> result . var		387453	0					
ANR	387866	MemberAccess	opline -> result . var		387453	0					
ANR	387867	PtrMemberAccess	opline -> result		387453	0					
ANR	387868	Identifier	opline		387453	0					
ANR	387869	Identifier	result		387453	1					
ANR	387870	Identifier	var		387453	1					
ANR	387871	ElseStatement	else		387453	0					
ANR	387872	CompoundStatement		53:9:1720:1720	387453	0					
ANR	387873	ExpressionStatement	ZVAL_DEREF ( var_ptr )	30510:3:961354:961373	387453	0	True				
ANR	387874	CallExpression	ZVAL_DEREF ( var_ptr )		387453	0					
ANR	387875	Callee	ZVAL_DEREF		387453	0					
ANR	387876	Identifier	ZVAL_DEREF		387453	0					
ANR	387877	ArgumentList	var_ptr		387453	1					
ANR	387878	Argument	var_ptr		387453	0					
ANR	387879	Identifier	var_ptr		387453	0					
ANR	387880	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	30511:3:961378:961406	387453	1	True				
ANR	387881	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		387453	0					
ANR	387882	Callee	SEPARATE_ZVAL_NOREF		387453	0					
ANR	387883	Identifier	SEPARATE_ZVAL_NOREF		387453	0					
ANR	387884	ArgumentList	var_ptr		387453	1					
ANR	387885	Argument	var_ptr		387453	0					
ANR	387886	Identifier	var_ptr		387453	0					
ANR	387887	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	30513:3:961412:961446	387453	2	True				
ANR	387888	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		387453	0					
ANR	387889	Callee	binary_op		387453	0					
ANR	387890	Identifier	binary_op		387453	0					
ANR	387891	ArgumentList	var_ptr		387453	1					
ANR	387892	Argument	var_ptr		387453	0					
ANR	387893	Identifier	var_ptr		387453	0					
ANR	387894	Argument	var_ptr		387453	1					
ANR	387895	Identifier	var_ptr		387453	0					
ANR	387896	Argument	value		387453	2					
ANR	387897	Identifier	value		387453	0					
ANR	387898	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		387453	3					
ANR	387899	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30515:7:961456:961492	387453	0	True				
ANR	387900	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		387453	0					
ANR	387901	Callee	UNEXPECTED		387453	0					
ANR	387902	Identifier	UNEXPECTED		387453	0					
ANR	387903	ArgumentList	RETURN_VALUE_USED ( opline )		387453	1					
ANR	387904	Argument	RETURN_VALUE_USED ( opline )		387453	0					
ANR	387905	CallExpression	RETURN_VALUE_USED ( opline )		387453	0					
ANR	387906	Callee	RETURN_VALUE_USED		387453	0					
ANR	387907	Identifier	RETURN_VALUE_USED		387453	0					
ANR	387908	ArgumentList	opline		387453	1					
ANR	387909	Argument	opline		387453	0					
ANR	387910	Identifier	opline		387453	0					
ANR	387911	CompoundStatement		59:46:1866:1866	387453	1					
ANR	387912	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	30516:4:961501:961547	387453	0	True				
ANR	387913	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		387453	0					
ANR	387914	Callee	ZVAL_COPY		387453	0					
ANR	387915	Identifier	ZVAL_COPY		387453	0					
ANR	387916	ArgumentList	EX_VAR ( opline -> result . var )		387453	1					
ANR	387917	Argument	EX_VAR ( opline -> result . var )		387453	0					
ANR	387918	CallExpression	EX_VAR ( opline -> result . var )		387453	0					
ANR	387919	Callee	EX_VAR		387453	0					
ANR	387920	Identifier	EX_VAR		387453	0					
ANR	387921	ArgumentList	opline -> result . var		387453	1					
ANR	387922	Argument	opline -> result . var		387453	0					
ANR	387923	MemberAccess	opline -> result . var		387453	0					
ANR	387924	PtrMemberAccess	opline -> result		387453	0					
ANR	387925	Identifier	opline		387453	0					
ANR	387926	Identifier	result		387453	1					
ANR	387927	Identifier	var		387453	1					
ANR	387928	Argument	var_ptr		387453	1					
ANR	387929	Identifier	var_ptr		387453	0					
ANR	387930	Condition	0	30519:10:961568:961568	387453	1	True				
ANR	387931	PrimaryExpression	0		387453	0					
ANR	387932	ExpressionStatement	FREE_OP ( free_op_data1 )	30521:1:961574:961596	387453	9	True				
ANR	387933	CallExpression	FREE_OP ( free_op_data1 )		387453	0					
ANR	387934	Callee	FREE_OP		387453	0					
ANR	387935	Identifier	FREE_OP		387453	0					
ANR	387936	ArgumentList	free_op_data1		387453	1					
ANR	387937	Argument	free_op_data1		387453	0					
ANR	387938	Identifier	free_op_data1		387453	0					
ANR	387939	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	30523:1:961600:961628	387453	10	True				
ANR	387940	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		387453	0					
ANR	387941	Callee	ZEND_VM_NEXT_OPCODE_EX		387453	0					
ANR	387942	Identifier	ZEND_VM_NEXT_OPCODE_EX		387453	0					
ANR	387943	ArgumentList	1		387453	1					
ANR	387944	Argument	1		387453	0					
ANR	387945	PrimaryExpression	1		387453	0					
ANR	387946	Argument	2		387453	1					
ANR	387947	PrimaryExpression	2		387453	0					
ANR	387948	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		387453	1					
ANR	387949	Identifier	zend_binary_assign_op_dim_helper_SPEC_CV_CONST		387453	2					
ANR	387950	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		387453	3					
ANR	387951	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	30456:92:959574:959625	387453	0	True				
ANR	387952	ParameterType	binary_op_type binary_op		387453	0					
ANR	387953	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		387453	1					
ANR	387954	CFGEntryNode	ENTRY		387453		True				
ANR	387955	CFGExitNode	EXIT		387453		True				
ANR	387956	Symbol	container		387453						
ANR	387957	Symbol	opline -> op1		387453						
ANR	387958	Symbol	opline -> op2		387453						
ANR	387959	Symbol	IS_CV		387453						
ANR	387960	Symbol	rv		387453						
ANR	387961	Symbol	Z_OBJ_P		387453						
ANR	387962	Symbol	dim		387453						
ANR	387963	Symbol	Z_TYPE		387453						
ANR	387964	Symbol	free_op_data1		387453						
ANR	387965	Symbol	& EG		387453						
ANR	387966	Symbol	var_ptr		387453						
ANR	387967	Symbol	execute_data		387453						
ANR	387968	Symbol	opline -> result		387453						
ANR	387969	Symbol	( opline + 1 ) -> op1		387453						
ANR	387970	Symbol	UNEXPECTED		387453						
ANR	387971	Symbol	RETURN_VALUE_USED		387453						
ANR	387972	Symbol	( opline + 1 ) -> op1 . var		387453						
ANR	387973	Symbol	opline		387453						
ANR	387974	Symbol	get_zval_ptr_r		387453						
ANR	387975	Symbol	Z_INDIRECT		387453						
ANR	387976	Symbol	IS_ARRAY		387453						
ANR	387977	Symbol	opline -> op1 . var		387453						
ANR	387978	Symbol	value		387453						
ANR	387979	Symbol	binary_op		387453						
ANR	387980	Symbol	( opline + 1 ) -> op1_type		387453						
ANR	387981	Symbol	IS_CONST		387453						
ANR	387982	Symbol	NULL		387453						
ANR	387983	Symbol	EX_CONSTANT		387453						
ANR	387984	Symbol	Z_TYPE_P		387453						
ANR	387985	Symbol	& rv		387453						
ANR	387986	Symbol	* opline		387453						
ANR	387987	Symbol	error_zval		387453						
ANR	387988	Symbol	_get_zval_ptr_cv_BP_VAR_RW		387453						
ANR	387989	Symbol	EX_VAR		387453						
ANR	387990	Symbol	IS_OBJECT		387453						
ANR	387991	Symbol	IS_VAR		387453						
ANR	387992	Symbol	EXPECTED		387453						
ANR	387993	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		387453						
ANR	387994	Symbol	& free_op_data1		387453						
ANR	387995	Symbol	opline -> result . var		387453						
ANR	387996	Symbol	IS_UNUSED		387453						
ANR	387997	Symbol	IS_INDIRECT		387453						
ANR	387998	Function	zend_binary_assign_op_helper_SPEC_CV_CONST	30526:0:961633:962539							
ANR	387999	FunctionDef	zend_binary_assign_op_helper_SPEC_CV_CONST (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		387998	0					
ANR	388000	CompoundStatement		30527:0:961775:962539	387998	0					
ANR	388001	IdentifierDeclStatement	USE_OPLINE zval * var_ptr ;	30528:1:961778:961804	387998	0	True				
ANR	388002	IdentifierDecl	* var_ptr		387998	0					
ANR	388003	IdentifierDeclType	USE_OPLINE zval *		387998	0					
ANR	388004	Identifier	var_ptr		387998	1					
ANR	388005	IdentifierDeclStatement	zval * value ;	30531:1:961807:961818	387998	1	True				
ANR	388006	IdentifierDecl	* value		387998	0					
ANR	388007	IdentifierDeclType	zval *		387998	0					
ANR	388008	Identifier	value		387998	1					
ANR	388009	ExpressionStatement	SAVE_OPLINE ( )	30533:1:961822:961835	387998	2	True				
ANR	388010	CallExpression	SAVE_OPLINE ( )		387998	0					
ANR	388011	Callee	SAVE_OPLINE		387998	0					
ANR	388012	Identifier	SAVE_OPLINE		387998	0					
ANR	388013	ArgumentList			387998	1					
ANR	388014	ExpressionStatement	value = EX_CONSTANT ( opline -> op2 )	30534:1:961838:961870	387998	3	True				
ANR	388015	AssignmentExpression	value = EX_CONSTANT ( opline -> op2 )		387998	0		=			
ANR	388016	Identifier	value		387998	0					
ANR	388017	CallExpression	EX_CONSTANT ( opline -> op2 )		387998	1					
ANR	388018	Callee	EX_CONSTANT		387998	0					
ANR	388019	Identifier	EX_CONSTANT		387998	0					
ANR	388020	ArgumentList	opline -> op2		387998	1					
ANR	388021	Argument	opline -> op2		387998	0					
ANR	388022	PtrMemberAccess	opline -> op2		387998	0					
ANR	388023	Identifier	opline		387998	0					
ANR	388024	Identifier	op2		387998	1					
ANR	388025	ExpressionStatement	"var_ptr = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	30535:1:961873:961940	387998	4	True				
ANR	388026	AssignmentExpression	"var_ptr = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		387998	0		=			
ANR	388027	Identifier	var_ptr		387998	0					
ANR	388028	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		387998	1					
ANR	388029	Callee	_get_zval_ptr_cv_BP_VAR_RW		387998	0					
ANR	388030	Identifier	_get_zval_ptr_cv_BP_VAR_RW		387998	0					
ANR	388031	ArgumentList	execute_data		387998	1					
ANR	388032	Argument	execute_data		387998	0					
ANR	388033	Identifier	execute_data		387998	0					
ANR	388034	Argument	opline -> op1 . var		387998	1					
ANR	388035	MemberAccess	opline -> op1 . var		387998	0					
ANR	388036	PtrMemberAccess	opline -> op1		387998	0					
ANR	388037	Identifier	opline		387998	0					
ANR	388038	Identifier	op1		387998	1					
ANR	388039	Identifier	var		387998	1					
ANR	388040	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL ) )		387998	5					
ANR	388041	Condition	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL )	30537:5:961948:961993	387998	0	True				
ANR	388042	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL )		387998	0		&&			
ANR	388043	EqualityExpression	IS_CV == IS_VAR		387998	0		==			
ANR	388044	Identifier	IS_CV		387998	0					
ANR	388045	Identifier	IS_VAR		387998	1					
ANR	388046	CallExpression	UNEXPECTED ( var_ptr == NULL )		387998	1					
ANR	388047	Callee	UNEXPECTED		387998	0					
ANR	388048	Identifier	UNEXPECTED		387998	0					
ANR	388049	ArgumentList	var_ptr == NULL		387998	1					
ANR	388050	Argument	var_ptr == NULL		387998	0					
ANR	388051	EqualityExpression	var_ptr == NULL		387998	0		==			
ANR	388052	Identifier	var_ptr		387998	0					
ANR	388053	Identifier	NULL		387998	1					
ANR	388054	CompoundStatement		11:53:220:220	387998	1					
ANR	388055	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	30538:2:962000:962099	387998	0	True				
ANR	388056	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		387998	0					
ANR	388057	Callee	zend_throw_error		387998	0					
ANR	388058	Identifier	zend_throw_error		387998	0					
ANR	388059	ArgumentList	NULL		387998	1					
ANR	388060	Argument	NULL		387998	0					
ANR	388061	Identifier	NULL		387998	0					
ANR	388062	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		387998	1					
ANR	388063	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		387998	0					
ANR	388064	ExpressionStatement	HANDLE_EXCEPTION ( )	30540:2:962104:962122	387998	1	True				
ANR	388065	CallExpression	HANDLE_EXCEPTION ( )		387998	0					
ANR	388066	Callee	HANDLE_EXCEPTION		387998	0					
ANR	388067	Identifier	HANDLE_EXCEPTION		387998	0					
ANR	388068	ArgumentList			387998	1					
ANR	388069	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		387998	6					
ANR	388070	Condition	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )	30543:5:962133:962189	387998	0	True				
ANR	388071	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )		387998	0		&&			
ANR	388072	EqualityExpression	IS_CV == IS_VAR		387998	0		==			
ANR	388073	Identifier	IS_CV		387998	0					
ANR	388074	Identifier	IS_VAR		387998	1					
ANR	388075	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		387998	1					
ANR	388076	Callee	UNEXPECTED		387998	0					
ANR	388077	Identifier	UNEXPECTED		387998	0					
ANR	388078	ArgumentList	var_ptr == & EG ( error_zval )		387998	1					
ANR	388079	Argument	var_ptr == & EG ( error_zval )		387998	0					
ANR	388080	EqualityExpression	var_ptr == & EG ( error_zval )		387998	0		==			
ANR	388081	Identifier	var_ptr		387998	0					
ANR	388082	UnaryOperationExpression	& EG ( error_zval )		387998	1					
ANR	388083	UnaryOperator	&		387998	0					
ANR	388084	CallExpression	EG ( error_zval )		387998	1					
ANR	388085	Callee	EG		387998	0					
ANR	388086	Identifier	EG		387998	0					
ANR	388087	ArgumentList	error_zval		387998	1					
ANR	388088	Argument	error_zval		387998	0					
ANR	388089	Identifier	error_zval		387998	0					
ANR	388090	CompoundStatement		17:64:416:416	387998	1					
ANR	388091	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		387998	0					
ANR	388092	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30544:6:962200:962236	387998	0	True				
ANR	388093	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		387998	0					
ANR	388094	Callee	UNEXPECTED		387998	0					
ANR	388095	Identifier	UNEXPECTED		387998	0					
ANR	388096	ArgumentList	RETURN_VALUE_USED ( opline )		387998	1					
ANR	388097	Argument	RETURN_VALUE_USED ( opline )		387998	0					
ANR	388098	CallExpression	RETURN_VALUE_USED ( opline )		387998	0					
ANR	388099	Callee	RETURN_VALUE_USED		387998	0					
ANR	388100	Identifier	RETURN_VALUE_USED		387998	0					
ANR	388101	ArgumentList	opline		387998	1					
ANR	388102	Argument	opline		387998	0					
ANR	388103	Identifier	opline		387998	0					
ANR	388104	CompoundStatement		18:45:463:463	387998	1					
ANR	388105	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	30545:3:962244:962281	387998	0	True				
ANR	388106	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		387998	0					
ANR	388107	Callee	ZVAL_NULL		387998	0					
ANR	388108	Identifier	ZVAL_NULL		387998	0					
ANR	388109	ArgumentList	EX_VAR ( opline -> result . var )		387998	1					
ANR	388110	Argument	EX_VAR ( opline -> result . var )		387998	0					
ANR	388111	CallExpression	EX_VAR ( opline -> result . var )		387998	0					
ANR	388112	Callee	EX_VAR		387998	0					
ANR	388113	Identifier	EX_VAR		387998	0					
ANR	388114	ArgumentList	opline -> result . var		387998	1					
ANR	388115	Argument	opline -> result . var		387998	0					
ANR	388116	MemberAccess	opline -> result . var		387998	0					
ANR	388117	PtrMemberAccess	opline -> result		387998	0					
ANR	388118	Identifier	opline		387998	0					
ANR	388119	Identifier	result		387998	1					
ANR	388120	Identifier	var		387998	1					
ANR	388121	ElseStatement	else		387998	0					
ANR	388122	CompoundStatement		21:8:519:519	387998	0					
ANR	388123	ExpressionStatement	ZVAL_DEREF ( var_ptr )	30548:2:962299:962318	387998	0	True				
ANR	388124	CallExpression	ZVAL_DEREF ( var_ptr )		387998	0					
ANR	388125	Callee	ZVAL_DEREF		387998	0					
ANR	388126	Identifier	ZVAL_DEREF		387998	0					
ANR	388127	ArgumentList	var_ptr		387998	1					
ANR	388128	Argument	var_ptr		387998	0					
ANR	388129	Identifier	var_ptr		387998	0					
ANR	388130	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	30549:2:962322:962350	387998	1	True				
ANR	388131	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		387998	0					
ANR	388132	Callee	SEPARATE_ZVAL_NOREF		387998	0					
ANR	388133	Identifier	SEPARATE_ZVAL_NOREF		387998	0					
ANR	388134	ArgumentList	var_ptr		387998	1					
ANR	388135	Argument	var_ptr		387998	0					
ANR	388136	Identifier	var_ptr		387998	0					
ANR	388137	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	30551:2:962355:962389	387998	2	True				
ANR	388138	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		387998	0					
ANR	388139	Callee	binary_op		387998	0					
ANR	388140	Identifier	binary_op		387998	0					
ANR	388141	ArgumentList	var_ptr		387998	1					
ANR	388142	Argument	var_ptr		387998	0					
ANR	388143	Identifier	var_ptr		387998	0					
ANR	388144	Argument	var_ptr		387998	1					
ANR	388145	Identifier	var_ptr		387998	0					
ANR	388146	Argument	value		387998	2					
ANR	388147	Identifier	value		387998	0					
ANR	388148	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		387998	3					
ANR	388149	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30553:6:962398:962434	387998	0	True				
ANR	388150	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		387998	0					
ANR	388151	Callee	UNEXPECTED		387998	0					
ANR	388152	Identifier	UNEXPECTED		387998	0					
ANR	388153	ArgumentList	RETURN_VALUE_USED ( opline )		387998	1					
ANR	388154	Argument	RETURN_VALUE_USED ( opline )		387998	0					
ANR	388155	CallExpression	RETURN_VALUE_USED ( opline )		387998	0					
ANR	388156	Callee	RETURN_VALUE_USED		387998	0					
ANR	388157	Identifier	RETURN_VALUE_USED		387998	0					
ANR	388158	ArgumentList	opline		387998	1					
ANR	388159	Argument	opline		387998	0					
ANR	388160	Identifier	opline		387998	0					
ANR	388161	CompoundStatement		27:45:661:661	387998	1					
ANR	388162	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	30554:3:962442:962488	387998	0	True				
ANR	388163	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		387998	0					
ANR	388164	Callee	ZVAL_COPY		387998	0					
ANR	388165	Identifier	ZVAL_COPY		387998	0					
ANR	388166	ArgumentList	EX_VAR ( opline -> result . var )		387998	1					
ANR	388167	Argument	EX_VAR ( opline -> result . var )		387998	0					
ANR	388168	CallExpression	EX_VAR ( opline -> result . var )		387998	0					
ANR	388169	Callee	EX_VAR		387998	0					
ANR	388170	Identifier	EX_VAR		387998	0					
ANR	388171	ArgumentList	opline -> result . var		387998	1					
ANR	388172	Argument	opline -> result . var		387998	0					
ANR	388173	MemberAccess	opline -> result . var		387998	0					
ANR	388174	PtrMemberAccess	opline -> result		387998	0					
ANR	388175	Identifier	opline		387998	0					
ANR	388176	Identifier	result		387998	1					
ANR	388177	Identifier	var		387998	1					
ANR	388178	Argument	var_ptr		387998	1					
ANR	388179	Identifier	var_ptr		387998	0					
ANR	388180	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	30559:1:962500:962537	387998	7	True				
ANR	388181	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		387998	0					
ANR	388182	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		387998	0					
ANR	388183	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		387998	0					
ANR	388184	ArgumentList			387998	1					
ANR	388185	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		387998	1					
ANR	388186	Identifier	zend_binary_assign_op_helper_SPEC_CV_CONST		387998	2					
ANR	388187	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		387998	3					
ANR	388188	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	30526:88:961721:961772	387998	0	True				
ANR	388189	ParameterType	binary_op_type binary_op		387998	0					
ANR	388190	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		387998	1					
ANR	388191	CFGEntryNode	ENTRY		387998		True				
ANR	388192	CFGExitNode	EXIT		387998		True				
ANR	388193	Symbol	opline -> op1		387998						
ANR	388194	Symbol	opline -> op2		387998						
ANR	388195	Symbol	NULL		387998						
ANR	388196	Symbol	IS_CV		387998						
ANR	388197	Symbol	EX_CONSTANT		387998						
ANR	388198	Symbol	& EG		387998						
ANR	388199	Symbol	var_ptr		387998						
ANR	388200	Symbol	execute_data		387998						
ANR	388201	Symbol	opline -> result		387998						
ANR	388202	Symbol	UNEXPECTED		387998						
ANR	388203	Symbol	RETURN_VALUE_USED		387998						
ANR	388204	Symbol	opline		387998						
ANR	388205	Symbol	* opline		387998						
ANR	388206	Symbol	error_zval		387998						
ANR	388207	Symbol	_get_zval_ptr_cv_BP_VAR_RW		387998						
ANR	388208	Symbol	EX_VAR		387998						
ANR	388209	Symbol	opline -> op1 . var		387998						
ANR	388210	Symbol	value		387998						
ANR	388211	Symbol	IS_VAR		387998						
ANR	388212	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		387998						
ANR	388213	Symbol	opline -> result . var		387998						
ANR	388214	Function	zend_pre_incdec_property_helper_SPEC_CV_CONST	30802:0:973179:975189							
ANR	388215	FunctionDef	zend_pre_incdec_property_helper_SPEC_CV_CONST (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		388214	0					
ANR	388216	CompoundStatement		30803:0:973307:975189	388214	0					
ANR	388217	IdentifierDeclStatement	USE_OPLINE zval * object ;	30804:1:973310:973335	388214	0	True				
ANR	388218	IdentifierDecl	* object		388214	0					
ANR	388219	IdentifierDeclType	USE_OPLINE zval *		388214	0					
ANR	388220	Identifier	object		388214	1					
ANR	388221	IdentifierDeclStatement	zval * property ;	30807:1:973338:973352	388214	1	True				
ANR	388222	IdentifierDecl	* property		388214	0					
ANR	388223	IdentifierDeclType	zval *		388214	0					
ANR	388224	Identifier	property		388214	1					
ANR	388225	IdentifierDeclStatement	zval * zptr ;	30808:1:973355:973365	388214	2	True				
ANR	388226	IdentifierDecl	* zptr		388214	0					
ANR	388227	IdentifierDeclType	zval *		388214	0					
ANR	388228	Identifier	zptr		388214	1					
ANR	388229	ExpressionStatement	SAVE_OPLINE ( )	30810:1:973369:973382	388214	3	True				
ANR	388230	CallExpression	SAVE_OPLINE ( )		388214	0					
ANR	388231	Callee	SAVE_OPLINE		388214	0					
ANR	388232	Identifier	SAVE_OPLINE		388214	0					
ANR	388233	ArgumentList			388214	1					
ANR	388234	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	30811:1:973385:973451	388214	4	True				
ANR	388235	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		388214	0		=			
ANR	388236	Identifier	object		388214	0					
ANR	388237	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		388214	1					
ANR	388238	Callee	_get_zval_ptr_cv_BP_VAR_RW		388214	0					
ANR	388239	Identifier	_get_zval_ptr_cv_BP_VAR_RW		388214	0					
ANR	388240	ArgumentList	execute_data		388214	1					
ANR	388241	Argument	execute_data		388214	0					
ANR	388242	Identifier	execute_data		388214	0					
ANR	388243	Argument	opline -> op1 . var		388214	1					
ANR	388244	MemberAccess	opline -> op1 . var		388214	0					
ANR	388245	PtrMemberAccess	opline -> op1		388214	0					
ANR	388246	Identifier	opline		388214	0					
ANR	388247	Identifier	op1		388214	1					
ANR	388248	Identifier	var		388214	1					
ANR	388249	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		388214	5					
ANR	388250	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	30813:5:973459:973515	388214	0	True				
ANR	388251	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		388214	0		&&			
ANR	388252	EqualityExpression	IS_CV == IS_UNUSED		388214	0		==			
ANR	388253	Identifier	IS_CV		388214	0					
ANR	388254	Identifier	IS_UNUSED		388214	1					
ANR	388255	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		388214	1					
ANR	388256	Callee	UNEXPECTED		388214	0					
ANR	388257	Identifier	UNEXPECTED		388214	0					
ANR	388258	ArgumentList	Z_OBJ_P ( object ) == NULL		388214	1					
ANR	388259	Argument	Z_OBJ_P ( object ) == NULL		388214	0					
ANR	388260	EqualityExpression	Z_OBJ_P ( object ) == NULL		388214	0		==			
ANR	388261	CallExpression	Z_OBJ_P ( object )		388214	0					
ANR	388262	Callee	Z_OBJ_P		388214	0					
ANR	388263	Identifier	Z_OBJ_P		388214	0					
ANR	388264	ArgumentList	object		388214	1					
ANR	388265	Argument	object		388214	0					
ANR	388266	Identifier	object		388214	0					
ANR	388267	Identifier	NULL		388214	1					
ANR	388268	CompoundStatement		11:64:210:210	388214	1					
ANR	388269	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	30814:2:973522:973586	388214	0	True				
ANR	388270	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		388214	0					
ANR	388271	Callee	zend_throw_error		388214	0					
ANR	388272	Identifier	zend_throw_error		388214	0					
ANR	388273	ArgumentList	NULL		388214	1					
ANR	388274	Argument	NULL		388214	0					
ANR	388275	Identifier	NULL		388214	0					
ANR	388276	Argument	"""Using $this when not in object context"""		388214	1					
ANR	388277	PrimaryExpression	"""Using $this when not in object context"""		388214	0					
ANR	388278	ExpressionStatement	HANDLE_EXCEPTION ( )	30816:2:973591:973609	388214	1	True				
ANR	388279	CallExpression	HANDLE_EXCEPTION ( )		388214	0					
ANR	388280	Callee	HANDLE_EXCEPTION		388214	0					
ANR	388281	Identifier	HANDLE_EXCEPTION		388214	0					
ANR	388282	ArgumentList			388214	1					
ANR	388283	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	30819:1:973616:973651	388214	6	True				
ANR	388284	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		388214	0		=			
ANR	388285	Identifier	property		388214	0					
ANR	388286	CallExpression	EX_CONSTANT ( opline -> op2 )		388214	1					
ANR	388287	Callee	EX_CONSTANT		388214	0					
ANR	388288	Identifier	EX_CONSTANT		388214	0					
ANR	388289	ArgumentList	opline -> op2		388214	1					
ANR	388290	Argument	opline -> op2		388214	0					
ANR	388291	PtrMemberAccess	opline -> op2		388214	0					
ANR	388292	Identifier	opline		388214	0					
ANR	388293	Identifier	op2		388214	1					
ANR	388294	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		388214	7					
ANR	388295	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	30821:5:973659:973703	388214	0	True				
ANR	388296	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		388214	0		&&			
ANR	388297	EqualityExpression	IS_CV == IS_VAR		388214	0		==			
ANR	388298	Identifier	IS_CV		388214	0					
ANR	388299	Identifier	IS_VAR		388214	1					
ANR	388300	CallExpression	UNEXPECTED ( object == NULL )		388214	1					
ANR	388301	Callee	UNEXPECTED		388214	0					
ANR	388302	Identifier	UNEXPECTED		388214	0					
ANR	388303	ArgumentList	object == NULL		388214	1					
ANR	388304	Argument	object == NULL		388214	0					
ANR	388305	EqualityExpression	object == NULL		388214	0		==			
ANR	388306	Identifier	object		388214	0					
ANR	388307	Identifier	NULL		388214	1					
ANR	388308	CompoundStatement		19:52:398:398	388214	1					
ANR	388309	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	30822:2:973710:973800	388214	0	True				
ANR	388310	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		388214	0					
ANR	388311	Callee	zend_throw_error		388214	0					
ANR	388312	Identifier	zend_throw_error		388214	0					
ANR	388313	ArgumentList	NULL		388214	1					
ANR	388314	Argument	NULL		388214	0					
ANR	388315	Identifier	NULL		388214	0					
ANR	388316	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		388214	1					
ANR	388317	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		388214	0					
ANR	388318	ExpressionStatement	HANDLE_EXCEPTION ( )	30824:2:973805:973823	388214	1	True				
ANR	388319	CallExpression	HANDLE_EXCEPTION ( )		388214	0					
ANR	388320	Callee	HANDLE_EXCEPTION		388214	0					
ANR	388321	Identifier	HANDLE_EXCEPTION		388214	0					
ANR	388322	ArgumentList			388214	1					
ANR	388323	DoStatement	do		388214	8					
ANR	388324	CompoundStatement		25:4:525:525	388214	0					
ANR	388325	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		388214	0					
ANR	388326	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	30828:6:973841:973903	388214	0	True				
ANR	388327	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		388214	0		&&			
ANR	388328	EqualityExpression	IS_CV != IS_UNUSED		388214	0		!=			
ANR	388329	Identifier	IS_CV		388214	0					
ANR	388330	Identifier	IS_UNUSED		388214	1					
ANR	388331	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		388214	1					
ANR	388332	Callee	UNEXPECTED		388214	0					
ANR	388333	Identifier	UNEXPECTED		388214	0					
ANR	388334	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		388214	1					
ANR	388335	Argument	Z_TYPE_P ( object ) != IS_OBJECT		388214	0					
ANR	388336	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		388214	0		!=			
ANR	388337	CallExpression	Z_TYPE_P ( object )		388214	0					
ANR	388338	Callee	Z_TYPE_P		388214	0					
ANR	388339	Identifier	Z_TYPE_P		388214	0					
ANR	388340	ArgumentList	object		388214	1					
ANR	388341	Argument	object		388214	0					
ANR	388342	Identifier	object		388214	0					
ANR	388343	Identifier	IS_OBJECT		388214	1					
ANR	388344	CompoundStatement		26:71:598:598	388214	1					
ANR	388345	ExpressionStatement	ZVAL_DEREF ( object )	30829:3:973911:973929	388214	0	True				
ANR	388346	CallExpression	ZVAL_DEREF ( object )		388214	0					
ANR	388347	Callee	ZVAL_DEREF		388214	0					
ANR	388348	Identifier	ZVAL_DEREF		388214	0					
ANR	388349	ArgumentList	object		388214	1					
ANR	388350	Argument	object		388214	0					
ANR	388351	Identifier	object		388214	0					
ANR	388352	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		388214	1					
ANR	388353	Condition	UNEXPECTED ( ! make_real_object ( object ) )	30830:7:973938:973974	388214	0	True				
ANR	388354	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		388214	0					
ANR	388355	Callee	UNEXPECTED		388214	0					
ANR	388356	Identifier	UNEXPECTED		388214	0					
ANR	388357	ArgumentList	! make_real_object ( object )		388214	1					
ANR	388358	Argument	! make_real_object ( object )		388214	0					
ANR	388359	UnaryOperationExpression	! make_real_object ( object )		388214	0					
ANR	388360	UnaryOperator	!		388214	0					
ANR	388361	CallExpression	make_real_object ( object )		388214	1					
ANR	388362	Callee	make_real_object		388214	0					
ANR	388363	Identifier	make_real_object		388214	0					
ANR	388364	ArgumentList	object		388214	1					
ANR	388365	Argument	object		388214	0					
ANR	388366	Identifier	object		388214	0					
ANR	388367	CompoundStatement		28:46:669:669	388214	1					
ANR	388368	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	30831:4:973983:974061	388214	0	True				
ANR	388369	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		388214	0					
ANR	388370	Callee	zend_error		388214	0					
ANR	388371	Identifier	zend_error		388214	0					
ANR	388372	ArgumentList	E_WARNING		388214	1					
ANR	388373	Argument	E_WARNING		388214	0					
ANR	388374	Identifier	E_WARNING		388214	0					
ANR	388375	Argument	"""Attempt to increment/decrement property of non-object"""		388214	1					
ANR	388376	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		388214	0					
ANR	388377	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		388214	1					
ANR	388378	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30832:8:974071:974107	388214	0	True				
ANR	388379	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		388214	0					
ANR	388380	Callee	UNEXPECTED		388214	0					
ANR	388381	Identifier	UNEXPECTED		388214	0					
ANR	388382	ArgumentList	RETURN_VALUE_USED ( opline )		388214	1					
ANR	388383	Argument	RETURN_VALUE_USED ( opline )		388214	0					
ANR	388384	CallExpression	RETURN_VALUE_USED ( opline )		388214	0					
ANR	388385	Callee	RETURN_VALUE_USED		388214	0					
ANR	388386	Identifier	RETURN_VALUE_USED		388214	0					
ANR	388387	ArgumentList	opline		388214	1					
ANR	388388	Argument	opline		388214	0					
ANR	388389	Identifier	opline		388214	0					
ANR	388390	CompoundStatement		30:47:802:802	388214	1					
ANR	388391	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	30833:5:974117:974154	388214	0	True				
ANR	388392	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		388214	0					
ANR	388393	Callee	ZVAL_NULL		388214	0					
ANR	388394	Identifier	ZVAL_NULL		388214	0					
ANR	388395	ArgumentList	EX_VAR ( opline -> result . var )		388214	1					
ANR	388396	Argument	EX_VAR ( opline -> result . var )		388214	0					
ANR	388397	CallExpression	EX_VAR ( opline -> result . var )		388214	0					
ANR	388398	Callee	EX_VAR		388214	0					
ANR	388399	Identifier	EX_VAR		388214	0					
ANR	388400	ArgumentList	opline -> result . var		388214	1					
ANR	388401	Argument	opline -> result . var		388214	0					
ANR	388402	MemberAccess	opline -> result . var		388214	0					
ANR	388403	PtrMemberAccess	opline -> result		388214	0					
ANR	388404	Identifier	opline		388214	0					
ANR	388405	Identifier	result		388214	1					
ANR	388406	Identifier	var		388214	1					
ANR	388407	BreakStatement	break ;	30835:4:974166:974171	388214	2	True				
ANR	388408	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		388214	1					
ANR	388409	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	30841:6:974245:974469	388214	0	True				
ANR	388410	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		388214	0		&&			
ANR	388411	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		388214	0					
ANR	388412	Callee	EXPECTED		388214	0					
ANR	388413	Identifier	EXPECTED		388214	0					
ANR	388414	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388214	1					
ANR	388415	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388214	0					
ANR	388416	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388214	0					
ANR	388417	CallExpression	Z_OBJ_HT_P ( object )		388214	0					
ANR	388418	Callee	Z_OBJ_HT_P		388214	0					
ANR	388419	Identifier	Z_OBJ_HT_P		388214	0					
ANR	388420	ArgumentList	object		388214	1					
ANR	388421	Argument	object		388214	0					
ANR	388422	Identifier	object		388214	0					
ANR	388423	Identifier	get_property_ptr_ptr		388214	1					
ANR	388424	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		388214	1					
ANR	388425	Callee	EXPECTED		388214	0					
ANR	388426	Identifier	EXPECTED		388214	0					
ANR	388427	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		388214	1					
ANR	388428	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		388214	0					
ANR	388429	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		388214	0		!=			
ANR	388430	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		388214	0		=			
ANR	388431	Identifier	zptr		388214	0					
ANR	388432	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		388214	1					
ANR	388433	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388214	0					
ANR	388434	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388214	0					
ANR	388435	CallExpression	Z_OBJ_HT_P ( object )		388214	0					
ANR	388436	Callee	Z_OBJ_HT_P		388214	0					
ANR	388437	Identifier	Z_OBJ_HT_P		388214	0					
ANR	388438	ArgumentList	object		388214	1					
ANR	388439	Argument	object		388214	0					
ANR	388440	Identifier	object		388214	0					
ANR	388441	Identifier	get_property_ptr_ptr		388214	1					
ANR	388442	ArgumentList	object		388214	1					
ANR	388443	Argument	object		388214	0					
ANR	388444	Identifier	object		388214	0					
ANR	388445	Argument	property		388214	1					
ANR	388446	Identifier	property		388214	0					
ANR	388447	Argument	BP_VAR_RW		388214	2					
ANR	388448	Identifier	BP_VAR_RW		388214	0					
ANR	388449	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388214	3					
ANR	388450	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388214	0					
ANR	388451	Condition	IS_CONST == IS_CONST		388214	0					
ANR	388452	EqualityExpression	IS_CONST == IS_CONST		388214	0		==			
ANR	388453	Identifier	IS_CONST		388214	0					
ANR	388454	Identifier	IS_CONST		388214	1					
ANR	388455	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		388214	1					
ANR	388456	Callee	CACHE_ADDR		388214	0					
ANR	388457	Identifier	CACHE_ADDR		388214	0					
ANR	388458	ArgumentList	Z_CACHE_SLOT_P ( property )		388214	1					
ANR	388459	Argument	Z_CACHE_SLOT_P ( property )		388214	0					
ANR	388460	CallExpression	Z_CACHE_SLOT_P ( property )		388214	0					
ANR	388461	Callee	Z_CACHE_SLOT_P		388214	0					
ANR	388462	Identifier	Z_CACHE_SLOT_P		388214	0					
ANR	388463	ArgumentList	property		388214	1					
ANR	388464	Argument	property		388214	0					
ANR	388465	Identifier	property		388214	0					
ANR	388466	Identifier	NULL		388214	2					
ANR	388467	Identifier	NULL		388214	1					
ANR	388468	CompoundStatement		40:176:1164:1164	388214	1					
ANR	388469	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		388214	0					
ANR	388470	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	30844:7:974482:974516	388214	0	True				
ANR	388471	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		388214	0					
ANR	388472	Callee	EXPECTED		388214	0					
ANR	388473	Identifier	EXPECTED		388214	0					
ANR	388474	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		388214	1					
ANR	388475	Argument	Z_TYPE_P ( zptr ) == IS_LONG		388214	0					
ANR	388476	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		388214	0		==			
ANR	388477	CallExpression	Z_TYPE_P ( zptr )		388214	0					
ANR	388478	Callee	Z_TYPE_P		388214	0					
ANR	388479	Identifier	Z_TYPE_P		388214	0					
ANR	388480	ArgumentList	zptr		388214	1					
ANR	388481	Argument	zptr		388214	0					
ANR	388482	Identifier	zptr		388214	0					
ANR	388483	Identifier	IS_LONG		388214	1					
ANR	388484	CompoundStatement		42:44:1211:1211	388214	1					
ANR	388485	IfStatement	if ( inc )		388214	0					
ANR	388486	Condition	inc	30845:8:974529:974531	388214	0	True				
ANR	388487	Identifier	inc		388214	0					
ANR	388488	CompoundStatement		43:13:1226:1226	388214	1					
ANR	388489	ExpressionStatement	fast_long_increment_function ( zptr )	30846:5:974541:974575	388214	0	True				
ANR	388490	CallExpression	fast_long_increment_function ( zptr )		388214	0					
ANR	388491	Callee	fast_long_increment_function		388214	0					
ANR	388492	Identifier	fast_long_increment_function		388214	0					
ANR	388493	ArgumentList	zptr		388214	1					
ANR	388494	Argument	zptr		388214	0					
ANR	388495	Identifier	zptr		388214	0					
ANR	388496	ElseStatement	else		388214	0					
ANR	388497	CompoundStatement		45:11:1280:1280	388214	0					
ANR	388498	ExpressionStatement	fast_long_decrement_function ( zptr )	30848:5:974595:974629	388214	0	True				
ANR	388499	CallExpression	fast_long_decrement_function ( zptr )		388214	0					
ANR	388500	Callee	fast_long_decrement_function		388214	0					
ANR	388501	Identifier	fast_long_decrement_function		388214	0					
ANR	388502	ArgumentList	zptr		388214	1					
ANR	388503	Argument	zptr		388214	0					
ANR	388504	Identifier	zptr		388214	0					
ANR	388505	ElseStatement	else		388214	0					
ANR	388506	CompoundStatement		48:10:1339:1339	388214	0					
ANR	388507	ExpressionStatement	ZVAL_DEREF ( zptr )	30851:4:974653:974669	388214	0	True				
ANR	388508	CallExpression	ZVAL_DEREF ( zptr )		388214	0					
ANR	388509	Callee	ZVAL_DEREF		388214	0					
ANR	388510	Identifier	ZVAL_DEREF		388214	0					
ANR	388511	ArgumentList	zptr		388214	1					
ANR	388512	Argument	zptr		388214	0					
ANR	388513	Identifier	zptr		388214	0					
ANR	388514	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	30852:4:974675:974700	388214	1	True				
ANR	388515	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		388214	0					
ANR	388516	Callee	SEPARATE_ZVAL_NOREF		388214	0					
ANR	388517	Identifier	SEPARATE_ZVAL_NOREF		388214	0					
ANR	388518	ArgumentList	zptr		388214	1					
ANR	388519	Argument	zptr		388214	0					
ANR	388520	Identifier	zptr		388214	0					
ANR	388521	IfStatement	if ( inc )		388214	2					
ANR	388522	Condition	inc	30854:8:974711:974713	388214	0	True				
ANR	388523	Identifier	inc		388214	0					
ANR	388524	CompoundStatement		52:13:1408:1408	388214	1					
ANR	388525	ExpressionStatement	increment_function ( zptr )	30855:5:974723:974747	388214	0	True				
ANR	388526	CallExpression	increment_function ( zptr )		388214	0					
ANR	388527	Callee	increment_function		388214	0					
ANR	388528	Identifier	increment_function		388214	0					
ANR	388529	ArgumentList	zptr		388214	1					
ANR	388530	Argument	zptr		388214	0					
ANR	388531	Identifier	zptr		388214	0					
ANR	388532	ElseStatement	else		388214	0					
ANR	388533	CompoundStatement		54:11:1452:1452	388214	0					
ANR	388534	ExpressionStatement	decrement_function ( zptr )	30857:5:974767:974791	388214	0	True				
ANR	388535	CallExpression	decrement_function ( zptr )		388214	0					
ANR	388536	Callee	decrement_function		388214	0					
ANR	388537	Identifier	decrement_function		388214	0					
ANR	388538	ArgumentList	zptr		388214	1					
ANR	388539	Argument	zptr		388214	0					
ANR	388540	Identifier	zptr		388214	0					
ANR	388541	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		388214	1					
ANR	388542	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	30860:7:974811:974847	388214	0	True				
ANR	388543	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		388214	0					
ANR	388544	Callee	UNEXPECTED		388214	0					
ANR	388545	Identifier	UNEXPECTED		388214	0					
ANR	388546	ArgumentList	RETURN_VALUE_USED ( opline )		388214	1					
ANR	388547	Argument	RETURN_VALUE_USED ( opline )		388214	0					
ANR	388548	CallExpression	RETURN_VALUE_USED ( opline )		388214	0					
ANR	388549	Callee	RETURN_VALUE_USED		388214	0					
ANR	388550	Identifier	RETURN_VALUE_USED		388214	0					
ANR	388551	ArgumentList	opline		388214	1					
ANR	388552	Argument	opline		388214	0					
ANR	388553	Identifier	opline		388214	0					
ANR	388554	CompoundStatement		58:46:1542:1542	388214	1					
ANR	388555	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	30861:4:974856:974899	388214	0	True				
ANR	388556	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		388214	0					
ANR	388557	Callee	ZVAL_COPY		388214	0					
ANR	388558	Identifier	ZVAL_COPY		388214	0					
ANR	388559	ArgumentList	EX_VAR ( opline -> result . var )		388214	1					
ANR	388560	Argument	EX_VAR ( opline -> result . var )		388214	0					
ANR	388561	CallExpression	EX_VAR ( opline -> result . var )		388214	0					
ANR	388562	Callee	EX_VAR		388214	0					
ANR	388563	Identifier	EX_VAR		388214	0					
ANR	388564	ArgumentList	opline -> result . var		388214	1					
ANR	388565	Argument	opline -> result . var		388214	0					
ANR	388566	MemberAccess	opline -> result . var		388214	0					
ANR	388567	PtrMemberAccess	opline -> result		388214	0					
ANR	388568	Identifier	opline		388214	0					
ANR	388569	Identifier	result		388214	1					
ANR	388570	Identifier	var		388214	1					
ANR	388571	Argument	zptr		388214	1					
ANR	388572	Identifier	zptr		388214	0					
ANR	388573	ElseStatement	else		388214	0					
ANR	388574	CompoundStatement		61:9:1607:1607	388214	0					
ANR	388575	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	30864:3:974920:975127	388214	0	True				
ANR	388576	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		388214	0					
ANR	388577	Callee	zend_pre_incdec_overloaded_property		388214	0					
ANR	388578	Identifier	zend_pre_incdec_overloaded_property		388214	0					
ANR	388579	ArgumentList	object		388214	1					
ANR	388580	Argument	object		388214	0					
ANR	388581	Identifier	object		388214	0					
ANR	388582	Argument	property		388214	1					
ANR	388583	Identifier	property		388214	0					
ANR	388584	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388214	2					
ANR	388585	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388214	0					
ANR	388586	Condition	IS_CONST == IS_CONST		388214	0					
ANR	388587	EqualityExpression	IS_CONST == IS_CONST		388214	0		==			
ANR	388588	Identifier	IS_CONST		388214	0					
ANR	388589	Identifier	IS_CONST		388214	1					
ANR	388590	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		388214	1					
ANR	388591	Callee	CACHE_ADDR		388214	0					
ANR	388592	Identifier	CACHE_ADDR		388214	0					
ANR	388593	ArgumentList	Z_CACHE_SLOT_P ( property )		388214	1					
ANR	388594	Argument	Z_CACHE_SLOT_P ( property )		388214	0					
ANR	388595	CallExpression	Z_CACHE_SLOT_P ( property )		388214	0					
ANR	388596	Callee	Z_CACHE_SLOT_P		388214	0					
ANR	388597	Identifier	Z_CACHE_SLOT_P		388214	0					
ANR	388598	ArgumentList	property		388214	1					
ANR	388599	Argument	property		388214	0					
ANR	388600	Identifier	property		388214	0					
ANR	388601	Identifier	NULL		388214	2					
ANR	388602	Argument	inc		388214	3					
ANR	388603	Identifier	inc		388214	0					
ANR	388604	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		388214	4					
ANR	388605	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		388214	0					
ANR	388606	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		388214	0					
ANR	388607	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		388214	0					
ANR	388608	Callee	UNEXPECTED		388214	0					
ANR	388609	Identifier	UNEXPECTED		388214	0					
ANR	388610	ArgumentList	RETURN_VALUE_USED ( opline )		388214	1					
ANR	388611	Argument	RETURN_VALUE_USED ( opline )		388214	0					
ANR	388612	CallExpression	RETURN_VALUE_USED ( opline )		388214	0					
ANR	388613	Callee	RETURN_VALUE_USED		388214	0					
ANR	388614	Identifier	RETURN_VALUE_USED		388214	0					
ANR	388615	ArgumentList	opline		388214	1					
ANR	388616	Argument	opline		388214	0					
ANR	388617	Identifier	opline		388214	0					
ANR	388618	CallExpression	EX_VAR ( opline -> result . var )		388214	1					
ANR	388619	Callee	EX_VAR		388214	0					
ANR	388620	Identifier	EX_VAR		388214	0					
ANR	388621	ArgumentList	opline -> result . var		388214	1					
ANR	388622	Argument	opline -> result . var		388214	0					
ANR	388623	MemberAccess	opline -> result . var		388214	0					
ANR	388624	PtrMemberAccess	opline -> result		388214	0					
ANR	388625	Identifier	opline		388214	0					
ANR	388626	Identifier	result		388214	1					
ANR	388627	Identifier	var		388214	1					
ANR	388628	Identifier	NULL		388214	2					
ANR	388629	Condition	0	30866:10:975143:975143	388214	1	True				
ANR	388630	PrimaryExpression	0		388214	0					
ANR	388631	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	30869:1:975150:975187	388214	9	True				
ANR	388632	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		388214	0					
ANR	388633	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		388214	0					
ANR	388634	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		388214	0					
ANR	388635	ArgumentList			388214	1					
ANR	388636	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		388214	1					
ANR	388637	Identifier	zend_pre_incdec_property_helper_SPEC_CV_CONST		388214	2					
ANR	388638	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		388214	3					
ANR	388639	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	30802:91:973270:973304	388214	0	True				
ANR	388640	ParameterType	int inc		388214	0					
ANR	388641	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		388214	1					
ANR	388642	CFGEntryNode	ENTRY		388214		True				
ANR	388643	CFGExitNode	EXIT		388214		True				
ANR	388644	Symbol	opline -> op1		388214						
ANR	388645	Symbol	opline -> op2		388214						
ANR	388646	Symbol	IS_CV		388214						
ANR	388647	Symbol	Z_OBJ_P		388214						
ANR	388648	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388214						
ANR	388649	Symbol	zptr		388214						
ANR	388650	Symbol	execute_data		388214						
ANR	388651	Symbol	opline -> result		388214						
ANR	388652	Symbol	UNEXPECTED		388214						
ANR	388653	Symbol	E_WARNING		388214						
ANR	388654	Symbol	make_real_object		388214						
ANR	388655	Symbol	RETURN_VALUE_USED		388214						
ANR	388656	Symbol	opline		388214						
ANR	388657	Symbol	IS_LONG		388214						
ANR	388658	Symbol	property		388214						
ANR	388659	Symbol	opline -> op1 . var		388214						
ANR	388660	Symbol	inc		388214						
ANR	388661	Symbol	BP_VAR_RW		388214						
ANR	388662	Symbol	IS_CONST		388214						
ANR	388663	Symbol	NULL		388214						
ANR	388664	Symbol	EX_CONSTANT		388214						
ANR	388665	Symbol	Z_CACHE_SLOT_P		388214						
ANR	388666	Symbol	Z_TYPE_P		388214						
ANR	388667	Symbol	* Z_OBJ_HT_P		388214						
ANR	388668	Symbol	CACHE_ADDR		388214						
ANR	388669	Symbol	* opline		388214						
ANR	388670	Symbol	Z_OBJ_HT_P		388214						
ANR	388671	Symbol	_get_zval_ptr_cv_BP_VAR_RW		388214						
ANR	388672	Symbol	EX_VAR		388214						
ANR	388673	Symbol	IS_OBJECT		388214						
ANR	388674	Symbol	IS_VAR		388214						
ANR	388675	Symbol	EXPECTED		388214						
ANR	388676	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		388214						
ANR	388677	Symbol	opline -> result . var		388214						
ANR	388678	Symbol	object		388214						
ANR	388679	Symbol	IS_UNUSED		388214						
ANR	388680	Function	zend_post_incdec_property_helper_SPEC_CV_CONST	30882:0:975636:977549							
ANR	388681	FunctionDef	zend_post_incdec_property_helper_SPEC_CV_CONST (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		388680	0					
ANR	388682	CompoundStatement		30883:0:975765:977549	388680	0					
ANR	388683	IdentifierDeclStatement	USE_OPLINE zval * object ;	30884:1:975768:975793	388680	0	True				
ANR	388684	IdentifierDecl	* object		388680	0					
ANR	388685	IdentifierDeclType	USE_OPLINE zval *		388680	0					
ANR	388686	Identifier	object		388680	1					
ANR	388687	IdentifierDeclStatement	zval * property ;	30887:1:975796:975810	388680	1	True				
ANR	388688	IdentifierDecl	* property		388680	0					
ANR	388689	IdentifierDeclType	zval *		388680	0					
ANR	388690	Identifier	property		388680	1					
ANR	388691	IdentifierDeclStatement	zval * zptr ;	30888:1:975813:975823	388680	2	True				
ANR	388692	IdentifierDecl	* zptr		388680	0					
ANR	388693	IdentifierDeclType	zval *		388680	0					
ANR	388694	Identifier	zptr		388680	1					
ANR	388695	ExpressionStatement	SAVE_OPLINE ( )	30890:1:975827:975840	388680	3	True				
ANR	388696	CallExpression	SAVE_OPLINE ( )		388680	0					
ANR	388697	Callee	SAVE_OPLINE		388680	0					
ANR	388698	Identifier	SAVE_OPLINE		388680	0					
ANR	388699	ArgumentList			388680	1					
ANR	388700	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	30891:1:975843:975909	388680	4	True				
ANR	388701	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		388680	0		=			
ANR	388702	Identifier	object		388680	0					
ANR	388703	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		388680	1					
ANR	388704	Callee	_get_zval_ptr_cv_BP_VAR_RW		388680	0					
ANR	388705	Identifier	_get_zval_ptr_cv_BP_VAR_RW		388680	0					
ANR	388706	ArgumentList	execute_data		388680	1					
ANR	388707	Argument	execute_data		388680	0					
ANR	388708	Identifier	execute_data		388680	0					
ANR	388709	Argument	opline -> op1 . var		388680	1					
ANR	388710	MemberAccess	opline -> op1 . var		388680	0					
ANR	388711	PtrMemberAccess	opline -> op1		388680	0					
ANR	388712	Identifier	opline		388680	0					
ANR	388713	Identifier	op1		388680	1					
ANR	388714	Identifier	var		388680	1					
ANR	388715	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		388680	5					
ANR	388716	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	30893:5:975917:975973	388680	0	True				
ANR	388717	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		388680	0		&&			
ANR	388718	EqualityExpression	IS_CV == IS_UNUSED		388680	0		==			
ANR	388719	Identifier	IS_CV		388680	0					
ANR	388720	Identifier	IS_UNUSED		388680	1					
ANR	388721	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		388680	1					
ANR	388722	Callee	UNEXPECTED		388680	0					
ANR	388723	Identifier	UNEXPECTED		388680	0					
ANR	388724	ArgumentList	Z_OBJ_P ( object ) == NULL		388680	1					
ANR	388725	Argument	Z_OBJ_P ( object ) == NULL		388680	0					
ANR	388726	EqualityExpression	Z_OBJ_P ( object ) == NULL		388680	0		==			
ANR	388727	CallExpression	Z_OBJ_P ( object )		388680	0					
ANR	388728	Callee	Z_OBJ_P		388680	0					
ANR	388729	Identifier	Z_OBJ_P		388680	0					
ANR	388730	ArgumentList	object		388680	1					
ANR	388731	Argument	object		388680	0					
ANR	388732	Identifier	object		388680	0					
ANR	388733	Identifier	NULL		388680	1					
ANR	388734	CompoundStatement		11:64:210:210	388680	1					
ANR	388735	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	30894:2:975980:976044	388680	0	True				
ANR	388736	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		388680	0					
ANR	388737	Callee	zend_throw_error		388680	0					
ANR	388738	Identifier	zend_throw_error		388680	0					
ANR	388739	ArgumentList	NULL		388680	1					
ANR	388740	Argument	NULL		388680	0					
ANR	388741	Identifier	NULL		388680	0					
ANR	388742	Argument	"""Using $this when not in object context"""		388680	1					
ANR	388743	PrimaryExpression	"""Using $this when not in object context"""		388680	0					
ANR	388744	ExpressionStatement	HANDLE_EXCEPTION ( )	30896:2:976049:976067	388680	1	True				
ANR	388745	CallExpression	HANDLE_EXCEPTION ( )		388680	0					
ANR	388746	Callee	HANDLE_EXCEPTION		388680	0					
ANR	388747	Identifier	HANDLE_EXCEPTION		388680	0					
ANR	388748	ArgumentList			388680	1					
ANR	388749	ExpressionStatement	property = EX_CONSTANT ( opline -> op2 )	30899:1:976074:976109	388680	6	True				
ANR	388750	AssignmentExpression	property = EX_CONSTANT ( opline -> op2 )		388680	0		=			
ANR	388751	Identifier	property		388680	0					
ANR	388752	CallExpression	EX_CONSTANT ( opline -> op2 )		388680	1					
ANR	388753	Callee	EX_CONSTANT		388680	0					
ANR	388754	Identifier	EX_CONSTANT		388680	0					
ANR	388755	ArgumentList	opline -> op2		388680	1					
ANR	388756	Argument	opline -> op2		388680	0					
ANR	388757	PtrMemberAccess	opline -> op2		388680	0					
ANR	388758	Identifier	opline		388680	0					
ANR	388759	Identifier	op2		388680	1					
ANR	388760	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		388680	7					
ANR	388761	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	30901:5:976117:976161	388680	0	True				
ANR	388762	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		388680	0		&&			
ANR	388763	EqualityExpression	IS_CV == IS_VAR		388680	0		==			
ANR	388764	Identifier	IS_CV		388680	0					
ANR	388765	Identifier	IS_VAR		388680	1					
ANR	388766	CallExpression	UNEXPECTED ( object == NULL )		388680	1					
ANR	388767	Callee	UNEXPECTED		388680	0					
ANR	388768	Identifier	UNEXPECTED		388680	0					
ANR	388769	ArgumentList	object == NULL		388680	1					
ANR	388770	Argument	object == NULL		388680	0					
ANR	388771	EqualityExpression	object == NULL		388680	0		==			
ANR	388772	Identifier	object		388680	0					
ANR	388773	Identifier	NULL		388680	1					
ANR	388774	CompoundStatement		19:52:398:398	388680	1					
ANR	388775	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	30902:2:976168:976258	388680	0	True				
ANR	388776	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		388680	0					
ANR	388777	Callee	zend_throw_error		388680	0					
ANR	388778	Identifier	zend_throw_error		388680	0					
ANR	388779	ArgumentList	NULL		388680	1					
ANR	388780	Argument	NULL		388680	0					
ANR	388781	Identifier	NULL		388680	0					
ANR	388782	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		388680	1					
ANR	388783	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		388680	0					
ANR	388784	ExpressionStatement	HANDLE_EXCEPTION ( )	30904:2:976263:976281	388680	1	True				
ANR	388785	CallExpression	HANDLE_EXCEPTION ( )		388680	0					
ANR	388786	Callee	HANDLE_EXCEPTION		388680	0					
ANR	388787	Identifier	HANDLE_EXCEPTION		388680	0					
ANR	388788	ArgumentList			388680	1					
ANR	388789	DoStatement	do		388680	8					
ANR	388790	CompoundStatement		25:4:525:525	388680	0					
ANR	388791	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		388680	0					
ANR	388792	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	30908:6:976299:976361	388680	0	True				
ANR	388793	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		388680	0		&&			
ANR	388794	EqualityExpression	IS_CV != IS_UNUSED		388680	0		!=			
ANR	388795	Identifier	IS_CV		388680	0					
ANR	388796	Identifier	IS_UNUSED		388680	1					
ANR	388797	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		388680	1					
ANR	388798	Callee	UNEXPECTED		388680	0					
ANR	388799	Identifier	UNEXPECTED		388680	0					
ANR	388800	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		388680	1					
ANR	388801	Argument	Z_TYPE_P ( object ) != IS_OBJECT		388680	0					
ANR	388802	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		388680	0		!=			
ANR	388803	CallExpression	Z_TYPE_P ( object )		388680	0					
ANR	388804	Callee	Z_TYPE_P		388680	0					
ANR	388805	Identifier	Z_TYPE_P		388680	0					
ANR	388806	ArgumentList	object		388680	1					
ANR	388807	Argument	object		388680	0					
ANR	388808	Identifier	object		388680	0					
ANR	388809	Identifier	IS_OBJECT		388680	1					
ANR	388810	CompoundStatement		26:71:598:598	388680	1					
ANR	388811	ExpressionStatement	ZVAL_DEREF ( object )	30909:3:976369:976387	388680	0	True				
ANR	388812	CallExpression	ZVAL_DEREF ( object )		388680	0					
ANR	388813	Callee	ZVAL_DEREF		388680	0					
ANR	388814	Identifier	ZVAL_DEREF		388680	0					
ANR	388815	ArgumentList	object		388680	1					
ANR	388816	Argument	object		388680	0					
ANR	388817	Identifier	object		388680	0					
ANR	388818	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		388680	1					
ANR	388819	Condition	UNEXPECTED ( ! make_real_object ( object ) )	30910:7:976396:976432	388680	0	True				
ANR	388820	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		388680	0					
ANR	388821	Callee	UNEXPECTED		388680	0					
ANR	388822	Identifier	UNEXPECTED		388680	0					
ANR	388823	ArgumentList	! make_real_object ( object )		388680	1					
ANR	388824	Argument	! make_real_object ( object )		388680	0					
ANR	388825	UnaryOperationExpression	! make_real_object ( object )		388680	0					
ANR	388826	UnaryOperator	!		388680	0					
ANR	388827	CallExpression	make_real_object ( object )		388680	1					
ANR	388828	Callee	make_real_object		388680	0					
ANR	388829	Identifier	make_real_object		388680	0					
ANR	388830	ArgumentList	object		388680	1					
ANR	388831	Argument	object		388680	0					
ANR	388832	Identifier	object		388680	0					
ANR	388833	CompoundStatement		28:46:669:669	388680	1					
ANR	388834	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	30911:4:976441:976519	388680	0	True				
ANR	388835	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		388680	0					
ANR	388836	Callee	zend_error		388680	0					
ANR	388837	Identifier	zend_error		388680	0					
ANR	388838	ArgumentList	E_WARNING		388680	1					
ANR	388839	Argument	E_WARNING		388680	0					
ANR	388840	Identifier	E_WARNING		388680	0					
ANR	388841	Argument	"""Attempt to increment/decrement property of non-object"""		388680	1					
ANR	388842	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		388680	0					
ANR	388843	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	30912:4:976525:976562	388680	1	True				
ANR	388844	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		388680	0					
ANR	388845	Callee	ZVAL_NULL		388680	0					
ANR	388846	Identifier	ZVAL_NULL		388680	0					
ANR	388847	ArgumentList	EX_VAR ( opline -> result . var )		388680	1					
ANR	388848	Argument	EX_VAR ( opline -> result . var )		388680	0					
ANR	388849	CallExpression	EX_VAR ( opline -> result . var )		388680	0					
ANR	388850	Callee	EX_VAR		388680	0					
ANR	388851	Identifier	EX_VAR		388680	0					
ANR	388852	ArgumentList	opline -> result . var		388680	1					
ANR	388853	Argument	opline -> result . var		388680	0					
ANR	388854	MemberAccess	opline -> result . var		388680	0					
ANR	388855	PtrMemberAccess	opline -> result		388680	0					
ANR	388856	Identifier	opline		388680	0					
ANR	388857	Identifier	result		388680	1					
ANR	388858	Identifier	var		388680	1					
ANR	388859	BreakStatement	break ;	30913:4:976568:976573	388680	2	True				
ANR	388860	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		388680	1					
ANR	388861	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	30919:6:976647:976871	388680	0	True				
ANR	388862	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		388680	0		&&			
ANR	388863	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		388680	0					
ANR	388864	Callee	EXPECTED		388680	0					
ANR	388865	Identifier	EXPECTED		388680	0					
ANR	388866	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388680	1					
ANR	388867	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388680	0					
ANR	388868	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388680	0					
ANR	388869	CallExpression	Z_OBJ_HT_P ( object )		388680	0					
ANR	388870	Callee	Z_OBJ_HT_P		388680	0					
ANR	388871	Identifier	Z_OBJ_HT_P		388680	0					
ANR	388872	ArgumentList	object		388680	1					
ANR	388873	Argument	object		388680	0					
ANR	388874	Identifier	object		388680	0					
ANR	388875	Identifier	get_property_ptr_ptr		388680	1					
ANR	388876	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		388680	1					
ANR	388877	Callee	EXPECTED		388680	0					
ANR	388878	Identifier	EXPECTED		388680	0					
ANR	388879	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		388680	1					
ANR	388880	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		388680	0					
ANR	388881	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		388680	0		!=			
ANR	388882	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		388680	0		=			
ANR	388883	Identifier	zptr		388680	0					
ANR	388884	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		388680	1					
ANR	388885	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388680	0					
ANR	388886	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388680	0					
ANR	388887	CallExpression	Z_OBJ_HT_P ( object )		388680	0					
ANR	388888	Callee	Z_OBJ_HT_P		388680	0					
ANR	388889	Identifier	Z_OBJ_HT_P		388680	0					
ANR	388890	ArgumentList	object		388680	1					
ANR	388891	Argument	object		388680	0					
ANR	388892	Identifier	object		388680	0					
ANR	388893	Identifier	get_property_ptr_ptr		388680	1					
ANR	388894	ArgumentList	object		388680	1					
ANR	388895	Argument	object		388680	0					
ANR	388896	Identifier	object		388680	0					
ANR	388897	Argument	property		388680	1					
ANR	388898	Identifier	property		388680	0					
ANR	388899	Argument	BP_VAR_RW		388680	2					
ANR	388900	Identifier	BP_VAR_RW		388680	0					
ANR	388901	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388680	3					
ANR	388902	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388680	0					
ANR	388903	Condition	IS_CONST == IS_CONST		388680	0					
ANR	388904	EqualityExpression	IS_CONST == IS_CONST		388680	0		==			
ANR	388905	Identifier	IS_CONST		388680	0					
ANR	388906	Identifier	IS_CONST		388680	1					
ANR	388907	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		388680	1					
ANR	388908	Callee	CACHE_ADDR		388680	0					
ANR	388909	Identifier	CACHE_ADDR		388680	0					
ANR	388910	ArgumentList	Z_CACHE_SLOT_P ( property )		388680	1					
ANR	388911	Argument	Z_CACHE_SLOT_P ( property )		388680	0					
ANR	388912	CallExpression	Z_CACHE_SLOT_P ( property )		388680	0					
ANR	388913	Callee	Z_CACHE_SLOT_P		388680	0					
ANR	388914	Identifier	Z_CACHE_SLOT_P		388680	0					
ANR	388915	ArgumentList	property		388680	1					
ANR	388916	Argument	property		388680	0					
ANR	388917	Identifier	property		388680	0					
ANR	388918	Identifier	NULL		388680	2					
ANR	388919	Identifier	NULL		388680	1					
ANR	388920	CompoundStatement		38:176:1108:1108	388680	1					
ANR	388921	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		388680	0					
ANR	388922	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	30922:7:976884:976918	388680	0	True				
ANR	388923	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		388680	0					
ANR	388924	Callee	EXPECTED		388680	0					
ANR	388925	Identifier	EXPECTED		388680	0					
ANR	388926	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		388680	1					
ANR	388927	Argument	Z_TYPE_P ( zptr ) == IS_LONG		388680	0					
ANR	388928	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		388680	0		==			
ANR	388929	CallExpression	Z_TYPE_P ( zptr )		388680	0					
ANR	388930	Callee	Z_TYPE_P		388680	0					
ANR	388931	Identifier	Z_TYPE_P		388680	0					
ANR	388932	ArgumentList	zptr		388680	1					
ANR	388933	Argument	zptr		388680	0					
ANR	388934	Identifier	zptr		388680	0					
ANR	388935	Identifier	IS_LONG		388680	1					
ANR	388936	CompoundStatement		40:44:1155:1155	388680	1					
ANR	388937	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	30923:4:976927:976976	388680	0	True				
ANR	388938	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		388680	0					
ANR	388939	Callee	ZVAL_COPY_VALUE		388680	0					
ANR	388940	Identifier	ZVAL_COPY_VALUE		388680	0					
ANR	388941	ArgumentList	EX_VAR ( opline -> result . var )		388680	1					
ANR	388942	Argument	EX_VAR ( opline -> result . var )		388680	0					
ANR	388943	CallExpression	EX_VAR ( opline -> result . var )		388680	0					
ANR	388944	Callee	EX_VAR		388680	0					
ANR	388945	Identifier	EX_VAR		388680	0					
ANR	388946	ArgumentList	opline -> result . var		388680	1					
ANR	388947	Argument	opline -> result . var		388680	0					
ANR	388948	MemberAccess	opline -> result . var		388680	0					
ANR	388949	PtrMemberAccess	opline -> result		388680	0					
ANR	388950	Identifier	opline		388680	0					
ANR	388951	Identifier	result		388680	1					
ANR	388952	Identifier	var		388680	1					
ANR	388953	Argument	zptr		388680	1					
ANR	388954	Identifier	zptr		388680	0					
ANR	388955	IfStatement	if ( inc )		388680	1					
ANR	388956	Condition	inc	30924:8:976986:976988	388680	0	True				
ANR	388957	Identifier	inc		388680	0					
ANR	388958	CompoundStatement		42:13:1225:1225	388680	1					
ANR	388959	ExpressionStatement	fast_long_increment_function ( zptr )	30925:5:976998:977032	388680	0	True				
ANR	388960	CallExpression	fast_long_increment_function ( zptr )		388680	0					
ANR	388961	Callee	fast_long_increment_function		388680	0					
ANR	388962	Identifier	fast_long_increment_function		388680	0					
ANR	388963	ArgumentList	zptr		388680	1					
ANR	388964	Argument	zptr		388680	0					
ANR	388965	Identifier	zptr		388680	0					
ANR	388966	ElseStatement	else		388680	0					
ANR	388967	CompoundStatement		44:11:1279:1279	388680	0					
ANR	388968	ExpressionStatement	fast_long_decrement_function ( zptr )	30927:5:977052:977086	388680	0	True				
ANR	388969	CallExpression	fast_long_decrement_function ( zptr )		388680	0					
ANR	388970	Callee	fast_long_decrement_function		388680	0					
ANR	388971	Identifier	fast_long_decrement_function		388680	0					
ANR	388972	ArgumentList	zptr		388680	1					
ANR	388973	Argument	zptr		388680	0					
ANR	388974	Identifier	zptr		388680	0					
ANR	388975	ElseStatement	else		388680	0					
ANR	388976	CompoundStatement		47:10:1338:1338	388680	0					
ANR	388977	ExpressionStatement	ZVAL_DEREF ( zptr )	30930:4:977110:977126	388680	0	True				
ANR	388978	CallExpression	ZVAL_DEREF ( zptr )		388680	0					
ANR	388979	Callee	ZVAL_DEREF		388680	0					
ANR	388980	Identifier	ZVAL_DEREF		388680	0					
ANR	388981	ArgumentList	zptr		388680	1					
ANR	388982	Argument	zptr		388680	0					
ANR	388983	Identifier	zptr		388680	0					
ANR	388984	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	30931:4:977132:977181	388680	1	True				
ANR	388985	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		388680	0					
ANR	388986	Callee	ZVAL_COPY_VALUE		388680	0					
ANR	388987	Identifier	ZVAL_COPY_VALUE		388680	0					
ANR	388988	ArgumentList	EX_VAR ( opline -> result . var )		388680	1					
ANR	388989	Argument	EX_VAR ( opline -> result . var )		388680	0					
ANR	388990	CallExpression	EX_VAR ( opline -> result . var )		388680	0					
ANR	388991	Callee	EX_VAR		388680	0					
ANR	388992	Identifier	EX_VAR		388680	0					
ANR	388993	ArgumentList	opline -> result . var		388680	1					
ANR	388994	Argument	opline -> result . var		388680	0					
ANR	388995	MemberAccess	opline -> result . var		388680	0					
ANR	388996	PtrMemberAccess	opline -> result		388680	0					
ANR	388997	Identifier	opline		388680	0					
ANR	388998	Identifier	result		388680	1					
ANR	388999	Identifier	var		388680	1					
ANR	389000	Argument	zptr		388680	1					
ANR	389001	Identifier	zptr		388680	0					
ANR	389002	ExpressionStatement	zval_opt_copy_ctor ( zptr )	30932:4:977187:977211	388680	2	True				
ANR	389003	CallExpression	zval_opt_copy_ctor ( zptr )		388680	0					
ANR	389004	Callee	zval_opt_copy_ctor		388680	0					
ANR	389005	Identifier	zval_opt_copy_ctor		388680	0					
ANR	389006	ArgumentList	zptr		388680	1					
ANR	389007	Argument	zptr		388680	0					
ANR	389008	Identifier	zptr		388680	0					
ANR	389009	IfStatement	if ( inc )		388680	3					
ANR	389010	Condition	inc	30933:8:977221:977223	388680	0	True				
ANR	389011	Identifier	inc		388680	0					
ANR	389012	CompoundStatement		51:13:1460:1460	388680	1					
ANR	389013	ExpressionStatement	increment_function ( zptr )	30934:5:977233:977257	388680	0	True				
ANR	389014	CallExpression	increment_function ( zptr )		388680	0					
ANR	389015	Callee	increment_function		388680	0					
ANR	389016	Identifier	increment_function		388680	0					
ANR	389017	ArgumentList	zptr		388680	1					
ANR	389018	Argument	zptr		388680	0					
ANR	389019	Identifier	zptr		388680	0					
ANR	389020	ElseStatement	else		388680	0					
ANR	389021	CompoundStatement		53:11:1504:1504	388680	0					
ANR	389022	ExpressionStatement	decrement_function ( zptr )	30936:5:977277:977301	388680	0	True				
ANR	389023	CallExpression	decrement_function ( zptr )		388680	0					
ANR	389024	Callee	decrement_function		388680	0					
ANR	389025	Identifier	decrement_function		388680	0					
ANR	389026	ArgumentList	zptr		388680	1					
ANR	389027	Argument	zptr		388680	0					
ANR	389028	Identifier	zptr		388680	0					
ANR	389029	ElseStatement	else		388680	0					
ANR	389030	CompoundStatement		57:9:1557:1557	388680	0					
ANR	389031	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	30940:3:977328:977487	388680	0	True				
ANR	389032	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		388680	0					
ANR	389033	Callee	zend_post_incdec_overloaded_property		388680	0					
ANR	389034	Identifier	zend_post_incdec_overloaded_property		388680	0					
ANR	389035	ArgumentList	object		388680	1					
ANR	389036	Argument	object		388680	0					
ANR	389037	Identifier	object		388680	0					
ANR	389038	Argument	property		388680	1					
ANR	389039	Identifier	property		388680	0					
ANR	389040	Argument	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388680	2					
ANR	389041	ConditionalExpression	( IS_CONST == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		388680	0					
ANR	389042	Condition	IS_CONST == IS_CONST		388680	0					
ANR	389043	EqualityExpression	IS_CONST == IS_CONST		388680	0		==			
ANR	389044	Identifier	IS_CONST		388680	0					
ANR	389045	Identifier	IS_CONST		388680	1					
ANR	389046	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		388680	1					
ANR	389047	Callee	CACHE_ADDR		388680	0					
ANR	389048	Identifier	CACHE_ADDR		388680	0					
ANR	389049	ArgumentList	Z_CACHE_SLOT_P ( property )		388680	1					
ANR	389050	Argument	Z_CACHE_SLOT_P ( property )		388680	0					
ANR	389051	CallExpression	Z_CACHE_SLOT_P ( property )		388680	0					
ANR	389052	Callee	Z_CACHE_SLOT_P		388680	0					
ANR	389053	Identifier	Z_CACHE_SLOT_P		388680	0					
ANR	389054	ArgumentList	property		388680	1					
ANR	389055	Argument	property		388680	0					
ANR	389056	Identifier	property		388680	0					
ANR	389057	Identifier	NULL		388680	2					
ANR	389058	Argument	inc		388680	3					
ANR	389059	Identifier	inc		388680	0					
ANR	389060	Argument	EX_VAR ( opline -> result . var )		388680	4					
ANR	389061	CallExpression	EX_VAR ( opline -> result . var )		388680	0					
ANR	389062	Callee	EX_VAR		388680	0					
ANR	389063	Identifier	EX_VAR		388680	0					
ANR	389064	ArgumentList	opline -> result . var		388680	1					
ANR	389065	Argument	opline -> result . var		388680	0					
ANR	389066	MemberAccess	opline -> result . var		388680	0					
ANR	389067	PtrMemberAccess	opline -> result		388680	0					
ANR	389068	Identifier	opline		388680	0					
ANR	389069	Identifier	result		388680	1					
ANR	389070	Identifier	var		388680	1					
ANR	389071	Condition	0	30942:10:977503:977503	388680	1	True				
ANR	389072	PrimaryExpression	0		388680	0					
ANR	389073	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	30945:1:977510:977547	388680	9	True				
ANR	389074	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		388680	0					
ANR	389075	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		388680	0					
ANR	389076	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		388680	0					
ANR	389077	ArgumentList			388680	1					
ANR	389078	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		388680	1					
ANR	389079	Identifier	zend_post_incdec_property_helper_SPEC_CV_CONST		388680	2					
ANR	389080	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		388680	3					
ANR	389081	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	30882:92:975728:975762	388680	0	True				
ANR	389082	ParameterType	int inc		388680	0					
ANR	389083	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		388680	1					
ANR	389084	CFGEntryNode	ENTRY		388680		True				
ANR	389085	CFGExitNode	EXIT		388680		True				
ANR	389086	Symbol	opline -> op1		388680						
ANR	389087	Symbol	opline -> op2		388680						
ANR	389088	Symbol	IS_CV		388680						
ANR	389089	Symbol	Z_OBJ_P		388680						
ANR	389090	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		388680						
ANR	389091	Symbol	zptr		388680						
ANR	389092	Symbol	execute_data		388680						
ANR	389093	Symbol	opline -> result		388680						
ANR	389094	Symbol	UNEXPECTED		388680						
ANR	389095	Symbol	E_WARNING		388680						
ANR	389096	Symbol	make_real_object		388680						
ANR	389097	Symbol	opline		388680						
ANR	389098	Symbol	IS_LONG		388680						
ANR	389099	Symbol	property		388680						
ANR	389100	Symbol	opline -> op1 . var		388680						
ANR	389101	Symbol	inc		388680						
ANR	389102	Symbol	BP_VAR_RW		388680						
ANR	389103	Symbol	IS_CONST		388680						
ANR	389104	Symbol	NULL		388680						
ANR	389105	Symbol	EX_CONSTANT		388680						
ANR	389106	Symbol	Z_CACHE_SLOT_P		388680						
ANR	389107	Symbol	Z_TYPE_P		388680						
ANR	389108	Symbol	* Z_OBJ_HT_P		388680						
ANR	389109	Symbol	CACHE_ADDR		388680						
ANR	389110	Symbol	* opline		388680						
ANR	389111	Symbol	Z_OBJ_HT_P		388680						
ANR	389112	Symbol	_get_zval_ptr_cv_BP_VAR_RW		388680						
ANR	389113	Symbol	EX_VAR		388680						
ANR	389114	Symbol	IS_OBJECT		388680						
ANR	389115	Symbol	IS_VAR		388680						
ANR	389116	Symbol	EXPECTED		388680						
ANR	389117	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		388680						
ANR	389118	Symbol	opline -> result . var		388680						
ANR	389119	Symbol	object		388680						
ANR	389120	Symbol	IS_UNUSED		388680						
ANR	389121	Function	zend_fetch_var_address_helper_SPEC_CV_CONST	30958:0:978000:982620							
ANR	389122	FunctionDef	zend_fetch_var_address_helper_SPEC_CV_CONST (int type ZEND_OPCODE_HANDLER_ARGS_DC)		389121	0					
ANR	389123	CompoundStatement		30959:0:978127:982620	389121	0					
ANR	389124	IdentifierDeclStatement	USE_OPLINE zval * varname ;	30960:1:978130:978156	389121	0	True				
ANR	389125	IdentifierDecl	* varname		389121	0					
ANR	389126	IdentifierDeclType	USE_OPLINE zval *		389121	0					
ANR	389127	Identifier	varname		389121	1					
ANR	389128	IdentifierDeclStatement	zval * retval ;	30963:1:978159:978171	389121	1	True				
ANR	389129	IdentifierDecl	* retval		389121	0					
ANR	389130	IdentifierDeclType	zval *		389121	0					
ANR	389131	Identifier	retval		389121	1					
ANR	389132	IdentifierDeclStatement	zend_string * name ;	30964:1:978174:978191	389121	2	True				
ANR	389133	IdentifierDecl	* name		389121	0					
ANR	389134	IdentifierDeclType	zend_string *		389121	0					
ANR	389135	Identifier	name		389121	1					
ANR	389136	IdentifierDeclStatement	HashTable * target_symbol_table ;	30965:1:978194:978224	389121	3	True				
ANR	389137	IdentifierDecl	* target_symbol_table		389121	0					
ANR	389138	IdentifierDeclType	HashTable *		389121	0					
ANR	389139	Identifier	target_symbol_table		389121	1					
ANR	389140	ExpressionStatement	SAVE_OPLINE ( )	30967:1:978228:978241	389121	4	True				
ANR	389141	CallExpression	SAVE_OPLINE ( )		389121	0					
ANR	389142	Callee	SAVE_OPLINE		389121	0					
ANR	389143	Identifier	SAVE_OPLINE		389121	0					
ANR	389144	ArgumentList			389121	1					
ANR	389145	ExpressionStatement	"varname = _get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"	30968:1:978244:978307	389121	5	True				
ANR	389146	AssignmentExpression	"varname = _get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"		389121	0		=			
ANR	389147	Identifier	varname		389121	0					
ANR	389148	CallExpression	"_get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"		389121	1					
ANR	389149	Callee	_get_zval_ptr_cv_undef		389121	0					
ANR	389150	Identifier	_get_zval_ptr_cv_undef		389121	0					
ANR	389151	ArgumentList	execute_data		389121	1					
ANR	389152	Argument	execute_data		389121	0					
ANR	389153	Identifier	execute_data		389121	0					
ANR	389154	Argument	opline -> op1 . var		389121	1					
ANR	389155	MemberAccess	opline -> op1 . var		389121	0					
ANR	389156	PtrMemberAccess	opline -> op1		389121	0					
ANR	389157	Identifier	opline		389121	0					
ANR	389158	Identifier	op1		389121	1					
ANR	389159	Identifier	var		389121	1					
ANR	389160	IfStatement	if ( IS_CV == IS_CONST )		389121	6					
ANR	389161	Condition	IS_CV == IS_CONST	30970:6:978316:978332	389121	0	True				
ANR	389162	EqualityExpression	IS_CV == IS_CONST		389121	0		==			
ANR	389163	Identifier	IS_CV		389121	0					
ANR	389164	Identifier	IS_CONST		389121	1					
ANR	389165	CompoundStatement		12:25:207:207	389121	1					
ANR	389166	ExpressionStatement	name = Z_STR_P ( varname )	30971:2:978339:978362	389121	0	True				
ANR	389167	AssignmentExpression	name = Z_STR_P ( varname )		389121	0		=			
ANR	389168	Identifier	name		389121	0					
ANR	389169	CallExpression	Z_STR_P ( varname )		389121	1					
ANR	389170	Callee	Z_STR_P		389121	0					
ANR	389171	Identifier	Z_STR_P		389121	0					
ANR	389172	ArgumentList	varname		389121	1					
ANR	389173	Argument	varname		389121	0					
ANR	389174	Identifier	varname		389121	0					
ANR	389175	ElseStatement	else		389121	0					
ANR	389176	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		389121	0					
ANR	389177	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	30972:12:978376:978415	389121	0	True				
ANR	389178	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		389121	0					
ANR	389179	Callee	EXPECTED		389121	0					
ANR	389180	Identifier	EXPECTED		389121	0					
ANR	389181	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		389121	1					
ANR	389182	Argument	Z_TYPE_P ( varname ) == IS_STRING		389121	0					
ANR	389183	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		389121	0		==			
ANR	389184	CallExpression	Z_TYPE_P ( varname )		389121	0					
ANR	389185	Callee	Z_TYPE_P		389121	0					
ANR	389186	Identifier	Z_TYPE_P		389121	0					
ANR	389187	ArgumentList	varname		389121	1					
ANR	389188	Argument	varname		389121	0					
ANR	389189	Identifier	varname		389121	0					
ANR	389190	Identifier	IS_STRING		389121	1					
ANR	389191	CompoundStatement		14:54:290:290	389121	1					
ANR	389192	ExpressionStatement	name = Z_STR_P ( varname )	30973:2:978422:978445	389121	0	True				
ANR	389193	AssignmentExpression	name = Z_STR_P ( varname )		389121	0		=			
ANR	389194	Identifier	name		389121	0					
ANR	389195	CallExpression	Z_STR_P ( varname )		389121	1					
ANR	389196	Callee	Z_STR_P		389121	0					
ANR	389197	Identifier	Z_STR_P		389121	0					
ANR	389198	ArgumentList	varname		389121	1					
ANR	389199	Argument	varname		389121	0					
ANR	389200	Identifier	varname		389121	0					
ANR	389201	ExpressionStatement	zend_string_addref ( name )	30974:2:978449:978473	389121	1	True				
ANR	389202	CallExpression	zend_string_addref ( name )		389121	0					
ANR	389203	Callee	zend_string_addref		389121	0					
ANR	389204	Identifier	zend_string_addref		389121	0					
ANR	389205	ArgumentList	name		389121	1					
ANR	389206	Argument	name		389121	0					
ANR	389207	Identifier	name		389121	0					
ANR	389208	ElseStatement	else		389121	0					
ANR	389209	CompoundStatement		17:8:355:355	389121	0					
ANR	389210	IfStatement	if ( IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		389121	0					
ANR	389211	Condition	IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	30976:6:978491:978549	389121	0	True				
ANR	389212	AndExpression	IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		389121	0		&&			
ANR	389213	EqualityExpression	IS_CV == IS_CV		389121	0		==			
ANR	389214	Identifier	IS_CV		389121	0					
ANR	389215	Identifier	IS_CV		389121	1					
ANR	389216	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		389121	1					
ANR	389217	Callee	UNEXPECTED		389121	0					
ANR	389218	Identifier	UNEXPECTED		389121	0					
ANR	389219	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		389121	1					
ANR	389220	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		389121	0					
ANR	389221	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		389121	0		==			
ANR	389222	CallExpression	Z_TYPE_P ( varname )		389121	0					
ANR	389223	Callee	Z_TYPE_P		389121	0					
ANR	389224	Identifier	Z_TYPE_P		389121	0					
ANR	389225	ArgumentList	varname		389121	1					
ANR	389226	Argument	varname		389121	0					
ANR	389227	Identifier	varname		389121	0					
ANR	389228	Identifier	IS_UNDEF		389121	1					
ANR	389229	CompoundStatement		18:67:424:424	389121	1					
ANR	389230	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	30977:3:978557:978592	389121	0	True				
ANR	389231	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		389121	0					
ANR	389232	Callee	GET_OP1_UNDEF_CV		389121	0					
ANR	389233	Identifier	GET_OP1_UNDEF_CV		389121	0					
ANR	389234	ArgumentList	varname		389121	1					
ANR	389235	Argument	varname		389121	0					
ANR	389236	Identifier	varname		389121	0					
ANR	389237	Argument	BP_VAR_R		389121	1					
ANR	389238	Identifier	BP_VAR_R		389121	0					
ANR	389239	ExpressionStatement	name = zval_get_string ( varname )	30979:2:978600:978631	389121	1	True				
ANR	389240	AssignmentExpression	name = zval_get_string ( varname )		389121	0		=			
ANR	389241	Identifier	name		389121	0					
ANR	389242	CallExpression	zval_get_string ( varname )		389121	1					
ANR	389243	Callee	zval_get_string		389121	0					
ANR	389244	Identifier	zval_get_string		389121	0					
ANR	389245	ArgumentList	varname		389121	1					
ANR	389246	Argument	varname		389121	0					
ANR	389247	Identifier	varname		389121	0					
ANR	389248	IfStatement	if ( IS_CONST != IS_UNUSED )		389121	7					
ANR	389249	Condition	IS_CONST != IS_UNUSED	30982:5:978642:978662	389121	0	True				
ANR	389250	EqualityExpression	IS_CONST != IS_UNUSED		389121	0		!=			
ANR	389251	Identifier	IS_CONST		389121	0					
ANR	389252	Identifier	IS_UNUSED		389121	1					
ANR	389253	CompoundStatement		25:2:541:561	389121	1					
ANR	389254	IdentifierDeclStatement	zend_class_entry * ce ;	30983:2:978669:978689	389121	0	True				
ANR	389255	IdentifierDecl	* ce		389121	0					
ANR	389256	IdentifierDeclType	zend_class_entry *		389121	0					
ANR	389257	Identifier	ce		389121	1					
ANR	389258	IfStatement	if ( IS_CONST == IS_CONST )		389121	1					
ANR	389259	Condition	IS_CONST == IS_CONST	30985:6:978698:978717	389121	0	True				
ANR	389260	EqualityExpression	IS_CONST == IS_CONST		389121	0		==			
ANR	389261	Identifier	IS_CONST		389121	0					
ANR	389262	Identifier	IS_CONST		389121	1					
ANR	389263	CompoundStatement		27:28:592:592	389121	1					
ANR	389264	IfStatement	if ( IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		389121	0					
ANR	389265	Condition	IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	30986:7:978729:978826	389121	0	True				
ANR	389266	AndExpression	IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		389121	0		&&			
ANR	389267	EqualityExpression	IS_CV == IS_CONST		389121	0		==			
ANR	389268	Identifier	IS_CV		389121	0					
ANR	389269	Identifier	IS_CONST		389121	1					
ANR	389270	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		389121	1					
ANR	389271	Callee	EXPECTED		389121	0					
ANR	389272	Identifier	EXPECTED		389121	0					
ANR	389273	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		389121	1					
ANR	389274	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		389121	0					
ANR	389275	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		389121	0		!=			
ANR	389276	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		389121	0		=			
ANR	389277	Identifier	ce		389121	0					
ANR	389278	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		389121	1					
ANR	389279	Callee	CACHED_PTR		389121	0					
ANR	389280	Identifier	CACHED_PTR		389121	0					
ANR	389281	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	1					
ANR	389282	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	0					
ANR	389283	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	0					
ANR	389284	Callee	Z_CACHE_SLOT_P		389121	0					
ANR	389285	Identifier	Z_CACHE_SLOT_P		389121	0					
ANR	389286	ArgumentList	EX_CONSTANT ( opline -> op1 )		389121	1					
ANR	389287	Argument	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389288	CallExpression	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389289	Callee	EX_CONSTANT		389121	0					
ANR	389290	Identifier	EX_CONSTANT		389121	0					
ANR	389291	ArgumentList	opline -> op1		389121	1					
ANR	389292	Argument	opline -> op1		389121	0					
ANR	389293	PtrMemberAccess	opline -> op1		389121	0					
ANR	389294	Identifier	opline		389121	0					
ANR	389295	Identifier	op1		389121	1					
ANR	389296	Identifier	NULL		389121	1					
ANR	389297	CompoundStatement		28:107:701:701	389121	1					
ANR	389298	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	30987:4:978835:978912	389121	0	True				
ANR	389299	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		389121	0		=			
ANR	389300	Identifier	retval		389121	0					
ANR	389301	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		389121	1					
ANR	389302	Callee	CACHED_PTR		389121	0					
ANR	389303	Identifier	CACHED_PTR		389121	0					
ANR	389304	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		389121	1					
ANR	389305	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		389121	0					
ANR	389306	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		389121	0		+			
ANR	389307	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	0					
ANR	389308	Callee	Z_CACHE_SLOT_P		389121	0					
ANR	389309	Identifier	Z_CACHE_SLOT_P		389121	0					
ANR	389310	ArgumentList	EX_CONSTANT ( opline -> op1 )		389121	1					
ANR	389311	Argument	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389312	CallExpression	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389313	Callee	EX_CONSTANT		389121	0					
ANR	389314	Identifier	EX_CONSTANT		389121	0					
ANR	389315	ArgumentList	opline -> op1		389121	1					
ANR	389316	Argument	opline -> op1		389121	0					
ANR	389317	PtrMemberAccess	opline -> op1		389121	0					
ANR	389318	Identifier	opline		389121	0					
ANR	389319	Identifier	op1		389121	1					
ANR	389320	SizeofExpression	sizeof ( void * )		389121	1					
ANR	389321	Sizeof	sizeof		389121	0					
ANR	389322	SizeofOperand	void *		389121	1					
ANR	389323	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		389121	1					
ANR	389324	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	30990:8:978974:979014	389121	0	True				
ANR	389325	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		389121	0					
ANR	389326	Callee	UNEXPECTED		389121	0					
ANR	389327	Identifier	UNEXPECTED		389121	0					
ANR	389328	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		389121	1					
ANR	389329	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		389121	0					
ANR	389330	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		389121	0		==			
ANR	389331	CallExpression	CE_STATIC_MEMBERS ( ce )		389121	0					
ANR	389332	Callee	CE_STATIC_MEMBERS		389121	0					
ANR	389333	Identifier	CE_STATIC_MEMBERS		389121	0					
ANR	389334	ArgumentList	ce		389121	1					
ANR	389335	Argument	ce		389121	0					
ANR	389336	Identifier	ce		389121	0					
ANR	389337	Identifier	NULL		389121	1					
ANR	389338	CompoundStatement		32:51:889:889	389121	1					
ANR	389339	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	30991:5:979024:979131	389121	0	True				
ANR	389340	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		389121	0					
ANR	389341	Callee	zend_throw_error		389121	0					
ANR	389342	Identifier	zend_throw_error		389121	0					
ANR	389343	ArgumentList	NULL		389121	1					
ANR	389344	Argument	NULL		389121	0					
ANR	389345	Identifier	NULL		389121	0					
ANR	389346	Argument	"""Access to undeclared static property: %s::$%s"""		389121	1					
ANR	389347	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		389121	0					
ANR	389348	Argument	ZSTR_VAL ( ce -> name )		389121	2					
ANR	389349	CallExpression	ZSTR_VAL ( ce -> name )		389121	0					
ANR	389350	Callee	ZSTR_VAL		389121	0					
ANR	389351	Identifier	ZSTR_VAL		389121	0					
ANR	389352	ArgumentList	ce -> name		389121	1					
ANR	389353	Argument	ce -> name		389121	0					
ANR	389354	PtrMemberAccess	ce -> name		389121	0					
ANR	389355	Identifier	ce		389121	0					
ANR	389356	Identifier	name		389121	1					
ANR	389357	Argument	ZSTR_VAL ( name )		389121	3					
ANR	389358	CallExpression	ZSTR_VAL ( name )		389121	0					
ANR	389359	Callee	ZSTR_VAL		389121	0					
ANR	389360	Identifier	ZSTR_VAL		389121	0					
ANR	389361	ArgumentList	name		389121	1					
ANR	389362	Argument	name		389121	0					
ANR	389363	Identifier	name		389121	0					
ANR	389364	ExpressionStatement	HANDLE_EXCEPTION ( )	30993:5:979139:979157	389121	1	True				
ANR	389365	CallExpression	HANDLE_EXCEPTION ( )		389121	0					
ANR	389366	Callee	HANDLE_EXCEPTION		389121	0					
ANR	389367	Identifier	HANDLE_EXCEPTION		389121	0					
ANR	389368	ArgumentList			389121	1					
ANR	389369	GotoStatement	goto fetch_var_return ;	30996:4:979170:979191	389121	2	True				
ANR	389370	Identifier	fetch_var_return		389121	0					
ANR	389371	ElseStatement	else		389121	0					
ANR	389372	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		389121	0					
ANR	389373	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	30997:14:979207:979285	389121	0	True				
ANR	389374	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		389121	0					
ANR	389375	Callee	UNEXPECTED		389121	0					
ANR	389376	Identifier	UNEXPECTED		389121	0					
ANR	389377	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		389121	1					
ANR	389378	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		389121	0					
ANR	389379	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		389121	0		==			
ANR	389380	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		389121	0		=			
ANR	389381	Identifier	ce		389121	0					
ANR	389382	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		389121	1					
ANR	389383	Callee	CACHED_PTR		389121	0					
ANR	389384	Identifier	CACHED_PTR		389121	0					
ANR	389385	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		389121	1					
ANR	389386	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		389121	0					
ANR	389387	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		389121	0					
ANR	389388	Callee	Z_CACHE_SLOT_P		389121	0					
ANR	389389	Identifier	Z_CACHE_SLOT_P		389121	0					
ANR	389390	ArgumentList	EX_CONSTANT ( opline -> op2 )		389121	1					
ANR	389391	Argument	EX_CONSTANT ( opline -> op2 )		389121	0					
ANR	389392	CallExpression	EX_CONSTANT ( opline -> op2 )		389121	0					
ANR	389393	Callee	EX_CONSTANT		389121	0					
ANR	389394	Identifier	EX_CONSTANT		389121	0					
ANR	389395	ArgumentList	opline -> op2		389121	1					
ANR	389396	Argument	opline -> op2		389121	0					
ANR	389397	PtrMemberAccess	opline -> op2		389121	0					
ANR	389398	Identifier	opline		389121	0					
ANR	389399	Identifier	op2		389121	1					
ANR	389400	Identifier	NULL		389121	1					
ANR	389401	CompoundStatement		39:95:1160:1160	389121	1					
ANR	389402	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	30998:4:979294:979443	389121	0	True				
ANR	389403	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		389121	0		=			
ANR	389404	Identifier	ce		389121	0					
ANR	389405	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		389121	1					
ANR	389406	Callee	zend_fetch_class_by_name		389121	0					
ANR	389407	Identifier	zend_fetch_class_by_name		389121	0					
ANR	389408	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		389121	1					
ANR	389409	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		389121	0					
ANR	389410	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		389121	0					
ANR	389411	Callee	Z_STR_P		389121	0					
ANR	389412	Identifier	Z_STR_P		389121	0					
ANR	389413	ArgumentList	EX_CONSTANT ( opline -> op2 )		389121	1					
ANR	389414	Argument	EX_CONSTANT ( opline -> op2 )		389121	0					
ANR	389415	CallExpression	EX_CONSTANT ( opline -> op2 )		389121	0					
ANR	389416	Callee	EX_CONSTANT		389121	0					
ANR	389417	Identifier	EX_CONSTANT		389121	0					
ANR	389418	ArgumentList	opline -> op2		389121	1					
ANR	389419	Argument	opline -> op2		389121	0					
ANR	389420	PtrMemberAccess	opline -> op2		389121	0					
ANR	389421	Identifier	opline		389121	0					
ANR	389422	Identifier	op2		389121	1					
ANR	389423	Argument	EX_CONSTANT ( opline -> op2 ) + 1		389121	1					
ANR	389424	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		389121	0		+			
ANR	389425	CallExpression	EX_CONSTANT ( opline -> op2 )		389121	0					
ANR	389426	Callee	EX_CONSTANT		389121	0					
ANR	389427	Identifier	EX_CONSTANT		389121	0					
ANR	389428	ArgumentList	opline -> op2		389121	1					
ANR	389429	Argument	opline -> op2		389121	0					
ANR	389430	PtrMemberAccess	opline -> op2		389121	0					
ANR	389431	Identifier	opline		389121	0					
ANR	389432	Identifier	op2		389121	1					
ANR	389433	PrimaryExpression	1		389121	1					
ANR	389434	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		389121	2					
ANR	389435	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		389121	0		|			
ANR	389436	Identifier	ZEND_FETCH_CLASS_DEFAULT		389121	0					
ANR	389437	Identifier	ZEND_FETCH_CLASS_EXCEPTION		389121	1					
ANR	389438	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		389121	1					
ANR	389439	Condition	UNEXPECTED ( ce == NULL )	30999:8:979453:979474	389121	0	True				
ANR	389440	CallExpression	UNEXPECTED ( ce == NULL )		389121	0					
ANR	389441	Callee	UNEXPECTED		389121	0					
ANR	389442	Identifier	UNEXPECTED		389121	0					
ANR	389443	ArgumentList	ce == NULL		389121	1					
ANR	389444	Argument	ce == NULL		389121	0					
ANR	389445	EqualityExpression	ce == NULL		389121	0		==			
ANR	389446	Identifier	ce		389121	0					
ANR	389447	Identifier	NULL		389121	1					
ANR	389448	CompoundStatement		41:32:1349:1349	389121	1					
ANR	389449	IfStatement	if ( IS_CV != IS_CONST )		389121	0					
ANR	389450	Condition	IS_CV != IS_CONST	31000:9:979488:979504	389121	0	True				
ANR	389451	EqualityExpression	IS_CV != IS_CONST		389121	0		!=			
ANR	389452	Identifier	IS_CV		389121	0					
ANR	389453	Identifier	IS_CONST		389121	1					
ANR	389454	CompoundStatement		42:28:1379:1379	389121	1					
ANR	389455	ExpressionStatement	zend_string_release ( name )	31001:6:979515:979540	389121	0	True				
ANR	389456	CallExpression	zend_string_release ( name )		389121	0					
ANR	389457	Callee	zend_string_release		389121	0					
ANR	389458	Identifier	zend_string_release		389121	0					
ANR	389459	ArgumentList	name		389121	1					
ANR	389460	Argument	name		389121	0					
ANR	389461	Identifier	name		389121	0					
ANR	389462	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	31004:5:979555:979592	389121	1	True				
ANR	389463	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		389121	0					
ANR	389464	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		389121	0					
ANR	389465	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		389121	0					
ANR	389466	ArgumentList			389121	1					
ANR	389467	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	31006:4:979604:979659	389121	2	True				
ANR	389468	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		389121	0					
ANR	389469	Callee	CACHE_PTR		389121	0					
ANR	389470	Identifier	CACHE_PTR		389121	0					
ANR	389471	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		389121	1					
ANR	389472	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		389121	0					
ANR	389473	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		389121	0					
ANR	389474	Callee	Z_CACHE_SLOT_P		389121	0					
ANR	389475	Identifier	Z_CACHE_SLOT_P		389121	0					
ANR	389476	ArgumentList	EX_CONSTANT ( opline -> op2 )		389121	1					
ANR	389477	Argument	EX_CONSTANT ( opline -> op2 )		389121	0					
ANR	389478	CallExpression	EX_CONSTANT ( opline -> op2 )		389121	0					
ANR	389479	Callee	EX_CONSTANT		389121	0					
ANR	389480	Identifier	EX_CONSTANT		389121	0					
ANR	389481	ArgumentList	opline -> op2		389121	1					
ANR	389482	Argument	opline -> op2		389121	0					
ANR	389483	PtrMemberAccess	opline -> op2		389121	0					
ANR	389484	Identifier	opline		389121	0					
ANR	389485	Identifier	op2		389121	1					
ANR	389486	Argument	ce		389121	1					
ANR	389487	Identifier	ce		389121	0					
ANR	389488	ElseStatement	else		389121	0					
ANR	389489	CompoundStatement		50:9:1547:1547	389121	0					
ANR	389490	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	31009:3:979680:979716	389121	0	True				
ANR	389491	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		389121	0		=			
ANR	389492	Identifier	ce		389121	0					
ANR	389493	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		389121	1					
ANR	389494	Callee	Z_CE_P		389121	0					
ANR	389495	Identifier	Z_CE_P		389121	0					
ANR	389496	ArgumentList	EX_VAR ( opline -> op2 . var )		389121	1					
ANR	389497	Argument	EX_VAR ( opline -> op2 . var )		389121	0					
ANR	389498	CallExpression	EX_VAR ( opline -> op2 . var )		389121	0					
ANR	389499	Callee	EX_VAR		389121	0					
ANR	389500	Identifier	EX_VAR		389121	0					
ANR	389501	ArgumentList	opline -> op2 . var		389121	1					
ANR	389502	Argument	opline -> op2 . var		389121	0					
ANR	389503	MemberAccess	opline -> op2 . var		389121	0					
ANR	389504	PtrMemberAccess	opline -> op2		389121	0					
ANR	389505	Identifier	opline		389121	0					
ANR	389506	Identifier	op2		389121	1					
ANR	389507	Identifier	var		389121	1					
ANR	389508	IfStatement	"if ( IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		389121	1					
ANR	389509	Condition	"IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	31010:7:979725:979839	389121	0	True				
ANR	389510	AndExpression	"IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		389121	0		&&			
ANR	389511	EqualityExpression	IS_CV == IS_CONST		389121	0		==			
ANR	389512	Identifier	IS_CV		389121	0					
ANR	389513	Identifier	IS_CONST		389121	1					
ANR	389514	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		389121	1		!=			
ANR	389515	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		389121	0		=			
ANR	389516	Identifier	retval		389121	0					
ANR	389517	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		389121	1					
ANR	389518	Callee	CACHED_POLYMORPHIC_PTR		389121	0					
ANR	389519	Identifier	CACHED_POLYMORPHIC_PTR		389121	0					
ANR	389520	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	1					
ANR	389521	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	0					
ANR	389522	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	0					
ANR	389523	Callee	Z_CACHE_SLOT_P		389121	0					
ANR	389524	Identifier	Z_CACHE_SLOT_P		389121	0					
ANR	389525	ArgumentList	EX_CONSTANT ( opline -> op1 )		389121	1					
ANR	389526	Argument	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389527	CallExpression	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389528	Callee	EX_CONSTANT		389121	0					
ANR	389529	Identifier	EX_CONSTANT		389121	0					
ANR	389530	ArgumentList	opline -> op1		389121	1					
ANR	389531	Argument	opline -> op1		389121	0					
ANR	389532	PtrMemberAccess	opline -> op1		389121	0					
ANR	389533	Identifier	opline		389121	0					
ANR	389534	Identifier	op1		389121	1					
ANR	389535	Argument	ce		389121	1					
ANR	389536	Identifier	ce		389121	0					
ANR	389537	Identifier	NULL		389121	1					
ANR	389538	CompoundStatement		53:96:1714:1714	389121	1					
ANR	389539	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		389121	0					
ANR	389540	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	31014:8:979904:979944	389121	0	True				
ANR	389541	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		389121	0					
ANR	389542	Callee	UNEXPECTED		389121	0					
ANR	389543	Identifier	UNEXPECTED		389121	0					
ANR	389544	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		389121	1					
ANR	389545	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		389121	0					
ANR	389546	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		389121	0		==			
ANR	389547	CallExpression	CE_STATIC_MEMBERS ( ce )		389121	0					
ANR	389548	Callee	CE_STATIC_MEMBERS		389121	0					
ANR	389549	Identifier	CE_STATIC_MEMBERS		389121	0					
ANR	389550	ArgumentList	ce		389121	1					
ANR	389551	Argument	ce		389121	0					
ANR	389552	Identifier	ce		389121	0					
ANR	389553	Identifier	NULL		389121	1					
ANR	389554	CompoundStatement		56:51:1819:1819	389121	1					
ANR	389555	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	31015:5:979954:980061	389121	0	True				
ANR	389556	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		389121	0					
ANR	389557	Callee	zend_throw_error		389121	0					
ANR	389558	Identifier	zend_throw_error		389121	0					
ANR	389559	ArgumentList	NULL		389121	1					
ANR	389560	Argument	NULL		389121	0					
ANR	389561	Identifier	NULL		389121	0					
ANR	389562	Argument	"""Access to undeclared static property: %s::$%s"""		389121	1					
ANR	389563	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		389121	0					
ANR	389564	Argument	ZSTR_VAL ( ce -> name )		389121	2					
ANR	389565	CallExpression	ZSTR_VAL ( ce -> name )		389121	0					
ANR	389566	Callee	ZSTR_VAL		389121	0					
ANR	389567	Identifier	ZSTR_VAL		389121	0					
ANR	389568	ArgumentList	ce -> name		389121	1					
ANR	389569	Argument	ce -> name		389121	0					
ANR	389570	PtrMemberAccess	ce -> name		389121	0					
ANR	389571	Identifier	ce		389121	0					
ANR	389572	Identifier	name		389121	1					
ANR	389573	Argument	ZSTR_VAL ( name )		389121	3					
ANR	389574	CallExpression	ZSTR_VAL ( name )		389121	0					
ANR	389575	Callee	ZSTR_VAL		389121	0					
ANR	389576	Identifier	ZSTR_VAL		389121	0					
ANR	389577	ArgumentList	name		389121	1					
ANR	389578	Argument	name		389121	0					
ANR	389579	Identifier	name		389121	0					
ANR	389580	ExpressionStatement	HANDLE_EXCEPTION ( )	31017:5:980069:980087	389121	1	True				
ANR	389581	CallExpression	HANDLE_EXCEPTION ( )		389121	0					
ANR	389582	Callee	HANDLE_EXCEPTION		389121	0					
ANR	389583	Identifier	HANDLE_EXCEPTION		389121	0					
ANR	389584	ArgumentList			389121	1					
ANR	389585	GotoStatement	goto fetch_var_return ;	31020:4:980100:980121	389121	1	True				
ANR	389586	Identifier	fetch_var_return		389121	0					
ANR	389587	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	31023:2:980134:980184	389121	2	True				
ANR	389588	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		389121	0		=			
ANR	389589	Identifier	retval		389121	0					
ANR	389590	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		389121	1					
ANR	389591	Callee	zend_std_get_static_property		389121	0					
ANR	389592	Identifier	zend_std_get_static_property		389121	0					
ANR	389593	ArgumentList	ce		389121	1					
ANR	389594	Argument	ce		389121	0					
ANR	389595	Identifier	ce		389121	0					
ANR	389596	Argument	name		389121	1					
ANR	389597	Identifier	name		389121	0					
ANR	389598	Argument	0		389121	2					
ANR	389599	PrimaryExpression	0		389121	0					
ANR	389600	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		389121	3					
ANR	389601	Condition	UNEXPECTED ( EG ( exception ) )	31024:6:980192:980216	389121	0	True				
ANR	389602	CallExpression	UNEXPECTED ( EG ( exception ) )		389121	0					
ANR	389603	Callee	UNEXPECTED		389121	0					
ANR	389604	Identifier	UNEXPECTED		389121	0					
ANR	389605	ArgumentList	EG ( exception )		389121	1					
ANR	389606	Argument	EG ( exception )		389121	0					
ANR	389607	CallExpression	EG ( exception )		389121	0					
ANR	389608	Callee	EG		389121	0					
ANR	389609	Identifier	EG		389121	0					
ANR	389610	ArgumentList	exception		389121	1					
ANR	389611	Argument	exception		389121	0					
ANR	389612	Identifier	exception		389121	0					
ANR	389613	CompoundStatement		66:33:2091:2091	389121	1					
ANR	389614	IfStatement	if ( IS_CV != IS_CONST )		389121	0					
ANR	389615	Condition	IS_CV != IS_CONST	31025:7:980228:980244	389121	0	True				
ANR	389616	EqualityExpression	IS_CV != IS_CONST		389121	0		!=			
ANR	389617	Identifier	IS_CV		389121	0					
ANR	389618	Identifier	IS_CONST		389121	1					
ANR	389619	CompoundStatement		67:26:2119:2119	389121	1					
ANR	389620	ExpressionStatement	zend_string_release ( name )	31026:4:980253:980278	389121	0	True				
ANR	389621	CallExpression	zend_string_release ( name )		389121	0					
ANR	389622	Callee	zend_string_release		389121	0					
ANR	389623	Identifier	zend_string_release		389121	0					
ANR	389624	ArgumentList	name		389121	1					
ANR	389625	Argument	name		389121	0					
ANR	389626	Identifier	name		389121	0					
ANR	389627	ExpressionStatement	HANDLE_EXCEPTION ( )	31029:3:980289:980307	389121	1	True				
ANR	389628	CallExpression	HANDLE_EXCEPTION ( )		389121	0					
ANR	389629	Callee	HANDLE_EXCEPTION		389121	0					
ANR	389630	Identifier	HANDLE_EXCEPTION		389121	0					
ANR	389631	ArgumentList			389121	1					
ANR	389632	IfStatement	if ( IS_CV == IS_CONST && retval )		389121	4					
ANR	389633	Condition	IS_CV == IS_CONST && retval	31031:6:980319:980345	389121	0	True				
ANR	389634	AndExpression	IS_CV == IS_CONST && retval		389121	0		&&			
ANR	389635	EqualityExpression	IS_CV == IS_CONST		389121	0		==			
ANR	389636	Identifier	IS_CV		389121	0					
ANR	389637	Identifier	IS_CONST		389121	1					
ANR	389638	Identifier	retval		389121	1					
ANR	389639	CompoundStatement		73:35:2220:2220	389121	1					
ANR	389640	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	31032:3:980353:980428	389121	0	True				
ANR	389641	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		389121	0					
ANR	389642	Callee	CACHE_POLYMORPHIC_PTR		389121	0					
ANR	389643	Identifier	CACHE_POLYMORPHIC_PTR		389121	0					
ANR	389644	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	1					
ANR	389645	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	0					
ANR	389646	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		389121	0					
ANR	389647	Callee	Z_CACHE_SLOT_P		389121	0					
ANR	389648	Identifier	Z_CACHE_SLOT_P		389121	0					
ANR	389649	ArgumentList	EX_CONSTANT ( opline -> op1 )		389121	1					
ANR	389650	Argument	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389651	CallExpression	EX_CONSTANT ( opline -> op1 )		389121	0					
ANR	389652	Callee	EX_CONSTANT		389121	0					
ANR	389653	Identifier	EX_CONSTANT		389121	0					
ANR	389654	ArgumentList	opline -> op1		389121	1					
ANR	389655	Argument	opline -> op1		389121	0					
ANR	389656	PtrMemberAccess	opline -> op1		389121	0					
ANR	389657	Identifier	opline		389121	0					
ANR	389658	Identifier	op1		389121	1					
ANR	389659	Argument	ce		389121	1					
ANR	389660	Identifier	ce		389121	0					
ANR	389661	Argument	retval		389121	2					
ANR	389662	Identifier	retval		389121	0					
ANR	389663	ElseStatement	else		389121	0					
ANR	389664	CompoundStatement		77:8:2315:2315	389121	0					
ANR	389665	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	31036:2:980447:980558	389121	0	True				
ANR	389666	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		389121	0		=			
ANR	389667	Identifier	target_symbol_table		389121	0					
ANR	389668	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		389121	1					
ANR	389669	Callee	zend_get_target_symbol_table		389121	0					
ANR	389670	Identifier	zend_get_target_symbol_table		389121	0					
ANR	389671	ArgumentList	execute_data		389121	1					
ANR	389672	Argument	execute_data		389121	0					
ANR	389673	Identifier	execute_data		389121	0					
ANR	389674	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		389121	1					
ANR	389675	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		389121	0		&			
ANR	389676	PtrMemberAccess	opline -> extended_value		389121	0					
ANR	389677	Identifier	opline		389121	0					
ANR	389678	Identifier	extended_value		389121	1					
ANR	389679	Identifier	ZEND_FETCH_TYPE_MASK		389121	1					
ANR	389680	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	31037:2:980562:980612	389121	1	True				
ANR	389681	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		389121	0		=			
ANR	389682	Identifier	retval		389121	0					
ANR	389683	CallExpression	"zend_hash_find ( target_symbol_table , name )"		389121	1					
ANR	389684	Callee	zend_hash_find		389121	0					
ANR	389685	Identifier	zend_hash_find		389121	0					
ANR	389686	ArgumentList	target_symbol_table		389121	1					
ANR	389687	Argument	target_symbol_table		389121	0					
ANR	389688	Identifier	target_symbol_table		389121	0					
ANR	389689	Argument	name		389121	1					
ANR	389690	Identifier	name		389121	0					
ANR	389691	IfStatement	if ( retval == NULL )		389121	2					
ANR	389692	Condition	retval == NULL	31038:6:980620:980633	389121	0	True				
ANR	389693	EqualityExpression	retval == NULL		389121	0		==			
ANR	389694	Identifier	retval		389121	0					
ANR	389695	Identifier	NULL		389121	1					
ANR	389696	CompoundStatement		80:22:2508:2508	389121	1					
ANR	389697	SwitchStatement	switch ( type )		389121	0					
ANR	389698	Condition	type	31039:11:980649:980652	389121	0	True				
ANR	389699	Identifier	type		389121	0					
ANR	389700	CompoundStatement		81:17:2527:2527	389121	1					
ANR	389701	Label	case BP_VAR_R :	31040:4:980661:980674	389121	0	True				
ANR	389702	Identifier	BP_VAR_R		389121	0					
ANR	389703	Label	case BP_VAR_UNSET :	31041:4:980680:980697	389121	1	True				
ANR	389704	Identifier	BP_VAR_UNSET		389121	0					
ANR	389705	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	31042:5:980704:980765	389121	2	True				
ANR	389706	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		389121	0					
ANR	389707	Callee	zend_error		389121	0					
ANR	389708	Identifier	zend_error		389121	0					
ANR	389709	ArgumentList	E_NOTICE		389121	1					
ANR	389710	Argument	E_NOTICE		389121	0					
ANR	389711	Identifier	E_NOTICE		389121	0					
ANR	389712	Argument	"""Undefined variable: %s"""		389121	1					
ANR	389713	PrimaryExpression	"""Undefined variable: %s"""		389121	0					
ANR	389714	Argument	ZSTR_VAL ( name )		389121	2					
ANR	389715	CallExpression	ZSTR_VAL ( name )		389121	0					
ANR	389716	Callee	ZSTR_VAL		389121	0					
ANR	389717	Identifier	ZSTR_VAL		389121	0					
ANR	389718	ArgumentList	name		389121	1					
ANR	389719	Argument	name		389121	0					
ANR	389720	Identifier	name		389121	0					
ANR	389721	Label	case BP_VAR_IS :	31044:4:980810:980824	389121	3	True				
ANR	389722	Identifier	BP_VAR_IS		389121	0					
ANR	389723	ExpressionStatement	retval = & EG ( uninitialized_zval )	31045:5:980831:980863	389121	4	True				
ANR	389724	AssignmentExpression	retval = & EG ( uninitialized_zval )		389121	0		=			
ANR	389725	Identifier	retval		389121	0					
ANR	389726	UnaryOperationExpression	& EG ( uninitialized_zval )		389121	1					
ANR	389727	UnaryOperator	&		389121	0					
ANR	389728	CallExpression	EG ( uninitialized_zval )		389121	1					
ANR	389729	Callee	EG		389121	0					
ANR	389730	Identifier	EG		389121	0					
ANR	389731	ArgumentList	uninitialized_zval		389121	1					
ANR	389732	Argument	uninitialized_zval		389121	0					
ANR	389733	Identifier	uninitialized_zval		389121	0					
ANR	389734	BreakStatement	break ;	31046:5:980870:980875	389121	5	True				
ANR	389735	Label	case BP_VAR_RW :	31047:4:980881:980895	389121	6	True				
ANR	389736	Identifier	BP_VAR_RW		389121	0					
ANR	389737	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	31048:5:980902:980963	389121	7	True				
ANR	389738	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		389121	0					
ANR	389739	Callee	zend_error		389121	0					
ANR	389740	Identifier	zend_error		389121	0					
ANR	389741	ArgumentList	E_NOTICE		389121	1					
ANR	389742	Argument	E_NOTICE		389121	0					
ANR	389743	Identifier	E_NOTICE		389121	0					
ANR	389744	Argument	"""Undefined variable: %s"""		389121	1					
ANR	389745	PrimaryExpression	"""Undefined variable: %s"""		389121	0					
ANR	389746	Argument	ZSTR_VAL ( name )		389121	2					
ANR	389747	CallExpression	ZSTR_VAL ( name )		389121	0					
ANR	389748	Callee	ZSTR_VAL		389121	0					
ANR	389749	Identifier	ZSTR_VAL		389121	0					
ANR	389750	ArgumentList	name		389121	1					
ANR	389751	Argument	name		389121	0					
ANR	389752	Identifier	name		389121	0					
ANR	389753	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	31049:5:980970:981047	389121	8	True				
ANR	389754	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		389121	0		=			
ANR	389755	Identifier	retval		389121	0					
ANR	389756	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		389121	1					
ANR	389757	Callee	zend_hash_update		389121	0					
ANR	389758	Identifier	zend_hash_update		389121	0					
ANR	389759	ArgumentList	target_symbol_table		389121	1					
ANR	389760	Argument	target_symbol_table		389121	0					
ANR	389761	Identifier	target_symbol_table		389121	0					
ANR	389762	Argument	name		389121	1					
ANR	389763	Identifier	name		389121	0					
ANR	389764	Argument	& EG ( uninitialized_zval )		389121	2					
ANR	389765	UnaryOperationExpression	& EG ( uninitialized_zval )		389121	0					
ANR	389766	UnaryOperator	&		389121	0					
ANR	389767	CallExpression	EG ( uninitialized_zval )		389121	1					
ANR	389768	Callee	EG		389121	0					
ANR	389769	Identifier	EG		389121	0					
ANR	389770	ArgumentList	uninitialized_zval		389121	1					
ANR	389771	Argument	uninitialized_zval		389121	0					
ANR	389772	Identifier	uninitialized_zval		389121	0					
ANR	389773	BreakStatement	break ;	31050:5:981054:981059	389121	9	True				
ANR	389774	Label	case BP_VAR_W :	31051:4:981065:981078	389121	10	True				
ANR	389775	Identifier	BP_VAR_W		389121	0					
ANR	389776	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	31052:5:981085:981163	389121	11	True				
ANR	389777	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		389121	0		=			
ANR	389778	Identifier	retval		389121	0					
ANR	389779	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		389121	1					
ANR	389780	Callee	zend_hash_add_new		389121	0					
ANR	389781	Identifier	zend_hash_add_new		389121	0					
ANR	389782	ArgumentList	target_symbol_table		389121	1					
ANR	389783	Argument	target_symbol_table		389121	0					
ANR	389784	Identifier	target_symbol_table		389121	0					
ANR	389785	Argument	name		389121	1					
ANR	389786	Identifier	name		389121	0					
ANR	389787	Argument	& EG ( uninitialized_zval )		389121	2					
ANR	389788	UnaryOperationExpression	& EG ( uninitialized_zval )		389121	0					
ANR	389789	UnaryOperator	&		389121	0					
ANR	389790	CallExpression	EG ( uninitialized_zval )		389121	1					
ANR	389791	Callee	EG		389121	0					
ANR	389792	Identifier	EG		389121	0					
ANR	389793	ArgumentList	uninitialized_zval		389121	1					
ANR	389794	Argument	uninitialized_zval		389121	0					
ANR	389795	Identifier	uninitialized_zval		389121	0					
ANR	389796	BreakStatement	break ;	31053:5:981170:981175	389121	12	True				
ANR	389797	Statement	EMPTY_SWITCH_DEFAULT_CASE	31054:4:981181:981205	389121	13	True				
ANR	389798	Statement	(	31054:29:981206:981206	389121	14	True				
ANR	389799	Statement	)	31054:30:981207:981207	389121	15	True				
ANR	389800	ElseStatement	else		389121	0					
ANR	389801	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		389121	0					
ANR	389802	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	31057:13:981294:981324	389121	0	True				
ANR	389803	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		389121	0		==			
ANR	389804	CallExpression	Z_TYPE_P ( retval )		389121	0					
ANR	389805	Callee	Z_TYPE_P		389121	0					
ANR	389806	Identifier	Z_TYPE_P		389121	0					
ANR	389807	ArgumentList	retval		389121	1					
ANR	389808	Argument	retval		389121	0					
ANR	389809	Identifier	retval		389121	0					
ANR	389810	Identifier	IS_INDIRECT		389121	1					
ANR	389811	CompoundStatement		99:46:3199:3199	389121	1					
ANR	389812	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	31058:3:981332:981361	389121	0	True				
ANR	389813	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		389121	0		=			
ANR	389814	Identifier	retval		389121	0					
ANR	389815	CallExpression	Z_INDIRECT_P ( retval )		389121	1					
ANR	389816	Callee	Z_INDIRECT_P		389121	0					
ANR	389817	Identifier	Z_INDIRECT_P		389121	0					
ANR	389818	ArgumentList	retval		389121	1					
ANR	389819	Argument	retval		389121	0					
ANR	389820	Identifier	retval		389121	0					
ANR	389821	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		389121	1					
ANR	389822	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	31059:7:981370:981397	389121	0	True				
ANR	389823	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		389121	0		==			
ANR	389824	CallExpression	Z_TYPE_P ( retval )		389121	0					
ANR	389825	Callee	Z_TYPE_P		389121	0					
ANR	389826	Identifier	Z_TYPE_P		389121	0					
ANR	389827	ArgumentList	retval		389121	1					
ANR	389828	Argument	retval		389121	0					
ANR	389829	Identifier	retval		389121	0					
ANR	389830	Identifier	IS_UNDEF		389121	1					
ANR	389831	CompoundStatement		101:37:3272:3272	389121	1					
ANR	389832	SwitchStatement	switch ( type )		389121	0					
ANR	389833	Condition	type	31060:12:981414:981417	389121	0	True				
ANR	389834	Identifier	type		389121	0					
ANR	389835	CompoundStatement		102:18:3292:3292	389121	1					
ANR	389836	Label	case BP_VAR_R :	31061:5:981427:981440	389121	0	True				
ANR	389837	Identifier	BP_VAR_R		389121	0					
ANR	389838	Label	case BP_VAR_UNSET :	31062:5:981447:981464	389121	1	True				
ANR	389839	Identifier	BP_VAR_UNSET		389121	0					
ANR	389840	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	31063:6:981472:981533	389121	2	True				
ANR	389841	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		389121	0					
ANR	389842	Callee	zend_error		389121	0					
ANR	389843	Identifier	zend_error		389121	0					
ANR	389844	ArgumentList	E_NOTICE		389121	1					
ANR	389845	Argument	E_NOTICE		389121	0					
ANR	389846	Identifier	E_NOTICE		389121	0					
ANR	389847	Argument	"""Undefined variable: %s"""		389121	1					
ANR	389848	PrimaryExpression	"""Undefined variable: %s"""		389121	0					
ANR	389849	Argument	ZSTR_VAL ( name )		389121	2					
ANR	389850	CallExpression	ZSTR_VAL ( name )		389121	0					
ANR	389851	Callee	ZSTR_VAL		389121	0					
ANR	389852	Identifier	ZSTR_VAL		389121	0					
ANR	389853	ArgumentList	name		389121	1					
ANR	389854	Argument	name		389121	0					
ANR	389855	Identifier	name		389121	0					
ANR	389856	Label	case BP_VAR_IS :	31065:5:981580:981594	389121	3	True				
ANR	389857	Identifier	BP_VAR_IS		389121	0					
ANR	389858	ExpressionStatement	retval = & EG ( uninitialized_zval )	31066:6:981602:981634	389121	4	True				
ANR	389859	AssignmentExpression	retval = & EG ( uninitialized_zval )		389121	0		=			
ANR	389860	Identifier	retval		389121	0					
ANR	389861	UnaryOperationExpression	& EG ( uninitialized_zval )		389121	1					
ANR	389862	UnaryOperator	&		389121	0					
ANR	389863	CallExpression	EG ( uninitialized_zval )		389121	1					
ANR	389864	Callee	EG		389121	0					
ANR	389865	Identifier	EG		389121	0					
ANR	389866	ArgumentList	uninitialized_zval		389121	1					
ANR	389867	Argument	uninitialized_zval		389121	0					
ANR	389868	Identifier	uninitialized_zval		389121	0					
ANR	389869	BreakStatement	break ;	31067:6:981642:981647	389121	5	True				
ANR	389870	Label	case BP_VAR_RW :	31068:5:981654:981668	389121	6	True				
ANR	389871	Identifier	BP_VAR_RW		389121	0					
ANR	389872	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	31069:6:981676:981737	389121	7	True				
ANR	389873	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		389121	0					
ANR	389874	Callee	zend_error		389121	0					
ANR	389875	Identifier	zend_error		389121	0					
ANR	389876	ArgumentList	E_NOTICE		389121	1					
ANR	389877	Argument	E_NOTICE		389121	0					
ANR	389878	Identifier	E_NOTICE		389121	0					
ANR	389879	Argument	"""Undefined variable: %s"""		389121	1					
ANR	389880	PrimaryExpression	"""Undefined variable: %s"""		389121	0					
ANR	389881	Argument	ZSTR_VAL ( name )		389121	2					
ANR	389882	CallExpression	ZSTR_VAL ( name )		389121	0					
ANR	389883	Callee	ZSTR_VAL		389121	0					
ANR	389884	Identifier	ZSTR_VAL		389121	0					
ANR	389885	ArgumentList	name		389121	1					
ANR	389886	Argument	name		389121	0					
ANR	389887	Identifier	name		389121	0					
ANR	389888	Label	case BP_VAR_W :	31071:5:981784:981797	389121	8	True				
ANR	389889	Identifier	BP_VAR_W		389121	0					
ANR	389890	ExpressionStatement	ZVAL_NULL ( retval )	31072:6:981805:981822	389121	9	True				
ANR	389891	CallExpression	ZVAL_NULL ( retval )		389121	0					
ANR	389892	Callee	ZVAL_NULL		389121	0					
ANR	389893	Identifier	ZVAL_NULL		389121	0					
ANR	389894	ArgumentList	retval		389121	1					
ANR	389895	Argument	retval		389121	0					
ANR	389896	Identifier	retval		389121	0					
ANR	389897	BreakStatement	break ;	31073:6:981830:981835	389121	10	True				
ANR	389898	Statement	EMPTY_SWITCH_DEFAULT_CASE	31074:5:981842:981866	389121	11	True				
ANR	389899	Statement	(	31074:30:981867:981867	389121	12	True				
ANR	389900	Statement	)	31074:31:981868:981868	389121	13	True				
ANR	389901	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		389121	3					
ANR	389902	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	31078:6:981891:981958	389121	0	True				
ANR	389903	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		389121	0		==			
ANR	389904	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		389121	0		&			
ANR	389905	PtrMemberAccess	opline -> extended_value		389121	0					
ANR	389906	Identifier	opline		389121	0					
ANR	389907	Identifier	extended_value		389121	1					
ANR	389908	Identifier	ZEND_FETCH_TYPE_MASK		389121	1					
ANR	389909	Identifier	ZEND_FETCH_STATIC		389121	1					
ANR	389910	CompoundStatement		120:76:3833:3833	389121	1					
ANR	389911	IfStatement	if ( Z_CONSTANT_P ( retval ) )		389121	0					
ANR	389912	Condition	Z_CONSTANT_P ( retval )	31079:7:981970:981989	389121	0	True				
ANR	389913	CallExpression	Z_CONSTANT_P ( retval )		389121	0					
ANR	389914	Callee	Z_CONSTANT_P		389121	0					
ANR	389915	Identifier	Z_CONSTANT_P		389121	0					
ANR	389916	ArgumentList	retval		389121	1					
ANR	389917	Argument	retval		389121	0					
ANR	389918	Identifier	retval		389121	0					
ANR	389919	CompoundStatement		121:29:3864:3864	389121	1					
ANR	389920	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		389121	0					
ANR	389921	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	31080:8:982002:982064	389121	0	True				
ANR	389922	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		389121	0					
ANR	389923	Callee	UNEXPECTED		389121	0					
ANR	389924	Identifier	UNEXPECTED		389121	0					
ANR	389925	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		389121	1					
ANR	389926	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		389121	0					
ANR	389927	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		389121	0		!=			
ANR	389928	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		389121	0					
ANR	389929	Callee	zval_update_constant_ex		389121	0					
ANR	389930	Identifier	zval_update_constant_ex		389121	0					
ANR	389931	ArgumentList	retval		389121	1					
ANR	389932	Argument	retval		389121	0					
ANR	389933	Identifier	retval		389121	0					
ANR	389934	Argument	1		389121	1					
ANR	389935	PrimaryExpression	1		389121	0					
ANR	389936	Argument	NULL		389121	2					
ANR	389937	Identifier	NULL		389121	0					
ANR	389938	Identifier	SUCCESS		389121	1					
ANR	389939	CompoundStatement		122:73:3939:3939	389121	1					
ANR	389940	ExpressionStatement	HANDLE_EXCEPTION ( )	31082:5:982075:982093	389121	0	True				
ANR	389941	CallExpression	HANDLE_EXCEPTION ( )		389121	0					
ANR	389942	Callee	HANDLE_EXCEPTION		389121	0					
ANR	389943	Identifier	HANDLE_EXCEPTION		389121	0					
ANR	389944	ArgumentList			389121	1					
ANR	389945	ElseStatement	else		389121	0					
ANR	389946	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		389121	0					
ANR	389947	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	31085:13:982119:982191	389121	0	True				
ANR	389948	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		389121	0		!=			
ANR	389949	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		389121	0		&			
ANR	389950	PtrMemberAccess	opline -> extended_value		389121	0					
ANR	389951	Identifier	opline		389121	0					
ANR	389952	Identifier	extended_value		389121	1					
ANR	389953	Identifier	ZEND_FETCH_TYPE_MASK		389121	1					
ANR	389954	Identifier	ZEND_FETCH_GLOBAL_LOCK		389121	1					
ANR	389955	CompoundStatement		127:88:4066:4066	389121	1					
ANR	389956	IfStatement	if ( IS_CV != IS_CONST )		389121	8					
ANR	389957	Condition	IS_CV != IS_CONST	31090:5:982210:982226	389121	0	True				
ANR	389958	EqualityExpression	IS_CV != IS_CONST		389121	0		!=			
ANR	389959	Identifier	IS_CV		389121	0					
ANR	389960	Identifier	IS_CONST		389121	1					
ANR	389961	CompoundStatement		132:24:4101:4101	389121	1					
ANR	389962	ExpressionStatement	zend_string_release ( name )	31091:2:982233:982258	389121	0	True				
ANR	389963	CallExpression	zend_string_release ( name )		389121	0					
ANR	389964	Callee	zend_string_release		389121	0					
ANR	389965	Identifier	zend_string_release		389121	0					
ANR	389966	ArgumentList	name		389121	1					
ANR	389967	Argument	name		389121	0					
ANR	389968	Identifier	name		389121	0					
ANR	389969	Label	fetch_var_return :	31094:0:982264:982280	389121	9	True				
ANR	389970	Identifier	fetch_var_return		389121	0					
ANR	389971	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	31095:1:982283:982310	389121	10	True				
ANR	389972	CallExpression	ZEND_ASSERT ( retval != NULL )		389121	0					
ANR	389973	Callee	ZEND_ASSERT		389121	0					
ANR	389974	Identifier	ZEND_ASSERT		389121	0					
ANR	389975	ArgumentList	retval != NULL		389121	1					
ANR	389976	Argument	retval != NULL		389121	0					
ANR	389977	EqualityExpression	retval != NULL		389121	0		!=			
ANR	389978	Identifier	retval		389121	0					
ANR	389979	Identifier	NULL		389121	1					
ANR	389980	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		389121	11					
ANR	389981	Condition	type == BP_VAR_R || type == BP_VAR_IS	31096:5:982317:982353	389121	0	True				
ANR	389982	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		389121	0		||			
ANR	389983	EqualityExpression	type == BP_VAR_R		389121	0		==			
ANR	389984	Identifier	type		389121	0					
ANR	389985	Identifier	BP_VAR_R		389121	1					
ANR	389986	EqualityExpression	type == BP_VAR_IS		389121	1		==			
ANR	389987	Identifier	type		389121	0					
ANR	389988	Identifier	BP_VAR_IS		389121	1					
ANR	389989	CompoundStatement		138:44:4228:4228	389121	1					
ANR	389990	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		389121	0					
ANR	389991	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	31097:30:982388:982433	389121	0	True				
ANR	389992	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		389121	0		&&			
ANR	389993	CallExpression	Z_ISREF_P ( retval )		389121	0					
ANR	389994	Callee	Z_ISREF_P		389121	0					
ANR	389995	Identifier	Z_ISREF_P		389121	0					
ANR	389996	ArgumentList	retval		389121	1					
ANR	389997	Argument	retval		389121	0					
ANR	389998	Identifier	retval		389121	0					
ANR	389999	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		389121	1		==			
ANR	390000	CallExpression	Z_REFCOUNT_P ( retval )		389121	0					
ANR	390001	Callee	Z_REFCOUNT_P		389121	0					
ANR	390002	Identifier	Z_REFCOUNT_P		389121	0					
ANR	390003	ArgumentList	retval		389121	1					
ANR	390004	Argument	retval		389121	0					
ANR	390005	Identifier	retval		389121	0					
ANR	390006	PrimaryExpression	1		389121	1					
ANR	390007	CompoundStatement		139:78:4308:4308	389121	1					
ANR	390008	ExpressionStatement	ZVAL_UNREF ( retval )	31098:3:982441:982459	389121	0	True				
ANR	390009	CallExpression	ZVAL_UNREF ( retval )		389121	0					
ANR	390010	Callee	ZVAL_UNREF		389121	0					
ANR	390011	Identifier	ZVAL_UNREF		389121	0					
ANR	390012	ArgumentList	retval		389121	1					
ANR	390013	Argument	retval		389121	0					
ANR	390014	Identifier	retval		389121	0					
ANR	390015	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	31100:2:982467:982512	389121	1	True				
ANR	390016	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		389121	0					
ANR	390017	Callee	ZVAL_COPY		389121	0					
ANR	390018	Identifier	ZVAL_COPY		389121	0					
ANR	390019	ArgumentList	EX_VAR ( opline -> result . var )		389121	1					
ANR	390020	Argument	EX_VAR ( opline -> result . var )		389121	0					
ANR	390021	CallExpression	EX_VAR ( opline -> result . var )		389121	0					
ANR	390022	Callee	EX_VAR		389121	0					
ANR	390023	Identifier	EX_VAR		389121	0					
ANR	390024	ArgumentList	opline -> result . var		389121	1					
ANR	390025	Argument	opline -> result . var		389121	0					
ANR	390026	MemberAccess	opline -> result . var		389121	0					
ANR	390027	PtrMemberAccess	opline -> result		389121	0					
ANR	390028	Identifier	opline		389121	0					
ANR	390029	Identifier	result		389121	1					
ANR	390030	Identifier	var		389121	1					
ANR	390031	Argument	retval		389121	1					
ANR	390032	Identifier	retval		389121	0					
ANR	390033	ElseStatement	else		389121	0					
ANR	390034	CompoundStatement		143:8:4394:4394	389121	0					
ANR	390035	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	31102:2:982526:982575	389121	0	True				
ANR	390036	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		389121	0					
ANR	390037	Callee	ZVAL_INDIRECT		389121	0					
ANR	390038	Identifier	ZVAL_INDIRECT		389121	0					
ANR	390039	ArgumentList	EX_VAR ( opline -> result . var )		389121	1					
ANR	390040	Argument	EX_VAR ( opline -> result . var )		389121	0					
ANR	390041	CallExpression	EX_VAR ( opline -> result . var )		389121	0					
ANR	390042	Callee	EX_VAR		389121	0					
ANR	390043	Identifier	EX_VAR		389121	0					
ANR	390044	ArgumentList	opline -> result . var		389121	1					
ANR	390045	Argument	opline -> result . var		389121	0					
ANR	390046	MemberAccess	opline -> result . var		389121	0					
ANR	390047	PtrMemberAccess	opline -> result		389121	0					
ANR	390048	Identifier	opline		389121	0					
ANR	390049	Identifier	result		389121	1					
ANR	390050	Identifier	var		389121	1					
ANR	390051	Argument	retval		389121	1					
ANR	390052	Identifier	retval		389121	0					
ANR	390053	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	31104:1:982581:982618	389121	12	True				
ANR	390054	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		389121	0					
ANR	390055	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		389121	0					
ANR	390056	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		389121	0					
ANR	390057	ArgumentList			389121	1					
ANR	390058	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		389121	1					
ANR	390059	Identifier	zend_fetch_var_address_helper_SPEC_CV_CONST		389121	2					
ANR	390060	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		389121	3					
ANR	390061	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	30958:89:978089:978124	389121	0	True				
ANR	390062	ParameterType	int type		389121	0					
ANR	390063	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		389121	1					
ANR	390064	CFGEntryNode	ENTRY		389121		True				
ANR	390065	CFGExitNode	EXIT		389121		True				
ANR	390066	Symbol	ZEND_FETCH_CLASS_DEFAULT		389121						
ANR	390067	Symbol	exception		389121						
ANR	390068	Symbol	zend_get_target_symbol_table		389121						
ANR	390069	Symbol	opline -> op2 . var		389121						
ANR	390070	Symbol	IS_CV		389121						
ANR	390071	Symbol	Z_CONSTANT_P		389121						
ANR	390072	Symbol	* ce		389121						
ANR	390073	Symbol	type		389121						
ANR	390074	Symbol	Z_REFCOUNT_P		389121						
ANR	390075	Symbol	execute_data		389121						
ANR	390076	Symbol	opline -> extended_value		389121						
ANR	390077	Symbol	opline -> result		389121						
ANR	390078	Symbol	zend_std_get_static_property		389121						
ANR	390079	Symbol	zend_hash_find		389121						
ANR	390080	Symbol	opline		389121						
ANR	390081	Symbol	Z_CE_P		389121						
ANR	390082	Symbol	target_symbol_table		389121						
ANR	390083	Symbol	IS_STRING		389121						
ANR	390084	Symbol	ce -> name		389121						
ANR	390085	Symbol	zend_hash_update		389121						
ANR	390086	Symbol	BP_VAR_IS		389121						
ANR	390087	Symbol	IS_UNDEF		389121						
ANR	390088	Symbol	BP_VAR_R		389121						
ANR	390089	Symbol	IS_CONST		389121						
ANR	390090	Symbol	EG		389121						
ANR	390091	Symbol	NULL		389121						
ANR	390092	Symbol	Z_CACHE_SLOT_P		389121						
ANR	390093	Symbol	EX_CONSTANT		389121						
ANR	390094	Symbol	_get_zval_ptr_cv_undef		389121						
ANR	390095	Symbol	CE_STATIC_MEMBERS		389121						
ANR	390096	Symbol	E_NOTICE		389121						
ANR	390097	Symbol	varname		389121						
ANR	390098	Symbol	retval		389121						
ANR	390099	Symbol	name		389121						
ANR	390100	Symbol	EX_VAR		389121						
ANR	390101	Symbol	zend_fetch_class_by_name		389121						
ANR	390102	Symbol	Z_STR_P		389121						
ANR	390103	Symbol	Z_ISREF_P		389121						
ANR	390104	Symbol	IS_INDIRECT		389121						
ANR	390105	Symbol	opline -> op1		389121						
ANR	390106	Symbol	CACHED_PTR		389121						
ANR	390107	Symbol	opline -> op2		389121						
ANR	390108	Symbol	Z_INDIRECT_P		389121						
ANR	390109	Symbol	& EG		389121						
ANR	390110	Symbol	UNEXPECTED		389121						
ANR	390111	Symbol	ZEND_FETCH_CLASS_EXCEPTION		389121						
ANR	390112	Symbol	ZEND_FETCH_STATIC		389121						
ANR	390113	Symbol	opline -> op1 . var		389121						
ANR	390114	Symbol	uninitialized_zval		389121						
ANR	390115	Symbol	ce		389121						
ANR	390116	Symbol	SUCCESS		389121						
ANR	390117	Symbol	zval_get_string		389121						
ANR	390118	Symbol	ZEND_FETCH_TYPE_MASK		389121						
ANR	390119	Symbol	zend_hash_add_new		389121						
ANR	390120	Symbol	Z_TYPE_P		389121						
ANR	390121	Symbol	CACHED_POLYMORPHIC_PTR		389121						
ANR	390122	Symbol	ZSTR_VAL		389121						
ANR	390123	Symbol	* opline		389121						
ANR	390124	Symbol	ZEND_FETCH_GLOBAL_LOCK		389121						
ANR	390125	Symbol	zval_update_constant_ex		389121						
ANR	390126	Symbol	EXPECTED		389121						
ANR	390127	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		389121						
ANR	390128	Symbol	opline -> result . var		389121						
ANR	390129	Symbol	IS_UNUSED		389121						
ANR	390130	DeclStmt									
ANR	390131	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390132	DeclStmt									
ANR	390133	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	390134	DeclStmt									
ANR	390135	Decl							zval	zval *	container
ANR	390136	DeclStmt									
ANR	390137	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	390138	DeclStmt									
ANR	390139	Decl							zval	zval *	container
ANR	390140	DeclStmt									
ANR	390141	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390142	DeclStmt									
ANR	390143	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390144	DeclStmt									
ANR	390145	Decl							zend_free_op	zend_free_op	free_op1
ANR	390146	DeclStmt									
ANR	390147	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	390148	DeclStmt									
ANR	390149	Decl							zval	zval *	container
ANR	390150	DeclStmt									
ANR	390151	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390152	DeclStmt									
ANR	390153	Decl							zval	zval *	offset
ANR	390154	DeclStmt									
ANR	390155	Decl							zend_object	zend_object *	zobj
ANR	390156	DeclStmt									
ANR	390157	Decl							zval	zval *	retval
ANR	390158	DeclStmt									
ANR	390159	Decl							uint32_t	uint32_t	prop_offset
ANR	390160	DeclStmt									
ANR	390161	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	390162	DeclStmt									
ANR	390163	Decl							zval	zval *	property
ANR	390164	DeclStmt									
ANR	390165	Decl							zval	zval *	container
ANR	390166	DeclStmt									
ANR	390167	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	390168	DeclStmt									
ANR	390169	Decl							zval	zval *	property
ANR	390170	DeclStmt									
ANR	390171	Decl							zval	zval *	container
ANR	390172	DeclStmt									
ANR	390173	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390174	DeclStmt									
ANR	390175	Decl							zval	zval *	offset
ANR	390176	DeclStmt									
ANR	390177	Decl							zend_object	zend_object *	zobj
ANR	390178	DeclStmt									
ANR	390179	Decl							zval	zval *	retval
ANR	390180	DeclStmt									
ANR	390181	Decl							uint32_t	uint32_t	prop_offset
ANR	390182	DeclStmt									
ANR	390183	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390184	DeclStmt									
ANR	390185	Decl							zend_free_op	zend_free_op	free_op1
ANR	390186	DeclStmt									
ANR	390187	Decl							zval	zval *	property
ANR	390188	DeclStmt									
ANR	390189	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	390190	DeclStmt									
ANR	390191	Decl							zval	zval *	container
ANR	390192	Decl							zval	zval *	property
ANR	390193	DeclStmt									
ANR	390194	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390195	DeclStmt									
ANR	390196	Decl							zval	zval *	value
ANR	390197	DeclStmt									
ANR	390198	Decl							zval	zval *	result
ANR	390199	DeclStmt									
ANR	390200	Decl							zval	zval *	retval
ANR	390201	DeclStmt									
ANR	390202	Decl							USE_OPLINE zval	USE_OPLINE zval *	object
ANR	390203	DeclStmt									
ANR	390204	Decl							zval	zval *	property_name
ANR	390205	DeclStmt									
ANR	390206	Decl							USE_OPLINE zval	USE_OPLINE zval *	object_ptr
ANR	390207	DeclStmt									
ANR	390208	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	390209	DeclStmt									
ANR	390210	Decl							zval	zval *	value
ANR	390211	DeclStmt									
ANR	390212	Decl							zval	zval *	variable_ptr
ANR	390213	DeclStmt									
ANR	390214	Decl							zval	zval *	dim
ANR	390215	DeclStmt									
ANR	390216	Decl							zval	zval *	property_name
ANR	390217	DeclStmt									
ANR	390218	Decl							zend_long	zend_long	offset
ANR	390219	DeclStmt									
ANR	390220	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	390221	DeclStmt									
ANR	390222	Decl							zval	zval *	variable_ptr
ANR	390223	DeclStmt									
ANR	390224	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	390225	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	390226	DeclStmt									
ANR	390227	Decl							zend_string	zend_string *	op1_str
ANR	390228	Decl							zend_string	zend_string *	op2_str
ANR	390229	Decl							zend_string	zend_string *	str
ANR	390230	DeclStmt									
ANR	390231	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	390232	DeclStmt									
ANR	390233	Decl							zval	zval *	object
ANR	390234	DeclStmt									
ANR	390235	Decl							zend_function	zend_function *	fbc
ANR	390236	DeclStmt									
ANR	390237	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	390238	DeclStmt									
ANR	390239	Decl							zend_object	zend_object *	obj
ANR	390240	DeclStmt									
ANR	390241	Decl							zend_execute_data	zend_execute_data *	call
ANR	390242	DeclStmt									
ANR	390243	Decl							uint32_t	uint32_t	call_info
ANR	390244	DeclStmt									
ANR	390245	Decl							zend_object	zend_object *	orig_obj
ANR	390246	DeclStmt									
ANR	390247	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	390248	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	390249	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	390250	DeclStmt									
ANR	390251	Decl							int	int	result
ANR	390252	DeclStmt									
ANR	390253	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	390254	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	390255	DeclStmt									
ANR	390256	Decl							zend_refcounted	zend_refcounted *	ref
ANR	390257	DeclStmt									
ANR	390258	Decl							zval	zval *	offset
ANR	390259	DeclStmt									
ANR	390260	Decl							zend_string	zend_string *	str
ANR	390261	DeclStmt									
ANR	390262	Decl							zend_ulong	zend_ulong	hval
ANR	390263	DeclStmt									
ANR	390264	Decl							zval	zval *	array
ANR	390265	DeclStmt									
ANR	390266	Decl							uint32_t	uint32_t	size
ANR	390267	DeclStmt									
ANR	390268	Decl							USE_OPLINE	USE_OPLINE	array
ANR	390269	DeclStmt									
ANR	390270	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	390271	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	390272	DeclStmt									
ANR	390273	Decl							HashTable	HashTable *	target_symbol_table
ANR	390274	DeclStmt									
ANR	390275	Decl							zval	zval *	var
ANR	390276	DeclStmt									
ANR	390277	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	390278	DeclStmt									
ANR	390279	Decl							zval	zval *	z
ANR	390280	DeclStmt									
ANR	390281	Decl							zend_class_entry	zend_class_entry *	ce
ANR	390282	DeclStmt									
ANR	390283	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390284	DeclStmt									
ANR	390285	Decl							zval	zval *	offset
ANR	390286	DeclStmt									
ANR	390287	Decl							zend_ulong	zend_ulong	hval
ANR	390288	DeclStmt									
ANR	390289	Decl							zend_string	zend_string *	key
ANR	390290	DeclStmt									
ANR	390291	Decl							HashTable	HashTable *	ht
ANR	390292	DeclStmt									
ANR	390293	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390294	DeclStmt									
ANR	390295	Decl							zval	zval *	offset
ANR	390296	DeclStmt									
ANR	390297	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	390298	DeclStmt									
ANR	390299	Decl							int	int	result
ANR	390300	DeclStmt									
ANR	390301	Decl							zval	zval	tmp
ANR	390302	Decl							zval	zval *	varname
ANR	390303	DeclStmt									
ANR	390304	Decl							zend_class_entry	zend_class_entry *	ce
ANR	390305	DeclStmt									
ANR	390306	Decl							HashTable	HashTable *	target_symbol_table
ANR	390307	DeclStmt									
ANR	390308	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390309	DeclStmt									
ANR	390310	Decl							int	int	result
ANR	390311	DeclStmt									
ANR	390312	Decl							zend_ulong	zend_ulong	hval
ANR	390313	DeclStmt									
ANR	390314	Decl							zval	zval *	offset
ANR	390315	DeclStmt									
ANR	390316	Decl							HashTable	HashTable *	ht
ANR	390317	DeclStmt									
ANR	390318	Decl							zval	zval *	value
ANR	390319	DeclStmt									
ANR	390320	Decl							zend_string	zend_string *	str
ANR	390321	DeclStmt									
ANR	390322	Decl							zend_long	zend_long	lval
ANR	390323	DeclStmt									
ANR	390324	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	390325	DeclStmt									
ANR	390326	Decl							int	int	result
ANR	390327	DeclStmt									
ANR	390328	Decl							zval	zval *	offset
ANR	390329	DeclStmt									
ANR	390330	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr
ANR	390331	DeclStmt									
ANR	390332	Decl							zend_bool	zend_bool	result
ANR	390333	DeclStmt									
ANR	390334	Decl							zend_class_entry	zend_class_entry *	ce
ANR	390335	DeclStmt									
ANR	390336	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	390337	DeclStmt									
ANR	390338	Decl							zval	zval *	value
ANR	390339	DeclStmt									
ANR	390340	Decl							zval	zval *	value_ptr
ANR	390341	DeclStmt									
ANR	390342	Decl							zval	zval *	value
ANR	390343	DeclStmt									
ANR	390344	Decl							zval	zval *	key
ANR	390345	DeclStmt									
ANR	390346	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	390347	DeclStmt									
ANR	390348	Decl							zval	zval *	value
ANR	390349	DeclStmt									
ANR	390350	Decl							zval	zval *	variable_ptr
ANR	390351	DeclStmt									
ANR	390352	Decl							uint32_t	uint32_t	idx
ANR	390353	DeclStmt									
ANR	390354	Decl							ZEND_VM_REPEATABLE_OPCODE	ZEND_VM_REPEATABLE_OPCODE	varname
ANR	390355	DeclStmt									
ANR	390356	Decl							Bucket	Bucket *	p
ANR	390357	DeclStmt									
ANR	390358	Decl							zend_reference	zend_reference *	ref
ANR	390359	DeclStmt									
ANR	390360	Decl							uint32_t	uint32_t	refcnt
ANR	390361	DeclStmt									
ANR	390362	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	390363	DeclStmt									
ANR	390364	Decl							zval	zval *	op1
ANR	390365	Decl							zval	zval *	op2
ANR	390366	DeclStmt									
ANR	390367	Decl							int	int	result
ANR	390368	DeclStmt									
ANR	390369	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	390370	DeclStmt									
ANR	390371	Decl							zval	zval *	op1
ANR	390372	Decl							zval	zval *	op2
ANR	390373	DeclStmt									
ANR	390374	Decl							int	int	result
ANR	390375	DeclStmt									
ANR	390376	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	390377	DeclStmt									
ANR	390378	Decl							zval	zval *	value
ANR	390379	DeclStmt									
ANR	390380	Decl							zval	zval *	variable_ptr
ANR	390381	DeclStmt									
ANR	390382	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	390383	DeclStmt									
ANR	390384	Decl							zval	zval *	value
ANR	390385	DeclStmt									
ANR	390386	Decl							zval	zval *	value_ptr
ANR	390387	DeclStmt									
ANR	390388	Decl							zval	zval *	value
ANR	390389	DeclStmt									
ANR	390390	Decl							zend_free_op	zend_free_op	free_op2
ANR	390391	DeclStmt									
ANR	390392	Decl							zval	zval *	key
ANR	390393	DeclStmt									
ANR	390394	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	390395	DeclStmt									
ANR	390396	Decl							zval	zval *	op1
ANR	390397	Decl							zval	zval *	op2
ANR	390398	DeclStmt									
ANR	390399	Decl							int	int	result
ANR	390400	DeclStmt									
ANR	390401	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	390402	DeclStmt									
ANR	390403	Decl							zval	zval *	op1
ANR	390404	Decl							zval	zval *	op2
ANR	390405	DeclStmt									
ANR	390406	Decl							int	int	result
ANR	390407	Function	zend_fetch_var_address_helper_SPEC_CV_VAR	33169:0:1045339:1049953							
ANR	390408	FunctionDef	zend_fetch_var_address_helper_SPEC_CV_VAR (int type ZEND_OPCODE_HANDLER_ARGS_DC)		390407	0					
ANR	390409	CompoundStatement		33170:0:1045464:1049953	390407	0					
ANR	390410	IdentifierDeclStatement	USE_OPLINE zval * varname ;	33171:1:1045467:1045493	390407	0	True				
ANR	390411	IdentifierDecl	* varname		390407	0					
ANR	390412	IdentifierDeclType	USE_OPLINE zval *		390407	0					
ANR	390413	Identifier	varname		390407	1					
ANR	390414	IdentifierDeclStatement	zval * retval ;	33174:1:1045496:1045508	390407	1	True				
ANR	390415	IdentifierDecl	* retval		390407	0					
ANR	390416	IdentifierDeclType	zval *		390407	0					
ANR	390417	Identifier	retval		390407	1					
ANR	390418	IdentifierDeclStatement	zend_string * name ;	33175:1:1045511:1045528	390407	2	True				
ANR	390419	IdentifierDecl	* name		390407	0					
ANR	390420	IdentifierDeclType	zend_string *		390407	0					
ANR	390421	Identifier	name		390407	1					
ANR	390422	IdentifierDeclStatement	HashTable * target_symbol_table ;	33176:1:1045531:1045561	390407	3	True				
ANR	390423	IdentifierDecl	* target_symbol_table		390407	0					
ANR	390424	IdentifierDeclType	HashTable *		390407	0					
ANR	390425	Identifier	target_symbol_table		390407	1					
ANR	390426	ExpressionStatement	SAVE_OPLINE ( )	33178:1:1045565:1045578	390407	4	True				
ANR	390427	CallExpression	SAVE_OPLINE ( )		390407	0					
ANR	390428	Callee	SAVE_OPLINE		390407	0					
ANR	390429	Identifier	SAVE_OPLINE		390407	0					
ANR	390430	ArgumentList			390407	1					
ANR	390431	ExpressionStatement	"varname = _get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"	33179:1:1045581:1045644	390407	5	True				
ANR	390432	AssignmentExpression	"varname = _get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"		390407	0		=			
ANR	390433	Identifier	varname		390407	0					
ANR	390434	CallExpression	"_get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"		390407	1					
ANR	390435	Callee	_get_zval_ptr_cv_undef		390407	0					
ANR	390436	Identifier	_get_zval_ptr_cv_undef		390407	0					
ANR	390437	ArgumentList	execute_data		390407	1					
ANR	390438	Argument	execute_data		390407	0					
ANR	390439	Identifier	execute_data		390407	0					
ANR	390440	Argument	opline -> op1 . var		390407	1					
ANR	390441	MemberAccess	opline -> op1 . var		390407	0					
ANR	390442	PtrMemberAccess	opline -> op1		390407	0					
ANR	390443	Identifier	opline		390407	0					
ANR	390444	Identifier	op1		390407	1					
ANR	390445	Identifier	var		390407	1					
ANR	390446	IfStatement	if ( IS_CV == IS_CONST )		390407	6					
ANR	390447	Condition	IS_CV == IS_CONST	33181:6:1045653:1045669	390407	0	True				
ANR	390448	EqualityExpression	IS_CV == IS_CONST		390407	0		==			
ANR	390449	Identifier	IS_CV		390407	0					
ANR	390450	Identifier	IS_CONST		390407	1					
ANR	390451	CompoundStatement		12:25:207:207	390407	1					
ANR	390452	ExpressionStatement	name = Z_STR_P ( varname )	33182:2:1045676:1045699	390407	0	True				
ANR	390453	AssignmentExpression	name = Z_STR_P ( varname )		390407	0		=			
ANR	390454	Identifier	name		390407	0					
ANR	390455	CallExpression	Z_STR_P ( varname )		390407	1					
ANR	390456	Callee	Z_STR_P		390407	0					
ANR	390457	Identifier	Z_STR_P		390407	0					
ANR	390458	ArgumentList	varname		390407	1					
ANR	390459	Argument	varname		390407	0					
ANR	390460	Identifier	varname		390407	0					
ANR	390461	ElseStatement	else		390407	0					
ANR	390462	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		390407	0					
ANR	390463	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	33183:12:1045713:1045752	390407	0	True				
ANR	390464	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		390407	0					
ANR	390465	Callee	EXPECTED		390407	0					
ANR	390466	Identifier	EXPECTED		390407	0					
ANR	390467	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		390407	1					
ANR	390468	Argument	Z_TYPE_P ( varname ) == IS_STRING		390407	0					
ANR	390469	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		390407	0		==			
ANR	390470	CallExpression	Z_TYPE_P ( varname )		390407	0					
ANR	390471	Callee	Z_TYPE_P		390407	0					
ANR	390472	Identifier	Z_TYPE_P		390407	0					
ANR	390473	ArgumentList	varname		390407	1					
ANR	390474	Argument	varname		390407	0					
ANR	390475	Identifier	varname		390407	0					
ANR	390476	Identifier	IS_STRING		390407	1					
ANR	390477	CompoundStatement		14:54:290:290	390407	1					
ANR	390478	ExpressionStatement	name = Z_STR_P ( varname )	33184:2:1045759:1045782	390407	0	True				
ANR	390479	AssignmentExpression	name = Z_STR_P ( varname )		390407	0		=			
ANR	390480	Identifier	name		390407	0					
ANR	390481	CallExpression	Z_STR_P ( varname )		390407	1					
ANR	390482	Callee	Z_STR_P		390407	0					
ANR	390483	Identifier	Z_STR_P		390407	0					
ANR	390484	ArgumentList	varname		390407	1					
ANR	390485	Argument	varname		390407	0					
ANR	390486	Identifier	varname		390407	0					
ANR	390487	ExpressionStatement	zend_string_addref ( name )	33185:2:1045786:1045810	390407	1	True				
ANR	390488	CallExpression	zend_string_addref ( name )		390407	0					
ANR	390489	Callee	zend_string_addref		390407	0					
ANR	390490	Identifier	zend_string_addref		390407	0					
ANR	390491	ArgumentList	name		390407	1					
ANR	390492	Argument	name		390407	0					
ANR	390493	Identifier	name		390407	0					
ANR	390494	ElseStatement	else		390407	0					
ANR	390495	CompoundStatement		17:8:355:355	390407	0					
ANR	390496	IfStatement	if ( IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		390407	0					
ANR	390497	Condition	IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	33187:6:1045828:1045886	390407	0	True				
ANR	390498	AndExpression	IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		390407	0		&&			
ANR	390499	EqualityExpression	IS_CV == IS_CV		390407	0		==			
ANR	390500	Identifier	IS_CV		390407	0					
ANR	390501	Identifier	IS_CV		390407	1					
ANR	390502	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		390407	1					
ANR	390503	Callee	UNEXPECTED		390407	0					
ANR	390504	Identifier	UNEXPECTED		390407	0					
ANR	390505	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		390407	1					
ANR	390506	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		390407	0					
ANR	390507	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		390407	0		==			
ANR	390508	CallExpression	Z_TYPE_P ( varname )		390407	0					
ANR	390509	Callee	Z_TYPE_P		390407	0					
ANR	390510	Identifier	Z_TYPE_P		390407	0					
ANR	390511	ArgumentList	varname		390407	1					
ANR	390512	Argument	varname		390407	0					
ANR	390513	Identifier	varname		390407	0					
ANR	390514	Identifier	IS_UNDEF		390407	1					
ANR	390515	CompoundStatement		18:67:424:424	390407	1					
ANR	390516	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	33188:3:1045894:1045929	390407	0	True				
ANR	390517	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		390407	0					
ANR	390518	Callee	GET_OP1_UNDEF_CV		390407	0					
ANR	390519	Identifier	GET_OP1_UNDEF_CV		390407	0					
ANR	390520	ArgumentList	varname		390407	1					
ANR	390521	Argument	varname		390407	0					
ANR	390522	Identifier	varname		390407	0					
ANR	390523	Argument	BP_VAR_R		390407	1					
ANR	390524	Identifier	BP_VAR_R		390407	0					
ANR	390525	ExpressionStatement	name = zval_get_string ( varname )	33190:2:1045937:1045968	390407	1	True				
ANR	390526	AssignmentExpression	name = zval_get_string ( varname )		390407	0		=			
ANR	390527	Identifier	name		390407	0					
ANR	390528	CallExpression	zval_get_string ( varname )		390407	1					
ANR	390529	Callee	zval_get_string		390407	0					
ANR	390530	Identifier	zval_get_string		390407	0					
ANR	390531	ArgumentList	varname		390407	1					
ANR	390532	Argument	varname		390407	0					
ANR	390533	Identifier	varname		390407	0					
ANR	390534	IfStatement	if ( IS_VAR != IS_UNUSED )		390407	7					
ANR	390535	Condition	IS_VAR != IS_UNUSED	33193:5:1045979:1045997	390407	0	True				
ANR	390536	EqualityExpression	IS_VAR != IS_UNUSED		390407	0		!=			
ANR	390537	Identifier	IS_VAR		390407	0					
ANR	390538	Identifier	IS_UNUSED		390407	1					
ANR	390539	CompoundStatement		25:2:539:559	390407	1					
ANR	390540	IdentifierDeclStatement	zend_class_entry * ce ;	33194:2:1046004:1046024	390407	0	True				
ANR	390541	IdentifierDecl	* ce		390407	0					
ANR	390542	IdentifierDeclType	zend_class_entry *		390407	0					
ANR	390543	Identifier	ce		390407	1					
ANR	390544	IfStatement	if ( IS_VAR == IS_CONST )		390407	1					
ANR	390545	Condition	IS_VAR == IS_CONST	33196:6:1046033:1046050	390407	0	True				
ANR	390546	EqualityExpression	IS_VAR == IS_CONST		390407	0		==			
ANR	390547	Identifier	IS_VAR		390407	0					
ANR	390548	Identifier	IS_CONST		390407	1					
ANR	390549	CompoundStatement		27:26:588:588	390407	1					
ANR	390550	IfStatement	if ( IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		390407	0					
ANR	390551	Condition	IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	33197:7:1046062:1046159	390407	0	True				
ANR	390552	AndExpression	IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		390407	0		&&			
ANR	390553	EqualityExpression	IS_CV == IS_CONST		390407	0		==			
ANR	390554	Identifier	IS_CV		390407	0					
ANR	390555	Identifier	IS_CONST		390407	1					
ANR	390556	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		390407	1					
ANR	390557	Callee	EXPECTED		390407	0					
ANR	390558	Identifier	EXPECTED		390407	0					
ANR	390559	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		390407	1					
ANR	390560	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		390407	0					
ANR	390561	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		390407	0		!=			
ANR	390562	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		390407	0		=			
ANR	390563	Identifier	ce		390407	0					
ANR	390564	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		390407	1					
ANR	390565	Callee	CACHED_PTR		390407	0					
ANR	390566	Identifier	CACHED_PTR		390407	0					
ANR	390567	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	1					
ANR	390568	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	0					
ANR	390569	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	0					
ANR	390570	Callee	Z_CACHE_SLOT_P		390407	0					
ANR	390571	Identifier	Z_CACHE_SLOT_P		390407	0					
ANR	390572	ArgumentList	EX_CONSTANT ( opline -> op1 )		390407	1					
ANR	390573	Argument	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390574	CallExpression	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390575	Callee	EX_CONSTANT		390407	0					
ANR	390576	Identifier	EX_CONSTANT		390407	0					
ANR	390577	ArgumentList	opline -> op1		390407	1					
ANR	390578	Argument	opline -> op1		390407	0					
ANR	390579	PtrMemberAccess	opline -> op1		390407	0					
ANR	390580	Identifier	opline		390407	0					
ANR	390581	Identifier	op1		390407	1					
ANR	390582	Identifier	NULL		390407	1					
ANR	390583	CompoundStatement		28:107:697:697	390407	1					
ANR	390584	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	33198:4:1046168:1046245	390407	0	True				
ANR	390585	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		390407	0		=			
ANR	390586	Identifier	retval		390407	0					
ANR	390587	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		390407	1					
ANR	390588	Callee	CACHED_PTR		390407	0					
ANR	390589	Identifier	CACHED_PTR		390407	0					
ANR	390590	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		390407	1					
ANR	390591	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		390407	0					
ANR	390592	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		390407	0		+			
ANR	390593	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	0					
ANR	390594	Callee	Z_CACHE_SLOT_P		390407	0					
ANR	390595	Identifier	Z_CACHE_SLOT_P		390407	0					
ANR	390596	ArgumentList	EX_CONSTANT ( opline -> op1 )		390407	1					
ANR	390597	Argument	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390598	CallExpression	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390599	Callee	EX_CONSTANT		390407	0					
ANR	390600	Identifier	EX_CONSTANT		390407	0					
ANR	390601	ArgumentList	opline -> op1		390407	1					
ANR	390602	Argument	opline -> op1		390407	0					
ANR	390603	PtrMemberAccess	opline -> op1		390407	0					
ANR	390604	Identifier	opline		390407	0					
ANR	390605	Identifier	op1		390407	1					
ANR	390606	SizeofExpression	sizeof ( void * )		390407	1					
ANR	390607	Sizeof	sizeof		390407	0					
ANR	390608	SizeofOperand	void *		390407	1					
ANR	390609	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		390407	1					
ANR	390610	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	33201:8:1046307:1046347	390407	0	True				
ANR	390611	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		390407	0					
ANR	390612	Callee	UNEXPECTED		390407	0					
ANR	390613	Identifier	UNEXPECTED		390407	0					
ANR	390614	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		390407	1					
ANR	390615	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		390407	0					
ANR	390616	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		390407	0		==			
ANR	390617	CallExpression	CE_STATIC_MEMBERS ( ce )		390407	0					
ANR	390618	Callee	CE_STATIC_MEMBERS		390407	0					
ANR	390619	Identifier	CE_STATIC_MEMBERS		390407	0					
ANR	390620	ArgumentList	ce		390407	1					
ANR	390621	Argument	ce		390407	0					
ANR	390622	Identifier	ce		390407	0					
ANR	390623	Identifier	NULL		390407	1					
ANR	390624	CompoundStatement		32:51:885:885	390407	1					
ANR	390625	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	33202:5:1046357:1046464	390407	0	True				
ANR	390626	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		390407	0					
ANR	390627	Callee	zend_throw_error		390407	0					
ANR	390628	Identifier	zend_throw_error		390407	0					
ANR	390629	ArgumentList	NULL		390407	1					
ANR	390630	Argument	NULL		390407	0					
ANR	390631	Identifier	NULL		390407	0					
ANR	390632	Argument	"""Access to undeclared static property: %s::$%s"""		390407	1					
ANR	390633	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		390407	0					
ANR	390634	Argument	ZSTR_VAL ( ce -> name )		390407	2					
ANR	390635	CallExpression	ZSTR_VAL ( ce -> name )		390407	0					
ANR	390636	Callee	ZSTR_VAL		390407	0					
ANR	390637	Identifier	ZSTR_VAL		390407	0					
ANR	390638	ArgumentList	ce -> name		390407	1					
ANR	390639	Argument	ce -> name		390407	0					
ANR	390640	PtrMemberAccess	ce -> name		390407	0					
ANR	390641	Identifier	ce		390407	0					
ANR	390642	Identifier	name		390407	1					
ANR	390643	Argument	ZSTR_VAL ( name )		390407	3					
ANR	390644	CallExpression	ZSTR_VAL ( name )		390407	0					
ANR	390645	Callee	ZSTR_VAL		390407	0					
ANR	390646	Identifier	ZSTR_VAL		390407	0					
ANR	390647	ArgumentList	name		390407	1					
ANR	390648	Argument	name		390407	0					
ANR	390649	Identifier	name		390407	0					
ANR	390650	ExpressionStatement	HANDLE_EXCEPTION ( )	33204:5:1046472:1046490	390407	1	True				
ANR	390651	CallExpression	HANDLE_EXCEPTION ( )		390407	0					
ANR	390652	Callee	HANDLE_EXCEPTION		390407	0					
ANR	390653	Identifier	HANDLE_EXCEPTION		390407	0					
ANR	390654	ArgumentList			390407	1					
ANR	390655	GotoStatement	goto fetch_var_return ;	33207:4:1046503:1046524	390407	2	True				
ANR	390656	Identifier	fetch_var_return		390407	0					
ANR	390657	ElseStatement	else		390407	0					
ANR	390658	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		390407	0					
ANR	390659	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	33208:14:1046540:1046618	390407	0	True				
ANR	390660	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		390407	0					
ANR	390661	Callee	UNEXPECTED		390407	0					
ANR	390662	Identifier	UNEXPECTED		390407	0					
ANR	390663	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		390407	1					
ANR	390664	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		390407	0					
ANR	390665	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		390407	0		==			
ANR	390666	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		390407	0		=			
ANR	390667	Identifier	ce		390407	0					
ANR	390668	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		390407	1					
ANR	390669	Callee	CACHED_PTR		390407	0					
ANR	390670	Identifier	CACHED_PTR		390407	0					
ANR	390671	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		390407	1					
ANR	390672	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		390407	0					
ANR	390673	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		390407	0					
ANR	390674	Callee	Z_CACHE_SLOT_P		390407	0					
ANR	390675	Identifier	Z_CACHE_SLOT_P		390407	0					
ANR	390676	ArgumentList	EX_CONSTANT ( opline -> op2 )		390407	1					
ANR	390677	Argument	EX_CONSTANT ( opline -> op2 )		390407	0					
ANR	390678	CallExpression	EX_CONSTANT ( opline -> op2 )		390407	0					
ANR	390679	Callee	EX_CONSTANT		390407	0					
ANR	390680	Identifier	EX_CONSTANT		390407	0					
ANR	390681	ArgumentList	opline -> op2		390407	1					
ANR	390682	Argument	opline -> op2		390407	0					
ANR	390683	PtrMemberAccess	opline -> op2		390407	0					
ANR	390684	Identifier	opline		390407	0					
ANR	390685	Identifier	op2		390407	1					
ANR	390686	Identifier	NULL		390407	1					
ANR	390687	CompoundStatement		39:95:1156:1156	390407	1					
ANR	390688	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	33209:4:1046627:1046776	390407	0	True				
ANR	390689	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		390407	0		=			
ANR	390690	Identifier	ce		390407	0					
ANR	390691	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		390407	1					
ANR	390692	Callee	zend_fetch_class_by_name		390407	0					
ANR	390693	Identifier	zend_fetch_class_by_name		390407	0					
ANR	390694	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		390407	1					
ANR	390695	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		390407	0					
ANR	390696	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		390407	0					
ANR	390697	Callee	Z_STR_P		390407	0					
ANR	390698	Identifier	Z_STR_P		390407	0					
ANR	390699	ArgumentList	EX_CONSTANT ( opline -> op2 )		390407	1					
ANR	390700	Argument	EX_CONSTANT ( opline -> op2 )		390407	0					
ANR	390701	CallExpression	EX_CONSTANT ( opline -> op2 )		390407	0					
ANR	390702	Callee	EX_CONSTANT		390407	0					
ANR	390703	Identifier	EX_CONSTANT		390407	0					
ANR	390704	ArgumentList	opline -> op2		390407	1					
ANR	390705	Argument	opline -> op2		390407	0					
ANR	390706	PtrMemberAccess	opline -> op2		390407	0					
ANR	390707	Identifier	opline		390407	0					
ANR	390708	Identifier	op2		390407	1					
ANR	390709	Argument	EX_CONSTANT ( opline -> op2 ) + 1		390407	1					
ANR	390710	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		390407	0		+			
ANR	390711	CallExpression	EX_CONSTANT ( opline -> op2 )		390407	0					
ANR	390712	Callee	EX_CONSTANT		390407	0					
ANR	390713	Identifier	EX_CONSTANT		390407	0					
ANR	390714	ArgumentList	opline -> op2		390407	1					
ANR	390715	Argument	opline -> op2		390407	0					
ANR	390716	PtrMemberAccess	opline -> op2		390407	0					
ANR	390717	Identifier	opline		390407	0					
ANR	390718	Identifier	op2		390407	1					
ANR	390719	PrimaryExpression	1		390407	1					
ANR	390720	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		390407	2					
ANR	390721	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		390407	0		|			
ANR	390722	Identifier	ZEND_FETCH_CLASS_DEFAULT		390407	0					
ANR	390723	Identifier	ZEND_FETCH_CLASS_EXCEPTION		390407	1					
ANR	390724	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		390407	1					
ANR	390725	Condition	UNEXPECTED ( ce == NULL )	33210:8:1046786:1046807	390407	0	True				
ANR	390726	CallExpression	UNEXPECTED ( ce == NULL )		390407	0					
ANR	390727	Callee	UNEXPECTED		390407	0					
ANR	390728	Identifier	UNEXPECTED		390407	0					
ANR	390729	ArgumentList	ce == NULL		390407	1					
ANR	390730	Argument	ce == NULL		390407	0					
ANR	390731	EqualityExpression	ce == NULL		390407	0		==			
ANR	390732	Identifier	ce		390407	0					
ANR	390733	Identifier	NULL		390407	1					
ANR	390734	CompoundStatement		41:32:1345:1345	390407	1					
ANR	390735	IfStatement	if ( IS_CV != IS_CONST )		390407	0					
ANR	390736	Condition	IS_CV != IS_CONST	33211:9:1046821:1046837	390407	0	True				
ANR	390737	EqualityExpression	IS_CV != IS_CONST		390407	0		!=			
ANR	390738	Identifier	IS_CV		390407	0					
ANR	390739	Identifier	IS_CONST		390407	1					
ANR	390740	CompoundStatement		42:28:1375:1375	390407	1					
ANR	390741	ExpressionStatement	zend_string_release ( name )	33212:6:1046848:1046873	390407	0	True				
ANR	390742	CallExpression	zend_string_release ( name )		390407	0					
ANR	390743	Callee	zend_string_release		390407	0					
ANR	390744	Identifier	zend_string_release		390407	0					
ANR	390745	ArgumentList	name		390407	1					
ANR	390746	Argument	name		390407	0					
ANR	390747	Identifier	name		390407	0					
ANR	390748	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	33215:5:1046888:1046925	390407	1	True				
ANR	390749	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		390407	0					
ANR	390750	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		390407	0					
ANR	390751	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		390407	0					
ANR	390752	ArgumentList			390407	1					
ANR	390753	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	33217:4:1046937:1046992	390407	2	True				
ANR	390754	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		390407	0					
ANR	390755	Callee	CACHE_PTR		390407	0					
ANR	390756	Identifier	CACHE_PTR		390407	0					
ANR	390757	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		390407	1					
ANR	390758	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		390407	0					
ANR	390759	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		390407	0					
ANR	390760	Callee	Z_CACHE_SLOT_P		390407	0					
ANR	390761	Identifier	Z_CACHE_SLOT_P		390407	0					
ANR	390762	ArgumentList	EX_CONSTANT ( opline -> op2 )		390407	1					
ANR	390763	Argument	EX_CONSTANT ( opline -> op2 )		390407	0					
ANR	390764	CallExpression	EX_CONSTANT ( opline -> op2 )		390407	0					
ANR	390765	Callee	EX_CONSTANT		390407	0					
ANR	390766	Identifier	EX_CONSTANT		390407	0					
ANR	390767	ArgumentList	opline -> op2		390407	1					
ANR	390768	Argument	opline -> op2		390407	0					
ANR	390769	PtrMemberAccess	opline -> op2		390407	0					
ANR	390770	Identifier	opline		390407	0					
ANR	390771	Identifier	op2		390407	1					
ANR	390772	Argument	ce		390407	1					
ANR	390773	Identifier	ce		390407	0					
ANR	390774	ElseStatement	else		390407	0					
ANR	390775	CompoundStatement		50:9:1543:1543	390407	0					
ANR	390776	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	33220:3:1047013:1047049	390407	0	True				
ANR	390777	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		390407	0		=			
ANR	390778	Identifier	ce		390407	0					
ANR	390779	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		390407	1					
ANR	390780	Callee	Z_CE_P		390407	0					
ANR	390781	Identifier	Z_CE_P		390407	0					
ANR	390782	ArgumentList	EX_VAR ( opline -> op2 . var )		390407	1					
ANR	390783	Argument	EX_VAR ( opline -> op2 . var )		390407	0					
ANR	390784	CallExpression	EX_VAR ( opline -> op2 . var )		390407	0					
ANR	390785	Callee	EX_VAR		390407	0					
ANR	390786	Identifier	EX_VAR		390407	0					
ANR	390787	ArgumentList	opline -> op2 . var		390407	1					
ANR	390788	Argument	opline -> op2 . var		390407	0					
ANR	390789	MemberAccess	opline -> op2 . var		390407	0					
ANR	390790	PtrMemberAccess	opline -> op2		390407	0					
ANR	390791	Identifier	opline		390407	0					
ANR	390792	Identifier	op2		390407	1					
ANR	390793	Identifier	var		390407	1					
ANR	390794	IfStatement	"if ( IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		390407	1					
ANR	390795	Condition	"IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	33221:7:1047058:1047172	390407	0	True				
ANR	390796	AndExpression	"IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		390407	0		&&			
ANR	390797	EqualityExpression	IS_CV == IS_CONST		390407	0		==			
ANR	390798	Identifier	IS_CV		390407	0					
ANR	390799	Identifier	IS_CONST		390407	1					
ANR	390800	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		390407	1		!=			
ANR	390801	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		390407	0		=			
ANR	390802	Identifier	retval		390407	0					
ANR	390803	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		390407	1					
ANR	390804	Callee	CACHED_POLYMORPHIC_PTR		390407	0					
ANR	390805	Identifier	CACHED_POLYMORPHIC_PTR		390407	0					
ANR	390806	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	1					
ANR	390807	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	0					
ANR	390808	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	0					
ANR	390809	Callee	Z_CACHE_SLOT_P		390407	0					
ANR	390810	Identifier	Z_CACHE_SLOT_P		390407	0					
ANR	390811	ArgumentList	EX_CONSTANT ( opline -> op1 )		390407	1					
ANR	390812	Argument	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390813	CallExpression	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390814	Callee	EX_CONSTANT		390407	0					
ANR	390815	Identifier	EX_CONSTANT		390407	0					
ANR	390816	ArgumentList	opline -> op1		390407	1					
ANR	390817	Argument	opline -> op1		390407	0					
ANR	390818	PtrMemberAccess	opline -> op1		390407	0					
ANR	390819	Identifier	opline		390407	0					
ANR	390820	Identifier	op1		390407	1					
ANR	390821	Argument	ce		390407	1					
ANR	390822	Identifier	ce		390407	0					
ANR	390823	Identifier	NULL		390407	1					
ANR	390824	CompoundStatement		53:96:1710:1710	390407	1					
ANR	390825	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		390407	0					
ANR	390826	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	33225:8:1047237:1047277	390407	0	True				
ANR	390827	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		390407	0					
ANR	390828	Callee	UNEXPECTED		390407	0					
ANR	390829	Identifier	UNEXPECTED		390407	0					
ANR	390830	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		390407	1					
ANR	390831	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		390407	0					
ANR	390832	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		390407	0		==			
ANR	390833	CallExpression	CE_STATIC_MEMBERS ( ce )		390407	0					
ANR	390834	Callee	CE_STATIC_MEMBERS		390407	0					
ANR	390835	Identifier	CE_STATIC_MEMBERS		390407	0					
ANR	390836	ArgumentList	ce		390407	1					
ANR	390837	Argument	ce		390407	0					
ANR	390838	Identifier	ce		390407	0					
ANR	390839	Identifier	NULL		390407	1					
ANR	390840	CompoundStatement		56:51:1815:1815	390407	1					
ANR	390841	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	33226:5:1047287:1047394	390407	0	True				
ANR	390842	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		390407	0					
ANR	390843	Callee	zend_throw_error		390407	0					
ANR	390844	Identifier	zend_throw_error		390407	0					
ANR	390845	ArgumentList	NULL		390407	1					
ANR	390846	Argument	NULL		390407	0					
ANR	390847	Identifier	NULL		390407	0					
ANR	390848	Argument	"""Access to undeclared static property: %s::$%s"""		390407	1					
ANR	390849	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		390407	0					
ANR	390850	Argument	ZSTR_VAL ( ce -> name )		390407	2					
ANR	390851	CallExpression	ZSTR_VAL ( ce -> name )		390407	0					
ANR	390852	Callee	ZSTR_VAL		390407	0					
ANR	390853	Identifier	ZSTR_VAL		390407	0					
ANR	390854	ArgumentList	ce -> name		390407	1					
ANR	390855	Argument	ce -> name		390407	0					
ANR	390856	PtrMemberAccess	ce -> name		390407	0					
ANR	390857	Identifier	ce		390407	0					
ANR	390858	Identifier	name		390407	1					
ANR	390859	Argument	ZSTR_VAL ( name )		390407	3					
ANR	390860	CallExpression	ZSTR_VAL ( name )		390407	0					
ANR	390861	Callee	ZSTR_VAL		390407	0					
ANR	390862	Identifier	ZSTR_VAL		390407	0					
ANR	390863	ArgumentList	name		390407	1					
ANR	390864	Argument	name		390407	0					
ANR	390865	Identifier	name		390407	0					
ANR	390866	ExpressionStatement	HANDLE_EXCEPTION ( )	33228:5:1047402:1047420	390407	1	True				
ANR	390867	CallExpression	HANDLE_EXCEPTION ( )		390407	0					
ANR	390868	Callee	HANDLE_EXCEPTION		390407	0					
ANR	390869	Identifier	HANDLE_EXCEPTION		390407	0					
ANR	390870	ArgumentList			390407	1					
ANR	390871	GotoStatement	goto fetch_var_return ;	33231:4:1047433:1047454	390407	1	True				
ANR	390872	Identifier	fetch_var_return		390407	0					
ANR	390873	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	33234:2:1047467:1047517	390407	2	True				
ANR	390874	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		390407	0		=			
ANR	390875	Identifier	retval		390407	0					
ANR	390876	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		390407	1					
ANR	390877	Callee	zend_std_get_static_property		390407	0					
ANR	390878	Identifier	zend_std_get_static_property		390407	0					
ANR	390879	ArgumentList	ce		390407	1					
ANR	390880	Argument	ce		390407	0					
ANR	390881	Identifier	ce		390407	0					
ANR	390882	Argument	name		390407	1					
ANR	390883	Identifier	name		390407	0					
ANR	390884	Argument	0		390407	2					
ANR	390885	PrimaryExpression	0		390407	0					
ANR	390886	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		390407	3					
ANR	390887	Condition	UNEXPECTED ( EG ( exception ) )	33235:6:1047525:1047549	390407	0	True				
ANR	390888	CallExpression	UNEXPECTED ( EG ( exception ) )		390407	0					
ANR	390889	Callee	UNEXPECTED		390407	0					
ANR	390890	Identifier	UNEXPECTED		390407	0					
ANR	390891	ArgumentList	EG ( exception )		390407	1					
ANR	390892	Argument	EG ( exception )		390407	0					
ANR	390893	CallExpression	EG ( exception )		390407	0					
ANR	390894	Callee	EG		390407	0					
ANR	390895	Identifier	EG		390407	0					
ANR	390896	ArgumentList	exception		390407	1					
ANR	390897	Argument	exception		390407	0					
ANR	390898	Identifier	exception		390407	0					
ANR	390899	CompoundStatement		66:33:2087:2087	390407	1					
ANR	390900	IfStatement	if ( IS_CV != IS_CONST )		390407	0					
ANR	390901	Condition	IS_CV != IS_CONST	33236:7:1047561:1047577	390407	0	True				
ANR	390902	EqualityExpression	IS_CV != IS_CONST		390407	0		!=			
ANR	390903	Identifier	IS_CV		390407	0					
ANR	390904	Identifier	IS_CONST		390407	1					
ANR	390905	CompoundStatement		67:26:2115:2115	390407	1					
ANR	390906	ExpressionStatement	zend_string_release ( name )	33237:4:1047586:1047611	390407	0	True				
ANR	390907	CallExpression	zend_string_release ( name )		390407	0					
ANR	390908	Callee	zend_string_release		390407	0					
ANR	390909	Identifier	zend_string_release		390407	0					
ANR	390910	ArgumentList	name		390407	1					
ANR	390911	Argument	name		390407	0					
ANR	390912	Identifier	name		390407	0					
ANR	390913	ExpressionStatement	HANDLE_EXCEPTION ( )	33240:3:1047622:1047640	390407	1	True				
ANR	390914	CallExpression	HANDLE_EXCEPTION ( )		390407	0					
ANR	390915	Callee	HANDLE_EXCEPTION		390407	0					
ANR	390916	Identifier	HANDLE_EXCEPTION		390407	0					
ANR	390917	ArgumentList			390407	1					
ANR	390918	IfStatement	if ( IS_CV == IS_CONST && retval )		390407	4					
ANR	390919	Condition	IS_CV == IS_CONST && retval	33242:6:1047652:1047678	390407	0	True				
ANR	390920	AndExpression	IS_CV == IS_CONST && retval		390407	0		&&			
ANR	390921	EqualityExpression	IS_CV == IS_CONST		390407	0		==			
ANR	390922	Identifier	IS_CV		390407	0					
ANR	390923	Identifier	IS_CONST		390407	1					
ANR	390924	Identifier	retval		390407	1					
ANR	390925	CompoundStatement		73:35:2216:2216	390407	1					
ANR	390926	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	33243:3:1047686:1047761	390407	0	True				
ANR	390927	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		390407	0					
ANR	390928	Callee	CACHE_POLYMORPHIC_PTR		390407	0					
ANR	390929	Identifier	CACHE_POLYMORPHIC_PTR		390407	0					
ANR	390930	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	1					
ANR	390931	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	0					
ANR	390932	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		390407	0					
ANR	390933	Callee	Z_CACHE_SLOT_P		390407	0					
ANR	390934	Identifier	Z_CACHE_SLOT_P		390407	0					
ANR	390935	ArgumentList	EX_CONSTANT ( opline -> op1 )		390407	1					
ANR	390936	Argument	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390937	CallExpression	EX_CONSTANT ( opline -> op1 )		390407	0					
ANR	390938	Callee	EX_CONSTANT		390407	0					
ANR	390939	Identifier	EX_CONSTANT		390407	0					
ANR	390940	ArgumentList	opline -> op1		390407	1					
ANR	390941	Argument	opline -> op1		390407	0					
ANR	390942	PtrMemberAccess	opline -> op1		390407	0					
ANR	390943	Identifier	opline		390407	0					
ANR	390944	Identifier	op1		390407	1					
ANR	390945	Argument	ce		390407	1					
ANR	390946	Identifier	ce		390407	0					
ANR	390947	Argument	retval		390407	2					
ANR	390948	Identifier	retval		390407	0					
ANR	390949	ElseStatement	else		390407	0					
ANR	390950	CompoundStatement		77:8:2311:2311	390407	0					
ANR	390951	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	33247:2:1047780:1047891	390407	0	True				
ANR	390952	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		390407	0		=			
ANR	390953	Identifier	target_symbol_table		390407	0					
ANR	390954	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		390407	1					
ANR	390955	Callee	zend_get_target_symbol_table		390407	0					
ANR	390956	Identifier	zend_get_target_symbol_table		390407	0					
ANR	390957	ArgumentList	execute_data		390407	1					
ANR	390958	Argument	execute_data		390407	0					
ANR	390959	Identifier	execute_data		390407	0					
ANR	390960	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		390407	1					
ANR	390961	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		390407	0		&			
ANR	390962	PtrMemberAccess	opline -> extended_value		390407	0					
ANR	390963	Identifier	opline		390407	0					
ANR	390964	Identifier	extended_value		390407	1					
ANR	390965	Identifier	ZEND_FETCH_TYPE_MASK		390407	1					
ANR	390966	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	33248:2:1047895:1047945	390407	1	True				
ANR	390967	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		390407	0		=			
ANR	390968	Identifier	retval		390407	0					
ANR	390969	CallExpression	"zend_hash_find ( target_symbol_table , name )"		390407	1					
ANR	390970	Callee	zend_hash_find		390407	0					
ANR	390971	Identifier	zend_hash_find		390407	0					
ANR	390972	ArgumentList	target_symbol_table		390407	1					
ANR	390973	Argument	target_symbol_table		390407	0					
ANR	390974	Identifier	target_symbol_table		390407	0					
ANR	390975	Argument	name		390407	1					
ANR	390976	Identifier	name		390407	0					
ANR	390977	IfStatement	if ( retval == NULL )		390407	2					
ANR	390978	Condition	retval == NULL	33249:6:1047953:1047966	390407	0	True				
ANR	390979	EqualityExpression	retval == NULL		390407	0		==			
ANR	390980	Identifier	retval		390407	0					
ANR	390981	Identifier	NULL		390407	1					
ANR	390982	CompoundStatement		80:22:2504:2504	390407	1					
ANR	390983	SwitchStatement	switch ( type )		390407	0					
ANR	390984	Condition	type	33250:11:1047982:1047985	390407	0	True				
ANR	390985	Identifier	type		390407	0					
ANR	390986	CompoundStatement		81:17:2523:2523	390407	1					
ANR	390987	Label	case BP_VAR_R :	33251:4:1047994:1048007	390407	0	True				
ANR	390988	Identifier	BP_VAR_R		390407	0					
ANR	390989	Label	case BP_VAR_UNSET :	33252:4:1048013:1048030	390407	1	True				
ANR	390990	Identifier	BP_VAR_UNSET		390407	0					
ANR	390991	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	33253:5:1048037:1048098	390407	2	True				
ANR	390992	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		390407	0					
ANR	390993	Callee	zend_error		390407	0					
ANR	390994	Identifier	zend_error		390407	0					
ANR	390995	ArgumentList	E_NOTICE		390407	1					
ANR	390996	Argument	E_NOTICE		390407	0					
ANR	390997	Identifier	E_NOTICE		390407	0					
ANR	390998	Argument	"""Undefined variable: %s"""		390407	1					
ANR	390999	PrimaryExpression	"""Undefined variable: %s"""		390407	0					
ANR	391000	Argument	ZSTR_VAL ( name )		390407	2					
ANR	391001	CallExpression	ZSTR_VAL ( name )		390407	0					
ANR	391002	Callee	ZSTR_VAL		390407	0					
ANR	391003	Identifier	ZSTR_VAL		390407	0					
ANR	391004	ArgumentList	name		390407	1					
ANR	391005	Argument	name		390407	0					
ANR	391006	Identifier	name		390407	0					
ANR	391007	Label	case BP_VAR_IS :	33255:4:1048143:1048157	390407	3	True				
ANR	391008	Identifier	BP_VAR_IS		390407	0					
ANR	391009	ExpressionStatement	retval = & EG ( uninitialized_zval )	33256:5:1048164:1048196	390407	4	True				
ANR	391010	AssignmentExpression	retval = & EG ( uninitialized_zval )		390407	0		=			
ANR	391011	Identifier	retval		390407	0					
ANR	391012	UnaryOperationExpression	& EG ( uninitialized_zval )		390407	1					
ANR	391013	UnaryOperator	&		390407	0					
ANR	391014	CallExpression	EG ( uninitialized_zval )		390407	1					
ANR	391015	Callee	EG		390407	0					
ANR	391016	Identifier	EG		390407	0					
ANR	391017	ArgumentList	uninitialized_zval		390407	1					
ANR	391018	Argument	uninitialized_zval		390407	0					
ANR	391019	Identifier	uninitialized_zval		390407	0					
ANR	391020	BreakStatement	break ;	33257:5:1048203:1048208	390407	5	True				
ANR	391021	Label	case BP_VAR_RW :	33258:4:1048214:1048228	390407	6	True				
ANR	391022	Identifier	BP_VAR_RW		390407	0					
ANR	391023	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	33259:5:1048235:1048296	390407	7	True				
ANR	391024	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		390407	0					
ANR	391025	Callee	zend_error		390407	0					
ANR	391026	Identifier	zend_error		390407	0					
ANR	391027	ArgumentList	E_NOTICE		390407	1					
ANR	391028	Argument	E_NOTICE		390407	0					
ANR	391029	Identifier	E_NOTICE		390407	0					
ANR	391030	Argument	"""Undefined variable: %s"""		390407	1					
ANR	391031	PrimaryExpression	"""Undefined variable: %s"""		390407	0					
ANR	391032	Argument	ZSTR_VAL ( name )		390407	2					
ANR	391033	CallExpression	ZSTR_VAL ( name )		390407	0					
ANR	391034	Callee	ZSTR_VAL		390407	0					
ANR	391035	Identifier	ZSTR_VAL		390407	0					
ANR	391036	ArgumentList	name		390407	1					
ANR	391037	Argument	name		390407	0					
ANR	391038	Identifier	name		390407	0					
ANR	391039	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	33260:5:1048303:1048380	390407	8	True				
ANR	391040	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		390407	0		=			
ANR	391041	Identifier	retval		390407	0					
ANR	391042	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		390407	1					
ANR	391043	Callee	zend_hash_update		390407	0					
ANR	391044	Identifier	zend_hash_update		390407	0					
ANR	391045	ArgumentList	target_symbol_table		390407	1					
ANR	391046	Argument	target_symbol_table		390407	0					
ANR	391047	Identifier	target_symbol_table		390407	0					
ANR	391048	Argument	name		390407	1					
ANR	391049	Identifier	name		390407	0					
ANR	391050	Argument	& EG ( uninitialized_zval )		390407	2					
ANR	391051	UnaryOperationExpression	& EG ( uninitialized_zval )		390407	0					
ANR	391052	UnaryOperator	&		390407	0					
ANR	391053	CallExpression	EG ( uninitialized_zval )		390407	1					
ANR	391054	Callee	EG		390407	0					
ANR	391055	Identifier	EG		390407	0					
ANR	391056	ArgumentList	uninitialized_zval		390407	1					
ANR	391057	Argument	uninitialized_zval		390407	0					
ANR	391058	Identifier	uninitialized_zval		390407	0					
ANR	391059	BreakStatement	break ;	33261:5:1048387:1048392	390407	9	True				
ANR	391060	Label	case BP_VAR_W :	33262:4:1048398:1048411	390407	10	True				
ANR	391061	Identifier	BP_VAR_W		390407	0					
ANR	391062	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	33263:5:1048418:1048496	390407	11	True				
ANR	391063	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		390407	0		=			
ANR	391064	Identifier	retval		390407	0					
ANR	391065	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		390407	1					
ANR	391066	Callee	zend_hash_add_new		390407	0					
ANR	391067	Identifier	zend_hash_add_new		390407	0					
ANR	391068	ArgumentList	target_symbol_table		390407	1					
ANR	391069	Argument	target_symbol_table		390407	0					
ANR	391070	Identifier	target_symbol_table		390407	0					
ANR	391071	Argument	name		390407	1					
ANR	391072	Identifier	name		390407	0					
ANR	391073	Argument	& EG ( uninitialized_zval )		390407	2					
ANR	391074	UnaryOperationExpression	& EG ( uninitialized_zval )		390407	0					
ANR	391075	UnaryOperator	&		390407	0					
ANR	391076	CallExpression	EG ( uninitialized_zval )		390407	1					
ANR	391077	Callee	EG		390407	0					
ANR	391078	Identifier	EG		390407	0					
ANR	391079	ArgumentList	uninitialized_zval		390407	1					
ANR	391080	Argument	uninitialized_zval		390407	0					
ANR	391081	Identifier	uninitialized_zval		390407	0					
ANR	391082	BreakStatement	break ;	33264:5:1048503:1048508	390407	12	True				
ANR	391083	Statement	EMPTY_SWITCH_DEFAULT_CASE	33265:4:1048514:1048538	390407	13	True				
ANR	391084	Statement	(	33265:29:1048539:1048539	390407	14	True				
ANR	391085	Statement	)	33265:30:1048540:1048540	390407	15	True				
ANR	391086	ElseStatement	else		390407	0					
ANR	391087	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		390407	0					
ANR	391088	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	33268:13:1048627:1048657	390407	0	True				
ANR	391089	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		390407	0		==			
ANR	391090	CallExpression	Z_TYPE_P ( retval )		390407	0					
ANR	391091	Callee	Z_TYPE_P		390407	0					
ANR	391092	Identifier	Z_TYPE_P		390407	0					
ANR	391093	ArgumentList	retval		390407	1					
ANR	391094	Argument	retval		390407	0					
ANR	391095	Identifier	retval		390407	0					
ANR	391096	Identifier	IS_INDIRECT		390407	1					
ANR	391097	CompoundStatement		99:46:3195:3195	390407	1					
ANR	391098	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	33269:3:1048665:1048694	390407	0	True				
ANR	391099	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		390407	0		=			
ANR	391100	Identifier	retval		390407	0					
ANR	391101	CallExpression	Z_INDIRECT_P ( retval )		390407	1					
ANR	391102	Callee	Z_INDIRECT_P		390407	0					
ANR	391103	Identifier	Z_INDIRECT_P		390407	0					
ANR	391104	ArgumentList	retval		390407	1					
ANR	391105	Argument	retval		390407	0					
ANR	391106	Identifier	retval		390407	0					
ANR	391107	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		390407	1					
ANR	391108	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	33270:7:1048703:1048730	390407	0	True				
ANR	391109	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		390407	0		==			
ANR	391110	CallExpression	Z_TYPE_P ( retval )		390407	0					
ANR	391111	Callee	Z_TYPE_P		390407	0					
ANR	391112	Identifier	Z_TYPE_P		390407	0					
ANR	391113	ArgumentList	retval		390407	1					
ANR	391114	Argument	retval		390407	0					
ANR	391115	Identifier	retval		390407	0					
ANR	391116	Identifier	IS_UNDEF		390407	1					
ANR	391117	CompoundStatement		101:37:3268:3268	390407	1					
ANR	391118	SwitchStatement	switch ( type )		390407	0					
ANR	391119	Condition	type	33271:12:1048747:1048750	390407	0	True				
ANR	391120	Identifier	type		390407	0					
ANR	391121	CompoundStatement		102:18:3288:3288	390407	1					
ANR	391122	Label	case BP_VAR_R :	33272:5:1048760:1048773	390407	0	True				
ANR	391123	Identifier	BP_VAR_R		390407	0					
ANR	391124	Label	case BP_VAR_UNSET :	33273:5:1048780:1048797	390407	1	True				
ANR	391125	Identifier	BP_VAR_UNSET		390407	0					
ANR	391126	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	33274:6:1048805:1048866	390407	2	True				
ANR	391127	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		390407	0					
ANR	391128	Callee	zend_error		390407	0					
ANR	391129	Identifier	zend_error		390407	0					
ANR	391130	ArgumentList	E_NOTICE		390407	1					
ANR	391131	Argument	E_NOTICE		390407	0					
ANR	391132	Identifier	E_NOTICE		390407	0					
ANR	391133	Argument	"""Undefined variable: %s"""		390407	1					
ANR	391134	PrimaryExpression	"""Undefined variable: %s"""		390407	0					
ANR	391135	Argument	ZSTR_VAL ( name )		390407	2					
ANR	391136	CallExpression	ZSTR_VAL ( name )		390407	0					
ANR	391137	Callee	ZSTR_VAL		390407	0					
ANR	391138	Identifier	ZSTR_VAL		390407	0					
ANR	391139	ArgumentList	name		390407	1					
ANR	391140	Argument	name		390407	0					
ANR	391141	Identifier	name		390407	0					
ANR	391142	Label	case BP_VAR_IS :	33276:5:1048913:1048927	390407	3	True				
ANR	391143	Identifier	BP_VAR_IS		390407	0					
ANR	391144	ExpressionStatement	retval = & EG ( uninitialized_zval )	33277:6:1048935:1048967	390407	4	True				
ANR	391145	AssignmentExpression	retval = & EG ( uninitialized_zval )		390407	0		=			
ANR	391146	Identifier	retval		390407	0					
ANR	391147	UnaryOperationExpression	& EG ( uninitialized_zval )		390407	1					
ANR	391148	UnaryOperator	&		390407	0					
ANR	391149	CallExpression	EG ( uninitialized_zval )		390407	1					
ANR	391150	Callee	EG		390407	0					
ANR	391151	Identifier	EG		390407	0					
ANR	391152	ArgumentList	uninitialized_zval		390407	1					
ANR	391153	Argument	uninitialized_zval		390407	0					
ANR	391154	Identifier	uninitialized_zval		390407	0					
ANR	391155	BreakStatement	break ;	33278:6:1048975:1048980	390407	5	True				
ANR	391156	Label	case BP_VAR_RW :	33279:5:1048987:1049001	390407	6	True				
ANR	391157	Identifier	BP_VAR_RW		390407	0					
ANR	391158	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	33280:6:1049009:1049070	390407	7	True				
ANR	391159	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		390407	0					
ANR	391160	Callee	zend_error		390407	0					
ANR	391161	Identifier	zend_error		390407	0					
ANR	391162	ArgumentList	E_NOTICE		390407	1					
ANR	391163	Argument	E_NOTICE		390407	0					
ANR	391164	Identifier	E_NOTICE		390407	0					
ANR	391165	Argument	"""Undefined variable: %s"""		390407	1					
ANR	391166	PrimaryExpression	"""Undefined variable: %s"""		390407	0					
ANR	391167	Argument	ZSTR_VAL ( name )		390407	2					
ANR	391168	CallExpression	ZSTR_VAL ( name )		390407	0					
ANR	391169	Callee	ZSTR_VAL		390407	0					
ANR	391170	Identifier	ZSTR_VAL		390407	0					
ANR	391171	ArgumentList	name		390407	1					
ANR	391172	Argument	name		390407	0					
ANR	391173	Identifier	name		390407	0					
ANR	391174	Label	case BP_VAR_W :	33282:5:1049117:1049130	390407	8	True				
ANR	391175	Identifier	BP_VAR_W		390407	0					
ANR	391176	ExpressionStatement	ZVAL_NULL ( retval )	33283:6:1049138:1049155	390407	9	True				
ANR	391177	CallExpression	ZVAL_NULL ( retval )		390407	0					
ANR	391178	Callee	ZVAL_NULL		390407	0					
ANR	391179	Identifier	ZVAL_NULL		390407	0					
ANR	391180	ArgumentList	retval		390407	1					
ANR	391181	Argument	retval		390407	0					
ANR	391182	Identifier	retval		390407	0					
ANR	391183	BreakStatement	break ;	33284:6:1049163:1049168	390407	10	True				
ANR	391184	Statement	EMPTY_SWITCH_DEFAULT_CASE	33285:5:1049175:1049199	390407	11	True				
ANR	391185	Statement	(	33285:30:1049200:1049200	390407	12	True				
ANR	391186	Statement	)	33285:31:1049201:1049201	390407	13	True				
ANR	391187	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		390407	3					
ANR	391188	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	33289:6:1049224:1049291	390407	0	True				
ANR	391189	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		390407	0		==			
ANR	391190	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		390407	0		&			
ANR	391191	PtrMemberAccess	opline -> extended_value		390407	0					
ANR	391192	Identifier	opline		390407	0					
ANR	391193	Identifier	extended_value		390407	1					
ANR	391194	Identifier	ZEND_FETCH_TYPE_MASK		390407	1					
ANR	391195	Identifier	ZEND_FETCH_STATIC		390407	1					
ANR	391196	CompoundStatement		120:76:3829:3829	390407	1					
ANR	391197	IfStatement	if ( Z_CONSTANT_P ( retval ) )		390407	0					
ANR	391198	Condition	Z_CONSTANT_P ( retval )	33290:7:1049303:1049322	390407	0	True				
ANR	391199	CallExpression	Z_CONSTANT_P ( retval )		390407	0					
ANR	391200	Callee	Z_CONSTANT_P		390407	0					
ANR	391201	Identifier	Z_CONSTANT_P		390407	0					
ANR	391202	ArgumentList	retval		390407	1					
ANR	391203	Argument	retval		390407	0					
ANR	391204	Identifier	retval		390407	0					
ANR	391205	CompoundStatement		121:29:3860:3860	390407	1					
ANR	391206	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		390407	0					
ANR	391207	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	33291:8:1049335:1049397	390407	0	True				
ANR	391208	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		390407	0					
ANR	391209	Callee	UNEXPECTED		390407	0					
ANR	391210	Identifier	UNEXPECTED		390407	0					
ANR	391211	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		390407	1					
ANR	391212	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		390407	0					
ANR	391213	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		390407	0		!=			
ANR	391214	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		390407	0					
ANR	391215	Callee	zval_update_constant_ex		390407	0					
ANR	391216	Identifier	zval_update_constant_ex		390407	0					
ANR	391217	ArgumentList	retval		390407	1					
ANR	391218	Argument	retval		390407	0					
ANR	391219	Identifier	retval		390407	0					
ANR	391220	Argument	1		390407	1					
ANR	391221	PrimaryExpression	1		390407	0					
ANR	391222	Argument	NULL		390407	2					
ANR	391223	Identifier	NULL		390407	0					
ANR	391224	Identifier	SUCCESS		390407	1					
ANR	391225	CompoundStatement		122:73:3935:3935	390407	1					
ANR	391226	ExpressionStatement	HANDLE_EXCEPTION ( )	33293:5:1049408:1049426	390407	0	True				
ANR	391227	CallExpression	HANDLE_EXCEPTION ( )		390407	0					
ANR	391228	Callee	HANDLE_EXCEPTION		390407	0					
ANR	391229	Identifier	HANDLE_EXCEPTION		390407	0					
ANR	391230	ArgumentList			390407	1					
ANR	391231	ElseStatement	else		390407	0					
ANR	391232	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		390407	0					
ANR	391233	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	33296:13:1049452:1049524	390407	0	True				
ANR	391234	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		390407	0		!=			
ANR	391235	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		390407	0		&			
ANR	391236	PtrMemberAccess	opline -> extended_value		390407	0					
ANR	391237	Identifier	opline		390407	0					
ANR	391238	Identifier	extended_value		390407	1					
ANR	391239	Identifier	ZEND_FETCH_TYPE_MASK		390407	1					
ANR	391240	Identifier	ZEND_FETCH_GLOBAL_LOCK		390407	1					
ANR	391241	CompoundStatement		127:88:4062:4062	390407	1					
ANR	391242	IfStatement	if ( IS_CV != IS_CONST )		390407	8					
ANR	391243	Condition	IS_CV != IS_CONST	33301:5:1049543:1049559	390407	0	True				
ANR	391244	EqualityExpression	IS_CV != IS_CONST		390407	0		!=			
ANR	391245	Identifier	IS_CV		390407	0					
ANR	391246	Identifier	IS_CONST		390407	1					
ANR	391247	CompoundStatement		132:24:4097:4097	390407	1					
ANR	391248	ExpressionStatement	zend_string_release ( name )	33302:2:1049566:1049591	390407	0	True				
ANR	391249	CallExpression	zend_string_release ( name )		390407	0					
ANR	391250	Callee	zend_string_release		390407	0					
ANR	391251	Identifier	zend_string_release		390407	0					
ANR	391252	ArgumentList	name		390407	1					
ANR	391253	Argument	name		390407	0					
ANR	391254	Identifier	name		390407	0					
ANR	391255	Label	fetch_var_return :	33305:0:1049597:1049613	390407	9	True				
ANR	391256	Identifier	fetch_var_return		390407	0					
ANR	391257	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	33306:1:1049616:1049643	390407	10	True				
ANR	391258	CallExpression	ZEND_ASSERT ( retval != NULL )		390407	0					
ANR	391259	Callee	ZEND_ASSERT		390407	0					
ANR	391260	Identifier	ZEND_ASSERT		390407	0					
ANR	391261	ArgumentList	retval != NULL		390407	1					
ANR	391262	Argument	retval != NULL		390407	0					
ANR	391263	EqualityExpression	retval != NULL		390407	0		!=			
ANR	391264	Identifier	retval		390407	0					
ANR	391265	Identifier	NULL		390407	1					
ANR	391266	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		390407	11					
ANR	391267	Condition	type == BP_VAR_R || type == BP_VAR_IS	33307:5:1049650:1049686	390407	0	True				
ANR	391268	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		390407	0		||			
ANR	391269	EqualityExpression	type == BP_VAR_R		390407	0		==			
ANR	391270	Identifier	type		390407	0					
ANR	391271	Identifier	BP_VAR_R		390407	1					
ANR	391272	EqualityExpression	type == BP_VAR_IS		390407	1		==			
ANR	391273	Identifier	type		390407	0					
ANR	391274	Identifier	BP_VAR_IS		390407	1					
ANR	391275	CompoundStatement		138:44:4224:4224	390407	1					
ANR	391276	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		390407	0					
ANR	391277	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	33308:30:1049721:1049766	390407	0	True				
ANR	391278	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		390407	0		&&			
ANR	391279	CallExpression	Z_ISREF_P ( retval )		390407	0					
ANR	391280	Callee	Z_ISREF_P		390407	0					
ANR	391281	Identifier	Z_ISREF_P		390407	0					
ANR	391282	ArgumentList	retval		390407	1					
ANR	391283	Argument	retval		390407	0					
ANR	391284	Identifier	retval		390407	0					
ANR	391285	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		390407	1		==			
ANR	391286	CallExpression	Z_REFCOUNT_P ( retval )		390407	0					
ANR	391287	Callee	Z_REFCOUNT_P		390407	0					
ANR	391288	Identifier	Z_REFCOUNT_P		390407	0					
ANR	391289	ArgumentList	retval		390407	1					
ANR	391290	Argument	retval		390407	0					
ANR	391291	Identifier	retval		390407	0					
ANR	391292	PrimaryExpression	1		390407	1					
ANR	391293	CompoundStatement		139:78:4304:4304	390407	1					
ANR	391294	ExpressionStatement	ZVAL_UNREF ( retval )	33309:3:1049774:1049792	390407	0	True				
ANR	391295	CallExpression	ZVAL_UNREF ( retval )		390407	0					
ANR	391296	Callee	ZVAL_UNREF		390407	0					
ANR	391297	Identifier	ZVAL_UNREF		390407	0					
ANR	391298	ArgumentList	retval		390407	1					
ANR	391299	Argument	retval		390407	0					
ANR	391300	Identifier	retval		390407	0					
ANR	391301	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	33311:2:1049800:1049845	390407	1	True				
ANR	391302	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		390407	0					
ANR	391303	Callee	ZVAL_COPY		390407	0					
ANR	391304	Identifier	ZVAL_COPY		390407	0					
ANR	391305	ArgumentList	EX_VAR ( opline -> result . var )		390407	1					
ANR	391306	Argument	EX_VAR ( opline -> result . var )		390407	0					
ANR	391307	CallExpression	EX_VAR ( opline -> result . var )		390407	0					
ANR	391308	Callee	EX_VAR		390407	0					
ANR	391309	Identifier	EX_VAR		390407	0					
ANR	391310	ArgumentList	opline -> result . var		390407	1					
ANR	391311	Argument	opline -> result . var		390407	0					
ANR	391312	MemberAccess	opline -> result . var		390407	0					
ANR	391313	PtrMemberAccess	opline -> result		390407	0					
ANR	391314	Identifier	opline		390407	0					
ANR	391315	Identifier	result		390407	1					
ANR	391316	Identifier	var		390407	1					
ANR	391317	Argument	retval		390407	1					
ANR	391318	Identifier	retval		390407	0					
ANR	391319	ElseStatement	else		390407	0					
ANR	391320	CompoundStatement		143:8:4390:4390	390407	0					
ANR	391321	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	33313:2:1049859:1049908	390407	0	True				
ANR	391322	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		390407	0					
ANR	391323	Callee	ZVAL_INDIRECT		390407	0					
ANR	391324	Identifier	ZVAL_INDIRECT		390407	0					
ANR	391325	ArgumentList	EX_VAR ( opline -> result . var )		390407	1					
ANR	391326	Argument	EX_VAR ( opline -> result . var )		390407	0					
ANR	391327	CallExpression	EX_VAR ( opline -> result . var )		390407	0					
ANR	391328	Callee	EX_VAR		390407	0					
ANR	391329	Identifier	EX_VAR		390407	0					
ANR	391330	ArgumentList	opline -> result . var		390407	1					
ANR	391331	Argument	opline -> result . var		390407	0					
ANR	391332	MemberAccess	opline -> result . var		390407	0					
ANR	391333	PtrMemberAccess	opline -> result		390407	0					
ANR	391334	Identifier	opline		390407	0					
ANR	391335	Identifier	result		390407	1					
ANR	391336	Identifier	var		390407	1					
ANR	391337	Argument	retval		390407	1					
ANR	391338	Identifier	retval		390407	0					
ANR	391339	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	33315:1:1049914:1049951	390407	12	True				
ANR	391340	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		390407	0					
ANR	391341	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		390407	0					
ANR	391342	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		390407	0					
ANR	391343	ArgumentList			390407	1					
ANR	391344	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		390407	1					
ANR	391345	Identifier	zend_fetch_var_address_helper_SPEC_CV_VAR		390407	2					
ANR	391346	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		390407	3					
ANR	391347	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	33169:87:1045426:1045461	390407	0	True				
ANR	391348	ParameterType	int type		390407	0					
ANR	391349	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		390407	1					
ANR	391350	CFGEntryNode	ENTRY		390407		True				
ANR	391351	CFGExitNode	EXIT		390407		True				
ANR	391352	Symbol	ZEND_FETCH_CLASS_DEFAULT		390407						
ANR	391353	Symbol	exception		390407						
ANR	391354	Symbol	zend_get_target_symbol_table		390407						
ANR	391355	Symbol	opline -> op2 . var		390407						
ANR	391356	Symbol	IS_CV		390407						
ANR	391357	Symbol	Z_CONSTANT_P		390407						
ANR	391358	Symbol	* ce		390407						
ANR	391359	Symbol	type		390407						
ANR	391360	Symbol	Z_REFCOUNT_P		390407						
ANR	391361	Symbol	execute_data		390407						
ANR	391362	Symbol	opline -> extended_value		390407						
ANR	391363	Symbol	opline -> result		390407						
ANR	391364	Symbol	zend_std_get_static_property		390407						
ANR	391365	Symbol	zend_hash_find		390407						
ANR	391366	Symbol	opline		390407						
ANR	391367	Symbol	Z_CE_P		390407						
ANR	391368	Symbol	target_symbol_table		390407						
ANR	391369	Symbol	IS_STRING		390407						
ANR	391370	Symbol	ce -> name		390407						
ANR	391371	Symbol	zend_hash_update		390407						
ANR	391372	Symbol	BP_VAR_IS		390407						
ANR	391373	Symbol	IS_UNDEF		390407						
ANR	391374	Symbol	BP_VAR_R		390407						
ANR	391375	Symbol	IS_CONST		390407						
ANR	391376	Symbol	EG		390407						
ANR	391377	Symbol	NULL		390407						
ANR	391378	Symbol	Z_CACHE_SLOT_P		390407						
ANR	391379	Symbol	EX_CONSTANT		390407						
ANR	391380	Symbol	_get_zval_ptr_cv_undef		390407						
ANR	391381	Symbol	CE_STATIC_MEMBERS		390407						
ANR	391382	Symbol	E_NOTICE		390407						
ANR	391383	Symbol	varname		390407						
ANR	391384	Symbol	retval		390407						
ANR	391385	Symbol	name		390407						
ANR	391386	Symbol	EX_VAR		390407						
ANR	391387	Symbol	zend_fetch_class_by_name		390407						
ANR	391388	Symbol	Z_STR_P		390407						
ANR	391389	Symbol	IS_VAR		390407						
ANR	391390	Symbol	Z_ISREF_P		390407						
ANR	391391	Symbol	IS_INDIRECT		390407						
ANR	391392	Symbol	opline -> op1		390407						
ANR	391393	Symbol	CACHED_PTR		390407						
ANR	391394	Symbol	opline -> op2		390407						
ANR	391395	Symbol	Z_INDIRECT_P		390407						
ANR	391396	Symbol	& EG		390407						
ANR	391397	Symbol	UNEXPECTED		390407						
ANR	391398	Symbol	ZEND_FETCH_CLASS_EXCEPTION		390407						
ANR	391399	Symbol	ZEND_FETCH_STATIC		390407						
ANR	391400	Symbol	opline -> op1 . var		390407						
ANR	391401	Symbol	uninitialized_zval		390407						
ANR	391402	Symbol	ce		390407						
ANR	391403	Symbol	SUCCESS		390407						
ANR	391404	Symbol	zval_get_string		390407						
ANR	391405	Symbol	ZEND_FETCH_TYPE_MASK		390407						
ANR	391406	Symbol	zend_hash_add_new		390407						
ANR	391407	Symbol	Z_TYPE_P		390407						
ANR	391408	Symbol	CACHED_POLYMORPHIC_PTR		390407						
ANR	391409	Symbol	ZSTR_VAL		390407						
ANR	391410	Symbol	* opline		390407						
ANR	391411	Symbol	ZEND_FETCH_GLOBAL_LOCK		390407						
ANR	391412	Symbol	zval_update_constant_ex		390407						
ANR	391413	Symbol	EXPECTED		390407						
ANR	391414	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		390407						
ANR	391415	Symbol	opline -> result . var		390407						
ANR	391416	Symbol	IS_UNUSED		390407						
ANR	391417	DeclStmt									
ANR	391418	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	391419	DeclStmt									
ANR	391420	Decl							zval	zval *	value
ANR	391421	DeclStmt									
ANR	391422	Decl							zval	zval *	variable_ptr
ANR	391423	DeclStmt									
ANR	391424	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	391425	DeclStmt									
ANR	391426	Decl							zval	zval *	variable_ptr
ANR	391427	DeclStmt									
ANR	391428	Decl							zval	zval *	value_ptr
ANR	391429	DeclStmt									
ANR	391430	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	391431	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	391432	DeclStmt									
ANR	391433	Decl							HashTable	HashTable *	target_symbol_table
ANR	391434	DeclStmt									
ANR	391435	Decl							zval	zval *	var
ANR	391436	DeclStmt									
ANR	391437	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	391438	DeclStmt									
ANR	391439	Decl							zval	zval *	z
ANR	391440	DeclStmt									
ANR	391441	Decl							zend_class_entry	zend_class_entry *	ce
ANR	391442	DeclStmt									
ANR	391443	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	391444	DeclStmt									
ANR	391445	Decl							int	int	result
ANR	391446	DeclStmt									
ANR	391447	Decl							zval	zval	tmp
ANR	391448	Decl							zval	zval *	varname
ANR	391449	DeclStmt									
ANR	391450	Decl							zend_class_entry	zend_class_entry *	ce
ANR	391451	DeclStmt									
ANR	391452	Decl							HashTable	HashTable *	target_symbol_table
ANR	391453	DeclStmt									
ANR	391454	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr
ANR	391455	DeclStmt									
ANR	391456	Decl							zend_bool	zend_bool	result
ANR	391457	DeclStmt									
ANR	391458	Decl							zend_class_entry	zend_class_entry *	ce
ANR	391459	DeclStmt									
ANR	391460	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	391461	DeclStmt									
ANR	391462	Decl							zval	zval *	value
ANR	391463	DeclStmt									
ANR	391464	Decl							zval	zval *	value_ptr
ANR	391465	DeclStmt									
ANR	391466	Decl							zval	zval *	value
ANR	391467	DeclStmt									
ANR	391468	Decl							zend_free_op	zend_free_op	free_op2
ANR	391469	DeclStmt									
ANR	391470	Decl							zval	zval *	key
ANR	391471	Function	zend_binary_assign_op_dim_helper_SPEC_CV_UNUSED	33806:0:1065811:1067941							
ANR	391472	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_CV_UNUSED (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		391471	0					
ANR	391473	CompoundStatement		33807:0:1065958:1067941	391471	0					
ANR	391474	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	33808:1:1065961:1065999	391471	0	True				
ANR	391475	IdentifierDecl	free_op_data1		391471	0					
ANR	391476	IdentifierDeclType	USE_OPLINE zend_free_op		391471	0					
ANR	391477	Identifier	free_op_data1		391471	1					
ANR	391478	IdentifierDeclStatement	"zval * var_ptr , rv ;"	33810:1:1066002:1066019	391471	1	True				
ANR	391479	IdentifierDecl	* var_ptr		391471	0					
ANR	391480	IdentifierDeclType	zval *		391471	0					
ANR	391481	Identifier	var_ptr		391471	1					
ANR	391482	IdentifierDecl	rv		391471	1					
ANR	391483	IdentifierDeclType	zval		391471	0					
ANR	391484	Identifier	rv		391471	1					
ANR	391485	IdentifierDeclStatement	"zval * value , * container , * dim ;"	33811:1:1066022:1066051	391471	2	True				
ANR	391486	IdentifierDecl	* value		391471	0					
ANR	391487	IdentifierDeclType	zval *		391471	0					
ANR	391488	Identifier	value		391471	1					
ANR	391489	IdentifierDecl	* container		391471	1					
ANR	391490	IdentifierDeclType	zval *		391471	0					
ANR	391491	Identifier	container		391471	1					
ANR	391492	IdentifierDecl	* dim		391471	2					
ANR	391493	IdentifierDeclType	zval *		391471	0					
ANR	391494	Identifier	dim		391471	1					
ANR	391495	ExpressionStatement	SAVE_OPLINE ( )	33813:1:1066055:1066068	391471	3	True				
ANR	391496	CallExpression	SAVE_OPLINE ( )		391471	0					
ANR	391497	Callee	SAVE_OPLINE		391471	0					
ANR	391498	Identifier	SAVE_OPLINE		391471	0					
ANR	391499	ArgumentList			391471	1					
ANR	391500	ExpressionStatement	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	33814:1:1066071:1066140	391471	4	True				
ANR	391501	AssignmentExpression	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		391471	0		=			
ANR	391502	Identifier	container		391471	0					
ANR	391503	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		391471	1					
ANR	391504	Callee	_get_zval_ptr_cv_BP_VAR_RW		391471	0					
ANR	391505	Identifier	_get_zval_ptr_cv_BP_VAR_RW		391471	0					
ANR	391506	ArgumentList	execute_data		391471	1					
ANR	391507	Argument	execute_data		391471	0					
ANR	391508	Identifier	execute_data		391471	0					
ANR	391509	Argument	opline -> op1 . var		391471	1					
ANR	391510	MemberAccess	opline -> op1 . var		391471	0					
ANR	391511	PtrMemberAccess	opline -> op1		391471	0					
ANR	391512	Identifier	opline		391471	0					
ANR	391513	Identifier	op1		391471	1					
ANR	391514	Identifier	var		391471	1					
ANR	391515	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		391471	5					
ANR	391516	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	33815:5:1066147:1066206	391471	0	True				
ANR	391517	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		391471	0		&&			
ANR	391518	EqualityExpression	IS_CV == IS_UNUSED		391471	0		==			
ANR	391519	Identifier	IS_CV		391471	0					
ANR	391520	Identifier	IS_UNUSED		391471	1					
ANR	391521	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		391471	1					
ANR	391522	Callee	UNEXPECTED		391471	0					
ANR	391523	Identifier	UNEXPECTED		391471	0					
ANR	391524	ArgumentList	Z_OBJ_P ( container ) == NULL		391471	1					
ANR	391525	Argument	Z_OBJ_P ( container ) == NULL		391471	0					
ANR	391526	EqualityExpression	Z_OBJ_P ( container ) == NULL		391471	0		==			
ANR	391527	CallExpression	Z_OBJ_P ( container )		391471	0					
ANR	391528	Callee	Z_OBJ_P		391471	0					
ANR	391529	Identifier	Z_OBJ_P		391471	0					
ANR	391530	ArgumentList	container		391471	1					
ANR	391531	Argument	container		391471	0					
ANR	391532	Identifier	container		391471	0					
ANR	391533	Identifier	NULL		391471	1					
ANR	391534	CompoundStatement		9:67:250:250	391471	1					
ANR	391535	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	33816:2:1066213:1066277	391471	0	True				
ANR	391536	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		391471	0					
ANR	391537	Callee	zend_throw_error		391471	0					
ANR	391538	Identifier	zend_throw_error		391471	0					
ANR	391539	ArgumentList	NULL		391471	1					
ANR	391540	Argument	NULL		391471	0					
ANR	391541	Identifier	NULL		391471	0					
ANR	391542	Argument	"""Using $this when not in object context"""		391471	1					
ANR	391543	PrimaryExpression	"""Using $this when not in object context"""		391471	0					
ANR	391544	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	33817:2:1066281:1066341	391471	1	True				
ANR	391545	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		391471	0					
ANR	391546	Callee	FREE_UNFETCHED_OP		391471	0					
ANR	391547	Identifier	FREE_UNFETCHED_OP		391471	0					
ANR	391548	ArgumentList	( opline + 1 ) -> op1_type		391471	1					
ANR	391549	Argument	( opline + 1 ) -> op1_type		391471	0					
ANR	391550	PtrMemberAccess	( opline + 1 ) -> op1_type		391471	0					
ANR	391551	AdditiveExpression	opline + 1		391471	0		+			
ANR	391552	Identifier	opline		391471	0					
ANR	391553	PrimaryExpression	1		391471	1					
ANR	391554	Identifier	op1_type		391471	1					
ANR	391555	Argument	( opline + 1 ) -> op1 . var		391471	1					
ANR	391556	MemberAccess	( opline + 1 ) -> op1 . var		391471	0					
ANR	391557	PtrMemberAccess	( opline + 1 ) -> op1		391471	0					
ANR	391558	AdditiveExpression	opline + 1		391471	0		+			
ANR	391559	Identifier	opline		391471	0					
ANR	391560	PrimaryExpression	1		391471	1					
ANR	391561	Identifier	op1		391471	1					
ANR	391562	Identifier	var		391471	1					
ANR	391563	ExpressionStatement	HANDLE_EXCEPTION ( )	33819:2:1066346:1066364	391471	2	True				
ANR	391564	CallExpression	HANDLE_EXCEPTION ( )		391471	0					
ANR	391565	Callee	HANDLE_EXCEPTION		391471	0					
ANR	391566	Identifier	HANDLE_EXCEPTION		391471	0					
ANR	391567	ArgumentList			391471	1					
ANR	391568	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( container == NULL ) )		391471	6					
ANR	391569	Condition	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )	33821:5:1066374:1066421	391471	0	True				
ANR	391570	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )		391471	0		&&			
ANR	391571	EqualityExpression	IS_CV == IS_VAR		391471	0		==			
ANR	391572	Identifier	IS_CV		391471	0					
ANR	391573	Identifier	IS_VAR		391471	1					
ANR	391574	CallExpression	UNEXPECTED ( container == NULL )		391471	1					
ANR	391575	Callee	UNEXPECTED		391471	0					
ANR	391576	Identifier	UNEXPECTED		391471	0					
ANR	391577	ArgumentList	container == NULL		391471	1					
ANR	391578	Argument	container == NULL		391471	0					
ANR	391579	EqualityExpression	container == NULL		391471	0		==			
ANR	391580	Identifier	container		391471	0					
ANR	391581	Identifier	NULL		391471	1					
ANR	391582	CompoundStatement		15:55:465:465	391471	1					
ANR	391583	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	33822:2:1066428:1066490	391471	0	True				
ANR	391584	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		391471	0					
ANR	391585	Callee	zend_throw_error		391471	0					
ANR	391586	Identifier	zend_throw_error		391471	0					
ANR	391587	ArgumentList	NULL		391471	1					
ANR	391588	Argument	NULL		391471	0					
ANR	391589	Identifier	NULL		391471	0					
ANR	391590	Argument	"""Cannot use string offset as an array"""		391471	1					
ANR	391591	PrimaryExpression	"""Cannot use string offset as an array"""		391471	0					
ANR	391592	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	33823:2:1066494:1066554	391471	1	True				
ANR	391593	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		391471	0					
ANR	391594	Callee	FREE_UNFETCHED_OP		391471	0					
ANR	391595	Identifier	FREE_UNFETCHED_OP		391471	0					
ANR	391596	ArgumentList	( opline + 1 ) -> op1_type		391471	1					
ANR	391597	Argument	( opline + 1 ) -> op1_type		391471	0					
ANR	391598	PtrMemberAccess	( opline + 1 ) -> op1_type		391471	0					
ANR	391599	AdditiveExpression	opline + 1		391471	0		+			
ANR	391600	Identifier	opline		391471	0					
ANR	391601	PrimaryExpression	1		391471	1					
ANR	391602	Identifier	op1_type		391471	1					
ANR	391603	Argument	( opline + 1 ) -> op1 . var		391471	1					
ANR	391604	MemberAccess	( opline + 1 ) -> op1 . var		391471	0					
ANR	391605	PtrMemberAccess	( opline + 1 ) -> op1		391471	0					
ANR	391606	AdditiveExpression	opline + 1		391471	0		+			
ANR	391607	Identifier	opline		391471	0					
ANR	391608	PrimaryExpression	1		391471	1					
ANR	391609	Identifier	op1		391471	1					
ANR	391610	Identifier	var		391471	1					
ANR	391611	ExpressionStatement	HANDLE_EXCEPTION ( )	33825:2:1066559:1066577	391471	2	True				
ANR	391612	CallExpression	HANDLE_EXCEPTION ( )		391471	0					
ANR	391613	Callee	HANDLE_EXCEPTION		391471	0					
ANR	391614	Identifier	HANDLE_EXCEPTION		391471	0					
ANR	391615	ArgumentList			391471	1					
ANR	391616	ExpressionStatement	dim = NULL	33828:1:1066584:1066594	391471	7	True				
ANR	391617	AssignmentExpression	dim = NULL		391471	0		=			
ANR	391618	Identifier	dim		391471	0					
ANR	391619	Identifier	NULL		391471	1					
ANR	391620	DoStatement	do		391471	8					
ANR	391621	CompoundStatement		24:4:642:642	391471	0					
ANR	391622	IfStatement	if ( IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		391471	0					
ANR	391623	Condition	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	33831:6:1066609:1066673	391471	0	True				
ANR	391624	OrExpression	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		391471	0		||			
ANR	391625	EqualityExpression	IS_CV == IS_UNUSED		391471	0		==			
ANR	391626	Identifier	IS_CV		391471	0					
ANR	391627	Identifier	IS_UNUSED		391471	1					
ANR	391628	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		391471	1					
ANR	391629	Callee	UNEXPECTED		391471	0					
ANR	391630	Identifier	UNEXPECTED		391471	0					
ANR	391631	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		391471	1					
ANR	391632	Argument	Z_TYPE_P ( container ) != IS_ARRAY		391471	0					
ANR	391633	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		391471	0		!=			
ANR	391634	CallExpression	Z_TYPE_P ( container )		391471	0					
ANR	391635	Callee	Z_TYPE_P		391471	0					
ANR	391636	Identifier	Z_TYPE_P		391471	0					
ANR	391637	ArgumentList	container		391471	1					
ANR	391638	Argument	container		391471	0					
ANR	391639	Identifier	container		391471	0					
ANR	391640	Identifier	IS_ARRAY		391471	1					
ANR	391641	CompoundStatement		25:73:717:717	391471	1					
ANR	391642	IfStatement	if ( IS_CV != IS_UNUSED )		391471	0					
ANR	391643	Condition	IS_CV != IS_UNUSED	33832:7:1066685:1066702	391471	0	True				
ANR	391644	EqualityExpression	IS_CV != IS_UNUSED		391471	0		!=			
ANR	391645	Identifier	IS_CV		391471	0					
ANR	391646	Identifier	IS_UNUSED		391471	1					
ANR	391647	CompoundStatement		26:27:746:746	391471	1					
ANR	391648	ExpressionStatement	ZVAL_DEREF ( container )	33833:4:1066711:1066732	391471	0	True				
ANR	391649	CallExpression	ZVAL_DEREF ( container )		391471	0					
ANR	391650	Callee	ZVAL_DEREF		391471	0					
ANR	391651	Identifier	ZVAL_DEREF		391471	0					
ANR	391652	ArgumentList	container		391471	1					
ANR	391653	Argument	container		391471	0					
ANR	391654	Identifier	container		391471	0					
ANR	391655	IfStatement	if ( IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		391471	1					
ANR	391656	Condition	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	33835:7:1066746:1066809	391471	0	True				
ANR	391657	OrExpression	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		391471	0		||			
ANR	391658	EqualityExpression	IS_CV == IS_UNUSED		391471	0		==			
ANR	391659	Identifier	IS_CV		391471	0					
ANR	391660	Identifier	IS_UNUSED		391471	1					
ANR	391661	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		391471	1					
ANR	391662	Callee	EXPECTED		391471	0					
ANR	391663	Identifier	EXPECTED		391471	0					
ANR	391664	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		391471	1					
ANR	391665	Argument	Z_TYPE_P ( container ) == IS_OBJECT		391471	0					
ANR	391666	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		391471	0		==			
ANR	391667	CallExpression	Z_TYPE_P ( container )		391471	0					
ANR	391668	Callee	Z_TYPE_P		391471	0					
ANR	391669	Identifier	Z_TYPE_P		391471	0					
ANR	391670	ArgumentList	container		391471	1					
ANR	391671	Argument	container		391471	0					
ANR	391672	Identifier	container		391471	0					
ANR	391673	Identifier	IS_OBJECT		391471	1					
ANR	391674	CompoundStatement		29:73:853:853	391471	1					
ANR	391675	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	33836:4:1066818:1066909	391471	0	True				
ANR	391676	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		391471	0		=			
ANR	391677	Identifier	value		391471	0					
ANR	391678	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		391471	1					
ANR	391679	Callee	get_zval_ptr_r		391471	0					
ANR	391680	Identifier	get_zval_ptr_r		391471	0					
ANR	391681	ArgumentList	( opline + 1 ) -> op1_type		391471	1					
ANR	391682	Argument	( opline + 1 ) -> op1_type		391471	0					
ANR	391683	PtrMemberAccess	( opline + 1 ) -> op1_type		391471	0					
ANR	391684	AdditiveExpression	opline + 1		391471	0		+			
ANR	391685	Identifier	opline		391471	0					
ANR	391686	PrimaryExpression	1		391471	1					
ANR	391687	Identifier	op1_type		391471	1					
ANR	391688	Argument	( opline + 1 ) -> op1		391471	1					
ANR	391689	PtrMemberAccess	( opline + 1 ) -> op1		391471	0					
ANR	391690	AdditiveExpression	opline + 1		391471	0		+			
ANR	391691	Identifier	opline		391471	0					
ANR	391692	PrimaryExpression	1		391471	1					
ANR	391693	Identifier	op1		391471	1					
ANR	391694	Argument	execute_data		391471	2					
ANR	391695	Identifier	execute_data		391471	0					
ANR	391696	Argument	& free_op_data1		391471	3					
ANR	391697	UnaryOperationExpression	& free_op_data1		391471	0					
ANR	391698	UnaryOperator	&		391471	0					
ANR	391699	Identifier	free_op_data1		391471	1					
ANR	391700	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	33837:4:1066915:1067053	391471	1	True				
ANR	391701	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		391471	0					
ANR	391702	Callee	zend_binary_assign_op_obj_dim		391471	0					
ANR	391703	Identifier	zend_binary_assign_op_obj_dim		391471	0					
ANR	391704	ArgumentList	container		391471	1					
ANR	391705	Argument	container		391471	0					
ANR	391706	Identifier	container		391471	0					
ANR	391707	Argument	dim		391471	1					
ANR	391708	Identifier	dim		391471	0					
ANR	391709	Argument	value		391471	2					
ANR	391710	Identifier	value		391471	0					
ANR	391711	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		391471	3					
ANR	391712	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		391471	0					
ANR	391713	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		391471	0					
ANR	391714	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		391471	0					
ANR	391715	Callee	UNEXPECTED		391471	0					
ANR	391716	Identifier	UNEXPECTED		391471	0					
ANR	391717	ArgumentList	RETURN_VALUE_USED ( opline )		391471	1					
ANR	391718	Argument	RETURN_VALUE_USED ( opline )		391471	0					
ANR	391719	CallExpression	RETURN_VALUE_USED ( opline )		391471	0					
ANR	391720	Callee	RETURN_VALUE_USED		391471	0					
ANR	391721	Identifier	RETURN_VALUE_USED		391471	0					
ANR	391722	ArgumentList	opline		391471	1					
ANR	391723	Argument	opline		391471	0					
ANR	391724	Identifier	opline		391471	0					
ANR	391725	CallExpression	EX_VAR ( opline -> result . var )		391471	1					
ANR	391726	Callee	EX_VAR		391471	0					
ANR	391727	Identifier	EX_VAR		391471	0					
ANR	391728	ArgumentList	opline -> result . var		391471	1					
ANR	391729	Argument	opline -> result . var		391471	0					
ANR	391730	MemberAccess	opline -> result . var		391471	0					
ANR	391731	PtrMemberAccess	opline -> result		391471	0					
ANR	391732	Identifier	opline		391471	0					
ANR	391733	Identifier	result		391471	1					
ANR	391734	Identifier	var		391471	1					
ANR	391735	Identifier	NULL		391471	2					
ANR	391736	Argument	binary_op		391471	4					
ANR	391737	Identifier	binary_op		391471	0					
ANR	391738	BreakStatement	break ;	33838:4:1067059:1067064	391471	2	True				
ANR	391739	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_UNUSED )"	33842:2:1067078:1067141	391471	1	True				
ANR	391740	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_UNUSED )"		391471	0					
ANR	391741	Callee	zend_fetch_dimension_address_RW		391471	0					
ANR	391742	Identifier	zend_fetch_dimension_address_RW		391471	0					
ANR	391743	ArgumentList	& rv		391471	1					
ANR	391744	Argument	& rv		391471	0					
ANR	391745	UnaryOperationExpression	& rv		391471	0					
ANR	391746	UnaryOperator	&		391471	0					
ANR	391747	Identifier	rv		391471	1					
ANR	391748	Argument	container		391471	1					
ANR	391749	Identifier	container		391471	0					
ANR	391750	Argument	dim		391471	2					
ANR	391751	Identifier	dim		391471	0					
ANR	391752	Argument	IS_UNUSED		391471	3					
ANR	391753	Identifier	IS_UNUSED		391471	0					
ANR	391754	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	33843:2:1067145:1067236	391471	2	True				
ANR	391755	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		391471	0		=			
ANR	391756	Identifier	value		391471	0					
ANR	391757	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		391471	1					
ANR	391758	Callee	get_zval_ptr_r		391471	0					
ANR	391759	Identifier	get_zval_ptr_r		391471	0					
ANR	391760	ArgumentList	( opline + 1 ) -> op1_type		391471	1					
ANR	391761	Argument	( opline + 1 ) -> op1_type		391471	0					
ANR	391762	PtrMemberAccess	( opline + 1 ) -> op1_type		391471	0					
ANR	391763	AdditiveExpression	opline + 1		391471	0		+			
ANR	391764	Identifier	opline		391471	0					
ANR	391765	PrimaryExpression	1		391471	1					
ANR	391766	Identifier	op1_type		391471	1					
ANR	391767	Argument	( opline + 1 ) -> op1		391471	1					
ANR	391768	PtrMemberAccess	( opline + 1 ) -> op1		391471	0					
ANR	391769	AdditiveExpression	opline + 1		391471	0		+			
ANR	391770	Identifier	opline		391471	0					
ANR	391771	PrimaryExpression	1		391471	1					
ANR	391772	Identifier	op1		391471	1					
ANR	391773	Argument	execute_data		391471	2					
ANR	391774	Identifier	execute_data		391471	0					
ANR	391775	Argument	& free_op_data1		391471	3					
ANR	391776	UnaryOperationExpression	& free_op_data1		391471	0					
ANR	391777	UnaryOperator	&		391471	0					
ANR	391778	Identifier	free_op_data1		391471	1					
ANR	391779	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	33844:2:1067240:1067278	391471	3	True				
ANR	391780	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		391471	0					
ANR	391781	Callee	ZEND_ASSERT		391471	0					
ANR	391782	Identifier	ZEND_ASSERT		391471	0					
ANR	391783	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		391471	1					
ANR	391784	Argument	Z_TYPE ( rv ) == IS_INDIRECT		391471	0					
ANR	391785	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		391471	0		==			
ANR	391786	CallExpression	Z_TYPE ( rv )		391471	0					
ANR	391787	Callee	Z_TYPE		391471	0					
ANR	391788	Identifier	Z_TYPE		391471	0					
ANR	391789	ArgumentList	rv		391471	1					
ANR	391790	Argument	rv		391471	0					
ANR	391791	Identifier	rv		391471	0					
ANR	391792	Identifier	IS_INDIRECT		391471	1					
ANR	391793	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	33845:2:1067282:1067306	391471	4	True				
ANR	391794	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		391471	0		=			
ANR	391795	Identifier	var_ptr		391471	0					
ANR	391796	CallExpression	Z_INDIRECT ( rv )		391471	1					
ANR	391797	Callee	Z_INDIRECT		391471	0					
ANR	391798	Identifier	Z_INDIRECT		391471	0					
ANR	391799	ArgumentList	rv		391471	1					
ANR	391800	Argument	rv		391471	0					
ANR	391801	Identifier	rv		391471	0					
ANR	391802	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		391471	5					
ANR	391803	Condition	UNEXPECTED ( var_ptr == NULL )	33847:6:1067315:1067341	391471	0	True				
ANR	391804	CallExpression	UNEXPECTED ( var_ptr == NULL )		391471	0					
ANR	391805	Callee	UNEXPECTED		391471	0					
ANR	391806	Identifier	UNEXPECTED		391471	0					
ANR	391807	ArgumentList	var_ptr == NULL		391471	1					
ANR	391808	Argument	var_ptr == NULL		391471	0					
ANR	391809	EqualityExpression	var_ptr == NULL		391471	0		==			
ANR	391810	Identifier	var_ptr		391471	0					
ANR	391811	Identifier	NULL		391471	1					
ANR	391812	CompoundStatement		41:35:1385:1385	391471	1					
ANR	391813	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	33848:3:1067349:1067448	391471	0	True				
ANR	391814	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		391471	0					
ANR	391815	Callee	zend_throw_error		391471	0					
ANR	391816	Identifier	zend_throw_error		391471	0					
ANR	391817	ArgumentList	NULL		391471	1					
ANR	391818	Argument	NULL		391471	0					
ANR	391819	Identifier	NULL		391471	0					
ANR	391820	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		391471	1					
ANR	391821	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		391471	0					
ANR	391822	ExpressionStatement	FREE_OP ( free_op_data1 )	33850:3:1067454:1067476	391471	1	True				
ANR	391823	CallExpression	FREE_OP ( free_op_data1 )		391471	0					
ANR	391824	Callee	FREE_OP		391471	0					
ANR	391825	Identifier	FREE_OP		391471	0					
ANR	391826	ArgumentList	free_op_data1		391471	1					
ANR	391827	Argument	free_op_data1		391471	0					
ANR	391828	Identifier	free_op_data1		391471	0					
ANR	391829	ExpressionStatement	HANDLE_EXCEPTION ( )	33852:3:1067482:1067500	391471	2	True				
ANR	391830	CallExpression	HANDLE_EXCEPTION ( )		391471	0					
ANR	391831	Callee	HANDLE_EXCEPTION		391471	0					
ANR	391832	Identifier	HANDLE_EXCEPTION		391471	0					
ANR	391833	ArgumentList			391471	1					
ANR	391834	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		391471	6					
ANR	391835	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	33855:6:1067513:1067550	391471	0	True				
ANR	391836	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		391471	0					
ANR	391837	Callee	UNEXPECTED		391471	0					
ANR	391838	Identifier	UNEXPECTED		391471	0					
ANR	391839	ArgumentList	var_ptr == & EG ( error_zval )		391471	1					
ANR	391840	Argument	var_ptr == & EG ( error_zval )		391471	0					
ANR	391841	EqualityExpression	var_ptr == & EG ( error_zval )		391471	0		==			
ANR	391842	Identifier	var_ptr		391471	0					
ANR	391843	UnaryOperationExpression	& EG ( error_zval )		391471	1					
ANR	391844	UnaryOperator	&		391471	0					
ANR	391845	CallExpression	EG ( error_zval )		391471	1					
ANR	391846	Callee	EG		391471	0					
ANR	391847	Identifier	EG		391471	0					
ANR	391848	ArgumentList	error_zval		391471	1					
ANR	391849	Argument	error_zval		391471	0					
ANR	391850	Identifier	error_zval		391471	0					
ANR	391851	CompoundStatement		49:46:1594:1594	391471	1					
ANR	391852	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		391471	0					
ANR	391853	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	33856:7:1067562:1067598	391471	0	True				
ANR	391854	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		391471	0					
ANR	391855	Callee	UNEXPECTED		391471	0					
ANR	391856	Identifier	UNEXPECTED		391471	0					
ANR	391857	ArgumentList	RETURN_VALUE_USED ( opline )		391471	1					
ANR	391858	Argument	RETURN_VALUE_USED ( opline )		391471	0					
ANR	391859	CallExpression	RETURN_VALUE_USED ( opline )		391471	0					
ANR	391860	Callee	RETURN_VALUE_USED		391471	0					
ANR	391861	Identifier	RETURN_VALUE_USED		391471	0					
ANR	391862	ArgumentList	opline		391471	1					
ANR	391863	Argument	opline		391471	0					
ANR	391864	Identifier	opline		391471	0					
ANR	391865	CompoundStatement		50:46:1642:1642	391471	1					
ANR	391866	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	33857:4:1067607:1067644	391471	0	True				
ANR	391867	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		391471	0					
ANR	391868	Callee	ZVAL_NULL		391471	0					
ANR	391869	Identifier	ZVAL_NULL		391471	0					
ANR	391870	ArgumentList	EX_VAR ( opline -> result . var )		391471	1					
ANR	391871	Argument	EX_VAR ( opline -> result . var )		391471	0					
ANR	391872	CallExpression	EX_VAR ( opline -> result . var )		391471	0					
ANR	391873	Callee	EX_VAR		391471	0					
ANR	391874	Identifier	EX_VAR		391471	0					
ANR	391875	ArgumentList	opline -> result . var		391471	1					
ANR	391876	Argument	opline -> result . var		391471	0					
ANR	391877	MemberAccess	opline -> result . var		391471	0					
ANR	391878	PtrMemberAccess	opline -> result		391471	0					
ANR	391879	Identifier	opline		391471	0					
ANR	391880	Identifier	result		391471	1					
ANR	391881	Identifier	var		391471	1					
ANR	391882	ElseStatement	else		391471	0					
ANR	391883	CompoundStatement		53:9:1701:1701	391471	0					
ANR	391884	ExpressionStatement	ZVAL_DEREF ( var_ptr )	33860:3:1067665:1067684	391471	0	True				
ANR	391885	CallExpression	ZVAL_DEREF ( var_ptr )		391471	0					
ANR	391886	Callee	ZVAL_DEREF		391471	0					
ANR	391887	Identifier	ZVAL_DEREF		391471	0					
ANR	391888	ArgumentList	var_ptr		391471	1					
ANR	391889	Argument	var_ptr		391471	0					
ANR	391890	Identifier	var_ptr		391471	0					
ANR	391891	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	33861:3:1067689:1067717	391471	1	True				
ANR	391892	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		391471	0					
ANR	391893	Callee	SEPARATE_ZVAL_NOREF		391471	0					
ANR	391894	Identifier	SEPARATE_ZVAL_NOREF		391471	0					
ANR	391895	ArgumentList	var_ptr		391471	1					
ANR	391896	Argument	var_ptr		391471	0					
ANR	391897	Identifier	var_ptr		391471	0					
ANR	391898	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	33863:3:1067723:1067757	391471	2	True				
ANR	391899	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		391471	0					
ANR	391900	Callee	binary_op		391471	0					
ANR	391901	Identifier	binary_op		391471	0					
ANR	391902	ArgumentList	var_ptr		391471	1					
ANR	391903	Argument	var_ptr		391471	0					
ANR	391904	Identifier	var_ptr		391471	0					
ANR	391905	Argument	var_ptr		391471	1					
ANR	391906	Identifier	var_ptr		391471	0					
ANR	391907	Argument	value		391471	2					
ANR	391908	Identifier	value		391471	0					
ANR	391909	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		391471	3					
ANR	391910	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	33865:7:1067767:1067803	391471	0	True				
ANR	391911	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		391471	0					
ANR	391912	Callee	UNEXPECTED		391471	0					
ANR	391913	Identifier	UNEXPECTED		391471	0					
ANR	391914	ArgumentList	RETURN_VALUE_USED ( opline )		391471	1					
ANR	391915	Argument	RETURN_VALUE_USED ( opline )		391471	0					
ANR	391916	CallExpression	RETURN_VALUE_USED ( opline )		391471	0					
ANR	391917	Callee	RETURN_VALUE_USED		391471	0					
ANR	391918	Identifier	RETURN_VALUE_USED		391471	0					
ANR	391919	ArgumentList	opline		391471	1					
ANR	391920	Argument	opline		391471	0					
ANR	391921	Identifier	opline		391471	0					
ANR	391922	CompoundStatement		59:46:1847:1847	391471	1					
ANR	391923	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	33866:4:1067812:1067858	391471	0	True				
ANR	391924	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		391471	0					
ANR	391925	Callee	ZVAL_COPY		391471	0					
ANR	391926	Identifier	ZVAL_COPY		391471	0					
ANR	391927	ArgumentList	EX_VAR ( opline -> result . var )		391471	1					
ANR	391928	Argument	EX_VAR ( opline -> result . var )		391471	0					
ANR	391929	CallExpression	EX_VAR ( opline -> result . var )		391471	0					
ANR	391930	Callee	EX_VAR		391471	0					
ANR	391931	Identifier	EX_VAR		391471	0					
ANR	391932	ArgumentList	opline -> result . var		391471	1					
ANR	391933	Argument	opline -> result . var		391471	0					
ANR	391934	MemberAccess	opline -> result . var		391471	0					
ANR	391935	PtrMemberAccess	opline -> result		391471	0					
ANR	391936	Identifier	opline		391471	0					
ANR	391937	Identifier	result		391471	1					
ANR	391938	Identifier	var		391471	1					
ANR	391939	Argument	var_ptr		391471	1					
ANR	391940	Identifier	var_ptr		391471	0					
ANR	391941	Condition	0	33869:10:1067879:1067879	391471	1	True				
ANR	391942	PrimaryExpression	0		391471	0					
ANR	391943	ExpressionStatement	FREE_OP ( free_op_data1 )	33871:1:1067885:1067907	391471	9	True				
ANR	391944	CallExpression	FREE_OP ( free_op_data1 )		391471	0					
ANR	391945	Callee	FREE_OP		391471	0					
ANR	391946	Identifier	FREE_OP		391471	0					
ANR	391947	ArgumentList	free_op_data1		391471	1					
ANR	391948	Argument	free_op_data1		391471	0					
ANR	391949	Identifier	free_op_data1		391471	0					
ANR	391950	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	33873:1:1067911:1067939	391471	10	True				
ANR	391951	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		391471	0					
ANR	391952	Callee	ZEND_VM_NEXT_OPCODE_EX		391471	0					
ANR	391953	Identifier	ZEND_VM_NEXT_OPCODE_EX		391471	0					
ANR	391954	ArgumentList	1		391471	1					
ANR	391955	Argument	1		391471	0					
ANR	391956	PrimaryExpression	1		391471	0					
ANR	391957	Argument	2		391471	1					
ANR	391958	PrimaryExpression	2		391471	0					
ANR	391959	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		391471	1					
ANR	391960	Identifier	zend_binary_assign_op_dim_helper_SPEC_CV_UNUSED		391471	2					
ANR	391961	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		391471	3					
ANR	391962	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	33806:93:1065904:1065955	391471	0	True				
ANR	391963	ParameterType	binary_op_type binary_op		391471	0					
ANR	391964	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		391471	1					
ANR	391965	CFGEntryNode	ENTRY		391471		True				
ANR	391966	CFGExitNode	EXIT		391471		True				
ANR	391967	Symbol	container		391471						
ANR	391968	Symbol	opline -> op1		391471						
ANR	391969	Symbol	IS_CV		391471						
ANR	391970	Symbol	rv		391471						
ANR	391971	Symbol	Z_OBJ_P		391471						
ANR	391972	Symbol	dim		391471						
ANR	391973	Symbol	Z_TYPE		391471						
ANR	391974	Symbol	free_op_data1		391471						
ANR	391975	Symbol	& EG		391471						
ANR	391976	Symbol	var_ptr		391471						
ANR	391977	Symbol	execute_data		391471						
ANR	391978	Symbol	opline -> result		391471						
ANR	391979	Symbol	( opline + 1 ) -> op1		391471						
ANR	391980	Symbol	UNEXPECTED		391471						
ANR	391981	Symbol	RETURN_VALUE_USED		391471						
ANR	391982	Symbol	( opline + 1 ) -> op1 . var		391471						
ANR	391983	Symbol	opline		391471						
ANR	391984	Symbol	get_zval_ptr_r		391471						
ANR	391985	Symbol	Z_INDIRECT		391471						
ANR	391986	Symbol	IS_ARRAY		391471						
ANR	391987	Symbol	opline -> op1 . var		391471						
ANR	391988	Symbol	value		391471						
ANR	391989	Symbol	binary_op		391471						
ANR	391990	Symbol	( opline + 1 ) -> op1_type		391471						
ANR	391991	Symbol	NULL		391471						
ANR	391992	Symbol	Z_TYPE_P		391471						
ANR	391993	Symbol	& rv		391471						
ANR	391994	Symbol	* opline		391471						
ANR	391995	Symbol	error_zval		391471						
ANR	391996	Symbol	_get_zval_ptr_cv_BP_VAR_RW		391471						
ANR	391997	Symbol	EX_VAR		391471						
ANR	391998	Symbol	IS_OBJECT		391471						
ANR	391999	Symbol	IS_VAR		391471						
ANR	392000	Symbol	EXPECTED		391471						
ANR	392001	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		391471						
ANR	392002	Symbol	& free_op_data1		391471						
ANR	392003	Symbol	opline -> result . var		391471						
ANR	392004	Symbol	IS_UNUSED		391471						
ANR	392005	Symbol	IS_INDIRECT		391471						
ANR	392006	Function	zend_fetch_var_address_helper_SPEC_CV_UNUSED	34116:0:1078653:1083276							
ANR	392007	FunctionDef	zend_fetch_var_address_helper_SPEC_CV_UNUSED (int type ZEND_OPCODE_HANDLER_ARGS_DC)		392006	0					
ANR	392008	CompoundStatement		34117:0:1078781:1083276	392006	0					
ANR	392009	IdentifierDeclStatement	USE_OPLINE zval * varname ;	34118:1:1078784:1078810	392006	0	True				
ANR	392010	IdentifierDecl	* varname		392006	0					
ANR	392011	IdentifierDeclType	USE_OPLINE zval *		392006	0					
ANR	392012	Identifier	varname		392006	1					
ANR	392013	IdentifierDeclStatement	zval * retval ;	34121:1:1078813:1078825	392006	1	True				
ANR	392014	IdentifierDecl	* retval		392006	0					
ANR	392015	IdentifierDeclType	zval *		392006	0					
ANR	392016	Identifier	retval		392006	1					
ANR	392017	IdentifierDeclStatement	zend_string * name ;	34122:1:1078828:1078845	392006	2	True				
ANR	392018	IdentifierDecl	* name		392006	0					
ANR	392019	IdentifierDeclType	zend_string *		392006	0					
ANR	392020	Identifier	name		392006	1					
ANR	392021	IdentifierDeclStatement	HashTable * target_symbol_table ;	34123:1:1078848:1078878	392006	3	True				
ANR	392022	IdentifierDecl	* target_symbol_table		392006	0					
ANR	392023	IdentifierDeclType	HashTable *		392006	0					
ANR	392024	Identifier	target_symbol_table		392006	1					
ANR	392025	ExpressionStatement	SAVE_OPLINE ( )	34125:1:1078882:1078895	392006	4	True				
ANR	392026	CallExpression	SAVE_OPLINE ( )		392006	0					
ANR	392027	Callee	SAVE_OPLINE		392006	0					
ANR	392028	Identifier	SAVE_OPLINE		392006	0					
ANR	392029	ArgumentList			392006	1					
ANR	392030	ExpressionStatement	"varname = _get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"	34126:1:1078898:1078961	392006	5	True				
ANR	392031	AssignmentExpression	"varname = _get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"		392006	0		=			
ANR	392032	Identifier	varname		392006	0					
ANR	392033	CallExpression	"_get_zval_ptr_cv_undef ( execute_data , opline -> op1 . var )"		392006	1					
ANR	392034	Callee	_get_zval_ptr_cv_undef		392006	0					
ANR	392035	Identifier	_get_zval_ptr_cv_undef		392006	0					
ANR	392036	ArgumentList	execute_data		392006	1					
ANR	392037	Argument	execute_data		392006	0					
ANR	392038	Identifier	execute_data		392006	0					
ANR	392039	Argument	opline -> op1 . var		392006	1					
ANR	392040	MemberAccess	opline -> op1 . var		392006	0					
ANR	392041	PtrMemberAccess	opline -> op1		392006	0					
ANR	392042	Identifier	opline		392006	0					
ANR	392043	Identifier	op1		392006	1					
ANR	392044	Identifier	var		392006	1					
ANR	392045	IfStatement	if ( IS_CV == IS_CONST )		392006	6					
ANR	392046	Condition	IS_CV == IS_CONST	34128:6:1078970:1078986	392006	0	True				
ANR	392047	EqualityExpression	IS_CV == IS_CONST		392006	0		==			
ANR	392048	Identifier	IS_CV		392006	0					
ANR	392049	Identifier	IS_CONST		392006	1					
ANR	392050	CompoundStatement		12:25:207:207	392006	1					
ANR	392051	ExpressionStatement	name = Z_STR_P ( varname )	34129:2:1078993:1079016	392006	0	True				
ANR	392052	AssignmentExpression	name = Z_STR_P ( varname )		392006	0		=			
ANR	392053	Identifier	name		392006	0					
ANR	392054	CallExpression	Z_STR_P ( varname )		392006	1					
ANR	392055	Callee	Z_STR_P		392006	0					
ANR	392056	Identifier	Z_STR_P		392006	0					
ANR	392057	ArgumentList	varname		392006	1					
ANR	392058	Argument	varname		392006	0					
ANR	392059	Identifier	varname		392006	0					
ANR	392060	ElseStatement	else		392006	0					
ANR	392061	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		392006	0					
ANR	392062	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	34130:12:1079030:1079069	392006	0	True				
ANR	392063	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		392006	0					
ANR	392064	Callee	EXPECTED		392006	0					
ANR	392065	Identifier	EXPECTED		392006	0					
ANR	392066	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		392006	1					
ANR	392067	Argument	Z_TYPE_P ( varname ) == IS_STRING		392006	0					
ANR	392068	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		392006	0		==			
ANR	392069	CallExpression	Z_TYPE_P ( varname )		392006	0					
ANR	392070	Callee	Z_TYPE_P		392006	0					
ANR	392071	Identifier	Z_TYPE_P		392006	0					
ANR	392072	ArgumentList	varname		392006	1					
ANR	392073	Argument	varname		392006	0					
ANR	392074	Identifier	varname		392006	0					
ANR	392075	Identifier	IS_STRING		392006	1					
ANR	392076	CompoundStatement		14:54:290:290	392006	1					
ANR	392077	ExpressionStatement	name = Z_STR_P ( varname )	34131:2:1079076:1079099	392006	0	True				
ANR	392078	AssignmentExpression	name = Z_STR_P ( varname )		392006	0		=			
ANR	392079	Identifier	name		392006	0					
ANR	392080	CallExpression	Z_STR_P ( varname )		392006	1					
ANR	392081	Callee	Z_STR_P		392006	0					
ANR	392082	Identifier	Z_STR_P		392006	0					
ANR	392083	ArgumentList	varname		392006	1					
ANR	392084	Argument	varname		392006	0					
ANR	392085	Identifier	varname		392006	0					
ANR	392086	ExpressionStatement	zend_string_addref ( name )	34132:2:1079103:1079127	392006	1	True				
ANR	392087	CallExpression	zend_string_addref ( name )		392006	0					
ANR	392088	Callee	zend_string_addref		392006	0					
ANR	392089	Identifier	zend_string_addref		392006	0					
ANR	392090	ArgumentList	name		392006	1					
ANR	392091	Argument	name		392006	0					
ANR	392092	Identifier	name		392006	0					
ANR	392093	ElseStatement	else		392006	0					
ANR	392094	CompoundStatement		17:8:355:355	392006	0					
ANR	392095	IfStatement	if ( IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		392006	0					
ANR	392096	Condition	IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	34134:6:1079145:1079203	392006	0	True				
ANR	392097	AndExpression	IS_CV == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		392006	0		&&			
ANR	392098	EqualityExpression	IS_CV == IS_CV		392006	0		==			
ANR	392099	Identifier	IS_CV		392006	0					
ANR	392100	Identifier	IS_CV		392006	1					
ANR	392101	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		392006	1					
ANR	392102	Callee	UNEXPECTED		392006	0					
ANR	392103	Identifier	UNEXPECTED		392006	0					
ANR	392104	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		392006	1					
ANR	392105	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		392006	0					
ANR	392106	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		392006	0		==			
ANR	392107	CallExpression	Z_TYPE_P ( varname )		392006	0					
ANR	392108	Callee	Z_TYPE_P		392006	0					
ANR	392109	Identifier	Z_TYPE_P		392006	0					
ANR	392110	ArgumentList	varname		392006	1					
ANR	392111	Argument	varname		392006	0					
ANR	392112	Identifier	varname		392006	0					
ANR	392113	Identifier	IS_UNDEF		392006	1					
ANR	392114	CompoundStatement		18:67:424:424	392006	1					
ANR	392115	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	34135:3:1079211:1079246	392006	0	True				
ANR	392116	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		392006	0					
ANR	392117	Callee	GET_OP1_UNDEF_CV		392006	0					
ANR	392118	Identifier	GET_OP1_UNDEF_CV		392006	0					
ANR	392119	ArgumentList	varname		392006	1					
ANR	392120	Argument	varname		392006	0					
ANR	392121	Identifier	varname		392006	0					
ANR	392122	Argument	BP_VAR_R		392006	1					
ANR	392123	Identifier	BP_VAR_R		392006	0					
ANR	392124	ExpressionStatement	name = zval_get_string ( varname )	34137:2:1079254:1079285	392006	1	True				
ANR	392125	AssignmentExpression	name = zval_get_string ( varname )		392006	0		=			
ANR	392126	Identifier	name		392006	0					
ANR	392127	CallExpression	zval_get_string ( varname )		392006	1					
ANR	392128	Callee	zval_get_string		392006	0					
ANR	392129	Identifier	zval_get_string		392006	0					
ANR	392130	ArgumentList	varname		392006	1					
ANR	392131	Argument	varname		392006	0					
ANR	392132	Identifier	varname		392006	0					
ANR	392133	IfStatement	if ( IS_UNUSED != IS_UNUSED )		392006	7					
ANR	392134	Condition	IS_UNUSED != IS_UNUSED	34140:5:1079296:1079317	392006	0	True				
ANR	392135	EqualityExpression	IS_UNUSED != IS_UNUSED		392006	0		!=			
ANR	392136	Identifier	IS_UNUSED		392006	0					
ANR	392137	Identifier	IS_UNUSED		392006	1					
ANR	392138	CompoundStatement		25:2:542:562	392006	1					
ANR	392139	IdentifierDeclStatement	zend_class_entry * ce ;	34141:2:1079324:1079344	392006	0	True				
ANR	392140	IdentifierDecl	* ce		392006	0					
ANR	392141	IdentifierDeclType	zend_class_entry *		392006	0					
ANR	392142	Identifier	ce		392006	1					
ANR	392143	IfStatement	if ( IS_UNUSED == IS_CONST )		392006	1					
ANR	392144	Condition	IS_UNUSED == IS_CONST	34143:6:1079353:1079373	392006	0	True				
ANR	392145	EqualityExpression	IS_UNUSED == IS_CONST		392006	0		==			
ANR	392146	Identifier	IS_UNUSED		392006	0					
ANR	392147	Identifier	IS_CONST		392006	1					
ANR	392148	CompoundStatement		27:29:594:594	392006	1					
ANR	392149	IfStatement	if ( IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		392006	0					
ANR	392150	Condition	IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	34144:7:1079385:1079482	392006	0	True				
ANR	392151	AndExpression	IS_CV == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		392006	0		&&			
ANR	392152	EqualityExpression	IS_CV == IS_CONST		392006	0		==			
ANR	392153	Identifier	IS_CV		392006	0					
ANR	392154	Identifier	IS_CONST		392006	1					
ANR	392155	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		392006	1					
ANR	392156	Callee	EXPECTED		392006	0					
ANR	392157	Identifier	EXPECTED		392006	0					
ANR	392158	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		392006	1					
ANR	392159	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		392006	0					
ANR	392160	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		392006	0		!=			
ANR	392161	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		392006	0		=			
ANR	392162	Identifier	ce		392006	0					
ANR	392163	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		392006	1					
ANR	392164	Callee	CACHED_PTR		392006	0					
ANR	392165	Identifier	CACHED_PTR		392006	0					
ANR	392166	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	1					
ANR	392167	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	0					
ANR	392168	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	0					
ANR	392169	Callee	Z_CACHE_SLOT_P		392006	0					
ANR	392170	Identifier	Z_CACHE_SLOT_P		392006	0					
ANR	392171	ArgumentList	EX_CONSTANT ( opline -> op1 )		392006	1					
ANR	392172	Argument	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392173	CallExpression	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392174	Callee	EX_CONSTANT		392006	0					
ANR	392175	Identifier	EX_CONSTANT		392006	0					
ANR	392176	ArgumentList	opline -> op1		392006	1					
ANR	392177	Argument	opline -> op1		392006	0					
ANR	392178	PtrMemberAccess	opline -> op1		392006	0					
ANR	392179	Identifier	opline		392006	0					
ANR	392180	Identifier	op1		392006	1					
ANR	392181	Identifier	NULL		392006	1					
ANR	392182	CompoundStatement		28:107:703:703	392006	1					
ANR	392183	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	34145:4:1079491:1079568	392006	0	True				
ANR	392184	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		392006	0		=			
ANR	392185	Identifier	retval		392006	0					
ANR	392186	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		392006	1					
ANR	392187	Callee	CACHED_PTR		392006	0					
ANR	392188	Identifier	CACHED_PTR		392006	0					
ANR	392189	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		392006	1					
ANR	392190	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		392006	0					
ANR	392191	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		392006	0		+			
ANR	392192	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	0					
ANR	392193	Callee	Z_CACHE_SLOT_P		392006	0					
ANR	392194	Identifier	Z_CACHE_SLOT_P		392006	0					
ANR	392195	ArgumentList	EX_CONSTANT ( opline -> op1 )		392006	1					
ANR	392196	Argument	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392197	CallExpression	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392198	Callee	EX_CONSTANT		392006	0					
ANR	392199	Identifier	EX_CONSTANT		392006	0					
ANR	392200	ArgumentList	opline -> op1		392006	1					
ANR	392201	Argument	opline -> op1		392006	0					
ANR	392202	PtrMemberAccess	opline -> op1		392006	0					
ANR	392203	Identifier	opline		392006	0					
ANR	392204	Identifier	op1		392006	1					
ANR	392205	SizeofExpression	sizeof ( void * )		392006	1					
ANR	392206	Sizeof	sizeof		392006	0					
ANR	392207	SizeofOperand	void *		392006	1					
ANR	392208	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		392006	1					
ANR	392209	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	34148:8:1079630:1079670	392006	0	True				
ANR	392210	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		392006	0					
ANR	392211	Callee	UNEXPECTED		392006	0					
ANR	392212	Identifier	UNEXPECTED		392006	0					
ANR	392213	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		392006	1					
ANR	392214	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		392006	0					
ANR	392215	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		392006	0		==			
ANR	392216	CallExpression	CE_STATIC_MEMBERS ( ce )		392006	0					
ANR	392217	Callee	CE_STATIC_MEMBERS		392006	0					
ANR	392218	Identifier	CE_STATIC_MEMBERS		392006	0					
ANR	392219	ArgumentList	ce		392006	1					
ANR	392220	Argument	ce		392006	0					
ANR	392221	Identifier	ce		392006	0					
ANR	392222	Identifier	NULL		392006	1					
ANR	392223	CompoundStatement		32:51:891:891	392006	1					
ANR	392224	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	34149:5:1079680:1079787	392006	0	True				
ANR	392225	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		392006	0					
ANR	392226	Callee	zend_throw_error		392006	0					
ANR	392227	Identifier	zend_throw_error		392006	0					
ANR	392228	ArgumentList	NULL		392006	1					
ANR	392229	Argument	NULL		392006	0					
ANR	392230	Identifier	NULL		392006	0					
ANR	392231	Argument	"""Access to undeclared static property: %s::$%s"""		392006	1					
ANR	392232	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		392006	0					
ANR	392233	Argument	ZSTR_VAL ( ce -> name )		392006	2					
ANR	392234	CallExpression	ZSTR_VAL ( ce -> name )		392006	0					
ANR	392235	Callee	ZSTR_VAL		392006	0					
ANR	392236	Identifier	ZSTR_VAL		392006	0					
ANR	392237	ArgumentList	ce -> name		392006	1					
ANR	392238	Argument	ce -> name		392006	0					
ANR	392239	PtrMemberAccess	ce -> name		392006	0					
ANR	392240	Identifier	ce		392006	0					
ANR	392241	Identifier	name		392006	1					
ANR	392242	Argument	ZSTR_VAL ( name )		392006	3					
ANR	392243	CallExpression	ZSTR_VAL ( name )		392006	0					
ANR	392244	Callee	ZSTR_VAL		392006	0					
ANR	392245	Identifier	ZSTR_VAL		392006	0					
ANR	392246	ArgumentList	name		392006	1					
ANR	392247	Argument	name		392006	0					
ANR	392248	Identifier	name		392006	0					
ANR	392249	ExpressionStatement	HANDLE_EXCEPTION ( )	34151:5:1079795:1079813	392006	1	True				
ANR	392250	CallExpression	HANDLE_EXCEPTION ( )		392006	0					
ANR	392251	Callee	HANDLE_EXCEPTION		392006	0					
ANR	392252	Identifier	HANDLE_EXCEPTION		392006	0					
ANR	392253	ArgumentList			392006	1					
ANR	392254	GotoStatement	goto fetch_var_return ;	34154:4:1079826:1079847	392006	2	True				
ANR	392255	Identifier	fetch_var_return		392006	0					
ANR	392256	ElseStatement	else		392006	0					
ANR	392257	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		392006	0					
ANR	392258	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	34155:14:1079863:1079941	392006	0	True				
ANR	392259	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		392006	0					
ANR	392260	Callee	UNEXPECTED		392006	0					
ANR	392261	Identifier	UNEXPECTED		392006	0					
ANR	392262	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		392006	1					
ANR	392263	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		392006	0					
ANR	392264	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		392006	0		==			
ANR	392265	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		392006	0		=			
ANR	392266	Identifier	ce		392006	0					
ANR	392267	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		392006	1					
ANR	392268	Callee	CACHED_PTR		392006	0					
ANR	392269	Identifier	CACHED_PTR		392006	0					
ANR	392270	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		392006	1					
ANR	392271	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		392006	0					
ANR	392272	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		392006	0					
ANR	392273	Callee	Z_CACHE_SLOT_P		392006	0					
ANR	392274	Identifier	Z_CACHE_SLOT_P		392006	0					
ANR	392275	ArgumentList	EX_CONSTANT ( opline -> op2 )		392006	1					
ANR	392276	Argument	EX_CONSTANT ( opline -> op2 )		392006	0					
ANR	392277	CallExpression	EX_CONSTANT ( opline -> op2 )		392006	0					
ANR	392278	Callee	EX_CONSTANT		392006	0					
ANR	392279	Identifier	EX_CONSTANT		392006	0					
ANR	392280	ArgumentList	opline -> op2		392006	1					
ANR	392281	Argument	opline -> op2		392006	0					
ANR	392282	PtrMemberAccess	opline -> op2		392006	0					
ANR	392283	Identifier	opline		392006	0					
ANR	392284	Identifier	op2		392006	1					
ANR	392285	Identifier	NULL		392006	1					
ANR	392286	CompoundStatement		39:95:1162:1162	392006	1					
ANR	392287	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	34156:4:1079950:1080099	392006	0	True				
ANR	392288	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		392006	0		=			
ANR	392289	Identifier	ce		392006	0					
ANR	392290	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		392006	1					
ANR	392291	Callee	zend_fetch_class_by_name		392006	0					
ANR	392292	Identifier	zend_fetch_class_by_name		392006	0					
ANR	392293	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		392006	1					
ANR	392294	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		392006	0					
ANR	392295	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		392006	0					
ANR	392296	Callee	Z_STR_P		392006	0					
ANR	392297	Identifier	Z_STR_P		392006	0					
ANR	392298	ArgumentList	EX_CONSTANT ( opline -> op2 )		392006	1					
ANR	392299	Argument	EX_CONSTANT ( opline -> op2 )		392006	0					
ANR	392300	CallExpression	EX_CONSTANT ( opline -> op2 )		392006	0					
ANR	392301	Callee	EX_CONSTANT		392006	0					
ANR	392302	Identifier	EX_CONSTANT		392006	0					
ANR	392303	ArgumentList	opline -> op2		392006	1					
ANR	392304	Argument	opline -> op2		392006	0					
ANR	392305	PtrMemberAccess	opline -> op2		392006	0					
ANR	392306	Identifier	opline		392006	0					
ANR	392307	Identifier	op2		392006	1					
ANR	392308	Argument	EX_CONSTANT ( opline -> op2 ) + 1		392006	1					
ANR	392309	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		392006	0		+			
ANR	392310	CallExpression	EX_CONSTANT ( opline -> op2 )		392006	0					
ANR	392311	Callee	EX_CONSTANT		392006	0					
ANR	392312	Identifier	EX_CONSTANT		392006	0					
ANR	392313	ArgumentList	opline -> op2		392006	1					
ANR	392314	Argument	opline -> op2		392006	0					
ANR	392315	PtrMemberAccess	opline -> op2		392006	0					
ANR	392316	Identifier	opline		392006	0					
ANR	392317	Identifier	op2		392006	1					
ANR	392318	PrimaryExpression	1		392006	1					
ANR	392319	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		392006	2					
ANR	392320	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		392006	0		|			
ANR	392321	Identifier	ZEND_FETCH_CLASS_DEFAULT		392006	0					
ANR	392322	Identifier	ZEND_FETCH_CLASS_EXCEPTION		392006	1					
ANR	392323	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		392006	1					
ANR	392324	Condition	UNEXPECTED ( ce == NULL )	34157:8:1080109:1080130	392006	0	True				
ANR	392325	CallExpression	UNEXPECTED ( ce == NULL )		392006	0					
ANR	392326	Callee	UNEXPECTED		392006	0					
ANR	392327	Identifier	UNEXPECTED		392006	0					
ANR	392328	ArgumentList	ce == NULL		392006	1					
ANR	392329	Argument	ce == NULL		392006	0					
ANR	392330	EqualityExpression	ce == NULL		392006	0		==			
ANR	392331	Identifier	ce		392006	0					
ANR	392332	Identifier	NULL		392006	1					
ANR	392333	CompoundStatement		41:32:1351:1351	392006	1					
ANR	392334	IfStatement	if ( IS_CV != IS_CONST )		392006	0					
ANR	392335	Condition	IS_CV != IS_CONST	34158:9:1080144:1080160	392006	0	True				
ANR	392336	EqualityExpression	IS_CV != IS_CONST		392006	0		!=			
ANR	392337	Identifier	IS_CV		392006	0					
ANR	392338	Identifier	IS_CONST		392006	1					
ANR	392339	CompoundStatement		42:28:1381:1381	392006	1					
ANR	392340	ExpressionStatement	zend_string_release ( name )	34159:6:1080171:1080196	392006	0	True				
ANR	392341	CallExpression	zend_string_release ( name )		392006	0					
ANR	392342	Callee	zend_string_release		392006	0					
ANR	392343	Identifier	zend_string_release		392006	0					
ANR	392344	ArgumentList	name		392006	1					
ANR	392345	Argument	name		392006	0					
ANR	392346	Identifier	name		392006	0					
ANR	392347	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	34162:5:1080211:1080248	392006	1	True				
ANR	392348	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		392006	0					
ANR	392349	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		392006	0					
ANR	392350	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		392006	0					
ANR	392351	ArgumentList			392006	1					
ANR	392352	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	34164:4:1080260:1080315	392006	2	True				
ANR	392353	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		392006	0					
ANR	392354	Callee	CACHE_PTR		392006	0					
ANR	392355	Identifier	CACHE_PTR		392006	0					
ANR	392356	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		392006	1					
ANR	392357	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		392006	0					
ANR	392358	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		392006	0					
ANR	392359	Callee	Z_CACHE_SLOT_P		392006	0					
ANR	392360	Identifier	Z_CACHE_SLOT_P		392006	0					
ANR	392361	ArgumentList	EX_CONSTANT ( opline -> op2 )		392006	1					
ANR	392362	Argument	EX_CONSTANT ( opline -> op2 )		392006	0					
ANR	392363	CallExpression	EX_CONSTANT ( opline -> op2 )		392006	0					
ANR	392364	Callee	EX_CONSTANT		392006	0					
ANR	392365	Identifier	EX_CONSTANT		392006	0					
ANR	392366	ArgumentList	opline -> op2		392006	1					
ANR	392367	Argument	opline -> op2		392006	0					
ANR	392368	PtrMemberAccess	opline -> op2		392006	0					
ANR	392369	Identifier	opline		392006	0					
ANR	392370	Identifier	op2		392006	1					
ANR	392371	Argument	ce		392006	1					
ANR	392372	Identifier	ce		392006	0					
ANR	392373	ElseStatement	else		392006	0					
ANR	392374	CompoundStatement		50:9:1549:1549	392006	0					
ANR	392375	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	34167:3:1080336:1080372	392006	0	True				
ANR	392376	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		392006	0		=			
ANR	392377	Identifier	ce		392006	0					
ANR	392378	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		392006	1					
ANR	392379	Callee	Z_CE_P		392006	0					
ANR	392380	Identifier	Z_CE_P		392006	0					
ANR	392381	ArgumentList	EX_VAR ( opline -> op2 . var )		392006	1					
ANR	392382	Argument	EX_VAR ( opline -> op2 . var )		392006	0					
ANR	392383	CallExpression	EX_VAR ( opline -> op2 . var )		392006	0					
ANR	392384	Callee	EX_VAR		392006	0					
ANR	392385	Identifier	EX_VAR		392006	0					
ANR	392386	ArgumentList	opline -> op2 . var		392006	1					
ANR	392387	Argument	opline -> op2 . var		392006	0					
ANR	392388	MemberAccess	opline -> op2 . var		392006	0					
ANR	392389	PtrMemberAccess	opline -> op2		392006	0					
ANR	392390	Identifier	opline		392006	0					
ANR	392391	Identifier	op2		392006	1					
ANR	392392	Identifier	var		392006	1					
ANR	392393	IfStatement	"if ( IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		392006	1					
ANR	392394	Condition	"IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	34168:7:1080381:1080495	392006	0	True				
ANR	392395	AndExpression	"IS_CV == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		392006	0		&&			
ANR	392396	EqualityExpression	IS_CV == IS_CONST		392006	0		==			
ANR	392397	Identifier	IS_CV		392006	0					
ANR	392398	Identifier	IS_CONST		392006	1					
ANR	392399	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		392006	1		!=			
ANR	392400	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		392006	0		=			
ANR	392401	Identifier	retval		392006	0					
ANR	392402	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		392006	1					
ANR	392403	Callee	CACHED_POLYMORPHIC_PTR		392006	0					
ANR	392404	Identifier	CACHED_POLYMORPHIC_PTR		392006	0					
ANR	392405	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	1					
ANR	392406	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	0					
ANR	392407	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	0					
ANR	392408	Callee	Z_CACHE_SLOT_P		392006	0					
ANR	392409	Identifier	Z_CACHE_SLOT_P		392006	0					
ANR	392410	ArgumentList	EX_CONSTANT ( opline -> op1 )		392006	1					
ANR	392411	Argument	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392412	CallExpression	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392413	Callee	EX_CONSTANT		392006	0					
ANR	392414	Identifier	EX_CONSTANT		392006	0					
ANR	392415	ArgumentList	opline -> op1		392006	1					
ANR	392416	Argument	opline -> op1		392006	0					
ANR	392417	PtrMemberAccess	opline -> op1		392006	0					
ANR	392418	Identifier	opline		392006	0					
ANR	392419	Identifier	op1		392006	1					
ANR	392420	Argument	ce		392006	1					
ANR	392421	Identifier	ce		392006	0					
ANR	392422	Identifier	NULL		392006	1					
ANR	392423	CompoundStatement		53:96:1716:1716	392006	1					
ANR	392424	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		392006	0					
ANR	392425	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	34172:8:1080560:1080600	392006	0	True				
ANR	392426	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		392006	0					
ANR	392427	Callee	UNEXPECTED		392006	0					
ANR	392428	Identifier	UNEXPECTED		392006	0					
ANR	392429	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		392006	1					
ANR	392430	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		392006	0					
ANR	392431	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		392006	0		==			
ANR	392432	CallExpression	CE_STATIC_MEMBERS ( ce )		392006	0					
ANR	392433	Callee	CE_STATIC_MEMBERS		392006	0					
ANR	392434	Identifier	CE_STATIC_MEMBERS		392006	0					
ANR	392435	ArgumentList	ce		392006	1					
ANR	392436	Argument	ce		392006	0					
ANR	392437	Identifier	ce		392006	0					
ANR	392438	Identifier	NULL		392006	1					
ANR	392439	CompoundStatement		56:51:1821:1821	392006	1					
ANR	392440	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	34173:5:1080610:1080717	392006	0	True				
ANR	392441	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		392006	0					
ANR	392442	Callee	zend_throw_error		392006	0					
ANR	392443	Identifier	zend_throw_error		392006	0					
ANR	392444	ArgumentList	NULL		392006	1					
ANR	392445	Argument	NULL		392006	0					
ANR	392446	Identifier	NULL		392006	0					
ANR	392447	Argument	"""Access to undeclared static property: %s::$%s"""		392006	1					
ANR	392448	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		392006	0					
ANR	392449	Argument	ZSTR_VAL ( ce -> name )		392006	2					
ANR	392450	CallExpression	ZSTR_VAL ( ce -> name )		392006	0					
ANR	392451	Callee	ZSTR_VAL		392006	0					
ANR	392452	Identifier	ZSTR_VAL		392006	0					
ANR	392453	ArgumentList	ce -> name		392006	1					
ANR	392454	Argument	ce -> name		392006	0					
ANR	392455	PtrMemberAccess	ce -> name		392006	0					
ANR	392456	Identifier	ce		392006	0					
ANR	392457	Identifier	name		392006	1					
ANR	392458	Argument	ZSTR_VAL ( name )		392006	3					
ANR	392459	CallExpression	ZSTR_VAL ( name )		392006	0					
ANR	392460	Callee	ZSTR_VAL		392006	0					
ANR	392461	Identifier	ZSTR_VAL		392006	0					
ANR	392462	ArgumentList	name		392006	1					
ANR	392463	Argument	name		392006	0					
ANR	392464	Identifier	name		392006	0					
ANR	392465	ExpressionStatement	HANDLE_EXCEPTION ( )	34175:5:1080725:1080743	392006	1	True				
ANR	392466	CallExpression	HANDLE_EXCEPTION ( )		392006	0					
ANR	392467	Callee	HANDLE_EXCEPTION		392006	0					
ANR	392468	Identifier	HANDLE_EXCEPTION		392006	0					
ANR	392469	ArgumentList			392006	1					
ANR	392470	GotoStatement	goto fetch_var_return ;	34178:4:1080756:1080777	392006	1	True				
ANR	392471	Identifier	fetch_var_return		392006	0					
ANR	392472	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	34181:2:1080790:1080840	392006	2	True				
ANR	392473	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		392006	0		=			
ANR	392474	Identifier	retval		392006	0					
ANR	392475	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		392006	1					
ANR	392476	Callee	zend_std_get_static_property		392006	0					
ANR	392477	Identifier	zend_std_get_static_property		392006	0					
ANR	392478	ArgumentList	ce		392006	1					
ANR	392479	Argument	ce		392006	0					
ANR	392480	Identifier	ce		392006	0					
ANR	392481	Argument	name		392006	1					
ANR	392482	Identifier	name		392006	0					
ANR	392483	Argument	0		392006	2					
ANR	392484	PrimaryExpression	0		392006	0					
ANR	392485	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		392006	3					
ANR	392486	Condition	UNEXPECTED ( EG ( exception ) )	34182:6:1080848:1080872	392006	0	True				
ANR	392487	CallExpression	UNEXPECTED ( EG ( exception ) )		392006	0					
ANR	392488	Callee	UNEXPECTED		392006	0					
ANR	392489	Identifier	UNEXPECTED		392006	0					
ANR	392490	ArgumentList	EG ( exception )		392006	1					
ANR	392491	Argument	EG ( exception )		392006	0					
ANR	392492	CallExpression	EG ( exception )		392006	0					
ANR	392493	Callee	EG		392006	0					
ANR	392494	Identifier	EG		392006	0					
ANR	392495	ArgumentList	exception		392006	1					
ANR	392496	Argument	exception		392006	0					
ANR	392497	Identifier	exception		392006	0					
ANR	392498	CompoundStatement		66:33:2093:2093	392006	1					
ANR	392499	IfStatement	if ( IS_CV != IS_CONST )		392006	0					
ANR	392500	Condition	IS_CV != IS_CONST	34183:7:1080884:1080900	392006	0	True				
ANR	392501	EqualityExpression	IS_CV != IS_CONST		392006	0		!=			
ANR	392502	Identifier	IS_CV		392006	0					
ANR	392503	Identifier	IS_CONST		392006	1					
ANR	392504	CompoundStatement		67:26:2121:2121	392006	1					
ANR	392505	ExpressionStatement	zend_string_release ( name )	34184:4:1080909:1080934	392006	0	True				
ANR	392506	CallExpression	zend_string_release ( name )		392006	0					
ANR	392507	Callee	zend_string_release		392006	0					
ANR	392508	Identifier	zend_string_release		392006	0					
ANR	392509	ArgumentList	name		392006	1					
ANR	392510	Argument	name		392006	0					
ANR	392511	Identifier	name		392006	0					
ANR	392512	ExpressionStatement	HANDLE_EXCEPTION ( )	34187:3:1080945:1080963	392006	1	True				
ANR	392513	CallExpression	HANDLE_EXCEPTION ( )		392006	0					
ANR	392514	Callee	HANDLE_EXCEPTION		392006	0					
ANR	392515	Identifier	HANDLE_EXCEPTION		392006	0					
ANR	392516	ArgumentList			392006	1					
ANR	392517	IfStatement	if ( IS_CV == IS_CONST && retval )		392006	4					
ANR	392518	Condition	IS_CV == IS_CONST && retval	34189:6:1080975:1081001	392006	0	True				
ANR	392519	AndExpression	IS_CV == IS_CONST && retval		392006	0		&&			
ANR	392520	EqualityExpression	IS_CV == IS_CONST		392006	0		==			
ANR	392521	Identifier	IS_CV		392006	0					
ANR	392522	Identifier	IS_CONST		392006	1					
ANR	392523	Identifier	retval		392006	1					
ANR	392524	CompoundStatement		73:35:2222:2222	392006	1					
ANR	392525	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	34190:3:1081009:1081084	392006	0	True				
ANR	392526	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		392006	0					
ANR	392527	Callee	CACHE_POLYMORPHIC_PTR		392006	0					
ANR	392528	Identifier	CACHE_POLYMORPHIC_PTR		392006	0					
ANR	392529	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	1					
ANR	392530	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	0					
ANR	392531	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		392006	0					
ANR	392532	Callee	Z_CACHE_SLOT_P		392006	0					
ANR	392533	Identifier	Z_CACHE_SLOT_P		392006	0					
ANR	392534	ArgumentList	EX_CONSTANT ( opline -> op1 )		392006	1					
ANR	392535	Argument	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392536	CallExpression	EX_CONSTANT ( opline -> op1 )		392006	0					
ANR	392537	Callee	EX_CONSTANT		392006	0					
ANR	392538	Identifier	EX_CONSTANT		392006	0					
ANR	392539	ArgumentList	opline -> op1		392006	1					
ANR	392540	Argument	opline -> op1		392006	0					
ANR	392541	PtrMemberAccess	opline -> op1		392006	0					
ANR	392542	Identifier	opline		392006	0					
ANR	392543	Identifier	op1		392006	1					
ANR	392544	Argument	ce		392006	1					
ANR	392545	Identifier	ce		392006	0					
ANR	392546	Argument	retval		392006	2					
ANR	392547	Identifier	retval		392006	0					
ANR	392548	ElseStatement	else		392006	0					
ANR	392549	CompoundStatement		77:8:2317:2317	392006	0					
ANR	392550	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	34194:2:1081103:1081214	392006	0	True				
ANR	392551	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		392006	0		=			
ANR	392552	Identifier	target_symbol_table		392006	0					
ANR	392553	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		392006	1					
ANR	392554	Callee	zend_get_target_symbol_table		392006	0					
ANR	392555	Identifier	zend_get_target_symbol_table		392006	0					
ANR	392556	ArgumentList	execute_data		392006	1					
ANR	392557	Argument	execute_data		392006	0					
ANR	392558	Identifier	execute_data		392006	0					
ANR	392559	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		392006	1					
ANR	392560	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		392006	0		&			
ANR	392561	PtrMemberAccess	opline -> extended_value		392006	0					
ANR	392562	Identifier	opline		392006	0					
ANR	392563	Identifier	extended_value		392006	1					
ANR	392564	Identifier	ZEND_FETCH_TYPE_MASK		392006	1					
ANR	392565	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	34195:2:1081218:1081268	392006	1	True				
ANR	392566	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		392006	0		=			
ANR	392567	Identifier	retval		392006	0					
ANR	392568	CallExpression	"zend_hash_find ( target_symbol_table , name )"		392006	1					
ANR	392569	Callee	zend_hash_find		392006	0					
ANR	392570	Identifier	zend_hash_find		392006	0					
ANR	392571	ArgumentList	target_symbol_table		392006	1					
ANR	392572	Argument	target_symbol_table		392006	0					
ANR	392573	Identifier	target_symbol_table		392006	0					
ANR	392574	Argument	name		392006	1					
ANR	392575	Identifier	name		392006	0					
ANR	392576	IfStatement	if ( retval == NULL )		392006	2					
ANR	392577	Condition	retval == NULL	34196:6:1081276:1081289	392006	0	True				
ANR	392578	EqualityExpression	retval == NULL		392006	0		==			
ANR	392579	Identifier	retval		392006	0					
ANR	392580	Identifier	NULL		392006	1					
ANR	392581	CompoundStatement		80:22:2510:2510	392006	1					
ANR	392582	SwitchStatement	switch ( type )		392006	0					
ANR	392583	Condition	type	34197:11:1081305:1081308	392006	0	True				
ANR	392584	Identifier	type		392006	0					
ANR	392585	CompoundStatement		81:17:2529:2529	392006	1					
ANR	392586	Label	case BP_VAR_R :	34198:4:1081317:1081330	392006	0	True				
ANR	392587	Identifier	BP_VAR_R		392006	0					
ANR	392588	Label	case BP_VAR_UNSET :	34199:4:1081336:1081353	392006	1	True				
ANR	392589	Identifier	BP_VAR_UNSET		392006	0					
ANR	392590	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	34200:5:1081360:1081421	392006	2	True				
ANR	392591	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		392006	0					
ANR	392592	Callee	zend_error		392006	0					
ANR	392593	Identifier	zend_error		392006	0					
ANR	392594	ArgumentList	E_NOTICE		392006	1					
ANR	392595	Argument	E_NOTICE		392006	0					
ANR	392596	Identifier	E_NOTICE		392006	0					
ANR	392597	Argument	"""Undefined variable: %s"""		392006	1					
ANR	392598	PrimaryExpression	"""Undefined variable: %s"""		392006	0					
ANR	392599	Argument	ZSTR_VAL ( name )		392006	2					
ANR	392600	CallExpression	ZSTR_VAL ( name )		392006	0					
ANR	392601	Callee	ZSTR_VAL		392006	0					
ANR	392602	Identifier	ZSTR_VAL		392006	0					
ANR	392603	ArgumentList	name		392006	1					
ANR	392604	Argument	name		392006	0					
ANR	392605	Identifier	name		392006	0					
ANR	392606	Label	case BP_VAR_IS :	34202:4:1081466:1081480	392006	3	True				
ANR	392607	Identifier	BP_VAR_IS		392006	0					
ANR	392608	ExpressionStatement	retval = & EG ( uninitialized_zval )	34203:5:1081487:1081519	392006	4	True				
ANR	392609	AssignmentExpression	retval = & EG ( uninitialized_zval )		392006	0		=			
ANR	392610	Identifier	retval		392006	0					
ANR	392611	UnaryOperationExpression	& EG ( uninitialized_zval )		392006	1					
ANR	392612	UnaryOperator	&		392006	0					
ANR	392613	CallExpression	EG ( uninitialized_zval )		392006	1					
ANR	392614	Callee	EG		392006	0					
ANR	392615	Identifier	EG		392006	0					
ANR	392616	ArgumentList	uninitialized_zval		392006	1					
ANR	392617	Argument	uninitialized_zval		392006	0					
ANR	392618	Identifier	uninitialized_zval		392006	0					
ANR	392619	BreakStatement	break ;	34204:5:1081526:1081531	392006	5	True				
ANR	392620	Label	case BP_VAR_RW :	34205:4:1081537:1081551	392006	6	True				
ANR	392621	Identifier	BP_VAR_RW		392006	0					
ANR	392622	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	34206:5:1081558:1081619	392006	7	True				
ANR	392623	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		392006	0					
ANR	392624	Callee	zend_error		392006	0					
ANR	392625	Identifier	zend_error		392006	0					
ANR	392626	ArgumentList	E_NOTICE		392006	1					
ANR	392627	Argument	E_NOTICE		392006	0					
ANR	392628	Identifier	E_NOTICE		392006	0					
ANR	392629	Argument	"""Undefined variable: %s"""		392006	1					
ANR	392630	PrimaryExpression	"""Undefined variable: %s"""		392006	0					
ANR	392631	Argument	ZSTR_VAL ( name )		392006	2					
ANR	392632	CallExpression	ZSTR_VAL ( name )		392006	0					
ANR	392633	Callee	ZSTR_VAL		392006	0					
ANR	392634	Identifier	ZSTR_VAL		392006	0					
ANR	392635	ArgumentList	name		392006	1					
ANR	392636	Argument	name		392006	0					
ANR	392637	Identifier	name		392006	0					
ANR	392638	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	34207:5:1081626:1081703	392006	8	True				
ANR	392639	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		392006	0		=			
ANR	392640	Identifier	retval		392006	0					
ANR	392641	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		392006	1					
ANR	392642	Callee	zend_hash_update		392006	0					
ANR	392643	Identifier	zend_hash_update		392006	0					
ANR	392644	ArgumentList	target_symbol_table		392006	1					
ANR	392645	Argument	target_symbol_table		392006	0					
ANR	392646	Identifier	target_symbol_table		392006	0					
ANR	392647	Argument	name		392006	1					
ANR	392648	Identifier	name		392006	0					
ANR	392649	Argument	& EG ( uninitialized_zval )		392006	2					
ANR	392650	UnaryOperationExpression	& EG ( uninitialized_zval )		392006	0					
ANR	392651	UnaryOperator	&		392006	0					
ANR	392652	CallExpression	EG ( uninitialized_zval )		392006	1					
ANR	392653	Callee	EG		392006	0					
ANR	392654	Identifier	EG		392006	0					
ANR	392655	ArgumentList	uninitialized_zval		392006	1					
ANR	392656	Argument	uninitialized_zval		392006	0					
ANR	392657	Identifier	uninitialized_zval		392006	0					
ANR	392658	BreakStatement	break ;	34208:5:1081710:1081715	392006	9	True				
ANR	392659	Label	case BP_VAR_W :	34209:4:1081721:1081734	392006	10	True				
ANR	392660	Identifier	BP_VAR_W		392006	0					
ANR	392661	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	34210:5:1081741:1081819	392006	11	True				
ANR	392662	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		392006	0		=			
ANR	392663	Identifier	retval		392006	0					
ANR	392664	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		392006	1					
ANR	392665	Callee	zend_hash_add_new		392006	0					
ANR	392666	Identifier	zend_hash_add_new		392006	0					
ANR	392667	ArgumentList	target_symbol_table		392006	1					
ANR	392668	Argument	target_symbol_table		392006	0					
ANR	392669	Identifier	target_symbol_table		392006	0					
ANR	392670	Argument	name		392006	1					
ANR	392671	Identifier	name		392006	0					
ANR	392672	Argument	& EG ( uninitialized_zval )		392006	2					
ANR	392673	UnaryOperationExpression	& EG ( uninitialized_zval )		392006	0					
ANR	392674	UnaryOperator	&		392006	0					
ANR	392675	CallExpression	EG ( uninitialized_zval )		392006	1					
ANR	392676	Callee	EG		392006	0					
ANR	392677	Identifier	EG		392006	0					
ANR	392678	ArgumentList	uninitialized_zval		392006	1					
ANR	392679	Argument	uninitialized_zval		392006	0					
ANR	392680	Identifier	uninitialized_zval		392006	0					
ANR	392681	BreakStatement	break ;	34211:5:1081826:1081831	392006	12	True				
ANR	392682	Statement	EMPTY_SWITCH_DEFAULT_CASE	34212:4:1081837:1081861	392006	13	True				
ANR	392683	Statement	(	34212:29:1081862:1081862	392006	14	True				
ANR	392684	Statement	)	34212:30:1081863:1081863	392006	15	True				
ANR	392685	ElseStatement	else		392006	0					
ANR	392686	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		392006	0					
ANR	392687	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	34215:13:1081950:1081980	392006	0	True				
ANR	392688	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		392006	0		==			
ANR	392689	CallExpression	Z_TYPE_P ( retval )		392006	0					
ANR	392690	Callee	Z_TYPE_P		392006	0					
ANR	392691	Identifier	Z_TYPE_P		392006	0					
ANR	392692	ArgumentList	retval		392006	1					
ANR	392693	Argument	retval		392006	0					
ANR	392694	Identifier	retval		392006	0					
ANR	392695	Identifier	IS_INDIRECT		392006	1					
ANR	392696	CompoundStatement		99:46:3201:3201	392006	1					
ANR	392697	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	34216:3:1081988:1082017	392006	0	True				
ANR	392698	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		392006	0		=			
ANR	392699	Identifier	retval		392006	0					
ANR	392700	CallExpression	Z_INDIRECT_P ( retval )		392006	1					
ANR	392701	Callee	Z_INDIRECT_P		392006	0					
ANR	392702	Identifier	Z_INDIRECT_P		392006	0					
ANR	392703	ArgumentList	retval		392006	1					
ANR	392704	Argument	retval		392006	0					
ANR	392705	Identifier	retval		392006	0					
ANR	392706	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		392006	1					
ANR	392707	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	34217:7:1082026:1082053	392006	0	True				
ANR	392708	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		392006	0		==			
ANR	392709	CallExpression	Z_TYPE_P ( retval )		392006	0					
ANR	392710	Callee	Z_TYPE_P		392006	0					
ANR	392711	Identifier	Z_TYPE_P		392006	0					
ANR	392712	ArgumentList	retval		392006	1					
ANR	392713	Argument	retval		392006	0					
ANR	392714	Identifier	retval		392006	0					
ANR	392715	Identifier	IS_UNDEF		392006	1					
ANR	392716	CompoundStatement		101:37:3274:3274	392006	1					
ANR	392717	SwitchStatement	switch ( type )		392006	0					
ANR	392718	Condition	type	34218:12:1082070:1082073	392006	0	True				
ANR	392719	Identifier	type		392006	0					
ANR	392720	CompoundStatement		102:18:3294:3294	392006	1					
ANR	392721	Label	case BP_VAR_R :	34219:5:1082083:1082096	392006	0	True				
ANR	392722	Identifier	BP_VAR_R		392006	0					
ANR	392723	Label	case BP_VAR_UNSET :	34220:5:1082103:1082120	392006	1	True				
ANR	392724	Identifier	BP_VAR_UNSET		392006	0					
ANR	392725	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	34221:6:1082128:1082189	392006	2	True				
ANR	392726	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		392006	0					
ANR	392727	Callee	zend_error		392006	0					
ANR	392728	Identifier	zend_error		392006	0					
ANR	392729	ArgumentList	E_NOTICE		392006	1					
ANR	392730	Argument	E_NOTICE		392006	0					
ANR	392731	Identifier	E_NOTICE		392006	0					
ANR	392732	Argument	"""Undefined variable: %s"""		392006	1					
ANR	392733	PrimaryExpression	"""Undefined variable: %s"""		392006	0					
ANR	392734	Argument	ZSTR_VAL ( name )		392006	2					
ANR	392735	CallExpression	ZSTR_VAL ( name )		392006	0					
ANR	392736	Callee	ZSTR_VAL		392006	0					
ANR	392737	Identifier	ZSTR_VAL		392006	0					
ANR	392738	ArgumentList	name		392006	1					
ANR	392739	Argument	name		392006	0					
ANR	392740	Identifier	name		392006	0					
ANR	392741	Label	case BP_VAR_IS :	34223:5:1082236:1082250	392006	3	True				
ANR	392742	Identifier	BP_VAR_IS		392006	0					
ANR	392743	ExpressionStatement	retval = & EG ( uninitialized_zval )	34224:6:1082258:1082290	392006	4	True				
ANR	392744	AssignmentExpression	retval = & EG ( uninitialized_zval )		392006	0		=			
ANR	392745	Identifier	retval		392006	0					
ANR	392746	UnaryOperationExpression	& EG ( uninitialized_zval )		392006	1					
ANR	392747	UnaryOperator	&		392006	0					
ANR	392748	CallExpression	EG ( uninitialized_zval )		392006	1					
ANR	392749	Callee	EG		392006	0					
ANR	392750	Identifier	EG		392006	0					
ANR	392751	ArgumentList	uninitialized_zval		392006	1					
ANR	392752	Argument	uninitialized_zval		392006	0					
ANR	392753	Identifier	uninitialized_zval		392006	0					
ANR	392754	BreakStatement	break ;	34225:6:1082298:1082303	392006	5	True				
ANR	392755	Label	case BP_VAR_RW :	34226:5:1082310:1082324	392006	6	True				
ANR	392756	Identifier	BP_VAR_RW		392006	0					
ANR	392757	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	34227:6:1082332:1082393	392006	7	True				
ANR	392758	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		392006	0					
ANR	392759	Callee	zend_error		392006	0					
ANR	392760	Identifier	zend_error		392006	0					
ANR	392761	ArgumentList	E_NOTICE		392006	1					
ANR	392762	Argument	E_NOTICE		392006	0					
ANR	392763	Identifier	E_NOTICE		392006	0					
ANR	392764	Argument	"""Undefined variable: %s"""		392006	1					
ANR	392765	PrimaryExpression	"""Undefined variable: %s"""		392006	0					
ANR	392766	Argument	ZSTR_VAL ( name )		392006	2					
ANR	392767	CallExpression	ZSTR_VAL ( name )		392006	0					
ANR	392768	Callee	ZSTR_VAL		392006	0					
ANR	392769	Identifier	ZSTR_VAL		392006	0					
ANR	392770	ArgumentList	name		392006	1					
ANR	392771	Argument	name		392006	0					
ANR	392772	Identifier	name		392006	0					
ANR	392773	Label	case BP_VAR_W :	34229:5:1082440:1082453	392006	8	True				
ANR	392774	Identifier	BP_VAR_W		392006	0					
ANR	392775	ExpressionStatement	ZVAL_NULL ( retval )	34230:6:1082461:1082478	392006	9	True				
ANR	392776	CallExpression	ZVAL_NULL ( retval )		392006	0					
ANR	392777	Callee	ZVAL_NULL		392006	0					
ANR	392778	Identifier	ZVAL_NULL		392006	0					
ANR	392779	ArgumentList	retval		392006	1					
ANR	392780	Argument	retval		392006	0					
ANR	392781	Identifier	retval		392006	0					
ANR	392782	BreakStatement	break ;	34231:6:1082486:1082491	392006	10	True				
ANR	392783	Statement	EMPTY_SWITCH_DEFAULT_CASE	34232:5:1082498:1082522	392006	11	True				
ANR	392784	Statement	(	34232:30:1082523:1082523	392006	12	True				
ANR	392785	Statement	)	34232:31:1082524:1082524	392006	13	True				
ANR	392786	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		392006	3					
ANR	392787	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	34236:6:1082547:1082614	392006	0	True				
ANR	392788	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		392006	0		==			
ANR	392789	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		392006	0		&			
ANR	392790	PtrMemberAccess	opline -> extended_value		392006	0					
ANR	392791	Identifier	opline		392006	0					
ANR	392792	Identifier	extended_value		392006	1					
ANR	392793	Identifier	ZEND_FETCH_TYPE_MASK		392006	1					
ANR	392794	Identifier	ZEND_FETCH_STATIC		392006	1					
ANR	392795	CompoundStatement		120:76:3835:3835	392006	1					
ANR	392796	IfStatement	if ( Z_CONSTANT_P ( retval ) )		392006	0					
ANR	392797	Condition	Z_CONSTANT_P ( retval )	34237:7:1082626:1082645	392006	0	True				
ANR	392798	CallExpression	Z_CONSTANT_P ( retval )		392006	0					
ANR	392799	Callee	Z_CONSTANT_P		392006	0					
ANR	392800	Identifier	Z_CONSTANT_P		392006	0					
ANR	392801	ArgumentList	retval		392006	1					
ANR	392802	Argument	retval		392006	0					
ANR	392803	Identifier	retval		392006	0					
ANR	392804	CompoundStatement		121:29:3866:3866	392006	1					
ANR	392805	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		392006	0					
ANR	392806	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	34238:8:1082658:1082720	392006	0	True				
ANR	392807	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		392006	0					
ANR	392808	Callee	UNEXPECTED		392006	0					
ANR	392809	Identifier	UNEXPECTED		392006	0					
ANR	392810	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		392006	1					
ANR	392811	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		392006	0					
ANR	392812	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		392006	0		!=			
ANR	392813	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		392006	0					
ANR	392814	Callee	zval_update_constant_ex		392006	0					
ANR	392815	Identifier	zval_update_constant_ex		392006	0					
ANR	392816	ArgumentList	retval		392006	1					
ANR	392817	Argument	retval		392006	0					
ANR	392818	Identifier	retval		392006	0					
ANR	392819	Argument	1		392006	1					
ANR	392820	PrimaryExpression	1		392006	0					
ANR	392821	Argument	NULL		392006	2					
ANR	392822	Identifier	NULL		392006	0					
ANR	392823	Identifier	SUCCESS		392006	1					
ANR	392824	CompoundStatement		122:73:3941:3941	392006	1					
ANR	392825	ExpressionStatement	HANDLE_EXCEPTION ( )	34240:5:1082731:1082749	392006	0	True				
ANR	392826	CallExpression	HANDLE_EXCEPTION ( )		392006	0					
ANR	392827	Callee	HANDLE_EXCEPTION		392006	0					
ANR	392828	Identifier	HANDLE_EXCEPTION		392006	0					
ANR	392829	ArgumentList			392006	1					
ANR	392830	ElseStatement	else		392006	0					
ANR	392831	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		392006	0					
ANR	392832	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	34243:13:1082775:1082847	392006	0	True				
ANR	392833	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		392006	0		!=			
ANR	392834	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		392006	0		&			
ANR	392835	PtrMemberAccess	opline -> extended_value		392006	0					
ANR	392836	Identifier	opline		392006	0					
ANR	392837	Identifier	extended_value		392006	1					
ANR	392838	Identifier	ZEND_FETCH_TYPE_MASK		392006	1					
ANR	392839	Identifier	ZEND_FETCH_GLOBAL_LOCK		392006	1					
ANR	392840	CompoundStatement		127:88:4068:4068	392006	1					
ANR	392841	IfStatement	if ( IS_CV != IS_CONST )		392006	8					
ANR	392842	Condition	IS_CV != IS_CONST	34248:5:1082866:1082882	392006	0	True				
ANR	392843	EqualityExpression	IS_CV != IS_CONST		392006	0		!=			
ANR	392844	Identifier	IS_CV		392006	0					
ANR	392845	Identifier	IS_CONST		392006	1					
ANR	392846	CompoundStatement		132:24:4103:4103	392006	1					
ANR	392847	ExpressionStatement	zend_string_release ( name )	34249:2:1082889:1082914	392006	0	True				
ANR	392848	CallExpression	zend_string_release ( name )		392006	0					
ANR	392849	Callee	zend_string_release		392006	0					
ANR	392850	Identifier	zend_string_release		392006	0					
ANR	392851	ArgumentList	name		392006	1					
ANR	392852	Argument	name		392006	0					
ANR	392853	Identifier	name		392006	0					
ANR	392854	Label	fetch_var_return :	34252:0:1082920:1082936	392006	9	True				
ANR	392855	Identifier	fetch_var_return		392006	0					
ANR	392856	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	34253:1:1082939:1082966	392006	10	True				
ANR	392857	CallExpression	ZEND_ASSERT ( retval != NULL )		392006	0					
ANR	392858	Callee	ZEND_ASSERT		392006	0					
ANR	392859	Identifier	ZEND_ASSERT		392006	0					
ANR	392860	ArgumentList	retval != NULL		392006	1					
ANR	392861	Argument	retval != NULL		392006	0					
ANR	392862	EqualityExpression	retval != NULL		392006	0		!=			
ANR	392863	Identifier	retval		392006	0					
ANR	392864	Identifier	NULL		392006	1					
ANR	392865	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		392006	11					
ANR	392866	Condition	type == BP_VAR_R || type == BP_VAR_IS	34254:5:1082973:1083009	392006	0	True				
ANR	392867	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		392006	0		||			
ANR	392868	EqualityExpression	type == BP_VAR_R		392006	0		==			
ANR	392869	Identifier	type		392006	0					
ANR	392870	Identifier	BP_VAR_R		392006	1					
ANR	392871	EqualityExpression	type == BP_VAR_IS		392006	1		==			
ANR	392872	Identifier	type		392006	0					
ANR	392873	Identifier	BP_VAR_IS		392006	1					
ANR	392874	CompoundStatement		138:44:4230:4230	392006	1					
ANR	392875	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		392006	0					
ANR	392876	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	34255:30:1083044:1083089	392006	0	True				
ANR	392877	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		392006	0		&&			
ANR	392878	CallExpression	Z_ISREF_P ( retval )		392006	0					
ANR	392879	Callee	Z_ISREF_P		392006	0					
ANR	392880	Identifier	Z_ISREF_P		392006	0					
ANR	392881	ArgumentList	retval		392006	1					
ANR	392882	Argument	retval		392006	0					
ANR	392883	Identifier	retval		392006	0					
ANR	392884	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		392006	1		==			
ANR	392885	CallExpression	Z_REFCOUNT_P ( retval )		392006	0					
ANR	392886	Callee	Z_REFCOUNT_P		392006	0					
ANR	392887	Identifier	Z_REFCOUNT_P		392006	0					
ANR	392888	ArgumentList	retval		392006	1					
ANR	392889	Argument	retval		392006	0					
ANR	392890	Identifier	retval		392006	0					
ANR	392891	PrimaryExpression	1		392006	1					
ANR	392892	CompoundStatement		139:78:4310:4310	392006	1					
ANR	392893	ExpressionStatement	ZVAL_UNREF ( retval )	34256:3:1083097:1083115	392006	0	True				
ANR	392894	CallExpression	ZVAL_UNREF ( retval )		392006	0					
ANR	392895	Callee	ZVAL_UNREF		392006	0					
ANR	392896	Identifier	ZVAL_UNREF		392006	0					
ANR	392897	ArgumentList	retval		392006	1					
ANR	392898	Argument	retval		392006	0					
ANR	392899	Identifier	retval		392006	0					
ANR	392900	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	34258:2:1083123:1083168	392006	1	True				
ANR	392901	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		392006	0					
ANR	392902	Callee	ZVAL_COPY		392006	0					
ANR	392903	Identifier	ZVAL_COPY		392006	0					
ANR	392904	ArgumentList	EX_VAR ( opline -> result . var )		392006	1					
ANR	392905	Argument	EX_VAR ( opline -> result . var )		392006	0					
ANR	392906	CallExpression	EX_VAR ( opline -> result . var )		392006	0					
ANR	392907	Callee	EX_VAR		392006	0					
ANR	392908	Identifier	EX_VAR		392006	0					
ANR	392909	ArgumentList	opline -> result . var		392006	1					
ANR	392910	Argument	opline -> result . var		392006	0					
ANR	392911	MemberAccess	opline -> result . var		392006	0					
ANR	392912	PtrMemberAccess	opline -> result		392006	0					
ANR	392913	Identifier	opline		392006	0					
ANR	392914	Identifier	result		392006	1					
ANR	392915	Identifier	var		392006	1					
ANR	392916	Argument	retval		392006	1					
ANR	392917	Identifier	retval		392006	0					
ANR	392918	ElseStatement	else		392006	0					
ANR	392919	CompoundStatement		143:8:4396:4396	392006	0					
ANR	392920	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	34260:2:1083182:1083231	392006	0	True				
ANR	392921	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		392006	0					
ANR	392922	Callee	ZVAL_INDIRECT		392006	0					
ANR	392923	Identifier	ZVAL_INDIRECT		392006	0					
ANR	392924	ArgumentList	EX_VAR ( opline -> result . var )		392006	1					
ANR	392925	Argument	EX_VAR ( opline -> result . var )		392006	0					
ANR	392926	CallExpression	EX_VAR ( opline -> result . var )		392006	0					
ANR	392927	Callee	EX_VAR		392006	0					
ANR	392928	Identifier	EX_VAR		392006	0					
ANR	392929	ArgumentList	opline -> result . var		392006	1					
ANR	392930	Argument	opline -> result . var		392006	0					
ANR	392931	MemberAccess	opline -> result . var		392006	0					
ANR	392932	PtrMemberAccess	opline -> result		392006	0					
ANR	392933	Identifier	opline		392006	0					
ANR	392934	Identifier	result		392006	1					
ANR	392935	Identifier	var		392006	1					
ANR	392936	Argument	retval		392006	1					
ANR	392937	Identifier	retval		392006	0					
ANR	392938	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	34262:1:1083237:1083274	392006	12	True				
ANR	392939	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		392006	0					
ANR	392940	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		392006	0					
ANR	392941	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		392006	0					
ANR	392942	ArgumentList			392006	1					
ANR	392943	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		392006	1					
ANR	392944	Identifier	zend_fetch_var_address_helper_SPEC_CV_UNUSED		392006	2					
ANR	392945	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		392006	3					
ANR	392946	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	34116:90:1078743:1078778	392006	0	True				
ANR	392947	ParameterType	int type		392006	0					
ANR	392948	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		392006	1					
ANR	392949	CFGEntryNode	ENTRY		392006		True				
ANR	392950	CFGExitNode	EXIT		392006		True				
ANR	392951	Symbol	ZEND_FETCH_CLASS_DEFAULT		392006						
ANR	392952	Symbol	exception		392006						
ANR	392953	Symbol	zend_get_target_symbol_table		392006						
ANR	392954	Symbol	opline -> op2 . var		392006						
ANR	392955	Symbol	IS_CV		392006						
ANR	392956	Symbol	Z_CONSTANT_P		392006						
ANR	392957	Symbol	* ce		392006						
ANR	392958	Symbol	type		392006						
ANR	392959	Symbol	Z_REFCOUNT_P		392006						
ANR	392960	Symbol	execute_data		392006						
ANR	392961	Symbol	opline -> extended_value		392006						
ANR	392962	Symbol	opline -> result		392006						
ANR	392963	Symbol	zend_std_get_static_property		392006						
ANR	392964	Symbol	zend_hash_find		392006						
ANR	392965	Symbol	opline		392006						
ANR	392966	Symbol	Z_CE_P		392006						
ANR	392967	Symbol	target_symbol_table		392006						
ANR	392968	Symbol	IS_STRING		392006						
ANR	392969	Symbol	ce -> name		392006						
ANR	392970	Symbol	zend_hash_update		392006						
ANR	392971	Symbol	BP_VAR_IS		392006						
ANR	392972	Symbol	IS_UNDEF		392006						
ANR	392973	Symbol	BP_VAR_R		392006						
ANR	392974	Symbol	IS_CONST		392006						
ANR	392975	Symbol	EG		392006						
ANR	392976	Symbol	NULL		392006						
ANR	392977	Symbol	Z_CACHE_SLOT_P		392006						
ANR	392978	Symbol	EX_CONSTANT		392006						
ANR	392979	Symbol	_get_zval_ptr_cv_undef		392006						
ANR	392980	Symbol	CE_STATIC_MEMBERS		392006						
ANR	392981	Symbol	E_NOTICE		392006						
ANR	392982	Symbol	varname		392006						
ANR	392983	Symbol	retval		392006						
ANR	392984	Symbol	name		392006						
ANR	392985	Symbol	EX_VAR		392006						
ANR	392986	Symbol	zend_fetch_class_by_name		392006						
ANR	392987	Symbol	Z_STR_P		392006						
ANR	392988	Symbol	Z_ISREF_P		392006						
ANR	392989	Symbol	IS_INDIRECT		392006						
ANR	392990	Symbol	opline -> op1		392006						
ANR	392991	Symbol	CACHED_PTR		392006						
ANR	392992	Symbol	opline -> op2		392006						
ANR	392993	Symbol	Z_INDIRECT_P		392006						
ANR	392994	Symbol	& EG		392006						
ANR	392995	Symbol	UNEXPECTED		392006						
ANR	392996	Symbol	ZEND_FETCH_CLASS_EXCEPTION		392006						
ANR	392997	Symbol	ZEND_FETCH_STATIC		392006						
ANR	392998	Symbol	opline -> op1 . var		392006						
ANR	392999	Symbol	uninitialized_zval		392006						
ANR	393000	Symbol	ce		392006						
ANR	393001	Symbol	SUCCESS		392006						
ANR	393002	Symbol	zval_get_string		392006						
ANR	393003	Symbol	ZEND_FETCH_TYPE_MASK		392006						
ANR	393004	Symbol	zend_hash_add_new		392006						
ANR	393005	Symbol	Z_TYPE_P		392006						
ANR	393006	Symbol	CACHED_POLYMORPHIC_PTR		392006						
ANR	393007	Symbol	ZSTR_VAL		392006						
ANR	393008	Symbol	* opline		392006						
ANR	393009	Symbol	ZEND_FETCH_GLOBAL_LOCK		392006						
ANR	393010	Symbol	zval_update_constant_ex		392006						
ANR	393011	Symbol	EXPECTED		392006						
ANR	393012	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		392006						
ANR	393013	Symbol	opline -> result . var		392006						
ANR	393014	Symbol	IS_UNUSED		392006						
ANR	393015	DeclStmt									
ANR	393016	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	393017	DeclStmt									
ANR	393018	Decl							zval	zval *	container
ANR	393019	DeclStmt									
ANR	393020	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	393021	DeclStmt									
ANR	393022	Decl							zval	zval *	container
ANR	393023	DeclStmt									
ANR	393024	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	393025	DeclStmt									
ANR	393026	Decl							zend_free_op	zend_free_op	free_op1
ANR	393027	DeclStmt									
ANR	393028	Decl							USE_OPLINE zval	USE_OPLINE zval *	object_ptr
ANR	393029	DeclStmt									
ANR	393030	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	393031	DeclStmt									
ANR	393032	Decl							zval	zval *	value
ANR	393033	DeclStmt									
ANR	393034	Decl							zval	zval *	variable_ptr
ANR	393035	DeclStmt									
ANR	393036	Decl							zval	zval *	dim
ANR	393037	DeclStmt									
ANR	393038	Decl							zval	zval *	property_name
ANR	393039	DeclStmt									
ANR	393040	Decl							zend_long	zend_long	offset
ANR	393041	DeclStmt									
ANR	393042	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	393043	DeclStmt									
ANR	393044	Decl							zval	zval *	retval_ref
ANR	393045	Decl							zval	zval *	retval_ptr
ANR	393046	DeclStmt									
ANR	393047	Decl							zend_arg_info	zend_arg_info *	ret_info
ANR	393048	DeclStmt									
ANR	393049	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	393050	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	393051	DeclStmt									
ANR	393052	Decl							zend_refcounted	zend_refcounted *	ref
ANR	393053	DeclStmt									
ANR	393054	Decl							zval	zval *	offset
ANR	393055	DeclStmt									
ANR	393056	Decl							zend_string	zend_string *	str
ANR	393057	DeclStmt									
ANR	393058	Decl							zend_ulong	zend_ulong	hval
ANR	393059	DeclStmt									
ANR	393060	Decl							zval	zval *	array
ANR	393061	DeclStmt									
ANR	393062	Decl							uint32_t	uint32_t	size
ANR	393063	DeclStmt									
ANR	393064	Decl							USE_OPLINE	USE_OPLINE	array
ANR	393065	DeclStmt									
ANR	393066	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	393067	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	393068	DeclStmt									
ANR	393069	Decl							HashTable	HashTable *	target_symbol_table
ANR	393070	DeclStmt									
ANR	393071	Decl							zval	zval *	var
ANR	393072	DeclStmt									
ANR	393073	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	393074	DeclStmt									
ANR	393075	Decl							zval	zval *	z
ANR	393076	DeclStmt									
ANR	393077	Decl							zend_class_entry	zend_class_entry *	ce
ANR	393078	DeclStmt									
ANR	393079	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	393080	DeclStmt									
ANR	393081	Decl							int	int	result
ANR	393082	DeclStmt									
ANR	393083	Decl							zval	zval	tmp
ANR	393084	Decl							zval	zval *	varname
ANR	393085	DeclStmt									
ANR	393086	Decl							zend_class_entry	zend_class_entry *	ce
ANR	393087	DeclStmt									
ANR	393088	Decl							HashTable	HashTable *	target_symbol_table
ANR	393089	DeclStmt									
ANR	393090	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	393091	DeclStmt									
ANR	393092	Decl							zval	zval *	value
ANR	393093	DeclStmt									
ANR	393094	Decl							zval	zval *	value_ptr
ANR	393095	DeclStmt									
ANR	393096	Decl							zval	zval *	value
ANR	393097	DeclStmt									
ANR	393098	Decl							zval	zval *	key
ANR	393099	DeclStmt									
ANR	393100	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393101	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393102	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393103	DeclStmt									
ANR	393104	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393105	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393106	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393107	DeclStmt									
ANR	393108	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393109	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393110	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393111	DeclStmt									
ANR	393112	Decl							zend_long	zend_long	overflow
ANR	393113	DeclStmt									
ANR	393114	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393115	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393116	DeclStmt									
ANR	393117	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393118	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393119	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393120	DeclStmt									
ANR	393121	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393122	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393123	DeclStmt									
ANR	393124	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393125	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393126	DeclStmt									
ANR	393127	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393128	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393129	DeclStmt									
ANR	393130	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393131	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393132	DeclStmt									
ANR	393133	Decl							zend_string	zend_string *	op1_str
ANR	393134	DeclStmt									
ANR	393135	Decl							zend_string	zend_string *	op2_str
ANR	393136	DeclStmt									
ANR	393137	Decl							zend_string	zend_string *	str
ANR	393138	DeclStmt									
ANR	393139	Decl							size_t	size_t	len
ANR	393140	DeclStmt									
ANR	393141	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393142	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393143	DeclStmt									
ANR	393144	Decl							int	int	result
ANR	393145	DeclStmt									
ANR	393146	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393147	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393148	DeclStmt									
ANR	393149	Decl							int	int	result
ANR	393150	DeclStmt									
ANR	393151	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393152	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393153	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393154	DeclStmt									
ANR	393155	Decl							int	int	result
ANR	393156	DeclStmt									
ANR	393157	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393158	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393159	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393160	DeclStmt									
ANR	393161	Decl							int	int	result
ANR	393162	DeclStmt									
ANR	393163	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393164	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393165	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393166	DeclStmt									
ANR	393167	Decl							int	int	result
ANR	393168	DeclStmt									
ANR	393169	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393170	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393171	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	393172	DeclStmt									
ANR	393173	Decl							int	int	result
ANR	393174	DeclStmt									
ANR	393175	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393176	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393177	DeclStmt									
ANR	393178	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393179	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393180	DeclStmt									
ANR	393181	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393182	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393183	DeclStmt									
ANR	393184	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393185	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393186	DeclStmt									
ANR	393187	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	393188	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	393189	Function	zend_binary_assign_op_obj_helper_SPEC_CV_CV	35638:0:1124715:1126811							
ANR	393190	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_CV_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		393189	0					
ANR	393191	CompoundStatement		35639:0:1124858:1126811	393189	0					
ANR	393192	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	35640:1:1124861:1124899	393189	0	True				
ANR	393193	IdentifierDecl	free_op_data1		393189	0					
ANR	393194	IdentifierDeclType	USE_OPLINE zend_free_op		393189	0					
ANR	393195	Identifier	free_op_data1		393189	1					
ANR	393196	IdentifierDeclStatement	zval * object ;	35642:1:1124902:1124914	393189	1	True				
ANR	393197	IdentifierDecl	* object		393189	0					
ANR	393198	IdentifierDeclType	zval *		393189	0					
ANR	393199	Identifier	object		393189	1					
ANR	393200	IdentifierDeclStatement	zval * property ;	35643:1:1124917:1124931	393189	2	True				
ANR	393201	IdentifierDecl	* property		393189	0					
ANR	393202	IdentifierDeclType	zval *		393189	0					
ANR	393203	Identifier	property		393189	1					
ANR	393204	IdentifierDeclStatement	zval * value ;	35644:1:1124934:1124945	393189	3	True				
ANR	393205	IdentifierDecl	* value		393189	0					
ANR	393206	IdentifierDeclType	zval *		393189	0					
ANR	393207	Identifier	value		393189	1					
ANR	393208	IdentifierDeclStatement	zval * zptr ;	35645:1:1124948:1124958	393189	4	True				
ANR	393209	IdentifierDecl	* zptr		393189	0					
ANR	393210	IdentifierDeclType	zval *		393189	0					
ANR	393211	Identifier	zptr		393189	1					
ANR	393212	ExpressionStatement	SAVE_OPLINE ( )	35647:1:1124962:1124975	393189	5	True				
ANR	393213	CallExpression	SAVE_OPLINE ( )		393189	0					
ANR	393214	Callee	SAVE_OPLINE		393189	0					
ANR	393215	Identifier	SAVE_OPLINE		393189	0					
ANR	393216	ArgumentList			393189	1					
ANR	393217	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	35648:1:1124978:1125044	393189	6	True				
ANR	393218	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		393189	0		=			
ANR	393219	Identifier	object		393189	0					
ANR	393220	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		393189	1					
ANR	393221	Callee	_get_zval_ptr_cv_BP_VAR_RW		393189	0					
ANR	393222	Identifier	_get_zval_ptr_cv_BP_VAR_RW		393189	0					
ANR	393223	ArgumentList	execute_data		393189	1					
ANR	393224	Argument	execute_data		393189	0					
ANR	393225	Identifier	execute_data		393189	0					
ANR	393226	Argument	opline -> op1 . var		393189	1					
ANR	393227	MemberAccess	opline -> op1 . var		393189	0					
ANR	393228	PtrMemberAccess	opline -> op1		393189	0					
ANR	393229	Identifier	opline		393189	0					
ANR	393230	Identifier	op1		393189	1					
ANR	393231	Identifier	var		393189	1					
ANR	393232	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		393189	7					
ANR	393233	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	35650:5:1125052:1125108	393189	0	True				
ANR	393234	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		393189	0		&&			
ANR	393235	EqualityExpression	IS_CV == IS_UNUSED		393189	0		==			
ANR	393236	Identifier	IS_CV		393189	0					
ANR	393237	Identifier	IS_UNUSED		393189	1					
ANR	393238	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		393189	1					
ANR	393239	Callee	UNEXPECTED		393189	0					
ANR	393240	Identifier	UNEXPECTED		393189	0					
ANR	393241	ArgumentList	Z_OBJ_P ( object ) == NULL		393189	1					
ANR	393242	Argument	Z_OBJ_P ( object ) == NULL		393189	0					
ANR	393243	EqualityExpression	Z_OBJ_P ( object ) == NULL		393189	0		==			
ANR	393244	CallExpression	Z_OBJ_P ( object )		393189	0					
ANR	393245	Callee	Z_OBJ_P		393189	0					
ANR	393246	Identifier	Z_OBJ_P		393189	0					
ANR	393247	ArgumentList	object		393189	1					
ANR	393248	Argument	object		393189	0					
ANR	393249	Identifier	object		393189	0					
ANR	393250	Identifier	NULL		393189	1					
ANR	393251	CompoundStatement		12:64:252:252	393189	1					
ANR	393252	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	35651:2:1125115:1125179	393189	0	True				
ANR	393253	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		393189	0					
ANR	393254	Callee	zend_throw_error		393189	0					
ANR	393255	Identifier	zend_throw_error		393189	0					
ANR	393256	ArgumentList	NULL		393189	1					
ANR	393257	Argument	NULL		393189	0					
ANR	393258	Identifier	NULL		393189	0					
ANR	393259	Argument	"""Using $this when not in object context"""		393189	1					
ANR	393260	PrimaryExpression	"""Using $this when not in object context"""		393189	0					
ANR	393261	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	35652:2:1125183:1125243	393189	1	True				
ANR	393262	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		393189	0					
ANR	393263	Callee	FREE_UNFETCHED_OP		393189	0					
ANR	393264	Identifier	FREE_UNFETCHED_OP		393189	0					
ANR	393265	ArgumentList	( opline + 1 ) -> op1_type		393189	1					
ANR	393266	Argument	( opline + 1 ) -> op1_type		393189	0					
ANR	393267	PtrMemberAccess	( opline + 1 ) -> op1_type		393189	0					
ANR	393268	AdditiveExpression	opline + 1		393189	0		+			
ANR	393269	Identifier	opline		393189	0					
ANR	393270	PrimaryExpression	1		393189	1					
ANR	393271	Identifier	op1_type		393189	1					
ANR	393272	Argument	( opline + 1 ) -> op1 . var		393189	1					
ANR	393273	MemberAccess	( opline + 1 ) -> op1 . var		393189	0					
ANR	393274	PtrMemberAccess	( opline + 1 ) -> op1		393189	0					
ANR	393275	AdditiveExpression	opline + 1		393189	0		+			
ANR	393276	Identifier	opline		393189	0					
ANR	393277	PrimaryExpression	1		393189	1					
ANR	393278	Identifier	op1		393189	1					
ANR	393279	Identifier	var		393189	1					
ANR	393280	ExpressionStatement	HANDLE_EXCEPTION ( )	35654:2:1125248:1125266	393189	2	True				
ANR	393281	CallExpression	HANDLE_EXCEPTION ( )		393189	0					
ANR	393282	Callee	HANDLE_EXCEPTION		393189	0					
ANR	393283	Identifier	HANDLE_EXCEPTION		393189	0					
ANR	393284	ArgumentList			393189	1					
ANR	393285	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	35657:1:1125273:1125340	393189	8	True				
ANR	393286	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		393189	0		=			
ANR	393287	Identifier	property		393189	0					
ANR	393288	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		393189	1					
ANR	393289	Callee	_get_zval_ptr_cv_BP_VAR_R		393189	0					
ANR	393290	Identifier	_get_zval_ptr_cv_BP_VAR_R		393189	0					
ANR	393291	ArgumentList	execute_data		393189	1					
ANR	393292	Argument	execute_data		393189	0					
ANR	393293	Identifier	execute_data		393189	0					
ANR	393294	Argument	opline -> op2 . var		393189	1					
ANR	393295	MemberAccess	opline -> op2 . var		393189	0					
ANR	393296	PtrMemberAccess	opline -> op2		393189	0					
ANR	393297	Identifier	opline		393189	0					
ANR	393298	Identifier	op2		393189	1					
ANR	393299	Identifier	var		393189	1					
ANR	393300	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		393189	9					
ANR	393301	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	35659:5:1125348:1125392	393189	0	True				
ANR	393302	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		393189	0		&&			
ANR	393303	EqualityExpression	IS_CV == IS_VAR		393189	0		==			
ANR	393304	Identifier	IS_CV		393189	0					
ANR	393305	Identifier	IS_VAR		393189	1					
ANR	393306	CallExpression	UNEXPECTED ( object == NULL )		393189	1					
ANR	393307	Callee	UNEXPECTED		393189	0					
ANR	393308	Identifier	UNEXPECTED		393189	0					
ANR	393309	ArgumentList	object == NULL		393189	1					
ANR	393310	Argument	object == NULL		393189	0					
ANR	393311	EqualityExpression	object == NULL		393189	0		==			
ANR	393312	Identifier	object		393189	0					
ANR	393313	Identifier	NULL		393189	1					
ANR	393314	CompoundStatement		21:52:536:536	393189	1					
ANR	393315	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	35660:2:1125399:1125462	393189	0	True				
ANR	393316	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		393189	0					
ANR	393317	Callee	zend_throw_error		393189	0					
ANR	393318	Identifier	zend_throw_error		393189	0					
ANR	393319	ArgumentList	NULL		393189	1					
ANR	393320	Argument	NULL		393189	0					
ANR	393321	Identifier	NULL		393189	0					
ANR	393322	Argument	"""Cannot use string offset as an object"""		393189	1					
ANR	393323	PrimaryExpression	"""Cannot use string offset as an object"""		393189	0					
ANR	393324	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	35661:2:1125466:1125526	393189	1	True				
ANR	393325	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		393189	0					
ANR	393326	Callee	FREE_UNFETCHED_OP		393189	0					
ANR	393327	Identifier	FREE_UNFETCHED_OP		393189	0					
ANR	393328	ArgumentList	( opline + 1 ) -> op1_type		393189	1					
ANR	393329	Argument	( opline + 1 ) -> op1_type		393189	0					
ANR	393330	PtrMemberAccess	( opline + 1 ) -> op1_type		393189	0					
ANR	393331	AdditiveExpression	opline + 1		393189	0		+			
ANR	393332	Identifier	opline		393189	0					
ANR	393333	PrimaryExpression	1		393189	1					
ANR	393334	Identifier	op1_type		393189	1					
ANR	393335	Argument	( opline + 1 ) -> op1 . var		393189	1					
ANR	393336	MemberAccess	( opline + 1 ) -> op1 . var		393189	0					
ANR	393337	PtrMemberAccess	( opline + 1 ) -> op1		393189	0					
ANR	393338	AdditiveExpression	opline + 1		393189	0		+			
ANR	393339	Identifier	opline		393189	0					
ANR	393340	PrimaryExpression	1		393189	1					
ANR	393341	Identifier	op1		393189	1					
ANR	393342	Identifier	var		393189	1					
ANR	393343	ExpressionStatement	HANDLE_EXCEPTION ( )	35663:2:1125531:1125549	393189	2	True				
ANR	393344	CallExpression	HANDLE_EXCEPTION ( )		393189	0					
ANR	393345	Callee	HANDLE_EXCEPTION		393189	0					
ANR	393346	Identifier	HANDLE_EXCEPTION		393189	0					
ANR	393347	ArgumentList			393189	1					
ANR	393348	DoStatement	do		393189	10					
ANR	393349	CompoundStatement		28:4:700:700	393189	0					
ANR	393350	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	35667:2:1125563:1125654	393189	0	True				
ANR	393351	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		393189	0		=			
ANR	393352	Identifier	value		393189	0					
ANR	393353	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		393189	1					
ANR	393354	Callee	get_zval_ptr_r		393189	0					
ANR	393355	Identifier	get_zval_ptr_r		393189	0					
ANR	393356	ArgumentList	( opline + 1 ) -> op1_type		393189	1					
ANR	393357	Argument	( opline + 1 ) -> op1_type		393189	0					
ANR	393358	PtrMemberAccess	( opline + 1 ) -> op1_type		393189	0					
ANR	393359	AdditiveExpression	opline + 1		393189	0		+			
ANR	393360	Identifier	opline		393189	0					
ANR	393361	PrimaryExpression	1		393189	1					
ANR	393362	Identifier	op1_type		393189	1					
ANR	393363	Argument	( opline + 1 ) -> op1		393189	1					
ANR	393364	PtrMemberAccess	( opline + 1 ) -> op1		393189	0					
ANR	393365	AdditiveExpression	opline + 1		393189	0		+			
ANR	393366	Identifier	opline		393189	0					
ANR	393367	PrimaryExpression	1		393189	1					
ANR	393368	Identifier	op1		393189	1					
ANR	393369	Argument	execute_data		393189	2					
ANR	393370	Identifier	execute_data		393189	0					
ANR	393371	Argument	& free_op_data1		393189	3					
ANR	393372	UnaryOperationExpression	& free_op_data1		393189	0					
ANR	393373	UnaryOperator	&		393189	0					
ANR	393374	Identifier	free_op_data1		393189	1					
ANR	393375	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		393189	1					
ANR	393376	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	35669:6:1125663:1125725	393189	0	True				
ANR	393377	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		393189	0		&&			
ANR	393378	EqualityExpression	IS_CV != IS_UNUSED		393189	0		!=			
ANR	393379	Identifier	IS_CV		393189	0					
ANR	393380	Identifier	IS_UNUSED		393189	1					
ANR	393381	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		393189	1					
ANR	393382	Callee	UNEXPECTED		393189	0					
ANR	393383	Identifier	UNEXPECTED		393189	0					
ANR	393384	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		393189	1					
ANR	393385	Argument	Z_TYPE_P ( object ) != IS_OBJECT		393189	0					
ANR	393386	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		393189	0		!=			
ANR	393387	CallExpression	Z_TYPE_P ( object )		393189	0					
ANR	393388	Callee	Z_TYPE_P		393189	0					
ANR	393389	Identifier	Z_TYPE_P		393189	0					
ANR	393390	ArgumentList	object		393189	1					
ANR	393391	Argument	object		393189	0					
ANR	393392	Identifier	object		393189	0					
ANR	393393	Identifier	IS_OBJECT		393189	1					
ANR	393394	CompoundStatement		31:71:869:869	393189	1					
ANR	393395	ExpressionStatement	ZVAL_DEREF ( object )	35670:3:1125733:1125751	393189	0	True				
ANR	393396	CallExpression	ZVAL_DEREF ( object )		393189	0					
ANR	393397	Callee	ZVAL_DEREF		393189	0					
ANR	393398	Identifier	ZVAL_DEREF		393189	0					
ANR	393399	ArgumentList	object		393189	1					
ANR	393400	Argument	object		393189	0					
ANR	393401	Identifier	object		393189	0					
ANR	393402	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		393189	1					
ANR	393403	Condition	UNEXPECTED ( ! make_real_object ( object ) )	35671:7:1125760:1125796	393189	0	True				
ANR	393404	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		393189	0					
ANR	393405	Callee	UNEXPECTED		393189	0					
ANR	393406	Identifier	UNEXPECTED		393189	0					
ANR	393407	ArgumentList	! make_real_object ( object )		393189	1					
ANR	393408	Argument	! make_real_object ( object )		393189	0					
ANR	393409	UnaryOperationExpression	! make_real_object ( object )		393189	0					
ANR	393410	UnaryOperator	!		393189	0					
ANR	393411	CallExpression	make_real_object ( object )		393189	1					
ANR	393412	Callee	make_real_object		393189	0					
ANR	393413	Identifier	make_real_object		393189	0					
ANR	393414	ArgumentList	object		393189	1					
ANR	393415	Argument	object		393189	0					
ANR	393416	Identifier	object		393189	0					
ANR	393417	CompoundStatement		33:46:940:940	393189	1					
ANR	393418	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	35672:4:1125805:1125870	393189	0	True				
ANR	393419	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		393189	0					
ANR	393420	Callee	zend_error		393189	0					
ANR	393421	Identifier	zend_error		393189	0					
ANR	393422	ArgumentList	E_WARNING		393189	1					
ANR	393423	Argument	E_WARNING		393189	0					
ANR	393424	Identifier	E_WARNING		393189	0					
ANR	393425	Argument	"""Attempt to assign property of non-object"""		393189	1					
ANR	393426	PrimaryExpression	"""Attempt to assign property of non-object"""		393189	0					
ANR	393427	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		393189	1					
ANR	393428	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	35673:8:1125880:1125916	393189	0	True				
ANR	393429	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393189	0					
ANR	393430	Callee	UNEXPECTED		393189	0					
ANR	393431	Identifier	UNEXPECTED		393189	0					
ANR	393432	ArgumentList	RETURN_VALUE_USED ( opline )		393189	1					
ANR	393433	Argument	RETURN_VALUE_USED ( opline )		393189	0					
ANR	393434	CallExpression	RETURN_VALUE_USED ( opline )		393189	0					
ANR	393435	Callee	RETURN_VALUE_USED		393189	0					
ANR	393436	Identifier	RETURN_VALUE_USED		393189	0					
ANR	393437	ArgumentList	opline		393189	1					
ANR	393438	Argument	opline		393189	0					
ANR	393439	Identifier	opline		393189	0					
ANR	393440	CompoundStatement		35:47:1060:1060	393189	1					
ANR	393441	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	35674:5:1125926:1125963	393189	0	True				
ANR	393442	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		393189	0					
ANR	393443	Callee	ZVAL_NULL		393189	0					
ANR	393444	Identifier	ZVAL_NULL		393189	0					
ANR	393445	ArgumentList	EX_VAR ( opline -> result . var )		393189	1					
ANR	393446	Argument	EX_VAR ( opline -> result . var )		393189	0					
ANR	393447	CallExpression	EX_VAR ( opline -> result . var )		393189	0					
ANR	393448	Callee	EX_VAR		393189	0					
ANR	393449	Identifier	EX_VAR		393189	0					
ANR	393450	ArgumentList	opline -> result . var		393189	1					
ANR	393451	Argument	opline -> result . var		393189	0					
ANR	393452	MemberAccess	opline -> result . var		393189	0					
ANR	393453	PtrMemberAccess	opline -> result		393189	0					
ANR	393454	Identifier	opline		393189	0					
ANR	393455	Identifier	result		393189	1					
ANR	393456	Identifier	var		393189	1					
ANR	393457	BreakStatement	break ;	35676:4:1125975:1125980	393189	2	True				
ANR	393458	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		393189	2					
ANR	393459	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	35681:6:1126053:1126274	393189	0	True				
ANR	393460	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		393189	0		&&			
ANR	393461	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		393189	0					
ANR	393462	Callee	EXPECTED		393189	0					
ANR	393463	Identifier	EXPECTED		393189	0					
ANR	393464	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		393189	1					
ANR	393465	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		393189	0					
ANR	393466	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		393189	0					
ANR	393467	CallExpression	Z_OBJ_HT_P ( object )		393189	0					
ANR	393468	Callee	Z_OBJ_HT_P		393189	0					
ANR	393469	Identifier	Z_OBJ_HT_P		393189	0					
ANR	393470	ArgumentList	object		393189	1					
ANR	393471	Argument	object		393189	0					
ANR	393472	Identifier	object		393189	0					
ANR	393473	Identifier	get_property_ptr_ptr		393189	1					
ANR	393474	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		393189	1					
ANR	393475	Callee	EXPECTED		393189	0					
ANR	393476	Identifier	EXPECTED		393189	0					
ANR	393477	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		393189	1					
ANR	393478	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		393189	0					
ANR	393479	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		393189	0		!=			
ANR	393480	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		393189	0		=			
ANR	393481	Identifier	zptr		393189	0					
ANR	393482	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		393189	1					
ANR	393483	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		393189	0					
ANR	393484	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		393189	0					
ANR	393485	CallExpression	Z_OBJ_HT_P ( object )		393189	0					
ANR	393486	Callee	Z_OBJ_HT_P		393189	0					
ANR	393487	Identifier	Z_OBJ_HT_P		393189	0					
ANR	393488	ArgumentList	object		393189	1					
ANR	393489	Argument	object		393189	0					
ANR	393490	Identifier	object		393189	0					
ANR	393491	Identifier	get_property_ptr_ptr		393189	1					
ANR	393492	ArgumentList	object		393189	1					
ANR	393493	Argument	object		393189	0					
ANR	393494	Identifier	object		393189	0					
ANR	393495	Argument	property		393189	1					
ANR	393496	Identifier	property		393189	0					
ANR	393497	Argument	BP_VAR_RW		393189	2					
ANR	393498	Identifier	BP_VAR_RW		393189	0					
ANR	393499	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		393189	3					
ANR	393500	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		393189	0					
ANR	393501	Condition	IS_CV == IS_CONST		393189	0					
ANR	393502	EqualityExpression	IS_CV == IS_CONST		393189	0		==			
ANR	393503	Identifier	IS_CV		393189	0					
ANR	393504	Identifier	IS_CONST		393189	1					
ANR	393505	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		393189	1					
ANR	393506	Callee	CACHE_ADDR		393189	0					
ANR	393507	Identifier	CACHE_ADDR		393189	0					
ANR	393508	ArgumentList	Z_CACHE_SLOT_P ( property )		393189	1					
ANR	393509	Argument	Z_CACHE_SLOT_P ( property )		393189	0					
ANR	393510	CallExpression	Z_CACHE_SLOT_P ( property )		393189	0					
ANR	393511	Callee	Z_CACHE_SLOT_P		393189	0					
ANR	393512	Identifier	Z_CACHE_SLOT_P		393189	0					
ANR	393513	ArgumentList	property		393189	1					
ANR	393514	Argument	property		393189	0					
ANR	393515	Identifier	property		393189	0					
ANR	393516	Identifier	NULL		393189	2					
ANR	393517	Identifier	NULL		393189	1					
ANR	393518	CompoundStatement		44:173:1418:1418	393189	1					
ANR	393519	ExpressionStatement	ZVAL_DEREF ( zptr )	35684:3:1126283:1126299	393189	0	True				
ANR	393520	CallExpression	ZVAL_DEREF ( zptr )		393189	0					
ANR	393521	Callee	ZVAL_DEREF		393189	0					
ANR	393522	Identifier	ZVAL_DEREF		393189	0					
ANR	393523	ArgumentList	zptr		393189	1					
ANR	393524	Argument	zptr		393189	0					
ANR	393525	Identifier	zptr		393189	0					
ANR	393526	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	35685:3:1126304:1126329	393189	1	True				
ANR	393527	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		393189	0					
ANR	393528	Callee	SEPARATE_ZVAL_NOREF		393189	0					
ANR	393529	Identifier	SEPARATE_ZVAL_NOREF		393189	0					
ANR	393530	ArgumentList	zptr		393189	1					
ANR	393531	Argument	zptr		393189	0					
ANR	393532	Identifier	zptr		393189	0					
ANR	393533	ExpressionStatement	"binary_op ( zptr , zptr , value )"	35687:3:1126335:1126363	393189	2	True				
ANR	393534	CallExpression	"binary_op ( zptr , zptr , value )"		393189	0					
ANR	393535	Callee	binary_op		393189	0					
ANR	393536	Identifier	binary_op		393189	0					
ANR	393537	ArgumentList	zptr		393189	1					
ANR	393538	Argument	zptr		393189	0					
ANR	393539	Identifier	zptr		393189	0					
ANR	393540	Argument	zptr		393189	1					
ANR	393541	Identifier	zptr		393189	0					
ANR	393542	Argument	value		393189	2					
ANR	393543	Identifier	value		393189	0					
ANR	393544	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		393189	3					
ANR	393545	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	35688:7:1126372:1126408	393189	0	True				
ANR	393546	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393189	0					
ANR	393547	Callee	UNEXPECTED		393189	0					
ANR	393548	Identifier	UNEXPECTED		393189	0					
ANR	393549	ArgumentList	RETURN_VALUE_USED ( opline )		393189	1					
ANR	393550	Argument	RETURN_VALUE_USED ( opline )		393189	0					
ANR	393551	CallExpression	RETURN_VALUE_USED ( opline )		393189	0					
ANR	393552	Callee	RETURN_VALUE_USED		393189	0					
ANR	393553	Identifier	RETURN_VALUE_USED		393189	0					
ANR	393554	ArgumentList	opline		393189	1					
ANR	393555	Argument	opline		393189	0					
ANR	393556	Identifier	opline		393189	0					
ANR	393557	CompoundStatement		50:46:1552:1552	393189	1					
ANR	393558	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	35689:4:1126417:1126460	393189	0	True				
ANR	393559	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		393189	0					
ANR	393560	Callee	ZVAL_COPY		393189	0					
ANR	393561	Identifier	ZVAL_COPY		393189	0					
ANR	393562	ArgumentList	EX_VAR ( opline -> result . var )		393189	1					
ANR	393563	Argument	EX_VAR ( opline -> result . var )		393189	0					
ANR	393564	CallExpression	EX_VAR ( opline -> result . var )		393189	0					
ANR	393565	Callee	EX_VAR		393189	0					
ANR	393566	Identifier	EX_VAR		393189	0					
ANR	393567	ArgumentList	opline -> result . var		393189	1					
ANR	393568	Argument	opline -> result . var		393189	0					
ANR	393569	MemberAccess	opline -> result . var		393189	0					
ANR	393570	PtrMemberAccess	opline -> result		393189	0					
ANR	393571	Identifier	opline		393189	0					
ANR	393572	Identifier	result		393189	1					
ANR	393573	Identifier	var		393189	1					
ANR	393574	Argument	zptr		393189	1					
ANR	393575	Identifier	zptr		393189	0					
ANR	393576	ElseStatement	else		393189	0					
ANR	393577	CompoundStatement		53:9:1617:1617	393189	0					
ANR	393578	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	35692:3:1126481:1126697	393189	0	True				
ANR	393579	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		393189	0					
ANR	393580	Callee	zend_assign_op_overloaded_property		393189	0					
ANR	393581	Identifier	zend_assign_op_overloaded_property		393189	0					
ANR	393582	ArgumentList	object		393189	1					
ANR	393583	Argument	object		393189	0					
ANR	393584	Identifier	object		393189	0					
ANR	393585	Argument	property		393189	1					
ANR	393586	Identifier	property		393189	0					
ANR	393587	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		393189	2					
ANR	393588	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		393189	0					
ANR	393589	Condition	IS_CV == IS_CONST		393189	0					
ANR	393590	EqualityExpression	IS_CV == IS_CONST		393189	0		==			
ANR	393591	Identifier	IS_CV		393189	0					
ANR	393592	Identifier	IS_CONST		393189	1					
ANR	393593	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		393189	1					
ANR	393594	Callee	CACHE_ADDR		393189	0					
ANR	393595	Identifier	CACHE_ADDR		393189	0					
ANR	393596	ArgumentList	Z_CACHE_SLOT_P ( property )		393189	1					
ANR	393597	Argument	Z_CACHE_SLOT_P ( property )		393189	0					
ANR	393598	CallExpression	Z_CACHE_SLOT_P ( property )		393189	0					
ANR	393599	Callee	Z_CACHE_SLOT_P		393189	0					
ANR	393600	Identifier	Z_CACHE_SLOT_P		393189	0					
ANR	393601	ArgumentList	property		393189	1					
ANR	393602	Argument	property		393189	0					
ANR	393603	Identifier	property		393189	0					
ANR	393604	Identifier	NULL		393189	2					
ANR	393605	Argument	value		393189	3					
ANR	393606	Identifier	value		393189	0					
ANR	393607	Argument	binary_op		393189	4					
ANR	393608	Identifier	binary_op		393189	0					
ANR	393609	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		393189	5					
ANR	393610	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		393189	0					
ANR	393611	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393189	0					
ANR	393612	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393189	0					
ANR	393613	Callee	UNEXPECTED		393189	0					
ANR	393614	Identifier	UNEXPECTED		393189	0					
ANR	393615	ArgumentList	RETURN_VALUE_USED ( opline )		393189	1					
ANR	393616	Argument	RETURN_VALUE_USED ( opline )		393189	0					
ANR	393617	CallExpression	RETURN_VALUE_USED ( opline )		393189	0					
ANR	393618	Callee	RETURN_VALUE_USED		393189	0					
ANR	393619	Identifier	RETURN_VALUE_USED		393189	0					
ANR	393620	ArgumentList	opline		393189	1					
ANR	393621	Argument	opline		393189	0					
ANR	393622	Identifier	opline		393189	0					
ANR	393623	CallExpression	EX_VAR ( opline -> result . var )		393189	1					
ANR	393624	Callee	EX_VAR		393189	0					
ANR	393625	Identifier	EX_VAR		393189	0					
ANR	393626	ArgumentList	opline -> result . var		393189	1					
ANR	393627	Argument	opline -> result . var		393189	0					
ANR	393628	MemberAccess	opline -> result . var		393189	0					
ANR	393629	PtrMemberAccess	opline -> result		393189	0					
ANR	393630	Identifier	opline		393189	0					
ANR	393631	Identifier	result		393189	1					
ANR	393632	Identifier	var		393189	1					
ANR	393633	Identifier	NULL		393189	2					
ANR	393634	Condition	0	35694:10:1126713:1126713	393189	1	True				
ANR	393635	PrimaryExpression	0		393189	0					
ANR	393636	ExpressionStatement	FREE_OP ( free_op_data1 )	35696:1:1126719:1126741	393189	11	True				
ANR	393637	CallExpression	FREE_OP ( free_op_data1 )		393189	0					
ANR	393638	Callee	FREE_OP		393189	0					
ANR	393639	Identifier	FREE_OP		393189	0					
ANR	393640	ArgumentList	free_op_data1		393189	1					
ANR	393641	Argument	free_op_data1		393189	0					
ANR	393642	Identifier	free_op_data1		393189	0					
ANR	393643	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	35700:1:1126781:1126809	393189	12	True				
ANR	393644	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		393189	0					
ANR	393645	Callee	ZEND_VM_NEXT_OPCODE_EX		393189	0					
ANR	393646	Identifier	ZEND_VM_NEXT_OPCODE_EX		393189	0					
ANR	393647	ArgumentList	1		393189	1					
ANR	393648	Argument	1		393189	0					
ANR	393649	PrimaryExpression	1		393189	0					
ANR	393650	Argument	2		393189	1					
ANR	393651	PrimaryExpression	2		393189	0					
ANR	393652	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		393189	1					
ANR	393653	Identifier	zend_binary_assign_op_obj_helper_SPEC_CV_CV		393189	2					
ANR	393654	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		393189	3					
ANR	393655	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	35638:89:1124804:1124855	393189	0	True				
ANR	393656	ParameterType	binary_op_type binary_op		393189	0					
ANR	393657	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		393189	1					
ANR	393658	CFGEntryNode	ENTRY		393189		True				
ANR	393659	CFGExitNode	EXIT		393189		True				
ANR	393660	Symbol	opline -> op1		393189						
ANR	393661	Symbol	opline -> op2		393189						
ANR	393662	Symbol	opline -> op2 . var		393189						
ANR	393663	Symbol	IS_CV		393189						
ANR	393664	Symbol	Z_OBJ_P		393189						
ANR	393665	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		393189						
ANR	393666	Symbol	free_op_data1		393189						
ANR	393667	Symbol	zptr		393189						
ANR	393668	Symbol	execute_data		393189						
ANR	393669	Symbol	opline -> result		393189						
ANR	393670	Symbol	( opline + 1 ) -> op1		393189						
ANR	393671	Symbol	UNEXPECTED		393189						
ANR	393672	Symbol	E_WARNING		393189						
ANR	393673	Symbol	make_real_object		393189						
ANR	393674	Symbol	RETURN_VALUE_USED		393189						
ANR	393675	Symbol	( opline + 1 ) -> op1 . var		393189						
ANR	393676	Symbol	opline		393189						
ANR	393677	Symbol	get_zval_ptr_r		393189						
ANR	393678	Symbol	property		393189						
ANR	393679	Symbol	opline -> op1 . var		393189						
ANR	393680	Symbol	value		393189						
ANR	393681	Symbol	binary_op		393189						
ANR	393682	Symbol	BP_VAR_RW		393189						
ANR	393683	Symbol	( opline + 1 ) -> op1_type		393189						
ANR	393684	Symbol	IS_CONST		393189						
ANR	393685	Symbol	NULL		393189						
ANR	393686	Symbol	Z_CACHE_SLOT_P		393189						
ANR	393687	Symbol	_get_zval_ptr_cv_BP_VAR_R		393189						
ANR	393688	Symbol	Z_TYPE_P		393189						
ANR	393689	Symbol	* Z_OBJ_HT_P		393189						
ANR	393690	Symbol	CACHE_ADDR		393189						
ANR	393691	Symbol	* opline		393189						
ANR	393692	Symbol	Z_OBJ_HT_P		393189						
ANR	393693	Symbol	_get_zval_ptr_cv_BP_VAR_RW		393189						
ANR	393694	Symbol	EX_VAR		393189						
ANR	393695	Symbol	IS_OBJECT		393189						
ANR	393696	Symbol	IS_VAR		393189						
ANR	393697	Symbol	EXPECTED		393189						
ANR	393698	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		393189						
ANR	393699	Symbol	& free_op_data1		393189						
ANR	393700	Symbol	opline -> result . var		393189						
ANR	393701	Symbol	object		393189						
ANR	393702	Symbol	IS_UNUSED		393189						
ANR	393703	Function	zend_binary_assign_op_dim_helper_SPEC_CV_CV	35703:0:1126814:1128988							
ANR	393704	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_CV_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		393703	0					
ANR	393705	CompoundStatement		35704:0:1126957:1128988	393703	0					
ANR	393706	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op_data1 ;	35705:1:1126960:1126998	393703	0	True				
ANR	393707	IdentifierDecl	free_op_data1		393703	0					
ANR	393708	IdentifierDeclType	USE_OPLINE zend_free_op		393703	0					
ANR	393709	Identifier	free_op_data1		393703	1					
ANR	393710	IdentifierDeclStatement	"zval * var_ptr , rv ;"	35707:1:1127001:1127018	393703	1	True				
ANR	393711	IdentifierDecl	* var_ptr		393703	0					
ANR	393712	IdentifierDeclType	zval *		393703	0					
ANR	393713	Identifier	var_ptr		393703	1					
ANR	393714	IdentifierDecl	rv		393703	1					
ANR	393715	IdentifierDeclType	zval		393703	0					
ANR	393716	Identifier	rv		393703	1					
ANR	393717	IdentifierDeclStatement	"zval * value , * container , * dim ;"	35708:1:1127021:1127050	393703	2	True				
ANR	393718	IdentifierDecl	* value		393703	0					
ANR	393719	IdentifierDeclType	zval *		393703	0					
ANR	393720	Identifier	value		393703	1					
ANR	393721	IdentifierDecl	* container		393703	1					
ANR	393722	IdentifierDeclType	zval *		393703	0					
ANR	393723	Identifier	container		393703	1					
ANR	393724	IdentifierDecl	* dim		393703	2					
ANR	393725	IdentifierDeclType	zval *		393703	0					
ANR	393726	Identifier	dim		393703	1					
ANR	393727	ExpressionStatement	SAVE_OPLINE ( )	35710:1:1127054:1127067	393703	3	True				
ANR	393728	CallExpression	SAVE_OPLINE ( )		393703	0					
ANR	393729	Callee	SAVE_OPLINE		393703	0					
ANR	393730	Identifier	SAVE_OPLINE		393703	0					
ANR	393731	ArgumentList			393703	1					
ANR	393732	ExpressionStatement	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	35711:1:1127070:1127139	393703	4	True				
ANR	393733	AssignmentExpression	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		393703	0		=			
ANR	393734	Identifier	container		393703	0					
ANR	393735	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		393703	1					
ANR	393736	Callee	_get_zval_ptr_cv_BP_VAR_RW		393703	0					
ANR	393737	Identifier	_get_zval_ptr_cv_BP_VAR_RW		393703	0					
ANR	393738	ArgumentList	execute_data		393703	1					
ANR	393739	Argument	execute_data		393703	0					
ANR	393740	Identifier	execute_data		393703	0					
ANR	393741	Argument	opline -> op1 . var		393703	1					
ANR	393742	MemberAccess	opline -> op1 . var		393703	0					
ANR	393743	PtrMemberAccess	opline -> op1		393703	0					
ANR	393744	Identifier	opline		393703	0					
ANR	393745	Identifier	op1		393703	1					
ANR	393746	Identifier	var		393703	1					
ANR	393747	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		393703	5					
ANR	393748	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	35712:5:1127146:1127205	393703	0	True				
ANR	393749	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		393703	0		&&			
ANR	393750	EqualityExpression	IS_CV == IS_UNUSED		393703	0		==			
ANR	393751	Identifier	IS_CV		393703	0					
ANR	393752	Identifier	IS_UNUSED		393703	1					
ANR	393753	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		393703	1					
ANR	393754	Callee	UNEXPECTED		393703	0					
ANR	393755	Identifier	UNEXPECTED		393703	0					
ANR	393756	ArgumentList	Z_OBJ_P ( container ) == NULL		393703	1					
ANR	393757	Argument	Z_OBJ_P ( container ) == NULL		393703	0					
ANR	393758	EqualityExpression	Z_OBJ_P ( container ) == NULL		393703	0		==			
ANR	393759	CallExpression	Z_OBJ_P ( container )		393703	0					
ANR	393760	Callee	Z_OBJ_P		393703	0					
ANR	393761	Identifier	Z_OBJ_P		393703	0					
ANR	393762	ArgumentList	container		393703	1					
ANR	393763	Argument	container		393703	0					
ANR	393764	Identifier	container		393703	0					
ANR	393765	Identifier	NULL		393703	1					
ANR	393766	CompoundStatement		9:67:250:250	393703	1					
ANR	393767	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	35713:2:1127212:1127276	393703	0	True				
ANR	393768	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		393703	0					
ANR	393769	Callee	zend_throw_error		393703	0					
ANR	393770	Identifier	zend_throw_error		393703	0					
ANR	393771	ArgumentList	NULL		393703	1					
ANR	393772	Argument	NULL		393703	0					
ANR	393773	Identifier	NULL		393703	0					
ANR	393774	Argument	"""Using $this when not in object context"""		393703	1					
ANR	393775	PrimaryExpression	"""Using $this when not in object context"""		393703	0					
ANR	393776	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	35714:2:1127280:1127340	393703	1	True				
ANR	393777	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		393703	0					
ANR	393778	Callee	FREE_UNFETCHED_OP		393703	0					
ANR	393779	Identifier	FREE_UNFETCHED_OP		393703	0					
ANR	393780	ArgumentList	( opline + 1 ) -> op1_type		393703	1					
ANR	393781	Argument	( opline + 1 ) -> op1_type		393703	0					
ANR	393782	PtrMemberAccess	( opline + 1 ) -> op1_type		393703	0					
ANR	393783	AdditiveExpression	opline + 1		393703	0		+			
ANR	393784	Identifier	opline		393703	0					
ANR	393785	PrimaryExpression	1		393703	1					
ANR	393786	Identifier	op1_type		393703	1					
ANR	393787	Argument	( opline + 1 ) -> op1 . var		393703	1					
ANR	393788	MemberAccess	( opline + 1 ) -> op1 . var		393703	0					
ANR	393789	PtrMemberAccess	( opline + 1 ) -> op1		393703	0					
ANR	393790	AdditiveExpression	opline + 1		393703	0		+			
ANR	393791	Identifier	opline		393703	0					
ANR	393792	PrimaryExpression	1		393703	1					
ANR	393793	Identifier	op1		393703	1					
ANR	393794	Identifier	var		393703	1					
ANR	393795	ExpressionStatement	HANDLE_EXCEPTION ( )	35716:2:1127345:1127363	393703	2	True				
ANR	393796	CallExpression	HANDLE_EXCEPTION ( )		393703	0					
ANR	393797	Callee	HANDLE_EXCEPTION		393703	0					
ANR	393798	Identifier	HANDLE_EXCEPTION		393703	0					
ANR	393799	ArgumentList			393703	1					
ANR	393800	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( container == NULL ) )		393703	6					
ANR	393801	Condition	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )	35718:5:1127373:1127420	393703	0	True				
ANR	393802	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )		393703	0		&&			
ANR	393803	EqualityExpression	IS_CV == IS_VAR		393703	0		==			
ANR	393804	Identifier	IS_CV		393703	0					
ANR	393805	Identifier	IS_VAR		393703	1					
ANR	393806	CallExpression	UNEXPECTED ( container == NULL )		393703	1					
ANR	393807	Callee	UNEXPECTED		393703	0					
ANR	393808	Identifier	UNEXPECTED		393703	0					
ANR	393809	ArgumentList	container == NULL		393703	1					
ANR	393810	Argument	container == NULL		393703	0					
ANR	393811	EqualityExpression	container == NULL		393703	0		==			
ANR	393812	Identifier	container		393703	0					
ANR	393813	Identifier	NULL		393703	1					
ANR	393814	CompoundStatement		15:55:465:465	393703	1					
ANR	393815	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	35719:2:1127427:1127489	393703	0	True				
ANR	393816	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		393703	0					
ANR	393817	Callee	zend_throw_error		393703	0					
ANR	393818	Identifier	zend_throw_error		393703	0					
ANR	393819	ArgumentList	NULL		393703	1					
ANR	393820	Argument	NULL		393703	0					
ANR	393821	Identifier	NULL		393703	0					
ANR	393822	Argument	"""Cannot use string offset as an array"""		393703	1					
ANR	393823	PrimaryExpression	"""Cannot use string offset as an array"""		393703	0					
ANR	393824	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	35720:2:1127493:1127553	393703	1	True				
ANR	393825	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		393703	0					
ANR	393826	Callee	FREE_UNFETCHED_OP		393703	0					
ANR	393827	Identifier	FREE_UNFETCHED_OP		393703	0					
ANR	393828	ArgumentList	( opline + 1 ) -> op1_type		393703	1					
ANR	393829	Argument	( opline + 1 ) -> op1_type		393703	0					
ANR	393830	PtrMemberAccess	( opline + 1 ) -> op1_type		393703	0					
ANR	393831	AdditiveExpression	opline + 1		393703	0		+			
ANR	393832	Identifier	opline		393703	0					
ANR	393833	PrimaryExpression	1		393703	1					
ANR	393834	Identifier	op1_type		393703	1					
ANR	393835	Argument	( opline + 1 ) -> op1 . var		393703	1					
ANR	393836	MemberAccess	( opline + 1 ) -> op1 . var		393703	0					
ANR	393837	PtrMemberAccess	( opline + 1 ) -> op1		393703	0					
ANR	393838	AdditiveExpression	opline + 1		393703	0		+			
ANR	393839	Identifier	opline		393703	0					
ANR	393840	PrimaryExpression	1		393703	1					
ANR	393841	Identifier	op1		393703	1					
ANR	393842	Identifier	var		393703	1					
ANR	393843	ExpressionStatement	HANDLE_EXCEPTION ( )	35722:2:1127558:1127576	393703	2	True				
ANR	393844	CallExpression	HANDLE_EXCEPTION ( )		393703	0					
ANR	393845	Callee	HANDLE_EXCEPTION		393703	0					
ANR	393846	Identifier	HANDLE_EXCEPTION		393703	0					
ANR	393847	ArgumentList			393703	1					
ANR	393848	ExpressionStatement	"dim = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	35725:1:1127583:1127645	393703	7	True				
ANR	393849	AssignmentExpression	"dim = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		393703	0		=			
ANR	393850	Identifier	dim		393703	0					
ANR	393851	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		393703	1					
ANR	393852	Callee	_get_zval_ptr_cv_BP_VAR_R		393703	0					
ANR	393853	Identifier	_get_zval_ptr_cv_BP_VAR_R		393703	0					
ANR	393854	ArgumentList	execute_data		393703	1					
ANR	393855	Argument	execute_data		393703	0					
ANR	393856	Identifier	execute_data		393703	0					
ANR	393857	Argument	opline -> op2 . var		393703	1					
ANR	393858	MemberAccess	opline -> op2 . var		393703	0					
ANR	393859	PtrMemberAccess	opline -> op2		393703	0					
ANR	393860	Identifier	opline		393703	0					
ANR	393861	Identifier	op2		393703	1					
ANR	393862	Identifier	var		393703	1					
ANR	393863	DoStatement	do		393703	8					
ANR	393864	CompoundStatement		24:4:694:694	393703	0					
ANR	393865	IfStatement	if ( IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		393703	0					
ANR	393866	Condition	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	35728:6:1127660:1127724	393703	0	True				
ANR	393867	OrExpression	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		393703	0		||			
ANR	393868	EqualityExpression	IS_CV == IS_UNUSED		393703	0		==			
ANR	393869	Identifier	IS_CV		393703	0					
ANR	393870	Identifier	IS_UNUSED		393703	1					
ANR	393871	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		393703	1					
ANR	393872	Callee	UNEXPECTED		393703	0					
ANR	393873	Identifier	UNEXPECTED		393703	0					
ANR	393874	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		393703	1					
ANR	393875	Argument	Z_TYPE_P ( container ) != IS_ARRAY		393703	0					
ANR	393876	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		393703	0		!=			
ANR	393877	CallExpression	Z_TYPE_P ( container )		393703	0					
ANR	393878	Callee	Z_TYPE_P		393703	0					
ANR	393879	Identifier	Z_TYPE_P		393703	0					
ANR	393880	ArgumentList	container		393703	1					
ANR	393881	Argument	container		393703	0					
ANR	393882	Identifier	container		393703	0					
ANR	393883	Identifier	IS_ARRAY		393703	1					
ANR	393884	CompoundStatement		25:73:769:769	393703	1					
ANR	393885	IfStatement	if ( IS_CV != IS_UNUSED )		393703	0					
ANR	393886	Condition	IS_CV != IS_UNUSED	35729:7:1127736:1127753	393703	0	True				
ANR	393887	EqualityExpression	IS_CV != IS_UNUSED		393703	0		!=			
ANR	393888	Identifier	IS_CV		393703	0					
ANR	393889	Identifier	IS_UNUSED		393703	1					
ANR	393890	CompoundStatement		26:27:798:798	393703	1					
ANR	393891	ExpressionStatement	ZVAL_DEREF ( container )	35730:4:1127762:1127783	393703	0	True				
ANR	393892	CallExpression	ZVAL_DEREF ( container )		393703	0					
ANR	393893	Callee	ZVAL_DEREF		393703	0					
ANR	393894	Identifier	ZVAL_DEREF		393703	0					
ANR	393895	ArgumentList	container		393703	1					
ANR	393896	Argument	container		393703	0					
ANR	393897	Identifier	container		393703	0					
ANR	393898	IfStatement	if ( IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		393703	1					
ANR	393899	Condition	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	35732:7:1127797:1127860	393703	0	True				
ANR	393900	OrExpression	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		393703	0		||			
ANR	393901	EqualityExpression	IS_CV == IS_UNUSED		393703	0		==			
ANR	393902	Identifier	IS_CV		393703	0					
ANR	393903	Identifier	IS_UNUSED		393703	1					
ANR	393904	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		393703	1					
ANR	393905	Callee	EXPECTED		393703	0					
ANR	393906	Identifier	EXPECTED		393703	0					
ANR	393907	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		393703	1					
ANR	393908	Argument	Z_TYPE_P ( container ) == IS_OBJECT		393703	0					
ANR	393909	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		393703	0		==			
ANR	393910	CallExpression	Z_TYPE_P ( container )		393703	0					
ANR	393911	Callee	Z_TYPE_P		393703	0					
ANR	393912	Identifier	Z_TYPE_P		393703	0					
ANR	393913	ArgumentList	container		393703	1					
ANR	393914	Argument	container		393703	0					
ANR	393915	Identifier	container		393703	0					
ANR	393916	Identifier	IS_OBJECT		393703	1					
ANR	393917	CompoundStatement		29:73:905:905	393703	1					
ANR	393918	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	35733:4:1127869:1127960	393703	0	True				
ANR	393919	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		393703	0		=			
ANR	393920	Identifier	value		393703	0					
ANR	393921	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		393703	1					
ANR	393922	Callee	get_zval_ptr_r		393703	0					
ANR	393923	Identifier	get_zval_ptr_r		393703	0					
ANR	393924	ArgumentList	( opline + 1 ) -> op1_type		393703	1					
ANR	393925	Argument	( opline + 1 ) -> op1_type		393703	0					
ANR	393926	PtrMemberAccess	( opline + 1 ) -> op1_type		393703	0					
ANR	393927	AdditiveExpression	opline + 1		393703	0		+			
ANR	393928	Identifier	opline		393703	0					
ANR	393929	PrimaryExpression	1		393703	1					
ANR	393930	Identifier	op1_type		393703	1					
ANR	393931	Argument	( opline + 1 ) -> op1		393703	1					
ANR	393932	PtrMemberAccess	( opline + 1 ) -> op1		393703	0					
ANR	393933	AdditiveExpression	opline + 1		393703	0		+			
ANR	393934	Identifier	opline		393703	0					
ANR	393935	PrimaryExpression	1		393703	1					
ANR	393936	Identifier	op1		393703	1					
ANR	393937	Argument	execute_data		393703	2					
ANR	393938	Identifier	execute_data		393703	0					
ANR	393939	Argument	& free_op_data1		393703	3					
ANR	393940	UnaryOperationExpression	& free_op_data1		393703	0					
ANR	393941	UnaryOperator	&		393703	0					
ANR	393942	Identifier	free_op_data1		393703	1					
ANR	393943	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	35734:4:1127966:1128104	393703	1	True				
ANR	393944	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		393703	0					
ANR	393945	Callee	zend_binary_assign_op_obj_dim		393703	0					
ANR	393946	Identifier	zend_binary_assign_op_obj_dim		393703	0					
ANR	393947	ArgumentList	container		393703	1					
ANR	393948	Argument	container		393703	0					
ANR	393949	Identifier	container		393703	0					
ANR	393950	Argument	dim		393703	1					
ANR	393951	Identifier	dim		393703	0					
ANR	393952	Argument	value		393703	2					
ANR	393953	Identifier	value		393703	0					
ANR	393954	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		393703	3					
ANR	393955	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		393703	0					
ANR	393956	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393703	0					
ANR	393957	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393703	0					
ANR	393958	Callee	UNEXPECTED		393703	0					
ANR	393959	Identifier	UNEXPECTED		393703	0					
ANR	393960	ArgumentList	RETURN_VALUE_USED ( opline )		393703	1					
ANR	393961	Argument	RETURN_VALUE_USED ( opline )		393703	0					
ANR	393962	CallExpression	RETURN_VALUE_USED ( opline )		393703	0					
ANR	393963	Callee	RETURN_VALUE_USED		393703	0					
ANR	393964	Identifier	RETURN_VALUE_USED		393703	0					
ANR	393965	ArgumentList	opline		393703	1					
ANR	393966	Argument	opline		393703	0					
ANR	393967	Identifier	opline		393703	0					
ANR	393968	CallExpression	EX_VAR ( opline -> result . var )		393703	1					
ANR	393969	Callee	EX_VAR		393703	0					
ANR	393970	Identifier	EX_VAR		393703	0					
ANR	393971	ArgumentList	opline -> result . var		393703	1					
ANR	393972	Argument	opline -> result . var		393703	0					
ANR	393973	MemberAccess	opline -> result . var		393703	0					
ANR	393974	PtrMemberAccess	opline -> result		393703	0					
ANR	393975	Identifier	opline		393703	0					
ANR	393976	Identifier	result		393703	1					
ANR	393977	Identifier	var		393703	1					
ANR	393978	Identifier	NULL		393703	2					
ANR	393979	Argument	binary_op		393703	4					
ANR	393980	Identifier	binary_op		393703	0					
ANR	393981	BreakStatement	break ;	35735:4:1128110:1128115	393703	2	True				
ANR	393982	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CV )"	35739:2:1128129:1128188	393703	1	True				
ANR	393983	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , IS_CV )"		393703	0					
ANR	393984	Callee	zend_fetch_dimension_address_RW		393703	0					
ANR	393985	Identifier	zend_fetch_dimension_address_RW		393703	0					
ANR	393986	ArgumentList	& rv		393703	1					
ANR	393987	Argument	& rv		393703	0					
ANR	393988	UnaryOperationExpression	& rv		393703	0					
ANR	393989	UnaryOperator	&		393703	0					
ANR	393990	Identifier	rv		393703	1					
ANR	393991	Argument	container		393703	1					
ANR	393992	Identifier	container		393703	0					
ANR	393993	Argument	dim		393703	2					
ANR	393994	Identifier	dim		393703	0					
ANR	393995	Argument	IS_CV		393703	3					
ANR	393996	Identifier	IS_CV		393703	0					
ANR	393997	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	35740:2:1128192:1128283	393703	2	True				
ANR	393998	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		393703	0		=			
ANR	393999	Identifier	value		393703	0					
ANR	394000	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		393703	1					
ANR	394001	Callee	get_zval_ptr_r		393703	0					
ANR	394002	Identifier	get_zval_ptr_r		393703	0					
ANR	394003	ArgumentList	( opline + 1 ) -> op1_type		393703	1					
ANR	394004	Argument	( opline + 1 ) -> op1_type		393703	0					
ANR	394005	PtrMemberAccess	( opline + 1 ) -> op1_type		393703	0					
ANR	394006	AdditiveExpression	opline + 1		393703	0		+			
ANR	394007	Identifier	opline		393703	0					
ANR	394008	PrimaryExpression	1		393703	1					
ANR	394009	Identifier	op1_type		393703	1					
ANR	394010	Argument	( opline + 1 ) -> op1		393703	1					
ANR	394011	PtrMemberAccess	( opline + 1 ) -> op1		393703	0					
ANR	394012	AdditiveExpression	opline + 1		393703	0		+			
ANR	394013	Identifier	opline		393703	0					
ANR	394014	PrimaryExpression	1		393703	1					
ANR	394015	Identifier	op1		393703	1					
ANR	394016	Argument	execute_data		393703	2					
ANR	394017	Identifier	execute_data		393703	0					
ANR	394018	Argument	& free_op_data1		393703	3					
ANR	394019	UnaryOperationExpression	& free_op_data1		393703	0					
ANR	394020	UnaryOperator	&		393703	0					
ANR	394021	Identifier	free_op_data1		393703	1					
ANR	394022	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	35741:2:1128287:1128325	393703	3	True				
ANR	394023	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		393703	0					
ANR	394024	Callee	ZEND_ASSERT		393703	0					
ANR	394025	Identifier	ZEND_ASSERT		393703	0					
ANR	394026	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		393703	1					
ANR	394027	Argument	Z_TYPE ( rv ) == IS_INDIRECT		393703	0					
ANR	394028	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		393703	0		==			
ANR	394029	CallExpression	Z_TYPE ( rv )		393703	0					
ANR	394030	Callee	Z_TYPE		393703	0					
ANR	394031	Identifier	Z_TYPE		393703	0					
ANR	394032	ArgumentList	rv		393703	1					
ANR	394033	Argument	rv		393703	0					
ANR	394034	Identifier	rv		393703	0					
ANR	394035	Identifier	IS_INDIRECT		393703	1					
ANR	394036	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	35742:2:1128329:1128353	393703	4	True				
ANR	394037	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		393703	0		=			
ANR	394038	Identifier	var_ptr		393703	0					
ANR	394039	CallExpression	Z_INDIRECT ( rv )		393703	1					
ANR	394040	Callee	Z_INDIRECT		393703	0					
ANR	394041	Identifier	Z_INDIRECT		393703	0					
ANR	394042	ArgumentList	rv		393703	1					
ANR	394043	Argument	rv		393703	0					
ANR	394044	Identifier	rv		393703	0					
ANR	394045	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		393703	5					
ANR	394046	Condition	UNEXPECTED ( var_ptr == NULL )	35744:6:1128362:1128388	393703	0	True				
ANR	394047	CallExpression	UNEXPECTED ( var_ptr == NULL )		393703	0					
ANR	394048	Callee	UNEXPECTED		393703	0					
ANR	394049	Identifier	UNEXPECTED		393703	0					
ANR	394050	ArgumentList	var_ptr == NULL		393703	1					
ANR	394051	Argument	var_ptr == NULL		393703	0					
ANR	394052	EqualityExpression	var_ptr == NULL		393703	0		==			
ANR	394053	Identifier	var_ptr		393703	0					
ANR	394054	Identifier	NULL		393703	1					
ANR	394055	CompoundStatement		41:35:1433:1433	393703	1					
ANR	394056	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	35745:3:1128396:1128495	393703	0	True				
ANR	394057	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		393703	0					
ANR	394058	Callee	zend_throw_error		393703	0					
ANR	394059	Identifier	zend_throw_error		393703	0					
ANR	394060	ArgumentList	NULL		393703	1					
ANR	394061	Argument	NULL		393703	0					
ANR	394062	Identifier	NULL		393703	0					
ANR	394063	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		393703	1					
ANR	394064	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		393703	0					
ANR	394065	ExpressionStatement	FREE_OP ( free_op_data1 )	35747:3:1128501:1128523	393703	1	True				
ANR	394066	CallExpression	FREE_OP ( free_op_data1 )		393703	0					
ANR	394067	Callee	FREE_OP		393703	0					
ANR	394068	Identifier	FREE_OP		393703	0					
ANR	394069	ArgumentList	free_op_data1		393703	1					
ANR	394070	Argument	free_op_data1		393703	0					
ANR	394071	Identifier	free_op_data1		393703	0					
ANR	394072	ExpressionStatement	HANDLE_EXCEPTION ( )	35749:3:1128529:1128547	393703	2	True				
ANR	394073	CallExpression	HANDLE_EXCEPTION ( )		393703	0					
ANR	394074	Callee	HANDLE_EXCEPTION		393703	0					
ANR	394075	Identifier	HANDLE_EXCEPTION		393703	0					
ANR	394076	ArgumentList			393703	1					
ANR	394077	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		393703	6					
ANR	394078	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	35752:6:1128560:1128597	393703	0	True				
ANR	394079	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		393703	0					
ANR	394080	Callee	UNEXPECTED		393703	0					
ANR	394081	Identifier	UNEXPECTED		393703	0					
ANR	394082	ArgumentList	var_ptr == & EG ( error_zval )		393703	1					
ANR	394083	Argument	var_ptr == & EG ( error_zval )		393703	0					
ANR	394084	EqualityExpression	var_ptr == & EG ( error_zval )		393703	0		==			
ANR	394085	Identifier	var_ptr		393703	0					
ANR	394086	UnaryOperationExpression	& EG ( error_zval )		393703	1					
ANR	394087	UnaryOperator	&		393703	0					
ANR	394088	CallExpression	EG ( error_zval )		393703	1					
ANR	394089	Callee	EG		393703	0					
ANR	394090	Identifier	EG		393703	0					
ANR	394091	ArgumentList	error_zval		393703	1					
ANR	394092	Argument	error_zval		393703	0					
ANR	394093	Identifier	error_zval		393703	0					
ANR	394094	CompoundStatement		49:46:1642:1642	393703	1					
ANR	394095	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		393703	0					
ANR	394096	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	35753:7:1128609:1128645	393703	0	True				
ANR	394097	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393703	0					
ANR	394098	Callee	UNEXPECTED		393703	0					
ANR	394099	Identifier	UNEXPECTED		393703	0					
ANR	394100	ArgumentList	RETURN_VALUE_USED ( opline )		393703	1					
ANR	394101	Argument	RETURN_VALUE_USED ( opline )		393703	0					
ANR	394102	CallExpression	RETURN_VALUE_USED ( opline )		393703	0					
ANR	394103	Callee	RETURN_VALUE_USED		393703	0					
ANR	394104	Identifier	RETURN_VALUE_USED		393703	0					
ANR	394105	ArgumentList	opline		393703	1					
ANR	394106	Argument	opline		393703	0					
ANR	394107	Identifier	opline		393703	0					
ANR	394108	CompoundStatement		50:46:1690:1690	393703	1					
ANR	394109	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	35754:4:1128654:1128691	393703	0	True				
ANR	394110	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		393703	0					
ANR	394111	Callee	ZVAL_NULL		393703	0					
ANR	394112	Identifier	ZVAL_NULL		393703	0					
ANR	394113	ArgumentList	EX_VAR ( opline -> result . var )		393703	1					
ANR	394114	Argument	EX_VAR ( opline -> result . var )		393703	0					
ANR	394115	CallExpression	EX_VAR ( opline -> result . var )		393703	0					
ANR	394116	Callee	EX_VAR		393703	0					
ANR	394117	Identifier	EX_VAR		393703	0					
ANR	394118	ArgumentList	opline -> result . var		393703	1					
ANR	394119	Argument	opline -> result . var		393703	0					
ANR	394120	MemberAccess	opline -> result . var		393703	0					
ANR	394121	PtrMemberAccess	opline -> result		393703	0					
ANR	394122	Identifier	opline		393703	0					
ANR	394123	Identifier	result		393703	1					
ANR	394124	Identifier	var		393703	1					
ANR	394125	ElseStatement	else		393703	0					
ANR	394126	CompoundStatement		53:9:1749:1749	393703	0					
ANR	394127	ExpressionStatement	ZVAL_DEREF ( var_ptr )	35757:3:1128712:1128731	393703	0	True				
ANR	394128	CallExpression	ZVAL_DEREF ( var_ptr )		393703	0					
ANR	394129	Callee	ZVAL_DEREF		393703	0					
ANR	394130	Identifier	ZVAL_DEREF		393703	0					
ANR	394131	ArgumentList	var_ptr		393703	1					
ANR	394132	Argument	var_ptr		393703	0					
ANR	394133	Identifier	var_ptr		393703	0					
ANR	394134	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	35758:3:1128736:1128764	393703	1	True				
ANR	394135	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		393703	0					
ANR	394136	Callee	SEPARATE_ZVAL_NOREF		393703	0					
ANR	394137	Identifier	SEPARATE_ZVAL_NOREF		393703	0					
ANR	394138	ArgumentList	var_ptr		393703	1					
ANR	394139	Argument	var_ptr		393703	0					
ANR	394140	Identifier	var_ptr		393703	0					
ANR	394141	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	35760:3:1128770:1128804	393703	2	True				
ANR	394142	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		393703	0					
ANR	394143	Callee	binary_op		393703	0					
ANR	394144	Identifier	binary_op		393703	0					
ANR	394145	ArgumentList	var_ptr		393703	1					
ANR	394146	Argument	var_ptr		393703	0					
ANR	394147	Identifier	var_ptr		393703	0					
ANR	394148	Argument	var_ptr		393703	1					
ANR	394149	Identifier	var_ptr		393703	0					
ANR	394150	Argument	value		393703	2					
ANR	394151	Identifier	value		393703	0					
ANR	394152	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		393703	3					
ANR	394153	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	35762:7:1128814:1128850	393703	0	True				
ANR	394154	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		393703	0					
ANR	394155	Callee	UNEXPECTED		393703	0					
ANR	394156	Identifier	UNEXPECTED		393703	0					
ANR	394157	ArgumentList	RETURN_VALUE_USED ( opline )		393703	1					
ANR	394158	Argument	RETURN_VALUE_USED ( opline )		393703	0					
ANR	394159	CallExpression	RETURN_VALUE_USED ( opline )		393703	0					
ANR	394160	Callee	RETURN_VALUE_USED		393703	0					
ANR	394161	Identifier	RETURN_VALUE_USED		393703	0					
ANR	394162	ArgumentList	opline		393703	1					
ANR	394163	Argument	opline		393703	0					
ANR	394164	Identifier	opline		393703	0					
ANR	394165	CompoundStatement		59:46:1895:1895	393703	1					
ANR	394166	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	35763:4:1128859:1128905	393703	0	True				
ANR	394167	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		393703	0					
ANR	394168	Callee	ZVAL_COPY		393703	0					
ANR	394169	Identifier	ZVAL_COPY		393703	0					
ANR	394170	ArgumentList	EX_VAR ( opline -> result . var )		393703	1					
ANR	394171	Argument	EX_VAR ( opline -> result . var )		393703	0					
ANR	394172	CallExpression	EX_VAR ( opline -> result . var )		393703	0					
ANR	394173	Callee	EX_VAR		393703	0					
ANR	394174	Identifier	EX_VAR		393703	0					
ANR	394175	ArgumentList	opline -> result . var		393703	1					
ANR	394176	Argument	opline -> result . var		393703	0					
ANR	394177	MemberAccess	opline -> result . var		393703	0					
ANR	394178	PtrMemberAccess	opline -> result		393703	0					
ANR	394179	Identifier	opline		393703	0					
ANR	394180	Identifier	result		393703	1					
ANR	394181	Identifier	var		393703	1					
ANR	394182	Argument	var_ptr		393703	1					
ANR	394183	Identifier	var_ptr		393703	0					
ANR	394184	Condition	0	35766:10:1128926:1128926	393703	1	True				
ANR	394185	PrimaryExpression	0		393703	0					
ANR	394186	ExpressionStatement	FREE_OP ( free_op_data1 )	35768:1:1128932:1128954	393703	9	True				
ANR	394187	CallExpression	FREE_OP ( free_op_data1 )		393703	0					
ANR	394188	Callee	FREE_OP		393703	0					
ANR	394189	Identifier	FREE_OP		393703	0					
ANR	394190	ArgumentList	free_op_data1		393703	1					
ANR	394191	Argument	free_op_data1		393703	0					
ANR	394192	Identifier	free_op_data1		393703	0					
ANR	394193	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	35770:1:1128958:1128986	393703	10	True				
ANR	394194	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		393703	0					
ANR	394195	Callee	ZEND_VM_NEXT_OPCODE_EX		393703	0					
ANR	394196	Identifier	ZEND_VM_NEXT_OPCODE_EX		393703	0					
ANR	394197	ArgumentList	1		393703	1					
ANR	394198	Argument	1		393703	0					
ANR	394199	PrimaryExpression	1		393703	0					
ANR	394200	Argument	2		393703	1					
ANR	394201	PrimaryExpression	2		393703	0					
ANR	394202	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		393703	1					
ANR	394203	Identifier	zend_binary_assign_op_dim_helper_SPEC_CV_CV		393703	2					
ANR	394204	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		393703	3					
ANR	394205	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	35703:89:1126903:1126954	393703	0	True				
ANR	394206	ParameterType	binary_op_type binary_op		393703	0					
ANR	394207	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		393703	1					
ANR	394208	CFGEntryNode	ENTRY		393703		True				
ANR	394209	CFGExitNode	EXIT		393703		True				
ANR	394210	Symbol	container		393703						
ANR	394211	Symbol	opline -> op1		393703						
ANR	394212	Symbol	opline -> op2		393703						
ANR	394213	Symbol	opline -> op2 . var		393703						
ANR	394214	Symbol	IS_CV		393703						
ANR	394215	Symbol	rv		393703						
ANR	394216	Symbol	Z_OBJ_P		393703						
ANR	394217	Symbol	dim		393703						
ANR	394218	Symbol	Z_TYPE		393703						
ANR	394219	Symbol	free_op_data1		393703						
ANR	394220	Symbol	& EG		393703						
ANR	394221	Symbol	var_ptr		393703						
ANR	394222	Symbol	execute_data		393703						
ANR	394223	Symbol	opline -> result		393703						
ANR	394224	Symbol	( opline + 1 ) -> op1		393703						
ANR	394225	Symbol	UNEXPECTED		393703						
ANR	394226	Symbol	RETURN_VALUE_USED		393703						
ANR	394227	Symbol	( opline + 1 ) -> op1 . var		393703						
ANR	394228	Symbol	opline		393703						
ANR	394229	Symbol	get_zval_ptr_r		393703						
ANR	394230	Symbol	Z_INDIRECT		393703						
ANR	394231	Symbol	IS_ARRAY		393703						
ANR	394232	Symbol	opline -> op1 . var		393703						
ANR	394233	Symbol	value		393703						
ANR	394234	Symbol	binary_op		393703						
ANR	394235	Symbol	( opline + 1 ) -> op1_type		393703						
ANR	394236	Symbol	NULL		393703						
ANR	394237	Symbol	_get_zval_ptr_cv_BP_VAR_R		393703						
ANR	394238	Symbol	Z_TYPE_P		393703						
ANR	394239	Symbol	& rv		393703						
ANR	394240	Symbol	* opline		393703						
ANR	394241	Symbol	error_zval		393703						
ANR	394242	Symbol	_get_zval_ptr_cv_BP_VAR_RW		393703						
ANR	394243	Symbol	EX_VAR		393703						
ANR	394244	Symbol	IS_OBJECT		393703						
ANR	394245	Symbol	IS_VAR		393703						
ANR	394246	Symbol	EXPECTED		393703						
ANR	394247	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		393703						
ANR	394248	Symbol	& free_op_data1		393703						
ANR	394249	Symbol	opline -> result . var		393703						
ANR	394250	Symbol	IS_UNUSED		393703						
ANR	394251	Symbol	IS_INDIRECT		393703						
ANR	394252	Function	zend_binary_assign_op_helper_SPEC_CV_CV	35773:0:1128991:1129926							
ANR	394253	FunctionDef	zend_binary_assign_op_helper_SPEC_CV_CV (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		394252	0					
ANR	394254	CompoundStatement		35774:0:1129130:1129926	394252	0					
ANR	394255	IdentifierDeclStatement	USE_OPLINE zval * var_ptr ;	35775:1:1129133:1129159	394252	0	True				
ANR	394256	IdentifierDecl	* var_ptr		394252	0					
ANR	394257	IdentifierDeclType	USE_OPLINE zval *		394252	0					
ANR	394258	Identifier	var_ptr		394252	1					
ANR	394259	IdentifierDeclStatement	zval * value ;	35778:1:1129162:1129173	394252	1	True				
ANR	394260	IdentifierDecl	* value		394252	0					
ANR	394261	IdentifierDeclType	zval *		394252	0					
ANR	394262	Identifier	value		394252	1					
ANR	394263	ExpressionStatement	SAVE_OPLINE ( )	35780:1:1129177:1129190	394252	2	True				
ANR	394264	CallExpression	SAVE_OPLINE ( )		394252	0					
ANR	394265	Callee	SAVE_OPLINE		394252	0					
ANR	394266	Identifier	SAVE_OPLINE		394252	0					
ANR	394267	ArgumentList			394252	1					
ANR	394268	ExpressionStatement	"value = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	35781:1:1129193:1129257	394252	3	True				
ANR	394269	AssignmentExpression	"value = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		394252	0		=			
ANR	394270	Identifier	value		394252	0					
ANR	394271	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		394252	1					
ANR	394272	Callee	_get_zval_ptr_cv_BP_VAR_R		394252	0					
ANR	394273	Identifier	_get_zval_ptr_cv_BP_VAR_R		394252	0					
ANR	394274	ArgumentList	execute_data		394252	1					
ANR	394275	Argument	execute_data		394252	0					
ANR	394276	Identifier	execute_data		394252	0					
ANR	394277	Argument	opline -> op2 . var		394252	1					
ANR	394278	MemberAccess	opline -> op2 . var		394252	0					
ANR	394279	PtrMemberAccess	opline -> op2		394252	0					
ANR	394280	Identifier	opline		394252	0					
ANR	394281	Identifier	op2		394252	1					
ANR	394282	Identifier	var		394252	1					
ANR	394283	ExpressionStatement	"var_ptr = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	35782:1:1129260:1129327	394252	4	True				
ANR	394284	AssignmentExpression	"var_ptr = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		394252	0		=			
ANR	394285	Identifier	var_ptr		394252	0					
ANR	394286	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		394252	1					
ANR	394287	Callee	_get_zval_ptr_cv_BP_VAR_RW		394252	0					
ANR	394288	Identifier	_get_zval_ptr_cv_BP_VAR_RW		394252	0					
ANR	394289	ArgumentList	execute_data		394252	1					
ANR	394290	Argument	execute_data		394252	0					
ANR	394291	Identifier	execute_data		394252	0					
ANR	394292	Argument	opline -> op1 . var		394252	1					
ANR	394293	MemberAccess	opline -> op1 . var		394252	0					
ANR	394294	PtrMemberAccess	opline -> op1		394252	0					
ANR	394295	Identifier	opline		394252	0					
ANR	394296	Identifier	op1		394252	1					
ANR	394297	Identifier	var		394252	1					
ANR	394298	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL ) )		394252	5					
ANR	394299	Condition	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL )	35784:5:1129335:1129380	394252	0	True				
ANR	394300	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL )		394252	0		&&			
ANR	394301	EqualityExpression	IS_CV == IS_VAR		394252	0		==			
ANR	394302	Identifier	IS_CV		394252	0					
ANR	394303	Identifier	IS_VAR		394252	1					
ANR	394304	CallExpression	UNEXPECTED ( var_ptr == NULL )		394252	1					
ANR	394305	Callee	UNEXPECTED		394252	0					
ANR	394306	Identifier	UNEXPECTED		394252	0					
ANR	394307	ArgumentList	var_ptr == NULL		394252	1					
ANR	394308	Argument	var_ptr == NULL		394252	0					
ANR	394309	EqualityExpression	var_ptr == NULL		394252	0		==			
ANR	394310	Identifier	var_ptr		394252	0					
ANR	394311	Identifier	NULL		394252	1					
ANR	394312	CompoundStatement		11:53:252:252	394252	1					
ANR	394313	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	35785:2:1129387:1129486	394252	0	True				
ANR	394314	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		394252	0					
ANR	394315	Callee	zend_throw_error		394252	0					
ANR	394316	Identifier	zend_throw_error		394252	0					
ANR	394317	ArgumentList	NULL		394252	1					
ANR	394318	Argument	NULL		394252	0					
ANR	394319	Identifier	NULL		394252	0					
ANR	394320	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		394252	1					
ANR	394321	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		394252	0					
ANR	394322	ExpressionStatement	HANDLE_EXCEPTION ( )	35787:2:1129491:1129509	394252	1	True				
ANR	394323	CallExpression	HANDLE_EXCEPTION ( )		394252	0					
ANR	394324	Callee	HANDLE_EXCEPTION		394252	0					
ANR	394325	Identifier	HANDLE_EXCEPTION		394252	0					
ANR	394326	ArgumentList			394252	1					
ANR	394327	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		394252	6					
ANR	394328	Condition	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )	35790:5:1129520:1129576	394252	0	True				
ANR	394329	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )		394252	0		&&			
ANR	394330	EqualityExpression	IS_CV == IS_VAR		394252	0		==			
ANR	394331	Identifier	IS_CV		394252	0					
ANR	394332	Identifier	IS_VAR		394252	1					
ANR	394333	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		394252	1					
ANR	394334	Callee	UNEXPECTED		394252	0					
ANR	394335	Identifier	UNEXPECTED		394252	0					
ANR	394336	ArgumentList	var_ptr == & EG ( error_zval )		394252	1					
ANR	394337	Argument	var_ptr == & EG ( error_zval )		394252	0					
ANR	394338	EqualityExpression	var_ptr == & EG ( error_zval )		394252	0		==			
ANR	394339	Identifier	var_ptr		394252	0					
ANR	394340	UnaryOperationExpression	& EG ( error_zval )		394252	1					
ANR	394341	UnaryOperator	&		394252	0					
ANR	394342	CallExpression	EG ( error_zval )		394252	1					
ANR	394343	Callee	EG		394252	0					
ANR	394344	Identifier	EG		394252	0					
ANR	394345	ArgumentList	error_zval		394252	1					
ANR	394346	Argument	error_zval		394252	0					
ANR	394347	Identifier	error_zval		394252	0					
ANR	394348	CompoundStatement		17:64:448:448	394252	1					
ANR	394349	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		394252	0					
ANR	394350	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	35791:6:1129587:1129623	394252	0	True				
ANR	394351	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		394252	0					
ANR	394352	Callee	UNEXPECTED		394252	0					
ANR	394353	Identifier	UNEXPECTED		394252	0					
ANR	394354	ArgumentList	RETURN_VALUE_USED ( opline )		394252	1					
ANR	394355	Argument	RETURN_VALUE_USED ( opline )		394252	0					
ANR	394356	CallExpression	RETURN_VALUE_USED ( opline )		394252	0					
ANR	394357	Callee	RETURN_VALUE_USED		394252	0					
ANR	394358	Identifier	RETURN_VALUE_USED		394252	0					
ANR	394359	ArgumentList	opline		394252	1					
ANR	394360	Argument	opline		394252	0					
ANR	394361	Identifier	opline		394252	0					
ANR	394362	CompoundStatement		18:45:495:495	394252	1					
ANR	394363	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	35792:3:1129631:1129668	394252	0	True				
ANR	394364	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		394252	0					
ANR	394365	Callee	ZVAL_NULL		394252	0					
ANR	394366	Identifier	ZVAL_NULL		394252	0					
ANR	394367	ArgumentList	EX_VAR ( opline -> result . var )		394252	1					
ANR	394368	Argument	EX_VAR ( opline -> result . var )		394252	0					
ANR	394369	CallExpression	EX_VAR ( opline -> result . var )		394252	0					
ANR	394370	Callee	EX_VAR		394252	0					
ANR	394371	Identifier	EX_VAR		394252	0					
ANR	394372	ArgumentList	opline -> result . var		394252	1					
ANR	394373	Argument	opline -> result . var		394252	0					
ANR	394374	MemberAccess	opline -> result . var		394252	0					
ANR	394375	PtrMemberAccess	opline -> result		394252	0					
ANR	394376	Identifier	opline		394252	0					
ANR	394377	Identifier	result		394252	1					
ANR	394378	Identifier	var		394252	1					
ANR	394379	ElseStatement	else		394252	0					
ANR	394380	CompoundStatement		21:8:551:551	394252	0					
ANR	394381	ExpressionStatement	ZVAL_DEREF ( var_ptr )	35795:2:1129686:1129705	394252	0	True				
ANR	394382	CallExpression	ZVAL_DEREF ( var_ptr )		394252	0					
ANR	394383	Callee	ZVAL_DEREF		394252	0					
ANR	394384	Identifier	ZVAL_DEREF		394252	0					
ANR	394385	ArgumentList	var_ptr		394252	1					
ANR	394386	Argument	var_ptr		394252	0					
ANR	394387	Identifier	var_ptr		394252	0					
ANR	394388	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	35796:2:1129709:1129737	394252	1	True				
ANR	394389	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		394252	0					
ANR	394390	Callee	SEPARATE_ZVAL_NOREF		394252	0					
ANR	394391	Identifier	SEPARATE_ZVAL_NOREF		394252	0					
ANR	394392	ArgumentList	var_ptr		394252	1					
ANR	394393	Argument	var_ptr		394252	0					
ANR	394394	Identifier	var_ptr		394252	0					
ANR	394395	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	35798:2:1129742:1129776	394252	2	True				
ANR	394396	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		394252	0					
ANR	394397	Callee	binary_op		394252	0					
ANR	394398	Identifier	binary_op		394252	0					
ANR	394399	ArgumentList	var_ptr		394252	1					
ANR	394400	Argument	var_ptr		394252	0					
ANR	394401	Identifier	var_ptr		394252	0					
ANR	394402	Argument	var_ptr		394252	1					
ANR	394403	Identifier	var_ptr		394252	0					
ANR	394404	Argument	value		394252	2					
ANR	394405	Identifier	value		394252	0					
ANR	394406	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		394252	3					
ANR	394407	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	35800:6:1129785:1129821	394252	0	True				
ANR	394408	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		394252	0					
ANR	394409	Callee	UNEXPECTED		394252	0					
ANR	394410	Identifier	UNEXPECTED		394252	0					
ANR	394411	ArgumentList	RETURN_VALUE_USED ( opline )		394252	1					
ANR	394412	Argument	RETURN_VALUE_USED ( opline )		394252	0					
ANR	394413	CallExpression	RETURN_VALUE_USED ( opline )		394252	0					
ANR	394414	Callee	RETURN_VALUE_USED		394252	0					
ANR	394415	Identifier	RETURN_VALUE_USED		394252	0					
ANR	394416	ArgumentList	opline		394252	1					
ANR	394417	Argument	opline		394252	0					
ANR	394418	Identifier	opline		394252	0					
ANR	394419	CompoundStatement		27:45:693:693	394252	1					
ANR	394420	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	35801:3:1129829:1129875	394252	0	True				
ANR	394421	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		394252	0					
ANR	394422	Callee	ZVAL_COPY		394252	0					
ANR	394423	Identifier	ZVAL_COPY		394252	0					
ANR	394424	ArgumentList	EX_VAR ( opline -> result . var )		394252	1					
ANR	394425	Argument	EX_VAR ( opline -> result . var )		394252	0					
ANR	394426	CallExpression	EX_VAR ( opline -> result . var )		394252	0					
ANR	394427	Callee	EX_VAR		394252	0					
ANR	394428	Identifier	EX_VAR		394252	0					
ANR	394429	ArgumentList	opline -> result . var		394252	1					
ANR	394430	Argument	opline -> result . var		394252	0					
ANR	394431	MemberAccess	opline -> result . var		394252	0					
ANR	394432	PtrMemberAccess	opline -> result		394252	0					
ANR	394433	Identifier	opline		394252	0					
ANR	394434	Identifier	result		394252	1					
ANR	394435	Identifier	var		394252	1					
ANR	394436	Argument	var_ptr		394252	1					
ANR	394437	Identifier	var_ptr		394252	0					
ANR	394438	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	35806:1:1129887:1129924	394252	7	True				
ANR	394439	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		394252	0					
ANR	394440	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		394252	0					
ANR	394441	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		394252	0					
ANR	394442	ArgumentList			394252	1					
ANR	394443	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		394252	1					
ANR	394444	Identifier	zend_binary_assign_op_helper_SPEC_CV_CV		394252	2					
ANR	394445	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		394252	3					
ANR	394446	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	35773:85:1129076:1129127	394252	0	True				
ANR	394447	ParameterType	binary_op_type binary_op		394252	0					
ANR	394448	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		394252	1					
ANR	394449	CFGEntryNode	ENTRY		394252		True				
ANR	394450	CFGExitNode	EXIT		394252		True				
ANR	394451	Symbol	opline -> op1		394252						
ANR	394452	Symbol	opline -> op2		394252						
ANR	394453	Symbol	opline -> op2 . var		394252						
ANR	394454	Symbol	NULL		394252						
ANR	394455	Symbol	IS_CV		394252						
ANR	394456	Symbol	_get_zval_ptr_cv_BP_VAR_R		394252						
ANR	394457	Symbol	& EG		394252						
ANR	394458	Symbol	var_ptr		394252						
ANR	394459	Symbol	execute_data		394252						
ANR	394460	Symbol	opline -> result		394252						
ANR	394461	Symbol	UNEXPECTED		394252						
ANR	394462	Symbol	RETURN_VALUE_USED		394252						
ANR	394463	Symbol	opline		394252						
ANR	394464	Symbol	* opline		394252						
ANR	394465	Symbol	error_zval		394252						
ANR	394466	Symbol	_get_zval_ptr_cv_BP_VAR_RW		394252						
ANR	394467	Symbol	EX_VAR		394252						
ANR	394468	Symbol	opline -> op1 . var		394252						
ANR	394469	Symbol	value		394252						
ANR	394470	Symbol	IS_VAR		394252						
ANR	394471	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		394252						
ANR	394472	Symbol	opline -> result . var		394252						
ANR	394473	Function	zend_pre_incdec_property_helper_SPEC_CV_CV	36049:0:1140350:1142383							
ANR	394474	FunctionDef	zend_pre_incdec_property_helper_SPEC_CV_CV (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		394473	0					
ANR	394475	CompoundStatement		36050:0:1140475:1142383	394473	0					
ANR	394476	IdentifierDeclStatement	USE_OPLINE zval * object ;	36051:1:1140478:1140503	394473	0	True				
ANR	394477	IdentifierDecl	* object		394473	0					
ANR	394478	IdentifierDeclType	USE_OPLINE zval *		394473	0					
ANR	394479	Identifier	object		394473	1					
ANR	394480	IdentifierDeclStatement	zval * property ;	36054:1:1140506:1140520	394473	1	True				
ANR	394481	IdentifierDecl	* property		394473	0					
ANR	394482	IdentifierDeclType	zval *		394473	0					
ANR	394483	Identifier	property		394473	1					
ANR	394484	IdentifierDeclStatement	zval * zptr ;	36055:1:1140523:1140533	394473	2	True				
ANR	394485	IdentifierDecl	* zptr		394473	0					
ANR	394486	IdentifierDeclType	zval *		394473	0					
ANR	394487	Identifier	zptr		394473	1					
ANR	394488	ExpressionStatement	SAVE_OPLINE ( )	36057:1:1140537:1140550	394473	3	True				
ANR	394489	CallExpression	SAVE_OPLINE ( )		394473	0					
ANR	394490	Callee	SAVE_OPLINE		394473	0					
ANR	394491	Identifier	SAVE_OPLINE		394473	0					
ANR	394492	ArgumentList			394473	1					
ANR	394493	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	36058:1:1140553:1140619	394473	4	True				
ANR	394494	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		394473	0		=			
ANR	394495	Identifier	object		394473	0					
ANR	394496	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		394473	1					
ANR	394497	Callee	_get_zval_ptr_cv_BP_VAR_RW		394473	0					
ANR	394498	Identifier	_get_zval_ptr_cv_BP_VAR_RW		394473	0					
ANR	394499	ArgumentList	execute_data		394473	1					
ANR	394500	Argument	execute_data		394473	0					
ANR	394501	Identifier	execute_data		394473	0					
ANR	394502	Argument	opline -> op1 . var		394473	1					
ANR	394503	MemberAccess	opline -> op1 . var		394473	0					
ANR	394504	PtrMemberAccess	opline -> op1		394473	0					
ANR	394505	Identifier	opline		394473	0					
ANR	394506	Identifier	op1		394473	1					
ANR	394507	Identifier	var		394473	1					
ANR	394508	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		394473	5					
ANR	394509	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	36060:5:1140627:1140683	394473	0	True				
ANR	394510	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		394473	0		&&			
ANR	394511	EqualityExpression	IS_CV == IS_UNUSED		394473	0		==			
ANR	394512	Identifier	IS_CV		394473	0					
ANR	394513	Identifier	IS_UNUSED		394473	1					
ANR	394514	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		394473	1					
ANR	394515	Callee	UNEXPECTED		394473	0					
ANR	394516	Identifier	UNEXPECTED		394473	0					
ANR	394517	ArgumentList	Z_OBJ_P ( object ) == NULL		394473	1					
ANR	394518	Argument	Z_OBJ_P ( object ) == NULL		394473	0					
ANR	394519	EqualityExpression	Z_OBJ_P ( object ) == NULL		394473	0		==			
ANR	394520	CallExpression	Z_OBJ_P ( object )		394473	0					
ANR	394521	Callee	Z_OBJ_P		394473	0					
ANR	394522	Identifier	Z_OBJ_P		394473	0					
ANR	394523	ArgumentList	object		394473	1					
ANR	394524	Argument	object		394473	0					
ANR	394525	Identifier	object		394473	0					
ANR	394526	Identifier	NULL		394473	1					
ANR	394527	CompoundStatement		11:64:210:210	394473	1					
ANR	394528	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	36061:2:1140690:1140754	394473	0	True				
ANR	394529	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		394473	0					
ANR	394530	Callee	zend_throw_error		394473	0					
ANR	394531	Identifier	zend_throw_error		394473	0					
ANR	394532	ArgumentList	NULL		394473	1					
ANR	394533	Argument	NULL		394473	0					
ANR	394534	Identifier	NULL		394473	0					
ANR	394535	Argument	"""Using $this when not in object context"""		394473	1					
ANR	394536	PrimaryExpression	"""Using $this when not in object context"""		394473	0					
ANR	394537	ExpressionStatement	HANDLE_EXCEPTION ( )	36063:2:1140759:1140777	394473	1	True				
ANR	394538	CallExpression	HANDLE_EXCEPTION ( )		394473	0					
ANR	394539	Callee	HANDLE_EXCEPTION		394473	0					
ANR	394540	Identifier	HANDLE_EXCEPTION		394473	0					
ANR	394541	ArgumentList			394473	1					
ANR	394542	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	36066:1:1140784:1140851	394473	6	True				
ANR	394543	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		394473	0		=			
ANR	394544	Identifier	property		394473	0					
ANR	394545	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		394473	1					
ANR	394546	Callee	_get_zval_ptr_cv_BP_VAR_R		394473	0					
ANR	394547	Identifier	_get_zval_ptr_cv_BP_VAR_R		394473	0					
ANR	394548	ArgumentList	execute_data		394473	1					
ANR	394549	Argument	execute_data		394473	0					
ANR	394550	Identifier	execute_data		394473	0					
ANR	394551	Argument	opline -> op2 . var		394473	1					
ANR	394552	MemberAccess	opline -> op2 . var		394473	0					
ANR	394553	PtrMemberAccess	opline -> op2		394473	0					
ANR	394554	Identifier	opline		394473	0					
ANR	394555	Identifier	op2		394473	1					
ANR	394556	Identifier	var		394473	1					
ANR	394557	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		394473	7					
ANR	394558	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	36068:5:1140859:1140903	394473	0	True				
ANR	394559	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		394473	0		&&			
ANR	394560	EqualityExpression	IS_CV == IS_VAR		394473	0		==			
ANR	394561	Identifier	IS_CV		394473	0					
ANR	394562	Identifier	IS_VAR		394473	1					
ANR	394563	CallExpression	UNEXPECTED ( object == NULL )		394473	1					
ANR	394564	Callee	UNEXPECTED		394473	0					
ANR	394565	Identifier	UNEXPECTED		394473	0					
ANR	394566	ArgumentList	object == NULL		394473	1					
ANR	394567	Argument	object == NULL		394473	0					
ANR	394568	EqualityExpression	object == NULL		394473	0		==			
ANR	394569	Identifier	object		394473	0					
ANR	394570	Identifier	NULL		394473	1					
ANR	394571	CompoundStatement		19:52:430:430	394473	1					
ANR	394572	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	36069:2:1140910:1141000	394473	0	True				
ANR	394573	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		394473	0					
ANR	394574	Callee	zend_throw_error		394473	0					
ANR	394575	Identifier	zend_throw_error		394473	0					
ANR	394576	ArgumentList	NULL		394473	1					
ANR	394577	Argument	NULL		394473	0					
ANR	394578	Identifier	NULL		394473	0					
ANR	394579	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		394473	1					
ANR	394580	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		394473	0					
ANR	394581	ExpressionStatement	HANDLE_EXCEPTION ( )	36071:2:1141005:1141023	394473	1	True				
ANR	394582	CallExpression	HANDLE_EXCEPTION ( )		394473	0					
ANR	394583	Callee	HANDLE_EXCEPTION		394473	0					
ANR	394584	Identifier	HANDLE_EXCEPTION		394473	0					
ANR	394585	ArgumentList			394473	1					
ANR	394586	DoStatement	do		394473	8					
ANR	394587	CompoundStatement		25:4:557:557	394473	0					
ANR	394588	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		394473	0					
ANR	394589	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	36075:6:1141041:1141103	394473	0	True				
ANR	394590	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		394473	0		&&			
ANR	394591	EqualityExpression	IS_CV != IS_UNUSED		394473	0		!=			
ANR	394592	Identifier	IS_CV		394473	0					
ANR	394593	Identifier	IS_UNUSED		394473	1					
ANR	394594	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		394473	1					
ANR	394595	Callee	UNEXPECTED		394473	0					
ANR	394596	Identifier	UNEXPECTED		394473	0					
ANR	394597	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		394473	1					
ANR	394598	Argument	Z_TYPE_P ( object ) != IS_OBJECT		394473	0					
ANR	394599	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		394473	0		!=			
ANR	394600	CallExpression	Z_TYPE_P ( object )		394473	0					
ANR	394601	Callee	Z_TYPE_P		394473	0					
ANR	394602	Identifier	Z_TYPE_P		394473	0					
ANR	394603	ArgumentList	object		394473	1					
ANR	394604	Argument	object		394473	0					
ANR	394605	Identifier	object		394473	0					
ANR	394606	Identifier	IS_OBJECT		394473	1					
ANR	394607	CompoundStatement		26:71:630:630	394473	1					
ANR	394608	ExpressionStatement	ZVAL_DEREF ( object )	36076:3:1141111:1141129	394473	0	True				
ANR	394609	CallExpression	ZVAL_DEREF ( object )		394473	0					
ANR	394610	Callee	ZVAL_DEREF		394473	0					
ANR	394611	Identifier	ZVAL_DEREF		394473	0					
ANR	394612	ArgumentList	object		394473	1					
ANR	394613	Argument	object		394473	0					
ANR	394614	Identifier	object		394473	0					
ANR	394615	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		394473	1					
ANR	394616	Condition	UNEXPECTED ( ! make_real_object ( object ) )	36077:7:1141138:1141174	394473	0	True				
ANR	394617	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		394473	0					
ANR	394618	Callee	UNEXPECTED		394473	0					
ANR	394619	Identifier	UNEXPECTED		394473	0					
ANR	394620	ArgumentList	! make_real_object ( object )		394473	1					
ANR	394621	Argument	! make_real_object ( object )		394473	0					
ANR	394622	UnaryOperationExpression	! make_real_object ( object )		394473	0					
ANR	394623	UnaryOperator	!		394473	0					
ANR	394624	CallExpression	make_real_object ( object )		394473	1					
ANR	394625	Callee	make_real_object		394473	0					
ANR	394626	Identifier	make_real_object		394473	0					
ANR	394627	ArgumentList	object		394473	1					
ANR	394628	Argument	object		394473	0					
ANR	394629	Identifier	object		394473	0					
ANR	394630	CompoundStatement		28:46:701:701	394473	1					
ANR	394631	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	36078:4:1141183:1141261	394473	0	True				
ANR	394632	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		394473	0					
ANR	394633	Callee	zend_error		394473	0					
ANR	394634	Identifier	zend_error		394473	0					
ANR	394635	ArgumentList	E_WARNING		394473	1					
ANR	394636	Argument	E_WARNING		394473	0					
ANR	394637	Identifier	E_WARNING		394473	0					
ANR	394638	Argument	"""Attempt to increment/decrement property of non-object"""		394473	1					
ANR	394639	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		394473	0					
ANR	394640	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		394473	1					
ANR	394641	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	36079:8:1141271:1141307	394473	0	True				
ANR	394642	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		394473	0					
ANR	394643	Callee	UNEXPECTED		394473	0					
ANR	394644	Identifier	UNEXPECTED		394473	0					
ANR	394645	ArgumentList	RETURN_VALUE_USED ( opline )		394473	1					
ANR	394646	Argument	RETURN_VALUE_USED ( opline )		394473	0					
ANR	394647	CallExpression	RETURN_VALUE_USED ( opline )		394473	0					
ANR	394648	Callee	RETURN_VALUE_USED		394473	0					
ANR	394649	Identifier	RETURN_VALUE_USED		394473	0					
ANR	394650	ArgumentList	opline		394473	1					
ANR	394651	Argument	opline		394473	0					
ANR	394652	Identifier	opline		394473	0					
ANR	394653	CompoundStatement		30:47:834:834	394473	1					
ANR	394654	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	36080:5:1141317:1141354	394473	0	True				
ANR	394655	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		394473	0					
ANR	394656	Callee	ZVAL_NULL		394473	0					
ANR	394657	Identifier	ZVAL_NULL		394473	0					
ANR	394658	ArgumentList	EX_VAR ( opline -> result . var )		394473	1					
ANR	394659	Argument	EX_VAR ( opline -> result . var )		394473	0					
ANR	394660	CallExpression	EX_VAR ( opline -> result . var )		394473	0					
ANR	394661	Callee	EX_VAR		394473	0					
ANR	394662	Identifier	EX_VAR		394473	0					
ANR	394663	ArgumentList	opline -> result . var		394473	1					
ANR	394664	Argument	opline -> result . var		394473	0					
ANR	394665	MemberAccess	opline -> result . var		394473	0					
ANR	394666	PtrMemberAccess	opline -> result		394473	0					
ANR	394667	Identifier	opline		394473	0					
ANR	394668	Identifier	result		394473	1					
ANR	394669	Identifier	var		394473	1					
ANR	394670	BreakStatement	break ;	36082:4:1141366:1141371	394473	2	True				
ANR	394671	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		394473	1					
ANR	394672	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	36088:6:1141445:1141666	394473	0	True				
ANR	394673	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		394473	0		&&			
ANR	394674	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		394473	0					
ANR	394675	Callee	EXPECTED		394473	0					
ANR	394676	Identifier	EXPECTED		394473	0					
ANR	394677	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394473	1					
ANR	394678	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394473	0					
ANR	394679	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394473	0					
ANR	394680	CallExpression	Z_OBJ_HT_P ( object )		394473	0					
ANR	394681	Callee	Z_OBJ_HT_P		394473	0					
ANR	394682	Identifier	Z_OBJ_HT_P		394473	0					
ANR	394683	ArgumentList	object		394473	1					
ANR	394684	Argument	object		394473	0					
ANR	394685	Identifier	object		394473	0					
ANR	394686	Identifier	get_property_ptr_ptr		394473	1					
ANR	394687	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		394473	1					
ANR	394688	Callee	EXPECTED		394473	0					
ANR	394689	Identifier	EXPECTED		394473	0					
ANR	394690	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		394473	1					
ANR	394691	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		394473	0					
ANR	394692	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		394473	0		!=			
ANR	394693	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		394473	0		=			
ANR	394694	Identifier	zptr		394473	0					
ANR	394695	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		394473	1					
ANR	394696	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394473	0					
ANR	394697	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394473	0					
ANR	394698	CallExpression	Z_OBJ_HT_P ( object )		394473	0					
ANR	394699	Callee	Z_OBJ_HT_P		394473	0					
ANR	394700	Identifier	Z_OBJ_HT_P		394473	0					
ANR	394701	ArgumentList	object		394473	1					
ANR	394702	Argument	object		394473	0					
ANR	394703	Identifier	object		394473	0					
ANR	394704	Identifier	get_property_ptr_ptr		394473	1					
ANR	394705	ArgumentList	object		394473	1					
ANR	394706	Argument	object		394473	0					
ANR	394707	Identifier	object		394473	0					
ANR	394708	Argument	property		394473	1					
ANR	394709	Identifier	property		394473	0					
ANR	394710	Argument	BP_VAR_RW		394473	2					
ANR	394711	Identifier	BP_VAR_RW		394473	0					
ANR	394712	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394473	3					
ANR	394713	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394473	0					
ANR	394714	Condition	IS_CV == IS_CONST		394473	0					
ANR	394715	EqualityExpression	IS_CV == IS_CONST		394473	0		==			
ANR	394716	Identifier	IS_CV		394473	0					
ANR	394717	Identifier	IS_CONST		394473	1					
ANR	394718	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		394473	1					
ANR	394719	Callee	CACHE_ADDR		394473	0					
ANR	394720	Identifier	CACHE_ADDR		394473	0					
ANR	394721	ArgumentList	Z_CACHE_SLOT_P ( property )		394473	1					
ANR	394722	Argument	Z_CACHE_SLOT_P ( property )		394473	0					
ANR	394723	CallExpression	Z_CACHE_SLOT_P ( property )		394473	0					
ANR	394724	Callee	Z_CACHE_SLOT_P		394473	0					
ANR	394725	Identifier	Z_CACHE_SLOT_P		394473	0					
ANR	394726	ArgumentList	property		394473	1					
ANR	394727	Argument	property		394473	0					
ANR	394728	Identifier	property		394473	0					
ANR	394729	Identifier	NULL		394473	2					
ANR	394730	Identifier	NULL		394473	1					
ANR	394731	CompoundStatement		40:173:1193:1193	394473	1					
ANR	394732	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		394473	0					
ANR	394733	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	36091:7:1141679:1141713	394473	0	True				
ANR	394734	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		394473	0					
ANR	394735	Callee	EXPECTED		394473	0					
ANR	394736	Identifier	EXPECTED		394473	0					
ANR	394737	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		394473	1					
ANR	394738	Argument	Z_TYPE_P ( zptr ) == IS_LONG		394473	0					
ANR	394739	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		394473	0		==			
ANR	394740	CallExpression	Z_TYPE_P ( zptr )		394473	0					
ANR	394741	Callee	Z_TYPE_P		394473	0					
ANR	394742	Identifier	Z_TYPE_P		394473	0					
ANR	394743	ArgumentList	zptr		394473	1					
ANR	394744	Argument	zptr		394473	0					
ANR	394745	Identifier	zptr		394473	0					
ANR	394746	Identifier	IS_LONG		394473	1					
ANR	394747	CompoundStatement		42:44:1240:1240	394473	1					
ANR	394748	IfStatement	if ( inc )		394473	0					
ANR	394749	Condition	inc	36092:8:1141726:1141728	394473	0	True				
ANR	394750	Identifier	inc		394473	0					
ANR	394751	CompoundStatement		43:13:1255:1255	394473	1					
ANR	394752	ExpressionStatement	fast_long_increment_function ( zptr )	36093:5:1141738:1141772	394473	0	True				
ANR	394753	CallExpression	fast_long_increment_function ( zptr )		394473	0					
ANR	394754	Callee	fast_long_increment_function		394473	0					
ANR	394755	Identifier	fast_long_increment_function		394473	0					
ANR	394756	ArgumentList	zptr		394473	1					
ANR	394757	Argument	zptr		394473	0					
ANR	394758	Identifier	zptr		394473	0					
ANR	394759	ElseStatement	else		394473	0					
ANR	394760	CompoundStatement		45:11:1309:1309	394473	0					
ANR	394761	ExpressionStatement	fast_long_decrement_function ( zptr )	36095:5:1141792:1141826	394473	0	True				
ANR	394762	CallExpression	fast_long_decrement_function ( zptr )		394473	0					
ANR	394763	Callee	fast_long_decrement_function		394473	0					
ANR	394764	Identifier	fast_long_decrement_function		394473	0					
ANR	394765	ArgumentList	zptr		394473	1					
ANR	394766	Argument	zptr		394473	0					
ANR	394767	Identifier	zptr		394473	0					
ANR	394768	ElseStatement	else		394473	0					
ANR	394769	CompoundStatement		48:10:1368:1368	394473	0					
ANR	394770	ExpressionStatement	ZVAL_DEREF ( zptr )	36098:4:1141850:1141866	394473	0	True				
ANR	394771	CallExpression	ZVAL_DEREF ( zptr )		394473	0					
ANR	394772	Callee	ZVAL_DEREF		394473	0					
ANR	394773	Identifier	ZVAL_DEREF		394473	0					
ANR	394774	ArgumentList	zptr		394473	1					
ANR	394775	Argument	zptr		394473	0					
ANR	394776	Identifier	zptr		394473	0					
ANR	394777	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	36099:4:1141872:1141897	394473	1	True				
ANR	394778	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		394473	0					
ANR	394779	Callee	SEPARATE_ZVAL_NOREF		394473	0					
ANR	394780	Identifier	SEPARATE_ZVAL_NOREF		394473	0					
ANR	394781	ArgumentList	zptr		394473	1					
ANR	394782	Argument	zptr		394473	0					
ANR	394783	Identifier	zptr		394473	0					
ANR	394784	IfStatement	if ( inc )		394473	2					
ANR	394785	Condition	inc	36101:8:1141908:1141910	394473	0	True				
ANR	394786	Identifier	inc		394473	0					
ANR	394787	CompoundStatement		52:13:1437:1437	394473	1					
ANR	394788	ExpressionStatement	increment_function ( zptr )	36102:5:1141920:1141944	394473	0	True				
ANR	394789	CallExpression	increment_function ( zptr )		394473	0					
ANR	394790	Callee	increment_function		394473	0					
ANR	394791	Identifier	increment_function		394473	0					
ANR	394792	ArgumentList	zptr		394473	1					
ANR	394793	Argument	zptr		394473	0					
ANR	394794	Identifier	zptr		394473	0					
ANR	394795	ElseStatement	else		394473	0					
ANR	394796	CompoundStatement		54:11:1481:1481	394473	0					
ANR	394797	ExpressionStatement	decrement_function ( zptr )	36104:5:1141964:1141988	394473	0	True				
ANR	394798	CallExpression	decrement_function ( zptr )		394473	0					
ANR	394799	Callee	decrement_function		394473	0					
ANR	394800	Identifier	decrement_function		394473	0					
ANR	394801	ArgumentList	zptr		394473	1					
ANR	394802	Argument	zptr		394473	0					
ANR	394803	Identifier	zptr		394473	0					
ANR	394804	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		394473	1					
ANR	394805	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	36107:7:1142008:1142044	394473	0	True				
ANR	394806	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		394473	0					
ANR	394807	Callee	UNEXPECTED		394473	0					
ANR	394808	Identifier	UNEXPECTED		394473	0					
ANR	394809	ArgumentList	RETURN_VALUE_USED ( opline )		394473	1					
ANR	394810	Argument	RETURN_VALUE_USED ( opline )		394473	0					
ANR	394811	CallExpression	RETURN_VALUE_USED ( opline )		394473	0					
ANR	394812	Callee	RETURN_VALUE_USED		394473	0					
ANR	394813	Identifier	RETURN_VALUE_USED		394473	0					
ANR	394814	ArgumentList	opline		394473	1					
ANR	394815	Argument	opline		394473	0					
ANR	394816	Identifier	opline		394473	0					
ANR	394817	CompoundStatement		58:46:1571:1571	394473	1					
ANR	394818	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	36108:4:1142053:1142096	394473	0	True				
ANR	394819	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		394473	0					
ANR	394820	Callee	ZVAL_COPY		394473	0					
ANR	394821	Identifier	ZVAL_COPY		394473	0					
ANR	394822	ArgumentList	EX_VAR ( opline -> result . var )		394473	1					
ANR	394823	Argument	EX_VAR ( opline -> result . var )		394473	0					
ANR	394824	CallExpression	EX_VAR ( opline -> result . var )		394473	0					
ANR	394825	Callee	EX_VAR		394473	0					
ANR	394826	Identifier	EX_VAR		394473	0					
ANR	394827	ArgumentList	opline -> result . var		394473	1					
ANR	394828	Argument	opline -> result . var		394473	0					
ANR	394829	MemberAccess	opline -> result . var		394473	0					
ANR	394830	PtrMemberAccess	opline -> result		394473	0					
ANR	394831	Identifier	opline		394473	0					
ANR	394832	Identifier	result		394473	1					
ANR	394833	Identifier	var		394473	1					
ANR	394834	Argument	zptr		394473	1					
ANR	394835	Identifier	zptr		394473	0					
ANR	394836	ElseStatement	else		394473	0					
ANR	394837	CompoundStatement		61:9:1636:1636	394473	0					
ANR	394838	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	36111:3:1142117:1142321	394473	0	True				
ANR	394839	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		394473	0					
ANR	394840	Callee	zend_pre_incdec_overloaded_property		394473	0					
ANR	394841	Identifier	zend_pre_incdec_overloaded_property		394473	0					
ANR	394842	ArgumentList	object		394473	1					
ANR	394843	Argument	object		394473	0					
ANR	394844	Identifier	object		394473	0					
ANR	394845	Argument	property		394473	1					
ANR	394846	Identifier	property		394473	0					
ANR	394847	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394473	2					
ANR	394848	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394473	0					
ANR	394849	Condition	IS_CV == IS_CONST		394473	0					
ANR	394850	EqualityExpression	IS_CV == IS_CONST		394473	0		==			
ANR	394851	Identifier	IS_CV		394473	0					
ANR	394852	Identifier	IS_CONST		394473	1					
ANR	394853	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		394473	1					
ANR	394854	Callee	CACHE_ADDR		394473	0					
ANR	394855	Identifier	CACHE_ADDR		394473	0					
ANR	394856	ArgumentList	Z_CACHE_SLOT_P ( property )		394473	1					
ANR	394857	Argument	Z_CACHE_SLOT_P ( property )		394473	0					
ANR	394858	CallExpression	Z_CACHE_SLOT_P ( property )		394473	0					
ANR	394859	Callee	Z_CACHE_SLOT_P		394473	0					
ANR	394860	Identifier	Z_CACHE_SLOT_P		394473	0					
ANR	394861	ArgumentList	property		394473	1					
ANR	394862	Argument	property		394473	0					
ANR	394863	Identifier	property		394473	0					
ANR	394864	Identifier	NULL		394473	2					
ANR	394865	Argument	inc		394473	3					
ANR	394866	Identifier	inc		394473	0					
ANR	394867	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		394473	4					
ANR	394868	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		394473	0					
ANR	394869	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		394473	0					
ANR	394870	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		394473	0					
ANR	394871	Callee	UNEXPECTED		394473	0					
ANR	394872	Identifier	UNEXPECTED		394473	0					
ANR	394873	ArgumentList	RETURN_VALUE_USED ( opline )		394473	1					
ANR	394874	Argument	RETURN_VALUE_USED ( opline )		394473	0					
ANR	394875	CallExpression	RETURN_VALUE_USED ( opline )		394473	0					
ANR	394876	Callee	RETURN_VALUE_USED		394473	0					
ANR	394877	Identifier	RETURN_VALUE_USED		394473	0					
ANR	394878	ArgumentList	opline		394473	1					
ANR	394879	Argument	opline		394473	0					
ANR	394880	Identifier	opline		394473	0					
ANR	394881	CallExpression	EX_VAR ( opline -> result . var )		394473	1					
ANR	394882	Callee	EX_VAR		394473	0					
ANR	394883	Identifier	EX_VAR		394473	0					
ANR	394884	ArgumentList	opline -> result . var		394473	1					
ANR	394885	Argument	opline -> result . var		394473	0					
ANR	394886	MemberAccess	opline -> result . var		394473	0					
ANR	394887	PtrMemberAccess	opline -> result		394473	0					
ANR	394888	Identifier	opline		394473	0					
ANR	394889	Identifier	result		394473	1					
ANR	394890	Identifier	var		394473	1					
ANR	394891	Identifier	NULL		394473	2					
ANR	394892	Condition	0	36113:10:1142337:1142337	394473	1	True				
ANR	394893	PrimaryExpression	0		394473	0					
ANR	394894	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	36116:1:1142344:1142381	394473	9	True				
ANR	394895	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		394473	0					
ANR	394896	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		394473	0					
ANR	394897	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		394473	0					
ANR	394898	ArgumentList			394473	1					
ANR	394899	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		394473	1					
ANR	394900	Identifier	zend_pre_incdec_property_helper_SPEC_CV_CV		394473	2					
ANR	394901	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		394473	3					
ANR	394902	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	36049:88:1140438:1140472	394473	0	True				
ANR	394903	ParameterType	int inc		394473	0					
ANR	394904	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		394473	1					
ANR	394905	CFGEntryNode	ENTRY		394473		True				
ANR	394906	CFGExitNode	EXIT		394473		True				
ANR	394907	Symbol	opline -> op1		394473						
ANR	394908	Symbol	opline -> op2		394473						
ANR	394909	Symbol	opline -> op2 . var		394473						
ANR	394910	Symbol	IS_CV		394473						
ANR	394911	Symbol	Z_OBJ_P		394473						
ANR	394912	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394473						
ANR	394913	Symbol	zptr		394473						
ANR	394914	Symbol	execute_data		394473						
ANR	394915	Symbol	opline -> result		394473						
ANR	394916	Symbol	UNEXPECTED		394473						
ANR	394917	Symbol	E_WARNING		394473						
ANR	394918	Symbol	make_real_object		394473						
ANR	394919	Symbol	RETURN_VALUE_USED		394473						
ANR	394920	Symbol	opline		394473						
ANR	394921	Symbol	IS_LONG		394473						
ANR	394922	Symbol	property		394473						
ANR	394923	Symbol	opline -> op1 . var		394473						
ANR	394924	Symbol	inc		394473						
ANR	394925	Symbol	BP_VAR_RW		394473						
ANR	394926	Symbol	IS_CONST		394473						
ANR	394927	Symbol	NULL		394473						
ANR	394928	Symbol	Z_CACHE_SLOT_P		394473						
ANR	394929	Symbol	_get_zval_ptr_cv_BP_VAR_R		394473						
ANR	394930	Symbol	Z_TYPE_P		394473						
ANR	394931	Symbol	* Z_OBJ_HT_P		394473						
ANR	394932	Symbol	CACHE_ADDR		394473						
ANR	394933	Symbol	* opline		394473						
ANR	394934	Symbol	Z_OBJ_HT_P		394473						
ANR	394935	Symbol	_get_zval_ptr_cv_BP_VAR_RW		394473						
ANR	394936	Symbol	EX_VAR		394473						
ANR	394937	Symbol	IS_OBJECT		394473						
ANR	394938	Symbol	IS_VAR		394473						
ANR	394939	Symbol	EXPECTED		394473						
ANR	394940	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		394473						
ANR	394941	Symbol	opline -> result . var		394473						
ANR	394942	Symbol	object		394473						
ANR	394943	Symbol	IS_UNUSED		394473						
ANR	394944	Function	zend_post_incdec_property_helper_SPEC_CV_CV	36129:0:1142818:1144754							
ANR	394945	FunctionDef	zend_post_incdec_property_helper_SPEC_CV_CV (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		394944	0					
ANR	394946	CompoundStatement		36130:0:1142944:1144754	394944	0					
ANR	394947	IdentifierDeclStatement	USE_OPLINE zval * object ;	36131:1:1142947:1142972	394944	0	True				
ANR	394948	IdentifierDecl	* object		394944	0					
ANR	394949	IdentifierDeclType	USE_OPLINE zval *		394944	0					
ANR	394950	Identifier	object		394944	1					
ANR	394951	IdentifierDeclStatement	zval * property ;	36134:1:1142975:1142989	394944	1	True				
ANR	394952	IdentifierDecl	* property		394944	0					
ANR	394953	IdentifierDeclType	zval *		394944	0					
ANR	394954	Identifier	property		394944	1					
ANR	394955	IdentifierDeclStatement	zval * zptr ;	36135:1:1142992:1143002	394944	2	True				
ANR	394956	IdentifierDecl	* zptr		394944	0					
ANR	394957	IdentifierDeclType	zval *		394944	0					
ANR	394958	Identifier	zptr		394944	1					
ANR	394959	ExpressionStatement	SAVE_OPLINE ( )	36137:1:1143006:1143019	394944	3	True				
ANR	394960	CallExpression	SAVE_OPLINE ( )		394944	0					
ANR	394961	Callee	SAVE_OPLINE		394944	0					
ANR	394962	Identifier	SAVE_OPLINE		394944	0					
ANR	394963	ArgumentList			394944	1					
ANR	394964	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	36138:1:1143022:1143088	394944	4	True				
ANR	394965	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		394944	0		=			
ANR	394966	Identifier	object		394944	0					
ANR	394967	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		394944	1					
ANR	394968	Callee	_get_zval_ptr_cv_BP_VAR_RW		394944	0					
ANR	394969	Identifier	_get_zval_ptr_cv_BP_VAR_RW		394944	0					
ANR	394970	ArgumentList	execute_data		394944	1					
ANR	394971	Argument	execute_data		394944	0					
ANR	394972	Identifier	execute_data		394944	0					
ANR	394973	Argument	opline -> op1 . var		394944	1					
ANR	394974	MemberAccess	opline -> op1 . var		394944	0					
ANR	394975	PtrMemberAccess	opline -> op1		394944	0					
ANR	394976	Identifier	opline		394944	0					
ANR	394977	Identifier	op1		394944	1					
ANR	394978	Identifier	var		394944	1					
ANR	394979	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		394944	5					
ANR	394980	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	36140:5:1143096:1143152	394944	0	True				
ANR	394981	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		394944	0		&&			
ANR	394982	EqualityExpression	IS_CV == IS_UNUSED		394944	0		==			
ANR	394983	Identifier	IS_CV		394944	0					
ANR	394984	Identifier	IS_UNUSED		394944	1					
ANR	394985	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		394944	1					
ANR	394986	Callee	UNEXPECTED		394944	0					
ANR	394987	Identifier	UNEXPECTED		394944	0					
ANR	394988	ArgumentList	Z_OBJ_P ( object ) == NULL		394944	1					
ANR	394989	Argument	Z_OBJ_P ( object ) == NULL		394944	0					
ANR	394990	EqualityExpression	Z_OBJ_P ( object ) == NULL		394944	0		==			
ANR	394991	CallExpression	Z_OBJ_P ( object )		394944	0					
ANR	394992	Callee	Z_OBJ_P		394944	0					
ANR	394993	Identifier	Z_OBJ_P		394944	0					
ANR	394994	ArgumentList	object		394944	1					
ANR	394995	Argument	object		394944	0					
ANR	394996	Identifier	object		394944	0					
ANR	394997	Identifier	NULL		394944	1					
ANR	394998	CompoundStatement		11:64:210:210	394944	1					
ANR	394999	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	36141:2:1143159:1143223	394944	0	True				
ANR	395000	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		394944	0					
ANR	395001	Callee	zend_throw_error		394944	0					
ANR	395002	Identifier	zend_throw_error		394944	0					
ANR	395003	ArgumentList	NULL		394944	1					
ANR	395004	Argument	NULL		394944	0					
ANR	395005	Identifier	NULL		394944	0					
ANR	395006	Argument	"""Using $this when not in object context"""		394944	1					
ANR	395007	PrimaryExpression	"""Using $this when not in object context"""		394944	0					
ANR	395008	ExpressionStatement	HANDLE_EXCEPTION ( )	36143:2:1143228:1143246	394944	1	True				
ANR	395009	CallExpression	HANDLE_EXCEPTION ( )		394944	0					
ANR	395010	Callee	HANDLE_EXCEPTION		394944	0					
ANR	395011	Identifier	HANDLE_EXCEPTION		394944	0					
ANR	395012	ArgumentList			394944	1					
ANR	395013	ExpressionStatement	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"	36146:1:1143253:1143320	394944	6	True				
ANR	395014	AssignmentExpression	"property = _get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		394944	0		=			
ANR	395015	Identifier	property		394944	0					
ANR	395016	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , opline -> op2 . var )"		394944	1					
ANR	395017	Callee	_get_zval_ptr_cv_BP_VAR_R		394944	0					
ANR	395018	Identifier	_get_zval_ptr_cv_BP_VAR_R		394944	0					
ANR	395019	ArgumentList	execute_data		394944	1					
ANR	395020	Argument	execute_data		394944	0					
ANR	395021	Identifier	execute_data		394944	0					
ANR	395022	Argument	opline -> op2 . var		394944	1					
ANR	395023	MemberAccess	opline -> op2 . var		394944	0					
ANR	395024	PtrMemberAccess	opline -> op2		394944	0					
ANR	395025	Identifier	opline		394944	0					
ANR	395026	Identifier	op2		394944	1					
ANR	395027	Identifier	var		394944	1					
ANR	395028	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		394944	7					
ANR	395029	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	36148:5:1143328:1143372	394944	0	True				
ANR	395030	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		394944	0		&&			
ANR	395031	EqualityExpression	IS_CV == IS_VAR		394944	0		==			
ANR	395032	Identifier	IS_CV		394944	0					
ANR	395033	Identifier	IS_VAR		394944	1					
ANR	395034	CallExpression	UNEXPECTED ( object == NULL )		394944	1					
ANR	395035	Callee	UNEXPECTED		394944	0					
ANR	395036	Identifier	UNEXPECTED		394944	0					
ANR	395037	ArgumentList	object == NULL		394944	1					
ANR	395038	Argument	object == NULL		394944	0					
ANR	395039	EqualityExpression	object == NULL		394944	0		==			
ANR	395040	Identifier	object		394944	0					
ANR	395041	Identifier	NULL		394944	1					
ANR	395042	CompoundStatement		19:52:430:430	394944	1					
ANR	395043	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	36149:2:1143379:1143469	394944	0	True				
ANR	395044	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		394944	0					
ANR	395045	Callee	zend_throw_error		394944	0					
ANR	395046	Identifier	zend_throw_error		394944	0					
ANR	395047	ArgumentList	NULL		394944	1					
ANR	395048	Argument	NULL		394944	0					
ANR	395049	Identifier	NULL		394944	0					
ANR	395050	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		394944	1					
ANR	395051	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		394944	0					
ANR	395052	ExpressionStatement	HANDLE_EXCEPTION ( )	36151:2:1143474:1143492	394944	1	True				
ANR	395053	CallExpression	HANDLE_EXCEPTION ( )		394944	0					
ANR	395054	Callee	HANDLE_EXCEPTION		394944	0					
ANR	395055	Identifier	HANDLE_EXCEPTION		394944	0					
ANR	395056	ArgumentList			394944	1					
ANR	395057	DoStatement	do		394944	8					
ANR	395058	CompoundStatement		25:4:557:557	394944	0					
ANR	395059	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		394944	0					
ANR	395060	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	36155:6:1143510:1143572	394944	0	True				
ANR	395061	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		394944	0		&&			
ANR	395062	EqualityExpression	IS_CV != IS_UNUSED		394944	0		!=			
ANR	395063	Identifier	IS_CV		394944	0					
ANR	395064	Identifier	IS_UNUSED		394944	1					
ANR	395065	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		394944	1					
ANR	395066	Callee	UNEXPECTED		394944	0					
ANR	395067	Identifier	UNEXPECTED		394944	0					
ANR	395068	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		394944	1					
ANR	395069	Argument	Z_TYPE_P ( object ) != IS_OBJECT		394944	0					
ANR	395070	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		394944	0		!=			
ANR	395071	CallExpression	Z_TYPE_P ( object )		394944	0					
ANR	395072	Callee	Z_TYPE_P		394944	0					
ANR	395073	Identifier	Z_TYPE_P		394944	0					
ANR	395074	ArgumentList	object		394944	1					
ANR	395075	Argument	object		394944	0					
ANR	395076	Identifier	object		394944	0					
ANR	395077	Identifier	IS_OBJECT		394944	1					
ANR	395078	CompoundStatement		26:71:630:630	394944	1					
ANR	395079	ExpressionStatement	ZVAL_DEREF ( object )	36156:3:1143580:1143598	394944	0	True				
ANR	395080	CallExpression	ZVAL_DEREF ( object )		394944	0					
ANR	395081	Callee	ZVAL_DEREF		394944	0					
ANR	395082	Identifier	ZVAL_DEREF		394944	0					
ANR	395083	ArgumentList	object		394944	1					
ANR	395084	Argument	object		394944	0					
ANR	395085	Identifier	object		394944	0					
ANR	395086	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		394944	1					
ANR	395087	Condition	UNEXPECTED ( ! make_real_object ( object ) )	36157:7:1143607:1143643	394944	0	True				
ANR	395088	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		394944	0					
ANR	395089	Callee	UNEXPECTED		394944	0					
ANR	395090	Identifier	UNEXPECTED		394944	0					
ANR	395091	ArgumentList	! make_real_object ( object )		394944	1					
ANR	395092	Argument	! make_real_object ( object )		394944	0					
ANR	395093	UnaryOperationExpression	! make_real_object ( object )		394944	0					
ANR	395094	UnaryOperator	!		394944	0					
ANR	395095	CallExpression	make_real_object ( object )		394944	1					
ANR	395096	Callee	make_real_object		394944	0					
ANR	395097	Identifier	make_real_object		394944	0					
ANR	395098	ArgumentList	object		394944	1					
ANR	395099	Argument	object		394944	0					
ANR	395100	Identifier	object		394944	0					
ANR	395101	CompoundStatement		28:46:701:701	394944	1					
ANR	395102	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	36158:4:1143652:1143730	394944	0	True				
ANR	395103	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		394944	0					
ANR	395104	Callee	zend_error		394944	0					
ANR	395105	Identifier	zend_error		394944	0					
ANR	395106	ArgumentList	E_WARNING		394944	1					
ANR	395107	Argument	E_WARNING		394944	0					
ANR	395108	Identifier	E_WARNING		394944	0					
ANR	395109	Argument	"""Attempt to increment/decrement property of non-object"""		394944	1					
ANR	395110	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		394944	0					
ANR	395111	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	36159:4:1143736:1143773	394944	1	True				
ANR	395112	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		394944	0					
ANR	395113	Callee	ZVAL_NULL		394944	0					
ANR	395114	Identifier	ZVAL_NULL		394944	0					
ANR	395115	ArgumentList	EX_VAR ( opline -> result . var )		394944	1					
ANR	395116	Argument	EX_VAR ( opline -> result . var )		394944	0					
ANR	395117	CallExpression	EX_VAR ( opline -> result . var )		394944	0					
ANR	395118	Callee	EX_VAR		394944	0					
ANR	395119	Identifier	EX_VAR		394944	0					
ANR	395120	ArgumentList	opline -> result . var		394944	1					
ANR	395121	Argument	opline -> result . var		394944	0					
ANR	395122	MemberAccess	opline -> result . var		394944	0					
ANR	395123	PtrMemberAccess	opline -> result		394944	0					
ANR	395124	Identifier	opline		394944	0					
ANR	395125	Identifier	result		394944	1					
ANR	395126	Identifier	var		394944	1					
ANR	395127	BreakStatement	break ;	36160:4:1143779:1143784	394944	2	True				
ANR	395128	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		394944	1					
ANR	395129	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	36166:6:1143858:1144079	394944	0	True				
ANR	395130	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		394944	0		&&			
ANR	395131	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		394944	0					
ANR	395132	Callee	EXPECTED		394944	0					
ANR	395133	Identifier	EXPECTED		394944	0					
ANR	395134	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394944	1					
ANR	395135	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394944	0					
ANR	395136	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394944	0					
ANR	395137	CallExpression	Z_OBJ_HT_P ( object )		394944	0					
ANR	395138	Callee	Z_OBJ_HT_P		394944	0					
ANR	395139	Identifier	Z_OBJ_HT_P		394944	0					
ANR	395140	ArgumentList	object		394944	1					
ANR	395141	Argument	object		394944	0					
ANR	395142	Identifier	object		394944	0					
ANR	395143	Identifier	get_property_ptr_ptr		394944	1					
ANR	395144	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		394944	1					
ANR	395145	Callee	EXPECTED		394944	0					
ANR	395146	Identifier	EXPECTED		394944	0					
ANR	395147	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		394944	1					
ANR	395148	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		394944	0					
ANR	395149	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		394944	0		!=			
ANR	395150	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		394944	0		=			
ANR	395151	Identifier	zptr		394944	0					
ANR	395152	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		394944	1					
ANR	395153	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394944	0					
ANR	395154	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394944	0					
ANR	395155	CallExpression	Z_OBJ_HT_P ( object )		394944	0					
ANR	395156	Callee	Z_OBJ_HT_P		394944	0					
ANR	395157	Identifier	Z_OBJ_HT_P		394944	0					
ANR	395158	ArgumentList	object		394944	1					
ANR	395159	Argument	object		394944	0					
ANR	395160	Identifier	object		394944	0					
ANR	395161	Identifier	get_property_ptr_ptr		394944	1					
ANR	395162	ArgumentList	object		394944	1					
ANR	395163	Argument	object		394944	0					
ANR	395164	Identifier	object		394944	0					
ANR	395165	Argument	property		394944	1					
ANR	395166	Identifier	property		394944	0					
ANR	395167	Argument	BP_VAR_RW		394944	2					
ANR	395168	Identifier	BP_VAR_RW		394944	0					
ANR	395169	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394944	3					
ANR	395170	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394944	0					
ANR	395171	Condition	IS_CV == IS_CONST		394944	0					
ANR	395172	EqualityExpression	IS_CV == IS_CONST		394944	0		==			
ANR	395173	Identifier	IS_CV		394944	0					
ANR	395174	Identifier	IS_CONST		394944	1					
ANR	395175	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		394944	1					
ANR	395176	Callee	CACHE_ADDR		394944	0					
ANR	395177	Identifier	CACHE_ADDR		394944	0					
ANR	395178	ArgumentList	Z_CACHE_SLOT_P ( property )		394944	1					
ANR	395179	Argument	Z_CACHE_SLOT_P ( property )		394944	0					
ANR	395180	CallExpression	Z_CACHE_SLOT_P ( property )		394944	0					
ANR	395181	Callee	Z_CACHE_SLOT_P		394944	0					
ANR	395182	Identifier	Z_CACHE_SLOT_P		394944	0					
ANR	395183	ArgumentList	property		394944	1					
ANR	395184	Argument	property		394944	0					
ANR	395185	Identifier	property		394944	0					
ANR	395186	Identifier	NULL		394944	2					
ANR	395187	Identifier	NULL		394944	1					
ANR	395188	CompoundStatement		38:173:1137:1137	394944	1					
ANR	395189	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		394944	0					
ANR	395190	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	36169:7:1144092:1144126	394944	0	True				
ANR	395191	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		394944	0					
ANR	395192	Callee	EXPECTED		394944	0					
ANR	395193	Identifier	EXPECTED		394944	0					
ANR	395194	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		394944	1					
ANR	395195	Argument	Z_TYPE_P ( zptr ) == IS_LONG		394944	0					
ANR	395196	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		394944	0		==			
ANR	395197	CallExpression	Z_TYPE_P ( zptr )		394944	0					
ANR	395198	Callee	Z_TYPE_P		394944	0					
ANR	395199	Identifier	Z_TYPE_P		394944	0					
ANR	395200	ArgumentList	zptr		394944	1					
ANR	395201	Argument	zptr		394944	0					
ANR	395202	Identifier	zptr		394944	0					
ANR	395203	Identifier	IS_LONG		394944	1					
ANR	395204	CompoundStatement		40:44:1184:1184	394944	1					
ANR	395205	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	36170:4:1144135:1144184	394944	0	True				
ANR	395206	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		394944	0					
ANR	395207	Callee	ZVAL_COPY_VALUE		394944	0					
ANR	395208	Identifier	ZVAL_COPY_VALUE		394944	0					
ANR	395209	ArgumentList	EX_VAR ( opline -> result . var )		394944	1					
ANR	395210	Argument	EX_VAR ( opline -> result . var )		394944	0					
ANR	395211	CallExpression	EX_VAR ( opline -> result . var )		394944	0					
ANR	395212	Callee	EX_VAR		394944	0					
ANR	395213	Identifier	EX_VAR		394944	0					
ANR	395214	ArgumentList	opline -> result . var		394944	1					
ANR	395215	Argument	opline -> result . var		394944	0					
ANR	395216	MemberAccess	opline -> result . var		394944	0					
ANR	395217	PtrMemberAccess	opline -> result		394944	0					
ANR	395218	Identifier	opline		394944	0					
ANR	395219	Identifier	result		394944	1					
ANR	395220	Identifier	var		394944	1					
ANR	395221	Argument	zptr		394944	1					
ANR	395222	Identifier	zptr		394944	0					
ANR	395223	IfStatement	if ( inc )		394944	1					
ANR	395224	Condition	inc	36171:8:1144194:1144196	394944	0	True				
ANR	395225	Identifier	inc		394944	0					
ANR	395226	CompoundStatement		42:13:1254:1254	394944	1					
ANR	395227	ExpressionStatement	fast_long_increment_function ( zptr )	36172:5:1144206:1144240	394944	0	True				
ANR	395228	CallExpression	fast_long_increment_function ( zptr )		394944	0					
ANR	395229	Callee	fast_long_increment_function		394944	0					
ANR	395230	Identifier	fast_long_increment_function		394944	0					
ANR	395231	ArgumentList	zptr		394944	1					
ANR	395232	Argument	zptr		394944	0					
ANR	395233	Identifier	zptr		394944	0					
ANR	395234	ElseStatement	else		394944	0					
ANR	395235	CompoundStatement		44:11:1308:1308	394944	0					
ANR	395236	ExpressionStatement	fast_long_decrement_function ( zptr )	36174:5:1144260:1144294	394944	0	True				
ANR	395237	CallExpression	fast_long_decrement_function ( zptr )		394944	0					
ANR	395238	Callee	fast_long_decrement_function		394944	0					
ANR	395239	Identifier	fast_long_decrement_function		394944	0					
ANR	395240	ArgumentList	zptr		394944	1					
ANR	395241	Argument	zptr		394944	0					
ANR	395242	Identifier	zptr		394944	0					
ANR	395243	ElseStatement	else		394944	0					
ANR	395244	CompoundStatement		47:10:1367:1367	394944	0					
ANR	395245	ExpressionStatement	ZVAL_DEREF ( zptr )	36177:4:1144318:1144334	394944	0	True				
ANR	395246	CallExpression	ZVAL_DEREF ( zptr )		394944	0					
ANR	395247	Callee	ZVAL_DEREF		394944	0					
ANR	395248	Identifier	ZVAL_DEREF		394944	0					
ANR	395249	ArgumentList	zptr		394944	1					
ANR	395250	Argument	zptr		394944	0					
ANR	395251	Identifier	zptr		394944	0					
ANR	395252	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	36178:4:1144340:1144389	394944	1	True				
ANR	395253	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		394944	0					
ANR	395254	Callee	ZVAL_COPY_VALUE		394944	0					
ANR	395255	Identifier	ZVAL_COPY_VALUE		394944	0					
ANR	395256	ArgumentList	EX_VAR ( opline -> result . var )		394944	1					
ANR	395257	Argument	EX_VAR ( opline -> result . var )		394944	0					
ANR	395258	CallExpression	EX_VAR ( opline -> result . var )		394944	0					
ANR	395259	Callee	EX_VAR		394944	0					
ANR	395260	Identifier	EX_VAR		394944	0					
ANR	395261	ArgumentList	opline -> result . var		394944	1					
ANR	395262	Argument	opline -> result . var		394944	0					
ANR	395263	MemberAccess	opline -> result . var		394944	0					
ANR	395264	PtrMemberAccess	opline -> result		394944	0					
ANR	395265	Identifier	opline		394944	0					
ANR	395266	Identifier	result		394944	1					
ANR	395267	Identifier	var		394944	1					
ANR	395268	Argument	zptr		394944	1					
ANR	395269	Identifier	zptr		394944	0					
ANR	395270	ExpressionStatement	zval_opt_copy_ctor ( zptr )	36179:4:1144395:1144419	394944	2	True				
ANR	395271	CallExpression	zval_opt_copy_ctor ( zptr )		394944	0					
ANR	395272	Callee	zval_opt_copy_ctor		394944	0					
ANR	395273	Identifier	zval_opt_copy_ctor		394944	0					
ANR	395274	ArgumentList	zptr		394944	1					
ANR	395275	Argument	zptr		394944	0					
ANR	395276	Identifier	zptr		394944	0					
ANR	395277	IfStatement	if ( inc )		394944	3					
ANR	395278	Condition	inc	36180:8:1144429:1144431	394944	0	True				
ANR	395279	Identifier	inc		394944	0					
ANR	395280	CompoundStatement		51:13:1489:1489	394944	1					
ANR	395281	ExpressionStatement	increment_function ( zptr )	36181:5:1144441:1144465	394944	0	True				
ANR	395282	CallExpression	increment_function ( zptr )		394944	0					
ANR	395283	Callee	increment_function		394944	0					
ANR	395284	Identifier	increment_function		394944	0					
ANR	395285	ArgumentList	zptr		394944	1					
ANR	395286	Argument	zptr		394944	0					
ANR	395287	Identifier	zptr		394944	0					
ANR	395288	ElseStatement	else		394944	0					
ANR	395289	CompoundStatement		53:11:1533:1533	394944	0					
ANR	395290	ExpressionStatement	decrement_function ( zptr )	36183:5:1144485:1144509	394944	0	True				
ANR	395291	CallExpression	decrement_function ( zptr )		394944	0					
ANR	395292	Callee	decrement_function		394944	0					
ANR	395293	Identifier	decrement_function		394944	0					
ANR	395294	ArgumentList	zptr		394944	1					
ANR	395295	Argument	zptr		394944	0					
ANR	395296	Identifier	zptr		394944	0					
ANR	395297	ElseStatement	else		394944	0					
ANR	395298	CompoundStatement		57:9:1586:1586	394944	0					
ANR	395299	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	36187:3:1144536:1144692	394944	0	True				
ANR	395300	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		394944	0					
ANR	395301	Callee	zend_post_incdec_overloaded_property		394944	0					
ANR	395302	Identifier	zend_post_incdec_overloaded_property		394944	0					
ANR	395303	ArgumentList	object		394944	1					
ANR	395304	Argument	object		394944	0					
ANR	395305	Identifier	object		394944	0					
ANR	395306	Argument	property		394944	1					
ANR	395307	Identifier	property		394944	0					
ANR	395308	Argument	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394944	2					
ANR	395309	ConditionalExpression	( IS_CV == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		394944	0					
ANR	395310	Condition	IS_CV == IS_CONST		394944	0					
ANR	395311	EqualityExpression	IS_CV == IS_CONST		394944	0		==			
ANR	395312	Identifier	IS_CV		394944	0					
ANR	395313	Identifier	IS_CONST		394944	1					
ANR	395314	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		394944	1					
ANR	395315	Callee	CACHE_ADDR		394944	0					
ANR	395316	Identifier	CACHE_ADDR		394944	0					
ANR	395317	ArgumentList	Z_CACHE_SLOT_P ( property )		394944	1					
ANR	395318	Argument	Z_CACHE_SLOT_P ( property )		394944	0					
ANR	395319	CallExpression	Z_CACHE_SLOT_P ( property )		394944	0					
ANR	395320	Callee	Z_CACHE_SLOT_P		394944	0					
ANR	395321	Identifier	Z_CACHE_SLOT_P		394944	0					
ANR	395322	ArgumentList	property		394944	1					
ANR	395323	Argument	property		394944	0					
ANR	395324	Identifier	property		394944	0					
ANR	395325	Identifier	NULL		394944	2					
ANR	395326	Argument	inc		394944	3					
ANR	395327	Identifier	inc		394944	0					
ANR	395328	Argument	EX_VAR ( opline -> result . var )		394944	4					
ANR	395329	CallExpression	EX_VAR ( opline -> result . var )		394944	0					
ANR	395330	Callee	EX_VAR		394944	0					
ANR	395331	Identifier	EX_VAR		394944	0					
ANR	395332	ArgumentList	opline -> result . var		394944	1					
ANR	395333	Argument	opline -> result . var		394944	0					
ANR	395334	MemberAccess	opline -> result . var		394944	0					
ANR	395335	PtrMemberAccess	opline -> result		394944	0					
ANR	395336	Identifier	opline		394944	0					
ANR	395337	Identifier	result		394944	1					
ANR	395338	Identifier	var		394944	1					
ANR	395339	Condition	0	36189:10:1144708:1144708	394944	1	True				
ANR	395340	PrimaryExpression	0		394944	0					
ANR	395341	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	36192:1:1144715:1144752	394944	9	True				
ANR	395342	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		394944	0					
ANR	395343	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		394944	0					
ANR	395344	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		394944	0					
ANR	395345	ArgumentList			394944	1					
ANR	395346	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		394944	1					
ANR	395347	Identifier	zend_post_incdec_property_helper_SPEC_CV_CV		394944	2					
ANR	395348	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		394944	3					
ANR	395349	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	36129:89:1142907:1142941	394944	0	True				
ANR	395350	ParameterType	int inc		394944	0					
ANR	395351	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		394944	1					
ANR	395352	CFGEntryNode	ENTRY		394944		True				
ANR	395353	CFGExitNode	EXIT		394944		True				
ANR	395354	Symbol	opline -> op1		394944						
ANR	395355	Symbol	opline -> op2		394944						
ANR	395356	Symbol	opline -> op2 . var		394944						
ANR	395357	Symbol	IS_CV		394944						
ANR	395358	Symbol	Z_OBJ_P		394944						
ANR	395359	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		394944						
ANR	395360	Symbol	zptr		394944						
ANR	395361	Symbol	execute_data		394944						
ANR	395362	Symbol	opline -> result		394944						
ANR	395363	Symbol	UNEXPECTED		394944						
ANR	395364	Symbol	E_WARNING		394944						
ANR	395365	Symbol	make_real_object		394944						
ANR	395366	Symbol	opline		394944						
ANR	395367	Symbol	IS_LONG		394944						
ANR	395368	Symbol	property		394944						
ANR	395369	Symbol	opline -> op1 . var		394944						
ANR	395370	Symbol	inc		394944						
ANR	395371	Symbol	BP_VAR_RW		394944						
ANR	395372	Symbol	IS_CONST		394944						
ANR	395373	Symbol	NULL		394944						
ANR	395374	Symbol	Z_CACHE_SLOT_P		394944						
ANR	395375	Symbol	_get_zval_ptr_cv_BP_VAR_R		394944						
ANR	395376	Symbol	Z_TYPE_P		394944						
ANR	395377	Symbol	* Z_OBJ_HT_P		394944						
ANR	395378	Symbol	CACHE_ADDR		394944						
ANR	395379	Symbol	* opline		394944						
ANR	395380	Symbol	Z_OBJ_HT_P		394944						
ANR	395381	Symbol	_get_zval_ptr_cv_BP_VAR_RW		394944						
ANR	395382	Symbol	EX_VAR		394944						
ANR	395383	Symbol	IS_OBJECT		394944						
ANR	395384	Symbol	IS_VAR		394944						
ANR	395385	Symbol	EXPECTED		394944						
ANR	395386	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		394944						
ANR	395387	Symbol	opline -> result . var		394944						
ANR	395388	Symbol	object		394944						
ANR	395389	Symbol	IS_UNUSED		394944						
ANR	395390	DeclStmt									
ANR	395391	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395392	DeclStmt									
ANR	395393	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	395394	DeclStmt									
ANR	395395	Decl							zval	zval *	container
ANR	395396	DeclStmt									
ANR	395397	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	395398	DeclStmt									
ANR	395399	Decl							zval	zval *	container
ANR	395400	DeclStmt									
ANR	395401	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395402	DeclStmt									
ANR	395403	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395404	DeclStmt									
ANR	395405	Decl							zend_free_op	zend_free_op	free_op1
ANR	395406	DeclStmt									
ANR	395407	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	395408	DeclStmt									
ANR	395409	Decl							zval	zval *	container
ANR	395410	DeclStmt									
ANR	395411	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395412	DeclStmt									
ANR	395413	Decl							zval	zval *	offset
ANR	395414	DeclStmt									
ANR	395415	Decl							zend_object	zend_object *	zobj
ANR	395416	DeclStmt									
ANR	395417	Decl							zval	zval *	retval
ANR	395418	DeclStmt									
ANR	395419	Decl							uint32_t	uint32_t	prop_offset
ANR	395420	DeclStmt									
ANR	395421	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	395422	DeclStmt									
ANR	395423	Decl							zval	zval *	property
ANR	395424	DeclStmt									
ANR	395425	Decl							zval	zval *	container
ANR	395426	DeclStmt									
ANR	395427	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	395428	DeclStmt									
ANR	395429	Decl							zval	zval *	property
ANR	395430	DeclStmt									
ANR	395431	Decl							zval	zval *	container
ANR	395432	DeclStmt									
ANR	395433	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395434	DeclStmt									
ANR	395435	Decl							zval	zval *	offset
ANR	395436	DeclStmt									
ANR	395437	Decl							zend_object	zend_object *	zobj
ANR	395438	DeclStmt									
ANR	395439	Decl							zval	zval *	retval
ANR	395440	DeclStmt									
ANR	395441	Decl							uint32_t	uint32_t	prop_offset
ANR	395442	DeclStmt									
ANR	395443	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395444	DeclStmt									
ANR	395445	Decl							zend_free_op	zend_free_op	free_op1
ANR	395446	DeclStmt									
ANR	395447	Decl							zval	zval *	property
ANR	395448	DeclStmt									
ANR	395449	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	395450	DeclStmt									
ANR	395451	Decl							zval	zval *	container
ANR	395452	Decl							zval	zval *	property
ANR	395453	DeclStmt									
ANR	395454	Decl							USE_OPLINE zval	USE_OPLINE zval *	object
ANR	395455	DeclStmt									
ANR	395456	Decl							zval	zval *	property_name
ANR	395457	DeclStmt									
ANR	395458	Decl							USE_OPLINE zval	USE_OPLINE zval *	object_ptr
ANR	395459	DeclStmt									
ANR	395460	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	395461	DeclStmt									
ANR	395462	Decl							zval	zval *	value
ANR	395463	DeclStmt									
ANR	395464	Decl							zval	zval *	variable_ptr
ANR	395465	DeclStmt									
ANR	395466	Decl							zval	zval *	dim
ANR	395467	DeclStmt									
ANR	395468	Decl							zval	zval *	property_name
ANR	395469	DeclStmt									
ANR	395470	Decl							zend_long	zend_long	offset
ANR	395471	DeclStmt									
ANR	395472	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	395473	DeclStmt									
ANR	395474	Decl							zval	zval *	variable_ptr
ANR	395475	DeclStmt									
ANR	395476	Decl							USE_OPLINE zval	USE_OPLINE zval *	variable_ptr
ANR	395477	DeclStmt									
ANR	395478	Decl							zval	zval *	value_ptr
ANR	395479	DeclStmt									
ANR	395480	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	395481	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	395482	DeclStmt									
ANR	395483	Decl							zend_string	zend_string *	op1_str
ANR	395484	Decl							zend_string	zend_string *	op2_str
ANR	395485	Decl							zend_string	zend_string *	str
ANR	395486	DeclStmt									
ANR	395487	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	395488	DeclStmt									
ANR	395489	Decl							zval	zval *	object
ANR	395490	DeclStmt									
ANR	395491	Decl							zend_function	zend_function *	fbc
ANR	395492	DeclStmt									
ANR	395493	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	395494	DeclStmt									
ANR	395495	Decl							zend_object	zend_object *	obj
ANR	395496	DeclStmt									
ANR	395497	Decl							zend_execute_data	zend_execute_data *	call
ANR	395498	DeclStmt									
ANR	395499	Decl							uint32_t	uint32_t	call_info
ANR	395500	DeclStmt									
ANR	395501	Decl							zend_object	zend_object *	orig_obj
ANR	395502	DeclStmt									
ANR	395503	Decl							USE_OPLINE zval	USE_OPLINE zval *	op1
ANR	395504	Decl							USE_OPLINE zval	USE_OPLINE zval *	op2
ANR	395505	Decl							USE_OPLINE zval	USE_OPLINE zval *	result
ANR	395506	DeclStmt									
ANR	395507	Decl							int	int	result
ANR	395508	DeclStmt									
ANR	395509	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	395510	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	395511	DeclStmt									
ANR	395512	Decl							zend_refcounted	zend_refcounted *	ref
ANR	395513	DeclStmt									
ANR	395514	Decl							zval	zval *	offset
ANR	395515	DeclStmt									
ANR	395516	Decl							zend_string	zend_string *	str
ANR	395517	DeclStmt									
ANR	395518	Decl							zend_ulong	zend_ulong	hval
ANR	395519	DeclStmt									
ANR	395520	Decl							zval	zval *	array
ANR	395521	DeclStmt									
ANR	395522	Decl							uint32_t	uint32_t	size
ANR	395523	DeclStmt									
ANR	395524	Decl							USE_OPLINE	USE_OPLINE	array
ANR	395525	DeclStmt									
ANR	395526	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395527	DeclStmt									
ANR	395528	Decl							zval	zval *	offset
ANR	395529	DeclStmt									
ANR	395530	Decl							zend_ulong	zend_ulong	hval
ANR	395531	DeclStmt									
ANR	395532	Decl							zend_string	zend_string *	key
ANR	395533	DeclStmt									
ANR	395534	Decl							HashTable	HashTable *	ht
ANR	395535	DeclStmt									
ANR	395536	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395537	DeclStmt									
ANR	395538	Decl							zval	zval *	offset
ANR	395539	DeclStmt									
ANR	395540	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395541	DeclStmt									
ANR	395542	Decl							int	int	result
ANR	395543	DeclStmt									
ANR	395544	Decl							zend_ulong	zend_ulong	hval
ANR	395545	DeclStmt									
ANR	395546	Decl							zval	zval *	offset
ANR	395547	DeclStmt									
ANR	395548	Decl							HashTable	HashTable *	ht
ANR	395549	DeclStmt									
ANR	395550	Decl							zval	zval *	value
ANR	395551	DeclStmt									
ANR	395552	Decl							zend_string	zend_string *	str
ANR	395553	DeclStmt									
ANR	395554	Decl							zend_long	zend_long	lval
ANR	395555	DeclStmt									
ANR	395556	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	395557	DeclStmt									
ANR	395558	Decl							int	int	result
ANR	395559	DeclStmt									
ANR	395560	Decl							zval	zval *	offset
ANR	395561	DeclStmt									
ANR	395562	Decl							USE_OPLINE zend_generator	USE_OPLINE zend_generator *	generator
ANR	395563	DeclStmt									
ANR	395564	Decl							zval	zval *	value
ANR	395565	DeclStmt									
ANR	395566	Decl							zval	zval *	value_ptr
ANR	395567	DeclStmt									
ANR	395568	Decl							zval	zval *	value
ANR	395569	DeclStmt									
ANR	395570	Decl							zval	zval *	key
ANR	395571	DeclStmt									
ANR	395572	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395573	DeclStmt									
ANR	395574	Decl							zval	zval *	op1
ANR	395575	Decl							zval	zval *	op2
ANR	395576	Decl							zval	zval *	result
ANR	395577	DeclStmt									
ANR	395578	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395579	DeclStmt									
ANR	395580	Decl							zval	zval *	op1
ANR	395581	Decl							zval	zval *	op2
ANR	395582	Decl							zval	zval *	result
ANR	395583	DeclStmt									
ANR	395584	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395585	DeclStmt									
ANR	395586	Decl							zval	zval *	op1
ANR	395587	Decl							zval	zval *	op2
ANR	395588	Decl							zval	zval *	result
ANR	395589	DeclStmt									
ANR	395590	Decl							zend_long	zend_long	overflow
ANR	395591	DeclStmt									
ANR	395592	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395593	DeclStmt									
ANR	395594	Decl							zval	zval *	op1
ANR	395595	Decl							zval	zval *	op2
ANR	395596	DeclStmt									
ANR	395597	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395598	DeclStmt									
ANR	395599	Decl							zval	zval *	op1
ANR	395600	Decl							zval	zval *	op2
ANR	395601	Decl							zval	zval *	result
ANR	395602	DeclStmt									
ANR	395603	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395604	DeclStmt									
ANR	395605	Decl							zval	zval *	op1
ANR	395606	Decl							zval	zval *	op2
ANR	395607	DeclStmt									
ANR	395608	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395609	DeclStmt									
ANR	395610	Decl							zval	zval *	op1
ANR	395611	Decl							zval	zval *	op2
ANR	395612	DeclStmt									
ANR	395613	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395614	DeclStmt									
ANR	395615	Decl							zval	zval *	op1
ANR	395616	Decl							zval	zval *	op2
ANR	395617	DeclStmt									
ANR	395618	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395619	DeclStmt									
ANR	395620	Decl							zval	zval *	op1
ANR	395621	Decl							zval	zval *	op2
ANR	395622	DeclStmt									
ANR	395623	Decl							zend_string	zend_string *	op1_str
ANR	395624	DeclStmt									
ANR	395625	Decl							zend_string	zend_string *	op2_str
ANR	395626	DeclStmt									
ANR	395627	Decl							zend_string	zend_string *	str
ANR	395628	DeclStmt									
ANR	395629	Decl							size_t	size_t	len
ANR	395630	DeclStmt									
ANR	395631	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395632	DeclStmt									
ANR	395633	Decl							zval	zval *	op1
ANR	395634	Decl							zval	zval *	op2
ANR	395635	Decl							zval	zval *	result
ANR	395636	DeclStmt									
ANR	395637	Decl							int	int	result
ANR	395638	DeclStmt									
ANR	395639	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395640	DeclStmt									
ANR	395641	Decl							zval	zval *	op1
ANR	395642	Decl							zval	zval *	op2
ANR	395643	Decl							zval	zval *	result
ANR	395644	DeclStmt									
ANR	395645	Decl							int	int	result
ANR	395646	DeclStmt									
ANR	395647	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395648	DeclStmt									
ANR	395649	Decl							zval	zval *	op1
ANR	395650	Decl							zval	zval *	op2
ANR	395651	Decl							zval	zval *	result
ANR	395652	DeclStmt									
ANR	395653	Decl							int	int	result
ANR	395654	DeclStmt									
ANR	395655	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395656	DeclStmt									
ANR	395657	Decl							zval	zval *	op1
ANR	395658	Decl							zval	zval *	op2
ANR	395659	Decl							zval	zval *	result
ANR	395660	DeclStmt									
ANR	395661	Decl							int	int	result
ANR	395662	DeclStmt									
ANR	395663	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395664	DeclStmt									
ANR	395665	Decl							zval	zval *	op1
ANR	395666	Decl							zval	zval *	op2
ANR	395667	DeclStmt									
ANR	395668	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395669	DeclStmt									
ANR	395670	Decl							zval	zval *	op1
ANR	395671	Decl							zval	zval *	op2
ANR	395672	DeclStmt									
ANR	395673	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395674	DeclStmt									
ANR	395675	Decl							zval	zval *	op1
ANR	395676	Decl							zval	zval *	op2
ANR	395677	DeclStmt									
ANR	395678	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395679	DeclStmt									
ANR	395680	Decl							zval	zval *	op1
ANR	395681	Decl							zval	zval *	op2
ANR	395682	DeclStmt									
ANR	395683	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	395684	DeclStmt									
ANR	395685	Decl							zval	zval *	op1
ANR	395686	Decl							zval	zval *	op2
ANR	395687	Function	zend_binary_assign_op_obj_helper_SPEC_CV_TMPVAR	38290:0:1209317:1211565							
ANR	395688	FunctionDef	zend_binary_assign_op_obj_helper_SPEC_CV_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		395687	0					
ANR	395689	CompoundStatement		38291:0:1209464:1211565	395687	0					
ANR	395690	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op2 , free_op_data1 ;"	38292:1:1209467:1209515	395687	0	True				
ANR	395691	IdentifierDecl	free_op2		395687	0					
ANR	395692	IdentifierDeclType	USE_OPLINE zend_free_op		395687	0					
ANR	395693	Identifier	free_op2		395687	1					
ANR	395694	IdentifierDecl	free_op_data1		395687	1					
ANR	395695	IdentifierDeclType	USE_OPLINE zend_free_op		395687	0					
ANR	395696	Identifier	free_op_data1		395687	1					
ANR	395697	IdentifierDeclStatement	zval * object ;	38294:1:1209518:1209530	395687	1	True				
ANR	395698	IdentifierDecl	* object		395687	0					
ANR	395699	IdentifierDeclType	zval *		395687	0					
ANR	395700	Identifier	object		395687	1					
ANR	395701	IdentifierDeclStatement	zval * property ;	38295:1:1209533:1209547	395687	2	True				
ANR	395702	IdentifierDecl	* property		395687	0					
ANR	395703	IdentifierDeclType	zval *		395687	0					
ANR	395704	Identifier	property		395687	1					
ANR	395705	IdentifierDeclStatement	zval * value ;	38296:1:1209550:1209561	395687	3	True				
ANR	395706	IdentifierDecl	* value		395687	0					
ANR	395707	IdentifierDeclType	zval *		395687	0					
ANR	395708	Identifier	value		395687	1					
ANR	395709	IdentifierDeclStatement	zval * zptr ;	38297:1:1209564:1209574	395687	4	True				
ANR	395710	IdentifierDecl	* zptr		395687	0					
ANR	395711	IdentifierDeclType	zval *		395687	0					
ANR	395712	Identifier	zptr		395687	1					
ANR	395713	ExpressionStatement	SAVE_OPLINE ( )	38299:1:1209578:1209591	395687	5	True				
ANR	395714	CallExpression	SAVE_OPLINE ( )		395687	0					
ANR	395715	Callee	SAVE_OPLINE		395687	0					
ANR	395716	Identifier	SAVE_OPLINE		395687	0					
ANR	395717	ArgumentList			395687	1					
ANR	395718	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	38300:1:1209594:1209660	395687	6	True				
ANR	395719	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		395687	0		=			
ANR	395720	Identifier	object		395687	0					
ANR	395721	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		395687	1					
ANR	395722	Callee	_get_zval_ptr_cv_BP_VAR_RW		395687	0					
ANR	395723	Identifier	_get_zval_ptr_cv_BP_VAR_RW		395687	0					
ANR	395724	ArgumentList	execute_data		395687	1					
ANR	395725	Argument	execute_data		395687	0					
ANR	395726	Identifier	execute_data		395687	0					
ANR	395727	Argument	opline -> op1 . var		395687	1					
ANR	395728	MemberAccess	opline -> op1 . var		395687	0					
ANR	395729	PtrMemberAccess	opline -> op1		395687	0					
ANR	395730	Identifier	opline		395687	0					
ANR	395731	Identifier	op1		395687	1					
ANR	395732	Identifier	var		395687	1					
ANR	395733	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		395687	7					
ANR	395734	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	38302:5:1209668:1209724	395687	0	True				
ANR	395735	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		395687	0		&&			
ANR	395736	EqualityExpression	IS_CV == IS_UNUSED		395687	0		==			
ANR	395737	Identifier	IS_CV		395687	0					
ANR	395738	Identifier	IS_UNUSED		395687	1					
ANR	395739	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		395687	1					
ANR	395740	Callee	UNEXPECTED		395687	0					
ANR	395741	Identifier	UNEXPECTED		395687	0					
ANR	395742	ArgumentList	Z_OBJ_P ( object ) == NULL		395687	1					
ANR	395743	Argument	Z_OBJ_P ( object ) == NULL		395687	0					
ANR	395744	EqualityExpression	Z_OBJ_P ( object ) == NULL		395687	0		==			
ANR	395745	CallExpression	Z_OBJ_P ( object )		395687	0					
ANR	395746	Callee	Z_OBJ_P		395687	0					
ANR	395747	Identifier	Z_OBJ_P		395687	0					
ANR	395748	ArgumentList	object		395687	1					
ANR	395749	Argument	object		395687	0					
ANR	395750	Identifier	object		395687	0					
ANR	395751	Identifier	NULL		395687	1					
ANR	395752	CompoundStatement		12:64:262:262	395687	1					
ANR	395753	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	38303:2:1209731:1209795	395687	0	True				
ANR	395754	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		395687	0					
ANR	395755	Callee	zend_throw_error		395687	0					
ANR	395756	Identifier	zend_throw_error		395687	0					
ANR	395757	ArgumentList	NULL		395687	1					
ANR	395758	Argument	NULL		395687	0					
ANR	395759	Identifier	NULL		395687	0					
ANR	395760	Argument	"""Using $this when not in object context"""		395687	1					
ANR	395761	PrimaryExpression	"""Using $this when not in object context"""		395687	0					
ANR	395762	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	38304:2:1209799:1209859	395687	1	True				
ANR	395763	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		395687	0					
ANR	395764	Callee	FREE_UNFETCHED_OP		395687	0					
ANR	395765	Identifier	FREE_UNFETCHED_OP		395687	0					
ANR	395766	ArgumentList	( opline + 1 ) -> op1_type		395687	1					
ANR	395767	Argument	( opline + 1 ) -> op1_type		395687	0					
ANR	395768	PtrMemberAccess	( opline + 1 ) -> op1_type		395687	0					
ANR	395769	AdditiveExpression	opline + 1		395687	0		+			
ANR	395770	Identifier	opline		395687	0					
ANR	395771	PrimaryExpression	1		395687	1					
ANR	395772	Identifier	op1_type		395687	1					
ANR	395773	Argument	( opline + 1 ) -> op1 . var		395687	1					
ANR	395774	MemberAccess	( opline + 1 ) -> op1 . var		395687	0					
ANR	395775	PtrMemberAccess	( opline + 1 ) -> op1		395687	0					
ANR	395776	AdditiveExpression	opline + 1		395687	0		+			
ANR	395777	Identifier	opline		395687	0					
ANR	395778	PrimaryExpression	1		395687	1					
ANR	395779	Identifier	op1		395687	1					
ANR	395780	Identifier	var		395687	1					
ANR	395781	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	38305:2:1209863:1209906	395687	2	True				
ANR	395782	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		395687	0					
ANR	395783	Callee	zval_ptr_dtor_nogc		395687	0					
ANR	395784	Identifier	zval_ptr_dtor_nogc		395687	0					
ANR	395785	ArgumentList	EX_VAR ( opline -> op2 . var )		395687	1					
ANR	395786	Argument	EX_VAR ( opline -> op2 . var )		395687	0					
ANR	395787	CallExpression	EX_VAR ( opline -> op2 . var )		395687	0					
ANR	395788	Callee	EX_VAR		395687	0					
ANR	395789	Identifier	EX_VAR		395687	0					
ANR	395790	ArgumentList	opline -> op2 . var		395687	1					
ANR	395791	Argument	opline -> op2 . var		395687	0					
ANR	395792	MemberAccess	opline -> op2 . var		395687	0					
ANR	395793	PtrMemberAccess	opline -> op2		395687	0					
ANR	395794	Identifier	opline		395687	0					
ANR	395795	Identifier	op2		395687	1					
ANR	395796	Identifier	var		395687	1					
ANR	395797	ExpressionStatement	HANDLE_EXCEPTION ( )	38306:2:1209910:1209928	395687	3	True				
ANR	395798	CallExpression	HANDLE_EXCEPTION ( )		395687	0					
ANR	395799	Callee	HANDLE_EXCEPTION		395687	0					
ANR	395800	Identifier	HANDLE_EXCEPTION		395687	0					
ANR	395801	ArgumentList			395687	1					
ANR	395802	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	38309:1:1209935:1210005	395687	8	True				
ANR	395803	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		395687	0		=			
ANR	395804	Identifier	property		395687	0					
ANR	395805	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		395687	1					
ANR	395806	Callee	_get_zval_ptr_var		395687	0					
ANR	395807	Identifier	_get_zval_ptr_var		395687	0					
ANR	395808	ArgumentList	opline -> op2 . var		395687	1					
ANR	395809	Argument	opline -> op2 . var		395687	0					
ANR	395810	MemberAccess	opline -> op2 . var		395687	0					
ANR	395811	PtrMemberAccess	opline -> op2		395687	0					
ANR	395812	Identifier	opline		395687	0					
ANR	395813	Identifier	op2		395687	1					
ANR	395814	Identifier	var		395687	1					
ANR	395815	Argument	execute_data		395687	1					
ANR	395816	Identifier	execute_data		395687	0					
ANR	395817	Argument	& free_op2		395687	2					
ANR	395818	UnaryOperationExpression	& free_op2		395687	0					
ANR	395819	UnaryOperator	&		395687	0					
ANR	395820	Identifier	free_op2		395687	1					
ANR	395821	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		395687	9					
ANR	395822	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	38311:5:1210013:1210057	395687	0	True				
ANR	395823	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		395687	0		&&			
ANR	395824	EqualityExpression	IS_CV == IS_VAR		395687	0		==			
ANR	395825	Identifier	IS_CV		395687	0					
ANR	395826	Identifier	IS_VAR		395687	1					
ANR	395827	CallExpression	UNEXPECTED ( object == NULL )		395687	1					
ANR	395828	Callee	UNEXPECTED		395687	0					
ANR	395829	Identifier	UNEXPECTED		395687	0					
ANR	395830	ArgumentList	object == NULL		395687	1					
ANR	395831	Argument	object == NULL		395687	0					
ANR	395832	EqualityExpression	object == NULL		395687	0		==			
ANR	395833	Identifier	object		395687	0					
ANR	395834	Identifier	NULL		395687	1					
ANR	395835	CompoundStatement		21:52:595:595	395687	1					
ANR	395836	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"	38312:2:1210064:1210127	395687	0	True				
ANR	395837	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an object"" )"		395687	0					
ANR	395838	Callee	zend_throw_error		395687	0					
ANR	395839	Identifier	zend_throw_error		395687	0					
ANR	395840	ArgumentList	NULL		395687	1					
ANR	395841	Argument	NULL		395687	0					
ANR	395842	Identifier	NULL		395687	0					
ANR	395843	Argument	"""Cannot use string offset as an object"""		395687	1					
ANR	395844	PrimaryExpression	"""Cannot use string offset as an object"""		395687	0					
ANR	395845	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	38313:2:1210131:1210191	395687	1	True				
ANR	395846	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		395687	0					
ANR	395847	Callee	FREE_UNFETCHED_OP		395687	0					
ANR	395848	Identifier	FREE_UNFETCHED_OP		395687	0					
ANR	395849	ArgumentList	( opline + 1 ) -> op1_type		395687	1					
ANR	395850	Argument	( opline + 1 ) -> op1_type		395687	0					
ANR	395851	PtrMemberAccess	( opline + 1 ) -> op1_type		395687	0					
ANR	395852	AdditiveExpression	opline + 1		395687	0		+			
ANR	395853	Identifier	opline		395687	0					
ANR	395854	PrimaryExpression	1		395687	1					
ANR	395855	Identifier	op1_type		395687	1					
ANR	395856	Argument	( opline + 1 ) -> op1 . var		395687	1					
ANR	395857	MemberAccess	( opline + 1 ) -> op1 . var		395687	0					
ANR	395858	PtrMemberAccess	( opline + 1 ) -> op1		395687	0					
ANR	395859	AdditiveExpression	opline + 1		395687	0		+			
ANR	395860	Identifier	opline		395687	0					
ANR	395861	PrimaryExpression	1		395687	1					
ANR	395862	Identifier	op1		395687	1					
ANR	395863	Identifier	var		395687	1					
ANR	395864	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38314:2:1210195:1210223	395687	2	True				
ANR	395865	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		395687	0					
ANR	395866	Callee	zval_ptr_dtor_nogc		395687	0					
ANR	395867	Identifier	zval_ptr_dtor_nogc		395687	0					
ANR	395868	ArgumentList	free_op2		395687	1					
ANR	395869	Argument	free_op2		395687	0					
ANR	395870	Identifier	free_op2		395687	0					
ANR	395871	ExpressionStatement	HANDLE_EXCEPTION ( )	38315:2:1210227:1210245	395687	3	True				
ANR	395872	CallExpression	HANDLE_EXCEPTION ( )		395687	0					
ANR	395873	Callee	HANDLE_EXCEPTION		395687	0					
ANR	395874	Identifier	HANDLE_EXCEPTION		395687	0					
ANR	395875	ArgumentList			395687	1					
ANR	395876	DoStatement	do		395687	10					
ANR	395877	CompoundStatement		28:4:790:790	395687	0					
ANR	395878	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	38319:2:1210259:1210350	395687	0	True				
ANR	395879	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		395687	0		=			
ANR	395880	Identifier	value		395687	0					
ANR	395881	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		395687	1					
ANR	395882	Callee	get_zval_ptr_r		395687	0					
ANR	395883	Identifier	get_zval_ptr_r		395687	0					
ANR	395884	ArgumentList	( opline + 1 ) -> op1_type		395687	1					
ANR	395885	Argument	( opline + 1 ) -> op1_type		395687	0					
ANR	395886	PtrMemberAccess	( opline + 1 ) -> op1_type		395687	0					
ANR	395887	AdditiveExpression	opline + 1		395687	0		+			
ANR	395888	Identifier	opline		395687	0					
ANR	395889	PrimaryExpression	1		395687	1					
ANR	395890	Identifier	op1_type		395687	1					
ANR	395891	Argument	( opline + 1 ) -> op1		395687	1					
ANR	395892	PtrMemberAccess	( opline + 1 ) -> op1		395687	0					
ANR	395893	AdditiveExpression	opline + 1		395687	0		+			
ANR	395894	Identifier	opline		395687	0					
ANR	395895	PrimaryExpression	1		395687	1					
ANR	395896	Identifier	op1		395687	1					
ANR	395897	Argument	execute_data		395687	2					
ANR	395898	Identifier	execute_data		395687	0					
ANR	395899	Argument	& free_op_data1		395687	3					
ANR	395900	UnaryOperationExpression	& free_op_data1		395687	0					
ANR	395901	UnaryOperator	&		395687	0					
ANR	395902	Identifier	free_op_data1		395687	1					
ANR	395903	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		395687	1					
ANR	395904	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	38321:6:1210359:1210421	395687	0	True				
ANR	395905	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		395687	0		&&			
ANR	395906	EqualityExpression	IS_CV != IS_UNUSED		395687	0		!=			
ANR	395907	Identifier	IS_CV		395687	0					
ANR	395908	Identifier	IS_UNUSED		395687	1					
ANR	395909	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		395687	1					
ANR	395910	Callee	UNEXPECTED		395687	0					
ANR	395911	Identifier	UNEXPECTED		395687	0					
ANR	395912	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		395687	1					
ANR	395913	Argument	Z_TYPE_P ( object ) != IS_OBJECT		395687	0					
ANR	395914	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		395687	0		!=			
ANR	395915	CallExpression	Z_TYPE_P ( object )		395687	0					
ANR	395916	Callee	Z_TYPE_P		395687	0					
ANR	395917	Identifier	Z_TYPE_P		395687	0					
ANR	395918	ArgumentList	object		395687	1					
ANR	395919	Argument	object		395687	0					
ANR	395920	Identifier	object		395687	0					
ANR	395921	Identifier	IS_OBJECT		395687	1					
ANR	395922	CompoundStatement		31:71:959:959	395687	1					
ANR	395923	ExpressionStatement	ZVAL_DEREF ( object )	38322:3:1210429:1210447	395687	0	True				
ANR	395924	CallExpression	ZVAL_DEREF ( object )		395687	0					
ANR	395925	Callee	ZVAL_DEREF		395687	0					
ANR	395926	Identifier	ZVAL_DEREF		395687	0					
ANR	395927	ArgumentList	object		395687	1					
ANR	395928	Argument	object		395687	0					
ANR	395929	Identifier	object		395687	0					
ANR	395930	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		395687	1					
ANR	395931	Condition	UNEXPECTED ( ! make_real_object ( object ) )	38323:7:1210456:1210492	395687	0	True				
ANR	395932	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		395687	0					
ANR	395933	Callee	UNEXPECTED		395687	0					
ANR	395934	Identifier	UNEXPECTED		395687	0					
ANR	395935	ArgumentList	! make_real_object ( object )		395687	1					
ANR	395936	Argument	! make_real_object ( object )		395687	0					
ANR	395937	UnaryOperationExpression	! make_real_object ( object )		395687	0					
ANR	395938	UnaryOperator	!		395687	0					
ANR	395939	CallExpression	make_real_object ( object )		395687	1					
ANR	395940	Callee	make_real_object		395687	0					
ANR	395941	Identifier	make_real_object		395687	0					
ANR	395942	ArgumentList	object		395687	1					
ANR	395943	Argument	object		395687	0					
ANR	395944	Identifier	object		395687	0					
ANR	395945	CompoundStatement		33:46:1030:1030	395687	1					
ANR	395946	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	38324:4:1210501:1210566	395687	0	True				
ANR	395947	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		395687	0					
ANR	395948	Callee	zend_error		395687	0					
ANR	395949	Identifier	zend_error		395687	0					
ANR	395950	ArgumentList	E_WARNING		395687	1					
ANR	395951	Argument	E_WARNING		395687	0					
ANR	395952	Identifier	E_WARNING		395687	0					
ANR	395953	Argument	"""Attempt to assign property of non-object"""		395687	1					
ANR	395954	PrimaryExpression	"""Attempt to assign property of non-object"""		395687	0					
ANR	395955	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		395687	1					
ANR	395956	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38325:8:1210576:1210612	395687	0	True				
ANR	395957	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		395687	0					
ANR	395958	Callee	UNEXPECTED		395687	0					
ANR	395959	Identifier	UNEXPECTED		395687	0					
ANR	395960	ArgumentList	RETURN_VALUE_USED ( opline )		395687	1					
ANR	395961	Argument	RETURN_VALUE_USED ( opline )		395687	0					
ANR	395962	CallExpression	RETURN_VALUE_USED ( opline )		395687	0					
ANR	395963	Callee	RETURN_VALUE_USED		395687	0					
ANR	395964	Identifier	RETURN_VALUE_USED		395687	0					
ANR	395965	ArgumentList	opline		395687	1					
ANR	395966	Argument	opline		395687	0					
ANR	395967	Identifier	opline		395687	0					
ANR	395968	CompoundStatement		35:47:1150:1150	395687	1					
ANR	395969	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	38326:5:1210622:1210659	395687	0	True				
ANR	395970	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		395687	0					
ANR	395971	Callee	ZVAL_NULL		395687	0					
ANR	395972	Identifier	ZVAL_NULL		395687	0					
ANR	395973	ArgumentList	EX_VAR ( opline -> result . var )		395687	1					
ANR	395974	Argument	EX_VAR ( opline -> result . var )		395687	0					
ANR	395975	CallExpression	EX_VAR ( opline -> result . var )		395687	0					
ANR	395976	Callee	EX_VAR		395687	0					
ANR	395977	Identifier	EX_VAR		395687	0					
ANR	395978	ArgumentList	opline -> result . var		395687	1					
ANR	395979	Argument	opline -> result . var		395687	0					
ANR	395980	MemberAccess	opline -> result . var		395687	0					
ANR	395981	PtrMemberAccess	opline -> result		395687	0					
ANR	395982	Identifier	opline		395687	0					
ANR	395983	Identifier	result		395687	1					
ANR	395984	Identifier	var		395687	1					
ANR	395985	BreakStatement	break ;	38328:4:1210671:1210676	395687	2	True				
ANR	395986	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		395687	2					
ANR	395987	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	38333:6:1210749:1210984	395687	0	True				
ANR	395988	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		395687	0		&&			
ANR	395989	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		395687	0					
ANR	395990	Callee	EXPECTED		395687	0					
ANR	395991	Identifier	EXPECTED		395687	0					
ANR	395992	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		395687	1					
ANR	395993	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		395687	0					
ANR	395994	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		395687	0					
ANR	395995	CallExpression	Z_OBJ_HT_P ( object )		395687	0					
ANR	395996	Callee	Z_OBJ_HT_P		395687	0					
ANR	395997	Identifier	Z_OBJ_HT_P		395687	0					
ANR	395998	ArgumentList	object		395687	1					
ANR	395999	Argument	object		395687	0					
ANR	396000	Identifier	object		395687	0					
ANR	396001	Identifier	get_property_ptr_ptr		395687	1					
ANR	396002	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		395687	1					
ANR	396003	Callee	EXPECTED		395687	0					
ANR	396004	Identifier	EXPECTED		395687	0					
ANR	396005	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		395687	1					
ANR	396006	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		395687	0					
ANR	396007	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		395687	0		!=			
ANR	396008	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		395687	0		=			
ANR	396009	Identifier	zptr		395687	0					
ANR	396010	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		395687	1					
ANR	396011	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		395687	0					
ANR	396012	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		395687	0					
ANR	396013	CallExpression	Z_OBJ_HT_P ( object )		395687	0					
ANR	396014	Callee	Z_OBJ_HT_P		395687	0					
ANR	396015	Identifier	Z_OBJ_HT_P		395687	0					
ANR	396016	ArgumentList	object		395687	1					
ANR	396017	Argument	object		395687	0					
ANR	396018	Identifier	object		395687	0					
ANR	396019	Identifier	get_property_ptr_ptr		395687	1					
ANR	396020	ArgumentList	object		395687	1					
ANR	396021	Argument	object		395687	0					
ANR	396022	Identifier	object		395687	0					
ANR	396023	Argument	property		395687	1					
ANR	396024	Identifier	property		395687	0					
ANR	396025	Argument	BP_VAR_RW		395687	2					
ANR	396026	Identifier	BP_VAR_RW		395687	0					
ANR	396027	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		395687	3					
ANR	396028	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		395687	0					
ANR	396029	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		395687	0					
ANR	396030	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		395687	0		==			
ANR	396031	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		395687	0		|			
ANR	396032	Identifier	IS_TMP_VAR		395687	0					
ANR	396033	Identifier	IS_VAR		395687	1					
ANR	396034	Identifier	IS_CONST		395687	1					
ANR	396035	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		395687	1					
ANR	396036	Callee	CACHE_ADDR		395687	0					
ANR	396037	Identifier	CACHE_ADDR		395687	0					
ANR	396038	ArgumentList	Z_CACHE_SLOT_P ( property )		395687	1					
ANR	396039	Argument	Z_CACHE_SLOT_P ( property )		395687	0					
ANR	396040	CallExpression	Z_CACHE_SLOT_P ( property )		395687	0					
ANR	396041	Callee	Z_CACHE_SLOT_P		395687	0					
ANR	396042	Identifier	Z_CACHE_SLOT_P		395687	0					
ANR	396043	ArgumentList	property		395687	1					
ANR	396044	Argument	property		395687	0					
ANR	396045	Identifier	property		395687	0					
ANR	396046	Identifier	NULL		395687	2					
ANR	396047	Identifier	NULL		395687	1					
ANR	396048	CompoundStatement		44:187:1522:1522	395687	1					
ANR	396049	ExpressionStatement	ZVAL_DEREF ( zptr )	38336:3:1210993:1211009	395687	0	True				
ANR	396050	CallExpression	ZVAL_DEREF ( zptr )		395687	0					
ANR	396051	Callee	ZVAL_DEREF		395687	0					
ANR	396052	Identifier	ZVAL_DEREF		395687	0					
ANR	396053	ArgumentList	zptr		395687	1					
ANR	396054	Argument	zptr		395687	0					
ANR	396055	Identifier	zptr		395687	0					
ANR	396056	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	38337:3:1211014:1211039	395687	1	True				
ANR	396057	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		395687	0					
ANR	396058	Callee	SEPARATE_ZVAL_NOREF		395687	0					
ANR	396059	Identifier	SEPARATE_ZVAL_NOREF		395687	0					
ANR	396060	ArgumentList	zptr		395687	1					
ANR	396061	Argument	zptr		395687	0					
ANR	396062	Identifier	zptr		395687	0					
ANR	396063	ExpressionStatement	"binary_op ( zptr , zptr , value )"	38339:3:1211045:1211073	395687	2	True				
ANR	396064	CallExpression	"binary_op ( zptr , zptr , value )"		395687	0					
ANR	396065	Callee	binary_op		395687	0					
ANR	396066	Identifier	binary_op		395687	0					
ANR	396067	ArgumentList	zptr		395687	1					
ANR	396068	Argument	zptr		395687	0					
ANR	396069	Identifier	zptr		395687	0					
ANR	396070	Argument	zptr		395687	1					
ANR	396071	Identifier	zptr		395687	0					
ANR	396072	Argument	value		395687	2					
ANR	396073	Identifier	value		395687	0					
ANR	396074	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		395687	3					
ANR	396075	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38340:7:1211082:1211118	395687	0	True				
ANR	396076	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		395687	0					
ANR	396077	Callee	UNEXPECTED		395687	0					
ANR	396078	Identifier	UNEXPECTED		395687	0					
ANR	396079	ArgumentList	RETURN_VALUE_USED ( opline )		395687	1					
ANR	396080	Argument	RETURN_VALUE_USED ( opline )		395687	0					
ANR	396081	CallExpression	RETURN_VALUE_USED ( opline )		395687	0					
ANR	396082	Callee	RETURN_VALUE_USED		395687	0					
ANR	396083	Identifier	RETURN_VALUE_USED		395687	0					
ANR	396084	ArgumentList	opline		395687	1					
ANR	396085	Argument	opline		395687	0					
ANR	396086	Identifier	opline		395687	0					
ANR	396087	CompoundStatement		50:46:1656:1656	395687	1					
ANR	396088	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	38341:4:1211127:1211170	395687	0	True				
ANR	396089	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		395687	0					
ANR	396090	Callee	ZVAL_COPY		395687	0					
ANR	396091	Identifier	ZVAL_COPY		395687	0					
ANR	396092	ArgumentList	EX_VAR ( opline -> result . var )		395687	1					
ANR	396093	Argument	EX_VAR ( opline -> result . var )		395687	0					
ANR	396094	CallExpression	EX_VAR ( opline -> result . var )		395687	0					
ANR	396095	Callee	EX_VAR		395687	0					
ANR	396096	Identifier	EX_VAR		395687	0					
ANR	396097	ArgumentList	opline -> result . var		395687	1					
ANR	396098	Argument	opline -> result . var		395687	0					
ANR	396099	MemberAccess	opline -> result . var		395687	0					
ANR	396100	PtrMemberAccess	opline -> result		395687	0					
ANR	396101	Identifier	opline		395687	0					
ANR	396102	Identifier	result		395687	1					
ANR	396103	Identifier	var		395687	1					
ANR	396104	Argument	zptr		395687	1					
ANR	396105	Identifier	zptr		395687	0					
ANR	396106	ElseStatement	else		395687	0					
ANR	396107	CompoundStatement		53:9:1721:1721	395687	0					
ANR	396108	ExpressionStatement	"zend_assign_op_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	38344:3:1211191:1211421	395687	0	True				
ANR	396109	CallExpression	"zend_assign_op_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , value , binary_op , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		395687	0					
ANR	396110	Callee	zend_assign_op_overloaded_property		395687	0					
ANR	396111	Identifier	zend_assign_op_overloaded_property		395687	0					
ANR	396112	ArgumentList	object		395687	1					
ANR	396113	Argument	object		395687	0					
ANR	396114	Identifier	object		395687	0					
ANR	396115	Argument	property		395687	1					
ANR	396116	Identifier	property		395687	0					
ANR	396117	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		395687	2					
ANR	396118	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		395687	0					
ANR	396119	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		395687	0					
ANR	396120	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		395687	0		==			
ANR	396121	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		395687	0		|			
ANR	396122	Identifier	IS_TMP_VAR		395687	0					
ANR	396123	Identifier	IS_VAR		395687	1					
ANR	396124	Identifier	IS_CONST		395687	1					
ANR	396125	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		395687	1					
ANR	396126	Callee	CACHE_ADDR		395687	0					
ANR	396127	Identifier	CACHE_ADDR		395687	0					
ANR	396128	ArgumentList	Z_CACHE_SLOT_P ( property )		395687	1					
ANR	396129	Argument	Z_CACHE_SLOT_P ( property )		395687	0					
ANR	396130	CallExpression	Z_CACHE_SLOT_P ( property )		395687	0					
ANR	396131	Callee	Z_CACHE_SLOT_P		395687	0					
ANR	396132	Identifier	Z_CACHE_SLOT_P		395687	0					
ANR	396133	ArgumentList	property		395687	1					
ANR	396134	Argument	property		395687	0					
ANR	396135	Identifier	property		395687	0					
ANR	396136	Identifier	NULL		395687	2					
ANR	396137	Argument	value		395687	3					
ANR	396138	Identifier	value		395687	0					
ANR	396139	Argument	binary_op		395687	4					
ANR	396140	Identifier	binary_op		395687	0					
ANR	396141	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		395687	5					
ANR	396142	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		395687	0					
ANR	396143	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		395687	0					
ANR	396144	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		395687	0					
ANR	396145	Callee	UNEXPECTED		395687	0					
ANR	396146	Identifier	UNEXPECTED		395687	0					
ANR	396147	ArgumentList	RETURN_VALUE_USED ( opline )		395687	1					
ANR	396148	Argument	RETURN_VALUE_USED ( opline )		395687	0					
ANR	396149	CallExpression	RETURN_VALUE_USED ( opline )		395687	0					
ANR	396150	Callee	RETURN_VALUE_USED		395687	0					
ANR	396151	Identifier	RETURN_VALUE_USED		395687	0					
ANR	396152	ArgumentList	opline		395687	1					
ANR	396153	Argument	opline		395687	0					
ANR	396154	Identifier	opline		395687	0					
ANR	396155	CallExpression	EX_VAR ( opline -> result . var )		395687	1					
ANR	396156	Callee	EX_VAR		395687	0					
ANR	396157	Identifier	EX_VAR		395687	0					
ANR	396158	ArgumentList	opline -> result . var		395687	1					
ANR	396159	Argument	opline -> result . var		395687	0					
ANR	396160	MemberAccess	opline -> result . var		395687	0					
ANR	396161	PtrMemberAccess	opline -> result		395687	0					
ANR	396162	Identifier	opline		395687	0					
ANR	396163	Identifier	result		395687	1					
ANR	396164	Identifier	var		395687	1					
ANR	396165	Identifier	NULL		395687	2					
ANR	396166	Condition	0	38346:10:1211437:1211437	395687	1	True				
ANR	396167	PrimaryExpression	0		395687	0					
ANR	396168	ExpressionStatement	FREE_OP ( free_op_data1 )	38348:1:1211443:1211465	395687	11	True				
ANR	396169	CallExpression	FREE_OP ( free_op_data1 )		395687	0					
ANR	396170	Callee	FREE_OP		395687	0					
ANR	396171	Identifier	FREE_OP		395687	0					
ANR	396172	ArgumentList	free_op_data1		395687	1					
ANR	396173	Argument	free_op_data1		395687	0					
ANR	396174	Identifier	free_op_data1		395687	0					
ANR	396175	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38349:1:1211468:1211496	395687	12	True				
ANR	396176	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		395687	0					
ANR	396177	Callee	zval_ptr_dtor_nogc		395687	0					
ANR	396178	Identifier	zval_ptr_dtor_nogc		395687	0					
ANR	396179	ArgumentList	free_op2		395687	1					
ANR	396180	Argument	free_op2		395687	0					
ANR	396181	Identifier	free_op2		395687	0					
ANR	396182	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	38352:1:1211535:1211563	395687	13	True				
ANR	396183	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		395687	0					
ANR	396184	Callee	ZEND_VM_NEXT_OPCODE_EX		395687	0					
ANR	396185	Identifier	ZEND_VM_NEXT_OPCODE_EX		395687	0					
ANR	396186	ArgumentList	1		395687	1					
ANR	396187	Argument	1		395687	0					
ANR	396188	PrimaryExpression	1		395687	0					
ANR	396189	Argument	2		395687	1					
ANR	396190	PrimaryExpression	2		395687	0					
ANR	396191	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		395687	1					
ANR	396192	Identifier	zend_binary_assign_op_obj_helper_SPEC_CV_TMPVAR		395687	2					
ANR	396193	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		395687	3					
ANR	396194	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	38290:93:1209410:1209461	395687	0	True				
ANR	396195	ParameterType	binary_op_type binary_op		395687	0					
ANR	396196	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		395687	1					
ANR	396197	CFGEntryNode	ENTRY		395687		True				
ANR	396198	CFGExitNode	EXIT		395687		True				
ANR	396199	Symbol	opline -> op1		395687						
ANR	396200	Symbol	opline -> op2		395687						
ANR	396201	Symbol	opline -> op2 . var		395687						
ANR	396202	Symbol	IS_CV		395687						
ANR	396203	Symbol	Z_OBJ_P		395687						
ANR	396204	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		395687						
ANR	396205	Symbol	free_op_data1		395687						
ANR	396206	Symbol	free_op2		395687						
ANR	396207	Symbol	zptr		395687						
ANR	396208	Symbol	execute_data		395687						
ANR	396209	Symbol	opline -> result		395687						
ANR	396210	Symbol	( opline + 1 ) -> op1		395687						
ANR	396211	Symbol	UNEXPECTED		395687						
ANR	396212	Symbol	& free_op2		395687						
ANR	396213	Symbol	E_WARNING		395687						
ANR	396214	Symbol	make_real_object		395687						
ANR	396215	Symbol	RETURN_VALUE_USED		395687						
ANR	396216	Symbol	( opline + 1 ) -> op1 . var		395687						
ANR	396217	Symbol	opline		395687						
ANR	396218	Symbol	get_zval_ptr_r		395687						
ANR	396219	Symbol	property		395687						
ANR	396220	Symbol	opline -> op1 . var		395687						
ANR	396221	Symbol	value		395687						
ANR	396222	Symbol	IS_TMP_VAR		395687						
ANR	396223	Symbol	binary_op		395687						
ANR	396224	Symbol	BP_VAR_RW		395687						
ANR	396225	Symbol	( opline + 1 ) -> op1_type		395687						
ANR	396226	Symbol	IS_CONST		395687						
ANR	396227	Symbol	NULL		395687						
ANR	396228	Symbol	Z_CACHE_SLOT_P		395687						
ANR	396229	Symbol	Z_TYPE_P		395687						
ANR	396230	Symbol	* Z_OBJ_HT_P		395687						
ANR	396231	Symbol	CACHE_ADDR		395687						
ANR	396232	Symbol	* opline		395687						
ANR	396233	Symbol	_get_zval_ptr_var		395687						
ANR	396234	Symbol	Z_OBJ_HT_P		395687						
ANR	396235	Symbol	_get_zval_ptr_cv_BP_VAR_RW		395687						
ANR	396236	Symbol	EX_VAR		395687						
ANR	396237	Symbol	IS_OBJECT		395687						
ANR	396238	Symbol	IS_VAR		395687						
ANR	396239	Symbol	EXPECTED		395687						
ANR	396240	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		395687						
ANR	396241	Symbol	& free_op_data1		395687						
ANR	396242	Symbol	opline -> result . var		395687						
ANR	396243	Symbol	object		395687						
ANR	396244	Symbol	IS_UNUSED		395687						
ANR	396245	Function	zend_binary_assign_op_dim_helper_SPEC_CV_TMPVAR	38355:0:1211568:1213928							
ANR	396246	FunctionDef	zend_binary_assign_op_dim_helper_SPEC_CV_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		396245	0					
ANR	396247	CompoundStatement		38356:0:1211715:1213928	396245	0					
ANR	396248	IdentifierDeclStatement	"USE_OPLINE zend_free_op free_op2 , free_op_data1 ;"	38357:1:1211718:1211766	396245	0	True				
ANR	396249	IdentifierDecl	free_op2		396245	0					
ANR	396250	IdentifierDeclType	USE_OPLINE zend_free_op		396245	0					
ANR	396251	Identifier	free_op2		396245	1					
ANR	396252	IdentifierDecl	free_op_data1		396245	1					
ANR	396253	IdentifierDeclType	USE_OPLINE zend_free_op		396245	0					
ANR	396254	Identifier	free_op_data1		396245	1					
ANR	396255	IdentifierDeclStatement	"zval * var_ptr , rv ;"	38359:1:1211769:1211786	396245	1	True				
ANR	396256	IdentifierDecl	* var_ptr		396245	0					
ANR	396257	IdentifierDeclType	zval *		396245	0					
ANR	396258	Identifier	var_ptr		396245	1					
ANR	396259	IdentifierDecl	rv		396245	1					
ANR	396260	IdentifierDeclType	zval		396245	0					
ANR	396261	Identifier	rv		396245	1					
ANR	396262	IdentifierDeclStatement	"zval * value , * container , * dim ;"	38360:1:1211789:1211818	396245	2	True				
ANR	396263	IdentifierDecl	* value		396245	0					
ANR	396264	IdentifierDeclType	zval *		396245	0					
ANR	396265	Identifier	value		396245	1					
ANR	396266	IdentifierDecl	* container		396245	1					
ANR	396267	IdentifierDeclType	zval *		396245	0					
ANR	396268	Identifier	container		396245	1					
ANR	396269	IdentifierDecl	* dim		396245	2					
ANR	396270	IdentifierDeclType	zval *		396245	0					
ANR	396271	Identifier	dim		396245	1					
ANR	396272	ExpressionStatement	SAVE_OPLINE ( )	38362:1:1211822:1211835	396245	3	True				
ANR	396273	CallExpression	SAVE_OPLINE ( )		396245	0					
ANR	396274	Callee	SAVE_OPLINE		396245	0					
ANR	396275	Identifier	SAVE_OPLINE		396245	0					
ANR	396276	ArgumentList			396245	1					
ANR	396277	ExpressionStatement	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	38363:1:1211838:1211907	396245	4	True				
ANR	396278	AssignmentExpression	"container = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		396245	0		=			
ANR	396279	Identifier	container		396245	0					
ANR	396280	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		396245	1					
ANR	396281	Callee	_get_zval_ptr_cv_BP_VAR_RW		396245	0					
ANR	396282	Identifier	_get_zval_ptr_cv_BP_VAR_RW		396245	0					
ANR	396283	ArgumentList	execute_data		396245	1					
ANR	396284	Argument	execute_data		396245	0					
ANR	396285	Identifier	execute_data		396245	0					
ANR	396286	Argument	opline -> op1 . var		396245	1					
ANR	396287	MemberAccess	opline -> op1 . var		396245	0					
ANR	396288	PtrMemberAccess	opline -> op1		396245	0					
ANR	396289	Identifier	opline		396245	0					
ANR	396290	Identifier	op1		396245	1					
ANR	396291	Identifier	var		396245	1					
ANR	396292	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL ) )		396245	5					
ANR	396293	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )	38364:5:1211914:1211973	396245	0	True				
ANR	396294	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		396245	0		&&			
ANR	396295	EqualityExpression	IS_CV == IS_UNUSED		396245	0		==			
ANR	396296	Identifier	IS_CV		396245	0					
ANR	396297	Identifier	IS_UNUSED		396245	1					
ANR	396298	CallExpression	UNEXPECTED ( Z_OBJ_P ( container ) == NULL )		396245	1					
ANR	396299	Callee	UNEXPECTED		396245	0					
ANR	396300	Identifier	UNEXPECTED		396245	0					
ANR	396301	ArgumentList	Z_OBJ_P ( container ) == NULL		396245	1					
ANR	396302	Argument	Z_OBJ_P ( container ) == NULL		396245	0					
ANR	396303	EqualityExpression	Z_OBJ_P ( container ) == NULL		396245	0		==			
ANR	396304	CallExpression	Z_OBJ_P ( container )		396245	0					
ANR	396305	Callee	Z_OBJ_P		396245	0					
ANR	396306	Identifier	Z_OBJ_P		396245	0					
ANR	396307	ArgumentList	container		396245	1					
ANR	396308	Argument	container		396245	0					
ANR	396309	Identifier	container		396245	0					
ANR	396310	Identifier	NULL		396245	1					
ANR	396311	CompoundStatement		9:67:260:260	396245	1					
ANR	396312	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	38365:2:1211980:1212044	396245	0	True				
ANR	396313	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		396245	0					
ANR	396314	Callee	zend_throw_error		396245	0					
ANR	396315	Identifier	zend_throw_error		396245	0					
ANR	396316	ArgumentList	NULL		396245	1					
ANR	396317	Argument	NULL		396245	0					
ANR	396318	Identifier	NULL		396245	0					
ANR	396319	Argument	"""Using $this when not in object context"""		396245	1					
ANR	396320	PrimaryExpression	"""Using $this when not in object context"""		396245	0					
ANR	396321	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	38366:2:1212048:1212108	396245	1	True				
ANR	396322	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		396245	0					
ANR	396323	Callee	FREE_UNFETCHED_OP		396245	0					
ANR	396324	Identifier	FREE_UNFETCHED_OP		396245	0					
ANR	396325	ArgumentList	( opline + 1 ) -> op1_type		396245	1					
ANR	396326	Argument	( opline + 1 ) -> op1_type		396245	0					
ANR	396327	PtrMemberAccess	( opline + 1 ) -> op1_type		396245	0					
ANR	396328	AdditiveExpression	opline + 1		396245	0		+			
ANR	396329	Identifier	opline		396245	0					
ANR	396330	PrimaryExpression	1		396245	1					
ANR	396331	Identifier	op1_type		396245	1					
ANR	396332	Argument	( opline + 1 ) -> op1 . var		396245	1					
ANR	396333	MemberAccess	( opline + 1 ) -> op1 . var		396245	0					
ANR	396334	PtrMemberAccess	( opline + 1 ) -> op1		396245	0					
ANR	396335	AdditiveExpression	opline + 1		396245	0		+			
ANR	396336	Identifier	opline		396245	0					
ANR	396337	PrimaryExpression	1		396245	1					
ANR	396338	Identifier	op1		396245	1					
ANR	396339	Identifier	var		396245	1					
ANR	396340	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	38367:2:1212112:1212155	396245	2	True				
ANR	396341	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		396245	0					
ANR	396342	Callee	zval_ptr_dtor_nogc		396245	0					
ANR	396343	Identifier	zval_ptr_dtor_nogc		396245	0					
ANR	396344	ArgumentList	EX_VAR ( opline -> op2 . var )		396245	1					
ANR	396345	Argument	EX_VAR ( opline -> op2 . var )		396245	0					
ANR	396346	CallExpression	EX_VAR ( opline -> op2 . var )		396245	0					
ANR	396347	Callee	EX_VAR		396245	0					
ANR	396348	Identifier	EX_VAR		396245	0					
ANR	396349	ArgumentList	opline -> op2 . var		396245	1					
ANR	396350	Argument	opline -> op2 . var		396245	0					
ANR	396351	MemberAccess	opline -> op2 . var		396245	0					
ANR	396352	PtrMemberAccess	opline -> op2		396245	0					
ANR	396353	Identifier	opline		396245	0					
ANR	396354	Identifier	op2		396245	1					
ANR	396355	Identifier	var		396245	1					
ANR	396356	ExpressionStatement	HANDLE_EXCEPTION ( )	38368:2:1212159:1212177	396245	3	True				
ANR	396357	CallExpression	HANDLE_EXCEPTION ( )		396245	0					
ANR	396358	Callee	HANDLE_EXCEPTION		396245	0					
ANR	396359	Identifier	HANDLE_EXCEPTION		396245	0					
ANR	396360	ArgumentList			396245	1					
ANR	396361	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( container == NULL ) )		396245	6					
ANR	396362	Condition	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )	38370:5:1212187:1212234	396245	0	True				
ANR	396363	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( container == NULL )		396245	0		&&			
ANR	396364	EqualityExpression	IS_CV == IS_VAR		396245	0		==			
ANR	396365	Identifier	IS_CV		396245	0					
ANR	396366	Identifier	IS_VAR		396245	1					
ANR	396367	CallExpression	UNEXPECTED ( container == NULL )		396245	1					
ANR	396368	Callee	UNEXPECTED		396245	0					
ANR	396369	Identifier	UNEXPECTED		396245	0					
ANR	396370	ArgumentList	container == NULL		396245	1					
ANR	396371	Argument	container == NULL		396245	0					
ANR	396372	EqualityExpression	container == NULL		396245	0		==			
ANR	396373	Identifier	container		396245	0					
ANR	396374	Identifier	NULL		396245	1					
ANR	396375	CompoundStatement		15:55:521:521	396245	1					
ANR	396376	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"	38371:2:1212241:1212303	396245	0	True				
ANR	396377	CallExpression	"zend_throw_error ( NULL , ""Cannot use string offset as an array"" )"		396245	0					
ANR	396378	Callee	zend_throw_error		396245	0					
ANR	396379	Identifier	zend_throw_error		396245	0					
ANR	396380	ArgumentList	NULL		396245	1					
ANR	396381	Argument	NULL		396245	0					
ANR	396382	Identifier	NULL		396245	0					
ANR	396383	Argument	"""Cannot use string offset as an array"""		396245	1					
ANR	396384	PrimaryExpression	"""Cannot use string offset as an array"""		396245	0					
ANR	396385	ExpressionStatement	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"	38372:2:1212307:1212367	396245	1	True				
ANR	396386	CallExpression	"FREE_UNFETCHED_OP ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 . var )"		396245	0					
ANR	396387	Callee	FREE_UNFETCHED_OP		396245	0					
ANR	396388	Identifier	FREE_UNFETCHED_OP		396245	0					
ANR	396389	ArgumentList	( opline + 1 ) -> op1_type		396245	1					
ANR	396390	Argument	( opline + 1 ) -> op1_type		396245	0					
ANR	396391	PtrMemberAccess	( opline + 1 ) -> op1_type		396245	0					
ANR	396392	AdditiveExpression	opline + 1		396245	0		+			
ANR	396393	Identifier	opline		396245	0					
ANR	396394	PrimaryExpression	1		396245	1					
ANR	396395	Identifier	op1_type		396245	1					
ANR	396396	Argument	( opline + 1 ) -> op1 . var		396245	1					
ANR	396397	MemberAccess	( opline + 1 ) -> op1 . var		396245	0					
ANR	396398	PtrMemberAccess	( opline + 1 ) -> op1		396245	0					
ANR	396399	AdditiveExpression	opline + 1		396245	0		+			
ANR	396400	Identifier	opline		396245	0					
ANR	396401	PrimaryExpression	1		396245	1					
ANR	396402	Identifier	op1		396245	1					
ANR	396403	Identifier	var		396245	1					
ANR	396404	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	38373:2:1212371:1212414	396245	2	True				
ANR	396405	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		396245	0					
ANR	396406	Callee	zval_ptr_dtor_nogc		396245	0					
ANR	396407	Identifier	zval_ptr_dtor_nogc		396245	0					
ANR	396408	ArgumentList	EX_VAR ( opline -> op2 . var )		396245	1					
ANR	396409	Argument	EX_VAR ( opline -> op2 . var )		396245	0					
ANR	396410	CallExpression	EX_VAR ( opline -> op2 . var )		396245	0					
ANR	396411	Callee	EX_VAR		396245	0					
ANR	396412	Identifier	EX_VAR		396245	0					
ANR	396413	ArgumentList	opline -> op2 . var		396245	1					
ANR	396414	Argument	opline -> op2 . var		396245	0					
ANR	396415	MemberAccess	opline -> op2 . var		396245	0					
ANR	396416	PtrMemberAccess	opline -> op2		396245	0					
ANR	396417	Identifier	opline		396245	0					
ANR	396418	Identifier	op2		396245	1					
ANR	396419	Identifier	var		396245	1					
ANR	396420	ExpressionStatement	HANDLE_EXCEPTION ( )	38374:2:1212418:1212436	396245	3	True				
ANR	396421	CallExpression	HANDLE_EXCEPTION ( )		396245	0					
ANR	396422	Callee	HANDLE_EXCEPTION		396245	0					
ANR	396423	Identifier	HANDLE_EXCEPTION		396245	0					
ANR	396424	ArgumentList			396245	1					
ANR	396425	ExpressionStatement	"dim = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	38377:1:1212443:1212508	396245	7	True				
ANR	396426	AssignmentExpression	"dim = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		396245	0		=			
ANR	396427	Identifier	dim		396245	0					
ANR	396428	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		396245	1					
ANR	396429	Callee	_get_zval_ptr_var		396245	0					
ANR	396430	Identifier	_get_zval_ptr_var		396245	0					
ANR	396431	ArgumentList	opline -> op2 . var		396245	1					
ANR	396432	Argument	opline -> op2 . var		396245	0					
ANR	396433	MemberAccess	opline -> op2 . var		396245	0					
ANR	396434	PtrMemberAccess	opline -> op2		396245	0					
ANR	396435	Identifier	opline		396245	0					
ANR	396436	Identifier	op2		396245	1					
ANR	396437	Identifier	var		396245	1					
ANR	396438	Argument	execute_data		396245	1					
ANR	396439	Identifier	execute_data		396245	0					
ANR	396440	Argument	& free_op2		396245	2					
ANR	396441	UnaryOperationExpression	& free_op2		396245	0					
ANR	396442	UnaryOperator	&		396245	0					
ANR	396443	Identifier	free_op2		396245	1					
ANR	396444	DoStatement	do		396245	8					
ANR	396445	CompoundStatement		24:4:799:799	396245	0					
ANR	396446	IfStatement	if ( IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY ) )		396245	0					
ANR	396447	Condition	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )	38380:6:1212523:1212587	396245	0	True				
ANR	396448	OrExpression	IS_CV == IS_UNUSED || UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		396245	0		||			
ANR	396449	EqualityExpression	IS_CV == IS_UNUSED		396245	0		==			
ANR	396450	Identifier	IS_CV		396245	0					
ANR	396451	Identifier	IS_UNUSED		396245	1					
ANR	396452	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_ARRAY )		396245	1					
ANR	396453	Callee	UNEXPECTED		396245	0					
ANR	396454	Identifier	UNEXPECTED		396245	0					
ANR	396455	ArgumentList	Z_TYPE_P ( container ) != IS_ARRAY		396245	1					
ANR	396456	Argument	Z_TYPE_P ( container ) != IS_ARRAY		396245	0					
ANR	396457	EqualityExpression	Z_TYPE_P ( container ) != IS_ARRAY		396245	0		!=			
ANR	396458	CallExpression	Z_TYPE_P ( container )		396245	0					
ANR	396459	Callee	Z_TYPE_P		396245	0					
ANR	396460	Identifier	Z_TYPE_P		396245	0					
ANR	396461	ArgumentList	container		396245	1					
ANR	396462	Argument	container		396245	0					
ANR	396463	Identifier	container		396245	0					
ANR	396464	Identifier	IS_ARRAY		396245	1					
ANR	396465	CompoundStatement		25:73:874:874	396245	1					
ANR	396466	IfStatement	if ( IS_CV != IS_UNUSED )		396245	0					
ANR	396467	Condition	IS_CV != IS_UNUSED	38381:7:1212599:1212616	396245	0	True				
ANR	396468	EqualityExpression	IS_CV != IS_UNUSED		396245	0		!=			
ANR	396469	Identifier	IS_CV		396245	0					
ANR	396470	Identifier	IS_UNUSED		396245	1					
ANR	396471	CompoundStatement		26:27:903:903	396245	1					
ANR	396472	ExpressionStatement	ZVAL_DEREF ( container )	38382:4:1212625:1212646	396245	0	True				
ANR	396473	CallExpression	ZVAL_DEREF ( container )		396245	0					
ANR	396474	Callee	ZVAL_DEREF		396245	0					
ANR	396475	Identifier	ZVAL_DEREF		396245	0					
ANR	396476	ArgumentList	container		396245	1					
ANR	396477	Argument	container		396245	0					
ANR	396478	Identifier	container		396245	0					
ANR	396479	IfStatement	if ( IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		396245	1					
ANR	396480	Condition	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	38384:7:1212660:1212723	396245	0	True				
ANR	396481	OrExpression	IS_CV == IS_UNUSED || EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		396245	0		||			
ANR	396482	EqualityExpression	IS_CV == IS_UNUSED		396245	0		==			
ANR	396483	Identifier	IS_CV		396245	0					
ANR	396484	Identifier	IS_UNUSED		396245	1					
ANR	396485	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		396245	1					
ANR	396486	Callee	EXPECTED		396245	0					
ANR	396487	Identifier	EXPECTED		396245	0					
ANR	396488	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		396245	1					
ANR	396489	Argument	Z_TYPE_P ( container ) == IS_OBJECT		396245	0					
ANR	396490	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		396245	0		==			
ANR	396491	CallExpression	Z_TYPE_P ( container )		396245	0					
ANR	396492	Callee	Z_TYPE_P		396245	0					
ANR	396493	Identifier	Z_TYPE_P		396245	0					
ANR	396494	ArgumentList	container		396245	1					
ANR	396495	Argument	container		396245	0					
ANR	396496	Identifier	container		396245	0					
ANR	396497	Identifier	IS_OBJECT		396245	1					
ANR	396498	CompoundStatement		29:73:1010:1010	396245	1					
ANR	396499	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	38385:4:1212732:1212823	396245	0	True				
ANR	396500	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		396245	0		=			
ANR	396501	Identifier	value		396245	0					
ANR	396502	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		396245	1					
ANR	396503	Callee	get_zval_ptr_r		396245	0					
ANR	396504	Identifier	get_zval_ptr_r		396245	0					
ANR	396505	ArgumentList	( opline + 1 ) -> op1_type		396245	1					
ANR	396506	Argument	( opline + 1 ) -> op1_type		396245	0					
ANR	396507	PtrMemberAccess	( opline + 1 ) -> op1_type		396245	0					
ANR	396508	AdditiveExpression	opline + 1		396245	0		+			
ANR	396509	Identifier	opline		396245	0					
ANR	396510	PrimaryExpression	1		396245	1					
ANR	396511	Identifier	op1_type		396245	1					
ANR	396512	Argument	( opline + 1 ) -> op1		396245	1					
ANR	396513	PtrMemberAccess	( opline + 1 ) -> op1		396245	0					
ANR	396514	AdditiveExpression	opline + 1		396245	0		+			
ANR	396515	Identifier	opline		396245	0					
ANR	396516	PrimaryExpression	1		396245	1					
ANR	396517	Identifier	op1		396245	1					
ANR	396518	Argument	execute_data		396245	2					
ANR	396519	Identifier	execute_data		396245	0					
ANR	396520	Argument	& free_op_data1		396245	3					
ANR	396521	UnaryOperationExpression	& free_op_data1		396245	0					
ANR	396522	UnaryOperator	&		396245	0					
ANR	396523	Identifier	free_op_data1		396245	1					
ANR	396524	ExpressionStatement	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"	38386:4:1212829:1212967	396245	1	True				
ANR	396525	CallExpression	"zend_binary_assign_op_obj_dim ( container , dim , value , UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL , binary_op )"		396245	0					
ANR	396526	Callee	zend_binary_assign_op_obj_dim		396245	0					
ANR	396527	Identifier	zend_binary_assign_op_obj_dim		396245	0					
ANR	396528	ArgumentList	container		396245	1					
ANR	396529	Argument	container		396245	0					
ANR	396530	Identifier	container		396245	0					
ANR	396531	Argument	dim		396245	1					
ANR	396532	Identifier	dim		396245	0					
ANR	396533	Argument	value		396245	2					
ANR	396534	Identifier	value		396245	0					
ANR	396535	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		396245	3					
ANR	396536	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		396245	0					
ANR	396537	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		396245	0					
ANR	396538	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		396245	0					
ANR	396539	Callee	UNEXPECTED		396245	0					
ANR	396540	Identifier	UNEXPECTED		396245	0					
ANR	396541	ArgumentList	RETURN_VALUE_USED ( opline )		396245	1					
ANR	396542	Argument	RETURN_VALUE_USED ( opline )		396245	0					
ANR	396543	CallExpression	RETURN_VALUE_USED ( opline )		396245	0					
ANR	396544	Callee	RETURN_VALUE_USED		396245	0					
ANR	396545	Identifier	RETURN_VALUE_USED		396245	0					
ANR	396546	ArgumentList	opline		396245	1					
ANR	396547	Argument	opline		396245	0					
ANR	396548	Identifier	opline		396245	0					
ANR	396549	CallExpression	EX_VAR ( opline -> result . var )		396245	1					
ANR	396550	Callee	EX_VAR		396245	0					
ANR	396551	Identifier	EX_VAR		396245	0					
ANR	396552	ArgumentList	opline -> result . var		396245	1					
ANR	396553	Argument	opline -> result . var		396245	0					
ANR	396554	MemberAccess	opline -> result . var		396245	0					
ANR	396555	PtrMemberAccess	opline -> result		396245	0					
ANR	396556	Identifier	opline		396245	0					
ANR	396557	Identifier	result		396245	1					
ANR	396558	Identifier	var		396245	1					
ANR	396559	Identifier	NULL		396245	2					
ANR	396560	Argument	binary_op		396245	4					
ANR	396561	Identifier	binary_op		396245	0					
ANR	396562	BreakStatement	break ;	38387:4:1212973:1212978	396245	2	True				
ANR	396563	ExpressionStatement	"zend_fetch_dimension_address_RW ( & rv , container , dim , ( IS_TMP_VAR | IS_VAR ) )"	38391:2:1212992:1213065	396245	1	True				
ANR	396564	CallExpression	"zend_fetch_dimension_address_RW ( & rv , container , dim , ( IS_TMP_VAR | IS_VAR ) )"		396245	0					
ANR	396565	Callee	zend_fetch_dimension_address_RW		396245	0					
ANR	396566	Identifier	zend_fetch_dimension_address_RW		396245	0					
ANR	396567	ArgumentList	& rv		396245	1					
ANR	396568	Argument	& rv		396245	0					
ANR	396569	UnaryOperationExpression	& rv		396245	0					
ANR	396570	UnaryOperator	&		396245	0					
ANR	396571	Identifier	rv		396245	1					
ANR	396572	Argument	container		396245	1					
ANR	396573	Identifier	container		396245	0					
ANR	396574	Argument	dim		396245	2					
ANR	396575	Identifier	dim		396245	0					
ANR	396576	Argument	IS_TMP_VAR | IS_VAR		396245	3					
ANR	396577	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		396245	0		|			
ANR	396578	Identifier	IS_TMP_VAR		396245	0					
ANR	396579	Identifier	IS_VAR		396245	1					
ANR	396580	ExpressionStatement	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"	38392:2:1213069:1213160	396245	2	True				
ANR	396581	AssignmentExpression	"value = get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		396245	0		=			
ANR	396582	Identifier	value		396245	0					
ANR	396583	CallExpression	"get_zval_ptr_r ( ( opline + 1 ) -> op1_type , ( opline + 1 ) -> op1 , execute_data , & free_op_data1 )"		396245	1					
ANR	396584	Callee	get_zval_ptr_r		396245	0					
ANR	396585	Identifier	get_zval_ptr_r		396245	0					
ANR	396586	ArgumentList	( opline + 1 ) -> op1_type		396245	1					
ANR	396587	Argument	( opline + 1 ) -> op1_type		396245	0					
ANR	396588	PtrMemberAccess	( opline + 1 ) -> op1_type		396245	0					
ANR	396589	AdditiveExpression	opline + 1		396245	0		+			
ANR	396590	Identifier	opline		396245	0					
ANR	396591	PrimaryExpression	1		396245	1					
ANR	396592	Identifier	op1_type		396245	1					
ANR	396593	Argument	( opline + 1 ) -> op1		396245	1					
ANR	396594	PtrMemberAccess	( opline + 1 ) -> op1		396245	0					
ANR	396595	AdditiveExpression	opline + 1		396245	0		+			
ANR	396596	Identifier	opline		396245	0					
ANR	396597	PrimaryExpression	1		396245	1					
ANR	396598	Identifier	op1		396245	1					
ANR	396599	Argument	execute_data		396245	2					
ANR	396600	Identifier	execute_data		396245	0					
ANR	396601	Argument	& free_op_data1		396245	3					
ANR	396602	UnaryOperationExpression	& free_op_data1		396245	0					
ANR	396603	UnaryOperator	&		396245	0					
ANR	396604	Identifier	free_op_data1		396245	1					
ANR	396605	ExpressionStatement	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )	38393:2:1213164:1213202	396245	3	True				
ANR	396606	CallExpression	ZEND_ASSERT ( Z_TYPE ( rv ) == IS_INDIRECT )		396245	0					
ANR	396607	Callee	ZEND_ASSERT		396245	0					
ANR	396608	Identifier	ZEND_ASSERT		396245	0					
ANR	396609	ArgumentList	Z_TYPE ( rv ) == IS_INDIRECT		396245	1					
ANR	396610	Argument	Z_TYPE ( rv ) == IS_INDIRECT		396245	0					
ANR	396611	EqualityExpression	Z_TYPE ( rv ) == IS_INDIRECT		396245	0		==			
ANR	396612	CallExpression	Z_TYPE ( rv )		396245	0					
ANR	396613	Callee	Z_TYPE		396245	0					
ANR	396614	Identifier	Z_TYPE		396245	0					
ANR	396615	ArgumentList	rv		396245	1					
ANR	396616	Argument	rv		396245	0					
ANR	396617	Identifier	rv		396245	0					
ANR	396618	Identifier	IS_INDIRECT		396245	1					
ANR	396619	ExpressionStatement	var_ptr = Z_INDIRECT ( rv )	38394:2:1213206:1213230	396245	4	True				
ANR	396620	AssignmentExpression	var_ptr = Z_INDIRECT ( rv )		396245	0		=			
ANR	396621	Identifier	var_ptr		396245	0					
ANR	396622	CallExpression	Z_INDIRECT ( rv )		396245	1					
ANR	396623	Callee	Z_INDIRECT		396245	0					
ANR	396624	Identifier	Z_INDIRECT		396245	0					
ANR	396625	ArgumentList	rv		396245	1					
ANR	396626	Argument	rv		396245	0					
ANR	396627	Identifier	rv		396245	0					
ANR	396628	IfStatement	if ( UNEXPECTED ( var_ptr == NULL ) )		396245	5					
ANR	396629	Condition	UNEXPECTED ( var_ptr == NULL )	38396:6:1213239:1213265	396245	0	True				
ANR	396630	CallExpression	UNEXPECTED ( var_ptr == NULL )		396245	0					
ANR	396631	Callee	UNEXPECTED		396245	0					
ANR	396632	Identifier	UNEXPECTED		396245	0					
ANR	396633	ArgumentList	var_ptr == NULL		396245	1					
ANR	396634	Argument	var_ptr == NULL		396245	0					
ANR	396635	EqualityExpression	var_ptr == NULL		396245	0		==			
ANR	396636	Identifier	var_ptr		396245	0					
ANR	396637	Identifier	NULL		396245	1					
ANR	396638	CompoundStatement		41:35:1552:1552	396245	1					
ANR	396639	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	38397:3:1213273:1213372	396245	0	True				
ANR	396640	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		396245	0					
ANR	396641	Callee	zend_throw_error		396245	0					
ANR	396642	Identifier	zend_throw_error		396245	0					
ANR	396643	ArgumentList	NULL		396245	1					
ANR	396644	Argument	NULL		396245	0					
ANR	396645	Identifier	NULL		396245	0					
ANR	396646	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		396245	1					
ANR	396647	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		396245	0					
ANR	396648	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38398:3:1213377:1213405	396245	1	True				
ANR	396649	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		396245	0					
ANR	396650	Callee	zval_ptr_dtor_nogc		396245	0					
ANR	396651	Identifier	zval_ptr_dtor_nogc		396245	0					
ANR	396652	ArgumentList	free_op2		396245	1					
ANR	396653	Argument	free_op2		396245	0					
ANR	396654	Identifier	free_op2		396245	0					
ANR	396655	ExpressionStatement	FREE_OP ( free_op_data1 )	38399:3:1213410:1213432	396245	2	True				
ANR	396656	CallExpression	FREE_OP ( free_op_data1 )		396245	0					
ANR	396657	Callee	FREE_OP		396245	0					
ANR	396658	Identifier	FREE_OP		396245	0					
ANR	396659	ArgumentList	free_op_data1		396245	1					
ANR	396660	Argument	free_op_data1		396245	0					
ANR	396661	Identifier	free_op_data1		396245	0					
ANR	396662	ExpressionStatement	HANDLE_EXCEPTION ( )	38401:3:1213438:1213456	396245	3	True				
ANR	396663	CallExpression	HANDLE_EXCEPTION ( )		396245	0					
ANR	396664	Callee	HANDLE_EXCEPTION		396245	0					
ANR	396665	Identifier	HANDLE_EXCEPTION		396245	0					
ANR	396666	ArgumentList			396245	1					
ANR	396667	IfStatement	if ( UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		396245	6					
ANR	396668	Condition	UNEXPECTED ( var_ptr == & EG ( error_zval ) )	38404:6:1213469:1213506	396245	0	True				
ANR	396669	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		396245	0					
ANR	396670	Callee	UNEXPECTED		396245	0					
ANR	396671	Identifier	UNEXPECTED		396245	0					
ANR	396672	ArgumentList	var_ptr == & EG ( error_zval )		396245	1					
ANR	396673	Argument	var_ptr == & EG ( error_zval )		396245	0					
ANR	396674	EqualityExpression	var_ptr == & EG ( error_zval )		396245	0		==			
ANR	396675	Identifier	var_ptr		396245	0					
ANR	396676	UnaryOperationExpression	& EG ( error_zval )		396245	1					
ANR	396677	UnaryOperator	&		396245	0					
ANR	396678	CallExpression	EG ( error_zval )		396245	1					
ANR	396679	Callee	EG		396245	0					
ANR	396680	Identifier	EG		396245	0					
ANR	396681	ArgumentList	error_zval		396245	1					
ANR	396682	Argument	error_zval		396245	0					
ANR	396683	Identifier	error_zval		396245	0					
ANR	396684	CompoundStatement		49:46:1793:1793	396245	1					
ANR	396685	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		396245	0					
ANR	396686	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38405:7:1213518:1213554	396245	0	True				
ANR	396687	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		396245	0					
ANR	396688	Callee	UNEXPECTED		396245	0					
ANR	396689	Identifier	UNEXPECTED		396245	0					
ANR	396690	ArgumentList	RETURN_VALUE_USED ( opline )		396245	1					
ANR	396691	Argument	RETURN_VALUE_USED ( opline )		396245	0					
ANR	396692	CallExpression	RETURN_VALUE_USED ( opline )		396245	0					
ANR	396693	Callee	RETURN_VALUE_USED		396245	0					
ANR	396694	Identifier	RETURN_VALUE_USED		396245	0					
ANR	396695	ArgumentList	opline		396245	1					
ANR	396696	Argument	opline		396245	0					
ANR	396697	Identifier	opline		396245	0					
ANR	396698	CompoundStatement		50:46:1841:1841	396245	1					
ANR	396699	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	38406:4:1213563:1213600	396245	0	True				
ANR	396700	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		396245	0					
ANR	396701	Callee	ZVAL_NULL		396245	0					
ANR	396702	Identifier	ZVAL_NULL		396245	0					
ANR	396703	ArgumentList	EX_VAR ( opline -> result . var )		396245	1					
ANR	396704	Argument	EX_VAR ( opline -> result . var )		396245	0					
ANR	396705	CallExpression	EX_VAR ( opline -> result . var )		396245	0					
ANR	396706	Callee	EX_VAR		396245	0					
ANR	396707	Identifier	EX_VAR		396245	0					
ANR	396708	ArgumentList	opline -> result . var		396245	1					
ANR	396709	Argument	opline -> result . var		396245	0					
ANR	396710	MemberAccess	opline -> result . var		396245	0					
ANR	396711	PtrMemberAccess	opline -> result		396245	0					
ANR	396712	Identifier	opline		396245	0					
ANR	396713	Identifier	result		396245	1					
ANR	396714	Identifier	var		396245	1					
ANR	396715	ElseStatement	else		396245	0					
ANR	396716	CompoundStatement		53:9:1900:1900	396245	0					
ANR	396717	ExpressionStatement	ZVAL_DEREF ( var_ptr )	38409:3:1213621:1213640	396245	0	True				
ANR	396718	CallExpression	ZVAL_DEREF ( var_ptr )		396245	0					
ANR	396719	Callee	ZVAL_DEREF		396245	0					
ANR	396720	Identifier	ZVAL_DEREF		396245	0					
ANR	396721	ArgumentList	var_ptr		396245	1					
ANR	396722	Argument	var_ptr		396245	0					
ANR	396723	Identifier	var_ptr		396245	0					
ANR	396724	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	38410:3:1213645:1213673	396245	1	True				
ANR	396725	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		396245	0					
ANR	396726	Callee	SEPARATE_ZVAL_NOREF		396245	0					
ANR	396727	Identifier	SEPARATE_ZVAL_NOREF		396245	0					
ANR	396728	ArgumentList	var_ptr		396245	1					
ANR	396729	Argument	var_ptr		396245	0					
ANR	396730	Identifier	var_ptr		396245	0					
ANR	396731	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	38412:3:1213679:1213713	396245	2	True				
ANR	396732	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		396245	0					
ANR	396733	Callee	binary_op		396245	0					
ANR	396734	Identifier	binary_op		396245	0					
ANR	396735	ArgumentList	var_ptr		396245	1					
ANR	396736	Argument	var_ptr		396245	0					
ANR	396737	Identifier	var_ptr		396245	0					
ANR	396738	Argument	var_ptr		396245	1					
ANR	396739	Identifier	var_ptr		396245	0					
ANR	396740	Argument	value		396245	2					
ANR	396741	Identifier	value		396245	0					
ANR	396742	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		396245	3					
ANR	396743	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38414:7:1213723:1213759	396245	0	True				
ANR	396744	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		396245	0					
ANR	396745	Callee	UNEXPECTED		396245	0					
ANR	396746	Identifier	UNEXPECTED		396245	0					
ANR	396747	ArgumentList	RETURN_VALUE_USED ( opline )		396245	1					
ANR	396748	Argument	RETURN_VALUE_USED ( opline )		396245	0					
ANR	396749	CallExpression	RETURN_VALUE_USED ( opline )		396245	0					
ANR	396750	Callee	RETURN_VALUE_USED		396245	0					
ANR	396751	Identifier	RETURN_VALUE_USED		396245	0					
ANR	396752	ArgumentList	opline		396245	1					
ANR	396753	Argument	opline		396245	0					
ANR	396754	Identifier	opline		396245	0					
ANR	396755	CompoundStatement		59:46:2046:2046	396245	1					
ANR	396756	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	38415:4:1213768:1213814	396245	0	True				
ANR	396757	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		396245	0					
ANR	396758	Callee	ZVAL_COPY		396245	0					
ANR	396759	Identifier	ZVAL_COPY		396245	0					
ANR	396760	ArgumentList	EX_VAR ( opline -> result . var )		396245	1					
ANR	396761	Argument	EX_VAR ( opline -> result . var )		396245	0					
ANR	396762	CallExpression	EX_VAR ( opline -> result . var )		396245	0					
ANR	396763	Callee	EX_VAR		396245	0					
ANR	396764	Identifier	EX_VAR		396245	0					
ANR	396765	ArgumentList	opline -> result . var		396245	1					
ANR	396766	Argument	opline -> result . var		396245	0					
ANR	396767	MemberAccess	opline -> result . var		396245	0					
ANR	396768	PtrMemberAccess	opline -> result		396245	0					
ANR	396769	Identifier	opline		396245	0					
ANR	396770	Identifier	result		396245	1					
ANR	396771	Identifier	var		396245	1					
ANR	396772	Argument	var_ptr		396245	1					
ANR	396773	Identifier	var_ptr		396245	0					
ANR	396774	Condition	0	38418:10:1213835:1213835	396245	1	True				
ANR	396775	PrimaryExpression	0		396245	0					
ANR	396776	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38420:1:1213841:1213869	396245	9	True				
ANR	396777	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		396245	0					
ANR	396778	Callee	zval_ptr_dtor_nogc		396245	0					
ANR	396779	Identifier	zval_ptr_dtor_nogc		396245	0					
ANR	396780	ArgumentList	free_op2		396245	1					
ANR	396781	Argument	free_op2		396245	0					
ANR	396782	Identifier	free_op2		396245	0					
ANR	396783	ExpressionStatement	FREE_OP ( free_op_data1 )	38421:1:1213872:1213894	396245	10	True				
ANR	396784	CallExpression	FREE_OP ( free_op_data1 )		396245	0					
ANR	396785	Callee	FREE_OP		396245	0					
ANR	396786	Identifier	FREE_OP		396245	0					
ANR	396787	ArgumentList	free_op_data1		396245	1					
ANR	396788	Argument	free_op_data1		396245	0					
ANR	396789	Identifier	free_op_data1		396245	0					
ANR	396790	ExpressionStatement	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"	38423:1:1213898:1213926	396245	11	True				
ANR	396791	CallExpression	"ZEND_VM_NEXT_OPCODE_EX ( 1 , 2 )"		396245	0					
ANR	396792	Callee	ZEND_VM_NEXT_OPCODE_EX		396245	0					
ANR	396793	Identifier	ZEND_VM_NEXT_OPCODE_EX		396245	0					
ANR	396794	ArgumentList	1		396245	1					
ANR	396795	Argument	1		396245	0					
ANR	396796	PrimaryExpression	1		396245	0					
ANR	396797	Argument	2		396245	1					
ANR	396798	PrimaryExpression	2		396245	0					
ANR	396799	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		396245	1					
ANR	396800	Identifier	zend_binary_assign_op_dim_helper_SPEC_CV_TMPVAR		396245	2					
ANR	396801	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		396245	3					
ANR	396802	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	38355:93:1211661:1211712	396245	0	True				
ANR	396803	ParameterType	binary_op_type binary_op		396245	0					
ANR	396804	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		396245	1					
ANR	396805	CFGEntryNode	ENTRY		396245		True				
ANR	396806	CFGExitNode	EXIT		396245		True				
ANR	396807	Symbol	container		396245						
ANR	396808	Symbol	opline -> op1		396245						
ANR	396809	Symbol	opline -> op2		396245						
ANR	396810	Symbol	opline -> op2 . var		396245						
ANR	396811	Symbol	IS_CV		396245						
ANR	396812	Symbol	rv		396245						
ANR	396813	Symbol	Z_OBJ_P		396245						
ANR	396814	Symbol	dim		396245						
ANR	396815	Symbol	Z_TYPE		396245						
ANR	396816	Symbol	free_op_data1		396245						
ANR	396817	Symbol	free_op2		396245						
ANR	396818	Symbol	& EG		396245						
ANR	396819	Symbol	var_ptr		396245						
ANR	396820	Symbol	execute_data		396245						
ANR	396821	Symbol	opline -> result		396245						
ANR	396822	Symbol	( opline + 1 ) -> op1		396245						
ANR	396823	Symbol	UNEXPECTED		396245						
ANR	396824	Symbol	& free_op2		396245						
ANR	396825	Symbol	RETURN_VALUE_USED		396245						
ANR	396826	Symbol	( opline + 1 ) -> op1 . var		396245						
ANR	396827	Symbol	opline		396245						
ANR	396828	Symbol	get_zval_ptr_r		396245						
ANR	396829	Symbol	Z_INDIRECT		396245						
ANR	396830	Symbol	IS_ARRAY		396245						
ANR	396831	Symbol	opline -> op1 . var		396245						
ANR	396832	Symbol	value		396245						
ANR	396833	Symbol	binary_op		396245						
ANR	396834	Symbol	IS_TMP_VAR		396245						
ANR	396835	Symbol	( opline + 1 ) -> op1_type		396245						
ANR	396836	Symbol	NULL		396245						
ANR	396837	Symbol	Z_TYPE_P		396245						
ANR	396838	Symbol	& rv		396245						
ANR	396839	Symbol	* opline		396245						
ANR	396840	Symbol	error_zval		396245						
ANR	396841	Symbol	_get_zval_ptr_var		396245						
ANR	396842	Symbol	_get_zval_ptr_cv_BP_VAR_RW		396245						
ANR	396843	Symbol	EX_VAR		396245						
ANR	396844	Symbol	IS_OBJECT		396245						
ANR	396845	Symbol	IS_VAR		396245						
ANR	396846	Symbol	EXPECTED		396245						
ANR	396847	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		396245						
ANR	396848	Symbol	& free_op_data1		396245						
ANR	396849	Symbol	opline -> result . var		396245						
ANR	396850	Symbol	IS_UNUSED		396245						
ANR	396851	Symbol	IS_INDIRECT		396245						
ANR	396852	Function	zend_binary_assign_op_helper_SPEC_CV_TMPVAR	38426:0:1213931:1214958							
ANR	396853	FunctionDef	zend_binary_assign_op_helper_SPEC_CV_TMPVAR (binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC)		396852	0					
ANR	396854	CompoundStatement		38427:0:1214074:1214958	396852	0					
ANR	396855	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op2 ;	38428:1:1214077:1214110	396852	0	True				
ANR	396856	IdentifierDecl	free_op2		396852	0					
ANR	396857	IdentifierDeclType	USE_OPLINE zend_free_op		396852	0					
ANR	396858	Identifier	free_op2		396852	1					
ANR	396859	IdentifierDeclStatement	zval * var_ptr ;	38430:1:1214113:1214126	396852	1	True				
ANR	396860	IdentifierDecl	* var_ptr		396852	0					
ANR	396861	IdentifierDeclType	zval *		396852	0					
ANR	396862	Identifier	var_ptr		396852	1					
ANR	396863	IdentifierDeclStatement	zval * value ;	38431:1:1214129:1214140	396852	2	True				
ANR	396864	IdentifierDecl	* value		396852	0					
ANR	396865	IdentifierDeclType	zval *		396852	0					
ANR	396866	Identifier	value		396852	1					
ANR	396867	ExpressionStatement	SAVE_OPLINE ( )	38433:1:1214144:1214157	396852	3	True				
ANR	396868	CallExpression	SAVE_OPLINE ( )		396852	0					
ANR	396869	Callee	SAVE_OPLINE		396852	0					
ANR	396870	Identifier	SAVE_OPLINE		396852	0					
ANR	396871	ArgumentList			396852	1					
ANR	396872	ExpressionStatement	"value = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	38434:1:1214160:1214227	396852	4	True				
ANR	396873	AssignmentExpression	"value = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		396852	0		=			
ANR	396874	Identifier	value		396852	0					
ANR	396875	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		396852	1					
ANR	396876	Callee	_get_zval_ptr_var		396852	0					
ANR	396877	Identifier	_get_zval_ptr_var		396852	0					
ANR	396878	ArgumentList	opline -> op2 . var		396852	1					
ANR	396879	Argument	opline -> op2 . var		396852	0					
ANR	396880	MemberAccess	opline -> op2 . var		396852	0					
ANR	396881	PtrMemberAccess	opline -> op2		396852	0					
ANR	396882	Identifier	opline		396852	0					
ANR	396883	Identifier	op2		396852	1					
ANR	396884	Identifier	var		396852	1					
ANR	396885	Argument	execute_data		396852	1					
ANR	396886	Identifier	execute_data		396852	0					
ANR	396887	Argument	& free_op2		396852	2					
ANR	396888	UnaryOperationExpression	& free_op2		396852	0					
ANR	396889	UnaryOperator	&		396852	0					
ANR	396890	Identifier	free_op2		396852	1					
ANR	396891	ExpressionStatement	"var_ptr = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	38435:1:1214230:1214297	396852	5	True				
ANR	396892	AssignmentExpression	"var_ptr = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		396852	0		=			
ANR	396893	Identifier	var_ptr		396852	0					
ANR	396894	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		396852	1					
ANR	396895	Callee	_get_zval_ptr_cv_BP_VAR_RW		396852	0					
ANR	396896	Identifier	_get_zval_ptr_cv_BP_VAR_RW		396852	0					
ANR	396897	ArgumentList	execute_data		396852	1					
ANR	396898	Argument	execute_data		396852	0					
ANR	396899	Identifier	execute_data		396852	0					
ANR	396900	Argument	opline -> op1 . var		396852	1					
ANR	396901	MemberAccess	opline -> op1 . var		396852	0					
ANR	396902	PtrMemberAccess	opline -> op1		396852	0					
ANR	396903	Identifier	opline		396852	0					
ANR	396904	Identifier	op1		396852	1					
ANR	396905	Identifier	var		396852	1					
ANR	396906	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL ) )		396852	6					
ANR	396907	Condition	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL )	38437:5:1214305:1214350	396852	0	True				
ANR	396908	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == NULL )		396852	0		&&			
ANR	396909	EqualityExpression	IS_CV == IS_VAR		396852	0		==			
ANR	396910	Identifier	IS_CV		396852	0					
ANR	396911	Identifier	IS_VAR		396852	1					
ANR	396912	CallExpression	UNEXPECTED ( var_ptr == NULL )		396852	1					
ANR	396913	Callee	UNEXPECTED		396852	0					
ANR	396914	Identifier	UNEXPECTED		396852	0					
ANR	396915	ArgumentList	var_ptr == NULL		396852	1					
ANR	396916	Argument	var_ptr == NULL		396852	0					
ANR	396917	EqualityExpression	var_ptr == NULL		396852	0		==			
ANR	396918	Identifier	var_ptr		396852	0					
ANR	396919	Identifier	NULL		396852	1					
ANR	396920	CompoundStatement		11:53:278:278	396852	1					
ANR	396921	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"	38438:2:1214357:1214456	396852	0	True				
ANR	396922	CallExpression	"zend_throw_error ( NULL , ""Cannot use assign-op operators with overloaded objects nor string offsets"" )"		396852	0					
ANR	396923	Callee	zend_throw_error		396852	0					
ANR	396924	Identifier	zend_throw_error		396852	0					
ANR	396925	ArgumentList	NULL		396852	1					
ANR	396926	Argument	NULL		396852	0					
ANR	396927	Identifier	NULL		396852	0					
ANR	396928	Argument	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		396852	1					
ANR	396929	PrimaryExpression	"""Cannot use assign-op operators with overloaded objects nor string offsets"""		396852	0					
ANR	396930	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38439:2:1214460:1214488	396852	1	True				
ANR	396931	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		396852	0					
ANR	396932	Callee	zval_ptr_dtor_nogc		396852	0					
ANR	396933	Identifier	zval_ptr_dtor_nogc		396852	0					
ANR	396934	ArgumentList	free_op2		396852	1					
ANR	396935	Argument	free_op2		396852	0					
ANR	396936	Identifier	free_op2		396852	0					
ANR	396937	ExpressionStatement	HANDLE_EXCEPTION ( )	38440:2:1214492:1214510	396852	2	True				
ANR	396938	CallExpression	HANDLE_EXCEPTION ( )		396852	0					
ANR	396939	Callee	HANDLE_EXCEPTION		396852	0					
ANR	396940	Identifier	HANDLE_EXCEPTION		396852	0					
ANR	396941	ArgumentList			396852	1					
ANR	396942	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) ) )		396852	7					
ANR	396943	Condition	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )	38443:5:1214521:1214577	396852	0	True				
ANR	396944	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( var_ptr == & EG ( error_zval ) )		396852	0		&&			
ANR	396945	EqualityExpression	IS_CV == IS_VAR		396852	0		==			
ANR	396946	Identifier	IS_CV		396852	0					
ANR	396947	Identifier	IS_VAR		396852	1					
ANR	396948	CallExpression	UNEXPECTED ( var_ptr == & EG ( error_zval ) )		396852	1					
ANR	396949	Callee	UNEXPECTED		396852	0					
ANR	396950	Identifier	UNEXPECTED		396852	0					
ANR	396951	ArgumentList	var_ptr == & EG ( error_zval )		396852	1					
ANR	396952	Argument	var_ptr == & EG ( error_zval )		396852	0					
ANR	396953	EqualityExpression	var_ptr == & EG ( error_zval )		396852	0		==			
ANR	396954	Identifier	var_ptr		396852	0					
ANR	396955	UnaryOperationExpression	& EG ( error_zval )		396852	1					
ANR	396956	UnaryOperator	&		396852	0					
ANR	396957	CallExpression	EG ( error_zval )		396852	1					
ANR	396958	Callee	EG		396852	0					
ANR	396959	Identifier	EG		396852	0					
ANR	396960	ArgumentList	error_zval		396852	1					
ANR	396961	Argument	error_zval		396852	0					
ANR	396962	Identifier	error_zval		396852	0					
ANR	396963	CompoundStatement		17:64:505:505	396852	1					
ANR	396964	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		396852	0					
ANR	396965	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38444:6:1214588:1214624	396852	0	True				
ANR	396966	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		396852	0					
ANR	396967	Callee	UNEXPECTED		396852	0					
ANR	396968	Identifier	UNEXPECTED		396852	0					
ANR	396969	ArgumentList	RETURN_VALUE_USED ( opline )		396852	1					
ANR	396970	Argument	RETURN_VALUE_USED ( opline )		396852	0					
ANR	396971	CallExpression	RETURN_VALUE_USED ( opline )		396852	0					
ANR	396972	Callee	RETURN_VALUE_USED		396852	0					
ANR	396973	Identifier	RETURN_VALUE_USED		396852	0					
ANR	396974	ArgumentList	opline		396852	1					
ANR	396975	Argument	opline		396852	0					
ANR	396976	Identifier	opline		396852	0					
ANR	396977	CompoundStatement		18:45:552:552	396852	1					
ANR	396978	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	38445:3:1214632:1214669	396852	0	True				
ANR	396979	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		396852	0					
ANR	396980	Callee	ZVAL_NULL		396852	0					
ANR	396981	Identifier	ZVAL_NULL		396852	0					
ANR	396982	ArgumentList	EX_VAR ( opline -> result . var )		396852	1					
ANR	396983	Argument	EX_VAR ( opline -> result . var )		396852	0					
ANR	396984	CallExpression	EX_VAR ( opline -> result . var )		396852	0					
ANR	396985	Callee	EX_VAR		396852	0					
ANR	396986	Identifier	EX_VAR		396852	0					
ANR	396987	ArgumentList	opline -> result . var		396852	1					
ANR	396988	Argument	opline -> result . var		396852	0					
ANR	396989	MemberAccess	opline -> result . var		396852	0					
ANR	396990	PtrMemberAccess	opline -> result		396852	0					
ANR	396991	Identifier	opline		396852	0					
ANR	396992	Identifier	result		396852	1					
ANR	396993	Identifier	var		396852	1					
ANR	396994	ElseStatement	else		396852	0					
ANR	396995	CompoundStatement		21:8:608:608	396852	0					
ANR	396996	ExpressionStatement	ZVAL_DEREF ( var_ptr )	38448:2:1214687:1214706	396852	0	True				
ANR	396997	CallExpression	ZVAL_DEREF ( var_ptr )		396852	0					
ANR	396998	Callee	ZVAL_DEREF		396852	0					
ANR	396999	Identifier	ZVAL_DEREF		396852	0					
ANR	397000	ArgumentList	var_ptr		396852	1					
ANR	397001	Argument	var_ptr		396852	0					
ANR	397002	Identifier	var_ptr		396852	0					
ANR	397003	ExpressionStatement	SEPARATE_ZVAL_NOREF ( var_ptr )	38449:2:1214710:1214738	396852	1	True				
ANR	397004	CallExpression	SEPARATE_ZVAL_NOREF ( var_ptr )		396852	0					
ANR	397005	Callee	SEPARATE_ZVAL_NOREF		396852	0					
ANR	397006	Identifier	SEPARATE_ZVAL_NOREF		396852	0					
ANR	397007	ArgumentList	var_ptr		396852	1					
ANR	397008	Argument	var_ptr		396852	0					
ANR	397009	Identifier	var_ptr		396852	0					
ANR	397010	ExpressionStatement	"binary_op ( var_ptr , var_ptr , value )"	38451:2:1214743:1214777	396852	2	True				
ANR	397011	CallExpression	"binary_op ( var_ptr , var_ptr , value )"		396852	0					
ANR	397012	Callee	binary_op		396852	0					
ANR	397013	Identifier	binary_op		396852	0					
ANR	397014	ArgumentList	var_ptr		396852	1					
ANR	397015	Argument	var_ptr		396852	0					
ANR	397016	Identifier	var_ptr		396852	0					
ANR	397017	Argument	var_ptr		396852	1					
ANR	397018	Identifier	var_ptr		396852	0					
ANR	397019	Argument	value		396852	2					
ANR	397020	Identifier	value		396852	0					
ANR	397021	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		396852	3					
ANR	397022	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38453:6:1214786:1214822	396852	0	True				
ANR	397023	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		396852	0					
ANR	397024	Callee	UNEXPECTED		396852	0					
ANR	397025	Identifier	UNEXPECTED		396852	0					
ANR	397026	ArgumentList	RETURN_VALUE_USED ( opline )		396852	1					
ANR	397027	Argument	RETURN_VALUE_USED ( opline )		396852	0					
ANR	397028	CallExpression	RETURN_VALUE_USED ( opline )		396852	0					
ANR	397029	Callee	RETURN_VALUE_USED		396852	0					
ANR	397030	Identifier	RETURN_VALUE_USED		396852	0					
ANR	397031	ArgumentList	opline		396852	1					
ANR	397032	Argument	opline		396852	0					
ANR	397033	Identifier	opline		396852	0					
ANR	397034	CompoundStatement		27:45:750:750	396852	1					
ANR	397035	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"	38454:3:1214830:1214876	396852	0	True				
ANR	397036	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , var_ptr )"		396852	0					
ANR	397037	Callee	ZVAL_COPY		396852	0					
ANR	397038	Identifier	ZVAL_COPY		396852	0					
ANR	397039	ArgumentList	EX_VAR ( opline -> result . var )		396852	1					
ANR	397040	Argument	EX_VAR ( opline -> result . var )		396852	0					
ANR	397041	CallExpression	EX_VAR ( opline -> result . var )		396852	0					
ANR	397042	Callee	EX_VAR		396852	0					
ANR	397043	Identifier	EX_VAR		396852	0					
ANR	397044	ArgumentList	opline -> result . var		396852	1					
ANR	397045	Argument	opline -> result . var		396852	0					
ANR	397046	MemberAccess	opline -> result . var		396852	0					
ANR	397047	PtrMemberAccess	opline -> result		396852	0					
ANR	397048	Identifier	opline		396852	0					
ANR	397049	Identifier	result		396852	1					
ANR	397050	Identifier	var		396852	1					
ANR	397051	Argument	var_ptr		396852	1					
ANR	397052	Identifier	var_ptr		396852	0					
ANR	397053	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38458:1:1214887:1214915	396852	8	True				
ANR	397054	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		396852	0					
ANR	397055	Callee	zval_ptr_dtor_nogc		396852	0					
ANR	397056	Identifier	zval_ptr_dtor_nogc		396852	0					
ANR	397057	ArgumentList	free_op2		396852	1					
ANR	397058	Argument	free_op2		396852	0					
ANR	397059	Identifier	free_op2		396852	0					
ANR	397060	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	38460:1:1214919:1214956	396852	9	True				
ANR	397061	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		396852	0					
ANR	397062	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		396852	0					
ANR	397063	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		396852	0					
ANR	397064	ArgumentList			396852	1					
ANR	397065	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		396852	1					
ANR	397066	Identifier	zend_binary_assign_op_helper_SPEC_CV_TMPVAR		396852	2					
ANR	397067	ParameterList	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC		396852	3					
ANR	397068	Parameter	binary_op_type binary_op ZEND_OPCODE_HANDLER_ARGS_DC	38426:89:1214020:1214071	396852	0	True				
ANR	397069	ParameterType	binary_op_type binary_op		396852	0					
ANR	397070	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		396852	1					
ANR	397071	CFGEntryNode	ENTRY		396852		True				
ANR	397072	CFGExitNode	EXIT		396852		True				
ANR	397073	Symbol	opline -> op1		396852						
ANR	397074	Symbol	opline -> op2		396852						
ANR	397075	Symbol	opline -> op2 . var		396852						
ANR	397076	Symbol	NULL		396852						
ANR	397077	Symbol	IS_CV		396852						
ANR	397078	Symbol	free_op2		396852						
ANR	397079	Symbol	& EG		396852						
ANR	397080	Symbol	var_ptr		396852						
ANR	397081	Symbol	execute_data		396852						
ANR	397082	Symbol	opline -> result		396852						
ANR	397083	Symbol	& free_op2		396852						
ANR	397084	Symbol	UNEXPECTED		396852						
ANR	397085	Symbol	RETURN_VALUE_USED		396852						
ANR	397086	Symbol	opline		396852						
ANR	397087	Symbol	* opline		396852						
ANR	397088	Symbol	error_zval		396852						
ANR	397089	Symbol	_get_zval_ptr_var		396852						
ANR	397090	Symbol	_get_zval_ptr_cv_BP_VAR_RW		396852						
ANR	397091	Symbol	EX_VAR		396852						
ANR	397092	Symbol	opline -> op1 . var		396852						
ANR	397093	Symbol	value		396852						
ANR	397094	Symbol	IS_VAR		396852						
ANR	397095	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		396852						
ANR	397096	Symbol	opline -> result . var		396852						
ANR	397097	Function	zend_pre_incdec_property_helper_SPEC_CV_TMPVAR	38703:0:1225790:1227989							
ANR	397098	FunctionDef	zend_pre_incdec_property_helper_SPEC_CV_TMPVAR (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		397097	0					
ANR	397099	CompoundStatement		38704:0:1225919:1227989	397097	0					
ANR	397100	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op2 ;	38705:1:1225922:1225955	397097	0	True				
ANR	397101	IdentifierDecl	free_op2		397097	0					
ANR	397102	IdentifierDeclType	USE_OPLINE zend_free_op		397097	0					
ANR	397103	Identifier	free_op2		397097	1					
ANR	397104	IdentifierDeclStatement	zval * object ;	38707:1:1225958:1225970	397097	1	True				
ANR	397105	IdentifierDecl	* object		397097	0					
ANR	397106	IdentifierDeclType	zval *		397097	0					
ANR	397107	Identifier	object		397097	1					
ANR	397108	IdentifierDeclStatement	zval * property ;	38708:1:1225973:1225987	397097	2	True				
ANR	397109	IdentifierDecl	* property		397097	0					
ANR	397110	IdentifierDeclType	zval *		397097	0					
ANR	397111	Identifier	property		397097	1					
ANR	397112	IdentifierDeclStatement	zval * zptr ;	38709:1:1225990:1226000	397097	3	True				
ANR	397113	IdentifierDecl	* zptr		397097	0					
ANR	397114	IdentifierDeclType	zval *		397097	0					
ANR	397115	Identifier	zptr		397097	1					
ANR	397116	ExpressionStatement	SAVE_OPLINE ( )	38711:1:1226004:1226017	397097	4	True				
ANR	397117	CallExpression	SAVE_OPLINE ( )		397097	0					
ANR	397118	Callee	SAVE_OPLINE		397097	0					
ANR	397119	Identifier	SAVE_OPLINE		397097	0					
ANR	397120	ArgumentList			397097	1					
ANR	397121	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	38712:1:1226020:1226086	397097	5	True				
ANR	397122	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		397097	0		=			
ANR	397123	Identifier	object		397097	0					
ANR	397124	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		397097	1					
ANR	397125	Callee	_get_zval_ptr_cv_BP_VAR_RW		397097	0					
ANR	397126	Identifier	_get_zval_ptr_cv_BP_VAR_RW		397097	0					
ANR	397127	ArgumentList	execute_data		397097	1					
ANR	397128	Argument	execute_data		397097	0					
ANR	397129	Identifier	execute_data		397097	0					
ANR	397130	Argument	opline -> op1 . var		397097	1					
ANR	397131	MemberAccess	opline -> op1 . var		397097	0					
ANR	397132	PtrMemberAccess	opline -> op1		397097	0					
ANR	397133	Identifier	opline		397097	0					
ANR	397134	Identifier	op1		397097	1					
ANR	397135	Identifier	var		397097	1					
ANR	397136	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		397097	6					
ANR	397137	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	38714:5:1226094:1226150	397097	0	True				
ANR	397138	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		397097	0		&&			
ANR	397139	EqualityExpression	IS_CV == IS_UNUSED		397097	0		==			
ANR	397140	Identifier	IS_CV		397097	0					
ANR	397141	Identifier	IS_UNUSED		397097	1					
ANR	397142	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		397097	1					
ANR	397143	Callee	UNEXPECTED		397097	0					
ANR	397144	Identifier	UNEXPECTED		397097	0					
ANR	397145	ArgumentList	Z_OBJ_P ( object ) == NULL		397097	1					
ANR	397146	Argument	Z_OBJ_P ( object ) == NULL		397097	0					
ANR	397147	EqualityExpression	Z_OBJ_P ( object ) == NULL		397097	0		==			
ANR	397148	CallExpression	Z_OBJ_P ( object )		397097	0					
ANR	397149	Callee	Z_OBJ_P		397097	0					
ANR	397150	Identifier	Z_OBJ_P		397097	0					
ANR	397151	ArgumentList	object		397097	1					
ANR	397152	Argument	object		397097	0					
ANR	397153	Identifier	object		397097	0					
ANR	397154	Identifier	NULL		397097	1					
ANR	397155	CompoundStatement		11:64:233:233	397097	1					
ANR	397156	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	38715:2:1226157:1226221	397097	0	True				
ANR	397157	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		397097	0					
ANR	397158	Callee	zend_throw_error		397097	0					
ANR	397159	Identifier	zend_throw_error		397097	0					
ANR	397160	ArgumentList	NULL		397097	1					
ANR	397161	Argument	NULL		397097	0					
ANR	397162	Identifier	NULL		397097	0					
ANR	397163	Argument	"""Using $this when not in object context"""		397097	1					
ANR	397164	PrimaryExpression	"""Using $this when not in object context"""		397097	0					
ANR	397165	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	38716:2:1226225:1226268	397097	1	True				
ANR	397166	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		397097	0					
ANR	397167	Callee	zval_ptr_dtor_nogc		397097	0					
ANR	397168	Identifier	zval_ptr_dtor_nogc		397097	0					
ANR	397169	ArgumentList	EX_VAR ( opline -> op2 . var )		397097	1					
ANR	397170	Argument	EX_VAR ( opline -> op2 . var )		397097	0					
ANR	397171	CallExpression	EX_VAR ( opline -> op2 . var )		397097	0					
ANR	397172	Callee	EX_VAR		397097	0					
ANR	397173	Identifier	EX_VAR		397097	0					
ANR	397174	ArgumentList	opline -> op2 . var		397097	1					
ANR	397175	Argument	opline -> op2 . var		397097	0					
ANR	397176	MemberAccess	opline -> op2 . var		397097	0					
ANR	397177	PtrMemberAccess	opline -> op2		397097	0					
ANR	397178	Identifier	opline		397097	0					
ANR	397179	Identifier	op2		397097	1					
ANR	397180	Identifier	var		397097	1					
ANR	397181	ExpressionStatement	HANDLE_EXCEPTION ( )	38717:2:1226272:1226290	397097	2	True				
ANR	397182	CallExpression	HANDLE_EXCEPTION ( )		397097	0					
ANR	397183	Callee	HANDLE_EXCEPTION		397097	0					
ANR	397184	Identifier	HANDLE_EXCEPTION		397097	0					
ANR	397185	ArgumentList			397097	1					
ANR	397186	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	38720:1:1226297:1226367	397097	7	True				
ANR	397187	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		397097	0		=			
ANR	397188	Identifier	property		397097	0					
ANR	397189	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		397097	1					
ANR	397190	Callee	_get_zval_ptr_var		397097	0					
ANR	397191	Identifier	_get_zval_ptr_var		397097	0					
ANR	397192	ArgumentList	opline -> op2 . var		397097	1					
ANR	397193	Argument	opline -> op2 . var		397097	0					
ANR	397194	MemberAccess	opline -> op2 . var		397097	0					
ANR	397195	PtrMemberAccess	opline -> op2		397097	0					
ANR	397196	Identifier	opline		397097	0					
ANR	397197	Identifier	op2		397097	1					
ANR	397198	Identifier	var		397097	1					
ANR	397199	Argument	execute_data		397097	1					
ANR	397200	Identifier	execute_data		397097	0					
ANR	397201	Argument	& free_op2		397097	2					
ANR	397202	UnaryOperationExpression	& free_op2		397097	0					
ANR	397203	UnaryOperator	&		397097	0					
ANR	397204	Identifier	free_op2		397097	1					
ANR	397205	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		397097	8					
ANR	397206	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	38722:5:1226375:1226419	397097	0	True				
ANR	397207	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		397097	0		&&			
ANR	397208	EqualityExpression	IS_CV == IS_VAR		397097	0		==			
ANR	397209	Identifier	IS_CV		397097	0					
ANR	397210	Identifier	IS_VAR		397097	1					
ANR	397211	CallExpression	UNEXPECTED ( object == NULL )		397097	1					
ANR	397212	Callee	UNEXPECTED		397097	0					
ANR	397213	Identifier	UNEXPECTED		397097	0					
ANR	397214	ArgumentList	object == NULL		397097	1					
ANR	397215	Argument	object == NULL		397097	0					
ANR	397216	EqualityExpression	object == NULL		397097	0		==			
ANR	397217	Identifier	object		397097	0					
ANR	397218	Identifier	NULL		397097	1					
ANR	397219	CompoundStatement		19:52:502:502	397097	1					
ANR	397220	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	38723:2:1226426:1226516	397097	0	True				
ANR	397221	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		397097	0					
ANR	397222	Callee	zend_throw_error		397097	0					
ANR	397223	Identifier	zend_throw_error		397097	0					
ANR	397224	ArgumentList	NULL		397097	1					
ANR	397225	Argument	NULL		397097	0					
ANR	397226	Identifier	NULL		397097	0					
ANR	397227	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		397097	1					
ANR	397228	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		397097	0					
ANR	397229	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38724:2:1226520:1226548	397097	1	True				
ANR	397230	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		397097	0					
ANR	397231	Callee	zval_ptr_dtor_nogc		397097	0					
ANR	397232	Identifier	zval_ptr_dtor_nogc		397097	0					
ANR	397233	ArgumentList	free_op2		397097	1					
ANR	397234	Argument	free_op2		397097	0					
ANR	397235	Identifier	free_op2		397097	0					
ANR	397236	ExpressionStatement	HANDLE_EXCEPTION ( )	38725:2:1226552:1226570	397097	2	True				
ANR	397237	CallExpression	HANDLE_EXCEPTION ( )		397097	0					
ANR	397238	Callee	HANDLE_EXCEPTION		397097	0					
ANR	397239	Identifier	HANDLE_EXCEPTION		397097	0					
ANR	397240	ArgumentList			397097	1					
ANR	397241	DoStatement	do		397097	9					
ANR	397242	CompoundStatement		25:4:660:660	397097	0					
ANR	397243	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		397097	0					
ANR	397244	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	38729:6:1226588:1226650	397097	0	True				
ANR	397245	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		397097	0		&&			
ANR	397246	EqualityExpression	IS_CV != IS_UNUSED		397097	0		!=			
ANR	397247	Identifier	IS_CV		397097	0					
ANR	397248	Identifier	IS_UNUSED		397097	1					
ANR	397249	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		397097	1					
ANR	397250	Callee	UNEXPECTED		397097	0					
ANR	397251	Identifier	UNEXPECTED		397097	0					
ANR	397252	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		397097	1					
ANR	397253	Argument	Z_TYPE_P ( object ) != IS_OBJECT		397097	0					
ANR	397254	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		397097	0		!=			
ANR	397255	CallExpression	Z_TYPE_P ( object )		397097	0					
ANR	397256	Callee	Z_TYPE_P		397097	0					
ANR	397257	Identifier	Z_TYPE_P		397097	0					
ANR	397258	ArgumentList	object		397097	1					
ANR	397259	Argument	object		397097	0					
ANR	397260	Identifier	object		397097	0					
ANR	397261	Identifier	IS_OBJECT		397097	1					
ANR	397262	CompoundStatement		26:71:733:733	397097	1					
ANR	397263	ExpressionStatement	ZVAL_DEREF ( object )	38730:3:1226658:1226676	397097	0	True				
ANR	397264	CallExpression	ZVAL_DEREF ( object )		397097	0					
ANR	397265	Callee	ZVAL_DEREF		397097	0					
ANR	397266	Identifier	ZVAL_DEREF		397097	0					
ANR	397267	ArgumentList	object		397097	1					
ANR	397268	Argument	object		397097	0					
ANR	397269	Identifier	object		397097	0					
ANR	397270	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		397097	1					
ANR	397271	Condition	UNEXPECTED ( ! make_real_object ( object ) )	38731:7:1226685:1226721	397097	0	True				
ANR	397272	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		397097	0					
ANR	397273	Callee	UNEXPECTED		397097	0					
ANR	397274	Identifier	UNEXPECTED		397097	0					
ANR	397275	ArgumentList	! make_real_object ( object )		397097	1					
ANR	397276	Argument	! make_real_object ( object )		397097	0					
ANR	397277	UnaryOperationExpression	! make_real_object ( object )		397097	0					
ANR	397278	UnaryOperator	!		397097	0					
ANR	397279	CallExpression	make_real_object ( object )		397097	1					
ANR	397280	Callee	make_real_object		397097	0					
ANR	397281	Identifier	make_real_object		397097	0					
ANR	397282	ArgumentList	object		397097	1					
ANR	397283	Argument	object		397097	0					
ANR	397284	Identifier	object		397097	0					
ANR	397285	CompoundStatement		28:46:804:804	397097	1					
ANR	397286	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	38732:4:1226730:1226808	397097	0	True				
ANR	397287	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		397097	0					
ANR	397288	Callee	zend_error		397097	0					
ANR	397289	Identifier	zend_error		397097	0					
ANR	397290	ArgumentList	E_WARNING		397097	1					
ANR	397291	Argument	E_WARNING		397097	0					
ANR	397292	Identifier	E_WARNING		397097	0					
ANR	397293	Argument	"""Attempt to increment/decrement property of non-object"""		397097	1					
ANR	397294	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		397097	0					
ANR	397295	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		397097	1					
ANR	397296	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38733:8:1226818:1226854	397097	0	True				
ANR	397297	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		397097	0					
ANR	397298	Callee	UNEXPECTED		397097	0					
ANR	397299	Identifier	UNEXPECTED		397097	0					
ANR	397300	ArgumentList	RETURN_VALUE_USED ( opline )		397097	1					
ANR	397301	Argument	RETURN_VALUE_USED ( opline )		397097	0					
ANR	397302	CallExpression	RETURN_VALUE_USED ( opline )		397097	0					
ANR	397303	Callee	RETURN_VALUE_USED		397097	0					
ANR	397304	Identifier	RETURN_VALUE_USED		397097	0					
ANR	397305	ArgumentList	opline		397097	1					
ANR	397306	Argument	opline		397097	0					
ANR	397307	Identifier	opline		397097	0					
ANR	397308	CompoundStatement		30:47:937:937	397097	1					
ANR	397309	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	38734:5:1226864:1226901	397097	0	True				
ANR	397310	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		397097	0					
ANR	397311	Callee	ZVAL_NULL		397097	0					
ANR	397312	Identifier	ZVAL_NULL		397097	0					
ANR	397313	ArgumentList	EX_VAR ( opline -> result . var )		397097	1					
ANR	397314	Argument	EX_VAR ( opline -> result . var )		397097	0					
ANR	397315	CallExpression	EX_VAR ( opline -> result . var )		397097	0					
ANR	397316	Callee	EX_VAR		397097	0					
ANR	397317	Identifier	EX_VAR		397097	0					
ANR	397318	ArgumentList	opline -> result . var		397097	1					
ANR	397319	Argument	opline -> result . var		397097	0					
ANR	397320	MemberAccess	opline -> result . var		397097	0					
ANR	397321	PtrMemberAccess	opline -> result		397097	0					
ANR	397322	Identifier	opline		397097	0					
ANR	397323	Identifier	result		397097	1					
ANR	397324	Identifier	var		397097	1					
ANR	397325	BreakStatement	break ;	38736:4:1226913:1226918	397097	2	True				
ANR	397326	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		397097	1					
ANR	397327	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	38742:6:1226992:1227227	397097	0	True				
ANR	397328	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		397097	0		&&			
ANR	397329	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		397097	0					
ANR	397330	Callee	EXPECTED		397097	0					
ANR	397331	Identifier	EXPECTED		397097	0					
ANR	397332	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397097	1					
ANR	397333	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397097	0					
ANR	397334	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397097	0					
ANR	397335	CallExpression	Z_OBJ_HT_P ( object )		397097	0					
ANR	397336	Callee	Z_OBJ_HT_P		397097	0					
ANR	397337	Identifier	Z_OBJ_HT_P		397097	0					
ANR	397338	ArgumentList	object		397097	1					
ANR	397339	Argument	object		397097	0					
ANR	397340	Identifier	object		397097	0					
ANR	397341	Identifier	get_property_ptr_ptr		397097	1					
ANR	397342	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		397097	1					
ANR	397343	Callee	EXPECTED		397097	0					
ANR	397344	Identifier	EXPECTED		397097	0					
ANR	397345	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		397097	1					
ANR	397346	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		397097	0					
ANR	397347	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		397097	0		!=			
ANR	397348	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		397097	0		=			
ANR	397349	Identifier	zptr		397097	0					
ANR	397350	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		397097	1					
ANR	397351	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397097	0					
ANR	397352	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397097	0					
ANR	397353	CallExpression	Z_OBJ_HT_P ( object )		397097	0					
ANR	397354	Callee	Z_OBJ_HT_P		397097	0					
ANR	397355	Identifier	Z_OBJ_HT_P		397097	0					
ANR	397356	ArgumentList	object		397097	1					
ANR	397357	Argument	object		397097	0					
ANR	397358	Identifier	object		397097	0					
ANR	397359	Identifier	get_property_ptr_ptr		397097	1					
ANR	397360	ArgumentList	object		397097	1					
ANR	397361	Argument	object		397097	0					
ANR	397362	Identifier	object		397097	0					
ANR	397363	Argument	property		397097	1					
ANR	397364	Identifier	property		397097	0					
ANR	397365	Argument	BP_VAR_RW		397097	2					
ANR	397366	Identifier	BP_VAR_RW		397097	0					
ANR	397367	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397097	3					
ANR	397368	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397097	0					
ANR	397369	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397097	0					
ANR	397370	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397097	0		==			
ANR	397371	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		397097	0		|			
ANR	397372	Identifier	IS_TMP_VAR		397097	0					
ANR	397373	Identifier	IS_VAR		397097	1					
ANR	397374	Identifier	IS_CONST		397097	1					
ANR	397375	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		397097	1					
ANR	397376	Callee	CACHE_ADDR		397097	0					
ANR	397377	Identifier	CACHE_ADDR		397097	0					
ANR	397378	ArgumentList	Z_CACHE_SLOT_P ( property )		397097	1					
ANR	397379	Argument	Z_CACHE_SLOT_P ( property )		397097	0					
ANR	397380	CallExpression	Z_CACHE_SLOT_P ( property )		397097	0					
ANR	397381	Callee	Z_CACHE_SLOT_P		397097	0					
ANR	397382	Identifier	Z_CACHE_SLOT_P		397097	0					
ANR	397383	ArgumentList	property		397097	1					
ANR	397384	Argument	property		397097	0					
ANR	397385	Identifier	property		397097	0					
ANR	397386	Identifier	NULL		397097	2					
ANR	397387	Identifier	NULL		397097	1					
ANR	397388	CompoundStatement		40:187:1310:1310	397097	1					
ANR	397389	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		397097	0					
ANR	397390	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	38745:7:1227240:1227274	397097	0	True				
ANR	397391	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		397097	0					
ANR	397392	Callee	EXPECTED		397097	0					
ANR	397393	Identifier	EXPECTED		397097	0					
ANR	397394	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		397097	1					
ANR	397395	Argument	Z_TYPE_P ( zptr ) == IS_LONG		397097	0					
ANR	397396	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		397097	0		==			
ANR	397397	CallExpression	Z_TYPE_P ( zptr )		397097	0					
ANR	397398	Callee	Z_TYPE_P		397097	0					
ANR	397399	Identifier	Z_TYPE_P		397097	0					
ANR	397400	ArgumentList	zptr		397097	1					
ANR	397401	Argument	zptr		397097	0					
ANR	397402	Identifier	zptr		397097	0					
ANR	397403	Identifier	IS_LONG		397097	1					
ANR	397404	CompoundStatement		42:44:1357:1357	397097	1					
ANR	397405	IfStatement	if ( inc )		397097	0					
ANR	397406	Condition	inc	38746:8:1227287:1227289	397097	0	True				
ANR	397407	Identifier	inc		397097	0					
ANR	397408	CompoundStatement		43:13:1372:1372	397097	1					
ANR	397409	ExpressionStatement	fast_long_increment_function ( zptr )	38747:5:1227299:1227333	397097	0	True				
ANR	397410	CallExpression	fast_long_increment_function ( zptr )		397097	0					
ANR	397411	Callee	fast_long_increment_function		397097	0					
ANR	397412	Identifier	fast_long_increment_function		397097	0					
ANR	397413	ArgumentList	zptr		397097	1					
ANR	397414	Argument	zptr		397097	0					
ANR	397415	Identifier	zptr		397097	0					
ANR	397416	ElseStatement	else		397097	0					
ANR	397417	CompoundStatement		45:11:1426:1426	397097	0					
ANR	397418	ExpressionStatement	fast_long_decrement_function ( zptr )	38749:5:1227353:1227387	397097	0	True				
ANR	397419	CallExpression	fast_long_decrement_function ( zptr )		397097	0					
ANR	397420	Callee	fast_long_decrement_function		397097	0					
ANR	397421	Identifier	fast_long_decrement_function		397097	0					
ANR	397422	ArgumentList	zptr		397097	1					
ANR	397423	Argument	zptr		397097	0					
ANR	397424	Identifier	zptr		397097	0					
ANR	397425	ElseStatement	else		397097	0					
ANR	397426	CompoundStatement		48:10:1485:1485	397097	0					
ANR	397427	ExpressionStatement	ZVAL_DEREF ( zptr )	38752:4:1227411:1227427	397097	0	True				
ANR	397428	CallExpression	ZVAL_DEREF ( zptr )		397097	0					
ANR	397429	Callee	ZVAL_DEREF		397097	0					
ANR	397430	Identifier	ZVAL_DEREF		397097	0					
ANR	397431	ArgumentList	zptr		397097	1					
ANR	397432	Argument	zptr		397097	0					
ANR	397433	Identifier	zptr		397097	0					
ANR	397434	ExpressionStatement	SEPARATE_ZVAL_NOREF ( zptr )	38753:4:1227433:1227458	397097	1	True				
ANR	397435	CallExpression	SEPARATE_ZVAL_NOREF ( zptr )		397097	0					
ANR	397436	Callee	SEPARATE_ZVAL_NOREF		397097	0					
ANR	397437	Identifier	SEPARATE_ZVAL_NOREF		397097	0					
ANR	397438	ArgumentList	zptr		397097	1					
ANR	397439	Argument	zptr		397097	0					
ANR	397440	Identifier	zptr		397097	0					
ANR	397441	IfStatement	if ( inc )		397097	2					
ANR	397442	Condition	inc	38755:8:1227469:1227471	397097	0	True				
ANR	397443	Identifier	inc		397097	0					
ANR	397444	CompoundStatement		52:13:1554:1554	397097	1					
ANR	397445	ExpressionStatement	increment_function ( zptr )	38756:5:1227481:1227505	397097	0	True				
ANR	397446	CallExpression	increment_function ( zptr )		397097	0					
ANR	397447	Callee	increment_function		397097	0					
ANR	397448	Identifier	increment_function		397097	0					
ANR	397449	ArgumentList	zptr		397097	1					
ANR	397450	Argument	zptr		397097	0					
ANR	397451	Identifier	zptr		397097	0					
ANR	397452	ElseStatement	else		397097	0					
ANR	397453	CompoundStatement		54:11:1598:1598	397097	0					
ANR	397454	ExpressionStatement	decrement_function ( zptr )	38758:5:1227525:1227549	397097	0	True				
ANR	397455	CallExpression	decrement_function ( zptr )		397097	0					
ANR	397456	Callee	decrement_function		397097	0					
ANR	397457	Identifier	decrement_function		397097	0					
ANR	397458	ArgumentList	zptr		397097	1					
ANR	397459	Argument	zptr		397097	0					
ANR	397460	Identifier	zptr		397097	0					
ANR	397461	IfStatement	if ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) )		397097	1					
ANR	397462	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )	38761:7:1227569:1227605	397097	0	True				
ANR	397463	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		397097	0					
ANR	397464	Callee	UNEXPECTED		397097	0					
ANR	397465	Identifier	UNEXPECTED		397097	0					
ANR	397466	ArgumentList	RETURN_VALUE_USED ( opline )		397097	1					
ANR	397467	Argument	RETURN_VALUE_USED ( opline )		397097	0					
ANR	397468	CallExpression	RETURN_VALUE_USED ( opline )		397097	0					
ANR	397469	Callee	RETURN_VALUE_USED		397097	0					
ANR	397470	Identifier	RETURN_VALUE_USED		397097	0					
ANR	397471	ArgumentList	opline		397097	1					
ANR	397472	Argument	opline		397097	0					
ANR	397473	Identifier	opline		397097	0					
ANR	397474	CompoundStatement		58:46:1688:1688	397097	1					
ANR	397475	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"	38762:4:1227614:1227657	397097	0	True				
ANR	397476	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , zptr )"		397097	0					
ANR	397477	Callee	ZVAL_COPY		397097	0					
ANR	397478	Identifier	ZVAL_COPY		397097	0					
ANR	397479	ArgumentList	EX_VAR ( opline -> result . var )		397097	1					
ANR	397480	Argument	EX_VAR ( opline -> result . var )		397097	0					
ANR	397481	CallExpression	EX_VAR ( opline -> result . var )		397097	0					
ANR	397482	Callee	EX_VAR		397097	0					
ANR	397483	Identifier	EX_VAR		397097	0					
ANR	397484	ArgumentList	opline -> result . var		397097	1					
ANR	397485	Argument	opline -> result . var		397097	0					
ANR	397486	MemberAccess	opline -> result . var		397097	0					
ANR	397487	PtrMemberAccess	opline -> result		397097	0					
ANR	397488	Identifier	opline		397097	0					
ANR	397489	Identifier	result		397097	1					
ANR	397490	Identifier	var		397097	1					
ANR	397491	Argument	zptr		397097	1					
ANR	397492	Identifier	zptr		397097	0					
ANR	397493	ElseStatement	else		397097	0					
ANR	397494	CompoundStatement		61:9:1753:1753	397097	0					
ANR	397495	ExpressionStatement	"zend_pre_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"	38765:3:1227678:1227896	397097	0	True				
ANR	397496	CallExpression	"zend_pre_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , ( UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL ) )"		397097	0					
ANR	397497	Callee	zend_pre_incdec_overloaded_property		397097	0					
ANR	397498	Identifier	zend_pre_incdec_overloaded_property		397097	0					
ANR	397499	ArgumentList	object		397097	1					
ANR	397500	Argument	object		397097	0					
ANR	397501	Identifier	object		397097	0					
ANR	397502	Argument	property		397097	1					
ANR	397503	Identifier	property		397097	0					
ANR	397504	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397097	2					
ANR	397505	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397097	0					
ANR	397506	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397097	0					
ANR	397507	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397097	0		==			
ANR	397508	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		397097	0		|			
ANR	397509	Identifier	IS_TMP_VAR		397097	0					
ANR	397510	Identifier	IS_VAR		397097	1					
ANR	397511	Identifier	IS_CONST		397097	1					
ANR	397512	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		397097	1					
ANR	397513	Callee	CACHE_ADDR		397097	0					
ANR	397514	Identifier	CACHE_ADDR		397097	0					
ANR	397515	ArgumentList	Z_CACHE_SLOT_P ( property )		397097	1					
ANR	397516	Argument	Z_CACHE_SLOT_P ( property )		397097	0					
ANR	397517	CallExpression	Z_CACHE_SLOT_P ( property )		397097	0					
ANR	397518	Callee	Z_CACHE_SLOT_P		397097	0					
ANR	397519	Identifier	Z_CACHE_SLOT_P		397097	0					
ANR	397520	ArgumentList	property		397097	1					
ANR	397521	Argument	property		397097	0					
ANR	397522	Identifier	property		397097	0					
ANR	397523	Identifier	NULL		397097	2					
ANR	397524	Argument	inc		397097	3					
ANR	397525	Identifier	inc		397097	0					
ANR	397526	Argument	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		397097	4					
ANR	397527	ConditionalExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) ) ? EX_VAR ( opline -> result . var ) : NULL		397097	0					
ANR	397528	Condition	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		397097	0					
ANR	397529	CallExpression	UNEXPECTED ( RETURN_VALUE_USED ( opline ) )		397097	0					
ANR	397530	Callee	UNEXPECTED		397097	0					
ANR	397531	Identifier	UNEXPECTED		397097	0					
ANR	397532	ArgumentList	RETURN_VALUE_USED ( opline )		397097	1					
ANR	397533	Argument	RETURN_VALUE_USED ( opline )		397097	0					
ANR	397534	CallExpression	RETURN_VALUE_USED ( opline )		397097	0					
ANR	397535	Callee	RETURN_VALUE_USED		397097	0					
ANR	397536	Identifier	RETURN_VALUE_USED		397097	0					
ANR	397537	ArgumentList	opline		397097	1					
ANR	397538	Argument	opline		397097	0					
ANR	397539	Identifier	opline		397097	0					
ANR	397540	CallExpression	EX_VAR ( opline -> result . var )		397097	1					
ANR	397541	Callee	EX_VAR		397097	0					
ANR	397542	Identifier	EX_VAR		397097	0					
ANR	397543	ArgumentList	opline -> result . var		397097	1					
ANR	397544	Argument	opline -> result . var		397097	0					
ANR	397545	MemberAccess	opline -> result . var		397097	0					
ANR	397546	PtrMemberAccess	opline -> result		397097	0					
ANR	397547	Identifier	opline		397097	0					
ANR	397548	Identifier	result		397097	1					
ANR	397549	Identifier	var		397097	1					
ANR	397550	Identifier	NULL		397097	2					
ANR	397551	Condition	0	38767:10:1227912:1227912	397097	1	True				
ANR	397552	PrimaryExpression	0		397097	0					
ANR	397553	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38769:1:1227918:1227946	397097	10	True				
ANR	397554	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		397097	0					
ANR	397555	Callee	zval_ptr_dtor_nogc		397097	0					
ANR	397556	Identifier	zval_ptr_dtor_nogc		397097	0					
ANR	397557	ArgumentList	free_op2		397097	1					
ANR	397558	Argument	free_op2		397097	0					
ANR	397559	Identifier	free_op2		397097	0					
ANR	397560	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	38771:1:1227950:1227987	397097	11	True				
ANR	397561	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		397097	0					
ANR	397562	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		397097	0					
ANR	397563	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		397097	0					
ANR	397564	ArgumentList			397097	1					
ANR	397565	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		397097	1					
ANR	397566	Identifier	zend_pre_incdec_property_helper_SPEC_CV_TMPVAR		397097	2					
ANR	397567	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		397097	3					
ANR	397568	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	38703:92:1225882:1225916	397097	0	True				
ANR	397569	ParameterType	int inc		397097	0					
ANR	397570	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		397097	1					
ANR	397571	CFGEntryNode	ENTRY		397097		True				
ANR	397572	CFGExitNode	EXIT		397097		True				
ANR	397573	Symbol	opline -> op1		397097						
ANR	397574	Symbol	opline -> op2		397097						
ANR	397575	Symbol	opline -> op2 . var		397097						
ANR	397576	Symbol	IS_CV		397097						
ANR	397577	Symbol	Z_OBJ_P		397097						
ANR	397578	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397097						
ANR	397579	Symbol	free_op2		397097						
ANR	397580	Symbol	zptr		397097						
ANR	397581	Symbol	execute_data		397097						
ANR	397582	Symbol	opline -> result		397097						
ANR	397583	Symbol	UNEXPECTED		397097						
ANR	397584	Symbol	& free_op2		397097						
ANR	397585	Symbol	E_WARNING		397097						
ANR	397586	Symbol	make_real_object		397097						
ANR	397587	Symbol	RETURN_VALUE_USED		397097						
ANR	397588	Symbol	opline		397097						
ANR	397589	Symbol	IS_LONG		397097						
ANR	397590	Symbol	property		397097						
ANR	397591	Symbol	opline -> op1 . var		397097						
ANR	397592	Symbol	IS_TMP_VAR		397097						
ANR	397593	Symbol	inc		397097						
ANR	397594	Symbol	BP_VAR_RW		397097						
ANR	397595	Symbol	IS_CONST		397097						
ANR	397596	Symbol	NULL		397097						
ANR	397597	Symbol	Z_CACHE_SLOT_P		397097						
ANR	397598	Symbol	Z_TYPE_P		397097						
ANR	397599	Symbol	* Z_OBJ_HT_P		397097						
ANR	397600	Symbol	CACHE_ADDR		397097						
ANR	397601	Symbol	* opline		397097						
ANR	397602	Symbol	_get_zval_ptr_var		397097						
ANR	397603	Symbol	Z_OBJ_HT_P		397097						
ANR	397604	Symbol	_get_zval_ptr_cv_BP_VAR_RW		397097						
ANR	397605	Symbol	EX_VAR		397097						
ANR	397606	Symbol	IS_OBJECT		397097						
ANR	397607	Symbol	IS_VAR		397097						
ANR	397608	Symbol	EXPECTED		397097						
ANR	397609	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		397097						
ANR	397610	Symbol	opline -> result . var		397097						
ANR	397611	Symbol	object		397097						
ANR	397612	Symbol	IS_UNUSED		397097						
ANR	397613	Function	zend_post_incdec_property_helper_SPEC_CV_TMPVAR	38784:0:1228440:1230542							
ANR	397614	FunctionDef	zend_post_incdec_property_helper_SPEC_CV_TMPVAR (int inc ZEND_OPCODE_HANDLER_ARGS_DC)		397613	0					
ANR	397615	CompoundStatement		38785:0:1228570:1230542	397613	0					
ANR	397616	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op2 ;	38786:1:1228573:1228606	397613	0	True				
ANR	397617	IdentifierDecl	free_op2		397613	0					
ANR	397618	IdentifierDeclType	USE_OPLINE zend_free_op		397613	0					
ANR	397619	Identifier	free_op2		397613	1					
ANR	397620	IdentifierDeclStatement	zval * object ;	38788:1:1228609:1228621	397613	1	True				
ANR	397621	IdentifierDecl	* object		397613	0					
ANR	397622	IdentifierDeclType	zval *		397613	0					
ANR	397623	Identifier	object		397613	1					
ANR	397624	IdentifierDeclStatement	zval * property ;	38789:1:1228624:1228638	397613	2	True				
ANR	397625	IdentifierDecl	* property		397613	0					
ANR	397626	IdentifierDeclType	zval *		397613	0					
ANR	397627	Identifier	property		397613	1					
ANR	397628	IdentifierDeclStatement	zval * zptr ;	38790:1:1228641:1228651	397613	3	True				
ANR	397629	IdentifierDecl	* zptr		397613	0					
ANR	397630	IdentifierDeclType	zval *		397613	0					
ANR	397631	Identifier	zptr		397613	1					
ANR	397632	ExpressionStatement	SAVE_OPLINE ( )	38792:1:1228655:1228668	397613	4	True				
ANR	397633	CallExpression	SAVE_OPLINE ( )		397613	0					
ANR	397634	Callee	SAVE_OPLINE		397613	0					
ANR	397635	Identifier	SAVE_OPLINE		397613	0					
ANR	397636	ArgumentList			397613	1					
ANR	397637	ExpressionStatement	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"	38793:1:1228671:1228737	397613	5	True				
ANR	397638	AssignmentExpression	"object = _get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		397613	0		=			
ANR	397639	Identifier	object		397613	0					
ANR	397640	CallExpression	"_get_zval_ptr_cv_BP_VAR_RW ( execute_data , opline -> op1 . var )"		397613	1					
ANR	397641	Callee	_get_zval_ptr_cv_BP_VAR_RW		397613	0					
ANR	397642	Identifier	_get_zval_ptr_cv_BP_VAR_RW		397613	0					
ANR	397643	ArgumentList	execute_data		397613	1					
ANR	397644	Argument	execute_data		397613	0					
ANR	397645	Identifier	execute_data		397613	0					
ANR	397646	Argument	opline -> op1 . var		397613	1					
ANR	397647	MemberAccess	opline -> op1 . var		397613	0					
ANR	397648	PtrMemberAccess	opline -> op1		397613	0					
ANR	397649	Identifier	opline		397613	0					
ANR	397650	Identifier	op1		397613	1					
ANR	397651	Identifier	var		397613	1					
ANR	397652	IfStatement	if ( IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL ) )		397613	6					
ANR	397653	Condition	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )	38795:5:1228745:1228801	397613	0	True				
ANR	397654	AndExpression	IS_CV == IS_UNUSED && UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		397613	0		&&			
ANR	397655	EqualityExpression	IS_CV == IS_UNUSED		397613	0		==			
ANR	397656	Identifier	IS_CV		397613	0					
ANR	397657	Identifier	IS_UNUSED		397613	1					
ANR	397658	CallExpression	UNEXPECTED ( Z_OBJ_P ( object ) == NULL )		397613	1					
ANR	397659	Callee	UNEXPECTED		397613	0					
ANR	397660	Identifier	UNEXPECTED		397613	0					
ANR	397661	ArgumentList	Z_OBJ_P ( object ) == NULL		397613	1					
ANR	397662	Argument	Z_OBJ_P ( object ) == NULL		397613	0					
ANR	397663	EqualityExpression	Z_OBJ_P ( object ) == NULL		397613	0		==			
ANR	397664	CallExpression	Z_OBJ_P ( object )		397613	0					
ANR	397665	Callee	Z_OBJ_P		397613	0					
ANR	397666	Identifier	Z_OBJ_P		397613	0					
ANR	397667	ArgumentList	object		397613	1					
ANR	397668	Argument	object		397613	0					
ANR	397669	Identifier	object		397613	0					
ANR	397670	Identifier	NULL		397613	1					
ANR	397671	CompoundStatement		11:64:233:233	397613	1					
ANR	397672	ExpressionStatement	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"	38796:2:1228808:1228872	397613	0	True				
ANR	397673	CallExpression	"zend_throw_error ( NULL , ""Using $this when not in object context"" )"		397613	0					
ANR	397674	Callee	zend_throw_error		397613	0					
ANR	397675	Identifier	zend_throw_error		397613	0					
ANR	397676	ArgumentList	NULL		397613	1					
ANR	397677	Argument	NULL		397613	0					
ANR	397678	Identifier	NULL		397613	0					
ANR	397679	Argument	"""Using $this when not in object context"""		397613	1					
ANR	397680	PrimaryExpression	"""Using $this when not in object context"""		397613	0					
ANR	397681	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )	38797:2:1228876:1228919	397613	1	True				
ANR	397682	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( opline -> op2 . var ) )		397613	0					
ANR	397683	Callee	zval_ptr_dtor_nogc		397613	0					
ANR	397684	Identifier	zval_ptr_dtor_nogc		397613	0					
ANR	397685	ArgumentList	EX_VAR ( opline -> op2 . var )		397613	1					
ANR	397686	Argument	EX_VAR ( opline -> op2 . var )		397613	0					
ANR	397687	CallExpression	EX_VAR ( opline -> op2 . var )		397613	0					
ANR	397688	Callee	EX_VAR		397613	0					
ANR	397689	Identifier	EX_VAR		397613	0					
ANR	397690	ArgumentList	opline -> op2 . var		397613	1					
ANR	397691	Argument	opline -> op2 . var		397613	0					
ANR	397692	MemberAccess	opline -> op2 . var		397613	0					
ANR	397693	PtrMemberAccess	opline -> op2		397613	0					
ANR	397694	Identifier	opline		397613	0					
ANR	397695	Identifier	op2		397613	1					
ANR	397696	Identifier	var		397613	1					
ANR	397697	ExpressionStatement	HANDLE_EXCEPTION ( )	38798:2:1228923:1228941	397613	2	True				
ANR	397698	CallExpression	HANDLE_EXCEPTION ( )		397613	0					
ANR	397699	Callee	HANDLE_EXCEPTION		397613	0					
ANR	397700	Identifier	HANDLE_EXCEPTION		397613	0					
ANR	397701	ArgumentList			397613	1					
ANR	397702	ExpressionStatement	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"	38801:1:1228948:1229018	397613	7	True				
ANR	397703	AssignmentExpression	"property = _get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		397613	0		=			
ANR	397704	Identifier	property		397613	0					
ANR	397705	CallExpression	"_get_zval_ptr_var ( opline -> op2 . var , execute_data , & free_op2 )"		397613	1					
ANR	397706	Callee	_get_zval_ptr_var		397613	0					
ANR	397707	Identifier	_get_zval_ptr_var		397613	0					
ANR	397708	ArgumentList	opline -> op2 . var		397613	1					
ANR	397709	Argument	opline -> op2 . var		397613	0					
ANR	397710	MemberAccess	opline -> op2 . var		397613	0					
ANR	397711	PtrMemberAccess	opline -> op2		397613	0					
ANR	397712	Identifier	opline		397613	0					
ANR	397713	Identifier	op2		397613	1					
ANR	397714	Identifier	var		397613	1					
ANR	397715	Argument	execute_data		397613	1					
ANR	397716	Identifier	execute_data		397613	0					
ANR	397717	Argument	& free_op2		397613	2					
ANR	397718	UnaryOperationExpression	& free_op2		397613	0					
ANR	397719	UnaryOperator	&		397613	0					
ANR	397720	Identifier	free_op2		397613	1					
ANR	397721	IfStatement	if ( IS_CV == IS_VAR && UNEXPECTED ( object == NULL ) )		397613	8					
ANR	397722	Condition	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )	38803:5:1229026:1229070	397613	0	True				
ANR	397723	AndExpression	IS_CV == IS_VAR && UNEXPECTED ( object == NULL )		397613	0		&&			
ANR	397724	EqualityExpression	IS_CV == IS_VAR		397613	0		==			
ANR	397725	Identifier	IS_CV		397613	0					
ANR	397726	Identifier	IS_VAR		397613	1					
ANR	397727	CallExpression	UNEXPECTED ( object == NULL )		397613	1					
ANR	397728	Callee	UNEXPECTED		397613	0					
ANR	397729	Identifier	UNEXPECTED		397613	0					
ANR	397730	ArgumentList	object == NULL		397613	1					
ANR	397731	Argument	object == NULL		397613	0					
ANR	397732	EqualityExpression	object == NULL		397613	0		==			
ANR	397733	Identifier	object		397613	0					
ANR	397734	Identifier	NULL		397613	1					
ANR	397735	CompoundStatement		19:52:502:502	397613	1					
ANR	397736	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"	38804:2:1229077:1229167	397613	0	True				
ANR	397737	CallExpression	"zend_throw_error ( NULL , ""Cannot increment/decrement overloaded objects nor string offsets"" )"		397613	0					
ANR	397738	Callee	zend_throw_error		397613	0					
ANR	397739	Identifier	zend_throw_error		397613	0					
ANR	397740	ArgumentList	NULL		397613	1					
ANR	397741	Argument	NULL		397613	0					
ANR	397742	Identifier	NULL		397613	0					
ANR	397743	Argument	"""Cannot increment/decrement overloaded objects nor string offsets"""		397613	1					
ANR	397744	PrimaryExpression	"""Cannot increment/decrement overloaded objects nor string offsets"""		397613	0					
ANR	397745	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38805:2:1229171:1229199	397613	1	True				
ANR	397746	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		397613	0					
ANR	397747	Callee	zval_ptr_dtor_nogc		397613	0					
ANR	397748	Identifier	zval_ptr_dtor_nogc		397613	0					
ANR	397749	ArgumentList	free_op2		397613	1					
ANR	397750	Argument	free_op2		397613	0					
ANR	397751	Identifier	free_op2		397613	0					
ANR	397752	ExpressionStatement	HANDLE_EXCEPTION ( )	38806:2:1229203:1229221	397613	2	True				
ANR	397753	CallExpression	HANDLE_EXCEPTION ( )		397613	0					
ANR	397754	Callee	HANDLE_EXCEPTION		397613	0					
ANR	397755	Identifier	HANDLE_EXCEPTION		397613	0					
ANR	397756	ArgumentList			397613	1					
ANR	397757	DoStatement	do		397613	9					
ANR	397758	CompoundStatement		25:4:660:660	397613	0					
ANR	397759	IfStatement	if ( IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		397613	0					
ANR	397760	Condition	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	38810:6:1229239:1229301	397613	0	True				
ANR	397761	AndExpression	IS_CV != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		397613	0		&&			
ANR	397762	EqualityExpression	IS_CV != IS_UNUSED		397613	0		!=			
ANR	397763	Identifier	IS_CV		397613	0					
ANR	397764	Identifier	IS_UNUSED		397613	1					
ANR	397765	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		397613	1					
ANR	397766	Callee	UNEXPECTED		397613	0					
ANR	397767	Identifier	UNEXPECTED		397613	0					
ANR	397768	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		397613	1					
ANR	397769	Argument	Z_TYPE_P ( object ) != IS_OBJECT		397613	0					
ANR	397770	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		397613	0		!=			
ANR	397771	CallExpression	Z_TYPE_P ( object )		397613	0					
ANR	397772	Callee	Z_TYPE_P		397613	0					
ANR	397773	Identifier	Z_TYPE_P		397613	0					
ANR	397774	ArgumentList	object		397613	1					
ANR	397775	Argument	object		397613	0					
ANR	397776	Identifier	object		397613	0					
ANR	397777	Identifier	IS_OBJECT		397613	1					
ANR	397778	CompoundStatement		26:71:733:733	397613	1					
ANR	397779	ExpressionStatement	ZVAL_DEREF ( object )	38811:3:1229309:1229327	397613	0	True				
ANR	397780	CallExpression	ZVAL_DEREF ( object )		397613	0					
ANR	397781	Callee	ZVAL_DEREF		397613	0					
ANR	397782	Identifier	ZVAL_DEREF		397613	0					
ANR	397783	ArgumentList	object		397613	1					
ANR	397784	Argument	object		397613	0					
ANR	397785	Identifier	object		397613	0					
ANR	397786	IfStatement	if ( UNEXPECTED ( ! make_real_object ( object ) ) )		397613	1					
ANR	397787	Condition	UNEXPECTED ( ! make_real_object ( object ) )	38812:7:1229336:1229372	397613	0	True				
ANR	397788	CallExpression	UNEXPECTED ( ! make_real_object ( object ) )		397613	0					
ANR	397789	Callee	UNEXPECTED		397613	0					
ANR	397790	Identifier	UNEXPECTED		397613	0					
ANR	397791	ArgumentList	! make_real_object ( object )		397613	1					
ANR	397792	Argument	! make_real_object ( object )		397613	0					
ANR	397793	UnaryOperationExpression	! make_real_object ( object )		397613	0					
ANR	397794	UnaryOperator	!		397613	0					
ANR	397795	CallExpression	make_real_object ( object )		397613	1					
ANR	397796	Callee	make_real_object		397613	0					
ANR	397797	Identifier	make_real_object		397613	0					
ANR	397798	ArgumentList	object		397613	1					
ANR	397799	Argument	object		397613	0					
ANR	397800	Identifier	object		397613	0					
ANR	397801	CompoundStatement		28:46:804:804	397613	1					
ANR	397802	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	38813:4:1229381:1229459	397613	0	True				
ANR	397803	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		397613	0					
ANR	397804	Callee	zend_error		397613	0					
ANR	397805	Identifier	zend_error		397613	0					
ANR	397806	ArgumentList	E_WARNING		397613	1					
ANR	397807	Argument	E_WARNING		397613	0					
ANR	397808	Identifier	E_WARNING		397613	0					
ANR	397809	Argument	"""Attempt to increment/decrement property of non-object"""		397613	1					
ANR	397810	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		397613	0					
ANR	397811	ExpressionStatement	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )	38814:4:1229465:1229502	397613	1	True				
ANR	397812	CallExpression	ZVAL_NULL ( EX_VAR ( opline -> result . var ) )		397613	0					
ANR	397813	Callee	ZVAL_NULL		397613	0					
ANR	397814	Identifier	ZVAL_NULL		397613	0					
ANR	397815	ArgumentList	EX_VAR ( opline -> result . var )		397613	1					
ANR	397816	Argument	EX_VAR ( opline -> result . var )		397613	0					
ANR	397817	CallExpression	EX_VAR ( opline -> result . var )		397613	0					
ANR	397818	Callee	EX_VAR		397613	0					
ANR	397819	Identifier	EX_VAR		397613	0					
ANR	397820	ArgumentList	opline -> result . var		397613	1					
ANR	397821	Argument	opline -> result . var		397613	0					
ANR	397822	MemberAccess	opline -> result . var		397613	0					
ANR	397823	PtrMemberAccess	opline -> result		397613	0					
ANR	397824	Identifier	opline		397613	0					
ANR	397825	Identifier	result		397613	1					
ANR	397826	Identifier	var		397613	1					
ANR	397827	BreakStatement	break ;	38815:4:1229508:1229513	397613	2	True				
ANR	397828	IfStatement	"if ( EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL ) )"		397613	1					
ANR	397829	Condition	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"	38821:6:1229587:1229822	397613	0	True				
ANR	397830	AndExpression	"EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ) && EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		397613	0		&&			
ANR	397831	CallExpression	EXPECTED ( Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr )		397613	0					
ANR	397832	Callee	EXPECTED		397613	0					
ANR	397833	Identifier	EXPECTED		397613	0					
ANR	397834	ArgumentList	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397613	1					
ANR	397835	Argument	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397613	0					
ANR	397836	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397613	0					
ANR	397837	CallExpression	Z_OBJ_HT_P ( object )		397613	0					
ANR	397838	Callee	Z_OBJ_HT_P		397613	0					
ANR	397839	Identifier	Z_OBJ_HT_P		397613	0					
ANR	397840	ArgumentList	object		397613	1					
ANR	397841	Argument	object		397613	0					
ANR	397842	Identifier	object		397613	0					
ANR	397843	Identifier	get_property_ptr_ptr		397613	1					
ANR	397844	CallExpression	"EXPECTED ( ( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL )"		397613	1					
ANR	397845	Callee	EXPECTED		397613	0					
ANR	397846	Identifier	EXPECTED		397613	0					
ANR	397847	ArgumentList	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		397613	1					
ANR	397848	Argument	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		397613	0					
ANR	397849	EqualityExpression	"( zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) ) ) != NULL"		397613	0		!=			
ANR	397850	AssignmentExpression	"zptr = Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		397613	0		=			
ANR	397851	Identifier	zptr		397613	0					
ANR	397852	CallExpression	"Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr ( object , property , BP_VAR_RW , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) )"		397613	1					
ANR	397853	Callee	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397613	0					
ANR	397854	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397613	0					
ANR	397855	CallExpression	Z_OBJ_HT_P ( object )		397613	0					
ANR	397856	Callee	Z_OBJ_HT_P		397613	0					
ANR	397857	Identifier	Z_OBJ_HT_P		397613	0					
ANR	397858	ArgumentList	object		397613	1					
ANR	397859	Argument	object		397613	0					
ANR	397860	Identifier	object		397613	0					
ANR	397861	Identifier	get_property_ptr_ptr		397613	1					
ANR	397862	ArgumentList	object		397613	1					
ANR	397863	Argument	object		397613	0					
ANR	397864	Identifier	object		397613	0					
ANR	397865	Argument	property		397613	1					
ANR	397866	Identifier	property		397613	0					
ANR	397867	Argument	BP_VAR_RW		397613	2					
ANR	397868	Identifier	BP_VAR_RW		397613	0					
ANR	397869	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397613	3					
ANR	397870	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397613	0					
ANR	397871	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397613	0					
ANR	397872	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397613	0		==			
ANR	397873	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		397613	0		|			
ANR	397874	Identifier	IS_TMP_VAR		397613	0					
ANR	397875	Identifier	IS_VAR		397613	1					
ANR	397876	Identifier	IS_CONST		397613	1					
ANR	397877	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		397613	1					
ANR	397878	Callee	CACHE_ADDR		397613	0					
ANR	397879	Identifier	CACHE_ADDR		397613	0					
ANR	397880	ArgumentList	Z_CACHE_SLOT_P ( property )		397613	1					
ANR	397881	Argument	Z_CACHE_SLOT_P ( property )		397613	0					
ANR	397882	CallExpression	Z_CACHE_SLOT_P ( property )		397613	0					
ANR	397883	Callee	Z_CACHE_SLOT_P		397613	0					
ANR	397884	Identifier	Z_CACHE_SLOT_P		397613	0					
ANR	397885	ArgumentList	property		397613	1					
ANR	397886	Argument	property		397613	0					
ANR	397887	Identifier	property		397613	0					
ANR	397888	Identifier	NULL		397613	2					
ANR	397889	Identifier	NULL		397613	1					
ANR	397890	CompoundStatement		38:187:1254:1254	397613	1					
ANR	397891	IfStatement	if ( EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG ) )		397613	0					
ANR	397892	Condition	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )	38824:7:1229835:1229869	397613	0	True				
ANR	397893	CallExpression	EXPECTED ( Z_TYPE_P ( zptr ) == IS_LONG )		397613	0					
ANR	397894	Callee	EXPECTED		397613	0					
ANR	397895	Identifier	EXPECTED		397613	0					
ANR	397896	ArgumentList	Z_TYPE_P ( zptr ) == IS_LONG		397613	1					
ANR	397897	Argument	Z_TYPE_P ( zptr ) == IS_LONG		397613	0					
ANR	397898	EqualityExpression	Z_TYPE_P ( zptr ) == IS_LONG		397613	0		==			
ANR	397899	CallExpression	Z_TYPE_P ( zptr )		397613	0					
ANR	397900	Callee	Z_TYPE_P		397613	0					
ANR	397901	Identifier	Z_TYPE_P		397613	0					
ANR	397902	ArgumentList	zptr		397613	1					
ANR	397903	Argument	zptr		397613	0					
ANR	397904	Identifier	zptr		397613	0					
ANR	397905	Identifier	IS_LONG		397613	1					
ANR	397906	CompoundStatement		40:44:1301:1301	397613	1					
ANR	397907	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	38825:4:1229878:1229927	397613	0	True				
ANR	397908	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		397613	0					
ANR	397909	Callee	ZVAL_COPY_VALUE		397613	0					
ANR	397910	Identifier	ZVAL_COPY_VALUE		397613	0					
ANR	397911	ArgumentList	EX_VAR ( opline -> result . var )		397613	1					
ANR	397912	Argument	EX_VAR ( opline -> result . var )		397613	0					
ANR	397913	CallExpression	EX_VAR ( opline -> result . var )		397613	0					
ANR	397914	Callee	EX_VAR		397613	0					
ANR	397915	Identifier	EX_VAR		397613	0					
ANR	397916	ArgumentList	opline -> result . var		397613	1					
ANR	397917	Argument	opline -> result . var		397613	0					
ANR	397918	MemberAccess	opline -> result . var		397613	0					
ANR	397919	PtrMemberAccess	opline -> result		397613	0					
ANR	397920	Identifier	opline		397613	0					
ANR	397921	Identifier	result		397613	1					
ANR	397922	Identifier	var		397613	1					
ANR	397923	Argument	zptr		397613	1					
ANR	397924	Identifier	zptr		397613	0					
ANR	397925	IfStatement	if ( inc )		397613	1					
ANR	397926	Condition	inc	38826:8:1229937:1229939	397613	0	True				
ANR	397927	Identifier	inc		397613	0					
ANR	397928	CompoundStatement		42:13:1371:1371	397613	1					
ANR	397929	ExpressionStatement	fast_long_increment_function ( zptr )	38827:5:1229949:1229983	397613	0	True				
ANR	397930	CallExpression	fast_long_increment_function ( zptr )		397613	0					
ANR	397931	Callee	fast_long_increment_function		397613	0					
ANR	397932	Identifier	fast_long_increment_function		397613	0					
ANR	397933	ArgumentList	zptr		397613	1					
ANR	397934	Argument	zptr		397613	0					
ANR	397935	Identifier	zptr		397613	0					
ANR	397936	ElseStatement	else		397613	0					
ANR	397937	CompoundStatement		44:11:1425:1425	397613	0					
ANR	397938	ExpressionStatement	fast_long_decrement_function ( zptr )	38829:5:1230003:1230037	397613	0	True				
ANR	397939	CallExpression	fast_long_decrement_function ( zptr )		397613	0					
ANR	397940	Callee	fast_long_decrement_function		397613	0					
ANR	397941	Identifier	fast_long_decrement_function		397613	0					
ANR	397942	ArgumentList	zptr		397613	1					
ANR	397943	Argument	zptr		397613	0					
ANR	397944	Identifier	zptr		397613	0					
ANR	397945	ElseStatement	else		397613	0					
ANR	397946	CompoundStatement		47:10:1484:1484	397613	0					
ANR	397947	ExpressionStatement	ZVAL_DEREF ( zptr )	38832:4:1230061:1230077	397613	0	True				
ANR	397948	CallExpression	ZVAL_DEREF ( zptr )		397613	0					
ANR	397949	Callee	ZVAL_DEREF		397613	0					
ANR	397950	Identifier	ZVAL_DEREF		397613	0					
ANR	397951	ArgumentList	zptr		397613	1					
ANR	397952	Argument	zptr		397613	0					
ANR	397953	Identifier	zptr		397613	0					
ANR	397954	ExpressionStatement	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"	38833:4:1230083:1230132	397613	1	True				
ANR	397955	CallExpression	"ZVAL_COPY_VALUE ( EX_VAR ( opline -> result . var ) , zptr )"		397613	0					
ANR	397956	Callee	ZVAL_COPY_VALUE		397613	0					
ANR	397957	Identifier	ZVAL_COPY_VALUE		397613	0					
ANR	397958	ArgumentList	EX_VAR ( opline -> result . var )		397613	1					
ANR	397959	Argument	EX_VAR ( opline -> result . var )		397613	0					
ANR	397960	CallExpression	EX_VAR ( opline -> result . var )		397613	0					
ANR	397961	Callee	EX_VAR		397613	0					
ANR	397962	Identifier	EX_VAR		397613	0					
ANR	397963	ArgumentList	opline -> result . var		397613	1					
ANR	397964	Argument	opline -> result . var		397613	0					
ANR	397965	MemberAccess	opline -> result . var		397613	0					
ANR	397966	PtrMemberAccess	opline -> result		397613	0					
ANR	397967	Identifier	opline		397613	0					
ANR	397968	Identifier	result		397613	1					
ANR	397969	Identifier	var		397613	1					
ANR	397970	Argument	zptr		397613	1					
ANR	397971	Identifier	zptr		397613	0					
ANR	397972	ExpressionStatement	zval_opt_copy_ctor ( zptr )	38834:4:1230138:1230162	397613	2	True				
ANR	397973	CallExpression	zval_opt_copy_ctor ( zptr )		397613	0					
ANR	397974	Callee	zval_opt_copy_ctor		397613	0					
ANR	397975	Identifier	zval_opt_copy_ctor		397613	0					
ANR	397976	ArgumentList	zptr		397613	1					
ANR	397977	Argument	zptr		397613	0					
ANR	397978	Identifier	zptr		397613	0					
ANR	397979	IfStatement	if ( inc )		397613	3					
ANR	397980	Condition	inc	38835:8:1230172:1230174	397613	0	True				
ANR	397981	Identifier	inc		397613	0					
ANR	397982	CompoundStatement		51:13:1606:1606	397613	1					
ANR	397983	ExpressionStatement	increment_function ( zptr )	38836:5:1230184:1230208	397613	0	True				
ANR	397984	CallExpression	increment_function ( zptr )		397613	0					
ANR	397985	Callee	increment_function		397613	0					
ANR	397986	Identifier	increment_function		397613	0					
ANR	397987	ArgumentList	zptr		397613	1					
ANR	397988	Argument	zptr		397613	0					
ANR	397989	Identifier	zptr		397613	0					
ANR	397990	ElseStatement	else		397613	0					
ANR	397991	CompoundStatement		53:11:1650:1650	397613	0					
ANR	397992	ExpressionStatement	decrement_function ( zptr )	38838:5:1230228:1230252	397613	0	True				
ANR	397993	CallExpression	decrement_function ( zptr )		397613	0					
ANR	397994	Callee	decrement_function		397613	0					
ANR	397995	Identifier	decrement_function		397613	0					
ANR	397996	ArgumentList	zptr		397613	1					
ANR	397997	Argument	zptr		397613	0					
ANR	397998	Identifier	zptr		397613	0					
ANR	397999	ElseStatement	else		397613	0					
ANR	398000	CompoundStatement		57:9:1703:1703	397613	0					
ANR	398001	ExpressionStatement	"zend_post_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"	38842:3:1230279:1230449	397613	0	True				
ANR	398002	CallExpression	"zend_post_incdec_overloaded_property ( object , property , ( ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL ) , inc , EX_VAR ( opline -> result . var ) )"		397613	0					
ANR	398003	Callee	zend_post_incdec_overloaded_property		397613	0					
ANR	398004	Identifier	zend_post_incdec_overloaded_property		397613	0					
ANR	398005	ArgumentList	object		397613	1					
ANR	398006	Argument	object		397613	0					
ANR	398007	Identifier	object		397613	0					
ANR	398008	Argument	property		397613	1					
ANR	398009	Identifier	property		397613	0					
ANR	398010	Argument	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397613	2					
ANR	398011	ConditionalExpression	( ( IS_TMP_VAR | IS_VAR ) == IS_CONST ) ? CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) ) : NULL		397613	0					
ANR	398012	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397613	0					
ANR	398013	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		397613	0		==			
ANR	398014	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		397613	0		|			
ANR	398015	Identifier	IS_TMP_VAR		397613	0					
ANR	398016	Identifier	IS_VAR		397613	1					
ANR	398017	Identifier	IS_CONST		397613	1					
ANR	398018	CallExpression	CACHE_ADDR ( Z_CACHE_SLOT_P ( property ) )		397613	1					
ANR	398019	Callee	CACHE_ADDR		397613	0					
ANR	398020	Identifier	CACHE_ADDR		397613	0					
ANR	398021	ArgumentList	Z_CACHE_SLOT_P ( property )		397613	1					
ANR	398022	Argument	Z_CACHE_SLOT_P ( property )		397613	0					
ANR	398023	CallExpression	Z_CACHE_SLOT_P ( property )		397613	0					
ANR	398024	Callee	Z_CACHE_SLOT_P		397613	0					
ANR	398025	Identifier	Z_CACHE_SLOT_P		397613	0					
ANR	398026	ArgumentList	property		397613	1					
ANR	398027	Argument	property		397613	0					
ANR	398028	Identifier	property		397613	0					
ANR	398029	Identifier	NULL		397613	2					
ANR	398030	Argument	inc		397613	3					
ANR	398031	Identifier	inc		397613	0					
ANR	398032	Argument	EX_VAR ( opline -> result . var )		397613	4					
ANR	398033	CallExpression	EX_VAR ( opline -> result . var )		397613	0					
ANR	398034	Callee	EX_VAR		397613	0					
ANR	398035	Identifier	EX_VAR		397613	0					
ANR	398036	ArgumentList	opline -> result . var		397613	1					
ANR	398037	Argument	opline -> result . var		397613	0					
ANR	398038	MemberAccess	opline -> result . var		397613	0					
ANR	398039	PtrMemberAccess	opline -> result		397613	0					
ANR	398040	Identifier	opline		397613	0					
ANR	398041	Identifier	result		397613	1					
ANR	398042	Identifier	var		397613	1					
ANR	398043	Condition	0	38844:10:1230465:1230465	397613	1	True				
ANR	398044	PrimaryExpression	0		397613	0					
ANR	398045	ExpressionStatement	zval_ptr_dtor_nogc ( free_op2 )	38846:1:1230471:1230499	397613	10	True				
ANR	398046	CallExpression	zval_ptr_dtor_nogc ( free_op2 )		397613	0					
ANR	398047	Callee	zval_ptr_dtor_nogc		397613	0					
ANR	398048	Identifier	zval_ptr_dtor_nogc		397613	0					
ANR	398049	ArgumentList	free_op2		397613	1					
ANR	398050	Argument	free_op2		397613	0					
ANR	398051	Identifier	free_op2		397613	0					
ANR	398052	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	38848:1:1230503:1230540	397613	11	True				
ANR	398053	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		397613	0					
ANR	398054	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		397613	0					
ANR	398055	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		397613	0					
ANR	398056	ArgumentList			397613	1					
ANR	398057	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		397613	1					
ANR	398058	Identifier	zend_post_incdec_property_helper_SPEC_CV_TMPVAR		397613	2					
ANR	398059	ParameterList	int inc ZEND_OPCODE_HANDLER_ARGS_DC		397613	3					
ANR	398060	Parameter	int inc ZEND_OPCODE_HANDLER_ARGS_DC	38784:93:1228533:1228567	397613	0	True				
ANR	398061	ParameterType	int inc		397613	0					
ANR	398062	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		397613	1					
ANR	398063	CFGEntryNode	ENTRY		397613		True				
ANR	398064	CFGExitNode	EXIT		397613		True				
ANR	398065	Symbol	opline -> op1		397613						
ANR	398066	Symbol	opline -> op2		397613						
ANR	398067	Symbol	opline -> op2 . var		397613						
ANR	398068	Symbol	IS_CV		397613						
ANR	398069	Symbol	Z_OBJ_P		397613						
ANR	398070	Symbol	Z_OBJ_HT_P ( object ) -> get_property_ptr_ptr		397613						
ANR	398071	Symbol	free_op2		397613						
ANR	398072	Symbol	zptr		397613						
ANR	398073	Symbol	execute_data		397613						
ANR	398074	Symbol	opline -> result		397613						
ANR	398075	Symbol	UNEXPECTED		397613						
ANR	398076	Symbol	& free_op2		397613						
ANR	398077	Symbol	E_WARNING		397613						
ANR	398078	Symbol	make_real_object		397613						
ANR	398079	Symbol	opline		397613						
ANR	398080	Symbol	IS_LONG		397613						
ANR	398081	Symbol	property		397613						
ANR	398082	Symbol	opline -> op1 . var		397613						
ANR	398083	Symbol	IS_TMP_VAR		397613						
ANR	398084	Symbol	inc		397613						
ANR	398085	Symbol	BP_VAR_RW		397613						
ANR	398086	Symbol	IS_CONST		397613						
ANR	398087	Symbol	NULL		397613						
ANR	398088	Symbol	Z_CACHE_SLOT_P		397613						
ANR	398089	Symbol	Z_TYPE_P		397613						
ANR	398090	Symbol	* Z_OBJ_HT_P		397613						
ANR	398091	Symbol	CACHE_ADDR		397613						
ANR	398092	Symbol	* opline		397613						
ANR	398093	Symbol	_get_zval_ptr_var		397613						
ANR	398094	Symbol	Z_OBJ_HT_P		397613						
ANR	398095	Symbol	_get_zval_ptr_cv_BP_VAR_RW		397613						
ANR	398096	Symbol	EX_VAR		397613						
ANR	398097	Symbol	IS_OBJECT		397613						
ANR	398098	Symbol	IS_VAR		397613						
ANR	398099	Symbol	EXPECTED		397613						
ANR	398100	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		397613						
ANR	398101	Symbol	opline -> result . var		397613						
ANR	398102	Symbol	object		397613						
ANR	398103	Symbol	IS_UNUSED		397613						
ANR	398104	DeclStmt									
ANR	398105	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398106	DeclStmt									
ANR	398107	Decl							zval	zval *	container
ANR	398108	DeclStmt									
ANR	398109	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398110	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398111	DeclStmt									
ANR	398112	Decl							zval	zval *	container
ANR	398113	DeclStmt									
ANR	398114	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398115	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398116	DeclStmt									
ANR	398117	Decl							zval	zval *	container
ANR	398118	DeclStmt									
ANR	398119	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398120	DeclStmt									
ANR	398121	Decl							zval	zval *	container
ANR	398122	DeclStmt									
ANR	398123	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	398124	DeclStmt									
ANR	398125	Decl							zend_free_op	zend_free_op	free_op1
ANR	398126	Decl							zend_free_op	zend_free_op	free_op2
ANR	398127	DeclStmt									
ANR	398128	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398129	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398130	DeclStmt									
ANR	398131	Decl							zval	zval *	container
ANR	398132	DeclStmt									
ANR	398133	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	398134	DeclStmt									
ANR	398135	Decl							zend_free_op	zend_free_op	free_op2
ANR	398136	DeclStmt									
ANR	398137	Decl							zval	zval *	offset
ANR	398138	DeclStmt									
ANR	398139	Decl							zend_object	zend_object *	zobj
ANR	398140	DeclStmt									
ANR	398141	Decl							zval	zval *	retval
ANR	398142	DeclStmt									
ANR	398143	Decl							uint32_t	uint32_t	prop_offset
ANR	398144	DeclStmt									
ANR	398145	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398146	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398147	DeclStmt									
ANR	398148	Decl							zval	zval *	property
ANR	398149	DeclStmt									
ANR	398150	Decl							zval	zval *	container
ANR	398151	DeclStmt									
ANR	398152	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398153	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398154	DeclStmt									
ANR	398155	Decl							zval	zval *	property
ANR	398156	DeclStmt									
ANR	398157	Decl							zval	zval *	container
ANR	398158	DeclStmt									
ANR	398159	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	398160	DeclStmt									
ANR	398161	Decl							zend_free_op	zend_free_op	free_op2
ANR	398162	DeclStmt									
ANR	398163	Decl							zval	zval *	offset
ANR	398164	DeclStmt									
ANR	398165	Decl							zend_object	zend_object *	zobj
ANR	398166	DeclStmt									
ANR	398167	Decl							zval	zval *	retval
ANR	398168	DeclStmt									
ANR	398169	Decl							uint32_t	uint32_t	prop_offset
ANR	398170	DeclStmt									
ANR	398171	Decl							USE_OPLINE zval	USE_OPLINE zval *	container
ANR	398172	DeclStmt									
ANR	398173	Decl							zend_free_op	zend_free_op	free_op1
ANR	398174	Decl							zend_free_op	zend_free_op	free_op2
ANR	398175	DeclStmt									
ANR	398176	Decl							zval	zval *	property
ANR	398177	DeclStmt									
ANR	398178	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398179	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398180	DeclStmt									
ANR	398181	Decl							zval	zval *	container
ANR	398182	Decl							zval	zval *	property
ANR	398183	DeclStmt									
ANR	398184	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398185	DeclStmt									
ANR	398186	Decl							zval	zval *	object
ANR	398187	DeclStmt									
ANR	398188	Decl							zval	zval *	property_name
ANR	398189	DeclStmt									
ANR	398190	Decl							USE_OPLINE zval	USE_OPLINE zval *	object_ptr
ANR	398191	DeclStmt									
ANR	398192	Decl							zend_free_op	zend_free_op	free_op2
ANR	398193	Decl							zend_free_op	zend_free_op	free_op_data1
ANR	398194	DeclStmt									
ANR	398195	Decl							zval	zval *	value
ANR	398196	DeclStmt									
ANR	398197	Decl							zval	zval *	variable_ptr
ANR	398198	DeclStmt									
ANR	398199	Decl							zval	zval *	dim
ANR	398200	DeclStmt									
ANR	398201	Decl							zend_free_op	zend_free_op	free_op2
ANR	398202	DeclStmt									
ANR	398203	Decl							zval	zval *	property_name
ANR	398204	DeclStmt									
ANR	398205	Decl							zend_long	zend_long	offset
ANR	398206	DeclStmt									
ANR	398207	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398208	DeclStmt									
ANR	398209	Decl							zval	zval *	op1
ANR	398210	Decl							zval	zval *	op2
ANR	398211	DeclStmt									
ANR	398212	Decl							zend_string	zend_string *	op1_str
ANR	398213	Decl							zend_string	zend_string *	op2_str
ANR	398214	Decl							zend_string	zend_string *	str
ANR	398215	DeclStmt									
ANR	398216	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	398217	DeclStmt									
ANR	398218	Decl							zend_free_op	zend_free_op	free_op2
ANR	398219	DeclStmt									
ANR	398220	Decl							zval	zval *	object
ANR	398221	DeclStmt									
ANR	398222	Decl							zend_function	zend_function *	fbc
ANR	398223	DeclStmt									
ANR	398224	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	398225	DeclStmt									
ANR	398226	Decl							zend_object	zend_object *	obj
ANR	398227	DeclStmt									
ANR	398228	Decl							zend_execute_data	zend_execute_data *	call
ANR	398229	DeclStmt									
ANR	398230	Decl							uint32_t	uint32_t	call_info
ANR	398231	DeclStmt									
ANR	398232	Decl							zend_object	zend_object *	orig_obj
ANR	398233	DeclStmt									
ANR	398234	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398235	DeclStmt									
ANR	398236	Decl							zval	zval *	op1
ANR	398237	Decl							zval	zval *	op2
ANR	398238	Decl							zval	zval *	result
ANR	398239	DeclStmt									
ANR	398240	Decl							int	int	result
ANR	398241	DeclStmt									
ANR	398242	Decl							USE_OPLINE zval	USE_OPLINE zval *	expr_ptr
ANR	398243	Decl							USE_OPLINE zval	USE_OPLINE zval	new_expr
ANR	398244	DeclStmt									
ANR	398245	Decl							zend_refcounted	zend_refcounted *	ref
ANR	398246	DeclStmt									
ANR	398247	Decl							zend_free_op	zend_free_op	free_op2
ANR	398248	DeclStmt									
ANR	398249	Decl							zval	zval *	offset
ANR	398250	DeclStmt									
ANR	398251	Decl							zend_string	zend_string *	str
ANR	398252	DeclStmt									
ANR	398253	Decl							zend_ulong	zend_ulong	hval
ANR	398254	DeclStmt									
ANR	398255	Decl							zval	zval *	array
ANR	398256	DeclStmt									
ANR	398257	Decl							uint32_t	uint32_t	size
ANR	398258	DeclStmt									
ANR	398259	Decl							USE_OPLINE	USE_OPLINE	array
ANR	398260	DeclStmt									
ANR	398261	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398262	DeclStmt									
ANR	398263	Decl							zval	zval *	container
ANR	398264	DeclStmt									
ANR	398265	Decl							zval	zval *	offset
ANR	398266	DeclStmt									
ANR	398267	Decl							zend_ulong	zend_ulong	hval
ANR	398268	DeclStmt									
ANR	398269	Decl							zend_string	zend_string *	key
ANR	398270	DeclStmt									
ANR	398271	Decl							HashTable	HashTable *	ht
ANR	398272	DeclStmt									
ANR	398273	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398274	DeclStmt									
ANR	398275	Decl							zval	zval *	container
ANR	398276	DeclStmt									
ANR	398277	Decl							zval	zval *	offset
ANR	398278	DeclStmt									
ANR	398279	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398280	DeclStmt									
ANR	398281	Decl							zval	zval *	container
ANR	398282	DeclStmt									
ANR	398283	Decl							int	int	result
ANR	398284	DeclStmt									
ANR	398285	Decl							zend_ulong	zend_ulong	hval
ANR	398286	DeclStmt									
ANR	398287	Decl							zval	zval *	offset
ANR	398288	DeclStmt									
ANR	398289	Decl							HashTable	HashTable *	ht
ANR	398290	DeclStmt									
ANR	398291	Decl							zval	zval *	value
ANR	398292	DeclStmt									
ANR	398293	Decl							zend_string	zend_string *	str
ANR	398294	DeclStmt									
ANR	398295	Decl							zend_long	zend_long	lval
ANR	398296	DeclStmt									
ANR	398297	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	398298	DeclStmt									
ANR	398299	Decl							zval	zval *	container
ANR	398300	DeclStmt									
ANR	398301	Decl							int	int	result
ANR	398302	DeclStmt									
ANR	398303	Decl							zval	zval *	offset
ANR	398304	DeclStmt									
ANR	398305	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398306	DeclStmt									
ANR	398307	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	398308	DeclStmt									
ANR	398309	Decl							zend_free_op	zend_free_op	free_op1
ANR	398310	DeclStmt									
ANR	398311	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398312	DeclStmt									
ANR	398313	Decl							zval	zval *	z
ANR	398314	DeclStmt									
ANR	398315	Decl							zend_string	zend_string *	str
ANR	398316	DeclStmt									
ANR	398317	Decl							zend_string	zend_string *	str
ANR	398318	DeclStmt									
ANR	398319	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398320	DeclStmt									
ANR	398321	Decl							zval	zval *	val
ANR	398322	DeclStmt									
ANR	398323	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398324	DeclStmt									
ANR	398325	Decl							zval	zval *	val
ANR	398326	DeclStmt									
ANR	398327	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398328	DeclStmt									
ANR	398329	Decl							zval	zval *	val
ANR	398330	DeclStmt									
ANR	398331	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398332	DeclStmt									
ANR	398333	Decl							zval	zval *	val
ANR	398334	DeclStmt									
ANR	398335	Decl							int	int	ret
ANR	398336	DeclStmt									
ANR	398337	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398338	DeclStmt									
ANR	398339	Decl							zval	zval *	val
ANR	398340	DeclStmt									
ANR	398341	Decl							int	int	ret
ANR	398342	DeclStmt									
ANR	398343	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	398344	DeclStmt									
ANR	398345	Decl							zval	zval *	var
ANR	398346	DeclStmt									
ANR	398347	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	398348	DeclStmt									
ANR	398349	Decl							USE_OPLINE zval	USE_OPLINE zval *	val
ANR	398350	DeclStmt									
ANR	398351	Decl							zend_free_op	zend_free_op	free_op1
ANR	398352	DeclStmt									
ANR	398353	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398354	DeclStmt									
ANR	398355	Decl							zval	zval *	obj
ANR	398356	DeclStmt									
ANR	398357	Decl							zend_class_entry	zend_class_entry *	ce
ANR	398358	DeclStmt									
ANR	398359	Decl							zend_function	zend_function *	clone
ANR	398360	DeclStmt									
ANR	398361	Decl							zend_object_clone_obj_t	zend_object_clone_obj_t	clone_call
ANR	398362	DeclStmt									
ANR	398363	Decl							USE_OPLINE zend_op_array	USE_OPLINE zend_op_array *	new_op_array
ANR	398364	DeclStmt									
ANR	398365	Decl							zend_free_op	zend_free_op	free_op1
ANR	398366	DeclStmt									
ANR	398367	Decl							zval	zval *	inc_filename
ANR	398368	DeclStmt									
ANR	398369	Decl							zval	zval	tmp_inc_filename
ANR	398370	DeclStmt									
ANR	398371	Decl							zend_bool	zend_bool	failure_retval
ANR	398372	DeclStmt									
ANR	398373	Decl							zend_file_handle	zend_file_handle	file_handle
ANR	398374	DeclStmt									
ANR	398375	Decl							zend_string	zend_string *	resolved_path
ANR	398376	DeclStmt									
ANR	398377	Decl							char	char *	eval_desc
ANR	398378	DeclStmt									
ANR	398379	Decl							zval	zval *	return_value
ANR	398380	DeclStmt									
ANR	398381	Decl							zend_execute_data	zend_execute_data *	call
ANR	398382	DeclStmt									
ANR	398383	Decl							USE_OPLINE	USE_OPLINE ( )	SAVE_OPLINE
ANR	398384	DeclStmt									
ANR	398385	Decl							zend_free_op	zend_free_op	free_op1
ANR	398386	DeclStmt									
ANR	398387	Decl							zval	zval *	ptr
ANR	398388	DeclStmt									
ANR	398389	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	398390	DeclStmt									
ANR	398391	Decl							zend_free_op	zend_free_op	free_op1
ANR	398392	DeclStmt									
ANR	398393	Decl							zend_bool	zend_bool	strict
ANR	398394	DeclStmt									
ANR	398395	Decl							zend_string	zend_string *	str
ANR	398396	DeclStmt									
ANR	398397	Decl							zval	zval	tmp
ANR	398398	DeclStmt									
ANR	398399	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398400	DeclStmt									
ANR	398401	Decl							zval	zval *	op1
ANR	398402	Decl							zval	zval *	op2
ANR	398403	Decl							zval	zval *	result
ANR	398404	DeclStmt									
ANR	398405	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398406	DeclStmt									
ANR	398407	Decl							zval	zval *	op1
ANR	398408	Decl							zval	zval *	op2
ANR	398409	Decl							zval	zval *	result
ANR	398410	DeclStmt									
ANR	398411	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398412	DeclStmt									
ANR	398413	Decl							zval	zval *	op1
ANR	398414	Decl							zval	zval *	op2
ANR	398415	Decl							zval	zval *	result
ANR	398416	DeclStmt									
ANR	398417	Decl							zend_long	zend_long	overflow
ANR	398418	DeclStmt									
ANR	398419	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398420	DeclStmt									
ANR	398421	Decl							zval	zval *	op1
ANR	398422	Decl							zval	zval *	op2
ANR	398423	DeclStmt									
ANR	398424	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398425	DeclStmt									
ANR	398426	Decl							zval	zval *	op1
ANR	398427	Decl							zval	zval *	op2
ANR	398428	Decl							zval	zval *	result
ANR	398429	DeclStmt									
ANR	398430	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398431	DeclStmt									
ANR	398432	Decl							zval	zval *	op1
ANR	398433	Decl							zval	zval *	op2
ANR	398434	DeclStmt									
ANR	398435	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398436	DeclStmt									
ANR	398437	Decl							zval	zval *	op1
ANR	398438	Decl							zval	zval *	op2
ANR	398439	DeclStmt									
ANR	398440	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398441	DeclStmt									
ANR	398442	Decl							zval	zval *	op1
ANR	398443	Decl							zval	zval *	op2
ANR	398444	DeclStmt									
ANR	398445	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398446	DeclStmt									
ANR	398447	Decl							zval	zval *	op1
ANR	398448	Decl							zval	zval *	op2
ANR	398449	DeclStmt									
ANR	398450	Decl							zend_string	zend_string *	op1_str
ANR	398451	DeclStmt									
ANR	398452	Decl							zend_string	zend_string *	op2_str
ANR	398453	DeclStmt									
ANR	398454	Decl							zend_string	zend_string *	str
ANR	398455	DeclStmt									
ANR	398456	Decl							size_t	size_t	len
ANR	398457	DeclStmt									
ANR	398458	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398459	DeclStmt									
ANR	398460	Decl							zval	zval *	op1
ANR	398461	Decl							zval	zval *	op2
ANR	398462	Decl							zval	zval *	result
ANR	398463	DeclStmt									
ANR	398464	Decl							int	int	result
ANR	398465	DeclStmt									
ANR	398466	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398467	DeclStmt									
ANR	398468	Decl							zval	zval *	op1
ANR	398469	Decl							zval	zval *	op2
ANR	398470	Decl							zval	zval *	result
ANR	398471	DeclStmt									
ANR	398472	Decl							int	int	result
ANR	398473	DeclStmt									
ANR	398474	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398475	DeclStmt									
ANR	398476	Decl							zval	zval *	op1
ANR	398477	Decl							zval	zval *	op2
ANR	398478	Decl							zval	zval *	result
ANR	398479	DeclStmt									
ANR	398480	Decl							int	int	result
ANR	398481	DeclStmt									
ANR	398482	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398483	DeclStmt									
ANR	398484	Decl							zval	zval *	op1
ANR	398485	Decl							zval	zval *	op2
ANR	398486	Decl							zval	zval *	result
ANR	398487	DeclStmt									
ANR	398488	Decl							int	int	result
ANR	398489	DeclStmt									
ANR	398490	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398491	DeclStmt									
ANR	398492	Decl							zval	zval *	op1
ANR	398493	Decl							zval	zval *	op2
ANR	398494	DeclStmt									
ANR	398495	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398496	DeclStmt									
ANR	398497	Decl							zval	zval *	op1
ANR	398498	Decl							zval	zval *	op2
ANR	398499	DeclStmt									
ANR	398500	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398501	DeclStmt									
ANR	398502	Decl							zval	zval *	op1
ANR	398503	Decl							zval	zval *	op2
ANR	398504	DeclStmt									
ANR	398505	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398506	DeclStmt									
ANR	398507	Decl							zval	zval *	op1
ANR	398508	Decl							zval	zval *	op2
ANR	398509	DeclStmt									
ANR	398510	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	398511	DeclStmt									
ANR	398512	Decl							zval	zval *	op1
ANR	398513	Decl							zval	zval *	op2
ANR	398514	Function	zend_fetch_var_address_helper_SPEC_TMPVAR_CONST	41311:0:1307898:1312895							
ANR	398515	FunctionDef	zend_fetch_var_address_helper_SPEC_TMPVAR_CONST (int type ZEND_OPCODE_HANDLER_ARGS_DC)		398514	0					
ANR	398516	CompoundStatement		41312:0:1308029:1312895	398514	0					
ANR	398517	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	41313:1:1308032:1308065	398514	0	True				
ANR	398518	IdentifierDecl	free_op1		398514	0					
ANR	398519	IdentifierDeclType	USE_OPLINE zend_free_op		398514	0					
ANR	398520	Identifier	free_op1		398514	1					
ANR	398521	IdentifierDeclStatement	zval * varname ;	41315:1:1308068:1308081	398514	1	True				
ANR	398522	IdentifierDecl	* varname		398514	0					
ANR	398523	IdentifierDeclType	zval *		398514	0					
ANR	398524	Identifier	varname		398514	1					
ANR	398525	IdentifierDeclStatement	zval * retval ;	41316:1:1308084:1308096	398514	2	True				
ANR	398526	IdentifierDecl	* retval		398514	0					
ANR	398527	IdentifierDeclType	zval *		398514	0					
ANR	398528	Identifier	retval		398514	1					
ANR	398529	IdentifierDeclStatement	zend_string * name ;	41317:1:1308099:1308116	398514	3	True				
ANR	398530	IdentifierDecl	* name		398514	0					
ANR	398531	IdentifierDeclType	zend_string *		398514	0					
ANR	398532	Identifier	name		398514	1					
ANR	398533	IdentifierDeclStatement	HashTable * target_symbol_table ;	41318:1:1308119:1308149	398514	4	True				
ANR	398534	IdentifierDecl	* target_symbol_table		398514	0					
ANR	398535	IdentifierDeclType	HashTable *		398514	0					
ANR	398536	Identifier	target_symbol_table		398514	1					
ANR	398537	ExpressionStatement	SAVE_OPLINE ( )	41320:1:1308153:1308166	398514	5	True				
ANR	398538	CallExpression	SAVE_OPLINE ( )		398514	0					
ANR	398539	Callee	SAVE_OPLINE		398514	0					
ANR	398540	Identifier	SAVE_OPLINE		398514	0					
ANR	398541	ArgumentList			398514	1					
ANR	398542	ExpressionStatement	"varname = _get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	41321:1:1308169:1308238	398514	6	True				
ANR	398543	AssignmentExpression	"varname = _get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		398514	0		=			
ANR	398544	Identifier	varname		398514	0					
ANR	398545	CallExpression	"_get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		398514	1					
ANR	398546	Callee	_get_zval_ptr_var		398514	0					
ANR	398547	Identifier	_get_zval_ptr_var		398514	0					
ANR	398548	ArgumentList	opline -> op1 . var		398514	1					
ANR	398549	Argument	opline -> op1 . var		398514	0					
ANR	398550	MemberAccess	opline -> op1 . var		398514	0					
ANR	398551	PtrMemberAccess	opline -> op1		398514	0					
ANR	398552	Identifier	opline		398514	0					
ANR	398553	Identifier	op1		398514	1					
ANR	398554	Identifier	var		398514	1					
ANR	398555	Argument	execute_data		398514	1					
ANR	398556	Identifier	execute_data		398514	0					
ANR	398557	Argument	& free_op1		398514	2					
ANR	398558	UnaryOperationExpression	& free_op1		398514	0					
ANR	398559	UnaryOperator	&		398514	0					
ANR	398560	Identifier	free_op1		398514	1					
ANR	398561	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST )		398514	7					
ANR	398562	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST	41323:6:1308247:1308277	398514	0	True				
ANR	398563	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		398514	0		==			
ANR	398564	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	398565	Identifier	IS_TMP_VAR		398514	0					
ANR	398566	Identifier	IS_VAR		398514	1					
ANR	398567	Identifier	IS_CONST		398514	1					
ANR	398568	CompoundStatement		12:39:250:250	398514	1					
ANR	398569	ExpressionStatement	name = Z_STR_P ( varname )	41324:2:1308284:1308307	398514	0	True				
ANR	398570	AssignmentExpression	name = Z_STR_P ( varname )		398514	0		=			
ANR	398571	Identifier	name		398514	0					
ANR	398572	CallExpression	Z_STR_P ( varname )		398514	1					
ANR	398573	Callee	Z_STR_P		398514	0					
ANR	398574	Identifier	Z_STR_P		398514	0					
ANR	398575	ArgumentList	varname		398514	1					
ANR	398576	Argument	varname		398514	0					
ANR	398577	Identifier	varname		398514	0					
ANR	398578	ElseStatement	else		398514	0					
ANR	398579	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		398514	0					
ANR	398580	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	41325:12:1308321:1308360	398514	0	True				
ANR	398581	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		398514	0					
ANR	398582	Callee	EXPECTED		398514	0					
ANR	398583	Identifier	EXPECTED		398514	0					
ANR	398584	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		398514	1					
ANR	398585	Argument	Z_TYPE_P ( varname ) == IS_STRING		398514	0					
ANR	398586	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		398514	0		==			
ANR	398587	CallExpression	Z_TYPE_P ( varname )		398514	0					
ANR	398588	Callee	Z_TYPE_P		398514	0					
ANR	398589	Identifier	Z_TYPE_P		398514	0					
ANR	398590	ArgumentList	varname		398514	1					
ANR	398591	Argument	varname		398514	0					
ANR	398592	Identifier	varname		398514	0					
ANR	398593	Identifier	IS_STRING		398514	1					
ANR	398594	CompoundStatement		14:54:333:333	398514	1					
ANR	398595	ExpressionStatement	name = Z_STR_P ( varname )	41326:2:1308367:1308390	398514	0	True				
ANR	398596	AssignmentExpression	name = Z_STR_P ( varname )		398514	0		=			
ANR	398597	Identifier	name		398514	0					
ANR	398598	CallExpression	Z_STR_P ( varname )		398514	1					
ANR	398599	Callee	Z_STR_P		398514	0					
ANR	398600	Identifier	Z_STR_P		398514	0					
ANR	398601	ArgumentList	varname		398514	1					
ANR	398602	Argument	varname		398514	0					
ANR	398603	Identifier	varname		398514	0					
ANR	398604	ExpressionStatement	zend_string_addref ( name )	41327:2:1308394:1308418	398514	1	True				
ANR	398605	CallExpression	zend_string_addref ( name )		398514	0					
ANR	398606	Callee	zend_string_addref		398514	0					
ANR	398607	Identifier	zend_string_addref		398514	0					
ANR	398608	ArgumentList	name		398514	1					
ANR	398609	Argument	name		398514	0					
ANR	398610	Identifier	name		398514	0					
ANR	398611	ElseStatement	else		398514	0					
ANR	398612	CompoundStatement		17:8:398:398	398514	0					
ANR	398613	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		398514	0					
ANR	398614	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	41329:6:1308436:1308508	398514	0	True				
ANR	398615	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		398514	0		&&			
ANR	398616	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CV		398514	0		==			
ANR	398617	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	398618	Identifier	IS_TMP_VAR		398514	0					
ANR	398619	Identifier	IS_VAR		398514	1					
ANR	398620	Identifier	IS_CV		398514	1					
ANR	398621	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		398514	1					
ANR	398622	Callee	UNEXPECTED		398514	0					
ANR	398623	Identifier	UNEXPECTED		398514	0					
ANR	398624	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		398514	1					
ANR	398625	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		398514	0					
ANR	398626	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		398514	0		==			
ANR	398627	CallExpression	Z_TYPE_P ( varname )		398514	0					
ANR	398628	Callee	Z_TYPE_P		398514	0					
ANR	398629	Identifier	Z_TYPE_P		398514	0					
ANR	398630	ArgumentList	varname		398514	1					
ANR	398631	Argument	varname		398514	0					
ANR	398632	Identifier	varname		398514	0					
ANR	398633	Identifier	IS_UNDEF		398514	1					
ANR	398634	CompoundStatement		18:81:481:481	398514	1					
ANR	398635	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	41330:3:1308516:1308551	398514	0	True				
ANR	398636	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		398514	0					
ANR	398637	Callee	GET_OP1_UNDEF_CV		398514	0					
ANR	398638	Identifier	GET_OP1_UNDEF_CV		398514	0					
ANR	398639	ArgumentList	varname		398514	1					
ANR	398640	Argument	varname		398514	0					
ANR	398641	Identifier	varname		398514	0					
ANR	398642	Argument	BP_VAR_R		398514	1					
ANR	398643	Identifier	BP_VAR_R		398514	0					
ANR	398644	ExpressionStatement	name = zval_get_string ( varname )	41332:2:1308559:1308590	398514	1	True				
ANR	398645	AssignmentExpression	name = zval_get_string ( varname )		398514	0		=			
ANR	398646	Identifier	name		398514	0					
ANR	398647	CallExpression	zval_get_string ( varname )		398514	1					
ANR	398648	Callee	zval_get_string		398514	0					
ANR	398649	Identifier	zval_get_string		398514	0					
ANR	398650	ArgumentList	varname		398514	1					
ANR	398651	Argument	varname		398514	0					
ANR	398652	Identifier	varname		398514	0					
ANR	398653	IfStatement	if ( IS_CONST != IS_UNUSED )		398514	8					
ANR	398654	Condition	IS_CONST != IS_UNUSED	41335:5:1308601:1308621	398514	0	True				
ANR	398655	EqualityExpression	IS_CONST != IS_UNUSED		398514	0		!=			
ANR	398656	Identifier	IS_CONST		398514	0					
ANR	398657	Identifier	IS_UNUSED		398514	1					
ANR	398658	CompoundStatement		25:2:598:618	398514	1					
ANR	398659	IdentifierDeclStatement	zend_class_entry * ce ;	41336:2:1308628:1308648	398514	0	True				
ANR	398660	IdentifierDecl	* ce		398514	0					
ANR	398661	IdentifierDeclType	zend_class_entry *		398514	0					
ANR	398662	Identifier	ce		398514	1					
ANR	398663	IfStatement	if ( IS_CONST == IS_CONST )		398514	1					
ANR	398664	Condition	IS_CONST == IS_CONST	41338:6:1308657:1308676	398514	0	True				
ANR	398665	EqualityExpression	IS_CONST == IS_CONST		398514	0		==			
ANR	398666	Identifier	IS_CONST		398514	0					
ANR	398667	Identifier	IS_CONST		398514	1					
ANR	398668	CompoundStatement		27:28:649:649	398514	1					
ANR	398669	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		398514	0					
ANR	398670	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	41339:7:1308688:1308799	398514	0	True				
ANR	398671	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		398514	0		&&			
ANR	398672	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		398514	0		==			
ANR	398673	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	398674	Identifier	IS_TMP_VAR		398514	0					
ANR	398675	Identifier	IS_VAR		398514	1					
ANR	398676	Identifier	IS_CONST		398514	1					
ANR	398677	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		398514	1					
ANR	398678	Callee	EXPECTED		398514	0					
ANR	398679	Identifier	EXPECTED		398514	0					
ANR	398680	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		398514	1					
ANR	398681	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		398514	0					
ANR	398682	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		398514	0		!=			
ANR	398683	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		398514	0		=			
ANR	398684	Identifier	ce		398514	0					
ANR	398685	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		398514	1					
ANR	398686	Callee	CACHED_PTR		398514	0					
ANR	398687	Identifier	CACHED_PTR		398514	0					
ANR	398688	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	1					
ANR	398689	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	0					
ANR	398690	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	0					
ANR	398691	Callee	Z_CACHE_SLOT_P		398514	0					
ANR	398692	Identifier	Z_CACHE_SLOT_P		398514	0					
ANR	398693	ArgumentList	EX_CONSTANT ( opline -> op1 )		398514	1					
ANR	398694	Argument	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	398695	CallExpression	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	398696	Callee	EX_CONSTANT		398514	0					
ANR	398697	Identifier	EX_CONSTANT		398514	0					
ANR	398698	ArgumentList	opline -> op1		398514	1					
ANR	398699	Argument	opline -> op1		398514	0					
ANR	398700	PtrMemberAccess	opline -> op1		398514	0					
ANR	398701	Identifier	opline		398514	0					
ANR	398702	Identifier	op1		398514	1					
ANR	398703	Identifier	NULL		398514	1					
ANR	398704	CompoundStatement		28:121:772:772	398514	1					
ANR	398705	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	41340:4:1308808:1308885	398514	0	True				
ANR	398706	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		398514	0		=			
ANR	398707	Identifier	retval		398514	0					
ANR	398708	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		398514	1					
ANR	398709	Callee	CACHED_PTR		398514	0					
ANR	398710	Identifier	CACHED_PTR		398514	0					
ANR	398711	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		398514	1					
ANR	398712	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		398514	0					
ANR	398713	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		398514	0		+			
ANR	398714	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	0					
ANR	398715	Callee	Z_CACHE_SLOT_P		398514	0					
ANR	398716	Identifier	Z_CACHE_SLOT_P		398514	0					
ANR	398717	ArgumentList	EX_CONSTANT ( opline -> op1 )		398514	1					
ANR	398718	Argument	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	398719	CallExpression	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	398720	Callee	EX_CONSTANT		398514	0					
ANR	398721	Identifier	EX_CONSTANT		398514	0					
ANR	398722	ArgumentList	opline -> op1		398514	1					
ANR	398723	Argument	opline -> op1		398514	0					
ANR	398724	PtrMemberAccess	opline -> op1		398514	0					
ANR	398725	Identifier	opline		398514	0					
ANR	398726	Identifier	op1		398514	1					
ANR	398727	SizeofExpression	sizeof ( void * )		398514	1					
ANR	398728	Sizeof	sizeof		398514	0					
ANR	398729	SizeofOperand	void *		398514	1					
ANR	398730	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		398514	1					
ANR	398731	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	41343:8:1308947:1308987	398514	0	True				
ANR	398732	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		398514	0					
ANR	398733	Callee	UNEXPECTED		398514	0					
ANR	398734	Identifier	UNEXPECTED		398514	0					
ANR	398735	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		398514	1					
ANR	398736	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		398514	0					
ANR	398737	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		398514	0		==			
ANR	398738	CallExpression	CE_STATIC_MEMBERS ( ce )		398514	0					
ANR	398739	Callee	CE_STATIC_MEMBERS		398514	0					
ANR	398740	Identifier	CE_STATIC_MEMBERS		398514	0					
ANR	398741	ArgumentList	ce		398514	1					
ANR	398742	Argument	ce		398514	0					
ANR	398743	Identifier	ce		398514	0					
ANR	398744	Identifier	NULL		398514	1					
ANR	398745	CompoundStatement		32:51:960:960	398514	1					
ANR	398746	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	41344:5:1308997:1309104	398514	0	True				
ANR	398747	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		398514	0					
ANR	398748	Callee	zend_throw_error		398514	0					
ANR	398749	Identifier	zend_throw_error		398514	0					
ANR	398750	ArgumentList	NULL		398514	1					
ANR	398751	Argument	NULL		398514	0					
ANR	398752	Identifier	NULL		398514	0					
ANR	398753	Argument	"""Access to undeclared static property: %s::$%s"""		398514	1					
ANR	398754	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		398514	0					
ANR	398755	Argument	ZSTR_VAL ( ce -> name )		398514	2					
ANR	398756	CallExpression	ZSTR_VAL ( ce -> name )		398514	0					
ANR	398757	Callee	ZSTR_VAL		398514	0					
ANR	398758	Identifier	ZSTR_VAL		398514	0					
ANR	398759	ArgumentList	ce -> name		398514	1					
ANR	398760	Argument	ce -> name		398514	0					
ANR	398761	PtrMemberAccess	ce -> name		398514	0					
ANR	398762	Identifier	ce		398514	0					
ANR	398763	Identifier	name		398514	1					
ANR	398764	Argument	ZSTR_VAL ( name )		398514	3					
ANR	398765	CallExpression	ZSTR_VAL ( name )		398514	0					
ANR	398766	Callee	ZSTR_VAL		398514	0					
ANR	398767	Identifier	ZSTR_VAL		398514	0					
ANR	398768	ArgumentList	name		398514	1					
ANR	398769	Argument	name		398514	0					
ANR	398770	Identifier	name		398514	0					
ANR	398771	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	41345:5:1309111:1309139	398514	1	True				
ANR	398772	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		398514	0					
ANR	398773	Callee	zval_ptr_dtor_nogc		398514	0					
ANR	398774	Identifier	zval_ptr_dtor_nogc		398514	0					
ANR	398775	ArgumentList	free_op1		398514	1					
ANR	398776	Argument	free_op1		398514	0					
ANR	398777	Identifier	free_op1		398514	0					
ANR	398778	ExpressionStatement	HANDLE_EXCEPTION ( )	41346:5:1309146:1309164	398514	2	True				
ANR	398779	CallExpression	HANDLE_EXCEPTION ( )		398514	0					
ANR	398780	Callee	HANDLE_EXCEPTION		398514	0					
ANR	398781	Identifier	HANDLE_EXCEPTION		398514	0					
ANR	398782	ArgumentList			398514	1					
ANR	398783	GotoStatement	goto fetch_var_return ;	41349:4:1309177:1309198	398514	2	True				
ANR	398784	Identifier	fetch_var_return		398514	0					
ANR	398785	ElseStatement	else		398514	0					
ANR	398786	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		398514	0					
ANR	398787	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	41350:14:1309214:1309292	398514	0	True				
ANR	398788	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		398514	0					
ANR	398789	Callee	UNEXPECTED		398514	0					
ANR	398790	Identifier	UNEXPECTED		398514	0					
ANR	398791	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		398514	1					
ANR	398792	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		398514	0					
ANR	398793	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		398514	0		==			
ANR	398794	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		398514	0		=			
ANR	398795	Identifier	ce		398514	0					
ANR	398796	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		398514	1					
ANR	398797	Callee	CACHED_PTR		398514	0					
ANR	398798	Identifier	CACHED_PTR		398514	0					
ANR	398799	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		398514	1					
ANR	398800	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		398514	0					
ANR	398801	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		398514	0					
ANR	398802	Callee	Z_CACHE_SLOT_P		398514	0					
ANR	398803	Identifier	Z_CACHE_SLOT_P		398514	0					
ANR	398804	ArgumentList	EX_CONSTANT ( opline -> op2 )		398514	1					
ANR	398805	Argument	EX_CONSTANT ( opline -> op2 )		398514	0					
ANR	398806	CallExpression	EX_CONSTANT ( opline -> op2 )		398514	0					
ANR	398807	Callee	EX_CONSTANT		398514	0					
ANR	398808	Identifier	EX_CONSTANT		398514	0					
ANR	398809	ArgumentList	opline -> op2		398514	1					
ANR	398810	Argument	opline -> op2		398514	0					
ANR	398811	PtrMemberAccess	opline -> op2		398514	0					
ANR	398812	Identifier	opline		398514	0					
ANR	398813	Identifier	op2		398514	1					
ANR	398814	Identifier	NULL		398514	1					
ANR	398815	CompoundStatement		39:95:1265:1265	398514	1					
ANR	398816	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	41351:4:1309301:1309450	398514	0	True				
ANR	398817	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		398514	0		=			
ANR	398818	Identifier	ce		398514	0					
ANR	398819	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		398514	1					
ANR	398820	Callee	zend_fetch_class_by_name		398514	0					
ANR	398821	Identifier	zend_fetch_class_by_name		398514	0					
ANR	398822	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		398514	1					
ANR	398823	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		398514	0					
ANR	398824	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		398514	0					
ANR	398825	Callee	Z_STR_P		398514	0					
ANR	398826	Identifier	Z_STR_P		398514	0					
ANR	398827	ArgumentList	EX_CONSTANT ( opline -> op2 )		398514	1					
ANR	398828	Argument	EX_CONSTANT ( opline -> op2 )		398514	0					
ANR	398829	CallExpression	EX_CONSTANT ( opline -> op2 )		398514	0					
ANR	398830	Callee	EX_CONSTANT		398514	0					
ANR	398831	Identifier	EX_CONSTANT		398514	0					
ANR	398832	ArgumentList	opline -> op2		398514	1					
ANR	398833	Argument	opline -> op2		398514	0					
ANR	398834	PtrMemberAccess	opline -> op2		398514	0					
ANR	398835	Identifier	opline		398514	0					
ANR	398836	Identifier	op2		398514	1					
ANR	398837	Argument	EX_CONSTANT ( opline -> op2 ) + 1		398514	1					
ANR	398838	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		398514	0		+			
ANR	398839	CallExpression	EX_CONSTANT ( opline -> op2 )		398514	0					
ANR	398840	Callee	EX_CONSTANT		398514	0					
ANR	398841	Identifier	EX_CONSTANT		398514	0					
ANR	398842	ArgumentList	opline -> op2		398514	1					
ANR	398843	Argument	opline -> op2		398514	0					
ANR	398844	PtrMemberAccess	opline -> op2		398514	0					
ANR	398845	Identifier	opline		398514	0					
ANR	398846	Identifier	op2		398514	1					
ANR	398847	PrimaryExpression	1		398514	1					
ANR	398848	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		398514	2					
ANR	398849	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		398514	0		|			
ANR	398850	Identifier	ZEND_FETCH_CLASS_DEFAULT		398514	0					
ANR	398851	Identifier	ZEND_FETCH_CLASS_EXCEPTION		398514	1					
ANR	398852	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		398514	1					
ANR	398853	Condition	UNEXPECTED ( ce == NULL )	41352:8:1309460:1309481	398514	0	True				
ANR	398854	CallExpression	UNEXPECTED ( ce == NULL )		398514	0					
ANR	398855	Callee	UNEXPECTED		398514	0					
ANR	398856	Identifier	UNEXPECTED		398514	0					
ANR	398857	ArgumentList	ce == NULL		398514	1					
ANR	398858	Argument	ce == NULL		398514	0					
ANR	398859	EqualityExpression	ce == NULL		398514	0		==			
ANR	398860	Identifier	ce		398514	0					
ANR	398861	Identifier	NULL		398514	1					
ANR	398862	CompoundStatement		41:32:1454:1454	398514	1					
ANR	398863	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		398514	0					
ANR	398864	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	41353:9:1309495:1309525	398514	0	True				
ANR	398865	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		398514	0		!=			
ANR	398866	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	398867	Identifier	IS_TMP_VAR		398514	0					
ANR	398868	Identifier	IS_VAR		398514	1					
ANR	398869	Identifier	IS_CONST		398514	1					
ANR	398870	CompoundStatement		42:42:1498:1498	398514	1					
ANR	398871	ExpressionStatement	zend_string_release ( name )	41354:6:1309536:1309561	398514	0	True				
ANR	398872	CallExpression	zend_string_release ( name )		398514	0					
ANR	398873	Callee	zend_string_release		398514	0					
ANR	398874	Identifier	zend_string_release		398514	0					
ANR	398875	ArgumentList	name		398514	1					
ANR	398876	Argument	name		398514	0					
ANR	398877	Identifier	name		398514	0					
ANR	398878	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	41356:5:1309575:1309603	398514	1	True				
ANR	398879	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		398514	0					
ANR	398880	Callee	zval_ptr_dtor_nogc		398514	0					
ANR	398881	Identifier	zval_ptr_dtor_nogc		398514	0					
ANR	398882	ArgumentList	free_op1		398514	1					
ANR	398883	Argument	free_op1		398514	0					
ANR	398884	Identifier	free_op1		398514	0					
ANR	398885	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	41357:5:1309610:1309647	398514	2	True				
ANR	398886	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		398514	0					
ANR	398887	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		398514	0					
ANR	398888	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		398514	0					
ANR	398889	ArgumentList			398514	1					
ANR	398890	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	41359:4:1309659:1309714	398514	2	True				
ANR	398891	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		398514	0					
ANR	398892	Callee	CACHE_PTR		398514	0					
ANR	398893	Identifier	CACHE_PTR		398514	0					
ANR	398894	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		398514	1					
ANR	398895	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		398514	0					
ANR	398896	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		398514	0					
ANR	398897	Callee	Z_CACHE_SLOT_P		398514	0					
ANR	398898	Identifier	Z_CACHE_SLOT_P		398514	0					
ANR	398899	ArgumentList	EX_CONSTANT ( opline -> op2 )		398514	1					
ANR	398900	Argument	EX_CONSTANT ( opline -> op2 )		398514	0					
ANR	398901	CallExpression	EX_CONSTANT ( opline -> op2 )		398514	0					
ANR	398902	Callee	EX_CONSTANT		398514	0					
ANR	398903	Identifier	EX_CONSTANT		398514	0					
ANR	398904	ArgumentList	opline -> op2		398514	1					
ANR	398905	Argument	opline -> op2		398514	0					
ANR	398906	PtrMemberAccess	opline -> op2		398514	0					
ANR	398907	Identifier	opline		398514	0					
ANR	398908	Identifier	op2		398514	1					
ANR	398909	Argument	ce		398514	1					
ANR	398910	Identifier	ce		398514	0					
ANR	398911	ElseStatement	else		398514	0					
ANR	398912	CompoundStatement		50:9:1700:1700	398514	0					
ANR	398913	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	41362:3:1309735:1309771	398514	0	True				
ANR	398914	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		398514	0		=			
ANR	398915	Identifier	ce		398514	0					
ANR	398916	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		398514	1					
ANR	398917	Callee	Z_CE_P		398514	0					
ANR	398918	Identifier	Z_CE_P		398514	0					
ANR	398919	ArgumentList	EX_VAR ( opline -> op2 . var )		398514	1					
ANR	398920	Argument	EX_VAR ( opline -> op2 . var )		398514	0					
ANR	398921	CallExpression	EX_VAR ( opline -> op2 . var )		398514	0					
ANR	398922	Callee	EX_VAR		398514	0					
ANR	398923	Identifier	EX_VAR		398514	0					
ANR	398924	ArgumentList	opline -> op2 . var		398514	1					
ANR	398925	Argument	opline -> op2 . var		398514	0					
ANR	398926	MemberAccess	opline -> op2 . var		398514	0					
ANR	398927	PtrMemberAccess	opline -> op2		398514	0					
ANR	398928	Identifier	opline		398514	0					
ANR	398929	Identifier	op2		398514	1					
ANR	398930	Identifier	var		398514	1					
ANR	398931	IfStatement	"if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		398514	1					
ANR	398932	Condition	"( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	41363:7:1309780:1309908	398514	0	True				
ANR	398933	AndExpression	"( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		398514	0		&&			
ANR	398934	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		398514	0		==			
ANR	398935	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	398936	Identifier	IS_TMP_VAR		398514	0					
ANR	398937	Identifier	IS_VAR		398514	1					
ANR	398938	Identifier	IS_CONST		398514	1					
ANR	398939	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		398514	1		!=			
ANR	398940	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		398514	0		=			
ANR	398941	Identifier	retval		398514	0					
ANR	398942	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		398514	1					
ANR	398943	Callee	CACHED_POLYMORPHIC_PTR		398514	0					
ANR	398944	Identifier	CACHED_POLYMORPHIC_PTR		398514	0					
ANR	398945	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	1					
ANR	398946	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	0					
ANR	398947	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	0					
ANR	398948	Callee	Z_CACHE_SLOT_P		398514	0					
ANR	398949	Identifier	Z_CACHE_SLOT_P		398514	0					
ANR	398950	ArgumentList	EX_CONSTANT ( opline -> op1 )		398514	1					
ANR	398951	Argument	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	398952	CallExpression	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	398953	Callee	EX_CONSTANT		398514	0					
ANR	398954	Identifier	EX_CONSTANT		398514	0					
ANR	398955	ArgumentList	opline -> op1		398514	1					
ANR	398956	Argument	opline -> op1		398514	0					
ANR	398957	PtrMemberAccess	opline -> op1		398514	0					
ANR	398958	Identifier	opline		398514	0					
ANR	398959	Identifier	op1		398514	1					
ANR	398960	Argument	ce		398514	1					
ANR	398961	Identifier	ce		398514	0					
ANR	398962	Identifier	NULL		398514	1					
ANR	398963	CompoundStatement		53:96:1881:1881	398514	1					
ANR	398964	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		398514	0					
ANR	398965	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	41367:8:1309973:1310013	398514	0	True				
ANR	398966	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		398514	0					
ANR	398967	Callee	UNEXPECTED		398514	0					
ANR	398968	Identifier	UNEXPECTED		398514	0					
ANR	398969	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		398514	1					
ANR	398970	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		398514	0					
ANR	398971	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		398514	0		==			
ANR	398972	CallExpression	CE_STATIC_MEMBERS ( ce )		398514	0					
ANR	398973	Callee	CE_STATIC_MEMBERS		398514	0					
ANR	398974	Identifier	CE_STATIC_MEMBERS		398514	0					
ANR	398975	ArgumentList	ce		398514	1					
ANR	398976	Argument	ce		398514	0					
ANR	398977	Identifier	ce		398514	0					
ANR	398978	Identifier	NULL		398514	1					
ANR	398979	CompoundStatement		56:51:1986:1986	398514	1					
ANR	398980	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	41368:5:1310023:1310130	398514	0	True				
ANR	398981	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		398514	0					
ANR	398982	Callee	zend_throw_error		398514	0					
ANR	398983	Identifier	zend_throw_error		398514	0					
ANR	398984	ArgumentList	NULL		398514	1					
ANR	398985	Argument	NULL		398514	0					
ANR	398986	Identifier	NULL		398514	0					
ANR	398987	Argument	"""Access to undeclared static property: %s::$%s"""		398514	1					
ANR	398988	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		398514	0					
ANR	398989	Argument	ZSTR_VAL ( ce -> name )		398514	2					
ANR	398990	CallExpression	ZSTR_VAL ( ce -> name )		398514	0					
ANR	398991	Callee	ZSTR_VAL		398514	0					
ANR	398992	Identifier	ZSTR_VAL		398514	0					
ANR	398993	ArgumentList	ce -> name		398514	1					
ANR	398994	Argument	ce -> name		398514	0					
ANR	398995	PtrMemberAccess	ce -> name		398514	0					
ANR	398996	Identifier	ce		398514	0					
ANR	398997	Identifier	name		398514	1					
ANR	398998	Argument	ZSTR_VAL ( name )		398514	3					
ANR	398999	CallExpression	ZSTR_VAL ( name )		398514	0					
ANR	399000	Callee	ZSTR_VAL		398514	0					
ANR	399001	Identifier	ZSTR_VAL		398514	0					
ANR	399002	ArgumentList	name		398514	1					
ANR	399003	Argument	name		398514	0					
ANR	399004	Identifier	name		398514	0					
ANR	399005	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	41369:5:1310137:1310165	398514	1	True				
ANR	399006	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		398514	0					
ANR	399007	Callee	zval_ptr_dtor_nogc		398514	0					
ANR	399008	Identifier	zval_ptr_dtor_nogc		398514	0					
ANR	399009	ArgumentList	free_op1		398514	1					
ANR	399010	Argument	free_op1		398514	0					
ANR	399011	Identifier	free_op1		398514	0					
ANR	399012	ExpressionStatement	HANDLE_EXCEPTION ( )	41370:5:1310172:1310190	398514	2	True				
ANR	399013	CallExpression	HANDLE_EXCEPTION ( )		398514	0					
ANR	399014	Callee	HANDLE_EXCEPTION		398514	0					
ANR	399015	Identifier	HANDLE_EXCEPTION		398514	0					
ANR	399016	ArgumentList			398514	1					
ANR	399017	GotoStatement	goto fetch_var_return ;	41373:4:1310203:1310224	398514	1	True				
ANR	399018	Identifier	fetch_var_return		398514	0					
ANR	399019	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	41376:2:1310237:1310287	398514	2	True				
ANR	399020	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		398514	0		=			
ANR	399021	Identifier	retval		398514	0					
ANR	399022	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		398514	1					
ANR	399023	Callee	zend_std_get_static_property		398514	0					
ANR	399024	Identifier	zend_std_get_static_property		398514	0					
ANR	399025	ArgumentList	ce		398514	1					
ANR	399026	Argument	ce		398514	0					
ANR	399027	Identifier	ce		398514	0					
ANR	399028	Argument	name		398514	1					
ANR	399029	Identifier	name		398514	0					
ANR	399030	Argument	0		398514	2					
ANR	399031	PrimaryExpression	0		398514	0					
ANR	399032	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		398514	3					
ANR	399033	Condition	UNEXPECTED ( EG ( exception ) )	41377:6:1310295:1310319	398514	0	True				
ANR	399034	CallExpression	UNEXPECTED ( EG ( exception ) )		398514	0					
ANR	399035	Callee	UNEXPECTED		398514	0					
ANR	399036	Identifier	UNEXPECTED		398514	0					
ANR	399037	ArgumentList	EG ( exception )		398514	1					
ANR	399038	Argument	EG ( exception )		398514	0					
ANR	399039	CallExpression	EG ( exception )		398514	0					
ANR	399040	Callee	EG		398514	0					
ANR	399041	Identifier	EG		398514	0					
ANR	399042	ArgumentList	exception		398514	1					
ANR	399043	Argument	exception		398514	0					
ANR	399044	Identifier	exception		398514	0					
ANR	399045	CompoundStatement		66:33:2292:2292	398514	1					
ANR	399046	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		398514	0					
ANR	399047	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	41378:7:1310331:1310361	398514	0	True				
ANR	399048	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		398514	0		!=			
ANR	399049	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	399050	Identifier	IS_TMP_VAR		398514	0					
ANR	399051	Identifier	IS_VAR		398514	1					
ANR	399052	Identifier	IS_CONST		398514	1					
ANR	399053	CompoundStatement		67:40:2334:2334	398514	1					
ANR	399054	ExpressionStatement	zend_string_release ( name )	41379:4:1310370:1310395	398514	0	True				
ANR	399055	CallExpression	zend_string_release ( name )		398514	0					
ANR	399056	Callee	zend_string_release		398514	0					
ANR	399057	Identifier	zend_string_release		398514	0					
ANR	399058	ArgumentList	name		398514	1					
ANR	399059	Argument	name		398514	0					
ANR	399060	Identifier	name		398514	0					
ANR	399061	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	41381:3:1310405:1310433	398514	1	True				
ANR	399062	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		398514	0					
ANR	399063	Callee	zval_ptr_dtor_nogc		398514	0					
ANR	399064	Identifier	zval_ptr_dtor_nogc		398514	0					
ANR	399065	ArgumentList	free_op1		398514	1					
ANR	399066	Argument	free_op1		398514	0					
ANR	399067	Identifier	free_op1		398514	0					
ANR	399068	ExpressionStatement	HANDLE_EXCEPTION ( )	41382:3:1310438:1310456	398514	2	True				
ANR	399069	CallExpression	HANDLE_EXCEPTION ( )		398514	0					
ANR	399070	Callee	HANDLE_EXCEPTION		398514	0					
ANR	399071	Identifier	HANDLE_EXCEPTION		398514	0					
ANR	399072	ArgumentList			398514	1					
ANR	399073	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval )		398514	4					
ANR	399074	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval	41384:6:1310468:1310508	398514	0	True				
ANR	399075	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval		398514	0		&&			
ANR	399076	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		398514	0		==			
ANR	399077	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	399078	Identifier	IS_TMP_VAR		398514	0					
ANR	399079	Identifier	IS_VAR		398514	1					
ANR	399080	Identifier	IS_CONST		398514	1					
ANR	399081	Identifier	retval		398514	1					
ANR	399082	CompoundStatement		73:49:2481:2481	398514	1					
ANR	399083	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	41385:3:1310516:1310591	398514	0	True				
ANR	399084	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		398514	0					
ANR	399085	Callee	CACHE_POLYMORPHIC_PTR		398514	0					
ANR	399086	Identifier	CACHE_POLYMORPHIC_PTR		398514	0					
ANR	399087	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	1					
ANR	399088	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	0					
ANR	399089	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		398514	0					
ANR	399090	Callee	Z_CACHE_SLOT_P		398514	0					
ANR	399091	Identifier	Z_CACHE_SLOT_P		398514	0					
ANR	399092	ArgumentList	EX_CONSTANT ( opline -> op1 )		398514	1					
ANR	399093	Argument	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	399094	CallExpression	EX_CONSTANT ( opline -> op1 )		398514	0					
ANR	399095	Callee	EX_CONSTANT		398514	0					
ANR	399096	Identifier	EX_CONSTANT		398514	0					
ANR	399097	ArgumentList	opline -> op1		398514	1					
ANR	399098	Argument	opline -> op1		398514	0					
ANR	399099	PtrMemberAccess	opline -> op1		398514	0					
ANR	399100	Identifier	opline		398514	0					
ANR	399101	Identifier	op1		398514	1					
ANR	399102	Argument	ce		398514	1					
ANR	399103	Identifier	ce		398514	0					
ANR	399104	Argument	retval		398514	2					
ANR	399105	Identifier	retval		398514	0					
ANR	399106	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	41388:2:1310600:1310628	398514	5	True				
ANR	399107	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		398514	0					
ANR	399108	Callee	zval_ptr_dtor_nogc		398514	0					
ANR	399109	Identifier	zval_ptr_dtor_nogc		398514	0					
ANR	399110	ArgumentList	free_op1		398514	1					
ANR	399111	Argument	free_op1		398514	0					
ANR	399112	Identifier	free_op1		398514	0					
ANR	399113	ElseStatement	else		398514	0					
ANR	399114	CompoundStatement		78:8:2608:2608	398514	0					
ANR	399115	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	41390:2:1310642:1310753	398514	0	True				
ANR	399116	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		398514	0		=			
ANR	399117	Identifier	target_symbol_table		398514	0					
ANR	399118	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		398514	1					
ANR	399119	Callee	zend_get_target_symbol_table		398514	0					
ANR	399120	Identifier	zend_get_target_symbol_table		398514	0					
ANR	399121	ArgumentList	execute_data		398514	1					
ANR	399122	Argument	execute_data		398514	0					
ANR	399123	Identifier	execute_data		398514	0					
ANR	399124	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		398514	1					
ANR	399125	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		398514	0		&			
ANR	399126	PtrMemberAccess	opline -> extended_value		398514	0					
ANR	399127	Identifier	opline		398514	0					
ANR	399128	Identifier	extended_value		398514	1					
ANR	399129	Identifier	ZEND_FETCH_TYPE_MASK		398514	1					
ANR	399130	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	41391:2:1310757:1310807	398514	1	True				
ANR	399131	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		398514	0		=			
ANR	399132	Identifier	retval		398514	0					
ANR	399133	CallExpression	"zend_hash_find ( target_symbol_table , name )"		398514	1					
ANR	399134	Callee	zend_hash_find		398514	0					
ANR	399135	Identifier	zend_hash_find		398514	0					
ANR	399136	ArgumentList	target_symbol_table		398514	1					
ANR	399137	Argument	target_symbol_table		398514	0					
ANR	399138	Identifier	target_symbol_table		398514	0					
ANR	399139	Argument	name		398514	1					
ANR	399140	Identifier	name		398514	0					
ANR	399141	IfStatement	if ( retval == NULL )		398514	2					
ANR	399142	Condition	retval == NULL	41392:6:1310815:1310828	398514	0	True				
ANR	399143	EqualityExpression	retval == NULL		398514	0		==			
ANR	399144	Identifier	retval		398514	0					
ANR	399145	Identifier	NULL		398514	1					
ANR	399146	CompoundStatement		81:22:2801:2801	398514	1					
ANR	399147	SwitchStatement	switch ( type )		398514	0					
ANR	399148	Condition	type	41393:11:1310844:1310847	398514	0	True				
ANR	399149	Identifier	type		398514	0					
ANR	399150	CompoundStatement		82:17:2820:2820	398514	1					
ANR	399151	Label	case BP_VAR_R :	41394:4:1310856:1310869	398514	0	True				
ANR	399152	Identifier	BP_VAR_R		398514	0					
ANR	399153	Label	case BP_VAR_UNSET :	41395:4:1310875:1310892	398514	1	True				
ANR	399154	Identifier	BP_VAR_UNSET		398514	0					
ANR	399155	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	41396:5:1310899:1310960	398514	2	True				
ANR	399156	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		398514	0					
ANR	399157	Callee	zend_error		398514	0					
ANR	399158	Identifier	zend_error		398514	0					
ANR	399159	ArgumentList	E_NOTICE		398514	1					
ANR	399160	Argument	E_NOTICE		398514	0					
ANR	399161	Identifier	E_NOTICE		398514	0					
ANR	399162	Argument	"""Undefined variable: %s"""		398514	1					
ANR	399163	PrimaryExpression	"""Undefined variable: %s"""		398514	0					
ANR	399164	Argument	ZSTR_VAL ( name )		398514	2					
ANR	399165	CallExpression	ZSTR_VAL ( name )		398514	0					
ANR	399166	Callee	ZSTR_VAL		398514	0					
ANR	399167	Identifier	ZSTR_VAL		398514	0					
ANR	399168	ArgumentList	name		398514	1					
ANR	399169	Argument	name		398514	0					
ANR	399170	Identifier	name		398514	0					
ANR	399171	Label	case BP_VAR_IS :	41398:4:1311005:1311019	398514	3	True				
ANR	399172	Identifier	BP_VAR_IS		398514	0					
ANR	399173	ExpressionStatement	retval = & EG ( uninitialized_zval )	41399:5:1311026:1311058	398514	4	True				
ANR	399174	AssignmentExpression	retval = & EG ( uninitialized_zval )		398514	0		=			
ANR	399175	Identifier	retval		398514	0					
ANR	399176	UnaryOperationExpression	& EG ( uninitialized_zval )		398514	1					
ANR	399177	UnaryOperator	&		398514	0					
ANR	399178	CallExpression	EG ( uninitialized_zval )		398514	1					
ANR	399179	Callee	EG		398514	0					
ANR	399180	Identifier	EG		398514	0					
ANR	399181	ArgumentList	uninitialized_zval		398514	1					
ANR	399182	Argument	uninitialized_zval		398514	0					
ANR	399183	Identifier	uninitialized_zval		398514	0					
ANR	399184	BreakStatement	break ;	41400:5:1311065:1311070	398514	5	True				
ANR	399185	Label	case BP_VAR_RW :	41401:4:1311076:1311090	398514	6	True				
ANR	399186	Identifier	BP_VAR_RW		398514	0					
ANR	399187	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	41402:5:1311097:1311158	398514	7	True				
ANR	399188	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		398514	0					
ANR	399189	Callee	zend_error		398514	0					
ANR	399190	Identifier	zend_error		398514	0					
ANR	399191	ArgumentList	E_NOTICE		398514	1					
ANR	399192	Argument	E_NOTICE		398514	0					
ANR	399193	Identifier	E_NOTICE		398514	0					
ANR	399194	Argument	"""Undefined variable: %s"""		398514	1					
ANR	399195	PrimaryExpression	"""Undefined variable: %s"""		398514	0					
ANR	399196	Argument	ZSTR_VAL ( name )		398514	2					
ANR	399197	CallExpression	ZSTR_VAL ( name )		398514	0					
ANR	399198	Callee	ZSTR_VAL		398514	0					
ANR	399199	Identifier	ZSTR_VAL		398514	0					
ANR	399200	ArgumentList	name		398514	1					
ANR	399201	Argument	name		398514	0					
ANR	399202	Identifier	name		398514	0					
ANR	399203	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	41403:5:1311165:1311242	398514	8	True				
ANR	399204	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		398514	0		=			
ANR	399205	Identifier	retval		398514	0					
ANR	399206	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		398514	1					
ANR	399207	Callee	zend_hash_update		398514	0					
ANR	399208	Identifier	zend_hash_update		398514	0					
ANR	399209	ArgumentList	target_symbol_table		398514	1					
ANR	399210	Argument	target_symbol_table		398514	0					
ANR	399211	Identifier	target_symbol_table		398514	0					
ANR	399212	Argument	name		398514	1					
ANR	399213	Identifier	name		398514	0					
ANR	399214	Argument	& EG ( uninitialized_zval )		398514	2					
ANR	399215	UnaryOperationExpression	& EG ( uninitialized_zval )		398514	0					
ANR	399216	UnaryOperator	&		398514	0					
ANR	399217	CallExpression	EG ( uninitialized_zval )		398514	1					
ANR	399218	Callee	EG		398514	0					
ANR	399219	Identifier	EG		398514	0					
ANR	399220	ArgumentList	uninitialized_zval		398514	1					
ANR	399221	Argument	uninitialized_zval		398514	0					
ANR	399222	Identifier	uninitialized_zval		398514	0					
ANR	399223	BreakStatement	break ;	41404:5:1311249:1311254	398514	9	True				
ANR	399224	Label	case BP_VAR_W :	41405:4:1311260:1311273	398514	10	True				
ANR	399225	Identifier	BP_VAR_W		398514	0					
ANR	399226	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	41406:5:1311280:1311358	398514	11	True				
ANR	399227	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		398514	0		=			
ANR	399228	Identifier	retval		398514	0					
ANR	399229	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		398514	1					
ANR	399230	Callee	zend_hash_add_new		398514	0					
ANR	399231	Identifier	zend_hash_add_new		398514	0					
ANR	399232	ArgumentList	target_symbol_table		398514	1					
ANR	399233	Argument	target_symbol_table		398514	0					
ANR	399234	Identifier	target_symbol_table		398514	0					
ANR	399235	Argument	name		398514	1					
ANR	399236	Identifier	name		398514	0					
ANR	399237	Argument	& EG ( uninitialized_zval )		398514	2					
ANR	399238	UnaryOperationExpression	& EG ( uninitialized_zval )		398514	0					
ANR	399239	UnaryOperator	&		398514	0					
ANR	399240	CallExpression	EG ( uninitialized_zval )		398514	1					
ANR	399241	Callee	EG		398514	0					
ANR	399242	Identifier	EG		398514	0					
ANR	399243	ArgumentList	uninitialized_zval		398514	1					
ANR	399244	Argument	uninitialized_zval		398514	0					
ANR	399245	Identifier	uninitialized_zval		398514	0					
ANR	399246	BreakStatement	break ;	41407:5:1311365:1311370	398514	12	True				
ANR	399247	Statement	EMPTY_SWITCH_DEFAULT_CASE	41408:4:1311376:1311400	398514	13	True				
ANR	399248	Statement	(	41408:29:1311401:1311401	398514	14	True				
ANR	399249	Statement	)	41408:30:1311402:1311402	398514	15	True				
ANR	399250	ElseStatement	else		398514	0					
ANR	399251	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		398514	0					
ANR	399252	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	41411:13:1311489:1311519	398514	0	True				
ANR	399253	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		398514	0		==			
ANR	399254	CallExpression	Z_TYPE_P ( retval )		398514	0					
ANR	399255	Callee	Z_TYPE_P		398514	0					
ANR	399256	Identifier	Z_TYPE_P		398514	0					
ANR	399257	ArgumentList	retval		398514	1					
ANR	399258	Argument	retval		398514	0					
ANR	399259	Identifier	retval		398514	0					
ANR	399260	Identifier	IS_INDIRECT		398514	1					
ANR	399261	CompoundStatement		100:46:3492:3492	398514	1					
ANR	399262	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	41412:3:1311527:1311556	398514	0	True				
ANR	399263	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		398514	0		=			
ANR	399264	Identifier	retval		398514	0					
ANR	399265	CallExpression	Z_INDIRECT_P ( retval )		398514	1					
ANR	399266	Callee	Z_INDIRECT_P		398514	0					
ANR	399267	Identifier	Z_INDIRECT_P		398514	0					
ANR	399268	ArgumentList	retval		398514	1					
ANR	399269	Argument	retval		398514	0					
ANR	399270	Identifier	retval		398514	0					
ANR	399271	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		398514	1					
ANR	399272	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	41413:7:1311565:1311592	398514	0	True				
ANR	399273	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		398514	0		==			
ANR	399274	CallExpression	Z_TYPE_P ( retval )		398514	0					
ANR	399275	Callee	Z_TYPE_P		398514	0					
ANR	399276	Identifier	Z_TYPE_P		398514	0					
ANR	399277	ArgumentList	retval		398514	1					
ANR	399278	Argument	retval		398514	0					
ANR	399279	Identifier	retval		398514	0					
ANR	399280	Identifier	IS_UNDEF		398514	1					
ANR	399281	CompoundStatement		102:37:3565:3565	398514	1					
ANR	399282	SwitchStatement	switch ( type )		398514	0					
ANR	399283	Condition	type	41414:12:1311609:1311612	398514	0	True				
ANR	399284	Identifier	type		398514	0					
ANR	399285	CompoundStatement		103:18:3585:3585	398514	1					
ANR	399286	Label	case BP_VAR_R :	41415:5:1311622:1311635	398514	0	True				
ANR	399287	Identifier	BP_VAR_R		398514	0					
ANR	399288	Label	case BP_VAR_UNSET :	41416:5:1311642:1311659	398514	1	True				
ANR	399289	Identifier	BP_VAR_UNSET		398514	0					
ANR	399290	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	41417:6:1311667:1311728	398514	2	True				
ANR	399291	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		398514	0					
ANR	399292	Callee	zend_error		398514	0					
ANR	399293	Identifier	zend_error		398514	0					
ANR	399294	ArgumentList	E_NOTICE		398514	1					
ANR	399295	Argument	E_NOTICE		398514	0					
ANR	399296	Identifier	E_NOTICE		398514	0					
ANR	399297	Argument	"""Undefined variable: %s"""		398514	1					
ANR	399298	PrimaryExpression	"""Undefined variable: %s"""		398514	0					
ANR	399299	Argument	ZSTR_VAL ( name )		398514	2					
ANR	399300	CallExpression	ZSTR_VAL ( name )		398514	0					
ANR	399301	Callee	ZSTR_VAL		398514	0					
ANR	399302	Identifier	ZSTR_VAL		398514	0					
ANR	399303	ArgumentList	name		398514	1					
ANR	399304	Argument	name		398514	0					
ANR	399305	Identifier	name		398514	0					
ANR	399306	Label	case BP_VAR_IS :	41419:5:1311775:1311789	398514	3	True				
ANR	399307	Identifier	BP_VAR_IS		398514	0					
ANR	399308	ExpressionStatement	retval = & EG ( uninitialized_zval )	41420:6:1311797:1311829	398514	4	True				
ANR	399309	AssignmentExpression	retval = & EG ( uninitialized_zval )		398514	0		=			
ANR	399310	Identifier	retval		398514	0					
ANR	399311	UnaryOperationExpression	& EG ( uninitialized_zval )		398514	1					
ANR	399312	UnaryOperator	&		398514	0					
ANR	399313	CallExpression	EG ( uninitialized_zval )		398514	1					
ANR	399314	Callee	EG		398514	0					
ANR	399315	Identifier	EG		398514	0					
ANR	399316	ArgumentList	uninitialized_zval		398514	1					
ANR	399317	Argument	uninitialized_zval		398514	0					
ANR	399318	Identifier	uninitialized_zval		398514	0					
ANR	399319	BreakStatement	break ;	41421:6:1311837:1311842	398514	5	True				
ANR	399320	Label	case BP_VAR_RW :	41422:5:1311849:1311863	398514	6	True				
ANR	399321	Identifier	BP_VAR_RW		398514	0					
ANR	399322	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	41423:6:1311871:1311932	398514	7	True				
ANR	399323	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		398514	0					
ANR	399324	Callee	zend_error		398514	0					
ANR	399325	Identifier	zend_error		398514	0					
ANR	399326	ArgumentList	E_NOTICE		398514	1					
ANR	399327	Argument	E_NOTICE		398514	0					
ANR	399328	Identifier	E_NOTICE		398514	0					
ANR	399329	Argument	"""Undefined variable: %s"""		398514	1					
ANR	399330	PrimaryExpression	"""Undefined variable: %s"""		398514	0					
ANR	399331	Argument	ZSTR_VAL ( name )		398514	2					
ANR	399332	CallExpression	ZSTR_VAL ( name )		398514	0					
ANR	399333	Callee	ZSTR_VAL		398514	0					
ANR	399334	Identifier	ZSTR_VAL		398514	0					
ANR	399335	ArgumentList	name		398514	1					
ANR	399336	Argument	name		398514	0					
ANR	399337	Identifier	name		398514	0					
ANR	399338	Label	case BP_VAR_W :	41425:5:1311979:1311992	398514	8	True				
ANR	399339	Identifier	BP_VAR_W		398514	0					
ANR	399340	ExpressionStatement	ZVAL_NULL ( retval )	41426:6:1312000:1312017	398514	9	True				
ANR	399341	CallExpression	ZVAL_NULL ( retval )		398514	0					
ANR	399342	Callee	ZVAL_NULL		398514	0					
ANR	399343	Identifier	ZVAL_NULL		398514	0					
ANR	399344	ArgumentList	retval		398514	1					
ANR	399345	Argument	retval		398514	0					
ANR	399346	Identifier	retval		398514	0					
ANR	399347	BreakStatement	break ;	41427:6:1312025:1312030	398514	10	True				
ANR	399348	Statement	EMPTY_SWITCH_DEFAULT_CASE	41428:5:1312037:1312061	398514	11	True				
ANR	399349	Statement	(	41428:30:1312062:1312062	398514	12	True				
ANR	399350	Statement	)	41428:31:1312063:1312063	398514	13	True				
ANR	399351	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		398514	3					
ANR	399352	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	41432:6:1312086:1312153	398514	0	True				
ANR	399353	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		398514	0		==			
ANR	399354	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		398514	0		&			
ANR	399355	PtrMemberAccess	opline -> extended_value		398514	0					
ANR	399356	Identifier	opline		398514	0					
ANR	399357	Identifier	extended_value		398514	1					
ANR	399358	Identifier	ZEND_FETCH_TYPE_MASK		398514	1					
ANR	399359	Identifier	ZEND_FETCH_STATIC		398514	1					
ANR	399360	CompoundStatement		121:76:4126:4126	398514	1					
ANR	399361	IfStatement	if ( Z_CONSTANT_P ( retval ) )		398514	0					
ANR	399362	Condition	Z_CONSTANT_P ( retval )	41433:7:1312165:1312184	398514	0	True				
ANR	399363	CallExpression	Z_CONSTANT_P ( retval )		398514	0					
ANR	399364	Callee	Z_CONSTANT_P		398514	0					
ANR	399365	Identifier	Z_CONSTANT_P		398514	0					
ANR	399366	ArgumentList	retval		398514	1					
ANR	399367	Argument	retval		398514	0					
ANR	399368	Identifier	retval		398514	0					
ANR	399369	CompoundStatement		122:29:4157:4157	398514	1					
ANR	399370	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		398514	0					
ANR	399371	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	41434:8:1312197:1312259	398514	0	True				
ANR	399372	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		398514	0					
ANR	399373	Callee	UNEXPECTED		398514	0					
ANR	399374	Identifier	UNEXPECTED		398514	0					
ANR	399375	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		398514	1					
ANR	399376	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		398514	0					
ANR	399377	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		398514	0		!=			
ANR	399378	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		398514	0					
ANR	399379	Callee	zval_update_constant_ex		398514	0					
ANR	399380	Identifier	zval_update_constant_ex		398514	0					
ANR	399381	ArgumentList	retval		398514	1					
ANR	399382	Argument	retval		398514	0					
ANR	399383	Identifier	retval		398514	0					
ANR	399384	Argument	1		398514	1					
ANR	399385	PrimaryExpression	1		398514	0					
ANR	399386	Argument	NULL		398514	2					
ANR	399387	Identifier	NULL		398514	0					
ANR	399388	Identifier	SUCCESS		398514	1					
ANR	399389	CompoundStatement		123:73:4232:4232	398514	1					
ANR	399390	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	41435:5:1312269:1312297	398514	0	True				
ANR	399391	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		398514	0					
ANR	399392	Callee	zval_ptr_dtor_nogc		398514	0					
ANR	399393	Identifier	zval_ptr_dtor_nogc		398514	0					
ANR	399394	ArgumentList	free_op1		398514	1					
ANR	399395	Argument	free_op1		398514	0					
ANR	399396	Identifier	free_op1		398514	0					
ANR	399397	ExpressionStatement	HANDLE_EXCEPTION ( )	41436:5:1312304:1312322	398514	1	True				
ANR	399398	CallExpression	HANDLE_EXCEPTION ( )		398514	0					
ANR	399399	Callee	HANDLE_EXCEPTION		398514	0					
ANR	399400	Identifier	HANDLE_EXCEPTION		398514	0					
ANR	399401	ArgumentList			398514	1					
ANR	399402	ElseStatement	else		398514	0					
ANR	399403	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		398514	0					
ANR	399404	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	41439:13:1312348:1312420	398514	0	True				
ANR	399405	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		398514	0		!=			
ANR	399406	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		398514	0		&			
ANR	399407	PtrMemberAccess	opline -> extended_value		398514	0					
ANR	399408	Identifier	opline		398514	0					
ANR	399409	Identifier	extended_value		398514	1					
ANR	399410	Identifier	ZEND_FETCH_TYPE_MASK		398514	1					
ANR	399411	Identifier	ZEND_FETCH_GLOBAL_LOCK		398514	1					
ANR	399412	CompoundStatement		128:88:4393:4393	398514	1					
ANR	399413	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	41440:3:1312428:1312456	398514	0	True				
ANR	399414	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		398514	0					
ANR	399415	Callee	zval_ptr_dtor_nogc		398514	0					
ANR	399416	Identifier	zval_ptr_dtor_nogc		398514	0					
ANR	399417	ArgumentList	free_op1		398514	1					
ANR	399418	Argument	free_op1		398514	0					
ANR	399419	Identifier	free_op1		398514	0					
ANR	399420	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		398514	9					
ANR	399421	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	41444:5:1312471:1312501	398514	0	True				
ANR	399422	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		398514	0		!=			
ANR	399423	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		398514	0		|			
ANR	399424	Identifier	IS_TMP_VAR		398514	0					
ANR	399425	Identifier	IS_VAR		398514	1					
ANR	399426	Identifier	IS_CONST		398514	1					
ANR	399427	CompoundStatement		133:38:4474:4474	398514	1					
ANR	399428	ExpressionStatement	zend_string_release ( name )	41445:2:1312508:1312533	398514	0	True				
ANR	399429	CallExpression	zend_string_release ( name )		398514	0					
ANR	399430	Callee	zend_string_release		398514	0					
ANR	399431	Identifier	zend_string_release		398514	0					
ANR	399432	ArgumentList	name		398514	1					
ANR	399433	Argument	name		398514	0					
ANR	399434	Identifier	name		398514	0					
ANR	399435	Label	fetch_var_return :	41448:0:1312539:1312555	398514	10	True				
ANR	399436	Identifier	fetch_var_return		398514	0					
ANR	399437	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	41449:1:1312558:1312585	398514	11	True				
ANR	399438	CallExpression	ZEND_ASSERT ( retval != NULL )		398514	0					
ANR	399439	Callee	ZEND_ASSERT		398514	0					
ANR	399440	Identifier	ZEND_ASSERT		398514	0					
ANR	399441	ArgumentList	retval != NULL		398514	1					
ANR	399442	Argument	retval != NULL		398514	0					
ANR	399443	EqualityExpression	retval != NULL		398514	0		!=			
ANR	399444	Identifier	retval		398514	0					
ANR	399445	Identifier	NULL		398514	1					
ANR	399446	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		398514	12					
ANR	399447	Condition	type == BP_VAR_R || type == BP_VAR_IS	41450:5:1312592:1312628	398514	0	True				
ANR	399448	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		398514	0		||			
ANR	399449	EqualityExpression	type == BP_VAR_R		398514	0		==			
ANR	399450	Identifier	type		398514	0					
ANR	399451	Identifier	BP_VAR_R		398514	1					
ANR	399452	EqualityExpression	type == BP_VAR_IS		398514	1		==			
ANR	399453	Identifier	type		398514	0					
ANR	399454	Identifier	BP_VAR_IS		398514	1					
ANR	399455	CompoundStatement		139:44:4601:4601	398514	1					
ANR	399456	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		398514	0					
ANR	399457	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	41451:30:1312663:1312708	398514	0	True				
ANR	399458	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		398514	0		&&			
ANR	399459	CallExpression	Z_ISREF_P ( retval )		398514	0					
ANR	399460	Callee	Z_ISREF_P		398514	0					
ANR	399461	Identifier	Z_ISREF_P		398514	0					
ANR	399462	ArgumentList	retval		398514	1					
ANR	399463	Argument	retval		398514	0					
ANR	399464	Identifier	retval		398514	0					
ANR	399465	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		398514	1		==			
ANR	399466	CallExpression	Z_REFCOUNT_P ( retval )		398514	0					
ANR	399467	Callee	Z_REFCOUNT_P		398514	0					
ANR	399468	Identifier	Z_REFCOUNT_P		398514	0					
ANR	399469	ArgumentList	retval		398514	1					
ANR	399470	Argument	retval		398514	0					
ANR	399471	Identifier	retval		398514	0					
ANR	399472	PrimaryExpression	1		398514	1					
ANR	399473	CompoundStatement		140:78:4681:4681	398514	1					
ANR	399474	ExpressionStatement	ZVAL_UNREF ( retval )	41452:3:1312716:1312734	398514	0	True				
ANR	399475	CallExpression	ZVAL_UNREF ( retval )		398514	0					
ANR	399476	Callee	ZVAL_UNREF		398514	0					
ANR	399477	Identifier	ZVAL_UNREF		398514	0					
ANR	399478	ArgumentList	retval		398514	1					
ANR	399479	Argument	retval		398514	0					
ANR	399480	Identifier	retval		398514	0					
ANR	399481	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	41454:2:1312742:1312787	398514	1	True				
ANR	399482	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		398514	0					
ANR	399483	Callee	ZVAL_COPY		398514	0					
ANR	399484	Identifier	ZVAL_COPY		398514	0					
ANR	399485	ArgumentList	EX_VAR ( opline -> result . var )		398514	1					
ANR	399486	Argument	EX_VAR ( opline -> result . var )		398514	0					
ANR	399487	CallExpression	EX_VAR ( opline -> result . var )		398514	0					
ANR	399488	Callee	EX_VAR		398514	0					
ANR	399489	Identifier	EX_VAR		398514	0					
ANR	399490	ArgumentList	opline -> result . var		398514	1					
ANR	399491	Argument	opline -> result . var		398514	0					
ANR	399492	MemberAccess	opline -> result . var		398514	0					
ANR	399493	PtrMemberAccess	opline -> result		398514	0					
ANR	399494	Identifier	opline		398514	0					
ANR	399495	Identifier	result		398514	1					
ANR	399496	Identifier	var		398514	1					
ANR	399497	Argument	retval		398514	1					
ANR	399498	Identifier	retval		398514	0					
ANR	399499	ElseStatement	else		398514	0					
ANR	399500	CompoundStatement		144:8:4767:4767	398514	0					
ANR	399501	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	41456:2:1312801:1312850	398514	0	True				
ANR	399502	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		398514	0					
ANR	399503	Callee	ZVAL_INDIRECT		398514	0					
ANR	399504	Identifier	ZVAL_INDIRECT		398514	0					
ANR	399505	ArgumentList	EX_VAR ( opline -> result . var )		398514	1					
ANR	399506	Argument	EX_VAR ( opline -> result . var )		398514	0					
ANR	399507	CallExpression	EX_VAR ( opline -> result . var )		398514	0					
ANR	399508	Callee	EX_VAR		398514	0					
ANR	399509	Identifier	EX_VAR		398514	0					
ANR	399510	ArgumentList	opline -> result . var		398514	1					
ANR	399511	Argument	opline -> result . var		398514	0					
ANR	399512	MemberAccess	opline -> result . var		398514	0					
ANR	399513	PtrMemberAccess	opline -> result		398514	0					
ANR	399514	Identifier	opline		398514	0					
ANR	399515	Identifier	result		398514	1					
ANR	399516	Identifier	var		398514	1					
ANR	399517	Argument	retval		398514	1					
ANR	399518	Identifier	retval		398514	0					
ANR	399519	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	41458:1:1312856:1312893	398514	13	True				
ANR	399520	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		398514	0					
ANR	399521	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		398514	0					
ANR	399522	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		398514	0					
ANR	399523	ArgumentList			398514	1					
ANR	399524	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		398514	1					
ANR	399525	Identifier	zend_fetch_var_address_helper_SPEC_TMPVAR_CONST		398514	2					
ANR	399526	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		398514	3					
ANR	399527	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	41311:93:1307991:1308026	398514	0	True				
ANR	399528	ParameterType	int type		398514	0					
ANR	399529	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		398514	1					
ANR	399530	CFGEntryNode	ENTRY		398514		True				
ANR	399531	CFGExitNode	EXIT		398514		True				
ANR	399532	Symbol	ZEND_FETCH_CLASS_DEFAULT		398514						
ANR	399533	Symbol	exception		398514						
ANR	399534	Symbol	zend_get_target_symbol_table		398514						
ANR	399535	Symbol	opline -> op2 . var		398514						
ANR	399536	Symbol	IS_CV		398514						
ANR	399537	Symbol	Z_CONSTANT_P		398514						
ANR	399538	Symbol	* ce		398514						
ANR	399539	Symbol	type		398514						
ANR	399540	Symbol	Z_REFCOUNT_P		398514						
ANR	399541	Symbol	execute_data		398514						
ANR	399542	Symbol	opline -> extended_value		398514						
ANR	399543	Symbol	opline -> result		398514						
ANR	399544	Symbol	zend_std_get_static_property		398514						
ANR	399545	Symbol	zend_hash_find		398514						
ANR	399546	Symbol	opline		398514						
ANR	399547	Symbol	Z_CE_P		398514						
ANR	399548	Symbol	target_symbol_table		398514						
ANR	399549	Symbol	IS_STRING		398514						
ANR	399550	Symbol	ce -> name		398514						
ANR	399551	Symbol	zend_hash_update		398514						
ANR	399552	Symbol	BP_VAR_IS		398514						
ANR	399553	Symbol	IS_UNDEF		398514						
ANR	399554	Symbol	BP_VAR_R		398514						
ANR	399555	Symbol	& free_op1		398514						
ANR	399556	Symbol	IS_TMP_VAR		398514						
ANR	399557	Symbol	IS_CONST		398514						
ANR	399558	Symbol	EG		398514						
ANR	399559	Symbol	NULL		398514						
ANR	399560	Symbol	Z_CACHE_SLOT_P		398514						
ANR	399561	Symbol	EX_CONSTANT		398514						
ANR	399562	Symbol	CE_STATIC_MEMBERS		398514						
ANR	399563	Symbol	E_NOTICE		398514						
ANR	399564	Symbol	varname		398514						
ANR	399565	Symbol	retval		398514						
ANR	399566	Symbol	name		398514						
ANR	399567	Symbol	EX_VAR		398514						
ANR	399568	Symbol	zend_fetch_class_by_name		398514						
ANR	399569	Symbol	Z_STR_P		398514						
ANR	399570	Symbol	IS_VAR		398514						
ANR	399571	Symbol	Z_ISREF_P		398514						
ANR	399572	Symbol	IS_INDIRECT		398514						
ANR	399573	Symbol	opline -> op1		398514						
ANR	399574	Symbol	CACHED_PTR		398514						
ANR	399575	Symbol	opline -> op2		398514						
ANR	399576	Symbol	Z_INDIRECT_P		398514						
ANR	399577	Symbol	& EG		398514						
ANR	399578	Symbol	free_op1		398514						
ANR	399579	Symbol	UNEXPECTED		398514						
ANR	399580	Symbol	ZEND_FETCH_CLASS_EXCEPTION		398514						
ANR	399581	Symbol	ZEND_FETCH_STATIC		398514						
ANR	399582	Symbol	opline -> op1 . var		398514						
ANR	399583	Symbol	uninitialized_zval		398514						
ANR	399584	Symbol	ce		398514						
ANR	399585	Symbol	SUCCESS		398514						
ANR	399586	Symbol	zval_get_string		398514						
ANR	399587	Symbol	ZEND_FETCH_TYPE_MASK		398514						
ANR	399588	Symbol	zend_hash_add_new		398514						
ANR	399589	Symbol	Z_TYPE_P		398514						
ANR	399590	Symbol	CACHED_POLYMORPHIC_PTR		398514						
ANR	399591	Symbol	ZSTR_VAL		398514						
ANR	399592	Symbol	* opline		398514						
ANR	399593	Symbol	ZEND_FETCH_GLOBAL_LOCK		398514						
ANR	399594	Symbol	_get_zval_ptr_var		398514						
ANR	399595	Symbol	zval_update_constant_ex		398514						
ANR	399596	Symbol	EXPECTED		398514						
ANR	399597	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		398514						
ANR	399598	Symbol	opline -> result . var		398514						
ANR	399599	Symbol	IS_UNUSED		398514						
ANR	399600	DeclStmt									
ANR	399601	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399602	DeclStmt									
ANR	399603	Decl							zval	zval *	container
ANR	399604	DeclStmt									
ANR	399605	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399606	DeclStmt									
ANR	399607	Decl							zval	zval *	container
ANR	399608	DeclStmt									
ANR	399609	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399610	DeclStmt									
ANR	399611	Decl							zval	zval *	container
ANR	399612	DeclStmt									
ANR	399613	Decl							zval	zval *	offset
ANR	399614	DeclStmt									
ANR	399615	Decl							zend_object	zend_object *	zobj
ANR	399616	DeclStmt									
ANR	399617	Decl							zval	zval *	retval
ANR	399618	DeclStmt									
ANR	399619	Decl							uint32_t	uint32_t	prop_offset
ANR	399620	DeclStmt									
ANR	399621	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399622	DeclStmt									
ANR	399623	Decl							zval	zval *	container
ANR	399624	DeclStmt									
ANR	399625	Decl							zval	zval *	value
ANR	399626	DeclStmt									
ANR	399627	Decl							zval	zval *	result
ANR	399628	DeclStmt									
ANR	399629	Decl							zval	zval *	retval
ANR	399630	DeclStmt									
ANR	399631	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399632	DeclStmt									
ANR	399633	Decl							zval	zval *	op1
ANR	399634	Decl							zval	zval *	op2
ANR	399635	DeclStmt									
ANR	399636	Decl							zend_string	zend_string *	op1_str
ANR	399637	Decl							zend_string	zend_string *	op2_str
ANR	399638	Decl							zend_string	zend_string *	str
ANR	399639	DeclStmt									
ANR	399640	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	399641	DeclStmt									
ANR	399642	Decl							zend_free_op	zend_free_op	free_op1
ANR	399643	DeclStmt									
ANR	399644	Decl							zval	zval *	object
ANR	399645	DeclStmt									
ANR	399646	Decl							zend_function	zend_function *	fbc
ANR	399647	DeclStmt									
ANR	399648	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	399649	DeclStmt									
ANR	399650	Decl							zend_object	zend_object *	obj
ANR	399651	DeclStmt									
ANR	399652	Decl							zend_execute_data	zend_execute_data *	call
ANR	399653	DeclStmt									
ANR	399654	Decl							uint32_t	uint32_t	call_info
ANR	399655	DeclStmt									
ANR	399656	Decl							zend_object	zend_object *	orig_obj
ANR	399657	DeclStmt									
ANR	399658	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399659	DeclStmt									
ANR	399660	Decl							zval	zval *	op1
ANR	399661	Decl							zval	zval *	op2
ANR	399662	Decl							zval	zval *	result
ANR	399663	DeclStmt									
ANR	399664	Decl							int	int	result
ANR	399665	DeclStmt									
ANR	399666	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	399667	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	399668	DeclStmt									
ANR	399669	Decl							HashTable	HashTable *	target_symbol_table
ANR	399670	DeclStmt									
ANR	399671	Decl							zend_free_op	zend_free_op	free_op1
ANR	399672	DeclStmt									
ANR	399673	Decl							zval	zval *	var
ANR	399674	DeclStmt									
ANR	399675	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	399676	DeclStmt									
ANR	399677	Decl							zval	zval *	z
ANR	399678	DeclStmt									
ANR	399679	Decl							zend_class_entry	zend_class_entry *	ce
ANR	399680	DeclStmt									
ANR	399681	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	399682	DeclStmt									
ANR	399683	Decl							int	int	result
ANR	399684	DeclStmt									
ANR	399685	Decl							zend_free_op	zend_free_op	free_op1
ANR	399686	DeclStmt									
ANR	399687	Decl							zval	zval	tmp
ANR	399688	Decl							zval	zval *	varname
ANR	399689	DeclStmt									
ANR	399690	Decl							zend_class_entry	zend_class_entry *	ce
ANR	399691	DeclStmt									
ANR	399692	Decl							HashTable	HashTable *	target_symbol_table
ANR	399693	DeclStmt									
ANR	399694	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399695	DeclStmt									
ANR	399696	Decl							zval	zval *	container
ANR	399697	DeclStmt									
ANR	399698	Decl							int	int	result
ANR	399699	DeclStmt									
ANR	399700	Decl							zend_ulong	zend_ulong	hval
ANR	399701	DeclStmt									
ANR	399702	Decl							zval	zval *	offset
ANR	399703	DeclStmt									
ANR	399704	Decl							HashTable	HashTable *	ht
ANR	399705	DeclStmt									
ANR	399706	Decl							zval	zval *	value
ANR	399707	DeclStmt									
ANR	399708	Decl							zend_string	zend_string *	str
ANR	399709	DeclStmt									
ANR	399710	Decl							zend_long	zend_long	lval
ANR	399711	DeclStmt									
ANR	399712	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399713	DeclStmt									
ANR	399714	Decl							zval	zval *	container
ANR	399715	DeclStmt									
ANR	399716	Decl							int	int	result
ANR	399717	DeclStmt									
ANR	399718	Decl							zval	zval *	offset
ANR	399719	DeclStmt									
ANR	399720	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	399721	DeclStmt									
ANR	399722	Decl							zval	zval *	expr
ANR	399723	DeclStmt									
ANR	399724	Decl							zend_bool	zend_bool	result
ANR	399725	DeclStmt									
ANR	399726	Decl							zend_class_entry	zend_class_entry *	ce
ANR	399727	Function	zend_fetch_var_address_helper_SPEC_TMPVAR_VAR	42302:0:1339612:1344603							
ANR	399728	FunctionDef	zend_fetch_var_address_helper_SPEC_TMPVAR_VAR (int type ZEND_OPCODE_HANDLER_ARGS_DC)		399727	0					
ANR	399729	CompoundStatement		42303:0:1339741:1344603	399727	0					
ANR	399730	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	42304:1:1339744:1339777	399727	0	True				
ANR	399731	IdentifierDecl	free_op1		399727	0					
ANR	399732	IdentifierDeclType	USE_OPLINE zend_free_op		399727	0					
ANR	399733	Identifier	free_op1		399727	1					
ANR	399734	IdentifierDeclStatement	zval * varname ;	42306:1:1339780:1339793	399727	1	True				
ANR	399735	IdentifierDecl	* varname		399727	0					
ANR	399736	IdentifierDeclType	zval *		399727	0					
ANR	399737	Identifier	varname		399727	1					
ANR	399738	IdentifierDeclStatement	zval * retval ;	42307:1:1339796:1339808	399727	2	True				
ANR	399739	IdentifierDecl	* retval		399727	0					
ANR	399740	IdentifierDeclType	zval *		399727	0					
ANR	399741	Identifier	retval		399727	1					
ANR	399742	IdentifierDeclStatement	zend_string * name ;	42308:1:1339811:1339828	399727	3	True				
ANR	399743	IdentifierDecl	* name		399727	0					
ANR	399744	IdentifierDeclType	zend_string *		399727	0					
ANR	399745	Identifier	name		399727	1					
ANR	399746	IdentifierDeclStatement	HashTable * target_symbol_table ;	42309:1:1339831:1339861	399727	4	True				
ANR	399747	IdentifierDecl	* target_symbol_table		399727	0					
ANR	399748	IdentifierDeclType	HashTable *		399727	0					
ANR	399749	Identifier	target_symbol_table		399727	1					
ANR	399750	ExpressionStatement	SAVE_OPLINE ( )	42311:1:1339865:1339878	399727	5	True				
ANR	399751	CallExpression	SAVE_OPLINE ( )		399727	0					
ANR	399752	Callee	SAVE_OPLINE		399727	0					
ANR	399753	Identifier	SAVE_OPLINE		399727	0					
ANR	399754	ArgumentList			399727	1					
ANR	399755	ExpressionStatement	"varname = _get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	42312:1:1339881:1339950	399727	6	True				
ANR	399756	AssignmentExpression	"varname = _get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		399727	0		=			
ANR	399757	Identifier	varname		399727	0					
ANR	399758	CallExpression	"_get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		399727	1					
ANR	399759	Callee	_get_zval_ptr_var		399727	0					
ANR	399760	Identifier	_get_zval_ptr_var		399727	0					
ANR	399761	ArgumentList	opline -> op1 . var		399727	1					
ANR	399762	Argument	opline -> op1 . var		399727	0					
ANR	399763	MemberAccess	opline -> op1 . var		399727	0					
ANR	399764	PtrMemberAccess	opline -> op1		399727	0					
ANR	399765	Identifier	opline		399727	0					
ANR	399766	Identifier	op1		399727	1					
ANR	399767	Identifier	var		399727	1					
ANR	399768	Argument	execute_data		399727	1					
ANR	399769	Identifier	execute_data		399727	0					
ANR	399770	Argument	& free_op1		399727	2					
ANR	399771	UnaryOperationExpression	& free_op1		399727	0					
ANR	399772	UnaryOperator	&		399727	0					
ANR	399773	Identifier	free_op1		399727	1					
ANR	399774	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST )		399727	7					
ANR	399775	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST	42314:6:1339959:1339989	399727	0	True				
ANR	399776	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		399727	0		==			
ANR	399777	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	399778	Identifier	IS_TMP_VAR		399727	0					
ANR	399779	Identifier	IS_VAR		399727	1					
ANR	399780	Identifier	IS_CONST		399727	1					
ANR	399781	CompoundStatement		12:39:250:250	399727	1					
ANR	399782	ExpressionStatement	name = Z_STR_P ( varname )	42315:2:1339996:1340019	399727	0	True				
ANR	399783	AssignmentExpression	name = Z_STR_P ( varname )		399727	0		=			
ANR	399784	Identifier	name		399727	0					
ANR	399785	CallExpression	Z_STR_P ( varname )		399727	1					
ANR	399786	Callee	Z_STR_P		399727	0					
ANR	399787	Identifier	Z_STR_P		399727	0					
ANR	399788	ArgumentList	varname		399727	1					
ANR	399789	Argument	varname		399727	0					
ANR	399790	Identifier	varname		399727	0					
ANR	399791	ElseStatement	else		399727	0					
ANR	399792	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		399727	0					
ANR	399793	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	42316:12:1340033:1340072	399727	0	True				
ANR	399794	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		399727	0					
ANR	399795	Callee	EXPECTED		399727	0					
ANR	399796	Identifier	EXPECTED		399727	0					
ANR	399797	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		399727	1					
ANR	399798	Argument	Z_TYPE_P ( varname ) == IS_STRING		399727	0					
ANR	399799	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		399727	0		==			
ANR	399800	CallExpression	Z_TYPE_P ( varname )		399727	0					
ANR	399801	Callee	Z_TYPE_P		399727	0					
ANR	399802	Identifier	Z_TYPE_P		399727	0					
ANR	399803	ArgumentList	varname		399727	1					
ANR	399804	Argument	varname		399727	0					
ANR	399805	Identifier	varname		399727	0					
ANR	399806	Identifier	IS_STRING		399727	1					
ANR	399807	CompoundStatement		14:54:333:333	399727	1					
ANR	399808	ExpressionStatement	name = Z_STR_P ( varname )	42317:2:1340079:1340102	399727	0	True				
ANR	399809	AssignmentExpression	name = Z_STR_P ( varname )		399727	0		=			
ANR	399810	Identifier	name		399727	0					
ANR	399811	CallExpression	Z_STR_P ( varname )		399727	1					
ANR	399812	Callee	Z_STR_P		399727	0					
ANR	399813	Identifier	Z_STR_P		399727	0					
ANR	399814	ArgumentList	varname		399727	1					
ANR	399815	Argument	varname		399727	0					
ANR	399816	Identifier	varname		399727	0					
ANR	399817	ExpressionStatement	zend_string_addref ( name )	42318:2:1340106:1340130	399727	1	True				
ANR	399818	CallExpression	zend_string_addref ( name )		399727	0					
ANR	399819	Callee	zend_string_addref		399727	0					
ANR	399820	Identifier	zend_string_addref		399727	0					
ANR	399821	ArgumentList	name		399727	1					
ANR	399822	Argument	name		399727	0					
ANR	399823	Identifier	name		399727	0					
ANR	399824	ElseStatement	else		399727	0					
ANR	399825	CompoundStatement		17:8:398:398	399727	0					
ANR	399826	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		399727	0					
ANR	399827	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	42320:6:1340148:1340220	399727	0	True				
ANR	399828	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		399727	0		&&			
ANR	399829	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CV		399727	0		==			
ANR	399830	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	399831	Identifier	IS_TMP_VAR		399727	0					
ANR	399832	Identifier	IS_VAR		399727	1					
ANR	399833	Identifier	IS_CV		399727	1					
ANR	399834	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		399727	1					
ANR	399835	Callee	UNEXPECTED		399727	0					
ANR	399836	Identifier	UNEXPECTED		399727	0					
ANR	399837	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		399727	1					
ANR	399838	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		399727	0					
ANR	399839	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		399727	0		==			
ANR	399840	CallExpression	Z_TYPE_P ( varname )		399727	0					
ANR	399841	Callee	Z_TYPE_P		399727	0					
ANR	399842	Identifier	Z_TYPE_P		399727	0					
ANR	399843	ArgumentList	varname		399727	1					
ANR	399844	Argument	varname		399727	0					
ANR	399845	Identifier	varname		399727	0					
ANR	399846	Identifier	IS_UNDEF		399727	1					
ANR	399847	CompoundStatement		18:81:481:481	399727	1					
ANR	399848	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	42321:3:1340228:1340263	399727	0	True				
ANR	399849	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		399727	0					
ANR	399850	Callee	GET_OP1_UNDEF_CV		399727	0					
ANR	399851	Identifier	GET_OP1_UNDEF_CV		399727	0					
ANR	399852	ArgumentList	varname		399727	1					
ANR	399853	Argument	varname		399727	0					
ANR	399854	Identifier	varname		399727	0					
ANR	399855	Argument	BP_VAR_R		399727	1					
ANR	399856	Identifier	BP_VAR_R		399727	0					
ANR	399857	ExpressionStatement	name = zval_get_string ( varname )	42323:2:1340271:1340302	399727	1	True				
ANR	399858	AssignmentExpression	name = zval_get_string ( varname )		399727	0		=			
ANR	399859	Identifier	name		399727	0					
ANR	399860	CallExpression	zval_get_string ( varname )		399727	1					
ANR	399861	Callee	zval_get_string		399727	0					
ANR	399862	Identifier	zval_get_string		399727	0					
ANR	399863	ArgumentList	varname		399727	1					
ANR	399864	Argument	varname		399727	0					
ANR	399865	Identifier	varname		399727	0					
ANR	399866	IfStatement	if ( IS_VAR != IS_UNUSED )		399727	8					
ANR	399867	Condition	IS_VAR != IS_UNUSED	42326:5:1340313:1340331	399727	0	True				
ANR	399868	EqualityExpression	IS_VAR != IS_UNUSED		399727	0		!=			
ANR	399869	Identifier	IS_VAR		399727	0					
ANR	399870	Identifier	IS_UNUSED		399727	1					
ANR	399871	CompoundStatement		25:2:596:616	399727	1					
ANR	399872	IdentifierDeclStatement	zend_class_entry * ce ;	42327:2:1340338:1340358	399727	0	True				
ANR	399873	IdentifierDecl	* ce		399727	0					
ANR	399874	IdentifierDeclType	zend_class_entry *		399727	0					
ANR	399875	Identifier	ce		399727	1					
ANR	399876	IfStatement	if ( IS_VAR == IS_CONST )		399727	1					
ANR	399877	Condition	IS_VAR == IS_CONST	42329:6:1340367:1340384	399727	0	True				
ANR	399878	EqualityExpression	IS_VAR == IS_CONST		399727	0		==			
ANR	399879	Identifier	IS_VAR		399727	0					
ANR	399880	Identifier	IS_CONST		399727	1					
ANR	399881	CompoundStatement		27:26:645:645	399727	1					
ANR	399882	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		399727	0					
ANR	399883	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	42330:7:1340396:1340507	399727	0	True				
ANR	399884	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		399727	0		&&			
ANR	399885	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		399727	0		==			
ANR	399886	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	399887	Identifier	IS_TMP_VAR		399727	0					
ANR	399888	Identifier	IS_VAR		399727	1					
ANR	399889	Identifier	IS_CONST		399727	1					
ANR	399890	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		399727	1					
ANR	399891	Callee	EXPECTED		399727	0					
ANR	399892	Identifier	EXPECTED		399727	0					
ANR	399893	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		399727	1					
ANR	399894	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		399727	0					
ANR	399895	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		399727	0		!=			
ANR	399896	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		399727	0		=			
ANR	399897	Identifier	ce		399727	0					
ANR	399898	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		399727	1					
ANR	399899	Callee	CACHED_PTR		399727	0					
ANR	399900	Identifier	CACHED_PTR		399727	0					
ANR	399901	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	1					
ANR	399902	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	0					
ANR	399903	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	0					
ANR	399904	Callee	Z_CACHE_SLOT_P		399727	0					
ANR	399905	Identifier	Z_CACHE_SLOT_P		399727	0					
ANR	399906	ArgumentList	EX_CONSTANT ( opline -> op1 )		399727	1					
ANR	399907	Argument	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	399908	CallExpression	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	399909	Callee	EX_CONSTANT		399727	0					
ANR	399910	Identifier	EX_CONSTANT		399727	0					
ANR	399911	ArgumentList	opline -> op1		399727	1					
ANR	399912	Argument	opline -> op1		399727	0					
ANR	399913	PtrMemberAccess	opline -> op1		399727	0					
ANR	399914	Identifier	opline		399727	0					
ANR	399915	Identifier	op1		399727	1					
ANR	399916	Identifier	NULL		399727	1					
ANR	399917	CompoundStatement		28:121:768:768	399727	1					
ANR	399918	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	42331:4:1340516:1340593	399727	0	True				
ANR	399919	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		399727	0		=			
ANR	399920	Identifier	retval		399727	0					
ANR	399921	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		399727	1					
ANR	399922	Callee	CACHED_PTR		399727	0					
ANR	399923	Identifier	CACHED_PTR		399727	0					
ANR	399924	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		399727	1					
ANR	399925	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		399727	0					
ANR	399926	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		399727	0		+			
ANR	399927	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	0					
ANR	399928	Callee	Z_CACHE_SLOT_P		399727	0					
ANR	399929	Identifier	Z_CACHE_SLOT_P		399727	0					
ANR	399930	ArgumentList	EX_CONSTANT ( opline -> op1 )		399727	1					
ANR	399931	Argument	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	399932	CallExpression	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	399933	Callee	EX_CONSTANT		399727	0					
ANR	399934	Identifier	EX_CONSTANT		399727	0					
ANR	399935	ArgumentList	opline -> op1		399727	1					
ANR	399936	Argument	opline -> op1		399727	0					
ANR	399937	PtrMemberAccess	opline -> op1		399727	0					
ANR	399938	Identifier	opline		399727	0					
ANR	399939	Identifier	op1		399727	1					
ANR	399940	SizeofExpression	sizeof ( void * )		399727	1					
ANR	399941	Sizeof	sizeof		399727	0					
ANR	399942	SizeofOperand	void *		399727	1					
ANR	399943	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		399727	1					
ANR	399944	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	42334:8:1340655:1340695	399727	0	True				
ANR	399945	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		399727	0					
ANR	399946	Callee	UNEXPECTED		399727	0					
ANR	399947	Identifier	UNEXPECTED		399727	0					
ANR	399948	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		399727	1					
ANR	399949	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		399727	0					
ANR	399950	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		399727	0		==			
ANR	399951	CallExpression	CE_STATIC_MEMBERS ( ce )		399727	0					
ANR	399952	Callee	CE_STATIC_MEMBERS		399727	0					
ANR	399953	Identifier	CE_STATIC_MEMBERS		399727	0					
ANR	399954	ArgumentList	ce		399727	1					
ANR	399955	Argument	ce		399727	0					
ANR	399956	Identifier	ce		399727	0					
ANR	399957	Identifier	NULL		399727	1					
ANR	399958	CompoundStatement		32:51:956:956	399727	1					
ANR	399959	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	42335:5:1340705:1340812	399727	0	True				
ANR	399960	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		399727	0					
ANR	399961	Callee	zend_throw_error		399727	0					
ANR	399962	Identifier	zend_throw_error		399727	0					
ANR	399963	ArgumentList	NULL		399727	1					
ANR	399964	Argument	NULL		399727	0					
ANR	399965	Identifier	NULL		399727	0					
ANR	399966	Argument	"""Access to undeclared static property: %s::$%s"""		399727	1					
ANR	399967	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		399727	0					
ANR	399968	Argument	ZSTR_VAL ( ce -> name )		399727	2					
ANR	399969	CallExpression	ZSTR_VAL ( ce -> name )		399727	0					
ANR	399970	Callee	ZSTR_VAL		399727	0					
ANR	399971	Identifier	ZSTR_VAL		399727	0					
ANR	399972	ArgumentList	ce -> name		399727	1					
ANR	399973	Argument	ce -> name		399727	0					
ANR	399974	PtrMemberAccess	ce -> name		399727	0					
ANR	399975	Identifier	ce		399727	0					
ANR	399976	Identifier	name		399727	1					
ANR	399977	Argument	ZSTR_VAL ( name )		399727	3					
ANR	399978	CallExpression	ZSTR_VAL ( name )		399727	0					
ANR	399979	Callee	ZSTR_VAL		399727	0					
ANR	399980	Identifier	ZSTR_VAL		399727	0					
ANR	399981	ArgumentList	name		399727	1					
ANR	399982	Argument	name		399727	0					
ANR	399983	Identifier	name		399727	0					
ANR	399984	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42336:5:1340819:1340847	399727	1	True				
ANR	399985	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		399727	0					
ANR	399986	Callee	zval_ptr_dtor_nogc		399727	0					
ANR	399987	Identifier	zval_ptr_dtor_nogc		399727	0					
ANR	399988	ArgumentList	free_op1		399727	1					
ANR	399989	Argument	free_op1		399727	0					
ANR	399990	Identifier	free_op1		399727	0					
ANR	399991	ExpressionStatement	HANDLE_EXCEPTION ( )	42337:5:1340854:1340872	399727	2	True				
ANR	399992	CallExpression	HANDLE_EXCEPTION ( )		399727	0					
ANR	399993	Callee	HANDLE_EXCEPTION		399727	0					
ANR	399994	Identifier	HANDLE_EXCEPTION		399727	0					
ANR	399995	ArgumentList			399727	1					
ANR	399996	GotoStatement	goto fetch_var_return ;	42340:4:1340885:1340906	399727	2	True				
ANR	399997	Identifier	fetch_var_return		399727	0					
ANR	399998	ElseStatement	else		399727	0					
ANR	399999	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		399727	0					
ANR	400000	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	42341:14:1340922:1341000	399727	0	True				
ANR	400001	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		399727	0					
ANR	400002	Callee	UNEXPECTED		399727	0					
ANR	400003	Identifier	UNEXPECTED		399727	0					
ANR	400004	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		399727	1					
ANR	400005	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		399727	0					
ANR	400006	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		399727	0		==			
ANR	400007	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		399727	0		=			
ANR	400008	Identifier	ce		399727	0					
ANR	400009	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		399727	1					
ANR	400010	Callee	CACHED_PTR		399727	0					
ANR	400011	Identifier	CACHED_PTR		399727	0					
ANR	400012	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		399727	1					
ANR	400013	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		399727	0					
ANR	400014	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		399727	0					
ANR	400015	Callee	Z_CACHE_SLOT_P		399727	0					
ANR	400016	Identifier	Z_CACHE_SLOT_P		399727	0					
ANR	400017	ArgumentList	EX_CONSTANT ( opline -> op2 )		399727	1					
ANR	400018	Argument	EX_CONSTANT ( opline -> op2 )		399727	0					
ANR	400019	CallExpression	EX_CONSTANT ( opline -> op2 )		399727	0					
ANR	400020	Callee	EX_CONSTANT		399727	0					
ANR	400021	Identifier	EX_CONSTANT		399727	0					
ANR	400022	ArgumentList	opline -> op2		399727	1					
ANR	400023	Argument	opline -> op2		399727	0					
ANR	400024	PtrMemberAccess	opline -> op2		399727	0					
ANR	400025	Identifier	opline		399727	0					
ANR	400026	Identifier	op2		399727	1					
ANR	400027	Identifier	NULL		399727	1					
ANR	400028	CompoundStatement		39:95:1261:1261	399727	1					
ANR	400029	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	42342:4:1341009:1341158	399727	0	True				
ANR	400030	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		399727	0		=			
ANR	400031	Identifier	ce		399727	0					
ANR	400032	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		399727	1					
ANR	400033	Callee	zend_fetch_class_by_name		399727	0					
ANR	400034	Identifier	zend_fetch_class_by_name		399727	0					
ANR	400035	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		399727	1					
ANR	400036	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		399727	0					
ANR	400037	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		399727	0					
ANR	400038	Callee	Z_STR_P		399727	0					
ANR	400039	Identifier	Z_STR_P		399727	0					
ANR	400040	ArgumentList	EX_CONSTANT ( opline -> op2 )		399727	1					
ANR	400041	Argument	EX_CONSTANT ( opline -> op2 )		399727	0					
ANR	400042	CallExpression	EX_CONSTANT ( opline -> op2 )		399727	0					
ANR	400043	Callee	EX_CONSTANT		399727	0					
ANR	400044	Identifier	EX_CONSTANT		399727	0					
ANR	400045	ArgumentList	opline -> op2		399727	1					
ANR	400046	Argument	opline -> op2		399727	0					
ANR	400047	PtrMemberAccess	opline -> op2		399727	0					
ANR	400048	Identifier	opline		399727	0					
ANR	400049	Identifier	op2		399727	1					
ANR	400050	Argument	EX_CONSTANT ( opline -> op2 ) + 1		399727	1					
ANR	400051	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		399727	0		+			
ANR	400052	CallExpression	EX_CONSTANT ( opline -> op2 )		399727	0					
ANR	400053	Callee	EX_CONSTANT		399727	0					
ANR	400054	Identifier	EX_CONSTANT		399727	0					
ANR	400055	ArgumentList	opline -> op2		399727	1					
ANR	400056	Argument	opline -> op2		399727	0					
ANR	400057	PtrMemberAccess	opline -> op2		399727	0					
ANR	400058	Identifier	opline		399727	0					
ANR	400059	Identifier	op2		399727	1					
ANR	400060	PrimaryExpression	1		399727	1					
ANR	400061	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		399727	2					
ANR	400062	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		399727	0		|			
ANR	400063	Identifier	ZEND_FETCH_CLASS_DEFAULT		399727	0					
ANR	400064	Identifier	ZEND_FETCH_CLASS_EXCEPTION		399727	1					
ANR	400065	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		399727	1					
ANR	400066	Condition	UNEXPECTED ( ce == NULL )	42343:8:1341168:1341189	399727	0	True				
ANR	400067	CallExpression	UNEXPECTED ( ce == NULL )		399727	0					
ANR	400068	Callee	UNEXPECTED		399727	0					
ANR	400069	Identifier	UNEXPECTED		399727	0					
ANR	400070	ArgumentList	ce == NULL		399727	1					
ANR	400071	Argument	ce == NULL		399727	0					
ANR	400072	EqualityExpression	ce == NULL		399727	0		==			
ANR	400073	Identifier	ce		399727	0					
ANR	400074	Identifier	NULL		399727	1					
ANR	400075	CompoundStatement		41:32:1450:1450	399727	1					
ANR	400076	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		399727	0					
ANR	400077	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	42344:9:1341203:1341233	399727	0	True				
ANR	400078	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		399727	0		!=			
ANR	400079	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	400080	Identifier	IS_TMP_VAR		399727	0					
ANR	400081	Identifier	IS_VAR		399727	1					
ANR	400082	Identifier	IS_CONST		399727	1					
ANR	400083	CompoundStatement		42:42:1494:1494	399727	1					
ANR	400084	ExpressionStatement	zend_string_release ( name )	42345:6:1341244:1341269	399727	0	True				
ANR	400085	CallExpression	zend_string_release ( name )		399727	0					
ANR	400086	Callee	zend_string_release		399727	0					
ANR	400087	Identifier	zend_string_release		399727	0					
ANR	400088	ArgumentList	name		399727	1					
ANR	400089	Argument	name		399727	0					
ANR	400090	Identifier	name		399727	0					
ANR	400091	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42347:5:1341283:1341311	399727	1	True				
ANR	400092	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		399727	0					
ANR	400093	Callee	zval_ptr_dtor_nogc		399727	0					
ANR	400094	Identifier	zval_ptr_dtor_nogc		399727	0					
ANR	400095	ArgumentList	free_op1		399727	1					
ANR	400096	Argument	free_op1		399727	0					
ANR	400097	Identifier	free_op1		399727	0					
ANR	400098	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	42348:5:1341318:1341355	399727	2	True				
ANR	400099	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		399727	0					
ANR	400100	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		399727	0					
ANR	400101	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		399727	0					
ANR	400102	ArgumentList			399727	1					
ANR	400103	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	42350:4:1341367:1341422	399727	2	True				
ANR	400104	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		399727	0					
ANR	400105	Callee	CACHE_PTR		399727	0					
ANR	400106	Identifier	CACHE_PTR		399727	0					
ANR	400107	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		399727	1					
ANR	400108	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		399727	0					
ANR	400109	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		399727	0					
ANR	400110	Callee	Z_CACHE_SLOT_P		399727	0					
ANR	400111	Identifier	Z_CACHE_SLOT_P		399727	0					
ANR	400112	ArgumentList	EX_CONSTANT ( opline -> op2 )		399727	1					
ANR	400113	Argument	EX_CONSTANT ( opline -> op2 )		399727	0					
ANR	400114	CallExpression	EX_CONSTANT ( opline -> op2 )		399727	0					
ANR	400115	Callee	EX_CONSTANT		399727	0					
ANR	400116	Identifier	EX_CONSTANT		399727	0					
ANR	400117	ArgumentList	opline -> op2		399727	1					
ANR	400118	Argument	opline -> op2		399727	0					
ANR	400119	PtrMemberAccess	opline -> op2		399727	0					
ANR	400120	Identifier	opline		399727	0					
ANR	400121	Identifier	op2		399727	1					
ANR	400122	Argument	ce		399727	1					
ANR	400123	Identifier	ce		399727	0					
ANR	400124	ElseStatement	else		399727	0					
ANR	400125	CompoundStatement		50:9:1696:1696	399727	0					
ANR	400126	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	42353:3:1341443:1341479	399727	0	True				
ANR	400127	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		399727	0		=			
ANR	400128	Identifier	ce		399727	0					
ANR	400129	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		399727	1					
ANR	400130	Callee	Z_CE_P		399727	0					
ANR	400131	Identifier	Z_CE_P		399727	0					
ANR	400132	ArgumentList	EX_VAR ( opline -> op2 . var )		399727	1					
ANR	400133	Argument	EX_VAR ( opline -> op2 . var )		399727	0					
ANR	400134	CallExpression	EX_VAR ( opline -> op2 . var )		399727	0					
ANR	400135	Callee	EX_VAR		399727	0					
ANR	400136	Identifier	EX_VAR		399727	0					
ANR	400137	ArgumentList	opline -> op2 . var		399727	1					
ANR	400138	Argument	opline -> op2 . var		399727	0					
ANR	400139	MemberAccess	opline -> op2 . var		399727	0					
ANR	400140	PtrMemberAccess	opline -> op2		399727	0					
ANR	400141	Identifier	opline		399727	0					
ANR	400142	Identifier	op2		399727	1					
ANR	400143	Identifier	var		399727	1					
ANR	400144	IfStatement	"if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		399727	1					
ANR	400145	Condition	"( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	42354:7:1341488:1341616	399727	0	True				
ANR	400146	AndExpression	"( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		399727	0		&&			
ANR	400147	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		399727	0		==			
ANR	400148	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	400149	Identifier	IS_TMP_VAR		399727	0					
ANR	400150	Identifier	IS_VAR		399727	1					
ANR	400151	Identifier	IS_CONST		399727	1					
ANR	400152	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		399727	1		!=			
ANR	400153	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		399727	0		=			
ANR	400154	Identifier	retval		399727	0					
ANR	400155	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		399727	1					
ANR	400156	Callee	CACHED_POLYMORPHIC_PTR		399727	0					
ANR	400157	Identifier	CACHED_POLYMORPHIC_PTR		399727	0					
ANR	400158	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	1					
ANR	400159	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	0					
ANR	400160	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	0					
ANR	400161	Callee	Z_CACHE_SLOT_P		399727	0					
ANR	400162	Identifier	Z_CACHE_SLOT_P		399727	0					
ANR	400163	ArgumentList	EX_CONSTANT ( opline -> op1 )		399727	1					
ANR	400164	Argument	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	400165	CallExpression	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	400166	Callee	EX_CONSTANT		399727	0					
ANR	400167	Identifier	EX_CONSTANT		399727	0					
ANR	400168	ArgumentList	opline -> op1		399727	1					
ANR	400169	Argument	opline -> op1		399727	0					
ANR	400170	PtrMemberAccess	opline -> op1		399727	0					
ANR	400171	Identifier	opline		399727	0					
ANR	400172	Identifier	op1		399727	1					
ANR	400173	Argument	ce		399727	1					
ANR	400174	Identifier	ce		399727	0					
ANR	400175	Identifier	NULL		399727	1					
ANR	400176	CompoundStatement		53:96:1877:1877	399727	1					
ANR	400177	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		399727	0					
ANR	400178	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	42358:8:1341681:1341721	399727	0	True				
ANR	400179	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		399727	0					
ANR	400180	Callee	UNEXPECTED		399727	0					
ANR	400181	Identifier	UNEXPECTED		399727	0					
ANR	400182	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		399727	1					
ANR	400183	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		399727	0					
ANR	400184	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		399727	0		==			
ANR	400185	CallExpression	CE_STATIC_MEMBERS ( ce )		399727	0					
ANR	400186	Callee	CE_STATIC_MEMBERS		399727	0					
ANR	400187	Identifier	CE_STATIC_MEMBERS		399727	0					
ANR	400188	ArgumentList	ce		399727	1					
ANR	400189	Argument	ce		399727	0					
ANR	400190	Identifier	ce		399727	0					
ANR	400191	Identifier	NULL		399727	1					
ANR	400192	CompoundStatement		56:51:1982:1982	399727	1					
ANR	400193	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	42359:5:1341731:1341838	399727	0	True				
ANR	400194	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		399727	0					
ANR	400195	Callee	zend_throw_error		399727	0					
ANR	400196	Identifier	zend_throw_error		399727	0					
ANR	400197	ArgumentList	NULL		399727	1					
ANR	400198	Argument	NULL		399727	0					
ANR	400199	Identifier	NULL		399727	0					
ANR	400200	Argument	"""Access to undeclared static property: %s::$%s"""		399727	1					
ANR	400201	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		399727	0					
ANR	400202	Argument	ZSTR_VAL ( ce -> name )		399727	2					
ANR	400203	CallExpression	ZSTR_VAL ( ce -> name )		399727	0					
ANR	400204	Callee	ZSTR_VAL		399727	0					
ANR	400205	Identifier	ZSTR_VAL		399727	0					
ANR	400206	ArgumentList	ce -> name		399727	1					
ANR	400207	Argument	ce -> name		399727	0					
ANR	400208	PtrMemberAccess	ce -> name		399727	0					
ANR	400209	Identifier	ce		399727	0					
ANR	400210	Identifier	name		399727	1					
ANR	400211	Argument	ZSTR_VAL ( name )		399727	3					
ANR	400212	CallExpression	ZSTR_VAL ( name )		399727	0					
ANR	400213	Callee	ZSTR_VAL		399727	0					
ANR	400214	Identifier	ZSTR_VAL		399727	0					
ANR	400215	ArgumentList	name		399727	1					
ANR	400216	Argument	name		399727	0					
ANR	400217	Identifier	name		399727	0					
ANR	400218	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42360:5:1341845:1341873	399727	1	True				
ANR	400219	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		399727	0					
ANR	400220	Callee	zval_ptr_dtor_nogc		399727	0					
ANR	400221	Identifier	zval_ptr_dtor_nogc		399727	0					
ANR	400222	ArgumentList	free_op1		399727	1					
ANR	400223	Argument	free_op1		399727	0					
ANR	400224	Identifier	free_op1		399727	0					
ANR	400225	ExpressionStatement	HANDLE_EXCEPTION ( )	42361:5:1341880:1341898	399727	2	True				
ANR	400226	CallExpression	HANDLE_EXCEPTION ( )		399727	0					
ANR	400227	Callee	HANDLE_EXCEPTION		399727	0					
ANR	400228	Identifier	HANDLE_EXCEPTION		399727	0					
ANR	400229	ArgumentList			399727	1					
ANR	400230	GotoStatement	goto fetch_var_return ;	42364:4:1341911:1341932	399727	1	True				
ANR	400231	Identifier	fetch_var_return		399727	0					
ANR	400232	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	42367:2:1341945:1341995	399727	2	True				
ANR	400233	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		399727	0		=			
ANR	400234	Identifier	retval		399727	0					
ANR	400235	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		399727	1					
ANR	400236	Callee	zend_std_get_static_property		399727	0					
ANR	400237	Identifier	zend_std_get_static_property		399727	0					
ANR	400238	ArgumentList	ce		399727	1					
ANR	400239	Argument	ce		399727	0					
ANR	400240	Identifier	ce		399727	0					
ANR	400241	Argument	name		399727	1					
ANR	400242	Identifier	name		399727	0					
ANR	400243	Argument	0		399727	2					
ANR	400244	PrimaryExpression	0		399727	0					
ANR	400245	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		399727	3					
ANR	400246	Condition	UNEXPECTED ( EG ( exception ) )	42368:6:1342003:1342027	399727	0	True				
ANR	400247	CallExpression	UNEXPECTED ( EG ( exception ) )		399727	0					
ANR	400248	Callee	UNEXPECTED		399727	0					
ANR	400249	Identifier	UNEXPECTED		399727	0					
ANR	400250	ArgumentList	EG ( exception )		399727	1					
ANR	400251	Argument	EG ( exception )		399727	0					
ANR	400252	CallExpression	EG ( exception )		399727	0					
ANR	400253	Callee	EG		399727	0					
ANR	400254	Identifier	EG		399727	0					
ANR	400255	ArgumentList	exception		399727	1					
ANR	400256	Argument	exception		399727	0					
ANR	400257	Identifier	exception		399727	0					
ANR	400258	CompoundStatement		66:33:2288:2288	399727	1					
ANR	400259	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		399727	0					
ANR	400260	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	42369:7:1342039:1342069	399727	0	True				
ANR	400261	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		399727	0		!=			
ANR	400262	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	400263	Identifier	IS_TMP_VAR		399727	0					
ANR	400264	Identifier	IS_VAR		399727	1					
ANR	400265	Identifier	IS_CONST		399727	1					
ANR	400266	CompoundStatement		67:40:2330:2330	399727	1					
ANR	400267	ExpressionStatement	zend_string_release ( name )	42370:4:1342078:1342103	399727	0	True				
ANR	400268	CallExpression	zend_string_release ( name )		399727	0					
ANR	400269	Callee	zend_string_release		399727	0					
ANR	400270	Identifier	zend_string_release		399727	0					
ANR	400271	ArgumentList	name		399727	1					
ANR	400272	Argument	name		399727	0					
ANR	400273	Identifier	name		399727	0					
ANR	400274	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42372:3:1342113:1342141	399727	1	True				
ANR	400275	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		399727	0					
ANR	400276	Callee	zval_ptr_dtor_nogc		399727	0					
ANR	400277	Identifier	zval_ptr_dtor_nogc		399727	0					
ANR	400278	ArgumentList	free_op1		399727	1					
ANR	400279	Argument	free_op1		399727	0					
ANR	400280	Identifier	free_op1		399727	0					
ANR	400281	ExpressionStatement	HANDLE_EXCEPTION ( )	42373:3:1342146:1342164	399727	2	True				
ANR	400282	CallExpression	HANDLE_EXCEPTION ( )		399727	0					
ANR	400283	Callee	HANDLE_EXCEPTION		399727	0					
ANR	400284	Identifier	HANDLE_EXCEPTION		399727	0					
ANR	400285	ArgumentList			399727	1					
ANR	400286	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval )		399727	4					
ANR	400287	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval	42375:6:1342176:1342216	399727	0	True				
ANR	400288	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval		399727	0		&&			
ANR	400289	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		399727	0		==			
ANR	400290	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	400291	Identifier	IS_TMP_VAR		399727	0					
ANR	400292	Identifier	IS_VAR		399727	1					
ANR	400293	Identifier	IS_CONST		399727	1					
ANR	400294	Identifier	retval		399727	1					
ANR	400295	CompoundStatement		73:49:2477:2477	399727	1					
ANR	400296	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	42376:3:1342224:1342299	399727	0	True				
ANR	400297	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		399727	0					
ANR	400298	Callee	CACHE_POLYMORPHIC_PTR		399727	0					
ANR	400299	Identifier	CACHE_POLYMORPHIC_PTR		399727	0					
ANR	400300	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	1					
ANR	400301	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	0					
ANR	400302	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		399727	0					
ANR	400303	Callee	Z_CACHE_SLOT_P		399727	0					
ANR	400304	Identifier	Z_CACHE_SLOT_P		399727	0					
ANR	400305	ArgumentList	EX_CONSTANT ( opline -> op1 )		399727	1					
ANR	400306	Argument	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	400307	CallExpression	EX_CONSTANT ( opline -> op1 )		399727	0					
ANR	400308	Callee	EX_CONSTANT		399727	0					
ANR	400309	Identifier	EX_CONSTANT		399727	0					
ANR	400310	ArgumentList	opline -> op1		399727	1					
ANR	400311	Argument	opline -> op1		399727	0					
ANR	400312	PtrMemberAccess	opline -> op1		399727	0					
ANR	400313	Identifier	opline		399727	0					
ANR	400314	Identifier	op1		399727	1					
ANR	400315	Argument	ce		399727	1					
ANR	400316	Identifier	ce		399727	0					
ANR	400317	Argument	retval		399727	2					
ANR	400318	Identifier	retval		399727	0					
ANR	400319	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42379:2:1342308:1342336	399727	5	True				
ANR	400320	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		399727	0					
ANR	400321	Callee	zval_ptr_dtor_nogc		399727	0					
ANR	400322	Identifier	zval_ptr_dtor_nogc		399727	0					
ANR	400323	ArgumentList	free_op1		399727	1					
ANR	400324	Argument	free_op1		399727	0					
ANR	400325	Identifier	free_op1		399727	0					
ANR	400326	ElseStatement	else		399727	0					
ANR	400327	CompoundStatement		78:8:2604:2604	399727	0					
ANR	400328	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	42381:2:1342350:1342461	399727	0	True				
ANR	400329	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		399727	0		=			
ANR	400330	Identifier	target_symbol_table		399727	0					
ANR	400331	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		399727	1					
ANR	400332	Callee	zend_get_target_symbol_table		399727	0					
ANR	400333	Identifier	zend_get_target_symbol_table		399727	0					
ANR	400334	ArgumentList	execute_data		399727	1					
ANR	400335	Argument	execute_data		399727	0					
ANR	400336	Identifier	execute_data		399727	0					
ANR	400337	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		399727	1					
ANR	400338	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		399727	0		&			
ANR	400339	PtrMemberAccess	opline -> extended_value		399727	0					
ANR	400340	Identifier	opline		399727	0					
ANR	400341	Identifier	extended_value		399727	1					
ANR	400342	Identifier	ZEND_FETCH_TYPE_MASK		399727	1					
ANR	400343	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	42382:2:1342465:1342515	399727	1	True				
ANR	400344	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		399727	0		=			
ANR	400345	Identifier	retval		399727	0					
ANR	400346	CallExpression	"zend_hash_find ( target_symbol_table , name )"		399727	1					
ANR	400347	Callee	zend_hash_find		399727	0					
ANR	400348	Identifier	zend_hash_find		399727	0					
ANR	400349	ArgumentList	target_symbol_table		399727	1					
ANR	400350	Argument	target_symbol_table		399727	0					
ANR	400351	Identifier	target_symbol_table		399727	0					
ANR	400352	Argument	name		399727	1					
ANR	400353	Identifier	name		399727	0					
ANR	400354	IfStatement	if ( retval == NULL )		399727	2					
ANR	400355	Condition	retval == NULL	42383:6:1342523:1342536	399727	0	True				
ANR	400356	EqualityExpression	retval == NULL		399727	0		==			
ANR	400357	Identifier	retval		399727	0					
ANR	400358	Identifier	NULL		399727	1					
ANR	400359	CompoundStatement		81:22:2797:2797	399727	1					
ANR	400360	SwitchStatement	switch ( type )		399727	0					
ANR	400361	Condition	type	42384:11:1342552:1342555	399727	0	True				
ANR	400362	Identifier	type		399727	0					
ANR	400363	CompoundStatement		82:17:2816:2816	399727	1					
ANR	400364	Label	case BP_VAR_R :	42385:4:1342564:1342577	399727	0	True				
ANR	400365	Identifier	BP_VAR_R		399727	0					
ANR	400366	Label	case BP_VAR_UNSET :	42386:4:1342583:1342600	399727	1	True				
ANR	400367	Identifier	BP_VAR_UNSET		399727	0					
ANR	400368	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42387:5:1342607:1342668	399727	2	True				
ANR	400369	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		399727	0					
ANR	400370	Callee	zend_error		399727	0					
ANR	400371	Identifier	zend_error		399727	0					
ANR	400372	ArgumentList	E_NOTICE		399727	1					
ANR	400373	Argument	E_NOTICE		399727	0					
ANR	400374	Identifier	E_NOTICE		399727	0					
ANR	400375	Argument	"""Undefined variable: %s"""		399727	1					
ANR	400376	PrimaryExpression	"""Undefined variable: %s"""		399727	0					
ANR	400377	Argument	ZSTR_VAL ( name )		399727	2					
ANR	400378	CallExpression	ZSTR_VAL ( name )		399727	0					
ANR	400379	Callee	ZSTR_VAL		399727	0					
ANR	400380	Identifier	ZSTR_VAL		399727	0					
ANR	400381	ArgumentList	name		399727	1					
ANR	400382	Argument	name		399727	0					
ANR	400383	Identifier	name		399727	0					
ANR	400384	Label	case BP_VAR_IS :	42389:4:1342713:1342727	399727	3	True				
ANR	400385	Identifier	BP_VAR_IS		399727	0					
ANR	400386	ExpressionStatement	retval = & EG ( uninitialized_zval )	42390:5:1342734:1342766	399727	4	True				
ANR	400387	AssignmentExpression	retval = & EG ( uninitialized_zval )		399727	0		=			
ANR	400388	Identifier	retval		399727	0					
ANR	400389	UnaryOperationExpression	& EG ( uninitialized_zval )		399727	1					
ANR	400390	UnaryOperator	&		399727	0					
ANR	400391	CallExpression	EG ( uninitialized_zval )		399727	1					
ANR	400392	Callee	EG		399727	0					
ANR	400393	Identifier	EG		399727	0					
ANR	400394	ArgumentList	uninitialized_zval		399727	1					
ANR	400395	Argument	uninitialized_zval		399727	0					
ANR	400396	Identifier	uninitialized_zval		399727	0					
ANR	400397	BreakStatement	break ;	42391:5:1342773:1342778	399727	5	True				
ANR	400398	Label	case BP_VAR_RW :	42392:4:1342784:1342798	399727	6	True				
ANR	400399	Identifier	BP_VAR_RW		399727	0					
ANR	400400	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42393:5:1342805:1342866	399727	7	True				
ANR	400401	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		399727	0					
ANR	400402	Callee	zend_error		399727	0					
ANR	400403	Identifier	zend_error		399727	0					
ANR	400404	ArgumentList	E_NOTICE		399727	1					
ANR	400405	Argument	E_NOTICE		399727	0					
ANR	400406	Identifier	E_NOTICE		399727	0					
ANR	400407	Argument	"""Undefined variable: %s"""		399727	1					
ANR	400408	PrimaryExpression	"""Undefined variable: %s"""		399727	0					
ANR	400409	Argument	ZSTR_VAL ( name )		399727	2					
ANR	400410	CallExpression	ZSTR_VAL ( name )		399727	0					
ANR	400411	Callee	ZSTR_VAL		399727	0					
ANR	400412	Identifier	ZSTR_VAL		399727	0					
ANR	400413	ArgumentList	name		399727	1					
ANR	400414	Argument	name		399727	0					
ANR	400415	Identifier	name		399727	0					
ANR	400416	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	42394:5:1342873:1342950	399727	8	True				
ANR	400417	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		399727	0		=			
ANR	400418	Identifier	retval		399727	0					
ANR	400419	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		399727	1					
ANR	400420	Callee	zend_hash_update		399727	0					
ANR	400421	Identifier	zend_hash_update		399727	0					
ANR	400422	ArgumentList	target_symbol_table		399727	1					
ANR	400423	Argument	target_symbol_table		399727	0					
ANR	400424	Identifier	target_symbol_table		399727	0					
ANR	400425	Argument	name		399727	1					
ANR	400426	Identifier	name		399727	0					
ANR	400427	Argument	& EG ( uninitialized_zval )		399727	2					
ANR	400428	UnaryOperationExpression	& EG ( uninitialized_zval )		399727	0					
ANR	400429	UnaryOperator	&		399727	0					
ANR	400430	CallExpression	EG ( uninitialized_zval )		399727	1					
ANR	400431	Callee	EG		399727	0					
ANR	400432	Identifier	EG		399727	0					
ANR	400433	ArgumentList	uninitialized_zval		399727	1					
ANR	400434	Argument	uninitialized_zval		399727	0					
ANR	400435	Identifier	uninitialized_zval		399727	0					
ANR	400436	BreakStatement	break ;	42395:5:1342957:1342962	399727	9	True				
ANR	400437	Label	case BP_VAR_W :	42396:4:1342968:1342981	399727	10	True				
ANR	400438	Identifier	BP_VAR_W		399727	0					
ANR	400439	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	42397:5:1342988:1343066	399727	11	True				
ANR	400440	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		399727	0		=			
ANR	400441	Identifier	retval		399727	0					
ANR	400442	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		399727	1					
ANR	400443	Callee	zend_hash_add_new		399727	0					
ANR	400444	Identifier	zend_hash_add_new		399727	0					
ANR	400445	ArgumentList	target_symbol_table		399727	1					
ANR	400446	Argument	target_symbol_table		399727	0					
ANR	400447	Identifier	target_symbol_table		399727	0					
ANR	400448	Argument	name		399727	1					
ANR	400449	Identifier	name		399727	0					
ANR	400450	Argument	& EG ( uninitialized_zval )		399727	2					
ANR	400451	UnaryOperationExpression	& EG ( uninitialized_zval )		399727	0					
ANR	400452	UnaryOperator	&		399727	0					
ANR	400453	CallExpression	EG ( uninitialized_zval )		399727	1					
ANR	400454	Callee	EG		399727	0					
ANR	400455	Identifier	EG		399727	0					
ANR	400456	ArgumentList	uninitialized_zval		399727	1					
ANR	400457	Argument	uninitialized_zval		399727	0					
ANR	400458	Identifier	uninitialized_zval		399727	0					
ANR	400459	BreakStatement	break ;	42398:5:1343073:1343078	399727	12	True				
ANR	400460	Statement	EMPTY_SWITCH_DEFAULT_CASE	42399:4:1343084:1343108	399727	13	True				
ANR	400461	Statement	(	42399:29:1343109:1343109	399727	14	True				
ANR	400462	Statement	)	42399:30:1343110:1343110	399727	15	True				
ANR	400463	ElseStatement	else		399727	0					
ANR	400464	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		399727	0					
ANR	400465	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	42402:13:1343197:1343227	399727	0	True				
ANR	400466	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		399727	0		==			
ANR	400467	CallExpression	Z_TYPE_P ( retval )		399727	0					
ANR	400468	Callee	Z_TYPE_P		399727	0					
ANR	400469	Identifier	Z_TYPE_P		399727	0					
ANR	400470	ArgumentList	retval		399727	1					
ANR	400471	Argument	retval		399727	0					
ANR	400472	Identifier	retval		399727	0					
ANR	400473	Identifier	IS_INDIRECT		399727	1					
ANR	400474	CompoundStatement		100:46:3488:3488	399727	1					
ANR	400475	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	42403:3:1343235:1343264	399727	0	True				
ANR	400476	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		399727	0		=			
ANR	400477	Identifier	retval		399727	0					
ANR	400478	CallExpression	Z_INDIRECT_P ( retval )		399727	1					
ANR	400479	Callee	Z_INDIRECT_P		399727	0					
ANR	400480	Identifier	Z_INDIRECT_P		399727	0					
ANR	400481	ArgumentList	retval		399727	1					
ANR	400482	Argument	retval		399727	0					
ANR	400483	Identifier	retval		399727	0					
ANR	400484	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		399727	1					
ANR	400485	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	42404:7:1343273:1343300	399727	0	True				
ANR	400486	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		399727	0		==			
ANR	400487	CallExpression	Z_TYPE_P ( retval )		399727	0					
ANR	400488	Callee	Z_TYPE_P		399727	0					
ANR	400489	Identifier	Z_TYPE_P		399727	0					
ANR	400490	ArgumentList	retval		399727	1					
ANR	400491	Argument	retval		399727	0					
ANR	400492	Identifier	retval		399727	0					
ANR	400493	Identifier	IS_UNDEF		399727	1					
ANR	400494	CompoundStatement		102:37:3561:3561	399727	1					
ANR	400495	SwitchStatement	switch ( type )		399727	0					
ANR	400496	Condition	type	42405:12:1343317:1343320	399727	0	True				
ANR	400497	Identifier	type		399727	0					
ANR	400498	CompoundStatement		103:18:3581:3581	399727	1					
ANR	400499	Label	case BP_VAR_R :	42406:5:1343330:1343343	399727	0	True				
ANR	400500	Identifier	BP_VAR_R		399727	0					
ANR	400501	Label	case BP_VAR_UNSET :	42407:5:1343350:1343367	399727	1	True				
ANR	400502	Identifier	BP_VAR_UNSET		399727	0					
ANR	400503	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42408:6:1343375:1343436	399727	2	True				
ANR	400504	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		399727	0					
ANR	400505	Callee	zend_error		399727	0					
ANR	400506	Identifier	zend_error		399727	0					
ANR	400507	ArgumentList	E_NOTICE		399727	1					
ANR	400508	Argument	E_NOTICE		399727	0					
ANR	400509	Identifier	E_NOTICE		399727	0					
ANR	400510	Argument	"""Undefined variable: %s"""		399727	1					
ANR	400511	PrimaryExpression	"""Undefined variable: %s"""		399727	0					
ANR	400512	Argument	ZSTR_VAL ( name )		399727	2					
ANR	400513	CallExpression	ZSTR_VAL ( name )		399727	0					
ANR	400514	Callee	ZSTR_VAL		399727	0					
ANR	400515	Identifier	ZSTR_VAL		399727	0					
ANR	400516	ArgumentList	name		399727	1					
ANR	400517	Argument	name		399727	0					
ANR	400518	Identifier	name		399727	0					
ANR	400519	Label	case BP_VAR_IS :	42410:5:1343483:1343497	399727	3	True				
ANR	400520	Identifier	BP_VAR_IS		399727	0					
ANR	400521	ExpressionStatement	retval = & EG ( uninitialized_zval )	42411:6:1343505:1343537	399727	4	True				
ANR	400522	AssignmentExpression	retval = & EG ( uninitialized_zval )		399727	0		=			
ANR	400523	Identifier	retval		399727	0					
ANR	400524	UnaryOperationExpression	& EG ( uninitialized_zval )		399727	1					
ANR	400525	UnaryOperator	&		399727	0					
ANR	400526	CallExpression	EG ( uninitialized_zval )		399727	1					
ANR	400527	Callee	EG		399727	0					
ANR	400528	Identifier	EG		399727	0					
ANR	400529	ArgumentList	uninitialized_zval		399727	1					
ANR	400530	Argument	uninitialized_zval		399727	0					
ANR	400531	Identifier	uninitialized_zval		399727	0					
ANR	400532	BreakStatement	break ;	42412:6:1343545:1343550	399727	5	True				
ANR	400533	Label	case BP_VAR_RW :	42413:5:1343557:1343571	399727	6	True				
ANR	400534	Identifier	BP_VAR_RW		399727	0					
ANR	400535	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42414:6:1343579:1343640	399727	7	True				
ANR	400536	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		399727	0					
ANR	400537	Callee	zend_error		399727	0					
ANR	400538	Identifier	zend_error		399727	0					
ANR	400539	ArgumentList	E_NOTICE		399727	1					
ANR	400540	Argument	E_NOTICE		399727	0					
ANR	400541	Identifier	E_NOTICE		399727	0					
ANR	400542	Argument	"""Undefined variable: %s"""		399727	1					
ANR	400543	PrimaryExpression	"""Undefined variable: %s"""		399727	0					
ANR	400544	Argument	ZSTR_VAL ( name )		399727	2					
ANR	400545	CallExpression	ZSTR_VAL ( name )		399727	0					
ANR	400546	Callee	ZSTR_VAL		399727	0					
ANR	400547	Identifier	ZSTR_VAL		399727	0					
ANR	400548	ArgumentList	name		399727	1					
ANR	400549	Argument	name		399727	0					
ANR	400550	Identifier	name		399727	0					
ANR	400551	Label	case BP_VAR_W :	42416:5:1343687:1343700	399727	8	True				
ANR	400552	Identifier	BP_VAR_W		399727	0					
ANR	400553	ExpressionStatement	ZVAL_NULL ( retval )	42417:6:1343708:1343725	399727	9	True				
ANR	400554	CallExpression	ZVAL_NULL ( retval )		399727	0					
ANR	400555	Callee	ZVAL_NULL		399727	0					
ANR	400556	Identifier	ZVAL_NULL		399727	0					
ANR	400557	ArgumentList	retval		399727	1					
ANR	400558	Argument	retval		399727	0					
ANR	400559	Identifier	retval		399727	0					
ANR	400560	BreakStatement	break ;	42418:6:1343733:1343738	399727	10	True				
ANR	400561	Statement	EMPTY_SWITCH_DEFAULT_CASE	42419:5:1343745:1343769	399727	11	True				
ANR	400562	Statement	(	42419:30:1343770:1343770	399727	12	True				
ANR	400563	Statement	)	42419:31:1343771:1343771	399727	13	True				
ANR	400564	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		399727	3					
ANR	400565	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	42423:6:1343794:1343861	399727	0	True				
ANR	400566	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		399727	0		==			
ANR	400567	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		399727	0		&			
ANR	400568	PtrMemberAccess	opline -> extended_value		399727	0					
ANR	400569	Identifier	opline		399727	0					
ANR	400570	Identifier	extended_value		399727	1					
ANR	400571	Identifier	ZEND_FETCH_TYPE_MASK		399727	1					
ANR	400572	Identifier	ZEND_FETCH_STATIC		399727	1					
ANR	400573	CompoundStatement		121:76:4122:4122	399727	1					
ANR	400574	IfStatement	if ( Z_CONSTANT_P ( retval ) )		399727	0					
ANR	400575	Condition	Z_CONSTANT_P ( retval )	42424:7:1343873:1343892	399727	0	True				
ANR	400576	CallExpression	Z_CONSTANT_P ( retval )		399727	0					
ANR	400577	Callee	Z_CONSTANT_P		399727	0					
ANR	400578	Identifier	Z_CONSTANT_P		399727	0					
ANR	400579	ArgumentList	retval		399727	1					
ANR	400580	Argument	retval		399727	0					
ANR	400581	Identifier	retval		399727	0					
ANR	400582	CompoundStatement		122:29:4153:4153	399727	1					
ANR	400583	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		399727	0					
ANR	400584	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	42425:8:1343905:1343967	399727	0	True				
ANR	400585	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		399727	0					
ANR	400586	Callee	UNEXPECTED		399727	0					
ANR	400587	Identifier	UNEXPECTED		399727	0					
ANR	400588	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		399727	1					
ANR	400589	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		399727	0					
ANR	400590	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		399727	0		!=			
ANR	400591	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		399727	0					
ANR	400592	Callee	zval_update_constant_ex		399727	0					
ANR	400593	Identifier	zval_update_constant_ex		399727	0					
ANR	400594	ArgumentList	retval		399727	1					
ANR	400595	Argument	retval		399727	0					
ANR	400596	Identifier	retval		399727	0					
ANR	400597	Argument	1		399727	1					
ANR	400598	PrimaryExpression	1		399727	0					
ANR	400599	Argument	NULL		399727	2					
ANR	400600	Identifier	NULL		399727	0					
ANR	400601	Identifier	SUCCESS		399727	1					
ANR	400602	CompoundStatement		123:73:4228:4228	399727	1					
ANR	400603	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42426:5:1343977:1344005	399727	0	True				
ANR	400604	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		399727	0					
ANR	400605	Callee	zval_ptr_dtor_nogc		399727	0					
ANR	400606	Identifier	zval_ptr_dtor_nogc		399727	0					
ANR	400607	ArgumentList	free_op1		399727	1					
ANR	400608	Argument	free_op1		399727	0					
ANR	400609	Identifier	free_op1		399727	0					
ANR	400610	ExpressionStatement	HANDLE_EXCEPTION ( )	42427:5:1344012:1344030	399727	1	True				
ANR	400611	CallExpression	HANDLE_EXCEPTION ( )		399727	0					
ANR	400612	Callee	HANDLE_EXCEPTION		399727	0					
ANR	400613	Identifier	HANDLE_EXCEPTION		399727	0					
ANR	400614	ArgumentList			399727	1					
ANR	400615	ElseStatement	else		399727	0					
ANR	400616	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		399727	0					
ANR	400617	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	42430:13:1344056:1344128	399727	0	True				
ANR	400618	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		399727	0		!=			
ANR	400619	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		399727	0		&			
ANR	400620	PtrMemberAccess	opline -> extended_value		399727	0					
ANR	400621	Identifier	opline		399727	0					
ANR	400622	Identifier	extended_value		399727	1					
ANR	400623	Identifier	ZEND_FETCH_TYPE_MASK		399727	1					
ANR	400624	Identifier	ZEND_FETCH_GLOBAL_LOCK		399727	1					
ANR	400625	CompoundStatement		128:88:4389:4389	399727	1					
ANR	400626	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42431:3:1344136:1344164	399727	0	True				
ANR	400627	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		399727	0					
ANR	400628	Callee	zval_ptr_dtor_nogc		399727	0					
ANR	400629	Identifier	zval_ptr_dtor_nogc		399727	0					
ANR	400630	ArgumentList	free_op1		399727	1					
ANR	400631	Argument	free_op1		399727	0					
ANR	400632	Identifier	free_op1		399727	0					
ANR	400633	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		399727	9					
ANR	400634	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	42435:5:1344179:1344209	399727	0	True				
ANR	400635	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		399727	0		!=			
ANR	400636	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		399727	0		|			
ANR	400637	Identifier	IS_TMP_VAR		399727	0					
ANR	400638	Identifier	IS_VAR		399727	1					
ANR	400639	Identifier	IS_CONST		399727	1					
ANR	400640	CompoundStatement		133:38:4470:4470	399727	1					
ANR	400641	ExpressionStatement	zend_string_release ( name )	42436:2:1344216:1344241	399727	0	True				
ANR	400642	CallExpression	zend_string_release ( name )		399727	0					
ANR	400643	Callee	zend_string_release		399727	0					
ANR	400644	Identifier	zend_string_release		399727	0					
ANR	400645	ArgumentList	name		399727	1					
ANR	400646	Argument	name		399727	0					
ANR	400647	Identifier	name		399727	0					
ANR	400648	Label	fetch_var_return :	42439:0:1344247:1344263	399727	10	True				
ANR	400649	Identifier	fetch_var_return		399727	0					
ANR	400650	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	42440:1:1344266:1344293	399727	11	True				
ANR	400651	CallExpression	ZEND_ASSERT ( retval != NULL )		399727	0					
ANR	400652	Callee	ZEND_ASSERT		399727	0					
ANR	400653	Identifier	ZEND_ASSERT		399727	0					
ANR	400654	ArgumentList	retval != NULL		399727	1					
ANR	400655	Argument	retval != NULL		399727	0					
ANR	400656	EqualityExpression	retval != NULL		399727	0		!=			
ANR	400657	Identifier	retval		399727	0					
ANR	400658	Identifier	NULL		399727	1					
ANR	400659	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		399727	12					
ANR	400660	Condition	type == BP_VAR_R || type == BP_VAR_IS	42441:5:1344300:1344336	399727	0	True				
ANR	400661	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		399727	0		||			
ANR	400662	EqualityExpression	type == BP_VAR_R		399727	0		==			
ANR	400663	Identifier	type		399727	0					
ANR	400664	Identifier	BP_VAR_R		399727	1					
ANR	400665	EqualityExpression	type == BP_VAR_IS		399727	1		==			
ANR	400666	Identifier	type		399727	0					
ANR	400667	Identifier	BP_VAR_IS		399727	1					
ANR	400668	CompoundStatement		139:44:4597:4597	399727	1					
ANR	400669	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		399727	0					
ANR	400670	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	42442:30:1344371:1344416	399727	0	True				
ANR	400671	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		399727	0		&&			
ANR	400672	CallExpression	Z_ISREF_P ( retval )		399727	0					
ANR	400673	Callee	Z_ISREF_P		399727	0					
ANR	400674	Identifier	Z_ISREF_P		399727	0					
ANR	400675	ArgumentList	retval		399727	1					
ANR	400676	Argument	retval		399727	0					
ANR	400677	Identifier	retval		399727	0					
ANR	400678	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		399727	1		==			
ANR	400679	CallExpression	Z_REFCOUNT_P ( retval )		399727	0					
ANR	400680	Callee	Z_REFCOUNT_P		399727	0					
ANR	400681	Identifier	Z_REFCOUNT_P		399727	0					
ANR	400682	ArgumentList	retval		399727	1					
ANR	400683	Argument	retval		399727	0					
ANR	400684	Identifier	retval		399727	0					
ANR	400685	PrimaryExpression	1		399727	1					
ANR	400686	CompoundStatement		140:78:4677:4677	399727	1					
ANR	400687	ExpressionStatement	ZVAL_UNREF ( retval )	42443:3:1344424:1344442	399727	0	True				
ANR	400688	CallExpression	ZVAL_UNREF ( retval )		399727	0					
ANR	400689	Callee	ZVAL_UNREF		399727	0					
ANR	400690	Identifier	ZVAL_UNREF		399727	0					
ANR	400691	ArgumentList	retval		399727	1					
ANR	400692	Argument	retval		399727	0					
ANR	400693	Identifier	retval		399727	0					
ANR	400694	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	42445:2:1344450:1344495	399727	1	True				
ANR	400695	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		399727	0					
ANR	400696	Callee	ZVAL_COPY		399727	0					
ANR	400697	Identifier	ZVAL_COPY		399727	0					
ANR	400698	ArgumentList	EX_VAR ( opline -> result . var )		399727	1					
ANR	400699	Argument	EX_VAR ( opline -> result . var )		399727	0					
ANR	400700	CallExpression	EX_VAR ( opline -> result . var )		399727	0					
ANR	400701	Callee	EX_VAR		399727	0					
ANR	400702	Identifier	EX_VAR		399727	0					
ANR	400703	ArgumentList	opline -> result . var		399727	1					
ANR	400704	Argument	opline -> result . var		399727	0					
ANR	400705	MemberAccess	opline -> result . var		399727	0					
ANR	400706	PtrMemberAccess	opline -> result		399727	0					
ANR	400707	Identifier	opline		399727	0					
ANR	400708	Identifier	result		399727	1					
ANR	400709	Identifier	var		399727	1					
ANR	400710	Argument	retval		399727	1					
ANR	400711	Identifier	retval		399727	0					
ANR	400712	ElseStatement	else		399727	0					
ANR	400713	CompoundStatement		144:8:4763:4763	399727	0					
ANR	400714	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	42447:2:1344509:1344558	399727	0	True				
ANR	400715	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		399727	0					
ANR	400716	Callee	ZVAL_INDIRECT		399727	0					
ANR	400717	Identifier	ZVAL_INDIRECT		399727	0					
ANR	400718	ArgumentList	EX_VAR ( opline -> result . var )		399727	1					
ANR	400719	Argument	EX_VAR ( opline -> result . var )		399727	0					
ANR	400720	CallExpression	EX_VAR ( opline -> result . var )		399727	0					
ANR	400721	Callee	EX_VAR		399727	0					
ANR	400722	Identifier	EX_VAR		399727	0					
ANR	400723	ArgumentList	opline -> result . var		399727	1					
ANR	400724	Argument	opline -> result . var		399727	0					
ANR	400725	MemberAccess	opline -> result . var		399727	0					
ANR	400726	PtrMemberAccess	opline -> result		399727	0					
ANR	400727	Identifier	opline		399727	0					
ANR	400728	Identifier	result		399727	1					
ANR	400729	Identifier	var		399727	1					
ANR	400730	Argument	retval		399727	1					
ANR	400731	Identifier	retval		399727	0					
ANR	400732	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	42449:1:1344564:1344601	399727	13	True				
ANR	400733	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		399727	0					
ANR	400734	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		399727	0					
ANR	400735	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		399727	0					
ANR	400736	ArgumentList			399727	1					
ANR	400737	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		399727	1					
ANR	400738	Identifier	zend_fetch_var_address_helper_SPEC_TMPVAR_VAR		399727	2					
ANR	400739	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		399727	3					
ANR	400740	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	42302:91:1339703:1339738	399727	0	True				
ANR	400741	ParameterType	int type		399727	0					
ANR	400742	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		399727	1					
ANR	400743	CFGEntryNode	ENTRY		399727		True				
ANR	400744	CFGExitNode	EXIT		399727		True				
ANR	400745	Symbol	ZEND_FETCH_CLASS_DEFAULT		399727						
ANR	400746	Symbol	exception		399727						
ANR	400747	Symbol	zend_get_target_symbol_table		399727						
ANR	400748	Symbol	opline -> op2 . var		399727						
ANR	400749	Symbol	IS_CV		399727						
ANR	400750	Symbol	Z_CONSTANT_P		399727						
ANR	400751	Symbol	* ce		399727						
ANR	400752	Symbol	type		399727						
ANR	400753	Symbol	Z_REFCOUNT_P		399727						
ANR	400754	Symbol	execute_data		399727						
ANR	400755	Symbol	opline -> extended_value		399727						
ANR	400756	Symbol	opline -> result		399727						
ANR	400757	Symbol	zend_std_get_static_property		399727						
ANR	400758	Symbol	zend_hash_find		399727						
ANR	400759	Symbol	opline		399727						
ANR	400760	Symbol	Z_CE_P		399727						
ANR	400761	Symbol	target_symbol_table		399727						
ANR	400762	Symbol	IS_STRING		399727						
ANR	400763	Symbol	ce -> name		399727						
ANR	400764	Symbol	zend_hash_update		399727						
ANR	400765	Symbol	BP_VAR_IS		399727						
ANR	400766	Symbol	IS_UNDEF		399727						
ANR	400767	Symbol	BP_VAR_R		399727						
ANR	400768	Symbol	& free_op1		399727						
ANR	400769	Symbol	IS_TMP_VAR		399727						
ANR	400770	Symbol	IS_CONST		399727						
ANR	400771	Symbol	EG		399727						
ANR	400772	Symbol	NULL		399727						
ANR	400773	Symbol	EX_CONSTANT		399727						
ANR	400774	Symbol	Z_CACHE_SLOT_P		399727						
ANR	400775	Symbol	CE_STATIC_MEMBERS		399727						
ANR	400776	Symbol	E_NOTICE		399727						
ANR	400777	Symbol	varname		399727						
ANR	400778	Symbol	retval		399727						
ANR	400779	Symbol	name		399727						
ANR	400780	Symbol	EX_VAR		399727						
ANR	400781	Symbol	zend_fetch_class_by_name		399727						
ANR	400782	Symbol	Z_STR_P		399727						
ANR	400783	Symbol	IS_VAR		399727						
ANR	400784	Symbol	Z_ISREF_P		399727						
ANR	400785	Symbol	IS_INDIRECT		399727						
ANR	400786	Symbol	opline -> op1		399727						
ANR	400787	Symbol	CACHED_PTR		399727						
ANR	400788	Symbol	opline -> op2		399727						
ANR	400789	Symbol	Z_INDIRECT_P		399727						
ANR	400790	Symbol	& EG		399727						
ANR	400791	Symbol	free_op1		399727						
ANR	400792	Symbol	UNEXPECTED		399727						
ANR	400793	Symbol	ZEND_FETCH_CLASS_EXCEPTION		399727						
ANR	400794	Symbol	ZEND_FETCH_STATIC		399727						
ANR	400795	Symbol	opline -> op1 . var		399727						
ANR	400796	Symbol	uninitialized_zval		399727						
ANR	400797	Symbol	ce		399727						
ANR	400798	Symbol	SUCCESS		399727						
ANR	400799	Symbol	zval_get_string		399727						
ANR	400800	Symbol	ZEND_FETCH_TYPE_MASK		399727						
ANR	400801	Symbol	zend_hash_add_new		399727						
ANR	400802	Symbol	Z_TYPE_P		399727						
ANR	400803	Symbol	CACHED_POLYMORPHIC_PTR		399727						
ANR	400804	Symbol	ZSTR_VAL		399727						
ANR	400805	Symbol	* opline		399727						
ANR	400806	Symbol	ZEND_FETCH_GLOBAL_LOCK		399727						
ANR	400807	Symbol	_get_zval_ptr_var		399727						
ANR	400808	Symbol	zval_update_constant_ex		399727						
ANR	400809	Symbol	EXPECTED		399727						
ANR	400810	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		399727						
ANR	400811	Symbol	opline -> result . var		399727						
ANR	400812	Symbol	IS_UNUSED		399727						
ANR	400813	DeclStmt									
ANR	400814	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	400815	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	400816	DeclStmt									
ANR	400817	Decl							HashTable	HashTable *	target_symbol_table
ANR	400818	DeclStmt									
ANR	400819	Decl							zend_free_op	zend_free_op	free_op1
ANR	400820	DeclStmt									
ANR	400821	Decl							zval	zval *	var
ANR	400822	DeclStmt									
ANR	400823	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	400824	DeclStmt									
ANR	400825	Decl							zval	zval *	z
ANR	400826	DeclStmt									
ANR	400827	Decl							zend_class_entry	zend_class_entry *	ce
ANR	400828	DeclStmt									
ANR	400829	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	400830	DeclStmt									
ANR	400831	Decl							int	int	result
ANR	400832	DeclStmt									
ANR	400833	Decl							zend_free_op	zend_free_op	free_op1
ANR	400834	DeclStmt									
ANR	400835	Decl							zval	zval	tmp
ANR	400836	Decl							zval	zval *	varname
ANR	400837	DeclStmt									
ANR	400838	Decl							zend_class_entry	zend_class_entry *	ce
ANR	400839	DeclStmt									
ANR	400840	Decl							HashTable	HashTable *	target_symbol_table
ANR	400841	DeclStmt									
ANR	400842	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	400843	DeclStmt									
ANR	400844	Decl							zval	zval *	expr
ANR	400845	DeclStmt									
ANR	400846	Decl							zend_bool	zend_bool	result
ANR	400847	DeclStmt									
ANR	400848	Decl							zend_class_entry	zend_class_entry *	ce
ANR	400849	Function	zend_fetch_var_address_helper_SPEC_TMPVAR_UNUSED	42713:0:1353327:1358327							
ANR	400850	FunctionDef	zend_fetch_var_address_helper_SPEC_TMPVAR_UNUSED (int type ZEND_OPCODE_HANDLER_ARGS_DC)		400849	0					
ANR	400851	CompoundStatement		42714:0:1353459:1358327	400849	0					
ANR	400852	IdentifierDeclStatement	USE_OPLINE zend_free_op free_op1 ;	42715:1:1353462:1353495	400849	0	True				
ANR	400853	IdentifierDecl	free_op1		400849	0					
ANR	400854	IdentifierDeclType	USE_OPLINE zend_free_op		400849	0					
ANR	400855	Identifier	free_op1		400849	1					
ANR	400856	IdentifierDeclStatement	zval * varname ;	42717:1:1353498:1353511	400849	1	True				
ANR	400857	IdentifierDecl	* varname		400849	0					
ANR	400858	IdentifierDeclType	zval *		400849	0					
ANR	400859	Identifier	varname		400849	1					
ANR	400860	IdentifierDeclStatement	zval * retval ;	42718:1:1353514:1353526	400849	2	True				
ANR	400861	IdentifierDecl	* retval		400849	0					
ANR	400862	IdentifierDeclType	zval *		400849	0					
ANR	400863	Identifier	retval		400849	1					
ANR	400864	IdentifierDeclStatement	zend_string * name ;	42719:1:1353529:1353546	400849	3	True				
ANR	400865	IdentifierDecl	* name		400849	0					
ANR	400866	IdentifierDeclType	zend_string *		400849	0					
ANR	400867	Identifier	name		400849	1					
ANR	400868	IdentifierDeclStatement	HashTable * target_symbol_table ;	42720:1:1353549:1353579	400849	4	True				
ANR	400869	IdentifierDecl	* target_symbol_table		400849	0					
ANR	400870	IdentifierDeclType	HashTable *		400849	0					
ANR	400871	Identifier	target_symbol_table		400849	1					
ANR	400872	ExpressionStatement	SAVE_OPLINE ( )	42722:1:1353583:1353596	400849	5	True				
ANR	400873	CallExpression	SAVE_OPLINE ( )		400849	0					
ANR	400874	Callee	SAVE_OPLINE		400849	0					
ANR	400875	Identifier	SAVE_OPLINE		400849	0					
ANR	400876	ArgumentList			400849	1					
ANR	400877	ExpressionStatement	"varname = _get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"	42723:1:1353599:1353668	400849	6	True				
ANR	400878	AssignmentExpression	"varname = _get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		400849	0		=			
ANR	400879	Identifier	varname		400849	0					
ANR	400880	CallExpression	"_get_zval_ptr_var ( opline -> op1 . var , execute_data , & free_op1 )"		400849	1					
ANR	400881	Callee	_get_zval_ptr_var		400849	0					
ANR	400882	Identifier	_get_zval_ptr_var		400849	0					
ANR	400883	ArgumentList	opline -> op1 . var		400849	1					
ANR	400884	Argument	opline -> op1 . var		400849	0					
ANR	400885	MemberAccess	opline -> op1 . var		400849	0					
ANR	400886	PtrMemberAccess	opline -> op1		400849	0					
ANR	400887	Identifier	opline		400849	0					
ANR	400888	Identifier	op1		400849	1					
ANR	400889	Identifier	var		400849	1					
ANR	400890	Argument	execute_data		400849	1					
ANR	400891	Identifier	execute_data		400849	0					
ANR	400892	Argument	& free_op1		400849	2					
ANR	400893	UnaryOperationExpression	& free_op1		400849	0					
ANR	400894	UnaryOperator	&		400849	0					
ANR	400895	Identifier	free_op1		400849	1					
ANR	400896	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST )		400849	7					
ANR	400897	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST	42725:6:1353677:1353707	400849	0	True				
ANR	400898	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		400849	0		==			
ANR	400899	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	400900	Identifier	IS_TMP_VAR		400849	0					
ANR	400901	Identifier	IS_VAR		400849	1					
ANR	400902	Identifier	IS_CONST		400849	1					
ANR	400903	CompoundStatement		12:39:250:250	400849	1					
ANR	400904	ExpressionStatement	name = Z_STR_P ( varname )	42726:2:1353714:1353737	400849	0	True				
ANR	400905	AssignmentExpression	name = Z_STR_P ( varname )		400849	0		=			
ANR	400906	Identifier	name		400849	0					
ANR	400907	CallExpression	Z_STR_P ( varname )		400849	1					
ANR	400908	Callee	Z_STR_P		400849	0					
ANR	400909	Identifier	Z_STR_P		400849	0					
ANR	400910	ArgumentList	varname		400849	1					
ANR	400911	Argument	varname		400849	0					
ANR	400912	Identifier	varname		400849	0					
ANR	400913	ElseStatement	else		400849	0					
ANR	400914	IfStatement	if ( EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING ) )		400849	0					
ANR	400915	Condition	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )	42727:12:1353751:1353790	400849	0	True				
ANR	400916	CallExpression	EXPECTED ( Z_TYPE_P ( varname ) == IS_STRING )		400849	0					
ANR	400917	Callee	EXPECTED		400849	0					
ANR	400918	Identifier	EXPECTED		400849	0					
ANR	400919	ArgumentList	Z_TYPE_P ( varname ) == IS_STRING		400849	1					
ANR	400920	Argument	Z_TYPE_P ( varname ) == IS_STRING		400849	0					
ANR	400921	EqualityExpression	Z_TYPE_P ( varname ) == IS_STRING		400849	0		==			
ANR	400922	CallExpression	Z_TYPE_P ( varname )		400849	0					
ANR	400923	Callee	Z_TYPE_P		400849	0					
ANR	400924	Identifier	Z_TYPE_P		400849	0					
ANR	400925	ArgumentList	varname		400849	1					
ANR	400926	Argument	varname		400849	0					
ANR	400927	Identifier	varname		400849	0					
ANR	400928	Identifier	IS_STRING		400849	1					
ANR	400929	CompoundStatement		14:54:333:333	400849	1					
ANR	400930	ExpressionStatement	name = Z_STR_P ( varname )	42728:2:1353797:1353820	400849	0	True				
ANR	400931	AssignmentExpression	name = Z_STR_P ( varname )		400849	0		=			
ANR	400932	Identifier	name		400849	0					
ANR	400933	CallExpression	Z_STR_P ( varname )		400849	1					
ANR	400934	Callee	Z_STR_P		400849	0					
ANR	400935	Identifier	Z_STR_P		400849	0					
ANR	400936	ArgumentList	varname		400849	1					
ANR	400937	Argument	varname		400849	0					
ANR	400938	Identifier	varname		400849	0					
ANR	400939	ExpressionStatement	zend_string_addref ( name )	42729:2:1353824:1353848	400849	1	True				
ANR	400940	CallExpression	zend_string_addref ( name )		400849	0					
ANR	400941	Callee	zend_string_addref		400849	0					
ANR	400942	Identifier	zend_string_addref		400849	0					
ANR	400943	ArgumentList	name		400849	1					
ANR	400944	Argument	name		400849	0					
ANR	400945	Identifier	name		400849	0					
ANR	400946	ElseStatement	else		400849	0					
ANR	400947	CompoundStatement		17:8:398:398	400849	0					
ANR	400948	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF ) )		400849	0					
ANR	400949	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )	42731:6:1353866:1353938	400849	0	True				
ANR	400950	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CV && UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		400849	0		&&			
ANR	400951	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CV		400849	0		==			
ANR	400952	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	400953	Identifier	IS_TMP_VAR		400849	0					
ANR	400954	Identifier	IS_VAR		400849	1					
ANR	400955	Identifier	IS_CV		400849	1					
ANR	400956	CallExpression	UNEXPECTED ( Z_TYPE_P ( varname ) == IS_UNDEF )		400849	1					
ANR	400957	Callee	UNEXPECTED		400849	0					
ANR	400958	Identifier	UNEXPECTED		400849	0					
ANR	400959	ArgumentList	Z_TYPE_P ( varname ) == IS_UNDEF		400849	1					
ANR	400960	Argument	Z_TYPE_P ( varname ) == IS_UNDEF		400849	0					
ANR	400961	EqualityExpression	Z_TYPE_P ( varname ) == IS_UNDEF		400849	0		==			
ANR	400962	CallExpression	Z_TYPE_P ( varname )		400849	0					
ANR	400963	Callee	Z_TYPE_P		400849	0					
ANR	400964	Identifier	Z_TYPE_P		400849	0					
ANR	400965	ArgumentList	varname		400849	1					
ANR	400966	Argument	varname		400849	0					
ANR	400967	Identifier	varname		400849	0					
ANR	400968	Identifier	IS_UNDEF		400849	1					
ANR	400969	CompoundStatement		18:81:481:481	400849	1					
ANR	400970	ExpressionStatement	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"	42732:3:1353946:1353981	400849	0	True				
ANR	400971	CallExpression	"GET_OP1_UNDEF_CV ( varname , BP_VAR_R )"		400849	0					
ANR	400972	Callee	GET_OP1_UNDEF_CV		400849	0					
ANR	400973	Identifier	GET_OP1_UNDEF_CV		400849	0					
ANR	400974	ArgumentList	varname		400849	1					
ANR	400975	Argument	varname		400849	0					
ANR	400976	Identifier	varname		400849	0					
ANR	400977	Argument	BP_VAR_R		400849	1					
ANR	400978	Identifier	BP_VAR_R		400849	0					
ANR	400979	ExpressionStatement	name = zval_get_string ( varname )	42734:2:1353989:1354020	400849	1	True				
ANR	400980	AssignmentExpression	name = zval_get_string ( varname )		400849	0		=			
ANR	400981	Identifier	name		400849	0					
ANR	400982	CallExpression	zval_get_string ( varname )		400849	1					
ANR	400983	Callee	zval_get_string		400849	0					
ANR	400984	Identifier	zval_get_string		400849	0					
ANR	400985	ArgumentList	varname		400849	1					
ANR	400986	Argument	varname		400849	0					
ANR	400987	Identifier	varname		400849	0					
ANR	400988	IfStatement	if ( IS_UNUSED != IS_UNUSED )		400849	8					
ANR	400989	Condition	IS_UNUSED != IS_UNUSED	42737:5:1354031:1354052	400849	0	True				
ANR	400990	EqualityExpression	IS_UNUSED != IS_UNUSED		400849	0		!=			
ANR	400991	Identifier	IS_UNUSED		400849	0					
ANR	400992	Identifier	IS_UNUSED		400849	1					
ANR	400993	CompoundStatement		25:2:599:619	400849	1					
ANR	400994	IdentifierDeclStatement	zend_class_entry * ce ;	42738:2:1354059:1354079	400849	0	True				
ANR	400995	IdentifierDecl	* ce		400849	0					
ANR	400996	IdentifierDeclType	zend_class_entry *		400849	0					
ANR	400997	Identifier	ce		400849	1					
ANR	400998	IfStatement	if ( IS_UNUSED == IS_CONST )		400849	1					
ANR	400999	Condition	IS_UNUSED == IS_CONST	42740:6:1354088:1354108	400849	0	True				
ANR	401000	EqualityExpression	IS_UNUSED == IS_CONST		400849	0		==			
ANR	401001	Identifier	IS_UNUSED		400849	0					
ANR	401002	Identifier	IS_CONST		400849	1					
ANR	401003	CompoundStatement		27:29:651:651	400849	1					
ANR	401004	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL ) )		400849	0					
ANR	401005	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )	42741:7:1354120:1354231	400849	0	True				
ANR	401006	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST && EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		400849	0		&&			
ANR	401007	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		400849	0		==			
ANR	401008	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	401009	Identifier	IS_TMP_VAR		400849	0					
ANR	401010	Identifier	IS_VAR		400849	1					
ANR	401011	Identifier	IS_CONST		400849	1					
ANR	401012	CallExpression	EXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL )		400849	1					
ANR	401013	Callee	EXPECTED		400849	0					
ANR	401014	Identifier	EXPECTED		400849	0					
ANR	401015	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		400849	1					
ANR	401016	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		400849	0					
ANR	401017	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) ) ) != NULL		400849	0		!=			
ANR	401018	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		400849	0		=			
ANR	401019	Identifier	ce		400849	0					
ANR	401020	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) )		400849	1					
ANR	401021	Callee	CACHED_PTR		400849	0					
ANR	401022	Identifier	CACHED_PTR		400849	0					
ANR	401023	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	1					
ANR	401024	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	0					
ANR	401025	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	0					
ANR	401026	Callee	Z_CACHE_SLOT_P		400849	0					
ANR	401027	Identifier	Z_CACHE_SLOT_P		400849	0					
ANR	401028	ArgumentList	EX_CONSTANT ( opline -> op1 )		400849	1					
ANR	401029	Argument	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401030	CallExpression	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401031	Callee	EX_CONSTANT		400849	0					
ANR	401032	Identifier	EX_CONSTANT		400849	0					
ANR	401033	ArgumentList	opline -> op1		400849	1					
ANR	401034	Argument	opline -> op1		400849	0					
ANR	401035	PtrMemberAccess	opline -> op1		400849	0					
ANR	401036	Identifier	opline		400849	0					
ANR	401037	Identifier	op1		400849	1					
ANR	401038	Identifier	NULL		400849	1					
ANR	401039	CompoundStatement		28:121:774:774	400849	1					
ANR	401040	ExpressionStatement	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )	42742:4:1354240:1354317	400849	0	True				
ANR	401041	AssignmentExpression	retval = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		400849	0		=			
ANR	401042	Identifier	retval		400849	0					
ANR	401043	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * ) )		400849	1					
ANR	401044	Callee	CACHED_PTR		400849	0					
ANR	401045	Identifier	CACHED_PTR		400849	0					
ANR	401046	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		400849	1					
ANR	401047	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		400849	0					
ANR	401048	AdditiveExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) + sizeof ( void * )		400849	0		+			
ANR	401049	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	0					
ANR	401050	Callee	Z_CACHE_SLOT_P		400849	0					
ANR	401051	Identifier	Z_CACHE_SLOT_P		400849	0					
ANR	401052	ArgumentList	EX_CONSTANT ( opline -> op1 )		400849	1					
ANR	401053	Argument	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401054	CallExpression	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401055	Callee	EX_CONSTANT		400849	0					
ANR	401056	Identifier	EX_CONSTANT		400849	0					
ANR	401057	ArgumentList	opline -> op1		400849	1					
ANR	401058	Argument	opline -> op1		400849	0					
ANR	401059	PtrMemberAccess	opline -> op1		400849	0					
ANR	401060	Identifier	opline		400849	0					
ANR	401061	Identifier	op1		400849	1					
ANR	401062	SizeofExpression	sizeof ( void * )		400849	1					
ANR	401063	Sizeof	sizeof		400849	0					
ANR	401064	SizeofOperand	void *		400849	1					
ANR	401065	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		400849	1					
ANR	401066	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	42745:8:1354379:1354419	400849	0	True				
ANR	401067	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		400849	0					
ANR	401068	Callee	UNEXPECTED		400849	0					
ANR	401069	Identifier	UNEXPECTED		400849	0					
ANR	401070	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		400849	1					
ANR	401071	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		400849	0					
ANR	401072	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		400849	0		==			
ANR	401073	CallExpression	CE_STATIC_MEMBERS ( ce )		400849	0					
ANR	401074	Callee	CE_STATIC_MEMBERS		400849	0					
ANR	401075	Identifier	CE_STATIC_MEMBERS		400849	0					
ANR	401076	ArgumentList	ce		400849	1					
ANR	401077	Argument	ce		400849	0					
ANR	401078	Identifier	ce		400849	0					
ANR	401079	Identifier	NULL		400849	1					
ANR	401080	CompoundStatement		32:51:962:962	400849	1					
ANR	401081	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	42746:5:1354429:1354536	400849	0	True				
ANR	401082	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		400849	0					
ANR	401083	Callee	zend_throw_error		400849	0					
ANR	401084	Identifier	zend_throw_error		400849	0					
ANR	401085	ArgumentList	NULL		400849	1					
ANR	401086	Argument	NULL		400849	0					
ANR	401087	Identifier	NULL		400849	0					
ANR	401088	Argument	"""Access to undeclared static property: %s::$%s"""		400849	1					
ANR	401089	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		400849	0					
ANR	401090	Argument	ZSTR_VAL ( ce -> name )		400849	2					
ANR	401091	CallExpression	ZSTR_VAL ( ce -> name )		400849	0					
ANR	401092	Callee	ZSTR_VAL		400849	0					
ANR	401093	Identifier	ZSTR_VAL		400849	0					
ANR	401094	ArgumentList	ce -> name		400849	1					
ANR	401095	Argument	ce -> name		400849	0					
ANR	401096	PtrMemberAccess	ce -> name		400849	0					
ANR	401097	Identifier	ce		400849	0					
ANR	401098	Identifier	name		400849	1					
ANR	401099	Argument	ZSTR_VAL ( name )		400849	3					
ANR	401100	CallExpression	ZSTR_VAL ( name )		400849	0					
ANR	401101	Callee	ZSTR_VAL		400849	0					
ANR	401102	Identifier	ZSTR_VAL		400849	0					
ANR	401103	ArgumentList	name		400849	1					
ANR	401104	Argument	name		400849	0					
ANR	401105	Identifier	name		400849	0					
ANR	401106	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42747:5:1354543:1354571	400849	1	True				
ANR	401107	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		400849	0					
ANR	401108	Callee	zval_ptr_dtor_nogc		400849	0					
ANR	401109	Identifier	zval_ptr_dtor_nogc		400849	0					
ANR	401110	ArgumentList	free_op1		400849	1					
ANR	401111	Argument	free_op1		400849	0					
ANR	401112	Identifier	free_op1		400849	0					
ANR	401113	ExpressionStatement	HANDLE_EXCEPTION ( )	42748:5:1354578:1354596	400849	2	True				
ANR	401114	CallExpression	HANDLE_EXCEPTION ( )		400849	0					
ANR	401115	Callee	HANDLE_EXCEPTION		400849	0					
ANR	401116	Identifier	HANDLE_EXCEPTION		400849	0					
ANR	401117	ArgumentList			400849	1					
ANR	401118	GotoStatement	goto fetch_var_return ;	42751:4:1354609:1354630	400849	2	True				
ANR	401119	Identifier	fetch_var_return		400849	0					
ANR	401120	ElseStatement	else		400849	0					
ANR	401121	IfStatement	if ( UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL ) )		400849	0					
ANR	401122	Condition	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )	42752:14:1354646:1354724	400849	0	True				
ANR	401123	CallExpression	UNEXPECTED ( ( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL )		400849	0					
ANR	401124	Callee	UNEXPECTED		400849	0					
ANR	401125	Identifier	UNEXPECTED		400849	0					
ANR	401126	ArgumentList	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		400849	1					
ANR	401127	Argument	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		400849	0					
ANR	401128	EqualityExpression	( ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) ) ) == NULL		400849	0		==			
ANR	401129	AssignmentExpression	ce = CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		400849	0		=			
ANR	401130	Identifier	ce		400849	0					
ANR	401131	CallExpression	CACHED_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) )		400849	1					
ANR	401132	Callee	CACHED_PTR		400849	0					
ANR	401133	Identifier	CACHED_PTR		400849	0					
ANR	401134	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		400849	1					
ANR	401135	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		400849	0					
ANR	401136	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		400849	0					
ANR	401137	Callee	Z_CACHE_SLOT_P		400849	0					
ANR	401138	Identifier	Z_CACHE_SLOT_P		400849	0					
ANR	401139	ArgumentList	EX_CONSTANT ( opline -> op2 )		400849	1					
ANR	401140	Argument	EX_CONSTANT ( opline -> op2 )		400849	0					
ANR	401141	CallExpression	EX_CONSTANT ( opline -> op2 )		400849	0					
ANR	401142	Callee	EX_CONSTANT		400849	0					
ANR	401143	Identifier	EX_CONSTANT		400849	0					
ANR	401144	ArgumentList	opline -> op2		400849	1					
ANR	401145	Argument	opline -> op2		400849	0					
ANR	401146	PtrMemberAccess	opline -> op2		400849	0					
ANR	401147	Identifier	opline		400849	0					
ANR	401148	Identifier	op2		400849	1					
ANR	401149	Identifier	NULL		400849	1					
ANR	401150	CompoundStatement		39:95:1267:1267	400849	1					
ANR	401151	ExpressionStatement	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"	42753:4:1354733:1354882	400849	0	True				
ANR	401152	AssignmentExpression	"ce = zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		400849	0		=			
ANR	401153	Identifier	ce		400849	0					
ANR	401154	CallExpression	"zend_fetch_class_by_name ( Z_STR_P ( EX_CONSTANT ( opline -> op2 ) ) , EX_CONSTANT ( opline -> op2 ) + 1 , ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION )"		400849	1					
ANR	401155	Callee	zend_fetch_class_by_name		400849	0					
ANR	401156	Identifier	zend_fetch_class_by_name		400849	0					
ANR	401157	ArgumentList	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		400849	1					
ANR	401158	Argument	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		400849	0					
ANR	401159	CallExpression	Z_STR_P ( EX_CONSTANT ( opline -> op2 ) )		400849	0					
ANR	401160	Callee	Z_STR_P		400849	0					
ANR	401161	Identifier	Z_STR_P		400849	0					
ANR	401162	ArgumentList	EX_CONSTANT ( opline -> op2 )		400849	1					
ANR	401163	Argument	EX_CONSTANT ( opline -> op2 )		400849	0					
ANR	401164	CallExpression	EX_CONSTANT ( opline -> op2 )		400849	0					
ANR	401165	Callee	EX_CONSTANT		400849	0					
ANR	401166	Identifier	EX_CONSTANT		400849	0					
ANR	401167	ArgumentList	opline -> op2		400849	1					
ANR	401168	Argument	opline -> op2		400849	0					
ANR	401169	PtrMemberAccess	opline -> op2		400849	0					
ANR	401170	Identifier	opline		400849	0					
ANR	401171	Identifier	op2		400849	1					
ANR	401172	Argument	EX_CONSTANT ( opline -> op2 ) + 1		400849	1					
ANR	401173	AdditiveExpression	EX_CONSTANT ( opline -> op2 ) + 1		400849	0		+			
ANR	401174	CallExpression	EX_CONSTANT ( opline -> op2 )		400849	0					
ANR	401175	Callee	EX_CONSTANT		400849	0					
ANR	401176	Identifier	EX_CONSTANT		400849	0					
ANR	401177	ArgumentList	opline -> op2		400849	1					
ANR	401178	Argument	opline -> op2		400849	0					
ANR	401179	PtrMemberAccess	opline -> op2		400849	0					
ANR	401180	Identifier	opline		400849	0					
ANR	401181	Identifier	op2		400849	1					
ANR	401182	PrimaryExpression	1		400849	1					
ANR	401183	Argument	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		400849	2					
ANR	401184	InclusiveOrExpression	ZEND_FETCH_CLASS_DEFAULT | ZEND_FETCH_CLASS_EXCEPTION		400849	0		|			
ANR	401185	Identifier	ZEND_FETCH_CLASS_DEFAULT		400849	0					
ANR	401186	Identifier	ZEND_FETCH_CLASS_EXCEPTION		400849	1					
ANR	401187	IfStatement	if ( UNEXPECTED ( ce == NULL ) )		400849	1					
ANR	401188	Condition	UNEXPECTED ( ce == NULL )	42754:8:1354892:1354913	400849	0	True				
ANR	401189	CallExpression	UNEXPECTED ( ce == NULL )		400849	0					
ANR	401190	Callee	UNEXPECTED		400849	0					
ANR	401191	Identifier	UNEXPECTED		400849	0					
ANR	401192	ArgumentList	ce == NULL		400849	1					
ANR	401193	Argument	ce == NULL		400849	0					
ANR	401194	EqualityExpression	ce == NULL		400849	0		==			
ANR	401195	Identifier	ce		400849	0					
ANR	401196	Identifier	NULL		400849	1					
ANR	401197	CompoundStatement		41:32:1456:1456	400849	1					
ANR	401198	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		400849	0					
ANR	401199	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	42755:9:1354927:1354957	400849	0	True				
ANR	401200	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		400849	0		!=			
ANR	401201	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	401202	Identifier	IS_TMP_VAR		400849	0					
ANR	401203	Identifier	IS_VAR		400849	1					
ANR	401204	Identifier	IS_CONST		400849	1					
ANR	401205	CompoundStatement		42:42:1500:1500	400849	1					
ANR	401206	ExpressionStatement	zend_string_release ( name )	42756:6:1354968:1354993	400849	0	True				
ANR	401207	CallExpression	zend_string_release ( name )		400849	0					
ANR	401208	Callee	zend_string_release		400849	0					
ANR	401209	Identifier	zend_string_release		400849	0					
ANR	401210	ArgumentList	name		400849	1					
ANR	401211	Argument	name		400849	0					
ANR	401212	Identifier	name		400849	0					
ANR	401213	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42758:5:1355007:1355035	400849	1	True				
ANR	401214	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		400849	0					
ANR	401215	Callee	zval_ptr_dtor_nogc		400849	0					
ANR	401216	Identifier	zval_ptr_dtor_nogc		400849	0					
ANR	401217	ArgumentList	free_op1		400849	1					
ANR	401218	Argument	free_op1		400849	0					
ANR	401219	Identifier	free_op1		400849	0					
ANR	401220	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	42759:5:1355042:1355079	400849	2	True				
ANR	401221	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		400849	0					
ANR	401222	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		400849	0					
ANR	401223	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		400849	0					
ANR	401224	ArgumentList			400849	1					
ANR	401225	ExpressionStatement	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"	42761:4:1355091:1355146	400849	2	True				
ANR	401226	CallExpression	"CACHE_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) ) , ce )"		400849	0					
ANR	401227	Callee	CACHE_PTR		400849	0					
ANR	401228	Identifier	CACHE_PTR		400849	0					
ANR	401229	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		400849	1					
ANR	401230	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		400849	0					
ANR	401231	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op2 ) )		400849	0					
ANR	401232	Callee	Z_CACHE_SLOT_P		400849	0					
ANR	401233	Identifier	Z_CACHE_SLOT_P		400849	0					
ANR	401234	ArgumentList	EX_CONSTANT ( opline -> op2 )		400849	1					
ANR	401235	Argument	EX_CONSTANT ( opline -> op2 )		400849	0					
ANR	401236	CallExpression	EX_CONSTANT ( opline -> op2 )		400849	0					
ANR	401237	Callee	EX_CONSTANT		400849	0					
ANR	401238	Identifier	EX_CONSTANT		400849	0					
ANR	401239	ArgumentList	opline -> op2		400849	1					
ANR	401240	Argument	opline -> op2		400849	0					
ANR	401241	PtrMemberAccess	opline -> op2		400849	0					
ANR	401242	Identifier	opline		400849	0					
ANR	401243	Identifier	op2		400849	1					
ANR	401244	Argument	ce		400849	1					
ANR	401245	Identifier	ce		400849	0					
ANR	401246	ElseStatement	else		400849	0					
ANR	401247	CompoundStatement		50:9:1702:1702	400849	0					
ANR	401248	ExpressionStatement	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )	42764:3:1355167:1355203	400849	0	True				
ANR	401249	AssignmentExpression	ce = Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		400849	0		=			
ANR	401250	Identifier	ce		400849	0					
ANR	401251	CallExpression	Z_CE_P ( EX_VAR ( opline -> op2 . var ) )		400849	1					
ANR	401252	Callee	Z_CE_P		400849	0					
ANR	401253	Identifier	Z_CE_P		400849	0					
ANR	401254	ArgumentList	EX_VAR ( opline -> op2 . var )		400849	1					
ANR	401255	Argument	EX_VAR ( opline -> op2 . var )		400849	0					
ANR	401256	CallExpression	EX_VAR ( opline -> op2 . var )		400849	0					
ANR	401257	Callee	EX_VAR		400849	0					
ANR	401258	Identifier	EX_VAR		400849	0					
ANR	401259	ArgumentList	opline -> op2 . var		400849	1					
ANR	401260	Argument	opline -> op2 . var		400849	0					
ANR	401261	MemberAccess	opline -> op2 . var		400849	0					
ANR	401262	PtrMemberAccess	opline -> op2		400849	0					
ANR	401263	Identifier	opline		400849	0					
ANR	401264	Identifier	op2		400849	1					
ANR	401265	Identifier	var		400849	1					
ANR	401266	IfStatement	"if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL )"		400849	1					
ANR	401267	Condition	"( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"	42765:7:1355212:1355340	400849	0	True				
ANR	401268	AndExpression	"( IS_TMP_VAR | IS_VAR ) == IS_CONST && ( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		400849	0		&&			
ANR	401269	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		400849	0		==			
ANR	401270	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	401271	Identifier	IS_TMP_VAR		400849	0					
ANR	401272	Identifier	IS_VAR		400849	1					
ANR	401273	Identifier	IS_CONST		400849	1					
ANR	401274	EqualityExpression	"( retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce ) ) != NULL"		400849	1		!=			
ANR	401275	AssignmentExpression	"retval = CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		400849	0		=			
ANR	401276	Identifier	retval		400849	0					
ANR	401277	CallExpression	"CACHED_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce )"		400849	1					
ANR	401278	Callee	CACHED_POLYMORPHIC_PTR		400849	0					
ANR	401279	Identifier	CACHED_POLYMORPHIC_PTR		400849	0					
ANR	401280	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	1					
ANR	401281	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	0					
ANR	401282	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	0					
ANR	401283	Callee	Z_CACHE_SLOT_P		400849	0					
ANR	401284	Identifier	Z_CACHE_SLOT_P		400849	0					
ANR	401285	ArgumentList	EX_CONSTANT ( opline -> op1 )		400849	1					
ANR	401286	Argument	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401287	CallExpression	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401288	Callee	EX_CONSTANT		400849	0					
ANR	401289	Identifier	EX_CONSTANT		400849	0					
ANR	401290	ArgumentList	opline -> op1		400849	1					
ANR	401291	Argument	opline -> op1		400849	0					
ANR	401292	PtrMemberAccess	opline -> op1		400849	0					
ANR	401293	Identifier	opline		400849	0					
ANR	401294	Identifier	op1		400849	1					
ANR	401295	Argument	ce		400849	1					
ANR	401296	Identifier	ce		400849	0					
ANR	401297	Identifier	NULL		400849	1					
ANR	401298	CompoundStatement		53:96:1883:1883	400849	1					
ANR	401299	IfStatement	if ( UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL ) )		400849	0					
ANR	401300	Condition	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )	42769:8:1355405:1355445	400849	0	True				
ANR	401301	CallExpression	UNEXPECTED ( CE_STATIC_MEMBERS ( ce ) == NULL )		400849	0					
ANR	401302	Callee	UNEXPECTED		400849	0					
ANR	401303	Identifier	UNEXPECTED		400849	0					
ANR	401304	ArgumentList	CE_STATIC_MEMBERS ( ce ) == NULL		400849	1					
ANR	401305	Argument	CE_STATIC_MEMBERS ( ce ) == NULL		400849	0					
ANR	401306	EqualityExpression	CE_STATIC_MEMBERS ( ce ) == NULL		400849	0		==			
ANR	401307	CallExpression	CE_STATIC_MEMBERS ( ce )		400849	0					
ANR	401308	Callee	CE_STATIC_MEMBERS		400849	0					
ANR	401309	Identifier	CE_STATIC_MEMBERS		400849	0					
ANR	401310	ArgumentList	ce		400849	1					
ANR	401311	Argument	ce		400849	0					
ANR	401312	Identifier	ce		400849	0					
ANR	401313	Identifier	NULL		400849	1					
ANR	401314	CompoundStatement		56:51:1988:1988	400849	1					
ANR	401315	ExpressionStatement	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"	42770:5:1355455:1355562	400849	0	True				
ANR	401316	CallExpression	"zend_throw_error ( NULL , ""Access to undeclared static property: %s::$%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( name ) )"		400849	0					
ANR	401317	Callee	zend_throw_error		400849	0					
ANR	401318	Identifier	zend_throw_error		400849	0					
ANR	401319	ArgumentList	NULL		400849	1					
ANR	401320	Argument	NULL		400849	0					
ANR	401321	Identifier	NULL		400849	0					
ANR	401322	Argument	"""Access to undeclared static property: %s::$%s"""		400849	1					
ANR	401323	PrimaryExpression	"""Access to undeclared static property: %s::$%s"""		400849	0					
ANR	401324	Argument	ZSTR_VAL ( ce -> name )		400849	2					
ANR	401325	CallExpression	ZSTR_VAL ( ce -> name )		400849	0					
ANR	401326	Callee	ZSTR_VAL		400849	0					
ANR	401327	Identifier	ZSTR_VAL		400849	0					
ANR	401328	ArgumentList	ce -> name		400849	1					
ANR	401329	Argument	ce -> name		400849	0					
ANR	401330	PtrMemberAccess	ce -> name		400849	0					
ANR	401331	Identifier	ce		400849	0					
ANR	401332	Identifier	name		400849	1					
ANR	401333	Argument	ZSTR_VAL ( name )		400849	3					
ANR	401334	CallExpression	ZSTR_VAL ( name )		400849	0					
ANR	401335	Callee	ZSTR_VAL		400849	0					
ANR	401336	Identifier	ZSTR_VAL		400849	0					
ANR	401337	ArgumentList	name		400849	1					
ANR	401338	Argument	name		400849	0					
ANR	401339	Identifier	name		400849	0					
ANR	401340	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42771:5:1355569:1355597	400849	1	True				
ANR	401341	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		400849	0					
ANR	401342	Callee	zval_ptr_dtor_nogc		400849	0					
ANR	401343	Identifier	zval_ptr_dtor_nogc		400849	0					
ANR	401344	ArgumentList	free_op1		400849	1					
ANR	401345	Argument	free_op1		400849	0					
ANR	401346	Identifier	free_op1		400849	0					
ANR	401347	ExpressionStatement	HANDLE_EXCEPTION ( )	42772:5:1355604:1355622	400849	2	True				
ANR	401348	CallExpression	HANDLE_EXCEPTION ( )		400849	0					
ANR	401349	Callee	HANDLE_EXCEPTION		400849	0					
ANR	401350	Identifier	HANDLE_EXCEPTION		400849	0					
ANR	401351	ArgumentList			400849	1					
ANR	401352	GotoStatement	goto fetch_var_return ;	42775:4:1355635:1355656	400849	1	True				
ANR	401353	Identifier	fetch_var_return		400849	0					
ANR	401354	ExpressionStatement	"retval = zend_std_get_static_property ( ce , name , 0 )"	42778:2:1355669:1355719	400849	2	True				
ANR	401355	AssignmentExpression	"retval = zend_std_get_static_property ( ce , name , 0 )"		400849	0		=			
ANR	401356	Identifier	retval		400849	0					
ANR	401357	CallExpression	"zend_std_get_static_property ( ce , name , 0 )"		400849	1					
ANR	401358	Callee	zend_std_get_static_property		400849	0					
ANR	401359	Identifier	zend_std_get_static_property		400849	0					
ANR	401360	ArgumentList	ce		400849	1					
ANR	401361	Argument	ce		400849	0					
ANR	401362	Identifier	ce		400849	0					
ANR	401363	Argument	name		400849	1					
ANR	401364	Identifier	name		400849	0					
ANR	401365	Argument	0		400849	2					
ANR	401366	PrimaryExpression	0		400849	0					
ANR	401367	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		400849	3					
ANR	401368	Condition	UNEXPECTED ( EG ( exception ) )	42779:6:1355727:1355751	400849	0	True				
ANR	401369	CallExpression	UNEXPECTED ( EG ( exception ) )		400849	0					
ANR	401370	Callee	UNEXPECTED		400849	0					
ANR	401371	Identifier	UNEXPECTED		400849	0					
ANR	401372	ArgumentList	EG ( exception )		400849	1					
ANR	401373	Argument	EG ( exception )		400849	0					
ANR	401374	CallExpression	EG ( exception )		400849	0					
ANR	401375	Callee	EG		400849	0					
ANR	401376	Identifier	EG		400849	0					
ANR	401377	ArgumentList	exception		400849	1					
ANR	401378	Argument	exception		400849	0					
ANR	401379	Identifier	exception		400849	0					
ANR	401380	CompoundStatement		66:33:2294:2294	400849	1					
ANR	401381	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		400849	0					
ANR	401382	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	42780:7:1355763:1355793	400849	0	True				
ANR	401383	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		400849	0		!=			
ANR	401384	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	401385	Identifier	IS_TMP_VAR		400849	0					
ANR	401386	Identifier	IS_VAR		400849	1					
ANR	401387	Identifier	IS_CONST		400849	1					
ANR	401388	CompoundStatement		67:40:2336:2336	400849	1					
ANR	401389	ExpressionStatement	zend_string_release ( name )	42781:4:1355802:1355827	400849	0	True				
ANR	401390	CallExpression	zend_string_release ( name )		400849	0					
ANR	401391	Callee	zend_string_release		400849	0					
ANR	401392	Identifier	zend_string_release		400849	0					
ANR	401393	ArgumentList	name		400849	1					
ANR	401394	Argument	name		400849	0					
ANR	401395	Identifier	name		400849	0					
ANR	401396	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42783:3:1355837:1355865	400849	1	True				
ANR	401397	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		400849	0					
ANR	401398	Callee	zval_ptr_dtor_nogc		400849	0					
ANR	401399	Identifier	zval_ptr_dtor_nogc		400849	0					
ANR	401400	ArgumentList	free_op1		400849	1					
ANR	401401	Argument	free_op1		400849	0					
ANR	401402	Identifier	free_op1		400849	0					
ANR	401403	ExpressionStatement	HANDLE_EXCEPTION ( )	42784:3:1355870:1355888	400849	2	True				
ANR	401404	CallExpression	HANDLE_EXCEPTION ( )		400849	0					
ANR	401405	Callee	HANDLE_EXCEPTION		400849	0					
ANR	401406	Identifier	HANDLE_EXCEPTION		400849	0					
ANR	401407	ArgumentList			400849	1					
ANR	401408	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval )		400849	4					
ANR	401409	Condition	( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval	42786:6:1355900:1355940	400849	0	True				
ANR	401410	AndExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST && retval		400849	0		&&			
ANR	401411	EqualityExpression	( IS_TMP_VAR | IS_VAR ) == IS_CONST		400849	0		==			
ANR	401412	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	401413	Identifier	IS_TMP_VAR		400849	0					
ANR	401414	Identifier	IS_VAR		400849	1					
ANR	401415	Identifier	IS_CONST		400849	1					
ANR	401416	Identifier	retval		400849	1					
ANR	401417	CompoundStatement		73:49:2483:2483	400849	1					
ANR	401418	ExpressionStatement	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"	42787:3:1355948:1356023	400849	0	True				
ANR	401419	CallExpression	"CACHE_POLYMORPHIC_PTR ( Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) ) , ce , retval )"		400849	0					
ANR	401420	Callee	CACHE_POLYMORPHIC_PTR		400849	0					
ANR	401421	Identifier	CACHE_POLYMORPHIC_PTR		400849	0					
ANR	401422	ArgumentList	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	1					
ANR	401423	Argument	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	0					
ANR	401424	CallExpression	Z_CACHE_SLOT_P ( EX_CONSTANT ( opline -> op1 ) )		400849	0					
ANR	401425	Callee	Z_CACHE_SLOT_P		400849	0					
ANR	401426	Identifier	Z_CACHE_SLOT_P		400849	0					
ANR	401427	ArgumentList	EX_CONSTANT ( opline -> op1 )		400849	1					
ANR	401428	Argument	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401429	CallExpression	EX_CONSTANT ( opline -> op1 )		400849	0					
ANR	401430	Callee	EX_CONSTANT		400849	0					
ANR	401431	Identifier	EX_CONSTANT		400849	0					
ANR	401432	ArgumentList	opline -> op1		400849	1					
ANR	401433	Argument	opline -> op1		400849	0					
ANR	401434	PtrMemberAccess	opline -> op1		400849	0					
ANR	401435	Identifier	opline		400849	0					
ANR	401436	Identifier	op1		400849	1					
ANR	401437	Argument	ce		400849	1					
ANR	401438	Identifier	ce		400849	0					
ANR	401439	Argument	retval		400849	2					
ANR	401440	Identifier	retval		400849	0					
ANR	401441	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42790:2:1356032:1356060	400849	5	True				
ANR	401442	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		400849	0					
ANR	401443	Callee	zval_ptr_dtor_nogc		400849	0					
ANR	401444	Identifier	zval_ptr_dtor_nogc		400849	0					
ANR	401445	ArgumentList	free_op1		400849	1					
ANR	401446	Argument	free_op1		400849	0					
ANR	401447	Identifier	free_op1		400849	0					
ANR	401448	ElseStatement	else		400849	0					
ANR	401449	CompoundStatement		78:8:2610:2610	400849	0					
ANR	401450	ExpressionStatement	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"	42792:2:1356074:1356185	400849	0	True				
ANR	401451	AssignmentExpression	"target_symbol_table = zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		400849	0		=			
ANR	401452	Identifier	target_symbol_table		400849	0					
ANR	401453	CallExpression	"zend_get_target_symbol_table ( execute_data , opline -> extended_value & ZEND_FETCH_TYPE_MASK )"		400849	1					
ANR	401454	Callee	zend_get_target_symbol_table		400849	0					
ANR	401455	Identifier	zend_get_target_symbol_table		400849	0					
ANR	401456	ArgumentList	execute_data		400849	1					
ANR	401457	Argument	execute_data		400849	0					
ANR	401458	Identifier	execute_data		400849	0					
ANR	401459	Argument	opline -> extended_value & ZEND_FETCH_TYPE_MASK		400849	1					
ANR	401460	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		400849	0		&			
ANR	401461	PtrMemberAccess	opline -> extended_value		400849	0					
ANR	401462	Identifier	opline		400849	0					
ANR	401463	Identifier	extended_value		400849	1					
ANR	401464	Identifier	ZEND_FETCH_TYPE_MASK		400849	1					
ANR	401465	ExpressionStatement	"retval = zend_hash_find ( target_symbol_table , name )"	42793:2:1356189:1356239	400849	1	True				
ANR	401466	AssignmentExpression	"retval = zend_hash_find ( target_symbol_table , name )"		400849	0		=			
ANR	401467	Identifier	retval		400849	0					
ANR	401468	CallExpression	"zend_hash_find ( target_symbol_table , name )"		400849	1					
ANR	401469	Callee	zend_hash_find		400849	0					
ANR	401470	Identifier	zend_hash_find		400849	0					
ANR	401471	ArgumentList	target_symbol_table		400849	1					
ANR	401472	Argument	target_symbol_table		400849	0					
ANR	401473	Identifier	target_symbol_table		400849	0					
ANR	401474	Argument	name		400849	1					
ANR	401475	Identifier	name		400849	0					
ANR	401476	IfStatement	if ( retval == NULL )		400849	2					
ANR	401477	Condition	retval == NULL	42794:6:1356247:1356260	400849	0	True				
ANR	401478	EqualityExpression	retval == NULL		400849	0		==			
ANR	401479	Identifier	retval		400849	0					
ANR	401480	Identifier	NULL		400849	1					
ANR	401481	CompoundStatement		81:22:2803:2803	400849	1					
ANR	401482	SwitchStatement	switch ( type )		400849	0					
ANR	401483	Condition	type	42795:11:1356276:1356279	400849	0	True				
ANR	401484	Identifier	type		400849	0					
ANR	401485	CompoundStatement		82:17:2822:2822	400849	1					
ANR	401486	Label	case BP_VAR_R :	42796:4:1356288:1356301	400849	0	True				
ANR	401487	Identifier	BP_VAR_R		400849	0					
ANR	401488	Label	case BP_VAR_UNSET :	42797:4:1356307:1356324	400849	1	True				
ANR	401489	Identifier	BP_VAR_UNSET		400849	0					
ANR	401490	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42798:5:1356331:1356392	400849	2	True				
ANR	401491	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		400849	0					
ANR	401492	Callee	zend_error		400849	0					
ANR	401493	Identifier	zend_error		400849	0					
ANR	401494	ArgumentList	E_NOTICE		400849	1					
ANR	401495	Argument	E_NOTICE		400849	0					
ANR	401496	Identifier	E_NOTICE		400849	0					
ANR	401497	Argument	"""Undefined variable: %s"""		400849	1					
ANR	401498	PrimaryExpression	"""Undefined variable: %s"""		400849	0					
ANR	401499	Argument	ZSTR_VAL ( name )		400849	2					
ANR	401500	CallExpression	ZSTR_VAL ( name )		400849	0					
ANR	401501	Callee	ZSTR_VAL		400849	0					
ANR	401502	Identifier	ZSTR_VAL		400849	0					
ANR	401503	ArgumentList	name		400849	1					
ANR	401504	Argument	name		400849	0					
ANR	401505	Identifier	name		400849	0					
ANR	401506	Label	case BP_VAR_IS :	42800:4:1356437:1356451	400849	3	True				
ANR	401507	Identifier	BP_VAR_IS		400849	0					
ANR	401508	ExpressionStatement	retval = & EG ( uninitialized_zval )	42801:5:1356458:1356490	400849	4	True				
ANR	401509	AssignmentExpression	retval = & EG ( uninitialized_zval )		400849	0		=			
ANR	401510	Identifier	retval		400849	0					
ANR	401511	UnaryOperationExpression	& EG ( uninitialized_zval )		400849	1					
ANR	401512	UnaryOperator	&		400849	0					
ANR	401513	CallExpression	EG ( uninitialized_zval )		400849	1					
ANR	401514	Callee	EG		400849	0					
ANR	401515	Identifier	EG		400849	0					
ANR	401516	ArgumentList	uninitialized_zval		400849	1					
ANR	401517	Argument	uninitialized_zval		400849	0					
ANR	401518	Identifier	uninitialized_zval		400849	0					
ANR	401519	BreakStatement	break ;	42802:5:1356497:1356502	400849	5	True				
ANR	401520	Label	case BP_VAR_RW :	42803:4:1356508:1356522	400849	6	True				
ANR	401521	Identifier	BP_VAR_RW		400849	0					
ANR	401522	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42804:5:1356529:1356590	400849	7	True				
ANR	401523	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		400849	0					
ANR	401524	Callee	zend_error		400849	0					
ANR	401525	Identifier	zend_error		400849	0					
ANR	401526	ArgumentList	E_NOTICE		400849	1					
ANR	401527	Argument	E_NOTICE		400849	0					
ANR	401528	Identifier	E_NOTICE		400849	0					
ANR	401529	Argument	"""Undefined variable: %s"""		400849	1					
ANR	401530	PrimaryExpression	"""Undefined variable: %s"""		400849	0					
ANR	401531	Argument	ZSTR_VAL ( name )		400849	2					
ANR	401532	CallExpression	ZSTR_VAL ( name )		400849	0					
ANR	401533	Callee	ZSTR_VAL		400849	0					
ANR	401534	Identifier	ZSTR_VAL		400849	0					
ANR	401535	ArgumentList	name		400849	1					
ANR	401536	Argument	name		400849	0					
ANR	401537	Identifier	name		400849	0					
ANR	401538	ExpressionStatement	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	42805:5:1356597:1356674	400849	8	True				
ANR	401539	AssignmentExpression	"retval = zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		400849	0		=			
ANR	401540	Identifier	retval		400849	0					
ANR	401541	CallExpression	"zend_hash_update ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		400849	1					
ANR	401542	Callee	zend_hash_update		400849	0					
ANR	401543	Identifier	zend_hash_update		400849	0					
ANR	401544	ArgumentList	target_symbol_table		400849	1					
ANR	401545	Argument	target_symbol_table		400849	0					
ANR	401546	Identifier	target_symbol_table		400849	0					
ANR	401547	Argument	name		400849	1					
ANR	401548	Identifier	name		400849	0					
ANR	401549	Argument	& EG ( uninitialized_zval )		400849	2					
ANR	401550	UnaryOperationExpression	& EG ( uninitialized_zval )		400849	0					
ANR	401551	UnaryOperator	&		400849	0					
ANR	401552	CallExpression	EG ( uninitialized_zval )		400849	1					
ANR	401553	Callee	EG		400849	0					
ANR	401554	Identifier	EG		400849	0					
ANR	401555	ArgumentList	uninitialized_zval		400849	1					
ANR	401556	Argument	uninitialized_zval		400849	0					
ANR	401557	Identifier	uninitialized_zval		400849	0					
ANR	401558	BreakStatement	break ;	42806:5:1356681:1356686	400849	9	True				
ANR	401559	Label	case BP_VAR_W :	42807:4:1356692:1356705	400849	10	True				
ANR	401560	Identifier	BP_VAR_W		400849	0					
ANR	401561	ExpressionStatement	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"	42808:5:1356712:1356790	400849	11	True				
ANR	401562	AssignmentExpression	"retval = zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		400849	0		=			
ANR	401563	Identifier	retval		400849	0					
ANR	401564	CallExpression	"zend_hash_add_new ( target_symbol_table , name , & EG ( uninitialized_zval ) )"		400849	1					
ANR	401565	Callee	zend_hash_add_new		400849	0					
ANR	401566	Identifier	zend_hash_add_new		400849	0					
ANR	401567	ArgumentList	target_symbol_table		400849	1					
ANR	401568	Argument	target_symbol_table		400849	0					
ANR	401569	Identifier	target_symbol_table		400849	0					
ANR	401570	Argument	name		400849	1					
ANR	401571	Identifier	name		400849	0					
ANR	401572	Argument	& EG ( uninitialized_zval )		400849	2					
ANR	401573	UnaryOperationExpression	& EG ( uninitialized_zval )		400849	0					
ANR	401574	UnaryOperator	&		400849	0					
ANR	401575	CallExpression	EG ( uninitialized_zval )		400849	1					
ANR	401576	Callee	EG		400849	0					
ANR	401577	Identifier	EG		400849	0					
ANR	401578	ArgumentList	uninitialized_zval		400849	1					
ANR	401579	Argument	uninitialized_zval		400849	0					
ANR	401580	Identifier	uninitialized_zval		400849	0					
ANR	401581	BreakStatement	break ;	42809:5:1356797:1356802	400849	12	True				
ANR	401582	Statement	EMPTY_SWITCH_DEFAULT_CASE	42810:4:1356808:1356832	400849	13	True				
ANR	401583	Statement	(	42810:29:1356833:1356833	400849	14	True				
ANR	401584	Statement	)	42810:30:1356834:1356834	400849	15	True				
ANR	401585	ElseStatement	else		400849	0					
ANR	401586	IfStatement	if ( Z_TYPE_P ( retval ) == IS_INDIRECT )		400849	0					
ANR	401587	Condition	Z_TYPE_P ( retval ) == IS_INDIRECT	42813:13:1356921:1356951	400849	0	True				
ANR	401588	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		400849	0		==			
ANR	401589	CallExpression	Z_TYPE_P ( retval )		400849	0					
ANR	401590	Callee	Z_TYPE_P		400849	0					
ANR	401591	Identifier	Z_TYPE_P		400849	0					
ANR	401592	ArgumentList	retval		400849	1					
ANR	401593	Argument	retval		400849	0					
ANR	401594	Identifier	retval		400849	0					
ANR	401595	Identifier	IS_INDIRECT		400849	1					
ANR	401596	CompoundStatement		100:46:3494:3494	400849	1					
ANR	401597	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	42814:3:1356959:1356988	400849	0	True				
ANR	401598	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		400849	0		=			
ANR	401599	Identifier	retval		400849	0					
ANR	401600	CallExpression	Z_INDIRECT_P ( retval )		400849	1					
ANR	401601	Callee	Z_INDIRECT_P		400849	0					
ANR	401602	Identifier	Z_INDIRECT_P		400849	0					
ANR	401603	ArgumentList	retval		400849	1					
ANR	401604	Argument	retval		400849	0					
ANR	401605	Identifier	retval		400849	0					
ANR	401606	IfStatement	if ( Z_TYPE_P ( retval ) == IS_UNDEF )		400849	1					
ANR	401607	Condition	Z_TYPE_P ( retval ) == IS_UNDEF	42815:7:1356997:1357024	400849	0	True				
ANR	401608	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		400849	0		==			
ANR	401609	CallExpression	Z_TYPE_P ( retval )		400849	0					
ANR	401610	Callee	Z_TYPE_P		400849	0					
ANR	401611	Identifier	Z_TYPE_P		400849	0					
ANR	401612	ArgumentList	retval		400849	1					
ANR	401613	Argument	retval		400849	0					
ANR	401614	Identifier	retval		400849	0					
ANR	401615	Identifier	IS_UNDEF		400849	1					
ANR	401616	CompoundStatement		102:37:3567:3567	400849	1					
ANR	401617	SwitchStatement	switch ( type )		400849	0					
ANR	401618	Condition	type	42816:12:1357041:1357044	400849	0	True				
ANR	401619	Identifier	type		400849	0					
ANR	401620	CompoundStatement		103:18:3587:3587	400849	1					
ANR	401621	Label	case BP_VAR_R :	42817:5:1357054:1357067	400849	0	True				
ANR	401622	Identifier	BP_VAR_R		400849	0					
ANR	401623	Label	case BP_VAR_UNSET :	42818:5:1357074:1357091	400849	1	True				
ANR	401624	Identifier	BP_VAR_UNSET		400849	0					
ANR	401625	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42819:6:1357099:1357160	400849	2	True				
ANR	401626	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		400849	0					
ANR	401627	Callee	zend_error		400849	0					
ANR	401628	Identifier	zend_error		400849	0					
ANR	401629	ArgumentList	E_NOTICE		400849	1					
ANR	401630	Argument	E_NOTICE		400849	0					
ANR	401631	Identifier	E_NOTICE		400849	0					
ANR	401632	Argument	"""Undefined variable: %s"""		400849	1					
ANR	401633	PrimaryExpression	"""Undefined variable: %s"""		400849	0					
ANR	401634	Argument	ZSTR_VAL ( name )		400849	2					
ANR	401635	CallExpression	ZSTR_VAL ( name )		400849	0					
ANR	401636	Callee	ZSTR_VAL		400849	0					
ANR	401637	Identifier	ZSTR_VAL		400849	0					
ANR	401638	ArgumentList	name		400849	1					
ANR	401639	Argument	name		400849	0					
ANR	401640	Identifier	name		400849	0					
ANR	401641	Label	case BP_VAR_IS :	42821:5:1357207:1357221	400849	3	True				
ANR	401642	Identifier	BP_VAR_IS		400849	0					
ANR	401643	ExpressionStatement	retval = & EG ( uninitialized_zval )	42822:6:1357229:1357261	400849	4	True				
ANR	401644	AssignmentExpression	retval = & EG ( uninitialized_zval )		400849	0		=			
ANR	401645	Identifier	retval		400849	0					
ANR	401646	UnaryOperationExpression	& EG ( uninitialized_zval )		400849	1					
ANR	401647	UnaryOperator	&		400849	0					
ANR	401648	CallExpression	EG ( uninitialized_zval )		400849	1					
ANR	401649	Callee	EG		400849	0					
ANR	401650	Identifier	EG		400849	0					
ANR	401651	ArgumentList	uninitialized_zval		400849	1					
ANR	401652	Argument	uninitialized_zval		400849	0					
ANR	401653	Identifier	uninitialized_zval		400849	0					
ANR	401654	BreakStatement	break ;	42823:6:1357269:1357274	400849	5	True				
ANR	401655	Label	case BP_VAR_RW :	42824:5:1357281:1357295	400849	6	True				
ANR	401656	Identifier	BP_VAR_RW		400849	0					
ANR	401657	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"	42825:6:1357303:1357364	400849	7	True				
ANR	401658	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( name ) )"		400849	0					
ANR	401659	Callee	zend_error		400849	0					
ANR	401660	Identifier	zend_error		400849	0					
ANR	401661	ArgumentList	E_NOTICE		400849	1					
ANR	401662	Argument	E_NOTICE		400849	0					
ANR	401663	Identifier	E_NOTICE		400849	0					
ANR	401664	Argument	"""Undefined variable: %s"""		400849	1					
ANR	401665	PrimaryExpression	"""Undefined variable: %s"""		400849	0					
ANR	401666	Argument	ZSTR_VAL ( name )		400849	2					
ANR	401667	CallExpression	ZSTR_VAL ( name )		400849	0					
ANR	401668	Callee	ZSTR_VAL		400849	0					
ANR	401669	Identifier	ZSTR_VAL		400849	0					
ANR	401670	ArgumentList	name		400849	1					
ANR	401671	Argument	name		400849	0					
ANR	401672	Identifier	name		400849	0					
ANR	401673	Label	case BP_VAR_W :	42827:5:1357411:1357424	400849	8	True				
ANR	401674	Identifier	BP_VAR_W		400849	0					
ANR	401675	ExpressionStatement	ZVAL_NULL ( retval )	42828:6:1357432:1357449	400849	9	True				
ANR	401676	CallExpression	ZVAL_NULL ( retval )		400849	0					
ANR	401677	Callee	ZVAL_NULL		400849	0					
ANR	401678	Identifier	ZVAL_NULL		400849	0					
ANR	401679	ArgumentList	retval		400849	1					
ANR	401680	Argument	retval		400849	0					
ANR	401681	Identifier	retval		400849	0					
ANR	401682	BreakStatement	break ;	42829:6:1357457:1357462	400849	10	True				
ANR	401683	Statement	EMPTY_SWITCH_DEFAULT_CASE	42830:5:1357469:1357493	400849	11	True				
ANR	401684	Statement	(	42830:30:1357494:1357494	400849	12	True				
ANR	401685	Statement	)	42830:31:1357495:1357495	400849	13	True				
ANR	401686	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC )		400849	3					
ANR	401687	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC	42834:6:1357518:1357585	400849	0	True				
ANR	401688	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_STATIC		400849	0		==			
ANR	401689	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		400849	0		&			
ANR	401690	PtrMemberAccess	opline -> extended_value		400849	0					
ANR	401691	Identifier	opline		400849	0					
ANR	401692	Identifier	extended_value		400849	1					
ANR	401693	Identifier	ZEND_FETCH_TYPE_MASK		400849	1					
ANR	401694	Identifier	ZEND_FETCH_STATIC		400849	1					
ANR	401695	CompoundStatement		121:76:4128:4128	400849	1					
ANR	401696	IfStatement	if ( Z_CONSTANT_P ( retval ) )		400849	0					
ANR	401697	Condition	Z_CONSTANT_P ( retval )	42835:7:1357597:1357616	400849	0	True				
ANR	401698	CallExpression	Z_CONSTANT_P ( retval )		400849	0					
ANR	401699	Callee	Z_CONSTANT_P		400849	0					
ANR	401700	Identifier	Z_CONSTANT_P		400849	0					
ANR	401701	ArgumentList	retval		400849	1					
ANR	401702	Argument	retval		400849	0					
ANR	401703	Identifier	retval		400849	0					
ANR	401704	CompoundStatement		122:29:4159:4159	400849	1					
ANR	401705	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS ) )"		400849	0					
ANR	401706	Condition	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"	42836:8:1357629:1357691	400849	0	True				
ANR	401707	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS )"		400849	0					
ANR	401708	Callee	UNEXPECTED		400849	0					
ANR	401709	Identifier	UNEXPECTED		400849	0					
ANR	401710	ArgumentList	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		400849	1					
ANR	401711	Argument	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		400849	0					
ANR	401712	EqualityExpression	"zval_update_constant_ex ( retval , 1 , NULL ) != SUCCESS"		400849	0		!=			
ANR	401713	CallExpression	"zval_update_constant_ex ( retval , 1 , NULL )"		400849	0					
ANR	401714	Callee	zval_update_constant_ex		400849	0					
ANR	401715	Identifier	zval_update_constant_ex		400849	0					
ANR	401716	ArgumentList	retval		400849	1					
ANR	401717	Argument	retval		400849	0					
ANR	401718	Identifier	retval		400849	0					
ANR	401719	Argument	1		400849	1					
ANR	401720	PrimaryExpression	1		400849	0					
ANR	401721	Argument	NULL		400849	2					
ANR	401722	Identifier	NULL		400849	0					
ANR	401723	Identifier	SUCCESS		400849	1					
ANR	401724	CompoundStatement		123:73:4234:4234	400849	1					
ANR	401725	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42837:5:1357701:1357729	400849	0	True				
ANR	401726	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		400849	0					
ANR	401727	Callee	zval_ptr_dtor_nogc		400849	0					
ANR	401728	Identifier	zval_ptr_dtor_nogc		400849	0					
ANR	401729	ArgumentList	free_op1		400849	1					
ANR	401730	Argument	free_op1		400849	0					
ANR	401731	Identifier	free_op1		400849	0					
ANR	401732	ExpressionStatement	HANDLE_EXCEPTION ( )	42838:5:1357736:1357754	400849	1	True				
ANR	401733	CallExpression	HANDLE_EXCEPTION ( )		400849	0					
ANR	401734	Callee	HANDLE_EXCEPTION		400849	0					
ANR	401735	Identifier	HANDLE_EXCEPTION		400849	0					
ANR	401736	ArgumentList			400849	1					
ANR	401737	ElseStatement	else		400849	0					
ANR	401738	IfStatement	if ( ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK )		400849	0					
ANR	401739	Condition	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK	42841:13:1357780:1357852	400849	0	True				
ANR	401740	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) != ZEND_FETCH_GLOBAL_LOCK		400849	0		!=			
ANR	401741	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		400849	0		&			
ANR	401742	PtrMemberAccess	opline -> extended_value		400849	0					
ANR	401743	Identifier	opline		400849	0					
ANR	401744	Identifier	extended_value		400849	1					
ANR	401745	Identifier	ZEND_FETCH_TYPE_MASK		400849	1					
ANR	401746	Identifier	ZEND_FETCH_GLOBAL_LOCK		400849	1					
ANR	401747	CompoundStatement		128:88:4395:4395	400849	1					
ANR	401748	ExpressionStatement	zval_ptr_dtor_nogc ( free_op1 )	42842:3:1357860:1357888	400849	0	True				
ANR	401749	CallExpression	zval_ptr_dtor_nogc ( free_op1 )		400849	0					
ANR	401750	Callee	zval_ptr_dtor_nogc		400849	0					
ANR	401751	Identifier	zval_ptr_dtor_nogc		400849	0					
ANR	401752	ArgumentList	free_op1		400849	1					
ANR	401753	Argument	free_op1		400849	0					
ANR	401754	Identifier	free_op1		400849	0					
ANR	401755	IfStatement	if ( ( IS_TMP_VAR | IS_VAR ) != IS_CONST )		400849	9					
ANR	401756	Condition	( IS_TMP_VAR | IS_VAR ) != IS_CONST	42846:5:1357903:1357933	400849	0	True				
ANR	401757	EqualityExpression	( IS_TMP_VAR | IS_VAR ) != IS_CONST		400849	0		!=			
ANR	401758	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		400849	0		|			
ANR	401759	Identifier	IS_TMP_VAR		400849	0					
ANR	401760	Identifier	IS_VAR		400849	1					
ANR	401761	Identifier	IS_CONST		400849	1					
ANR	401762	CompoundStatement		133:38:4476:4476	400849	1					
ANR	401763	ExpressionStatement	zend_string_release ( name )	42847:2:1357940:1357965	400849	0	True				
ANR	401764	CallExpression	zend_string_release ( name )		400849	0					
ANR	401765	Callee	zend_string_release		400849	0					
ANR	401766	Identifier	zend_string_release		400849	0					
ANR	401767	ArgumentList	name		400849	1					
ANR	401768	Argument	name		400849	0					
ANR	401769	Identifier	name		400849	0					
ANR	401770	Label	fetch_var_return :	42850:0:1357971:1357987	400849	10	True				
ANR	401771	Identifier	fetch_var_return		400849	0					
ANR	401772	ExpressionStatement	ZEND_ASSERT ( retval != NULL )	42851:1:1357990:1358017	400849	11	True				
ANR	401773	CallExpression	ZEND_ASSERT ( retval != NULL )		400849	0					
ANR	401774	Callee	ZEND_ASSERT		400849	0					
ANR	401775	Identifier	ZEND_ASSERT		400849	0					
ANR	401776	ArgumentList	retval != NULL		400849	1					
ANR	401777	Argument	retval != NULL		400849	0					
ANR	401778	EqualityExpression	retval != NULL		400849	0		!=			
ANR	401779	Identifier	retval		400849	0					
ANR	401780	Identifier	NULL		400849	1					
ANR	401781	IfStatement	if ( type == BP_VAR_R || type == BP_VAR_IS )		400849	12					
ANR	401782	Condition	type == BP_VAR_R || type == BP_VAR_IS	42852:5:1358024:1358060	400849	0	True				
ANR	401783	OrExpression	type == BP_VAR_R || type == BP_VAR_IS		400849	0		||			
ANR	401784	EqualityExpression	type == BP_VAR_R		400849	0		==			
ANR	401785	Identifier	type		400849	0					
ANR	401786	Identifier	BP_VAR_R		400849	1					
ANR	401787	EqualityExpression	type == BP_VAR_IS		400849	1		==			
ANR	401788	Identifier	type		400849	0					
ANR	401789	Identifier	BP_VAR_IS		400849	1					
ANR	401790	CompoundStatement		139:44:4603:4603	400849	1					
ANR	401791	IfStatement	if ( Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1 )		400849	0					
ANR	401792	Condition	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1	42853:30:1358095:1358140	400849	0	True				
ANR	401793	AndExpression	Z_ISREF_P ( retval ) && Z_REFCOUNT_P ( retval ) == 1		400849	0		&&			
ANR	401794	CallExpression	Z_ISREF_P ( retval )		400849	0					
ANR	401795	Callee	Z_ISREF_P		400849	0					
ANR	401796	Identifier	Z_ISREF_P		400849	0					
ANR	401797	ArgumentList	retval		400849	1					
ANR	401798	Argument	retval		400849	0					
ANR	401799	Identifier	retval		400849	0					
ANR	401800	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		400849	1		==			
ANR	401801	CallExpression	Z_REFCOUNT_P ( retval )		400849	0					
ANR	401802	Callee	Z_REFCOUNT_P		400849	0					
ANR	401803	Identifier	Z_REFCOUNT_P		400849	0					
ANR	401804	ArgumentList	retval		400849	1					
ANR	401805	Argument	retval		400849	0					
ANR	401806	Identifier	retval		400849	0					
ANR	401807	PrimaryExpression	1		400849	1					
ANR	401808	CompoundStatement		140:78:4683:4683	400849	1					
ANR	401809	ExpressionStatement	ZVAL_UNREF ( retval )	42854:3:1358148:1358166	400849	0	True				
ANR	401810	CallExpression	ZVAL_UNREF ( retval )		400849	0					
ANR	401811	Callee	ZVAL_UNREF		400849	0					
ANR	401812	Identifier	ZVAL_UNREF		400849	0					
ANR	401813	ArgumentList	retval		400849	1					
ANR	401814	Argument	retval		400849	0					
ANR	401815	Identifier	retval		400849	0					
ANR	401816	ExpressionStatement	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"	42856:2:1358174:1358219	400849	1	True				
ANR	401817	CallExpression	"ZVAL_COPY ( EX_VAR ( opline -> result . var ) , retval )"		400849	0					
ANR	401818	Callee	ZVAL_COPY		400849	0					
ANR	401819	Identifier	ZVAL_COPY		400849	0					
ANR	401820	ArgumentList	EX_VAR ( opline -> result . var )		400849	1					
ANR	401821	Argument	EX_VAR ( opline -> result . var )		400849	0					
ANR	401822	CallExpression	EX_VAR ( opline -> result . var )		400849	0					
ANR	401823	Callee	EX_VAR		400849	0					
ANR	401824	Identifier	EX_VAR		400849	0					
ANR	401825	ArgumentList	opline -> result . var		400849	1					
ANR	401826	Argument	opline -> result . var		400849	0					
ANR	401827	MemberAccess	opline -> result . var		400849	0					
ANR	401828	PtrMemberAccess	opline -> result		400849	0					
ANR	401829	Identifier	opline		400849	0					
ANR	401830	Identifier	result		400849	1					
ANR	401831	Identifier	var		400849	1					
ANR	401832	Argument	retval		400849	1					
ANR	401833	Identifier	retval		400849	0					
ANR	401834	ElseStatement	else		400849	0					
ANR	401835	CompoundStatement		144:8:4769:4769	400849	0					
ANR	401836	ExpressionStatement	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"	42858:2:1358233:1358282	400849	0	True				
ANR	401837	CallExpression	"ZVAL_INDIRECT ( EX_VAR ( opline -> result . var ) , retval )"		400849	0					
ANR	401838	Callee	ZVAL_INDIRECT		400849	0					
ANR	401839	Identifier	ZVAL_INDIRECT		400849	0					
ANR	401840	ArgumentList	EX_VAR ( opline -> result . var )		400849	1					
ANR	401841	Argument	EX_VAR ( opline -> result . var )		400849	0					
ANR	401842	CallExpression	EX_VAR ( opline -> result . var )		400849	0					
ANR	401843	Callee	EX_VAR		400849	0					
ANR	401844	Identifier	EX_VAR		400849	0					
ANR	401845	ArgumentList	opline -> result . var		400849	1					
ANR	401846	Argument	opline -> result . var		400849	0					
ANR	401847	MemberAccess	opline -> result . var		400849	0					
ANR	401848	PtrMemberAccess	opline -> result		400849	0					
ANR	401849	Identifier	opline		400849	0					
ANR	401850	Identifier	result		400849	1					
ANR	401851	Identifier	var		400849	1					
ANR	401852	Argument	retval		400849	1					
ANR	401853	Identifier	retval		400849	0					
ANR	401854	ExpressionStatement	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )	42860:1:1358288:1358325	400849	13	True				
ANR	401855	CallExpression	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION ( )		400849	0					
ANR	401856	Callee	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		400849	0					
ANR	401857	Identifier	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION		400849	0					
ANR	401858	ArgumentList			400849	1					
ANR	401859	ReturnType	static ZEND_OPCODE_HANDLER_RET ZEND_FASTCALL		400849	1					
ANR	401860	Identifier	zend_fetch_var_address_helper_SPEC_TMPVAR_UNUSED		400849	2					
ANR	401861	ParameterList	int type ZEND_OPCODE_HANDLER_ARGS_DC		400849	3					
ANR	401862	Parameter	int type ZEND_OPCODE_HANDLER_ARGS_DC	42713:94:1353421:1353456	400849	0	True				
ANR	401863	ParameterType	int type		400849	0					
ANR	401864	Identifier	ZEND_OPCODE_HANDLER_ARGS_DC		400849	1					
ANR	401865	CFGEntryNode	ENTRY		400849		True				
ANR	401866	CFGExitNode	EXIT		400849		True				
ANR	401867	Symbol	ZEND_FETCH_CLASS_DEFAULT		400849						
ANR	401868	Symbol	exception		400849						
ANR	401869	Symbol	zend_get_target_symbol_table		400849						
ANR	401870	Symbol	opline -> op2 . var		400849						
ANR	401871	Symbol	IS_CV		400849						
ANR	401872	Symbol	Z_CONSTANT_P		400849						
ANR	401873	Symbol	* ce		400849						
ANR	401874	Symbol	type		400849						
ANR	401875	Symbol	Z_REFCOUNT_P		400849						
ANR	401876	Symbol	execute_data		400849						
ANR	401877	Symbol	opline -> extended_value		400849						
ANR	401878	Symbol	opline -> result		400849						
ANR	401879	Symbol	zend_std_get_static_property		400849						
ANR	401880	Symbol	zend_hash_find		400849						
ANR	401881	Symbol	opline		400849						
ANR	401882	Symbol	Z_CE_P		400849						
ANR	401883	Symbol	target_symbol_table		400849						
ANR	401884	Symbol	IS_STRING		400849						
ANR	401885	Symbol	ce -> name		400849						
ANR	401886	Symbol	zend_hash_update		400849						
ANR	401887	Symbol	BP_VAR_IS		400849						
ANR	401888	Symbol	IS_UNDEF		400849						
ANR	401889	Symbol	BP_VAR_R		400849						
ANR	401890	Symbol	& free_op1		400849						
ANR	401891	Symbol	IS_TMP_VAR		400849						
ANR	401892	Symbol	IS_CONST		400849						
ANR	401893	Symbol	EG		400849						
ANR	401894	Symbol	NULL		400849						
ANR	401895	Symbol	EX_CONSTANT		400849						
ANR	401896	Symbol	Z_CACHE_SLOT_P		400849						
ANR	401897	Symbol	CE_STATIC_MEMBERS		400849						
ANR	401898	Symbol	E_NOTICE		400849						
ANR	401899	Symbol	varname		400849						
ANR	401900	Symbol	retval		400849						
ANR	401901	Symbol	name		400849						
ANR	401902	Symbol	EX_VAR		400849						
ANR	401903	Symbol	zend_fetch_class_by_name		400849						
ANR	401904	Symbol	Z_STR_P		400849						
ANR	401905	Symbol	IS_VAR		400849						
ANR	401906	Symbol	Z_ISREF_P		400849						
ANR	401907	Symbol	IS_INDIRECT		400849						
ANR	401908	Symbol	opline -> op1		400849						
ANR	401909	Symbol	CACHED_PTR		400849						
ANR	401910	Symbol	opline -> op2		400849						
ANR	401911	Symbol	Z_INDIRECT_P		400849						
ANR	401912	Symbol	& EG		400849						
ANR	401913	Symbol	free_op1		400849						
ANR	401914	Symbol	UNEXPECTED		400849						
ANR	401915	Symbol	ZEND_FETCH_CLASS_EXCEPTION		400849						
ANR	401916	Symbol	ZEND_FETCH_STATIC		400849						
ANR	401917	Symbol	opline -> op1 . var		400849						
ANR	401918	Symbol	uninitialized_zval		400849						
ANR	401919	Symbol	ce		400849						
ANR	401920	Symbol	SUCCESS		400849						
ANR	401921	Symbol	zval_get_string		400849						
ANR	401922	Symbol	ZEND_FETCH_TYPE_MASK		400849						
ANR	401923	Symbol	zend_hash_add_new		400849						
ANR	401924	Symbol	Z_TYPE_P		400849						
ANR	401925	Symbol	CACHED_POLYMORPHIC_PTR		400849						
ANR	401926	Symbol	ZSTR_VAL		400849						
ANR	401927	Symbol	* opline		400849						
ANR	401928	Symbol	ZEND_FETCH_GLOBAL_LOCK		400849						
ANR	401929	Symbol	_get_zval_ptr_var		400849						
ANR	401930	Symbol	zval_update_constant_ex		400849						
ANR	401931	Symbol	EXPECTED		400849						
ANR	401932	Symbol	ZEND_OPCODE_HANDLER_ARGS_DC		400849						
ANR	401933	Symbol	opline -> result . var		400849						
ANR	401934	Symbol	IS_UNUSED		400849						
ANR	401935	DeclStmt									
ANR	401936	Decl							USE_OPLINE zval	USE_OPLINE zval	tmp
ANR	401937	Decl							USE_OPLINE zval	USE_OPLINE zval *	varname
ANR	401938	DeclStmt									
ANR	401939	Decl							HashTable	HashTable *	target_symbol_table
ANR	401940	DeclStmt									
ANR	401941	Decl							zend_free_op	zend_free_op	free_op1
ANR	401942	DeclStmt									
ANR	401943	Decl							zval	zval *	var
ANR	401944	DeclStmt									
ANR	401945	Decl							zend_refcounted	zend_refcounted *	garbage
ANR	401946	DeclStmt									
ANR	401947	Decl							zval	zval *	z
ANR	401948	DeclStmt									
ANR	401949	Decl							zend_class_entry	zend_class_entry *	ce
ANR	401950	DeclStmt									
ANR	401951	Decl							USE_OPLINE zval	USE_OPLINE zval *	value
ANR	401952	DeclStmt									
ANR	401953	Decl							int	int	result
ANR	401954	DeclStmt									
ANR	401955	Decl							zend_free_op	zend_free_op	free_op1
ANR	401956	DeclStmt									
ANR	401957	Decl							zval	zval	tmp
ANR	401958	Decl							zval	zval *	varname
ANR	401959	DeclStmt									
ANR	401960	Decl							zend_class_entry	zend_class_entry *	ce
ANR	401961	DeclStmt									
ANR	401962	Decl							HashTable	HashTable *	target_symbol_table
ANR	401963	DeclStmt									
ANR	401964	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	401965	DeclStmt									
ANR	401966	Decl							zval	zval *	op1
ANR	401967	Decl							zval	zval *	op2
ANR	401968	Decl							zval	zval *	result
ANR	401969	DeclStmt									
ANR	401970	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	401971	DeclStmt									
ANR	401972	Decl							zval	zval *	op1
ANR	401973	Decl							zval	zval *	op2
ANR	401974	Decl							zval	zval *	result
ANR	401975	DeclStmt									
ANR	401976	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	401977	DeclStmt									
ANR	401978	Decl							zval	zval *	op1
ANR	401979	Decl							zval	zval *	op2
ANR	401980	Decl							zval	zval *	result
ANR	401981	DeclStmt									
ANR	401982	Decl							zend_long	zend_long	overflow
ANR	401983	DeclStmt									
ANR	401984	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	401985	DeclStmt									
ANR	401986	Decl							zval	zval *	op1
ANR	401987	Decl							zval	zval *	op2
ANR	401988	DeclStmt									
ANR	401989	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	401990	DeclStmt									
ANR	401991	Decl							zval	zval *	op1
ANR	401992	Decl							zval	zval *	op2
ANR	401993	Decl							zval	zval *	result
ANR	401994	DeclStmt									
ANR	401995	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	401996	DeclStmt									
ANR	401997	Decl							zval	zval *	op1
ANR	401998	Decl							zval	zval *	op2
ANR	401999	DeclStmt									
ANR	402000	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402001	DeclStmt									
ANR	402002	Decl							zval	zval *	op1
ANR	402003	Decl							zval	zval *	op2
ANR	402004	DeclStmt									
ANR	402005	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402006	DeclStmt									
ANR	402007	Decl							zval	zval *	op1
ANR	402008	Decl							zval	zval *	op2
ANR	402009	DeclStmt									
ANR	402010	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402011	DeclStmt									
ANR	402012	Decl							zval	zval *	op1
ANR	402013	Decl							zval	zval *	op2
ANR	402014	DeclStmt									
ANR	402015	Decl							zend_string	zend_string *	op1_str
ANR	402016	DeclStmt									
ANR	402017	Decl							zend_string	zend_string *	op2_str
ANR	402018	DeclStmt									
ANR	402019	Decl							zend_string	zend_string *	str
ANR	402020	DeclStmt									
ANR	402021	Decl							size_t	size_t	len
ANR	402022	DeclStmt									
ANR	402023	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402024	DeclStmt									
ANR	402025	Decl							zval	zval *	op1
ANR	402026	Decl							zval	zval *	op2
ANR	402027	Decl							zval	zval *	result
ANR	402028	DeclStmt									
ANR	402029	Decl							int	int	result
ANR	402030	DeclStmt									
ANR	402031	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402032	DeclStmt									
ANR	402033	Decl							zval	zval *	op1
ANR	402034	Decl							zval	zval *	op2
ANR	402035	Decl							zval	zval *	result
ANR	402036	DeclStmt									
ANR	402037	Decl							int	int	result
ANR	402038	DeclStmt									
ANR	402039	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402040	DeclStmt									
ANR	402041	Decl							zval	zval *	op1
ANR	402042	Decl							zval	zval *	op2
ANR	402043	Decl							zval	zval *	result
ANR	402044	DeclStmt									
ANR	402045	Decl							int	int	result
ANR	402046	DeclStmt									
ANR	402047	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402048	DeclStmt									
ANR	402049	Decl							zval	zval *	op1
ANR	402050	Decl							zval	zval *	op2
ANR	402051	Decl							zval	zval *	result
ANR	402052	DeclStmt									
ANR	402053	Decl							int	int	result
ANR	402054	DeclStmt									
ANR	402055	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402056	DeclStmt									
ANR	402057	Decl							zval	zval *	op1
ANR	402058	Decl							zval	zval *	op2
ANR	402059	DeclStmt									
ANR	402060	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402061	DeclStmt									
ANR	402062	Decl							zval	zval *	op1
ANR	402063	Decl							zval	zval *	op2
ANR	402064	DeclStmt									
ANR	402065	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402066	DeclStmt									
ANR	402067	Decl							zval	zval *	op1
ANR	402068	Decl							zval	zval *	op2
ANR	402069	DeclStmt									
ANR	402070	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402071	DeclStmt									
ANR	402072	Decl							zval	zval *	op1
ANR	402073	Decl							zval	zval *	op2
ANR	402074	DeclStmt									
ANR	402075	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402076	DeclStmt									
ANR	402077	Decl							zval	zval *	op1
ANR	402078	Decl							zval	zval *	op2
ANR	402079	DeclStmt									
ANR	402080	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402081	DeclStmt									
ANR	402082	Decl							zval	zval *	container
ANR	402083	DeclStmt									
ANR	402084	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402085	DeclStmt									
ANR	402086	Decl							zval	zval *	container
ANR	402087	DeclStmt									
ANR	402088	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402089	DeclStmt									
ANR	402090	Decl							zval	zval *	container
ANR	402091	DeclStmt									
ANR	402092	Decl							zval	zval *	offset
ANR	402093	DeclStmt									
ANR	402094	Decl							zend_object	zend_object *	zobj
ANR	402095	DeclStmt									
ANR	402096	Decl							zval	zval *	retval
ANR	402097	DeclStmt									
ANR	402098	Decl							uint32_t	uint32_t	prop_offset
ANR	402099	DeclStmt									
ANR	402100	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402101	DeclStmt									
ANR	402102	Decl							zval	zval *	op1
ANR	402103	Decl							zval	zval *	op2
ANR	402104	DeclStmt									
ANR	402105	Decl							zend_string	zend_string *	op1_str
ANR	402106	Decl							zend_string	zend_string *	op2_str
ANR	402107	Decl							zend_string	zend_string *	str
ANR	402108	DeclStmt									
ANR	402109	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	402110	DeclStmt									
ANR	402111	Decl							zend_free_op	zend_free_op	free_op1
ANR	402112	DeclStmt									
ANR	402113	Decl							zval	zval *	object
ANR	402114	DeclStmt									
ANR	402115	Decl							zend_function	zend_function *	fbc
ANR	402116	DeclStmt									
ANR	402117	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	402118	DeclStmt									
ANR	402119	Decl							zend_object	zend_object *	obj
ANR	402120	DeclStmt									
ANR	402121	Decl							zend_execute_data	zend_execute_data *	call
ANR	402122	DeclStmt									
ANR	402123	Decl							uint32_t	uint32_t	call_info
ANR	402124	DeclStmt									
ANR	402125	Decl							zend_object	zend_object *	orig_obj
ANR	402126	DeclStmt									
ANR	402127	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402128	DeclStmt									
ANR	402129	Decl							zval	zval *	op1
ANR	402130	Decl							zval	zval *	op2
ANR	402131	Decl							zval	zval *	result
ANR	402132	DeclStmt									
ANR	402133	Decl							int	int	result
ANR	402134	DeclStmt									
ANR	402135	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402136	DeclStmt									
ANR	402137	Decl							zval	zval *	container
ANR	402138	DeclStmt									
ANR	402139	Decl							int	int	result
ANR	402140	DeclStmt									
ANR	402141	Decl							zend_ulong	zend_ulong	hval
ANR	402142	DeclStmt									
ANR	402143	Decl							zval	zval *	offset
ANR	402144	DeclStmt									
ANR	402145	Decl							HashTable	HashTable *	ht
ANR	402146	DeclStmt									
ANR	402147	Decl							zval	zval *	value
ANR	402148	DeclStmt									
ANR	402149	Decl							zend_string	zend_string *	str
ANR	402150	DeclStmt									
ANR	402151	Decl							zend_long	zend_long	lval
ANR	402152	DeclStmt									
ANR	402153	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402154	DeclStmt									
ANR	402155	Decl							zval	zval *	container
ANR	402156	DeclStmt									
ANR	402157	Decl							int	int	result
ANR	402158	DeclStmt									
ANR	402159	Decl							zval	zval *	offset
ANR	402160	DeclStmt									
ANR	402161	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402162	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402163	DeclStmt									
ANR	402164	Decl							zval	zval *	op1
ANR	402165	Decl							zval	zval *	op2
ANR	402166	Decl							zval	zval *	result
ANR	402167	DeclStmt									
ANR	402168	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402169	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402170	DeclStmt									
ANR	402171	Decl							zval	zval *	op1
ANR	402172	Decl							zval	zval *	op2
ANR	402173	Decl							zval	zval *	result
ANR	402174	DeclStmt									
ANR	402175	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402176	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402177	DeclStmt									
ANR	402178	Decl							zval	zval *	op1
ANR	402179	Decl							zval	zval *	op2
ANR	402180	Decl							zval	zval *	result
ANR	402181	DeclStmt									
ANR	402182	Decl							zend_long	zend_long	overflow
ANR	402183	DeclStmt									
ANR	402184	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402185	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402186	DeclStmt									
ANR	402187	Decl							zval	zval *	op1
ANR	402188	Decl							zval	zval *	op2
ANR	402189	DeclStmt									
ANR	402190	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402191	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402192	DeclStmt									
ANR	402193	Decl							zval	zval *	op1
ANR	402194	Decl							zval	zval *	op2
ANR	402195	Decl							zval	zval *	result
ANR	402196	DeclStmt									
ANR	402197	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402198	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402199	DeclStmt									
ANR	402200	Decl							zval	zval *	op1
ANR	402201	Decl							zval	zval *	op2
ANR	402202	DeclStmt									
ANR	402203	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402204	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402205	DeclStmt									
ANR	402206	Decl							zval	zval *	op1
ANR	402207	Decl							zval	zval *	op2
ANR	402208	DeclStmt									
ANR	402209	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402210	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402211	DeclStmt									
ANR	402212	Decl							zval	zval *	op1
ANR	402213	Decl							zval	zval *	op2
ANR	402214	DeclStmt									
ANR	402215	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402216	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402217	DeclStmt									
ANR	402218	Decl							zval	zval *	op1
ANR	402219	Decl							zval	zval *	op2
ANR	402220	DeclStmt									
ANR	402221	Decl							zend_string	zend_string *	op1_str
ANR	402222	DeclStmt									
ANR	402223	Decl							zend_string	zend_string *	op2_str
ANR	402224	DeclStmt									
ANR	402225	Decl							zend_string	zend_string *	str
ANR	402226	DeclStmt									
ANR	402227	Decl							size_t	size_t	len
ANR	402228	DeclStmt									
ANR	402229	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402230	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402231	DeclStmt									
ANR	402232	Decl							zval	zval *	op1
ANR	402233	Decl							zval	zval *	op2
ANR	402234	Decl							zval	zval *	result
ANR	402235	DeclStmt									
ANR	402236	Decl							int	int	result
ANR	402237	DeclStmt									
ANR	402238	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402239	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402240	DeclStmt									
ANR	402241	Decl							zval	zval *	op1
ANR	402242	Decl							zval	zval *	op2
ANR	402243	Decl							zval	zval *	result
ANR	402244	DeclStmt									
ANR	402245	Decl							int	int	result
ANR	402246	DeclStmt									
ANR	402247	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402248	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402249	DeclStmt									
ANR	402250	Decl							zval	zval *	op1
ANR	402251	Decl							zval	zval *	op2
ANR	402252	Decl							zval	zval *	result
ANR	402253	DeclStmt									
ANR	402254	Decl							int	int	result
ANR	402255	DeclStmt									
ANR	402256	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402257	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402258	DeclStmt									
ANR	402259	Decl							zval	zval *	op1
ANR	402260	Decl							zval	zval *	op2
ANR	402261	Decl							zval	zval *	result
ANR	402262	DeclStmt									
ANR	402263	Decl							int	int	result
ANR	402264	DeclStmt									
ANR	402265	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402266	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402267	DeclStmt									
ANR	402268	Decl							zval	zval *	op1
ANR	402269	Decl							zval	zval *	op2
ANR	402270	DeclStmt									
ANR	402271	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402272	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402273	DeclStmt									
ANR	402274	Decl							zval	zval *	op1
ANR	402275	Decl							zval	zval *	op2
ANR	402276	DeclStmt									
ANR	402277	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402278	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402279	DeclStmt									
ANR	402280	Decl							zval	zval *	op1
ANR	402281	Decl							zval	zval *	op2
ANR	402282	DeclStmt									
ANR	402283	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402284	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402285	DeclStmt									
ANR	402286	Decl							zval	zval *	op1
ANR	402287	Decl							zval	zval *	op2
ANR	402288	DeclStmt									
ANR	402289	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402290	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402291	DeclStmt									
ANR	402292	Decl							zval	zval *	op1
ANR	402293	Decl							zval	zval *	op2
ANR	402294	DeclStmt									
ANR	402295	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402296	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402297	DeclStmt									
ANR	402298	Decl							zval	zval *	container
ANR	402299	DeclStmt									
ANR	402300	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402301	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402302	DeclStmt									
ANR	402303	Decl							zval	zval *	container
ANR	402304	DeclStmt									
ANR	402305	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402306	DeclStmt									
ANR	402307	Decl							zval	zval *	container
ANR	402308	DeclStmt									
ANR	402309	Decl							zend_free_op	zend_free_op	free_op2
ANR	402310	DeclStmt									
ANR	402311	Decl							zval	zval *	offset
ANR	402312	DeclStmt									
ANR	402313	Decl							zend_object	zend_object *	zobj
ANR	402314	DeclStmt									
ANR	402315	Decl							zval	zval *	retval
ANR	402316	DeclStmt									
ANR	402317	Decl							uint32_t	uint32_t	prop_offset
ANR	402318	DeclStmt									
ANR	402319	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402320	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402321	DeclStmt									
ANR	402322	Decl							zval	zval *	op1
ANR	402323	Decl							zval	zval *	op2
ANR	402324	DeclStmt									
ANR	402325	Decl							zend_string	zend_string *	op1_str
ANR	402326	Decl							zend_string	zend_string *	op2_str
ANR	402327	Decl							zend_string	zend_string *	str
ANR	402328	DeclStmt									
ANR	402329	Decl							USE_OPLINE zval	USE_OPLINE zval *	function_name
ANR	402330	DeclStmt									
ANR	402331	Decl							zend_free_op	zend_free_op	free_op1
ANR	402332	Decl							zend_free_op	zend_free_op	free_op2
ANR	402333	DeclStmt									
ANR	402334	Decl							zval	zval *	object
ANR	402335	DeclStmt									
ANR	402336	Decl							zend_function	zend_function *	fbc
ANR	402337	DeclStmt									
ANR	402338	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	402339	DeclStmt									
ANR	402340	Decl							zend_object	zend_object *	obj
ANR	402341	DeclStmt									
ANR	402342	Decl							zend_execute_data	zend_execute_data *	call
ANR	402343	DeclStmt									
ANR	402344	Decl							uint32_t	uint32_t	call_info
ANR	402345	DeclStmt									
ANR	402346	Decl							zend_object	zend_object *	orig_obj
ANR	402347	DeclStmt									
ANR	402348	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402349	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402350	DeclStmt									
ANR	402351	Decl							zval	zval *	op1
ANR	402352	Decl							zval	zval *	op2
ANR	402353	Decl							zval	zval *	result
ANR	402354	DeclStmt									
ANR	402355	Decl							int	int	result
ANR	402356	DeclStmt									
ANR	402357	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402358	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402359	DeclStmt									
ANR	402360	Decl							zval	zval *	container
ANR	402361	DeclStmt									
ANR	402362	Decl							int	int	result
ANR	402363	DeclStmt									
ANR	402364	Decl							zend_ulong	zend_ulong	hval
ANR	402365	DeclStmt									
ANR	402366	Decl							zval	zval *	offset
ANR	402367	DeclStmt									
ANR	402368	Decl							HashTable	HashTable *	ht
ANR	402369	DeclStmt									
ANR	402370	Decl							zval	zval *	value
ANR	402371	DeclStmt									
ANR	402372	Decl							zend_string	zend_string *	str
ANR	402373	DeclStmt									
ANR	402374	Decl							zend_long	zend_long	lval
ANR	402375	DeclStmt									
ANR	402376	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op1
ANR	402377	Decl							USE_OPLINE zend_free_op	USE_OPLINE zend_free_op	free_op2
ANR	402378	DeclStmt									
ANR	402379	Decl							zval	zval *	container
ANR	402380	DeclStmt									
ANR	402381	Decl							int	int	result
ANR	402382	DeclStmt									
ANR	402383	Decl							zval	zval *	offset
ANR	402384	DeclStmt									
ANR	402385	Decl							USE_OPLINE	USE_OPLINE	zend_error_noreturn
ANR	402386	Function	zend_init_opcodes_handlers	45366:0:1439401:1580819							
ANR	402387	FunctionDef	zend_init_opcodes_handlers ()		402386	0					
ANR	402388	CompoundStatement		45367:0:1439439:1580819	402386	0					
ANR	402389	Statement	static	45368:2:1439443:1439448	402386	0	True				
ANR	402390	IdentifierDeclStatement	"const void * labels [ ] = {} ;"	45368:9:1439450:1580784	402386	1	True				
ANR	402391	IdentifierDecl	"* labels [ ] = {}"		402386	0					
ANR	402392	IdentifierDeclType	const void * [ ]		402386	0					
ANR	402393	Identifier	labels		402386	1					
ANR	402394	AssignmentExpression	"* labels [ ] = {}"		402386	2		=			
ANR	402395	Identifier	labels		402386	0					
ANR	402396	InitializerList	ZEND_NOP_SPEC_HANDLER		402386	1					
ANR	402397	Identifier	ZEND_NOP_SPEC_HANDLER		402386	0					
ANR	402398	Identifier	ZEND_NOP_SPEC_HANDLER		402386	1					
ANR	402399	Identifier	ZEND_NOP_SPEC_HANDLER		402386	2					
ANR	402400	Identifier	ZEND_NOP_SPEC_HANDLER		402386	3					
ANR	402401	Identifier	ZEND_NOP_SPEC_HANDLER		402386	4					
ANR	402402	Identifier	ZEND_NOP_SPEC_HANDLER		402386	5					
ANR	402403	Identifier	ZEND_NOP_SPEC_HANDLER		402386	6					
ANR	402404	Identifier	ZEND_NOP_SPEC_HANDLER		402386	7					
ANR	402405	Identifier	ZEND_NOP_SPEC_HANDLER		402386	8					
ANR	402406	Identifier	ZEND_NOP_SPEC_HANDLER		402386	9					
ANR	402407	Identifier	ZEND_NOP_SPEC_HANDLER		402386	10					
ANR	402408	Identifier	ZEND_NOP_SPEC_HANDLER		402386	11					
ANR	402409	Identifier	ZEND_NOP_SPEC_HANDLER		402386	12					
ANR	402410	Identifier	ZEND_NOP_SPEC_HANDLER		402386	13					
ANR	402411	Identifier	ZEND_NOP_SPEC_HANDLER		402386	14					
ANR	402412	Identifier	ZEND_NOP_SPEC_HANDLER		402386	15					
ANR	402413	Identifier	ZEND_NOP_SPEC_HANDLER		402386	16					
ANR	402414	Identifier	ZEND_NOP_SPEC_HANDLER		402386	17					
ANR	402415	Identifier	ZEND_NOP_SPEC_HANDLER		402386	18					
ANR	402416	Identifier	ZEND_NOP_SPEC_HANDLER		402386	19					
ANR	402417	Identifier	ZEND_NOP_SPEC_HANDLER		402386	20					
ANR	402418	Identifier	ZEND_NOP_SPEC_HANDLER		402386	21					
ANR	402419	Identifier	ZEND_NOP_SPEC_HANDLER		402386	22					
ANR	402420	Identifier	ZEND_NOP_SPEC_HANDLER		402386	23					
ANR	402421	Identifier	ZEND_NOP_SPEC_HANDLER		402386	24					
ANR	402422	Identifier	ZEND_ADD_SPEC_CONST_CONST_HANDLER		402386	25					
ANR	402423	Identifier	ZEND_ADD_SPEC_CONST_TMPVAR_HANDLER		402386	26					
ANR	402424	Identifier	ZEND_ADD_SPEC_CONST_TMPVAR_HANDLER		402386	27					
ANR	402425	Identifier	ZEND_NULL_HANDLER		402386	28					
ANR	402426	Identifier	ZEND_ADD_SPEC_CONST_CV_HANDLER		402386	29					
ANR	402427	Identifier	ZEND_ADD_SPEC_TMPVAR_CONST_HANDLER		402386	30					
ANR	402428	Identifier	ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	31					
ANR	402429	Identifier	ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	32					
ANR	402430	Identifier	ZEND_NULL_HANDLER		402386	33					
ANR	402431	Identifier	ZEND_ADD_SPEC_TMPVAR_CV_HANDLER		402386	34					
ANR	402432	Identifier	ZEND_ADD_SPEC_TMPVAR_CONST_HANDLER		402386	35					
ANR	402433	Identifier	ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	36					
ANR	402434	Identifier	ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	37					
ANR	402435	Identifier	ZEND_NULL_HANDLER		402386	38					
ANR	402436	Identifier	ZEND_ADD_SPEC_TMPVAR_CV_HANDLER		402386	39					
ANR	402437	Identifier	ZEND_NULL_HANDLER		402386	40					
ANR	402438	Identifier	ZEND_NULL_HANDLER		402386	41					
ANR	402439	Identifier	ZEND_NULL_HANDLER		402386	42					
ANR	402440	Identifier	ZEND_NULL_HANDLER		402386	43					
ANR	402441	Identifier	ZEND_NULL_HANDLER		402386	44					
ANR	402442	Identifier	ZEND_ADD_SPEC_CV_CONST_HANDLER		402386	45					
ANR	402443	Identifier	ZEND_ADD_SPEC_CV_TMPVAR_HANDLER		402386	46					
ANR	402444	Identifier	ZEND_ADD_SPEC_CV_TMPVAR_HANDLER		402386	47					
ANR	402445	Identifier	ZEND_NULL_HANDLER		402386	48					
ANR	402446	Identifier	ZEND_ADD_SPEC_CV_CV_HANDLER		402386	49					
ANR	402447	Identifier	ZEND_SUB_SPEC_CONST_CONST_HANDLER		402386	50					
ANR	402448	Identifier	ZEND_SUB_SPEC_CONST_TMPVAR_HANDLER		402386	51					
ANR	402449	Identifier	ZEND_SUB_SPEC_CONST_TMPVAR_HANDLER		402386	52					
ANR	402450	Identifier	ZEND_NULL_HANDLER		402386	53					
ANR	402451	Identifier	ZEND_SUB_SPEC_CONST_CV_HANDLER		402386	54					
ANR	402452	Identifier	ZEND_SUB_SPEC_TMPVAR_CONST_HANDLER		402386	55					
ANR	402453	Identifier	ZEND_SUB_SPEC_TMPVAR_TMPVAR_HANDLER		402386	56					
ANR	402454	Identifier	ZEND_SUB_SPEC_TMPVAR_TMPVAR_HANDLER		402386	57					
ANR	402455	Identifier	ZEND_NULL_HANDLER		402386	58					
ANR	402456	Identifier	ZEND_SUB_SPEC_TMPVAR_CV_HANDLER		402386	59					
ANR	402457	Identifier	ZEND_SUB_SPEC_TMPVAR_CONST_HANDLER		402386	60					
ANR	402458	Identifier	ZEND_SUB_SPEC_TMPVAR_TMPVAR_HANDLER		402386	61					
ANR	402459	Identifier	ZEND_SUB_SPEC_TMPVAR_TMPVAR_HANDLER		402386	62					
ANR	402460	Identifier	ZEND_NULL_HANDLER		402386	63					
ANR	402461	Identifier	ZEND_SUB_SPEC_TMPVAR_CV_HANDLER		402386	64					
ANR	402462	Identifier	ZEND_NULL_HANDLER		402386	65					
ANR	402463	Identifier	ZEND_NULL_HANDLER		402386	66					
ANR	402464	Identifier	ZEND_NULL_HANDLER		402386	67					
ANR	402465	Identifier	ZEND_NULL_HANDLER		402386	68					
ANR	402466	Identifier	ZEND_NULL_HANDLER		402386	69					
ANR	402467	Identifier	ZEND_SUB_SPEC_CV_CONST_HANDLER		402386	70					
ANR	402468	Identifier	ZEND_SUB_SPEC_CV_TMPVAR_HANDLER		402386	71					
ANR	402469	Identifier	ZEND_SUB_SPEC_CV_TMPVAR_HANDLER		402386	72					
ANR	402470	Identifier	ZEND_NULL_HANDLER		402386	73					
ANR	402471	Identifier	ZEND_SUB_SPEC_CV_CV_HANDLER		402386	74					
ANR	402472	Identifier	ZEND_MUL_SPEC_CONST_CONST_HANDLER		402386	75					
ANR	402473	Identifier	ZEND_MUL_SPEC_CONST_TMPVAR_HANDLER		402386	76					
ANR	402474	Identifier	ZEND_MUL_SPEC_CONST_TMPVAR_HANDLER		402386	77					
ANR	402475	Identifier	ZEND_NULL_HANDLER		402386	78					
ANR	402476	Identifier	ZEND_MUL_SPEC_CONST_CV_HANDLER		402386	79					
ANR	402477	Identifier	ZEND_MUL_SPEC_TMPVAR_CONST_HANDLER		402386	80					
ANR	402478	Identifier	ZEND_MUL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	81					
ANR	402479	Identifier	ZEND_MUL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	82					
ANR	402480	Identifier	ZEND_NULL_HANDLER		402386	83					
ANR	402481	Identifier	ZEND_MUL_SPEC_TMPVAR_CV_HANDLER		402386	84					
ANR	402482	Identifier	ZEND_MUL_SPEC_TMPVAR_CONST_HANDLER		402386	85					
ANR	402483	Identifier	ZEND_MUL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	86					
ANR	402484	Identifier	ZEND_MUL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	87					
ANR	402485	Identifier	ZEND_NULL_HANDLER		402386	88					
ANR	402486	Identifier	ZEND_MUL_SPEC_TMPVAR_CV_HANDLER		402386	89					
ANR	402487	Identifier	ZEND_NULL_HANDLER		402386	90					
ANR	402488	Identifier	ZEND_NULL_HANDLER		402386	91					
ANR	402489	Identifier	ZEND_NULL_HANDLER		402386	92					
ANR	402490	Identifier	ZEND_NULL_HANDLER		402386	93					
ANR	402491	Identifier	ZEND_NULL_HANDLER		402386	94					
ANR	402492	Identifier	ZEND_MUL_SPEC_CV_CONST_HANDLER		402386	95					
ANR	402493	Identifier	ZEND_MUL_SPEC_CV_TMPVAR_HANDLER		402386	96					
ANR	402494	Identifier	ZEND_MUL_SPEC_CV_TMPVAR_HANDLER		402386	97					
ANR	402495	Identifier	ZEND_NULL_HANDLER		402386	98					
ANR	402496	Identifier	ZEND_MUL_SPEC_CV_CV_HANDLER		402386	99					
ANR	402497	Identifier	ZEND_DIV_SPEC_CONST_CONST_HANDLER		402386	100					
ANR	402498	Identifier	ZEND_DIV_SPEC_CONST_TMPVAR_HANDLER		402386	101					
ANR	402499	Identifier	ZEND_DIV_SPEC_CONST_TMPVAR_HANDLER		402386	102					
ANR	402500	Identifier	ZEND_NULL_HANDLER		402386	103					
ANR	402501	Identifier	ZEND_DIV_SPEC_CONST_CV_HANDLER		402386	104					
ANR	402502	Identifier	ZEND_DIV_SPEC_TMPVAR_CONST_HANDLER		402386	105					
ANR	402503	Identifier	ZEND_DIV_SPEC_TMPVAR_TMPVAR_HANDLER		402386	106					
ANR	402504	Identifier	ZEND_DIV_SPEC_TMPVAR_TMPVAR_HANDLER		402386	107					
ANR	402505	Identifier	ZEND_NULL_HANDLER		402386	108					
ANR	402506	Identifier	ZEND_DIV_SPEC_TMPVAR_CV_HANDLER		402386	109					
ANR	402507	Identifier	ZEND_DIV_SPEC_TMPVAR_CONST_HANDLER		402386	110					
ANR	402508	Identifier	ZEND_DIV_SPEC_TMPVAR_TMPVAR_HANDLER		402386	111					
ANR	402509	Identifier	ZEND_DIV_SPEC_TMPVAR_TMPVAR_HANDLER		402386	112					
ANR	402510	Identifier	ZEND_NULL_HANDLER		402386	113					
ANR	402511	Identifier	ZEND_DIV_SPEC_TMPVAR_CV_HANDLER		402386	114					
ANR	402512	Identifier	ZEND_NULL_HANDLER		402386	115					
ANR	402513	Identifier	ZEND_NULL_HANDLER		402386	116					
ANR	402514	Identifier	ZEND_NULL_HANDLER		402386	117					
ANR	402515	Identifier	ZEND_NULL_HANDLER		402386	118					
ANR	402516	Identifier	ZEND_NULL_HANDLER		402386	119					
ANR	402517	Identifier	ZEND_DIV_SPEC_CV_CONST_HANDLER		402386	120					
ANR	402518	Identifier	ZEND_DIV_SPEC_CV_TMPVAR_HANDLER		402386	121					
ANR	402519	Identifier	ZEND_DIV_SPEC_CV_TMPVAR_HANDLER		402386	122					
ANR	402520	Identifier	ZEND_NULL_HANDLER		402386	123					
ANR	402521	Identifier	ZEND_DIV_SPEC_CV_CV_HANDLER		402386	124					
ANR	402522	Identifier	ZEND_MOD_SPEC_CONST_CONST_HANDLER		402386	125					
ANR	402523	Identifier	ZEND_MOD_SPEC_CONST_TMPVAR_HANDLER		402386	126					
ANR	402524	Identifier	ZEND_MOD_SPEC_CONST_TMPVAR_HANDLER		402386	127					
ANR	402525	Identifier	ZEND_NULL_HANDLER		402386	128					
ANR	402526	Identifier	ZEND_MOD_SPEC_CONST_CV_HANDLER		402386	129					
ANR	402527	Identifier	ZEND_MOD_SPEC_TMPVAR_CONST_HANDLER		402386	130					
ANR	402528	Identifier	ZEND_MOD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	131					
ANR	402529	Identifier	ZEND_MOD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	132					
ANR	402530	Identifier	ZEND_NULL_HANDLER		402386	133					
ANR	402531	Identifier	ZEND_MOD_SPEC_TMPVAR_CV_HANDLER		402386	134					
ANR	402532	Identifier	ZEND_MOD_SPEC_TMPVAR_CONST_HANDLER		402386	135					
ANR	402533	Identifier	ZEND_MOD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	136					
ANR	402534	Identifier	ZEND_MOD_SPEC_TMPVAR_TMPVAR_HANDLER		402386	137					
ANR	402535	Identifier	ZEND_NULL_HANDLER		402386	138					
ANR	402536	Identifier	ZEND_MOD_SPEC_TMPVAR_CV_HANDLER		402386	139					
ANR	402537	Identifier	ZEND_NULL_HANDLER		402386	140					
ANR	402538	Identifier	ZEND_NULL_HANDLER		402386	141					
ANR	402539	Identifier	ZEND_NULL_HANDLER		402386	142					
ANR	402540	Identifier	ZEND_NULL_HANDLER		402386	143					
ANR	402541	Identifier	ZEND_NULL_HANDLER		402386	144					
ANR	402542	Identifier	ZEND_MOD_SPEC_CV_CONST_HANDLER		402386	145					
ANR	402543	Identifier	ZEND_MOD_SPEC_CV_TMPVAR_HANDLER		402386	146					
ANR	402544	Identifier	ZEND_MOD_SPEC_CV_TMPVAR_HANDLER		402386	147					
ANR	402545	Identifier	ZEND_NULL_HANDLER		402386	148					
ANR	402546	Identifier	ZEND_MOD_SPEC_CV_CV_HANDLER		402386	149					
ANR	402547	Identifier	ZEND_SL_SPEC_CONST_CONST_HANDLER		402386	150					
ANR	402548	Identifier	ZEND_SL_SPEC_CONST_TMPVAR_HANDLER		402386	151					
ANR	402549	Identifier	ZEND_SL_SPEC_CONST_TMPVAR_HANDLER		402386	152					
ANR	402550	Identifier	ZEND_NULL_HANDLER		402386	153					
ANR	402551	Identifier	ZEND_SL_SPEC_CONST_CV_HANDLER		402386	154					
ANR	402552	Identifier	ZEND_SL_SPEC_TMPVAR_CONST_HANDLER		402386	155					
ANR	402553	Identifier	ZEND_SL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	156					
ANR	402554	Identifier	ZEND_SL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	157					
ANR	402555	Identifier	ZEND_NULL_HANDLER		402386	158					
ANR	402556	Identifier	ZEND_SL_SPEC_TMPVAR_CV_HANDLER		402386	159					
ANR	402557	Identifier	ZEND_SL_SPEC_TMPVAR_CONST_HANDLER		402386	160					
ANR	402558	Identifier	ZEND_SL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	161					
ANR	402559	Identifier	ZEND_SL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	162					
ANR	402560	Identifier	ZEND_NULL_HANDLER		402386	163					
ANR	402561	Identifier	ZEND_SL_SPEC_TMPVAR_CV_HANDLER		402386	164					
ANR	402562	Identifier	ZEND_NULL_HANDLER		402386	165					
ANR	402563	Identifier	ZEND_NULL_HANDLER		402386	166					
ANR	402564	Identifier	ZEND_NULL_HANDLER		402386	167					
ANR	402565	Identifier	ZEND_NULL_HANDLER		402386	168					
ANR	402566	Identifier	ZEND_NULL_HANDLER		402386	169					
ANR	402567	Identifier	ZEND_SL_SPEC_CV_CONST_HANDLER		402386	170					
ANR	402568	Identifier	ZEND_SL_SPEC_CV_TMPVAR_HANDLER		402386	171					
ANR	402569	Identifier	ZEND_SL_SPEC_CV_TMPVAR_HANDLER		402386	172					
ANR	402570	Identifier	ZEND_NULL_HANDLER		402386	173					
ANR	402571	Identifier	ZEND_SL_SPEC_CV_CV_HANDLER		402386	174					
ANR	402572	Identifier	ZEND_SR_SPEC_CONST_CONST_HANDLER		402386	175					
ANR	402573	Identifier	ZEND_SR_SPEC_CONST_TMPVAR_HANDLER		402386	176					
ANR	402574	Identifier	ZEND_SR_SPEC_CONST_TMPVAR_HANDLER		402386	177					
ANR	402575	Identifier	ZEND_NULL_HANDLER		402386	178					
ANR	402576	Identifier	ZEND_SR_SPEC_CONST_CV_HANDLER		402386	179					
ANR	402577	Identifier	ZEND_SR_SPEC_TMPVAR_CONST_HANDLER		402386	180					
ANR	402578	Identifier	ZEND_SR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	181					
ANR	402579	Identifier	ZEND_SR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	182					
ANR	402580	Identifier	ZEND_NULL_HANDLER		402386	183					
ANR	402581	Identifier	ZEND_SR_SPEC_TMPVAR_CV_HANDLER		402386	184					
ANR	402582	Identifier	ZEND_SR_SPEC_TMPVAR_CONST_HANDLER		402386	185					
ANR	402583	Identifier	ZEND_SR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	186					
ANR	402584	Identifier	ZEND_SR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	187					
ANR	402585	Identifier	ZEND_NULL_HANDLER		402386	188					
ANR	402586	Identifier	ZEND_SR_SPEC_TMPVAR_CV_HANDLER		402386	189					
ANR	402587	Identifier	ZEND_NULL_HANDLER		402386	190					
ANR	402588	Identifier	ZEND_NULL_HANDLER		402386	191					
ANR	402589	Identifier	ZEND_NULL_HANDLER		402386	192					
ANR	402590	Identifier	ZEND_NULL_HANDLER		402386	193					
ANR	402591	Identifier	ZEND_NULL_HANDLER		402386	194					
ANR	402592	Identifier	ZEND_SR_SPEC_CV_CONST_HANDLER		402386	195					
ANR	402593	Identifier	ZEND_SR_SPEC_CV_TMPVAR_HANDLER		402386	196					
ANR	402594	Identifier	ZEND_SR_SPEC_CV_TMPVAR_HANDLER		402386	197					
ANR	402595	Identifier	ZEND_NULL_HANDLER		402386	198					
ANR	402596	Identifier	ZEND_SR_SPEC_CV_CV_HANDLER		402386	199					
ANR	402597	Identifier	ZEND_CONCAT_SPEC_CONST_CONST_HANDLER		402386	200					
ANR	402598	Identifier	ZEND_CONCAT_SPEC_CONST_TMPVAR_HANDLER		402386	201					
ANR	402599	Identifier	ZEND_CONCAT_SPEC_CONST_TMPVAR_HANDLER		402386	202					
ANR	402600	Identifier	ZEND_NULL_HANDLER		402386	203					
ANR	402601	Identifier	ZEND_CONCAT_SPEC_CONST_CV_HANDLER		402386	204					
ANR	402602	Identifier	ZEND_CONCAT_SPEC_TMPVAR_CONST_HANDLER		402386	205					
ANR	402603	Identifier	ZEND_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	206					
ANR	402604	Identifier	ZEND_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	207					
ANR	402605	Identifier	ZEND_NULL_HANDLER		402386	208					
ANR	402606	Identifier	ZEND_CONCAT_SPEC_TMPVAR_CV_HANDLER		402386	209					
ANR	402607	Identifier	ZEND_CONCAT_SPEC_TMPVAR_CONST_HANDLER		402386	210					
ANR	402608	Identifier	ZEND_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	211					
ANR	402609	Identifier	ZEND_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	212					
ANR	402610	Identifier	ZEND_NULL_HANDLER		402386	213					
ANR	402611	Identifier	ZEND_CONCAT_SPEC_TMPVAR_CV_HANDLER		402386	214					
ANR	402612	Identifier	ZEND_NULL_HANDLER		402386	215					
ANR	402613	Identifier	ZEND_NULL_HANDLER		402386	216					
ANR	402614	Identifier	ZEND_NULL_HANDLER		402386	217					
ANR	402615	Identifier	ZEND_NULL_HANDLER		402386	218					
ANR	402616	Identifier	ZEND_NULL_HANDLER		402386	219					
ANR	402617	Identifier	ZEND_CONCAT_SPEC_CV_CONST_HANDLER		402386	220					
ANR	402618	Identifier	ZEND_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386	221					
ANR	402619	Identifier	ZEND_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386	222					
ANR	402620	Identifier	ZEND_NULL_HANDLER		402386	223					
ANR	402621	Identifier	ZEND_CONCAT_SPEC_CV_CV_HANDLER		402386	224					
ANR	402622	Identifier	ZEND_BW_OR_SPEC_CONST_CONST_HANDLER		402386	225					
ANR	402623	Identifier	ZEND_BW_OR_SPEC_CONST_TMPVAR_HANDLER		402386	226					
ANR	402624	Identifier	ZEND_BW_OR_SPEC_CONST_TMPVAR_HANDLER		402386	227					
ANR	402625	Identifier	ZEND_NULL_HANDLER		402386	228					
ANR	402626	Identifier	ZEND_BW_OR_SPEC_CONST_CV_HANDLER		402386	229					
ANR	402627	Identifier	ZEND_BW_OR_SPEC_TMPVAR_CONST_HANDLER		402386	230					
ANR	402628	Identifier	ZEND_BW_OR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	231					
ANR	402629	Identifier	ZEND_BW_OR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	232					
ANR	402630	Identifier	ZEND_NULL_HANDLER		402386	233					
ANR	402631	Identifier	ZEND_BW_OR_SPEC_TMPVAR_CV_HANDLER		402386	234					
ANR	402632	Identifier	ZEND_BW_OR_SPEC_TMPVAR_CONST_HANDLER		402386	235					
ANR	402633	Identifier	ZEND_BW_OR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	236					
ANR	402634	Identifier	ZEND_BW_OR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	237					
ANR	402635	Identifier	ZEND_NULL_HANDLER		402386	238					
ANR	402636	Identifier	ZEND_BW_OR_SPEC_TMPVAR_CV_HANDLER		402386	239					
ANR	402637	Identifier	ZEND_NULL_HANDLER		402386	240					
ANR	402638	Identifier	ZEND_NULL_HANDLER		402386	241					
ANR	402639	Identifier	ZEND_NULL_HANDLER		402386	242					
ANR	402640	Identifier	ZEND_NULL_HANDLER		402386	243					
ANR	402641	Identifier	ZEND_NULL_HANDLER		402386	244					
ANR	402642	Identifier	ZEND_BW_OR_SPEC_CV_CONST_HANDLER		402386	245					
ANR	402643	Identifier	ZEND_BW_OR_SPEC_CV_TMPVAR_HANDLER		402386	246					
ANR	402644	Identifier	ZEND_BW_OR_SPEC_CV_TMPVAR_HANDLER		402386	247					
ANR	402645	Identifier	ZEND_NULL_HANDLER		402386	248					
ANR	402646	Identifier	ZEND_BW_OR_SPEC_CV_CV_HANDLER		402386	249					
ANR	402647	Identifier	ZEND_BW_AND_SPEC_CONST_CONST_HANDLER		402386	250					
ANR	402648	Identifier	ZEND_BW_AND_SPEC_CONST_TMPVAR_HANDLER		402386	251					
ANR	402649	Identifier	ZEND_BW_AND_SPEC_CONST_TMPVAR_HANDLER		402386	252					
ANR	402650	Identifier	ZEND_NULL_HANDLER		402386	253					
ANR	402651	Identifier	ZEND_BW_AND_SPEC_CONST_CV_HANDLER		402386	254					
ANR	402652	Identifier	ZEND_BW_AND_SPEC_TMPVAR_CONST_HANDLER		402386	255					
ANR	402653	Identifier	ZEND_BW_AND_SPEC_TMPVAR_TMPVAR_HANDLER		402386	256					
ANR	402654	Identifier	ZEND_BW_AND_SPEC_TMPVAR_TMPVAR_HANDLER		402386	257					
ANR	402655	Identifier	ZEND_NULL_HANDLER		402386	258					
ANR	402656	Identifier	ZEND_BW_AND_SPEC_TMPVAR_CV_HANDLER		402386	259					
ANR	402657	Identifier	ZEND_BW_AND_SPEC_TMPVAR_CONST_HANDLER		402386	260					
ANR	402658	Identifier	ZEND_BW_AND_SPEC_TMPVAR_TMPVAR_HANDLER		402386	261					
ANR	402659	Identifier	ZEND_BW_AND_SPEC_TMPVAR_TMPVAR_HANDLER		402386	262					
ANR	402660	Identifier	ZEND_NULL_HANDLER		402386	263					
ANR	402661	Identifier	ZEND_BW_AND_SPEC_TMPVAR_CV_HANDLER		402386	264					
ANR	402662	Identifier	ZEND_NULL_HANDLER		402386	265					
ANR	402663	Identifier	ZEND_NULL_HANDLER		402386	266					
ANR	402664	Identifier	ZEND_NULL_HANDLER		402386	267					
ANR	402665	Identifier	ZEND_NULL_HANDLER		402386	268					
ANR	402666	Identifier	ZEND_NULL_HANDLER		402386	269					
ANR	402667	Identifier	ZEND_BW_AND_SPEC_CV_CONST_HANDLER		402386	270					
ANR	402668	Identifier	ZEND_BW_AND_SPEC_CV_TMPVAR_HANDLER		402386	271					
ANR	402669	Identifier	ZEND_BW_AND_SPEC_CV_TMPVAR_HANDLER		402386	272					
ANR	402670	Identifier	ZEND_NULL_HANDLER		402386	273					
ANR	402671	Identifier	ZEND_BW_AND_SPEC_CV_CV_HANDLER		402386	274					
ANR	402672	Identifier	ZEND_BW_XOR_SPEC_CONST_CONST_HANDLER		402386	275					
ANR	402673	Identifier	ZEND_BW_XOR_SPEC_CONST_TMPVAR_HANDLER		402386	276					
ANR	402674	Identifier	ZEND_BW_XOR_SPEC_CONST_TMPVAR_HANDLER		402386	277					
ANR	402675	Identifier	ZEND_NULL_HANDLER		402386	278					
ANR	402676	Identifier	ZEND_BW_XOR_SPEC_CONST_CV_HANDLER		402386	279					
ANR	402677	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_CONST_HANDLER		402386	280					
ANR	402678	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	281					
ANR	402679	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	282					
ANR	402680	Identifier	ZEND_NULL_HANDLER		402386	283					
ANR	402681	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_CV_HANDLER		402386	284					
ANR	402682	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_CONST_HANDLER		402386	285					
ANR	402683	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	286					
ANR	402684	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	287					
ANR	402685	Identifier	ZEND_NULL_HANDLER		402386	288					
ANR	402686	Identifier	ZEND_BW_XOR_SPEC_TMPVAR_CV_HANDLER		402386	289					
ANR	402687	Identifier	ZEND_NULL_HANDLER		402386	290					
ANR	402688	Identifier	ZEND_NULL_HANDLER		402386	291					
ANR	402689	Identifier	ZEND_NULL_HANDLER		402386	292					
ANR	402690	Identifier	ZEND_NULL_HANDLER		402386	293					
ANR	402691	Identifier	ZEND_NULL_HANDLER		402386	294					
ANR	402692	Identifier	ZEND_BW_XOR_SPEC_CV_CONST_HANDLER		402386	295					
ANR	402693	Identifier	ZEND_BW_XOR_SPEC_CV_TMPVAR_HANDLER		402386	296					
ANR	402694	Identifier	ZEND_BW_XOR_SPEC_CV_TMPVAR_HANDLER		402386	297					
ANR	402695	Identifier	ZEND_NULL_HANDLER		402386	298					
ANR	402696	Identifier	ZEND_BW_XOR_SPEC_CV_CV_HANDLER		402386	299					
ANR	402697	Identifier	ZEND_BW_NOT_SPEC_CONST_HANDLER		402386	300					
ANR	402698	Identifier	ZEND_BW_NOT_SPEC_CONST_HANDLER		402386	301					
ANR	402699	Identifier	ZEND_BW_NOT_SPEC_CONST_HANDLER		402386	302					
ANR	402700	Identifier	ZEND_BW_NOT_SPEC_CONST_HANDLER		402386	303					
ANR	402701	Identifier	ZEND_BW_NOT_SPEC_CONST_HANDLER		402386	304					
ANR	402702	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	305					
ANR	402703	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	306					
ANR	402704	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	307					
ANR	402705	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	308					
ANR	402706	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	309					
ANR	402707	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	310					
ANR	402708	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	311					
ANR	402709	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	312					
ANR	402710	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	313					
ANR	402711	Identifier	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386	314					
ANR	402712	Identifier	ZEND_NULL_HANDLER		402386	315					
ANR	402713	Identifier	ZEND_NULL_HANDLER		402386	316					
ANR	402714	Identifier	ZEND_NULL_HANDLER		402386	317					
ANR	402715	Identifier	ZEND_NULL_HANDLER		402386	318					
ANR	402716	Identifier	ZEND_NULL_HANDLER		402386	319					
ANR	402717	Identifier	ZEND_BW_NOT_SPEC_CV_HANDLER		402386	320					
ANR	402718	Identifier	ZEND_BW_NOT_SPEC_CV_HANDLER		402386	321					
ANR	402719	Identifier	ZEND_BW_NOT_SPEC_CV_HANDLER		402386	322					
ANR	402720	Identifier	ZEND_BW_NOT_SPEC_CV_HANDLER		402386	323					
ANR	402721	Identifier	ZEND_BW_NOT_SPEC_CV_HANDLER		402386	324					
ANR	402722	Identifier	ZEND_BOOL_NOT_SPEC_CONST_HANDLER		402386	325					
ANR	402723	Identifier	ZEND_BOOL_NOT_SPEC_CONST_HANDLER		402386	326					
ANR	402724	Identifier	ZEND_BOOL_NOT_SPEC_CONST_HANDLER		402386	327					
ANR	402725	Identifier	ZEND_BOOL_NOT_SPEC_CONST_HANDLER		402386	328					
ANR	402726	Identifier	ZEND_BOOL_NOT_SPEC_CONST_HANDLER		402386	329					
ANR	402727	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	330					
ANR	402728	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	331					
ANR	402729	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	332					
ANR	402730	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	333					
ANR	402731	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	334					
ANR	402732	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	335					
ANR	402733	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	336					
ANR	402734	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	337					
ANR	402735	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	338					
ANR	402736	Identifier	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386	339					
ANR	402737	Identifier	ZEND_NULL_HANDLER		402386	340					
ANR	402738	Identifier	ZEND_NULL_HANDLER		402386	341					
ANR	402739	Identifier	ZEND_NULL_HANDLER		402386	342					
ANR	402740	Identifier	ZEND_NULL_HANDLER		402386	343					
ANR	402741	Identifier	ZEND_NULL_HANDLER		402386	344					
ANR	402742	Identifier	ZEND_BOOL_NOT_SPEC_CV_HANDLER		402386	345					
ANR	402743	Identifier	ZEND_BOOL_NOT_SPEC_CV_HANDLER		402386	346					
ANR	402744	Identifier	ZEND_BOOL_NOT_SPEC_CV_HANDLER		402386	347					
ANR	402745	Identifier	ZEND_BOOL_NOT_SPEC_CV_HANDLER		402386	348					
ANR	402746	Identifier	ZEND_BOOL_NOT_SPEC_CV_HANDLER		402386	349					
ANR	402747	Identifier	ZEND_BOOL_XOR_SPEC_CONST_CONST_HANDLER		402386	350					
ANR	402748	Identifier	ZEND_BOOL_XOR_SPEC_CONST_TMPVAR_HANDLER		402386	351					
ANR	402749	Identifier	ZEND_BOOL_XOR_SPEC_CONST_TMPVAR_HANDLER		402386	352					
ANR	402750	Identifier	ZEND_NULL_HANDLER		402386	353					
ANR	402751	Identifier	ZEND_BOOL_XOR_SPEC_CONST_CV_HANDLER		402386	354					
ANR	402752	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_CONST_HANDLER		402386	355					
ANR	402753	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	356					
ANR	402754	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	357					
ANR	402755	Identifier	ZEND_NULL_HANDLER		402386	358					
ANR	402756	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_CV_HANDLER		402386	359					
ANR	402757	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_CONST_HANDLER		402386	360					
ANR	402758	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	361					
ANR	402759	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386	362					
ANR	402760	Identifier	ZEND_NULL_HANDLER		402386	363					
ANR	402761	Identifier	ZEND_BOOL_XOR_SPEC_TMPVAR_CV_HANDLER		402386	364					
ANR	402762	Identifier	ZEND_NULL_HANDLER		402386	365					
ANR	402763	Identifier	ZEND_NULL_HANDLER		402386	366					
ANR	402764	Identifier	ZEND_NULL_HANDLER		402386	367					
ANR	402765	Identifier	ZEND_NULL_HANDLER		402386	368					
ANR	402766	Identifier	ZEND_NULL_HANDLER		402386	369					
ANR	402767	Identifier	ZEND_BOOL_XOR_SPEC_CV_CONST_HANDLER		402386	370					
ANR	402768	Identifier	ZEND_BOOL_XOR_SPEC_CV_TMPVAR_HANDLER		402386	371					
ANR	402769	Identifier	ZEND_BOOL_XOR_SPEC_CV_TMPVAR_HANDLER		402386	372					
ANR	402770	Identifier	ZEND_NULL_HANDLER		402386	373					
ANR	402771	Identifier	ZEND_BOOL_XOR_SPEC_CV_CV_HANDLER		402386	374					
ANR	402772	Identifier	ZEND_IS_IDENTICAL_SPEC_CONST_CONST_HANDLER		402386	375					
ANR	402773	Identifier	ZEND_IS_IDENTICAL_SPEC_CONST_TMP_HANDLER		402386	376					
ANR	402774	Identifier	ZEND_IS_IDENTICAL_SPEC_CONST_VAR_HANDLER		402386	377					
ANR	402775	Identifier	ZEND_NULL_HANDLER		402386	378					
ANR	402776	Identifier	ZEND_IS_IDENTICAL_SPEC_CONST_CV_HANDLER		402386	379					
ANR	402777	Identifier	ZEND_IS_IDENTICAL_SPEC_TMP_CONST_HANDLER		402386	380					
ANR	402778	Identifier	ZEND_IS_IDENTICAL_SPEC_TMP_TMP_HANDLER		402386	381					
ANR	402779	Identifier	ZEND_IS_IDENTICAL_SPEC_TMP_VAR_HANDLER		402386	382					
ANR	402780	Identifier	ZEND_NULL_HANDLER		402386	383					
ANR	402781	Identifier	ZEND_IS_IDENTICAL_SPEC_TMP_CV_HANDLER		402386	384					
ANR	402782	Identifier	ZEND_IS_IDENTICAL_SPEC_VAR_CONST_HANDLER		402386	385					
ANR	402783	Identifier	ZEND_IS_IDENTICAL_SPEC_VAR_TMP_HANDLER		402386	386					
ANR	402784	Identifier	ZEND_IS_IDENTICAL_SPEC_VAR_VAR_HANDLER		402386	387					
ANR	402785	Identifier	ZEND_NULL_HANDLER		402386	388					
ANR	402786	Identifier	ZEND_IS_IDENTICAL_SPEC_VAR_CV_HANDLER		402386	389					
ANR	402787	Identifier	ZEND_NULL_HANDLER		402386	390					
ANR	402788	Identifier	ZEND_NULL_HANDLER		402386	391					
ANR	402789	Identifier	ZEND_NULL_HANDLER		402386	392					
ANR	402790	Identifier	ZEND_NULL_HANDLER		402386	393					
ANR	402791	Identifier	ZEND_NULL_HANDLER		402386	394					
ANR	402792	Identifier	ZEND_IS_IDENTICAL_SPEC_CV_CONST_HANDLER		402386	395					
ANR	402793	Identifier	ZEND_IS_IDENTICAL_SPEC_CV_TMP_HANDLER		402386	396					
ANR	402794	Identifier	ZEND_IS_IDENTICAL_SPEC_CV_VAR_HANDLER		402386	397					
ANR	402795	Identifier	ZEND_NULL_HANDLER		402386	398					
ANR	402796	Identifier	ZEND_IS_IDENTICAL_SPEC_CV_CV_HANDLER		402386	399					
ANR	402797	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_CONST_HANDLER		402386	400					
ANR	402798	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_TMP_HANDLER		402386	401					
ANR	402799	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_VAR_HANDLER		402386	402					
ANR	402800	Identifier	ZEND_NULL_HANDLER		402386	403					
ANR	402801	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_CV_HANDLER		402386	404					
ANR	402802	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_CONST_HANDLER		402386	405					
ANR	402803	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_TMP_HANDLER		402386	406					
ANR	402804	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_VAR_HANDLER		402386	407					
ANR	402805	Identifier	ZEND_NULL_HANDLER		402386	408					
ANR	402806	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_CV_HANDLER		402386	409					
ANR	402807	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_CONST_HANDLER		402386	410					
ANR	402808	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_TMP_HANDLER		402386	411					
ANR	402809	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_VAR_HANDLER		402386	412					
ANR	402810	Identifier	ZEND_NULL_HANDLER		402386	413					
ANR	402811	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_CV_HANDLER		402386	414					
ANR	402812	Identifier	ZEND_NULL_HANDLER		402386	415					
ANR	402813	Identifier	ZEND_NULL_HANDLER		402386	416					
ANR	402814	Identifier	ZEND_NULL_HANDLER		402386	417					
ANR	402815	Identifier	ZEND_NULL_HANDLER		402386	418					
ANR	402816	Identifier	ZEND_NULL_HANDLER		402386	419					
ANR	402817	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CV_CONST_HANDLER		402386	420					
ANR	402818	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CV_TMP_HANDLER		402386	421					
ANR	402819	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CV_VAR_HANDLER		402386	422					
ANR	402820	Identifier	ZEND_NULL_HANDLER		402386	423					
ANR	402821	Identifier	ZEND_IS_NOT_IDENTICAL_SPEC_CV_CV_HANDLER		402386	424					
ANR	402822	Identifier	ZEND_IS_EQUAL_SPEC_CONST_CONST_HANDLER		402386	425					
ANR	402823	Identifier	ZEND_IS_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386	426					
ANR	402824	Identifier	ZEND_IS_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386	427					
ANR	402825	Identifier	ZEND_NULL_HANDLER		402386	428					
ANR	402826	Identifier	ZEND_IS_EQUAL_SPEC_CONST_CV_HANDLER		402386	429					
ANR	402827	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386	430					
ANR	402828	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	431					
ANR	402829	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	432					
ANR	402830	Identifier	ZEND_NULL_HANDLER		402386	433					
ANR	402831	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386	434					
ANR	402832	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386	435					
ANR	402833	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	436					
ANR	402834	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	437					
ANR	402835	Identifier	ZEND_NULL_HANDLER		402386	438					
ANR	402836	Identifier	ZEND_IS_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386	439					
ANR	402837	Identifier	ZEND_NULL_HANDLER		402386	440					
ANR	402838	Identifier	ZEND_NULL_HANDLER		402386	441					
ANR	402839	Identifier	ZEND_NULL_HANDLER		402386	442					
ANR	402840	Identifier	ZEND_NULL_HANDLER		402386	443					
ANR	402841	Identifier	ZEND_NULL_HANDLER		402386	444					
ANR	402842	Identifier	ZEND_IS_EQUAL_SPEC_CV_CONST_HANDLER		402386	445					
ANR	402843	Identifier	ZEND_IS_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386	446					
ANR	402844	Identifier	ZEND_IS_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386	447					
ANR	402845	Identifier	ZEND_NULL_HANDLER		402386	448					
ANR	402846	Identifier	ZEND_IS_EQUAL_SPEC_CV_CV_HANDLER		402386	449					
ANR	402847	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CONST_CONST_HANDLER		402386	450					
ANR	402848	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386	451					
ANR	402849	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386	452					
ANR	402850	Identifier	ZEND_NULL_HANDLER		402386	453					
ANR	402851	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CONST_CV_HANDLER		402386	454					
ANR	402852	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386	455					
ANR	402853	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	456					
ANR	402854	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	457					
ANR	402855	Identifier	ZEND_NULL_HANDLER		402386	458					
ANR	402856	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386	459					
ANR	402857	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386	460					
ANR	402858	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	461					
ANR	402859	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	462					
ANR	402860	Identifier	ZEND_NULL_HANDLER		402386	463					
ANR	402861	Identifier	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386	464					
ANR	402862	Identifier	ZEND_NULL_HANDLER		402386	465					
ANR	402863	Identifier	ZEND_NULL_HANDLER		402386	466					
ANR	402864	Identifier	ZEND_NULL_HANDLER		402386	467					
ANR	402865	Identifier	ZEND_NULL_HANDLER		402386	468					
ANR	402866	Identifier	ZEND_NULL_HANDLER		402386	469					
ANR	402867	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CV_CONST_HANDLER		402386	470					
ANR	402868	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386	471					
ANR	402869	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386	472					
ANR	402870	Identifier	ZEND_NULL_HANDLER		402386	473					
ANR	402871	Identifier	ZEND_IS_NOT_EQUAL_SPEC_CV_CV_HANDLER		402386	474					
ANR	402872	Identifier	ZEND_IS_SMALLER_SPEC_CONST_CONST_HANDLER		402386	475					
ANR	402873	Identifier	ZEND_IS_SMALLER_SPEC_CONST_TMPVAR_HANDLER		402386	476					
ANR	402874	Identifier	ZEND_IS_SMALLER_SPEC_CONST_TMPVAR_HANDLER		402386	477					
ANR	402875	Identifier	ZEND_NULL_HANDLER		402386	478					
ANR	402876	Identifier	ZEND_IS_SMALLER_SPEC_CONST_CV_HANDLER		402386	479					
ANR	402877	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_CONST_HANDLER		402386	480					
ANR	402878	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_TMPVAR_HANDLER		402386	481					
ANR	402879	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_TMPVAR_HANDLER		402386	482					
ANR	402880	Identifier	ZEND_NULL_HANDLER		402386	483					
ANR	402881	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_CV_HANDLER		402386	484					
ANR	402882	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_CONST_HANDLER		402386	485					
ANR	402883	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_TMPVAR_HANDLER		402386	486					
ANR	402884	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_TMPVAR_HANDLER		402386	487					
ANR	402885	Identifier	ZEND_NULL_HANDLER		402386	488					
ANR	402886	Identifier	ZEND_IS_SMALLER_SPEC_TMPVAR_CV_HANDLER		402386	489					
ANR	402887	Identifier	ZEND_NULL_HANDLER		402386	490					
ANR	402888	Identifier	ZEND_NULL_HANDLER		402386	491					
ANR	402889	Identifier	ZEND_NULL_HANDLER		402386	492					
ANR	402890	Identifier	ZEND_NULL_HANDLER		402386	493					
ANR	402891	Identifier	ZEND_NULL_HANDLER		402386	494					
ANR	402892	Identifier	ZEND_IS_SMALLER_SPEC_CV_CONST_HANDLER		402386	495					
ANR	402893	Identifier	ZEND_IS_SMALLER_SPEC_CV_TMPVAR_HANDLER		402386	496					
ANR	402894	Identifier	ZEND_IS_SMALLER_SPEC_CV_TMPVAR_HANDLER		402386	497					
ANR	402895	Identifier	ZEND_NULL_HANDLER		402386	498					
ANR	402896	Identifier	ZEND_IS_SMALLER_SPEC_CV_CV_HANDLER		402386	499					
ANR	402897	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CONST_CONST_HANDLER		402386	500					
ANR	402898	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386	501					
ANR	402899	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386	502					
ANR	402900	Identifier	ZEND_NULL_HANDLER		402386	503					
ANR	402901	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CONST_CV_HANDLER		402386	504					
ANR	402902	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386	505					
ANR	402903	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	506					
ANR	402904	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	507					
ANR	402905	Identifier	ZEND_NULL_HANDLER		402386	508					
ANR	402906	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386	509					
ANR	402907	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386	510					
ANR	402908	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	511					
ANR	402909	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	512					
ANR	402910	Identifier	ZEND_NULL_HANDLER		402386	513					
ANR	402911	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386	514					
ANR	402912	Identifier	ZEND_NULL_HANDLER		402386	515					
ANR	402913	Identifier	ZEND_NULL_HANDLER		402386	516					
ANR	402914	Identifier	ZEND_NULL_HANDLER		402386	517					
ANR	402915	Identifier	ZEND_NULL_HANDLER		402386	518					
ANR	402916	Identifier	ZEND_NULL_HANDLER		402386	519					
ANR	402917	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CV_CONST_HANDLER		402386	520					
ANR	402918	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386	521					
ANR	402919	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386	522					
ANR	402920	Identifier	ZEND_NULL_HANDLER		402386	523					
ANR	402921	Identifier	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CV_CV_HANDLER		402386	524					
ANR	402922	Identifier	ZEND_CAST_SPEC_CONST_HANDLER		402386	525					
ANR	402923	Identifier	ZEND_CAST_SPEC_CONST_HANDLER		402386	526					
ANR	402924	Identifier	ZEND_CAST_SPEC_CONST_HANDLER		402386	527					
ANR	402925	Identifier	ZEND_CAST_SPEC_CONST_HANDLER		402386	528					
ANR	402926	Identifier	ZEND_CAST_SPEC_CONST_HANDLER		402386	529					
ANR	402927	Identifier	ZEND_CAST_SPEC_TMP_HANDLER		402386	530					
ANR	402928	Identifier	ZEND_CAST_SPEC_TMP_HANDLER		402386	531					
ANR	402929	Identifier	ZEND_CAST_SPEC_TMP_HANDLER		402386	532					
ANR	402930	Identifier	ZEND_CAST_SPEC_TMP_HANDLER		402386	533					
ANR	402931	Identifier	ZEND_CAST_SPEC_TMP_HANDLER		402386	534					
ANR	402932	Identifier	ZEND_CAST_SPEC_VAR_HANDLER		402386	535					
ANR	402933	Identifier	ZEND_CAST_SPEC_VAR_HANDLER		402386	536					
ANR	402934	Identifier	ZEND_CAST_SPEC_VAR_HANDLER		402386	537					
ANR	402935	Identifier	ZEND_CAST_SPEC_VAR_HANDLER		402386	538					
ANR	402936	Identifier	ZEND_CAST_SPEC_VAR_HANDLER		402386	539					
ANR	402937	Identifier	ZEND_NULL_HANDLER		402386	540					
ANR	402938	Identifier	ZEND_NULL_HANDLER		402386	541					
ANR	402939	Identifier	ZEND_NULL_HANDLER		402386	542					
ANR	402940	Identifier	ZEND_NULL_HANDLER		402386	543					
ANR	402941	Identifier	ZEND_NULL_HANDLER		402386	544					
ANR	402942	Identifier	ZEND_CAST_SPEC_CV_HANDLER		402386	545					
ANR	402943	Identifier	ZEND_CAST_SPEC_CV_HANDLER		402386	546					
ANR	402944	Identifier	ZEND_CAST_SPEC_CV_HANDLER		402386	547					
ANR	402945	Identifier	ZEND_CAST_SPEC_CV_HANDLER		402386	548					
ANR	402946	Identifier	ZEND_CAST_SPEC_CV_HANDLER		402386	549					
ANR	402947	Identifier	ZEND_QM_ASSIGN_SPEC_CONST_HANDLER		402386	550					
ANR	402948	Identifier	ZEND_QM_ASSIGN_SPEC_CONST_HANDLER		402386	551					
ANR	402949	Identifier	ZEND_QM_ASSIGN_SPEC_CONST_HANDLER		402386	552					
ANR	402950	Identifier	ZEND_QM_ASSIGN_SPEC_CONST_HANDLER		402386	553					
ANR	402951	Identifier	ZEND_QM_ASSIGN_SPEC_CONST_HANDLER		402386	554					
ANR	402952	Identifier	ZEND_QM_ASSIGN_SPEC_TMP_HANDLER		402386	555					
ANR	402953	Identifier	ZEND_QM_ASSIGN_SPEC_TMP_HANDLER		402386	556					
ANR	402954	Identifier	ZEND_QM_ASSIGN_SPEC_TMP_HANDLER		402386	557					
ANR	402955	Identifier	ZEND_QM_ASSIGN_SPEC_TMP_HANDLER		402386	558					
ANR	402956	Identifier	ZEND_QM_ASSIGN_SPEC_TMP_HANDLER		402386	559					
ANR	402957	Identifier	ZEND_QM_ASSIGN_SPEC_VAR_HANDLER		402386	560					
ANR	402958	Identifier	ZEND_QM_ASSIGN_SPEC_VAR_HANDLER		402386	561					
ANR	402959	Identifier	ZEND_QM_ASSIGN_SPEC_VAR_HANDLER		402386	562					
ANR	402960	Identifier	ZEND_QM_ASSIGN_SPEC_VAR_HANDLER		402386	563					
ANR	402961	Identifier	ZEND_QM_ASSIGN_SPEC_VAR_HANDLER		402386	564					
ANR	402962	Identifier	ZEND_NULL_HANDLER		402386	565					
ANR	402963	Identifier	ZEND_NULL_HANDLER		402386	566					
ANR	402964	Identifier	ZEND_NULL_HANDLER		402386	567					
ANR	402965	Identifier	ZEND_NULL_HANDLER		402386	568					
ANR	402966	Identifier	ZEND_NULL_HANDLER		402386	569					
ANR	402967	Identifier	ZEND_QM_ASSIGN_SPEC_CV_HANDLER		402386	570					
ANR	402968	Identifier	ZEND_QM_ASSIGN_SPEC_CV_HANDLER		402386	571					
ANR	402969	Identifier	ZEND_QM_ASSIGN_SPEC_CV_HANDLER		402386	572					
ANR	402970	Identifier	ZEND_QM_ASSIGN_SPEC_CV_HANDLER		402386	573					
ANR	402971	Identifier	ZEND_QM_ASSIGN_SPEC_CV_HANDLER		402386	574					
ANR	402972	Identifier	ZEND_NULL_HANDLER		402386	575					
ANR	402973	Identifier	ZEND_NULL_HANDLER		402386	576					
ANR	402974	Identifier	ZEND_NULL_HANDLER		402386	577					
ANR	402975	Identifier	ZEND_NULL_HANDLER		402386	578					
ANR	402976	Identifier	ZEND_NULL_HANDLER		402386	579					
ANR	402977	Identifier	ZEND_NULL_HANDLER		402386	580					
ANR	402978	Identifier	ZEND_NULL_HANDLER		402386	581					
ANR	402979	Identifier	ZEND_NULL_HANDLER		402386	582					
ANR	402980	Identifier	ZEND_NULL_HANDLER		402386	583					
ANR	402981	Identifier	ZEND_NULL_HANDLER		402386	584					
ANR	402982	Identifier	ZEND_ASSIGN_ADD_SPEC_VAR_CONST_HANDLER		402386	585					
ANR	402983	Identifier	ZEND_ASSIGN_ADD_SPEC_VAR_TMPVAR_HANDLER		402386	586					
ANR	402984	Identifier	ZEND_ASSIGN_ADD_SPEC_VAR_TMPVAR_HANDLER		402386	587					
ANR	402985	Identifier	ZEND_ASSIGN_ADD_SPEC_VAR_UNUSED_HANDLER		402386	588					
ANR	402986	Identifier	ZEND_ASSIGN_ADD_SPEC_VAR_CV_HANDLER		402386	589					
ANR	402987	Identifier	ZEND_ASSIGN_ADD_SPEC_UNUSED_CONST_HANDLER		402386	590					
ANR	402988	Identifier	ZEND_ASSIGN_ADD_SPEC_UNUSED_TMPVAR_HANDLER		402386	591					
ANR	402989	Identifier	ZEND_ASSIGN_ADD_SPEC_UNUSED_TMPVAR_HANDLER		402386	592					
ANR	402990	Identifier	ZEND_ASSIGN_ADD_SPEC_UNUSED_UNUSED_HANDLER		402386	593					
ANR	402991	Identifier	ZEND_ASSIGN_ADD_SPEC_UNUSED_CV_HANDLER		402386	594					
ANR	402992	Identifier	ZEND_ASSIGN_ADD_SPEC_CV_CONST_HANDLER		402386	595					
ANR	402993	Identifier	ZEND_ASSIGN_ADD_SPEC_CV_TMPVAR_HANDLER		402386	596					
ANR	402994	Identifier	ZEND_ASSIGN_ADD_SPEC_CV_TMPVAR_HANDLER		402386	597					
ANR	402995	Identifier	ZEND_ASSIGN_ADD_SPEC_CV_UNUSED_HANDLER		402386	598					
ANR	402996	Identifier	ZEND_ASSIGN_ADD_SPEC_CV_CV_HANDLER		402386	599					
ANR	402997	Identifier	ZEND_NULL_HANDLER		402386	600					
ANR	402998	Identifier	ZEND_NULL_HANDLER		402386	601					
ANR	402999	Identifier	ZEND_NULL_HANDLER		402386	602					
ANR	403000	Identifier	ZEND_NULL_HANDLER		402386	603					
ANR	403001	Identifier	ZEND_NULL_HANDLER		402386	604					
ANR	403002	Identifier	ZEND_NULL_HANDLER		402386	605					
ANR	403003	Identifier	ZEND_NULL_HANDLER		402386	606					
ANR	403004	Identifier	ZEND_NULL_HANDLER		402386	607					
ANR	403005	Identifier	ZEND_NULL_HANDLER		402386	608					
ANR	403006	Identifier	ZEND_NULL_HANDLER		402386	609					
ANR	403007	Identifier	ZEND_ASSIGN_SUB_SPEC_VAR_CONST_HANDLER		402386	610					
ANR	403008	Identifier	ZEND_ASSIGN_SUB_SPEC_VAR_TMPVAR_HANDLER		402386	611					
ANR	403009	Identifier	ZEND_ASSIGN_SUB_SPEC_VAR_TMPVAR_HANDLER		402386	612					
ANR	403010	Identifier	ZEND_ASSIGN_SUB_SPEC_VAR_UNUSED_HANDLER		402386	613					
ANR	403011	Identifier	ZEND_ASSIGN_SUB_SPEC_VAR_CV_HANDLER		402386	614					
ANR	403012	Identifier	ZEND_ASSIGN_SUB_SPEC_UNUSED_CONST_HANDLER		402386	615					
ANR	403013	Identifier	ZEND_ASSIGN_SUB_SPEC_UNUSED_TMPVAR_HANDLER		402386	616					
ANR	403014	Identifier	ZEND_ASSIGN_SUB_SPEC_UNUSED_TMPVAR_HANDLER		402386	617					
ANR	403015	Identifier	ZEND_ASSIGN_SUB_SPEC_UNUSED_UNUSED_HANDLER		402386	618					
ANR	403016	Identifier	ZEND_ASSIGN_SUB_SPEC_UNUSED_CV_HANDLER		402386	619					
ANR	403017	Identifier	ZEND_ASSIGN_SUB_SPEC_CV_CONST_HANDLER		402386	620					
ANR	403018	Identifier	ZEND_ASSIGN_SUB_SPEC_CV_TMPVAR_HANDLER		402386	621					
ANR	403019	Identifier	ZEND_ASSIGN_SUB_SPEC_CV_TMPVAR_HANDLER		402386	622					
ANR	403020	Identifier	ZEND_ASSIGN_SUB_SPEC_CV_UNUSED_HANDLER		402386	623					
ANR	403021	Identifier	ZEND_ASSIGN_SUB_SPEC_CV_CV_HANDLER		402386	624					
ANR	403022	Identifier	ZEND_NULL_HANDLER		402386	625					
ANR	403023	Identifier	ZEND_NULL_HANDLER		402386	626					
ANR	403024	Identifier	ZEND_NULL_HANDLER		402386	627					
ANR	403025	Identifier	ZEND_NULL_HANDLER		402386	628					
ANR	403026	Identifier	ZEND_NULL_HANDLER		402386	629					
ANR	403027	Identifier	ZEND_NULL_HANDLER		402386	630					
ANR	403028	Identifier	ZEND_NULL_HANDLER		402386	631					
ANR	403029	Identifier	ZEND_NULL_HANDLER		402386	632					
ANR	403030	Identifier	ZEND_NULL_HANDLER		402386	633					
ANR	403031	Identifier	ZEND_NULL_HANDLER		402386	634					
ANR	403032	Identifier	ZEND_ASSIGN_MUL_SPEC_VAR_CONST_HANDLER		402386	635					
ANR	403033	Identifier	ZEND_ASSIGN_MUL_SPEC_VAR_TMPVAR_HANDLER		402386	636					
ANR	403034	Identifier	ZEND_ASSIGN_MUL_SPEC_VAR_TMPVAR_HANDLER		402386	637					
ANR	403035	Identifier	ZEND_ASSIGN_MUL_SPEC_VAR_UNUSED_HANDLER		402386	638					
ANR	403036	Identifier	ZEND_ASSIGN_MUL_SPEC_VAR_CV_HANDLER		402386	639					
ANR	403037	Identifier	ZEND_ASSIGN_MUL_SPEC_UNUSED_CONST_HANDLER		402386	640					
ANR	403038	Identifier	ZEND_ASSIGN_MUL_SPEC_UNUSED_TMPVAR_HANDLER		402386	641					
ANR	403039	Identifier	ZEND_ASSIGN_MUL_SPEC_UNUSED_TMPVAR_HANDLER		402386	642					
ANR	403040	Identifier	ZEND_ASSIGN_MUL_SPEC_UNUSED_UNUSED_HANDLER		402386	643					
ANR	403041	Identifier	ZEND_ASSIGN_MUL_SPEC_UNUSED_CV_HANDLER		402386	644					
ANR	403042	Identifier	ZEND_ASSIGN_MUL_SPEC_CV_CONST_HANDLER		402386	645					
ANR	403043	Identifier	ZEND_ASSIGN_MUL_SPEC_CV_TMPVAR_HANDLER		402386	646					
ANR	403044	Identifier	ZEND_ASSIGN_MUL_SPEC_CV_TMPVAR_HANDLER		402386	647					
ANR	403045	Identifier	ZEND_ASSIGN_MUL_SPEC_CV_UNUSED_HANDLER		402386	648					
ANR	403046	Identifier	ZEND_ASSIGN_MUL_SPEC_CV_CV_HANDLER		402386	649					
ANR	403047	Identifier	ZEND_NULL_HANDLER		402386	650					
ANR	403048	Identifier	ZEND_NULL_HANDLER		402386	651					
ANR	403049	Identifier	ZEND_NULL_HANDLER		402386	652					
ANR	403050	Identifier	ZEND_NULL_HANDLER		402386	653					
ANR	403051	Identifier	ZEND_NULL_HANDLER		402386	654					
ANR	403052	Identifier	ZEND_NULL_HANDLER		402386	655					
ANR	403053	Identifier	ZEND_NULL_HANDLER		402386	656					
ANR	403054	Identifier	ZEND_NULL_HANDLER		402386	657					
ANR	403055	Identifier	ZEND_NULL_HANDLER		402386	658					
ANR	403056	Identifier	ZEND_NULL_HANDLER		402386	659					
ANR	403057	Identifier	ZEND_ASSIGN_DIV_SPEC_VAR_CONST_HANDLER		402386	660					
ANR	403058	Identifier	ZEND_ASSIGN_DIV_SPEC_VAR_TMPVAR_HANDLER		402386	661					
ANR	403059	Identifier	ZEND_ASSIGN_DIV_SPEC_VAR_TMPVAR_HANDLER		402386	662					
ANR	403060	Identifier	ZEND_ASSIGN_DIV_SPEC_VAR_UNUSED_HANDLER		402386	663					
ANR	403061	Identifier	ZEND_ASSIGN_DIV_SPEC_VAR_CV_HANDLER		402386	664					
ANR	403062	Identifier	ZEND_ASSIGN_DIV_SPEC_UNUSED_CONST_HANDLER		402386	665					
ANR	403063	Identifier	ZEND_ASSIGN_DIV_SPEC_UNUSED_TMPVAR_HANDLER		402386	666					
ANR	403064	Identifier	ZEND_ASSIGN_DIV_SPEC_UNUSED_TMPVAR_HANDLER		402386	667					
ANR	403065	Identifier	ZEND_ASSIGN_DIV_SPEC_UNUSED_UNUSED_HANDLER		402386	668					
ANR	403066	Identifier	ZEND_ASSIGN_DIV_SPEC_UNUSED_CV_HANDLER		402386	669					
ANR	403067	Identifier	ZEND_ASSIGN_DIV_SPEC_CV_CONST_HANDLER		402386	670					
ANR	403068	Identifier	ZEND_ASSIGN_DIV_SPEC_CV_TMPVAR_HANDLER		402386	671					
ANR	403069	Identifier	ZEND_ASSIGN_DIV_SPEC_CV_TMPVAR_HANDLER		402386	672					
ANR	403070	Identifier	ZEND_ASSIGN_DIV_SPEC_CV_UNUSED_HANDLER		402386	673					
ANR	403071	Identifier	ZEND_ASSIGN_DIV_SPEC_CV_CV_HANDLER		402386	674					
ANR	403072	Identifier	ZEND_NULL_HANDLER		402386	675					
ANR	403073	Identifier	ZEND_NULL_HANDLER		402386	676					
ANR	403074	Identifier	ZEND_NULL_HANDLER		402386	677					
ANR	403075	Identifier	ZEND_NULL_HANDLER		402386	678					
ANR	403076	Identifier	ZEND_NULL_HANDLER		402386	679					
ANR	403077	Identifier	ZEND_NULL_HANDLER		402386	680					
ANR	403078	Identifier	ZEND_NULL_HANDLER		402386	681					
ANR	403079	Identifier	ZEND_NULL_HANDLER		402386	682					
ANR	403080	Identifier	ZEND_NULL_HANDLER		402386	683					
ANR	403081	Identifier	ZEND_NULL_HANDLER		402386	684					
ANR	403082	Identifier	ZEND_ASSIGN_MOD_SPEC_VAR_CONST_HANDLER		402386	685					
ANR	403083	Identifier	ZEND_ASSIGN_MOD_SPEC_VAR_TMPVAR_HANDLER		402386	686					
ANR	403084	Identifier	ZEND_ASSIGN_MOD_SPEC_VAR_TMPVAR_HANDLER		402386	687					
ANR	403085	Identifier	ZEND_ASSIGN_MOD_SPEC_VAR_UNUSED_HANDLER		402386	688					
ANR	403086	Identifier	ZEND_ASSIGN_MOD_SPEC_VAR_CV_HANDLER		402386	689					
ANR	403087	Identifier	ZEND_ASSIGN_MOD_SPEC_UNUSED_CONST_HANDLER		402386	690					
ANR	403088	Identifier	ZEND_ASSIGN_MOD_SPEC_UNUSED_TMPVAR_HANDLER		402386	691					
ANR	403089	Identifier	ZEND_ASSIGN_MOD_SPEC_UNUSED_TMPVAR_HANDLER		402386	692					
ANR	403090	Identifier	ZEND_ASSIGN_MOD_SPEC_UNUSED_UNUSED_HANDLER		402386	693					
ANR	403091	Identifier	ZEND_ASSIGN_MOD_SPEC_UNUSED_CV_HANDLER		402386	694					
ANR	403092	Identifier	ZEND_ASSIGN_MOD_SPEC_CV_CONST_HANDLER		402386	695					
ANR	403093	Identifier	ZEND_ASSIGN_MOD_SPEC_CV_TMPVAR_HANDLER		402386	696					
ANR	403094	Identifier	ZEND_ASSIGN_MOD_SPEC_CV_TMPVAR_HANDLER		402386	697					
ANR	403095	Identifier	ZEND_ASSIGN_MOD_SPEC_CV_UNUSED_HANDLER		402386	698					
ANR	403096	Identifier	ZEND_ASSIGN_MOD_SPEC_CV_CV_HANDLER		402386	699					
ANR	403097	Identifier	ZEND_NULL_HANDLER		402386	700					
ANR	403098	Identifier	ZEND_NULL_HANDLER		402386	701					
ANR	403099	Identifier	ZEND_NULL_HANDLER		402386	702					
ANR	403100	Identifier	ZEND_NULL_HANDLER		402386	703					
ANR	403101	Identifier	ZEND_NULL_HANDLER		402386	704					
ANR	403102	Identifier	ZEND_NULL_HANDLER		402386	705					
ANR	403103	Identifier	ZEND_NULL_HANDLER		402386	706					
ANR	403104	Identifier	ZEND_NULL_HANDLER		402386	707					
ANR	403105	Identifier	ZEND_NULL_HANDLER		402386	708					
ANR	403106	Identifier	ZEND_NULL_HANDLER		402386	709					
ANR	403107	Identifier	ZEND_ASSIGN_SL_SPEC_VAR_CONST_HANDLER		402386	710					
ANR	403108	Identifier	ZEND_ASSIGN_SL_SPEC_VAR_TMPVAR_HANDLER		402386	711					
ANR	403109	Identifier	ZEND_ASSIGN_SL_SPEC_VAR_TMPVAR_HANDLER		402386	712					
ANR	403110	Identifier	ZEND_ASSIGN_SL_SPEC_VAR_UNUSED_HANDLER		402386	713					
ANR	403111	Identifier	ZEND_ASSIGN_SL_SPEC_VAR_CV_HANDLER		402386	714					
ANR	403112	Identifier	ZEND_ASSIGN_SL_SPEC_UNUSED_CONST_HANDLER		402386	715					
ANR	403113	Identifier	ZEND_ASSIGN_SL_SPEC_UNUSED_TMPVAR_HANDLER		402386	716					
ANR	403114	Identifier	ZEND_ASSIGN_SL_SPEC_UNUSED_TMPVAR_HANDLER		402386	717					
ANR	403115	Identifier	ZEND_ASSIGN_SL_SPEC_UNUSED_UNUSED_HANDLER		402386	718					
ANR	403116	Identifier	ZEND_ASSIGN_SL_SPEC_UNUSED_CV_HANDLER		402386	719					
ANR	403117	Identifier	ZEND_ASSIGN_SL_SPEC_CV_CONST_HANDLER		402386	720					
ANR	403118	Identifier	ZEND_ASSIGN_SL_SPEC_CV_TMPVAR_HANDLER		402386	721					
ANR	403119	Identifier	ZEND_ASSIGN_SL_SPEC_CV_TMPVAR_HANDLER		402386	722					
ANR	403120	Identifier	ZEND_ASSIGN_SL_SPEC_CV_UNUSED_HANDLER		402386	723					
ANR	403121	Identifier	ZEND_ASSIGN_SL_SPEC_CV_CV_HANDLER		402386	724					
ANR	403122	Identifier	ZEND_NULL_HANDLER		402386	725					
ANR	403123	Identifier	ZEND_NULL_HANDLER		402386	726					
ANR	403124	Identifier	ZEND_NULL_HANDLER		402386	727					
ANR	403125	Identifier	ZEND_NULL_HANDLER		402386	728					
ANR	403126	Identifier	ZEND_NULL_HANDLER		402386	729					
ANR	403127	Identifier	ZEND_NULL_HANDLER		402386	730					
ANR	403128	Identifier	ZEND_NULL_HANDLER		402386	731					
ANR	403129	Identifier	ZEND_NULL_HANDLER		402386	732					
ANR	403130	Identifier	ZEND_NULL_HANDLER		402386	733					
ANR	403131	Identifier	ZEND_NULL_HANDLER		402386	734					
ANR	403132	Identifier	ZEND_ASSIGN_SR_SPEC_VAR_CONST_HANDLER		402386	735					
ANR	403133	Identifier	ZEND_ASSIGN_SR_SPEC_VAR_TMPVAR_HANDLER		402386	736					
ANR	403134	Identifier	ZEND_ASSIGN_SR_SPEC_VAR_TMPVAR_HANDLER		402386	737					
ANR	403135	Identifier	ZEND_ASSIGN_SR_SPEC_VAR_UNUSED_HANDLER		402386	738					
ANR	403136	Identifier	ZEND_ASSIGN_SR_SPEC_VAR_CV_HANDLER		402386	739					
ANR	403137	Identifier	ZEND_ASSIGN_SR_SPEC_UNUSED_CONST_HANDLER		402386	740					
ANR	403138	Identifier	ZEND_ASSIGN_SR_SPEC_UNUSED_TMPVAR_HANDLER		402386	741					
ANR	403139	Identifier	ZEND_ASSIGN_SR_SPEC_UNUSED_TMPVAR_HANDLER		402386	742					
ANR	403140	Identifier	ZEND_ASSIGN_SR_SPEC_UNUSED_UNUSED_HANDLER		402386	743					
ANR	403141	Identifier	ZEND_ASSIGN_SR_SPEC_UNUSED_CV_HANDLER		402386	744					
ANR	403142	Identifier	ZEND_ASSIGN_SR_SPEC_CV_CONST_HANDLER		402386	745					
ANR	403143	Identifier	ZEND_ASSIGN_SR_SPEC_CV_TMPVAR_HANDLER		402386	746					
ANR	403144	Identifier	ZEND_ASSIGN_SR_SPEC_CV_TMPVAR_HANDLER		402386	747					
ANR	403145	Identifier	ZEND_ASSIGN_SR_SPEC_CV_UNUSED_HANDLER		402386	748					
ANR	403146	Identifier	ZEND_ASSIGN_SR_SPEC_CV_CV_HANDLER		402386	749					
ANR	403147	Identifier	ZEND_NULL_HANDLER		402386	750					
ANR	403148	Identifier	ZEND_NULL_HANDLER		402386	751					
ANR	403149	Identifier	ZEND_NULL_HANDLER		402386	752					
ANR	403150	Identifier	ZEND_NULL_HANDLER		402386	753					
ANR	403151	Identifier	ZEND_NULL_HANDLER		402386	754					
ANR	403152	Identifier	ZEND_NULL_HANDLER		402386	755					
ANR	403153	Identifier	ZEND_NULL_HANDLER		402386	756					
ANR	403154	Identifier	ZEND_NULL_HANDLER		402386	757					
ANR	403155	Identifier	ZEND_NULL_HANDLER		402386	758					
ANR	403156	Identifier	ZEND_NULL_HANDLER		402386	759					
ANR	403157	Identifier	ZEND_ASSIGN_CONCAT_SPEC_VAR_CONST_HANDLER		402386	760					
ANR	403158	Identifier	ZEND_ASSIGN_CONCAT_SPEC_VAR_TMPVAR_HANDLER		402386	761					
ANR	403159	Identifier	ZEND_ASSIGN_CONCAT_SPEC_VAR_TMPVAR_HANDLER		402386	762					
ANR	403160	Identifier	ZEND_ASSIGN_CONCAT_SPEC_VAR_UNUSED_HANDLER		402386	763					
ANR	403161	Identifier	ZEND_ASSIGN_CONCAT_SPEC_VAR_CV_HANDLER		402386	764					
ANR	403162	Identifier	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_CONST_HANDLER		402386	765					
ANR	403163	Identifier	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_TMPVAR_HANDLER		402386	766					
ANR	403164	Identifier	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_TMPVAR_HANDLER		402386	767					
ANR	403165	Identifier	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_UNUSED_HANDLER		402386	768					
ANR	403166	Identifier	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_CV_HANDLER		402386	769					
ANR	403167	Identifier	ZEND_ASSIGN_CONCAT_SPEC_CV_CONST_HANDLER		402386	770					
ANR	403168	Identifier	ZEND_ASSIGN_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386	771					
ANR	403169	Identifier	ZEND_ASSIGN_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386	772					
ANR	403170	Identifier	ZEND_ASSIGN_CONCAT_SPEC_CV_UNUSED_HANDLER		402386	773					
ANR	403171	Identifier	ZEND_ASSIGN_CONCAT_SPEC_CV_CV_HANDLER		402386	774					
ANR	403172	Identifier	ZEND_NULL_HANDLER		402386	775					
ANR	403173	Identifier	ZEND_NULL_HANDLER		402386	776					
ANR	403174	Identifier	ZEND_NULL_HANDLER		402386	777					
ANR	403175	Identifier	ZEND_NULL_HANDLER		402386	778					
ANR	403176	Identifier	ZEND_NULL_HANDLER		402386	779					
ANR	403177	Identifier	ZEND_NULL_HANDLER		402386	780					
ANR	403178	Identifier	ZEND_NULL_HANDLER		402386	781					
ANR	403179	Identifier	ZEND_NULL_HANDLER		402386	782					
ANR	403180	Identifier	ZEND_NULL_HANDLER		402386	783					
ANR	403181	Identifier	ZEND_NULL_HANDLER		402386	784					
ANR	403182	Identifier	ZEND_ASSIGN_BW_OR_SPEC_VAR_CONST_HANDLER		402386	785					
ANR	403183	Identifier	ZEND_ASSIGN_BW_OR_SPEC_VAR_TMPVAR_HANDLER		402386	786					
ANR	403184	Identifier	ZEND_ASSIGN_BW_OR_SPEC_VAR_TMPVAR_HANDLER		402386	787					
ANR	403185	Identifier	ZEND_ASSIGN_BW_OR_SPEC_VAR_UNUSED_HANDLER		402386	788					
ANR	403186	Identifier	ZEND_ASSIGN_BW_OR_SPEC_VAR_CV_HANDLER		402386	789					
ANR	403187	Identifier	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_CONST_HANDLER		402386	790					
ANR	403188	Identifier	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_TMPVAR_HANDLER		402386	791					
ANR	403189	Identifier	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_TMPVAR_HANDLER		402386	792					
ANR	403190	Identifier	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_UNUSED_HANDLER		402386	793					
ANR	403191	Identifier	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_CV_HANDLER		402386	794					
ANR	403192	Identifier	ZEND_ASSIGN_BW_OR_SPEC_CV_CONST_HANDLER		402386	795					
ANR	403193	Identifier	ZEND_ASSIGN_BW_OR_SPEC_CV_TMPVAR_HANDLER		402386	796					
ANR	403194	Identifier	ZEND_ASSIGN_BW_OR_SPEC_CV_TMPVAR_HANDLER		402386	797					
ANR	403195	Identifier	ZEND_ASSIGN_BW_OR_SPEC_CV_UNUSED_HANDLER		402386	798					
ANR	403196	Identifier	ZEND_ASSIGN_BW_OR_SPEC_CV_CV_HANDLER		402386	799					
ANR	403197	Identifier	ZEND_NULL_HANDLER		402386	800					
ANR	403198	Identifier	ZEND_NULL_HANDLER		402386	801					
ANR	403199	Identifier	ZEND_NULL_HANDLER		402386	802					
ANR	403200	Identifier	ZEND_NULL_HANDLER		402386	803					
ANR	403201	Identifier	ZEND_NULL_HANDLER		402386	804					
ANR	403202	Identifier	ZEND_NULL_HANDLER		402386	805					
ANR	403203	Identifier	ZEND_NULL_HANDLER		402386	806					
ANR	403204	Identifier	ZEND_NULL_HANDLER		402386	807					
ANR	403205	Identifier	ZEND_NULL_HANDLER		402386	808					
ANR	403206	Identifier	ZEND_NULL_HANDLER		402386	809					
ANR	403207	Identifier	ZEND_ASSIGN_BW_AND_SPEC_VAR_CONST_HANDLER		402386	810					
ANR	403208	Identifier	ZEND_ASSIGN_BW_AND_SPEC_VAR_TMPVAR_HANDLER		402386	811					
ANR	403209	Identifier	ZEND_ASSIGN_BW_AND_SPEC_VAR_TMPVAR_HANDLER		402386	812					
ANR	403210	Identifier	ZEND_ASSIGN_BW_AND_SPEC_VAR_UNUSED_HANDLER		402386	813					
ANR	403211	Identifier	ZEND_ASSIGN_BW_AND_SPEC_VAR_CV_HANDLER		402386	814					
ANR	403212	Identifier	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_CONST_HANDLER		402386	815					
ANR	403213	Identifier	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_TMPVAR_HANDLER		402386	816					
ANR	403214	Identifier	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_TMPVAR_HANDLER		402386	817					
ANR	403215	Identifier	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_UNUSED_HANDLER		402386	818					
ANR	403216	Identifier	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_CV_HANDLER		402386	819					
ANR	403217	Identifier	ZEND_ASSIGN_BW_AND_SPEC_CV_CONST_HANDLER		402386	820					
ANR	403218	Identifier	ZEND_ASSIGN_BW_AND_SPEC_CV_TMPVAR_HANDLER		402386	821					
ANR	403219	Identifier	ZEND_ASSIGN_BW_AND_SPEC_CV_TMPVAR_HANDLER		402386	822					
ANR	403220	Identifier	ZEND_ASSIGN_BW_AND_SPEC_CV_UNUSED_HANDLER		402386	823					
ANR	403221	Identifier	ZEND_ASSIGN_BW_AND_SPEC_CV_CV_HANDLER		402386	824					
ANR	403222	Identifier	ZEND_NULL_HANDLER		402386	825					
ANR	403223	Identifier	ZEND_NULL_HANDLER		402386	826					
ANR	403224	Identifier	ZEND_NULL_HANDLER		402386	827					
ANR	403225	Identifier	ZEND_NULL_HANDLER		402386	828					
ANR	403226	Identifier	ZEND_NULL_HANDLER		402386	829					
ANR	403227	Identifier	ZEND_NULL_HANDLER		402386	830					
ANR	403228	Identifier	ZEND_NULL_HANDLER		402386	831					
ANR	403229	Identifier	ZEND_NULL_HANDLER		402386	832					
ANR	403230	Identifier	ZEND_NULL_HANDLER		402386	833					
ANR	403231	Identifier	ZEND_NULL_HANDLER		402386	834					
ANR	403232	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_VAR_CONST_HANDLER		402386	835					
ANR	403233	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_VAR_TMPVAR_HANDLER		402386	836					
ANR	403234	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_VAR_TMPVAR_HANDLER		402386	837					
ANR	403235	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_VAR_UNUSED_HANDLER		402386	838					
ANR	403236	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_VAR_CV_HANDLER		402386	839					
ANR	403237	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_CONST_HANDLER		402386	840					
ANR	403238	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_TMPVAR_HANDLER		402386	841					
ANR	403239	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_TMPVAR_HANDLER		402386	842					
ANR	403240	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_UNUSED_HANDLER		402386	843					
ANR	403241	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_CV_HANDLER		402386	844					
ANR	403242	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_CV_CONST_HANDLER		402386	845					
ANR	403243	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_CV_TMPVAR_HANDLER		402386	846					
ANR	403244	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_CV_TMPVAR_HANDLER		402386	847					
ANR	403245	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_CV_UNUSED_HANDLER		402386	848					
ANR	403246	Identifier	ZEND_ASSIGN_BW_XOR_SPEC_CV_CV_HANDLER		402386	849					
ANR	403247	Identifier	ZEND_NULL_HANDLER		402386	850					
ANR	403248	Identifier	ZEND_NULL_HANDLER		402386	851					
ANR	403249	Identifier	ZEND_NULL_HANDLER		402386	852					
ANR	403250	Identifier	ZEND_NULL_HANDLER		402386	853					
ANR	403251	Identifier	ZEND_NULL_HANDLER		402386	854					
ANR	403252	Identifier	ZEND_NULL_HANDLER		402386	855					
ANR	403253	Identifier	ZEND_NULL_HANDLER		402386	856					
ANR	403254	Identifier	ZEND_NULL_HANDLER		402386	857					
ANR	403255	Identifier	ZEND_NULL_HANDLER		402386	858					
ANR	403256	Identifier	ZEND_NULL_HANDLER		402386	859					
ANR	403257	Identifier	ZEND_PRE_INC_SPEC_VAR_HANDLER		402386	860					
ANR	403258	Identifier	ZEND_PRE_INC_SPEC_VAR_HANDLER		402386	861					
ANR	403259	Identifier	ZEND_PRE_INC_SPEC_VAR_HANDLER		402386	862					
ANR	403260	Identifier	ZEND_PRE_INC_SPEC_VAR_HANDLER		402386	863					
ANR	403261	Identifier	ZEND_PRE_INC_SPEC_VAR_HANDLER		402386	864					
ANR	403262	Identifier	ZEND_NULL_HANDLER		402386	865					
ANR	403263	Identifier	ZEND_NULL_HANDLER		402386	866					
ANR	403264	Identifier	ZEND_NULL_HANDLER		402386	867					
ANR	403265	Identifier	ZEND_NULL_HANDLER		402386	868					
ANR	403266	Identifier	ZEND_NULL_HANDLER		402386	869					
ANR	403267	Identifier	ZEND_PRE_INC_SPEC_CV_HANDLER		402386	870					
ANR	403268	Identifier	ZEND_PRE_INC_SPEC_CV_HANDLER		402386	871					
ANR	403269	Identifier	ZEND_PRE_INC_SPEC_CV_HANDLER		402386	872					
ANR	403270	Identifier	ZEND_PRE_INC_SPEC_CV_HANDLER		402386	873					
ANR	403271	Identifier	ZEND_PRE_INC_SPEC_CV_HANDLER		402386	874					
ANR	403272	Identifier	ZEND_NULL_HANDLER		402386	875					
ANR	403273	Identifier	ZEND_NULL_HANDLER		402386	876					
ANR	403274	Identifier	ZEND_NULL_HANDLER		402386	877					
ANR	403275	Identifier	ZEND_NULL_HANDLER		402386	878					
ANR	403276	Identifier	ZEND_NULL_HANDLER		402386	879					
ANR	403277	Identifier	ZEND_NULL_HANDLER		402386	880					
ANR	403278	Identifier	ZEND_NULL_HANDLER		402386	881					
ANR	403279	Identifier	ZEND_NULL_HANDLER		402386	882					
ANR	403280	Identifier	ZEND_NULL_HANDLER		402386	883					
ANR	403281	Identifier	ZEND_NULL_HANDLER		402386	884					
ANR	403282	Identifier	ZEND_PRE_DEC_SPEC_VAR_HANDLER		402386	885					
ANR	403283	Identifier	ZEND_PRE_DEC_SPEC_VAR_HANDLER		402386	886					
ANR	403284	Identifier	ZEND_PRE_DEC_SPEC_VAR_HANDLER		402386	887					
ANR	403285	Identifier	ZEND_PRE_DEC_SPEC_VAR_HANDLER		402386	888					
ANR	403286	Identifier	ZEND_PRE_DEC_SPEC_VAR_HANDLER		402386	889					
ANR	403287	Identifier	ZEND_NULL_HANDLER		402386	890					
ANR	403288	Identifier	ZEND_NULL_HANDLER		402386	891					
ANR	403289	Identifier	ZEND_NULL_HANDLER		402386	892					
ANR	403290	Identifier	ZEND_NULL_HANDLER		402386	893					
ANR	403291	Identifier	ZEND_NULL_HANDLER		402386	894					
ANR	403292	Identifier	ZEND_PRE_DEC_SPEC_CV_HANDLER		402386	895					
ANR	403293	Identifier	ZEND_PRE_DEC_SPEC_CV_HANDLER		402386	896					
ANR	403294	Identifier	ZEND_PRE_DEC_SPEC_CV_HANDLER		402386	897					
ANR	403295	Identifier	ZEND_PRE_DEC_SPEC_CV_HANDLER		402386	898					
ANR	403296	Identifier	ZEND_PRE_DEC_SPEC_CV_HANDLER		402386	899					
ANR	403297	Identifier	ZEND_NULL_HANDLER		402386	900					
ANR	403298	Identifier	ZEND_NULL_HANDLER		402386	901					
ANR	403299	Identifier	ZEND_NULL_HANDLER		402386	902					
ANR	403300	Identifier	ZEND_NULL_HANDLER		402386	903					
ANR	403301	Identifier	ZEND_NULL_HANDLER		402386	904					
ANR	403302	Identifier	ZEND_NULL_HANDLER		402386	905					
ANR	403303	Identifier	ZEND_NULL_HANDLER		402386	906					
ANR	403304	Identifier	ZEND_NULL_HANDLER		402386	907					
ANR	403305	Identifier	ZEND_NULL_HANDLER		402386	908					
ANR	403306	Identifier	ZEND_NULL_HANDLER		402386	909					
ANR	403307	Identifier	ZEND_POST_INC_SPEC_VAR_HANDLER		402386	910					
ANR	403308	Identifier	ZEND_POST_INC_SPEC_VAR_HANDLER		402386	911					
ANR	403309	Identifier	ZEND_POST_INC_SPEC_VAR_HANDLER		402386	912					
ANR	403310	Identifier	ZEND_POST_INC_SPEC_VAR_HANDLER		402386	913					
ANR	403311	Identifier	ZEND_POST_INC_SPEC_VAR_HANDLER		402386	914					
ANR	403312	Identifier	ZEND_NULL_HANDLER		402386	915					
ANR	403313	Identifier	ZEND_NULL_HANDLER		402386	916					
ANR	403314	Identifier	ZEND_NULL_HANDLER		402386	917					
ANR	403315	Identifier	ZEND_NULL_HANDLER		402386	918					
ANR	403316	Identifier	ZEND_NULL_HANDLER		402386	919					
ANR	403317	Identifier	ZEND_POST_INC_SPEC_CV_HANDLER		402386	920					
ANR	403318	Identifier	ZEND_POST_INC_SPEC_CV_HANDLER		402386	921					
ANR	403319	Identifier	ZEND_POST_INC_SPEC_CV_HANDLER		402386	922					
ANR	403320	Identifier	ZEND_POST_INC_SPEC_CV_HANDLER		402386	923					
ANR	403321	Identifier	ZEND_POST_INC_SPEC_CV_HANDLER		402386	924					
ANR	403322	Identifier	ZEND_NULL_HANDLER		402386	925					
ANR	403323	Identifier	ZEND_NULL_HANDLER		402386	926					
ANR	403324	Identifier	ZEND_NULL_HANDLER		402386	927					
ANR	403325	Identifier	ZEND_NULL_HANDLER		402386	928					
ANR	403326	Identifier	ZEND_NULL_HANDLER		402386	929					
ANR	403327	Identifier	ZEND_NULL_HANDLER		402386	930					
ANR	403328	Identifier	ZEND_NULL_HANDLER		402386	931					
ANR	403329	Identifier	ZEND_NULL_HANDLER		402386	932					
ANR	403330	Identifier	ZEND_NULL_HANDLER		402386	933					
ANR	403331	Identifier	ZEND_NULL_HANDLER		402386	934					
ANR	403332	Identifier	ZEND_POST_DEC_SPEC_VAR_HANDLER		402386	935					
ANR	403333	Identifier	ZEND_POST_DEC_SPEC_VAR_HANDLER		402386	936					
ANR	403334	Identifier	ZEND_POST_DEC_SPEC_VAR_HANDLER		402386	937					
ANR	403335	Identifier	ZEND_POST_DEC_SPEC_VAR_HANDLER		402386	938					
ANR	403336	Identifier	ZEND_POST_DEC_SPEC_VAR_HANDLER		402386	939					
ANR	403337	Identifier	ZEND_NULL_HANDLER		402386	940					
ANR	403338	Identifier	ZEND_NULL_HANDLER		402386	941					
ANR	403339	Identifier	ZEND_NULL_HANDLER		402386	942					
ANR	403340	Identifier	ZEND_NULL_HANDLER		402386	943					
ANR	403341	Identifier	ZEND_NULL_HANDLER		402386	944					
ANR	403342	Identifier	ZEND_POST_DEC_SPEC_CV_HANDLER		402386	945					
ANR	403343	Identifier	ZEND_POST_DEC_SPEC_CV_HANDLER		402386	946					
ANR	403344	Identifier	ZEND_POST_DEC_SPEC_CV_HANDLER		402386	947					
ANR	403345	Identifier	ZEND_POST_DEC_SPEC_CV_HANDLER		402386	948					
ANR	403346	Identifier	ZEND_POST_DEC_SPEC_CV_HANDLER		402386	949					
ANR	403347	Identifier	ZEND_NULL_HANDLER		402386	950					
ANR	403348	Identifier	ZEND_NULL_HANDLER		402386	951					
ANR	403349	Identifier	ZEND_NULL_HANDLER		402386	952					
ANR	403350	Identifier	ZEND_NULL_HANDLER		402386	953					
ANR	403351	Identifier	ZEND_NULL_HANDLER		402386	954					
ANR	403352	Identifier	ZEND_NULL_HANDLER		402386	955					
ANR	403353	Identifier	ZEND_NULL_HANDLER		402386	956					
ANR	403354	Identifier	ZEND_NULL_HANDLER		402386	957					
ANR	403355	Identifier	ZEND_NULL_HANDLER		402386	958					
ANR	403356	Identifier	ZEND_NULL_HANDLER		402386	959					
ANR	403357	Identifier	ZEND_ASSIGN_SPEC_VAR_CONST_HANDLER		402386	960					
ANR	403358	Identifier	ZEND_ASSIGN_SPEC_VAR_TMP_HANDLER		402386	961					
ANR	403359	Identifier	ZEND_ASSIGN_SPEC_VAR_VAR_HANDLER		402386	962					
ANR	403360	Identifier	ZEND_NULL_HANDLER		402386	963					
ANR	403361	Identifier	ZEND_ASSIGN_SPEC_VAR_CV_HANDLER		402386	964					
ANR	403362	Identifier	ZEND_NULL_HANDLER		402386	965					
ANR	403363	Identifier	ZEND_NULL_HANDLER		402386	966					
ANR	403364	Identifier	ZEND_NULL_HANDLER		402386	967					
ANR	403365	Identifier	ZEND_NULL_HANDLER		402386	968					
ANR	403366	Identifier	ZEND_NULL_HANDLER		402386	969					
ANR	403367	Identifier	ZEND_ASSIGN_SPEC_CV_CONST_HANDLER		402386	970					
ANR	403368	Identifier	ZEND_ASSIGN_SPEC_CV_TMP_HANDLER		402386	971					
ANR	403369	Identifier	ZEND_ASSIGN_SPEC_CV_VAR_HANDLER		402386	972					
ANR	403370	Identifier	ZEND_NULL_HANDLER		402386	973					
ANR	403371	Identifier	ZEND_ASSIGN_SPEC_CV_CV_HANDLER		402386	974					
ANR	403372	Identifier	ZEND_NULL_HANDLER		402386	975					
ANR	403373	Identifier	ZEND_NULL_HANDLER		402386	976					
ANR	403374	Identifier	ZEND_NULL_HANDLER		402386	977					
ANR	403375	Identifier	ZEND_NULL_HANDLER		402386	978					
ANR	403376	Identifier	ZEND_NULL_HANDLER		402386	979					
ANR	403377	Identifier	ZEND_NULL_HANDLER		402386	980					
ANR	403378	Identifier	ZEND_NULL_HANDLER		402386	981					
ANR	403379	Identifier	ZEND_NULL_HANDLER		402386	982					
ANR	403380	Identifier	ZEND_NULL_HANDLER		402386	983					
ANR	403381	Identifier	ZEND_NULL_HANDLER		402386	984					
ANR	403382	Identifier	ZEND_NULL_HANDLER		402386	985					
ANR	403383	Identifier	ZEND_NULL_HANDLER		402386	986					
ANR	403384	Identifier	ZEND_ASSIGN_REF_SPEC_VAR_VAR_HANDLER		402386	987					
ANR	403385	Identifier	ZEND_NULL_HANDLER		402386	988					
ANR	403386	Identifier	ZEND_ASSIGN_REF_SPEC_VAR_CV_HANDLER		402386	989					
ANR	403387	Identifier	ZEND_NULL_HANDLER		402386	990					
ANR	403388	Identifier	ZEND_NULL_HANDLER		402386	991					
ANR	403389	Identifier	ZEND_NULL_HANDLER		402386	992					
ANR	403390	Identifier	ZEND_NULL_HANDLER		402386	993					
ANR	403391	Identifier	ZEND_NULL_HANDLER		402386	994					
ANR	403392	Identifier	ZEND_NULL_HANDLER		402386	995					
ANR	403393	Identifier	ZEND_NULL_HANDLER		402386	996					
ANR	403394	Identifier	ZEND_ASSIGN_REF_SPEC_CV_VAR_HANDLER		402386	997					
ANR	403395	Identifier	ZEND_NULL_HANDLER		402386	998					
ANR	403396	Identifier	ZEND_ASSIGN_REF_SPEC_CV_CV_HANDLER		402386	999					
ANR	403397	Identifier	ZEND_ECHO_SPEC_CONST_HANDLER		402386	1000					
ANR	403398	Identifier	ZEND_ECHO_SPEC_CONST_HANDLER		402386	1001					
ANR	403399	Identifier	ZEND_ECHO_SPEC_CONST_HANDLER		402386	1002					
ANR	403400	Identifier	ZEND_ECHO_SPEC_CONST_HANDLER		402386	1003					
ANR	403401	Identifier	ZEND_ECHO_SPEC_CONST_HANDLER		402386	1004					
ANR	403402	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1005					
ANR	403403	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1006					
ANR	403404	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1007					
ANR	403405	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1008					
ANR	403406	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1009					
ANR	403407	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1010					
ANR	403408	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1011					
ANR	403409	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1012					
ANR	403410	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1013					
ANR	403411	Identifier	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386	1014					
ANR	403412	Identifier	ZEND_NULL_HANDLER		402386	1015					
ANR	403413	Identifier	ZEND_NULL_HANDLER		402386	1016					
ANR	403414	Identifier	ZEND_NULL_HANDLER		402386	1017					
ANR	403415	Identifier	ZEND_NULL_HANDLER		402386	1018					
ANR	403416	Identifier	ZEND_NULL_HANDLER		402386	1019					
ANR	403417	Identifier	ZEND_ECHO_SPEC_CV_HANDLER		402386	1020					
ANR	403418	Identifier	ZEND_ECHO_SPEC_CV_HANDLER		402386	1021					
ANR	403419	Identifier	ZEND_ECHO_SPEC_CV_HANDLER		402386	1022					
ANR	403420	Identifier	ZEND_ECHO_SPEC_CV_HANDLER		402386	1023					
ANR	403421	Identifier	ZEND_ECHO_SPEC_CV_HANDLER		402386	1024					
ANR	403422	Identifier	ZEND_NULL_HANDLER		402386	1025					
ANR	403423	Identifier	ZEND_NULL_HANDLER		402386	1026					
ANR	403424	Identifier	ZEND_NULL_HANDLER		402386	1027					
ANR	403425	Identifier	ZEND_NULL_HANDLER		402386	1028					
ANR	403426	Identifier	ZEND_NULL_HANDLER		402386	1029					
ANR	403427	Identifier	ZEND_NULL_HANDLER		402386	1030					
ANR	403428	Identifier	ZEND_NULL_HANDLER		402386	1031					
ANR	403429	Identifier	ZEND_NULL_HANDLER		402386	1032					
ANR	403430	Identifier	ZEND_NULL_HANDLER		402386	1033					
ANR	403431	Identifier	ZEND_NULL_HANDLER		402386	1034					
ANR	403432	Identifier	ZEND_NULL_HANDLER		402386	1035					
ANR	403433	Identifier	ZEND_NULL_HANDLER		402386	1036					
ANR	403434	Identifier	ZEND_NULL_HANDLER		402386	1037					
ANR	403435	Identifier	ZEND_NULL_HANDLER		402386	1038					
ANR	403436	Identifier	ZEND_NULL_HANDLER		402386	1039					
ANR	403437	Identifier	ZEND_NULL_HANDLER		402386	1040					
ANR	403438	Identifier	ZEND_NULL_HANDLER		402386	1041					
ANR	403439	Identifier	ZEND_NULL_HANDLER		402386	1042					
ANR	403440	Identifier	ZEND_NULL_HANDLER		402386	1043					
ANR	403441	Identifier	ZEND_NULL_HANDLER		402386	1044					
ANR	403442	Identifier	ZEND_NULL_HANDLER		402386	1045					
ANR	403443	Identifier	ZEND_NULL_HANDLER		402386	1046					
ANR	403444	Identifier	ZEND_NULL_HANDLER		402386	1047					
ANR	403445	Identifier	ZEND_NULL_HANDLER		402386	1048					
ANR	403446	Identifier	ZEND_NULL_HANDLER		402386	1049					
ANR	403447	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1050					
ANR	403448	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1051					
ANR	403449	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1052					
ANR	403450	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1053					
ANR	403451	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1054					
ANR	403452	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1055					
ANR	403453	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1056					
ANR	403454	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1057					
ANR	403455	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1058					
ANR	403456	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1059					
ANR	403457	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1060					
ANR	403458	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1061					
ANR	403459	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1062					
ANR	403460	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1063					
ANR	403461	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1064					
ANR	403462	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1065					
ANR	403463	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1066					
ANR	403464	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1067					
ANR	403465	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1068					
ANR	403466	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1069					
ANR	403467	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1070					
ANR	403468	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1071					
ANR	403469	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1072					
ANR	403470	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1073					
ANR	403471	Identifier	ZEND_JMP_SPEC_HANDLER		402386	1074					
ANR	403472	Identifier	ZEND_JMPZ_SPEC_CONST_HANDLER		402386	1075					
ANR	403473	Identifier	ZEND_JMPZ_SPEC_CONST_HANDLER		402386	1076					
ANR	403474	Identifier	ZEND_JMPZ_SPEC_CONST_HANDLER		402386	1077					
ANR	403475	Identifier	ZEND_JMPZ_SPEC_CONST_HANDLER		402386	1078					
ANR	403476	Identifier	ZEND_JMPZ_SPEC_CONST_HANDLER		402386	1079					
ANR	403477	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1080					
ANR	403478	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1081					
ANR	403479	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1082					
ANR	403480	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1083					
ANR	403481	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1084					
ANR	403482	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1085					
ANR	403483	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1086					
ANR	403484	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1087					
ANR	403485	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1088					
ANR	403486	Identifier	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386	1089					
ANR	403487	Identifier	ZEND_NULL_HANDLER		402386	1090					
ANR	403488	Identifier	ZEND_NULL_HANDLER		402386	1091					
ANR	403489	Identifier	ZEND_NULL_HANDLER		402386	1092					
ANR	403490	Identifier	ZEND_NULL_HANDLER		402386	1093					
ANR	403491	Identifier	ZEND_NULL_HANDLER		402386	1094					
ANR	403492	Identifier	ZEND_JMPZ_SPEC_CV_HANDLER		402386	1095					
ANR	403493	Identifier	ZEND_JMPZ_SPEC_CV_HANDLER		402386	1096					
ANR	403494	Identifier	ZEND_JMPZ_SPEC_CV_HANDLER		402386	1097					
ANR	403495	Identifier	ZEND_JMPZ_SPEC_CV_HANDLER		402386	1098					
ANR	403496	Identifier	ZEND_JMPZ_SPEC_CV_HANDLER		402386	1099					
ANR	403497	Identifier	ZEND_JMPNZ_SPEC_CONST_HANDLER		402386	1100					
ANR	403498	Identifier	ZEND_JMPNZ_SPEC_CONST_HANDLER		402386	1101					
ANR	403499	Identifier	ZEND_JMPNZ_SPEC_CONST_HANDLER		402386	1102					
ANR	403500	Identifier	ZEND_JMPNZ_SPEC_CONST_HANDLER		402386	1103					
ANR	403501	Identifier	ZEND_JMPNZ_SPEC_CONST_HANDLER		402386	1104					
ANR	403502	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1105					
ANR	403503	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1106					
ANR	403504	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1107					
ANR	403505	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1108					
ANR	403506	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1109					
ANR	403507	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1110					
ANR	403508	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1111					
ANR	403509	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1112					
ANR	403510	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1113					
ANR	403511	Identifier	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386	1114					
ANR	403512	Identifier	ZEND_NULL_HANDLER		402386	1115					
ANR	403513	Identifier	ZEND_NULL_HANDLER		402386	1116					
ANR	403514	Identifier	ZEND_NULL_HANDLER		402386	1117					
ANR	403515	Identifier	ZEND_NULL_HANDLER		402386	1118					
ANR	403516	Identifier	ZEND_NULL_HANDLER		402386	1119					
ANR	403517	Identifier	ZEND_JMPNZ_SPEC_CV_HANDLER		402386	1120					
ANR	403518	Identifier	ZEND_JMPNZ_SPEC_CV_HANDLER		402386	1121					
ANR	403519	Identifier	ZEND_JMPNZ_SPEC_CV_HANDLER		402386	1122					
ANR	403520	Identifier	ZEND_JMPNZ_SPEC_CV_HANDLER		402386	1123					
ANR	403521	Identifier	ZEND_JMPNZ_SPEC_CV_HANDLER		402386	1124					
ANR	403522	Identifier	ZEND_JMPZNZ_SPEC_CONST_HANDLER		402386	1125					
ANR	403523	Identifier	ZEND_JMPZNZ_SPEC_CONST_HANDLER		402386	1126					
ANR	403524	Identifier	ZEND_JMPZNZ_SPEC_CONST_HANDLER		402386	1127					
ANR	403525	Identifier	ZEND_JMPZNZ_SPEC_CONST_HANDLER		402386	1128					
ANR	403526	Identifier	ZEND_JMPZNZ_SPEC_CONST_HANDLER		402386	1129					
ANR	403527	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1130					
ANR	403528	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1131					
ANR	403529	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1132					
ANR	403530	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1133					
ANR	403531	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1134					
ANR	403532	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1135					
ANR	403533	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1136					
ANR	403534	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1137					
ANR	403535	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1138					
ANR	403536	Identifier	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386	1139					
ANR	403537	Identifier	ZEND_NULL_HANDLER		402386	1140					
ANR	403538	Identifier	ZEND_NULL_HANDLER		402386	1141					
ANR	403539	Identifier	ZEND_NULL_HANDLER		402386	1142					
ANR	403540	Identifier	ZEND_NULL_HANDLER		402386	1143					
ANR	403541	Identifier	ZEND_NULL_HANDLER		402386	1144					
ANR	403542	Identifier	ZEND_JMPZNZ_SPEC_CV_HANDLER		402386	1145					
ANR	403543	Identifier	ZEND_JMPZNZ_SPEC_CV_HANDLER		402386	1146					
ANR	403544	Identifier	ZEND_JMPZNZ_SPEC_CV_HANDLER		402386	1147					
ANR	403545	Identifier	ZEND_JMPZNZ_SPEC_CV_HANDLER		402386	1148					
ANR	403546	Identifier	ZEND_JMPZNZ_SPEC_CV_HANDLER		402386	1149					
ANR	403547	Identifier	ZEND_JMPZ_EX_SPEC_CONST_HANDLER		402386	1150					
ANR	403548	Identifier	ZEND_JMPZ_EX_SPEC_CONST_HANDLER		402386	1151					
ANR	403549	Identifier	ZEND_JMPZ_EX_SPEC_CONST_HANDLER		402386	1152					
ANR	403550	Identifier	ZEND_JMPZ_EX_SPEC_CONST_HANDLER		402386	1153					
ANR	403551	Identifier	ZEND_JMPZ_EX_SPEC_CONST_HANDLER		402386	1154					
ANR	403552	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1155					
ANR	403553	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1156					
ANR	403554	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1157					
ANR	403555	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1158					
ANR	403556	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1159					
ANR	403557	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1160					
ANR	403558	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1161					
ANR	403559	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1162					
ANR	403560	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1163					
ANR	403561	Identifier	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386	1164					
ANR	403562	Identifier	ZEND_NULL_HANDLER		402386	1165					
ANR	403563	Identifier	ZEND_NULL_HANDLER		402386	1166					
ANR	403564	Identifier	ZEND_NULL_HANDLER		402386	1167					
ANR	403565	Identifier	ZEND_NULL_HANDLER		402386	1168					
ANR	403566	Identifier	ZEND_NULL_HANDLER		402386	1169					
ANR	403567	Identifier	ZEND_JMPZ_EX_SPEC_CV_HANDLER		402386	1170					
ANR	403568	Identifier	ZEND_JMPZ_EX_SPEC_CV_HANDLER		402386	1171					
ANR	403569	Identifier	ZEND_JMPZ_EX_SPEC_CV_HANDLER		402386	1172					
ANR	403570	Identifier	ZEND_JMPZ_EX_SPEC_CV_HANDLER		402386	1173					
ANR	403571	Identifier	ZEND_JMPZ_EX_SPEC_CV_HANDLER		402386	1174					
ANR	403572	Identifier	ZEND_JMPNZ_EX_SPEC_CONST_HANDLER		402386	1175					
ANR	403573	Identifier	ZEND_JMPNZ_EX_SPEC_CONST_HANDLER		402386	1176					
ANR	403574	Identifier	ZEND_JMPNZ_EX_SPEC_CONST_HANDLER		402386	1177					
ANR	403575	Identifier	ZEND_JMPNZ_EX_SPEC_CONST_HANDLER		402386	1178					
ANR	403576	Identifier	ZEND_JMPNZ_EX_SPEC_CONST_HANDLER		402386	1179					
ANR	403577	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1180					
ANR	403578	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1181					
ANR	403579	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1182					
ANR	403580	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1183					
ANR	403581	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1184					
ANR	403582	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1185					
ANR	403583	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1186					
ANR	403584	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1187					
ANR	403585	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1188					
ANR	403586	Identifier	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386	1189					
ANR	403587	Identifier	ZEND_NULL_HANDLER		402386	1190					
ANR	403588	Identifier	ZEND_NULL_HANDLER		402386	1191					
ANR	403589	Identifier	ZEND_NULL_HANDLER		402386	1192					
ANR	403590	Identifier	ZEND_NULL_HANDLER		402386	1193					
ANR	403591	Identifier	ZEND_NULL_HANDLER		402386	1194					
ANR	403592	Identifier	ZEND_JMPNZ_EX_SPEC_CV_HANDLER		402386	1195					
ANR	403593	Identifier	ZEND_JMPNZ_EX_SPEC_CV_HANDLER		402386	1196					
ANR	403594	Identifier	ZEND_JMPNZ_EX_SPEC_CV_HANDLER		402386	1197					
ANR	403595	Identifier	ZEND_JMPNZ_EX_SPEC_CV_HANDLER		402386	1198					
ANR	403596	Identifier	ZEND_JMPNZ_EX_SPEC_CV_HANDLER		402386	1199					
ANR	403597	Identifier	ZEND_CASE_SPEC_CONST_CONST_HANDLER		402386	1200					
ANR	403598	Identifier	ZEND_CASE_SPEC_CONST_TMPVAR_HANDLER		402386	1201					
ANR	403599	Identifier	ZEND_CASE_SPEC_CONST_TMPVAR_HANDLER		402386	1202					
ANR	403600	Identifier	ZEND_NULL_HANDLER		402386	1203					
ANR	403601	Identifier	ZEND_CASE_SPEC_CONST_CV_HANDLER		402386	1204					
ANR	403602	Identifier	ZEND_CASE_SPEC_TMPVAR_CONST_HANDLER		402386	1205					
ANR	403603	Identifier	ZEND_CASE_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1206					
ANR	403604	Identifier	ZEND_CASE_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1207					
ANR	403605	Identifier	ZEND_NULL_HANDLER		402386	1208					
ANR	403606	Identifier	ZEND_CASE_SPEC_TMPVAR_CV_HANDLER		402386	1209					
ANR	403607	Identifier	ZEND_CASE_SPEC_TMPVAR_CONST_HANDLER		402386	1210					
ANR	403608	Identifier	ZEND_CASE_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1211					
ANR	403609	Identifier	ZEND_CASE_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1212					
ANR	403610	Identifier	ZEND_NULL_HANDLER		402386	1213					
ANR	403611	Identifier	ZEND_CASE_SPEC_TMPVAR_CV_HANDLER		402386	1214					
ANR	403612	Identifier	ZEND_NULL_HANDLER		402386	1215					
ANR	403613	Identifier	ZEND_NULL_HANDLER		402386	1216					
ANR	403614	Identifier	ZEND_NULL_HANDLER		402386	1217					
ANR	403615	Identifier	ZEND_NULL_HANDLER		402386	1218					
ANR	403616	Identifier	ZEND_NULL_HANDLER		402386	1219					
ANR	403617	Identifier	ZEND_CASE_SPEC_CV_CONST_HANDLER		402386	1220					
ANR	403618	Identifier	ZEND_CASE_SPEC_CV_TMPVAR_HANDLER		402386	1221					
ANR	403619	Identifier	ZEND_CASE_SPEC_CV_TMPVAR_HANDLER		402386	1222					
ANR	403620	Identifier	ZEND_NULL_HANDLER		402386	1223					
ANR	403621	Identifier	ZEND_CASE_SPEC_CV_CV_HANDLER		402386	1224					
ANR	403622	Identifier	ZEND_NULL_HANDLER		402386	1225					
ANR	403623	Identifier	ZEND_NULL_HANDLER		402386	1226					
ANR	403624	Identifier	ZEND_NULL_HANDLER		402386	1227					
ANR	403625	Identifier	ZEND_NULL_HANDLER		402386	1228					
ANR	403626	Identifier	ZEND_NULL_HANDLER		402386	1229					
ANR	403627	Identifier	ZEND_NULL_HANDLER		402386	1230					
ANR	403628	Identifier	ZEND_NULL_HANDLER		402386	1231					
ANR	403629	Identifier	ZEND_NULL_HANDLER		402386	1232					
ANR	403630	Identifier	ZEND_NULL_HANDLER		402386	1233					
ANR	403631	Identifier	ZEND_NULL_HANDLER		402386	1234					
ANR	403632	Identifier	ZEND_NULL_HANDLER		402386	1235					
ANR	403633	Identifier	ZEND_NULL_HANDLER		402386	1236					
ANR	403634	Identifier	ZEND_NULL_HANDLER		402386	1237					
ANR	403635	Identifier	ZEND_NULL_HANDLER		402386	1238					
ANR	403636	Identifier	ZEND_NULL_HANDLER		402386	1239					
ANR	403637	Identifier	ZEND_NULL_HANDLER		402386	1240					
ANR	403638	Identifier	ZEND_NULL_HANDLER		402386	1241					
ANR	403639	Identifier	ZEND_NULL_HANDLER		402386	1242					
ANR	403640	Identifier	ZEND_NULL_HANDLER		402386	1243					
ANR	403641	Identifier	ZEND_NULL_HANDLER		402386	1244					
ANR	403642	Identifier	ZEND_NULL_HANDLER		402386	1245					
ANR	403643	Identifier	ZEND_NULL_HANDLER		402386	1246					
ANR	403644	Identifier	ZEND_NULL_HANDLER		402386	1247					
ANR	403645	Identifier	ZEND_NULL_HANDLER		402386	1248					
ANR	403646	Identifier	ZEND_NULL_HANDLER		402386	1249					
ANR	403647	Identifier	ZEND_NULL_HANDLER		402386	1250					
ANR	403648	Identifier	ZEND_NULL_HANDLER		402386	1251					
ANR	403649	Identifier	ZEND_NULL_HANDLER		402386	1252					
ANR	403650	Identifier	ZEND_NULL_HANDLER		402386	1253					
ANR	403651	Identifier	ZEND_NULL_HANDLER		402386	1254					
ANR	403652	Identifier	ZEND_NULL_HANDLER		402386	1255					
ANR	403653	Identifier	ZEND_NULL_HANDLER		402386	1256					
ANR	403654	Identifier	ZEND_NULL_HANDLER		402386	1257					
ANR	403655	Identifier	ZEND_NULL_HANDLER		402386	1258					
ANR	403656	Identifier	ZEND_NULL_HANDLER		402386	1259					
ANR	403657	Identifier	ZEND_NULL_HANDLER		402386	1260					
ANR	403658	Identifier	ZEND_NULL_HANDLER		402386	1261					
ANR	403659	Identifier	ZEND_NULL_HANDLER		402386	1262					
ANR	403660	Identifier	ZEND_NULL_HANDLER		402386	1263					
ANR	403661	Identifier	ZEND_NULL_HANDLER		402386	1264					
ANR	403662	Identifier	ZEND_NULL_HANDLER		402386	1265					
ANR	403663	Identifier	ZEND_NULL_HANDLER		402386	1266					
ANR	403664	Identifier	ZEND_NULL_HANDLER		402386	1267					
ANR	403665	Identifier	ZEND_NULL_HANDLER		402386	1268					
ANR	403666	Identifier	ZEND_NULL_HANDLER		402386	1269					
ANR	403667	Identifier	ZEND_NULL_HANDLER		402386	1270					
ANR	403668	Identifier	ZEND_NULL_HANDLER		402386	1271					
ANR	403669	Identifier	ZEND_NULL_HANDLER		402386	1272					
ANR	403670	Identifier	ZEND_NULL_HANDLER		402386	1273					
ANR	403671	Identifier	ZEND_NULL_HANDLER		402386	1274					
ANR	403672	Identifier	ZEND_NULL_HANDLER		402386	1275					
ANR	403673	Identifier	ZEND_NULL_HANDLER		402386	1276					
ANR	403674	Identifier	ZEND_NULL_HANDLER		402386	1277					
ANR	403675	Identifier	ZEND_NULL_HANDLER		402386	1278					
ANR	403676	Identifier	ZEND_NULL_HANDLER		402386	1279					
ANR	403677	Identifier	ZEND_NULL_HANDLER		402386	1280					
ANR	403678	Identifier	ZEND_NULL_HANDLER		402386	1281					
ANR	403679	Identifier	ZEND_NULL_HANDLER		402386	1282					
ANR	403680	Identifier	ZEND_NULL_HANDLER		402386	1283					
ANR	403681	Identifier	ZEND_NULL_HANDLER		402386	1284					
ANR	403682	Identifier	ZEND_NULL_HANDLER		402386	1285					
ANR	403683	Identifier	ZEND_NULL_HANDLER		402386	1286					
ANR	403684	Identifier	ZEND_NULL_HANDLER		402386	1287					
ANR	403685	Identifier	ZEND_NULL_HANDLER		402386	1288					
ANR	403686	Identifier	ZEND_NULL_HANDLER		402386	1289					
ANR	403687	Identifier	ZEND_NULL_HANDLER		402386	1290					
ANR	403688	Identifier	ZEND_NULL_HANDLER		402386	1291					
ANR	403689	Identifier	ZEND_NULL_HANDLER		402386	1292					
ANR	403690	Identifier	ZEND_NULL_HANDLER		402386	1293					
ANR	403691	Identifier	ZEND_NULL_HANDLER		402386	1294					
ANR	403692	Identifier	ZEND_NULL_HANDLER		402386	1295					
ANR	403693	Identifier	ZEND_NULL_HANDLER		402386	1296					
ANR	403694	Identifier	ZEND_NULL_HANDLER		402386	1297					
ANR	403695	Identifier	ZEND_NULL_HANDLER		402386	1298					
ANR	403696	Identifier	ZEND_NULL_HANDLER		402386	1299					
ANR	403697	Identifier	ZEND_BOOL_SPEC_CONST_HANDLER		402386	1300					
ANR	403698	Identifier	ZEND_BOOL_SPEC_CONST_HANDLER		402386	1301					
ANR	403699	Identifier	ZEND_BOOL_SPEC_CONST_HANDLER		402386	1302					
ANR	403700	Identifier	ZEND_BOOL_SPEC_CONST_HANDLER		402386	1303					
ANR	403701	Identifier	ZEND_BOOL_SPEC_CONST_HANDLER		402386	1304					
ANR	403702	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1305					
ANR	403703	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1306					
ANR	403704	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1307					
ANR	403705	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1308					
ANR	403706	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1309					
ANR	403707	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1310					
ANR	403708	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1311					
ANR	403709	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1312					
ANR	403710	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1313					
ANR	403711	Identifier	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386	1314					
ANR	403712	Identifier	ZEND_NULL_HANDLER		402386	1315					
ANR	403713	Identifier	ZEND_NULL_HANDLER		402386	1316					
ANR	403714	Identifier	ZEND_NULL_HANDLER		402386	1317					
ANR	403715	Identifier	ZEND_NULL_HANDLER		402386	1318					
ANR	403716	Identifier	ZEND_NULL_HANDLER		402386	1319					
ANR	403717	Identifier	ZEND_BOOL_SPEC_CV_HANDLER		402386	1320					
ANR	403718	Identifier	ZEND_BOOL_SPEC_CV_HANDLER		402386	1321					
ANR	403719	Identifier	ZEND_BOOL_SPEC_CV_HANDLER		402386	1322					
ANR	403720	Identifier	ZEND_BOOL_SPEC_CV_HANDLER		402386	1323					
ANR	403721	Identifier	ZEND_BOOL_SPEC_CV_HANDLER		402386	1324					
ANR	403722	Identifier	ZEND_FAST_CONCAT_SPEC_CONST_CONST_HANDLER		402386	1325					
ANR	403723	Identifier	ZEND_FAST_CONCAT_SPEC_CONST_TMPVAR_HANDLER		402386	1326					
ANR	403724	Identifier	ZEND_FAST_CONCAT_SPEC_CONST_TMPVAR_HANDLER		402386	1327					
ANR	403725	Identifier	ZEND_NULL_HANDLER		402386	1328					
ANR	403726	Identifier	ZEND_FAST_CONCAT_SPEC_CONST_CV_HANDLER		402386	1329					
ANR	403727	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_CONST_HANDLER		402386	1330					
ANR	403728	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1331					
ANR	403729	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1332					
ANR	403730	Identifier	ZEND_NULL_HANDLER		402386	1333					
ANR	403731	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_CV_HANDLER		402386	1334					
ANR	403732	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_CONST_HANDLER		402386	1335					
ANR	403733	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1336					
ANR	403734	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386	1337					
ANR	403735	Identifier	ZEND_NULL_HANDLER		402386	1338					
ANR	403736	Identifier	ZEND_FAST_CONCAT_SPEC_TMPVAR_CV_HANDLER		402386	1339					
ANR	403737	Identifier	ZEND_NULL_HANDLER		402386	1340					
ANR	403738	Identifier	ZEND_NULL_HANDLER		402386	1341					
ANR	403739	Identifier	ZEND_NULL_HANDLER		402386	1342					
ANR	403740	Identifier	ZEND_NULL_HANDLER		402386	1343					
ANR	403741	Identifier	ZEND_NULL_HANDLER		402386	1344					
ANR	403742	Identifier	ZEND_FAST_CONCAT_SPEC_CV_CONST_HANDLER		402386	1345					
ANR	403743	Identifier	ZEND_FAST_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386	1346					
ANR	403744	Identifier	ZEND_FAST_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386	1347					
ANR	403745	Identifier	ZEND_NULL_HANDLER		402386	1348					
ANR	403746	Identifier	ZEND_FAST_CONCAT_SPEC_CV_CV_HANDLER		402386	1349					
ANR	403747	Identifier	ZEND_NULL_HANDLER		402386	1350					
ANR	403748	Identifier	ZEND_NULL_HANDLER		402386	1351					
ANR	403749	Identifier	ZEND_NULL_HANDLER		402386	1352					
ANR	403750	Identifier	ZEND_NULL_HANDLER		402386	1353					
ANR	403751	Identifier	ZEND_NULL_HANDLER		402386	1354					
ANR	403752	Identifier	ZEND_NULL_HANDLER		402386	1355					
ANR	403753	Identifier	ZEND_NULL_HANDLER		402386	1356					
ANR	403754	Identifier	ZEND_NULL_HANDLER		402386	1357					
ANR	403755	Identifier	ZEND_NULL_HANDLER		402386	1358					
ANR	403756	Identifier	ZEND_NULL_HANDLER		402386	1359					
ANR	403757	Identifier	ZEND_NULL_HANDLER		402386	1360					
ANR	403758	Identifier	ZEND_NULL_HANDLER		402386	1361					
ANR	403759	Identifier	ZEND_NULL_HANDLER		402386	1362					
ANR	403760	Identifier	ZEND_NULL_HANDLER		402386	1363					
ANR	403761	Identifier	ZEND_NULL_HANDLER		402386	1364					
ANR	403762	Identifier	ZEND_ROPE_INIT_SPEC_UNUSED_CONST_HANDLER		402386	1365					
ANR	403763	Identifier	ZEND_ROPE_INIT_SPEC_UNUSED_TMPVAR_HANDLER		402386	1366					
ANR	403764	Identifier	ZEND_ROPE_INIT_SPEC_UNUSED_TMPVAR_HANDLER		402386	1367					
ANR	403765	Identifier	ZEND_NULL_HANDLER		402386	1368					
ANR	403766	Identifier	ZEND_ROPE_INIT_SPEC_UNUSED_CV_HANDLER		402386	1369					
ANR	403767	Identifier	ZEND_NULL_HANDLER		402386	1370					
ANR	403768	Identifier	ZEND_NULL_HANDLER		402386	1371					
ANR	403769	Identifier	ZEND_NULL_HANDLER		402386	1372					
ANR	403770	Identifier	ZEND_NULL_HANDLER		402386	1373					
ANR	403771	Identifier	ZEND_NULL_HANDLER		402386	1374					
ANR	403772	Identifier	ZEND_NULL_HANDLER		402386	1375					
ANR	403773	Identifier	ZEND_NULL_HANDLER		402386	1376					
ANR	403774	Identifier	ZEND_NULL_HANDLER		402386	1377					
ANR	403775	Identifier	ZEND_NULL_HANDLER		402386	1378					
ANR	403776	Identifier	ZEND_NULL_HANDLER		402386	1379					
ANR	403777	Identifier	ZEND_ROPE_ADD_SPEC_TMP_CONST_HANDLER		402386	1380					
ANR	403778	Identifier	ZEND_ROPE_ADD_SPEC_TMP_TMPVAR_HANDLER		402386	1381					
ANR	403779	Identifier	ZEND_ROPE_ADD_SPEC_TMP_TMPVAR_HANDLER		402386	1382					
ANR	403780	Identifier	ZEND_NULL_HANDLER		402386	1383					
ANR	403781	Identifier	ZEND_ROPE_ADD_SPEC_TMP_CV_HANDLER		402386	1384					
ANR	403782	Identifier	ZEND_NULL_HANDLER		402386	1385					
ANR	403783	Identifier	ZEND_NULL_HANDLER		402386	1386					
ANR	403784	Identifier	ZEND_NULL_HANDLER		402386	1387					
ANR	403785	Identifier	ZEND_NULL_HANDLER		402386	1388					
ANR	403786	Identifier	ZEND_NULL_HANDLER		402386	1389					
ANR	403787	Identifier	ZEND_NULL_HANDLER		402386	1390					
ANR	403788	Identifier	ZEND_NULL_HANDLER		402386	1391					
ANR	403789	Identifier	ZEND_NULL_HANDLER		402386	1392					
ANR	403790	Identifier	ZEND_NULL_HANDLER		402386	1393					
ANR	403791	Identifier	ZEND_NULL_HANDLER		402386	1394					
ANR	403792	Identifier	ZEND_NULL_HANDLER		402386	1395					
ANR	403793	Identifier	ZEND_NULL_HANDLER		402386	1396					
ANR	403794	Identifier	ZEND_NULL_HANDLER		402386	1397					
ANR	403795	Identifier	ZEND_NULL_HANDLER		402386	1398					
ANR	403796	Identifier	ZEND_NULL_HANDLER		402386	1399					
ANR	403797	Identifier	ZEND_NULL_HANDLER		402386	1400					
ANR	403798	Identifier	ZEND_NULL_HANDLER		402386	1401					
ANR	403799	Identifier	ZEND_NULL_HANDLER		402386	1402					
ANR	403800	Identifier	ZEND_NULL_HANDLER		402386	1403					
ANR	403801	Identifier	ZEND_NULL_HANDLER		402386	1404					
ANR	403802	Identifier	ZEND_ROPE_END_SPEC_TMP_CONST_HANDLER		402386	1405					
ANR	403803	Identifier	ZEND_ROPE_END_SPEC_TMP_TMPVAR_HANDLER		402386	1406					
ANR	403804	Identifier	ZEND_ROPE_END_SPEC_TMP_TMPVAR_HANDLER		402386	1407					
ANR	403805	Identifier	ZEND_NULL_HANDLER		402386	1408					
ANR	403806	Identifier	ZEND_ROPE_END_SPEC_TMP_CV_HANDLER		402386	1409					
ANR	403807	Identifier	ZEND_NULL_HANDLER		402386	1410					
ANR	403808	Identifier	ZEND_NULL_HANDLER		402386	1411					
ANR	403809	Identifier	ZEND_NULL_HANDLER		402386	1412					
ANR	403810	Identifier	ZEND_NULL_HANDLER		402386	1413					
ANR	403811	Identifier	ZEND_NULL_HANDLER		402386	1414					
ANR	403812	Identifier	ZEND_NULL_HANDLER		402386	1415					
ANR	403813	Identifier	ZEND_NULL_HANDLER		402386	1416					
ANR	403814	Identifier	ZEND_NULL_HANDLER		402386	1417					
ANR	403815	Identifier	ZEND_NULL_HANDLER		402386	1418					
ANR	403816	Identifier	ZEND_NULL_HANDLER		402386	1419					
ANR	403817	Identifier	ZEND_NULL_HANDLER		402386	1420					
ANR	403818	Identifier	ZEND_NULL_HANDLER		402386	1421					
ANR	403819	Identifier	ZEND_NULL_HANDLER		402386	1422					
ANR	403820	Identifier	ZEND_NULL_HANDLER		402386	1423					
ANR	403821	Identifier	ZEND_NULL_HANDLER		402386	1424					
ANR	403822	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1425					
ANR	403823	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1426					
ANR	403824	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1427					
ANR	403825	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1428					
ANR	403826	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1429					
ANR	403827	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1430					
ANR	403828	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1431					
ANR	403829	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1432					
ANR	403830	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1433					
ANR	403831	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1434					
ANR	403832	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1435					
ANR	403833	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1436					
ANR	403834	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1437					
ANR	403835	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1438					
ANR	403836	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1439					
ANR	403837	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1440					
ANR	403838	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1441					
ANR	403839	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1442					
ANR	403840	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1443					
ANR	403841	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1444					
ANR	403842	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1445					
ANR	403843	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1446					
ANR	403844	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1447					
ANR	403845	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1448					
ANR	403846	Identifier	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386	1449					
ANR	403847	Identifier	ZEND_NULL_HANDLER		402386	1450					
ANR	403848	Identifier	ZEND_NULL_HANDLER		402386	1451					
ANR	403849	Identifier	ZEND_NULL_HANDLER		402386	1452					
ANR	403850	Identifier	ZEND_NULL_HANDLER		402386	1453					
ANR	403851	Identifier	ZEND_NULL_HANDLER		402386	1454					
ANR	403852	Identifier	ZEND_END_SILENCE_SPEC_TMP_HANDLER		402386	1455					
ANR	403853	Identifier	ZEND_END_SILENCE_SPEC_TMP_HANDLER		402386	1456					
ANR	403854	Identifier	ZEND_END_SILENCE_SPEC_TMP_HANDLER		402386	1457					
ANR	403855	Identifier	ZEND_END_SILENCE_SPEC_TMP_HANDLER		402386	1458					
ANR	403856	Identifier	ZEND_END_SILENCE_SPEC_TMP_HANDLER		402386	1459					
ANR	403857	Identifier	ZEND_NULL_HANDLER		402386	1460					
ANR	403858	Identifier	ZEND_NULL_HANDLER		402386	1461					
ANR	403859	Identifier	ZEND_NULL_HANDLER		402386	1462					
ANR	403860	Identifier	ZEND_NULL_HANDLER		402386	1463					
ANR	403861	Identifier	ZEND_NULL_HANDLER		402386	1464					
ANR	403862	Identifier	ZEND_NULL_HANDLER		402386	1465					
ANR	403863	Identifier	ZEND_NULL_HANDLER		402386	1466					
ANR	403864	Identifier	ZEND_NULL_HANDLER		402386	1467					
ANR	403865	Identifier	ZEND_NULL_HANDLER		402386	1468					
ANR	403866	Identifier	ZEND_NULL_HANDLER		402386	1469					
ANR	403867	Identifier	ZEND_NULL_HANDLER		402386	1470					
ANR	403868	Identifier	ZEND_NULL_HANDLER		402386	1471					
ANR	403869	Identifier	ZEND_NULL_HANDLER		402386	1472					
ANR	403870	Identifier	ZEND_NULL_HANDLER		402386	1473					
ANR	403871	Identifier	ZEND_NULL_HANDLER		402386	1474					
ANR	403872	Identifier	ZEND_INIT_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1475					
ANR	403873	Identifier	ZEND_NULL_HANDLER		402386	1476					
ANR	403874	Identifier	ZEND_NULL_HANDLER		402386	1477					
ANR	403875	Identifier	ZEND_NULL_HANDLER		402386	1478					
ANR	403876	Identifier	ZEND_NULL_HANDLER		402386	1479					
ANR	403877	Identifier	ZEND_INIT_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1480					
ANR	403878	Identifier	ZEND_NULL_HANDLER		402386	1481					
ANR	403879	Identifier	ZEND_NULL_HANDLER		402386	1482					
ANR	403880	Identifier	ZEND_NULL_HANDLER		402386	1483					
ANR	403881	Identifier	ZEND_NULL_HANDLER		402386	1484					
ANR	403882	Identifier	ZEND_INIT_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1485					
ANR	403883	Identifier	ZEND_NULL_HANDLER		402386	1486					
ANR	403884	Identifier	ZEND_NULL_HANDLER		402386	1487					
ANR	403885	Identifier	ZEND_NULL_HANDLER		402386	1488					
ANR	403886	Identifier	ZEND_NULL_HANDLER		402386	1489					
ANR	403887	Identifier	ZEND_INIT_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1490					
ANR	403888	Identifier	ZEND_NULL_HANDLER		402386	1491					
ANR	403889	Identifier	ZEND_NULL_HANDLER		402386	1492					
ANR	403890	Identifier	ZEND_NULL_HANDLER		402386	1493					
ANR	403891	Identifier	ZEND_NULL_HANDLER		402386	1494					
ANR	403892	Identifier	ZEND_INIT_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1495					
ANR	403893	Identifier	ZEND_NULL_HANDLER		402386	1496					
ANR	403894	Identifier	ZEND_NULL_HANDLER		402386	1497					
ANR	403895	Identifier	ZEND_NULL_HANDLER		402386	1498					
ANR	403896	Identifier	ZEND_NULL_HANDLER		402386	1499					
ANR	403897	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1500					
ANR	403898	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1501					
ANR	403899	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1502					
ANR	403900	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1503					
ANR	403901	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1504					
ANR	403902	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1505					
ANR	403903	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1506					
ANR	403904	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1507					
ANR	403905	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1508					
ANR	403906	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1509					
ANR	403907	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1510					
ANR	403908	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1511					
ANR	403909	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1512					
ANR	403910	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1513					
ANR	403911	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1514					
ANR	403912	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1515					
ANR	403913	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1516					
ANR	403914	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1517					
ANR	403915	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1518					
ANR	403916	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1519					
ANR	403917	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1520					
ANR	403918	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1521					
ANR	403919	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1522					
ANR	403920	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1523					
ANR	403921	Identifier	ZEND_DO_FCALL_SPEC_HANDLER		402386	1524					
ANR	403922	Identifier	ZEND_INIT_FCALL_SPEC_CONST_HANDLER		402386	1525					
ANR	403923	Identifier	ZEND_NULL_HANDLER		402386	1526					
ANR	403924	Identifier	ZEND_NULL_HANDLER		402386	1527					
ANR	403925	Identifier	ZEND_NULL_HANDLER		402386	1528					
ANR	403926	Identifier	ZEND_NULL_HANDLER		402386	1529					
ANR	403927	Identifier	ZEND_INIT_FCALL_SPEC_CONST_HANDLER		402386	1530					
ANR	403928	Identifier	ZEND_NULL_HANDLER		402386	1531					
ANR	403929	Identifier	ZEND_NULL_HANDLER		402386	1532					
ANR	403930	Identifier	ZEND_NULL_HANDLER		402386	1533					
ANR	403931	Identifier	ZEND_NULL_HANDLER		402386	1534					
ANR	403932	Identifier	ZEND_INIT_FCALL_SPEC_CONST_HANDLER		402386	1535					
ANR	403933	Identifier	ZEND_NULL_HANDLER		402386	1536					
ANR	403934	Identifier	ZEND_NULL_HANDLER		402386	1537					
ANR	403935	Identifier	ZEND_NULL_HANDLER		402386	1538					
ANR	403936	Identifier	ZEND_NULL_HANDLER		402386	1539					
ANR	403937	Identifier	ZEND_INIT_FCALL_SPEC_CONST_HANDLER		402386	1540					
ANR	403938	Identifier	ZEND_NULL_HANDLER		402386	1541					
ANR	403939	Identifier	ZEND_NULL_HANDLER		402386	1542					
ANR	403940	Identifier	ZEND_NULL_HANDLER		402386	1543					
ANR	403941	Identifier	ZEND_NULL_HANDLER		402386	1544					
ANR	403942	Identifier	ZEND_INIT_FCALL_SPEC_CONST_HANDLER		402386	1545					
ANR	403943	Identifier	ZEND_NULL_HANDLER		402386	1546					
ANR	403944	Identifier	ZEND_NULL_HANDLER		402386	1547					
ANR	403945	Identifier	ZEND_NULL_HANDLER		402386	1548					
ANR	403946	Identifier	ZEND_NULL_HANDLER		402386	1549					
ANR	403947	Identifier	ZEND_RETURN_SPEC_CONST_HANDLER		402386	1550					
ANR	403948	Identifier	ZEND_RETURN_SPEC_CONST_HANDLER		402386	1551					
ANR	403949	Identifier	ZEND_RETURN_SPEC_CONST_HANDLER		402386	1552					
ANR	403950	Identifier	ZEND_RETURN_SPEC_CONST_HANDLER		402386	1553					
ANR	403951	Identifier	ZEND_RETURN_SPEC_CONST_HANDLER		402386	1554					
ANR	403952	Identifier	ZEND_RETURN_SPEC_TMP_HANDLER		402386	1555					
ANR	403953	Identifier	ZEND_RETURN_SPEC_TMP_HANDLER		402386	1556					
ANR	403954	Identifier	ZEND_RETURN_SPEC_TMP_HANDLER		402386	1557					
ANR	403955	Identifier	ZEND_RETURN_SPEC_TMP_HANDLER		402386	1558					
ANR	403956	Identifier	ZEND_RETURN_SPEC_TMP_HANDLER		402386	1559					
ANR	403957	Identifier	ZEND_RETURN_SPEC_VAR_HANDLER		402386	1560					
ANR	403958	Identifier	ZEND_RETURN_SPEC_VAR_HANDLER		402386	1561					
ANR	403959	Identifier	ZEND_RETURN_SPEC_VAR_HANDLER		402386	1562					
ANR	403960	Identifier	ZEND_RETURN_SPEC_VAR_HANDLER		402386	1563					
ANR	403961	Identifier	ZEND_RETURN_SPEC_VAR_HANDLER		402386	1564					
ANR	403962	Identifier	ZEND_NULL_HANDLER		402386	1565					
ANR	403963	Identifier	ZEND_NULL_HANDLER		402386	1566					
ANR	403964	Identifier	ZEND_NULL_HANDLER		402386	1567					
ANR	403965	Identifier	ZEND_NULL_HANDLER		402386	1568					
ANR	403966	Identifier	ZEND_NULL_HANDLER		402386	1569					
ANR	403967	Identifier	ZEND_RETURN_SPEC_CV_HANDLER		402386	1570					
ANR	403968	Identifier	ZEND_RETURN_SPEC_CV_HANDLER		402386	1571					
ANR	403969	Identifier	ZEND_RETURN_SPEC_CV_HANDLER		402386	1572					
ANR	403970	Identifier	ZEND_RETURN_SPEC_CV_HANDLER		402386	1573					
ANR	403971	Identifier	ZEND_RETURN_SPEC_CV_HANDLER		402386	1574					
ANR	403972	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1575					
ANR	403973	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1576					
ANR	403974	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1577					
ANR	403975	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1578					
ANR	403976	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1579					
ANR	403977	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1580					
ANR	403978	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1581					
ANR	403979	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1582					
ANR	403980	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1583					
ANR	403981	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1584					
ANR	403982	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1585					
ANR	403983	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1586					
ANR	403984	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1587					
ANR	403985	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1588					
ANR	403986	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1589					
ANR	403987	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1590					
ANR	403988	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1591					
ANR	403989	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1592					
ANR	403990	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1593					
ANR	403991	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1594					
ANR	403992	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1595					
ANR	403993	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1596					
ANR	403994	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1597					
ANR	403995	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1598					
ANR	403996	Identifier	ZEND_RECV_SPEC_HANDLER		402386	1599					
ANR	403997	Identifier	ZEND_RECV_INIT_SPEC_CONST_HANDLER		402386	1600					
ANR	403998	Identifier	ZEND_NULL_HANDLER		402386	1601					
ANR	403999	Identifier	ZEND_NULL_HANDLER		402386	1602					
ANR	404000	Identifier	ZEND_NULL_HANDLER		402386	1603					
ANR	404001	Identifier	ZEND_NULL_HANDLER		402386	1604					
ANR	404002	Identifier	ZEND_RECV_INIT_SPEC_CONST_HANDLER		402386	1605					
ANR	404003	Identifier	ZEND_NULL_HANDLER		402386	1606					
ANR	404004	Identifier	ZEND_NULL_HANDLER		402386	1607					
ANR	404005	Identifier	ZEND_NULL_HANDLER		402386	1608					
ANR	404006	Identifier	ZEND_NULL_HANDLER		402386	1609					
ANR	404007	Identifier	ZEND_RECV_INIT_SPEC_CONST_HANDLER		402386	1610					
ANR	404008	Identifier	ZEND_NULL_HANDLER		402386	1611					
ANR	404009	Identifier	ZEND_NULL_HANDLER		402386	1612					
ANR	404010	Identifier	ZEND_NULL_HANDLER		402386	1613					
ANR	404011	Identifier	ZEND_NULL_HANDLER		402386	1614					
ANR	404012	Identifier	ZEND_RECV_INIT_SPEC_CONST_HANDLER		402386	1615					
ANR	404013	Identifier	ZEND_NULL_HANDLER		402386	1616					
ANR	404014	Identifier	ZEND_NULL_HANDLER		402386	1617					
ANR	404015	Identifier	ZEND_NULL_HANDLER		402386	1618					
ANR	404016	Identifier	ZEND_NULL_HANDLER		402386	1619					
ANR	404017	Identifier	ZEND_RECV_INIT_SPEC_CONST_HANDLER		402386	1620					
ANR	404018	Identifier	ZEND_NULL_HANDLER		402386	1621					
ANR	404019	Identifier	ZEND_NULL_HANDLER		402386	1622					
ANR	404020	Identifier	ZEND_NULL_HANDLER		402386	1623					
ANR	404021	Identifier	ZEND_NULL_HANDLER		402386	1624					
ANR	404022	Identifier	ZEND_SEND_VAL_SPEC_CONST_HANDLER		402386	1625					
ANR	404023	Identifier	ZEND_SEND_VAL_SPEC_CONST_HANDLER		402386	1626					
ANR	404024	Identifier	ZEND_SEND_VAL_SPEC_CONST_HANDLER		402386	1627					
ANR	404025	Identifier	ZEND_SEND_VAL_SPEC_CONST_HANDLER		402386	1628					
ANR	404026	Identifier	ZEND_SEND_VAL_SPEC_CONST_HANDLER		402386	1629					
ANR	404027	Identifier	ZEND_SEND_VAL_SPEC_TMP_HANDLER		402386	1630					
ANR	404028	Identifier	ZEND_SEND_VAL_SPEC_TMP_HANDLER		402386	1631					
ANR	404029	Identifier	ZEND_SEND_VAL_SPEC_TMP_HANDLER		402386	1632					
ANR	404030	Identifier	ZEND_SEND_VAL_SPEC_TMP_HANDLER		402386	1633					
ANR	404031	Identifier	ZEND_SEND_VAL_SPEC_TMP_HANDLER		402386	1634					
ANR	404032	Identifier	ZEND_NULL_HANDLER		402386	1635					
ANR	404033	Identifier	ZEND_NULL_HANDLER		402386	1636					
ANR	404034	Identifier	ZEND_NULL_HANDLER		402386	1637					
ANR	404035	Identifier	ZEND_NULL_HANDLER		402386	1638					
ANR	404036	Identifier	ZEND_NULL_HANDLER		402386	1639					
ANR	404037	Identifier	ZEND_NULL_HANDLER		402386	1640					
ANR	404038	Identifier	ZEND_NULL_HANDLER		402386	1641					
ANR	404039	Identifier	ZEND_NULL_HANDLER		402386	1642					
ANR	404040	Identifier	ZEND_NULL_HANDLER		402386	1643					
ANR	404041	Identifier	ZEND_NULL_HANDLER		402386	1644					
ANR	404042	Identifier	ZEND_NULL_HANDLER		402386	1645					
ANR	404043	Identifier	ZEND_NULL_HANDLER		402386	1646					
ANR	404044	Identifier	ZEND_NULL_HANDLER		402386	1647					
ANR	404045	Identifier	ZEND_NULL_HANDLER		402386	1648					
ANR	404046	Identifier	ZEND_NULL_HANDLER		402386	1649					
ANR	404047	Identifier	ZEND_NULL_HANDLER		402386	1650					
ANR	404048	Identifier	ZEND_NULL_HANDLER		402386	1651					
ANR	404049	Identifier	ZEND_NULL_HANDLER		402386	1652					
ANR	404050	Identifier	ZEND_NULL_HANDLER		402386	1653					
ANR	404051	Identifier	ZEND_NULL_HANDLER		402386	1654					
ANR	404052	Identifier	ZEND_NULL_HANDLER		402386	1655					
ANR	404053	Identifier	ZEND_NULL_HANDLER		402386	1656					
ANR	404054	Identifier	ZEND_NULL_HANDLER		402386	1657					
ANR	404055	Identifier	ZEND_NULL_HANDLER		402386	1658					
ANR	404056	Identifier	ZEND_NULL_HANDLER		402386	1659					
ANR	404057	Identifier	ZEND_SEND_VAR_EX_SPEC_VAR_HANDLER		402386	1660					
ANR	404058	Identifier	ZEND_SEND_VAR_EX_SPEC_VAR_HANDLER		402386	1661					
ANR	404059	Identifier	ZEND_SEND_VAR_EX_SPEC_VAR_HANDLER		402386	1662					
ANR	404060	Identifier	ZEND_SEND_VAR_EX_SPEC_VAR_HANDLER		402386	1663					
ANR	404061	Identifier	ZEND_SEND_VAR_EX_SPEC_VAR_HANDLER		402386	1664					
ANR	404062	Identifier	ZEND_NULL_HANDLER		402386	1665					
ANR	404063	Identifier	ZEND_NULL_HANDLER		402386	1666					
ANR	404064	Identifier	ZEND_NULL_HANDLER		402386	1667					
ANR	404065	Identifier	ZEND_NULL_HANDLER		402386	1668					
ANR	404066	Identifier	ZEND_NULL_HANDLER		402386	1669					
ANR	404067	Identifier	ZEND_SEND_VAR_EX_SPEC_CV_HANDLER		402386	1670					
ANR	404068	Identifier	ZEND_SEND_VAR_EX_SPEC_CV_HANDLER		402386	1671					
ANR	404069	Identifier	ZEND_SEND_VAR_EX_SPEC_CV_HANDLER		402386	1672					
ANR	404070	Identifier	ZEND_SEND_VAR_EX_SPEC_CV_HANDLER		402386	1673					
ANR	404071	Identifier	ZEND_SEND_VAR_EX_SPEC_CV_HANDLER		402386	1674					
ANR	404072	Identifier	ZEND_NULL_HANDLER		402386	1675					
ANR	404073	Identifier	ZEND_NULL_HANDLER		402386	1676					
ANR	404074	Identifier	ZEND_NULL_HANDLER		402386	1677					
ANR	404075	Identifier	ZEND_NULL_HANDLER		402386	1678					
ANR	404076	Identifier	ZEND_NULL_HANDLER		402386	1679					
ANR	404077	Identifier	ZEND_NULL_HANDLER		402386	1680					
ANR	404078	Identifier	ZEND_NULL_HANDLER		402386	1681					
ANR	404079	Identifier	ZEND_NULL_HANDLER		402386	1682					
ANR	404080	Identifier	ZEND_NULL_HANDLER		402386	1683					
ANR	404081	Identifier	ZEND_NULL_HANDLER		402386	1684					
ANR	404082	Identifier	ZEND_SEND_REF_SPEC_VAR_HANDLER		402386	1685					
ANR	404083	Identifier	ZEND_SEND_REF_SPEC_VAR_HANDLER		402386	1686					
ANR	404084	Identifier	ZEND_SEND_REF_SPEC_VAR_HANDLER		402386	1687					
ANR	404085	Identifier	ZEND_SEND_REF_SPEC_VAR_HANDLER		402386	1688					
ANR	404086	Identifier	ZEND_SEND_REF_SPEC_VAR_HANDLER		402386	1689					
ANR	404087	Identifier	ZEND_NULL_HANDLER		402386	1690					
ANR	404088	Identifier	ZEND_NULL_HANDLER		402386	1691					
ANR	404089	Identifier	ZEND_NULL_HANDLER		402386	1692					
ANR	404090	Identifier	ZEND_NULL_HANDLER		402386	1693					
ANR	404091	Identifier	ZEND_NULL_HANDLER		402386	1694					
ANR	404092	Identifier	ZEND_SEND_REF_SPEC_CV_HANDLER		402386	1695					
ANR	404093	Identifier	ZEND_SEND_REF_SPEC_CV_HANDLER		402386	1696					
ANR	404094	Identifier	ZEND_SEND_REF_SPEC_CV_HANDLER		402386	1697					
ANR	404095	Identifier	ZEND_SEND_REF_SPEC_CV_HANDLER		402386	1698					
ANR	404096	Identifier	ZEND_SEND_REF_SPEC_CV_HANDLER		402386	1699					
ANR	404097	Identifier	ZEND_NEW_SPEC_CONST_HANDLER		402386	1700					
ANR	404098	Identifier	ZEND_NEW_SPEC_CONST_HANDLER		402386	1701					
ANR	404099	Identifier	ZEND_NEW_SPEC_CONST_HANDLER		402386	1702					
ANR	404100	Identifier	ZEND_NEW_SPEC_CONST_HANDLER		402386	1703					
ANR	404101	Identifier	ZEND_NEW_SPEC_CONST_HANDLER		402386	1704					
ANR	404102	Identifier	ZEND_NULL_HANDLER		402386	1705					
ANR	404103	Identifier	ZEND_NULL_HANDLER		402386	1706					
ANR	404104	Identifier	ZEND_NULL_HANDLER		402386	1707					
ANR	404105	Identifier	ZEND_NULL_HANDLER		402386	1708					
ANR	404106	Identifier	ZEND_NULL_HANDLER		402386	1709					
ANR	404107	Identifier	ZEND_NEW_SPEC_VAR_HANDLER		402386	1710					
ANR	404108	Identifier	ZEND_NEW_SPEC_VAR_HANDLER		402386	1711					
ANR	404109	Identifier	ZEND_NEW_SPEC_VAR_HANDLER		402386	1712					
ANR	404110	Identifier	ZEND_NEW_SPEC_VAR_HANDLER		402386	1713					
ANR	404111	Identifier	ZEND_NEW_SPEC_VAR_HANDLER		402386	1714					
ANR	404112	Identifier	ZEND_NULL_HANDLER		402386	1715					
ANR	404113	Identifier	ZEND_NULL_HANDLER		402386	1716					
ANR	404114	Identifier	ZEND_NULL_HANDLER		402386	1717					
ANR	404115	Identifier	ZEND_NULL_HANDLER		402386	1718					
ANR	404116	Identifier	ZEND_NULL_HANDLER		402386	1719					
ANR	404117	Identifier	ZEND_NULL_HANDLER		402386	1720					
ANR	404118	Identifier	ZEND_NULL_HANDLER		402386	1721					
ANR	404119	Identifier	ZEND_NULL_HANDLER		402386	1722					
ANR	404120	Identifier	ZEND_NULL_HANDLER		402386	1723					
ANR	404121	Identifier	ZEND_NULL_HANDLER		402386	1724					
ANR	404122	Identifier	ZEND_INIT_NS_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1725					
ANR	404123	Identifier	ZEND_NULL_HANDLER		402386	1726					
ANR	404124	Identifier	ZEND_NULL_HANDLER		402386	1727					
ANR	404125	Identifier	ZEND_NULL_HANDLER		402386	1728					
ANR	404126	Identifier	ZEND_NULL_HANDLER		402386	1729					
ANR	404127	Identifier	ZEND_INIT_NS_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1730					
ANR	404128	Identifier	ZEND_NULL_HANDLER		402386	1731					
ANR	404129	Identifier	ZEND_NULL_HANDLER		402386	1732					
ANR	404130	Identifier	ZEND_NULL_HANDLER		402386	1733					
ANR	404131	Identifier	ZEND_NULL_HANDLER		402386	1734					
ANR	404132	Identifier	ZEND_INIT_NS_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1735					
ANR	404133	Identifier	ZEND_NULL_HANDLER		402386	1736					
ANR	404134	Identifier	ZEND_NULL_HANDLER		402386	1737					
ANR	404135	Identifier	ZEND_NULL_HANDLER		402386	1738					
ANR	404136	Identifier	ZEND_NULL_HANDLER		402386	1739					
ANR	404137	Identifier	ZEND_INIT_NS_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1740					
ANR	404138	Identifier	ZEND_NULL_HANDLER		402386	1741					
ANR	404139	Identifier	ZEND_NULL_HANDLER		402386	1742					
ANR	404140	Identifier	ZEND_NULL_HANDLER		402386	1743					
ANR	404141	Identifier	ZEND_NULL_HANDLER		402386	1744					
ANR	404142	Identifier	ZEND_INIT_NS_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386	1745					
ANR	404143	Identifier	ZEND_NULL_HANDLER		402386	1746					
ANR	404144	Identifier	ZEND_NULL_HANDLER		402386	1747					
ANR	404145	Identifier	ZEND_NULL_HANDLER		402386	1748					
ANR	404146	Identifier	ZEND_NULL_HANDLER		402386	1749					
ANR	404147	Identifier	ZEND_NULL_HANDLER		402386	1750					
ANR	404148	Identifier	ZEND_NULL_HANDLER		402386	1751					
ANR	404149	Identifier	ZEND_NULL_HANDLER		402386	1752					
ANR	404150	Identifier	ZEND_NULL_HANDLER		402386	1753					
ANR	404151	Identifier	ZEND_NULL_HANDLER		402386	1754					
ANR	404152	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1755					
ANR	404153	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1756					
ANR	404154	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1757					
ANR	404155	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1758					
ANR	404156	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1759					
ANR	404157	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1760					
ANR	404158	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1761					
ANR	404159	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1762					
ANR	404160	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1763					
ANR	404161	Identifier	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386	1764					
ANR	404162	Identifier	ZEND_NULL_HANDLER		402386	1765					
ANR	404163	Identifier	ZEND_NULL_HANDLER		402386	1766					
ANR	404164	Identifier	ZEND_NULL_HANDLER		402386	1767					
ANR	404165	Identifier	ZEND_NULL_HANDLER		402386	1768					
ANR	404166	Identifier	ZEND_NULL_HANDLER		402386	1769					
ANR	404167	Identifier	ZEND_NULL_HANDLER		402386	1770					
ANR	404168	Identifier	ZEND_NULL_HANDLER		402386	1771					
ANR	404169	Identifier	ZEND_NULL_HANDLER		402386	1772					
ANR	404170	Identifier	ZEND_NULL_HANDLER		402386	1773					
ANR	404171	Identifier	ZEND_NULL_HANDLER		402386	1774					
ANR	404172	Identifier	ZEND_INIT_ARRAY_SPEC_CONST_CONST_HANDLER		402386	1775					
ANR	404173	Identifier	ZEND_INIT_ARRAY_SPEC_CONST_TMPVAR_HANDLER		402386	1776					
ANR	404174	Identifier	ZEND_INIT_ARRAY_SPEC_CONST_TMPVAR_HANDLER		402386	1777					
ANR	404175	Identifier	ZEND_INIT_ARRAY_SPEC_CONST_UNUSED_HANDLER		402386	1778					
ANR	404176	Identifier	ZEND_INIT_ARRAY_SPEC_CONST_CV_HANDLER		402386	1779					
ANR	404177	Identifier	ZEND_INIT_ARRAY_SPEC_TMP_CONST_HANDLER		402386	1780					
ANR	404178	Identifier	ZEND_INIT_ARRAY_SPEC_TMP_TMPVAR_HANDLER		402386	1781					
ANR	404179	Identifier	ZEND_INIT_ARRAY_SPEC_TMP_TMPVAR_HANDLER		402386	1782					
ANR	404180	Identifier	ZEND_INIT_ARRAY_SPEC_TMP_UNUSED_HANDLER		402386	1783					
ANR	404181	Identifier	ZEND_INIT_ARRAY_SPEC_TMP_CV_HANDLER		402386	1784					
ANR	404182	Identifier	ZEND_INIT_ARRAY_SPEC_VAR_CONST_HANDLER		402386	1785					
ANR	404183	Identifier	ZEND_INIT_ARRAY_SPEC_VAR_TMPVAR_HANDLER		402386	1786					
ANR	404184	Identifier	ZEND_INIT_ARRAY_SPEC_VAR_TMPVAR_HANDLER		402386	1787					
ANR	404185	Identifier	ZEND_INIT_ARRAY_SPEC_VAR_UNUSED_HANDLER		402386	1788					
ANR	404186	Identifier	ZEND_INIT_ARRAY_SPEC_VAR_CV_HANDLER		402386	1789					
ANR	404187	Identifier	ZEND_INIT_ARRAY_SPEC_UNUSED_CONST_HANDLER		402386	1790					
ANR	404188	Identifier	ZEND_INIT_ARRAY_SPEC_UNUSED_TMPVAR_HANDLER		402386	1791					
ANR	404189	Identifier	ZEND_INIT_ARRAY_SPEC_UNUSED_TMPVAR_HANDLER		402386	1792					
ANR	404190	Identifier	ZEND_INIT_ARRAY_SPEC_UNUSED_UNUSED_HANDLER		402386	1793					
ANR	404191	Identifier	ZEND_INIT_ARRAY_SPEC_UNUSED_CV_HANDLER		402386	1794					
ANR	404192	Identifier	ZEND_INIT_ARRAY_SPEC_CV_CONST_HANDLER		402386	1795					
ANR	404193	Identifier	ZEND_INIT_ARRAY_SPEC_CV_TMPVAR_HANDLER		402386	1796					
ANR	404194	Identifier	ZEND_INIT_ARRAY_SPEC_CV_TMPVAR_HANDLER		402386	1797					
ANR	404195	Identifier	ZEND_INIT_ARRAY_SPEC_CV_UNUSED_HANDLER		402386	1798					
ANR	404196	Identifier	ZEND_INIT_ARRAY_SPEC_CV_CV_HANDLER		402386	1799					
ANR	404197	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_CONST_HANDLER		402386	1800					
ANR	404198	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_TMPVAR_HANDLER		402386	1801					
ANR	404199	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_TMPVAR_HANDLER		402386	1802					
ANR	404200	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_UNUSED_HANDLER		402386	1803					
ANR	404201	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_CV_HANDLER		402386	1804					
ANR	404202	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_CONST_HANDLER		402386	1805					
ANR	404203	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_TMPVAR_HANDLER		402386	1806					
ANR	404204	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_TMPVAR_HANDLER		402386	1807					
ANR	404205	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_UNUSED_HANDLER		402386	1808					
ANR	404206	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_CV_HANDLER		402386	1809					
ANR	404207	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_CONST_HANDLER		402386	1810					
ANR	404208	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_TMPVAR_HANDLER		402386	1811					
ANR	404209	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_TMPVAR_HANDLER		402386	1812					
ANR	404210	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_UNUSED_HANDLER		402386	1813					
ANR	404211	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_CV_HANDLER		402386	1814					
ANR	404212	Identifier	ZEND_NULL_HANDLER		402386	1815					
ANR	404213	Identifier	ZEND_NULL_HANDLER		402386	1816					
ANR	404214	Identifier	ZEND_NULL_HANDLER		402386	1817					
ANR	404215	Identifier	ZEND_NULL_HANDLER		402386	1818					
ANR	404216	Identifier	ZEND_NULL_HANDLER		402386	1819					
ANR	404217	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_CONST_HANDLER		402386	1820					
ANR	404218	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_TMPVAR_HANDLER		402386	1821					
ANR	404219	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_TMPVAR_HANDLER		402386	1822					
ANR	404220	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_UNUSED_HANDLER		402386	1823					
ANR	404221	Identifier	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_CV_HANDLER		402386	1824					
ANR	404222	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CONST_HANDLER		402386	1825					
ANR	404223	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CONST_HANDLER		402386	1826					
ANR	404224	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CONST_HANDLER		402386	1827					
ANR	404225	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CONST_HANDLER		402386	1828					
ANR	404226	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CONST_HANDLER		402386	1829					
ANR	404227	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1830					
ANR	404228	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1831					
ANR	404229	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1832					
ANR	404230	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1833					
ANR	404231	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1834					
ANR	404232	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1835					
ANR	404233	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1836					
ANR	404234	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1837					
ANR	404235	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1838					
ANR	404236	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386	1839					
ANR	404237	Identifier	ZEND_NULL_HANDLER		402386	1840					
ANR	404238	Identifier	ZEND_NULL_HANDLER		402386	1841					
ANR	404239	Identifier	ZEND_NULL_HANDLER		402386	1842					
ANR	404240	Identifier	ZEND_NULL_HANDLER		402386	1843					
ANR	404241	Identifier	ZEND_NULL_HANDLER		402386	1844					
ANR	404242	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER		402386	1845					
ANR	404243	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER		402386	1846					
ANR	404244	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER		402386	1847					
ANR	404245	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER		402386	1848					
ANR	404246	Identifier	ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER		402386	1849					
ANR	404247	Identifier	ZEND_UNSET_VAR_SPEC_CONST_CONST_HANDLER		402386	1850					
ANR	404248	Identifier	ZEND_NULL_HANDLER		402386	1851					
ANR	404249	Identifier	ZEND_UNSET_VAR_SPEC_CONST_VAR_HANDLER		402386	1852					
ANR	404250	Identifier	ZEND_UNSET_VAR_SPEC_CONST_UNUSED_HANDLER		402386	1853					
ANR	404251	Identifier	ZEND_NULL_HANDLER		402386	1854					
ANR	404252	Identifier	ZEND_UNSET_VAR_SPEC_TMPVAR_CONST_HANDLER		402386	1855					
ANR	404253	Identifier	ZEND_NULL_HANDLER		402386	1856					
ANR	404254	Identifier	ZEND_UNSET_VAR_SPEC_TMPVAR_VAR_HANDLER		402386	1857					
ANR	404255	Identifier	ZEND_UNSET_VAR_SPEC_TMPVAR_UNUSED_HANDLER		402386	1858					
ANR	404256	Identifier	ZEND_NULL_HANDLER		402386	1859					
ANR	404257	Identifier	ZEND_UNSET_VAR_SPEC_TMPVAR_CONST_HANDLER		402386	1860					
ANR	404258	Identifier	ZEND_NULL_HANDLER		402386	1861					
ANR	404259	Identifier	ZEND_UNSET_VAR_SPEC_TMPVAR_VAR_HANDLER		402386	1862					
ANR	404260	Identifier	ZEND_UNSET_VAR_SPEC_TMPVAR_UNUSED_HANDLER		402386	1863					
ANR	404261	Identifier	ZEND_NULL_HANDLER		402386	1864					
ANR	404262	Identifier	ZEND_NULL_HANDLER		402386	1865					
ANR	404263	Identifier	ZEND_NULL_HANDLER		402386	1866					
ANR	404264	Identifier	ZEND_NULL_HANDLER		402386	1867					
ANR	404265	Identifier	ZEND_NULL_HANDLER		402386	1868					
ANR	404266	Identifier	ZEND_NULL_HANDLER		402386	1869					
ANR	404267	Identifier	ZEND_UNSET_VAR_SPEC_CV_CONST_HANDLER		402386	1870					
ANR	404268	Identifier	ZEND_NULL_HANDLER		402386	1871					
ANR	404269	Identifier	ZEND_UNSET_VAR_SPEC_CV_VAR_HANDLER		402386	1872					
ANR	404270	Identifier	ZEND_UNSET_VAR_SPEC_CV_UNUSED_HANDLER		402386	1873					
ANR	404271	Identifier	ZEND_NULL_HANDLER		402386	1874					
ANR	404272	Identifier	ZEND_NULL_HANDLER		402386	1875					
ANR	404273	Identifier	ZEND_NULL_HANDLER		402386	1876					
ANR	404274	Identifier	ZEND_NULL_HANDLER		402386	1877					
ANR	404275	Identifier	ZEND_NULL_HANDLER		402386	1878					
ANR	404276	Identifier	ZEND_NULL_HANDLER		402386	1879					
ANR	404277	Identifier	ZEND_NULL_HANDLER		402386	1880					
ANR	404278	Identifier	ZEND_NULL_HANDLER		402386	1881					
ANR	404279	Identifier	ZEND_NULL_HANDLER		402386	1882					
ANR	404280	Identifier	ZEND_NULL_HANDLER		402386	1883					
ANR	404281	Identifier	ZEND_NULL_HANDLER		402386	1884					
ANR	404282	Identifier	ZEND_UNSET_DIM_SPEC_VAR_CONST_HANDLER		402386	1885					
ANR	404283	Identifier	ZEND_UNSET_DIM_SPEC_VAR_TMPVAR_HANDLER		402386	1886					
ANR	404284	Identifier	ZEND_UNSET_DIM_SPEC_VAR_TMPVAR_HANDLER		402386	1887					
ANR	404285	Identifier	ZEND_NULL_HANDLER		402386	1888					
ANR	404286	Identifier	ZEND_UNSET_DIM_SPEC_VAR_CV_HANDLER		402386	1889					
ANR	404287	Identifier	ZEND_UNSET_DIM_SPEC_UNUSED_CONST_HANDLER		402386	1890					
ANR	404288	Identifier	ZEND_UNSET_DIM_SPEC_UNUSED_TMPVAR_HANDLER		402386	1891					
ANR	404289	Identifier	ZEND_UNSET_DIM_SPEC_UNUSED_TMPVAR_HANDLER		402386	1892					
ANR	404290	Identifier	ZEND_NULL_HANDLER		402386	1893					
ANR	404291	Identifier	ZEND_UNSET_DIM_SPEC_UNUSED_CV_HANDLER		402386	1894					
ANR	404292	Identifier	ZEND_UNSET_DIM_SPEC_CV_CONST_HANDLER		402386	1895					
ANR	404293	Identifier	ZEND_UNSET_DIM_SPEC_CV_TMPVAR_HANDLER		402386	1896					
ANR	404294	Identifier	ZEND_UNSET_DIM_SPEC_CV_TMPVAR_HANDLER		402386	1897					
ANR	404295	Identifier	ZEND_NULL_HANDLER		402386	1898					
ANR	404296	Identifier	ZEND_UNSET_DIM_SPEC_CV_CV_HANDLER		402386	1899					
ANR	404297	Identifier	ZEND_NULL_HANDLER		402386	1900					
ANR	404298	Identifier	ZEND_NULL_HANDLER		402386	1901					
ANR	404299	Identifier	ZEND_NULL_HANDLER		402386	1902					
ANR	404300	Identifier	ZEND_NULL_HANDLER		402386	1903					
ANR	404301	Identifier	ZEND_NULL_HANDLER		402386	1904					
ANR	404302	Identifier	ZEND_NULL_HANDLER		402386	1905					
ANR	404303	Identifier	ZEND_NULL_HANDLER		402386	1906					
ANR	404304	Identifier	ZEND_NULL_HANDLER		402386	1907					
ANR	404305	Identifier	ZEND_NULL_HANDLER		402386	1908					
ANR	404306	Identifier	ZEND_NULL_HANDLER		402386	1909					
ANR	404307	Identifier	ZEND_UNSET_OBJ_SPEC_VAR_CONST_HANDLER		402386	1910					
ANR	404308	Identifier	ZEND_UNSET_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	1911					
ANR	404309	Identifier	ZEND_UNSET_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	1912					
ANR	404310	Identifier	ZEND_NULL_HANDLER		402386	1913					
ANR	404311	Identifier	ZEND_UNSET_OBJ_SPEC_VAR_CV_HANDLER		402386	1914					
ANR	404312	Identifier	ZEND_UNSET_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	1915					
ANR	404313	Identifier	ZEND_UNSET_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	1916					
ANR	404314	Identifier	ZEND_UNSET_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	1917					
ANR	404315	Identifier	ZEND_NULL_HANDLER		402386	1918					
ANR	404316	Identifier	ZEND_UNSET_OBJ_SPEC_UNUSED_CV_HANDLER		402386	1919					
ANR	404317	Identifier	ZEND_UNSET_OBJ_SPEC_CV_CONST_HANDLER		402386	1920					
ANR	404318	Identifier	ZEND_UNSET_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	1921					
ANR	404319	Identifier	ZEND_UNSET_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	1922					
ANR	404320	Identifier	ZEND_NULL_HANDLER		402386	1923					
ANR	404321	Identifier	ZEND_UNSET_OBJ_SPEC_CV_CV_HANDLER		402386	1924					
ANR	404322	Identifier	ZEND_FE_RESET_R_SPEC_CONST_HANDLER		402386	1925					
ANR	404323	Identifier	ZEND_FE_RESET_R_SPEC_CONST_HANDLER		402386	1926					
ANR	404324	Identifier	ZEND_FE_RESET_R_SPEC_CONST_HANDLER		402386	1927					
ANR	404325	Identifier	ZEND_FE_RESET_R_SPEC_CONST_HANDLER		402386	1928					
ANR	404326	Identifier	ZEND_FE_RESET_R_SPEC_CONST_HANDLER		402386	1929					
ANR	404327	Identifier	ZEND_FE_RESET_R_SPEC_TMP_HANDLER		402386	1930					
ANR	404328	Identifier	ZEND_FE_RESET_R_SPEC_TMP_HANDLER		402386	1931					
ANR	404329	Identifier	ZEND_FE_RESET_R_SPEC_TMP_HANDLER		402386	1932					
ANR	404330	Identifier	ZEND_FE_RESET_R_SPEC_TMP_HANDLER		402386	1933					
ANR	404331	Identifier	ZEND_FE_RESET_R_SPEC_TMP_HANDLER		402386	1934					
ANR	404332	Identifier	ZEND_FE_RESET_R_SPEC_VAR_HANDLER		402386	1935					
ANR	404333	Identifier	ZEND_FE_RESET_R_SPEC_VAR_HANDLER		402386	1936					
ANR	404334	Identifier	ZEND_FE_RESET_R_SPEC_VAR_HANDLER		402386	1937					
ANR	404335	Identifier	ZEND_FE_RESET_R_SPEC_VAR_HANDLER		402386	1938					
ANR	404336	Identifier	ZEND_FE_RESET_R_SPEC_VAR_HANDLER		402386	1939					
ANR	404337	Identifier	ZEND_NULL_HANDLER		402386	1940					
ANR	404338	Identifier	ZEND_NULL_HANDLER		402386	1941					
ANR	404339	Identifier	ZEND_NULL_HANDLER		402386	1942					
ANR	404340	Identifier	ZEND_NULL_HANDLER		402386	1943					
ANR	404341	Identifier	ZEND_NULL_HANDLER		402386	1944					
ANR	404342	Identifier	ZEND_FE_RESET_R_SPEC_CV_HANDLER		402386	1945					
ANR	404343	Identifier	ZEND_FE_RESET_R_SPEC_CV_HANDLER		402386	1946					
ANR	404344	Identifier	ZEND_FE_RESET_R_SPEC_CV_HANDLER		402386	1947					
ANR	404345	Identifier	ZEND_FE_RESET_R_SPEC_CV_HANDLER		402386	1948					
ANR	404346	Identifier	ZEND_FE_RESET_R_SPEC_CV_HANDLER		402386	1949					
ANR	404347	Identifier	ZEND_NULL_HANDLER		402386	1950					
ANR	404348	Identifier	ZEND_NULL_HANDLER		402386	1951					
ANR	404349	Identifier	ZEND_NULL_HANDLER		402386	1952					
ANR	404350	Identifier	ZEND_NULL_HANDLER		402386	1953					
ANR	404351	Identifier	ZEND_NULL_HANDLER		402386	1954					
ANR	404352	Identifier	ZEND_NULL_HANDLER		402386	1955					
ANR	404353	Identifier	ZEND_NULL_HANDLER		402386	1956					
ANR	404354	Identifier	ZEND_NULL_HANDLER		402386	1957					
ANR	404355	Identifier	ZEND_NULL_HANDLER		402386	1958					
ANR	404356	Identifier	ZEND_NULL_HANDLER		402386	1959					
ANR	404357	Identifier	ZEND_FE_FETCH_R_SPEC_VAR_HANDLER		402386	1960					
ANR	404358	Identifier	ZEND_FE_FETCH_R_SPEC_VAR_HANDLER		402386	1961					
ANR	404359	Identifier	ZEND_FE_FETCH_R_SPEC_VAR_HANDLER		402386	1962					
ANR	404360	Identifier	ZEND_FE_FETCH_R_SPEC_VAR_HANDLER		402386	1963					
ANR	404361	Identifier	ZEND_FE_FETCH_R_SPEC_VAR_HANDLER		402386	1964					
ANR	404362	Identifier	ZEND_NULL_HANDLER		402386	1965					
ANR	404363	Identifier	ZEND_NULL_HANDLER		402386	1966					
ANR	404364	Identifier	ZEND_NULL_HANDLER		402386	1967					
ANR	404365	Identifier	ZEND_NULL_HANDLER		402386	1968					
ANR	404366	Identifier	ZEND_NULL_HANDLER		402386	1969					
ANR	404367	Identifier	ZEND_NULL_HANDLER		402386	1970					
ANR	404368	Identifier	ZEND_NULL_HANDLER		402386	1971					
ANR	404369	Identifier	ZEND_NULL_HANDLER		402386	1972					
ANR	404370	Identifier	ZEND_NULL_HANDLER		402386	1973					
ANR	404371	Identifier	ZEND_NULL_HANDLER		402386	1974					
ANR	404372	Identifier	ZEND_EXIT_SPEC_CONST_HANDLER		402386	1975					
ANR	404373	Identifier	ZEND_EXIT_SPEC_CONST_HANDLER		402386	1976					
ANR	404374	Identifier	ZEND_EXIT_SPEC_CONST_HANDLER		402386	1977					
ANR	404375	Identifier	ZEND_EXIT_SPEC_CONST_HANDLER		402386	1978					
ANR	404376	Identifier	ZEND_EXIT_SPEC_CONST_HANDLER		402386	1979					
ANR	404377	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1980					
ANR	404378	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1981					
ANR	404379	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1982					
ANR	404380	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1983					
ANR	404381	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1984					
ANR	404382	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1985					
ANR	404383	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1986					
ANR	404384	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1987					
ANR	404385	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1988					
ANR	404386	Identifier	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386	1989					
ANR	404387	Identifier	ZEND_EXIT_SPEC_UNUSED_HANDLER		402386	1990					
ANR	404388	Identifier	ZEND_EXIT_SPEC_UNUSED_HANDLER		402386	1991					
ANR	404389	Identifier	ZEND_EXIT_SPEC_UNUSED_HANDLER		402386	1992					
ANR	404390	Identifier	ZEND_EXIT_SPEC_UNUSED_HANDLER		402386	1993					
ANR	404391	Identifier	ZEND_EXIT_SPEC_UNUSED_HANDLER		402386	1994					
ANR	404392	Identifier	ZEND_EXIT_SPEC_CV_HANDLER		402386	1995					
ANR	404393	Identifier	ZEND_EXIT_SPEC_CV_HANDLER		402386	1996					
ANR	404394	Identifier	ZEND_EXIT_SPEC_CV_HANDLER		402386	1997					
ANR	404395	Identifier	ZEND_EXIT_SPEC_CV_HANDLER		402386	1998					
ANR	404396	Identifier	ZEND_EXIT_SPEC_CV_HANDLER		402386	1999					
ANR	404397	Identifier	ZEND_FETCH_R_SPEC_CONST_CONST_HANDLER		402386	2000					
ANR	404398	Identifier	ZEND_NULL_HANDLER		402386	2001					
ANR	404399	Identifier	ZEND_FETCH_R_SPEC_CONST_VAR_HANDLER		402386	2002					
ANR	404400	Identifier	ZEND_FETCH_R_SPEC_CONST_UNUSED_HANDLER		402386	2003					
ANR	404401	Identifier	ZEND_NULL_HANDLER		402386	2004					
ANR	404402	Identifier	ZEND_FETCH_R_SPEC_TMPVAR_CONST_HANDLER		402386	2005					
ANR	404403	Identifier	ZEND_NULL_HANDLER		402386	2006					
ANR	404404	Identifier	ZEND_FETCH_R_SPEC_TMPVAR_VAR_HANDLER		402386	2007					
ANR	404405	Identifier	ZEND_FETCH_R_SPEC_TMPVAR_UNUSED_HANDLER		402386	2008					
ANR	404406	Identifier	ZEND_NULL_HANDLER		402386	2009					
ANR	404407	Identifier	ZEND_FETCH_R_SPEC_TMPVAR_CONST_HANDLER		402386	2010					
ANR	404408	Identifier	ZEND_NULL_HANDLER		402386	2011					
ANR	404409	Identifier	ZEND_FETCH_R_SPEC_TMPVAR_VAR_HANDLER		402386	2012					
ANR	404410	Identifier	ZEND_FETCH_R_SPEC_TMPVAR_UNUSED_HANDLER		402386	2013					
ANR	404411	Identifier	ZEND_NULL_HANDLER		402386	2014					
ANR	404412	Identifier	ZEND_NULL_HANDLER		402386	2015					
ANR	404413	Identifier	ZEND_NULL_HANDLER		402386	2016					
ANR	404414	Identifier	ZEND_NULL_HANDLER		402386	2017					
ANR	404415	Identifier	ZEND_NULL_HANDLER		402386	2018					
ANR	404416	Identifier	ZEND_NULL_HANDLER		402386	2019					
ANR	404417	Identifier	ZEND_FETCH_R_SPEC_CV_CONST_HANDLER		402386	2020					
ANR	404418	Identifier	ZEND_NULL_HANDLER		402386	2021					
ANR	404419	Identifier	ZEND_FETCH_R_SPEC_CV_VAR_HANDLER		402386	2022					
ANR	404420	Identifier	ZEND_FETCH_R_SPEC_CV_UNUSED_HANDLER		402386	2023					
ANR	404421	Identifier	ZEND_NULL_HANDLER		402386	2024					
ANR	404422	Identifier	ZEND_FETCH_DIM_R_SPEC_CONST_CONST_HANDLER		402386	2025					
ANR	404423	Identifier	ZEND_FETCH_DIM_R_SPEC_CONST_TMPVAR_HANDLER		402386	2026					
ANR	404424	Identifier	ZEND_FETCH_DIM_R_SPEC_CONST_TMPVAR_HANDLER		402386	2027					
ANR	404425	Identifier	ZEND_NULL_HANDLER		402386	2028					
ANR	404426	Identifier	ZEND_FETCH_DIM_R_SPEC_CONST_CV_HANDLER		402386	2029					
ANR	404427	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_CONST_HANDLER		402386	2030					
ANR	404428	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2031					
ANR	404429	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2032					
ANR	404430	Identifier	ZEND_NULL_HANDLER		402386	2033					
ANR	404431	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_CV_HANDLER		402386	2034					
ANR	404432	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_CONST_HANDLER		402386	2035					
ANR	404433	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2036					
ANR	404434	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2037					
ANR	404435	Identifier	ZEND_NULL_HANDLER		402386	2038					
ANR	404436	Identifier	ZEND_FETCH_DIM_R_SPEC_TMPVAR_CV_HANDLER		402386	2039					
ANR	404437	Identifier	ZEND_NULL_HANDLER		402386	2040					
ANR	404438	Identifier	ZEND_NULL_HANDLER		402386	2041					
ANR	404439	Identifier	ZEND_NULL_HANDLER		402386	2042					
ANR	404440	Identifier	ZEND_NULL_HANDLER		402386	2043					
ANR	404441	Identifier	ZEND_NULL_HANDLER		402386	2044					
ANR	404442	Identifier	ZEND_FETCH_DIM_R_SPEC_CV_CONST_HANDLER		402386	2045					
ANR	404443	Identifier	ZEND_FETCH_DIM_R_SPEC_CV_TMPVAR_HANDLER		402386	2046					
ANR	404444	Identifier	ZEND_FETCH_DIM_R_SPEC_CV_TMPVAR_HANDLER		402386	2047					
ANR	404445	Identifier	ZEND_NULL_HANDLER		402386	2048					
ANR	404446	Identifier	ZEND_FETCH_DIM_R_SPEC_CV_CV_HANDLER		402386	2049					
ANR	404447	Identifier	ZEND_FETCH_OBJ_R_SPEC_CONST_CONST_HANDLER		402386	2050					
ANR	404448	Identifier	ZEND_FETCH_OBJ_R_SPEC_CONST_TMPVAR_HANDLER		402386	2051					
ANR	404449	Identifier	ZEND_FETCH_OBJ_R_SPEC_CONST_TMPVAR_HANDLER		402386	2052					
ANR	404450	Identifier	ZEND_NULL_HANDLER		402386	2053					
ANR	404451	Identifier	ZEND_FETCH_OBJ_R_SPEC_CONST_CV_HANDLER		402386	2054					
ANR	404452	Identifier	ZEND_FETCH_OBJ_R_SPEC_TMP_CONST_HANDLER		402386	2055					
ANR	404453	Identifier	ZEND_FETCH_OBJ_R_SPEC_TMP_TMPVAR_HANDLER		402386	2056					
ANR	404454	Identifier	ZEND_FETCH_OBJ_R_SPEC_TMP_TMPVAR_HANDLER		402386	2057					
ANR	404455	Identifier	ZEND_NULL_HANDLER		402386	2058					
ANR	404456	Identifier	ZEND_FETCH_OBJ_R_SPEC_TMP_CV_HANDLER		402386	2059					
ANR	404457	Identifier	ZEND_FETCH_OBJ_R_SPEC_VAR_CONST_HANDLER		402386	2060					
ANR	404458	Identifier	ZEND_FETCH_OBJ_R_SPEC_VAR_TMPVAR_HANDLER		402386	2061					
ANR	404459	Identifier	ZEND_FETCH_OBJ_R_SPEC_VAR_TMPVAR_HANDLER		402386	2062					
ANR	404460	Identifier	ZEND_NULL_HANDLER		402386	2063					
ANR	404461	Identifier	ZEND_FETCH_OBJ_R_SPEC_VAR_CV_HANDLER		402386	2064					
ANR	404462	Identifier	ZEND_FETCH_OBJ_R_SPEC_UNUSED_CONST_HANDLER		402386	2065					
ANR	404463	Identifier	ZEND_FETCH_OBJ_R_SPEC_UNUSED_TMPVAR_HANDLER		402386	2066					
ANR	404464	Identifier	ZEND_FETCH_OBJ_R_SPEC_UNUSED_TMPVAR_HANDLER		402386	2067					
ANR	404465	Identifier	ZEND_NULL_HANDLER		402386	2068					
ANR	404466	Identifier	ZEND_FETCH_OBJ_R_SPEC_UNUSED_CV_HANDLER		402386	2069					
ANR	404467	Identifier	ZEND_FETCH_OBJ_R_SPEC_CV_CONST_HANDLER		402386	2070					
ANR	404468	Identifier	ZEND_FETCH_OBJ_R_SPEC_CV_TMPVAR_HANDLER		402386	2071					
ANR	404469	Identifier	ZEND_FETCH_OBJ_R_SPEC_CV_TMPVAR_HANDLER		402386	2072					
ANR	404470	Identifier	ZEND_NULL_HANDLER		402386	2073					
ANR	404471	Identifier	ZEND_FETCH_OBJ_R_SPEC_CV_CV_HANDLER		402386	2074					
ANR	404472	Identifier	ZEND_FETCH_W_SPEC_CONST_CONST_HANDLER		402386	2075					
ANR	404473	Identifier	ZEND_NULL_HANDLER		402386	2076					
ANR	404474	Identifier	ZEND_FETCH_W_SPEC_CONST_VAR_HANDLER		402386	2077					
ANR	404475	Identifier	ZEND_FETCH_W_SPEC_CONST_UNUSED_HANDLER		402386	2078					
ANR	404476	Identifier	ZEND_NULL_HANDLER		402386	2079					
ANR	404477	Identifier	ZEND_FETCH_W_SPEC_TMPVAR_CONST_HANDLER		402386	2080					
ANR	404478	Identifier	ZEND_NULL_HANDLER		402386	2081					
ANR	404479	Identifier	ZEND_FETCH_W_SPEC_TMPVAR_VAR_HANDLER		402386	2082					
ANR	404480	Identifier	ZEND_FETCH_W_SPEC_TMPVAR_UNUSED_HANDLER		402386	2083					
ANR	404481	Identifier	ZEND_NULL_HANDLER		402386	2084					
ANR	404482	Identifier	ZEND_FETCH_W_SPEC_TMPVAR_CONST_HANDLER		402386	2085					
ANR	404483	Identifier	ZEND_NULL_HANDLER		402386	2086					
ANR	404484	Identifier	ZEND_FETCH_W_SPEC_TMPVAR_VAR_HANDLER		402386	2087					
ANR	404485	Identifier	ZEND_FETCH_W_SPEC_TMPVAR_UNUSED_HANDLER		402386	2088					
ANR	404486	Identifier	ZEND_NULL_HANDLER		402386	2089					
ANR	404487	Identifier	ZEND_NULL_HANDLER		402386	2090					
ANR	404488	Identifier	ZEND_NULL_HANDLER		402386	2091					
ANR	404489	Identifier	ZEND_NULL_HANDLER		402386	2092					
ANR	404490	Identifier	ZEND_NULL_HANDLER		402386	2093					
ANR	404491	Identifier	ZEND_NULL_HANDLER		402386	2094					
ANR	404492	Identifier	ZEND_FETCH_W_SPEC_CV_CONST_HANDLER		402386	2095					
ANR	404493	Identifier	ZEND_NULL_HANDLER		402386	2096					
ANR	404494	Identifier	ZEND_FETCH_W_SPEC_CV_VAR_HANDLER		402386	2097					
ANR	404495	Identifier	ZEND_FETCH_W_SPEC_CV_UNUSED_HANDLER		402386	2098					
ANR	404496	Identifier	ZEND_NULL_HANDLER		402386	2099					
ANR	404497	Identifier	ZEND_NULL_HANDLER		402386	2100					
ANR	404498	Identifier	ZEND_NULL_HANDLER		402386	2101					
ANR	404499	Identifier	ZEND_NULL_HANDLER		402386	2102					
ANR	404500	Identifier	ZEND_NULL_HANDLER		402386	2103					
ANR	404501	Identifier	ZEND_NULL_HANDLER		402386	2104					
ANR	404502	Identifier	ZEND_NULL_HANDLER		402386	2105					
ANR	404503	Identifier	ZEND_NULL_HANDLER		402386	2106					
ANR	404504	Identifier	ZEND_NULL_HANDLER		402386	2107					
ANR	404505	Identifier	ZEND_NULL_HANDLER		402386	2108					
ANR	404506	Identifier	ZEND_NULL_HANDLER		402386	2109					
ANR	404507	Identifier	ZEND_FETCH_DIM_W_SPEC_VAR_CONST_HANDLER		402386	2110					
ANR	404508	Identifier	ZEND_FETCH_DIM_W_SPEC_VAR_TMPVAR_HANDLER		402386	2111					
ANR	404509	Identifier	ZEND_FETCH_DIM_W_SPEC_VAR_TMPVAR_HANDLER		402386	2112					
ANR	404510	Identifier	ZEND_FETCH_DIM_W_SPEC_VAR_UNUSED_HANDLER		402386	2113					
ANR	404511	Identifier	ZEND_FETCH_DIM_W_SPEC_VAR_CV_HANDLER		402386	2114					
ANR	404512	Identifier	ZEND_NULL_HANDLER		402386	2115					
ANR	404513	Identifier	ZEND_NULL_HANDLER		402386	2116					
ANR	404514	Identifier	ZEND_NULL_HANDLER		402386	2117					
ANR	404515	Identifier	ZEND_NULL_HANDLER		402386	2118					
ANR	404516	Identifier	ZEND_NULL_HANDLER		402386	2119					
ANR	404517	Identifier	ZEND_FETCH_DIM_W_SPEC_CV_CONST_HANDLER		402386	2120					
ANR	404518	Identifier	ZEND_FETCH_DIM_W_SPEC_CV_TMPVAR_HANDLER		402386	2121					
ANR	404519	Identifier	ZEND_FETCH_DIM_W_SPEC_CV_TMPVAR_HANDLER		402386	2122					
ANR	404520	Identifier	ZEND_FETCH_DIM_W_SPEC_CV_UNUSED_HANDLER		402386	2123					
ANR	404521	Identifier	ZEND_FETCH_DIM_W_SPEC_CV_CV_HANDLER		402386	2124					
ANR	404522	Identifier	ZEND_NULL_HANDLER		402386	2125					
ANR	404523	Identifier	ZEND_NULL_HANDLER		402386	2126					
ANR	404524	Identifier	ZEND_NULL_HANDLER		402386	2127					
ANR	404525	Identifier	ZEND_NULL_HANDLER		402386	2128					
ANR	404526	Identifier	ZEND_NULL_HANDLER		402386	2129					
ANR	404527	Identifier	ZEND_NULL_HANDLER		402386	2130					
ANR	404528	Identifier	ZEND_NULL_HANDLER		402386	2131					
ANR	404529	Identifier	ZEND_NULL_HANDLER		402386	2132					
ANR	404530	Identifier	ZEND_NULL_HANDLER		402386	2133					
ANR	404531	Identifier	ZEND_NULL_HANDLER		402386	2134					
ANR	404532	Identifier	ZEND_FETCH_OBJ_W_SPEC_VAR_CONST_HANDLER		402386	2135					
ANR	404533	Identifier	ZEND_FETCH_OBJ_W_SPEC_VAR_TMPVAR_HANDLER		402386	2136					
ANR	404534	Identifier	ZEND_FETCH_OBJ_W_SPEC_VAR_TMPVAR_HANDLER		402386	2137					
ANR	404535	Identifier	ZEND_NULL_HANDLER		402386	2138					
ANR	404536	Identifier	ZEND_FETCH_OBJ_W_SPEC_VAR_CV_HANDLER		402386	2139					
ANR	404537	Identifier	ZEND_FETCH_OBJ_W_SPEC_UNUSED_CONST_HANDLER		402386	2140					
ANR	404538	Identifier	ZEND_FETCH_OBJ_W_SPEC_UNUSED_TMPVAR_HANDLER		402386	2141					
ANR	404539	Identifier	ZEND_FETCH_OBJ_W_SPEC_UNUSED_TMPVAR_HANDLER		402386	2142					
ANR	404540	Identifier	ZEND_NULL_HANDLER		402386	2143					
ANR	404541	Identifier	ZEND_FETCH_OBJ_W_SPEC_UNUSED_CV_HANDLER		402386	2144					
ANR	404542	Identifier	ZEND_FETCH_OBJ_W_SPEC_CV_CONST_HANDLER		402386	2145					
ANR	404543	Identifier	ZEND_FETCH_OBJ_W_SPEC_CV_TMPVAR_HANDLER		402386	2146					
ANR	404544	Identifier	ZEND_FETCH_OBJ_W_SPEC_CV_TMPVAR_HANDLER		402386	2147					
ANR	404545	Identifier	ZEND_NULL_HANDLER		402386	2148					
ANR	404546	Identifier	ZEND_FETCH_OBJ_W_SPEC_CV_CV_HANDLER		402386	2149					
ANR	404547	Identifier	ZEND_FETCH_RW_SPEC_CONST_CONST_HANDLER		402386	2150					
ANR	404548	Identifier	ZEND_NULL_HANDLER		402386	2151					
ANR	404549	Identifier	ZEND_FETCH_RW_SPEC_CONST_VAR_HANDLER		402386	2152					
ANR	404550	Identifier	ZEND_FETCH_RW_SPEC_CONST_UNUSED_HANDLER		402386	2153					
ANR	404551	Identifier	ZEND_NULL_HANDLER		402386	2154					
ANR	404552	Identifier	ZEND_FETCH_RW_SPEC_TMPVAR_CONST_HANDLER		402386	2155					
ANR	404553	Identifier	ZEND_NULL_HANDLER		402386	2156					
ANR	404554	Identifier	ZEND_FETCH_RW_SPEC_TMPVAR_VAR_HANDLER		402386	2157					
ANR	404555	Identifier	ZEND_FETCH_RW_SPEC_TMPVAR_UNUSED_HANDLER		402386	2158					
ANR	404556	Identifier	ZEND_NULL_HANDLER		402386	2159					
ANR	404557	Identifier	ZEND_FETCH_RW_SPEC_TMPVAR_CONST_HANDLER		402386	2160					
ANR	404558	Identifier	ZEND_NULL_HANDLER		402386	2161					
ANR	404559	Identifier	ZEND_FETCH_RW_SPEC_TMPVAR_VAR_HANDLER		402386	2162					
ANR	404560	Identifier	ZEND_FETCH_RW_SPEC_TMPVAR_UNUSED_HANDLER		402386	2163					
ANR	404561	Identifier	ZEND_NULL_HANDLER		402386	2164					
ANR	404562	Identifier	ZEND_NULL_HANDLER		402386	2165					
ANR	404563	Identifier	ZEND_NULL_HANDLER		402386	2166					
ANR	404564	Identifier	ZEND_NULL_HANDLER		402386	2167					
ANR	404565	Identifier	ZEND_NULL_HANDLER		402386	2168					
ANR	404566	Identifier	ZEND_NULL_HANDLER		402386	2169					
ANR	404567	Identifier	ZEND_FETCH_RW_SPEC_CV_CONST_HANDLER		402386	2170					
ANR	404568	Identifier	ZEND_NULL_HANDLER		402386	2171					
ANR	404569	Identifier	ZEND_FETCH_RW_SPEC_CV_VAR_HANDLER		402386	2172					
ANR	404570	Identifier	ZEND_FETCH_RW_SPEC_CV_UNUSED_HANDLER		402386	2173					
ANR	404571	Identifier	ZEND_NULL_HANDLER		402386	2174					
ANR	404572	Identifier	ZEND_NULL_HANDLER		402386	2175					
ANR	404573	Identifier	ZEND_NULL_HANDLER		402386	2176					
ANR	404574	Identifier	ZEND_NULL_HANDLER		402386	2177					
ANR	404575	Identifier	ZEND_NULL_HANDLER		402386	2178					
ANR	404576	Identifier	ZEND_NULL_HANDLER		402386	2179					
ANR	404577	Identifier	ZEND_NULL_HANDLER		402386	2180					
ANR	404578	Identifier	ZEND_NULL_HANDLER		402386	2181					
ANR	404579	Identifier	ZEND_NULL_HANDLER		402386	2182					
ANR	404580	Identifier	ZEND_NULL_HANDLER		402386	2183					
ANR	404581	Identifier	ZEND_NULL_HANDLER		402386	2184					
ANR	404582	Identifier	ZEND_FETCH_DIM_RW_SPEC_VAR_CONST_HANDLER		402386	2185					
ANR	404583	Identifier	ZEND_FETCH_DIM_RW_SPEC_VAR_TMPVAR_HANDLER		402386	2186					
ANR	404584	Identifier	ZEND_FETCH_DIM_RW_SPEC_VAR_TMPVAR_HANDLER		402386	2187					
ANR	404585	Identifier	ZEND_FETCH_DIM_RW_SPEC_VAR_UNUSED_HANDLER		402386	2188					
ANR	404586	Identifier	ZEND_FETCH_DIM_RW_SPEC_VAR_CV_HANDLER		402386	2189					
ANR	404587	Identifier	ZEND_NULL_HANDLER		402386	2190					
ANR	404588	Identifier	ZEND_NULL_HANDLER		402386	2191					
ANR	404589	Identifier	ZEND_NULL_HANDLER		402386	2192					
ANR	404590	Identifier	ZEND_NULL_HANDLER		402386	2193					
ANR	404591	Identifier	ZEND_NULL_HANDLER		402386	2194					
ANR	404592	Identifier	ZEND_FETCH_DIM_RW_SPEC_CV_CONST_HANDLER		402386	2195					
ANR	404593	Identifier	ZEND_FETCH_DIM_RW_SPEC_CV_TMPVAR_HANDLER		402386	2196					
ANR	404594	Identifier	ZEND_FETCH_DIM_RW_SPEC_CV_TMPVAR_HANDLER		402386	2197					
ANR	404595	Identifier	ZEND_FETCH_DIM_RW_SPEC_CV_UNUSED_HANDLER		402386	2198					
ANR	404596	Identifier	ZEND_FETCH_DIM_RW_SPEC_CV_CV_HANDLER		402386	2199					
ANR	404597	Identifier	ZEND_NULL_HANDLER		402386	2200					
ANR	404598	Identifier	ZEND_NULL_HANDLER		402386	2201					
ANR	404599	Identifier	ZEND_NULL_HANDLER		402386	2202					
ANR	404600	Identifier	ZEND_NULL_HANDLER		402386	2203					
ANR	404601	Identifier	ZEND_NULL_HANDLER		402386	2204					
ANR	404602	Identifier	ZEND_NULL_HANDLER		402386	2205					
ANR	404603	Identifier	ZEND_NULL_HANDLER		402386	2206					
ANR	404604	Identifier	ZEND_NULL_HANDLER		402386	2207					
ANR	404605	Identifier	ZEND_NULL_HANDLER		402386	2208					
ANR	404606	Identifier	ZEND_NULL_HANDLER		402386	2209					
ANR	404607	Identifier	ZEND_FETCH_OBJ_RW_SPEC_VAR_CONST_HANDLER		402386	2210					
ANR	404608	Identifier	ZEND_FETCH_OBJ_RW_SPEC_VAR_TMPVAR_HANDLER		402386	2211					
ANR	404609	Identifier	ZEND_FETCH_OBJ_RW_SPEC_VAR_TMPVAR_HANDLER		402386	2212					
ANR	404610	Identifier	ZEND_NULL_HANDLER		402386	2213					
ANR	404611	Identifier	ZEND_FETCH_OBJ_RW_SPEC_VAR_CV_HANDLER		402386	2214					
ANR	404612	Identifier	ZEND_FETCH_OBJ_RW_SPEC_UNUSED_CONST_HANDLER		402386	2215					
ANR	404613	Identifier	ZEND_FETCH_OBJ_RW_SPEC_UNUSED_TMPVAR_HANDLER		402386	2216					
ANR	404614	Identifier	ZEND_FETCH_OBJ_RW_SPEC_UNUSED_TMPVAR_HANDLER		402386	2217					
ANR	404615	Identifier	ZEND_NULL_HANDLER		402386	2218					
ANR	404616	Identifier	ZEND_FETCH_OBJ_RW_SPEC_UNUSED_CV_HANDLER		402386	2219					
ANR	404617	Identifier	ZEND_FETCH_OBJ_RW_SPEC_CV_CONST_HANDLER		402386	2220					
ANR	404618	Identifier	ZEND_FETCH_OBJ_RW_SPEC_CV_TMPVAR_HANDLER		402386	2221					
ANR	404619	Identifier	ZEND_FETCH_OBJ_RW_SPEC_CV_TMPVAR_HANDLER		402386	2222					
ANR	404620	Identifier	ZEND_NULL_HANDLER		402386	2223					
ANR	404621	Identifier	ZEND_FETCH_OBJ_RW_SPEC_CV_CV_HANDLER		402386	2224					
ANR	404622	Identifier	ZEND_FETCH_IS_SPEC_CONST_CONST_HANDLER		402386	2225					
ANR	404623	Identifier	ZEND_NULL_HANDLER		402386	2226					
ANR	404624	Identifier	ZEND_FETCH_IS_SPEC_CONST_VAR_HANDLER		402386	2227					
ANR	404625	Identifier	ZEND_FETCH_IS_SPEC_CONST_UNUSED_HANDLER		402386	2228					
ANR	404626	Identifier	ZEND_NULL_HANDLER		402386	2229					
ANR	404627	Identifier	ZEND_FETCH_IS_SPEC_TMPVAR_CONST_HANDLER		402386	2230					
ANR	404628	Identifier	ZEND_NULL_HANDLER		402386	2231					
ANR	404629	Identifier	ZEND_FETCH_IS_SPEC_TMPVAR_VAR_HANDLER		402386	2232					
ANR	404630	Identifier	ZEND_FETCH_IS_SPEC_TMPVAR_UNUSED_HANDLER		402386	2233					
ANR	404631	Identifier	ZEND_NULL_HANDLER		402386	2234					
ANR	404632	Identifier	ZEND_FETCH_IS_SPEC_TMPVAR_CONST_HANDLER		402386	2235					
ANR	404633	Identifier	ZEND_NULL_HANDLER		402386	2236					
ANR	404634	Identifier	ZEND_FETCH_IS_SPEC_TMPVAR_VAR_HANDLER		402386	2237					
ANR	404635	Identifier	ZEND_FETCH_IS_SPEC_TMPVAR_UNUSED_HANDLER		402386	2238					
ANR	404636	Identifier	ZEND_NULL_HANDLER		402386	2239					
ANR	404637	Identifier	ZEND_NULL_HANDLER		402386	2240					
ANR	404638	Identifier	ZEND_NULL_HANDLER		402386	2241					
ANR	404639	Identifier	ZEND_NULL_HANDLER		402386	2242					
ANR	404640	Identifier	ZEND_NULL_HANDLER		402386	2243					
ANR	404641	Identifier	ZEND_NULL_HANDLER		402386	2244					
ANR	404642	Identifier	ZEND_FETCH_IS_SPEC_CV_CONST_HANDLER		402386	2245					
ANR	404643	Identifier	ZEND_NULL_HANDLER		402386	2246					
ANR	404644	Identifier	ZEND_FETCH_IS_SPEC_CV_VAR_HANDLER		402386	2247					
ANR	404645	Identifier	ZEND_FETCH_IS_SPEC_CV_UNUSED_HANDLER		402386	2248					
ANR	404646	Identifier	ZEND_NULL_HANDLER		402386	2249					
ANR	404647	Identifier	ZEND_FETCH_DIM_IS_SPEC_CONST_CONST_HANDLER		402386	2250					
ANR	404648	Identifier	ZEND_FETCH_DIM_IS_SPEC_CONST_TMPVAR_HANDLER		402386	2251					
ANR	404649	Identifier	ZEND_FETCH_DIM_IS_SPEC_CONST_TMPVAR_HANDLER		402386	2252					
ANR	404650	Identifier	ZEND_NULL_HANDLER		402386	2253					
ANR	404651	Identifier	ZEND_FETCH_DIM_IS_SPEC_CONST_CV_HANDLER		402386	2254					
ANR	404652	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_CONST_HANDLER		402386	2255					
ANR	404653	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2256					
ANR	404654	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2257					
ANR	404655	Identifier	ZEND_NULL_HANDLER		402386	2258					
ANR	404656	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_CV_HANDLER		402386	2259					
ANR	404657	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_CONST_HANDLER		402386	2260					
ANR	404658	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2261					
ANR	404659	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2262					
ANR	404660	Identifier	ZEND_NULL_HANDLER		402386	2263					
ANR	404661	Identifier	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_CV_HANDLER		402386	2264					
ANR	404662	Identifier	ZEND_NULL_HANDLER		402386	2265					
ANR	404663	Identifier	ZEND_NULL_HANDLER		402386	2266					
ANR	404664	Identifier	ZEND_NULL_HANDLER		402386	2267					
ANR	404665	Identifier	ZEND_NULL_HANDLER		402386	2268					
ANR	404666	Identifier	ZEND_NULL_HANDLER		402386	2269					
ANR	404667	Identifier	ZEND_FETCH_DIM_IS_SPEC_CV_CONST_HANDLER		402386	2270					
ANR	404668	Identifier	ZEND_FETCH_DIM_IS_SPEC_CV_TMPVAR_HANDLER		402386	2271					
ANR	404669	Identifier	ZEND_FETCH_DIM_IS_SPEC_CV_TMPVAR_HANDLER		402386	2272					
ANR	404670	Identifier	ZEND_NULL_HANDLER		402386	2273					
ANR	404671	Identifier	ZEND_FETCH_DIM_IS_SPEC_CV_CV_HANDLER		402386	2274					
ANR	404672	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CONST_CONST_HANDLER		402386	2275					
ANR	404673	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CONST_TMPVAR_HANDLER		402386	2276					
ANR	404674	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CONST_TMPVAR_HANDLER		402386	2277					
ANR	404675	Identifier	ZEND_NULL_HANDLER		402386	2278					
ANR	404676	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CONST_CV_HANDLER		402386	2279					
ANR	404677	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_CONST_HANDLER		402386	2280					
ANR	404678	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2281					
ANR	404679	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2282					
ANR	404680	Identifier	ZEND_NULL_HANDLER		402386	2283					
ANR	404681	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_CV_HANDLER		402386	2284					
ANR	404682	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_CONST_HANDLER		402386	2285					
ANR	404683	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2286					
ANR	404684	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2287					
ANR	404685	Identifier	ZEND_NULL_HANDLER		402386	2288					
ANR	404686	Identifier	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_CV_HANDLER		402386	2289					
ANR	404687	Identifier	ZEND_FETCH_OBJ_IS_SPEC_UNUSED_CONST_HANDLER		402386	2290					
ANR	404688	Identifier	ZEND_FETCH_OBJ_IS_SPEC_UNUSED_TMPVAR_HANDLER		402386	2291					
ANR	404689	Identifier	ZEND_FETCH_OBJ_IS_SPEC_UNUSED_TMPVAR_HANDLER		402386	2292					
ANR	404690	Identifier	ZEND_NULL_HANDLER		402386	2293					
ANR	404691	Identifier	ZEND_FETCH_OBJ_IS_SPEC_UNUSED_CV_HANDLER		402386	2294					
ANR	404692	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CV_CONST_HANDLER		402386	2295					
ANR	404693	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CV_TMPVAR_HANDLER		402386	2296					
ANR	404694	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CV_TMPVAR_HANDLER		402386	2297					
ANR	404695	Identifier	ZEND_NULL_HANDLER		402386	2298					
ANR	404696	Identifier	ZEND_FETCH_OBJ_IS_SPEC_CV_CV_HANDLER		402386	2299					
ANR	404697	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_CONST_CONST_HANDLER		402386	2300					
ANR	404698	Identifier	ZEND_NULL_HANDLER		402386	2301					
ANR	404699	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_CONST_VAR_HANDLER		402386	2302					
ANR	404700	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_CONST_UNUSED_HANDLER		402386	2303					
ANR	404701	Identifier	ZEND_NULL_HANDLER		402386	2304					
ANR	404702	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_CONST_HANDLER		402386	2305					
ANR	404703	Identifier	ZEND_NULL_HANDLER		402386	2306					
ANR	404704	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_VAR_HANDLER		402386	2307					
ANR	404705	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_UNUSED_HANDLER		402386	2308					
ANR	404706	Identifier	ZEND_NULL_HANDLER		402386	2309					
ANR	404707	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_CONST_HANDLER		402386	2310					
ANR	404708	Identifier	ZEND_NULL_HANDLER		402386	2311					
ANR	404709	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_VAR_HANDLER		402386	2312					
ANR	404710	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_UNUSED_HANDLER		402386	2313					
ANR	404711	Identifier	ZEND_NULL_HANDLER		402386	2314					
ANR	404712	Identifier	ZEND_NULL_HANDLER		402386	2315					
ANR	404713	Identifier	ZEND_NULL_HANDLER		402386	2316					
ANR	404714	Identifier	ZEND_NULL_HANDLER		402386	2317					
ANR	404715	Identifier	ZEND_NULL_HANDLER		402386	2318					
ANR	404716	Identifier	ZEND_NULL_HANDLER		402386	2319					
ANR	404717	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_CV_CONST_HANDLER		402386	2320					
ANR	404718	Identifier	ZEND_NULL_HANDLER		402386	2321					
ANR	404719	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_CV_VAR_HANDLER		402386	2322					
ANR	404720	Identifier	ZEND_FETCH_FUNC_ARG_SPEC_CV_UNUSED_HANDLER		402386	2323					
ANR	404721	Identifier	ZEND_NULL_HANDLER		402386	2324					
ANR	404722	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_CONST_HANDLER		402386	2325					
ANR	404723	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_TMPVAR_HANDLER		402386	2326					
ANR	404724	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_TMPVAR_HANDLER		402386	2327					
ANR	404725	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_UNUSED_HANDLER		402386	2328					
ANR	404726	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_CV_HANDLER		402386	2329					
ANR	404727	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_CONST_HANDLER		402386	2330					
ANR	404728	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_TMPVAR_HANDLER		402386	2331					
ANR	404729	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_TMPVAR_HANDLER		402386	2332					
ANR	404730	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_UNUSED_HANDLER		402386	2333					
ANR	404731	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_CV_HANDLER		402386	2334					
ANR	404732	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_CONST_HANDLER		402386	2335					
ANR	404733	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_TMPVAR_HANDLER		402386	2336					
ANR	404734	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_TMPVAR_HANDLER		402386	2337					
ANR	404735	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_UNUSED_HANDLER		402386	2338					
ANR	404736	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_CV_HANDLER		402386	2339					
ANR	404737	Identifier	ZEND_NULL_HANDLER		402386	2340					
ANR	404738	Identifier	ZEND_NULL_HANDLER		402386	2341					
ANR	404739	Identifier	ZEND_NULL_HANDLER		402386	2342					
ANR	404740	Identifier	ZEND_NULL_HANDLER		402386	2343					
ANR	404741	Identifier	ZEND_NULL_HANDLER		402386	2344					
ANR	404742	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_CONST_HANDLER		402386	2345					
ANR	404743	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_TMPVAR_HANDLER		402386	2346					
ANR	404744	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_TMPVAR_HANDLER		402386	2347					
ANR	404745	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_UNUSED_HANDLER		402386	2348					
ANR	404746	Identifier	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_CV_HANDLER		402386	2349					
ANR	404747	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CONST_CONST_HANDLER		402386	2350					
ANR	404748	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CONST_TMPVAR_HANDLER		402386	2351					
ANR	404749	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CONST_TMPVAR_HANDLER		402386	2352					
ANR	404750	Identifier	ZEND_NULL_HANDLER		402386	2353					
ANR	404751	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CONST_CV_HANDLER		402386	2354					
ANR	404752	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_TMP_CONST_HANDLER		402386	2355					
ANR	404753	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_TMP_TMPVAR_HANDLER		402386	2356					
ANR	404754	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_TMP_TMPVAR_HANDLER		402386	2357					
ANR	404755	Identifier	ZEND_NULL_HANDLER		402386	2358					
ANR	404756	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_TMP_CV_HANDLER		402386	2359					
ANR	404757	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_VAR_CONST_HANDLER		402386	2360					
ANR	404758	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_VAR_TMPVAR_HANDLER		402386	2361					
ANR	404759	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_VAR_TMPVAR_HANDLER		402386	2362					
ANR	404760	Identifier	ZEND_NULL_HANDLER		402386	2363					
ANR	404761	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_VAR_CV_HANDLER		402386	2364					
ANR	404762	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_UNUSED_CONST_HANDLER		402386	2365					
ANR	404763	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_UNUSED_TMPVAR_HANDLER		402386	2366					
ANR	404764	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_UNUSED_TMPVAR_HANDLER		402386	2367					
ANR	404765	Identifier	ZEND_NULL_HANDLER		402386	2368					
ANR	404766	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_UNUSED_CV_HANDLER		402386	2369					
ANR	404767	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CV_CONST_HANDLER		402386	2370					
ANR	404768	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CV_TMPVAR_HANDLER		402386	2371					
ANR	404769	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CV_TMPVAR_HANDLER		402386	2372					
ANR	404770	Identifier	ZEND_NULL_HANDLER		402386	2373					
ANR	404771	Identifier	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CV_CV_HANDLER		402386	2374					
ANR	404772	Identifier	ZEND_FETCH_UNSET_SPEC_CONST_CONST_HANDLER		402386	2375					
ANR	404773	Identifier	ZEND_NULL_HANDLER		402386	2376					
ANR	404774	Identifier	ZEND_FETCH_UNSET_SPEC_CONST_VAR_HANDLER		402386	2377					
ANR	404775	Identifier	ZEND_FETCH_UNSET_SPEC_CONST_UNUSED_HANDLER		402386	2378					
ANR	404776	Identifier	ZEND_NULL_HANDLER		402386	2379					
ANR	404777	Identifier	ZEND_FETCH_UNSET_SPEC_TMPVAR_CONST_HANDLER		402386	2380					
ANR	404778	Identifier	ZEND_NULL_HANDLER		402386	2381					
ANR	404779	Identifier	ZEND_FETCH_UNSET_SPEC_TMPVAR_VAR_HANDLER		402386	2382					
ANR	404780	Identifier	ZEND_FETCH_UNSET_SPEC_TMPVAR_UNUSED_HANDLER		402386	2383					
ANR	404781	Identifier	ZEND_NULL_HANDLER		402386	2384					
ANR	404782	Identifier	ZEND_FETCH_UNSET_SPEC_TMPVAR_CONST_HANDLER		402386	2385					
ANR	404783	Identifier	ZEND_NULL_HANDLER		402386	2386					
ANR	404784	Identifier	ZEND_FETCH_UNSET_SPEC_TMPVAR_VAR_HANDLER		402386	2387					
ANR	404785	Identifier	ZEND_FETCH_UNSET_SPEC_TMPVAR_UNUSED_HANDLER		402386	2388					
ANR	404786	Identifier	ZEND_NULL_HANDLER		402386	2389					
ANR	404787	Identifier	ZEND_NULL_HANDLER		402386	2390					
ANR	404788	Identifier	ZEND_NULL_HANDLER		402386	2391					
ANR	404789	Identifier	ZEND_NULL_HANDLER		402386	2392					
ANR	404790	Identifier	ZEND_NULL_HANDLER		402386	2393					
ANR	404791	Identifier	ZEND_NULL_HANDLER		402386	2394					
ANR	404792	Identifier	ZEND_FETCH_UNSET_SPEC_CV_CONST_HANDLER		402386	2395					
ANR	404793	Identifier	ZEND_NULL_HANDLER		402386	2396					
ANR	404794	Identifier	ZEND_FETCH_UNSET_SPEC_CV_VAR_HANDLER		402386	2397					
ANR	404795	Identifier	ZEND_FETCH_UNSET_SPEC_CV_UNUSED_HANDLER		402386	2398					
ANR	404796	Identifier	ZEND_NULL_HANDLER		402386	2399					
ANR	404797	Identifier	ZEND_NULL_HANDLER		402386	2400					
ANR	404798	Identifier	ZEND_NULL_HANDLER		402386	2401					
ANR	404799	Identifier	ZEND_NULL_HANDLER		402386	2402					
ANR	404800	Identifier	ZEND_NULL_HANDLER		402386	2403					
ANR	404801	Identifier	ZEND_NULL_HANDLER		402386	2404					
ANR	404802	Identifier	ZEND_NULL_HANDLER		402386	2405					
ANR	404803	Identifier	ZEND_NULL_HANDLER		402386	2406					
ANR	404804	Identifier	ZEND_NULL_HANDLER		402386	2407					
ANR	404805	Identifier	ZEND_NULL_HANDLER		402386	2408					
ANR	404806	Identifier	ZEND_NULL_HANDLER		402386	2409					
ANR	404807	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_VAR_CONST_HANDLER		402386	2410					
ANR	404808	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_VAR_TMPVAR_HANDLER		402386	2411					
ANR	404809	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_VAR_TMPVAR_HANDLER		402386	2412					
ANR	404810	Identifier	ZEND_NULL_HANDLER		402386	2413					
ANR	404811	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_VAR_CV_HANDLER		402386	2414					
ANR	404812	Identifier	ZEND_NULL_HANDLER		402386	2415					
ANR	404813	Identifier	ZEND_NULL_HANDLER		402386	2416					
ANR	404814	Identifier	ZEND_NULL_HANDLER		402386	2417					
ANR	404815	Identifier	ZEND_NULL_HANDLER		402386	2418					
ANR	404816	Identifier	ZEND_NULL_HANDLER		402386	2419					
ANR	404817	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_CV_CONST_HANDLER		402386	2420					
ANR	404818	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_CV_TMPVAR_HANDLER		402386	2421					
ANR	404819	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_CV_TMPVAR_HANDLER		402386	2422					
ANR	404820	Identifier	ZEND_NULL_HANDLER		402386	2423					
ANR	404821	Identifier	ZEND_FETCH_DIM_UNSET_SPEC_CV_CV_HANDLER		402386	2424					
ANR	404822	Identifier	ZEND_NULL_HANDLER		402386	2425					
ANR	404823	Identifier	ZEND_NULL_HANDLER		402386	2426					
ANR	404824	Identifier	ZEND_NULL_HANDLER		402386	2427					
ANR	404825	Identifier	ZEND_NULL_HANDLER		402386	2428					
ANR	404826	Identifier	ZEND_NULL_HANDLER		402386	2429					
ANR	404827	Identifier	ZEND_NULL_HANDLER		402386	2430					
ANR	404828	Identifier	ZEND_NULL_HANDLER		402386	2431					
ANR	404829	Identifier	ZEND_NULL_HANDLER		402386	2432					
ANR	404830	Identifier	ZEND_NULL_HANDLER		402386	2433					
ANR	404831	Identifier	ZEND_NULL_HANDLER		402386	2434					
ANR	404832	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_VAR_CONST_HANDLER		402386	2435					
ANR	404833	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_VAR_TMPVAR_HANDLER		402386	2436					
ANR	404834	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_VAR_TMPVAR_HANDLER		402386	2437					
ANR	404835	Identifier	ZEND_NULL_HANDLER		402386	2438					
ANR	404836	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_VAR_CV_HANDLER		402386	2439					
ANR	404837	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_UNUSED_CONST_HANDLER		402386	2440					
ANR	404838	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_UNUSED_TMPVAR_HANDLER		402386	2441					
ANR	404839	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_UNUSED_TMPVAR_HANDLER		402386	2442					
ANR	404840	Identifier	ZEND_NULL_HANDLER		402386	2443					
ANR	404841	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_UNUSED_CV_HANDLER		402386	2444					
ANR	404842	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_CV_CONST_HANDLER		402386	2445					
ANR	404843	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_CV_TMPVAR_HANDLER		402386	2446					
ANR	404844	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_CV_TMPVAR_HANDLER		402386	2447					
ANR	404845	Identifier	ZEND_NULL_HANDLER		402386	2448					
ANR	404846	Identifier	ZEND_FETCH_OBJ_UNSET_SPEC_CV_CV_HANDLER		402386	2449					
ANR	404847	Identifier	ZEND_FETCH_LIST_SPEC_CONST_CONST_HANDLER		402386	2450					
ANR	404848	Identifier	ZEND_NULL_HANDLER		402386	2451					
ANR	404849	Identifier	ZEND_NULL_HANDLER		402386	2452					
ANR	404850	Identifier	ZEND_NULL_HANDLER		402386	2453					
ANR	404851	Identifier	ZEND_NULL_HANDLER		402386	2454					
ANR	404852	Identifier	ZEND_FETCH_LIST_SPEC_TMPVAR_CONST_HANDLER		402386	2455					
ANR	404853	Identifier	ZEND_NULL_HANDLER		402386	2456					
ANR	404854	Identifier	ZEND_NULL_HANDLER		402386	2457					
ANR	404855	Identifier	ZEND_NULL_HANDLER		402386	2458					
ANR	404856	Identifier	ZEND_NULL_HANDLER		402386	2459					
ANR	404857	Identifier	ZEND_FETCH_LIST_SPEC_TMPVAR_CONST_HANDLER		402386	2460					
ANR	404858	Identifier	ZEND_NULL_HANDLER		402386	2461					
ANR	404859	Identifier	ZEND_NULL_HANDLER		402386	2462					
ANR	404860	Identifier	ZEND_NULL_HANDLER		402386	2463					
ANR	404861	Identifier	ZEND_NULL_HANDLER		402386	2464					
ANR	404862	Identifier	ZEND_NULL_HANDLER		402386	2465					
ANR	404863	Identifier	ZEND_NULL_HANDLER		402386	2466					
ANR	404864	Identifier	ZEND_NULL_HANDLER		402386	2467					
ANR	404865	Identifier	ZEND_NULL_HANDLER		402386	2468					
ANR	404866	Identifier	ZEND_NULL_HANDLER		402386	2469					
ANR	404867	Identifier	ZEND_FETCH_LIST_SPEC_CV_CONST_HANDLER		402386	2470					
ANR	404868	Identifier	ZEND_NULL_HANDLER		402386	2471					
ANR	404869	Identifier	ZEND_NULL_HANDLER		402386	2472					
ANR	404870	Identifier	ZEND_NULL_HANDLER		402386	2473					
ANR	404871	Identifier	ZEND_NULL_HANDLER		402386	2474					
ANR	404872	Identifier	ZEND_FETCH_CONSTANT_SPEC_CONST_CONST_HANDLER		402386	2475					
ANR	404873	Identifier	ZEND_NULL_HANDLER		402386	2476					
ANR	404874	Identifier	ZEND_NULL_HANDLER		402386	2477					
ANR	404875	Identifier	ZEND_NULL_HANDLER		402386	2478					
ANR	404876	Identifier	ZEND_NULL_HANDLER		402386	2479					
ANR	404877	Identifier	ZEND_NULL_HANDLER		402386	2480					
ANR	404878	Identifier	ZEND_NULL_HANDLER		402386	2481					
ANR	404879	Identifier	ZEND_NULL_HANDLER		402386	2482					
ANR	404880	Identifier	ZEND_NULL_HANDLER		402386	2483					
ANR	404881	Identifier	ZEND_NULL_HANDLER		402386	2484					
ANR	404882	Identifier	ZEND_FETCH_CONSTANT_SPEC_VAR_CONST_HANDLER		402386	2485					
ANR	404883	Identifier	ZEND_NULL_HANDLER		402386	2486					
ANR	404884	Identifier	ZEND_NULL_HANDLER		402386	2487					
ANR	404885	Identifier	ZEND_NULL_HANDLER		402386	2488					
ANR	404886	Identifier	ZEND_NULL_HANDLER		402386	2489					
ANR	404887	Identifier	ZEND_FETCH_CONSTANT_SPEC_UNUSED_CONST_HANDLER		402386	2490					
ANR	404888	Identifier	ZEND_NULL_HANDLER		402386	2491					
ANR	404889	Identifier	ZEND_NULL_HANDLER		402386	2492					
ANR	404890	Identifier	ZEND_NULL_HANDLER		402386	2493					
ANR	404891	Identifier	ZEND_NULL_HANDLER		402386	2494					
ANR	404892	Identifier	ZEND_NULL_HANDLER		402386	2495					
ANR	404893	Identifier	ZEND_NULL_HANDLER		402386	2496					
ANR	404894	Identifier	ZEND_NULL_HANDLER		402386	2497					
ANR	404895	Identifier	ZEND_NULL_HANDLER		402386	2498					
ANR	404896	Identifier	ZEND_NULL_HANDLER		402386	2499					
ANR	404897	Identifier	ZEND_NULL_HANDLER		402386	2500					
ANR	404898	Identifier	ZEND_NULL_HANDLER		402386	2501					
ANR	404899	Identifier	ZEND_NULL_HANDLER		402386	2502					
ANR	404900	Identifier	ZEND_NULL_HANDLER		402386	2503					
ANR	404901	Identifier	ZEND_NULL_HANDLER		402386	2504					
ANR	404902	Identifier	ZEND_NULL_HANDLER		402386	2505					
ANR	404903	Identifier	ZEND_NULL_HANDLER		402386	2506					
ANR	404904	Identifier	ZEND_NULL_HANDLER		402386	2507					
ANR	404905	Identifier	ZEND_NULL_HANDLER		402386	2508					
ANR	404906	Identifier	ZEND_NULL_HANDLER		402386	2509					
ANR	404907	Identifier	ZEND_NULL_HANDLER		402386	2510					
ANR	404908	Identifier	ZEND_NULL_HANDLER		402386	2511					
ANR	404909	Identifier	ZEND_NULL_HANDLER		402386	2512					
ANR	404910	Identifier	ZEND_NULL_HANDLER		402386	2513					
ANR	404911	Identifier	ZEND_NULL_HANDLER		402386	2514					
ANR	404912	Identifier	ZEND_NULL_HANDLER		402386	2515					
ANR	404913	Identifier	ZEND_NULL_HANDLER		402386	2516					
ANR	404914	Identifier	ZEND_NULL_HANDLER		402386	2517					
ANR	404915	Identifier	ZEND_NULL_HANDLER		402386	2518					
ANR	404916	Identifier	ZEND_NULL_HANDLER		402386	2519					
ANR	404917	Identifier	ZEND_NULL_HANDLER		402386	2520					
ANR	404918	Identifier	ZEND_NULL_HANDLER		402386	2521					
ANR	404919	Identifier	ZEND_NULL_HANDLER		402386	2522					
ANR	404920	Identifier	ZEND_NULL_HANDLER		402386	2523					
ANR	404921	Identifier	ZEND_NULL_HANDLER		402386	2524					
ANR	404922	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2525					
ANR	404923	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2526					
ANR	404924	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2527					
ANR	404925	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2528					
ANR	404926	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2529					
ANR	404927	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2530					
ANR	404928	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2531					
ANR	404929	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2532					
ANR	404930	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2533					
ANR	404931	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2534					
ANR	404932	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2535					
ANR	404933	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2536					
ANR	404934	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2537					
ANR	404935	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2538					
ANR	404936	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2539					
ANR	404937	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2540					
ANR	404938	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2541					
ANR	404939	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2542					
ANR	404940	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2543					
ANR	404941	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2544					
ANR	404942	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2545					
ANR	404943	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2546					
ANR	404944	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2547					
ANR	404945	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2548					
ANR	404946	Identifier	ZEND_EXT_STMT_SPEC_HANDLER		402386	2549					
ANR	404947	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2550					
ANR	404948	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2551					
ANR	404949	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2552					
ANR	404950	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2553					
ANR	404951	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2554					
ANR	404952	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2555					
ANR	404953	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2556					
ANR	404954	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2557					
ANR	404955	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2558					
ANR	404956	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2559					
ANR	404957	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2560					
ANR	404958	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2561					
ANR	404959	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2562					
ANR	404960	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2563					
ANR	404961	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2564					
ANR	404962	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2565					
ANR	404963	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2566					
ANR	404964	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2567					
ANR	404965	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2568					
ANR	404966	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2569					
ANR	404967	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2570					
ANR	404968	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2571					
ANR	404969	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2572					
ANR	404970	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2573					
ANR	404971	Identifier	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386	2574					
ANR	404972	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2575					
ANR	404973	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2576					
ANR	404974	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2577					
ANR	404975	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2578					
ANR	404976	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2579					
ANR	404977	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2580					
ANR	404978	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2581					
ANR	404979	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2582					
ANR	404980	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2583					
ANR	404981	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2584					
ANR	404982	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2585					
ANR	404983	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2586					
ANR	404984	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2587					
ANR	404985	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2588					
ANR	404986	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2589					
ANR	404987	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2590					
ANR	404988	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2591					
ANR	404989	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2592					
ANR	404990	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2593					
ANR	404991	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2594					
ANR	404992	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2595					
ANR	404993	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2596					
ANR	404994	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2597					
ANR	404995	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2598					
ANR	404996	Identifier	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386	2599					
ANR	404997	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2600					
ANR	404998	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2601					
ANR	404999	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2602					
ANR	405000	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2603					
ANR	405001	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2604					
ANR	405002	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2605					
ANR	405003	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2606					
ANR	405004	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2607					
ANR	405005	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2608					
ANR	405006	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2609					
ANR	405007	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2610					
ANR	405008	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2611					
ANR	405009	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2612					
ANR	405010	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2613					
ANR	405011	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2614					
ANR	405012	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2615					
ANR	405013	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2616					
ANR	405014	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2617					
ANR	405015	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2618					
ANR	405016	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2619					
ANR	405017	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2620					
ANR	405018	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2621					
ANR	405019	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2622					
ANR	405020	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2623					
ANR	405021	Identifier	ZEND_EXT_NOP_SPEC_HANDLER		402386	2624					
ANR	405022	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2625					
ANR	405023	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2626					
ANR	405024	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2627					
ANR	405025	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2628					
ANR	405026	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2629					
ANR	405027	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2630					
ANR	405028	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2631					
ANR	405029	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2632					
ANR	405030	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2633					
ANR	405031	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2634					
ANR	405032	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2635					
ANR	405033	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2636					
ANR	405034	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2637					
ANR	405035	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2638					
ANR	405036	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2639					
ANR	405037	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2640					
ANR	405038	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2641					
ANR	405039	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2642					
ANR	405040	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2643					
ANR	405041	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2644					
ANR	405042	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2645					
ANR	405043	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2646					
ANR	405044	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2647					
ANR	405045	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2648					
ANR	405046	Identifier	ZEND_TICKS_SPEC_HANDLER		402386	2649					
ANR	405047	Identifier	ZEND_NULL_HANDLER		402386	2650					
ANR	405048	Identifier	ZEND_NULL_HANDLER		402386	2651					
ANR	405049	Identifier	ZEND_NULL_HANDLER		402386	2652					
ANR	405050	Identifier	ZEND_NULL_HANDLER		402386	2653					
ANR	405051	Identifier	ZEND_NULL_HANDLER		402386	2654					
ANR	405052	Identifier	ZEND_NULL_HANDLER		402386	2655					
ANR	405053	Identifier	ZEND_NULL_HANDLER		402386	2656					
ANR	405054	Identifier	ZEND_NULL_HANDLER		402386	2657					
ANR	405055	Identifier	ZEND_NULL_HANDLER		402386	2658					
ANR	405056	Identifier	ZEND_NULL_HANDLER		402386	2659					
ANR	405057	Identifier	ZEND_SEND_VAR_NO_REF_SPEC_VAR_HANDLER		402386	2660					
ANR	405058	Identifier	ZEND_SEND_VAR_NO_REF_SPEC_VAR_HANDLER		402386	2661					
ANR	405059	Identifier	ZEND_SEND_VAR_NO_REF_SPEC_VAR_HANDLER		402386	2662					
ANR	405060	Identifier	ZEND_SEND_VAR_NO_REF_SPEC_VAR_HANDLER		402386	2663					
ANR	405061	Identifier	ZEND_SEND_VAR_NO_REF_SPEC_VAR_HANDLER		402386	2664					
ANR	405062	Identifier	ZEND_NULL_HANDLER		402386	2665					
ANR	405063	Identifier	ZEND_NULL_HANDLER		402386	2666					
ANR	405064	Identifier	ZEND_NULL_HANDLER		402386	2667					
ANR	405065	Identifier	ZEND_NULL_HANDLER		402386	2668					
ANR	405066	Identifier	ZEND_NULL_HANDLER		402386	2669					
ANR	405067	Identifier	ZEND_NULL_HANDLER		402386	2670					
ANR	405068	Identifier	ZEND_NULL_HANDLER		402386	2671					
ANR	405069	Identifier	ZEND_NULL_HANDLER		402386	2672					
ANR	405070	Identifier	ZEND_NULL_HANDLER		402386	2673					
ANR	405071	Identifier	ZEND_NULL_HANDLER		402386	2674					
ANR	405072	Identifier	ZEND_NULL_HANDLER		402386	2675					
ANR	405073	Identifier	ZEND_NULL_HANDLER		402386	2676					
ANR	405074	Identifier	ZEND_NULL_HANDLER		402386	2677					
ANR	405075	Identifier	ZEND_NULL_HANDLER		402386	2678					
ANR	405076	Identifier	ZEND_CATCH_SPEC_CONST_CV_HANDLER		402386	2679					
ANR	405077	Identifier	ZEND_NULL_HANDLER		402386	2680					
ANR	405078	Identifier	ZEND_NULL_HANDLER		402386	2681					
ANR	405079	Identifier	ZEND_NULL_HANDLER		402386	2682					
ANR	405080	Identifier	ZEND_NULL_HANDLER		402386	2683					
ANR	405081	Identifier	ZEND_NULL_HANDLER		402386	2684					
ANR	405082	Identifier	ZEND_NULL_HANDLER		402386	2685					
ANR	405083	Identifier	ZEND_NULL_HANDLER		402386	2686					
ANR	405084	Identifier	ZEND_NULL_HANDLER		402386	2687					
ANR	405085	Identifier	ZEND_NULL_HANDLER		402386	2688					
ANR	405086	Identifier	ZEND_NULL_HANDLER		402386	2689					
ANR	405087	Identifier	ZEND_NULL_HANDLER		402386	2690					
ANR	405088	Identifier	ZEND_NULL_HANDLER		402386	2691					
ANR	405089	Identifier	ZEND_NULL_HANDLER		402386	2692					
ANR	405090	Identifier	ZEND_NULL_HANDLER		402386	2693					
ANR	405091	Identifier	ZEND_NULL_HANDLER		402386	2694					
ANR	405092	Identifier	ZEND_NULL_HANDLER		402386	2695					
ANR	405093	Identifier	ZEND_NULL_HANDLER		402386	2696					
ANR	405094	Identifier	ZEND_NULL_HANDLER		402386	2697					
ANR	405095	Identifier	ZEND_NULL_HANDLER		402386	2698					
ANR	405096	Identifier	ZEND_NULL_HANDLER		402386	2699					
ANR	405097	Identifier	ZEND_THROW_SPEC_CONST_HANDLER		402386	2700					
ANR	405098	Identifier	ZEND_THROW_SPEC_CONST_HANDLER		402386	2701					
ANR	405099	Identifier	ZEND_THROW_SPEC_CONST_HANDLER		402386	2702					
ANR	405100	Identifier	ZEND_THROW_SPEC_CONST_HANDLER		402386	2703					
ANR	405101	Identifier	ZEND_THROW_SPEC_CONST_HANDLER		402386	2704					
ANR	405102	Identifier	ZEND_THROW_SPEC_TMP_HANDLER		402386	2705					
ANR	405103	Identifier	ZEND_THROW_SPEC_TMP_HANDLER		402386	2706					
ANR	405104	Identifier	ZEND_THROW_SPEC_TMP_HANDLER		402386	2707					
ANR	405105	Identifier	ZEND_THROW_SPEC_TMP_HANDLER		402386	2708					
ANR	405106	Identifier	ZEND_THROW_SPEC_TMP_HANDLER		402386	2709					
ANR	405107	Identifier	ZEND_THROW_SPEC_VAR_HANDLER		402386	2710					
ANR	405108	Identifier	ZEND_THROW_SPEC_VAR_HANDLER		402386	2711					
ANR	405109	Identifier	ZEND_THROW_SPEC_VAR_HANDLER		402386	2712					
ANR	405110	Identifier	ZEND_THROW_SPEC_VAR_HANDLER		402386	2713					
ANR	405111	Identifier	ZEND_THROW_SPEC_VAR_HANDLER		402386	2714					
ANR	405112	Identifier	ZEND_NULL_HANDLER		402386	2715					
ANR	405113	Identifier	ZEND_NULL_HANDLER		402386	2716					
ANR	405114	Identifier	ZEND_NULL_HANDLER		402386	2717					
ANR	405115	Identifier	ZEND_NULL_HANDLER		402386	2718					
ANR	405116	Identifier	ZEND_NULL_HANDLER		402386	2719					
ANR	405117	Identifier	ZEND_THROW_SPEC_CV_HANDLER		402386	2720					
ANR	405118	Identifier	ZEND_THROW_SPEC_CV_HANDLER		402386	2721					
ANR	405119	Identifier	ZEND_THROW_SPEC_CV_HANDLER		402386	2722					
ANR	405120	Identifier	ZEND_THROW_SPEC_CV_HANDLER		402386	2723					
ANR	405121	Identifier	ZEND_THROW_SPEC_CV_HANDLER		402386	2724					
ANR	405122	Identifier	ZEND_FETCH_CLASS_SPEC_CONST_HANDLER		402386	2725					
ANR	405123	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2726					
ANR	405124	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2727					
ANR	405125	Identifier	ZEND_FETCH_CLASS_SPEC_UNUSED_HANDLER		402386	2728					
ANR	405126	Identifier	ZEND_FETCH_CLASS_SPEC_CV_HANDLER		402386	2729					
ANR	405127	Identifier	ZEND_FETCH_CLASS_SPEC_CONST_HANDLER		402386	2730					
ANR	405128	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2731					
ANR	405129	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2732					
ANR	405130	Identifier	ZEND_FETCH_CLASS_SPEC_UNUSED_HANDLER		402386	2733					
ANR	405131	Identifier	ZEND_FETCH_CLASS_SPEC_CV_HANDLER		402386	2734					
ANR	405132	Identifier	ZEND_FETCH_CLASS_SPEC_CONST_HANDLER		402386	2735					
ANR	405133	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2736					
ANR	405134	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2737					
ANR	405135	Identifier	ZEND_FETCH_CLASS_SPEC_UNUSED_HANDLER		402386	2738					
ANR	405136	Identifier	ZEND_FETCH_CLASS_SPEC_CV_HANDLER		402386	2739					
ANR	405137	Identifier	ZEND_FETCH_CLASS_SPEC_CONST_HANDLER		402386	2740					
ANR	405138	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2741					
ANR	405139	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2742					
ANR	405140	Identifier	ZEND_FETCH_CLASS_SPEC_UNUSED_HANDLER		402386	2743					
ANR	405141	Identifier	ZEND_FETCH_CLASS_SPEC_CV_HANDLER		402386	2744					
ANR	405142	Identifier	ZEND_FETCH_CLASS_SPEC_CONST_HANDLER		402386	2745					
ANR	405143	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2746					
ANR	405144	Identifier	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386	2747					
ANR	405145	Identifier	ZEND_FETCH_CLASS_SPEC_UNUSED_HANDLER		402386	2748					
ANR	405146	Identifier	ZEND_FETCH_CLASS_SPEC_CV_HANDLER		402386	2749					
ANR	405147	Identifier	ZEND_CLONE_SPEC_CONST_HANDLER		402386	2750					
ANR	405148	Identifier	ZEND_CLONE_SPEC_CONST_HANDLER		402386	2751					
ANR	405149	Identifier	ZEND_CLONE_SPEC_CONST_HANDLER		402386	2752					
ANR	405150	Identifier	ZEND_CLONE_SPEC_CONST_HANDLER		402386	2753					
ANR	405151	Identifier	ZEND_CLONE_SPEC_CONST_HANDLER		402386	2754					
ANR	405152	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2755					
ANR	405153	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2756					
ANR	405154	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2757					
ANR	405155	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2758					
ANR	405156	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2759					
ANR	405157	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2760					
ANR	405158	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2761					
ANR	405159	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2762					
ANR	405160	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2763					
ANR	405161	Identifier	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386	2764					
ANR	405162	Identifier	ZEND_CLONE_SPEC_UNUSED_HANDLER		402386	2765					
ANR	405163	Identifier	ZEND_CLONE_SPEC_UNUSED_HANDLER		402386	2766					
ANR	405164	Identifier	ZEND_CLONE_SPEC_UNUSED_HANDLER		402386	2767					
ANR	405165	Identifier	ZEND_CLONE_SPEC_UNUSED_HANDLER		402386	2768					
ANR	405166	Identifier	ZEND_CLONE_SPEC_UNUSED_HANDLER		402386	2769					
ANR	405167	Identifier	ZEND_CLONE_SPEC_CV_HANDLER		402386	2770					
ANR	405168	Identifier	ZEND_CLONE_SPEC_CV_HANDLER		402386	2771					
ANR	405169	Identifier	ZEND_CLONE_SPEC_CV_HANDLER		402386	2772					
ANR	405170	Identifier	ZEND_CLONE_SPEC_CV_HANDLER		402386	2773					
ANR	405171	Identifier	ZEND_CLONE_SPEC_CV_HANDLER		402386	2774					
ANR	405172	Identifier	ZEND_RETURN_BY_REF_SPEC_CONST_HANDLER		402386	2775					
ANR	405173	Identifier	ZEND_RETURN_BY_REF_SPEC_CONST_HANDLER		402386	2776					
ANR	405174	Identifier	ZEND_RETURN_BY_REF_SPEC_CONST_HANDLER		402386	2777					
ANR	405175	Identifier	ZEND_RETURN_BY_REF_SPEC_CONST_HANDLER		402386	2778					
ANR	405176	Identifier	ZEND_RETURN_BY_REF_SPEC_CONST_HANDLER		402386	2779					
ANR	405177	Identifier	ZEND_RETURN_BY_REF_SPEC_TMP_HANDLER		402386	2780					
ANR	405178	Identifier	ZEND_RETURN_BY_REF_SPEC_TMP_HANDLER		402386	2781					
ANR	405179	Identifier	ZEND_RETURN_BY_REF_SPEC_TMP_HANDLER		402386	2782					
ANR	405180	Identifier	ZEND_RETURN_BY_REF_SPEC_TMP_HANDLER		402386	2783					
ANR	405181	Identifier	ZEND_RETURN_BY_REF_SPEC_TMP_HANDLER		402386	2784					
ANR	405182	Identifier	ZEND_RETURN_BY_REF_SPEC_VAR_HANDLER		402386	2785					
ANR	405183	Identifier	ZEND_RETURN_BY_REF_SPEC_VAR_HANDLER		402386	2786					
ANR	405184	Identifier	ZEND_RETURN_BY_REF_SPEC_VAR_HANDLER		402386	2787					
ANR	405185	Identifier	ZEND_RETURN_BY_REF_SPEC_VAR_HANDLER		402386	2788					
ANR	405186	Identifier	ZEND_RETURN_BY_REF_SPEC_VAR_HANDLER		402386	2789					
ANR	405187	Identifier	ZEND_NULL_HANDLER		402386	2790					
ANR	405188	Identifier	ZEND_NULL_HANDLER		402386	2791					
ANR	405189	Identifier	ZEND_NULL_HANDLER		402386	2792					
ANR	405190	Identifier	ZEND_NULL_HANDLER		402386	2793					
ANR	405191	Identifier	ZEND_NULL_HANDLER		402386	2794					
ANR	405192	Identifier	ZEND_RETURN_BY_REF_SPEC_CV_HANDLER		402386	2795					
ANR	405193	Identifier	ZEND_RETURN_BY_REF_SPEC_CV_HANDLER		402386	2796					
ANR	405194	Identifier	ZEND_RETURN_BY_REF_SPEC_CV_HANDLER		402386	2797					
ANR	405195	Identifier	ZEND_RETURN_BY_REF_SPEC_CV_HANDLER		402386	2798					
ANR	405196	Identifier	ZEND_RETURN_BY_REF_SPEC_CV_HANDLER		402386	2799					
ANR	405197	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CONST_CONST_HANDLER		402386	2800					
ANR	405198	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CONST_TMPVAR_HANDLER		402386	2801					
ANR	405199	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CONST_TMPVAR_HANDLER		402386	2802					
ANR	405200	Identifier	ZEND_NULL_HANDLER		402386	2803					
ANR	405201	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CONST_CV_HANDLER		402386	2804					
ANR	405202	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_CONST_HANDLER		402386	2805					
ANR	405203	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2806					
ANR	405204	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2807					
ANR	405205	Identifier	ZEND_NULL_HANDLER		402386	2808					
ANR	405206	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_CV_HANDLER		402386	2809					
ANR	405207	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_CONST_HANDLER		402386	2810					
ANR	405208	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2811					
ANR	405209	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2812					
ANR	405210	Identifier	ZEND_NULL_HANDLER		402386	2813					
ANR	405211	Identifier	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_CV_HANDLER		402386	2814					
ANR	405212	Identifier	ZEND_INIT_METHOD_CALL_SPEC_UNUSED_CONST_HANDLER		402386	2815					
ANR	405213	Identifier	ZEND_INIT_METHOD_CALL_SPEC_UNUSED_TMPVAR_HANDLER		402386	2816					
ANR	405214	Identifier	ZEND_INIT_METHOD_CALL_SPEC_UNUSED_TMPVAR_HANDLER		402386	2817					
ANR	405215	Identifier	ZEND_NULL_HANDLER		402386	2818					
ANR	405216	Identifier	ZEND_INIT_METHOD_CALL_SPEC_UNUSED_CV_HANDLER		402386	2819					
ANR	405217	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CV_CONST_HANDLER		402386	2820					
ANR	405218	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CV_TMPVAR_HANDLER		402386	2821					
ANR	405219	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CV_TMPVAR_HANDLER		402386	2822					
ANR	405220	Identifier	ZEND_NULL_HANDLER		402386	2823					
ANR	405221	Identifier	ZEND_INIT_METHOD_CALL_SPEC_CV_CV_HANDLER		402386	2824					
ANR	405222	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_CONST_HANDLER		402386	2825					
ANR	405223	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_TMPVAR_HANDLER		402386	2826					
ANR	405224	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_TMPVAR_HANDLER		402386	2827					
ANR	405225	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_UNUSED_HANDLER		402386	2828					
ANR	405226	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_CV_HANDLER		402386	2829					
ANR	405227	Identifier	ZEND_NULL_HANDLER		402386	2830					
ANR	405228	Identifier	ZEND_NULL_HANDLER		402386	2831					
ANR	405229	Identifier	ZEND_NULL_HANDLER		402386	2832					
ANR	405230	Identifier	ZEND_NULL_HANDLER		402386	2833					
ANR	405231	Identifier	ZEND_NULL_HANDLER		402386	2834					
ANR	405232	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_CONST_HANDLER		402386	2835					
ANR	405233	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_TMPVAR_HANDLER		402386	2836					
ANR	405234	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_TMPVAR_HANDLER		402386	2837					
ANR	405235	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_UNUSED_HANDLER		402386	2838					
ANR	405236	Identifier	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_CV_HANDLER		402386	2839					
ANR	405237	Identifier	ZEND_NULL_HANDLER		402386	2840					
ANR	405238	Identifier	ZEND_NULL_HANDLER		402386	2841					
ANR	405239	Identifier	ZEND_NULL_HANDLER		402386	2842					
ANR	405240	Identifier	ZEND_NULL_HANDLER		402386	2843					
ANR	405241	Identifier	ZEND_NULL_HANDLER		402386	2844					
ANR	405242	Identifier	ZEND_NULL_HANDLER		402386	2845					
ANR	405243	Identifier	ZEND_NULL_HANDLER		402386	2846					
ANR	405244	Identifier	ZEND_NULL_HANDLER		402386	2847					
ANR	405245	Identifier	ZEND_NULL_HANDLER		402386	2848					
ANR	405246	Identifier	ZEND_NULL_HANDLER		402386	2849					
ANR	405247	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_CONST_CONST_HANDLER		402386	2850					
ANR	405248	Identifier	ZEND_NULL_HANDLER		402386	2851					
ANR	405249	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_CONST_VAR_HANDLER		402386	2852					
ANR	405250	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_CONST_UNUSED_HANDLER		402386	2853					
ANR	405251	Identifier	ZEND_NULL_HANDLER		402386	2854					
ANR	405252	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_CONST_HANDLER		402386	2855					
ANR	405253	Identifier	ZEND_NULL_HANDLER		402386	2856					
ANR	405254	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_VAR_HANDLER		402386	2857					
ANR	405255	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_UNUSED_HANDLER		402386	2858					
ANR	405256	Identifier	ZEND_NULL_HANDLER		402386	2859					
ANR	405257	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_CONST_HANDLER		402386	2860					
ANR	405258	Identifier	ZEND_NULL_HANDLER		402386	2861					
ANR	405259	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_VAR_HANDLER		402386	2862					
ANR	405260	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_UNUSED_HANDLER		402386	2863					
ANR	405261	Identifier	ZEND_NULL_HANDLER		402386	2864					
ANR	405262	Identifier	ZEND_NULL_HANDLER		402386	2865					
ANR	405263	Identifier	ZEND_NULL_HANDLER		402386	2866					
ANR	405264	Identifier	ZEND_NULL_HANDLER		402386	2867					
ANR	405265	Identifier	ZEND_NULL_HANDLER		402386	2868					
ANR	405266	Identifier	ZEND_NULL_HANDLER		402386	2869					
ANR	405267	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_CV_CONST_HANDLER		402386	2870					
ANR	405268	Identifier	ZEND_NULL_HANDLER		402386	2871					
ANR	405269	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_CV_VAR_HANDLER		402386	2872					
ANR	405270	Identifier	ZEND_ISSET_ISEMPTY_VAR_SPEC_CV_UNUSED_HANDLER		402386	2873					
ANR	405271	Identifier	ZEND_NULL_HANDLER		402386	2874					
ANR	405272	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CONST_CONST_HANDLER		402386	2875					
ANR	405273	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CONST_TMPVAR_HANDLER		402386	2876					
ANR	405274	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CONST_TMPVAR_HANDLER		402386	2877					
ANR	405275	Identifier	ZEND_NULL_HANDLER		402386	2878					
ANR	405276	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CONST_CV_HANDLER		402386	2879					
ANR	405277	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_CONST_HANDLER		402386	2880					
ANR	405278	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2881					
ANR	405279	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2882					
ANR	405280	Identifier	ZEND_NULL_HANDLER		402386	2883					
ANR	405281	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_CV_HANDLER		402386	2884					
ANR	405282	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_CONST_HANDLER		402386	2885					
ANR	405283	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2886					
ANR	405284	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	2887					
ANR	405285	Identifier	ZEND_NULL_HANDLER		402386	2888					
ANR	405286	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_CV_HANDLER		402386	2889					
ANR	405287	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	2890					
ANR	405288	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	2891					
ANR	405289	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	2892					
ANR	405290	Identifier	ZEND_NULL_HANDLER		402386	2893					
ANR	405291	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_UNUSED_CV_HANDLER		402386	2894					
ANR	405292	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CV_CONST_HANDLER		402386	2895					
ANR	405293	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	2896					
ANR	405294	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	2897					
ANR	405295	Identifier	ZEND_NULL_HANDLER		402386	2898					
ANR	405296	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CV_CV_HANDLER		402386	2899					
ANR	405297	Identifier	ZEND_SEND_VAL_EX_SPEC_CONST_HANDLER		402386	2900					
ANR	405298	Identifier	ZEND_SEND_VAL_EX_SPEC_CONST_HANDLER		402386	2901					
ANR	405299	Identifier	ZEND_SEND_VAL_EX_SPEC_CONST_HANDLER		402386	2902					
ANR	405300	Identifier	ZEND_SEND_VAL_EX_SPEC_CONST_HANDLER		402386	2903					
ANR	405301	Identifier	ZEND_SEND_VAL_EX_SPEC_CONST_HANDLER		402386	2904					
ANR	405302	Identifier	ZEND_SEND_VAL_EX_SPEC_TMP_HANDLER		402386	2905					
ANR	405303	Identifier	ZEND_SEND_VAL_EX_SPEC_TMP_HANDLER		402386	2906					
ANR	405304	Identifier	ZEND_SEND_VAL_EX_SPEC_TMP_HANDLER		402386	2907					
ANR	405305	Identifier	ZEND_SEND_VAL_EX_SPEC_TMP_HANDLER		402386	2908					
ANR	405306	Identifier	ZEND_SEND_VAL_EX_SPEC_TMP_HANDLER		402386	2909					
ANR	405307	Identifier	ZEND_NULL_HANDLER		402386	2910					
ANR	405308	Identifier	ZEND_NULL_HANDLER		402386	2911					
ANR	405309	Identifier	ZEND_NULL_HANDLER		402386	2912					
ANR	405310	Identifier	ZEND_NULL_HANDLER		402386	2913					
ANR	405311	Identifier	ZEND_NULL_HANDLER		402386	2914					
ANR	405312	Identifier	ZEND_NULL_HANDLER		402386	2915					
ANR	405313	Identifier	ZEND_NULL_HANDLER		402386	2916					
ANR	405314	Identifier	ZEND_NULL_HANDLER		402386	2917					
ANR	405315	Identifier	ZEND_NULL_HANDLER		402386	2918					
ANR	405316	Identifier	ZEND_NULL_HANDLER		402386	2919					
ANR	405317	Identifier	ZEND_NULL_HANDLER		402386	2920					
ANR	405318	Identifier	ZEND_NULL_HANDLER		402386	2921					
ANR	405319	Identifier	ZEND_NULL_HANDLER		402386	2922					
ANR	405320	Identifier	ZEND_NULL_HANDLER		402386	2923					
ANR	405321	Identifier	ZEND_NULL_HANDLER		402386	2924					
ANR	405322	Identifier	ZEND_NULL_HANDLER		402386	2925					
ANR	405323	Identifier	ZEND_NULL_HANDLER		402386	2926					
ANR	405324	Identifier	ZEND_NULL_HANDLER		402386	2927					
ANR	405325	Identifier	ZEND_NULL_HANDLER		402386	2928					
ANR	405326	Identifier	ZEND_NULL_HANDLER		402386	2929					
ANR	405327	Identifier	ZEND_NULL_HANDLER		402386	2930					
ANR	405328	Identifier	ZEND_NULL_HANDLER		402386	2931					
ANR	405329	Identifier	ZEND_NULL_HANDLER		402386	2932					
ANR	405330	Identifier	ZEND_NULL_HANDLER		402386	2933					
ANR	405331	Identifier	ZEND_NULL_HANDLER		402386	2934					
ANR	405332	Identifier	ZEND_SEND_VAR_SPEC_VAR_HANDLER		402386	2935					
ANR	405333	Identifier	ZEND_SEND_VAR_SPEC_VAR_HANDLER		402386	2936					
ANR	405334	Identifier	ZEND_SEND_VAR_SPEC_VAR_HANDLER		402386	2937					
ANR	405335	Identifier	ZEND_SEND_VAR_SPEC_VAR_HANDLER		402386	2938					
ANR	405336	Identifier	ZEND_SEND_VAR_SPEC_VAR_HANDLER		402386	2939					
ANR	405337	Identifier	ZEND_NULL_HANDLER		402386	2940					
ANR	405338	Identifier	ZEND_NULL_HANDLER		402386	2941					
ANR	405339	Identifier	ZEND_NULL_HANDLER		402386	2942					
ANR	405340	Identifier	ZEND_NULL_HANDLER		402386	2943					
ANR	405341	Identifier	ZEND_NULL_HANDLER		402386	2944					
ANR	405342	Identifier	ZEND_SEND_VAR_SPEC_CV_HANDLER		402386	2945					
ANR	405343	Identifier	ZEND_SEND_VAR_SPEC_CV_HANDLER		402386	2946					
ANR	405344	Identifier	ZEND_SEND_VAR_SPEC_CV_HANDLER		402386	2947					
ANR	405345	Identifier	ZEND_SEND_VAR_SPEC_CV_HANDLER		402386	2948					
ANR	405346	Identifier	ZEND_SEND_VAR_SPEC_CV_HANDLER		402386	2949					
ANR	405347	Identifier	ZEND_INIT_USER_CALL_SPEC_CONST_CONST_HANDLER		402386	2950					
ANR	405348	Identifier	ZEND_INIT_USER_CALL_SPEC_CONST_TMPVAR_HANDLER		402386	2951					
ANR	405349	Identifier	ZEND_INIT_USER_CALL_SPEC_CONST_TMPVAR_HANDLER		402386	2952					
ANR	405350	Identifier	ZEND_NULL_HANDLER		402386	2953					
ANR	405351	Identifier	ZEND_INIT_USER_CALL_SPEC_CONST_CV_HANDLER		402386	2954					
ANR	405352	Identifier	ZEND_NULL_HANDLER		402386	2955					
ANR	405353	Identifier	ZEND_NULL_HANDLER		402386	2956					
ANR	405354	Identifier	ZEND_NULL_HANDLER		402386	2957					
ANR	405355	Identifier	ZEND_NULL_HANDLER		402386	2958					
ANR	405356	Identifier	ZEND_NULL_HANDLER		402386	2959					
ANR	405357	Identifier	ZEND_NULL_HANDLER		402386	2960					
ANR	405358	Identifier	ZEND_NULL_HANDLER		402386	2961					
ANR	405359	Identifier	ZEND_NULL_HANDLER		402386	2962					
ANR	405360	Identifier	ZEND_NULL_HANDLER		402386	2963					
ANR	405361	Identifier	ZEND_NULL_HANDLER		402386	2964					
ANR	405362	Identifier	ZEND_NULL_HANDLER		402386	2965					
ANR	405363	Identifier	ZEND_NULL_HANDLER		402386	2966					
ANR	405364	Identifier	ZEND_NULL_HANDLER		402386	2967					
ANR	405365	Identifier	ZEND_NULL_HANDLER		402386	2968					
ANR	405366	Identifier	ZEND_NULL_HANDLER		402386	2969					
ANR	405367	Identifier	ZEND_NULL_HANDLER		402386	2970					
ANR	405368	Identifier	ZEND_NULL_HANDLER		402386	2971					
ANR	405369	Identifier	ZEND_NULL_HANDLER		402386	2972					
ANR	405370	Identifier	ZEND_NULL_HANDLER		402386	2973					
ANR	405371	Identifier	ZEND_NULL_HANDLER		402386	2974					
ANR	405372	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2975					
ANR	405373	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2976					
ANR	405374	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2977					
ANR	405375	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2978					
ANR	405376	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2979					
ANR	405377	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2980					
ANR	405378	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2981					
ANR	405379	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2982					
ANR	405380	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2983					
ANR	405381	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2984					
ANR	405382	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2985					
ANR	405383	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2986					
ANR	405384	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2987					
ANR	405385	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2988					
ANR	405386	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2989					
ANR	405387	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2990					
ANR	405388	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2991					
ANR	405389	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2992					
ANR	405390	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2993					
ANR	405391	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2994					
ANR	405392	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2995					
ANR	405393	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2996					
ANR	405394	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2997					
ANR	405395	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2998					
ANR	405396	Identifier	ZEND_SEND_ARRAY_SPEC_HANDLER		402386	2999					
ANR	405397	Identifier	ZEND_NULL_HANDLER		402386	3000					
ANR	405398	Identifier	ZEND_NULL_HANDLER		402386	3001					
ANR	405399	Identifier	ZEND_NULL_HANDLER		402386	3002					
ANR	405400	Identifier	ZEND_NULL_HANDLER		402386	3003					
ANR	405401	Identifier	ZEND_NULL_HANDLER		402386	3004					
ANR	405402	Identifier	ZEND_NULL_HANDLER		402386	3005					
ANR	405403	Identifier	ZEND_NULL_HANDLER		402386	3006					
ANR	405404	Identifier	ZEND_NULL_HANDLER		402386	3007					
ANR	405405	Identifier	ZEND_NULL_HANDLER		402386	3008					
ANR	405406	Identifier	ZEND_NULL_HANDLER		402386	3009					
ANR	405407	Identifier	ZEND_SEND_USER_SPEC_VAR_HANDLER		402386	3010					
ANR	405408	Identifier	ZEND_SEND_USER_SPEC_VAR_HANDLER		402386	3011					
ANR	405409	Identifier	ZEND_SEND_USER_SPEC_VAR_HANDLER		402386	3012					
ANR	405410	Identifier	ZEND_SEND_USER_SPEC_VAR_HANDLER		402386	3013					
ANR	405411	Identifier	ZEND_SEND_USER_SPEC_VAR_HANDLER		402386	3014					
ANR	405412	Identifier	ZEND_NULL_HANDLER		402386	3015					
ANR	405413	Identifier	ZEND_NULL_HANDLER		402386	3016					
ANR	405414	Identifier	ZEND_NULL_HANDLER		402386	3017					
ANR	405415	Identifier	ZEND_NULL_HANDLER		402386	3018					
ANR	405416	Identifier	ZEND_NULL_HANDLER		402386	3019					
ANR	405417	Identifier	ZEND_SEND_USER_SPEC_CV_HANDLER		402386	3020					
ANR	405418	Identifier	ZEND_SEND_USER_SPEC_CV_HANDLER		402386	3021					
ANR	405419	Identifier	ZEND_SEND_USER_SPEC_CV_HANDLER		402386	3022					
ANR	405420	Identifier	ZEND_SEND_USER_SPEC_CV_HANDLER		402386	3023					
ANR	405421	Identifier	ZEND_SEND_USER_SPEC_CV_HANDLER		402386	3024					
ANR	405422	Identifier	ZEND_STRLEN_SPEC_CONST_HANDLER		402386	3025					
ANR	405423	Identifier	ZEND_STRLEN_SPEC_CONST_HANDLER		402386	3026					
ANR	405424	Identifier	ZEND_STRLEN_SPEC_CONST_HANDLER		402386	3027					
ANR	405425	Identifier	ZEND_STRLEN_SPEC_CONST_HANDLER		402386	3028					
ANR	405426	Identifier	ZEND_STRLEN_SPEC_CONST_HANDLER		402386	3029					
ANR	405427	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3030					
ANR	405428	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3031					
ANR	405429	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3032					
ANR	405430	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3033					
ANR	405431	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3034					
ANR	405432	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3035					
ANR	405433	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3036					
ANR	405434	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3037					
ANR	405435	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3038					
ANR	405436	Identifier	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386	3039					
ANR	405437	Identifier	ZEND_NULL_HANDLER		402386	3040					
ANR	405438	Identifier	ZEND_NULL_HANDLER		402386	3041					
ANR	405439	Identifier	ZEND_NULL_HANDLER		402386	3042					
ANR	405440	Identifier	ZEND_NULL_HANDLER		402386	3043					
ANR	405441	Identifier	ZEND_NULL_HANDLER		402386	3044					
ANR	405442	Identifier	ZEND_STRLEN_SPEC_CV_HANDLER		402386	3045					
ANR	405443	Identifier	ZEND_STRLEN_SPEC_CV_HANDLER		402386	3046					
ANR	405444	Identifier	ZEND_STRLEN_SPEC_CV_HANDLER		402386	3047					
ANR	405445	Identifier	ZEND_STRLEN_SPEC_CV_HANDLER		402386	3048					
ANR	405446	Identifier	ZEND_STRLEN_SPEC_CV_HANDLER		402386	3049					
ANR	405447	Identifier	ZEND_DEFINED_SPEC_CONST_HANDLER		402386	3050					
ANR	405448	Identifier	ZEND_DEFINED_SPEC_CONST_HANDLER		402386	3051					
ANR	405449	Identifier	ZEND_DEFINED_SPEC_CONST_HANDLER		402386	3052					
ANR	405450	Identifier	ZEND_DEFINED_SPEC_CONST_HANDLER		402386	3053					
ANR	405451	Identifier	ZEND_DEFINED_SPEC_CONST_HANDLER		402386	3054					
ANR	405452	Identifier	ZEND_NULL_HANDLER		402386	3055					
ANR	405453	Identifier	ZEND_NULL_HANDLER		402386	3056					
ANR	405454	Identifier	ZEND_NULL_HANDLER		402386	3057					
ANR	405455	Identifier	ZEND_NULL_HANDLER		402386	3058					
ANR	405456	Identifier	ZEND_NULL_HANDLER		402386	3059					
ANR	405457	Identifier	ZEND_NULL_HANDLER		402386	3060					
ANR	405458	Identifier	ZEND_NULL_HANDLER		402386	3061					
ANR	405459	Identifier	ZEND_NULL_HANDLER		402386	3062					
ANR	405460	Identifier	ZEND_NULL_HANDLER		402386	3063					
ANR	405461	Identifier	ZEND_NULL_HANDLER		402386	3064					
ANR	405462	Identifier	ZEND_NULL_HANDLER		402386	3065					
ANR	405463	Identifier	ZEND_NULL_HANDLER		402386	3066					
ANR	405464	Identifier	ZEND_NULL_HANDLER		402386	3067					
ANR	405465	Identifier	ZEND_NULL_HANDLER		402386	3068					
ANR	405466	Identifier	ZEND_NULL_HANDLER		402386	3069					
ANR	405467	Identifier	ZEND_NULL_HANDLER		402386	3070					
ANR	405468	Identifier	ZEND_NULL_HANDLER		402386	3071					
ANR	405469	Identifier	ZEND_NULL_HANDLER		402386	3072					
ANR	405470	Identifier	ZEND_NULL_HANDLER		402386	3073					
ANR	405471	Identifier	ZEND_NULL_HANDLER		402386	3074					
ANR	405472	Identifier	ZEND_TYPE_CHECK_SPEC_CONST_HANDLER		402386	3075					
ANR	405473	Identifier	ZEND_TYPE_CHECK_SPEC_CONST_HANDLER		402386	3076					
ANR	405474	Identifier	ZEND_TYPE_CHECK_SPEC_CONST_HANDLER		402386	3077					
ANR	405475	Identifier	ZEND_TYPE_CHECK_SPEC_CONST_HANDLER		402386	3078					
ANR	405476	Identifier	ZEND_TYPE_CHECK_SPEC_CONST_HANDLER		402386	3079					
ANR	405477	Identifier	ZEND_TYPE_CHECK_SPEC_TMP_HANDLER		402386	3080					
ANR	405478	Identifier	ZEND_TYPE_CHECK_SPEC_TMP_HANDLER		402386	3081					
ANR	405479	Identifier	ZEND_TYPE_CHECK_SPEC_TMP_HANDLER		402386	3082					
ANR	405480	Identifier	ZEND_TYPE_CHECK_SPEC_TMP_HANDLER		402386	3083					
ANR	405481	Identifier	ZEND_TYPE_CHECK_SPEC_TMP_HANDLER		402386	3084					
ANR	405482	Identifier	ZEND_TYPE_CHECK_SPEC_VAR_HANDLER		402386	3085					
ANR	405483	Identifier	ZEND_TYPE_CHECK_SPEC_VAR_HANDLER		402386	3086					
ANR	405484	Identifier	ZEND_TYPE_CHECK_SPEC_VAR_HANDLER		402386	3087					
ANR	405485	Identifier	ZEND_TYPE_CHECK_SPEC_VAR_HANDLER		402386	3088					
ANR	405486	Identifier	ZEND_TYPE_CHECK_SPEC_VAR_HANDLER		402386	3089					
ANR	405487	Identifier	ZEND_NULL_HANDLER		402386	3090					
ANR	405488	Identifier	ZEND_NULL_HANDLER		402386	3091					
ANR	405489	Identifier	ZEND_NULL_HANDLER		402386	3092					
ANR	405490	Identifier	ZEND_NULL_HANDLER		402386	3093					
ANR	405491	Identifier	ZEND_NULL_HANDLER		402386	3094					
ANR	405492	Identifier	ZEND_TYPE_CHECK_SPEC_CV_HANDLER		402386	3095					
ANR	405493	Identifier	ZEND_TYPE_CHECK_SPEC_CV_HANDLER		402386	3096					
ANR	405494	Identifier	ZEND_TYPE_CHECK_SPEC_CV_HANDLER		402386	3097					
ANR	405495	Identifier	ZEND_TYPE_CHECK_SPEC_CV_HANDLER		402386	3098					
ANR	405496	Identifier	ZEND_TYPE_CHECK_SPEC_CV_HANDLER		402386	3099					
ANR	405497	Identifier	ZEND_NULL_HANDLER		402386	3100					
ANR	405498	Identifier	ZEND_NULL_HANDLER		402386	3101					
ANR	405499	Identifier	ZEND_NULL_HANDLER		402386	3102					
ANR	405500	Identifier	ZEND_VERIFY_RETURN_TYPE_SPEC_CONST_UNUSED_HANDLER		402386	3103					
ANR	405501	Identifier	ZEND_NULL_HANDLER		402386	3104					
ANR	405502	Identifier	ZEND_NULL_HANDLER		402386	3105					
ANR	405503	Identifier	ZEND_NULL_HANDLER		402386	3106					
ANR	405504	Identifier	ZEND_NULL_HANDLER		402386	3107					
ANR	405505	Identifier	ZEND_VERIFY_RETURN_TYPE_SPEC_TMP_UNUSED_HANDLER		402386	3108					
ANR	405506	Identifier	ZEND_NULL_HANDLER		402386	3109					
ANR	405507	Identifier	ZEND_NULL_HANDLER		402386	3110					
ANR	405508	Identifier	ZEND_NULL_HANDLER		402386	3111					
ANR	405509	Identifier	ZEND_NULL_HANDLER		402386	3112					
ANR	405510	Identifier	ZEND_VERIFY_RETURN_TYPE_SPEC_VAR_UNUSED_HANDLER		402386	3113					
ANR	405511	Identifier	ZEND_NULL_HANDLER		402386	3114					
ANR	405512	Identifier	ZEND_NULL_HANDLER		402386	3115					
ANR	405513	Identifier	ZEND_NULL_HANDLER		402386	3116					
ANR	405514	Identifier	ZEND_NULL_HANDLER		402386	3117					
ANR	405515	Identifier	ZEND_VERIFY_RETURN_TYPE_SPEC_UNUSED_UNUSED_HANDLER		402386	3118					
ANR	405516	Identifier	ZEND_NULL_HANDLER		402386	3119					
ANR	405517	Identifier	ZEND_NULL_HANDLER		402386	3120					
ANR	405518	Identifier	ZEND_NULL_HANDLER		402386	3121					
ANR	405519	Identifier	ZEND_NULL_HANDLER		402386	3122					
ANR	405520	Identifier	ZEND_VERIFY_RETURN_TYPE_SPEC_CV_UNUSED_HANDLER		402386	3123					
ANR	405521	Identifier	ZEND_NULL_HANDLER		402386	3124					
ANR	405522	Identifier	ZEND_FE_RESET_RW_SPEC_CONST_HANDLER		402386	3125					
ANR	405523	Identifier	ZEND_FE_RESET_RW_SPEC_CONST_HANDLER		402386	3126					
ANR	405524	Identifier	ZEND_FE_RESET_RW_SPEC_CONST_HANDLER		402386	3127					
ANR	405525	Identifier	ZEND_FE_RESET_RW_SPEC_CONST_HANDLER		402386	3128					
ANR	405526	Identifier	ZEND_FE_RESET_RW_SPEC_CONST_HANDLER		402386	3129					
ANR	405527	Identifier	ZEND_FE_RESET_RW_SPEC_TMP_HANDLER		402386	3130					
ANR	405528	Identifier	ZEND_FE_RESET_RW_SPEC_TMP_HANDLER		402386	3131					
ANR	405529	Identifier	ZEND_FE_RESET_RW_SPEC_TMP_HANDLER		402386	3132					
ANR	405530	Identifier	ZEND_FE_RESET_RW_SPEC_TMP_HANDLER		402386	3133					
ANR	405531	Identifier	ZEND_FE_RESET_RW_SPEC_TMP_HANDLER		402386	3134					
ANR	405532	Identifier	ZEND_FE_RESET_RW_SPEC_VAR_HANDLER		402386	3135					
ANR	405533	Identifier	ZEND_FE_RESET_RW_SPEC_VAR_HANDLER		402386	3136					
ANR	405534	Identifier	ZEND_FE_RESET_RW_SPEC_VAR_HANDLER		402386	3137					
ANR	405535	Identifier	ZEND_FE_RESET_RW_SPEC_VAR_HANDLER		402386	3138					
ANR	405536	Identifier	ZEND_FE_RESET_RW_SPEC_VAR_HANDLER		402386	3139					
ANR	405537	Identifier	ZEND_NULL_HANDLER		402386	3140					
ANR	405538	Identifier	ZEND_NULL_HANDLER		402386	3141					
ANR	405539	Identifier	ZEND_NULL_HANDLER		402386	3142					
ANR	405540	Identifier	ZEND_NULL_HANDLER		402386	3143					
ANR	405541	Identifier	ZEND_NULL_HANDLER		402386	3144					
ANR	405542	Identifier	ZEND_FE_RESET_RW_SPEC_CV_HANDLER		402386	3145					
ANR	405543	Identifier	ZEND_FE_RESET_RW_SPEC_CV_HANDLER		402386	3146					
ANR	405544	Identifier	ZEND_FE_RESET_RW_SPEC_CV_HANDLER		402386	3147					
ANR	405545	Identifier	ZEND_FE_RESET_RW_SPEC_CV_HANDLER		402386	3148					
ANR	405546	Identifier	ZEND_FE_RESET_RW_SPEC_CV_HANDLER		402386	3149					
ANR	405547	Identifier	ZEND_NULL_HANDLER		402386	3150					
ANR	405548	Identifier	ZEND_NULL_HANDLER		402386	3151					
ANR	405549	Identifier	ZEND_NULL_HANDLER		402386	3152					
ANR	405550	Identifier	ZEND_NULL_HANDLER		402386	3153					
ANR	405551	Identifier	ZEND_NULL_HANDLER		402386	3154					
ANR	405552	Identifier	ZEND_NULL_HANDLER		402386	3155					
ANR	405553	Identifier	ZEND_NULL_HANDLER		402386	3156					
ANR	405554	Identifier	ZEND_NULL_HANDLER		402386	3157					
ANR	405555	Identifier	ZEND_NULL_HANDLER		402386	3158					
ANR	405556	Identifier	ZEND_NULL_HANDLER		402386	3159					
ANR	405557	Identifier	ZEND_FE_FETCH_RW_SPEC_VAR_HANDLER		402386	3160					
ANR	405558	Identifier	ZEND_FE_FETCH_RW_SPEC_VAR_HANDLER		402386	3161					
ANR	405559	Identifier	ZEND_FE_FETCH_RW_SPEC_VAR_HANDLER		402386	3162					
ANR	405560	Identifier	ZEND_FE_FETCH_RW_SPEC_VAR_HANDLER		402386	3163					
ANR	405561	Identifier	ZEND_FE_FETCH_RW_SPEC_VAR_HANDLER		402386	3164					
ANR	405562	Identifier	ZEND_NULL_HANDLER		402386	3165					
ANR	405563	Identifier	ZEND_NULL_HANDLER		402386	3166					
ANR	405564	Identifier	ZEND_NULL_HANDLER		402386	3167					
ANR	405565	Identifier	ZEND_NULL_HANDLER		402386	3168					
ANR	405566	Identifier	ZEND_NULL_HANDLER		402386	3169					
ANR	405567	Identifier	ZEND_NULL_HANDLER		402386	3170					
ANR	405568	Identifier	ZEND_NULL_HANDLER		402386	3171					
ANR	405569	Identifier	ZEND_NULL_HANDLER		402386	3172					
ANR	405570	Identifier	ZEND_NULL_HANDLER		402386	3173					
ANR	405571	Identifier	ZEND_NULL_HANDLER		402386	3174					
ANR	405572	Identifier	ZEND_NULL_HANDLER		402386	3175					
ANR	405573	Identifier	ZEND_NULL_HANDLER		402386	3176					
ANR	405574	Identifier	ZEND_NULL_HANDLER		402386	3177					
ANR	405575	Identifier	ZEND_NULL_HANDLER		402386	3178					
ANR	405576	Identifier	ZEND_NULL_HANDLER		402386	3179					
ANR	405577	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3180					
ANR	405578	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3181					
ANR	405579	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3182					
ANR	405580	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3183					
ANR	405581	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3184					
ANR	405582	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3185					
ANR	405583	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3186					
ANR	405584	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3187					
ANR	405585	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3188					
ANR	405586	Identifier	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386	3189					
ANR	405587	Identifier	ZEND_NULL_HANDLER		402386	3190					
ANR	405588	Identifier	ZEND_NULL_HANDLER		402386	3191					
ANR	405589	Identifier	ZEND_NULL_HANDLER		402386	3192					
ANR	405590	Identifier	ZEND_NULL_HANDLER		402386	3193					
ANR	405591	Identifier	ZEND_NULL_HANDLER		402386	3194					
ANR	405592	Identifier	ZEND_NULL_HANDLER		402386	3195					
ANR	405593	Identifier	ZEND_NULL_HANDLER		402386	3196					
ANR	405594	Identifier	ZEND_NULL_HANDLER		402386	3197					
ANR	405595	Identifier	ZEND_NULL_HANDLER		402386	3198					
ANR	405596	Identifier	ZEND_NULL_HANDLER		402386	3199					
ANR	405597	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CONST_HANDLER		402386	3200					
ANR	405598	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3201					
ANR	405599	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3202					
ANR	405600	Identifier	ZEND_NULL_HANDLER		402386	3203					
ANR	405601	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CV_HANDLER		402386	3204					
ANR	405602	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CONST_HANDLER		402386	3205					
ANR	405603	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3206					
ANR	405604	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3207					
ANR	405605	Identifier	ZEND_NULL_HANDLER		402386	3208					
ANR	405606	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CV_HANDLER		402386	3209					
ANR	405607	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CONST_HANDLER		402386	3210					
ANR	405608	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3211					
ANR	405609	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3212					
ANR	405610	Identifier	ZEND_NULL_HANDLER		402386	3213					
ANR	405611	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CV_HANDLER		402386	3214					
ANR	405612	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CONST_HANDLER		402386	3215					
ANR	405613	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3216					
ANR	405614	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3217					
ANR	405615	Identifier	ZEND_NULL_HANDLER		402386	3218					
ANR	405616	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CV_HANDLER		402386	3219					
ANR	405617	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CONST_HANDLER		402386	3220					
ANR	405618	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3221					
ANR	405619	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386	3222					
ANR	405620	Identifier	ZEND_NULL_HANDLER		402386	3223					
ANR	405621	Identifier	ZEND_INIT_DYNAMIC_CALL_SPEC_CV_HANDLER		402386	3224					
ANR	405622	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3225					
ANR	405623	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3226					
ANR	405624	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3227					
ANR	405625	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3228					
ANR	405626	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3229					
ANR	405627	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3230					
ANR	405628	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3231					
ANR	405629	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3232					
ANR	405630	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3233					
ANR	405631	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3234					
ANR	405632	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3235					
ANR	405633	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3236					
ANR	405634	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3237					
ANR	405635	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3238					
ANR	405636	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3239					
ANR	405637	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3240					
ANR	405638	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3241					
ANR	405639	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3242					
ANR	405640	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3243					
ANR	405641	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3244					
ANR	405642	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3245					
ANR	405643	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3246					
ANR	405644	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3247					
ANR	405645	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3248					
ANR	405646	Identifier	ZEND_DO_ICALL_SPEC_HANDLER		402386	3249					
ANR	405647	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3250					
ANR	405648	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3251					
ANR	405649	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3252					
ANR	405650	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3253					
ANR	405651	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3254					
ANR	405652	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3255					
ANR	405653	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3256					
ANR	405654	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3257					
ANR	405655	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3258					
ANR	405656	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3259					
ANR	405657	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3260					
ANR	405658	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3261					
ANR	405659	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3262					
ANR	405660	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3263					
ANR	405661	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3264					
ANR	405662	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3265					
ANR	405663	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3266					
ANR	405664	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3267					
ANR	405665	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3268					
ANR	405666	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3269					
ANR	405667	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3270					
ANR	405668	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3271					
ANR	405669	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3272					
ANR	405670	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3273					
ANR	405671	Identifier	ZEND_DO_UCALL_SPEC_HANDLER		402386	3274					
ANR	405672	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3275					
ANR	405673	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3276					
ANR	405674	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3277					
ANR	405675	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3278					
ANR	405676	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3279					
ANR	405677	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3280					
ANR	405678	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3281					
ANR	405679	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3282					
ANR	405680	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3283					
ANR	405681	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3284					
ANR	405682	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3285					
ANR	405683	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3286					
ANR	405684	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3287					
ANR	405685	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3288					
ANR	405686	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3289					
ANR	405687	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3290					
ANR	405688	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3291					
ANR	405689	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3292					
ANR	405690	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3293					
ANR	405691	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3294					
ANR	405692	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3295					
ANR	405693	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3296					
ANR	405694	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3297					
ANR	405695	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3298					
ANR	405696	Identifier	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386	3299					
ANR	405697	Identifier	ZEND_NULL_HANDLER		402386	3300					
ANR	405698	Identifier	ZEND_NULL_HANDLER		402386	3301					
ANR	405699	Identifier	ZEND_NULL_HANDLER		402386	3302					
ANR	405700	Identifier	ZEND_NULL_HANDLER		402386	3303					
ANR	405701	Identifier	ZEND_NULL_HANDLER		402386	3304					
ANR	405702	Identifier	ZEND_NULL_HANDLER		402386	3305					
ANR	405703	Identifier	ZEND_NULL_HANDLER		402386	3306					
ANR	405704	Identifier	ZEND_NULL_HANDLER		402386	3307					
ANR	405705	Identifier	ZEND_NULL_HANDLER		402386	3308					
ANR	405706	Identifier	ZEND_NULL_HANDLER		402386	3309					
ANR	405707	Identifier	ZEND_PRE_INC_OBJ_SPEC_VAR_CONST_HANDLER		402386	3310					
ANR	405708	Identifier	ZEND_PRE_INC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3311					
ANR	405709	Identifier	ZEND_PRE_INC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3312					
ANR	405710	Identifier	ZEND_NULL_HANDLER		402386	3313					
ANR	405711	Identifier	ZEND_PRE_INC_OBJ_SPEC_VAR_CV_HANDLER		402386	3314					
ANR	405712	Identifier	ZEND_PRE_INC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	3315					
ANR	405713	Identifier	ZEND_PRE_INC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3316					
ANR	405714	Identifier	ZEND_PRE_INC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3317					
ANR	405715	Identifier	ZEND_NULL_HANDLER		402386	3318					
ANR	405716	Identifier	ZEND_PRE_INC_OBJ_SPEC_UNUSED_CV_HANDLER		402386	3319					
ANR	405717	Identifier	ZEND_PRE_INC_OBJ_SPEC_CV_CONST_HANDLER		402386	3320					
ANR	405718	Identifier	ZEND_PRE_INC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3321					
ANR	405719	Identifier	ZEND_PRE_INC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3322					
ANR	405720	Identifier	ZEND_NULL_HANDLER		402386	3323					
ANR	405721	Identifier	ZEND_PRE_INC_OBJ_SPEC_CV_CV_HANDLER		402386	3324					
ANR	405722	Identifier	ZEND_NULL_HANDLER		402386	3325					
ANR	405723	Identifier	ZEND_NULL_HANDLER		402386	3326					
ANR	405724	Identifier	ZEND_NULL_HANDLER		402386	3327					
ANR	405725	Identifier	ZEND_NULL_HANDLER		402386	3328					
ANR	405726	Identifier	ZEND_NULL_HANDLER		402386	3329					
ANR	405727	Identifier	ZEND_NULL_HANDLER		402386	3330					
ANR	405728	Identifier	ZEND_NULL_HANDLER		402386	3331					
ANR	405729	Identifier	ZEND_NULL_HANDLER		402386	3332					
ANR	405730	Identifier	ZEND_NULL_HANDLER		402386	3333					
ANR	405731	Identifier	ZEND_NULL_HANDLER		402386	3334					
ANR	405732	Identifier	ZEND_PRE_DEC_OBJ_SPEC_VAR_CONST_HANDLER		402386	3335					
ANR	405733	Identifier	ZEND_PRE_DEC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3336					
ANR	405734	Identifier	ZEND_PRE_DEC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3337					
ANR	405735	Identifier	ZEND_NULL_HANDLER		402386	3338					
ANR	405736	Identifier	ZEND_PRE_DEC_OBJ_SPEC_VAR_CV_HANDLER		402386	3339					
ANR	405737	Identifier	ZEND_PRE_DEC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	3340					
ANR	405738	Identifier	ZEND_PRE_DEC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3341					
ANR	405739	Identifier	ZEND_PRE_DEC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3342					
ANR	405740	Identifier	ZEND_NULL_HANDLER		402386	3343					
ANR	405741	Identifier	ZEND_PRE_DEC_OBJ_SPEC_UNUSED_CV_HANDLER		402386	3344					
ANR	405742	Identifier	ZEND_PRE_DEC_OBJ_SPEC_CV_CONST_HANDLER		402386	3345					
ANR	405743	Identifier	ZEND_PRE_DEC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3346					
ANR	405744	Identifier	ZEND_PRE_DEC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3347					
ANR	405745	Identifier	ZEND_NULL_HANDLER		402386	3348					
ANR	405746	Identifier	ZEND_PRE_DEC_OBJ_SPEC_CV_CV_HANDLER		402386	3349					
ANR	405747	Identifier	ZEND_NULL_HANDLER		402386	3350					
ANR	405748	Identifier	ZEND_NULL_HANDLER		402386	3351					
ANR	405749	Identifier	ZEND_NULL_HANDLER		402386	3352					
ANR	405750	Identifier	ZEND_NULL_HANDLER		402386	3353					
ANR	405751	Identifier	ZEND_NULL_HANDLER		402386	3354					
ANR	405752	Identifier	ZEND_NULL_HANDLER		402386	3355					
ANR	405753	Identifier	ZEND_NULL_HANDLER		402386	3356					
ANR	405754	Identifier	ZEND_NULL_HANDLER		402386	3357					
ANR	405755	Identifier	ZEND_NULL_HANDLER		402386	3358					
ANR	405756	Identifier	ZEND_NULL_HANDLER		402386	3359					
ANR	405757	Identifier	ZEND_POST_INC_OBJ_SPEC_VAR_CONST_HANDLER		402386	3360					
ANR	405758	Identifier	ZEND_POST_INC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3361					
ANR	405759	Identifier	ZEND_POST_INC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3362					
ANR	405760	Identifier	ZEND_NULL_HANDLER		402386	3363					
ANR	405761	Identifier	ZEND_POST_INC_OBJ_SPEC_VAR_CV_HANDLER		402386	3364					
ANR	405762	Identifier	ZEND_POST_INC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	3365					
ANR	405763	Identifier	ZEND_POST_INC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3366					
ANR	405764	Identifier	ZEND_POST_INC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3367					
ANR	405765	Identifier	ZEND_NULL_HANDLER		402386	3368					
ANR	405766	Identifier	ZEND_POST_INC_OBJ_SPEC_UNUSED_CV_HANDLER		402386	3369					
ANR	405767	Identifier	ZEND_POST_INC_OBJ_SPEC_CV_CONST_HANDLER		402386	3370					
ANR	405768	Identifier	ZEND_POST_INC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3371					
ANR	405769	Identifier	ZEND_POST_INC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3372					
ANR	405770	Identifier	ZEND_NULL_HANDLER		402386	3373					
ANR	405771	Identifier	ZEND_POST_INC_OBJ_SPEC_CV_CV_HANDLER		402386	3374					
ANR	405772	Identifier	ZEND_NULL_HANDLER		402386	3375					
ANR	405773	Identifier	ZEND_NULL_HANDLER		402386	3376					
ANR	405774	Identifier	ZEND_NULL_HANDLER		402386	3377					
ANR	405775	Identifier	ZEND_NULL_HANDLER		402386	3378					
ANR	405776	Identifier	ZEND_NULL_HANDLER		402386	3379					
ANR	405777	Identifier	ZEND_NULL_HANDLER		402386	3380					
ANR	405778	Identifier	ZEND_NULL_HANDLER		402386	3381					
ANR	405779	Identifier	ZEND_NULL_HANDLER		402386	3382					
ANR	405780	Identifier	ZEND_NULL_HANDLER		402386	3383					
ANR	405781	Identifier	ZEND_NULL_HANDLER		402386	3384					
ANR	405782	Identifier	ZEND_POST_DEC_OBJ_SPEC_VAR_CONST_HANDLER		402386	3385					
ANR	405783	Identifier	ZEND_POST_DEC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3386					
ANR	405784	Identifier	ZEND_POST_DEC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3387					
ANR	405785	Identifier	ZEND_NULL_HANDLER		402386	3388					
ANR	405786	Identifier	ZEND_POST_DEC_OBJ_SPEC_VAR_CV_HANDLER		402386	3389					
ANR	405787	Identifier	ZEND_POST_DEC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	3390					
ANR	405788	Identifier	ZEND_POST_DEC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3391					
ANR	405789	Identifier	ZEND_POST_DEC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3392					
ANR	405790	Identifier	ZEND_NULL_HANDLER		402386	3393					
ANR	405791	Identifier	ZEND_POST_DEC_OBJ_SPEC_UNUSED_CV_HANDLER		402386	3394					
ANR	405792	Identifier	ZEND_POST_DEC_OBJ_SPEC_CV_CONST_HANDLER		402386	3395					
ANR	405793	Identifier	ZEND_POST_DEC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3396					
ANR	405794	Identifier	ZEND_POST_DEC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3397					
ANR	405795	Identifier	ZEND_NULL_HANDLER		402386	3398					
ANR	405796	Identifier	ZEND_POST_DEC_OBJ_SPEC_CV_CV_HANDLER		402386	3399					
ANR	405797	Identifier	ZEND_NULL_HANDLER		402386	3400					
ANR	405798	Identifier	ZEND_NULL_HANDLER		402386	3401					
ANR	405799	Identifier	ZEND_NULL_HANDLER		402386	3402					
ANR	405800	Identifier	ZEND_NULL_HANDLER		402386	3403					
ANR	405801	Identifier	ZEND_NULL_HANDLER		402386	3404					
ANR	405802	Identifier	ZEND_NULL_HANDLER		402386	3405					
ANR	405803	Identifier	ZEND_NULL_HANDLER		402386	3406					
ANR	405804	Identifier	ZEND_NULL_HANDLER		402386	3407					
ANR	405805	Identifier	ZEND_NULL_HANDLER		402386	3408					
ANR	405806	Identifier	ZEND_NULL_HANDLER		402386	3409					
ANR	405807	Identifier	ZEND_ASSIGN_OBJ_SPEC_VAR_CONST_HANDLER		402386	3410					
ANR	405808	Identifier	ZEND_ASSIGN_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3411					
ANR	405809	Identifier	ZEND_ASSIGN_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386	3412					
ANR	405810	Identifier	ZEND_NULL_HANDLER		402386	3413					
ANR	405811	Identifier	ZEND_ASSIGN_OBJ_SPEC_VAR_CV_HANDLER		402386	3414					
ANR	405812	Identifier	ZEND_ASSIGN_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	3415					
ANR	405813	Identifier	ZEND_ASSIGN_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3416					
ANR	405814	Identifier	ZEND_ASSIGN_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3417					
ANR	405815	Identifier	ZEND_NULL_HANDLER		402386	3418					
ANR	405816	Identifier	ZEND_ASSIGN_OBJ_SPEC_UNUSED_CV_HANDLER		402386	3419					
ANR	405817	Identifier	ZEND_ASSIGN_OBJ_SPEC_CV_CONST_HANDLER		402386	3420					
ANR	405818	Identifier	ZEND_ASSIGN_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3421					
ANR	405819	Identifier	ZEND_ASSIGN_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3422					
ANR	405820	Identifier	ZEND_NULL_HANDLER		402386	3423					
ANR	405821	Identifier	ZEND_ASSIGN_OBJ_SPEC_CV_CV_HANDLER		402386	3424					
ANR	405822	Identifier	ZEND_NULL_HANDLER		402386	3425					
ANR	405823	Identifier	ZEND_NULL_HANDLER		402386	3426					
ANR	405824	Identifier	ZEND_NULL_HANDLER		402386	3427					
ANR	405825	Identifier	ZEND_NULL_HANDLER		402386	3428					
ANR	405826	Identifier	ZEND_NULL_HANDLER		402386	3429					
ANR	405827	Identifier	ZEND_NULL_HANDLER		402386	3430					
ANR	405828	Identifier	ZEND_NULL_HANDLER		402386	3431					
ANR	405829	Identifier	ZEND_NULL_HANDLER		402386	3432					
ANR	405830	Identifier	ZEND_NULL_HANDLER		402386	3433					
ANR	405831	Identifier	ZEND_NULL_HANDLER		402386	3434					
ANR	405832	Identifier	ZEND_NULL_HANDLER		402386	3435					
ANR	405833	Identifier	ZEND_NULL_HANDLER		402386	3436					
ANR	405834	Identifier	ZEND_NULL_HANDLER		402386	3437					
ANR	405835	Identifier	ZEND_NULL_HANDLER		402386	3438					
ANR	405836	Identifier	ZEND_NULL_HANDLER		402386	3439					
ANR	405837	Identifier	ZEND_NULL_HANDLER		402386	3440					
ANR	405838	Identifier	ZEND_NULL_HANDLER		402386	3441					
ANR	405839	Identifier	ZEND_NULL_HANDLER		402386	3442					
ANR	405840	Identifier	ZEND_NULL_HANDLER		402386	3443					
ANR	405841	Identifier	ZEND_NULL_HANDLER		402386	3444					
ANR	405842	Identifier	ZEND_NULL_HANDLER		402386	3445					
ANR	405843	Identifier	ZEND_NULL_HANDLER		402386	3446					
ANR	405844	Identifier	ZEND_NULL_HANDLER		402386	3447					
ANR	405845	Identifier	ZEND_NULL_HANDLER		402386	3448					
ANR	405846	Identifier	ZEND_NULL_HANDLER		402386	3449					
ANR	405847	Identifier	ZEND_NULL_HANDLER		402386	3450					
ANR	405848	Identifier	ZEND_NULL_HANDLER		402386	3451					
ANR	405849	Identifier	ZEND_NULL_HANDLER		402386	3452					
ANR	405850	Identifier	ZEND_NULL_HANDLER		402386	3453					
ANR	405851	Identifier	ZEND_NULL_HANDLER		402386	3454					
ANR	405852	Identifier	ZEND_INSTANCEOF_SPEC_TMPVAR_CONST_HANDLER		402386	3455					
ANR	405853	Identifier	ZEND_NULL_HANDLER		402386	3456					
ANR	405854	Identifier	ZEND_INSTANCEOF_SPEC_TMPVAR_VAR_HANDLER		402386	3457					
ANR	405855	Identifier	ZEND_NULL_HANDLER		402386	3458					
ANR	405856	Identifier	ZEND_NULL_HANDLER		402386	3459					
ANR	405857	Identifier	ZEND_INSTANCEOF_SPEC_TMPVAR_CONST_HANDLER		402386	3460					
ANR	405858	Identifier	ZEND_NULL_HANDLER		402386	3461					
ANR	405859	Identifier	ZEND_INSTANCEOF_SPEC_TMPVAR_VAR_HANDLER		402386	3462					
ANR	405860	Identifier	ZEND_NULL_HANDLER		402386	3463					
ANR	405861	Identifier	ZEND_NULL_HANDLER		402386	3464					
ANR	405862	Identifier	ZEND_NULL_HANDLER		402386	3465					
ANR	405863	Identifier	ZEND_NULL_HANDLER		402386	3466					
ANR	405864	Identifier	ZEND_NULL_HANDLER		402386	3467					
ANR	405865	Identifier	ZEND_NULL_HANDLER		402386	3468					
ANR	405866	Identifier	ZEND_NULL_HANDLER		402386	3469					
ANR	405867	Identifier	ZEND_INSTANCEOF_SPEC_CV_CONST_HANDLER		402386	3470					
ANR	405868	Identifier	ZEND_NULL_HANDLER		402386	3471					
ANR	405869	Identifier	ZEND_INSTANCEOF_SPEC_CV_VAR_HANDLER		402386	3472					
ANR	405870	Identifier	ZEND_NULL_HANDLER		402386	3473					
ANR	405871	Identifier	ZEND_NULL_HANDLER		402386	3474					
ANR	405872	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3475					
ANR	405873	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3476					
ANR	405874	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3477					
ANR	405875	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3478					
ANR	405876	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3479					
ANR	405877	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3480					
ANR	405878	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3481					
ANR	405879	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3482					
ANR	405880	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3483					
ANR	405881	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3484					
ANR	405882	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3485					
ANR	405883	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3486					
ANR	405884	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3487					
ANR	405885	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3488					
ANR	405886	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3489					
ANR	405887	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3490					
ANR	405888	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3491					
ANR	405889	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3492					
ANR	405890	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3493					
ANR	405891	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3494					
ANR	405892	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3495					
ANR	405893	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3496					
ANR	405894	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3497					
ANR	405895	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3498					
ANR	405896	Identifier	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386	3499					
ANR	405897	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3500					
ANR	405898	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3501					
ANR	405899	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3502					
ANR	405900	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3503					
ANR	405901	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3504					
ANR	405902	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3505					
ANR	405903	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3506					
ANR	405904	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3507					
ANR	405905	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3508					
ANR	405906	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3509					
ANR	405907	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3510					
ANR	405908	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3511					
ANR	405909	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3512					
ANR	405910	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3513					
ANR	405911	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3514					
ANR	405912	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3515					
ANR	405913	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3516					
ANR	405914	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3517					
ANR	405915	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3518					
ANR	405916	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3519					
ANR	405917	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3520					
ANR	405918	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3521					
ANR	405919	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3522					
ANR	405920	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3523					
ANR	405921	Identifier	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386	3524					
ANR	405922	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3525					
ANR	405923	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3526					
ANR	405924	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3527					
ANR	405925	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3528					
ANR	405926	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3529					
ANR	405927	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3530					
ANR	405928	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3531					
ANR	405929	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3532					
ANR	405930	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3533					
ANR	405931	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3534					
ANR	405932	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3535					
ANR	405933	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3536					
ANR	405934	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3537					
ANR	405935	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3538					
ANR	405936	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3539					
ANR	405937	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3540					
ANR	405938	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3541					
ANR	405939	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3542					
ANR	405940	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3543					
ANR	405941	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3544					
ANR	405942	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3545					
ANR	405943	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3546					
ANR	405944	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3547					
ANR	405945	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3548					
ANR	405946	Identifier	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386	3549					
ANR	405947	Identifier	ZEND_YIELD_FROM_SPEC_CONST_HANDLER		402386	3550					
ANR	405948	Identifier	ZEND_YIELD_FROM_SPEC_CONST_HANDLER		402386	3551					
ANR	405949	Identifier	ZEND_YIELD_FROM_SPEC_CONST_HANDLER		402386	3552					
ANR	405950	Identifier	ZEND_YIELD_FROM_SPEC_CONST_HANDLER		402386	3553					
ANR	405951	Identifier	ZEND_YIELD_FROM_SPEC_CONST_HANDLER		402386	3554					
ANR	405952	Identifier	ZEND_YIELD_FROM_SPEC_TMP_HANDLER		402386	3555					
ANR	405953	Identifier	ZEND_YIELD_FROM_SPEC_TMP_HANDLER		402386	3556					
ANR	405954	Identifier	ZEND_YIELD_FROM_SPEC_TMP_HANDLER		402386	3557					
ANR	405955	Identifier	ZEND_YIELD_FROM_SPEC_TMP_HANDLER		402386	3558					
ANR	405956	Identifier	ZEND_YIELD_FROM_SPEC_TMP_HANDLER		402386	3559					
ANR	405957	Identifier	ZEND_YIELD_FROM_SPEC_VAR_HANDLER		402386	3560					
ANR	405958	Identifier	ZEND_YIELD_FROM_SPEC_VAR_HANDLER		402386	3561					
ANR	405959	Identifier	ZEND_YIELD_FROM_SPEC_VAR_HANDLER		402386	3562					
ANR	405960	Identifier	ZEND_YIELD_FROM_SPEC_VAR_HANDLER		402386	3563					
ANR	405961	Identifier	ZEND_YIELD_FROM_SPEC_VAR_HANDLER		402386	3564					
ANR	405962	Identifier	ZEND_NULL_HANDLER		402386	3565					
ANR	405963	Identifier	ZEND_NULL_HANDLER		402386	3566					
ANR	405964	Identifier	ZEND_NULL_HANDLER		402386	3567					
ANR	405965	Identifier	ZEND_NULL_HANDLER		402386	3568					
ANR	405966	Identifier	ZEND_NULL_HANDLER		402386	3569					
ANR	405967	Identifier	ZEND_YIELD_FROM_SPEC_CV_HANDLER		402386	3570					
ANR	405968	Identifier	ZEND_YIELD_FROM_SPEC_CV_HANDLER		402386	3571					
ANR	405969	Identifier	ZEND_YIELD_FROM_SPEC_CV_HANDLER		402386	3572					
ANR	405970	Identifier	ZEND_YIELD_FROM_SPEC_CV_HANDLER		402386	3573					
ANR	405971	Identifier	ZEND_YIELD_FROM_SPEC_CV_HANDLER		402386	3574					
ANR	405972	Identifier	ZEND_DECLARE_CONST_SPEC_CONST_CONST_HANDLER		402386	3575					
ANR	405973	Identifier	ZEND_NULL_HANDLER		402386	3576					
ANR	405974	Identifier	ZEND_NULL_HANDLER		402386	3577					
ANR	405975	Identifier	ZEND_NULL_HANDLER		402386	3578					
ANR	405976	Identifier	ZEND_NULL_HANDLER		402386	3579					
ANR	405977	Identifier	ZEND_NULL_HANDLER		402386	3580					
ANR	405978	Identifier	ZEND_NULL_HANDLER		402386	3581					
ANR	405979	Identifier	ZEND_NULL_HANDLER		402386	3582					
ANR	405980	Identifier	ZEND_NULL_HANDLER		402386	3583					
ANR	405981	Identifier	ZEND_NULL_HANDLER		402386	3584					
ANR	405982	Identifier	ZEND_NULL_HANDLER		402386	3585					
ANR	405983	Identifier	ZEND_NULL_HANDLER		402386	3586					
ANR	405984	Identifier	ZEND_NULL_HANDLER		402386	3587					
ANR	405985	Identifier	ZEND_NULL_HANDLER		402386	3588					
ANR	405986	Identifier	ZEND_NULL_HANDLER		402386	3589					
ANR	405987	Identifier	ZEND_NULL_HANDLER		402386	3590					
ANR	405988	Identifier	ZEND_NULL_HANDLER		402386	3591					
ANR	405989	Identifier	ZEND_NULL_HANDLER		402386	3592					
ANR	405990	Identifier	ZEND_NULL_HANDLER		402386	3593					
ANR	405991	Identifier	ZEND_NULL_HANDLER		402386	3594					
ANR	405992	Identifier	ZEND_NULL_HANDLER		402386	3595					
ANR	405993	Identifier	ZEND_NULL_HANDLER		402386	3596					
ANR	405994	Identifier	ZEND_NULL_HANDLER		402386	3597					
ANR	405995	Identifier	ZEND_NULL_HANDLER		402386	3598					
ANR	405996	Identifier	ZEND_NULL_HANDLER		402386	3599					
ANR	405997	Identifier	ZEND_ADD_INTERFACE_SPEC_CONST_HANDLER		402386	3600					
ANR	405998	Identifier	ZEND_NULL_HANDLER		402386	3601					
ANR	405999	Identifier	ZEND_NULL_HANDLER		402386	3602					
ANR	406000	Identifier	ZEND_NULL_HANDLER		402386	3603					
ANR	406001	Identifier	ZEND_NULL_HANDLER		402386	3604					
ANR	406002	Identifier	ZEND_ADD_INTERFACE_SPEC_CONST_HANDLER		402386	3605					
ANR	406003	Identifier	ZEND_NULL_HANDLER		402386	3606					
ANR	406004	Identifier	ZEND_NULL_HANDLER		402386	3607					
ANR	406005	Identifier	ZEND_NULL_HANDLER		402386	3608					
ANR	406006	Identifier	ZEND_NULL_HANDLER		402386	3609					
ANR	406007	Identifier	ZEND_ADD_INTERFACE_SPEC_CONST_HANDLER		402386	3610					
ANR	406008	Identifier	ZEND_NULL_HANDLER		402386	3611					
ANR	406009	Identifier	ZEND_NULL_HANDLER		402386	3612					
ANR	406010	Identifier	ZEND_NULL_HANDLER		402386	3613					
ANR	406011	Identifier	ZEND_NULL_HANDLER		402386	3614					
ANR	406012	Identifier	ZEND_ADD_INTERFACE_SPEC_CONST_HANDLER		402386	3615					
ANR	406013	Identifier	ZEND_NULL_HANDLER		402386	3616					
ANR	406014	Identifier	ZEND_NULL_HANDLER		402386	3617					
ANR	406015	Identifier	ZEND_NULL_HANDLER		402386	3618					
ANR	406016	Identifier	ZEND_NULL_HANDLER		402386	3619					
ANR	406017	Identifier	ZEND_ADD_INTERFACE_SPEC_CONST_HANDLER		402386	3620					
ANR	406018	Identifier	ZEND_NULL_HANDLER		402386	3621					
ANR	406019	Identifier	ZEND_NULL_HANDLER		402386	3622					
ANR	406020	Identifier	ZEND_NULL_HANDLER		402386	3623					
ANR	406021	Identifier	ZEND_NULL_HANDLER		402386	3624					
ANR	406022	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3625					
ANR	406023	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3626					
ANR	406024	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3627					
ANR	406025	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3628					
ANR	406026	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3629					
ANR	406027	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3630					
ANR	406028	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3631					
ANR	406029	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3632					
ANR	406030	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3633					
ANR	406031	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3634					
ANR	406032	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3635					
ANR	406033	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3636					
ANR	406034	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3637					
ANR	406035	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3638					
ANR	406036	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3639					
ANR	406037	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3640					
ANR	406038	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3641					
ANR	406039	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3642					
ANR	406040	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3643					
ANR	406041	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3644					
ANR	406042	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3645					
ANR	406043	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3646					
ANR	406044	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3647					
ANR	406045	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3648					
ANR	406046	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386	3649					
ANR	406047	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3650					
ANR	406048	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3651					
ANR	406049	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3652					
ANR	406050	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3653					
ANR	406051	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3654					
ANR	406052	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3655					
ANR	406053	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3656					
ANR	406054	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3657					
ANR	406055	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3658					
ANR	406056	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3659					
ANR	406057	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3660					
ANR	406058	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3661					
ANR	406059	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3662					
ANR	406060	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3663					
ANR	406061	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3664					
ANR	406062	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3665					
ANR	406063	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3666					
ANR	406064	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3667					
ANR	406065	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3668					
ANR	406066	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3669					
ANR	406067	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3670					
ANR	406068	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3671					
ANR	406069	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3672					
ANR	406070	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3673					
ANR	406071	Identifier	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386	3674					
ANR	406072	Identifier	ZEND_NULL_HANDLER		402386	3675					
ANR	406073	Identifier	ZEND_NULL_HANDLER		402386	3676					
ANR	406074	Identifier	ZEND_NULL_HANDLER		402386	3677					
ANR	406075	Identifier	ZEND_NULL_HANDLER		402386	3678					
ANR	406076	Identifier	ZEND_NULL_HANDLER		402386	3679					
ANR	406077	Identifier	ZEND_NULL_HANDLER		402386	3680					
ANR	406078	Identifier	ZEND_NULL_HANDLER		402386	3681					
ANR	406079	Identifier	ZEND_NULL_HANDLER		402386	3682					
ANR	406080	Identifier	ZEND_NULL_HANDLER		402386	3683					
ANR	406081	Identifier	ZEND_NULL_HANDLER		402386	3684					
ANR	406082	Identifier	ZEND_ASSIGN_DIM_SPEC_VAR_CONST_HANDLER		402386	3685					
ANR	406083	Identifier	ZEND_ASSIGN_DIM_SPEC_VAR_TMPVAR_HANDLER		402386	3686					
ANR	406084	Identifier	ZEND_ASSIGN_DIM_SPEC_VAR_TMPVAR_HANDLER		402386	3687					
ANR	406085	Identifier	ZEND_ASSIGN_DIM_SPEC_VAR_UNUSED_HANDLER		402386	3688					
ANR	406086	Identifier	ZEND_ASSIGN_DIM_SPEC_VAR_CV_HANDLER		402386	3689					
ANR	406087	Identifier	ZEND_NULL_HANDLER		402386	3690					
ANR	406088	Identifier	ZEND_NULL_HANDLER		402386	3691					
ANR	406089	Identifier	ZEND_NULL_HANDLER		402386	3692					
ANR	406090	Identifier	ZEND_NULL_HANDLER		402386	3693					
ANR	406091	Identifier	ZEND_NULL_HANDLER		402386	3694					
ANR	406092	Identifier	ZEND_ASSIGN_DIM_SPEC_CV_CONST_HANDLER		402386	3695					
ANR	406093	Identifier	ZEND_ASSIGN_DIM_SPEC_CV_TMPVAR_HANDLER		402386	3696					
ANR	406094	Identifier	ZEND_ASSIGN_DIM_SPEC_CV_TMPVAR_HANDLER		402386	3697					
ANR	406095	Identifier	ZEND_ASSIGN_DIM_SPEC_CV_UNUSED_HANDLER		402386	3698					
ANR	406096	Identifier	ZEND_ASSIGN_DIM_SPEC_CV_CV_HANDLER		402386	3699					
ANR	406097	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CONST_CONST_HANDLER		402386	3700					
ANR	406098	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CONST_TMPVAR_HANDLER		402386	3701					
ANR	406099	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CONST_TMPVAR_HANDLER		402386	3702					
ANR	406100	Identifier	ZEND_NULL_HANDLER		402386	3703					
ANR	406101	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CONST_CV_HANDLER		402386	3704					
ANR	406102	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_CONST_HANDLER		402386	3705					
ANR	406103	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	3706					
ANR	406104	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	3707					
ANR	406105	Identifier	ZEND_NULL_HANDLER		402386	3708					
ANR	406106	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_CV_HANDLER		402386	3709					
ANR	406107	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_CONST_HANDLER		402386	3710					
ANR	406108	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	3711					
ANR	406109	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386	3712					
ANR	406110	Identifier	ZEND_NULL_HANDLER		402386	3713					
ANR	406111	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_CV_HANDLER		402386	3714					
ANR	406112	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_UNUSED_CONST_HANDLER		402386	3715					
ANR	406113	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3716					
ANR	406114	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386	3717					
ANR	406115	Identifier	ZEND_NULL_HANDLER		402386	3718					
ANR	406116	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_UNUSED_CV_HANDLER		402386	3719					
ANR	406117	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CV_CONST_HANDLER		402386	3720					
ANR	406118	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3721					
ANR	406119	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CV_TMPVAR_HANDLER		402386	3722					
ANR	406120	Identifier	ZEND_NULL_HANDLER		402386	3723					
ANR	406121	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CV_CV_HANDLER		402386	3724					
ANR	406122	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3725					
ANR	406123	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3726					
ANR	406124	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3727					
ANR	406125	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3728					
ANR	406126	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3729					
ANR	406127	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3730					
ANR	406128	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3731					
ANR	406129	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3732					
ANR	406130	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3733					
ANR	406131	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3734					
ANR	406132	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3735					
ANR	406133	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3736					
ANR	406134	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3737					
ANR	406135	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3738					
ANR	406136	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3739					
ANR	406137	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3740					
ANR	406138	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3741					
ANR	406139	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3742					
ANR	406140	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3743					
ANR	406141	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3744					
ANR	406142	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3745					
ANR	406143	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3746					
ANR	406144	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3747					
ANR	406145	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3748					
ANR	406146	Identifier	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386	3749					
ANR	406147	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3750					
ANR	406148	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3751					
ANR	406149	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3752					
ANR	406150	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3753					
ANR	406151	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3754					
ANR	406152	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3755					
ANR	406153	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3756					
ANR	406154	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3757					
ANR	406155	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3758					
ANR	406156	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3759					
ANR	406157	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3760					
ANR	406158	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3761					
ANR	406159	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3762					
ANR	406160	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3763					
ANR	406161	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3764					
ANR	406162	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3765					
ANR	406163	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3766					
ANR	406164	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3767					
ANR	406165	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3768					
ANR	406166	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3769					
ANR	406167	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3770					
ANR	406168	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3771					
ANR	406169	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3772					
ANR	406170	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3773					
ANR	406171	Identifier	ZEND_USER_OPCODE_SPEC_HANDLER		402386	3774					
ANR	406172	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3775					
ANR	406173	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3776					
ANR	406174	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3777					
ANR	406175	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3778					
ANR	406176	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3779					
ANR	406177	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3780					
ANR	406178	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3781					
ANR	406179	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3782					
ANR	406180	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3783					
ANR	406181	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3784					
ANR	406182	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3785					
ANR	406183	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3786					
ANR	406184	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3787					
ANR	406185	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3788					
ANR	406186	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3789					
ANR	406187	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3790					
ANR	406188	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3791					
ANR	406189	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3792					
ANR	406190	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3793					
ANR	406191	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3794					
ANR	406192	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3795					
ANR	406193	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3796					
ANR	406194	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3797					
ANR	406195	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3798					
ANR	406196	Identifier	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386	3799					
ANR	406197	Identifier	ZEND_JMP_SET_SPEC_CONST_HANDLER		402386	3800					
ANR	406198	Identifier	ZEND_JMP_SET_SPEC_CONST_HANDLER		402386	3801					
ANR	406199	Identifier	ZEND_JMP_SET_SPEC_CONST_HANDLER		402386	3802					
ANR	406200	Identifier	ZEND_JMP_SET_SPEC_CONST_HANDLER		402386	3803					
ANR	406201	Identifier	ZEND_JMP_SET_SPEC_CONST_HANDLER		402386	3804					
ANR	406202	Identifier	ZEND_JMP_SET_SPEC_TMP_HANDLER		402386	3805					
ANR	406203	Identifier	ZEND_JMP_SET_SPEC_TMP_HANDLER		402386	3806					
ANR	406204	Identifier	ZEND_JMP_SET_SPEC_TMP_HANDLER		402386	3807					
ANR	406205	Identifier	ZEND_JMP_SET_SPEC_TMP_HANDLER		402386	3808					
ANR	406206	Identifier	ZEND_JMP_SET_SPEC_TMP_HANDLER		402386	3809					
ANR	406207	Identifier	ZEND_JMP_SET_SPEC_VAR_HANDLER		402386	3810					
ANR	406208	Identifier	ZEND_JMP_SET_SPEC_VAR_HANDLER		402386	3811					
ANR	406209	Identifier	ZEND_JMP_SET_SPEC_VAR_HANDLER		402386	3812					
ANR	406210	Identifier	ZEND_JMP_SET_SPEC_VAR_HANDLER		402386	3813					
ANR	406211	Identifier	ZEND_JMP_SET_SPEC_VAR_HANDLER		402386	3814					
ANR	406212	Identifier	ZEND_NULL_HANDLER		402386	3815					
ANR	406213	Identifier	ZEND_NULL_HANDLER		402386	3816					
ANR	406214	Identifier	ZEND_NULL_HANDLER		402386	3817					
ANR	406215	Identifier	ZEND_NULL_HANDLER		402386	3818					
ANR	406216	Identifier	ZEND_NULL_HANDLER		402386	3819					
ANR	406217	Identifier	ZEND_JMP_SET_SPEC_CV_HANDLER		402386	3820					
ANR	406218	Identifier	ZEND_JMP_SET_SPEC_CV_HANDLER		402386	3821					
ANR	406219	Identifier	ZEND_JMP_SET_SPEC_CV_HANDLER		402386	3822					
ANR	406220	Identifier	ZEND_JMP_SET_SPEC_CV_HANDLER		402386	3823					
ANR	406221	Identifier	ZEND_JMP_SET_SPEC_CV_HANDLER		402386	3824					
ANR	406222	Identifier	ZEND_NULL_HANDLER		402386	3825					
ANR	406223	Identifier	ZEND_NULL_HANDLER		402386	3826					
ANR	406224	Identifier	ZEND_NULL_HANDLER		402386	3827					
ANR	406225	Identifier	ZEND_DECLARE_LAMBDA_FUNCTION_SPEC_CONST_UNUSED_HANDLER		402386	3828					
ANR	406226	Identifier	ZEND_NULL_HANDLER		402386	3829					
ANR	406227	Identifier	ZEND_NULL_HANDLER		402386	3830					
ANR	406228	Identifier	ZEND_NULL_HANDLER		402386	3831					
ANR	406229	Identifier	ZEND_NULL_HANDLER		402386	3832					
ANR	406230	Identifier	ZEND_NULL_HANDLER		402386	3833					
ANR	406231	Identifier	ZEND_NULL_HANDLER		402386	3834					
ANR	406232	Identifier	ZEND_NULL_HANDLER		402386	3835					
ANR	406233	Identifier	ZEND_NULL_HANDLER		402386	3836					
ANR	406234	Identifier	ZEND_NULL_HANDLER		402386	3837					
ANR	406235	Identifier	ZEND_NULL_HANDLER		402386	3838					
ANR	406236	Identifier	ZEND_NULL_HANDLER		402386	3839					
ANR	406237	Identifier	ZEND_NULL_HANDLER		402386	3840					
ANR	406238	Identifier	ZEND_NULL_HANDLER		402386	3841					
ANR	406239	Identifier	ZEND_NULL_HANDLER		402386	3842					
ANR	406240	Identifier	ZEND_NULL_HANDLER		402386	3843					
ANR	406241	Identifier	ZEND_NULL_HANDLER		402386	3844					
ANR	406242	Identifier	ZEND_NULL_HANDLER		402386	3845					
ANR	406243	Identifier	ZEND_NULL_HANDLER		402386	3846					
ANR	406244	Identifier	ZEND_NULL_HANDLER		402386	3847					
ANR	406245	Identifier	ZEND_NULL_HANDLER		402386	3848					
ANR	406246	Identifier	ZEND_NULL_HANDLER		402386	3849					
ANR	406247	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3850					
ANR	406248	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3851					
ANR	406249	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3852					
ANR	406250	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3853					
ANR	406251	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3854					
ANR	406252	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3855					
ANR	406253	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3856					
ANR	406254	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3857					
ANR	406255	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3858					
ANR	406256	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3859					
ANR	406257	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3860					
ANR	406258	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3861					
ANR	406259	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3862					
ANR	406260	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3863					
ANR	406261	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3864					
ANR	406262	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3865					
ANR	406263	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3866					
ANR	406264	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3867					
ANR	406265	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3868					
ANR	406266	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3869					
ANR	406267	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3870					
ANR	406268	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3871					
ANR	406269	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3872					
ANR	406270	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3873					
ANR	406271	Identifier	ZEND_ADD_TRAIT_SPEC_HANDLER		402386	3874					
ANR	406272	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3875					
ANR	406273	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3876					
ANR	406274	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3877					
ANR	406275	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3878					
ANR	406276	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3879					
ANR	406277	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3880					
ANR	406278	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3881					
ANR	406279	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3882					
ANR	406280	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3883					
ANR	406281	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3884					
ANR	406282	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3885					
ANR	406283	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3886					
ANR	406284	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3887					
ANR	406285	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3888					
ANR	406286	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3889					
ANR	406287	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3890					
ANR	406288	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3891					
ANR	406289	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3892					
ANR	406290	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3893					
ANR	406291	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3894					
ANR	406292	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3895					
ANR	406293	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3896					
ANR	406294	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3897					
ANR	406295	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3898					
ANR	406296	Identifier	ZEND_BIND_TRAITS_SPEC_HANDLER		402386	3899					
ANR	406297	Identifier	ZEND_NULL_HANDLER		402386	3900					
ANR	406298	Identifier	ZEND_NULL_HANDLER		402386	3901					
ANR	406299	Identifier	ZEND_NULL_HANDLER		402386	3902					
ANR	406300	Identifier	ZEND_NULL_HANDLER		402386	3903					
ANR	406301	Identifier	ZEND_NULL_HANDLER		402386	3904					
ANR	406302	Identifier	ZEND_NULL_HANDLER		402386	3905					
ANR	406303	Identifier	ZEND_NULL_HANDLER		402386	3906					
ANR	406304	Identifier	ZEND_NULL_HANDLER		402386	3907					
ANR	406305	Identifier	ZEND_NULL_HANDLER		402386	3908					
ANR	406306	Identifier	ZEND_NULL_HANDLER		402386	3909					
ANR	406307	Identifier	ZEND_NULL_HANDLER		402386	3910					
ANR	406308	Identifier	ZEND_NULL_HANDLER		402386	3911					
ANR	406309	Identifier	ZEND_NULL_HANDLER		402386	3912					
ANR	406310	Identifier	ZEND_SEPARATE_SPEC_VAR_UNUSED_HANDLER		402386	3913					
ANR	406311	Identifier	ZEND_NULL_HANDLER		402386	3914					
ANR	406312	Identifier	ZEND_NULL_HANDLER		402386	3915					
ANR	406313	Identifier	ZEND_NULL_HANDLER		402386	3916					
ANR	406314	Identifier	ZEND_NULL_HANDLER		402386	3917					
ANR	406315	Identifier	ZEND_NULL_HANDLER		402386	3918					
ANR	406316	Identifier	ZEND_NULL_HANDLER		402386	3919					
ANR	406317	Identifier	ZEND_NULL_HANDLER		402386	3920					
ANR	406318	Identifier	ZEND_NULL_HANDLER		402386	3921					
ANR	406319	Identifier	ZEND_NULL_HANDLER		402386	3922					
ANR	406320	Identifier	ZEND_NULL_HANDLER		402386	3923					
ANR	406321	Identifier	ZEND_NULL_HANDLER		402386	3924					
ANR	406322	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3925					
ANR	406323	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3926					
ANR	406324	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3927					
ANR	406325	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3928					
ANR	406326	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3929					
ANR	406327	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3930					
ANR	406328	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3931					
ANR	406329	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3932					
ANR	406330	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3933					
ANR	406331	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3934					
ANR	406332	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3935					
ANR	406333	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3936					
ANR	406334	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3937					
ANR	406335	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3938					
ANR	406336	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3939					
ANR	406337	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3940					
ANR	406338	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3941					
ANR	406339	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3942					
ANR	406340	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3943					
ANR	406341	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3944					
ANR	406342	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3945					
ANR	406343	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3946					
ANR	406344	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3947					
ANR	406345	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3948					
ANR	406346	Identifier	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386	3949					
ANR	406347	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3950					
ANR	406348	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3951					
ANR	406349	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3952					
ANR	406350	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3953					
ANR	406351	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3954					
ANR	406352	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3955					
ANR	406353	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3956					
ANR	406354	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3957					
ANR	406355	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3958					
ANR	406356	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3959					
ANR	406357	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3960					
ANR	406358	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3961					
ANR	406359	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3962					
ANR	406360	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3963					
ANR	406361	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3964					
ANR	406362	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3965					
ANR	406363	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3966					
ANR	406364	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3967					
ANR	406365	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3968					
ANR	406366	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3969					
ANR	406367	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3970					
ANR	406368	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3971					
ANR	406369	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3972					
ANR	406370	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3973					
ANR	406371	Identifier	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386	3974					
ANR	406372	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3975					
ANR	406373	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3976					
ANR	406374	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3977					
ANR	406375	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3978					
ANR	406376	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3979					
ANR	406377	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3980					
ANR	406378	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3981					
ANR	406379	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3982					
ANR	406380	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3983					
ANR	406381	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3984					
ANR	406382	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3985					
ANR	406383	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3986					
ANR	406384	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3987					
ANR	406385	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3988					
ANR	406386	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3989					
ANR	406387	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3990					
ANR	406388	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3991					
ANR	406389	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3992					
ANR	406390	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3993					
ANR	406391	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3994					
ANR	406392	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3995					
ANR	406393	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3996					
ANR	406394	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3997					
ANR	406395	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3998					
ANR	406396	Identifier	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386	3999					
ANR	406397	Identifier	ZEND_YIELD_SPEC_CONST_CONST_HANDLER		402386	4000					
ANR	406398	Identifier	ZEND_YIELD_SPEC_CONST_TMP_HANDLER		402386	4001					
ANR	406399	Identifier	ZEND_YIELD_SPEC_CONST_VAR_HANDLER		402386	4002					
ANR	406400	Identifier	ZEND_YIELD_SPEC_CONST_UNUSED_HANDLER		402386	4003					
ANR	406401	Identifier	ZEND_YIELD_SPEC_CONST_CV_HANDLER		402386	4004					
ANR	406402	Identifier	ZEND_YIELD_SPEC_TMP_CONST_HANDLER		402386	4005					
ANR	406403	Identifier	ZEND_YIELD_SPEC_TMP_TMP_HANDLER		402386	4006					
ANR	406404	Identifier	ZEND_YIELD_SPEC_TMP_VAR_HANDLER		402386	4007					
ANR	406405	Identifier	ZEND_YIELD_SPEC_TMP_UNUSED_HANDLER		402386	4008					
ANR	406406	Identifier	ZEND_YIELD_SPEC_TMP_CV_HANDLER		402386	4009					
ANR	406407	Identifier	ZEND_YIELD_SPEC_VAR_CONST_HANDLER		402386	4010					
ANR	406408	Identifier	ZEND_YIELD_SPEC_VAR_TMP_HANDLER		402386	4011					
ANR	406409	Identifier	ZEND_YIELD_SPEC_VAR_VAR_HANDLER		402386	4012					
ANR	406410	Identifier	ZEND_YIELD_SPEC_VAR_UNUSED_HANDLER		402386	4013					
ANR	406411	Identifier	ZEND_YIELD_SPEC_VAR_CV_HANDLER		402386	4014					
ANR	406412	Identifier	ZEND_YIELD_SPEC_UNUSED_CONST_HANDLER		402386	4015					
ANR	406413	Identifier	ZEND_YIELD_SPEC_UNUSED_TMP_HANDLER		402386	4016					
ANR	406414	Identifier	ZEND_YIELD_SPEC_UNUSED_VAR_HANDLER		402386	4017					
ANR	406415	Identifier	ZEND_YIELD_SPEC_UNUSED_UNUSED_HANDLER		402386	4018					
ANR	406416	Identifier	ZEND_YIELD_SPEC_UNUSED_CV_HANDLER		402386	4019					
ANR	406417	Identifier	ZEND_YIELD_SPEC_CV_CONST_HANDLER		402386	4020					
ANR	406418	Identifier	ZEND_YIELD_SPEC_CV_TMP_HANDLER		402386	4021					
ANR	406419	Identifier	ZEND_YIELD_SPEC_CV_VAR_HANDLER		402386	4022					
ANR	406420	Identifier	ZEND_YIELD_SPEC_CV_UNUSED_HANDLER		402386	4023					
ANR	406421	Identifier	ZEND_YIELD_SPEC_CV_CV_HANDLER		402386	4024					
ANR	406422	Identifier	ZEND_GENERATOR_RETURN_SPEC_CONST_HANDLER		402386	4025					
ANR	406423	Identifier	ZEND_GENERATOR_RETURN_SPEC_CONST_HANDLER		402386	4026					
ANR	406424	Identifier	ZEND_GENERATOR_RETURN_SPEC_CONST_HANDLER		402386	4027					
ANR	406425	Identifier	ZEND_GENERATOR_RETURN_SPEC_CONST_HANDLER		402386	4028					
ANR	406426	Identifier	ZEND_GENERATOR_RETURN_SPEC_CONST_HANDLER		402386	4029					
ANR	406427	Identifier	ZEND_GENERATOR_RETURN_SPEC_TMP_HANDLER		402386	4030					
ANR	406428	Identifier	ZEND_GENERATOR_RETURN_SPEC_TMP_HANDLER		402386	4031					
ANR	406429	Identifier	ZEND_GENERATOR_RETURN_SPEC_TMP_HANDLER		402386	4032					
ANR	406430	Identifier	ZEND_GENERATOR_RETURN_SPEC_TMP_HANDLER		402386	4033					
ANR	406431	Identifier	ZEND_GENERATOR_RETURN_SPEC_TMP_HANDLER		402386	4034					
ANR	406432	Identifier	ZEND_GENERATOR_RETURN_SPEC_VAR_HANDLER		402386	4035					
ANR	406433	Identifier	ZEND_GENERATOR_RETURN_SPEC_VAR_HANDLER		402386	4036					
ANR	406434	Identifier	ZEND_GENERATOR_RETURN_SPEC_VAR_HANDLER		402386	4037					
ANR	406435	Identifier	ZEND_GENERATOR_RETURN_SPEC_VAR_HANDLER		402386	4038					
ANR	406436	Identifier	ZEND_GENERATOR_RETURN_SPEC_VAR_HANDLER		402386	4039					
ANR	406437	Identifier	ZEND_NULL_HANDLER		402386	4040					
ANR	406438	Identifier	ZEND_NULL_HANDLER		402386	4041					
ANR	406439	Identifier	ZEND_NULL_HANDLER		402386	4042					
ANR	406440	Identifier	ZEND_NULL_HANDLER		402386	4043					
ANR	406441	Identifier	ZEND_NULL_HANDLER		402386	4044					
ANR	406442	Identifier	ZEND_GENERATOR_RETURN_SPEC_CV_HANDLER		402386	4045					
ANR	406443	Identifier	ZEND_GENERATOR_RETURN_SPEC_CV_HANDLER		402386	4046					
ANR	406444	Identifier	ZEND_GENERATOR_RETURN_SPEC_CV_HANDLER		402386	4047					
ANR	406445	Identifier	ZEND_GENERATOR_RETURN_SPEC_CV_HANDLER		402386	4048					
ANR	406446	Identifier	ZEND_GENERATOR_RETURN_SPEC_CV_HANDLER		402386	4049					
ANR	406447	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4050					
ANR	406448	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4051					
ANR	406449	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4052					
ANR	406450	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4053					
ANR	406451	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4054					
ANR	406452	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4055					
ANR	406453	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4056					
ANR	406454	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4057					
ANR	406455	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4058					
ANR	406456	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4059					
ANR	406457	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4060					
ANR	406458	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4061					
ANR	406459	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4062					
ANR	406460	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4063					
ANR	406461	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4064					
ANR	406462	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4065					
ANR	406463	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4066					
ANR	406464	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4067					
ANR	406465	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4068					
ANR	406466	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4069					
ANR	406467	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4070					
ANR	406468	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4071					
ANR	406469	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4072					
ANR	406470	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4073					
ANR	406471	Identifier	ZEND_FAST_CALL_SPEC_HANDLER		402386	4074					
ANR	406472	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4075					
ANR	406473	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4076					
ANR	406474	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4077					
ANR	406475	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4078					
ANR	406476	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4079					
ANR	406477	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4080					
ANR	406478	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4081					
ANR	406479	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4082					
ANR	406480	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4083					
ANR	406481	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4084					
ANR	406482	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4085					
ANR	406483	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4086					
ANR	406484	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4087					
ANR	406485	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4088					
ANR	406486	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4089					
ANR	406487	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4090					
ANR	406488	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4091					
ANR	406489	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4092					
ANR	406490	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4093					
ANR	406491	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4094					
ANR	406492	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4095					
ANR	406493	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4096					
ANR	406494	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4097					
ANR	406495	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4098					
ANR	406496	Identifier	ZEND_FAST_RET_SPEC_HANDLER		402386	4099					
ANR	406497	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4100					
ANR	406498	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4101					
ANR	406499	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4102					
ANR	406500	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4103					
ANR	406501	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4104					
ANR	406502	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4105					
ANR	406503	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4106					
ANR	406504	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4107					
ANR	406505	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4108					
ANR	406506	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4109					
ANR	406507	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4110					
ANR	406508	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4111					
ANR	406509	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4112					
ANR	406510	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4113					
ANR	406511	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4114					
ANR	406512	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4115					
ANR	406513	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4116					
ANR	406514	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4117					
ANR	406515	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4118					
ANR	406516	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4119					
ANR	406517	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4120					
ANR	406518	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4121					
ANR	406519	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4122					
ANR	406520	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4123					
ANR	406521	Identifier	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386	4124					
ANR	406522	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4125					
ANR	406523	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4126					
ANR	406524	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4127					
ANR	406525	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4128					
ANR	406526	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4129					
ANR	406527	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4130					
ANR	406528	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4131					
ANR	406529	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4132					
ANR	406530	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4133					
ANR	406531	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4134					
ANR	406532	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4135					
ANR	406533	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4136					
ANR	406534	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4137					
ANR	406535	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4138					
ANR	406536	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4139					
ANR	406537	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4140					
ANR	406538	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4141					
ANR	406539	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4142					
ANR	406540	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4143					
ANR	406541	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4144					
ANR	406542	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4145					
ANR	406543	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4146					
ANR	406544	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4147					
ANR	406545	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4148					
ANR	406546	Identifier	ZEND_SEND_UNPACK_SPEC_HANDLER		402386	4149					
ANR	406547	Identifier	ZEND_POW_SPEC_CONST_CONST_HANDLER		402386	4150					
ANR	406548	Identifier	ZEND_POW_SPEC_CONST_TMPVAR_HANDLER		402386	4151					
ANR	406549	Identifier	ZEND_POW_SPEC_CONST_TMPVAR_HANDLER		402386	4152					
ANR	406550	Identifier	ZEND_NULL_HANDLER		402386	4153					
ANR	406551	Identifier	ZEND_POW_SPEC_CONST_CV_HANDLER		402386	4154					
ANR	406552	Identifier	ZEND_POW_SPEC_TMPVAR_CONST_HANDLER		402386	4155					
ANR	406553	Identifier	ZEND_POW_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4156					
ANR	406554	Identifier	ZEND_POW_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4157					
ANR	406555	Identifier	ZEND_NULL_HANDLER		402386	4158					
ANR	406556	Identifier	ZEND_POW_SPEC_TMPVAR_CV_HANDLER		402386	4159					
ANR	406557	Identifier	ZEND_POW_SPEC_TMPVAR_CONST_HANDLER		402386	4160					
ANR	406558	Identifier	ZEND_POW_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4161					
ANR	406559	Identifier	ZEND_POW_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4162					
ANR	406560	Identifier	ZEND_NULL_HANDLER		402386	4163					
ANR	406561	Identifier	ZEND_POW_SPEC_TMPVAR_CV_HANDLER		402386	4164					
ANR	406562	Identifier	ZEND_NULL_HANDLER		402386	4165					
ANR	406563	Identifier	ZEND_NULL_HANDLER		402386	4166					
ANR	406564	Identifier	ZEND_NULL_HANDLER		402386	4167					
ANR	406565	Identifier	ZEND_NULL_HANDLER		402386	4168					
ANR	406566	Identifier	ZEND_NULL_HANDLER		402386	4169					
ANR	406567	Identifier	ZEND_POW_SPEC_CV_CONST_HANDLER		402386	4170					
ANR	406568	Identifier	ZEND_POW_SPEC_CV_TMPVAR_HANDLER		402386	4171					
ANR	406569	Identifier	ZEND_POW_SPEC_CV_TMPVAR_HANDLER		402386	4172					
ANR	406570	Identifier	ZEND_NULL_HANDLER		402386	4173					
ANR	406571	Identifier	ZEND_POW_SPEC_CV_CV_HANDLER		402386	4174					
ANR	406572	Identifier	ZEND_NULL_HANDLER		402386	4175					
ANR	406573	Identifier	ZEND_NULL_HANDLER		402386	4176					
ANR	406574	Identifier	ZEND_NULL_HANDLER		402386	4177					
ANR	406575	Identifier	ZEND_NULL_HANDLER		402386	4178					
ANR	406576	Identifier	ZEND_NULL_HANDLER		402386	4179					
ANR	406577	Identifier	ZEND_NULL_HANDLER		402386	4180					
ANR	406578	Identifier	ZEND_NULL_HANDLER		402386	4181					
ANR	406579	Identifier	ZEND_NULL_HANDLER		402386	4182					
ANR	406580	Identifier	ZEND_NULL_HANDLER		402386	4183					
ANR	406581	Identifier	ZEND_NULL_HANDLER		402386	4184					
ANR	406582	Identifier	ZEND_ASSIGN_POW_SPEC_VAR_CONST_HANDLER		402386	4185					
ANR	406583	Identifier	ZEND_ASSIGN_POW_SPEC_VAR_TMPVAR_HANDLER		402386	4186					
ANR	406584	Identifier	ZEND_ASSIGN_POW_SPEC_VAR_TMPVAR_HANDLER		402386	4187					
ANR	406585	Identifier	ZEND_ASSIGN_POW_SPEC_VAR_UNUSED_HANDLER		402386	4188					
ANR	406586	Identifier	ZEND_ASSIGN_POW_SPEC_VAR_CV_HANDLER		402386	4189					
ANR	406587	Identifier	ZEND_ASSIGN_POW_SPEC_UNUSED_CONST_HANDLER		402386	4190					
ANR	406588	Identifier	ZEND_ASSIGN_POW_SPEC_UNUSED_TMPVAR_HANDLER		402386	4191					
ANR	406589	Identifier	ZEND_ASSIGN_POW_SPEC_UNUSED_TMPVAR_HANDLER		402386	4192					
ANR	406590	Identifier	ZEND_ASSIGN_POW_SPEC_UNUSED_UNUSED_HANDLER		402386	4193					
ANR	406591	Identifier	ZEND_ASSIGN_POW_SPEC_UNUSED_CV_HANDLER		402386	4194					
ANR	406592	Identifier	ZEND_ASSIGN_POW_SPEC_CV_CONST_HANDLER		402386	4195					
ANR	406593	Identifier	ZEND_ASSIGN_POW_SPEC_CV_TMPVAR_HANDLER		402386	4196					
ANR	406594	Identifier	ZEND_ASSIGN_POW_SPEC_CV_TMPVAR_HANDLER		402386	4197					
ANR	406595	Identifier	ZEND_ASSIGN_POW_SPEC_CV_UNUSED_HANDLER		402386	4198					
ANR	406596	Identifier	ZEND_ASSIGN_POW_SPEC_CV_CV_HANDLER		402386	4199					
ANR	406597	Identifier	ZEND_NULL_HANDLER		402386	4200					
ANR	406598	Identifier	ZEND_NULL_HANDLER		402386	4201					
ANR	406599	Identifier	ZEND_NULL_HANDLER		402386	4202					
ANR	406600	Identifier	ZEND_NULL_HANDLER		402386	4203					
ANR	406601	Identifier	ZEND_NULL_HANDLER		402386	4204					
ANR	406602	Identifier	ZEND_NULL_HANDLER		402386	4205					
ANR	406603	Identifier	ZEND_NULL_HANDLER		402386	4206					
ANR	406604	Identifier	ZEND_NULL_HANDLER		402386	4207					
ANR	406605	Identifier	ZEND_NULL_HANDLER		402386	4208					
ANR	406606	Identifier	ZEND_NULL_HANDLER		402386	4209					
ANR	406607	Identifier	ZEND_NULL_HANDLER		402386	4210					
ANR	406608	Identifier	ZEND_NULL_HANDLER		402386	4211					
ANR	406609	Identifier	ZEND_NULL_HANDLER		402386	4212					
ANR	406610	Identifier	ZEND_NULL_HANDLER		402386	4213					
ANR	406611	Identifier	ZEND_NULL_HANDLER		402386	4214					
ANR	406612	Identifier	ZEND_NULL_HANDLER		402386	4215					
ANR	406613	Identifier	ZEND_NULL_HANDLER		402386	4216					
ANR	406614	Identifier	ZEND_NULL_HANDLER		402386	4217					
ANR	406615	Identifier	ZEND_NULL_HANDLER		402386	4218					
ANR	406616	Identifier	ZEND_NULL_HANDLER		402386	4219					
ANR	406617	Identifier	ZEND_BIND_GLOBAL_SPEC_CV_CONST_HANDLER		402386	4220					
ANR	406618	Identifier	ZEND_NULL_HANDLER		402386	4221					
ANR	406619	Identifier	ZEND_NULL_HANDLER		402386	4222					
ANR	406620	Identifier	ZEND_NULL_HANDLER		402386	4223					
ANR	406621	Identifier	ZEND_NULL_HANDLER		402386	4224					
ANR	406622	Identifier	ZEND_COALESCE_SPEC_CONST_HANDLER		402386	4225					
ANR	406623	Identifier	ZEND_COALESCE_SPEC_CONST_HANDLER		402386	4226					
ANR	406624	Identifier	ZEND_COALESCE_SPEC_CONST_HANDLER		402386	4227					
ANR	406625	Identifier	ZEND_COALESCE_SPEC_CONST_HANDLER		402386	4228					
ANR	406626	Identifier	ZEND_COALESCE_SPEC_CONST_HANDLER		402386	4229					
ANR	406627	Identifier	ZEND_COALESCE_SPEC_TMP_HANDLER		402386	4230					
ANR	406628	Identifier	ZEND_COALESCE_SPEC_TMP_HANDLER		402386	4231					
ANR	406629	Identifier	ZEND_COALESCE_SPEC_TMP_HANDLER		402386	4232					
ANR	406630	Identifier	ZEND_COALESCE_SPEC_TMP_HANDLER		402386	4233					
ANR	406631	Identifier	ZEND_COALESCE_SPEC_TMP_HANDLER		402386	4234					
ANR	406632	Identifier	ZEND_COALESCE_SPEC_VAR_HANDLER		402386	4235					
ANR	406633	Identifier	ZEND_COALESCE_SPEC_VAR_HANDLER		402386	4236					
ANR	406634	Identifier	ZEND_COALESCE_SPEC_VAR_HANDLER		402386	4237					
ANR	406635	Identifier	ZEND_COALESCE_SPEC_VAR_HANDLER		402386	4238					
ANR	406636	Identifier	ZEND_COALESCE_SPEC_VAR_HANDLER		402386	4239					
ANR	406637	Identifier	ZEND_NULL_HANDLER		402386	4240					
ANR	406638	Identifier	ZEND_NULL_HANDLER		402386	4241					
ANR	406639	Identifier	ZEND_NULL_HANDLER		402386	4242					
ANR	406640	Identifier	ZEND_NULL_HANDLER		402386	4243					
ANR	406641	Identifier	ZEND_NULL_HANDLER		402386	4244					
ANR	406642	Identifier	ZEND_COALESCE_SPEC_CV_HANDLER		402386	4245					
ANR	406643	Identifier	ZEND_COALESCE_SPEC_CV_HANDLER		402386	4246					
ANR	406644	Identifier	ZEND_COALESCE_SPEC_CV_HANDLER		402386	4247					
ANR	406645	Identifier	ZEND_COALESCE_SPEC_CV_HANDLER		402386	4248					
ANR	406646	Identifier	ZEND_COALESCE_SPEC_CV_HANDLER		402386	4249					
ANR	406647	Identifier	ZEND_SPACESHIP_SPEC_CONST_CONST_HANDLER		402386	4250					
ANR	406648	Identifier	ZEND_SPACESHIP_SPEC_CONST_TMPVAR_HANDLER		402386	4251					
ANR	406649	Identifier	ZEND_SPACESHIP_SPEC_CONST_TMPVAR_HANDLER		402386	4252					
ANR	406650	Identifier	ZEND_NULL_HANDLER		402386	4253					
ANR	406651	Identifier	ZEND_SPACESHIP_SPEC_CONST_CV_HANDLER		402386	4254					
ANR	406652	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_CONST_HANDLER		402386	4255					
ANR	406653	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4256					
ANR	406654	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4257					
ANR	406655	Identifier	ZEND_NULL_HANDLER		402386	4258					
ANR	406656	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_CV_HANDLER		402386	4259					
ANR	406657	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_CONST_HANDLER		402386	4260					
ANR	406658	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4261					
ANR	406659	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_TMPVAR_HANDLER		402386	4262					
ANR	406660	Identifier	ZEND_NULL_HANDLER		402386	4263					
ANR	406661	Identifier	ZEND_SPACESHIP_SPEC_TMPVAR_CV_HANDLER		402386	4264					
ANR	406662	Identifier	ZEND_NULL_HANDLER		402386	4265					
ANR	406663	Identifier	ZEND_NULL_HANDLER		402386	4266					
ANR	406664	Identifier	ZEND_NULL_HANDLER		402386	4267					
ANR	406665	Identifier	ZEND_NULL_HANDLER		402386	4268					
ANR	406666	Identifier	ZEND_NULL_HANDLER		402386	4269					
ANR	406667	Identifier	ZEND_SPACESHIP_SPEC_CV_CONST_HANDLER		402386	4270					
ANR	406668	Identifier	ZEND_SPACESHIP_SPEC_CV_TMPVAR_HANDLER		402386	4271					
ANR	406669	Identifier	ZEND_SPACESHIP_SPEC_CV_TMPVAR_HANDLER		402386	4272					
ANR	406670	Identifier	ZEND_NULL_HANDLER		402386	4273					
ANR	406671	Identifier	ZEND_SPACESHIP_SPEC_CV_CV_HANDLER		402386	4274					
ANR	406672	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4275					
ANR	406673	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4276					
ANR	406674	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4277					
ANR	406675	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4278					
ANR	406676	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4279					
ANR	406677	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4280					
ANR	406678	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4281					
ANR	406679	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4282					
ANR	406680	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4283					
ANR	406681	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4284					
ANR	406682	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4285					
ANR	406683	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4286					
ANR	406684	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4287					
ANR	406685	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4288					
ANR	406686	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4289					
ANR	406687	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4290					
ANR	406688	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4291					
ANR	406689	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4292					
ANR	406690	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4293					
ANR	406691	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4294					
ANR	406692	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4295					
ANR	406693	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4296					
ANR	406694	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4297					
ANR	406695	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4298					
ANR	406696	Identifier	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386	4299					
ANR	406697	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4300					
ANR	406698	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4301					
ANR	406699	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4302					
ANR	406700	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4303					
ANR	406701	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4304					
ANR	406702	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4305					
ANR	406703	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4306					
ANR	406704	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4307					
ANR	406705	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4308					
ANR	406706	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4309					
ANR	406707	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4310					
ANR	406708	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4311					
ANR	406709	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4312					
ANR	406710	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4313					
ANR	406711	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4314					
ANR	406712	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4315					
ANR	406713	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4316					
ANR	406714	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4317					
ANR	406715	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4318					
ANR	406716	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4319					
ANR	406717	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4320					
ANR	406718	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4321					
ANR	406719	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4322					
ANR	406720	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4323					
ANR	406721	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386	4324					
ANR	406722	Identifier	ZEND_NULL_HANDLER		402386	4325					
ANR	406723	ExpressionStatement	zend_opcode_handlers = labels	49696:2:1580788:1580817	402386	2	True				
ANR	406724	AssignmentExpression	zend_opcode_handlers = labels		402386	0		=			
ANR	406725	Identifier	zend_opcode_handlers		402386	0					
ANR	406726	Identifier	labels		402386	1					
ANR	406727	ReturnType	void		402386	1					
ANR	406728	Identifier	zend_init_opcodes_handlers		402386	2					
ANR	406729	ParameterList			402386	3					
ANR	406730	CFGEntryNode	ENTRY		402386		True				
ANR	406731	CFGExitNode	EXIT		402386		True				
ANR	406732	Symbol	ZEND_FETCH_UNSET_SPEC_CONST_CONST_HANDLER		402386						
ANR	406733	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_CV_HANDLER		402386						
ANR	406734	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CV_CONST_HANDLER		402386						
ANR	406735	Symbol	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406736	Symbol	ZEND_GENERATOR_RETURN_SPEC_CONST_HANDLER		402386						
ANR	406737	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CV_TMP_HANDLER		402386						
ANR	406738	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_VAR_CV_HANDLER		402386						
ANR	406739	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_TMP_HANDLER		402386						
ANR	406740	Symbol	ZEND_ASSIGN_REF_SPEC_CV_VAR_HANDLER		402386						
ANR	406741	Symbol	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406742	Symbol	ZEND_POST_DEC_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	406743	Symbol	ZEND_FETCH_UNSET_SPEC_CV_UNUSED_HANDLER		402386						
ANR	406744	Symbol	ZEND_FETCH_DIM_R_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	406745	Symbol	ZEND_SUB_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406746	Symbol	ZEND_FETCH_DIM_W_SPEC_CV_CONST_HANDLER		402386						
ANR	406747	Symbol	ZEND_UNSET_VAR_SPEC_CONST_CONST_HANDLER		402386						
ANR	406748	Symbol	ZEND_CONCAT_SPEC_CV_CV_HANDLER		402386						
ANR	406749	Symbol	ZEND_ASSIGN_SUB_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	406750	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406751	Symbol	ZEND_ASSIGN_MUL_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	406752	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CV_CV_HANDLER		402386						
ANR	406753	Symbol	ZEND_FETCH_DIM_IS_SPEC_CONST_CONST_HANDLER		402386						
ANR	406754	Symbol	ZEND_PRE_INC_OBJ_SPEC_VAR_CV_HANDLER		402386						
ANR	406755	Symbol	ZEND_ASSIGN_CONCAT_SPEC_CV_CONST_HANDLER		402386						
ANR	406756	Symbol	ZEND_ASSIGN_BW_OR_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406757	Symbol	ZEND_INIT_ARRAY_SPEC_TMP_UNUSED_HANDLER		402386						
ANR	406758	Symbol	ZEND_ASSIGN_SPEC_CV_TMP_HANDLER		402386						
ANR	406759	Symbol	ZEND_PRE_INC_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	406760	Symbol	ZEND_FAST_CONCAT_SPEC_CONST_CV_HANDLER		402386						
ANR	406761	Symbol	ZEND_INIT_METHOD_CALL_SPEC_UNUSED_CV_HANDLER		402386						
ANR	406762	Symbol	ZEND_ASSIGN_MOD_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	406763	Symbol	ZEND_FETCH_OBJ_R_SPEC_VAR_CV_HANDLER		402386						
ANR	406764	Symbol	ZEND_BOOL_XOR_SPEC_CONST_CV_HANDLER		402386						
ANR	406765	Symbol	ZEND_POST_DEC_OBJ_SPEC_VAR_CV_HANDLER		402386						
ANR	406766	Symbol	ZEND_ASSIGN_MOD_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	406767	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	406768	Symbol	ZEND_YIELD_SPEC_CONST_VAR_HANDLER		402386						
ANR	406769	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406770	Symbol	ZEND_RECV_SPEC_HANDLER		402386						
ANR	406771	Symbol	ZEND_COALESCE_SPEC_TMP_HANDLER		402386						
ANR	406772	Symbol	ZEND_FAST_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406773	Symbol	ZEND_UNSET_DIM_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	406774	Symbol	ZEND_FETCH_DIM_RW_SPEC_CV_UNUSED_HANDLER		402386						
ANR	406775	Symbol	ZEND_CLONE_SPEC_CV_HANDLER		402386						
ANR	406776	Symbol	ZEND_FETCH_LIST_SPEC_CV_CONST_HANDLER		402386						
ANR	406777	Symbol	ZEND_FETCH_CONSTANT_SPEC_VAR_CONST_HANDLER		402386						
ANR	406778	Symbol	ZEND_ASSIGN_BW_AND_SPEC_VAR_CV_HANDLER		402386						
ANR	406779	Symbol	ZEND_BW_XOR_SPEC_CV_CONST_HANDLER		402386						
ANR	406780	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	406781	Symbol	ZEND_STRLEN_SPEC_TMPVAR_HANDLER		402386						
ANR	406782	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406783	Symbol	ZEND_INIT_ARRAY_SPEC_TMP_CV_HANDLER		402386						
ANR	406784	Symbol	ZEND_RETURN_SPEC_TMP_HANDLER		402386						
ANR	406785	Symbol	ZEND_POST_INC_OBJ_SPEC_VAR_CV_HANDLER		402386						
ANR	406786	Symbol	ZEND_FE_RESET_RW_SPEC_TMP_HANDLER		402386						
ANR	406787	Symbol	ZEND_SEND_VAL_SPEC_CONST_HANDLER		402386						
ANR	406788	Symbol	ZEND_CASE_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406789	Symbol	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_CV_HANDLER		402386						
ANR	406790	Symbol	ZEND_PRE_DEC_SPEC_CV_HANDLER		402386						
ANR	406791	Symbol	ZEND_ASSIGN_SL_SPEC_VAR_CV_HANDLER		402386						
ANR	406792	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_CONST_HANDLER		402386						
ANR	406793	Symbol	ZEND_IS_IDENTICAL_SPEC_VAR_TMP_HANDLER		402386						
ANR	406794	Symbol	ZEND_YIELD_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	406795	Symbol	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406796	Symbol	ZEND_YIELD_SPEC_CONST_CV_HANDLER		402386						
ANR	406797	Symbol	ZEND_PRE_DEC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406798	Symbol	ZEND_IS_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406799	Symbol	ZEND_CONCAT_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406800	Symbol	ZEND_INIT_METHOD_CALL_SPEC_CONST_CONST_HANDLER		402386						
ANR	406801	Symbol	ZEND_EXIT_SPEC_UNUSED_HANDLER		402386						
ANR	406802	Symbol	ZEND_FETCH_DIM_RW_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	406803	Symbol	ZEND_FAST_CALL_SPEC_HANDLER		402386						
ANR	406804	Symbol	ZEND_BW_AND_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406805	Symbol	ZEND_ASSIGN_DIV_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	406806	Symbol	ZEND_DO_UCALL_SPEC_HANDLER		402386						
ANR	406807	Symbol	ZEND_RETURN_BY_REF_SPEC_CONST_HANDLER		402386						
ANR	406808	Symbol	ZEND_SEND_USER_SPEC_CV_HANDLER		402386						
ANR	406809	Symbol	ZEND_FETCH_OBJ_RW_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	406810	Symbol	ZEND_QM_ASSIGN_SPEC_TMP_HANDLER		402386						
ANR	406811	Symbol	ZEND_FE_RESET_R_SPEC_CV_HANDLER		402386						
ANR	406812	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	406813	Symbol	ZEND_MUL_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406814	Symbol	ZEND_POST_INC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	406815	Symbol	ZEND_FAST_CONCAT_SPEC_CONST_CONST_HANDLER		402386						
ANR	406816	Symbol	ZEND_POST_INC_SPEC_VAR_HANDLER		402386						
ANR	406817	Symbol	ZEND_POST_INC_SPEC_CV_HANDLER		402386						
ANR	406818	Symbol	ZEND_SEND_VAR_NO_REF_SPEC_VAR_HANDLER		402386						
ANR	406819	Symbol	ZEND_DIV_SPEC_CV_CV_HANDLER		402386						
ANR	406820	Symbol	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	406821	Symbol	ZEND_ASSIGN_BW_OR_SPEC_CV_CONST_HANDLER		402386						
ANR	406822	Symbol	ZEND_EXIT_SPEC_CV_HANDLER		402386						
ANR	406823	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_VAR_HANDLER		402386						
ANR	406824	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	406825	Symbol	ZEND_INIT_ARRAY_SPEC_TMP_TMPVAR_HANDLER		402386						
ANR	406826	Symbol	ZEND_IS_SMALLER_SPEC_CONST_CV_HANDLER		402386						
ANR	406827	Symbol	ZEND_ASSIGN_SUB_SPEC_VAR_CV_HANDLER		402386						
ANR	406828	Symbol	ZEND_ASSIGN_ADD_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406829	Symbol	ZEND_ASSIGN_DIV_SPEC_CV_CONST_HANDLER		402386						
ANR	406830	Symbol	ZEND_CASE_SPEC_CV_CV_HANDLER		402386						
ANR	406831	Symbol	ZEND_FE_FETCH_R_SPEC_VAR_HANDLER		402386						
ANR	406832	Symbol	ZEND_BW_OR_SPEC_CONST_CV_HANDLER		402386						
ANR	406833	Symbol	ZEND_FETCH_DIM_RW_SPEC_CV_CV_HANDLER		402386						
ANR	406834	Symbol	ZEND_INIT_DYNAMIC_CALL_SPEC_CV_HANDLER		402386						
ANR	406835	Symbol	ZEND_POW_SPEC_CONST_CONST_HANDLER		402386						
ANR	406836	Symbol	ZEND_SUB_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406837	Symbol	ZEND_MOD_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	406838	Symbol	ZEND_ASSIGN_SUB_SPEC_UNUSED_CV_HANDLER		402386						
ANR	406839	Symbol	ZEND_FETCH_CONSTANT_SPEC_CONST_CONST_HANDLER		402386						
ANR	406840	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_CV_HANDLER		402386						
ANR	406841	Symbol	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406842	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406843	Symbol	ZEND_SEND_UNPACK_SPEC_HANDLER		402386						
ANR	406844	Symbol	ZEND_INIT_METHOD_CALL_SPEC_CONST_CV_HANDLER		402386						
ANR	406845	Symbol	ZEND_SR_SPEC_CV_CV_HANDLER		402386						
ANR	406846	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_CONST_HANDLER		402386						
ANR	406847	Symbol	ZEND_SPACESHIP_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406848	Symbol	ZEND_DECLARE_ANON_CLASS_SPEC_HANDLER		402386						
ANR	406849	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_CV_UNUSED_HANDLER		402386						
ANR	406850	Symbol	ZEND_ASSIGN_DIV_SPEC_VAR_CV_HANDLER		402386						
ANR	406851	Symbol	ZEND_ADD_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406852	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CONST_CONST_HANDLER		402386						
ANR	406853	Symbol	ZEND_YIELD_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	406854	Symbol	ZEND_POW_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	406855	Symbol	ZEND_ROPE_END_SPEC_TMP_CONST_HANDLER		402386						
ANR	406856	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406857	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_CV_HANDLER		402386						
ANR	406858	Symbol	ZEND_PRE_INC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	406859	Symbol	ZEND_BW_NOT_SPEC_CV_HANDLER		402386						
ANR	406860	Symbol	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406861	Symbol	ZEND_ASSIGN_ADD_SPEC_CV_CONST_HANDLER		402386						
ANR	406862	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_VAR_HANDLER		402386						
ANR	406863	Symbol	ZEND_MOD_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406864	Symbol	ZEND_ASSIGN_MOD_SPEC_VAR_CV_HANDLER		402386						
ANR	406865	Symbol	ZEND_IS_IDENTICAL_SPEC_CV_TMP_HANDLER		402386						
ANR	406866	Symbol	ZEND_SR_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406867	Symbol	ZEND_BOOL_XOR_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406868	Symbol	ZEND_JMPNZ_SPEC_TMPVAR_HANDLER		402386						
ANR	406869	Symbol	ZEND_ASSIGN_DIM_SPEC_VAR_CV_HANDLER		402386						
ANR	406870	Symbol	ZEND_FETCH_DIM_RW_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406871	Symbol	ZEND_BW_OR_SPEC_CONST_CONST_HANDLER		402386						
ANR	406872	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_UNUSED_HANDLER		402386						
ANR	406873	Symbol	ZEND_SEND_REF_SPEC_CV_HANDLER		402386						
ANR	406874	Symbol	ZEND_ASSIGN_DIV_SPEC_CV_CV_HANDLER		402386						
ANR	406875	Symbol	ZEND_FETCH_W_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	406876	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_CV_HANDLER		402386						
ANR	406877	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CONST_CV_HANDLER		402386						
ANR	406878	Symbol	ZEND_FETCH_UNSET_SPEC_CONST_VAR_HANDLER		402386						
ANR	406879	Symbol	ZEND_CAST_SPEC_TMP_HANDLER		402386						
ANR	406880	Symbol	ZEND_FETCH_OBJ_R_SPEC_TMP_CONST_HANDLER		402386						
ANR	406881	Symbol	ZEND_ADD_SPEC_CV_CONST_HANDLER		402386						
ANR	406882	Symbol	ZEND_ASSIGN_MUL_SPEC_VAR_CV_HANDLER		402386						
ANR	406883	Symbol	ZEND_FETCH_RW_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406884	Symbol	ZEND_FAST_CONCAT_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406885	Symbol	ZEND_UNSET_DIM_SPEC_CV_CV_HANDLER		402386						
ANR	406886	Symbol	ZEND_INIT_USER_CALL_SPEC_CONST_CONST_HANDLER		402386						
ANR	406887	Symbol	ZEND_DIV_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	406888	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_CONST_HANDLER		402386						
ANR	406889	Symbol	ZEND_SR_SPEC_CONST_CV_HANDLER		402386						
ANR	406890	Symbol	ZEND_ASSIGN_MUL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	406891	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	406892	Symbol	ZEND_ASSIGN_BW_OR_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406893	Symbol	ZEND_ASSIGN_ADD_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	406894	Symbol	ZEND_NEW_SPEC_CONST_HANDLER		402386						
ANR	406895	Symbol	ZEND_ASSIGN_SL_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406896	Symbol	ZEND_FETCH_DIM_W_SPEC_CV_CV_HANDLER		402386						
ANR	406897	Symbol	ZEND_SEND_REF_SPEC_VAR_HANDLER		402386						
ANR	406898	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406899	Symbol	ZEND_YIELD_FROM_SPEC_TMP_HANDLER		402386						
ANR	406900	Symbol	ZEND_YIELD_SPEC_VAR_TMP_HANDLER		402386						
ANR	406901	Symbol	ZEND_ASSIGN_MUL_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	406902	Symbol	ZEND_BW_AND_SPEC_CONST_CV_HANDLER		402386						
ANR	406903	Symbol	ZEND_SL_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406904	Symbol	ZEND_IS_IDENTICAL_SPEC_VAR_CV_HANDLER		402386						
ANR	406905	Symbol	ZEND_FETCH_DIM_UNSET_SPEC_VAR_CV_HANDLER		402386						
ANR	406906	Symbol	ZEND_IS_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406907	Symbol	ZEND_JMPZ_EX_SPEC_TMPVAR_HANDLER		402386						
ANR	406908	Symbol	ZEND_FETCH_OBJ_R_SPEC_VAR_CONST_HANDLER		402386						
ANR	406909	Symbol	ZEND_YIELD_SPEC_CONST_TMP_HANDLER		402386						
ANR	406910	Symbol	ZEND_FETCH_CLASS_SPEC_TMPVAR_HANDLER		402386						
ANR	406911	Symbol	ZEND_ASSIGN_POW_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	406912	Symbol	ZEND_YIELD_SPEC_UNUSED_CV_HANDLER		402386						
ANR	406913	Symbol	ZEND_UNSET_VAR_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	406914	Symbol	ZEND_UNSET_DIM_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406915	Symbol	ZEND_ASSIGN_SPEC_CV_VAR_HANDLER		402386						
ANR	406916	Symbol	ZEND_CAST_SPEC_CONST_HANDLER		402386						
ANR	406917	Symbol	ZEND_COALESCE_SPEC_VAR_HANDLER		402386						
ANR	406918	Symbol	ZEND_MOD_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406919	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406920	Symbol	ZEND_CASE_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406921	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_CV_HANDLER		402386						
ANR	406922	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_CV_HANDLER		402386						
ANR	406923	Symbol	ZEND_ASSIGN_SUB_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	406924	Symbol	ZEND_FETCH_DIM_W_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406925	Symbol	ZEND_INIT_ARRAY_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	406926	Symbol	ZEND_BW_OR_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406927	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_CV_HANDLER		402386						
ANR	406928	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_CONST_HANDLER		402386						
ANR	406929	Symbol	ZEND_POST_DEC_OBJ_SPEC_VAR_CONST_HANDLER		402386						
ANR	406930	Symbol	ZEND_ADD_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	406931	Symbol	ZEND_BOOL_XOR_SPEC_CONST_CONST_HANDLER		402386						
ANR	406932	Symbol	ZEND_SEND_VAL_EX_SPEC_CONST_HANDLER		402386						
ANR	406933	Symbol	ZEND_FETCH_UNSET_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	406934	Symbol	ZEND_DIV_SPEC_CV_CONST_HANDLER		402386						
ANR	406935	Symbol	ZEND_INIT_METHOD_CALL_SPEC_CV_CONST_HANDLER		402386						
ANR	406936	Symbol	ZEND_SL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	406937	Symbol	ZEND_FETCH_W_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	406938	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406939	Symbol	ZEND_IS_IDENTICAL_SPEC_TMP_CV_HANDLER		402386						
ANR	406940	Symbol	ZEND_SL_SPEC_CV_CV_HANDLER		402386						
ANR	406941	Symbol	ZEND_POST_DEC_SPEC_VAR_HANDLER		402386						
ANR	406942	Symbol	ZEND_IS_IDENTICAL_SPEC_VAR_VAR_HANDLER		402386						
ANR	406943	Symbol	ZEND_ASSIGN_CONCAT_SPEC_VAR_CV_HANDLER		402386						
ANR	406944	Symbol	ZEND_FETCH_OBJ_W_SPEC_UNUSED_CV_HANDLER		402386						
ANR	406945	Symbol	ZEND_FETCH_DIM_RW_SPEC_VAR_CV_HANDLER		402386						
ANR	406946	Symbol	ZEND_IS_IDENTICAL_SPEC_TMP_CONST_HANDLER		402386						
ANR	406947	Symbol	ZEND_ASSIGN_OBJ_SPEC_VAR_CONST_HANDLER		402386						
ANR	406948	Symbol	ZEND_ASSIGN_DIM_SPEC_CV_CONST_HANDLER		402386						
ANR	406949	Symbol	ZEND_RETURN_SPEC_VAR_HANDLER		402386						
ANR	406950	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_CONST_VAR_HANDLER		402386						
ANR	406951	Symbol	ZEND_FE_RESET_RW_SPEC_VAR_HANDLER		402386						
ANR	406952	Symbol	ZEND_EXIT_SPEC_TMPVAR_HANDLER		402386						
ANR	406953	Symbol	ZEND_POW_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	406954	Symbol	ZEND_ROPE_ADD_SPEC_TMP_CV_HANDLER		402386						
ANR	406955	Symbol	ZEND_BW_AND_SPEC_CV_CONST_HANDLER		402386						
ANR	406956	Symbol	ZEND_SEPARATE_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406957	Symbol	ZEND_UNSET_OBJ_SPEC_VAR_CONST_HANDLER		402386						
ANR	406958	Symbol	ZEND_ASSIGN_MOD_SPEC_VAR_CONST_HANDLER		402386						
ANR	406959	Symbol	ZEND_FE_RESET_RW_SPEC_CONST_HANDLER		402386						
ANR	406960	Symbol	ZEND_ASSIGN_CONCAT_SPEC_CV_CV_HANDLER		402386						
ANR	406961	Symbol	ZEND_ASSIGN_BW_AND_SPEC_CV_UNUSED_HANDLER		402386						
ANR	406962	Symbol	ZEND_SEND_VAR_EX_SPEC_VAR_HANDLER		402386						
ANR	406963	Symbol	ZEND_ASSIGN_MOD_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	406964	Symbol	ZEND_BW_OR_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406965	Symbol	ZEND_ASSIGN_MOD_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406966	Symbol	ZEND_MOD_SPEC_CV_CV_HANDLER		402386						
ANR	406967	Symbol	ZEND_ASSIGN_SUB_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406968	Symbol	ZEND_ASSIGN_BW_AND_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406969	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_CV_VAR_HANDLER		402386						
ANR	406970	Symbol	ZEND_INIT_ARRAY_SPEC_CV_CONST_HANDLER		402386						
ANR	406971	Symbol	ZEND_ASSIGN_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	406972	Symbol	ZEND_ASSIGN_POW_SPEC_CV_CV_HANDLER		402386						
ANR	406973	Symbol	ZEND_JMPZ_SPEC_CONST_HANDLER		402386						
ANR	406974	Symbol	ZEND_FETCH_DIM_R_SPEC_CONST_CV_HANDLER		402386						
ANR	406975	Symbol	ZEND_IS_IDENTICAL_SPEC_VAR_CONST_HANDLER		402386						
ANR	406976	Symbol	ZEND_UNSET_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	406977	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	406978	Symbol	ZEND_ASSIGN_SL_SPEC_VAR_CONST_HANDLER		402386						
ANR	406979	Symbol	ZEND_SUB_SPEC_CONST_CONST_HANDLER		402386						
ANR	406980	Symbol	ZEND_ASSIGN_DIV_SPEC_VAR_CONST_HANDLER		402386						
ANR	406981	Symbol	ZEND_COALESCE_SPEC_CONST_HANDLER		402386						
ANR	406982	Symbol	ZEND_PRE_INC_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	406983	Symbol	ZEND_INIT_METHOD_CALL_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	406984	Symbol	ZEND_CONCAT_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	406985	Symbol	ZEND_QM_ASSIGN_SPEC_VAR_HANDLER		402386						
ANR	406986	Symbol	ZEND_FETCH_DIM_R_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	406987	Symbol	ZEND_DIV_SPEC_CONST_CV_HANDLER		402386						
ANR	406988	Symbol	ZEND_UNSET_DIM_SPEC_VAR_CV_HANDLER		402386						
ANR	406989	Symbol	ZEND_INIT_ARRAY_SPEC_TMP_CONST_HANDLER		402386						
ANR	406990	Symbol	ZEND_ASSIGN_SPEC_VAR_CV_HANDLER		402386						
ANR	406991	Symbol	ZEND_FETCH_OBJ_W_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	406992	Symbol	ZEND_ADD_SPEC_CV_CV_HANDLER		402386						
ANR	406993	Symbol	ZEND_CAST_SPEC_VAR_HANDLER		402386						
ANR	406994	Symbol	ZEND_ASSIGN_SR_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	406995	Symbol	ZEND_JMPZ_EX_SPEC_CONST_HANDLER		402386						
ANR	406996	Symbol	ZEND_INIT_ARRAY_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	406997	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_CONST_VAR_HANDLER		402386						
ANR	406998	Symbol	ZEND_FE_RESET_R_SPEC_VAR_HANDLER		402386						
ANR	406999	Symbol	ZEND_UNSET_VAR_SPEC_CV_CONST_HANDLER		402386						
ANR	407000	Symbol	ZEND_FE_RESET_R_SPEC_CONST_HANDLER		402386						
ANR	407001	Symbol	ZEND_ASSIGN_DIV_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407002	Symbol	ZEND_FETCH_RW_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	407003	Symbol	ZEND_PRE_INC_SPEC_CV_HANDLER		402386						
ANR	407004	Symbol	ZEND_DIV_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407005	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_CV_HANDLER		402386						
ANR	407006	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407007	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_CONST_CONST_HANDLER		402386						
ANR	407008	Symbol	labels		402386						
ANR	407009	Symbol	ZEND_ASSIGN_ADD_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407010	Symbol	ZEND_ASSIGN_ADD_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407011	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407012	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_CONST_HANDLER		402386						
ANR	407013	Symbol	ZEND_ECHO_SPEC_CV_HANDLER		402386						
ANR	407014	Symbol	ZEND_CLONE_SPEC_UNUSED_HANDLER		402386						
ANR	407015	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_CONST_HANDLER		402386						
ANR	407016	Symbol	ZEND_ASSIGN_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407017	Symbol	ZEND_FETCH_UNSET_SPEC_CV_CONST_HANDLER		402386						
ANR	407018	Symbol	ZEND_ADD_INTERFACE_SPEC_CONST_HANDLER		402386						
ANR	407019	Symbol	ZEND_ASSIGN_REF_SPEC_VAR_VAR_HANDLER		402386						
ANR	407020	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407021	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407022	Symbol	ZEND_FETCH_W_SPEC_CV_CONST_HANDLER		402386						
ANR	407023	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407024	Symbol	ZEND_FETCH_IS_SPEC_CV_CONST_HANDLER		402386						
ANR	407025	Symbol	ZEND_FETCH_OBJ_R_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407026	Symbol	ZEND_VERIFY_RETURN_TYPE_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407027	Symbol	ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER		402386						
ANR	407028	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	407029	Symbol	ZEND_ASSIGN_SPEC_VAR_TMP_HANDLER		402386						
ANR	407030	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407031	Symbol	ZEND_ASSIGN_DIV_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407032	Symbol	ZEND_ASSIGN_CONCAT_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407033	Symbol	ZEND_FETCH_W_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407034	Symbol	ZEND_BW_OR_SPEC_CV_CONST_HANDLER		402386						
ANR	407035	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407036	Symbol	ZEND_ASSIGN_SUB_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407037	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407038	Symbol	ZEND_PRE_DEC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407039	Symbol	ZEND_FETCH_OBJ_IS_SPEC_CONST_CONST_HANDLER		402386						
ANR	407040	Symbol	ZEND_EXT_NOP_SPEC_HANDLER		402386						
ANR	407041	Symbol	ZEND_BOOL_XOR_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407042	Symbol	ZEND_DECLARE_CONST_SPEC_CONST_CONST_HANDLER		402386						
ANR	407043	Symbol	ZEND_SUB_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407044	Symbol	ZEND_SUB_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407045	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407046	Symbol	ZEND_CONCAT_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407047	Symbol	ZEND_IS_IDENTICAL_SPEC_CV_CONST_HANDLER		402386						
ANR	407048	Symbol	ZEND_ASSIGN_SR_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407049	Symbol	ZEND_YIELD_SPEC_UNUSED_VAR_HANDLER		402386						
ANR	407050	Symbol	ZEND_CLONE_SPEC_CONST_HANDLER		402386						
ANR	407051	Symbol	ZEND_FETCH_R_SPEC_CV_CONST_HANDLER		402386						
ANR	407052	Symbol	ZEND_FETCH_CLASS_SPEC_UNUSED_HANDLER		402386						
ANR	407053	Symbol	ZEND_ASSIGN_SR_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407054	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_CV_CONST_HANDLER		402386						
ANR	407055	Symbol	ZEND_ASSIGN_DIV_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407056	Symbol	ZEND_FETCH_OBJ_W_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407057	Symbol	ZEND_ASSIGN_SR_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407058	Symbol	ZEND_FETCH_OBJ_RW_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407059	Symbol	ZEND_INIT_ARRAY_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407060	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407061	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407062	Symbol	ZEND_PRE_DEC_OBJ_SPEC_VAR_CONST_HANDLER		402386						
ANR	407063	Symbol	ZEND_SEND_VAR_EX_SPEC_CV_HANDLER		402386						
ANR	407064	Symbol	ZEND_ADD_TRAIT_SPEC_HANDLER		402386						
ANR	407065	Symbol	ZEND_ASSIGN_BW_OR_SPEC_VAR_CONST_HANDLER		402386						
ANR	407066	Symbol	ZEND_PRE_DEC_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	407067	Symbol	ZEND_BW_AND_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407068	Symbol	ZEND_ASSIGN_MUL_SPEC_CV_CV_HANDLER		402386						
ANR	407069	Symbol	ZEND_SL_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407070	Symbol	ZEND_ASSIGN_SUB_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407071	Symbol	ZEND_IS_IDENTICAL_SPEC_CV_VAR_HANDLER		402386						
ANR	407072	Symbol	ZEND_FETCH_OBJ_IS_SPEC_CV_CV_HANDLER		402386						
ANR	407073	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407074	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_TMP_CV_HANDLER		402386						
ANR	407075	Symbol	ZEND_ASSIGN_SUB_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407076	Symbol	ZEND_RETURN_SPEC_CV_HANDLER		402386						
ANR	407077	Symbol	ZEND_IS_SMALLER_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407078	Symbol	ZEND_ASSIGN_ADD_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407079	Symbol	ZEND_FETCH_IS_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407080	Symbol	ZEND_BW_OR_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407081	Symbol	ZEND_TICKS_SPEC_HANDLER		402386						
ANR	407082	Symbol	ZEND_ASSIGN_DIV_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407083	Symbol	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407084	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407085	Symbol	ZEND_IS_SMALLER_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407086	Symbol	ZEND_YIELD_SPEC_CV_TMP_HANDLER		402386						
ANR	407087	Symbol	ZEND_BW_AND_SPEC_CONST_CONST_HANDLER		402386						
ANR	407088	Symbol	ZEND_ASSIGN_SR_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407089	Symbol	ZEND_INIT_ARRAY_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407090	Symbol	ZEND_FETCH_OBJ_R_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407091	Symbol	ZEND_FETCH_OBJ_W_SPEC_VAR_CONST_HANDLER		402386						
ANR	407092	Symbol	ZEND_BW_XOR_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407093	Symbol	ZEND_FETCH_RW_SPEC_CV_VAR_HANDLER		402386						
ANR	407094	Symbol	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407095	Symbol	ZEND_EXT_FCALL_END_SPEC_HANDLER		402386						
ANR	407096	Symbol	ZEND_POW_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407097	Symbol	ZEND_ADD_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407098	Symbol	ZEND_ASSIGN_MOD_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407099	Symbol	ZEND_ROPE_END_SPEC_TMP_CV_HANDLER		402386						
ANR	407100	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407101	Symbol	ZEND_FETCH_OBJ_IS_SPEC_CONST_CV_HANDLER		402386						
ANR	407102	Symbol	ZEND_FETCH_R_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	407103	Symbol	ZEND_FETCH_DIM_W_SPEC_VAR_CV_HANDLER		402386						
ANR	407104	Symbol	ZEND_ASSIGN_POW_SPEC_CV_CONST_HANDLER		402386						
ANR	407105	Symbol	ZEND_MUL_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407106	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CONST_CONST_HANDLER		402386						
ANR	407107	Symbol	ZEND_FETCH_DIM_W_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407108	Symbol	ZEND_POST_DEC_SPEC_CV_HANDLER		402386						
ANR	407109	Symbol	ZEND_JMPZNZ_SPEC_CONST_HANDLER		402386						
ANR	407110	Symbol	ZEND_ASSIGN_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	407111	Symbol	ZEND_FETCH_CLASS_SPEC_CONST_HANDLER		402386						
ANR	407112	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	407113	Symbol	ZEND_YIELD_FROM_SPEC_CV_HANDLER		402386						
ANR	407114	Symbol	ZEND_FETCH_DIM_UNSET_SPEC_VAR_CONST_HANDLER		402386						
ANR	407115	Symbol	ZEND_SPACESHIP_SPEC_CV_CV_HANDLER		402386						
ANR	407116	Symbol	ZEND_NEW_SPEC_VAR_HANDLER		402386						
ANR	407117	Symbol	ZEND_ASSIGN_ADD_SPEC_CV_CV_HANDLER		402386						
ANR	407118	Symbol	ZEND_INIT_USER_CALL_SPEC_CONST_CV_HANDLER		402386						
ANR	407119	Symbol	ZEND_UNSET_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407120	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407121	Symbol	ZEND_IS_NOT_EQUAL_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407122	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407123	Symbol	ZEND_SL_SPEC_CONST_CV_HANDLER		402386						
ANR	407124	Symbol	ZEND_ASSIGN_SL_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407125	Symbol	ZEND_BEGIN_SILENCE_SPEC_HANDLER		402386						
ANR	407126	Symbol	ZEND_HANDLE_EXCEPTION_SPEC_HANDLER		402386						
ANR	407127	Symbol	ZEND_IS_IDENTICAL_SPEC_CV_CV_HANDLER		402386						
ANR	407128	Symbol	ZEND_EXT_FCALL_BEGIN_SPEC_HANDLER		402386						
ANR	407129	Symbol	ZEND_ASSIGN_MOD_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407130	Symbol	ZEND_FETCH_UNSET_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407131	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_VAR_CONST_HANDLER		402386						
ANR	407132	Symbol	ZEND_FETCH_R_SPEC_CV_VAR_HANDLER		402386						
ANR	407133	Symbol	ZEND_FETCH_UNSET_SPEC_CV_VAR_HANDLER		402386						
ANR	407134	Symbol	ZEND_PRE_DEC_OBJ_SPEC_VAR_CV_HANDLER		402386						
ANR	407135	Symbol	ZEND_SPACESHIP_SPEC_CV_CONST_HANDLER		402386						
ANR	407136	Symbol	ZEND_PRE_INC_SPEC_VAR_HANDLER		402386						
ANR	407137	Symbol	ZEND_IS_IDENTICAL_SPEC_TMP_TMP_HANDLER		402386						
ANR	407138	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	407139	Symbol	ZEND_ASSIGN_POW_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407140	Symbol	ZEND_YIELD_SPEC_TMP_CONST_HANDLER		402386						
ANR	407141	Symbol	ZEND_ASSIGN_MOD_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407142	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_TMP_HANDLER		402386						
ANR	407143	Symbol	ZEND_ASSIGN_BW_AND_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407144	Symbol	ZEND_FETCH_OBJ_R_SPEC_TMP_CV_HANDLER		402386						
ANR	407145	Symbol	ZEND_RECV_VARIADIC_SPEC_HANDLER		402386						
ANR	407146	Symbol	ZEND_FETCH_DIM_IS_SPEC_CV_CONST_HANDLER		402386						
ANR	407147	Symbol	ZEND_VERIFY_ABSTRACT_CLASS_SPEC_HANDLER		402386						
ANR	407148	Symbol	ZEND_IS_SMALLER_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407149	Symbol	ZEND_VERIFY_RETURN_TYPE_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407150	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CONST_CV_HANDLER		402386						
ANR	407151	Symbol	ZEND_ASSIGN_CONCAT_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407152	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_CV_CV_HANDLER		402386						
ANR	407153	Symbol	ZEND_QM_ASSIGN_SPEC_CONST_HANDLER		402386						
ANR	407154	Symbol	ZEND_YIELD_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407155	Symbol	ZEND_UNSET_DIM_SPEC_VAR_CONST_HANDLER		402386						
ANR	407156	Symbol	ZEND_BW_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407157	Symbol	ZEND_CATCH_SPEC_CONST_CV_HANDLER		402386						
ANR	407158	Symbol	ZEND_IS_IDENTICAL_SPEC_CONST_TMP_HANDLER		402386						
ANR	407159	Symbol	ZEND_FETCH_DIM_R_SPEC_CV_CV_HANDLER		402386						
ANR	407160	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_CV_HANDLER		402386						
ANR	407161	Symbol	ZEND_MOD_SPEC_CONST_CV_HANDLER		402386						
ANR	407162	Symbol	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407163	Symbol	ZEND_DECLARE_ANON_INHERITED_CLASS_SPEC_HANDLER		402386						
ANR	407164	Symbol	ZEND_YIELD_SPEC_TMP_UNUSED_HANDLER		402386						
ANR	407165	Symbol	ZEND_DECLARE_FUNCTION_SPEC_HANDLER		402386						
ANR	407166	Symbol	ZEND_YIELD_SPEC_VAR_CV_HANDLER		402386						
ANR	407167	Symbol	ZEND_PRE_INC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407168	Symbol	ZEND_FETCH_OBJ_R_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407169	Symbol	ZEND_BW_AND_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407170	Symbol	ZEND_ASSIGN_POW_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407171	Symbol	ZEND_ASSIGN_ADD_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407172	Symbol	ZEND_FETCH_DIM_W_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407173	Symbol	ZEND_DECLARE_LAMBDA_FUNCTION_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407174	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_CV_HANDLER		402386						
ANR	407175	Symbol	ZEND_POW_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407176	Symbol	ZEND_PRE_DEC_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407177	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CONST_CV_HANDLER		402386						
ANR	407178	Symbol	ZEND_BW_NOT_SPEC_CONST_HANDLER		402386						
ANR	407179	Symbol	ZEND_CONCAT_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407180	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407181	Symbol	ZEND_DIV_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407182	Symbol	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407183	Symbol	ZEND_ASSIGN_SL_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407184	Symbol	ZEND_JMP_SET_SPEC_TMP_HANDLER		402386						
ANR	407185	Symbol	ZEND_ROPE_ADD_SPEC_TMP_TMPVAR_HANDLER		402386						
ANR	407186	Symbol	ZEND_IS_SMALLER_SPEC_CONST_CONST_HANDLER		402386						
ANR	407187	Symbol	ZEND_MOD_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407188	Symbol	ZEND_PRE_DEC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407189	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CV_CV_HANDLER		402386						
ANR	407190	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407191	Symbol	ZEND_ASSIGN_BW_AND_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407192	Symbol	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407193	Symbol	ZEND_SEND_VAR_SPEC_VAR_HANDLER		402386						
ANR	407194	Symbol	ZEND_JMPNZ_SPEC_CONST_HANDLER		402386						
ANR	407195	Symbol	ZEND_IS_EQUAL_SPEC_CV_CONST_HANDLER		402386						
ANR	407196	Symbol	ZEND_ASSIGN_MUL_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407197	Symbol	ZEND_SR_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407198	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_CONST_HANDLER		402386						
ANR	407199	Symbol	ZEND_FREE_SPEC_TMPVAR_HANDLER		402386						
ANR	407200	Symbol	ZEND_BOOL_NOT_SPEC_CONST_HANDLER		402386						
ANR	407201	Symbol	ZEND_ASSIGN_SL_SPEC_CV_CV_HANDLER		402386						
ANR	407202	Symbol	ZEND_BIND_GLOBAL_SPEC_CV_CONST_HANDLER		402386						
ANR	407203	Symbol	ZEND_FETCH_W_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	407204	Symbol	ZEND_FE_FETCH_RW_SPEC_VAR_HANDLER		402386						
ANR	407205	Symbol	ZEND_ASSIGN_SL_SPEC_CV_CONST_HANDLER		402386						
ANR	407206	Symbol	ZEND_ASSIGN_MUL_SPEC_CV_CONST_HANDLER		402386						
ANR	407207	Symbol	ZEND_COALESCE_SPEC_CV_HANDLER		402386						
ANR	407208	Symbol	ZEND_ASSIGN_BW_OR_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407209	Symbol	ZEND_BW_NOT_SPEC_TMPVAR_HANDLER		402386						
ANR	407210	Symbol	ZEND_JMPZ_EX_SPEC_CV_HANDLER		402386						
ANR	407211	Symbol	ZEND_BW_XOR_SPEC_CONST_CV_HANDLER		402386						
ANR	407212	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_UNUSED_HANDLER		402386						
ANR	407213	Symbol	ZEND_ASSIGN_DIM_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407214	Symbol	ZEND_FETCH_OBJ_RW_SPEC_VAR_CONST_HANDLER		402386						
ANR	407215	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_TMP_HANDLER		402386						
ANR	407216	Symbol	ZEND_FE_RESET_RW_SPEC_CV_HANDLER		402386						
ANR	407217	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407218	Symbol	ZEND_ASSIGN_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407219	Symbol	ZEND_IS_NOT_EQUAL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407220	Symbol	ZEND_UNSET_VAR_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	407221	Symbol	ZEND_IS_EQUAL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407222	Symbol	ZEND_MUL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407223	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_CV_CONST_HANDLER		402386						
ANR	407224	Symbol	ZEND_POW_SPEC_CONST_CV_HANDLER		402386						
ANR	407225	Symbol	ZEND_IS_IDENTICAL_SPEC_TMP_VAR_HANDLER		402386						
ANR	407226	Symbol	ZEND_FETCH_R_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407227	Symbol	ZEND_STRLEN_SPEC_CONST_HANDLER		402386						
ANR	407228	Symbol	ZEND_SEND_USER_SPEC_VAR_HANDLER		402386						
ANR	407229	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407230	Symbol	ZEND_FETCH_OBJ_R_SPEC_CONST_CONST_HANDLER		402386						
ANR	407231	Symbol	ZEND_EXIT_SPEC_CONST_HANDLER		402386						
ANR	407232	Symbol	ZEND_PRE_INC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407233	Symbol	ZEND_JMPZ_SPEC_CV_HANDLER		402386						
ANR	407234	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407235	Symbol	ZEND_ROPE_END_SPEC_TMP_TMPVAR_HANDLER		402386						
ANR	407236	Symbol	ZEND_BW_XOR_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407237	Symbol	ZEND_IS_NOT_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407238	Symbol	ZEND_INIT_FCALL_SPEC_CONST_HANDLER		402386						
ANR	407239	Symbol	ZEND_FETCH_DIM_R_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407240	Symbol	ZEND_INSTANCEOF_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	407241	Symbol	ZEND_SL_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407242	Symbol	ZEND_CONCAT_SPEC_CONST_CV_HANDLER		402386						
ANR	407243	Symbol	ZEND_CASE_SPEC_CONST_CONST_HANDLER		402386						
ANR	407244	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	407245	Symbol	ZEND_FETCH_OBJ_IS_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407246	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407247	Symbol	ZEND_UNSET_OBJ_SPEC_VAR_CV_HANDLER		402386						
ANR	407248	Symbol	ZEND_ASSIGN_SPEC_VAR_CONST_HANDLER		402386						
ANR	407249	Symbol	ZEND_FETCH_OBJ_R_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407250	Symbol	ZEND_FETCH_OBJ_W_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407251	Symbol	ZEND_CAST_SPEC_CV_HANDLER		402386						
ANR	407252	Symbol	ZEND_INIT_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386						
ANR	407253	Symbol	ZEND_YIELD_FROM_SPEC_CONST_HANDLER		402386						
ANR	407254	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_CV_CONST_HANDLER		402386						
ANR	407255	Symbol	ZEND_FETCH_OBJ_IS_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407256	Symbol	ZEND_BOOL_NOT_SPEC_CV_HANDLER		402386						
ANR	407257	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407258	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_TMP_VAR_HANDLER		402386						
ANR	407259	Symbol	ZEND_FETCH_DIM_RW_SPEC_VAR_CONST_HANDLER		402386						
ANR	407260	Symbol	ZEND_UNSET_VAR_SPEC_CONST_VAR_HANDLER		402386						
ANR	407261	Symbol	ZEND_ASSIGN_SUB_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407262	Symbol	ZEND_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407263	Symbol	ZEND_FETCH_IS_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407264	Symbol	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407265	Symbol	ZEND_INIT_METHOD_CALL_SPEC_CV_CV_HANDLER		402386						
ANR	407266	Symbol	ZEND_ASSIGN_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407267	Symbol	ZEND_ASSIGN_POW_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407268	Symbol	ZEND_MUL_SPEC_CV_CV_HANDLER		402386						
ANR	407269	Symbol	ZEND_TYPE_CHECK_SPEC_VAR_HANDLER		402386						
ANR	407270	Symbol	ZEND_ASSIGN_MUL_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407271	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_CV_HANDLER		402386						
ANR	407272	Symbol	ZEND_UNSET_VAR_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407273	Symbol	ZEND_UNSET_DIM_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407274	Symbol	ZEND_SL_SPEC_CV_CONST_HANDLER		402386						
ANR	407275	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407276	Symbol	ZEND_CASE_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407277	Symbol	ZEND_NULL_HANDLER		402386						
ANR	407278	Symbol	ZEND_FETCH_OBJ_IS_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407279	Symbol	ZEND_SUB_SPEC_CONST_CV_HANDLER		402386						
ANR	407280	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407281	Symbol	ZEND_BOOL_XOR_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407282	Symbol	ZEND_FETCH_DIM_RW_SPEC_CV_CONST_HANDLER		402386						
ANR	407283	Symbol	ZEND_FETCH_R_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407284	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_VAR_CV_HANDLER		402386						
ANR	407285	Symbol	ZEND_POST_DEC_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407286	Symbol	ZEND_INIT_ARRAY_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407287	Symbol	ZEND_SEND_VAR_SPEC_CV_HANDLER		402386						
ANR	407288	Symbol	ZEND_FETCH_RW_SPEC_CV_CONST_HANDLER		402386						
ANR	407289	Symbol	ZEND_ASSIGN_DIM_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407290	Symbol	ZEND_FETCH_RW_SPEC_CONST_CONST_HANDLER		402386						
ANR	407291	Symbol	ZEND_SPACESHIP_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407292	Symbol	ZEND_IS_NOT_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407293	Symbol	ZEND_INIT_METHOD_CALL_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407294	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CONST_CV_HANDLER		402386						
ANR	407295	Symbol	ZEND_FETCH_OBJ_W_SPEC_VAR_CV_HANDLER		402386						
ANR	407296	Symbol	ZEND_ASSIGN_BW_OR_SPEC_CV_CV_HANDLER		402386						
ANR	407297	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407298	Symbol	ZEND_DIV_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407299	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407300	Symbol	ZEND_FETCH_OBJ_UNSET_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407301	Symbol	ZEND_POST_DEC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407302	Symbol	ZEND_FETCH_W_SPEC_CONST_VAR_HANDLER		402386						
ANR	407303	Symbol	ZEND_IS_EQUAL_SPEC_CV_CV_HANDLER		402386						
ANR	407304	Symbol	ZEND_THROW_SPEC_VAR_HANDLER		402386						
ANR	407305	Symbol	ZEND_ASSIGN_SL_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407306	Symbol	ZEND_MUL_SPEC_CV_CONST_HANDLER		402386						
ANR	407307	Symbol	ZEND_FETCH_OBJ_R_SPEC_CV_CONST_HANDLER		402386						
ANR	407308	Symbol	ZEND_UNSET_VAR_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407309	Symbol	ZEND_RETURN_BY_REF_SPEC_VAR_HANDLER		402386						
ANR	407310	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407311	Symbol	ZEND_ASSIGN_SL_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407312	Symbol	ZEND_POST_DEC_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	407313	Symbol	ZEND_GENERATOR_RETURN_SPEC_TMP_HANDLER		402386						
ANR	407314	Symbol	ZEND_BW_XOR_SPEC_CV_CV_HANDLER		402386						
ANR	407315	Symbol	ZEND_JMPZ_SPEC_TMPVAR_HANDLER		402386						
ANR	407316	Symbol	ZEND_UNSET_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407317	Symbol	ZEND_FETCH_DIM_R_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407318	Symbol	ZEND_FETCH_CLASS_SPEC_CV_HANDLER		402386						
ANR	407319	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_CONST_HANDLER		402386						
ANR	407320	Symbol	ZEND_ASSIGN_POW_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407321	Symbol	ZEND_FETCH_OBJ_RW_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407322	Symbol	ZEND_PRE_INC_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	407323	Symbol	ZEND_THROW_SPEC_TMP_HANDLER		402386						
ANR	407324	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407325	Symbol	ZEND_FETCH_R_SPEC_CONST_VAR_HANDLER		402386						
ANR	407326	Symbol	ZEND_FETCH_DIM_UNSET_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407327	Symbol	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407328	Symbol	ZEND_ASSIGN_SUB_SPEC_VAR_CONST_HANDLER		402386						
ANR	407329	Symbol	ZEND_UNSET_DIM_SPEC_CV_CONST_HANDLER		402386						
ANR	407330	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407331	Symbol	ZEND_ASSIGN_BW_AND_SPEC_CV_CONST_HANDLER		402386						
ANR	407332	Symbol	ZEND_ASSIGN_REF_SPEC_CV_CV_HANDLER		402386						
ANR	407333	Symbol	ZEND_FETCH_OBJ_W_SPEC_CV_CV_HANDLER		402386						
ANR	407334	Symbol	ZEND_INSTANCEOF_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407335	Symbol	ZEND_NOP_SPEC_HANDLER		402386						
ANR	407336	Symbol	ZEND_JMPNZ_EX_SPEC_CONST_HANDLER		402386						
ANR	407337	Symbol	ZEND_DO_FCALL_SPEC_HANDLER		402386						
ANR	407338	Symbol	ZEND_ASSIGN_SR_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407339	Symbol	ZEND_GENERATOR_RETURN_SPEC_VAR_HANDLER		402386						
ANR	407340	Symbol	ZEND_PRE_INC_OBJ_SPEC_VAR_CONST_HANDLER		402386						
ANR	407341	Symbol	ZEND_ASSIGN_MUL_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407342	Symbol	ZEND_JMP_SET_SPEC_CONST_HANDLER		402386						
ANR	407343	Symbol	zend_opcode_handlers		402386						
ANR	407344	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407345	Symbol	ZEND_IS_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407346	Symbol	ZEND_ASSIGN_MUL_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407347	Symbol	ZEND_ASSIGN_SPEC_CV_CONST_HANDLER		402386						
ANR	407348	Symbol	ZEND_PRE_DEC_SPEC_VAR_HANDLER		402386						
ANR	407349	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_TMP_TMPVAR_HANDLER		402386						
ANR	407350	Symbol	ZEND_ECHO_SPEC_CONST_HANDLER		402386						
ANR	407351	Symbol	ZEND_JMPNZ_EX_SPEC_CV_HANDLER		402386						
ANR	407352	Symbol	ZEND_BOOL_XOR_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407353	Symbol	ZEND_FETCH_DIM_R_SPEC_CV_CONST_HANDLER		402386						
ANR	407354	Symbol	ZEND_UNSET_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	407355	Symbol	ZEND_ADD_SPEC_CONST_CONST_HANDLER		402386						
ANR	407356	Symbol	ZEND_ASSIGN_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407357	Symbol	ZEND_ASSIGN_OBJ_SPEC_VAR_CV_HANDLER		402386						
ANR	407358	Symbol	ZEND_FAST_CONCAT_SPEC_CV_CV_HANDLER		402386						
ANR	407359	Symbol	ZEND_UNSET_DIM_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407360	Symbol	ZEND_FETCH_OBJ_R_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407361	Symbol	ZEND_BOOL_XOR_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407362	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_CONST_CONST_HANDLER		402386						
ANR	407363	Symbol	ZEND_POST_INC_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	407364	Symbol	ZEND_SR_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407365	Symbol	ZEND_POW_SPEC_CV_CONST_HANDLER		402386						
ANR	407366	Symbol	ZEND_POST_INC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407367	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407368	Symbol	ZEND_UNSET_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407369	Symbol	ZEND_FETCH_OBJ_R_SPEC_CONST_CV_HANDLER		402386						
ANR	407370	Symbol	ZEND_TYPE_CHECK_SPEC_TMP_HANDLER		402386						
ANR	407371	Symbol	ZEND_MOD_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407372	Symbol	ZEND_MOD_SPEC_CONST_CONST_HANDLER		402386						
ANR	407373	Symbol	ZEND_FETCH_RW_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407374	Symbol	ZEND_ASSIGN_POW_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407375	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_VAR_CONST_HANDLER		402386						
ANR	407376	Symbol	ZEND_JMPZNZ_SPEC_TMPVAR_HANDLER		402386						
ANR	407377	Symbol	ZEND_FETCH_RW_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407378	Symbol	ZEND_INIT_ARRAY_SPEC_CONST_CV_HANDLER		402386						
ANR	407379	Symbol	ZEND_UNSET_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	407380	Symbol	ZEND_ASSIGN_ADD_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407381	Symbol	ZEND_ADD_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407382	Symbol	ZEND_DISCARD_EXCEPTION_SPEC_HANDLER		402386						
ANR	407383	Symbol	ZEND_THROW_SPEC_CONST_HANDLER		402386						
ANR	407384	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407385	Symbol	ZEND_PRE_DEC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407386	Symbol	ZEND_MUL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407387	Symbol	ZEND_BW_OR_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407388	Symbol	ZEND_FETCH_DIM_IS_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407389	Symbol	ZEND_IS_SMALLER_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407390	Symbol	ZEND_FETCH_OBJ_IS_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407391	Symbol	ZEND_ASSIGN_DIM_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407392	Symbol	ZEND_SUB_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407393	Symbol	ZEND_DECLARE_INHERITED_CLASS_SPEC_HANDLER		402386						
ANR	407394	Symbol	ZEND_DECLARE_CLASS_SPEC_HANDLER		402386						
ANR	407395	Symbol	ZEND_CALL_TRAMPOLINE_SPEC_HANDLER		402386						
ANR	407396	Symbol	ZEND_CASE_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407397	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_VAR_CONST_HANDLER		402386						
ANR	407398	Symbol	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407399	Symbol	ZEND_ASSIGN_SL_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407400	Symbol	ZEND_INIT_ARRAY_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407401	Symbol	ZEND_FETCH_DIM_UNSET_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407402	Symbol	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407403	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_CV_VAR_HANDLER		402386						
ANR	407404	Symbol	ZEND_DIV_SPEC_CONST_CONST_HANDLER		402386						
ANR	407405	Symbol	ZEND_BW_XOR_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407406	Symbol	ZEND_IS_NOT_EQUAL_SPEC_CONST_CV_HANDLER		402386						
ANR	407407	Symbol	ZEND_FETCH_W_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407408	Symbol	ZEND_JMP_SET_SPEC_CV_HANDLER		402386						
ANR	407409	Symbol	ZEND_ASSIGN_BW_OR_SPEC_VAR_CV_HANDLER		402386						
ANR	407410	Symbol	ZEND_IS_EQUAL_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407411	Symbol	ZEND_IS_NOT_EQUAL_SPEC_CV_CONST_HANDLER		402386						
ANR	407412	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_TMP_TMPVAR_HANDLER		402386						
ANR	407413	Symbol	ZEND_QM_ASSIGN_SPEC_CV_HANDLER		402386						
ANR	407414	Symbol	ZEND_UNSET_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407415	Symbol	ZEND_FETCH_CLASS_NAME_SPEC_HANDLER		402386						
ANR	407416	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_TMP_CONST_HANDLER		402386						
ANR	407417	Symbol	ZEND_SR_SPEC_CONST_CONST_HANDLER		402386						
ANR	407418	Symbol	ZEND_FETCH_OBJ_RW_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407419	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_VAR_CV_HANDLER		402386						
ANR	407420	Symbol	ZEND_INIT_DYNAMIC_CALL_SPEC_TMPVAR_HANDLER		402386						
ANR	407421	Symbol	ZEND_CASE_SPEC_CONST_CV_HANDLER		402386						
ANR	407422	Symbol	ZEND_ASSIGN_DIV_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407423	Symbol	ZEND_INCLUDE_OR_EVAL_SPEC_CV_HANDLER		402386						
ANR	407424	Symbol	ZEND_YIELD_SPEC_CV_CV_HANDLER		402386						
ANR	407425	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_CV_HANDLER		402386						
ANR	407426	Symbol	ZEND_ADD_SPEC_CONST_CV_HANDLER		402386						
ANR	407427	Symbol	ZEND_SPACESHIP_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407428	Symbol	ZEND_RETURN_BY_REF_SPEC_CV_HANDLER		402386						
ANR	407429	Symbol	ZEND_FETCH_IS_SPEC_CONST_VAR_HANDLER		402386						
ANR	407430	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407431	Symbol	ZEND_ECHO_SPEC_TMPVAR_HANDLER		402386						
ANR	407432	Symbol	ZEND_SR_SPEC_CV_CONST_HANDLER		402386						
ANR	407433	Symbol	ZEND_INIT_ARRAY_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407434	Symbol	ZEND_SR_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407435	Symbol	ZEND_FETCH_OBJ_W_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407436	Symbol	ZEND_DIV_SPEC_TMPVAR_CV_HANDLER		402386						
ANR	407437	Symbol	ZEND_ASSIGN_BW_AND_SPEC_VAR_CONST_HANDLER		402386						
ANR	407438	Symbol	ZEND_FE_FREE_SPEC_TMPVAR_HANDLER		402386						
ANR	407439	Symbol	ZEND_TYPE_CHECK_SPEC_CONST_HANDLER		402386						
ANR	407440	Symbol	ZEND_YIELD_SPEC_TMP_TMP_HANDLER		402386						
ANR	407441	Symbol	ZEND_ASSIGN_MOD_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407442	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407443	Symbol	ZEND_FETCH_CONSTANT_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407444	Symbol	ZEND_SEND_VAL_SPEC_TMP_HANDLER		402386						
ANR	407445	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407446	Symbol	ZEND_ASSIGN_MUL_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407447	Symbol	ZEND_BOOL_SPEC_TMPVAR_HANDLER		402386						
ANR	407448	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407449	Symbol	ZEND_BW_AND_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407450	Symbol	ZEND_YIELD_SPEC_VAR_VAR_HANDLER		402386						
ANR	407451	Symbol	ZEND_SUB_SPEC_CV_CONST_HANDLER		402386						
ANR	407452	Symbol	ZEND_FETCH_OBJ_IS_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407453	Symbol	ZEND_ASSIGN_MOD_SPEC_CV_CV_HANDLER		402386						
ANR	407454	Symbol	ZEND_POST_INC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407455	Symbol	ZEND_ASSIGN_ADD_SPEC_VAR_CONST_HANDLER		402386						
ANR	407456	Symbol	ZEND_FETCH_FUNC_ARG_SPEC_CV_CONST_HANDLER		402386						
ANR	407457	Symbol	ZEND_ISSET_ISEMPTY_PROP_OBJ_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407458	Symbol	ZEND_FAST_CONCAT_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407459	Symbol	ZEND_FETCH_RW_SPEC_CONST_VAR_HANDLER		402386						
ANR	407460	Symbol	ZEND_FETCH_DIM_IS_SPEC_CV_CV_HANDLER		402386						
ANR	407461	Symbol	ZEND_FETCH_IS_SPEC_CV_VAR_HANDLER		402386						
ANR	407462	Symbol	ZEND_JMPNZ_EX_SPEC_TMPVAR_HANDLER		402386						
ANR	407463	Symbol	ZEND_IS_NOT_EQUAL_SPEC_CV_CV_HANDLER		402386						
ANR	407464	Symbol	ZEND_CASE_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407465	Symbol	ZEND_IS_EQUAL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407466	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CV_CONST_HANDLER		402386						
ANR	407467	Symbol	ZEND_MOD_SPEC_CV_CONST_HANDLER		402386						
ANR	407468	Symbol	ZEND_ASSIGN_SL_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407469	Symbol	ZEND_EXT_STMT_SPEC_HANDLER		402386						
ANR	407470	Symbol	ZEND_FAST_CONCAT_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407471	Symbol	ZEND_ASSIGN_MUL_SPEC_VAR_CONST_HANDLER		402386						
ANR	407472	Symbol	ZEND_YIELD_SPEC_CONST_CONST_HANDLER		402386						
ANR	407473	Symbol	ZEND_FETCH_LIST_SPEC_CONST_CONST_HANDLER		402386						
ANR	407474	Symbol	ZEND_ASSIGN_SR_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407475	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CONST_CONST_HANDLER		402386						
ANR	407476	Symbol	ZEND_INIT_METHOD_CALL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407477	Symbol	ZEND_PRE_INC_OBJ_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407478	Symbol	ZEND_YIELD_SPEC_CV_CONST_HANDLER		402386						
ANR	407479	Symbol	ZEND_UNSET_VAR_SPEC_CV_VAR_HANDLER		402386						
ANR	407480	Symbol	ZEND_ASSIGN_BW_AND_SPEC_CV_CV_HANDLER		402386						
ANR	407481	Symbol	ZEND_ASSIGN_CONCAT_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407482	Symbol	ZEND_SUB_SPEC_CV_CV_HANDLER		402386						
ANR	407483	Symbol	ZEND_ASSIGN_BW_OR_SPEC_CV_UNUSED_HANDLER		402386						
ANR	407484	Symbol	ZEND_CASE_SPEC_CV_CONST_HANDLER		402386						
ANR	407485	Symbol	ZEND_YIELD_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407486	Symbol	ZEND_BW_AND_SPEC_CV_CV_HANDLER		402386						
ANR	407487	Symbol	ZEND_FETCH_DIM_W_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407488	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_CV_HANDLER		402386						
ANR	407489	Symbol	ZEND_FETCH_DIM_IS_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407490	Symbol	ZEND_ROPE_ADD_SPEC_TMP_CONST_HANDLER		402386						
ANR	407491	Symbol	ZEND_ASSIGN_BW_OR_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407492	Symbol	ZEND_INIT_DYNAMIC_CALL_SPEC_CONST_HANDLER		402386						
ANR	407493	Symbol	ZEND_POST_INC_OBJ_SPEC_CV_CV_HANDLER		402386						
ANR	407494	Symbol	ZEND_POW_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407495	Symbol	ZEND_GENERATOR_RETURN_SPEC_CV_HANDLER		402386						
ANR	407496	Symbol	ZEND_YIELD_FROM_SPEC_VAR_HANDLER		402386						
ANR	407497	Symbol	ZEND_SR_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407498	Symbol	ZEND_END_SILENCE_SPEC_TMP_HANDLER		402386						
ANR	407499	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_VAR_CONST_HANDLER		402386						
ANR	407500	Symbol	ZEND_MUL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407501	Symbol	ZEND_IS_IDENTICAL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407502	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_CV_CONST_HANDLER		402386						
ANR	407503	Symbol	ZEND_CLONE_SPEC_TMPVAR_HANDLER		402386						
ANR	407504	Symbol	ZEND_CONCAT_SPEC_CV_CONST_HANDLER		402386						
ANR	407505	Symbol	ZEND_BW_XOR_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407506	Symbol	ZEND_YIELD_SPEC_TMP_CV_HANDLER		402386						
ANR	407507	Symbol	ZEND_IS_SMALLER_OR_EQUAL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407508	Symbol	ZEND_ASSERT_CHECK_SPEC_HANDLER		402386						
ANR	407509	Symbol	ZEND_FETCH_OBJ_RW_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407510	Symbol	ZEND_POW_SPEC_CV_CV_HANDLER		402386						
ANR	407511	Symbol	ZEND_BOOL_SPEC_CONST_HANDLER		402386						
ANR	407512	Symbol	ZEND_BW_XOR_SPEC_CONST_CONST_HANDLER		402386						
ANR	407513	Symbol	ZEND_FETCH_IS_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	407514	Symbol	ZEND_FETCH_RW_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	407515	Symbol	ZEND_FETCH_DIM_UNSET_SPEC_CV_CONST_HANDLER		402386						
ANR	407516	Symbol	ZEND_ASSIGN_MOD_SPEC_CV_CONST_HANDLER		402386						
ANR	407517	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407518	Symbol	ZEND_VERIFY_RETURN_TYPE_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407519	Symbol	ZEND_BOOL_XOR_SPEC_CV_CV_HANDLER		402386						
ANR	407520	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407521	Symbol	ZEND_ASSIGN_SR_SPEC_VAR_CONST_HANDLER		402386						
ANR	407522	Symbol	ZEND_ASSIGN_SUB_SPEC_CV_CONST_HANDLER		402386						
ANR	407523	Symbol	ZEND_IS_IDENTICAL_SPEC_CONST_VAR_HANDLER		402386						
ANR	407524	Symbol	ZEND_BOOL_SPEC_CV_HANDLER		402386						
ANR	407525	Symbol	ZEND_MUL_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407526	Symbol	ZEND_IS_SMALLER_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407527	Symbol	ZEND_YIELD_SPEC_TMP_VAR_HANDLER		402386						
ANR	407528	Symbol	ZEND_FETCH_W_SPEC_CV_VAR_HANDLER		402386						
ANR	407529	Symbol	ZEND_DO_ICALL_SPEC_HANDLER		402386						
ANR	407530	Symbol	ZEND_INIT_ARRAY_SPEC_CV_CV_HANDLER		402386						
ANR	407531	Symbol	ZEND_ASSIGN_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	407532	Symbol	ZEND_INIT_METHOD_CALL_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407533	Symbol	ZEND_FETCH_UNSET_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	407534	Symbol	ZEND_TYPE_CHECK_SPEC_CV_HANDLER		402386						
ANR	407535	Symbol	ZEND_FETCH_DIM_R_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407536	Symbol	ZEND_USER_OPCODE_SPEC_HANDLER		402386						
ANR	407537	Symbol	ZEND_ASSIGN_BW_AND_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407538	Symbol	ZEND_BOOL_NOT_SPEC_TMPVAR_HANDLER		402386						
ANR	407539	Symbol	ZEND_FAST_CONCAT_SPEC_CV_CONST_HANDLER		402386						
ANR	407540	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407541	Symbol	ZEND_FETCH_OBJ_IS_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407542	Symbol	ZEND_POST_DEC_OBJ_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407543	Symbol	ZEND_INSTANCEOF_SPEC_CV_CONST_HANDLER		402386						
ANR	407544	Symbol	ZEND_ADD_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407545	Symbol	ZEND_FETCH_DIM_IS_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407546	Symbol	ZEND_ASSIGN_SPEC_CV_CV_HANDLER		402386						
ANR	407547	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407548	Symbol	ZEND_PRE_DEC_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	407549	Symbol	ZEND_INIT_ARRAY_SPEC_VAR_CONST_HANDLER		402386						
ANR	407550	Symbol	ZEND_FETCH_DIM_IS_SPEC_CONST_CV_HANDLER		402386						
ANR	407551	Symbol	ZEND_VERIFY_RETURN_TYPE_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407552	Symbol	ZEND_POST_DEC_OBJ_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407553	Symbol	ZEND_POST_INC_OBJ_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407554	Symbol	ZEND_SPACESHIP_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407555	Symbol	ZEND_ASSIGN_DIM_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407556	Symbol	ZEND_ASSIGN_REF_SPEC_VAR_CV_HANDLER		402386						
ANR	407557	Symbol	ZEND_POST_INC_OBJ_SPEC_VAR_CONST_HANDLER		402386						
ANR	407558	Symbol	ZEND_JMP_SPEC_HANDLER		402386						
ANR	407559	Symbol	ZEND_FETCH_OBJ_R_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407560	Symbol	ZEND_JMPZNZ_SPEC_CV_HANDLER		402386						
ANR	407561	Symbol	ZEND_SL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407562	Symbol	ZEND_SEND_ARRAY_SPEC_HANDLER		402386						
ANR	407563	Symbol	ZEND_ASSIGN_SL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407564	Symbol	ZEND_INIT_ARRAY_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407565	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CV_VAR_HANDLER		402386						
ANR	407566	Symbol	ZEND_MUL_SPEC_CONST_CV_HANDLER		402386						
ANR	407567	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407568	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CV_CV_HANDLER		402386						
ANR	407569	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_CONST_UNUSED_HANDLER		402386						
ANR	407570	Symbol	ZEND_FETCH_R_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	407571	Symbol	ZEND_RETURN_SPEC_CONST_HANDLER		402386						
ANR	407572	Symbol	ZEND_ASSIGN_POW_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407573	Symbol	ZEND_FETCH_DIM_UNSET_SPEC_CV_CV_HANDLER		402386						
ANR	407574	Symbol	ZEND_IS_EQUAL_SPEC_CONST_CV_HANDLER		402386						
ANR	407575	Symbol	ZEND_CONCAT_SPEC_CONST_CONST_HANDLER		402386						
ANR	407576	Symbol	ZEND_FETCH_W_SPEC_CONST_CONST_HANDLER		402386						
ANR	407577	Symbol	ZEND_POST_DEC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407578	Symbol	ZEND_FETCH_LIST_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407579	Symbol	ZEND_ASSIGN_ADD_SPEC_VAR_CV_HANDLER		402386						
ANR	407580	Symbol	ZEND_FETCH_DIM_W_SPEC_VAR_CONST_HANDLER		402386						
ANR	407581	Symbol	ZEND_SPACESHIP_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407582	Symbol	ZEND_IS_NOT_IDENTICAL_SPEC_CONST_CONST_HANDLER		402386						
ANR	407583	Symbol	ZEND_ASSIGN_SR_SPEC_CV_CONST_HANDLER		402386						
ANR	407584	Symbol	ZEND_ASSIGN_DIV_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407585	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407586	Symbol	ZEND_ASSIGN_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407587	Symbol	ZEND_VERIFY_RETURN_TYPE_SPEC_TMP_UNUSED_HANDLER		402386						
ANR	407588	Symbol	ZEND_BW_AND_SPEC_TMPVAR_TMPVAR_HANDLER		402386						
ANR	407589	Symbol	ZEND_FE_RESET_R_SPEC_TMP_HANDLER		402386						
ANR	407590	Symbol	ZEND_INIT_NS_FCALL_BY_NAME_SPEC_CONST_HANDLER		402386						
ANR	407591	Symbol	ZEND_FETCH_OBJ_R_SPEC_TMP_TMPVAR_HANDLER		402386						
ANR	407592	Symbol	ZEND_YIELD_SPEC_VAR_CONST_HANDLER		402386						
ANR	407593	Symbol	ZEND_FETCH_R_SPEC_CONST_CONST_HANDLER		402386						
ANR	407594	Symbol	ZEND_FETCH_OBJ_R_SPEC_CV_CV_HANDLER		402386						
ANR	407595	Symbol	ZEND_FETCH_UNSET_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407596	Symbol	ZEND_UNSET_DIM_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407597	Symbol	ZEND_JMP_SET_SPEC_VAR_HANDLER		402386						
ANR	407598	Symbol	ZEND_JMPNZ_SPEC_CV_HANDLER		402386						
ANR	407599	Symbol	ZEND_BW_OR_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407600	Symbol	ZEND_FETCH_IS_SPEC_TMPVAR_UNUSED_HANDLER		402386						
ANR	407601	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407602	Symbol	ZEND_DEFINED_SPEC_CONST_HANDLER		402386						
ANR	407603	Symbol	ZEND_ROPE_INIT_SPEC_UNUSED_CONST_HANDLER		402386						
ANR	407604	Symbol	ZEND_SEND_VAL_EX_SPEC_TMP_HANDLER		402386						
ANR	407605	Symbol	ZEND_ASSIGN_SPEC_VAR_VAR_HANDLER		402386						
ANR	407606	Symbol	ZEND_ASSIGN_CONCAT_SPEC_VAR_CONST_HANDLER		402386						
ANR	407607	Symbol	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407608	Symbol	ZEND_IS_SMALLER_SPEC_CV_CONST_HANDLER		402386						
ANR	407609	Symbol	ZEND_STRLEN_SPEC_CV_HANDLER		402386						
ANR	407610	Symbol	ZEND_RECV_INIT_SPEC_CONST_HANDLER		402386						
ANR	407611	Symbol	ZEND_INCLUDE_OR_EVAL_SPEC_TMPVAR_HANDLER		402386						
ANR	407612	Symbol	ZEND_FETCH_OBJ_FUNC_ARG_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407613	Symbol	ZEND_ASSIGN_CONCAT_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407614	Symbol	ZEND_INIT_ARRAY_SPEC_VAR_CV_HANDLER		402386						
ANR	407615	Symbol	ZEND_ASSIGN_POW_SPEC_VAR_CONST_HANDLER		402386						
ANR	407616	Symbol	ZEND_INIT_ARRAY_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407617	Symbol	ZEND_POST_INC_OBJ_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407618	Symbol	ZEND_ASSIGN_SR_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407619	Symbol	ZEND_FETCH_OBJ_IS_SPEC_CV_CONST_HANDLER		402386						
ANR	407620	Symbol	ZEND_FETCH_IS_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407621	Symbol	ZEND_FETCH_OBJ_W_SPEC_CV_CONST_HANDLER		402386						
ANR	407622	Symbol	ZEND_THROW_SPEC_CV_HANDLER		402386						
ANR	407623	Symbol	ZEND_INIT_ARRAY_SPEC_CONST_CONST_HANDLER		402386						
ANR	407624	Symbol	ZEND_ASSIGN_DIM_SPEC_CV_CV_HANDLER		402386						
ANR	407625	Symbol	ZEND_FETCH_OBJ_RW_SPEC_CV_CONST_HANDLER		402386						
ANR	407626	Symbol	ZEND_SL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407627	Symbol	ZEND_DECLARE_INHERITED_CLASS_DELAYED_SPEC_HANDLER		402386						
ANR	407628	Symbol	ZEND_INIT_USER_CALL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407629	Symbol	ZEND_FETCH_IS_SPEC_CONST_CONST_HANDLER		402386						
ANR	407630	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407631	Symbol	ZEND_FETCH_DIM_R_SPEC_CONST_CONST_HANDLER		402386						
ANR	407632	Symbol	ZEND_ASSIGN_POW_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407633	Symbol	ZEND_YIELD_SPEC_UNUSED_TMP_HANDLER		402386						
ANR	407634	Symbol	ZEND_ASSIGN_ADD_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407635	Symbol	ZEND_ASSIGN_BW_XOR_SPEC_CV_CV_HANDLER		402386						
ANR	407636	Symbol	ZEND_ASSIGN_SR_SPEC_CV_CV_HANDLER		402386						
ANR	407637	Symbol	ZEND_IS_SMALLER_SPEC_CV_CV_HANDLER		402386						
ANR	407638	Symbol	ZEND_FETCH_OBJ_RW_SPEC_CV_CV_HANDLER		402386						
ANR	407639	Symbol	ZEND_INSTANCEOF_SPEC_CV_VAR_HANDLER		402386						
ANR	407640	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ_SPEC_CV_CONST_HANDLER		402386						
ANR	407641	Symbol	ZEND_ROPE_INIT_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407642	Symbol	ZEND_BOOL_XOR_SPEC_CV_CONST_HANDLER		402386						
ANR	407643	Symbol	ZEND_ADD_ARRAY_ELEMENT_SPEC_TMP_TMPVAR_HANDLER		402386						
ANR	407644	Symbol	ZEND_FETCH_R_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407645	Symbol	ZEND_YIELD_SPEC_VAR_UNUSED_HANDLER		402386						
ANR	407646	Symbol	ZEND_SPACESHIP_SPEC_CONST_CV_HANDLER		402386						
ANR	407647	Symbol	ZEND_RETURN_BY_REF_SPEC_TMP_HANDLER		402386						
ANR	407648	Symbol	ZEND_BIND_TRAITS_SPEC_HANDLER		402386						
ANR	407649	Symbol	ZEND_SPACESHIP_SPEC_CONST_CONST_HANDLER		402386						
ANR	407650	Symbol	ZEND_ISSET_ISEMPTY_VAR_SPEC_TMPVAR_VAR_HANDLER		402386						
ANR	407651	Symbol	ZEND_INIT_ARRAY_SPEC_UNUSED_CV_HANDLER		402386						
ANR	407652	Symbol	ZEND_INCLUDE_OR_EVAL_SPEC_CONST_HANDLER		402386						
ANR	407653	Symbol	ZEND_YIELD_SPEC_CV_VAR_HANDLER		402386						
ANR	407654	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_VAR_CONST_HANDLER		402386						
ANR	407655	Symbol	ZEND_ASSIGN_SR_SPEC_VAR_CV_HANDLER		402386						
ANR	407656	Symbol	ZEND_ASSIGN_DIM_SPEC_VAR_CONST_HANDLER		402386						
ANR	407657	Symbol	ZEND_UNSET_VAR_SPEC_TMPVAR_CONST_HANDLER		402386						
ANR	407658	Symbol	ZEND_FETCH_DIM_RW_SPEC_VAR_TMPVAR_HANDLER		402386						
ANR	407659	Symbol	ZEND_ASSIGN_SUB_SPEC_CV_CV_HANDLER		402386						
ANR	407660	Symbol	ZEND_ASSIGN_DIV_SPEC_UNUSED_UNUSED_HANDLER		402386						
ANR	407661	Symbol	ZEND_IS_IDENTICAL_SPEC_CONST_CV_HANDLER		402386						
ANR	407662	Symbol	ZEND_FETCH_DIM_FUNC_ARG_SPEC_CONST_CONST_HANDLER		402386						
ANR	407663	Symbol	ZEND_ROPE_INIT_SPEC_UNUSED_TMPVAR_HANDLER		402386						
ANR	407664	Symbol	ZEND_ASSIGN_POW_SPEC_VAR_CV_HANDLER		402386						
ANR	407665	Symbol	ZEND_BW_OR_SPEC_CV_CV_HANDLER		402386						
ANR	407666	Symbol	ZEND_FAST_RET_SPEC_HANDLER		402386						
ANR	407667	Symbol	ZEND_FETCH_OBJ_RW_SPEC_VAR_CV_HANDLER		402386						
ANR	407668	Symbol	ZEND_INIT_STATIC_METHOD_CALL_SPEC_CONST_TMPVAR_HANDLER		402386						
ANR	407669	Symbol	ZEND_INIT_METHOD_CALL_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407670	Symbol	ZEND_FAST_CONCAT_SPEC_CV_TMPVAR_HANDLER		402386						
ANR	407671	Function	zend_vm_get_opcode_handler	49698:0:1580821:1581708							
ANR	407672	FunctionDef	"zend_vm_get_opcode_handler (zend_uchar opcode , const zend_op * op)"		407671	0					
ANR	407673	CompoundStatement		49699:0:1580905:1581708	407671	0					
ANR	407674	Statement	static	49700:2:1580909:1580914	407671	0	True				
ANR	407675	IdentifierDeclStatement	"const int zend_vm_decode [ ] = { _UNUSED_CODE , _CONST_CODE , _TMP_CODE , _UNUSED_CODE , _VAR_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _CV_CODE } ;"	49700:9:1580916:1581596	407671	1	True				
ANR	407676	IdentifierDecl	"zend_vm_decode [ ] = { _UNUSED_CODE , _CONST_CODE , _TMP_CODE , _UNUSED_CODE , _VAR_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _CV_CODE }"		407671	0					
ANR	407677	IdentifierDeclType	const int [ ]		407671	0					
ANR	407678	Identifier	zend_vm_decode		407671	1					
ANR	407679	AssignmentExpression	"zend_vm_decode [ ] = { _UNUSED_CODE , _CONST_CODE , _TMP_CODE , _UNUSED_CODE , _VAR_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _UNUSED_CODE , _CV_CODE }"		407671	2		=			
ANR	407680	Identifier	zend_vm_decode		407671	0					
ANR	407681	InitializerList	_UNUSED_CODE		407671	1					
ANR	407682	Identifier	_UNUSED_CODE		407671	0					
ANR	407683	Identifier	_CONST_CODE		407671	1					
ANR	407684	Identifier	_TMP_CODE		407671	2					
ANR	407685	Identifier	_UNUSED_CODE		407671	3					
ANR	407686	Identifier	_VAR_CODE		407671	4					
ANR	407687	Identifier	_UNUSED_CODE		407671	5					
ANR	407688	Identifier	_UNUSED_CODE		407671	6					
ANR	407689	Identifier	_UNUSED_CODE		407671	7					
ANR	407690	Identifier	_UNUSED_CODE		407671	8					
ANR	407691	Identifier	_UNUSED_CODE		407671	9					
ANR	407692	Identifier	_UNUSED_CODE		407671	10					
ANR	407693	Identifier	_UNUSED_CODE		407671	11					
ANR	407694	Identifier	_UNUSED_CODE		407671	12					
ANR	407695	Identifier	_UNUSED_CODE		407671	13					
ANR	407696	Identifier	_UNUSED_CODE		407671	14					
ANR	407697	Identifier	_UNUSED_CODE		407671	15					
ANR	407698	Identifier	_CV_CODE		407671	16					
ANR	407699	ReturnStatement	return zend_opcode_handlers [ opcode * 25 + zend_vm_decode [ op -> op1_type ] * 5 + zend_vm_decode [ op -> op2_type ] ] ;	49719:2:1581600:1581706	407671	2	True				
ANR	407700	ArrayIndexing	zend_opcode_handlers [ opcode * 25 + zend_vm_decode [ op -> op1_type ] * 5 + zend_vm_decode [ op -> op2_type ] ]		407671	0					
ANR	407701	Identifier	zend_opcode_handlers		407671	0					
ANR	407702	AdditiveExpression	opcode * 25 + zend_vm_decode [ op -> op1_type ] * 5 + zend_vm_decode [ op -> op2_type ]		407671	1		+			
ANR	407703	MultiplicativeExpression	opcode * 25		407671	0		*			
ANR	407704	Identifier	opcode		407671	0					
ANR	407705	PrimaryExpression	25		407671	1					
ANR	407706	AdditiveExpression	zend_vm_decode [ op -> op1_type ] * 5 + zend_vm_decode [ op -> op2_type ]		407671	1		+			
ANR	407707	MultiplicativeExpression	zend_vm_decode [ op -> op1_type ] * 5		407671	0		*			
ANR	407708	ArrayIndexing	zend_vm_decode [ op -> op1_type ]		407671	0					
ANR	407709	Identifier	zend_vm_decode		407671	0					
ANR	407710	PtrMemberAccess	op -> op1_type		407671	1					
ANR	407711	Identifier	op		407671	0					
ANR	407712	Identifier	op1_type		407671	1					
ANR	407713	PrimaryExpression	5		407671	1					
ANR	407714	ArrayIndexing	zend_vm_decode [ op -> op2_type ]		407671	1					
ANR	407715	Identifier	zend_vm_decode		407671	0					
ANR	407716	PtrMemberAccess	op -> op2_type		407671	1					
ANR	407717	Identifier	op		407671	0					
ANR	407718	Identifier	op2_type		407671	1					
ANR	407719	ReturnType	static const void *		407671	1					
ANR	407720	Identifier	zend_vm_get_opcode_handler		407671	2					
ANR	407721	ParameterList	"zend_uchar opcode , const zend_op * op"		407671	3					
ANR	407722	Parameter	zend_uchar opcode	49698:46:1580867:1580883	407671	0	True				
ANR	407723	ParameterType	zend_uchar		407671	0					
ANR	407724	Identifier	opcode		407671	1					
ANR	407725	Parameter	const zend_op * op	49698:65:1580886:1580902	407671	1	True				
ANR	407726	ParameterType	const zend_op *		407671	0					
ANR	407727	Identifier	op		407671	1					
ANR	407728	CFGEntryNode	ENTRY		407671		True				
ANR	407729	CFGExitNode	EXIT		407671		True				
ANR	407730	Symbol	op		407671						
ANR	407731	Symbol	_VAR_CODE		407671						
ANR	407732	Symbol	* op		407671						
ANR	407733	Symbol	op -> op2_type		407671						
ANR	407734	Symbol	* zend_vm_decode		407671						
ANR	407735	Symbol	* * op -> op2_type		407671						
ANR	407736	Symbol	zend_opcode_handlers		407671						
ANR	407737	Symbol	* * op -> op1_type		407671						
ANR	407738	Symbol	opcode		407671						
ANR	407739	Symbol	* op -> op1_type		407671						
ANR	407740	Symbol	_CONST_CODE		407671						
ANR	407741	Symbol	* * op		407671						
ANR	407742	Symbol	_TMP_CODE		407671						
ANR	407743	Symbol	zend_vm_decode		407671						
ANR	407744	Symbol	_CV_CODE		407671						
ANR	407745	Symbol	* zend_opcode_handlers		407671						
ANR	407746	Symbol	* op -> op2_type		407671						
ANR	407747	Symbol	* * zend_vm_decode		407671						
ANR	407748	Symbol	* * * op		407671						
ANR	407749	Symbol	op -> op1_type		407671						
ANR	407750	Symbol	_UNUSED_CODE		407671						
ANR	407751	Symbol	* opcode		407671						
ANR	407752	Function	zend_vm_set_opcode_handler	49722:0:1581711:1581845							
ANR	407753	FunctionDef	zend_vm_set_opcode_handler (zend_op * op)		407752	0					
ANR	407754	CompoundStatement		49723:0:1581765:1581845	407752	0					
ANR	407755	ExpressionStatement	"op -> handler = zend_vm_get_opcode_handler ( zend_user_opcodes [ op -> opcode ] , op )"	49724:1:1581768:1581843	407752	0	True				
ANR	407756	AssignmentExpression	"op -> handler = zend_vm_get_opcode_handler ( zend_user_opcodes [ op -> opcode ] , op )"		407752	0		=			
ANR	407757	PtrMemberAccess	op -> handler		407752	0					
ANR	407758	Identifier	op		407752	0					
ANR	407759	Identifier	handler		407752	1					
ANR	407760	CallExpression	"zend_vm_get_opcode_handler ( zend_user_opcodes [ op -> opcode ] , op )"		407752	1					
ANR	407761	Callee	zend_vm_get_opcode_handler		407752	0					
ANR	407762	Identifier	zend_vm_get_opcode_handler		407752	0					
ANR	407763	ArgumentList	zend_user_opcodes [ op -> opcode ]		407752	1					
ANR	407764	Argument	zend_user_opcodes [ op -> opcode ]		407752	0					
ANR	407765	ArrayIndexing	zend_user_opcodes [ op -> opcode ]		407752	0					
ANR	407766	Identifier	zend_user_opcodes		407752	0					
ANR	407767	PtrMemberAccess	op -> opcode		407752	1					
ANR	407768	Identifier	op		407752	0					
ANR	407769	Identifier	opcode		407752	1					
ANR	407770	Argument	op		407752	1					
ANR	407771	Identifier	op		407752	0					
ANR	407772	ReturnType	ZEND_API void		407752	1					
ANR	407773	Identifier	zend_vm_set_opcode_handler		407752	2					
ANR	407774	ParameterList	zend_op * op		407752	3					
ANR	407775	Parameter	zend_op * op	49722:41:1581752:1581762	407752	0	True				
ANR	407776	ParameterType	zend_op *		407752	0					
ANR	407777	Identifier	op		407752	1					
ANR	407778	CFGEntryNode	ENTRY		407752		True				
ANR	407779	CFGExitNode	EXIT		407752		True				
ANR	407780	Symbol	op		407752						
ANR	407781	Symbol	op -> handler		407752						
ANR	407782	Symbol	zend_vm_get_opcode_handler		407752						
ANR	407783	Symbol	op -> opcode		407752						
ANR	407784	Symbol	* op		407752						
ANR	407785	Symbol	* op -> opcode		407752						
ANR	407786	Symbol	* zend_user_opcodes		407752						
ANR	407787	Symbol	zend_user_opcodes		407752						
ANR	407788	Symbol	* * op		407752						
ANR	407789	Function	zend_vm_call_opcode_handler	49727:0:1581848:1582713							
ANR	407790	FunctionDef	zend_vm_call_opcode_handler (zend_execute_data * ex)		407789	0					
ANR	407791	CompoundStatement		49728:0:1581912:1582713	407789	0					
ANR	407792	IdentifierDeclStatement	int ret ;	49729:1:1581915:1581922	407789	0	True				
ANR	407793	IdentifierDecl	ret		407789	0					
ANR	407794	IdentifierDeclType	int		407789	0					
ANR	407795	Identifier	ret		407789	1					
ANR	407796	IdentifierDeclStatement	const zend_op * orig_opline = opline ;	49731:1:1581954:1581989	407789	1	True				
ANR	407797	IdentifierDecl	* orig_opline = opline		407789	0					
ANR	407798	IdentifierDeclType	const zend_op *		407789	0					
ANR	407799	Identifier	orig_opline		407789	1					
ANR	407800	AssignmentExpression	* orig_opline = opline		407789	2		=			
ANR	407801	Identifier	opline		407789	0					
ANR	407802	Identifier	opline		407789	1					
ANR	407803	IdentifierDeclStatement	zend_execute_data * orig_execute_data = execute_data ;	49734:1:1582028:1582079	407789	2	True				
ANR	407804	IdentifierDecl	* orig_execute_data = execute_data		407789	0					
ANR	407805	IdentifierDeclType	zend_execute_data *		407789	0					
ANR	407806	Identifier	orig_execute_data		407789	1					
ANR	407807	AssignmentExpression	* orig_execute_data = execute_data		407789	2		=			
ANR	407808	Identifier	execute_data		407789	0					
ANR	407809	Identifier	execute_data		407789	1					
ANR	407810	ExpressionStatement	execute_data = ex	49735:1:1582082:1582099	407789	3	True				
ANR	407811	AssignmentExpression	execute_data = ex		407789	0		=			
ANR	407812	Identifier	execute_data		407789	0					
ANR	407813	Identifier	ex		407789	1					
ANR	407814	ExpressionStatement	LOAD_OPLINE ( )	49740:1:1582155:1582168	407789	4	True				
ANR	407815	CallExpression	LOAD_OPLINE ( )		407789	0					
ANR	407816	Callee	LOAD_OPLINE		407789	0					
ANR	407817	Identifier	LOAD_OPLINE		407789	0					
ANR	407818	ArgumentList			407789	1					
ANR	407819	ExpressionStatement	( ( opcode_handler_t ) OPLINE -> handler ) ( ZEND_OPCODE_HANDLER_ARGS_PASSTHRU )	49742:1:1582240:1582310	407789	5	True				
ANR	407820	CallExpression	( ( opcode_handler_t ) OPLINE -> handler ) ( ZEND_OPCODE_HANDLER_ARGS_PASSTHRU )		407789	0					
ANR	407821	Callee	( opcode_handler_t ) OPLINE -> handler		407789	0					
ANR	407822	CastExpression	( opcode_handler_t ) OPLINE -> handler		407789	0					
ANR	407823	CastTarget	opcode_handler_t		407789	0					
ANR	407824	PtrMemberAccess	OPLINE -> handler		407789	1					
ANR	407825	Identifier	OPLINE		407789	0					
ANR	407826	Identifier	handler		407789	1					
ANR	407827	ArgumentList	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		407789	1					
ANR	407828	Argument	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		407789	0					
ANR	407829	Identifier	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		407789	0					
ANR	407830	IfStatement	if ( EXPECTED ( opline ) )		407789	6					
ANR	407831	Condition	EXPECTED ( opline )	49743:5:1582317:1582332	407789	0	True				
ANR	407832	CallExpression	EXPECTED ( opline )		407789	0					
ANR	407833	Callee	EXPECTED		407789	0					
ANR	407834	Identifier	EXPECTED		407789	0					
ANR	407835	ArgumentList	opline		407789	1					
ANR	407836	Argument	opline		407789	0					
ANR	407837	Identifier	opline		407789	0					
ANR	407838	CompoundStatement		16:23:422:422	407789	1					
ANR	407839	ExpressionStatement	ret = execute_data != ex ? ( int ) ( execute_data -> prev_execute_data != ex ) + 1 : 0	49744:2:1582339:1582418	407789	0	True				
ANR	407840	AssignmentExpression	ret = execute_data != ex ? ( int ) ( execute_data -> prev_execute_data != ex ) + 1 : 0		407789	0		=			
ANR	407841	Identifier	ret		407789	0					
ANR	407842	ConditionalExpression	execute_data != ex ? ( int ) ( execute_data -> prev_execute_data != ex ) + 1 : 0		407789	1					
ANR	407843	Condition	execute_data != ex		407789	0					
ANR	407844	EqualityExpression	execute_data != ex		407789	0		!=			
ANR	407845	Identifier	execute_data		407789	0					
ANR	407846	Identifier	ex		407789	1					
ANR	407847	AdditiveExpression	( int ) ( execute_data -> prev_execute_data != ex ) + 1		407789	1		+			
ANR	407848	CastExpression	( int ) ( execute_data -> prev_execute_data != ex )		407789	0					
ANR	407849	CastTarget	int		407789	0					
ANR	407850	EqualityExpression	execute_data -> prev_execute_data != ex		407789	1		!=			
ANR	407851	PtrMemberAccess	execute_data -> prev_execute_data		407789	0					
ANR	407852	Identifier	execute_data		407789	0					
ANR	407853	Identifier	prev_execute_data		407789	1					
ANR	407854	Identifier	ex		407789	1					
ANR	407855	PrimaryExpression	1		407789	1					
ANR	407856	PrimaryExpression	0		407789	2					
ANR	407857	ExpressionStatement	SAVE_OPLINE ( )	49745:2:1582422:1582435	407789	1	True				
ANR	407858	CallExpression	SAVE_OPLINE ( )		407789	0					
ANR	407859	Callee	SAVE_OPLINE		407789	0					
ANR	407860	Identifier	SAVE_OPLINE		407789	0					
ANR	407861	ArgumentList			407789	1					
ANR	407862	ElseStatement	else		407789	0					
ANR	407863	CompoundStatement		19:8:532:532	407789	0					
ANR	407864	ExpressionStatement	ret = - 1	49747:2:1582449:1582457	407789	0	True				
ANR	407865	AssignmentExpression	ret = - 1		407789	0		=			
ANR	407866	Identifier	ret		407789	0					
ANR	407867	UnaryOperationExpression	- 1		407789	1					
ANR	407868	UnaryOperator	-		407789	0					
ANR	407869	PrimaryExpression	1		407789	1					
ANR	407870	ExpressionStatement	execute_data = orig_execute_data	49754:1:1582600:1582632	407789	7	True				
ANR	407871	AssignmentExpression	execute_data = orig_execute_data		407789	0		=			
ANR	407872	Identifier	execute_data		407789	0					
ANR	407873	Identifier	orig_execute_data		407789	1					
ANR	407874	ExpressionStatement	opline = orig_opline	49757:1:1582671:1582691	407789	8	True				
ANR	407875	AssignmentExpression	opline = orig_opline		407789	0		=			
ANR	407876	Identifier	opline		407789	0					
ANR	407877	Identifier	orig_opline		407789	1					
ANR	407878	ReturnStatement	return ret ;	49759:1:1582701:1582711	407789	9	True				
ANR	407879	Identifier	ret		407789	0					
ANR	407880	ReturnType	ZEND_API int		407789	1					
ANR	407881	Identifier	zend_vm_call_opcode_handler		407789	2					
ANR	407882	ParameterList	zend_execute_data * ex		407789	3					
ANR	407883	Parameter	zend_execute_data * ex	49727:41:1581889:1581909	407789	0	True				
ANR	407884	ParameterType	zend_execute_data *		407789	0					
ANR	407885	Identifier	ex		407789	1					
ANR	407886	CFGEntryNode	ENTRY		407789		True				
ANR	407887	CFGExitNode	EXIT		407789		True				
ANR	407888	Symbol	ret		407789						
ANR	407889	Symbol	orig_execute_data		407789						
ANR	407890	Symbol	ex		407789						
ANR	407891	Symbol	opline		407789						
ANR	407892	Symbol	execute_data -> prev_execute_data		407789						
ANR	407893	Symbol	* execute_data		407789						
ANR	407894	Symbol	ZEND_OPCODE_HANDLER_ARGS_PASSTHRU		407789						
ANR	407895	Symbol	orig_opline		407789						
ANR	407896	Symbol	OPLINE		407789						
ANR	407897	Symbol	EXPECTED		407789						
ANR	407898	Symbol	execute_data		407789						
