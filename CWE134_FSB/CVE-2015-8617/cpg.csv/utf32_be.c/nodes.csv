command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3820430	File	data/converged/CVE-2015-8617_php-src/utf32_be.c								
ANR	3820431	Function	utf32be_is_mbc_newline	38:0:1685:2178							
ANR	3820432	FunctionDef	"utf32be_is_mbc_newline (const UChar * p , const UChar * end)"		3820431	0					
ANR	3820433	CompoundStatement		40:0:1753:2178	3820431	0					
ANR	3820434	IfStatement	if ( p + 3 < end )		3820431	0					
ANR	3820435	Condition	p + 3 < end	41:6:1761:1771	3820431	0	True				
ANR	3820436	RelationalExpression	p + 3 < end		3820431	0		<			
ANR	3820437	AdditiveExpression	p + 3		3820431	0		+			
ANR	3820438	Identifier	p		3820431	0					
ANR	3820439	PrimaryExpression	3		3820431	1					
ANR	3820440	Identifier	end		3820431	1					
ANR	3820441	CompoundStatement		2:19:20:20	3820431	1					
ANR	3820442	IfStatement	if ( * ( p + 3 ) == 0x0a && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0 )		3820431	0					
ANR	3820443	Condition	* ( p + 3 ) == 0x0a && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0	42:8:1784:1838	3820431	0	True				
ANR	3820444	AndExpression	* ( p + 3 ) == 0x0a && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		3820431	0		&&			
ANR	3820445	EqualityExpression	* ( p + 3 ) == 0x0a		3820431	0		==			
ANR	3820446	UnaryOperationExpression	* ( p + 3 )		3820431	0					
ANR	3820447	UnaryOperator	*		3820431	0					
ANR	3820448	AdditiveExpression	p + 3		3820431	1		+			
ANR	3820449	Identifier	p		3820431	0					
ANR	3820450	PrimaryExpression	3		3820431	1					
ANR	3820451	PrimaryExpression	0x0a		3820431	1					
ANR	3820452	AndExpression	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		3820431	1		&&			
ANR	3820453	EqualityExpression	* ( p + 2 ) == 0		3820431	0		==			
ANR	3820454	UnaryOperationExpression	* ( p + 2 )		3820431	0					
ANR	3820455	UnaryOperator	*		3820431	0					
ANR	3820456	AdditiveExpression	p + 2		3820431	1		+			
ANR	3820457	Identifier	p		3820431	0					
ANR	3820458	PrimaryExpression	2		3820431	1					
ANR	3820459	PrimaryExpression	0		3820431	1					
ANR	3820460	AndExpression	* ( p + 1 ) == 0 && * p == 0		3820431	1		&&			
ANR	3820461	EqualityExpression	* ( p + 1 ) == 0		3820431	0		==			
ANR	3820462	UnaryOperationExpression	* ( p + 1 )		3820431	0					
ANR	3820463	UnaryOperator	*		3820431	0					
ANR	3820464	AdditiveExpression	p + 1		3820431	1		+			
ANR	3820465	Identifier	p		3820431	0					
ANR	3820466	PrimaryExpression	1		3820431	1					
ANR	3820467	PrimaryExpression	0		3820431	1					
ANR	3820468	EqualityExpression	* p == 0		3820431	1		==			
ANR	3820469	UnaryOperationExpression	* p		3820431	0					
ANR	3820470	UnaryOperator	*		3820431	0					
ANR	3820471	Identifier	p		3820431	1					
ANR	3820472	PrimaryExpression	0		3820431	1					
ANR	3820473	ReturnStatement	return 1 ;	43:6:1847:1855	3820431	1	True				
ANR	3820474	PrimaryExpression	1		3820431	0					
ANR	3820475	Statement	if	45:4:1901:1902	3820431	1	True				
ANR	3820476	Statement	(	45:7:1904:1904	3820431	2	True				
ANR	3820477	Statement	(	45:8:1905:1905	3820431	3	True				
ANR	3820478	Statement	*	47:2:1945:1945	3820431	4	True				
ANR	3820479	Statement	(	47:3:1946:1946	3820431	5	True				
ANR	3820480	Statement	p	47:4:1947:1947	3820431	6	True				
ANR	3820481	Statement	+	47:5:1948:1948	3820431	7	True				
ANR	3820482	Statement	3	47:6:1949:1949	3820431	8	True				
ANR	3820483	Statement	)	47:7:1950:1950	3820431	9	True				
ANR	3820484	Statement	==	47:9:1952:1953	3820431	10	True				
ANR	3820485	Statement	0x0d	47:12:1955:1958	3820431	11	True				
ANR	3820486	Statement	||	47:17:1960:1961	3820431	12	True				
ANR	3820487	Statement	*	49:2:1972:1972	3820431	13	True				
ANR	3820488	Statement	(	49:3:1973:1973	3820431	14	True				
ANR	3820489	Statement	p	49:4:1974:1974	3820431	15	True				
ANR	3820490	Statement	+	49:5:1975:1975	3820431	16	True				
ANR	3820491	Statement	3	49:6:1976:1976	3820431	17	True				
ANR	3820492	Statement	)	49:7:1977:1977	3820431	18	True				
ANR	3820493	Statement	==	49:9:1979:1980	3820431	19	True				
ANR	3820494	Statement	0x85	49:12:1982:1985	3820431	20	True				
ANR	3820495	Statement	)	49:16:1986:1986	3820431	21	True				
ANR	3820496	Statement	&&	50:1:1989:1990	3820431	22	True				
ANR	3820497	Statement	*	50:4:1992:1992	3820431	23	True				
ANR	3820498	Statement	(	50:5:1993:1993	3820431	24	True				
ANR	3820499	Statement	p	50:6:1994:1994	3820431	25	True				
ANR	3820500	Statement	+	50:7:1995:1995	3820431	26	True				
ANR	3820501	Statement	2	50:8:1996:1996	3820431	27	True				
ANR	3820502	Statement	)	50:9:1997:1997	3820431	28	True				
ANR	3820503	Statement	==	50:11:1999:2000	3820431	29	True				
ANR	3820504	Statement	0	50:14:2002:2002	3820431	30	True				
ANR	3820505	Statement	&&	50:16:2004:2005	3820431	31	True				
ANR	3820506	Statement	*	50:19:2007:2007	3820431	32	True				
ANR	3820507	Statement	(	50:20:2008:2008	3820431	33	True				
ANR	3820508	Statement	p	50:21:2009:2009	3820431	34	True				
ANR	3820509	Statement	+	50:22:2010:2010	3820431	35	True				
ANR	3820510	Statement	1	50:23:2011:2011	3820431	36	True				
ANR	3820511	Statement	)	50:24:2012:2012	3820431	37	True				
ANR	3820512	Statement	==	50:26:2014:2015	3820431	38	True				
ANR	3820513	Statement	0	50:29:2017:2017	3820431	39	True				
ANR	3820514	Statement	&&	50:31:2019:2020	3820431	40	True				
ANR	3820515	Statement	*	50:34:2022:2022	3820431	41	True				
ANR	3820516	Statement	p	50:35:2023:2023	3820431	42	True				
ANR	3820517	Statement	==	50:37:2025:2026	3820431	43	True				
ANR	3820518	Statement	0x00	50:40:2028:2031	3820431	44	True				
ANR	3820519	Statement	)	50:44:2032:2032	3820431	45	True				
ANR	3820520	ReturnStatement	return 1 ;	51:6:2040:2048	3820431	46	True				
ANR	3820521	PrimaryExpression	1		3820431	0					
ANR	3820522	IfStatement	if ( * ( p + 2 ) == 0x20 && ( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0 )		3820431	47					
ANR	3820523	Condition	* ( p + 2 ) == 0x20 && ( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0	52:8:2058:2136	3820431	0	True				
ANR	3820524	AndExpression	* ( p + 2 ) == 0x20 && ( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0		3820431	0		&&			
ANR	3820525	EqualityExpression	* ( p + 2 ) == 0x20		3820431	0		==			
ANR	3820526	UnaryOperationExpression	* ( p + 2 )		3820431	0					
ANR	3820527	UnaryOperator	*		3820431	0					
ANR	3820528	AdditiveExpression	p + 2		3820431	1		+			
ANR	3820529	Identifier	p		3820431	0					
ANR	3820530	PrimaryExpression	2		3820431	1					
ANR	3820531	PrimaryExpression	0x20		3820431	1					
ANR	3820532	AndExpression	( * ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28 ) && * ( p + 1 ) == 0 && * p == 0		3820431	1		&&			
ANR	3820533	OrExpression	* ( p + 3 ) == 0x29 || * ( p + 3 ) == 0x28		3820431	0		||			
ANR	3820534	EqualityExpression	* ( p + 3 ) == 0x29		3820431	0		==			
ANR	3820535	UnaryOperationExpression	* ( p + 3 )		3820431	0					
ANR	3820536	UnaryOperator	*		3820431	0					
ANR	3820537	AdditiveExpression	p + 3		3820431	1		+			
ANR	3820538	Identifier	p		3820431	0					
ANR	3820539	PrimaryExpression	3		3820431	1					
ANR	3820540	PrimaryExpression	0x29		3820431	1					
ANR	3820541	EqualityExpression	* ( p + 3 ) == 0x28		3820431	1		==			
ANR	3820542	UnaryOperationExpression	* ( p + 3 )		3820431	0					
ANR	3820543	UnaryOperator	*		3820431	0					
ANR	3820544	AdditiveExpression	p + 3		3820431	1		+			
ANR	3820545	Identifier	p		3820431	0					
ANR	3820546	PrimaryExpression	3		3820431	1					
ANR	3820547	PrimaryExpression	0x28		3820431	1					
ANR	3820548	AndExpression	* ( p + 1 ) == 0 && * p == 0		3820431	1		&&			
ANR	3820549	EqualityExpression	* ( p + 1 ) == 0		3820431	0		==			
ANR	3820550	UnaryOperationExpression	* ( p + 1 )		3820431	0					
ANR	3820551	UnaryOperator	*		3820431	0					
ANR	3820552	AdditiveExpression	p + 1		3820431	1		+			
ANR	3820553	Identifier	p		3820431	0					
ANR	3820554	PrimaryExpression	1		3820431	1					
ANR	3820555	PrimaryExpression	0		3820431	1					
ANR	3820556	EqualityExpression	* p == 0		3820431	1		==			
ANR	3820557	UnaryOperationExpression	* p		3820431	0					
ANR	3820558	UnaryOperator	*		3820431	0					
ANR	3820559	Identifier	p		3820431	1					
ANR	3820560	PrimaryExpression	0		3820431	1					
ANR	3820561	ReturnStatement	return 1 ;	54:6:2145:2153	3820431	1	True				
ANR	3820562	PrimaryExpression	1		3820431	0					
ANR	3820563	ReturnStatement	return 0 ;	57:2:2168:2176	3820431	1	True				
ANR	3820564	PrimaryExpression	0		3820431	0					
ANR	3820565	ReturnType	static int		3820431	1					
ANR	3820566	Identifier	utf32be_is_mbc_newline		3820431	2					
ANR	3820567	ParameterList	"const UChar * p , const UChar * end"		3820431	3					
ANR	3820568	Parameter	const UChar * p	39:23:1719:1732	3820431	0	True				
ANR	3820569	ParameterType	const UChar *		3820431	0					
ANR	3820570	Identifier	p		3820431	1					
ANR	3820571	Parameter	const UChar * end	39:39:1735:1750	3820431	1	True				
ANR	3820572	ParameterType	const UChar *		3820431	0					
ANR	3820573	Identifier	end		3820431	1					
ANR	3820574	CFGEntryNode	ENTRY		3820431		True				
ANR	3820575	CFGExitNode	EXIT		3820431		True				
ANR	3820576	Symbol	p		3820431						
ANR	3820577	Symbol	* ( p + 2 )		3820431						
ANR	3820578	Symbol	* ( p + 3 )		3820431						
ANR	3820579	Symbol	end		3820431						
ANR	3820580	Symbol	* p		3820431						
ANR	3820581	Symbol	* ( p + 1 )		3820431						
ANR	3820582	Function	utf32be_code_to_mbclen	66:0:2348:2427							
ANR	3820583	FunctionDef	utf32be_code_to_mbclen (OnigCodePoint code ARG_UNUSED)		3820582	0					
ANR	3820584	CompoundStatement		68:0:2413:2427	3820582	0					
ANR	3820585	ReturnStatement	return 4 ;	69:2:2417:2425	3820582	0	True				
ANR	3820586	PrimaryExpression	4		3820582	0					
ANR	3820587	ReturnType	static int		3820582	1					
ANR	3820588	Identifier	utf32be_code_to_mbclen		3820582	2					
ANR	3820589	ParameterList	OnigCodePoint code ARG_UNUSED		3820582	3					
ANR	3820590	Parameter	OnigCodePoint code ARG_UNUSED	67:23:2382:2410	3820582	0	True				
ANR	3820591	ParameterType	OnigCodePoint code		3820582	0					
ANR	3820592	Identifier	ARG_UNUSED		3820582	1					
ANR	3820593	CFGEntryNode	ENTRY		3820582		True				
ANR	3820594	CFGExitNode	EXIT		3820582		True				
ANR	3820595	Symbol	ARG_UNUSED		3820582						
ANR	3820596	Function	utf32be_code_to_mbc	72:0:2430:2694							
ANR	3820597	FunctionDef	"utf32be_code_to_mbc (OnigCodePoint code , UChar * buf)"		3820596	0					
ANR	3820598	CompoundStatement		74:0:2493:2694	3820596	0					
ANR	3820599	IdentifierDeclStatement	UChar * p = buf ;	75:2:2497:2511	3820596	0	True				
ANR	3820600	IdentifierDecl	* p = buf		3820596	0					
ANR	3820601	IdentifierDeclType	UChar *		3820596	0					
ANR	3820602	Identifier	p		3820596	1					
ANR	3820603	AssignmentExpression	* p = buf		3820596	2		=			
ANR	3820604	Identifier	buf		3820596	0					
ANR	3820605	Identifier	buf		3820596	1					
ANR	3820606	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )	77:2:2516:2557	3820596	1	True				
ANR	3820607	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )		3820596	0		=			
ANR	3820608	UnaryOperationExpression	* p ++		3820596	0					
ANR	3820609	UnaryOperator	*		3820596	0					
ANR	3820610	PostIncDecOperationExpression	p ++		3820596	1					
ANR	3820611	Identifier	p		3820596	0					
ANR	3820612	IncDec	++		3820596	1					
ANR	3820613	CastExpression	( UChar ) ( ( code & 0xff000000 ) >> 24 )		3820596	1					
ANR	3820614	CastTarget	UChar		3820596	0					
ANR	3820615	ShiftExpression	( code & 0xff000000 ) >> 24		3820596	1		>>			
ANR	3820616	BitAndExpression	code & 0xff000000		3820596	0		&			
ANR	3820617	Identifier	code		3820596	0					
ANR	3820618	PrimaryExpression	0xff000000		3820596	1					
ANR	3820619	PrimaryExpression	24		3820596	1					
ANR	3820620	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )	78:2:2561:2602	3820596	2	True				
ANR	3820621	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )		3820596	0		=			
ANR	3820622	UnaryOperationExpression	* p ++		3820596	0					
ANR	3820623	UnaryOperator	*		3820596	0					
ANR	3820624	PostIncDecOperationExpression	p ++		3820596	1					
ANR	3820625	Identifier	p		3820596	0					
ANR	3820626	IncDec	++		3820596	1					
ANR	3820627	CastExpression	( UChar ) ( ( code & 0xff0000 ) >> 16 )		3820596	1					
ANR	3820628	CastTarget	UChar		3820596	0					
ANR	3820629	ShiftExpression	( code & 0xff0000 ) >> 16		3820596	1		>>			
ANR	3820630	BitAndExpression	code & 0xff0000		3820596	0		&			
ANR	3820631	Identifier	code		3820596	0					
ANR	3820632	PrimaryExpression	0xff0000		3820596	1					
ANR	3820633	PrimaryExpression	16		3820596	1					
ANR	3820634	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )	79:2:2606:2647	3820596	3	True				
ANR	3820635	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )		3820596	0		=			
ANR	3820636	UnaryOperationExpression	* p ++		3820596	0					
ANR	3820637	UnaryOperator	*		3820596	0					
ANR	3820638	PostIncDecOperationExpression	p ++		3820596	1					
ANR	3820639	Identifier	p		3820596	0					
ANR	3820640	IncDec	++		3820596	1					
ANR	3820641	CastExpression	( UChar ) ( ( code & 0xff00 ) >> 8 )		3820596	1					
ANR	3820642	CastTarget	UChar		3820596	0					
ANR	3820643	ShiftExpression	( code & 0xff00 ) >> 8		3820596	1		>>			
ANR	3820644	BitAndExpression	code & 0xff00		3820596	0		&			
ANR	3820645	Identifier	code		3820596	0					
ANR	3820646	PrimaryExpression	0xff00		3820596	1					
ANR	3820647	PrimaryExpression	8		3820596	1					
ANR	3820648	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	80:2:2651:2680	3820596	4	True				
ANR	3820649	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		3820596	0		=			
ANR	3820650	UnaryOperationExpression	* p ++		3820596	0					
ANR	3820651	UnaryOperator	*		3820596	0					
ANR	3820652	PostIncDecOperationExpression	p ++		3820596	1					
ANR	3820653	Identifier	p		3820596	0					
ANR	3820654	IncDec	++		3820596	1					
ANR	3820655	CastExpression	( UChar ) ( code & 0xff )		3820596	1					
ANR	3820656	CastTarget	UChar		3820596	0					
ANR	3820657	BitAndExpression	code & 0xff		3820596	1		&			
ANR	3820658	Identifier	code		3820596	0					
ANR	3820659	PrimaryExpression	0xff		3820596	1					
ANR	3820660	ReturnStatement	return 4 ;	81:2:2684:2692	3820596	5	True				
ANR	3820661	PrimaryExpression	4		3820596	0					
ANR	3820662	ReturnType	static int		3820596	1					
ANR	3820663	Identifier	utf32be_code_to_mbc		3820596	2					
ANR	3820664	ParameterList	"OnigCodePoint code , UChar * buf"		3820596	3					
ANR	3820665	Parameter	OnigCodePoint code	73:20:2461:2478	3820596	0	True				
ANR	3820666	ParameterType	OnigCodePoint		3820596	0					
ANR	3820667	Identifier	code		3820596	1					
ANR	3820668	Parameter	UChar * buf	73:40:2481:2490	3820596	1	True				
ANR	3820669	ParameterType	UChar *		3820596	0					
ANR	3820670	Identifier	buf		3820596	1					
ANR	3820671	CFGEntryNode	ENTRY		3820596		True				
ANR	3820672	CFGExitNode	EXIT		3820596		True				
ANR	3820673	Symbol	p		3820596						
ANR	3820674	Symbol	buf		3820596						
ANR	3820675	Symbol	code		3820596						
ANR	3820676	Symbol	* p ++		3820596						
ANR	3820677	Function	utf32be_mbc_case_fold	84:0:2697:3365							
ANR	3820678	FunctionDef	"utf32be_mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		3820677	0					
ANR	3820679	CompoundStatement		87:0:2810:3365	3820677	0					
ANR	3820680	IdentifierDeclStatement	const UChar * p = * pp ;	88:2:2814:2834	3820677	0	True				
ANR	3820681	IdentifierDecl	* p = * pp		3820677	0					
ANR	3820682	IdentifierDeclType	const UChar *		3820677	0					
ANR	3820683	Identifier	p		3820677	1					
ANR	3820684	AssignmentExpression	* p = * pp		3820677	2		=			
ANR	3820685	Identifier	p		3820677	0					
ANR	3820686	UnaryOperationExpression	* pp		3820677	1					
ANR	3820687	UnaryOperator	*		3820677	0					
ANR	3820688	Identifier	pp		3820677	1					
ANR	3820689	IfStatement	if ( ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) ) && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0 )		3820677	1					
ANR	3820690	Condition	ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) ) && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0	90:6:2843:2912	3820677	0	True				
ANR	3820691	AndExpression	ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) ) && * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		3820677	0		&&			
ANR	3820692	CallExpression	ONIGENC_IS_ASCII_CODE ( * ( p + 3 ) )		3820677	0					
ANR	3820693	Callee	ONIGENC_IS_ASCII_CODE		3820677	0					
ANR	3820694	Identifier	ONIGENC_IS_ASCII_CODE		3820677	0					
ANR	3820695	ArgumentList	* ( p + 3 )		3820677	1					
ANR	3820696	Argument	* ( p + 3 )		3820677	0					
ANR	3820697	UnaryOperationExpression	* ( p + 3 )		3820677	0					
ANR	3820698	UnaryOperator	*		3820677	0					
ANR	3820699	AdditiveExpression	p + 3		3820677	1		+			
ANR	3820700	Identifier	p		3820677	0					
ANR	3820701	PrimaryExpression	3		3820677	1					
ANR	3820702	AndExpression	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		3820677	1		&&			
ANR	3820703	EqualityExpression	* ( p + 2 ) == 0		3820677	0		==			
ANR	3820704	UnaryOperationExpression	* ( p + 2 )		3820677	0					
ANR	3820705	UnaryOperator	*		3820677	0					
ANR	3820706	AdditiveExpression	p + 2		3820677	1		+			
ANR	3820707	Identifier	p		3820677	0					
ANR	3820708	PrimaryExpression	2		3820677	1					
ANR	3820709	PrimaryExpression	0		3820677	1					
ANR	3820710	AndExpression	* ( p + 1 ) == 0 && * p == 0		3820677	1		&&			
ANR	3820711	EqualityExpression	* ( p + 1 ) == 0		3820677	0		==			
ANR	3820712	UnaryOperationExpression	* ( p + 1 )		3820677	0					
ANR	3820713	UnaryOperator	*		3820677	0					
ANR	3820714	AdditiveExpression	p + 1		3820677	1		+			
ANR	3820715	Identifier	p		3820677	0					
ANR	3820716	PrimaryExpression	1		3820677	1					
ANR	3820717	PrimaryExpression	0		3820677	1					
ANR	3820718	EqualityExpression	* p == 0		3820677	1		==			
ANR	3820719	UnaryOperationExpression	* p		3820677	0					
ANR	3820720	UnaryOperator	*		3820677	0					
ANR	3820721	Identifier	p		3820677	1					
ANR	3820722	PrimaryExpression	0		3820677	1					
ANR	3820723	CompoundStatement		4:78:104:104	3820677	1					
ANR	3820724	ExpressionStatement	* fold ++ = 0	91:4:2921:2932	3820677	0	True				
ANR	3820725	AssignmentExpression	* fold ++ = 0		3820677	0		=			
ANR	3820726	UnaryOperationExpression	* fold ++		3820677	0					
ANR	3820727	UnaryOperator	*		3820677	0					
ANR	3820728	PostIncDecOperationExpression	fold ++		3820677	1					
ANR	3820729	Identifier	fold		3820677	0					
ANR	3820730	IncDec	++		3820677	1					
ANR	3820731	PrimaryExpression	0		3820677	1					
ANR	3820732	ExpressionStatement	* fold ++ = 0	92:4:2938:2949	3820677	1	True				
ANR	3820733	AssignmentExpression	* fold ++ = 0		3820677	0		=			
ANR	3820734	UnaryOperationExpression	* fold ++		3820677	0					
ANR	3820735	UnaryOperator	*		3820677	0					
ANR	3820736	PostIncDecOperationExpression	fold ++		3820677	1					
ANR	3820737	Identifier	fold		3820677	0					
ANR	3820738	IncDec	++		3820677	1					
ANR	3820739	PrimaryExpression	0		3820677	1					
ANR	3820740	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		3820677	2					
ANR	3820741	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	95:8:3003:3047	3820677	0	True				
ANR	3820742	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		3820677	0		!=			
ANR	3820743	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		3820677	0		&			
ANR	3820744	Identifier	flag		3820677	0					
ANR	3820745	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		3820677	1					
ANR	3820746	PrimaryExpression	0		3820677	1					
ANR	3820747	CompoundStatement		9:55:239:239	3820677	1					
ANR	3820748	IfStatement	if ( * ( p + 3 ) == 0x49 )		3820677	0					
ANR	3820749	Condition	* ( p + 3 ) == 0x49	96:10:3062:3075	3820677	0	True				
ANR	3820750	EqualityExpression	* ( p + 3 ) == 0x49		3820677	0		==			
ANR	3820751	UnaryOperationExpression	* ( p + 3 )		3820677	0					
ANR	3820752	UnaryOperator	*		3820677	0					
ANR	3820753	AdditiveExpression	p + 3		3820677	1		+			
ANR	3820754	Identifier	p		3820677	0					
ANR	3820755	PrimaryExpression	3		3820677	1					
ANR	3820756	PrimaryExpression	0x49		3820677	1					
ANR	3820757	CompoundStatement		10:26:267:267	3820677	1					
ANR	3820758	ExpressionStatement	* fold ++ = 0x01	97:1:3081:3095	3820677	0	True				
ANR	3820759	AssignmentExpression	* fold ++ = 0x01		3820677	0		=			
ANR	3820760	UnaryOperationExpression	* fold ++		3820677	0					
ANR	3820761	UnaryOperator	*		3820677	0					
ANR	3820762	PostIncDecOperationExpression	fold ++		3820677	1					
ANR	3820763	Identifier	fold		3820677	0					
ANR	3820764	IncDec	++		3820677	1					
ANR	3820765	PrimaryExpression	0x01		3820677	1					
ANR	3820766	ExpressionStatement	* fold = 0x31	98:1:3098:3112	3820677	1	True				
ANR	3820767	AssignmentExpression	* fold = 0x31		3820677	0		=			
ANR	3820768	UnaryOperationExpression	* fold		3820677	0					
ANR	3820769	UnaryOperator	*		3820677	0					
ANR	3820770	Identifier	fold		3820677	1					
ANR	3820771	PrimaryExpression	0x31		3820677	1					
ANR	3820772	ExpressionStatement	( * pp ) += 4	99:1:3115:3125	3820677	2	True				
ANR	3820773	AssignmentExpression	( * pp ) += 4		3820677	0		+=			
ANR	3820774	UnaryOperationExpression	* pp		3820677	0					
ANR	3820775	UnaryOperator	*		3820677	0					
ANR	3820776	Identifier	pp		3820677	1					
ANR	3820777	PrimaryExpression	4		3820677	1					
ANR	3820778	ReturnStatement	return 4 ;	100:1:3128:3136	3820677	3	True				
ANR	3820779	PrimaryExpression	4		3820677	0					
ANR	3820780	ExpressionStatement	* fold ++ = 0	105:4:3164:3175	3820677	3	True				
ANR	3820781	AssignmentExpression	* fold ++ = 0		3820677	0		=			
ANR	3820782	UnaryOperationExpression	* fold ++		3820677	0					
ANR	3820783	UnaryOperator	*		3820677	0					
ANR	3820784	PostIncDecOperationExpression	fold ++		3820677	1					
ANR	3820785	Identifier	fold		3820677	0					
ANR	3820786	IncDec	++		3820677	1					
ANR	3820787	PrimaryExpression	0		3820677	1					
ANR	3820788	ExpressionStatement	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * ( p + 3 ) )	106:4:3181:3231	3820677	4	True				
ANR	3820789	AssignmentExpression	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * ( p + 3 ) )		3820677	0		=			
ANR	3820790	UnaryOperationExpression	* fold		3820677	0					
ANR	3820791	UnaryOperator	*		3820677	0					
ANR	3820792	Identifier	fold		3820677	1					
ANR	3820793	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * ( p + 3 ) )		3820677	1					
ANR	3820794	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3820677	0					
ANR	3820795	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3820677	0					
ANR	3820796	ArgumentList	* ( p + 3 )		3820677	1					
ANR	3820797	Argument	* ( p + 3 )		3820677	0					
ANR	3820798	UnaryOperationExpression	* ( p + 3 )		3820677	0					
ANR	3820799	UnaryOperator	*		3820677	0					
ANR	3820800	AdditiveExpression	p + 3		3820677	1		+			
ANR	3820801	Identifier	p		3820677	0					
ANR	3820802	PrimaryExpression	3		3820677	1					
ANR	3820803	ExpressionStatement	* pp += 4	107:4:3237:3245	3820677	5	True				
ANR	3820804	AssignmentExpression	* pp += 4		3820677	0		+=			
ANR	3820805	UnaryOperationExpression	* pp		3820677	0					
ANR	3820806	UnaryOperator	*		3820677	0					
ANR	3820807	Identifier	pp		3820677	1					
ANR	3820808	PrimaryExpression	4		3820677	1					
ANR	3820809	ReturnStatement	return 4 ;	108:4:3251:3259	3820677	6	True				
ANR	3820810	PrimaryExpression	4		3820677	0					
ANR	3820811	ElseStatement	else		3820677	0					
ANR	3820812	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_BE , flag , pp , end , fold ) ;"	111:4:3276:3363	3820677	0	True				
ANR	3820813	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_BE , flag , pp , end , fold )"		3820677	0					
ANR	3820814	Callee	onigenc_unicode_mbc_case_fold		3820677	0					
ANR	3820815	Identifier	onigenc_unicode_mbc_case_fold		3820677	0					
ANR	3820816	ArgumentList	ONIG_ENCODING_UTF32_BE		3820677	1					
ANR	3820817	Argument	ONIG_ENCODING_UTF32_BE		3820677	0					
ANR	3820818	Identifier	ONIG_ENCODING_UTF32_BE		3820677	0					
ANR	3820819	Argument	flag		3820677	1					
ANR	3820820	Identifier	flag		3820677	0					
ANR	3820821	Argument	pp		3820677	2					
ANR	3820822	Identifier	pp		3820677	0					
ANR	3820823	Argument	end		3820677	3					
ANR	3820824	Identifier	end		3820677	0					
ANR	3820825	Argument	fold		3820677	4					
ANR	3820826	Identifier	fold		3820677	0					
ANR	3820827	ReturnType	static int		3820677	1					
ANR	3820828	Identifier	utf32be_mbc_case_fold		3820677	2					
ANR	3820829	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		3820677	3					
ANR	3820830	Parameter	OnigCaseFoldType flag	85:22:2730:2750	3820677	0	True				
ANR	3820831	ParameterType	OnigCaseFoldType		3820677	0					
ANR	3820832	Identifier	flag		3820677	1					
ANR	3820833	Parameter	const UChar * * pp	86:8:2761:2776	3820677	1	True				
ANR	3820834	ParameterType	const UChar * *		3820677	0					
ANR	3820835	Identifier	pp		3820677	1					
ANR	3820836	Parameter	const UChar * end	86:26:2779:2794	3820677	2	True				
ANR	3820837	ParameterType	const UChar *		3820677	0					
ANR	3820838	Identifier	end		3820677	1					
ANR	3820839	Parameter	UChar * fold	86:44:2797:2807	3820677	3	True				
ANR	3820840	ParameterType	UChar *		3820677	0					
ANR	3820841	Identifier	fold		3820677	1					
ANR	3820842	CFGEntryNode	ENTRY		3820677		True				
ANR	3820843	CFGExitNode	EXIT		3820677		True				
ANR	3820844	Symbol	pp		3820677						
ANR	3820845	Symbol	ONIGENC_IS_ASCII_CODE		3820677						
ANR	3820846	Symbol	flag		3820677						
ANR	3820847	Symbol	* ( p + 2 )		3820677						
ANR	3820848	Symbol	* pp		3820677						
ANR	3820849	Symbol	* ( p + 3 )		3820677						
ANR	3820850	Symbol	* fold		3820677						
ANR	3820851	Symbol	* ( p + 1 )		3820677						
ANR	3820852	Symbol	* fold ++		3820677						
ANR	3820853	Symbol	p		3820677						
ANR	3820854	Symbol	fold		3820677						
ANR	3820855	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3820677						
ANR	3820856	Symbol	ONIG_ENCODING_UTF32_BE		3820677						
ANR	3820857	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		3820677						
ANR	3820858	Symbol	end		3820677						
ANR	3820859	Symbol	* p		3820677						
ANR	3820860	Symbol	onigenc_unicode_mbc_case_fold		3820677						
ANR	3820861	Function	utf32be_is_mbc_ambiguous	116:0:3374:4058							
ANR	3820862	FunctionDef	"utf32be_is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		3820861	0					
ANR	3820863	CompoundStatement		118:0:3469:4058	3820861	0					
ANR	3820864	IdentifierDeclStatement	const UChar * p = * pp ;	119:2:3473:3493	3820861	0	True				
ANR	3820865	IdentifierDecl	* p = * pp		3820861	0					
ANR	3820866	IdentifierDeclType	const UChar *		3820861	0					
ANR	3820867	Identifier	p		3820861	1					
ANR	3820868	AssignmentExpression	* p = * pp		3820861	2		=			
ANR	3820869	Identifier	p		3820861	0					
ANR	3820870	UnaryOperationExpression	* pp		3820861	1					
ANR	3820871	UnaryOperator	*		3820861	0					
ANR	3820872	Identifier	pp		3820861	1					
ANR	3820873	ExpressionStatement	( * pp ) += 4	121:2:3498:3508	3820861	1	True				
ANR	3820874	AssignmentExpression	( * pp ) += 4		3820861	0		+=			
ANR	3820875	UnaryOperationExpression	* pp		3820861	0					
ANR	3820876	UnaryOperator	*		3820861	0					
ANR	3820877	Identifier	pp		3820861	1					
ANR	3820878	PrimaryExpression	4		3820861	1					
ANR	3820879	IfStatement	if ( * ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0 )		3820861	2					
ANR	3820880	Condition	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0	123:6:3517:3553	3820861	0	True				
ANR	3820881	AndExpression	* ( p + 2 ) == 0 && * ( p + 1 ) == 0 && * p == 0		3820861	0		&&			
ANR	3820882	EqualityExpression	* ( p + 2 ) == 0		3820861	0		==			
ANR	3820883	UnaryOperationExpression	* ( p + 2 )		3820861	0					
ANR	3820884	UnaryOperator	*		3820861	0					
ANR	3820885	AdditiveExpression	p + 2		3820861	1		+			
ANR	3820886	Identifier	p		3820861	0					
ANR	3820887	PrimaryExpression	2		3820861	1					
ANR	3820888	PrimaryExpression	0		3820861	1					
ANR	3820889	AndExpression	* ( p + 1 ) == 0 && * p == 0		3820861	1		&&			
ANR	3820890	EqualityExpression	* ( p + 1 ) == 0		3820861	0		==			
ANR	3820891	UnaryOperationExpression	* ( p + 1 )		3820861	0					
ANR	3820892	UnaryOperator	*		3820861	0					
ANR	3820893	AdditiveExpression	p + 1		3820861	1		+			
ANR	3820894	Identifier	p		3820861	0					
ANR	3820895	PrimaryExpression	1		3820861	1					
ANR	3820896	PrimaryExpression	0		3820861	1					
ANR	3820897	EqualityExpression	* p == 0		3820861	1		==			
ANR	3820898	UnaryOperationExpression	* p		3820861	0					
ANR	3820899	UnaryOperator	*		3820861	0					
ANR	3820900	Identifier	p		3820861	1					
ANR	3820901	PrimaryExpression	0		3820861	1					
ANR	3820902	CompoundStatement		7:4:92:100	3820861	1					
ANR	3820903	IdentifierDeclStatement	"int c , v ;"	124:4:3562:3570	3820861	0	True				
ANR	3820904	IdentifierDecl	c		3820861	0					
ANR	3820905	IdentifierDeclType	int		3820861	0					
ANR	3820906	Identifier	c		3820861	1					
ANR	3820907	IdentifierDecl	v		3820861	1					
ANR	3820908	IdentifierDeclType	int		3820861	0					
ANR	3820909	Identifier	v		3820861	1					
ANR	3820910	ExpressionStatement	p += 3	126:4:3577:3583	3820861	1	True				
ANR	3820911	AssignmentExpression	p += 3		3820861	0		+=			
ANR	3820912	Identifier	p		3820861	0					
ANR	3820913	PrimaryExpression	3		3820861	1					
ANR	3820914	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		3820861	2					
ANR	3820915	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	127:8:3593:3657	3820861	0	True				
ANR	3820916	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3820861	0		&&			
ANR	3820917	EqualityExpression	* p == 0xdf		3820861	0		==			
ANR	3820918	UnaryOperationExpression	* p		3820861	0					
ANR	3820919	UnaryOperator	*		3820861	0					
ANR	3820920	Identifier	p		3820861	1					
ANR	3820921	PrimaryExpression	0xdf		3820861	1					
ANR	3820922	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3820861	1		!=			
ANR	3820923	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3820861	0		&			
ANR	3820924	Identifier	flag		3820861	0					
ANR	3820925	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3820861	1					
ANR	3820926	PrimaryExpression	0		3820861	1					
ANR	3820927	CompoundStatement		10:75:190:190	3820861	1					
ANR	3820928	ReturnStatement	return TRUE ;	128:6:3668:3679	3820861	0	True				
ANR	3820929	Identifier	TRUE		3820861	0					
ANR	3820930	ExpressionStatement	c = * p	131:4:3692:3698	3820861	3	True				
ANR	3820931	AssignmentExpression	c = * p		3820861	0		=			
ANR	3820932	Identifier	c		3820861	0					
ANR	3820933	UnaryOperationExpression	* p		3820861	1					
ANR	3820934	UnaryOperator	*		3820861	0					
ANR	3820935	Identifier	p		3820861	1					
ANR	3820936	ExpressionStatement	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"	132:4:3704:3810	3820861	4	True				
ANR	3820937	AssignmentExpression	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		3820861	0		=			
ANR	3820938	Identifier	v		3820861	0					
ANR	3820939	CallExpression	"ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		3820861	1					
ANR	3820940	Callee	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3820861	0					
ANR	3820941	Identifier	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3820861	0					
ANR	3820942	ArgumentList	c		3820861	1					
ANR	3820943	Argument	c		3820861	0					
ANR	3820944	Identifier	c		3820861	0					
ANR	3820945	Argument	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		3820861	1					
ANR	3820946	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		3820861	0		|			
ANR	3820947	Identifier	BIT_CTYPE_UPPER		3820861	0					
ANR	3820948	Identifier	BIT_CTYPE_LOWER		3820861	1					
ANR	3820949	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		3820861	5					
ANR	3820950	Condition	( v | BIT_CTYPE_LOWER ) != 0	134:8:3820:3845	3820861	0	True				
ANR	3820951	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		3820861	0		!=			
ANR	3820952	InclusiveOrExpression	v | BIT_CTYPE_LOWER		3820861	0		|			
ANR	3820953	Identifier	v		3820861	0					
ANR	3820954	Identifier	BIT_CTYPE_LOWER		3820861	1					
ANR	3820955	PrimaryExpression	0		3820861	1					
ANR	3820956	CompoundStatement		17:36:378:378	3820861	1					
ANR	3820957	IfStatement	if ( c >= 0xaa && c <= 0xba )		3820861	0					
ANR	3820958	Condition	c >= 0xaa && c <= 0xba	136:10:3931:3952	3820861	0	True				
ANR	3820959	AndExpression	c >= 0xaa && c <= 0xba		3820861	0		&&			
ANR	3820960	RelationalExpression	c >= 0xaa		3820861	0		>=			
ANR	3820961	Identifier	c		3820861	0					
ANR	3820962	PrimaryExpression	0xaa		3820861	1					
ANR	3820963	RelationalExpression	c <= 0xba		3820861	1		<=			
ANR	3820964	Identifier	c		3820861	0					
ANR	3820965	PrimaryExpression	0xba		3820861	1					
ANR	3820966	ReturnStatement	return FALSE ;	137:1:3956:3968	3820861	1	True				
ANR	3820967	Identifier	FALSE		3820861	0					
ANR	3820968	ElseStatement	else		3820861	0					
ANR	3820969	ReturnStatement	return TRUE ;	139:1:3982:3993	3820861	0	True				
ANR	3820970	Identifier	TRUE		3820861	0					
ANR	3820971	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	141:4:4005:4035	3820861	6	True				
ANR	3820972	ConditionalExpression	v != 0 ? TRUE : FALSE		3820861	0					
ANR	3820973	Condition	v != 0		3820861	0					
ANR	3820974	EqualityExpression	v != 0		3820861	0		!=			
ANR	3820975	Identifier	v		3820861	0					
ANR	3820976	PrimaryExpression	0		3820861	1					
ANR	3820977	Identifier	TRUE		3820861	1					
ANR	3820978	Identifier	FALSE		3820861	2					
ANR	3820979	ReturnStatement	return FALSE ;	144:2:4044:4056	3820861	3	True				
ANR	3820980	Identifier	FALSE		3820861	0					
ANR	3820981	ReturnType	static int		3820861	1					
ANR	3820982	Identifier	utf32be_is_mbc_ambiguous		3820861	2					
ANR	3820983	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		3820861	3					
ANR	3820984	Parameter	OnigCaseFoldType flag	117:25:3410:3430	3820861	0	True				
ANR	3820985	ParameterType	OnigCaseFoldType		3820861	0					
ANR	3820986	Identifier	flag		3820861	1					
ANR	3820987	Parameter	const UChar * * pp	117:48:3433:3448	3820861	1	True				
ANR	3820988	ParameterType	const UChar * *		3820861	0					
ANR	3820989	Identifier	pp		3820861	1					
ANR	3820990	Parameter	const UChar * end	117:66:3451:3466	3820861	2	True				
ANR	3820991	ParameterType	const UChar *		3820861	0					
ANR	3820992	Identifier	end		3820861	1					
ANR	3820993	CFGEntryNode	ENTRY		3820861		True				
ANR	3820994	CFGExitNode	EXIT		3820861		True				
ANR	3820995	Symbol	pp		3820861						
ANR	3820996	Symbol	flag		3820861						
ANR	3820997	Symbol	c		3820861						
ANR	3820998	Symbol	* ( p + 2 )		3820861						
ANR	3820999	Symbol	* pp		3820861						
ANR	3821000	Symbol	TRUE		3820861						
ANR	3821001	Symbol	* ( p + 1 )		3820861						
ANR	3821002	Symbol	p		3820861						
ANR	3821003	Symbol	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3820861						
ANR	3821004	Symbol	v		3820861						
ANR	3821005	Symbol	BIT_CTYPE_LOWER		3820861						
ANR	3821006	Symbol	end		3820861						
ANR	3821007	Symbol	* p		3820861						
ANR	3821008	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3820861						
ANR	3821009	Symbol	BIT_CTYPE_UPPER		3820861						
ANR	3821010	Symbol	FALSE		3820861						
ANR	3821011	Function	utf32be_left_adjust_char_head	148:0:4068:4254							
ANR	3821012	FunctionDef	"utf32be_left_adjust_char_head (const UChar * start , const UChar * s)"		3821011	0					
ANR	3821013	CompoundStatement		150:0:4148:4254	3821011	0					
ANR	3821014	IdentifierDeclStatement	int rem ;	151:2:4152:4159	3821011	0	True				
ANR	3821015	IdentifierDecl	rem		3821011	0					
ANR	3821016	IdentifierDeclType	int		3821011	0					
ANR	3821017	Identifier	rem		3821011	1					
ANR	3821018	IfStatement	if ( s <= start )		3821011	1					
ANR	3821019	Condition	s <= start	153:6:4168:4177	3821011	0	True				
ANR	3821020	RelationalExpression	s <= start		3821011	0		<=			
ANR	3821021	Identifier	s		3821011	0					
ANR	3821022	Identifier	start		3821011	1					
ANR	3821023	ReturnStatement	return ( UChar * ) s ;	153:18:4180:4197	3821011	1	True				
ANR	3821024	CastExpression	( UChar * ) s		3821011	0					
ANR	3821025	CastTarget	UChar *		3821011	0					
ANR	3821026	Identifier	s		3821011	1					
ANR	3821027	ExpressionStatement	rem = ( s - start ) % 4	155:2:4202:4223	3821011	2	True				
ANR	3821028	AssignmentExpression	rem = ( s - start ) % 4		3821011	0		=			
ANR	3821029	Identifier	rem		3821011	0					
ANR	3821030	MultiplicativeExpression	( s - start ) % 4		3821011	1		%			
ANR	3821031	AdditiveExpression	s - start		3821011	0		-			
ANR	3821032	Identifier	s		3821011	0					
ANR	3821033	Identifier	start		3821011	1					
ANR	3821034	PrimaryExpression	4		3821011	1					
ANR	3821035	ReturnStatement	return ( UChar * ) ( s - rem ) ;	156:2:4227:4252	3821011	3	True				
ANR	3821036	CastExpression	( UChar * ) ( s - rem )		3821011	0					
ANR	3821037	CastTarget	UChar *		3821011	0					
ANR	3821038	AdditiveExpression	s - rem		3821011	1		-			
ANR	3821039	Identifier	s		3821011	0					
ANR	3821040	Identifier	rem		3821011	1					
ANR	3821041	ReturnType	static UChar *		3821011	1					
ANR	3821042	Identifier	utf32be_left_adjust_char_head		3821011	2					
ANR	3821043	ParameterList	"const UChar * start , const UChar * s"		3821011	3					
ANR	3821044	Parameter	const UChar * start	149:30:4112:4129	3821011	0	True				
ANR	3821045	ParameterType	const UChar *		3821011	0					
ANR	3821046	Identifier	start		3821011	1					
ANR	3821047	Parameter	const UChar * s	149:50:4132:4145	3821011	1	True				
ANR	3821048	ParameterType	const UChar *		3821011	0					
ANR	3821049	Identifier	s		3821011	1					
ANR	3821050	CFGEntryNode	ENTRY		3821011		True				
ANR	3821051	CFGExitNode	EXIT		3821011		True				
ANR	3821052	Symbol	s		3821011						
ANR	3821053	Symbol	start		3821011						
ANR	3821054	Symbol	rem		3821011						
ANR	3821055	Function	utf32be_get_case_fold_codes_by_str	159:0:4257:4512							
ANR	3821056	FunctionDef	"utf32be_get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		3821055	0					
ANR	3821057	CompoundStatement		162:0:4402:4512	3821055	0					
ANR	3821058	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_BE , flag , p , end , items ) ;"	163:2:4406:4510	3821055	0	True				
ANR	3821059	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_BE , flag , p , end , items )"		3821055	0					
ANR	3821060	Callee	onigenc_unicode_get_case_fold_codes_by_str		3821055	0					
ANR	3821061	Identifier	onigenc_unicode_get_case_fold_codes_by_str		3821055	0					
ANR	3821062	ArgumentList	ONIG_ENCODING_UTF32_BE		3821055	1					
ANR	3821063	Argument	ONIG_ENCODING_UTF32_BE		3821055	0					
ANR	3821064	Identifier	ONIG_ENCODING_UTF32_BE		3821055	0					
ANR	3821065	Argument	flag		3821055	1					
ANR	3821066	Identifier	flag		3821055	0					
ANR	3821067	Argument	p		3821055	2					
ANR	3821068	Identifier	p		3821055	0					
ANR	3821069	Argument	end		3821055	3					
ANR	3821070	Identifier	end		3821055	0					
ANR	3821071	Argument	items		3821055	4					
ANR	3821072	Identifier	items		3821055	0					
ANR	3821073	ReturnType	static int		3821055	1					
ANR	3821074	Identifier	utf32be_get_case_fold_codes_by_str		3821055	2					
ANR	3821075	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		3821055	3					
ANR	3821076	Parameter	OnigCaseFoldType flag	160:35:4303:4323	3821055	0	True				
ANR	3821077	ParameterType	OnigCaseFoldType		3821055	0					
ANR	3821078	Identifier	flag		3821055	1					
ANR	3821079	Parameter	const OnigUChar * p	161:4:4330:4347	3821055	1	True				
ANR	3821080	ParameterType	const OnigUChar *		3821055	0					
ANR	3821081	Identifier	p		3821055	1					
ANR	3821082	Parameter	const OnigUChar * end	161:24:4350:4369	3821055	2	True				
ANR	3821083	ParameterType	const OnigUChar *		3821055	0					
ANR	3821084	Identifier	end		3821055	1					
ANR	3821085	Parameter	OnigCaseFoldCodeItem items [ ]	161:46:4372:4399	3821055	3	True				
ANR	3821086	ParameterType	OnigCaseFoldCodeItem [ ]		3821055	0					
ANR	3821087	Identifier	items		3821055	1					
ANR	3821088	CFGEntryNode	ENTRY		3821055		True				
ANR	3821089	CFGExitNode	EXIT		3821055		True				
ANR	3821090	Symbol	p		3821055						
ANR	3821091	Symbol	flag		3821055						
ANR	3821092	Symbol	ONIG_ENCODING_UTF32_BE		3821055						
ANR	3821093	Symbol	onigenc_unicode_get_case_fold_codes_by_str		3821055						
ANR	3821094	Symbol	end		3821055						
ANR	3821095	Symbol	items		3821055						
ANR	3821096	DeclStmt									
ANR	3821097	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF32_BE
