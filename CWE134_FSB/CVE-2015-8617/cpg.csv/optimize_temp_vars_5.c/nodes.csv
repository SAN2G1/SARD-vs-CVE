command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3218147	File	data/converged/CVE-2015-8617_php-src/optimize_temp_vars_5.c								
ANR	3218148	Function	optimize_temporary_variables	42:0:1831:7744							
ANR	3218149	FunctionDef	"optimize_temporary_variables (zend_op_array * op_array , zend_optimizer_ctx * ctx)"		3218148	0					
ANR	3218150	CompoundStatement		43:0:1915:7744	3218148	0					
ANR	3218151	IdentifierDeclStatement	int T = op_array -> T ;	44:1:1918:1937	3218148	0	True				
ANR	3218152	IdentifierDecl	T = op_array -> T		3218148	0					
ANR	3218153	IdentifierDeclType	int		3218148	0					
ANR	3218154	Identifier	T		3218148	1					
ANR	3218155	AssignmentExpression	T = op_array -> T		3218148	2		=			
ANR	3218156	Identifier	T		3218148	0					
ANR	3218157	PtrMemberAccess	op_array -> T		3218148	1					
ANR	3218158	Identifier	op_array		3218148	0					
ANR	3218159	Identifier	T		3218148	1					
ANR	3218160	IdentifierDeclStatement	int offset = op_array -> last_var ;	45:1:1940:1971	3218148	1	True				
ANR	3218161	IdentifierDecl	offset = op_array -> last_var		3218148	0					
ANR	3218162	IdentifierDeclType	int		3218148	0					
ANR	3218163	Identifier	offset		3218148	1					
ANR	3218164	AssignmentExpression	offset = op_array -> last_var		3218148	2		=			
ANR	3218165	Identifier	offset		3218148	0					
ANR	3218166	PtrMemberAccess	op_array -> last_var		3218148	1					
ANR	3218167	Identifier	op_array		3218148	0					
ANR	3218168	Identifier	last_var		3218148	1					
ANR	3218169	IdentifierDeclStatement	uint32_t bitset_len ;	46:1:1974:1993	3218148	2	True				
ANR	3218170	IdentifierDecl	bitset_len		3218148	0					
ANR	3218171	IdentifierDeclType	uint32_t		3218148	0					
ANR	3218172	Identifier	bitset_len		3218148	1					
ANR	3218173	IdentifierDeclStatement	zend_bitset taken_T ;	47:1:1996:2015	3218148	3	True				
ANR	3218174	IdentifierDecl	taken_T		3218148	0					
ANR	3218175	IdentifierDeclType	zend_bitset		3218148	0					
ANR	3218176	Identifier	taken_T		3218148	1					
ANR	3218177	IdentifierDeclStatement	zend_op * * start_of_T ;	48:1:2039:2059	3218148	4	True				
ANR	3218178	IdentifierDecl	* * start_of_T		3218148	0					
ANR	3218179	IdentifierDeclType	zend_op * *		3218148	0					
ANR	3218180	Identifier	start_of_T		3218148	1					
ANR	3218181	IdentifierDeclStatement	zend_bitset valid_T ;	49:1:2097:2116	3218148	5	True				
ANR	3218182	IdentifierDecl	valid_T		3218148	0					
ANR	3218183	IdentifierDeclType	zend_bitset		3218148	0					
ANR	3218184	Identifier	valid_T		3218148	1					
ANR	3218185	IdentifierDeclStatement	int * map_T ;	50:1:2144:2154	3218148	6	True				
ANR	3218186	IdentifierDecl	* map_T		3218148	0					
ANR	3218187	IdentifierDeclType	int *		3218148	0					
ANR	3218188	Identifier	map_T		3218148	1					
ANR	3218189	IdentifierDeclStatement	"zend_op * opline , * end ;"	51:1:2195:2216	3218148	7	True				
ANR	3218190	IdentifierDecl	* opline		3218148	0					
ANR	3218191	IdentifierDeclType	zend_op *		3218148	0					
ANR	3218192	Identifier	opline		3218148	1					
ANR	3218193	IdentifierDecl	* end		3218148	1					
ANR	3218194	IdentifierDeclType	zend_op *		3218148	0					
ANR	3218195	Identifier	end		3218148	1					
ANR	3218196	IdentifierDeclStatement	int currT ;	52:1:2219:2228	3218148	8	True				
ANR	3218197	IdentifierDecl	currT		3218148	0					
ANR	3218198	IdentifierDeclType	int		3218148	0					
ANR	3218199	Identifier	currT		3218148	1					
ANR	3218200	IdentifierDeclStatement	int i ;	53:1:2231:2236	3218148	9	True				
ANR	3218201	IdentifierDecl	i		3218148	0					
ANR	3218202	IdentifierDeclType	int		3218148	0					
ANR	3218203	Identifier	i		3218148	1					
ANR	3218204	IdentifierDeclStatement	int max = - 1 ;	54:1:2239:2251	3218148	10	True				
ANR	3218205	IdentifierDecl	max = - 1		3218148	0					
ANR	3218206	IdentifierDeclType	int		3218148	0					
ANR	3218207	Identifier	max		3218148	1					
ANR	3218208	AssignmentExpression	max = - 1		3218148	2		=			
ANR	3218209	Identifier	max		3218148	0					
ANR	3218210	UnaryOperationExpression	- 1		3218148	1					
ANR	3218211	UnaryOperator	-		3218148	0					
ANR	3218212	PrimaryExpression	1		3218148	1					
ANR	3218213	IdentifierDeclStatement	int var_to_free = - 1 ;	55:1:2254:2274	3218148	11	True				
ANR	3218214	IdentifierDecl	var_to_free = - 1		3218148	0					
ANR	3218215	IdentifierDeclType	int		3218148	0					
ANR	3218216	Identifier	var_to_free		3218148	1					
ANR	3218217	AssignmentExpression	var_to_free = - 1		3218148	2		=			
ANR	3218218	Identifier	var_to_free		3218148	0					
ANR	3218219	UnaryOperationExpression	- 1		3218148	1					
ANR	3218220	UnaryOperator	-		3218148	0					
ANR	3218221	PrimaryExpression	1		3218148	1					
ANR	3218222	IdentifierDeclStatement	void * checkpoint = zend_arena_checkpoint ( ctx -> arena ) ;	56:1:2277:2329	3218148	12	True				
ANR	3218223	IdentifierDecl	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		3218148	0					
ANR	3218224	IdentifierDeclType	void *		3218148	0					
ANR	3218225	Identifier	checkpoint		3218148	1					
ANR	3218226	AssignmentExpression	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		3218148	2		=			
ANR	3218227	Identifier	checkpoint		3218148	0					
ANR	3218228	CallExpression	zend_arena_checkpoint ( ctx -> arena )		3218148	1					
ANR	3218229	Callee	zend_arena_checkpoint		3218148	0					
ANR	3218230	Identifier	zend_arena_checkpoint		3218148	0					
ANR	3218231	ArgumentList	ctx -> arena		3218148	1					
ANR	3218232	Argument	ctx -> arena		3218148	0					
ANR	3218233	PtrMemberAccess	ctx -> arena		3218148	0					
ANR	3218234	Identifier	ctx		3218148	0					
ANR	3218235	Identifier	arena		3218148	1					
ANR	3218236	ExpressionStatement	bitset_len = zend_bitset_len ( T )	58:1:2333:2364	3218148	13	True				
ANR	3218237	AssignmentExpression	bitset_len = zend_bitset_len ( T )		3218148	0		=			
ANR	3218238	Identifier	bitset_len		3218148	0					
ANR	3218239	CallExpression	zend_bitset_len ( T )		3218148	1					
ANR	3218240	Callee	zend_bitset_len		3218148	0					
ANR	3218241	Identifier	zend_bitset_len		3218148	0					
ANR	3218242	ArgumentList	T		3218148	1					
ANR	3218243	Argument	T		3218148	0					
ANR	3218244	Identifier	T		3218148	0					
ANR	3218245	ExpressionStatement	"taken_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"	59:1:2367:2455	3218148	14	True				
ANR	3218246	AssignmentExpression	"taken_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		3218148	0		=			
ANR	3218247	Identifier	taken_T		3218148	0					
ANR	3218248	CastExpression	"( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		3218148	1					
ANR	3218249	CastTarget	zend_bitset		3218148	0					
ANR	3218250	CallExpression	"zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		3218148	1					
ANR	3218251	Callee	zend_arena_alloc		3218148	0					
ANR	3218252	Identifier	zend_arena_alloc		3218148	0					
ANR	3218253	ArgumentList	& ctx -> arena		3218148	1					
ANR	3218254	Argument	& ctx -> arena		3218148	0					
ANR	3218255	UnaryOperationExpression	& ctx -> arena		3218148	0					
ANR	3218256	UnaryOperator	&		3218148	0					
ANR	3218257	PtrMemberAccess	ctx -> arena		3218148	1					
ANR	3218258	Identifier	ctx		3218148	0					
ANR	3218259	Identifier	arena		3218148	1					
ANR	3218260	Argument	bitset_len * ZEND_BITSET_ELM_SIZE		3218148	1					
ANR	3218261	MultiplicativeExpression	bitset_len * ZEND_BITSET_ELM_SIZE		3218148	0		*			
ANR	3218262	Identifier	bitset_len		3218148	0					
ANR	3218263	Identifier	ZEND_BITSET_ELM_SIZE		3218148	1					
ANR	3218264	ExpressionStatement	"start_of_T = ( zend_op * * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"	60:1:2458:2536	3218148	15	True				
ANR	3218265	AssignmentExpression	"start_of_T = ( zend_op * * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"		3218148	0		=			
ANR	3218266	Identifier	start_of_T		3218148	0					
ANR	3218267	CastExpression	"( zend_op * * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"		3218148	1					
ANR	3218268	CastTarget	zend_op * *		3218148	0					
ANR	3218269	CallExpression	"zend_arena_alloc ( & ctx -> arena , T * sizeof ( zend_op * ) )"		3218148	1					
ANR	3218270	Callee	zend_arena_alloc		3218148	0					
ANR	3218271	Identifier	zend_arena_alloc		3218148	0					
ANR	3218272	ArgumentList	& ctx -> arena		3218148	1					
ANR	3218273	Argument	& ctx -> arena		3218148	0					
ANR	3218274	UnaryOperationExpression	& ctx -> arena		3218148	0					
ANR	3218275	UnaryOperator	&		3218148	0					
ANR	3218276	PtrMemberAccess	ctx -> arena		3218148	1					
ANR	3218277	Identifier	ctx		3218148	0					
ANR	3218278	Identifier	arena		3218148	1					
ANR	3218279	Argument	T * sizeof ( zend_op * )		3218148	1					
ANR	3218280	MultiplicativeExpression	T * sizeof ( zend_op * )		3218148	0		*			
ANR	3218281	Identifier	T		3218148	0					
ANR	3218282	SizeofExpression	sizeof ( zend_op * )		3218148	1					
ANR	3218283	Sizeof	sizeof		3218148	0					
ANR	3218284	SizeofOperand	zend_op *		3218148	1					
ANR	3218285	ExpressionStatement	"valid_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"	61:1:2539:2627	3218148	16	True				
ANR	3218286	AssignmentExpression	"valid_T = ( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		3218148	0		=			
ANR	3218287	Identifier	valid_T		3218148	0					
ANR	3218288	CastExpression	"( zend_bitset ) zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		3218148	1					
ANR	3218289	CastTarget	zend_bitset		3218148	0					
ANR	3218290	CallExpression	"zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		3218148	1					
ANR	3218291	Callee	zend_arena_alloc		3218148	0					
ANR	3218292	Identifier	zend_arena_alloc		3218148	0					
ANR	3218293	ArgumentList	& ctx -> arena		3218148	1					
ANR	3218294	Argument	& ctx -> arena		3218148	0					
ANR	3218295	UnaryOperationExpression	& ctx -> arena		3218148	0					
ANR	3218296	UnaryOperator	&		3218148	0					
ANR	3218297	PtrMemberAccess	ctx -> arena		3218148	1					
ANR	3218298	Identifier	ctx		3218148	0					
ANR	3218299	Identifier	arena		3218148	1					
ANR	3218300	Argument	bitset_len * ZEND_BITSET_ELM_SIZE		3218148	1					
ANR	3218301	MultiplicativeExpression	bitset_len * ZEND_BITSET_ELM_SIZE		3218148	0		*			
ANR	3218302	Identifier	bitset_len		3218148	0					
ANR	3218303	Identifier	ZEND_BITSET_ELM_SIZE		3218148	1					
ANR	3218304	ExpressionStatement	"map_T = ( int * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"	62:1:2630:2692	3218148	17	True				
ANR	3218305	AssignmentExpression	"map_T = ( int * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"		3218148	0		=			
ANR	3218306	Identifier	map_T		3218148	0					
ANR	3218307	CastExpression	"( int * ) zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"		3218148	1					
ANR	3218308	CastTarget	int *		3218148	0					
ANR	3218309	CallExpression	"zend_arena_alloc ( & ctx -> arena , T * sizeof ( int ) )"		3218148	1					
ANR	3218310	Callee	zend_arena_alloc		3218148	0					
ANR	3218311	Identifier	zend_arena_alloc		3218148	0					
ANR	3218312	ArgumentList	& ctx -> arena		3218148	1					
ANR	3218313	Argument	& ctx -> arena		3218148	0					
ANR	3218314	UnaryOperationExpression	& ctx -> arena		3218148	0					
ANR	3218315	UnaryOperator	&		3218148	0					
ANR	3218316	PtrMemberAccess	ctx -> arena		3218148	1					
ANR	3218317	Identifier	ctx		3218148	0					
ANR	3218318	Identifier	arena		3218148	1					
ANR	3218319	Argument	T * sizeof ( int )		3218148	1					
ANR	3218320	MultiplicativeExpression	T * sizeof ( int )		3218148	0		*			
ANR	3218321	Identifier	T		3218148	0					
ANR	3218322	SizeofExpression	sizeof ( int )		3218148	1					
ANR	3218323	Sizeof	sizeof		3218148	0					
ANR	3218324	SizeofOperand	int		3218148	1					
ANR	3218325	ExpressionStatement	end = op_array -> opcodes	64:4:2699:2722	3218148	18	True				
ANR	3218326	AssignmentExpression	end = op_array -> opcodes		3218148	0		=			
ANR	3218327	Identifier	end		3218148	0					
ANR	3218328	PtrMemberAccess	op_array -> opcodes		3218148	1					
ANR	3218329	Identifier	op_array		3218148	0					
ANR	3218330	Identifier	opcodes		3218148	1					
ANR	3218331	ExpressionStatement	opline = & op_array -> opcodes [ op_array -> last - 1 ]	65:4:2728:2775	3218148	19	True				
ANR	3218332	AssignmentExpression	opline = & op_array -> opcodes [ op_array -> last - 1 ]		3218148	0		=			
ANR	3218333	Identifier	opline		3218148	0					
ANR	3218334	UnaryOperationExpression	& op_array -> opcodes [ op_array -> last - 1 ]		3218148	1					
ANR	3218335	UnaryOperator	&		3218148	0					
ANR	3218336	ArrayIndexing	op_array -> opcodes [ op_array -> last - 1 ]		3218148	1					
ANR	3218337	PtrMemberAccess	op_array -> opcodes		3218148	0					
ANR	3218338	Identifier	op_array		3218148	0					
ANR	3218339	Identifier	opcodes		3218148	1					
ANR	3218340	AdditiveExpression	op_array -> last - 1		3218148	1		-			
ANR	3218341	PtrMemberAccess	op_array -> last		3218148	0					
ANR	3218342	Identifier	op_array		3218148	0					
ANR	3218343	Identifier	last		3218148	1					
ANR	3218344	PrimaryExpression	1		3218148	1					
ANR	3218345	WhileStatement	while ( opline >= end )		3218148	20					
ANR	3218346	Condition	opline >= end	68:11:2824:2836	3218148	0	True				
ANR	3218347	RelationalExpression	opline >= end		3218148	0		>=			
ANR	3218348	Identifier	opline		3218148	0					
ANR	3218349	Identifier	end		3218148	1					
ANR	3218350	CompoundStatement		26:26:923:923	3218148	1					
ANR	3218351	IfStatement	if ( ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) )		3218148	0					
ANR	3218352	Condition	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	69:12:2853:2900	3218148	0	True				
ANR	3218353	BitAndExpression	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		3218148	0		&			
ANR	3218354	CallExpression	ZEND_RESULT_TYPE ( opline )		3218148	0					
ANR	3218355	Callee	ZEND_RESULT_TYPE		3218148	0					
ANR	3218356	Identifier	ZEND_RESULT_TYPE		3218148	0					
ANR	3218357	ArgumentList	opline		3218148	1					
ANR	3218358	Argument	opline		3218148	0					
ANR	3218359	Identifier	opline		3218148	0					
ANR	3218360	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		3218148	1		|			
ANR	3218361	Identifier	IS_VAR		3218148	0					
ANR	3218362	Identifier	IS_TMP_VAR		3218148	1					
ANR	3218363	CompoundStatement		27:62:987:987	3218148	1					
ANR	3218364	ExpressionStatement	start_of_T [ VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset ] = opline	70:3:2908:2970	3218148	0	True				
ANR	3218365	AssignmentExpression	start_of_T [ VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset ] = opline		3218148	0		=			
ANR	3218366	ArrayIndexing	start_of_T [ VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset ]		3218148	0					
ANR	3218367	Identifier	start_of_T		3218148	0					
ANR	3218368	AdditiveExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset		3218148	1		-			
ANR	3218369	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		3218148	0					
ANR	3218370	Callee	VAR_NUM		3218148	0					
ANR	3218371	Identifier	VAR_NUM		3218148	0					
ANR	3218372	ArgumentList	ZEND_RESULT ( opline ) . var		3218148	1					
ANR	3218373	Argument	ZEND_RESULT ( opline ) . var		3218148	0					
ANR	3218374	MemberAccess	ZEND_RESULT ( opline ) . var		3218148	0					
ANR	3218375	CallExpression	ZEND_RESULT ( opline )		3218148	0					
ANR	3218376	Callee	ZEND_RESULT		3218148	0					
ANR	3218377	Identifier	ZEND_RESULT		3218148	0					
ANR	3218378	ArgumentList	opline		3218148	1					
ANR	3218379	Argument	opline		3218148	0					
ANR	3218380	Identifier	opline		3218148	0					
ANR	3218381	Identifier	var		3218148	1					
ANR	3218382	Identifier	offset		3218148	1					
ANR	3218383	Identifier	opline		3218148	1					
ANR	3218384	ExpressionStatement	opline --	72:2:2978:2986	3218148	1	True				
ANR	3218385	PostIncDecOperationExpression	opline --		3218148	0					
ANR	3218386	Identifier	opline		3218148	0					
ANR	3218387	IncDec	--		3218148	1					
ANR	3218388	ExpressionStatement	"zend_bitset_clear ( valid_T , bitset_len )"	75:1:2993:3031	3218148	21	True				
ANR	3218389	CallExpression	"zend_bitset_clear ( valid_T , bitset_len )"		3218148	0					
ANR	3218390	Callee	zend_bitset_clear		3218148	0					
ANR	3218391	Identifier	zend_bitset_clear		3218148	0					
ANR	3218392	ArgumentList	valid_T		3218148	1					
ANR	3218393	Argument	valid_T		3218148	0					
ANR	3218394	Identifier	valid_T		3218148	0					
ANR	3218395	Argument	bitset_len		3218148	1					
ANR	3218396	Identifier	bitset_len		3218148	0					
ANR	3218397	ExpressionStatement	"zend_bitset_clear ( taken_T , bitset_len )"	76:1:3034:3072	3218148	22	True				
ANR	3218398	CallExpression	"zend_bitset_clear ( taken_T , bitset_len )"		3218148	0					
ANR	3218399	Callee	zend_bitset_clear		3218148	0					
ANR	3218400	Identifier	zend_bitset_clear		3218148	0					
ANR	3218401	ArgumentList	taken_T		3218148	1					
ANR	3218402	Argument	taken_T		3218148	0					
ANR	3218403	Identifier	taken_T		3218148	0					
ANR	3218404	Argument	bitset_len		3218148	1					
ANR	3218405	Identifier	bitset_len		3218148	0					
ANR	3218406	ExpressionStatement	end = op_array -> opcodes	78:4:3079:3102	3218148	23	True				
ANR	3218407	AssignmentExpression	end = op_array -> opcodes		3218148	0		=			
ANR	3218408	Identifier	end		3218148	0					
ANR	3218409	PtrMemberAccess	op_array -> opcodes		3218148	1					
ANR	3218410	Identifier	op_array		3218148	0					
ANR	3218411	Identifier	opcodes		3218148	1					
ANR	3218412	ExpressionStatement	opline = & op_array -> opcodes [ op_array -> last - 1 ]	79:4:3108:3155	3218148	24	True				
ANR	3218413	AssignmentExpression	opline = & op_array -> opcodes [ op_array -> last - 1 ]		3218148	0		=			
ANR	3218414	Identifier	opline		3218148	0					
ANR	3218415	UnaryOperationExpression	& op_array -> opcodes [ op_array -> last - 1 ]		3218148	1					
ANR	3218416	UnaryOperator	&		3218148	0					
ANR	3218417	ArrayIndexing	op_array -> opcodes [ op_array -> last - 1 ]		3218148	1					
ANR	3218418	PtrMemberAccess	op_array -> opcodes		3218148	0					
ANR	3218419	Identifier	op_array		3218148	0					
ANR	3218420	Identifier	opcodes		3218148	1					
ANR	3218421	AdditiveExpression	op_array -> last - 1		3218148	1		-			
ANR	3218422	PtrMemberAccess	op_array -> last		3218148	0					
ANR	3218423	Identifier	op_array		3218148	0					
ANR	3218424	Identifier	last		3218148	1					
ANR	3218425	PrimaryExpression	1		3218148	1					
ANR	3218426	WhileStatement	while ( opline >= end )		3218148	25					
ANR	3218427	Condition	opline >= end	81:11:3169:3181	3218148	0	True				
ANR	3218428	RelationalExpression	opline >= end		3218148	0		>=			
ANR	3218429	Identifier	opline		3218148	0					
ANR	3218430	Identifier	end		3218148	1					
ANR	3218431	CompoundStatement		39:26:1268:1268	3218148	1					
ANR	3218432	IfStatement	if ( ( ZEND_OP1_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) ) )		3218148	0					
ANR	3218433	Condition	ZEND_OP1_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	82:6:3192:3238	3218148	0	True				
ANR	3218434	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		3218148	0		&			
ANR	3218435	CallExpression	ZEND_OP1_TYPE ( opline )		3218148	0					
ANR	3218436	Callee	ZEND_OP1_TYPE		3218148	0					
ANR	3218437	Identifier	ZEND_OP1_TYPE		3218148	0					
ANR	3218438	ArgumentList	opline		3218148	1					
ANR	3218439	Argument	opline		3218148	0					
ANR	3218440	Identifier	opline		3218148	0					
ANR	3218441	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		3218148	1		|			
ANR	3218442	Identifier	IS_VAR		3218148	0					
ANR	3218443	Identifier	IS_TMP_VAR		3218148	1					
ANR	3218444	CompoundStatement		40:55:1325:1325	3218148	1					
ANR	3218445	ExpressionStatement	currT = VAR_NUM ( ZEND_OP1 ( opline ) . var ) - offset	83:3:3246:3292	3218148	0	True				
ANR	3218446	AssignmentExpression	currT = VAR_NUM ( ZEND_OP1 ( opline ) . var ) - offset		3218148	0		=			
ANR	3218447	Identifier	currT		3218148	0					
ANR	3218448	AdditiveExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var ) - offset		3218148	1		-			
ANR	3218449	CallExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var )		3218148	0					
ANR	3218450	Callee	VAR_NUM		3218148	0					
ANR	3218451	Identifier	VAR_NUM		3218148	0					
ANR	3218452	ArgumentList	ZEND_OP1 ( opline ) . var		3218148	1					
ANR	3218453	Argument	ZEND_OP1 ( opline ) . var		3218148	0					
ANR	3218454	MemberAccess	ZEND_OP1 ( opline ) . var		3218148	0					
ANR	3218455	CallExpression	ZEND_OP1 ( opline )		3218148	0					
ANR	3218456	Callee	ZEND_OP1		3218148	0					
ANR	3218457	Identifier	ZEND_OP1		3218148	0					
ANR	3218458	ArgumentList	opline		3218148	1					
ANR	3218459	Argument	opline		3218148	0					
ANR	3218460	Identifier	opline		3218148	0					
ANR	3218461	Identifier	var		3218148	1					
ANR	3218462	Identifier	offset		3218148	1					
ANR	3218463	IfStatement	if ( opline -> opcode == ZEND_ROPE_END )		3218148	1					
ANR	3218464	Condition	opline -> opcode == ZEND_ROPE_END	84:7:3301:3331	3218148	0	True				
ANR	3218465	EqualityExpression	opline -> opcode == ZEND_ROPE_END		3218148	0		==			
ANR	3218466	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218467	Identifier	opline		3218148	0					
ANR	3218468	Identifier	opcode		3218148	1					
ANR	3218469	Identifier	ZEND_ROPE_END		3218148	1					
ANR	3218470	CompoundStatement		44:4:1531:1538	3218148	1					
ANR	3218471	IdentifierDeclStatement	int num = ( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval ) ;	85:4:3340:3441	3218148	0	True				
ANR	3218472	IdentifierDecl	num = ( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3218148	0					
ANR	3218473	IdentifierDeclType	int		3218148	0					
ANR	3218474	Identifier	num		3218148	1					
ANR	3218475	AssignmentExpression	num = ( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3218148	2		=			
ANR	3218476	Identifier	num		3218148	0					
ANR	3218477	MultiplicativeExpression	( ( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3218148	1		/			
ANR	3218478	AdditiveExpression	( ( opline -> extended_value + 1 ) * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 )		3218148	0		+			
ANR	3218479	MultiplicativeExpression	( opline -> extended_value + 1 ) * sizeof ( zend_string * )		3218148	0		*			
ANR	3218480	AdditiveExpression	opline -> extended_value + 1		3218148	0		+			
ANR	3218481	PtrMemberAccess	opline -> extended_value		3218148	0					
ANR	3218482	Identifier	opline		3218148	0					
ANR	3218483	Identifier	extended_value		3218148	1					
ANR	3218484	PrimaryExpression	1		3218148	1					
ANR	3218485	SizeofExpression	sizeof ( zend_string * )		3218148	1					
ANR	3218486	Sizeof	sizeof		3218148	0					
ANR	3218487	SizeofOperand	zend_string *		3218148	1					
ANR	3218488	AdditiveExpression	sizeof ( zval ) - 1		3218148	1		-			
ANR	3218489	SizeofExpression	sizeof ( zval )		3218148	0					
ANR	3218490	Sizeof	sizeof		3218148	0					
ANR	3218491	SizeofOperand	zval		3218148	1					
ANR	3218492	PrimaryExpression	1		3218148	1					
ANR	3218493	SizeofExpression	sizeof ( zval )		3218148	1					
ANR	3218494	Sizeof	sizeof		3218148	0					
ANR	3218495	SizeofOperand	zval		3218148	1					
ANR	3218496	IdentifierDeclStatement	int var ;	86:4:3447:3454	3218148	1	True				
ANR	3218497	IdentifierDecl	var		3218148	0					
ANR	3218498	IdentifierDeclType	int		3218148	0					
ANR	3218499	Identifier	var		3218148	1					
ANR	3218500	ExpressionStatement	var = max	88:4:3461:3470	3218148	2	True				
ANR	3218501	AssignmentExpression	var = max		3218148	0		=			
ANR	3218502	Identifier	var		3218148	0					
ANR	3218503	Identifier	max		3218148	1					
ANR	3218504	WhileStatement	"while ( var >= 0 && ! zend_bitset_in ( taken_T , var ) )"		3218148	3					
ANR	3218505	Condition	"var >= 0 && ! zend_bitset_in ( taken_T , var )"	89:11:3483:3523	3218148	0	True				
ANR	3218506	AndExpression	"var >= 0 && ! zend_bitset_in ( taken_T , var )"		3218148	0		&&			
ANR	3218507	RelationalExpression	var >= 0		3218148	0		>=			
ANR	3218508	Identifier	var		3218148	0					
ANR	3218509	PrimaryExpression	0		3218148	1					
ANR	3218510	UnaryOperationExpression	"! zend_bitset_in ( taken_T , var )"		3218148	1					
ANR	3218511	UnaryOperator	!		3218148	0					
ANR	3218512	CallExpression	"zend_bitset_in ( taken_T , var )"		3218148	1					
ANR	3218513	Callee	zend_bitset_in		3218148	0					
ANR	3218514	Identifier	zend_bitset_in		3218148	0					
ANR	3218515	ArgumentList	taken_T		3218148	1					
ANR	3218516	Argument	taken_T		3218148	0					
ANR	3218517	Identifier	taken_T		3218148	0					
ANR	3218518	Argument	var		3218148	1					
ANR	3218519	Identifier	var		3218148	0					
ANR	3218520	CompoundStatement		47:54:1610:1610	3218148	1					
ANR	3218521	ExpressionStatement	var --	90:5:3533:3538	3218148	0	True				
ANR	3218522	PostIncDecOperationExpression	var --		3218148	0					
ANR	3218523	Identifier	var		3218148	0					
ANR	3218524	IncDec	--		3218148	1					
ANR	3218525	ExpressionStatement	"max = MAX ( max , var + num )"	92:4:3550:3575	3218148	4	True				
ANR	3218526	AssignmentExpression	"max = MAX ( max , var + num )"		3218148	0		=			
ANR	3218527	Identifier	max		3218148	0					
ANR	3218528	CallExpression	"MAX ( max , var + num )"		3218148	1					
ANR	3218529	Callee	MAX		3218148	0					
ANR	3218530	Identifier	MAX		3218148	0					
ANR	3218531	ArgumentList	max		3218148	1					
ANR	3218532	Argument	max		3218148	0					
ANR	3218533	Identifier	max		3218148	0					
ANR	3218534	Argument	var + num		3218148	1					
ANR	3218535	AdditiveExpression	var + num		3218148	0		+			
ANR	3218536	Identifier	var		3218148	0					
ANR	3218537	Identifier	num		3218148	1					
ANR	3218538	ExpressionStatement	var = var + 1	93:4:3581:3594	3218148	5	True				
ANR	3218539	AssignmentExpression	var = var + 1		3218148	0		=			
ANR	3218540	Identifier	var		3218148	0					
ANR	3218541	AdditiveExpression	var + 1		3218148	1		+			
ANR	3218542	Identifier	var		3218148	0					
ANR	3218543	PrimaryExpression	1		3218148	1					
ANR	3218544	ExpressionStatement	map_T [ currT ] = var	94:4:3600:3618	3218148	6	True				
ANR	3218545	AssignmentExpression	map_T [ currT ] = var		3218148	0		=			
ANR	3218546	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3218547	Identifier	map_T		3218148	0					
ANR	3218548	Identifier	currT		3218148	1					
ANR	3218549	Identifier	var		3218148	1					
ANR	3218550	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	95:4:3624:3656	3218148	7	True				
ANR	3218551	CallExpression	"zend_bitset_incl ( valid_T , currT )"		3218148	0					
ANR	3218552	Callee	zend_bitset_incl		3218148	0					
ANR	3218553	Identifier	zend_bitset_incl		3218148	0					
ANR	3218554	ArgumentList	valid_T		3218148	1					
ANR	3218555	Argument	valid_T		3218148	0					
ANR	3218556	Identifier	valid_T		3218148	0					
ANR	3218557	Argument	currT		3218148	1					
ANR	3218558	Identifier	currT		3218148	0					
ANR	3218559	ExpressionStatement	"zend_bitset_incl ( taken_T , var )"	96:4:3662:3692	3218148	8	True				
ANR	3218560	CallExpression	"zend_bitset_incl ( taken_T , var )"		3218148	0					
ANR	3218561	Callee	zend_bitset_incl		3218148	0					
ANR	3218562	Identifier	zend_bitset_incl		3218148	0					
ANR	3218563	ArgumentList	taken_T		3218148	1					
ANR	3218564	Argument	taken_T		3218148	0					
ANR	3218565	Identifier	taken_T		3218148	0					
ANR	3218566	Argument	var		3218148	1					
ANR	3218567	Identifier	var		3218148	0					
ANR	3218568	ExpressionStatement	ZEND_OP1 ( opline ) . var = NUM_VAR ( var + offset )	97:4:3698:3742	3218148	9	True				
ANR	3218569	AssignmentExpression	ZEND_OP1 ( opline ) . var = NUM_VAR ( var + offset )		3218148	0		=			
ANR	3218570	MemberAccess	ZEND_OP1 ( opline ) . var		3218148	0					
ANR	3218571	CallExpression	ZEND_OP1 ( opline )		3218148	0					
ANR	3218572	Callee	ZEND_OP1		3218148	0					
ANR	3218573	Identifier	ZEND_OP1		3218148	0					
ANR	3218574	ArgumentList	opline		3218148	1					
ANR	3218575	Argument	opline		3218148	0					
ANR	3218576	Identifier	opline		3218148	0					
ANR	3218577	Identifier	var		3218148	1					
ANR	3218578	CallExpression	NUM_VAR ( var + offset )		3218148	1					
ANR	3218579	Callee	NUM_VAR		3218148	0					
ANR	3218580	Identifier	NUM_VAR		3218148	0					
ANR	3218581	ArgumentList	var + offset		3218148	1					
ANR	3218582	Argument	var + offset		3218148	0					
ANR	3218583	AdditiveExpression	var + offset		3218148	0		+			
ANR	3218584	Identifier	var		3218148	0					
ANR	3218585	Identifier	offset		3218148	1					
ANR	3218586	WhileStatement	while ( num > 1 )		3218148	10					
ANR	3218587	Condition	num > 1	98:11:3755:3761	3218148	0	True				
ANR	3218588	RelationalExpression	num > 1		3218148	0		>			
ANR	3218589	Identifier	num		3218148	0					
ANR	3218590	PrimaryExpression	1		3218148	1					
ANR	3218591	CompoundStatement		56:20:1848:1848	3218148	1					
ANR	3218592	ExpressionStatement	num --	99:5:3771:3776	3218148	0	True				
ANR	3218593	PostIncDecOperationExpression	num --		3218148	0					
ANR	3218594	Identifier	num		3218148	0					
ANR	3218595	IncDec	--		3218148	1					
ANR	3218596	ExpressionStatement	"zend_bitset_incl ( taken_T , var + num )"	100:5:3783:3819	3218148	1	True				
ANR	3218597	CallExpression	"zend_bitset_incl ( taken_T , var + num )"		3218148	0					
ANR	3218598	Callee	zend_bitset_incl		3218148	0					
ANR	3218599	Identifier	zend_bitset_incl		3218148	0					
ANR	3218600	ArgumentList	taken_T		3218148	1					
ANR	3218601	Argument	taken_T		3218148	0					
ANR	3218602	Identifier	taken_T		3218148	0					
ANR	3218603	Argument	var + num		3218148	1					
ANR	3218604	AdditiveExpression	var + num		3218148	0		+			
ANR	3218605	Identifier	var		3218148	0					
ANR	3218606	Identifier	num		3218148	1					
ANR	3218607	ElseStatement	else		3218148	0					
ANR	3218608	CompoundStatement		60:10:1921:1921	3218148	0					
ANR	3218609	IfStatement	"if ( ! zend_bitset_in ( valid_T , currT ) )"		3218148	0					
ANR	3218610	Condition	"! zend_bitset_in ( valid_T , currT )"	103:8:3847:3877	3218148	0	True				
ANR	3218611	UnaryOperationExpression	"! zend_bitset_in ( valid_T , currT )"		3218148	0					
ANR	3218612	UnaryOperator	!		3218148	0					
ANR	3218613	CallExpression	"zend_bitset_in ( valid_T , currT )"		3218148	1					
ANR	3218614	Callee	zend_bitset_in		3218148	0					
ANR	3218615	Identifier	zend_bitset_in		3218148	0					
ANR	3218616	ArgumentList	valid_T		3218148	1					
ANR	3218617	Argument	valid_T		3218148	0					
ANR	3218618	Identifier	valid_T		3218148	0					
ANR	3218619	Argument	currT		3218148	1					
ANR	3218620	Identifier	currT		3218148	0					
ANR	3218621	CompoundStatement		62:5:1971:1990	3218148	1					
ANR	3218622	IdentifierDeclStatement	int use_new_var = 0 ;	104:5:3887:3906	3218148	0	True				
ANR	3218623	IdentifierDecl	use_new_var = 0		3218148	0					
ANR	3218624	IdentifierDeclType	int		3218148	0					
ANR	3218625	Identifier	use_new_var		3218148	1					
ANR	3218626	AssignmentExpression	use_new_var = 0		3218148	2		=			
ANR	3218627	Identifier	use_new_var		3218148	0					
ANR	3218628	PrimaryExpression	0		3218148	1					
ANR	3218629	IfStatement	if ( ( op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) && ( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE ) )		3218148	1					
ANR	3218630	Condition	( op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) && ( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE )	110:9:4078:4305	3218148	0	True				
ANR	3218631	AndExpression	( op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) && ( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE )		3218148	0		&&			
ANR	3218632	BitAndExpression	op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK		3218148	0		&			
ANR	3218633	PtrMemberAccess	op_array -> fn_flags		3218148	0					
ANR	3218634	Identifier	op_array		3218148	0					
ANR	3218635	Identifier	fn_flags		3218148	1					
ANR	3218636	Identifier	ZEND_ACC_HAS_FINALLY_BLOCK		3218148	1					
ANR	3218637	OrExpression	opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE		3218148	1		||			
ANR	3218638	EqualityExpression	opline -> opcode == ZEND_RETURN		3218148	0		==			
ANR	3218639	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218640	Identifier	opline		3218148	0					
ANR	3218641	Identifier	opcode		3218148	1					
ANR	3218642	Identifier	ZEND_RETURN		3218148	1					
ANR	3218643	OrExpression	opline -> opcode == ZEND_RETURN_BY_REF || opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE		3218148	1		||			
ANR	3218644	EqualityExpression	opline -> opcode == ZEND_RETURN_BY_REF		3218148	0		==			
ANR	3218645	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218646	Identifier	opline		3218148	0					
ANR	3218647	Identifier	opcode		3218148	1					
ANR	3218648	Identifier	ZEND_RETURN_BY_REF		3218148	1					
ANR	3218649	OrExpression	opline -> opcode == ZEND_FREE || opline -> opcode == ZEND_FE_FREE		3218148	1		||			
ANR	3218650	EqualityExpression	opline -> opcode == ZEND_FREE		3218148	0		==			
ANR	3218651	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218652	Identifier	opline		3218148	0					
ANR	3218653	Identifier	opcode		3218148	1					
ANR	3218654	Identifier	ZEND_FREE		3218148	1					
ANR	3218655	EqualityExpression	opline -> opcode == ZEND_FE_FREE		3218148	1		==			
ANR	3218656	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218657	Identifier	opline		3218148	0					
ANR	3218658	Identifier	opcode		3218148	1					
ANR	3218659	Identifier	ZEND_FE_FREE		3218148	1					
ANR	3218660	CompoundStatement		73:6:2400:2422	3218148	1					
ANR	3218661	IdentifierDeclStatement	zend_op * curr = opline ;	115:6:4316:4338	3218148	0	True				
ANR	3218662	IdentifierDecl	* curr = opline		3218148	0					
ANR	3218663	IdentifierDeclType	zend_op *		3218148	0					
ANR	3218664	Identifier	curr		3218148	1					
ANR	3218665	AssignmentExpression	* curr = opline		3218148	2		=			
ANR	3218666	Identifier	opline		3218148	0					
ANR	3218667	Identifier	opline		3218148	1					
ANR	3218668	WhileStatement	while ( -- curr >= end )		3218148	1					
ANR	3218669	Condition	-- curr >= end	117:13:4354:4366	3218148	0	True				
ANR	3218670	RelationalExpression	-- curr >= end		3218148	0		>=			
ANR	3218671	UnaryExpression	-- curr		3218148	0					
ANR	3218672	IncDec	--		3218148	0					
ANR	3218673	Identifier	curr		3218148	1					
ANR	3218674	Identifier	end		3218148	1					
ANR	3218675	CompoundStatement		75:28:2453:2453	3218148	1					
ANR	3218676	IfStatement	if ( curr -> opcode == ZEND_FAST_CALL )		3218148	0					
ANR	3218677	Condition	curr -> opcode == ZEND_FAST_CALL	118:11:4382:4411	3218148	0	True				
ANR	3218678	EqualityExpression	curr -> opcode == ZEND_FAST_CALL		3218148	0		==			
ANR	3218679	PtrMemberAccess	curr -> opcode		3218148	0					
ANR	3218680	Identifier	curr		3218148	0					
ANR	3218681	Identifier	opcode		3218148	1					
ANR	3218682	Identifier	ZEND_FAST_CALL		3218148	1					
ANR	3218683	CompoundStatement		76:43:2498:2498	3218148	1					
ANR	3218684	ExpressionStatement	use_new_var = 1	119:8:4424:4439	3218148	0	True				
ANR	3218685	AssignmentExpression	use_new_var = 1		3218148	0		=			
ANR	3218686	Identifier	use_new_var		3218148	0					
ANR	3218687	PrimaryExpression	1		3218148	1					
ANR	3218688	BreakStatement	break ;	120:8:4449:4454	3218148	1	True				
ANR	3218689	ElseStatement	else		3218148	0					
ANR	3218690	IfStatement	if ( curr -> opcode != ZEND_FREE && curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION )		3218148	0					
ANR	3218691	Condition	curr -> opcode != ZEND_FREE && curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION	121:18:4474:4669	3218148	0	True				
ANR	3218692	AndExpression	curr -> opcode != ZEND_FREE && curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION		3218148	0		&&			
ANR	3218693	EqualityExpression	curr -> opcode != ZEND_FREE		3218148	0		!=			
ANR	3218694	PtrMemberAccess	curr -> opcode		3218148	0					
ANR	3218695	Identifier	curr		3218148	0					
ANR	3218696	Identifier	opcode		3218148	1					
ANR	3218697	Identifier	ZEND_FREE		3218148	1					
ANR	3218698	AndExpression	curr -> opcode != ZEND_FE_FREE && curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION		3218148	1		&&			
ANR	3218699	EqualityExpression	curr -> opcode != ZEND_FE_FREE		3218148	0		!=			
ANR	3218700	PtrMemberAccess	curr -> opcode		3218148	0					
ANR	3218701	Identifier	curr		3218148	0					
ANR	3218702	Identifier	opcode		3218148	1					
ANR	3218703	Identifier	ZEND_FE_FREE		3218148	1					
ANR	3218704	AndExpression	curr -> opcode != ZEND_VERIFY_RETURN_TYPE && curr -> opcode != ZEND_DISCARD_EXCEPTION		3218148	1		&&			
ANR	3218705	EqualityExpression	curr -> opcode != ZEND_VERIFY_RETURN_TYPE		3218148	0		!=			
ANR	3218706	PtrMemberAccess	curr -> opcode		3218148	0					
ANR	3218707	Identifier	curr		3218148	0					
ANR	3218708	Identifier	opcode		3218148	1					
ANR	3218709	Identifier	ZEND_VERIFY_RETURN_TYPE		3218148	1					
ANR	3218710	EqualityExpression	curr -> opcode != ZEND_DISCARD_EXCEPTION		3218148	1		!=			
ANR	3218711	PtrMemberAccess	curr -> opcode		3218148	0					
ANR	3218712	Identifier	curr		3218148	0					
ANR	3218713	Identifier	opcode		3218148	1					
ANR	3218714	Identifier	ZEND_DISCARD_EXCEPTION		3218148	1					
ANR	3218715	CompoundStatement		82:58:2756:2756	3218148	1					
ANR	3218716	BreakStatement	break ;	125:8:4682:4687	3218148	0	True				
ANR	3218717	IfStatement	if ( use_new_var )		3218148	2					
ANR	3218718	Condition	use_new_var	129:9:4722:4732	3218148	0	True				
ANR	3218719	Identifier	use_new_var		3218148	0					
ANR	3218720	CompoundStatement		87:22:2819:2819	3218148	1					
ANR	3218721	ExpressionStatement	i = ++ max	130:6:4743:4752	3218148	0	True				
ANR	3218722	AssignmentExpression	i = ++ max		3218148	0		=			
ANR	3218723	Identifier	i		3218148	0					
ANR	3218724	UnaryExpression	++ max		3218148	1					
ANR	3218725	IncDec	++		3218148	0					
ANR	3218726	Identifier	max		3218148	1					
ANR	3218727	ExpressionStatement	"zend_bitset_incl ( taken_T , i )"	131:6:4760:4788	3218148	1	True				
ANR	3218728	CallExpression	"zend_bitset_incl ( taken_T , i )"		3218148	0					
ANR	3218729	Callee	zend_bitset_incl		3218148	0					
ANR	3218730	Identifier	zend_bitset_incl		3218148	0					
ANR	3218731	ArgumentList	taken_T		3218148	1					
ANR	3218732	Argument	taken_T		3218148	0					
ANR	3218733	Identifier	taken_T		3218148	0					
ANR	3218734	Argument	i		3218148	1					
ANR	3218735	Identifier	i		3218148	0					
ANR	3218736	ElseStatement	else		3218148	0					
ANR	3218737	CompoundStatement		90:12:2886:2886	3218148	0					
ANR	3218738	ExpressionStatement	GET_AVAILABLE_T ( )	133:6:4810:4827	3218148	0	True				
ANR	3218739	CallExpression	GET_AVAILABLE_T ( )		3218148	0					
ANR	3218740	Callee	GET_AVAILABLE_T		3218148	0					
ANR	3218741	Identifier	GET_AVAILABLE_T		3218148	0					
ANR	3218742	ArgumentList			3218148	1					
ANR	3218743	ExpressionStatement	map_T [ currT ] = i	135:5:4841:4857	3218148	3	True				
ANR	3218744	AssignmentExpression	map_T [ currT ] = i		3218148	0		=			
ANR	3218745	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3218746	Identifier	map_T		3218148	0					
ANR	3218747	Identifier	currT		3218148	1					
ANR	3218748	Identifier	i		3218148	1					
ANR	3218749	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	136:5:4864:4896	3218148	4	True				
ANR	3218750	CallExpression	"zend_bitset_incl ( valid_T , currT )"		3218148	0					
ANR	3218751	Callee	zend_bitset_incl		3218148	0					
ANR	3218752	Identifier	zend_bitset_incl		3218148	0					
ANR	3218753	ArgumentList	valid_T		3218148	1					
ANR	3218754	Argument	valid_T		3218148	0					
ANR	3218755	Identifier	valid_T		3218148	0					
ANR	3218756	Argument	currT		3218148	1					
ANR	3218757	Identifier	currT		3218148	0					
ANR	3218758	ExpressionStatement	ZEND_OP1 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )	138:4:4908:4961	3218148	1	True				
ANR	3218759	AssignmentExpression	ZEND_OP1 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )		3218148	0		=			
ANR	3218760	MemberAccess	ZEND_OP1 ( opline ) . var		3218148	0					
ANR	3218761	CallExpression	ZEND_OP1 ( opline )		3218148	0					
ANR	3218762	Callee	ZEND_OP1		3218148	0					
ANR	3218763	Identifier	ZEND_OP1		3218148	0					
ANR	3218764	ArgumentList	opline		3218148	1					
ANR	3218765	Argument	opline		3218148	0					
ANR	3218766	Identifier	opline		3218148	0					
ANR	3218767	Identifier	var		3218148	1					
ANR	3218768	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		3218148	1					
ANR	3218769	Callee	NUM_VAR		3218148	0					
ANR	3218770	Identifier	NUM_VAR		3218148	0					
ANR	3218771	ArgumentList	map_T [ currT ] + offset		3218148	1					
ANR	3218772	Argument	map_T [ currT ] + offset		3218148	0					
ANR	3218773	AdditiveExpression	map_T [ currT ] + offset		3218148	0		+			
ANR	3218774	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3218775	Identifier	map_T		3218148	0					
ANR	3218776	Identifier	currT		3218148	1					
ANR	3218777	Identifier	offset		3218148	1					
ANR	3218778	IfStatement	if ( opline -> opcode == ZEND_OP_DATA && ( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM )		3218148	1					
ANR	3218779	Condition	opline -> opcode == ZEND_OP_DATA && ( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM	143:6:5000:5076	3218148	0	True				
ANR	3218780	AndExpression	opline -> opcode == ZEND_OP_DATA && ( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM		3218148	0		&&			
ANR	3218781	EqualityExpression	opline -> opcode == ZEND_OP_DATA		3218148	0		==			
ANR	3218782	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218783	Identifier	opline		3218148	0					
ANR	3218784	Identifier	opcode		3218148	1					
ANR	3218785	Identifier	ZEND_OP_DATA		3218148	1					
ANR	3218786	EqualityExpression	( opline - 1 ) -> opcode == ZEND_ASSIGN_DIM		3218148	1		==			
ANR	3218787	PtrMemberAccess	( opline - 1 ) -> opcode		3218148	0					
ANR	3218788	AdditiveExpression	opline - 1		3218148	0		-			
ANR	3218789	Identifier	opline		3218148	0					
ANR	3218790	PrimaryExpression	1		3218148	1					
ANR	3218791	Identifier	opcode		3218148	1					
ANR	3218792	Identifier	ZEND_ASSIGN_DIM		3218148	1					
ANR	3218793	CompoundStatement		102:45:3163:3163	3218148	1					
ANR	3218794	ExpressionStatement	opline --	145:6:5087:5095	3218148	0	True				
ANR	3218795	PostIncDecOperationExpression	opline --		3218148	0					
ANR	3218796	Identifier	opline		3218148	0					
ANR	3218797	IncDec	--		3218148	1					
ANR	3218798	ContinueStatement	continue ;	146:6:5103:5111	3218148	1	True				
ANR	3218799	IfStatement	if ( ( ZEND_OP2_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) ) )		3218148	2					
ANR	3218800	Condition	ZEND_OP2_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	149:6:5124:5170	3218148	0	True				
ANR	3218801	BitAndExpression	ZEND_OP2_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		3218148	0		&			
ANR	3218802	CallExpression	ZEND_OP2_TYPE ( opline )		3218148	0					
ANR	3218803	Callee	ZEND_OP2_TYPE		3218148	0					
ANR	3218804	Identifier	ZEND_OP2_TYPE		3218148	0					
ANR	3218805	ArgumentList	opline		3218148	1					
ANR	3218806	Argument	opline		3218148	0					
ANR	3218807	Identifier	opline		3218148	0					
ANR	3218808	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		3218148	1		|			
ANR	3218809	Identifier	IS_VAR		3218148	0					
ANR	3218810	Identifier	IS_TMP_VAR		3218148	1					
ANR	3218811	CompoundStatement		107:55:3257:3257	3218148	1					
ANR	3218812	ExpressionStatement	currT = VAR_NUM ( ZEND_OP2 ( opline ) . var ) - offset	150:3:5178:5224	3218148	0	True				
ANR	3218813	AssignmentExpression	currT = VAR_NUM ( ZEND_OP2 ( opline ) . var ) - offset		3218148	0		=			
ANR	3218814	Identifier	currT		3218148	0					
ANR	3218815	AdditiveExpression	VAR_NUM ( ZEND_OP2 ( opline ) . var ) - offset		3218148	1		-			
ANR	3218816	CallExpression	VAR_NUM ( ZEND_OP2 ( opline ) . var )		3218148	0					
ANR	3218817	Callee	VAR_NUM		3218148	0					
ANR	3218818	Identifier	VAR_NUM		3218148	0					
ANR	3218819	ArgumentList	ZEND_OP2 ( opline ) . var		3218148	1					
ANR	3218820	Argument	ZEND_OP2 ( opline ) . var		3218148	0					
ANR	3218821	MemberAccess	ZEND_OP2 ( opline ) . var		3218148	0					
ANR	3218822	CallExpression	ZEND_OP2 ( opline )		3218148	0					
ANR	3218823	Callee	ZEND_OP2		3218148	0					
ANR	3218824	Identifier	ZEND_OP2		3218148	0					
ANR	3218825	ArgumentList	opline		3218148	1					
ANR	3218826	Argument	opline		3218148	0					
ANR	3218827	Identifier	opline		3218148	0					
ANR	3218828	Identifier	var		3218148	1					
ANR	3218829	Identifier	offset		3218148	1					
ANR	3218830	IfStatement	"if ( ! zend_bitset_in ( valid_T , currT ) )"		3218148	1					
ANR	3218831	Condition	"! zend_bitset_in ( valid_T , currT )"	151:7:5233:5263	3218148	0	True				
ANR	3218832	UnaryOperationExpression	"! zend_bitset_in ( valid_T , currT )"		3218148	0					
ANR	3218833	UnaryOperator	!		3218148	0					
ANR	3218834	CallExpression	"zend_bitset_in ( valid_T , currT )"		3218148	1					
ANR	3218835	Callee	zend_bitset_in		3218148	0					
ANR	3218836	Identifier	zend_bitset_in		3218148	0					
ANR	3218837	ArgumentList	valid_T		3218148	1					
ANR	3218838	Argument	valid_T		3218148	0					
ANR	3218839	Identifier	valid_T		3218148	0					
ANR	3218840	Argument	currT		3218148	1					
ANR	3218841	Identifier	currT		3218148	0					
ANR	3218842	CompoundStatement		109:40:3350:3350	3218148	1					
ANR	3218843	ExpressionStatement	GET_AVAILABLE_T ( )	152:4:5272:5289	3218148	0	True				
ANR	3218844	CallExpression	GET_AVAILABLE_T ( )		3218148	0					
ANR	3218845	Callee	GET_AVAILABLE_T		3218148	0					
ANR	3218846	Identifier	GET_AVAILABLE_T		3218148	0					
ANR	3218847	ArgumentList			3218148	1					
ANR	3218848	ExpressionStatement	map_T [ currT ] = i	153:4:5295:5311	3218148	1	True				
ANR	3218849	AssignmentExpression	map_T [ currT ] = i		3218148	0		=			
ANR	3218850	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3218851	Identifier	map_T		3218148	0					
ANR	3218852	Identifier	currT		3218148	1					
ANR	3218853	Identifier	i		3218148	1					
ANR	3218854	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	154:4:5317:5349	3218148	2	True				
ANR	3218855	CallExpression	"zend_bitset_incl ( valid_T , currT )"		3218148	0					
ANR	3218856	Callee	zend_bitset_incl		3218148	0					
ANR	3218857	Identifier	zend_bitset_incl		3218148	0					
ANR	3218858	ArgumentList	valid_T		3218148	1					
ANR	3218859	Argument	valid_T		3218148	0					
ANR	3218860	Identifier	valid_T		3218148	0					
ANR	3218861	Argument	currT		3218148	1					
ANR	3218862	Identifier	currT		3218148	0					
ANR	3218863	ExpressionStatement	ZEND_OP2 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )	156:3:5359:5412	3218148	2	True				
ANR	3218864	AssignmentExpression	ZEND_OP2 ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )		3218148	0		=			
ANR	3218865	MemberAccess	ZEND_OP2 ( opline ) . var		3218148	0					
ANR	3218866	CallExpression	ZEND_OP2 ( opline )		3218148	0					
ANR	3218867	Callee	ZEND_OP2		3218148	0					
ANR	3218868	Identifier	ZEND_OP2		3218148	0					
ANR	3218869	ArgumentList	opline		3218148	1					
ANR	3218870	Argument	opline		3218148	0					
ANR	3218871	Identifier	opline		3218148	0					
ANR	3218872	Identifier	var		3218148	1					
ANR	3218873	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		3218148	1					
ANR	3218874	Callee	NUM_VAR		3218148	0					
ANR	3218875	Identifier	NUM_VAR		3218148	0					
ANR	3218876	ArgumentList	map_T [ currT ] + offset		3218148	1					
ANR	3218877	Argument	map_T [ currT ] + offset		3218148	0					
ANR	3218878	AdditiveExpression	map_T [ currT ] + offset		3218148	0		+			
ANR	3218879	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3218880	Identifier	map_T		3218148	0					
ANR	3218881	Identifier	currT		3218148	1					
ANR	3218882	Identifier	offset		3218148	1					
ANR	3218883	IfStatement	if ( opline -> opcode == ZEND_DECLARE_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED )		3218148	3					
ANR	3218884	Condition	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED	159:6:5425:5601	3218148	0	True				
ANR	3218885	OrExpression	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED		3218148	0		||			
ANR	3218886	EqualityExpression	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS		3218148	0		==			
ANR	3218887	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218888	Identifier	opline		3218148	0					
ANR	3218889	Identifier	opcode		3218148	1					
ANR	3218890	Identifier	ZEND_DECLARE_INHERITED_CLASS		3218148	1					
ANR	3218891	OrExpression	opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS || opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED		3218148	1		||			
ANR	3218892	EqualityExpression	opline -> opcode == ZEND_DECLARE_ANON_INHERITED_CLASS		3218148	0		==			
ANR	3218893	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218894	Identifier	opline		3218148	0					
ANR	3218895	Identifier	opcode		3218148	1					
ANR	3218896	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS		3218148	1					
ANR	3218897	EqualityExpression	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED		3218148	1		==			
ANR	3218898	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218899	Identifier	opline		3218148	0					
ANR	3218900	Identifier	opcode		3218148	1					
ANR	3218901	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED		3218148	1					
ANR	3218902	CompoundStatement		119:68:3688:3688	3218148	1					
ANR	3218903	ExpressionStatement	currT = VAR_NUM ( opline -> extended_value ) - offset	162:3:5609:5657	3218148	0	True				
ANR	3218904	AssignmentExpression	currT = VAR_NUM ( opline -> extended_value ) - offset		3218148	0		=			
ANR	3218905	Identifier	currT		3218148	0					
ANR	3218906	AdditiveExpression	VAR_NUM ( opline -> extended_value ) - offset		3218148	1		-			
ANR	3218907	CallExpression	VAR_NUM ( opline -> extended_value )		3218148	0					
ANR	3218908	Callee	VAR_NUM		3218148	0					
ANR	3218909	Identifier	VAR_NUM		3218148	0					
ANR	3218910	ArgumentList	opline -> extended_value		3218148	1					
ANR	3218911	Argument	opline -> extended_value		3218148	0					
ANR	3218912	PtrMemberAccess	opline -> extended_value		3218148	0					
ANR	3218913	Identifier	opline		3218148	0					
ANR	3218914	Identifier	extended_value		3218148	1					
ANR	3218915	Identifier	offset		3218148	1					
ANR	3218916	IfStatement	"if ( ! zend_bitset_in ( valid_T , currT ) )"		3218148	1					
ANR	3218917	Condition	"! zend_bitset_in ( valid_T , currT )"	163:7:5666:5696	3218148	0	True				
ANR	3218918	UnaryOperationExpression	"! zend_bitset_in ( valid_T , currT )"		3218148	0					
ANR	3218919	UnaryOperator	!		3218148	0					
ANR	3218920	CallExpression	"zend_bitset_in ( valid_T , currT )"		3218148	1					
ANR	3218921	Callee	zend_bitset_in		3218148	0					
ANR	3218922	Identifier	zend_bitset_in		3218148	0					
ANR	3218923	ArgumentList	valid_T		3218148	1					
ANR	3218924	Argument	valid_T		3218148	0					
ANR	3218925	Identifier	valid_T		3218148	0					
ANR	3218926	Argument	currT		3218148	1					
ANR	3218927	Identifier	currT		3218148	0					
ANR	3218928	CompoundStatement		121:40:3783:3783	3218148	1					
ANR	3218929	ExpressionStatement	GET_AVAILABLE_T ( )	164:4:5705:5722	3218148	0	True				
ANR	3218930	CallExpression	GET_AVAILABLE_T ( )		3218148	0					
ANR	3218931	Callee	GET_AVAILABLE_T		3218148	0					
ANR	3218932	Identifier	GET_AVAILABLE_T		3218148	0					
ANR	3218933	ArgumentList			3218148	1					
ANR	3218934	ExpressionStatement	map_T [ currT ] = i	165:4:5728:5744	3218148	1	True				
ANR	3218935	AssignmentExpression	map_T [ currT ] = i		3218148	0		=			
ANR	3218936	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3218937	Identifier	map_T		3218148	0					
ANR	3218938	Identifier	currT		3218148	1					
ANR	3218939	Identifier	i		3218148	1					
ANR	3218940	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	166:4:5750:5782	3218148	2	True				
ANR	3218941	CallExpression	"zend_bitset_incl ( valid_T , currT )"		3218148	0					
ANR	3218942	Callee	zend_bitset_incl		3218148	0					
ANR	3218943	Identifier	zend_bitset_incl		3218148	0					
ANR	3218944	ArgumentList	valid_T		3218148	1					
ANR	3218945	Argument	valid_T		3218148	0					
ANR	3218946	Identifier	valid_T		3218148	0					
ANR	3218947	Argument	currT		3218148	1					
ANR	3218948	Identifier	currT		3218148	0					
ANR	3218949	ExpressionStatement	opline -> extended_value = NUM_VAR ( map_T [ currT ] + offset )	168:3:5792:5847	3218148	2	True				
ANR	3218950	AssignmentExpression	opline -> extended_value = NUM_VAR ( map_T [ currT ] + offset )		3218148	0		=			
ANR	3218951	PtrMemberAccess	opline -> extended_value		3218148	0					
ANR	3218952	Identifier	opline		3218148	0					
ANR	3218953	Identifier	extended_value		3218148	1					
ANR	3218954	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		3218148	1					
ANR	3218955	Callee	NUM_VAR		3218148	0					
ANR	3218956	Identifier	NUM_VAR		3218148	0					
ANR	3218957	ArgumentList	map_T [ currT ] + offset		3218148	1					
ANR	3218958	Argument	map_T [ currT ] + offset		3218148	0					
ANR	3218959	AdditiveExpression	map_T [ currT ] + offset		3218148	0		+			
ANR	3218960	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3218961	Identifier	map_T		3218148	0					
ANR	3218962	Identifier	currT		3218148	1					
ANR	3218963	Identifier	offset		3218148	1					
ANR	3218964	IfStatement	if ( opline -> opcode == ZEND_ASSIGN_DIM && ( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR ) )		3218148	4					
ANR	3218965	Condition	opline -> opcode == ZEND_ASSIGN_DIM && ( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )	172:6:5928:6065	3218148	0	True				
ANR	3218966	AndExpression	opline -> opcode == ZEND_ASSIGN_DIM && ( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )		3218148	0		&&			
ANR	3218967	EqualityExpression	opline -> opcode == ZEND_ASSIGN_DIM		3218148	0		==			
ANR	3218968	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3218969	Identifier	opline		3218148	0					
ANR	3218970	Identifier	opcode		3218148	1					
ANR	3218971	Identifier	ZEND_ASSIGN_DIM		3218148	1					
ANR	3218972	AndExpression	( opline + 1 ) -> opcode == ZEND_OP_DATA && ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )		3218148	1		&&			
ANR	3218973	EqualityExpression	( opline + 1 ) -> opcode == ZEND_OP_DATA		3218148	0		==			
ANR	3218974	PtrMemberAccess	( opline + 1 ) -> opcode		3218148	0					
ANR	3218975	AdditiveExpression	opline + 1		3218148	0		+			
ANR	3218976	Identifier	opline		3218148	0					
ANR	3218977	PrimaryExpression	1		3218148	1					
ANR	3218978	Identifier	opcode		3218148	1					
ANR	3218979	Identifier	ZEND_OP_DATA		3218148	1					
ANR	3218980	BitAndExpression	ZEND_OP2_TYPE ( opline + 1 ) & ( IS_VAR | IS_TMP_VAR )		3218148	1		&			
ANR	3218981	CallExpression	ZEND_OP2_TYPE ( opline + 1 )		3218148	0					
ANR	3218982	Callee	ZEND_OP2_TYPE		3218148	0					
ANR	3218983	Identifier	ZEND_OP2_TYPE		3218148	0					
ANR	3218984	ArgumentList	opline + 1		3218148	1					
ANR	3218985	Argument	opline + 1		3218148	0					
ANR	3218986	AdditiveExpression	opline + 1		3218148	0		+			
ANR	3218987	Identifier	opline		3218148	0					
ANR	3218988	PrimaryExpression	1		3218148	1					
ANR	3218989	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		3218148	1		|			
ANR	3218990	Identifier	IS_VAR		3218148	0					
ANR	3218991	Identifier	IS_TMP_VAR		3218148	1					
ANR	3218992	CompoundStatement		132:57:4152:4152	3218148	1					
ANR	3218993	ExpressionStatement	currT = VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var ) - offset	175:3:6073:6123	3218148	0	True				
ANR	3218994	AssignmentExpression	currT = VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var ) - offset		3218148	0		=			
ANR	3218995	Identifier	currT		3218148	0					
ANR	3218996	AdditiveExpression	VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var ) - offset		3218148	1		-			
ANR	3218997	CallExpression	VAR_NUM ( ZEND_OP2 ( opline + 1 ) . var )		3218148	0					
ANR	3218998	Callee	VAR_NUM		3218148	0					
ANR	3218999	Identifier	VAR_NUM		3218148	0					
ANR	3219000	ArgumentList	ZEND_OP2 ( opline + 1 ) . var		3218148	1					
ANR	3219001	Argument	ZEND_OP2 ( opline + 1 ) . var		3218148	0					
ANR	3219002	MemberAccess	ZEND_OP2 ( opline + 1 ) . var		3218148	0					
ANR	3219003	CallExpression	ZEND_OP2 ( opline + 1 )		3218148	0					
ANR	3219004	Callee	ZEND_OP2		3218148	0					
ANR	3219005	Identifier	ZEND_OP2		3218148	0					
ANR	3219006	ArgumentList	opline + 1		3218148	1					
ANR	3219007	Argument	opline + 1		3218148	0					
ANR	3219008	AdditiveExpression	opline + 1		3218148	0		+			
ANR	3219009	Identifier	opline		3218148	0					
ANR	3219010	PrimaryExpression	1		3218148	1					
ANR	3219011	Identifier	var		3218148	1					
ANR	3219012	Identifier	offset		3218148	1					
ANR	3219013	ExpressionStatement	GET_AVAILABLE_T ( )	176:3:6128:6145	3218148	1	True				
ANR	3219014	CallExpression	GET_AVAILABLE_T ( )		3218148	0					
ANR	3219015	Callee	GET_AVAILABLE_T		3218148	0					
ANR	3219016	Identifier	GET_AVAILABLE_T		3218148	0					
ANR	3219017	ArgumentList			3218148	1					
ANR	3219018	ExpressionStatement	map_T [ currT ] = i	177:3:6150:6166	3218148	2	True				
ANR	3219019	AssignmentExpression	map_T [ currT ] = i		3218148	0		=			
ANR	3219020	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3219021	Identifier	map_T		3218148	0					
ANR	3219022	Identifier	currT		3218148	1					
ANR	3219023	Identifier	i		3218148	1					
ANR	3219024	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	178:3:6171:6203	3218148	3	True				
ANR	3219025	CallExpression	"zend_bitset_incl ( valid_T , currT )"		3218148	0					
ANR	3219026	Callee	zend_bitset_incl		3218148	0					
ANR	3219027	Identifier	zend_bitset_incl		3218148	0					
ANR	3219028	ArgumentList	valid_T		3218148	1					
ANR	3219029	Argument	valid_T		3218148	0					
ANR	3219030	Identifier	valid_T		3218148	0					
ANR	3219031	Argument	currT		3218148	1					
ANR	3219032	Identifier	currT		3218148	0					
ANR	3219033	ExpressionStatement	"zend_bitset_excl ( taken_T , i )"	179:3:6208:6236	3218148	4	True				
ANR	3219034	CallExpression	"zend_bitset_excl ( taken_T , i )"		3218148	0					
ANR	3219035	Callee	zend_bitset_excl		3218148	0					
ANR	3219036	Identifier	zend_bitset_excl		3218148	0					
ANR	3219037	ArgumentList	taken_T		3218148	1					
ANR	3219038	Argument	taken_T		3218148	0					
ANR	3219039	Identifier	taken_T		3218148	0					
ANR	3219040	Argument	i		3218148	1					
ANR	3219041	Identifier	i		3218148	0					
ANR	3219042	ExpressionStatement	ZEND_OP2 ( opline + 1 ) . var = NUM_VAR ( i + offset )	180:3:6241:6287	3218148	5	True				
ANR	3219043	AssignmentExpression	ZEND_OP2 ( opline + 1 ) . var = NUM_VAR ( i + offset )		3218148	0		=			
ANR	3219044	MemberAccess	ZEND_OP2 ( opline + 1 ) . var		3218148	0					
ANR	3219045	CallExpression	ZEND_OP2 ( opline + 1 )		3218148	0					
ANR	3219046	Callee	ZEND_OP2		3218148	0					
ANR	3219047	Identifier	ZEND_OP2		3218148	0					
ANR	3219048	ArgumentList	opline + 1		3218148	1					
ANR	3219049	Argument	opline + 1		3218148	0					
ANR	3219050	AdditiveExpression	opline + 1		3218148	0		+			
ANR	3219051	Identifier	opline		3218148	0					
ANR	3219052	PrimaryExpression	1		3218148	1					
ANR	3219053	Identifier	var		3218148	1					
ANR	3219054	CallExpression	NUM_VAR ( i + offset )		3218148	1					
ANR	3219055	Callee	NUM_VAR		3218148	0					
ANR	3219056	Identifier	NUM_VAR		3218148	0					
ANR	3219057	ArgumentList	i + offset		3218148	1					
ANR	3219058	Argument	i + offset		3218148	0					
ANR	3219059	AdditiveExpression	i + offset		3218148	0		+			
ANR	3219060	Identifier	i		3218148	0					
ANR	3219061	Identifier	offset		3218148	1					
ANR	3219062	ExpressionStatement	var_to_free = i	181:3:6292:6307	3218148	6	True				
ANR	3219063	AssignmentExpression	var_to_free = i		3218148	0		=			
ANR	3219064	Identifier	var_to_free		3218148	0					
ANR	3219065	Identifier	i		3218148	1					
ANR	3219066	IfStatement	if ( ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR ) )		3218148	5					
ANR	3219067	Condition	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )	184:6:6320:6367	3218148	0	True				
ANR	3219068	BitAndExpression	ZEND_RESULT_TYPE ( opline ) & ( IS_VAR | IS_TMP_VAR )		3218148	0		&			
ANR	3219069	CallExpression	ZEND_RESULT_TYPE ( opline )		3218148	0					
ANR	3219070	Callee	ZEND_RESULT_TYPE		3218148	0					
ANR	3219071	Identifier	ZEND_RESULT_TYPE		3218148	0					
ANR	3219072	ArgumentList	opline		3218148	1					
ANR	3219073	Argument	opline		3218148	0					
ANR	3219074	Identifier	opline		3218148	0					
ANR	3219075	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		3218148	1		|			
ANR	3219076	Identifier	IS_VAR		3218148	0					
ANR	3219077	Identifier	IS_TMP_VAR		3218148	1					
ANR	3219078	CompoundStatement		142:56:4454:4454	3218148	1					
ANR	3219079	ExpressionStatement	currT = VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset	185:3:6375:6424	3218148	0	True				
ANR	3219080	AssignmentExpression	currT = VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset		3218148	0		=			
ANR	3219081	Identifier	currT		3218148	0					
ANR	3219082	AdditiveExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var ) - offset		3218148	1		-			
ANR	3219083	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		3218148	0					
ANR	3219084	Callee	VAR_NUM		3218148	0					
ANR	3219085	Identifier	VAR_NUM		3218148	0					
ANR	3219086	ArgumentList	ZEND_RESULT ( opline ) . var		3218148	1					
ANR	3219087	Argument	ZEND_RESULT ( opline ) . var		3218148	0					
ANR	3219088	MemberAccess	ZEND_RESULT ( opline ) . var		3218148	0					
ANR	3219089	CallExpression	ZEND_RESULT ( opline )		3218148	0					
ANR	3219090	Callee	ZEND_RESULT		3218148	0					
ANR	3219091	Identifier	ZEND_RESULT		3218148	0					
ANR	3219092	ArgumentList	opline		3218148	1					
ANR	3219093	Argument	opline		3218148	0					
ANR	3219094	Identifier	opline		3218148	0					
ANR	3219095	Identifier	var		3218148	1					
ANR	3219096	Identifier	offset		3218148	1					
ANR	3219097	IfStatement	"if ( zend_bitset_in ( valid_T , currT ) )"		3218148	1					
ANR	3219098	Condition	"zend_bitset_in ( valid_T , currT )"	186:7:6433:6462	3218148	0	True				
ANR	3219099	CallExpression	"zend_bitset_in ( valid_T , currT )"		3218148	0					
ANR	3219100	Callee	zend_bitset_in		3218148	0					
ANR	3219101	Identifier	zend_bitset_in		3218148	0					
ANR	3219102	ArgumentList	valid_T		3218148	1					
ANR	3219103	Argument	valid_T		3218148	0					
ANR	3219104	Identifier	valid_T		3218148	0					
ANR	3219105	Argument	currT		3218148	1					
ANR	3219106	Identifier	currT		3218148	0					
ANR	3219107	CompoundStatement		144:39:4549:4549	3218148	1					
ANR	3219108	IfStatement	if ( start_of_T [ currT ] == opline )		3218148	0					
ANR	3219109	Condition	start_of_T [ currT ] == opline	187:8:6475:6501	3218148	0	True				
ANR	3219110	EqualityExpression	start_of_T [ currT ] == opline		3218148	0		==			
ANR	3219111	ArrayIndexing	start_of_T [ currT ]		3218148	0					
ANR	3219112	Identifier	start_of_T		3218148	0					
ANR	3219113	Identifier	currT		3218148	1					
ANR	3219114	Identifier	opline		3218148	1					
ANR	3219115	CompoundStatement		145:37:4588:4588	3218148	1					
ANR	3219116	IfStatement	if ( opline -> opcode != ZEND_FAST_CALL )		3218148	0					
ANR	3219117	Condition	opline -> opcode != ZEND_FAST_CALL	191:9:6686:6717	3218148	0	True				
ANR	3219118	EqualityExpression	opline -> opcode != ZEND_FAST_CALL		3218148	0		!=			
ANR	3219119	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3219120	Identifier	opline		3218148	0					
ANR	3219121	Identifier	opcode		3218148	1					
ANR	3219122	Identifier	ZEND_FAST_CALL		3218148	1					
ANR	3219123	CompoundStatement		149:43:4804:4804	3218148	1					
ANR	3219124	ExpressionStatement	"zend_bitset_excl ( taken_T , map_T [ currT ] )"	192:6:6728:6767	3218148	0	True				
ANR	3219125	CallExpression	"zend_bitset_excl ( taken_T , map_T [ currT ] )"		3218148	0					
ANR	3219126	Callee	zend_bitset_excl		3218148	0					
ANR	3219127	Identifier	zend_bitset_excl		3218148	0					
ANR	3219128	ArgumentList	taken_T		3218148	1					
ANR	3219129	Argument	taken_T		3218148	0					
ANR	3219130	Identifier	taken_T		3218148	0					
ANR	3219131	Argument	map_T [ currT ]		3218148	1					
ANR	3219132	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3219133	Identifier	map_T		3218148	0					
ANR	3219134	Identifier	currT		3218148	1					
ANR	3219135	ExpressionStatement	ZEND_RESULT ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )	195:4:6786:6842	3218148	1	True				
ANR	3219136	AssignmentExpression	ZEND_RESULT ( opline ) . var = NUM_VAR ( map_T [ currT ] + offset )		3218148	0		=			
ANR	3219137	MemberAccess	ZEND_RESULT ( opline ) . var		3218148	0					
ANR	3219138	CallExpression	ZEND_RESULT ( opline )		3218148	0					
ANR	3219139	Callee	ZEND_RESULT		3218148	0					
ANR	3219140	Identifier	ZEND_RESULT		3218148	0					
ANR	3219141	ArgumentList	opline		3218148	1					
ANR	3219142	Argument	opline		3218148	0					
ANR	3219143	Identifier	opline		3218148	0					
ANR	3219144	Identifier	var		3218148	1					
ANR	3219145	CallExpression	NUM_VAR ( map_T [ currT ] + offset )		3218148	1					
ANR	3219146	Callee	NUM_VAR		3218148	0					
ANR	3219147	Identifier	NUM_VAR		3218148	0					
ANR	3219148	ArgumentList	map_T [ currT ] + offset		3218148	1					
ANR	3219149	Argument	map_T [ currT ] + offset		3218148	0					
ANR	3219150	AdditiveExpression	map_T [ currT ] + offset		3218148	0		+			
ANR	3219151	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3219152	Identifier	map_T		3218148	0					
ANR	3219153	Identifier	currT		3218148	1					
ANR	3219154	Identifier	offset		3218148	1					
ANR	3219155	IfStatement	if ( opline -> opcode == ZEND_ROPE_INIT )		3218148	2					
ANR	3219156	Condition	opline -> opcode == ZEND_ROPE_INIT	196:8:6852:6883	3218148	0	True				
ANR	3219157	EqualityExpression	opline -> opcode == ZEND_ROPE_INIT		3218148	0		==			
ANR	3219158	PtrMemberAccess	opline -> opcode		3218148	0					
ANR	3219159	Identifier	opline		3218148	0					
ANR	3219160	Identifier	opcode		3218148	1					
ANR	3219161	Identifier	ZEND_ROPE_INIT		3218148	1					
ANR	3219162	CompoundStatement		154:42:4970:4970	3218148	1					
ANR	3219163	IfStatement	if ( start_of_T [ currT ] == opline )		3218148	0					
ANR	3219164	Condition	start_of_T [ currT ] == opline	197:9:6897:6923	3218148	0	True				
ANR	3219165	EqualityExpression	start_of_T [ currT ] == opline		3218148	0		==			
ANR	3219166	ArrayIndexing	start_of_T [ currT ]		3218148	0					
ANR	3219167	Identifier	start_of_T		3218148	0					
ANR	3219168	Identifier	currT		3218148	1					
ANR	3219169	Identifier	opline		3218148	1					
ANR	3219170	CompoundStatement		156:6:5018:5118	3218148	1					
ANR	3219171	IdentifierDeclStatement	uint32_t num = ( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval ) ;	198:6:6934:7034	3218148	0	True				
ANR	3219172	IdentifierDecl	num = ( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3218148	0					
ANR	3219173	IdentifierDeclType	uint32_t		3218148	0					
ANR	3219174	Identifier	num		3218148	1					
ANR	3219175	AssignmentExpression	num = ( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3218148	2		=			
ANR	3219176	Identifier	num		3218148	0					
ANR	3219177	MultiplicativeExpression	( ( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 ) ) / sizeof ( zval )		3218148	1		/			
ANR	3219178	AdditiveExpression	( opline -> extended_value * sizeof ( zend_string * ) ) + ( sizeof ( zval ) - 1 )		3218148	0		+			
ANR	3219179	MultiplicativeExpression	opline -> extended_value * sizeof ( zend_string * )		3218148	0		*			
ANR	3219180	PtrMemberAccess	opline -> extended_value		3218148	0					
ANR	3219181	Identifier	opline		3218148	0					
ANR	3219182	Identifier	extended_value		3218148	1					
ANR	3219183	SizeofExpression	sizeof ( zend_string * )		3218148	1					
ANR	3219184	Sizeof	sizeof		3218148	0					
ANR	3219185	SizeofOperand	zend_string *		3218148	1					
ANR	3219186	AdditiveExpression	sizeof ( zval ) - 1		3218148	1		-			
ANR	3219187	SizeofExpression	sizeof ( zval )		3218148	0					
ANR	3219188	Sizeof	sizeof		3218148	0					
ANR	3219189	SizeofOperand	zval		3218148	1					
ANR	3219190	PrimaryExpression	1		3218148	1					
ANR	3219191	SizeofExpression	sizeof ( zval )		3218148	1					
ANR	3219192	Sizeof	sizeof		3218148	0					
ANR	3219193	SizeofOperand	zval		3218148	1					
ANR	3219194	WhileStatement	while ( num > 1 )		3218148	1					
ANR	3219195	Condition	num > 1	199:13:7049:7055	3218148	0	True				
ANR	3219196	RelationalExpression	num > 1		3218148	0		>			
ANR	3219197	Identifier	num		3218148	0					
ANR	3219198	PrimaryExpression	1		3218148	1					
ANR	3219199	CompoundStatement		157:22:5142:5142	3218148	1					
ANR	3219200	ExpressionStatement	num --	200:7:7067:7072	3218148	0	True				
ANR	3219201	PostIncDecOperationExpression	num --		3218148	0					
ANR	3219202	Identifier	num		3218148	0					
ANR	3219203	IncDec	--		3218148	1					
ANR	3219204	ExpressionStatement	"zend_bitset_excl ( taken_T , map_T [ currT ] + num )"	201:7:7081:7124	3218148	1	True				
ANR	3219205	CallExpression	"zend_bitset_excl ( taken_T , map_T [ currT ] + num )"		3218148	0					
ANR	3219206	Callee	zend_bitset_excl		3218148	0					
ANR	3219207	Identifier	zend_bitset_excl		3218148	0					
ANR	3219208	ArgumentList	taken_T		3218148	1					
ANR	3219209	Argument	taken_T		3218148	0					
ANR	3219210	Identifier	taken_T		3218148	0					
ANR	3219211	Argument	map_T [ currT ] + num		3218148	1					
ANR	3219212	AdditiveExpression	map_T [ currT ] + num		3218148	0		+			
ANR	3219213	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3219214	Identifier	map_T		3218148	0					
ANR	3219215	Identifier	currT		3218148	1					
ANR	3219216	Identifier	num		3218148	1					
ANR	3219217	ElseStatement	else		3218148	0					
ANR	3219218	CompoundStatement		163:10:5241:5241	3218148	0					
ANR	3219219	ExpressionStatement	GET_AVAILABLE_T ( )	206:4:7254:7271	3218148	0	True				
ANR	3219220	CallExpression	GET_AVAILABLE_T ( )		3218148	0					
ANR	3219221	Callee	GET_AVAILABLE_T		3218148	0					
ANR	3219222	Identifier	GET_AVAILABLE_T		3218148	0					
ANR	3219223	ArgumentList			3218148	1					
ANR	3219224	IfStatement	if ( RESULT_UNUSED ( opline ) )		3218148	1					
ANR	3219225	Condition	RESULT_UNUSED ( opline )	208:8:7282:7302	3218148	0	True				
ANR	3219226	CallExpression	RESULT_UNUSED ( opline )		3218148	0					
ANR	3219227	Callee	RESULT_UNUSED		3218148	0					
ANR	3219228	Identifier	RESULT_UNUSED		3218148	0					
ANR	3219229	ArgumentList	opline		3218148	1					
ANR	3219230	Argument	opline		3218148	0					
ANR	3219231	Identifier	opline		3218148	0					
ANR	3219232	CompoundStatement		166:31:5389:5389	3218148	1					
ANR	3219233	ExpressionStatement	"zend_bitset_excl ( taken_T , i )"	209:5:7312:7340	3218148	0	True				
ANR	3219234	CallExpression	"zend_bitset_excl ( taken_T , i )"		3218148	0					
ANR	3219235	Callee	zend_bitset_excl		3218148	0					
ANR	3219236	Identifier	zend_bitset_excl		3218148	0					
ANR	3219237	ArgumentList	taken_T		3218148	1					
ANR	3219238	Argument	taken_T		3218148	0					
ANR	3219239	Identifier	taken_T		3218148	0					
ANR	3219240	Argument	i		3218148	1					
ANR	3219241	Identifier	i		3218148	0					
ANR	3219242	ElseStatement	else		3218148	0					
ANR	3219243	CompoundStatement		168:11:5437:5437	3218148	0					
ANR	3219244	ExpressionStatement	map_T [ currT ] = i	212:5:7439:7455	3218148	0	True				
ANR	3219245	AssignmentExpression	map_T [ currT ] = i		3218148	0		=			
ANR	3219246	ArrayIndexing	map_T [ currT ]		3218148	0					
ANR	3219247	Identifier	map_T		3218148	0					
ANR	3219248	Identifier	currT		3218148	1					
ANR	3219249	Identifier	i		3218148	1					
ANR	3219250	ExpressionStatement	"zend_bitset_incl ( valid_T , currT )"	213:5:7462:7494	3218148	1	True				
ANR	3219251	CallExpression	"zend_bitset_incl ( valid_T , currT )"		3218148	0					
ANR	3219252	Callee	zend_bitset_incl		3218148	0					
ANR	3219253	Identifier	zend_bitset_incl		3218148	0					
ANR	3219254	ArgumentList	valid_T		3218148	1					
ANR	3219255	Argument	valid_T		3218148	0					
ANR	3219256	Identifier	valid_T		3218148	0					
ANR	3219257	Argument	currT		3218148	1					
ANR	3219258	Identifier	currT		3218148	0					
ANR	3219259	ExpressionStatement	ZEND_RESULT ( opline ) . var = NUM_VAR ( i + offset )	215:4:7506:7551	3218148	2	True				
ANR	3219260	AssignmentExpression	ZEND_RESULT ( opline ) . var = NUM_VAR ( i + offset )		3218148	0		=			
ANR	3219261	MemberAccess	ZEND_RESULT ( opline ) . var		3218148	0					
ANR	3219262	CallExpression	ZEND_RESULT ( opline )		3218148	0					
ANR	3219263	Callee	ZEND_RESULT		3218148	0					
ANR	3219264	Identifier	ZEND_RESULT		3218148	0					
ANR	3219265	ArgumentList	opline		3218148	1					
ANR	3219266	Argument	opline		3218148	0					
ANR	3219267	Identifier	opline		3218148	0					
ANR	3219268	Identifier	var		3218148	1					
ANR	3219269	CallExpression	NUM_VAR ( i + offset )		3218148	1					
ANR	3219270	Callee	NUM_VAR		3218148	0					
ANR	3219271	Identifier	NUM_VAR		3218148	0					
ANR	3219272	ArgumentList	i + offset		3218148	1					
ANR	3219273	Argument	i + offset		3218148	0					
ANR	3219274	AdditiveExpression	i + offset		3218148	0		+			
ANR	3219275	Identifier	i		3218148	0					
ANR	3219276	Identifier	offset		3218148	1					
ANR	3219277	IfStatement	if ( var_to_free >= 0 )		3218148	6					
ANR	3219278	Condition	var_to_free >= 0	219:6:7569:7584	3218148	0	True				
ANR	3219279	RelationalExpression	var_to_free >= 0		3218148	0		>=			
ANR	3219280	Identifier	var_to_free		3218148	0					
ANR	3219281	PrimaryExpression	0		3218148	1					
ANR	3219282	CompoundStatement		177:24:5671:5671	3218148	1					
ANR	3219283	ExpressionStatement	"zend_bitset_excl ( taken_T , var_to_free )"	220:3:7592:7630	3218148	0	True				
ANR	3219284	CallExpression	"zend_bitset_excl ( taken_T , var_to_free )"		3218148	0					
ANR	3219285	Callee	zend_bitset_excl		3218148	0					
ANR	3219286	Identifier	zend_bitset_excl		3218148	0					
ANR	3219287	ArgumentList	taken_T		3218148	1					
ANR	3219288	Argument	taken_T		3218148	0					
ANR	3219289	Identifier	taken_T		3218148	0					
ANR	3219290	Argument	var_to_free		3218148	1					
ANR	3219291	Identifier	var_to_free		3218148	0					
ANR	3219292	ExpressionStatement	var_to_free = - 1	221:3:7635:7651	3218148	1	True				
ANR	3219293	AssignmentExpression	var_to_free = - 1		3218148	0		=			
ANR	3219294	Identifier	var_to_free		3218148	0					
ANR	3219295	UnaryOperationExpression	- 1		3218148	1					
ANR	3219296	UnaryOperator	-		3218148	0					
ANR	3219297	PrimaryExpression	1		3218148	1					
ANR	3219298	ExpressionStatement	opline --	224:2:7660:7668	3218148	7	True				
ANR	3219299	PostIncDecOperationExpression	opline --		3218148	0					
ANR	3219300	Identifier	opline		3218148	0					
ANR	3219301	IncDec	--		3218148	1					
ANR	3219302	ExpressionStatement	"zend_arena_release ( & ctx -> arena , checkpoint )"	227:1:7675:7718	3218148	26	True				
ANR	3219303	CallExpression	"zend_arena_release ( & ctx -> arena , checkpoint )"		3218148	0					
ANR	3219304	Callee	zend_arena_release		3218148	0					
ANR	3219305	Identifier	zend_arena_release		3218148	0					
ANR	3219306	ArgumentList	& ctx -> arena		3218148	1					
ANR	3219307	Argument	& ctx -> arena		3218148	0					
ANR	3219308	UnaryOperationExpression	& ctx -> arena		3218148	0					
ANR	3219309	UnaryOperator	&		3218148	0					
ANR	3219310	PtrMemberAccess	ctx -> arena		3218148	1					
ANR	3219311	Identifier	ctx		3218148	0					
ANR	3219312	Identifier	arena		3218148	1					
ANR	3219313	Argument	checkpoint		3218148	1					
ANR	3219314	Identifier	checkpoint		3218148	0					
ANR	3219315	ExpressionStatement	op_array -> T = max + 1	228:1:7721:7742	3218148	27	True				
ANR	3219316	AssignmentExpression	op_array -> T = max + 1		3218148	0		=			
ANR	3219317	PtrMemberAccess	op_array -> T		3218148	0					
ANR	3219318	Identifier	op_array		3218148	0					
ANR	3219319	Identifier	T		3218148	1					
ANR	3219320	AdditiveExpression	max + 1		3218148	1		+			
ANR	3219321	Identifier	max		3218148	0					
ANR	3219322	PrimaryExpression	1		3218148	1					
ANR	3219323	ReturnType	void		3218148	1					
ANR	3219324	Identifier	optimize_temporary_variables		3218148	2					
ANR	3219325	ParameterList	"zend_op_array * op_array , zend_optimizer_ctx * ctx"		3218148	3					
ANR	3219326	Parameter	zend_op_array * op_array	42:34:1865:1887	3218148	0	True				
ANR	3219327	ParameterType	zend_op_array *		3218148	0					
ANR	3219328	Identifier	op_array		3218148	1					
ANR	3219329	Parameter	zend_optimizer_ctx * ctx	42:59:1890:1912	3218148	1	True				
ANR	3219330	ParameterType	zend_optimizer_ctx *		3218148	0					
ANR	3219331	Identifier	ctx		3218148	1					
ANR	3219332	CFGEntryNode	ENTRY		3218148		True				
ANR	3219333	CFGExitNode	EXIT		3218148		True				
ANR	3219334	Symbol	checkpoint		3218148						
ANR	3219335	Symbol	ZEND_VERIFY_RETURN_TYPE		3218148						
ANR	3219336	Symbol	ZEND_FREE		3218148						
ANR	3219337	Symbol	bitset_len		3218148						
ANR	3219338	Symbol	num		3218148						
ANR	3219339	Symbol	ZEND_FE_FREE		3218148						
ANR	3219340	Symbol	ZEND_OP_DATA		3218148						
ANR	3219341	Symbol	ZEND_OP2_TYPE		3218148						
ANR	3219342	Symbol	opline -> extended_value		3218148						
ANR	3219343	Symbol	start_of_T		3218148						
ANR	3219344	Symbol	ZEND_RESULT ( opline ) . var		3218148						
ANR	3219345	Symbol	opline		3218148						
ANR	3219346	Symbol	op_array -> fn_flags		3218148						
ANR	3219347	Symbol	valid_T		3218148						
ANR	3219348	Symbol	ZEND_BITSET_ELM_SIZE		3218148						
ANR	3219349	Symbol	map_T		3218148						
ANR	3219350	Symbol	curr		3218148						
ANR	3219351	Symbol	IS_TMP_VAR		3218148						
ANR	3219352	Symbol	( opline - 1 ) -> opcode		3218148						
ANR	3219353	Symbol	op_array -> T		3218148						
ANR	3219354	Symbol	ZEND_RETURN		3218148						
ANR	3219355	Symbol	offset		3218148						
ANR	3219356	Symbol	zend_arena_alloc		3218148						
ANR	3219357	Symbol	ctx		3218148						
ANR	3219358	Symbol	var		3218148						
ANR	3219359	Symbol	ZEND_OP2 ( opline ) . var		3218148						
ANR	3219360	Symbol	* start_of_T		3218148						
ANR	3219361	Symbol	* op_array		3218148						
ANR	3219362	Symbol	taken_T		3218148						
ANR	3219363	Symbol	op_array -> last		3218148						
ANR	3219364	Symbol	ZEND_RESULT_TYPE		3218148						
ANR	3219365	Symbol	* map_T		3218148						
ANR	3219366	Symbol	NUM_VAR		3218148						
ANR	3219367	Symbol	* offset		3218148						
ANR	3219368	Symbol	RESULT_UNUSED		3218148						
ANR	3219369	Symbol	IS_VAR		3218148						
ANR	3219370	Symbol	use_new_var		3218148						
ANR	3219371	Symbol	zend_bitset_len		3218148						
ANR	3219372	Symbol	MAX		3218148						
ANR	3219373	Symbol	op_array -> last_var		3218148						
ANR	3219374	Symbol	currT		3218148						
ANR	3219375	Symbol	curr -> opcode		3218148						
ANR	3219376	Symbol	op_array -> opcodes		3218148						
ANR	3219377	Symbol	T		3218148						
ANR	3219378	Symbol	ZEND_RETURN_BY_REF		3218148						
ANR	3219379	Symbol	ZEND_ACC_HAS_FINALLY_BLOCK		3218148						
ANR	3219380	Symbol	ZEND_RESULT		3218148						
ANR	3219381	Symbol	( opline + 1 ) -> opcode		3218148						
ANR	3219382	Symbol	end		3218148						
ANR	3219383	Symbol	VAR_NUM		3218148						
ANR	3219384	Symbol	ZEND_DECLARE_INHERITED_CLASS_DELAYED		3218148						
ANR	3219385	Symbol	ZEND_FAST_CALL		3218148						
ANR	3219386	Symbol	zend_bitset_in		3218148						
ANR	3219387	Symbol	ZEND_DECLARE_ANON_INHERITED_CLASS		3218148						
ANR	3219388	Symbol	max		3218148						
ANR	3219389	Symbol	zend_arena_checkpoint		3218148						
ANR	3219390	Symbol	ZEND_OP1 ( opline ) . var		3218148						
ANR	3219391	Symbol	* currT		3218148						
ANR	3219392	Symbol	i		3218148						
ANR	3219393	Symbol	* VAR_NUM		3218148						
ANR	3219394	Symbol	* ctx		3218148						
ANR	3219395	Symbol	ZEND_OP1		3218148						
ANR	3219396	Symbol	ZEND_OP2		3218148						
ANR	3219397	Symbol	& ctx -> arena		3218148						
ANR	3219398	Symbol	ZEND_OP1_TYPE		3218148						
ANR	3219399	Symbol	* opline		3218148						
ANR	3219400	Symbol	ZEND_ASSIGN_DIM		3218148						
ANR	3219401	Symbol	* curr		3218148						
ANR	3219402	Symbol	var_to_free		3218148						
ANR	3219403	Symbol	opline -> opcode		3218148						
ANR	3219404	Symbol	ZEND_OP2 ( opline + 1 ) . var		3218148						
ANR	3219405	Symbol	ZEND_DECLARE_INHERITED_CLASS		3218148						
ANR	3219406	Symbol	ctx -> arena		3218148						
ANR	3219407	Symbol	ZEND_ROPE_END		3218148						
ANR	3219408	Symbol	ZEND_DISCARD_EXCEPTION		3218148						
ANR	3219409	Symbol	op_array		3218148						
ANR	3219410	Symbol	ZEND_ROPE_INIT		3218148						
