command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1143168	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_iso8859_4.c								
ANR	1143169	DeclStmt									
ANR	1143170	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_4_ToLowerCaseTable
ANR	1143171	DeclStmt									
ANR	1143172	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_4_CtypeTable
ANR	1143173	DeclStmt									
ANR	1143174	Decl							const UChar	const UChar *	p
ANR	1143175	Function	is_mbc_ambiguous	125:0:6566:7029							
ANR	1143176	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1143175	0					
ANR	1143177	CompoundStatement		127:0:6653:7029	1143175	0					
ANR	1143178	IdentifierDeclStatement	int v ;	128:2:6657:6662	1143175	0	True				
ANR	1143179	IdentifierDecl	v		1143175	0					
ANR	1143180	IdentifierDeclType	int		1143175	0					
ANR	1143181	Identifier	v		1143175	1					
ANR	1143182	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6666:6686	1143175	1	True				
ANR	1143183	IdentifierDecl	* p = * pp		1143175	0					
ANR	1143184	IdentifierDeclType	const UChar *		1143175	0					
ANR	1143185	Identifier	p		1143175	1					
ANR	1143186	AssignmentExpression	* p = * pp		1143175	2		=			
ANR	1143187	Identifier	p		1143175	0					
ANR	1143188	UnaryOperationExpression	* pp		1143175	1					
ANR	1143189	UnaryOperator	*		1143175	0					
ANR	1143190	Identifier	pp		1143175	1					
ANR	1143191	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1143175	2					
ANR	1143192	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6695:6759	1143175	0	True				
ANR	1143193	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1143175	0		&&			
ANR	1143194	EqualityExpression	* p == 0xdf		1143175	0		==			
ANR	1143195	UnaryOperationExpression	* p		1143175	0					
ANR	1143196	UnaryOperator	*		1143175	0					
ANR	1143197	Identifier	p		1143175	1					
ANR	1143198	PrimaryExpression	0xdf		1143175	1					
ANR	1143199	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1143175	1		!=			
ANR	1143200	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1143175	0		&			
ANR	1143201	Identifier	flag		1143175	0					
ANR	1143202	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1143175	1					
ANR	1143203	PrimaryExpression	0		1143175	1					
ANR	1143204	CompoundStatement		5:73:108:108	1143175	1					
ANR	1143205	ExpressionStatement	( * pp ) ++	132:4:6768:6775	1143175	0	True				
ANR	1143206	PostIncDecOperationExpression	( * pp ) ++		1143175	0					
ANR	1143207	UnaryOperationExpression	* pp		1143175	0					
ANR	1143208	UnaryOperator	*		1143175	0					
ANR	1143209	Identifier	pp		1143175	1					
ANR	1143210	IncDec	++		1143175	1					
ANR	1143211	ReturnStatement	return TRUE ;	133:4:6781:6792	1143175	1	True				
ANR	1143212	Identifier	TRUE		1143175	0					
ANR	1143213	ExpressionStatement	( * pp ) ++	136:2:6801:6808	1143175	3	True				
ANR	1143214	PostIncDecOperationExpression	( * pp ) ++		1143175	0					
ANR	1143215	UnaryOperationExpression	* pp		1143175	0					
ANR	1143216	UnaryOperator	*		1143175	0					
ANR	1143217	Identifier	pp		1143175	1					
ANR	1143218	IncDec	++		1143175	1					
ANR	1143219	ExpressionStatement	v = ( EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6812:6884	1143175	4	True				
ANR	1143220	AssignmentExpression	v = ( EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		1143175	0		=			
ANR	1143221	Identifier	v		1143175	0					
ANR	1143222	BitAndExpression	EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		1143175	1		&			
ANR	1143223	ArrayIndexing	EncISO_8859_4_CtypeTable [ * p ]		1143175	0					
ANR	1143224	Identifier	EncISO_8859_4_CtypeTable		1143175	0					
ANR	1143225	UnaryOperationExpression	* p		1143175	1					
ANR	1143226	UnaryOperator	*		1143175	0					
ANR	1143227	Identifier	p		1143175	1					
ANR	1143228	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1143175	1		|			
ANR	1143229	Identifier	BIT_CTYPE_UPPER		1143175	0					
ANR	1143230	Identifier	BIT_CTYPE_LOWER		1143175	1					
ANR	1143231	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		1143175	5					
ANR	1143232	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6892:6917	1143175	0	True				
ANR	1143233	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		1143175	0		!=			
ANR	1143234	InclusiveOrExpression	v | BIT_CTYPE_LOWER		1143175	0		|			
ANR	1143235	Identifier	v		1143175	0					
ANR	1143236	Identifier	BIT_CTYPE_LOWER		1143175	1					
ANR	1143237	PrimaryExpression	0		1143175	1					
ANR	1143238	CompoundStatement		12:34:266:266	1143175	1					
ANR	1143239	IfStatement	if ( * p == 0xa2 )		1143175	0					
ANR	1143240	Condition	* p == 0xa2	139:8:6930:6939	1143175	0	True				
ANR	1143241	EqualityExpression	* p == 0xa2		1143175	0		==			
ANR	1143242	UnaryOperationExpression	* p		1143175	0					
ANR	1143243	UnaryOperator	*		1143175	0					
ANR	1143244	Identifier	p		1143175	1					
ANR	1143245	PrimaryExpression	0xa2		1143175	1					
ANR	1143246	ReturnStatement	return FALSE ;	140:6:6948:6960	1143175	1	True				
ANR	1143247	Identifier	FALSE		1143175	0					
ANR	1143248	ElseStatement	else		1143175	0					
ANR	1143249	ReturnStatement	return TRUE ;	142:6:6977:6988	1143175	0	True				
ANR	1143250	Identifier	TRUE		1143175	0					
ANR	1143251	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	145:2:6997:7027	1143175	6	True				
ANR	1143252	ConditionalExpression	v != 0 ? TRUE : FALSE		1143175	0					
ANR	1143253	Condition	v != 0		1143175	0					
ANR	1143254	EqualityExpression	v != 0		1143175	0		!=			
ANR	1143255	Identifier	v		1143175	0					
ANR	1143256	PrimaryExpression	0		1143175	1					
ANR	1143257	Identifier	TRUE		1143175	1					
ANR	1143258	Identifier	FALSE		1143175	2					
ANR	1143259	ReturnType	static int		1143175	1					
ANR	1143260	Identifier	is_mbc_ambiguous		1143175	2					
ANR	1143261	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1143175	3					
ANR	1143262	Parameter	OnigCaseFoldType flag	126:17:6594:6614	1143175	0	True				
ANR	1143263	ParameterType	OnigCaseFoldType		1143175	0					
ANR	1143264	Identifier	flag		1143175	1					
ANR	1143265	Parameter	const UChar * * pp	126:40:6617:6632	1143175	1	True				
ANR	1143266	ParameterType	const UChar * *		1143175	0					
ANR	1143267	Identifier	pp		1143175	1					
ANR	1143268	Parameter	const UChar * end	126:58:6635:6650	1143175	2	True				
ANR	1143269	ParameterType	const UChar *		1143175	0					
ANR	1143270	Identifier	end		1143175	1					
ANR	1143271	CFGEntryNode	ENTRY		1143175		True				
ANR	1143272	CFGExitNode	EXIT		1143175		True				
ANR	1143273	Symbol	pp		1143175						
ANR	1143274	Symbol	flag		1143175						
ANR	1143275	Symbol	* pp		1143175						
ANR	1143276	Symbol	TRUE		1143175						
ANR	1143277	Symbol	p		1143175						
ANR	1143278	Symbol	v		1143175						
ANR	1143279	Symbol	* EncISO_8859_4_CtypeTable		1143175						
ANR	1143280	Symbol	BIT_CTYPE_LOWER		1143175						
ANR	1143281	Symbol	end		1143175						
ANR	1143282	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1143175						
ANR	1143283	Symbol	* p		1143175						
ANR	1143284	Symbol	BIT_CTYPE_UPPER		1143175						
ANR	1143285	Symbol	FALSE		1143175						
ANR	1143286	Symbol	* * p		1143175						
ANR	1143287	Symbol	EncISO_8859_4_CtypeTable		1143175						
ANR	1143288	Function	is_code_ctype	149:0:7039:7198							
ANR	1143289	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		1143288	0					
ANR	1143290	CompoundStatement		151:0:7104:7198	1143288	0					
ANR	1143291	IfStatement	if ( code < 256 )		1143288	0					
ANR	1143292	Condition	code < 256	152:6:7112:7121	1143288	0	True				
ANR	1143293	RelationalExpression	code < 256		1143288	0		<			
ANR	1143294	Identifier	code		1143288	0					
ANR	1143295	PrimaryExpression	256		1143288	1					
ANR	1143296	ReturnStatement	"return ENC_IS_ISO_8859_4_CTYPE ( code , ctype ) ;"	153:4:7128:7171	1143288	1	True				
ANR	1143297	CallExpression	"ENC_IS_ISO_8859_4_CTYPE ( code , ctype )"		1143288	0					
ANR	1143298	Callee	ENC_IS_ISO_8859_4_CTYPE		1143288	0					
ANR	1143299	Identifier	ENC_IS_ISO_8859_4_CTYPE		1143288	0					
ANR	1143300	ArgumentList	code		1143288	1					
ANR	1143301	Argument	code		1143288	0					
ANR	1143302	Identifier	code		1143288	0					
ANR	1143303	Argument	ctype		1143288	1					
ANR	1143304	Identifier	ctype		1143288	0					
ANR	1143305	ElseStatement	else		1143288	0					
ANR	1143306	ReturnStatement	return FALSE ;	155:4:7184:7196	1143288	0	True				
ANR	1143307	Identifier	FALSE		1143288	0					
ANR	1143308	ReturnType	static int		1143288	1					
ANR	1143309	Identifier	is_code_ctype		1143288	2					
ANR	1143310	ParameterList	"OnigCodePoint code , unsigned int ctype"		1143288	3					
ANR	1143311	Parameter	OnigCodePoint code	150:14:7064:7081	1143288	0	True				
ANR	1143312	ParameterType	OnigCodePoint		1143288	0					
ANR	1143313	Identifier	code		1143288	1					
ANR	1143314	Parameter	unsigned int ctype	150:34:7084:7101	1143288	1	True				
ANR	1143315	ParameterType	unsigned int		1143288	0					
ANR	1143316	Identifier	ctype		1143288	1					
ANR	1143317	CFGEntryNode	ENTRY		1143288		True				
ANR	1143318	CFGExitNode	EXIT		1143288		True				
ANR	1143319	Symbol	code		1143288						
ANR	1143320	Symbol	ctype		1143288						
ANR	1143321	Symbol	ENC_IS_ISO_8859_4_CTYPE		1143288						
ANR	1143322	Symbol	FALSE		1143288						
ANR	1143323	DeclStmt									
ANR	1143324	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	1143325	Function	apply_all_case_fold	202:0:7922:8178							
ANR	1143326	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		1143325	0					
ANR	1143327	CompoundStatement		205:0:8021:8178	1143325	0					
ANR	1143328	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	206:2:8025:8176	1143325	0	True				
ANR	1143329	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		1143325	0					
ANR	1143330	Callee	onigenc_apply_all_case_fold_with_map		1143325	0					
ANR	1143331	Identifier	onigenc_apply_all_case_fold_with_map		1143325	0					
ANR	1143332	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143325	1					
ANR	1143333	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143325	0					
ANR	1143334	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143325	0		/			
ANR	1143335	SizeofExpression	sizeof ( CaseFoldMap )		1143325	0					
ANR	1143336	Sizeof	sizeof		1143325	0					
ANR	1143337	SizeofOperand	CaseFoldMap		1143325	1					
ANR	1143338	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1143325	1					
ANR	1143339	Sizeof	sizeof		1143325	0					
ANR	1143340	SizeofOperand	OnigPairCaseFoldCodes		1143325	1					
ANR	1143341	Argument	CaseFoldMap		1143325	1					
ANR	1143342	Identifier	CaseFoldMap		1143325	0					
ANR	1143343	Argument	1		1143325	2					
ANR	1143344	PrimaryExpression	1		1143325	0					
ANR	1143345	Argument	flag		1143325	3					
ANR	1143346	Identifier	flag		1143325	0					
ANR	1143347	Argument	f		1143325	4					
ANR	1143348	Identifier	f		1143325	0					
ANR	1143349	Argument	arg		1143325	5					
ANR	1143350	Identifier	arg		1143325	0					
ANR	1143351	ReturnType	static int		1143325	1					
ANR	1143352	Identifier	apply_all_case_fold		1143325	2					
ANR	1143353	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		1143325	3					
ANR	1143354	Parameter	OnigCaseFoldType flag	203:20:7953:7973	1143325	0	True				
ANR	1143355	ParameterType	OnigCaseFoldType		1143325	0					
ANR	1143356	Identifier	flag		1143325	1					
ANR	1143357	Parameter	OnigApplyAllCaseFoldFunc f	204:6:7982:8007	1143325	1	True				
ANR	1143358	ParameterType	OnigApplyAllCaseFoldFunc		1143325	0					
ANR	1143359	Identifier	f		1143325	1					
ANR	1143360	Parameter	void * arg	204:34:8010:8018	1143325	2	True				
ANR	1143361	ParameterType	void *		1143325	0					
ANR	1143362	Identifier	arg		1143325	1					
ANR	1143363	CFGEntryNode	ENTRY		1143325		True				
ANR	1143364	CFGExitNode	EXIT		1143325		True				
ANR	1143365	Symbol	flag		1143325						
ANR	1143366	Symbol	f		1143325						
ANR	1143367	Symbol	arg		1143325						
ANR	1143368	Symbol	CaseFoldMap		1143325						
ANR	1143369	Symbol	onigenc_apply_all_case_fold_with_map		1143325						
ANR	1143370	Function	get_case_fold_codes_by_str	211:0:8181:8475							
ANR	1143371	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1143370	0					
ANR	1143372	CompoundStatement		214:0:8318:8475	1143370	0					
ANR	1143373	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	215:2:8322:8473	1143370	0	True				
ANR	1143374	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		1143370	0					
ANR	1143375	Callee	onigenc_get_case_fold_codes_by_str_with_map		1143370	0					
ANR	1143376	Identifier	onigenc_get_case_fold_codes_by_str_with_map		1143370	0					
ANR	1143377	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143370	1					
ANR	1143378	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143370	0					
ANR	1143379	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143370	0		/			
ANR	1143380	SizeofExpression	sizeof ( CaseFoldMap )		1143370	0					
ANR	1143381	Sizeof	sizeof		1143370	0					
ANR	1143382	SizeofOperand	CaseFoldMap		1143370	1					
ANR	1143383	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1143370	1					
ANR	1143384	Sizeof	sizeof		1143370	0					
ANR	1143385	SizeofOperand	OnigPairCaseFoldCodes		1143370	1					
ANR	1143386	Argument	CaseFoldMap		1143370	1					
ANR	1143387	Identifier	CaseFoldMap		1143370	0					
ANR	1143388	Argument	1		1143370	2					
ANR	1143389	PrimaryExpression	1		1143370	0					
ANR	1143390	Argument	flag		1143370	3					
ANR	1143391	Identifier	flag		1143370	0					
ANR	1143392	Argument	p		1143370	4					
ANR	1143393	Identifier	p		1143370	0					
ANR	1143394	Argument	end		1143370	5					
ANR	1143395	Identifier	end		1143370	0					
ANR	1143396	Argument	items		1143370	6					
ANR	1143397	Identifier	items		1143370	0					
ANR	1143398	ReturnType	static int		1143370	1					
ANR	1143399	Identifier	get_case_fold_codes_by_str		1143370	2					
ANR	1143400	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1143370	3					
ANR	1143401	Parameter	OnigCaseFoldType flag	212:27:8219:8239	1143370	0	True				
ANR	1143402	ParameterType	OnigCaseFoldType		1143370	0					
ANR	1143403	Identifier	flag		1143370	1					
ANR	1143404	Parameter	const OnigUChar * p	213:4:8246:8263	1143370	1	True				
ANR	1143405	ParameterType	const OnigUChar *		1143370	0					
ANR	1143406	Identifier	p		1143370	1					
ANR	1143407	Parameter	const OnigUChar * end	213:24:8266:8285	1143370	2	True				
ANR	1143408	ParameterType	const OnigUChar *		1143370	0					
ANR	1143409	Identifier	end		1143370	1					
ANR	1143410	Parameter	OnigCaseFoldCodeItem items [ ]	213:46:8288:8315	1143370	3	True				
ANR	1143411	ParameterType	OnigCaseFoldCodeItem [ ]		1143370	0					
ANR	1143412	Identifier	items		1143370	1					
ANR	1143413	CFGEntryNode	ENTRY		1143370		True				
ANR	1143414	CFGExitNode	EXIT		1143370		True				
ANR	1143415	Symbol	p		1143370						
ANR	1143416	Symbol	flag		1143370						
ANR	1143417	Symbol	end		1143370						
ANR	1143418	Symbol	CaseFoldMap		1143370						
ANR	1143419	Symbol	onigenc_get_case_fold_codes_by_str_with_map		1143370						
ANR	1143420	Symbol	items		1143370						
ANR	1143421	DeclStmt									
ANR	1143422	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_4
