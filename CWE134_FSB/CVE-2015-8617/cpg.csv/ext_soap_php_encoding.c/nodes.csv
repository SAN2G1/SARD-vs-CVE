command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1907602	File	data/converged/CVE-2015-8617_php-src/ext_soap_php_encoding.c								
ANR	1907603	DeclStmt									
ANR	1907604	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_double
ANR	1907605	DeclStmt									
ANR	1907606	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_long
ANR	1907607	DeclStmt									
ANR	1907608	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_bool
ANR	1907609	DeclStmt									
ANR	1907610	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_string
ANR	1907611	DeclStmt									
ANR	1907612	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_stringr
ANR	1907613	DeclStmt									
ANR	1907614	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_stringc
ANR	1907615	DeclStmt									
ANR	1907616	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_map
ANR	1907617	DeclStmt									
ANR	1907618	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_null
ANR	1907619	DeclStmt									
ANR	1907620	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_base64
ANR	1907621	DeclStmt									
ANR	1907622	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_hexbin
ANR	1907623	DeclStmt									
ANR	1907624	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_long
ANR	1907625	DeclStmt									
ANR	1907626	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_double
ANR	1907627	DeclStmt									
ANR	1907628	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_bool
ANR	1907629	DeclStmt									
ANR	1907630	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_string
ANR	1907631	DeclStmt									
ANR	1907632	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_base64
ANR	1907633	DeclStmt									
ANR	1907634	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_hexbin
ANR	1907635	DeclStmt									
ANR	1907636	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_null
ANR	1907637	DeclStmt									
ANR	1907638	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	guess_array_map
ANR	1907639	DeclStmt									
ANR	1907640	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_map
ANR	1907641	DeclStmt									
ANR	1907642	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr enc , zval * data , int style , xmlNodePtr parent )"	to_xml_list
ANR	1907643	DeclStmt									
ANR	1907644	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr enc , zval * data , int style , xmlNodePtr parent )"	to_xml_list1
ANR	1907645	DeclStmt									
ANR	1907646	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , char * format , int style , xmlNodePtr parent )"	to_xml_datetime_ex
ANR	1907647	DeclStmt									
ANR	1907648	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_datetime
ANR	1907649	DeclStmt									
ANR	1907650	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_time
ANR	1907651	DeclStmt									
ANR	1907652	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_date
ANR	1907653	DeclStmt									
ANR	1907654	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_gyearmonth
ANR	1907655	DeclStmt									
ANR	1907656	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_gyear
ANR	1907657	DeclStmt									
ANR	1907658	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_gmonthday
ANR	1907659	DeclStmt									
ANR	1907660	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_gday
ANR	1907661	DeclStmt									
ANR	1907662	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_gmonth
ANR	1907663	DeclStmt									
ANR	1907664	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_duration
ANR	1907665	DeclStmt									
ANR	1907666	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_object
ANR	1907667	DeclStmt									
ANR	1907668	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_array
ANR	1907669	DeclStmt									
ANR	1907670	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_object
ANR	1907671	DeclStmt									
ANR	1907672	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_array
ANR	1907673	DeclStmt									
ANR	1907674	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	to_zval_any
ANR	1907675	DeclStmt									
ANR	1907676	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	to_xml_any
ANR	1907677	DeclStmt									
ANR	1907678	Decl							zval	"zval * ( zval * ret , encodeTypePtr type , xmlNodePtr data )"	guess_zval_convert
ANR	1907679	DeclStmt									
ANR	1907680	Decl							xmlNodePtr	"xmlNodePtr ( encodeTypePtr type , zval * data , int style , xmlNodePtr parent )"	guess_xml_convert
ANR	1907681	DeclStmt									
ANR	1907682	Decl							int	int ( zval * array )	is_map
ANR	1907683	DeclStmt									
ANR	1907684	Decl							encodePtr	"encodePtr ( xmlNodePtr node , zval * array , smart_str * out_type )"	get_array_type
ANR	1907685	DeclStmt									
ANR	1907686	Decl							xmlNodePtr	xmlNodePtr ( xmlNodePtr data )	check_and_resolve_href
ANR	1907687	DeclStmt									
ANR	1907688	Decl							void	"void ( xmlNodePtr node , char * ns , char * name , char * val )"	set_ns_prop
ANR	1907689	DeclStmt									
ANR	1907690	Decl							void	void ( xmlNodePtr node )	set_xsi_nil
ANR	1907691	DeclStmt									
ANR	1907692	Decl							void	"void ( xmlNodePtr node , char * type )"	set_xsi_type
ANR	1907693	DeclStmt									
ANR	1907694	Decl							void	"void ( xmlNodePtr node , const char * ns , const char * type , smart_str * ret )"	get_type_str
ANR	1907695	DeclStmt									
ANR	1907696	Decl							void	"void ( xmlNodePtr node , char * ns , char * type )"	set_ns_and_type_ex
ANR	1907697	DeclStmt									
ANR	1907698	Decl							void	"void ( xmlNodePtr node , encodeTypePtr type )"	set_ns_and_type
ANR	1907699	DeclStmt									
ANR	1907700	Decl							xmlAttrPtr	xmlAttrPtr	null
ANR	1907701	DeclStmt									
ANR	1907702	Decl							xmlAttrPtr	xmlAttrPtr	null
ANR	1907703	DeclStmt									
ANR	1907704	Decl							encode	encode [ ]	defaultEncoding
ANR	1907705	DeclStmt									
ANR	1907706	Decl							int	int	numDefaultEncodings
ANR	1907707	Function	whiteSpace_replace	237:0:13412:13564							
ANR	1907708	FunctionDef	whiteSpace_replace (xmlChar * str)		1907707	0					
ANR	1907709	CompoundStatement		238:0:13450:13564	1907707	0					
ANR	1907710	WhileStatement	while ( * str != '\\0' )		1907707	0					
ANR	1907711	Condition	* str != '\\0'	239:8:13460:13471	1907707	0	True				
ANR	1907712	EqualityExpression	* str != '\\0'		1907707	0		!=			
ANR	1907713	UnaryOperationExpression	* str		1907707	0					
ANR	1907714	UnaryOperator	*		1907707	0					
ANR	1907715	Identifier	str		1907707	1					
ANR	1907716	PrimaryExpression	'\\0'		1907707	1					
ANR	1907717	CompoundStatement		2:22:23:23	1907707	1					
ANR	1907718	IfStatement	if ( * str == x9 || * str == xA || * str == xD )		1907707	0					
ANR	1907719	Condition	* str == x9 || * str == xA || * str == xD	240:6:13482:13527	1907707	0	True				
ANR	1907720	OrExpression	* str == x9 || * str == xA || * str == xD		1907707	0		||			
ANR	1907721	EqualityExpression	* str == x9		1907707	0		==			
ANR	1907722	UnaryOperationExpression	* str		1907707	0					
ANR	1907723	UnaryOperator	*		1907707	0					
ANR	1907724	Identifier	str		1907707	1					
ANR	1907725	Identifier	x9		1907707	1					
ANR	1907726	OrExpression	* str == xA || * str == xD		1907707	1		||			
ANR	1907727	EqualityExpression	* str == xA		1907707	0		==			
ANR	1907728	UnaryOperationExpression	* str		1907707	0					
ANR	1907729	UnaryOperator	*		1907707	0					
ANR	1907730	Identifier	str		1907707	1					
ANR	1907731	Identifier	xA		1907707	1					
ANR	1907732	EqualityExpression	* str == xD		1907707	1		==			
ANR	1907733	UnaryOperationExpression	* str		1907707	0					
ANR	1907734	UnaryOperator	*		1907707	0					
ANR	1907735	Identifier	str		1907707	1					
ANR	1907736	Identifier	xD		1907707	1					
ANR	1907737	CompoundStatement		3:55:80:80	1907707	1					
ANR	1907738	ExpressionStatement	* str = ' '	241:3:13536:13546	1907707	0	True				
ANR	1907739	AssignmentExpression	* str = ' '		1907707	0		=			
ANR	1907740	UnaryOperationExpression	* str		1907707	0					
ANR	1907741	UnaryOperator	*		1907707	0					
ANR	1907742	Identifier	str		1907707	1					
ANR	1907743	PrimaryExpression	' '		1907707	1					
ANR	1907744	ExpressionStatement	str ++	243:2:13554:13559	1907707	1	True				
ANR	1907745	PostIncDecOperationExpression	str ++		1907707	0					
ANR	1907746	Identifier	str		1907707	0					
ANR	1907747	IncDec	++		1907707	1					
ANR	1907748	ReturnType	void		1907707	1					
ANR	1907749	Identifier	whiteSpace_replace		1907707	2					
ANR	1907750	ParameterList	xmlChar * str		1907707	3					
ANR	1907751	Parameter	xmlChar * str	237:24:13436:13447	1907707	0	True				
ANR	1907752	ParameterType	xmlChar *		1907707	0					
ANR	1907753	Identifier	str		1907707	1					
ANR	1907754	CFGEntryNode	ENTRY		1907707		True				
ANR	1907755	CFGExitNode	EXIT		1907707		True				
ANR	1907756	Symbol	str		1907707						
ANR	1907757	Symbol	x9		1907707						
ANR	1907758	Symbol	xA		1907707						
ANR	1907759	Symbol	* str		1907707						
ANR	1907760	Symbol	xD		1907707						
ANR	1907761	Function	whiteSpace_collapse	247:0:13567:13885							
ANR	1907762	FunctionDef	whiteSpace_collapse (xmlChar * str)		1907761	0					
ANR	1907763	CompoundStatement		248:0:13606:13885	1907761	0					
ANR	1907764	IdentifierDeclStatement	xmlChar * pos ;	249:1:13609:13621	1907761	0	True				
ANR	1907765	IdentifierDecl	* pos		1907761	0					
ANR	1907766	IdentifierDeclType	xmlChar *		1907761	0					
ANR	1907767	Identifier	pos		1907761	1					
ANR	1907768	IdentifierDeclStatement	xmlChar old ;	250:1:13624:13635	1907761	1	True				
ANR	1907769	IdentifierDecl	old		1907761	0					
ANR	1907770	IdentifierDeclType	xmlChar		1907761	0					
ANR	1907771	Identifier	old		1907761	1					
ANR	1907772	ExpressionStatement	pos = str	252:1:13639:13648	1907761	2	True				
ANR	1907773	AssignmentExpression	pos = str		1907761	0		=			
ANR	1907774	Identifier	pos		1907761	0					
ANR	1907775	Identifier	str		1907761	1					
ANR	1907776	ExpressionStatement	whiteSpace_replace ( str )	253:1:13651:13674	1907761	3	True				
ANR	1907777	CallExpression	whiteSpace_replace ( str )		1907761	0					
ANR	1907778	Callee	whiteSpace_replace		1907761	0					
ANR	1907779	Identifier	whiteSpace_replace		1907761	0					
ANR	1907780	ArgumentList	str		1907761	1					
ANR	1907781	Argument	str		1907761	0					
ANR	1907782	Identifier	str		1907761	0					
ANR	1907783	WhileStatement	while ( * str == ' ' )		1907761	4					
ANR	1907784	Condition	* str == ' '	254:8:13684:13694	1907761	0	True				
ANR	1907785	EqualityExpression	* str == ' '		1907761	0		==			
ANR	1907786	UnaryOperationExpression	* str		1907761	0					
ANR	1907787	UnaryOperator	*		1907761	0					
ANR	1907788	Identifier	str		1907761	1					
ANR	1907789	PrimaryExpression	' '		1907761	1					
ANR	1907790	CompoundStatement		7:21:90:90	1907761	1					
ANR	1907791	ExpressionStatement	str ++	255:2:13701:13706	1907761	0	True				
ANR	1907792	PostIncDecOperationExpression	str ++		1907761	0					
ANR	1907793	Identifier	str		1907761	0					
ANR	1907794	IncDec	++		1907761	1					
ANR	1907795	ExpressionStatement	old = '\\0'	257:1:13712:13722	1907761	5	True				
ANR	1907796	AssignmentExpression	old = '\\0'		1907761	0		=			
ANR	1907797	Identifier	old		1907761	0					
ANR	1907798	PrimaryExpression	'\\0'		1907761	1					
ANR	1907799	WhileStatement	while ( * str != '\\0' )		1907761	6					
ANR	1907800	Condition	* str != '\\0'	258:8:13732:13743	1907761	0	True				
ANR	1907801	EqualityExpression	* str != '\\0'		1907761	0		!=			
ANR	1907802	UnaryOperationExpression	* str		1907761	0					
ANR	1907803	UnaryOperator	*		1907761	0					
ANR	1907804	Identifier	str		1907761	1					
ANR	1907805	PrimaryExpression	'\\0'		1907761	1					
ANR	1907806	CompoundStatement		11:22:139:139	1907761	1					
ANR	1907807	IfStatement	if ( * str != ' ' || old != ' ' )		1907761	0					
ANR	1907808	Condition	* str != ' ' || old != ' '	259:6:13754:13778	1907761	0	True				
ANR	1907809	OrExpression	* str != ' ' || old != ' '		1907761	0		||			
ANR	1907810	EqualityExpression	* str != ' '		1907761	0		!=			
ANR	1907811	UnaryOperationExpression	* str		1907761	0					
ANR	1907812	UnaryOperator	*		1907761	0					
ANR	1907813	Identifier	str		1907761	1					
ANR	1907814	PrimaryExpression	' '		1907761	1					
ANR	1907815	EqualityExpression	old != ' '		1907761	1		!=			
ANR	1907816	Identifier	old		1907761	0					
ANR	1907817	PrimaryExpression	' '		1907761	1					
ANR	1907818	CompoundStatement		12:33:174:174	1907761	1					
ANR	1907819	ExpressionStatement	* pos = * str	260:3:13786:13797	1907761	0	True				
ANR	1907820	AssignmentExpression	* pos = * str		1907761	0		=			
ANR	1907821	UnaryOperationExpression	* pos		1907761	0					
ANR	1907822	UnaryOperator	*		1907761	0					
ANR	1907823	Identifier	pos		1907761	1					
ANR	1907824	UnaryOperationExpression	* str		1907761	1					
ANR	1907825	UnaryOperator	*		1907761	0					
ANR	1907826	Identifier	str		1907761	1					
ANR	1907827	ExpressionStatement	pos ++	261:3:13802:13807	1907761	1	True				
ANR	1907828	PostIncDecOperationExpression	pos ++		1907761	0					
ANR	1907829	Identifier	pos		1907761	0					
ANR	1907830	IncDec	++		1907761	1					
ANR	1907831	ExpressionStatement	old = * str	263:2:13815:13825	1907761	1	True				
ANR	1907832	AssignmentExpression	old = * str		1907761	0		=			
ANR	1907833	Identifier	old		1907761	0					
ANR	1907834	UnaryOperationExpression	* str		1907761	1					
ANR	1907835	UnaryOperator	*		1907761	0					
ANR	1907836	Identifier	str		1907761	1					
ANR	1907837	ExpressionStatement	str ++	264:2:13829:13834	1907761	2	True				
ANR	1907838	PostIncDecOperationExpression	str ++		1907761	0					
ANR	1907839	Identifier	str		1907761	0					
ANR	1907840	IncDec	++		1907761	1					
ANR	1907841	IfStatement	if ( old == ' ' )		1907761	7					
ANR	1907842	Condition	old == ' '	266:5:13844:13853	1907761	0	True				
ANR	1907843	EqualityExpression	old == ' '		1907761	0		==			
ANR	1907844	Identifier	old		1907761	0					
ANR	1907845	PrimaryExpression	' '		1907761	1					
ANR	1907846	CompoundStatement		19:17:249:249	1907761	1					
ANR	1907847	ExpressionStatement	-- pos	267:3:13861:13866	1907761	0	True				
ANR	1907848	UnaryExpression	-- pos		1907761	0					
ANR	1907849	IncDec	--		1907761	0					
ANR	1907850	Identifier	pos		1907761	1					
ANR	1907851	ExpressionStatement	* pos = '\\0'	269:1:13872:13883	1907761	8	True				
ANR	1907852	AssignmentExpression	* pos = '\\0'		1907761	0		=			
ANR	1907853	UnaryOperationExpression	* pos		1907761	0					
ANR	1907854	UnaryOperator	*		1907761	0					
ANR	1907855	Identifier	pos		1907761	1					
ANR	1907856	PrimaryExpression	'\\0'		1907761	1					
ANR	1907857	ReturnType	void		1907761	1					
ANR	1907858	Identifier	whiteSpace_collapse		1907761	2					
ANR	1907859	ParameterList	xmlChar * str		1907761	3					
ANR	1907860	Parameter	xmlChar * str	247:25:13592:13603	1907761	0	True				
ANR	1907861	ParameterType	xmlChar *		1907761	0					
ANR	1907862	Identifier	str		1907761	1					
ANR	1907863	CFGEntryNode	ENTRY		1907761		True				
ANR	1907864	CFGExitNode	EXIT		1907761		True				
ANR	1907865	Symbol	str		1907761						
ANR	1907866	Symbol	pos		1907761						
ANR	1907867	Symbol	old		1907761						
ANR	1907868	Symbol	* str		1907761						
ANR	1907869	Symbol	* pos		1907761						
ANR	1907870	Function	find_encoder_by_type_name	272:0:13888:14178							
ANR	1907871	FunctionDef	"find_encoder_by_type_name (sdlPtr sdl , const char * type)"		1907870	0					
ANR	1907872	CompoundStatement		273:0:13961:14178	1907870	0					
ANR	1907873	IfStatement	if ( sdl && sdl -> encoders )		1907870	0					
ANR	1907874	Condition	sdl && sdl -> encoders	274:5:13968:13987	1907870	0	True				
ANR	1907875	AndExpression	sdl && sdl -> encoders		1907870	0		&&			
ANR	1907876	Identifier	sdl		1907870	0					
ANR	1907877	PtrMemberAccess	sdl -> encoders		1907870	1					
ANR	1907878	Identifier	sdl		1907870	0					
ANR	1907879	Identifier	encoders		1907870	1					
ANR	1907880	CompoundStatement		3:2:32:45	1907870	1					
ANR	1907881	IdentifierDeclStatement	encodePtr enc ;	275:2:13994:14007	1907870	0	True				
ANR	1907882	IdentifierDecl	enc		1907870	0					
ANR	1907883	IdentifierDeclType	encodePtr		1907870	0					
ANR	1907884	Identifier	enc		1907870	1					
ANR	1907885	Statement	ZEND_HASH_FOREACH_PTR	277:2:14012:14032	1907870	1	True				
ANR	1907886	Statement	(	277:23:14033:14033	1907870	2	True				
ANR	1907887	Statement	sdl	277:24:14034:14036	1907870	3	True				
ANR	1907888	Statement	->	277:27:14037:14038	1907870	4	True				
ANR	1907889	Statement	encoders	277:29:14039:14046	1907870	5	True				
ANR	1907890	Statement	","	277:37:14047:14047	1907870	6	True				
ANR	1907891	Statement	enc	277:39:14049:14051	1907870	7	True				
ANR	1907892	Statement	)	277:42:14052:14052	1907870	8	True				
ANR	1907893	CompoundStatement		5:45:93:93	1907870	9					
ANR	1907894	IfStatement	"if ( strcmp ( enc -> details . type_str , type ) == 0 )"		1907870	0					
ANR	1907895	Condition	"strcmp ( enc -> details . type_str , type ) == 0"	278:10:14067:14106	1907870	0	True				
ANR	1907896	EqualityExpression	"strcmp ( enc -> details . type_str , type ) == 0"		1907870	0		==			
ANR	1907897	CallExpression	"strcmp ( enc -> details . type_str , type )"		1907870	0					
ANR	1907898	Callee	strcmp		1907870	0					
ANR	1907899	Identifier	strcmp		1907870	0					
ANR	1907900	ArgumentList	enc -> details . type_str		1907870	1					
ANR	1907901	Argument	enc -> details . type_str		1907870	0					
ANR	1907902	MemberAccess	enc -> details . type_str		1907870	0					
ANR	1907903	PtrMemberAccess	enc -> details		1907870	0					
ANR	1907904	Identifier	enc		1907870	0					
ANR	1907905	Identifier	details		1907870	1					
ANR	1907906	Identifier	type_str		1907870	1					
ANR	1907907	Argument	type		1907870	1					
ANR	1907908	Identifier	type		1907870	0					
ANR	1907909	PrimaryExpression	0		1907870	1					
ANR	1907910	CompoundStatement		6:52:147:147	1907870	1					
ANR	1907911	ReturnStatement	return enc ;	279:4:14115:14125	1907870	0	True				
ANR	1907912	Identifier	enc		1907870	0					
ANR	1907913	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	281:4:14136:14159	1907870	10	True				
ANR	1907914	CallExpression	ZEND_HASH_FOREACH_END ( )		1907870	0					
ANR	1907915	Callee	ZEND_HASH_FOREACH_END		1907870	0					
ANR	1907916	Identifier	ZEND_HASH_FOREACH_END		1907870	0					
ANR	1907917	ArgumentList			1907870	1					
ANR	1907918	ReturnStatement	return NULL ;	283:1:14165:14176	1907870	1	True				
ANR	1907919	Identifier	NULL		1907870	0					
ANR	1907920	ReturnType	static encodePtr		1907870	1					
ANR	1907921	Identifier	find_encoder_by_type_name		1907870	2					
ANR	1907922	ParameterList	"sdlPtr sdl , const char * type"		1907870	3					
ANR	1907923	Parameter	sdlPtr sdl	272:43:13931:13940	1907870	0	True				
ANR	1907924	ParameterType	sdlPtr		1907870	0					
ANR	1907925	Identifier	sdl		1907870	1					
ANR	1907926	Parameter	const char * type	272:55:13943:13958	1907870	1	True				
ANR	1907927	ParameterType	const char *		1907870	0					
ANR	1907928	Identifier	type		1907870	1					
ANR	1907929	CFGEntryNode	ENTRY		1907870		True				
ANR	1907930	CFGExitNode	EXIT		1907870		True				
ANR	1907931	Symbol	strcmp		1907870						
ANR	1907932	Symbol	enc -> details . type_str		1907870						
ANR	1907933	Symbol	NULL		1907870						
ANR	1907934	Symbol	* sdl		1907870						
ANR	1907935	Symbol	sdl -> encoders		1907870						
ANR	1907936	Symbol	enc -> details		1907870						
ANR	1907937	Symbol	sdl		1907870						
ANR	1907938	Symbol	enc		1907870						
ANR	1907939	Symbol	* enc		1907870						
ANR	1907940	Symbol	type		1907870						
ANR	1907941	Function	soap_check_zval_ref	286:0:14181:16151							
ANR	1907942	FunctionDef	"soap_check_zval_ref (zval * data , xmlNodePtr node)"		1907941	0					
ANR	1907943	CompoundStatement		286:66:14247:16151	1907941	0					
ANR	1907944	IdentifierDeclStatement	xmlNodePtr node_ptr ;	287:1:14250:14269	1907941	0	True				
ANR	1907945	IdentifierDecl	node_ptr		1907941	0					
ANR	1907946	IdentifierDeclType	xmlNodePtr		1907941	0					
ANR	1907947	Identifier	node_ptr		1907941	1					
ANR	1907948	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1907941	1					
ANR	1907949	Condition	SOAP_GLOBAL ( ref_map )	289:5:14277:14296	1907941	0	True				
ANR	1907950	CallExpression	SOAP_GLOBAL ( ref_map )		1907941	0					
ANR	1907951	Callee	SOAP_GLOBAL		1907941	0					
ANR	1907952	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1907953	ArgumentList	ref_map		1907941	1					
ANR	1907954	Argument	ref_map		1907941	0					
ANR	1907955	Identifier	ref_map		1907941	0					
ANR	1907956	CompoundStatement		4:27:51:51	1907941	1					
ANR	1907957	IfStatement	if ( Z_TYPE_P ( data ) == IS_OBJECT )		1907941	0					
ANR	1907958	Condition	Z_TYPE_P ( data ) == IS_OBJECT	290:6:14307:14333	1907941	0	True				
ANR	1907959	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1907941	0		==			
ANR	1907960	CallExpression	Z_TYPE_P ( data )		1907941	0					
ANR	1907961	Callee	Z_TYPE_P		1907941	0					
ANR	1907962	Identifier	Z_TYPE_P		1907941	0					
ANR	1907963	ArgumentList	data		1907941	1					
ANR	1907964	Argument	data		1907941	0					
ANR	1907965	Identifier	data		1907941	0					
ANR	1907966	Identifier	IS_OBJECT		1907941	1					
ANR	1907967	CompoundStatement		5:35:88:88	1907941	1					
ANR	1907968	ExpressionStatement	data = ( zval * ) Z_OBJ_P ( data )	291:3:14341:14368	1907941	0	True				
ANR	1907969	AssignmentExpression	data = ( zval * ) Z_OBJ_P ( data )		1907941	0		=			
ANR	1907970	Identifier	data		1907941	0					
ANR	1907971	CastExpression	( zval * ) Z_OBJ_P ( data )		1907941	1					
ANR	1907972	CastTarget	zval *		1907941	0					
ANR	1907973	CallExpression	Z_OBJ_P ( data )		1907941	1					
ANR	1907974	Callee	Z_OBJ_P		1907941	0					
ANR	1907975	Identifier	Z_OBJ_P		1907941	0					
ANR	1907976	ArgumentList	data		1907941	1					
ANR	1907977	Argument	data		1907941	0					
ANR	1907978	Identifier	data		1907941	0					
ANR	1907979	IfStatement	"if ( ( node_ptr = zend_hash_index_find_ptr ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) data ) ) != NULL )"		1907941	1					
ANR	1907980	Condition	"( node_ptr = zend_hash_index_find_ptr ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) data ) ) != NULL"	293:6:14380:14464	1907941	0	True				
ANR	1907981	EqualityExpression	"( node_ptr = zend_hash_index_find_ptr ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) data ) ) != NULL"		1907941	0		!=			
ANR	1907982	AssignmentExpression	"node_ptr = zend_hash_index_find_ptr ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) data )"		1907941	0		=			
ANR	1907983	Identifier	node_ptr		1907941	0					
ANR	1907984	CallExpression	"zend_hash_index_find_ptr ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) data )"		1907941	1					
ANR	1907985	Callee	zend_hash_index_find_ptr		1907941	0					
ANR	1907986	Identifier	zend_hash_index_find_ptr		1907941	0					
ANR	1907987	ArgumentList	SOAP_GLOBAL ( ref_map )		1907941	1					
ANR	1907988	Argument	SOAP_GLOBAL ( ref_map )		1907941	0					
ANR	1907989	CallExpression	SOAP_GLOBAL ( ref_map )		1907941	0					
ANR	1907990	Callee	SOAP_GLOBAL		1907941	0					
ANR	1907991	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1907992	ArgumentList	ref_map		1907941	1					
ANR	1907993	Argument	ref_map		1907941	0					
ANR	1907994	Identifier	ref_map		1907941	0					
ANR	1907995	Argument	( zend_ulong ) data		1907941	1					
ANR	1907996	CastExpression	( zend_ulong ) data		1907941	0					
ANR	1907997	CastTarget	zend_ulong		1907941	0					
ANR	1907998	Identifier	data		1907941	1					
ANR	1907999	Identifier	NULL		1907941	1					
ANR	1908000	CompoundStatement		11:3:280:302	1907941	1					
ANR	1908001	IdentifierDeclStatement	xmlAttrPtr attr = node_ptr -> properties ;	294:3:14472:14510	1907941	0	True				
ANR	1908002	IdentifierDecl	attr = node_ptr -> properties		1907941	0					
ANR	1908003	IdentifierDeclType	xmlAttrPtr		1907941	0					
ANR	1908004	Identifier	attr		1907941	1					
ANR	1908005	AssignmentExpression	attr = node_ptr -> properties		1907941	2		=			
ANR	1908006	Identifier	attr		1907941	0					
ANR	1908007	PtrMemberAccess	node_ptr -> properties		1907941	1					
ANR	1908008	Identifier	node_ptr		1907941	0					
ANR	1908009	Identifier	properties		1907941	1					
ANR	1908010	IdentifierDeclStatement	char * id ;	295:3:14515:14523	1907941	1	True				
ANR	1908011	IdentifierDecl	* id		1907941	0					
ANR	1908012	IdentifierDeclType	char *		1907941	0					
ANR	1908013	Identifier	id		1907941	1					
ANR	1908014	IdentifierDeclStatement	smart_str prefix = { 0 } ;	296:3:14528:14550	1907941	2	True				
ANR	1908015	IdentifierDecl	prefix = { 0 }		1907941	0					
ANR	1908016	IdentifierDeclType	smart_str		1907941	0					
ANR	1908017	Identifier	prefix		1907941	1					
ANR	1908018	AssignmentExpression	prefix = { 0 }		1907941	2		=			
ANR	1908019	Identifier	prefix		1907941	0					
ANR	1908020	InitializerList	0		1907941	1					
ANR	1908021	PrimaryExpression	0		1907941	0					
ANR	1908022	IfStatement	if ( node_ptr == node )		1907941	3					
ANR	1908023	Condition	node_ptr == node	298:7:14560:14575	1907941	0	True				
ANR	1908024	EqualityExpression	node_ptr == node		1907941	0		==			
ANR	1908025	Identifier	node_ptr		1907941	0					
ANR	1908026	Identifier	node		1907941	1					
ANR	1908027	CompoundStatement		13:25:330:330	1907941	1					
ANR	1908028	ReturnStatement	return 0 ;	299:4:14584:14592	1907941	0	True				
ANR	1908029	PrimaryExpression	0		1907941	0					
ANR	1908030	ExpressionStatement	"xmlNodeSetName ( node , node_ptr -> name )"	301:3:14602:14638	1907941	4	True				
ANR	1908031	CallExpression	"xmlNodeSetName ( node , node_ptr -> name )"		1907941	0					
ANR	1908032	Callee	xmlNodeSetName		1907941	0					
ANR	1908033	Identifier	xmlNodeSetName		1907941	0					
ANR	1908034	ArgumentList	node		1907941	1					
ANR	1908035	Argument	node		1907941	0					
ANR	1908036	Identifier	node		1907941	0					
ANR	1908037	Argument	node_ptr -> name		1907941	1					
ANR	1908038	PtrMemberAccess	node_ptr -> name		1907941	0					
ANR	1908039	Identifier	node_ptr		1907941	0					
ANR	1908040	Identifier	name		1907941	1					
ANR	1908041	ExpressionStatement	"xmlSetNs ( node , node_ptr -> ns )"	302:3:14643:14671	1907941	5	True				
ANR	1908042	CallExpression	"xmlSetNs ( node , node_ptr -> ns )"		1907941	0					
ANR	1908043	Callee	xmlSetNs		1907941	0					
ANR	1908044	Identifier	xmlSetNs		1907941	0					
ANR	1908045	ArgumentList	node		1907941	1					
ANR	1908046	Argument	node		1907941	0					
ANR	1908047	Identifier	node		1907941	0					
ANR	1908048	Argument	node_ptr -> ns		1907941	1					
ANR	1908049	PtrMemberAccess	node_ptr -> ns		1907941	0					
ANR	1908050	Identifier	node_ptr		1907941	0					
ANR	1908051	Identifier	ns		1907941	1					
ANR	1908052	IfStatement	if ( SOAP_GLOBAL ( soap_version ) == SOAP_1_1 )		1907941	6					
ANR	1908053	Condition	SOAP_GLOBAL ( soap_version ) == SOAP_1_1	303:7:14680:14716	1907941	0	True				
ANR	1908054	EqualityExpression	SOAP_GLOBAL ( soap_version ) == SOAP_1_1		1907941	0		==			
ANR	1908055	CallExpression	SOAP_GLOBAL ( soap_version )		1907941	0					
ANR	1908056	Callee	SOAP_GLOBAL		1907941	0					
ANR	1908057	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1908058	ArgumentList	soap_version		1907941	1					
ANR	1908059	Argument	soap_version		1907941	0					
ANR	1908060	Identifier	soap_version		1907941	0					
ANR	1908061	Identifier	SOAP_1_1		1907941	1					
ANR	1908062	CompoundStatement		18:46:471:471	1907941	1					
ANR	1908063	WhileStatement	while ( 1 )		1907941	0					
ANR	1908064	Condition	1	304:11:14732:14732	1907941	0	True				
ANR	1908065	PrimaryExpression	1		1907941	0					
ANR	1908066	CompoundStatement		19:14:487:487	1907941	1					
ANR	1908067	ExpressionStatement	"attr = get_attribute ( attr , ""id"" )"	305:5:14742:14774	1907941	0	True				
ANR	1908068	AssignmentExpression	"attr = get_attribute ( attr , ""id"" )"		1907941	0		=			
ANR	1908069	Identifier	attr		1907941	0					
ANR	1908070	CallExpression	"get_attribute ( attr , ""id"" )"		1907941	1					
ANR	1908071	Callee	get_attribute		1907941	0					
ANR	1908072	Identifier	get_attribute		1907941	0					
ANR	1908073	ArgumentList	attr		1907941	1					
ANR	1908074	Argument	attr		1907941	0					
ANR	1908075	Identifier	attr		1907941	0					
ANR	1908076	Argument	"""id"""		1907941	1					
ANR	1908077	PrimaryExpression	"""id"""		1907941	0					
ANR	1908078	IfStatement	if ( attr == NULL || attr -> ns == NULL )		1907941	1					
ANR	1908079	Condition	attr == NULL || attr -> ns == NULL	306:9:14785:14816	1907941	0	True				
ANR	1908080	OrExpression	attr == NULL || attr -> ns == NULL		1907941	0		||			
ANR	1908081	EqualityExpression	attr == NULL		1907941	0		==			
ANR	1908082	Identifier	attr		1907941	0					
ANR	1908083	Identifier	NULL		1907941	1					
ANR	1908084	EqualityExpression	attr -> ns == NULL		1907941	1		==			
ANR	1908085	PtrMemberAccess	attr -> ns		1907941	0					
ANR	1908086	Identifier	attr		1907941	0					
ANR	1908087	Identifier	ns		1907941	1					
ANR	1908088	Identifier	NULL		1907941	1					
ANR	1908089	CompoundStatement		21:43:571:571	1907941	1					
ANR	1908090	BreakStatement	break ;	307:6:14827:14832	1907941	0	True				
ANR	1908091	ExpressionStatement	attr = attr -> next	309:5:14846:14863	1907941	2	True				
ANR	1908092	AssignmentExpression	attr = attr -> next		1907941	0		=			
ANR	1908093	Identifier	attr		1907941	0					
ANR	1908094	PtrMemberAccess	attr -> next		1907941	1					
ANR	1908095	Identifier	attr		1907941	0					
ANR	1908096	Identifier	next		1907941	1					
ANR	1908097	IfStatement	if ( attr )		1907941	1					
ANR	1908098	Condition	attr	311:8:14879:14882	1907941	0	True				
ANR	1908099	Identifier	attr		1907941	0					
ANR	1908100	CompoundStatement		26:14:637:637	1907941	1					
ANR	1908101	ExpressionStatement	id = ( char * ) attr -> children -> content	312:5:14892:14927	1907941	0	True				
ANR	1908102	AssignmentExpression	id = ( char * ) attr -> children -> content		1907941	0		=			
ANR	1908103	Identifier	id		1907941	0					
ANR	1908104	CastExpression	( char * ) attr -> children -> content		1907941	1					
ANR	1908105	CastTarget	char *		1907941	0					
ANR	1908106	PtrMemberAccess	attr -> children -> content		1907941	1					
ANR	1908107	PtrMemberAccess	attr -> children		1907941	0					
ANR	1908108	Identifier	attr		1907941	0					
ANR	1908109	Identifier	children		1907941	1					
ANR	1908110	Identifier	content		1907941	1					
ANR	1908111	ExpressionStatement	"smart_str_appendc ( & prefix , '#' )"	313:5:14934:14965	1907941	1	True				
ANR	1908112	CallExpression	"smart_str_appendc ( & prefix , '#' )"		1907941	0					
ANR	1908113	Callee	smart_str_appendc		1907941	0					
ANR	1908114	Identifier	smart_str_appendc		1907941	0					
ANR	1908115	ArgumentList	& prefix		1907941	1					
ANR	1908116	Argument	& prefix		1907941	0					
ANR	1908117	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908118	UnaryOperator	&		1907941	0					
ANR	1908119	Identifier	prefix		1907941	1					
ANR	1908120	Argument	'#'		1907941	1					
ANR	1908121	PrimaryExpression	'#'		1907941	0					
ANR	1908122	ExpressionStatement	"smart_str_appends ( & prefix , id )"	314:5:14972:15002	1907941	2	True				
ANR	1908123	CallExpression	"smart_str_appends ( & prefix , id )"		1907941	0					
ANR	1908124	Callee	smart_str_appends		1907941	0					
ANR	1908125	Identifier	smart_str_appends		1907941	0					
ANR	1908126	ArgumentList	& prefix		1907941	1					
ANR	1908127	Argument	& prefix		1907941	0					
ANR	1908128	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908129	UnaryOperator	&		1907941	0					
ANR	1908130	Identifier	prefix		1907941	1					
ANR	1908131	Argument	id		1907941	1					
ANR	1908132	Identifier	id		1907941	0					
ANR	1908133	ExpressionStatement	smart_str_0 ( & prefix )	315:5:15009:15029	1907941	3	True				
ANR	1908134	CallExpression	smart_str_0 ( & prefix )		1907941	0					
ANR	1908135	Callee	smart_str_0		1907941	0					
ANR	1908136	Identifier	smart_str_0		1907941	0					
ANR	1908137	ArgumentList	& prefix		1907941	1					
ANR	1908138	Argument	& prefix		1907941	0					
ANR	1908139	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908140	UnaryOperator	&		1907941	0					
ANR	1908141	Identifier	prefix		1907941	1					
ANR	1908142	ExpressionStatement	id = ZSTR_VAL ( prefix . s )	316:5:15036:15059	1907941	4	True				
ANR	1908143	AssignmentExpression	id = ZSTR_VAL ( prefix . s )		1907941	0		=			
ANR	1908144	Identifier	id		1907941	0					
ANR	1908145	CallExpression	ZSTR_VAL ( prefix . s )		1907941	1					
ANR	1908146	Callee	ZSTR_VAL		1907941	0					
ANR	1908147	Identifier	ZSTR_VAL		1907941	0					
ANR	1908148	ArgumentList	prefix . s		1907941	1					
ANR	1908149	Argument	prefix . s		1907941	0					
ANR	1908150	MemberAccess	prefix . s		1907941	0					
ANR	1908151	Identifier	prefix		1907941	0					
ANR	1908152	Identifier	s		1907941	1					
ANR	1908153	ElseStatement	else		1907941	0					
ANR	1908154	CompoundStatement		32:11:824:824	1907941	0					
ANR	1908155	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) ++	318:5:15079:15106	1907941	0	True				
ANR	1908156	PostIncDecOperationExpression	SOAP_GLOBAL ( cur_uniq_ref ) ++		1907941	0					
ANR	1908157	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1907941	0					
ANR	1908158	Callee	SOAP_GLOBAL		1907941	0					
ANR	1908159	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1908160	ArgumentList	cur_uniq_ref		1907941	1					
ANR	1908161	Argument	cur_uniq_ref		1907941	0					
ANR	1908162	Identifier	cur_uniq_ref		1907941	0					
ANR	1908163	IncDec	++		1907941	1					
ANR	1908164	ExpressionStatement	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"	319:5:15113:15150	1907941	1	True				
ANR	1908165	CallExpression	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"		1907941	0					
ANR	1908166	Callee	smart_str_appendl		1907941	0					
ANR	1908167	Identifier	smart_str_appendl		1907941	0					
ANR	1908168	ArgumentList	& prefix		1907941	1					
ANR	1908169	Argument	& prefix		1907941	0					
ANR	1908170	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908171	UnaryOperator	&		1907941	0					
ANR	1908172	Identifier	prefix		1907941	1					
ANR	1908173	Argument	"""#ref"""		1907941	1					
ANR	1908174	PrimaryExpression	"""#ref"""		1907941	0					
ANR	1908175	Argument	4		1907941	2					
ANR	1908176	PrimaryExpression	4		1907941	0					
ANR	1908177	ExpressionStatement	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"	320:5:15157:15214	1907941	2	True				
ANR	1908178	CallExpression	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"		1907941	0					
ANR	1908179	Callee	smart_str_append_long		1907941	0					
ANR	1908180	Identifier	smart_str_append_long		1907941	0					
ANR	1908181	ArgumentList	& prefix		1907941	1					
ANR	1908182	Argument	& prefix		1907941	0					
ANR	1908183	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908184	UnaryOperator	&		1907941	0					
ANR	1908185	Identifier	prefix		1907941	1					
ANR	1908186	Argument	SOAP_GLOBAL ( cur_uniq_ref )		1907941	1					
ANR	1908187	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1907941	0					
ANR	1908188	Callee	SOAP_GLOBAL		1907941	0					
ANR	1908189	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1908190	ArgumentList	cur_uniq_ref		1907941	1					
ANR	1908191	Argument	cur_uniq_ref		1907941	0					
ANR	1908192	Identifier	cur_uniq_ref		1907941	0					
ANR	1908193	ExpressionStatement	smart_str_0 ( & prefix )	321:5:15221:15241	1907941	3	True				
ANR	1908194	CallExpression	smart_str_0 ( & prefix )		1907941	0					
ANR	1908195	Callee	smart_str_0		1907941	0					
ANR	1908196	Identifier	smart_str_0		1907941	0					
ANR	1908197	ArgumentList	& prefix		1907941	1					
ANR	1908198	Argument	& prefix		1907941	0					
ANR	1908199	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908200	UnaryOperator	&		1907941	0					
ANR	1908201	Identifier	prefix		1907941	1					
ANR	1908202	ExpressionStatement	id = ZSTR_VAL ( prefix . s )	322:5:15248:15271	1907941	4	True				
ANR	1908203	AssignmentExpression	id = ZSTR_VAL ( prefix . s )		1907941	0		=			
ANR	1908204	Identifier	id		1907941	0					
ANR	1908205	CallExpression	ZSTR_VAL ( prefix . s )		1907941	1					
ANR	1908206	Callee	ZSTR_VAL		1907941	0					
ANR	1908207	Identifier	ZSTR_VAL		1907941	0					
ANR	1908208	ArgumentList	prefix . s		1907941	1					
ANR	1908209	Argument	prefix . s		1907941	0					
ANR	1908210	MemberAccess	prefix . s		1907941	0					
ANR	1908211	Identifier	prefix		1907941	0					
ANR	1908212	Identifier	s		1907941	1					
ANR	1908213	ExpressionStatement	"xmlSetProp ( node_ptr , BAD_CAST ( ""id"" ) , BAD_CAST ( id + 1 ) )"	323:5:15278:15330	1907941	5	True				
ANR	1908214	CallExpression	"xmlSetProp ( node_ptr , BAD_CAST ( ""id"" ) , BAD_CAST ( id + 1 ) )"		1907941	0					
ANR	1908215	Callee	xmlSetProp		1907941	0					
ANR	1908216	Identifier	xmlSetProp		1907941	0					
ANR	1908217	ArgumentList	node_ptr		1907941	1					
ANR	1908218	Argument	node_ptr		1907941	0					
ANR	1908219	Identifier	node_ptr		1907941	0					
ANR	1908220	Argument	"BAD_CAST ( ""id"" )"		1907941	1					
ANR	1908221	CallExpression	"BAD_CAST ( ""id"" )"		1907941	0					
ANR	1908222	Callee	BAD_CAST		1907941	0					
ANR	1908223	Identifier	BAD_CAST		1907941	0					
ANR	1908224	ArgumentList	"""id"""		1907941	1					
ANR	1908225	Argument	"""id"""		1907941	0					
ANR	1908226	PrimaryExpression	"""id"""		1907941	0					
ANR	1908227	Argument	BAD_CAST ( id + 1 )		1907941	2					
ANR	1908228	CallExpression	BAD_CAST ( id + 1 )		1907941	0					
ANR	1908229	Callee	BAD_CAST		1907941	0					
ANR	1908230	Identifier	BAD_CAST		1907941	0					
ANR	1908231	ArgumentList	id + 1		1907941	1					
ANR	1908232	Argument	id + 1		1907941	0					
ANR	1908233	AdditiveExpression	id + 1		1907941	0		+			
ANR	1908234	Identifier	id		1907941	0					
ANR	1908235	PrimaryExpression	1		1907941	1					
ANR	1908236	ExpressionStatement	"xmlSetProp ( node , BAD_CAST ( ""href"" ) , BAD_CAST ( id ) )"	325:4:15342:15390	1907941	2	True				
ANR	1908237	CallExpression	"xmlSetProp ( node , BAD_CAST ( ""href"" ) , BAD_CAST ( id ) )"		1907941	0					
ANR	1908238	Callee	xmlSetProp		1907941	0					
ANR	1908239	Identifier	xmlSetProp		1907941	0					
ANR	1908240	ArgumentList	node		1907941	1					
ANR	1908241	Argument	node		1907941	0					
ANR	1908242	Identifier	node		1907941	0					
ANR	1908243	Argument	"BAD_CAST ( ""href"" )"		1907941	1					
ANR	1908244	CallExpression	"BAD_CAST ( ""href"" )"		1907941	0					
ANR	1908245	Callee	BAD_CAST		1907941	0					
ANR	1908246	Identifier	BAD_CAST		1907941	0					
ANR	1908247	ArgumentList	"""href"""		1907941	1					
ANR	1908248	Argument	"""href"""		1907941	0					
ANR	1908249	PrimaryExpression	"""href"""		1907941	0					
ANR	1908250	Argument	BAD_CAST ( id )		1907941	2					
ANR	1908251	CallExpression	BAD_CAST ( id )		1907941	0					
ANR	1908252	Callee	BAD_CAST		1907941	0					
ANR	1908253	Identifier	BAD_CAST		1907941	0					
ANR	1908254	ArgumentList	id		1907941	1					
ANR	1908255	Argument	id		1907941	0					
ANR	1908256	Identifier	id		1907941	0					
ANR	1908257	ElseStatement	else		1907941	0					
ANR	1908258	CompoundStatement		41:10:1154:1154	1907941	0					
ANR	1908259	ExpressionStatement	"attr = get_attribute_ex ( attr , ""id"" , SOAP_1_2_ENC_NAMESPACE )"	327:4:15408:15467	1907941	0	True				
ANR	1908260	AssignmentExpression	"attr = get_attribute_ex ( attr , ""id"" , SOAP_1_2_ENC_NAMESPACE )"		1907941	0		=			
ANR	1908261	Identifier	attr		1907941	0					
ANR	1908262	CallExpression	"get_attribute_ex ( attr , ""id"" , SOAP_1_2_ENC_NAMESPACE )"		1907941	1					
ANR	1908263	Callee	get_attribute_ex		1907941	0					
ANR	1908264	Identifier	get_attribute_ex		1907941	0					
ANR	1908265	ArgumentList	attr		1907941	1					
ANR	1908266	Argument	attr		1907941	0					
ANR	1908267	Identifier	attr		1907941	0					
ANR	1908268	Argument	"""id"""		1907941	1					
ANR	1908269	PrimaryExpression	"""id"""		1907941	0					
ANR	1908270	Argument	SOAP_1_2_ENC_NAMESPACE		1907941	2					
ANR	1908271	Identifier	SOAP_1_2_ENC_NAMESPACE		1907941	0					
ANR	1908272	IfStatement	if ( attr )		1907941	1					
ANR	1908273	Condition	attr	328:8:15477:15480	1907941	0	True				
ANR	1908274	Identifier	attr		1907941	0					
ANR	1908275	CompoundStatement		43:14:1235:1235	1907941	1					
ANR	1908276	ExpressionStatement	id = ( char * ) attr -> children -> content	329:5:15490:15525	1907941	0	True				
ANR	1908277	AssignmentExpression	id = ( char * ) attr -> children -> content		1907941	0		=			
ANR	1908278	Identifier	id		1907941	0					
ANR	1908279	CastExpression	( char * ) attr -> children -> content		1907941	1					
ANR	1908280	CastTarget	char *		1907941	0					
ANR	1908281	PtrMemberAccess	attr -> children -> content		1907941	1					
ANR	1908282	PtrMemberAccess	attr -> children		1907941	0					
ANR	1908283	Identifier	attr		1907941	0					
ANR	1908284	Identifier	children		1907941	1					
ANR	1908285	Identifier	content		1907941	1					
ANR	1908286	ExpressionStatement	"smart_str_appendc ( & prefix , '#' )"	330:5:15532:15563	1907941	1	True				
ANR	1908287	CallExpression	"smart_str_appendc ( & prefix , '#' )"		1907941	0					
ANR	1908288	Callee	smart_str_appendc		1907941	0					
ANR	1908289	Identifier	smart_str_appendc		1907941	0					
ANR	1908290	ArgumentList	& prefix		1907941	1					
ANR	1908291	Argument	& prefix		1907941	0					
ANR	1908292	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908293	UnaryOperator	&		1907941	0					
ANR	1908294	Identifier	prefix		1907941	1					
ANR	1908295	Argument	'#'		1907941	1					
ANR	1908296	PrimaryExpression	'#'		1907941	0					
ANR	1908297	ExpressionStatement	"smart_str_appends ( & prefix , id )"	331:5:15570:15600	1907941	2	True				
ANR	1908298	CallExpression	"smart_str_appends ( & prefix , id )"		1907941	0					
ANR	1908299	Callee	smart_str_appends		1907941	0					
ANR	1908300	Identifier	smart_str_appends		1907941	0					
ANR	1908301	ArgumentList	& prefix		1907941	1					
ANR	1908302	Argument	& prefix		1907941	0					
ANR	1908303	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908304	UnaryOperator	&		1907941	0					
ANR	1908305	Identifier	prefix		1907941	1					
ANR	1908306	Argument	id		1907941	1					
ANR	1908307	Identifier	id		1907941	0					
ANR	1908308	ExpressionStatement	smart_str_0 ( & prefix )	332:5:15607:15627	1907941	3	True				
ANR	1908309	CallExpression	smart_str_0 ( & prefix )		1907941	0					
ANR	1908310	Callee	smart_str_0		1907941	0					
ANR	1908311	Identifier	smart_str_0		1907941	0					
ANR	1908312	ArgumentList	& prefix		1907941	1					
ANR	1908313	Argument	& prefix		1907941	0					
ANR	1908314	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908315	UnaryOperator	&		1907941	0					
ANR	1908316	Identifier	prefix		1907941	1					
ANR	1908317	ExpressionStatement	id = ZSTR_VAL ( prefix . s )	333:5:15634:15657	1907941	4	True				
ANR	1908318	AssignmentExpression	id = ZSTR_VAL ( prefix . s )		1907941	0		=			
ANR	1908319	Identifier	id		1907941	0					
ANR	1908320	CallExpression	ZSTR_VAL ( prefix . s )		1907941	1					
ANR	1908321	Callee	ZSTR_VAL		1907941	0					
ANR	1908322	Identifier	ZSTR_VAL		1907941	0					
ANR	1908323	ArgumentList	prefix . s		1907941	1					
ANR	1908324	Argument	prefix . s		1907941	0					
ANR	1908325	MemberAccess	prefix . s		1907941	0					
ANR	1908326	Identifier	prefix		1907941	0					
ANR	1908327	Identifier	s		1907941	1					
ANR	1908328	ElseStatement	else		1907941	0					
ANR	1908329	CompoundStatement		49:11:1422:1422	1907941	0					
ANR	1908330	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) ++	335:5:15677:15704	1907941	0	True				
ANR	1908331	PostIncDecOperationExpression	SOAP_GLOBAL ( cur_uniq_ref ) ++		1907941	0					
ANR	1908332	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1907941	0					
ANR	1908333	Callee	SOAP_GLOBAL		1907941	0					
ANR	1908334	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1908335	ArgumentList	cur_uniq_ref		1907941	1					
ANR	1908336	Argument	cur_uniq_ref		1907941	0					
ANR	1908337	Identifier	cur_uniq_ref		1907941	0					
ANR	1908338	IncDec	++		1907941	1					
ANR	1908339	ExpressionStatement	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"	336:5:15711:15748	1907941	1	True				
ANR	1908340	CallExpression	"smart_str_appendl ( & prefix , ""#ref"" , 4 )"		1907941	0					
ANR	1908341	Callee	smart_str_appendl		1907941	0					
ANR	1908342	Identifier	smart_str_appendl		1907941	0					
ANR	1908343	ArgumentList	& prefix		1907941	1					
ANR	1908344	Argument	& prefix		1907941	0					
ANR	1908345	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908346	UnaryOperator	&		1907941	0					
ANR	1908347	Identifier	prefix		1907941	1					
ANR	1908348	Argument	"""#ref"""		1907941	1					
ANR	1908349	PrimaryExpression	"""#ref"""		1907941	0					
ANR	1908350	Argument	4		1907941	2					
ANR	1908351	PrimaryExpression	4		1907941	0					
ANR	1908352	ExpressionStatement	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"	337:5:15755:15812	1907941	2	True				
ANR	1908353	CallExpression	"smart_str_append_long ( & prefix , SOAP_GLOBAL ( cur_uniq_ref ) )"		1907941	0					
ANR	1908354	Callee	smart_str_append_long		1907941	0					
ANR	1908355	Identifier	smart_str_append_long		1907941	0					
ANR	1908356	ArgumentList	& prefix		1907941	1					
ANR	1908357	Argument	& prefix		1907941	0					
ANR	1908358	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908359	UnaryOperator	&		1907941	0					
ANR	1908360	Identifier	prefix		1907941	1					
ANR	1908361	Argument	SOAP_GLOBAL ( cur_uniq_ref )		1907941	1					
ANR	1908362	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1907941	0					
ANR	1908363	Callee	SOAP_GLOBAL		1907941	0					
ANR	1908364	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1908365	ArgumentList	cur_uniq_ref		1907941	1					
ANR	1908366	Argument	cur_uniq_ref		1907941	0					
ANR	1908367	Identifier	cur_uniq_ref		1907941	0					
ANR	1908368	ExpressionStatement	smart_str_0 ( & prefix )	338:5:15819:15839	1907941	3	True				
ANR	1908369	CallExpression	smart_str_0 ( & prefix )		1907941	0					
ANR	1908370	Callee	smart_str_0		1907941	0					
ANR	1908371	Identifier	smart_str_0		1907941	0					
ANR	1908372	ArgumentList	& prefix		1907941	1					
ANR	1908373	Argument	& prefix		1907941	0					
ANR	1908374	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908375	UnaryOperator	&		1907941	0					
ANR	1908376	Identifier	prefix		1907941	1					
ANR	1908377	ExpressionStatement	id = ZSTR_VAL ( prefix . s )	339:5:15846:15869	1907941	4	True				
ANR	1908378	AssignmentExpression	id = ZSTR_VAL ( prefix . s )		1907941	0		=			
ANR	1908379	Identifier	id		1907941	0					
ANR	1908380	CallExpression	ZSTR_VAL ( prefix . s )		1907941	1					
ANR	1908381	Callee	ZSTR_VAL		1907941	0					
ANR	1908382	Identifier	ZSTR_VAL		1907941	0					
ANR	1908383	ArgumentList	prefix . s		1907941	1					
ANR	1908384	Argument	prefix . s		1907941	0					
ANR	1908385	MemberAccess	prefix . s		1907941	0					
ANR	1908386	Identifier	prefix		1907941	0					
ANR	1908387	Identifier	s		1907941	1					
ANR	1908388	ExpressionStatement	"set_ns_prop ( node_ptr , SOAP_1_2_ENC_NAMESPACE , ""id"" , id + 1 )"	340:5:15876:15933	1907941	5	True				
ANR	1908389	CallExpression	"set_ns_prop ( node_ptr , SOAP_1_2_ENC_NAMESPACE , ""id"" , id + 1 )"		1907941	0					
ANR	1908390	Callee	set_ns_prop		1907941	0					
ANR	1908391	Identifier	set_ns_prop		1907941	0					
ANR	1908392	ArgumentList	node_ptr		1907941	1					
ANR	1908393	Argument	node_ptr		1907941	0					
ANR	1908394	Identifier	node_ptr		1907941	0					
ANR	1908395	Argument	SOAP_1_2_ENC_NAMESPACE		1907941	1					
ANR	1908396	Identifier	SOAP_1_2_ENC_NAMESPACE		1907941	0					
ANR	1908397	Argument	"""id"""		1907941	2					
ANR	1908398	PrimaryExpression	"""id"""		1907941	0					
ANR	1908399	Argument	id + 1		1907941	3					
ANR	1908400	AdditiveExpression	id + 1		1907941	0		+			
ANR	1908401	Identifier	id		1907941	0					
ANR	1908402	PrimaryExpression	1		1907941	1					
ANR	1908403	ExpressionStatement	"set_ns_prop ( node , SOAP_1_2_ENC_NAMESPACE , ""ref"" , id )"	342:4:15945:15997	1907941	2	True				
ANR	1908404	CallExpression	"set_ns_prop ( node , SOAP_1_2_ENC_NAMESPACE , ""ref"" , id )"		1907941	0					
ANR	1908405	Callee	set_ns_prop		1907941	0					
ANR	1908406	Identifier	set_ns_prop		1907941	0					
ANR	1908407	ArgumentList	node		1907941	1					
ANR	1908408	Argument	node		1907941	0					
ANR	1908409	Identifier	node		1907941	0					
ANR	1908410	Argument	SOAP_1_2_ENC_NAMESPACE		1907941	1					
ANR	1908411	Identifier	SOAP_1_2_ENC_NAMESPACE		1907941	0					
ANR	1908412	Argument	"""ref"""		1907941	2					
ANR	1908413	PrimaryExpression	"""ref"""		1907941	0					
ANR	1908414	Argument	id		1907941	3					
ANR	1908415	Identifier	id		1907941	0					
ANR	1908416	ExpressionStatement	smart_str_free ( & prefix )	344:3:16007:16030	1907941	7	True				
ANR	1908417	CallExpression	smart_str_free ( & prefix )		1907941	0					
ANR	1908418	Callee	smart_str_free		1907941	0					
ANR	1908419	Identifier	smart_str_free		1907941	0					
ANR	1908420	ArgumentList	& prefix		1907941	1					
ANR	1908421	Argument	& prefix		1907941	0					
ANR	1908422	UnaryOperationExpression	& prefix		1907941	0					
ANR	1908423	UnaryOperator	&		1907941	0					
ANR	1908424	Identifier	prefix		1907941	1					
ANR	1908425	ReturnStatement	return 1 ;	345:3:16035:16043	1907941	8	True				
ANR	1908426	PrimaryExpression	1		1907941	0					
ANR	1908427	ElseStatement	else		1907941	0					
ANR	1908428	CompoundStatement		61:9:1806:1806	1907941	0					
ANR	1908429	ExpressionStatement	"zend_hash_index_update_ptr ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) data , node )"	347:3:16059:16131	1907941	0	True				
ANR	1908430	CallExpression	"zend_hash_index_update_ptr ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) data , node )"		1907941	0					
ANR	1908431	Callee	zend_hash_index_update_ptr		1907941	0					
ANR	1908432	Identifier	zend_hash_index_update_ptr		1907941	0					
ANR	1908433	ArgumentList	SOAP_GLOBAL ( ref_map )		1907941	1					
ANR	1908434	Argument	SOAP_GLOBAL ( ref_map )		1907941	0					
ANR	1908435	CallExpression	SOAP_GLOBAL ( ref_map )		1907941	0					
ANR	1908436	Callee	SOAP_GLOBAL		1907941	0					
ANR	1908437	Identifier	SOAP_GLOBAL		1907941	0					
ANR	1908438	ArgumentList	ref_map		1907941	1					
ANR	1908439	Argument	ref_map		1907941	0					
ANR	1908440	Identifier	ref_map		1907941	0					
ANR	1908441	Argument	( zend_ulong ) data		1907941	1					
ANR	1908442	CastExpression	( zend_ulong ) data		1907941	0					
ANR	1908443	CastTarget	zend_ulong		1907941	0					
ANR	1908444	Identifier	data		1907941	1					
ANR	1908445	Argument	node		1907941	2					
ANR	1908446	Identifier	node		1907941	0					
ANR	1908447	ReturnStatement	return 0 ;	350:1:16141:16149	1907941	2	True				
ANR	1908448	PrimaryExpression	0		1907941	0					
ANR	1908449	ReturnType	static zend_bool		1907941	1					
ANR	1908450	Identifier	soap_check_zval_ref		1907941	2					
ANR	1908451	ParameterList	"zval * data , xmlNodePtr node"		1907941	3					
ANR	1908452	Parameter	zval * data	286:37:14218:14227	1907941	0	True				
ANR	1908453	ParameterType	zval *		1907941	0					
ANR	1908454	Identifier	data		1907941	1					
ANR	1908455	Parameter	xmlNodePtr node	286:49:14230:14244	1907941	1	True				
ANR	1908456	ParameterType	xmlNodePtr		1907941	0					
ANR	1908457	Identifier	node		1907941	1					
ANR	1908458	CFGEntryNode	ENTRY		1907941		True				
ANR	1908459	CFGExitNode	EXIT		1907941		True				
ANR	1908460	Symbol	attr -> next		1907941						
ANR	1908461	Symbol	data		1907941						
ANR	1908462	Symbol	node_ptr		1907941						
ANR	1908463	Symbol	get_attribute		1907941						
ANR	1908464	Symbol	& prefix		1907941						
ANR	1908465	Symbol	Z_OBJ_P		1907941						
ANR	1908466	Symbol	prefix		1907941						
ANR	1908467	Symbol	node_ptr -> ns		1907941						
ANR	1908468	Symbol	* * attr		1907941						
ANR	1908469	Symbol	* attr -> children		1907941						
ANR	1908470	Symbol	cur_uniq_ref		1907941						
ANR	1908471	Symbol	ref_map		1907941						
ANR	1908472	Symbol	id		1907941						
ANR	1908473	Symbol	soap_version		1907941						
ANR	1908474	Symbol	attr		1907941						
ANR	1908475	Symbol	NULL		1907941						
ANR	1908476	Symbol	SOAP_1_1		1907941						
ANR	1908477	Symbol	zend_hash_index_find_ptr		1907941						
ANR	1908478	Symbol	attr -> children -> content		1907941						
ANR	1908479	Symbol	node_ptr -> name		1907941						
ANR	1908480	Symbol	Z_TYPE_P		1907941						
ANR	1908481	Symbol	attr -> children		1907941						
ANR	1908482	Symbol	SOAP_GLOBAL		1907941						
ANR	1908483	Symbol	ZSTR_VAL		1907941						
ANR	1908484	Symbol	node		1907941						
ANR	1908485	Symbol	attr -> ns		1907941						
ANR	1908486	Symbol	node_ptr -> properties		1907941						
ANR	1908487	Symbol	* node_ptr		1907941						
ANR	1908488	Symbol	prefix . s		1907941						
ANR	1908489	Symbol	get_attribute_ex		1907941						
ANR	1908490	Symbol	SOAP_1_2_ENC_NAMESPACE		1907941						
ANR	1908491	Symbol	* attr		1907941						
ANR	1908492	Symbol	IS_OBJECT		1907941						
ANR	1908493	Symbol	BAD_CAST		1907941						
ANR	1908494	Function	soap_check_xml_ref	353:0:16154:16573							
ANR	1908495	FunctionDef	"soap_check_xml_ref (zval * data , xmlNodePtr node)"		1908494	0					
ANR	1908496	CompoundStatement		354:0:16219:16573	1908494	0					
ANR	1908497	IdentifierDeclStatement	zval * data_ptr ;	355:1:16222:16236	1908494	0	True				
ANR	1908498	IdentifierDecl	* data_ptr		1908494	0					
ANR	1908499	IdentifierDeclType	zval *		1908494	0					
ANR	1908500	Identifier	data_ptr		1908494	1					
ANR	1908501	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1908494	1					
ANR	1908502	Condition	SOAP_GLOBAL ( ref_map )	357:5:16244:16263	1908494	0	True				
ANR	1908503	CallExpression	SOAP_GLOBAL ( ref_map )		1908494	0					
ANR	1908504	Callee	SOAP_GLOBAL		1908494	0					
ANR	1908505	Identifier	SOAP_GLOBAL		1908494	0					
ANR	1908506	ArgumentList	ref_map		1908494	1					
ANR	1908507	Argument	ref_map		1908494	0					
ANR	1908508	Identifier	ref_map		1908494	0					
ANR	1908509	CompoundStatement		4:27:46:46	1908494	1					
ANR	1908510	IfStatement	"if ( ( data_ptr = zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) node ) ) != NULL )"		1908494	0					
ANR	1908511	Condition	"( data_ptr = zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) node ) ) != NULL"	358:6:16274:16354	1908494	0	True				
ANR	1908512	EqualityExpression	"( data_ptr = zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) node ) ) != NULL"		1908494	0		!=			
ANR	1908513	AssignmentExpression	"data_ptr = zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) node )"		1908494	0		=			
ANR	1908514	Identifier	data_ptr		1908494	0					
ANR	1908515	CallExpression	"zend_hash_index_find ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) node )"		1908494	1					
ANR	1908516	Callee	zend_hash_index_find		1908494	0					
ANR	1908517	Identifier	zend_hash_index_find		1908494	0					
ANR	1908518	ArgumentList	SOAP_GLOBAL ( ref_map )		1908494	1					
ANR	1908519	Argument	SOAP_GLOBAL ( ref_map )		1908494	0					
ANR	1908520	CallExpression	SOAP_GLOBAL ( ref_map )		1908494	0					
ANR	1908521	Callee	SOAP_GLOBAL		1908494	0					
ANR	1908522	Identifier	SOAP_GLOBAL		1908494	0					
ANR	1908523	ArgumentList	ref_map		1908494	1					
ANR	1908524	Argument	ref_map		1908494	0					
ANR	1908525	Identifier	ref_map		1908494	0					
ANR	1908526	Argument	( zend_ulong ) node		1908494	1					
ANR	1908527	CastExpression	( zend_ulong ) node		1908494	0					
ANR	1908528	CastTarget	zend_ulong		1908494	0					
ANR	1908529	Identifier	node		1908494	1					
ANR	1908530	Identifier	NULL		1908494	1					
ANR	1908531	CompoundStatement		5:89:137:137	1908494	1					
ANR	1908532	IfStatement	if ( ! Z_REFCOUNTED_P ( data ) || ! Z_REFCOUNTED_P ( data_ptr ) || Z_COUNTED_P ( data ) != Z_COUNTED_P ( data_ptr ) )		1908494	0					
ANR	1908533	Condition	! Z_REFCOUNTED_P ( data ) || ! Z_REFCOUNTED_P ( data_ptr ) || Z_COUNTED_P ( data ) != Z_COUNTED_P ( data_ptr )	359:7:16366:16475	1908494	0	True				
ANR	1908534	OrExpression	! Z_REFCOUNTED_P ( data ) || ! Z_REFCOUNTED_P ( data_ptr ) || Z_COUNTED_P ( data ) != Z_COUNTED_P ( data_ptr )		1908494	0		||			
ANR	1908535	UnaryOperationExpression	! Z_REFCOUNTED_P ( data )		1908494	0					
ANR	1908536	UnaryOperator	!		1908494	0					
ANR	1908537	CallExpression	Z_REFCOUNTED_P ( data )		1908494	1					
ANR	1908538	Callee	Z_REFCOUNTED_P		1908494	0					
ANR	1908539	Identifier	Z_REFCOUNTED_P		1908494	0					
ANR	1908540	ArgumentList	data		1908494	1					
ANR	1908541	Argument	data		1908494	0					
ANR	1908542	Identifier	data		1908494	0					
ANR	1908543	OrExpression	! Z_REFCOUNTED_P ( data_ptr ) || Z_COUNTED_P ( data ) != Z_COUNTED_P ( data_ptr )		1908494	1		||			
ANR	1908544	UnaryOperationExpression	! Z_REFCOUNTED_P ( data_ptr )		1908494	0					
ANR	1908545	UnaryOperator	!		1908494	0					
ANR	1908546	CallExpression	Z_REFCOUNTED_P ( data_ptr )		1908494	1					
ANR	1908547	Callee	Z_REFCOUNTED_P		1908494	0					
ANR	1908548	Identifier	Z_REFCOUNTED_P		1908494	0					
ANR	1908549	ArgumentList	data_ptr		1908494	1					
ANR	1908550	Argument	data_ptr		1908494	0					
ANR	1908551	Identifier	data_ptr		1908494	0					
ANR	1908552	EqualityExpression	Z_COUNTED_P ( data ) != Z_COUNTED_P ( data_ptr )		1908494	1		!=			
ANR	1908553	CallExpression	Z_COUNTED_P ( data )		1908494	0					
ANR	1908554	Callee	Z_COUNTED_P		1908494	0					
ANR	1908555	Identifier	Z_COUNTED_P		1908494	0					
ANR	1908556	ArgumentList	data		1908494	1					
ANR	1908557	Argument	data		1908494	0					
ANR	1908558	Identifier	data		1908494	0					
ANR	1908559	CallExpression	Z_COUNTED_P ( data_ptr )		1908494	1					
ANR	1908560	Callee	Z_COUNTED_P		1908494	0					
ANR	1908561	Identifier	Z_COUNTED_P		1908494	0					
ANR	1908562	ArgumentList	data_ptr		1908494	1					
ANR	1908563	Argument	data_ptr		1908494	0					
ANR	1908564	Identifier	data_ptr		1908494	0					
ANR	1908565	CompoundStatement		8:51:258:258	1908494	1					
ANR	1908566	ExpressionStatement	zval_ptr_dtor ( data )	362:4:16484:16503	1908494	0	True				
ANR	1908567	CallExpression	zval_ptr_dtor ( data )		1908494	0					
ANR	1908568	Callee	zval_ptr_dtor		1908494	0					
ANR	1908569	Identifier	zval_ptr_dtor		1908494	0					
ANR	1908570	ArgumentList	data		1908494	1					
ANR	1908571	Argument	data		1908494	0					
ANR	1908572	Identifier	data		1908494	0					
ANR	1908573	ExpressionStatement	"ZVAL_COPY ( data , data_ptr )"	363:4:16509:16534	1908494	1	True				
ANR	1908574	CallExpression	"ZVAL_COPY ( data , data_ptr )"		1908494	0					
ANR	1908575	Callee	ZVAL_COPY		1908494	0					
ANR	1908576	Identifier	ZVAL_COPY		1908494	0					
ANR	1908577	ArgumentList	data		1908494	1					
ANR	1908578	Argument	data		1908494	0					
ANR	1908579	Identifier	data		1908494	0					
ANR	1908580	Argument	data_ptr		1908494	1					
ANR	1908581	Identifier	data_ptr		1908494	0					
ANR	1908582	ReturnStatement	return 1 ;	364:4:16540:16548	1908494	2	True				
ANR	1908583	PrimaryExpression	1		1908494	0					
ANR	1908584	ReturnStatement	return 0 ;	368:1:16563:16571	1908494	2	True				
ANR	1908585	PrimaryExpression	0		1908494	0					
ANR	1908586	ReturnType	static zend_bool		1908494	1					
ANR	1908587	Identifier	soap_check_xml_ref		1908494	2					
ANR	1908588	ParameterList	"zval * data , xmlNodePtr node"		1908494	3					
ANR	1908589	Parameter	zval * data	353:36:16190:16199	1908494	0	True				
ANR	1908590	ParameterType	zval *		1908494	0					
ANR	1908591	Identifier	data		1908494	1					
ANR	1908592	Parameter	xmlNodePtr node	353:48:16202:16216	1908494	1	True				
ANR	1908593	ParameterType	xmlNodePtr		1908494	0					
ANR	1908594	Identifier	node		1908494	1					
ANR	1908595	CFGEntryNode	ENTRY		1908494		True				
ANR	1908596	CFGExitNode	EXIT		1908494		True				
ANR	1908597	Symbol	node		1908494						
ANR	1908598	Symbol	zend_hash_index_find		1908494						
ANR	1908599	Symbol	NULL		1908494						
ANR	1908600	Symbol	Z_COUNTED_P		1908494						
ANR	1908601	Symbol	data		1908494						
ANR	1908602	Symbol	ref_map		1908494						
ANR	1908603	Symbol	Z_REFCOUNTED_P		1908494						
ANR	1908604	Symbol	SOAP_GLOBAL		1908494						
ANR	1908605	Symbol	data_ptr		1908494						
ANR	1908606	Function	soap_add_xml_ref	371:0:16576:16740							
ANR	1908607	FunctionDef	"soap_add_xml_ref (zval * data , xmlNodePtr node)"		1908606	0					
ANR	1908608	CompoundStatement		372:0:16634:16740	1908606	0					
ANR	1908609	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1908606	0					
ANR	1908610	Condition	SOAP_GLOBAL ( ref_map )	373:5:16641:16660	1908606	0	True				
ANR	1908611	CallExpression	SOAP_GLOBAL ( ref_map )		1908606	0					
ANR	1908612	Callee	SOAP_GLOBAL		1908606	0					
ANR	1908613	Identifier	SOAP_GLOBAL		1908606	0					
ANR	1908614	ArgumentList	ref_map		1908606	1					
ANR	1908615	Argument	ref_map		1908606	0					
ANR	1908616	Identifier	ref_map		1908606	0					
ANR	1908617	CompoundStatement		2:27:28:28	1908606	1					
ANR	1908618	ExpressionStatement	"zend_hash_index_update ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) node , data )"	374:2:16667:16735	1908606	0	True				
ANR	1908619	CallExpression	"zend_hash_index_update ( SOAP_GLOBAL ( ref_map ) , ( zend_ulong ) node , data )"		1908606	0					
ANR	1908620	Callee	zend_hash_index_update		1908606	0					
ANR	1908621	Identifier	zend_hash_index_update		1908606	0					
ANR	1908622	ArgumentList	SOAP_GLOBAL ( ref_map )		1908606	1					
ANR	1908623	Argument	SOAP_GLOBAL ( ref_map )		1908606	0					
ANR	1908624	CallExpression	SOAP_GLOBAL ( ref_map )		1908606	0					
ANR	1908625	Callee	SOAP_GLOBAL		1908606	0					
ANR	1908626	Identifier	SOAP_GLOBAL		1908606	0					
ANR	1908627	ArgumentList	ref_map		1908606	1					
ANR	1908628	Argument	ref_map		1908606	0					
ANR	1908629	Identifier	ref_map		1908606	0					
ANR	1908630	Argument	( zend_ulong ) node		1908606	1					
ANR	1908631	CastExpression	( zend_ulong ) node		1908606	0					
ANR	1908632	CastTarget	zend_ulong		1908606	0					
ANR	1908633	Identifier	node		1908606	1					
ANR	1908634	Argument	data		1908606	2					
ANR	1908635	Identifier	data		1908606	0					
ANR	1908636	ReturnType	static void		1908606	1					
ANR	1908637	Identifier	soap_add_xml_ref		1908606	2					
ANR	1908638	ParameterList	"zval * data , xmlNodePtr node"		1908606	3					
ANR	1908639	Parameter	zval * data	371:29:16605:16614	1908606	0	True				
ANR	1908640	ParameterType	zval *		1908606	0					
ANR	1908641	Identifier	data		1908606	1					
ANR	1908642	Parameter	xmlNodePtr node	371:41:16617:16631	1908606	1	True				
ANR	1908643	ParameterType	xmlNodePtr		1908606	0					
ANR	1908644	Identifier	node		1908606	1					
ANR	1908645	CFGEntryNode	ENTRY		1908606		True				
ANR	1908646	CFGExitNode	EXIT		1908606		True				
ANR	1908647	Symbol	node		1908606						
ANR	1908648	Symbol	data		1908606						
ANR	1908649	Symbol	ref_map		1908606						
ANR	1908650	Symbol	SOAP_GLOBAL		1908606						
ANR	1908651	Function	master_to_xml_int	378:0:16743:21038							
ANR	1908652	FunctionDef	"master_to_xml_int (encodePtr encode , zval * data , int style , xmlNodePtr parent , int check_class_map)"		1908651	0					
ANR	1908653	CompoundStatement		379:0:16860:21038	1908651	0					
ANR	1908654	IdentifierDeclStatement	xmlNodePtr node = NULL ;	380:1:16863:16885	1908651	0	True				
ANR	1908655	IdentifierDecl	node = NULL		1908651	0					
ANR	1908656	IdentifierDeclType	xmlNodePtr		1908651	0					
ANR	1908657	Identifier	node		1908651	1					
ANR	1908658	AssignmentExpression	node = NULL		1908651	2		=			
ANR	1908659	Identifier	NULL		1908651	0					
ANR	1908660	Identifier	NULL		1908651	1					
ANR	1908661	IdentifierDeclStatement	int add_type = 0 ;	381:1:16888:16904	1908651	1	True				
ANR	1908662	IdentifierDecl	add_type = 0		1908651	0					
ANR	1908663	IdentifierDeclType	int		1908651	0					
ANR	1908664	Identifier	add_type		1908651	1					
ANR	1908665	AssignmentExpression	add_type = 0		1908651	2		=			
ANR	1908666	Identifier	add_type		1908651	0					
ANR	1908667	PrimaryExpression	0		1908651	1					
ANR	1908668	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry )		1908651	2					
ANR	1908669	Condition	data && Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry	384:5:16953:17040	1908651	0	True				
ANR	1908670	AndExpression	data && Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry		1908651	0		&&			
ANR	1908671	Identifier	data		1908651	0					
ANR	1908672	AndExpression	Z_TYPE_P ( data ) == IS_OBJECT && Z_OBJCE_P ( data ) == soap_var_class_entry		1908651	1		&&			
ANR	1908673	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1908651	0		==			
ANR	1908674	CallExpression	Z_TYPE_P ( data )		1908651	0					
ANR	1908675	Callee	Z_TYPE_P		1908651	0					
ANR	1908676	Identifier	Z_TYPE_P		1908651	0					
ANR	1908677	ArgumentList	data		1908651	1					
ANR	1908678	Argument	data		1908651	0					
ANR	1908679	Identifier	data		1908651	0					
ANR	1908680	Identifier	IS_OBJECT		1908651	1					
ANR	1908681	EqualityExpression	Z_OBJCE_P ( data ) == soap_var_class_entry		1908651	1		==			
ANR	1908682	CallExpression	Z_OBJCE_P ( data )		1908651	0					
ANR	1908683	Callee	Z_OBJCE_P		1908651	0					
ANR	1908684	Identifier	Z_OBJCE_P		1908651	0					
ANR	1908685	ArgumentList	data		1908651	1					
ANR	1908686	Argument	data		1908651	0					
ANR	1908687	Identifier	data		1908651	0					
ANR	1908688	Identifier	soap_var_class_entry		1908651	1					
ANR	1908689	CompoundStatement		11:2:266:299	1908651	1					
ANR	1908690	IdentifierDeclStatement	"zval * ztype , * zdata , * zns , * zstype , * zname , * znamens ;"	387:2:17047:17099	1908651	0	True				
ANR	1908691	IdentifierDecl	* ztype		1908651	0					
ANR	1908692	IdentifierDeclType	zval *		1908651	0					
ANR	1908693	Identifier	ztype		1908651	1					
ANR	1908694	IdentifierDecl	* zdata		1908651	1					
ANR	1908695	IdentifierDeclType	zval *		1908651	0					
ANR	1908696	Identifier	zdata		1908651	1					
ANR	1908697	IdentifierDecl	* zns		1908651	2					
ANR	1908698	IdentifierDeclType	zval *		1908651	0					
ANR	1908699	Identifier	zns		1908651	1					
ANR	1908700	IdentifierDecl	* zstype		1908651	3					
ANR	1908701	IdentifierDeclType	zval *		1908651	0					
ANR	1908702	Identifier	zstype		1908651	1					
ANR	1908703	IdentifierDecl	* zname		1908651	4					
ANR	1908704	IdentifierDeclType	zval *		1908651	0					
ANR	1908705	Identifier	zname		1908651	1					
ANR	1908706	IdentifierDecl	* znamens		1908651	5					
ANR	1908707	IdentifierDeclType	zval *		1908651	0					
ANR	1908708	Identifier	znamens		1908651	1					
ANR	1908709	IdentifierDeclStatement	encodePtr enc = NULL ;	388:2:17103:17123	1908651	1	True				
ANR	1908710	IdentifierDecl	enc = NULL		1908651	0					
ANR	1908711	IdentifierDeclType	encodePtr		1908651	0					
ANR	1908712	Identifier	enc		1908651	1					
ANR	1908713	AssignmentExpression	enc = NULL		1908651	2		=			
ANR	1908714	Identifier	NULL		1908651	0					
ANR	1908715	Identifier	NULL		1908651	1					
ANR	1908716	IdentifierDeclStatement	HashTable * ht = Z_OBJPROP_P ( data ) ;	389:2:17127:17160	1908651	2	True				
ANR	1908717	IdentifierDecl	* ht = Z_OBJPROP_P ( data )		1908651	0					
ANR	1908718	IdentifierDeclType	HashTable *		1908651	0					
ANR	1908719	Identifier	ht		1908651	1					
ANR	1908720	AssignmentExpression	* ht = Z_OBJPROP_P ( data )		1908651	2		=			
ANR	1908721	Identifier	ht		1908651	0					
ANR	1908722	CallExpression	Z_OBJPROP_P ( data )		1908651	1					
ANR	1908723	Callee	Z_OBJPROP_P		1908651	0					
ANR	1908724	Identifier	Z_OBJPROP_P		1908651	0					
ANR	1908725	ArgumentList	data		1908651	1					
ANR	1908726	Argument	data		1908651	0					
ANR	1908727	Identifier	data		1908651	0					
ANR	1908728	IfStatement	"if ( ( ztype = zend_hash_str_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL || Z_TYPE_P ( ztype ) != IS_LONG )"		1908651	3					
ANR	1908729	Condition	"( ztype = zend_hash_str_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL || Z_TYPE_P ( ztype ) != IS_LONG"	391:6:17169:17278	1908651	0	True				
ANR	1908730	OrExpression	"( ztype = zend_hash_str_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL || Z_TYPE_P ( ztype ) != IS_LONG"		1908651	0		||			
ANR	1908731	EqualityExpression	"( ztype = zend_hash_str_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL"		1908651	0		==			
ANR	1908732	AssignmentExpression	"ztype = zend_hash_str_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 )"		1908651	0		=			
ANR	1908733	Identifier	ztype		1908651	0					
ANR	1908734	CallExpression	"zend_hash_str_find ( ht , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 )"		1908651	1					
ANR	1908735	Callee	zend_hash_str_find		1908651	0					
ANR	1908736	Identifier	zend_hash_str_find		1908651	0					
ANR	1908737	ArgumentList	ht		1908651	1					
ANR	1908738	Argument	ht		1908651	0					
ANR	1908739	Identifier	ht		1908651	0					
ANR	1908740	Argument	"""enc_type"""		1908651	1					
ANR	1908741	PrimaryExpression	"""enc_type"""		1908651	0					
ANR	1908742	Argument	"sizeof ( ""enc_type"" ) - 1"		1908651	2					
ANR	1908743	AdditiveExpression	"sizeof ( ""enc_type"" ) - 1"		1908651	0		-			
ANR	1908744	SizeofExpression	"sizeof ( ""enc_type"" )"		1908651	0					
ANR	1908745	Sizeof	sizeof		1908651	0					
ANR	1908746	PrimaryExpression	"""enc_type"""		1908651	1					
ANR	1908747	PrimaryExpression	1		1908651	1					
ANR	1908748	Identifier	NULL		1908651	1					
ANR	1908749	EqualityExpression	Z_TYPE_P ( ztype ) != IS_LONG		1908651	1		!=			
ANR	1908750	CallExpression	Z_TYPE_P ( ztype )		1908651	0					
ANR	1908751	Callee	Z_TYPE_P		1908651	0					
ANR	1908752	Identifier	Z_TYPE_P		1908651	0					
ANR	1908753	ArgumentList	ztype		1908651	1					
ANR	1908754	Argument	ztype		1908651	0					
ANR	1908755	Identifier	ztype		1908651	0					
ANR	1908756	Identifier	IS_LONG		1908651	1					
ANR	1908757	CompoundStatement		14:34:420:420	1908651	1					
ANR	1908758	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: SoapVar has no 'enc_type' property"" )"	393:3:17286:17354	1908651	0	True				
ANR	1908759	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: SoapVar has no 'enc_type' property"" )"		1908651	0					
ANR	1908760	Callee	soap_error0		1908651	0					
ANR	1908761	Identifier	soap_error0		1908651	0					
ANR	1908762	ArgumentList	E_ERROR		1908651	1					
ANR	1908763	Argument	E_ERROR		1908651	0					
ANR	1908764	Identifier	E_ERROR		1908651	0					
ANR	1908765	Argument	"""Encoding: SoapVar has no 'enc_type' property"""		1908651	1					
ANR	1908766	PrimaryExpression	"""Encoding: SoapVar has no 'enc_type' property"""		1908651	0					
ANR	1908767	IfStatement	"if ( ( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstype ) == IS_STRING )"		1908651	4					
ANR	1908768	Condition	"( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstype ) == IS_STRING"	396:6:17367:17482	1908651	0	True				
ANR	1908769	AndExpression	"( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstype ) == IS_STRING"		1908651	0		&&			
ANR	1908770	EqualityExpression	"( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL"		1908651	0		!=			
ANR	1908771	AssignmentExpression	"zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 )"		1908651	0		=			
ANR	1908772	Identifier	zstype		1908651	0					
ANR	1908773	CallExpression	"zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 )"		1908651	1					
ANR	1908774	Callee	zend_hash_str_find		1908651	0					
ANR	1908775	Identifier	zend_hash_str_find		1908651	0					
ANR	1908776	ArgumentList	ht		1908651	1					
ANR	1908777	Argument	ht		1908651	0					
ANR	1908778	Identifier	ht		1908651	0					
ANR	1908779	Argument	"""enc_stype"""		1908651	1					
ANR	1908780	PrimaryExpression	"""enc_stype"""		1908651	0					
ANR	1908781	Argument	"sizeof ( ""enc_stype"" ) - 1"		1908651	2					
ANR	1908782	AdditiveExpression	"sizeof ( ""enc_stype"" ) - 1"		1908651	0		-			
ANR	1908783	SizeofExpression	"sizeof ( ""enc_stype"" )"		1908651	0					
ANR	1908784	Sizeof	sizeof		1908651	0					
ANR	1908785	PrimaryExpression	"""enc_stype"""		1908651	1					
ANR	1908786	PrimaryExpression	1		1908651	1					
ANR	1908787	Identifier	NULL		1908651	1					
ANR	1908788	EqualityExpression	Z_TYPE_P ( zstype ) == IS_STRING		1908651	1		==			
ANR	1908789	CallExpression	Z_TYPE_P ( zstype )		1908651	0					
ANR	1908790	Callee	Z_TYPE_P		1908651	0					
ANR	1908791	Identifier	Z_TYPE_P		1908651	0					
ANR	1908792	ArgumentList	zstype		1908651	1					
ANR	1908793	Argument	zstype		1908651	0					
ANR	1908794	Identifier	zstype		1908651	0					
ANR	1908795	Identifier	IS_STRING		1908651	1					
ANR	1908796	CompoundStatement		19:37:624:624	1908651	1					
ANR	1908797	IfStatement	"if ( ( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( zns ) == IS_STRING )"		1908651	0					
ANR	1908798	Condition	"( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( zns ) == IS_STRING"	398:7:17494:17598	1908651	0	True				
ANR	1908799	AndExpression	"( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( zns ) == IS_STRING"		1908651	0		&&			
ANR	1908800	EqualityExpression	"( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL"		1908651	0		!=			
ANR	1908801	AssignmentExpression	"zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 )"		1908651	0		=			
ANR	1908802	Identifier	zns		1908651	0					
ANR	1908803	CallExpression	"zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 )"		1908651	1					
ANR	1908804	Callee	zend_hash_str_find		1908651	0					
ANR	1908805	Identifier	zend_hash_str_find		1908651	0					
ANR	1908806	ArgumentList	ht		1908651	1					
ANR	1908807	Argument	ht		1908651	0					
ANR	1908808	Identifier	ht		1908651	0					
ANR	1908809	Argument	"""enc_ns"""		1908651	1					
ANR	1908810	PrimaryExpression	"""enc_ns"""		1908651	0					
ANR	1908811	Argument	"sizeof ( ""enc_ns"" ) - 1"		1908651	2					
ANR	1908812	AdditiveExpression	"sizeof ( ""enc_ns"" ) - 1"		1908651	0		-			
ANR	1908813	SizeofExpression	"sizeof ( ""enc_ns"" )"		1908651	0					
ANR	1908814	Sizeof	sizeof		1908651	0					
ANR	1908815	PrimaryExpression	"""enc_ns"""		1908651	1					
ANR	1908816	PrimaryExpression	1		1908651	1					
ANR	1908817	Identifier	NULL		1908651	1					
ANR	1908818	EqualityExpression	Z_TYPE_P ( zns ) == IS_STRING		1908651	1		==			
ANR	1908819	CallExpression	Z_TYPE_P ( zns )		1908651	0					
ANR	1908820	Callee	Z_TYPE_P		1908651	0					
ANR	1908821	Identifier	Z_TYPE_P		1908651	0					
ANR	1908822	ArgumentList	zns		1908651	1					
ANR	1908823	Argument	zns		1908651	0					
ANR	1908824	Identifier	zns		1908651	0					
ANR	1908825	Identifier	IS_STRING		1908651	1					
ANR	1908826	CompoundStatement		21:35:740:740	1908651	1					
ANR	1908827	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_P ( zns ) , Z_STRVAL_P ( zstype ) )"	400:4:17607:17679	1908651	0	True				
ANR	1908828	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_P ( zns ) , Z_STRVAL_P ( zstype ) )"		1908651	0		=			
ANR	1908829	Identifier	enc		1908651	0					
ANR	1908830	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_P ( zns ) , Z_STRVAL_P ( zstype ) )"		1908651	1					
ANR	1908831	Callee	get_encoder		1908651	0					
ANR	1908832	Identifier	get_encoder		1908651	0					
ANR	1908833	ArgumentList	SOAP_GLOBAL ( sdl )		1908651	1					
ANR	1908834	Argument	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1908835	CallExpression	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1908836	Callee	SOAP_GLOBAL		1908651	0					
ANR	1908837	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1908838	ArgumentList	sdl		1908651	1					
ANR	1908839	Argument	sdl		1908651	0					
ANR	1908840	Identifier	sdl		1908651	0					
ANR	1908841	Argument	Z_STRVAL_P ( zns )		1908651	1					
ANR	1908842	CallExpression	Z_STRVAL_P ( zns )		1908651	0					
ANR	1908843	Callee	Z_STRVAL_P		1908651	0					
ANR	1908844	Identifier	Z_STRVAL_P		1908651	0					
ANR	1908845	ArgumentList	zns		1908651	1					
ANR	1908846	Argument	zns		1908651	0					
ANR	1908847	Identifier	zns		1908651	0					
ANR	1908848	Argument	Z_STRVAL_P ( zstype )		1908651	2					
ANR	1908849	CallExpression	Z_STRVAL_P ( zstype )		1908651	0					
ANR	1908850	Callee	Z_STRVAL_P		1908651	0					
ANR	1908851	Identifier	Z_STRVAL_P		1908651	0					
ANR	1908852	ArgumentList	zstype		1908651	1					
ANR	1908853	Argument	zstype		1908651	0					
ANR	1908854	Identifier	zstype		1908651	0					
ANR	1908855	ElseStatement	else		1908651	0					
ANR	1908856	CompoundStatement		23:10:830:830	1908651	0					
ANR	1908857	ExpressionStatement	zns = NULL	402:4:17697:17707	1908651	0	True				
ANR	1908858	AssignmentExpression	zns = NULL		1908651	0		=			
ANR	1908859	Identifier	zns		1908651	0					
ANR	1908860	Identifier	NULL		1908651	1					
ANR	1908861	ExpressionStatement	"enc = get_encoder_ex ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_P ( zstype ) , Z_STRLEN_P ( zstype ) )"	403:4:17713:17791	1908651	1	True				
ANR	1908862	AssignmentExpression	"enc = get_encoder_ex ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_P ( zstype ) , Z_STRLEN_P ( zstype ) )"		1908651	0		=			
ANR	1908863	Identifier	enc		1908651	0					
ANR	1908864	CallExpression	"get_encoder_ex ( SOAP_GLOBAL ( sdl ) , Z_STRVAL_P ( zstype ) , Z_STRLEN_P ( zstype ) )"		1908651	1					
ANR	1908865	Callee	get_encoder_ex		1908651	0					
ANR	1908866	Identifier	get_encoder_ex		1908651	0					
ANR	1908867	ArgumentList	SOAP_GLOBAL ( sdl )		1908651	1					
ANR	1908868	Argument	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1908869	CallExpression	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1908870	Callee	SOAP_GLOBAL		1908651	0					
ANR	1908871	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1908872	ArgumentList	sdl		1908651	1					
ANR	1908873	Argument	sdl		1908651	0					
ANR	1908874	Identifier	sdl		1908651	0					
ANR	1908875	Argument	Z_STRVAL_P ( zstype )		1908651	1					
ANR	1908876	CallExpression	Z_STRVAL_P ( zstype )		1908651	0					
ANR	1908877	Callee	Z_STRVAL_P		1908651	0					
ANR	1908878	Identifier	Z_STRVAL_P		1908651	0					
ANR	1908879	ArgumentList	zstype		1908651	1					
ANR	1908880	Argument	zstype		1908651	0					
ANR	1908881	Identifier	zstype		1908651	0					
ANR	1908882	Argument	Z_STRLEN_P ( zstype )		1908651	2					
ANR	1908883	CallExpression	Z_STRLEN_P ( zstype )		1908651	0					
ANR	1908884	Callee	Z_STRLEN_P		1908651	0					
ANR	1908885	Identifier	Z_STRLEN_P		1908651	0					
ANR	1908886	ArgumentList	zstype		1908651	1					
ANR	1908887	Argument	zstype		1908651	0					
ANR	1908888	Identifier	zstype		1908651	0					
ANR	1908889	IfStatement	if ( enc == NULL && SOAP_GLOBAL ( typemap ) )		1908651	1					
ANR	1908890	Condition	enc == NULL && SOAP_GLOBAL ( typemap )	405:7:17805:17839	1908651	0	True				
ANR	1908891	AndExpression	enc == NULL && SOAP_GLOBAL ( typemap )		1908651	0		&&			
ANR	1908892	EqualityExpression	enc == NULL		1908651	0		==			
ANR	1908893	Identifier	enc		1908651	0					
ANR	1908894	Identifier	NULL		1908651	1					
ANR	1908895	CallExpression	SOAP_GLOBAL ( typemap )		1908651	1					
ANR	1908896	Callee	SOAP_GLOBAL		1908651	0					
ANR	1908897	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1908898	ArgumentList	typemap		1908651	1					
ANR	1908899	Argument	typemap		1908651	0					
ANR	1908900	Identifier	typemap		1908651	0					
ANR	1908901	CompoundStatement		28:4:987:1008	1908651	1					
ANR	1908902	IdentifierDeclStatement	smart_str nscat = { 0 } ;	406:4:17848:17869	1908651	0	True				
ANR	1908903	IdentifierDecl	nscat = { 0 }		1908651	0					
ANR	1908904	IdentifierDeclType	smart_str		1908651	0					
ANR	1908905	Identifier	nscat		1908651	1					
ANR	1908906	AssignmentExpression	nscat = { 0 }		1908651	2		=			
ANR	1908907	Identifier	nscat		1908651	0					
ANR	1908908	InitializerList	0		1908651	1					
ANR	1908909	PrimaryExpression	0		1908651	0					
ANR	1908910	IfStatement	if ( zns != NULL )		1908651	1					
ANR	1908911	Condition	zns != NULL	408:8:17880:17890	1908651	0	True				
ANR	1908912	EqualityExpression	zns != NULL		1908651	0		!=			
ANR	1908913	Identifier	zns		1908651	0					
ANR	1908914	Identifier	NULL		1908651	1					
ANR	1908915	CompoundStatement		30:21:1032:1032	1908651	1					
ANR	1908916	ExpressionStatement	"smart_str_appendl ( & nscat , Z_STRVAL_P ( zns ) , Z_STRLEN_P ( zns ) )"	409:5:17900:17959	1908651	0	True				
ANR	1908917	CallExpression	"smart_str_appendl ( & nscat , Z_STRVAL_P ( zns ) , Z_STRLEN_P ( zns ) )"		1908651	0					
ANR	1908918	Callee	smart_str_appendl		1908651	0					
ANR	1908919	Identifier	smart_str_appendl		1908651	0					
ANR	1908920	ArgumentList	& nscat		1908651	1					
ANR	1908921	Argument	& nscat		1908651	0					
ANR	1908922	UnaryOperationExpression	& nscat		1908651	0					
ANR	1908923	UnaryOperator	&		1908651	0					
ANR	1908924	Identifier	nscat		1908651	1					
ANR	1908925	Argument	Z_STRVAL_P ( zns )		1908651	1					
ANR	1908926	CallExpression	Z_STRVAL_P ( zns )		1908651	0					
ANR	1908927	Callee	Z_STRVAL_P		1908651	0					
ANR	1908928	Identifier	Z_STRVAL_P		1908651	0					
ANR	1908929	ArgumentList	zns		1908651	1					
ANR	1908930	Argument	zns		1908651	0					
ANR	1908931	Identifier	zns		1908651	0					
ANR	1908932	Argument	Z_STRLEN_P ( zns )		1908651	2					
ANR	1908933	CallExpression	Z_STRLEN_P ( zns )		1908651	0					
ANR	1908934	Callee	Z_STRLEN_P		1908651	0					
ANR	1908935	Identifier	Z_STRLEN_P		1908651	0					
ANR	1908936	ArgumentList	zns		1908651	1					
ANR	1908937	Argument	zns		1908651	0					
ANR	1908938	Identifier	zns		1908651	0					
ANR	1908939	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	410:5:17966:17996	1908651	1	True				
ANR	1908940	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1908651	0					
ANR	1908941	Callee	smart_str_appendc		1908651	0					
ANR	1908942	Identifier	smart_str_appendc		1908651	0					
ANR	1908943	ArgumentList	& nscat		1908651	1					
ANR	1908944	Argument	& nscat		1908651	0					
ANR	1908945	UnaryOperationExpression	& nscat		1908651	0					
ANR	1908946	UnaryOperator	&		1908651	0					
ANR	1908947	Identifier	nscat		1908651	1					
ANR	1908948	Argument	':'		1908651	1					
ANR	1908949	PrimaryExpression	':'		1908651	0					
ANR	1908950	ExpressionStatement	"smart_str_appendl ( & nscat , Z_STRVAL_P ( zstype ) , Z_STRLEN_P ( zstype ) )"	412:4:18008:18073	1908651	2	True				
ANR	1908951	CallExpression	"smart_str_appendl ( & nscat , Z_STRVAL_P ( zstype ) , Z_STRLEN_P ( zstype ) )"		1908651	0					
ANR	1908952	Callee	smart_str_appendl		1908651	0					
ANR	1908953	Identifier	smart_str_appendl		1908651	0					
ANR	1908954	ArgumentList	& nscat		1908651	1					
ANR	1908955	Argument	& nscat		1908651	0					
ANR	1908956	UnaryOperationExpression	& nscat		1908651	0					
ANR	1908957	UnaryOperator	&		1908651	0					
ANR	1908958	Identifier	nscat		1908651	1					
ANR	1908959	Argument	Z_STRVAL_P ( zstype )		1908651	1					
ANR	1908960	CallExpression	Z_STRVAL_P ( zstype )		1908651	0					
ANR	1908961	Callee	Z_STRVAL_P		1908651	0					
ANR	1908962	Identifier	Z_STRVAL_P		1908651	0					
ANR	1908963	ArgumentList	zstype		1908651	1					
ANR	1908964	Argument	zstype		1908651	0					
ANR	1908965	Identifier	zstype		1908651	0					
ANR	1908966	Argument	Z_STRLEN_P ( zstype )		1908651	2					
ANR	1908967	CallExpression	Z_STRLEN_P ( zstype )		1908651	0					
ANR	1908968	Callee	Z_STRLEN_P		1908651	0					
ANR	1908969	Identifier	Z_STRLEN_P		1908651	0					
ANR	1908970	ArgumentList	zstype		1908651	1					
ANR	1908971	Argument	zstype		1908651	0					
ANR	1908972	Identifier	zstype		1908651	0					
ANR	1908973	ExpressionStatement	smart_str_0 ( & nscat )	413:4:18079:18098	1908651	3	True				
ANR	1908974	CallExpression	smart_str_0 ( & nscat )		1908651	0					
ANR	1908975	Callee	smart_str_0		1908651	0					
ANR	1908976	Identifier	smart_str_0		1908651	0					
ANR	1908977	ArgumentList	& nscat		1908651	1					
ANR	1908978	Argument	& nscat		1908651	0					
ANR	1908979	UnaryOperationExpression	& nscat		1908651	0					
ANR	1908980	UnaryOperator	&		1908651	0					
ANR	1908981	Identifier	nscat		1908651	1					
ANR	1908982	ExpressionStatement	"enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"	414:4:18104:18159	1908651	4	True				
ANR	1908983	AssignmentExpression	"enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1908651	0		=			
ANR	1908984	Identifier	enc		1908651	0					
ANR	1908985	CallExpression	"zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1908651	1					
ANR	1908986	Callee	zend_hash_find_ptr		1908651	0					
ANR	1908987	Identifier	zend_hash_find_ptr		1908651	0					
ANR	1908988	ArgumentList	SOAP_GLOBAL ( typemap )		1908651	1					
ANR	1908989	Argument	SOAP_GLOBAL ( typemap )		1908651	0					
ANR	1908990	CallExpression	SOAP_GLOBAL ( typemap )		1908651	0					
ANR	1908991	Callee	SOAP_GLOBAL		1908651	0					
ANR	1908992	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1908993	ArgumentList	typemap		1908651	1					
ANR	1908994	Argument	typemap		1908651	0					
ANR	1908995	Identifier	typemap		1908651	0					
ANR	1908996	Argument	nscat . s		1908651	1					
ANR	1908997	MemberAccess	nscat . s		1908651	0					
ANR	1908998	Identifier	nscat		1908651	0					
ANR	1908999	Identifier	s		1908651	1					
ANR	1909000	ExpressionStatement	smart_str_free ( & nscat )	415:4:18165:18187	1908651	5	True				
ANR	1909001	CallExpression	smart_str_free ( & nscat )		1908651	0					
ANR	1909002	Callee	smart_str_free		1908651	0					
ANR	1909003	Identifier	smart_str_free		1908651	0					
ANR	1909004	ArgumentList	& nscat		1908651	1					
ANR	1909005	Argument	& nscat		1908651	0					
ANR	1909006	UnaryOperationExpression	& nscat		1908651	0					
ANR	1909007	UnaryOperator	&		1908651	0					
ANR	1909008	Identifier	nscat		1908651	1					
ANR	1909009	IfStatement	if ( enc == NULL )		1908651	5					
ANR	1909010	Condition	enc == NULL	418:6:18204:18214	1908651	0	True				
ANR	1909011	EqualityExpression	enc == NULL		1908651	0		==			
ANR	1909012	Identifier	enc		1908651	0					
ANR	1909013	Identifier	NULL		1908651	1					
ANR	1909014	CompoundStatement		40:19:1356:1356	1908651	1					
ANR	1909015	ExpressionStatement	enc = get_conversion ( Z_LVAL_P ( ztype ) )	419:3:18222:18259	1908651	0	True				
ANR	1909016	AssignmentExpression	enc = get_conversion ( Z_LVAL_P ( ztype ) )		1908651	0		=			
ANR	1909017	Identifier	enc		1908651	0					
ANR	1909018	CallExpression	get_conversion ( Z_LVAL_P ( ztype ) )		1908651	1					
ANR	1909019	Callee	get_conversion		1908651	0					
ANR	1909020	Identifier	get_conversion		1908651	0					
ANR	1909021	ArgumentList	Z_LVAL_P ( ztype )		1908651	1					
ANR	1909022	Argument	Z_LVAL_P ( ztype )		1908651	0					
ANR	1909023	CallExpression	Z_LVAL_P ( ztype )		1908651	0					
ANR	1909024	Callee	Z_LVAL_P		1908651	0					
ANR	1909025	Identifier	Z_LVAL_P		1908651	0					
ANR	1909026	ArgumentList	ztype		1908651	1					
ANR	1909027	Argument	ztype		1908651	0					
ANR	1909028	Identifier	ztype		1908651	0					
ANR	1909029	IfStatement	if ( enc == NULL )		1908651	6					
ANR	1909030	Condition	enc == NULL	421:6:18271:18281	1908651	0	True				
ANR	1909031	EqualityExpression	enc == NULL		1908651	0		==			
ANR	1909032	Identifier	enc		1908651	0					
ANR	1909033	Identifier	NULL		1908651	1					
ANR	1909034	CompoundStatement		43:19:1423:1423	1908651	1					
ANR	1909035	ExpressionStatement	enc = encode	422:3:18289:18301	1908651	0	True				
ANR	1909036	AssignmentExpression	enc = encode		1908651	0		=			
ANR	1909037	Identifier	enc		1908651	0					
ANR	1909038	Identifier	encode		1908651	1					
ANR	1909039	ExpressionStatement	"zdata = zend_hash_str_find ( ht , ""enc_value"" , sizeof ( ""enc_value"" ) - 1 )"	425:2:18310:18376	1908651	7	True				
ANR	1909040	AssignmentExpression	"zdata = zend_hash_str_find ( ht , ""enc_value"" , sizeof ( ""enc_value"" ) - 1 )"		1908651	0		=			
ANR	1909041	Identifier	zdata		1908651	0					
ANR	1909042	CallExpression	"zend_hash_str_find ( ht , ""enc_value"" , sizeof ( ""enc_value"" ) - 1 )"		1908651	1					
ANR	1909043	Callee	zend_hash_str_find		1908651	0					
ANR	1909044	Identifier	zend_hash_str_find		1908651	0					
ANR	1909045	ArgumentList	ht		1908651	1					
ANR	1909046	Argument	ht		1908651	0					
ANR	1909047	Identifier	ht		1908651	0					
ANR	1909048	Argument	"""enc_value"""		1908651	1					
ANR	1909049	PrimaryExpression	"""enc_value"""		1908651	0					
ANR	1909050	Argument	"sizeof ( ""enc_value"" ) - 1"		1908651	2					
ANR	1909051	AdditiveExpression	"sizeof ( ""enc_value"" ) - 1"		1908651	0		-			
ANR	1909052	SizeofExpression	"sizeof ( ""enc_value"" )"		1908651	0					
ANR	1909053	Sizeof	sizeof		1908651	0					
ANR	1909054	PrimaryExpression	"""enc_value"""		1908651	1					
ANR	1909055	PrimaryExpression	1		1908651	1					
ANR	1909056	ExpressionStatement	"node = master_to_xml ( enc , zdata , style , parent )"	426:2:18380:18427	1908651	8	True				
ANR	1909057	AssignmentExpression	"node = master_to_xml ( enc , zdata , style , parent )"		1908651	0		=			
ANR	1909058	Identifier	node		1908651	0					
ANR	1909059	CallExpression	"master_to_xml ( enc , zdata , style , parent )"		1908651	1					
ANR	1909060	Callee	master_to_xml		1908651	0					
ANR	1909061	Identifier	master_to_xml		1908651	0					
ANR	1909062	ArgumentList	enc		1908651	1					
ANR	1909063	Argument	enc		1908651	0					
ANR	1909064	Identifier	enc		1908651	0					
ANR	1909065	Argument	zdata		1908651	1					
ANR	1909066	Identifier	zdata		1908651	0					
ANR	1909067	Argument	style		1908651	2					
ANR	1909068	Identifier	style		1908651	0					
ANR	1909069	Argument	parent		1908651	3					
ANR	1909070	Identifier	parent		1908651	0					
ANR	1909071	IfStatement	if ( style == SOAP_ENCODED || ( SOAP_GLOBAL ( sdl ) && encode != enc ) )		1908651	9					
ANR	1909072	Condition	style == SOAP_ENCODED || ( SOAP_GLOBAL ( sdl ) && encode != enc )	428:6:18436:18495	1908651	0	True				
ANR	1909073	OrExpression	style == SOAP_ENCODED || ( SOAP_GLOBAL ( sdl ) && encode != enc )		1908651	0		||			
ANR	1909074	EqualityExpression	style == SOAP_ENCODED		1908651	0		==			
ANR	1909075	Identifier	style		1908651	0					
ANR	1909076	Identifier	SOAP_ENCODED		1908651	1					
ANR	1909077	AndExpression	SOAP_GLOBAL ( sdl ) && encode != enc		1908651	1		&&			
ANR	1909078	CallExpression	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1909079	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909080	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909081	ArgumentList	sdl		1908651	1					
ANR	1909082	Argument	sdl		1908651	0					
ANR	1909083	Identifier	sdl		1908651	0					
ANR	1909084	EqualityExpression	encode != enc		1908651	1		!=			
ANR	1909085	Identifier	encode		1908651	0					
ANR	1909086	Identifier	enc		1908651	1					
ANR	1909087	CompoundStatement		50:68:1637:1637	1908651	1					
ANR	1909088	IfStatement	"if ( ( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstype ) == IS_STRING )"		1908651	0					
ANR	1909089	Condition	"( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstype ) == IS_STRING"	429:7:18507:18623	1908651	0	True				
ANR	1909090	AndExpression	"( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstype ) == IS_STRING"		1908651	0		&&			
ANR	1909091	EqualityExpression	"( zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL"		1908651	0		!=			
ANR	1909092	AssignmentExpression	"zstype = zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 )"		1908651	0		=			
ANR	1909093	Identifier	zstype		1908651	0					
ANR	1909094	CallExpression	"zend_hash_str_find ( ht , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 )"		1908651	1					
ANR	1909095	Callee	zend_hash_str_find		1908651	0					
ANR	1909096	Identifier	zend_hash_str_find		1908651	0					
ANR	1909097	ArgumentList	ht		1908651	1					
ANR	1909098	Argument	ht		1908651	0					
ANR	1909099	Identifier	ht		1908651	0					
ANR	1909100	Argument	"""enc_stype"""		1908651	1					
ANR	1909101	PrimaryExpression	"""enc_stype"""		1908651	0					
ANR	1909102	Argument	"sizeof ( ""enc_stype"" ) - 1"		1908651	2					
ANR	1909103	AdditiveExpression	"sizeof ( ""enc_stype"" ) - 1"		1908651	0		-			
ANR	1909104	SizeofExpression	"sizeof ( ""enc_stype"" )"		1908651	0					
ANR	1909105	Sizeof	sizeof		1908651	0					
ANR	1909106	PrimaryExpression	"""enc_stype"""		1908651	1					
ANR	1909107	PrimaryExpression	1		1908651	1					
ANR	1909108	Identifier	NULL		1908651	1					
ANR	1909109	EqualityExpression	Z_TYPE_P ( zstype ) == IS_STRING		1908651	1		==			
ANR	1909110	CallExpression	Z_TYPE_P ( zstype )		1908651	0					
ANR	1909111	Callee	Z_TYPE_P		1908651	0					
ANR	1909112	Identifier	Z_TYPE_P		1908651	0					
ANR	1909113	ArgumentList	zstype		1908651	1					
ANR	1909114	Argument	zstype		1908651	0					
ANR	1909115	Identifier	zstype		1908651	0					
ANR	1909116	Identifier	IS_STRING		1908651	1					
ANR	1909117	CompoundStatement		52:38:1765:1765	1908651	1					
ANR	1909118	IfStatement	"if ( ( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( zns ) == IS_STRING )"		1908651	0					
ANR	1909119	Condition	"( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( zns ) == IS_STRING"	431:8:18636:18741	1908651	0	True				
ANR	1909120	AndExpression	"( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( zns ) == IS_STRING"		1908651	0		&&			
ANR	1909121	EqualityExpression	"( zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL"		1908651	0		!=			
ANR	1909122	AssignmentExpression	"zns = zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 )"		1908651	0		=			
ANR	1909123	Identifier	zns		1908651	0					
ANR	1909124	CallExpression	"zend_hash_str_find ( ht , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 )"		1908651	1					
ANR	1909125	Callee	zend_hash_str_find		1908651	0					
ANR	1909126	Identifier	zend_hash_str_find		1908651	0					
ANR	1909127	ArgumentList	ht		1908651	1					
ANR	1909128	Argument	ht		1908651	0					
ANR	1909129	Identifier	ht		1908651	0					
ANR	1909130	Argument	"""enc_ns"""		1908651	1					
ANR	1909131	PrimaryExpression	"""enc_ns"""		1908651	0					
ANR	1909132	Argument	"sizeof ( ""enc_ns"" ) - 1"		1908651	2					
ANR	1909133	AdditiveExpression	"sizeof ( ""enc_ns"" ) - 1"		1908651	0		-			
ANR	1909134	SizeofExpression	"sizeof ( ""enc_ns"" )"		1908651	0					
ANR	1909135	Sizeof	sizeof		1908651	0					
ANR	1909136	PrimaryExpression	"""enc_ns"""		1908651	1					
ANR	1909137	PrimaryExpression	1		1908651	1					
ANR	1909138	Identifier	NULL		1908651	1					
ANR	1909139	EqualityExpression	Z_TYPE_P ( zns ) == IS_STRING		1908651	1		==			
ANR	1909140	CallExpression	Z_TYPE_P ( zns )		1908651	0					
ANR	1909141	Callee	Z_TYPE_P		1908651	0					
ANR	1909142	Identifier	Z_TYPE_P		1908651	0					
ANR	1909143	ArgumentList	zns		1908651	1					
ANR	1909144	Argument	zns		1908651	0					
ANR	1909145	Identifier	zns		1908651	0					
ANR	1909146	Identifier	IS_STRING		1908651	1					
ANR	1909147	CompoundStatement		54:36:1883:1883	1908651	1					
ANR	1909148	ExpressionStatement	"set_ns_and_type_ex ( node , Z_STRVAL_P ( zns ) , Z_STRVAL_P ( zstype ) )"	433:5:18751:18812	1908651	0	True				
ANR	1909149	CallExpression	"set_ns_and_type_ex ( node , Z_STRVAL_P ( zns ) , Z_STRVAL_P ( zstype ) )"		1908651	0					
ANR	1909150	Callee	set_ns_and_type_ex		1908651	0					
ANR	1909151	Identifier	set_ns_and_type_ex		1908651	0					
ANR	1909152	ArgumentList	node		1908651	1					
ANR	1909153	Argument	node		1908651	0					
ANR	1909154	Identifier	node		1908651	0					
ANR	1909155	Argument	Z_STRVAL_P ( zns )		1908651	1					
ANR	1909156	CallExpression	Z_STRVAL_P ( zns )		1908651	0					
ANR	1909157	Callee	Z_STRVAL_P		1908651	0					
ANR	1909158	Identifier	Z_STRVAL_P		1908651	0					
ANR	1909159	ArgumentList	zns		1908651	1					
ANR	1909160	Argument	zns		1908651	0					
ANR	1909161	Identifier	zns		1908651	0					
ANR	1909162	Argument	Z_STRVAL_P ( zstype )		1908651	2					
ANR	1909163	CallExpression	Z_STRVAL_P ( zstype )		1908651	0					
ANR	1909164	Callee	Z_STRVAL_P		1908651	0					
ANR	1909165	Identifier	Z_STRVAL_P		1908651	0					
ANR	1909166	ArgumentList	zstype		1908651	1					
ANR	1909167	Argument	zstype		1908651	0					
ANR	1909168	Identifier	zstype		1908651	0					
ANR	1909169	ElseStatement	else		1908651	0					
ANR	1909170	CompoundStatement		56:11:1964:1964	1908651	0					
ANR	1909171	ExpressionStatement	"set_ns_and_type_ex ( node , NULL , Z_STRVAL_P ( zstype ) )"	435:5:18832:18882	1908651	0	True				
ANR	1909172	CallExpression	"set_ns_and_type_ex ( node , NULL , Z_STRVAL_P ( zstype ) )"		1908651	0					
ANR	1909173	Callee	set_ns_and_type_ex		1908651	0					
ANR	1909174	Identifier	set_ns_and_type_ex		1908651	0					
ANR	1909175	ArgumentList	node		1908651	1					
ANR	1909176	Argument	node		1908651	0					
ANR	1909177	Identifier	node		1908651	0					
ANR	1909178	Argument	NULL		1908651	1					
ANR	1909179	Identifier	NULL		1908651	0					
ANR	1909180	Argument	Z_STRVAL_P ( zstype )		1908651	2					
ANR	1909181	CallExpression	Z_STRVAL_P ( zstype )		1908651	0					
ANR	1909182	Callee	Z_STRVAL_P		1908651	0					
ANR	1909183	Identifier	Z_STRVAL_P		1908651	0					
ANR	1909184	ArgumentList	zstype		1908651	1					
ANR	1909185	Argument	zstype		1908651	0					
ANR	1909186	Identifier	zstype		1908651	0					
ANR	1909187	IfStatement	"if ( ( zname = zend_hash_str_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( zname ) == IS_STRING )"		1908651	10					
ANR	1909188	Condition	"( zname = zend_hash_str_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( zname ) == IS_STRING"	440:6:18906:19017	1908651	0	True				
ANR	1909189	AndExpression	"( zname = zend_hash_str_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( zname ) == IS_STRING"		1908651	0		&&			
ANR	1909190	EqualityExpression	"( zname = zend_hash_str_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) - 1 ) ) != NULL"		1908651	0		!=			
ANR	1909191	AssignmentExpression	"zname = zend_hash_str_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) - 1 )"		1908651	0		=			
ANR	1909192	Identifier	zname		1908651	0					
ANR	1909193	CallExpression	"zend_hash_str_find ( ht , ""enc_name"" , sizeof ( ""enc_name"" ) - 1 )"		1908651	1					
ANR	1909194	Callee	zend_hash_str_find		1908651	0					
ANR	1909195	Identifier	zend_hash_str_find		1908651	0					
ANR	1909196	ArgumentList	ht		1908651	1					
ANR	1909197	Argument	ht		1908651	0					
ANR	1909198	Identifier	ht		1908651	0					
ANR	1909199	Argument	"""enc_name"""		1908651	1					
ANR	1909200	PrimaryExpression	"""enc_name"""		1908651	0					
ANR	1909201	Argument	"sizeof ( ""enc_name"" ) - 1"		1908651	2					
ANR	1909202	AdditiveExpression	"sizeof ( ""enc_name"" ) - 1"		1908651	0		-			
ANR	1909203	SizeofExpression	"sizeof ( ""enc_name"" )"		1908651	0					
ANR	1909204	Sizeof	sizeof		1908651	0					
ANR	1909205	PrimaryExpression	"""enc_name"""		1908651	1					
ANR	1909206	PrimaryExpression	1		1908651	1					
ANR	1909207	Identifier	NULL		1908651	1					
ANR	1909208	EqualityExpression	Z_TYPE_P ( zname ) == IS_STRING		1908651	1		==			
ANR	1909209	CallExpression	Z_TYPE_P ( zname )		1908651	0					
ANR	1909210	Callee	Z_TYPE_P		1908651	0					
ANR	1909211	Identifier	Z_TYPE_P		1908651	0					
ANR	1909212	ArgumentList	zname		1908651	1					
ANR	1909213	Argument	zname		1908651	0					
ANR	1909214	Identifier	zname		1908651	0					
ANR	1909215	Identifier	IS_STRING		1908651	1					
ANR	1909216	CompoundStatement		63:36:2159:2159	1908651	1					
ANR	1909217	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( Z_STRVAL_P ( zname ) ) )"	442:3:19025:19074	1908651	0	True				
ANR	1909218	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( Z_STRVAL_P ( zname ) ) )"		1908651	0					
ANR	1909219	Callee	xmlNodeSetName		1908651	0					
ANR	1909220	Identifier	xmlNodeSetName		1908651	0					
ANR	1909221	ArgumentList	node		1908651	1					
ANR	1909222	Argument	node		1908651	0					
ANR	1909223	Identifier	node		1908651	0					
ANR	1909224	Argument	BAD_CAST ( Z_STRVAL_P ( zname ) )		1908651	1					
ANR	1909225	CallExpression	BAD_CAST ( Z_STRVAL_P ( zname ) )		1908651	0					
ANR	1909226	Callee	BAD_CAST		1908651	0					
ANR	1909227	Identifier	BAD_CAST		1908651	0					
ANR	1909228	ArgumentList	Z_STRVAL_P ( zname )		1908651	1					
ANR	1909229	Argument	Z_STRVAL_P ( zname )		1908651	0					
ANR	1909230	CallExpression	Z_STRVAL_P ( zname )		1908651	0					
ANR	1909231	Callee	Z_STRVAL_P		1908651	0					
ANR	1909232	Identifier	Z_STRVAL_P		1908651	0					
ANR	1909233	ArgumentList	zname		1908651	1					
ANR	1909234	Argument	zname		1908651	0					
ANR	1909235	Identifier	zname		1908651	0					
ANR	1909236	IfStatement	"if ( ( znamens = zend_hash_str_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) - 1 ) ) != NULL && Z_TYPE_P ( znamens ) == IS_STRING )"		1908651	11					
ANR	1909237	Condition	"( znamens = zend_hash_str_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) - 1 ) ) != NULL && Z_TYPE_P ( znamens ) == IS_STRING"	444:6:19086:19205	1908651	0	True				
ANR	1909238	AndExpression	"( znamens = zend_hash_str_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) - 1 ) ) != NULL && Z_TYPE_P ( znamens ) == IS_STRING"		1908651	0		&&			
ANR	1909239	EqualityExpression	"( znamens = zend_hash_str_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) - 1 ) ) != NULL"		1908651	0		!=			
ANR	1909240	AssignmentExpression	"znamens = zend_hash_str_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) - 1 )"		1908651	0		=			
ANR	1909241	Identifier	znamens		1908651	0					
ANR	1909242	CallExpression	"zend_hash_str_find ( ht , ""enc_namens"" , sizeof ( ""enc_namens"" ) - 1 )"		1908651	1					
ANR	1909243	Callee	zend_hash_str_find		1908651	0					
ANR	1909244	Identifier	zend_hash_str_find		1908651	0					
ANR	1909245	ArgumentList	ht		1908651	1					
ANR	1909246	Argument	ht		1908651	0					
ANR	1909247	Identifier	ht		1908651	0					
ANR	1909248	Argument	"""enc_namens"""		1908651	1					
ANR	1909249	PrimaryExpression	"""enc_namens"""		1908651	0					
ANR	1909250	Argument	"sizeof ( ""enc_namens"" ) - 1"		1908651	2					
ANR	1909251	AdditiveExpression	"sizeof ( ""enc_namens"" ) - 1"		1908651	0		-			
ANR	1909252	SizeofExpression	"sizeof ( ""enc_namens"" )"		1908651	0					
ANR	1909253	Sizeof	sizeof		1908651	0					
ANR	1909254	PrimaryExpression	"""enc_namens"""		1908651	1					
ANR	1909255	PrimaryExpression	1		1908651	1					
ANR	1909256	Identifier	NULL		1908651	1					
ANR	1909257	EqualityExpression	Z_TYPE_P ( znamens ) == IS_STRING		1908651	1		==			
ANR	1909258	CallExpression	Z_TYPE_P ( znamens )		1908651	0					
ANR	1909259	Callee	Z_TYPE_P		1908651	0					
ANR	1909260	Identifier	Z_TYPE_P		1908651	0					
ANR	1909261	ArgumentList	znamens		1908651	1					
ANR	1909262	Argument	znamens		1908651	0					
ANR	1909263	Identifier	znamens		1908651	0					
ANR	1909264	Identifier	IS_STRING		1908651	1					
ANR	1909265	CompoundStatement		68:3:2352:2407	1908651	1					
ANR	1909266	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( node , Z_STRVAL_P ( znamens ) ) ;"	446:3:19213:19268	1908651	0	True				
ANR	1909267	IdentifierDecl	"nsp = encode_add_ns ( node , Z_STRVAL_P ( znamens ) )"		1908651	0					
ANR	1909268	IdentifierDeclType	xmlNsPtr		1908651	0					
ANR	1909269	Identifier	nsp		1908651	1					
ANR	1909270	AssignmentExpression	"nsp = encode_add_ns ( node , Z_STRVAL_P ( znamens ) )"		1908651	2		=			
ANR	1909271	Identifier	nsp		1908651	0					
ANR	1909272	CallExpression	"encode_add_ns ( node , Z_STRVAL_P ( znamens ) )"		1908651	1					
ANR	1909273	Callee	encode_add_ns		1908651	0					
ANR	1909274	Identifier	encode_add_ns		1908651	0					
ANR	1909275	ArgumentList	node		1908651	1					
ANR	1909276	Argument	node		1908651	0					
ANR	1909277	Identifier	node		1908651	0					
ANR	1909278	Argument	Z_STRVAL_P ( znamens )		1908651	1					
ANR	1909279	CallExpression	Z_STRVAL_P ( znamens )		1908651	0					
ANR	1909280	Callee	Z_STRVAL_P		1908651	0					
ANR	1909281	Identifier	Z_STRVAL_P		1908651	0					
ANR	1909282	ArgumentList	znamens		1908651	1					
ANR	1909283	Argument	znamens		1908651	0					
ANR	1909284	Identifier	znamens		1908651	0					
ANR	1909285	ExpressionStatement	"xmlSetNs ( node , nsp )"	447:3:19273:19292	1908651	1	True				
ANR	1909286	CallExpression	"xmlSetNs ( node , nsp )"		1908651	0					
ANR	1909287	Callee	xmlSetNs		1908651	0					
ANR	1909288	Identifier	xmlSetNs		1908651	0					
ANR	1909289	ArgumentList	node		1908651	1					
ANR	1909290	Argument	node		1908651	0					
ANR	1909291	Identifier	node		1908651	0					
ANR	1909292	Argument	nsp		1908651	1					
ANR	1909293	Identifier	nsp		1908651	0					
ANR	1909294	ElseStatement	else		1908651	0					
ANR	1909295	CompoundStatement		71:8:2445:2445	1908651	0					
ANR	1909296	IfStatement	if ( check_class_map && SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) ) )		1908651	0					
ANR	1909297	Condition	check_class_map && SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) )	450:6:19314:19454	1908651	0	True				
ANR	1909298	AndExpression	check_class_map && SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) )		1908651	0		&&			
ANR	1909299	Identifier	check_class_map		1908651	0					
ANR	1909300	AndExpression	SOAP_GLOBAL ( class_map ) && data && Z_TYPE_P ( data ) == IS_OBJECT && ! ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) )		1908651	1		&&			
ANR	1909301	CallExpression	SOAP_GLOBAL ( class_map )		1908651	0					
ANR	1909302	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909303	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909304	ArgumentList	class_map		1908651	1					
ANR	1909305	Argument	class_map		1908651	0					
ANR	1909306	Identifier	class_map		1908651	0					
ANR	1909307	AndExpression	data && Z_TYPE_P ( data ) == IS_OBJECT && ! ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) )		1908651	1		&&			
ANR	1909308	Identifier	data		1908651	0					
ANR	1909309	AndExpression	Z_TYPE_P ( data ) == IS_OBJECT && ! ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) )		1908651	1		&&			
ANR	1909310	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1908651	0		==			
ANR	1909311	CallExpression	Z_TYPE_P ( data )		1908651	0					
ANR	1909312	Callee	Z_TYPE_P		1908651	0					
ANR	1909313	Identifier	Z_TYPE_P		1908651	0					
ANR	1909314	ArgumentList	data		1908651	1					
ANR	1909315	Argument	data		1908651	0					
ANR	1909316	Identifier	data		1908651	0					
ANR	1909317	Identifier	IS_OBJECT		1908651	1					
ANR	1909318	UnaryOperationExpression	! ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) )		1908651	1					
ANR	1909319	UnaryOperator	!		1908651	0					
ANR	1909320	CallExpression	ZEND_HASH_GET_APPLY_COUNT ( Z_OBJPROP_P ( data ) )		1908651	1					
ANR	1909321	Callee	ZEND_HASH_GET_APPLY_COUNT		1908651	0					
ANR	1909322	Identifier	ZEND_HASH_GET_APPLY_COUNT		1908651	0					
ANR	1909323	ArgumentList	Z_OBJPROP_P ( data )		1908651	1					
ANR	1909324	Argument	Z_OBJPROP_P ( data )		1908651	0					
ANR	1909325	CallExpression	Z_OBJPROP_P ( data )		1908651	0					
ANR	1909326	Callee	Z_OBJPROP_P		1908651	0					
ANR	1909327	Identifier	Z_OBJPROP_P		1908651	0					
ANR	1909328	ArgumentList	data		1908651	1					
ANR	1909329	Argument	data		1908651	0					
ANR	1909330	Identifier	data		1908651	0					
ANR	1909331	CompoundStatement		77:3:2658:2680	1908651	1					
ANR	1909332	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( data ) ;	453:3:19462:19500	1908651	0	True				
ANR	1909333	IdentifierDecl	* ce = Z_OBJCE_P ( data )		1908651	0					
ANR	1909334	IdentifierDeclType	zend_class_entry *		1908651	0					
ANR	1909335	Identifier	ce		1908651	1					
ANR	1909336	AssignmentExpression	* ce = Z_OBJCE_P ( data )		1908651	2		=			
ANR	1909337	Identifier	ce		1908651	0					
ANR	1909338	CallExpression	Z_OBJCE_P ( data )		1908651	1					
ANR	1909339	Callee	Z_OBJCE_P		1908651	0					
ANR	1909340	Identifier	Z_OBJCE_P		1908651	0					
ANR	1909341	ArgumentList	data		1908651	1					
ANR	1909342	Argument	data		1908651	0					
ANR	1909343	Identifier	data		1908651	0					
ANR	1909344	IdentifierDeclStatement	zval * tmp ;	454:3:19505:19514	1908651	1	True				
ANR	1909345	IdentifierDecl	* tmp		1908651	0					
ANR	1909346	IdentifierDeclType	zval *		1908651	0					
ANR	1909347	Identifier	tmp		1908651	1					
ANR	1909348	IdentifierDeclStatement	zend_string * type_name ;	455:3:19519:19541	1908651	2	True				
ANR	1909349	IdentifierDecl	* type_name		1908651	0					
ANR	1909350	IdentifierDeclType	zend_string *		1908651	0					
ANR	1909351	Identifier	type_name		1908651	1					
ANR	1909352	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	457:3:19547:19575	1908651	3	True				
ANR	1909353	Statement	(	457:32:19576:19576	1908651	4	True				
ANR	1909354	Statement	SOAP_GLOBAL	457:33:19577:19587	1908651	5	True				
ANR	1909355	Statement	(	457:44:19588:19588	1908651	6	True				
ANR	1909356	Statement	class_map	457:45:19589:19597	1908651	7	True				
ANR	1909357	Statement	)	457:54:19598:19598	1908651	8	True				
ANR	1909358	Statement	","	457:55:19599:19599	1908651	9	True				
ANR	1909359	Statement	type_name	457:57:19601:19609	1908651	10	True				
ANR	1909360	Statement	","	457:66:19610:19610	1908651	11	True				
ANR	1909361	Statement	tmp	457:68:19612:19614	1908651	12	True				
ANR	1909362	Statement	)	457:71:19615:19615	1908651	13	True				
ANR	1909363	CompoundStatement		79:73:2756:2756	1908651	14					
ANR	1909364	IfStatement	"if ( Z_TYPE_P ( tmp ) == IS_STRING && ZSTR_LEN ( ce -> name ) == Z_STRLEN_P ( tmp ) && zend_binary_strncasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , Z_STRVAL_P ( tmp ) , ZSTR_LEN ( ce -> name ) , ZSTR_LEN ( ce -> name ) ) == 0 && type_name )"		1908651	0					
ANR	1909365	Condition	"Z_TYPE_P ( tmp ) == IS_STRING && ZSTR_LEN ( ce -> name ) == Z_STRLEN_P ( tmp ) && zend_binary_strncasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , Z_STRVAL_P ( tmp ) , ZSTR_LEN ( ce -> name ) , ZSTR_LEN ( ce -> name ) ) == 0 && type_name"	458:8:19627:19859	1908651	0	True				
ANR	1909366	AndExpression	"Z_TYPE_P ( tmp ) == IS_STRING && ZSTR_LEN ( ce -> name ) == Z_STRLEN_P ( tmp ) && zend_binary_strncasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , Z_STRVAL_P ( tmp ) , ZSTR_LEN ( ce -> name ) , ZSTR_LEN ( ce -> name ) ) == 0 && type_name"		1908651	0		&&			
ANR	1909367	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		1908651	0		==			
ANR	1909368	CallExpression	Z_TYPE_P ( tmp )		1908651	0					
ANR	1909369	Callee	Z_TYPE_P		1908651	0					
ANR	1909370	Identifier	Z_TYPE_P		1908651	0					
ANR	1909371	ArgumentList	tmp		1908651	1					
ANR	1909372	Argument	tmp		1908651	0					
ANR	1909373	Identifier	tmp		1908651	0					
ANR	1909374	Identifier	IS_STRING		1908651	1					
ANR	1909375	AndExpression	"ZSTR_LEN ( ce -> name ) == Z_STRLEN_P ( tmp ) && zend_binary_strncasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , Z_STRVAL_P ( tmp ) , ZSTR_LEN ( ce -> name ) , ZSTR_LEN ( ce -> name ) ) == 0 && type_name"		1908651	1		&&			
ANR	1909376	EqualityExpression	ZSTR_LEN ( ce -> name ) == Z_STRLEN_P ( tmp )		1908651	0		==			
ANR	1909377	CallExpression	ZSTR_LEN ( ce -> name )		1908651	0					
ANR	1909378	Callee	ZSTR_LEN		1908651	0					
ANR	1909379	Identifier	ZSTR_LEN		1908651	0					
ANR	1909380	ArgumentList	ce -> name		1908651	1					
ANR	1909381	Argument	ce -> name		1908651	0					
ANR	1909382	PtrMemberAccess	ce -> name		1908651	0					
ANR	1909383	Identifier	ce		1908651	0					
ANR	1909384	Identifier	name		1908651	1					
ANR	1909385	CallExpression	Z_STRLEN_P ( tmp )		1908651	1					
ANR	1909386	Callee	Z_STRLEN_P		1908651	0					
ANR	1909387	Identifier	Z_STRLEN_P		1908651	0					
ANR	1909388	ArgumentList	tmp		1908651	1					
ANR	1909389	Argument	tmp		1908651	0					
ANR	1909390	Identifier	tmp		1908651	0					
ANR	1909391	AndExpression	"zend_binary_strncasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , Z_STRVAL_P ( tmp ) , ZSTR_LEN ( ce -> name ) , ZSTR_LEN ( ce -> name ) ) == 0 && type_name"		1908651	1		&&			
ANR	1909392	EqualityExpression	"zend_binary_strncasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , Z_STRVAL_P ( tmp ) , ZSTR_LEN ( ce -> name ) , ZSTR_LEN ( ce -> name ) ) == 0"		1908651	0		==			
ANR	1909393	CallExpression	"zend_binary_strncasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , Z_STRVAL_P ( tmp ) , ZSTR_LEN ( ce -> name ) , ZSTR_LEN ( ce -> name ) )"		1908651	0					
ANR	1909394	Callee	zend_binary_strncasecmp		1908651	0					
ANR	1909395	Identifier	zend_binary_strncasecmp		1908651	0					
ANR	1909396	ArgumentList	ZSTR_VAL ( ce -> name )		1908651	1					
ANR	1909397	Argument	ZSTR_VAL ( ce -> name )		1908651	0					
ANR	1909398	CallExpression	ZSTR_VAL ( ce -> name )		1908651	0					
ANR	1909399	Callee	ZSTR_VAL		1908651	0					
ANR	1909400	Identifier	ZSTR_VAL		1908651	0					
ANR	1909401	ArgumentList	ce -> name		1908651	1					
ANR	1909402	Argument	ce -> name		1908651	0					
ANR	1909403	PtrMemberAccess	ce -> name		1908651	0					
ANR	1909404	Identifier	ce		1908651	0					
ANR	1909405	Identifier	name		1908651	1					
ANR	1909406	Argument	ZSTR_LEN ( ce -> name )		1908651	1					
ANR	1909407	CallExpression	ZSTR_LEN ( ce -> name )		1908651	0					
ANR	1909408	Callee	ZSTR_LEN		1908651	0					
ANR	1909409	Identifier	ZSTR_LEN		1908651	0					
ANR	1909410	ArgumentList	ce -> name		1908651	1					
ANR	1909411	Argument	ce -> name		1908651	0					
ANR	1909412	PtrMemberAccess	ce -> name		1908651	0					
ANR	1909413	Identifier	ce		1908651	0					
ANR	1909414	Identifier	name		1908651	1					
ANR	1909415	Argument	Z_STRVAL_P ( tmp )		1908651	2					
ANR	1909416	CallExpression	Z_STRVAL_P ( tmp )		1908651	0					
ANR	1909417	Callee	Z_STRVAL_P		1908651	0					
ANR	1909418	Identifier	Z_STRVAL_P		1908651	0					
ANR	1909419	ArgumentList	tmp		1908651	1					
ANR	1909420	Argument	tmp		1908651	0					
ANR	1909421	Identifier	tmp		1908651	0					
ANR	1909422	Argument	ZSTR_LEN ( ce -> name )		1908651	3					
ANR	1909423	CallExpression	ZSTR_LEN ( ce -> name )		1908651	0					
ANR	1909424	Callee	ZSTR_LEN		1908651	0					
ANR	1909425	Identifier	ZSTR_LEN		1908651	0					
ANR	1909426	ArgumentList	ce -> name		1908651	1					
ANR	1909427	Argument	ce -> name		1908651	0					
ANR	1909428	PtrMemberAccess	ce -> name		1908651	0					
ANR	1909429	Identifier	ce		1908651	0					
ANR	1909430	Identifier	name		1908651	1					
ANR	1909431	Argument	ZSTR_LEN ( ce -> name )		1908651	4					
ANR	1909432	CallExpression	ZSTR_LEN ( ce -> name )		1908651	0					
ANR	1909433	Callee	ZSTR_LEN		1908651	0					
ANR	1909434	Identifier	ZSTR_LEN		1908651	0					
ANR	1909435	ArgumentList	ce -> name		1908651	1					
ANR	1909436	Argument	ce -> name		1908651	0					
ANR	1909437	PtrMemberAccess	ce -> name		1908651	0					
ANR	1909438	Identifier	ce		1908651	0					
ANR	1909439	Identifier	name		1908651	1					
ANR	1909440	PrimaryExpression	0		1908651	1					
ANR	1909441	Identifier	type_name		1908651	1					
ANR	1909442	CompoundStatement		86:5:3049:3069	1908651	1					
ANR	1909443	IdentifierDeclStatement	encodePtr enc = NULL ;	464:5:19910:19930	1908651	0	True				
ANR	1909444	IdentifierDecl	enc = NULL		1908651	0					
ANR	1909445	IdentifierDeclType	encodePtr		1908651	0					
ANR	1909446	Identifier	enc		1908651	1					
ANR	1909447	AssignmentExpression	enc = NULL		1908651	2		=			
ANR	1909448	Identifier	NULL		1908651	0					
ANR	1909449	Identifier	NULL		1908651	1					
ANR	1909450	IfStatement	if ( SOAP_GLOBAL ( sdl ) )		1908651	1					
ANR	1909451	Condition	SOAP_GLOBAL ( sdl )	465:9:19941:19956	1908651	0	True				
ANR	1909452	CallExpression	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1909453	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909454	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909455	ArgumentList	sdl		1908651	1					
ANR	1909456	Argument	sdl		1908651	0					
ANR	1909457	Identifier	sdl		1908651	0					
ANR	1909458	CompoundStatement		87:27:3098:3098	1908651	1					
ANR	1909459	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , SOAP_GLOBAL ( sdl ) -> target_ns , ZSTR_VAL ( type_name ) )"	466:6:19967:20052	1908651	0	True				
ANR	1909460	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , SOAP_GLOBAL ( sdl ) -> target_ns , ZSTR_VAL ( type_name ) )"		1908651	0		=			
ANR	1909461	Identifier	enc		1908651	0					
ANR	1909462	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , SOAP_GLOBAL ( sdl ) -> target_ns , ZSTR_VAL ( type_name ) )"		1908651	1					
ANR	1909463	Callee	get_encoder		1908651	0					
ANR	1909464	Identifier	get_encoder		1908651	0					
ANR	1909465	ArgumentList	SOAP_GLOBAL ( sdl )		1908651	1					
ANR	1909466	Argument	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1909467	CallExpression	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1909468	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909469	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909470	ArgumentList	sdl		1908651	1					
ANR	1909471	Argument	sdl		1908651	0					
ANR	1909472	Identifier	sdl		1908651	0					
ANR	1909473	Argument	SOAP_GLOBAL ( sdl ) -> target_ns		1908651	1					
ANR	1909474	PtrMemberAccess	SOAP_GLOBAL ( sdl ) -> target_ns		1908651	0					
ANR	1909475	CallExpression	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1909476	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909477	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909478	ArgumentList	sdl		1908651	1					
ANR	1909479	Argument	sdl		1908651	0					
ANR	1909480	Identifier	sdl		1908651	0					
ANR	1909481	Identifier	target_ns		1908651	1					
ANR	1909482	Argument	ZSTR_VAL ( type_name )		1908651	2					
ANR	1909483	CallExpression	ZSTR_VAL ( type_name )		1908651	0					
ANR	1909484	Callee	ZSTR_VAL		1908651	0					
ANR	1909485	Identifier	ZSTR_VAL		1908651	0					
ANR	1909486	ArgumentList	type_name		1908651	1					
ANR	1909487	Argument	type_name		1908651	0					
ANR	1909488	Identifier	type_name		1908651	0					
ANR	1909489	IfStatement	if ( ! enc )		1908651	1					
ANR	1909490	Condition	! enc	467:10:20064:20067	1908651	0	True				
ANR	1909491	UnaryOperationExpression	! enc		1908651	0					
ANR	1909492	UnaryOperator	!		1908651	0					
ANR	1909493	Identifier	enc		1908651	1					
ANR	1909494	CompoundStatement		89:16:3209:3209	1908651	1					
ANR	1909495	ExpressionStatement	"enc = find_encoder_by_type_name ( SOAP_GLOBAL ( sdl ) , ZSTR_VAL ( type_name ) )"	468:7:20079:20149	1908651	0	True				
ANR	1909496	AssignmentExpression	"enc = find_encoder_by_type_name ( SOAP_GLOBAL ( sdl ) , ZSTR_VAL ( type_name ) )"		1908651	0		=			
ANR	1909497	Identifier	enc		1908651	0					
ANR	1909498	CallExpression	"find_encoder_by_type_name ( SOAP_GLOBAL ( sdl ) , ZSTR_VAL ( type_name ) )"		1908651	1					
ANR	1909499	Callee	find_encoder_by_type_name		1908651	0					
ANR	1909500	Identifier	find_encoder_by_type_name		1908651	0					
ANR	1909501	ArgumentList	SOAP_GLOBAL ( sdl )		1908651	1					
ANR	1909502	Argument	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1909503	CallExpression	SOAP_GLOBAL ( sdl )		1908651	0					
ANR	1909504	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909505	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909506	ArgumentList	sdl		1908651	1					
ANR	1909507	Argument	sdl		1908651	0					
ANR	1909508	Identifier	sdl		1908651	0					
ANR	1909509	Argument	ZSTR_VAL ( type_name )		1908651	1					
ANR	1909510	CallExpression	ZSTR_VAL ( type_name )		1908651	0					
ANR	1909511	Callee	ZSTR_VAL		1908651	0					
ANR	1909512	Identifier	ZSTR_VAL		1908651	0					
ANR	1909513	ArgumentList	type_name		1908651	1					
ANR	1909514	Argument	type_name		1908651	0					
ANR	1909515	Identifier	type_name		1908651	0					
ANR	1909516	IfStatement	if ( enc )		1908651	2					
ANR	1909517	Condition	enc	471:9:20175:20177	1908651	0	True				
ANR	1909518	Identifier	enc		1908651	0					
ANR	1909519	CompoundStatement		93:14:3319:3319	1908651	1					
ANR	1909520	IfStatement	if ( encode != enc && style == SOAP_LITERAL )		1908651	0					
ANR	1909521	Condition	encode != enc && style == SOAP_LITERAL	472:10:20192:20229	1908651	0	True				
ANR	1909522	AndExpression	encode != enc && style == SOAP_LITERAL		1908651	0		&&			
ANR	1909523	EqualityExpression	encode != enc		1908651	0		!=			
ANR	1909524	Identifier	encode		1908651	0					
ANR	1909525	Identifier	enc		1908651	1					
ANR	1909526	EqualityExpression	style == SOAP_LITERAL		1908651	1		==			
ANR	1909527	Identifier	style		1908651	0					
ANR	1909528	Identifier	SOAP_LITERAL		1908651	1					
ANR	1909529	CompoundStatement		94:50:3371:3371	1908651	1					
ANR	1909530	ExpressionStatement	add_type = 1	473:7:20241:20253	1908651	0	True				
ANR	1909531	AssignmentExpression	add_type = 1		1908651	0		=			
ANR	1909532	Identifier	add_type		1908651	0					
ANR	1909533	PrimaryExpression	1		1908651	1					
ANR	1909534	ExpressionStatement	encode = enc	475:6:20269:20281	1908651	1	True				
ANR	1909535	AssignmentExpression	encode = enc		1908651	0		=			
ANR	1909536	Identifier	encode		1908651	0					
ANR	1909537	Identifier	enc		1908651	1					
ANR	1909538	BreakStatement	break ;	477:5:20295:20300	1908651	3	True				
ANR	1909539	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	479:5:20313:20336	1908651	15	True				
ANR	1909540	CallExpression	ZEND_HASH_FOREACH_END ( )		1908651	0					
ANR	1909541	Callee	ZEND_HASH_FOREACH_END		1908651	0					
ANR	1909542	Identifier	ZEND_HASH_FOREACH_END		1908651	0					
ANR	1909543	ArgumentList			1908651	1					
ANR	1909544	IfStatement	if ( encode == NULL )		1908651	1					
ANR	1909545	Condition	encode == NULL	482:6:20349:20362	1908651	0	True				
ANR	1909546	EqualityExpression	encode == NULL		1908651	0		==			
ANR	1909547	Identifier	encode		1908651	0					
ANR	1909548	Identifier	NULL		1908651	1					
ANR	1909549	CompoundStatement		104:22:3504:3504	1908651	1					
ANR	1909550	ExpressionStatement	encode = get_conversion ( UNKNOWN_TYPE )	483:3:20370:20407	1908651	0	True				
ANR	1909551	AssignmentExpression	encode = get_conversion ( UNKNOWN_TYPE )		1908651	0		=			
ANR	1909552	Identifier	encode		1908651	0					
ANR	1909553	CallExpression	get_conversion ( UNKNOWN_TYPE )		1908651	1					
ANR	1909554	Callee	get_conversion		1908651	0					
ANR	1909555	Identifier	get_conversion		1908651	0					
ANR	1909556	ArgumentList	UNKNOWN_TYPE		1908651	1					
ANR	1909557	Argument	UNKNOWN_TYPE		1908651	0					
ANR	1909558	Identifier	UNKNOWN_TYPE		1908651	0					
ANR	1909559	IfStatement	if ( SOAP_GLOBAL ( typemap ) && encode -> details . type_str )		1908651	2					
ANR	1909560	Condition	SOAP_GLOBAL ( typemap ) && encode -> details . type_str	485:6:20419:20466	1908651	0	True				
ANR	1909561	AndExpression	SOAP_GLOBAL ( typemap ) && encode -> details . type_str		1908651	0		&&			
ANR	1909562	CallExpression	SOAP_GLOBAL ( typemap )		1908651	0					
ANR	1909563	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909564	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909565	ArgumentList	typemap		1908651	1					
ANR	1909566	Argument	typemap		1908651	0					
ANR	1909567	Identifier	typemap		1908651	0					
ANR	1909568	MemberAccess	encode -> details . type_str		1908651	1					
ANR	1909569	PtrMemberAccess	encode -> details		1908651	0					
ANR	1909570	Identifier	encode		1908651	0					
ANR	1909571	Identifier	details		1908651	1					
ANR	1909572	Identifier	type_str		1908651	1					
ANR	1909573	CompoundStatement		109:3:3639:3656	1908651	1					
ANR	1909574	IdentifierDeclStatement	smart_str nscat = { 0 } ;	486:3:20474:20495	1908651	0	True				
ANR	1909575	IdentifierDecl	nscat = { 0 }		1908651	0					
ANR	1909576	IdentifierDeclType	smart_str		1908651	0					
ANR	1909577	Identifier	nscat		1908651	1					
ANR	1909578	AssignmentExpression	nscat = { 0 }		1908651	2		=			
ANR	1909579	Identifier	nscat		1908651	0					
ANR	1909580	InitializerList	0		1908651	1					
ANR	1909581	PrimaryExpression	0		1908651	0					
ANR	1909582	IdentifierDeclStatement	encodePtr new_enc ;	487:3:20500:20517	1908651	1	True				
ANR	1909583	IdentifierDecl	new_enc		1908651	0					
ANR	1909584	IdentifierDeclType	encodePtr		1908651	0					
ANR	1909585	Identifier	new_enc		1908651	1					
ANR	1909586	IfStatement	if ( encode -> details . ns )		1908651	2					
ANR	1909587	Condition	encode -> details . ns	489:7:20527:20544	1908651	0	True				
ANR	1909588	MemberAccess	encode -> details . ns		1908651	0					
ANR	1909589	PtrMemberAccess	encode -> details		1908651	0					
ANR	1909590	Identifier	encode		1908651	0					
ANR	1909591	Identifier	details		1908651	1					
ANR	1909592	Identifier	ns		1908651	1					
ANR	1909593	CompoundStatement		111:27:3686:3686	1908651	1					
ANR	1909594	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . ns )"	490:4:20553:20598	1908651	0	True				
ANR	1909595	CallExpression	"smart_str_appends ( & nscat , encode -> details . ns )"		1908651	0					
ANR	1909596	Callee	smart_str_appends		1908651	0					
ANR	1909597	Identifier	smart_str_appends		1908651	0					
ANR	1909598	ArgumentList	& nscat		1908651	1					
ANR	1909599	Argument	& nscat		1908651	0					
ANR	1909600	UnaryOperationExpression	& nscat		1908651	0					
ANR	1909601	UnaryOperator	&		1908651	0					
ANR	1909602	Identifier	nscat		1908651	1					
ANR	1909603	Argument	encode -> details . ns		1908651	1					
ANR	1909604	MemberAccess	encode -> details . ns		1908651	0					
ANR	1909605	PtrMemberAccess	encode -> details		1908651	0					
ANR	1909606	Identifier	encode		1908651	0					
ANR	1909607	Identifier	details		1908651	1					
ANR	1909608	Identifier	ns		1908651	1					
ANR	1909609	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	491:4:20604:20634	1908651	1	True				
ANR	1909610	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1908651	0					
ANR	1909611	Callee	smart_str_appendc		1908651	0					
ANR	1909612	Identifier	smart_str_appendc		1908651	0					
ANR	1909613	ArgumentList	& nscat		1908651	1					
ANR	1909614	Argument	& nscat		1908651	0					
ANR	1909615	UnaryOperationExpression	& nscat		1908651	0					
ANR	1909616	UnaryOperator	&		1908651	0					
ANR	1909617	Identifier	nscat		1908651	1					
ANR	1909618	Argument	':'		1908651	1					
ANR	1909619	PrimaryExpression	':'		1908651	0					
ANR	1909620	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . type_str )"	493:3:20644:20695	1908651	3	True				
ANR	1909621	CallExpression	"smart_str_appends ( & nscat , encode -> details . type_str )"		1908651	0					
ANR	1909622	Callee	smart_str_appends		1908651	0					
ANR	1909623	Identifier	smart_str_appends		1908651	0					
ANR	1909624	ArgumentList	& nscat		1908651	1					
ANR	1909625	Argument	& nscat		1908651	0					
ANR	1909626	UnaryOperationExpression	& nscat		1908651	0					
ANR	1909627	UnaryOperator	&		1908651	0					
ANR	1909628	Identifier	nscat		1908651	1					
ANR	1909629	Argument	encode -> details . type_str		1908651	1					
ANR	1909630	MemberAccess	encode -> details . type_str		1908651	0					
ANR	1909631	PtrMemberAccess	encode -> details		1908651	0					
ANR	1909632	Identifier	encode		1908651	0					
ANR	1909633	Identifier	details		1908651	1					
ANR	1909634	Identifier	type_str		1908651	1					
ANR	1909635	ExpressionStatement	smart_str_0 ( & nscat )	494:3:20700:20719	1908651	4	True				
ANR	1909636	CallExpression	smart_str_0 ( & nscat )		1908651	0					
ANR	1909637	Callee	smart_str_0		1908651	0					
ANR	1909638	Identifier	smart_str_0		1908651	0					
ANR	1909639	ArgumentList	& nscat		1908651	1					
ANR	1909640	Argument	& nscat		1908651	0					
ANR	1909641	UnaryOperationExpression	& nscat		1908651	0					
ANR	1909642	UnaryOperator	&		1908651	0					
ANR	1909643	Identifier	nscat		1908651	1					
ANR	1909644	IfStatement	"if ( ( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL )"		1908651	5					
ANR	1909645	Condition	"( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL"	495:7:20728:20796	1908651	0	True				
ANR	1909646	EqualityExpression	"( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL"		1908651	0		!=			
ANR	1909647	AssignmentExpression	"new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1908651	0		=			
ANR	1909648	Identifier	new_enc		1908651	0					
ANR	1909649	CallExpression	"zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1908651	1					
ANR	1909650	Callee	zend_hash_find_ptr		1908651	0					
ANR	1909651	Identifier	zend_hash_find_ptr		1908651	0					
ANR	1909652	ArgumentList	SOAP_GLOBAL ( typemap )		1908651	1					
ANR	1909653	Argument	SOAP_GLOBAL ( typemap )		1908651	0					
ANR	1909654	CallExpression	SOAP_GLOBAL ( typemap )		1908651	0					
ANR	1909655	Callee	SOAP_GLOBAL		1908651	0					
ANR	1909656	Identifier	SOAP_GLOBAL		1908651	0					
ANR	1909657	ArgumentList	typemap		1908651	1					
ANR	1909658	Argument	typemap		1908651	0					
ANR	1909659	Identifier	typemap		1908651	0					
ANR	1909660	Argument	nscat . s		1908651	1					
ANR	1909661	MemberAccess	nscat . s		1908651	0					
ANR	1909662	Identifier	nscat		1908651	0					
ANR	1909663	Identifier	s		1908651	1					
ANR	1909664	Identifier	NULL		1908651	1					
ANR	1909665	CompoundStatement		117:78:3938:3938	1908651	1					
ANR	1909666	ExpressionStatement	encode = new_enc	496:4:20805:20821	1908651	0	True				
ANR	1909667	AssignmentExpression	encode = new_enc		1908651	0		=			
ANR	1909668	Identifier	encode		1908651	0					
ANR	1909669	Identifier	new_enc		1908651	1					
ANR	1909670	ExpressionStatement	smart_str_free ( & nscat )	498:3:20831:20853	1908651	6	True				
ANR	1909671	CallExpression	smart_str_free ( & nscat )		1908651	0					
ANR	1909672	Callee	smart_str_free		1908651	0					
ANR	1909673	Identifier	smart_str_free		1908651	0					
ANR	1909674	ArgumentList	& nscat		1908651	1					
ANR	1909675	Argument	& nscat		1908651	0					
ANR	1909676	UnaryOperationExpression	& nscat		1908651	0					
ANR	1909677	UnaryOperator	&		1908651	0					
ANR	1909678	Identifier	nscat		1908651	1					
ANR	1909679	IfStatement	if ( encode -> to_xml )		1908651	3					
ANR	1909680	Condition	encode -> to_xml	500:6:20865:20878	1908651	0	True				
ANR	1909681	PtrMemberAccess	encode -> to_xml		1908651	0					
ANR	1909682	Identifier	encode		1908651	0					
ANR	1909683	Identifier	to_xml		1908651	1					
ANR	1909684	CompoundStatement		122:22:4020:4020	1908651	1					
ANR	1909685	ExpressionStatement	"node = encode -> to_xml ( & encode -> details , data , style , parent )"	501:3:20886:20946	1908651	0	True				
ANR	1909686	AssignmentExpression	"node = encode -> to_xml ( & encode -> details , data , style , parent )"		1908651	0		=			
ANR	1909687	Identifier	node		1908651	0					
ANR	1909688	CallExpression	"encode -> to_xml ( & encode -> details , data , style , parent )"		1908651	1					
ANR	1909689	Callee	encode -> to_xml		1908651	0					
ANR	1909690	PtrMemberAccess	encode -> to_xml		1908651	0					
ANR	1909691	Identifier	encode		1908651	0					
ANR	1909692	Identifier	to_xml		1908651	1					
ANR	1909693	ArgumentList	& encode -> details		1908651	1					
ANR	1909694	Argument	& encode -> details		1908651	0					
ANR	1909695	UnaryOperationExpression	& encode -> details		1908651	0					
ANR	1909696	UnaryOperator	&		1908651	0					
ANR	1909697	PtrMemberAccess	encode -> details		1908651	1					
ANR	1909698	Identifier	encode		1908651	0					
ANR	1909699	Identifier	details		1908651	1					
ANR	1909700	Argument	data		1908651	1					
ANR	1909701	Identifier	data		1908651	0					
ANR	1909702	Argument	style		1908651	2					
ANR	1909703	Identifier	style		1908651	0					
ANR	1909704	Argument	parent		1908651	3					
ANR	1909705	Identifier	parent		1908651	0					
ANR	1909706	IfStatement	if ( add_type )		1908651	1					
ANR	1909707	Condition	add_type	502:7:20955:20962	1908651	0	True				
ANR	1909708	Identifier	add_type		1908651	0					
ANR	1909709	CompoundStatement		124:17:4104:4104	1908651	1					
ANR	1909710	ExpressionStatement	"set_ns_and_type ( node , & encode -> details )"	503:4:20971:21010	1908651	0	True				
ANR	1909711	CallExpression	"set_ns_and_type ( node , & encode -> details )"		1908651	0					
ANR	1909712	Callee	set_ns_and_type		1908651	0					
ANR	1909713	Identifier	set_ns_and_type		1908651	0					
ANR	1909714	ArgumentList	node		1908651	1					
ANR	1909715	Argument	node		1908651	0					
ANR	1909716	Identifier	node		1908651	0					
ANR	1909717	Argument	& encode -> details		1908651	1					
ANR	1909718	UnaryOperationExpression	& encode -> details		1908651	0					
ANR	1909719	UnaryOperator	&		1908651	0					
ANR	1909720	PtrMemberAccess	encode -> details		1908651	1					
ANR	1909721	Identifier	encode		1908651	0					
ANR	1909722	Identifier	details		1908651	1					
ANR	1909723	ReturnStatement	return node ;	507:1:21025:21036	1908651	3	True				
ANR	1909724	Identifier	node		1908651	0					
ANR	1909725	ReturnType	static xmlNodePtr		1908651	1					
ANR	1909726	Identifier	master_to_xml_int		1908651	2					
ANR	1909727	ParameterList	"encodePtr encode , zval * data , int style , xmlNodePtr parent , int check_class_map"		1908651	3					
ANR	1909728	Parameter	encodePtr encode	378:36:16779:16794	1908651	0	True				
ANR	1909729	ParameterType	encodePtr		1908651	0					
ANR	1909730	Identifier	encode		1908651	1					
ANR	1909731	Parameter	zval * data	378:54:16797:16806	1908651	1	True				
ANR	1909732	ParameterType	zval *		1908651	0					
ANR	1909733	Identifier	data		1908651	1					
ANR	1909734	Parameter	int style	378:66:16809:16817	1908651	2	True				
ANR	1909735	ParameterType	int		1908651	0					
ANR	1909736	Identifier	style		1908651	1					
ANR	1909737	Parameter	xmlNodePtr parent	378:77:16820:16836	1908651	3	True				
ANR	1909738	ParameterType	xmlNodePtr		1908651	0					
ANR	1909739	Identifier	parent		1908651	1					
ANR	1909740	Parameter	int check_class_map	378:96:16839:16857	1908651	4	True				
ANR	1909741	ParameterType	int		1908651	0					
ANR	1909742	Identifier	check_class_map		1908651	1					
ANR	1909743	CFGEntryNode	ENTRY		1908651		True				
ANR	1909744	CFGExitNode	EXIT		1908651		True				
ANR	1909745	CFGErrorNode	ERROR		1908651		True				
ANR	1909746	Symbol	encode		1908651						
ANR	1909747	Symbol	parent		1908651						
ANR	1909748	Symbol	type_name		1908651						
ANR	1909749	Symbol	* encode		1908651						
ANR	1909750	Symbol	data		1908651						
ANR	1909751	Symbol	get_conversion		1908651						
ANR	1909752	Symbol	* ce		1908651						
ANR	1909753	Symbol	ht		1908651						
ANR	1909754	Symbol	UNKNOWN_TYPE		1908651						
ANR	1909755	Symbol	soap_var_class_entry		1908651						
ANR	1909756	Symbol	tmp		1908651						
ANR	1909757	Symbol	encode -> details		1908651						
ANR	1909758	Symbol	IS_STRING		1908651						
ANR	1909759	Symbol	ce -> name		1908651						
ANR	1909760	Symbol	zend_hash_find_ptr		1908651						
ANR	1909761	Symbol	find_encoder_by_type_name		1908651						
ANR	1909762	Symbol	encode -> details . type_str		1908651						
ANR	1909763	Symbol	NULL		1908651						
ANR	1909764	Symbol	encode -> details . ns		1908651						
ANR	1909765	Symbol	SOAP_GLOBAL		1908651						
ANR	1909766	Symbol	node		1908651						
ANR	1909767	Symbol	& encode -> details		1908651						
ANR	1909768	Symbol	nscat		1908651						
ANR	1909769	Symbol	SOAP_LITERAL		1908651						
ANR	1909770	Symbol	style		1908651						
ANR	1909771	Symbol	sdl		1908651						
ANR	1909772	Symbol	new_enc		1908651						
ANR	1909773	Symbol	zns		1908651						
ANR	1909774	Symbol	check_class_map		1908651						
ANR	1909775	Symbol	BAD_CAST		1908651						
ANR	1909776	Symbol	zdata		1908651						
ANR	1909777	Symbol	get_encoder_ex		1908651						
ANR	1909778	Symbol	typemap		1908651						
ANR	1909779	Symbol	zstype		1908651						
ANR	1909780	Symbol	nsp		1908651						
ANR	1909781	Symbol	* SOAP_GLOBAL		1908651						
ANR	1909782	Symbol	add_type		1908651						
ANR	1909783	Symbol	encode -> to_xml		1908651						
ANR	1909784	Symbol	zend_hash_str_find		1908651						
ANR	1909785	Symbol	IS_LONG		1908651						
ANR	1909786	Symbol	Z_OBJCE_P		1908651						
ANR	1909787	Symbol	ztype		1908651						
ANR	1909788	Symbol	SOAP_GLOBAL ( sdl ) -> target_ns		1908651						
ANR	1909789	Symbol	Z_STRLEN_P		1908651						
ANR	1909790	Symbol	enc		1908651						
ANR	1909791	Symbol	nscat . s		1908651						
ANR	1909792	Symbol	master_to_xml		1908651						
ANR	1909793	Symbol	ce		1908651						
ANR	1909794	Symbol	encode_add_ns		1908651						
ANR	1909795	Symbol	class_map		1908651						
ANR	1909796	Symbol	Z_OBJPROP_P		1908651						
ANR	1909797	Symbol	Z_TYPE_P		1908651						
ANR	1909798	Symbol	zend_binary_strncasecmp		1908651						
ANR	1909799	Symbol	Z_STRVAL_P		1908651						
ANR	1909800	Symbol	zname		1908651						
ANR	1909801	Symbol	Z_LVAL_P		1908651						
ANR	1909802	Symbol	ZSTR_VAL		1908651						
ANR	1909803	Symbol	get_encoder		1908651						
ANR	1909804	Symbol	ZEND_HASH_GET_APPLY_COUNT		1908651						
ANR	1909805	Symbol	E_ERROR		1908651						
ANR	1909806	Symbol	ZSTR_LEN		1908651						
ANR	1909807	Symbol	SOAP_ENCODED		1908651						
ANR	1909808	Symbol	IS_OBJECT		1908651						
ANR	1909809	Symbol	& nscat		1908651						
ANR	1909810	Symbol	znamens		1908651						
ANR	1909811	Function	master_to_xml	510:0:21041:21187							
ANR	1909812	FunctionDef	"master_to_xml (encodePtr encode , zval * data , int style , xmlNodePtr parent)"		1909811	0					
ANR	1909813	CompoundStatement		511:0:21126:21187	1909811	0					
ANR	1909814	ReturnStatement	"return master_to_xml_int ( encode , data , style , parent , 1 ) ;"	512:1:21129:21185	1909811	0	True				
ANR	1909815	CallExpression	"master_to_xml_int ( encode , data , style , parent , 1 )"		1909811	0					
ANR	1909816	Callee	master_to_xml_int		1909811	0					
ANR	1909817	Identifier	master_to_xml_int		1909811	0					
ANR	1909818	ArgumentList	encode		1909811	1					
ANR	1909819	Argument	encode		1909811	0					
ANR	1909820	Identifier	encode		1909811	0					
ANR	1909821	Argument	data		1909811	1					
ANR	1909822	Identifier	data		1909811	0					
ANR	1909823	Argument	style		1909811	2					
ANR	1909824	Identifier	style		1909811	0					
ANR	1909825	Argument	parent		1909811	3					
ANR	1909826	Identifier	parent		1909811	0					
ANR	1909827	Argument	1		1909811	4					
ANR	1909828	PrimaryExpression	1		1909811	0					
ANR	1909829	ReturnType	xmlNodePtr		1909811	1					
ANR	1909830	Identifier	master_to_xml		1909811	2					
ANR	1909831	ParameterList	"encodePtr encode , zval * data , int style , xmlNodePtr parent"		1909811	3					
ANR	1909832	Parameter	encodePtr encode	510:25:21066:21081	1909811	0	True				
ANR	1909833	ParameterType	encodePtr		1909811	0					
ANR	1909834	Identifier	encode		1909811	1					
ANR	1909835	Parameter	zval * data	510:43:21084:21093	1909811	1	True				
ANR	1909836	ParameterType	zval *		1909811	0					
ANR	1909837	Identifier	data		1909811	1					
ANR	1909838	Parameter	int style	510:55:21096:21104	1909811	2	True				
ANR	1909839	ParameterType	int		1909811	0					
ANR	1909840	Identifier	style		1909811	1					
ANR	1909841	Parameter	xmlNodePtr parent	510:66:21107:21123	1909811	3	True				
ANR	1909842	ParameterType	xmlNodePtr		1909811	0					
ANR	1909843	Identifier	parent		1909811	1					
ANR	1909844	CFGEntryNode	ENTRY		1909811		True				
ANR	1909845	CFGExitNode	EXIT		1909811		True				
ANR	1909846	Symbol	encode		1909811						
ANR	1909847	Symbol	parent		1909811						
ANR	1909848	Symbol	master_to_xml_int		1909811						
ANR	1909849	Symbol	data		1909811						
ANR	1909850	Symbol	style		1909811						
ANR	1909851	Function	master_to_zval_int	515:0:21190:22528							
ANR	1909852	FunctionDef	"master_to_zval_int (zval * ret , encodePtr encode , xmlNodePtr data)"		1909851	0					
ANR	1909853	CompoundStatement		516:0:21268:22528	1909851	0					
ANR	1909854	IfStatement	if ( SOAP_GLOBAL ( typemap ) )		1909851	0					
ANR	1909855	Condition	SOAP_GLOBAL ( typemap )	517:5:21275:21294	1909851	0	True				
ANR	1909856	CallExpression	SOAP_GLOBAL ( typemap )		1909851	0					
ANR	1909857	Callee	SOAP_GLOBAL		1909851	0					
ANR	1909858	Identifier	SOAP_GLOBAL		1909851	0					
ANR	1909859	ArgumentList	typemap		1909851	1					
ANR	1909860	Argument	typemap		1909851	0					
ANR	1909861	Identifier	typemap		1909851	0					
ANR	1909862	CompoundStatement		2:27:28:28	1909851	1					
ANR	1909863	IfStatement	if ( encode -> details . type_str )		1909851	0					
ANR	1909864	Condition	encode -> details . type_str	518:6:21305:21328	1909851	0	True				
ANR	1909865	MemberAccess	encode -> details . type_str		1909851	0					
ANR	1909866	PtrMemberAccess	encode -> details		1909851	0					
ANR	1909867	Identifier	encode		1909851	0					
ANR	1909868	Identifier	details		1909851	1					
ANR	1909869	Identifier	type_str		1909851	1					
ANR	1909870	CompoundStatement		5:3:93:110	1909851	1					
ANR	1909871	IdentifierDeclStatement	smart_str nscat = { 0 } ;	519:3:21336:21357	1909851	0	True				
ANR	1909872	IdentifierDecl	nscat = { 0 }		1909851	0					
ANR	1909873	IdentifierDeclType	smart_str		1909851	0					
ANR	1909874	Identifier	nscat		1909851	1					
ANR	1909875	AssignmentExpression	nscat = { 0 }		1909851	2		=			
ANR	1909876	Identifier	nscat		1909851	0					
ANR	1909877	InitializerList	0		1909851	1					
ANR	1909878	PrimaryExpression	0		1909851	0					
ANR	1909879	IdentifierDeclStatement	encodePtr new_enc ;	520:3:21362:21379	1909851	1	True				
ANR	1909880	IdentifierDecl	new_enc		1909851	0					
ANR	1909881	IdentifierDeclType	encodePtr		1909851	0					
ANR	1909882	Identifier	new_enc		1909851	1					
ANR	1909883	IfStatement	if ( encode -> details . ns )		1909851	2					
ANR	1909884	Condition	encode -> details . ns	522:7:21389:21406	1909851	0	True				
ANR	1909885	MemberAccess	encode -> details . ns		1909851	0					
ANR	1909886	PtrMemberAccess	encode -> details		1909851	0					
ANR	1909887	Identifier	encode		1909851	0					
ANR	1909888	Identifier	details		1909851	1					
ANR	1909889	Identifier	ns		1909851	1					
ANR	1909890	CompoundStatement		7:27:140:140	1909851	1					
ANR	1909891	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . ns )"	523:4:21415:21460	1909851	0	True				
ANR	1909892	CallExpression	"smart_str_appends ( & nscat , encode -> details . ns )"		1909851	0					
ANR	1909893	Callee	smart_str_appends		1909851	0					
ANR	1909894	Identifier	smart_str_appends		1909851	0					
ANR	1909895	ArgumentList	& nscat		1909851	1					
ANR	1909896	Argument	& nscat		1909851	0					
ANR	1909897	UnaryOperationExpression	& nscat		1909851	0					
ANR	1909898	UnaryOperator	&		1909851	0					
ANR	1909899	Identifier	nscat		1909851	1					
ANR	1909900	Argument	encode -> details . ns		1909851	1					
ANR	1909901	MemberAccess	encode -> details . ns		1909851	0					
ANR	1909902	PtrMemberAccess	encode -> details		1909851	0					
ANR	1909903	Identifier	encode		1909851	0					
ANR	1909904	Identifier	details		1909851	1					
ANR	1909905	Identifier	ns		1909851	1					
ANR	1909906	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	524:4:21466:21496	1909851	1	True				
ANR	1909907	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1909851	0					
ANR	1909908	Callee	smart_str_appendc		1909851	0					
ANR	1909909	Identifier	smart_str_appendc		1909851	0					
ANR	1909910	ArgumentList	& nscat		1909851	1					
ANR	1909911	Argument	& nscat		1909851	0					
ANR	1909912	UnaryOperationExpression	& nscat		1909851	0					
ANR	1909913	UnaryOperator	&		1909851	0					
ANR	1909914	Identifier	nscat		1909851	1					
ANR	1909915	Argument	':'		1909851	1					
ANR	1909916	PrimaryExpression	':'		1909851	0					
ANR	1909917	ExpressionStatement	"smart_str_appends ( & nscat , encode -> details . type_str )"	526:3:21506:21557	1909851	3	True				
ANR	1909918	CallExpression	"smart_str_appends ( & nscat , encode -> details . type_str )"		1909851	0					
ANR	1909919	Callee	smart_str_appends		1909851	0					
ANR	1909920	Identifier	smart_str_appends		1909851	0					
ANR	1909921	ArgumentList	& nscat		1909851	1					
ANR	1909922	Argument	& nscat		1909851	0					
ANR	1909923	UnaryOperationExpression	& nscat		1909851	0					
ANR	1909924	UnaryOperator	&		1909851	0					
ANR	1909925	Identifier	nscat		1909851	1					
ANR	1909926	Argument	encode -> details . type_str		1909851	1					
ANR	1909927	MemberAccess	encode -> details . type_str		1909851	0					
ANR	1909928	PtrMemberAccess	encode -> details		1909851	0					
ANR	1909929	Identifier	encode		1909851	0					
ANR	1909930	Identifier	details		1909851	1					
ANR	1909931	Identifier	type_str		1909851	1					
ANR	1909932	ExpressionStatement	smart_str_0 ( & nscat )	527:3:21562:21581	1909851	4	True				
ANR	1909933	CallExpression	smart_str_0 ( & nscat )		1909851	0					
ANR	1909934	Callee	smart_str_0		1909851	0					
ANR	1909935	Identifier	smart_str_0		1909851	0					
ANR	1909936	ArgumentList	& nscat		1909851	1					
ANR	1909937	Argument	& nscat		1909851	0					
ANR	1909938	UnaryOperationExpression	& nscat		1909851	0					
ANR	1909939	UnaryOperator	&		1909851	0					
ANR	1909940	Identifier	nscat		1909851	1					
ANR	1909941	IfStatement	"if ( ( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL )"		1909851	5					
ANR	1909942	Condition	"( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL"	528:7:21590:21658	1909851	0	True				
ANR	1909943	EqualityExpression	"( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL"		1909851	0		!=			
ANR	1909944	AssignmentExpression	"new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1909851	0		=			
ANR	1909945	Identifier	new_enc		1909851	0					
ANR	1909946	CallExpression	"zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1909851	1					
ANR	1909947	Callee	zend_hash_find_ptr		1909851	0					
ANR	1909948	Identifier	zend_hash_find_ptr		1909851	0					
ANR	1909949	ArgumentList	SOAP_GLOBAL ( typemap )		1909851	1					
ANR	1909950	Argument	SOAP_GLOBAL ( typemap )		1909851	0					
ANR	1909951	CallExpression	SOAP_GLOBAL ( typemap )		1909851	0					
ANR	1909952	Callee	SOAP_GLOBAL		1909851	0					
ANR	1909953	Identifier	SOAP_GLOBAL		1909851	0					
ANR	1909954	ArgumentList	typemap		1909851	1					
ANR	1909955	Argument	typemap		1909851	0					
ANR	1909956	Identifier	typemap		1909851	0					
ANR	1909957	Argument	nscat . s		1909851	1					
ANR	1909958	MemberAccess	nscat . s		1909851	0					
ANR	1909959	Identifier	nscat		1909851	0					
ANR	1909960	Identifier	s		1909851	1					
ANR	1909961	Identifier	NULL		1909851	1					
ANR	1909962	CompoundStatement		13:78:392:392	1909851	1					
ANR	1909963	ExpressionStatement	encode = new_enc	529:4:21667:21683	1909851	0	True				
ANR	1909964	AssignmentExpression	encode = new_enc		1909851	0		=			
ANR	1909965	Identifier	encode		1909851	0					
ANR	1909966	Identifier	new_enc		1909851	1					
ANR	1909967	ExpressionStatement	smart_str_free ( & nscat )	531:3:21693:21715	1909851	6	True				
ANR	1909968	CallExpression	smart_str_free ( & nscat )		1909851	0					
ANR	1909969	Callee	smart_str_free		1909851	0					
ANR	1909970	Identifier	smart_str_free		1909851	0					
ANR	1909971	ArgumentList	& nscat		1909851	1					
ANR	1909972	Argument	& nscat		1909851	0					
ANR	1909973	UnaryOperationExpression	& nscat		1909851	0					
ANR	1909974	UnaryOperator	&		1909851	0					
ANR	1909975	Identifier	nscat		1909851	1					
ANR	1909976	ElseStatement	else		1909851	0					
ANR	1909977	CompoundStatement		18:3:462:541	1909851	0					
ANR	1909978	IdentifierDeclStatement	"xmlAttrPtr type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE ) ;"	533:3:21731:21810	1909851	0	True				
ANR	1909979	IdentifierDecl	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1909851	0					
ANR	1909980	IdentifierDeclType	xmlAttrPtr		1909851	0					
ANR	1909981	Identifier	type_attr		1909851	1					
ANR	1909982	AssignmentExpression	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1909851	2		=			
ANR	1909983	Identifier	type_attr		1909851	0					
ANR	1909984	CallExpression	"get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1909851	1					
ANR	1909985	Callee	get_attribute_ex		1909851	0					
ANR	1909986	Identifier	get_attribute_ex		1909851	0					
ANR	1909987	ArgumentList	data -> properties		1909851	1					
ANR	1909988	Argument	data -> properties		1909851	0					
ANR	1909989	PtrMemberAccess	data -> properties		1909851	0					
ANR	1909990	Identifier	data		1909851	0					
ANR	1909991	Identifier	properties		1909851	1					
ANR	1909992	Argument	"""type"""		1909851	1					
ANR	1909993	PrimaryExpression	"""type"""		1909851	0					
ANR	1909994	Argument	XSI_NAMESPACE		1909851	2					
ANR	1909995	Identifier	XSI_NAMESPACE		1909851	0					
ANR	1909996	IfStatement	if ( type_attr != NULL )		1909851	1					
ANR	1909997	Condition	type_attr != NULL	535:7:21820:21836	1909851	0	True				
ANR	1909998	EqualityExpression	type_attr != NULL		1909851	0		!=			
ANR	1909999	Identifier	type_attr		1909851	0					
ANR	1910000	Identifier	NULL		1909851	1					
ANR	1910001	CompoundStatement		24:4:642:663	1909851	1					
ANR	1910002	IdentifierDeclStatement	encodePtr new_enc ;	536:4:21845:21862	1909851	0	True				
ANR	1910003	IdentifierDecl	new_enc		1909851	0					
ANR	1910004	IdentifierDeclType	encodePtr		1909851	0					
ANR	1910005	Identifier	new_enc		1909851	1					
ANR	1910006	IdentifierDeclStatement	xmlNsPtr nsptr ;	537:4:21868:21882	1909851	1	True				
ANR	1910007	IdentifierDecl	nsptr		1909851	0					
ANR	1910008	IdentifierDeclType	xmlNsPtr		1909851	0					
ANR	1910009	Identifier	nsptr		1909851	1					
ANR	1910010	IdentifierDeclStatement	"char * ns , * cptype ;"	538:4:21888:21905	1909851	2	True				
ANR	1910011	IdentifierDecl	* ns		1909851	0					
ANR	1910012	IdentifierDeclType	char *		1909851	0					
ANR	1910013	Identifier	ns		1909851	1					
ANR	1910014	IdentifierDecl	* cptype		1909851	1					
ANR	1910015	IdentifierDeclType	char *		1909851	0					
ANR	1910016	Identifier	cptype		1909851	1					
ANR	1910017	IdentifierDeclStatement	smart_str nscat = { 0 } ;	539:4:21911:21932	1909851	3	True				
ANR	1910018	IdentifierDecl	nscat = { 0 }		1909851	0					
ANR	1910019	IdentifierDeclType	smart_str		1909851	0					
ANR	1910020	Identifier	nscat		1909851	1					
ANR	1910021	AssignmentExpression	nscat = { 0 }		1909851	2		=			
ANR	1910022	Identifier	nscat		1909851	0					
ANR	1910023	InitializerList	0		1909851	1					
ANR	1910024	PrimaryExpression	0		1909851	0					
ANR	1910025	ExpressionStatement	"parse_namespace ( type_attr -> children -> content , & cptype , & ns )"	541:4:21939:21998	1909851	4	True				
ANR	1910026	CallExpression	"parse_namespace ( type_attr -> children -> content , & cptype , & ns )"		1909851	0					
ANR	1910027	Callee	parse_namespace		1909851	0					
ANR	1910028	Identifier	parse_namespace		1909851	0					
ANR	1910029	ArgumentList	type_attr -> children -> content		1909851	1					
ANR	1910030	Argument	type_attr -> children -> content		1909851	0					
ANR	1910031	PtrMemberAccess	type_attr -> children -> content		1909851	0					
ANR	1910032	PtrMemberAccess	type_attr -> children		1909851	0					
ANR	1910033	Identifier	type_attr		1909851	0					
ANR	1910034	Identifier	children		1909851	1					
ANR	1910035	Identifier	content		1909851	1					
ANR	1910036	Argument	& cptype		1909851	1					
ANR	1910037	UnaryOperationExpression	& cptype		1909851	0					
ANR	1910038	UnaryOperator	&		1909851	0					
ANR	1910039	Identifier	cptype		1909851	1					
ANR	1910040	Argument	& ns		1909851	2					
ANR	1910041	UnaryOperationExpression	& ns		1909851	0					
ANR	1910042	UnaryOperator	&		1909851	0					
ANR	1910043	Identifier	ns		1909851	1					
ANR	1910044	ExpressionStatement	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"	542:4:22004:22054	1909851	5	True				
ANR	1910045	AssignmentExpression	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1909851	0		=			
ANR	1910046	Identifier	nsptr		1909851	0					
ANR	1910047	CallExpression	"xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1909851	1					
ANR	1910048	Callee	xmlSearchNs		1909851	0					
ANR	1910049	Identifier	xmlSearchNs		1909851	0					
ANR	1910050	ArgumentList	data -> doc		1909851	1					
ANR	1910051	Argument	data -> doc		1909851	0					
ANR	1910052	PtrMemberAccess	data -> doc		1909851	0					
ANR	1910053	Identifier	data		1909851	0					
ANR	1910054	Identifier	doc		1909851	1					
ANR	1910055	Argument	data		1909851	1					
ANR	1910056	Identifier	data		1909851	0					
ANR	1910057	Argument	BAD_CAST ( ns )		1909851	2					
ANR	1910058	CallExpression	BAD_CAST ( ns )		1909851	0					
ANR	1910059	Callee	BAD_CAST		1909851	0					
ANR	1910060	Identifier	BAD_CAST		1909851	0					
ANR	1910061	ArgumentList	ns		1909851	1					
ANR	1910062	Argument	ns		1909851	0					
ANR	1910063	Identifier	ns		1909851	0					
ANR	1910064	IfStatement	if ( nsptr != NULL )		1909851	6					
ANR	1910065	Condition	nsptr != NULL	543:8:22064:22076	1909851	0	True				
ANR	1910066	EqualityExpression	nsptr != NULL		1909851	0		!=			
ANR	1910067	Identifier	nsptr		1909851	0					
ANR	1910068	Identifier	NULL		1909851	1					
ANR	1910069	CompoundStatement		28:23:810:810	1909851	1					
ANR	1910070	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) nsptr -> href )"	544:5:22086:22131	1909851	0	True				
ANR	1910071	CallExpression	"smart_str_appends ( & nscat , ( char * ) nsptr -> href )"		1909851	0					
ANR	1910072	Callee	smart_str_appends		1909851	0					
ANR	1910073	Identifier	smart_str_appends		1909851	0					
ANR	1910074	ArgumentList	& nscat		1909851	1					
ANR	1910075	Argument	& nscat		1909851	0					
ANR	1910076	UnaryOperationExpression	& nscat		1909851	0					
ANR	1910077	UnaryOperator	&		1909851	0					
ANR	1910078	Identifier	nscat		1909851	1					
ANR	1910079	Argument	( char * ) nsptr -> href		1909851	1					
ANR	1910080	CastExpression	( char * ) nsptr -> href		1909851	0					
ANR	1910081	CastTarget	char *		1909851	0					
ANR	1910082	PtrMemberAccess	nsptr -> href		1909851	1					
ANR	1910083	Identifier	nsptr		1909851	0					
ANR	1910084	Identifier	href		1909851	1					
ANR	1910085	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	545:5:22138:22168	1909851	1	True				
ANR	1910086	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1909851	0					
ANR	1910087	Callee	smart_str_appendc		1909851	0					
ANR	1910088	Identifier	smart_str_appendc		1909851	0					
ANR	1910089	ArgumentList	& nscat		1909851	1					
ANR	1910090	Argument	& nscat		1909851	0					
ANR	1910091	UnaryOperationExpression	& nscat		1909851	0					
ANR	1910092	UnaryOperator	&		1909851	0					
ANR	1910093	Identifier	nscat		1909851	1					
ANR	1910094	Argument	':'		1909851	1					
ANR	1910095	PrimaryExpression	':'		1909851	0					
ANR	1910096	ExpressionStatement	"smart_str_appends ( & nscat , cptype )"	547:4:22180:22213	1909851	7	True				
ANR	1910097	CallExpression	"smart_str_appends ( & nscat , cptype )"		1909851	0					
ANR	1910098	Callee	smart_str_appends		1909851	0					
ANR	1910099	Identifier	smart_str_appends		1909851	0					
ANR	1910100	ArgumentList	& nscat		1909851	1					
ANR	1910101	Argument	& nscat		1909851	0					
ANR	1910102	UnaryOperationExpression	& nscat		1909851	0					
ANR	1910103	UnaryOperator	&		1909851	0					
ANR	1910104	Identifier	nscat		1909851	1					
ANR	1910105	Argument	cptype		1909851	1					
ANR	1910106	Identifier	cptype		1909851	0					
ANR	1910107	ExpressionStatement	smart_str_0 ( & nscat )	548:4:22219:22238	1909851	8	True				
ANR	1910108	CallExpression	smart_str_0 ( & nscat )		1909851	0					
ANR	1910109	Callee	smart_str_0		1909851	0					
ANR	1910110	Identifier	smart_str_0		1909851	0					
ANR	1910111	ArgumentList	& nscat		1909851	1					
ANR	1910112	Argument	& nscat		1909851	0					
ANR	1910113	UnaryOperationExpression	& nscat		1909851	0					
ANR	1910114	UnaryOperator	&		1909851	0					
ANR	1910115	Identifier	nscat		1909851	1					
ANR	1910116	ExpressionStatement	efree ( cptype )	549:4:22244:22257	1909851	9	True				
ANR	1910117	CallExpression	efree ( cptype )		1909851	0					
ANR	1910118	Callee	efree		1909851	0					
ANR	1910119	Identifier	efree		1909851	0					
ANR	1910120	ArgumentList	cptype		1909851	1					
ANR	1910121	Argument	cptype		1909851	0					
ANR	1910122	Identifier	cptype		1909851	0					
ANR	1910123	IfStatement	if ( ns )		1909851	10					
ANR	1910124	Condition	ns	550:8:22267:22268	1909851	0	True				
ANR	1910125	Identifier	ns		1909851	0					
ANR	1910126	CompoundStatement		35:12:1002:1002	1909851	1					
ANR	1910127	ExpressionStatement	efree ( ns )	550:13:22272:22281	1909851	0	True				
ANR	1910128	CallExpression	efree ( ns )		1909851	0					
ANR	1910129	Callee	efree		1909851	0					
ANR	1910130	Identifier	efree		1909851	0					
ANR	1910131	ArgumentList	ns		1909851	1					
ANR	1910132	Argument	ns		1909851	0					
ANR	1910133	Identifier	ns		1909851	0					
ANR	1910134	IfStatement	"if ( ( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL )"		1909851	11					
ANR	1910135	Condition	"( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL"	551:8:22292:22360	1909851	0	True				
ANR	1910136	EqualityExpression	"( new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s ) ) != NULL"		1909851	0		!=			
ANR	1910137	AssignmentExpression	"new_enc = zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1909851	0		=			
ANR	1910138	Identifier	new_enc		1909851	0					
ANR	1910139	CallExpression	"zend_hash_find_ptr ( SOAP_GLOBAL ( typemap ) , nscat . s )"		1909851	1					
ANR	1910140	Callee	zend_hash_find_ptr		1909851	0					
ANR	1910141	Identifier	zend_hash_find_ptr		1909851	0					
ANR	1910142	ArgumentList	SOAP_GLOBAL ( typemap )		1909851	1					
ANR	1910143	Argument	SOAP_GLOBAL ( typemap )		1909851	0					
ANR	1910144	CallExpression	SOAP_GLOBAL ( typemap )		1909851	0					
ANR	1910145	Callee	SOAP_GLOBAL		1909851	0					
ANR	1910146	Identifier	SOAP_GLOBAL		1909851	0					
ANR	1910147	ArgumentList	typemap		1909851	1					
ANR	1910148	Argument	typemap		1909851	0					
ANR	1910149	Identifier	typemap		1909851	0					
ANR	1910150	Argument	nscat . s		1909851	1					
ANR	1910151	MemberAccess	nscat . s		1909851	0					
ANR	1910152	Identifier	nscat		1909851	0					
ANR	1910153	Identifier	s		1909851	1					
ANR	1910154	Identifier	NULL		1909851	1					
ANR	1910155	CompoundStatement		36:79:1094:1094	1909851	1					
ANR	1910156	ExpressionStatement	encode = new_enc	552:5:22370:22386	1909851	0	True				
ANR	1910157	AssignmentExpression	encode = new_enc		1909851	0		=			
ANR	1910158	Identifier	encode		1909851	0					
ANR	1910159	Identifier	new_enc		1909851	1					
ANR	1910160	ExpressionStatement	smart_str_free ( & nscat )	554:4:22398:22420	1909851	12	True				
ANR	1910161	CallExpression	smart_str_free ( & nscat )		1909851	0					
ANR	1910162	Callee	smart_str_free		1909851	0					
ANR	1910163	Identifier	smart_str_free		1909851	0					
ANR	1910164	ArgumentList	& nscat		1909851	1					
ANR	1910165	Argument	& nscat		1909851	0					
ANR	1910166	UnaryOperationExpression	& nscat		1909851	0					
ANR	1910167	UnaryOperator	&		1909851	0					
ANR	1910168	Identifier	nscat		1909851	1					
ANR	1910169	IfStatement	if ( encode -> to_zval )		1909851	1					
ANR	1910170	Condition	encode -> to_zval	558:5:22439:22453	1909851	0	True				
ANR	1910171	PtrMemberAccess	encode -> to_zval		1909851	0					
ANR	1910172	Identifier	encode		1909851	0					
ANR	1910173	Identifier	to_zval		1909851	1					
ANR	1910174	CompoundStatement		43:22:1187:1187	1909851	1					
ANR	1910175	ExpressionStatement	"ret = encode -> to_zval ( ret , & encode -> details , data )"	559:2:22460:22510	1909851	0	True				
ANR	1910176	AssignmentExpression	"ret = encode -> to_zval ( ret , & encode -> details , data )"		1909851	0		=			
ANR	1910177	Identifier	ret		1909851	0					
ANR	1910178	CallExpression	"encode -> to_zval ( ret , & encode -> details , data )"		1909851	1					
ANR	1910179	Callee	encode -> to_zval		1909851	0					
ANR	1910180	PtrMemberAccess	encode -> to_zval		1909851	0					
ANR	1910181	Identifier	encode		1909851	0					
ANR	1910182	Identifier	to_zval		1909851	1					
ANR	1910183	ArgumentList	ret		1909851	1					
ANR	1910184	Argument	ret		1909851	0					
ANR	1910185	Identifier	ret		1909851	0					
ANR	1910186	Argument	& encode -> details		1909851	1					
ANR	1910187	UnaryOperationExpression	& encode -> details		1909851	0					
ANR	1910188	UnaryOperator	&		1909851	0					
ANR	1910189	PtrMemberAccess	encode -> details		1909851	1					
ANR	1910190	Identifier	encode		1909851	0					
ANR	1910191	Identifier	details		1909851	1					
ANR	1910192	Argument	data		1909851	2					
ANR	1910193	Identifier	data		1909851	0					
ANR	1910194	ReturnStatement	return ret ;	561:1:22516:22526	1909851	2	True				
ANR	1910195	Identifier	ret		1909851	0					
ANR	1910196	ReturnType	static zval *		1909851	1					
ANR	1910197	Identifier	master_to_zval_int		1909851	2					
ANR	1910198	ParameterList	"zval * ret , encodePtr encode , xmlNodePtr data"		1909851	3					
ANR	1910199	Parameter	zval * ret	515:32:21222:21230	1909851	0	True				
ANR	1910200	ParameterType	zval *		1909851	0					
ANR	1910201	Identifier	ret		1909851	1					
ANR	1910202	Parameter	encodePtr encode	515:43:21233:21248	1909851	1	True				
ANR	1910203	ParameterType	encodePtr		1909851	0					
ANR	1910204	Identifier	encode		1909851	1					
ANR	1910205	Parameter	xmlNodePtr data	515:61:21251:21265	1909851	2	True				
ANR	1910206	ParameterType	xmlNodePtr		1909851	0					
ANR	1910207	Identifier	data		1909851	1					
ANR	1910208	CFGEntryNode	ENTRY		1909851		True				
ANR	1910209	CFGExitNode	EXIT		1909851		True				
ANR	1910210	Symbol	encode		1909851						
ANR	1910211	Symbol	* encode		1909851						
ANR	1910212	Symbol	data		1909851						
ANR	1910213	Symbol	typemap		1909851						
ANR	1910214	Symbol	ns		1909851						
ANR	1910215	Symbol	data -> properties		1909851						
ANR	1910216	Symbol	nsptr		1909851						
ANR	1910217	Symbol	encode -> details		1909851						
ANR	1910218	Symbol	nscat . s		1909851						
ANR	1910219	Symbol	zend_hash_find_ptr		1909851						
ANR	1910220	Symbol	ret		1909851						
ANR	1910221	Symbol	encode -> details . type_str		1909851						
ANR	1910222	Symbol	NULL		1909851						
ANR	1910223	Symbol	encode -> details . ns		1909851						
ANR	1910224	Symbol	nsptr -> href		1909851						
ANR	1910225	Symbol	& cptype		1909851						
ANR	1910226	Symbol	encode -> to_zval		1909851						
ANR	1910227	Symbol	type_attr -> children		1909851						
ANR	1910228	Symbol	SOAP_GLOBAL		1909851						
ANR	1910229	Symbol	xmlSearchNs		1909851						
ANR	1910230	Symbol	& ns		1909851						
ANR	1910231	Symbol	& encode -> details		1909851						
ANR	1910232	Symbol	nscat		1909851						
ANR	1910233	Symbol	* type_attr -> children		1909851						
ANR	1910234	Symbol	type_attr -> children -> content		1909851						
ANR	1910235	Symbol	data -> doc		1909851						
ANR	1910236	Symbol	get_attribute_ex		1909851						
ANR	1910237	Symbol	cptype		1909851						
ANR	1910238	Symbol	* nsptr		1909851						
ANR	1910239	Symbol	* * type_attr		1909851						
ANR	1910240	Symbol	type_attr		1909851						
ANR	1910241	Symbol	new_enc		1909851						
ANR	1910242	Symbol	& nscat		1909851						
ANR	1910243	Symbol	XSI_NAMESPACE		1909851						
ANR	1910244	Symbol	* data		1909851						
ANR	1910245	Symbol	* type_attr		1909851						
ANR	1910246	Symbol	BAD_CAST		1909851						
ANR	1910247	Function	master_to_zval	564:0:22531:23466							
ANR	1910248	FunctionDef	"master_to_zval (zval * ret , encodePtr encode , xmlNodePtr data)"		1910247	0					
ANR	1910249	CompoundStatement		565:0:22598:23466	1910247	0					
ANR	1910250	ExpressionStatement	data = check_and_resolve_href ( data )	566:1:22601:22636	1910247	0	True				
ANR	1910251	AssignmentExpression	data = check_and_resolve_href ( data )		1910247	0		=			
ANR	1910252	Identifier	data		1910247	0					
ANR	1910253	CallExpression	check_and_resolve_href ( data )		1910247	1					
ANR	1910254	Callee	check_and_resolve_href		1910247	0					
ANR	1910255	Identifier	check_and_resolve_href		1910247	0					
ANR	1910256	ArgumentList	data		1910247	1					
ANR	1910257	Argument	data		1910247	0					
ANR	1910258	Identifier	data		1910247	0					
ANR	1910259	IfStatement	if ( encode == NULL )		1910247	1					
ANR	1910260	Condition	encode == NULL	568:5:22644:22657	1910247	0	True				
ANR	1910261	EqualityExpression	encode == NULL		1910247	0		==			
ANR	1910262	Identifier	encode		1910247	0					
ANR	1910263	Identifier	NULL		1910247	1					
ANR	1910264	CompoundStatement		4:21:61:61	1910247	1					
ANR	1910265	ExpressionStatement	encode = get_conversion ( UNKNOWN_TYPE )	569:2:22664:22701	1910247	0	True				
ANR	1910266	AssignmentExpression	encode = get_conversion ( UNKNOWN_TYPE )		1910247	0		=			
ANR	1910267	Identifier	encode		1910247	0					
ANR	1910268	CallExpression	get_conversion ( UNKNOWN_TYPE )		1910247	1					
ANR	1910269	Callee	get_conversion		1910247	0					
ANR	1910270	Identifier	get_conversion		1910247	0					
ANR	1910271	ArgumentList	UNKNOWN_TYPE		1910247	1					
ANR	1910272	Argument	UNKNOWN_TYPE		1910247	0					
ANR	1910273	Identifier	UNKNOWN_TYPE		1910247	0					
ANR	1910274	ElseStatement	else		1910247	0					
ANR	1910275	CompoundStatement		8:2:154:233	1910247	0					
ANR	1910276	IdentifierDeclStatement	"xmlAttrPtr type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE ) ;"	572:2:22753:22832	1910247	0	True				
ANR	1910277	IdentifierDecl	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1910247	0					
ANR	1910278	IdentifierDeclType	xmlAttrPtr		1910247	0					
ANR	1910279	Identifier	type_attr		1910247	1					
ANR	1910280	AssignmentExpression	"type_attr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1910247	2		=			
ANR	1910281	Identifier	type_attr		1910247	0					
ANR	1910282	CallExpression	"get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1910247	1					
ANR	1910283	Callee	get_attribute_ex		1910247	0					
ANR	1910284	Identifier	get_attribute_ex		1910247	0					
ANR	1910285	ArgumentList	data -> properties		1910247	1					
ANR	1910286	Argument	data -> properties		1910247	0					
ANR	1910287	PtrMemberAccess	data -> properties		1910247	0					
ANR	1910288	Identifier	data		1910247	0					
ANR	1910289	Identifier	properties		1910247	1					
ANR	1910290	Argument	"""type"""		1910247	1					
ANR	1910291	PrimaryExpression	"""type"""		1910247	0					
ANR	1910292	Argument	XSI_NAMESPACE		1910247	2					
ANR	1910293	Identifier	XSI_NAMESPACE		1910247	0					
ANR	1910294	IfStatement	if ( type_attr != NULL )		1910247	1					
ANR	1910295	Condition	type_attr != NULL	574:6:22841:22857	1910247	0	True				
ANR	1910296	EqualityExpression	type_attr != NULL		1910247	0		!=			
ANR	1910297	Identifier	type_attr		1910247	0					
ANR	1910298	Identifier	NULL		1910247	1					
ANR	1910299	CompoundStatement		11:3:266:360	1910247	1					
ANR	1910300	IdentifierDeclStatement	"encodePtr enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content ) ;"	575:3:22865:22959	1910247	0	True				
ANR	1910301	IdentifierDecl	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content )"		1910247	0					
ANR	1910302	IdentifierDeclType	encodePtr		1910247	0					
ANR	1910303	Identifier	enc		1910247	1					
ANR	1910304	AssignmentExpression	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content )"		1910247	2		=			
ANR	1910305	Identifier	enc		1910247	0					
ANR	1910306	CallExpression	"get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , type_attr -> children -> content )"		1910247	1					
ANR	1910307	Callee	get_encoder_from_prefix		1910247	0					
ANR	1910308	Identifier	get_encoder_from_prefix		1910247	0					
ANR	1910309	ArgumentList	SOAP_GLOBAL ( sdl )		1910247	1					
ANR	1910310	Argument	SOAP_GLOBAL ( sdl )		1910247	0					
ANR	1910311	CallExpression	SOAP_GLOBAL ( sdl )		1910247	0					
ANR	1910312	Callee	SOAP_GLOBAL		1910247	0					
ANR	1910313	Identifier	SOAP_GLOBAL		1910247	0					
ANR	1910314	ArgumentList	sdl		1910247	1					
ANR	1910315	Argument	sdl		1910247	0					
ANR	1910316	Identifier	sdl		1910247	0					
ANR	1910317	Argument	data		1910247	1					
ANR	1910318	Identifier	data		1910247	0					
ANR	1910319	Argument	type_attr -> children -> content		1910247	2					
ANR	1910320	PtrMemberAccess	type_attr -> children -> content		1910247	0					
ANR	1910321	PtrMemberAccess	type_attr -> children		1910247	0					
ANR	1910322	Identifier	type_attr		1910247	0					
ANR	1910323	Identifier	children		1910247	1					
ANR	1910324	Identifier	content		1910247	1					
ANR	1910325	IfStatement	if ( enc != NULL && enc != encode )		1910247	1					
ANR	1910326	Condition	enc != NULL && enc != encode	577:7:22969:22996	1910247	0	True				
ANR	1910327	AndExpression	enc != NULL && enc != encode		1910247	0		&&			
ANR	1910328	EqualityExpression	enc != NULL		1910247	0		!=			
ANR	1910329	Identifier	enc		1910247	0					
ANR	1910330	Identifier	NULL		1910247	1					
ANR	1910331	EqualityExpression	enc != encode		1910247	1		!=			
ANR	1910332	Identifier	enc		1910247	0					
ANR	1910333	Identifier	encode		1910247	1					
ANR	1910334	CompoundStatement		14:5:407:426	1910247	1					
ANR	1910335	IdentifierDeclStatement	encodePtr tmp = enc ;	578:5:23006:23025	1910247	0	True				
ANR	1910336	IdentifierDecl	tmp = enc		1910247	0					
ANR	1910337	IdentifierDeclType	encodePtr		1910247	0					
ANR	1910338	Identifier	tmp		1910247	1					
ANR	1910339	AssignmentExpression	tmp = enc		1910247	2		=			
ANR	1910340	Identifier	enc		1910247	0					
ANR	1910341	Identifier	enc		1910247	1					
ANR	1910342	WhileStatement	while ( tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX )		1910247	1					
ANR	1910343	Condition	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX	579:12:23039:23153	1910247	0	True				
ANR	1910344	AndExpression	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1910247	0		&&			
ANR	1910345	Identifier	tmp		1910247	0					
ANR	1910346	AndExpression	tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1910247	1		&&			
ANR	1910347	EqualityExpression	tmp -> details . sdl_type != NULL		1910247	0		!=			
ANR	1910348	MemberAccess	tmp -> details . sdl_type		1910247	0					
ANR	1910349	PtrMemberAccess	tmp -> details		1910247	0					
ANR	1910350	Identifier	tmp		1910247	0					
ANR	1910351	Identifier	details		1910247	1					
ANR	1910352	Identifier	sdl_type		1910247	1					
ANR	1910353	Identifier	NULL		1910247	1					
ANR	1910354	EqualityExpression	tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1910247	1		!=			
ANR	1910355	PtrMemberAccess	tmp -> details . sdl_type -> kind		1910247	0					
ANR	1910356	MemberAccess	tmp -> details . sdl_type		1910247	0					
ANR	1910357	PtrMemberAccess	tmp -> details		1910247	0					
ANR	1910358	Identifier	tmp		1910247	0					
ANR	1910359	Identifier	details		1910247	1					
ANR	1910360	Identifier	sdl_type		1910247	1					
ANR	1910361	Identifier	kind		1910247	1					
ANR	1910362	Identifier	XSD_TYPEKIND_COMPLEX		1910247	1					
ANR	1910363	CompoundStatement		17:65:557:557	1910247	1					
ANR	1910364	IfStatement	if ( enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode )		1910247	0					
ANR	1910365	Condition	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode	582:11:23169:23255	1910247	0	True				
ANR	1910366	OrExpression	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode		1910247	0		||			
ANR	1910367	EqualityExpression	enc == tmp -> details . sdl_type -> encode		1910247	0		==			
ANR	1910368	Identifier	enc		1910247	0					
ANR	1910369	PtrMemberAccess	tmp -> details . sdl_type -> encode		1910247	1					
ANR	1910370	MemberAccess	tmp -> details . sdl_type		1910247	0					
ANR	1910371	PtrMemberAccess	tmp -> details		1910247	0					
ANR	1910372	Identifier	tmp		1910247	0					
ANR	1910373	Identifier	details		1910247	1					
ANR	1910374	Identifier	sdl_type		1910247	1					
ANR	1910375	Identifier	encode		1910247	1					
ANR	1910376	EqualityExpression	tmp == tmp -> details . sdl_type -> encode		1910247	1		==			
ANR	1910377	Identifier	tmp		1910247	0					
ANR	1910378	PtrMemberAccess	tmp -> details . sdl_type -> encode		1910247	1					
ANR	1910379	MemberAccess	tmp -> details . sdl_type		1910247	0					
ANR	1910380	PtrMemberAccess	tmp -> details		1910247	0					
ANR	1910381	Identifier	tmp		1910247	0					
ANR	1910382	Identifier	details		1910247	1					
ANR	1910383	Identifier	sdl_type		1910247	1					
ANR	1910384	Identifier	encode		1910247	1					
ANR	1910385	CompoundStatement		19:49:659:659	1910247	1					
ANR	1910386	ExpressionStatement	enc = NULL	584:8:23268:23278	1910247	0	True				
ANR	1910387	AssignmentExpression	enc = NULL		1910247	0		=			
ANR	1910388	Identifier	enc		1910247	0					
ANR	1910389	Identifier	NULL		1910247	1					
ANR	1910390	BreakStatement	break ;	585:8:23288:23293	1910247	1	True				
ANR	1910391	ExpressionStatement	tmp = tmp -> details . sdl_type -> encode	587:7:23311:23346	1910247	1	True				
ANR	1910392	AssignmentExpression	tmp = tmp -> details . sdl_type -> encode		1910247	0		=			
ANR	1910393	Identifier	tmp		1910247	0					
ANR	1910394	PtrMemberAccess	tmp -> details . sdl_type -> encode		1910247	1					
ANR	1910395	MemberAccess	tmp -> details . sdl_type		1910247	0					
ANR	1910396	PtrMemberAccess	tmp -> details		1910247	0					
ANR	1910397	Identifier	tmp		1910247	0					
ANR	1910398	Identifier	details		1910247	1					
ANR	1910399	Identifier	sdl_type		1910247	1					
ANR	1910400	Identifier	encode		1910247	1					
ANR	1910401	IfStatement	if ( enc != NULL )		1910247	2					
ANR	1910402	Condition	enc != NULL	589:9:23364:23374	1910247	0	True				
ANR	1910403	EqualityExpression	enc != NULL		1910247	0		!=			
ANR	1910404	Identifier	enc		1910247	0					
ANR	1910405	Identifier	NULL		1910247	1					
ANR	1910406	CompoundStatement		25:22:778:778	1910247	1					
ANR	1910407	ExpressionStatement	encode = enc	590:7:23386:23398	1910247	0	True				
ANR	1910408	AssignmentExpression	encode = enc		1910247	0		=			
ANR	1910409	Identifier	encode		1910247	0					
ANR	1910410	Identifier	enc		1910247	1					
ANR	1910411	ReturnStatement	"return master_to_zval_int ( ret , encode , data ) ;"	595:1:23420:23464	1910247	2	True				
ANR	1910412	CallExpression	"master_to_zval_int ( ret , encode , data )"		1910247	0					
ANR	1910413	Callee	master_to_zval_int		1910247	0					
ANR	1910414	Identifier	master_to_zval_int		1910247	0					
ANR	1910415	ArgumentList	ret		1910247	1					
ANR	1910416	Argument	ret		1910247	0					
ANR	1910417	Identifier	ret		1910247	0					
ANR	1910418	Argument	encode		1910247	1					
ANR	1910419	Identifier	encode		1910247	0					
ANR	1910420	Argument	data		1910247	2					
ANR	1910421	Identifier	data		1910247	0					
ANR	1910422	ReturnType	zval *		1910247	1					
ANR	1910423	Identifier	master_to_zval		1910247	2					
ANR	1910424	ParameterList	"zval * ret , encodePtr encode , xmlNodePtr data"		1910247	3					
ANR	1910425	Parameter	zval * ret	564:21:22552:22560	1910247	0	True				
ANR	1910426	ParameterType	zval *		1910247	0					
ANR	1910427	Identifier	ret		1910247	1					
ANR	1910428	Parameter	encodePtr encode	564:32:22563:22578	1910247	1	True				
ANR	1910429	ParameterType	encodePtr		1910247	0					
ANR	1910430	Identifier	encode		1910247	1					
ANR	1910431	Parameter	xmlNodePtr data	564:50:22581:22595	1910247	2	True				
ANR	1910432	ParameterType	xmlNodePtr		1910247	0					
ANR	1910433	Identifier	data		1910247	1					
ANR	1910434	CFGEntryNode	ENTRY		1910247		True				
ANR	1910435	CFGExitNode	EXIT		1910247		True				
ANR	1910436	Symbol	encode		1910247						
ANR	1910437	Symbol	* tmp		1910247						
ANR	1910438	Symbol	data		1910247						
ANR	1910439	Symbol	tmp -> details . sdl_type -> kind		1910247						
ANR	1910440	Symbol	get_conversion		1910247						
ANR	1910441	Symbol	data -> properties		1910247						
ANR	1910442	Symbol	check_and_resolve_href		1910247						
ANR	1910443	Symbol	UNKNOWN_TYPE		1910247						
ANR	1910444	Symbol	tmp		1910247						
ANR	1910445	Symbol	master_to_zval_int		1910247						
ANR	1910446	Symbol	enc		1910247						
ANR	1910447	Symbol	tmp -> details . sdl_type -> encode		1910247						
ANR	1910448	Symbol	tmp -> details . sdl_type		1910247						
ANR	1910449	Symbol	* tmp -> details . sdl_type		1910247						
ANR	1910450	Symbol	* tmp -> details		1910247						
ANR	1910451	Symbol	ret		1910247						
ANR	1910452	Symbol	NULL		1910247						
ANR	1910453	Symbol	type_attr -> children		1910247						
ANR	1910454	Symbol	* * tmp		1910247						
ANR	1910455	Symbol	SOAP_GLOBAL		1910247						
ANR	1910456	Symbol	tmp -> details		1910247						
ANR	1910457	Symbol	* type_attr -> children		1910247						
ANR	1910458	Symbol	type_attr -> children -> content		1910247						
ANR	1910459	Symbol	XSD_TYPEKIND_COMPLEX		1910247						
ANR	1910460	Symbol	get_attribute_ex		1910247						
ANR	1910461	Symbol	get_encoder_from_prefix		1910247						
ANR	1910462	Symbol	* * type_attr		1910247						
ANR	1910463	Symbol	type_attr		1910247						
ANR	1910464	Symbol	sdl		1910247						
ANR	1910465	Symbol	XSI_NAMESPACE		1910247						
ANR	1910466	Symbol	* data		1910247						
ANR	1910467	Symbol	* type_attr		1910247						
ANR	1910468	Function	to_xml_user	598:0:23469:24326							
ANR	1910469	FunctionDef	"to_xml_user (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1910468	0					
ANR	1910470	CompoundStatement		599:0:23554:24326	1910468	0					
ANR	1910471	IdentifierDeclStatement	xmlNodePtr ret = NULL ;	600:1:23557:23578	1910468	0	True				
ANR	1910472	IdentifierDecl	ret = NULL		1910468	0					
ANR	1910473	IdentifierDeclType	xmlNodePtr		1910468	0					
ANR	1910474	Identifier	ret		1910468	1					
ANR	1910475	AssignmentExpression	ret = NULL		1910468	2		=			
ANR	1910476	Identifier	NULL		1910468	0					
ANR	1910477	Identifier	NULL		1910468	1					
ANR	1910478	IdentifierDeclStatement	zval return_value ;	601:1:23581:23598	1910468	1	True				
ANR	1910479	IdentifierDecl	return_value		1910468	0					
ANR	1910480	IdentifierDeclType	zval		1910468	0					
ANR	1910481	Identifier	return_value		1910468	1					
ANR	1910482	IfStatement	if ( type && type -> map && Z_TYPE ( type -> map -> to_xml ) != IS_UNDEF )		1910468	2					
ANR	1910483	Condition	type && type -> map && Z_TYPE ( type -> map -> to_xml ) != IS_UNDEF	603:5:23606:23663	1910468	0	True				
ANR	1910484	AndExpression	type && type -> map && Z_TYPE ( type -> map -> to_xml ) != IS_UNDEF		1910468	0		&&			
ANR	1910485	Identifier	type		1910468	0					
ANR	1910486	AndExpression	type -> map && Z_TYPE ( type -> map -> to_xml ) != IS_UNDEF		1910468	1		&&			
ANR	1910487	PtrMemberAccess	type -> map		1910468	0					
ANR	1910488	Identifier	type		1910468	0					
ANR	1910489	Identifier	map		1910468	1					
ANR	1910490	EqualityExpression	Z_TYPE ( type -> map -> to_xml ) != IS_UNDEF		1910468	1		!=			
ANR	1910491	CallExpression	Z_TYPE ( type -> map -> to_xml )		1910468	0					
ANR	1910492	Callee	Z_TYPE		1910468	0					
ANR	1910493	Identifier	Z_TYPE		1910468	0					
ANR	1910494	ArgumentList	type -> map -> to_xml		1910468	1					
ANR	1910495	Argument	type -> map -> to_xml		1910468	0					
ANR	1910496	PtrMemberAccess	type -> map -> to_xml		1910468	0					
ANR	1910497	PtrMemberAccess	type -> map		1910468	0					
ANR	1910498	Identifier	type		1910468	0					
ANR	1910499	Identifier	map		1910468	1					
ANR	1910500	Identifier	to_xml		1910468	1					
ANR	1910501	Identifier	IS_UNDEF		1910468	1					
ANR	1910502	CompoundStatement		5:65:111:111	1910468	1					
ANR	1910503	ExpressionStatement	ZVAL_NULL ( & return_value )	604:2:23670:23694	1910468	0	True				
ANR	1910504	CallExpression	ZVAL_NULL ( & return_value )		1910468	0					
ANR	1910505	Callee	ZVAL_NULL		1910468	0					
ANR	1910506	Identifier	ZVAL_NULL		1910468	0					
ANR	1910507	ArgumentList	& return_value		1910468	1					
ANR	1910508	Argument	& return_value		1910468	0					
ANR	1910509	UnaryOperationExpression	& return_value		1910468	0					
ANR	1910510	UnaryOperator	&		1910468	0					
ANR	1910511	Identifier	return_value		1910468	1					
ANR	1910512	IfStatement	"if ( call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_xml , & return_value , 1 , data ) == FAILURE )"		1910468	1					
ANR	1910513	Condition	"call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_xml , & return_value , 1 , data ) == FAILURE"	606:6:23703:23801	1910468	0	True				
ANR	1910514	EqualityExpression	"call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_xml , & return_value , 1 , data ) == FAILURE"		1910468	0		==			
ANR	1910515	CallExpression	"call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_xml , & return_value , 1 , data )"		1910468	0					
ANR	1910516	Callee	call_user_function		1910468	0					
ANR	1910517	Identifier	call_user_function		1910468	0					
ANR	1910518	ArgumentList	EG ( function_table )		1910468	1					
ANR	1910519	Argument	EG ( function_table )		1910468	0					
ANR	1910520	CallExpression	EG ( function_table )		1910468	0					
ANR	1910521	Callee	EG		1910468	0					
ANR	1910522	Identifier	EG		1910468	0					
ANR	1910523	ArgumentList	function_table		1910468	1					
ANR	1910524	Argument	function_table		1910468	0					
ANR	1910525	Identifier	function_table		1910468	0					
ANR	1910526	Argument	NULL		1910468	1					
ANR	1910527	Identifier	NULL		1910468	0					
ANR	1910528	Argument	& type -> map -> to_xml		1910468	2					
ANR	1910529	UnaryOperationExpression	& type -> map -> to_xml		1910468	0					
ANR	1910530	UnaryOperator	&		1910468	0					
ANR	1910531	PtrMemberAccess	type -> map -> to_xml		1910468	1					
ANR	1910532	PtrMemberAccess	type -> map		1910468	0					
ANR	1910533	Identifier	type		1910468	0					
ANR	1910534	Identifier	map		1910468	1					
ANR	1910535	Identifier	to_xml		1910468	1					
ANR	1910536	Argument	& return_value		1910468	3					
ANR	1910537	UnaryOperationExpression	& return_value		1910468	0					
ANR	1910538	UnaryOperator	&		1910468	0					
ANR	1910539	Identifier	return_value		1910468	1					
ANR	1910540	Argument	1		1910468	4					
ANR	1910541	PrimaryExpression	1		1910468	0					
ANR	1910542	Argument	data		1910468	5					
ANR	1910543	Identifier	data		1910468	0					
ANR	1910544	Identifier	FAILURE		1910468	1					
ANR	1910545	CompoundStatement		8:107:249:249	1910468	1					
ANR	1910546	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Error calling to_xml callback"" )"	607:3:23809:23872	1910468	0	True				
ANR	1910547	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Error calling to_xml callback"" )"		1910468	0					
ANR	1910548	Callee	soap_error0		1910468	0					
ANR	1910549	Identifier	soap_error0		1910468	0					
ANR	1910550	ArgumentList	E_ERROR		1910468	1					
ANR	1910551	Argument	E_ERROR		1910468	0					
ANR	1910552	Identifier	E_ERROR		1910468	0					
ANR	1910553	Argument	"""Encoding: Error calling to_xml callback"""		1910468	1					
ANR	1910554	PrimaryExpression	"""Encoding: Error calling to_xml callback"""		1910468	0					
ANR	1910555	IfStatement	if ( Z_TYPE ( return_value ) == IS_STRING )		1910468	2					
ANR	1910556	Condition	Z_TYPE ( return_value ) == IS_STRING	609:6:23884:23916	1910468	0	True				
ANR	1910557	EqualityExpression	Z_TYPE ( return_value ) == IS_STRING		1910468	0		==			
ANR	1910558	CallExpression	Z_TYPE ( return_value )		1910468	0					
ANR	1910559	Callee	Z_TYPE		1910468	0					
ANR	1910560	Identifier	Z_TYPE		1910468	0					
ANR	1910561	ArgumentList	return_value		1910468	1					
ANR	1910562	Argument	return_value		1910468	0					
ANR	1910563	Identifier	return_value		1910468	0					
ANR	1910564	Identifier	IS_STRING		1910468	1					
ANR	1910565	CompoundStatement		12:3:369:452	1910468	1					
ANR	1910566	IdentifierDeclStatement	"xmlDocPtr doc = soap_xmlParseMemory ( Z_STRVAL ( return_value ) , Z_STRLEN ( return_value ) ) ;"	610:3:23924:24007	1910468	0	True				
ANR	1910567	IdentifierDecl	"doc = soap_xmlParseMemory ( Z_STRVAL ( return_value ) , Z_STRLEN ( return_value ) )"		1910468	0					
ANR	1910568	IdentifierDeclType	xmlDocPtr		1910468	0					
ANR	1910569	Identifier	doc		1910468	1					
ANR	1910570	AssignmentExpression	"doc = soap_xmlParseMemory ( Z_STRVAL ( return_value ) , Z_STRLEN ( return_value ) )"		1910468	2		=			
ANR	1910571	Identifier	doc		1910468	0					
ANR	1910572	CallExpression	"soap_xmlParseMemory ( Z_STRVAL ( return_value ) , Z_STRLEN ( return_value ) )"		1910468	1					
ANR	1910573	Callee	soap_xmlParseMemory		1910468	0					
ANR	1910574	Identifier	soap_xmlParseMemory		1910468	0					
ANR	1910575	ArgumentList	Z_STRVAL ( return_value )		1910468	1					
ANR	1910576	Argument	Z_STRVAL ( return_value )		1910468	0					
ANR	1910577	CallExpression	Z_STRVAL ( return_value )		1910468	0					
ANR	1910578	Callee	Z_STRVAL		1910468	0					
ANR	1910579	Identifier	Z_STRVAL		1910468	0					
ANR	1910580	ArgumentList	return_value		1910468	1					
ANR	1910581	Argument	return_value		1910468	0					
ANR	1910582	Identifier	return_value		1910468	0					
ANR	1910583	Argument	Z_STRLEN ( return_value )		1910468	1					
ANR	1910584	CallExpression	Z_STRLEN ( return_value )		1910468	0					
ANR	1910585	Callee	Z_STRLEN		1910468	0					
ANR	1910586	Identifier	Z_STRLEN		1910468	0					
ANR	1910587	ArgumentList	return_value		1910468	1					
ANR	1910588	Argument	return_value		1910468	0					
ANR	1910589	Identifier	return_value		1910468	0					
ANR	1910590	IfStatement	if ( doc && doc -> children )		1910468	1					
ANR	1910591	Condition	doc && doc -> children	611:7:24016:24035	1910468	0	True				
ANR	1910592	AndExpression	doc && doc -> children		1910468	0		&&			
ANR	1910593	Identifier	doc		1910468	0					
ANR	1910594	PtrMemberAccess	doc -> children		1910468	1					
ANR	1910595	Identifier	doc		1910468	0					
ANR	1910596	Identifier	children		1910468	1					
ANR	1910597	CompoundStatement		13:29:483:483	1910468	1					
ANR	1910598	ExpressionStatement	"ret = xmlDocCopyNode ( doc -> children , parent -> doc , 1 )"	612:4:24044:24095	1910468	0	True				
ANR	1910599	AssignmentExpression	"ret = xmlDocCopyNode ( doc -> children , parent -> doc , 1 )"		1910468	0		=			
ANR	1910600	Identifier	ret		1910468	0					
ANR	1910601	CallExpression	"xmlDocCopyNode ( doc -> children , parent -> doc , 1 )"		1910468	1					
ANR	1910602	Callee	xmlDocCopyNode		1910468	0					
ANR	1910603	Identifier	xmlDocCopyNode		1910468	0					
ANR	1910604	ArgumentList	doc -> children		1910468	1					
ANR	1910605	Argument	doc -> children		1910468	0					
ANR	1910606	PtrMemberAccess	doc -> children		1910468	0					
ANR	1910607	Identifier	doc		1910468	0					
ANR	1910608	Identifier	children		1910468	1					
ANR	1910609	Argument	parent -> doc		1910468	1					
ANR	1910610	PtrMemberAccess	parent -> doc		1910468	0					
ANR	1910611	Identifier	parent		1910468	0					
ANR	1910612	Identifier	doc		1910468	1					
ANR	1910613	Argument	1		1910468	2					
ANR	1910614	PrimaryExpression	1		1910468	0					
ANR	1910615	ExpressionStatement	xmlFreeDoc ( doc )	614:3:24105:24120	1910468	2	True				
ANR	1910616	CallExpression	xmlFreeDoc ( doc )		1910468	0					
ANR	1910617	Callee	xmlFreeDoc		1910468	0					
ANR	1910618	Identifier	xmlFreeDoc		1910468	0					
ANR	1910619	ArgumentList	doc		1910468	1					
ANR	1910620	Argument	doc		1910468	0					
ANR	1910621	Identifier	doc		1910468	0					
ANR	1910622	ExpressionStatement	zval_ptr_dtor ( & return_value )	617:2:24129:24157	1910468	3	True				
ANR	1910623	CallExpression	zval_ptr_dtor ( & return_value )		1910468	0					
ANR	1910624	Callee	zval_ptr_dtor		1910468	0					
ANR	1910625	Identifier	zval_ptr_dtor		1910468	0					
ANR	1910626	ArgumentList	& return_value		1910468	1					
ANR	1910627	Argument	& return_value		1910468	0					
ANR	1910628	UnaryOperationExpression	& return_value		1910468	0					
ANR	1910629	UnaryOperator	&		1910468	0					
ANR	1910630	Identifier	return_value		1910468	1					
ANR	1910631	IfStatement	if ( ! ret )		1910468	3					
ANR	1910632	Condition	! ret	619:5:24167:24170	1910468	0	True				
ANR	1910633	UnaryOperationExpression	! ret		1910468	0					
ANR	1910634	UnaryOperator	!		1910468	0					
ANR	1910635	Identifier	ret		1910468	1					
ANR	1910636	CompoundStatement		21:11:618:618	1910468	1					
ANR	1910637	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	620:2:24177:24218	1910468	0	True				
ANR	1910638	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1910468	0		=			
ANR	1910639	Identifier	ret		1910468	0					
ANR	1910640	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1910468	1					
ANR	1910641	Callee	xmlNewNode		1910468	0					
ANR	1910642	Identifier	xmlNewNode		1910468	0					
ANR	1910643	ArgumentList	NULL		1910468	1					
ANR	1910644	Argument	NULL		1910468	0					
ANR	1910645	Identifier	NULL		1910468	0					
ANR	1910646	Argument	"BAD_CAST ( ""BOGUS"" )"		1910468	1					
ANR	1910647	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1910468	0					
ANR	1910648	Callee	BAD_CAST		1910468	0					
ANR	1910649	Identifier	BAD_CAST		1910468	0					
ANR	1910650	ArgumentList	"""BOGUS"""		1910468	1					
ANR	1910651	Argument	"""BOGUS"""		1910468	0					
ANR	1910652	PrimaryExpression	"""BOGUS"""		1910468	0					
ANR	1910653	ExpressionStatement	"xmlAddChild ( parent , ret )"	622:1:24224:24248	1910468	4	True				
ANR	1910654	CallExpression	"xmlAddChild ( parent , ret )"		1910468	0					
ANR	1910655	Callee	xmlAddChild		1910468	0					
ANR	1910656	Identifier	xmlAddChild		1910468	0					
ANR	1910657	ArgumentList	parent		1910468	1					
ANR	1910658	Argument	parent		1910468	0					
ANR	1910659	Identifier	parent		1910468	0					
ANR	1910660	Argument	ret		1910468	1					
ANR	1910661	Identifier	ret		1910468	0					
ANR	1910662	IfStatement	if ( style == SOAP_ENCODED )		1910468	5					
ANR	1910663	Condition	style == SOAP_ENCODED	623:5:24255:24275	1910468	0	True				
ANR	1910664	EqualityExpression	style == SOAP_ENCODED		1910468	0		==			
ANR	1910665	Identifier	style		1910468	0					
ANR	1910666	Identifier	SOAP_ENCODED		1910468	1					
ANR	1910667	CompoundStatement		25:28:723:723	1910468	1					
ANR	1910668	ExpressionStatement	"set_ns_and_type ( ret , type )"	624:2:24282:24308	1910468	0	True				
ANR	1910669	CallExpression	"set_ns_and_type ( ret , type )"		1910468	0					
ANR	1910670	Callee	set_ns_and_type		1910468	0					
ANR	1910671	Identifier	set_ns_and_type		1910468	0					
ANR	1910672	ArgumentList	ret		1910468	1					
ANR	1910673	Argument	ret		1910468	0					
ANR	1910674	Identifier	ret		1910468	0					
ANR	1910675	Argument	type		1910468	1					
ANR	1910676	Identifier	type		1910468	0					
ANR	1910677	ReturnStatement	return ret ;	626:1:24314:24324	1910468	6	True				
ANR	1910678	Identifier	ret		1910468	0					
ANR	1910679	ReturnType	xmlNodePtr		1910468	1					
ANR	1910680	Identifier	to_xml_user		1910468	2					
ANR	1910681	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1910468	3					
ANR	1910682	Parameter	encodeTypePtr type	598:23:23492:23509	1910468	0	True				
ANR	1910683	ParameterType	encodeTypePtr		1910468	0					
ANR	1910684	Identifier	type		1910468	1					
ANR	1910685	Parameter	zval * data	598:43:23512:23521	1910468	1	True				
ANR	1910686	ParameterType	zval *		1910468	0					
ANR	1910687	Identifier	data		1910468	1					
ANR	1910688	Parameter	int style	598:55:23524:23532	1910468	2	True				
ANR	1910689	ParameterType	int		1910468	0					
ANR	1910690	Identifier	style		1910468	1					
ANR	1910691	Parameter	xmlNodePtr parent	598:66:23535:23551	1910468	3	True				
ANR	1910692	ParameterType	xmlNodePtr		1910468	0					
ANR	1910693	Identifier	parent		1910468	1					
ANR	1910694	CFGEntryNode	ENTRY		1910468		True				
ANR	1910695	CFGExitNode	EXIT		1910468		True				
ANR	1910696	Symbol	* type -> map		1910468						
ANR	1910697	Symbol	parent		1910468						
ANR	1910698	Symbol	return_value		1910468						
ANR	1910699	Symbol	* parent		1910468						
ANR	1910700	Symbol	data		1910468						
ANR	1910701	Symbol	Z_TYPE		1910468						
ANR	1910702	Symbol	Z_STRLEN		1910468						
ANR	1910703	Symbol	type		1910468						
ANR	1910704	Symbol	parent -> doc		1910468						
ANR	1910705	Symbol	doc -> children		1910468						
ANR	1910706	Symbol	* type		1910468						
ANR	1910707	Symbol	Z_STRVAL		1910468						
ANR	1910708	Symbol	type -> map -> to_xml		1910468						
ANR	1910709	Symbol	IS_STRING		1910468						
ANR	1910710	Symbol	* doc		1910468						
ANR	1910711	Symbol	IS_UNDEF		1910468						
ANR	1910712	Symbol	ret		1910468						
ANR	1910713	Symbol	EG		1910468						
ANR	1910714	Symbol	NULL		1910468						
ANR	1910715	Symbol	call_user_function		1910468						
ANR	1910716	Symbol	xmlNewNode		1910468						
ANR	1910717	Symbol	FAILURE		1910468						
ANR	1910718	Symbol	& return_value		1910468						
ANR	1910719	Symbol	soap_xmlParseMemory		1910468						
ANR	1910720	Symbol	E_ERROR		1910468						
ANR	1910721	Symbol	xmlDocCopyNode		1910468						
ANR	1910722	Symbol	type -> map		1910468						
ANR	1910723	Symbol	doc		1910468						
ANR	1910724	Symbol	style		1910468						
ANR	1910725	Symbol	SOAP_ENCODED		1910468						
ANR	1910726	Symbol	* * type		1910468						
ANR	1910727	Symbol	& type -> map -> to_xml		1910468						
ANR	1910728	Symbol	function_table		1910468						
ANR	1910729	Symbol	BAD_CAST		1910468						
ANR	1910730	Function	to_zval_user	629:0:24329:25003							
ANR	1910731	FunctionDef	"to_zval_user (zval * ret , encodeTypePtr type , xmlNodePtr node)"		1910730	0					
ANR	1910732	CompoundStatement		630:0:24396:25003	1910730	0					
ANR	1910733	IfStatement	if ( type && type -> map && Z_TYPE ( type -> map -> to_zval ) != IS_UNDEF )		1910730	0					
ANR	1910734	Condition	type && type -> map && Z_TYPE ( type -> map -> to_zval ) != IS_UNDEF	631:5:24403:24461	1910730	0	True				
ANR	1910735	AndExpression	type && type -> map && Z_TYPE ( type -> map -> to_zval ) != IS_UNDEF		1910730	0		&&			
ANR	1910736	Identifier	type		1910730	0					
ANR	1910737	AndExpression	type -> map && Z_TYPE ( type -> map -> to_zval ) != IS_UNDEF		1910730	1		&&			
ANR	1910738	PtrMemberAccess	type -> map		1910730	0					
ANR	1910739	Identifier	type		1910730	0					
ANR	1910740	Identifier	map		1910730	1					
ANR	1910741	EqualityExpression	Z_TYPE ( type -> map -> to_zval ) != IS_UNDEF		1910730	1		!=			
ANR	1910742	CallExpression	Z_TYPE ( type -> map -> to_zval )		1910730	0					
ANR	1910743	Callee	Z_TYPE		1910730	0					
ANR	1910744	Identifier	Z_TYPE		1910730	0					
ANR	1910745	ArgumentList	type -> map -> to_zval		1910730	1					
ANR	1910746	Argument	type -> map -> to_zval		1910730	0					
ANR	1910747	PtrMemberAccess	type -> map -> to_zval		1910730	0					
ANR	1910748	PtrMemberAccess	type -> map		1910730	0					
ANR	1910749	Identifier	type		1910730	0					
ANR	1910750	Identifier	map		1910730	1					
ANR	1910751	Identifier	to_zval		1910730	1					
ANR	1910752	Identifier	IS_UNDEF		1910730	1					
ANR	1910753	CompoundStatement		5:2:104:119	1910730	1					
ANR	1910754	IdentifierDeclStatement	xmlBufferPtr buf ;	632:2:24468:24484	1910730	0	True				
ANR	1910755	IdentifierDecl	buf		1910730	0					
ANR	1910756	IdentifierDeclType	xmlBufferPtr		1910730	0					
ANR	1910757	Identifier	buf		1910730	1					
ANR	1910758	IdentifierDeclStatement	zval data ;	633:2:24488:24497	1910730	1	True				
ANR	1910759	IdentifierDecl	data		1910730	0					
ANR	1910760	IdentifierDeclType	zval		1910730	0					
ANR	1910761	Identifier	data		1910730	1					
ANR	1910762	IdentifierDeclStatement	xmlNodePtr copy ;	634:2:24501:24516	1910730	2	True				
ANR	1910763	IdentifierDecl	copy		1910730	0					
ANR	1910764	IdentifierDeclType	xmlNodePtr		1910730	0					
ANR	1910765	Identifier	copy		1910730	1					
ANR	1910766	ExpressionStatement	"copy = xmlCopyNode ( node , 1 )"	636:2:24521:24548	1910730	3	True				
ANR	1910767	AssignmentExpression	"copy = xmlCopyNode ( node , 1 )"		1910730	0		=			
ANR	1910768	Identifier	copy		1910730	0					
ANR	1910769	CallExpression	"xmlCopyNode ( node , 1 )"		1910730	1					
ANR	1910770	Callee	xmlCopyNode		1910730	0					
ANR	1910771	Identifier	xmlCopyNode		1910730	0					
ANR	1910772	ArgumentList	node		1910730	1					
ANR	1910773	Argument	node		1910730	0					
ANR	1910774	Identifier	node		1910730	0					
ANR	1910775	Argument	1		1910730	1					
ANR	1910776	PrimaryExpression	1		1910730	0					
ANR	1910777	ExpressionStatement	buf = xmlBufferCreate ( )	637:2:24552:24575	1910730	4	True				
ANR	1910778	AssignmentExpression	buf = xmlBufferCreate ( )		1910730	0		=			
ANR	1910779	Identifier	buf		1910730	0					
ANR	1910780	CallExpression	xmlBufferCreate ( )		1910730	1					
ANR	1910781	Callee	xmlBufferCreate		1910730	0					
ANR	1910782	Identifier	xmlBufferCreate		1910730	0					
ANR	1910783	ArgumentList			1910730	1					
ANR	1910784	ExpressionStatement	"xmlNodeDump ( buf , NULL , copy , 0 , 0 )"	638:2:24579:24613	1910730	5	True				
ANR	1910785	CallExpression	"xmlNodeDump ( buf , NULL , copy , 0 , 0 )"		1910730	0					
ANR	1910786	Callee	xmlNodeDump		1910730	0					
ANR	1910787	Identifier	xmlNodeDump		1910730	0					
ANR	1910788	ArgumentList	buf		1910730	1					
ANR	1910789	Argument	buf		1910730	0					
ANR	1910790	Identifier	buf		1910730	0					
ANR	1910791	Argument	NULL		1910730	1					
ANR	1910792	Identifier	NULL		1910730	0					
ANR	1910793	Argument	copy		1910730	2					
ANR	1910794	Identifier	copy		1910730	0					
ANR	1910795	Argument	0		1910730	3					
ANR	1910796	PrimaryExpression	0		1910730	0					
ANR	1910797	Argument	0		1910730	4					
ANR	1910798	PrimaryExpression	0		1910730	0					
ANR	1910799	ExpressionStatement	"ZVAL_STRING ( & data , ( char * ) xmlBufferContent ( buf ) )"	639:2:24617:24665	1910730	6	True				
ANR	1910800	CallExpression	"ZVAL_STRING ( & data , ( char * ) xmlBufferContent ( buf ) )"		1910730	0					
ANR	1910801	Callee	ZVAL_STRING		1910730	0					
ANR	1910802	Identifier	ZVAL_STRING		1910730	0					
ANR	1910803	ArgumentList	& data		1910730	1					
ANR	1910804	Argument	& data		1910730	0					
ANR	1910805	UnaryOperationExpression	& data		1910730	0					
ANR	1910806	UnaryOperator	&		1910730	0					
ANR	1910807	Identifier	data		1910730	1					
ANR	1910808	Argument	( char * ) xmlBufferContent ( buf )		1910730	1					
ANR	1910809	CastExpression	( char * ) xmlBufferContent ( buf )		1910730	0					
ANR	1910810	CastTarget	char *		1910730	0					
ANR	1910811	CallExpression	xmlBufferContent ( buf )		1910730	1					
ANR	1910812	Callee	xmlBufferContent		1910730	0					
ANR	1910813	Identifier	xmlBufferContent		1910730	0					
ANR	1910814	ArgumentList	buf		1910730	1					
ANR	1910815	Argument	buf		1910730	0					
ANR	1910816	Identifier	buf		1910730	0					
ANR	1910817	ExpressionStatement	xmlBufferFree ( buf )	640:2:24669:24687	1910730	7	True				
ANR	1910818	CallExpression	xmlBufferFree ( buf )		1910730	0					
ANR	1910819	Callee	xmlBufferFree		1910730	0					
ANR	1910820	Identifier	xmlBufferFree		1910730	0					
ANR	1910821	ArgumentList	buf		1910730	1					
ANR	1910822	Argument	buf		1910730	0					
ANR	1910823	Identifier	buf		1910730	0					
ANR	1910824	ExpressionStatement	xmlFreeNode ( copy )	641:2:24691:24708	1910730	8	True				
ANR	1910825	CallExpression	xmlFreeNode ( copy )		1910730	0					
ANR	1910826	Callee	xmlFreeNode		1910730	0					
ANR	1910827	Identifier	xmlFreeNode		1910730	0					
ANR	1910828	ArgumentList	copy		1910730	1					
ANR	1910829	Argument	copy		1910730	0					
ANR	1910830	Identifier	copy		1910730	0					
ANR	1910831	IfStatement	"if ( call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_zval , ret , 1 , & data ) == FAILURE )"		1910730	9					
ANR	1910832	Condition	"call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_zval , ret , 1 , & data ) == FAILURE"	643:6:24717:24807	1910730	0	True				
ANR	1910833	EqualityExpression	"call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_zval , ret , 1 , & data ) == FAILURE"		1910730	0		==			
ANR	1910834	CallExpression	"call_user_function ( EG ( function_table ) , NULL , & type -> map -> to_zval , ret , 1 , & data )"		1910730	0					
ANR	1910835	Callee	call_user_function		1910730	0					
ANR	1910836	Identifier	call_user_function		1910730	0					
ANR	1910837	ArgumentList	EG ( function_table )		1910730	1					
ANR	1910838	Argument	EG ( function_table )		1910730	0					
ANR	1910839	CallExpression	EG ( function_table )		1910730	0					
ANR	1910840	Callee	EG		1910730	0					
ANR	1910841	Identifier	EG		1910730	0					
ANR	1910842	ArgumentList	function_table		1910730	1					
ANR	1910843	Argument	function_table		1910730	0					
ANR	1910844	Identifier	function_table		1910730	0					
ANR	1910845	Argument	NULL		1910730	1					
ANR	1910846	Identifier	NULL		1910730	0					
ANR	1910847	Argument	& type -> map -> to_zval		1910730	2					
ANR	1910848	UnaryOperationExpression	& type -> map -> to_zval		1910730	0					
ANR	1910849	UnaryOperator	&		1910730	0					
ANR	1910850	PtrMemberAccess	type -> map -> to_zval		1910730	1					
ANR	1910851	PtrMemberAccess	type -> map		1910730	0					
ANR	1910852	Identifier	type		1910730	0					
ANR	1910853	Identifier	map		1910730	1					
ANR	1910854	Identifier	to_zval		1910730	1					
ANR	1910855	Argument	ret		1910730	3					
ANR	1910856	Identifier	ret		1910730	0					
ANR	1910857	Argument	1		1910730	4					
ANR	1910858	PrimaryExpression	1		1910730	0					
ANR	1910859	Argument	& data		1910730	5					
ANR	1910860	UnaryOperationExpression	& data		1910730	0					
ANR	1910861	UnaryOperator	&		1910730	0					
ANR	1910862	Identifier	data		1910730	1					
ANR	1910863	Identifier	FAILURE		1910730	1					
ANR	1910864	CompoundStatement		14:99:413:413	1910730	1					
ANR	1910865	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Error calling from_xml callback"" )"	644:3:24815:24880	1910730	0	True				
ANR	1910866	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Error calling from_xml callback"" )"		1910730	0					
ANR	1910867	Callee	soap_error0		1910730	0					
ANR	1910868	Identifier	soap_error0		1910730	0					
ANR	1910869	ArgumentList	E_ERROR		1910730	1					
ANR	1910870	Argument	E_ERROR		1910730	0					
ANR	1910871	Identifier	E_ERROR		1910730	0					
ANR	1910872	Argument	"""Encoding: Error calling from_xml callback"""		1910730	1					
ANR	1910873	PrimaryExpression	"""Encoding: Error calling from_xml callback"""		1910730	0					
ANR	1910874	ElseStatement	else		1910730	0					
ANR	1910875	IfStatement	if ( EG ( exception ) )		1910730	0					
ANR	1910876	Condition	EG ( exception )	645:13:24895:24907	1910730	0	True				
ANR	1910877	CallExpression	EG ( exception )		1910730	0					
ANR	1910878	Callee	EG		1910730	0					
ANR	1910879	Identifier	EG		1910730	0					
ANR	1910880	ArgumentList	exception		1910730	1					
ANR	1910881	Argument	exception		1910730	0					
ANR	1910882	Identifier	exception		1910730	0					
ANR	1910883	CompoundStatement		16:28:513:513	1910730	1					
ANR	1910884	ExpressionStatement	ZVAL_NULL ( ret )	646:3:24915:24929	1910730	0	True				
ANR	1910885	CallExpression	ZVAL_NULL ( ret )		1910730	0					
ANR	1910886	Callee	ZVAL_NULL		1910730	0					
ANR	1910887	Identifier	ZVAL_NULL		1910730	0					
ANR	1910888	ArgumentList	ret		1910730	1					
ANR	1910889	Argument	ret		1910730	0					
ANR	1910890	Identifier	ret		1910730	0					
ANR	1910891	ExpressionStatement	zval_ptr_dtor ( & data )	648:2:24937:24957	1910730	10	True				
ANR	1910892	CallExpression	zval_ptr_dtor ( & data )		1910730	0					
ANR	1910893	Callee	zval_ptr_dtor		1910730	0					
ANR	1910894	Identifier	zval_ptr_dtor		1910730	0					
ANR	1910895	ArgumentList	& data		1910730	1					
ANR	1910896	Argument	& data		1910730	0					
ANR	1910897	UnaryOperationExpression	& data		1910730	0					
ANR	1910898	UnaryOperator	&		1910730	0					
ANR	1910899	Identifier	data		1910730	1					
ANR	1910900	ElseStatement	else		1910730	0					
ANR	1910901	CompoundStatement		20:8:570:570	1910730	0					
ANR	1910902	ExpressionStatement	ZVAL_NULL ( ret )	650:2:24971:24985	1910730	0	True				
ANR	1910903	CallExpression	ZVAL_NULL ( ret )		1910730	0					
ANR	1910904	Callee	ZVAL_NULL		1910730	0					
ANR	1910905	Identifier	ZVAL_NULL		1910730	0					
ANR	1910906	ArgumentList	ret		1910730	1					
ANR	1910907	Argument	ret		1910730	0					
ANR	1910908	Identifier	ret		1910730	0					
ANR	1910909	ReturnStatement	return ret ;	652:1:24991:25001	1910730	1	True				
ANR	1910910	Identifier	ret		1910730	0					
ANR	1910911	ReturnType	zval *		1910730	1					
ANR	1910912	Identifier	to_zval_user		1910730	2					
ANR	1910913	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr node"		1910730	3					
ANR	1910914	Parameter	zval * ret	629:19:24348:24356	1910730	0	True				
ANR	1910915	ParameterType	zval *		1910730	0					
ANR	1910916	Identifier	ret		1910730	1					
ANR	1910917	Parameter	encodeTypePtr type	629:30:24359:24376	1910730	1	True				
ANR	1910918	ParameterType	encodeTypePtr		1910730	0					
ANR	1910919	Identifier	type		1910730	1					
ANR	1910920	Parameter	xmlNodePtr node	629:50:24379:24393	1910730	2	True				
ANR	1910921	ParameterType	xmlNodePtr		1910730	0					
ANR	1910922	Identifier	node		1910730	1					
ANR	1910923	CFGEntryNode	ENTRY		1910730		True				
ANR	1910924	CFGExitNode	EXIT		1910730		True				
ANR	1910925	Symbol	* type -> map		1910730						
ANR	1910926	Symbol	exception		1910730						
ANR	1910927	Symbol	xmlBufferCreate		1910730						
ANR	1910928	Symbol	data		1910730						
ANR	1910929	Symbol	& type -> map -> to_zval		1910730						
ANR	1910930	Symbol	Z_TYPE		1910730						
ANR	1910931	Symbol	xmlCopyNode		1910730						
ANR	1910932	Symbol	type		1910730						
ANR	1910933	Symbol	type -> map -> to_zval		1910730						
ANR	1910934	Symbol	* type		1910730						
ANR	1910935	Symbol	copy		1910730						
ANR	1910936	Symbol	IS_UNDEF		1910730						
ANR	1910937	Symbol	ret		1910730						
ANR	1910938	Symbol	EG		1910730						
ANR	1910939	Symbol	NULL		1910730						
ANR	1910940	Symbol	call_user_function		1910730						
ANR	1910941	Symbol	FAILURE		1910730						
ANR	1910942	Symbol	& data		1910730						
ANR	1910943	Symbol	xmlBufferContent		1910730						
ANR	1910944	Symbol	node		1910730						
ANR	1910945	Symbol	buf		1910730						
ANR	1910946	Symbol	E_ERROR		1910730						
ANR	1910947	Symbol	type -> map		1910730						
ANR	1910948	Symbol	* * type		1910730						
ANR	1910949	Symbol	function_table		1910730						
ANR	1910950	Function	to_zval_string	657:0:25142:26171							
ANR	1910951	FunctionDef	"to_zval_string (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1910950	0					
ANR	1910952	CompoundStatement		658:0:25218:26171	1910950	0					
ANR	1910953	ExpressionStatement	ZVAL_NULL ( ret )	659:1:25221:25235	1910950	0	True				
ANR	1910954	CallExpression	ZVAL_NULL ( ret )		1910950	0					
ANR	1910955	Callee	ZVAL_NULL		1910950	0					
ANR	1910956	Identifier	ZVAL_NULL		1910950	0					
ANR	1910957	ArgumentList	ret		1910950	1					
ANR	1910958	Argument	ret		1910950	0					
ANR	1910959	Identifier	ret		1910950	0					
ANR	1910960	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	660:1:25238:25262	1910950	1	True				
ANR	1910961	CallExpression	"FIND_XML_NULL ( data , ret )"		1910950	0					
ANR	1910962	Callee	FIND_XML_NULL		1910950	0					
ANR	1910963	Identifier	FIND_XML_NULL		1910950	0					
ANR	1910964	ArgumentList	data		1910950	1					
ANR	1910965	Argument	data		1910950	0					
ANR	1910966	Identifier	data		1910950	0					
ANR	1910967	Argument	ret		1910950	1					
ANR	1910968	Identifier	ret		1910950	0					
ANR	1910969	IfStatement	if ( data && data -> children )		1910950	2					
ANR	1910970	Condition	data && data -> children	661:5:25269:25290	1910950	0	True				
ANR	1910971	AndExpression	data && data -> children		1910950	0		&&			
ANR	1910972	Identifier	data		1910950	0					
ANR	1910973	PtrMemberAccess	data -> children		1910950	1					
ANR	1910974	Identifier	data		1910950	0					
ANR	1910975	Identifier	children		1910950	1					
ANR	1910976	CompoundStatement		4:29:74:74	1910950	1					
ANR	1910977	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1910950	0					
ANR	1910978	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	662:6:25301:25369	1910950	0	True				
ANR	1910979	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1910950	0		&&			
ANR	1910980	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1910950	0		==			
ANR	1910981	PtrMemberAccess	data -> children -> type		1910950	0					
ANR	1910982	PtrMemberAccess	data -> children		1910950	0					
ANR	1910983	Identifier	data		1910950	0					
ANR	1910984	Identifier	children		1910950	1					
ANR	1910985	Identifier	type		1910950	1					
ANR	1910986	Identifier	XML_TEXT_NODE		1910950	1					
ANR	1910987	EqualityExpression	data -> children -> next == NULL		1910950	1		==			
ANR	1910988	PtrMemberAccess	data -> children -> next		1910950	0					
ANR	1910989	PtrMemberAccess	data -> children		1910950	0					
ANR	1910990	Identifier	data		1910950	0					
ANR	1910991	Identifier	children		1910950	1					
ANR	1910992	Identifier	next		1910950	1					
ANR	1910993	Identifier	NULL		1910950	1					
ANR	1910994	CompoundStatement		5:77:153:153	1910950	1					
ANR	1910995	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1910950	0					
ANR	1910996	Condition	SOAP_GLOBAL ( encoding ) != NULL	663:7:25381:25409	1910950	0	True				
ANR	1910997	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1910950	0		!=			
ANR	1910998	CallExpression	SOAP_GLOBAL ( encoding )		1910950	0					
ANR	1910999	Callee	SOAP_GLOBAL		1910950	0					
ANR	1911000	Identifier	SOAP_GLOBAL		1910950	0					
ANR	1911001	ArgumentList	encoding		1910950	1					
ANR	1911002	Argument	encoding		1910950	0					
ANR	1911003	Identifier	encoding		1910950	0					
ANR	1911004	Identifier	NULL		1910950	1					
ANR	1911005	CompoundStatement		9:4:348:405	1910950	1					
ANR	1911006	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) ) ;"	664:4:25418:25519	1910950	0	True				
ANR	1911007	IdentifierDecl	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1910950	0					
ANR	1911008	IdentifierDeclType	xmlBufferPtr		1910950	0					
ANR	1911009	Identifier	in		1910950	1					
ANR	1911010	AssignmentExpression	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1910950	2		=			
ANR	1911011	Identifier	in		1910950	0					
ANR	1911012	CallExpression	"xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1910950	1					
ANR	1911013	Callee	xmlBufferCreateStatic		1910950	0					
ANR	1911014	Identifier	xmlBufferCreateStatic		1910950	0					
ANR	1911015	ArgumentList	data -> children -> content		1910950	1					
ANR	1911016	Argument	data -> children -> content		1910950	0					
ANR	1911017	PtrMemberAccess	data -> children -> content		1910950	0					
ANR	1911018	PtrMemberAccess	data -> children		1910950	0					
ANR	1911019	Identifier	data		1910950	0					
ANR	1911020	Identifier	children		1910950	1					
ANR	1911021	Identifier	content		1910950	1					
ANR	1911022	Argument	xmlStrlen ( data -> children -> content )		1910950	1					
ANR	1911023	CallExpression	xmlStrlen ( data -> children -> content )		1910950	0					
ANR	1911024	Callee	xmlStrlen		1910950	0					
ANR	1911025	Identifier	xmlStrlen		1910950	0					
ANR	1911026	ArgumentList	data -> children -> content		1910950	1					
ANR	1911027	Argument	data -> children -> content		1910950	0					
ANR	1911028	PtrMemberAccess	data -> children -> content		1910950	0					
ANR	1911029	PtrMemberAccess	data -> children		1910950	0					
ANR	1911030	Identifier	data		1910950	0					
ANR	1911031	Identifier	children		1910950	1					
ANR	1911032	Identifier	content		1910950	1					
ANR	1911033	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	665:4:25525:25561	1910950	1	True				
ANR	1911034	IdentifierDecl	out = xmlBufferCreate ( )		1910950	0					
ANR	1911035	IdentifierDeclType	xmlBufferPtr		1910950	0					
ANR	1911036	Identifier	out		1910950	1					
ANR	1911037	AssignmentExpression	out = xmlBufferCreate ( )		1910950	2		=			
ANR	1911038	Identifier	out		1910950	0					
ANR	1911039	CallExpression	xmlBufferCreate ( )		1910950	1					
ANR	1911040	Callee	xmlBufferCreate		1910950	0					
ANR	1911041	Identifier	xmlBufferCreate		1910950	0					
ANR	1911042	ArgumentList			1910950	1					
ANR	1911043	IdentifierDeclStatement	"int n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	666:4:25567:25624	1910950	2	True				
ANR	1911044	IdentifierDecl	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1910950	0					
ANR	1911045	IdentifierDeclType	int		1910950	0					
ANR	1911046	Identifier	n		1910950	1					
ANR	1911047	AssignmentExpression	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1910950	2		=			
ANR	1911048	Identifier	n		1910950	0					
ANR	1911049	CallExpression	"xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1910950	1					
ANR	1911050	Callee	xmlCharEncOutFunc		1910950	0					
ANR	1911051	Identifier	xmlCharEncOutFunc		1910950	0					
ANR	1911052	ArgumentList	SOAP_GLOBAL ( encoding )		1910950	1					
ANR	1911053	Argument	SOAP_GLOBAL ( encoding )		1910950	0					
ANR	1911054	CallExpression	SOAP_GLOBAL ( encoding )		1910950	0					
ANR	1911055	Callee	SOAP_GLOBAL		1910950	0					
ANR	1911056	Identifier	SOAP_GLOBAL		1910950	0					
ANR	1911057	ArgumentList	encoding		1910950	1					
ANR	1911058	Argument	encoding		1910950	0					
ANR	1911059	Identifier	encoding		1910950	0					
ANR	1911060	Argument	out		1910950	1					
ANR	1911061	Identifier	out		1910950	0					
ANR	1911062	Argument	in		1910950	2					
ANR	1911063	Identifier	in		1910950	0					
ANR	1911064	IfStatement	if ( n >= 0 )		1910950	3					
ANR	1911065	Condition	n >= 0	668:8:25635:25640	1910950	0	True				
ANR	1911066	RelationalExpression	n >= 0		1910950	0		>=			
ANR	1911067	Identifier	n		1910950	0					
ANR	1911068	PrimaryExpression	0		1910950	1					
ANR	1911069	CompoundStatement		11:16:424:424	1910950	1					
ANR	1911070	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) )"	669:5:25650:25696	1910950	0	True				
ANR	1911071	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) )"		1910950	0					
ANR	1911072	Callee	ZVAL_STRING		1910950	0					
ANR	1911073	Identifier	ZVAL_STRING		1910950	0					
ANR	1911074	ArgumentList	ret		1910950	1					
ANR	1911075	Argument	ret		1910950	0					
ANR	1911076	Identifier	ret		1910950	0					
ANR	1911077	Argument	( char * ) xmlBufferContent ( out )		1910950	1					
ANR	1911078	CastExpression	( char * ) xmlBufferContent ( out )		1910950	0					
ANR	1911079	CastTarget	char *		1910950	0					
ANR	1911080	CallExpression	xmlBufferContent ( out )		1910950	1					
ANR	1911081	Callee	xmlBufferContent		1910950	0					
ANR	1911082	Identifier	xmlBufferContent		1910950	0					
ANR	1911083	ArgumentList	out		1910950	1					
ANR	1911084	Argument	out		1910950	0					
ANR	1911085	Identifier	out		1910950	0					
ANR	1911086	ElseStatement	else		1910950	0					
ANR	1911087	CompoundStatement		13:11:490:490	1910950	0					
ANR	1911088	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	671:5:25716:25764	1910950	0	True				
ANR	1911089	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1910950	0					
ANR	1911090	Callee	ZVAL_STRING		1910950	0					
ANR	1911091	Identifier	ZVAL_STRING		1910950	0					
ANR	1911092	ArgumentList	ret		1910950	1					
ANR	1911093	Argument	ret		1910950	0					
ANR	1911094	Identifier	ret		1910950	0					
ANR	1911095	Argument	( char * ) data -> children -> content		1910950	1					
ANR	1911096	CastExpression	( char * ) data -> children -> content		1910950	0					
ANR	1911097	CastTarget	char *		1910950	0					
ANR	1911098	PtrMemberAccess	data -> children -> content		1910950	1					
ANR	1911099	PtrMemberAccess	data -> children		1910950	0					
ANR	1911100	Identifier	data		1910950	0					
ANR	1911101	Identifier	children		1910950	1					
ANR	1911102	Identifier	content		1910950	1					
ANR	1911103	ExpressionStatement	xmlBufferFree ( out )	673:4:25776:25794	1910950	4	True				
ANR	1911104	CallExpression	xmlBufferFree ( out )		1910950	0					
ANR	1911105	Callee	xmlBufferFree		1910950	0					
ANR	1911106	Identifier	xmlBufferFree		1910950	0					
ANR	1911107	ArgumentList	out		1910950	1					
ANR	1911108	Argument	out		1910950	0					
ANR	1911109	Identifier	out		1910950	0					
ANR	1911110	ExpressionStatement	xmlBufferFree ( in )	674:4:25800:25817	1910950	5	True				
ANR	1911111	CallExpression	xmlBufferFree ( in )		1910950	0					
ANR	1911112	Callee	xmlBufferFree		1910950	0					
ANR	1911113	Identifier	xmlBufferFree		1910950	0					
ANR	1911114	ArgumentList	in		1910950	1					
ANR	1911115	Argument	in		1910950	0					
ANR	1911116	Identifier	in		1910950	0					
ANR	1911117	ElseStatement	else		1910950	0					
ANR	1911118	CompoundStatement		18:10:610:610	1910950	0					
ANR	1911119	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	676:4:25835:25883	1910950	0	True				
ANR	1911120	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1910950	0					
ANR	1911121	Callee	ZVAL_STRING		1910950	0					
ANR	1911122	Identifier	ZVAL_STRING		1910950	0					
ANR	1911123	ArgumentList	ret		1910950	1					
ANR	1911124	Argument	ret		1910950	0					
ANR	1911125	Identifier	ret		1910950	0					
ANR	1911126	Argument	( char * ) data -> children -> content		1910950	1					
ANR	1911127	CastExpression	( char * ) data -> children -> content		1910950	0					
ANR	1911128	CastTarget	char *		1910950	0					
ANR	1911129	PtrMemberAccess	data -> children -> content		1910950	1					
ANR	1911130	PtrMemberAccess	data -> children		1910950	0					
ANR	1911131	Identifier	data		1910950	0					
ANR	1911132	Identifier	children		1910950	1					
ANR	1911133	Identifier	content		1910950	1					
ANR	1911134	ElseStatement	else		1910950	0					
ANR	1911135	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1910950	0					
ANR	1911136	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	678:13:25903:25980	1910950	0	True				
ANR	1911137	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1910950	0		&&			
ANR	1911138	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1910950	0		==			
ANR	1911139	PtrMemberAccess	data -> children -> type		1910950	0					
ANR	1911140	PtrMemberAccess	data -> children		1910950	0					
ANR	1911141	Identifier	data		1910950	0					
ANR	1911142	Identifier	children		1910950	1					
ANR	1911143	Identifier	type		1910950	1					
ANR	1911144	Identifier	XML_CDATA_SECTION_NODE		1910950	1					
ANR	1911145	EqualityExpression	data -> children -> next == NULL		1910950	1		==			
ANR	1911146	PtrMemberAccess	data -> children -> next		1910950	0					
ANR	1911147	PtrMemberAccess	data -> children		1910950	0					
ANR	1911148	Identifier	data		1910950	0					
ANR	1911149	Identifier	children		1910950	1					
ANR	1911150	Identifier	next		1910950	1					
ANR	1911151	Identifier	NULL		1910950	1					
ANR	1911152	CompoundStatement		21:93:764:764	1910950	1					
ANR	1911153	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	679:3:25988:26036	1910950	0	True				
ANR	1911154	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1910950	0					
ANR	1911155	Callee	ZVAL_STRING		1910950	0					
ANR	1911156	Identifier	ZVAL_STRING		1910950	0					
ANR	1911157	ArgumentList	ret		1910950	1					
ANR	1911158	Argument	ret		1910950	0					
ANR	1911159	Identifier	ret		1910950	0					
ANR	1911160	Argument	( char * ) data -> children -> content		1910950	1					
ANR	1911161	CastExpression	( char * ) data -> children -> content		1910950	0					
ANR	1911162	CastTarget	char *		1910950	0					
ANR	1911163	PtrMemberAccess	data -> children -> content		1910950	1					
ANR	1911164	PtrMemberAccess	data -> children		1910950	0					
ANR	1911165	Identifier	data		1910950	0					
ANR	1911166	Identifier	children		1910950	1					
ANR	1911167	Identifier	content		1910950	1					
ANR	1911168	ElseStatement	else		1910950	0					
ANR	1911169	CompoundStatement		23:9:828:828	1910950	0					
ANR	1911170	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	681:3:26052:26113	1910950	0	True				
ANR	1911171	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1910950	0					
ANR	1911172	Callee	soap_error0		1910950	0					
ANR	1911173	Identifier	soap_error0		1910950	0					
ANR	1911174	ArgumentList	E_ERROR		1910950	1					
ANR	1911175	Argument	E_ERROR		1910950	0					
ANR	1911176	Identifier	E_ERROR		1910950	0					
ANR	1911177	Argument	"""Encoding: Violation of encoding rules"""		1910950	1					
ANR	1911178	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1910950	0					
ANR	1911179	ElseStatement	else		1910950	0					
ANR	1911180	CompoundStatement		26:8:908:908	1910950	0					
ANR	1911181	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	684:2:26131:26153	1910950	0	True				
ANR	1911182	CallExpression	ZVAL_EMPTY_STRING ( ret )		1910950	0					
ANR	1911183	Callee	ZVAL_EMPTY_STRING		1910950	0					
ANR	1911184	Identifier	ZVAL_EMPTY_STRING		1910950	0					
ANR	1911185	ArgumentList	ret		1910950	1					
ANR	1911186	Argument	ret		1910950	0					
ANR	1911187	Identifier	ret		1910950	0					
ANR	1911188	ReturnStatement	return ret ;	686:1:26159:26169	1910950	3	True				
ANR	1911189	Identifier	ret		1910950	0					
ANR	1911190	ReturnType	static zval *		1910950	1					
ANR	1911191	Identifier	to_zval_string		1910950	2					
ANR	1911192	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1910950	3					
ANR	1911193	Parameter	zval * ret	657:28:25170:25178	1910950	0	True				
ANR	1911194	ParameterType	zval *		1910950	0					
ANR	1911195	Identifier	ret		1910950	1					
ANR	1911196	Parameter	encodeTypePtr type	657:39:25181:25198	1910950	1	True				
ANR	1911197	ParameterType	encodeTypePtr		1910950	0					
ANR	1911198	Identifier	type		1910950	1					
ANR	1911199	Parameter	xmlNodePtr data	657:59:25201:25215	1910950	2	True				
ANR	1911200	ParameterType	xmlNodePtr		1910950	0					
ANR	1911201	Identifier	data		1910950	1					
ANR	1911202	CFGEntryNode	ENTRY		1910950		True				
ANR	1911203	CFGExitNode	EXIT		1910950		True				
ANR	1911204	Symbol	ret		1910950						
ANR	1911205	Symbol	* * data		1910950						
ANR	1911206	Symbol	data -> children -> next		1910950						
ANR	1911207	Symbol	NULL		1910950						
ANR	1911208	Symbol	xmlBufferCreate		1910950						
ANR	1911209	Symbol	data		1910950						
ANR	1911210	Symbol	in		1910950						
ANR	1911211	Symbol	type		1910950						
ANR	1911212	Symbol	encoding		1910950						
ANR	1911213	Symbol	xmlBufferCreateStatic		1910950						
ANR	1911214	Symbol	SOAP_GLOBAL		1910950						
ANR	1911215	Symbol	n		1910950						
ANR	1911216	Symbol	out		1910950						
ANR	1911217	Symbol	xmlBufferContent		1910950						
ANR	1911218	Symbol	XML_TEXT_NODE		1910950						
ANR	1911219	Symbol	E_ERROR		1910950						
ANR	1911220	Symbol	data -> children		1910950						
ANR	1911221	Symbol	xmlStrlen		1910950						
ANR	1911222	Symbol	data -> children -> content		1910950						
ANR	1911223	Symbol	* data -> children		1910950						
ANR	1911224	Symbol	xmlCharEncOutFunc		1910950						
ANR	1911225	Symbol	XML_CDATA_SECTION_NODE		1910950						
ANR	1911226	Symbol	* data		1910950						
ANR	1911227	Symbol	data -> children -> type		1910950						
ANR	1911228	Function	to_zval_stringr	689:0:26174:27252							
ANR	1911229	FunctionDef	"to_zval_stringr (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1911228	0					
ANR	1911230	CompoundStatement		690:0:26251:27252	1911228	0					
ANR	1911231	ExpressionStatement	ZVAL_NULL ( ret )	691:1:26254:26268	1911228	0	True				
ANR	1911232	CallExpression	ZVAL_NULL ( ret )		1911228	0					
ANR	1911233	Callee	ZVAL_NULL		1911228	0					
ANR	1911234	Identifier	ZVAL_NULL		1911228	0					
ANR	1911235	ArgumentList	ret		1911228	1					
ANR	1911236	Argument	ret		1911228	0					
ANR	1911237	Identifier	ret		1911228	0					
ANR	1911238	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	692:1:26271:26295	1911228	1	True				
ANR	1911239	CallExpression	"FIND_XML_NULL ( data , ret )"		1911228	0					
ANR	1911240	Callee	FIND_XML_NULL		1911228	0					
ANR	1911241	Identifier	FIND_XML_NULL		1911228	0					
ANR	1911242	ArgumentList	data		1911228	1					
ANR	1911243	Argument	data		1911228	0					
ANR	1911244	Identifier	data		1911228	0					
ANR	1911245	Argument	ret		1911228	1					
ANR	1911246	Identifier	ret		1911228	0					
ANR	1911247	IfStatement	if ( data && data -> children )		1911228	2					
ANR	1911248	Condition	data && data -> children	693:5:26302:26323	1911228	0	True				
ANR	1911249	AndExpression	data && data -> children		1911228	0		&&			
ANR	1911250	Identifier	data		1911228	0					
ANR	1911251	PtrMemberAccess	data -> children		1911228	1					
ANR	1911252	Identifier	data		1911228	0					
ANR	1911253	Identifier	children		1911228	1					
ANR	1911254	CompoundStatement		4:29:74:74	1911228	1					
ANR	1911255	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1911228	0					
ANR	1911256	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	694:6:26334:26402	1911228	0	True				
ANR	1911257	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1911228	0		&&			
ANR	1911258	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1911228	0		==			
ANR	1911259	PtrMemberAccess	data -> children -> type		1911228	0					
ANR	1911260	PtrMemberAccess	data -> children		1911228	0					
ANR	1911261	Identifier	data		1911228	0					
ANR	1911262	Identifier	children		1911228	1					
ANR	1911263	Identifier	type		1911228	1					
ANR	1911264	Identifier	XML_TEXT_NODE		1911228	1					
ANR	1911265	EqualityExpression	data -> children -> next == NULL		1911228	1		==			
ANR	1911266	PtrMemberAccess	data -> children -> next		1911228	0					
ANR	1911267	PtrMemberAccess	data -> children		1911228	0					
ANR	1911268	Identifier	data		1911228	0					
ANR	1911269	Identifier	children		1911228	1					
ANR	1911270	Identifier	next		1911228	1					
ANR	1911271	Identifier	NULL		1911228	1					
ANR	1911272	CompoundStatement		5:77:153:153	1911228	1					
ANR	1911273	ExpressionStatement	whiteSpace_replace ( data -> children -> content )	695:3:26410:26453	1911228	0	True				
ANR	1911274	CallExpression	whiteSpace_replace ( data -> children -> content )		1911228	0					
ANR	1911275	Callee	whiteSpace_replace		1911228	0					
ANR	1911276	Identifier	whiteSpace_replace		1911228	0					
ANR	1911277	ArgumentList	data -> children -> content		1911228	1					
ANR	1911278	Argument	data -> children -> content		1911228	0					
ANR	1911279	PtrMemberAccess	data -> children -> content		1911228	0					
ANR	1911280	PtrMemberAccess	data -> children		1911228	0					
ANR	1911281	Identifier	data		1911228	0					
ANR	1911282	Identifier	children		1911228	1					
ANR	1911283	Identifier	content		1911228	1					
ANR	1911284	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1911228	1					
ANR	1911285	Condition	SOAP_GLOBAL ( encoding ) != NULL	696:7:26462:26490	1911228	0	True				
ANR	1911286	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1911228	0		!=			
ANR	1911287	CallExpression	SOAP_GLOBAL ( encoding )		1911228	0					
ANR	1911288	Callee	SOAP_GLOBAL		1911228	0					
ANR	1911289	Identifier	SOAP_GLOBAL		1911228	0					
ANR	1911290	ArgumentList	encoding		1911228	1					
ANR	1911291	Argument	encoding		1911228	0					
ANR	1911292	Identifier	encoding		1911228	0					
ANR	1911293	Identifier	NULL		1911228	1					
ANR	1911294	CompoundStatement		10:4:396:453	1911228	1					
ANR	1911295	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) ) ;"	697:4:26499:26600	1911228	0	True				
ANR	1911296	IdentifierDecl	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1911228	0					
ANR	1911297	IdentifierDeclType	xmlBufferPtr		1911228	0					
ANR	1911298	Identifier	in		1911228	1					
ANR	1911299	AssignmentExpression	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1911228	2		=			
ANR	1911300	Identifier	in		1911228	0					
ANR	1911301	CallExpression	"xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1911228	1					
ANR	1911302	Callee	xmlBufferCreateStatic		1911228	0					
ANR	1911303	Identifier	xmlBufferCreateStatic		1911228	0					
ANR	1911304	ArgumentList	data -> children -> content		1911228	1					
ANR	1911305	Argument	data -> children -> content		1911228	0					
ANR	1911306	PtrMemberAccess	data -> children -> content		1911228	0					
ANR	1911307	PtrMemberAccess	data -> children		1911228	0					
ANR	1911308	Identifier	data		1911228	0					
ANR	1911309	Identifier	children		1911228	1					
ANR	1911310	Identifier	content		1911228	1					
ANR	1911311	Argument	xmlStrlen ( data -> children -> content )		1911228	1					
ANR	1911312	CallExpression	xmlStrlen ( data -> children -> content )		1911228	0					
ANR	1911313	Callee	xmlStrlen		1911228	0					
ANR	1911314	Identifier	xmlStrlen		1911228	0					
ANR	1911315	ArgumentList	data -> children -> content		1911228	1					
ANR	1911316	Argument	data -> children -> content		1911228	0					
ANR	1911317	PtrMemberAccess	data -> children -> content		1911228	0					
ANR	1911318	PtrMemberAccess	data -> children		1911228	0					
ANR	1911319	Identifier	data		1911228	0					
ANR	1911320	Identifier	children		1911228	1					
ANR	1911321	Identifier	content		1911228	1					
ANR	1911322	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	698:4:26606:26642	1911228	1	True				
ANR	1911323	IdentifierDecl	out = xmlBufferCreate ( )		1911228	0					
ANR	1911324	IdentifierDeclType	xmlBufferPtr		1911228	0					
ANR	1911325	Identifier	out		1911228	1					
ANR	1911326	AssignmentExpression	out = xmlBufferCreate ( )		1911228	2		=			
ANR	1911327	Identifier	out		1911228	0					
ANR	1911328	CallExpression	xmlBufferCreate ( )		1911228	1					
ANR	1911329	Callee	xmlBufferCreate		1911228	0					
ANR	1911330	Identifier	xmlBufferCreate		1911228	0					
ANR	1911331	ArgumentList			1911228	1					
ANR	1911332	IdentifierDeclStatement	"int n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	699:4:26648:26705	1911228	2	True				
ANR	1911333	IdentifierDecl	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1911228	0					
ANR	1911334	IdentifierDeclType	int		1911228	0					
ANR	1911335	Identifier	n		1911228	1					
ANR	1911336	AssignmentExpression	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1911228	2		=			
ANR	1911337	Identifier	n		1911228	0					
ANR	1911338	CallExpression	"xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1911228	1					
ANR	1911339	Callee	xmlCharEncOutFunc		1911228	0					
ANR	1911340	Identifier	xmlCharEncOutFunc		1911228	0					
ANR	1911341	ArgumentList	SOAP_GLOBAL ( encoding )		1911228	1					
ANR	1911342	Argument	SOAP_GLOBAL ( encoding )		1911228	0					
ANR	1911343	CallExpression	SOAP_GLOBAL ( encoding )		1911228	0					
ANR	1911344	Callee	SOAP_GLOBAL		1911228	0					
ANR	1911345	Identifier	SOAP_GLOBAL		1911228	0					
ANR	1911346	ArgumentList	encoding		1911228	1					
ANR	1911347	Argument	encoding		1911228	0					
ANR	1911348	Identifier	encoding		1911228	0					
ANR	1911349	Argument	out		1911228	1					
ANR	1911350	Identifier	out		1911228	0					
ANR	1911351	Argument	in		1911228	2					
ANR	1911352	Identifier	in		1911228	0					
ANR	1911353	IfStatement	if ( n >= 0 )		1911228	3					
ANR	1911354	Condition	n >= 0	701:8:26716:26721	1911228	0	True				
ANR	1911355	RelationalExpression	n >= 0		1911228	0		>=			
ANR	1911356	Identifier	n		1911228	0					
ANR	1911357	PrimaryExpression	0		1911228	1					
ANR	1911358	CompoundStatement		12:16:472:472	1911228	1					
ANR	1911359	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) )"	702:5:26731:26777	1911228	0	True				
ANR	1911360	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) )"		1911228	0					
ANR	1911361	Callee	ZVAL_STRING		1911228	0					
ANR	1911362	Identifier	ZVAL_STRING		1911228	0					
ANR	1911363	ArgumentList	ret		1911228	1					
ANR	1911364	Argument	ret		1911228	0					
ANR	1911365	Identifier	ret		1911228	0					
ANR	1911366	Argument	( char * ) xmlBufferContent ( out )		1911228	1					
ANR	1911367	CastExpression	( char * ) xmlBufferContent ( out )		1911228	0					
ANR	1911368	CastTarget	char *		1911228	0					
ANR	1911369	CallExpression	xmlBufferContent ( out )		1911228	1					
ANR	1911370	Callee	xmlBufferContent		1911228	0					
ANR	1911371	Identifier	xmlBufferContent		1911228	0					
ANR	1911372	ArgumentList	out		1911228	1					
ANR	1911373	Argument	out		1911228	0					
ANR	1911374	Identifier	out		1911228	0					
ANR	1911375	ElseStatement	else		1911228	0					
ANR	1911376	CompoundStatement		14:11:538:538	1911228	0					
ANR	1911377	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	704:5:26797:26845	1911228	0	True				
ANR	1911378	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1911228	0					
ANR	1911379	Callee	ZVAL_STRING		1911228	0					
ANR	1911380	Identifier	ZVAL_STRING		1911228	0					
ANR	1911381	ArgumentList	ret		1911228	1					
ANR	1911382	Argument	ret		1911228	0					
ANR	1911383	Identifier	ret		1911228	0					
ANR	1911384	Argument	( char * ) data -> children -> content		1911228	1					
ANR	1911385	CastExpression	( char * ) data -> children -> content		1911228	0					
ANR	1911386	CastTarget	char *		1911228	0					
ANR	1911387	PtrMemberAccess	data -> children -> content		1911228	1					
ANR	1911388	PtrMemberAccess	data -> children		1911228	0					
ANR	1911389	Identifier	data		1911228	0					
ANR	1911390	Identifier	children		1911228	1					
ANR	1911391	Identifier	content		1911228	1					
ANR	1911392	ExpressionStatement	xmlBufferFree ( out )	706:4:26857:26875	1911228	4	True				
ANR	1911393	CallExpression	xmlBufferFree ( out )		1911228	0					
ANR	1911394	Callee	xmlBufferFree		1911228	0					
ANR	1911395	Identifier	xmlBufferFree		1911228	0					
ANR	1911396	ArgumentList	out		1911228	1					
ANR	1911397	Argument	out		1911228	0					
ANR	1911398	Identifier	out		1911228	0					
ANR	1911399	ExpressionStatement	xmlBufferFree ( in )	707:4:26881:26898	1911228	5	True				
ANR	1911400	CallExpression	xmlBufferFree ( in )		1911228	0					
ANR	1911401	Callee	xmlBufferFree		1911228	0					
ANR	1911402	Identifier	xmlBufferFree		1911228	0					
ANR	1911403	ArgumentList	in		1911228	1					
ANR	1911404	Argument	in		1911228	0					
ANR	1911405	Identifier	in		1911228	0					
ANR	1911406	ElseStatement	else		1911228	0					
ANR	1911407	CompoundStatement		19:10:658:658	1911228	0					
ANR	1911408	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	709:4:26916:26964	1911228	0	True				
ANR	1911409	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1911228	0					
ANR	1911410	Callee	ZVAL_STRING		1911228	0					
ANR	1911411	Identifier	ZVAL_STRING		1911228	0					
ANR	1911412	ArgumentList	ret		1911228	1					
ANR	1911413	Argument	ret		1911228	0					
ANR	1911414	Identifier	ret		1911228	0					
ANR	1911415	Argument	( char * ) data -> children -> content		1911228	1					
ANR	1911416	CastExpression	( char * ) data -> children -> content		1911228	0					
ANR	1911417	CastTarget	char *		1911228	0					
ANR	1911418	PtrMemberAccess	data -> children -> content		1911228	1					
ANR	1911419	PtrMemberAccess	data -> children		1911228	0					
ANR	1911420	Identifier	data		1911228	0					
ANR	1911421	Identifier	children		1911228	1					
ANR	1911422	Identifier	content		1911228	1					
ANR	1911423	ElseStatement	else		1911228	0					
ANR	1911424	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1911228	0					
ANR	1911425	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	711:13:26984:27061	1911228	0	True				
ANR	1911426	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1911228	0		&&			
ANR	1911427	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1911228	0		==			
ANR	1911428	PtrMemberAccess	data -> children -> type		1911228	0					
ANR	1911429	PtrMemberAccess	data -> children		1911228	0					
ANR	1911430	Identifier	data		1911228	0					
ANR	1911431	Identifier	children		1911228	1					
ANR	1911432	Identifier	type		1911228	1					
ANR	1911433	Identifier	XML_CDATA_SECTION_NODE		1911228	1					
ANR	1911434	EqualityExpression	data -> children -> next == NULL		1911228	1		==			
ANR	1911435	PtrMemberAccess	data -> children -> next		1911228	0					
ANR	1911436	PtrMemberAccess	data -> children		1911228	0					
ANR	1911437	Identifier	data		1911228	0					
ANR	1911438	Identifier	children		1911228	1					
ANR	1911439	Identifier	next		1911228	1					
ANR	1911440	Identifier	NULL		1911228	1					
ANR	1911441	CompoundStatement		22:93:812:812	1911228	1					
ANR	1911442	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	712:3:27069:27117	1911228	0	True				
ANR	1911443	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1911228	0					
ANR	1911444	Callee	ZVAL_STRING		1911228	0					
ANR	1911445	Identifier	ZVAL_STRING		1911228	0					
ANR	1911446	ArgumentList	ret		1911228	1					
ANR	1911447	Argument	ret		1911228	0					
ANR	1911448	Identifier	ret		1911228	0					
ANR	1911449	Argument	( char * ) data -> children -> content		1911228	1					
ANR	1911450	CastExpression	( char * ) data -> children -> content		1911228	0					
ANR	1911451	CastTarget	char *		1911228	0					
ANR	1911452	PtrMemberAccess	data -> children -> content		1911228	1					
ANR	1911453	PtrMemberAccess	data -> children		1911228	0					
ANR	1911454	Identifier	data		1911228	0					
ANR	1911455	Identifier	children		1911228	1					
ANR	1911456	Identifier	content		1911228	1					
ANR	1911457	ElseStatement	else		1911228	0					
ANR	1911458	CompoundStatement		24:9:876:876	1911228	0					
ANR	1911459	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	714:3:27133:27194	1911228	0	True				
ANR	1911460	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1911228	0					
ANR	1911461	Callee	soap_error0		1911228	0					
ANR	1911462	Identifier	soap_error0		1911228	0					
ANR	1911463	ArgumentList	E_ERROR		1911228	1					
ANR	1911464	Argument	E_ERROR		1911228	0					
ANR	1911465	Identifier	E_ERROR		1911228	0					
ANR	1911466	Argument	"""Encoding: Violation of encoding rules"""		1911228	1					
ANR	1911467	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1911228	0					
ANR	1911468	ElseStatement	else		1911228	0					
ANR	1911469	CompoundStatement		27:8:956:956	1911228	0					
ANR	1911470	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	717:2:27212:27234	1911228	0	True				
ANR	1911471	CallExpression	ZVAL_EMPTY_STRING ( ret )		1911228	0					
ANR	1911472	Callee	ZVAL_EMPTY_STRING		1911228	0					
ANR	1911473	Identifier	ZVAL_EMPTY_STRING		1911228	0					
ANR	1911474	ArgumentList	ret		1911228	1					
ANR	1911475	Argument	ret		1911228	0					
ANR	1911476	Identifier	ret		1911228	0					
ANR	1911477	ReturnStatement	return ret ;	719:1:27240:27250	1911228	3	True				
ANR	1911478	Identifier	ret		1911228	0					
ANR	1911479	ReturnType	static zval *		1911228	1					
ANR	1911480	Identifier	to_zval_stringr		1911228	2					
ANR	1911481	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1911228	3					
ANR	1911482	Parameter	zval * ret	689:29:26203:26211	1911228	0	True				
ANR	1911483	ParameterType	zval *		1911228	0					
ANR	1911484	Identifier	ret		1911228	1					
ANR	1911485	Parameter	encodeTypePtr type	689:40:26214:26231	1911228	1	True				
ANR	1911486	ParameterType	encodeTypePtr		1911228	0					
ANR	1911487	Identifier	type		1911228	1					
ANR	1911488	Parameter	xmlNodePtr data	689:60:26234:26248	1911228	2	True				
ANR	1911489	ParameterType	xmlNodePtr		1911228	0					
ANR	1911490	Identifier	data		1911228	1					
ANR	1911491	CFGEntryNode	ENTRY		1911228		True				
ANR	1911492	CFGExitNode	EXIT		1911228		True				
ANR	1911493	Symbol	ret		1911228						
ANR	1911494	Symbol	* * data		1911228						
ANR	1911495	Symbol	data -> children -> next		1911228						
ANR	1911496	Symbol	NULL		1911228						
ANR	1911497	Symbol	xmlBufferCreate		1911228						
ANR	1911498	Symbol	data		1911228						
ANR	1911499	Symbol	in		1911228						
ANR	1911500	Symbol	type		1911228						
ANR	1911501	Symbol	encoding		1911228						
ANR	1911502	Symbol	xmlBufferCreateStatic		1911228						
ANR	1911503	Symbol	SOAP_GLOBAL		1911228						
ANR	1911504	Symbol	n		1911228						
ANR	1911505	Symbol	out		1911228						
ANR	1911506	Symbol	xmlBufferContent		1911228						
ANR	1911507	Symbol	XML_TEXT_NODE		1911228						
ANR	1911508	Symbol	E_ERROR		1911228						
ANR	1911509	Symbol	data -> children		1911228						
ANR	1911510	Symbol	xmlStrlen		1911228						
ANR	1911511	Symbol	data -> children -> content		1911228						
ANR	1911512	Symbol	* data -> children		1911228						
ANR	1911513	Symbol	xmlCharEncOutFunc		1911228						
ANR	1911514	Symbol	XML_CDATA_SECTION_NODE		1911228						
ANR	1911515	Symbol	* data		1911228						
ANR	1911516	Symbol	data -> children -> type		1911228						
ANR	1911517	Function	to_zval_stringc	722:0:27255:28334							
ANR	1911518	FunctionDef	"to_zval_stringc (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1911517	0					
ANR	1911519	CompoundStatement		723:0:27332:28334	1911517	0					
ANR	1911520	ExpressionStatement	ZVAL_NULL ( ret )	724:1:27335:27349	1911517	0	True				
ANR	1911521	CallExpression	ZVAL_NULL ( ret )		1911517	0					
ANR	1911522	Callee	ZVAL_NULL		1911517	0					
ANR	1911523	Identifier	ZVAL_NULL		1911517	0					
ANR	1911524	ArgumentList	ret		1911517	1					
ANR	1911525	Argument	ret		1911517	0					
ANR	1911526	Identifier	ret		1911517	0					
ANR	1911527	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	725:1:27352:27376	1911517	1	True				
ANR	1911528	CallExpression	"FIND_XML_NULL ( data , ret )"		1911517	0					
ANR	1911529	Callee	FIND_XML_NULL		1911517	0					
ANR	1911530	Identifier	FIND_XML_NULL		1911517	0					
ANR	1911531	ArgumentList	data		1911517	1					
ANR	1911532	Argument	data		1911517	0					
ANR	1911533	Identifier	data		1911517	0					
ANR	1911534	Argument	ret		1911517	1					
ANR	1911535	Identifier	ret		1911517	0					
ANR	1911536	IfStatement	if ( data && data -> children )		1911517	2					
ANR	1911537	Condition	data && data -> children	726:5:27383:27404	1911517	0	True				
ANR	1911538	AndExpression	data && data -> children		1911517	0		&&			
ANR	1911539	Identifier	data		1911517	0					
ANR	1911540	PtrMemberAccess	data -> children		1911517	1					
ANR	1911541	Identifier	data		1911517	0					
ANR	1911542	Identifier	children		1911517	1					
ANR	1911543	CompoundStatement		4:29:74:74	1911517	1					
ANR	1911544	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1911517	0					
ANR	1911545	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	727:6:27415:27483	1911517	0	True				
ANR	1911546	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1911517	0		&&			
ANR	1911547	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1911517	0		==			
ANR	1911548	PtrMemberAccess	data -> children -> type		1911517	0					
ANR	1911549	PtrMemberAccess	data -> children		1911517	0					
ANR	1911550	Identifier	data		1911517	0					
ANR	1911551	Identifier	children		1911517	1					
ANR	1911552	Identifier	type		1911517	1					
ANR	1911553	Identifier	XML_TEXT_NODE		1911517	1					
ANR	1911554	EqualityExpression	data -> children -> next == NULL		1911517	1		==			
ANR	1911555	PtrMemberAccess	data -> children -> next		1911517	0					
ANR	1911556	PtrMemberAccess	data -> children		1911517	0					
ANR	1911557	Identifier	data		1911517	0					
ANR	1911558	Identifier	children		1911517	1					
ANR	1911559	Identifier	next		1911517	1					
ANR	1911560	Identifier	NULL		1911517	1					
ANR	1911561	CompoundStatement		5:77:153:153	1911517	1					
ANR	1911562	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	728:3:27491:27535	1911517	0	True				
ANR	1911563	CallExpression	whiteSpace_collapse ( data -> children -> content )		1911517	0					
ANR	1911564	Callee	whiteSpace_collapse		1911517	0					
ANR	1911565	Identifier	whiteSpace_collapse		1911517	0					
ANR	1911566	ArgumentList	data -> children -> content		1911517	1					
ANR	1911567	Argument	data -> children -> content		1911517	0					
ANR	1911568	PtrMemberAccess	data -> children -> content		1911517	0					
ANR	1911569	PtrMemberAccess	data -> children		1911517	0					
ANR	1911570	Identifier	data		1911517	0					
ANR	1911571	Identifier	children		1911517	1					
ANR	1911572	Identifier	content		1911517	1					
ANR	1911573	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1911517	1					
ANR	1911574	Condition	SOAP_GLOBAL ( encoding ) != NULL	729:7:27544:27572	1911517	0	True				
ANR	1911575	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1911517	0		!=			
ANR	1911576	CallExpression	SOAP_GLOBAL ( encoding )		1911517	0					
ANR	1911577	Callee	SOAP_GLOBAL		1911517	0					
ANR	1911578	Identifier	SOAP_GLOBAL		1911517	0					
ANR	1911579	ArgumentList	encoding		1911517	1					
ANR	1911580	Argument	encoding		1911517	0					
ANR	1911581	Identifier	encoding		1911517	0					
ANR	1911582	Identifier	NULL		1911517	1					
ANR	1911583	CompoundStatement		10:4:397:454	1911517	1					
ANR	1911584	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) ) ;"	730:4:27581:27682	1911517	0	True				
ANR	1911585	IdentifierDecl	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1911517	0					
ANR	1911586	IdentifierDeclType	xmlBufferPtr		1911517	0					
ANR	1911587	Identifier	in		1911517	1					
ANR	1911588	AssignmentExpression	"in = xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1911517	2		=			
ANR	1911589	Identifier	in		1911517	0					
ANR	1911590	CallExpression	"xmlBufferCreateStatic ( data -> children -> content , xmlStrlen ( data -> children -> content ) )"		1911517	1					
ANR	1911591	Callee	xmlBufferCreateStatic		1911517	0					
ANR	1911592	Identifier	xmlBufferCreateStatic		1911517	0					
ANR	1911593	ArgumentList	data -> children -> content		1911517	1					
ANR	1911594	Argument	data -> children -> content		1911517	0					
ANR	1911595	PtrMemberAccess	data -> children -> content		1911517	0					
ANR	1911596	PtrMemberAccess	data -> children		1911517	0					
ANR	1911597	Identifier	data		1911517	0					
ANR	1911598	Identifier	children		1911517	1					
ANR	1911599	Identifier	content		1911517	1					
ANR	1911600	Argument	xmlStrlen ( data -> children -> content )		1911517	1					
ANR	1911601	CallExpression	xmlStrlen ( data -> children -> content )		1911517	0					
ANR	1911602	Callee	xmlStrlen		1911517	0					
ANR	1911603	Identifier	xmlStrlen		1911517	0					
ANR	1911604	ArgumentList	data -> children -> content		1911517	1					
ANR	1911605	Argument	data -> children -> content		1911517	0					
ANR	1911606	PtrMemberAccess	data -> children -> content		1911517	0					
ANR	1911607	PtrMemberAccess	data -> children		1911517	0					
ANR	1911608	Identifier	data		1911517	0					
ANR	1911609	Identifier	children		1911517	1					
ANR	1911610	Identifier	content		1911517	1					
ANR	1911611	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	731:4:27688:27724	1911517	1	True				
ANR	1911612	IdentifierDecl	out = xmlBufferCreate ( )		1911517	0					
ANR	1911613	IdentifierDeclType	xmlBufferPtr		1911517	0					
ANR	1911614	Identifier	out		1911517	1					
ANR	1911615	AssignmentExpression	out = xmlBufferCreate ( )		1911517	2		=			
ANR	1911616	Identifier	out		1911517	0					
ANR	1911617	CallExpression	xmlBufferCreate ( )		1911517	1					
ANR	1911618	Callee	xmlBufferCreate		1911517	0					
ANR	1911619	Identifier	xmlBufferCreate		1911517	0					
ANR	1911620	ArgumentList			1911517	1					
ANR	1911621	IdentifierDeclStatement	"int n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	732:4:27730:27787	1911517	2	True				
ANR	1911622	IdentifierDecl	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1911517	0					
ANR	1911623	IdentifierDeclType	int		1911517	0					
ANR	1911624	Identifier	n		1911517	1					
ANR	1911625	AssignmentExpression	"n = xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1911517	2		=			
ANR	1911626	Identifier	n		1911517	0					
ANR	1911627	CallExpression	"xmlCharEncOutFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1911517	1					
ANR	1911628	Callee	xmlCharEncOutFunc		1911517	0					
ANR	1911629	Identifier	xmlCharEncOutFunc		1911517	0					
ANR	1911630	ArgumentList	SOAP_GLOBAL ( encoding )		1911517	1					
ANR	1911631	Argument	SOAP_GLOBAL ( encoding )		1911517	0					
ANR	1911632	CallExpression	SOAP_GLOBAL ( encoding )		1911517	0					
ANR	1911633	Callee	SOAP_GLOBAL		1911517	0					
ANR	1911634	Identifier	SOAP_GLOBAL		1911517	0					
ANR	1911635	ArgumentList	encoding		1911517	1					
ANR	1911636	Argument	encoding		1911517	0					
ANR	1911637	Identifier	encoding		1911517	0					
ANR	1911638	Argument	out		1911517	1					
ANR	1911639	Identifier	out		1911517	0					
ANR	1911640	Argument	in		1911517	2					
ANR	1911641	Identifier	in		1911517	0					
ANR	1911642	IfStatement	if ( n >= 0 )		1911517	3					
ANR	1911643	Condition	n >= 0	734:8:27798:27803	1911517	0	True				
ANR	1911644	RelationalExpression	n >= 0		1911517	0		>=			
ANR	1911645	Identifier	n		1911517	0					
ANR	1911646	PrimaryExpression	0		1911517	1					
ANR	1911647	CompoundStatement		12:16:473:473	1911517	1					
ANR	1911648	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) )"	735:5:27813:27859	1911517	0	True				
ANR	1911649	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( out ) )"		1911517	0					
ANR	1911650	Callee	ZVAL_STRING		1911517	0					
ANR	1911651	Identifier	ZVAL_STRING		1911517	0					
ANR	1911652	ArgumentList	ret		1911517	1					
ANR	1911653	Argument	ret		1911517	0					
ANR	1911654	Identifier	ret		1911517	0					
ANR	1911655	Argument	( char * ) xmlBufferContent ( out )		1911517	1					
ANR	1911656	CastExpression	( char * ) xmlBufferContent ( out )		1911517	0					
ANR	1911657	CastTarget	char *		1911517	0					
ANR	1911658	CallExpression	xmlBufferContent ( out )		1911517	1					
ANR	1911659	Callee	xmlBufferContent		1911517	0					
ANR	1911660	Identifier	xmlBufferContent		1911517	0					
ANR	1911661	ArgumentList	out		1911517	1					
ANR	1911662	Argument	out		1911517	0					
ANR	1911663	Identifier	out		1911517	0					
ANR	1911664	ElseStatement	else		1911517	0					
ANR	1911665	CompoundStatement		14:11:539:539	1911517	0					
ANR	1911666	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	737:5:27879:27927	1911517	0	True				
ANR	1911667	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1911517	0					
ANR	1911668	Callee	ZVAL_STRING		1911517	0					
ANR	1911669	Identifier	ZVAL_STRING		1911517	0					
ANR	1911670	ArgumentList	ret		1911517	1					
ANR	1911671	Argument	ret		1911517	0					
ANR	1911672	Identifier	ret		1911517	0					
ANR	1911673	Argument	( char * ) data -> children -> content		1911517	1					
ANR	1911674	CastExpression	( char * ) data -> children -> content		1911517	0					
ANR	1911675	CastTarget	char *		1911517	0					
ANR	1911676	PtrMemberAccess	data -> children -> content		1911517	1					
ANR	1911677	PtrMemberAccess	data -> children		1911517	0					
ANR	1911678	Identifier	data		1911517	0					
ANR	1911679	Identifier	children		1911517	1					
ANR	1911680	Identifier	content		1911517	1					
ANR	1911681	ExpressionStatement	xmlBufferFree ( out )	739:4:27939:27957	1911517	4	True				
ANR	1911682	CallExpression	xmlBufferFree ( out )		1911517	0					
ANR	1911683	Callee	xmlBufferFree		1911517	0					
ANR	1911684	Identifier	xmlBufferFree		1911517	0					
ANR	1911685	ArgumentList	out		1911517	1					
ANR	1911686	Argument	out		1911517	0					
ANR	1911687	Identifier	out		1911517	0					
ANR	1911688	ExpressionStatement	xmlBufferFree ( in )	740:4:27963:27980	1911517	5	True				
ANR	1911689	CallExpression	xmlBufferFree ( in )		1911517	0					
ANR	1911690	Callee	xmlBufferFree		1911517	0					
ANR	1911691	Identifier	xmlBufferFree		1911517	0					
ANR	1911692	ArgumentList	in		1911517	1					
ANR	1911693	Argument	in		1911517	0					
ANR	1911694	Identifier	in		1911517	0					
ANR	1911695	ElseStatement	else		1911517	0					
ANR	1911696	CompoundStatement		19:10:659:659	1911517	0					
ANR	1911697	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	742:4:27998:28046	1911517	0	True				
ANR	1911698	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1911517	0					
ANR	1911699	Callee	ZVAL_STRING		1911517	0					
ANR	1911700	Identifier	ZVAL_STRING		1911517	0					
ANR	1911701	ArgumentList	ret		1911517	1					
ANR	1911702	Argument	ret		1911517	0					
ANR	1911703	Identifier	ret		1911517	0					
ANR	1911704	Argument	( char * ) data -> children -> content		1911517	1					
ANR	1911705	CastExpression	( char * ) data -> children -> content		1911517	0					
ANR	1911706	CastTarget	char *		1911517	0					
ANR	1911707	PtrMemberAccess	data -> children -> content		1911517	1					
ANR	1911708	PtrMemberAccess	data -> children		1911517	0					
ANR	1911709	Identifier	data		1911517	0					
ANR	1911710	Identifier	children		1911517	1					
ANR	1911711	Identifier	content		1911517	1					
ANR	1911712	ElseStatement	else		1911517	0					
ANR	1911713	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1911517	0					
ANR	1911714	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	744:13:28066:28143	1911517	0	True				
ANR	1911715	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1911517	0		&&			
ANR	1911716	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1911517	0		==			
ANR	1911717	PtrMemberAccess	data -> children -> type		1911517	0					
ANR	1911718	PtrMemberAccess	data -> children		1911517	0					
ANR	1911719	Identifier	data		1911517	0					
ANR	1911720	Identifier	children		1911517	1					
ANR	1911721	Identifier	type		1911517	1					
ANR	1911722	Identifier	XML_CDATA_SECTION_NODE		1911517	1					
ANR	1911723	EqualityExpression	data -> children -> next == NULL		1911517	1		==			
ANR	1911724	PtrMemberAccess	data -> children -> next		1911517	0					
ANR	1911725	PtrMemberAccess	data -> children		1911517	0					
ANR	1911726	Identifier	data		1911517	0					
ANR	1911727	Identifier	children		1911517	1					
ANR	1911728	Identifier	next		1911517	1					
ANR	1911729	Identifier	NULL		1911517	1					
ANR	1911730	CompoundStatement		22:93:813:813	1911517	1					
ANR	1911731	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	745:3:28151:28199	1911517	0	True				
ANR	1911732	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1911517	0					
ANR	1911733	Callee	ZVAL_STRING		1911517	0					
ANR	1911734	Identifier	ZVAL_STRING		1911517	0					
ANR	1911735	ArgumentList	ret		1911517	1					
ANR	1911736	Argument	ret		1911517	0					
ANR	1911737	Identifier	ret		1911517	0					
ANR	1911738	Argument	( char * ) data -> children -> content		1911517	1					
ANR	1911739	CastExpression	( char * ) data -> children -> content		1911517	0					
ANR	1911740	CastTarget	char *		1911517	0					
ANR	1911741	PtrMemberAccess	data -> children -> content		1911517	1					
ANR	1911742	PtrMemberAccess	data -> children		1911517	0					
ANR	1911743	Identifier	data		1911517	0					
ANR	1911744	Identifier	children		1911517	1					
ANR	1911745	Identifier	content		1911517	1					
ANR	1911746	ElseStatement	else		1911517	0					
ANR	1911747	CompoundStatement		24:9:877:877	1911517	0					
ANR	1911748	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	747:3:28215:28276	1911517	0	True				
ANR	1911749	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1911517	0					
ANR	1911750	Callee	soap_error0		1911517	0					
ANR	1911751	Identifier	soap_error0		1911517	0					
ANR	1911752	ArgumentList	E_ERROR		1911517	1					
ANR	1911753	Argument	E_ERROR		1911517	0					
ANR	1911754	Identifier	E_ERROR		1911517	0					
ANR	1911755	Argument	"""Encoding: Violation of encoding rules"""		1911517	1					
ANR	1911756	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1911517	0					
ANR	1911757	ElseStatement	else		1911517	0					
ANR	1911758	CompoundStatement		27:8:957:957	1911517	0					
ANR	1911759	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	750:2:28294:28316	1911517	0	True				
ANR	1911760	CallExpression	ZVAL_EMPTY_STRING ( ret )		1911517	0					
ANR	1911761	Callee	ZVAL_EMPTY_STRING		1911517	0					
ANR	1911762	Identifier	ZVAL_EMPTY_STRING		1911517	0					
ANR	1911763	ArgumentList	ret		1911517	1					
ANR	1911764	Argument	ret		1911517	0					
ANR	1911765	Identifier	ret		1911517	0					
ANR	1911766	ReturnStatement	return ret ;	752:1:28322:28332	1911517	3	True				
ANR	1911767	Identifier	ret		1911517	0					
ANR	1911768	ReturnType	static zval *		1911517	1					
ANR	1911769	Identifier	to_zval_stringc		1911517	2					
ANR	1911770	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1911517	3					
ANR	1911771	Parameter	zval * ret	722:29:27284:27292	1911517	0	True				
ANR	1911772	ParameterType	zval *		1911517	0					
ANR	1911773	Identifier	ret		1911517	1					
ANR	1911774	Parameter	encodeTypePtr type	722:40:27295:27312	1911517	1	True				
ANR	1911775	ParameterType	encodeTypePtr		1911517	0					
ANR	1911776	Identifier	type		1911517	1					
ANR	1911777	Parameter	xmlNodePtr data	722:60:27315:27329	1911517	2	True				
ANR	1911778	ParameterType	xmlNodePtr		1911517	0					
ANR	1911779	Identifier	data		1911517	1					
ANR	1911780	CFGEntryNode	ENTRY		1911517		True				
ANR	1911781	CFGExitNode	EXIT		1911517		True				
ANR	1911782	Symbol	ret		1911517						
ANR	1911783	Symbol	* * data		1911517						
ANR	1911784	Symbol	data -> children -> next		1911517						
ANR	1911785	Symbol	NULL		1911517						
ANR	1911786	Symbol	xmlBufferCreate		1911517						
ANR	1911787	Symbol	data		1911517						
ANR	1911788	Symbol	in		1911517						
ANR	1911789	Symbol	type		1911517						
ANR	1911790	Symbol	encoding		1911517						
ANR	1911791	Symbol	xmlBufferCreateStatic		1911517						
ANR	1911792	Symbol	SOAP_GLOBAL		1911517						
ANR	1911793	Symbol	n		1911517						
ANR	1911794	Symbol	out		1911517						
ANR	1911795	Symbol	xmlBufferContent		1911517						
ANR	1911796	Symbol	XML_TEXT_NODE		1911517						
ANR	1911797	Symbol	E_ERROR		1911517						
ANR	1911798	Symbol	data -> children		1911517						
ANR	1911799	Symbol	xmlStrlen		1911517						
ANR	1911800	Symbol	data -> children -> content		1911517						
ANR	1911801	Symbol	* data -> children		1911517						
ANR	1911802	Symbol	xmlCharEncOutFunc		1911517						
ANR	1911803	Symbol	XML_CDATA_SECTION_NODE		1911517						
ANR	1911804	Symbol	* data		1911517						
ANR	1911805	Symbol	data -> children -> type		1911517						
ANR	1911806	Function	to_zval_base64	755:0:28337:29272							
ANR	1911807	FunctionDef	"to_zval_base64 (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1911806	0					
ANR	1911808	CompoundStatement		756:0:28413:29272	1911806	0					
ANR	1911809	IdentifierDeclStatement	zend_string * str ;	757:1:28416:28432	1911806	0	True				
ANR	1911810	IdentifierDecl	* str		1911806	0					
ANR	1911811	IdentifierDeclType	zend_string *		1911806	0					
ANR	1911812	Identifier	str		1911806	1					
ANR	1911813	ExpressionStatement	ZVAL_NULL ( ret )	759:1:28436:28450	1911806	1	True				
ANR	1911814	CallExpression	ZVAL_NULL ( ret )		1911806	0					
ANR	1911815	Callee	ZVAL_NULL		1911806	0					
ANR	1911816	Identifier	ZVAL_NULL		1911806	0					
ANR	1911817	ArgumentList	ret		1911806	1					
ANR	1911818	Argument	ret		1911806	0					
ANR	1911819	Identifier	ret		1911806	0					
ANR	1911820	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	760:1:28453:28477	1911806	2	True				
ANR	1911821	CallExpression	"FIND_XML_NULL ( data , ret )"		1911806	0					
ANR	1911822	Callee	FIND_XML_NULL		1911806	0					
ANR	1911823	Identifier	FIND_XML_NULL		1911806	0					
ANR	1911824	ArgumentList	data		1911806	1					
ANR	1911825	Argument	data		1911806	0					
ANR	1911826	Identifier	data		1911806	0					
ANR	1911827	Argument	ret		1911806	1					
ANR	1911828	Identifier	ret		1911806	0					
ANR	1911829	IfStatement	if ( data && data -> children )		1911806	3					
ANR	1911830	Condition	data && data -> children	761:5:28484:28505	1911806	0	True				
ANR	1911831	AndExpression	data && data -> children		1911806	0		&&			
ANR	1911832	Identifier	data		1911806	0					
ANR	1911833	PtrMemberAccess	data -> children		1911806	1					
ANR	1911834	Identifier	data		1911806	0					
ANR	1911835	Identifier	children		1911806	1					
ANR	1911836	CompoundStatement		6:29:94:94	1911806	1					
ANR	1911837	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1911806	0					
ANR	1911838	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	762:6:28516:28584	1911806	0	True				
ANR	1911839	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1911806	0		&&			
ANR	1911840	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1911806	0		==			
ANR	1911841	PtrMemberAccess	data -> children -> type		1911806	0					
ANR	1911842	PtrMemberAccess	data -> children		1911806	0					
ANR	1911843	Identifier	data		1911806	0					
ANR	1911844	Identifier	children		1911806	1					
ANR	1911845	Identifier	type		1911806	1					
ANR	1911846	Identifier	XML_TEXT_NODE		1911806	1					
ANR	1911847	EqualityExpression	data -> children -> next == NULL		1911806	1		==			
ANR	1911848	PtrMemberAccess	data -> children -> next		1911806	0					
ANR	1911849	PtrMemberAccess	data -> children		1911806	0					
ANR	1911850	Identifier	data		1911806	0					
ANR	1911851	Identifier	children		1911806	1					
ANR	1911852	Identifier	next		1911806	1					
ANR	1911853	Identifier	NULL		1911806	1					
ANR	1911854	CompoundStatement		7:77:173:173	1911806	1					
ANR	1911855	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	763:3:28592:28636	1911806	0	True				
ANR	1911856	CallExpression	whiteSpace_collapse ( data -> children -> content )		1911806	0					
ANR	1911857	Callee	whiteSpace_collapse		1911806	0					
ANR	1911858	Identifier	whiteSpace_collapse		1911806	0					
ANR	1911859	ArgumentList	data -> children -> content		1911806	1					
ANR	1911860	Argument	data -> children -> content		1911806	0					
ANR	1911861	PtrMemberAccess	data -> children -> content		1911806	0					
ANR	1911862	PtrMemberAccess	data -> children		1911806	0					
ANR	1911863	Identifier	data		1911806	0					
ANR	1911864	Identifier	children		1911806	1					
ANR	1911865	Identifier	content		1911806	1					
ANR	1911866	ExpressionStatement	"str = php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) )"	764:3:28641:28729	1911806	1	True				
ANR	1911867	AssignmentExpression	"str = php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) )"		1911806	0		=			
ANR	1911868	Identifier	str		1911806	0					
ANR	1911869	CallExpression	"php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) )"		1911806	1					
ANR	1911870	Callee	php_base64_decode		1911806	0					
ANR	1911871	Identifier	php_base64_decode		1911806	0					
ANR	1911872	ArgumentList	data -> children -> content		1911806	1					
ANR	1911873	Argument	data -> children -> content		1911806	0					
ANR	1911874	PtrMemberAccess	data -> children -> content		1911806	0					
ANR	1911875	PtrMemberAccess	data -> children		1911806	0					
ANR	1911876	Identifier	data		1911806	0					
ANR	1911877	Identifier	children		1911806	1					
ANR	1911878	Identifier	content		1911806	1					
ANR	1911879	Argument	strlen ( ( char * ) data -> children -> content )		1911806	1					
ANR	1911880	CallExpression	strlen ( ( char * ) data -> children -> content )		1911806	0					
ANR	1911881	Callee	strlen		1911806	0					
ANR	1911882	Identifier	strlen		1911806	0					
ANR	1911883	ArgumentList	( char * ) data -> children -> content		1911806	1					
ANR	1911884	Argument	( char * ) data -> children -> content		1911806	0					
ANR	1911885	CastExpression	( char * ) data -> children -> content		1911806	0					
ANR	1911886	CastTarget	char *		1911806	0					
ANR	1911887	PtrMemberAccess	data -> children -> content		1911806	1					
ANR	1911888	PtrMemberAccess	data -> children		1911806	0					
ANR	1911889	Identifier	data		1911806	0					
ANR	1911890	Identifier	children		1911806	1					
ANR	1911891	Identifier	content		1911806	1					
ANR	1911892	IfStatement	if ( ! str )		1911806	2					
ANR	1911893	Condition	! str	765:7:28738:28741	1911806	0	True				
ANR	1911894	UnaryOperationExpression	! str		1911806	0					
ANR	1911895	UnaryOperator	!		1911806	0					
ANR	1911896	Identifier	str		1911806	1					
ANR	1911897	CompoundStatement		10:13:330:330	1911806	1					
ANR	1911898	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	766:4:28750:28811	1911806	0	True				
ANR	1911899	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1911806	0					
ANR	1911900	Callee	soap_error0		1911806	0					
ANR	1911901	Identifier	soap_error0		1911806	0					
ANR	1911902	ArgumentList	E_ERROR		1911806	1					
ANR	1911903	Argument	E_ERROR		1911806	0					
ANR	1911904	Identifier	E_ERROR		1911806	0					
ANR	1911905	Argument	"""Encoding: Violation of encoding rules"""		1911806	1					
ANR	1911906	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1911806	0					
ANR	1911907	ExpressionStatement	"ZVAL_STR ( ret , str )"	768:3:28821:28839	1911806	3	True				
ANR	1911908	CallExpression	"ZVAL_STR ( ret , str )"		1911806	0					
ANR	1911909	Callee	ZVAL_STR		1911806	0					
ANR	1911910	Identifier	ZVAL_STR		1911806	0					
ANR	1911911	ArgumentList	ret		1911806	1					
ANR	1911912	Argument	ret		1911806	0					
ANR	1911913	Identifier	ret		1911806	0					
ANR	1911914	Argument	str		1911806	1					
ANR	1911915	Identifier	str		1911806	0					
ANR	1911916	ElseStatement	else		1911806	0					
ANR	1911917	IfStatement	if ( data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL )		1911806	0					
ANR	1911918	Condition	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL	769:13:28854:28931	1911806	0	True				
ANR	1911919	AndExpression	data -> children -> type == XML_CDATA_SECTION_NODE && data -> children -> next == NULL		1911806	0		&&			
ANR	1911920	EqualityExpression	data -> children -> type == XML_CDATA_SECTION_NODE		1911806	0		==			
ANR	1911921	PtrMemberAccess	data -> children -> type		1911806	0					
ANR	1911922	PtrMemberAccess	data -> children		1911806	0					
ANR	1911923	Identifier	data		1911806	0					
ANR	1911924	Identifier	children		1911806	1					
ANR	1911925	Identifier	type		1911806	1					
ANR	1911926	Identifier	XML_CDATA_SECTION_NODE		1911806	1					
ANR	1911927	EqualityExpression	data -> children -> next == NULL		1911806	1		==			
ANR	1911928	PtrMemberAccess	data -> children -> next		1911806	0					
ANR	1911929	PtrMemberAccess	data -> children		1911806	0					
ANR	1911930	Identifier	data		1911806	0					
ANR	1911931	Identifier	children		1911806	1					
ANR	1911932	Identifier	next		1911806	1					
ANR	1911933	Identifier	NULL		1911806	1					
ANR	1911934	CompoundStatement		14:93:520:520	1911806	1					
ANR	1911935	ExpressionStatement	"str = php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) )"	770:3:28939:29027	1911806	0	True				
ANR	1911936	AssignmentExpression	"str = php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) )"		1911806	0		=			
ANR	1911937	Identifier	str		1911806	0					
ANR	1911938	CallExpression	"php_base64_decode ( data -> children -> content , strlen ( ( char * ) data -> children -> content ) )"		1911806	1					
ANR	1911939	Callee	php_base64_decode		1911806	0					
ANR	1911940	Identifier	php_base64_decode		1911806	0					
ANR	1911941	ArgumentList	data -> children -> content		1911806	1					
ANR	1911942	Argument	data -> children -> content		1911806	0					
ANR	1911943	PtrMemberAccess	data -> children -> content		1911806	0					
ANR	1911944	PtrMemberAccess	data -> children		1911806	0					
ANR	1911945	Identifier	data		1911806	0					
ANR	1911946	Identifier	children		1911806	1					
ANR	1911947	Identifier	content		1911806	1					
ANR	1911948	Argument	strlen ( ( char * ) data -> children -> content )		1911806	1					
ANR	1911949	CallExpression	strlen ( ( char * ) data -> children -> content )		1911806	0					
ANR	1911950	Callee	strlen		1911806	0					
ANR	1911951	Identifier	strlen		1911806	0					
ANR	1911952	ArgumentList	( char * ) data -> children -> content		1911806	1					
ANR	1911953	Argument	( char * ) data -> children -> content		1911806	0					
ANR	1911954	CastExpression	( char * ) data -> children -> content		1911806	0					
ANR	1911955	CastTarget	char *		1911806	0					
ANR	1911956	PtrMemberAccess	data -> children -> content		1911806	1					
ANR	1911957	PtrMemberAccess	data -> children		1911806	0					
ANR	1911958	Identifier	data		1911806	0					
ANR	1911959	Identifier	children		1911806	1					
ANR	1911960	Identifier	content		1911806	1					
ANR	1911961	IfStatement	if ( ! str )		1911806	1					
ANR	1911962	Condition	! str	771:7:29036:29039	1911806	0	True				
ANR	1911963	UnaryOperationExpression	! str		1911806	0					
ANR	1911964	UnaryOperator	!		1911806	0					
ANR	1911965	Identifier	str		1911806	1					
ANR	1911966	CompoundStatement		16:13:628:628	1911806	1					
ANR	1911967	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	772:4:29048:29109	1911806	0	True				
ANR	1911968	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1911806	0					
ANR	1911969	Callee	soap_error0		1911806	0					
ANR	1911970	Identifier	soap_error0		1911806	0					
ANR	1911971	ArgumentList	E_ERROR		1911806	1					
ANR	1911972	Argument	E_ERROR		1911806	0					
ANR	1911973	Identifier	E_ERROR		1911806	0					
ANR	1911974	Argument	"""Encoding: Violation of encoding rules"""		1911806	1					
ANR	1911975	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1911806	0					
ANR	1911976	ExpressionStatement	"ZVAL_STR ( ret , str )"	774:3:29119:29137	1911806	2	True				
ANR	1911977	CallExpression	"ZVAL_STR ( ret , str )"		1911806	0					
ANR	1911978	Callee	ZVAL_STR		1911806	0					
ANR	1911979	Identifier	ZVAL_STR		1911806	0					
ANR	1911980	ArgumentList	ret		1911806	1					
ANR	1911981	Argument	ret		1911806	0					
ANR	1911982	Identifier	ret		1911806	0					
ANR	1911983	Argument	str		1911806	1					
ANR	1911984	Identifier	str		1911806	0					
ANR	1911985	ElseStatement	else		1911806	0					
ANR	1911986	CompoundStatement		20:9:734:734	1911806	0					
ANR	1911987	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	776:3:29153:29214	1911806	0	True				
ANR	1911988	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1911806	0					
ANR	1911989	Callee	soap_error0		1911806	0					
ANR	1911990	Identifier	soap_error0		1911806	0					
ANR	1911991	ArgumentList	E_ERROR		1911806	1					
ANR	1911992	Argument	E_ERROR		1911806	0					
ANR	1911993	Identifier	E_ERROR		1911806	0					
ANR	1911994	Argument	"""Encoding: Violation of encoding rules"""		1911806	1					
ANR	1911995	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1911806	0					
ANR	1911996	ElseStatement	else		1911806	0					
ANR	1911997	CompoundStatement		23:8:814:814	1911806	0					
ANR	1911998	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	779:2:29232:29254	1911806	0	True				
ANR	1911999	CallExpression	ZVAL_EMPTY_STRING ( ret )		1911806	0					
ANR	1912000	Callee	ZVAL_EMPTY_STRING		1911806	0					
ANR	1912001	Identifier	ZVAL_EMPTY_STRING		1911806	0					
ANR	1912002	ArgumentList	ret		1911806	1					
ANR	1912003	Argument	ret		1911806	0					
ANR	1912004	Identifier	ret		1911806	0					
ANR	1912005	ReturnStatement	return ret ;	781:1:29260:29270	1911806	4	True				
ANR	1912006	Identifier	ret		1911806	0					
ANR	1912007	ReturnType	static zval *		1911806	1					
ANR	1912008	Identifier	to_zval_base64		1911806	2					
ANR	1912009	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1911806	3					
ANR	1912010	Parameter	zval * ret	755:28:28365:28373	1911806	0	True				
ANR	1912011	ParameterType	zval *		1911806	0					
ANR	1912012	Identifier	ret		1911806	1					
ANR	1912013	Parameter	encodeTypePtr type	755:39:28376:28393	1911806	1	True				
ANR	1912014	ParameterType	encodeTypePtr		1911806	0					
ANR	1912015	Identifier	type		1911806	1					
ANR	1912016	Parameter	xmlNodePtr data	755:59:28396:28410	1911806	2	True				
ANR	1912017	ParameterType	xmlNodePtr		1911806	0					
ANR	1912018	Identifier	data		1911806	1					
ANR	1912019	CFGEntryNode	ENTRY		1911806		True				
ANR	1912020	CFGExitNode	EXIT		1911806		True				
ANR	1912021	Symbol	ret		1911806						
ANR	1912022	Symbol	* * data		1911806						
ANR	1912023	Symbol	data -> children -> next		1911806						
ANR	1912024	Symbol	NULL		1911806						
ANR	1912025	Symbol	data		1911806						
ANR	1912026	Symbol	type		1911806						
ANR	1912027	Symbol	str		1911806						
ANR	1912028	Symbol	strlen		1911806						
ANR	1912029	Symbol	XML_TEXT_NODE		1911806						
ANR	1912030	Symbol	E_ERROR		1911806						
ANR	1912031	Symbol	data -> children		1911806						
ANR	1912032	Symbol	data -> children -> content		1911806						
ANR	1912033	Symbol	* data -> children		1911806						
ANR	1912034	Symbol	php_base64_decode		1911806						
ANR	1912035	Symbol	XML_CDATA_SECTION_NODE		1911806						
ANR	1912036	Symbol	* data		1911806						
ANR	1912037	Symbol	data -> children -> type		1911806						
ANR	1912038	Function	to_zval_hexbin	784:0:29275:30716							
ANR	1912039	FunctionDef	"to_zval_hexbin (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1912038	0					
ANR	1912040	CompoundStatement		785:0:29351:30716	1912038	0					
ANR	1912041	IdentifierDeclStatement	zend_string * str ;	786:1:29354:29370	1912038	0	True				
ANR	1912042	IdentifierDecl	* str		1912038	0					
ANR	1912043	IdentifierDeclType	zend_string *		1912038	0					
ANR	1912044	Identifier	str		1912038	1					
ANR	1912045	IdentifierDeclStatement	"int i , j ;"	787:1:29373:29381	1912038	1	True				
ANR	1912046	IdentifierDecl	i		1912038	0					
ANR	1912047	IdentifierDeclType	int		1912038	0					
ANR	1912048	Identifier	i		1912038	1					
ANR	1912049	IdentifierDecl	j		1912038	1					
ANR	1912050	IdentifierDeclType	int		1912038	0					
ANR	1912051	Identifier	j		1912038	1					
ANR	1912052	IdentifierDeclStatement	unsigned char c ;	788:1:29384:29399	1912038	2	True				
ANR	1912053	IdentifierDecl	c		1912038	0					
ANR	1912054	IdentifierDeclType	unsigned char		1912038	0					
ANR	1912055	Identifier	c		1912038	1					
ANR	1912056	ExpressionStatement	ZVAL_NULL ( ret )	790:1:29403:29417	1912038	3	True				
ANR	1912057	CallExpression	ZVAL_NULL ( ret )		1912038	0					
ANR	1912058	Callee	ZVAL_NULL		1912038	0					
ANR	1912059	Identifier	ZVAL_NULL		1912038	0					
ANR	1912060	ArgumentList	ret		1912038	1					
ANR	1912061	Argument	ret		1912038	0					
ANR	1912062	Identifier	ret		1912038	0					
ANR	1912063	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	791:1:29420:29444	1912038	4	True				
ANR	1912064	CallExpression	"FIND_XML_NULL ( data , ret )"		1912038	0					
ANR	1912065	Callee	FIND_XML_NULL		1912038	0					
ANR	1912066	Identifier	FIND_XML_NULL		1912038	0					
ANR	1912067	ArgumentList	data		1912038	1					
ANR	1912068	Argument	data		1912038	0					
ANR	1912069	Identifier	data		1912038	0					
ANR	1912070	Argument	ret		1912038	1					
ANR	1912071	Identifier	ret		1912038	0					
ANR	1912072	IfStatement	if ( data && data -> children )		1912038	5					
ANR	1912073	Condition	data && data -> children	792:5:29451:29472	1912038	0	True				
ANR	1912074	AndExpression	data && data -> children		1912038	0		&&			
ANR	1912075	Identifier	data		1912038	0					
ANR	1912076	PtrMemberAccess	data -> children		1912038	1					
ANR	1912077	Identifier	data		1912038	0					
ANR	1912078	Identifier	children		1912038	1					
ANR	1912079	CompoundStatement		8:29:123:123	1912038	1					
ANR	1912080	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1912038	0					
ANR	1912081	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	793:6:29483:29551	1912038	0	True				
ANR	1912082	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1912038	0		&&			
ANR	1912083	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1912038	0		==			
ANR	1912084	PtrMemberAccess	data -> children -> type		1912038	0					
ANR	1912085	PtrMemberAccess	data -> children		1912038	0					
ANR	1912086	Identifier	data		1912038	0					
ANR	1912087	Identifier	children		1912038	1					
ANR	1912088	Identifier	type		1912038	1					
ANR	1912089	Identifier	XML_TEXT_NODE		1912038	1					
ANR	1912090	EqualityExpression	data -> children -> next == NULL		1912038	1		==			
ANR	1912091	PtrMemberAccess	data -> children -> next		1912038	0					
ANR	1912092	PtrMemberAccess	data -> children		1912038	0					
ANR	1912093	Identifier	data		1912038	0					
ANR	1912094	Identifier	children		1912038	1					
ANR	1912095	Identifier	next		1912038	1					
ANR	1912096	Identifier	NULL		1912038	1					
ANR	1912097	CompoundStatement		9:77:202:202	1912038	1					
ANR	1912098	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	794:3:29559:29603	1912038	0	True				
ANR	1912099	CallExpression	whiteSpace_collapse ( data -> children -> content )		1912038	0					
ANR	1912100	Callee	whiteSpace_collapse		1912038	0					
ANR	1912101	Identifier	whiteSpace_collapse		1912038	0					
ANR	1912102	ArgumentList	data -> children -> content		1912038	1					
ANR	1912103	Argument	data -> children -> content		1912038	0					
ANR	1912104	PtrMemberAccess	data -> children -> content		1912038	0					
ANR	1912105	PtrMemberAccess	data -> children		1912038	0					
ANR	1912106	Identifier	data		1912038	0					
ANR	1912107	Identifier	children		1912038	1					
ANR	1912108	Identifier	content		1912038	1					
ANR	1912109	ElseStatement	else		1912038	0					
ANR	1912110	IfStatement	if ( data -> children -> type != XML_CDATA_SECTION_NODE || data -> children -> next != NULL )		1912038	0					
ANR	1912111	Condition	data -> children -> type != XML_CDATA_SECTION_NODE || data -> children -> next != NULL	795:13:29618:29695	1912038	0	True				
ANR	1912112	OrExpression	data -> children -> type != XML_CDATA_SECTION_NODE || data -> children -> next != NULL		1912038	0		||			
ANR	1912113	EqualityExpression	data -> children -> type != XML_CDATA_SECTION_NODE		1912038	0		!=			
ANR	1912114	PtrMemberAccess	data -> children -> type		1912038	0					
ANR	1912115	PtrMemberAccess	data -> children		1912038	0					
ANR	1912116	Identifier	data		1912038	0					
ANR	1912117	Identifier	children		1912038	1					
ANR	1912118	Identifier	type		1912038	1					
ANR	1912119	Identifier	XML_CDATA_SECTION_NODE		1912038	1					
ANR	1912120	EqualityExpression	data -> children -> next != NULL		1912038	1		!=			
ANR	1912121	PtrMemberAccess	data -> children -> next		1912038	0					
ANR	1912122	PtrMemberAccess	data -> children		1912038	0					
ANR	1912123	Identifier	data		1912038	0					
ANR	1912124	Identifier	children		1912038	1					
ANR	1912125	Identifier	next		1912038	1					
ANR	1912126	Identifier	NULL		1912038	1					
ANR	1912127	CompoundStatement		11:93:346:346	1912038	1					
ANR	1912128	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	796:3:29703:29764	1912038	0	True				
ANR	1912129	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1912038	0					
ANR	1912130	Callee	soap_error0		1912038	0					
ANR	1912131	Identifier	soap_error0		1912038	0					
ANR	1912132	ArgumentList	E_ERROR		1912038	1					
ANR	1912133	Argument	E_ERROR		1912038	0					
ANR	1912134	Identifier	E_ERROR		1912038	0					
ANR	1912135	Argument	"""Encoding: Violation of encoding rules"""		1912038	1					
ANR	1912136	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1912038	0					
ANR	1912137	ReturnStatement	return ret ;	797:3:29769:29779	1912038	1	True				
ANR	1912138	Identifier	ret		1912038	0					
ANR	1912139	ExpressionStatement	"str = zend_string_alloc ( strlen ( ( char * ) data -> children -> content ) / 2 , 0 )"	799:2:29787:29857	1912038	1	True				
ANR	1912140	AssignmentExpression	"str = zend_string_alloc ( strlen ( ( char * ) data -> children -> content ) / 2 , 0 )"		1912038	0		=			
ANR	1912141	Identifier	str		1912038	0					
ANR	1912142	CallExpression	"zend_string_alloc ( strlen ( ( char * ) data -> children -> content ) / 2 , 0 )"		1912038	1					
ANR	1912143	Callee	zend_string_alloc		1912038	0					
ANR	1912144	Identifier	zend_string_alloc		1912038	0					
ANR	1912145	ArgumentList	strlen ( ( char * ) data -> children -> content ) / 2		1912038	1					
ANR	1912146	Argument	strlen ( ( char * ) data -> children -> content ) / 2		1912038	0					
ANR	1912147	MultiplicativeExpression	strlen ( ( char * ) data -> children -> content ) / 2		1912038	0		/			
ANR	1912148	CallExpression	strlen ( ( char * ) data -> children -> content )		1912038	0					
ANR	1912149	Callee	strlen		1912038	0					
ANR	1912150	Identifier	strlen		1912038	0					
ANR	1912151	ArgumentList	( char * ) data -> children -> content		1912038	1					
ANR	1912152	Argument	( char * ) data -> children -> content		1912038	0					
ANR	1912153	CastExpression	( char * ) data -> children -> content		1912038	0					
ANR	1912154	CastTarget	char *		1912038	0					
ANR	1912155	PtrMemberAccess	data -> children -> content		1912038	1					
ANR	1912156	PtrMemberAccess	data -> children		1912038	0					
ANR	1912157	Identifier	data		1912038	0					
ANR	1912158	Identifier	children		1912038	1					
ANR	1912159	Identifier	content		1912038	1					
ANR	1912160	PrimaryExpression	2		1912038	1					
ANR	1912161	Argument	0		1912038	1					
ANR	1912162	PrimaryExpression	0		1912038	0					
ANR	1912163	ForStatement	for ( i = j = 0 ; i < ZSTR_LEN ( str ) ; i ++ )		1912038	2					
ANR	1912164	ForInit	i = j = 0 ;	800:7:29866:29875	1912038	0	True				
ANR	1912165	AssignmentExpression	i = j = 0		1912038	0		=			
ANR	1912166	Identifier	i		1912038	0					
ANR	1912167	AssignmentExpression	j = 0		1912038	1		=			
ANR	1912168	Identifier	j		1912038	0					
ANR	1912169	PrimaryExpression	0		1912038	1					
ANR	1912170	Condition	i < ZSTR_LEN ( str )	800:18:29877:29893	1912038	1	True				
ANR	1912171	RelationalExpression	i < ZSTR_LEN ( str )		1912038	0		<			
ANR	1912172	Identifier	i		1912038	0					
ANR	1912173	CallExpression	ZSTR_LEN ( str )		1912038	1					
ANR	1912174	Callee	ZSTR_LEN		1912038	0					
ANR	1912175	Identifier	ZSTR_LEN		1912038	0					
ANR	1912176	ArgumentList	str		1912038	1					
ANR	1912177	Argument	str		1912038	0					
ANR	1912178	Identifier	str		1912038	0					
ANR	1912179	PostIncDecOperationExpression	i ++	800:37:29896:29898	1912038	2	True				
ANR	1912180	Identifier	i		1912038	0					
ANR	1912181	IncDec	++		1912038	1					
ANR	1912182	CompoundStatement		16:42:549:549	1912038	3					
ANR	1912183	ExpressionStatement	c = data -> children -> content [ j ++ ]	801:3:29906:29938	1912038	0	True				
ANR	1912184	AssignmentExpression	c = data -> children -> content [ j ++ ]		1912038	0		=			
ANR	1912185	Identifier	c		1912038	0					
ANR	1912186	ArrayIndexing	data -> children -> content [ j ++ ]		1912038	1					
ANR	1912187	PtrMemberAccess	data -> children -> content		1912038	0					
ANR	1912188	PtrMemberAccess	data -> children		1912038	0					
ANR	1912189	Identifier	data		1912038	0					
ANR	1912190	Identifier	children		1912038	1					
ANR	1912191	Identifier	content		1912038	1					
ANR	1912192	PostIncDecOperationExpression	j ++		1912038	1					
ANR	1912193	Identifier	j		1912038	0					
ANR	1912194	IncDec	++		1912038	1					
ANR	1912195	IfStatement	if ( c >= '0' && c <= '9' )		1912038	1					
ANR	1912196	Condition	c >= '0' && c <= '9'	802:7:29947:29966	1912038	0	True				
ANR	1912197	AndExpression	c >= '0' && c <= '9'		1912038	0		&&			
ANR	1912198	RelationalExpression	c >= '0'		1912038	0		>=			
ANR	1912199	Identifier	c		1912038	0					
ANR	1912200	PrimaryExpression	'0'		1912038	1					
ANR	1912201	RelationalExpression	c <= '9'		1912038	1		<=			
ANR	1912202	Identifier	c		1912038	0					
ANR	1912203	PrimaryExpression	'9'		1912038	1					
ANR	1912204	CompoundStatement		18:29:617:617	1912038	1					
ANR	1912205	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = ( c - '0' ) << 4	803:4:29975:30008	1912038	0	True				
ANR	1912206	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = ( c - '0' ) << 4		1912038	0		=			
ANR	1912207	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		1912038	0					
ANR	1912208	CallExpression	ZSTR_VAL ( str )		1912038	0					
ANR	1912209	Callee	ZSTR_VAL		1912038	0					
ANR	1912210	Identifier	ZSTR_VAL		1912038	0					
ANR	1912211	ArgumentList	str		1912038	1					
ANR	1912212	Argument	str		1912038	0					
ANR	1912213	Identifier	str		1912038	0					
ANR	1912214	Identifier	i		1912038	1					
ANR	1912215	ShiftExpression	( c - '0' ) << 4		1912038	1		<<			
ANR	1912216	AdditiveExpression	c - '0'		1912038	0		-			
ANR	1912217	Identifier	c		1912038	0					
ANR	1912218	PrimaryExpression	'0'		1912038	1					
ANR	1912219	PrimaryExpression	4		1912038	1					
ANR	1912220	ElseStatement	else		1912038	0					
ANR	1912221	IfStatement	if ( c >= 'a' && c <= 'f' )		1912038	0					
ANR	1912222	Condition	c >= 'a' && c <= 'f'	804:14:30024:30043	1912038	0	True				
ANR	1912223	AndExpression	c >= 'a' && c <= 'f'		1912038	0		&&			
ANR	1912224	RelationalExpression	c >= 'a'		1912038	0		>=			
ANR	1912225	Identifier	c		1912038	0					
ANR	1912226	PrimaryExpression	'a'		1912038	1					
ANR	1912227	RelationalExpression	c <= 'f'		1912038	1		<=			
ANR	1912228	Identifier	c		1912038	0					
ANR	1912229	PrimaryExpression	'f'		1912038	1					
ANR	1912230	CompoundStatement		20:36:694:694	1912038	1					
ANR	1912231	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = ( c - 'a' + 10 ) << 4	805:4:30052:30090	1912038	0	True				
ANR	1912232	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = ( c - 'a' + 10 ) << 4		1912038	0		=			
ANR	1912233	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		1912038	0					
ANR	1912234	CallExpression	ZSTR_VAL ( str )		1912038	0					
ANR	1912235	Callee	ZSTR_VAL		1912038	0					
ANR	1912236	Identifier	ZSTR_VAL		1912038	0					
ANR	1912237	ArgumentList	str		1912038	1					
ANR	1912238	Argument	str		1912038	0					
ANR	1912239	Identifier	str		1912038	0					
ANR	1912240	Identifier	i		1912038	1					
ANR	1912241	ShiftExpression	( c - 'a' + 10 ) << 4		1912038	1		<<			
ANR	1912242	AdditiveExpression	c - 'a' + 10		1912038	0		-			
ANR	1912243	Identifier	c		1912038	0					
ANR	1912244	AdditiveExpression	'a' + 10		1912038	1		+			
ANR	1912245	PrimaryExpression	'a'		1912038	0					
ANR	1912246	PrimaryExpression	10		1912038	1					
ANR	1912247	PrimaryExpression	4		1912038	1					
ANR	1912248	ElseStatement	else		1912038	0					
ANR	1912249	IfStatement	if ( c >= 'A' && c <= 'F' )		1912038	0					
ANR	1912250	Condition	c >= 'A' && c <= 'F'	806:14:30106:30125	1912038	0	True				
ANR	1912251	AndExpression	c >= 'A' && c <= 'F'		1912038	0		&&			
ANR	1912252	RelationalExpression	c >= 'A'		1912038	0		>=			
ANR	1912253	Identifier	c		1912038	0					
ANR	1912254	PrimaryExpression	'A'		1912038	1					
ANR	1912255	RelationalExpression	c <= 'F'		1912038	1		<=			
ANR	1912256	Identifier	c		1912038	0					
ANR	1912257	PrimaryExpression	'F'		1912038	1					
ANR	1912258	CompoundStatement		22:36:776:776	1912038	1					
ANR	1912259	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = ( c - 'A' + 10 ) << 4	807:4:30134:30172	1912038	0	True				
ANR	1912260	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = ( c - 'A' + 10 ) << 4		1912038	0		=			
ANR	1912261	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		1912038	0					
ANR	1912262	CallExpression	ZSTR_VAL ( str )		1912038	0					
ANR	1912263	Callee	ZSTR_VAL		1912038	0					
ANR	1912264	Identifier	ZSTR_VAL		1912038	0					
ANR	1912265	ArgumentList	str		1912038	1					
ANR	1912266	Argument	str		1912038	0					
ANR	1912267	Identifier	str		1912038	0					
ANR	1912268	Identifier	i		1912038	1					
ANR	1912269	ShiftExpression	( c - 'A' + 10 ) << 4		1912038	1		<<			
ANR	1912270	AdditiveExpression	c - 'A' + 10		1912038	0		-			
ANR	1912271	Identifier	c		1912038	0					
ANR	1912272	AdditiveExpression	'A' + 10		1912038	1		+			
ANR	1912273	PrimaryExpression	'A'		1912038	0					
ANR	1912274	PrimaryExpression	10		1912038	1					
ANR	1912275	PrimaryExpression	4		1912038	1					
ANR	1912276	ElseStatement	else		1912038	0					
ANR	1912277	CompoundStatement		24:10:832:832	1912038	0					
ANR	1912278	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	809:4:30190:30251	1912038	0	True				
ANR	1912279	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1912038	0					
ANR	1912280	Callee	soap_error0		1912038	0					
ANR	1912281	Identifier	soap_error0		1912038	0					
ANR	1912282	ArgumentList	E_ERROR		1912038	1					
ANR	1912283	Argument	E_ERROR		1912038	0					
ANR	1912284	Identifier	E_ERROR		1912038	0					
ANR	1912285	Argument	"""Encoding: Violation of encoding rules"""		1912038	1					
ANR	1912286	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1912038	0					
ANR	1912287	ExpressionStatement	c = data -> children -> content [ j ++ ]	811:3:30261:30293	1912038	2	True				
ANR	1912288	AssignmentExpression	c = data -> children -> content [ j ++ ]		1912038	0		=			
ANR	1912289	Identifier	c		1912038	0					
ANR	1912290	ArrayIndexing	data -> children -> content [ j ++ ]		1912038	1					
ANR	1912291	PtrMemberAccess	data -> children -> content		1912038	0					
ANR	1912292	PtrMemberAccess	data -> children		1912038	0					
ANR	1912293	Identifier	data		1912038	0					
ANR	1912294	Identifier	children		1912038	1					
ANR	1912295	Identifier	content		1912038	1					
ANR	1912296	PostIncDecOperationExpression	j ++		1912038	1					
ANR	1912297	Identifier	j		1912038	0					
ANR	1912298	IncDec	++		1912038	1					
ANR	1912299	IfStatement	if ( c >= '0' && c <= '9' )		1912038	3					
ANR	1912300	Condition	c >= '0' && c <= '9'	812:7:30302:30321	1912038	0	True				
ANR	1912301	AndExpression	c >= '0' && c <= '9'		1912038	0		&&			
ANR	1912302	RelationalExpression	c >= '0'		1912038	0		>=			
ANR	1912303	Identifier	c		1912038	0					
ANR	1912304	PrimaryExpression	'0'		1912038	1					
ANR	1912305	RelationalExpression	c <= '9'		1912038	1		<=			
ANR	1912306	Identifier	c		1912038	0					
ANR	1912307	PrimaryExpression	'9'		1912038	1					
ANR	1912308	CompoundStatement		28:29:972:972	1912038	1					
ANR	1912309	ExpressionStatement	ZSTR_VAL ( str ) [ i ] |= c - '0'	813:4:30330:30357	1912038	0	True				
ANR	1912310	AssignmentExpression	ZSTR_VAL ( str ) [ i ] |= c - '0'		1912038	0		|=			
ANR	1912311	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		1912038	0					
ANR	1912312	CallExpression	ZSTR_VAL ( str )		1912038	0					
ANR	1912313	Callee	ZSTR_VAL		1912038	0					
ANR	1912314	Identifier	ZSTR_VAL		1912038	0					
ANR	1912315	ArgumentList	str		1912038	1					
ANR	1912316	Argument	str		1912038	0					
ANR	1912317	Identifier	str		1912038	0					
ANR	1912318	Identifier	i		1912038	1					
ANR	1912319	AdditiveExpression	c - '0'		1912038	1		-			
ANR	1912320	Identifier	c		1912038	0					
ANR	1912321	PrimaryExpression	'0'		1912038	1					
ANR	1912322	ElseStatement	else		1912038	0					
ANR	1912323	IfStatement	if ( c >= 'a' && c <= 'f' )		1912038	0					
ANR	1912324	Condition	c >= 'a' && c <= 'f'	814:14:30373:30392	1912038	0	True				
ANR	1912325	AndExpression	c >= 'a' && c <= 'f'		1912038	0		&&			
ANR	1912326	RelationalExpression	c >= 'a'		1912038	0		>=			
ANR	1912327	Identifier	c		1912038	0					
ANR	1912328	PrimaryExpression	'a'		1912038	1					
ANR	1912329	RelationalExpression	c <= 'f'		1912038	1		<=			
ANR	1912330	Identifier	c		1912038	0					
ANR	1912331	PrimaryExpression	'f'		1912038	1					
ANR	1912332	CompoundStatement		30:36:1043:1043	1912038	1					
ANR	1912333	ExpressionStatement	ZSTR_VAL ( str ) [ i ] |= c - 'a' + 10	815:4:30401:30433	1912038	0	True				
ANR	1912334	AssignmentExpression	ZSTR_VAL ( str ) [ i ] |= c - 'a' + 10		1912038	0		|=			
ANR	1912335	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		1912038	0					
ANR	1912336	CallExpression	ZSTR_VAL ( str )		1912038	0					
ANR	1912337	Callee	ZSTR_VAL		1912038	0					
ANR	1912338	Identifier	ZSTR_VAL		1912038	0					
ANR	1912339	ArgumentList	str		1912038	1					
ANR	1912340	Argument	str		1912038	0					
ANR	1912341	Identifier	str		1912038	0					
ANR	1912342	Identifier	i		1912038	1					
ANR	1912343	AdditiveExpression	c - 'a' + 10		1912038	1		-			
ANR	1912344	Identifier	c		1912038	0					
ANR	1912345	AdditiveExpression	'a' + 10		1912038	1		+			
ANR	1912346	PrimaryExpression	'a'		1912038	0					
ANR	1912347	PrimaryExpression	10		1912038	1					
ANR	1912348	ElseStatement	else		1912038	0					
ANR	1912349	IfStatement	if ( c >= 'A' && c <= 'F' )		1912038	0					
ANR	1912350	Condition	c >= 'A' && c <= 'F'	816:14:30449:30468	1912038	0	True				
ANR	1912351	AndExpression	c >= 'A' && c <= 'F'		1912038	0		&&			
ANR	1912352	RelationalExpression	c >= 'A'		1912038	0		>=			
ANR	1912353	Identifier	c		1912038	0					
ANR	1912354	PrimaryExpression	'A'		1912038	1					
ANR	1912355	RelationalExpression	c <= 'F'		1912038	1		<=			
ANR	1912356	Identifier	c		1912038	0					
ANR	1912357	PrimaryExpression	'F'		1912038	1					
ANR	1912358	CompoundStatement		32:36:1119:1119	1912038	1					
ANR	1912359	ExpressionStatement	ZSTR_VAL ( str ) [ i ] |= c - 'A' + 10	817:4:30477:30509	1912038	0	True				
ANR	1912360	AssignmentExpression	ZSTR_VAL ( str ) [ i ] |= c - 'A' + 10		1912038	0		|=			
ANR	1912361	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		1912038	0					
ANR	1912362	CallExpression	ZSTR_VAL ( str )		1912038	0					
ANR	1912363	Callee	ZSTR_VAL		1912038	0					
ANR	1912364	Identifier	ZSTR_VAL		1912038	0					
ANR	1912365	ArgumentList	str		1912038	1					
ANR	1912366	Argument	str		1912038	0					
ANR	1912367	Identifier	str		1912038	0					
ANR	1912368	Identifier	i		1912038	1					
ANR	1912369	AdditiveExpression	c - 'A' + 10		1912038	1		-			
ANR	1912370	Identifier	c		1912038	0					
ANR	1912371	AdditiveExpression	'A' + 10		1912038	1		+			
ANR	1912372	PrimaryExpression	'A'		1912038	0					
ANR	1912373	PrimaryExpression	10		1912038	1					
ANR	1912374	ElseStatement	else		1912038	0					
ANR	1912375	CompoundStatement		34:10:1169:1169	1912038	0					
ANR	1912376	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	819:4:30527:30588	1912038	0	True				
ANR	1912377	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1912038	0					
ANR	1912378	Callee	soap_error0		1912038	0					
ANR	1912379	Identifier	soap_error0		1912038	0					
ANR	1912380	ArgumentList	E_ERROR		1912038	1					
ANR	1912381	Argument	E_ERROR		1912038	0					
ANR	1912382	Identifier	E_ERROR		1912038	0					
ANR	1912383	Argument	"""Encoding: Violation of encoding rules"""		1912038	1					
ANR	1912384	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1912038	0					
ANR	1912385	ExpressionStatement	ZSTR_VAL ( str ) [ ZSTR_LEN ( str ) ] = '\\0'	822:2:30601:30636	1912038	3	True				
ANR	1912386	AssignmentExpression	ZSTR_VAL ( str ) [ ZSTR_LEN ( str ) ] = '\\0'		1912038	0		=			
ANR	1912387	ArrayIndexing	ZSTR_VAL ( str ) [ ZSTR_LEN ( str ) ]		1912038	0					
ANR	1912388	CallExpression	ZSTR_VAL ( str )		1912038	0					
ANR	1912389	Callee	ZSTR_VAL		1912038	0					
ANR	1912390	Identifier	ZSTR_VAL		1912038	0					
ANR	1912391	ArgumentList	str		1912038	1					
ANR	1912392	Argument	str		1912038	0					
ANR	1912393	Identifier	str		1912038	0					
ANR	1912394	CallExpression	ZSTR_LEN ( str )		1912038	1					
ANR	1912395	Callee	ZSTR_LEN		1912038	0					
ANR	1912396	Identifier	ZSTR_LEN		1912038	0					
ANR	1912397	ArgumentList	str		1912038	1					
ANR	1912398	Argument	str		1912038	0					
ANR	1912399	Identifier	str		1912038	0					
ANR	1912400	PrimaryExpression	'\\0'		1912038	1					
ANR	1912401	ExpressionStatement	"ZVAL_NEW_STR ( ret , str )"	823:2:30640:30662	1912038	4	True				
ANR	1912402	CallExpression	"ZVAL_NEW_STR ( ret , str )"		1912038	0					
ANR	1912403	Callee	ZVAL_NEW_STR		1912038	0					
ANR	1912404	Identifier	ZVAL_NEW_STR		1912038	0					
ANR	1912405	ArgumentList	ret		1912038	1					
ANR	1912406	Argument	ret		1912038	0					
ANR	1912407	Identifier	ret		1912038	0					
ANR	1912408	Argument	str		1912038	1					
ANR	1912409	Identifier	str		1912038	0					
ANR	1912410	ElseStatement	else		1912038	0					
ANR	1912411	CompoundStatement		40:8:1320:1320	1912038	0					
ANR	1912412	ExpressionStatement	ZVAL_EMPTY_STRING ( ret )	825:2:30676:30698	1912038	0	True				
ANR	1912413	CallExpression	ZVAL_EMPTY_STRING ( ret )		1912038	0					
ANR	1912414	Callee	ZVAL_EMPTY_STRING		1912038	0					
ANR	1912415	Identifier	ZVAL_EMPTY_STRING		1912038	0					
ANR	1912416	ArgumentList	ret		1912038	1					
ANR	1912417	Argument	ret		1912038	0					
ANR	1912418	Identifier	ret		1912038	0					
ANR	1912419	ReturnStatement	return ret ;	827:1:30704:30714	1912038	6	True				
ANR	1912420	Identifier	ret		1912038	0					
ANR	1912421	ReturnType	static zval *		1912038	1					
ANR	1912422	Identifier	to_zval_hexbin		1912038	2					
ANR	1912423	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1912038	3					
ANR	1912424	Parameter	zval * ret	784:28:29303:29311	1912038	0	True				
ANR	1912425	ParameterType	zval *		1912038	0					
ANR	1912426	Identifier	ret		1912038	1					
ANR	1912427	Parameter	encodeTypePtr type	784:39:29314:29331	1912038	1	True				
ANR	1912428	ParameterType	encodeTypePtr		1912038	0					
ANR	1912429	Identifier	type		1912038	1					
ANR	1912430	Parameter	xmlNodePtr data	784:59:29334:29348	1912038	2	True				
ANR	1912431	ParameterType	xmlNodePtr		1912038	0					
ANR	1912432	Identifier	data		1912038	1					
ANR	1912433	CFGEntryNode	ENTRY		1912038		True				
ANR	1912434	CFGExitNode	EXIT		1912038		True				
ANR	1912435	Symbol	* * data		1912038						
ANR	1912436	Symbol	data -> children -> next		1912038						
ANR	1912437	Symbol	data		1912038						
ANR	1912438	Symbol	type		1912038						
ANR	1912439	Symbol	strlen		1912038						
ANR	1912440	Symbol	XML_TEXT_NODE		1912038						
ANR	1912441	Symbol	* ZSTR_LEN		1912038						
ANR	1912442	Symbol	data -> children -> content		1912038						
ANR	1912443	Symbol	* data -> children		1912038						
ANR	1912444	Symbol	* data -> children -> content		1912038						
ANR	1912445	Symbol	* ZSTR_VAL		1912038						
ANR	1912446	Symbol	ret		1912038						
ANR	1912447	Symbol	zend_string_alloc		1912038						
ANR	1912448	Symbol	c		1912038						
ANR	1912449	Symbol	NULL		1912038						
ANR	1912450	Symbol	i		1912038						
ANR	1912451	Symbol	j		1912038						
ANR	1912452	Symbol	ZSTR_VAL		1912038						
ANR	1912453	Symbol	str		1912038						
ANR	1912454	Symbol	E_ERROR		1912038						
ANR	1912455	Symbol	* i		1912038						
ANR	1912456	Symbol	data -> children		1912038						
ANR	1912457	Symbol	* * data -> children		1912038						
ANR	1912458	Symbol	ZSTR_LEN		1912038						
ANR	1912459	Symbol	XML_CDATA_SECTION_NODE		1912038						
ANR	1912460	Symbol	* * * data		1912038						
ANR	1912461	Symbol	* data		1912038						
ANR	1912462	Symbol	data -> children -> type		1912038						
ANR	1912463	Function	to_xml_string	830:0:30719:32741							
ANR	1912464	FunctionDef	"to_xml_string (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1912463	0					
ANR	1912465	CompoundStatement		831:0:30813:32741	1912463	0					
ANR	1912466	IdentifierDeclStatement	"xmlNodePtr ret , text ;"	832:1:30816:30836	1912463	0	True				
ANR	1912467	IdentifierDecl	ret		1912463	0					
ANR	1912468	IdentifierDeclType	xmlNodePtr		1912463	0					
ANR	1912469	Identifier	ret		1912463	1					
ANR	1912470	IdentifierDecl	text		1912463	1					
ANR	1912471	IdentifierDeclType	xmlNodePtr		1912463	0					
ANR	1912472	Identifier	text		1912463	1					
ANR	1912473	IdentifierDeclStatement	char * str ;	833:1:30839:30848	1912463	1	True				
ANR	1912474	IdentifierDecl	* str		1912463	0					
ANR	1912475	IdentifierDeclType	char *		1912463	0					
ANR	1912476	Identifier	str		1912463	1					
ANR	1912477	IdentifierDeclStatement	int new_len ;	834:1:30851:30862	1912463	2	True				
ANR	1912478	IdentifierDecl	new_len		1912463	0					
ANR	1912479	IdentifierDeclType	int		1912463	0					
ANR	1912480	Identifier	new_len		1912463	1					
ANR	1912481	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	836:1:30866:30907	1912463	3	True				
ANR	1912482	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1912463	0		=			
ANR	1912483	Identifier	ret		1912463	0					
ANR	1912484	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1912463	1					
ANR	1912485	Callee	xmlNewNode		1912463	0					
ANR	1912486	Identifier	xmlNewNode		1912463	0					
ANR	1912487	ArgumentList	NULL		1912463	1					
ANR	1912488	Argument	NULL		1912463	0					
ANR	1912489	Identifier	NULL		1912463	0					
ANR	1912490	Argument	"BAD_CAST ( ""BOGUS"" )"		1912463	1					
ANR	1912491	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1912463	0					
ANR	1912492	Callee	BAD_CAST		1912463	0					
ANR	1912493	Identifier	BAD_CAST		1912463	0					
ANR	1912494	ArgumentList	"""BOGUS"""		1912463	1					
ANR	1912495	Argument	"""BOGUS"""		1912463	0					
ANR	1912496	PrimaryExpression	"""BOGUS"""		1912463	0					
ANR	1912497	ExpressionStatement	"xmlAddChild ( parent , ret )"	837:1:30910:30934	1912463	4	True				
ANR	1912498	CallExpression	"xmlAddChild ( parent , ret )"		1912463	0					
ANR	1912499	Callee	xmlAddChild		1912463	0					
ANR	1912500	Identifier	xmlAddChild		1912463	0					
ANR	1912501	ArgumentList	parent		1912463	1					
ANR	1912502	Argument	parent		1912463	0					
ANR	1912503	Identifier	parent		1912463	0					
ANR	1912504	Argument	ret		1912463	1					
ANR	1912505	Identifier	ret		1912463	0					
ANR	1912506	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	838:1:30937:30969	1912463	5	True				
ANR	1912507	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1912463	0					
ANR	1912508	Callee	FIND_ZVAL_NULL		1912463	0					
ANR	1912509	Identifier	FIND_ZVAL_NULL		1912463	0					
ANR	1912510	ArgumentList	data		1912463	1					
ANR	1912511	Argument	data		1912463	0					
ANR	1912512	Identifier	data		1912463	0					
ANR	1912513	Argument	ret		1912463	1					
ANR	1912514	Identifier	ret		1912463	0					
ANR	1912515	Argument	style		1912463	2					
ANR	1912516	Identifier	style		1912463	0					
ANR	1912517	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1912463	6					
ANR	1912518	Condition	Z_TYPE_P ( data ) == IS_STRING	840:5:30977:31003	1912463	0	True				
ANR	1912519	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1912463	0		==			
ANR	1912520	CallExpression	Z_TYPE_P ( data )		1912463	0					
ANR	1912521	Callee	Z_TYPE_P		1912463	0					
ANR	1912522	Identifier	Z_TYPE_P		1912463	0					
ANR	1912523	ArgumentList	data		1912463	1					
ANR	1912524	Argument	data		1912463	0					
ANR	1912525	Identifier	data		1912463	0					
ANR	1912526	Identifier	IS_STRING		1912463	1					
ANR	1912527	CompoundStatement		10:34:192:192	1912463	1					
ANR	1912528	ExpressionStatement	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"	841:2:31010:31060	1912463	0	True				
ANR	1912529	AssignmentExpression	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1912463	0		=			
ANR	1912530	Identifier	str		1912463	0					
ANR	1912531	CallExpression	"estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1912463	1					
ANR	1912532	Callee	estrndup		1912463	0					
ANR	1912533	Identifier	estrndup		1912463	0					
ANR	1912534	ArgumentList	Z_STRVAL_P ( data )		1912463	1					
ANR	1912535	Argument	Z_STRVAL_P ( data )		1912463	0					
ANR	1912536	CallExpression	Z_STRVAL_P ( data )		1912463	0					
ANR	1912537	Callee	Z_STRVAL_P		1912463	0					
ANR	1912538	Identifier	Z_STRVAL_P		1912463	0					
ANR	1912539	ArgumentList	data		1912463	1					
ANR	1912540	Argument	data		1912463	0					
ANR	1912541	Identifier	data		1912463	0					
ANR	1912542	Argument	Z_STRLEN_P ( data )		1912463	1					
ANR	1912543	CallExpression	Z_STRLEN_P ( data )		1912463	0					
ANR	1912544	Callee	Z_STRLEN_P		1912463	0					
ANR	1912545	Identifier	Z_STRLEN_P		1912463	0					
ANR	1912546	ArgumentList	data		1912463	1					
ANR	1912547	Argument	data		1912463	0					
ANR	1912548	Identifier	data		1912463	0					
ANR	1912549	ExpressionStatement	new_len = Z_STRLEN_P ( data )	842:2:31064:31090	1912463	1	True				
ANR	1912550	AssignmentExpression	new_len = Z_STRLEN_P ( data )		1912463	0		=			
ANR	1912551	Identifier	new_len		1912463	0					
ANR	1912552	CallExpression	Z_STRLEN_P ( data )		1912463	1					
ANR	1912553	Callee	Z_STRLEN_P		1912463	0					
ANR	1912554	Identifier	Z_STRLEN_P		1912463	0					
ANR	1912555	ArgumentList	data		1912463	1					
ANR	1912556	Argument	data		1912463	0					
ANR	1912557	Identifier	data		1912463	0					
ANR	1912558	ElseStatement	else		1912463	0					
ANR	1912559	CompoundStatement		14:2:290:330	1912463	0					
ANR	1912560	IdentifierDeclStatement	zend_string * tmp = zval_get_string ( data ) ;	844:2:31104:31144	1912463	0	True				
ANR	1912561	IdentifierDecl	* tmp = zval_get_string ( data )		1912463	0					
ANR	1912562	IdentifierDeclType	zend_string *		1912463	0					
ANR	1912563	Identifier	tmp		1912463	1					
ANR	1912564	AssignmentExpression	* tmp = zval_get_string ( data )		1912463	2		=			
ANR	1912565	Identifier	tmp		1912463	0					
ANR	1912566	CallExpression	zval_get_string ( data )		1912463	1					
ANR	1912567	Callee	zval_get_string		1912463	0					
ANR	1912568	Identifier	zval_get_string		1912463	0					
ANR	1912569	ArgumentList	data		1912463	1					
ANR	1912570	Argument	data		1912463	0					
ANR	1912571	Identifier	data		1912463	0					
ANR	1912572	ExpressionStatement	"str = estrndup ( ZSTR_VAL ( tmp ) , ZSTR_LEN ( tmp ) )"	845:2:31148:31192	1912463	1	True				
ANR	1912573	AssignmentExpression	"str = estrndup ( ZSTR_VAL ( tmp ) , ZSTR_LEN ( tmp ) )"		1912463	0		=			
ANR	1912574	Identifier	str		1912463	0					
ANR	1912575	CallExpression	"estrndup ( ZSTR_VAL ( tmp ) , ZSTR_LEN ( tmp ) )"		1912463	1					
ANR	1912576	Callee	estrndup		1912463	0					
ANR	1912577	Identifier	estrndup		1912463	0					
ANR	1912578	ArgumentList	ZSTR_VAL ( tmp )		1912463	1					
ANR	1912579	Argument	ZSTR_VAL ( tmp )		1912463	0					
ANR	1912580	CallExpression	ZSTR_VAL ( tmp )		1912463	0					
ANR	1912581	Callee	ZSTR_VAL		1912463	0					
ANR	1912582	Identifier	ZSTR_VAL		1912463	0					
ANR	1912583	ArgumentList	tmp		1912463	1					
ANR	1912584	Argument	tmp		1912463	0					
ANR	1912585	Identifier	tmp		1912463	0					
ANR	1912586	Argument	ZSTR_LEN ( tmp )		1912463	1					
ANR	1912587	CallExpression	ZSTR_LEN ( tmp )		1912463	0					
ANR	1912588	Callee	ZSTR_LEN		1912463	0					
ANR	1912589	Identifier	ZSTR_LEN		1912463	0					
ANR	1912590	ArgumentList	tmp		1912463	1					
ANR	1912591	Argument	tmp		1912463	0					
ANR	1912592	Identifier	tmp		1912463	0					
ANR	1912593	ExpressionStatement	new_len = ZSTR_LEN ( tmp )	846:2:31196:31219	1912463	2	True				
ANR	1912594	AssignmentExpression	new_len = ZSTR_LEN ( tmp )		1912463	0		=			
ANR	1912595	Identifier	new_len		1912463	0					
ANR	1912596	CallExpression	ZSTR_LEN ( tmp )		1912463	1					
ANR	1912597	Callee	ZSTR_LEN		1912463	0					
ANR	1912598	Identifier	ZSTR_LEN		1912463	0					
ANR	1912599	ArgumentList	tmp		1912463	1					
ANR	1912600	Argument	tmp		1912463	0					
ANR	1912601	Identifier	tmp		1912463	0					
ANR	1912602	ExpressionStatement	zend_string_release ( tmp )	847:2:31223:31247	1912463	3	True				
ANR	1912603	CallExpression	zend_string_release ( tmp )		1912463	0					
ANR	1912604	Callee	zend_string_release		1912463	0					
ANR	1912605	Identifier	zend_string_release		1912463	0					
ANR	1912606	ArgumentList	tmp		1912463	1					
ANR	1912607	Argument	tmp		1912463	0					
ANR	1912608	Identifier	tmp		1912463	0					
ANR	1912609	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1912463	7					
ANR	1912610	Condition	SOAP_GLOBAL ( encoding ) != NULL	850:5:31258:31286	1912463	0	True				
ANR	1912611	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1912463	0		!=			
ANR	1912612	CallExpression	SOAP_GLOBAL ( encoding )		1912463	0					
ANR	1912613	Callee	SOAP_GLOBAL		1912463	0					
ANR	1912614	Identifier	SOAP_GLOBAL		1912463	0					
ANR	1912615	ArgumentList	encoding		1912463	1					
ANR	1912616	Argument	encoding		1912463	0					
ANR	1912617	Identifier	encoding		1912463	0					
ANR	1912618	Identifier	NULL		1912463	1					
ANR	1912619	CompoundStatement		23:2:577:633	1912463	1					
ANR	1912620	IdentifierDeclStatement	"xmlBufferPtr in = xmlBufferCreateStatic ( str , new_len ) ;"	851:2:31293:31347	1912463	0	True				
ANR	1912621	IdentifierDecl	"in = xmlBufferCreateStatic ( str , new_len )"		1912463	0					
ANR	1912622	IdentifierDeclType	xmlBufferPtr		1912463	0					
ANR	1912623	Identifier	in		1912463	1					
ANR	1912624	AssignmentExpression	"in = xmlBufferCreateStatic ( str , new_len )"		1912463	2		=			
ANR	1912625	Identifier	in		1912463	0					
ANR	1912626	CallExpression	"xmlBufferCreateStatic ( str , new_len )"		1912463	1					
ANR	1912627	Callee	xmlBufferCreateStatic		1912463	0					
ANR	1912628	Identifier	xmlBufferCreateStatic		1912463	0					
ANR	1912629	ArgumentList	str		1912463	1					
ANR	1912630	Argument	str		1912463	0					
ANR	1912631	Identifier	str		1912463	0					
ANR	1912632	Argument	new_len		1912463	1					
ANR	1912633	Identifier	new_len		1912463	0					
ANR	1912634	IdentifierDeclStatement	xmlBufferPtr out = xmlBufferCreate ( ) ;	852:2:31351:31387	1912463	1	True				
ANR	1912635	IdentifierDecl	out = xmlBufferCreate ( )		1912463	0					
ANR	1912636	IdentifierDeclType	xmlBufferPtr		1912463	0					
ANR	1912637	Identifier	out		1912463	1					
ANR	1912638	AssignmentExpression	out = xmlBufferCreate ( )		1912463	2		=			
ANR	1912639	Identifier	out		1912463	0					
ANR	1912640	CallExpression	xmlBufferCreate ( )		1912463	1					
ANR	1912641	Callee	xmlBufferCreate		1912463	0					
ANR	1912642	Identifier	xmlBufferCreate		1912463	0					
ANR	1912643	ArgumentList			1912463	1					
ANR	1912644	IdentifierDeclStatement	"int n = xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in ) ;"	853:2:31391:31447	1912463	2	True				
ANR	1912645	IdentifierDecl	"n = xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1912463	0					
ANR	1912646	IdentifierDeclType	int		1912463	0					
ANR	1912647	Identifier	n		1912463	1					
ANR	1912648	AssignmentExpression	"n = xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1912463	2		=			
ANR	1912649	Identifier	n		1912463	0					
ANR	1912650	CallExpression	"xmlCharEncInFunc ( SOAP_GLOBAL ( encoding ) , out , in )"		1912463	1					
ANR	1912651	Callee	xmlCharEncInFunc		1912463	0					
ANR	1912652	Identifier	xmlCharEncInFunc		1912463	0					
ANR	1912653	ArgumentList	SOAP_GLOBAL ( encoding )		1912463	1					
ANR	1912654	Argument	SOAP_GLOBAL ( encoding )		1912463	0					
ANR	1912655	CallExpression	SOAP_GLOBAL ( encoding )		1912463	0					
ANR	1912656	Callee	SOAP_GLOBAL		1912463	0					
ANR	1912657	Identifier	SOAP_GLOBAL		1912463	0					
ANR	1912658	ArgumentList	encoding		1912463	1					
ANR	1912659	Argument	encoding		1912463	0					
ANR	1912660	Identifier	encoding		1912463	0					
ANR	1912661	Argument	out		1912463	1					
ANR	1912662	Identifier	out		1912463	0					
ANR	1912663	Argument	in		1912463	2					
ANR	1912664	Identifier	in		1912463	0					
ANR	1912665	IfStatement	if ( n >= 0 )		1912463	3					
ANR	1912666	Condition	n >= 0	855:6:31456:31461	1912463	0	True				
ANR	1912667	RelationalExpression	n >= 0		1912463	0		>=			
ANR	1912668	Identifier	n		1912463	0					
ANR	1912669	PrimaryExpression	0		1912463	1					
ANR	1912670	CompoundStatement		25:14:650:650	1912463	1					
ANR	1912671	ExpressionStatement	efree ( str )	856:3:31469:31479	1912463	0	True				
ANR	1912672	CallExpression	efree ( str )		1912463	0					
ANR	1912673	Callee	efree		1912463	0					
ANR	1912674	Identifier	efree		1912463	0					
ANR	1912675	ArgumentList	str		1912463	1					
ANR	1912676	Argument	str		1912463	0					
ANR	1912677	Identifier	str		1912463	0					
ANR	1912678	ExpressionStatement	str = estrdup ( ( char * ) xmlBufferContent ( out ) )	857:3:31484:31527	1912463	1	True				
ANR	1912679	AssignmentExpression	str = estrdup ( ( char * ) xmlBufferContent ( out ) )		1912463	0		=			
ANR	1912680	Identifier	str		1912463	0					
ANR	1912681	CallExpression	estrdup ( ( char * ) xmlBufferContent ( out ) )		1912463	1					
ANR	1912682	Callee	estrdup		1912463	0					
ANR	1912683	Identifier	estrdup		1912463	0					
ANR	1912684	ArgumentList	( char * ) xmlBufferContent ( out )		1912463	1					
ANR	1912685	Argument	( char * ) xmlBufferContent ( out )		1912463	0					
ANR	1912686	CastExpression	( char * ) xmlBufferContent ( out )		1912463	0					
ANR	1912687	CastTarget	char *		1912463	0					
ANR	1912688	CallExpression	xmlBufferContent ( out )		1912463	1					
ANR	1912689	Callee	xmlBufferContent		1912463	0					
ANR	1912690	Identifier	xmlBufferContent		1912463	0					
ANR	1912691	ArgumentList	out		1912463	1					
ANR	1912692	Argument	out		1912463	0					
ANR	1912693	Identifier	out		1912463	0					
ANR	1912694	ExpressionStatement	new_len = n	858:3:31532:31543	1912463	2	True				
ANR	1912695	AssignmentExpression	new_len = n		1912463	0		=			
ANR	1912696	Identifier	new_len		1912463	0					
ANR	1912697	Identifier	n		1912463	1					
ANR	1912698	ExpressionStatement	xmlBufferFree ( out )	860:2:31551:31569	1912463	4	True				
ANR	1912699	CallExpression	xmlBufferFree ( out )		1912463	0					
ANR	1912700	Callee	xmlBufferFree		1912463	0					
ANR	1912701	Identifier	xmlBufferFree		1912463	0					
ANR	1912702	ArgumentList	out		1912463	1					
ANR	1912703	Argument	out		1912463	0					
ANR	1912704	Identifier	out		1912463	0					
ANR	1912705	ExpressionStatement	xmlBufferFree ( in )	861:2:31573:31590	1912463	5	True				
ANR	1912706	CallExpression	xmlBufferFree ( in )		1912463	0					
ANR	1912707	Callee	xmlBufferFree		1912463	0					
ANR	1912708	Identifier	xmlBufferFree		1912463	0					
ANR	1912709	ArgumentList	in		1912463	1					
ANR	1912710	Argument	in		1912463	0					
ANR	1912711	Identifier	in		1912463	0					
ANR	1912712	IfStatement	if ( ! php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) ) )		1912463	8					
ANR	1912713	Condition	! php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) )	864:5:31601:31639	1912463	0	True				
ANR	1912714	UnaryOperationExpression	! php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) )		1912463	0					
ANR	1912715	UnaryOperator	!		1912463	0					
ANR	1912716	CallExpression	php_libxml_xmlCheckUTF8 ( BAD_CAST ( str ) )		1912463	1					
ANR	1912717	Callee	php_libxml_xmlCheckUTF8		1912463	0					
ANR	1912718	Identifier	php_libxml_xmlCheckUTF8		1912463	0					
ANR	1912719	ArgumentList	BAD_CAST ( str )		1912463	1					
ANR	1912720	Argument	BAD_CAST ( str )		1912463	0					
ANR	1912721	CallExpression	BAD_CAST ( str )		1912463	0					
ANR	1912722	Callee	BAD_CAST		1912463	0					
ANR	1912723	Identifier	BAD_CAST		1912463	0					
ANR	1912724	ArgumentList	str		1912463	1					
ANR	1912725	Argument	str		1912463	0					
ANR	1912726	Identifier	str		1912463	0					
ANR	1912727	CompoundStatement		37:2:878:883	1912463	1					
ANR	1912728	IdentifierDeclStatement	char * err = emalloc ( new_len + 8 ) ;	865:2:31646:31678	1912463	0	True				
ANR	1912729	IdentifierDecl	* err = emalloc ( new_len + 8 )		1912463	0					
ANR	1912730	IdentifierDeclType	char *		1912463	0					
ANR	1912731	Identifier	err		1912463	1					
ANR	1912732	AssignmentExpression	* err = emalloc ( new_len + 8 )		1912463	2		=			
ANR	1912733	Identifier	err		1912463	0					
ANR	1912734	CallExpression	emalloc ( new_len + 8 )		1912463	1					
ANR	1912735	Callee	emalloc		1912463	0					
ANR	1912736	Identifier	emalloc		1912463	0					
ANR	1912737	ArgumentList	new_len + 8		1912463	1					
ANR	1912738	Argument	new_len + 8		1912463	0					
ANR	1912739	AdditiveExpression	new_len + 8		1912463	0		+			
ANR	1912740	Identifier	new_len		1912463	0					
ANR	1912741	PrimaryExpression	8		1912463	1					
ANR	1912742	IdentifierDeclStatement	char c ;	866:2:31682:31688	1912463	1	True				
ANR	1912743	IdentifierDecl	c		1912463	0					
ANR	1912744	IdentifierDeclType	char		1912463	0					
ANR	1912745	Identifier	c		1912463	1					
ANR	1912746	IdentifierDeclStatement	int i ;	867:2:31692:31697	1912463	2	True				
ANR	1912747	IdentifierDecl	i		1912463	0					
ANR	1912748	IdentifierDeclType	int		1912463	0					
ANR	1912749	Identifier	i		1912463	1					
ANR	1912750	ExpressionStatement	"memcpy ( err , str , new_len + 1 )"	869:2:31702:31729	1912463	3	True				
ANR	1912751	CallExpression	"memcpy ( err , str , new_len + 1 )"		1912463	0					
ANR	1912752	Callee	memcpy		1912463	0					
ANR	1912753	Identifier	memcpy		1912463	0					
ANR	1912754	ArgumentList	err		1912463	1					
ANR	1912755	Argument	err		1912463	0					
ANR	1912756	Identifier	err		1912463	0					
ANR	1912757	Argument	str		1912463	1					
ANR	1912758	Identifier	str		1912463	0					
ANR	1912759	Argument	new_len + 1		1912463	2					
ANR	1912760	AdditiveExpression	new_len + 1		1912463	0		+			
ANR	1912761	Identifier	new_len		1912463	0					
ANR	1912762	PrimaryExpression	1		1912463	1					
ANR	1912763	ForStatement	for ( i = 0 ; ( c = err [ i ++ ] ) ; )		1912463	4					
ANR	1912764	ForInit	i = 0 ;	870:7:31738:31743	1912463	0	True				
ANR	1912765	AssignmentExpression	i = 0		1912463	0		=			
ANR	1912766	Identifier	i		1912463	0					
ANR	1912767	PrimaryExpression	0		1912463	1					
ANR	1912768	Condition	c = err [ i ++ ]	870:14:31745:31758	1912463	1	True				
ANR	1912769	AssignmentExpression	c = err [ i ++ ]		1912463	0		=			
ANR	1912770	Identifier	c		1912463	0					
ANR	1912771	ArrayIndexing	err [ i ++ ]		1912463	1					
ANR	1912772	Identifier	err		1912463	0					
ANR	1912773	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912774	Identifier	i		1912463	0					
ANR	1912775	IncDec	++		1912463	1					
ANR	1912776	CompoundStatement		40:31:948:948	1912463	2					
ANR	1912777	IfStatement	if ( ( c & 0x80 ) == 0 )		1912463	0					
ANR	1912778	Condition	( c & 0x80 ) == 0	871:7:31771:31785	1912463	0	True				
ANR	1912779	EqualityExpression	( c & 0x80 ) == 0		1912463	0		==			
ANR	1912780	BitAndExpression	c & 0x80		1912463	0		&			
ANR	1912781	Identifier	c		1912463	0					
ANR	1912782	PrimaryExpression	0x80		1912463	1					
ANR	1912783	PrimaryExpression	0		1912463	1					
ANR	1912784	CompoundStatement		41:24:974:974	1912463	1					
ANR	1912785	ElseStatement	else		1912463	0					
ANR	1912786	IfStatement	if ( ( c & 0xe0 ) == 0xc0 )		1912463	0					
ANR	1912787	Condition	( c & 0xe0 ) == 0xc0	872:14:31804:31821	1912463	0	True				
ANR	1912788	EqualityExpression	( c & 0xe0 ) == 0xc0		1912463	0		==			
ANR	1912789	BitAndExpression	c & 0xe0		1912463	0		&			
ANR	1912790	Identifier	c		1912463	0					
ANR	1912791	PrimaryExpression	0xe0		1912463	1					
ANR	1912792	PrimaryExpression	0xc0		1912463	1					
ANR	1912793	CompoundStatement		42:34:1010:1010	1912463	1					
ANR	1912794	IfStatement	if ( ( err [ i ] & 0xc0 ) != 0x80 )		1912463	0					
ANR	1912795	Condition	( err [ i ] & 0xc0 ) != 0x80	873:8:31834:31856	1912463	0	True				
ANR	1912796	EqualityExpression	( err [ i ] & 0xc0 ) != 0x80		1912463	0		!=			
ANR	1912797	BitAndExpression	err [ i ] & 0xc0		1912463	0		&			
ANR	1912798	ArrayIndexing	err [ i ]		1912463	0					
ANR	1912799	Identifier	err		1912463	0					
ANR	1912800	Identifier	i		1912463	1					
ANR	1912801	PrimaryExpression	0xc0		1912463	1					
ANR	1912802	PrimaryExpression	0x80		1912463	1					
ANR	1912803	CompoundStatement		43:33:1045:1045	1912463	1					
ANR	1912804	BreakStatement	break ;	874:5:31866:31871	1912463	0	True				
ANR	1912805	ExpressionStatement	i ++	876:4:31883:31886	1912463	1	True				
ANR	1912806	PostIncDecOperationExpression	i ++		1912463	0					
ANR	1912807	Identifier	i		1912463	0					
ANR	1912808	IncDec	++		1912463	1					
ANR	1912809	ElseStatement	else		1912463	0					
ANR	1912810	IfStatement	if ( ( c & 0xf0 ) == 0xe0 )		1912463	0					
ANR	1912811	Condition	( c & 0xf0 ) == 0xe0	877:14:31902:31919	1912463	0	True				
ANR	1912812	EqualityExpression	( c & 0xf0 ) == 0xe0		1912463	0		==			
ANR	1912813	BitAndExpression	c & 0xf0		1912463	0		&			
ANR	1912814	Identifier	c		1912463	0					
ANR	1912815	PrimaryExpression	0xf0		1912463	1					
ANR	1912816	PrimaryExpression	0xe0		1912463	1					
ANR	1912817	CompoundStatement		47:34:1108:1108	1912463	1					
ANR	1912818	IfStatement	if ( ( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 )		1912463	0					
ANR	1912819	Condition	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80	878:8:31932:31983	1912463	0	True				
ANR	1912820	OrExpression	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80		1912463	0		||			
ANR	1912821	EqualityExpression	( err [ i ] & 0xc0 ) != 0x80		1912463	0		!=			
ANR	1912822	BitAndExpression	err [ i ] & 0xc0		1912463	0		&			
ANR	1912823	ArrayIndexing	err [ i ]		1912463	0					
ANR	1912824	Identifier	err		1912463	0					
ANR	1912825	Identifier	i		1912463	1					
ANR	1912826	PrimaryExpression	0xc0		1912463	1					
ANR	1912827	PrimaryExpression	0x80		1912463	1					
ANR	1912828	EqualityExpression	( err [ i + 1 ] & 0xc0 ) != 0x80		1912463	1		!=			
ANR	1912829	BitAndExpression	err [ i + 1 ] & 0xc0		1912463	0		&			
ANR	1912830	ArrayIndexing	err [ i + 1 ]		1912463	0					
ANR	1912831	Identifier	err		1912463	0					
ANR	1912832	AdditiveExpression	i + 1		1912463	1		+			
ANR	1912833	Identifier	i		1912463	0					
ANR	1912834	PrimaryExpression	1		1912463	1					
ANR	1912835	PrimaryExpression	0xc0		1912463	1					
ANR	1912836	PrimaryExpression	0x80		1912463	1					
ANR	1912837	CompoundStatement		48:62:1172:1172	1912463	1					
ANR	1912838	BreakStatement	break ;	879:5:31993:31998	1912463	0	True				
ANR	1912839	ExpressionStatement	i += 2	881:4:32010:32016	1912463	1	True				
ANR	1912840	AssignmentExpression	i += 2		1912463	0		+=			
ANR	1912841	Identifier	i		1912463	0					
ANR	1912842	PrimaryExpression	2		1912463	1					
ANR	1912843	ElseStatement	else		1912463	0					
ANR	1912844	IfStatement	if ( ( c & 0xf8 ) == 0xf0 )		1912463	0					
ANR	1912845	Condition	( c & 0xf8 ) == 0xf0	882:14:32032:32049	1912463	0	True				
ANR	1912846	EqualityExpression	( c & 0xf8 ) == 0xf0		1912463	0		==			
ANR	1912847	BitAndExpression	c & 0xf8		1912463	0		&			
ANR	1912848	Identifier	c		1912463	0					
ANR	1912849	PrimaryExpression	0xf8		1912463	1					
ANR	1912850	PrimaryExpression	0xf0		1912463	1					
ANR	1912851	CompoundStatement		52:34:1238:1238	1912463	1					
ANR	1912852	IfStatement	if ( ( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80 )		1912463	0					
ANR	1912853	Condition	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80	883:8:32062:32142	1912463	0	True				
ANR	1912854	OrExpression	( err [ i ] & 0xc0 ) != 0x80 || ( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80		1912463	0		||			
ANR	1912855	EqualityExpression	( err [ i ] & 0xc0 ) != 0x80		1912463	0		!=			
ANR	1912856	BitAndExpression	err [ i ] & 0xc0		1912463	0		&			
ANR	1912857	ArrayIndexing	err [ i ]		1912463	0					
ANR	1912858	Identifier	err		1912463	0					
ANR	1912859	Identifier	i		1912463	1					
ANR	1912860	PrimaryExpression	0xc0		1912463	1					
ANR	1912861	PrimaryExpression	0x80		1912463	1					
ANR	1912862	OrExpression	( err [ i + 1 ] & 0xc0 ) != 0x80 || ( err [ i + 2 ] & 0xc0 ) != 0x80		1912463	1		||			
ANR	1912863	EqualityExpression	( err [ i + 1 ] & 0xc0 ) != 0x80		1912463	0		!=			
ANR	1912864	BitAndExpression	err [ i + 1 ] & 0xc0		1912463	0		&			
ANR	1912865	ArrayIndexing	err [ i + 1 ]		1912463	0					
ANR	1912866	Identifier	err		1912463	0					
ANR	1912867	AdditiveExpression	i + 1		1912463	1		+			
ANR	1912868	Identifier	i		1912463	0					
ANR	1912869	PrimaryExpression	1		1912463	1					
ANR	1912870	PrimaryExpression	0xc0		1912463	1					
ANR	1912871	PrimaryExpression	0x80		1912463	1					
ANR	1912872	EqualityExpression	( err [ i + 2 ] & 0xc0 ) != 0x80		1912463	1		!=			
ANR	1912873	BitAndExpression	err [ i + 2 ] & 0xc0		1912463	0		&			
ANR	1912874	ArrayIndexing	err [ i + 2 ]		1912463	0					
ANR	1912875	Identifier	err		1912463	0					
ANR	1912876	AdditiveExpression	i + 2		1912463	1		+			
ANR	1912877	Identifier	i		1912463	0					
ANR	1912878	PrimaryExpression	2		1912463	1					
ANR	1912879	PrimaryExpression	0xc0		1912463	1					
ANR	1912880	PrimaryExpression	0x80		1912463	1					
ANR	1912881	CompoundStatement		53:91:1331:1331	1912463	1					
ANR	1912882	BreakStatement	break ;	884:5:32152:32157	1912463	0	True				
ANR	1912883	ExpressionStatement	i += 3	886:4:32169:32175	1912463	1	True				
ANR	1912884	AssignmentExpression	i += 3		1912463	0		+=			
ANR	1912885	Identifier	i		1912463	0					
ANR	1912886	PrimaryExpression	3		1912463	1					
ANR	1912887	ElseStatement	else		1912463	0					
ANR	1912888	CompoundStatement		57:10:1373:1373	1912463	0					
ANR	1912889	BreakStatement	break ;	888:4:32193:32198	1912463	0	True				
ANR	1912890	IfStatement	if ( c )		1912463	5					
ANR	1912891	Condition	c	891:6:32215:32215	1912463	0	True				
ANR	1912892	Identifier	c		1912463	0					
ANR	1912893	CompoundStatement		61:9:1404:1404	1912463	1					
ANR	1912894	ExpressionStatement	err [ i - 1 ] = '\\\\'	892:3:32223:32238	1912463	0	True				
ANR	1912895	AssignmentExpression	err [ i - 1 ] = '\\\\'		1912463	0		=			
ANR	1912896	ArrayIndexing	err [ i - 1 ]		1912463	0					
ANR	1912897	Identifier	err		1912463	0					
ANR	1912898	AdditiveExpression	i - 1		1912463	1		-			
ANR	1912899	Identifier	i		1912463	0					
ANR	1912900	PrimaryExpression	1		1912463	1					
ANR	1912901	PrimaryExpression	'\\\\'		1912463	1					
ANR	1912902	ExpressionStatement	err [ i ++ ] = 'x'	893:3:32243:32257	1912463	1	True				
ANR	1912903	AssignmentExpression	err [ i ++ ] = 'x'		1912463	0		=			
ANR	1912904	ArrayIndexing	err [ i ++ ]		1912463	0					
ANR	1912905	Identifier	err		1912463	0					
ANR	1912906	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912907	Identifier	i		1912463	0					
ANR	1912908	IncDec	++		1912463	1					
ANR	1912909	PrimaryExpression	'x'		1912463	1					
ANR	1912910	ExpressionStatement	err [ i ++ ] = ( ( unsigned char ) c >> 4 ) + ( ( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0' )	894:3:32262:32349	1912463	2	True				
ANR	1912911	AssignmentExpression	err [ i ++ ] = ( ( unsigned char ) c >> 4 ) + ( ( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1912463	0		=			
ANR	1912912	ArrayIndexing	err [ i ++ ]		1912463	0					
ANR	1912913	Identifier	err		1912463	0					
ANR	1912914	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912915	Identifier	i		1912463	0					
ANR	1912916	IncDec	++		1912463	1					
ANR	1912917	AdditiveExpression	( ( unsigned char ) c >> 4 ) + ( ( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1912463	1		+			
ANR	1912918	ShiftExpression	( unsigned char ) c >> 4		1912463	0		>>			
ANR	1912919	CastExpression	( unsigned char ) c		1912463	0					
ANR	1912920	CastTarget	unsigned char		1912463	0					
ANR	1912921	Identifier	c		1912463	1					
ANR	1912922	PrimaryExpression	4		1912463	1					
ANR	1912923	ConditionalExpression	( ( ( unsigned char ) c >> 4 ) > 9 ) ? ( 'a' - 10 ) : '0'		1912463	1					
ANR	1912924	Condition	( ( unsigned char ) c >> 4 ) > 9		1912463	0					
ANR	1912925	RelationalExpression	( ( unsigned char ) c >> 4 ) > 9		1912463	0		>			
ANR	1912926	ShiftExpression	( unsigned char ) c >> 4		1912463	0		>>			
ANR	1912927	CastExpression	( unsigned char ) c		1912463	0					
ANR	1912928	CastTarget	unsigned char		1912463	0					
ANR	1912929	Identifier	c		1912463	1					
ANR	1912930	PrimaryExpression	4		1912463	1					
ANR	1912931	PrimaryExpression	9		1912463	1					
ANR	1912932	AdditiveExpression	'a' - 10		1912463	1		-			
ANR	1912933	PrimaryExpression	'a'		1912463	0					
ANR	1912934	PrimaryExpression	10		1912463	1					
ANR	1912935	PrimaryExpression	'0'		1912463	2					
ANR	1912936	ExpressionStatement	err [ i ++ ] = ( c & 15 ) + ( ( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0' )	895:3:32354:32411	1912463	3	True				
ANR	1912937	AssignmentExpression	err [ i ++ ] = ( c & 15 ) + ( ( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1912463	0		=			
ANR	1912938	ArrayIndexing	err [ i ++ ]		1912463	0					
ANR	1912939	Identifier	err		1912463	0					
ANR	1912940	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912941	Identifier	i		1912463	0					
ANR	1912942	IncDec	++		1912463	1					
ANR	1912943	AdditiveExpression	( c & 15 ) + ( ( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0' )		1912463	1		+			
ANR	1912944	BitAndExpression	c & 15		1912463	0		&			
ANR	1912945	Identifier	c		1912463	0					
ANR	1912946	PrimaryExpression	15		1912463	1					
ANR	1912947	ConditionalExpression	( ( c & 15 ) > 9 ) ? ( 'a' - 10 ) : '0'		1912463	1					
ANR	1912948	Condition	( c & 15 ) > 9		1912463	0					
ANR	1912949	RelationalExpression	( c & 15 ) > 9		1912463	0		>			
ANR	1912950	BitAndExpression	c & 15		1912463	0		&			
ANR	1912951	Identifier	c		1912463	0					
ANR	1912952	PrimaryExpression	15		1912463	1					
ANR	1912953	PrimaryExpression	9		1912463	1					
ANR	1912954	AdditiveExpression	'a' - 10		1912463	1		-			
ANR	1912955	PrimaryExpression	'a'		1912463	0					
ANR	1912956	PrimaryExpression	10		1912463	1					
ANR	1912957	PrimaryExpression	'0'		1912463	2					
ANR	1912958	ExpressionStatement	err [ i ++ ] = '.'	896:3:32416:32430	1912463	4	True				
ANR	1912959	AssignmentExpression	err [ i ++ ] = '.'		1912463	0		=			
ANR	1912960	ArrayIndexing	err [ i ++ ]		1912463	0					
ANR	1912961	Identifier	err		1912463	0					
ANR	1912962	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912963	Identifier	i		1912463	0					
ANR	1912964	IncDec	++		1912463	1					
ANR	1912965	PrimaryExpression	'.'		1912463	1					
ANR	1912966	ExpressionStatement	err [ i ++ ] = '.'	897:3:32435:32449	1912463	5	True				
ANR	1912967	AssignmentExpression	err [ i ++ ] = '.'		1912463	0		=			
ANR	1912968	ArrayIndexing	err [ i ++ ]		1912463	0					
ANR	1912969	Identifier	err		1912463	0					
ANR	1912970	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912971	Identifier	i		1912463	0					
ANR	1912972	IncDec	++		1912463	1					
ANR	1912973	PrimaryExpression	'.'		1912463	1					
ANR	1912974	ExpressionStatement	err [ i ++ ] = '.'	898:3:32454:32468	1912463	6	True				
ANR	1912975	AssignmentExpression	err [ i ++ ] = '.'		1912463	0		=			
ANR	1912976	ArrayIndexing	err [ i ++ ]		1912463	0					
ANR	1912977	Identifier	err		1912463	0					
ANR	1912978	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912979	Identifier	i		1912463	0					
ANR	1912980	IncDec	++		1912463	1					
ANR	1912981	PrimaryExpression	'.'		1912463	1					
ANR	1912982	ExpressionStatement	err [ i ++ ] = 0	899:3:32473:32485	1912463	7	True				
ANR	1912983	AssignmentExpression	err [ i ++ ] = 0		1912463	0		=			
ANR	1912984	ArrayIndexing	err [ i ++ ]		1912463	0					
ANR	1912985	Identifier	err		1912463	0					
ANR	1912986	PostIncDecOperationExpression	i ++		1912463	1					
ANR	1912987	Identifier	i		1912463	0					
ANR	1912988	IncDec	++		1912463	1					
ANR	1912989	PrimaryExpression	0		1912463	1					
ANR	1912990	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: string '%s' is not a valid utf-8 string"" , err )"	902:2:32494:32573	1912463	6	True				
ANR	1912991	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: string '%s' is not a valid utf-8 string"" , err )"		1912463	0					
ANR	1912992	Callee	soap_error1		1912463	0					
ANR	1912993	Identifier	soap_error1		1912463	0					
ANR	1912994	ArgumentList	E_ERROR		1912463	1					
ANR	1912995	Argument	E_ERROR		1912463	0					
ANR	1912996	Identifier	E_ERROR		1912463	0					
ANR	1912997	Argument	"""Encoding: string '%s' is not a valid utf-8 string"""		1912463	1					
ANR	1912998	PrimaryExpression	"""Encoding: string '%s' is not a valid utf-8 string"""		1912463	0					
ANR	1912999	Argument	err		1912463	2					
ANR	1913000	Identifier	err		1912463	0					
ANR	1913001	ExpressionStatement	"text = xmlNewTextLen ( BAD_CAST ( str ) , new_len )"	905:1:32580:32624	1912463	9	True				
ANR	1913002	AssignmentExpression	"text = xmlNewTextLen ( BAD_CAST ( str ) , new_len )"		1912463	0		=			
ANR	1913003	Identifier	text		1912463	0					
ANR	1913004	CallExpression	"xmlNewTextLen ( BAD_CAST ( str ) , new_len )"		1912463	1					
ANR	1913005	Callee	xmlNewTextLen		1912463	0					
ANR	1913006	Identifier	xmlNewTextLen		1912463	0					
ANR	1913007	ArgumentList	BAD_CAST ( str )		1912463	1					
ANR	1913008	Argument	BAD_CAST ( str )		1912463	0					
ANR	1913009	CallExpression	BAD_CAST ( str )		1912463	0					
ANR	1913010	Callee	BAD_CAST		1912463	0					
ANR	1913011	Identifier	BAD_CAST		1912463	0					
ANR	1913012	ArgumentList	str		1912463	1					
ANR	1913013	Argument	str		1912463	0					
ANR	1913014	Identifier	str		1912463	0					
ANR	1913015	Argument	new_len		1912463	1					
ANR	1913016	Identifier	new_len		1912463	0					
ANR	1913017	ExpressionStatement	"xmlAddChild ( ret , text )"	906:1:32627:32649	1912463	10	True				
ANR	1913018	CallExpression	"xmlAddChild ( ret , text )"		1912463	0					
ANR	1913019	Callee	xmlAddChild		1912463	0					
ANR	1913020	Identifier	xmlAddChild		1912463	0					
ANR	1913021	ArgumentList	ret		1912463	1					
ANR	1913022	Argument	ret		1912463	0					
ANR	1913023	Identifier	ret		1912463	0					
ANR	1913024	Argument	text		1912463	1					
ANR	1913025	Identifier	text		1912463	0					
ANR	1913026	ExpressionStatement	efree ( str )	907:1:32652:32662	1912463	11	True				
ANR	1913027	CallExpression	efree ( str )		1912463	0					
ANR	1913028	Callee	efree		1912463	0					
ANR	1913029	Identifier	efree		1912463	0					
ANR	1913030	ArgumentList	str		1912463	1					
ANR	1913031	Argument	str		1912463	0					
ANR	1913032	Identifier	str		1912463	0					
ANR	1913033	IfStatement	if ( style == SOAP_ENCODED )		1912463	12					
ANR	1913034	Condition	style == SOAP_ENCODED	909:5:32670:32690	1912463	0	True				
ANR	1913035	EqualityExpression	style == SOAP_ENCODED		1912463	0		==			
ANR	1913036	Identifier	style		1912463	0					
ANR	1913037	Identifier	SOAP_ENCODED		1912463	1					
ANR	1913038	CompoundStatement		79:28:1879:1879	1912463	1					
ANR	1913039	ExpressionStatement	"set_ns_and_type ( ret , type )"	910:2:32697:32723	1912463	0	True				
ANR	1913040	CallExpression	"set_ns_and_type ( ret , type )"		1912463	0					
ANR	1913041	Callee	set_ns_and_type		1912463	0					
ANR	1913042	Identifier	set_ns_and_type		1912463	0					
ANR	1913043	ArgumentList	ret		1912463	1					
ANR	1913044	Argument	ret		1912463	0					
ANR	1913045	Identifier	ret		1912463	0					
ANR	1913046	Argument	type		1912463	1					
ANR	1913047	Identifier	type		1912463	0					
ANR	1913048	ReturnStatement	return ret ;	912:1:32729:32739	1912463	13	True				
ANR	1913049	Identifier	ret		1912463	0					
ANR	1913050	ReturnType	static xmlNodePtr		1912463	1					
ANR	1913051	Identifier	to_xml_string		1912463	2					
ANR	1913052	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1912463	3					
ANR	1913053	Parameter	encodeTypePtr type	830:32:30751:30768	1912463	0	True				
ANR	1913054	ParameterType	encodeTypePtr		1912463	0					
ANR	1913055	Identifier	type		1912463	1					
ANR	1913056	Parameter	zval * data	830:52:30771:30780	1912463	1	True				
ANR	1913057	ParameterType	zval *		1912463	0					
ANR	1913058	Identifier	data		1912463	1					
ANR	1913059	Parameter	int style	830:64:30783:30791	1912463	2	True				
ANR	1913060	ParameterType	int		1912463	0					
ANR	1913061	Identifier	style		1912463	1					
ANR	1913062	Parameter	xmlNodePtr parent	830:75:30794:30810	1912463	3	True				
ANR	1913063	ParameterType	xmlNodePtr		1912463	0					
ANR	1913064	Identifier	parent		1912463	1					
ANR	1913065	CFGEntryNode	ENTRY		1912463		True				
ANR	1913066	CFGExitNode	EXIT		1912463		True				
ANR	1913067	Symbol	parent		1912463						
ANR	1913068	Symbol	xmlBufferCreate		1912463						
ANR	1913069	Symbol	data		1912463						
ANR	1913070	Symbol	type		1912463						
ANR	1913071	Symbol	xmlBufferCreateStatic		1912463						
ANR	1913072	Symbol	out		1912463						
ANR	1913073	Symbol	estrndup		1912463						
ANR	1913074	Symbol	emalloc		1912463						
ANR	1913075	Symbol	xmlNewTextLen		1912463						
ANR	1913076	Symbol	tmp		1912463						
ANR	1913077	Symbol	Z_STRLEN_P		1912463						
ANR	1913078	Symbol	xmlCharEncInFunc		1912463						
ANR	1913079	Symbol	text		1912463						
ANR	1913080	Symbol	IS_STRING		1912463						
ANR	1913081	Symbol	ret		1912463						
ANR	1913082	Symbol	NULL		1912463						
ANR	1913083	Symbol	c		1912463						
ANR	1913084	Symbol	err		1912463						
ANR	1913085	Symbol	in		1912463						
ANR	1913086	Symbol	zval_get_string		1912463						
ANR	1913087	Symbol	i		1912463						
ANR	1913088	Symbol	xmlNewNode		1912463						
ANR	1913089	Symbol	Z_TYPE_P		1912463						
ANR	1913090	Symbol	encoding		1912463						
ANR	1913091	Symbol	Z_STRVAL_P		1912463						
ANR	1913092	Symbol	SOAP_GLOBAL		1912463						
ANR	1913093	Symbol	n		1912463						
ANR	1913094	Symbol	ZSTR_VAL		1912463						
ANR	1913095	Symbol	xmlBufferContent		1912463						
ANR	1913096	Symbol	str		1912463						
ANR	1913097	Symbol	* err		1912463						
ANR	1913098	Symbol	* i		1912463						
ANR	1913099	Symbol	E_ERROR		1912463						
ANR	1913100	Symbol	new_len		1912463						
ANR	1913101	Symbol	ZSTR_LEN		1912463						
ANR	1913102	Symbol	estrdup		1912463						
ANR	1913103	Symbol	php_libxml_xmlCheckUTF8		1912463						
ANR	1913104	Symbol	style		1912463						
ANR	1913105	Symbol	SOAP_ENCODED		1912463						
ANR	1913106	Symbol	BAD_CAST		1912463						
ANR	1913107	Function	to_xml_base64	915:0:32744:33457							
ANR	1913108	FunctionDef	"to_xml_base64 (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1913107	0					
ANR	1913109	CompoundStatement		916:0:32838:33457	1913107	0					
ANR	1913110	IdentifierDeclStatement	"xmlNodePtr ret , text ;"	917:1:32841:32861	1913107	0	True				
ANR	1913111	IdentifierDecl	ret		1913107	0					
ANR	1913112	IdentifierDeclType	xmlNodePtr		1913107	0					
ANR	1913113	Identifier	ret		1913107	1					
ANR	1913114	IdentifierDecl	text		1913107	1					
ANR	1913115	IdentifierDeclType	xmlNodePtr		1913107	0					
ANR	1913116	Identifier	text		1913107	1					
ANR	1913117	IdentifierDeclStatement	zend_string * str ;	918:1:32864:32880	1913107	1	True				
ANR	1913118	IdentifierDecl	* str		1913107	0					
ANR	1913119	IdentifierDeclType	zend_string *		1913107	0					
ANR	1913120	Identifier	str		1913107	1					
ANR	1913121	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	920:1:32884:32925	1913107	2	True				
ANR	1913122	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1913107	0		=			
ANR	1913123	Identifier	ret		1913107	0					
ANR	1913124	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1913107	1					
ANR	1913125	Callee	xmlNewNode		1913107	0					
ANR	1913126	Identifier	xmlNewNode		1913107	0					
ANR	1913127	ArgumentList	NULL		1913107	1					
ANR	1913128	Argument	NULL		1913107	0					
ANR	1913129	Identifier	NULL		1913107	0					
ANR	1913130	Argument	"BAD_CAST ( ""BOGUS"" )"		1913107	1					
ANR	1913131	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1913107	0					
ANR	1913132	Callee	BAD_CAST		1913107	0					
ANR	1913133	Identifier	BAD_CAST		1913107	0					
ANR	1913134	ArgumentList	"""BOGUS"""		1913107	1					
ANR	1913135	Argument	"""BOGUS"""		1913107	0					
ANR	1913136	PrimaryExpression	"""BOGUS"""		1913107	0					
ANR	1913137	ExpressionStatement	"xmlAddChild ( parent , ret )"	921:1:32928:32952	1913107	3	True				
ANR	1913138	CallExpression	"xmlAddChild ( parent , ret )"		1913107	0					
ANR	1913139	Callee	xmlAddChild		1913107	0					
ANR	1913140	Identifier	xmlAddChild		1913107	0					
ANR	1913141	ArgumentList	parent		1913107	1					
ANR	1913142	Argument	parent		1913107	0					
ANR	1913143	Identifier	parent		1913107	0					
ANR	1913144	Argument	ret		1913107	1					
ANR	1913145	Identifier	ret		1913107	0					
ANR	1913146	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	922:1:32955:32987	1913107	4	True				
ANR	1913147	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1913107	0					
ANR	1913148	Callee	FIND_ZVAL_NULL		1913107	0					
ANR	1913149	Identifier	FIND_ZVAL_NULL		1913107	0					
ANR	1913150	ArgumentList	data		1913107	1					
ANR	1913151	Argument	data		1913107	0					
ANR	1913152	Identifier	data		1913107	0					
ANR	1913153	Argument	ret		1913107	1					
ANR	1913154	Identifier	ret		1913107	0					
ANR	1913155	Argument	style		1913107	2					
ANR	1913156	Identifier	style		1913107	0					
ANR	1913157	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1913107	5					
ANR	1913158	Condition	Z_TYPE_P ( data ) == IS_STRING	924:5:32995:33021	1913107	0	True				
ANR	1913159	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1913107	0		==			
ANR	1913160	CallExpression	Z_TYPE_P ( data )		1913107	0					
ANR	1913161	Callee	Z_TYPE_P		1913107	0					
ANR	1913162	Identifier	Z_TYPE_P		1913107	0					
ANR	1913163	ArgumentList	data		1913107	1					
ANR	1913164	Argument	data		1913107	0					
ANR	1913165	Identifier	data		1913107	0					
ANR	1913166	Identifier	IS_STRING		1913107	1					
ANR	1913167	CompoundStatement		9:34:185:185	1913107	1					
ANR	1913168	ExpressionStatement	"str = php_base64_encode ( ( unsigned char * ) Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"	925:2:33028:33103	1913107	0	True				
ANR	1913169	AssignmentExpression	"str = php_base64_encode ( ( unsigned char * ) Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1913107	0		=			
ANR	1913170	Identifier	str		1913107	0					
ANR	1913171	CallExpression	"php_base64_encode ( ( unsigned char * ) Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1913107	1					
ANR	1913172	Callee	php_base64_encode		1913107	0					
ANR	1913173	Identifier	php_base64_encode		1913107	0					
ANR	1913174	ArgumentList	( unsigned char * ) Z_STRVAL_P ( data )		1913107	1					
ANR	1913175	Argument	( unsigned char * ) Z_STRVAL_P ( data )		1913107	0					
ANR	1913176	CastExpression	( unsigned char * ) Z_STRVAL_P ( data )		1913107	0					
ANR	1913177	CastTarget	unsigned char *		1913107	0					
ANR	1913178	CallExpression	Z_STRVAL_P ( data )		1913107	1					
ANR	1913179	Callee	Z_STRVAL_P		1913107	0					
ANR	1913180	Identifier	Z_STRVAL_P		1913107	0					
ANR	1913181	ArgumentList	data		1913107	1					
ANR	1913182	Argument	data		1913107	0					
ANR	1913183	Identifier	data		1913107	0					
ANR	1913184	Argument	Z_STRLEN_P ( data )		1913107	1					
ANR	1913185	CallExpression	Z_STRLEN_P ( data )		1913107	0					
ANR	1913186	Callee	Z_STRLEN_P		1913107	0					
ANR	1913187	Identifier	Z_STRLEN_P		1913107	0					
ANR	1913188	ArgumentList	data		1913107	1					
ANR	1913189	Argument	data		1913107	0					
ANR	1913190	Identifier	data		1913107	0					
ANR	1913191	ElseStatement	else		1913107	0					
ANR	1913192	CompoundStatement		12:2:278:318	1913107	0					
ANR	1913193	IdentifierDeclStatement	zend_string * tmp = zval_get_string ( data ) ;	927:2:33117:33157	1913107	0	True				
ANR	1913194	IdentifierDecl	* tmp = zval_get_string ( data )		1913107	0					
ANR	1913195	IdentifierDeclType	zend_string *		1913107	0					
ANR	1913196	Identifier	tmp		1913107	1					
ANR	1913197	AssignmentExpression	* tmp = zval_get_string ( data )		1913107	2		=			
ANR	1913198	Identifier	tmp		1913107	0					
ANR	1913199	CallExpression	zval_get_string ( data )		1913107	1					
ANR	1913200	Callee	zval_get_string		1913107	0					
ANR	1913201	Identifier	zval_get_string		1913107	0					
ANR	1913202	ArgumentList	data		1913107	1					
ANR	1913203	Argument	data		1913107	0					
ANR	1913204	Identifier	data		1913107	0					
ANR	1913205	ExpressionStatement	"str = php_base64_encode ( ( unsigned char * ) ZSTR_VAL ( tmp ) , ZSTR_LEN ( tmp ) )"	928:2:33161:33231	1913107	1	True				
ANR	1913206	AssignmentExpression	"str = php_base64_encode ( ( unsigned char * ) ZSTR_VAL ( tmp ) , ZSTR_LEN ( tmp ) )"		1913107	0		=			
ANR	1913207	Identifier	str		1913107	0					
ANR	1913208	CallExpression	"php_base64_encode ( ( unsigned char * ) ZSTR_VAL ( tmp ) , ZSTR_LEN ( tmp ) )"		1913107	1					
ANR	1913209	Callee	php_base64_encode		1913107	0					
ANR	1913210	Identifier	php_base64_encode		1913107	0					
ANR	1913211	ArgumentList	( unsigned char * ) ZSTR_VAL ( tmp )		1913107	1					
ANR	1913212	Argument	( unsigned char * ) ZSTR_VAL ( tmp )		1913107	0					
ANR	1913213	CastExpression	( unsigned char * ) ZSTR_VAL ( tmp )		1913107	0					
ANR	1913214	CastTarget	unsigned char *		1913107	0					
ANR	1913215	CallExpression	ZSTR_VAL ( tmp )		1913107	1					
ANR	1913216	Callee	ZSTR_VAL		1913107	0					
ANR	1913217	Identifier	ZSTR_VAL		1913107	0					
ANR	1913218	ArgumentList	tmp		1913107	1					
ANR	1913219	Argument	tmp		1913107	0					
ANR	1913220	Identifier	tmp		1913107	0					
ANR	1913221	Argument	ZSTR_LEN ( tmp )		1913107	1					
ANR	1913222	CallExpression	ZSTR_LEN ( tmp )		1913107	0					
ANR	1913223	Callee	ZSTR_LEN		1913107	0					
ANR	1913224	Identifier	ZSTR_LEN		1913107	0					
ANR	1913225	ArgumentList	tmp		1913107	1					
ANR	1913226	Argument	tmp		1913107	0					
ANR	1913227	Identifier	tmp		1913107	0					
ANR	1913228	ExpressionStatement	zend_string_release ( tmp )	929:2:33235:33259	1913107	2	True				
ANR	1913229	CallExpression	zend_string_release ( tmp )		1913107	0					
ANR	1913230	Callee	zend_string_release		1913107	0					
ANR	1913231	Identifier	zend_string_release		1913107	0					
ANR	1913232	ArgumentList	tmp		1913107	1					
ANR	1913233	Argument	tmp		1913107	0					
ANR	1913234	Identifier	tmp		1913107	0					
ANR	1913235	ExpressionStatement	"text = xmlNewTextLen ( BAD_CAST ( ZSTR_VAL ( str ) ) , ZSTR_LEN ( str ) )"	932:1:33266:33326	1913107	6	True				
ANR	1913236	AssignmentExpression	"text = xmlNewTextLen ( BAD_CAST ( ZSTR_VAL ( str ) ) , ZSTR_LEN ( str ) )"		1913107	0		=			
ANR	1913237	Identifier	text		1913107	0					
ANR	1913238	CallExpression	"xmlNewTextLen ( BAD_CAST ( ZSTR_VAL ( str ) ) , ZSTR_LEN ( str ) )"		1913107	1					
ANR	1913239	Callee	xmlNewTextLen		1913107	0					
ANR	1913240	Identifier	xmlNewTextLen		1913107	0					
ANR	1913241	ArgumentList	BAD_CAST ( ZSTR_VAL ( str ) )		1913107	1					
ANR	1913242	Argument	BAD_CAST ( ZSTR_VAL ( str ) )		1913107	0					
ANR	1913243	CallExpression	BAD_CAST ( ZSTR_VAL ( str ) )		1913107	0					
ANR	1913244	Callee	BAD_CAST		1913107	0					
ANR	1913245	Identifier	BAD_CAST		1913107	0					
ANR	1913246	ArgumentList	ZSTR_VAL ( str )		1913107	1					
ANR	1913247	Argument	ZSTR_VAL ( str )		1913107	0					
ANR	1913248	CallExpression	ZSTR_VAL ( str )		1913107	0					
ANR	1913249	Callee	ZSTR_VAL		1913107	0					
ANR	1913250	Identifier	ZSTR_VAL		1913107	0					
ANR	1913251	ArgumentList	str		1913107	1					
ANR	1913252	Argument	str		1913107	0					
ANR	1913253	Identifier	str		1913107	0					
ANR	1913254	Argument	ZSTR_LEN ( str )		1913107	1					
ANR	1913255	CallExpression	ZSTR_LEN ( str )		1913107	0					
ANR	1913256	Callee	ZSTR_LEN		1913107	0					
ANR	1913257	Identifier	ZSTR_LEN		1913107	0					
ANR	1913258	ArgumentList	str		1913107	1					
ANR	1913259	Argument	str		1913107	0					
ANR	1913260	Identifier	str		1913107	0					
ANR	1913261	ExpressionStatement	"xmlAddChild ( ret , text )"	933:1:33329:33351	1913107	7	True				
ANR	1913262	CallExpression	"xmlAddChild ( ret , text )"		1913107	0					
ANR	1913263	Callee	xmlAddChild		1913107	0					
ANR	1913264	Identifier	xmlAddChild		1913107	0					
ANR	1913265	ArgumentList	ret		1913107	1					
ANR	1913266	Argument	ret		1913107	0					
ANR	1913267	Identifier	ret		1913107	0					
ANR	1913268	Argument	text		1913107	1					
ANR	1913269	Identifier	text		1913107	0					
ANR	1913270	ExpressionStatement	zend_string_release ( str )	934:1:33354:33378	1913107	8	True				
ANR	1913271	CallExpression	zend_string_release ( str )		1913107	0					
ANR	1913272	Callee	zend_string_release		1913107	0					
ANR	1913273	Identifier	zend_string_release		1913107	0					
ANR	1913274	ArgumentList	str		1913107	1					
ANR	1913275	Argument	str		1913107	0					
ANR	1913276	Identifier	str		1913107	0					
ANR	1913277	IfStatement	if ( style == SOAP_ENCODED )		1913107	9					
ANR	1913278	Condition	style == SOAP_ENCODED	936:5:33386:33406	1913107	0	True				
ANR	1913279	EqualityExpression	style == SOAP_ENCODED		1913107	0		==			
ANR	1913280	Identifier	style		1913107	0					
ANR	1913281	Identifier	SOAP_ENCODED		1913107	1					
ANR	1913282	CompoundStatement		21:28:570:570	1913107	1					
ANR	1913283	ExpressionStatement	"set_ns_and_type ( ret , type )"	937:2:33413:33439	1913107	0	True				
ANR	1913284	CallExpression	"set_ns_and_type ( ret , type )"		1913107	0					
ANR	1913285	Callee	set_ns_and_type		1913107	0					
ANR	1913286	Identifier	set_ns_and_type		1913107	0					
ANR	1913287	ArgumentList	ret		1913107	1					
ANR	1913288	Argument	ret		1913107	0					
ANR	1913289	Identifier	ret		1913107	0					
ANR	1913290	Argument	type		1913107	1					
ANR	1913291	Identifier	type		1913107	0					
ANR	1913292	ReturnStatement	return ret ;	939:1:33445:33455	1913107	10	True				
ANR	1913293	Identifier	ret		1913107	0					
ANR	1913294	ReturnType	static xmlNodePtr		1913107	1					
ANR	1913295	Identifier	to_xml_base64		1913107	2					
ANR	1913296	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1913107	3					
ANR	1913297	Parameter	encodeTypePtr type	915:32:32776:32793	1913107	0	True				
ANR	1913298	ParameterType	encodeTypePtr		1913107	0					
ANR	1913299	Identifier	type		1913107	1					
ANR	1913300	Parameter	zval * data	915:52:32796:32805	1913107	1	True				
ANR	1913301	ParameterType	zval *		1913107	0					
ANR	1913302	Identifier	data		1913107	1					
ANR	1913303	Parameter	int style	915:64:32808:32816	1913107	2	True				
ANR	1913304	ParameterType	int		1913107	0					
ANR	1913305	Identifier	style		1913107	1					
ANR	1913306	Parameter	xmlNodePtr parent	915:75:32819:32835	1913107	3	True				
ANR	1913307	ParameterType	xmlNodePtr		1913107	0					
ANR	1913308	Identifier	parent		1913107	1					
ANR	1913309	CFGEntryNode	ENTRY		1913107		True				
ANR	1913310	CFGExitNode	EXIT		1913107		True				
ANR	1913311	Symbol	ret		1913107						
ANR	1913312	Symbol	parent		1913107						
ANR	1913313	Symbol	NULL		1913107						
ANR	1913314	Symbol	data		1913107						
ANR	1913315	Symbol	zval_get_string		1913107						
ANR	1913316	Symbol	xmlNewNode		1913107						
ANR	1913317	Symbol	type		1913107						
ANR	1913318	Symbol	Z_TYPE_P		1913107						
ANR	1913319	Symbol	Z_STRVAL_P		1913107						
ANR	1913320	Symbol	ZSTR_VAL		1913107						
ANR	1913321	Symbol	str		1913107						
ANR	1913322	Symbol	xmlNewTextLen		1913107						
ANR	1913323	Symbol	tmp		1913107						
ANR	1913324	Symbol	ZSTR_LEN		1913107						
ANR	1913325	Symbol	style		1913107						
ANR	1913326	Symbol	Z_STRLEN_P		1913107						
ANR	1913327	Symbol	SOAP_ENCODED		1913107						
ANR	1913328	Symbol	text		1913107						
ANR	1913329	Symbol	IS_STRING		1913107						
ANR	1913330	Symbol	BAD_CAST		1913107						
ANR	1913331	Symbol	php_base64_encode		1913107						
ANR	1913332	Function	to_xml_hexbin	942:0:33460:34377							
ANR	1913333	FunctionDef	"to_xml_hexbin (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1913332	0					
ANR	1913334	CompoundStatement		943:0:33554:34377	1913332	0					
ANR	1913335	Statement	static	944:1:33557:33562	1913332	0	True				
ANR	1913336	IdentifierDeclStatement	"char hexconvtab [ ] = ""0123456789ABCDEF"" ;"	944:8:33564:33602	1913332	1	True				
ANR	1913337	IdentifierDecl	"hexconvtab [ ] = ""0123456789ABCDEF"""		1913332	0					
ANR	1913338	IdentifierDeclType	char [ ]		1913332	0					
ANR	1913339	Identifier	hexconvtab		1913332	1					
ANR	1913340	AssignmentExpression	"hexconvtab [ ] = ""0123456789ABCDEF"""		1913332	2		=			
ANR	1913341	Identifier	hexconvtab		1913332	0					
ANR	1913342	PrimaryExpression	"""0123456789ABCDEF"""		1913332	1					
ANR	1913343	IdentifierDeclStatement	"xmlNodePtr ret , text ;"	945:1:33605:33625	1913332	2	True				
ANR	1913344	IdentifierDecl	ret		1913332	0					
ANR	1913345	IdentifierDeclType	xmlNodePtr		1913332	0					
ANR	1913346	Identifier	ret		1913332	1					
ANR	1913347	IdentifierDecl	text		1913332	1					
ANR	1913348	IdentifierDeclType	xmlNodePtr		1913332	0					
ANR	1913349	Identifier	text		1913332	1					
ANR	1913350	IdentifierDeclStatement	unsigned char * str ;	946:1:33628:33646	1913332	3	True				
ANR	1913351	IdentifierDecl	* str		1913332	0					
ANR	1913352	IdentifierDeclType	unsigned char *		1913332	0					
ANR	1913353	Identifier	str		1913332	1					
ANR	1913354	IdentifierDeclStatement	zval tmp ;	947:1:33649:33657	1913332	4	True				
ANR	1913355	IdentifierDecl	tmp		1913332	0					
ANR	1913356	IdentifierDeclType	zval		1913332	0					
ANR	1913357	Identifier	tmp		1913332	1					
ANR	1913358	IdentifierDeclStatement	"int i , j ;"	948:1:33660:33668	1913332	5	True				
ANR	1913359	IdentifierDecl	i		1913332	0					
ANR	1913360	IdentifierDeclType	int		1913332	0					
ANR	1913361	Identifier	i		1913332	1					
ANR	1913362	IdentifierDecl	j		1913332	1					
ANR	1913363	IdentifierDeclType	int		1913332	0					
ANR	1913364	Identifier	j		1913332	1					
ANR	1913365	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	950:1:33672:33713	1913332	6	True				
ANR	1913366	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1913332	0		=			
ANR	1913367	Identifier	ret		1913332	0					
ANR	1913368	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1913332	1					
ANR	1913369	Callee	xmlNewNode		1913332	0					
ANR	1913370	Identifier	xmlNewNode		1913332	0					
ANR	1913371	ArgumentList	NULL		1913332	1					
ANR	1913372	Argument	NULL		1913332	0					
ANR	1913373	Identifier	NULL		1913332	0					
ANR	1913374	Argument	"BAD_CAST ( ""BOGUS"" )"		1913332	1					
ANR	1913375	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1913332	0					
ANR	1913376	Callee	BAD_CAST		1913332	0					
ANR	1913377	Identifier	BAD_CAST		1913332	0					
ANR	1913378	ArgumentList	"""BOGUS"""		1913332	1					
ANR	1913379	Argument	"""BOGUS"""		1913332	0					
ANR	1913380	PrimaryExpression	"""BOGUS"""		1913332	0					
ANR	1913381	ExpressionStatement	"xmlAddChild ( parent , ret )"	951:1:33716:33740	1913332	7	True				
ANR	1913382	CallExpression	"xmlAddChild ( parent , ret )"		1913332	0					
ANR	1913383	Callee	xmlAddChild		1913332	0					
ANR	1913384	Identifier	xmlAddChild		1913332	0					
ANR	1913385	ArgumentList	parent		1913332	1					
ANR	1913386	Argument	parent		1913332	0					
ANR	1913387	Identifier	parent		1913332	0					
ANR	1913388	Argument	ret		1913332	1					
ANR	1913389	Identifier	ret		1913332	0					
ANR	1913390	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	952:1:33743:33775	1913332	8	True				
ANR	1913391	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1913332	0					
ANR	1913392	Callee	FIND_ZVAL_NULL		1913332	0					
ANR	1913393	Identifier	FIND_ZVAL_NULL		1913332	0					
ANR	1913394	ArgumentList	data		1913332	1					
ANR	1913395	Argument	data		1913332	0					
ANR	1913396	Identifier	data		1913332	0					
ANR	1913397	Argument	ret		1913332	1					
ANR	1913398	Identifier	ret		1913332	0					
ANR	1913399	Argument	style		1913332	2					
ANR	1913400	Identifier	style		1913332	0					
ANR	1913401	IfStatement	if ( Z_TYPE_P ( data ) != IS_STRING )		1913332	9					
ANR	1913402	Condition	Z_TYPE_P ( data ) != IS_STRING	954:5:33783:33809	1913332	0	True				
ANR	1913403	EqualityExpression	Z_TYPE_P ( data ) != IS_STRING		1913332	0		!=			
ANR	1913404	CallExpression	Z_TYPE_P ( data )		1913332	0					
ANR	1913405	Callee	Z_TYPE_P		1913332	0					
ANR	1913406	Identifier	Z_TYPE_P		1913332	0					
ANR	1913407	ArgumentList	data		1913332	1					
ANR	1913408	Argument	data		1913332	0					
ANR	1913409	Identifier	data		1913332	0					
ANR	1913410	Identifier	IS_STRING		1913332	1					
ANR	1913411	CompoundStatement		12:34:257:257	1913332	1					
ANR	1913412	ExpressionStatement	"ZVAL_STR ( & tmp , zval_get_string ( data ) )"	955:2:33816:33853	1913332	0	True				
ANR	1913413	CallExpression	"ZVAL_STR ( & tmp , zval_get_string ( data ) )"		1913332	0					
ANR	1913414	Callee	ZVAL_STR		1913332	0					
ANR	1913415	Identifier	ZVAL_STR		1913332	0					
ANR	1913416	ArgumentList	& tmp		1913332	1					
ANR	1913417	Argument	& tmp		1913332	0					
ANR	1913418	UnaryOperationExpression	& tmp		1913332	0					
ANR	1913419	UnaryOperator	&		1913332	0					
ANR	1913420	Identifier	tmp		1913332	1					
ANR	1913421	Argument	zval_get_string ( data )		1913332	1					
ANR	1913422	CallExpression	zval_get_string ( data )		1913332	0					
ANR	1913423	Callee	zval_get_string		1913332	0					
ANR	1913424	Identifier	zval_get_string		1913332	0					
ANR	1913425	ArgumentList	data		1913332	1					
ANR	1913426	Argument	data		1913332	0					
ANR	1913427	Identifier	data		1913332	0					
ANR	1913428	ExpressionStatement	data = & tmp	956:2:33857:33868	1913332	1	True				
ANR	1913429	AssignmentExpression	data = & tmp		1913332	0		=			
ANR	1913430	Identifier	data		1913332	0					
ANR	1913431	UnaryOperationExpression	& tmp		1913332	1					
ANR	1913432	UnaryOperator	&		1913332	0					
ANR	1913433	Identifier	tmp		1913332	1					
ANR	1913434	ExpressionStatement	"str = ( unsigned char * ) safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"	958:1:33874:33949	1913332	10	True				
ANR	1913435	AssignmentExpression	"str = ( unsigned char * ) safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"		1913332	0		=			
ANR	1913436	Identifier	str		1913332	0					
ANR	1913437	CastExpression	"( unsigned char * ) safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"		1913332	1					
ANR	1913438	CastTarget	unsigned char *		1913332	0					
ANR	1913439	CallExpression	"safe_emalloc ( Z_STRLEN_P ( data ) * 2 , sizeof ( char ) , 1 )"		1913332	1					
ANR	1913440	Callee	safe_emalloc		1913332	0					
ANR	1913441	Identifier	safe_emalloc		1913332	0					
ANR	1913442	ArgumentList	Z_STRLEN_P ( data ) * 2		1913332	1					
ANR	1913443	Argument	Z_STRLEN_P ( data ) * 2		1913332	0					
ANR	1913444	MultiplicativeExpression	Z_STRLEN_P ( data ) * 2		1913332	0		*			
ANR	1913445	CallExpression	Z_STRLEN_P ( data )		1913332	0					
ANR	1913446	Callee	Z_STRLEN_P		1913332	0					
ANR	1913447	Identifier	Z_STRLEN_P		1913332	0					
ANR	1913448	ArgumentList	data		1913332	1					
ANR	1913449	Argument	data		1913332	0					
ANR	1913450	Identifier	data		1913332	0					
ANR	1913451	PrimaryExpression	2		1913332	1					
ANR	1913452	Argument	sizeof ( char )		1913332	1					
ANR	1913453	SizeofExpression	sizeof ( char )		1913332	0					
ANR	1913454	Sizeof	sizeof		1913332	0					
ANR	1913455	SizeofOperand	char		1913332	1					
ANR	1913456	Argument	1		1913332	2					
ANR	1913457	PrimaryExpression	1		1913332	0					
ANR	1913458	ForStatement	for ( i = j = 0 ; i < Z_STRLEN_P ( data ) ; i ++ )		1913332	11					
ANR	1913459	ForInit	i = j = 0 ;	960:6:33958:33967	1913332	0	True				
ANR	1913460	AssignmentExpression	i = j = 0		1913332	0		=			
ANR	1913461	Identifier	i		1913332	0					
ANR	1913462	AssignmentExpression	j = 0		1913332	1		=			
ANR	1913463	Identifier	j		1913332	0					
ANR	1913464	PrimaryExpression	0		1913332	1					
ANR	1913465	Condition	i < Z_STRLEN_P ( data )	960:17:33969:33988	1913332	1	True				
ANR	1913466	RelationalExpression	i < Z_STRLEN_P ( data )		1913332	0		<			
ANR	1913467	Identifier	i		1913332	0					
ANR	1913468	CallExpression	Z_STRLEN_P ( data )		1913332	1					
ANR	1913469	Callee	Z_STRLEN_P		1913332	0					
ANR	1913470	Identifier	Z_STRLEN_P		1913332	0					
ANR	1913471	ArgumentList	data		1913332	1					
ANR	1913472	Argument	data		1913332	0					
ANR	1913473	Identifier	data		1913332	0					
ANR	1913474	PostIncDecOperationExpression	i ++	960:39:33991:33993	1913332	2	True				
ANR	1913475	Identifier	i		1913332	0					
ANR	1913476	IncDec	++		1913332	1					
ANR	1913477	CompoundStatement		18:44:441:441	1913332	3					
ANR	1913478	ExpressionStatement	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4 ]	961:2:34000:34064	1913332	0	True				
ANR	1913479	AssignmentExpression	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4 ]		1913332	0		=			
ANR	1913480	ArrayIndexing	str [ j ++ ]		1913332	0					
ANR	1913481	Identifier	str		1913332	0					
ANR	1913482	PostIncDecOperationExpression	j ++		1913332	1					
ANR	1913483	Identifier	j		1913332	0					
ANR	1913484	IncDec	++		1913332	1					
ANR	1913485	ArrayIndexing	hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4 ]		1913332	1					
ANR	1913486	Identifier	hexconvtab		1913332	0					
ANR	1913487	ShiftExpression	( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) >> 4		1913332	1		>>			
ANR	1913488	CastExpression	( unsigned char ) Z_STRVAL_P ( data ) [ i ]		1913332	0					
ANR	1913489	CastTarget	unsigned char		1913332	0					
ANR	1913490	ArrayIndexing	Z_STRVAL_P ( data ) [ i ]		1913332	1					
ANR	1913491	CallExpression	Z_STRVAL_P ( data )		1913332	0					
ANR	1913492	Callee	Z_STRVAL_P		1913332	0					
ANR	1913493	Identifier	Z_STRVAL_P		1913332	0					
ANR	1913494	ArgumentList	data		1913332	1					
ANR	1913495	Argument	data		1913332	0					
ANR	1913496	Identifier	data		1913332	0					
ANR	1913497	Identifier	i		1913332	1					
ANR	1913498	PrimaryExpression	4		1913332	1					
ANR	1913499	ExpressionStatement	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15 ]	962:2:34068:34132	1913332	1	True				
ANR	1913500	AssignmentExpression	str [ j ++ ] = hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15 ]		1913332	0		=			
ANR	1913501	ArrayIndexing	str [ j ++ ]		1913332	0					
ANR	1913502	Identifier	str		1913332	0					
ANR	1913503	PostIncDecOperationExpression	j ++		1913332	1					
ANR	1913504	Identifier	j		1913332	0					
ANR	1913505	IncDec	++		1913332	1					
ANR	1913506	ArrayIndexing	hexconvtab [ ( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15 ]		1913332	1					
ANR	1913507	Identifier	hexconvtab		1913332	0					
ANR	1913508	BitAndExpression	( ( unsigned char ) Z_STRVAL_P ( data ) [ i ] ) & 15		1913332	1		&			
ANR	1913509	CastExpression	( unsigned char ) Z_STRVAL_P ( data ) [ i ]		1913332	0					
ANR	1913510	CastTarget	unsigned char		1913332	0					
ANR	1913511	ArrayIndexing	Z_STRVAL_P ( data ) [ i ]		1913332	1					
ANR	1913512	CallExpression	Z_STRVAL_P ( data )		1913332	0					
ANR	1913513	Callee	Z_STRVAL_P		1913332	0					
ANR	1913514	Identifier	Z_STRVAL_P		1913332	0					
ANR	1913515	ArgumentList	data		1913332	1					
ANR	1913516	Argument	data		1913332	0					
ANR	1913517	Identifier	data		1913332	0					
ANR	1913518	Identifier	i		1913332	1					
ANR	1913519	PrimaryExpression	15		1913332	1					
ANR	1913520	ExpressionStatement	str [ j ] = '\\0'	964:1:34138:34151	1913332	12	True				
ANR	1913521	AssignmentExpression	str [ j ] = '\\0'		1913332	0		=			
ANR	1913522	ArrayIndexing	str [ j ]		1913332	0					
ANR	1913523	Identifier	str		1913332	0					
ANR	1913524	Identifier	j		1913332	1					
ANR	1913525	PrimaryExpression	'\\0'		1913332	1					
ANR	1913526	ExpressionStatement	"text = xmlNewTextLen ( str , Z_STRLEN_P ( data ) * 2 * sizeof ( char ) )"	966:1:34155:34217	1913332	13	True				
ANR	1913527	AssignmentExpression	"text = xmlNewTextLen ( str , Z_STRLEN_P ( data ) * 2 * sizeof ( char ) )"		1913332	0		=			
ANR	1913528	Identifier	text		1913332	0					
ANR	1913529	CallExpression	"xmlNewTextLen ( str , Z_STRLEN_P ( data ) * 2 * sizeof ( char ) )"		1913332	1					
ANR	1913530	Callee	xmlNewTextLen		1913332	0					
ANR	1913531	Identifier	xmlNewTextLen		1913332	0					
ANR	1913532	ArgumentList	str		1913332	1					
ANR	1913533	Argument	str		1913332	0					
ANR	1913534	Identifier	str		1913332	0					
ANR	1913535	Argument	Z_STRLEN_P ( data ) * 2 * sizeof ( char )		1913332	1					
ANR	1913536	MultiplicativeExpression	Z_STRLEN_P ( data ) * 2 * sizeof ( char )		1913332	0		*			
ANR	1913537	CallExpression	Z_STRLEN_P ( data )		1913332	0					
ANR	1913538	Callee	Z_STRLEN_P		1913332	0					
ANR	1913539	Identifier	Z_STRLEN_P		1913332	0					
ANR	1913540	ArgumentList	data		1913332	1					
ANR	1913541	Argument	data		1913332	0					
ANR	1913542	Identifier	data		1913332	0					
ANR	1913543	MultiplicativeExpression	2 * sizeof ( char )		1913332	1		*			
ANR	1913544	PrimaryExpression	2		1913332	0					
ANR	1913545	SizeofExpression	sizeof ( char )		1913332	1					
ANR	1913546	Sizeof	sizeof		1913332	0					
ANR	1913547	SizeofOperand	char		1913332	1					
ANR	1913548	ExpressionStatement	"xmlAddChild ( ret , text )"	967:1:34220:34242	1913332	14	True				
ANR	1913549	CallExpression	"xmlAddChild ( ret , text )"		1913332	0					
ANR	1913550	Callee	xmlAddChild		1913332	0					
ANR	1913551	Identifier	xmlAddChild		1913332	0					
ANR	1913552	ArgumentList	ret		1913332	1					
ANR	1913553	Argument	ret		1913332	0					
ANR	1913554	Identifier	ret		1913332	0					
ANR	1913555	Argument	text		1913332	1					
ANR	1913556	Identifier	text		1913332	0					
ANR	1913557	ExpressionStatement	efree ( str )	968:1:34245:34255	1913332	15	True				
ANR	1913558	CallExpression	efree ( str )		1913332	0					
ANR	1913559	Callee	efree		1913332	0					
ANR	1913560	Identifier	efree		1913332	0					
ANR	1913561	ArgumentList	str		1913332	1					
ANR	1913562	Argument	str		1913332	0					
ANR	1913563	Identifier	str		1913332	0					
ANR	1913564	IfStatement	if ( data == & tmp )		1913332	16					
ANR	1913565	Condition	data == & tmp	969:5:34262:34273	1913332	0	True				
ANR	1913566	EqualityExpression	data == & tmp		1913332	0		==			
ANR	1913567	Identifier	data		1913332	0					
ANR	1913568	UnaryOperationExpression	& tmp		1913332	1					
ANR	1913569	UnaryOperator	&		1913332	0					
ANR	1913570	Identifier	tmp		1913332	1					
ANR	1913571	CompoundStatement		27:19:721:721	1913332	1					
ANR	1913572	ExpressionStatement	zval_dtor ( & tmp )	970:2:34280:34295	1913332	0	True				
ANR	1913573	CallExpression	zval_dtor ( & tmp )		1913332	0					
ANR	1913574	Callee	zval_dtor		1913332	0					
ANR	1913575	Identifier	zval_dtor		1913332	0					
ANR	1913576	ArgumentList	& tmp		1913332	1					
ANR	1913577	Argument	& tmp		1913332	0					
ANR	1913578	UnaryOperationExpression	& tmp		1913332	0					
ANR	1913579	UnaryOperator	&		1913332	0					
ANR	1913580	Identifier	tmp		1913332	1					
ANR	1913581	IfStatement	if ( style == SOAP_ENCODED )		1913332	17					
ANR	1913582	Condition	style == SOAP_ENCODED	973:5:34306:34326	1913332	0	True				
ANR	1913583	EqualityExpression	style == SOAP_ENCODED		1913332	0		==			
ANR	1913584	Identifier	style		1913332	0					
ANR	1913585	Identifier	SOAP_ENCODED		1913332	1					
ANR	1913586	CompoundStatement		31:28:774:774	1913332	1					
ANR	1913587	ExpressionStatement	"set_ns_and_type ( ret , type )"	974:2:34333:34359	1913332	0	True				
ANR	1913588	CallExpression	"set_ns_and_type ( ret , type )"		1913332	0					
ANR	1913589	Callee	set_ns_and_type		1913332	0					
ANR	1913590	Identifier	set_ns_and_type		1913332	0					
ANR	1913591	ArgumentList	ret		1913332	1					
ANR	1913592	Argument	ret		1913332	0					
ANR	1913593	Identifier	ret		1913332	0					
ANR	1913594	Argument	type		1913332	1					
ANR	1913595	Identifier	type		1913332	0					
ANR	1913596	ReturnStatement	return ret ;	976:1:34365:34375	1913332	18	True				
ANR	1913597	Identifier	ret		1913332	0					
ANR	1913598	ReturnType	static xmlNodePtr		1913332	1					
ANR	1913599	Identifier	to_xml_hexbin		1913332	2					
ANR	1913600	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1913332	3					
ANR	1913601	Parameter	encodeTypePtr type	942:32:33492:33509	1913332	0	True				
ANR	1913602	ParameterType	encodeTypePtr		1913332	0					
ANR	1913603	Identifier	type		1913332	1					
ANR	1913604	Parameter	zval * data	942:52:33512:33521	1913332	1	True				
ANR	1913605	ParameterType	zval *		1913332	0					
ANR	1913606	Identifier	data		1913332	1					
ANR	1913607	Parameter	int style	942:64:33524:33532	1913332	2	True				
ANR	1913608	ParameterType	int		1913332	0					
ANR	1913609	Identifier	style		1913332	1					
ANR	1913610	Parameter	xmlNodePtr parent	942:75:33535:33551	1913332	3	True				
ANR	1913611	ParameterType	xmlNodePtr		1913332	0					
ANR	1913612	Identifier	parent		1913332	1					
ANR	1913613	CFGEntryNode	ENTRY		1913332		True				
ANR	1913614	CFGExitNode	EXIT		1913332		True				
ANR	1913615	Symbol	parent		1913332						
ANR	1913616	Symbol	data		1913332						
ANR	1913617	Symbol	* hexconvtab		1913332						
ANR	1913618	Symbol	type		1913332						
ANR	1913619	Symbol	xmlNewTextLen		1913332						
ANR	1913620	Symbol	tmp		1913332						
ANR	1913621	Symbol	* * Z_STRVAL_P		1913332						
ANR	1913622	Symbol	Z_STRLEN_P		1913332						
ANR	1913623	Symbol	text		1913332						
ANR	1913624	Symbol	IS_STRING		1913332						
ANR	1913625	Symbol	* Z_STRVAL_P		1913332						
ANR	1913626	Symbol	* str		1913332						
ANR	1913627	Symbol	ret		1913332						
ANR	1913628	Symbol	* * i		1913332						
ANR	1913629	Symbol	NULL		1913332						
ANR	1913630	Symbol	i		1913332						
ANR	1913631	Symbol	zval_get_string		1913332						
ANR	1913632	Symbol	j		1913332						
ANR	1913633	Symbol	xmlNewNode		1913332						
ANR	1913634	Symbol	Z_TYPE_P		1913332						
ANR	1913635	Symbol	Z_STRVAL_P		1913332						
ANR	1913636	Symbol	str		1913332						
ANR	1913637	Symbol	* i		1913332						
ANR	1913638	Symbol	* j		1913332						
ANR	1913639	Symbol	style		1913332						
ANR	1913640	Symbol	& tmp		1913332						
ANR	1913641	Symbol	SOAP_ENCODED		1913332						
ANR	1913642	Symbol	hexconvtab		1913332						
ANR	1913643	Symbol	safe_emalloc		1913332						
ANR	1913644	Symbol	BAD_CAST		1913332						
ANR	1913645	Function	to_zval_double	979:0:34380:35561							
ANR	1913646	FunctionDef	"to_zval_double (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1913645	0					
ANR	1913647	CompoundStatement		980:0:34456:35561	1913645	0					
ANR	1913648	ExpressionStatement	ZVAL_NULL ( ret )	981:1:34459:34473	1913645	0	True				
ANR	1913649	CallExpression	ZVAL_NULL ( ret )		1913645	0					
ANR	1913650	Callee	ZVAL_NULL		1913645	0					
ANR	1913651	Identifier	ZVAL_NULL		1913645	0					
ANR	1913652	ArgumentList	ret		1913645	1					
ANR	1913653	Argument	ret		1913645	0					
ANR	1913654	Identifier	ret		1913645	0					
ANR	1913655	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	982:1:34476:34500	1913645	1	True				
ANR	1913656	CallExpression	"FIND_XML_NULL ( data , ret )"		1913645	0					
ANR	1913657	Callee	FIND_XML_NULL		1913645	0					
ANR	1913658	Identifier	FIND_XML_NULL		1913645	0					
ANR	1913659	ArgumentList	data		1913645	1					
ANR	1913660	Argument	data		1913645	0					
ANR	1913661	Identifier	data		1913645	0					
ANR	1913662	Argument	ret		1913645	1					
ANR	1913663	Identifier	ret		1913645	0					
ANR	1913664	IfStatement	if ( data && data -> children )		1913645	2					
ANR	1913665	Condition	data && data -> children	984:5:34508:34529	1913645	0	True				
ANR	1913666	AndExpression	data && data -> children		1913645	0		&&			
ANR	1913667	Identifier	data		1913645	0					
ANR	1913668	PtrMemberAccess	data -> children		1913645	1					
ANR	1913669	Identifier	data		1913645	0					
ANR	1913670	Identifier	children		1913645	1					
ANR	1913671	CompoundStatement		5:29:75:75	1913645	1					
ANR	1913672	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1913645	0					
ANR	1913673	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	985:6:34540:34608	1913645	0	True				
ANR	1913674	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1913645	0		&&			
ANR	1913675	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1913645	0		==			
ANR	1913676	PtrMemberAccess	data -> children -> type		1913645	0					
ANR	1913677	PtrMemberAccess	data -> children		1913645	0					
ANR	1913678	Identifier	data		1913645	0					
ANR	1913679	Identifier	children		1913645	1					
ANR	1913680	Identifier	type		1913645	1					
ANR	1913681	Identifier	XML_TEXT_NODE		1913645	1					
ANR	1913682	EqualityExpression	data -> children -> next == NULL		1913645	1		==			
ANR	1913683	PtrMemberAccess	data -> children -> next		1913645	0					
ANR	1913684	PtrMemberAccess	data -> children		1913645	0					
ANR	1913685	Identifier	data		1913645	0					
ANR	1913686	Identifier	children		1913645	1					
ANR	1913687	Identifier	next		1913645	1					
ANR	1913688	Identifier	NULL		1913645	1					
ANR	1913689	CompoundStatement		8:3:178:189	1913645	1					
ANR	1913690	IdentifierDeclStatement	zend_long lval ;	986:3:34616:34630	1913645	0	True				
ANR	1913691	IdentifierDecl	lval		1913645	0					
ANR	1913692	IdentifierDeclType	zend_long		1913645	0					
ANR	1913693	Identifier	lval		1913645	1					
ANR	1913694	IdentifierDeclStatement	double dval ;	987:3:34635:34646	1913645	1	True				
ANR	1913695	IdentifierDecl	dval		1913645	0					
ANR	1913696	IdentifierDeclType	double		1913645	0					
ANR	1913697	Identifier	dval		1913645	1					
ANR	1913698	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	989:3:34652:34696	1913645	2	True				
ANR	1913699	CallExpression	whiteSpace_collapse ( data -> children -> content )		1913645	0					
ANR	1913700	Callee	whiteSpace_collapse		1913645	0					
ANR	1913701	Identifier	whiteSpace_collapse		1913645	0					
ANR	1913702	ArgumentList	data -> children -> content		1913645	1					
ANR	1913703	Argument	data -> children -> content		1913645	0					
ANR	1913704	PtrMemberAccess	data -> children -> content		1913645	0					
ANR	1913705	PtrMemberAccess	data -> children		1913645	0					
ANR	1913706	Identifier	data		1913645	0					
ANR	1913707	Identifier	children		1913645	1					
ANR	1913708	Identifier	content		1913645	1					
ANR	1913709	SwitchStatement	"switch ( is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 ) )"		1913645	3					
ANR	1913710	Condition	"is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"	990:11:34709:34814	1913645	0	True				
ANR	1913711	CallExpression	"is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"		1913645	0					
ANR	1913712	Callee	is_numeric_string		1913645	0					
ANR	1913713	Identifier	is_numeric_string		1913645	0					
ANR	1913714	ArgumentList	( char * ) data -> children -> content		1913645	1					
ANR	1913715	Argument	( char * ) data -> children -> content		1913645	0					
ANR	1913716	CastExpression	( char * ) data -> children -> content		1913645	0					
ANR	1913717	CastTarget	char *		1913645	0					
ANR	1913718	PtrMemberAccess	data -> children -> content		1913645	1					
ANR	1913719	PtrMemberAccess	data -> children		1913645	0					
ANR	1913720	Identifier	data		1913645	0					
ANR	1913721	Identifier	children		1913645	1					
ANR	1913722	Identifier	content		1913645	1					
ANR	1913723	Argument	strlen ( ( char * ) data -> children -> content )		1913645	1					
ANR	1913724	CallExpression	strlen ( ( char * ) data -> children -> content )		1913645	0					
ANR	1913725	Callee	strlen		1913645	0					
ANR	1913726	Identifier	strlen		1913645	0					
ANR	1913727	ArgumentList	( char * ) data -> children -> content		1913645	1					
ANR	1913728	Argument	( char * ) data -> children -> content		1913645	0					
ANR	1913729	CastExpression	( char * ) data -> children -> content		1913645	0					
ANR	1913730	CastTarget	char *		1913645	0					
ANR	1913731	PtrMemberAccess	data -> children -> content		1913645	1					
ANR	1913732	PtrMemberAccess	data -> children		1913645	0					
ANR	1913733	Identifier	data		1913645	0					
ANR	1913734	Identifier	children		1913645	1					
ANR	1913735	Identifier	content		1913645	1					
ANR	1913736	Argument	& lval		1913645	2					
ANR	1913737	UnaryOperationExpression	& lval		1913645	0					
ANR	1913738	UnaryOperator	&		1913645	0					
ANR	1913739	Identifier	lval		1913645	1					
ANR	1913740	Argument	& dval		1913645	3					
ANR	1913741	UnaryOperationExpression	& dval		1913645	0					
ANR	1913742	UnaryOperator	&		1913645	0					
ANR	1913743	Identifier	dval		1913645	1					
ANR	1913744	Argument	0		1913645	4					
ANR	1913745	PrimaryExpression	0		1913645	0					
ANR	1913746	CompoundStatement		11:119:360:360	1913645	1					
ANR	1913747	Label	case IS_LONG :	991:4:34823:34835	1913645	0	True				
ANR	1913748	Identifier	IS_LONG		1913645	0					
ANR	1913749	ExpressionStatement	"ZVAL_DOUBLE ( ret , lval )"	992:5:34842:34864	1913645	1	True				
ANR	1913750	CallExpression	"ZVAL_DOUBLE ( ret , lval )"		1913645	0					
ANR	1913751	Callee	ZVAL_DOUBLE		1913645	0					
ANR	1913752	Identifier	ZVAL_DOUBLE		1913645	0					
ANR	1913753	ArgumentList	ret		1913645	1					
ANR	1913754	Argument	ret		1913645	0					
ANR	1913755	Identifier	ret		1913645	0					
ANR	1913756	Argument	lval		1913645	1					
ANR	1913757	Identifier	lval		1913645	0					
ANR	1913758	BreakStatement	break ;	993:5:34871:34876	1913645	2	True				
ANR	1913759	Label	case IS_DOUBLE :	994:4:34882:34896	1913645	3	True				
ANR	1913760	Identifier	IS_DOUBLE		1913645	0					
ANR	1913761	ExpressionStatement	"ZVAL_DOUBLE ( ret , dval )"	995:5:34903:34925	1913645	4	True				
ANR	1913762	CallExpression	"ZVAL_DOUBLE ( ret , dval )"		1913645	0					
ANR	1913763	Callee	ZVAL_DOUBLE		1913645	0					
ANR	1913764	Identifier	ZVAL_DOUBLE		1913645	0					
ANR	1913765	ArgumentList	ret		1913645	1					
ANR	1913766	Argument	ret		1913645	0					
ANR	1913767	Identifier	ret		1913645	0					
ANR	1913768	Argument	dval		1913645	1					
ANR	1913769	Identifier	dval		1913645	0					
ANR	1913770	BreakStatement	break ;	996:5:34932:34937	1913645	5	True				
ANR	1913771	Label	default :	997:4:34943:34950	1913645	6	True				
ANR	1913772	Identifier	default		1913645	0					
ANR	1913773	IfStatement	"if ( strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 ) == 0 )"		1913645	7					
ANR	1913774	Condition	"strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 ) == 0"	998:9:34961:35032	1913645	0	True				
ANR	1913775	EqualityExpression	"strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 ) == 0"		1913645	0		==			
ANR	1913776	CallExpression	"strncasecmp ( ( char * ) data -> children -> content , ""NaN"" , sizeof ( ""NaN"" ) - 1 )"		1913645	0					
ANR	1913777	Callee	strncasecmp		1913645	0					
ANR	1913778	Identifier	strncasecmp		1913645	0					
ANR	1913779	ArgumentList	( char * ) data -> children -> content		1913645	1					
ANR	1913780	Argument	( char * ) data -> children -> content		1913645	0					
ANR	1913781	CastExpression	( char * ) data -> children -> content		1913645	0					
ANR	1913782	CastTarget	char *		1913645	0					
ANR	1913783	PtrMemberAccess	data -> children -> content		1913645	1					
ANR	1913784	PtrMemberAccess	data -> children		1913645	0					
ANR	1913785	Identifier	data		1913645	0					
ANR	1913786	Identifier	children		1913645	1					
ANR	1913787	Identifier	content		1913645	1					
ANR	1913788	Argument	"""NaN"""		1913645	1					
ANR	1913789	PrimaryExpression	"""NaN"""		1913645	0					
ANR	1913790	Argument	"sizeof ( ""NaN"" ) - 1"		1913645	2					
ANR	1913791	AdditiveExpression	"sizeof ( ""NaN"" ) - 1"		1913645	0		-			
ANR	1913792	SizeofExpression	"sizeof ( ""NaN"" )"		1913645	0					
ANR	1913793	Sizeof	sizeof		1913645	0					
ANR	1913794	PrimaryExpression	"""NaN"""		1913645	1					
ANR	1913795	PrimaryExpression	1		1913645	1					
ANR	1913796	PrimaryExpression	0		1913645	1					
ANR	1913797	CompoundStatement		19:83:578:578	1913645	1					
ANR	1913798	ExpressionStatement	"ZVAL_DOUBLE ( ret , php_get_nan ( ) )"	999:6:35043:35074	1913645	0	True				
ANR	1913799	CallExpression	"ZVAL_DOUBLE ( ret , php_get_nan ( ) )"		1913645	0					
ANR	1913800	Callee	ZVAL_DOUBLE		1913645	0					
ANR	1913801	Identifier	ZVAL_DOUBLE		1913645	0					
ANR	1913802	ArgumentList	ret		1913645	1					
ANR	1913803	Argument	ret		1913645	0					
ANR	1913804	Identifier	ret		1913645	0					
ANR	1913805	Argument	php_get_nan ( )		1913645	1					
ANR	1913806	CallExpression	php_get_nan ( )		1913645	0					
ANR	1913807	Callee	php_get_nan		1913645	0					
ANR	1913808	Identifier	php_get_nan		1913645	0					
ANR	1913809	ArgumentList			1913645	1					
ANR	1913810	ElseStatement	else		1913645	0					
ANR	1913811	IfStatement	"if ( strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 ) == 0 )"		1913645	0					
ANR	1913812	Condition	"strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 ) == 0"	1000:16:35092:35163	1913645	0	True				
ANR	1913813	EqualityExpression	"strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 ) == 0"		1913645	0		==			
ANR	1913814	CallExpression	"strncasecmp ( ( char * ) data -> children -> content , ""INF"" , sizeof ( ""INF"" ) - 1 )"		1913645	0					
ANR	1913815	Callee	strncasecmp		1913645	0					
ANR	1913816	Identifier	strncasecmp		1913645	0					
ANR	1913817	ArgumentList	( char * ) data -> children -> content		1913645	1					
ANR	1913818	Argument	( char * ) data -> children -> content		1913645	0					
ANR	1913819	CastExpression	( char * ) data -> children -> content		1913645	0					
ANR	1913820	CastTarget	char *		1913645	0					
ANR	1913821	PtrMemberAccess	data -> children -> content		1913645	1					
ANR	1913822	PtrMemberAccess	data -> children		1913645	0					
ANR	1913823	Identifier	data		1913645	0					
ANR	1913824	Identifier	children		1913645	1					
ANR	1913825	Identifier	content		1913645	1					
ANR	1913826	Argument	"""INF"""		1913645	1					
ANR	1913827	PrimaryExpression	"""INF"""		1913645	0					
ANR	1913828	Argument	"sizeof ( ""INF"" ) - 1"		1913645	2					
ANR	1913829	AdditiveExpression	"sizeof ( ""INF"" ) - 1"		1913645	0		-			
ANR	1913830	SizeofExpression	"sizeof ( ""INF"" )"		1913645	0					
ANR	1913831	Sizeof	sizeof		1913645	0					
ANR	1913832	PrimaryExpression	"""INF"""		1913645	1					
ANR	1913833	PrimaryExpression	1		1913645	1					
ANR	1913834	PrimaryExpression	0		1913645	1					
ANR	1913835	CompoundStatement		21:90:709:709	1913645	1					
ANR	1913836	ExpressionStatement	"ZVAL_DOUBLE ( ret , php_get_inf ( ) )"	1001:6:35174:35205	1913645	0	True				
ANR	1913837	CallExpression	"ZVAL_DOUBLE ( ret , php_get_inf ( ) )"		1913645	0					
ANR	1913838	Callee	ZVAL_DOUBLE		1913645	0					
ANR	1913839	Identifier	ZVAL_DOUBLE		1913645	0					
ANR	1913840	ArgumentList	ret		1913645	1					
ANR	1913841	Argument	ret		1913645	0					
ANR	1913842	Identifier	ret		1913645	0					
ANR	1913843	Argument	php_get_inf ( )		1913645	1					
ANR	1913844	CallExpression	php_get_inf ( )		1913645	0					
ANR	1913845	Callee	php_get_inf		1913645	0					
ANR	1913846	Identifier	php_get_inf		1913645	0					
ANR	1913847	ArgumentList			1913645	1					
ANR	1913848	ElseStatement	else		1913645	0					
ANR	1913849	IfStatement	"if ( strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 ) == 0 )"		1913645	0					
ANR	1913850	Condition	"strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 ) == 0"	1002:16:35223:35296	1913645	0	True				
ANR	1913851	EqualityExpression	"strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 ) == 0"		1913645	0		==			
ANR	1913852	CallExpression	"strncasecmp ( ( char * ) data -> children -> content , ""-INF"" , sizeof ( ""-INF"" ) - 1 )"		1913645	0					
ANR	1913853	Callee	strncasecmp		1913645	0					
ANR	1913854	Identifier	strncasecmp		1913645	0					
ANR	1913855	ArgumentList	( char * ) data -> children -> content		1913645	1					
ANR	1913856	Argument	( char * ) data -> children -> content		1913645	0					
ANR	1913857	CastExpression	( char * ) data -> children -> content		1913645	0					
ANR	1913858	CastTarget	char *		1913645	0					
ANR	1913859	PtrMemberAccess	data -> children -> content		1913645	1					
ANR	1913860	PtrMemberAccess	data -> children		1913645	0					
ANR	1913861	Identifier	data		1913645	0					
ANR	1913862	Identifier	children		1913645	1					
ANR	1913863	Identifier	content		1913645	1					
ANR	1913864	Argument	"""-INF"""		1913645	1					
ANR	1913865	PrimaryExpression	"""-INF"""		1913645	0					
ANR	1913866	Argument	"sizeof ( ""-INF"" ) - 1"		1913645	2					
ANR	1913867	AdditiveExpression	"sizeof ( ""-INF"" ) - 1"		1913645	0		-			
ANR	1913868	SizeofExpression	"sizeof ( ""-INF"" )"		1913645	0					
ANR	1913869	Sizeof	sizeof		1913645	0					
ANR	1913870	PrimaryExpression	"""-INF"""		1913645	1					
ANR	1913871	PrimaryExpression	1		1913645	1					
ANR	1913872	PrimaryExpression	0		1913645	1					
ANR	1913873	CompoundStatement		23:92:842:842	1913645	1					
ANR	1913874	ExpressionStatement	"ZVAL_DOUBLE ( ret , - php_get_inf ( ) )"	1003:6:35307:35339	1913645	0	True				
ANR	1913875	CallExpression	"ZVAL_DOUBLE ( ret , - php_get_inf ( ) )"		1913645	0					
ANR	1913876	Callee	ZVAL_DOUBLE		1913645	0					
ANR	1913877	Identifier	ZVAL_DOUBLE		1913645	0					
ANR	1913878	ArgumentList	ret		1913645	1					
ANR	1913879	Argument	ret		1913645	0					
ANR	1913880	Identifier	ret		1913645	0					
ANR	1913881	Argument	- php_get_inf ( )		1913645	1					
ANR	1913882	UnaryOperationExpression	- php_get_inf ( )		1913645	0					
ANR	1913883	UnaryOperator	-		1913645	0					
ANR	1913884	CallExpression	php_get_inf ( )		1913645	1					
ANR	1913885	Callee	php_get_inf		1913645	0					
ANR	1913886	Identifier	php_get_inf		1913645	0					
ANR	1913887	ArgumentList			1913645	1					
ANR	1913888	ElseStatement	else		1913645	0					
ANR	1913889	CompoundStatement		25:12:896:896	1913645	0					
ANR	1913890	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1005:6:35361:35422	1913645	0	True				
ANR	1913891	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1913645	0					
ANR	1913892	Callee	soap_error0		1913645	0					
ANR	1913893	Identifier	soap_error0		1913645	0					
ANR	1913894	ArgumentList	E_ERROR		1913645	1					
ANR	1913895	Argument	E_ERROR		1913645	0					
ANR	1913896	Identifier	E_ERROR		1913645	0					
ANR	1913897	Argument	"""Encoding: Violation of encoding rules"""		1913645	1					
ANR	1913898	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1913645	0					
ANR	1913899	ElseStatement	else		1913645	0					
ANR	1913900	CompoundStatement		29:9:988:988	1913645	0					
ANR	1913901	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1009:3:35450:35511	1913645	0	True				
ANR	1913902	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1913645	0					
ANR	1913903	Callee	soap_error0		1913645	0					
ANR	1913904	Identifier	soap_error0		1913645	0					
ANR	1913905	ArgumentList	E_ERROR		1913645	1					
ANR	1913906	Argument	E_ERROR		1913645	0					
ANR	1913907	Identifier	E_ERROR		1913645	0					
ANR	1913908	Argument	"""Encoding: Violation of encoding rules"""		1913645	1					
ANR	1913909	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1913645	0					
ANR	1913910	ElseStatement	else		1913645	0					
ANR	1913911	CompoundStatement		32:8:1068:1068	1913645	0					
ANR	1913912	ExpressionStatement	ZVAL_NULL ( ret )	1012:2:35529:35543	1913645	0	True				
ANR	1913913	CallExpression	ZVAL_NULL ( ret )		1913645	0					
ANR	1913914	Callee	ZVAL_NULL		1913645	0					
ANR	1913915	Identifier	ZVAL_NULL		1913645	0					
ANR	1913916	ArgumentList	ret		1913645	1					
ANR	1913917	Argument	ret		1913645	0					
ANR	1913918	Identifier	ret		1913645	0					
ANR	1913919	ReturnStatement	return ret ;	1014:1:35549:35559	1913645	3	True				
ANR	1913920	Identifier	ret		1913645	0					
ANR	1913921	ReturnType	static zval *		1913645	1					
ANR	1913922	Identifier	to_zval_double		1913645	2					
ANR	1913923	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1913645	3					
ANR	1913924	Parameter	zval * ret	979:28:34408:34416	1913645	0	True				
ANR	1913925	ParameterType	zval *		1913645	0					
ANR	1913926	Identifier	ret		1913645	1					
ANR	1913927	Parameter	encodeTypePtr type	979:39:34419:34436	1913645	1	True				
ANR	1913928	ParameterType	encodeTypePtr		1913645	0					
ANR	1913929	Identifier	type		1913645	1					
ANR	1913930	Parameter	xmlNodePtr data	979:59:34439:34453	1913645	2	True				
ANR	1913931	ParameterType	xmlNodePtr		1913645	0					
ANR	1913932	Identifier	data		1913645	1					
ANR	1913933	CFGEntryNode	ENTRY		1913645		True				
ANR	1913934	CFGExitNode	EXIT		1913645		True				
ANR	1913935	Symbol	ret		1913645						
ANR	1913936	Symbol	* * data		1913645						
ANR	1913937	Symbol	data -> children -> next		1913645						
ANR	1913938	Symbol	& lval		1913645						
ANR	1913939	Symbol	NULL		1913645						
ANR	1913940	Symbol	data		1913645						
ANR	1913941	Symbol	php_get_nan		1913645						
ANR	1913942	Symbol	lval		1913645						
ANR	1913943	Symbol	strncasecmp		1913645						
ANR	1913944	Symbol	type		1913645						
ANR	1913945	Symbol	strlen		1913645						
ANR	1913946	Symbol	dval		1913645						
ANR	1913947	Symbol	XML_TEXT_NODE		1913645						
ANR	1913948	Symbol	is_numeric_string		1913645						
ANR	1913949	Symbol	E_ERROR		1913645						
ANR	1913950	Symbol	data -> children		1913645						
ANR	1913951	Symbol	data -> children -> content		1913645						
ANR	1913952	Symbol	* data -> children		1913645						
ANR	1913953	Symbol	* data		1913645						
ANR	1913954	Symbol	& dval		1913645						
ANR	1913955	Symbol	php_get_inf		1913645						
ANR	1913956	Symbol	data -> children -> type		1913645						
ANR	1913957	Function	to_zval_long	1017:0:35564:36345							
ANR	1913958	FunctionDef	"to_zval_long (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1913957	0					
ANR	1913959	CompoundStatement		1018:0:35638:36345	1913957	0					
ANR	1913960	ExpressionStatement	ZVAL_NULL ( ret )	1019:1:35641:35655	1913957	0	True				
ANR	1913961	CallExpression	ZVAL_NULL ( ret )		1913957	0					
ANR	1913962	Callee	ZVAL_NULL		1913957	0					
ANR	1913963	Identifier	ZVAL_NULL		1913957	0					
ANR	1913964	ArgumentList	ret		1913957	1					
ANR	1913965	Argument	ret		1913957	0					
ANR	1913966	Identifier	ret		1913957	0					
ANR	1913967	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1020:1:35658:35682	1913957	1	True				
ANR	1913968	CallExpression	"FIND_XML_NULL ( data , ret )"		1913957	0					
ANR	1913969	Callee	FIND_XML_NULL		1913957	0					
ANR	1913970	Identifier	FIND_XML_NULL		1913957	0					
ANR	1913971	ArgumentList	data		1913957	1					
ANR	1913972	Argument	data		1913957	0					
ANR	1913973	Identifier	data		1913957	0					
ANR	1913974	Argument	ret		1913957	1					
ANR	1913975	Identifier	ret		1913957	0					
ANR	1913976	IfStatement	if ( data && data -> children )		1913957	2					
ANR	1913977	Condition	data && data -> children	1022:5:35690:35711	1913957	0	True				
ANR	1913978	AndExpression	data && data -> children		1913957	0		&&			
ANR	1913979	Identifier	data		1913957	0					
ANR	1913980	PtrMemberAccess	data -> children		1913957	1					
ANR	1913981	Identifier	data		1913957	0					
ANR	1913982	Identifier	children		1913957	1					
ANR	1913983	CompoundStatement		5:29:75:75	1913957	1					
ANR	1913984	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1913957	0					
ANR	1913985	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	1023:6:35722:35790	1913957	0	True				
ANR	1913986	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1913957	0		&&			
ANR	1913987	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1913957	0		==			
ANR	1913988	PtrMemberAccess	data -> children -> type		1913957	0					
ANR	1913989	PtrMemberAccess	data -> children		1913957	0					
ANR	1913990	Identifier	data		1913957	0					
ANR	1913991	Identifier	children		1913957	1					
ANR	1913992	Identifier	type		1913957	1					
ANR	1913993	Identifier	XML_TEXT_NODE		1913957	1					
ANR	1913994	EqualityExpression	data -> children -> next == NULL		1913957	1		==			
ANR	1913995	PtrMemberAccess	data -> children -> next		1913957	0					
ANR	1913996	PtrMemberAccess	data -> children		1913957	0					
ANR	1913997	Identifier	data		1913957	0					
ANR	1913998	Identifier	children		1913957	1					
ANR	1913999	Identifier	next		1913957	1					
ANR	1914000	Identifier	NULL		1913957	1					
ANR	1914001	CompoundStatement		8:3:178:189	1913957	1					
ANR	1914002	IdentifierDeclStatement	zend_long lval ;	1024:3:35798:35812	1913957	0	True				
ANR	1914003	IdentifierDecl	lval		1913957	0					
ANR	1914004	IdentifierDeclType	zend_long		1913957	0					
ANR	1914005	Identifier	lval		1913957	1					
ANR	1914006	IdentifierDeclStatement	double dval ;	1025:3:35817:35828	1913957	1	True				
ANR	1914007	IdentifierDecl	dval		1913957	0					
ANR	1914008	IdentifierDeclType	double		1913957	0					
ANR	1914009	Identifier	dval		1913957	1					
ANR	1914010	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	1027:3:35834:35878	1913957	2	True				
ANR	1914011	CallExpression	whiteSpace_collapse ( data -> children -> content )		1913957	0					
ANR	1914012	Callee	whiteSpace_collapse		1913957	0					
ANR	1914013	Identifier	whiteSpace_collapse		1913957	0					
ANR	1914014	ArgumentList	data -> children -> content		1913957	1					
ANR	1914015	Argument	data -> children -> content		1913957	0					
ANR	1914016	PtrMemberAccess	data -> children -> content		1913957	0					
ANR	1914017	PtrMemberAccess	data -> children		1913957	0					
ANR	1914018	Identifier	data		1913957	0					
ANR	1914019	Identifier	children		1913957	1					
ANR	1914020	Identifier	content		1913957	1					
ANR	1914021	ExpressionStatement	errno = 0	1028:3:35883:35892	1913957	3	True				
ANR	1914022	AssignmentExpression	errno = 0		1913957	0		=			
ANR	1914023	Identifier	errno		1913957	0					
ANR	1914024	PrimaryExpression	0		1913957	1					
ANR	1914025	SwitchStatement	"switch ( is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 ) )"		1913957	4					
ANR	1914026	Condition	"is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"	1030:11:35906:36011	1913957	0	True				
ANR	1914027	CallExpression	"is_numeric_string ( ( char * ) data -> children -> content , strlen ( ( char * ) data -> children -> content ) , & lval , & dval , 0 )"		1913957	0					
ANR	1914028	Callee	is_numeric_string		1913957	0					
ANR	1914029	Identifier	is_numeric_string		1913957	0					
ANR	1914030	ArgumentList	( char * ) data -> children -> content		1913957	1					
ANR	1914031	Argument	( char * ) data -> children -> content		1913957	0					
ANR	1914032	CastExpression	( char * ) data -> children -> content		1913957	0					
ANR	1914033	CastTarget	char *		1913957	0					
ANR	1914034	PtrMemberAccess	data -> children -> content		1913957	1					
ANR	1914035	PtrMemberAccess	data -> children		1913957	0					
ANR	1914036	Identifier	data		1913957	0					
ANR	1914037	Identifier	children		1913957	1					
ANR	1914038	Identifier	content		1913957	1					
ANR	1914039	Argument	strlen ( ( char * ) data -> children -> content )		1913957	1					
ANR	1914040	CallExpression	strlen ( ( char * ) data -> children -> content )		1913957	0					
ANR	1914041	Callee	strlen		1913957	0					
ANR	1914042	Identifier	strlen		1913957	0					
ANR	1914043	ArgumentList	( char * ) data -> children -> content		1913957	1					
ANR	1914044	Argument	( char * ) data -> children -> content		1913957	0					
ANR	1914045	CastExpression	( char * ) data -> children -> content		1913957	0					
ANR	1914046	CastTarget	char *		1913957	0					
ANR	1914047	PtrMemberAccess	data -> children -> content		1913957	1					
ANR	1914048	PtrMemberAccess	data -> children		1913957	0					
ANR	1914049	Identifier	data		1913957	0					
ANR	1914050	Identifier	children		1913957	1					
ANR	1914051	Identifier	content		1913957	1					
ANR	1914052	Argument	& lval		1913957	2					
ANR	1914053	UnaryOperationExpression	& lval		1913957	0					
ANR	1914054	UnaryOperator	&		1913957	0					
ANR	1914055	Identifier	lval		1913957	1					
ANR	1914056	Argument	& dval		1913957	3					
ANR	1914057	UnaryOperationExpression	& dval		1913957	0					
ANR	1914058	UnaryOperator	&		1913957	0					
ANR	1914059	Identifier	dval		1913957	1					
ANR	1914060	Argument	0		1913957	4					
ANR	1914061	PrimaryExpression	0		1913957	0					
ANR	1914062	CompoundStatement		13:119:375:375	1913957	1					
ANR	1914063	Label	case IS_LONG :	1031:4:36020:36032	1913957	0	True				
ANR	1914064	Identifier	IS_LONG		1913957	0					
ANR	1914065	ExpressionStatement	"ZVAL_LONG ( ret , lval )"	1032:5:36039:36059	1913957	1	True				
ANR	1914066	CallExpression	"ZVAL_LONG ( ret , lval )"		1913957	0					
ANR	1914067	Callee	ZVAL_LONG		1913957	0					
ANR	1914068	Identifier	ZVAL_LONG		1913957	0					
ANR	1914069	ArgumentList	ret		1913957	1					
ANR	1914070	Argument	ret		1913957	0					
ANR	1914071	Identifier	ret		1913957	0					
ANR	1914072	Argument	lval		1913957	1					
ANR	1914073	Identifier	lval		1913957	0					
ANR	1914074	BreakStatement	break ;	1033:5:36066:36071	1913957	2	True				
ANR	1914075	Label	case IS_DOUBLE :	1034:4:36077:36091	1913957	3	True				
ANR	1914076	Identifier	IS_DOUBLE		1913957	0					
ANR	1914077	ExpressionStatement	"ZVAL_DOUBLE ( ret , dval )"	1035:5:36098:36120	1913957	4	True				
ANR	1914078	CallExpression	"ZVAL_DOUBLE ( ret , dval )"		1913957	0					
ANR	1914079	Callee	ZVAL_DOUBLE		1913957	0					
ANR	1914080	Identifier	ZVAL_DOUBLE		1913957	0					
ANR	1914081	ArgumentList	ret		1913957	1					
ANR	1914082	Argument	ret		1913957	0					
ANR	1914083	Identifier	ret		1913957	0					
ANR	1914084	Argument	dval		1913957	1					
ANR	1914085	Identifier	dval		1913957	0					
ANR	1914086	BreakStatement	break ;	1036:5:36127:36132	1913957	5	True				
ANR	1914087	Label	default :	1037:4:36138:36145	1913957	6	True				
ANR	1914088	Identifier	default		1913957	0					
ANR	1914089	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1038:5:36152:36213	1913957	7	True				
ANR	1914090	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1913957	0					
ANR	1914091	Callee	soap_error0		1913957	0					
ANR	1914092	Identifier	soap_error0		1913957	0					
ANR	1914093	ArgumentList	E_ERROR		1913957	1					
ANR	1914094	Argument	E_ERROR		1913957	0					
ANR	1914095	Identifier	E_ERROR		1913957	0					
ANR	1914096	Argument	"""Encoding: Violation of encoding rules"""		1913957	1					
ANR	1914097	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1913957	0					
ANR	1914098	ElseStatement	else		1913957	0					
ANR	1914099	CompoundStatement		23:9:590:590	1913957	0					
ANR	1914100	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1041:3:36234:36295	1913957	0	True				
ANR	1914101	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1913957	0					
ANR	1914102	Callee	soap_error0		1913957	0					
ANR	1914103	Identifier	soap_error0		1913957	0					
ANR	1914104	ArgumentList	E_ERROR		1913957	1					
ANR	1914105	Argument	E_ERROR		1913957	0					
ANR	1914106	Identifier	E_ERROR		1913957	0					
ANR	1914107	Argument	"""Encoding: Violation of encoding rules"""		1913957	1					
ANR	1914108	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1913957	0					
ANR	1914109	ElseStatement	else		1913957	0					
ANR	1914110	CompoundStatement		26:8:670:670	1913957	0					
ANR	1914111	ExpressionStatement	ZVAL_NULL ( ret )	1044:2:36313:36327	1913957	0	True				
ANR	1914112	CallExpression	ZVAL_NULL ( ret )		1913957	0					
ANR	1914113	Callee	ZVAL_NULL		1913957	0					
ANR	1914114	Identifier	ZVAL_NULL		1913957	0					
ANR	1914115	ArgumentList	ret		1913957	1					
ANR	1914116	Argument	ret		1913957	0					
ANR	1914117	Identifier	ret		1913957	0					
ANR	1914118	ReturnStatement	return ret ;	1046:1:36333:36343	1913957	3	True				
ANR	1914119	Identifier	ret		1913957	0					
ANR	1914120	ReturnType	static zval *		1913957	1					
ANR	1914121	Identifier	to_zval_long		1913957	2					
ANR	1914122	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1913957	3					
ANR	1914123	Parameter	zval * ret	1017:26:35590:35598	1913957	0	True				
ANR	1914124	ParameterType	zval *		1913957	0					
ANR	1914125	Identifier	ret		1913957	1					
ANR	1914126	Parameter	encodeTypePtr type	1017:37:35601:35618	1913957	1	True				
ANR	1914127	ParameterType	encodeTypePtr		1913957	0					
ANR	1914128	Identifier	type		1913957	1					
ANR	1914129	Parameter	xmlNodePtr data	1017:57:35621:35635	1913957	2	True				
ANR	1914130	ParameterType	xmlNodePtr		1913957	0					
ANR	1914131	Identifier	data		1913957	1					
ANR	1914132	CFGEntryNode	ENTRY		1913957		True				
ANR	1914133	CFGExitNode	EXIT		1913957		True				
ANR	1914134	Symbol	ret		1913957						
ANR	1914135	Symbol	* * data		1913957						
ANR	1914136	Symbol	data -> children -> next		1913957						
ANR	1914137	Symbol	errno		1913957						
ANR	1914138	Symbol	& lval		1913957						
ANR	1914139	Symbol	NULL		1913957						
ANR	1914140	Symbol	data		1913957						
ANR	1914141	Symbol	lval		1913957						
ANR	1914142	Symbol	type		1913957						
ANR	1914143	Symbol	strlen		1913957						
ANR	1914144	Symbol	dval		1913957						
ANR	1914145	Symbol	XML_TEXT_NODE		1913957						
ANR	1914146	Symbol	is_numeric_string		1913957						
ANR	1914147	Symbol	E_ERROR		1913957						
ANR	1914148	Symbol	data -> children		1913957						
ANR	1914149	Symbol	data -> children -> content		1913957						
ANR	1914150	Symbol	* data -> children		1913957						
ANR	1914151	Symbol	* data		1913957						
ANR	1914152	Symbol	& dval		1913957						
ANR	1914153	Symbol	data -> children -> type		1913957						
ANR	1914154	Function	to_xml_long	1049:0:36348:36962							
ANR	1914155	FunctionDef	"to_xml_long (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1914154	0					
ANR	1914156	CompoundStatement		1050:0:36440:36962	1914154	0					
ANR	1914157	IdentifierDeclStatement	xmlNodePtr ret ;	1051:1:36443:36457	1914154	0	True				
ANR	1914158	IdentifierDecl	ret		1914154	0					
ANR	1914159	IdentifierDeclType	xmlNodePtr		1914154	0					
ANR	1914160	Identifier	ret		1914154	1					
ANR	1914161	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1053:1:36461:36502	1914154	1	True				
ANR	1914162	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914154	0		=			
ANR	1914163	Identifier	ret		1914154	0					
ANR	1914164	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914154	1					
ANR	1914165	Callee	xmlNewNode		1914154	0					
ANR	1914166	Identifier	xmlNewNode		1914154	0					
ANR	1914167	ArgumentList	NULL		1914154	1					
ANR	1914168	Argument	NULL		1914154	0					
ANR	1914169	Identifier	NULL		1914154	0					
ANR	1914170	Argument	"BAD_CAST ( ""BOGUS"" )"		1914154	1					
ANR	1914171	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1914154	0					
ANR	1914172	Callee	BAD_CAST		1914154	0					
ANR	1914173	Identifier	BAD_CAST		1914154	0					
ANR	1914174	ArgumentList	"""BOGUS"""		1914154	1					
ANR	1914175	Argument	"""BOGUS"""		1914154	0					
ANR	1914176	PrimaryExpression	"""BOGUS"""		1914154	0					
ANR	1914177	ExpressionStatement	"xmlAddChild ( parent , ret )"	1054:1:36505:36529	1914154	2	True				
ANR	1914178	CallExpression	"xmlAddChild ( parent , ret )"		1914154	0					
ANR	1914179	Callee	xmlAddChild		1914154	0					
ANR	1914180	Identifier	xmlAddChild		1914154	0					
ANR	1914181	ArgumentList	parent		1914154	1					
ANR	1914182	Argument	parent		1914154	0					
ANR	1914183	Identifier	parent		1914154	0					
ANR	1914184	Argument	ret		1914154	1					
ANR	1914185	Identifier	ret		1914154	0					
ANR	1914186	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	1055:1:36532:36564	1914154	3	True				
ANR	1914187	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1914154	0					
ANR	1914188	Callee	FIND_ZVAL_NULL		1914154	0					
ANR	1914189	Identifier	FIND_ZVAL_NULL		1914154	0					
ANR	1914190	ArgumentList	data		1914154	1					
ANR	1914191	Argument	data		1914154	0					
ANR	1914192	Identifier	data		1914154	0					
ANR	1914193	Argument	ret		1914154	1					
ANR	1914194	Identifier	ret		1914154	0					
ANR	1914195	Argument	style		1914154	2					
ANR	1914196	Identifier	style		1914154	0					
ANR	1914197	IfStatement	if ( Z_TYPE_P ( data ) == IS_DOUBLE )		1914154	4					
ANR	1914198	Condition	Z_TYPE_P ( data ) == IS_DOUBLE	1057:5:36572:36598	1914154	0	True				
ANR	1914199	EqualityExpression	Z_TYPE_P ( data ) == IS_DOUBLE		1914154	0		==			
ANR	1914200	CallExpression	Z_TYPE_P ( data )		1914154	0					
ANR	1914201	Callee	Z_TYPE_P		1914154	0					
ANR	1914202	Identifier	Z_TYPE_P		1914154	0					
ANR	1914203	ArgumentList	data		1914154	1					
ANR	1914204	Argument	data		1914154	0					
ANR	1914205	Identifier	data		1914154	0					
ANR	1914206	Identifier	IS_DOUBLE		1914154	1					
ANR	1914207	CompoundStatement		9:2:164:175	1914154	1					
ANR	1914208	IdentifierDeclStatement	char s [ 256 ] ;	1058:2:36605:36616	1914154	0	True				
ANR	1914209	IdentifierDecl	s [ 256 ]		1914154	0					
ANR	1914210	IdentifierDeclType	char [ 256 ]		1914154	0					
ANR	1914211	Identifier	s		1914154	1					
ANR	1914212	PrimaryExpression	256		1914154	2					
ANR	1914213	ExpressionStatement	"snprintf ( s , sizeof ( s ) , ""%0.0F"" , floor ( Z_DVAL_P ( data ) ) )"	1060:2:36621:36674	1914154	1	True				
ANR	1914214	CallExpression	"snprintf ( s , sizeof ( s ) , ""%0.0F"" , floor ( Z_DVAL_P ( data ) ) )"		1914154	0					
ANR	1914215	Callee	snprintf		1914154	0					
ANR	1914216	Identifier	snprintf		1914154	0					
ANR	1914217	ArgumentList	s		1914154	1					
ANR	1914218	Argument	s		1914154	0					
ANR	1914219	Identifier	s		1914154	0					
ANR	1914220	Argument	sizeof ( s )		1914154	1					
ANR	1914221	SizeofExpression	sizeof ( s )		1914154	0					
ANR	1914222	Sizeof	sizeof		1914154	0					
ANR	1914223	SizeofOperand	s		1914154	1					
ANR	1914224	Argument	"""%0.0F"""		1914154	2					
ANR	1914225	PrimaryExpression	"""%0.0F"""		1914154	0					
ANR	1914226	Argument	floor ( Z_DVAL_P ( data ) )		1914154	3					
ANR	1914227	CallExpression	floor ( Z_DVAL_P ( data ) )		1914154	0					
ANR	1914228	Callee	floor		1914154	0					
ANR	1914229	Identifier	floor		1914154	0					
ANR	1914230	ArgumentList	Z_DVAL_P ( data )		1914154	1					
ANR	1914231	Argument	Z_DVAL_P ( data )		1914154	0					
ANR	1914232	CallExpression	Z_DVAL_P ( data )		1914154	0					
ANR	1914233	Callee	Z_DVAL_P		1914154	0					
ANR	1914234	Identifier	Z_DVAL_P		1914154	0					
ANR	1914235	ArgumentList	data		1914154	1					
ANR	1914236	Argument	data		1914154	0					
ANR	1914237	Identifier	data		1914154	0					
ANR	1914238	ExpressionStatement	"xmlNodeSetContent ( ret , BAD_CAST ( s ) )"	1061:2:36678:36713	1914154	2	True				
ANR	1914239	CallExpression	"xmlNodeSetContent ( ret , BAD_CAST ( s ) )"		1914154	0					
ANR	1914240	Callee	xmlNodeSetContent		1914154	0					
ANR	1914241	Identifier	xmlNodeSetContent		1914154	0					
ANR	1914242	ArgumentList	ret		1914154	1					
ANR	1914243	Argument	ret		1914154	0					
ANR	1914244	Identifier	ret		1914154	0					
ANR	1914245	Argument	BAD_CAST ( s )		1914154	1					
ANR	1914246	CallExpression	BAD_CAST ( s )		1914154	0					
ANR	1914247	Callee	BAD_CAST		1914154	0					
ANR	1914248	Identifier	BAD_CAST		1914154	0					
ANR	1914249	ArgumentList	s		1914154	1					
ANR	1914250	Argument	s		1914154	0					
ANR	1914251	Identifier	s		1914154	0					
ANR	1914252	ElseStatement	else		1914154	0					
ANR	1914253	CompoundStatement		14:2:286:342	1914154	0					
ANR	1914254	IdentifierDeclStatement	zend_string * str = zend_long_to_str ( zval_get_long ( data ) ) ;	1063:2:36727:36783	1914154	0	True				
ANR	1914255	IdentifierDecl	* str = zend_long_to_str ( zval_get_long ( data ) )		1914154	0					
ANR	1914256	IdentifierDeclType	zend_string *		1914154	0					
ANR	1914257	Identifier	str		1914154	1					
ANR	1914258	AssignmentExpression	* str = zend_long_to_str ( zval_get_long ( data ) )		1914154	2		=			
ANR	1914259	Identifier	str		1914154	0					
ANR	1914260	CallExpression	zend_long_to_str ( zval_get_long ( data ) )		1914154	1					
ANR	1914261	Callee	zend_long_to_str		1914154	0					
ANR	1914262	Identifier	zend_long_to_str		1914154	0					
ANR	1914263	ArgumentList	zval_get_long ( data )		1914154	1					
ANR	1914264	Argument	zval_get_long ( data )		1914154	0					
ANR	1914265	CallExpression	zval_get_long ( data )		1914154	0					
ANR	1914266	Callee	zval_get_long		1914154	0					
ANR	1914267	Identifier	zval_get_long		1914154	0					
ANR	1914268	ArgumentList	data		1914154	1					
ANR	1914269	Argument	data		1914154	0					
ANR	1914270	Identifier	data		1914154	0					
ANR	1914271	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( ZSTR_VAL ( str ) ) , ZSTR_LEN ( str ) )"	1064:2:36787:36852	1914154	1	True				
ANR	1914272	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( ZSTR_VAL ( str ) ) , ZSTR_LEN ( str ) )"		1914154	0					
ANR	1914273	Callee	xmlNodeSetContentLen		1914154	0					
ANR	1914274	Identifier	xmlNodeSetContentLen		1914154	0					
ANR	1914275	ArgumentList	ret		1914154	1					
ANR	1914276	Argument	ret		1914154	0					
ANR	1914277	Identifier	ret		1914154	0					
ANR	1914278	Argument	BAD_CAST ( ZSTR_VAL ( str ) )		1914154	1					
ANR	1914279	CallExpression	BAD_CAST ( ZSTR_VAL ( str ) )		1914154	0					
ANR	1914280	Callee	BAD_CAST		1914154	0					
ANR	1914281	Identifier	BAD_CAST		1914154	0					
ANR	1914282	ArgumentList	ZSTR_VAL ( str )		1914154	1					
ANR	1914283	Argument	ZSTR_VAL ( str )		1914154	0					
ANR	1914284	CallExpression	ZSTR_VAL ( str )		1914154	0					
ANR	1914285	Callee	ZSTR_VAL		1914154	0					
ANR	1914286	Identifier	ZSTR_VAL		1914154	0					
ANR	1914287	ArgumentList	str		1914154	1					
ANR	1914288	Argument	str		1914154	0					
ANR	1914289	Identifier	str		1914154	0					
ANR	1914290	Argument	ZSTR_LEN ( str )		1914154	2					
ANR	1914291	CallExpression	ZSTR_LEN ( str )		1914154	0					
ANR	1914292	Callee	ZSTR_LEN		1914154	0					
ANR	1914293	Identifier	ZSTR_LEN		1914154	0					
ANR	1914294	ArgumentList	str		1914154	1					
ANR	1914295	Argument	str		1914154	0					
ANR	1914296	Identifier	str		1914154	0					
ANR	1914297	ExpressionStatement	zend_string_release ( str )	1065:2:36856:36880	1914154	2	True				
ANR	1914298	CallExpression	zend_string_release ( str )		1914154	0					
ANR	1914299	Callee	zend_string_release		1914154	0					
ANR	1914300	Identifier	zend_string_release		1914154	0					
ANR	1914301	ArgumentList	str		1914154	1					
ANR	1914302	Argument	str		1914154	0					
ANR	1914303	Identifier	str		1914154	0					
ANR	1914304	IfStatement	if ( style == SOAP_ENCODED )		1914154	5					
ANR	1914305	Condition	style == SOAP_ENCODED	1068:5:36891:36911	1914154	0	True				
ANR	1914306	EqualityExpression	style == SOAP_ENCODED		1914154	0		==			
ANR	1914307	Identifier	style		1914154	0					
ANR	1914308	Identifier	SOAP_ENCODED		1914154	1					
ANR	1914309	CompoundStatement		19:28:473:473	1914154	1					
ANR	1914310	ExpressionStatement	"set_ns_and_type ( ret , type )"	1069:2:36918:36944	1914154	0	True				
ANR	1914311	CallExpression	"set_ns_and_type ( ret , type )"		1914154	0					
ANR	1914312	Callee	set_ns_and_type		1914154	0					
ANR	1914313	Identifier	set_ns_and_type		1914154	0					
ANR	1914314	ArgumentList	ret		1914154	1					
ANR	1914315	Argument	ret		1914154	0					
ANR	1914316	Identifier	ret		1914154	0					
ANR	1914317	Argument	type		1914154	1					
ANR	1914318	Identifier	type		1914154	0					
ANR	1914319	ReturnStatement	return ret ;	1071:1:36950:36960	1914154	6	True				
ANR	1914320	Identifier	ret		1914154	0					
ANR	1914321	ReturnType	static xmlNodePtr		1914154	1					
ANR	1914322	Identifier	to_xml_long		1914154	2					
ANR	1914323	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1914154	3					
ANR	1914324	Parameter	encodeTypePtr type	1049:30:36378:36395	1914154	0	True				
ANR	1914325	ParameterType	encodeTypePtr		1914154	0					
ANR	1914326	Identifier	type		1914154	1					
ANR	1914327	Parameter	zval * data	1049:50:36398:36407	1914154	1	True				
ANR	1914328	ParameterType	zval *		1914154	0					
ANR	1914329	Identifier	data		1914154	1					
ANR	1914330	Parameter	int style	1049:62:36410:36418	1914154	2	True				
ANR	1914331	ParameterType	int		1914154	0					
ANR	1914332	Identifier	style		1914154	1					
ANR	1914333	Parameter	xmlNodePtr parent	1049:73:36421:36437	1914154	3	True				
ANR	1914334	ParameterType	xmlNodePtr		1914154	0					
ANR	1914335	Identifier	parent		1914154	1					
ANR	1914336	CFGEntryNode	ENTRY		1914154		True				
ANR	1914337	CFGExitNode	EXIT		1914154		True				
ANR	1914338	Symbol	ret		1914154						
ANR	1914339	Symbol	parent		1914154						
ANR	1914340	Symbol	NULL		1914154						
ANR	1914341	Symbol	data		1914154						
ANR	1914342	Symbol	zend_long_to_str		1914154						
ANR	1914343	Symbol	xmlNewNode		1914154						
ANR	1914344	Symbol	type		1914154						
ANR	1914345	Symbol	Z_TYPE_P		1914154						
ANR	1914346	Symbol	Z_DVAL_P		1914154						
ANR	1914347	Symbol	ZSTR_VAL		1914154						
ANR	1914348	Symbol	str		1914154						
ANR	1914349	Symbol	s		1914154						
ANR	1914350	Symbol	zval_get_long		1914154						
ANR	1914351	Symbol	ZSTR_LEN		1914154						
ANR	1914352	Symbol	IS_DOUBLE		1914154						
ANR	1914353	Symbol	style		1914154						
ANR	1914354	Symbol	SOAP_ENCODED		1914154						
ANR	1914355	Symbol	floor		1914154						
ANR	1914356	Symbol	BAD_CAST		1914154						
ANR	1914357	Function	to_xml_double	1074:0:36965:37527							
ANR	1914358	FunctionDef	"to_xml_double (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1914357	0					
ANR	1914359	CompoundStatement		1075:0:37059:37527	1914357	0					
ANR	1914360	IdentifierDeclStatement	xmlNodePtr ret ;	1076:1:37062:37076	1914357	0	True				
ANR	1914361	IdentifierDecl	ret		1914357	0					
ANR	1914362	IdentifierDeclType	xmlNodePtr		1914357	0					
ANR	1914363	Identifier	ret		1914357	1					
ANR	1914364	IdentifierDeclStatement	zval tmp ;	1077:1:37079:37087	1914357	1	True				
ANR	1914365	IdentifierDecl	tmp		1914357	0					
ANR	1914366	IdentifierDeclType	zval		1914357	0					
ANR	1914367	Identifier	tmp		1914357	1					
ANR	1914368	IdentifierDeclStatement	char * str ;	1078:1:37090:37099	1914357	2	True				
ANR	1914369	IdentifierDecl	* str		1914357	0					
ANR	1914370	IdentifierDeclType	char *		1914357	0					
ANR	1914371	Identifier	str		1914357	1					
ANR	1914372	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1080:1:37103:37144	1914357	3	True				
ANR	1914373	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914357	0		=			
ANR	1914374	Identifier	ret		1914357	0					
ANR	1914375	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914357	1					
ANR	1914376	Callee	xmlNewNode		1914357	0					
ANR	1914377	Identifier	xmlNewNode		1914357	0					
ANR	1914378	ArgumentList	NULL		1914357	1					
ANR	1914379	Argument	NULL		1914357	0					
ANR	1914380	Identifier	NULL		1914357	0					
ANR	1914381	Argument	"BAD_CAST ( ""BOGUS"" )"		1914357	1					
ANR	1914382	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1914357	0					
ANR	1914383	Callee	BAD_CAST		1914357	0					
ANR	1914384	Identifier	BAD_CAST		1914357	0					
ANR	1914385	ArgumentList	"""BOGUS"""		1914357	1					
ANR	1914386	Argument	"""BOGUS"""		1914357	0					
ANR	1914387	PrimaryExpression	"""BOGUS"""		1914357	0					
ANR	1914388	ExpressionStatement	"xmlAddChild ( parent , ret )"	1081:1:37147:37171	1914357	4	True				
ANR	1914389	CallExpression	"xmlAddChild ( parent , ret )"		1914357	0					
ANR	1914390	Callee	xmlAddChild		1914357	0					
ANR	1914391	Identifier	xmlAddChild		1914357	0					
ANR	1914392	ArgumentList	parent		1914357	1					
ANR	1914393	Argument	parent		1914357	0					
ANR	1914394	Identifier	parent		1914357	0					
ANR	1914395	Argument	ret		1914357	1					
ANR	1914396	Identifier	ret		1914357	0					
ANR	1914397	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	1082:1:37174:37206	1914357	5	True				
ANR	1914398	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1914357	0					
ANR	1914399	Callee	FIND_ZVAL_NULL		1914357	0					
ANR	1914400	Identifier	FIND_ZVAL_NULL		1914357	0					
ANR	1914401	ArgumentList	data		1914357	1					
ANR	1914402	Argument	data		1914357	0					
ANR	1914403	Identifier	data		1914357	0					
ANR	1914404	Argument	ret		1914357	1					
ANR	1914405	Identifier	ret		1914357	0					
ANR	1914406	Argument	style		1914357	2					
ANR	1914407	Identifier	style		1914357	0					
ANR	1914408	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , zval_get_double ( data ) )"	1084:1:37210:37250	1914357	6	True				
ANR	1914409	CallExpression	"ZVAL_DOUBLE ( & tmp , zval_get_double ( data ) )"		1914357	0					
ANR	1914410	Callee	ZVAL_DOUBLE		1914357	0					
ANR	1914411	Identifier	ZVAL_DOUBLE		1914357	0					
ANR	1914412	ArgumentList	& tmp		1914357	1					
ANR	1914413	Argument	& tmp		1914357	0					
ANR	1914414	UnaryOperationExpression	& tmp		1914357	0					
ANR	1914415	UnaryOperator	&		1914357	0					
ANR	1914416	Identifier	tmp		1914357	1					
ANR	1914417	Argument	zval_get_double ( data )		1914357	1					
ANR	1914418	CallExpression	zval_get_double ( data )		1914357	0					
ANR	1914419	Callee	zval_get_double		1914357	0					
ANR	1914420	Identifier	zval_get_double		1914357	0					
ANR	1914421	ArgumentList	data		1914357	1					
ANR	1914422	Argument	data		1914357	0					
ANR	1914423	Identifier	data		1914357	0					
ANR	1914424	ExpressionStatement	"str = ( char * ) safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"	1086:1:37254:37325	1914357	7	True				
ANR	1914425	AssignmentExpression	"str = ( char * ) safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"		1914357	0		=			
ANR	1914426	Identifier	str		1914357	0					
ANR	1914427	CastExpression	"( char * ) safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"		1914357	1					
ANR	1914428	CastTarget	char *		1914357	0					
ANR	1914429	CallExpression	"safe_emalloc ( EG ( precision ) , 1 , MAX_LENGTH_OF_DOUBLE + 1 )"		1914357	1					
ANR	1914430	Callee	safe_emalloc		1914357	0					
ANR	1914431	Identifier	safe_emalloc		1914357	0					
ANR	1914432	ArgumentList	EG ( precision )		1914357	1					
ANR	1914433	Argument	EG ( precision )		1914357	0					
ANR	1914434	CallExpression	EG ( precision )		1914357	0					
ANR	1914435	Callee	EG		1914357	0					
ANR	1914436	Identifier	EG		1914357	0					
ANR	1914437	ArgumentList	precision		1914357	1					
ANR	1914438	Argument	precision		1914357	0					
ANR	1914439	Identifier	precision		1914357	0					
ANR	1914440	Argument	1		1914357	1					
ANR	1914441	PrimaryExpression	1		1914357	0					
ANR	1914442	Argument	MAX_LENGTH_OF_DOUBLE + 1		1914357	2					
ANR	1914443	AdditiveExpression	MAX_LENGTH_OF_DOUBLE + 1		1914357	0		+			
ANR	1914444	Identifier	MAX_LENGTH_OF_DOUBLE		1914357	0					
ANR	1914445	PrimaryExpression	1		1914357	1					
ANR	1914446	ExpressionStatement	"php_gcvt ( Z_DVAL ( tmp ) , EG ( precision ) , '.' , 'E' , str )"	1087:1:37328:37379	1914357	8	True				
ANR	1914447	CallExpression	"php_gcvt ( Z_DVAL ( tmp ) , EG ( precision ) , '.' , 'E' , str )"		1914357	0					
ANR	1914448	Callee	php_gcvt		1914357	0					
ANR	1914449	Identifier	php_gcvt		1914357	0					
ANR	1914450	ArgumentList	Z_DVAL ( tmp )		1914357	1					
ANR	1914451	Argument	Z_DVAL ( tmp )		1914357	0					
ANR	1914452	CallExpression	Z_DVAL ( tmp )		1914357	0					
ANR	1914453	Callee	Z_DVAL		1914357	0					
ANR	1914454	Identifier	Z_DVAL		1914357	0					
ANR	1914455	ArgumentList	tmp		1914357	1					
ANR	1914456	Argument	tmp		1914357	0					
ANR	1914457	Identifier	tmp		1914357	0					
ANR	1914458	Argument	EG ( precision )		1914357	1					
ANR	1914459	CallExpression	EG ( precision )		1914357	0					
ANR	1914460	Callee	EG		1914357	0					
ANR	1914461	Identifier	EG		1914357	0					
ANR	1914462	ArgumentList	precision		1914357	1					
ANR	1914463	Argument	precision		1914357	0					
ANR	1914464	Identifier	precision		1914357	0					
ANR	1914465	Argument	'.'		1914357	2					
ANR	1914466	PrimaryExpression	'.'		1914357	0					
ANR	1914467	Argument	'E'		1914357	3					
ANR	1914468	PrimaryExpression	'E'		1914357	0					
ANR	1914469	Argument	str		1914357	4					
ANR	1914470	Identifier	str		1914357	0					
ANR	1914471	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( str ) , strlen ( str ) )"	1088:1:37382:37435	1914357	9	True				
ANR	1914472	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( str ) , strlen ( str ) )"		1914357	0					
ANR	1914473	Callee	xmlNodeSetContentLen		1914357	0					
ANR	1914474	Identifier	xmlNodeSetContentLen		1914357	0					
ANR	1914475	ArgumentList	ret		1914357	1					
ANR	1914476	Argument	ret		1914357	0					
ANR	1914477	Identifier	ret		1914357	0					
ANR	1914478	Argument	BAD_CAST ( str )		1914357	1					
ANR	1914479	CallExpression	BAD_CAST ( str )		1914357	0					
ANR	1914480	Callee	BAD_CAST		1914357	0					
ANR	1914481	Identifier	BAD_CAST		1914357	0					
ANR	1914482	ArgumentList	str		1914357	1					
ANR	1914483	Argument	str		1914357	0					
ANR	1914484	Identifier	str		1914357	0					
ANR	1914485	Argument	strlen ( str )		1914357	2					
ANR	1914486	CallExpression	strlen ( str )		1914357	0					
ANR	1914487	Callee	strlen		1914357	0					
ANR	1914488	Identifier	strlen		1914357	0					
ANR	1914489	ArgumentList	str		1914357	1					
ANR	1914490	Argument	str		1914357	0					
ANR	1914491	Identifier	str		1914357	0					
ANR	1914492	ExpressionStatement	efree ( str )	1089:1:37438:37448	1914357	10	True				
ANR	1914493	CallExpression	efree ( str )		1914357	0					
ANR	1914494	Callee	efree		1914357	0					
ANR	1914495	Identifier	efree		1914357	0					
ANR	1914496	ArgumentList	str		1914357	1					
ANR	1914497	Argument	str		1914357	0					
ANR	1914498	Identifier	str		1914357	0					
ANR	1914499	IfStatement	if ( style == SOAP_ENCODED )		1914357	11					
ANR	1914500	Condition	style == SOAP_ENCODED	1091:5:37456:37476	1914357	0	True				
ANR	1914501	EqualityExpression	style == SOAP_ENCODED		1914357	0		==			
ANR	1914502	Identifier	style		1914357	0					
ANR	1914503	Identifier	SOAP_ENCODED		1914357	1					
ANR	1914504	CompoundStatement		17:28:419:419	1914357	1					
ANR	1914505	ExpressionStatement	"set_ns_and_type ( ret , type )"	1092:2:37483:37509	1914357	0	True				
ANR	1914506	CallExpression	"set_ns_and_type ( ret , type )"		1914357	0					
ANR	1914507	Callee	set_ns_and_type		1914357	0					
ANR	1914508	Identifier	set_ns_and_type		1914357	0					
ANR	1914509	ArgumentList	ret		1914357	1					
ANR	1914510	Argument	ret		1914357	0					
ANR	1914511	Identifier	ret		1914357	0					
ANR	1914512	Argument	type		1914357	1					
ANR	1914513	Identifier	type		1914357	0					
ANR	1914514	ReturnStatement	return ret ;	1094:1:37515:37525	1914357	12	True				
ANR	1914515	Identifier	ret		1914357	0					
ANR	1914516	ReturnType	static xmlNodePtr		1914357	1					
ANR	1914517	Identifier	to_xml_double		1914357	2					
ANR	1914518	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1914357	3					
ANR	1914519	Parameter	encodeTypePtr type	1074:32:36997:37014	1914357	0	True				
ANR	1914520	ParameterType	encodeTypePtr		1914357	0					
ANR	1914521	Identifier	type		1914357	1					
ANR	1914522	Parameter	zval * data	1074:52:37017:37026	1914357	1	True				
ANR	1914523	ParameterType	zval *		1914357	0					
ANR	1914524	Identifier	data		1914357	1					
ANR	1914525	Parameter	int style	1074:64:37029:37037	1914357	2	True				
ANR	1914526	ParameterType	int		1914357	0					
ANR	1914527	Identifier	style		1914357	1					
ANR	1914528	Parameter	xmlNodePtr parent	1074:75:37040:37056	1914357	3	True				
ANR	1914529	ParameterType	xmlNodePtr		1914357	0					
ANR	1914530	Identifier	parent		1914357	1					
ANR	1914531	CFGEntryNode	ENTRY		1914357		True				
ANR	1914532	CFGExitNode	EXIT		1914357		True				
ANR	1914533	Symbol	ret		1914357						
ANR	1914534	Symbol	parent		1914357						
ANR	1914535	Symbol	EG		1914357						
ANR	1914536	Symbol	NULL		1914357						
ANR	1914537	Symbol	data		1914357						
ANR	1914538	Symbol	precision		1914357						
ANR	1914539	Symbol	xmlNewNode		1914357						
ANR	1914540	Symbol	type		1914357						
ANR	1914541	Symbol	Z_DVAL		1914357						
ANR	1914542	Symbol	zval_get_double		1914357						
ANR	1914543	Symbol	str		1914357						
ANR	1914544	Symbol	strlen		1914357						
ANR	1914545	Symbol	tmp		1914357						
ANR	1914546	Symbol	MAX_LENGTH_OF_DOUBLE		1914357						
ANR	1914547	Symbol	style		1914357						
ANR	1914548	Symbol	& tmp		1914357						
ANR	1914549	Symbol	SOAP_ENCODED		1914357						
ANR	1914550	Symbol	safe_emalloc		1914357						
ANR	1914551	Symbol	BAD_CAST		1914357						
ANR	1914552	Function	to_zval_bool	1097:0:37530:38436							
ANR	1914553	FunctionDef	"to_zval_bool (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1914552	0					
ANR	1914554	CompoundStatement		1098:0:37604:38436	1914552	0					
ANR	1914555	ExpressionStatement	ZVAL_NULL ( ret )	1099:1:37607:37621	1914552	0	True				
ANR	1914556	CallExpression	ZVAL_NULL ( ret )		1914552	0					
ANR	1914557	Callee	ZVAL_NULL		1914552	0					
ANR	1914558	Identifier	ZVAL_NULL		1914552	0					
ANR	1914559	ArgumentList	ret		1914552	1					
ANR	1914560	Argument	ret		1914552	0					
ANR	1914561	Identifier	ret		1914552	0					
ANR	1914562	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1100:1:37624:37648	1914552	1	True				
ANR	1914563	CallExpression	"FIND_XML_NULL ( data , ret )"		1914552	0					
ANR	1914564	Callee	FIND_XML_NULL		1914552	0					
ANR	1914565	Identifier	FIND_XML_NULL		1914552	0					
ANR	1914566	ArgumentList	data		1914552	1					
ANR	1914567	Argument	data		1914552	0					
ANR	1914568	Identifier	data		1914552	0					
ANR	1914569	Argument	ret		1914552	1					
ANR	1914570	Identifier	ret		1914552	0					
ANR	1914571	IfStatement	if ( data && data -> children )		1914552	2					
ANR	1914572	Condition	data && data -> children	1102:5:37656:37677	1914552	0	True				
ANR	1914573	AndExpression	data && data -> children		1914552	0		&&			
ANR	1914574	Identifier	data		1914552	0					
ANR	1914575	PtrMemberAccess	data -> children		1914552	1					
ANR	1914576	Identifier	data		1914552	0					
ANR	1914577	Identifier	children		1914552	1					
ANR	1914578	CompoundStatement		5:29:75:75	1914552	1					
ANR	1914579	IfStatement	if ( data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL )		1914552	0					
ANR	1914580	Condition	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL	1103:6:37688:37756	1914552	0	True				
ANR	1914581	AndExpression	data -> children -> type == XML_TEXT_NODE && data -> children -> next == NULL		1914552	0		&&			
ANR	1914582	EqualityExpression	data -> children -> type == XML_TEXT_NODE		1914552	0		==			
ANR	1914583	PtrMemberAccess	data -> children -> type		1914552	0					
ANR	1914584	PtrMemberAccess	data -> children		1914552	0					
ANR	1914585	Identifier	data		1914552	0					
ANR	1914586	Identifier	children		1914552	1					
ANR	1914587	Identifier	type		1914552	1					
ANR	1914588	Identifier	XML_TEXT_NODE		1914552	1					
ANR	1914589	EqualityExpression	data -> children -> next == NULL		1914552	1		==			
ANR	1914590	PtrMemberAccess	data -> children -> next		1914552	0					
ANR	1914591	PtrMemberAccess	data -> children		1914552	0					
ANR	1914592	Identifier	data		1914552	0					
ANR	1914593	Identifier	children		1914552	1					
ANR	1914594	Identifier	next		1914552	1					
ANR	1914595	Identifier	NULL		1914552	1					
ANR	1914596	CompoundStatement		6:77:154:154	1914552	1					
ANR	1914597	ExpressionStatement	whiteSpace_collapse ( data -> children -> content )	1104:3:37764:37808	1914552	0	True				
ANR	1914598	CallExpression	whiteSpace_collapse ( data -> children -> content )		1914552	0					
ANR	1914599	Callee	whiteSpace_collapse		1914552	0					
ANR	1914600	Identifier	whiteSpace_collapse		1914552	0					
ANR	1914601	ArgumentList	data -> children -> content		1914552	1					
ANR	1914602	Argument	data -> children -> content		1914552	0					
ANR	1914603	PtrMemberAccess	data -> children -> content		1914552	0					
ANR	1914604	PtrMemberAccess	data -> children		1914552	0					
ANR	1914605	Identifier	data		1914552	0					
ANR	1914606	Identifier	children		1914552	1					
ANR	1914607	Identifier	content		1914552	1					
ANR	1914608	IfStatement	"if ( stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0 )"		1914552	1					
ANR	1914609	Condition	"stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"	1105:7:37817:37981	1914552	0	True				
ANR	1914610	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"		1914552	0		||			
ANR	1914611	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""true"" ) == 0"		1914552	0		==			
ANR	1914612	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""true"" )"		1914552	0					
ANR	1914613	Callee	stricmp		1914552	0					
ANR	1914614	Identifier	stricmp		1914552	0					
ANR	1914615	ArgumentList	( char * ) data -> children -> content		1914552	1					
ANR	1914616	Argument	( char * ) data -> children -> content		1914552	0					
ANR	1914617	CastExpression	( char * ) data -> children -> content		1914552	0					
ANR	1914618	CastTarget	char *		1914552	0					
ANR	1914619	PtrMemberAccess	data -> children -> content		1914552	1					
ANR	1914620	PtrMemberAccess	data -> children		1914552	0					
ANR	1914621	Identifier	data		1914552	0					
ANR	1914622	Identifier	children		1914552	1					
ANR	1914623	Identifier	content		1914552	1					
ANR	1914624	Argument	"""true"""		1914552	1					
ANR	1914625	PrimaryExpression	"""true"""		1914552	0					
ANR	1914626	PrimaryExpression	0		1914552	1					
ANR	1914627	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"		1914552	1		||			
ANR	1914628	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""t"" ) == 0"		1914552	0		==			
ANR	1914629	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""t"" )"		1914552	0					
ANR	1914630	Callee	stricmp		1914552	0					
ANR	1914631	Identifier	stricmp		1914552	0					
ANR	1914632	ArgumentList	( char * ) data -> children -> content		1914552	1					
ANR	1914633	Argument	( char * ) data -> children -> content		1914552	0					
ANR	1914634	CastExpression	( char * ) data -> children -> content		1914552	0					
ANR	1914635	CastTarget	char *		1914552	0					
ANR	1914636	PtrMemberAccess	data -> children -> content		1914552	1					
ANR	1914637	PtrMemberAccess	data -> children		1914552	0					
ANR	1914638	Identifier	data		1914552	0					
ANR	1914639	Identifier	children		1914552	1					
ANR	1914640	Identifier	content		1914552	1					
ANR	1914641	Argument	"""t"""		1914552	1					
ANR	1914642	PrimaryExpression	"""t"""		1914552	0					
ANR	1914643	PrimaryExpression	0		1914552	1					
ANR	1914644	EqualityExpression	"strcmp ( ( char * ) data -> children -> content , ""1"" ) == 0"		1914552	1		==			
ANR	1914645	CallExpression	"strcmp ( ( char * ) data -> children -> content , ""1"" )"		1914552	0					
ANR	1914646	Callee	strcmp		1914552	0					
ANR	1914647	Identifier	strcmp		1914552	0					
ANR	1914648	ArgumentList	( char * ) data -> children -> content		1914552	1					
ANR	1914649	Argument	( char * ) data -> children -> content		1914552	0					
ANR	1914650	CastExpression	( char * ) data -> children -> content		1914552	0					
ANR	1914651	CastTarget	char *		1914552	0					
ANR	1914652	PtrMemberAccess	data -> children -> content		1914552	1					
ANR	1914653	PtrMemberAccess	data -> children		1914552	0					
ANR	1914654	Identifier	data		1914552	0					
ANR	1914655	Identifier	children		1914552	1					
ANR	1914656	Identifier	content		1914552	1					
ANR	1914657	Argument	"""1"""		1914552	1					
ANR	1914658	PrimaryExpression	"""1"""		1914552	0					
ANR	1914659	PrimaryExpression	0		1914552	1					
ANR	1914660	CompoundStatement		10:54:379:379	1914552	1					
ANR	1914661	ExpressionStatement	ZVAL_TRUE ( ret )	1108:4:37990:38004	1914552	0	True				
ANR	1914662	CallExpression	ZVAL_TRUE ( ret )		1914552	0					
ANR	1914663	Callee	ZVAL_TRUE		1914552	0					
ANR	1914664	Identifier	ZVAL_TRUE		1914552	0					
ANR	1914665	ArgumentList	ret		1914552	1					
ANR	1914666	Argument	ret		1914552	0					
ANR	1914667	Identifier	ret		1914552	0					
ANR	1914668	ElseStatement	else		1914552	0					
ANR	1914669	IfStatement	"if ( stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0 )"		1914552	0					
ANR	1914670	Condition	"stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"	1109:14:38020:38185	1914552	0	True				
ANR	1914671	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0 || stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"		1914552	0		||			
ANR	1914672	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""false"" ) == 0"		1914552	0		==			
ANR	1914673	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""false"" )"		1914552	0					
ANR	1914674	Callee	stricmp		1914552	0					
ANR	1914675	Identifier	stricmp		1914552	0					
ANR	1914676	ArgumentList	( char * ) data -> children -> content		1914552	1					
ANR	1914677	Argument	( char * ) data -> children -> content		1914552	0					
ANR	1914678	CastExpression	( char * ) data -> children -> content		1914552	0					
ANR	1914679	CastTarget	char *		1914552	0					
ANR	1914680	PtrMemberAccess	data -> children -> content		1914552	1					
ANR	1914681	PtrMemberAccess	data -> children		1914552	0					
ANR	1914682	Identifier	data		1914552	0					
ANR	1914683	Identifier	children		1914552	1					
ANR	1914684	Identifier	content		1914552	1					
ANR	1914685	Argument	"""false"""		1914552	1					
ANR	1914686	PrimaryExpression	"""false"""		1914552	0					
ANR	1914687	PrimaryExpression	0		1914552	1					
ANR	1914688	OrExpression	"stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0 || strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"		1914552	1		||			
ANR	1914689	EqualityExpression	"stricmp ( ( char * ) data -> children -> content , ""f"" ) == 0"		1914552	0		==			
ANR	1914690	CallExpression	"stricmp ( ( char * ) data -> children -> content , ""f"" )"		1914552	0					
ANR	1914691	Callee	stricmp		1914552	0					
ANR	1914692	Identifier	stricmp		1914552	0					
ANR	1914693	ArgumentList	( char * ) data -> children -> content		1914552	1					
ANR	1914694	Argument	( char * ) data -> children -> content		1914552	0					
ANR	1914695	CastExpression	( char * ) data -> children -> content		1914552	0					
ANR	1914696	CastTarget	char *		1914552	0					
ANR	1914697	PtrMemberAccess	data -> children -> content		1914552	1					
ANR	1914698	PtrMemberAccess	data -> children		1914552	0					
ANR	1914699	Identifier	data		1914552	0					
ANR	1914700	Identifier	children		1914552	1					
ANR	1914701	Identifier	content		1914552	1					
ANR	1914702	Argument	"""f"""		1914552	1					
ANR	1914703	PrimaryExpression	"""f"""		1914552	0					
ANR	1914704	PrimaryExpression	0		1914552	1					
ANR	1914705	EqualityExpression	"strcmp ( ( char * ) data -> children -> content , ""0"" ) == 0"		1914552	1		==			
ANR	1914706	CallExpression	"strcmp ( ( char * ) data -> children -> content , ""0"" )"		1914552	0					
ANR	1914707	Callee	strcmp		1914552	0					
ANR	1914708	Identifier	strcmp		1914552	0					
ANR	1914709	ArgumentList	( char * ) data -> children -> content		1914552	1					
ANR	1914710	Argument	( char * ) data -> children -> content		1914552	0					
ANR	1914711	CastExpression	( char * ) data -> children -> content		1914552	0					
ANR	1914712	CastTarget	char *		1914552	0					
ANR	1914713	PtrMemberAccess	data -> children -> content		1914552	1					
ANR	1914714	PtrMemberAccess	data -> children		1914552	0					
ANR	1914715	Identifier	data		1914552	0					
ANR	1914716	Identifier	children		1914552	1					
ANR	1914717	Identifier	content		1914552	1					
ANR	1914718	Argument	"""0"""		1914552	1					
ANR	1914719	PrimaryExpression	"""0"""		1914552	0					
ANR	1914720	PrimaryExpression	0		1914552	1					
ANR	1914721	CompoundStatement		14:54:583:583	1914552	1					
ANR	1914722	ExpressionStatement	ZVAL_FALSE ( ret )	1112:4:38194:38209	1914552	0	True				
ANR	1914723	CallExpression	ZVAL_FALSE ( ret )		1914552	0					
ANR	1914724	Callee	ZVAL_FALSE		1914552	0					
ANR	1914725	Identifier	ZVAL_FALSE		1914552	0					
ANR	1914726	ArgumentList	ret		1914552	1					
ANR	1914727	Argument	ret		1914552	0					
ANR	1914728	Identifier	ret		1914552	0					
ANR	1914729	ElseStatement	else		1914552	0					
ANR	1914730	CompoundStatement		16:10:616:616	1914552	0					
ANR	1914731	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"	1114:4:38227:38275	1914552	0	True				
ANR	1914732	CallExpression	"ZVAL_STRING ( ret , ( char * ) data -> children -> content )"		1914552	0					
ANR	1914733	Callee	ZVAL_STRING		1914552	0					
ANR	1914734	Identifier	ZVAL_STRING		1914552	0					
ANR	1914735	ArgumentList	ret		1914552	1					
ANR	1914736	Argument	ret		1914552	0					
ANR	1914737	Identifier	ret		1914552	0					
ANR	1914738	Argument	( char * ) data -> children -> content		1914552	1					
ANR	1914739	CastExpression	( char * ) data -> children -> content		1914552	0					
ANR	1914740	CastTarget	char *		1914552	0					
ANR	1914741	PtrMemberAccess	data -> children -> content		1914552	1					
ANR	1914742	PtrMemberAccess	data -> children		1914552	0					
ANR	1914743	Identifier	data		1914552	0					
ANR	1914744	Identifier	children		1914552	1					
ANR	1914745	Identifier	content		1914552	1					
ANR	1914746	ExpressionStatement	convert_to_boolean ( ret )	1115:4:38281:38304	1914552	1	True				
ANR	1914747	CallExpression	convert_to_boolean ( ret )		1914552	0					
ANR	1914748	Callee	convert_to_boolean		1914552	0					
ANR	1914749	Identifier	convert_to_boolean		1914552	0					
ANR	1914750	ArgumentList	ret		1914552	1					
ANR	1914751	Argument	ret		1914552	0					
ANR	1914752	Identifier	ret		1914552	0					
ANR	1914753	ElseStatement	else		1914552	0					
ANR	1914754	CompoundStatement		20:9:715:715	1914552	0					
ANR	1914755	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	1118:3:38325:38386	1914552	0	True				
ANR	1914756	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1914552	0					
ANR	1914757	Callee	soap_error0		1914552	0					
ANR	1914758	Identifier	soap_error0		1914552	0					
ANR	1914759	ArgumentList	E_ERROR		1914552	1					
ANR	1914760	Argument	E_ERROR		1914552	0					
ANR	1914761	Identifier	E_ERROR		1914552	0					
ANR	1914762	Argument	"""Encoding: Violation of encoding rules"""		1914552	1					
ANR	1914763	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1914552	0					
ANR	1914764	ElseStatement	else		1914552	0					
ANR	1914765	CompoundStatement		23:8:795:795	1914552	0					
ANR	1914766	ExpressionStatement	ZVAL_NULL ( ret )	1121:2:38404:38418	1914552	0	True				
ANR	1914767	CallExpression	ZVAL_NULL ( ret )		1914552	0					
ANR	1914768	Callee	ZVAL_NULL		1914552	0					
ANR	1914769	Identifier	ZVAL_NULL		1914552	0					
ANR	1914770	ArgumentList	ret		1914552	1					
ANR	1914771	Argument	ret		1914552	0					
ANR	1914772	Identifier	ret		1914552	0					
ANR	1914773	ReturnStatement	return ret ;	1123:1:38424:38434	1914552	3	True				
ANR	1914774	Identifier	ret		1914552	0					
ANR	1914775	ReturnType	static zval *		1914552	1					
ANR	1914776	Identifier	to_zval_bool		1914552	2					
ANR	1914777	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1914552	3					
ANR	1914778	Parameter	zval * ret	1097:26:37556:37564	1914552	0	True				
ANR	1914779	ParameterType	zval *		1914552	0					
ANR	1914780	Identifier	ret		1914552	1					
ANR	1914781	Parameter	encodeTypePtr type	1097:37:37567:37584	1914552	1	True				
ANR	1914782	ParameterType	encodeTypePtr		1914552	0					
ANR	1914783	Identifier	type		1914552	1					
ANR	1914784	Parameter	xmlNodePtr data	1097:57:37587:37601	1914552	2	True				
ANR	1914785	ParameterType	xmlNodePtr		1914552	0					
ANR	1914786	Identifier	data		1914552	1					
ANR	1914787	CFGEntryNode	ENTRY		1914552		True				
ANR	1914788	CFGExitNode	EXIT		1914552		True				
ANR	1914789	Symbol	ret		1914552						
ANR	1914790	Symbol	* * data		1914552						
ANR	1914791	Symbol	strcmp		1914552						
ANR	1914792	Symbol	data -> children -> next		1914552						
ANR	1914793	Symbol	NULL		1914552						
ANR	1914794	Symbol	data		1914552						
ANR	1914795	Symbol	type		1914552						
ANR	1914796	Symbol	XML_TEXT_NODE		1914552						
ANR	1914797	Symbol	E_ERROR		1914552						
ANR	1914798	Symbol	data -> children		1914552						
ANR	1914799	Symbol	data -> children -> content		1914552						
ANR	1914800	Symbol	stricmp		1914552						
ANR	1914801	Symbol	* data -> children		1914552						
ANR	1914802	Symbol	* data		1914552						
ANR	1914803	Symbol	data -> children -> type		1914552						
ANR	1914804	Function	to_xml_bool	1126:0:38439:38864							
ANR	1914805	FunctionDef	"to_xml_bool (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1914804	0					
ANR	1914806	CompoundStatement		1127:0:38531:38864	1914804	0					
ANR	1914807	IdentifierDeclStatement	xmlNodePtr ret ;	1128:1:38534:38548	1914804	0	True				
ANR	1914808	IdentifierDecl	ret		1914804	0					
ANR	1914809	IdentifierDeclType	xmlNodePtr		1914804	0					
ANR	1914810	Identifier	ret		1914804	1					
ANR	1914811	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1130:1:38552:38593	1914804	1	True				
ANR	1914812	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914804	0		=			
ANR	1914813	Identifier	ret		1914804	0					
ANR	1914814	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914804	1					
ANR	1914815	Callee	xmlNewNode		1914804	0					
ANR	1914816	Identifier	xmlNewNode		1914804	0					
ANR	1914817	ArgumentList	NULL		1914804	1					
ANR	1914818	Argument	NULL		1914804	0					
ANR	1914819	Identifier	NULL		1914804	0					
ANR	1914820	Argument	"BAD_CAST ( ""BOGUS"" )"		1914804	1					
ANR	1914821	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1914804	0					
ANR	1914822	Callee	BAD_CAST		1914804	0					
ANR	1914823	Identifier	BAD_CAST		1914804	0					
ANR	1914824	ArgumentList	"""BOGUS"""		1914804	1					
ANR	1914825	Argument	"""BOGUS"""		1914804	0					
ANR	1914826	PrimaryExpression	"""BOGUS"""		1914804	0					
ANR	1914827	ExpressionStatement	"xmlAddChild ( parent , ret )"	1131:1:38596:38620	1914804	2	True				
ANR	1914828	CallExpression	"xmlAddChild ( parent , ret )"		1914804	0					
ANR	1914829	Callee	xmlAddChild		1914804	0					
ANR	1914830	Identifier	xmlAddChild		1914804	0					
ANR	1914831	ArgumentList	parent		1914804	1					
ANR	1914832	Argument	parent		1914804	0					
ANR	1914833	Identifier	parent		1914804	0					
ANR	1914834	Argument	ret		1914804	1					
ANR	1914835	Identifier	ret		1914804	0					
ANR	1914836	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	1132:1:38623:38655	1914804	3	True				
ANR	1914837	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1914804	0					
ANR	1914838	Callee	FIND_ZVAL_NULL		1914804	0					
ANR	1914839	Identifier	FIND_ZVAL_NULL		1914804	0					
ANR	1914840	ArgumentList	data		1914804	1					
ANR	1914841	Argument	data		1914804	0					
ANR	1914842	Identifier	data		1914804	0					
ANR	1914843	Argument	ret		1914804	1					
ANR	1914844	Identifier	ret		1914804	0					
ANR	1914845	Argument	style		1914804	2					
ANR	1914846	Identifier	style		1914804	0					
ANR	1914847	IfStatement	if ( zend_is_true ( data ) )		1914804	4					
ANR	1914848	Condition	zend_is_true ( data )	1134:5:38663:38680	1914804	0	True				
ANR	1914849	CallExpression	zend_is_true ( data )		1914804	0					
ANR	1914850	Callee	zend_is_true		1914804	0					
ANR	1914851	Identifier	zend_is_true		1914804	0					
ANR	1914852	ArgumentList	data		1914804	1					
ANR	1914853	Argument	data		1914804	0					
ANR	1914854	Identifier	data		1914804	0					
ANR	1914855	CompoundStatement		8:25:151:151	1914804	1					
ANR	1914856	ExpressionStatement	"xmlNodeSetContent ( ret , BAD_CAST ( ""true"" ) )"	1135:2:38687:38727	1914804	0	True				
ANR	1914857	CallExpression	"xmlNodeSetContent ( ret , BAD_CAST ( ""true"" ) )"		1914804	0					
ANR	1914858	Callee	xmlNodeSetContent		1914804	0					
ANR	1914859	Identifier	xmlNodeSetContent		1914804	0					
ANR	1914860	ArgumentList	ret		1914804	1					
ANR	1914861	Argument	ret		1914804	0					
ANR	1914862	Identifier	ret		1914804	0					
ANR	1914863	Argument	"BAD_CAST ( ""true"" )"		1914804	1					
ANR	1914864	CallExpression	"BAD_CAST ( ""true"" )"		1914804	0					
ANR	1914865	Callee	BAD_CAST		1914804	0					
ANR	1914866	Identifier	BAD_CAST		1914804	0					
ANR	1914867	ArgumentList	"""true"""		1914804	1					
ANR	1914868	Argument	"""true"""		1914804	0					
ANR	1914869	PrimaryExpression	"""true"""		1914804	0					
ANR	1914870	ElseStatement	else		1914804	0					
ANR	1914871	CompoundStatement		10:8:205:205	1914804	0					
ANR	1914872	ExpressionStatement	"xmlNodeSetContent ( ret , BAD_CAST ( ""false"" ) )"	1137:2:38741:38782	1914804	0	True				
ANR	1914873	CallExpression	"xmlNodeSetContent ( ret , BAD_CAST ( ""false"" ) )"		1914804	0					
ANR	1914874	Callee	xmlNodeSetContent		1914804	0					
ANR	1914875	Identifier	xmlNodeSetContent		1914804	0					
ANR	1914876	ArgumentList	ret		1914804	1					
ANR	1914877	Argument	ret		1914804	0					
ANR	1914878	Identifier	ret		1914804	0					
ANR	1914879	Argument	"BAD_CAST ( ""false"" )"		1914804	1					
ANR	1914880	CallExpression	"BAD_CAST ( ""false"" )"		1914804	0					
ANR	1914881	Callee	BAD_CAST		1914804	0					
ANR	1914882	Identifier	BAD_CAST		1914804	0					
ANR	1914883	ArgumentList	"""false"""		1914804	1					
ANR	1914884	Argument	"""false"""		1914804	0					
ANR	1914885	PrimaryExpression	"""false"""		1914804	0					
ANR	1914886	IfStatement	if ( style == SOAP_ENCODED )		1914804	5					
ANR	1914887	Condition	style == SOAP_ENCODED	1140:5:38793:38813	1914804	0	True				
ANR	1914888	EqualityExpression	style == SOAP_ENCODED		1914804	0		==			
ANR	1914889	Identifier	style		1914804	0					
ANR	1914890	Identifier	SOAP_ENCODED		1914804	1					
ANR	1914891	CompoundStatement		14:28:284:284	1914804	1					
ANR	1914892	ExpressionStatement	"set_ns_and_type ( ret , type )"	1141:2:38820:38846	1914804	0	True				
ANR	1914893	CallExpression	"set_ns_and_type ( ret , type )"		1914804	0					
ANR	1914894	Callee	set_ns_and_type		1914804	0					
ANR	1914895	Identifier	set_ns_and_type		1914804	0					
ANR	1914896	ArgumentList	ret		1914804	1					
ANR	1914897	Argument	ret		1914804	0					
ANR	1914898	Identifier	ret		1914804	0					
ANR	1914899	Argument	type		1914804	1					
ANR	1914900	Identifier	type		1914804	0					
ANR	1914901	ReturnStatement	return ret ;	1143:1:38852:38862	1914804	6	True				
ANR	1914902	Identifier	ret		1914804	0					
ANR	1914903	ReturnType	static xmlNodePtr		1914804	1					
ANR	1914904	Identifier	to_xml_bool		1914804	2					
ANR	1914905	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1914804	3					
ANR	1914906	Parameter	encodeTypePtr type	1126:30:38469:38486	1914804	0	True				
ANR	1914907	ParameterType	encodeTypePtr		1914804	0					
ANR	1914908	Identifier	type		1914804	1					
ANR	1914909	Parameter	zval * data	1126:50:38489:38498	1914804	1	True				
ANR	1914910	ParameterType	zval *		1914804	0					
ANR	1914911	Identifier	data		1914804	1					
ANR	1914912	Parameter	int style	1126:62:38501:38509	1914804	2	True				
ANR	1914913	ParameterType	int		1914804	0					
ANR	1914914	Identifier	style		1914804	1					
ANR	1914915	Parameter	xmlNodePtr parent	1126:73:38512:38528	1914804	3	True				
ANR	1914916	ParameterType	xmlNodePtr		1914804	0					
ANR	1914917	Identifier	parent		1914804	1					
ANR	1914918	CFGEntryNode	ENTRY		1914804		True				
ANR	1914919	CFGExitNode	EXIT		1914804		True				
ANR	1914920	Symbol	ret		1914804						
ANR	1914921	Symbol	parent		1914804						
ANR	1914922	Symbol	NULL		1914804						
ANR	1914923	Symbol	data		1914804						
ANR	1914924	Symbol	style		1914804						
ANR	1914925	Symbol	SOAP_ENCODED		1914804						
ANR	1914926	Symbol	xmlNewNode		1914804						
ANR	1914927	Symbol	type		1914804						
ANR	1914928	Symbol	zend_is_true		1914804						
ANR	1914929	Symbol	BAD_CAST		1914804						
ANR	1914930	Function	to_zval_null	1147:0:38892:38998							
ANR	1914931	FunctionDef	"to_zval_null (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1914930	0					
ANR	1914932	CompoundStatement		1148:0:38966:38998	1914930	0					
ANR	1914933	ExpressionStatement	ZVAL_NULL ( ret )	1149:1:38969:38983	1914930	0	True				
ANR	1914934	CallExpression	ZVAL_NULL ( ret )		1914930	0					
ANR	1914935	Callee	ZVAL_NULL		1914930	0					
ANR	1914936	Identifier	ZVAL_NULL		1914930	0					
ANR	1914937	ArgumentList	ret		1914930	1					
ANR	1914938	Argument	ret		1914930	0					
ANR	1914939	Identifier	ret		1914930	0					
ANR	1914940	ReturnStatement	return ret ;	1150:1:38986:38996	1914930	1	True				
ANR	1914941	Identifier	ret		1914930	0					
ANR	1914942	ReturnType	static zval *		1914930	1					
ANR	1914943	Identifier	to_zval_null		1914930	2					
ANR	1914944	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1914930	3					
ANR	1914945	Parameter	zval * ret	1147:26:38918:38926	1914930	0	True				
ANR	1914946	ParameterType	zval *		1914930	0					
ANR	1914947	Identifier	ret		1914930	1					
ANR	1914948	Parameter	encodeTypePtr type	1147:37:38929:38946	1914930	1	True				
ANR	1914949	ParameterType	encodeTypePtr		1914930	0					
ANR	1914950	Identifier	type		1914930	1					
ANR	1914951	Parameter	xmlNodePtr data	1147:57:38949:38963	1914930	2	True				
ANR	1914952	ParameterType	xmlNodePtr		1914930	0					
ANR	1914953	Identifier	data		1914930	1					
ANR	1914954	CFGEntryNode	ENTRY		1914930		True				
ANR	1914955	CFGExitNode	EXIT		1914930		True				
ANR	1914956	Symbol	ret		1914930						
ANR	1914957	Symbol	data		1914930						
ANR	1914958	Symbol	type		1914930						
ANR	1914959	Function	to_xml_null	1153:0:39001:39250							
ANR	1914960	FunctionDef	"to_xml_null (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1914959	0					
ANR	1914961	CompoundStatement		1154:0:39093:39250	1914959	0					
ANR	1914962	IdentifierDeclStatement	xmlNodePtr ret ;	1155:1:39096:39110	1914959	0	True				
ANR	1914963	IdentifierDecl	ret		1914959	0					
ANR	1914964	IdentifierDeclType	xmlNodePtr		1914959	0					
ANR	1914965	Identifier	ret		1914959	1					
ANR	1914966	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1157:1:39114:39155	1914959	1	True				
ANR	1914967	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914959	0		=			
ANR	1914968	Identifier	ret		1914959	0					
ANR	1914969	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1914959	1					
ANR	1914970	Callee	xmlNewNode		1914959	0					
ANR	1914971	Identifier	xmlNewNode		1914959	0					
ANR	1914972	ArgumentList	NULL		1914959	1					
ANR	1914973	Argument	NULL		1914959	0					
ANR	1914974	Identifier	NULL		1914959	0					
ANR	1914975	Argument	"BAD_CAST ( ""BOGUS"" )"		1914959	1					
ANR	1914976	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1914959	0					
ANR	1914977	Callee	BAD_CAST		1914959	0					
ANR	1914978	Identifier	BAD_CAST		1914959	0					
ANR	1914979	ArgumentList	"""BOGUS"""		1914959	1					
ANR	1914980	Argument	"""BOGUS"""		1914959	0					
ANR	1914981	PrimaryExpression	"""BOGUS"""		1914959	0					
ANR	1914982	ExpressionStatement	"xmlAddChild ( parent , ret )"	1158:1:39158:39182	1914959	2	True				
ANR	1914983	CallExpression	"xmlAddChild ( parent , ret )"		1914959	0					
ANR	1914984	Callee	xmlAddChild		1914959	0					
ANR	1914985	Identifier	xmlAddChild		1914959	0					
ANR	1914986	ArgumentList	parent		1914959	1					
ANR	1914987	Argument	parent		1914959	0					
ANR	1914988	Identifier	parent		1914959	0					
ANR	1914989	Argument	ret		1914959	1					
ANR	1914990	Identifier	ret		1914959	0					
ANR	1914991	IfStatement	if ( style == SOAP_ENCODED )		1914959	3					
ANR	1914992	Condition	style == SOAP_ENCODED	1159:5:39189:39209	1914959	0	True				
ANR	1914993	EqualityExpression	style == SOAP_ENCODED		1914959	0		==			
ANR	1914994	Identifier	style		1914959	0					
ANR	1914995	Identifier	SOAP_ENCODED		1914959	1					
ANR	1914996	CompoundStatement		6:28:118:118	1914959	1					
ANR	1914997	ExpressionStatement	set_xsi_nil ( ret )	1160:2:39216:39232	1914959	0	True				
ANR	1914998	CallExpression	set_xsi_nil ( ret )		1914959	0					
ANR	1914999	Callee	set_xsi_nil		1914959	0					
ANR	1915000	Identifier	set_xsi_nil		1914959	0					
ANR	1915001	ArgumentList	ret		1914959	1					
ANR	1915002	Argument	ret		1914959	0					
ANR	1915003	Identifier	ret		1914959	0					
ANR	1915004	ReturnStatement	return ret ;	1162:1:39238:39248	1914959	4	True				
ANR	1915005	Identifier	ret		1914959	0					
ANR	1915006	ReturnType	static xmlNodePtr		1914959	1					
ANR	1915007	Identifier	to_xml_null		1914959	2					
ANR	1915008	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1914959	3					
ANR	1915009	Parameter	encodeTypePtr type	1153:30:39031:39048	1914959	0	True				
ANR	1915010	ParameterType	encodeTypePtr		1914959	0					
ANR	1915011	Identifier	type		1914959	1					
ANR	1915012	Parameter	zval * data	1153:50:39051:39060	1914959	1	True				
ANR	1915013	ParameterType	zval *		1914959	0					
ANR	1915014	Identifier	data		1914959	1					
ANR	1915015	Parameter	int style	1153:62:39063:39071	1914959	2	True				
ANR	1915016	ParameterType	int		1914959	0					
ANR	1915017	Identifier	style		1914959	1					
ANR	1915018	Parameter	xmlNodePtr parent	1153:73:39074:39090	1914959	3	True				
ANR	1915019	ParameterType	xmlNodePtr		1914959	0					
ANR	1915020	Identifier	parent		1914959	1					
ANR	1915021	CFGEntryNode	ENTRY		1914959		True				
ANR	1915022	CFGExitNode	EXIT		1914959		True				
ANR	1915023	Symbol	ret		1914959						
ANR	1915024	Symbol	parent		1914959						
ANR	1915025	Symbol	NULL		1914959						
ANR	1915026	Symbol	data		1914959						
ANR	1915027	Symbol	style		1914959						
ANR	1915028	Symbol	SOAP_ENCODED		1914959						
ANR	1915029	Symbol	xmlNewNode		1914959						
ANR	1915030	Symbol	type		1914959						
ANR	1915031	Symbol	BAD_CAST		1914959						
ANR	1915032	Function	set_zval_property	1165:0:39253:39515							
ANR	1915033	FunctionDef	"set_zval_property (zval * object , char * name , zval * val)"		1915032	0					
ANR	1915034	CompoundStatement		1166:0:39320:39515	1915032	0					
ANR	1915035	IdentifierDeclStatement	zend_class_entry * old_scope ;	1167:1:39323:39350	1915032	0	True				
ANR	1915036	IdentifierDecl	* old_scope		1915032	0					
ANR	1915037	IdentifierDeclType	zend_class_entry *		1915032	0					
ANR	1915038	Identifier	old_scope		1915032	1					
ANR	1915039	ExpressionStatement	old_scope = EG ( scope )	1169:1:39354:39375	1915032	1	True				
ANR	1915040	AssignmentExpression	old_scope = EG ( scope )		1915032	0		=			
ANR	1915041	Identifier	old_scope		1915032	0					
ANR	1915042	CallExpression	EG ( scope )		1915032	1					
ANR	1915043	Callee	EG		1915032	0					
ANR	1915044	Identifier	EG		1915032	0					
ANR	1915045	ArgumentList	scope		1915032	1					
ANR	1915046	Argument	scope		1915032	0					
ANR	1915047	Identifier	scope		1915032	0					
ANR	1915048	ExpressionStatement	EG ( scope ) = Z_OBJCE_P ( object )	1170:1:39378:39407	1915032	2	True				
ANR	1915049	AssignmentExpression	EG ( scope ) = Z_OBJCE_P ( object )		1915032	0		=			
ANR	1915050	CallExpression	EG ( scope )		1915032	0					
ANR	1915051	Callee	EG		1915032	0					
ANR	1915052	Identifier	EG		1915032	0					
ANR	1915053	ArgumentList	scope		1915032	1					
ANR	1915054	Argument	scope		1915032	0					
ANR	1915055	Identifier	scope		1915032	0					
ANR	1915056	CallExpression	Z_OBJCE_P ( object )		1915032	1					
ANR	1915057	Callee	Z_OBJCE_P		1915032	0					
ANR	1915058	Identifier	Z_OBJCE_P		1915032	0					
ANR	1915059	ArgumentList	object		1915032	1					
ANR	1915060	Argument	object		1915032	0					
ANR	1915061	Identifier	object		1915032	0					
ANR	1915062	ExpressionStatement	"add_property_zval ( object , name , val )"	1171:1:39410:39446	1915032	3	True				
ANR	1915063	CallExpression	"add_property_zval ( object , name , val )"		1915032	0					
ANR	1915064	Callee	add_property_zval		1915032	0					
ANR	1915065	Identifier	add_property_zval		1915032	0					
ANR	1915066	ArgumentList	object		1915032	1					
ANR	1915067	Argument	object		1915032	0					
ANR	1915068	Identifier	object		1915032	0					
ANR	1915069	Argument	name		1915032	1					
ANR	1915070	Identifier	name		1915032	0					
ANR	1915071	Argument	val		1915032	2					
ANR	1915072	Identifier	val		1915032	0					
ANR	1915073	IfStatement	if ( Z_REFCOUNTED_P ( val ) )		1915032	4					
ANR	1915074	Condition	Z_REFCOUNTED_P ( val )	1172:5:39453:39471	1915032	0	True				
ANR	1915075	CallExpression	Z_REFCOUNTED_P ( val )		1915032	0					
ANR	1915076	Callee	Z_REFCOUNTED_P		1915032	0					
ANR	1915077	Identifier	Z_REFCOUNTED_P		1915032	0					
ANR	1915078	ArgumentList	val		1915032	1					
ANR	1915079	Argument	val		1915032	0					
ANR	1915080	Identifier	val		1915032	0					
ANR	1915081	ExpressionStatement	Z_DELREF_P ( val )	1172:26:39474:39489	1915032	1	True				
ANR	1915082	CallExpression	Z_DELREF_P ( val )		1915032	0					
ANR	1915083	Callee	Z_DELREF_P		1915032	0					
ANR	1915084	Identifier	Z_DELREF_P		1915032	0					
ANR	1915085	ArgumentList	val		1915032	1					
ANR	1915086	Argument	val		1915032	0					
ANR	1915087	Identifier	val		1915032	0					
ANR	1915088	ExpressionStatement	EG ( scope ) = old_scope	1173:1:39492:39513	1915032	5	True				
ANR	1915089	AssignmentExpression	EG ( scope ) = old_scope		1915032	0		=			
ANR	1915090	CallExpression	EG ( scope )		1915032	0					
ANR	1915091	Callee	EG		1915032	0					
ANR	1915092	Identifier	EG		1915032	0					
ANR	1915093	ArgumentList	scope		1915032	1					
ANR	1915094	Argument	scope		1915032	0					
ANR	1915095	Identifier	scope		1915032	0					
ANR	1915096	Identifier	old_scope		1915032	1					
ANR	1915097	ReturnType	static void		1915032	1					
ANR	1915098	Identifier	set_zval_property		1915032	2					
ANR	1915099	ParameterList	"zval * object , char * name , zval * val"		1915032	3					
ANR	1915100	Parameter	zval * object	1165:30:39283:39294	1915032	0	True				
ANR	1915101	ParameterType	zval *		1915032	0					
ANR	1915102	Identifier	object		1915032	1					
ANR	1915103	Parameter	char * name	1165:44:39297:39306	1915032	1	True				
ANR	1915104	ParameterType	char *		1915032	0					
ANR	1915105	Identifier	name		1915032	1					
ANR	1915106	Parameter	zval * val	1165:56:39309:39317	1915032	2	True				
ANR	1915107	ParameterType	zval *		1915032	0					
ANR	1915108	Identifier	val		1915032	1					
ANR	1915109	CFGEntryNode	ENTRY		1915032		True				
ANR	1915110	CFGExitNode	EXIT		1915032		True				
ANR	1915111	Symbol	val		1915032						
ANR	1915112	Symbol	EG		1915032						
ANR	1915113	Symbol	old_scope		1915032						
ANR	1915114	Symbol	scope		1915032						
ANR	1915115	Symbol	name		1915032						
ANR	1915116	Symbol	Z_OBJCE_P		1915032						
ANR	1915117	Symbol	Z_REFCOUNTED_P		1915032						
ANR	1915118	Symbol	object		1915032						
ANR	1915119	Function	get_zval_property	1176:0:39518:40566							
ANR	1915120	FunctionDef	"get_zval_property (zval * object , char * name , zval * rv)"		1915119	0					
ANR	1915121	CompoundStatement		1177:0:39585:40566	1915119	0					
ANR	1915122	IfStatement	if ( Z_TYPE_P ( object ) == IS_OBJECT )		1915119	0					
ANR	1915123	Condition	Z_TYPE_P ( object ) == IS_OBJECT	1178:5:39592:39620	1915119	0	True				
ANR	1915124	EqualityExpression	Z_TYPE_P ( object ) == IS_OBJECT		1915119	0		==			
ANR	1915125	CallExpression	Z_TYPE_P ( object )		1915119	0					
ANR	1915126	Callee	Z_TYPE_P		1915119	0					
ANR	1915127	Identifier	Z_TYPE_P		1915119	0					
ANR	1915128	ArgumentList	object		1915119	1					
ANR	1915129	Argument	object		1915119	0					
ANR	1915130	Identifier	object		1915119	0					
ANR	1915131	Identifier	IS_OBJECT		1915119	1					
ANR	1915132	CompoundStatement		5:2:70:97	1915119	1					
ANR	1915133	IdentifierDeclStatement	zval member ;	1179:2:39627:39638	1915119	0	True				
ANR	1915134	IdentifierDecl	member		1915119	0					
ANR	1915135	IdentifierDeclType	zval		1915119	0					
ANR	1915136	Identifier	member		1915119	1					
ANR	1915137	IdentifierDeclStatement	zval * data ;	1180:2:39642:39652	1915119	1	True				
ANR	1915138	IdentifierDecl	* data		1915119	0					
ANR	1915139	IdentifierDeclType	zval *		1915119	0					
ANR	1915140	Identifier	data		1915119	1					
ANR	1915141	IdentifierDeclStatement	zend_class_entry * old_scope ;	1181:2:39656:39683	1915119	2	True				
ANR	1915142	IdentifierDecl	* old_scope		1915119	0					
ANR	1915143	IdentifierDeclType	zend_class_entry *		1915119	0					
ANR	1915144	Identifier	old_scope		1915119	1					
ANR	1915145	ExpressionStatement	"ZVAL_STRING ( & member , name )"	1183:2:39688:39714	1915119	3	True				
ANR	1915146	CallExpression	"ZVAL_STRING ( & member , name )"		1915119	0					
ANR	1915147	Callee	ZVAL_STRING		1915119	0					
ANR	1915148	Identifier	ZVAL_STRING		1915119	0					
ANR	1915149	ArgumentList	& member		1915119	1					
ANR	1915150	Argument	& member		1915119	0					
ANR	1915151	UnaryOperationExpression	& member		1915119	0					
ANR	1915152	UnaryOperator	&		1915119	0					
ANR	1915153	Identifier	member		1915119	1					
ANR	1915154	Argument	name		1915119	1					
ANR	1915155	Identifier	name		1915119	0					
ANR	1915156	ExpressionStatement	old_scope = EG ( scope )	1184:2:39718:39739	1915119	4	True				
ANR	1915157	AssignmentExpression	old_scope = EG ( scope )		1915119	0		=			
ANR	1915158	Identifier	old_scope		1915119	0					
ANR	1915159	CallExpression	EG ( scope )		1915119	1					
ANR	1915160	Callee	EG		1915119	0					
ANR	1915161	Identifier	EG		1915119	0					
ANR	1915162	ArgumentList	scope		1915119	1					
ANR	1915163	Argument	scope		1915119	0					
ANR	1915164	Identifier	scope		1915119	0					
ANR	1915165	ExpressionStatement	EG ( scope ) = Z_OBJCE_P ( object )	1185:2:39743:39772	1915119	5	True				
ANR	1915166	AssignmentExpression	EG ( scope ) = Z_OBJCE_P ( object )		1915119	0		=			
ANR	1915167	CallExpression	EG ( scope )		1915119	0					
ANR	1915168	Callee	EG		1915119	0					
ANR	1915169	Identifier	EG		1915119	0					
ANR	1915170	ArgumentList	scope		1915119	1					
ANR	1915171	Argument	scope		1915119	0					
ANR	1915172	Identifier	scope		1915119	0					
ANR	1915173	CallExpression	Z_OBJCE_P ( object )		1915119	1					
ANR	1915174	Callee	Z_OBJCE_P		1915119	0					
ANR	1915175	Identifier	Z_OBJCE_P		1915119	0					
ANR	1915176	ArgumentList	object		1915119	1					
ANR	1915177	Argument	object		1915119	0					
ANR	1915178	Identifier	object		1915119	0					
ANR	1915179	ExpressionStatement	"data = Z_OBJ_HT_P ( object ) -> read_property ( object , & member , BP_VAR_IS , NULL , rv )"	1186:2:39776:39854	1915119	6	True				
ANR	1915180	AssignmentExpression	"data = Z_OBJ_HT_P ( object ) -> read_property ( object , & member , BP_VAR_IS , NULL , rv )"		1915119	0		=			
ANR	1915181	Identifier	data		1915119	0					
ANR	1915182	CallExpression	"Z_OBJ_HT_P ( object ) -> read_property ( object , & member , BP_VAR_IS , NULL , rv )"		1915119	1					
ANR	1915183	Callee	Z_OBJ_HT_P ( object ) -> read_property		1915119	0					
ANR	1915184	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> read_property		1915119	0					
ANR	1915185	CallExpression	Z_OBJ_HT_P ( object )		1915119	0					
ANR	1915186	Callee	Z_OBJ_HT_P		1915119	0					
ANR	1915187	Identifier	Z_OBJ_HT_P		1915119	0					
ANR	1915188	ArgumentList	object		1915119	1					
ANR	1915189	Argument	object		1915119	0					
ANR	1915190	Identifier	object		1915119	0					
ANR	1915191	Identifier	read_property		1915119	1					
ANR	1915192	ArgumentList	object		1915119	1					
ANR	1915193	Argument	object		1915119	0					
ANR	1915194	Identifier	object		1915119	0					
ANR	1915195	Argument	& member		1915119	1					
ANR	1915196	UnaryOperationExpression	& member		1915119	0					
ANR	1915197	UnaryOperator	&		1915119	0					
ANR	1915198	Identifier	member		1915119	1					
ANR	1915199	Argument	BP_VAR_IS		1915119	2					
ANR	1915200	Identifier	BP_VAR_IS		1915119	0					
ANR	1915201	Argument	NULL		1915119	3					
ANR	1915202	Identifier	NULL		1915119	0					
ANR	1915203	Argument	rv		1915119	4					
ANR	1915204	Identifier	rv		1915119	0					
ANR	1915205	IfStatement	if ( data == & EG ( uninitialized_zval ) )		1915119	7					
ANR	1915206	Condition	data == & EG ( uninitialized_zval )	1187:6:39862:39892	1915119	0	True				
ANR	1915207	EqualityExpression	data == & EG ( uninitialized_zval )		1915119	0		==			
ANR	1915208	Identifier	data		1915119	0					
ANR	1915209	UnaryOperationExpression	& EG ( uninitialized_zval )		1915119	1					
ANR	1915210	UnaryOperator	&		1915119	0					
ANR	1915211	CallExpression	EG ( uninitialized_zval )		1915119	1					
ANR	1915212	Callee	EG		1915119	0					
ANR	1915213	Identifier	EG		1915119	0					
ANR	1915214	ArgumentList	uninitialized_zval		1915119	1					
ANR	1915215	Argument	uninitialized_zval		1915119	0					
ANR	1915216	Identifier	uninitialized_zval		1915119	0					
ANR	1915217	CompoundStatement		13:3:343:376	1915119	1					
ANR	1915218	IdentifierDeclStatement	zend_property_info * property_info ;	1189:3:39929:39962	1915119	0	True				
ANR	1915219	IdentifierDecl	* property_info		1915119	0					
ANR	1915220	IdentifierDeclType	zend_property_info *		1915119	0					
ANR	1915221	Identifier	property_info		1915119	1					
ANR	1915222	ExpressionStatement	"property_info = zend_get_property_info ( Z_OBJCE_P ( object ) , Z_STR ( member ) , 1 )"	1191:3:39968:40043	1915119	1	True				
ANR	1915223	AssignmentExpression	"property_info = zend_get_property_info ( Z_OBJCE_P ( object ) , Z_STR ( member ) , 1 )"		1915119	0		=			
ANR	1915224	Identifier	property_info		1915119	0					
ANR	1915225	CallExpression	"zend_get_property_info ( Z_OBJCE_P ( object ) , Z_STR ( member ) , 1 )"		1915119	1					
ANR	1915226	Callee	zend_get_property_info		1915119	0					
ANR	1915227	Identifier	zend_get_property_info		1915119	0					
ANR	1915228	ArgumentList	Z_OBJCE_P ( object )		1915119	1					
ANR	1915229	Argument	Z_OBJCE_P ( object )		1915119	0					
ANR	1915230	CallExpression	Z_OBJCE_P ( object )		1915119	0					
ANR	1915231	Callee	Z_OBJCE_P		1915119	0					
ANR	1915232	Identifier	Z_OBJCE_P		1915119	0					
ANR	1915233	ArgumentList	object		1915119	1					
ANR	1915234	Argument	object		1915119	0					
ANR	1915235	Identifier	object		1915119	0					
ANR	1915236	Argument	Z_STR ( member )		1915119	1					
ANR	1915237	CallExpression	Z_STR ( member )		1915119	0					
ANR	1915238	Callee	Z_STR		1915119	0					
ANR	1915239	Identifier	Z_STR		1915119	0					
ANR	1915240	ArgumentList	member		1915119	1					
ANR	1915241	Argument	member		1915119	0					
ANR	1915242	Identifier	member		1915119	0					
ANR	1915243	Argument	1		1915119	2					
ANR	1915244	PrimaryExpression	1		1915119	0					
ANR	1915245	ExpressionStatement	EG ( scope ) = old_scope	1192:3:40048:40069	1915119	2	True				
ANR	1915246	AssignmentExpression	EG ( scope ) = old_scope		1915119	0		=			
ANR	1915247	CallExpression	EG ( scope )		1915119	0					
ANR	1915248	Callee	EG		1915119	0					
ANR	1915249	Identifier	EG		1915119	0					
ANR	1915250	ArgumentList	scope		1915119	1					
ANR	1915251	Argument	scope		1915119	0					
ANR	1915252	Identifier	scope		1915119	0					
ANR	1915253	Identifier	old_scope		1915119	1					
ANR	1915254	IfStatement	"if ( property_info != ZEND_WRONG_PROPERTY_INFO && property_info && zend_hash_exists ( Z_OBJPROP_P ( object ) , property_info -> name ) )"		1915119	3					
ANR	1915255	Condition	"property_info != ZEND_WRONG_PROPERTY_INFO && property_info && zend_hash_exists ( Z_OBJPROP_P ( object ) , property_info -> name )"	1193:7:40078:40204	1915119	0	True				
ANR	1915256	AndExpression	"property_info != ZEND_WRONG_PROPERTY_INFO && property_info && zend_hash_exists ( Z_OBJPROP_P ( object ) , property_info -> name )"		1915119	0		&&			
ANR	1915257	EqualityExpression	property_info != ZEND_WRONG_PROPERTY_INFO		1915119	0		!=			
ANR	1915258	Identifier	property_info		1915119	0					
ANR	1915259	Identifier	ZEND_WRONG_PROPERTY_INFO		1915119	1					
ANR	1915260	AndExpression	"property_info && zend_hash_exists ( Z_OBJPROP_P ( object ) , property_info -> name )"		1915119	1		&&			
ANR	1915261	Identifier	property_info		1915119	0					
ANR	1915262	CallExpression	"zend_hash_exists ( Z_OBJPROP_P ( object ) , property_info -> name )"		1915119	1					
ANR	1915263	Callee	zend_hash_exists		1915119	0					
ANR	1915264	Identifier	zend_hash_exists		1915119	0					
ANR	1915265	ArgumentList	Z_OBJPROP_P ( object )		1915119	1					
ANR	1915266	Argument	Z_OBJPROP_P ( object )		1915119	0					
ANR	1915267	CallExpression	Z_OBJPROP_P ( object )		1915119	0					
ANR	1915268	Callee	Z_OBJPROP_P		1915119	0					
ANR	1915269	Identifier	Z_OBJPROP_P		1915119	0					
ANR	1915270	ArgumentList	object		1915119	1					
ANR	1915271	Argument	object		1915119	0					
ANR	1915272	Identifier	object		1915119	0					
ANR	1915273	Argument	property_info -> name		1915119	1					
ANR	1915274	PtrMemberAccess	property_info -> name		1915119	0					
ANR	1915275	Identifier	property_info		1915119	0					
ANR	1915276	Identifier	name		1915119	1					
ANR	1915277	CompoundStatement		18:67:621:621	1915119	1					
ANR	1915278	ExpressionStatement	zval_ptr_dtor ( & member )	1195:4:40213:40235	1915119	0	True				
ANR	1915279	CallExpression	zval_ptr_dtor ( & member )		1915119	0					
ANR	1915280	Callee	zval_ptr_dtor		1915119	0					
ANR	1915281	Identifier	zval_ptr_dtor		1915119	0					
ANR	1915282	ArgumentList	& member		1915119	1					
ANR	1915283	Argument	& member		1915119	0					
ANR	1915284	UnaryOperationExpression	& member		1915119	0					
ANR	1915285	UnaryOperator	&		1915119	0					
ANR	1915286	Identifier	member		1915119	1					
ANR	1915287	ReturnStatement	return data ;	1196:4:40241:40252	1915119	1	True				
ANR	1915288	Identifier	data		1915119	0					
ANR	1915289	ExpressionStatement	zval_ptr_dtor ( & member )	1198:3:40262:40284	1915119	4	True				
ANR	1915290	CallExpression	zval_ptr_dtor ( & member )		1915119	0					
ANR	1915291	Callee	zval_ptr_dtor		1915119	0					
ANR	1915292	Identifier	zval_ptr_dtor		1915119	0					
ANR	1915293	ArgumentList	& member		1915119	1					
ANR	1915294	Argument	& member		1915119	0					
ANR	1915295	UnaryOperationExpression	& member		1915119	0					
ANR	1915296	UnaryOperator	&		1915119	0					
ANR	1915297	Identifier	member		1915119	1					
ANR	1915298	ReturnStatement	return NULL ;	1199:3:40289:40300	1915119	5	True				
ANR	1915299	Identifier	NULL		1915119	0					
ANR	1915300	ExpressionStatement	zval_ptr_dtor ( & member )	1201:2:40308:40330	1915119	8	True				
ANR	1915301	CallExpression	zval_ptr_dtor ( & member )		1915119	0					
ANR	1915302	Callee	zval_ptr_dtor		1915119	0					
ANR	1915303	Identifier	zval_ptr_dtor		1915119	0					
ANR	1915304	ArgumentList	& member		1915119	1					
ANR	1915305	Argument	& member		1915119	0					
ANR	1915306	UnaryOperationExpression	& member		1915119	0					
ANR	1915307	UnaryOperator	&		1915119	0					
ANR	1915308	Identifier	member		1915119	1					
ANR	1915309	ExpressionStatement	EG ( scope ) = old_scope	1202:2:40334:40355	1915119	9	True				
ANR	1915310	AssignmentExpression	EG ( scope ) = old_scope		1915119	0		=			
ANR	1915311	CallExpression	EG ( scope )		1915119	0					
ANR	1915312	Callee	EG		1915119	0					
ANR	1915313	Identifier	EG		1915119	0					
ANR	1915314	ArgumentList	scope		1915119	1					
ANR	1915315	Argument	scope		1915119	0					
ANR	1915316	Identifier	scope		1915119	0					
ANR	1915317	Identifier	old_scope		1915119	1					
ANR	1915318	ReturnStatement	return data ;	1203:2:40359:40370	1915119	10	True				
ANR	1915319	Identifier	data		1915119	0					
ANR	1915320	ElseStatement	else		1915119	0					
ANR	1915321	IfStatement	if ( Z_TYPE_P ( object ) == IS_ARRAY )		1915119	0					
ANR	1915322	Condition	Z_TYPE_P ( object ) == IS_ARRAY	1204:12:40384:40411	1915119	0	True				
ANR	1915323	EqualityExpression	Z_TYPE_P ( object ) == IS_ARRAY		1915119	0		==			
ANR	1915324	CallExpression	Z_TYPE_P ( object )		1915119	0					
ANR	1915325	Callee	Z_TYPE_P		1915119	0					
ANR	1915326	Identifier	Z_TYPE_P		1915119	0					
ANR	1915327	ArgumentList	object		1915119	1					
ANR	1915328	Argument	object		1915119	0					
ANR	1915329	Identifier	object		1915119	0					
ANR	1915330	Identifier	IS_ARRAY		1915119	1					
ANR	1915331	CompoundStatement		29:2:832:846	1915119	1					
ANR	1915332	IdentifierDeclStatement	zval * data_ptr ;	1205:2:40418:40432	1915119	0	True				
ANR	1915333	IdentifierDecl	* data_ptr		1915119	0					
ANR	1915334	IdentifierDeclType	zval *		1915119	0					
ANR	1915335	Identifier	data_ptr		1915119	1					
ANR	1915336	IfStatement	"if ( ( data_ptr = zend_hash_str_find ( Z_ARRVAL_P ( object ) , name , strlen ( name ) ) ) != NULL )"		1915119	1					
ANR	1915337	Condition	"( data_ptr = zend_hash_str_find ( Z_ARRVAL_P ( object ) , name , strlen ( name ) ) ) != NULL"	1207:6:40441:40519	1915119	0	True				
ANR	1915338	EqualityExpression	"( data_ptr = zend_hash_str_find ( Z_ARRVAL_P ( object ) , name , strlen ( name ) ) ) != NULL"		1915119	0		!=			
ANR	1915339	AssignmentExpression	"data_ptr = zend_hash_str_find ( Z_ARRVAL_P ( object ) , name , strlen ( name ) )"		1915119	0		=			
ANR	1915340	Identifier	data_ptr		1915119	0					
ANR	1915341	CallExpression	"zend_hash_str_find ( Z_ARRVAL_P ( object ) , name , strlen ( name ) )"		1915119	1					
ANR	1915342	Callee	zend_hash_str_find		1915119	0					
ANR	1915343	Identifier	zend_hash_str_find		1915119	0					
ANR	1915344	ArgumentList	Z_ARRVAL_P ( object )		1915119	1					
ANR	1915345	Argument	Z_ARRVAL_P ( object )		1915119	0					
ANR	1915346	CallExpression	Z_ARRVAL_P ( object )		1915119	0					
ANR	1915347	Callee	Z_ARRVAL_P		1915119	0					
ANR	1915348	Identifier	Z_ARRVAL_P		1915119	0					
ANR	1915349	ArgumentList	object		1915119	1					
ANR	1915350	Argument	object		1915119	0					
ANR	1915351	Identifier	object		1915119	0					
ANR	1915352	Argument	name		1915119	1					
ANR	1915353	Identifier	name		1915119	0					
ANR	1915354	Argument	strlen ( name )		1915119	2					
ANR	1915355	CallExpression	strlen ( name )		1915119	0					
ANR	1915356	Callee	strlen		1915119	0					
ANR	1915357	Identifier	strlen		1915119	0					
ANR	1915358	ArgumentList	name		1915119	1					
ANR	1915359	Argument	name		1915119	0					
ANR	1915360	Identifier	name		1915119	0					
ANR	1915361	Identifier	NULL		1915119	1					
ANR	1915362	CompoundStatement		31:87:936:936	1915119	1					
ANR	1915363	ReturnStatement	return data_ptr ;	1208:4:40528:40543	1915119	0	True				
ANR	1915364	Identifier	data_ptr		1915119	0					
ANR	1915365	ReturnStatement	return NULL ;	1211:1:40553:40564	1915119	1	True				
ANR	1915366	Identifier	NULL		1915119	0					
ANR	1915367	ReturnType	static zval *		1915119	1					
ANR	1915368	Identifier	get_zval_property		1915119	2					
ANR	1915369	ParameterList	"zval * object , char * name , zval * rv"		1915119	3					
ANR	1915370	Parameter	zval * object	1176:31:39549:39560	1915119	0	True				
ANR	1915371	ParameterType	zval *		1915119	0					
ANR	1915372	Identifier	object		1915119	1					
ANR	1915373	Parameter	char * name	1176:45:39563:39572	1915119	1	True				
ANR	1915374	ParameterType	char *		1915119	0					
ANR	1915375	Identifier	name		1915119	1					
ANR	1915376	Parameter	zval * rv	1176:57:39575:39582	1915119	2	True				
ANR	1915377	ParameterType	zval *		1915119	0					
ANR	1915378	Identifier	rv		1915119	1					
ANR	1915379	CFGEntryNode	ENTRY		1915119		True				
ANR	1915380	CFGExitNode	EXIT		1915119		True				
ANR	1915381	Symbol	rv		1915119						
ANR	1915382	Symbol	data		1915119						
ANR	1915383	Symbol	old_scope		1915119						
ANR	1915384	Symbol	zend_hash_exists		1915119						
ANR	1915385	Symbol	Z_STR		1915119						
ANR	1915386	Symbol	& EG		1915119						
ANR	1915387	Symbol	strlen		1915119						
ANR	1915388	Symbol	* property_info		1915119						
ANR	1915389	Symbol	zend_hash_str_find		1915119						
ANR	1915390	Symbol	IS_ARRAY		1915119						
ANR	1915391	Symbol	scope		1915119						
ANR	1915392	Symbol	member		1915119						
ANR	1915393	Symbol	Z_OBJCE_P		1915119						
ANR	1915394	Symbol	Z_ARRVAL_P		1915119						
ANR	1915395	Symbol	BP_VAR_IS		1915119						
ANR	1915396	Symbol	uninitialized_zval		1915119						
ANR	1915397	Symbol	property_info		1915119						
ANR	1915398	Symbol	& member		1915119						
ANR	1915399	Symbol	EG		1915119						
ANR	1915400	Symbol	Z_OBJ_HT_P ( object ) -> read_property		1915119						
ANR	1915401	Symbol	NULL		1915119						
ANR	1915402	Symbol	property_info -> name		1915119						
ANR	1915403	Symbol	Z_OBJPROP_P		1915119						
ANR	1915404	Symbol	Z_TYPE_P		1915119						
ANR	1915405	Symbol	* Z_OBJ_HT_P		1915119						
ANR	1915406	Symbol	ZEND_WRONG_PROPERTY_INFO		1915119						
ANR	1915407	Symbol	zend_get_property_info		1915119						
ANR	1915408	Symbol	name		1915119						
ANR	1915409	Symbol	Z_OBJ_HT_P		1915119						
ANR	1915410	Symbol	IS_OBJECT		1915119						
ANR	1915411	Symbol	data_ptr		1915119						
ANR	1915412	Symbol	object		1915119						
ANR	1915413	Function	unset_zval_property	1214:0:40569:41022							
ANR	1915414	FunctionDef	"unset_zval_property (zval * object , char * name)"		1915413	0					
ANR	1915415	CompoundStatement		1215:0:40627:41022	1915413	0					
ANR	1915416	IfStatement	if ( Z_TYPE_P ( object ) == IS_OBJECT )		1915413	0					
ANR	1915417	Condition	Z_TYPE_P ( object ) == IS_OBJECT	1216:5:40634:40662	1915413	0	True				
ANR	1915418	EqualityExpression	Z_TYPE_P ( object ) == IS_OBJECT		1915413	0		==			
ANR	1915419	CallExpression	Z_TYPE_P ( object )		1915413	0					
ANR	1915420	Callee	Z_TYPE_P		1915413	0					
ANR	1915421	Identifier	Z_TYPE_P		1915413	0					
ANR	1915422	ArgumentList	object		1915413	1					
ANR	1915423	Argument	object		1915413	0					
ANR	1915424	Identifier	object		1915413	0					
ANR	1915425	Identifier	IS_OBJECT		1915413	1					
ANR	1915426	CompoundStatement		4:2:56:83	1915413	1					
ANR	1915427	IdentifierDeclStatement	zval member ;	1217:2:40669:40680	1915413	0	True				
ANR	1915428	IdentifierDecl	member		1915413	0					
ANR	1915429	IdentifierDeclType	zval		1915413	0					
ANR	1915430	Identifier	member		1915413	1					
ANR	1915431	IdentifierDeclStatement	zend_class_entry * old_scope ;	1218:2:40684:40711	1915413	1	True				
ANR	1915432	IdentifierDecl	* old_scope		1915413	0					
ANR	1915433	IdentifierDeclType	zend_class_entry *		1915413	0					
ANR	1915434	Identifier	old_scope		1915413	1					
ANR	1915435	ExpressionStatement	"ZVAL_STRING ( & member , name )"	1220:2:40716:40742	1915413	2	True				
ANR	1915436	CallExpression	"ZVAL_STRING ( & member , name )"		1915413	0					
ANR	1915437	Callee	ZVAL_STRING		1915413	0					
ANR	1915438	Identifier	ZVAL_STRING		1915413	0					
ANR	1915439	ArgumentList	& member		1915413	1					
ANR	1915440	Argument	& member		1915413	0					
ANR	1915441	UnaryOperationExpression	& member		1915413	0					
ANR	1915442	UnaryOperator	&		1915413	0					
ANR	1915443	Identifier	member		1915413	1					
ANR	1915444	Argument	name		1915413	1					
ANR	1915445	Identifier	name		1915413	0					
ANR	1915446	ExpressionStatement	old_scope = EG ( scope )	1221:2:40746:40767	1915413	3	True				
ANR	1915447	AssignmentExpression	old_scope = EG ( scope )		1915413	0		=			
ANR	1915448	Identifier	old_scope		1915413	0					
ANR	1915449	CallExpression	EG ( scope )		1915413	1					
ANR	1915450	Callee	EG		1915413	0					
ANR	1915451	Identifier	EG		1915413	0					
ANR	1915452	ArgumentList	scope		1915413	1					
ANR	1915453	Argument	scope		1915413	0					
ANR	1915454	Identifier	scope		1915413	0					
ANR	1915455	ExpressionStatement	EG ( scope ) = Z_OBJCE_P ( object )	1222:2:40771:40800	1915413	4	True				
ANR	1915456	AssignmentExpression	EG ( scope ) = Z_OBJCE_P ( object )		1915413	0		=			
ANR	1915457	CallExpression	EG ( scope )		1915413	0					
ANR	1915458	Callee	EG		1915413	0					
ANR	1915459	Identifier	EG		1915413	0					
ANR	1915460	ArgumentList	scope		1915413	1					
ANR	1915461	Argument	scope		1915413	0					
ANR	1915462	Identifier	scope		1915413	0					
ANR	1915463	CallExpression	Z_OBJCE_P ( object )		1915413	1					
ANR	1915464	Callee	Z_OBJCE_P		1915413	0					
ANR	1915465	Identifier	Z_OBJCE_P		1915413	0					
ANR	1915466	ArgumentList	object		1915413	1					
ANR	1915467	Argument	object		1915413	0					
ANR	1915468	Identifier	object		1915413	0					
ANR	1915469	ExpressionStatement	"Z_OBJ_HT_P ( object ) -> unset_property ( object , & member , NULL )"	1223:2:40804:40861	1915413	5	True				
ANR	1915470	CallExpression	"Z_OBJ_HT_P ( object ) -> unset_property ( object , & member , NULL )"		1915413	0					
ANR	1915471	Callee	Z_OBJ_HT_P ( object ) -> unset_property		1915413	0					
ANR	1915472	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> unset_property		1915413	0					
ANR	1915473	CallExpression	Z_OBJ_HT_P ( object )		1915413	0					
ANR	1915474	Callee	Z_OBJ_HT_P		1915413	0					
ANR	1915475	Identifier	Z_OBJ_HT_P		1915413	0					
ANR	1915476	ArgumentList	object		1915413	1					
ANR	1915477	Argument	object		1915413	0					
ANR	1915478	Identifier	object		1915413	0					
ANR	1915479	Identifier	unset_property		1915413	1					
ANR	1915480	ArgumentList	object		1915413	1					
ANR	1915481	Argument	object		1915413	0					
ANR	1915482	Identifier	object		1915413	0					
ANR	1915483	Argument	& member		1915413	1					
ANR	1915484	UnaryOperationExpression	& member		1915413	0					
ANR	1915485	UnaryOperator	&		1915413	0					
ANR	1915486	Identifier	member		1915413	1					
ANR	1915487	Argument	NULL		1915413	2					
ANR	1915488	Identifier	NULL		1915413	0					
ANR	1915489	ExpressionStatement	EG ( scope ) = old_scope	1224:2:40865:40886	1915413	6	True				
ANR	1915490	AssignmentExpression	EG ( scope ) = old_scope		1915413	0		=			
ANR	1915491	CallExpression	EG ( scope )		1915413	0					
ANR	1915492	Callee	EG		1915413	0					
ANR	1915493	Identifier	EG		1915413	0					
ANR	1915494	ArgumentList	scope		1915413	1					
ANR	1915495	Argument	scope		1915413	0					
ANR	1915496	Identifier	scope		1915413	0					
ANR	1915497	Identifier	old_scope		1915413	1					
ANR	1915498	ExpressionStatement	zval_ptr_dtor ( & member )	1225:2:40890:40912	1915413	7	True				
ANR	1915499	CallExpression	zval_ptr_dtor ( & member )		1915413	0					
ANR	1915500	Callee	zval_ptr_dtor		1915413	0					
ANR	1915501	Identifier	zval_ptr_dtor		1915413	0					
ANR	1915502	ArgumentList	& member		1915413	1					
ANR	1915503	Argument	& member		1915413	0					
ANR	1915504	UnaryOperationExpression	& member		1915413	0					
ANR	1915505	UnaryOperator	&		1915413	0					
ANR	1915506	Identifier	member		1915413	1					
ANR	1915507	ElseStatement	else		1915413	0					
ANR	1915508	IfStatement	if ( Z_TYPE_P ( object ) == IS_ARRAY )		1915413	0					
ANR	1915509	Condition	Z_TYPE_P ( object ) == IS_ARRAY	1226:12:40926:40953	1915413	0	True				
ANR	1915510	EqualityExpression	Z_TYPE_P ( object ) == IS_ARRAY		1915413	0		==			
ANR	1915511	CallExpression	Z_TYPE_P ( object )		1915413	0					
ANR	1915512	Callee	Z_TYPE_P		1915413	0					
ANR	1915513	Identifier	Z_TYPE_P		1915413	0					
ANR	1915514	ArgumentList	object		1915413	1					
ANR	1915515	Argument	object		1915413	0					
ANR	1915516	Identifier	object		1915413	0					
ANR	1915517	Identifier	IS_ARRAY		1915413	1					
ANR	1915518	CompoundStatement		12:42:328:328	1915413	1					
ANR	1915519	ExpressionStatement	"zend_hash_str_del ( Z_ARRVAL_P ( object ) , name , strlen ( name ) )"	1227:2:40960:41017	1915413	0	True				
ANR	1915520	CallExpression	"zend_hash_str_del ( Z_ARRVAL_P ( object ) , name , strlen ( name ) )"		1915413	0					
ANR	1915521	Callee	zend_hash_str_del		1915413	0					
ANR	1915522	Identifier	zend_hash_str_del		1915413	0					
ANR	1915523	ArgumentList	Z_ARRVAL_P ( object )		1915413	1					
ANR	1915524	Argument	Z_ARRVAL_P ( object )		1915413	0					
ANR	1915525	CallExpression	Z_ARRVAL_P ( object )		1915413	0					
ANR	1915526	Callee	Z_ARRVAL_P		1915413	0					
ANR	1915527	Identifier	Z_ARRVAL_P		1915413	0					
ANR	1915528	ArgumentList	object		1915413	1					
ANR	1915529	Argument	object		1915413	0					
ANR	1915530	Identifier	object		1915413	0					
ANR	1915531	Argument	name		1915413	1					
ANR	1915532	Identifier	name		1915413	0					
ANR	1915533	Argument	strlen ( name )		1915413	2					
ANR	1915534	CallExpression	strlen ( name )		1915413	0					
ANR	1915535	Callee	strlen		1915413	0					
ANR	1915536	Identifier	strlen		1915413	0					
ANR	1915537	ArgumentList	name		1915413	1					
ANR	1915538	Argument	name		1915413	0					
ANR	1915539	Identifier	name		1915413	0					
ANR	1915540	ReturnType	static void		1915413	1					
ANR	1915541	Identifier	unset_zval_property		1915413	2					
ANR	1915542	ParameterList	"zval * object , char * name"		1915413	3					
ANR	1915543	Parameter	zval * object	1214:32:40601:40612	1915413	0	True				
ANR	1915544	ParameterType	zval *		1915413	0					
ANR	1915545	Identifier	object		1915413	1					
ANR	1915546	Parameter	char * name	1214:46:40615:40624	1915413	1	True				
ANR	1915547	ParameterType	char *		1915413	0					
ANR	1915548	Identifier	name		1915413	1					
ANR	1915549	CFGEntryNode	ENTRY		1915413		True				
ANR	1915550	CFGExitNode	EXIT		1915413		True				
ANR	1915551	Symbol	& member		1915413						
ANR	1915552	Symbol	EG		1915413						
ANR	1915553	Symbol	NULL		1915413						
ANR	1915554	Symbol	old_scope		1915413						
ANR	1915555	Symbol	Z_TYPE_P		1915413						
ANR	1915556	Symbol	strlen		1915413						
ANR	1915557	Symbol	IS_ARRAY		1915413						
ANR	1915558	Symbol	scope		1915413						
ANR	1915559	Symbol	name		1915413						
ANR	1915560	Symbol	member		1915413						
ANR	1915561	Symbol	Z_OBJCE_P		1915413						
ANR	1915562	Symbol	Z_OBJ_HT_P		1915413						
ANR	1915563	Symbol	IS_OBJECT		1915413						
ANR	1915564	Symbol	Z_ARRVAL_P		1915413						
ANR	1915565	Symbol	object		1915413						
ANR	1915566	Function	model_to_zval_any	1231:0:41025:42772							
ANR	1915567	FunctionDef	"model_to_zval_any (zval * ret , xmlNodePtr node)"		1915566	0					
ANR	1915568	CompoundStatement		1232:0:41083:42772	1915566	0					
ANR	1915569	IdentifierDeclStatement	"zval rv , arr , val ;"	1233:1:41086:41103	1915566	0	True				
ANR	1915570	IdentifierDecl	rv		1915566	0					
ANR	1915571	IdentifierDeclType	zval		1915566	0					
ANR	1915572	Identifier	rv		1915566	1					
ANR	1915573	IdentifierDecl	arr		1915566	1					
ANR	1915574	IdentifierDeclType	zval		1915566	0					
ANR	1915575	Identifier	arr		1915566	1					
ANR	1915576	IdentifierDecl	val		1915566	2					
ANR	1915577	IdentifierDeclType	zval		1915566	0					
ANR	1915578	Identifier	val		1915566	1					
ANR	1915579	IdentifierDeclStatement	zval * any = NULL ;	1234:1:41106:41122	1915566	1	True				
ANR	1915580	IdentifierDecl	* any = NULL		1915566	0					
ANR	1915581	IdentifierDeclType	zval *		1915566	0					
ANR	1915582	Identifier	any		1915566	1					
ANR	1915583	AssignmentExpression	* any = NULL		1915566	2		=			
ANR	1915584	Identifier	NULL		1915566	0					
ANR	1915585	Identifier	NULL		1915566	1					
ANR	1915586	IdentifierDeclStatement	char * name = NULL ;	1235:1:41125:41142	1915566	2	True				
ANR	1915587	IdentifierDecl	* name = NULL		1915566	0					
ANR	1915588	IdentifierDeclType	char *		1915566	0					
ANR	1915589	Identifier	name		1915566	1					
ANR	1915590	AssignmentExpression	* name = NULL		1915566	2		=			
ANR	1915591	Identifier	NULL		1915566	0					
ANR	1915592	Identifier	NULL		1915566	1					
ANR	1915593	WhileStatement	while ( node != NULL )		1915566	3					
ANR	1915594	Condition	node != NULL	1237:8:41153:41164	1915566	0	True				
ANR	1915595	EqualityExpression	node != NULL		1915566	0		!=			
ANR	1915596	Identifier	node		1915566	0					
ANR	1915597	Identifier	NULL		1915566	1					
ANR	1915598	CompoundStatement		6:22:83:83	1915566	1					
ANR	1915599	IfStatement	"if ( get_zval_property ( ret , ( char * ) node -> name , & rv ) == NULL )"		1915566	0					
ANR	1915600	Condition	"get_zval_property ( ret , ( char * ) node -> name , & rv ) == NULL"	1238:6:41175:41228	1915566	0	True				
ANR	1915601	EqualityExpression	"get_zval_property ( ret , ( char * ) node -> name , & rv ) == NULL"		1915566	0		==			
ANR	1915602	CallExpression	"get_zval_property ( ret , ( char * ) node -> name , & rv )"		1915566	0					
ANR	1915603	Callee	get_zval_property		1915566	0					
ANR	1915604	Identifier	get_zval_property		1915566	0					
ANR	1915605	ArgumentList	ret		1915566	1					
ANR	1915606	Argument	ret		1915566	0					
ANR	1915607	Identifier	ret		1915566	0					
ANR	1915608	Argument	( char * ) node -> name		1915566	1					
ANR	1915609	CastExpression	( char * ) node -> name		1915566	0					
ANR	1915610	CastTarget	char *		1915566	0					
ANR	1915611	PtrMemberAccess	node -> name		1915566	1					
ANR	1915612	Identifier	node		1915566	0					
ANR	1915613	Identifier	name		1915566	1					
ANR	1915614	Argument	& rv		1915566	2					
ANR	1915615	UnaryOperationExpression	& rv		1915566	0					
ANR	1915616	UnaryOperator	&		1915566	0					
ANR	1915617	Identifier	rv		1915566	1					
ANR	1915618	Identifier	NULL		1915566	1					
ANR	1915619	CompoundStatement		7:62:147:147	1915566	1					
ANR	1915620	ExpressionStatement	ZVAL_NULL ( & val )	1240:3:41237:41252	1915566	0	True				
ANR	1915621	CallExpression	ZVAL_NULL ( & val )		1915566	0					
ANR	1915622	Callee	ZVAL_NULL		1915566	0					
ANR	1915623	Identifier	ZVAL_NULL		1915566	0					
ANR	1915624	ArgumentList	& val		1915566	1					
ANR	1915625	Argument	& val		1915566	0					
ANR	1915626	UnaryOperationExpression	& val		1915566	0					
ANR	1915627	UnaryOperator	&		1915566	0					
ANR	1915628	Identifier	val		1915566	1					
ANR	1915629	ExpressionStatement	"master_to_zval ( & val , get_conversion ( XSD_ANYXML ) , node )"	1241:3:41257:41311	1915566	1	True				
ANR	1915630	CallExpression	"master_to_zval ( & val , get_conversion ( XSD_ANYXML ) , node )"		1915566	0					
ANR	1915631	Callee	master_to_zval		1915566	0					
ANR	1915632	Identifier	master_to_zval		1915566	0					
ANR	1915633	ArgumentList	& val		1915566	1					
ANR	1915634	Argument	& val		1915566	0					
ANR	1915635	UnaryOperationExpression	& val		1915566	0					
ANR	1915636	UnaryOperator	&		1915566	0					
ANR	1915637	Identifier	val		1915566	1					
ANR	1915638	Argument	get_conversion ( XSD_ANYXML )		1915566	1					
ANR	1915639	CallExpression	get_conversion ( XSD_ANYXML )		1915566	0					
ANR	1915640	Callee	get_conversion		1915566	0					
ANR	1915641	Identifier	get_conversion		1915566	0					
ANR	1915642	ArgumentList	XSD_ANYXML		1915566	1					
ANR	1915643	Argument	XSD_ANYXML		1915566	0					
ANR	1915644	Identifier	XSD_ANYXML		1915566	0					
ANR	1915645	Argument	node		1915566	2					
ANR	1915646	Identifier	node		1915566	0					
ANR	1915647	IfStatement	if ( any && Z_TYPE_P ( any ) != IS_ARRAY )		1915566	2					
ANR	1915648	Condition	any && Z_TYPE_P ( any ) != IS_ARRAY	1243:7:41321:41352	1915566	0	True				
ANR	1915649	AndExpression	any && Z_TYPE_P ( any ) != IS_ARRAY		1915566	0		&&			
ANR	1915650	Identifier	any		1915566	0					
ANR	1915651	EqualityExpression	Z_TYPE_P ( any ) != IS_ARRAY		1915566	1		!=			
ANR	1915652	CallExpression	Z_TYPE_P ( any )		1915566	0					
ANR	1915653	Callee	Z_TYPE_P		1915566	0					
ANR	1915654	Identifier	Z_TYPE_P		1915566	0					
ANR	1915655	ArgumentList	any		1915566	1					
ANR	1915656	Argument	any		1915566	0					
ANR	1915657	Identifier	any		1915566	0					
ANR	1915658	Identifier	IS_ARRAY		1915566	1					
ANR	1915659	CompoundStatement		12:41:271:271	1915566	1					
ANR	1915660	ExpressionStatement	array_init ( & arr )	1245:4:41390:41406	1915566	0	True				
ANR	1915661	CallExpression	array_init ( & arr )		1915566	0					
ANR	1915662	Callee	array_init		1915566	0					
ANR	1915663	Identifier	array_init		1915566	0					
ANR	1915664	ArgumentList	& arr		1915566	1					
ANR	1915665	Argument	& arr		1915566	0					
ANR	1915666	UnaryOperationExpression	& arr		1915566	0					
ANR	1915667	UnaryOperator	&		1915566	0					
ANR	1915668	Identifier	arr		1915566	1					
ANR	1915669	IfStatement	if ( name )		1915566	1					
ANR	1915670	Condition	name	1246:8:41416:41419	1915566	0	True				
ANR	1915671	Identifier	name		1915566	0					
ANR	1915672	CompoundStatement		15:14:338:338	1915566	1					
ANR	1915673	ExpressionStatement	"add_assoc_zval ( & arr , name , any )"	1247:5:41429:41460	1915566	0	True				
ANR	1915674	CallExpression	"add_assoc_zval ( & arr , name , any )"		1915566	0					
ANR	1915675	Callee	add_assoc_zval		1915566	0					
ANR	1915676	Identifier	add_assoc_zval		1915566	0					
ANR	1915677	ArgumentList	& arr		1915566	1					
ANR	1915678	Argument	& arr		1915566	0					
ANR	1915679	UnaryOperationExpression	& arr		1915566	0					
ANR	1915680	UnaryOperator	&		1915566	0					
ANR	1915681	Identifier	arr		1915566	1					
ANR	1915682	Argument	name		1915566	1					
ANR	1915683	Identifier	name		1915566	0					
ANR	1915684	Argument	any		1915566	2					
ANR	1915685	Identifier	any		1915566	0					
ANR	1915686	ElseStatement	else		1915566	0					
ANR	1915687	CompoundStatement		17:11:389:389	1915566	0					
ANR	1915688	ExpressionStatement	"add_next_index_zval ( & arr , any )"	1249:5:41480:41510	1915566	0	True				
ANR	1915689	CallExpression	"add_next_index_zval ( & arr , any )"		1915566	0					
ANR	1915690	Callee	add_next_index_zval		1915566	0					
ANR	1915691	Identifier	add_next_index_zval		1915566	0					
ANR	1915692	ArgumentList	& arr		1915566	1					
ANR	1915693	Argument	& arr		1915566	0					
ANR	1915694	UnaryOperationExpression	& arr		1915566	0					
ANR	1915695	UnaryOperator	&		1915566	0					
ANR	1915696	Identifier	arr		1915566	1					
ANR	1915697	Argument	any		1915566	1					
ANR	1915698	Identifier	any		1915566	0					
ANR	1915699	ExpressionStatement	any = & arr	1251:4:41522:41532	1915566	2	True				
ANR	1915700	AssignmentExpression	any = & arr		1915566	0		=			
ANR	1915701	Identifier	any		1915566	0					
ANR	1915702	UnaryOperationExpression	& arr		1915566	1					
ANR	1915703	UnaryOperator	&		1915566	0					
ANR	1915704	Identifier	arr		1915566	1					
ANR	1915705	IfStatement	if ( Z_TYPE ( val ) == IS_STRING && * Z_STRVAL ( val ) == '<' )		1915566	3					
ANR	1915706	Condition	Z_TYPE ( val ) == IS_STRING && * Z_STRVAL ( val ) == '<'	1254:7:41547:41595	1915566	0	True				
ANR	1915707	AndExpression	Z_TYPE ( val ) == IS_STRING && * Z_STRVAL ( val ) == '<'		1915566	0		&&			
ANR	1915708	EqualityExpression	Z_TYPE ( val ) == IS_STRING		1915566	0		==			
ANR	1915709	CallExpression	Z_TYPE ( val )		1915566	0					
ANR	1915710	Callee	Z_TYPE		1915566	0					
ANR	1915711	Identifier	Z_TYPE		1915566	0					
ANR	1915712	ArgumentList	val		1915566	1					
ANR	1915713	Argument	val		1915566	0					
ANR	1915714	Identifier	val		1915566	0					
ANR	1915715	Identifier	IS_STRING		1915566	1					
ANR	1915716	EqualityExpression	* Z_STRVAL ( val ) == '<'		1915566	1		==			
ANR	1915717	UnaryOperationExpression	* Z_STRVAL ( val )		1915566	0					
ANR	1915718	UnaryOperator	*		1915566	0					
ANR	1915719	CallExpression	Z_STRVAL ( val )		1915566	1					
ANR	1915720	Callee	Z_STRVAL		1915566	0					
ANR	1915721	Identifier	Z_STRVAL		1915566	0					
ANR	1915722	ArgumentList	val		1915566	1					
ANR	1915723	Argument	val		1915566	0					
ANR	1915724	Identifier	val		1915566	0					
ANR	1915725	PrimaryExpression	'<'		1915566	1					
ANR	1915726	CompoundStatement		23:58:514:514	1915566	1					
ANR	1915727	ExpressionStatement	name = NULL	1255:4:41604:41615	1915566	0	True				
ANR	1915728	AssignmentExpression	name = NULL		1915566	0		=			
ANR	1915729	Identifier	name		1915566	0					
ANR	1915730	Identifier	NULL		1915566	1					
ANR	1915731	WhileStatement	while ( node -> next != NULL )		1915566	1					
ANR	1915732	Condition	node -> next != NULL	1256:11:41628:41645	1915566	0	True				
ANR	1915733	EqualityExpression	node -> next != NULL		1915566	0		!=			
ANR	1915734	PtrMemberAccess	node -> next		1915566	0					
ANR	1915735	Identifier	node		1915566	0					
ANR	1915736	Identifier	next		1915566	1					
ANR	1915737	Identifier	NULL		1915566	1					
ANR	1915738	CompoundStatement		26:5:571:580	1915566	1					
ANR	1915739	IdentifierDeclStatement	zval val2 ;	1257:5:41655:41664	1915566	0	True				
ANR	1915740	IdentifierDecl	val2		1915566	0					
ANR	1915741	IdentifierDeclType	zval		1915566	0					
ANR	1915742	Identifier	val2		1915566	1					
ANR	1915743	ExpressionStatement	ZVAL_NULL ( & val2 )	1259:5:41672:41688	1915566	1	True				
ANR	1915744	CallExpression	ZVAL_NULL ( & val2 )		1915566	0					
ANR	1915745	Callee	ZVAL_NULL		1915566	0					
ANR	1915746	Identifier	ZVAL_NULL		1915566	0					
ANR	1915747	ArgumentList	& val2		1915566	1					
ANR	1915748	Argument	& val2		1915566	0					
ANR	1915749	UnaryOperationExpression	& val2		1915566	0					
ANR	1915750	UnaryOperator	&		1915566	0					
ANR	1915751	Identifier	val2		1915566	1					
ANR	1915752	ExpressionStatement	"master_to_zval ( & val2 , get_conversion ( XSD_ANYXML ) , node -> next )"	1260:5:41695:41756	1915566	2	True				
ANR	1915753	CallExpression	"master_to_zval ( & val2 , get_conversion ( XSD_ANYXML ) , node -> next )"		1915566	0					
ANR	1915754	Callee	master_to_zval		1915566	0					
ANR	1915755	Identifier	master_to_zval		1915566	0					
ANR	1915756	ArgumentList	& val2		1915566	1					
ANR	1915757	Argument	& val2		1915566	0					
ANR	1915758	UnaryOperationExpression	& val2		1915566	0					
ANR	1915759	UnaryOperator	&		1915566	0					
ANR	1915760	Identifier	val2		1915566	1					
ANR	1915761	Argument	get_conversion ( XSD_ANYXML )		1915566	1					
ANR	1915762	CallExpression	get_conversion ( XSD_ANYXML )		1915566	0					
ANR	1915763	Callee	get_conversion		1915566	0					
ANR	1915764	Identifier	get_conversion		1915566	0					
ANR	1915765	ArgumentList	XSD_ANYXML		1915566	1					
ANR	1915766	Argument	XSD_ANYXML		1915566	0					
ANR	1915767	Identifier	XSD_ANYXML		1915566	0					
ANR	1915768	Argument	node -> next		1915566	2					
ANR	1915769	PtrMemberAccess	node -> next		1915566	0					
ANR	1915770	Identifier	node		1915566	0					
ANR	1915771	Identifier	next		1915566	1					
ANR	1915772	IfStatement	if ( Z_TYPE ( val2 ) != IS_STRING || * Z_STRVAL ( val ) != '<' )		1915566	3					
ANR	1915773	Condition	Z_TYPE ( val2 ) != IS_STRING || * Z_STRVAL ( val ) != '<'	1261:9:41767:41817	1915566	0	True				
ANR	1915774	OrExpression	Z_TYPE ( val2 ) != IS_STRING || * Z_STRVAL ( val ) != '<'		1915566	0		||			
ANR	1915775	EqualityExpression	Z_TYPE ( val2 ) != IS_STRING		1915566	0		!=			
ANR	1915776	CallExpression	Z_TYPE ( val2 )		1915566	0					
ANR	1915777	Callee	Z_TYPE		1915566	0					
ANR	1915778	Identifier	Z_TYPE		1915566	0					
ANR	1915779	ArgumentList	val2		1915566	1					
ANR	1915780	Argument	val2		1915566	0					
ANR	1915781	Identifier	val2		1915566	0					
ANR	1915782	Identifier	IS_STRING		1915566	1					
ANR	1915783	EqualityExpression	* Z_STRVAL ( val ) != '<'		1915566	1		!=			
ANR	1915784	UnaryOperationExpression	* Z_STRVAL ( val )		1915566	0					
ANR	1915785	UnaryOperator	*		1915566	0					
ANR	1915786	CallExpression	Z_STRVAL ( val )		1915566	1					
ANR	1915787	Callee	Z_STRVAL		1915566	0					
ANR	1915788	Identifier	Z_STRVAL		1915566	0					
ANR	1915789	ArgumentList	val		1915566	1					
ANR	1915790	Argument	val		1915566	0					
ANR	1915791	Identifier	val		1915566	0					
ANR	1915792	PrimaryExpression	'<'		1915566	1					
ANR	1915793	CompoundStatement		30:62:736:736	1915566	1					
ANR	1915794	BreakStatement	break ;	1262:6:41828:41833	1915566	0	True				
ANR	1915795	ExpressionStatement	"concat_function ( & val , & val , & val2 )"	1264:5:41847:41881	1915566	4	True				
ANR	1915796	CallExpression	"concat_function ( & val , & val , & val2 )"		1915566	0					
ANR	1915797	Callee	concat_function		1915566	0					
ANR	1915798	Identifier	concat_function		1915566	0					
ANR	1915799	ArgumentList	& val		1915566	1					
ANR	1915800	Argument	& val		1915566	0					
ANR	1915801	UnaryOperationExpression	& val		1915566	0					
ANR	1915802	UnaryOperator	&		1915566	0					
ANR	1915803	Identifier	val		1915566	1					
ANR	1915804	Argument	& val		1915566	1					
ANR	1915805	UnaryOperationExpression	& val		1915566	0					
ANR	1915806	UnaryOperator	&		1915566	0					
ANR	1915807	Identifier	val		1915566	1					
ANR	1915808	Argument	& val2		1915566	2					
ANR	1915809	UnaryOperationExpression	& val2		1915566	0					
ANR	1915810	UnaryOperator	&		1915566	0					
ANR	1915811	Identifier	val2		1915566	1					
ANR	1915812	ExpressionStatement	zval_ptr_dtor ( & val2 )	1265:5:41888:41908	1915566	5	True				
ANR	1915813	CallExpression	zval_ptr_dtor ( & val2 )		1915566	0					
ANR	1915814	Callee	zval_ptr_dtor		1915566	0					
ANR	1915815	Identifier	zval_ptr_dtor		1915566	0					
ANR	1915816	ArgumentList	& val2		1915566	1					
ANR	1915817	Argument	& val2		1915566	0					
ANR	1915818	UnaryOperationExpression	& val2		1915566	0					
ANR	1915819	UnaryOperator	&		1915566	0					
ANR	1915820	Identifier	val2		1915566	1					
ANR	1915821	ExpressionStatement	node = node -> next	1266:5:41915:41932	1915566	6	True				
ANR	1915822	AssignmentExpression	node = node -> next		1915566	0		=			
ANR	1915823	Identifier	node		1915566	0					
ANR	1915824	PtrMemberAccess	node -> next		1915566	1					
ANR	1915825	Identifier	node		1915566	0					
ANR	1915826	Identifier	next		1915566	1					
ANR	1915827	ElseStatement	else		1915566	0					
ANR	1915828	CompoundStatement		37:10:866:866	1915566	0					
ANR	1915829	ExpressionStatement	name = ( char * ) node -> name	1269:4:41956:41980	1915566	0	True				
ANR	1915830	AssignmentExpression	name = ( char * ) node -> name		1915566	0		=			
ANR	1915831	Identifier	name		1915566	0					
ANR	1915832	CastExpression	( char * ) node -> name		1915566	1					
ANR	1915833	CastTarget	char *		1915566	0					
ANR	1915834	PtrMemberAccess	node -> name		1915566	1					
ANR	1915835	Identifier	node		1915566	0					
ANR	1915836	Identifier	name		1915566	1					
ANR	1915837	IfStatement	if ( any == NULL )		1915566	4					
ANR	1915838	Condition	any == NULL	1272:7:41995:42005	1915566	0	True				
ANR	1915839	EqualityExpression	any == NULL		1915566	0		==			
ANR	1915840	Identifier	any		1915566	0					
ANR	1915841	Identifier	NULL		1915566	1					
ANR	1915842	CompoundStatement		41:20:924:924	1915566	1					
ANR	1915843	IfStatement	if ( name )		1915566	0					
ANR	1915844	Condition	name	1273:8:42018:42021	1915566	0	True				
ANR	1915845	Identifier	name		1915566	0					
ANR	1915846	CompoundStatement		42:14:940:940	1915566	1					
ANR	1915847	ExpressionStatement	array_init ( & arr )	1275:5:42061:42077	1915566	0	True				
ANR	1915848	CallExpression	array_init ( & arr )		1915566	0					
ANR	1915849	Callee	array_init		1915566	0					
ANR	1915850	Identifier	array_init		1915566	0					
ANR	1915851	ArgumentList	& arr		1915566	1					
ANR	1915852	Argument	& arr		1915566	0					
ANR	1915853	UnaryOperationExpression	& arr		1915566	0					
ANR	1915854	UnaryOperator	&		1915566	0					
ANR	1915855	Identifier	arr		1915566	1					
ANR	1915856	ExpressionStatement	"add_assoc_zval ( & arr , name , & val )"	1276:5:42084:42116	1915566	1	True				
ANR	1915857	CallExpression	"add_assoc_zval ( & arr , name , & val )"		1915566	0					
ANR	1915858	Callee	add_assoc_zval		1915566	0					
ANR	1915859	Identifier	add_assoc_zval		1915566	0					
ANR	1915860	ArgumentList	& arr		1915566	1					
ANR	1915861	Argument	& arr		1915566	0					
ANR	1915862	UnaryOperationExpression	& arr		1915566	0					
ANR	1915863	UnaryOperator	&		1915566	0					
ANR	1915864	Identifier	arr		1915566	1					
ANR	1915865	Argument	name		1915566	1					
ANR	1915866	Identifier	name		1915566	0					
ANR	1915867	Argument	& val		1915566	2					
ANR	1915868	UnaryOperationExpression	& val		1915566	0					
ANR	1915869	UnaryOperator	&		1915566	0					
ANR	1915870	Identifier	val		1915566	1					
ANR	1915871	ExpressionStatement	any = & arr	1277:5:42123:42133	1915566	2	True				
ANR	1915872	AssignmentExpression	any = & arr		1915566	0		=			
ANR	1915873	Identifier	any		1915566	0					
ANR	1915874	UnaryOperationExpression	& arr		1915566	1					
ANR	1915875	UnaryOperator	&		1915566	0					
ANR	1915876	Identifier	arr		1915566	1					
ANR	1915877	ExpressionStatement	name = NULL	1278:5:42140:42151	1915566	3	True				
ANR	1915878	AssignmentExpression	name = NULL		1915566	0		=			
ANR	1915879	Identifier	name		1915566	0					
ANR	1915880	Identifier	NULL		1915566	1					
ANR	1915881	ElseStatement	else		1915566	0					
ANR	1915882	CompoundStatement		48:11:1080:1080	1915566	0					
ANR	1915883	ExpressionStatement	any = & val	1280:5:42171:42181	1915566	0	True				
ANR	1915884	AssignmentExpression	any = & val		1915566	0		=			
ANR	1915885	Identifier	any		1915566	0					
ANR	1915886	UnaryOperationExpression	& val		1915566	1					
ANR	1915887	UnaryOperator	&		1915566	0					
ANR	1915888	Identifier	val		1915566	1					
ANR	1915889	ElseStatement	else		1915566	0					
ANR	1915890	CompoundStatement		51:10:1115:1115	1915566	0					
ANR	1915891	IfStatement	if ( name )		1915566	0					
ANR	1915892	Condition	name	1284:8:42237:42240	1915566	0	True				
ANR	1915893	Identifier	name		1915566	0					
ANR	1915894	CompoundStatement		54:5:1166:1174	1915566	1					
ANR	1915895	IdentifierDeclStatement	zval * el ;	1285:5:42250:42258	1915566	0	True				
ANR	1915896	IdentifierDecl	* el		1915566	0					
ANR	1915897	IdentifierDeclType	zval *		1915566	0					
ANR	1915898	Identifier	el		1915566	1					
ANR	1915899	IfStatement	"if ( ( el = zend_hash_str_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) ) ) != NULL )"		1915566	1					
ANR	1915900	Condition	"( el = zend_hash_str_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) ) ) != NULL"	1286:9:42269:42338	1915566	0	True				
ANR	1915901	EqualityExpression	"( el = zend_hash_str_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) ) ) != NULL"		1915566	0		!=			
ANR	1915902	AssignmentExpression	"el = zend_hash_str_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) )"		1915566	0		=			
ANR	1915903	Identifier	el		1915566	0					
ANR	1915904	CallExpression	"zend_hash_str_find ( Z_ARRVAL_P ( any ) , name , strlen ( name ) )"		1915566	1					
ANR	1915905	Callee	zend_hash_str_find		1915566	0					
ANR	1915906	Identifier	zend_hash_str_find		1915566	0					
ANR	1915907	ArgumentList	Z_ARRVAL_P ( any )		1915566	1					
ANR	1915908	Argument	Z_ARRVAL_P ( any )		1915566	0					
ANR	1915909	CallExpression	Z_ARRVAL_P ( any )		1915566	0					
ANR	1915910	Callee	Z_ARRVAL_P		1915566	0					
ANR	1915911	Identifier	Z_ARRVAL_P		1915566	0					
ANR	1915912	ArgumentList	any		1915566	1					
ANR	1915913	Argument	any		1915566	0					
ANR	1915914	Identifier	any		1915566	0					
ANR	1915915	Argument	name		1915566	1					
ANR	1915916	Identifier	name		1915566	0					
ANR	1915917	Argument	strlen ( name )		1915566	2					
ANR	1915918	CallExpression	strlen ( name )		1915566	0					
ANR	1915919	Callee	strlen		1915566	0					
ANR	1915920	Identifier	strlen		1915566	0					
ANR	1915921	ArgumentList	name		1915566	1					
ANR	1915922	Argument	name		1915566	0					
ANR	1915923	Identifier	name		1915566	0					
ANR	1915924	Identifier	NULL		1915566	1					
ANR	1915925	CompoundStatement		55:81:1257:1257	1915566	1					
ANR	1915926	IfStatement	if ( Z_TYPE_P ( el ) != IS_ARRAY )		1915566	0					
ANR	1915927	Condition	Z_TYPE_P ( el ) != IS_ARRAY	1287:10:42353:42376	1915566	0	True				
ANR	1915928	EqualityExpression	Z_TYPE_P ( el ) != IS_ARRAY		1915566	0		!=			
ANR	1915929	CallExpression	Z_TYPE_P ( el )		1915566	0					
ANR	1915930	Callee	Z_TYPE_P		1915566	0					
ANR	1915931	Identifier	Z_TYPE_P		1915566	0					
ANR	1915932	ArgumentList	el		1915566	1					
ANR	1915933	Argument	el		1915566	0					
ANR	1915934	Identifier	el		1915566	0					
ANR	1915935	Identifier	IS_ARRAY		1915566	1					
ANR	1915936	CompoundStatement		56:36:1295:1295	1915566	1					
ANR	1915937	ExpressionStatement	array_init ( & arr )	1289:7:42420:42436	1915566	0	True				
ANR	1915938	CallExpression	array_init ( & arr )		1915566	0					
ANR	1915939	Callee	array_init		1915566	0					
ANR	1915940	Identifier	array_init		1915566	0					
ANR	1915941	ArgumentList	& arr		1915566	1					
ANR	1915942	Argument	& arr		1915566	0					
ANR	1915943	UnaryOperationExpression	& arr		1915566	0					
ANR	1915944	UnaryOperator	&		1915566	0					
ANR	1915945	Identifier	arr		1915566	1					
ANR	1915946	ExpressionStatement	"add_next_index_zval ( & arr , el )"	1290:7:42445:42474	1915566	1	True				
ANR	1915947	CallExpression	"add_next_index_zval ( & arr , el )"		1915566	0					
ANR	1915948	Callee	add_next_index_zval		1915566	0					
ANR	1915949	Identifier	add_next_index_zval		1915566	0					
ANR	1915950	ArgumentList	& arr		1915566	1					
ANR	1915951	Argument	& arr		1915566	0					
ANR	1915952	UnaryOperationExpression	& arr		1915566	0					
ANR	1915953	UnaryOperator	&		1915566	0					
ANR	1915954	Identifier	arr		1915566	1					
ANR	1915955	Argument	el		1915566	1					
ANR	1915956	Identifier	el		1915566	0					
ANR	1915957	ExpressionStatement	el = & arr	1291:7:42483:42492	1915566	2	True				
ANR	1915958	AssignmentExpression	el = & arr		1915566	0		=			
ANR	1915959	Identifier	el		1915566	0					
ANR	1915960	UnaryOperationExpression	& arr		1915566	1					
ANR	1915961	UnaryOperator	&		1915566	0					
ANR	1915962	Identifier	arr		1915566	1					
ANR	1915963	ExpressionStatement	"add_next_index_zval ( el , & val )"	1293:6:42508:42537	1915566	1	True				
ANR	1915964	CallExpression	"add_next_index_zval ( el , & val )"		1915566	0					
ANR	1915965	Callee	add_next_index_zval		1915566	0					
ANR	1915966	Identifier	add_next_index_zval		1915566	0					
ANR	1915967	ArgumentList	el		1915566	1					
ANR	1915968	Argument	el		1915566	0					
ANR	1915969	Identifier	el		1915566	0					
ANR	1915970	Argument	& val		1915566	1					
ANR	1915971	UnaryOperationExpression	& val		1915566	0					
ANR	1915972	UnaryOperator	&		1915566	0					
ANR	1915973	Identifier	val		1915566	1					
ANR	1915974	ElseStatement	else		1915566	0					
ANR	1915975	CompoundStatement		63:12:1467:1467	1915566	0					
ANR	1915976	ExpressionStatement	"add_assoc_zval ( any , name , & val )"	1295:6:42559:42590	1915566	0	True				
ANR	1915977	CallExpression	"add_assoc_zval ( any , name , & val )"		1915566	0					
ANR	1915978	Callee	add_assoc_zval		1915566	0					
ANR	1915979	Identifier	add_assoc_zval		1915566	0					
ANR	1915980	ArgumentList	any		1915566	1					
ANR	1915981	Argument	any		1915566	0					
ANR	1915982	Identifier	any		1915566	0					
ANR	1915983	Argument	name		1915566	1					
ANR	1915984	Identifier	name		1915566	0					
ANR	1915985	Argument	& val		1915566	2					
ANR	1915986	UnaryOperationExpression	& val		1915566	0					
ANR	1915987	UnaryOperator	&		1915566	0					
ANR	1915988	Identifier	val		1915566	1					
ANR	1915989	ElseStatement	else		1915566	0					
ANR	1915990	CompoundStatement		66:11:1526:1526	1915566	0					
ANR	1915991	ExpressionStatement	"add_next_index_zval ( any , & val )"	1298:5:42617:42647	1915566	0	True				
ANR	1915992	CallExpression	"add_next_index_zval ( any , & val )"		1915566	0					
ANR	1915993	Callee	add_next_index_zval		1915566	0					
ANR	1915994	Identifier	add_next_index_zval		1915566	0					
ANR	1915995	ArgumentList	any		1915566	1					
ANR	1915996	Argument	any		1915566	0					
ANR	1915997	Identifier	any		1915566	0					
ANR	1915998	Argument	& val		1915566	1					
ANR	1915999	UnaryOperationExpression	& val		1915566	0					
ANR	1916000	UnaryOperator	&		1915566	0					
ANR	1916001	Identifier	val		1915566	1					
ANR	1916002	ExpressionStatement	name = NULL	1300:4:42659:42670	1915566	1	True				
ANR	1916003	AssignmentExpression	name = NULL		1915566	0		=			
ANR	1916004	Identifier	name		1915566	0					
ANR	1916005	Identifier	NULL		1915566	1					
ANR	1916006	ExpressionStatement	node = node -> next	1303:2:42683:42700	1915566	1	True				
ANR	1916007	AssignmentExpression	node = node -> next		1915566	0		=			
ANR	1916008	Identifier	node		1915566	0					
ANR	1916009	PtrMemberAccess	node -> next		1915566	1					
ANR	1916010	Identifier	node		1915566	0					
ANR	1916011	Identifier	next		1915566	1					
ANR	1916012	IfStatement	if ( any )		1915566	4					
ANR	1916013	Condition	any	1305:5:42710:42712	1915566	0	True				
ANR	1916014	Identifier	any		1915566	0					
ANR	1916015	CompoundStatement		74:10:1631:1631	1915566	1					
ANR	1916016	ExpressionStatement	"set_zval_property ( ret , name ? name : ""any"" , any )"	1306:2:42719:42767	1915566	0	True				
ANR	1916017	CallExpression	"set_zval_property ( ret , name ? name : ""any"" , any )"		1915566	0					
ANR	1916018	Callee	set_zval_property		1915566	0					
ANR	1916019	Identifier	set_zval_property		1915566	0					
ANR	1916020	ArgumentList	ret		1915566	1					
ANR	1916021	Argument	ret		1915566	0					
ANR	1916022	Identifier	ret		1915566	0					
ANR	1916023	Argument	"name ? name : ""any"""		1915566	1					
ANR	1916024	ConditionalExpression	"name ? name : ""any"""		1915566	0					
ANR	1916025	Condition	name		1915566	0					
ANR	1916026	Identifier	name		1915566	0					
ANR	1916027	Identifier	name		1915566	1					
ANR	1916028	PrimaryExpression	"""any"""		1915566	2					
ANR	1916029	Argument	any		1915566	2					
ANR	1916030	Identifier	any		1915566	0					
ANR	1916031	ReturnType	static void		1915566	1					
ANR	1916032	Identifier	model_to_zval_any		1915566	2					
ANR	1916033	ParameterList	"zval * ret , xmlNodePtr node"		1915566	3					
ANR	1916034	Parameter	zval * ret	1231:30:41055:41063	1915566	0	True				
ANR	1916035	ParameterType	zval *		1915566	0					
ANR	1916036	Identifier	ret		1915566	1					
ANR	1916037	Parameter	xmlNodePtr node	1231:41:41066:41080	1915566	1	True				
ANR	1916038	ParameterType	xmlNodePtr		1915566	0					
ANR	1916039	Identifier	node		1915566	1					
ANR	1916040	CFGEntryNode	ENTRY		1915566		True				
ANR	1916041	CFGExitNode	EXIT		1915566		True				
ANR	1916042	Symbol	& val		1915566						
ANR	1916043	Symbol	& arr		1915566						
ANR	1916044	Symbol	* Z_STRVAL ( val )		1915566						
ANR	1916045	Symbol	rv		1915566						
ANR	1916046	Symbol	val2		1915566						
ANR	1916047	Symbol	Z_TYPE		1915566						
ANR	1916048	Symbol	get_conversion		1915566						
ANR	1916049	Symbol	get_zval_property		1915566						
ANR	1916050	Symbol	XSD_ANYXML		1915566						
ANR	1916051	Symbol	strlen		1915566						
ANR	1916052	Symbol	zend_hash_str_find		1915566						
ANR	1916053	Symbol	IS_ARRAY		1915566						
ANR	1916054	Symbol	* Z_STRVAL		1915566						
ANR	1916055	Symbol	Z_STRVAL		1915566						
ANR	1916056	Symbol	* node		1915566						
ANR	1916057	Symbol	IS_STRING		1915566						
ANR	1916058	Symbol	Z_ARRVAL_P		1915566						
ANR	1916059	Symbol	ret		1915566						
ANR	1916060	Symbol	val		1915566						
ANR	1916061	Symbol	arr		1915566						
ANR	1916062	Symbol	NULL		1915566						
ANR	1916063	Symbol	el		1915566						
ANR	1916064	Symbol	node -> next		1915566						
ANR	1916065	Symbol	Z_TYPE_P		1915566						
ANR	1916066	Symbol	any		1915566						
ANR	1916067	Symbol	& rv		1915566						
ANR	1916068	Symbol	node		1915566						
ANR	1916069	Symbol	node -> name		1915566						
ANR	1916070	Symbol	name		1915566						
ANR	1916071	Symbol	& val2		1915566						
ANR	1916072	Function	model_to_zval_object	1310:0:42775:46597							
ANR	1916073	FunctionDef	"model_to_zval_object (zval * ret , sdlContentModelPtr model , xmlNodePtr data , sdlPtr sdl)"		1916072	0					
ANR	1916074	CompoundStatement		1311:0:42874:46597	1916072	0					
ANR	1916075	SwitchStatement	switch ( model -> kind )		1916072	0					
ANR	1916076	Condition	model -> kind	1312:9:42885:42895	1916072	0	True				
ANR	1916077	PtrMemberAccess	model -> kind		1916072	0					
ANR	1916078	Identifier	model		1916072	0					
ANR	1916079	Identifier	kind		1916072	1					
ANR	1916080	CompoundStatement		2:22:23:23	1916072	1					
ANR	1916081	Label	case XSD_CONTENT_ELEMENT :	1313:2:42902:42926	1916072	0	True				
ANR	1916082	Identifier	XSD_CONTENT_ELEMENT		1916072	0					
ANR	1916083	IfStatement	if ( model -> u . element -> name )		1916072	1					
ANR	1916084	Condition	model -> u . element -> name	1314:7:42935:42956	1916072	0	True				
ANR	1916085	PtrMemberAccess	model -> u . element -> name		1916072	0					
ANR	1916086	MemberAccess	model -> u . element		1916072	0					
ANR	1916087	PtrMemberAccess	model -> u		1916072	0					
ANR	1916088	Identifier	model		1916072	0					
ANR	1916089	Identifier	u		1916072	1					
ANR	1916090	Identifier	element		1916072	1					
ANR	1916091	Identifier	name		1916072	1					
ANR	1916092	CompoundStatement		5:4:90:156	1916072	1					
ANR	1916093	IdentifierDeclStatement	"xmlNodePtr node = get_node ( data -> children , model -> u . element -> name ) ;"	1315:4:42965:43031	1916072	0	True				
ANR	1916094	IdentifierDecl	"node = get_node ( data -> children , model -> u . element -> name )"		1916072	0					
ANR	1916095	IdentifierDeclType	xmlNodePtr		1916072	0					
ANR	1916096	Identifier	node		1916072	1					
ANR	1916097	AssignmentExpression	"node = get_node ( data -> children , model -> u . element -> name )"		1916072	2		=			
ANR	1916098	Identifier	node		1916072	0					
ANR	1916099	CallExpression	"get_node ( data -> children , model -> u . element -> name )"		1916072	1					
ANR	1916100	Callee	get_node		1916072	0					
ANR	1916101	Identifier	get_node		1916072	0					
ANR	1916102	ArgumentList	data -> children		1916072	1					
ANR	1916103	Argument	data -> children		1916072	0					
ANR	1916104	PtrMemberAccess	data -> children		1916072	0					
ANR	1916105	Identifier	data		1916072	0					
ANR	1916106	Identifier	children		1916072	1					
ANR	1916107	Argument	model -> u . element -> name		1916072	1					
ANR	1916108	PtrMemberAccess	model -> u . element -> name		1916072	0					
ANR	1916109	MemberAccess	model -> u . element		1916072	0					
ANR	1916110	PtrMemberAccess	model -> u		1916072	0					
ANR	1916111	Identifier	model		1916072	0					
ANR	1916112	Identifier	u		1916072	1					
ANR	1916113	Identifier	element		1916072	1					
ANR	1916114	Identifier	name		1916072	1					
ANR	1916115	IfStatement	if ( node )		1916072	1					
ANR	1916116	Condition	node	1317:8:43042:43045	1916072	0	True				
ANR	1916117	Identifier	node		1916072	0					
ANR	1916118	CompoundStatement		9:5:195:212	1916072	1					
ANR	1916119	IdentifierDeclStatement	zval val ;	1318:5:43055:43063	1916072	0	True				
ANR	1916120	IdentifierDecl	val		1916072	0					
ANR	1916121	IdentifierDeclType	zval		1916072	0					
ANR	1916122	Identifier	val		1916072	1					
ANR	1916123	IdentifierDeclStatement	xmlNodePtr r_node ;	1319:5:43070:43087	1916072	1	True				
ANR	1916124	IdentifierDecl	r_node		1916072	0					
ANR	1916125	IdentifierDeclType	xmlNodePtr		1916072	0					
ANR	1916126	Identifier	r_node		1916072	1					
ANR	1916127	ExpressionStatement	ZVAL_NULL ( & val )	1321:5:43095:43110	1916072	2	True				
ANR	1916128	CallExpression	ZVAL_NULL ( & val )		1916072	0					
ANR	1916129	Callee	ZVAL_NULL		1916072	0					
ANR	1916130	Identifier	ZVAL_NULL		1916072	0					
ANR	1916131	ArgumentList	& val		1916072	1					
ANR	1916132	Argument	& val		1916072	0					
ANR	1916133	UnaryOperationExpression	& val		1916072	0					
ANR	1916134	UnaryOperator	&		1916072	0					
ANR	1916135	Identifier	val		1916072	1					
ANR	1916136	ExpressionStatement	r_node = check_and_resolve_href ( node )	1322:5:43117:43154	1916072	3	True				
ANR	1916137	AssignmentExpression	r_node = check_and_resolve_href ( node )		1916072	0		=			
ANR	1916138	Identifier	r_node		1916072	0					
ANR	1916139	CallExpression	check_and_resolve_href ( node )		1916072	1					
ANR	1916140	Callee	check_and_resolve_href		1916072	0					
ANR	1916141	Identifier	check_and_resolve_href		1916072	0					
ANR	1916142	ArgumentList	node		1916072	1					
ANR	1916143	Argument	node		1916072	0					
ANR	1916144	Identifier	node		1916072	0					
ANR	1916145	IfStatement	if ( r_node && r_node -> children && r_node -> children -> content )		1916072	4					
ANR	1916146	Condition	r_node && r_node -> children && r_node -> children -> content	1323:9:43165:43219	1916072	0	True				
ANR	1916147	AndExpression	r_node && r_node -> children && r_node -> children -> content		1916072	0		&&			
ANR	1916148	Identifier	r_node		1916072	0					
ANR	1916149	AndExpression	r_node -> children && r_node -> children -> content		1916072	1		&&			
ANR	1916150	PtrMemberAccess	r_node -> children		1916072	0					
ANR	1916151	Identifier	r_node		1916072	0					
ANR	1916152	Identifier	children		1916072	1					
ANR	1916153	PtrMemberAccess	r_node -> children -> content		1916072	1					
ANR	1916154	PtrMemberAccess	r_node -> children		1916072	0					
ANR	1916155	Identifier	r_node		1916072	0					
ANR	1916156	Identifier	children		1916072	1					
ANR	1916157	Identifier	content		1916072	1					
ANR	1916158	CompoundStatement		13:66:347:347	1916072	1					
ANR	1916159	IfStatement	"if ( model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0 )"		1916072	0					
ANR	1916160	Condition	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0"	1324:10:43234:43330	1916072	0	True				
ANR	1916161	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0"		1916072	0		&&			
ANR	1916162	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916163	MemberAccess	model -> u . element		1916072	0					
ANR	1916164	PtrMemberAccess	model -> u		1916072	0					
ANR	1916165	Identifier	model		1916072	0					
ANR	1916166	Identifier	u		1916072	1					
ANR	1916167	Identifier	element		1916072	1					
ANR	1916168	Identifier	fixed		1916072	1					
ANR	1916169	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content ) != 0"		1916072	1		!=			
ANR	1916170	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) r_node -> children -> content )"		1916072	0					
ANR	1916171	Callee	strcmp		1916072	0					
ANR	1916172	Identifier	strcmp		1916072	0					
ANR	1916173	ArgumentList	model -> u . element -> fixed		1916072	1					
ANR	1916174	Argument	model -> u . element -> fixed		1916072	0					
ANR	1916175	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916176	MemberAccess	model -> u . element		1916072	0					
ANR	1916177	PtrMemberAccess	model -> u		1916072	0					
ANR	1916178	Identifier	model		1916072	0					
ANR	1916179	Identifier	u		1916072	1					
ANR	1916180	Identifier	element		1916072	1					
ANR	1916181	Identifier	fixed		1916072	1					
ANR	1916182	Argument	( char * ) r_node -> children -> content		1916072	1					
ANR	1916183	CastExpression	( char * ) r_node -> children -> content		1916072	0					
ANR	1916184	CastTarget	char *		1916072	0					
ANR	1916185	PtrMemberAccess	r_node -> children -> content		1916072	1					
ANR	1916186	PtrMemberAccess	r_node -> children		1916072	0					
ANR	1916187	Identifier	r_node		1916072	0					
ANR	1916188	Identifier	children		1916072	1					
ANR	1916189	Identifier	content		1916072	1					
ANR	1916190	PrimaryExpression	0		1916072	1					
ANR	1916191	CompoundStatement		14:109:458:458	1916072	1					
ANR	1916192	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , r_node -> children -> content )"	1325:7:43342:43513	1916072	0	True				
ANR	1916193	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , r_node -> children -> content )"		1916072	0					
ANR	1916194	Callee	soap_error3		1916072	0					
ANR	1916195	Identifier	soap_error3		1916072	0					
ANR	1916196	ArgumentList	E_ERROR		1916072	1					
ANR	1916197	Argument	E_ERROR		1916072	0					
ANR	1916198	Identifier	E_ERROR		1916072	0					
ANR	1916199	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1916072	1					
ANR	1916200	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1916072	0					
ANR	1916201	Argument	model -> u . element -> name		1916072	2					
ANR	1916202	PtrMemberAccess	model -> u . element -> name		1916072	0					
ANR	1916203	MemberAccess	model -> u . element		1916072	0					
ANR	1916204	PtrMemberAccess	model -> u		1916072	0					
ANR	1916205	Identifier	model		1916072	0					
ANR	1916206	Identifier	u		1916072	1					
ANR	1916207	Identifier	element		1916072	1					
ANR	1916208	Identifier	name		1916072	1					
ANR	1916209	Argument	model -> u . element -> fixed		1916072	3					
ANR	1916210	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916211	MemberAccess	model -> u . element		1916072	0					
ANR	1916212	PtrMemberAccess	model -> u		1916072	0					
ANR	1916213	Identifier	model		1916072	0					
ANR	1916214	Identifier	u		1916072	1					
ANR	1916215	Identifier	element		1916072	1					
ANR	1916216	Identifier	fixed		1916072	1					
ANR	1916217	Argument	r_node -> children -> content		1916072	4					
ANR	1916218	PtrMemberAccess	r_node -> children -> content		1916072	0					
ANR	1916219	PtrMemberAccess	r_node -> children		1916072	0					
ANR	1916220	Identifier	r_node		1916072	0					
ANR	1916221	Identifier	children		1916072	1					
ANR	1916222	Identifier	content		1916072	1					
ANR	1916223	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , r_node )"	1327:6:43529:43583	1916072	1	True				
ANR	1916224	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , r_node )"		1916072	0					
ANR	1916225	Callee	master_to_zval		1916072	0					
ANR	1916226	Identifier	master_to_zval		1916072	0					
ANR	1916227	ArgumentList	& val		1916072	1					
ANR	1916228	Argument	& val		1916072	0					
ANR	1916229	UnaryOperationExpression	& val		1916072	0					
ANR	1916230	UnaryOperator	&		1916072	0					
ANR	1916231	Identifier	val		1916072	1					
ANR	1916232	Argument	model -> u . element -> encode		1916072	1					
ANR	1916233	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916234	MemberAccess	model -> u . element		1916072	0					
ANR	1916235	PtrMemberAccess	model -> u		1916072	0					
ANR	1916236	Identifier	model		1916072	0					
ANR	1916237	Identifier	u		1916072	1					
ANR	1916238	Identifier	element		1916072	1					
ANR	1916239	Identifier	encode		1916072	1					
ANR	1916240	Argument	r_node		1916072	2					
ANR	1916241	Identifier	r_node		1916072	0					
ANR	1916242	ElseStatement	else		1916072	0					
ANR	1916243	IfStatement	if ( model -> u . element -> fixed )		1916072	0					
ANR	1916244	Condition	model -> u . element -> fixed	1328:16:43601:43623	1916072	0	True				
ANR	1916245	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916246	MemberAccess	model -> u . element		1916072	0					
ANR	1916247	PtrMemberAccess	model -> u		1916072	0					
ANR	1916248	Identifier	model		1916072	0					
ANR	1916249	Identifier	u		1916072	1					
ANR	1916250	Identifier	element		1916072	1					
ANR	1916251	Identifier	fixed		1916072	1					
ANR	1916252	CompoundStatement		19:6:759:813	1916072	1					
ANR	1916253	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1329:6:43634:43688	1916072	0	True				
ANR	1916254	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	0					
ANR	1916255	IdentifierDeclType	xmlNodePtr		1916072	0					
ANR	1916256	Identifier	dummy		1916072	1					
ANR	1916257	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	2		=			
ANR	1916258	Identifier	dummy		1916072	0					
ANR	1916259	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	1					
ANR	1916260	Callee	xmlNewNode		1916072	0					
ANR	1916261	Identifier	xmlNewNode		1916072	0					
ANR	1916262	ArgumentList	NULL		1916072	1					
ANR	1916263	Argument	NULL		1916072	0					
ANR	1916264	Identifier	NULL		1916072	0					
ANR	1916265	Argument	"BAD_CAST ( ""BOGUS"" )"		1916072	1					
ANR	1916266	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1916072	0					
ANR	1916267	Callee	BAD_CAST		1916072	0					
ANR	1916268	Identifier	BAD_CAST		1916072	0					
ANR	1916269	ArgumentList	"""BOGUS"""		1916072	1					
ANR	1916270	Argument	"""BOGUS"""		1916072	0					
ANR	1916271	PrimaryExpression	"""BOGUS"""		1916072	0					
ANR	1916272	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"	1330:6:43696:43755	1916072	1	True				
ANR	1916273	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"		1916072	0					
ANR	1916274	Callee	xmlNodeSetContent		1916072	0					
ANR	1916275	Identifier	xmlNodeSetContent		1916072	0					
ANR	1916276	ArgumentList	dummy		1916072	1					
ANR	1916277	Argument	dummy		1916072	0					
ANR	1916278	Identifier	dummy		1916072	0					
ANR	1916279	Argument	BAD_CAST ( model -> u . element -> fixed )		1916072	1					
ANR	1916280	CallExpression	BAD_CAST ( model -> u . element -> fixed )		1916072	0					
ANR	1916281	Callee	BAD_CAST		1916072	0					
ANR	1916282	Identifier	BAD_CAST		1916072	0					
ANR	1916283	ArgumentList	model -> u . element -> fixed		1916072	1					
ANR	1916284	Argument	model -> u . element -> fixed		1916072	0					
ANR	1916285	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916286	MemberAccess	model -> u . element		1916072	0					
ANR	1916287	PtrMemberAccess	model -> u		1916072	0					
ANR	1916288	Identifier	model		1916072	0					
ANR	1916289	Identifier	u		1916072	1					
ANR	1916290	Identifier	element		1916072	1					
ANR	1916291	Identifier	fixed		1916072	1					
ANR	1916292	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , dummy )"	1331:6:43763:43816	1916072	2	True				
ANR	1916293	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , dummy )"		1916072	0					
ANR	1916294	Callee	master_to_zval		1916072	0					
ANR	1916295	Identifier	master_to_zval		1916072	0					
ANR	1916296	ArgumentList	& val		1916072	1					
ANR	1916297	Argument	& val		1916072	0					
ANR	1916298	UnaryOperationExpression	& val		1916072	0					
ANR	1916299	UnaryOperator	&		1916072	0					
ANR	1916300	Identifier	val		1916072	1					
ANR	1916301	Argument	model -> u . element -> encode		1916072	1					
ANR	1916302	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916303	MemberAccess	model -> u . element		1916072	0					
ANR	1916304	PtrMemberAccess	model -> u		1916072	0					
ANR	1916305	Identifier	model		1916072	0					
ANR	1916306	Identifier	u		1916072	1					
ANR	1916307	Identifier	element		1916072	1					
ANR	1916308	Identifier	encode		1916072	1					
ANR	1916309	Argument	dummy		1916072	2					
ANR	1916310	Identifier	dummy		1916072	0					
ANR	1916311	ExpressionStatement	xmlFreeNode ( dummy )	1332:6:43824:43842	1916072	3	True				
ANR	1916312	CallExpression	xmlFreeNode ( dummy )		1916072	0					
ANR	1916313	Callee	xmlFreeNode		1916072	0					
ANR	1916314	Identifier	xmlFreeNode		1916072	0					
ANR	1916315	ArgumentList	dummy		1916072	1					
ANR	1916316	Argument	dummy		1916072	0					
ANR	1916317	Identifier	dummy		1916072	0					
ANR	1916318	ElseStatement	else		1916072	0					
ANR	1916319	IfStatement	if ( model -> u . element -> def && ! model -> u . element -> nillable )		1916072	0					
ANR	1916320	Condition	model -> u . element -> def && ! model -> u . element -> nillable	1333:16:43860:43911	1916072	0	True				
ANR	1916321	AndExpression	model -> u . element -> def && ! model -> u . element -> nillable		1916072	0		&&			
ANR	1916322	PtrMemberAccess	model -> u . element -> def		1916072	0					
ANR	1916323	MemberAccess	model -> u . element		1916072	0					
ANR	1916324	PtrMemberAccess	model -> u		1916072	0					
ANR	1916325	Identifier	model		1916072	0					
ANR	1916326	Identifier	u		1916072	1					
ANR	1916327	Identifier	element		1916072	1					
ANR	1916328	Identifier	def		1916072	1					
ANR	1916329	UnaryOperationExpression	! model -> u . element -> nillable		1916072	1					
ANR	1916330	UnaryOperator	!		1916072	0					
ANR	1916331	PtrMemberAccess	model -> u . element -> nillable		1916072	1					
ANR	1916332	MemberAccess	model -> u . element		1916072	0					
ANR	1916333	PtrMemberAccess	model -> u		1916072	0					
ANR	1916334	Identifier	model		1916072	0					
ANR	1916335	Identifier	u		1916072	1					
ANR	1916336	Identifier	element		1916072	1					
ANR	1916337	Identifier	nillable		1916072	1					
ANR	1916338	CompoundStatement		24:6:1047:1101	1916072	1					
ANR	1916339	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1334:6:43922:43976	1916072	0	True				
ANR	1916340	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	0					
ANR	1916341	IdentifierDeclType	xmlNodePtr		1916072	0					
ANR	1916342	Identifier	dummy		1916072	1					
ANR	1916343	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	2		=			
ANR	1916344	Identifier	dummy		1916072	0					
ANR	1916345	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	1					
ANR	1916346	Callee	xmlNewNode		1916072	0					
ANR	1916347	Identifier	xmlNewNode		1916072	0					
ANR	1916348	ArgumentList	NULL		1916072	1					
ANR	1916349	Argument	NULL		1916072	0					
ANR	1916350	Identifier	NULL		1916072	0					
ANR	1916351	Argument	"BAD_CAST ( ""BOGUS"" )"		1916072	1					
ANR	1916352	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1916072	0					
ANR	1916353	Callee	BAD_CAST		1916072	0					
ANR	1916354	Identifier	BAD_CAST		1916072	0					
ANR	1916355	ArgumentList	"""BOGUS"""		1916072	1					
ANR	1916356	Argument	"""BOGUS"""		1916072	0					
ANR	1916357	PrimaryExpression	"""BOGUS"""		1916072	0					
ANR	1916358	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"	1335:6:43984:44041	1916072	1	True				
ANR	1916359	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"		1916072	0					
ANR	1916360	Callee	xmlNodeSetContent		1916072	0					
ANR	1916361	Identifier	xmlNodeSetContent		1916072	0					
ANR	1916362	ArgumentList	dummy		1916072	1					
ANR	1916363	Argument	dummy		1916072	0					
ANR	1916364	Identifier	dummy		1916072	0					
ANR	1916365	Argument	BAD_CAST ( model -> u . element -> def )		1916072	1					
ANR	1916366	CallExpression	BAD_CAST ( model -> u . element -> def )		1916072	0					
ANR	1916367	Callee	BAD_CAST		1916072	0					
ANR	1916368	Identifier	BAD_CAST		1916072	0					
ANR	1916369	ArgumentList	model -> u . element -> def		1916072	1					
ANR	1916370	Argument	model -> u . element -> def		1916072	0					
ANR	1916371	PtrMemberAccess	model -> u . element -> def		1916072	0					
ANR	1916372	MemberAccess	model -> u . element		1916072	0					
ANR	1916373	PtrMemberAccess	model -> u		1916072	0					
ANR	1916374	Identifier	model		1916072	0					
ANR	1916375	Identifier	u		1916072	1					
ANR	1916376	Identifier	element		1916072	1					
ANR	1916377	Identifier	def		1916072	1					
ANR	1916378	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , dummy )"	1336:6:44049:44102	1916072	2	True				
ANR	1916379	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , dummy )"		1916072	0					
ANR	1916380	Callee	master_to_zval		1916072	0					
ANR	1916381	Identifier	master_to_zval		1916072	0					
ANR	1916382	ArgumentList	& val		1916072	1					
ANR	1916383	Argument	& val		1916072	0					
ANR	1916384	UnaryOperationExpression	& val		1916072	0					
ANR	1916385	UnaryOperator	&		1916072	0					
ANR	1916386	Identifier	val		1916072	1					
ANR	1916387	Argument	model -> u . element -> encode		1916072	1					
ANR	1916388	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916389	MemberAccess	model -> u . element		1916072	0					
ANR	1916390	PtrMemberAccess	model -> u		1916072	0					
ANR	1916391	Identifier	model		1916072	0					
ANR	1916392	Identifier	u		1916072	1					
ANR	1916393	Identifier	element		1916072	1					
ANR	1916394	Identifier	encode		1916072	1					
ANR	1916395	Argument	dummy		1916072	2					
ANR	1916396	Identifier	dummy		1916072	0					
ANR	1916397	ExpressionStatement	xmlFreeNode ( dummy )	1337:6:44110:44128	1916072	3	True				
ANR	1916398	CallExpression	xmlFreeNode ( dummy )		1916072	0					
ANR	1916399	Callee	xmlFreeNode		1916072	0					
ANR	1916400	Identifier	xmlFreeNode		1916072	0					
ANR	1916401	ArgumentList	dummy		1916072	1					
ANR	1916402	Argument	dummy		1916072	0					
ANR	1916403	Identifier	dummy		1916072	0					
ANR	1916404	ElseStatement	else		1916072	0					
ANR	1916405	CompoundStatement		28:12:1267:1267	1916072	0					
ANR	1916406	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , r_node )"	1339:6:44150:44204	1916072	0	True				
ANR	1916407	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , r_node )"		1916072	0					
ANR	1916408	Callee	master_to_zval		1916072	0					
ANR	1916409	Identifier	master_to_zval		1916072	0					
ANR	1916410	ArgumentList	& val		1916072	1					
ANR	1916411	Argument	& val		1916072	0					
ANR	1916412	UnaryOperationExpression	& val		1916072	0					
ANR	1916413	UnaryOperator	&		1916072	0					
ANR	1916414	Identifier	val		1916072	1					
ANR	1916415	Argument	model -> u . element -> encode		1916072	1					
ANR	1916416	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916417	MemberAccess	model -> u . element		1916072	0					
ANR	1916418	PtrMemberAccess	model -> u		1916072	0					
ANR	1916419	Identifier	model		1916072	0					
ANR	1916420	Identifier	u		1916072	1					
ANR	1916421	Identifier	element		1916072	1					
ANR	1916422	Identifier	encode		1916072	1					
ANR	1916423	Argument	r_node		1916072	2					
ANR	1916424	Identifier	r_node		1916072	0					
ANR	1916425	IfStatement	"if ( ( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL )"		1916072	5					
ANR	1916426	Condition	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"	1341:9:44222:44282	1916072	0	True				
ANR	1916427	EqualityExpression	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"		1916072	0		!=			
ANR	1916428	AssignmentExpression	"node = get_node ( node -> next , model -> u . element -> name )"		1916072	0		=			
ANR	1916429	Identifier	node		1916072	0					
ANR	1916430	CallExpression	"get_node ( node -> next , model -> u . element -> name )"		1916072	1					
ANR	1916431	Callee	get_node		1916072	0					
ANR	1916432	Identifier	get_node		1916072	0					
ANR	1916433	ArgumentList	node -> next		1916072	1					
ANR	1916434	Argument	node -> next		1916072	0					
ANR	1916435	PtrMemberAccess	node -> next		1916072	0					
ANR	1916436	Identifier	node		1916072	0					
ANR	1916437	Identifier	next		1916072	1					
ANR	1916438	Argument	model -> u . element -> name		1916072	1					
ANR	1916439	PtrMemberAccess	model -> u . element -> name		1916072	0					
ANR	1916440	MemberAccess	model -> u . element		1916072	0					
ANR	1916441	PtrMemberAccess	model -> u		1916072	0					
ANR	1916442	Identifier	model		1916072	0					
ANR	1916443	Identifier	u		1916072	1					
ANR	1916444	Identifier	element		1916072	1					
ANR	1916445	Identifier	name		1916072	1					
ANR	1916446	Identifier	NULL		1916072	1					
ANR	1916447	CompoundStatement		32:6:1418:1428	1916072	1					
ANR	1916448	IdentifierDeclStatement	zval array ;	1342:6:44293:44303	1916072	0	True				
ANR	1916449	IdentifierDecl	array		1916072	0					
ANR	1916450	IdentifierDeclType	zval		1916072	0					
ANR	1916451	Identifier	array		1916072	1					
ANR	1916452	ExpressionStatement	array_init ( & array )	1344:6:44312:44330	1916072	1	True				
ANR	1916453	CallExpression	array_init ( & array )		1916072	0					
ANR	1916454	Callee	array_init		1916072	0					
ANR	1916455	Identifier	array_init		1916072	0					
ANR	1916456	ArgumentList	& array		1916072	1					
ANR	1916457	Argument	& array		1916072	0					
ANR	1916458	UnaryOperationExpression	& array		1916072	0					
ANR	1916459	UnaryOperator	&		1916072	0					
ANR	1916460	Identifier	array		1916072	1					
ANR	1916461	ExpressionStatement	"add_next_index_zval ( & array , & val )"	1345:6:44338:44371	1916072	2	True				
ANR	1916462	CallExpression	"add_next_index_zval ( & array , & val )"		1916072	0					
ANR	1916463	Callee	add_next_index_zval		1916072	0					
ANR	1916464	Identifier	add_next_index_zval		1916072	0					
ANR	1916465	ArgumentList	& array		1916072	1					
ANR	1916466	Argument	& array		1916072	0					
ANR	1916467	UnaryOperationExpression	& array		1916072	0					
ANR	1916468	UnaryOperator	&		1916072	0					
ANR	1916469	Identifier	array		1916072	1					
ANR	1916470	Argument	& val		1916072	1					
ANR	1916471	UnaryOperationExpression	& val		1916072	0					
ANR	1916472	UnaryOperator	&		1916072	0					
ANR	1916473	Identifier	val		1916072	1					
ANR	1916474	DoStatement	do		1916072	3					
ANR	1916475	CompoundStatement		36:9:1507:1507	1916072	0					
ANR	1916476	IfStatement	if ( node && node -> children && node -> children -> content )		1916072	0					
ANR	1916477	Condition	node && node -> children && node -> children -> content	1347:11:44395:44443	1916072	0	True				
ANR	1916478	AndExpression	node && node -> children && node -> children -> content		1916072	0		&&			
ANR	1916479	Identifier	node		1916072	0					
ANR	1916480	AndExpression	node -> children && node -> children -> content		1916072	1		&&			
ANR	1916481	PtrMemberAccess	node -> children		1916072	0					
ANR	1916482	Identifier	node		1916072	0					
ANR	1916483	Identifier	children		1916072	1					
ANR	1916484	PtrMemberAccess	node -> children -> content		1916072	1					
ANR	1916485	PtrMemberAccess	node -> children		1916072	0					
ANR	1916486	Identifier	node		1916072	0					
ANR	1916487	Identifier	children		1916072	1					
ANR	1916488	Identifier	content		1916072	1					
ANR	1916489	CompoundStatement		37:62:1571:1571	1916072	1					
ANR	1916490	IfStatement	"if ( model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0 )"		1916072	0					
ANR	1916491	Condition	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0"	1348:12:44460:44554	1916072	0	True				
ANR	1916492	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0"		1916072	0		&&			
ANR	1916493	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916494	MemberAccess	model -> u . element		1916072	0					
ANR	1916495	PtrMemberAccess	model -> u		1916072	0					
ANR	1916496	Identifier	model		1916072	0					
ANR	1916497	Identifier	u		1916072	1					
ANR	1916498	Identifier	element		1916072	1					
ANR	1916499	Identifier	fixed		1916072	1					
ANR	1916500	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content ) != 0"		1916072	1		!=			
ANR	1916501	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) node -> children -> content )"		1916072	0					
ANR	1916502	Callee	strcmp		1916072	0					
ANR	1916503	Identifier	strcmp		1916072	0					
ANR	1916504	ArgumentList	model -> u . element -> fixed		1916072	1					
ANR	1916505	Argument	model -> u . element -> fixed		1916072	0					
ANR	1916506	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916507	MemberAccess	model -> u . element		1916072	0					
ANR	1916508	PtrMemberAccess	model -> u		1916072	0					
ANR	1916509	Identifier	model		1916072	0					
ANR	1916510	Identifier	u		1916072	1					
ANR	1916511	Identifier	element		1916072	1					
ANR	1916512	Identifier	fixed		1916072	1					
ANR	1916513	Argument	( char * ) node -> children -> content		1916072	1					
ANR	1916514	CastExpression	( char * ) node -> children -> content		1916072	0					
ANR	1916515	CastTarget	char *		1916072	0					
ANR	1916516	PtrMemberAccess	node -> children -> content		1916072	1					
ANR	1916517	PtrMemberAccess	node -> children		1916072	0					
ANR	1916518	Identifier	node		1916072	0					
ANR	1916519	Identifier	children		1916072	1					
ANR	1916520	Identifier	content		1916072	1					
ANR	1916521	PrimaryExpression	0		1916072	1					
ANR	1916522	CompoundStatement		38:109:1682:1682	1916072	1					
ANR	1916523	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , node -> children -> content )"	1349:9:44568:44737	1916072	0	True				
ANR	1916524	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , node -> children -> content )"		1916072	0					
ANR	1916525	Callee	soap_error3		1916072	0					
ANR	1916526	Identifier	soap_error3		1916072	0					
ANR	1916527	ArgumentList	E_ERROR		1916072	1					
ANR	1916528	Argument	E_ERROR		1916072	0					
ANR	1916529	Identifier	E_ERROR		1916072	0					
ANR	1916530	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1916072	1					
ANR	1916531	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1916072	0					
ANR	1916532	Argument	model -> u . element -> name		1916072	2					
ANR	1916533	PtrMemberAccess	model -> u . element -> name		1916072	0					
ANR	1916534	MemberAccess	model -> u . element		1916072	0					
ANR	1916535	PtrMemberAccess	model -> u		1916072	0					
ANR	1916536	Identifier	model		1916072	0					
ANR	1916537	Identifier	u		1916072	1					
ANR	1916538	Identifier	element		1916072	1					
ANR	1916539	Identifier	name		1916072	1					
ANR	1916540	Argument	model -> u . element -> fixed		1916072	3					
ANR	1916541	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916542	MemberAccess	model -> u . element		1916072	0					
ANR	1916543	PtrMemberAccess	model -> u		1916072	0					
ANR	1916544	Identifier	model		1916072	0					
ANR	1916545	Identifier	u		1916072	1					
ANR	1916546	Identifier	element		1916072	1					
ANR	1916547	Identifier	fixed		1916072	1					
ANR	1916548	Argument	node -> children -> content		1916072	4					
ANR	1916549	PtrMemberAccess	node -> children -> content		1916072	0					
ANR	1916550	PtrMemberAccess	node -> children		1916072	0					
ANR	1916551	Identifier	node		1916072	0					
ANR	1916552	Identifier	children		1916072	1					
ANR	1916553	Identifier	content		1916072	1					
ANR	1916554	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , node )"	1351:8:44757:44809	1916072	1	True				
ANR	1916555	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , node )"		1916072	0					
ANR	1916556	Callee	master_to_zval		1916072	0					
ANR	1916557	Identifier	master_to_zval		1916072	0					
ANR	1916558	ArgumentList	& val		1916072	1					
ANR	1916559	Argument	& val		1916072	0					
ANR	1916560	UnaryOperationExpression	& val		1916072	0					
ANR	1916561	UnaryOperator	&		1916072	0					
ANR	1916562	Identifier	val		1916072	1					
ANR	1916563	Argument	model -> u . element -> encode		1916072	1					
ANR	1916564	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916565	MemberAccess	model -> u . element		1916072	0					
ANR	1916566	PtrMemberAccess	model -> u		1916072	0					
ANR	1916567	Identifier	model		1916072	0					
ANR	1916568	Identifier	u		1916072	1					
ANR	1916569	Identifier	element		1916072	1					
ANR	1916570	Identifier	encode		1916072	1					
ANR	1916571	Argument	node		1916072	2					
ANR	1916572	Identifier	node		1916072	0					
ANR	1916573	ElseStatement	else		1916072	0					
ANR	1916574	IfStatement	if ( model -> u . element -> fixed )		1916072	0					
ANR	1916575	Condition	model -> u . element -> fixed	1352:18:44829:44851	1916072	0	True				
ANR	1916576	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916577	MemberAccess	model -> u . element		1916072	0					
ANR	1916578	PtrMemberAccess	model -> u		1916072	0					
ANR	1916579	Identifier	model		1916072	0					
ANR	1916580	Identifier	u		1916072	1					
ANR	1916581	Identifier	element		1916072	1					
ANR	1916582	Identifier	fixed		1916072	1					
ANR	1916583	CompoundStatement		43:8:1989:2043	1916072	1					
ANR	1916584	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1353:8:44864:44918	1916072	0	True				
ANR	1916585	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	0					
ANR	1916586	IdentifierDeclType	xmlNodePtr		1916072	0					
ANR	1916587	Identifier	dummy		1916072	1					
ANR	1916588	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	2		=			
ANR	1916589	Identifier	dummy		1916072	0					
ANR	1916590	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	1					
ANR	1916591	Callee	xmlNewNode		1916072	0					
ANR	1916592	Identifier	xmlNewNode		1916072	0					
ANR	1916593	ArgumentList	NULL		1916072	1					
ANR	1916594	Argument	NULL		1916072	0					
ANR	1916595	Identifier	NULL		1916072	0					
ANR	1916596	Argument	"BAD_CAST ( ""BOGUS"" )"		1916072	1					
ANR	1916597	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1916072	0					
ANR	1916598	Callee	BAD_CAST		1916072	0					
ANR	1916599	Identifier	BAD_CAST		1916072	0					
ANR	1916600	ArgumentList	"""BOGUS"""		1916072	1					
ANR	1916601	Argument	"""BOGUS"""		1916072	0					
ANR	1916602	PrimaryExpression	"""BOGUS"""		1916072	0					
ANR	1916603	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"	1354:8:44928:44987	1916072	1	True				
ANR	1916604	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> fixed ) )"		1916072	0					
ANR	1916605	Callee	xmlNodeSetContent		1916072	0					
ANR	1916606	Identifier	xmlNodeSetContent		1916072	0					
ANR	1916607	ArgumentList	dummy		1916072	1					
ANR	1916608	Argument	dummy		1916072	0					
ANR	1916609	Identifier	dummy		1916072	0					
ANR	1916610	Argument	BAD_CAST ( model -> u . element -> fixed )		1916072	1					
ANR	1916611	CallExpression	BAD_CAST ( model -> u . element -> fixed )		1916072	0					
ANR	1916612	Callee	BAD_CAST		1916072	0					
ANR	1916613	Identifier	BAD_CAST		1916072	0					
ANR	1916614	ArgumentList	model -> u . element -> fixed		1916072	1					
ANR	1916615	Argument	model -> u . element -> fixed		1916072	0					
ANR	1916616	PtrMemberAccess	model -> u . element -> fixed		1916072	0					
ANR	1916617	MemberAccess	model -> u . element		1916072	0					
ANR	1916618	PtrMemberAccess	model -> u		1916072	0					
ANR	1916619	Identifier	model		1916072	0					
ANR	1916620	Identifier	u		1916072	1					
ANR	1916621	Identifier	element		1916072	1					
ANR	1916622	Identifier	fixed		1916072	1					
ANR	1916623	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , dummy )"	1355:8:44997:45050	1916072	2	True				
ANR	1916624	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , dummy )"		1916072	0					
ANR	1916625	Callee	master_to_zval		1916072	0					
ANR	1916626	Identifier	master_to_zval		1916072	0					
ANR	1916627	ArgumentList	& val		1916072	1					
ANR	1916628	Argument	& val		1916072	0					
ANR	1916629	UnaryOperationExpression	& val		1916072	0					
ANR	1916630	UnaryOperator	&		1916072	0					
ANR	1916631	Identifier	val		1916072	1					
ANR	1916632	Argument	model -> u . element -> encode		1916072	1					
ANR	1916633	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916634	MemberAccess	model -> u . element		1916072	0					
ANR	1916635	PtrMemberAccess	model -> u		1916072	0					
ANR	1916636	Identifier	model		1916072	0					
ANR	1916637	Identifier	u		1916072	1					
ANR	1916638	Identifier	element		1916072	1					
ANR	1916639	Identifier	encode		1916072	1					
ANR	1916640	Argument	dummy		1916072	2					
ANR	1916641	Identifier	dummy		1916072	0					
ANR	1916642	ExpressionStatement	xmlFreeNode ( dummy )	1356:8:45060:45078	1916072	3	True				
ANR	1916643	CallExpression	xmlFreeNode ( dummy )		1916072	0					
ANR	1916644	Callee	xmlFreeNode		1916072	0					
ANR	1916645	Identifier	xmlFreeNode		1916072	0					
ANR	1916646	ArgumentList	dummy		1916072	1					
ANR	1916647	Argument	dummy		1916072	0					
ANR	1916648	Identifier	dummy		1916072	0					
ANR	1916649	ElseStatement	else		1916072	0					
ANR	1916650	IfStatement	if ( model -> u . element -> def && ! model -> u . element -> nillable )		1916072	0					
ANR	1916651	Condition	model -> u . element -> def && ! model -> u . element -> nillable	1357:18:45098:45149	1916072	0	True				
ANR	1916652	AndExpression	model -> u . element -> def && ! model -> u . element -> nillable		1916072	0		&&			
ANR	1916653	PtrMemberAccess	model -> u . element -> def		1916072	0					
ANR	1916654	MemberAccess	model -> u . element		1916072	0					
ANR	1916655	PtrMemberAccess	model -> u		1916072	0					
ANR	1916656	Identifier	model		1916072	0					
ANR	1916657	Identifier	u		1916072	1					
ANR	1916658	Identifier	element		1916072	1					
ANR	1916659	Identifier	def		1916072	1					
ANR	1916660	UnaryOperationExpression	! model -> u . element -> nillable		1916072	1					
ANR	1916661	UnaryOperator	!		1916072	0					
ANR	1916662	PtrMemberAccess	model -> u . element -> nillable		1916072	1					
ANR	1916663	MemberAccess	model -> u . element		1916072	0					
ANR	1916664	PtrMemberAccess	model -> u		1916072	0					
ANR	1916665	Identifier	model		1916072	0					
ANR	1916666	Identifier	u		1916072	1					
ANR	1916667	Identifier	element		1916072	1					
ANR	1916668	Identifier	nillable		1916072	1					
ANR	1916669	CompoundStatement		48:8:2287:2341	1916072	1					
ANR	1916670	IdentifierDeclStatement	"xmlNodePtr dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) ) ;"	1358:8:45162:45216	1916072	0	True				
ANR	1916671	IdentifierDecl	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	0					
ANR	1916672	IdentifierDeclType	xmlNodePtr		1916072	0					
ANR	1916673	Identifier	dummy		1916072	1					
ANR	1916674	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	2		=			
ANR	1916675	Identifier	dummy		1916072	0					
ANR	1916676	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1916072	1					
ANR	1916677	Callee	xmlNewNode		1916072	0					
ANR	1916678	Identifier	xmlNewNode		1916072	0					
ANR	1916679	ArgumentList	NULL		1916072	1					
ANR	1916680	Argument	NULL		1916072	0					
ANR	1916681	Identifier	NULL		1916072	0					
ANR	1916682	Argument	"BAD_CAST ( ""BOGUS"" )"		1916072	1					
ANR	1916683	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1916072	0					
ANR	1916684	Callee	BAD_CAST		1916072	0					
ANR	1916685	Identifier	BAD_CAST		1916072	0					
ANR	1916686	ArgumentList	"""BOGUS"""		1916072	1					
ANR	1916687	Argument	"""BOGUS"""		1916072	0					
ANR	1916688	PrimaryExpression	"""BOGUS"""		1916072	0					
ANR	1916689	ExpressionStatement	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"	1359:8:45226:45283	1916072	1	True				
ANR	1916690	CallExpression	"xmlNodeSetContent ( dummy , BAD_CAST ( model -> u . element -> def ) )"		1916072	0					
ANR	1916691	Callee	xmlNodeSetContent		1916072	0					
ANR	1916692	Identifier	xmlNodeSetContent		1916072	0					
ANR	1916693	ArgumentList	dummy		1916072	1					
ANR	1916694	Argument	dummy		1916072	0					
ANR	1916695	Identifier	dummy		1916072	0					
ANR	1916696	Argument	BAD_CAST ( model -> u . element -> def )		1916072	1					
ANR	1916697	CallExpression	BAD_CAST ( model -> u . element -> def )		1916072	0					
ANR	1916698	Callee	BAD_CAST		1916072	0					
ANR	1916699	Identifier	BAD_CAST		1916072	0					
ANR	1916700	ArgumentList	model -> u . element -> def		1916072	1					
ANR	1916701	Argument	model -> u . element -> def		1916072	0					
ANR	1916702	PtrMemberAccess	model -> u . element -> def		1916072	0					
ANR	1916703	MemberAccess	model -> u . element		1916072	0					
ANR	1916704	PtrMemberAccess	model -> u		1916072	0					
ANR	1916705	Identifier	model		1916072	0					
ANR	1916706	Identifier	u		1916072	1					
ANR	1916707	Identifier	element		1916072	1					
ANR	1916708	Identifier	def		1916072	1					
ANR	1916709	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , dummy )"	1360:8:45293:45346	1916072	2	True				
ANR	1916710	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , dummy )"		1916072	0					
ANR	1916711	Callee	master_to_zval		1916072	0					
ANR	1916712	Identifier	master_to_zval		1916072	0					
ANR	1916713	ArgumentList	& val		1916072	1					
ANR	1916714	Argument	& val		1916072	0					
ANR	1916715	UnaryOperationExpression	& val		1916072	0					
ANR	1916716	UnaryOperator	&		1916072	0					
ANR	1916717	Identifier	val		1916072	1					
ANR	1916718	Argument	model -> u . element -> encode		1916072	1					
ANR	1916719	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916720	MemberAccess	model -> u . element		1916072	0					
ANR	1916721	PtrMemberAccess	model -> u		1916072	0					
ANR	1916722	Identifier	model		1916072	0					
ANR	1916723	Identifier	u		1916072	1					
ANR	1916724	Identifier	element		1916072	1					
ANR	1916725	Identifier	encode		1916072	1					
ANR	1916726	Argument	dummy		1916072	2					
ANR	1916727	Identifier	dummy		1916072	0					
ANR	1916728	ExpressionStatement	xmlFreeNode ( dummy )	1361:8:45356:45374	1916072	3	True				
ANR	1916729	CallExpression	xmlFreeNode ( dummy )		1916072	0					
ANR	1916730	Callee	xmlFreeNode		1916072	0					
ANR	1916731	Identifier	xmlFreeNode		1916072	0					
ANR	1916732	ArgumentList	dummy		1916072	1					
ANR	1916733	Argument	dummy		1916072	0					
ANR	1916734	Identifier	dummy		1916072	0					
ANR	1916735	ElseStatement	else		1916072	0					
ANR	1916736	CompoundStatement		52:14:2515:2515	1916072	0					
ANR	1916737	ExpressionStatement	"master_to_zval ( & val , model -> u . element -> encode , node )"	1363:8:45400:45452	1916072	0	True				
ANR	1916738	CallExpression	"master_to_zval ( & val , model -> u . element -> encode , node )"		1916072	0					
ANR	1916739	Callee	master_to_zval		1916072	0					
ANR	1916740	Identifier	master_to_zval		1916072	0					
ANR	1916741	ArgumentList	& val		1916072	1					
ANR	1916742	Argument	& val		1916072	0					
ANR	1916743	UnaryOperationExpression	& val		1916072	0					
ANR	1916744	UnaryOperator	&		1916072	0					
ANR	1916745	Identifier	val		1916072	1					
ANR	1916746	Argument	model -> u . element -> encode		1916072	1					
ANR	1916747	PtrMemberAccess	model -> u . element -> encode		1916072	0					
ANR	1916748	MemberAccess	model -> u . element		1916072	0					
ANR	1916749	PtrMemberAccess	model -> u		1916072	0					
ANR	1916750	Identifier	model		1916072	0					
ANR	1916751	Identifier	u		1916072	1					
ANR	1916752	Identifier	element		1916072	1					
ANR	1916753	Identifier	encode		1916072	1					
ANR	1916754	Argument	node		1916072	2					
ANR	1916755	Identifier	node		1916072	0					
ANR	1916756	ExpressionStatement	"add_next_index_zval ( & array , & val )"	1365:7:45470:45503	1916072	1	True				
ANR	1916757	CallExpression	"add_next_index_zval ( & array , & val )"		1916072	0					
ANR	1916758	Callee	add_next_index_zval		1916072	0					
ANR	1916759	Identifier	add_next_index_zval		1916072	0					
ANR	1916760	ArgumentList	& array		1916072	1					
ANR	1916761	Argument	& array		1916072	0					
ANR	1916762	UnaryOperationExpression	& array		1916072	0					
ANR	1916763	UnaryOperator	&		1916072	0					
ANR	1916764	Identifier	array		1916072	1					
ANR	1916765	Argument	& val		1916072	1					
ANR	1916766	UnaryOperationExpression	& val		1916072	0					
ANR	1916767	UnaryOperator	&		1916072	0					
ANR	1916768	Identifier	val		1916072	1					
ANR	1916769	Condition	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"	1366:15:45520:45580	1916072	1	True				
ANR	1916770	EqualityExpression	"( node = get_node ( node -> next , model -> u . element -> name ) ) != NULL"		1916072	0		!=			
ANR	1916771	AssignmentExpression	"node = get_node ( node -> next , model -> u . element -> name )"		1916072	0		=			
ANR	1916772	Identifier	node		1916072	0					
ANR	1916773	CallExpression	"get_node ( node -> next , model -> u . element -> name )"		1916072	1					
ANR	1916774	Callee	get_node		1916072	0					
ANR	1916775	Identifier	get_node		1916072	0					
ANR	1916776	ArgumentList	node -> next		1916072	1					
ANR	1916777	Argument	node -> next		1916072	0					
ANR	1916778	PtrMemberAccess	node -> next		1916072	0					
ANR	1916779	Identifier	node		1916072	0					
ANR	1916780	Identifier	next		1916072	1					
ANR	1916781	Argument	model -> u . element -> name		1916072	1					
ANR	1916782	PtrMemberAccess	model -> u . element -> name		1916072	0					
ANR	1916783	MemberAccess	model -> u . element		1916072	0					
ANR	1916784	PtrMemberAccess	model -> u		1916072	0					
ANR	1916785	Identifier	model		1916072	0					
ANR	1916786	Identifier	u		1916072	1					
ANR	1916787	Identifier	element		1916072	1					
ANR	1916788	Identifier	name		1916072	1					
ANR	1916789	Identifier	NULL		1916072	1					
ANR	1916790	ExpressionStatement	"ZVAL_COPY_VALUE ( & val , & array )"	1367:6:45590:45619	1916072	4	True				
ANR	1916791	CallExpression	"ZVAL_COPY_VALUE ( & val , & array )"		1916072	0					
ANR	1916792	Callee	ZVAL_COPY_VALUE		1916072	0					
ANR	1916793	Identifier	ZVAL_COPY_VALUE		1916072	0					
ANR	1916794	ArgumentList	& val		1916072	1					
ANR	1916795	Argument	& val		1916072	0					
ANR	1916796	UnaryOperationExpression	& val		1916072	0					
ANR	1916797	UnaryOperator	&		1916072	0					
ANR	1916798	Identifier	val		1916072	1					
ANR	1916799	Argument	& array		1916072	1					
ANR	1916800	UnaryOperationExpression	& array		1916072	0					
ANR	1916801	UnaryOperator	&		1916072	0					
ANR	1916802	Identifier	array		1916072	1					
ANR	1916803	ElseStatement	else		1916072	0					
ANR	1916804	IfStatement	if ( ( Z_TYPE ( val ) != IS_NULL || ! model -> u . element -> nillable ) && ( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 ) )		1916072	0					
ANR	1916805	Condition	( Z_TYPE ( val ) != IS_NULL || ! model -> u . element -> nillable ) && ( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 )	1368:16:45637:45833	1916072	0	True				
ANR	1916806	AndExpression	( Z_TYPE ( val ) != IS_NULL || ! model -> u . element -> nillable ) && ( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 )		1916072	0		&&			
ANR	1916807	OrExpression	Z_TYPE ( val ) != IS_NULL || ! model -> u . element -> nillable		1916072	0		||			
ANR	1916808	EqualityExpression	Z_TYPE ( val ) != IS_NULL		1916072	0		!=			
ANR	1916809	CallExpression	Z_TYPE ( val )		1916072	0					
ANR	1916810	Callee	Z_TYPE		1916072	0					
ANR	1916811	Identifier	Z_TYPE		1916072	0					
ANR	1916812	ArgumentList	val		1916072	1					
ANR	1916813	Argument	val		1916072	0					
ANR	1916814	Identifier	val		1916072	0					
ANR	1916815	Identifier	IS_NULL		1916072	1					
ANR	1916816	UnaryOperationExpression	! model -> u . element -> nillable		1916072	1					
ANR	1916817	UnaryOperator	!		1916072	0					
ANR	1916818	PtrMemberAccess	model -> u . element -> nillable		1916072	1					
ANR	1916819	MemberAccess	model -> u . element		1916072	0					
ANR	1916820	PtrMemberAccess	model -> u		1916072	0					
ANR	1916821	Identifier	model		1916072	0					
ANR	1916822	Identifier	u		1916072	1					
ANR	1916823	Identifier	element		1916072	1					
ANR	1916824	Identifier	nillable		1916072	1					
ANR	1916825	AndExpression	( SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS ) && ( model -> max_occurs == - 1 || model -> max_occurs > 1 )		1916072	1		&&			
ANR	1916826	BitAndExpression	SOAP_GLOBAL ( features ) & SOAP_SINGLE_ELEMENT_ARRAYS		1916072	0		&			
ANR	1916827	CallExpression	SOAP_GLOBAL ( features )		1916072	0					
ANR	1916828	Callee	SOAP_GLOBAL		1916072	0					
ANR	1916829	Identifier	SOAP_GLOBAL		1916072	0					
ANR	1916830	ArgumentList	features		1916072	1					
ANR	1916831	Argument	features		1916072	0					
ANR	1916832	Identifier	features		1916072	0					
ANR	1916833	Identifier	SOAP_SINGLE_ELEMENT_ARRAYS		1916072	1					
ANR	1916834	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1916072	1		||			
ANR	1916835	EqualityExpression	model -> max_occurs == - 1		1916072	0		==			
ANR	1916836	PtrMemberAccess	model -> max_occurs		1916072	0					
ANR	1916837	Identifier	model		1916072	0					
ANR	1916838	Identifier	max_occurs		1916072	1					
ANR	1916839	UnaryOperationExpression	- 1		1916072	1					
ANR	1916840	UnaryOperator	-		1916072	0					
ANR	1916841	PrimaryExpression	1		1916072	1					
ANR	1916842	RelationalExpression	model -> max_occurs > 1		1916072	1		>			
ANR	1916843	PtrMemberAccess	model -> max_occurs		1916072	0					
ANR	1916844	Identifier	model		1916072	0					
ANR	1916845	Identifier	max_occurs		1916072	1					
ANR	1916846	PrimaryExpression	1		1916072	1					
ANR	1916847	CompoundStatement		61:6:2969:2979	1916072	1					
ANR	1916848	IdentifierDeclStatement	zval array ;	1371:6:45844:45854	1916072	0	True				
ANR	1916849	IdentifierDecl	array		1916072	0					
ANR	1916850	IdentifierDeclType	zval		1916072	0					
ANR	1916851	Identifier	array		1916072	1					
ANR	1916852	ExpressionStatement	array_init ( & array )	1373:6:45863:45881	1916072	1	True				
ANR	1916853	CallExpression	array_init ( & array )		1916072	0					
ANR	1916854	Callee	array_init		1916072	0					
ANR	1916855	Identifier	array_init		1916072	0					
ANR	1916856	ArgumentList	& array		1916072	1					
ANR	1916857	Argument	& array		1916072	0					
ANR	1916858	UnaryOperationExpression	& array		1916072	0					
ANR	1916859	UnaryOperator	&		1916072	0					
ANR	1916860	Identifier	array		1916072	1					
ANR	1916861	ExpressionStatement	"add_next_index_zval ( & array , & val )"	1374:6:45889:45922	1916072	2	True				
ANR	1916862	CallExpression	"add_next_index_zval ( & array , & val )"		1916072	0					
ANR	1916863	Callee	add_next_index_zval		1916072	0					
ANR	1916864	Identifier	add_next_index_zval		1916072	0					
ANR	1916865	ArgumentList	& array		1916072	1					
ANR	1916866	Argument	& array		1916072	0					
ANR	1916867	UnaryOperationExpression	& array		1916072	0					
ANR	1916868	UnaryOperator	&		1916072	0					
ANR	1916869	Identifier	array		1916072	1					
ANR	1916870	Argument	& val		1916072	1					
ANR	1916871	UnaryOperationExpression	& val		1916072	0					
ANR	1916872	UnaryOperator	&		1916072	0					
ANR	1916873	Identifier	val		1916072	1					
ANR	1916874	ExpressionStatement	"ZVAL_COPY_VALUE ( & val , & array )"	1375:6:45930:45959	1916072	3	True				
ANR	1916875	CallExpression	"ZVAL_COPY_VALUE ( & val , & array )"		1916072	0					
ANR	1916876	Callee	ZVAL_COPY_VALUE		1916072	0					
ANR	1916877	Identifier	ZVAL_COPY_VALUE		1916072	0					
ANR	1916878	ArgumentList	& val		1916072	1					
ANR	1916879	Argument	& val		1916072	0					
ANR	1916880	UnaryOperationExpression	& val		1916072	0					
ANR	1916881	UnaryOperator	&		1916072	0					
ANR	1916882	Identifier	val		1916072	1					
ANR	1916883	Argument	& array		1916072	1					
ANR	1916884	UnaryOperationExpression	& array		1916072	0					
ANR	1916885	UnaryOperator	&		1916072	0					
ANR	1916886	Identifier	array		1916072	1					
ANR	1916887	ExpressionStatement	"set_zval_property ( ret , model -> u . element -> name , & val )"	1377:5:45973:46025	1916072	6	True				
ANR	1916888	CallExpression	"set_zval_property ( ret , model -> u . element -> name , & val )"		1916072	0					
ANR	1916889	Callee	set_zval_property		1916072	0					
ANR	1916890	Identifier	set_zval_property		1916072	0					
ANR	1916891	ArgumentList	ret		1916072	1					
ANR	1916892	Argument	ret		1916072	0					
ANR	1916893	Identifier	ret		1916072	0					
ANR	1916894	Argument	model -> u . element -> name		1916072	1					
ANR	1916895	PtrMemberAccess	model -> u . element -> name		1916072	0					
ANR	1916896	MemberAccess	model -> u . element		1916072	0					
ANR	1916897	PtrMemberAccess	model -> u		1916072	0					
ANR	1916898	Identifier	model		1916072	0					
ANR	1916899	Identifier	u		1916072	1					
ANR	1916900	Identifier	element		1916072	1					
ANR	1916901	Identifier	name		1916072	1					
ANR	1916902	Argument	& val		1916072	2					
ANR	1916903	UnaryOperationExpression	& val		1916072	0					
ANR	1916904	UnaryOperator	&		1916072	0					
ANR	1916905	Identifier	val		1916072	1					
ANR	1916906	BreakStatement	break ;	1380:3:46041:46046	1916072	2	True				
ANR	1916907	Label	case XSD_CONTENT_ALL :	1381:2:46050:46070	1916072	3	True				
ANR	1916908	Identifier	XSD_CONTENT_ALL		1916072	0					
ANR	1916909	Label	case XSD_CONTENT_SEQUENCE :	1382:2:46074:46099	1916072	4	True				
ANR	1916910	Identifier	XSD_CONTENT_SEQUENCE		1916072	0					
ANR	1916911	Label	case XSD_CONTENT_CHOICE :	1383:2:46103:46126	1916072	5	True				
ANR	1916912	Identifier	XSD_CONTENT_CHOICE		1916072	0					
ANR	1916913	CompoundStatement		75:3:3285:3314	1916072	6					
ANR	1916914	IdentifierDeclStatement	sdlContentModelPtr tmp ;	1384:3:46133:46155	1916072	0	True				
ANR	1916915	IdentifierDecl	tmp		1916072	0					
ANR	1916916	IdentifierDeclType	sdlContentModelPtr		1916072	0					
ANR	1916917	Identifier	tmp		1916072	1					
ANR	1916918	IdentifierDeclStatement	sdlContentModelPtr any = NULL ;	1385:3:46160:46189	1916072	1	True				
ANR	1916919	IdentifierDecl	any = NULL		1916072	0					
ANR	1916920	IdentifierDeclType	sdlContentModelPtr		1916072	0					
ANR	1916921	Identifier	any		1916072	1					
ANR	1916922	AssignmentExpression	any = NULL		1916072	2		=			
ANR	1916923	Identifier	NULL		1916072	0					
ANR	1916924	Identifier	NULL		1916072	1					
ANR	1916925	Statement	ZEND_HASH_FOREACH_PTR	1387:3:46195:46215	1916072	2	True				
ANR	1916926	Statement	(	1387:24:46216:46216	1916072	3	True				
ANR	1916927	Statement	model	1387:25:46217:46221	1916072	4	True				
ANR	1916928	Statement	->	1387:30:46222:46223	1916072	5	True				
ANR	1916929	Statement	u	1387:32:46224:46224	1916072	6	True				
ANR	1916930	Statement	.	1387:33:46225:46225	1916072	7	True				
ANR	1916931	Statement	content	1387:34:46226:46232	1916072	8	True				
ANR	1916932	Statement	","	1387:41:46233:46233	1916072	9	True				
ANR	1916933	Statement	tmp	1387:43:46235:46237	1916072	10	True				
ANR	1916934	Statement	)	1387:46:46238:46238	1916072	11	True				
ANR	1916935	CompoundStatement		77:48:3365:3365	1916072	12					
ANR	1916936	IfStatement	if ( tmp -> kind == XSD_CONTENT_ANY )		1916072	0					
ANR	1916937	Condition	tmp -> kind == XSD_CONTENT_ANY	1388:8:46250:46277	1916072	0	True				
ANR	1916938	EqualityExpression	tmp -> kind == XSD_CONTENT_ANY		1916072	0		==			
ANR	1916939	PtrMemberAccess	tmp -> kind		1916072	0					
ANR	1916940	Identifier	tmp		1916072	0					
ANR	1916941	Identifier	kind		1916072	1					
ANR	1916942	Identifier	XSD_CONTENT_ANY		1916072	1					
ANR	1916943	CompoundStatement		78:38:3405:3405	1916072	1					
ANR	1916944	ExpressionStatement	any = tmp	1389:5:46287:46296	1916072	0	True				
ANR	1916945	AssignmentExpression	any = tmp		1916072	0		=			
ANR	1916946	Identifier	any		1916072	0					
ANR	1916947	Identifier	tmp		1916072	1					
ANR	1916948	ElseStatement	else		1916072	0					
ANR	1916949	CompoundStatement		80:11:3434:3434	1916072	0					
ANR	1916950	ExpressionStatement	"model_to_zval_object ( ret , tmp , data , sdl )"	1391:5:46316:46357	1916072	0	True				
ANR	1916951	CallExpression	"model_to_zval_object ( ret , tmp , data , sdl )"		1916072	0					
ANR	1916952	Callee	model_to_zval_object		1916072	0					
ANR	1916953	Identifier	model_to_zval_object		1916072	0					
ANR	1916954	ArgumentList	ret		1916072	1					
ANR	1916955	Argument	ret		1916072	0					
ANR	1916956	Identifier	ret		1916072	0					
ANR	1916957	Argument	tmp		1916072	1					
ANR	1916958	Identifier	tmp		1916072	0					
ANR	1916959	Argument	data		1916072	2					
ANR	1916960	Identifier	data		1916072	0					
ANR	1916961	Argument	sdl		1916072	3					
ANR	1916962	Identifier	sdl		1916072	0					
ANR	1916963	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1393:5:46370:46393	1916072	13	True				
ANR	1916964	CallExpression	ZEND_HASH_FOREACH_END ( )		1916072	0					
ANR	1916965	Callee	ZEND_HASH_FOREACH_END		1916072	0					
ANR	1916966	Identifier	ZEND_HASH_FOREACH_END		1916072	0					
ANR	1916967	ArgumentList			1916072	1					
ANR	1916968	IfStatement	if ( any )		1916072	14					
ANR	1916969	Condition	any	1394:7:46402:46404	1916072	0	True				
ANR	1916970	Identifier	any		1916072	0					
ANR	1916971	CompoundStatement		84:12:3532:3532	1916072	1					
ANR	1916972	ExpressionStatement	"model_to_zval_any ( ret , data -> children )"	1395:4:46413:46451	1916072	0	True				
ANR	1916973	CallExpression	"model_to_zval_any ( ret , data -> children )"		1916072	0					
ANR	1916974	Callee	model_to_zval_any		1916072	0					
ANR	1916975	Identifier	model_to_zval_any		1916072	0					
ANR	1916976	ArgumentList	ret		1916072	1					
ANR	1916977	Argument	ret		1916072	0					
ANR	1916978	Identifier	ret		1916072	0					
ANR	1916979	Argument	data -> children		1916072	1					
ANR	1916980	PtrMemberAccess	data -> children		1916072	0					
ANR	1916981	Identifier	data		1916072	0					
ANR	1916982	Identifier	children		1916072	1					
ANR	1916983	BreakStatement	break ;	1397:3:46461:46466	1916072	15	True				
ANR	1916984	Label	case XSD_CONTENT_GROUP :	1399:2:46474:46496	1916072	7	True				
ANR	1916985	Identifier	XSD_CONTENT_GROUP		1916072	0					
ANR	1916986	ExpressionStatement	"model_to_zval_object ( ret , model -> u . group -> model , data , sdl )"	1400:3:46501:46560	1916072	8	True				
ANR	1916987	CallExpression	"model_to_zval_object ( ret , model -> u . group -> model , data , sdl )"		1916072	0					
ANR	1916988	Callee	model_to_zval_object		1916072	0					
ANR	1916989	Identifier	model_to_zval_object		1916072	0					
ANR	1916990	ArgumentList	ret		1916072	1					
ANR	1916991	Argument	ret		1916072	0					
ANR	1916992	Identifier	ret		1916072	0					
ANR	1916993	Argument	model -> u . group -> model		1916072	1					
ANR	1916994	PtrMemberAccess	model -> u . group -> model		1916072	0					
ANR	1916995	MemberAccess	model -> u . group		1916072	0					
ANR	1916996	PtrMemberAccess	model -> u		1916072	0					
ANR	1916997	Identifier	model		1916072	0					
ANR	1916998	Identifier	u		1916072	1					
ANR	1916999	Identifier	group		1916072	1					
ANR	1917000	Identifier	model		1916072	1					
ANR	1917001	Argument	data		1916072	2					
ANR	1917002	Identifier	data		1916072	0					
ANR	1917003	Argument	sdl		1916072	3					
ANR	1917004	Identifier	sdl		1916072	0					
ANR	1917005	BreakStatement	break ;	1401:3:46565:46570	1916072	9	True				
ANR	1917006	Label	default :	1402:2:46574:46581	1916072	10	True				
ANR	1917007	Identifier	default		1916072	0					
ANR	1917008	BreakStatement	break ;	1403:4:46587:46592	1916072	11	True				
ANR	1917009	ReturnType	static void		1916072	1					
ANR	1917010	Identifier	model_to_zval_object		1916072	2					
ANR	1917011	ParameterList	"zval * ret , sdlContentModelPtr model , xmlNodePtr data , sdlPtr sdl"		1916072	3					
ANR	1917012	Parameter	zval * ret	1310:33:42808:42816	1916072	0	True				
ANR	1917013	ParameterType	zval *		1916072	0					
ANR	1917014	Identifier	ret		1916072	1					
ANR	1917015	Parameter	sdlContentModelPtr model	1310:44:42819:42842	1916072	1	True				
ANR	1917016	ParameterType	sdlContentModelPtr		1916072	0					
ANR	1917017	Identifier	model		1916072	1					
ANR	1917018	Parameter	xmlNodePtr data	1310:70:42845:42859	1916072	2	True				
ANR	1917019	ParameterType	xmlNodePtr		1916072	0					
ANR	1917020	Identifier	data		1916072	1					
ANR	1917021	Parameter	sdlPtr sdl	1310:87:42862:42871	1916072	3	True				
ANR	1917022	ParameterType	sdlPtr		1916072	0					
ANR	1917023	Identifier	sdl		1916072	1					
ANR	1917024	CFGEntryNode	ENTRY		1916072		True				
ANR	1917025	CFGExitNode	EXIT		1916072		True				
ANR	1917026	Symbol	& val		1916072						
ANR	1917027	Symbol	model -> u		1916072						
ANR	1917028	Symbol	data		1916072						
ANR	1917029	Symbol	model -> max_occurs		1916072						
ANR	1917030	Symbol	get_node		1916072						
ANR	1917031	Symbol	* model -> u		1916072						
ANR	1917032	Symbol	Z_TYPE		1916072						
ANR	1917033	Symbol	& array		1916072						
ANR	1917034	Symbol	check_and_resolve_href		1916072						
ANR	1917035	Symbol	dummy		1916072						
ANR	1917036	Symbol	features		1916072						
ANR	1917037	Symbol	XSD_CONTENT_ANY		1916072						
ANR	1917038	Symbol	r_node -> children -> content		1916072						
ANR	1917039	Symbol	tmp		1916072						
ANR	1917040	Symbol	model		1916072						
ANR	1917041	Symbol	* node		1916072						
ANR	1917042	Symbol	model -> u . group		1916072						
ANR	1917043	Symbol	ret		1916072						
ANR	1917044	Symbol	val		1916072						
ANR	1917045	Symbol	strcmp		1916072						
ANR	1917046	Symbol	NULL		1916072						
ANR	1917047	Symbol	model -> u . element -> nillable		1916072						
ANR	1917048	Symbol	* model		1916072						
ANR	1917049	Symbol	tmp -> kind		1916072						
ANR	1917050	Symbol	SOAP_GLOBAL		1916072						
ANR	1917051	Symbol	* model -> u . group		1916072						
ANR	1917052	Symbol	SOAP_SINGLE_ELEMENT_ARRAYS		1916072						
ANR	1917053	Symbol	node		1916072						
ANR	1917054	Symbol	model -> u . element		1916072						
ANR	1917055	Symbol	model -> u . element -> def		1916072						
ANR	1917056	Symbol	* * node		1916072						
ANR	1917057	Symbol	sdl		1916072						
ANR	1917058	Symbol	model -> u . element -> name		1916072						
ANR	1917059	Symbol	node -> children		1916072						
ANR	1917060	Symbol	BAD_CAST		1916072						
ANR	1917061	Symbol	* tmp		1916072						
ANR	1917062	Symbol	* * model		1916072						
ANR	1917063	Symbol	* r_node		1916072						
ANR	1917064	Symbol	* * r_node		1916072						
ANR	1917065	Symbol	model -> u . group -> model		1916072						
ANR	1917066	Symbol	r_node -> children		1916072						
ANR	1917067	Symbol	IS_NULL		1916072						
ANR	1917068	Symbol	array		1916072						
ANR	1917069	Symbol	model -> u . element -> fixed		1916072						
ANR	1917070	Symbol	r_node		1916072						
ANR	1917071	Symbol	model -> u . element -> encode		1916072						
ANR	1917072	Symbol	* node -> children		1916072						
ANR	1917073	Symbol	node -> children -> content		1916072						
ANR	1917074	Symbol	xmlNewNode		1916072						
ANR	1917075	Symbol	node -> next		1916072						
ANR	1917076	Symbol	any		1916072						
ANR	1917077	Symbol	model -> kind		1916072						
ANR	1917078	Symbol	E_ERROR		1916072						
ANR	1917079	Symbol	data -> children		1916072						
ANR	1917080	Symbol	* r_node -> children		1916072						
ANR	1917081	Symbol	* model -> u . element		1916072						
ANR	1917082	Symbol	* data		1916072						
ANR	1917083	Function	to_zval_object_ex	1408:0:46627:52651							
ANR	1917084	FunctionDef	"to_zval_object_ex (zval * ret , encodeTypePtr type , xmlNodePtr data , zend_class_entry * pce)"		1917083	0					
ANR	1917085	CompoundStatement		1409:0:46729:52651	1917083	0					
ANR	1917086	IdentifierDeclStatement	xmlNodePtr trav ;	1410:1:46732:46747	1917083	0	True				
ANR	1917087	IdentifierDecl	trav		1917083	0					
ANR	1917088	IdentifierDeclType	xmlNodePtr		1917083	0					
ANR	1917089	Identifier	trav		1917083	1					
ANR	1917090	IdentifierDeclStatement	sdlPtr sdl ;	1411:1:46750:46760	1917083	1	True				
ANR	1917091	IdentifierDecl	sdl		1917083	0					
ANR	1917092	IdentifierDeclType	sdlPtr		1917083	0					
ANR	1917093	Identifier	sdl		1917083	1					
ANR	1917094	IdentifierDeclStatement	sdlTypePtr sdlType = type -> sdl_type ;	1412:1:46763:46798	1917083	2	True				
ANR	1917095	IdentifierDecl	sdlType = type -> sdl_type		1917083	0					
ANR	1917096	IdentifierDeclType	sdlTypePtr		1917083	0					
ANR	1917097	Identifier	sdlType		1917083	1					
ANR	1917098	AssignmentExpression	sdlType = type -> sdl_type		1917083	2		=			
ANR	1917099	Identifier	sdlType		1917083	0					
ANR	1917100	PtrMemberAccess	type -> sdl_type		1917083	1					
ANR	1917101	Identifier	type		1917083	0					
ANR	1917102	Identifier	sdl_type		1917083	1					
ANR	1917103	IdentifierDeclStatement	zend_class_entry * ce = ZEND_STANDARD_CLASS_DEF_PTR ;	1413:1:46801:46851	1917083	3	True				
ANR	1917104	IdentifierDecl	* ce = ZEND_STANDARD_CLASS_DEF_PTR		1917083	0					
ANR	1917105	IdentifierDeclType	zend_class_entry *		1917083	0					
ANR	1917106	Identifier	ce		1917083	1					
ANR	1917107	AssignmentExpression	* ce = ZEND_STANDARD_CLASS_DEF_PTR		1917083	2		=			
ANR	1917108	Identifier	ZEND_STANDARD_CLASS_DEF_PTR		1917083	0					
ANR	1917109	Identifier	ZEND_STANDARD_CLASS_DEF_PTR		1917083	1					
ANR	1917110	IdentifierDeclStatement	"zval * redo_any = NULL , rv , arr ;"	1414:1:46854:46884	1917083	4	True				
ANR	1917111	IdentifierDecl	* redo_any = NULL		1917083	0					
ANR	1917112	IdentifierDeclType	zval *		1917083	0					
ANR	1917113	Identifier	redo_any		1917083	1					
ANR	1917114	AssignmentExpression	* redo_any = NULL		1917083	2		=			
ANR	1917115	Identifier	NULL		1917083	0					
ANR	1917116	Identifier	NULL		1917083	1					
ANR	1917117	IdentifierDecl	rv		1917083	1					
ANR	1917118	IdentifierDeclType	zval		1917083	0					
ANR	1917119	Identifier	rv		1917083	1					
ANR	1917120	IdentifierDecl	arr		1917083	2					
ANR	1917121	IdentifierDeclType	zval		1917083	0					
ANR	1917122	Identifier	arr		1917083	1					
ANR	1917123	IfStatement	if ( pce )		1917083	5					
ANR	1917124	Condition	pce	1416:5:46892:46894	1917083	0	True				
ANR	1917125	Identifier	pce		1917083	0					
ANR	1917126	CompoundStatement		8:10:167:167	1917083	1					
ANR	1917127	ExpressionStatement	ce = pce	1417:2:46901:46909	1917083	0	True				
ANR	1917128	AssignmentExpression	ce = pce		1917083	0		=			
ANR	1917129	Identifier	ce		1917083	0					
ANR	1917130	Identifier	pce		1917083	1					
ANR	1917131	ElseStatement	else		1917083	0					
ANR	1917132	IfStatement	if ( SOAP_GLOBAL ( class_map ) && type -> type_str )		1917083	0					
ANR	1917133	Condition	SOAP_GLOBAL ( class_map ) && type -> type_str	1418:12:46923:46962	1917083	0	True				
ANR	1917134	AndExpression	SOAP_GLOBAL ( class_map ) && type -> type_str		1917083	0		&&			
ANR	1917135	CallExpression	SOAP_GLOBAL ( class_map )		1917083	0					
ANR	1917136	Callee	SOAP_GLOBAL		1917083	0					
ANR	1917137	Identifier	SOAP_GLOBAL		1917083	0					
ANR	1917138	ArgumentList	class_map		1917083	1					
ANR	1917139	Argument	class_map		1917083	0					
ANR	1917140	Identifier	class_map		1917083	0					
ANR	1917141	PtrMemberAccess	type -> type_str		1917083	1					
ANR	1917142	Identifier	type		1917083	0					
ANR	1917143	Identifier	type_str		1917083	1					
ANR	1917144	CompoundStatement		12:2:271:293	1917083	1					
ANR	1917145	IdentifierDeclStatement	zval * classname ;	1419:2:46969:46997	1917083	0	True				
ANR	1917146	IdentifierDecl	* classname		1917083	0					
ANR	1917147	IdentifierDeclType	zval *		1917083	0					
ANR	1917148	Identifier	classname		1917083	1					
ANR	1917149	IdentifierDeclStatement	zend_class_entry * tmp ;	1420:2:47001:47023	1917083	1	True				
ANR	1917150	IdentifierDecl	* tmp		1917083	0					
ANR	1917151	IdentifierDeclType	zend_class_entry *		1917083	0					
ANR	1917152	Identifier	tmp		1917083	1					
ANR	1917153	IfStatement	"if ( ( classname = zend_hash_str_find ( SOAP_GLOBAL ( class_map ) , type -> type_str , strlen ( type -> type_str ) ) ) != NULL && Z_TYPE_P ( classname ) == IS_STRING && ( tmp = zend_fetch_class ( Z_STR_P ( classname ) , ZEND_FETCH_CLASS_AUTO ) ) != NULL )"		1917083	2					
ANR	1917154	Condition	"( classname = zend_hash_str_find ( SOAP_GLOBAL ( class_map ) , type -> type_str , strlen ( type -> type_str ) ) ) != NULL && Z_TYPE_P ( classname ) == IS_STRING && ( tmp = zend_fetch_class ( Z_STR_P ( classname ) , ZEND_FETCH_CLASS_AUTO ) ) != NULL"	1422:6:47032:47262	1917083	0	True				
ANR	1917155	AndExpression	"( classname = zend_hash_str_find ( SOAP_GLOBAL ( class_map ) , type -> type_str , strlen ( type -> type_str ) ) ) != NULL && Z_TYPE_P ( classname ) == IS_STRING && ( tmp = zend_fetch_class ( Z_STR_P ( classname ) , ZEND_FETCH_CLASS_AUTO ) ) != NULL"		1917083	0		&&			
ANR	1917156	EqualityExpression	"( classname = zend_hash_str_find ( SOAP_GLOBAL ( class_map ) , type -> type_str , strlen ( type -> type_str ) ) ) != NULL"		1917083	0		!=			
ANR	1917157	AssignmentExpression	"classname = zend_hash_str_find ( SOAP_GLOBAL ( class_map ) , type -> type_str , strlen ( type -> type_str ) )"		1917083	0		=			
ANR	1917158	Identifier	classname		1917083	0					
ANR	1917159	CallExpression	"zend_hash_str_find ( SOAP_GLOBAL ( class_map ) , type -> type_str , strlen ( type -> type_str ) )"		1917083	1					
ANR	1917160	Callee	zend_hash_str_find		1917083	0					
ANR	1917161	Identifier	zend_hash_str_find		1917083	0					
ANR	1917162	ArgumentList	SOAP_GLOBAL ( class_map )		1917083	1					
ANR	1917163	Argument	SOAP_GLOBAL ( class_map )		1917083	0					
ANR	1917164	CallExpression	SOAP_GLOBAL ( class_map )		1917083	0					
ANR	1917165	Callee	SOAP_GLOBAL		1917083	0					
ANR	1917166	Identifier	SOAP_GLOBAL		1917083	0					
ANR	1917167	ArgumentList	class_map		1917083	1					
ANR	1917168	Argument	class_map		1917083	0					
ANR	1917169	Identifier	class_map		1917083	0					
ANR	1917170	Argument	type -> type_str		1917083	1					
ANR	1917171	PtrMemberAccess	type -> type_str		1917083	0					
ANR	1917172	Identifier	type		1917083	0					
ANR	1917173	Identifier	type_str		1917083	1					
ANR	1917174	Argument	strlen ( type -> type_str )		1917083	2					
ANR	1917175	CallExpression	strlen ( type -> type_str )		1917083	0					
ANR	1917176	Callee	strlen		1917083	0					
ANR	1917177	Identifier	strlen		1917083	0					
ANR	1917178	ArgumentList	type -> type_str		1917083	1					
ANR	1917179	Argument	type -> type_str		1917083	0					
ANR	1917180	PtrMemberAccess	type -> type_str		1917083	0					
ANR	1917181	Identifier	type		1917083	0					
ANR	1917182	Identifier	type_str		1917083	1					
ANR	1917183	Identifier	NULL		1917083	1					
ANR	1917184	AndExpression	"Z_TYPE_P ( classname ) == IS_STRING && ( tmp = zend_fetch_class ( Z_STR_P ( classname ) , ZEND_FETCH_CLASS_AUTO ) ) != NULL"		1917083	1		&&			
ANR	1917185	EqualityExpression	Z_TYPE_P ( classname ) == IS_STRING		1917083	0		==			
ANR	1917186	CallExpression	Z_TYPE_P ( classname )		1917083	0					
ANR	1917187	Callee	Z_TYPE_P		1917083	0					
ANR	1917188	Identifier	Z_TYPE_P		1917083	0					
ANR	1917189	ArgumentList	classname		1917083	1					
ANR	1917190	Argument	classname		1917083	0					
ANR	1917191	Identifier	classname		1917083	0					
ANR	1917192	Identifier	IS_STRING		1917083	1					
ANR	1917193	EqualityExpression	"( tmp = zend_fetch_class ( Z_STR_P ( classname ) , ZEND_FETCH_CLASS_AUTO ) ) != NULL"		1917083	1		!=			
ANR	1917194	AssignmentExpression	"tmp = zend_fetch_class ( Z_STR_P ( classname ) , ZEND_FETCH_CLASS_AUTO )"		1917083	0		=			
ANR	1917195	Identifier	tmp		1917083	0					
ANR	1917196	CallExpression	"zend_fetch_class ( Z_STR_P ( classname ) , ZEND_FETCH_CLASS_AUTO )"		1917083	1					
ANR	1917197	Callee	zend_fetch_class		1917083	0					
ANR	1917198	Identifier	zend_fetch_class		1917083	0					
ANR	1917199	ArgumentList	Z_STR_P ( classname )		1917083	1					
ANR	1917200	Argument	Z_STR_P ( classname )		1917083	0					
ANR	1917201	CallExpression	Z_STR_P ( classname )		1917083	0					
ANR	1917202	Callee	Z_STR_P		1917083	0					
ANR	1917203	Identifier	Z_STR_P		1917083	0					
ANR	1917204	ArgumentList	classname		1917083	1					
ANR	1917205	Argument	classname		1917083	0					
ANR	1917206	Identifier	classname		1917083	0					
ANR	1917207	Argument	ZEND_FETCH_CLASS_AUTO		1917083	1					
ANR	1917208	Identifier	ZEND_FETCH_CLASS_AUTO		1917083	0					
ANR	1917209	Identifier	NULL		1917083	1					
ANR	1917210	CompoundStatement		16:83:535:535	1917083	1					
ANR	1917211	ExpressionStatement	ce = tmp	1425:3:47270:47278	1917083	0	True				
ANR	1917212	AssignmentExpression	ce = tmp		1917083	0		=			
ANR	1917213	Identifier	ce		1917083	0					
ANR	1917214	Identifier	tmp		1917083	1					
ANR	1917215	ExpressionStatement	sdl = SOAP_GLOBAL ( sdl )	1428:1:47288:47310	1917083	6	True				
ANR	1917216	AssignmentExpression	sdl = SOAP_GLOBAL ( sdl )		1917083	0		=			
ANR	1917217	Identifier	sdl		1917083	0					
ANR	1917218	CallExpression	SOAP_GLOBAL ( sdl )		1917083	1					
ANR	1917219	Callee	SOAP_GLOBAL		1917083	0					
ANR	1917220	Identifier	SOAP_GLOBAL		1917083	0					
ANR	1917221	ArgumentList	sdl		1917083	1					
ANR	1917222	Argument	sdl		1917083	0					
ANR	1917223	Identifier	sdl		1917083	0					
ANR	1917224	IfStatement	if ( sdlType )		1917083	7					
ANR	1917225	Condition	sdlType	1429:5:47317:47323	1917083	0	True				
ANR	1917226	Identifier	sdlType		1917083	0					
ANR	1917227	CompoundStatement		21:14:596:596	1917083	1					
ANR	1917228	IfStatement	if ( sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details )		1917083	0					
ANR	1917229	Condition	sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details	1430:6:47334:47436	1917083	0	True				
ANR	1917230	AndExpression	sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details		1917083	0		&&			
ANR	1917231	EqualityExpression	sdlType -> kind == XSD_TYPEKIND_RESTRICTION		1917083	0		==			
ANR	1917232	PtrMemberAccess	sdlType -> kind		1917083	0					
ANR	1917233	Identifier	sdlType		1917083	0					
ANR	1917234	Identifier	kind		1917083	1					
ANR	1917235	Identifier	XSD_TYPEKIND_RESTRICTION		1917083	1					
ANR	1917236	AndExpression	sdlType -> encode && type != & sdlType -> encode -> details		1917083	1		&&			
ANR	1917237	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917238	Identifier	sdlType		1917083	0					
ANR	1917239	Identifier	encode		1917083	1					
ANR	1917240	EqualityExpression	type != & sdlType -> encode -> details		1917083	1		!=			
ANR	1917241	Identifier	type		1917083	0					
ANR	1917242	UnaryOperationExpression	& sdlType -> encode -> details		1917083	1					
ANR	1917243	UnaryOperator	&		1917083	0					
ANR	1917244	PtrMemberAccess	sdlType -> encode -> details		1917083	1					
ANR	1917245	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917246	Identifier	sdlType		1917083	0					
ANR	1917247	Identifier	encode		1917083	1					
ANR	1917248	Identifier	details		1917083	1					
ANR	1917249	CompoundStatement		24:3:714:727	1917083	1					
ANR	1917250	IdentifierDeclStatement	encodePtr enc ;	1432:3:47444:47457	1917083	0	True				
ANR	1917251	IdentifierDecl	enc		1917083	0					
ANR	1917252	IdentifierDeclType	encodePtr		1917083	0					
ANR	1917253	Identifier	enc		1917083	1					
ANR	1917254	ExpressionStatement	enc = sdlType -> encode	1434:3:47463:47484	1917083	1	True				
ANR	1917255	AssignmentExpression	enc = sdlType -> encode		1917083	0		=			
ANR	1917256	Identifier	enc		1917083	0					
ANR	1917257	PtrMemberAccess	sdlType -> encode		1917083	1					
ANR	1917258	Identifier	sdlType		1917083	0					
ANR	1917259	Identifier	encode		1917083	1					
ANR	1917260	WhileStatement	while ( enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION )		1917083	2					
ANR	1917261	Condition	enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION	1435:10:47496:47712	1917083	0	True				
ANR	1917262	AndExpression	enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	0		&&			
ANR	1917263	Identifier	enc		1917083	0					
ANR	1917264	AndExpression	enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	1		&&			
ANR	1917265	MemberAccess	enc -> details . sdl_type		1917083	0					
ANR	1917266	PtrMemberAccess	enc -> details		1917083	0					
ANR	1917267	Identifier	enc		1917083	0					
ANR	1917268	Identifier	details		1917083	1					
ANR	1917269	Identifier	sdl_type		1917083	1					
ANR	1917270	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	1		&&			
ANR	1917271	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE		1917083	0		!=			
ANR	1917272	PtrMemberAccess	enc -> details . sdl_type -> kind		1917083	0					
ANR	1917273	MemberAccess	enc -> details . sdl_type		1917083	0					
ANR	1917274	PtrMemberAccess	enc -> details		1917083	0					
ANR	1917275	Identifier	enc		1917083	0					
ANR	1917276	Identifier	details		1917083	1					
ANR	1917277	Identifier	sdl_type		1917083	1					
ANR	1917278	Identifier	kind		1917083	1					
ANR	1917279	Identifier	XSD_TYPEKIND_SIMPLE		1917083	1					
ANR	1917280	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	1		&&			
ANR	1917281	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST		1917083	0		!=			
ANR	1917282	PtrMemberAccess	enc -> details . sdl_type -> kind		1917083	0					
ANR	1917283	MemberAccess	enc -> details . sdl_type		1917083	0					
ANR	1917284	PtrMemberAccess	enc -> details		1917083	0					
ANR	1917285	Identifier	enc		1917083	0					
ANR	1917286	Identifier	details		1917083	1					
ANR	1917287	Identifier	sdl_type		1917083	1					
ANR	1917288	Identifier	kind		1917083	1					
ANR	1917289	Identifier	XSD_TYPEKIND_LIST		1917083	1					
ANR	1917290	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	1		!=			
ANR	1917291	PtrMemberAccess	enc -> details . sdl_type -> kind		1917083	0					
ANR	1917292	MemberAccess	enc -> details . sdl_type		1917083	0					
ANR	1917293	PtrMemberAccess	enc -> details		1917083	0					
ANR	1917294	Identifier	enc		1917083	0					
ANR	1917295	Identifier	details		1917083	1					
ANR	1917296	Identifier	sdl_type		1917083	1					
ANR	1917297	Identifier	kind		1917083	1					
ANR	1917298	Identifier	XSD_TYPEKIND_UNION		1917083	1					
ANR	1917299	CompoundStatement		30:61:985:985	1917083	1					
ANR	1917300	ExpressionStatement	enc = enc -> details . sdl_type -> encode	1439:4:47721:47756	1917083	0	True				
ANR	1917301	AssignmentExpression	enc = enc -> details . sdl_type -> encode		1917083	0		=			
ANR	1917302	Identifier	enc		1917083	0					
ANR	1917303	PtrMemberAccess	enc -> details . sdl_type -> encode		1917083	1					
ANR	1917304	MemberAccess	enc -> details . sdl_type		1917083	0					
ANR	1917305	PtrMemberAccess	enc -> details		1917083	0					
ANR	1917306	Identifier	enc		1917083	0					
ANR	1917307	Identifier	details		1917083	1					
ANR	1917308	Identifier	sdl_type		1917083	1					
ANR	1917309	Identifier	encode		1917083	1					
ANR	1917310	IfStatement	if ( enc )		1917083	3					
ANR	1917311	Condition	enc	1441:7:47770:47772	1917083	0	True				
ANR	1917312	Identifier	enc		1917083	0					
ANR	1917313	CompoundStatement		34:4:1051:1060	1917083	1					
ANR	1917314	IdentifierDeclStatement	zval base ;	1442:4:47781:47790	1917083	0	True				
ANR	1917315	IdentifierDecl	base		1917083	0					
ANR	1917316	IdentifierDeclType	zval		1917083	0					
ANR	1917317	Identifier	base		1917083	1					
ANR	1917318	ExpressionStatement	ZVAL_NULL ( ret )	1444:4:47797:47811	1917083	1	True				
ANR	1917319	CallExpression	ZVAL_NULL ( ret )		1917083	0					
ANR	1917320	Callee	ZVAL_NULL		1917083	0					
ANR	1917321	Identifier	ZVAL_NULL		1917083	0					
ANR	1917322	ArgumentList	ret		1917083	1					
ANR	1917323	Argument	ret		1917083	0					
ANR	1917324	Identifier	ret		1917083	0					
ANR	1917325	IfStatement	"if ( soap_check_xml_ref ( ret , data ) )"		1917083	2					
ANR	1917326	Condition	"soap_check_xml_ref ( ret , data )"	1445:8:47821:47849	1917083	0	True				
ANR	1917327	CallExpression	"soap_check_xml_ref ( ret , data )"		1917083	0					
ANR	1917328	Callee	soap_check_xml_ref		1917083	0					
ANR	1917329	Identifier	soap_check_xml_ref		1917083	0					
ANR	1917330	ArgumentList	ret		1917083	1					
ANR	1917331	Argument	ret		1917083	0					
ANR	1917332	Identifier	ret		1917083	0					
ANR	1917333	Argument	data		1917083	1					
ANR	1917334	Identifier	data		1917083	0					
ANR	1917335	CompoundStatement		37:39:1122:1122	1917083	1					
ANR	1917336	ReturnStatement	return ret ;	1446:5:47859:47869	1917083	0	True				
ANR	1917337	Identifier	ret		1917083	0					
ANR	1917338	ExpressionStatement	"object_init_ex ( ret , ce )"	1449:4:47882:47905	1917083	3	True				
ANR	1917339	CallExpression	"object_init_ex ( ret , ce )"		1917083	0					
ANR	1917340	Callee	object_init_ex		1917083	0					
ANR	1917341	Identifier	object_init_ex		1917083	0					
ANR	1917342	ArgumentList	ret		1917083	1					
ANR	1917343	Argument	ret		1917083	0					
ANR	1917344	Identifier	ret		1917083	0					
ANR	1917345	Argument	ce		1917083	1					
ANR	1917346	Identifier	ce		1917083	0					
ANR	1917347	ExpressionStatement	"master_to_zval_int ( & base , enc , data )"	1450:4:47911:47947	1917083	4	True				
ANR	1917348	CallExpression	"master_to_zval_int ( & base , enc , data )"		1917083	0					
ANR	1917349	Callee	master_to_zval_int		1917083	0					
ANR	1917350	Identifier	master_to_zval_int		1917083	0					
ANR	1917351	ArgumentList	& base		1917083	1					
ANR	1917352	Argument	& base		1917083	0					
ANR	1917353	UnaryOperationExpression	& base		1917083	0					
ANR	1917354	UnaryOperator	&		1917083	0					
ANR	1917355	Identifier	base		1917083	1					
ANR	1917356	Argument	enc		1917083	1					
ANR	1917357	Identifier	enc		1917083	0					
ANR	1917358	Argument	data		1917083	2					
ANR	1917359	Identifier	data		1917083	0					
ANR	1917360	ExpressionStatement	"set_zval_property ( ret , ""_"" , & base )"	1451:4:47953:47987	1917083	5	True				
ANR	1917361	CallExpression	"set_zval_property ( ret , ""_"" , & base )"		1917083	0					
ANR	1917362	Callee	set_zval_property		1917083	0					
ANR	1917363	Identifier	set_zval_property		1917083	0					
ANR	1917364	ArgumentList	ret		1917083	1					
ANR	1917365	Argument	ret		1917083	0					
ANR	1917366	Identifier	ret		1917083	0					
ANR	1917367	Argument	"""_"""		1917083	1					
ANR	1917368	PrimaryExpression	"""_"""		1917083	0					
ANR	1917369	Argument	& base		1917083	2					
ANR	1917370	UnaryOperationExpression	& base		1917083	0					
ANR	1917371	UnaryOperator	&		1917083	0					
ANR	1917372	Identifier	base		1917083	1					
ANR	1917373	ElseStatement	else		1917083	0					
ANR	1917374	CompoundStatement		44:10:1269:1269	1917083	0					
ANR	1917375	ExpressionStatement	ZVAL_NULL ( ret )	1453:4:48005:48019	1917083	0	True				
ANR	1917376	CallExpression	ZVAL_NULL ( ret )		1917083	0					
ANR	1917377	Callee	ZVAL_NULL		1917083	0					
ANR	1917378	Identifier	ZVAL_NULL		1917083	0					
ANR	1917379	ArgumentList	ret		1917083	1					
ANR	1917380	Argument	ret		1917083	0					
ANR	1917381	Identifier	ret		1917083	0					
ANR	1917382	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1454:4:48025:48049	1917083	1	True				
ANR	1917383	CallExpression	"FIND_XML_NULL ( data , ret )"		1917083	0					
ANR	1917384	Callee	FIND_XML_NULL		1917083	0					
ANR	1917385	Identifier	FIND_XML_NULL		1917083	0					
ANR	1917386	ArgumentList	data		1917083	1					
ANR	1917387	Argument	data		1917083	0					
ANR	1917388	Identifier	data		1917083	0					
ANR	1917389	Argument	ret		1917083	1					
ANR	1917390	Identifier	ret		1917083	0					
ANR	1917391	IfStatement	"if ( soap_check_xml_ref ( ret , data ) )"		1917083	2					
ANR	1917392	Condition	"soap_check_xml_ref ( ret , data )"	1455:8:48059:48087	1917083	0	True				
ANR	1917393	CallExpression	"soap_check_xml_ref ( ret , data )"		1917083	0					
ANR	1917394	Callee	soap_check_xml_ref		1917083	0					
ANR	1917395	Identifier	soap_check_xml_ref		1917083	0					
ANR	1917396	ArgumentList	ret		1917083	1					
ANR	1917397	Argument	ret		1917083	0					
ANR	1917398	Identifier	ret		1917083	0					
ANR	1917399	Argument	data		1917083	1					
ANR	1917400	Identifier	data		1917083	0					
ANR	1917401	CompoundStatement		47:39:1360:1360	1917083	1					
ANR	1917402	ReturnStatement	return ret ;	1456:5:48097:48107	1917083	0	True				
ANR	1917403	Identifier	ret		1917083	0					
ANR	1917404	ExpressionStatement	"object_init_ex ( ret , ce )"	1458:4:48119:48142	1917083	3	True				
ANR	1917405	CallExpression	"object_init_ex ( ret , ce )"		1917083	0					
ANR	1917406	Callee	object_init_ex		1917083	0					
ANR	1917407	Identifier	object_init_ex		1917083	0					
ANR	1917408	ArgumentList	ret		1917083	1					
ANR	1917409	Argument	ret		1917083	0					
ANR	1917410	Identifier	ret		1917083	0					
ANR	1917411	Argument	ce		1917083	1					
ANR	1917412	Identifier	ce		1917083	0					
ANR	1917413	ExpressionStatement	"soap_add_xml_ref ( ret , data )"	1459:4:48148:48175	1917083	4	True				
ANR	1917414	CallExpression	"soap_add_xml_ref ( ret , data )"		1917083	0					
ANR	1917415	Callee	soap_add_xml_ref		1917083	0					
ANR	1917416	Identifier	soap_add_xml_ref		1917083	0					
ANR	1917417	ArgumentList	ret		1917083	1					
ANR	1917418	Argument	ret		1917083	0					
ANR	1917419	Identifier	ret		1917083	0					
ANR	1917420	Argument	data		1917083	1					
ANR	1917421	Identifier	data		1917083	0					
ANR	1917422	ElseStatement	else		1917083	0					
ANR	1917423	IfStatement	if ( sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details )		1917083	0					
ANR	1917424	Condition	sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details	1461:13:48195:48315	1917083	0	True				
ANR	1917425	AndExpression	sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details		1917083	0		&&			
ANR	1917426	EqualityExpression	sdlType -> kind == XSD_TYPEKIND_EXTENSION		1917083	0		==			
ANR	1917427	PtrMemberAccess	sdlType -> kind		1917083	0					
ANR	1917428	Identifier	sdlType		1917083	0					
ANR	1917429	Identifier	kind		1917083	1					
ANR	1917430	Identifier	XSD_TYPEKIND_EXTENSION		1917083	1					
ANR	1917431	AndExpression	sdlType -> encode && type != & sdlType -> encode -> details		1917083	1		&&			
ANR	1917432	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917433	Identifier	sdlType		1917083	0					
ANR	1917434	Identifier	encode		1917083	1					
ANR	1917435	EqualityExpression	type != & sdlType -> encode -> details		1917083	1		!=			
ANR	1917436	Identifier	type		1917083	0					
ANR	1917437	UnaryOperationExpression	& sdlType -> encode -> details		1917083	1					
ANR	1917438	UnaryOperator	&		1917083	0					
ANR	1917439	PtrMemberAccess	sdlType -> encode -> details		1917083	1					
ANR	1917440	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917441	Identifier	sdlType		1917083	0					
ANR	1917442	Identifier	encode		1917083	1					
ANR	1917443	Identifier	details		1917083	1					
ANR	1917444	CompoundStatement		55:48:1588:1588	1917083	1					
ANR	1917445	IfStatement	if ( sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION )		1917083	0					
ANR	1917446	Condition	sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION	1464:7:48327:48575	1917083	0	True				
ANR	1917447	AndExpression	sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	0		&&			
ANR	1917448	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917449	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917450	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917451	Identifier	sdlType		1917083	0					
ANR	1917452	Identifier	encode		1917083	1					
ANR	1917453	Identifier	details		1917083	1					
ANR	1917454	Identifier	sdl_type		1917083	1					
ANR	1917455	AndExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	1		&&			
ANR	1917456	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE		1917083	0		!=			
ANR	1917457	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1917083	0					
ANR	1917458	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917459	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917460	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917461	Identifier	sdlType		1917083	0					
ANR	1917462	Identifier	encode		1917083	1					
ANR	1917463	Identifier	details		1917083	1					
ANR	1917464	Identifier	sdl_type		1917083	1					
ANR	1917465	Identifier	kind		1917083	1					
ANR	1917466	Identifier	XSD_TYPEKIND_SIMPLE		1917083	1					
ANR	1917467	AndExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	1		&&			
ANR	1917468	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST		1917083	0		!=			
ANR	1917469	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1917083	0					
ANR	1917470	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917471	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917472	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917473	Identifier	sdlType		1917083	0					
ANR	1917474	Identifier	encode		1917083	1					
ANR	1917475	Identifier	details		1917083	1					
ANR	1917476	Identifier	sdl_type		1917083	1					
ANR	1917477	Identifier	kind		1917083	1					
ANR	1917478	Identifier	XSD_TYPEKIND_LIST		1917083	1					
ANR	1917479	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1917083	1		!=			
ANR	1917480	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1917083	0					
ANR	1917481	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917482	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917483	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917484	Identifier	sdlType		1917083	0					
ANR	1917485	Identifier	encode		1917083	1					
ANR	1917486	Identifier	details		1917083	1					
ANR	1917487	Identifier	sdl_type		1917083	1					
ANR	1917488	Identifier	kind		1917083	1					
ANR	1917489	Identifier	XSD_TYPEKIND_UNION		1917083	1					
ANR	1917490	CompoundStatement		59:70:1848:1848	1917083	1					
ANR	1917491	ExpressionStatement	CHECK_XML_NULL ( data )	1469:4:48585:48605	1917083	0	True				
ANR	1917492	CallExpression	CHECK_XML_NULL ( data )		1917083	0					
ANR	1917493	Callee	CHECK_XML_NULL		1917083	0					
ANR	1917494	Identifier	CHECK_XML_NULL		1917083	0					
ANR	1917495	ArgumentList	data		1917083	1					
ANR	1917496	Argument	data		1917083	0					
ANR	1917497	Identifier	data		1917083	0					
ANR	1917498	IfStatement	"if ( soap_check_xml_ref ( ret , data ) )"		1917083	1					
ANR	1917499	Condition	"soap_check_xml_ref ( ret , data )"	1470:8:48615:48643	1917083	0	True				
ANR	1917500	CallExpression	"soap_check_xml_ref ( ret , data )"		1917083	0					
ANR	1917501	Callee	soap_check_xml_ref		1917083	0					
ANR	1917502	Identifier	soap_check_xml_ref		1917083	0					
ANR	1917503	ArgumentList	ret		1917083	1					
ANR	1917504	Argument	ret		1917083	0					
ANR	1917505	Identifier	ret		1917083	0					
ANR	1917506	Argument	data		1917083	1					
ANR	1917507	Identifier	data		1917083	0					
ANR	1917508	CompoundStatement		62:39:1916:1916	1917083	1					
ANR	1917509	ReturnStatement	return ret ;	1471:5:48653:48663	1917083	0	True				
ANR	1917510	Identifier	ret		1917083	0					
ANR	1917511	IfStatement	if ( ce != ZEND_STANDARD_CLASS_DEF_PTR && sdlType -> encode -> to_zval == sdl_guess_convert_zval && sdlType -> encode -> details . sdl_type != NULL && ( sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION ) && ( sdlType -> encode -> details . sdl_type -> encode == NULL || ( sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY ) ) )		1917083	2					
ANR	1917512	Condition	ce != ZEND_STANDARD_CLASS_DEF_PTR && sdlType -> encode -> to_zval == sdl_guess_convert_zval && sdlType -> encode -> details . sdl_type != NULL && ( sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION ) && ( sdlType -> encode -> details . sdl_type -> encode == NULL || ( sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY ) )	1474:11:48683:49321	1917083	0	True				
ANR	1917513	AndExpression	ce != ZEND_STANDARD_CLASS_DEF_PTR && sdlType -> encode -> to_zval == sdl_guess_convert_zval && sdlType -> encode -> details . sdl_type != NULL && ( sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION ) && ( sdlType -> encode -> details . sdl_type -> encode == NULL || ( sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY ) )		1917083	0		&&			
ANR	1917514	EqualityExpression	ce != ZEND_STANDARD_CLASS_DEF_PTR		1917083	0		!=			
ANR	1917515	Identifier	ce		1917083	0					
ANR	1917516	Identifier	ZEND_STANDARD_CLASS_DEF_PTR		1917083	1					
ANR	1917517	AndExpression	sdlType -> encode -> to_zval == sdl_guess_convert_zval && sdlType -> encode -> details . sdl_type != NULL && ( sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION ) && ( sdlType -> encode -> details . sdl_type -> encode == NULL || ( sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY ) )		1917083	1		&&			
ANR	1917518	EqualityExpression	sdlType -> encode -> to_zval == sdl_guess_convert_zval		1917083	0		==			
ANR	1917519	PtrMemberAccess	sdlType -> encode -> to_zval		1917083	0					
ANR	1917520	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917521	Identifier	sdlType		1917083	0					
ANR	1917522	Identifier	encode		1917083	1					
ANR	1917523	Identifier	to_zval		1917083	1					
ANR	1917524	Identifier	sdl_guess_convert_zval		1917083	1					
ANR	1917525	AndExpression	sdlType -> encode -> details . sdl_type != NULL && ( sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION ) && ( sdlType -> encode -> details . sdl_type -> encode == NULL || ( sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY ) )		1917083	1		&&			
ANR	1917526	EqualityExpression	sdlType -> encode -> details . sdl_type != NULL		1917083	0		!=			
ANR	1917527	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917528	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917529	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917530	Identifier	sdlType		1917083	0					
ANR	1917531	Identifier	encode		1917083	1					
ANR	1917532	Identifier	details		1917083	1					
ANR	1917533	Identifier	sdl_type		1917083	1					
ANR	1917534	Identifier	NULL		1917083	1					
ANR	1917535	AndExpression	( sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION ) && ( sdlType -> encode -> details . sdl_type -> encode == NULL || ( sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY ) )		1917083	1		&&			
ANR	1917536	OrExpression	sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION		1917083	0		||			
ANR	1917537	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_COMPLEX		1917083	0		==			
ANR	1917538	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1917083	0					
ANR	1917539	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917540	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917541	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917542	Identifier	sdlType		1917083	0					
ANR	1917543	Identifier	encode		1917083	1					
ANR	1917544	Identifier	details		1917083	1					
ANR	1917545	Identifier	sdl_type		1917083	1					
ANR	1917546	Identifier	kind		1917083	1					
ANR	1917547	Identifier	XSD_TYPEKIND_COMPLEX		1917083	1					
ANR	1917548	OrExpression	sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION || sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION		1917083	1		||			
ANR	1917549	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_RESTRICTION		1917083	0		==			
ANR	1917550	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1917083	0					
ANR	1917551	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917552	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917553	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917554	Identifier	sdlType		1917083	0					
ANR	1917555	Identifier	encode		1917083	1					
ANR	1917556	Identifier	details		1917083	1					
ANR	1917557	Identifier	sdl_type		1917083	1					
ANR	1917558	Identifier	kind		1917083	1					
ANR	1917559	Identifier	XSD_TYPEKIND_RESTRICTION		1917083	1					
ANR	1917560	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind == XSD_TYPEKIND_EXTENSION		1917083	1		==			
ANR	1917561	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1917083	0					
ANR	1917562	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917563	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917564	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917565	Identifier	sdlType		1917083	0					
ANR	1917566	Identifier	encode		1917083	1					
ANR	1917567	Identifier	details		1917083	1					
ANR	1917568	Identifier	sdl_type		1917083	1					
ANR	1917569	Identifier	kind		1917083	1					
ANR	1917570	Identifier	XSD_TYPEKIND_EXTENSION		1917083	1					
ANR	1917571	OrExpression	sdlType -> encode -> details . sdl_type -> encode == NULL || ( sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY )		1917083	1		||			
ANR	1917572	EqualityExpression	sdlType -> encode -> details . sdl_type -> encode == NULL		1917083	0		==			
ANR	1917573	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> encode		1917083	0					
ANR	1917574	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917575	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917576	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917577	Identifier	sdlType		1917083	0					
ANR	1917578	Identifier	encode		1917083	1					
ANR	1917579	Identifier	details		1917083	1					
ANR	1917580	Identifier	sdl_type		1917083	1					
ANR	1917581	Identifier	encode		1917083	1					
ANR	1917582	Identifier	NULL		1917083	1					
ANR	1917583	AndExpression	sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY && sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY		1917083	1		&&			
ANR	1917584	EqualityExpression	sdlType -> encode -> details . sdl_type -> encode -> details . type != IS_ARRAY		1917083	0		!=			
ANR	1917585	MemberAccess	sdlType -> encode -> details . sdl_type -> encode -> details . type		1917083	0					
ANR	1917586	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> encode -> details		1917083	0					
ANR	1917587	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> encode		1917083	0					
ANR	1917588	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917589	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917590	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917591	Identifier	sdlType		1917083	0					
ANR	1917592	Identifier	encode		1917083	1					
ANR	1917593	Identifier	details		1917083	1					
ANR	1917594	Identifier	sdl_type		1917083	1					
ANR	1917595	Identifier	encode		1917083	1					
ANR	1917596	Identifier	details		1917083	1					
ANR	1917597	Identifier	type		1917083	1					
ANR	1917598	Identifier	IS_ARRAY		1917083	1					
ANR	1917599	EqualityExpression	sdlType -> encode -> details . sdl_type -> encode -> details . type != SOAP_ENC_ARRAY		1917083	1		!=			
ANR	1917600	MemberAccess	sdlType -> encode -> details . sdl_type -> encode -> details . type		1917083	0					
ANR	1917601	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> encode -> details		1917083	0					
ANR	1917602	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> encode		1917083	0					
ANR	1917603	MemberAccess	sdlType -> encode -> details . sdl_type		1917083	0					
ANR	1917604	PtrMemberAccess	sdlType -> encode -> details		1917083	0					
ANR	1917605	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917606	Identifier	sdlType		1917083	0					
ANR	1917607	Identifier	encode		1917083	1					
ANR	1917608	Identifier	details		1917083	1					
ANR	1917609	Identifier	sdl_type		1917083	1					
ANR	1917610	Identifier	encode		1917083	1					
ANR	1917611	Identifier	details		1917083	1					
ANR	1917612	Identifier	type		1917083	1					
ANR	1917613	Identifier	SOAP_ENC_ARRAY		1917083	1					
ANR	1917614	CompoundStatement		74:90:2594:2594	1917083	1					
ANR	1917615	ExpressionStatement	"to_zval_object_ex ( ret , & sdlType -> encode -> details , data , ce )"	1483:5:49331:49390	1917083	0	True				
ANR	1917616	CallExpression	"to_zval_object_ex ( ret , & sdlType -> encode -> details , data , ce )"		1917083	0					
ANR	1917617	Callee	to_zval_object_ex		1917083	0					
ANR	1917618	Identifier	to_zval_object_ex		1917083	0					
ANR	1917619	ArgumentList	ret		1917083	1					
ANR	1917620	Argument	ret		1917083	0					
ANR	1917621	Identifier	ret		1917083	0					
ANR	1917622	Argument	& sdlType -> encode -> details		1917083	1					
ANR	1917623	UnaryOperationExpression	& sdlType -> encode -> details		1917083	0					
ANR	1917624	UnaryOperator	&		1917083	0					
ANR	1917625	PtrMemberAccess	sdlType -> encode -> details		1917083	1					
ANR	1917626	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917627	Identifier	sdlType		1917083	0					
ANR	1917628	Identifier	encode		1917083	1					
ANR	1917629	Identifier	details		1917083	1					
ANR	1917630	Argument	data		1917083	2					
ANR	1917631	Identifier	data		1917083	0					
ANR	1917632	Argument	ce		1917083	3					
ANR	1917633	Identifier	ce		1917083	0					
ANR	1917634	ElseStatement	else		1917083	0					
ANR	1917635	CompoundStatement		76:14:2676:2676	1917083	0					
ANR	1917636	ExpressionStatement	"master_to_zval_int ( ret , sdlType -> encode , data )"	1485:5:49413:49459	1917083	0	True				
ANR	1917637	CallExpression	"master_to_zval_int ( ret , sdlType -> encode , data )"		1917083	0					
ANR	1917638	Callee	master_to_zval_int		1917083	0					
ANR	1917639	Identifier	master_to_zval_int		1917083	0					
ANR	1917640	ArgumentList	ret		1917083	1					
ANR	1917641	Argument	ret		1917083	0					
ANR	1917642	Identifier	ret		1917083	0					
ANR	1917643	Argument	sdlType -> encode		1917083	1					
ANR	1917644	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917645	Identifier	sdlType		1917083	0					
ANR	1917646	Identifier	encode		1917083	1					
ANR	1917647	Argument	data		1917083	2					
ANR	1917648	Identifier	data		1917083	0					
ANR	1917649	ExpressionStatement	"soap_add_xml_ref ( ret , data )"	1488:4:49472:49499	1917083	3	True				
ANR	1917650	CallExpression	"soap_add_xml_ref ( ret , data )"		1917083	0					
ANR	1917651	Callee	soap_add_xml_ref		1917083	0					
ANR	1917652	Identifier	soap_add_xml_ref		1917083	0					
ANR	1917653	ArgumentList	ret		1917083	1					
ANR	1917654	Argument	ret		1917083	0					
ANR	1917655	Identifier	ret		1917083	0					
ANR	1917656	Argument	data		1917083	1					
ANR	1917657	Identifier	data		1917083	0					
ANR	1917658	ExpressionStatement	"redo_any = get_zval_property ( ret , ""any"" , & rv )"	1490:4:49506:49551	1917083	4	True				
ANR	1917659	AssignmentExpression	"redo_any = get_zval_property ( ret , ""any"" , & rv )"		1917083	0		=			
ANR	1917660	Identifier	redo_any		1917083	0					
ANR	1917661	CallExpression	"get_zval_property ( ret , ""any"" , & rv )"		1917083	1					
ANR	1917662	Callee	get_zval_property		1917083	0					
ANR	1917663	Identifier	get_zval_property		1917083	0					
ANR	1917664	ArgumentList	ret		1917083	1					
ANR	1917665	Argument	ret		1917083	0					
ANR	1917666	Identifier	ret		1917083	0					
ANR	1917667	Argument	"""any"""		1917083	1					
ANR	1917668	PrimaryExpression	"""any"""		1917083	0					
ANR	1917669	Argument	& rv		1917083	2					
ANR	1917670	UnaryOperationExpression	& rv		1917083	0					
ANR	1917671	UnaryOperator	&		1917083	0					
ANR	1917672	Identifier	rv		1917083	1					
ANR	1917673	IfStatement	if ( Z_TYPE_P ( ret ) == IS_OBJECT && ce != ZEND_STANDARD_CLASS_DEF_PTR )		1917083	5					
ANR	1917674	Condition	Z_TYPE_P ( ret ) == IS_OBJECT && ce != ZEND_STANDARD_CLASS_DEF_PTR	1491:8:49561:49623	1917083	0	True				
ANR	1917675	AndExpression	Z_TYPE_P ( ret ) == IS_OBJECT && ce != ZEND_STANDARD_CLASS_DEF_PTR		1917083	0		&&			
ANR	1917676	EqualityExpression	Z_TYPE_P ( ret ) == IS_OBJECT		1917083	0		==			
ANR	1917677	CallExpression	Z_TYPE_P ( ret )		1917083	0					
ANR	1917678	Callee	Z_TYPE_P		1917083	0					
ANR	1917679	Identifier	Z_TYPE_P		1917083	0					
ANR	1917680	ArgumentList	ret		1917083	1					
ANR	1917681	Argument	ret		1917083	0					
ANR	1917682	Identifier	ret		1917083	0					
ANR	1917683	Identifier	IS_OBJECT		1917083	1					
ANR	1917684	EqualityExpression	ce != ZEND_STANDARD_CLASS_DEF_PTR		1917083	1		!=			
ANR	1917685	Identifier	ce		1917083	0					
ANR	1917686	Identifier	ZEND_STANDARD_CLASS_DEF_PTR		1917083	1					
ANR	1917687	CompoundStatement		84:5:2903:2935	1917083	1					
ANR	1917688	IdentifierDeclStatement	zend_object * zobj = Z_OBJ_P ( ret ) ;	1492:5:49633:49665	1917083	0	True				
ANR	1917689	IdentifierDecl	* zobj = Z_OBJ_P ( ret )		1917083	0					
ANR	1917690	IdentifierDeclType	zend_object *		1917083	0					
ANR	1917691	Identifier	zobj		1917083	1					
ANR	1917692	AssignmentExpression	* zobj = Z_OBJ_P ( ret )		1917083	2		=			
ANR	1917693	Identifier	zobj		1917083	0					
ANR	1917694	CallExpression	Z_OBJ_P ( ret )		1917083	1					
ANR	1917695	Callee	Z_OBJ_P		1917083	0					
ANR	1917696	Identifier	Z_OBJ_P		1917083	0					
ANR	1917697	ArgumentList	ret		1917083	1					
ANR	1917698	Argument	ret		1917083	0					
ANR	1917699	Identifier	ret		1917083	0					
ANR	1917700	ExpressionStatement	zobj -> ce = ce	1493:5:49672:49685	1917083	1	True				
ANR	1917701	AssignmentExpression	zobj -> ce = ce		1917083	0		=			
ANR	1917702	PtrMemberAccess	zobj -> ce		1917083	0					
ANR	1917703	Identifier	zobj		1917083	0					
ANR	1917704	Identifier	ce		1917083	1					
ANR	1917705	Identifier	ce		1917083	1					
ANR	1917706	ElseStatement	else		1917083	0					
ANR	1917707	CompoundStatement		88:4:2979:2988	1917083	0					
ANR	1917708	IdentifierDeclStatement	zval base ;	1496:4:49709:49718	1917083	0	True				
ANR	1917709	IdentifierDecl	base		1917083	0					
ANR	1917710	IdentifierDeclType	zval		1917083	0					
ANR	1917711	Identifier	base		1917083	1					
ANR	1917712	ExpressionStatement	ZVAL_NULL ( ret )	1498:4:49725:49739	1917083	1	True				
ANR	1917713	CallExpression	ZVAL_NULL ( ret )		1917083	0					
ANR	1917714	Callee	ZVAL_NULL		1917083	0					
ANR	1917715	Identifier	ZVAL_NULL		1917083	0					
ANR	1917716	ArgumentList	ret		1917083	1					
ANR	1917717	Argument	ret		1917083	0					
ANR	1917718	Identifier	ret		1917083	0					
ANR	1917719	IfStatement	"if ( soap_check_xml_ref ( ret , data ) )"		1917083	2					
ANR	1917720	Condition	"soap_check_xml_ref ( ret , data )"	1499:8:49749:49777	1917083	0	True				
ANR	1917721	CallExpression	"soap_check_xml_ref ( ret , data )"		1917083	0					
ANR	1917722	Callee	soap_check_xml_ref		1917083	0					
ANR	1917723	Identifier	soap_check_xml_ref		1917083	0					
ANR	1917724	ArgumentList	ret		1917083	1					
ANR	1917725	Argument	ret		1917083	0					
ANR	1917726	Identifier	ret		1917083	0					
ANR	1917727	Argument	data		1917083	1					
ANR	1917728	Identifier	data		1917083	0					
ANR	1917729	CompoundStatement		91:39:3050:3050	1917083	1					
ANR	1917730	ReturnStatement	return ret ;	1500:5:49787:49797	1917083	0	True				
ANR	1917731	Identifier	ret		1917083	0					
ANR	1917732	ExpressionStatement	"object_init_ex ( ret , ce )"	1503:4:49810:49833	1917083	3	True				
ANR	1917733	CallExpression	"object_init_ex ( ret , ce )"		1917083	0					
ANR	1917734	Callee	object_init_ex		1917083	0					
ANR	1917735	Identifier	object_init_ex		1917083	0					
ANR	1917736	ArgumentList	ret		1917083	1					
ANR	1917737	Argument	ret		1917083	0					
ANR	1917738	Identifier	ret		1917083	0					
ANR	1917739	Argument	ce		1917083	1					
ANR	1917740	Identifier	ce		1917083	0					
ANR	1917741	ExpressionStatement	"soap_add_xml_ref ( ret , data )"	1504:4:49839:49866	1917083	4	True				
ANR	1917742	CallExpression	"soap_add_xml_ref ( ret , data )"		1917083	0					
ANR	1917743	Callee	soap_add_xml_ref		1917083	0					
ANR	1917744	Identifier	soap_add_xml_ref		1917083	0					
ANR	1917745	ArgumentList	ret		1917083	1					
ANR	1917746	Argument	ret		1917083	0					
ANR	1917747	Identifier	ret		1917083	0					
ANR	1917748	Argument	data		1917083	1					
ANR	1917749	Identifier	data		1917083	0					
ANR	1917750	ExpressionStatement	"master_to_zval_int ( & base , sdlType -> encode , data )"	1505:4:49872:49920	1917083	5	True				
ANR	1917751	CallExpression	"master_to_zval_int ( & base , sdlType -> encode , data )"		1917083	0					
ANR	1917752	Callee	master_to_zval_int		1917083	0					
ANR	1917753	Identifier	master_to_zval_int		1917083	0					
ANR	1917754	ArgumentList	& base		1917083	1					
ANR	1917755	Argument	& base		1917083	0					
ANR	1917756	UnaryOperationExpression	& base		1917083	0					
ANR	1917757	UnaryOperator	&		1917083	0					
ANR	1917758	Identifier	base		1917083	1					
ANR	1917759	Argument	sdlType -> encode		1917083	1					
ANR	1917760	PtrMemberAccess	sdlType -> encode		1917083	0					
ANR	1917761	Identifier	sdlType		1917083	0					
ANR	1917762	Identifier	encode		1917083	1					
ANR	1917763	Argument	data		1917083	2					
ANR	1917764	Identifier	data		1917083	0					
ANR	1917765	ExpressionStatement	"set_zval_property ( ret , ""_"" , & base )"	1506:4:49926:49960	1917083	6	True				
ANR	1917766	CallExpression	"set_zval_property ( ret , ""_"" , & base )"		1917083	0					
ANR	1917767	Callee	set_zval_property		1917083	0					
ANR	1917768	Identifier	set_zval_property		1917083	0					
ANR	1917769	ArgumentList	ret		1917083	1					
ANR	1917770	Argument	ret		1917083	0					
ANR	1917771	Identifier	ret		1917083	0					
ANR	1917772	Argument	"""_"""		1917083	1					
ANR	1917773	PrimaryExpression	"""_"""		1917083	0					
ANR	1917774	Argument	& base		1917083	2					
ANR	1917775	UnaryOperationExpression	& base		1917083	0					
ANR	1917776	UnaryOperator	&		1917083	0					
ANR	1917777	Identifier	base		1917083	1					
ANR	1917778	ElseStatement	else		1917083	0					
ANR	1917779	CompoundStatement		100:9:3246:3246	1917083	0					
ANR	1917780	ExpressionStatement	ZVAL_NULL ( ret )	1509:3:49981:49995	1917083	0	True				
ANR	1917781	CallExpression	ZVAL_NULL ( ret )		1917083	0					
ANR	1917782	Callee	ZVAL_NULL		1917083	0					
ANR	1917783	Identifier	ZVAL_NULL		1917083	0					
ANR	1917784	ArgumentList	ret		1917083	1					
ANR	1917785	Argument	ret		1917083	0					
ANR	1917786	Identifier	ret		1917083	0					
ANR	1917787	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1510:3:50000:50024	1917083	1	True				
ANR	1917788	CallExpression	"FIND_XML_NULL ( data , ret )"		1917083	0					
ANR	1917789	Callee	FIND_XML_NULL		1917083	0					
ANR	1917790	Identifier	FIND_XML_NULL		1917083	0					
ANR	1917791	ArgumentList	data		1917083	1					
ANR	1917792	Argument	data		1917083	0					
ANR	1917793	Identifier	data		1917083	0					
ANR	1917794	Argument	ret		1917083	1					
ANR	1917795	Identifier	ret		1917083	0					
ANR	1917796	IfStatement	"if ( soap_check_xml_ref ( ret , data ) )"		1917083	2					
ANR	1917797	Condition	"soap_check_xml_ref ( ret , data )"	1511:7:50033:50061	1917083	0	True				
ANR	1917798	CallExpression	"soap_check_xml_ref ( ret , data )"		1917083	0					
ANR	1917799	Callee	soap_check_xml_ref		1917083	0					
ANR	1917800	Identifier	soap_check_xml_ref		1917083	0					
ANR	1917801	ArgumentList	ret		1917083	1					
ANR	1917802	Argument	ret		1917083	0					
ANR	1917803	Identifier	ret		1917083	0					
ANR	1917804	Argument	data		1917083	1					
ANR	1917805	Identifier	data		1917083	0					
ANR	1917806	CompoundStatement		103:38:3334:3334	1917083	1					
ANR	1917807	ReturnStatement	return ret ;	1512:4:50070:50080	1917083	0	True				
ANR	1917808	Identifier	ret		1917083	0					
ANR	1917809	ExpressionStatement	"object_init_ex ( ret , ce )"	1514:3:50090:50113	1917083	3	True				
ANR	1917810	CallExpression	"object_init_ex ( ret , ce )"		1917083	0					
ANR	1917811	Callee	object_init_ex		1917083	0					
ANR	1917812	Identifier	object_init_ex		1917083	0					
ANR	1917813	ArgumentList	ret		1917083	1					
ANR	1917814	Argument	ret		1917083	0					
ANR	1917815	Identifier	ret		1917083	0					
ANR	1917816	Argument	ce		1917083	1					
ANR	1917817	Identifier	ce		1917083	0					
ANR	1917818	ExpressionStatement	"soap_add_xml_ref ( ret , data )"	1515:3:50118:50145	1917083	4	True				
ANR	1917819	CallExpression	"soap_add_xml_ref ( ret , data )"		1917083	0					
ANR	1917820	Callee	soap_add_xml_ref		1917083	0					
ANR	1917821	Identifier	soap_add_xml_ref		1917083	0					
ANR	1917822	ArgumentList	ret		1917083	1					
ANR	1917823	Argument	ret		1917083	0					
ANR	1917824	Identifier	ret		1917083	0					
ANR	1917825	Argument	data		1917083	1					
ANR	1917826	Identifier	data		1917083	0					
ANR	1917827	IfStatement	if ( sdlType -> model )		1917083	1					
ANR	1917828	Condition	sdlType -> model	1517:6:50157:50170	1917083	0	True				
ANR	1917829	PtrMemberAccess	sdlType -> model		1917083	0					
ANR	1917830	Identifier	sdlType		1917083	0					
ANR	1917831	Identifier	model		1917083	1					
ANR	1917832	CompoundStatement		109:22:3443:3443	1917083	1					
ANR	1917833	ExpressionStatement	"model_to_zval_object ( ret , sdlType -> model , data , sdl )"	1518:3:50178:50230	1917083	0	True				
ANR	1917834	CallExpression	"model_to_zval_object ( ret , sdlType -> model , data , sdl )"		1917083	0					
ANR	1917835	Callee	model_to_zval_object		1917083	0					
ANR	1917836	Identifier	model_to_zval_object		1917083	0					
ANR	1917837	ArgumentList	ret		1917083	1					
ANR	1917838	Argument	ret		1917083	0					
ANR	1917839	Identifier	ret		1917083	0					
ANR	1917840	Argument	sdlType -> model		1917083	1					
ANR	1917841	PtrMemberAccess	sdlType -> model		1917083	0					
ANR	1917842	Identifier	sdlType		1917083	0					
ANR	1917843	Identifier	model		1917083	1					
ANR	1917844	Argument	data		1917083	2					
ANR	1917845	Identifier	data		1917083	0					
ANR	1917846	Argument	sdl		1917083	3					
ANR	1917847	Identifier	sdl		1917083	0					
ANR	1917848	IfStatement	if ( redo_any )		1917083	1					
ANR	1917849	Condition	redo_any	1519:7:50239:50246	1917083	0	True				
ANR	1917850	Identifier	redo_any		1917083	0					
ANR	1917851	CompoundStatement		111:17:3519:3519	1917083	1					
ANR	1917852	IfStatement	"if ( ! get_zval_property ( ret , ""any"" , & rv ) )"		1917083	0					
ANR	1917853	Condition	"! get_zval_property ( ret , ""any"" , & rv )"	1520:8:50259:50293	1917083	0	True				
ANR	1917854	UnaryOperationExpression	"! get_zval_property ( ret , ""any"" , & rv )"		1917083	0					
ANR	1917855	UnaryOperator	!		1917083	0					
ANR	1917856	CallExpression	"get_zval_property ( ret , ""any"" , & rv )"		1917083	1					
ANR	1917857	Callee	get_zval_property		1917083	0					
ANR	1917858	Identifier	get_zval_property		1917083	0					
ANR	1917859	ArgumentList	ret		1917083	1					
ANR	1917860	Argument	ret		1917083	0					
ANR	1917861	Identifier	ret		1917083	0					
ANR	1917862	Argument	"""any"""		1917083	1					
ANR	1917863	PrimaryExpression	"""any"""		1917083	0					
ANR	1917864	Argument	& rv		1917083	2					
ANR	1917865	UnaryOperationExpression	& rv		1917083	0					
ANR	1917866	UnaryOperator	&		1917083	0					
ANR	1917867	Identifier	rv		1917083	1					
ANR	1917868	CompoundStatement		112:45:3566:3566	1917083	1					
ANR	1917869	ExpressionStatement	"model_to_zval_any ( ret , data -> children )"	1521:5:50303:50341	1917083	0	True				
ANR	1917870	CallExpression	"model_to_zval_any ( ret , data -> children )"		1917083	0					
ANR	1917871	Callee	model_to_zval_any		1917083	0					
ANR	1917872	Identifier	model_to_zval_any		1917083	0					
ANR	1917873	ArgumentList	ret		1917083	1					
ANR	1917874	Argument	ret		1917083	0					
ANR	1917875	Identifier	ret		1917083	0					
ANR	1917876	Argument	data -> children		1917083	1					
ANR	1917877	PtrMemberAccess	data -> children		1917083	0					
ANR	1917878	Identifier	data		1917083	0					
ANR	1917879	Identifier	children		1917083	1					
ANR	1917880	ExpressionStatement	"soap_add_xml_ref ( ret , data )"	1522:5:50348:50375	1917083	1	True				
ANR	1917881	CallExpression	"soap_add_xml_ref ( ret , data )"		1917083	0					
ANR	1917882	Callee	soap_add_xml_ref		1917083	0					
ANR	1917883	Identifier	soap_add_xml_ref		1917083	0					
ANR	1917884	ArgumentList	ret		1917083	1					
ANR	1917885	Argument	ret		1917083	0					
ANR	1917886	Identifier	ret		1917083	0					
ANR	1917887	Argument	data		1917083	1					
ANR	1917888	Identifier	data		1917083	0					
ANR	1917889	ElseStatement	else		1917083	0					
ANR	1917890	CompoundStatement		115:11:3658:3658	1917083	0					
ANR	1917891	ExpressionStatement	"unset_zval_property ( ret , ""any"" )"	1524:5:50395:50426	1917083	0	True				
ANR	1917892	CallExpression	"unset_zval_property ( ret , ""any"" )"		1917083	0					
ANR	1917893	Callee	unset_zval_property		1917083	0					
ANR	1917894	Identifier	unset_zval_property		1917083	0					
ANR	1917895	ArgumentList	ret		1917083	1					
ANR	1917896	Argument	ret		1917083	0					
ANR	1917897	Identifier	ret		1917083	0					
ANR	1917898	Argument	"""any"""		1917083	1					
ANR	1917899	PrimaryExpression	"""any"""		1917083	0					
ANR	1917900	IfStatement	if ( sdlType -> attributes )		1917083	2					
ANR	1917901	Condition	sdlType -> attributes	1528:6:50449:50467	1917083	0	True				
ANR	1917902	PtrMemberAccess	sdlType -> attributes		1917083	0					
ANR	1917903	Identifier	sdlType		1917083	0					
ANR	1917904	Identifier	attributes		1917083	1					
ANR	1917905	CompoundStatement		121:3:3745:3765	1917083	1					
ANR	1917906	IdentifierDeclStatement	sdlAttributePtr attr ;	1529:3:50475:50495	1917083	0	True				
ANR	1917907	IdentifierDecl	attr		1917083	0					
ANR	1917908	IdentifierDeclType	sdlAttributePtr		1917083	0					
ANR	1917909	Identifier	attr		1917083	1					
ANR	1917910	Statement	ZEND_HASH_FOREACH_PTR	1531:3:50501:50521	1917083	1	True				
ANR	1917911	Statement	(	1531:24:50522:50522	1917083	2	True				
ANR	1917912	Statement	sdlType	1531:25:50523:50529	1917083	3	True				
ANR	1917913	Statement	->	1531:32:50530:50531	1917083	4	True				
ANR	1917914	Statement	attributes	1531:34:50532:50541	1917083	5	True				
ANR	1917915	Statement	","	1531:44:50542:50542	1917083	6	True				
ANR	1917916	Statement	attr	1531:46:50544:50547	1917083	7	True				
ANR	1917917	Statement	)	1531:50:50548:50548	1917083	8	True				
ANR	1917918	CompoundStatement		123:52:3820:3820	1917083	9					
ANR	1917919	IfStatement	if ( attr -> name )		1917083	0					
ANR	1917920	Condition	attr -> name	1532:8:50560:50569	1917083	0	True				
ANR	1917921	PtrMemberAccess	attr -> name		1917083	0					
ANR	1917922	Identifier	attr		1917083	0					
ANR	1917923	Identifier	name		1917083	1					
ANR	1917924	CompoundStatement		126:5:3916:3936	1917083	1					
ANR	1917925	IdentifierDeclStatement	"xmlAttrPtr val = get_attribute ( data -> properties , attr -> name ) ;"	1533:5:50579:50639	1917083	0	True				
ANR	1917926	IdentifierDecl	"val = get_attribute ( data -> properties , attr -> name )"		1917083	0					
ANR	1917927	IdentifierDeclType	xmlAttrPtr		1917083	0					
ANR	1917928	Identifier	val		1917083	1					
ANR	1917929	AssignmentExpression	"val = get_attribute ( data -> properties , attr -> name )"		1917083	2		=			
ANR	1917930	Identifier	val		1917083	0					
ANR	1917931	CallExpression	"get_attribute ( data -> properties , attr -> name )"		1917083	1					
ANR	1917932	Callee	get_attribute		1917083	0					
ANR	1917933	Identifier	get_attribute		1917083	0					
ANR	1917934	ArgumentList	data -> properties		1917083	1					
ANR	1917935	Argument	data -> properties		1917083	0					
ANR	1917936	PtrMemberAccess	data -> properties		1917083	0					
ANR	1917937	Identifier	data		1917083	0					
ANR	1917938	Identifier	properties		1917083	1					
ANR	1917939	Argument	attr -> name		1917083	1					
ANR	1917940	PtrMemberAccess	attr -> name		1917083	0					
ANR	1917941	Identifier	attr		1917083	0					
ANR	1917942	Identifier	name		1917083	1					
ANR	1917943	IdentifierDeclStatement	char * str_val = NULL ;	1534:5:50646:50666	1917083	1	True				
ANR	1917944	IdentifierDecl	* str_val = NULL		1917083	0					
ANR	1917945	IdentifierDeclType	char *		1917083	0					
ANR	1917946	Identifier	str_val		1917083	1					
ANR	1917947	AssignmentExpression	* str_val = NULL		1917083	2		=			
ANR	1917948	Identifier	NULL		1917083	0					
ANR	1917949	Identifier	NULL		1917083	1					
ANR	1917950	IfStatement	if ( val && val -> children && val -> children -> content )		1917083	2					
ANR	1917951	Condition	val && val -> children && val -> children -> content	1536:9:50678:50723	1917083	0	True				
ANR	1917952	AndExpression	val && val -> children && val -> children -> content		1917083	0		&&			
ANR	1917953	Identifier	val		1917083	0					
ANR	1917954	AndExpression	val -> children && val -> children -> content		1917083	1		&&			
ANR	1917955	PtrMemberAccess	val -> children		1917083	0					
ANR	1917956	Identifier	val		1917083	0					
ANR	1917957	Identifier	children		1917083	1					
ANR	1917958	PtrMemberAccess	val -> children -> content		1917083	1					
ANR	1917959	PtrMemberAccess	val -> children		1917083	0					
ANR	1917960	Identifier	val		1917083	0					
ANR	1917961	Identifier	children		1917083	1					
ANR	1917962	Identifier	content		1917083	1					
ANR	1917963	CompoundStatement		128:57:3996:3996	1917083	1					
ANR	1917964	ExpressionStatement	str_val = ( char * ) val -> children -> content	1537:6:50734:50773	1917083	0	True				
ANR	1917965	AssignmentExpression	str_val = ( char * ) val -> children -> content		1917083	0		=			
ANR	1917966	Identifier	str_val		1917083	0					
ANR	1917967	CastExpression	( char * ) val -> children -> content		1917083	1					
ANR	1917968	CastTarget	char *		1917083	0					
ANR	1917969	PtrMemberAccess	val -> children -> content		1917083	1					
ANR	1917970	PtrMemberAccess	val -> children		1917083	0					
ANR	1917971	Identifier	val		1917083	0					
ANR	1917972	Identifier	children		1917083	1					
ANR	1917973	Identifier	content		1917083	1					
ANR	1917974	IfStatement	"if ( attr -> fixed && strcmp ( attr -> fixed , str_val ) != 0 )"		1917083	1					
ANR	1917975	Condition	"attr -> fixed && strcmp ( attr -> fixed , str_val ) != 0"	1538:10:50785:50832	1917083	0	True				
ANR	1917976	AndExpression	"attr -> fixed && strcmp ( attr -> fixed , str_val ) != 0"		1917083	0		&&			
ANR	1917977	PtrMemberAccess	attr -> fixed		1917083	0					
ANR	1917978	Identifier	attr		1917083	0					
ANR	1917979	Identifier	fixed		1917083	1					
ANR	1917980	EqualityExpression	"strcmp ( attr -> fixed , str_val ) != 0"		1917083	1		!=			
ANR	1917981	CallExpression	"strcmp ( attr -> fixed , str_val )"		1917083	0					
ANR	1917982	Callee	strcmp		1917083	0					
ANR	1917983	Identifier	strcmp		1917083	0					
ANR	1917984	ArgumentList	attr -> fixed		1917083	1					
ANR	1917985	Argument	attr -> fixed		1917083	0					
ANR	1917986	PtrMemberAccess	attr -> fixed		1917083	0					
ANR	1917987	Identifier	attr		1917083	0					
ANR	1917988	Identifier	fixed		1917083	1					
ANR	1917989	Argument	str_val		1917083	1					
ANR	1917990	Identifier	str_val		1917083	0					
ANR	1917991	PrimaryExpression	0		1917083	1					
ANR	1917992	CompoundStatement		130:60:4105:4105	1917083	1					
ANR	1917993	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"" , attr -> name , attr -> fixed , str_val )"	1539:7:50844:50975	1917083	0	True				
ANR	1917994	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"" , attr -> name , attr -> fixed , str_val )"		1917083	0					
ANR	1917995	Callee	soap_error3		1917083	0					
ANR	1917996	Identifier	soap_error3		1917083	0					
ANR	1917997	ArgumentList	E_ERROR		1917083	1					
ANR	1917998	Argument	E_ERROR		1917083	0					
ANR	1917999	Identifier	E_ERROR		1917083	0					
ANR	1918000	Argument	"""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"""		1917083	1					
ANR	1918001	PrimaryExpression	"""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"""		1917083	0					
ANR	1918002	Argument	attr -> name		1917083	2					
ANR	1918003	PtrMemberAccess	attr -> name		1917083	0					
ANR	1918004	Identifier	attr		1917083	0					
ANR	1918005	Identifier	name		1917083	1					
ANR	1918006	Argument	attr -> fixed		1917083	3					
ANR	1918007	PtrMemberAccess	attr -> fixed		1917083	0					
ANR	1918008	Identifier	attr		1917083	0					
ANR	1918009	Identifier	fixed		1917083	1					
ANR	1918010	Argument	str_val		1917083	4					
ANR	1918011	Identifier	str_val		1917083	0					
ANR	1918012	ElseStatement	else		1917083	0					
ANR	1918013	IfStatement	if ( attr -> fixed )		1917083	0					
ANR	1918014	Condition	attr -> fixed	1541:16:51001:51011	1917083	0	True				
ANR	1918015	PtrMemberAccess	attr -> fixed		1917083	0					
ANR	1918016	Identifier	attr		1917083	0					
ANR	1918017	Identifier	fixed		1917083	1					
ANR	1918018	CompoundStatement		133:29:4284:4284	1917083	1					
ANR	1918019	ExpressionStatement	str_val = attr -> fixed	1542:6:51022:51043	1917083	0	True				
ANR	1918020	AssignmentExpression	str_val = attr -> fixed		1917083	0		=			
ANR	1918021	Identifier	str_val		1917083	0					
ANR	1918022	PtrMemberAccess	attr -> fixed		1917083	1					
ANR	1918023	Identifier	attr		1917083	0					
ANR	1918024	Identifier	fixed		1917083	1					
ANR	1918025	ElseStatement	else		1917083	0					
ANR	1918026	IfStatement	if ( attr -> def )		1917083	0					
ANR	1918027	Condition	attr -> def	1543:16:51061:51069	1917083	0	True				
ANR	1918028	PtrMemberAccess	attr -> def		1917083	0					
ANR	1918029	Identifier	attr		1917083	0					
ANR	1918030	Identifier	def		1917083	1					
ANR	1918031	CompoundStatement		135:27:4342:4342	1917083	1					
ANR	1918032	ExpressionStatement	str_val = attr -> def	1544:6:51080:51099	1917083	0	True				
ANR	1918033	AssignmentExpression	str_val = attr -> def		1917083	0		=			
ANR	1918034	Identifier	str_val		1917083	0					
ANR	1918035	PtrMemberAccess	attr -> def		1917083	1					
ANR	1918036	Identifier	attr		1917083	0					
ANR	1918037	Identifier	def		1917083	1					
ANR	1918038	IfStatement	if ( str_val )		1917083	3					
ANR	1918039	Condition	str_val	1546:9:51117:51123	1917083	0	True				
ANR	1918040	Identifier	str_val		1917083	0					
ANR	1918041	CompoundStatement		140:6:4434:4443	1917083	1					
ANR	1918042	IdentifierDeclStatement	"xmlNodePtr dummy , text ;"	1547:6:51134:51156	1917083	0	True				
ANR	1918043	IdentifierDecl	dummy		1917083	0					
ANR	1918044	IdentifierDeclType	xmlNodePtr		1917083	0					
ANR	1918045	Identifier	dummy		1917083	1					
ANR	1918046	IdentifierDecl	text		1917083	1					
ANR	1918047	IdentifierDeclType	xmlNodePtr		1917083	0					
ANR	1918048	Identifier	text		1917083	1					
ANR	1918049	IdentifierDeclStatement	zval data ;	1548:6:51164:51173	1917083	1	True				
ANR	1918050	IdentifierDecl	data		1917083	0					
ANR	1918051	IdentifierDeclType	zval		1917083	0					
ANR	1918052	Identifier	data		1917083	1					
ANR	1918053	ExpressionStatement	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1550:6:51182:51225	1917083	2	True				
ANR	1918054	AssignmentExpression	"dummy = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1917083	0		=			
ANR	1918055	Identifier	dummy		1917083	0					
ANR	1918056	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1917083	1					
ANR	1918057	Callee	xmlNewNode		1917083	0					
ANR	1918058	Identifier	xmlNewNode		1917083	0					
ANR	1918059	ArgumentList	NULL		1917083	1					
ANR	1918060	Argument	NULL		1917083	0					
ANR	1918061	Identifier	NULL		1917083	0					
ANR	1918062	Argument	"BAD_CAST ( ""BOGUS"" )"		1917083	1					
ANR	1918063	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1917083	0					
ANR	1918064	Callee	BAD_CAST		1917083	0					
ANR	1918065	Identifier	BAD_CAST		1917083	0					
ANR	1918066	ArgumentList	"""BOGUS"""		1917083	1					
ANR	1918067	Argument	"""BOGUS"""		1917083	0					
ANR	1918068	PrimaryExpression	"""BOGUS"""		1917083	0					
ANR	1918069	ExpressionStatement	text = xmlNewText ( BAD_CAST ( str_val ) )	1551:6:51233:51269	1917083	3	True				
ANR	1918070	AssignmentExpression	text = xmlNewText ( BAD_CAST ( str_val ) )		1917083	0		=			
ANR	1918071	Identifier	text		1917083	0					
ANR	1918072	CallExpression	xmlNewText ( BAD_CAST ( str_val ) )		1917083	1					
ANR	1918073	Callee	xmlNewText		1917083	0					
ANR	1918074	Identifier	xmlNewText		1917083	0					
ANR	1918075	ArgumentList	BAD_CAST ( str_val )		1917083	1					
ANR	1918076	Argument	BAD_CAST ( str_val )		1917083	0					
ANR	1918077	CallExpression	BAD_CAST ( str_val )		1917083	0					
ANR	1918078	Callee	BAD_CAST		1917083	0					
ANR	1918079	Identifier	BAD_CAST		1917083	0					
ANR	1918080	ArgumentList	str_val		1917083	1					
ANR	1918081	Argument	str_val		1917083	0					
ANR	1918082	Identifier	str_val		1917083	0					
ANR	1918083	ExpressionStatement	"xmlAddChild ( dummy , text )"	1552:6:51277:51301	1917083	4	True				
ANR	1918084	CallExpression	"xmlAddChild ( dummy , text )"		1917083	0					
ANR	1918085	Callee	xmlAddChild		1917083	0					
ANR	1918086	Identifier	xmlAddChild		1917083	0					
ANR	1918087	ArgumentList	dummy		1917083	1					
ANR	1918088	Argument	dummy		1917083	0					
ANR	1918089	Identifier	dummy		1917083	0					
ANR	1918090	Argument	text		1917083	1					
ANR	1918091	Identifier	text		1917083	0					
ANR	1918092	ExpressionStatement	ZVAL_NULL ( & data )	1553:6:51309:51325	1917083	5	True				
ANR	1918093	CallExpression	ZVAL_NULL ( & data )		1917083	0					
ANR	1918094	Callee	ZVAL_NULL		1917083	0					
ANR	1918095	Identifier	ZVAL_NULL		1917083	0					
ANR	1918096	ArgumentList	& data		1917083	1					
ANR	1918097	Argument	& data		1917083	0					
ANR	1918098	UnaryOperationExpression	& data		1917083	0					
ANR	1918099	UnaryOperator	&		1917083	0					
ANR	1918100	Identifier	data		1917083	1					
ANR	1918101	ExpressionStatement	"master_to_zval ( & data , attr -> encode , dummy )"	1554:6:51333:51375	1917083	6	True				
ANR	1918102	CallExpression	"master_to_zval ( & data , attr -> encode , dummy )"		1917083	0					
ANR	1918103	Callee	master_to_zval		1917083	0					
ANR	1918104	Identifier	master_to_zval		1917083	0					
ANR	1918105	ArgumentList	& data		1917083	1					
ANR	1918106	Argument	& data		1917083	0					
ANR	1918107	UnaryOperationExpression	& data		1917083	0					
ANR	1918108	UnaryOperator	&		1917083	0					
ANR	1918109	Identifier	data		1917083	1					
ANR	1918110	Argument	attr -> encode		1917083	1					
ANR	1918111	PtrMemberAccess	attr -> encode		1917083	0					
ANR	1918112	Identifier	attr		1917083	0					
ANR	1918113	Identifier	encode		1917083	1					
ANR	1918114	Argument	dummy		1917083	2					
ANR	1918115	Identifier	dummy		1917083	0					
ANR	1918116	ExpressionStatement	xmlFreeNode ( dummy )	1555:6:51383:51401	1917083	7	True				
ANR	1918117	CallExpression	xmlFreeNode ( dummy )		1917083	0					
ANR	1918118	Callee	xmlFreeNode		1917083	0					
ANR	1918119	Identifier	xmlFreeNode		1917083	0					
ANR	1918120	ArgumentList	dummy		1917083	1					
ANR	1918121	Argument	dummy		1917083	0					
ANR	1918122	Identifier	dummy		1917083	0					
ANR	1918123	ExpressionStatement	"set_zval_property ( ret , attr -> name , & data )"	1556:6:51409:51450	1917083	8	True				
ANR	1918124	CallExpression	"set_zval_property ( ret , attr -> name , & data )"		1917083	0					
ANR	1918125	Callee	set_zval_property		1917083	0					
ANR	1918126	Identifier	set_zval_property		1917083	0					
ANR	1918127	ArgumentList	ret		1917083	1					
ANR	1918128	Argument	ret		1917083	0					
ANR	1918129	Identifier	ret		1917083	0					
ANR	1918130	Argument	attr -> name		1917083	1					
ANR	1918131	PtrMemberAccess	attr -> name		1917083	0					
ANR	1918132	Identifier	attr		1917083	0					
ANR	1918133	Identifier	name		1917083	1					
ANR	1918134	Argument	& data		1917083	2					
ANR	1918135	UnaryOperationExpression	& data		1917083	0					
ANR	1918136	UnaryOperator	&		1917083	0					
ANR	1918137	Identifier	data		1917083	1					
ANR	1918138	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1559:5:51470:51493	1917083	10	True				
ANR	1918139	CallExpression	ZEND_HASH_FOREACH_END ( )		1917083	0					
ANR	1918140	Callee	ZEND_HASH_FOREACH_END		1917083	0					
ANR	1918141	Identifier	ZEND_HASH_FOREACH_END		1917083	0					
ANR	1918142	ArgumentList			1917083	1					
ANR	1918143	ElseStatement	else		1917083	0					
ANR	1918144	CompoundStatement		153:8:4777:4777	1917083	0					
ANR	1918145	ExpressionStatement	ZVAL_NULL ( ret )	1562:2:51511:51525	1917083	0	True				
ANR	1918146	CallExpression	ZVAL_NULL ( ret )		1917083	0					
ANR	1918147	Callee	ZVAL_NULL		1917083	0					
ANR	1918148	Identifier	ZVAL_NULL		1917083	0					
ANR	1918149	ArgumentList	ret		1917083	1					
ANR	1918150	Argument	ret		1917083	0					
ANR	1918151	Identifier	ret		1917083	0					
ANR	1918152	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	1563:2:51529:51553	1917083	1	True				
ANR	1918153	CallExpression	"FIND_XML_NULL ( data , ret )"		1917083	0					
ANR	1918154	Callee	FIND_XML_NULL		1917083	0					
ANR	1918155	Identifier	FIND_XML_NULL		1917083	0					
ANR	1918156	ArgumentList	data		1917083	1					
ANR	1918157	Argument	data		1917083	0					
ANR	1918158	Identifier	data		1917083	0					
ANR	1918159	Argument	ret		1917083	1					
ANR	1918160	Identifier	ret		1917083	0					
ANR	1918161	IfStatement	"if ( soap_check_xml_ref ( ret , data ) )"		1917083	2					
ANR	1918162	Condition	"soap_check_xml_ref ( ret , data )"	1564:6:51561:51589	1917083	0	True				
ANR	1918163	CallExpression	"soap_check_xml_ref ( ret , data )"		1917083	0					
ANR	1918164	Callee	soap_check_xml_ref		1917083	0					
ANR	1918165	Identifier	soap_check_xml_ref		1917083	0					
ANR	1918166	ArgumentList	ret		1917083	1					
ANR	1918167	Argument	ret		1917083	0					
ANR	1918168	Identifier	ret		1917083	0					
ANR	1918169	Argument	data		1917083	1					
ANR	1918170	Identifier	data		1917083	0					
ANR	1918171	CompoundStatement		156:37:4862:4862	1917083	1					
ANR	1918172	ReturnStatement	return ret ;	1565:3:51597:51607	1917083	0	True				
ANR	1918173	Identifier	ret		1917083	0					
ANR	1918174	ExpressionStatement	"object_init_ex ( ret , ce )"	1568:2:51616:51639	1917083	3	True				
ANR	1918175	CallExpression	"object_init_ex ( ret , ce )"		1917083	0					
ANR	1918176	Callee	object_init_ex		1917083	0					
ANR	1918177	Identifier	object_init_ex		1917083	0					
ANR	1918178	ArgumentList	ret		1917083	1					
ANR	1918179	Argument	ret		1917083	0					
ANR	1918180	Identifier	ret		1917083	0					
ANR	1918181	Argument	ce		1917083	1					
ANR	1918182	Identifier	ce		1917083	0					
ANR	1918183	ExpressionStatement	"soap_add_xml_ref ( ret , data )"	1569:2:51643:51670	1917083	4	True				
ANR	1918184	CallExpression	"soap_add_xml_ref ( ret , data )"		1917083	0					
ANR	1918185	Callee	soap_add_xml_ref		1917083	0					
ANR	1918186	Identifier	soap_add_xml_ref		1917083	0					
ANR	1918187	ArgumentList	ret		1917083	1					
ANR	1918188	Argument	ret		1917083	0					
ANR	1918189	Identifier	ret		1917083	0					
ANR	1918190	Argument	data		1917083	1					
ANR	1918191	Identifier	data		1917083	0					
ANR	1918192	ExpressionStatement	trav = data -> children	1570:2:51674:51695	1917083	5	True				
ANR	1918193	AssignmentExpression	trav = data -> children		1917083	0		=			
ANR	1918194	Identifier	trav		1917083	0					
ANR	1918195	PtrMemberAccess	data -> children		1917083	1					
ANR	1918196	Identifier	data		1917083	0					
ANR	1918197	Identifier	children		1917083	1					
ANR	1918198	WhileStatement	while ( trav != NULL )		1917083	6					
ANR	1918199	Condition	trav != NULL	1572:9:51707:51718	1917083	0	True				
ANR	1918200	EqualityExpression	trav != NULL		1917083	0		!=			
ANR	1918201	Identifier	trav		1917083	0					
ANR	1918202	Identifier	NULL		1917083	1					
ANR	1918203	CompoundStatement		164:23:4991:4991	1917083	1					
ANR	1918204	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1917083	0					
ANR	1918205	Condition	trav -> type == XML_ELEMENT_NODE	1573:7:51730:51759	1917083	0	True				
ANR	1918206	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1917083	0		==			
ANR	1918207	PtrMemberAccess	trav -> type		1917083	0					
ANR	1918208	Identifier	trav		1917083	0					
ANR	1918209	Identifier	type		1917083	1					
ANR	1918210	Identifier	XML_ELEMENT_NODE		1917083	1					
ANR	1918211	CompoundStatement		167:4:5060:5070	1917083	1					
ANR	1918212	IdentifierDeclStatement	"zval tmpVal , rv ;"	1574:4:51768:51784	1917083	0	True				
ANR	1918213	IdentifierDecl	tmpVal		1917083	0					
ANR	1918214	IdentifierDeclType	zval		1917083	0					
ANR	1918215	Identifier	tmpVal		1917083	1					
ANR	1918216	IdentifierDecl	rv		1917083	1					
ANR	1918217	IdentifierDeclType	zval		1917083	0					
ANR	1918218	Identifier	rv		1917083	1					
ANR	1918219	IdentifierDeclStatement	zval * prop ;	1575:4:51790:51800	1917083	1	True				
ANR	1918220	IdentifierDecl	* prop		1917083	0					
ANR	1918221	IdentifierDeclType	zval *		1917083	0					
ANR	1918222	Identifier	prop		1917083	1					
ANR	1918223	ExpressionStatement	ZVAL_NULL ( & tmpVal )	1577:4:51807:51825	1917083	2	True				
ANR	1918224	CallExpression	ZVAL_NULL ( & tmpVal )		1917083	0					
ANR	1918225	Callee	ZVAL_NULL		1917083	0					
ANR	1918226	Identifier	ZVAL_NULL		1917083	0					
ANR	1918227	ArgumentList	& tmpVal		1917083	1					
ANR	1918228	Argument	& tmpVal		1917083	0					
ANR	1918229	UnaryOperationExpression	& tmpVal		1917083	0					
ANR	1918230	UnaryOperator	&		1917083	0					
ANR	1918231	Identifier	tmpVal		1917083	1					
ANR	1918232	ExpressionStatement	"master_to_zval ( & tmpVal , NULL , trav )"	1578:4:51831:51866	1917083	3	True				
ANR	1918233	CallExpression	"master_to_zval ( & tmpVal , NULL , trav )"		1917083	0					
ANR	1918234	Callee	master_to_zval		1917083	0					
ANR	1918235	Identifier	master_to_zval		1917083	0					
ANR	1918236	ArgumentList	& tmpVal		1917083	1					
ANR	1918237	Argument	& tmpVal		1917083	0					
ANR	1918238	UnaryOperationExpression	& tmpVal		1917083	0					
ANR	1918239	UnaryOperator	&		1917083	0					
ANR	1918240	Identifier	tmpVal		1917083	1					
ANR	1918241	Argument	NULL		1917083	1					
ANR	1918242	Identifier	NULL		1917083	0					
ANR	1918243	Argument	trav		1917083	2					
ANR	1918244	Identifier	trav		1917083	0					
ANR	1918245	ExpressionStatement	"prop = get_zval_property ( ret , ( char * ) trav -> name , & rv )"	1580:4:51873:51926	1917083	4	True				
ANR	1918246	AssignmentExpression	"prop = get_zval_property ( ret , ( char * ) trav -> name , & rv )"		1917083	0		=			
ANR	1918247	Identifier	prop		1917083	0					
ANR	1918248	CallExpression	"get_zval_property ( ret , ( char * ) trav -> name , & rv )"		1917083	1					
ANR	1918249	Callee	get_zval_property		1917083	0					
ANR	1918250	Identifier	get_zval_property		1917083	0					
ANR	1918251	ArgumentList	ret		1917083	1					
ANR	1918252	Argument	ret		1917083	0					
ANR	1918253	Identifier	ret		1917083	0					
ANR	1918254	Argument	( char * ) trav -> name		1917083	1					
ANR	1918255	CastExpression	( char * ) trav -> name		1917083	0					
ANR	1918256	CastTarget	char *		1917083	0					
ANR	1918257	PtrMemberAccess	trav -> name		1917083	1					
ANR	1918258	Identifier	trav		1917083	0					
ANR	1918259	Identifier	name		1917083	1					
ANR	1918260	Argument	& rv		1917083	2					
ANR	1918261	UnaryOperationExpression	& rv		1917083	0					
ANR	1918262	UnaryOperator	&		1917083	0					
ANR	1918263	Identifier	rv		1917083	1					
ANR	1918264	IfStatement	if ( ! prop )		1917083	5					
ANR	1918265	Condition	! prop	1581:8:51936:51940	1917083	0	True				
ANR	1918266	UnaryOperationExpression	! prop		1917083	0					
ANR	1918267	UnaryOperator	!		1917083	0					
ANR	1918268	Identifier	prop		1917083	1					
ANR	1918269	CompoundStatement		173:15:5213:5213	1917083	1					
ANR	1918270	IfStatement	"if ( ! trav -> next || ! get_node ( trav -> next , ( char * ) trav -> name ) )"		1917083	0					
ANR	1918271	Condition	"! trav -> next || ! get_node ( trav -> next , ( char * ) trav -> name )"	1582:9:51954:52008	1917083	0	True				
ANR	1918272	OrExpression	"! trav -> next || ! get_node ( trav -> next , ( char * ) trav -> name )"		1917083	0		||			
ANR	1918273	UnaryOperationExpression	! trav -> next		1917083	0					
ANR	1918274	UnaryOperator	!		1917083	0					
ANR	1918275	PtrMemberAccess	trav -> next		1917083	1					
ANR	1918276	Identifier	trav		1917083	0					
ANR	1918277	Identifier	next		1917083	1					
ANR	1918278	UnaryOperationExpression	"! get_node ( trav -> next , ( char * ) trav -> name )"		1917083	1					
ANR	1918279	UnaryOperator	!		1917083	0					
ANR	1918280	CallExpression	"get_node ( trav -> next , ( char * ) trav -> name )"		1917083	1					
ANR	1918281	Callee	get_node		1917083	0					
ANR	1918282	Identifier	get_node		1917083	0					
ANR	1918283	ArgumentList	trav -> next		1917083	1					
ANR	1918284	Argument	trav -> next		1917083	0					
ANR	1918285	PtrMemberAccess	trav -> next		1917083	0					
ANR	1918286	Identifier	trav		1917083	0					
ANR	1918287	Identifier	next		1917083	1					
ANR	1918288	Argument	( char * ) trav -> name		1917083	1					
ANR	1918289	CastExpression	( char * ) trav -> name		1917083	0					
ANR	1918290	CastTarget	char *		1917083	0					
ANR	1918291	PtrMemberAccess	trav -> name		1917083	1					
ANR	1918292	Identifier	trav		1917083	0					
ANR	1918293	Identifier	name		1917083	1					
ANR	1918294	CompoundStatement		174:66:5281:5281	1917083	1					
ANR	1918295	ExpressionStatement	"set_zval_property ( ret , ( char * ) trav -> name , & tmpVal )"	1583:6:52019:52069	1917083	0	True				
ANR	1918296	CallExpression	"set_zval_property ( ret , ( char * ) trav -> name , & tmpVal )"		1917083	0					
ANR	1918297	Callee	set_zval_property		1917083	0					
ANR	1918298	Identifier	set_zval_property		1917083	0					
ANR	1918299	ArgumentList	ret		1917083	1					
ANR	1918300	Argument	ret		1917083	0					
ANR	1918301	Identifier	ret		1917083	0					
ANR	1918302	Argument	( char * ) trav -> name		1917083	1					
ANR	1918303	CastExpression	( char * ) trav -> name		1917083	0					
ANR	1918304	CastTarget	char *		1917083	0					
ANR	1918305	PtrMemberAccess	trav -> name		1917083	1					
ANR	1918306	Identifier	trav		1917083	0					
ANR	1918307	Identifier	name		1917083	1					
ANR	1918308	Argument	& tmpVal		1917083	2					
ANR	1918309	UnaryOperationExpression	& tmpVal		1917083	0					
ANR	1918310	UnaryOperator	&		1917083	0					
ANR	1918311	Identifier	tmpVal		1917083	1					
ANR	1918312	ElseStatement	else		1917083	0					
ANR	1918313	CompoundStatement		177:6:5361:5369	1917083	0					
ANR	1918314	IdentifierDeclStatement	zval arr ;	1585:6:52091:52099	1917083	0	True				
ANR	1918315	IdentifierDecl	arr		1917083	0					
ANR	1918316	IdentifierDeclType	zval		1917083	0					
ANR	1918317	Identifier	arr		1917083	1					
ANR	1918318	ExpressionStatement	array_init ( & arr )	1587:6:52108:52124	1917083	1	True				
ANR	1918319	CallExpression	array_init ( & arr )		1917083	0					
ANR	1918320	Callee	array_init		1917083	0					
ANR	1918321	Identifier	array_init		1917083	0					
ANR	1918322	ArgumentList	& arr		1917083	1					
ANR	1918323	Argument	& arr		1917083	0					
ANR	1918324	UnaryOperationExpression	& arr		1917083	0					
ANR	1918325	UnaryOperator	&		1917083	0					
ANR	1918326	Identifier	arr		1917083	1					
ANR	1918327	ExpressionStatement	"add_next_index_zval ( & arr , & tmpVal )"	1588:6:52132:52166	1917083	2	True				
ANR	1918328	CallExpression	"add_next_index_zval ( & arr , & tmpVal )"		1917083	0					
ANR	1918329	Callee	add_next_index_zval		1917083	0					
ANR	1918330	Identifier	add_next_index_zval		1917083	0					
ANR	1918331	ArgumentList	& arr		1917083	1					
ANR	1918332	Argument	& arr		1917083	0					
ANR	1918333	UnaryOperationExpression	& arr		1917083	0					
ANR	1918334	UnaryOperator	&		1917083	0					
ANR	1918335	Identifier	arr		1917083	1					
ANR	1918336	Argument	& tmpVal		1917083	1					
ANR	1918337	UnaryOperationExpression	& tmpVal		1917083	0					
ANR	1918338	UnaryOperator	&		1917083	0					
ANR	1918339	Identifier	tmpVal		1917083	1					
ANR	1918340	ExpressionStatement	"set_zval_property ( ret , ( char * ) trav -> name , & arr )"	1589:6:52174:52221	1917083	3	True				
ANR	1918341	CallExpression	"set_zval_property ( ret , ( char * ) trav -> name , & arr )"		1917083	0					
ANR	1918342	Callee	set_zval_property		1917083	0					
ANR	1918343	Identifier	set_zval_property		1917083	0					
ANR	1918344	ArgumentList	ret		1917083	1					
ANR	1918345	Argument	ret		1917083	0					
ANR	1918346	Identifier	ret		1917083	0					
ANR	1918347	Argument	( char * ) trav -> name		1917083	1					
ANR	1918348	CastExpression	( char * ) trav -> name		1917083	0					
ANR	1918349	CastTarget	char *		1917083	0					
ANR	1918350	PtrMemberAccess	trav -> name		1917083	1					
ANR	1918351	Identifier	trav		1917083	0					
ANR	1918352	Identifier	name		1917083	1					
ANR	1918353	Argument	& arr		1917083	2					
ANR	1918354	UnaryOperationExpression	& arr		1917083	0					
ANR	1918355	UnaryOperator	&		1917083	0					
ANR	1918356	Identifier	arr		1917083	1					
ANR	1918357	ElseStatement	else		1917083	0					
ANR	1918358	CompoundStatement		183:11:5511:5511	1917083	0					
ANR	1918359	IfStatement	if ( Z_TYPE_P ( prop ) != IS_ARRAY )		1917083	0					
ANR	1918360	Condition	Z_TYPE_P ( prop ) != IS_ARRAY	1593:9:52299:52324	1917083	0	True				
ANR	1918361	EqualityExpression	Z_TYPE_P ( prop ) != IS_ARRAY		1917083	0		!=			
ANR	1918362	CallExpression	Z_TYPE_P ( prop )		1917083	0					
ANR	1918363	Callee	Z_TYPE_P		1917083	0					
ANR	1918364	Identifier	Z_TYPE_P		1917083	0					
ANR	1918365	ArgumentList	prop		1917083	1					
ANR	1918366	Argument	prop		1917083	0					
ANR	1918367	Identifier	prop		1917083	0					
ANR	1918368	Identifier	IS_ARRAY		1917083	1					
ANR	1918369	CompoundStatement		185:37:5597:5597	1917083	1					
ANR	1918370	ExpressionStatement	array_init ( & arr )	1595:6:52366:52382	1917083	0	True				
ANR	1918371	CallExpression	array_init ( & arr )		1917083	0					
ANR	1918372	Callee	array_init		1917083	0					
ANR	1918373	Identifier	array_init		1917083	0					
ANR	1918374	ArgumentList	& arr		1917083	1					
ANR	1918375	Argument	& arr		1917083	0					
ANR	1918376	UnaryOperationExpression	& arr		1917083	0					
ANR	1918377	UnaryOperator	&		1917083	0					
ANR	1918378	Identifier	arr		1917083	1					
ANR	1918379	ExpressionStatement	Z_ADDREF_P ( prop )	1596:6:52390:52406	1917083	1	True				
ANR	1918380	CallExpression	Z_ADDREF_P ( prop )		1917083	0					
ANR	1918381	Callee	Z_ADDREF_P		1917083	0					
ANR	1918382	Identifier	Z_ADDREF_P		1917083	0					
ANR	1918383	ArgumentList	prop		1917083	1					
ANR	1918384	Argument	prop		1917083	0					
ANR	1918385	Identifier	prop		1917083	0					
ANR	1918386	ExpressionStatement	"add_next_index_zval ( & arr , prop )"	1597:6:52414:52445	1917083	2	True				
ANR	1918387	CallExpression	"add_next_index_zval ( & arr , prop )"		1917083	0					
ANR	1918388	Callee	add_next_index_zval		1917083	0					
ANR	1918389	Identifier	add_next_index_zval		1917083	0					
ANR	1918390	ArgumentList	& arr		1917083	1					
ANR	1918391	Argument	& arr		1917083	0					
ANR	1918392	UnaryOperationExpression	& arr		1917083	0					
ANR	1918393	UnaryOperator	&		1917083	0					
ANR	1918394	Identifier	arr		1917083	1					
ANR	1918395	Argument	prop		1917083	1					
ANR	1918396	Identifier	prop		1917083	0					
ANR	1918397	ExpressionStatement	"set_zval_property ( ret , ( char * ) trav -> name , & arr )"	1598:6:52453:52500	1917083	3	True				
ANR	1918398	CallExpression	"set_zval_property ( ret , ( char * ) trav -> name , & arr )"		1917083	0					
ANR	1918399	Callee	set_zval_property		1917083	0					
ANR	1918400	Identifier	set_zval_property		1917083	0					
ANR	1918401	ArgumentList	ret		1917083	1					
ANR	1918402	Argument	ret		1917083	0					
ANR	1918403	Identifier	ret		1917083	0					
ANR	1918404	Argument	( char * ) trav -> name		1917083	1					
ANR	1918405	CastExpression	( char * ) trav -> name		1917083	0					
ANR	1918406	CastTarget	char *		1917083	0					
ANR	1918407	PtrMemberAccess	trav -> name		1917083	1					
ANR	1918408	Identifier	trav		1917083	0					
ANR	1918409	Identifier	name		1917083	1					
ANR	1918410	Argument	& arr		1917083	2					
ANR	1918411	UnaryOperationExpression	& arr		1917083	0					
ANR	1918412	UnaryOperator	&		1917083	0					
ANR	1918413	Identifier	arr		1917083	1					
ANR	1918414	ExpressionStatement	prop = & arr	1599:6:52508:52519	1917083	4	True				
ANR	1918415	AssignmentExpression	prop = & arr		1917083	0		=			
ANR	1918416	Identifier	prop		1917083	0					
ANR	1918417	UnaryOperationExpression	& arr		1917083	1					
ANR	1918418	UnaryOperator	&		1917083	0					
ANR	1918419	Identifier	arr		1917083	1					
ANR	1918420	ExpressionStatement	"add_next_index_zval ( prop , & tmpVal )"	1602:5:52562:52596	1917083	1	True				
ANR	1918421	CallExpression	"add_next_index_zval ( prop , & tmpVal )"		1917083	0					
ANR	1918422	Callee	add_next_index_zval		1917083	0					
ANR	1918423	Identifier	add_next_index_zval		1917083	0					
ANR	1918424	ArgumentList	prop		1917083	1					
ANR	1918425	Argument	prop		1917083	0					
ANR	1918426	Identifier	prop		1917083	0					
ANR	1918427	Argument	& tmpVal		1917083	1					
ANR	1918428	UnaryOperationExpression	& tmpVal		1917083	0					
ANR	1918429	UnaryOperator	&		1917083	0					
ANR	1918430	Identifier	tmpVal		1917083	1					
ANR	1918431	ExpressionStatement	trav = trav -> next	1605:3:52612:52629	1917083	1	True				
ANR	1918432	AssignmentExpression	trav = trav -> next		1917083	0		=			
ANR	1918433	Identifier	trav		1917083	0					
ANR	1918434	PtrMemberAccess	trav -> next		1917083	1					
ANR	1918435	Identifier	trav		1917083	0					
ANR	1918436	Identifier	next		1917083	1					
ANR	1918437	ReturnStatement	return ret ;	1608:1:52639:52649	1917083	8	True				
ANR	1918438	Identifier	ret		1917083	0					
ANR	1918439	ReturnType	static zval *		1917083	1					
ANR	1918440	Identifier	to_zval_object_ex		1917083	2					
ANR	1918441	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data , zend_class_entry * pce"		1917083	3					
ANR	1918442	Parameter	zval * ret	1408:31:46658:46666	1917083	0	True				
ANR	1918443	ParameterType	zval *		1917083	0					
ANR	1918444	Identifier	ret		1917083	1					
ANR	1918445	Parameter	encodeTypePtr type	1408:42:46669:46686	1917083	1	True				
ANR	1918446	ParameterType	encodeTypePtr		1917083	0					
ANR	1918447	Identifier	type		1917083	1					
ANR	1918448	Parameter	xmlNodePtr data	1408:62:46689:46703	1917083	2	True				
ANR	1918449	ParameterType	xmlNodePtr		1917083	0					
ANR	1918450	Identifier	data		1917083	1					
ANR	1918451	Parameter	zend_class_entry * pce	1408:79:46706:46726	1917083	3	True				
ANR	1918452	ParameterType	zend_class_entry *		1917083	0					
ANR	1918453	Identifier	pce		1917083	1					
ANR	1918454	CFGEntryNode	ENTRY		1917083		True				
ANR	1918455	CFGExitNode	EXIT		1917083		True				
ANR	1918456	Symbol	ZEND_FETCH_CLASS_AUTO		1917083						
ANR	1918457	Symbol	trav -> next		1917083						
ANR	1918458	Symbol	zobj		1917083						
ANR	1918459	Symbol	trav		1917083						
ANR	1918460	Symbol	* * sdlType -> encode -> details . sdl_type		1917083						
ANR	1918461	Symbol	type		1917083						
ANR	1918462	Symbol	dummy		1917083						
ANR	1918463	Symbol	* sdlType -> encode -> details . sdl_type -> encode		1917083						
ANR	1918464	Symbol	val -> children		1917083						
ANR	1918465	Symbol	xmlNewText		1917083						
ANR	1918466	Symbol	tmp		1917083						
ANR	1918467	Symbol	text		1917083						
ANR	1918468	Symbol	* sdlType -> encode -> details . sdl_type		1917083						
ANR	1918469	Symbol	val		1917083						
ANR	1918470	Symbol	redo_any		1917083						
ANR	1918471	Symbol	attr -> encode		1917083						
ANR	1918472	Symbol	* val -> children		1917083						
ANR	1918473	Symbol	sdlType -> encode -> details . sdl_type		1917083						
ANR	1918474	Symbol	* * sdlType -> encode -> details		1917083						
ANR	1918475	Symbol	sdl		1917083						
ANR	1918476	Symbol	XSD_TYPEKIND_EXTENSION		1917083						
ANR	1918477	Symbol	sdlType		1917083						
ANR	1918478	Symbol	XSD_TYPEKIND_LIST		1917083						
ANR	1918479	Symbol	& arr		1917083						
ANR	1918480	Symbol	* * * sdlType		1917083						
ANR	1918481	Symbol	& base		1917083						
ANR	1918482	Symbol	rv		1917083						
ANR	1918483	Symbol	trav -> type		1917083						
ANR	1918484	Symbol	Z_OBJ_P		1917083						
ANR	1918485	Symbol	* enc -> details . sdl_type		1917083						
ANR	1918486	Symbol	enc -> details		1917083						
ANR	1918487	Symbol	* val		1917083						
ANR	1918488	Symbol	get_zval_property		1917083						
ANR	1918489	Symbol	XSD_TYPEKIND_SIMPLE		1917083						
ANR	1918490	Symbol	val -> children -> content		1917083						
ANR	1918491	Symbol	zend_hash_str_find		1917083						
ANR	1918492	Symbol	& sdlType -> encode -> details		1917083						
ANR	1918493	Symbol	IS_ARRAY		1917083						
ANR	1918494	Symbol	prop		1917083						
ANR	1918495	Symbol	attr -> fixed		1917083						
ANR	1918496	Symbol	arr		1917083						
ANR	1918497	Symbol	zend_fetch_class		1917083						
ANR	1918498	Symbol	ce		1917083						
ANR	1918499	Symbol	* enc -> details		1917083						
ANR	1918500	Symbol	class_map		1917083						
ANR	1918501	Symbol	enc -> details . sdl_type		1917083						
ANR	1918502	Symbol	attr -> def		1917083						
ANR	1918503	Symbol	* sdlType -> encode		1917083						
ANR	1918504	Symbol	xmlNewNode		1917083						
ANR	1918505	Symbol	& rv		1917083						
ANR	1918506	Symbol	E_ERROR		1917083						
ANR	1918507	Symbol	classname		1917083						
ANR	1918508	Symbol	* * val		1917083						
ANR	1918509	Symbol	* sdlType -> encode -> details		1917083						
ANR	1918510	Symbol	attr -> name		1917083						
ANR	1918511	Symbol	IS_OBJECT		1917083						
ANR	1918512	Symbol	* data		1917083						
ANR	1918513	Symbol	type -> sdl_type		1917083						
ANR	1918514	Symbol	XML_ELEMENT_NODE		1917083						
ANR	1918515	Symbol	data		1917083						
ANR	1918516	Symbol	get_attribute		1917083						
ANR	1918517	Symbol	get_node		1917083						
ANR	1918518	Symbol	ZEND_STANDARD_CLASS_DEF_PTR		1917083						
ANR	1918519	Symbol	sdlType -> encode		1917083						
ANR	1918520	Symbol	* * sdlType -> encode		1917083						
ANR	1918521	Symbol	strlen		1917083						
ANR	1918522	Symbol	enc -> details . sdl_type -> kind		1917083						
ANR	1918523	Symbol	SOAP_ENC_ARRAY		1917083						
ANR	1918524	Symbol	* sdlType		1917083						
ANR	1918525	Symbol	* * sdlType		1917083						
ANR	1918526	Symbol	* * * * sdlType		1917083						
ANR	1918527	Symbol	IS_STRING		1917083						
ANR	1918528	Symbol	& tmpVal		1917083						
ANR	1918529	Symbol	ret		1917083						
ANR	1918530	Symbol	strcmp		1917083						
ANR	1918531	Symbol	NULL		1917083						
ANR	1918532	Symbol	enc -> details . sdl_type -> encode		1917083						
ANR	1918533	Symbol	type -> type_str		1917083						
ANR	1918534	Symbol	tmpVal		1917083						
ANR	1918535	Symbol	SOAP_GLOBAL		1917083						
ANR	1918536	Symbol	* * enc		1917083						
ANR	1918537	Symbol	& data		1917083						
ANR	1918538	Symbol	sdlType -> encode -> details . sdl_type -> encode		1917083						
ANR	1918539	Symbol	XSD_TYPEKIND_COMPLEX		1917083						
ANR	1918540	Symbol	Z_STR_P		1917083						
ANR	1918541	Symbol	* enc		1917083						
ANR	1918542	Symbol	* attr		1917083						
ANR	1918543	Symbol	trav -> name		1917083						
ANR	1918544	Symbol	sdlType -> encode -> details . sdl_type -> encode -> details . type		1917083						
ANR	1918545	Symbol	sdlType -> attributes		1917083						
ANR	1918546	Symbol	BAD_CAST		1917083						
ANR	1918547	Symbol	str_val		1917083						
ANR	1918548	Symbol	sdlType -> encode -> to_zval		1917083						
ANR	1918549	Symbol	* * * sdlType -> encode		1917083						
ANR	1918550	Symbol	sdlType -> kind		1917083						
ANR	1918551	Symbol	data -> properties		1917083						
ANR	1918552	Symbol	XSD_TYPEKIND_UNION		1917083						
ANR	1918553	Symbol	* trav		1917083						
ANR	1918554	Symbol	pce		1917083						
ANR	1918555	Symbol	sdlType -> encode -> details . sdl_type -> encode -> details		1917083						
ANR	1918556	Symbol	* zobj		1917083						
ANR	1918557	Symbol	* type		1917083						
ANR	1918558	Symbol	enc		1917083						
ANR	1918559	Symbol	sdlType -> model		1917083						
ANR	1918560	Symbol	sdlType -> encode -> details . sdl_type -> kind		1917083						
ANR	1918561	Symbol	attr		1917083						
ANR	1918562	Symbol	sdl_guess_convert_zval		1917083						
ANR	1918563	Symbol	zobj -> ce		1917083						
ANR	1918564	Symbol	Z_TYPE_P		1917083						
ANR	1918565	Symbol	soap_check_xml_ref		1917083						
ANR	1918566	Symbol	XSD_TYPEKIND_RESTRICTION		1917083						
ANR	1918567	Symbol	sdlType -> encode -> details		1917083						
ANR	1918568	Symbol	data -> children		1917083						
ANR	1918569	Symbol	base		1917083						
ANR	1918570	Function	to_zval_object	1611:0:52654:52782							
ANR	1918571	FunctionDef	"to_zval_object (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1918570	0					
ANR	1918572	CompoundStatement		1612:0:52730:52782	1918570	0					
ANR	1918573	ReturnStatement	"return to_zval_object_ex ( ret , type , data , NULL ) ;"	1613:1:52733:52780	1918570	0	True				
ANR	1918574	CallExpression	"to_zval_object_ex ( ret , type , data , NULL )"		1918570	0					
ANR	1918575	Callee	to_zval_object_ex		1918570	0					
ANR	1918576	Identifier	to_zval_object_ex		1918570	0					
ANR	1918577	ArgumentList	ret		1918570	1					
ANR	1918578	Argument	ret		1918570	0					
ANR	1918579	Identifier	ret		1918570	0					
ANR	1918580	Argument	type		1918570	1					
ANR	1918581	Identifier	type		1918570	0					
ANR	1918582	Argument	data		1918570	2					
ANR	1918583	Identifier	data		1918570	0					
ANR	1918584	Argument	NULL		1918570	3					
ANR	1918585	Identifier	NULL		1918570	0					
ANR	1918586	ReturnType	static zval *		1918570	1					
ANR	1918587	Identifier	to_zval_object		1918570	2					
ANR	1918588	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1918570	3					
ANR	1918589	Parameter	zval * ret	1611:28:52682:52690	1918570	0	True				
ANR	1918590	ParameterType	zval *		1918570	0					
ANR	1918591	Identifier	ret		1918570	1					
ANR	1918592	Parameter	encodeTypePtr type	1611:39:52693:52710	1918570	1	True				
ANR	1918593	ParameterType	encodeTypePtr		1918570	0					
ANR	1918594	Identifier	type		1918570	1					
ANR	1918595	Parameter	xmlNodePtr data	1611:59:52713:52727	1918570	2	True				
ANR	1918596	ParameterType	xmlNodePtr		1918570	0					
ANR	1918597	Identifier	data		1918570	1					
ANR	1918598	CFGEntryNode	ENTRY		1918570		True				
ANR	1918599	CFGExitNode	EXIT		1918570		True				
ANR	1918600	Symbol	ret		1918570						
ANR	1918601	Symbol	to_zval_object_ex		1918570						
ANR	1918602	Symbol	NULL		1918570						
ANR	1918603	Symbol	data		1918570						
ANR	1918604	Symbol	type		1918570						
ANR	1918605	Function	model_to_xml_object	1617:0:52786:57821							
ANR	1918606	FunctionDef	"model_to_xml_object (xmlNodePtr node , sdlContentModelPtr model , zval * object , int style , int strict)"		1918605	0					
ANR	1918607	CompoundStatement		1618:0:52897:57821	1918605	0					
ANR	1918608	SwitchStatement	switch ( model -> kind )		1918605	0					
ANR	1918609	Condition	model -> kind	1619:9:52908:52918	1918605	0	True				
ANR	1918610	PtrMemberAccess	model -> kind		1918605	0					
ANR	1918611	Identifier	model		1918605	0					
ANR	1918612	Identifier	kind		1918605	1					
ANR	1918613	CompoundStatement		2:22:23:23	1918605	1					
ANR	1918614	Label	case XSD_CONTENT_ELEMENT :	1620:2:52925:52949	1918605	0	True				
ANR	1918615	Identifier	XSD_CONTENT_ELEMENT		1918605	0					
ANR	1918616	CompoundStatement		7:3:115:122	1918605	1					
ANR	1918617	IdentifierDeclStatement	zval * data ;	1621:3:52956:52966	1918605	0	True				
ANR	1918618	IdentifierDecl	* data		1918605	0					
ANR	1918619	IdentifierDeclType	zval *		1918605	0					
ANR	1918620	Identifier	data		1918605	1					
ANR	1918621	IdentifierDeclStatement	xmlNodePtr property ;	1622:3:52971:52990	1918605	1	True				
ANR	1918622	IdentifierDecl	property		1918605	0					
ANR	1918623	IdentifierDeclType	xmlNodePtr		1918605	0					
ANR	1918624	Identifier	property		1918605	1					
ANR	1918625	IdentifierDeclStatement	encodePtr enc ;	1623:3:52995:53008	1918605	2	True				
ANR	1918626	IdentifierDecl	enc		1918605	0					
ANR	1918627	IdentifierDeclType	encodePtr		1918605	0					
ANR	1918628	Identifier	enc		1918605	1					
ANR	1918629	IdentifierDeclStatement	zval rv ;	1624:3:53013:53020	1918605	3	True				
ANR	1918630	IdentifierDecl	rv		1918605	0					
ANR	1918631	IdentifierDeclType	zval		1918605	0					
ANR	1918632	Identifier	rv		1918605	1					
ANR	1918633	ExpressionStatement	"data = get_zval_property ( object , model -> u . element -> name , & rv )"	1626:3:53026:53087	1918605	4	True				
ANR	1918634	AssignmentExpression	"data = get_zval_property ( object , model -> u . element -> name , & rv )"		1918605	0		=			
ANR	1918635	Identifier	data		1918605	0					
ANR	1918636	CallExpression	"get_zval_property ( object , model -> u . element -> name , & rv )"		1918605	1					
ANR	1918637	Callee	get_zval_property		1918605	0					
ANR	1918638	Identifier	get_zval_property		1918605	0					
ANR	1918639	ArgumentList	object		1918605	1					
ANR	1918640	Argument	object		1918605	0					
ANR	1918641	Identifier	object		1918605	0					
ANR	1918642	Argument	model -> u . element -> name		1918605	1					
ANR	1918643	PtrMemberAccess	model -> u . element -> name		1918605	0					
ANR	1918644	MemberAccess	model -> u . element		1918605	0					
ANR	1918645	PtrMemberAccess	model -> u		1918605	0					
ANR	1918646	Identifier	model		1918605	0					
ANR	1918647	Identifier	u		1918605	1					
ANR	1918648	Identifier	element		1918605	1					
ANR	1918649	Identifier	name		1918605	1					
ANR	1918650	Argument	& rv		1918605	2					
ANR	1918651	UnaryOperationExpression	& rv		1918605	0					
ANR	1918652	UnaryOperator	&		1918605	0					
ANR	1918653	Identifier	rv		1918605	1					
ANR	1918654	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict )		1918605	5					
ANR	1918655	Condition	data && Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict	1627:7:53096:53223	1918605	0	True				
ANR	1918656	AndExpression	data && Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict		1918605	0		&&			
ANR	1918657	Identifier	data		1918605	0					
ANR	1918658	AndExpression	Z_TYPE_P ( data ) == IS_NULL && ! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict		1918605	1		&&			
ANR	1918659	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1918605	0		==			
ANR	1918660	CallExpression	Z_TYPE_P ( data )		1918605	0					
ANR	1918661	Callee	Z_TYPE_P		1918605	0					
ANR	1918662	Identifier	Z_TYPE_P		1918605	0					
ANR	1918663	ArgumentList	data		1918605	1					
ANR	1918664	Argument	data		1918605	0					
ANR	1918665	Identifier	data		1918605	0					
ANR	1918666	Identifier	IS_NULL		1918605	1					
ANR	1918667	AndExpression	! model -> u . element -> nillable && model -> min_occurs > 0 && ! strict		1918605	1		&&			
ANR	1918668	UnaryOperationExpression	! model -> u . element -> nillable		1918605	0					
ANR	1918669	UnaryOperator	!		1918605	0					
ANR	1918670	PtrMemberAccess	model -> u . element -> nillable		1918605	1					
ANR	1918671	MemberAccess	model -> u . element		1918605	0					
ANR	1918672	PtrMemberAccess	model -> u		1918605	0					
ANR	1918673	Identifier	model		1918605	0					
ANR	1918674	Identifier	u		1918605	1					
ANR	1918675	Identifier	element		1918605	1					
ANR	1918676	Identifier	nillable		1918605	1					
ANR	1918677	AndExpression	model -> min_occurs > 0 && ! strict		1918605	1		&&			
ANR	1918678	RelationalExpression	model -> min_occurs > 0		1918605	0		>			
ANR	1918679	PtrMemberAccess	model -> min_occurs		1918605	0					
ANR	1918680	Identifier	model		1918605	0					
ANR	1918681	Identifier	min_occurs		1918605	1					
ANR	1918682	PrimaryExpression	0		1918605	1					
ANR	1918683	UnaryOperationExpression	! strict		1918605	1					
ANR	1918684	UnaryOperator	!		1918605	0					
ANR	1918685	Identifier	strict		1918605	1					
ANR	1918686	CompoundStatement		14:16:328:328	1918605	1					
ANR	1918687	ReturnStatement	return 0 ;	1632:4:53232:53240	1918605	0	True				
ANR	1918688	PrimaryExpression	0		1918605	0					
ANR	1918689	IfStatement	if ( data )		1918605	6					
ANR	1918690	Condition	data	1634:7:53254:53257	1918605	0	True				
ANR	1918691	Identifier	data		1918605	0					
ANR	1918692	CompoundStatement		17:13:362:362	1918605	1					
ANR	1918693	ExpressionStatement	enc = model -> u . element -> encode	1635:4:53266:53296	1918605	0	True				
ANR	1918694	AssignmentExpression	enc = model -> u . element -> encode		1918605	0		=			
ANR	1918695	Identifier	enc		1918605	0					
ANR	1918696	PtrMemberAccess	model -> u . element -> encode		1918605	1					
ANR	1918697	MemberAccess	model -> u . element		1918605	0					
ANR	1918698	PtrMemberAccess	model -> u		1918605	0					
ANR	1918699	Identifier	model		1918605	0					
ANR	1918700	Identifier	u		1918605	1					
ANR	1918701	Identifier	element		1918605	1					
ANR	1918702	Identifier	encode		1918605	1					
ANR	1918703	IfStatement	if ( ( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) )		1918605	1					
ANR	1918704	Condition	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )	1636:8:53306:53418	1918605	0	True				
ANR	1918705	AndExpression	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1918605	0		&&			
ANR	1918706	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1918605	0		||			
ANR	1918707	EqualityExpression	model -> max_occurs == - 1		1918605	0		==			
ANR	1918708	PtrMemberAccess	model -> max_occurs		1918605	0					
ANR	1918709	Identifier	model		1918605	0					
ANR	1918710	Identifier	max_occurs		1918605	1					
ANR	1918711	UnaryOperationExpression	- 1		1918605	1					
ANR	1918712	UnaryOperator	-		1918605	0					
ANR	1918713	PrimaryExpression	1		1918605	1					
ANR	1918714	RelationalExpression	model -> max_occurs > 1		1918605	1		>			
ANR	1918715	PtrMemberAccess	model -> max_occurs		1918605	0					
ANR	1918716	Identifier	model		1918605	0					
ANR	1918717	Identifier	max_occurs		1918605	1					
ANR	1918718	PrimaryExpression	1		1918605	1					
ANR	1918719	AndExpression	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1918605	1		&&			
ANR	1918720	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1918605	0		==			
ANR	1918721	CallExpression	Z_TYPE_P ( data )		1918605	0					
ANR	1918722	Callee	Z_TYPE_P		1918605	0					
ANR	1918723	Identifier	Z_TYPE_P		1918605	0					
ANR	1918724	ArgumentList	data		1918605	1					
ANR	1918725	Argument	data		1918605	0					
ANR	1918726	Identifier	data		1918605	0					
ANR	1918727	Identifier	IS_ARRAY		1918605	1					
ANR	1918728	UnaryOperationExpression	! is_map ( data )		1918605	1					
ANR	1918729	UnaryOperator	!		1918605	0					
ANR	1918730	CallExpression	is_map ( data )		1918605	1					
ANR	1918731	Callee	is_map		1918605	0					
ANR	1918732	Identifier	is_map		1918605	0					
ANR	1918733	ArgumentList	data		1918605	1					
ANR	1918734	Argument	data		1918605	0					
ANR	1918735	Identifier	data		1918605	0					
ANR	1918736	CompoundStatement		23:5:569:578	1918605	1					
ANR	1918737	IdentifierDeclStatement	HashTable * ht = Z_ARRVAL_P ( data ) ;	1639:5:53428:53460	1918605	0	True				
ANR	1918738	IdentifierDecl	* ht = Z_ARRVAL_P ( data )		1918605	0					
ANR	1918739	IdentifierDeclType	HashTable *		1918605	0					
ANR	1918740	Identifier	ht		1918605	1					
ANR	1918741	AssignmentExpression	* ht = Z_ARRVAL_P ( data )		1918605	2		=			
ANR	1918742	Identifier	ht		1918605	0					
ANR	1918743	CallExpression	Z_ARRVAL_P ( data )		1918605	1					
ANR	1918744	Callee	Z_ARRVAL_P		1918605	0					
ANR	1918745	Identifier	Z_ARRVAL_P		1918605	0					
ANR	1918746	ArgumentList	data		1918605	1					
ANR	1918747	Argument	data		1918605	0					
ANR	1918748	Identifier	data		1918605	0					
ANR	1918749	IdentifierDeclStatement	zval * val ;	1640:5:53467:53476	1918605	1	True				
ANR	1918750	IdentifierDecl	* val		1918605	0					
ANR	1918751	IdentifierDeclType	zval *		1918605	0					
ANR	1918752	Identifier	val		1918605	1					
ANR	1918753	Statement	ZEND_HASH_FOREACH_VAL	1642:5:53484:53504	1918605	2	True				
ANR	1918754	Statement	(	1642:26:53505:53505	1918605	3	True				
ANR	1918755	Statement	ht	1642:27:53506:53507	1918605	4	True				
ANR	1918756	Statement	","	1642:29:53508:53508	1918605	5	True				
ANR	1918757	Statement	val	1642:31:53510:53512	1918605	6	True				
ANR	1918758	Statement	)	1642:34:53513:53513	1918605	7	True				
ANR	1918759	CompoundStatement		25:36:617:617	1918605	8					
ANR	1918760	IfStatement	if ( Z_TYPE_P ( val ) == IS_NULL && model -> u . element -> nillable )		1918605	0					
ANR	1918761	Condition	Z_TYPE_P ( val ) == IS_NULL && model -> u . element -> nillable	1643:10:53527:53580	1918605	0	True				
ANR	1918762	AndExpression	Z_TYPE_P ( val ) == IS_NULL && model -> u . element -> nillable		1918605	0		&&			
ANR	1918763	EqualityExpression	Z_TYPE_P ( val ) == IS_NULL		1918605	0		==			
ANR	1918764	CallExpression	Z_TYPE_P ( val )		1918605	0					
ANR	1918765	Callee	Z_TYPE_P		1918605	0					
ANR	1918766	Identifier	Z_TYPE_P		1918605	0					
ANR	1918767	ArgumentList	val		1918605	1					
ANR	1918768	Argument	val		1918605	0					
ANR	1918769	Identifier	val		1918605	0					
ANR	1918770	Identifier	IS_NULL		1918605	1					
ANR	1918771	PtrMemberAccess	model -> u . element -> nillable		1918605	1					
ANR	1918772	MemberAccess	model -> u . element		1918605	0					
ANR	1918773	PtrMemberAccess	model -> u		1918605	0					
ANR	1918774	Identifier	model		1918605	0					
ANR	1918775	Identifier	u		1918605	1					
ANR	1918776	Identifier	element		1918605	1					
ANR	1918777	Identifier	nillable		1918605	1					
ANR	1918778	CompoundStatement		26:66:685:685	1918605	1					
ANR	1918779	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1644:7:53592:53638	1918605	0	True				
ANR	1918780	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1918605	0		=			
ANR	1918781	Identifier	property		1918605	0					
ANR	1918782	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1918605	1					
ANR	1918783	Callee	xmlNewNode		1918605	0					
ANR	1918784	Identifier	xmlNewNode		1918605	0					
ANR	1918785	ArgumentList	NULL		1918605	1					
ANR	1918786	Argument	NULL		1918605	0					
ANR	1918787	Identifier	NULL		1918605	0					
ANR	1918788	Argument	"BAD_CAST ( ""BOGUS"" )"		1918605	1					
ANR	1918789	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1918605	0					
ANR	1918790	Callee	BAD_CAST		1918605	0					
ANR	1918791	Identifier	BAD_CAST		1918605	0					
ANR	1918792	ArgumentList	"""BOGUS"""		1918605	1					
ANR	1918793	Argument	"""BOGUS"""		1918605	0					
ANR	1918794	PrimaryExpression	"""BOGUS"""		1918605	0					
ANR	1918795	ExpressionStatement	"xmlAddChild ( node , property )"	1645:7:53647:53674	1918605	1	True				
ANR	1918796	CallExpression	"xmlAddChild ( node , property )"		1918605	0					
ANR	1918797	Callee	xmlAddChild		1918605	0					
ANR	1918798	Identifier	xmlAddChild		1918605	0					
ANR	1918799	ArgumentList	node		1918605	1					
ANR	1918800	Argument	node		1918605	0					
ANR	1918801	Identifier	node		1918605	0					
ANR	1918802	Argument	property		1918605	1					
ANR	1918803	Identifier	property		1918605	0					
ANR	1918804	ExpressionStatement	set_xsi_nil ( property )	1646:7:53683:53704	1918605	2	True				
ANR	1918805	CallExpression	set_xsi_nil ( property )		1918605	0					
ANR	1918806	Callee	set_xsi_nil		1918605	0					
ANR	1918807	Identifier	set_xsi_nil		1918605	0					
ANR	1918808	ArgumentList	property		1918605	1					
ANR	1918809	Argument	property		1918605	0					
ANR	1918810	Identifier	property		1918605	0					
ANR	1918811	ElseStatement	else		1918605	0					
ANR	1918812	CompoundStatement		30:13:821:821	1918605	0					
ANR	1918813	ExpressionStatement	"property = master_to_xml ( enc , val , style , node )"	1648:7:53728:53775	1918605	0	True				
ANR	1918814	AssignmentExpression	"property = master_to_xml ( enc , val , style , node )"		1918605	0		=			
ANR	1918815	Identifier	property		1918605	0					
ANR	1918816	CallExpression	"master_to_xml ( enc , val , style , node )"		1918605	1					
ANR	1918817	Callee	master_to_xml		1918605	0					
ANR	1918818	Identifier	master_to_xml		1918605	0					
ANR	1918819	ArgumentList	enc		1918605	1					
ANR	1918820	Argument	enc		1918605	0					
ANR	1918821	Identifier	enc		1918605	0					
ANR	1918822	Argument	val		1918605	1					
ANR	1918823	Identifier	val		1918605	0					
ANR	1918824	Argument	style		1918605	2					
ANR	1918825	Identifier	style		1918605	0					
ANR	1918826	Argument	node		1918605	3					
ANR	1918827	Identifier	node		1918605	0					
ANR	1918828	IfStatement	"if ( property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0 )"		1918605	1					
ANR	1918829	Condition	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"	1649:11:53788:53950	1918605	0	True				
ANR	1918830	AndExpression	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	0		&&			
ANR	1918831	PtrMemberAccess	property -> children		1918605	0					
ANR	1918832	Identifier	property		1918605	0					
ANR	1918833	Identifier	children		1918605	1					
ANR	1918834	AndExpression	"property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	1		&&			
ANR	1918835	PtrMemberAccess	property -> children -> content		1918605	0					
ANR	1918836	PtrMemberAccess	property -> children		1918605	0					
ANR	1918837	Identifier	property		1918605	0					
ANR	1918838	Identifier	children		1918605	1					
ANR	1918839	Identifier	content		1918605	1					
ANR	1918840	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	1		&&			
ANR	1918841	PtrMemberAccess	model -> u . element -> fixed		1918605	0					
ANR	1918842	MemberAccess	model -> u . element		1918605	0					
ANR	1918843	PtrMemberAccess	model -> u		1918605	0					
ANR	1918844	Identifier	model		1918605	0					
ANR	1918845	Identifier	u		1918605	1					
ANR	1918846	Identifier	element		1918605	1					
ANR	1918847	Identifier	fixed		1918605	1					
ANR	1918848	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	1		!=			
ANR	1918849	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content )"		1918605	0					
ANR	1918850	Callee	strcmp		1918605	0					
ANR	1918851	Identifier	strcmp		1918605	0					
ANR	1918852	ArgumentList	model -> u . element -> fixed		1918605	1					
ANR	1918853	Argument	model -> u . element -> fixed		1918605	0					
ANR	1918854	PtrMemberAccess	model -> u . element -> fixed		1918605	0					
ANR	1918855	MemberAccess	model -> u . element		1918605	0					
ANR	1918856	PtrMemberAccess	model -> u		1918605	0					
ANR	1918857	Identifier	model		1918605	0					
ANR	1918858	Identifier	u		1918605	1					
ANR	1918859	Identifier	element		1918605	1					
ANR	1918860	Identifier	fixed		1918605	1					
ANR	1918861	Argument	( char * ) property -> children -> content		1918605	1					
ANR	1918862	CastExpression	( char * ) property -> children -> content		1918605	0					
ANR	1918863	CastTarget	char *		1918605	0					
ANR	1918864	PtrMemberAccess	property -> children -> content		1918605	1					
ANR	1918865	PtrMemberAccess	property -> children		1918605	0					
ANR	1918866	Identifier	property		1918605	0					
ANR	1918867	Identifier	children		1918605	1					
ANR	1918868	Identifier	content		1918605	1					
ANR	1918869	PrimaryExpression	0		1918605	1					
ANR	1918870	CompoundStatement		33:112:1055:1055	1918605	1					
ANR	1918871	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"	1651:8:53963:54136	1918605	0	True				
ANR	1918872	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"		1918605	0					
ANR	1918873	Callee	soap_error3		1918605	0					
ANR	1918874	Identifier	soap_error3		1918605	0					
ANR	1918875	ArgumentList	E_ERROR		1918605	1					
ANR	1918876	Argument	E_ERROR		1918605	0					
ANR	1918877	Identifier	E_ERROR		1918605	0					
ANR	1918878	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1918605	1					
ANR	1918879	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1918605	0					
ANR	1918880	Argument	model -> u . element -> name		1918605	2					
ANR	1918881	PtrMemberAccess	model -> u . element -> name		1918605	0					
ANR	1918882	MemberAccess	model -> u . element		1918605	0					
ANR	1918883	PtrMemberAccess	model -> u		1918605	0					
ANR	1918884	Identifier	model		1918605	0					
ANR	1918885	Identifier	u		1918605	1					
ANR	1918886	Identifier	element		1918605	1					
ANR	1918887	Identifier	name		1918605	1					
ANR	1918888	Argument	model -> u . element -> fixed		1918605	3					
ANR	1918889	PtrMemberAccess	model -> u . element -> fixed		1918605	0					
ANR	1918890	MemberAccess	model -> u . element		1918605	0					
ANR	1918891	PtrMemberAccess	model -> u		1918605	0					
ANR	1918892	Identifier	model		1918605	0					
ANR	1918893	Identifier	u		1918605	1					
ANR	1918894	Identifier	element		1918605	1					
ANR	1918895	Identifier	fixed		1918605	1					
ANR	1918896	Argument	property -> children -> content		1918605	4					
ANR	1918897	PtrMemberAccess	property -> children -> content		1918605	0					
ANR	1918898	PtrMemberAccess	property -> children		1918605	0					
ANR	1918899	Identifier	property		1918605	0					
ANR	1918900	Identifier	children		1918605	1					
ANR	1918901	Identifier	content		1918605	1					
ANR	1918902	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"	1654:6:54161:54219	1918605	1	True				
ANR	1918903	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"		1918605	0					
ANR	1918904	Callee	xmlNodeSetName		1918605	0					
ANR	1918905	Identifier	xmlNodeSetName		1918605	0					
ANR	1918906	ArgumentList	property		1918605	1					
ANR	1918907	Argument	property		1918605	0					
ANR	1918908	Identifier	property		1918605	0					
ANR	1918909	Argument	BAD_CAST ( model -> u . element -> name )		1918605	1					
ANR	1918910	CallExpression	BAD_CAST ( model -> u . element -> name )		1918605	0					
ANR	1918911	Callee	BAD_CAST		1918605	0					
ANR	1918912	Identifier	BAD_CAST		1918605	0					
ANR	1918913	ArgumentList	model -> u . element -> name		1918605	1					
ANR	1918914	Argument	model -> u . element -> name		1918605	0					
ANR	1918915	PtrMemberAccess	model -> u . element -> name		1918605	0					
ANR	1918916	MemberAccess	model -> u . element		1918605	0					
ANR	1918917	PtrMemberAccess	model -> u		1918605	0					
ANR	1918918	Identifier	model		1918605	0					
ANR	1918919	Identifier	u		1918605	1					
ANR	1918920	Identifier	element		1918605	1					
ANR	1918921	Identifier	name		1918605	1					
ANR	1918922	IfStatement	if ( style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED )		1918605	2					
ANR	1918923	Condition	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED	1655:10:54231:54347	1918605	0	True				
ANR	1918924	AndExpression	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	0		&&			
ANR	1918925	EqualityExpression	style == SOAP_LITERAL		1918605	0		==			
ANR	1918926	Identifier	style		1918605	0					
ANR	1918927	Identifier	SOAP_LITERAL		1918605	1					
ANR	1918928	AndExpression	model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	1		&&			
ANR	1918929	PtrMemberAccess	model -> u . element -> namens		1918605	0					
ANR	1918930	MemberAccess	model -> u . element		1918605	0					
ANR	1918931	PtrMemberAccess	model -> u		1918605	0					
ANR	1918932	Identifier	model		1918605	0					
ANR	1918933	Identifier	u		1918605	1					
ANR	1918934	Identifier	element		1918605	1					
ANR	1918935	Identifier	namens		1918605	1					
ANR	1918936	EqualityExpression	model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	1		==			
ANR	1918937	PtrMemberAccess	model -> u . element -> form		1918605	0					
ANR	1918938	MemberAccess	model -> u . element		1918605	0					
ANR	1918939	PtrMemberAccess	model -> u		1918605	0					
ANR	1918940	Identifier	model		1918605	0					
ANR	1918941	Identifier	u		1918605	1					
ANR	1918942	Identifier	element		1918605	1					
ANR	1918943	Identifier	form		1918605	1					
ANR	1918944	Identifier	XSD_FORM_QUALIFIED		1918605	1					
ANR	1918945	CompoundStatement		41:7:1461:1525	1918605	1					
ANR	1918946	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , model -> u . element -> namens ) ;"	1658:7:54359:54423	1918605	0	True				
ANR	1918947	IdentifierDecl	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1918605	0					
ANR	1918948	IdentifierDeclType	xmlNsPtr		1918605	0					
ANR	1918949	Identifier	nsp		1918605	1					
ANR	1918950	AssignmentExpression	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1918605	2		=			
ANR	1918951	Identifier	nsp		1918605	0					
ANR	1918952	CallExpression	"encode_add_ns ( property , model -> u . element -> namens )"		1918605	1					
ANR	1918953	Callee	encode_add_ns		1918605	0					
ANR	1918954	Identifier	encode_add_ns		1918605	0					
ANR	1918955	ArgumentList	property		1918605	1					
ANR	1918956	Argument	property		1918605	0					
ANR	1918957	Identifier	property		1918605	0					
ANR	1918958	Argument	model -> u . element -> namens		1918605	1					
ANR	1918959	PtrMemberAccess	model -> u . element -> namens		1918605	0					
ANR	1918960	MemberAccess	model -> u . element		1918605	0					
ANR	1918961	PtrMemberAccess	model -> u		1918605	0					
ANR	1918962	Identifier	model		1918605	0					
ANR	1918963	Identifier	u		1918605	1					
ANR	1918964	Identifier	element		1918605	1					
ANR	1918965	Identifier	namens		1918605	1					
ANR	1918966	ExpressionStatement	"xmlSetNs ( property , nsp )"	1659:7:54432:54455	1918605	1	True				
ANR	1918967	CallExpression	"xmlSetNs ( property , nsp )"		1918605	0					
ANR	1918968	Callee	xmlSetNs		1918605	0					
ANR	1918969	Identifier	xmlSetNs		1918605	0					
ANR	1918970	ArgumentList	property		1918605	1					
ANR	1918971	Argument	property		1918605	0					
ANR	1918972	Identifier	property		1918605	0					
ANR	1918973	Argument	nsp		1918605	1					
ANR	1918974	Identifier	nsp		1918605	0					
ANR	1918975	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1661:7:54472:54495	1918605	9	True				
ANR	1918976	CallExpression	ZEND_HASH_FOREACH_END ( )		1918605	0					
ANR	1918977	Callee	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1918978	Identifier	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1918979	ArgumentList			1918605	1					
ANR	1918980	ElseStatement	else		1918605	0					
ANR	1918981	CompoundStatement		45:11:1610:1610	1918605	0					
ANR	1918982	IfStatement	if ( Z_TYPE_P ( data ) == IS_NULL && model -> u . element -> nillable )		1918605	0					
ANR	1918983	Condition	Z_TYPE_P ( data ) == IS_NULL && model -> u . element -> nillable	1663:9:54519:54573	1918605	0	True				
ANR	1918984	AndExpression	Z_TYPE_P ( data ) == IS_NULL && model -> u . element -> nillable		1918605	0		&&			
ANR	1918985	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1918605	0		==			
ANR	1918986	CallExpression	Z_TYPE_P ( data )		1918605	0					
ANR	1918987	Callee	Z_TYPE_P		1918605	0					
ANR	1918988	Identifier	Z_TYPE_P		1918605	0					
ANR	1918989	ArgumentList	data		1918605	1					
ANR	1918990	Argument	data		1918605	0					
ANR	1918991	Identifier	data		1918605	0					
ANR	1918992	Identifier	IS_NULL		1918605	1					
ANR	1918993	PtrMemberAccess	model -> u . element -> nillable		1918605	1					
ANR	1918994	MemberAccess	model -> u . element		1918605	0					
ANR	1918995	PtrMemberAccess	model -> u		1918605	0					
ANR	1918996	Identifier	model		1918605	0					
ANR	1918997	Identifier	u		1918605	1					
ANR	1918998	Identifier	element		1918605	1					
ANR	1918999	Identifier	nillable		1918605	1					
ANR	1919000	CompoundStatement		46:66:1678:1678	1918605	1					
ANR	1919001	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1664:6:54584:54630	1918605	0	True				
ANR	1919002	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1918605	0		=			
ANR	1919003	Identifier	property		1918605	0					
ANR	1919004	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1918605	1					
ANR	1919005	Callee	xmlNewNode		1918605	0					
ANR	1919006	Identifier	xmlNewNode		1918605	0					
ANR	1919007	ArgumentList	NULL		1918605	1					
ANR	1919008	Argument	NULL		1918605	0					
ANR	1919009	Identifier	NULL		1918605	0					
ANR	1919010	Argument	"BAD_CAST ( ""BOGUS"" )"		1918605	1					
ANR	1919011	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1918605	0					
ANR	1919012	Callee	BAD_CAST		1918605	0					
ANR	1919013	Identifier	BAD_CAST		1918605	0					
ANR	1919014	ArgumentList	"""BOGUS"""		1918605	1					
ANR	1919015	Argument	"""BOGUS"""		1918605	0					
ANR	1919016	PrimaryExpression	"""BOGUS"""		1918605	0					
ANR	1919017	ExpressionStatement	"xmlAddChild ( node , property )"	1665:6:54638:54665	1918605	1	True				
ANR	1919018	CallExpression	"xmlAddChild ( node , property )"		1918605	0					
ANR	1919019	Callee	xmlAddChild		1918605	0					
ANR	1919020	Identifier	xmlAddChild		1918605	0					
ANR	1919021	ArgumentList	node		1918605	1					
ANR	1919022	Argument	node		1918605	0					
ANR	1919023	Identifier	node		1918605	0					
ANR	1919024	Argument	property		1918605	1					
ANR	1919025	Identifier	property		1918605	0					
ANR	1919026	ExpressionStatement	set_xsi_nil ( property )	1666:6:54673:54694	1918605	2	True				
ANR	1919027	CallExpression	set_xsi_nil ( property )		1918605	0					
ANR	1919028	Callee	set_xsi_nil		1918605	0					
ANR	1919029	Identifier	set_xsi_nil		1918605	0					
ANR	1919030	ArgumentList	property		1918605	1					
ANR	1919031	Argument	property		1918605	0					
ANR	1919032	Identifier	property		1918605	0					
ANR	1919033	ElseStatement	else		1918605	0					
ANR	1919034	IfStatement	if ( Z_TYPE_P ( data ) == IS_NULL && model -> min_occurs == 0 )		1918605	0					
ANR	1919035	Condition	Z_TYPE_P ( data ) == IS_NULL && model -> min_occurs == 0	1667:16:54712:54762	1918605	0	True				
ANR	1919036	AndExpression	Z_TYPE_P ( data ) == IS_NULL && model -> min_occurs == 0		1918605	0		&&			
ANR	1919037	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1918605	0		==			
ANR	1919038	CallExpression	Z_TYPE_P ( data )		1918605	0					
ANR	1919039	Callee	Z_TYPE_P		1918605	0					
ANR	1919040	Identifier	Z_TYPE_P		1918605	0					
ANR	1919041	ArgumentList	data		1918605	1					
ANR	1919042	Argument	data		1918605	0					
ANR	1919043	Identifier	data		1918605	0					
ANR	1919044	Identifier	IS_NULL		1918605	1					
ANR	1919045	EqualityExpression	model -> min_occurs == 0		1918605	1		==			
ANR	1919046	PtrMemberAccess	model -> min_occurs		1918605	0					
ANR	1919047	Identifier	model		1918605	0					
ANR	1919048	Identifier	min_occurs		1918605	1					
ANR	1919049	PrimaryExpression	0		1918605	1					
ANR	1919050	CompoundStatement		50:69:1867:1867	1918605	1					
ANR	1919051	ReturnStatement	return 1 ;	1668:6:54773:54781	1918605	0	True				
ANR	1919052	PrimaryExpression	1		1918605	0					
ANR	1919053	ElseStatement	else		1918605	0					
ANR	1919054	CompoundStatement		52:12:1897:1897	1918605	0					
ANR	1919055	ExpressionStatement	"property = master_to_xml ( enc , data , style , node )"	1670:6:54803:54851	1918605	0	True				
ANR	1919056	AssignmentExpression	"property = master_to_xml ( enc , data , style , node )"		1918605	0		=			
ANR	1919057	Identifier	property		1918605	0					
ANR	1919058	CallExpression	"master_to_xml ( enc , data , style , node )"		1918605	1					
ANR	1919059	Callee	master_to_xml		1918605	0					
ANR	1919060	Identifier	master_to_xml		1918605	0					
ANR	1919061	ArgumentList	enc		1918605	1					
ANR	1919062	Argument	enc		1918605	0					
ANR	1919063	Identifier	enc		1918605	0					
ANR	1919064	Argument	data		1918605	1					
ANR	1919065	Identifier	data		1918605	0					
ANR	1919066	Argument	style		1918605	2					
ANR	1919067	Identifier	style		1918605	0					
ANR	1919068	Argument	node		1918605	3					
ANR	1919069	Identifier	node		1918605	0					
ANR	1919070	IfStatement	"if ( property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0 )"		1918605	1					
ANR	1919071	Condition	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"	1671:10:54863:55024	1918605	0	True				
ANR	1919072	AndExpression	"property -> children && property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	0		&&			
ANR	1919073	PtrMemberAccess	property -> children		1918605	0					
ANR	1919074	Identifier	property		1918605	0					
ANR	1919075	Identifier	children		1918605	1					
ANR	1919076	AndExpression	"property -> children -> content && model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	1		&&			
ANR	1919077	PtrMemberAccess	property -> children -> content		1918605	0					
ANR	1919078	PtrMemberAccess	property -> children		1918605	0					
ANR	1919079	Identifier	property		1918605	0					
ANR	1919080	Identifier	children		1918605	1					
ANR	1919081	Identifier	content		1918605	1					
ANR	1919082	AndExpression	"model -> u . element -> fixed && strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	1		&&			
ANR	1919083	PtrMemberAccess	model -> u . element -> fixed		1918605	0					
ANR	1919084	MemberAccess	model -> u . element		1918605	0					
ANR	1919085	PtrMemberAccess	model -> u		1918605	0					
ANR	1919086	Identifier	model		1918605	0					
ANR	1919087	Identifier	u		1918605	1					
ANR	1919088	Identifier	element		1918605	1					
ANR	1919089	Identifier	fixed		1918605	1					
ANR	1919090	EqualityExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content ) != 0"		1918605	1		!=			
ANR	1919091	CallExpression	"strcmp ( model -> u . element -> fixed , ( char * ) property -> children -> content )"		1918605	0					
ANR	1919092	Callee	strcmp		1918605	0					
ANR	1919093	Identifier	strcmp		1918605	0					
ANR	1919094	ArgumentList	model -> u . element -> fixed		1918605	1					
ANR	1919095	Argument	model -> u . element -> fixed		1918605	0					
ANR	1919096	PtrMemberAccess	model -> u . element -> fixed		1918605	0					
ANR	1919097	MemberAccess	model -> u . element		1918605	0					
ANR	1919098	PtrMemberAccess	model -> u		1918605	0					
ANR	1919099	Identifier	model		1918605	0					
ANR	1919100	Identifier	u		1918605	1					
ANR	1919101	Identifier	element		1918605	1					
ANR	1919102	Identifier	fixed		1918605	1					
ANR	1919103	Argument	( char * ) property -> children -> content		1918605	1					
ANR	1919104	CastExpression	( char * ) property -> children -> content		1918605	0					
ANR	1919105	CastTarget	char *		1918605	0					
ANR	1919106	PtrMemberAccess	property -> children -> content		1918605	1					
ANR	1919107	PtrMemberAccess	property -> children		1918605	0					
ANR	1919108	Identifier	property		1918605	0					
ANR	1919109	Identifier	children		1918605	1					
ANR	1919110	Identifier	content		1918605	1					
ANR	1919111	PrimaryExpression	0		1918605	1					
ANR	1919112	CompoundStatement		55:111:2129:2129	1918605	1					
ANR	1919113	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"	1673:7:55036:55209	1918605	0	True				
ANR	1919114	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"" , model -> u . element -> name , model -> u . element -> fixed , property -> children -> content )"		1918605	0					
ANR	1919115	Callee	soap_error3		1918605	0					
ANR	1919116	Identifier	soap_error3		1918605	0					
ANR	1919117	ArgumentList	E_ERROR		1918605	1					
ANR	1919118	Argument	E_ERROR		1918605	0					
ANR	1919119	Identifier	E_ERROR		1918605	0					
ANR	1919120	Argument	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1918605	1					
ANR	1919121	PrimaryExpression	"""Encoding: Element '%s' has fixed value '%s' (value '%s' is not allowed)"""		1918605	0					
ANR	1919122	Argument	model -> u . element -> name		1918605	2					
ANR	1919123	PtrMemberAccess	model -> u . element -> name		1918605	0					
ANR	1919124	MemberAccess	model -> u . element		1918605	0					
ANR	1919125	PtrMemberAccess	model -> u		1918605	0					
ANR	1919126	Identifier	model		1918605	0					
ANR	1919127	Identifier	u		1918605	1					
ANR	1919128	Identifier	element		1918605	1					
ANR	1919129	Identifier	name		1918605	1					
ANR	1919130	Argument	model -> u . element -> fixed		1918605	3					
ANR	1919131	PtrMemberAccess	model -> u . element -> fixed		1918605	0					
ANR	1919132	MemberAccess	model -> u . element		1918605	0					
ANR	1919133	PtrMemberAccess	model -> u		1918605	0					
ANR	1919134	Identifier	model		1918605	0					
ANR	1919135	Identifier	u		1918605	1					
ANR	1919136	Identifier	element		1918605	1					
ANR	1919137	Identifier	fixed		1918605	1					
ANR	1919138	Argument	property -> children -> content		1918605	4					
ANR	1919139	PtrMemberAccess	property -> children -> content		1918605	0					
ANR	1919140	PtrMemberAccess	property -> children		1918605	0					
ANR	1919141	Identifier	property		1918605	0					
ANR	1919142	Identifier	children		1918605	1					
ANR	1919143	Identifier	content		1918605	1					
ANR	1919144	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"	1676:5:55231:55289	1918605	1	True				
ANR	1919145	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( model -> u . element -> name ) )"		1918605	0					
ANR	1919146	Callee	xmlNodeSetName		1918605	0					
ANR	1919147	Identifier	xmlNodeSetName		1918605	0					
ANR	1919148	ArgumentList	property		1918605	1					
ANR	1919149	Argument	property		1918605	0					
ANR	1919150	Identifier	property		1918605	0					
ANR	1919151	Argument	BAD_CAST ( model -> u . element -> name )		1918605	1					
ANR	1919152	CallExpression	BAD_CAST ( model -> u . element -> name )		1918605	0					
ANR	1919153	Callee	BAD_CAST		1918605	0					
ANR	1919154	Identifier	BAD_CAST		1918605	0					
ANR	1919155	ArgumentList	model -> u . element -> name		1918605	1					
ANR	1919156	Argument	model -> u . element -> name		1918605	0					
ANR	1919157	PtrMemberAccess	model -> u . element -> name		1918605	0					
ANR	1919158	MemberAccess	model -> u . element		1918605	0					
ANR	1919159	PtrMemberAccess	model -> u		1918605	0					
ANR	1919160	Identifier	model		1918605	0					
ANR	1919161	Identifier	u		1918605	1					
ANR	1919162	Identifier	element		1918605	1					
ANR	1919163	Identifier	name		1918605	1					
ANR	1919164	IfStatement	if ( style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED )		1918605	2					
ANR	1919165	Condition	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED	1677:9:55300:55414	1918605	0	True				
ANR	1919166	AndExpression	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	0		&&			
ANR	1919167	EqualityExpression	style == SOAP_LITERAL		1918605	0		==			
ANR	1919168	Identifier	style		1918605	0					
ANR	1919169	Identifier	SOAP_LITERAL		1918605	1					
ANR	1919170	AndExpression	model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	1		&&			
ANR	1919171	PtrMemberAccess	model -> u . element -> namens		1918605	0					
ANR	1919172	MemberAccess	model -> u . element		1918605	0					
ANR	1919173	PtrMemberAccess	model -> u		1918605	0					
ANR	1919174	Identifier	model		1918605	0					
ANR	1919175	Identifier	u		1918605	1					
ANR	1919176	Identifier	element		1918605	1					
ANR	1919177	Identifier	namens		1918605	1					
ANR	1919178	EqualityExpression	model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	1		==			
ANR	1919179	PtrMemberAccess	model -> u . element -> form		1918605	0					
ANR	1919180	MemberAccess	model -> u . element		1918605	0					
ANR	1919181	PtrMemberAccess	model -> u		1918605	0					
ANR	1919182	Identifier	model		1918605	0					
ANR	1919183	Identifier	u		1918605	1					
ANR	1919184	Identifier	element		1918605	1					
ANR	1919185	Identifier	form		1918605	1					
ANR	1919186	Identifier	XSD_FORM_QUALIFIED		1918605	1					
ANR	1919187	CompoundStatement		63:6:2527:2591	1918605	1					
ANR	1919188	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , model -> u . element -> namens ) ;"	1680:6:55425:55489	1918605	0	True				
ANR	1919189	IdentifierDecl	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1918605	0					
ANR	1919190	IdentifierDeclType	xmlNsPtr		1918605	0					
ANR	1919191	Identifier	nsp		1918605	1					
ANR	1919192	AssignmentExpression	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1918605	2		=			
ANR	1919193	Identifier	nsp		1918605	0					
ANR	1919194	CallExpression	"encode_add_ns ( property , model -> u . element -> namens )"		1918605	1					
ANR	1919195	Callee	encode_add_ns		1918605	0					
ANR	1919196	Identifier	encode_add_ns		1918605	0					
ANR	1919197	ArgumentList	property		1918605	1					
ANR	1919198	Argument	property		1918605	0					
ANR	1919199	Identifier	property		1918605	0					
ANR	1919200	Argument	model -> u . element -> namens		1918605	1					
ANR	1919201	PtrMemberAccess	model -> u . element -> namens		1918605	0					
ANR	1919202	MemberAccess	model -> u . element		1918605	0					
ANR	1919203	PtrMemberAccess	model -> u		1918605	0					
ANR	1919204	Identifier	model		1918605	0					
ANR	1919205	Identifier	u		1918605	1					
ANR	1919206	Identifier	element		1918605	1					
ANR	1919207	Identifier	namens		1918605	1					
ANR	1919208	ExpressionStatement	"xmlSetNs ( property , nsp )"	1681:6:55497:55520	1918605	1	True				
ANR	1919209	CallExpression	"xmlSetNs ( property , nsp )"		1918605	0					
ANR	1919210	Callee	xmlSetNs		1918605	0					
ANR	1919211	Identifier	xmlSetNs		1918605	0					
ANR	1919212	ArgumentList	property		1918605	1					
ANR	1919213	Argument	property		1918605	0					
ANR	1919214	Identifier	property		1918605	0					
ANR	1919215	Argument	nsp		1918605	1					
ANR	1919216	Identifier	nsp		1918605	0					
ANR	1919217	ReturnStatement	return 1 ;	1684:4:55539:55547	1918605	2	True				
ANR	1919218	PrimaryExpression	1		1918605	0					
ANR	1919219	ElseStatement	else		1918605	0					
ANR	1919220	IfStatement	if ( strict && model -> u . element -> nillable && model -> min_occurs > 0 )		1918605	0					
ANR	1919221	Condition	strict && model -> u . element -> nillable && model -> min_occurs > 0	1685:14:55563:55623	1918605	0	True				
ANR	1919222	AndExpression	strict && model -> u . element -> nillable && model -> min_occurs > 0		1918605	0		&&			
ANR	1919223	Identifier	strict		1918605	0					
ANR	1919224	AndExpression	model -> u . element -> nillable && model -> min_occurs > 0		1918605	1		&&			
ANR	1919225	PtrMemberAccess	model -> u . element -> nillable		1918605	0					
ANR	1919226	MemberAccess	model -> u . element		1918605	0					
ANR	1919227	PtrMemberAccess	model -> u		1918605	0					
ANR	1919228	Identifier	model		1918605	0					
ANR	1919229	Identifier	u		1918605	1					
ANR	1919230	Identifier	element		1918605	1					
ANR	1919231	Identifier	nillable		1918605	1					
ANR	1919232	RelationalExpression	model -> min_occurs > 0		1918605	1		>			
ANR	1919233	PtrMemberAccess	model -> min_occurs		1918605	0					
ANR	1919234	Identifier	model		1918605	0					
ANR	1919235	Identifier	min_occurs		1918605	1					
ANR	1919236	PrimaryExpression	0		1918605	1					
ANR	1919237	CompoundStatement		68:77:2728:2728	1918605	1					
ANR	1919238	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( model -> u . element -> name ) )"	1686:4:55632:55693	1918605	0	True				
ANR	1919239	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( model -> u . element -> name ) )"		1918605	0		=			
ANR	1919240	Identifier	property		1918605	0					
ANR	1919241	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( model -> u . element -> name ) )"		1918605	1					
ANR	1919242	Callee	xmlNewNode		1918605	0					
ANR	1919243	Identifier	xmlNewNode		1918605	0					
ANR	1919244	ArgumentList	NULL		1918605	1					
ANR	1919245	Argument	NULL		1918605	0					
ANR	1919246	Identifier	NULL		1918605	0					
ANR	1919247	Argument	BAD_CAST ( model -> u . element -> name )		1918605	1					
ANR	1919248	CallExpression	BAD_CAST ( model -> u . element -> name )		1918605	0					
ANR	1919249	Callee	BAD_CAST		1918605	0					
ANR	1919250	Identifier	BAD_CAST		1918605	0					
ANR	1919251	ArgumentList	model -> u . element -> name		1918605	1					
ANR	1919252	Argument	model -> u . element -> name		1918605	0					
ANR	1919253	PtrMemberAccess	model -> u . element -> name		1918605	0					
ANR	1919254	MemberAccess	model -> u . element		1918605	0					
ANR	1919255	PtrMemberAccess	model -> u		1918605	0					
ANR	1919256	Identifier	model		1918605	0					
ANR	1919257	Identifier	u		1918605	1					
ANR	1919258	Identifier	element		1918605	1					
ANR	1919259	Identifier	name		1918605	1					
ANR	1919260	ExpressionStatement	"xmlAddChild ( node , property )"	1687:4:55699:55726	1918605	1	True				
ANR	1919261	CallExpression	"xmlAddChild ( node , property )"		1918605	0					
ANR	1919262	Callee	xmlAddChild		1918605	0					
ANR	1919263	Identifier	xmlAddChild		1918605	0					
ANR	1919264	ArgumentList	node		1918605	1					
ANR	1919265	Argument	node		1918605	0					
ANR	1919266	Identifier	node		1918605	0					
ANR	1919267	Argument	property		1918605	1					
ANR	1919268	Identifier	property		1918605	0					
ANR	1919269	ExpressionStatement	set_xsi_nil ( property )	1688:4:55732:55753	1918605	2	True				
ANR	1919270	CallExpression	set_xsi_nil ( property )		1918605	0					
ANR	1919271	Callee	set_xsi_nil		1918605	0					
ANR	1919272	Identifier	set_xsi_nil		1918605	0					
ANR	1919273	ArgumentList	property		1918605	1					
ANR	1919274	Argument	property		1918605	0					
ANR	1919275	Identifier	property		1918605	0					
ANR	1919276	IfStatement	if ( style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED )		1918605	3					
ANR	1919277	Condition	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED	1689:8:55763:55875	1918605	0	True				
ANR	1919278	AndExpression	style == SOAP_LITERAL && model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	0		&&			
ANR	1919279	EqualityExpression	style == SOAP_LITERAL		1918605	0		==			
ANR	1919280	Identifier	style		1918605	0					
ANR	1919281	Identifier	SOAP_LITERAL		1918605	1					
ANR	1919282	AndExpression	model -> u . element -> namens && model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	1		&&			
ANR	1919283	PtrMemberAccess	model -> u . element -> namens		1918605	0					
ANR	1919284	MemberAccess	model -> u . element		1918605	0					
ANR	1919285	PtrMemberAccess	model -> u		1918605	0					
ANR	1919286	Identifier	model		1918605	0					
ANR	1919287	Identifier	u		1918605	1					
ANR	1919288	Identifier	element		1918605	1					
ANR	1919289	Identifier	namens		1918605	1					
ANR	1919290	EqualityExpression	model -> u . element -> form == XSD_FORM_QUALIFIED		1918605	1		==			
ANR	1919291	PtrMemberAccess	model -> u . element -> form		1918605	0					
ANR	1919292	MemberAccess	model -> u . element		1918605	0					
ANR	1919293	PtrMemberAccess	model -> u		1918605	0					
ANR	1919294	Identifier	model		1918605	0					
ANR	1919295	Identifier	u		1918605	1					
ANR	1919296	Identifier	element		1918605	1					
ANR	1919297	Identifier	form		1918605	1					
ANR	1919298	Identifier	XSD_FORM_QUALIFIED		1918605	1					
ANR	1919299	CompoundStatement		75:5:2987:3051	1918605	1					
ANR	1919300	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , model -> u . element -> namens ) ;"	1692:5:55885:55949	1918605	0	True				
ANR	1919301	IdentifierDecl	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1918605	0					
ANR	1919302	IdentifierDeclType	xmlNsPtr		1918605	0					
ANR	1919303	Identifier	nsp		1918605	1					
ANR	1919304	AssignmentExpression	"nsp = encode_add_ns ( property , model -> u . element -> namens )"		1918605	2		=			
ANR	1919305	Identifier	nsp		1918605	0					
ANR	1919306	CallExpression	"encode_add_ns ( property , model -> u . element -> namens )"		1918605	1					
ANR	1919307	Callee	encode_add_ns		1918605	0					
ANR	1919308	Identifier	encode_add_ns		1918605	0					
ANR	1919309	ArgumentList	property		1918605	1					
ANR	1919310	Argument	property		1918605	0					
ANR	1919311	Identifier	property		1918605	0					
ANR	1919312	Argument	model -> u . element -> namens		1918605	1					
ANR	1919313	PtrMemberAccess	model -> u . element -> namens		1918605	0					
ANR	1919314	MemberAccess	model -> u . element		1918605	0					
ANR	1919315	PtrMemberAccess	model -> u		1918605	0					
ANR	1919316	Identifier	model		1918605	0					
ANR	1919317	Identifier	u		1918605	1					
ANR	1919318	Identifier	element		1918605	1					
ANR	1919319	Identifier	namens		1918605	1					
ANR	1919320	ExpressionStatement	"xmlSetNs ( property , nsp )"	1693:5:55956:55979	1918605	1	True				
ANR	1919321	CallExpression	"xmlSetNs ( property , nsp )"		1918605	0					
ANR	1919322	Callee	xmlSetNs		1918605	0					
ANR	1919323	Identifier	xmlSetNs		1918605	0					
ANR	1919324	ArgumentList	property		1918605	1					
ANR	1919325	Argument	property		1918605	0					
ANR	1919326	Identifier	property		1918605	0					
ANR	1919327	Argument	nsp		1918605	1					
ANR	1919328	Identifier	nsp		1918605	0					
ANR	1919329	ReturnStatement	return 1 ;	1695:4:55991:55999	1918605	4	True				
ANR	1919330	PrimaryExpression	1		1918605	0					
ANR	1919331	ElseStatement	else		1918605	0					
ANR	1919332	IfStatement	if ( model -> min_occurs == 0 )		1918605	0					
ANR	1919333	Condition	model -> min_occurs == 0	1696:14:56015:56036	1918605	0	True				
ANR	1919334	EqualityExpression	model -> min_occurs == 0		1918605	0		==			
ANR	1919335	PtrMemberAccess	model -> min_occurs		1918605	0					
ANR	1919336	Identifier	model		1918605	0					
ANR	1919337	Identifier	min_occurs		1918605	1					
ANR	1919338	PrimaryExpression	0		1918605	1					
ANR	1919339	CompoundStatement		79:38:3141:3141	1918605	1					
ANR	1919340	ReturnStatement	return 2 ;	1697:4:56045:56053	1918605	0	True				
ANR	1919341	PrimaryExpression	2		1918605	0					
ANR	1919342	ElseStatement	else		1918605	0					
ANR	1919343	CompoundStatement		81:10:3167:3167	1918605	0					
ANR	1919344	IfStatement	if ( strict )		1918605	0					
ANR	1919345	Condition	strict	1699:8:56075:56080	1918605	0	True				
ANR	1919346	Identifier	strict		1918605	0					
ANR	1919347	CompoundStatement		82:16:3185:3185	1918605	1					
ANR	1919348	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: object has no '%s' property"" , model -> u . element -> name )"	1700:5:56090:56176	1918605	0	True				
ANR	1919349	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: object has no '%s' property"" , model -> u . element -> name )"		1918605	0					
ANR	1919350	Callee	soap_error1		1918605	0					
ANR	1919351	Identifier	soap_error1		1918605	0					
ANR	1919352	ArgumentList	E_ERROR		1918605	1					
ANR	1919353	Argument	E_ERROR		1918605	0					
ANR	1919354	Identifier	E_ERROR		1918605	0					
ANR	1919355	Argument	"""Encoding: object has no '%s' property"""		1918605	1					
ANR	1919356	PrimaryExpression	"""Encoding: object has no '%s' property"""		1918605	0					
ANR	1919357	Argument	model -> u . element -> name		1918605	2					
ANR	1919358	PtrMemberAccess	model -> u . element -> name		1918605	0					
ANR	1919359	MemberAccess	model -> u . element		1918605	0					
ANR	1919360	PtrMemberAccess	model -> u		1918605	0					
ANR	1919361	Identifier	model		1918605	0					
ANR	1919362	Identifier	u		1918605	1					
ANR	1919363	Identifier	element		1918605	1					
ANR	1919364	Identifier	name		1918605	1					
ANR	1919365	ReturnStatement	return 0 ;	1702:4:56188:56196	1918605	1	True				
ANR	1919366	PrimaryExpression	0		1918605	0					
ANR	1919367	BreakStatement	break ;	1704:3:56206:56211	1918605	7	True				
ANR	1919368	Label	case XSD_CONTENT_ANY :	1706:2:56219:56239	1918605	2	True				
ANR	1919369	Identifier	XSD_CONTENT_ANY		1918605	0					
ANR	1919370	CompoundStatement		92:3:3381:3388	1918605	3					
ANR	1919371	IdentifierDeclStatement	zval * data ;	1707:3:56246:56256	1918605	0	True				
ANR	1919372	IdentifierDecl	* data		1918605	0					
ANR	1919373	IdentifierDeclType	zval *		1918605	0					
ANR	1919374	Identifier	data		1918605	1					
ANR	1919375	IdentifierDeclStatement	encodePtr enc ;	1708:3:56261:56274	1918605	1	True				
ANR	1919376	IdentifierDecl	enc		1918605	0					
ANR	1919377	IdentifierDeclType	encodePtr		1918605	0					
ANR	1919378	Identifier	enc		1918605	1					
ANR	1919379	IdentifierDeclStatement	zval rv ;	1709:3:56279:56286	1918605	2	True				
ANR	1919380	IdentifierDecl	rv		1918605	0					
ANR	1919381	IdentifierDeclType	zval		1918605	0					
ANR	1919382	Identifier	rv		1918605	1					
ANR	1919383	ExpressionStatement	"data = get_zval_property ( object , ""any"" , & rv )"	1711:3:56292:56336	1918605	3	True				
ANR	1919384	AssignmentExpression	"data = get_zval_property ( object , ""any"" , & rv )"		1918605	0		=			
ANR	1919385	Identifier	data		1918605	0					
ANR	1919386	CallExpression	"get_zval_property ( object , ""any"" , & rv )"		1918605	1					
ANR	1919387	Callee	get_zval_property		1918605	0					
ANR	1919388	Identifier	get_zval_property		1918605	0					
ANR	1919389	ArgumentList	object		1918605	1					
ANR	1919390	Argument	object		1918605	0					
ANR	1919391	Identifier	object		1918605	0					
ANR	1919392	Argument	"""any"""		1918605	1					
ANR	1919393	PrimaryExpression	"""any"""		1918605	0					
ANR	1919394	Argument	& rv		1918605	2					
ANR	1919395	UnaryOperationExpression	& rv		1918605	0					
ANR	1919396	UnaryOperator	&		1918605	0					
ANR	1919397	Identifier	rv		1918605	1					
ANR	1919398	IfStatement	if ( data )		1918605	4					
ANR	1919399	Condition	data	1712:7:56345:56348	1918605	0	True				
ANR	1919400	Identifier	data		1918605	0					
ANR	1919401	CompoundStatement		95:13:3453:3453	1918605	1					
ANR	1919402	ExpressionStatement	enc = get_conversion ( XSD_ANYXML )	1713:4:56357:56389	1918605	0	True				
ANR	1919403	AssignmentExpression	enc = get_conversion ( XSD_ANYXML )		1918605	0		=			
ANR	1919404	Identifier	enc		1918605	0					
ANR	1919405	CallExpression	get_conversion ( XSD_ANYXML )		1918605	1					
ANR	1919406	Callee	get_conversion		1918605	0					
ANR	1919407	Identifier	get_conversion		1918605	0					
ANR	1919408	ArgumentList	XSD_ANYXML		1918605	1					
ANR	1919409	Argument	XSD_ANYXML		1918605	0					
ANR	1919410	Identifier	XSD_ANYXML		1918605	0					
ANR	1919411	IfStatement	if ( ( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) )		1918605	1					
ANR	1919412	Condition	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )	1714:8:56399:56511	1918605	0	True				
ANR	1919413	AndExpression	( model -> max_occurs == - 1 || model -> max_occurs > 1 ) && Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1918605	0		&&			
ANR	1919414	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1918605	0		||			
ANR	1919415	EqualityExpression	model -> max_occurs == - 1		1918605	0		==			
ANR	1919416	PtrMemberAccess	model -> max_occurs		1918605	0					
ANR	1919417	Identifier	model		1918605	0					
ANR	1919418	Identifier	max_occurs		1918605	1					
ANR	1919419	UnaryOperationExpression	- 1		1918605	1					
ANR	1919420	UnaryOperator	-		1918605	0					
ANR	1919421	PrimaryExpression	1		1918605	1					
ANR	1919422	RelationalExpression	model -> max_occurs > 1		1918605	1		>			
ANR	1919423	PtrMemberAccess	model -> max_occurs		1918605	0					
ANR	1919424	Identifier	model		1918605	0					
ANR	1919425	Identifier	max_occurs		1918605	1					
ANR	1919426	PrimaryExpression	1		1918605	1					
ANR	1919427	AndExpression	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data )		1918605	1		&&			
ANR	1919428	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1918605	0		==			
ANR	1919429	CallExpression	Z_TYPE_P ( data )		1918605	0					
ANR	1919430	Callee	Z_TYPE_P		1918605	0					
ANR	1919431	Identifier	Z_TYPE_P		1918605	0					
ANR	1919432	ArgumentList	data		1918605	1					
ANR	1919433	Argument	data		1918605	0					
ANR	1919434	Identifier	data		1918605	0					
ANR	1919435	Identifier	IS_ARRAY		1918605	1					
ANR	1919436	UnaryOperationExpression	! is_map ( data )		1918605	1					
ANR	1919437	UnaryOperator	!		1918605	0					
ANR	1919438	CallExpression	is_map ( data )		1918605	1					
ANR	1919439	Callee	is_map		1918605	0					
ANR	1919440	Identifier	is_map		1918605	0					
ANR	1919441	ArgumentList	data		1918605	1					
ANR	1919442	Argument	data		1918605	0					
ANR	1919443	Identifier	data		1918605	0					
ANR	1919444	CompoundStatement		101:5:3662:3671	1918605	1					
ANR	1919445	IdentifierDeclStatement	HashTable * ht = Z_ARRVAL_P ( data ) ;	1717:5:56521:56553	1918605	0	True				
ANR	1919446	IdentifierDecl	* ht = Z_ARRVAL_P ( data )		1918605	0					
ANR	1919447	IdentifierDeclType	HashTable *		1918605	0					
ANR	1919448	Identifier	ht		1918605	1					
ANR	1919449	AssignmentExpression	* ht = Z_ARRVAL_P ( data )		1918605	2		=			
ANR	1919450	Identifier	ht		1918605	0					
ANR	1919451	CallExpression	Z_ARRVAL_P ( data )		1918605	1					
ANR	1919452	Callee	Z_ARRVAL_P		1918605	0					
ANR	1919453	Identifier	Z_ARRVAL_P		1918605	0					
ANR	1919454	ArgumentList	data		1918605	1					
ANR	1919455	Argument	data		1918605	0					
ANR	1919456	Identifier	data		1918605	0					
ANR	1919457	IdentifierDeclStatement	zval * val ;	1718:5:56560:56569	1918605	1	True				
ANR	1919458	IdentifierDecl	* val		1918605	0					
ANR	1919459	IdentifierDeclType	zval *		1918605	0					
ANR	1919460	Identifier	val		1918605	1					
ANR	1919461	Statement	ZEND_HASH_FOREACH_VAL	1720:5:56577:56597	1918605	2	True				
ANR	1919462	Statement	(	1720:26:56598:56598	1918605	3	True				
ANR	1919463	Statement	ht	1720:27:56599:56600	1918605	4	True				
ANR	1919464	Statement	","	1720:29:56601:56601	1918605	5	True				
ANR	1919465	Statement	val	1720:31:56603:56605	1918605	6	True				
ANR	1919466	Statement	)	1720:34:56606:56606	1918605	7	True				
ANR	1919467	CompoundStatement		103:36:3710:3710	1918605	8					
ANR	1919468	ExpressionStatement	"master_to_xml ( enc , val , style , node )"	1721:6:56616:56652	1918605	0	True				
ANR	1919469	CallExpression	"master_to_xml ( enc , val , style , node )"		1918605	0					
ANR	1919470	Callee	master_to_xml		1918605	0					
ANR	1919471	Identifier	master_to_xml		1918605	0					
ANR	1919472	ArgumentList	enc		1918605	1					
ANR	1919473	Argument	enc		1918605	0					
ANR	1919474	Identifier	enc		1918605	0					
ANR	1919475	Argument	val		1918605	1					
ANR	1919476	Identifier	val		1918605	0					
ANR	1919477	Argument	style		1918605	2					
ANR	1919478	Identifier	style		1918605	0					
ANR	1919479	Argument	node		1918605	3					
ANR	1919480	Identifier	node		1918605	0					
ANR	1919481	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1722:7:56661:56684	1918605	9	True				
ANR	1919482	CallExpression	ZEND_HASH_FOREACH_END ( )		1918605	0					
ANR	1919483	Callee	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1919484	Identifier	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1919485	ArgumentList			1918605	1					
ANR	1919486	ElseStatement	else		1918605	0					
ANR	1919487	CompoundStatement		106:11:3799:3799	1918605	0					
ANR	1919488	ExpressionStatement	"master_to_xml ( enc , data , style , node )"	1724:5:56704:56741	1918605	0	True				
ANR	1919489	CallExpression	"master_to_xml ( enc , data , style , node )"		1918605	0					
ANR	1919490	Callee	master_to_xml		1918605	0					
ANR	1919491	Identifier	master_to_xml		1918605	0					
ANR	1919492	ArgumentList	enc		1918605	1					
ANR	1919493	Argument	enc		1918605	0					
ANR	1919494	Identifier	enc		1918605	0					
ANR	1919495	Argument	data		1918605	1					
ANR	1919496	Identifier	data		1918605	0					
ANR	1919497	Argument	style		1918605	2					
ANR	1919498	Identifier	style		1918605	0					
ANR	1919499	Argument	node		1918605	3					
ANR	1919500	Identifier	node		1918605	0					
ANR	1919501	ReturnStatement	return 1 ;	1726:4:56753:56761	1918605	2	True				
ANR	1919502	PrimaryExpression	1		1918605	0					
ANR	1919503	ElseStatement	else		1918605	0					
ANR	1919504	IfStatement	if ( model -> min_occurs == 0 )		1918605	0					
ANR	1919505	Condition	model -> min_occurs == 0	1727:14:56777:56798	1918605	0	True				
ANR	1919506	EqualityExpression	model -> min_occurs == 0		1918605	0		==			
ANR	1919507	PtrMemberAccess	model -> min_occurs		1918605	0					
ANR	1919508	Identifier	model		1918605	0					
ANR	1919509	Identifier	min_occurs		1918605	1					
ANR	1919510	PrimaryExpression	0		1918605	1					
ANR	1919511	CompoundStatement		110:38:3903:3903	1918605	1					
ANR	1919512	ReturnStatement	return 2 ;	1728:4:56807:56815	1918605	0	True				
ANR	1919513	PrimaryExpression	2		1918605	0					
ANR	1919514	ElseStatement	else		1918605	0					
ANR	1919515	CompoundStatement		112:10:3929:3929	1918605	0					
ANR	1919516	IfStatement	if ( strict )		1918605	0					
ANR	1919517	Condition	strict	1730:8:56837:56842	1918605	0	True				
ANR	1919518	Identifier	strict		1918605	0					
ANR	1919519	CompoundStatement		113:16:3947:3947	1918605	1					
ANR	1919520	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: object has no 'any' property"" )"	1731:5:56852:56915	1918605	0	True				
ANR	1919521	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: object has no 'any' property"" )"		1918605	0					
ANR	1919522	Callee	soap_error0		1918605	0					
ANR	1919523	Identifier	soap_error0		1918605	0					
ANR	1919524	ArgumentList	E_ERROR		1918605	1					
ANR	1919525	Argument	E_ERROR		1918605	0					
ANR	1919526	Identifier	E_ERROR		1918605	0					
ANR	1919527	Argument	"""Encoding: object has no 'any' property"""		1918605	1					
ANR	1919528	PrimaryExpression	"""Encoding: object has no 'any' property"""		1918605	0					
ANR	1919529	ReturnStatement	return 0 ;	1733:4:56927:56935	1918605	1	True				
ANR	1919530	PrimaryExpression	0		1918605	0					
ANR	1919531	BreakStatement	break ;	1735:3:56945:56950	1918605	5	True				
ANR	1919532	Label	case XSD_CONTENT_SEQUENCE :	1737:2:56958:56983	1918605	4	True				
ANR	1919533	Identifier	XSD_CONTENT_SEQUENCE		1918605	0					
ANR	1919534	Label	case XSD_CONTENT_ALL :	1738:2:56987:57007	1918605	5	True				
ANR	1919535	Identifier	XSD_CONTENT_ALL		1918605	0					
ANR	1919536	CompoundStatement		122:3:4116:4138	1918605	6					
ANR	1919537	IdentifierDeclStatement	sdlContentModelPtr tmp ;	1739:3:57014:57036	1918605	0	True				
ANR	1919538	IdentifierDecl	tmp		1918605	0					
ANR	1919539	IdentifierDeclType	sdlContentModelPtr		1918605	0					
ANR	1919540	Identifier	tmp		1918605	1					
ANR	1919541	Statement	ZEND_HASH_FOREACH_PTR	1741:3:57042:57062	1918605	1	True				
ANR	1919542	Statement	(	1741:24:57063:57063	1918605	2	True				
ANR	1919543	Statement	model	1741:25:57064:57068	1918605	3	True				
ANR	1919544	Statement	->	1741:30:57069:57070	1918605	4	True				
ANR	1919545	Statement	u	1741:32:57071:57071	1918605	5	True				
ANR	1919546	Statement	.	1741:33:57072:57072	1918605	6	True				
ANR	1919547	Statement	content	1741:34:57073:57079	1918605	7	True				
ANR	1919548	Statement	","	1741:41:57080:57080	1918605	8	True				
ANR	1919549	Statement	tmp	1741:43:57082:57084	1918605	9	True				
ANR	1919550	Statement	)	1741:46:57085:57085	1918605	10	True				
ANR	1919551	CompoundStatement		124:48:4189:4189	1918605	11					
ANR	1919552	IfStatement	"if ( ! model_to_xml_object ( node , tmp , object , style , strict && ( tmp -> min_occurs > 0 ) ) )"		1918605	0					
ANR	1919553	Condition	"! model_to_xml_object ( node , tmp , object , style , strict && ( tmp -> min_occurs > 0 ) )"	1742:8:57097:57175	1918605	0	True				
ANR	1919554	UnaryOperationExpression	"! model_to_xml_object ( node , tmp , object , style , strict && ( tmp -> min_occurs > 0 ) )"		1918605	0					
ANR	1919555	UnaryOperator	!		1918605	0					
ANR	1919556	CallExpression	"model_to_xml_object ( node , tmp , object , style , strict && ( tmp -> min_occurs > 0 ) )"		1918605	1					
ANR	1919557	Callee	model_to_xml_object		1918605	0					
ANR	1919558	Identifier	model_to_xml_object		1918605	0					
ANR	1919559	ArgumentList	node		1918605	1					
ANR	1919560	Argument	node		1918605	0					
ANR	1919561	Identifier	node		1918605	0					
ANR	1919562	Argument	tmp		1918605	1					
ANR	1919563	Identifier	tmp		1918605	0					
ANR	1919564	Argument	object		1918605	2					
ANR	1919565	Identifier	object		1918605	0					
ANR	1919566	Argument	style		1918605	3					
ANR	1919567	Identifier	style		1918605	0					
ANR	1919568	Argument	strict && ( tmp -> min_occurs > 0 )		1918605	4					
ANR	1919569	AndExpression	strict && ( tmp -> min_occurs > 0 )		1918605	0		&&			
ANR	1919570	Identifier	strict		1918605	0					
ANR	1919571	RelationalExpression	tmp -> min_occurs > 0		1918605	1		>			
ANR	1919572	PtrMemberAccess	tmp -> min_occurs		1918605	0					
ANR	1919573	Identifier	tmp		1918605	0					
ANR	1919574	Identifier	min_occurs		1918605	1					
ANR	1919575	PrimaryExpression	0		1918605	1					
ANR	1919576	CompoundStatement		125:89:4280:4280	1918605	1					
ANR	1919577	IfStatement	if ( ! strict || tmp -> min_occurs > 0 )		1918605	0					
ANR	1919578	Condition	! strict || tmp -> min_occurs > 0	1743:9:57189:57218	1918605	0	True				
ANR	1919579	OrExpression	! strict || tmp -> min_occurs > 0		1918605	0		||			
ANR	1919580	UnaryOperationExpression	! strict		1918605	0					
ANR	1919581	UnaryOperator	!		1918605	0					
ANR	1919582	Identifier	strict		1918605	1					
ANR	1919583	RelationalExpression	tmp -> min_occurs > 0		1918605	1		>			
ANR	1919584	PtrMemberAccess	tmp -> min_occurs		1918605	0					
ANR	1919585	Identifier	tmp		1918605	0					
ANR	1919586	Identifier	min_occurs		1918605	1					
ANR	1919587	PrimaryExpression	0		1918605	1					
ANR	1919588	CompoundStatement		126:41:4323:4323	1918605	1					
ANR	1919589	ReturnStatement	return 0 ;	1744:6:57229:57237	1918605	0	True				
ANR	1919590	PrimaryExpression	0		1918605	0					
ANR	1919591	ExpressionStatement	strict = 1	1747:4:57256:57266	1918605	1	True				
ANR	1919592	AssignmentExpression	strict = 1		1918605	0		=			
ANR	1919593	Identifier	strict		1918605	0					
ANR	1919594	PrimaryExpression	1		1918605	1					
ANR	1919595	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1748:5:57273:57296	1918605	12	True				
ANR	1919596	CallExpression	ZEND_HASH_FOREACH_END ( )		1918605	0					
ANR	1919597	Callee	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1919598	Identifier	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1919599	ArgumentList			1918605	1					
ANR	1919600	ReturnStatement	return 1 ;	1749:3:57301:57309	1918605	13	True				
ANR	1919601	PrimaryExpression	1		1918605	0					
ANR	1919602	Label	case XSD_CONTENT_CHOICE :	1751:2:57317:57340	1918605	7	True				
ANR	1919603	Identifier	XSD_CONTENT_CHOICE		1918605	0					
ANR	1919604	CompoundStatement		136:3:4476:4487	1918605	8					
ANR	1919605	IdentifierDeclStatement	sdlContentModelPtr tmp ;	1752:3:57347:57369	1918605	0	True				
ANR	1919606	IdentifierDecl	tmp		1918605	0					
ANR	1919607	IdentifierDeclType	sdlContentModelPtr		1918605	0					
ANR	1919608	Identifier	tmp		1918605	1					
ANR	1919609	IdentifierDeclStatement	int ret = 0 ;	1753:3:57374:57385	1918605	1	True				
ANR	1919610	IdentifierDecl	ret = 0		1918605	0					
ANR	1919611	IdentifierDeclType	int		1918605	0					
ANR	1919612	Identifier	ret		1918605	1					
ANR	1919613	AssignmentExpression	ret = 0		1918605	2		=			
ANR	1919614	Identifier	ret		1918605	0					
ANR	1919615	PrimaryExpression	0		1918605	1					
ANR	1919616	Statement	ZEND_HASH_FOREACH_PTR	1755:3:57391:57411	1918605	2	True				
ANR	1919617	Statement	(	1755:24:57412:57412	1918605	3	True				
ANR	1919618	Statement	model	1755:25:57413:57417	1918605	4	True				
ANR	1919619	Statement	->	1755:30:57418:57419	1918605	5	True				
ANR	1919620	Statement	u	1755:32:57420:57420	1918605	6	True				
ANR	1919621	Statement	.	1755:33:57421:57421	1918605	7	True				
ANR	1919622	Statement	content	1755:34:57422:57428	1918605	8	True				
ANR	1919623	Statement	","	1755:41:57429:57429	1918605	9	True				
ANR	1919624	Statement	tmp	1755:43:57431:57433	1918605	10	True				
ANR	1919625	Statement	)	1755:46:57434:57434	1918605	11	True				
ANR	1919626	CompoundStatement		139:4:4544:4606	1918605	12					
ANR	1919627	IdentifierDeclStatement	"int tmp_ret = model_to_xml_object ( node , tmp , object , style , 0 ) ;"	1756:4:57442:57504	1918605	0	True				
ANR	1919628	IdentifierDecl	"tmp_ret = model_to_xml_object ( node , tmp , object , style , 0 )"		1918605	0					
ANR	1919629	IdentifierDeclType	int		1918605	0					
ANR	1919630	Identifier	tmp_ret		1918605	1					
ANR	1919631	AssignmentExpression	"tmp_ret = model_to_xml_object ( node , tmp , object , style , 0 )"		1918605	2		=			
ANR	1919632	Identifier	tmp_ret		1918605	0					
ANR	1919633	CallExpression	"model_to_xml_object ( node , tmp , object , style , 0 )"		1918605	1					
ANR	1919634	Callee	model_to_xml_object		1918605	0					
ANR	1919635	Identifier	model_to_xml_object		1918605	0					
ANR	1919636	ArgumentList	node		1918605	1					
ANR	1919637	Argument	node		1918605	0					
ANR	1919638	Identifier	node		1918605	0					
ANR	1919639	Argument	tmp		1918605	1					
ANR	1919640	Identifier	tmp		1918605	0					
ANR	1919641	Argument	object		1918605	2					
ANR	1919642	Identifier	object		1918605	0					
ANR	1919643	Argument	style		1918605	3					
ANR	1919644	Identifier	style		1918605	0					
ANR	1919645	Argument	0		1918605	4					
ANR	1919646	PrimaryExpression	0		1918605	0					
ANR	1919647	IfStatement	if ( tmp_ret == 1 )		1918605	1					
ANR	1919648	Condition	tmp_ret == 1	1757:8:57514:57525	1918605	0	True				
ANR	1919649	EqualityExpression	tmp_ret == 1		1918605	0		==			
ANR	1919650	Identifier	tmp_ret		1918605	0					
ANR	1919651	PrimaryExpression	1		1918605	1					
ANR	1919652	CompoundStatement		140:22:4630:4630	1918605	1					
ANR	1919653	ReturnStatement	return 1 ;	1758:5:57535:57543	1918605	0	True				
ANR	1919654	PrimaryExpression	1		1918605	0					
ANR	1919655	ElseStatement	else		1918605	0					
ANR	1919656	IfStatement	if ( tmp_ret != 0 )		1918605	0					
ANR	1919657	Condition	tmp_ret != 0	1759:15:57560:57571	1918605	0	True				
ANR	1919658	EqualityExpression	tmp_ret != 0		1918605	0		!=			
ANR	1919659	Identifier	tmp_ret		1918605	0					
ANR	1919660	PrimaryExpression	0		1918605	1					
ANR	1919661	CompoundStatement		142:29:4676:4676	1918605	1					
ANR	1919662	ExpressionStatement	ret = 1	1760:5:57581:57588	1918605	0	True				
ANR	1919663	AssignmentExpression	ret = 1		1918605	0		=			
ANR	1919664	Identifier	ret		1918605	0					
ANR	1919665	PrimaryExpression	1		1918605	1					
ANR	1919666	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1762:5:57601:57624	1918605	13	True				
ANR	1919667	CallExpression	ZEND_HASH_FOREACH_END ( )		1918605	0					
ANR	1919668	Callee	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1919669	Identifier	ZEND_HASH_FOREACH_END		1918605	0					
ANR	1919670	ArgumentList			1918605	1					
ANR	1919671	ReturnStatement	return ret ;	1763:3:57629:57639	1918605	14	True				
ANR	1919672	Identifier	ret		1918605	0					
ANR	1919673	Label	case XSD_CONTENT_GROUP :	1765:2:57647:57669	1918605	9	True				
ANR	1919674	Identifier	XSD_CONTENT_GROUP		1918605	0					
ANR	1919675	CompoundStatement		148:26:4773:4773	1918605	10					
ANR	1919676	ReturnStatement	"return model_to_xml_object ( node , model -> u . group -> model , object , style , strict && model -> min_occurs > 0 ) ;"	1766:3:57676:57779	1918605	0	True				
ANR	1919677	CallExpression	"model_to_xml_object ( node , model -> u . group -> model , object , style , strict && model -> min_occurs > 0 )"		1918605	0					
ANR	1919678	Callee	model_to_xml_object		1918605	0					
ANR	1919679	Identifier	model_to_xml_object		1918605	0					
ANR	1919680	ArgumentList	node		1918605	1					
ANR	1919681	Argument	node		1918605	0					
ANR	1919682	Identifier	node		1918605	0					
ANR	1919683	Argument	model -> u . group -> model		1918605	1					
ANR	1919684	PtrMemberAccess	model -> u . group -> model		1918605	0					
ANR	1919685	MemberAccess	model -> u . group		1918605	0					
ANR	1919686	PtrMemberAccess	model -> u		1918605	0					
ANR	1919687	Identifier	model		1918605	0					
ANR	1919688	Identifier	u		1918605	1					
ANR	1919689	Identifier	group		1918605	1					
ANR	1919690	Identifier	model		1918605	1					
ANR	1919691	Argument	object		1918605	2					
ANR	1919692	Identifier	object		1918605	0					
ANR	1919693	Argument	style		1918605	3					
ANR	1919694	Identifier	style		1918605	0					
ANR	1919695	Argument	strict && model -> min_occurs > 0		1918605	4					
ANR	1919696	AndExpression	strict && model -> min_occurs > 0		1918605	0		&&			
ANR	1919697	Identifier	strict		1918605	0					
ANR	1919698	RelationalExpression	model -> min_occurs > 0		1918605	1		>			
ANR	1919699	PtrMemberAccess	model -> min_occurs		1918605	0					
ANR	1919700	Identifier	model		1918605	0					
ANR	1919701	Identifier	min_occurs		1918605	1					
ANR	1919702	PrimaryExpression	0		1918605	1					
ANR	1919703	Label	default :	1768:2:57787:57794	1918605	11	True				
ANR	1919704	Identifier	default		1918605	0					
ANR	1919705	BreakStatement	break ;	1769:4:57800:57805	1918605	12	True				
ANR	1919706	ReturnStatement	return 1 ;	1771:1:57811:57819	1918605	1	True				
ANR	1919707	PrimaryExpression	1		1918605	0					
ANR	1919708	ReturnType	static int		1918605	1					
ANR	1919709	Identifier	model_to_xml_object		1918605	2					
ANR	1919710	ParameterList	"xmlNodePtr node , sdlContentModelPtr model , zval * object , int style , int strict"		1918605	3					
ANR	1919711	Parameter	xmlNodePtr node	1617:31:52817:52831	1918605	0	True				
ANR	1919712	ParameterType	xmlNodePtr		1918605	0					
ANR	1919713	Identifier	node		1918605	1					
ANR	1919714	Parameter	sdlContentModelPtr model	1617:48:52834:52857	1918605	1	True				
ANR	1919715	ParameterType	sdlContentModelPtr		1918605	0					
ANR	1919716	Identifier	model		1918605	1					
ANR	1919717	Parameter	zval * object	1617:74:52860:52871	1918605	2	True				
ANR	1919718	ParameterType	zval *		1918605	0					
ANR	1919719	Identifier	object		1918605	1					
ANR	1919720	Parameter	int style	1617:88:52874:52882	1918605	3	True				
ANR	1919721	ParameterType	int		1918605	0					
ANR	1919722	Identifier	style		1918605	1					
ANR	1919723	Parameter	int strict	1617:99:52885:52894	1918605	4	True				
ANR	1919724	ParameterType	int		1918605	0					
ANR	1919725	Identifier	strict		1918605	1					
ANR	1919726	CFGEntryNode	ENTRY		1918605		True				
ANR	1919727	CFGExitNode	EXIT		1918605		True				
ANR	1919728	Symbol	model -> u		1918605						
ANR	1919729	Symbol	model -> u . element -> form		1918605						
ANR	1919730	Symbol	data		1918605						
ANR	1919731	Symbol	model -> max_occurs		1918605						
ANR	1919732	Symbol	* model -> u		1918605						
ANR	1919733	Symbol	XSD_FORM_QUALIFIED		1918605						
ANR	1919734	Symbol	get_conversion		1918605						
ANR	1919735	Symbol	ht		1918605						
ANR	1919736	Symbol	XSD_ANYXML		1918605						
ANR	1919737	Symbol	tmp		1918605						
ANR	1919738	Symbol	property		1918605						
ANR	1919739	Symbol	model		1918605						
ANR	1919740	Symbol	model -> min_occurs		1918605						
ANR	1919741	Symbol	strict		1918605						
ANR	1919742	Symbol	tmp -> min_occurs		1918605						
ANR	1919743	Symbol	model -> u . group		1918605						
ANR	1919744	Symbol	val		1918605						
ANR	1919745	Symbol	strcmp		1918605						
ANR	1919746	Symbol	ret		1918605						
ANR	1919747	Symbol	NULL		1918605						
ANR	1919748	Symbol	model -> u . element -> nillable		1918605						
ANR	1919749	Symbol	* model		1918605						
ANR	1919750	Symbol	* model -> u . group		1918605						
ANR	1919751	Symbol	node		1918605						
ANR	1919752	Symbol	model -> u . element		1918605						
ANR	1919753	Symbol	SOAP_LITERAL		1918605						
ANR	1919754	Symbol	style		1918605						
ANR	1919755	Symbol	model -> u . element -> name		1918605						
ANR	1919756	Symbol	object		1918605						
ANR	1919757	Symbol	BAD_CAST		1918605						
ANR	1919758	Symbol	* tmp		1918605						
ANR	1919759	Symbol	model_to_xml_object		1918605						
ANR	1919760	Symbol	rv		1918605						
ANR	1919761	Symbol	* * model		1918605						
ANR	1919762	Symbol	nsp		1918605						
ANR	1919763	Symbol	get_zval_property		1918605						
ANR	1919764	Symbol	model -> u . group -> model		1918605						
ANR	1919765	Symbol	tmp_ret		1918605						
ANR	1919766	Symbol	IS_NULL		1918605						
ANR	1919767	Symbol	IS_ARRAY		1918605						
ANR	1919768	Symbol	model -> u . element -> fixed		1918605						
ANR	1919769	Symbol	enc		1918605						
ANR	1919770	Symbol	property -> children		1918605						
ANR	1919771	Symbol	Z_ARRVAL_P		1918605						
ANR	1919772	Symbol	master_to_xml		1918605						
ANR	1919773	Symbol	* property -> children		1918605						
ANR	1919774	Symbol	model -> u . element -> encode		1918605						
ANR	1919775	Symbol	* * property		1918605						
ANR	1919776	Symbol	* property		1918605						
ANR	1919777	Symbol	encode_add_ns		1918605						
ANR	1919778	Symbol	is_map		1918605						
ANR	1919779	Symbol	xmlNewNode		1918605						
ANR	1919780	Symbol	Z_TYPE_P		1918605						
ANR	1919781	Symbol	& rv		1918605						
ANR	1919782	Symbol	model -> kind		1918605						
ANR	1919783	Symbol	E_ERROR		1918605						
ANR	1919784	Symbol	* model -> u . element		1918605						
ANR	1919785	Symbol	model -> u . element -> namens		1918605						
ANR	1919786	Symbol	property -> children -> content		1918605						
ANR	1919787	Function	model_array_element	1774:0:57824:58507							
ANR	1919788	FunctionDef	model_array_element (sdlContentModelPtr model)		1919787	0					
ANR	1919789	CompoundStatement		1775:0:57888:58507	1919787	0					
ANR	1919790	SwitchStatement	switch ( model -> kind )		1919787	0					
ANR	1919791	Condition	model -> kind	1776:9:57899:57909	1919787	0	True				
ANR	1919792	PtrMemberAccess	model -> kind		1919787	0					
ANR	1919793	Identifier	model		1919787	0					
ANR	1919794	Identifier	kind		1919787	1					
ANR	1919795	CompoundStatement		2:22:23:23	1919787	1					
ANR	1919796	Label	case XSD_CONTENT_ELEMENT :	1777:2:57916:57940	1919787	0	True				
ANR	1919797	Identifier	XSD_CONTENT_ELEMENT		1919787	0					
ANR	1919798	CompoundStatement		3:28:53:53	1919787	1					
ANR	1919799	IfStatement	if ( model -> max_occurs == - 1 || model -> max_occurs > 1 )		1919787	0					
ANR	1919800	Condition	model -> max_occurs == - 1 || model -> max_occurs > 1	1778:7:57951:57998	1919787	0	True				
ANR	1919801	OrExpression	model -> max_occurs == - 1 || model -> max_occurs > 1		1919787	0		||			
ANR	1919802	EqualityExpression	model -> max_occurs == - 1		1919787	0		==			
ANR	1919803	PtrMemberAccess	model -> max_occurs		1919787	0					
ANR	1919804	Identifier	model		1919787	0					
ANR	1919805	Identifier	max_occurs		1919787	1					
ANR	1919806	UnaryOperationExpression	- 1		1919787	1					
ANR	1919807	UnaryOperator	-		1919787	0					
ANR	1919808	PrimaryExpression	1		1919787	1					
ANR	1919809	RelationalExpression	model -> max_occurs > 1		1919787	1		>			
ANR	1919810	PtrMemberAccess	model -> max_occurs		1919787	0					
ANR	1919811	Identifier	model		1919787	0					
ANR	1919812	Identifier	max_occurs		1919787	1					
ANR	1919813	PrimaryExpression	1		1919787	1					
ANR	1919814	CompoundStatement		4:57:112:112	1919787	1					
ANR	1919815	ReturnStatement	return model -> u . element ;	1779:5:58008:58031	1919787	0	True				
ANR	1919816	MemberAccess	model -> u . element		1919787	0					
ANR	1919817	PtrMemberAccess	model -> u		1919787	0					
ANR	1919818	Identifier	model		1919787	0					
ANR	1919819	Identifier	u		1919787	1					
ANR	1919820	Identifier	element		1919787	1					
ANR	1919821	ElseStatement	else		1919787	0					
ANR	1919822	CompoundStatement		6:10:154:154	1919787	0					
ANR	1919823	ReturnStatement	return NULL ;	1781:5:58050:58061	1919787	0	True				
ANR	1919824	Identifier	NULL		1919787	0					
ANR	1919825	Label	case XSD_CONTENT_SEQUENCE :	1784:2:58074:58099	1919787	2	True				
ANR	1919826	Identifier	XSD_CONTENT_SEQUENCE		1919787	0					
ANR	1919827	Label	case XSD_CONTENT_ALL :	1785:2:58103:58123	1919787	3	True				
ANR	1919828	Identifier	XSD_CONTENT_ALL		1919787	0					
ANR	1919829	Label	case XSD_CONTENT_CHOICE :	1786:2:58127:58150	1919787	4	True				
ANR	1919830	Identifier	XSD_CONTENT_CHOICE		1919787	0					
ANR	1919831	CompoundStatement		13:3:268:290	1919787	5					
ANR	1919832	IdentifierDeclStatement	sdlContentModelPtr tmp ;	1787:3:58157:58179	1919787	0	True				
ANR	1919833	IdentifierDecl	tmp		1919787	0					
ANR	1919834	IdentifierDeclType	sdlContentModelPtr		1919787	0					
ANR	1919835	Identifier	tmp		1919787	1					
ANR	1919836	IfStatement	if ( zend_hash_num_elements ( model -> u . content ) != 1 )		1919787	1					
ANR	1919837	Condition	zend_hash_num_elements ( model -> u . content ) != 1	1789:7:58189:58233	1919787	0	True				
ANR	1919838	EqualityExpression	zend_hash_num_elements ( model -> u . content ) != 1		1919787	0		!=			
ANR	1919839	CallExpression	zend_hash_num_elements ( model -> u . content )		1919787	0					
ANR	1919840	Callee	zend_hash_num_elements		1919787	0					
ANR	1919841	Identifier	zend_hash_num_elements		1919787	0					
ANR	1919842	ArgumentList	model -> u . content		1919787	1					
ANR	1919843	Argument	model -> u . content		1919787	0					
ANR	1919844	MemberAccess	model -> u . content		1919787	0					
ANR	1919845	PtrMemberAccess	model -> u		1919787	0					
ANR	1919846	Identifier	model		1919787	0					
ANR	1919847	Identifier	u		1919787	1					
ANR	1919848	Identifier	content		1919787	1					
ANR	1919849	PrimaryExpression	1		1919787	1					
ANR	1919850	CompoundStatement		15:54:347:347	1919787	1					
ANR	1919851	ReturnStatement	return NULL ;	1790:5:58243:58254	1919787	0	True				
ANR	1919852	Identifier	NULL		1919787	0					
ANR	1919853	Statement	ZEND_HASH_FOREACH_PTR	1792:3:58264:58284	1919787	2	True				
ANR	1919854	Statement	(	1792:24:58285:58285	1919787	3	True				
ANR	1919855	Statement	model	1792:25:58286:58290	1919787	4	True				
ANR	1919856	Statement	->	1792:30:58291:58292	1919787	5	True				
ANR	1919857	Statement	u	1792:32:58293:58293	1919787	6	True				
ANR	1919858	Statement	.	1792:33:58294:58294	1919787	7	True				
ANR	1919859	Statement	content	1792:34:58295:58301	1919787	8	True				
ANR	1919860	Statement	","	1792:41:58302:58302	1919787	9	True				
ANR	1919861	Statement	tmp	1792:43:58304:58306	1919787	10	True				
ANR	1919862	Statement	)	1792:46:58307:58307	1919787	11	True				
ANR	1919863	CompoundStatement		18:48:420:420	1919787	12					
ANR	1919864	ReturnStatement	return model_array_element ( tmp ) ;	1793:4:58315:58346	1919787	0	True				
ANR	1919865	CallExpression	model_array_element ( tmp )		1919787	0					
ANR	1919866	Callee	model_array_element		1919787	0					
ANR	1919867	Identifier	model_array_element		1919787	0					
ANR	1919868	ArgumentList	tmp		1919787	1					
ANR	1919869	Argument	tmp		1919787	0					
ANR	1919870	Identifier	tmp		1919787	0					
ANR	1919871	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1794:5:58353:58376	1919787	13	True				
ANR	1919872	CallExpression	ZEND_HASH_FOREACH_END ( )		1919787	0					
ANR	1919873	Callee	ZEND_HASH_FOREACH_END		1919787	0					
ANR	1919874	Identifier	ZEND_HASH_FOREACH_END		1919787	0					
ANR	1919875	ArgumentList			1919787	1					
ANR	1919876	Label	case XSD_CONTENT_GROUP :	1796:2:58384:58406	1919787	6	True				
ANR	1919877	Identifier	XSD_CONTENT_GROUP		1919787	0					
ANR	1919878	CompoundStatement		22:26:519:519	1919787	7					
ANR	1919879	ReturnStatement	return model_array_element ( model -> u . group -> model ) ;	1797:3:58413:58462	1919787	0	True				
ANR	1919880	CallExpression	model_array_element ( model -> u . group -> model )		1919787	0					
ANR	1919881	Callee	model_array_element		1919787	0					
ANR	1919882	Identifier	model_array_element		1919787	0					
ANR	1919883	ArgumentList	model -> u . group -> model		1919787	1					
ANR	1919884	Argument	model -> u . group -> model		1919787	0					
ANR	1919885	PtrMemberAccess	model -> u . group -> model		1919787	0					
ANR	1919886	MemberAccess	model -> u . group		1919787	0					
ANR	1919887	PtrMemberAccess	model -> u		1919787	0					
ANR	1919888	Identifier	model		1919787	0					
ANR	1919889	Identifier	u		1919787	1					
ANR	1919890	Identifier	group		1919787	1					
ANR	1919891	Identifier	model		1919787	1					
ANR	1919892	Label	default :	1799:2:58470:58477	1919787	8	True				
ANR	1919893	Identifier	default		1919787	0					
ANR	1919894	BreakStatement	break ;	1800:4:58483:58488	1919787	9	True				
ANR	1919895	ReturnStatement	return NULL ;	1802:1:58494:58505	1919787	1	True				
ANR	1919896	Identifier	NULL		1919787	0					
ANR	1919897	ReturnType	static sdlTypePtr		1919787	1					
ANR	1919898	Identifier	model_array_element		1919787	2					
ANR	1919899	ParameterList	sdlContentModelPtr model		1919787	3					
ANR	1919900	Parameter	sdlContentModelPtr model	1774:38:57862:57885	1919787	0	True				
ANR	1919901	ParameterType	sdlContentModelPtr		1919787	0					
ANR	1919902	Identifier	model		1919787	1					
ANR	1919903	CFGEntryNode	ENTRY		1919787		True				
ANR	1919904	CFGExitNode	EXIT		1919787		True				
ANR	1919905	Symbol	model -> u		1919787						
ANR	1919906	Symbol	NULL		1919787						
ANR	1919907	Symbol	model -> max_occurs		1919787						
ANR	1919908	Symbol	zend_hash_num_elements		1919787						
ANR	1919909	Symbol	* model		1919787						
ANR	1919910	Symbol	* model -> u		1919787						
ANR	1919911	Symbol	* * model		1919787						
ANR	1919912	Symbol	model_array_element		1919787						
ANR	1919913	Symbol	model -> u . content		1919787						
ANR	1919914	Symbol	* model -> u . group		1919787						
ANR	1919915	Symbol	model -> kind		1919787						
ANR	1919916	Symbol	model -> u . element		1919787						
ANR	1919917	Symbol	model -> u . group -> model		1919787						
ANR	1919918	Symbol	tmp		1919787						
ANR	1919919	Symbol	model		1919787						
ANR	1919920	Symbol	model -> u . group		1919787						
ANR	1919921	Function	to_xml_object	1805:0:58510:64315							
ANR	1919922	FunctionDef	"to_xml_object (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1919921	0					
ANR	1919923	CompoundStatement		1806:0:58604:64315	1919921	0					
ANR	1919924	IdentifierDeclStatement	xmlNodePtr xmlParam ;	1807:1:58607:58626	1919921	0	True				
ANR	1919925	IdentifierDecl	xmlParam		1919921	0					
ANR	1919926	IdentifierDeclType	xmlNodePtr		1919921	0					
ANR	1919927	Identifier	xmlParam		1919921	1					
ANR	1919928	IdentifierDeclStatement	HashTable * prop = NULL ;	1808:1:58629:58651	1919921	1	True				
ANR	1919929	IdentifierDecl	* prop = NULL		1919921	0					
ANR	1919930	IdentifierDeclType	HashTable *		1919921	0					
ANR	1919931	Identifier	prop		1919921	1					
ANR	1919932	AssignmentExpression	* prop = NULL		1919921	2		=			
ANR	1919933	Identifier	NULL		1919921	0					
ANR	1919934	Identifier	NULL		1919921	1					
ANR	1919935	IdentifierDeclStatement	sdlTypePtr sdlType = type -> sdl_type ;	1809:1:58654:58689	1919921	2	True				
ANR	1919936	IdentifierDecl	sdlType = type -> sdl_type		1919921	0					
ANR	1919937	IdentifierDeclType	sdlTypePtr		1919921	0					
ANR	1919938	Identifier	sdlType		1919921	1					
ANR	1919939	AssignmentExpression	sdlType = type -> sdl_type		1919921	2		=			
ANR	1919940	Identifier	sdlType		1919921	0					
ANR	1919941	PtrMemberAccess	type -> sdl_type		1919921	1					
ANR	1919942	Identifier	type		1919921	0					
ANR	1919943	Identifier	sdl_type		1919921	1					
ANR	1919944	IfStatement	if ( ! data || Z_TYPE_P ( data ) == IS_NULL )		1919921	3					
ANR	1919945	Condition	! data || Z_TYPE_P ( data ) == IS_NULL	1811:5:58697:58730	1919921	0	True				
ANR	1919946	OrExpression	! data || Z_TYPE_P ( data ) == IS_NULL		1919921	0		||			
ANR	1919947	UnaryOperationExpression	! data		1919921	0					
ANR	1919948	UnaryOperator	!		1919921	0					
ANR	1919949	Identifier	data		1919921	1					
ANR	1919950	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1919921	1		==			
ANR	1919951	CallExpression	Z_TYPE_P ( data )		1919921	0					
ANR	1919952	Callee	Z_TYPE_P		1919921	0					
ANR	1919953	Identifier	Z_TYPE_P		1919921	0					
ANR	1919954	ArgumentList	data		1919921	1					
ANR	1919955	Argument	data		1919921	0					
ANR	1919956	Identifier	data		1919921	0					
ANR	1919957	Identifier	IS_NULL		1919921	1					
ANR	1919958	CompoundStatement		6:41:128:128	1919921	1					
ANR	1919959	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1812:2:58737:58783	1919921	0	True				
ANR	1919960	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	0		=			
ANR	1919961	Identifier	xmlParam		1919921	0					
ANR	1919962	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	1					
ANR	1919963	Callee	xmlNewNode		1919921	0					
ANR	1919964	Identifier	xmlNewNode		1919921	0					
ANR	1919965	ArgumentList	NULL		1919921	1					
ANR	1919966	Argument	NULL		1919921	0					
ANR	1919967	Identifier	NULL		1919921	0					
ANR	1919968	Argument	"BAD_CAST ( ""BOGUS"" )"		1919921	1					
ANR	1919969	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1919921	0					
ANR	1919970	Callee	BAD_CAST		1919921	0					
ANR	1919971	Identifier	BAD_CAST		1919921	0					
ANR	1919972	ArgumentList	"""BOGUS"""		1919921	1					
ANR	1919973	Argument	"""BOGUS"""		1919921	0					
ANR	1919974	PrimaryExpression	"""BOGUS"""		1919921	0					
ANR	1919975	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1813:2:58787:58816	1919921	1	True				
ANR	1919976	CallExpression	"xmlAddChild ( parent , xmlParam )"		1919921	0					
ANR	1919977	Callee	xmlAddChild		1919921	0					
ANR	1919978	Identifier	xmlAddChild		1919921	0					
ANR	1919979	ArgumentList	parent		1919921	1					
ANR	1919980	Argument	parent		1919921	0					
ANR	1919981	Identifier	parent		1919921	0					
ANR	1919982	Argument	xmlParam		1919921	1					
ANR	1919983	Identifier	xmlParam		1919921	0					
ANR	1919984	IfStatement	if ( style == SOAP_ENCODED )		1919921	2					
ANR	1919985	Condition	style == SOAP_ENCODED	1814:6:58824:58844	1919921	0	True				
ANR	1919986	EqualityExpression	style == SOAP_ENCODED		1919921	0		==			
ANR	1919987	Identifier	style		1919921	0					
ANR	1919988	Identifier	SOAP_ENCODED		1919921	1					
ANR	1919989	CompoundStatement		9:29:242:242	1919921	1					
ANR	1919990	ExpressionStatement	set_xsi_nil ( xmlParam )	1815:3:58852:58873	1919921	0	True				
ANR	1919991	CallExpression	set_xsi_nil ( xmlParam )		1919921	0					
ANR	1919992	Callee	set_xsi_nil		1919921	0					
ANR	1919993	Identifier	set_xsi_nil		1919921	0					
ANR	1919994	ArgumentList	xmlParam		1919921	1					
ANR	1919995	Argument	xmlParam		1919921	0					
ANR	1919996	Identifier	xmlParam		1919921	0					
ANR	1919997	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	1816:3:58878:58909	1919921	1	True				
ANR	1919998	CallExpression	"set_ns_and_type ( xmlParam , type )"		1919921	0					
ANR	1919999	Callee	set_ns_and_type		1919921	0					
ANR	1920000	Identifier	set_ns_and_type		1919921	0					
ANR	1920001	ArgumentList	xmlParam		1919921	1					
ANR	1920002	Argument	xmlParam		1919921	0					
ANR	1920003	Identifier	xmlParam		1919921	0					
ANR	1920004	Argument	type		1919921	1					
ANR	1920005	Identifier	type		1919921	0					
ANR	1920006	ReturnStatement	return xmlParam ;	1818:2:58917:58932	1919921	3	True				
ANR	1920007	Identifier	xmlParam		1919921	0					
ANR	1920008	IfStatement	if ( Z_TYPE_P ( data ) == IS_OBJECT )		1919921	4					
ANR	1920009	Condition	Z_TYPE_P ( data ) == IS_OBJECT	1821:5:58943:58969	1919921	0	True				
ANR	1920010	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1919921	0		==			
ANR	1920011	CallExpression	Z_TYPE_P ( data )		1919921	0					
ANR	1920012	Callee	Z_TYPE_P		1919921	0					
ANR	1920013	Identifier	Z_TYPE_P		1919921	0					
ANR	1920014	ArgumentList	data		1919921	1					
ANR	1920015	Argument	data		1919921	0					
ANR	1920016	Identifier	data		1919921	0					
ANR	1920017	Identifier	IS_OBJECT		1919921	1					
ANR	1920018	CompoundStatement		16:34:367:367	1919921	1					
ANR	1920019	ExpressionStatement	prop = Z_OBJPROP_P ( data )	1822:2:58976:59000	1919921	0	True				
ANR	1920020	AssignmentExpression	prop = Z_OBJPROP_P ( data )		1919921	0		=			
ANR	1920021	Identifier	prop		1919921	0					
ANR	1920022	CallExpression	Z_OBJPROP_P ( data )		1919921	1					
ANR	1920023	Callee	Z_OBJPROP_P		1919921	0					
ANR	1920024	Identifier	Z_OBJPROP_P		1919921	0					
ANR	1920025	ArgumentList	data		1919921	1					
ANR	1920026	Argument	data		1919921	0					
ANR	1920027	Identifier	data		1919921	0					
ANR	1920028	ElseStatement	else		1919921	0					
ANR	1920029	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1919921	0					
ANR	1920030	Condition	Z_TYPE_P ( data ) == IS_ARRAY	1823:12:59014:59039	1919921	0	True				
ANR	1920031	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1919921	0		==			
ANR	1920032	CallExpression	Z_TYPE_P ( data )		1919921	0					
ANR	1920033	Callee	Z_TYPE_P		1919921	0					
ANR	1920034	Identifier	Z_TYPE_P		1919921	0					
ANR	1920035	ArgumentList	data		1919921	1					
ANR	1920036	Argument	data		1919921	0					
ANR	1920037	Identifier	data		1919921	0					
ANR	1920038	Identifier	IS_ARRAY		1919921	1					
ANR	1920039	CompoundStatement		18:40:437:437	1919921	1					
ANR	1920040	ExpressionStatement	prop = Z_ARRVAL_P ( data )	1824:2:59046:59069	1919921	0	True				
ANR	1920041	AssignmentExpression	prop = Z_ARRVAL_P ( data )		1919921	0		=			
ANR	1920042	Identifier	prop		1919921	0					
ANR	1920043	CallExpression	Z_ARRVAL_P ( data )		1919921	1					
ANR	1920044	Callee	Z_ARRVAL_P		1919921	0					
ANR	1920045	Identifier	Z_ARRVAL_P		1919921	0					
ANR	1920046	ArgumentList	data		1919921	1					
ANR	1920047	Argument	data		1919921	0					
ANR	1920048	Identifier	data		1919921	0					
ANR	1920049	IfStatement	if ( sdlType )		1919921	5					
ANR	1920050	Condition	sdlType	1827:5:59080:59086	1919921	0	True				
ANR	1920051	Identifier	sdlType		1919921	0					
ANR	1920052	CompoundStatement		22:14:484:484	1919921	1					
ANR	1920053	IfStatement	if ( sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details )		1919921	0					
ANR	1920054	Condition	sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details	1828:6:59097:59199	1919921	0	True				
ANR	1920055	AndExpression	sdlType -> kind == XSD_TYPEKIND_RESTRICTION && sdlType -> encode && type != & sdlType -> encode -> details		1919921	0		&&			
ANR	1920056	EqualityExpression	sdlType -> kind == XSD_TYPEKIND_RESTRICTION		1919921	0		==			
ANR	1920057	PtrMemberAccess	sdlType -> kind		1919921	0					
ANR	1920058	Identifier	sdlType		1919921	0					
ANR	1920059	Identifier	kind		1919921	1					
ANR	1920060	Identifier	XSD_TYPEKIND_RESTRICTION		1919921	1					
ANR	1920061	AndExpression	sdlType -> encode && type != & sdlType -> encode -> details		1919921	1		&&			
ANR	1920062	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920063	Identifier	sdlType		1919921	0					
ANR	1920064	Identifier	encode		1919921	1					
ANR	1920065	EqualityExpression	type != & sdlType -> encode -> details		1919921	1		!=			
ANR	1920066	Identifier	type		1919921	0					
ANR	1920067	UnaryOperationExpression	& sdlType -> encode -> details		1919921	1					
ANR	1920068	UnaryOperator	&		1919921	0					
ANR	1920069	PtrMemberAccess	sdlType -> encode -> details		1919921	1					
ANR	1920070	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920071	Identifier	sdlType		1919921	0					
ANR	1920072	Identifier	encode		1919921	1					
ANR	1920073	Identifier	details		1919921	1					
ANR	1920074	CompoundStatement		25:3:602:615	1919921	1					
ANR	1920075	IdentifierDeclStatement	encodePtr enc ;	1830:3:59207:59220	1919921	0	True				
ANR	1920076	IdentifierDecl	enc		1919921	0					
ANR	1920077	IdentifierDeclType	encodePtr		1919921	0					
ANR	1920078	Identifier	enc		1919921	1					
ANR	1920079	ExpressionStatement	enc = sdlType -> encode	1832:3:59226:59247	1919921	1	True				
ANR	1920080	AssignmentExpression	enc = sdlType -> encode		1919921	0		=			
ANR	1920081	Identifier	enc		1919921	0					
ANR	1920082	PtrMemberAccess	sdlType -> encode		1919921	1					
ANR	1920083	Identifier	sdlType		1919921	0					
ANR	1920084	Identifier	encode		1919921	1					
ANR	1920085	WhileStatement	while ( enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION )		1919921	2					
ANR	1920086	Condition	enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION	1833:10:59259:59475	1919921	0	True				
ANR	1920087	AndExpression	enc && enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	0		&&			
ANR	1920088	Identifier	enc		1919921	0					
ANR	1920089	AndExpression	enc -> details . sdl_type && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	1		&&			
ANR	1920090	MemberAccess	enc -> details . sdl_type		1919921	0					
ANR	1920091	PtrMemberAccess	enc -> details		1919921	0					
ANR	1920092	Identifier	enc		1919921	0					
ANR	1920093	Identifier	details		1919921	1					
ANR	1920094	Identifier	sdl_type		1919921	1					
ANR	1920095	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	1		&&			
ANR	1920096	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE		1919921	0		!=			
ANR	1920097	PtrMemberAccess	enc -> details . sdl_type -> kind		1919921	0					
ANR	1920098	MemberAccess	enc -> details . sdl_type		1919921	0					
ANR	1920099	PtrMemberAccess	enc -> details		1919921	0					
ANR	1920100	Identifier	enc		1919921	0					
ANR	1920101	Identifier	details		1919921	1					
ANR	1920102	Identifier	sdl_type		1919921	1					
ANR	1920103	Identifier	kind		1919921	1					
ANR	1920104	Identifier	XSD_TYPEKIND_SIMPLE		1919921	1					
ANR	1920105	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	1		&&			
ANR	1920106	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST		1919921	0		!=			
ANR	1920107	PtrMemberAccess	enc -> details . sdl_type -> kind		1919921	0					
ANR	1920108	MemberAccess	enc -> details . sdl_type		1919921	0					
ANR	1920109	PtrMemberAccess	enc -> details		1919921	0					
ANR	1920110	Identifier	enc		1919921	0					
ANR	1920111	Identifier	details		1919921	1					
ANR	1920112	Identifier	sdl_type		1919921	1					
ANR	1920113	Identifier	kind		1919921	1					
ANR	1920114	Identifier	XSD_TYPEKIND_LIST		1919921	1					
ANR	1920115	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	1		!=			
ANR	1920116	PtrMemberAccess	enc -> details . sdl_type -> kind		1919921	0					
ANR	1920117	MemberAccess	enc -> details . sdl_type		1919921	0					
ANR	1920118	PtrMemberAccess	enc -> details		1919921	0					
ANR	1920119	Identifier	enc		1919921	0					
ANR	1920120	Identifier	details		1919921	1					
ANR	1920121	Identifier	sdl_type		1919921	1					
ANR	1920122	Identifier	kind		1919921	1					
ANR	1920123	Identifier	XSD_TYPEKIND_UNION		1919921	1					
ANR	1920124	CompoundStatement		31:61:873:873	1919921	1					
ANR	1920125	ExpressionStatement	enc = enc -> details . sdl_type -> encode	1837:4:59484:59519	1919921	0	True				
ANR	1920126	AssignmentExpression	enc = enc -> details . sdl_type -> encode		1919921	0		=			
ANR	1920127	Identifier	enc		1919921	0					
ANR	1920128	PtrMemberAccess	enc -> details . sdl_type -> encode		1919921	1					
ANR	1920129	MemberAccess	enc -> details . sdl_type		1919921	0					
ANR	1920130	PtrMemberAccess	enc -> details		1919921	0					
ANR	1920131	Identifier	enc		1919921	0					
ANR	1920132	Identifier	details		1919921	1					
ANR	1920133	Identifier	sdl_type		1919921	1					
ANR	1920134	Identifier	encode		1919921	1					
ANR	1920135	IfStatement	if ( enc )		1919921	3					
ANR	1920136	Condition	enc	1839:7:59533:59535	1919921	0	True				
ANR	1920137	Identifier	enc		1919921	0					
ANR	1920138	CompoundStatement		36:4:952:997	1919921	1					
ANR	1920139	IdentifierDeclStatement	zval rv ;	1840:4:59544:59551	1919921	0	True				
ANR	1920140	IdentifierDecl	rv		1919921	0					
ANR	1920141	IdentifierDeclType	zval		1919921	0					
ANR	1920142	Identifier	rv		1919921	1					
ANR	1920143	IdentifierDeclStatement	"zval * tmp = get_zval_property ( data , ""_"" , & rv ) ;"	1841:4:59557:59602	1919921	1	True				
ANR	1920144	IdentifierDecl	"* tmp = get_zval_property ( data , ""_"" , & rv )"		1919921	0					
ANR	1920145	IdentifierDeclType	zval *		1919921	0					
ANR	1920146	Identifier	tmp		1919921	1					
ANR	1920147	AssignmentExpression	"* tmp = get_zval_property ( data , ""_"" , & rv )"		1919921	2		=			
ANR	1920148	Identifier	tmp		1919921	0					
ANR	1920149	CallExpression	"get_zval_property ( data , ""_"" , & rv )"		1919921	1					
ANR	1920150	Callee	get_zval_property		1919921	0					
ANR	1920151	Identifier	get_zval_property		1919921	0					
ANR	1920152	ArgumentList	data		1919921	1					
ANR	1920153	Argument	data		1919921	0					
ANR	1920154	Identifier	data		1919921	0					
ANR	1920155	Argument	"""_"""		1919921	1					
ANR	1920156	PrimaryExpression	"""_"""		1919921	0					
ANR	1920157	Argument	& rv		1919921	2					
ANR	1920158	UnaryOperationExpression	& rv		1919921	0					
ANR	1920159	UnaryOperator	&		1919921	0					
ANR	1920160	Identifier	rv		1919921	1					
ANR	1920161	IfStatement	if ( tmp )		1919921	2					
ANR	1920162	Condition	tmp	1842:8:59612:59614	1919921	0	True				
ANR	1920163	Identifier	tmp		1919921	0					
ANR	1920164	CompoundStatement		37:13:1012:1012	1919921	1					
ANR	1920165	ExpressionStatement	"xmlParam = master_to_xml ( enc , tmp , style , parent )"	1843:5:59624:59673	1919921	0	True				
ANR	1920166	AssignmentExpression	"xmlParam = master_to_xml ( enc , tmp , style , parent )"		1919921	0		=			
ANR	1920167	Identifier	xmlParam		1919921	0					
ANR	1920168	CallExpression	"master_to_xml ( enc , tmp , style , parent )"		1919921	1					
ANR	1920169	Callee	master_to_xml		1919921	0					
ANR	1920170	Identifier	master_to_xml		1919921	0					
ANR	1920171	ArgumentList	enc		1919921	1					
ANR	1920172	Argument	enc		1919921	0					
ANR	1920173	Identifier	enc		1919921	0					
ANR	1920174	Argument	tmp		1919921	1					
ANR	1920175	Identifier	tmp		1919921	0					
ANR	1920176	Argument	style		1919921	2					
ANR	1920177	Identifier	style		1919921	0					
ANR	1920178	Argument	parent		1919921	3					
ANR	1920179	Identifier	parent		1919921	0					
ANR	1920180	ElseStatement	else		1919921	0					
ANR	1920181	IfStatement	if ( prop == NULL )		1919921	0					
ANR	1920182	Condition	prop == NULL	1844:15:59690:59701	1919921	0	True				
ANR	1920183	EqualityExpression	prop == NULL		1919921	0		==			
ANR	1920184	Identifier	prop		1919921	0					
ANR	1920185	Identifier	NULL		1919921	1					
ANR	1920186	CompoundStatement		39:29:1099:1099	1919921	1					
ANR	1920187	ExpressionStatement	"xmlParam = master_to_xml ( enc , data , style , parent )"	1845:5:59711:59761	1919921	0	True				
ANR	1920188	AssignmentExpression	"xmlParam = master_to_xml ( enc , data , style , parent )"		1919921	0		=			
ANR	1920189	Identifier	xmlParam		1919921	0					
ANR	1920190	CallExpression	"master_to_xml ( enc , data , style , parent )"		1919921	1					
ANR	1920191	Callee	master_to_xml		1919921	0					
ANR	1920192	Identifier	master_to_xml		1919921	0					
ANR	1920193	ArgumentList	enc		1919921	1					
ANR	1920194	Argument	enc		1919921	0					
ANR	1920195	Identifier	enc		1919921	0					
ANR	1920196	Argument	data		1919921	1					
ANR	1920197	Identifier	data		1919921	0					
ANR	1920198	Argument	style		1919921	2					
ANR	1920199	Identifier	style		1919921	0					
ANR	1920200	Argument	parent		1919921	3					
ANR	1920201	Identifier	parent		1919921	0					
ANR	1920202	ElseStatement	else		1919921	0					
ANR	1920203	CompoundStatement		41:11:1169:1169	1919921	0					
ANR	1920204	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1847:5:59781:59827	1919921	0	True				
ANR	1920205	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	0		=			
ANR	1920206	Identifier	xmlParam		1919921	0					
ANR	1920207	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	1					
ANR	1920208	Callee	xmlNewNode		1919921	0					
ANR	1920209	Identifier	xmlNewNode		1919921	0					
ANR	1920210	ArgumentList	NULL		1919921	1					
ANR	1920211	Argument	NULL		1919921	0					
ANR	1920212	Identifier	NULL		1919921	0					
ANR	1920213	Argument	"BAD_CAST ( ""BOGUS"" )"		1919921	1					
ANR	1920214	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1919921	0					
ANR	1920215	Callee	BAD_CAST		1919921	0					
ANR	1920216	Identifier	BAD_CAST		1919921	0					
ANR	1920217	ArgumentList	"""BOGUS"""		1919921	1					
ANR	1920218	Argument	"""BOGUS"""		1919921	0					
ANR	1920219	PrimaryExpression	"""BOGUS"""		1919921	0					
ANR	1920220	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1848:5:59834:59863	1919921	1	True				
ANR	1920221	CallExpression	"xmlAddChild ( parent , xmlParam )"		1919921	0					
ANR	1920222	Callee	xmlAddChild		1919921	0					
ANR	1920223	Identifier	xmlAddChild		1919921	0					
ANR	1920224	ArgumentList	parent		1919921	1					
ANR	1920225	Argument	parent		1919921	0					
ANR	1920226	Identifier	parent		1919921	0					
ANR	1920227	Argument	xmlParam		1919921	1					
ANR	1920228	Identifier	xmlParam		1919921	0					
ANR	1920229	ElseStatement	else		1919921	0					
ANR	1920230	CompoundStatement		45:10:1276:1276	1919921	0					
ANR	1920231	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1851:4:59887:59933	1919921	0	True				
ANR	1920232	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	0		=			
ANR	1920233	Identifier	xmlParam		1919921	0					
ANR	1920234	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	1					
ANR	1920235	Callee	xmlNewNode		1919921	0					
ANR	1920236	Identifier	xmlNewNode		1919921	0					
ANR	1920237	ArgumentList	NULL		1919921	1					
ANR	1920238	Argument	NULL		1919921	0					
ANR	1920239	Identifier	NULL		1919921	0					
ANR	1920240	Argument	"BAD_CAST ( ""BOGUS"" )"		1919921	1					
ANR	1920241	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1919921	0					
ANR	1920242	Callee	BAD_CAST		1919921	0					
ANR	1920243	Identifier	BAD_CAST		1919921	0					
ANR	1920244	ArgumentList	"""BOGUS"""		1919921	1					
ANR	1920245	Argument	"""BOGUS"""		1919921	0					
ANR	1920246	PrimaryExpression	"""BOGUS"""		1919921	0					
ANR	1920247	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1852:4:59939:59968	1919921	1	True				
ANR	1920248	CallExpression	"xmlAddChild ( parent , xmlParam )"		1919921	0					
ANR	1920249	Callee	xmlAddChild		1919921	0					
ANR	1920250	Identifier	xmlAddChild		1919921	0					
ANR	1920251	ArgumentList	parent		1919921	1					
ANR	1920252	Argument	parent		1919921	0					
ANR	1920253	Identifier	parent		1919921	0					
ANR	1920254	Argument	xmlParam		1919921	1					
ANR	1920255	Identifier	xmlParam		1919921	0					
ANR	1920256	ElseStatement	else		1919921	0					
ANR	1920257	IfStatement	if ( sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details )		1919921	0					
ANR	1920258	Condition	sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details	1854:13:59988:60095	1919921	0	True				
ANR	1920259	AndExpression	sdlType -> kind == XSD_TYPEKIND_EXTENSION && sdlType -> encode && type != & sdlType -> encode -> details		1919921	0		&&			
ANR	1920260	EqualityExpression	sdlType -> kind == XSD_TYPEKIND_EXTENSION		1919921	0		==			
ANR	1920261	PtrMemberAccess	sdlType -> kind		1919921	0					
ANR	1920262	Identifier	sdlType		1919921	0					
ANR	1920263	Identifier	kind		1919921	1					
ANR	1920264	Identifier	XSD_TYPEKIND_EXTENSION		1919921	1					
ANR	1920265	AndExpression	sdlType -> encode && type != & sdlType -> encode -> details		1919921	1		&&			
ANR	1920266	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920267	Identifier	sdlType		1919921	0					
ANR	1920268	Identifier	encode		1919921	1					
ANR	1920269	EqualityExpression	type != & sdlType -> encode -> details		1919921	1		!=			
ANR	1920270	Identifier	type		1919921	0					
ANR	1920271	UnaryOperationExpression	& sdlType -> encode -> details		1919921	1					
ANR	1920272	UnaryOperator	&		1919921	0					
ANR	1920273	PtrMemberAccess	sdlType -> encode -> details		1919921	1					
ANR	1920274	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920275	Identifier	sdlType		1919921	0					
ANR	1920276	Identifier	encode		1919921	1					
ANR	1920277	Identifier	details		1919921	1					
ANR	1920278	CompoundStatement		50:67:1493:1493	1919921	1					
ANR	1920279	IfStatement	if ( sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION )		1919921	0					
ANR	1920280	Condition	sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION	1856:7:60107:60355	1919921	0	True				
ANR	1920281	AndExpression	sdlType -> encode -> details . sdl_type && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	0		&&			
ANR	1920282	MemberAccess	sdlType -> encode -> details . sdl_type		1919921	0					
ANR	1920283	PtrMemberAccess	sdlType -> encode -> details		1919921	0					
ANR	1920284	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920285	Identifier	sdlType		1919921	0					
ANR	1920286	Identifier	encode		1919921	1					
ANR	1920287	Identifier	details		1919921	1					
ANR	1920288	Identifier	sdl_type		1919921	1					
ANR	1920289	AndExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	1		&&			
ANR	1920290	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE		1919921	0		!=			
ANR	1920291	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1919921	0					
ANR	1920292	MemberAccess	sdlType -> encode -> details . sdl_type		1919921	0					
ANR	1920293	PtrMemberAccess	sdlType -> encode -> details		1919921	0					
ANR	1920294	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920295	Identifier	sdlType		1919921	0					
ANR	1920296	Identifier	encode		1919921	1					
ANR	1920297	Identifier	details		1919921	1					
ANR	1920298	Identifier	sdl_type		1919921	1					
ANR	1920299	Identifier	kind		1919921	1					
ANR	1920300	Identifier	XSD_TYPEKIND_SIMPLE		1919921	1					
ANR	1920301	AndExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	1		&&			
ANR	1920302	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_LIST		1919921	0		!=			
ANR	1920303	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1919921	0					
ANR	1920304	MemberAccess	sdlType -> encode -> details . sdl_type		1919921	0					
ANR	1920305	PtrMemberAccess	sdlType -> encode -> details		1919921	0					
ANR	1920306	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920307	Identifier	sdlType		1919921	0					
ANR	1920308	Identifier	encode		1919921	1					
ANR	1920309	Identifier	details		1919921	1					
ANR	1920310	Identifier	sdl_type		1919921	1					
ANR	1920311	Identifier	kind		1919921	1					
ANR	1920312	Identifier	XSD_TYPEKIND_LIST		1919921	1					
ANR	1920313	EqualityExpression	sdlType -> encode -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		1919921	1		!=			
ANR	1920314	PtrMemberAccess	sdlType -> encode -> details . sdl_type -> kind		1919921	0					
ANR	1920315	MemberAccess	sdlType -> encode -> details . sdl_type		1919921	0					
ANR	1920316	PtrMemberAccess	sdlType -> encode -> details		1919921	0					
ANR	1920317	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920318	Identifier	sdlType		1919921	0					
ANR	1920319	Identifier	encode		1919921	1					
ANR	1920320	Identifier	details		1919921	1					
ANR	1920321	Identifier	sdl_type		1919921	1					
ANR	1920322	Identifier	kind		1919921	1					
ANR	1920323	Identifier	XSD_TYPEKIND_UNION		1919921	1					
ANR	1920324	CompoundStatement		54:70:1753:1753	1919921	1					
ANR	1920325	IfStatement	if ( prop )		1919921	0					
ANR	1920326	Condition	prop	1861:8:60369:60372	1919921	0	True				
ANR	1920327	Identifier	prop		1919921	0					
ANR	1920328	ExpressionStatement	ZEND_HASH_INC_APPLY_COUNT ( prop )	1861:14:60375:60406	1919921	1	True				
ANR	1920329	CallExpression	ZEND_HASH_INC_APPLY_COUNT ( prop )		1919921	0					
ANR	1920330	Callee	ZEND_HASH_INC_APPLY_COUNT		1919921	0					
ANR	1920331	Identifier	ZEND_HASH_INC_APPLY_COUNT		1919921	0					
ANR	1920332	ArgumentList	prop		1919921	1					
ANR	1920333	Argument	prop		1919921	0					
ANR	1920334	Identifier	prop		1919921	0					
ANR	1920335	ExpressionStatement	"xmlParam = master_to_xml ( sdlType -> encode , data , style , parent )"	1862:4:60412:60474	1919921	1	True				
ANR	1920336	AssignmentExpression	"xmlParam = master_to_xml ( sdlType -> encode , data , style , parent )"		1919921	0		=			
ANR	1920337	Identifier	xmlParam		1919921	0					
ANR	1920338	CallExpression	"master_to_xml ( sdlType -> encode , data , style , parent )"		1919921	1					
ANR	1920339	Callee	master_to_xml		1919921	0					
ANR	1920340	Identifier	master_to_xml		1919921	0					
ANR	1920341	ArgumentList	sdlType -> encode		1919921	1					
ANR	1920342	Argument	sdlType -> encode		1919921	0					
ANR	1920343	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920344	Identifier	sdlType		1919921	0					
ANR	1920345	Identifier	encode		1919921	1					
ANR	1920346	Argument	data		1919921	1					
ANR	1920347	Identifier	data		1919921	0					
ANR	1920348	Argument	style		1919921	2					
ANR	1920349	Identifier	style		1919921	0					
ANR	1920350	Argument	parent		1919921	3					
ANR	1920351	Identifier	parent		1919921	0					
ANR	1920352	IfStatement	if ( prop )		1919921	2					
ANR	1920353	Condition	prop	1863:8:60484:60487	1919921	0	True				
ANR	1920354	Identifier	prop		1919921	0					
ANR	1920355	ExpressionStatement	ZEND_HASH_DEC_APPLY_COUNT ( prop )	1863:14:60490:60521	1919921	1	True				
ANR	1920356	CallExpression	ZEND_HASH_DEC_APPLY_COUNT ( prop )		1919921	0					
ANR	1920357	Callee	ZEND_HASH_DEC_APPLY_COUNT		1919921	0					
ANR	1920358	Identifier	ZEND_HASH_DEC_APPLY_COUNT		1919921	0					
ANR	1920359	ArgumentList	prop		1919921	1					
ANR	1920360	Argument	prop		1919921	0					
ANR	1920361	Identifier	prop		1919921	0					
ANR	1920362	ElseStatement	else		1919921	0					
ANR	1920363	CompoundStatement		61:4:1947:1992	1919921	0					
ANR	1920364	IdentifierDeclStatement	zval rv ;	1865:4:60539:60546	1919921	0	True				
ANR	1920365	IdentifierDecl	rv		1919921	0					
ANR	1920366	IdentifierDeclType	zval		1919921	0					
ANR	1920367	Identifier	rv		1919921	1					
ANR	1920368	IdentifierDeclStatement	"zval * tmp = get_zval_property ( data , ""_"" , & rv ) ;"	1866:4:60552:60597	1919921	1	True				
ANR	1920369	IdentifierDecl	"* tmp = get_zval_property ( data , ""_"" , & rv )"		1919921	0					
ANR	1920370	IdentifierDeclType	zval *		1919921	0					
ANR	1920371	Identifier	tmp		1919921	1					
ANR	1920372	AssignmentExpression	"* tmp = get_zval_property ( data , ""_"" , & rv )"		1919921	2		=			
ANR	1920373	Identifier	tmp		1919921	0					
ANR	1920374	CallExpression	"get_zval_property ( data , ""_"" , & rv )"		1919921	1					
ANR	1920375	Callee	get_zval_property		1919921	0					
ANR	1920376	Identifier	get_zval_property		1919921	0					
ANR	1920377	ArgumentList	data		1919921	1					
ANR	1920378	Argument	data		1919921	0					
ANR	1920379	Identifier	data		1919921	0					
ANR	1920380	Argument	"""_"""		1919921	1					
ANR	1920381	PrimaryExpression	"""_"""		1919921	0					
ANR	1920382	Argument	& rv		1919921	2					
ANR	1920383	UnaryOperationExpression	& rv		1919921	0					
ANR	1920384	UnaryOperator	&		1919921	0					
ANR	1920385	Identifier	rv		1919921	1					
ANR	1920386	IfStatement	if ( tmp )		1919921	2					
ANR	1920387	Condition	tmp	1868:8:60608:60610	1919921	0	True				
ANR	1920388	Identifier	tmp		1919921	0					
ANR	1920389	CompoundStatement		63:13:2008:2008	1919921	1					
ANR	1920390	ExpressionStatement	"xmlParam = master_to_xml ( sdlType -> encode , tmp , style , parent )"	1869:5:60620:60681	1919921	0	True				
ANR	1920391	AssignmentExpression	"xmlParam = master_to_xml ( sdlType -> encode , tmp , style , parent )"		1919921	0		=			
ANR	1920392	Identifier	xmlParam		1919921	0					
ANR	1920393	CallExpression	"master_to_xml ( sdlType -> encode , tmp , style , parent )"		1919921	1					
ANR	1920394	Callee	master_to_xml		1919921	0					
ANR	1920395	Identifier	master_to_xml		1919921	0					
ANR	1920396	ArgumentList	sdlType -> encode		1919921	1					
ANR	1920397	Argument	sdlType -> encode		1919921	0					
ANR	1920398	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920399	Identifier	sdlType		1919921	0					
ANR	1920400	Identifier	encode		1919921	1					
ANR	1920401	Argument	tmp		1919921	1					
ANR	1920402	Identifier	tmp		1919921	0					
ANR	1920403	Argument	style		1919921	2					
ANR	1920404	Identifier	style		1919921	0					
ANR	1920405	Argument	parent		1919921	3					
ANR	1920406	Identifier	parent		1919921	0					
ANR	1920407	ElseStatement	else		1919921	0					
ANR	1920408	IfStatement	if ( prop == NULL )		1919921	0					
ANR	1920409	Condition	prop == NULL	1870:15:60698:60709	1919921	0	True				
ANR	1920410	EqualityExpression	prop == NULL		1919921	0		==			
ANR	1920411	Identifier	prop		1919921	0					
ANR	1920412	Identifier	NULL		1919921	1					
ANR	1920413	CompoundStatement		65:29:2107:2107	1919921	1					
ANR	1920414	ExpressionStatement	"xmlParam = master_to_xml ( sdlType -> encode , data , style , parent )"	1871:5:60719:60781	1919921	0	True				
ANR	1920415	AssignmentExpression	"xmlParam = master_to_xml ( sdlType -> encode , data , style , parent )"		1919921	0		=			
ANR	1920416	Identifier	xmlParam		1919921	0					
ANR	1920417	CallExpression	"master_to_xml ( sdlType -> encode , data , style , parent )"		1919921	1					
ANR	1920418	Callee	master_to_xml		1919921	0					
ANR	1920419	Identifier	master_to_xml		1919921	0					
ANR	1920420	ArgumentList	sdlType -> encode		1919921	1					
ANR	1920421	Argument	sdlType -> encode		1919921	0					
ANR	1920422	PtrMemberAccess	sdlType -> encode		1919921	0					
ANR	1920423	Identifier	sdlType		1919921	0					
ANR	1920424	Identifier	encode		1919921	1					
ANR	1920425	Argument	data		1919921	1					
ANR	1920426	Identifier	data		1919921	0					
ANR	1920427	Argument	style		1919921	2					
ANR	1920428	Identifier	style		1919921	0					
ANR	1920429	Argument	parent		1919921	3					
ANR	1920430	Identifier	parent		1919921	0					
ANR	1920431	ElseStatement	else		1919921	0					
ANR	1920432	CompoundStatement		67:11:2189:2189	1919921	0					
ANR	1920433	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1873:5:60801:60847	1919921	0	True				
ANR	1920434	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	0		=			
ANR	1920435	Identifier	xmlParam		1919921	0					
ANR	1920436	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	1					
ANR	1920437	Callee	xmlNewNode		1919921	0					
ANR	1920438	Identifier	xmlNewNode		1919921	0					
ANR	1920439	ArgumentList	NULL		1919921	1					
ANR	1920440	Argument	NULL		1919921	0					
ANR	1920441	Identifier	NULL		1919921	0					
ANR	1920442	Argument	"BAD_CAST ( ""BOGUS"" )"		1919921	1					
ANR	1920443	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1919921	0					
ANR	1920444	Callee	BAD_CAST		1919921	0					
ANR	1920445	Identifier	BAD_CAST		1919921	0					
ANR	1920446	ArgumentList	"""BOGUS"""		1919921	1					
ANR	1920447	Argument	"""BOGUS"""		1919921	0					
ANR	1920448	PrimaryExpression	"""BOGUS"""		1919921	0					
ANR	1920449	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1874:5:60854:60883	1919921	1	True				
ANR	1920450	CallExpression	"xmlAddChild ( parent , xmlParam )"		1919921	0					
ANR	1920451	Callee	xmlAddChild		1919921	0					
ANR	1920452	Identifier	xmlAddChild		1919921	0					
ANR	1920453	ArgumentList	parent		1919921	1					
ANR	1920454	Argument	parent		1919921	0					
ANR	1920455	Identifier	parent		1919921	0					
ANR	1920456	Argument	xmlParam		1919921	1					
ANR	1920457	Identifier	xmlParam		1919921	0					
ANR	1920458	ElseStatement	else		1919921	0					
ANR	1920459	CompoundStatement		72:9:2300:2300	1919921	0					
ANR	1920460	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1878:3:60910:60956	1919921	0	True				
ANR	1920461	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	0		=			
ANR	1920462	Identifier	xmlParam		1919921	0					
ANR	1920463	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	1					
ANR	1920464	Callee	xmlNewNode		1919921	0					
ANR	1920465	Identifier	xmlNewNode		1919921	0					
ANR	1920466	ArgumentList	NULL		1919921	1					
ANR	1920467	Argument	NULL		1919921	0					
ANR	1920468	Identifier	NULL		1919921	0					
ANR	1920469	Argument	"BAD_CAST ( ""BOGUS"" )"		1919921	1					
ANR	1920470	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1919921	0					
ANR	1920471	Callee	BAD_CAST		1919921	0					
ANR	1920472	Identifier	BAD_CAST		1919921	0					
ANR	1920473	ArgumentList	"""BOGUS"""		1919921	1					
ANR	1920474	Argument	"""BOGUS"""		1919921	0					
ANR	1920475	PrimaryExpression	"""BOGUS"""		1919921	0					
ANR	1920476	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1879:3:60961:60990	1919921	1	True				
ANR	1920477	CallExpression	"xmlAddChild ( parent , xmlParam )"		1919921	0					
ANR	1920478	Callee	xmlAddChild		1919921	0					
ANR	1920479	Identifier	xmlAddChild		1919921	0					
ANR	1920480	ArgumentList	parent		1919921	1					
ANR	1920481	Argument	parent		1919921	0					
ANR	1920482	Identifier	parent		1919921	0					
ANR	1920483	Argument	xmlParam		1919921	1					
ANR	1920484	Identifier	xmlParam		1919921	0					
ANR	1920485	IfStatement	"if ( soap_check_zval_ref ( data , xmlParam ) )"		1919921	1					
ANR	1920486	Condition	"soap_check_zval_ref ( data , xmlParam )"	1882:6:61003:61037	1919921	0	True				
ANR	1920487	CallExpression	"soap_check_zval_ref ( data , xmlParam )"		1919921	0					
ANR	1920488	Callee	soap_check_zval_ref		1919921	0					
ANR	1920489	Identifier	soap_check_zval_ref		1919921	0					
ANR	1920490	ArgumentList	data		1919921	1					
ANR	1920491	Argument	data		1919921	0					
ANR	1920492	Identifier	data		1919921	0					
ANR	1920493	Argument	xmlParam		1919921	1					
ANR	1920494	Identifier	xmlParam		1919921	0					
ANR	1920495	CompoundStatement		77:43:2435:2435	1919921	1					
ANR	1920496	ReturnStatement	return xmlParam ;	1883:3:61045:61060	1919921	0	True				
ANR	1920497	Identifier	xmlParam		1919921	0					
ANR	1920498	IfStatement	if ( prop != NULL )		1919921	2					
ANR	1920499	Condition	prop != NULL	1885:6:61072:61083	1919921	0	True				
ANR	1920500	EqualityExpression	prop != NULL		1919921	0		!=			
ANR	1920501	Identifier	prop		1919921	0					
ANR	1920502	Identifier	NULL		1919921	1					
ANR	1920503	CompoundStatement		81:3:2486:2505	1919921	1					
ANR	1920504	IdentifierDeclStatement	sdlTypePtr array_el ;	1886:3:61091:61110	1919921	0	True				
ANR	1920505	IdentifierDecl	array_el		1919921	0					
ANR	1920506	IdentifierDeclType	sdlTypePtr		1919921	0					
ANR	1920507	Identifier	array_el		1919921	1					
ANR	1920508	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL )		1919921	1					
ANR	1920509	Condition	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL	1888:7:61120:61311	1919921	0	True				
ANR	1920510	AndExpression	Z_TYPE_P ( data ) == IS_ARRAY && ! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1919921	0		&&			
ANR	1920511	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1919921	0		==			
ANR	1920512	CallExpression	Z_TYPE_P ( data )		1919921	0					
ANR	1920513	Callee	Z_TYPE_P		1919921	0					
ANR	1920514	Identifier	Z_TYPE_P		1919921	0					
ANR	1920515	ArgumentList	data		1919921	1					
ANR	1920516	Argument	data		1919921	0					
ANR	1920517	Identifier	data		1919921	0					
ANR	1920518	Identifier	IS_ARRAY		1919921	1					
ANR	1920519	AndExpression	! is_map ( data ) && sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1919921	1		&&			
ANR	1920520	UnaryOperationExpression	! is_map ( data )		1919921	0					
ANR	1920521	UnaryOperator	!		1919921	0					
ANR	1920522	CallExpression	is_map ( data )		1919921	1					
ANR	1920523	Callee	is_map		1919921	0					
ANR	1920524	Identifier	is_map		1919921	0					
ANR	1920525	ArgumentList	data		1919921	1					
ANR	1920526	Argument	data		1919921	0					
ANR	1920527	Identifier	data		1919921	0					
ANR	1920528	AndExpression	sdlType -> attributes == NULL && sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1919921	1		&&			
ANR	1920529	EqualityExpression	sdlType -> attributes == NULL		1919921	0		==			
ANR	1920530	PtrMemberAccess	sdlType -> attributes		1919921	0					
ANR	1920531	Identifier	sdlType		1919921	0					
ANR	1920532	Identifier	attributes		1919921	1					
ANR	1920533	Identifier	NULL		1919921	1					
ANR	1920534	AndExpression	sdlType -> model != NULL && ( array_el = model_array_element ( sdlType -> model ) ) != NULL		1919921	1		&&			
ANR	1920535	EqualityExpression	sdlType -> model != NULL		1919921	0		!=			
ANR	1920536	PtrMemberAccess	sdlType -> model		1919921	0					
ANR	1920537	Identifier	sdlType		1919921	0					
ANR	1920538	Identifier	model		1919921	1					
ANR	1920539	Identifier	NULL		1919921	1					
ANR	1920540	EqualityExpression	( array_el = model_array_element ( sdlType -> model ) ) != NULL		1919921	1		!=			
ANR	1920541	AssignmentExpression	array_el = model_array_element ( sdlType -> model )		1919921	0		=			
ANR	1920542	Identifier	array_el		1919921	0					
ANR	1920543	CallExpression	model_array_element ( sdlType -> model )		1919921	1					
ANR	1920544	Callee	model_array_element		1919921	0					
ANR	1920545	Identifier	model_array_element		1919921	0					
ANR	1920546	ArgumentList	sdlType -> model		1919921	1					
ANR	1920547	Argument	sdlType -> model		1919921	0					
ANR	1920548	PtrMemberAccess	sdlType -> model		1919921	0					
ANR	1920549	Identifier	sdlType		1919921	0					
ANR	1920550	Identifier	model		1919921	1					
ANR	1920551	Identifier	NULL		1919921	1					
ANR	1920552	CompoundStatement		88:4:2715:2724	1919921	1					
ANR	1920553	IdentifierDeclStatement	zval * val ;	1893:4:61320:61329	1919921	0	True				
ANR	1920554	IdentifierDecl	* val		1919921	0					
ANR	1920555	IdentifierDeclType	zval *		1919921	0					
ANR	1920556	Identifier	val		1919921	1					
ANR	1920557	Statement	ZEND_HASH_FOREACH_VAL	1895:4:61336:61356	1919921	1	True				
ANR	1920558	Statement	(	1895:25:61357:61357	1919921	2	True				
ANR	1920559	Statement	prop	1895:26:61358:61361	1919921	3	True				
ANR	1920560	Statement	","	1895:30:61362:61362	1919921	4	True				
ANR	1920561	Statement	val	1895:32:61364:61366	1919921	5	True				
ANR	1920562	Statement	)	1895:35:61367:61367	1919921	6	True				
ANR	1920563	CompoundStatement		91:5:2771:2790	1919921	7					
ANR	1920564	IdentifierDeclStatement	xmlNodePtr property ;	1896:5:61376:61395	1919921	0	True				
ANR	1920565	IdentifierDecl	property		1919921	0					
ANR	1920566	IdentifierDeclType	xmlNodePtr		1919921	0					
ANR	1920567	Identifier	property		1919921	1					
ANR	1920568	IfStatement	if ( Z_TYPE_P ( val ) == IS_NULL && array_el -> nillable )		1919921	1					
ANR	1920569	Condition	Z_TYPE_P ( val ) == IS_NULL && array_el -> nillable	1897:9:61406:61451	1919921	0	True				
ANR	1920570	AndExpression	Z_TYPE_P ( val ) == IS_NULL && array_el -> nillable		1919921	0		&&			
ANR	1920571	EqualityExpression	Z_TYPE_P ( val ) == IS_NULL		1919921	0		==			
ANR	1920572	CallExpression	Z_TYPE_P ( val )		1919921	0					
ANR	1920573	Callee	Z_TYPE_P		1919921	0					
ANR	1920574	Identifier	Z_TYPE_P		1919921	0					
ANR	1920575	ArgumentList	val		1919921	1					
ANR	1920576	Argument	val		1919921	0					
ANR	1920577	Identifier	val		1919921	0					
ANR	1920578	Identifier	IS_NULL		1919921	1					
ANR	1920579	PtrMemberAccess	array_el -> nillable		1919921	1					
ANR	1920580	Identifier	array_el		1919921	0					
ANR	1920581	Identifier	nillable		1919921	1					
ANR	1920582	CompoundStatement		92:57:2849:2849	1919921	1					
ANR	1920583	ExpressionStatement	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1898:6:61462:61508	1919921	0	True				
ANR	1920584	AssignmentExpression	"property = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	0		=			
ANR	1920585	Identifier	property		1919921	0					
ANR	1920586	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	1					
ANR	1920587	Callee	xmlNewNode		1919921	0					
ANR	1920588	Identifier	xmlNewNode		1919921	0					
ANR	1920589	ArgumentList	NULL		1919921	1					
ANR	1920590	Argument	NULL		1919921	0					
ANR	1920591	Identifier	NULL		1919921	0					
ANR	1920592	Argument	"BAD_CAST ( ""BOGUS"" )"		1919921	1					
ANR	1920593	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1919921	0					
ANR	1920594	Callee	BAD_CAST		1919921	0					
ANR	1920595	Identifier	BAD_CAST		1919921	0					
ANR	1920596	ArgumentList	"""BOGUS"""		1919921	1					
ANR	1920597	Argument	"""BOGUS"""		1919921	0					
ANR	1920598	PrimaryExpression	"""BOGUS"""		1919921	0					
ANR	1920599	ExpressionStatement	"xmlAddChild ( xmlParam , property )"	1899:6:61516:61547	1919921	1	True				
ANR	1920600	CallExpression	"xmlAddChild ( xmlParam , property )"		1919921	0					
ANR	1920601	Callee	xmlAddChild		1919921	0					
ANR	1920602	Identifier	xmlAddChild		1919921	0					
ANR	1920603	ArgumentList	xmlParam		1919921	1					
ANR	1920604	Argument	xmlParam		1919921	0					
ANR	1920605	Identifier	xmlParam		1919921	0					
ANR	1920606	Argument	property		1919921	1					
ANR	1920607	Identifier	property		1919921	0					
ANR	1920608	ExpressionStatement	set_xsi_nil ( property )	1900:6:61555:61576	1919921	2	True				
ANR	1920609	CallExpression	set_xsi_nil ( property )		1919921	0					
ANR	1920610	Callee	set_xsi_nil		1919921	0					
ANR	1920611	Identifier	set_xsi_nil		1919921	0					
ANR	1920612	ArgumentList	property		1919921	1					
ANR	1920613	Argument	property		1919921	0					
ANR	1920614	Identifier	property		1919921	0					
ANR	1920615	ElseStatement	else		1919921	0					
ANR	1920616	CompoundStatement		96:12:2985:2985	1919921	0					
ANR	1920617	ExpressionStatement	"property = master_to_xml ( array_el -> encode , val , style , xmlParam )"	1902:6:61598:61662	1919921	0	True				
ANR	1920618	AssignmentExpression	"property = master_to_xml ( array_el -> encode , val , style , xmlParam )"		1919921	0		=			
ANR	1920619	Identifier	property		1919921	0					
ANR	1920620	CallExpression	"master_to_xml ( array_el -> encode , val , style , xmlParam )"		1919921	1					
ANR	1920621	Callee	master_to_xml		1919921	0					
ANR	1920622	Identifier	master_to_xml		1919921	0					
ANR	1920623	ArgumentList	array_el -> encode		1919921	1					
ANR	1920624	Argument	array_el -> encode		1919921	0					
ANR	1920625	PtrMemberAccess	array_el -> encode		1919921	0					
ANR	1920626	Identifier	array_el		1919921	0					
ANR	1920627	Identifier	encode		1919921	1					
ANR	1920628	Argument	val		1919921	1					
ANR	1920629	Identifier	val		1919921	0					
ANR	1920630	Argument	style		1919921	2					
ANR	1920631	Identifier	style		1919921	0					
ANR	1920632	Argument	xmlParam		1919921	3					
ANR	1920633	Identifier	xmlParam		1919921	0					
ANR	1920634	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( array_el -> name ) )"	1904:5:61676:61726	1919921	2	True				
ANR	1920635	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( array_el -> name ) )"		1919921	0					
ANR	1920636	Callee	xmlNodeSetName		1919921	0					
ANR	1920637	Identifier	xmlNodeSetName		1919921	0					
ANR	1920638	ArgumentList	property		1919921	1					
ANR	1920639	Argument	property		1919921	0					
ANR	1920640	Identifier	property		1919921	0					
ANR	1920641	Argument	BAD_CAST ( array_el -> name )		1919921	1					
ANR	1920642	CallExpression	BAD_CAST ( array_el -> name )		1919921	0					
ANR	1920643	Callee	BAD_CAST		1919921	0					
ANR	1920644	Identifier	BAD_CAST		1919921	0					
ANR	1920645	ArgumentList	array_el -> name		1919921	1					
ANR	1920646	Argument	array_el -> name		1919921	0					
ANR	1920647	PtrMemberAccess	array_el -> name		1919921	0					
ANR	1920648	Identifier	array_el		1919921	0					
ANR	1920649	Identifier	name		1919921	1					
ANR	1920650	IfStatement	if ( style == SOAP_LITERAL && array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED )		1919921	3					
ANR	1920651	Condition	style == SOAP_LITERAL && array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED	1905:9:61737:61833	1919921	0	True				
ANR	1920652	AndExpression	style == SOAP_LITERAL && array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED		1919921	0		&&			
ANR	1920653	EqualityExpression	style == SOAP_LITERAL		1919921	0		==			
ANR	1920654	Identifier	style		1919921	0					
ANR	1920655	Identifier	SOAP_LITERAL		1919921	1					
ANR	1920656	AndExpression	array_el -> namens && array_el -> form == XSD_FORM_QUALIFIED		1919921	1		&&			
ANR	1920657	PtrMemberAccess	array_el -> namens		1919921	0					
ANR	1920658	Identifier	array_el		1919921	0					
ANR	1920659	Identifier	namens		1919921	1					
ANR	1920660	EqualityExpression	array_el -> form == XSD_FORM_QUALIFIED		1919921	1		==			
ANR	1920661	PtrMemberAccess	array_el -> form		1919921	0					
ANR	1920662	Identifier	array_el		1919921	0					
ANR	1920663	Identifier	form		1919921	1					
ANR	1920664	Identifier	XSD_FORM_QUALIFIED		1919921	1					
ANR	1920665	CompoundStatement		103:6:3239:3295	1919921	1					
ANR	1920666	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( property , array_el -> namens ) ;"	1908:6:61844:61900	1919921	0	True				
ANR	1920667	IdentifierDecl	"nsp = encode_add_ns ( property , array_el -> namens )"		1919921	0					
ANR	1920668	IdentifierDeclType	xmlNsPtr		1919921	0					
ANR	1920669	Identifier	nsp		1919921	1					
ANR	1920670	AssignmentExpression	"nsp = encode_add_ns ( property , array_el -> namens )"		1919921	2		=			
ANR	1920671	Identifier	nsp		1919921	0					
ANR	1920672	CallExpression	"encode_add_ns ( property , array_el -> namens )"		1919921	1					
ANR	1920673	Callee	encode_add_ns		1919921	0					
ANR	1920674	Identifier	encode_add_ns		1919921	0					
ANR	1920675	ArgumentList	property		1919921	1					
ANR	1920676	Argument	property		1919921	0					
ANR	1920677	Identifier	property		1919921	0					
ANR	1920678	Argument	array_el -> namens		1919921	1					
ANR	1920679	PtrMemberAccess	array_el -> namens		1919921	0					
ANR	1920680	Identifier	array_el		1919921	0					
ANR	1920681	Identifier	namens		1919921	1					
ANR	1920682	ExpressionStatement	"xmlSetNs ( property , nsp )"	1909:6:61908:61931	1919921	1	True				
ANR	1920683	CallExpression	"xmlSetNs ( property , nsp )"		1919921	0					
ANR	1920684	Callee	xmlSetNs		1919921	0					
ANR	1920685	Identifier	xmlSetNs		1919921	0					
ANR	1920686	ArgumentList	property		1919921	1					
ANR	1920687	Argument	property		1919921	0					
ANR	1920688	Identifier	property		1919921	0					
ANR	1920689	Argument	nsp		1919921	1					
ANR	1920690	Identifier	nsp		1919921	0					
ANR	1920691	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1911:6:61946:61969	1919921	8	True				
ANR	1920692	CallExpression	ZEND_HASH_FOREACH_END ( )		1919921	0					
ANR	1920693	Callee	ZEND_HASH_FOREACH_END		1919921	0					
ANR	1920694	Identifier	ZEND_HASH_FOREACH_END		1919921	0					
ANR	1920695	ArgumentList			1919921	1					
ANR	1920696	ElseStatement	else		1919921	0					
ANR	1920697	IfStatement	if ( sdlType -> model )		1919921	0					
ANR	1920698	Condition	sdlType -> model	1912:14:61985:61998	1919921	0	True				
ANR	1920699	PtrMemberAccess	sdlType -> model		1919921	0					
ANR	1920700	Identifier	sdlType		1919921	0					
ANR	1920701	Identifier	model		1919921	1					
ANR	1920702	CompoundStatement		107:30:3396:3396	1919921	1					
ANR	1920703	ExpressionStatement	"model_to_xml_object ( xmlParam , sdlType -> model , data , style , 1 )"	1913:4:62007:62068	1919921	0	True				
ANR	1920704	CallExpression	"model_to_xml_object ( xmlParam , sdlType -> model , data , style , 1 )"		1919921	0					
ANR	1920705	Callee	model_to_xml_object		1919921	0					
ANR	1920706	Identifier	model_to_xml_object		1919921	0					
ANR	1920707	ArgumentList	xmlParam		1919921	1					
ANR	1920708	Argument	xmlParam		1919921	0					
ANR	1920709	Identifier	xmlParam		1919921	0					
ANR	1920710	Argument	sdlType -> model		1919921	1					
ANR	1920711	PtrMemberAccess	sdlType -> model		1919921	0					
ANR	1920712	Identifier	sdlType		1919921	0					
ANR	1920713	Identifier	model		1919921	1					
ANR	1920714	Argument	data		1919921	2					
ANR	1920715	Identifier	data		1919921	0					
ANR	1920716	Argument	style		1919921	3					
ANR	1920717	Identifier	style		1919921	0					
ANR	1920718	Argument	1		1919921	4					
ANR	1920719	PrimaryExpression	1		1919921	0					
ANR	1920720	IfStatement	if ( sdlType -> attributes )		1919921	2					
ANR	1920721	Condition	sdlType -> attributes	1915:7:62082:62100	1919921	0	True				
ANR	1920722	PtrMemberAccess	sdlType -> attributes		1919921	0					
ANR	1920723	Identifier	sdlType		1919921	0					
ANR	1920724	Identifier	attributes		1919921	1					
ANR	1920725	CompoundStatement		112:4:3530:3545	1919921	1					
ANR	1920726	IdentifierDeclStatement	sdlAttributePtr attr ;	1916:4:62109:62129	1919921	0	True				
ANR	1920727	IdentifierDecl	attr		1919921	0					
ANR	1920728	IdentifierDeclType	sdlAttributePtr		1919921	0					
ANR	1920729	Identifier	attr		1919921	1					
ANR	1920730	IdentifierDeclStatement	"zval * zattr , rv ;"	1917:4:62135:62150	1919921	1	True				
ANR	1920731	IdentifierDecl	* zattr		1919921	0					
ANR	1920732	IdentifierDeclType	zval *		1919921	0					
ANR	1920733	Identifier	zattr		1919921	1					
ANR	1920734	IdentifierDecl	rv		1919921	1					
ANR	1920735	IdentifierDeclType	zval		1919921	0					
ANR	1920736	Identifier	rv		1919921	1					
ANR	1920737	Statement	ZEND_HASH_FOREACH_PTR	1919:4:62157:62177	1919921	2	True				
ANR	1920738	Statement	(	1919:25:62178:62178	1919921	3	True				
ANR	1920739	Statement	sdlType	1919:26:62179:62185	1919921	4	True				
ANR	1920740	Statement	->	1919:33:62186:62187	1919921	5	True				
ANR	1920741	Statement	attributes	1919:35:62188:62197	1919921	6	True				
ANR	1920742	Statement	","	1919:45:62198:62198	1919921	7	True				
ANR	1920743	Statement	attr	1919:47:62200:62203	1919921	8	True				
ANR	1920744	Statement	)	1919:51:62204:62204	1919921	9	True				
ANR	1920745	CompoundStatement		114:53:3601:3601	1919921	10					
ANR	1920746	IfStatement	if ( attr -> name )		1919921	0					
ANR	1920747	Condition	attr -> name	1920:9:62217:62226	1919921	0	True				
ANR	1920748	PtrMemberAccess	attr -> name		1919921	0					
ANR	1920749	Identifier	attr		1919921	0					
ANR	1920750	Identifier	name		1919921	1					
ANR	1920751	CompoundStatement		115:21:3624:3624	1919921	1					
ANR	1920752	ExpressionStatement	"zattr = get_zval_property ( data , attr -> name , & rv )"	1921:6:62237:62285	1919921	0	True				
ANR	1920753	AssignmentExpression	"zattr = get_zval_property ( data , attr -> name , & rv )"		1919921	0		=			
ANR	1920754	Identifier	zattr		1919921	0					
ANR	1920755	CallExpression	"get_zval_property ( data , attr -> name , & rv )"		1919921	1					
ANR	1920756	Callee	get_zval_property		1919921	0					
ANR	1920757	Identifier	get_zval_property		1919921	0					
ANR	1920758	ArgumentList	data		1919921	1					
ANR	1920759	Argument	data		1919921	0					
ANR	1920760	Identifier	data		1919921	0					
ANR	1920761	Argument	attr -> name		1919921	1					
ANR	1920762	PtrMemberAccess	attr -> name		1919921	0					
ANR	1920763	Identifier	attr		1919921	0					
ANR	1920764	Identifier	name		1919921	1					
ANR	1920765	Argument	& rv		1919921	2					
ANR	1920766	UnaryOperationExpression	& rv		1919921	0					
ANR	1920767	UnaryOperator	&		1919921	0					
ANR	1920768	Identifier	rv		1919921	1					
ANR	1920769	IfStatement	if ( zattr )		1919921	1					
ANR	1920770	Condition	zattr	1922:10:62297:62301	1919921	0	True				
ANR	1920771	Identifier	zattr		1919921	0					
ANR	1920772	CompoundStatement		118:7:3708:3724	1919921	1					
ANR	1920773	IdentifierDeclStatement	xmlNodePtr dummy ;	1923:7:62313:62329	1919921	0	True				
ANR	1920774	IdentifierDecl	dummy		1919921	0					
ANR	1920775	IdentifierDeclType	xmlNodePtr		1919921	0					
ANR	1920776	Identifier	dummy		1919921	1					
ANR	1920777	ExpressionStatement	"dummy = master_to_xml ( attr -> encode , zattr , SOAP_LITERAL , xmlParam )"	1925:7:62339:62405	1919921	1	True				
ANR	1920778	AssignmentExpression	"dummy = master_to_xml ( attr -> encode , zattr , SOAP_LITERAL , xmlParam )"		1919921	0		=			
ANR	1920779	Identifier	dummy		1919921	0					
ANR	1920780	CallExpression	"master_to_xml ( attr -> encode , zattr , SOAP_LITERAL , xmlParam )"		1919921	1					
ANR	1920781	Callee	master_to_xml		1919921	0					
ANR	1920782	Identifier	master_to_xml		1919921	0					
ANR	1920783	ArgumentList	attr -> encode		1919921	1					
ANR	1920784	Argument	attr -> encode		1919921	0					
ANR	1920785	PtrMemberAccess	attr -> encode		1919921	0					
ANR	1920786	Identifier	attr		1919921	0					
ANR	1920787	Identifier	encode		1919921	1					
ANR	1920788	Argument	zattr		1919921	1					
ANR	1920789	Identifier	zattr		1919921	0					
ANR	1920790	Argument	SOAP_LITERAL		1919921	2					
ANR	1920791	Identifier	SOAP_LITERAL		1919921	0					
ANR	1920792	Argument	xmlParam		1919921	3					
ANR	1920793	Identifier	xmlParam		1919921	0					
ANR	1920794	IfStatement	if ( dummy -> children && dummy -> children -> content )		1919921	2					
ANR	1920795	Condition	dummy -> children && dummy -> children -> content	1926:11:62418:62460	1919921	0	True				
ANR	1920796	AndExpression	dummy -> children && dummy -> children -> content		1919921	0		&&			
ANR	1920797	PtrMemberAccess	dummy -> children		1919921	0					
ANR	1920798	Identifier	dummy		1919921	0					
ANR	1920799	Identifier	children		1919921	1					
ANR	1920800	PtrMemberAccess	dummy -> children -> content		1919921	1					
ANR	1920801	PtrMemberAccess	dummy -> children		1919921	0					
ANR	1920802	Identifier	dummy		1919921	0					
ANR	1920803	Identifier	children		1919921	1					
ANR	1920804	Identifier	content		1919921	1					
ANR	1920805	CompoundStatement		121:56:3858:3858	1919921	1					
ANR	1920806	IfStatement	"if ( attr -> fixed && strcmp ( attr -> fixed , ( char * ) dummy -> children -> content ) != 0 )"		1919921	0					
ANR	1920807	Condition	"attr -> fixed && strcmp ( attr -> fixed , ( char * ) dummy -> children -> content ) != 0"	1927:12:62477:62548	1919921	0	True				
ANR	1920808	AndExpression	"attr -> fixed && strcmp ( attr -> fixed , ( char * ) dummy -> children -> content ) != 0"		1919921	0		&&			
ANR	1920809	PtrMemberAccess	attr -> fixed		1919921	0					
ANR	1920810	Identifier	attr		1919921	0					
ANR	1920811	Identifier	fixed		1919921	1					
ANR	1920812	EqualityExpression	"strcmp ( attr -> fixed , ( char * ) dummy -> children -> content ) != 0"		1919921	1		!=			
ANR	1920813	CallExpression	"strcmp ( attr -> fixed , ( char * ) dummy -> children -> content )"		1919921	0					
ANR	1920814	Callee	strcmp		1919921	0					
ANR	1920815	Identifier	strcmp		1919921	0					
ANR	1920816	ArgumentList	attr -> fixed		1919921	1					
ANR	1920817	Argument	attr -> fixed		1919921	0					
ANR	1920818	PtrMemberAccess	attr -> fixed		1919921	0					
ANR	1920819	Identifier	attr		1919921	0					
ANR	1920820	Identifier	fixed		1919921	1					
ANR	1920821	Argument	( char * ) dummy -> children -> content		1919921	1					
ANR	1920822	CastExpression	( char * ) dummy -> children -> content		1919921	0					
ANR	1920823	CastTarget	char *		1919921	0					
ANR	1920824	PtrMemberAccess	dummy -> children -> content		1919921	1					
ANR	1920825	PtrMemberAccess	dummy -> children		1919921	0					
ANR	1920826	Identifier	dummy		1919921	0					
ANR	1920827	Identifier	children		1919921	1					
ANR	1920828	Identifier	content		1919921	1					
ANR	1920829	PrimaryExpression	0		1919921	1					
ANR	1920830	CompoundStatement		122:86:3946:3946	1919921	1					
ANR	1920831	ExpressionStatement	"soap_error3 ( E_ERROR , ""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"" , attr -> name , attr -> fixed , dummy -> children -> content )"	1928:9:62562:62710	1919921	0	True				
ANR	1920832	CallExpression	"soap_error3 ( E_ERROR , ""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"" , attr -> name , attr -> fixed , dummy -> children -> content )"		1919921	0					
ANR	1920833	Callee	soap_error3		1919921	0					
ANR	1920834	Identifier	soap_error3		1919921	0					
ANR	1920835	ArgumentList	E_ERROR		1919921	1					
ANR	1920836	Argument	E_ERROR		1919921	0					
ANR	1920837	Identifier	E_ERROR		1919921	0					
ANR	1920838	Argument	"""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"""		1919921	1					
ANR	1920839	PrimaryExpression	"""Encoding: Attribute '%s' has fixed value '%s' (value '%s' is not allowed)"""		1919921	0					
ANR	1920840	Argument	attr -> name		1919921	2					
ANR	1920841	PtrMemberAccess	attr -> name		1919921	0					
ANR	1920842	Identifier	attr		1919921	0					
ANR	1920843	Identifier	name		1919921	1					
ANR	1920844	Argument	attr -> fixed		1919921	3					
ANR	1920845	PtrMemberAccess	attr -> fixed		1919921	0					
ANR	1920846	Identifier	attr		1919921	0					
ANR	1920847	Identifier	fixed		1919921	1					
ANR	1920848	Argument	dummy -> children -> content		1919921	4					
ANR	1920849	PtrMemberAccess	dummy -> children -> content		1919921	0					
ANR	1920850	PtrMemberAccess	dummy -> children		1919921	0					
ANR	1920851	Identifier	dummy		1919921	0					
ANR	1920852	Identifier	children		1919921	1					
ANR	1920853	Identifier	content		1919921	1					
ANR	1920854	IfStatement	"if ( attr -> namens && ( ! strncmp ( attr -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || attr -> form == XSD_FORM_QUALIFIED ) )"		1919921	1					
ANR	1920855	Condition	"attr -> namens && ( ! strncmp ( attr -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || attr -> form == XSD_FORM_QUALIFIED )"	1933:12:62864:63002	1919921	0	True				
ANR	1920856	AndExpression	"attr -> namens && ( ! strncmp ( attr -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || attr -> form == XSD_FORM_QUALIFIED )"		1919921	0		&&			
ANR	1920857	PtrMemberAccess	attr -> namens		1919921	0					
ANR	1920858	Identifier	attr		1919921	0					
ANR	1920859	Identifier	namens		1919921	1					
ANR	1920860	OrExpression	"! strncmp ( attr -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) ) || attr -> form == XSD_FORM_QUALIFIED"		1919921	1		||			
ANR	1920861	UnaryOperationExpression	"! strncmp ( attr -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) )"		1919921	0					
ANR	1920862	UnaryOperator	!		1919921	0					
ANR	1920863	CallExpression	"strncmp ( attr -> namens , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) )"		1919921	1					
ANR	1920864	Callee	strncmp		1919921	0					
ANR	1920865	Identifier	strncmp		1919921	0					
ANR	1920866	ArgumentList	attr -> namens		1919921	1					
ANR	1920867	Argument	attr -> namens		1919921	0					
ANR	1920868	PtrMemberAccess	attr -> namens		1919921	0					
ANR	1920869	Identifier	attr		1919921	0					
ANR	1920870	Identifier	namens		1919921	1					
ANR	1920871	Argument	XML_NAMESPACE		1919921	1					
ANR	1920872	Identifier	XML_NAMESPACE		1919921	0					
ANR	1920873	Argument	sizeof ( XML_NAMESPACE )		1919921	2					
ANR	1920874	SizeofExpression	sizeof ( XML_NAMESPACE )		1919921	0					
ANR	1920875	Sizeof	sizeof		1919921	0					
ANR	1920876	SizeofOperand	XML_NAMESPACE		1919921	1					
ANR	1920877	EqualityExpression	attr -> form == XSD_FORM_QUALIFIED		1919921	1		==			
ANR	1920878	PtrMemberAccess	attr -> form		1919921	0					
ANR	1920879	Identifier	attr		1919921	0					
ANR	1920880	Identifier	form		1919921	1					
ANR	1920881	Identifier	XSD_FORM_QUALIFIED		1919921	1					
ANR	1920882	CompoundStatement		131:9:4411:4463	1919921	1					
ANR	1920883	IdentifierDeclStatement	"xmlNsPtr nsp = encode_add_ns ( xmlParam , attr -> namens ) ;"	1936:9:63016:63068	1919921	0	True				
ANR	1920884	IdentifierDecl	"nsp = encode_add_ns ( xmlParam , attr -> namens )"		1919921	0					
ANR	1920885	IdentifierDeclType	xmlNsPtr		1919921	0					
ANR	1920886	Identifier	nsp		1919921	1					
ANR	1920887	AssignmentExpression	"nsp = encode_add_ns ( xmlParam , attr -> namens )"		1919921	2		=			
ANR	1920888	Identifier	nsp		1919921	0					
ANR	1920889	CallExpression	"encode_add_ns ( xmlParam , attr -> namens )"		1919921	1					
ANR	1920890	Callee	encode_add_ns		1919921	0					
ANR	1920891	Identifier	encode_add_ns		1919921	0					
ANR	1920892	ArgumentList	xmlParam		1919921	1					
ANR	1920893	Argument	xmlParam		1919921	0					
ANR	1920894	Identifier	xmlParam		1919921	0					
ANR	1920895	Argument	attr -> namens		1919921	1					
ANR	1920896	PtrMemberAccess	attr -> namens		1919921	0					
ANR	1920897	Identifier	attr		1919921	0					
ANR	1920898	Identifier	namens		1919921	1					
ANR	1920899	ExpressionStatement	"xmlSetNsProp ( xmlParam , nsp , BAD_CAST ( attr -> name ) , dummy -> children -> content )"	1938:9:63080:63155	1919921	1	True				
ANR	1920900	CallExpression	"xmlSetNsProp ( xmlParam , nsp , BAD_CAST ( attr -> name ) , dummy -> children -> content )"		1919921	0					
ANR	1920901	Callee	xmlSetNsProp		1919921	0					
ANR	1920902	Identifier	xmlSetNsProp		1919921	0					
ANR	1920903	ArgumentList	xmlParam		1919921	1					
ANR	1920904	Argument	xmlParam		1919921	0					
ANR	1920905	Identifier	xmlParam		1919921	0					
ANR	1920906	Argument	nsp		1919921	1					
ANR	1920907	Identifier	nsp		1919921	0					
ANR	1920908	Argument	BAD_CAST ( attr -> name )		1919921	2					
ANR	1920909	CallExpression	BAD_CAST ( attr -> name )		1919921	0					
ANR	1920910	Callee	BAD_CAST		1919921	0					
ANR	1920911	Identifier	BAD_CAST		1919921	0					
ANR	1920912	ArgumentList	attr -> name		1919921	1					
ANR	1920913	Argument	attr -> name		1919921	0					
ANR	1920914	PtrMemberAccess	attr -> name		1919921	0					
ANR	1920915	Identifier	attr		1919921	0					
ANR	1920916	Identifier	name		1919921	1					
ANR	1920917	Argument	dummy -> children -> content		1919921	3					
ANR	1920918	PtrMemberAccess	dummy -> children -> content		1919921	0					
ANR	1920919	PtrMemberAccess	dummy -> children		1919921	0					
ANR	1920920	Identifier	dummy		1919921	0					
ANR	1920921	Identifier	children		1919921	1					
ANR	1920922	Identifier	content		1919921	1					
ANR	1920923	ElseStatement	else		1919921	0					
ANR	1920924	CompoundStatement		134:15:4567:4567	1919921	0					
ANR	1920925	ExpressionStatement	"xmlSetProp ( xmlParam , BAD_CAST ( attr -> name ) , dummy -> children -> content )"	1940:9:63183:63251	1919921	0	True				
ANR	1920926	CallExpression	"xmlSetProp ( xmlParam , BAD_CAST ( attr -> name ) , dummy -> children -> content )"		1919921	0					
ANR	1920927	Callee	xmlSetProp		1919921	0					
ANR	1920928	Identifier	xmlSetProp		1919921	0					
ANR	1920929	ArgumentList	xmlParam		1919921	1					
ANR	1920930	Argument	xmlParam		1919921	0					
ANR	1920931	Identifier	xmlParam		1919921	0					
ANR	1920932	Argument	BAD_CAST ( attr -> name )		1919921	1					
ANR	1920933	CallExpression	BAD_CAST ( attr -> name )		1919921	0					
ANR	1920934	Callee	BAD_CAST		1919921	0					
ANR	1920935	Identifier	BAD_CAST		1919921	0					
ANR	1920936	ArgumentList	attr -> name		1919921	1					
ANR	1920937	Argument	attr -> name		1919921	0					
ANR	1920938	PtrMemberAccess	attr -> name		1919921	0					
ANR	1920939	Identifier	attr		1919921	0					
ANR	1920940	Identifier	name		1919921	1					
ANR	1920941	Argument	dummy -> children -> content		1919921	2					
ANR	1920942	PtrMemberAccess	dummy -> children -> content		1919921	0					
ANR	1920943	PtrMemberAccess	dummy -> children		1919921	0					
ANR	1920944	Identifier	dummy		1919921	0					
ANR	1920945	Identifier	children		1919921	1					
ANR	1920946	Identifier	content		1919921	1					
ANR	1920947	ExpressionStatement	xmlUnlinkNode ( dummy )	1943:7:63279:63299	1919921	3	True				
ANR	1920948	CallExpression	xmlUnlinkNode ( dummy )		1919921	0					
ANR	1920949	Callee	xmlUnlinkNode		1919921	0					
ANR	1920950	Identifier	xmlUnlinkNode		1919921	0					
ANR	1920951	ArgumentList	dummy		1919921	1					
ANR	1920952	Argument	dummy		1919921	0					
ANR	1920953	Identifier	dummy		1919921	0					
ANR	1920954	ExpressionStatement	xmlFreeNode ( dummy )	1944:7:63308:63326	1919921	4	True				
ANR	1920955	CallExpression	xmlFreeNode ( dummy )		1919921	0					
ANR	1920956	Callee	xmlFreeNode		1919921	0					
ANR	1920957	Identifier	xmlFreeNode		1919921	0					
ANR	1920958	ArgumentList	dummy		1919921	1					
ANR	1920959	Argument	dummy		1919921	0					
ANR	1920960	Identifier	dummy		1919921	0					
ANR	1920961	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1947:6:63349:63372	1919921	11	True				
ANR	1920962	CallExpression	ZEND_HASH_FOREACH_END ( )		1919921	0					
ANR	1920963	Callee	ZEND_HASH_FOREACH_END		1919921	0					
ANR	1920964	Identifier	ZEND_HASH_FOREACH_END		1919921	0					
ANR	1920965	ArgumentList			1919921	1					
ANR	1920966	IfStatement	if ( style == SOAP_ENCODED )		1919921	3					
ANR	1920967	Condition	style == SOAP_ENCODED	1950:6:63389:63409	1919921	0	True				
ANR	1920968	EqualityExpression	style == SOAP_ENCODED		1919921	0		==			
ANR	1920969	Identifier	style		1919921	0					
ANR	1920970	Identifier	SOAP_ENCODED		1919921	1					
ANR	1920971	CompoundStatement		145:29:4807:4807	1919921	1					
ANR	1920972	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	1951:3:63417:63448	1919921	0	True				
ANR	1920973	CallExpression	"set_ns_and_type ( xmlParam , type )"		1919921	0					
ANR	1920974	Callee	set_ns_and_type		1919921	0					
ANR	1920975	Identifier	set_ns_and_type		1919921	0					
ANR	1920976	ArgumentList	xmlParam		1919921	1					
ANR	1920977	Argument	xmlParam		1919921	0					
ANR	1920978	Identifier	xmlParam		1919921	0					
ANR	1920979	Argument	type		1919921	1					
ANR	1920980	Identifier	type		1919921	0					
ANR	1920981	ElseStatement	else		1919921	0					
ANR	1920982	CompoundStatement		148:8:4857:4857	1919921	0					
ANR	1920983	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	1954:2:63466:63512	1919921	0	True				
ANR	1920984	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	0		=			
ANR	1920985	Identifier	xmlParam		1919921	0					
ANR	1920986	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1919921	1					
ANR	1920987	Callee	xmlNewNode		1919921	0					
ANR	1920988	Identifier	xmlNewNode		1919921	0					
ANR	1920989	ArgumentList	NULL		1919921	1					
ANR	1920990	Argument	NULL		1919921	0					
ANR	1920991	Identifier	NULL		1919921	0					
ANR	1920992	Argument	"BAD_CAST ( ""BOGUS"" )"		1919921	1					
ANR	1920993	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1919921	0					
ANR	1920994	Callee	BAD_CAST		1919921	0					
ANR	1920995	Identifier	BAD_CAST		1919921	0					
ANR	1920996	ArgumentList	"""BOGUS"""		1919921	1					
ANR	1920997	Argument	"""BOGUS"""		1919921	0					
ANR	1920998	PrimaryExpression	"""BOGUS"""		1919921	0					
ANR	1920999	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	1955:2:63516:63545	1919921	1	True				
ANR	1921000	CallExpression	"xmlAddChild ( parent , xmlParam )"		1919921	0					
ANR	1921001	Callee	xmlAddChild		1919921	0					
ANR	1921002	Identifier	xmlAddChild		1919921	0					
ANR	1921003	ArgumentList	parent		1919921	1					
ANR	1921004	Argument	parent		1919921	0					
ANR	1921005	Identifier	parent		1919921	0					
ANR	1921006	Argument	xmlParam		1919921	1					
ANR	1921007	Identifier	xmlParam		1919921	0					
ANR	1921008	IfStatement	"if ( soap_check_zval_ref ( data , xmlParam ) )"		1919921	2					
ANR	1921009	Condition	"soap_check_zval_ref ( data , xmlParam )"	1957:6:63554:63588	1919921	0	True				
ANR	1921010	CallExpression	"soap_check_zval_ref ( data , xmlParam )"		1919921	0					
ANR	1921011	Callee	soap_check_zval_ref		1919921	0					
ANR	1921012	Identifier	soap_check_zval_ref		1919921	0					
ANR	1921013	ArgumentList	data		1919921	1					
ANR	1921014	Argument	data		1919921	0					
ANR	1921015	Identifier	data		1919921	0					
ANR	1921016	Argument	xmlParam		1919921	1					
ANR	1921017	Identifier	xmlParam		1919921	0					
ANR	1921018	CompoundStatement		152:43:4986:4986	1919921	1					
ANR	1921019	ReturnStatement	return xmlParam ;	1958:3:63596:63611	1919921	0	True				
ANR	1921020	Identifier	xmlParam		1919921	0					
ANR	1921021	IfStatement	if ( prop != NULL )		1919921	3					
ANR	1921022	Condition	prop != NULL	1960:6:63623:63634	1919921	0	True				
ANR	1921023	EqualityExpression	prop != NULL		1919921	0		!=			
ANR	1921024	Identifier	prop		1919921	0					
ANR	1921025	Identifier	NULL		1919921	1					
ANR	1921026	CompoundStatement		158:3:5078:5097	1919921	1					
ANR	1921027	IdentifierDeclStatement	zval * zprop ;	1961:3:63642:63653	1919921	0	True				
ANR	1921028	IdentifierDecl	* zprop		1919921	0					
ANR	1921029	IdentifierDeclType	zval *		1919921	0					
ANR	1921030	Identifier	zprop		1919921	1					
ANR	1921031	IdentifierDeclStatement	zend_string * str_key ;	1962:3:63658:63678	1919921	1	True				
ANR	1921032	IdentifierDecl	* str_key		1919921	0					
ANR	1921033	IdentifierDeclType	zend_string *		1919921	0					
ANR	1921034	Identifier	str_key		1919921	1					
ANR	1921035	IdentifierDeclStatement	xmlNodePtr property ;	1963:3:63683:63702	1919921	2	True				
ANR	1921036	IdentifierDecl	property		1919921	0					
ANR	1921037	IdentifierDeclType	xmlNodePtr		1919921	0					
ANR	1921038	Identifier	property		1919921	1					
ANR	1921039	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL_IND	1965:3:63708:63740	1919921	3	True				
ANR	1921040	Statement	(	1965:36:63741:63741	1919921	4	True				
ANR	1921041	Statement	prop	1965:37:63742:63745	1919921	5	True				
ANR	1921042	Statement	","	1965:41:63746:63746	1919921	6	True				
ANR	1921043	Statement	str_key	1965:43:63748:63754	1919921	7	True				
ANR	1921044	Statement	","	1965:50:63755:63755	1919921	8	True				
ANR	1921045	Statement	zprop	1965:52:63757:63761	1919921	9	True				
ANR	1921046	Statement	)	1965:57:63762:63762	1919921	10	True				
ANR	1921047	CompoundStatement		160:59:5159:5159	1919921	11					
ANR	1921048	ExpressionStatement	"property = master_to_xml ( get_conversion ( Z_TYPE_P ( zprop ) ) , zprop , style , xmlParam )"	1967:4:63771:63852	1919921	0	True				
ANR	1921049	AssignmentExpression	"property = master_to_xml ( get_conversion ( Z_TYPE_P ( zprop ) ) , zprop , style , xmlParam )"		1919921	0		=			
ANR	1921050	Identifier	property		1919921	0					
ANR	1921051	CallExpression	"master_to_xml ( get_conversion ( Z_TYPE_P ( zprop ) ) , zprop , style , xmlParam )"		1919921	1					
ANR	1921052	Callee	master_to_xml		1919921	0					
ANR	1921053	Identifier	master_to_xml		1919921	0					
ANR	1921054	ArgumentList	get_conversion ( Z_TYPE_P ( zprop ) )		1919921	1					
ANR	1921055	Argument	get_conversion ( Z_TYPE_P ( zprop ) )		1919921	0					
ANR	1921056	CallExpression	get_conversion ( Z_TYPE_P ( zprop ) )		1919921	0					
ANR	1921057	Callee	get_conversion		1919921	0					
ANR	1921058	Identifier	get_conversion		1919921	0					
ANR	1921059	ArgumentList	Z_TYPE_P ( zprop )		1919921	1					
ANR	1921060	Argument	Z_TYPE_P ( zprop )		1919921	0					
ANR	1921061	CallExpression	Z_TYPE_P ( zprop )		1919921	0					
ANR	1921062	Callee	Z_TYPE_P		1919921	0					
ANR	1921063	Identifier	Z_TYPE_P		1919921	0					
ANR	1921064	ArgumentList	zprop		1919921	1					
ANR	1921065	Argument	zprop		1919921	0					
ANR	1921066	Identifier	zprop		1919921	0					
ANR	1921067	Argument	zprop		1919921	1					
ANR	1921068	Identifier	zprop		1919921	0					
ANR	1921069	Argument	style		1919921	2					
ANR	1921070	Identifier	style		1919921	0					
ANR	1921071	Argument	xmlParam		1919921	3					
ANR	1921072	Identifier	xmlParam		1919921	0					
ANR	1921073	IfStatement	if ( str_key )		1919921	1					
ANR	1921074	Condition	str_key	1969:8:63863:63869	1919921	0	True				
ANR	1921075	Identifier	str_key		1919921	0					
ANR	1921076	CompoundStatement		165:5:5274:5295	1919921	1					
ANR	1921077	IdentifierDeclStatement	const char * prop_name ;	1970:5:63879:63900	1919921	0	True				
ANR	1921078	IdentifierDecl	* prop_name		1919921	0					
ANR	1921079	IdentifierDeclType	const char *		1919921	0					
ANR	1921080	Identifier	prop_name		1919921	1					
ANR	1921081	IfStatement	if ( Z_TYPE_P ( data ) == IS_OBJECT )		1919921	1					
ANR	1921082	Condition	Z_TYPE_P ( data ) == IS_OBJECT	1972:9:63912:63938	1919921	0	True				
ANR	1921083	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1919921	0		==			
ANR	1921084	CallExpression	Z_TYPE_P ( data )		1919921	0					
ANR	1921085	Callee	Z_TYPE_P		1919921	0					
ANR	1921086	Identifier	Z_TYPE_P		1919921	0					
ANR	1921087	ArgumentList	data		1919921	1					
ANR	1921088	Argument	data		1919921	0					
ANR	1921089	Identifier	data		1919921	0					
ANR	1921090	Identifier	IS_OBJECT		1919921	1					
ANR	1921091	CompoundStatement		168:6:5344:5366	1919921	1					
ANR	1921092	IdentifierDeclStatement	const char * class_name ;	1973:6:63949:63971	1919921	0	True				
ANR	1921093	IdentifierDecl	* class_name		1919921	0					
ANR	1921094	IdentifierDeclType	const char *		1919921	0					
ANR	1921095	Identifier	class_name		1919921	1					
ANR	1921096	ExpressionStatement	"zend_unmangle_property_name ( str_key , & class_name , & prop_name )"	1975:6:63980:64041	1919921	1	True				
ANR	1921097	CallExpression	"zend_unmangle_property_name ( str_key , & class_name , & prop_name )"		1919921	0					
ANR	1921098	Callee	zend_unmangle_property_name		1919921	0					
ANR	1921099	Identifier	zend_unmangle_property_name		1919921	0					
ANR	1921100	ArgumentList	str_key		1919921	1					
ANR	1921101	Argument	str_key		1919921	0					
ANR	1921102	Identifier	str_key		1919921	0					
ANR	1921103	Argument	& class_name		1919921	1					
ANR	1921104	UnaryOperationExpression	& class_name		1919921	0					
ANR	1921105	UnaryOperator	&		1919921	0					
ANR	1921106	Identifier	class_name		1919921	1					
ANR	1921107	Argument	& prop_name		1919921	2					
ANR	1921108	UnaryOperationExpression	& prop_name		1919921	0					
ANR	1921109	UnaryOperator	&		1919921	0					
ANR	1921110	Identifier	prop_name		1919921	1					
ANR	1921111	ElseStatement	else		1919921	0					
ANR	1921112	CompoundStatement		171:12:5450:5450	1919921	0					
ANR	1921113	ExpressionStatement	prop_name = ZSTR_VAL ( str_key )	1977:6:64063:64092	1919921	0	True				
ANR	1921114	AssignmentExpression	prop_name = ZSTR_VAL ( str_key )		1919921	0		=			
ANR	1921115	Identifier	prop_name		1919921	0					
ANR	1921116	CallExpression	ZSTR_VAL ( str_key )		1919921	1					
ANR	1921117	Callee	ZSTR_VAL		1919921	0					
ANR	1921118	Identifier	ZSTR_VAL		1919921	0					
ANR	1921119	ArgumentList	str_key		1919921	1					
ANR	1921120	Argument	str_key		1919921	0					
ANR	1921121	Identifier	str_key		1919921	0					
ANR	1921122	IfStatement	if ( prop_name )		1919921	2					
ANR	1921123	Condition	prop_name	1979:9:64110:64118	1919921	0	True				
ANR	1921124	Identifier	prop_name		1919921	0					
ANR	1921125	CompoundStatement		174:20:5516:5516	1919921	1					
ANR	1921126	ExpressionStatement	"xmlNodeSetName ( property , BAD_CAST ( prop_name ) )"	1980:6:64129:64174	1919921	0	True				
ANR	1921127	CallExpression	"xmlNodeSetName ( property , BAD_CAST ( prop_name ) )"		1919921	0					
ANR	1921128	Callee	xmlNodeSetName		1919921	0					
ANR	1921129	Identifier	xmlNodeSetName		1919921	0					
ANR	1921130	ArgumentList	property		1919921	1					
ANR	1921131	Argument	property		1919921	0					
ANR	1921132	Identifier	property		1919921	0					
ANR	1921133	Argument	BAD_CAST ( prop_name )		1919921	1					
ANR	1921134	CallExpression	BAD_CAST ( prop_name )		1919921	0					
ANR	1921135	Callee	BAD_CAST		1919921	0					
ANR	1921136	Identifier	BAD_CAST		1919921	0					
ANR	1921137	ArgumentList	prop_name		1919921	1					
ANR	1921138	Argument	prop_name		1919921	0					
ANR	1921139	Identifier	prop_name		1919921	0					
ANR	1921140	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1983:5:64194:64217	1919921	12	True				
ANR	1921141	CallExpression	ZEND_HASH_FOREACH_END ( )		1919921	0					
ANR	1921142	Callee	ZEND_HASH_FOREACH_END		1919921	0					
ANR	1921143	Identifier	ZEND_HASH_FOREACH_END		1919921	0					
ANR	1921144	ArgumentList			1919921	1					
ANR	1921145	IfStatement	if ( style == SOAP_ENCODED )		1919921	4					
ANR	1921146	Condition	style == SOAP_ENCODED	1985:6:64229:64249	1919921	0	True				
ANR	1921147	EqualityExpression	style == SOAP_ENCODED		1919921	0		==			
ANR	1921148	Identifier	style		1919921	0					
ANR	1921149	Identifier	SOAP_ENCODED		1919921	1					
ANR	1921150	CompoundStatement		180:29:5647:5647	1919921	1					
ANR	1921151	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	1986:3:64257:64288	1919921	0	True				
ANR	1921152	CallExpression	"set_ns_and_type ( xmlParam , type )"		1919921	0					
ANR	1921153	Callee	set_ns_and_type		1919921	0					
ANR	1921154	Identifier	set_ns_and_type		1919921	0					
ANR	1921155	ArgumentList	xmlParam		1919921	1					
ANR	1921156	Argument	xmlParam		1919921	0					
ANR	1921157	Identifier	xmlParam		1919921	0					
ANR	1921158	Argument	type		1919921	1					
ANR	1921159	Identifier	type		1919921	0					
ANR	1921160	ReturnStatement	return xmlParam ;	1989:1:64298:64313	1919921	6	True				
ANR	1921161	Identifier	xmlParam		1919921	0					
ANR	1921162	ReturnType	static xmlNodePtr		1919921	1					
ANR	1921163	Identifier	to_xml_object		1919921	2					
ANR	1921164	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1919921	3					
ANR	1921165	Parameter	encodeTypePtr type	1805:32:58542:58559	1919921	0	True				
ANR	1921166	ParameterType	encodeTypePtr		1919921	0					
ANR	1921167	Identifier	type		1919921	1					
ANR	1921168	Parameter	zval * data	1805:52:58562:58571	1919921	1	True				
ANR	1921169	ParameterType	zval *		1919921	0					
ANR	1921170	Identifier	data		1919921	1					
ANR	1921171	Parameter	int style	1805:64:58574:58582	1919921	2	True				
ANR	1921172	ParameterType	int		1919921	0					
ANR	1921173	Identifier	style		1919921	1					
ANR	1921174	Parameter	xmlNodePtr parent	1805:75:58585:58601	1919921	3	True				
ANR	1921175	ParameterType	xmlNodePtr		1919921	0					
ANR	1921176	Identifier	parent		1919921	1					
ANR	1921177	CFGEntryNode	ENTRY		1919921		True				
ANR	1921178	CFGExitNode	EXIT		1919921		True				
ANR	1921179	Symbol	parent		1919921						
ANR	1921180	Symbol	array_el -> namens		1919921						
ANR	1921181	Symbol	str_key		1919921						
ANR	1921182	Symbol	data		1919921						
ANR	1921183	Symbol	dummy -> children -> content		1919921						
ANR	1921184	Symbol	sdlType -> encode		1919921						
ANR	1921185	Symbol	XSD_FORM_QUALIFIED		1919921						
ANR	1921186	Symbol	* dummy -> children		1919921						
ANR	1921187	Symbol	& class_name		1919921						
ANR	1921188	Symbol	* array_el		1919921						
ANR	1921189	Symbol	get_conversion		1919921						
ANR	1921190	Symbol	type		1919921						
ANR	1921191	Symbol	* * sdlType -> encode		1919921						
ANR	1921192	Symbol	zattr		1919921						
ANR	1921193	Symbol	dummy		1919921						
ANR	1921194	Symbol	enc -> details . sdl_type -> kind		1919921						
ANR	1921195	Symbol	strncmp		1919921						
ANR	1921196	Symbol	* sdlType		1919921						
ANR	1921197	Symbol	array_el -> nillable		1919921						
ANR	1921198	Symbol	tmp		1919921						
ANR	1921199	Symbol	* * sdlType		1919921						
ANR	1921200	Symbol	property		1919921						
ANR	1921201	Symbol	* sdlType -> encode -> details . sdl_type		1919921						
ANR	1921202	Symbol	val		1919921						
ANR	1921203	Symbol	strcmp		1919921						
ANR	1921204	Symbol	NULL		1919921						
ANR	1921205	Symbol	enc -> details . sdl_type -> encode		1919921						
ANR	1921206	Symbol	XML_NAMESPACE		1919921						
ANR	1921207	Symbol	* dummy		1919921						
ANR	1921208	Symbol	attr -> form		1919921						
ANR	1921209	Symbol	attr -> encode		1919921						
ANR	1921210	Symbol	* * enc		1919921						
ANR	1921211	Symbol	sdlType -> encode -> details . sdl_type		1919921						
ANR	1921212	Symbol	SOAP_LITERAL		1919921						
ANR	1921213	Symbol	array_el -> name		1919921						
ANR	1921214	Symbol	zprop		1919921						
ANR	1921215	Symbol	style		1919921						
ANR	1921216	Symbol	* enc		1919921						
ANR	1921217	Symbol	* attr		1919921						
ANR	1921218	Symbol	XSD_TYPEKIND_EXTENSION		1919921						
ANR	1921219	Symbol	array_el		1919921						
ANR	1921220	Symbol	sdlType		1919921						
ANR	1921221	Symbol	BAD_CAST		1919921						
ANR	1921222	Symbol	sdlType -> attributes		1919921						
ANR	1921223	Symbol	XSD_TYPEKIND_LIST		1919921						
ANR	1921224	Symbol	* * * sdlType		1919921						
ANR	1921225	Symbol	xmlParam		1919921						
ANR	1921226	Symbol	rv		1919921						
ANR	1921227	Symbol	* * dummy		1919921						
ANR	1921228	Symbol	sdlType -> kind		1919921						
ANR	1921229	Symbol	* enc -> details . sdl_type		1919921						
ANR	1921230	Symbol	enc -> details		1919921						
ANR	1921231	Symbol	model_array_element		1919921						
ANR	1921232	Symbol	nsp		1919921						
ANR	1921233	Symbol	get_zval_property		1919921						
ANR	1921234	Symbol	XSD_TYPEKIND_UNION		1919921						
ANR	1921235	Symbol	XSD_TYPEKIND_SIMPLE		1919921						
ANR	1921236	Symbol	soap_check_zval_ref		1919921						
ANR	1921237	Symbol	IS_NULL		1919921						
ANR	1921238	Symbol	* type		1919921						
ANR	1921239	Symbol	IS_ARRAY		1919921						
ANR	1921240	Symbol	& sdlType -> encode -> details		1919921						
ANR	1921241	Symbol	prop		1919921						
ANR	1921242	Symbol	& prop_name		1919921						
ANR	1921243	Symbol	enc		1919921						
ANR	1921244	Symbol	sdlType -> model		1919921						
ANR	1921245	Symbol	Z_ARRVAL_P		1919921						
ANR	1921246	Symbol	sdlType -> encode -> details . sdl_type -> kind		1919921						
ANR	1921247	Symbol	attr		1919921						
ANR	1921248	Symbol	attr -> fixed		1919921						
ANR	1921249	Symbol	class_name		1919921						
ANR	1921250	Symbol	master_to_xml		1919921						
ANR	1921251	Symbol	* enc -> details		1919921						
ANR	1921252	Symbol	encode_add_ns		1919921						
ANR	1921253	Symbol	enc -> details . sdl_type		1919921						
ANR	1921254	Symbol	* sdlType -> encode		1919921						
ANR	1921255	Symbol	is_map		1919921						
ANR	1921256	Symbol	xmlNewNode		1919921						
ANR	1921257	Symbol	Z_OBJPROP_P		1919921						
ANR	1921258	Symbol	Z_TYPE_P		1919921						
ANR	1921259	Symbol	dummy -> children		1919921						
ANR	1921260	Symbol	XSD_TYPEKIND_RESTRICTION		1919921						
ANR	1921261	Symbol	& rv		1919921						
ANR	1921262	Symbol	array_el -> form		1919921						
ANR	1921263	Symbol	ZSTR_VAL		1919921						
ANR	1921264	Symbol	prop_name		1919921						
ANR	1921265	Symbol	sdlType -> encode -> details		1919921						
ANR	1921266	Symbol	E_ERROR		1919921						
ANR	1921267	Symbol	attr -> namens		1919921						
ANR	1921268	Symbol	* sdlType -> encode -> details		1919921						
ANR	1921269	Symbol	array_el -> encode		1919921						
ANR	1921270	Symbol	attr -> name		1919921						
ANR	1921271	Symbol	SOAP_ENCODED		1919921						
ANR	1921272	Symbol	IS_OBJECT		1919921						
ANR	1921273	Symbol	type -> sdl_type		1919921						
ANR	1921274	Function	guess_array_map	1993:0:64344:64726							
ANR	1921275	FunctionDef	"guess_array_map (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1921274	0					
ANR	1921276	CompoundStatement		1994:0:64440:64726	1921274	0					
ANR	1921277	IdentifierDeclStatement	encodePtr enc = NULL ;	1995:1:64443:64463	1921274	0	True				
ANR	1921278	IdentifierDecl	enc = NULL		1921274	0					
ANR	1921279	IdentifierDeclType	encodePtr		1921274	0					
ANR	1921280	Identifier	enc		1921274	1					
ANR	1921281	AssignmentExpression	enc = NULL		1921274	2		=			
ANR	1921282	Identifier	NULL		1921274	0					
ANR	1921283	Identifier	NULL		1921274	1					
ANR	1921284	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_ARRAY )		1921274	1					
ANR	1921285	Condition	data && Z_TYPE_P ( data ) == IS_ARRAY	1997:5:64471:64504	1921274	0	True				
ANR	1921286	AndExpression	data && Z_TYPE_P ( data ) == IS_ARRAY		1921274	0		&&			
ANR	1921287	Identifier	data		1921274	0					
ANR	1921288	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1921274	1		==			
ANR	1921289	CallExpression	Z_TYPE_P ( data )		1921274	0					
ANR	1921290	Callee	Z_TYPE_P		1921274	0					
ANR	1921291	Identifier	Z_TYPE_P		1921274	0					
ANR	1921292	ArgumentList	data		1921274	1					
ANR	1921293	Argument	data		1921274	0					
ANR	1921294	Identifier	data		1921274	0					
ANR	1921295	Identifier	IS_ARRAY		1921274	1					
ANR	1921296	CompoundStatement		4:41:66:66	1921274	1					
ANR	1921297	IfStatement	if ( is_map ( data ) )		1921274	0					
ANR	1921298	Condition	is_map ( data )	1998:6:64515:64526	1921274	0	True				
ANR	1921299	CallExpression	is_map ( data )		1921274	0					
ANR	1921300	Callee	is_map		1921274	0					
ANR	1921301	Identifier	is_map		1921274	0					
ANR	1921302	ArgumentList	data		1921274	1					
ANR	1921303	Argument	data		1921274	0					
ANR	1921304	Identifier	data		1921274	0					
ANR	1921305	CompoundStatement		5:20:88:88	1921274	1					
ANR	1921306	ExpressionStatement	enc = get_conversion ( APACHE_MAP )	1999:3:64534:64566	1921274	0	True				
ANR	1921307	AssignmentExpression	enc = get_conversion ( APACHE_MAP )		1921274	0		=			
ANR	1921308	Identifier	enc		1921274	0					
ANR	1921309	CallExpression	get_conversion ( APACHE_MAP )		1921274	1					
ANR	1921310	Callee	get_conversion		1921274	0					
ANR	1921311	Identifier	get_conversion		1921274	0					
ANR	1921312	ArgumentList	APACHE_MAP		1921274	1					
ANR	1921313	Argument	APACHE_MAP		1921274	0					
ANR	1921314	Identifier	APACHE_MAP		1921274	0					
ANR	1921315	ElseStatement	else		1921274	0					
ANR	1921316	CompoundStatement		7:9:136:136	1921274	0					
ANR	1921317	ExpressionStatement	enc = get_conversion ( SOAP_ENC_ARRAY )	2001:3:64582:64618	1921274	0	True				
ANR	1921318	AssignmentExpression	enc = get_conversion ( SOAP_ENC_ARRAY )		1921274	0		=			
ANR	1921319	Identifier	enc		1921274	0					
ANR	1921320	CallExpression	get_conversion ( SOAP_ENC_ARRAY )		1921274	1					
ANR	1921321	Callee	get_conversion		1921274	0					
ANR	1921322	Identifier	get_conversion		1921274	0					
ANR	1921323	ArgumentList	SOAP_ENC_ARRAY		1921274	1					
ANR	1921324	Argument	SOAP_ENC_ARRAY		1921274	0					
ANR	1921325	Identifier	SOAP_ENC_ARRAY		1921274	0					
ANR	1921326	IfStatement	if ( ! enc )		1921274	2					
ANR	1921327	Condition	! enc	2004:5:64632:64635	1921274	0	True				
ANR	1921328	UnaryOperationExpression	! enc		1921274	0					
ANR	1921329	UnaryOperator	!		1921274	0					
ANR	1921330	Identifier	enc		1921274	1					
ANR	1921331	CompoundStatement		11:11:197:197	1921274	1					
ANR	1921332	ExpressionStatement	enc = get_conversion ( IS_NULL )	2005:2:64642:64671	1921274	0	True				
ANR	1921333	AssignmentExpression	enc = get_conversion ( IS_NULL )		1921274	0		=			
ANR	1921334	Identifier	enc		1921274	0					
ANR	1921335	CallExpression	get_conversion ( IS_NULL )		1921274	1					
ANR	1921336	Callee	get_conversion		1921274	0					
ANR	1921337	Identifier	get_conversion		1921274	0					
ANR	1921338	ArgumentList	IS_NULL		1921274	1					
ANR	1921339	Argument	IS_NULL		1921274	0					
ANR	1921340	Identifier	IS_NULL		1921274	0					
ANR	1921341	ReturnStatement	"return master_to_xml ( enc , data , style , parent ) ;"	2008:1:64678:64724	1921274	3	True				
ANR	1921342	CallExpression	"master_to_xml ( enc , data , style , parent )"		1921274	0					
ANR	1921343	Callee	master_to_xml		1921274	0					
ANR	1921344	Identifier	master_to_xml		1921274	0					
ANR	1921345	ArgumentList	enc		1921274	1					
ANR	1921346	Argument	enc		1921274	0					
ANR	1921347	Identifier	enc		1921274	0					
ANR	1921348	Argument	data		1921274	1					
ANR	1921349	Identifier	data		1921274	0					
ANR	1921350	Argument	style		1921274	2					
ANR	1921351	Identifier	style		1921274	0					
ANR	1921352	Argument	parent		1921274	3					
ANR	1921353	Identifier	parent		1921274	0					
ANR	1921354	ReturnType	static xmlNodePtr		1921274	1					
ANR	1921355	Identifier	guess_array_map		1921274	2					
ANR	1921356	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1921274	3					
ANR	1921357	Parameter	encodeTypePtr type	1993:34:64378:64395	1921274	0	True				
ANR	1921358	ParameterType	encodeTypePtr		1921274	0					
ANR	1921359	Identifier	type		1921274	1					
ANR	1921360	Parameter	zval * data	1993:54:64398:64407	1921274	1	True				
ANR	1921361	ParameterType	zval *		1921274	0					
ANR	1921362	Identifier	data		1921274	1					
ANR	1921363	Parameter	int style	1993:66:64410:64418	1921274	2	True				
ANR	1921364	ParameterType	int		1921274	0					
ANR	1921365	Identifier	style		1921274	1					
ANR	1921366	Parameter	xmlNodePtr parent	1993:77:64421:64437	1921274	3	True				
ANR	1921367	ParameterType	xmlNodePtr		1921274	0					
ANR	1921368	Identifier	parent		1921274	1					
ANR	1921369	CFGEntryNode	ENTRY		1921274		True				
ANR	1921370	CFGExitNode	EXIT		1921274		True				
ANR	1921371	Symbol	APACHE_MAP		1921274						
ANR	1921372	Symbol	parent		1921274						
ANR	1921373	Symbol	NULL		1921274						
ANR	1921374	Symbol	data		1921274						
ANR	1921375	Symbol	is_map		1921274						
ANR	1921376	Symbol	get_conversion		1921274						
ANR	1921377	Symbol	type		1921274						
ANR	1921378	Symbol	Z_TYPE_P		1921274						
ANR	1921379	Symbol	SOAP_ENC_ARRAY		1921274						
ANR	1921380	Symbol	IS_NULL		1921274						
ANR	1921381	Symbol	IS_ARRAY		1921274						
ANR	1921382	Symbol	style		1921274						
ANR	1921383	Symbol	enc		1921274						
ANR	1921384	Symbol	master_to_xml		1921274						
ANR	1921385	Function	calc_dimension_12	2011:0:64729:65199							
ANR	1921386	FunctionDef	calc_dimension_12 (const char * str)		1921385	0					
ANR	1921387	CompoundStatement		2012:0:64775:65199	1921385	0					
ANR	1921388	IdentifierDeclStatement	"int i = 0 , flag = 0 ;"	2013:1:64778:64797	1921385	0	True				
ANR	1921389	IdentifierDecl	i = 0		1921385	0					
ANR	1921390	IdentifierDeclType	int		1921385	0					
ANR	1921391	Identifier	i		1921385	1					
ANR	1921392	AssignmentExpression	i = 0		1921385	2		=			
ANR	1921393	Identifier	i		1921385	0					
ANR	1921394	PrimaryExpression	0		1921385	1					
ANR	1921395	IdentifierDecl	flag = 0		1921385	1					
ANR	1921396	IdentifierDeclType	int		1921385	0					
ANR	1921397	Identifier	flag		1921385	1					
ANR	1921398	AssignmentExpression	flag = 0		1921385	2		=			
ANR	1921399	Identifier	flag		1921385	0					
ANR	1921400	PrimaryExpression	0		1921385	1					
ANR	1921401	WhileStatement	while ( * str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' ) )		1921385	1					
ANR	1921402	Condition	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )	2014:8:64807:64865	1921385	0	True				
ANR	1921403	AndExpression	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )		1921385	0		&&			
ANR	1921404	EqualityExpression	* str != '\\0'		1921385	0		!=			
ANR	1921405	UnaryOperationExpression	* str		1921385	0					
ANR	1921406	UnaryOperator	*		1921385	0					
ANR	1921407	Identifier	str		1921385	1					
ANR	1921408	PrimaryExpression	'\\0'		1921385	1					
ANR	1921409	AndExpression	( * str < '0' || * str > '9' ) && ( * str != '*' )		1921385	1		&&			
ANR	1921410	OrExpression	* str < '0' || * str > '9'		1921385	0		||			
ANR	1921411	RelationalExpression	* str < '0'		1921385	0		<			
ANR	1921412	UnaryOperationExpression	* str		1921385	0					
ANR	1921413	UnaryOperator	*		1921385	0					
ANR	1921414	Identifier	str		1921385	1					
ANR	1921415	PrimaryExpression	'0'		1921385	1					
ANR	1921416	RelationalExpression	* str > '9'		1921385	1		>			
ANR	1921417	UnaryOperationExpression	* str		1921385	0					
ANR	1921418	UnaryOperator	*		1921385	0					
ANR	1921419	Identifier	str		1921385	1					
ANR	1921420	PrimaryExpression	'9'		1921385	1					
ANR	1921421	EqualityExpression	* str != '*'		1921385	1		!=			
ANR	1921422	UnaryOperationExpression	* str		1921385	0					
ANR	1921423	UnaryOperator	*		1921385	0					
ANR	1921424	Identifier	str		1921385	1					
ANR	1921425	PrimaryExpression	'*'		1921385	1					
ANR	1921426	CompoundStatement		3:69:92:92	1921385	1					
ANR	1921427	ExpressionStatement	str ++	2015:2:64872:64877	1921385	0	True				
ANR	1921428	PostIncDecOperationExpression	str ++		1921385	0					
ANR	1921429	Identifier	str		1921385	0					
ANR	1921430	IncDec	++		1921385	1					
ANR	1921431	IfStatement	if ( * str == '*' )		1921385	2					
ANR	1921432	Condition	* str == '*'	2017:5:64887:64897	1921385	0	True				
ANR	1921433	EqualityExpression	* str == '*'		1921385	0		==			
ANR	1921434	UnaryOperationExpression	* str		1921385	0					
ANR	1921435	UnaryOperator	*		1921385	0					
ANR	1921436	Identifier	str		1921385	1					
ANR	1921437	PrimaryExpression	'*'		1921385	1					
ANR	1921438	CompoundStatement		6:18:124:124	1921385	1					
ANR	1921439	ExpressionStatement	i ++	2018:2:64904:64907	1921385	0	True				
ANR	1921440	PostIncDecOperationExpression	i ++		1921385	0					
ANR	1921441	Identifier	i		1921385	0					
ANR	1921442	IncDec	++		1921385	1					
ANR	1921443	ExpressionStatement	str ++	2019:2:64911:64916	1921385	1	True				
ANR	1921444	PostIncDecOperationExpression	str ++		1921385	0					
ANR	1921445	Identifier	str		1921385	0					
ANR	1921446	IncDec	++		1921385	1					
ANR	1921447	WhileStatement	while ( * str != '\\0' )		1921385	3					
ANR	1921448	Condition	* str != '\\0'	2021:8:64929:64940	1921385	0	True				
ANR	1921449	EqualityExpression	* str != '\\0'		1921385	0		!=			
ANR	1921450	UnaryOperationExpression	* str		1921385	0					
ANR	1921451	UnaryOperator	*		1921385	0					
ANR	1921452	Identifier	str		1921385	1					
ANR	1921453	PrimaryExpression	'\\0'		1921385	1					
ANR	1921454	CompoundStatement		10:22:167:167	1921385	1					
ANR	1921455	IfStatement	if ( * str >= '0' && * str <= '9' )		1921385	0					
ANR	1921456	Condition	* str >= '0' && * str <= '9'	2022:6:64951:64976	1921385	0	True				
ANR	1921457	AndExpression	* str >= '0' && * str <= '9'		1921385	0		&&			
ANR	1921458	RelationalExpression	* str >= '0'		1921385	0		>=			
ANR	1921459	UnaryOperationExpression	* str		1921385	0					
ANR	1921460	UnaryOperator	*		1921385	0					
ANR	1921461	Identifier	str		1921385	1					
ANR	1921462	PrimaryExpression	'0'		1921385	1					
ANR	1921463	RelationalExpression	* str <= '9'		1921385	1		<=			
ANR	1921464	UnaryOperationExpression	* str		1921385	0					
ANR	1921465	UnaryOperator	*		1921385	0					
ANR	1921466	Identifier	str		1921385	1					
ANR	1921467	PrimaryExpression	'9'		1921385	1					
ANR	1921468	CompoundStatement		11:34:203:203	1921385	1					
ANR	1921469	IfStatement	if ( flag == 0 )		1921385	0					
ANR	1921470	Condition	flag == 0	2023:7:64988:64996	1921385	0	True				
ANR	1921471	EqualityExpression	flag == 0		1921385	0		==			
ANR	1921472	Identifier	flag		1921385	0					
ANR	1921473	PrimaryExpression	0		1921385	1					
ANR	1921474	CompoundStatement		12:18:223:223	1921385	1					
ANR	1921475	ExpressionStatement	i ++	2024:6:65007:65010	1921385	0	True				
ANR	1921476	PostIncDecOperationExpression	i ++		1921385	0					
ANR	1921477	Identifier	i		1921385	0					
ANR	1921478	IncDec	++		1921385	1					
ANR	1921479	ExpressionStatement	flag = 1	2025:6:65018:65026	1921385	1	True				
ANR	1921480	AssignmentExpression	flag = 1		1921385	0		=			
ANR	1921481	Identifier	flag		1921385	0					
ANR	1921482	PrimaryExpression	1		1921385	1					
ANR	1921483	ElseStatement	else		1921385	0					
ANR	1921484	IfStatement	if ( * str == '*' )		1921385	0					
ANR	1921485	Condition	* str == '*'	2027:14:65049:65059	1921385	0	True				
ANR	1921486	EqualityExpression	* str == '*'		1921385	0		==			
ANR	1921487	UnaryOperationExpression	* str		1921385	0					
ANR	1921488	UnaryOperator	*		1921385	0					
ANR	1921489	Identifier	str		1921385	1					
ANR	1921490	PrimaryExpression	'*'		1921385	1					
ANR	1921491	CompoundStatement		16:27:286:286	1921385	1					
ANR	1921492	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"	2028:3:65067:65146	1921385	0	True				
ANR	1921493	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"		1921385	0					
ANR	1921494	Callee	soap_error0		1921385	0					
ANR	1921495	Identifier	soap_error0		1921385	0					
ANR	1921496	ArgumentList	E_ERROR		1921385	1					
ANR	1921497	Argument	E_ERROR		1921385	0					
ANR	1921498	Identifier	E_ERROR		1921385	0					
ANR	1921499	Argument	"""Encoding: '*' may only be first arraySize value in list"""		1921385	1					
ANR	1921500	PrimaryExpression	"""Encoding: '*' may only be first arraySize value in list"""		1921385	0					
ANR	1921501	ElseStatement	else		1921385	0					
ANR	1921502	CompoundStatement		18:9:381:381	1921385	0					
ANR	1921503	ExpressionStatement	flag = 0	2030:3:65162:65170	1921385	0	True				
ANR	1921504	AssignmentExpression	flag = 0		1921385	0		=			
ANR	1921505	Identifier	flag		1921385	0					
ANR	1921506	PrimaryExpression	0		1921385	1					
ANR	1921507	ExpressionStatement	str ++	2032:2:65178:65183	1921385	1	True				
ANR	1921508	PostIncDecOperationExpression	str ++		1921385	0					
ANR	1921509	Identifier	str		1921385	0					
ANR	1921510	IncDec	++		1921385	1					
ANR	1921511	ReturnStatement	return i ;	2034:1:65189:65197	1921385	4	True				
ANR	1921512	Identifier	i		1921385	0					
ANR	1921513	ReturnType	static int		1921385	1					
ANR	1921514	Identifier	calc_dimension_12		1921385	2					
ANR	1921515	ParameterList	const char * str		1921385	3					
ANR	1921516	Parameter	const char * str	2011:29:64758:64772	1921385	0	True				
ANR	1921517	ParameterType	const char *		1921385	0					
ANR	1921518	Identifier	str		1921385	1					
ANR	1921519	CFGEntryNode	ENTRY		1921385		True				
ANR	1921520	CFGExitNode	EXIT		1921385		True				
ANR	1921521	Symbol	str		1921385						
ANR	1921522	Symbol	flag		1921385						
ANR	1921523	Symbol	E_ERROR		1921385						
ANR	1921524	Symbol	i		1921385						
ANR	1921525	Symbol	* str		1921385						
ANR	1921526	Function	get_position_12	2037:0:65202:65817							
ANR	1921527	FunctionDef	"get_position_12 (int dimension , const char * str)"		1921526	0					
ANR	1921528	CompoundStatement		2038:0:65262:65817	1921526	0					
ANR	1921529	IdentifierDeclStatement	int * pos ;	2039:1:65265:65273	1921526	0	True				
ANR	1921530	IdentifierDecl	* pos		1921526	0					
ANR	1921531	IdentifierDeclType	int *		1921526	0					
ANR	1921532	Identifier	pos		1921526	1					
ANR	1921533	IdentifierDeclStatement	"int i = - 1 , flag = 0 ;"	2040:1:65276:65296	1921526	1	True				
ANR	1921534	IdentifierDecl	i = - 1		1921526	0					
ANR	1921535	IdentifierDeclType	int		1921526	0					
ANR	1921536	Identifier	i		1921526	1					
ANR	1921537	AssignmentExpression	i = - 1		1921526	2		=			
ANR	1921538	Identifier	i		1921526	0					
ANR	1921539	UnaryOperationExpression	- 1		1921526	1					
ANR	1921540	UnaryOperator	-		1921526	0					
ANR	1921541	PrimaryExpression	1		1921526	1					
ANR	1921542	IdentifierDecl	flag = 0		1921526	1					
ANR	1921543	IdentifierDeclType	int		1921526	0					
ANR	1921544	Identifier	flag		1921526	1					
ANR	1921545	AssignmentExpression	flag = 0		1921526	2		=			
ANR	1921546	Identifier	flag		1921526	0					
ANR	1921547	PrimaryExpression	0		1921526	1					
ANR	1921548	ExpressionStatement	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"	2042:1:65300:65345	1921526	2	True				
ANR	1921549	AssignmentExpression	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1921526	0		=			
ANR	1921550	Identifier	pos		1921526	0					
ANR	1921551	CallExpression	"safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1921526	1					
ANR	1921552	Callee	safe_emalloc		1921526	0					
ANR	1921553	Identifier	safe_emalloc		1921526	0					
ANR	1921554	ArgumentList	sizeof ( int )		1921526	1					
ANR	1921555	Argument	sizeof ( int )		1921526	0					
ANR	1921556	SizeofExpression	sizeof ( int )		1921526	0					
ANR	1921557	Sizeof	sizeof		1921526	0					
ANR	1921558	SizeofOperand	int		1921526	1					
ANR	1921559	Argument	dimension		1921526	1					
ANR	1921560	Identifier	dimension		1921526	0					
ANR	1921561	Argument	0		1921526	2					
ANR	1921562	PrimaryExpression	0		1921526	0					
ANR	1921563	ExpressionStatement	"memset ( pos , 0 , sizeof ( int ) * dimension )"	2043:1:65348:65383	1921526	3	True				
ANR	1921564	CallExpression	"memset ( pos , 0 , sizeof ( int ) * dimension )"		1921526	0					
ANR	1921565	Callee	memset		1921526	0					
ANR	1921566	Identifier	memset		1921526	0					
ANR	1921567	ArgumentList	pos		1921526	1					
ANR	1921568	Argument	pos		1921526	0					
ANR	1921569	Identifier	pos		1921526	0					
ANR	1921570	Argument	0		1921526	1					
ANR	1921571	PrimaryExpression	0		1921526	0					
ANR	1921572	Argument	sizeof ( int ) * dimension		1921526	2					
ANR	1921573	MultiplicativeExpression	sizeof ( int ) * dimension		1921526	0		*			
ANR	1921574	SizeofExpression	sizeof ( int )		1921526	0					
ANR	1921575	Sizeof	sizeof		1921526	0					
ANR	1921576	SizeofOperand	int		1921526	1					
ANR	1921577	Identifier	dimension		1921526	1					
ANR	1921578	WhileStatement	while ( * str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' ) )		1921526	4					
ANR	1921579	Condition	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )	2044:8:65393:65451	1921526	0	True				
ANR	1921580	AndExpression	* str != '\\0' && ( * str < '0' || * str > '9' ) && ( * str != '*' )		1921526	0		&&			
ANR	1921581	EqualityExpression	* str != '\\0'		1921526	0		!=			
ANR	1921582	UnaryOperationExpression	* str		1921526	0					
ANR	1921583	UnaryOperator	*		1921526	0					
ANR	1921584	Identifier	str		1921526	1					
ANR	1921585	PrimaryExpression	'\\0'		1921526	1					
ANR	1921586	AndExpression	( * str < '0' || * str > '9' ) && ( * str != '*' )		1921526	1		&&			
ANR	1921587	OrExpression	* str < '0' || * str > '9'		1921526	0		||			
ANR	1921588	RelationalExpression	* str < '0'		1921526	0		<			
ANR	1921589	UnaryOperationExpression	* str		1921526	0					
ANR	1921590	UnaryOperator	*		1921526	0					
ANR	1921591	Identifier	str		1921526	1					
ANR	1921592	PrimaryExpression	'0'		1921526	1					
ANR	1921593	RelationalExpression	* str > '9'		1921526	1		>			
ANR	1921594	UnaryOperationExpression	* str		1921526	0					
ANR	1921595	UnaryOperator	*		1921526	0					
ANR	1921596	Identifier	str		1921526	1					
ANR	1921597	PrimaryExpression	'9'		1921526	1					
ANR	1921598	EqualityExpression	* str != '*'		1921526	1		!=			
ANR	1921599	UnaryOperationExpression	* str		1921526	0					
ANR	1921600	UnaryOperator	*		1921526	0					
ANR	1921601	Identifier	str		1921526	1					
ANR	1921602	PrimaryExpression	'*'		1921526	1					
ANR	1921603	CompoundStatement		7:69:191:191	1921526	1					
ANR	1921604	ExpressionStatement	str ++	2045:2:65458:65463	1921526	0	True				
ANR	1921605	PostIncDecOperationExpression	str ++		1921526	0					
ANR	1921606	Identifier	str		1921526	0					
ANR	1921607	IncDec	++		1921526	1					
ANR	1921608	IfStatement	if ( * str == '*' )		1921526	5					
ANR	1921609	Condition	* str == '*'	2047:5:65473:65483	1921526	0	True				
ANR	1921610	EqualityExpression	* str == '*'		1921526	0		==			
ANR	1921611	UnaryOperationExpression	* str		1921526	0					
ANR	1921612	UnaryOperator	*		1921526	0					
ANR	1921613	Identifier	str		1921526	1					
ANR	1921614	PrimaryExpression	'*'		1921526	1					
ANR	1921615	CompoundStatement		10:18:223:223	1921526	1					
ANR	1921616	ExpressionStatement	str ++	2048:2:65490:65495	1921526	0	True				
ANR	1921617	PostIncDecOperationExpression	str ++		1921526	0					
ANR	1921618	Identifier	str		1921526	0					
ANR	1921619	IncDec	++		1921526	1					
ANR	1921620	ExpressionStatement	i ++	2049:2:65499:65502	1921526	1	True				
ANR	1921621	PostIncDecOperationExpression	i ++		1921526	0					
ANR	1921622	Identifier	i		1921526	0					
ANR	1921623	IncDec	++		1921526	1					
ANR	1921624	WhileStatement	while ( * str != '\\0' )		1921526	6					
ANR	1921625	Condition	* str != '\\0'	2051:8:65515:65526	1921526	0	True				
ANR	1921626	EqualityExpression	* str != '\\0'		1921526	0		!=			
ANR	1921627	UnaryOperationExpression	* str		1921526	0					
ANR	1921628	UnaryOperator	*		1921526	0					
ANR	1921629	Identifier	str		1921526	1					
ANR	1921630	PrimaryExpression	'\\0'		1921526	1					
ANR	1921631	CompoundStatement		14:22:266:266	1921526	1					
ANR	1921632	IfStatement	if ( * str >= '0' && * str <= '9' )		1921526	0					
ANR	1921633	Condition	* str >= '0' && * str <= '9'	2052:6:65537:65562	1921526	0	True				
ANR	1921634	AndExpression	* str >= '0' && * str <= '9'		1921526	0		&&			
ANR	1921635	RelationalExpression	* str >= '0'		1921526	0		>=			
ANR	1921636	UnaryOperationExpression	* str		1921526	0					
ANR	1921637	UnaryOperator	*		1921526	0					
ANR	1921638	Identifier	str		1921526	1					
ANR	1921639	PrimaryExpression	'0'		1921526	1					
ANR	1921640	RelationalExpression	* str <= '9'		1921526	1		<=			
ANR	1921641	UnaryOperationExpression	* str		1921526	0					
ANR	1921642	UnaryOperator	*		1921526	0					
ANR	1921643	Identifier	str		1921526	1					
ANR	1921644	PrimaryExpression	'9'		1921526	1					
ANR	1921645	CompoundStatement		15:34:302:302	1921526	1					
ANR	1921646	IfStatement	if ( flag == 0 )		1921526	0					
ANR	1921647	Condition	flag == 0	2053:7:65574:65582	1921526	0	True				
ANR	1921648	EqualityExpression	flag == 0		1921526	0		==			
ANR	1921649	Identifier	flag		1921526	0					
ANR	1921650	PrimaryExpression	0		1921526	1					
ANR	1921651	CompoundStatement		16:18:322:322	1921526	1					
ANR	1921652	ExpressionStatement	i ++	2054:4:65591:65594	1921526	0	True				
ANR	1921653	PostIncDecOperationExpression	i ++		1921526	0					
ANR	1921654	Identifier	i		1921526	0					
ANR	1921655	IncDec	++		1921526	1					
ANR	1921656	ExpressionStatement	flag = 1	2055:4:65600:65608	1921526	1	True				
ANR	1921657	AssignmentExpression	flag = 1		1921526	0		=			
ANR	1921658	Identifier	flag		1921526	0					
ANR	1921659	PrimaryExpression	1		1921526	1					
ANR	1921660	ExpressionStatement	pos [ i ] = ( pos [ i ] * 10 ) + ( * str - '0' )	2057:3:65618:65649	1921526	1	True				
ANR	1921661	AssignmentExpression	pos [ i ] = ( pos [ i ] * 10 ) + ( * str - '0' )		1921526	0		=			
ANR	1921662	ArrayIndexing	pos [ i ]		1921526	0					
ANR	1921663	Identifier	pos		1921526	0					
ANR	1921664	Identifier	i		1921526	1					
ANR	1921665	AdditiveExpression	( pos [ i ] * 10 ) + ( * str - '0' )		1921526	1		+			
ANR	1921666	MultiplicativeExpression	pos [ i ] * 10		1921526	0		*			
ANR	1921667	ArrayIndexing	pos [ i ]		1921526	0					
ANR	1921668	Identifier	pos		1921526	0					
ANR	1921669	Identifier	i		1921526	1					
ANR	1921670	PrimaryExpression	10		1921526	1					
ANR	1921671	AdditiveExpression	* str - '0'		1921526	1		-			
ANR	1921672	UnaryOperationExpression	* str		1921526	0					
ANR	1921673	UnaryOperator	*		1921526	0					
ANR	1921674	Identifier	str		1921526	1					
ANR	1921675	PrimaryExpression	'0'		1921526	1					
ANR	1921676	ElseStatement	else		1921526	0					
ANR	1921677	IfStatement	if ( * str == '*' )		1921526	0					
ANR	1921678	Condition	* str == '*'	2058:13:65664:65674	1921526	0	True				
ANR	1921679	EqualityExpression	* str == '*'		1921526	0		==			
ANR	1921680	UnaryOperationExpression	* str		1921526	0					
ANR	1921681	UnaryOperator	*		1921526	0					
ANR	1921682	Identifier	str		1921526	1					
ANR	1921683	PrimaryExpression	'*'		1921526	1					
ANR	1921684	CompoundStatement		21:26:414:414	1921526	1					
ANR	1921685	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"	2059:3:65682:65761	1921526	0	True				
ANR	1921686	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: '*' may only be first arraySize value in list"" )"		1921526	0					
ANR	1921687	Callee	soap_error0		1921526	0					
ANR	1921688	Identifier	soap_error0		1921526	0					
ANR	1921689	ArgumentList	E_ERROR		1921526	1					
ANR	1921690	Argument	E_ERROR		1921526	0					
ANR	1921691	Identifier	E_ERROR		1921526	0					
ANR	1921692	Argument	"""Encoding: '*' may only be first arraySize value in list"""		1921526	1					
ANR	1921693	PrimaryExpression	"""Encoding: '*' may only be first arraySize value in list"""		1921526	0					
ANR	1921694	ElseStatement	else		1921526	0					
ANR	1921695	CompoundStatement		23:9:509:509	1921526	0					
ANR	1921696	ExpressionStatement	flag = 0	2061:4:65778:65786	1921526	0	True				
ANR	1921697	AssignmentExpression	flag = 0		1921526	0		=			
ANR	1921698	Identifier	flag		1921526	0					
ANR	1921699	PrimaryExpression	0		1921526	1					
ANR	1921700	ExpressionStatement	str ++	2063:2:65794:65799	1921526	1	True				
ANR	1921701	PostIncDecOperationExpression	str ++		1921526	0					
ANR	1921702	Identifier	str		1921526	0					
ANR	1921703	IncDec	++		1921526	1					
ANR	1921704	ReturnStatement	return pos ;	2065:1:65805:65815	1921526	7	True				
ANR	1921705	Identifier	pos		1921526	0					
ANR	1921706	ReturnType	static int *		1921526	1					
ANR	1921707	Identifier	get_position_12		1921526	2					
ANR	1921708	ParameterList	"int dimension , const char * str"		1921526	3					
ANR	1921709	Parameter	int dimension	2037:28:65230:65242	1921526	0	True				
ANR	1921710	ParameterType	int		1921526	0					
ANR	1921711	Identifier	dimension		1921526	1					
ANR	1921712	Parameter	const char * str	2037:43:65245:65259	1921526	1	True				
ANR	1921713	ParameterType	const char *		1921526	0					
ANR	1921714	Identifier	str		1921526	1					
ANR	1921715	CFGEntryNode	ENTRY		1921526		True				
ANR	1921716	CFGExitNode	EXIT		1921526		True				
ANR	1921717	Symbol	str		1921526						
ANR	1921718	Symbol	flag		1921526						
ANR	1921719	Symbol	* i		1921526						
ANR	1921720	Symbol	E_ERROR		1921526						
ANR	1921721	Symbol	pos		1921526						
ANR	1921722	Symbol	i		1921526						
ANR	1921723	Symbol	* str		1921526						
ANR	1921724	Symbol	dimension		1921526						
ANR	1921725	Symbol	safe_emalloc		1921526						
ANR	1921726	Symbol	* pos		1921526						
ANR	1921727	Function	calc_dimension	2068:0:65820:65975							
ANR	1921728	FunctionDef	calc_dimension (const char * str)		1921727	0					
ANR	1921729	CompoundStatement		2069:0:65863:65975	1921727	0					
ANR	1921730	IdentifierDeclStatement	int i = 1 ;	2070:1:65866:65875	1921727	0	True				
ANR	1921731	IdentifierDecl	i = 1		1921727	0					
ANR	1921732	IdentifierDeclType	int		1921727	0					
ANR	1921733	Identifier	i		1921727	1					
ANR	1921734	AssignmentExpression	i = 1		1921727	2		=			
ANR	1921735	Identifier	i		1921727	0					
ANR	1921736	PrimaryExpression	1		1921727	1					
ANR	1921737	WhileStatement	while ( * str != ']' && * str != '\\0' )		1921727	1					
ANR	1921738	Condition	* str != ']' && * str != '\\0'	2071:8:65885:65911	1921727	0	True				
ANR	1921739	AndExpression	* str != ']' && * str != '\\0'		1921727	0		&&			
ANR	1921740	EqualityExpression	* str != ']'		1921727	0		!=			
ANR	1921741	UnaryOperationExpression	* str		1921727	0					
ANR	1921742	UnaryOperator	*		1921727	0					
ANR	1921743	Identifier	str		1921727	1					
ANR	1921744	PrimaryExpression	']'		1921727	1					
ANR	1921745	EqualityExpression	* str != '\\0'		1921727	1		!=			
ANR	1921746	UnaryOperationExpression	* str		1921727	0					
ANR	1921747	UnaryOperator	*		1921727	0					
ANR	1921748	Identifier	str		1921727	1					
ANR	1921749	PrimaryExpression	'\\0'		1921727	1					
ANR	1921750	CompoundStatement		3:37:50:50	1921727	1					
ANR	1921751	IfStatement	"if ( * str == ',' )"		1921727	0					
ANR	1921752	Condition	"* str == ','"	2072:6:65922:65932	1921727	0	True				
ANR	1921753	EqualityExpression	"* str == ','"		1921727	0		==			
ANR	1921754	UnaryOperationExpression	* str		1921727	0					
ANR	1921755	UnaryOperator	*		1921727	0					
ANR	1921756	Identifier	str		1921727	1					
ANR	1921757	PrimaryExpression	"','"		1921727	1					
ANR	1921758	CompoundStatement		4:19:71:71	1921727	1					
ANR	1921759	ExpressionStatement	i ++	2073:6:65943:65946	1921727	0	True				
ANR	1921760	PostIncDecOperationExpression	i ++		1921727	0					
ANR	1921761	Identifier	i		1921727	0					
ANR	1921762	IncDec	++		1921727	1					
ANR	1921763	ExpressionStatement	str ++	2075:2:65954:65959	1921727	1	True				
ANR	1921764	PostIncDecOperationExpression	str ++		1921727	0					
ANR	1921765	Identifier	str		1921727	0					
ANR	1921766	IncDec	++		1921727	1					
ANR	1921767	ReturnStatement	return i ;	2077:1:65965:65973	1921727	2	True				
ANR	1921768	Identifier	i		1921727	0					
ANR	1921769	ReturnType	static int		1921727	1					
ANR	1921770	Identifier	calc_dimension		1921727	2					
ANR	1921771	ParameterList	const char * str		1921727	3					
ANR	1921772	Parameter	const char * str	2068:26:65846:65860	1921727	0	True				
ANR	1921773	ParameterType	const char *		1921727	0					
ANR	1921774	Identifier	str		1921727	1					
ANR	1921775	CFGEntryNode	ENTRY		1921727		True				
ANR	1921776	CFGExitNode	EXIT		1921727		True				
ANR	1921777	Symbol	str		1921727						
ANR	1921778	Symbol	i		1921727						
ANR	1921779	Symbol	* str		1921727						
ANR	1921780	Function	get_position_ex	2080:0:65978:66289							
ANR	1921781	FunctionDef	"get_position_ex (int dimension , const char * str , int * * pos)"		1921780	0					
ANR	1921782	CompoundStatement		2081:0:66049:66289	1921780	0					
ANR	1921783	IdentifierDeclStatement	int i = 0 ;	2082:1:66052:66061	1921780	0	True				
ANR	1921784	IdentifierDecl	i = 0		1921780	0					
ANR	1921785	IdentifierDeclType	int		1921780	0					
ANR	1921786	Identifier	i		1921780	1					
ANR	1921787	AssignmentExpression	i = 0		1921780	2		=			
ANR	1921788	Identifier	i		1921780	0					
ANR	1921789	PrimaryExpression	0		1921780	1					
ANR	1921790	ExpressionStatement	"memset ( * pos , 0 , sizeof ( int ) * dimension )"	2084:1:66065:66101	1921780	1	True				
ANR	1921791	CallExpression	"memset ( * pos , 0 , sizeof ( int ) * dimension )"		1921780	0					
ANR	1921792	Callee	memset		1921780	0					
ANR	1921793	Identifier	memset		1921780	0					
ANR	1921794	ArgumentList	* pos		1921780	1					
ANR	1921795	Argument	* pos		1921780	0					
ANR	1921796	UnaryOperationExpression	* pos		1921780	0					
ANR	1921797	UnaryOperator	*		1921780	0					
ANR	1921798	Identifier	pos		1921780	1					
ANR	1921799	Argument	0		1921780	1					
ANR	1921800	PrimaryExpression	0		1921780	0					
ANR	1921801	Argument	sizeof ( int ) * dimension		1921780	2					
ANR	1921802	MultiplicativeExpression	sizeof ( int ) * dimension		1921780	0		*			
ANR	1921803	SizeofExpression	sizeof ( int )		1921780	0					
ANR	1921804	Sizeof	sizeof		1921780	0					
ANR	1921805	SizeofOperand	int		1921780	1					
ANR	1921806	Identifier	dimension		1921780	1					
ANR	1921807	WhileStatement	while ( * str != ']' && * str != '\\0' && i < dimension )		1921780	2					
ANR	1921808	Condition	* str != ']' && * str != '\\0' && i < dimension	2085:8:66111:66154	1921780	0	True				
ANR	1921809	AndExpression	* str != ']' && * str != '\\0' && i < dimension		1921780	0		&&			
ANR	1921810	EqualityExpression	* str != ']'		1921780	0		!=			
ANR	1921811	UnaryOperationExpression	* str		1921780	0					
ANR	1921812	UnaryOperator	*		1921780	0					
ANR	1921813	Identifier	str		1921780	1					
ANR	1921814	PrimaryExpression	']'		1921780	1					
ANR	1921815	AndExpression	* str != '\\0' && i < dimension		1921780	1		&&			
ANR	1921816	EqualityExpression	* str != '\\0'		1921780	0		!=			
ANR	1921817	UnaryOperationExpression	* str		1921780	0					
ANR	1921818	UnaryOperator	*		1921780	0					
ANR	1921819	Identifier	str		1921780	1					
ANR	1921820	PrimaryExpression	'\\0'		1921780	1					
ANR	1921821	RelationalExpression	i < dimension		1921780	1		<			
ANR	1921822	Identifier	i		1921780	0					
ANR	1921823	Identifier	dimension		1921780	1					
ANR	1921824	CompoundStatement		5:54:107:107	1921780	1					
ANR	1921825	IfStatement	if ( * str >= '0' && * str <= '9' )		1921780	0					
ANR	1921826	Condition	* str >= '0' && * str <= '9'	2086:6:66165:66190	1921780	0	True				
ANR	1921827	AndExpression	* str >= '0' && * str <= '9'		1921780	0		&&			
ANR	1921828	RelationalExpression	* str >= '0'		1921780	0		>=			
ANR	1921829	UnaryOperationExpression	* str		1921780	0					
ANR	1921830	UnaryOperator	*		1921780	0					
ANR	1921831	Identifier	str		1921780	1					
ANR	1921832	PrimaryExpression	'0'		1921780	1					
ANR	1921833	RelationalExpression	* str <= '9'		1921780	1		<=			
ANR	1921834	UnaryOperationExpression	* str		1921780	0					
ANR	1921835	UnaryOperator	*		1921780	0					
ANR	1921836	Identifier	str		1921780	1					
ANR	1921837	PrimaryExpression	'9'		1921780	1					
ANR	1921838	CompoundStatement		6:34:143:143	1921780	1					
ANR	1921839	ExpressionStatement	( * pos ) [ i ] = ( ( * pos ) [ i ] * 10 ) + ( * str - '0' )	2087:3:66198:66235	1921780	0	True				
ANR	1921840	AssignmentExpression	( * pos ) [ i ] = ( ( * pos ) [ i ] * 10 ) + ( * str - '0' )		1921780	0		=			
ANR	1921841	ArrayIndexing	( * pos ) [ i ]		1921780	0					
ANR	1921842	UnaryOperationExpression	* pos		1921780	0					
ANR	1921843	UnaryOperator	*		1921780	0					
ANR	1921844	Identifier	pos		1921780	1					
ANR	1921845	Identifier	i		1921780	1					
ANR	1921846	AdditiveExpression	( ( * pos ) [ i ] * 10 ) + ( * str - '0' )		1921780	1		+			
ANR	1921847	MultiplicativeExpression	( * pos ) [ i ] * 10		1921780	0		*			
ANR	1921848	ArrayIndexing	( * pos ) [ i ]		1921780	0					
ANR	1921849	UnaryOperationExpression	* pos		1921780	0					
ANR	1921850	UnaryOperator	*		1921780	0					
ANR	1921851	Identifier	pos		1921780	1					
ANR	1921852	Identifier	i		1921780	1					
ANR	1921853	PrimaryExpression	10		1921780	1					
ANR	1921854	AdditiveExpression	* str - '0'		1921780	1		-			
ANR	1921855	UnaryOperationExpression	* str		1921780	0					
ANR	1921856	UnaryOperator	*		1921780	0					
ANR	1921857	Identifier	str		1921780	1					
ANR	1921858	PrimaryExpression	'0'		1921780	1					
ANR	1921859	ElseStatement	else		1921780	0					
ANR	1921860	IfStatement	"if ( * str == ',' )"		1921780	0					
ANR	1921861	Condition	"* str == ','"	2088:13:66250:66260	1921780	0	True				
ANR	1921862	EqualityExpression	"* str == ','"		1921780	0		==			
ANR	1921863	UnaryOperationExpression	* str		1921780	0					
ANR	1921864	UnaryOperator	*		1921780	0					
ANR	1921865	Identifier	str		1921780	1					
ANR	1921866	PrimaryExpression	"','"		1921780	1					
ANR	1921867	CompoundStatement		8:26:213:213	1921780	1					
ANR	1921868	ExpressionStatement	i ++	2089:3:66268:66271	1921780	0	True				
ANR	1921869	PostIncDecOperationExpression	i ++		1921780	0					
ANR	1921870	Identifier	i		1921780	0					
ANR	1921871	IncDec	++		1921780	1					
ANR	1921872	ExpressionStatement	str ++	2091:2:66279:66284	1921780	1	True				
ANR	1921873	PostIncDecOperationExpression	str ++		1921780	0					
ANR	1921874	Identifier	str		1921780	0					
ANR	1921875	IncDec	++		1921780	1					
ANR	1921876	ReturnType	static void		1921780	1					
ANR	1921877	Identifier	get_position_ex		1921780	2					
ANR	1921878	ParameterList	"int dimension , const char * str , int * * pos"		1921780	3					
ANR	1921879	Parameter	int dimension	2080:28:66006:66018	1921780	0	True				
ANR	1921880	ParameterType	int		1921780	0					
ANR	1921881	Identifier	dimension		1921780	1					
ANR	1921882	Parameter	const char * str	2080:43:66021:66035	1921780	1	True				
ANR	1921883	ParameterType	const char *		1921780	0					
ANR	1921884	Identifier	str		1921780	1					
ANR	1921885	Parameter	int * * pos	2080:60:66038:66046	1921780	2	True				
ANR	1921886	ParameterType	int * *		1921780	0					
ANR	1921887	Identifier	pos		1921780	1					
ANR	1921888	CFGEntryNode	ENTRY		1921780		True				
ANR	1921889	CFGExitNode	EXIT		1921780		True				
ANR	1921890	Symbol	str		1921780						
ANR	1921891	Symbol	* i		1921780						
ANR	1921892	Symbol	pos		1921780						
ANR	1921893	Symbol	* * pos		1921780						
ANR	1921894	Symbol	i		1921780						
ANR	1921895	Symbol	* str		1921780						
ANR	1921896	Symbol	dimension		1921780						
ANR	1921897	Symbol	* pos		1921780						
ANR	1921898	Function	get_position	2095:0:66292:66464							
ANR	1921899	FunctionDef	"get_position (int dimension , const char * str)"		1921898	0					
ANR	1921900	CompoundStatement		2096:0:66349:66464	1921898	0					
ANR	1921901	IdentifierDeclStatement	int * pos ;	2097:1:66352:66360	1921898	0	True				
ANR	1921902	IdentifierDecl	* pos		1921898	0					
ANR	1921903	IdentifierDeclType	int *		1921898	0					
ANR	1921904	Identifier	pos		1921898	1					
ANR	1921905	ExpressionStatement	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"	2099:1:66364:66409	1921898	1	True				
ANR	1921906	AssignmentExpression	"pos = safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1921898	0		=			
ANR	1921907	Identifier	pos		1921898	0					
ANR	1921908	CallExpression	"safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1921898	1					
ANR	1921909	Callee	safe_emalloc		1921898	0					
ANR	1921910	Identifier	safe_emalloc		1921898	0					
ANR	1921911	ArgumentList	sizeof ( int )		1921898	1					
ANR	1921912	Argument	sizeof ( int )		1921898	0					
ANR	1921913	SizeofExpression	sizeof ( int )		1921898	0					
ANR	1921914	Sizeof	sizeof		1921898	0					
ANR	1921915	SizeofOperand	int		1921898	1					
ANR	1921916	Argument	dimension		1921898	1					
ANR	1921917	Identifier	dimension		1921898	0					
ANR	1921918	Argument	0		1921898	2					
ANR	1921919	PrimaryExpression	0		1921898	0					
ANR	1921920	ExpressionStatement	"get_position_ex ( dimension , str , & pos )"	2100:1:66412:66449	1921898	2	True				
ANR	1921921	CallExpression	"get_position_ex ( dimension , str , & pos )"		1921898	0					
ANR	1921922	Callee	get_position_ex		1921898	0					
ANR	1921923	Identifier	get_position_ex		1921898	0					
ANR	1921924	ArgumentList	dimension		1921898	1					
ANR	1921925	Argument	dimension		1921898	0					
ANR	1921926	Identifier	dimension		1921898	0					
ANR	1921927	Argument	str		1921898	1					
ANR	1921928	Identifier	str		1921898	0					
ANR	1921929	Argument	& pos		1921898	2					
ANR	1921930	UnaryOperationExpression	& pos		1921898	0					
ANR	1921931	UnaryOperator	&		1921898	0					
ANR	1921932	Identifier	pos		1921898	1					
ANR	1921933	ReturnStatement	return pos ;	2101:1:66452:66462	1921898	3	True				
ANR	1921934	Identifier	pos		1921898	0					
ANR	1921935	ReturnType	static int *		1921898	1					
ANR	1921936	Identifier	get_position		1921898	2					
ANR	1921937	ParameterList	"int dimension , const char * str"		1921898	3					
ANR	1921938	Parameter	int dimension	2095:25:66317:66329	1921898	0	True				
ANR	1921939	ParameterType	int		1921898	0					
ANR	1921940	Identifier	dimension		1921898	1					
ANR	1921941	Parameter	const char * str	2095:40:66332:66346	1921898	1	True				
ANR	1921942	ParameterType	const char *		1921898	0					
ANR	1921943	Identifier	str		1921898	1					
ANR	1921944	CFGEntryNode	ENTRY		1921898		True				
ANR	1921945	CFGExitNode	EXIT		1921898		True				
ANR	1921946	Symbol	str		1921898						
ANR	1921947	Symbol	pos		1921898						
ANR	1921948	Symbol	dimension		1921898						
ANR	1921949	Symbol	safe_emalloc		1921898						
ANR	1921950	Symbol	& pos		1921898						
ANR	1921951	Function	add_xml_array_elements	2104:0:66467:68937							
ANR	1921952	FunctionDef	"add_xml_array_elements (xmlNodePtr xmlParam , sdlTypePtr type , encodePtr enc , xmlNsPtr ns , int dimension , int * dims , zval * data , int style)"		1921951	0					
ANR	1921953	CompoundStatement		2113:0:66898:68937	1921951	0					
ANR	1921954	IdentifierDeclStatement	int j = 0 ;	2114:1:66901:66910	1921951	0	True				
ANR	1921955	IdentifierDecl	j = 0		1921951	0					
ANR	1921956	IdentifierDeclType	int		1921951	0					
ANR	1921957	Identifier	j		1921951	1					
ANR	1921958	AssignmentExpression	j = 0		1921951	2		=			
ANR	1921959	Identifier	j		1921951	0					
ANR	1921960	PrimaryExpression	0		1921951	1					
ANR	1921961	IdentifierDeclStatement	zval * zdata ;	2115:1:66913:66924	1921951	1	True				
ANR	1921962	IdentifierDecl	* zdata		1921951	0					
ANR	1921963	IdentifierDeclType	zval *		1921951	0					
ANR	1921964	Identifier	zdata		1921951	1					
ANR	1921965	IdentifierDeclStatement	xmlNodePtr xparam ;	2116:1:66927:66944	1921951	2	True				
ANR	1921966	IdentifierDecl	xparam		1921951	0					
ANR	1921967	IdentifierDeclType	xmlNodePtr		1921951	0					
ANR	1921968	Identifier	xparam		1921951	1					
ANR	1921969	IfStatement	if ( data && Z_TYPE_P ( data ) == IS_ARRAY )		1921951	3					
ANR	1921970	Condition	data && Z_TYPE_P ( data ) == IS_ARRAY	2118:5:66952:66985	1921951	0	True				
ANR	1921971	AndExpression	data && Z_TYPE_P ( data ) == IS_ARRAY		1921951	0		&&			
ANR	1921972	Identifier	data		1921951	0					
ANR	1921973	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1921951	1		==			
ANR	1921974	CallExpression	Z_TYPE_P ( data )		1921951	0					
ANR	1921975	Callee	Z_TYPE_P		1921951	0					
ANR	1921976	Identifier	Z_TYPE_P		1921951	0					
ANR	1921977	ArgumentList	data		1921951	1					
ANR	1921978	Argument	data		1921951	0					
ANR	1921979	Identifier	data		1921951	0					
ANR	1921980	Identifier	IS_ARRAY		1921951	1					
ANR	1921981	CompoundStatement		6:41:89:89	1921951	1					
ANR	1921982	Statement	ZEND_HASH_FOREACH_VAL_IND	2119:2:66992:67016	1921951	0	True				
ANR	1921983	Statement	(	2119:27:67017:67017	1921951	1	True				
ANR	1921984	Statement	Z_ARRVAL_P	2119:28:67018:67027	1921951	2	True				
ANR	1921985	Statement	(	2119:38:67028:67028	1921951	3	True				
ANR	1921986	Statement	data	2119:39:67029:67032	1921951	4	True				
ANR	1921987	Statement	)	2119:43:67033:67033	1921951	5	True				
ANR	1921988	Statement	","	2119:44:67034:67034	1921951	6	True				
ANR	1921989	Statement	zdata	2119:46:67036:67040	1921951	7	True				
ANR	1921990	Statement	)	2119:51:67041:67041	1921951	8	True				
ANR	1921991	CompoundStatement		7:53:144:144	1921951	9					
ANR	1921992	IfStatement	if ( j >= dims [ 0 ] )		1921951	0					
ANR	1921993	Condition	j >= dims [ 0 ]	2120:8:67053:67064	1921951	0	True				
ANR	1921994	RelationalExpression	j >= dims [ 0 ]		1921951	0		>=			
ANR	1921995	Identifier	j		1921951	0					
ANR	1921996	ArrayIndexing	dims [ 0 ]		1921951	1					
ANR	1921997	Identifier	dims		1921951	0					
ANR	1921998	PrimaryExpression	0		1921951	1					
ANR	1921999	CompoundStatement		8:22:168:168	1921951	1					
ANR	1922000	BreakStatement	break ;	2121:5:67074:67079	1921951	0	True				
ANR	1922001	IfStatement	if ( dimension == 1 )		1921951	1					
ANR	1922002	Condition	dimension == 1	2123:8:67095:67108	1921951	0	True				
ANR	1922003	EqualityExpression	dimension == 1		1921951	0		==			
ANR	1922004	Identifier	dimension		1921951	0					
ANR	1922005	PrimaryExpression	1		1921951	1					
ANR	1922006	CompoundStatement		11:24:212:212	1921951	1					
ANR	1922007	IfStatement	if ( enc == NULL )		1921951	0					
ANR	1922008	Condition	enc == NULL	2124:9:67122:67132	1921951	0	True				
ANR	1922009	EqualityExpression	enc == NULL		1921951	0		==			
ANR	1922010	Identifier	enc		1921951	0					
ANR	1922011	Identifier	NULL		1921951	1					
ANR	1922012	CompoundStatement		12:22:236:236	1921951	1					
ANR	1922013	ExpressionStatement	"xparam = master_to_xml ( get_conversion ( Z_TYPE_P ( zdata ) ) , zdata , style , xmlParam )"	2125:5:67142:67221	1921951	0	True				
ANR	1922014	AssignmentExpression	"xparam = master_to_xml ( get_conversion ( Z_TYPE_P ( zdata ) ) , zdata , style , xmlParam )"		1921951	0		=			
ANR	1922015	Identifier	xparam		1921951	0					
ANR	1922016	CallExpression	"master_to_xml ( get_conversion ( Z_TYPE_P ( zdata ) ) , zdata , style , xmlParam )"		1921951	1					
ANR	1922017	Callee	master_to_xml		1921951	0					
ANR	1922018	Identifier	master_to_xml		1921951	0					
ANR	1922019	ArgumentList	get_conversion ( Z_TYPE_P ( zdata ) )		1921951	1					
ANR	1922020	Argument	get_conversion ( Z_TYPE_P ( zdata ) )		1921951	0					
ANR	1922021	CallExpression	get_conversion ( Z_TYPE_P ( zdata ) )		1921951	0					
ANR	1922022	Callee	get_conversion		1921951	0					
ANR	1922023	Identifier	get_conversion		1921951	0					
ANR	1922024	ArgumentList	Z_TYPE_P ( zdata )		1921951	1					
ANR	1922025	Argument	Z_TYPE_P ( zdata )		1921951	0					
ANR	1922026	CallExpression	Z_TYPE_P ( zdata )		1921951	0					
ANR	1922027	Callee	Z_TYPE_P		1921951	0					
ANR	1922028	Identifier	Z_TYPE_P		1921951	0					
ANR	1922029	ArgumentList	zdata		1921951	1					
ANR	1922030	Argument	zdata		1921951	0					
ANR	1922031	Identifier	zdata		1921951	0					
ANR	1922032	Argument	zdata		1921951	1					
ANR	1922033	Identifier	zdata		1921951	0					
ANR	1922034	Argument	style		1921951	2					
ANR	1922035	Identifier	style		1921951	0					
ANR	1922036	Argument	xmlParam		1921951	3					
ANR	1922037	Identifier	xmlParam		1921951	0					
ANR	1922038	ElseStatement	else		1921951	0					
ANR	1922039	CompoundStatement		14:11:335:335	1921951	0					
ANR	1922040	ExpressionStatement	"xparam = master_to_xml ( enc , zdata , style , xmlParam )"	2127:5:67241:67292	1921951	0	True				
ANR	1922041	AssignmentExpression	"xparam = master_to_xml ( enc , zdata , style , xmlParam )"		1921951	0		=			
ANR	1922042	Identifier	xparam		1921951	0					
ANR	1922043	CallExpression	"master_to_xml ( enc , zdata , style , xmlParam )"		1921951	1					
ANR	1922044	Callee	master_to_xml		1921951	0					
ANR	1922045	Identifier	master_to_xml		1921951	0					
ANR	1922046	ArgumentList	enc		1921951	1					
ANR	1922047	Argument	enc		1921951	0					
ANR	1922048	Identifier	enc		1921951	0					
ANR	1922049	Argument	zdata		1921951	1					
ANR	1922050	Identifier	zdata		1921951	0					
ANR	1922051	Argument	style		1921951	2					
ANR	1922052	Identifier	style		1921951	0					
ANR	1922053	Argument	xmlParam		1921951	3					
ANR	1922054	Identifier	xmlParam		1921951	0					
ANR	1922055	IfStatement	if ( type )		1921951	1					
ANR	1922056	Condition	type	2130:9:67311:67314	1921951	0	True				
ANR	1922057	Identifier	type		1921951	0					
ANR	1922058	CompoundStatement		18:15:418:418	1921951	1					
ANR	1922059	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"	2131:6:67325:67369	1921951	0	True				
ANR	1922060	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"		1921951	0					
ANR	1922061	Callee	xmlNodeSetName		1921951	0					
ANR	1922062	Identifier	xmlNodeSetName		1921951	0					
ANR	1922063	ArgumentList	xparam		1921951	1					
ANR	1922064	Argument	xparam		1921951	0					
ANR	1922065	Identifier	xparam		1921951	0					
ANR	1922066	Argument	BAD_CAST ( type -> name )		1921951	1					
ANR	1922067	CallExpression	BAD_CAST ( type -> name )		1921951	0					
ANR	1922068	Callee	BAD_CAST		1921951	0					
ANR	1922069	Identifier	BAD_CAST		1921951	0					
ANR	1922070	ArgumentList	type -> name		1921951	1					
ANR	1922071	Argument	type -> name		1921951	0					
ANR	1922072	PtrMemberAccess	type -> name		1921951	0					
ANR	1922073	Identifier	type		1921951	0					
ANR	1922074	Identifier	name		1921951	1					
ANR	1922075	ElseStatement	else		1921951	0					
ANR	1922076	IfStatement	if ( style == SOAP_LITERAL && enc && enc -> details . type_str )		1921951	0					
ANR	1922077	Condition	style == SOAP_LITERAL && enc && enc -> details . type_str	2132:16:67387:67439	1921951	0	True				
ANR	1922078	AndExpression	style == SOAP_LITERAL && enc && enc -> details . type_str		1921951	0		&&			
ANR	1922079	EqualityExpression	style == SOAP_LITERAL		1921951	0		==			
ANR	1922080	Identifier	style		1921951	0					
ANR	1922081	Identifier	SOAP_LITERAL		1921951	1					
ANR	1922082	AndExpression	enc && enc -> details . type_str		1921951	1		&&			
ANR	1922083	Identifier	enc		1921951	0					
ANR	1922084	MemberAccess	enc -> details . type_str		1921951	1					
ANR	1922085	PtrMemberAccess	enc -> details		1921951	0					
ANR	1922086	Identifier	enc		1921951	0					
ANR	1922087	Identifier	details		1921951	1					
ANR	1922088	Identifier	type_str		1921951	1					
ANR	1922089	CompoundStatement		20:71:543:543	1921951	1					
ANR	1922090	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"	2133:5:67449:67504	1921951	0	True				
ANR	1922091	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"		1921951	0					
ANR	1922092	Callee	xmlNodeSetName		1921951	0					
ANR	1922093	Identifier	xmlNodeSetName		1921951	0					
ANR	1922094	ArgumentList	xparam		1921951	1					
ANR	1922095	Argument	xparam		1921951	0					
ANR	1922096	Identifier	xparam		1921951	0					
ANR	1922097	Argument	BAD_CAST ( enc -> details . type_str )		1921951	1					
ANR	1922098	CallExpression	BAD_CAST ( enc -> details . type_str )		1921951	0					
ANR	1922099	Callee	BAD_CAST		1921951	0					
ANR	1922100	Identifier	BAD_CAST		1921951	0					
ANR	1922101	ArgumentList	enc -> details . type_str		1921951	1					
ANR	1922102	Argument	enc -> details . type_str		1921951	0					
ANR	1922103	MemberAccess	enc -> details . type_str		1921951	0					
ANR	1922104	PtrMemberAccess	enc -> details		1921951	0					
ANR	1922105	Identifier	enc		1921951	0					
ANR	1922106	Identifier	details		1921951	1					
ANR	1922107	Identifier	type_str		1921951	1					
ANR	1922108	ExpressionStatement	"xmlSetNs ( xparam , ns )"	2134:5:67511:67531	1921951	1	True				
ANR	1922109	CallExpression	"xmlSetNs ( xparam , ns )"		1921951	0					
ANR	1922110	Callee	xmlSetNs		1921951	0					
ANR	1922111	Identifier	xmlSetNs		1921951	0					
ANR	1922112	ArgumentList	xparam		1921951	1					
ANR	1922113	Argument	xparam		1921951	0					
ANR	1922114	Identifier	xparam		1921951	0					
ANR	1922115	Argument	ns		1921951	1					
ANR	1922116	Identifier	ns		1921951	0					
ANR	1922117	ElseStatement	else		1921951	0					
ANR	1922118	CompoundStatement		23:11:645:645	1921951	0					
ANR	1922119	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"	2136:6:67552:67592	1921951	0	True				
ANR	1922120	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"		1921951	0					
ANR	1922121	Callee	xmlNodeSetName		1921951	0					
ANR	1922122	Identifier	xmlNodeSetName		1921951	0					
ANR	1922123	ArgumentList	xparam		1921951	1					
ANR	1922124	Argument	xparam		1921951	0					
ANR	1922125	Identifier	xparam		1921951	0					
ANR	1922126	Argument	"BAD_CAST ( ""item"" )"		1921951	1					
ANR	1922127	CallExpression	"BAD_CAST ( ""item"" )"		1921951	0					
ANR	1922128	Callee	BAD_CAST		1921951	0					
ANR	1922129	Identifier	BAD_CAST		1921951	0					
ANR	1922130	ArgumentList	"""item"""		1921951	1					
ANR	1922131	Argument	"""item"""		1921951	0					
ANR	1922132	PrimaryExpression	"""item"""		1921951	0					
ANR	1922133	ElseStatement	else		1921951	0					
ANR	1922134	CompoundStatement		26:11:713:713	1921951	0					
ANR	1922135	ExpressionStatement	"add_xml_array_elements ( xmlParam , type , enc , ns , dimension - 1 , dims + 1 , zdata , style )"	2139:5:67619:67701	1921951	0	True				
ANR	1922136	CallExpression	"add_xml_array_elements ( xmlParam , type , enc , ns , dimension - 1 , dims + 1 , zdata , style )"		1921951	0					
ANR	1922137	Callee	add_xml_array_elements		1921951	0					
ANR	1922138	Identifier	add_xml_array_elements		1921951	0					
ANR	1922139	ArgumentList	xmlParam		1921951	1					
ANR	1922140	Argument	xmlParam		1921951	0					
ANR	1922141	Identifier	xmlParam		1921951	0					
ANR	1922142	Argument	type		1921951	1					
ANR	1922143	Identifier	type		1921951	0					
ANR	1922144	Argument	enc		1921951	2					
ANR	1922145	Identifier	enc		1921951	0					
ANR	1922146	Argument	ns		1921951	3					
ANR	1922147	Identifier	ns		1921951	0					
ANR	1922148	Argument	dimension - 1		1921951	4					
ANR	1922149	AdditiveExpression	dimension - 1		1921951	0		-			
ANR	1922150	Identifier	dimension		1921951	0					
ANR	1922151	PrimaryExpression	1		1921951	1					
ANR	1922152	Argument	dims + 1		1921951	5					
ANR	1922153	AdditiveExpression	dims + 1		1921951	0		+			
ANR	1922154	Identifier	dims		1921951	0					
ANR	1922155	PrimaryExpression	1		1921951	1					
ANR	1922156	Argument	zdata		1921951	6					
ANR	1922157	Identifier	zdata		1921951	0					
ANR	1922158	Argument	style		1921951	7					
ANR	1922159	Identifier	style		1921951	0					
ANR	1922160	ExpressionStatement	j ++	2141:4:67713:67716	1921951	2	True				
ANR	1922161	PostIncDecOperationExpression	j ++		1921951	0					
ANR	1922162	Identifier	j		1921951	0					
ANR	1922163	IncDec	++		1921951	1					
ANR	1922164	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2142:5:67723:67746	1921951	10	True				
ANR	1922165	CallExpression	ZEND_HASH_FOREACH_END ( )		1921951	0					
ANR	1922166	Callee	ZEND_HASH_FOREACH_END		1921951	0					
ANR	1922167	Identifier	ZEND_HASH_FOREACH_END		1921951	0					
ANR	1922168	ArgumentList			1921951	1					
ANR	1922169	IfStatement	if ( dimension == 1 )		1921951	11					
ANR	1922170	Condition	dimension == 1	2144:6:67755:67768	1921951	0	True				
ANR	1922171	EqualityExpression	dimension == 1		1921951	0		==			
ANR	1922172	Identifier	dimension		1921951	0					
ANR	1922173	PrimaryExpression	1		1921951	1					
ANR	1922174	CompoundStatement		32:22:872:872	1921951	1					
ANR	1922175	WhileStatement	while ( j < dims [ 0 ] )		1921951	0					
ANR	1922176	Condition	j < dims [ 0 ]	2145:11:67784:67794	1921951	0	True				
ANR	1922177	RelationalExpression	j < dims [ 0 ]		1921951	0		<			
ANR	1922178	Identifier	j		1921951	0					
ANR	1922179	ArrayIndexing	dims [ 0 ]		1921951	1					
ANR	1922180	Identifier	dims		1921951	0					
ANR	1922181	PrimaryExpression	0		1921951	1					
ANR	1922182	CompoundStatement		33:24:898:898	1921951	1					
ANR	1922183	ExpressionStatement	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2146:4:67803:67847	1921951	0	True				
ANR	1922184	AssignmentExpression	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1921951	0		=			
ANR	1922185	Identifier	xparam		1921951	0					
ANR	1922186	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1921951	1					
ANR	1922187	Callee	xmlNewNode		1921951	0					
ANR	1922188	Identifier	xmlNewNode		1921951	0					
ANR	1922189	ArgumentList	NULL		1921951	1					
ANR	1922190	Argument	NULL		1921951	0					
ANR	1922191	Identifier	NULL		1921951	0					
ANR	1922192	Argument	"BAD_CAST ( ""BOGUS"" )"		1921951	1					
ANR	1922193	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1921951	0					
ANR	1922194	Callee	BAD_CAST		1921951	0					
ANR	1922195	Identifier	BAD_CAST		1921951	0					
ANR	1922196	ArgumentList	"""BOGUS"""		1921951	1					
ANR	1922197	Argument	"""BOGUS"""		1921951	0					
ANR	1922198	PrimaryExpression	"""BOGUS"""		1921951	0					
ANR	1922199	ExpressionStatement	"xmlAddChild ( xmlParam , xparam )"	2147:4:67853:67882	1921951	1	True				
ANR	1922200	CallExpression	"xmlAddChild ( xmlParam , xparam )"		1921951	0					
ANR	1922201	Callee	xmlAddChild		1921951	0					
ANR	1922202	Identifier	xmlAddChild		1921951	0					
ANR	1922203	ArgumentList	xmlParam		1921951	1					
ANR	1922204	Argument	xmlParam		1921951	0					
ANR	1922205	Identifier	xmlParam		1921951	0					
ANR	1922206	Argument	xparam		1921951	1					
ANR	1922207	Identifier	xparam		1921951	0					
ANR	1922208	IfStatement	if ( type )		1921951	2					
ANR	1922209	Condition	type	2149:9:67894:67897	1921951	0	True				
ANR	1922210	Identifier	type		1921951	0					
ANR	1922211	CompoundStatement		37:15:1001:1001	1921951	1					
ANR	1922212	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"	2150:6:67908:67952	1921951	0	True				
ANR	1922213	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"		1921951	0					
ANR	1922214	Callee	xmlNodeSetName		1921951	0					
ANR	1922215	Identifier	xmlNodeSetName		1921951	0					
ANR	1922216	ArgumentList	xparam		1921951	1					
ANR	1922217	Argument	xparam		1921951	0					
ANR	1922218	Identifier	xparam		1921951	0					
ANR	1922219	Argument	BAD_CAST ( type -> name )		1921951	1					
ANR	1922220	CallExpression	BAD_CAST ( type -> name )		1921951	0					
ANR	1922221	Callee	BAD_CAST		1921951	0					
ANR	1922222	Identifier	BAD_CAST		1921951	0					
ANR	1922223	ArgumentList	type -> name		1921951	1					
ANR	1922224	Argument	type -> name		1921951	0					
ANR	1922225	PtrMemberAccess	type -> name		1921951	0					
ANR	1922226	Identifier	type		1921951	0					
ANR	1922227	Identifier	name		1921951	1					
ANR	1922228	ElseStatement	else		1921951	0					
ANR	1922229	IfStatement	if ( style == SOAP_LITERAL && enc && enc -> details . type_str )		1921951	0					
ANR	1922230	Condition	style == SOAP_LITERAL && enc && enc -> details . type_str	2151:16:67970:68022	1921951	0	True				
ANR	1922231	AndExpression	style == SOAP_LITERAL && enc && enc -> details . type_str		1921951	0		&&			
ANR	1922232	EqualityExpression	style == SOAP_LITERAL		1921951	0		==			
ANR	1922233	Identifier	style		1921951	0					
ANR	1922234	Identifier	SOAP_LITERAL		1921951	1					
ANR	1922235	AndExpression	enc && enc -> details . type_str		1921951	1		&&			
ANR	1922236	Identifier	enc		1921951	0					
ANR	1922237	MemberAccess	enc -> details . type_str		1921951	1					
ANR	1922238	PtrMemberAccess	enc -> details		1921951	0					
ANR	1922239	Identifier	enc		1921951	0					
ANR	1922240	Identifier	details		1921951	1					
ANR	1922241	Identifier	type_str		1921951	1					
ANR	1922242	CompoundStatement		39:71:1126:1126	1921951	1					
ANR	1922243	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"	2152:5:68032:68087	1921951	0	True				
ANR	1922244	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"		1921951	0					
ANR	1922245	Callee	xmlNodeSetName		1921951	0					
ANR	1922246	Identifier	xmlNodeSetName		1921951	0					
ANR	1922247	ArgumentList	xparam		1921951	1					
ANR	1922248	Argument	xparam		1921951	0					
ANR	1922249	Identifier	xparam		1921951	0					
ANR	1922250	Argument	BAD_CAST ( enc -> details . type_str )		1921951	1					
ANR	1922251	CallExpression	BAD_CAST ( enc -> details . type_str )		1921951	0					
ANR	1922252	Callee	BAD_CAST		1921951	0					
ANR	1922253	Identifier	BAD_CAST		1921951	0					
ANR	1922254	ArgumentList	enc -> details . type_str		1921951	1					
ANR	1922255	Argument	enc -> details . type_str		1921951	0					
ANR	1922256	MemberAccess	enc -> details . type_str		1921951	0					
ANR	1922257	PtrMemberAccess	enc -> details		1921951	0					
ANR	1922258	Identifier	enc		1921951	0					
ANR	1922259	Identifier	details		1921951	1					
ANR	1922260	Identifier	type_str		1921951	1					
ANR	1922261	ExpressionStatement	"xmlSetNs ( xparam , ns )"	2153:5:68094:68114	1921951	1	True				
ANR	1922262	CallExpression	"xmlSetNs ( xparam , ns )"		1921951	0					
ANR	1922263	Callee	xmlSetNs		1921951	0					
ANR	1922264	Identifier	xmlSetNs		1921951	0					
ANR	1922265	ArgumentList	xparam		1921951	1					
ANR	1922266	Argument	xparam		1921951	0					
ANR	1922267	Identifier	xparam		1921951	0					
ANR	1922268	Argument	ns		1921951	1					
ANR	1922269	Identifier	ns		1921951	0					
ANR	1922270	ElseStatement	else		1921951	0					
ANR	1922271	CompoundStatement		42:11:1228:1228	1921951	0					
ANR	1922272	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"	2155:6:68135:68175	1921951	0	True				
ANR	1922273	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"		1921951	0					
ANR	1922274	Callee	xmlNodeSetName		1921951	0					
ANR	1922275	Identifier	xmlNodeSetName		1921951	0					
ANR	1922276	ArgumentList	xparam		1921951	1					
ANR	1922277	Argument	xparam		1921951	0					
ANR	1922278	Identifier	xparam		1921951	0					
ANR	1922279	Argument	"BAD_CAST ( ""item"" )"		1921951	1					
ANR	1922280	CallExpression	"BAD_CAST ( ""item"" )"		1921951	0					
ANR	1922281	Callee	BAD_CAST		1921951	0					
ANR	1922282	Identifier	BAD_CAST		1921951	0					
ANR	1922283	ArgumentList	"""item"""		1921951	1					
ANR	1922284	Argument	"""item"""		1921951	0					
ANR	1922285	PrimaryExpression	"""item"""		1921951	0					
ANR	1922286	ExpressionStatement	j ++	2158:5:68190:68193	1921951	3	True				
ANR	1922287	PostIncDecOperationExpression	j ++		1921951	0					
ANR	1922288	Identifier	j		1921951	0					
ANR	1922289	IncDec	++		1921951	1					
ANR	1922290	ElseStatement	else		1921951	0					
ANR	1922291	CompoundStatement		48:9:1311:1311	1921951	0					
ANR	1922292	WhileStatement	while ( j < dims [ 0 ] )		1921951	0					
ANR	1922293	Condition	j < dims [ 0 ]	2161:11:68223:68233	1921951	0	True				
ANR	1922294	RelationalExpression	j < dims [ 0 ]		1921951	0		<			
ANR	1922295	Identifier	j		1921951	0					
ANR	1922296	ArrayIndexing	dims [ 0 ]		1921951	1					
ANR	1922297	Identifier	dims		1921951	0					
ANR	1922298	PrimaryExpression	0		1921951	1					
ANR	1922299	CompoundStatement		49:24:1337:1337	1921951	1					
ANR	1922300	ExpressionStatement	"add_xml_array_elements ( xmlParam , type , enc , ns , dimension - 1 , dims + 1 , NULL , style )"	2162:4:68242:68323	1921951	0	True				
ANR	1922301	CallExpression	"add_xml_array_elements ( xmlParam , type , enc , ns , dimension - 1 , dims + 1 , NULL , style )"		1921951	0					
ANR	1922302	Callee	add_xml_array_elements		1921951	0					
ANR	1922303	Identifier	add_xml_array_elements		1921951	0					
ANR	1922304	ArgumentList	xmlParam		1921951	1					
ANR	1922305	Argument	xmlParam		1921951	0					
ANR	1922306	Identifier	xmlParam		1921951	0					
ANR	1922307	Argument	type		1921951	1					
ANR	1922308	Identifier	type		1921951	0					
ANR	1922309	Argument	enc		1921951	2					
ANR	1922310	Identifier	enc		1921951	0					
ANR	1922311	Argument	ns		1921951	3					
ANR	1922312	Identifier	ns		1921951	0					
ANR	1922313	Argument	dimension - 1		1921951	4					
ANR	1922314	AdditiveExpression	dimension - 1		1921951	0		-			
ANR	1922315	Identifier	dimension		1921951	0					
ANR	1922316	PrimaryExpression	1		1921951	1					
ANR	1922317	Argument	dims + 1		1921951	5					
ANR	1922318	AdditiveExpression	dims + 1		1921951	0		+			
ANR	1922319	Identifier	dims		1921951	0					
ANR	1922320	PrimaryExpression	1		1921951	1					
ANR	1922321	Argument	NULL		1921951	6					
ANR	1922322	Identifier	NULL		1921951	0					
ANR	1922323	Argument	style		1921951	7					
ANR	1922324	Identifier	style		1921951	0					
ANR	1922325	ExpressionStatement	j ++	2163:5:68330:68333	1921951	1	True				
ANR	1922326	PostIncDecOperationExpression	j ++		1921951	0					
ANR	1922327	Identifier	j		1921951	0					
ANR	1922328	IncDec	++		1921951	1					
ANR	1922329	ElseStatement	else		1921951	0					
ANR	1922330	CompoundStatement		54:9:1455:1455	1921951	0					
ANR	1922331	ForStatement	for ( j = 0 ; j < dims [ 0 ] ; j ++ )		1921951	0					
ANR	1922332	ForInit	j = 0 ;	2167:7:68363:68366	1921951	0	True				
ANR	1922333	AssignmentExpression	j = 0		1921951	0		=			
ANR	1922334	Identifier	j		1921951	0					
ANR	1922335	PrimaryExpression	0		1921951	1					
ANR	1922336	Condition	j < dims [ 0 ]	2167:12:68368:68376	1921951	1	True				
ANR	1922337	RelationalExpression	j < dims [ 0 ]		1921951	0		<			
ANR	1922338	Identifier	j		1921951	0					
ANR	1922339	ArrayIndexing	dims [ 0 ]		1921951	1					
ANR	1922340	Identifier	dims		1921951	0					
ANR	1922341	PrimaryExpression	0		1921951	1					
ANR	1922342	PostIncDecOperationExpression	j ++	2167:23:68379:68381	1921951	2	True				
ANR	1922343	Identifier	j		1921951	0					
ANR	1922344	IncDec	++		1921951	1					
ANR	1922345	CompoundStatement		55:28:1485:1485	1921951	3					
ANR	1922346	IfStatement	if ( dimension == 1 )		1921951	0					
ANR	1922347	Condition	dimension == 1	2168:8:68394:68407	1921951	0	True				
ANR	1922348	EqualityExpression	dimension == 1		1921951	0		==			
ANR	1922349	Identifier	dimension		1921951	0					
ANR	1922350	PrimaryExpression	1		1921951	1					
ANR	1922351	CompoundStatement		57:5:1518:1535	1921951	1					
ANR	1922352	IdentifierDeclStatement	xmlNodePtr xparam ;	2169:5:68417:68434	1921951	0	True				
ANR	1922353	IdentifierDecl	xparam		1921951	0					
ANR	1922354	IdentifierDeclType	xmlNodePtr		1921951	0					
ANR	1922355	Identifier	xparam		1921951	1					
ANR	1922356	ExpressionStatement	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2171:4:68441:68485	1921951	1	True				
ANR	1922357	AssignmentExpression	"xparam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1921951	0		=			
ANR	1922358	Identifier	xparam		1921951	0					
ANR	1922359	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1921951	1					
ANR	1922360	Callee	xmlNewNode		1921951	0					
ANR	1922361	Identifier	xmlNewNode		1921951	0					
ANR	1922362	ArgumentList	NULL		1921951	1					
ANR	1922363	Argument	NULL		1921951	0					
ANR	1922364	Identifier	NULL		1921951	0					
ANR	1922365	Argument	"BAD_CAST ( ""BOGUS"" )"		1921951	1					
ANR	1922366	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1921951	0					
ANR	1922367	Callee	BAD_CAST		1921951	0					
ANR	1922368	Identifier	BAD_CAST		1921951	0					
ANR	1922369	ArgumentList	"""BOGUS"""		1921951	1					
ANR	1922370	Argument	"""BOGUS"""		1921951	0					
ANR	1922371	PrimaryExpression	"""BOGUS"""		1921951	0					
ANR	1922372	ExpressionStatement	"xmlAddChild ( xmlParam , xparam )"	2172:4:68491:68520	1921951	2	True				
ANR	1922373	CallExpression	"xmlAddChild ( xmlParam , xparam )"		1921951	0					
ANR	1922374	Callee	xmlAddChild		1921951	0					
ANR	1922375	Identifier	xmlAddChild		1921951	0					
ANR	1922376	ArgumentList	xmlParam		1921951	1					
ANR	1922377	Argument	xmlParam		1921951	0					
ANR	1922378	Identifier	xmlParam		1921951	0					
ANR	1922379	Argument	xparam		1921951	1					
ANR	1922380	Identifier	xparam		1921951	0					
ANR	1922381	IfStatement	if ( type )		1921951	3					
ANR	1922382	Condition	type	2173:9:68531:68534	1921951	0	True				
ANR	1922383	Identifier	type		1921951	0					
ANR	1922384	CompoundStatement		61:15:1638:1638	1921951	1					
ANR	1922385	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"	2174:6:68545:68589	1921951	0	True				
ANR	1922386	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( type -> name ) )"		1921951	0					
ANR	1922387	Callee	xmlNodeSetName		1921951	0					
ANR	1922388	Identifier	xmlNodeSetName		1921951	0					
ANR	1922389	ArgumentList	xparam		1921951	1					
ANR	1922390	Argument	xparam		1921951	0					
ANR	1922391	Identifier	xparam		1921951	0					
ANR	1922392	Argument	BAD_CAST ( type -> name )		1921951	1					
ANR	1922393	CallExpression	BAD_CAST ( type -> name )		1921951	0					
ANR	1922394	Callee	BAD_CAST		1921951	0					
ANR	1922395	Identifier	BAD_CAST		1921951	0					
ANR	1922396	ArgumentList	type -> name		1921951	1					
ANR	1922397	Argument	type -> name		1921951	0					
ANR	1922398	PtrMemberAccess	type -> name		1921951	0					
ANR	1922399	Identifier	type		1921951	0					
ANR	1922400	Identifier	name		1921951	1					
ANR	1922401	ElseStatement	else		1921951	0					
ANR	1922402	IfStatement	if ( style == SOAP_LITERAL && enc && enc -> details . type_str )		1921951	0					
ANR	1922403	Condition	style == SOAP_LITERAL && enc && enc -> details . type_str	2175:16:68607:68659	1921951	0	True				
ANR	1922404	AndExpression	style == SOAP_LITERAL && enc && enc -> details . type_str		1921951	0		&&			
ANR	1922405	EqualityExpression	style == SOAP_LITERAL		1921951	0		==			
ANR	1922406	Identifier	style		1921951	0					
ANR	1922407	Identifier	SOAP_LITERAL		1921951	1					
ANR	1922408	AndExpression	enc && enc -> details . type_str		1921951	1		&&			
ANR	1922409	Identifier	enc		1921951	0					
ANR	1922410	MemberAccess	enc -> details . type_str		1921951	1					
ANR	1922411	PtrMemberAccess	enc -> details		1921951	0					
ANR	1922412	Identifier	enc		1921951	0					
ANR	1922413	Identifier	details		1921951	1					
ANR	1922414	Identifier	type_str		1921951	1					
ANR	1922415	CompoundStatement		63:71:1763:1763	1921951	1					
ANR	1922416	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"	2176:5:68669:68724	1921951	0	True				
ANR	1922417	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( enc -> details . type_str ) )"		1921951	0					
ANR	1922418	Callee	xmlNodeSetName		1921951	0					
ANR	1922419	Identifier	xmlNodeSetName		1921951	0					
ANR	1922420	ArgumentList	xparam		1921951	1					
ANR	1922421	Argument	xparam		1921951	0					
ANR	1922422	Identifier	xparam		1921951	0					
ANR	1922423	Argument	BAD_CAST ( enc -> details . type_str )		1921951	1					
ANR	1922424	CallExpression	BAD_CAST ( enc -> details . type_str )		1921951	0					
ANR	1922425	Callee	BAD_CAST		1921951	0					
ANR	1922426	Identifier	BAD_CAST		1921951	0					
ANR	1922427	ArgumentList	enc -> details . type_str		1921951	1					
ANR	1922428	Argument	enc -> details . type_str		1921951	0					
ANR	1922429	MemberAccess	enc -> details . type_str		1921951	0					
ANR	1922430	PtrMemberAccess	enc -> details		1921951	0					
ANR	1922431	Identifier	enc		1921951	0					
ANR	1922432	Identifier	details		1921951	1					
ANR	1922433	Identifier	type_str		1921951	1					
ANR	1922434	ExpressionStatement	"xmlSetNs ( xparam , ns )"	2177:5:68731:68751	1921951	1	True				
ANR	1922435	CallExpression	"xmlSetNs ( xparam , ns )"		1921951	0					
ANR	1922436	Callee	xmlSetNs		1921951	0					
ANR	1922437	Identifier	xmlSetNs		1921951	0					
ANR	1922438	ArgumentList	xparam		1921951	1					
ANR	1922439	Argument	xparam		1921951	0					
ANR	1922440	Identifier	xparam		1921951	0					
ANR	1922441	Argument	ns		1921951	1					
ANR	1922442	Identifier	ns		1921951	0					
ANR	1922443	ElseStatement	else		1921951	0					
ANR	1922444	CompoundStatement		66:11:1865:1865	1921951	0					
ANR	1922445	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"	2179:6:68772:68812	1921951	0	True				
ANR	1922446	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( ""item"" ) )"		1921951	0					
ANR	1922447	Callee	xmlNodeSetName		1921951	0					
ANR	1922448	Identifier	xmlNodeSetName		1921951	0					
ANR	1922449	ArgumentList	xparam		1921951	1					
ANR	1922450	Argument	xparam		1921951	0					
ANR	1922451	Identifier	xparam		1921951	0					
ANR	1922452	Argument	"BAD_CAST ( ""item"" )"		1921951	1					
ANR	1922453	CallExpression	"BAD_CAST ( ""item"" )"		1921951	0					
ANR	1922454	Callee	BAD_CAST		1921951	0					
ANR	1922455	Identifier	BAD_CAST		1921951	0					
ANR	1922456	ArgumentList	"""item"""		1921951	1					
ANR	1922457	Argument	"""item"""		1921951	0					
ANR	1922458	PrimaryExpression	"""item"""		1921951	0					
ANR	1922459	ElseStatement	else		1921951	0					
ANR	1922460	CompoundStatement		69:11:1933:1933	1921951	0					
ANR	1922461	ExpressionStatement	"add_xml_array_elements ( xmlParam , type , enc , ns , dimension - 1 , dims + 1 , NULL , style )"	2182:6:68840:68921	1921951	0	True				
ANR	1922462	CallExpression	"add_xml_array_elements ( xmlParam , type , enc , ns , dimension - 1 , dims + 1 , NULL , style )"		1921951	0					
ANR	1922463	Callee	add_xml_array_elements		1921951	0					
ANR	1922464	Identifier	add_xml_array_elements		1921951	0					
ANR	1922465	ArgumentList	xmlParam		1921951	1					
ANR	1922466	Argument	xmlParam		1921951	0					
ANR	1922467	Identifier	xmlParam		1921951	0					
ANR	1922468	Argument	type		1921951	1					
ANR	1922469	Identifier	type		1921951	0					
ANR	1922470	Argument	enc		1921951	2					
ANR	1922471	Identifier	enc		1921951	0					
ANR	1922472	Argument	ns		1921951	3					
ANR	1922473	Identifier	ns		1921951	0					
ANR	1922474	Argument	dimension - 1		1921951	4					
ANR	1922475	AdditiveExpression	dimension - 1		1921951	0		-			
ANR	1922476	Identifier	dimension		1921951	0					
ANR	1922477	PrimaryExpression	1		1921951	1					
ANR	1922478	Argument	dims + 1		1921951	5					
ANR	1922479	AdditiveExpression	dims + 1		1921951	0		+			
ANR	1922480	Identifier	dims		1921951	0					
ANR	1922481	PrimaryExpression	1		1921951	1					
ANR	1922482	Argument	NULL		1921951	6					
ANR	1922483	Identifier	NULL		1921951	0					
ANR	1922484	Argument	style		1921951	7					
ANR	1922485	Identifier	style		1921951	0					
ANR	1922486	ReturnType	static void		1921951	1					
ANR	1922487	Identifier	add_xml_array_elements		1921951	2					
ANR	1922488	ParameterList	"xmlNodePtr xmlParam , sdlTypePtr type , encodePtr enc , xmlNsPtr ns , int dimension , int * dims , zval * data , int style"		1921951	3					
ANR	1922489	Parameter	xmlNodePtr xmlParam	2104:35:66502:66520	1921951	0	True				
ANR	1922490	ParameterType	xmlNodePtr		1921951	0					
ANR	1922491	Identifier	xmlParam		1921951	1					
ANR	1922492	Parameter	sdlTypePtr type	2105:35:66558:66572	1921951	1	True				
ANR	1922493	ParameterType	sdlTypePtr		1921951	0					
ANR	1922494	Identifier	type		1921951	1					
ANR	1922495	Parameter	encodePtr enc	2106:35:66610:66622	1921951	2	True				
ANR	1922496	ParameterType	encodePtr		1921951	0					
ANR	1922497	Identifier	enc		1921951	1					
ANR	1922498	Parameter	xmlNsPtr ns	2107:35:66660:66670	1921951	3	True				
ANR	1922499	ParameterType	xmlNsPtr		1921951	0					
ANR	1922500	Identifier	ns		1921951	1					
ANR	1922501	Parameter	int dimension	2108:35:66708:66720	1921951	4	True				
ANR	1922502	ParameterType	int		1921951	0					
ANR	1922503	Identifier	dimension		1921951	1					
ANR	1922504	Parameter	int * dims	2109:35:66759:66767	1921951	5	True				
ANR	1922505	ParameterType	int *		1921951	0					
ANR	1922506	Identifier	dims		1921951	1					
ANR	1922507	Parameter	zval * data	2110:35:66805:66814	1921951	6	True				
ANR	1922508	ParameterType	zval *		1921951	0					
ANR	1922509	Identifier	data		1921951	1					
ANR	1922510	Parameter	int style	2111:35:66852:66860	1921951	7	True				
ANR	1922511	ParameterType	int		1921951	0					
ANR	1922512	Identifier	style		1921951	1					
ANR	1922513	CFGEntryNode	ENTRY		1921951		True				
ANR	1922514	CFGExitNode	EXIT		1921951		True				
ANR	1922515	CFGErrorNode	ERROR		1921951		True				
ANR	1922516	Symbol	xmlParam		1921951						
ANR	1922517	Symbol	zdata		1921951						
ANR	1922518	Symbol	dims		1921951						
ANR	1922519	Symbol	data		1921951						
ANR	1922520	Symbol	ns		1921951						
ANR	1922521	Symbol	xparam		1921951						
ANR	1922522	Symbol	enc -> details		1921951						
ANR	1922523	Symbol	get_conversion		1921951						
ANR	1922524	Symbol	type		1921951						
ANR	1922525	Symbol	enc -> details . type_str		1921951						
ANR	1922526	Symbol	IS_ARRAY		1921951						
ANR	1922527	Symbol	* type		1921951						
ANR	1922528	Symbol	enc		1921951						
ANR	1922529	Symbol	dimension		1921951						
ANR	1922530	Symbol	master_to_xml		1921951						
ANR	1922531	Symbol	NULL		1921951						
ANR	1922532	Symbol	j		1921951						
ANR	1922533	Symbol	xmlNewNode		1921951						
ANR	1922534	Symbol	Z_TYPE_P		1921951						
ANR	1922535	Symbol	type -> name		1921951						
ANR	1922536	Symbol	SOAP_LITERAL		1921951						
ANR	1922537	Symbol	style		1921951						
ANR	1922538	Symbol	* enc		1921951						
ANR	1922539	Symbol	* dims		1921951						
ANR	1922540	Symbol	BAD_CAST		1921951						
ANR	1922541	Function	array_num_elements	2188:0:68940:69183							
ANR	1922542	FunctionDef	array_num_elements (HashTable * ht)		1922541	0					
ANR	1922543	CompoundStatement		2189:0:68992:69183	1922541	0					
ANR	1922544	IfStatement	if ( ht -> nNumUsed && Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) != IS_UNUSED && ht -> arData [ ht -> nNumUsed - 1 ] . key == NULL )		1922541	0					
ANR	1922545	Condition	ht -> nNumUsed && Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) != IS_UNUSED && ht -> arData [ ht -> nNumUsed - 1 ] . key == NULL	2190:5:68999:69117	1922541	0	True				
ANR	1922546	AndExpression	ht -> nNumUsed && Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) != IS_UNUSED && ht -> arData [ ht -> nNumUsed - 1 ] . key == NULL		1922541	0		&&			
ANR	1922547	PtrMemberAccess	ht -> nNumUsed		1922541	0					
ANR	1922548	Identifier	ht		1922541	0					
ANR	1922549	Identifier	nNumUsed		1922541	1					
ANR	1922550	AndExpression	Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) != IS_UNUSED && ht -> arData [ ht -> nNumUsed - 1 ] . key == NULL		1922541	1		&&			
ANR	1922551	EqualityExpression	Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) != IS_UNUSED		1922541	0		!=			
ANR	1922552	CallExpression	Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val )		1922541	0					
ANR	1922553	Callee	Z_TYPE		1922541	0					
ANR	1922554	Identifier	Z_TYPE		1922541	0					
ANR	1922555	ArgumentList	ht -> arData [ ht -> nNumUsed - 1 ] . val		1922541	1					
ANR	1922556	Argument	ht -> arData [ ht -> nNumUsed - 1 ] . val		1922541	0					
ANR	1922557	MemberAccess	ht -> arData [ ht -> nNumUsed - 1 ] . val		1922541	0					
ANR	1922558	ArrayIndexing	ht -> arData [ ht -> nNumUsed - 1 ]		1922541	0					
ANR	1922559	PtrMemberAccess	ht -> arData		1922541	0					
ANR	1922560	Identifier	ht		1922541	0					
ANR	1922561	Identifier	arData		1922541	1					
ANR	1922562	AdditiveExpression	ht -> nNumUsed - 1		1922541	1		-			
ANR	1922563	PtrMemberAccess	ht -> nNumUsed		1922541	0					
ANR	1922564	Identifier	ht		1922541	0					
ANR	1922565	Identifier	nNumUsed		1922541	1					
ANR	1922566	PrimaryExpression	1		1922541	1					
ANR	1922567	Identifier	val		1922541	1					
ANR	1922568	Identifier	IS_UNUSED		1922541	1					
ANR	1922569	EqualityExpression	ht -> arData [ ht -> nNumUsed - 1 ] . key == NULL		1922541	1		==			
ANR	1922570	MemberAccess	ht -> arData [ ht -> nNumUsed - 1 ] . key		1922541	0					
ANR	1922571	ArrayIndexing	ht -> arData [ ht -> nNumUsed - 1 ]		1922541	0					
ANR	1922572	PtrMemberAccess	ht -> arData		1922541	0					
ANR	1922573	Identifier	ht		1922541	0					
ANR	1922574	Identifier	arData		1922541	1					
ANR	1922575	AdditiveExpression	ht -> nNumUsed - 1		1922541	1		-			
ANR	1922576	PtrMemberAccess	ht -> nNumUsed		1922541	0					
ANR	1922577	Identifier	ht		1922541	0					
ANR	1922578	Identifier	nNumUsed		1922541	1					
ANR	1922579	PrimaryExpression	1		1922541	1					
ANR	1922580	Identifier	key		1922541	1					
ANR	1922581	Identifier	NULL		1922541	1					
ANR	1922582	CompoundStatement		4:45:127:127	1922541	1					
ANR	1922583	ReturnStatement	return ht -> arData [ ht -> nNumUsed - 1 ] . h - 1 ;	2194:5:69128:69167	1922541	0	True				
ANR	1922584	AdditiveExpression	ht -> arData [ ht -> nNumUsed - 1 ] . h - 1		1922541	0		-			
ANR	1922585	MemberAccess	ht -> arData [ ht -> nNumUsed - 1 ] . h		1922541	0					
ANR	1922586	ArrayIndexing	ht -> arData [ ht -> nNumUsed - 1 ]		1922541	0					
ANR	1922587	PtrMemberAccess	ht -> arData		1922541	0					
ANR	1922588	Identifier	ht		1922541	0					
ANR	1922589	Identifier	arData		1922541	1					
ANR	1922590	AdditiveExpression	ht -> nNumUsed - 1		1922541	1		-			
ANR	1922591	PtrMemberAccess	ht -> nNumUsed		1922541	0					
ANR	1922592	Identifier	ht		1922541	0					
ANR	1922593	Identifier	nNumUsed		1922541	1					
ANR	1922594	PrimaryExpression	1		1922541	1					
ANR	1922595	Identifier	h		1922541	1					
ANR	1922596	PrimaryExpression	1		1922541	1					
ANR	1922597	ReturnStatement	return 0 ;	2196:1:69173:69181	1922541	1	True				
ANR	1922598	PrimaryExpression	0		1922541	0					
ANR	1922599	ReturnType	static inline int		1922541	1					
ANR	1922600	Identifier	array_num_elements		1922541	2					
ANR	1922601	ParameterList	HashTable * ht		1922541	3					
ANR	1922602	Parameter	HashTable * ht	2188:37:68977:68989	1922541	0	True				
ANR	1922603	ParameterType	HashTable *		1922541	0					
ANR	1922604	Identifier	ht		1922541	1					
ANR	1922605	CFGEntryNode	ENTRY		1922541		True				
ANR	1922606	CFGExitNode	EXIT		1922541		True				
ANR	1922607	Symbol	NULL		1922541						
ANR	1922608	Symbol	ht -> arData [ ht -> nNumUsed - 1 ] . val		1922541						
ANR	1922609	Symbol	Z_TYPE		1922541						
ANR	1922610	Symbol	ht -> arData		1922541						
ANR	1922611	Symbol	ht		1922541						
ANR	1922612	Symbol	* ht -> nNumUsed		1922541						
ANR	1922613	Symbol	ht -> arData [ ht -> nNumUsed - 1 ] . key		1922541						
ANR	1922614	Symbol	* ht -> arData		1922541						
ANR	1922615	Symbol	* ht		1922541						
ANR	1922616	Symbol	* * ht		1922541						
ANR	1922617	Symbol	ht -> nNumUsed		1922541						
ANR	1922618	Symbol	IS_UNUSED		1922541						
ANR	1922619	Symbol	ht -> arData [ ht -> nNumUsed - 1 ] . h		1922541						
ANR	1922620	Function	to_xml_array	2199:0:69186:77894							
ANR	1922621	FunctionDef	"to_xml_array (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1922620	0					
ANR	1922622	CompoundStatement		2200:0:69279:77894	1922620	0					
ANR	1922623	IdentifierDeclStatement	sdlTypePtr sdl_type = type -> sdl_type ;	2201:1:69282:69318	1922620	0	True				
ANR	1922624	IdentifierDecl	sdl_type = type -> sdl_type		1922620	0					
ANR	1922625	IdentifierDeclType	sdlTypePtr		1922620	0					
ANR	1922626	Identifier	sdl_type		1922620	1					
ANR	1922627	AssignmentExpression	sdl_type = type -> sdl_type		1922620	2		=			
ANR	1922628	Identifier	sdl_type		1922620	0					
ANR	1922629	PtrMemberAccess	type -> sdl_type		1922620	1					
ANR	1922630	Identifier	type		1922620	0					
ANR	1922631	Identifier	sdl_type		1922620	1					
ANR	1922632	IdentifierDeclStatement	sdlTypePtr element_type = NULL ;	2202:1:69321:69351	1922620	1	True				
ANR	1922633	IdentifierDecl	element_type = NULL		1922620	0					
ANR	1922634	IdentifierDeclType	sdlTypePtr		1922620	0					
ANR	1922635	Identifier	element_type		1922620	1					
ANR	1922636	AssignmentExpression	element_type = NULL		1922620	2		=			
ANR	1922637	Identifier	NULL		1922620	0					
ANR	1922638	Identifier	NULL		1922620	1					
ANR	1922639	IdentifierDeclStatement	"smart_str array_type = { 0 } , array_size = { 0 } ;"	2203:1:69354:69398	1922620	2	True				
ANR	1922640	IdentifierDecl	array_type = { 0 }		1922620	0					
ANR	1922641	IdentifierDeclType	smart_str		1922620	0					
ANR	1922642	Identifier	array_type		1922620	1					
ANR	1922643	AssignmentExpression	array_type = { 0 }		1922620	2		=			
ANR	1922644	Identifier	array_type		1922620	0					
ANR	1922645	InitializerList	0		1922620	1					
ANR	1922646	PrimaryExpression	0		1922620	0					
ANR	1922647	IdentifierDecl	array_size = { 0 }		1922620	1					
ANR	1922648	IdentifierDeclType	smart_str		1922620	0					
ANR	1922649	Identifier	array_size		1922620	1					
ANR	1922650	AssignmentExpression	array_size = { 0 }		1922620	2		=			
ANR	1922651	Identifier	array_size		1922620	0					
ANR	1922652	InitializerList	0		1922620	1					
ANR	1922653	PrimaryExpression	0		1922620	0					
ANR	1922654	IdentifierDeclStatement	int i ;	2204:1:69401:69406	1922620	3	True				
ANR	1922655	IdentifierDecl	i		1922620	0					
ANR	1922656	IdentifierDeclType	int		1922620	0					
ANR	1922657	Identifier	i		1922620	1					
ANR	1922658	IdentifierDeclStatement	xmlNodePtr xmlParam ;	2205:1:69409:69428	1922620	4	True				
ANR	1922659	IdentifierDecl	xmlParam		1922620	0					
ANR	1922660	IdentifierDeclType	xmlNodePtr		1922620	0					
ANR	1922661	Identifier	xmlParam		1922620	1					
ANR	1922662	IdentifierDeclStatement	encodePtr enc = NULL ;	2206:1:69431:69451	1922620	5	True				
ANR	1922663	IdentifierDecl	enc = NULL		1922620	0					
ANR	1922664	IdentifierDeclType	encodePtr		1922620	0					
ANR	1922665	Identifier	enc		1922620	1					
ANR	1922666	AssignmentExpression	enc = NULL		1922620	2		=			
ANR	1922667	Identifier	NULL		1922620	0					
ANR	1922668	Identifier	NULL		1922620	1					
ANR	1922669	IdentifierDeclStatement	int dimension = 1 ;	2207:1:69454:69471	1922620	6	True				
ANR	1922670	IdentifierDecl	dimension = 1		1922620	0					
ANR	1922671	IdentifierDeclType	int		1922620	0					
ANR	1922672	Identifier	dimension		1922620	1					
ANR	1922673	AssignmentExpression	dimension = 1		1922620	2		=			
ANR	1922674	Identifier	dimension		1922620	0					
ANR	1922675	PrimaryExpression	1		1922620	1					
ANR	1922676	IdentifierDeclStatement	int * dims ;	2208:1:69474:69483	1922620	7	True				
ANR	1922677	IdentifierDecl	* dims		1922620	0					
ANR	1922678	IdentifierDeclType	int *		1922620	0					
ANR	1922679	Identifier	dims		1922620	1					
ANR	1922680	IdentifierDeclStatement	int soap_version ;	2209:1:69486:69502	1922620	8	True				
ANR	1922681	IdentifierDecl	soap_version		1922620	0					
ANR	1922682	IdentifierDeclType	int		1922620	0					
ANR	1922683	Identifier	soap_version		1922620	1					
ANR	1922684	IdentifierDeclStatement	zval array_copy ;	2210:1:69505:69520	1922620	9	True				
ANR	1922685	IdentifierDecl	array_copy		1922620	0					
ANR	1922686	IdentifierDeclType	zval		1922620	0					
ANR	1922687	Identifier	array_copy		1922620	1					
ANR	1922688	ExpressionStatement	ZVAL_UNDEF ( & array_copy )	2212:1:69524:69547	1922620	10	True				
ANR	1922689	CallExpression	ZVAL_UNDEF ( & array_copy )		1922620	0					
ANR	1922690	Callee	ZVAL_UNDEF		1922620	0					
ANR	1922691	Identifier	ZVAL_UNDEF		1922620	0					
ANR	1922692	ArgumentList	& array_copy		1922620	1					
ANR	1922693	Argument	& array_copy		1922620	0					
ANR	1922694	UnaryOperationExpression	& array_copy		1922620	0					
ANR	1922695	UnaryOperator	&		1922620	0					
ANR	1922696	Identifier	array_copy		1922620	1					
ANR	1922697	ExpressionStatement	soap_version = SOAP_GLOBAL ( soap_version )	2213:1:69550:69590	1922620	11	True				
ANR	1922698	AssignmentExpression	soap_version = SOAP_GLOBAL ( soap_version )		1922620	0		=			
ANR	1922699	Identifier	soap_version		1922620	0					
ANR	1922700	CallExpression	SOAP_GLOBAL ( soap_version )		1922620	1					
ANR	1922701	Callee	SOAP_GLOBAL		1922620	0					
ANR	1922702	Identifier	SOAP_GLOBAL		1922620	0					
ANR	1922703	ArgumentList	soap_version		1922620	1					
ANR	1922704	Argument	soap_version		1922620	0					
ANR	1922705	Identifier	soap_version		1922620	0					
ANR	1922706	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2215:1:69594:69640	1922620	12	True				
ANR	1922707	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1922620	0		=			
ANR	1922708	Identifier	xmlParam		1922620	0					
ANR	1922709	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1922620	1					
ANR	1922710	Callee	xmlNewNode		1922620	0					
ANR	1922711	Identifier	xmlNewNode		1922620	0					
ANR	1922712	ArgumentList	NULL		1922620	1					
ANR	1922713	Argument	NULL		1922620	0					
ANR	1922714	Identifier	NULL		1922620	0					
ANR	1922715	Argument	"BAD_CAST ( ""BOGUS"" )"		1922620	1					
ANR	1922716	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1922620	0					
ANR	1922717	Callee	BAD_CAST		1922620	0					
ANR	1922718	Identifier	BAD_CAST		1922620	0					
ANR	1922719	ArgumentList	"""BOGUS"""		1922620	1					
ANR	1922720	Argument	"""BOGUS"""		1922620	0					
ANR	1922721	PrimaryExpression	"""BOGUS"""		1922620	0					
ANR	1922722	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	2216:1:69643:69672	1922620	13	True				
ANR	1922723	CallExpression	"xmlAddChild ( parent , xmlParam )"		1922620	0					
ANR	1922724	Callee	xmlAddChild		1922620	0					
ANR	1922725	Identifier	xmlAddChild		1922620	0					
ANR	1922726	ArgumentList	parent		1922620	1					
ANR	1922727	Argument	parent		1922620	0					
ANR	1922728	Identifier	parent		1922620	0					
ANR	1922729	Argument	xmlParam		1922620	1					
ANR	1922730	Identifier	xmlParam		1922620	0					
ANR	1922731	IfStatement	if ( ! data || Z_TYPE_P ( data ) == IS_NULL )		1922620	14					
ANR	1922732	Condition	! data || Z_TYPE_P ( data ) == IS_NULL	2218:5:69680:69713	1922620	0	True				
ANR	1922733	OrExpression	! data || Z_TYPE_P ( data ) == IS_NULL		1922620	0		||			
ANR	1922734	UnaryOperationExpression	! data		1922620	0					
ANR	1922735	UnaryOperator	!		1922620	0					
ANR	1922736	Identifier	data		1922620	1					
ANR	1922737	EqualityExpression	Z_TYPE_P ( data ) == IS_NULL		1922620	1		==			
ANR	1922738	CallExpression	Z_TYPE_P ( data )		1922620	0					
ANR	1922739	Callee	Z_TYPE_P		1922620	0					
ANR	1922740	Identifier	Z_TYPE_P		1922620	0					
ANR	1922741	ArgumentList	data		1922620	1					
ANR	1922742	Argument	data		1922620	0					
ANR	1922743	Identifier	data		1922620	0					
ANR	1922744	Identifier	IS_NULL		1922620	1					
ANR	1922745	CompoundStatement		19:41:436:436	1922620	1					
ANR	1922746	IfStatement	if ( style == SOAP_ENCODED )		1922620	0					
ANR	1922747	Condition	style == SOAP_ENCODED	2219:6:69724:69744	1922620	0	True				
ANR	1922748	EqualityExpression	style == SOAP_ENCODED		1922620	0		==			
ANR	1922749	Identifier	style		1922620	0					
ANR	1922750	Identifier	SOAP_ENCODED		1922620	1					
ANR	1922751	CompoundStatement		20:29:467:467	1922620	1					
ANR	1922752	ExpressionStatement	set_xsi_nil ( xmlParam )	2220:3:69752:69773	1922620	0	True				
ANR	1922753	CallExpression	set_xsi_nil ( xmlParam )		1922620	0					
ANR	1922754	Callee	set_xsi_nil		1922620	0					
ANR	1922755	Identifier	set_xsi_nil		1922620	0					
ANR	1922756	ArgumentList	xmlParam		1922620	1					
ANR	1922757	Argument	xmlParam		1922620	0					
ANR	1922758	Identifier	xmlParam		1922620	0					
ANR	1922759	IfStatement	if ( SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE )		1922620	1					
ANR	1922760	Condition	SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE	2221:7:69782:69828	1922620	0	True				
ANR	1922761	BitAndExpression	SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE		1922620	0		&			
ANR	1922762	CallExpression	SOAP_GLOBAL ( features )		1922620	0					
ANR	1922763	Callee	SOAP_GLOBAL		1922620	0					
ANR	1922764	Identifier	SOAP_GLOBAL		1922620	0					
ANR	1922765	ArgumentList	features		1922620	1					
ANR	1922766	Argument	features		1922620	0					
ANR	1922767	Identifier	features		1922620	0					
ANR	1922768	Identifier	SOAP_USE_XSI_ARRAY_TYPE		1922620	1					
ANR	1922769	CompoundStatement		22:56:551:551	1922620	1					
ANR	1922770	ExpressionStatement	"set_ns_and_type_ex ( xmlParam , ( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE , ""Array"" )"	2222:4:69837:69952	1922620	0	True				
ANR	1922771	CallExpression	"set_ns_and_type_ex ( xmlParam , ( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE , ""Array"" )"		1922620	0					
ANR	1922772	Callee	set_ns_and_type_ex		1922620	0					
ANR	1922773	Identifier	set_ns_and_type_ex		1922620	0					
ANR	1922774	ArgumentList	xmlParam		1922620	1					
ANR	1922775	Argument	xmlParam		1922620	0					
ANR	1922776	Identifier	xmlParam		1922620	0					
ANR	1922777	Argument	( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE		1922620	1					
ANR	1922778	ConditionalExpression	( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE		1922620	0					
ANR	1922779	Condition	soap_version == SOAP_1_1		1922620	0					
ANR	1922780	EqualityExpression	soap_version == SOAP_1_1		1922620	0		==			
ANR	1922781	Identifier	soap_version		1922620	0					
ANR	1922782	Identifier	SOAP_1_1		1922620	1					
ANR	1922783	Identifier	SOAP_1_1_ENC_NAMESPACE		1922620	1					
ANR	1922784	Identifier	SOAP_1_2_ENC_NAMESPACE		1922620	2					
ANR	1922785	Argument	"""Array"""		1922620	2					
ANR	1922786	PrimaryExpression	"""Array"""		1922620	0					
ANR	1922787	ElseStatement	else		1922620	0					
ANR	1922788	CompoundStatement		24:10:684:684	1922620	0					
ANR	1922789	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2224:4:69970:70001	1922620	0	True				
ANR	1922790	CallExpression	"set_ns_and_type ( xmlParam , type )"		1922620	0					
ANR	1922791	Callee	set_ns_and_type		1922620	0					
ANR	1922792	Identifier	set_ns_and_type		1922620	0					
ANR	1922793	ArgumentList	xmlParam		1922620	1					
ANR	1922794	Argument	xmlParam		1922620	0					
ANR	1922795	Identifier	xmlParam		1922620	0					
ANR	1922796	Argument	type		1922620	1					
ANR	1922797	Identifier	type		1922620	0					
ANR	1922798	ReturnStatement	return xmlParam ;	2227:2:70014:70029	1922620	1	True				
ANR	1922799	Identifier	xmlParam		1922620	0					
ANR	1922800	ElseStatement	else		1922620	0					
ANR	1922801	Statement	if	2374:9:74319:74320	1922620	0	True				
ANR	1922802	IfStatement	"if ( Z_TYPE_P ( data ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( data ) , zend_ce_traversable ) )"		1922620	15					
ANR	1922803	Condition	"Z_TYPE_P ( data ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( data ) , zend_ce_traversable )"	2230:5:70040:70127	1922620	0	True				
ANR	1922804	AndExpression	"Z_TYPE_P ( data ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( data ) , zend_ce_traversable )"		1922620	0		&&			
ANR	1922805	EqualityExpression	Z_TYPE_P ( data ) == IS_OBJECT		1922620	0		==			
ANR	1922806	CallExpression	Z_TYPE_P ( data )		1922620	0					
ANR	1922807	Callee	Z_TYPE_P		1922620	0					
ANR	1922808	Identifier	Z_TYPE_P		1922620	0					
ANR	1922809	ArgumentList	data		1922620	1					
ANR	1922810	Argument	data		1922620	0					
ANR	1922811	Identifier	data		1922620	0					
ANR	1922812	Identifier	IS_OBJECT		1922620	1					
ANR	1922813	CallExpression	"instanceof_function ( Z_OBJCE_P ( data ) , zend_ce_traversable )"		1922620	1					
ANR	1922814	Callee	instanceof_function		1922620	0					
ANR	1922815	Identifier	instanceof_function		1922620	0					
ANR	1922816	ArgumentList	Z_OBJCE_P ( data )		1922620	1					
ANR	1922817	Argument	Z_OBJCE_P ( data )		1922620	0					
ANR	1922818	CallExpression	Z_OBJCE_P ( data )		1922620	0					
ANR	1922819	Callee	Z_OBJCE_P		1922620	0					
ANR	1922820	Identifier	Z_OBJCE_P		1922620	0					
ANR	1922821	ArgumentList	data		1922620	1					
ANR	1922822	Argument	data		1922620	0					
ANR	1922823	Identifier	data		1922620	0					
ANR	1922824	Argument	zend_ce_traversable		1922620	1					
ANR	1922825	Identifier	zend_ce_traversable		1922620	0					
ANR	1922826	CompoundStatement		34:2:934:961	1922620	1					
ANR	1922827	IdentifierDeclStatement	zend_object_iterator * iter ;	2231:2:70134:70162	1922620	0	True				
ANR	1922828	IdentifierDecl	* iter		1922620	0					
ANR	1922829	IdentifierDeclType	zend_object_iterator *		1922620	0					
ANR	1922830	Identifier	iter		1922620	1					
ANR	1922831	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( data ) ;	2232:2:70166:70210	1922620	1	True				
ANR	1922832	IdentifierDecl	* ce = Z_OBJCE_P ( data )		1922620	0					
ANR	1922833	IdentifierDeclType	zend_class_entry *		1922620	0					
ANR	1922834	Identifier	ce		1922620	1					
ANR	1922835	AssignmentExpression	* ce = Z_OBJCE_P ( data )		1922620	2		=			
ANR	1922836	Identifier	ce		1922620	0					
ANR	1922837	CallExpression	Z_OBJCE_P ( data )		1922620	1					
ANR	1922838	Callee	Z_OBJCE_P		1922620	0					
ANR	1922839	Identifier	Z_OBJCE_P		1922620	0					
ANR	1922840	ArgumentList	data		1922620	1					
ANR	1922841	Argument	data		1922620	0					
ANR	1922842	Identifier	data		1922620	0					
ANR	1922843	IdentifierDeclStatement	zval * val ;	2233:2:70214:70241	1922620	2	True				
ANR	1922844	IdentifierDecl	* val		1922620	0					
ANR	1922845	IdentifierDeclType	zval *		1922620	0					
ANR	1922846	Identifier	val		1922620	1					
ANR	1922847	ExpressionStatement	array_init ( & array_copy )	2235:2:70246:70269	1922620	3	True				
ANR	1922848	CallExpression	array_init ( & array_copy )		1922620	0					
ANR	1922849	Callee	array_init		1922620	0					
ANR	1922850	Identifier	array_init		1922620	0					
ANR	1922851	ArgumentList	& array_copy		1922620	1					
ANR	1922852	Argument	& array_copy		1922620	0					
ANR	1922853	UnaryOperationExpression	& array_copy		1922620	0					
ANR	1922854	UnaryOperator	&		1922620	0					
ANR	1922855	Identifier	array_copy		1922620	1					
ANR	1922856	ExpressionStatement	"iter = ce -> get_iterator ( ce , data , 0 )"	2237:2:70274:70310	1922620	4	True				
ANR	1922857	AssignmentExpression	"iter = ce -> get_iterator ( ce , data , 0 )"		1922620	0		=			
ANR	1922858	Identifier	iter		1922620	0					
ANR	1922859	CallExpression	"ce -> get_iterator ( ce , data , 0 )"		1922620	1					
ANR	1922860	Callee	ce -> get_iterator		1922620	0					
ANR	1922861	PtrMemberAccess	ce -> get_iterator		1922620	0					
ANR	1922862	Identifier	ce		1922620	0					
ANR	1922863	Identifier	get_iterator		1922620	1					
ANR	1922864	ArgumentList	ce		1922620	1					
ANR	1922865	Argument	ce		1922620	0					
ANR	1922866	Identifier	ce		1922620	0					
ANR	1922867	Argument	data		1922620	1					
ANR	1922868	Identifier	data		1922620	0					
ANR	1922869	Argument	0		1922620	2					
ANR	1922870	PrimaryExpression	0		1922620	0					
ANR	1922871	IfStatement	if ( EG ( exception ) )		1922620	5					
ANR	1922872	Condition	EG ( exception )	2239:6:70319:70331	1922620	0	True				
ANR	1922873	CallExpression	EG ( exception )		1922620	0					
ANR	1922874	Callee	EG		1922620	0					
ANR	1922875	Identifier	EG		1922620	0					
ANR	1922876	ArgumentList	exception		1922620	1					
ANR	1922877	Argument	exception		1922620	0					
ANR	1922878	Identifier	exception		1922620	0					
ANR	1922879	CompoundStatement		40:21:1054:1054	1922620	1					
ANR	1922880	GotoStatement	goto iterator_done ;	2240:3:70339:70357	1922620	0	True				
ANR	1922881	Identifier	iterator_done		1922620	0					
ANR	1922882	IfStatement	if ( iter -> funcs -> rewind )		1922620	6					
ANR	1922883	Condition	iter -> funcs -> rewind	2243:6:70370:70388	1922620	0	True				
ANR	1922884	PtrMemberAccess	iter -> funcs -> rewind		1922620	0					
ANR	1922885	PtrMemberAccess	iter -> funcs		1922620	0					
ANR	1922886	Identifier	iter		1922620	0					
ANR	1922887	Identifier	funcs		1922620	1					
ANR	1922888	Identifier	rewind		1922620	1					
ANR	1922889	CompoundStatement		44:27:1111:1111	1922620	1					
ANR	1922890	ExpressionStatement	iter -> funcs -> rewind ( iter )	2244:3:70396:70421	1922620	0	True				
ANR	1922891	CallExpression	iter -> funcs -> rewind ( iter )		1922620	0					
ANR	1922892	Callee	iter -> funcs -> rewind		1922620	0					
ANR	1922893	PtrMemberAccess	iter -> funcs -> rewind		1922620	0					
ANR	1922894	PtrMemberAccess	iter -> funcs		1922620	0					
ANR	1922895	Identifier	iter		1922620	0					
ANR	1922896	Identifier	funcs		1922620	1					
ANR	1922897	Identifier	rewind		1922620	1					
ANR	1922898	ArgumentList	iter		1922620	1					
ANR	1922899	Argument	iter		1922620	0					
ANR	1922900	Identifier	iter		1922620	0					
ANR	1922901	IfStatement	if ( EG ( exception ) )		1922620	1					
ANR	1922902	Condition	EG ( exception )	2245:7:70430:70442	1922620	0	True				
ANR	1922903	CallExpression	EG ( exception )		1922620	0					
ANR	1922904	Callee	EG		1922620	0					
ANR	1922905	Identifier	EG		1922620	0					
ANR	1922906	ArgumentList	exception		1922620	1					
ANR	1922907	Argument	exception		1922620	0					
ANR	1922908	Identifier	exception		1922620	0					
ANR	1922909	CompoundStatement		46:22:1165:1165	1922620	1					
ANR	1922910	GotoStatement	goto iterator_done ;	2246:4:70451:70469	1922620	0	True				
ANR	1922911	Identifier	iterator_done		1922620	0					
ANR	1922912	WhileStatement	while ( iter -> funcs -> valid ( iter ) == SUCCESS )		1922620	7					
ANR	1922913	Condition	iter -> funcs -> valid ( iter ) == SUCCESS	2250:9:70490:70524	1922620	0	True				
ANR	1922914	EqualityExpression	iter -> funcs -> valid ( iter ) == SUCCESS		1922620	0		==			
ANR	1922915	CallExpression	iter -> funcs -> valid ( iter )		1922620	0					
ANR	1922916	Callee	iter -> funcs -> valid		1922620	0					
ANR	1922917	PtrMemberAccess	iter -> funcs -> valid		1922620	0					
ANR	1922918	PtrMemberAccess	iter -> funcs		1922620	0					
ANR	1922919	Identifier	iter		1922620	0					
ANR	1922920	Identifier	funcs		1922620	1					
ANR	1922921	Identifier	valid		1922620	1					
ANR	1922922	ArgumentList	iter		1922620	1					
ANR	1922923	Argument	iter		1922620	0					
ANR	1922924	Identifier	iter		1922620	0					
ANR	1922925	Identifier	SUCCESS		1922620	1					
ANR	1922926	CompoundStatement		51:46:1247:1247	1922620	1					
ANR	1922927	IfStatement	if ( EG ( exception ) )		1922620	0					
ANR	1922928	Condition	EG ( exception )	2251:7:70536:70548	1922620	0	True				
ANR	1922929	CallExpression	EG ( exception )		1922620	0					
ANR	1922930	Callee	EG		1922620	0					
ANR	1922931	Identifier	EG		1922620	0					
ANR	1922932	ArgumentList	exception		1922620	1					
ANR	1922933	Argument	exception		1922620	0					
ANR	1922934	Identifier	exception		1922620	0					
ANR	1922935	CompoundStatement		52:22:1271:1271	1922620	1					
ANR	1922936	GotoStatement	goto iterator_done ;	2252:4:70557:70575	1922620	0	True				
ANR	1922937	Identifier	iterator_done		1922620	0					
ANR	1922938	ExpressionStatement	val = iter -> funcs -> get_current_data ( iter )	2255:3:70586:70627	1922620	1	True				
ANR	1922939	AssignmentExpression	val = iter -> funcs -> get_current_data ( iter )		1922620	0		=			
ANR	1922940	Identifier	val		1922620	0					
ANR	1922941	CallExpression	iter -> funcs -> get_current_data ( iter )		1922620	1					
ANR	1922942	Callee	iter -> funcs -> get_current_data		1922620	0					
ANR	1922943	PtrMemberAccess	iter -> funcs -> get_current_data		1922620	0					
ANR	1922944	PtrMemberAccess	iter -> funcs		1922620	0					
ANR	1922945	Identifier	iter		1922620	0					
ANR	1922946	Identifier	funcs		1922620	1					
ANR	1922947	Identifier	get_current_data		1922620	1					
ANR	1922948	ArgumentList	iter		1922620	1					
ANR	1922949	Argument	iter		1922620	0					
ANR	1922950	Identifier	iter		1922620	0					
ANR	1922951	IfStatement	if ( EG ( exception ) )		1922620	2					
ANR	1922952	Condition	EG ( exception )	2256:7:70636:70648	1922620	0	True				
ANR	1922953	CallExpression	EG ( exception )		1922620	0					
ANR	1922954	Callee	EG		1922620	0					
ANR	1922955	Identifier	EG		1922620	0					
ANR	1922956	ArgumentList	exception		1922620	1					
ANR	1922957	Argument	exception		1922620	0					
ANR	1922958	Identifier	exception		1922620	0					
ANR	1922959	CompoundStatement		57:22:1371:1371	1922620	1					
ANR	1922960	GotoStatement	goto iterator_done ;	2257:4:70657:70675	1922620	0	True				
ANR	1922961	Identifier	iterator_done		1922620	0					
ANR	1922962	IfStatement	if ( iter -> funcs -> get_current_key )		1922620	3					
ANR	1922963	Condition	iter -> funcs -> get_current_key	2259:7:70689:70716	1922620	0	True				
ANR	1922964	PtrMemberAccess	iter -> funcs -> get_current_key		1922620	0					
ANR	1922965	PtrMemberAccess	iter -> funcs		1922620	0					
ANR	1922966	Identifier	iter		1922620	0					
ANR	1922967	Identifier	funcs		1922620	1					
ANR	1922968	Identifier	get_current_key		1922620	1					
ANR	1922969	CompoundStatement		61:4:1445:1453	1922620	1					
ANR	1922970	IdentifierDeclStatement	zval key ;	2260:4:70725:70733	1922620	0	True				
ANR	1922971	IdentifierDecl	key		1922620	0					
ANR	1922972	IdentifierDeclType	zval		1922620	0					
ANR	1922973	Identifier	key		1922620	1					
ANR	1922974	ExpressionStatement	"iter -> funcs -> get_current_key ( iter , & key )"	2261:4:70739:70779	1922620	1	True				
ANR	1922975	CallExpression	"iter -> funcs -> get_current_key ( iter , & key )"		1922620	0					
ANR	1922976	Callee	iter -> funcs -> get_current_key		1922620	0					
ANR	1922977	PtrMemberAccess	iter -> funcs -> get_current_key		1922620	0					
ANR	1922978	PtrMemberAccess	iter -> funcs		1922620	0					
ANR	1922979	Identifier	iter		1922620	0					
ANR	1922980	Identifier	funcs		1922620	1					
ANR	1922981	Identifier	get_current_key		1922620	1					
ANR	1922982	ArgumentList	iter		1922620	1					
ANR	1922983	Argument	iter		1922620	0					
ANR	1922984	Identifier	iter		1922620	0					
ANR	1922985	Argument	& key		1922620	1					
ANR	1922986	UnaryOperationExpression	& key		1922620	0					
ANR	1922987	UnaryOperator	&		1922620	0					
ANR	1922988	Identifier	key		1922620	1					
ANR	1922989	IfStatement	if ( EG ( exception ) )		1922620	2					
ANR	1922990	Condition	EG ( exception )	2262:8:70789:70801	1922620	0	True				
ANR	1922991	CallExpression	EG ( exception )		1922620	0					
ANR	1922992	Callee	EG		1922620	0					
ANR	1922993	Identifier	EG		1922620	0					
ANR	1922994	ArgumentList	exception		1922620	1					
ANR	1922995	Argument	exception		1922620	0					
ANR	1922996	Identifier	exception		1922620	0					
ANR	1922997	CompoundStatement		63:23:1524:1524	1922620	1					
ANR	1922998	GotoStatement	goto iterator_done ;	2263:5:70811:70829	1922620	0	True				
ANR	1922999	Identifier	iterator_done		1922620	0					
ANR	1923000	ExpressionStatement	"array_set_zval_key ( Z_ARRVAL ( array_copy ) , & key , val )"	2265:4:70841:70892	1922620	3	True				
ANR	1923001	CallExpression	"array_set_zval_key ( Z_ARRVAL ( array_copy ) , & key , val )"		1922620	0					
ANR	1923002	Callee	array_set_zval_key		1922620	0					
ANR	1923003	Identifier	array_set_zval_key		1922620	0					
ANR	1923004	ArgumentList	Z_ARRVAL ( array_copy )		1922620	1					
ANR	1923005	Argument	Z_ARRVAL ( array_copy )		1922620	0					
ANR	1923006	CallExpression	Z_ARRVAL ( array_copy )		1922620	0					
ANR	1923007	Callee	Z_ARRVAL		1922620	0					
ANR	1923008	Identifier	Z_ARRVAL		1922620	0					
ANR	1923009	ArgumentList	array_copy		1922620	1					
ANR	1923010	Argument	array_copy		1922620	0					
ANR	1923011	Identifier	array_copy		1922620	0					
ANR	1923012	Argument	& key		1922620	1					
ANR	1923013	UnaryOperationExpression	& key		1922620	0					
ANR	1923014	UnaryOperator	&		1922620	0					
ANR	1923015	Identifier	key		1922620	1					
ANR	1923016	Argument	val		1922620	2					
ANR	1923017	Identifier	val		1922620	0					
ANR	1923018	ExpressionStatement	zval_ptr_dtor ( val )	2266:4:70898:70916	1922620	4	True				
ANR	1923019	CallExpression	zval_ptr_dtor ( val )		1922620	0					
ANR	1923020	Callee	zval_ptr_dtor		1922620	0					
ANR	1923021	Identifier	zval_ptr_dtor		1922620	0					
ANR	1923022	ArgumentList	val		1922620	1					
ANR	1923023	Argument	val		1922620	0					
ANR	1923024	Identifier	val		1922620	0					
ANR	1923025	ExpressionStatement	zval_dtor ( & key )	2267:4:70922:70937	1922620	5	True				
ANR	1923026	CallExpression	zval_dtor ( & key )		1922620	0					
ANR	1923027	Callee	zval_dtor		1922620	0					
ANR	1923028	Identifier	zval_dtor		1922620	0					
ANR	1923029	ArgumentList	& key		1922620	1					
ANR	1923030	Argument	& key		1922620	0					
ANR	1923031	UnaryOperationExpression	& key		1922620	0					
ANR	1923032	UnaryOperator	&		1922620	0					
ANR	1923033	Identifier	key		1922620	1					
ANR	1923034	ElseStatement	else		1922620	0					
ANR	1923035	CompoundStatement		69:10:1669:1669	1922620	0					
ANR	1923036	ExpressionStatement	"add_next_index_zval ( & array_copy , val )"	2269:4:70955:70992	1922620	0	True				
ANR	1923037	CallExpression	"add_next_index_zval ( & array_copy , val )"		1922620	0					
ANR	1923038	Callee	add_next_index_zval		1922620	0					
ANR	1923039	Identifier	add_next_index_zval		1922620	0					
ANR	1923040	ArgumentList	& array_copy		1922620	1					
ANR	1923041	Argument	& array_copy		1922620	0					
ANR	1923042	UnaryOperationExpression	& array_copy		1922620	0					
ANR	1923043	UnaryOperator	&		1922620	0					
ANR	1923044	Identifier	array_copy		1922620	1					
ANR	1923045	Argument	val		1922620	1					
ANR	1923046	Identifier	val		1922620	0					
ANR	1923047	ExpressionStatement	Z_ADDREF_P ( val )	2271:3:71002:71017	1922620	4	True				
ANR	1923048	CallExpression	Z_ADDREF_P ( val )		1922620	0					
ANR	1923049	Callee	Z_ADDREF_P		1922620	0					
ANR	1923050	Identifier	Z_ADDREF_P		1922620	0					
ANR	1923051	ArgumentList	val		1922620	1					
ANR	1923052	Argument	val		1922620	0					
ANR	1923053	Identifier	val		1922620	0					
ANR	1923054	ExpressionStatement	iter -> funcs -> move_forward ( iter )	2273:3:71023:71054	1922620	5	True				
ANR	1923055	CallExpression	iter -> funcs -> move_forward ( iter )		1922620	0					
ANR	1923056	Callee	iter -> funcs -> move_forward		1922620	0					
ANR	1923057	PtrMemberAccess	iter -> funcs -> move_forward		1922620	0					
ANR	1923058	PtrMemberAccess	iter -> funcs		1922620	0					
ANR	1923059	Identifier	iter		1922620	0					
ANR	1923060	Identifier	funcs		1922620	1					
ANR	1923061	Identifier	move_forward		1922620	1					
ANR	1923062	ArgumentList	iter		1922620	1					
ANR	1923063	Argument	iter		1922620	0					
ANR	1923064	Identifier	iter		1922620	0					
ANR	1923065	IfStatement	if ( EG ( exception ) )		1922620	6					
ANR	1923066	Condition	EG ( exception )	2274:7:71063:71075	1922620	0	True				
ANR	1923067	CallExpression	EG ( exception )		1922620	0					
ANR	1923068	Callee	EG		1922620	0					
ANR	1923069	Identifier	EG		1922620	0					
ANR	1923070	ArgumentList	exception		1922620	1					
ANR	1923071	Argument	exception		1922620	0					
ANR	1923072	Identifier	exception		1922620	0					
ANR	1923073	CompoundStatement		75:22:1798:1798	1922620	1					
ANR	1923074	GotoStatement	goto iterator_done ;	2275:4:71084:71102	1922620	0	True				
ANR	1923075	Identifier	iterator_done		1922620	0					
ANR	1923076	Label	iterator_done :	2278:0:71113:71126	1922620	8	True				
ANR	1923077	Identifier	iterator_done		1922620	0					
ANR	1923078	ExpressionStatement	OBJ_RELEASE ( & iter -> std )	2279:2:71130:71153	1922620	9	True				
ANR	1923079	CallExpression	OBJ_RELEASE ( & iter -> std )		1922620	0					
ANR	1923080	Callee	OBJ_RELEASE		1922620	0					
ANR	1923081	Identifier	OBJ_RELEASE		1922620	0					
ANR	1923082	ArgumentList	& iter -> std		1922620	1					
ANR	1923083	Argument	& iter -> std		1922620	0					
ANR	1923084	UnaryOperationExpression	& iter -> std		1922620	0					
ANR	1923085	UnaryOperator	&		1922620	0					
ANR	1923086	PtrMemberAccess	iter -> std		1922620	1					
ANR	1923087	Identifier	iter		1922620	0					
ANR	1923088	Identifier	std		1922620	1					
ANR	1923089	IfStatement	if ( EG ( exception ) )		1922620	10					
ANR	1923090	Condition	EG ( exception )	2280:6:71161:71173	1922620	0	True				
ANR	1923091	CallExpression	EG ( exception )		1922620	0					
ANR	1923092	Callee	EG		1922620	0					
ANR	1923093	Identifier	EG		1922620	0					
ANR	1923094	ArgumentList	exception		1922620	1					
ANR	1923095	Argument	exception		1922620	0					
ANR	1923096	Identifier	exception		1922620	0					
ANR	1923097	CompoundStatement		81:21:1896:1896	1922620	1					
ANR	1923098	ExpressionStatement	zval_ptr_dtor ( & array_copy )	2281:3:71181:71207	1922620	0	True				
ANR	1923099	CallExpression	zval_ptr_dtor ( & array_copy )		1922620	0					
ANR	1923100	Callee	zval_ptr_dtor		1922620	0					
ANR	1923101	Identifier	zval_ptr_dtor		1922620	0					
ANR	1923102	ArgumentList	& array_copy		1922620	1					
ANR	1923103	Argument	& array_copy		1922620	0					
ANR	1923104	UnaryOperationExpression	& array_copy		1922620	0					
ANR	1923105	UnaryOperator	&		1922620	0					
ANR	1923106	Identifier	array_copy		1922620	1					
ANR	1923107	ExpressionStatement	ZVAL_UNDEF ( & array_copy )	2282:3:71212:71235	1922620	1	True				
ANR	1923108	CallExpression	ZVAL_UNDEF ( & array_copy )		1922620	0					
ANR	1923109	Callee	ZVAL_UNDEF		1922620	0					
ANR	1923110	Identifier	ZVAL_UNDEF		1922620	0					
ANR	1923111	ArgumentList	& array_copy		1922620	1					
ANR	1923112	Argument	& array_copy		1922620	0					
ANR	1923113	UnaryOperationExpression	& array_copy		1922620	0					
ANR	1923114	UnaryOperator	&		1922620	0					
ANR	1923115	Identifier	array_copy		1922620	1					
ANR	1923116	ElseStatement	else		1922620	0					
ANR	1923117	CompoundStatement		84:9:1966:1966	1922620	0					
ANR	1923118	ExpressionStatement	data = & array_copy	2284:3:71251:71269	1922620	0	True				
ANR	1923119	AssignmentExpression	data = & array_copy		1922620	0		=			
ANR	1923120	Identifier	data		1922620	0					
ANR	1923121	UnaryOperationExpression	& array_copy		1922620	1					
ANR	1923122	UnaryOperator	&		1922620	0					
ANR	1923123	Identifier	array_copy		1922620	1					
ANR	1923124	ElseStatement	else		1922620	0					
ANR	1923125	CompoundStatement		170:10:4932:4932	1922620	0					
ANR	1923126	ExpressionStatement	dims = emalloc ( sizeof ( int ) )	2370:4:74218:74245	1922620	0	True				
ANR	1923127	AssignmentExpression	dims = emalloc ( sizeof ( int ) )		1922620	0		=			
ANR	1923128	Identifier	dims		1922620	0					
ANR	1923129	CallExpression	emalloc ( sizeof ( int ) )		1922620	1					
ANR	1923130	Callee	emalloc		1922620	0					
ANR	1923131	Identifier	emalloc		1922620	0					
ANR	1923132	ArgumentList	sizeof ( int )		1922620	1					
ANR	1923133	Argument	sizeof ( int )		1922620	0					
ANR	1923134	SizeofExpression	sizeof ( int )		1922620	0					
ANR	1923135	Sizeof	sizeof		1922620	0					
ANR	1923136	SizeofOperand	int		1922620	1					
ANR	1923137	ExpressionStatement	* dims = 0	2371:4:74251:74260	1922620	1	True				
ANR	1923138	AssignmentExpression	* dims = 0		1922620	0		=			
ANR	1923139	UnaryOperationExpression	* dims		1922620	0					
ANR	1923140	UnaryOperator	*		1922620	0					
ANR	1923141	Identifier	dims		1922620	1					
ANR	1923142	PrimaryExpression	0		1922620	1					
ANR	1923143	ExpressionStatement	"smart_str_append_long ( & array_size , i )"	2372:4:74266:74303	1922620	2	True				
ANR	1923144	CallExpression	"smart_str_append_long ( & array_size , i )"		1922620	0					
ANR	1923145	Callee	smart_str_append_long		1922620	0					
ANR	1923146	Identifier	smart_str_append_long		1922620	0					
ANR	1923147	ArgumentList	& array_size		1922620	1					
ANR	1923148	Argument	& array_size		1922620	0					
ANR	1923149	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923150	UnaryOperator	&		1922620	0					
ANR	1923151	Identifier	array_size		1922620	1					
ANR	1923152	Argument	i		1922620	1					
ANR	1923153	Identifier	i		1922620	0					
ANR	1923154	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1922620	16					
ANR	1923155	Condition	Z_TYPE_P ( data ) == IS_ARRAY	2288:5:71284:71309	1922620	0	True				
ANR	1923156	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1922620	0		==			
ANR	1923157	CallExpression	Z_TYPE_P ( data )		1922620	0					
ANR	1923158	Callee	Z_TYPE_P		1922620	0					
ANR	1923159	Identifier	Z_TYPE_P		1922620	0					
ANR	1923160	ArgumentList	data		1922620	1					
ANR	1923161	Argument	data		1922620	0					
ANR	1923162	Identifier	data		1922620	0					
ANR	1923163	Identifier	IS_ARRAY		1922620	1					
ANR	1923164	CompoundStatement		92:2:2093:2115	1922620	1					
ANR	1923165	IdentifierDeclStatement	sdlAttributePtr arrayType ;	2289:2:71316:71341	1922620	0	True				
ANR	1923166	IdentifierDecl	arrayType		1922620	0					
ANR	1923167	IdentifierDeclType	sdlAttributePtr		1922620	0					
ANR	1923168	Identifier	arrayType		1922620	1					
ANR	1923169	IdentifierDeclStatement	sdlExtraAttributePtr ext ;	2290:2:71345:71369	1922620	1	True				
ANR	1923170	IdentifierDecl	ext		1922620	0					
ANR	1923171	IdentifierDeclType	sdlExtraAttributePtr		1922620	0					
ANR	1923172	Identifier	ext		1922620	1					
ANR	1923173	IdentifierDeclStatement	sdlTypePtr elementType ;	2291:2:71373:71395	1922620	2	True				
ANR	1923174	IdentifierDecl	elementType		1922620	0					
ANR	1923175	IdentifierDeclType	sdlTypePtr		1922620	0					
ANR	1923176	Identifier	elementType		1922620	1					
ANR	1923177	ExpressionStatement	i = zend_hash_num_elements ( Z_ARRVAL_P ( data ) )	2293:2:71400:71444	1922620	3	True				
ANR	1923178	AssignmentExpression	i = zend_hash_num_elements ( Z_ARRVAL_P ( data ) )		1922620	0		=			
ANR	1923179	Identifier	i		1922620	0					
ANR	1923180	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( data ) )		1922620	1					
ANR	1923181	Callee	zend_hash_num_elements		1922620	0					
ANR	1923182	Identifier	zend_hash_num_elements		1922620	0					
ANR	1923183	ArgumentList	Z_ARRVAL_P ( data )		1922620	1					
ANR	1923184	Argument	Z_ARRVAL_P ( data )		1922620	0					
ANR	1923185	CallExpression	Z_ARRVAL_P ( data )		1922620	0					
ANR	1923186	Callee	Z_ARRVAL_P		1922620	0					
ANR	1923187	Identifier	Z_ARRVAL_P		1922620	0					
ANR	1923188	ArgumentList	data		1922620	1					
ANR	1923189	Argument	data		1922620	0					
ANR	1923190	Identifier	data		1922620	0					
ANR	1923191	Statement	if	2295:2:71449:71450	1922620	4	True				
ANR	1923192	Statement	(	2295:5:71452:71452	1922620	5	True				
ANR	1923193	Statement	sdl_type	2295:6:71453:71460	1922620	6	True				
ANR	1923194	Statement	&&	2295:15:71462:71463	1922620	7	True				
ANR	1923195	Statement	sdl_type	2296:6:71471:71478	1922620	8	True				
ANR	1923196	Statement	->	2296:14:71479:71480	1922620	9	True				
ANR	1923197	Statement	attributes	2296:16:71481:71490	1922620	10	True				
ANR	1923198	Statement	&&	2296:27:71492:71493	1922620	11	True				
ANR	1923199	Statement	(	2297:6:71501:71501	1922620	12	True				
ANR	1923200	Statement	arrayType	2297:7:71502:71510	1922620	13	True				
ANR	1923201	Statement	=	2297:17:71512:71512	1922620	14	True				
ANR	1923202	Statement	zend_hash_str_find_ptr	2297:19:71514:71535	1922620	15	True				
ANR	1923203	Statement	(	2297:41:71536:71536	1922620	16	True				
ANR	1923204	Statement	sdl_type	2297:42:71537:71544	1922620	17	True				
ANR	1923205	Statement	->	2297:50:71545:71546	1922620	18	True				
ANR	1923206	Statement	attributes	2297:52:71547:71556	1922620	19	True				
ANR	1923207	Statement	","	2297:62:71557:71557	1922620	20	True				
ANR	1923208	Statement	SOAP_1_1_ENC_NAMESPACE	2297:64:71559:71580	1922620	21	True				
ANR	1923209	Statement	""":arrayType"""	2297:86:71581:71592	1922620	22	True				
ANR	1923210	Statement	","	2297:98:71593:71593	1922620	23	True				
ANR	1923211	Statement	sizeof	2298:8:71603:71608	1922620	24	True				
ANR	1923212	Statement	(	2298:14:71609:71609	1922620	25	True				
ANR	1923213	Statement	SOAP_1_1_ENC_NAMESPACE	2298:15:71610:71631	1922620	26	True				
ANR	1923214	Statement	""":arrayType"""	2298:37:71632:71643	1922620	27	True				
ANR	1923215	Statement	)	2298:49:71644:71644	1922620	28	True				
ANR	1923216	Statement	-	2298:50:71645:71645	1922620	29	True				
ANR	1923217	Statement	1	2298:51:71646:71646	1922620	30	True				
ANR	1923218	Statement	)	2298:52:71647:71647	1922620	31	True				
ANR	1923219	Statement	)	2298:53:71648:71648	1922620	32	True				
ANR	1923220	Statement	!=	2298:55:71650:71651	1922620	33	True				
ANR	1923221	Statement	NULL	2298:58:71653:71656	1922620	34	True				
ANR	1923222	Statement	&&	2298:63:71658:71659	1922620	35	True				
ANR	1923223	Statement	arrayType	2299:6:71667:71675	1922620	36	True				
ANR	1923224	Statement	->	2299:15:71676:71677	1922620	37	True				
ANR	1923225	Statement	extraAttributes	2299:17:71678:71692	1922620	38	True				
ANR	1923226	Statement	&&	2299:33:71694:71695	1922620	39	True				
ANR	1923227	Statement	(	2300:6:71703:71703	1922620	40	True				
ANR	1923228	Statement	ext	2300:7:71704:71706	1922620	41	True				
ANR	1923229	Statement	=	2300:11:71708:71708	1922620	42	True				
ANR	1923230	Statement	zend_hash_str_find_ptr	2300:13:71710:71731	1922620	43	True				
ANR	1923231	Statement	(	2300:35:71732:71732	1922620	44	True				
ANR	1923232	Statement	arrayType	2300:36:71733:71741	1922620	45	True				
ANR	1923233	Statement	->	2300:45:71742:71743	1922620	46	True				
ANR	1923234	Statement	extraAttributes	2300:47:71744:71758	1922620	47	True				
ANR	1923235	Statement	","	2300:62:71759:71759	1922620	48	True				
ANR	1923236	Statement	WSDL_NAMESPACE	2300:64:71761:71774	1922620	49	True				
ANR	1923237	Statement	""":arrayType"""	2300:78:71775:71786	1922620	50	True				
ANR	1923238	Statement	","	2300:90:71787:71787	1922620	51	True				
ANR	1923239	Statement	sizeof	2300:92:71789:71794	1922620	52	True				
ANR	1923240	Statement	(	2300:98:71795:71795	1922620	53	True				
ANR	1923241	Statement	WSDL_NAMESPACE	2300:99:71796:71809	1922620	54	True				
ANR	1923242	Statement	""":arrayType"""	2300:113:71810:71821	1922620	55	True				
ANR	1923243	Statement	)	2300:125:71822:71822	1922620	56	True				
ANR	1923244	Statement	-	2300:126:71823:71823	1922620	57	True				
ANR	1923245	Statement	1	2300:127:71824:71824	1922620	58	True				
ANR	1923246	Statement	)	2300:128:71825:71825	1922620	59	True				
ANR	1923247	Statement	)	2300:129:71826:71826	1922620	60	True				
ANR	1923248	Statement	!=	2300:131:71828:71829	1922620	61	True				
ANR	1923249	Statement	NULL	2300:134:71831:71834	1922620	62	True				
ANR	1923250	Statement	)	2300:138:71835:71835	1922620	63	True				
ANR	1923251	CompoundStatement		104:3:2585:2593	1922620	64					
ANR	1923252	IdentifierDeclStatement	"char * value , * end ;"	2302:3:71843:71860	1922620	0	True				
ANR	1923253	IdentifierDecl	* value		1922620	0					
ANR	1923254	IdentifierDeclType	char *		1922620	0					
ANR	1923255	Identifier	value		1922620	1					
ANR	1923256	IdentifierDecl	* end		1922620	1					
ANR	1923257	IdentifierDeclType	char *		1922620	0					
ANR	1923258	Identifier	end		1922620	1					
ANR	1923259	IdentifierDeclStatement	zval * el ;	2303:3:71865:71873	1922620	1	True				
ANR	1923260	IdentifierDecl	* el		1922620	0					
ANR	1923261	IdentifierDeclType	zval *		1922620	0					
ANR	1923262	Identifier	el		1922620	1					
ANR	1923263	ExpressionStatement	value = estrdup ( ext -> val )	2305:3:71879:71904	1922620	2	True				
ANR	1923264	AssignmentExpression	value = estrdup ( ext -> val )		1922620	0		=			
ANR	1923265	Identifier	value		1922620	0					
ANR	1923266	CallExpression	estrdup ( ext -> val )		1922620	1					
ANR	1923267	Callee	estrdup		1922620	0					
ANR	1923268	Identifier	estrdup		1922620	0					
ANR	1923269	ArgumentList	ext -> val		1922620	1					
ANR	1923270	Argument	ext -> val		1922620	0					
ANR	1923271	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923272	Identifier	ext		1922620	0					
ANR	1923273	Identifier	val		1922620	1					
ANR	1923274	ExpressionStatement	"end = strrchr ( value , '[' )"	2306:3:71909:71933	1922620	3	True				
ANR	1923275	AssignmentExpression	"end = strrchr ( value , '[' )"		1922620	0		=			
ANR	1923276	Identifier	end		1922620	0					
ANR	1923277	CallExpression	"strrchr ( value , '[' )"		1922620	1					
ANR	1923278	Callee	strrchr		1922620	0					
ANR	1923279	Identifier	strrchr		1922620	0					
ANR	1923280	ArgumentList	value		1922620	1					
ANR	1923281	Argument	value		1922620	0					
ANR	1923282	Identifier	value		1922620	0					
ANR	1923283	Argument	'['		1922620	1					
ANR	1923284	PrimaryExpression	'['		1922620	0					
ANR	1923285	IfStatement	if ( end )		1922620	4					
ANR	1923286	Condition	end	2307:7:71942:71944	1922620	0	True				
ANR	1923287	Identifier	end		1922620	0					
ANR	1923288	CompoundStatement		108:12:2667:2667	1922620	1					
ANR	1923289	ExpressionStatement	* end = '\\0'	2308:4:71953:71964	1922620	0	True				
ANR	1923290	AssignmentExpression	* end = '\\0'		1922620	0		=			
ANR	1923291	UnaryOperationExpression	* end		1922620	0					
ANR	1923292	UnaryOperator	*		1922620	0					
ANR	1923293	Identifier	end		1922620	1					
ANR	1923294	PrimaryExpression	'\\0'		1922620	1					
ANR	1923295	ExpressionStatement	end ++	2309:4:71970:71975	1922620	1	True				
ANR	1923296	PostIncDecOperationExpression	end ++		1922620	0					
ANR	1923297	Identifier	end		1922620	0					
ANR	1923298	IncDec	++		1922620	1					
ANR	1923299	ExpressionStatement	dimension = calc_dimension ( end )	2310:4:71981:72012	1922620	2	True				
ANR	1923300	AssignmentExpression	dimension = calc_dimension ( end )		1922620	0		=			
ANR	1923301	Identifier	dimension		1922620	0					
ANR	1923302	CallExpression	calc_dimension ( end )		1922620	1					
ANR	1923303	Callee	calc_dimension		1922620	0					
ANR	1923304	Identifier	calc_dimension		1922620	0					
ANR	1923305	ArgumentList	end		1922620	1					
ANR	1923306	Argument	end		1922620	0					
ANR	1923307	Identifier	end		1922620	0					
ANR	1923308	IfStatement	if ( ext -> ns != NULL )		1922620	5					
ANR	1923309	Condition	ext -> ns != NULL	2312:7:72026:72040	1922620	0	True				
ANR	1923310	EqualityExpression	ext -> ns != NULL		1922620	0		!=			
ANR	1923311	PtrMemberAccess	ext -> ns		1922620	0					
ANR	1923312	Identifier	ext		1922620	0					
ANR	1923313	Identifier	ns		1922620	1					
ANR	1923314	Identifier	NULL		1922620	1					
ANR	1923315	CompoundStatement		113:24:2763:2763	1922620	1					
ANR	1923316	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , value )"	2313:4:72049:72100	1922620	0	True				
ANR	1923317	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , value )"		1922620	0		=			
ANR	1923318	Identifier	enc		1922620	0					
ANR	1923319	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , value )"		1922620	1					
ANR	1923320	Callee	get_encoder		1922620	0					
ANR	1923321	Identifier	get_encoder		1922620	0					
ANR	1923322	ArgumentList	SOAP_GLOBAL ( sdl )		1922620	1					
ANR	1923323	Argument	SOAP_GLOBAL ( sdl )		1922620	0					
ANR	1923324	CallExpression	SOAP_GLOBAL ( sdl )		1922620	0					
ANR	1923325	Callee	SOAP_GLOBAL		1922620	0					
ANR	1923326	Identifier	SOAP_GLOBAL		1922620	0					
ANR	1923327	ArgumentList	sdl		1922620	1					
ANR	1923328	Argument	sdl		1922620	0					
ANR	1923329	Identifier	sdl		1922620	0					
ANR	1923330	Argument	ext -> ns		1922620	1					
ANR	1923331	PtrMemberAccess	ext -> ns		1922620	0					
ANR	1923332	Identifier	ext		1922620	0					
ANR	1923333	Identifier	ns		1922620	1					
ANR	1923334	Argument	value		1922620	2					
ANR	1923335	Identifier	value		1922620	0					
ANR	1923336	ExpressionStatement	"get_type_str ( xmlParam , ext -> ns , value , & array_type )"	2314:4:72106:72157	1922620	1	True				
ANR	1923337	CallExpression	"get_type_str ( xmlParam , ext -> ns , value , & array_type )"		1922620	0					
ANR	1923338	Callee	get_type_str		1922620	0					
ANR	1923339	Identifier	get_type_str		1922620	0					
ANR	1923340	ArgumentList	xmlParam		1922620	1					
ANR	1923341	Argument	xmlParam		1922620	0					
ANR	1923342	Identifier	xmlParam		1922620	0					
ANR	1923343	Argument	ext -> ns		1922620	1					
ANR	1923344	PtrMemberAccess	ext -> ns		1922620	0					
ANR	1923345	Identifier	ext		1922620	0					
ANR	1923346	Identifier	ns		1922620	1					
ANR	1923347	Argument	value		1922620	2					
ANR	1923348	Identifier	value		1922620	0					
ANR	1923349	Argument	& array_type		1922620	3					
ANR	1923350	UnaryOperationExpression	& array_type		1922620	0					
ANR	1923351	UnaryOperator	&		1922620	0					
ANR	1923352	Identifier	array_type		1922620	1					
ANR	1923353	ElseStatement	else		1922620	0					
ANR	1923354	CompoundStatement		116:10:2889:2889	1922620	0					
ANR	1923355	ExpressionStatement	"smart_str_appends ( & array_type , value )"	2316:4:72175:72212	1922620	0	True				
ANR	1923356	CallExpression	"smart_str_appends ( & array_type , value )"		1922620	0					
ANR	1923357	Callee	smart_str_appends		1922620	0					
ANR	1923358	Identifier	smart_str_appends		1922620	0					
ANR	1923359	ArgumentList	& array_type		1922620	1					
ANR	1923360	Argument	& array_type		1922620	0					
ANR	1923361	UnaryOperationExpression	& array_type		1922620	0					
ANR	1923362	UnaryOperator	&		1922620	0					
ANR	1923363	Identifier	array_type		1922620	1					
ANR	1923364	Argument	value		1922620	1					
ANR	1923365	Identifier	value		1922620	0					
ANR	1923366	ExpressionStatement	"dims = safe_emalloc ( sizeof ( int ) , dimension , 0 )"	2319:3:72223:72269	1922620	6	True				
ANR	1923367	AssignmentExpression	"dims = safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1922620	0		=			
ANR	1923368	Identifier	dims		1922620	0					
ANR	1923369	CallExpression	"safe_emalloc ( sizeof ( int ) , dimension , 0 )"		1922620	1					
ANR	1923370	Callee	safe_emalloc		1922620	0					
ANR	1923371	Identifier	safe_emalloc		1922620	0					
ANR	1923372	ArgumentList	sizeof ( int )		1922620	1					
ANR	1923373	Argument	sizeof ( int )		1922620	0					
ANR	1923374	SizeofExpression	sizeof ( int )		1922620	0					
ANR	1923375	Sizeof	sizeof		1922620	0					
ANR	1923376	SizeofOperand	int		1922620	1					
ANR	1923377	Argument	dimension		1922620	1					
ANR	1923378	Identifier	dimension		1922620	0					
ANR	1923379	Argument	0		1922620	2					
ANR	1923380	PrimaryExpression	0		1922620	0					
ANR	1923381	ExpressionStatement	dims [ 0 ] = i	2320:3:72274:72285	1922620	7	True				
ANR	1923382	AssignmentExpression	dims [ 0 ] = i		1922620	0		=			
ANR	1923383	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923384	Identifier	dims		1922620	0					
ANR	1923385	PrimaryExpression	0		1922620	1					
ANR	1923386	Identifier	i		1922620	1					
ANR	1923387	ExpressionStatement	el = data	2321:3:72290:72299	1922620	8	True				
ANR	1923388	AssignmentExpression	el = data		1922620	0		=			
ANR	1923389	Identifier	el		1922620	0					
ANR	1923390	Identifier	data		1922620	1					
ANR	1923391	ForStatement	for ( i = 1 ; i < dimension ; i ++ )		1922620	9					
ANR	1923392	ForInit	i = 1 ;	2322:8:72309:72314	1922620	0	True				
ANR	1923393	AssignmentExpression	i = 1		1922620	0		=			
ANR	1923394	Identifier	i		1922620	0					
ANR	1923395	PrimaryExpression	1		1922620	1					
ANR	1923396	Condition	i < dimension	2322:15:72316:72328	1922620	1	True				
ANR	1923397	RelationalExpression	i < dimension		1922620	0		<			
ANR	1923398	Identifier	i		1922620	0					
ANR	1923399	Identifier	dimension		1922620	1					
ANR	1923400	PostIncDecOperationExpression	i ++	2322:30:72331:72333	1922620	2	True				
ANR	1923401	Identifier	i		1922620	0					
ANR	1923402	IncDec	++		1922620	1					
ANR	1923403	CompoundStatement		123:35:3056:3056	1922620	3					
ANR	1923404	IfStatement	if ( el != NULL && Z_TYPE_P ( el ) == IS_ARRAY && zend_hash_num_elements ( Z_ARRVAL_P ( el ) ) > 0 )		1922620	0					
ANR	1923405	Condition	el != NULL && Z_TYPE_P ( el ) == IS_ARRAY && zend_hash_num_elements ( Z_ARRVAL_P ( el ) ) > 0	2323:8:72346:72437	1922620	0	True				
ANR	1923406	AndExpression	el != NULL && Z_TYPE_P ( el ) == IS_ARRAY && zend_hash_num_elements ( Z_ARRVAL_P ( el ) ) > 0		1922620	0		&&			
ANR	1923407	EqualityExpression	el != NULL		1922620	0		!=			
ANR	1923408	Identifier	el		1922620	0					
ANR	1923409	Identifier	NULL		1922620	1					
ANR	1923410	AndExpression	Z_TYPE_P ( el ) == IS_ARRAY && zend_hash_num_elements ( Z_ARRVAL_P ( el ) ) > 0		1922620	1		&&			
ANR	1923411	EqualityExpression	Z_TYPE_P ( el ) == IS_ARRAY		1922620	0		==			
ANR	1923412	CallExpression	Z_TYPE_P ( el )		1922620	0					
ANR	1923413	Callee	Z_TYPE_P		1922620	0					
ANR	1923414	Identifier	Z_TYPE_P		1922620	0					
ANR	1923415	ArgumentList	el		1922620	1					
ANR	1923416	Argument	el		1922620	0					
ANR	1923417	Identifier	el		1922620	0					
ANR	1923418	Identifier	IS_ARRAY		1922620	1					
ANR	1923419	RelationalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( el ) ) > 0		1922620	1		>			
ANR	1923420	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( el ) )		1922620	0					
ANR	1923421	Callee	zend_hash_num_elements		1922620	0					
ANR	1923422	Identifier	zend_hash_num_elements		1922620	0					
ANR	1923423	ArgumentList	Z_ARRVAL_P ( el )		1922620	1					
ANR	1923424	Argument	Z_ARRVAL_P ( el )		1922620	0					
ANR	1923425	CallExpression	Z_ARRVAL_P ( el )		1922620	0					
ANR	1923426	Callee	Z_ARRVAL_P		1922620	0					
ANR	1923427	Identifier	Z_ARRVAL_P		1922620	0					
ANR	1923428	ArgumentList	el		1922620	1					
ANR	1923429	Argument	el		1922620	0					
ANR	1923430	Identifier	el		1922620	0					
ANR	1923431	PrimaryExpression	0		1922620	1					
ANR	1923432	CompoundStatement		125:52:3160:3160	1922620	1					
ANR	1923433	Statement	ZEND_HASH_FOREACH_VAL_IND	2325:8:72450:72474	1922620	0	True				
ANR	1923434	Statement	(	2325:33:72475:72475	1922620	1	True				
ANR	1923435	Statement	Z_ARRVAL_P	2325:34:72476:72485	1922620	2	True				
ANR	1923436	Statement	(	2325:44:72486:72486	1922620	3	True				
ANR	1923437	Statement	el	2325:45:72487:72488	1922620	4	True				
ANR	1923438	Statement	)	2325:47:72489:72489	1922620	5	True				
ANR	1923439	Statement	","	2325:48:72490:72490	1922620	6	True				
ANR	1923440	Statement	el	2325:50:72492:72493	1922620	7	True				
ANR	1923441	Statement	)	2325:52:72494:72494	1922620	8	True				
ANR	1923442	CompoundStatement		126:54:3216:3216	1922620	9					
ANR	1923443	BreakStatement	break ;	2326:9:72507:72512	1922620	0	True				
ANR	1923444	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2327:10:72524:72547	1922620	10	True				
ANR	1923445	CallExpression	ZEND_HASH_FOREACH_END ( )		1922620	0					
ANR	1923446	Callee	ZEND_HASH_FOREACH_END		1922620	0					
ANR	1923447	Identifier	ZEND_HASH_FOREACH_END		1922620	0					
ANR	1923448	ArgumentList			1922620	1					
ANR	1923449	IfStatement	if ( Z_TYPE_P ( el ) == IS_ARRAY )		1922620	11					
ANR	1923450	Condition	Z_TYPE_P ( el ) == IS_ARRAY	2328:9:72558:72581	1922620	0	True				
ANR	1923451	EqualityExpression	Z_TYPE_P ( el ) == IS_ARRAY		1922620	0		==			
ANR	1923452	CallExpression	Z_TYPE_P ( el )		1922620	0					
ANR	1923453	Callee	Z_TYPE_P		1922620	0					
ANR	1923454	Identifier	Z_TYPE_P		1922620	0					
ANR	1923455	ArgumentList	el		1922620	1					
ANR	1923456	Argument	el		1922620	0					
ANR	1923457	Identifier	el		1922620	0					
ANR	1923458	Identifier	IS_ARRAY		1922620	1					
ANR	1923459	CompoundStatement		129:35:3304:3304	1922620	1					
ANR	1923460	ExpressionStatement	dims [ i ] = zend_hash_num_elements ( Z_ARRVAL_P ( el ) )	2329:6:72592:72640	1922620	0	True				
ANR	1923461	AssignmentExpression	dims [ i ] = zend_hash_num_elements ( Z_ARRVAL_P ( el ) )		1922620	0		=			
ANR	1923462	ArrayIndexing	dims [ i ]		1922620	0					
ANR	1923463	Identifier	dims		1922620	0					
ANR	1923464	Identifier	i		1922620	1					
ANR	1923465	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( el ) )		1922620	1					
ANR	1923466	Callee	zend_hash_num_elements		1922620	0					
ANR	1923467	Identifier	zend_hash_num_elements		1922620	0					
ANR	1923468	ArgumentList	Z_ARRVAL_P ( el )		1922620	1					
ANR	1923469	Argument	Z_ARRVAL_P ( el )		1922620	0					
ANR	1923470	CallExpression	Z_ARRVAL_P ( el )		1922620	0					
ANR	1923471	Callee	Z_ARRVAL_P		1922620	0					
ANR	1923472	Identifier	Z_ARRVAL_P		1922620	0					
ANR	1923473	ArgumentList	el		1922620	1					
ANR	1923474	Argument	el		1922620	0					
ANR	1923475	Identifier	el		1922620	0					
ANR	1923476	ElseStatement	else		1922620	0					
ANR	1923477	CompoundStatement		131:12:3374:3374	1922620	0					
ANR	1923478	ExpressionStatement	dims [ i ] = 0	2331:6:72662:72673	1922620	0	True				
ANR	1923479	AssignmentExpression	dims [ i ] = 0		1922620	0		=			
ANR	1923480	ArrayIndexing	dims [ i ]		1922620	0					
ANR	1923481	Identifier	dims		1922620	0					
ANR	1923482	Identifier	i		1922620	1					
ANR	1923483	PrimaryExpression	0		1922620	1					
ANR	1923484	ExpressionStatement	"smart_str_append_long ( & array_size , dims [ 0 ] )"	2336:3:72697:72740	1922620	10	True				
ANR	1923485	CallExpression	"smart_str_append_long ( & array_size , dims [ 0 ] )"		1922620	0					
ANR	1923486	Callee	smart_str_append_long		1922620	0					
ANR	1923487	Identifier	smart_str_append_long		1922620	0					
ANR	1923488	ArgumentList	& array_size		1922620	1					
ANR	1923489	Argument	& array_size		1922620	0					
ANR	1923490	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923491	UnaryOperator	&		1922620	0					
ANR	1923492	Identifier	array_size		1922620	1					
ANR	1923493	Argument	dims [ 0 ]		1922620	1					
ANR	1923494	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923495	Identifier	dims		1922620	0					
ANR	1923496	PrimaryExpression	0		1922620	1					
ANR	1923497	ForStatement	for ( i = 1 ; i < dimension ; i ++ )		1922620	11					
ANR	1923498	ForInit	i = 1 ;	2337:8:72750:72753	1922620	0	True				
ANR	1923499	AssignmentExpression	i = 1		1922620	0		=			
ANR	1923500	Identifier	i		1922620	0					
ANR	1923501	PrimaryExpression	1		1922620	1					
ANR	1923502	Condition	i < dimension	2337:13:72755:72765	1922620	1	True				
ANR	1923503	RelationalExpression	i < dimension		1922620	0		<			
ANR	1923504	Identifier	i		1922620	0					
ANR	1923505	Identifier	dimension		1922620	1					
ANR	1923506	PostIncDecOperationExpression	i ++	2337:26:72768:72770	1922620	2	True				
ANR	1923507	Identifier	i		1922620	0					
ANR	1923508	IncDec	++		1922620	1					
ANR	1923509	CompoundStatement		138:31:3493:3493	1922620	3					
ANR	1923510	ExpressionStatement	"smart_str_appendc ( & array_size , ',' )"	2338:4:72779:72814	1922620	0	True				
ANR	1923511	CallExpression	"smart_str_appendc ( & array_size , ',' )"		1922620	0					
ANR	1923512	Callee	smart_str_appendc		1922620	0					
ANR	1923513	Identifier	smart_str_appendc		1922620	0					
ANR	1923514	ArgumentList	& array_size		1922620	1					
ANR	1923515	Argument	& array_size		1922620	0					
ANR	1923516	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923517	UnaryOperator	&		1922620	0					
ANR	1923518	Identifier	array_size		1922620	1					
ANR	1923519	Argument	"','"		1922620	1					
ANR	1923520	PrimaryExpression	"','"		1922620	0					
ANR	1923521	ExpressionStatement	"smart_str_append_long ( & array_size , dims [ i ] )"	2339:4:72820:72863	1922620	1	True				
ANR	1923522	CallExpression	"smart_str_append_long ( & array_size , dims [ i ] )"		1922620	0					
ANR	1923523	Callee	smart_str_append_long		1922620	0					
ANR	1923524	Identifier	smart_str_append_long		1922620	0					
ANR	1923525	ArgumentList	& array_size		1922620	1					
ANR	1923526	Argument	& array_size		1922620	0					
ANR	1923527	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923528	UnaryOperator	&		1922620	0					
ANR	1923529	Identifier	array_size		1922620	1					
ANR	1923530	Argument	dims [ i ]		1922620	1					
ANR	1923531	ArrayIndexing	dims [ i ]		1922620	0					
ANR	1923532	Identifier	dims		1922620	0					
ANR	1923533	Identifier	i		1922620	1					
ANR	1923534	ExpressionStatement	efree ( value )	2342:3:72874:72886	1922620	12	True				
ANR	1923535	CallExpression	efree ( value )		1922620	0					
ANR	1923536	Callee	efree		1922620	0					
ANR	1923537	Identifier	efree		1922620	0					
ANR	1923538	ArgumentList	value		1922620	1					
ANR	1923539	Argument	value		1922620	0					
ANR	1923540	Identifier	value		1922620	0					
ANR	1923541	Statement	(	2344:12:72901:72901	1922620	65	True				
ANR	1923542	Statement	sdl_type	2344:13:72902:72909	1922620	66	True				
ANR	1923543	Statement	&&	2344:22:72911:72912	1922620	67	True				
ANR	1923544	Statement	sdl_type	2345:13:72927:72934	1922620	68	True				
ANR	1923545	Statement	->	2345:21:72935:72936	1922620	69	True				
ANR	1923546	Statement	attributes	2345:23:72937:72946	1922620	70	True				
ANR	1923547	Statement	&&	2345:34:72948:72949	1922620	71	True				
ANR	1923548	Statement	(	2346:13:72964:72964	1922620	72	True				
ANR	1923549	Statement	arrayType	2346:14:72965:72973	1922620	73	True				
ANR	1923550	Statement	=	2346:24:72975:72975	1922620	74	True				
ANR	1923551	Statement	zend_hash_str_find_ptr	2346:26:72977:72998	1922620	75	True				
ANR	1923552	Statement	(	2346:48:72999:72999	1922620	76	True				
ANR	1923553	Statement	sdl_type	2346:49:73000:73007	1922620	77	True				
ANR	1923554	Statement	->	2346:57:73008:73009	1922620	78	True				
ANR	1923555	Statement	attributes	2346:59:73010:73019	1922620	79	True				
ANR	1923556	Statement	","	2346:69:73020:73020	1922620	80	True				
ANR	1923557	Statement	SOAP_1_2_ENC_NAMESPACE	2346:71:73022:73043	1922620	81	True				
ANR	1923558	Statement	""":itemType"""	2346:93:73044:73054	1922620	82	True				
ANR	1923559	Statement	","	2346:104:73055:73055	1922620	83	True				
ANR	1923560	Statement	sizeof	2347:15:73072:73077	1922620	84	True				
ANR	1923561	Statement	(	2347:21:73078:73078	1922620	85	True				
ANR	1923562	Statement	SOAP_1_2_ENC_NAMESPACE	2347:22:73079:73100	1922620	86	True				
ANR	1923563	Statement	""":itemType"""	2347:44:73101:73111	1922620	87	True				
ANR	1923564	Statement	)	2347:55:73112:73112	1922620	88	True				
ANR	1923565	Statement	-	2347:56:73113:73113	1922620	89	True				
ANR	1923566	Statement	1	2347:57:73114:73114	1922620	90	True				
ANR	1923567	Statement	)	2347:58:73115:73115	1922620	91	True				
ANR	1923568	Statement	)	2347:59:73116:73116	1922620	92	True				
ANR	1923569	Statement	!=	2347:61:73118:73119	1922620	93	True				
ANR	1923570	Statement	NULL	2347:64:73121:73124	1922620	94	True				
ANR	1923571	Statement	&&	2347:69:73126:73127	1922620	95	True				
ANR	1923572	Statement	arrayType	2348:13:73142:73150	1922620	96	True				
ANR	1923573	Statement	->	2348:22:73151:73152	1922620	97	True				
ANR	1923574	Statement	extraAttributes	2348:24:73153:73167	1922620	98	True				
ANR	1923575	Statement	&&	2348:40:73169:73170	1922620	99	True				
ANR	1923576	Statement	(	2349:13:73185:73185	1922620	100	True				
ANR	1923577	Statement	ext	2349:14:73186:73188	1922620	101	True				
ANR	1923578	Statement	=	2349:18:73190:73190	1922620	102	True				
ANR	1923579	Statement	zend_hash_str_find_ptr	2349:20:73192:73213	1922620	103	True				
ANR	1923580	Statement	(	2349:42:73214:73214	1922620	104	True				
ANR	1923581	Statement	arrayType	2349:43:73215:73223	1922620	105	True				
ANR	1923582	Statement	->	2349:52:73224:73225	1922620	106	True				
ANR	1923583	Statement	extraAttributes	2349:54:73226:73240	1922620	107	True				
ANR	1923584	Statement	","	2349:69:73241:73241	1922620	108	True				
ANR	1923585	Statement	WSDL_NAMESPACE	2349:71:73243:73256	1922620	109	True				
ANR	1923586	Statement	""":itemType"""	2349:85:73257:73267	1922620	110	True				
ANR	1923587	Statement	","	2349:96:73268:73268	1922620	111	True				
ANR	1923588	Statement	sizeof	2349:98:73270:73275	1922620	112	True				
ANR	1923589	Statement	(	2349:104:73276:73276	1922620	113	True				
ANR	1923590	Statement	WSDL_NAMESPACE	2349:105:73277:73290	1922620	114	True				
ANR	1923591	Statement	""":itemType"""	2349:119:73291:73301	1922620	115	True				
ANR	1923592	Statement	)	2349:130:73302:73302	1922620	116	True				
ANR	1923593	Statement	-	2349:131:73303:73303	1922620	117	True				
ANR	1923594	Statement	1	2349:132:73304:73304	1922620	118	True				
ANR	1923595	Statement	)	2349:133:73305:73305	1922620	119	True				
ANR	1923596	Statement	)	2349:134:73306:73306	1922620	120	True				
ANR	1923597	Statement	!=	2349:136:73308:73309	1922620	121	True				
ANR	1923598	Statement	NULL	2349:139:73311:73314	1922620	122	True				
ANR	1923599	Statement	)	2349:143:73315:73315	1922620	123	True				
ANR	1923600	CompoundStatement		150:145:4037:4037	1922620	124					
ANR	1923601	IfStatement	if ( ext -> ns != NULL )		1922620	0					
ANR	1923602	Condition	ext -> ns != NULL	2350:7:73326:73340	1922620	0	True				
ANR	1923603	EqualityExpression	ext -> ns != NULL		1922620	0		!=			
ANR	1923604	PtrMemberAccess	ext -> ns		1922620	0					
ANR	1923605	Identifier	ext		1922620	0					
ANR	1923606	Identifier	ns		1922620	1					
ANR	1923607	Identifier	NULL		1922620	1					
ANR	1923608	CompoundStatement		151:24:4063:4063	1922620	1					
ANR	1923609	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , ext -> val )"	2351:4:73349:73403	1922620	0	True				
ANR	1923610	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , ext -> val )"		1922620	0		=			
ANR	1923611	Identifier	enc		1922620	0					
ANR	1923612	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , ext -> val )"		1922620	1					
ANR	1923613	Callee	get_encoder		1922620	0					
ANR	1923614	Identifier	get_encoder		1922620	0					
ANR	1923615	ArgumentList	SOAP_GLOBAL ( sdl )		1922620	1					
ANR	1923616	Argument	SOAP_GLOBAL ( sdl )		1922620	0					
ANR	1923617	CallExpression	SOAP_GLOBAL ( sdl )		1922620	0					
ANR	1923618	Callee	SOAP_GLOBAL		1922620	0					
ANR	1923619	Identifier	SOAP_GLOBAL		1922620	0					
ANR	1923620	ArgumentList	sdl		1922620	1					
ANR	1923621	Argument	sdl		1922620	0					
ANR	1923622	Identifier	sdl		1922620	0					
ANR	1923623	Argument	ext -> ns		1922620	1					
ANR	1923624	PtrMemberAccess	ext -> ns		1922620	0					
ANR	1923625	Identifier	ext		1922620	0					
ANR	1923626	Identifier	ns		1922620	1					
ANR	1923627	Argument	ext -> val		1922620	2					
ANR	1923628	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923629	Identifier	ext		1922620	0					
ANR	1923630	Identifier	val		1922620	1					
ANR	1923631	ExpressionStatement	"get_type_str ( xmlParam , ext -> ns , ext -> val , & array_type )"	2352:4:73409:73463	1922620	1	True				
ANR	1923632	CallExpression	"get_type_str ( xmlParam , ext -> ns , ext -> val , & array_type )"		1922620	0					
ANR	1923633	Callee	get_type_str		1922620	0					
ANR	1923634	Identifier	get_type_str		1922620	0					
ANR	1923635	ArgumentList	xmlParam		1922620	1					
ANR	1923636	Argument	xmlParam		1922620	0					
ANR	1923637	Identifier	xmlParam		1922620	0					
ANR	1923638	Argument	ext -> ns		1922620	1					
ANR	1923639	PtrMemberAccess	ext -> ns		1922620	0					
ANR	1923640	Identifier	ext		1922620	0					
ANR	1923641	Identifier	ns		1922620	1					
ANR	1923642	Argument	ext -> val		1922620	2					
ANR	1923643	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923644	Identifier	ext		1922620	0					
ANR	1923645	Identifier	val		1922620	1					
ANR	1923646	Argument	& array_type		1922620	3					
ANR	1923647	UnaryOperationExpression	& array_type		1922620	0					
ANR	1923648	UnaryOperator	&		1922620	0					
ANR	1923649	Identifier	array_type		1922620	1					
ANR	1923650	ElseStatement	else		1922620	0					
ANR	1923651	CompoundStatement		154:10:4195:4195	1922620	0					
ANR	1923652	ExpressionStatement	"smart_str_appends ( & array_type , ext -> val )"	2354:4:73481:73521	1922620	0	True				
ANR	1923653	CallExpression	"smart_str_appends ( & array_type , ext -> val )"		1922620	0					
ANR	1923654	Callee	smart_str_appends		1922620	0					
ANR	1923655	Identifier	smart_str_appends		1922620	0					
ANR	1923656	ArgumentList	& array_type		1922620	1					
ANR	1923657	Argument	& array_type		1922620	0					
ANR	1923658	UnaryOperationExpression	& array_type		1922620	0					
ANR	1923659	UnaryOperator	&		1922620	0					
ANR	1923660	Identifier	array_type		1922620	1					
ANR	1923661	Argument	ext -> val		1922620	1					
ANR	1923662	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923663	Identifier	ext		1922620	0					
ANR	1923664	Identifier	val		1922620	1					
ANR	1923665	Statement	if	2356:3:73531:73532	1922620	1	True				
ANR	1923666	Statement	(	2356:6:73534:73534	1922620	2	True				
ANR	1923667	Statement	(	2356:7:73535:73535	1922620	3	True				
ANR	1923668	Statement	arrayType	2356:8:73536:73544	1922620	4	True				
ANR	1923669	Statement	=	2356:18:73546:73546	1922620	5	True				
ANR	1923670	Statement	zend_hash_str_find_ptr	2356:20:73548:73569	1922620	6	True				
ANR	1923671	Statement	(	2356:42:73570:73570	1922620	7	True				
ANR	1923672	Statement	sdl_type	2356:43:73571:73578	1922620	8	True				
ANR	1923673	Statement	->	2356:51:73579:73580	1922620	9	True				
ANR	1923674	Statement	attributes	2356:53:73581:73590	1922620	10	True				
ANR	1923675	Statement	","	2356:63:73591:73591	1922620	11	True				
ANR	1923676	Statement	SOAP_1_2_ENC_NAMESPACE	2356:65:73593:73614	1922620	12	True				
ANR	1923677	Statement	""":arraySize"""	2356:87:73615:73626	1922620	13	True				
ANR	1923678	Statement	","	2356:99:73627:73627	1922620	14	True				
ANR	1923679	Statement	sizeof	2357:22:73651:73656	1922620	15	True				
ANR	1923680	Statement	(	2357:28:73657:73657	1922620	16	True				
ANR	1923681	Statement	SOAP_1_2_ENC_NAMESPACE	2357:29:73658:73679	1922620	17	True				
ANR	1923682	Statement	""":arraySize"""	2357:51:73680:73691	1922620	18	True				
ANR	1923683	Statement	)	2357:63:73692:73692	1922620	19	True				
ANR	1923684	Statement	-	2357:64:73693:73693	1922620	20	True				
ANR	1923685	Statement	1	2357:65:73694:73694	1922620	21	True				
ANR	1923686	Statement	)	2357:66:73695:73695	1922620	22	True				
ANR	1923687	Statement	)	2357:67:73696:73696	1922620	23	True				
ANR	1923688	Statement	!=	2357:69:73698:73699	1922620	24	True				
ANR	1923689	Statement	NULL	2357:72:73701:73704	1922620	25	True				
ANR	1923690	Statement	&&	2357:77:73706:73707	1922620	26	True				
ANR	1923691	Statement	arrayType	2358:7:73716:73724	1922620	27	True				
ANR	1923692	Statement	->	2358:16:73725:73726	1922620	28	True				
ANR	1923693	Statement	extraAttributes	2358:18:73727:73741	1922620	29	True				
ANR	1923694	Statement	&&	2358:34:73743:73744	1922620	30	True				
ANR	1923695	Statement	(	2359:7:73753:73753	1922620	31	True				
ANR	1923696	Statement	ext	2359:8:73754:73756	1922620	32	True				
ANR	1923697	Statement	=	2359:12:73758:73758	1922620	33	True				
ANR	1923698	Statement	zend_hash_str_find_ptr	2359:14:73760:73781	1922620	34	True				
ANR	1923699	Statement	(	2359:36:73782:73782	1922620	35	True				
ANR	1923700	Statement	arrayType	2359:37:73783:73791	1922620	36	True				
ANR	1923701	Statement	->	2359:46:73792:73793	1922620	37	True				
ANR	1923702	Statement	extraAttributes	2359:48:73794:73808	1922620	38	True				
ANR	1923703	Statement	","	2359:63:73809:73809	1922620	39	True				
ANR	1923704	Statement	WSDL_NAMESPACE	2359:65:73811:73824	1922620	40	True				
ANR	1923705	Statement	""":arraySize"""	2359:79:73825:73836	1922620	41	True				
ANR	1923706	Statement	","	2359:91:73837:73837	1922620	42	True				
ANR	1923707	Statement	sizeof	2359:93:73839:73844	1922620	43	True				
ANR	1923708	Statement	(	2359:99:73845:73845	1922620	44	True				
ANR	1923709	Statement	WSDL_NAMESPACE	2359:100:73846:73859	1922620	45	True				
ANR	1923710	Statement	""":arraysize"""	2359:114:73860:73871	1922620	46	True				
ANR	1923711	Statement	)	2359:126:73872:73872	1922620	47	True				
ANR	1923712	Statement	-	2359:127:73873:73873	1922620	48	True				
ANR	1923713	Statement	1	2359:128:73874:73874	1922620	49	True				
ANR	1923714	Statement	)	2359:129:73875:73875	1922620	50	True				
ANR	1923715	Statement	)	2359:130:73876:73876	1922620	51	True				
ANR	1923716	Statement	!=	2359:132:73878:73879	1922620	52	True				
ANR	1923717	Statement	NULL	2359:135:73881:73884	1922620	53	True				
ANR	1923718	Statement	)	2359:139:73885:73885	1922620	54	True				
ANR	1923719	CompoundStatement		160:141:4607:4607	1922620	55					
ANR	1923720	ExpressionStatement	dimension = calc_dimension_12 ( ext -> val )	2360:4:73893:73932	1922620	0	True				
ANR	1923721	AssignmentExpression	dimension = calc_dimension_12 ( ext -> val )		1922620	0		=			
ANR	1923722	Identifier	dimension		1922620	0					
ANR	1923723	CallExpression	calc_dimension_12 ( ext -> val )		1922620	1					
ANR	1923724	Callee	calc_dimension_12		1922620	0					
ANR	1923725	Identifier	calc_dimension_12		1922620	0					
ANR	1923726	ArgumentList	ext -> val		1922620	1					
ANR	1923727	Argument	ext -> val		1922620	0					
ANR	1923728	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923729	Identifier	ext		1922620	0					
ANR	1923730	Identifier	val		1922620	1					
ANR	1923731	ExpressionStatement	"dims = get_position_12 ( dimension , ext -> val )"	2361:4:73938:73981	1922620	1	True				
ANR	1923732	AssignmentExpression	"dims = get_position_12 ( dimension , ext -> val )"		1922620	0		=			
ANR	1923733	Identifier	dims		1922620	0					
ANR	1923734	CallExpression	"get_position_12 ( dimension , ext -> val )"		1922620	1					
ANR	1923735	Callee	get_position_12		1922620	0					
ANR	1923736	Identifier	get_position_12		1922620	0					
ANR	1923737	ArgumentList	dimension		1922620	1					
ANR	1923738	Argument	dimension		1922620	0					
ANR	1923739	Identifier	dimension		1922620	0					
ANR	1923740	Argument	ext -> val		1922620	1					
ANR	1923741	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923742	Identifier	ext		1922620	0					
ANR	1923743	Identifier	val		1922620	1					
ANR	1923744	IfStatement	if ( dims [ 0 ] == 0 )		1922620	2					
ANR	1923745	Condition	dims [ 0 ] == 0	2362:8:73991:74002	1922620	0	True				
ANR	1923746	EqualityExpression	dims [ 0 ] == 0		1922620	0		==			
ANR	1923747	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923748	Identifier	dims		1922620	0					
ANR	1923749	PrimaryExpression	0		1922620	1					
ANR	1923750	PrimaryExpression	0		1922620	1					
ANR	1923751	CompoundStatement		163:22:4725:4725	1922620	1					
ANR	1923752	ExpressionStatement	dims [ 0 ] = i	2362:23:74006:74017	1922620	0	True				
ANR	1923753	AssignmentExpression	dims [ 0 ] = i		1922620	0		=			
ANR	1923754	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923755	Identifier	dims		1922620	0					
ANR	1923756	PrimaryExpression	0		1922620	1					
ANR	1923757	Identifier	i		1922620	1					
ANR	1923758	ExpressionStatement	"smart_str_append_long ( & array_size , dims [ 0 ] )"	2364:4:74025:74068	1922620	3	True				
ANR	1923759	CallExpression	"smart_str_append_long ( & array_size , dims [ 0 ] )"		1922620	0					
ANR	1923760	Callee	smart_str_append_long		1922620	0					
ANR	1923761	Identifier	smart_str_append_long		1922620	0					
ANR	1923762	ArgumentList	& array_size		1922620	1					
ANR	1923763	Argument	& array_size		1922620	0					
ANR	1923764	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923765	UnaryOperator	&		1922620	0					
ANR	1923766	Identifier	array_size		1922620	1					
ANR	1923767	Argument	dims [ 0 ]		1922620	1					
ANR	1923768	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923769	Identifier	dims		1922620	0					
ANR	1923770	PrimaryExpression	0		1922620	1					
ANR	1923771	ForStatement	for ( i = 1 ; i < dimension ; i ++ )		1922620	4					
ANR	1923772	ForInit	i = 1 ;	2365:9:74079:74082	1922620	0	True				
ANR	1923773	AssignmentExpression	i = 1		1922620	0		=			
ANR	1923774	Identifier	i		1922620	0					
ANR	1923775	PrimaryExpression	1		1922620	1					
ANR	1923776	Condition	i < dimension	2365:14:74084:74094	1922620	1	True				
ANR	1923777	RelationalExpression	i < dimension		1922620	0		<			
ANR	1923778	Identifier	i		1922620	0					
ANR	1923779	Identifier	dimension		1922620	1					
ANR	1923780	PostIncDecOperationExpression	i ++	2365:27:74097:74099	1922620	2	True				
ANR	1923781	Identifier	i		1922620	0					
ANR	1923782	IncDec	++		1922620	1					
ANR	1923783	CompoundStatement		166:32:4822:4822	1922620	3					
ANR	1923784	ExpressionStatement	"smart_str_appendc ( & array_size , ',' )"	2366:5:74109:74144	1922620	0	True				
ANR	1923785	CallExpression	"smart_str_appendc ( & array_size , ',' )"		1922620	0					
ANR	1923786	Callee	smart_str_appendc		1922620	0					
ANR	1923787	Identifier	smart_str_appendc		1922620	0					
ANR	1923788	ArgumentList	& array_size		1922620	1					
ANR	1923789	Argument	& array_size		1922620	0					
ANR	1923790	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923791	UnaryOperator	&		1922620	0					
ANR	1923792	Identifier	array_size		1922620	1					
ANR	1923793	Argument	"','"		1922620	1					
ANR	1923794	PrimaryExpression	"','"		1922620	0					
ANR	1923795	ExpressionStatement	"smart_str_append_long ( & array_size , dims [ i ] )"	2367:5:74151:74194	1922620	1	True				
ANR	1923796	CallExpression	"smart_str_append_long ( & array_size , dims [ i ] )"		1922620	0					
ANR	1923797	Callee	smart_str_append_long		1922620	0					
ANR	1923798	Identifier	smart_str_append_long		1922620	0					
ANR	1923799	ArgumentList	& array_size		1922620	1					
ANR	1923800	Argument	& array_size		1922620	0					
ANR	1923801	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923802	UnaryOperator	&		1922620	0					
ANR	1923803	Identifier	array_size		1922620	1					
ANR	1923804	Argument	dims [ i ]		1922620	1					
ANR	1923805	ArrayIndexing	dims [ i ]		1922620	0					
ANR	1923806	Identifier	dims		1922620	0					
ANR	1923807	Identifier	i		1922620	1					
ANR	1923808	Statement	(	2374:12:74322:74322	1922620	125	True				
ANR	1923809	Statement	sdl_type	2374:13:74323:74330	1922620	126	True				
ANR	1923810	Statement	&&	2374:22:74332:74333	1922620	127	True				
ANR	1923811	Statement	sdl_type	2375:13:74348:74355	1922620	128	True				
ANR	1923812	Statement	->	2375:21:74356:74357	1922620	129	True				
ANR	1923813	Statement	attributes	2375:23:74358:74367	1922620	130	True				
ANR	1923814	Statement	&&	2375:34:74369:74370	1922620	131	True				
ANR	1923815	Statement	(	2376:13:74385:74385	1922620	132	True				
ANR	1923816	Statement	arrayType	2376:14:74386:74394	1922620	133	True				
ANR	1923817	Statement	=	2376:24:74396:74396	1922620	134	True				
ANR	1923818	Statement	zend_hash_str_find_ptr	2376:26:74398:74419	1922620	135	True				
ANR	1923819	Statement	(	2376:48:74420:74420	1922620	136	True				
ANR	1923820	Statement	sdl_type	2376:49:74421:74428	1922620	137	True				
ANR	1923821	Statement	->	2376:57:74429:74430	1922620	138	True				
ANR	1923822	Statement	attributes	2376:59:74431:74440	1922620	139	True				
ANR	1923823	Statement	","	2376:69:74441:74441	1922620	140	True				
ANR	1923824	Statement	SOAP_1_2_ENC_NAMESPACE	2376:71:74443:74464	1922620	141	True				
ANR	1923825	Statement	""":arraySize"""	2376:93:74465:74476	1922620	142	True				
ANR	1923826	Statement	","	2376:105:74477:74477	1922620	143	True				
ANR	1923827	Statement	sizeof	2377:15:74494:74499	1922620	144	True				
ANR	1923828	Statement	(	2377:21:74500:74500	1922620	145	True				
ANR	1923829	Statement	SOAP_1_2_ENC_NAMESPACE	2377:22:74501:74522	1922620	146	True				
ANR	1923830	Statement	""":arraySize"""	2377:44:74523:74534	1922620	147	True				
ANR	1923831	Statement	)	2377:56:74535:74535	1922620	148	True				
ANR	1923832	Statement	-	2377:57:74536:74536	1922620	149	True				
ANR	1923833	Statement	1	2377:58:74537:74537	1922620	150	True				
ANR	1923834	Statement	)	2377:59:74538:74538	1922620	151	True				
ANR	1923835	Statement	)	2377:60:74539:74539	1922620	152	True				
ANR	1923836	Statement	!=	2377:62:74541:74542	1922620	153	True				
ANR	1923837	Statement	NULL	2377:65:74544:74547	1922620	154	True				
ANR	1923838	Statement	&&	2377:70:74549:74550	1922620	155	True				
ANR	1923839	Statement	arrayType	2378:13:74565:74573	1922620	156	True				
ANR	1923840	Statement	->	2378:22:74574:74575	1922620	157	True				
ANR	1923841	Statement	extraAttributes	2378:24:74576:74590	1922620	158	True				
ANR	1923842	Statement	&&	2378:40:74592:74593	1922620	159	True				
ANR	1923843	Statement	(	2379:13:74608:74608	1922620	160	True				
ANR	1923844	Statement	ext	2379:14:74609:74611	1922620	161	True				
ANR	1923845	Statement	=	2379:18:74613:74613	1922620	162	True				
ANR	1923846	Statement	zend_hash_str_find_ptr	2379:20:74615:74636	1922620	163	True				
ANR	1923847	Statement	(	2379:42:74637:74637	1922620	164	True				
ANR	1923848	Statement	arrayType	2379:43:74638:74646	1922620	165	True				
ANR	1923849	Statement	->	2379:52:74647:74648	1922620	166	True				
ANR	1923850	Statement	extraAttributes	2379:54:74649:74663	1922620	167	True				
ANR	1923851	Statement	","	2379:69:74664:74664	1922620	168	True				
ANR	1923852	Statement	WSDL_NAMESPACE	2379:71:74666:74679	1922620	169	True				
ANR	1923853	Statement	""":arraySize"""	2379:85:74680:74691	1922620	170	True				
ANR	1923854	Statement	","	2379:97:74692:74692	1922620	171	True				
ANR	1923855	Statement	sizeof	2379:99:74694:74699	1922620	172	True				
ANR	1923856	Statement	(	2379:105:74700:74700	1922620	173	True				
ANR	1923857	Statement	WSDL_NAMESPACE	2379:106:74701:74714	1922620	174	True				
ANR	1923858	Statement	""":arraySize"""	2379:120:74715:74726	1922620	175	True				
ANR	1923859	Statement	)	2379:132:74727:74727	1922620	176	True				
ANR	1923860	Statement	-	2379:133:74728:74728	1922620	177	True				
ANR	1923861	Statement	1	2379:134:74729:74729	1922620	178	True				
ANR	1923862	Statement	)	2379:135:74730:74730	1922620	179	True				
ANR	1923863	Statement	)	2379:136:74731:74731	1922620	180	True				
ANR	1923864	Statement	!=	2379:138:74733:74734	1922620	181	True				
ANR	1923865	Statement	NULL	2379:141:74736:74739	1922620	182	True				
ANR	1923866	Statement	)	2379:145:74740:74740	1922620	183	True				
ANR	1923867	CompoundStatement		180:147:5462:5462	1922620	184					
ANR	1923868	ExpressionStatement	dimension = calc_dimension_12 ( ext -> val )	2380:3:74747:74786	1922620	0	True				
ANR	1923869	AssignmentExpression	dimension = calc_dimension_12 ( ext -> val )		1922620	0		=			
ANR	1923870	Identifier	dimension		1922620	0					
ANR	1923871	CallExpression	calc_dimension_12 ( ext -> val )		1922620	1					
ANR	1923872	Callee	calc_dimension_12		1922620	0					
ANR	1923873	Identifier	calc_dimension_12		1922620	0					
ANR	1923874	ArgumentList	ext -> val		1922620	1					
ANR	1923875	Argument	ext -> val		1922620	0					
ANR	1923876	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923877	Identifier	ext		1922620	0					
ANR	1923878	Identifier	val		1922620	1					
ANR	1923879	ExpressionStatement	"dims = get_position_12 ( dimension , ext -> val )"	2381:3:74791:74834	1922620	1	True				
ANR	1923880	AssignmentExpression	"dims = get_position_12 ( dimension , ext -> val )"		1922620	0		=			
ANR	1923881	Identifier	dims		1922620	0					
ANR	1923882	CallExpression	"get_position_12 ( dimension , ext -> val )"		1922620	1					
ANR	1923883	Callee	get_position_12		1922620	0					
ANR	1923884	Identifier	get_position_12		1922620	0					
ANR	1923885	ArgumentList	dimension		1922620	1					
ANR	1923886	Argument	dimension		1922620	0					
ANR	1923887	Identifier	dimension		1922620	0					
ANR	1923888	Argument	ext -> val		1922620	1					
ANR	1923889	PtrMemberAccess	ext -> val		1922620	0					
ANR	1923890	Identifier	ext		1922620	0					
ANR	1923891	Identifier	val		1922620	1					
ANR	1923892	IfStatement	if ( dims [ 0 ] == 0 )		1922620	2					
ANR	1923893	Condition	dims [ 0 ] == 0	2382:7:74843:74854	1922620	0	True				
ANR	1923894	EqualityExpression	dims [ 0 ] == 0		1922620	0		==			
ANR	1923895	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923896	Identifier	dims		1922620	0					
ANR	1923897	PrimaryExpression	0		1922620	1					
ANR	1923898	PrimaryExpression	0		1922620	1					
ANR	1923899	CompoundStatement		183:21:5577:5577	1922620	1					
ANR	1923900	ExpressionStatement	dims [ 0 ] = i	2382:22:74858:74869	1922620	0	True				
ANR	1923901	AssignmentExpression	dims [ 0 ] = i		1922620	0		=			
ANR	1923902	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923903	Identifier	dims		1922620	0					
ANR	1923904	PrimaryExpression	0		1922620	1					
ANR	1923905	Identifier	i		1922620	1					
ANR	1923906	ExpressionStatement	"smart_str_append_long ( & array_size , dims [ 0 ] )"	2384:3:74876:74919	1922620	3	True				
ANR	1923907	CallExpression	"smart_str_append_long ( & array_size , dims [ 0 ] )"		1922620	0					
ANR	1923908	Callee	smart_str_append_long		1922620	0					
ANR	1923909	Identifier	smart_str_append_long		1922620	0					
ANR	1923910	ArgumentList	& array_size		1922620	1					
ANR	1923911	Argument	& array_size		1922620	0					
ANR	1923912	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923913	UnaryOperator	&		1922620	0					
ANR	1923914	Identifier	array_size		1922620	1					
ANR	1923915	Argument	dims [ 0 ]		1922620	1					
ANR	1923916	ArrayIndexing	dims [ 0 ]		1922620	0					
ANR	1923917	Identifier	dims		1922620	0					
ANR	1923918	PrimaryExpression	0		1922620	1					
ANR	1923919	ForStatement	for ( i = 1 ; i < dimension ; i ++ )		1922620	4					
ANR	1923920	ForInit	i = 1 ;	2385:8:74929:74932	1922620	0	True				
ANR	1923921	AssignmentExpression	i = 1		1922620	0		=			
ANR	1923922	Identifier	i		1922620	0					
ANR	1923923	PrimaryExpression	1		1922620	1					
ANR	1923924	Condition	i < dimension	2385:13:74934:74944	1922620	1	True				
ANR	1923925	RelationalExpression	i < dimension		1922620	0		<			
ANR	1923926	Identifier	i		1922620	0					
ANR	1923927	Identifier	dimension		1922620	1					
ANR	1923928	PostIncDecOperationExpression	i ++	2385:26:74947:74949	1922620	2	True				
ANR	1923929	Identifier	i		1922620	0					
ANR	1923930	IncDec	++		1922620	1					
ANR	1923931	CompoundStatement		186:31:5672:5672	1922620	3					
ANR	1923932	ExpressionStatement	"smart_str_appendc ( & array_size , ',' )"	2386:4:74958:74993	1922620	0	True				
ANR	1923933	CallExpression	"smart_str_appendc ( & array_size , ',' )"		1922620	0					
ANR	1923934	Callee	smart_str_appendc		1922620	0					
ANR	1923935	Identifier	smart_str_appendc		1922620	0					
ANR	1923936	ArgumentList	& array_size		1922620	1					
ANR	1923937	Argument	& array_size		1922620	0					
ANR	1923938	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923939	UnaryOperator	&		1922620	0					
ANR	1923940	Identifier	array_size		1922620	1					
ANR	1923941	Argument	"','"		1922620	1					
ANR	1923942	PrimaryExpression	"','"		1922620	0					
ANR	1923943	ExpressionStatement	"smart_str_append_long ( & array_size , dims [ i ] )"	2387:4:74999:75042	1922620	1	True				
ANR	1923944	CallExpression	"smart_str_append_long ( & array_size , dims [ i ] )"		1922620	0					
ANR	1923945	Callee	smart_str_append_long		1922620	0					
ANR	1923946	Identifier	smart_str_append_long		1922620	0					
ANR	1923947	ArgumentList	& array_size		1922620	1					
ANR	1923948	Argument	& array_size		1922620	0					
ANR	1923949	UnaryOperationExpression	& array_size		1922620	0					
ANR	1923950	UnaryOperator	&		1922620	0					
ANR	1923951	Identifier	array_size		1922620	1					
ANR	1923952	Argument	dims [ i ]		1922620	1					
ANR	1923953	ArrayIndexing	dims [ i ]		1922620	0					
ANR	1923954	Identifier	dims		1922620	0					
ANR	1923955	Identifier	i		1922620	1					
ANR	1923956	IfStatement	"if ( sdl_type && sdl_type -> elements && zend_hash_num_elements ( sdl_type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( sdl_type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str )"		1922620	5					
ANR	1923957	Condition	"sdl_type && sdl_type -> elements && zend_hash_num_elements ( sdl_type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( sdl_type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"	2390:7:75057:75365	1922620	0	True				
ANR	1923958	AndExpression	"sdl_type && sdl_type -> elements && zend_hash_num_elements ( sdl_type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( sdl_type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"		1922620	0		&&			
ANR	1923959	Identifier	sdl_type		1922620	0					
ANR	1923960	AndExpression	"sdl_type -> elements && zend_hash_num_elements ( sdl_type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( sdl_type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"		1922620	1		&&			
ANR	1923961	PtrMemberAccess	sdl_type -> elements		1922620	0					
ANR	1923962	Identifier	sdl_type		1922620	0					
ANR	1923963	Identifier	elements		1922620	1					
ANR	1923964	AndExpression	"zend_hash_num_elements ( sdl_type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( sdl_type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"		1922620	1		&&			
ANR	1923965	EqualityExpression	zend_hash_num_elements ( sdl_type -> elements ) == 1		1922620	0		==			
ANR	1923966	CallExpression	zend_hash_num_elements ( sdl_type -> elements )		1922620	0					
ANR	1923967	Callee	zend_hash_num_elements		1922620	0					
ANR	1923968	Identifier	zend_hash_num_elements		1922620	0					
ANR	1923969	ArgumentList	sdl_type -> elements		1922620	1					
ANR	1923970	Argument	sdl_type -> elements		1922620	0					
ANR	1923971	PtrMemberAccess	sdl_type -> elements		1922620	0					
ANR	1923972	Identifier	sdl_type		1922620	0					
ANR	1923973	Identifier	elements		1922620	1					
ANR	1923974	PrimaryExpression	1		1922620	1					
ANR	1923975	AndExpression	"( zend_hash_internal_pointer_reset ( sdl_type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"		1922620	1		&&			
ANR	1923976	Expression	"zend_hash_internal_pointer_reset ( sdl_type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL"		1922620	0					
ANR	1923977	CallExpression	zend_hash_internal_pointer_reset ( sdl_type -> elements )		1922620	0					
ANR	1923978	Callee	zend_hash_internal_pointer_reset		1922620	0					
ANR	1923979	Identifier	zend_hash_internal_pointer_reset		1922620	0					
ANR	1923980	ArgumentList	sdl_type -> elements		1922620	1					
ANR	1923981	Argument	sdl_type -> elements		1922620	0					
ANR	1923982	PtrMemberAccess	sdl_type -> elements		1922620	0					
ANR	1923983	Identifier	sdl_type		1922620	0					
ANR	1923984	Identifier	elements		1922620	1					
ANR	1923985	EqualityExpression	( elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements ) ) != NULL		1922620	1		!=			
ANR	1923986	AssignmentExpression	elementType = zend_hash_get_current_data_ptr ( sdl_type -> elements )		1922620	0		=			
ANR	1923987	Identifier	elementType		1922620	0					
ANR	1923988	CallExpression	zend_hash_get_current_data_ptr ( sdl_type -> elements )		1922620	1					
ANR	1923989	Callee	zend_hash_get_current_data_ptr		1922620	0					
ANR	1923990	Identifier	zend_hash_get_current_data_ptr		1922620	0					
ANR	1923991	ArgumentList	sdl_type -> elements		1922620	1					
ANR	1923992	Argument	sdl_type -> elements		1922620	0					
ANR	1923993	PtrMemberAccess	sdl_type -> elements		1922620	0					
ANR	1923994	Identifier	sdl_type		1922620	0					
ANR	1923995	Identifier	elements		1922620	1					
ANR	1923996	Identifier	NULL		1922620	1					
ANR	1923997	AndExpression	elementType -> encode && elementType -> encode -> details . type_str		1922620	1		&&			
ANR	1923998	PtrMemberAccess	elementType -> encode		1922620	0					
ANR	1923999	Identifier	elementType		1922620	0					
ANR	1924000	Identifier	encode		1922620	1					
ANR	1924001	MemberAccess	elementType -> encode -> details . type_str		1922620	1					
ANR	1924002	PtrMemberAccess	elementType -> encode -> details		1922620	0					
ANR	1924003	PtrMemberAccess	elementType -> encode		1922620	0					
ANR	1924004	Identifier	elementType		1922620	0					
ANR	1924005	Identifier	encode		1922620	1					
ANR	1924006	Identifier	details		1922620	1					
ANR	1924007	Identifier	type_str		1922620	1					
ANR	1924008	CompoundStatement		195:70:6088:6088	1922620	1					
ANR	1924009	ExpressionStatement	element_type = elementType	2395:4:75374:75400	1922620	0	True				
ANR	1924010	AssignmentExpression	element_type = elementType		1922620	0		=			
ANR	1924011	Identifier	element_type		1922620	0					
ANR	1924012	Identifier	elementType		1922620	1					
ANR	1924013	ExpressionStatement	enc = elementType -> encode	2396:4:75406:75431	1922620	1	True				
ANR	1924014	AssignmentExpression	enc = elementType -> encode		1922620	0		=			
ANR	1924015	Identifier	enc		1922620	0					
ANR	1924016	PtrMemberAccess	elementType -> encode		1922620	1					
ANR	1924017	Identifier	elementType		1922620	0					
ANR	1924018	Identifier	encode		1922620	1					
ANR	1924019	ExpressionStatement	"get_type_str ( xmlParam , elementType -> encode -> details . ns , elementType -> encode -> details . type_str , & array_type )"	2397:4:75437:75544	1922620	2	True				
ANR	1924020	CallExpression	"get_type_str ( xmlParam , elementType -> encode -> details . ns , elementType -> encode -> details . type_str , & array_type )"		1922620	0					
ANR	1924021	Callee	get_type_str		1922620	0					
ANR	1924022	Identifier	get_type_str		1922620	0					
ANR	1924023	ArgumentList	xmlParam		1922620	1					
ANR	1924024	Argument	xmlParam		1922620	0					
ANR	1924025	Identifier	xmlParam		1922620	0					
ANR	1924026	Argument	elementType -> encode -> details . ns		1922620	1					
ANR	1924027	MemberAccess	elementType -> encode -> details . ns		1922620	0					
ANR	1924028	PtrMemberAccess	elementType -> encode -> details		1922620	0					
ANR	1924029	PtrMemberAccess	elementType -> encode		1922620	0					
ANR	1924030	Identifier	elementType		1922620	0					
ANR	1924031	Identifier	encode		1922620	1					
ANR	1924032	Identifier	details		1922620	1					
ANR	1924033	Identifier	ns		1922620	1					
ANR	1924034	Argument	elementType -> encode -> details . type_str		1922620	2					
ANR	1924035	MemberAccess	elementType -> encode -> details . type_str		1922620	0					
ANR	1924036	PtrMemberAccess	elementType -> encode -> details		1922620	0					
ANR	1924037	PtrMemberAccess	elementType -> encode		1922620	0					
ANR	1924038	Identifier	elementType		1922620	0					
ANR	1924039	Identifier	encode		1922620	1					
ANR	1924040	Identifier	details		1922620	1					
ANR	1924041	Identifier	type_str		1922620	1					
ANR	1924042	Argument	& array_type		1922620	3					
ANR	1924043	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924044	UnaryOperator	&		1922620	0					
ANR	1924045	Identifier	array_type		1922620	1					
ANR	1924046	ElseStatement	else		1922620	0					
ANR	1924047	CompoundStatement		199:10:6276:6276	1922620	0					
ANR	1924048	ExpressionStatement	"enc = get_array_type ( xmlParam , data , & array_type )"	2399:4:75562:75611	1922620	0	True				
ANR	1924049	AssignmentExpression	"enc = get_array_type ( xmlParam , data , & array_type )"		1922620	0		=			
ANR	1924050	Identifier	enc		1922620	0					
ANR	1924051	CallExpression	"get_array_type ( xmlParam , data , & array_type )"		1922620	1					
ANR	1924052	Callee	get_array_type		1922620	0					
ANR	1924053	Identifier	get_array_type		1922620	0					
ANR	1924054	ArgumentList	xmlParam		1922620	1					
ANR	1924055	Argument	xmlParam		1922620	0					
ANR	1924056	Identifier	xmlParam		1922620	0					
ANR	1924057	Argument	data		1922620	1					
ANR	1924058	Identifier	data		1922620	0					
ANR	1924059	Argument	& array_type		1922620	2					
ANR	1924060	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924061	UnaryOperator	&		1922620	0					
ANR	1924062	Identifier	array_type		1922620	1					
ANR	1924063	IfStatement	if ( style == SOAP_ENCODED )		1922620	185					
ANR	1924064	Condition	style == SOAP_ENCODED	2423:6:76438:76458	1922620	0	True				
ANR	1924065	EqualityExpression	style == SOAP_ENCODED		1922620	0		==			
ANR	1924066	Identifier	style		1922620	0					
ANR	1924067	Identifier	SOAP_ENCODED		1922620	1					
ANR	1924068	CompoundStatement		224:29:7181:7181	1922620	1					
ANR	1924069	IfStatement	if ( soap_version == SOAP_1_1 )		1922620	0					
ANR	1924070	Condition	soap_version == SOAP_1_1	2424:7:76470:76493	1922620	0	True				
ANR	1924071	EqualityExpression	soap_version == SOAP_1_1		1922620	0		==			
ANR	1924072	Identifier	soap_version		1922620	0					
ANR	1924073	Identifier	SOAP_1_1		1922620	1					
ANR	1924074	CompoundStatement		225:33:7216:7216	1922620	1					
ANR	1924075	ExpressionStatement	smart_str_0 ( & array_type )	2425:4:76502:76526	1922620	0	True				
ANR	1924076	CallExpression	smart_str_0 ( & array_type )		1922620	0					
ANR	1924077	Callee	smart_str_0		1922620	0					
ANR	1924078	Identifier	smart_str_0		1922620	0					
ANR	1924079	ArgumentList	& array_type		1922620	1					
ANR	1924080	Argument	& array_type		1922620	0					
ANR	1924081	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924082	UnaryOperator	&		1922620	0					
ANR	1924083	Identifier	array_type		1922620	1					
ANR	1924084	IfStatement	"if ( strcmp ( ZSTR_VAL ( array_type . s ) , ""xsd:anyType"" ) == 0 )"		1922620	1					
ANR	1924085	Condition	"strcmp ( ZSTR_VAL ( array_type . s ) , ""xsd:anyType"" ) == 0"	2426:8:76536:76584	1922620	0	True				
ANR	1924086	EqualityExpression	"strcmp ( ZSTR_VAL ( array_type . s ) , ""xsd:anyType"" ) == 0"		1922620	0		==			
ANR	1924087	CallExpression	"strcmp ( ZSTR_VAL ( array_type . s ) , ""xsd:anyType"" )"		1922620	0					
ANR	1924088	Callee	strcmp		1922620	0					
ANR	1924089	Identifier	strcmp		1922620	0					
ANR	1924090	ArgumentList	ZSTR_VAL ( array_type . s )		1922620	1					
ANR	1924091	Argument	ZSTR_VAL ( array_type . s )		1922620	0					
ANR	1924092	CallExpression	ZSTR_VAL ( array_type . s )		1922620	0					
ANR	1924093	Callee	ZSTR_VAL		1922620	0					
ANR	1924094	Identifier	ZSTR_VAL		1922620	0					
ANR	1924095	ArgumentList	array_type . s		1922620	1					
ANR	1924096	Argument	array_type . s		1922620	0					
ANR	1924097	MemberAccess	array_type . s		1922620	0					
ANR	1924098	Identifier	array_type		1922620	0					
ANR	1924099	Identifier	s		1922620	1					
ANR	1924100	Argument	"""xsd:anyType"""		1922620	1					
ANR	1924101	PrimaryExpression	"""xsd:anyType"""		1922620	0					
ANR	1924102	PrimaryExpression	0		1922620	1					
ANR	1924103	CompoundStatement		227:59:7307:7307	1922620	1					
ANR	1924104	ExpressionStatement	smart_str_free ( & array_type )	2427:5:76594:76621	1922620	0	True				
ANR	1924105	CallExpression	smart_str_free ( & array_type )		1922620	0					
ANR	1924106	Callee	smart_str_free		1922620	0					
ANR	1924107	Identifier	smart_str_free		1922620	0					
ANR	1924108	ArgumentList	& array_type		1922620	1					
ANR	1924109	Argument	& array_type		1922620	0					
ANR	1924110	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924111	UnaryOperator	&		1922620	0					
ANR	1924112	Identifier	array_type		1922620	1					
ANR	1924113	ExpressionStatement	"smart_str_appendl ( & array_type , ""xsd:ur-type"" , sizeof ( ""xsd:ur-type"" ) - 1 )"	2428:5:76628:76696	1922620	1	True				
ANR	1924114	CallExpression	"smart_str_appendl ( & array_type , ""xsd:ur-type"" , sizeof ( ""xsd:ur-type"" ) - 1 )"		1922620	0					
ANR	1924115	Callee	smart_str_appendl		1922620	0					
ANR	1924116	Identifier	smart_str_appendl		1922620	0					
ANR	1924117	ArgumentList	& array_type		1922620	1					
ANR	1924118	Argument	& array_type		1922620	0					
ANR	1924119	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924120	UnaryOperator	&		1922620	0					
ANR	1924121	Identifier	array_type		1922620	1					
ANR	1924122	Argument	"""xsd:ur-type"""		1922620	1					
ANR	1924123	PrimaryExpression	"""xsd:ur-type"""		1922620	0					
ANR	1924124	Argument	"sizeof ( ""xsd:ur-type"" ) - 1"		1922620	2					
ANR	1924125	AdditiveExpression	"sizeof ( ""xsd:ur-type"" ) - 1"		1922620	0		-			
ANR	1924126	SizeofExpression	"sizeof ( ""xsd:ur-type"" )"		1922620	0					
ANR	1924127	Sizeof	sizeof		1922620	0					
ANR	1924128	PrimaryExpression	"""xsd:ur-type"""		1922620	1					
ANR	1924129	PrimaryExpression	1		1922620	1					
ANR	1924130	ExpressionStatement	"smart_str_appendc ( & array_type , '[' )"	2430:4:76708:76743	1922620	2	True				
ANR	1924131	CallExpression	"smart_str_appendc ( & array_type , '[' )"		1922620	0					
ANR	1924132	Callee	smart_str_appendc		1922620	0					
ANR	1924133	Identifier	smart_str_appendc		1922620	0					
ANR	1924134	ArgumentList	& array_type		1922620	1					
ANR	1924135	Argument	& array_type		1922620	0					
ANR	1924136	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924137	UnaryOperator	&		1922620	0					
ANR	1924138	Identifier	array_type		1922620	1					
ANR	1924139	Argument	'['		1922620	1					
ANR	1924140	PrimaryExpression	'['		1922620	0					
ANR	1924141	ExpressionStatement	"smart_str_append_smart_str ( & array_type , & array_size )"	2431:4:76749:76801	1922620	3	True				
ANR	1924142	CallExpression	"smart_str_append_smart_str ( & array_type , & array_size )"		1922620	0					
ANR	1924143	Callee	smart_str_append_smart_str		1922620	0					
ANR	1924144	Identifier	smart_str_append_smart_str		1922620	0					
ANR	1924145	ArgumentList	& array_type		1922620	1					
ANR	1924146	Argument	& array_type		1922620	0					
ANR	1924147	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924148	UnaryOperator	&		1922620	0					
ANR	1924149	Identifier	array_type		1922620	1					
ANR	1924150	Argument	& array_size		1922620	1					
ANR	1924151	UnaryOperationExpression	& array_size		1922620	0					
ANR	1924152	UnaryOperator	&		1922620	0					
ANR	1924153	Identifier	array_size		1922620	1					
ANR	1924154	ExpressionStatement	"smart_str_appendc ( & array_type , ']' )"	2432:4:76807:76842	1922620	4	True				
ANR	1924155	CallExpression	"smart_str_appendc ( & array_type , ']' )"		1922620	0					
ANR	1924156	Callee	smart_str_appendc		1922620	0					
ANR	1924157	Identifier	smart_str_appendc		1922620	0					
ANR	1924158	ArgumentList	& array_type		1922620	1					
ANR	1924159	Argument	& array_type		1922620	0					
ANR	1924160	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924161	UnaryOperator	&		1922620	0					
ANR	1924162	Identifier	array_type		1922620	1					
ANR	1924163	Argument	']'		1922620	1					
ANR	1924164	PrimaryExpression	']'		1922620	0					
ANR	1924165	ExpressionStatement	smart_str_0 ( & array_type )	2433:4:76848:76872	1922620	5	True				
ANR	1924166	CallExpression	smart_str_0 ( & array_type )		1922620	0					
ANR	1924167	Callee	smart_str_0		1922620	0					
ANR	1924168	Identifier	smart_str_0		1922620	0					
ANR	1924169	ArgumentList	& array_type		1922620	1					
ANR	1924170	Argument	& array_type		1922620	0					
ANR	1924171	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924172	UnaryOperator	&		1922620	0					
ANR	1924173	Identifier	array_type		1922620	1					
ANR	1924174	ExpressionStatement	"set_ns_prop ( xmlParam , SOAP_1_1_ENC_NAMESPACE , ""arrayType"" , ZSTR_VAL ( array_type . s ) )"	2434:4:76878:76960	1922620	6	True				
ANR	1924175	CallExpression	"set_ns_prop ( xmlParam , SOAP_1_1_ENC_NAMESPACE , ""arrayType"" , ZSTR_VAL ( array_type . s ) )"		1922620	0					
ANR	1924176	Callee	set_ns_prop		1922620	0					
ANR	1924177	Identifier	set_ns_prop		1922620	0					
ANR	1924178	ArgumentList	xmlParam		1922620	1					
ANR	1924179	Argument	xmlParam		1922620	0					
ANR	1924180	Identifier	xmlParam		1922620	0					
ANR	1924181	Argument	SOAP_1_1_ENC_NAMESPACE		1922620	1					
ANR	1924182	Identifier	SOAP_1_1_ENC_NAMESPACE		1922620	0					
ANR	1924183	Argument	"""arrayType"""		1922620	2					
ANR	1924184	PrimaryExpression	"""arrayType"""		1922620	0					
ANR	1924185	Argument	ZSTR_VAL ( array_type . s )		1922620	3					
ANR	1924186	CallExpression	ZSTR_VAL ( array_type . s )		1922620	0					
ANR	1924187	Callee	ZSTR_VAL		1922620	0					
ANR	1924188	Identifier	ZSTR_VAL		1922620	0					
ANR	1924189	ArgumentList	array_type . s		1922620	1					
ANR	1924190	Argument	array_type . s		1922620	0					
ANR	1924191	MemberAccess	array_type . s		1922620	0					
ANR	1924192	Identifier	array_type		1922620	0					
ANR	1924193	Identifier	s		1922620	1					
ANR	1924194	ElseStatement	else		1922620	0					
ANR	1924195	CompoundStatement		237:4:7698:7707	1922620	0					
ANR	1924196	IdentifierDeclStatement	int i = 0 ;	2436:4:76978:76987	1922620	0	True				
ANR	1924197	IdentifierDecl	i = 0		1922620	0					
ANR	1924198	IdentifierDeclType	int		1922620	0					
ANR	1924199	Identifier	i		1922620	1					
ANR	1924200	AssignmentExpression	i = 0		1922620	2		=			
ANR	1924201	Identifier	i		1922620	0					
ANR	1924202	PrimaryExpression	0		1922620	1					
ANR	1924203	WhileStatement	while ( i < ZSTR_LEN ( array_size . s ) )		1922620	1					
ANR	1924204	Condition	i < ZSTR_LEN ( array_size . s )	2437:11:77000:77025	1922620	0	True				
ANR	1924205	RelationalExpression	i < ZSTR_LEN ( array_size . s )		1922620	0		<			
ANR	1924206	Identifier	i		1922620	0					
ANR	1924207	CallExpression	ZSTR_LEN ( array_size . s )		1922620	1					
ANR	1924208	Callee	ZSTR_LEN		1922620	0					
ANR	1924209	Identifier	ZSTR_LEN		1922620	0					
ANR	1924210	ArgumentList	array_size . s		1922620	1					
ANR	1924211	Argument	array_size . s		1922620	0					
ANR	1924212	MemberAccess	array_size . s		1922620	0					
ANR	1924213	Identifier	array_size		1922620	0					
ANR	1924214	Identifier	s		1922620	1					
ANR	1924215	CompoundStatement		238:39:7748:7748	1922620	1					
ANR	1924216	IfStatement	"if ( ZSTR_VAL ( array_size . s ) [ i ] == ',' )"		1922620	0					
ANR	1924217	Condition	"ZSTR_VAL ( array_size . s ) [ i ] == ','"	2438:9:77039:77070	1922620	0	True				
ANR	1924218	EqualityExpression	"ZSTR_VAL ( array_size . s ) [ i ] == ','"		1922620	0		==			
ANR	1924219	ArrayIndexing	ZSTR_VAL ( array_size . s ) [ i ]		1922620	0					
ANR	1924220	CallExpression	ZSTR_VAL ( array_size . s )		1922620	0					
ANR	1924221	Callee	ZSTR_VAL		1922620	0					
ANR	1924222	Identifier	ZSTR_VAL		1922620	0					
ANR	1924223	ArgumentList	array_size . s		1922620	1					
ANR	1924224	Argument	array_size . s		1922620	0					
ANR	1924225	MemberAccess	array_size . s		1922620	0					
ANR	1924226	Identifier	array_size		1922620	0					
ANR	1924227	Identifier	s		1922620	1					
ANR	1924228	Identifier	i		1922620	1					
ANR	1924229	PrimaryExpression	"','"		1922620	1					
ANR	1924230	CompoundStatement		239:43:7793:7793	1922620	1					
ANR	1924231	ExpressionStatement	ZSTR_VAL ( array_size . s ) [ i ] = ' '	2438:44:77074:77105	1922620	0	True				
ANR	1924232	AssignmentExpression	ZSTR_VAL ( array_size . s ) [ i ] = ' '		1922620	0		=			
ANR	1924233	ArrayIndexing	ZSTR_VAL ( array_size . s ) [ i ]		1922620	0					
ANR	1924234	CallExpression	ZSTR_VAL ( array_size . s )		1922620	0					
ANR	1924235	Callee	ZSTR_VAL		1922620	0					
ANR	1924236	Identifier	ZSTR_VAL		1922620	0					
ANR	1924237	ArgumentList	array_size . s		1922620	1					
ANR	1924238	Argument	array_size . s		1922620	0					
ANR	1924239	MemberAccess	array_size . s		1922620	0					
ANR	1924240	Identifier	array_size		1922620	0					
ANR	1924241	Identifier	s		1922620	1					
ANR	1924242	Identifier	i		1922620	1					
ANR	1924243	PrimaryExpression	' '		1922620	1					
ANR	1924244	ExpressionStatement	++ i	2439:5:77113:77116	1922620	1	True				
ANR	1924245	UnaryExpression	++ i		1922620	0					
ANR	1924246	IncDec	++		1922620	0					
ANR	1924247	Identifier	i		1922620	1					
ANR	1924248	ExpressionStatement	smart_str_0 ( & array_type )	2441:4:77128:77152	1922620	2	True				
ANR	1924249	CallExpression	smart_str_0 ( & array_type )		1922620	0					
ANR	1924250	Callee	smart_str_0		1922620	0					
ANR	1924251	Identifier	smart_str_0		1922620	0					
ANR	1924252	ArgumentList	& array_type		1922620	1					
ANR	1924253	Argument	& array_type		1922620	0					
ANR	1924254	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924255	UnaryOperator	&		1922620	0					
ANR	1924256	Identifier	array_type		1922620	1					
ANR	1924257	ExpressionStatement	smart_str_0 ( & array_size )	2442:4:77158:77182	1922620	3	True				
ANR	1924258	CallExpression	smart_str_0 ( & array_size )		1922620	0					
ANR	1924259	Callee	smart_str_0		1922620	0					
ANR	1924260	Identifier	smart_str_0		1922620	0					
ANR	1924261	ArgumentList	& array_size		1922620	1					
ANR	1924262	Argument	& array_size		1922620	0					
ANR	1924263	UnaryOperationExpression	& array_size		1922620	0					
ANR	1924264	UnaryOperator	&		1922620	0					
ANR	1924265	Identifier	array_size		1922620	1					
ANR	1924266	ExpressionStatement	"set_ns_prop ( xmlParam , SOAP_1_2_ENC_NAMESPACE , ""itemType"" , ZSTR_VAL ( array_type . s ) )"	2443:4:77188:77269	1922620	4	True				
ANR	1924267	CallExpression	"set_ns_prop ( xmlParam , SOAP_1_2_ENC_NAMESPACE , ""itemType"" , ZSTR_VAL ( array_type . s ) )"		1922620	0					
ANR	1924268	Callee	set_ns_prop		1922620	0					
ANR	1924269	Identifier	set_ns_prop		1922620	0					
ANR	1924270	ArgumentList	xmlParam		1922620	1					
ANR	1924271	Argument	xmlParam		1922620	0					
ANR	1924272	Identifier	xmlParam		1922620	0					
ANR	1924273	Argument	SOAP_1_2_ENC_NAMESPACE		1922620	1					
ANR	1924274	Identifier	SOAP_1_2_ENC_NAMESPACE		1922620	0					
ANR	1924275	Argument	"""itemType"""		1922620	2					
ANR	1924276	PrimaryExpression	"""itemType"""		1922620	0					
ANR	1924277	Argument	ZSTR_VAL ( array_type . s )		1922620	3					
ANR	1924278	CallExpression	ZSTR_VAL ( array_type . s )		1922620	0					
ANR	1924279	Callee	ZSTR_VAL		1922620	0					
ANR	1924280	Identifier	ZSTR_VAL		1922620	0					
ANR	1924281	ArgumentList	array_type . s		1922620	1					
ANR	1924282	Argument	array_type . s		1922620	0					
ANR	1924283	MemberAccess	array_type . s		1922620	0					
ANR	1924284	Identifier	array_type		1922620	0					
ANR	1924285	Identifier	s		1922620	1					
ANR	1924286	ExpressionStatement	"set_ns_prop ( xmlParam , SOAP_1_2_ENC_NAMESPACE , ""arraySize"" , ZSTR_VAL ( array_size . s ) )"	2444:4:77275:77357	1922620	5	True				
ANR	1924287	CallExpression	"set_ns_prop ( xmlParam , SOAP_1_2_ENC_NAMESPACE , ""arraySize"" , ZSTR_VAL ( array_size . s ) )"		1922620	0					
ANR	1924288	Callee	set_ns_prop		1922620	0					
ANR	1924289	Identifier	set_ns_prop		1922620	0					
ANR	1924290	ArgumentList	xmlParam		1922620	1					
ANR	1924291	Argument	xmlParam		1922620	0					
ANR	1924292	Identifier	xmlParam		1922620	0					
ANR	1924293	Argument	SOAP_1_2_ENC_NAMESPACE		1922620	1					
ANR	1924294	Identifier	SOAP_1_2_ENC_NAMESPACE		1922620	0					
ANR	1924295	Argument	"""arraySize"""		1922620	2					
ANR	1924296	PrimaryExpression	"""arraySize"""		1922620	0					
ANR	1924297	Argument	ZSTR_VAL ( array_size . s )		1922620	3					
ANR	1924298	CallExpression	ZSTR_VAL ( array_size . s )		1922620	0					
ANR	1924299	Callee	ZSTR_VAL		1922620	0					
ANR	1924300	Identifier	ZSTR_VAL		1922620	0					
ANR	1924301	ArgumentList	array_size . s		1922620	1					
ANR	1924302	Argument	array_size . s		1922620	0					
ANR	1924303	MemberAccess	array_size . s		1922620	0					
ANR	1924304	Identifier	array_size		1922620	0					
ANR	1924305	Identifier	s		1922620	1					
ANR	1924306	ExpressionStatement	smart_str_free ( & array_type )	2447:2:77370:77397	1922620	186	True				
ANR	1924307	CallExpression	smart_str_free ( & array_type )		1922620	0					
ANR	1924308	Callee	smart_str_free		1922620	0					
ANR	1924309	Identifier	smart_str_free		1922620	0					
ANR	1924310	ArgumentList	& array_type		1922620	1					
ANR	1924311	Argument	& array_type		1922620	0					
ANR	1924312	UnaryOperationExpression	& array_type		1922620	0					
ANR	1924313	UnaryOperator	&		1922620	0					
ANR	1924314	Identifier	array_type		1922620	1					
ANR	1924315	ExpressionStatement	smart_str_free ( & array_size )	2448:2:77401:77428	1922620	187	True				
ANR	1924316	CallExpression	smart_str_free ( & array_size )		1922620	0					
ANR	1924317	Callee	smart_str_free		1922620	0					
ANR	1924318	Identifier	smart_str_free		1922620	0					
ANR	1924319	ArgumentList	& array_size		1922620	1					
ANR	1924320	Argument	& array_size		1922620	0					
ANR	1924321	UnaryOperationExpression	& array_size		1922620	0					
ANR	1924322	UnaryOperator	&		1922620	0					
ANR	1924323	Identifier	array_size		1922620	1					
ANR	1924324	ExpressionStatement	"add_xml_array_elements ( xmlParam , element_type , enc , enc ? encode_add_ns ( xmlParam , enc -> details . ns ) : NULL , dimension , dims , data , style )"	2450:2:77433:77564	1922620	188	True				
ANR	1924325	CallExpression	"add_xml_array_elements ( xmlParam , element_type , enc , enc ? encode_add_ns ( xmlParam , enc -> details . ns ) : NULL , dimension , dims , data , style )"		1922620	0					
ANR	1924326	Callee	add_xml_array_elements		1922620	0					
ANR	1924327	Identifier	add_xml_array_elements		1922620	0					
ANR	1924328	ArgumentList	xmlParam		1922620	1					
ANR	1924329	Argument	xmlParam		1922620	0					
ANR	1924330	Identifier	xmlParam		1922620	0					
ANR	1924331	Argument	element_type		1922620	1					
ANR	1924332	Identifier	element_type		1922620	0					
ANR	1924333	Argument	enc		1922620	2					
ANR	1924334	Identifier	enc		1922620	0					
ANR	1924335	Argument	"enc ? encode_add_ns ( xmlParam , enc -> details . ns ) : NULL"		1922620	3					
ANR	1924336	ConditionalExpression	"enc ? encode_add_ns ( xmlParam , enc -> details . ns ) : NULL"		1922620	0					
ANR	1924337	Condition	enc		1922620	0					
ANR	1924338	Identifier	enc		1922620	0					
ANR	1924339	CallExpression	"encode_add_ns ( xmlParam , enc -> details . ns )"		1922620	1					
ANR	1924340	Callee	encode_add_ns		1922620	0					
ANR	1924341	Identifier	encode_add_ns		1922620	0					
ANR	1924342	ArgumentList	xmlParam		1922620	1					
ANR	1924343	Argument	xmlParam		1922620	0					
ANR	1924344	Identifier	xmlParam		1922620	0					
ANR	1924345	Argument	enc -> details . ns		1922620	1					
ANR	1924346	MemberAccess	enc -> details . ns		1922620	0					
ANR	1924347	PtrMemberAccess	enc -> details		1922620	0					
ANR	1924348	Identifier	enc		1922620	0					
ANR	1924349	Identifier	details		1922620	1					
ANR	1924350	Identifier	ns		1922620	1					
ANR	1924351	Identifier	NULL		1922620	2					
ANR	1924352	Argument	dimension		1922620	4					
ANR	1924353	Identifier	dimension		1922620	0					
ANR	1924354	Argument	dims		1922620	5					
ANR	1924355	Identifier	dims		1922620	0					
ANR	1924356	Argument	data		1922620	6					
ANR	1924357	Identifier	data		1922620	0					
ANR	1924358	Argument	style		1922620	7					
ANR	1924359	Identifier	style		1922620	0					
ANR	1924360	ExpressionStatement	efree ( dims )	2451:2:77568:77579	1922620	189	True				
ANR	1924361	CallExpression	efree ( dims )		1922620	0					
ANR	1924362	Callee	efree		1922620	0					
ANR	1924363	Identifier	efree		1922620	0					
ANR	1924364	ArgumentList	dims		1922620	1					
ANR	1924365	Argument	dims		1922620	0					
ANR	1924366	Identifier	dims		1922620	0					
ANR	1924367	ElseStatement	else		1922620	0					
ANR	1924368	Statement	if	2344:9:72898:72899	1922620	0	True				
ANR	1924369	IfStatement	if ( style == SOAP_ENCODED )		1922620	17					
ANR	1924370	Condition	style == SOAP_ENCODED	2453:5:77589:77609	1922620	0	True				
ANR	1924371	EqualityExpression	style == SOAP_ENCODED		1922620	0		==			
ANR	1924372	Identifier	style		1922620	0					
ANR	1924373	Identifier	SOAP_ENCODED		1922620	1					
ANR	1924374	CompoundStatement		254:28:8332:8332	1922620	1					
ANR	1924375	IfStatement	if ( SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE )		1922620	0					
ANR	1924376	Condition	SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE	2454:6:77620:77666	1922620	0	True				
ANR	1924377	BitAndExpression	SOAP_GLOBAL ( features ) & SOAP_USE_XSI_ARRAY_TYPE		1922620	0		&			
ANR	1924378	CallExpression	SOAP_GLOBAL ( features )		1922620	0					
ANR	1924379	Callee	SOAP_GLOBAL		1922620	0					
ANR	1924380	Identifier	SOAP_GLOBAL		1922620	0					
ANR	1924381	ArgumentList	features		1922620	1					
ANR	1924382	Argument	features		1922620	0					
ANR	1924383	Identifier	features		1922620	0					
ANR	1924384	Identifier	SOAP_USE_XSI_ARRAY_TYPE		1922620	1					
ANR	1924385	CompoundStatement		255:55:8389:8389	1922620	1					
ANR	1924386	ExpressionStatement	"set_ns_and_type_ex ( xmlParam , ( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE , ""Array"" )"	2455:3:77674:77789	1922620	0	True				
ANR	1924387	CallExpression	"set_ns_and_type_ex ( xmlParam , ( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE , ""Array"" )"		1922620	0					
ANR	1924388	Callee	set_ns_and_type_ex		1922620	0					
ANR	1924389	Identifier	set_ns_and_type_ex		1922620	0					
ANR	1924390	ArgumentList	xmlParam		1922620	1					
ANR	1924391	Argument	xmlParam		1922620	0					
ANR	1924392	Identifier	xmlParam		1922620	0					
ANR	1924393	Argument	( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE		1922620	1					
ANR	1924394	ConditionalExpression	( soap_version == SOAP_1_1 ) ? SOAP_1_1_ENC_NAMESPACE : SOAP_1_2_ENC_NAMESPACE		1922620	0					
ANR	1924395	Condition	soap_version == SOAP_1_1		1922620	0					
ANR	1924396	EqualityExpression	soap_version == SOAP_1_1		1922620	0		==			
ANR	1924397	Identifier	soap_version		1922620	0					
ANR	1924398	Identifier	SOAP_1_1		1922620	1					
ANR	1924399	Identifier	SOAP_1_1_ENC_NAMESPACE		1922620	1					
ANR	1924400	Identifier	SOAP_1_2_ENC_NAMESPACE		1922620	2					
ANR	1924401	Argument	"""Array"""		1922620	2					
ANR	1924402	PrimaryExpression	"""Array"""		1922620	0					
ANR	1924403	ElseStatement	else		1922620	0					
ANR	1924404	CompoundStatement		257:9:8520:8520	1922620	0					
ANR	1924405	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2457:3:77805:77836	1922620	0	True				
ANR	1924406	CallExpression	"set_ns_and_type ( xmlParam , type )"		1922620	0					
ANR	1924407	Callee	set_ns_and_type		1922620	0					
ANR	1924408	Identifier	set_ns_and_type		1922620	0					
ANR	1924409	ArgumentList	xmlParam		1922620	1					
ANR	1924410	Argument	xmlParam		1922620	0					
ANR	1924411	Identifier	xmlParam		1922620	0					
ANR	1924412	Argument	type		1922620	1					
ANR	1924413	Identifier	type		1922620	0					
ANR	1924414	ExpressionStatement	zval_ptr_dtor ( & array_copy )	2461:1:77847:77873	1922620	18	True				
ANR	1924415	CallExpression	zval_ptr_dtor ( & array_copy )		1922620	0					
ANR	1924416	Callee	zval_ptr_dtor		1922620	0					
ANR	1924417	Identifier	zval_ptr_dtor		1922620	0					
ANR	1924418	ArgumentList	& array_copy		1922620	1					
ANR	1924419	Argument	& array_copy		1922620	0					
ANR	1924420	UnaryOperationExpression	& array_copy		1922620	0					
ANR	1924421	UnaryOperator	&		1922620	0					
ANR	1924422	Identifier	array_copy		1922620	1					
ANR	1924423	ReturnStatement	return xmlParam ;	2463:1:77877:77892	1922620	19	True				
ANR	1924424	Identifier	xmlParam		1922620	0					
ANR	1924425	ReturnType	static xmlNodePtr		1922620	1					
ANR	1924426	Identifier	to_xml_array		1922620	2					
ANR	1924427	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1922620	3					
ANR	1924428	Parameter	encodeTypePtr type	2199:31:69217:69234	1922620	0	True				
ANR	1924429	ParameterType	encodeTypePtr		1922620	0					
ANR	1924430	Identifier	type		1922620	1					
ANR	1924431	Parameter	zval * data	2199:51:69237:69246	1922620	1	True				
ANR	1924432	ParameterType	zval *		1922620	0					
ANR	1924433	Identifier	data		1922620	1					
ANR	1924434	Parameter	int style	2199:63:69249:69257	1922620	2	True				
ANR	1924435	ParameterType	int		1922620	0					
ANR	1924436	Identifier	style		1922620	1					
ANR	1924437	Parameter	xmlNodePtr parent	2199:74:69260:69276	1922620	3	True				
ANR	1924438	ParameterType	xmlNodePtr		1922620	0					
ANR	1924439	Identifier	parent		1922620	1					
ANR	1924440	CFGEntryNode	ENTRY		1922620		True				
ANR	1924441	CFGExitNode	EXIT		1922620		True				
ANR	1924442	Symbol	exception		1922620						
ANR	1924443	Symbol	parent		1922620						
ANR	1924444	Symbol	iter -> funcs -> get_current_key		1922620						
ANR	1924445	Symbol	iter -> funcs -> valid		1922620						
ANR	1924446	Symbol	* ce		1922620						
ANR	1924447	Symbol	type		1922620						
ANR	1924448	Symbol	* elementType -> encode		1922620						
ANR	1924449	Symbol	soap_version		1922620						
ANR	1924450	Symbol	* ZSTR_VAL		1922620						
ANR	1924451	Symbol	val		1922620						
ANR	1924452	Symbol	ext		1922620						
ANR	1924453	Symbol	arrayType		1922620						
ANR	1924454	Symbol	array_copy		1922620						
ANR	1924455	Symbol	iter		1922620						
ANR	1924456	Symbol	& array_type		1922620						
ANR	1924457	Symbol	array_size . s		1922620						
ANR	1924458	Symbol	ext -> val		1922620						
ANR	1924459	Symbol	calc_dimension		1922620						
ANR	1924460	Symbol	style		1922620						
ANR	1924461	Symbol	sdl		1922620						
ANR	1924462	Symbol	enc -> details . ns		1922620						
ANR	1924463	Symbol	& key		1922620						
ANR	1924464	Symbol	calc_dimension_12		1922620						
ANR	1924465	Symbol	enc -> details		1922620						
ANR	1924466	Symbol	element_type		1922620						
ANR	1924467	Symbol	& iter -> std		1922620						
ANR	1924468	Symbol	zend_hash_internal_pointer_reset		1922620						
ANR	1924469	Symbol	IS_ARRAY		1922620						
ANR	1924470	Symbol	Z_OBJCE_P		1922620						
ANR	1924471	Symbol	SOAP_USE_XSI_ARRAY_TYPE		1922620						
ANR	1924472	Symbol	* * iter		1922620						
ANR	1924473	Symbol	key		1922620						
ANR	1924474	Symbol	ce		1922620						
ANR	1924475	Symbol	SOAP_1_1		1922620						
ANR	1924476	Symbol	SUCCESS		1922620						
ANR	1924477	Symbol	zend_hash_num_elements		1922620						
ANR	1924478	Symbol	i		1922620						
ANR	1924479	Symbol	xmlNewNode		1922620						
ANR	1924480	Symbol	sdl_type		1922620						
ANR	1924481	Symbol	get_position_12		1922620						
ANR	1924482	Symbol	* ext		1922620						
ANR	1924483	Symbol	strrchr		1922620						
ANR	1924484	Symbol	iter -> funcs		1922620						
ANR	1924485	Symbol	estrdup		1922620						
ANR	1924486	Symbol	IS_OBJECT		1922620						
ANR	1924487	Symbol	& array_copy		1922620						
ANR	1924488	Symbol	elementType		1922620						
ANR	1924489	Symbol	safe_emalloc		1922620						
ANR	1924490	Symbol	* * elementType		1922620						
ANR	1924491	Symbol	type -> sdl_type		1922620						
ANR	1924492	Symbol	iter -> funcs -> get_current_data		1922620						
ANR	1924493	Symbol	data		1922620						
ANR	1924494	Symbol	Z_ARRVAL		1922620						
ANR	1924495	Symbol	elementType -> encode -> details . ns		1922620						
ANR	1924496	Symbol	features		1922620						
ANR	1924497	Symbol	* sdl_type		1922620						
ANR	1924498	Symbol	array_type . s		1922620						
ANR	1924499	Symbol	array_size		1922620						
ANR	1924500	Symbol	strcmp		1922620						
ANR	1924501	Symbol	EG		1922620						
ANR	1924502	Symbol	NULL		1922620						
ANR	1924503	Symbol	el		1922620						
ANR	1924504	Symbol	elementType -> encode -> details		1922620						
ANR	1924505	Symbol	* iter -> funcs		1922620						
ANR	1924506	Symbol	SOAP_GLOBAL		1922620						
ANR	1924507	Symbol	ce -> get_iterator		1922620						
ANR	1924508	Symbol	sdl_type -> elements		1922620						
ANR	1924509	Symbol	* end		1922620						
ANR	1924510	Symbol	* enc		1922620						
ANR	1924511	Symbol	* dims		1922620						
ANR	1924512	Symbol	BAD_CAST		1922620						
ANR	1924513	Symbol	elementType -> encode -> details . type_str		1922620						
ANR	1924514	Symbol	* elementType		1922620						
ANR	1924515	Symbol	instanceof_function		1922620						
ANR	1924516	Symbol	xmlParam		1922620						
ANR	1924517	Symbol	dims		1922620						
ANR	1924518	Symbol	ext -> ns		1922620						
ANR	1924519	Symbol	elementType -> encode		1922620						
ANR	1924520	Symbol	& array_size		1922620						
ANR	1924521	Symbol	* iter		1922620						
ANR	1924522	Symbol	emalloc		1922620						
ANR	1924523	Symbol	IS_NULL		1922620						
ANR	1924524	Symbol	* type		1922620						
ANR	1924525	Symbol	zend_ce_traversable		1922620						
ANR	1924526	Symbol	end		1922620						
ANR	1924527	Symbol	array_type		1922620						
ANR	1924528	Symbol	enc		1922620						
ANR	1924529	Symbol	Z_ARRVAL_P		1922620						
ANR	1924530	Symbol	dimension		1922620						
ANR	1924531	Symbol	value		1922620						
ANR	1924532	Symbol	zend_hash_get_current_data_ptr		1922620						
ANR	1924533	Symbol	SOAP_1_1_ENC_NAMESPACE		1922620						
ANR	1924534	Symbol	encode_add_ns		1922620						
ANR	1924535	Symbol	Z_TYPE_P		1922620						
ANR	1924536	Symbol	get_array_type		1922620						
ANR	1924537	Symbol	ZSTR_VAL		1922620						
ANR	1924538	Symbol	get_encoder		1922620						
ANR	1924539	Symbol	* i		1922620						
ANR	1924540	Symbol	iter -> funcs -> rewind		1922620						
ANR	1924541	Symbol	ZSTR_LEN		1922620						
ANR	1924542	Symbol	SOAP_ENCODED		1922620						
ANR	1924543	Symbol	SOAP_1_2_ENC_NAMESPACE		1922620						
ANR	1924544	Function	to_zval_array	2466:0:77897:84564							
ANR	1924545	FunctionDef	"to_zval_array (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1924544	0					
ANR	1924546	CompoundStatement		2467:0:77972:84564	1924544	0					
ANR	1924547	IdentifierDeclStatement	xmlNodePtr trav ;	2468:1:77975:77990	1924544	0	True				
ANR	1924548	IdentifierDecl	trav		1924544	0					
ANR	1924549	IdentifierDeclType	xmlNodePtr		1924544	0					
ANR	1924550	Identifier	trav		1924544	1					
ANR	1924551	IdentifierDeclStatement	encodePtr enc = NULL ;	2469:1:77993:78013	1924544	1	True				
ANR	1924552	IdentifierDecl	enc = NULL		1924544	0					
ANR	1924553	IdentifierDeclType	encodePtr		1924544	0					
ANR	1924554	Identifier	enc		1924544	1					
ANR	1924555	AssignmentExpression	enc = NULL		1924544	2		=			
ANR	1924556	Identifier	NULL		1924544	0					
ANR	1924557	Identifier	NULL		1924544	1					
ANR	1924558	IdentifierDeclStatement	int dimension = 1 ;	2470:1:78016:78033	1924544	2	True				
ANR	1924559	IdentifierDecl	dimension = 1		1924544	0					
ANR	1924560	IdentifierDeclType	int		1924544	0					
ANR	1924561	Identifier	dimension		1924544	1					
ANR	1924562	AssignmentExpression	dimension = 1		1924544	2		=			
ANR	1924563	Identifier	dimension		1924544	0					
ANR	1924564	PrimaryExpression	1		1924544	1					
ANR	1924565	IdentifierDeclStatement	int * dims = NULL ;	2471:1:78036:78052	1924544	3	True				
ANR	1924566	IdentifierDecl	* dims = NULL		1924544	0					
ANR	1924567	IdentifierDeclType	int *		1924544	0					
ANR	1924568	Identifier	dims		1924544	1					
ANR	1924569	AssignmentExpression	* dims = NULL		1924544	2		=			
ANR	1924570	Identifier	NULL		1924544	0					
ANR	1924571	Identifier	NULL		1924544	1					
ANR	1924572	IdentifierDeclStatement	int * pos = NULL ;	2472:1:78055:78070	1924544	4	True				
ANR	1924573	IdentifierDecl	* pos = NULL		1924544	0					
ANR	1924574	IdentifierDeclType	int *		1924544	0					
ANR	1924575	Identifier	pos		1924544	1					
ANR	1924576	AssignmentExpression	* pos = NULL		1924544	2		=			
ANR	1924577	Identifier	NULL		1924544	0					
ANR	1924578	Identifier	NULL		1924544	1					
ANR	1924579	IdentifierDeclStatement	xmlAttrPtr attr ;	2473:1:78073:78088	1924544	5	True				
ANR	1924580	IdentifierDecl	attr		1924544	0					
ANR	1924581	IdentifierDeclType	xmlAttrPtr		1924544	0					
ANR	1924582	Identifier	attr		1924544	1					
ANR	1924583	IdentifierDeclStatement	sdlAttributePtr arrayType ;	2474:1:78091:78116	1924544	6	True				
ANR	1924584	IdentifierDecl	arrayType		1924544	0					
ANR	1924585	IdentifierDeclType	sdlAttributePtr		1924544	0					
ANR	1924586	Identifier	arrayType		1924544	1					
ANR	1924587	IdentifierDeclStatement	sdlExtraAttributePtr ext ;	2475:1:78119:78143	1924544	7	True				
ANR	1924588	IdentifierDecl	ext		1924544	0					
ANR	1924589	IdentifierDeclType	sdlExtraAttributePtr		1924544	0					
ANR	1924590	Identifier	ext		1924544	1					
ANR	1924591	IdentifierDeclStatement	sdlTypePtr elementType ;	2476:1:78146:78168	1924544	8	True				
ANR	1924592	IdentifierDecl	elementType		1924544	0					
ANR	1924593	IdentifierDeclType	sdlTypePtr		1924544	0					
ANR	1924594	Identifier	elementType		1924544	1					
ANR	1924595	ExpressionStatement	ZVAL_NULL ( ret )	2478:1:78172:78186	1924544	9	True				
ANR	1924596	CallExpression	ZVAL_NULL ( ret )		1924544	0					
ANR	1924597	Callee	ZVAL_NULL		1924544	0					
ANR	1924598	Identifier	ZVAL_NULL		1924544	0					
ANR	1924599	ArgumentList	ret		1924544	1					
ANR	1924600	Argument	ret		1924544	0					
ANR	1924601	Identifier	ret		1924544	0					
ANR	1924602	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	2479:1:78189:78213	1924544	10	True				
ANR	1924603	CallExpression	"FIND_XML_NULL ( data , ret )"		1924544	0					
ANR	1924604	Callee	FIND_XML_NULL		1924544	0					
ANR	1924605	Identifier	FIND_XML_NULL		1924544	0					
ANR	1924606	ArgumentList	data		1924544	1					
ANR	1924607	Argument	data		1924544	0					
ANR	1924608	Identifier	data		1924544	0					
ANR	1924609	Argument	ret		1924544	1					
ANR	1924610	Identifier	ret		1924544	0					
ANR	1924611	IfStatement	"if ( data && ( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content )"		1924544	11					
ANR	1924612	Condition	"data && ( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content"	2481:5:78221:78335	1924544	0	True				
ANR	1924613	AndExpression	"data && ( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content"		1924544	0		&&			
ANR	1924614	Identifier	data		1924544	0					
ANR	1924615	AndExpression	"( attr = get_attribute ( data -> properties , ""arrayType"" ) ) && attr -> children && attr -> children -> content"		1924544	1		&&			
ANR	1924616	AssignmentExpression	"attr = get_attribute ( data -> properties , ""arrayType"" )"		1924544	0		=			
ANR	1924617	Identifier	attr		1924544	0					
ANR	1924618	CallExpression	"get_attribute ( data -> properties , ""arrayType"" )"		1924544	1					
ANR	1924619	Callee	get_attribute		1924544	0					
ANR	1924620	Identifier	get_attribute		1924544	0					
ANR	1924621	ArgumentList	data -> properties		1924544	1					
ANR	1924622	Argument	data -> properties		1924544	0					
ANR	1924623	PtrMemberAccess	data -> properties		1924544	0					
ANR	1924624	Identifier	data		1924544	0					
ANR	1924625	Identifier	properties		1924544	1					
ANR	1924626	Argument	"""arrayType"""		1924544	1					
ANR	1924627	PrimaryExpression	"""arrayType"""		1924544	0					
ANR	1924628	AndExpression	attr -> children && attr -> children -> content		1924544	1		&&			
ANR	1924629	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924630	Identifier	attr		1924544	0					
ANR	1924631	Identifier	children		1924544	1					
ANR	1924632	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1924633	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924634	Identifier	attr		1924544	0					
ANR	1924635	Identifier	children		1924544	1					
ANR	1924636	Identifier	content		1924544	1					
ANR	1924637	CompoundStatement		19:2:394:408	1924544	1					
ANR	1924638	IdentifierDeclStatement	"char * type , * end , * ns ;"	2484:2:78342:78363	1924544	0	True				
ANR	1924639	IdentifierDecl	* type		1924544	0					
ANR	1924640	IdentifierDeclType	char *		1924544	0					
ANR	1924641	Identifier	type		1924544	1					
ANR	1924642	IdentifierDecl	* end		1924544	1					
ANR	1924643	IdentifierDeclType	char *		1924544	0					
ANR	1924644	Identifier	end		1924544	1					
ANR	1924645	IdentifierDecl	* ns		1924544	2					
ANR	1924646	IdentifierDeclType	char *		1924544	0					
ANR	1924647	Identifier	ns		1924544	1					
ANR	1924648	IdentifierDeclStatement	xmlNsPtr nsptr ;	2485:2:78367:78381	1924544	1	True				
ANR	1924649	IdentifierDecl	nsptr		1924544	0					
ANR	1924650	IdentifierDeclType	xmlNsPtr		1924544	0					
ANR	1924651	Identifier	nsptr		1924544	1					
ANR	1924652	ExpressionStatement	"parse_namespace ( attr -> children -> content , & type , & ns )"	2487:2:78386:78438	1924544	2	True				
ANR	1924653	CallExpression	"parse_namespace ( attr -> children -> content , & type , & ns )"		1924544	0					
ANR	1924654	Callee	parse_namespace		1924544	0					
ANR	1924655	Identifier	parse_namespace		1924544	0					
ANR	1924656	ArgumentList	attr -> children -> content		1924544	1					
ANR	1924657	Argument	attr -> children -> content		1924544	0					
ANR	1924658	PtrMemberAccess	attr -> children -> content		1924544	0					
ANR	1924659	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924660	Identifier	attr		1924544	0					
ANR	1924661	Identifier	children		1924544	1					
ANR	1924662	Identifier	content		1924544	1					
ANR	1924663	Argument	& type		1924544	1					
ANR	1924664	UnaryOperationExpression	& type		1924544	0					
ANR	1924665	UnaryOperator	&		1924544	0					
ANR	1924666	Identifier	type		1924544	1					
ANR	1924667	Argument	& ns		1924544	2					
ANR	1924668	UnaryOperationExpression	& ns		1924544	0					
ANR	1924669	UnaryOperator	&		1924544	0					
ANR	1924670	Identifier	ns		1924544	1					
ANR	1924671	ExpressionStatement	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"	2488:2:78442:78500	1924544	3	True				
ANR	1924672	AssignmentExpression	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1924544	0		=			
ANR	1924673	Identifier	nsptr		1924544	0					
ANR	1924674	CallExpression	"xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1924544	1					
ANR	1924675	Callee	xmlSearchNs		1924544	0					
ANR	1924676	Identifier	xmlSearchNs		1924544	0					
ANR	1924677	ArgumentList	attr -> doc		1924544	1					
ANR	1924678	Argument	attr -> doc		1924544	0					
ANR	1924679	PtrMemberAccess	attr -> doc		1924544	0					
ANR	1924680	Identifier	attr		1924544	0					
ANR	1924681	Identifier	doc		1924544	1					
ANR	1924682	Argument	attr -> parent		1924544	1					
ANR	1924683	PtrMemberAccess	attr -> parent		1924544	0					
ANR	1924684	Identifier	attr		1924544	0					
ANR	1924685	Identifier	parent		1924544	1					
ANR	1924686	Argument	BAD_CAST ( ns )		1924544	2					
ANR	1924687	CallExpression	BAD_CAST ( ns )		1924544	0					
ANR	1924688	Callee	BAD_CAST		1924544	0					
ANR	1924689	Identifier	BAD_CAST		1924544	0					
ANR	1924690	ArgumentList	ns		1924544	1					
ANR	1924691	Argument	ns		1924544	0					
ANR	1924692	Identifier	ns		1924544	0					
ANR	1924693	ExpressionStatement	"end = strrchr ( type , '[' )"	2490:2:78505:78528	1924544	4	True				
ANR	1924694	AssignmentExpression	"end = strrchr ( type , '[' )"		1924544	0		=			
ANR	1924695	Identifier	end		1924544	0					
ANR	1924696	CallExpression	"strrchr ( type , '[' )"		1924544	1					
ANR	1924697	Callee	strrchr		1924544	0					
ANR	1924698	Identifier	strrchr		1924544	0					
ANR	1924699	ArgumentList	type		1924544	1					
ANR	1924700	Argument	type		1924544	0					
ANR	1924701	Identifier	type		1924544	0					
ANR	1924702	Argument	'['		1924544	1					
ANR	1924703	PrimaryExpression	'['		1924544	0					
ANR	1924704	IfStatement	if ( end )		1924544	5					
ANR	1924705	Condition	end	2491:6:78536:78538	1924544	0	True				
ANR	1924706	Identifier	end		1924544	0					
ANR	1924707	CompoundStatement		25:11:568:568	1924544	1					
ANR	1924708	ExpressionStatement	* end = '\\0'	2492:3:78546:78557	1924544	0	True				
ANR	1924709	AssignmentExpression	* end = '\\0'		1924544	0		=			
ANR	1924710	UnaryOperationExpression	* end		1924544	0					
ANR	1924711	UnaryOperator	*		1924544	0					
ANR	1924712	Identifier	end		1924544	1					
ANR	1924713	PrimaryExpression	'\\0'		1924544	1					
ANR	1924714	ExpressionStatement	dimension = calc_dimension ( end + 1 )	2493:3:78562:78595	1924544	1	True				
ANR	1924715	AssignmentExpression	dimension = calc_dimension ( end + 1 )		1924544	0		=			
ANR	1924716	Identifier	dimension		1924544	0					
ANR	1924717	CallExpression	calc_dimension ( end + 1 )		1924544	1					
ANR	1924718	Callee	calc_dimension		1924544	0					
ANR	1924719	Identifier	calc_dimension		1924544	0					
ANR	1924720	ArgumentList	end + 1		1924544	1					
ANR	1924721	Argument	end + 1		1924544	0					
ANR	1924722	AdditiveExpression	end + 1		1924544	0		+			
ANR	1924723	Identifier	end		1924544	0					
ANR	1924724	PrimaryExpression	1		1924544	1					
ANR	1924725	ExpressionStatement	"dims = get_position ( dimension , end + 1 )"	2494:3:78600:78637	1924544	2	True				
ANR	1924726	AssignmentExpression	"dims = get_position ( dimension , end + 1 )"		1924544	0		=			
ANR	1924727	Identifier	dims		1924544	0					
ANR	1924728	CallExpression	"get_position ( dimension , end + 1 )"		1924544	1					
ANR	1924729	Callee	get_position		1924544	0					
ANR	1924730	Identifier	get_position		1924544	0					
ANR	1924731	ArgumentList	dimension		1924544	1					
ANR	1924732	Argument	dimension		1924544	0					
ANR	1924733	Identifier	dimension		1924544	0					
ANR	1924734	Argument	end + 1		1924544	1					
ANR	1924735	AdditiveExpression	end + 1		1924544	0		+			
ANR	1924736	Identifier	end		1924544	0					
ANR	1924737	PrimaryExpression	1		1924544	1					
ANR	1924738	IfStatement	if ( nsptr != NULL )		1924544	6					
ANR	1924739	Condition	nsptr != NULL	2496:6:78649:78661	1924544	0	True				
ANR	1924740	EqualityExpression	nsptr != NULL		1924544	0		!=			
ANR	1924741	Identifier	nsptr		1924544	0					
ANR	1924742	Identifier	NULL		1924544	1					
ANR	1924743	CompoundStatement		30:21:691:691	1924544	1					
ANR	1924744	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"	2497:3:78669:78730	1924544	0	True				
ANR	1924745	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1924544	0		=			
ANR	1924746	Identifier	enc		1924544	0					
ANR	1924747	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1924544	1					
ANR	1924748	Callee	get_encoder		1924544	0					
ANR	1924749	Identifier	get_encoder		1924544	0					
ANR	1924750	ArgumentList	SOAP_GLOBAL ( sdl )		1924544	1					
ANR	1924751	Argument	SOAP_GLOBAL ( sdl )		1924544	0					
ANR	1924752	CallExpression	SOAP_GLOBAL ( sdl )		1924544	0					
ANR	1924753	Callee	SOAP_GLOBAL		1924544	0					
ANR	1924754	Identifier	SOAP_GLOBAL		1924544	0					
ANR	1924755	ArgumentList	sdl		1924544	1					
ANR	1924756	Argument	sdl		1924544	0					
ANR	1924757	Identifier	sdl		1924544	0					
ANR	1924758	Argument	( char * ) nsptr -> href		1924544	1					
ANR	1924759	CastExpression	( char * ) nsptr -> href		1924544	0					
ANR	1924760	CastTarget	char *		1924544	0					
ANR	1924761	PtrMemberAccess	nsptr -> href		1924544	1					
ANR	1924762	Identifier	nsptr		1924544	0					
ANR	1924763	Identifier	href		1924544	1					
ANR	1924764	Argument	type		1924544	2					
ANR	1924765	Identifier	type		1924544	0					
ANR	1924766	ExpressionStatement	efree ( type )	2499:2:78738:78749	1924544	7	True				
ANR	1924767	CallExpression	efree ( type )		1924544	0					
ANR	1924768	Callee	efree		1924544	0					
ANR	1924769	Identifier	efree		1924544	0					
ANR	1924770	ArgumentList	type		1924544	1					
ANR	1924771	Argument	type		1924544	0					
ANR	1924772	Identifier	type		1924544	0					
ANR	1924773	IfStatement	if ( ns )		1924544	8					
ANR	1924774	Condition	ns	2500:6:78757:78758	1924544	0	True				
ANR	1924775	Identifier	ns		1924544	0					
ANR	1924776	CompoundStatement		34:10:788:788	1924544	1					
ANR	1924777	ExpressionStatement	efree ( ns )	2500:11:78762:78771	1924544	0	True				
ANR	1924778	CallExpression	efree ( ns )		1924544	0					
ANR	1924779	Callee	efree		1924544	0					
ANR	1924780	Identifier	efree		1924544	0					
ANR	1924781	ArgumentList	ns		1924544	1					
ANR	1924782	Argument	ns		1924544	0					
ANR	1924783	Identifier	ns		1924544	0					
ANR	1924784	ElseStatement	else		1924544	0					
ANR	1924785	IfStatement	"if ( ( attr = get_attribute ( data -> properties , ""itemType"" ) ) && attr -> children && attr -> children -> content )"		1924544	0					
ANR	1924786	Condition	"( attr = get_attribute ( data -> properties , ""itemType"" ) ) && attr -> children && attr -> children -> content"	2502:12:78787:78892	1924544	0	True				
ANR	1924787	AndExpression	"( attr = get_attribute ( data -> properties , ""itemType"" ) ) && attr -> children && attr -> children -> content"		1924544	0		&&			
ANR	1924788	AssignmentExpression	"attr = get_attribute ( data -> properties , ""itemType"" )"		1924544	0		=			
ANR	1924789	Identifier	attr		1924544	0					
ANR	1924790	CallExpression	"get_attribute ( data -> properties , ""itemType"" )"		1924544	1					
ANR	1924791	Callee	get_attribute		1924544	0					
ANR	1924792	Identifier	get_attribute		1924544	0					
ANR	1924793	ArgumentList	data -> properties		1924544	1					
ANR	1924794	Argument	data -> properties		1924544	0					
ANR	1924795	PtrMemberAccess	data -> properties		1924544	0					
ANR	1924796	Identifier	data		1924544	0					
ANR	1924797	Identifier	properties		1924544	1					
ANR	1924798	Argument	"""itemType"""		1924544	1					
ANR	1924799	PrimaryExpression	"""itemType"""		1924544	0					
ANR	1924800	AndExpression	attr -> children && attr -> children -> content		1924544	1		&&			
ANR	1924801	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924802	Identifier	attr		1924544	0					
ANR	1924803	Identifier	children		1924544	1					
ANR	1924804	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1924805	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924806	Identifier	attr		1924544	0					
ANR	1924807	Identifier	children		1924544	1					
ANR	1924808	Identifier	content		1924544	1					
ANR	1924809	CompoundStatement		40:2:945:959	1924544	1					
ANR	1924810	IdentifierDeclStatement	"char * type , * ns ;"	2505:2:78899:78914	1924544	0	True				
ANR	1924811	IdentifierDecl	* type		1924544	0					
ANR	1924812	IdentifierDeclType	char *		1924544	0					
ANR	1924813	Identifier	type		1924544	1					
ANR	1924814	IdentifierDecl	* ns		1924544	1					
ANR	1924815	IdentifierDeclType	char *		1924544	0					
ANR	1924816	Identifier	ns		1924544	1					
ANR	1924817	IdentifierDeclStatement	xmlNsPtr nsptr ;	2506:2:78918:78932	1924544	1	True				
ANR	1924818	IdentifierDecl	nsptr		1924544	0					
ANR	1924819	IdentifierDeclType	xmlNsPtr		1924544	0					
ANR	1924820	Identifier	nsptr		1924544	1					
ANR	1924821	ExpressionStatement	"parse_namespace ( attr -> children -> content , & type , & ns )"	2508:2:78937:78989	1924544	2	True				
ANR	1924822	CallExpression	"parse_namespace ( attr -> children -> content , & type , & ns )"		1924544	0					
ANR	1924823	Callee	parse_namespace		1924544	0					
ANR	1924824	Identifier	parse_namespace		1924544	0					
ANR	1924825	ArgumentList	attr -> children -> content		1924544	1					
ANR	1924826	Argument	attr -> children -> content		1924544	0					
ANR	1924827	PtrMemberAccess	attr -> children -> content		1924544	0					
ANR	1924828	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924829	Identifier	attr		1924544	0					
ANR	1924830	Identifier	children		1924544	1					
ANR	1924831	Identifier	content		1924544	1					
ANR	1924832	Argument	& type		1924544	1					
ANR	1924833	UnaryOperationExpression	& type		1924544	0					
ANR	1924834	UnaryOperator	&		1924544	0					
ANR	1924835	Identifier	type		1924544	1					
ANR	1924836	Argument	& ns		1924544	2					
ANR	1924837	UnaryOperationExpression	& ns		1924544	0					
ANR	1924838	UnaryOperator	&		1924544	0					
ANR	1924839	Identifier	ns		1924544	1					
ANR	1924840	ExpressionStatement	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"	2509:2:78993:79051	1924544	3	True				
ANR	1924841	AssignmentExpression	"nsptr = xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1924544	0		=			
ANR	1924842	Identifier	nsptr		1924544	0					
ANR	1924843	CallExpression	"xmlSearchNs ( attr -> doc , attr -> parent , BAD_CAST ( ns ) )"		1924544	1					
ANR	1924844	Callee	xmlSearchNs		1924544	0					
ANR	1924845	Identifier	xmlSearchNs		1924544	0					
ANR	1924846	ArgumentList	attr -> doc		1924544	1					
ANR	1924847	Argument	attr -> doc		1924544	0					
ANR	1924848	PtrMemberAccess	attr -> doc		1924544	0					
ANR	1924849	Identifier	attr		1924544	0					
ANR	1924850	Identifier	doc		1924544	1					
ANR	1924851	Argument	attr -> parent		1924544	1					
ANR	1924852	PtrMemberAccess	attr -> parent		1924544	0					
ANR	1924853	Identifier	attr		1924544	0					
ANR	1924854	Identifier	parent		1924544	1					
ANR	1924855	Argument	BAD_CAST ( ns )		1924544	2					
ANR	1924856	CallExpression	BAD_CAST ( ns )		1924544	0					
ANR	1924857	Callee	BAD_CAST		1924544	0					
ANR	1924858	Identifier	BAD_CAST		1924544	0					
ANR	1924859	ArgumentList	ns		1924544	1					
ANR	1924860	Argument	ns		1924544	0					
ANR	1924861	Identifier	ns		1924544	0					
ANR	1924862	IfStatement	if ( nsptr != NULL )		1924544	4					
ANR	1924863	Condition	nsptr != NULL	2510:6:79059:79071	1924544	0	True				
ANR	1924864	EqualityExpression	nsptr != NULL		1924544	0		!=			
ANR	1924865	Identifier	nsptr		1924544	0					
ANR	1924866	Identifier	NULL		1924544	1					
ANR	1924867	CompoundStatement		44:21:1101:1101	1924544	1					
ANR	1924868	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"	2511:3:79079:79140	1924544	0	True				
ANR	1924869	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1924544	0		=			
ANR	1924870	Identifier	enc		1924544	0					
ANR	1924871	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ( char * ) nsptr -> href , type )"		1924544	1					
ANR	1924872	Callee	get_encoder		1924544	0					
ANR	1924873	Identifier	get_encoder		1924544	0					
ANR	1924874	ArgumentList	SOAP_GLOBAL ( sdl )		1924544	1					
ANR	1924875	Argument	SOAP_GLOBAL ( sdl )		1924544	0					
ANR	1924876	CallExpression	SOAP_GLOBAL ( sdl )		1924544	0					
ANR	1924877	Callee	SOAP_GLOBAL		1924544	0					
ANR	1924878	Identifier	SOAP_GLOBAL		1924544	0					
ANR	1924879	ArgumentList	sdl		1924544	1					
ANR	1924880	Argument	sdl		1924544	0					
ANR	1924881	Identifier	sdl		1924544	0					
ANR	1924882	Argument	( char * ) nsptr -> href		1924544	1					
ANR	1924883	CastExpression	( char * ) nsptr -> href		1924544	0					
ANR	1924884	CastTarget	char *		1924544	0					
ANR	1924885	PtrMemberAccess	nsptr -> href		1924544	1					
ANR	1924886	Identifier	nsptr		1924544	0					
ANR	1924887	Identifier	href		1924544	1					
ANR	1924888	Argument	type		1924544	2					
ANR	1924889	Identifier	type		1924544	0					
ANR	1924890	ExpressionStatement	efree ( type )	2513:2:79148:79159	1924544	5	True				
ANR	1924891	CallExpression	efree ( type )		1924544	0					
ANR	1924892	Callee	efree		1924544	0					
ANR	1924893	Identifier	efree		1924544	0					
ANR	1924894	ArgumentList	type		1924544	1					
ANR	1924895	Argument	type		1924544	0					
ANR	1924896	Identifier	type		1924544	0					
ANR	1924897	IfStatement	if ( ns )		1924544	6					
ANR	1924898	Condition	ns	2514:6:79167:79168	1924544	0	True				
ANR	1924899	Identifier	ns		1924544	0					
ANR	1924900	CompoundStatement		48:10:1198:1198	1924544	1					
ANR	1924901	ExpressionStatement	efree ( ns )	2514:11:79172:79181	1924544	0	True				
ANR	1924902	CallExpression	efree ( ns )		1924544	0					
ANR	1924903	Callee	efree		1924544	0					
ANR	1924904	Identifier	efree		1924544	0					
ANR	1924905	ArgumentList	ns		1924544	1					
ANR	1924906	Argument	ns		1924544	0					
ANR	1924907	Identifier	ns		1924544	0					
ANR	1924908	IfStatement	"if ( ( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content )"		1924544	7					
ANR	1924909	Condition	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"	2516:6:79191:79293	1924544	0	True				
ANR	1924910	AndExpression	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"		1924544	0		&&			
ANR	1924911	AssignmentExpression	"attr = get_attribute ( data -> properties , ""arraySize"" )"		1924544	0		=			
ANR	1924912	Identifier	attr		1924544	0					
ANR	1924913	CallExpression	"get_attribute ( data -> properties , ""arraySize"" )"		1924544	1					
ANR	1924914	Callee	get_attribute		1924544	0					
ANR	1924915	Identifier	get_attribute		1924544	0					
ANR	1924916	ArgumentList	data -> properties		1924544	1					
ANR	1924917	Argument	data -> properties		1924544	0					
ANR	1924918	PtrMemberAccess	data -> properties		1924544	0					
ANR	1924919	Identifier	data		1924544	0					
ANR	1924920	Identifier	properties		1924544	1					
ANR	1924921	Argument	"""arraySize"""		1924544	1					
ANR	1924922	PrimaryExpression	"""arraySize"""		1924544	0					
ANR	1924923	AndExpression	attr -> children && attr -> children -> content		1924544	1		&&			
ANR	1924924	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924925	Identifier	attr		1924544	0					
ANR	1924926	Identifier	children		1924544	1					
ANR	1924927	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1924928	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924929	Identifier	attr		1924544	0					
ANR	1924930	Identifier	children		1924544	1					
ANR	1924931	Identifier	content		1924544	1					
ANR	1924932	CompoundStatement		51:49:1323:1323	1924544	1					
ANR	1924933	ExpressionStatement	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )	2518:3:79301:79362	1924544	0	True				
ANR	1924934	AssignmentExpression	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )		1924544	0		=			
ANR	1924935	Identifier	dimension		1924544	0					
ANR	1924936	CallExpression	calc_dimension_12 ( ( char * ) attr -> children -> content )		1924544	1					
ANR	1924937	Callee	calc_dimension_12		1924544	0					
ANR	1924938	Identifier	calc_dimension_12		1924544	0					
ANR	1924939	ArgumentList	( char * ) attr -> children -> content		1924544	1					
ANR	1924940	Argument	( char * ) attr -> children -> content		1924544	0					
ANR	1924941	CastExpression	( char * ) attr -> children -> content		1924544	0					
ANR	1924942	CastTarget	char *		1924544	0					
ANR	1924943	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1924944	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924945	Identifier	attr		1924544	0					
ANR	1924946	Identifier	children		1924544	1					
ANR	1924947	Identifier	content		1924544	1					
ANR	1924948	ExpressionStatement	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"	2519:3:79367:79432	1924544	1	True				
ANR	1924949	AssignmentExpression	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1924544	0		=			
ANR	1924950	Identifier	dims		1924544	0					
ANR	1924951	CallExpression	"get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1924544	1					
ANR	1924952	Callee	get_position_12		1924544	0					
ANR	1924953	Identifier	get_position_12		1924544	0					
ANR	1924954	ArgumentList	dimension		1924544	1					
ANR	1924955	Argument	dimension		1924544	0					
ANR	1924956	Identifier	dimension		1924544	0					
ANR	1924957	Argument	( char * ) attr -> children -> content		1924544	1					
ANR	1924958	CastExpression	( char * ) attr -> children -> content		1924544	0					
ANR	1924959	CastTarget	char *		1924544	0					
ANR	1924960	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1924961	PtrMemberAccess	attr -> children		1924544	0					
ANR	1924962	Identifier	attr		1924544	0					
ANR	1924963	Identifier	children		1924544	1					
ANR	1924964	Identifier	content		1924544	1					
ANR	1924965	ElseStatement	else		1924544	0					
ANR	1924966	CompoundStatement		54:9:1470:1470	1924544	0					
ANR	1924967	ExpressionStatement	dims = emalloc ( sizeof ( int ) )	2521:3:79448:79475	1924544	0	True				
ANR	1924968	AssignmentExpression	dims = emalloc ( sizeof ( int ) )		1924544	0		=			
ANR	1924969	Identifier	dims		1924544	0					
ANR	1924970	CallExpression	emalloc ( sizeof ( int ) )		1924544	1					
ANR	1924971	Callee	emalloc		1924544	0					
ANR	1924972	Identifier	emalloc		1924544	0					
ANR	1924973	ArgumentList	sizeof ( int )		1924544	1					
ANR	1924974	Argument	sizeof ( int )		1924544	0					
ANR	1924975	SizeofExpression	sizeof ( int )		1924544	0					
ANR	1924976	Sizeof	sizeof		1924544	0					
ANR	1924977	SizeofOperand	int		1924544	1					
ANR	1924978	ExpressionStatement	* dims = 0	2522:3:79480:79489	1924544	1	True				
ANR	1924979	AssignmentExpression	* dims = 0		1924544	0		=			
ANR	1924980	UnaryOperationExpression	* dims		1924544	0					
ANR	1924981	UnaryOperator	*		1924544	0					
ANR	1924982	Identifier	dims		1924544	1					
ANR	1924983	PrimaryExpression	0		1924544	1					
ANR	1924984	ElseStatement	else		1924544	0					
ANR	1924985	IfStatement	"if ( ( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content )"		1924544	0					
ANR	1924986	Condition	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"	2525:12:79508:79609	1924544	0	True				
ANR	1924987	AndExpression	"( attr = get_attribute ( data -> properties , ""arraySize"" ) ) && attr -> children && attr -> children -> content"		1924544	0		&&			
ANR	1924988	AssignmentExpression	"attr = get_attribute ( data -> properties , ""arraySize"" )"		1924544	0		=			
ANR	1924989	Identifier	attr		1924544	0					
ANR	1924990	CallExpression	"get_attribute ( data -> properties , ""arraySize"" )"		1924544	1					
ANR	1924991	Callee	get_attribute		1924544	0					
ANR	1924992	Identifier	get_attribute		1924544	0					
ANR	1924993	ArgumentList	data -> properties		1924544	1					
ANR	1924994	Argument	data -> properties		1924544	0					
ANR	1924995	PtrMemberAccess	data -> properties		1924544	0					
ANR	1924996	Identifier	data		1924544	0					
ANR	1924997	Identifier	properties		1924544	1					
ANR	1924998	Argument	"""arraySize"""		1924544	1					
ANR	1924999	PrimaryExpression	"""arraySize"""		1924544	0					
ANR	1925000	AndExpression	attr -> children && attr -> children -> content		1924544	1		&&			
ANR	1925001	PtrMemberAccess	attr -> children		1924544	0					
ANR	1925002	Identifier	attr		1924544	0					
ANR	1925003	Identifier	children		1924544	1					
ANR	1925004	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1925005	PtrMemberAccess	attr -> children		1924544	0					
ANR	1925006	Identifier	attr		1924544	0					
ANR	1925007	Identifier	children		1924544	1					
ANR	1925008	Identifier	content		1924544	1					
ANR	1925009	CompoundStatement		60:48:1639:1639	1924544	1					
ANR	1925010	ExpressionStatement	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )	2528:2:79617:79678	1924544	0	True				
ANR	1925011	AssignmentExpression	dimension = calc_dimension_12 ( ( char * ) attr -> children -> content )		1924544	0		=			
ANR	1925012	Identifier	dimension		1924544	0					
ANR	1925013	CallExpression	calc_dimension_12 ( ( char * ) attr -> children -> content )		1924544	1					
ANR	1925014	Callee	calc_dimension_12		1924544	0					
ANR	1925015	Identifier	calc_dimension_12		1924544	0					
ANR	1925016	ArgumentList	( char * ) attr -> children -> content		1924544	1					
ANR	1925017	Argument	( char * ) attr -> children -> content		1924544	0					
ANR	1925018	CastExpression	( char * ) attr -> children -> content		1924544	0					
ANR	1925019	CastTarget	char *		1924544	0					
ANR	1925020	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1925021	PtrMemberAccess	attr -> children		1924544	0					
ANR	1925022	Identifier	attr		1924544	0					
ANR	1925023	Identifier	children		1924544	1					
ANR	1925024	Identifier	content		1924544	1					
ANR	1925025	ExpressionStatement	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"	2529:2:79682:79747	1924544	1	True				
ANR	1925026	AssignmentExpression	"dims = get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1924544	0		=			
ANR	1925027	Identifier	dims		1924544	0					
ANR	1925028	CallExpression	"get_position_12 ( dimension , ( char * ) attr -> children -> content )"		1924544	1					
ANR	1925029	Callee	get_position_12		1924544	0					
ANR	1925030	Identifier	get_position_12		1924544	0					
ANR	1925031	ArgumentList	dimension		1924544	1					
ANR	1925032	Argument	dimension		1924544	0					
ANR	1925033	Identifier	dimension		1924544	0					
ANR	1925034	Argument	( char * ) attr -> children -> content		1924544	1					
ANR	1925035	CastExpression	( char * ) attr -> children -> content		1924544	0					
ANR	1925036	CastTarget	char *		1924544	0					
ANR	1925037	PtrMemberAccess	attr -> children -> content		1924544	1					
ANR	1925038	PtrMemberAccess	attr -> children		1924544	0					
ANR	1925039	Identifier	attr		1924544	0					
ANR	1925040	Identifier	children		1924544	1					
ANR	1925041	Identifier	content		1924544	1					
ANR	1925042	ElseStatement	else		1924544	0					
ANR	1925043	Statement	if	2531:8:79758:79759	1924544	0	True				
ANR	1925044	Statement	(	2531:11:79761:79761	1924544	12	True				
ANR	1925045	Statement	type	2531:12:79762:79765	1924544	13	True				
ANR	1925046	Statement	->	2531:16:79766:79767	1924544	14	True				
ANR	1925047	Statement	sdl_type	2531:18:79768:79775	1924544	15	True				
ANR	1925048	Statement	!=	2531:27:79777:79778	1924544	16	True				
ANR	1925049	Statement	NULL	2531:30:79780:79783	1924544	17	True				
ANR	1925050	Statement	&&	2531:35:79785:79786	1924544	18	True				
ANR	1925051	Statement	type	2532:12:79800:79803	1924544	19	True				
ANR	1925052	Statement	->	2532:16:79804:79805	1924544	20	True				
ANR	1925053	Statement	sdl_type	2532:18:79806:79813	1924544	21	True				
ANR	1925054	Statement	->	2532:26:79814:79815	1924544	22	True				
ANR	1925055	Statement	attributes	2532:28:79816:79825	1924544	23	True				
ANR	1925056	Statement	!=	2532:39:79827:79828	1924544	24	True				
ANR	1925057	Statement	NULL	2532:42:79830:79833	1924544	25	True				
ANR	1925058	Statement	&&	2532:47:79835:79836	1924544	26	True				
ANR	1925059	Statement	(	2533:12:79850:79850	1924544	27	True				
ANR	1925060	Statement	arrayType	2533:13:79851:79859	1924544	28	True				
ANR	1925061	Statement	=	2533:23:79861:79861	1924544	29	True				
ANR	1925062	Statement	zend_hash_str_find_ptr	2533:25:79863:79884	1924544	30	True				
ANR	1925063	Statement	(	2533:47:79885:79885	1924544	31	True				
ANR	1925064	Statement	type	2533:48:79886:79889	1924544	32	True				
ANR	1925065	Statement	->	2533:52:79890:79891	1924544	33	True				
ANR	1925066	Statement	sdl_type	2533:54:79892:79899	1924544	34	True				
ANR	1925067	Statement	->	2533:62:79900:79901	1924544	35	True				
ANR	1925068	Statement	attributes	2533:64:79902:79911	1924544	36	True				
ANR	1925069	Statement	","	2533:74:79912:79912	1924544	37	True				
ANR	1925070	Statement	SOAP_1_1_ENC_NAMESPACE	2533:76:79914:79935	1924544	38	True				
ANR	1925071	Statement	""":arrayType"""	2533:98:79936:79947	1924544	39	True				
ANR	1925072	Statement	","	2533:110:79948:79948	1924544	40	True				
ANR	1925073	Statement	sizeof	2534:27:79977:79982	1924544	41	True				
ANR	1925074	Statement	(	2534:33:79983:79983	1924544	42	True				
ANR	1925075	Statement	SOAP_1_1_ENC_NAMESPACE	2534:34:79984:80005	1924544	43	True				
ANR	1925076	Statement	""":arrayType"""	2534:56:80006:80017	1924544	44	True				
ANR	1925077	Statement	)	2534:68:80018:80018	1924544	45	True				
ANR	1925078	Statement	-	2534:69:80019:80019	1924544	46	True				
ANR	1925079	Statement	1	2534:70:80020:80020	1924544	47	True				
ANR	1925080	Statement	)	2534:71:80021:80021	1924544	48	True				
ANR	1925081	Statement	)	2534:72:80022:80022	1924544	49	True				
ANR	1925082	Statement	!=	2534:74:80024:80025	1924544	50	True				
ANR	1925083	Statement	NULL	2534:77:80027:80030	1924544	51	True				
ANR	1925084	Statement	&&	2534:82:80032:80033	1924544	52	True				
ANR	1925085	Statement	arrayType	2535:12:80047:80055	1924544	53	True				
ANR	1925086	Statement	->	2535:21:80056:80057	1924544	54	True				
ANR	1925087	Statement	extraAttributes	2535:23:80058:80072	1924544	55	True				
ANR	1925088	Statement	&&	2535:39:80074:80075	1924544	56	True				
ANR	1925089	Statement	(	2536:12:80089:80089	1924544	57	True				
ANR	1925090	Statement	ext	2536:13:80090:80092	1924544	58	True				
ANR	1925091	Statement	=	2536:17:80094:80094	1924544	59	True				
ANR	1925092	Statement	zend_hash_str_find_ptr	2536:19:80096:80117	1924544	60	True				
ANR	1925093	Statement	(	2536:41:80118:80118	1924544	61	True				
ANR	1925094	Statement	arrayType	2536:42:80119:80127	1924544	62	True				
ANR	1925095	Statement	->	2536:51:80128:80129	1924544	63	True				
ANR	1925096	Statement	extraAttributes	2536:53:80130:80144	1924544	64	True				
ANR	1925097	Statement	","	2536:68:80145:80145	1924544	65	True				
ANR	1925098	Statement	WSDL_NAMESPACE	2536:70:80147:80160	1924544	66	True				
ANR	1925099	Statement	""":arrayType"""	2536:84:80161:80172	1924544	67	True				
ANR	1925100	Statement	","	2536:96:80173:80173	1924544	68	True				
ANR	1925101	Statement	sizeof	2536:98:80175:80180	1924544	69	True				
ANR	1925102	Statement	(	2536:104:80181:80181	1924544	70	True				
ANR	1925103	Statement	WSDL_NAMESPACE	2536:105:80182:80195	1924544	71	True				
ANR	1925104	Statement	""":arrayType"""	2536:119:80196:80207	1924544	72	True				
ANR	1925105	Statement	)	2536:131:80208:80208	1924544	73	True				
ANR	1925106	Statement	-	2536:132:80209:80209	1924544	74	True				
ANR	1925107	Statement	1	2536:133:80210:80210	1924544	75	True				
ANR	1925108	Statement	)	2536:134:80211:80211	1924544	76	True				
ANR	1925109	Statement	)	2536:135:80212:80212	1924544	77	True				
ANR	1925110	Statement	!=	2536:137:80214:80215	1924544	78	True				
ANR	1925111	Statement	NULL	2536:140:80217:80220	1924544	79	True				
ANR	1925112	Statement	)	2536:144:80221:80221	1924544	80	True				
ANR	1925113	CompoundStatement		71:2:2254:2270	1924544	81					
ANR	1925114	IdentifierDeclStatement	"char * type , * end ;"	2537:2:80227:80243	1924544	0	True				
ANR	1925115	IdentifierDecl	* type		1924544	0					
ANR	1925116	IdentifierDeclType	char *		1924544	0					
ANR	1925117	Identifier	type		1924544	1					
ANR	1925118	IdentifierDecl	* end		1924544	1					
ANR	1925119	IdentifierDeclType	char *		1924544	0					
ANR	1925120	Identifier	end		1924544	1					
ANR	1925121	ExpressionStatement	type = estrdup ( ext -> val )	2539:2:80248:80272	1924544	1	True				
ANR	1925122	AssignmentExpression	type = estrdup ( ext -> val )		1924544	0		=			
ANR	1925123	Identifier	type		1924544	0					
ANR	1925124	CallExpression	estrdup ( ext -> val )		1924544	1					
ANR	1925125	Callee	estrdup		1924544	0					
ANR	1925126	Identifier	estrdup		1924544	0					
ANR	1925127	ArgumentList	ext -> val		1924544	1					
ANR	1925128	Argument	ext -> val		1924544	0					
ANR	1925129	PtrMemberAccess	ext -> val		1924544	0					
ANR	1925130	Identifier	ext		1924544	0					
ANR	1925131	Identifier	val		1924544	1					
ANR	1925132	ExpressionStatement	"end = strrchr ( type , '[' )"	2540:2:80276:80299	1924544	2	True				
ANR	1925133	AssignmentExpression	"end = strrchr ( type , '[' )"		1924544	0		=			
ANR	1925134	Identifier	end		1924544	0					
ANR	1925135	CallExpression	"strrchr ( type , '[' )"		1924544	1					
ANR	1925136	Callee	strrchr		1924544	0					
ANR	1925137	Identifier	strrchr		1924544	0					
ANR	1925138	ArgumentList	type		1924544	1					
ANR	1925139	Argument	type		1924544	0					
ANR	1925140	Identifier	type		1924544	0					
ANR	1925141	Argument	'['		1924544	1					
ANR	1925142	PrimaryExpression	'['		1924544	0					
ANR	1925143	IfStatement	if ( end )		1924544	3					
ANR	1925144	Condition	end	2541:6:80307:80309	1924544	0	True				
ANR	1925145	Identifier	end		1924544	0					
ANR	1925146	CompoundStatement		75:11:2339:2339	1924544	1					
ANR	1925147	ExpressionStatement	* end = '\\0'	2542:3:80317:80328	1924544	0	True				
ANR	1925148	AssignmentExpression	* end = '\\0'		1924544	0		=			
ANR	1925149	UnaryOperationExpression	* end		1924544	0					
ANR	1925150	UnaryOperator	*		1924544	0					
ANR	1925151	Identifier	end		1924544	1					
ANR	1925152	PrimaryExpression	'\\0'		1924544	1					
ANR	1925153	IfStatement	if ( ext -> ns != NULL )		1924544	4					
ANR	1925154	Condition	ext -> ns != NULL	2544:6:80340:80354	1924544	0	True				
ANR	1925155	EqualityExpression	ext -> ns != NULL		1924544	0		!=			
ANR	1925156	PtrMemberAccess	ext -> ns		1924544	0					
ANR	1925157	Identifier	ext		1924544	0					
ANR	1925158	Identifier	ns		1924544	1					
ANR	1925159	Identifier	NULL		1924544	1					
ANR	1925160	CompoundStatement		78:23:2384:2384	1924544	1					
ANR	1925161	ExpressionStatement	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , type )"	2545:3:80362:80412	1924544	0	True				
ANR	1925162	AssignmentExpression	"enc = get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , type )"		1924544	0		=			
ANR	1925163	Identifier	enc		1924544	0					
ANR	1925164	CallExpression	"get_encoder ( SOAP_GLOBAL ( sdl ) , ext -> ns , type )"		1924544	1					
ANR	1925165	Callee	get_encoder		1924544	0					
ANR	1925166	Identifier	get_encoder		1924544	0					
ANR	1925167	ArgumentList	SOAP_GLOBAL ( sdl )		1924544	1					
ANR	1925168	Argument	SOAP_GLOBAL ( sdl )		1924544	0					
ANR	1925169	CallExpression	SOAP_GLOBAL ( sdl )		1924544	0					
ANR	1925170	Callee	SOAP_GLOBAL		1924544	0					
ANR	1925171	Identifier	SOAP_GLOBAL		1924544	0					
ANR	1925172	ArgumentList	sdl		1924544	1					
ANR	1925173	Argument	sdl		1924544	0					
ANR	1925174	Identifier	sdl		1924544	0					
ANR	1925175	Argument	ext -> ns		1924544	1					
ANR	1925176	PtrMemberAccess	ext -> ns		1924544	0					
ANR	1925177	Identifier	ext		1924544	0					
ANR	1925178	Identifier	ns		1924544	1					
ANR	1925179	Argument	type		1924544	2					
ANR	1925180	Identifier	type		1924544	0					
ANR	1925181	ExpressionStatement	efree ( type )	2547:2:80420:80431	1924544	5	True				
ANR	1925182	CallExpression	efree ( type )		1924544	0					
ANR	1925183	Callee	efree		1924544	0					
ANR	1925184	Identifier	efree		1924544	0					
ANR	1925185	ArgumentList	type		1924544	1					
ANR	1925186	Argument	type		1924544	0					
ANR	1925187	Identifier	type		1924544	0					
ANR	1925188	ExpressionStatement	dims = emalloc ( sizeof ( int ) )	2549:2:80436:80463	1924544	6	True				
ANR	1925189	AssignmentExpression	dims = emalloc ( sizeof ( int ) )		1924544	0		=			
ANR	1925190	Identifier	dims		1924544	0					
ANR	1925191	CallExpression	emalloc ( sizeof ( int ) )		1924544	1					
ANR	1925192	Callee	emalloc		1924544	0					
ANR	1925193	Identifier	emalloc		1924544	0					
ANR	1925194	ArgumentList	sizeof ( int )		1924544	1					
ANR	1925195	Argument	sizeof ( int )		1924544	0					
ANR	1925196	SizeofExpression	sizeof ( int )		1924544	0					
ANR	1925197	Sizeof	sizeof		1924544	0					
ANR	1925198	SizeofOperand	int		1924544	1					
ANR	1925199	ExpressionStatement	* dims = 0	2550:2:80467:80476	1924544	7	True				
ANR	1925200	AssignmentExpression	* dims = 0		1924544	0		=			
ANR	1925201	UnaryOperationExpression	* dims		1924544	0					
ANR	1925202	UnaryOperator	*		1924544	0					
ANR	1925203	Identifier	dims		1924544	1					
ANR	1925204	PrimaryExpression	0		1924544	1					
ANR	1925205	ReturnType	static zval *		1924544	1					
ANR	1925206	Identifier	to_zval_array		1924544	2					
ANR	1925207	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1924544	3					
ANR	1925208	Parameter	zval * ret	2466:27:77924:77932	1924544	0	True				
ANR	1925209	ParameterType	zval *		1924544	0					
ANR	1925210	Identifier	ret		1924544	1					
ANR	1925211	Parameter	encodeTypePtr type	2466:38:77935:77952	1924544	1	True				
ANR	1925212	ParameterType	encodeTypePtr		1924544	0					
ANR	1925213	Identifier	type		1924544	1					
ANR	1925214	Parameter	xmlNodePtr data	2466:58:77955:77969	1924544	2	True				
ANR	1925215	ParameterType	xmlNodePtr		1924544	0					
ANR	1925216	Identifier	data		1924544	1					
ANR	1925217	CFGEntryNode	ENTRY		1924544		True				
ANR	1925218	CFGExitNode	EXIT		1924544		True				
ANR	1925219	Symbol	get_position		1924544						
ANR	1925220	Symbol	data		1924544						
ANR	1925221	Symbol	dims		1924544						
ANR	1925222	Symbol	get_attribute		1924544						
ANR	1925223	Symbol	ext -> ns		1924544						
ANR	1925224	Symbol	trav		1924544						
ANR	1925225	Symbol	ns		1924544						
ANR	1925226	Symbol	* * attr		1924544						
ANR	1925227	Symbol	calc_dimension_12		1924544						
ANR	1925228	Symbol	* attr -> children		1924544						
ANR	1925229	Symbol	type		1924544						
ANR	1925230	Symbol	data -> properties		1924544						
ANR	1925231	Symbol	nsptr		1924544						
ANR	1925232	Symbol	emalloc		1924544						
ANR	1925233	Symbol	pos		1924544						
ANR	1925234	Symbol	end		1924544						
ANR	1925235	Symbol	attr -> doc		1924544						
ANR	1925236	Symbol	enc		1924544						
ANR	1925237	Symbol	attr		1924544						
ANR	1925238	Symbol	dimension		1924544						
ANR	1925239	Symbol	ret		1924544						
ANR	1925240	Symbol	ext		1924544						
ANR	1925241	Symbol	arrayType		1924544						
ANR	1925242	Symbol	NULL		1924544						
ANR	1925243	Symbol	nsptr -> href		1924544						
ANR	1925244	Symbol	& type		1924544						
ANR	1925245	Symbol	attr -> parent		1924544						
ANR	1925246	Symbol	attr -> children -> content		1924544						
ANR	1925247	Symbol	attr -> children		1924544						
ANR	1925248	Symbol	get_position_12		1924544						
ANR	1925249	Symbol	xmlSearchNs		1924544						
ANR	1925250	Symbol	SOAP_GLOBAL		1924544						
ANR	1925251	Symbol	& ns		1924544						
ANR	1925252	Symbol	ext -> val		1924544						
ANR	1925253	Symbol	get_encoder		1924544						
ANR	1925254	Symbol	* ext		1924544						
ANR	1925255	Symbol	calc_dimension		1924544						
ANR	1925256	Symbol	strrchr		1924544						
ANR	1925257	Symbol	* nsptr		1924544						
ANR	1925258	Symbol	estrdup		1924544						
ANR	1925259	Symbol	* end		1924544						
ANR	1925260	Symbol	sdl		1924544						
ANR	1925261	Symbol	* attr		1924544						
ANR	1925262	Symbol	* dims		1924544						
ANR	1925263	Symbol	elementType		1924544						
ANR	1925264	Symbol	* data		1924544						
ANR	1925265	Symbol	BAD_CAST		1924544						
ANR	1925266	Function	to_xml_map	2672:0:84591:85889							
ANR	1925267	FunctionDef	"to_xml_map (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1925266	0					
ANR	1925268	CompoundStatement		2673:0:84682:85889	1925266	0					
ANR	1925269	IdentifierDeclStatement	zval * temp_data ;	2674:1:84685:84700	1925266	0	True				
ANR	1925270	IdentifierDecl	* temp_data		1925266	0					
ANR	1925271	IdentifierDeclType	zval *		1925266	0					
ANR	1925272	Identifier	temp_data		1925266	1					
ANR	1925273	IdentifierDeclStatement	zend_string * key_val ;	2675:1:84703:84723	1925266	1	True				
ANR	1925274	IdentifierDecl	* key_val		1925266	0					
ANR	1925275	IdentifierDeclType	zend_string *		1925266	0					
ANR	1925276	Identifier	key_val		1925266	1					
ANR	1925277	IdentifierDeclStatement	zend_ulong int_val ;	2676:1:84726:84744	1925266	2	True				
ANR	1925278	IdentifierDecl	int_val		1925266	0					
ANR	1925279	IdentifierDeclType	zend_ulong		1925266	0					
ANR	1925280	Identifier	int_val		1925266	1					
ANR	1925281	IdentifierDeclStatement	xmlNodePtr xmlParam ;	2677:1:84747:84766	1925266	3	True				
ANR	1925282	IdentifierDecl	xmlParam		1925266	0					
ANR	1925283	IdentifierDeclType	xmlNodePtr		1925266	0					
ANR	1925284	Identifier	xmlParam		1925266	1					
ANR	1925285	IdentifierDeclStatement	"xmlNodePtr xparam , item ;"	2678:1:84769:84792	1925266	4	True				
ANR	1925286	IdentifierDecl	xparam		1925266	0					
ANR	1925287	IdentifierDeclType	xmlNodePtr		1925266	0					
ANR	1925288	Identifier	xparam		1925266	1					
ANR	1925289	IdentifierDecl	item		1925266	1					
ANR	1925290	IdentifierDeclType	xmlNodePtr		1925266	0					
ANR	1925291	Identifier	item		1925266	1					
ANR	1925292	IdentifierDeclStatement	xmlNodePtr key ;	2679:1:84795:84809	1925266	5	True				
ANR	1925293	IdentifierDecl	key		1925266	0					
ANR	1925294	IdentifierDeclType	xmlNodePtr		1925266	0					
ANR	1925295	Identifier	key		1925266	1					
ANR	1925296	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2681:1:84813:84859	1925266	6	True				
ANR	1925297	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1925266	0		=			
ANR	1925298	Identifier	xmlParam		1925266	0					
ANR	1925299	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1925266	1					
ANR	1925300	Callee	xmlNewNode		1925266	0					
ANR	1925301	Identifier	xmlNewNode		1925266	0					
ANR	1925302	ArgumentList	NULL		1925266	1					
ANR	1925303	Argument	NULL		1925266	0					
ANR	1925304	Identifier	NULL		1925266	0					
ANR	1925305	Argument	"BAD_CAST ( ""BOGUS"" )"		1925266	1					
ANR	1925306	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1925266	0					
ANR	1925307	Callee	BAD_CAST		1925266	0					
ANR	1925308	Identifier	BAD_CAST		1925266	0					
ANR	1925309	ArgumentList	"""BOGUS"""		1925266	1					
ANR	1925310	Argument	"""BOGUS"""		1925266	0					
ANR	1925311	PrimaryExpression	"""BOGUS"""		1925266	0					
ANR	1925312	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	2682:1:84862:84891	1925266	7	True				
ANR	1925313	CallExpression	"xmlAddChild ( parent , xmlParam )"		1925266	0					
ANR	1925314	Callee	xmlAddChild		1925266	0					
ANR	1925315	Identifier	xmlAddChild		1925266	0					
ANR	1925316	ArgumentList	parent		1925266	1					
ANR	1925317	Argument	parent		1925266	0					
ANR	1925318	Identifier	parent		1925266	0					
ANR	1925319	Argument	xmlParam		1925266	1					
ANR	1925320	Identifier	xmlParam		1925266	0					
ANR	1925321	ExpressionStatement	"FIND_ZVAL_NULL ( data , xmlParam , style )"	2683:1:84894:84931	1925266	8	True				
ANR	1925322	CallExpression	"FIND_ZVAL_NULL ( data , xmlParam , style )"		1925266	0					
ANR	1925323	Callee	FIND_ZVAL_NULL		1925266	0					
ANR	1925324	Identifier	FIND_ZVAL_NULL		1925266	0					
ANR	1925325	ArgumentList	data		1925266	1					
ANR	1925326	Argument	data		1925266	0					
ANR	1925327	Identifier	data		1925266	0					
ANR	1925328	Argument	xmlParam		1925266	1					
ANR	1925329	Identifier	xmlParam		1925266	0					
ANR	1925330	Argument	style		1925266	2					
ANR	1925331	Identifier	style		1925266	0					
ANR	1925332	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1925266	9					
ANR	1925333	Condition	Z_TYPE_P ( data ) == IS_ARRAY	2685:5:84939:84964	1925266	0	True				
ANR	1925334	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1925266	0		==			
ANR	1925335	CallExpression	Z_TYPE_P ( data )		1925266	0					
ANR	1925336	Callee	Z_TYPE_P		1925266	0					
ANR	1925337	Identifier	Z_TYPE_P		1925266	0					
ANR	1925338	ArgumentList	data		1925266	1					
ANR	1925339	Argument	data		1925266	0					
ANR	1925340	Identifier	data		1925266	0					
ANR	1925341	Identifier	IS_ARRAY		1925266	1					
ANR	1925342	CompoundStatement		13:33:284:284	1925266	1					
ANR	1925343	Statement	ZEND_HASH_FOREACH_KEY_VAL_IND	2686:2:84971:84999	1925266	0	True				
ANR	1925344	Statement	(	2686:31:85000:85000	1925266	1	True				
ANR	1925345	Statement	Z_ARRVAL_P	2686:32:85001:85010	1925266	2	True				
ANR	1925346	Statement	(	2686:42:85011:85011	1925266	3	True				
ANR	1925347	Statement	data	2686:43:85012:85015	1925266	4	True				
ANR	1925348	Statement	)	2686:47:85016:85016	1925266	5	True				
ANR	1925349	Statement	","	2686:48:85017:85017	1925266	6	True				
ANR	1925350	Statement	int_val	2686:50:85019:85025	1925266	7	True				
ANR	1925351	Statement	","	2686:57:85026:85026	1925266	8	True				
ANR	1925352	Statement	key_val	2686:59:85028:85034	1925266	9	True				
ANR	1925353	Statement	","	2686:66:85035:85035	1925266	10	True				
ANR	1925354	Statement	temp_data	2686:68:85037:85045	1925266	11	True				
ANR	1925355	Statement	)	2686:77:85046:85046	1925266	12	True				
ANR	1925356	CompoundStatement		14:79:365:365	1925266	13					
ANR	1925357	ExpressionStatement	"item = xmlNewNode ( NULL , BAD_CAST ( ""item"" ) )"	2688:3:85054:85095	1925266	0	True				
ANR	1925358	AssignmentExpression	"item = xmlNewNode ( NULL , BAD_CAST ( ""item"" ) )"		1925266	0		=			
ANR	1925359	Identifier	item		1925266	0					
ANR	1925360	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""item"" ) )"		1925266	1					
ANR	1925361	Callee	xmlNewNode		1925266	0					
ANR	1925362	Identifier	xmlNewNode		1925266	0					
ANR	1925363	ArgumentList	NULL		1925266	1					
ANR	1925364	Argument	NULL		1925266	0					
ANR	1925365	Identifier	NULL		1925266	0					
ANR	1925366	Argument	"BAD_CAST ( ""item"" )"		1925266	1					
ANR	1925367	CallExpression	"BAD_CAST ( ""item"" )"		1925266	0					
ANR	1925368	Callee	BAD_CAST		1925266	0					
ANR	1925369	Identifier	BAD_CAST		1925266	0					
ANR	1925370	ArgumentList	"""item"""		1925266	1					
ANR	1925371	Argument	"""item"""		1925266	0					
ANR	1925372	PrimaryExpression	"""item"""		1925266	0					
ANR	1925373	ExpressionStatement	"xmlAddChild ( xmlParam , item )"	2689:3:85100:85127	1925266	1	True				
ANR	1925374	CallExpression	"xmlAddChild ( xmlParam , item )"		1925266	0					
ANR	1925375	Callee	xmlAddChild		1925266	0					
ANR	1925376	Identifier	xmlAddChild		1925266	0					
ANR	1925377	ArgumentList	xmlParam		1925266	1					
ANR	1925378	Argument	xmlParam		1925266	0					
ANR	1925379	Identifier	xmlParam		1925266	0					
ANR	1925380	Argument	item		1925266	1					
ANR	1925381	Identifier	item		1925266	0					
ANR	1925382	ExpressionStatement	"key = xmlNewNode ( NULL , BAD_CAST ( ""key"" ) )"	2690:3:85132:85171	1925266	2	True				
ANR	1925383	AssignmentExpression	"key = xmlNewNode ( NULL , BAD_CAST ( ""key"" ) )"		1925266	0		=			
ANR	1925384	Identifier	key		1925266	0					
ANR	1925385	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""key"" ) )"		1925266	1					
ANR	1925386	Callee	xmlNewNode		1925266	0					
ANR	1925387	Identifier	xmlNewNode		1925266	0					
ANR	1925388	ArgumentList	NULL		1925266	1					
ANR	1925389	Argument	NULL		1925266	0					
ANR	1925390	Identifier	NULL		1925266	0					
ANR	1925391	Argument	"BAD_CAST ( ""key"" )"		1925266	1					
ANR	1925392	CallExpression	"BAD_CAST ( ""key"" )"		1925266	0					
ANR	1925393	Callee	BAD_CAST		1925266	0					
ANR	1925394	Identifier	BAD_CAST		1925266	0					
ANR	1925395	ArgumentList	"""key"""		1925266	1					
ANR	1925396	Argument	"""key"""		1925266	0					
ANR	1925397	PrimaryExpression	"""key"""		1925266	0					
ANR	1925398	ExpressionStatement	"xmlAddChild ( item , key )"	2691:3:85176:85197	1925266	3	True				
ANR	1925399	CallExpression	"xmlAddChild ( item , key )"		1925266	0					
ANR	1925400	Callee	xmlAddChild		1925266	0					
ANR	1925401	Identifier	xmlAddChild		1925266	0					
ANR	1925402	ArgumentList	item		1925266	1					
ANR	1925403	Argument	item		1925266	0					
ANR	1925404	Identifier	item		1925266	0					
ANR	1925405	Argument	key		1925266	1					
ANR	1925406	Identifier	key		1925266	0					
ANR	1925407	IfStatement	if ( key_val )		1925266	4					
ANR	1925408	Condition	key_val	2692:7:85206:85212	1925266	0	True				
ANR	1925409	Identifier	key_val		1925266	0					
ANR	1925410	CompoundStatement		20:16:532:532	1925266	1					
ANR	1925411	IfStatement	if ( style == SOAP_ENCODED )		1925266	0					
ANR	1925412	Condition	style == SOAP_ENCODED	2693:8:85225:85245	1925266	0	True				
ANR	1925413	EqualityExpression	style == SOAP_ENCODED		1925266	0		==			
ANR	1925414	Identifier	style		1925266	0					
ANR	1925415	Identifier	SOAP_ENCODED		1925266	1					
ANR	1925416	CompoundStatement		21:31:565:565	1925266	1					
ANR	1925417	ExpressionStatement	"set_xsi_type ( key , ""xsd:string"" )"	2694:5:85255:85286	1925266	0	True				
ANR	1925418	CallExpression	"set_xsi_type ( key , ""xsd:string"" )"		1925266	0					
ANR	1925419	Callee	set_xsi_type		1925266	0					
ANR	1925420	Identifier	set_xsi_type		1925266	0					
ANR	1925421	ArgumentList	key		1925266	1					
ANR	1925422	Argument	key		1925266	0					
ANR	1925423	Identifier	key		1925266	0					
ANR	1925424	Argument	"""xsd:string"""		1925266	1					
ANR	1925425	PrimaryExpression	"""xsd:string"""		1925266	0					
ANR	1925426	ExpressionStatement	"xmlNodeSetContent ( key , BAD_CAST ( ZSTR_VAL ( key_val ) ) )"	2696:4:85298:85349	1925266	1	True				
ANR	1925427	CallExpression	"xmlNodeSetContent ( key , BAD_CAST ( ZSTR_VAL ( key_val ) ) )"		1925266	0					
ANR	1925428	Callee	xmlNodeSetContent		1925266	0					
ANR	1925429	Identifier	xmlNodeSetContent		1925266	0					
ANR	1925430	ArgumentList	key		1925266	1					
ANR	1925431	Argument	key		1925266	0					
ANR	1925432	Identifier	key		1925266	0					
ANR	1925433	Argument	BAD_CAST ( ZSTR_VAL ( key_val ) )		1925266	1					
ANR	1925434	CallExpression	BAD_CAST ( ZSTR_VAL ( key_val ) )		1925266	0					
ANR	1925435	Callee	BAD_CAST		1925266	0					
ANR	1925436	Identifier	BAD_CAST		1925266	0					
ANR	1925437	ArgumentList	ZSTR_VAL ( key_val )		1925266	1					
ANR	1925438	Argument	ZSTR_VAL ( key_val )		1925266	0					
ANR	1925439	CallExpression	ZSTR_VAL ( key_val )		1925266	0					
ANR	1925440	Callee	ZSTR_VAL		1925266	0					
ANR	1925441	Identifier	ZSTR_VAL		1925266	0					
ANR	1925442	ArgumentList	key_val		1925266	1					
ANR	1925443	Argument	key_val		1925266	0					
ANR	1925444	Identifier	key_val		1925266	0					
ANR	1925445	ElseStatement	else		1925266	0					
ANR	1925446	CompoundStatement		26:4:684:703	1925266	0					
ANR	1925447	IdentifierDeclStatement	smart_str tmp = { 0 } ;	2698:4:85367:85386	1925266	0	True				
ANR	1925448	IdentifierDecl	tmp = { 0 }		1925266	0					
ANR	1925449	IdentifierDeclType	smart_str		1925266	0					
ANR	1925450	Identifier	tmp		1925266	1					
ANR	1925451	AssignmentExpression	tmp = { 0 }		1925266	2		=			
ANR	1925452	Identifier	tmp		1925266	0					
ANR	1925453	InitializerList	0		1925266	1					
ANR	1925454	PrimaryExpression	0		1925266	0					
ANR	1925455	ExpressionStatement	"smart_str_append_long ( & tmp , int_val )"	2699:4:85392:85428	1925266	1	True				
ANR	1925456	CallExpression	"smart_str_append_long ( & tmp , int_val )"		1925266	0					
ANR	1925457	Callee	smart_str_append_long		1925266	0					
ANR	1925458	Identifier	smart_str_append_long		1925266	0					
ANR	1925459	ArgumentList	& tmp		1925266	1					
ANR	1925460	Argument	& tmp		1925266	0					
ANR	1925461	UnaryOperationExpression	& tmp		1925266	0					
ANR	1925462	UnaryOperator	&		1925266	0					
ANR	1925463	Identifier	tmp		1925266	1					
ANR	1925464	Argument	int_val		1925266	1					
ANR	1925465	Identifier	int_val		1925266	0					
ANR	1925466	ExpressionStatement	smart_str_0 ( & tmp )	2700:4:85434:85451	1925266	2	True				
ANR	1925467	CallExpression	smart_str_0 ( & tmp )		1925266	0					
ANR	1925468	Callee	smart_str_0		1925266	0					
ANR	1925469	Identifier	smart_str_0		1925266	0					
ANR	1925470	ArgumentList	& tmp		1925266	1					
ANR	1925471	Argument	& tmp		1925266	0					
ANR	1925472	UnaryOperationExpression	& tmp		1925266	0					
ANR	1925473	UnaryOperator	&		1925266	0					
ANR	1925474	Identifier	tmp		1925266	1					
ANR	1925475	IfStatement	if ( style == SOAP_ENCODED )		1925266	3					
ANR	1925476	Condition	style == SOAP_ENCODED	2702:8:85462:85482	1925266	0	True				
ANR	1925477	EqualityExpression	style == SOAP_ENCODED		1925266	0		==			
ANR	1925478	Identifier	style		1925266	0					
ANR	1925479	Identifier	SOAP_ENCODED		1925266	1					
ANR	1925480	CompoundStatement		30:31:802:802	1925266	1					
ANR	1925481	ExpressionStatement	"set_xsi_type ( key , ""xsd:int"" )"	2703:5:85492:85520	1925266	0	True				
ANR	1925482	CallExpression	"set_xsi_type ( key , ""xsd:int"" )"		1925266	0					
ANR	1925483	Callee	set_xsi_type		1925266	0					
ANR	1925484	Identifier	set_xsi_type		1925266	0					
ANR	1925485	ArgumentList	key		1925266	1					
ANR	1925486	Argument	key		1925266	0					
ANR	1925487	Identifier	key		1925266	0					
ANR	1925488	Argument	"""xsd:int"""		1925266	1					
ANR	1925489	PrimaryExpression	"""xsd:int"""		1925266	0					
ANR	1925490	ExpressionStatement	"xmlNodeSetContentLen ( key , BAD_CAST ( ZSTR_VAL ( tmp . s ) ) , ZSTR_LEN ( tmp . s ) )"	2705:4:85532:85601	1925266	4	True				
ANR	1925491	CallExpression	"xmlNodeSetContentLen ( key , BAD_CAST ( ZSTR_VAL ( tmp . s ) ) , ZSTR_LEN ( tmp . s ) )"		1925266	0					
ANR	1925492	Callee	xmlNodeSetContentLen		1925266	0					
ANR	1925493	Identifier	xmlNodeSetContentLen		1925266	0					
ANR	1925494	ArgumentList	key		1925266	1					
ANR	1925495	Argument	key		1925266	0					
ANR	1925496	Identifier	key		1925266	0					
ANR	1925497	Argument	BAD_CAST ( ZSTR_VAL ( tmp . s ) )		1925266	1					
ANR	1925498	CallExpression	BAD_CAST ( ZSTR_VAL ( tmp . s ) )		1925266	0					
ANR	1925499	Callee	BAD_CAST		1925266	0					
ANR	1925500	Identifier	BAD_CAST		1925266	0					
ANR	1925501	ArgumentList	ZSTR_VAL ( tmp . s )		1925266	1					
ANR	1925502	Argument	ZSTR_VAL ( tmp . s )		1925266	0					
ANR	1925503	CallExpression	ZSTR_VAL ( tmp . s )		1925266	0					
ANR	1925504	Callee	ZSTR_VAL		1925266	0					
ANR	1925505	Identifier	ZSTR_VAL		1925266	0					
ANR	1925506	ArgumentList	tmp . s		1925266	1					
ANR	1925507	Argument	tmp . s		1925266	0					
ANR	1925508	MemberAccess	tmp . s		1925266	0					
ANR	1925509	Identifier	tmp		1925266	0					
ANR	1925510	Identifier	s		1925266	1					
ANR	1925511	Argument	ZSTR_LEN ( tmp . s )		1925266	2					
ANR	1925512	CallExpression	ZSTR_LEN ( tmp . s )		1925266	0					
ANR	1925513	Callee	ZSTR_LEN		1925266	0					
ANR	1925514	Identifier	ZSTR_LEN		1925266	0					
ANR	1925515	ArgumentList	tmp . s		1925266	1					
ANR	1925516	Argument	tmp . s		1925266	0					
ANR	1925517	MemberAccess	tmp . s		1925266	0					
ANR	1925518	Identifier	tmp		1925266	0					
ANR	1925519	Identifier	s		1925266	1					
ANR	1925520	ExpressionStatement	smart_str_free ( & tmp )	2707:4:85608:85628	1925266	5	True				
ANR	1925521	CallExpression	smart_str_free ( & tmp )		1925266	0					
ANR	1925522	Callee	smart_str_free		1925266	0					
ANR	1925523	Identifier	smart_str_free		1925266	0					
ANR	1925524	ArgumentList	& tmp		1925266	1					
ANR	1925525	Argument	& tmp		1925266	0					
ANR	1925526	UnaryOperationExpression	& tmp		1925266	0					
ANR	1925527	UnaryOperator	&		1925266	0					
ANR	1925528	Identifier	tmp		1925266	1					
ANR	1925529	ExpressionStatement	"xparam = master_to_xml ( get_conversion ( Z_TYPE_P ( temp_data ) ) , temp_data , style , item )"	2710:3:85639:85722	1925266	5	True				
ANR	1925530	AssignmentExpression	"xparam = master_to_xml ( get_conversion ( Z_TYPE_P ( temp_data ) ) , temp_data , style , item )"		1925266	0		=			
ANR	1925531	Identifier	xparam		1925266	0					
ANR	1925532	CallExpression	"master_to_xml ( get_conversion ( Z_TYPE_P ( temp_data ) ) , temp_data , style , item )"		1925266	1					
ANR	1925533	Callee	master_to_xml		1925266	0					
ANR	1925534	Identifier	master_to_xml		1925266	0					
ANR	1925535	ArgumentList	get_conversion ( Z_TYPE_P ( temp_data ) )		1925266	1					
ANR	1925536	Argument	get_conversion ( Z_TYPE_P ( temp_data ) )		1925266	0					
ANR	1925537	CallExpression	get_conversion ( Z_TYPE_P ( temp_data ) )		1925266	0					
ANR	1925538	Callee	get_conversion		1925266	0					
ANR	1925539	Identifier	get_conversion		1925266	0					
ANR	1925540	ArgumentList	Z_TYPE_P ( temp_data )		1925266	1					
ANR	1925541	Argument	Z_TYPE_P ( temp_data )		1925266	0					
ANR	1925542	CallExpression	Z_TYPE_P ( temp_data )		1925266	0					
ANR	1925543	Callee	Z_TYPE_P		1925266	0					
ANR	1925544	Identifier	Z_TYPE_P		1925266	0					
ANR	1925545	ArgumentList	temp_data		1925266	1					
ANR	1925546	Argument	temp_data		1925266	0					
ANR	1925547	Identifier	temp_data		1925266	0					
ANR	1925548	Argument	temp_data		1925266	1					
ANR	1925549	Identifier	temp_data		1925266	0					
ANR	1925550	Argument	style		1925266	2					
ANR	1925551	Identifier	style		1925266	0					
ANR	1925552	Argument	item		1925266	3					
ANR	1925553	Identifier	item		1925266	0					
ANR	1925554	ExpressionStatement	"xmlNodeSetName ( xparam , BAD_CAST ( ""value"" ) )"	2711:3:85727:85768	1925266	6	True				
ANR	1925555	CallExpression	"xmlNodeSetName ( xparam , BAD_CAST ( ""value"" ) )"		1925266	0					
ANR	1925556	Callee	xmlNodeSetName		1925266	0					
ANR	1925557	Identifier	xmlNodeSetName		1925266	0					
ANR	1925558	ArgumentList	xparam		1925266	1					
ANR	1925559	Argument	xparam		1925266	0					
ANR	1925560	Identifier	xparam		1925266	0					
ANR	1925561	Argument	"BAD_CAST ( ""value"" )"		1925266	1					
ANR	1925562	CallExpression	"BAD_CAST ( ""value"" )"		1925266	0					
ANR	1925563	Callee	BAD_CAST		1925266	0					
ANR	1925564	Identifier	BAD_CAST		1925266	0					
ANR	1925565	ArgumentList	"""value"""		1925266	1					
ANR	1925566	Argument	"""value"""		1925266	0					
ANR	1925567	PrimaryExpression	"""value"""		1925266	0					
ANR	1925568	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2712:4:85774:85797	1925266	14	True				
ANR	1925569	CallExpression	ZEND_HASH_FOREACH_END ( )		1925266	0					
ANR	1925570	Callee	ZEND_HASH_FOREACH_END		1925266	0					
ANR	1925571	Identifier	ZEND_HASH_FOREACH_END		1925266	0					
ANR	1925572	ArgumentList			1925266	1					
ANR	1925573	IfStatement	if ( style == SOAP_ENCODED )		1925266	10					
ANR	1925574	Condition	style == SOAP_ENCODED	2714:5:85807:85827	1925266	0	True				
ANR	1925575	EqualityExpression	style == SOAP_ENCODED		1925266	0		==			
ANR	1925576	Identifier	style		1925266	0					
ANR	1925577	Identifier	SOAP_ENCODED		1925266	1					
ANR	1925578	CompoundStatement		42:28:1147:1147	1925266	1					
ANR	1925579	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2715:2:85834:85865	1925266	0	True				
ANR	1925580	CallExpression	"set_ns_and_type ( xmlParam , type )"		1925266	0					
ANR	1925581	Callee	set_ns_and_type		1925266	0					
ANR	1925582	Identifier	set_ns_and_type		1925266	0					
ANR	1925583	ArgumentList	xmlParam		1925266	1					
ANR	1925584	Argument	xmlParam		1925266	0					
ANR	1925585	Identifier	xmlParam		1925266	0					
ANR	1925586	Argument	type		1925266	1					
ANR	1925587	Identifier	type		1925266	0					
ANR	1925588	ReturnStatement	return xmlParam ;	2718:1:85872:85887	1925266	11	True				
ANR	1925589	Identifier	xmlParam		1925266	0					
ANR	1925590	ReturnType	static xmlNodePtr		1925266	1					
ANR	1925591	Identifier	to_xml_map		1925266	2					
ANR	1925592	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1925266	3					
ANR	1925593	Parameter	encodeTypePtr type	2672:29:84620:84637	1925266	0	True				
ANR	1925594	ParameterType	encodeTypePtr		1925266	0					
ANR	1925595	Identifier	type		1925266	1					
ANR	1925596	Parameter	zval * data	2672:49:84640:84649	1925266	1	True				
ANR	1925597	ParameterType	zval *		1925266	0					
ANR	1925598	Identifier	data		1925266	1					
ANR	1925599	Parameter	int style	2672:61:84652:84660	1925266	2	True				
ANR	1925600	ParameterType	int		1925266	0					
ANR	1925601	Identifier	style		1925266	1					
ANR	1925602	Parameter	xmlNodePtr parent	2672:72:84663:84679	1925266	3	True				
ANR	1925603	ParameterType	xmlNodePtr		1925266	0					
ANR	1925604	Identifier	parent		1925266	1					
ANR	1925605	CFGEntryNode	ENTRY		1925266		True				
ANR	1925606	CFGExitNode	EXIT		1925266		True				
ANR	1925607	Symbol	parent		1925266						
ANR	1925608	Symbol	xmlParam		1925266						
ANR	1925609	Symbol	item		1925266						
ANR	1925610	Symbol	int_val		1925266						
ANR	1925611	Symbol	NULL		1925266						
ANR	1925612	Symbol	data		1925266						
ANR	1925613	Symbol	xparam		1925266						
ANR	1925614	Symbol	key_val		1925266						
ANR	1925615	Symbol	xmlNewNode		1925266						
ANR	1925616	Symbol	get_conversion		1925266						
ANR	1925617	Symbol	type		1925266						
ANR	1925618	Symbol	Z_TYPE_P		1925266						
ANR	1925619	Symbol	ZSTR_VAL		1925266						
ANR	1925620	Symbol	tmp . s		1925266						
ANR	1925621	Symbol	IS_ARRAY		1925266						
ANR	1925622	Symbol	tmp		1925266						
ANR	1925623	Symbol	ZSTR_LEN		1925266						
ANR	1925624	Symbol	style		1925266						
ANR	1925625	Symbol	SOAP_ENCODED		1925266						
ANR	1925626	Symbol	& tmp		1925266						
ANR	1925627	Symbol	temp_data		1925266						
ANR	1925628	Symbol	key		1925266						
ANR	1925629	Symbol	master_to_xml		1925266						
ANR	1925630	Symbol	BAD_CAST		1925266						
ANR	1925631	Function	to_zval_map	2721:0:85892:87052							
ANR	1925632	FunctionDef	"to_zval_map (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1925631	0					
ANR	1925633	CompoundStatement		2722:0:85965:87052	1925631	0					
ANR	1925634	IdentifierDeclStatement	"zval key , value ;"	2723:1:85968:85983	1925631	0	True				
ANR	1925635	IdentifierDecl	key		1925631	0					
ANR	1925636	IdentifierDeclType	zval		1925631	0					
ANR	1925637	Identifier	key		1925631	1					
ANR	1925638	IdentifierDecl	value		1925631	1					
ANR	1925639	IdentifierDeclType	zval		1925631	0					
ANR	1925640	Identifier	value		1925631	1					
ANR	1925641	IdentifierDeclStatement	"xmlNodePtr trav , item , xmlKey , xmlValue ;"	2724:1:85986:86025	1925631	1	True				
ANR	1925642	IdentifierDecl	trav		1925631	0					
ANR	1925643	IdentifierDeclType	xmlNodePtr		1925631	0					
ANR	1925644	Identifier	trav		1925631	1					
ANR	1925645	IdentifierDecl	item		1925631	1					
ANR	1925646	IdentifierDeclType	xmlNodePtr		1925631	0					
ANR	1925647	Identifier	item		1925631	1					
ANR	1925648	IdentifierDecl	xmlKey		1925631	2					
ANR	1925649	IdentifierDeclType	xmlNodePtr		1925631	0					
ANR	1925650	Identifier	xmlKey		1925631	1					
ANR	1925651	IdentifierDecl	xmlValue		1925631	3					
ANR	1925652	IdentifierDeclType	xmlNodePtr		1925631	0					
ANR	1925653	Identifier	xmlValue		1925631	1					
ANR	1925654	ExpressionStatement	ZVAL_NULL ( ret )	2726:1:86029:86043	1925631	2	True				
ANR	1925655	CallExpression	ZVAL_NULL ( ret )		1925631	0					
ANR	1925656	Callee	ZVAL_NULL		1925631	0					
ANR	1925657	Identifier	ZVAL_NULL		1925631	0					
ANR	1925658	ArgumentList	ret		1925631	1					
ANR	1925659	Argument	ret		1925631	0					
ANR	1925660	Identifier	ret		1925631	0					
ANR	1925661	ExpressionStatement	"FIND_XML_NULL ( data , ret )"	2727:1:86046:86070	1925631	3	True				
ANR	1925662	CallExpression	"FIND_XML_NULL ( data , ret )"		1925631	0					
ANR	1925663	Callee	FIND_XML_NULL		1925631	0					
ANR	1925664	Identifier	FIND_XML_NULL		1925631	0					
ANR	1925665	ArgumentList	data		1925631	1					
ANR	1925666	Argument	data		1925631	0					
ANR	1925667	Identifier	data		1925631	0					
ANR	1925668	Argument	ret		1925631	1					
ANR	1925669	Identifier	ret		1925631	0					
ANR	1925670	IfStatement	if ( data && data -> children )		1925631	4					
ANR	1925671	Condition	data && data -> children	2729:5:86078:86099	1925631	0	True				
ANR	1925672	AndExpression	data && data -> children		1925631	0		&&			
ANR	1925673	Identifier	data		1925631	0					
ANR	1925674	PtrMemberAccess	data -> children		1925631	1					
ANR	1925675	Identifier	data		1925631	0					
ANR	1925676	Identifier	children		1925631	1					
ANR	1925677	CompoundStatement		8:29:136:136	1925631	1					
ANR	1925678	ExpressionStatement	array_init ( ret )	2730:2:86106:86121	1925631	0	True				
ANR	1925679	CallExpression	array_init ( ret )		1925631	0					
ANR	1925680	Callee	array_init		1925631	0					
ANR	1925681	Identifier	array_init		1925631	0					
ANR	1925682	ArgumentList	ret		1925631	1					
ANR	1925683	Argument	ret		1925631	0					
ANR	1925684	Identifier	ret		1925631	0					
ANR	1925685	ExpressionStatement	trav = data -> children	2731:2:86125:86146	1925631	1	True				
ANR	1925686	AssignmentExpression	trav = data -> children		1925631	0		=			
ANR	1925687	Identifier	trav		1925631	0					
ANR	1925688	PtrMemberAccess	data -> children		1925631	1					
ANR	1925689	Identifier	data		1925631	0					
ANR	1925690	Identifier	children		1925631	1					
ANR	1925691	ExpressionStatement	trav = data -> children	2733:2:86151:86172	1925631	2	True				
ANR	1925692	AssignmentExpression	trav = data -> children		1925631	0		=			
ANR	1925693	Identifier	trav		1925631	0					
ANR	1925694	PtrMemberAccess	data -> children		1925631	1					
ANR	1925695	Identifier	data		1925631	0					
ANR	1925696	Identifier	children		1925631	1					
ANR	1925697	Statement	FOREACHNODE	2734:2:86176:86186	1925631	3	True				
ANR	1925698	Statement	(	2734:13:86187:86187	1925631	4	True				
ANR	1925699	Statement	trav	2734:14:86188:86191	1925631	5	True				
ANR	1925700	Statement	","	2734:18:86192:86192	1925631	6	True				
ANR	1925701	Statement	"""item"""	2734:20:86194:86199	1925631	7	True				
ANR	1925702	Statement	","	2734:26:86200:86200	1925631	8	True				
ANR	1925703	Statement	item	2734:28:86202:86205	1925631	9	True				
ANR	1925704	Statement	)	2734:32:86206:86206	1925631	10	True				
ANR	1925705	CompoundStatement		13:34:242:242	1925631	11					
ANR	1925706	ExpressionStatement	"xmlKey = get_node ( item -> children , ""key"" )"	2735:3:86213:86253	1925631	0	True				
ANR	1925707	AssignmentExpression	"xmlKey = get_node ( item -> children , ""key"" )"		1925631	0		=			
ANR	1925708	Identifier	xmlKey		1925631	0					
ANR	1925709	CallExpression	"get_node ( item -> children , ""key"" )"		1925631	1					
ANR	1925710	Callee	get_node		1925631	0					
ANR	1925711	Identifier	get_node		1925631	0					
ANR	1925712	ArgumentList	item -> children		1925631	1					
ANR	1925713	Argument	item -> children		1925631	0					
ANR	1925714	PtrMemberAccess	item -> children		1925631	0					
ANR	1925715	Identifier	item		1925631	0					
ANR	1925716	Identifier	children		1925631	1					
ANR	1925717	Argument	"""key"""		1925631	1					
ANR	1925718	PrimaryExpression	"""key"""		1925631	0					
ANR	1925719	IfStatement	if ( ! xmlKey )		1925631	1					
ANR	1925720	Condition	! xmlKey	2736:7:86262:86268	1925631	0	True				
ANR	1925721	UnaryOperationExpression	! xmlKey		1925631	0					
ANR	1925722	UnaryOperator	!		1925631	0					
ANR	1925723	Identifier	xmlKey		1925631	1					
ANR	1925724	CompoundStatement		15:16:305:305	1925631	1					
ANR	1925725	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing key"" )"	2737:4:86277:86348	1925631	0	True				
ANR	1925726	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing key"" )"		1925631	0					
ANR	1925727	Callee	soap_error0		1925631	0					
ANR	1925728	Identifier	soap_error0		1925631	0					
ANR	1925729	ArgumentList	E_ERROR		1925631	1					
ANR	1925730	Argument	E_ERROR		1925631	0					
ANR	1925731	Identifier	E_ERROR		1925631	0					
ANR	1925732	Argument	"""Encoding: Can't decode apache map, missing key"""		1925631	1					
ANR	1925733	PrimaryExpression	"""Encoding: Can't decode apache map, missing key"""		1925631	0					
ANR	1925734	ExpressionStatement	"xmlValue = get_node ( item -> children , ""value"" )"	2740:3:86359:86403	1925631	2	True				
ANR	1925735	AssignmentExpression	"xmlValue = get_node ( item -> children , ""value"" )"		1925631	0		=			
ANR	1925736	Identifier	xmlValue		1925631	0					
ANR	1925737	CallExpression	"get_node ( item -> children , ""value"" )"		1925631	1					
ANR	1925738	Callee	get_node		1925631	0					
ANR	1925739	Identifier	get_node		1925631	0					
ANR	1925740	ArgumentList	item -> children		1925631	1					
ANR	1925741	Argument	item -> children		1925631	0					
ANR	1925742	PtrMemberAccess	item -> children		1925631	0					
ANR	1925743	Identifier	item		1925631	0					
ANR	1925744	Identifier	children		1925631	1					
ANR	1925745	Argument	"""value"""		1925631	1					
ANR	1925746	PrimaryExpression	"""value"""		1925631	0					
ANR	1925747	IfStatement	if ( ! xmlKey )		1925631	3					
ANR	1925748	Condition	! xmlKey	2741:7:86412:86418	1925631	0	True				
ANR	1925749	UnaryOperationExpression	! xmlKey		1925631	0					
ANR	1925750	UnaryOperator	!		1925631	0					
ANR	1925751	Identifier	xmlKey		1925631	1					
ANR	1925752	CompoundStatement		20:16:455:455	1925631	1					
ANR	1925753	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing value"" )"	2742:4:86427:86500	1925631	0	True				
ANR	1925754	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, missing value"" )"		1925631	0					
ANR	1925755	Callee	soap_error0		1925631	0					
ANR	1925756	Identifier	soap_error0		1925631	0					
ANR	1925757	ArgumentList	E_ERROR		1925631	1					
ANR	1925758	Argument	E_ERROR		1925631	0					
ANR	1925759	Identifier	E_ERROR		1925631	0					
ANR	1925760	Argument	"""Encoding: Can't decode apache map, missing value"""		1925631	1					
ANR	1925761	PrimaryExpression	"""Encoding: Can't decode apache map, missing value"""		1925631	0					
ANR	1925762	ExpressionStatement	ZVAL_NULL ( & key )	2745:3:86511:86526	1925631	4	True				
ANR	1925763	CallExpression	ZVAL_NULL ( & key )		1925631	0					
ANR	1925764	Callee	ZVAL_NULL		1925631	0					
ANR	1925765	Identifier	ZVAL_NULL		1925631	0					
ANR	1925766	ArgumentList	& key		1925631	1					
ANR	1925767	Argument	& key		1925631	0					
ANR	1925768	UnaryOperationExpression	& key		1925631	0					
ANR	1925769	UnaryOperator	&		1925631	0					
ANR	1925770	Identifier	key		1925631	1					
ANR	1925771	ExpressionStatement	"master_to_zval ( & key , NULL , xmlKey )"	2746:3:86531:86565	1925631	5	True				
ANR	1925772	CallExpression	"master_to_zval ( & key , NULL , xmlKey )"		1925631	0					
ANR	1925773	Callee	master_to_zval		1925631	0					
ANR	1925774	Identifier	master_to_zval		1925631	0					
ANR	1925775	ArgumentList	& key		1925631	1					
ANR	1925776	Argument	& key		1925631	0					
ANR	1925777	UnaryOperationExpression	& key		1925631	0					
ANR	1925778	UnaryOperator	&		1925631	0					
ANR	1925779	Identifier	key		1925631	1					
ANR	1925780	Argument	NULL		1925631	1					
ANR	1925781	Identifier	NULL		1925631	0					
ANR	1925782	Argument	xmlKey		1925631	2					
ANR	1925783	Identifier	xmlKey		1925631	0					
ANR	1925784	ExpressionStatement	ZVAL_NULL ( & value )	2747:3:86570:86587	1925631	6	True				
ANR	1925785	CallExpression	ZVAL_NULL ( & value )		1925631	0					
ANR	1925786	Callee	ZVAL_NULL		1925631	0					
ANR	1925787	Identifier	ZVAL_NULL		1925631	0					
ANR	1925788	ArgumentList	& value		1925631	1					
ANR	1925789	Argument	& value		1925631	0					
ANR	1925790	UnaryOperationExpression	& value		1925631	0					
ANR	1925791	UnaryOperator	&		1925631	0					
ANR	1925792	Identifier	value		1925631	1					
ANR	1925793	ExpressionStatement	"master_to_zval ( & value , NULL , xmlValue )"	2748:3:86592:86630	1925631	7	True				
ANR	1925794	CallExpression	"master_to_zval ( & value , NULL , xmlValue )"		1925631	0					
ANR	1925795	Callee	master_to_zval		1925631	0					
ANR	1925796	Identifier	master_to_zval		1925631	0					
ANR	1925797	ArgumentList	& value		1925631	1					
ANR	1925798	Argument	& value		1925631	0					
ANR	1925799	UnaryOperationExpression	& value		1925631	0					
ANR	1925800	UnaryOperator	&		1925631	0					
ANR	1925801	Identifier	value		1925631	1					
ANR	1925802	Argument	NULL		1925631	1					
ANR	1925803	Identifier	NULL		1925631	0					
ANR	1925804	Argument	xmlValue		1925631	2					
ANR	1925805	Identifier	xmlValue		1925631	0					
ANR	1925806	IfStatement	if ( Z_TYPE ( key ) == IS_STRING )		1925631	8					
ANR	1925807	Condition	Z_TYPE ( key ) == IS_STRING	2750:7:86640:86663	1925631	0	True				
ANR	1925808	EqualityExpression	Z_TYPE ( key ) == IS_STRING		1925631	0		==			
ANR	1925809	CallExpression	Z_TYPE ( key )		1925631	0					
ANR	1925810	Callee	Z_TYPE		1925631	0					
ANR	1925811	Identifier	Z_TYPE		1925631	0					
ANR	1925812	ArgumentList	key		1925631	1					
ANR	1925813	Argument	key		1925631	0					
ANR	1925814	Identifier	key		1925631	0					
ANR	1925815	Identifier	IS_STRING		1925631	1					
ANR	1925816	CompoundStatement		29:33:700:700	1925631	1					
ANR	1925817	ExpressionStatement	"zend_symtable_update ( Z_ARRVAL_P ( ret ) , Z_STR ( key ) , & value )"	2751:4:86672:86729	1925631	0	True				
ANR	1925818	CallExpression	"zend_symtable_update ( Z_ARRVAL_P ( ret ) , Z_STR ( key ) , & value )"		1925631	0					
ANR	1925819	Callee	zend_symtable_update		1925631	0					
ANR	1925820	Identifier	zend_symtable_update		1925631	0					
ANR	1925821	ArgumentList	Z_ARRVAL_P ( ret )		1925631	1					
ANR	1925822	Argument	Z_ARRVAL_P ( ret )		1925631	0					
ANR	1925823	CallExpression	Z_ARRVAL_P ( ret )		1925631	0					
ANR	1925824	Callee	Z_ARRVAL_P		1925631	0					
ANR	1925825	Identifier	Z_ARRVAL_P		1925631	0					
ANR	1925826	ArgumentList	ret		1925631	1					
ANR	1925827	Argument	ret		1925631	0					
ANR	1925828	Identifier	ret		1925631	0					
ANR	1925829	Argument	Z_STR ( key )		1925631	1					
ANR	1925830	CallExpression	Z_STR ( key )		1925631	0					
ANR	1925831	Callee	Z_STR		1925631	0					
ANR	1925832	Identifier	Z_STR		1925631	0					
ANR	1925833	ArgumentList	key		1925631	1					
ANR	1925834	Argument	key		1925631	0					
ANR	1925835	Identifier	key		1925631	0					
ANR	1925836	Argument	& value		1925631	2					
ANR	1925837	UnaryOperationExpression	& value		1925631	0					
ANR	1925838	UnaryOperator	&		1925631	0					
ANR	1925839	Identifier	value		1925631	1					
ANR	1925840	ElseStatement	else		1925631	0					
ANR	1925841	IfStatement	if ( Z_TYPE ( key ) == IS_LONG )		1925631	0					
ANR	1925842	Condition	Z_TYPE ( key ) == IS_LONG	2752:14:86745:86766	1925631	0	True				
ANR	1925843	EqualityExpression	Z_TYPE ( key ) == IS_LONG		1925631	0		==			
ANR	1925844	CallExpression	Z_TYPE ( key )		1925631	0					
ANR	1925845	Callee	Z_TYPE		1925631	0					
ANR	1925846	Identifier	Z_TYPE		1925631	0					
ANR	1925847	ArgumentList	key		1925631	1					
ANR	1925848	Argument	key		1925631	0					
ANR	1925849	Identifier	key		1925631	0					
ANR	1925850	Identifier	IS_LONG		1925631	1					
ANR	1925851	CompoundStatement		31:38:803:803	1925631	1					
ANR	1925852	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( ret ) , Z_LVAL ( key ) , & value )"	2753:4:86775:86835	1925631	0	True				
ANR	1925853	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( ret ) , Z_LVAL ( key ) , & value )"		1925631	0					
ANR	1925854	Callee	zend_hash_index_update		1925631	0					
ANR	1925855	Identifier	zend_hash_index_update		1925631	0					
ANR	1925856	ArgumentList	Z_ARRVAL_P ( ret )		1925631	1					
ANR	1925857	Argument	Z_ARRVAL_P ( ret )		1925631	0					
ANR	1925858	CallExpression	Z_ARRVAL_P ( ret )		1925631	0					
ANR	1925859	Callee	Z_ARRVAL_P		1925631	0					
ANR	1925860	Identifier	Z_ARRVAL_P		1925631	0					
ANR	1925861	ArgumentList	ret		1925631	1					
ANR	1925862	Argument	ret		1925631	0					
ANR	1925863	Identifier	ret		1925631	0					
ANR	1925864	Argument	Z_LVAL ( key )		1925631	1					
ANR	1925865	CallExpression	Z_LVAL ( key )		1925631	0					
ANR	1925866	Callee	Z_LVAL		1925631	0					
ANR	1925867	Identifier	Z_LVAL		1925631	0					
ANR	1925868	ArgumentList	key		1925631	1					
ANR	1925869	Argument	key		1925631	0					
ANR	1925870	Identifier	key		1925631	0					
ANR	1925871	Argument	& value		1925631	2					
ANR	1925872	UnaryOperationExpression	& value		1925631	0					
ANR	1925873	UnaryOperator	&		1925631	0					
ANR	1925874	Identifier	value		1925631	1					
ANR	1925875	ElseStatement	else		1925631	0					
ANR	1925876	CompoundStatement		33:10:881:881	1925631	0					
ANR	1925877	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"" )"	2755:4:86853:86953	1925631	0	True				
ANR	1925878	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"" )"		1925631	0					
ANR	1925879	Callee	soap_error0		1925631	0					
ANR	1925880	Identifier	soap_error0		1925631	0					
ANR	1925881	ArgumentList	E_ERROR		1925631	1					
ANR	1925882	Argument	E_ERROR		1925631	0					
ANR	1925883	Identifier	E_ERROR		1925631	0					
ANR	1925884	Argument	"""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"""		1925631	1					
ANR	1925885	PrimaryExpression	"""Encoding: Can't decode apache map, only Strings or Longs are allowd as keys"""		1925631	0					
ANR	1925886	ExpressionStatement	zval_ptr_dtor ( & key )	2757:3:86963:86982	1925631	9	True				
ANR	1925887	CallExpression	zval_ptr_dtor ( & key )		1925631	0					
ANR	1925888	Callee	zval_ptr_dtor		1925631	0					
ANR	1925889	Identifier	zval_ptr_dtor		1925631	0					
ANR	1925890	ArgumentList	& key		1925631	1					
ANR	1925891	Argument	& key		1925631	0					
ANR	1925892	UnaryOperationExpression	& key		1925631	0					
ANR	1925893	UnaryOperator	&		1925631	0					
ANR	1925894	Identifier	key		1925631	1					
ANR	1925895	ExpressionStatement	ENDFOREACH ( trav )	2759:2:86990:87006	1925631	12	True				
ANR	1925896	CallExpression	ENDFOREACH ( trav )		1925631	0					
ANR	1925897	Callee	ENDFOREACH		1925631	0					
ANR	1925898	Identifier	ENDFOREACH		1925631	0					
ANR	1925899	ArgumentList	trav		1925631	1					
ANR	1925900	Argument	trav		1925631	0					
ANR	1925901	Identifier	trav		1925631	0					
ANR	1925902	ElseStatement	else		1925631	0					
ANR	1925903	CompoundStatement		39:8:1050:1050	1925631	0					
ANR	1925904	ExpressionStatement	ZVAL_NULL ( ret )	2761:2:87020:87034	1925631	0	True				
ANR	1925905	CallExpression	ZVAL_NULL ( ret )		1925631	0					
ANR	1925906	Callee	ZVAL_NULL		1925631	0					
ANR	1925907	Identifier	ZVAL_NULL		1925631	0					
ANR	1925908	ArgumentList	ret		1925631	1					
ANR	1925909	Argument	ret		1925631	0					
ANR	1925910	Identifier	ret		1925631	0					
ANR	1925911	ReturnStatement	return ret ;	2763:1:87040:87050	1925631	5	True				
ANR	1925912	Identifier	ret		1925631	0					
ANR	1925913	ReturnType	static zval *		1925631	1					
ANR	1925914	Identifier	to_zval_map		1925631	2					
ANR	1925915	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1925631	3					
ANR	1925916	Parameter	zval * ret	2721:25:85917:85925	1925631	0	True				
ANR	1925917	ParameterType	zval *		1925631	0					
ANR	1925918	Identifier	ret		1925631	1					
ANR	1925919	Parameter	encodeTypePtr type	2721:36:85928:85945	1925631	1	True				
ANR	1925920	ParameterType	encodeTypePtr		1925631	0					
ANR	1925921	Identifier	type		1925631	1					
ANR	1925922	Parameter	xmlNodePtr data	2721:56:85948:85962	1925631	2	True				
ANR	1925923	ParameterType	xmlNodePtr		1925631	0					
ANR	1925924	Identifier	data		1925631	1					
ANR	1925925	CFGEntryNode	ENTRY		1925631		True				
ANR	1925926	CFGExitNode	EXIT		1925631		True				
ANR	1925927	Symbol	ret		1925631						
ANR	1925928	Symbol	item		1925631						
ANR	1925929	Symbol	& key		1925631						
ANR	1925930	Symbol	NULL		1925631						
ANR	1925931	Symbol	& value		1925631						
ANR	1925932	Symbol	data		1925631						
ANR	1925933	Symbol	trav		1925631						
ANR	1925934	Symbol	get_node		1925631						
ANR	1925935	Symbol	Z_LVAL		1925631						
ANR	1925936	Symbol	Z_TYPE		1925631						
ANR	1925937	Symbol	type		1925631						
ANR	1925938	Symbol	Z_STR		1925631						
ANR	1925939	Symbol	xmlValue		1925631						
ANR	1925940	Symbol	E_ERROR		1925631						
ANR	1925941	Symbol	data -> children		1925631						
ANR	1925942	Symbol	item -> children		1925631						
ANR	1925943	Symbol	* item		1925631						
ANR	1925944	Symbol	IS_LONG		1925631						
ANR	1925945	Symbol	IS_STRING		1925631						
ANR	1925946	Symbol	Z_ARRVAL_P		1925631						
ANR	1925947	Symbol	value		1925631						
ANR	1925948	Symbol	* data		1925631						
ANR	1925949	Symbol	key		1925631						
ANR	1925950	Symbol	xmlKey		1925631						
ANR	1925951	Function	guess_xml_convert	2767:0:87083:87483							
ANR	1925952	FunctionDef	"guess_xml_convert (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1925951	0					
ANR	1925953	CompoundStatement		2768:0:87181:87483	1925951	0					
ANR	1925954	IdentifierDeclStatement	encodePtr enc ;	2769:1:87184:87198	1925951	0	True				
ANR	1925955	IdentifierDecl	enc		1925951	0					
ANR	1925956	IdentifierDeclType	encodePtr		1925951	0					
ANR	1925957	Identifier	enc		1925951	1					
ANR	1925958	IdentifierDeclStatement	xmlNodePtr ret ;	2770:1:87201:87215	1925951	1	True				
ANR	1925959	IdentifierDecl	ret		1925951	0					
ANR	1925960	IdentifierDeclType	xmlNodePtr		1925951	0					
ANR	1925961	Identifier	ret		1925951	1					
ANR	1925962	IfStatement	if ( data )		1925951	2					
ANR	1925963	Condition	data	2772:5:87223:87226	1925951	0	True				
ANR	1925964	Identifier	data		1925951	0					
ANR	1925965	CompoundStatement		5:11:47:47	1925951	1					
ANR	1925966	ExpressionStatement	enc = get_conversion ( Z_TYPE_P ( data ) )	2773:2:87233:87269	1925951	0	True				
ANR	1925967	AssignmentExpression	enc = get_conversion ( Z_TYPE_P ( data ) )		1925951	0		=			
ANR	1925968	Identifier	enc		1925951	0					
ANR	1925969	CallExpression	get_conversion ( Z_TYPE_P ( data ) )		1925951	1					
ANR	1925970	Callee	get_conversion		1925951	0					
ANR	1925971	Identifier	get_conversion		1925951	0					
ANR	1925972	ArgumentList	Z_TYPE_P ( data )		1925951	1					
ANR	1925973	Argument	Z_TYPE_P ( data )		1925951	0					
ANR	1925974	CallExpression	Z_TYPE_P ( data )		1925951	0					
ANR	1925975	Callee	Z_TYPE_P		1925951	0					
ANR	1925976	Identifier	Z_TYPE_P		1925951	0					
ANR	1925977	ArgumentList	data		1925951	1					
ANR	1925978	Argument	data		1925951	0					
ANR	1925979	Identifier	data		1925951	0					
ANR	1925980	ElseStatement	else		1925951	0					
ANR	1925981	CompoundStatement		7:8:97:97	1925951	0					
ANR	1925982	ExpressionStatement	enc = get_conversion ( IS_NULL )	2775:2:87283:87312	1925951	0	True				
ANR	1925983	AssignmentExpression	enc = get_conversion ( IS_NULL )		1925951	0		=			
ANR	1925984	Identifier	enc		1925951	0					
ANR	1925985	CallExpression	get_conversion ( IS_NULL )		1925951	1					
ANR	1925986	Callee	get_conversion		1925951	0					
ANR	1925987	Identifier	get_conversion		1925951	0					
ANR	1925988	ArgumentList	IS_NULL		1925951	1					
ANR	1925989	Argument	IS_NULL		1925951	0					
ANR	1925990	Identifier	IS_NULL		1925951	0					
ANR	1925991	ExpressionStatement	"ret = master_to_xml_int ( enc , data , style , parent , 0 )"	2777:1:87318:87370	1925951	3	True				
ANR	1925992	AssignmentExpression	"ret = master_to_xml_int ( enc , data , style , parent , 0 )"		1925951	0		=			
ANR	1925993	Identifier	ret		1925951	0					
ANR	1925994	CallExpression	"master_to_xml_int ( enc , data , style , parent , 0 )"		1925951	1					
ANR	1925995	Callee	master_to_xml_int		1925951	0					
ANR	1925996	Identifier	master_to_xml_int		1925951	0					
ANR	1925997	ArgumentList	enc		1925951	1					
ANR	1925998	Argument	enc		1925951	0					
ANR	1925999	Identifier	enc		1925951	0					
ANR	1926000	Argument	data		1925951	1					
ANR	1926001	Identifier	data		1925951	0					
ANR	1926002	Argument	style		1925951	2					
ANR	1926003	Identifier	style		1925951	0					
ANR	1926004	Argument	parent		1925951	3					
ANR	1926005	Identifier	parent		1925951	0					
ANR	1926006	Argument	0		1925951	4					
ANR	1926007	PrimaryExpression	0		1925951	0					
ANR	1926008	ReturnStatement	return ret ;	2783:1:87471:87481	1925951	4	True				
ANR	1926009	Identifier	ret		1925951	0					
ANR	1926010	ReturnType	static xmlNodePtr		1925951	1					
ANR	1926011	Identifier	guess_xml_convert		1925951	2					
ANR	1926012	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1925951	3					
ANR	1926013	Parameter	encodeTypePtr type	2767:36:87119:87136	1925951	0	True				
ANR	1926014	ParameterType	encodeTypePtr		1925951	0					
ANR	1926015	Identifier	type		1925951	1					
ANR	1926016	Parameter	zval * data	2767:56:87139:87148	1925951	1	True				
ANR	1926017	ParameterType	zval *		1925951	0					
ANR	1926018	Identifier	data		1925951	1					
ANR	1926019	Parameter	int style	2767:68:87151:87159	1925951	2	True				
ANR	1926020	ParameterType	int		1925951	0					
ANR	1926021	Identifier	style		1925951	1					
ANR	1926022	Parameter	xmlNodePtr parent	2767:79:87162:87178	1925951	3	True				
ANR	1926023	ParameterType	xmlNodePtr		1925951	0					
ANR	1926024	Identifier	parent		1925951	1					
ANR	1926025	CFGEntryNode	ENTRY		1925951		True				
ANR	1926026	CFGExitNode	EXIT		1925951		True				
ANR	1926027	Symbol	ret		1925951						
ANR	1926028	Symbol	parent		1925951						
ANR	1926029	Symbol	master_to_xml_int		1925951						
ANR	1926030	Symbol	data		1925951						
ANR	1926031	Symbol	IS_NULL		1925951						
ANR	1926032	Symbol	style		1925951						
ANR	1926033	Symbol	enc		1925951						
ANR	1926034	Symbol	get_conversion		1925951						
ANR	1926035	Symbol	type		1925951						
ANR	1926036	Symbol	Z_TYPE_P		1925951						
ANR	1926037	Function	guess_zval_convert	2786:0:87486:89807							
ANR	1926038	FunctionDef	"guess_zval_convert (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1926037	0					
ANR	1926039	CompoundStatement		2787:0:87566:89807	1926037	0					
ANR	1926040	IdentifierDeclStatement	encodePtr enc = NULL ;	2788:1:87569:87589	1926037	0	True				
ANR	1926041	IdentifierDecl	enc = NULL		1926037	0					
ANR	1926042	IdentifierDeclType	encodePtr		1926037	0					
ANR	1926043	Identifier	enc		1926037	1					
ANR	1926044	AssignmentExpression	enc = NULL		1926037	2		=			
ANR	1926045	Identifier	NULL		1926037	0					
ANR	1926046	Identifier	NULL		1926037	1					
ANR	1926047	IdentifierDeclStatement	xmlAttrPtr tmpattr ;	2789:1:87592:87610	1926037	1	True				
ANR	1926048	IdentifierDecl	tmpattr		1926037	0					
ANR	1926049	IdentifierDeclType	xmlAttrPtr		1926037	0					
ANR	1926050	Identifier	tmpattr		1926037	1					
ANR	1926051	IdentifierDeclStatement	xmlChar * type_name = NULL ;	2790:1:87613:87638	1926037	2	True				
ANR	1926052	IdentifierDecl	* type_name = NULL		1926037	0					
ANR	1926053	IdentifierDeclType	xmlChar *		1926037	0					
ANR	1926054	Identifier	type_name		1926037	1					
ANR	1926055	AssignmentExpression	* type_name = NULL		1926037	2		=			
ANR	1926056	Identifier	NULL		1926037	0					
ANR	1926057	Identifier	NULL		1926037	1					
ANR	1926058	ExpressionStatement	data = check_and_resolve_href ( data )	2792:1:87642:87677	1926037	3	True				
ANR	1926059	AssignmentExpression	data = check_and_resolve_href ( data )		1926037	0		=			
ANR	1926060	Identifier	data		1926037	0					
ANR	1926061	CallExpression	check_and_resolve_href ( data )		1926037	1					
ANR	1926062	Callee	check_and_resolve_href		1926037	0					
ANR	1926063	Identifier	check_and_resolve_href		1926037	0					
ANR	1926064	ArgumentList	data		1926037	1					
ANR	1926065	Argument	data		1926037	0					
ANR	1926066	Identifier	data		1926037	0					
ANR	1926067	IfStatement	if ( data == NULL )		1926037	4					
ANR	1926068	Condition	data == NULL	2794:5:87685:87696	1926037	0	True				
ANR	1926069	EqualityExpression	data == NULL		1926037	0		==			
ANR	1926070	Identifier	data		1926037	0					
ANR	1926071	Identifier	NULL		1926037	1					
ANR	1926072	CompoundStatement		8:19:132:132	1926037	1					
ANR	1926073	ExpressionStatement	enc = get_conversion ( IS_NULL )	2795:2:87703:87732	1926037	0	True				
ANR	1926074	AssignmentExpression	enc = get_conversion ( IS_NULL )		1926037	0		=			
ANR	1926075	Identifier	enc		1926037	0					
ANR	1926076	CallExpression	get_conversion ( IS_NULL )		1926037	1					
ANR	1926077	Callee	get_conversion		1926037	0					
ANR	1926078	Identifier	get_conversion		1926037	0					
ANR	1926079	ArgumentList	IS_NULL		1926037	1					
ANR	1926080	Argument	IS_NULL		1926037	0					
ANR	1926081	Identifier	IS_NULL		1926037	0					
ANR	1926082	ElseStatement	else		1926037	0					
ANR	1926083	IfStatement	"if ( data -> properties && get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE ) )"		1926037	0					
ANR	1926084	Condition	"data -> properties && get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE )"	2796:12:87746:87821	1926037	0	True				
ANR	1926085	AndExpression	"data -> properties && get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE )"		1926037	0		&&			
ANR	1926086	PtrMemberAccess	data -> properties		1926037	0					
ANR	1926087	Identifier	data		1926037	0					
ANR	1926088	Identifier	properties		1926037	1					
ANR	1926089	CallExpression	"get_attribute_ex ( data -> properties , ""nil"" , XSI_NAMESPACE )"		1926037	1					
ANR	1926090	Callee	get_attribute_ex		1926037	0					
ANR	1926091	Identifier	get_attribute_ex		1926037	0					
ANR	1926092	ArgumentList	data -> properties		1926037	1					
ANR	1926093	Argument	data -> properties		1926037	0					
ANR	1926094	PtrMemberAccess	data -> properties		1926037	0					
ANR	1926095	Identifier	data		1926037	0					
ANR	1926096	Identifier	properties		1926037	1					
ANR	1926097	Argument	"""nil"""		1926037	1					
ANR	1926098	PrimaryExpression	"""nil"""		1926037	0					
ANR	1926099	Argument	XSI_NAMESPACE		1926037	2					
ANR	1926100	Identifier	XSI_NAMESPACE		1926037	0					
ANR	1926101	CompoundStatement		10:90:257:257	1926037	1					
ANR	1926102	ExpressionStatement	enc = get_conversion ( IS_NULL )	2797:2:87828:87857	1926037	0	True				
ANR	1926103	AssignmentExpression	enc = get_conversion ( IS_NULL )		1926037	0		=			
ANR	1926104	Identifier	enc		1926037	0					
ANR	1926105	CallExpression	get_conversion ( IS_NULL )		1926037	1					
ANR	1926106	Callee	get_conversion		1926037	0					
ANR	1926107	Identifier	get_conversion		1926037	0					
ANR	1926108	ArgumentList	IS_NULL		1926037	1					
ANR	1926109	Argument	IS_NULL		1926037	0					
ANR	1926110	Identifier	IS_NULL		1926037	0					
ANR	1926111	ElseStatement	else		1926037	0					
ANR	1926112	CompoundStatement		12:8:300:300	1926037	0					
ANR	1926113	ExpressionStatement	"tmpattr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"	2799:2:87871:87937	1926037	0	True				
ANR	1926114	AssignmentExpression	"tmpattr = get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1926037	0		=			
ANR	1926115	Identifier	tmpattr		1926037	0					
ANR	1926116	CallExpression	"get_attribute_ex ( data -> properties , ""type"" , XSI_NAMESPACE )"		1926037	1					
ANR	1926117	Callee	get_attribute_ex		1926037	0					
ANR	1926118	Identifier	get_attribute_ex		1926037	0					
ANR	1926119	ArgumentList	data -> properties		1926037	1					
ANR	1926120	Argument	data -> properties		1926037	0					
ANR	1926121	PtrMemberAccess	data -> properties		1926037	0					
ANR	1926122	Identifier	data		1926037	0					
ANR	1926123	Identifier	properties		1926037	1					
ANR	1926124	Argument	"""type"""		1926037	1					
ANR	1926125	PrimaryExpression	"""type"""		1926037	0					
ANR	1926126	Argument	XSI_NAMESPACE		1926037	2					
ANR	1926127	Identifier	XSI_NAMESPACE		1926037	0					
ANR	1926128	IfStatement	if ( tmpattr != NULL )		1926037	1					
ANR	1926129	Condition	tmpattr != NULL	2800:6:87945:87959	1926037	0	True				
ANR	1926130	EqualityExpression	tmpattr != NULL		1926037	0		!=			
ANR	1926131	Identifier	tmpattr		1926037	0					
ANR	1926132	Identifier	NULL		1926037	1					
ANR	1926133	CompoundStatement		14:23:395:395	1926037	1					
ANR	1926134	ExpressionStatement	type_name = tmpattr -> children -> content	2801:4:87968:88006	1926037	0	True				
ANR	1926135	AssignmentExpression	type_name = tmpattr -> children -> content		1926037	0		=			
ANR	1926136	Identifier	type_name		1926037	0					
ANR	1926137	PtrMemberAccess	tmpattr -> children -> content		1926037	1					
ANR	1926138	PtrMemberAccess	tmpattr -> children		1926037	0					
ANR	1926139	Identifier	tmpattr		1926037	0					
ANR	1926140	Identifier	children		1926037	1					
ANR	1926141	Identifier	content		1926037	1					
ANR	1926142	ExpressionStatement	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , tmpattr -> children -> content )"	2802:3:88011:88092	1926037	1	True				
ANR	1926143	AssignmentExpression	"enc = get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , tmpattr -> children -> content )"		1926037	0		=			
ANR	1926144	Identifier	enc		1926037	0					
ANR	1926145	CallExpression	"get_encoder_from_prefix ( SOAP_GLOBAL ( sdl ) , data , tmpattr -> children -> content )"		1926037	1					
ANR	1926146	Callee	get_encoder_from_prefix		1926037	0					
ANR	1926147	Identifier	get_encoder_from_prefix		1926037	0					
ANR	1926148	ArgumentList	SOAP_GLOBAL ( sdl )		1926037	1					
ANR	1926149	Argument	SOAP_GLOBAL ( sdl )		1926037	0					
ANR	1926150	CallExpression	SOAP_GLOBAL ( sdl )		1926037	0					
ANR	1926151	Callee	SOAP_GLOBAL		1926037	0					
ANR	1926152	Identifier	SOAP_GLOBAL		1926037	0					
ANR	1926153	ArgumentList	sdl		1926037	1					
ANR	1926154	Argument	sdl		1926037	0					
ANR	1926155	Identifier	sdl		1926037	0					
ANR	1926156	Argument	data		1926037	1					
ANR	1926157	Identifier	data		1926037	0					
ANR	1926158	Argument	tmpattr -> children -> content		1926037	2					
ANR	1926159	PtrMemberAccess	tmpattr -> children -> content		1926037	0					
ANR	1926160	PtrMemberAccess	tmpattr -> children		1926037	0					
ANR	1926161	Identifier	tmpattr		1926037	0					
ANR	1926162	Identifier	children		1926037	1					
ANR	1926163	Identifier	content		1926037	1					
ANR	1926164	IfStatement	if ( enc && type == & enc -> details )		1926037	2					
ANR	1926165	Condition	enc && type == & enc -> details	2803:7:88101:88128	1926037	0	True				
ANR	1926166	AndExpression	enc && type == & enc -> details		1926037	0		&&			
ANR	1926167	Identifier	enc		1926037	0					
ANR	1926168	EqualityExpression	type == & enc -> details		1926037	1		==			
ANR	1926169	Identifier	type		1926037	0					
ANR	1926170	UnaryOperationExpression	& enc -> details		1926037	1					
ANR	1926171	UnaryOperator	&		1926037	0					
ANR	1926172	PtrMemberAccess	enc -> details		1926037	1					
ANR	1926173	Identifier	enc		1926037	0					
ANR	1926174	Identifier	details		1926037	1					
ANR	1926175	CompoundStatement		17:37:564:564	1926037	1					
ANR	1926176	ExpressionStatement	enc = NULL	2804:4:88137:88147	1926037	0	True				
ANR	1926177	AssignmentExpression	enc = NULL		1926037	0		=			
ANR	1926178	Identifier	enc		1926037	0					
ANR	1926179	Identifier	NULL		1926037	1					
ANR	1926180	IfStatement	if ( enc != NULL )		1926037	3					
ANR	1926181	Condition	enc != NULL	2806:7:88161:88171	1926037	0	True				
ANR	1926182	EqualityExpression	enc != NULL		1926037	0		!=			
ANR	1926183	Identifier	enc		1926037	0					
ANR	1926184	Identifier	NULL		1926037	1					
ANR	1926185	CompoundStatement		21:5:614:633	1926037	1					
ANR	1926186	IdentifierDeclStatement	encodePtr tmp = enc ;	2807:5:88181:88200	1926037	0	True				
ANR	1926187	IdentifierDecl	tmp = enc		1926037	0					
ANR	1926188	IdentifierDeclType	encodePtr		1926037	0					
ANR	1926189	Identifier	tmp		1926037	1					
ANR	1926190	AssignmentExpression	tmp = enc		1926037	2		=			
ANR	1926191	Identifier	enc		1926037	0					
ANR	1926192	Identifier	enc		1926037	1					
ANR	1926193	WhileStatement	while ( tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX )		1926037	1					
ANR	1926194	Condition	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX	2808:12:88214:88328	1926037	0	True				
ANR	1926195	AndExpression	tmp && tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1926037	0		&&			
ANR	1926196	Identifier	tmp		1926037	0					
ANR	1926197	AndExpression	tmp -> details . sdl_type != NULL && tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1926037	1		&&			
ANR	1926198	EqualityExpression	tmp -> details . sdl_type != NULL		1926037	0		!=			
ANR	1926199	MemberAccess	tmp -> details . sdl_type		1926037	0					
ANR	1926200	PtrMemberAccess	tmp -> details		1926037	0					
ANR	1926201	Identifier	tmp		1926037	0					
ANR	1926202	Identifier	details		1926037	1					
ANR	1926203	Identifier	sdl_type		1926037	1					
ANR	1926204	Identifier	NULL		1926037	1					
ANR	1926205	EqualityExpression	tmp -> details . sdl_type -> kind != XSD_TYPEKIND_COMPLEX		1926037	1		!=			
ANR	1926206	PtrMemberAccess	tmp -> details . sdl_type -> kind		1926037	0					
ANR	1926207	MemberAccess	tmp -> details . sdl_type		1926037	0					
ANR	1926208	PtrMemberAccess	tmp -> details		1926037	0					
ANR	1926209	Identifier	tmp		1926037	0					
ANR	1926210	Identifier	details		1926037	1					
ANR	1926211	Identifier	sdl_type		1926037	1					
ANR	1926212	Identifier	kind		1926037	1					
ANR	1926213	Identifier	XSD_TYPEKIND_COMPLEX		1926037	1					
ANR	1926214	CompoundStatement		24:65:764:764	1926037	1					
ANR	1926215	IfStatement	if ( enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode )		1926037	0					
ANR	1926216	Condition	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode	2811:11:88344:88430	1926037	0	True				
ANR	1926217	OrExpression	enc == tmp -> details . sdl_type -> encode || tmp == tmp -> details . sdl_type -> encode		1926037	0		||			
ANR	1926218	EqualityExpression	enc == tmp -> details . sdl_type -> encode		1926037	0		==			
ANR	1926219	Identifier	enc		1926037	0					
ANR	1926220	PtrMemberAccess	tmp -> details . sdl_type -> encode		1926037	1					
ANR	1926221	MemberAccess	tmp -> details . sdl_type		1926037	0					
ANR	1926222	PtrMemberAccess	tmp -> details		1926037	0					
ANR	1926223	Identifier	tmp		1926037	0					
ANR	1926224	Identifier	details		1926037	1					
ANR	1926225	Identifier	sdl_type		1926037	1					
ANR	1926226	Identifier	encode		1926037	1					
ANR	1926227	EqualityExpression	tmp == tmp -> details . sdl_type -> encode		1926037	1		==			
ANR	1926228	Identifier	tmp		1926037	0					
ANR	1926229	PtrMemberAccess	tmp -> details . sdl_type -> encode		1926037	1					
ANR	1926230	MemberAccess	tmp -> details . sdl_type		1926037	0					
ANR	1926231	PtrMemberAccess	tmp -> details		1926037	0					
ANR	1926232	Identifier	tmp		1926037	0					
ANR	1926233	Identifier	details		1926037	1					
ANR	1926234	Identifier	sdl_type		1926037	1					
ANR	1926235	Identifier	encode		1926037	1					
ANR	1926236	CompoundStatement		26:49:866:866	1926037	1					
ANR	1926237	ExpressionStatement	enc = NULL	2813:8:88443:88453	1926037	0	True				
ANR	1926238	AssignmentExpression	enc = NULL		1926037	0		=			
ANR	1926239	Identifier	enc		1926037	0					
ANR	1926240	Identifier	NULL		1926037	1					
ANR	1926241	BreakStatement	break ;	2814:8:88463:88468	1926037	1	True				
ANR	1926242	ExpressionStatement	tmp = tmp -> details . sdl_type -> encode	2816:7:88486:88521	1926037	1	True				
ANR	1926243	AssignmentExpression	tmp = tmp -> details . sdl_type -> encode		1926037	0		=			
ANR	1926244	Identifier	tmp		1926037	0					
ANR	1926245	PtrMemberAccess	tmp -> details . sdl_type -> encode		1926037	1					
ANR	1926246	MemberAccess	tmp -> details . sdl_type		1926037	0					
ANR	1926247	PtrMemberAccess	tmp -> details		1926037	0					
ANR	1926248	Identifier	tmp		1926037	0					
ANR	1926249	Identifier	details		1926037	1					
ANR	1926250	Identifier	sdl_type		1926037	1					
ANR	1926251	Identifier	encode		1926037	1					
ANR	1926252	IfStatement	if ( enc == NULL )		1926037	2					
ANR	1926253	Condition	enc == NULL	2821:6:88546:88556	1926037	0	True				
ANR	1926254	EqualityExpression	enc == NULL		1926037	0		==			
ANR	1926255	Identifier	enc		1926037	0					
ANR	1926256	Identifier	NULL		1926037	1					
ANR	1926257	CompoundStatement		38:3:1101:1116	1926037	1					
ANR	1926258	IdentifierDeclStatement	xmlNodePtr trav ;	2824:3:88668:88683	1926037	0	True				
ANR	1926259	IdentifierDecl	trav		1926037	0					
ANR	1926260	IdentifierDeclType	xmlNodePtr		1926037	0					
ANR	1926261	Identifier	trav		1926037	1					
ANR	1926262	IfStatement	"if ( get_attribute ( data -> properties , ""arrayType"" ) || get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" ) )"		1926037	1					
ANR	1926263	Condition	"get_attribute ( data -> properties , ""arrayType"" ) || get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" )"	2826:7:88693:88845	1926037	0	True				
ANR	1926264	OrExpression	"get_attribute ( data -> properties , ""arrayType"" ) || get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" )"		1926037	0		||			
ANR	1926265	CallExpression	"get_attribute ( data -> properties , ""arrayType"" )"		1926037	0					
ANR	1926266	Callee	get_attribute		1926037	0					
ANR	1926267	Identifier	get_attribute		1926037	0					
ANR	1926268	ArgumentList	data -> properties		1926037	1					
ANR	1926269	Argument	data -> properties		1926037	0					
ANR	1926270	PtrMemberAccess	data -> properties		1926037	0					
ANR	1926271	Identifier	data		1926037	0					
ANR	1926272	Identifier	properties		1926037	1					
ANR	1926273	Argument	"""arrayType"""		1926037	1					
ANR	1926274	PrimaryExpression	"""arrayType"""		1926037	0					
ANR	1926275	OrExpression	"get_attribute ( data -> properties , ""itemType"" ) || get_attribute ( data -> properties , ""arraySize"" )"		1926037	1		||			
ANR	1926276	CallExpression	"get_attribute ( data -> properties , ""itemType"" )"		1926037	0					
ANR	1926277	Callee	get_attribute		1926037	0					
ANR	1926278	Identifier	get_attribute		1926037	0					
ANR	1926279	ArgumentList	data -> properties		1926037	1					
ANR	1926280	Argument	data -> properties		1926037	0					
ANR	1926281	PtrMemberAccess	data -> properties		1926037	0					
ANR	1926282	Identifier	data		1926037	0					
ANR	1926283	Identifier	properties		1926037	1					
ANR	1926284	Argument	"""itemType"""		1926037	1					
ANR	1926285	PrimaryExpression	"""itemType"""		1926037	0					
ANR	1926286	CallExpression	"get_attribute ( data -> properties , ""arraySize"" )"		1926037	1					
ANR	1926287	Callee	get_attribute		1926037	0					
ANR	1926288	Identifier	get_attribute		1926037	0					
ANR	1926289	ArgumentList	data -> properties		1926037	1					
ANR	1926290	Argument	data -> properties		1926037	0					
ANR	1926291	PtrMemberAccess	data -> properties		1926037	0					
ANR	1926292	Identifier	data		1926037	0					
ANR	1926293	Identifier	properties		1926037	1					
ANR	1926294	Argument	"""arraySize"""		1926037	1					
ANR	1926295	PrimaryExpression	"""arraySize"""		1926037	0					
ANR	1926296	CompoundStatement		42:53:1281:1281	1926037	1					
ANR	1926297	ExpressionStatement	enc = get_conversion ( SOAP_ENC_ARRAY )	2829:4:88854:88890	1926037	0	True				
ANR	1926298	AssignmentExpression	enc = get_conversion ( SOAP_ENC_ARRAY )		1926037	0		=			
ANR	1926299	Identifier	enc		1926037	0					
ANR	1926300	CallExpression	get_conversion ( SOAP_ENC_ARRAY )		1926037	1					
ANR	1926301	Callee	get_conversion		1926037	0					
ANR	1926302	Identifier	get_conversion		1926037	0					
ANR	1926303	ArgumentList	SOAP_ENC_ARRAY		1926037	1					
ANR	1926304	Argument	SOAP_ENC_ARRAY		1926037	0					
ANR	1926305	Identifier	SOAP_ENC_ARRAY		1926037	0					
ANR	1926306	ElseStatement	else		1926037	0					
ANR	1926307	CompoundStatement		44:10:1335:1335	1926037	0					
ANR	1926308	ExpressionStatement	enc = get_conversion ( XSD_STRING )	2831:4:88908:88940	1926037	0	True				
ANR	1926309	AssignmentExpression	enc = get_conversion ( XSD_STRING )		1926037	0		=			
ANR	1926310	Identifier	enc		1926037	0					
ANR	1926311	CallExpression	get_conversion ( XSD_STRING )		1926037	1					
ANR	1926312	Callee	get_conversion		1926037	0					
ANR	1926313	Identifier	get_conversion		1926037	0					
ANR	1926314	ArgumentList	XSD_STRING		1926037	1					
ANR	1926315	Argument	XSD_STRING		1926037	0					
ANR	1926316	Identifier	XSD_STRING		1926037	0					
ANR	1926317	ExpressionStatement	trav = data -> children	2832:4:88946:88967	1926037	1	True				
ANR	1926318	AssignmentExpression	trav = data -> children		1926037	0		=			
ANR	1926319	Identifier	trav		1926037	0					
ANR	1926320	PtrMemberAccess	data -> children		1926037	1					
ANR	1926321	Identifier	data		1926037	0					
ANR	1926322	Identifier	children		1926037	1					
ANR	1926323	WhileStatement	while ( trav != NULL )		1926037	2					
ANR	1926324	Condition	trav != NULL	2833:11:88980:88991	1926037	0	True				
ANR	1926325	EqualityExpression	trav != NULL		1926037	0		!=			
ANR	1926326	Identifier	trav		1926037	0					
ANR	1926327	Identifier	NULL		1926037	1					
ANR	1926328	CompoundStatement		47:25:1427:1427	1926037	1					
ANR	1926329	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1926037	0					
ANR	1926330	Condition	trav -> type == XML_ELEMENT_NODE	2834:9:89005:89034	1926037	0	True				
ANR	1926331	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1926037	0		==			
ANR	1926332	PtrMemberAccess	trav -> type		1926037	0					
ANR	1926333	Identifier	trav		1926037	0					
ANR	1926334	Identifier	type		1926037	1					
ANR	1926335	Identifier	XML_ELEMENT_NODE		1926037	1					
ANR	1926336	CompoundStatement		48:41:1470:1470	1926037	1					
ANR	1926337	ExpressionStatement	enc = get_conversion ( SOAP_ENC_OBJECT )	2835:6:89045:89082	1926037	0	True				
ANR	1926338	AssignmentExpression	enc = get_conversion ( SOAP_ENC_OBJECT )		1926037	0		=			
ANR	1926339	Identifier	enc		1926037	0					
ANR	1926340	CallExpression	get_conversion ( SOAP_ENC_OBJECT )		1926037	1					
ANR	1926341	Callee	get_conversion		1926037	0					
ANR	1926342	Identifier	get_conversion		1926037	0					
ANR	1926343	ArgumentList	SOAP_ENC_OBJECT		1926037	1					
ANR	1926344	Argument	SOAP_ENC_OBJECT		1926037	0					
ANR	1926345	Identifier	SOAP_ENC_OBJECT		1926037	0					
ANR	1926346	BreakStatement	break ;	2836:6:89090:89095	1926037	1	True				
ANR	1926347	ExpressionStatement	trav = trav -> next	2838:5:89109:89126	1926037	1	True				
ANR	1926348	AssignmentExpression	trav = trav -> next		1926037	0		=			
ANR	1926349	Identifier	trav		1926037	0					
ANR	1926350	PtrMemberAccess	trav -> next		1926037	1					
ANR	1926351	Identifier	trav		1926037	0					
ANR	1926352	Identifier	next		1926037	1					
ANR	1926353	ExpressionStatement	"master_to_zval_int ( ret , enc , data )"	2843:1:89147:89181	1926037	5	True				
ANR	1926354	CallExpression	"master_to_zval_int ( ret , enc , data )"		1926037	0					
ANR	1926355	Callee	master_to_zval_int		1926037	0					
ANR	1926356	Identifier	master_to_zval_int		1926037	0					
ANR	1926357	ArgumentList	ret		1926037	1					
ANR	1926358	Argument	ret		1926037	0					
ANR	1926359	Identifier	ret		1926037	0					
ANR	1926360	Argument	enc		1926037	1					
ANR	1926361	Identifier	enc		1926037	0					
ANR	1926362	Argument	data		1926037	2					
ANR	1926363	Identifier	data		1926037	0					
ANR	1926364	IfStatement	if ( SOAP_GLOBAL ( sdl ) && type_name && enc -> details . sdl_type )		1926037	6					
ANR	1926365	Condition	SOAP_GLOBAL ( sdl ) && type_name && enc -> details . sdl_type	2844:5:89188:89241	1926037	0	True				
ANR	1926366	AndExpression	SOAP_GLOBAL ( sdl ) && type_name && enc -> details . sdl_type		1926037	0		&&			
ANR	1926367	CallExpression	SOAP_GLOBAL ( sdl )		1926037	0					
ANR	1926368	Callee	SOAP_GLOBAL		1926037	0					
ANR	1926369	Identifier	SOAP_GLOBAL		1926037	0					
ANR	1926370	ArgumentList	sdl		1926037	1					
ANR	1926371	Argument	sdl		1926037	0					
ANR	1926372	Identifier	sdl		1926037	0					
ANR	1926373	AndExpression	type_name && enc -> details . sdl_type		1926037	1		&&			
ANR	1926374	Identifier	type_name		1926037	0					
ANR	1926375	MemberAccess	enc -> details . sdl_type		1926037	1					
ANR	1926376	PtrMemberAccess	enc -> details		1926037	0					
ANR	1926377	Identifier	enc		1926037	0					
ANR	1926378	Identifier	details		1926037	1					
ANR	1926379	Identifier	sdl_type		1926037	1					
ANR	1926380	CompoundStatement		61:2:1718:1732	1926037	1					
ANR	1926381	IdentifierDeclStatement	zval soapvar ;	2845:2:89248:89260	1926037	0	True				
ANR	1926382	IdentifierDecl	soapvar		1926037	0					
ANR	1926383	IdentifierDeclType	zval		1926037	0					
ANR	1926384	Identifier	soapvar		1926037	1					
ANR	1926385	IdentifierDeclStatement	"char * ns , * cptype ;"	2846:2:89264:89281	1926037	1	True				
ANR	1926386	IdentifierDecl	* ns		1926037	0					
ANR	1926387	IdentifierDeclType	char *		1926037	0					
ANR	1926388	Identifier	ns		1926037	1					
ANR	1926389	IdentifierDecl	* cptype		1926037	1					
ANR	1926390	IdentifierDeclType	char *		1926037	0					
ANR	1926391	Identifier	cptype		1926037	1					
ANR	1926392	IdentifierDeclStatement	xmlNsPtr nsptr ;	2847:2:89285:89299	1926037	2	True				
ANR	1926393	IdentifierDecl	nsptr		1926037	0					
ANR	1926394	IdentifierDeclType	xmlNsPtr		1926037	0					
ANR	1926395	Identifier	nsptr		1926037	1					
ANR	1926396	ExpressionStatement	"object_init_ex ( & soapvar , soap_var_class_entry )"	2849:2:89304:89350	1926037	3	True				
ANR	1926397	CallExpression	"object_init_ex ( & soapvar , soap_var_class_entry )"		1926037	0					
ANR	1926398	Callee	object_init_ex		1926037	0					
ANR	1926399	Identifier	object_init_ex		1926037	0					
ANR	1926400	ArgumentList	& soapvar		1926037	1					
ANR	1926401	Argument	& soapvar		1926037	0					
ANR	1926402	UnaryOperationExpression	& soapvar		1926037	0					
ANR	1926403	UnaryOperator	&		1926037	0					
ANR	1926404	Identifier	soapvar		1926037	1					
ANR	1926405	Argument	soap_var_class_entry		1926037	1					
ANR	1926406	Identifier	soap_var_class_entry		1926037	0					
ANR	1926407	ExpressionStatement	"add_property_long ( & soapvar , ""enc_type"" , enc -> details . type )"	2850:2:89354:89412	1926037	4	True				
ANR	1926408	CallExpression	"add_property_long ( & soapvar , ""enc_type"" , enc -> details . type )"		1926037	0					
ANR	1926409	Callee	add_property_long		1926037	0					
ANR	1926410	Identifier	add_property_long		1926037	0					
ANR	1926411	ArgumentList	& soapvar		1926037	1					
ANR	1926412	Argument	& soapvar		1926037	0					
ANR	1926413	UnaryOperationExpression	& soapvar		1926037	0					
ANR	1926414	UnaryOperator	&		1926037	0					
ANR	1926415	Identifier	soapvar		1926037	1					
ANR	1926416	Argument	"""enc_type"""		1926037	1					
ANR	1926417	PrimaryExpression	"""enc_type"""		1926037	0					
ANR	1926418	Argument	enc -> details . type		1926037	2					
ANR	1926419	MemberAccess	enc -> details . type		1926037	0					
ANR	1926420	PtrMemberAccess	enc -> details		1926037	0					
ANR	1926421	Identifier	enc		1926037	0					
ANR	1926422	Identifier	details		1926037	1					
ANR	1926423	Identifier	type		1926037	1					
ANR	1926424	ExpressionStatement	Z_DELREF_P ( ret )	2851:2:89416:89431	1926037	5	True				
ANR	1926425	CallExpression	Z_DELREF_P ( ret )		1926037	0					
ANR	1926426	Callee	Z_DELREF_P		1926037	0					
ANR	1926427	Identifier	Z_DELREF_P		1926037	0					
ANR	1926428	ArgumentList	ret		1926037	1					
ANR	1926429	Argument	ret		1926037	0					
ANR	1926430	Identifier	ret		1926037	0					
ANR	1926431	ExpressionStatement	"add_property_zval ( & soapvar , ""enc_value"" , ret )"	2852:2:89435:89480	1926037	6	True				
ANR	1926432	CallExpression	"add_property_zval ( & soapvar , ""enc_value"" , ret )"		1926037	0					
ANR	1926433	Callee	add_property_zval		1926037	0					
ANR	1926434	Identifier	add_property_zval		1926037	0					
ANR	1926435	ArgumentList	& soapvar		1926037	1					
ANR	1926436	Argument	& soapvar		1926037	0					
ANR	1926437	UnaryOperationExpression	& soapvar		1926037	0					
ANR	1926438	UnaryOperator	&		1926037	0					
ANR	1926439	Identifier	soapvar		1926037	1					
ANR	1926440	Argument	"""enc_value"""		1926037	1					
ANR	1926441	PrimaryExpression	"""enc_value"""		1926037	0					
ANR	1926442	Argument	ret		1926037	2					
ANR	1926443	Identifier	ret		1926037	0					
ANR	1926444	ExpressionStatement	"parse_namespace ( type_name , & cptype , & ns )"	2853:2:89484:89524	1926037	7	True				
ANR	1926445	CallExpression	"parse_namespace ( type_name , & cptype , & ns )"		1926037	0					
ANR	1926446	Callee	parse_namespace		1926037	0					
ANR	1926447	Identifier	parse_namespace		1926037	0					
ANR	1926448	ArgumentList	type_name		1926037	1					
ANR	1926449	Argument	type_name		1926037	0					
ANR	1926450	Identifier	type_name		1926037	0					
ANR	1926451	Argument	& cptype		1926037	1					
ANR	1926452	UnaryOperationExpression	& cptype		1926037	0					
ANR	1926453	UnaryOperator	&		1926037	0					
ANR	1926454	Identifier	cptype		1926037	1					
ANR	1926455	Argument	& ns		1926037	2					
ANR	1926456	UnaryOperationExpression	& ns		1926037	0					
ANR	1926457	UnaryOperator	&		1926037	0					
ANR	1926458	Identifier	ns		1926037	1					
ANR	1926459	ExpressionStatement	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"	2854:2:89528:89578	1926037	8	True				
ANR	1926460	AssignmentExpression	"nsptr = xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1926037	0		=			
ANR	1926461	Identifier	nsptr		1926037	0					
ANR	1926462	CallExpression	"xmlSearchNs ( data -> doc , data , BAD_CAST ( ns ) )"		1926037	1					
ANR	1926463	Callee	xmlSearchNs		1926037	0					
ANR	1926464	Identifier	xmlSearchNs		1926037	0					
ANR	1926465	ArgumentList	data -> doc		1926037	1					
ANR	1926466	Argument	data -> doc		1926037	0					
ANR	1926467	PtrMemberAccess	data -> doc		1926037	0					
ANR	1926468	Identifier	data		1926037	0					
ANR	1926469	Identifier	doc		1926037	1					
ANR	1926470	Argument	data		1926037	1					
ANR	1926471	Identifier	data		1926037	0					
ANR	1926472	Argument	BAD_CAST ( ns )		1926037	2					
ANR	1926473	CallExpression	BAD_CAST ( ns )		1926037	0					
ANR	1926474	Callee	BAD_CAST		1926037	0					
ANR	1926475	Identifier	BAD_CAST		1926037	0					
ANR	1926476	ArgumentList	ns		1926037	1					
ANR	1926477	Argument	ns		1926037	0					
ANR	1926478	Identifier	ns		1926037	0					
ANR	1926479	ExpressionStatement	"add_property_string ( & soapvar , ""enc_stype"" , cptype )"	2855:2:89582:89632	1926037	9	True				
ANR	1926480	CallExpression	"add_property_string ( & soapvar , ""enc_stype"" , cptype )"		1926037	0					
ANR	1926481	Callee	add_property_string		1926037	0					
ANR	1926482	Identifier	add_property_string		1926037	0					
ANR	1926483	ArgumentList	& soapvar		1926037	1					
ANR	1926484	Argument	& soapvar		1926037	0					
ANR	1926485	UnaryOperationExpression	& soapvar		1926037	0					
ANR	1926486	UnaryOperator	&		1926037	0					
ANR	1926487	Identifier	soapvar		1926037	1					
ANR	1926488	Argument	"""enc_stype"""		1926037	1					
ANR	1926489	PrimaryExpression	"""enc_stype"""		1926037	0					
ANR	1926490	Argument	cptype		1926037	2					
ANR	1926491	Identifier	cptype		1926037	0					
ANR	1926492	IfStatement	if ( nsptr )		1926037	10					
ANR	1926493	Condition	nsptr	2856:6:89640:89644	1926037	0	True				
ANR	1926494	Identifier	nsptr		1926037	0					
ANR	1926495	CompoundStatement		70:13:2080:2080	1926037	1					
ANR	1926496	ExpressionStatement	"add_property_string ( & soapvar , ""enc_ns"" , ( char * ) nsptr -> href )"	2857:3:89652:89711	1926037	0	True				
ANR	1926497	CallExpression	"add_property_string ( & soapvar , ""enc_ns"" , ( char * ) nsptr -> href )"		1926037	0					
ANR	1926498	Callee	add_property_string		1926037	0					
ANR	1926499	Identifier	add_property_string		1926037	0					
ANR	1926500	ArgumentList	& soapvar		1926037	1					
ANR	1926501	Argument	& soapvar		1926037	0					
ANR	1926502	UnaryOperationExpression	& soapvar		1926037	0					
ANR	1926503	UnaryOperator	&		1926037	0					
ANR	1926504	Identifier	soapvar		1926037	1					
ANR	1926505	Argument	"""enc_ns"""		1926037	1					
ANR	1926506	PrimaryExpression	"""enc_ns"""		1926037	0					
ANR	1926507	Argument	( char * ) nsptr -> href		1926037	2					
ANR	1926508	CastExpression	( char * ) nsptr -> href		1926037	0					
ANR	1926509	CastTarget	char *		1926037	0					
ANR	1926510	PtrMemberAccess	nsptr -> href		1926037	1					
ANR	1926511	Identifier	nsptr		1926037	0					
ANR	1926512	Identifier	href		1926037	1					
ANR	1926513	ExpressionStatement	efree ( cptype )	2859:2:89719:89732	1926037	11	True				
ANR	1926514	CallExpression	efree ( cptype )		1926037	0					
ANR	1926515	Callee	efree		1926037	0					
ANR	1926516	Identifier	efree		1926037	0					
ANR	1926517	ArgumentList	cptype		1926037	1					
ANR	1926518	Argument	cptype		1926037	0					
ANR	1926519	Identifier	cptype		1926037	0					
ANR	1926520	IfStatement	if ( ns )		1926037	12					
ANR	1926521	Condition	ns	2860:6:89740:89741	1926037	0	True				
ANR	1926522	Identifier	ns		1926037	0					
ANR	1926523	CompoundStatement		74:10:2177:2177	1926037	1					
ANR	1926524	ExpressionStatement	efree ( ns )	2860:11:89745:89754	1926037	0	True				
ANR	1926525	CallExpression	efree ( ns )		1926037	0					
ANR	1926526	Callee	efree		1926037	0					
ANR	1926527	Identifier	efree		1926037	0					
ANR	1926528	ArgumentList	ns		1926037	1					
ANR	1926529	Argument	ns		1926037	0					
ANR	1926530	Identifier	ns		1926037	0					
ANR	1926531	ExpressionStatement	"ZVAL_COPY_VALUE ( ret , & soapvar )"	2861:2:89759:89789	1926037	13	True				
ANR	1926532	CallExpression	"ZVAL_COPY_VALUE ( ret , & soapvar )"		1926037	0					
ANR	1926533	Callee	ZVAL_COPY_VALUE		1926037	0					
ANR	1926534	Identifier	ZVAL_COPY_VALUE		1926037	0					
ANR	1926535	ArgumentList	ret		1926037	1					
ANR	1926536	Argument	ret		1926037	0					
ANR	1926537	Identifier	ret		1926037	0					
ANR	1926538	Argument	& soapvar		1926037	1					
ANR	1926539	UnaryOperationExpression	& soapvar		1926037	0					
ANR	1926540	UnaryOperator	&		1926037	0					
ANR	1926541	Identifier	soapvar		1926037	1					
ANR	1926542	ReturnStatement	return ret ;	2863:1:89795:89805	1926037	7	True				
ANR	1926543	Identifier	ret		1926037	0					
ANR	1926544	ReturnType	static zval *		1926037	1					
ANR	1926545	Identifier	guess_zval_convert		1926037	2					
ANR	1926546	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1926037	3					
ANR	1926547	Parameter	zval * ret	2786:32:87518:87526	1926037	0	True				
ANR	1926548	ParameterType	zval *		1926037	0					
ANR	1926549	Identifier	ret		1926037	1					
ANR	1926550	Parameter	encodeTypePtr type	2786:43:87529:87546	1926037	1	True				
ANR	1926551	ParameterType	encodeTypePtr		1926037	0					
ANR	1926552	Identifier	type		1926037	1					
ANR	1926553	Parameter	xmlNodePtr data	2786:63:87549:87563	1926037	2	True				
ANR	1926554	ParameterType	xmlNodePtr		1926037	0					
ANR	1926555	Identifier	data		1926037	1					
ANR	1926556	CFGEntryNode	ENTRY		1926037		True				
ANR	1926557	CFGExitNode	EXIT		1926037		True				
ANR	1926558	Symbol	type_name		1926037						
ANR	1926559	Symbol	XML_ELEMENT_NODE		1926037						
ANR	1926560	Symbol	trav -> next		1926037						
ANR	1926561	Symbol	data		1926037						
ANR	1926562	Symbol	get_attribute		1926037						
ANR	1926563	Symbol	trav		1926037						
ANR	1926564	Symbol	get_conversion		1926037						
ANR	1926565	Symbol	type		1926037						
ANR	1926566	Symbol	check_and_resolve_href		1926037						
ANR	1926567	Symbol	SOAP_ENC_ARRAY		1926037						
ANR	1926568	Symbol	soap_var_class_entry		1926037						
ANR	1926569	Symbol	enc -> details . type		1926037						
ANR	1926570	Symbol	tmp		1926037						
ANR	1926571	Symbol	* tmpattr		1926037						
ANR	1926572	Symbol	tmp -> details . sdl_type -> encode		1926037						
ANR	1926573	Symbol	ret		1926037						
ANR	1926574	Symbol	* * tmpattr		1926037						
ANR	1926575	Symbol	NULL		1926037						
ANR	1926576	Symbol	tmpattr		1926037						
ANR	1926577	Symbol	tmpattr -> children		1926037						
ANR	1926578	Symbol	* tmpattr -> children		1926037						
ANR	1926579	Symbol	SOAP_GLOBAL		1926037						
ANR	1926580	Symbol	XSD_TYPEKIND_COMPLEX		1926037						
ANR	1926581	Symbol	tmpattr -> children -> content		1926037						
ANR	1926582	Symbol	& enc -> details		1926037						
ANR	1926583	Symbol	get_attribute_ex		1926037						
ANR	1926584	Symbol	* nsptr		1926037						
ANR	1926585	Symbol	sdl		1926037						
ANR	1926586	Symbol	* enc		1926037						
ANR	1926587	Symbol	XSI_NAMESPACE		1926037						
ANR	1926588	Symbol	BAD_CAST		1926037						
ANR	1926589	Symbol	* tmp		1926037						
ANR	1926590	Symbol	trav -> type		1926037						
ANR	1926591	Symbol	ns		1926037						
ANR	1926592	Symbol	tmp -> details . sdl_type -> kind		1926037						
ANR	1926593	Symbol	enc -> details		1926037						
ANR	1926594	Symbol	SOAP_ENC_OBJECT		1926037						
ANR	1926595	Symbol	data -> properties		1926037						
ANR	1926596	Symbol	* trav		1926037						
ANR	1926597	Symbol	nsptr		1926037						
ANR	1926598	Symbol	IS_NULL		1926037						
ANR	1926599	Symbol	enc		1926037						
ANR	1926600	Symbol	tmp -> details . sdl_type		1926037						
ANR	1926601	Symbol	soapvar		1926037						
ANR	1926602	Symbol	* tmp -> details		1926037						
ANR	1926603	Symbol	* tmp -> details . sdl_type		1926037						
ANR	1926604	Symbol	nsptr -> href		1926037						
ANR	1926605	Symbol	enc -> details . sdl_type		1926037						
ANR	1926606	Symbol	& cptype		1926037						
ANR	1926607	Symbol	* * tmp		1926037						
ANR	1926608	Symbol	xmlSearchNs		1926037						
ANR	1926609	Symbol	tmp -> details		1926037						
ANR	1926610	Symbol	& ns		1926037						
ANR	1926611	Symbol	XSD_STRING		1926037						
ANR	1926612	Symbol	& soapvar		1926037						
ANR	1926613	Symbol	data -> children		1926037						
ANR	1926614	Symbol	data -> doc		1926037						
ANR	1926615	Symbol	get_encoder_from_prefix		1926037						
ANR	1926616	Symbol	cptype		1926037						
ANR	1926617	Symbol	* data		1926037						
ANR	1926618	Function	to_xml_datetime_ex	2867:0:89835:92003							
ANR	1926619	FunctionDef	"to_xml_datetime_ex (encodeTypePtr type , zval * data , char * format , int style , xmlNodePtr parent)"		1926618	0					
ANR	1926620	CompoundStatement		2868:0:89948:92003	1926618	0					
ANR	1926621	IdentifierDeclStatement	"struct tm * ta , tmbuf ;"	2870:1:90000:90020	1926618	0	True				
ANR	1926622	IdentifierDecl	* ta		1926618	0					
ANR	1926623	IdentifierDeclType	struct tm *		1926618	0					
ANR	1926624	Identifier	ta		1926618	1					
ANR	1926625	IdentifierDecl	tmbuf		1926618	1					
ANR	1926626	IdentifierDeclType	struct tm		1926618	0					
ANR	1926627	Identifier	tmbuf		1926618	1					
ANR	1926628	IdentifierDeclStatement	time_t timestamp ;	2871:1:90023:90039	1926618	1	True				
ANR	1926629	IdentifierDecl	timestamp		1926618	0					
ANR	1926630	IdentifierDeclType	time_t		1926618	0					
ANR	1926631	Identifier	timestamp		1926618	1					
ANR	1926632	IdentifierDeclStatement	int max_reallocs = 5 ;	2872:1:90042:90062	1926618	2	True				
ANR	1926633	IdentifierDecl	max_reallocs = 5		1926618	0					
ANR	1926634	IdentifierDeclType	int		1926618	0					
ANR	1926635	Identifier	max_reallocs		1926618	1					
ANR	1926636	AssignmentExpression	max_reallocs = 5		1926618	2		=			
ANR	1926637	Identifier	max_reallocs		1926618	0					
ANR	1926638	PrimaryExpression	5		1926618	1					
ANR	1926639	IdentifierDeclStatement	"size_t buf_len = 64 , real_len ;"	2873:1:90065:90092	1926618	3	True				
ANR	1926640	IdentifierDecl	buf_len = 64		1926618	0					
ANR	1926641	IdentifierDeclType	size_t		1926618	0					
ANR	1926642	Identifier	buf_len		1926618	1					
ANR	1926643	AssignmentExpression	buf_len = 64		1926618	2		=			
ANR	1926644	Identifier	buf_len		1926618	0					
ANR	1926645	PrimaryExpression	64		1926618	1					
ANR	1926646	IdentifierDecl	real_len		1926618	1					
ANR	1926647	IdentifierDeclType	size_t		1926618	0					
ANR	1926648	Identifier	real_len		1926618	1					
ANR	1926649	IdentifierDeclStatement	char * buf ;	2874:1:90095:90104	1926618	4	True				
ANR	1926650	IdentifierDecl	* buf		1926618	0					
ANR	1926651	IdentifierDeclType	char *		1926618	0					
ANR	1926652	Identifier	buf		1926618	1					
ANR	1926653	IdentifierDeclStatement	char tzbuf [ 8 ] ;	2875:1:90107:90120	1926618	5	True				
ANR	1926654	IdentifierDecl	tzbuf [ 8 ]		1926618	0					
ANR	1926655	IdentifierDeclType	char [ 8 ]		1926618	0					
ANR	1926656	Identifier	tzbuf		1926618	1					
ANR	1926657	PrimaryExpression	8		1926618	2					
ANR	1926658	IdentifierDeclStatement	xmlNodePtr xmlParam ;	2877:1:90124:90143	1926618	6	True				
ANR	1926659	IdentifierDecl	xmlParam		1926618	0					
ANR	1926660	IdentifierDeclType	xmlNodePtr		1926618	0					
ANR	1926661	Identifier	xmlParam		1926618	1					
ANR	1926662	ExpressionStatement	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2879:1:90147:90193	1926618	7	True				
ANR	1926663	AssignmentExpression	"xmlParam = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1926618	0		=			
ANR	1926664	Identifier	xmlParam		1926618	0					
ANR	1926665	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1926618	1					
ANR	1926666	Callee	xmlNewNode		1926618	0					
ANR	1926667	Identifier	xmlNewNode		1926618	0					
ANR	1926668	ArgumentList	NULL		1926618	1					
ANR	1926669	Argument	NULL		1926618	0					
ANR	1926670	Identifier	NULL		1926618	0					
ANR	1926671	Argument	"BAD_CAST ( ""BOGUS"" )"		1926618	1					
ANR	1926672	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1926618	0					
ANR	1926673	Callee	BAD_CAST		1926618	0					
ANR	1926674	Identifier	BAD_CAST		1926618	0					
ANR	1926675	ArgumentList	"""BOGUS"""		1926618	1					
ANR	1926676	Argument	"""BOGUS"""		1926618	0					
ANR	1926677	PrimaryExpression	"""BOGUS"""		1926618	0					
ANR	1926678	ExpressionStatement	"xmlAddChild ( parent , xmlParam )"	2880:1:90196:90225	1926618	8	True				
ANR	1926679	CallExpression	"xmlAddChild ( parent , xmlParam )"		1926618	0					
ANR	1926680	Callee	xmlAddChild		1926618	0					
ANR	1926681	Identifier	xmlAddChild		1926618	0					
ANR	1926682	ArgumentList	parent		1926618	1					
ANR	1926683	Argument	parent		1926618	0					
ANR	1926684	Identifier	parent		1926618	0					
ANR	1926685	Argument	xmlParam		1926618	1					
ANR	1926686	Identifier	xmlParam		1926618	0					
ANR	1926687	ExpressionStatement	"FIND_ZVAL_NULL ( data , xmlParam , style )"	2881:1:90228:90265	1926618	9	True				
ANR	1926688	CallExpression	"FIND_ZVAL_NULL ( data , xmlParam , style )"		1926618	0					
ANR	1926689	Callee	FIND_ZVAL_NULL		1926618	0					
ANR	1926690	Identifier	FIND_ZVAL_NULL		1926618	0					
ANR	1926691	ArgumentList	data		1926618	1					
ANR	1926692	Argument	data		1926618	0					
ANR	1926693	Identifier	data		1926618	0					
ANR	1926694	Argument	xmlParam		1926618	1					
ANR	1926695	Identifier	xmlParam		1926618	0					
ANR	1926696	Argument	style		1926618	2					
ANR	1926697	Identifier	style		1926618	0					
ANR	1926698	IfStatement	if ( Z_TYPE_P ( data ) == IS_LONG )		1926618	10					
ANR	1926699	Condition	Z_TYPE_P ( data ) == IS_LONG	2883:5:90273:90297	1926618	0	True				
ANR	1926700	EqualityExpression	Z_TYPE_P ( data ) == IS_LONG		1926618	0		==			
ANR	1926701	CallExpression	Z_TYPE_P ( data )		1926618	0					
ANR	1926702	Callee	Z_TYPE_P		1926618	0					
ANR	1926703	Identifier	Z_TYPE_P		1926618	0					
ANR	1926704	ArgumentList	data		1926618	1					
ANR	1926705	Argument	data		1926618	0					
ANR	1926706	Identifier	data		1926618	0					
ANR	1926707	Identifier	IS_LONG		1926618	1					
ANR	1926708	CompoundStatement		16:32:351:351	1926618	1					
ANR	1926709	ExpressionStatement	timestamp = Z_LVAL_P ( data )	2884:2:90304:90330	1926618	0	True				
ANR	1926710	AssignmentExpression	timestamp = Z_LVAL_P ( data )		1926618	0		=			
ANR	1926711	Identifier	timestamp		1926618	0					
ANR	1926712	CallExpression	Z_LVAL_P ( data )		1926618	1					
ANR	1926713	Callee	Z_LVAL_P		1926618	0					
ANR	1926714	Identifier	Z_LVAL_P		1926618	0					
ANR	1926715	ArgumentList	data		1926618	1					
ANR	1926716	Argument	data		1926618	0					
ANR	1926717	Identifier	data		1926618	0					
ANR	1926718	ExpressionStatement	"ta = php_localtime_r ( & timestamp , & tmbuf )"	2885:2:90334:90374	1926618	1	True				
ANR	1926719	AssignmentExpression	"ta = php_localtime_r ( & timestamp , & tmbuf )"		1926618	0		=			
ANR	1926720	Identifier	ta		1926618	0					
ANR	1926721	CallExpression	"php_localtime_r ( & timestamp , & tmbuf )"		1926618	1					
ANR	1926722	Callee	php_localtime_r		1926618	0					
ANR	1926723	Identifier	php_localtime_r		1926618	0					
ANR	1926724	ArgumentList	& timestamp		1926618	1					
ANR	1926725	Argument	& timestamp		1926618	0					
ANR	1926726	UnaryOperationExpression	& timestamp		1926618	0					
ANR	1926727	UnaryOperator	&		1926618	0					
ANR	1926728	Identifier	timestamp		1926618	1					
ANR	1926729	Argument	& tmbuf		1926618	1					
ANR	1926730	UnaryOperationExpression	& tmbuf		1926618	0					
ANR	1926731	UnaryOperator	&		1926618	0					
ANR	1926732	Identifier	tmbuf		1926618	1					
ANR	1926733	IfStatement	if ( ! ta )		1926618	2					
ANR	1926734	Condition	! ta	2887:6:90427:90429	1926618	0	True				
ANR	1926735	UnaryOperationExpression	! ta		1926618	0					
ANR	1926736	UnaryOperator	!		1926618	0					
ANR	1926737	Identifier	ta		1926618	1					
ANR	1926738	CompoundStatement		20:11:483:483	1926618	1					
ANR	1926739	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Invalid timestamp %pd"" , Z_LVAL_P ( data ) )"	2888:3:90437:90508	1926618	0	True				
ANR	1926740	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Invalid timestamp %pd"" , Z_LVAL_P ( data ) )"		1926618	0					
ANR	1926741	Callee	soap_error1		1926618	0					
ANR	1926742	Identifier	soap_error1		1926618	0					
ANR	1926743	ArgumentList	E_ERROR		1926618	1					
ANR	1926744	Argument	E_ERROR		1926618	0					
ANR	1926745	Identifier	E_ERROR		1926618	0					
ANR	1926746	Argument	"""Encoding: Invalid timestamp %pd"""		1926618	1					
ANR	1926747	PrimaryExpression	"""Encoding: Invalid timestamp %pd"""		1926618	0					
ANR	1926748	Argument	Z_LVAL_P ( data )		1926618	2					
ANR	1926749	CallExpression	Z_LVAL_P ( data )		1926618	0					
ANR	1926750	Callee	Z_LVAL_P		1926618	0					
ANR	1926751	Identifier	Z_LVAL_P		1926618	0					
ANR	1926752	ArgumentList	data		1926618	1					
ANR	1926753	Argument	data		1926618	0					
ANR	1926754	Identifier	data		1926618	0					
ANR	1926755	ExpressionStatement	buf = ( char * ) emalloc ( buf_len )	2891:2:90517:90548	1926618	3	True				
ANR	1926756	AssignmentExpression	buf = ( char * ) emalloc ( buf_len )		1926618	0		=			
ANR	1926757	Identifier	buf		1926618	0					
ANR	1926758	CastExpression	( char * ) emalloc ( buf_len )		1926618	1					
ANR	1926759	CastTarget	char *		1926618	0					
ANR	1926760	CallExpression	emalloc ( buf_len )		1926618	1					
ANR	1926761	Callee	emalloc		1926618	0					
ANR	1926762	Identifier	emalloc		1926618	0					
ANR	1926763	ArgumentList	buf_len		1926618	1					
ANR	1926764	Argument	buf_len		1926618	0					
ANR	1926765	Identifier	buf_len		1926618	0					
ANR	1926766	WhileStatement	"while ( ( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len || real_len == 0 )"		1926618	4					
ANR	1926767	Condition	"( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len || real_len == 0"	2892:9:90559:90633	1926618	0	True				
ANR	1926768	OrExpression	"( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len || real_len == 0"		1926618	0		||			
ANR	1926769	EqualityExpression	"( real_len = strftime ( buf , buf_len , format , ta ) ) == buf_len"		1926618	0		==			
ANR	1926770	AssignmentExpression	"real_len = strftime ( buf , buf_len , format , ta )"		1926618	0		=			
ANR	1926771	Identifier	real_len		1926618	0					
ANR	1926772	CallExpression	"strftime ( buf , buf_len , format , ta )"		1926618	1					
ANR	1926773	Callee	strftime		1926618	0					
ANR	1926774	Identifier	strftime		1926618	0					
ANR	1926775	ArgumentList	buf		1926618	1					
ANR	1926776	Argument	buf		1926618	0					
ANR	1926777	Identifier	buf		1926618	0					
ANR	1926778	Argument	buf_len		1926618	1					
ANR	1926779	Identifier	buf_len		1926618	0					
ANR	1926780	Argument	format		1926618	2					
ANR	1926781	Identifier	format		1926618	0					
ANR	1926782	Argument	ta		1926618	3					
ANR	1926783	Identifier	ta		1926618	0					
ANR	1926784	Identifier	buf_len		1926618	1					
ANR	1926785	EqualityExpression	real_len == 0		1926618	1		==			
ANR	1926786	Identifier	real_len		1926618	0					
ANR	1926787	PrimaryExpression	0		1926618	1					
ANR	1926788	CompoundStatement		25:86:687:687	1926618	1					
ANR	1926789	ExpressionStatement	buf_len *= 2	2893:3:90641:90653	1926618	0	True				
ANR	1926790	AssignmentExpression	buf_len *= 2		1926618	0		*=			
ANR	1926791	Identifier	buf_len		1926618	0					
ANR	1926792	PrimaryExpression	2		1926618	1					
ANR	1926793	ExpressionStatement	"buf = ( char * ) erealloc ( buf , buf_len )"	2894:3:90658:90695	1926618	1	True				
ANR	1926794	AssignmentExpression	"buf = ( char * ) erealloc ( buf , buf_len )"		1926618	0		=			
ANR	1926795	Identifier	buf		1926618	0					
ANR	1926796	CastExpression	"( char * ) erealloc ( buf , buf_len )"		1926618	1					
ANR	1926797	CastTarget	char *		1926618	0					
ANR	1926798	CallExpression	"erealloc ( buf , buf_len )"		1926618	1					
ANR	1926799	Callee	erealloc		1926618	0					
ANR	1926800	Identifier	erealloc		1926618	0					
ANR	1926801	ArgumentList	buf		1926618	1					
ANR	1926802	Argument	buf		1926618	0					
ANR	1926803	Identifier	buf		1926618	0					
ANR	1926804	Argument	buf_len		1926618	1					
ANR	1926805	Identifier	buf_len		1926618	0					
ANR	1926806	IfStatement	if ( ! -- max_reallocs )		1926618	2					
ANR	1926807	Condition	! -- max_reallocs	2895:7:90704:90718	1926618	0	True				
ANR	1926808	UnaryOperationExpression	! -- max_reallocs		1926618	0					
ANR	1926809	UnaryOperator	!		1926618	0					
ANR	1926810	UnaryExpression	-- max_reallocs		1926618	1					
ANR	1926811	IncDec	--		1926618	0					
ANR	1926812	Identifier	max_reallocs		1926618	1					
ANR	1926813	BreakStatement	break ;	2895:24:90721:90726	1926618	1	True				
ANR	1926814	ExpressionStatement	"snprintf ( tzbuf , sizeof ( tzbuf ) , ""%c%02d:%02d"" , ( ta -> tm_gmtoff < 0 ) ? '-' : '+' , abs ( ta -> tm_gmtoff / 3600 ) , abs ( ( ta -> tm_gmtoff % 3600 ) / 60 ) )"	2900:2:90783:90924	1926618	5	True				
ANR	1926815	CallExpression	"snprintf ( tzbuf , sizeof ( tzbuf ) , ""%c%02d:%02d"" , ( ta -> tm_gmtoff < 0 ) ? '-' : '+' , abs ( ta -> tm_gmtoff / 3600 ) , abs ( ( ta -> tm_gmtoff % 3600 ) / 60 ) )"		1926618	0					
ANR	1926816	Callee	snprintf		1926618	0					
ANR	1926817	Identifier	snprintf		1926618	0					
ANR	1926818	ArgumentList	tzbuf		1926618	1					
ANR	1926819	Argument	tzbuf		1926618	0					
ANR	1926820	Identifier	tzbuf		1926618	0					
ANR	1926821	Argument	sizeof ( tzbuf )		1926618	1					
ANR	1926822	SizeofExpression	sizeof ( tzbuf )		1926618	0					
ANR	1926823	Sizeof	sizeof		1926618	0					
ANR	1926824	SizeofOperand	tzbuf		1926618	1					
ANR	1926825	Argument	"""%c%02d:%02d"""		1926618	2					
ANR	1926826	PrimaryExpression	"""%c%02d:%02d"""		1926618	0					
ANR	1926827	Argument	( ta -> tm_gmtoff < 0 ) ? '-' : '+'		1926618	3					
ANR	1926828	ConditionalExpression	( ta -> tm_gmtoff < 0 ) ? '-' : '+'		1926618	0					
ANR	1926829	Condition	ta -> tm_gmtoff < 0		1926618	0					
ANR	1926830	RelationalExpression	ta -> tm_gmtoff < 0		1926618	0		<			
ANR	1926831	PtrMemberAccess	ta -> tm_gmtoff		1926618	0					
ANR	1926832	Identifier	ta		1926618	0					
ANR	1926833	Identifier	tm_gmtoff		1926618	1					
ANR	1926834	PrimaryExpression	0		1926618	1					
ANR	1926835	PrimaryExpression	'-'		1926618	1					
ANR	1926836	PrimaryExpression	'+'		1926618	2					
ANR	1926837	Argument	abs ( ta -> tm_gmtoff / 3600 )		1926618	4					
ANR	1926838	CallExpression	abs ( ta -> tm_gmtoff / 3600 )		1926618	0					
ANR	1926839	Callee	abs		1926618	0					
ANR	1926840	Identifier	abs		1926618	0					
ANR	1926841	ArgumentList	ta -> tm_gmtoff / 3600		1926618	1					
ANR	1926842	Argument	ta -> tm_gmtoff / 3600		1926618	0					
ANR	1926843	MultiplicativeExpression	ta -> tm_gmtoff / 3600		1926618	0		/			
ANR	1926844	PtrMemberAccess	ta -> tm_gmtoff		1926618	0					
ANR	1926845	Identifier	ta		1926618	0					
ANR	1926846	Identifier	tm_gmtoff		1926618	1					
ANR	1926847	PrimaryExpression	3600		1926618	1					
ANR	1926848	Argument	abs ( ( ta -> tm_gmtoff % 3600 ) / 60 )		1926618	5					
ANR	1926849	CallExpression	abs ( ( ta -> tm_gmtoff % 3600 ) / 60 )		1926618	0					
ANR	1926850	Callee	abs		1926618	0					
ANR	1926851	Identifier	abs		1926618	0					
ANR	1926852	ArgumentList	( ta -> tm_gmtoff % 3600 ) / 60		1926618	1					
ANR	1926853	Argument	( ta -> tm_gmtoff % 3600 ) / 60		1926618	0					
ANR	1926854	MultiplicativeExpression	( ta -> tm_gmtoff % 3600 ) / 60		1926618	0		/			
ANR	1926855	MultiplicativeExpression	ta -> tm_gmtoff % 3600		1926618	0		%			
ANR	1926856	PtrMemberAccess	ta -> tm_gmtoff		1926618	0					
ANR	1926857	Identifier	ta		1926618	0					
ANR	1926858	Identifier	tm_gmtoff		1926618	1					
ANR	1926859	PrimaryExpression	3600		1926618	1					
ANR	1926860	PrimaryExpression	60		1926618	1					
ANR	1926861	IfStatement	"if ( strcmp ( tzbuf , ""+00:00"" ) == 0 )"		1926618	6					
ANR	1926862	Condition	"strcmp ( tzbuf , ""+00:00"" ) == 0"	2908:6:91526:91552	1926618	0	True				
ANR	1926863	EqualityExpression	"strcmp ( tzbuf , ""+00:00"" ) == 0"		1926618	0		==			
ANR	1926864	CallExpression	"strcmp ( tzbuf , ""+00:00"" )"		1926618	0					
ANR	1926865	Callee	strcmp		1926618	0					
ANR	1926866	Identifier	strcmp		1926618	0					
ANR	1926867	ArgumentList	tzbuf		1926618	1					
ANR	1926868	Argument	tzbuf		1926618	0					
ANR	1926869	Identifier	tzbuf		1926618	0					
ANR	1926870	Argument	"""+00:00"""		1926618	1					
ANR	1926871	PrimaryExpression	"""+00:00"""		1926618	0					
ANR	1926872	PrimaryExpression	0		1926618	1					
ANR	1926873	CompoundStatement		41:35:1606:1606	1926618	1					
ANR	1926874	ExpressionStatement	"strcpy ( tzbuf , ""Z"" )"	2909:4:91561:91578	1926618	0	True				
ANR	1926875	CallExpression	"strcpy ( tzbuf , ""Z"" )"		1926618	0					
ANR	1926876	Callee	strcpy		1926618	0					
ANR	1926877	Identifier	strcpy		1926618	0					
ANR	1926878	ArgumentList	tzbuf		1926618	1					
ANR	1926879	Argument	tzbuf		1926618	0					
ANR	1926880	Identifier	tzbuf		1926618	0					
ANR	1926881	Argument	"""Z"""		1926618	1					
ANR	1926882	PrimaryExpression	"""Z"""		1926618	0					
ANR	1926883	ExpressionStatement	real_len ++	2910:4:91584:91594	1926618	1	True				
ANR	1926884	PostIncDecOperationExpression	real_len ++		1926618	0					
ANR	1926885	Identifier	real_len		1926618	0					
ANR	1926886	IncDec	++		1926618	1					
ANR	1926887	ElseStatement	else		1926618	0					
ANR	1926888	CompoundStatement		44:9:1656:1656	1926618	0					
ANR	1926889	ExpressionStatement	real_len += 6	2912:3:91610:91623	1926618	0	True				
ANR	1926890	AssignmentExpression	real_len += 6		1926618	0		+=			
ANR	1926891	Identifier	real_len		1926618	0					
ANR	1926892	PrimaryExpression	6		1926618	1					
ANR	1926893	IfStatement	if ( real_len >= buf_len )		1926618	7					
ANR	1926894	Condition	real_len >= buf_len	2914:6:91635:91653	1926618	0	True				
ANR	1926895	RelationalExpression	real_len >= buf_len		1926618	0		>=			
ANR	1926896	Identifier	real_len		1926618	0					
ANR	1926897	Identifier	buf_len		1926618	1					
ANR	1926898	CompoundStatement		47:27:1707:1707	1926618	1					
ANR	1926899	ExpressionStatement	"buf = ( char * ) erealloc ( buf , real_len + 1 )"	2915:3:91661:91701	1926618	0	True				
ANR	1926900	AssignmentExpression	"buf = ( char * ) erealloc ( buf , real_len + 1 )"		1926618	0		=			
ANR	1926901	Identifier	buf		1926618	0					
ANR	1926902	CastExpression	"( char * ) erealloc ( buf , real_len + 1 )"		1926618	1					
ANR	1926903	CastTarget	char *		1926618	0					
ANR	1926904	CallExpression	"erealloc ( buf , real_len + 1 )"		1926618	1					
ANR	1926905	Callee	erealloc		1926618	0					
ANR	1926906	Identifier	erealloc		1926618	0					
ANR	1926907	ArgumentList	buf		1926618	1					
ANR	1926908	Argument	buf		1926618	0					
ANR	1926909	Identifier	buf		1926618	0					
ANR	1926910	Argument	real_len + 1		1926618	1					
ANR	1926911	AdditiveExpression	real_len + 1		1926618	0		+			
ANR	1926912	Identifier	real_len		1926618	0					
ANR	1926913	PrimaryExpression	1		1926618	1					
ANR	1926914	ExpressionStatement	"strcat ( buf , tzbuf )"	2917:2:91709:91727	1926618	8	True				
ANR	1926915	CallExpression	"strcat ( buf , tzbuf )"		1926618	0					
ANR	1926916	Callee	strcat		1926618	0					
ANR	1926917	Identifier	strcat		1926618	0					
ANR	1926918	ArgumentList	buf		1926618	1					
ANR	1926919	Argument	buf		1926618	0					
ANR	1926920	Identifier	buf		1926618	0					
ANR	1926921	Argument	tzbuf		1926618	1					
ANR	1926922	Identifier	tzbuf		1926618	0					
ANR	1926923	ExpressionStatement	"xmlNodeSetContent ( xmlParam , BAD_CAST ( buf ) )"	2919:2:91732:91774	1926618	9	True				
ANR	1926924	CallExpression	"xmlNodeSetContent ( xmlParam , BAD_CAST ( buf ) )"		1926618	0					
ANR	1926925	Callee	xmlNodeSetContent		1926618	0					
ANR	1926926	Identifier	xmlNodeSetContent		1926618	0					
ANR	1926927	ArgumentList	xmlParam		1926618	1					
ANR	1926928	Argument	xmlParam		1926618	0					
ANR	1926929	Identifier	xmlParam		1926618	0					
ANR	1926930	Argument	BAD_CAST ( buf )		1926618	1					
ANR	1926931	CallExpression	BAD_CAST ( buf )		1926618	0					
ANR	1926932	Callee	BAD_CAST		1926618	0					
ANR	1926933	Identifier	BAD_CAST		1926618	0					
ANR	1926934	ArgumentList	buf		1926618	1					
ANR	1926935	Argument	buf		1926618	0					
ANR	1926936	Identifier	buf		1926618	0					
ANR	1926937	ExpressionStatement	efree ( buf )	2920:2:91778:91788	1926618	10	True				
ANR	1926938	CallExpression	efree ( buf )		1926618	0					
ANR	1926939	Callee	efree		1926618	0					
ANR	1926940	Identifier	efree		1926618	0					
ANR	1926941	ArgumentList	buf		1926618	1					
ANR	1926942	Argument	buf		1926618	0					
ANR	1926943	Identifier	buf		1926618	0					
ANR	1926944	ElseStatement	else		1926618	0					
ANR	1926945	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1926618	0					
ANR	1926946	Condition	Z_TYPE_P ( data ) == IS_STRING	2921:12:91802:91828	1926618	0	True				
ANR	1926947	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1926618	0		==			
ANR	1926948	CallExpression	Z_TYPE_P ( data )		1926618	0					
ANR	1926949	Callee	Z_TYPE_P		1926618	0					
ANR	1926950	Identifier	Z_TYPE_P		1926618	0					
ANR	1926951	ArgumentList	data		1926618	1					
ANR	1926952	Argument	data		1926618	0					
ANR	1926953	Identifier	data		1926618	0					
ANR	1926954	Identifier	IS_STRING		1926618	1					
ANR	1926955	CompoundStatement		54:41:1882:1882	1926618	1					
ANR	1926956	ExpressionStatement	"xmlNodeSetContentLen ( xmlParam , BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"	2922:2:91835:91911	1926618	0	True				
ANR	1926957	CallExpression	"xmlNodeSetContentLen ( xmlParam , BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"		1926618	0					
ANR	1926958	Callee	xmlNodeSetContentLen		1926618	0					
ANR	1926959	Identifier	xmlNodeSetContentLen		1926618	0					
ANR	1926960	ArgumentList	xmlParam		1926618	1					
ANR	1926961	Argument	xmlParam		1926618	0					
ANR	1926962	Identifier	xmlParam		1926618	0					
ANR	1926963	Argument	BAD_CAST ( Z_STRVAL_P ( data ) )		1926618	1					
ANR	1926964	CallExpression	BAD_CAST ( Z_STRVAL_P ( data ) )		1926618	0					
ANR	1926965	Callee	BAD_CAST		1926618	0					
ANR	1926966	Identifier	BAD_CAST		1926618	0					
ANR	1926967	ArgumentList	Z_STRVAL_P ( data )		1926618	1					
ANR	1926968	Argument	Z_STRVAL_P ( data )		1926618	0					
ANR	1926969	CallExpression	Z_STRVAL_P ( data )		1926618	0					
ANR	1926970	Callee	Z_STRVAL_P		1926618	0					
ANR	1926971	Identifier	Z_STRVAL_P		1926618	0					
ANR	1926972	ArgumentList	data		1926618	1					
ANR	1926973	Argument	data		1926618	0					
ANR	1926974	Identifier	data		1926618	0					
ANR	1926975	Argument	Z_STRLEN_P ( data )		1926618	2					
ANR	1926976	CallExpression	Z_STRLEN_P ( data )		1926618	0					
ANR	1926977	Callee	Z_STRLEN_P		1926618	0					
ANR	1926978	Identifier	Z_STRLEN_P		1926618	0					
ANR	1926979	ArgumentList	data		1926618	1					
ANR	1926980	Argument	data		1926618	0					
ANR	1926981	Identifier	data		1926618	0					
ANR	1926982	IfStatement	if ( style == SOAP_ENCODED )		1926618	11					
ANR	1926983	Condition	style == SOAP_ENCODED	2925:5:91922:91942	1926618	0	True				
ANR	1926984	EqualityExpression	style == SOAP_ENCODED		1926618	0		==			
ANR	1926985	Identifier	style		1926618	0					
ANR	1926986	Identifier	SOAP_ENCODED		1926618	1					
ANR	1926987	CompoundStatement		58:28:1996:1996	1926618	1					
ANR	1926988	ExpressionStatement	"set_ns_and_type ( xmlParam , type )"	2926:2:91949:91980	1926618	0	True				
ANR	1926989	CallExpression	"set_ns_and_type ( xmlParam , type )"		1926618	0					
ANR	1926990	Callee	set_ns_and_type		1926618	0					
ANR	1926991	Identifier	set_ns_and_type		1926618	0					
ANR	1926992	ArgumentList	xmlParam		1926618	1					
ANR	1926993	Argument	xmlParam		1926618	0					
ANR	1926994	Identifier	xmlParam		1926618	0					
ANR	1926995	Argument	type		1926618	1					
ANR	1926996	Identifier	type		1926618	0					
ANR	1926997	ReturnStatement	return xmlParam ;	2928:1:91986:92001	1926618	12	True				
ANR	1926998	Identifier	xmlParam		1926618	0					
ANR	1926999	ReturnType	static xmlNodePtr		1926618	1					
ANR	1927000	Identifier	to_xml_datetime_ex		1926618	2					
ANR	1927001	ParameterList	"encodeTypePtr type , zval * data , char * format , int style , xmlNodePtr parent"		1926618	3					
ANR	1927002	Parameter	encodeTypePtr type	2867:37:89872:89889	1926618	0	True				
ANR	1927003	ParameterType	encodeTypePtr		1926618	0					
ANR	1927004	Identifier	type		1926618	1					
ANR	1927005	Parameter	zval * data	2867:57:89892:89901	1926618	1	True				
ANR	1927006	ParameterType	zval *		1926618	0					
ANR	1927007	Identifier	data		1926618	1					
ANR	1927008	Parameter	char * format	2867:69:89904:89915	1926618	2	True				
ANR	1927009	ParameterType	char *		1926618	0					
ANR	1927010	Identifier	format		1926618	1					
ANR	1927011	Parameter	int style	2867:83:89918:89926	1926618	3	True				
ANR	1927012	ParameterType	int		1926618	0					
ANR	1927013	Identifier	style		1926618	1					
ANR	1927014	Parameter	xmlNodePtr parent	2867:94:89929:89945	1926618	4	True				
ANR	1927015	ParameterType	xmlNodePtr		1926618	0					
ANR	1927016	Identifier	parent		1926618	1					
ANR	1927017	CFGEntryNode	ENTRY		1926618		True				
ANR	1927018	CFGExitNode	EXIT		1926618		True				
ANR	1927019	Symbol	parent		1926618						
ANR	1927020	Symbol	xmlParam		1926618						
ANR	1927021	Symbol	data		1926618						
ANR	1927022	Symbol	type		1926618						
ANR	1927023	Symbol	tmbuf		1926618						
ANR	1927024	Symbol	emalloc		1926618						
ANR	1927025	Symbol	IS_LONG		1926618						
ANR	1927026	Symbol	buf_len		1926618						
ANR	1927027	Symbol	Z_STRLEN_P		1926618						
ANR	1927028	Symbol	IS_STRING		1926618						
ANR	1927029	Symbol	erealloc		1926618						
ANR	1927030	Symbol	timestamp		1926618						
ANR	1927031	Symbol	strcmp		1926618						
ANR	1927032	Symbol	NULL		1926618						
ANR	1927033	Symbol	php_localtime_r		1926618						
ANR	1927034	Symbol	ta -> tm_gmtoff		1926618						
ANR	1927035	Symbol	format		1926618						
ANR	1927036	Symbol	xmlNewNode		1926618						
ANR	1927037	Symbol	Z_TYPE_P		1926618						
ANR	1927038	Symbol	ta		1926618						
ANR	1927039	Symbol	Z_STRVAL_P		1926618						
ANR	1927040	Symbol	max_reallocs		1926618						
ANR	1927041	Symbol	Z_LVAL_P		1926618						
ANR	1927042	Symbol	* ta		1926618						
ANR	1927043	Symbol	buf		1926618						
ANR	1927044	Symbol	E_ERROR		1926618						
ANR	1927045	Symbol	abs		1926618						
ANR	1927046	Symbol	real_len		1926618						
ANR	1927047	Symbol	strftime		1926618						
ANR	1927048	Symbol	& timestamp		1926618						
ANR	1927049	Symbol	tzbuf		1926618						
ANR	1927050	Symbol	style		1926618						
ANR	1927051	Symbol	SOAP_ENCODED		1926618						
ANR	1927052	Symbol	& tmbuf		1926618						
ANR	1927053	Symbol	BAD_CAST		1926618						
ANR	1927054	Function	to_xml_duration	2931:0:92006:92234							
ANR	1927055	FunctionDef	"to_xml_duration (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927054	0					
ANR	1927056	CompoundStatement		2932:0:92102:92234	1927054	0					
ANR	1927057	ReturnStatement	"return to_xml_string ( type , data , style , parent ) ;"	2934:1:92185:92232	1927054	0	True				
ANR	1927058	CallExpression	"to_xml_string ( type , data , style , parent )"		1927054	0					
ANR	1927059	Callee	to_xml_string		1927054	0					
ANR	1927060	Identifier	to_xml_string		1927054	0					
ANR	1927061	ArgumentList	type		1927054	1					
ANR	1927062	Argument	type		1927054	0					
ANR	1927063	Identifier	type		1927054	0					
ANR	1927064	Argument	data		1927054	1					
ANR	1927065	Identifier	data		1927054	0					
ANR	1927066	Argument	style		1927054	2					
ANR	1927067	Identifier	style		1927054	0					
ANR	1927068	Argument	parent		1927054	3					
ANR	1927069	Identifier	parent		1927054	0					
ANR	1927070	ReturnType	static xmlNodePtr		1927054	1					
ANR	1927071	Identifier	to_xml_duration		1927054	2					
ANR	1927072	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927054	3					
ANR	1927073	Parameter	encodeTypePtr type	2931:34:92040:92057	1927054	0	True				
ANR	1927074	ParameterType	encodeTypePtr		1927054	0					
ANR	1927075	Identifier	type		1927054	1					
ANR	1927076	Parameter	zval * data	2931:54:92060:92069	1927054	1	True				
ANR	1927077	ParameterType	zval *		1927054	0					
ANR	1927078	Identifier	data		1927054	1					
ANR	1927079	Parameter	int style	2931:66:92072:92080	1927054	2	True				
ANR	1927080	ParameterType	int		1927054	0					
ANR	1927081	Identifier	style		1927054	1					
ANR	1927082	Parameter	xmlNodePtr parent	2931:77:92083:92099	1927054	3	True				
ANR	1927083	ParameterType	xmlNodePtr		1927054	0					
ANR	1927084	Identifier	parent		1927054	1					
ANR	1927085	CFGEntryNode	ENTRY		1927054		True				
ANR	1927086	CFGExitNode	EXIT		1927054		True				
ANR	1927087	Symbol	parent		1927054						
ANR	1927088	Symbol	data		1927054						
ANR	1927089	Symbol	to_xml_string		1927054						
ANR	1927090	Symbol	style		1927054						
ANR	1927091	Symbol	type		1927054						
ANR	1927092	Function	to_xml_datetime	2937:0:92237:92411							
ANR	1927093	FunctionDef	"to_xml_datetime (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927092	0					
ANR	1927094	CompoundStatement		2938:0:92333:92411	1927092	0					
ANR	1927095	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""%Y-%m-%dT%H:%M:%S"" , style , parent ) ;"	2939:1:92336:92409	1927092	0	True				
ANR	1927096	CallExpression	"to_xml_datetime_ex ( type , data , ""%Y-%m-%dT%H:%M:%S"" , style , parent )"		1927092	0					
ANR	1927097	Callee	to_xml_datetime_ex		1927092	0					
ANR	1927098	Identifier	to_xml_datetime_ex		1927092	0					
ANR	1927099	ArgumentList	type		1927092	1					
ANR	1927100	Argument	type		1927092	0					
ANR	1927101	Identifier	type		1927092	0					
ANR	1927102	Argument	data		1927092	1					
ANR	1927103	Identifier	data		1927092	0					
ANR	1927104	Argument	"""%Y-%m-%dT%H:%M:%S"""		1927092	2					
ANR	1927105	PrimaryExpression	"""%Y-%m-%dT%H:%M:%S"""		1927092	0					
ANR	1927106	Argument	style		1927092	3					
ANR	1927107	Identifier	style		1927092	0					
ANR	1927108	Argument	parent		1927092	4					
ANR	1927109	Identifier	parent		1927092	0					
ANR	1927110	ReturnType	static xmlNodePtr		1927092	1					
ANR	1927111	Identifier	to_xml_datetime		1927092	2					
ANR	1927112	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927092	3					
ANR	1927113	Parameter	encodeTypePtr type	2937:34:92271:92288	1927092	0	True				
ANR	1927114	ParameterType	encodeTypePtr		1927092	0					
ANR	1927115	Identifier	type		1927092	1					
ANR	1927116	Parameter	zval * data	2937:54:92291:92300	1927092	1	True				
ANR	1927117	ParameterType	zval *		1927092	0					
ANR	1927118	Identifier	data		1927092	1					
ANR	1927119	Parameter	int style	2937:66:92303:92311	1927092	2	True				
ANR	1927120	ParameterType	int		1927092	0					
ANR	1927121	Identifier	style		1927092	1					
ANR	1927122	Parameter	xmlNodePtr parent	2937:77:92314:92330	1927092	3	True				
ANR	1927123	ParameterType	xmlNodePtr		1927092	0					
ANR	1927124	Identifier	parent		1927092	1					
ANR	1927125	CFGEntryNode	ENTRY		1927092		True				
ANR	1927126	CFGExitNode	EXIT		1927092		True				
ANR	1927127	Symbol	parent		1927092						
ANR	1927128	Symbol	data		1927092						
ANR	1927129	Symbol	style		1927092						
ANR	1927130	Symbol	to_xml_datetime_ex		1927092						
ANR	1927131	Symbol	type		1927092						
ANR	1927132	Function	to_xml_time	2942:0:92414:92602							
ANR	1927133	FunctionDef	"to_xml_time (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927132	0					
ANR	1927134	CompoundStatement		2943:0:92506:92602	1927132	0					
ANR	1927135	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""%H:%M:%S"" , style , parent ) ;"	2945:1:92536:92600	1927132	0	True				
ANR	1927136	CallExpression	"to_xml_datetime_ex ( type , data , ""%H:%M:%S"" , style , parent )"		1927132	0					
ANR	1927137	Callee	to_xml_datetime_ex		1927132	0					
ANR	1927138	Identifier	to_xml_datetime_ex		1927132	0					
ANR	1927139	ArgumentList	type		1927132	1					
ANR	1927140	Argument	type		1927132	0					
ANR	1927141	Identifier	type		1927132	0					
ANR	1927142	Argument	data		1927132	1					
ANR	1927143	Identifier	data		1927132	0					
ANR	1927144	Argument	"""%H:%M:%S"""		1927132	2					
ANR	1927145	PrimaryExpression	"""%H:%M:%S"""		1927132	0					
ANR	1927146	Argument	style		1927132	3					
ANR	1927147	Identifier	style		1927132	0					
ANR	1927148	Argument	parent		1927132	4					
ANR	1927149	Identifier	parent		1927132	0					
ANR	1927150	ReturnType	static xmlNodePtr		1927132	1					
ANR	1927151	Identifier	to_xml_time		1927132	2					
ANR	1927152	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927132	3					
ANR	1927153	Parameter	encodeTypePtr type	2942:30:92444:92461	1927132	0	True				
ANR	1927154	ParameterType	encodeTypePtr		1927132	0					
ANR	1927155	Identifier	type		1927132	1					
ANR	1927156	Parameter	zval * data	2942:50:92464:92473	1927132	1	True				
ANR	1927157	ParameterType	zval *		1927132	0					
ANR	1927158	Identifier	data		1927132	1					
ANR	1927159	Parameter	int style	2942:62:92476:92484	1927132	2	True				
ANR	1927160	ParameterType	int		1927132	0					
ANR	1927161	Identifier	style		1927132	1					
ANR	1927162	Parameter	xmlNodePtr parent	2942:73:92487:92503	1927132	3	True				
ANR	1927163	ParameterType	xmlNodePtr		1927132	0					
ANR	1927164	Identifier	parent		1927132	1					
ANR	1927165	CFGEntryNode	ENTRY		1927132		True				
ANR	1927166	CFGExitNode	EXIT		1927132		True				
ANR	1927167	Symbol	parent		1927132						
ANR	1927168	Symbol	data		1927132						
ANR	1927169	Symbol	style		1927132						
ANR	1927170	Symbol	to_xml_datetime_ex		1927132						
ANR	1927171	Symbol	type		1927132						
ANR	1927172	Function	to_xml_date	2948:0:92605:92766							
ANR	1927173	FunctionDef	"to_xml_date (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927172	0					
ANR	1927174	CompoundStatement		2949:0:92697:92766	1927172	0					
ANR	1927175	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""%Y-%m-%d"" , style , parent ) ;"	2950:1:92700:92764	1927172	0	True				
ANR	1927176	CallExpression	"to_xml_datetime_ex ( type , data , ""%Y-%m-%d"" , style , parent )"		1927172	0					
ANR	1927177	Callee	to_xml_datetime_ex		1927172	0					
ANR	1927178	Identifier	to_xml_datetime_ex		1927172	0					
ANR	1927179	ArgumentList	type		1927172	1					
ANR	1927180	Argument	type		1927172	0					
ANR	1927181	Identifier	type		1927172	0					
ANR	1927182	Argument	data		1927172	1					
ANR	1927183	Identifier	data		1927172	0					
ANR	1927184	Argument	"""%Y-%m-%d"""		1927172	2					
ANR	1927185	PrimaryExpression	"""%Y-%m-%d"""		1927172	0					
ANR	1927186	Argument	style		1927172	3					
ANR	1927187	Identifier	style		1927172	0					
ANR	1927188	Argument	parent		1927172	4					
ANR	1927189	Identifier	parent		1927172	0					
ANR	1927190	ReturnType	static xmlNodePtr		1927172	1					
ANR	1927191	Identifier	to_xml_date		1927172	2					
ANR	1927192	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927172	3					
ANR	1927193	Parameter	encodeTypePtr type	2948:30:92635:92652	1927172	0	True				
ANR	1927194	ParameterType	encodeTypePtr		1927172	0					
ANR	1927195	Identifier	type		1927172	1					
ANR	1927196	Parameter	zval * data	2948:50:92655:92664	1927172	1	True				
ANR	1927197	ParameterType	zval *		1927172	0					
ANR	1927198	Identifier	data		1927172	1					
ANR	1927199	Parameter	int style	2948:62:92667:92675	1927172	2	True				
ANR	1927200	ParameterType	int		1927172	0					
ANR	1927201	Identifier	style		1927172	1					
ANR	1927202	Parameter	xmlNodePtr parent	2948:73:92678:92694	1927172	3	True				
ANR	1927203	ParameterType	xmlNodePtr		1927172	0					
ANR	1927204	Identifier	parent		1927172	1					
ANR	1927205	CFGEntryNode	ENTRY		1927172		True				
ANR	1927206	CFGExitNode	EXIT		1927172		True				
ANR	1927207	Symbol	parent		1927172						
ANR	1927208	Symbol	data		1927172						
ANR	1927209	Symbol	style		1927172						
ANR	1927210	Symbol	to_xml_datetime_ex		1927172						
ANR	1927211	Symbol	type		1927172						
ANR	1927212	Function	to_xml_gyearmonth	2953:0:92769:92933							
ANR	1927213	FunctionDef	"to_xml_gyearmonth (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927212	0					
ANR	1927214	CompoundStatement		2954:0:92867:92933	1927212	0					
ANR	1927215	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""%Y-%m"" , style , parent ) ;"	2955:1:92870:92931	1927212	0	True				
ANR	1927216	CallExpression	"to_xml_datetime_ex ( type , data , ""%Y-%m"" , style , parent )"		1927212	0					
ANR	1927217	Callee	to_xml_datetime_ex		1927212	0					
ANR	1927218	Identifier	to_xml_datetime_ex		1927212	0					
ANR	1927219	ArgumentList	type		1927212	1					
ANR	1927220	Argument	type		1927212	0					
ANR	1927221	Identifier	type		1927212	0					
ANR	1927222	Argument	data		1927212	1					
ANR	1927223	Identifier	data		1927212	0					
ANR	1927224	Argument	"""%Y-%m"""		1927212	2					
ANR	1927225	PrimaryExpression	"""%Y-%m"""		1927212	0					
ANR	1927226	Argument	style		1927212	3					
ANR	1927227	Identifier	style		1927212	0					
ANR	1927228	Argument	parent		1927212	4					
ANR	1927229	Identifier	parent		1927212	0					
ANR	1927230	ReturnType	static xmlNodePtr		1927212	1					
ANR	1927231	Identifier	to_xml_gyearmonth		1927212	2					
ANR	1927232	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927212	3					
ANR	1927233	Parameter	encodeTypePtr type	2953:36:92805:92822	1927212	0	True				
ANR	1927234	ParameterType	encodeTypePtr		1927212	0					
ANR	1927235	Identifier	type		1927212	1					
ANR	1927236	Parameter	zval * data	2953:56:92825:92834	1927212	1	True				
ANR	1927237	ParameterType	zval *		1927212	0					
ANR	1927238	Identifier	data		1927212	1					
ANR	1927239	Parameter	int style	2953:68:92837:92845	1927212	2	True				
ANR	1927240	ParameterType	int		1927212	0					
ANR	1927241	Identifier	style		1927212	1					
ANR	1927242	Parameter	xmlNodePtr parent	2953:79:92848:92864	1927212	3	True				
ANR	1927243	ParameterType	xmlNodePtr		1927212	0					
ANR	1927244	Identifier	parent		1927212	1					
ANR	1927245	CFGEntryNode	ENTRY		1927212		True				
ANR	1927246	CFGExitNode	EXIT		1927212		True				
ANR	1927247	Symbol	parent		1927212						
ANR	1927248	Symbol	data		1927212						
ANR	1927249	Symbol	style		1927212						
ANR	1927250	Symbol	to_xml_datetime_ex		1927212						
ANR	1927251	Symbol	type		1927212						
ANR	1927252	Function	to_xml_gyear	2958:0:92936:93092							
ANR	1927253	FunctionDef	"to_xml_gyear (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927252	0					
ANR	1927254	CompoundStatement		2959:0:93029:93092	1927252	0					
ANR	1927255	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""%Y"" , style , parent ) ;"	2960:1:93032:93090	1927252	0	True				
ANR	1927256	CallExpression	"to_xml_datetime_ex ( type , data , ""%Y"" , style , parent )"		1927252	0					
ANR	1927257	Callee	to_xml_datetime_ex		1927252	0					
ANR	1927258	Identifier	to_xml_datetime_ex		1927252	0					
ANR	1927259	ArgumentList	type		1927252	1					
ANR	1927260	Argument	type		1927252	0					
ANR	1927261	Identifier	type		1927252	0					
ANR	1927262	Argument	data		1927252	1					
ANR	1927263	Identifier	data		1927252	0					
ANR	1927264	Argument	"""%Y"""		1927252	2					
ANR	1927265	PrimaryExpression	"""%Y"""		1927252	0					
ANR	1927266	Argument	style		1927252	3					
ANR	1927267	Identifier	style		1927252	0					
ANR	1927268	Argument	parent		1927252	4					
ANR	1927269	Identifier	parent		1927252	0					
ANR	1927270	ReturnType	static xmlNodePtr		1927252	1					
ANR	1927271	Identifier	to_xml_gyear		1927252	2					
ANR	1927272	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927252	3					
ANR	1927273	Parameter	encodeTypePtr type	2958:31:92967:92984	1927252	0	True				
ANR	1927274	ParameterType	encodeTypePtr		1927252	0					
ANR	1927275	Identifier	type		1927252	1					
ANR	1927276	Parameter	zval * data	2958:51:92987:92996	1927252	1	True				
ANR	1927277	ParameterType	zval *		1927252	0					
ANR	1927278	Identifier	data		1927252	1					
ANR	1927279	Parameter	int style	2958:63:92999:93007	1927252	2	True				
ANR	1927280	ParameterType	int		1927252	0					
ANR	1927281	Identifier	style		1927252	1					
ANR	1927282	Parameter	xmlNodePtr parent	2958:74:93010:93026	1927252	3	True				
ANR	1927283	ParameterType	xmlNodePtr		1927252	0					
ANR	1927284	Identifier	parent		1927252	1					
ANR	1927285	CFGEntryNode	ENTRY		1927252		True				
ANR	1927286	CFGExitNode	EXIT		1927252		True				
ANR	1927287	Symbol	parent		1927252						
ANR	1927288	Symbol	data		1927252						
ANR	1927289	Symbol	style		1927252						
ANR	1927290	Symbol	to_xml_datetime_ex		1927252						
ANR	1927291	Symbol	type		1927252						
ANR	1927292	Function	to_xml_gmonthday	2963:0:93095:93260							
ANR	1927293	FunctionDef	"to_xml_gmonthday (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927292	0					
ANR	1927294	CompoundStatement		2964:0:93192:93260	1927292	0					
ANR	1927295	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""--%m-%d"" , style , parent ) ;"	2965:1:93195:93258	1927292	0	True				
ANR	1927296	CallExpression	"to_xml_datetime_ex ( type , data , ""--%m-%d"" , style , parent )"		1927292	0					
ANR	1927297	Callee	to_xml_datetime_ex		1927292	0					
ANR	1927298	Identifier	to_xml_datetime_ex		1927292	0					
ANR	1927299	ArgumentList	type		1927292	1					
ANR	1927300	Argument	type		1927292	0					
ANR	1927301	Identifier	type		1927292	0					
ANR	1927302	Argument	data		1927292	1					
ANR	1927303	Identifier	data		1927292	0					
ANR	1927304	Argument	"""--%m-%d"""		1927292	2					
ANR	1927305	PrimaryExpression	"""--%m-%d"""		1927292	0					
ANR	1927306	Argument	style		1927292	3					
ANR	1927307	Identifier	style		1927292	0					
ANR	1927308	Argument	parent		1927292	4					
ANR	1927309	Identifier	parent		1927292	0					
ANR	1927310	ReturnType	static xmlNodePtr		1927292	1					
ANR	1927311	Identifier	to_xml_gmonthday		1927292	2					
ANR	1927312	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927292	3					
ANR	1927313	Parameter	encodeTypePtr type	2963:35:93130:93147	1927292	0	True				
ANR	1927314	ParameterType	encodeTypePtr		1927292	0					
ANR	1927315	Identifier	type		1927292	1					
ANR	1927316	Parameter	zval * data	2963:55:93150:93159	1927292	1	True				
ANR	1927317	ParameterType	zval *		1927292	0					
ANR	1927318	Identifier	data		1927292	1					
ANR	1927319	Parameter	int style	2963:67:93162:93170	1927292	2	True				
ANR	1927320	ParameterType	int		1927292	0					
ANR	1927321	Identifier	style		1927292	1					
ANR	1927322	Parameter	xmlNodePtr parent	2963:78:93173:93189	1927292	3	True				
ANR	1927323	ParameterType	xmlNodePtr		1927292	0					
ANR	1927324	Identifier	parent		1927292	1					
ANR	1927325	CFGEntryNode	ENTRY		1927292		True				
ANR	1927326	CFGExitNode	EXIT		1927292		True				
ANR	1927327	Symbol	parent		1927292						
ANR	1927328	Symbol	data		1927292						
ANR	1927329	Symbol	style		1927292						
ANR	1927330	Symbol	to_xml_datetime_ex		1927292						
ANR	1927331	Symbol	type		1927292						
ANR	1927332	Function	to_xml_gday	2968:0:93263:93421							
ANR	1927333	FunctionDef	"to_xml_gday (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927332	0					
ANR	1927334	CompoundStatement		2969:0:93355:93421	1927332	0					
ANR	1927335	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""---%d"" , style , parent ) ;"	2970:1:93358:93419	1927332	0	True				
ANR	1927336	CallExpression	"to_xml_datetime_ex ( type , data , ""---%d"" , style , parent )"		1927332	0					
ANR	1927337	Callee	to_xml_datetime_ex		1927332	0					
ANR	1927338	Identifier	to_xml_datetime_ex		1927332	0					
ANR	1927339	ArgumentList	type		1927332	1					
ANR	1927340	Argument	type		1927332	0					
ANR	1927341	Identifier	type		1927332	0					
ANR	1927342	Argument	data		1927332	1					
ANR	1927343	Identifier	data		1927332	0					
ANR	1927344	Argument	"""---%d"""		1927332	2					
ANR	1927345	PrimaryExpression	"""---%d"""		1927332	0					
ANR	1927346	Argument	style		1927332	3					
ANR	1927347	Identifier	style		1927332	0					
ANR	1927348	Argument	parent		1927332	4					
ANR	1927349	Identifier	parent		1927332	0					
ANR	1927350	ReturnType	static xmlNodePtr		1927332	1					
ANR	1927351	Identifier	to_xml_gday		1927332	2					
ANR	1927352	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927332	3					
ANR	1927353	Parameter	encodeTypePtr type	2968:30:93293:93310	1927332	0	True				
ANR	1927354	ParameterType	encodeTypePtr		1927332	0					
ANR	1927355	Identifier	type		1927332	1					
ANR	1927356	Parameter	zval * data	2968:50:93313:93322	1927332	1	True				
ANR	1927357	ParameterType	zval *		1927332	0					
ANR	1927358	Identifier	data		1927332	1					
ANR	1927359	Parameter	int style	2968:62:93325:93333	1927332	2	True				
ANR	1927360	ParameterType	int		1927332	0					
ANR	1927361	Identifier	style		1927332	1					
ANR	1927362	Parameter	xmlNodePtr parent	2968:73:93336:93352	1927332	3	True				
ANR	1927363	ParameterType	xmlNodePtr		1927332	0					
ANR	1927364	Identifier	parent		1927332	1					
ANR	1927365	CFGEntryNode	ENTRY		1927332		True				
ANR	1927366	CFGExitNode	EXIT		1927332		True				
ANR	1927367	Symbol	parent		1927332						
ANR	1927368	Symbol	data		1927332						
ANR	1927369	Symbol	style		1927332						
ANR	1927370	Symbol	to_xml_datetime_ex		1927332						
ANR	1927371	Symbol	type		1927332						
ANR	1927372	Function	to_xml_gmonth	2973:0:93424:93585							
ANR	1927373	FunctionDef	"to_xml_gmonth (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1927372	0					
ANR	1927374	CompoundStatement		2974:0:93518:93585	1927372	0					
ANR	1927375	ReturnStatement	"return to_xml_datetime_ex ( type , data , ""--%m--"" , style , parent ) ;"	2975:1:93521:93583	1927372	0	True				
ANR	1927376	CallExpression	"to_xml_datetime_ex ( type , data , ""--%m--"" , style , parent )"		1927372	0					
ANR	1927377	Callee	to_xml_datetime_ex		1927372	0					
ANR	1927378	Identifier	to_xml_datetime_ex		1927372	0					
ANR	1927379	ArgumentList	type		1927372	1					
ANR	1927380	Argument	type		1927372	0					
ANR	1927381	Identifier	type		1927372	0					
ANR	1927382	Argument	data		1927372	1					
ANR	1927383	Identifier	data		1927372	0					
ANR	1927384	Argument	"""--%m--"""		1927372	2					
ANR	1927385	PrimaryExpression	"""--%m--"""		1927372	0					
ANR	1927386	Argument	style		1927372	3					
ANR	1927387	Identifier	style		1927372	0					
ANR	1927388	Argument	parent		1927372	4					
ANR	1927389	Identifier	parent		1927372	0					
ANR	1927390	ReturnType	static xmlNodePtr		1927372	1					
ANR	1927391	Identifier	to_xml_gmonth		1927372	2					
ANR	1927392	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1927372	3					
ANR	1927393	Parameter	encodeTypePtr type	2973:32:93456:93473	1927372	0	True				
ANR	1927394	ParameterType	encodeTypePtr		1927372	0					
ANR	1927395	Identifier	type		1927372	1					
ANR	1927396	Parameter	zval * data	2973:52:93476:93485	1927372	1	True				
ANR	1927397	ParameterType	zval *		1927372	0					
ANR	1927398	Identifier	data		1927372	1					
ANR	1927399	Parameter	int style	2973:64:93488:93496	1927372	2	True				
ANR	1927400	ParameterType	int		1927372	0					
ANR	1927401	Identifier	style		1927372	1					
ANR	1927402	Parameter	xmlNodePtr parent	2973:75:93499:93515	1927372	3	True				
ANR	1927403	ParameterType	xmlNodePtr		1927372	0					
ANR	1927404	Identifier	parent		1927372	1					
ANR	1927405	CFGEntryNode	ENTRY		1927372		True				
ANR	1927406	CFGExitNode	EXIT		1927372		True				
ANR	1927407	Symbol	parent		1927372						
ANR	1927408	Symbol	data		1927372						
ANR	1927409	Symbol	style		1927372						
ANR	1927410	Symbol	to_xml_datetime_ex		1927372						
ANR	1927411	Symbol	type		1927372						
ANR	1927412	Function	to_zval_list	2978:0:93588:93715							
ANR	1927413	FunctionDef	"to_zval_list (zval * ret , encodeTypePtr enc , xmlNodePtr data)"		1927412	0					
ANR	1927414	CompoundStatement		2978:73:93661:93715	1927412	0					
ANR	1927415	ReturnStatement	"return to_zval_stringc ( ret , enc , data ) ;"	2980:1:93675:93713	1927412	0	True				
ANR	1927416	CallExpression	"to_zval_stringc ( ret , enc , data )"		1927412	0					
ANR	1927417	Callee	to_zval_stringc		1927412	0					
ANR	1927418	Identifier	to_zval_stringc		1927412	0					
ANR	1927419	ArgumentList	ret		1927412	1					
ANR	1927420	Argument	ret		1927412	0					
ANR	1927421	Identifier	ret		1927412	0					
ANR	1927422	Argument	enc		1927412	1					
ANR	1927423	Identifier	enc		1927412	0					
ANR	1927424	Argument	data		1927412	2					
ANR	1927425	Identifier	data		1927412	0					
ANR	1927426	ReturnType	static zval *		1927412	1					
ANR	1927427	Identifier	to_zval_list		1927412	2					
ANR	1927428	ParameterList	"zval * ret , encodeTypePtr enc , xmlNodePtr data"		1927412	3					
ANR	1927429	Parameter	zval * ret	2978:26:93614:93622	1927412	0	True				
ANR	1927430	ParameterType	zval *		1927412	0					
ANR	1927431	Identifier	ret		1927412	1					
ANR	1927432	Parameter	encodeTypePtr enc	2978:37:93625:93641	1927412	1	True				
ANR	1927433	ParameterType	encodeTypePtr		1927412	0					
ANR	1927434	Identifier	enc		1927412	1					
ANR	1927435	Parameter	xmlNodePtr data	2978:56:93644:93658	1927412	2	True				
ANR	1927436	ParameterType	xmlNodePtr		1927412	0					
ANR	1927437	Identifier	data		1927412	1					
ANR	1927438	CFGEntryNode	ENTRY		1927412		True				
ANR	1927439	CFGExitNode	EXIT		1927412		True				
ANR	1927440	Symbol	ret		1927412						
ANR	1927441	Symbol	data		1927412						
ANR	1927442	Symbol	enc		1927412						
ANR	1927443	Symbol	to_zval_stringc		1927412						
ANR	1927444	Function	to_xml_list	2983:0:93718:96060							
ANR	1927445	FunctionDef	"to_xml_list (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent)"		1927444	0					
ANR	1927446	CompoundStatement		2983:91:93809:96060	1927444	0					
ANR	1927447	IdentifierDeclStatement	xmlNodePtr ret ;	2984:1:93812:93826	1927444	0	True				
ANR	1927448	IdentifierDecl	ret		1927444	0					
ANR	1927449	IdentifierDeclType	xmlNodePtr		1927444	0					
ANR	1927450	Identifier	ret		1927444	1					
ANR	1927451	IdentifierDeclStatement	encodePtr list_enc = NULL ;	2985:1:93829:93854	1927444	1	True				
ANR	1927452	IdentifierDecl	list_enc = NULL		1927444	0					
ANR	1927453	IdentifierDeclType	encodePtr		1927444	0					
ANR	1927454	Identifier	list_enc		1927444	1					
ANR	1927455	AssignmentExpression	list_enc = NULL		1927444	2		=			
ANR	1927456	Identifier	NULL		1927444	0					
ANR	1927457	Identifier	NULL		1927444	1					
ANR	1927458	IfStatement	if ( enc -> sdl_type && enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements )		1927444	2					
ANR	1927459	Condition	enc -> sdl_type && enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements	2987:5:93862:93945	1927444	0	True				
ANR	1927460	AndExpression	enc -> sdl_type && enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements		1927444	0		&&			
ANR	1927461	PtrMemberAccess	enc -> sdl_type		1927444	0					
ANR	1927462	Identifier	enc		1927444	0					
ANR	1927463	Identifier	sdl_type		1927444	1					
ANR	1927464	AndExpression	enc -> sdl_type -> kind == XSD_TYPEKIND_LIST && enc -> sdl_type -> elements		1927444	1		&&			
ANR	1927465	EqualityExpression	enc -> sdl_type -> kind == XSD_TYPEKIND_LIST		1927444	0		==			
ANR	1927466	PtrMemberAccess	enc -> sdl_type -> kind		1927444	0					
ANR	1927467	PtrMemberAccess	enc -> sdl_type		1927444	0					
ANR	1927468	Identifier	enc		1927444	0					
ANR	1927469	Identifier	sdl_type		1927444	1					
ANR	1927470	Identifier	kind		1927444	1					
ANR	1927471	Identifier	XSD_TYPEKIND_LIST		1927444	1					
ANR	1927472	PtrMemberAccess	enc -> sdl_type -> elements		1927444	1					
ANR	1927473	PtrMemberAccess	enc -> sdl_type		1927444	0					
ANR	1927474	Identifier	enc		1927444	0					
ANR	1927475	Identifier	sdl_type		1927444	1					
ANR	1927476	Identifier	elements		1927444	1					
ANR	1927477	CompoundStatement		6:2:142:157	1927444	1					
ANR	1927478	IdentifierDeclStatement	sdlTypePtr type ;	2988:2:93952:93967	1927444	0	True				
ANR	1927479	IdentifierDecl	type		1927444	0					
ANR	1927480	IdentifierDeclType	sdlTypePtr		1927444	0					
ANR	1927481	Identifier	type		1927444	1					
ANR	1927482	Statement	ZEND_HASH_FOREACH_PTR	2990:2:93972:93992	1927444	1	True				
ANR	1927483	Statement	(	2990:23:93993:93993	1927444	2	True				
ANR	1927484	Statement	enc	2990:24:93994:93996	1927444	3	True				
ANR	1927485	Statement	->	2990:27:93997:93998	1927444	4	True				
ANR	1927486	Statement	sdl_type	2990:29:93999:94006	1927444	5	True				
ANR	1927487	Statement	->	2990:37:94007:94008	1927444	6	True				
ANR	1927488	Statement	elements	2990:39:94009:94016	1927444	7	True				
ANR	1927489	Statement	","	2990:47:94017:94017	1927444	8	True				
ANR	1927490	Statement	type	2990:49:94019:94022	1927444	9	True				
ANR	1927491	Statement	)	2990:53:94023:94023	1927444	10	True				
ANR	1927492	CompoundStatement		8:55:215:215	1927444	11					
ANR	1927493	ExpressionStatement	list_enc = type -> encode	2991:3:94030:94053	1927444	0	True				
ANR	1927494	AssignmentExpression	list_enc = type -> encode		1927444	0		=			
ANR	1927495	Identifier	list_enc		1927444	0					
ANR	1927496	PtrMemberAccess	type -> encode		1927444	1					
ANR	1927497	Identifier	type		1927444	0					
ANR	1927498	Identifier	encode		1927444	1					
ANR	1927499	BreakStatement	break ;	2992:3:94058:94063	1927444	1	True				
ANR	1927500	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2993:4:94069:94092	1927444	12	True				
ANR	1927501	CallExpression	ZEND_HASH_FOREACH_END ( )		1927444	0					
ANR	1927502	Callee	ZEND_HASH_FOREACH_END		1927444	0					
ANR	1927503	Identifier	ZEND_HASH_FOREACH_END		1927444	0					
ANR	1927504	ArgumentList			1927444	1					
ANR	1927505	ExpressionStatement	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"	2996:1:94099:94140	1927444	3	True				
ANR	1927506	AssignmentExpression	"ret = xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1927444	0		=			
ANR	1927507	Identifier	ret		1927444	0					
ANR	1927508	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""BOGUS"" ) )"		1927444	1					
ANR	1927509	Callee	xmlNewNode		1927444	0					
ANR	1927510	Identifier	xmlNewNode		1927444	0					
ANR	1927511	ArgumentList	NULL		1927444	1					
ANR	1927512	Argument	NULL		1927444	0					
ANR	1927513	Identifier	NULL		1927444	0					
ANR	1927514	Argument	"BAD_CAST ( ""BOGUS"" )"		1927444	1					
ANR	1927515	CallExpression	"BAD_CAST ( ""BOGUS"" )"		1927444	0					
ANR	1927516	Callee	BAD_CAST		1927444	0					
ANR	1927517	Identifier	BAD_CAST		1927444	0					
ANR	1927518	ArgumentList	"""BOGUS"""		1927444	1					
ANR	1927519	Argument	"""BOGUS"""		1927444	0					
ANR	1927520	PrimaryExpression	"""BOGUS"""		1927444	0					
ANR	1927521	ExpressionStatement	"xmlAddChild ( parent , ret )"	2997:1:94143:94167	1927444	4	True				
ANR	1927522	CallExpression	"xmlAddChild ( parent , ret )"		1927444	0					
ANR	1927523	Callee	xmlAddChild		1927444	0					
ANR	1927524	Identifier	xmlAddChild		1927444	0					
ANR	1927525	ArgumentList	parent		1927444	1					
ANR	1927526	Argument	parent		1927444	0					
ANR	1927527	Identifier	parent		1927444	0					
ANR	1927528	Argument	ret		1927444	1					
ANR	1927529	Identifier	ret		1927444	0					
ANR	1927530	ExpressionStatement	"FIND_ZVAL_NULL ( data , ret , style )"	2998:1:94170:94202	1927444	5	True				
ANR	1927531	CallExpression	"FIND_ZVAL_NULL ( data , ret , style )"		1927444	0					
ANR	1927532	Callee	FIND_ZVAL_NULL		1927444	0					
ANR	1927533	Identifier	FIND_ZVAL_NULL		1927444	0					
ANR	1927534	ArgumentList	data		1927444	1					
ANR	1927535	Argument	data		1927444	0					
ANR	1927536	Identifier	data		1927444	0					
ANR	1927537	Argument	ret		1927444	1					
ANR	1927538	Identifier	ret		1927444	0					
ANR	1927539	Argument	style		1927444	2					
ANR	1927540	Identifier	style		1927444	0					
ANR	1927541	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1927444	6					
ANR	1927542	Condition	Z_TYPE_P ( data ) == IS_ARRAY	2999:5:94209:94234	1927444	0	True				
ANR	1927543	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1927444	0		==			
ANR	1927544	CallExpression	Z_TYPE_P ( data )		1927444	0					
ANR	1927545	Callee	Z_TYPE_P		1927444	0					
ANR	1927546	Identifier	Z_TYPE_P		1927444	0					
ANR	1927547	ArgumentList	data		1927444	1					
ANR	1927548	Argument	data		1927444	0					
ANR	1927549	Identifier	data		1927444	0					
ANR	1927550	Identifier	IS_ARRAY		1927444	1					
ANR	1927551	CompoundStatement		20:2:468:500	1927444	1					
ANR	1927552	IdentifierDeclStatement	zval * tmp ;	3000:2:94241:94250	1927444	0	True				
ANR	1927553	IdentifierDecl	* tmp		1927444	0					
ANR	1927554	IdentifierDeclType	zval *		1927444	0					
ANR	1927555	Identifier	tmp		1927444	1					
ANR	1927556	IdentifierDeclStatement	smart_str list = { 0 } ;	3001:2:94254:94274	1927444	1	True				
ANR	1927557	IdentifierDecl	list = { 0 }		1927444	0					
ANR	1927558	IdentifierDeclType	smart_str		1927444	0					
ANR	1927559	Identifier	list		1927444	1					
ANR	1927560	AssignmentExpression	list = { 0 }		1927444	2		=			
ANR	1927561	Identifier	list		1927444	0					
ANR	1927562	InitializerList	0		1927444	1					
ANR	1927563	PrimaryExpression	0		1927444	0					
ANR	1927564	IdentifierDeclStatement	HashTable * ht = Z_ARRVAL_P ( data ) ;	3002:2:94278:94310	1927444	2	True				
ANR	1927565	IdentifierDecl	* ht = Z_ARRVAL_P ( data )		1927444	0					
ANR	1927566	IdentifierDeclType	HashTable *		1927444	0					
ANR	1927567	Identifier	ht		1927444	1					
ANR	1927568	AssignmentExpression	* ht = Z_ARRVAL_P ( data )		1927444	2		=			
ANR	1927569	Identifier	ht		1927444	0					
ANR	1927570	CallExpression	Z_ARRVAL_P ( data )		1927444	1					
ANR	1927571	Callee	Z_ARRVAL_P		1927444	0					
ANR	1927572	Identifier	Z_ARRVAL_P		1927444	0					
ANR	1927573	ArgumentList	data		1927444	1					
ANR	1927574	Argument	data		1927444	0					
ANR	1927575	Identifier	data		1927444	0					
ANR	1927576	Statement	ZEND_HASH_FOREACH_VAL	3004:2:94315:94335	1927444	3	True				
ANR	1927577	Statement	(	3004:23:94336:94336	1927444	4	True				
ANR	1927578	Statement	ht	3004:24:94337:94338	1927444	5	True				
ANR	1927579	Statement	","	3004:26:94339:94339	1927444	6	True				
ANR	1927580	Statement	tmp	3004:28:94341:94343	1927444	7	True				
ANR	1927581	Statement	)	3004:31:94344:94344	1927444	8	True				
ANR	1927582	CompoundStatement		23:3:541:607	1927444	9					
ANR	1927583	IdentifierDeclStatement	"xmlNodePtr dummy = master_to_xml ( list_enc , tmp , SOAP_LITERAL , ret ) ;"	3005:3:94351:94417	1927444	0	True				
ANR	1927584	IdentifierDecl	"dummy = master_to_xml ( list_enc , tmp , SOAP_LITERAL , ret )"		1927444	0					
ANR	1927585	IdentifierDeclType	xmlNodePtr		1927444	0					
ANR	1927586	Identifier	dummy		1927444	1					
ANR	1927587	AssignmentExpression	"dummy = master_to_xml ( list_enc , tmp , SOAP_LITERAL , ret )"		1927444	2		=			
ANR	1927588	Identifier	dummy		1927444	0					
ANR	1927589	CallExpression	"master_to_xml ( list_enc , tmp , SOAP_LITERAL , ret )"		1927444	1					
ANR	1927590	Callee	master_to_xml		1927444	0					
ANR	1927591	Identifier	master_to_xml		1927444	0					
ANR	1927592	ArgumentList	list_enc		1927444	1					
ANR	1927593	Argument	list_enc		1927444	0					
ANR	1927594	Identifier	list_enc		1927444	0					
ANR	1927595	Argument	tmp		1927444	1					
ANR	1927596	Identifier	tmp		1927444	0					
ANR	1927597	Argument	SOAP_LITERAL		1927444	2					
ANR	1927598	Identifier	SOAP_LITERAL		1927444	0					
ANR	1927599	Argument	ret		1927444	3					
ANR	1927600	Identifier	ret		1927444	0					
ANR	1927601	IfStatement	if ( dummy && dummy -> children && dummy -> children -> content )		1927444	1					
ANR	1927602	Condition	dummy && dummy -> children && dummy -> children -> content	3006:7:94426:94477	1927444	0	True				
ANR	1927603	AndExpression	dummy && dummy -> children && dummy -> children -> content		1927444	0		&&			
ANR	1927604	Identifier	dummy		1927444	0					
ANR	1927605	AndExpression	dummy -> children && dummy -> children -> content		1927444	1		&&			
ANR	1927606	PtrMemberAccess	dummy -> children		1927444	0					
ANR	1927607	Identifier	dummy		1927444	0					
ANR	1927608	Identifier	children		1927444	1					
ANR	1927609	PtrMemberAccess	dummy -> children -> content		1927444	1					
ANR	1927610	PtrMemberAccess	dummy -> children		1927444	0					
ANR	1927611	Identifier	dummy		1927444	0					
ANR	1927612	Identifier	children		1927444	1					
ANR	1927613	Identifier	content		1927444	1					
ANR	1927614	CompoundStatement		24:61:670:670	1927444	1					
ANR	1927615	IfStatement	if ( list . s && ZSTR_LEN ( list . s ) != 0 )		1927444	0					
ANR	1927616	Condition	list . s && ZSTR_LEN ( list . s ) != 0	3007:8:94490:94520	1927444	0	True				
ANR	1927617	AndExpression	list . s && ZSTR_LEN ( list . s ) != 0		1927444	0		&&			
ANR	1927618	MemberAccess	list . s		1927444	0					
ANR	1927619	Identifier	list		1927444	0					
ANR	1927620	Identifier	s		1927444	1					
ANR	1927621	EqualityExpression	ZSTR_LEN ( list . s ) != 0		1927444	1		!=			
ANR	1927622	CallExpression	ZSTR_LEN ( list . s )		1927444	0					
ANR	1927623	Callee	ZSTR_LEN		1927444	0					
ANR	1927624	Identifier	ZSTR_LEN		1927444	0					
ANR	1927625	ArgumentList	list . s		1927444	1					
ANR	1927626	Argument	list . s		1927444	0					
ANR	1927627	MemberAccess	list . s		1927444	0					
ANR	1927628	Identifier	list		1927444	0					
ANR	1927629	Identifier	s		1927444	1					
ANR	1927630	PrimaryExpression	0		1927444	1					
ANR	1927631	CompoundStatement		25:41:713:713	1927444	1					
ANR	1927632	ExpressionStatement	"smart_str_appendc ( & list , ' ' )"	3008:5:94530:94559	1927444	0	True				
ANR	1927633	CallExpression	"smart_str_appendc ( & list , ' ' )"		1927444	0					
ANR	1927634	Callee	smart_str_appendc		1927444	0					
ANR	1927635	Identifier	smart_str_appendc		1927444	0					
ANR	1927636	ArgumentList	& list		1927444	1					
ANR	1927637	Argument	& list		1927444	0					
ANR	1927638	UnaryOperationExpression	& list		1927444	0					
ANR	1927639	UnaryOperator	&		1927444	0					
ANR	1927640	Identifier	list		1927444	1					
ANR	1927641	Argument	' '		1927444	1					
ANR	1927642	PrimaryExpression	' '		1927444	0					
ANR	1927643	ExpressionStatement	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"	3010:4:94571:94628	1927444	1	True				
ANR	1927644	CallExpression	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"		1927444	0					
ANR	1927645	Callee	smart_str_appends		1927444	0					
ANR	1927646	Identifier	smart_str_appends		1927444	0					
ANR	1927647	ArgumentList	& list		1927444	1					
ANR	1927648	Argument	& list		1927444	0					
ANR	1927649	UnaryOperationExpression	& list		1927444	0					
ANR	1927650	UnaryOperator	&		1927444	0					
ANR	1927651	Identifier	list		1927444	1					
ANR	1927652	Argument	( char * ) dummy -> children -> content		1927444	1					
ANR	1927653	CastExpression	( char * ) dummy -> children -> content		1927444	0					
ANR	1927654	CastTarget	char *		1927444	0					
ANR	1927655	PtrMemberAccess	dummy -> children -> content		1927444	1					
ANR	1927656	PtrMemberAccess	dummy -> children		1927444	0					
ANR	1927657	Identifier	dummy		1927444	0					
ANR	1927658	Identifier	children		1927444	1					
ANR	1927659	Identifier	content		1927444	1					
ANR	1927660	ElseStatement	else		1927444	0					
ANR	1927661	CompoundStatement		29:10:830:830	1927444	0					
ANR	1927662	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	3012:4:94646:94707	1927444	0	True				
ANR	1927663	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1927444	0					
ANR	1927664	Callee	soap_error0		1927444	0					
ANR	1927665	Identifier	soap_error0		1927444	0					
ANR	1927666	ArgumentList	E_ERROR		1927444	1					
ANR	1927667	Argument	E_ERROR		1927444	0					
ANR	1927668	Identifier	E_ERROR		1927444	0					
ANR	1927669	Argument	"""Encoding: Violation of encoding rules"""		1927444	1					
ANR	1927670	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1927444	0					
ANR	1927671	ExpressionStatement	xmlUnlinkNode ( dummy )	3014:3:94717:94737	1927444	2	True				
ANR	1927672	CallExpression	xmlUnlinkNode ( dummy )		1927444	0					
ANR	1927673	Callee	xmlUnlinkNode		1927444	0					
ANR	1927674	Identifier	xmlUnlinkNode		1927444	0					
ANR	1927675	ArgumentList	dummy		1927444	1					
ANR	1927676	Argument	dummy		1927444	0					
ANR	1927677	Identifier	dummy		1927444	0					
ANR	1927678	ExpressionStatement	xmlFreeNode ( dummy )	3015:3:94742:94760	1927444	3	True				
ANR	1927679	CallExpression	xmlFreeNode ( dummy )		1927444	0					
ANR	1927680	Callee	xmlFreeNode		1927444	0					
ANR	1927681	Identifier	xmlFreeNode		1927444	0					
ANR	1927682	ArgumentList	dummy		1927444	1					
ANR	1927683	Argument	dummy		1927444	0					
ANR	1927684	Identifier	dummy		1927444	0					
ANR	1927685	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3016:4:94766:94789	1927444	10	True				
ANR	1927686	CallExpression	ZEND_HASH_FOREACH_END ( )		1927444	0					
ANR	1927687	Callee	ZEND_HASH_FOREACH_END		1927444	0					
ANR	1927688	Identifier	ZEND_HASH_FOREACH_END		1927444	0					
ANR	1927689	ArgumentList			1927444	1					
ANR	1927690	ExpressionStatement	smart_str_0 ( & list )	3017:2:94793:94811	1927444	11	True				
ANR	1927691	CallExpression	smart_str_0 ( & list )		1927444	0					
ANR	1927692	Callee	smart_str_0		1927444	0					
ANR	1927693	Identifier	smart_str_0		1927444	0					
ANR	1927694	ArgumentList	& list		1927444	1					
ANR	1927695	Argument	& list		1927444	0					
ANR	1927696	UnaryOperationExpression	& list		1927444	0					
ANR	1927697	UnaryOperator	&		1927444	0					
ANR	1927698	Identifier	list		1927444	1					
ANR	1927699	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( ZSTR_VAL ( list . s ) ) , ZSTR_LEN ( list . s ) )"	3018:2:94815:94886	1927444	12	True				
ANR	1927700	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( ZSTR_VAL ( list . s ) ) , ZSTR_LEN ( list . s ) )"		1927444	0					
ANR	1927701	Callee	xmlNodeSetContentLen		1927444	0					
ANR	1927702	Identifier	xmlNodeSetContentLen		1927444	0					
ANR	1927703	ArgumentList	ret		1927444	1					
ANR	1927704	Argument	ret		1927444	0					
ANR	1927705	Identifier	ret		1927444	0					
ANR	1927706	Argument	BAD_CAST ( ZSTR_VAL ( list . s ) )		1927444	1					
ANR	1927707	CallExpression	BAD_CAST ( ZSTR_VAL ( list . s ) )		1927444	0					
ANR	1927708	Callee	BAD_CAST		1927444	0					
ANR	1927709	Identifier	BAD_CAST		1927444	0					
ANR	1927710	ArgumentList	ZSTR_VAL ( list . s )		1927444	1					
ANR	1927711	Argument	ZSTR_VAL ( list . s )		1927444	0					
ANR	1927712	CallExpression	ZSTR_VAL ( list . s )		1927444	0					
ANR	1927713	Callee	ZSTR_VAL		1927444	0					
ANR	1927714	Identifier	ZSTR_VAL		1927444	0					
ANR	1927715	ArgumentList	list . s		1927444	1					
ANR	1927716	Argument	list . s		1927444	0					
ANR	1927717	MemberAccess	list . s		1927444	0					
ANR	1927718	Identifier	list		1927444	0					
ANR	1927719	Identifier	s		1927444	1					
ANR	1927720	Argument	ZSTR_LEN ( list . s )		1927444	2					
ANR	1927721	CallExpression	ZSTR_LEN ( list . s )		1927444	0					
ANR	1927722	Callee	ZSTR_LEN		1927444	0					
ANR	1927723	Identifier	ZSTR_LEN		1927444	0					
ANR	1927724	ArgumentList	list . s		1927444	1					
ANR	1927725	Argument	list . s		1927444	0					
ANR	1927726	MemberAccess	list . s		1927444	0					
ANR	1927727	Identifier	list		1927444	0					
ANR	1927728	Identifier	s		1927444	1					
ANR	1927729	ExpressionStatement	smart_str_free ( & list )	3019:2:94890:94911	1927444	13	True				
ANR	1927730	CallExpression	smart_str_free ( & list )		1927444	0					
ANR	1927731	Callee	smart_str_free		1927444	0					
ANR	1927732	Identifier	smart_str_free		1927444	0					
ANR	1927733	ArgumentList	& list		1927444	1					
ANR	1927734	Argument	& list		1927444	0					
ANR	1927735	UnaryOperationExpression	& list		1927444	0					
ANR	1927736	UnaryOperator	&		1927444	0					
ANR	1927737	Identifier	list		1927444	1					
ANR	1927738	ElseStatement	else		1927444	0					
ANR	1927739	CompoundStatement		41:2:1155:1175	1927444	0					
ANR	1927740	IdentifierDeclStatement	zval tmp ;	3021:2:94925:94933	1927444	0	True				
ANR	1927741	IdentifierDecl	tmp		1927444	0					
ANR	1927742	IdentifierDeclType	zval		1927444	0					
ANR	1927743	Identifier	tmp		1927444	1					
ANR	1927744	IdentifierDeclStatement	"char * str , * start , * next ;"	3022:2:94937:94961	1927444	1	True				
ANR	1927745	IdentifierDecl	* str		1927444	0					
ANR	1927746	IdentifierDeclType	char *		1927444	0					
ANR	1927747	Identifier	str		1927444	1					
ANR	1927748	IdentifierDecl	* start		1927444	1					
ANR	1927749	IdentifierDeclType	char *		1927444	0					
ANR	1927750	Identifier	start		1927444	1					
ANR	1927751	IdentifierDecl	* next		1927444	2					
ANR	1927752	IdentifierDeclType	char *		1927444	0					
ANR	1927753	Identifier	next		1927444	1					
ANR	1927754	IdentifierDeclStatement	smart_str list = { 0 } ;	3023:2:94965:94985	1927444	2	True				
ANR	1927755	IdentifierDecl	list = { 0 }		1927444	0					
ANR	1927756	IdentifierDeclType	smart_str		1927444	0					
ANR	1927757	Identifier	list		1927444	1					
ANR	1927758	AssignmentExpression	list = { 0 }		1927444	2		=			
ANR	1927759	Identifier	list		1927444	0					
ANR	1927760	InitializerList	0		1927444	1					
ANR	1927761	PrimaryExpression	0		1927444	0					
ANR	1927762	IfStatement	if ( Z_TYPE_P ( data ) != IS_STRING )		1927444	3					
ANR	1927763	Condition	Z_TYPE_P ( data ) != IS_STRING	3025:6:94994:95020	1927444	0	True				
ANR	1927764	EqualityExpression	Z_TYPE_P ( data ) != IS_STRING		1927444	0		!=			
ANR	1927765	CallExpression	Z_TYPE_P ( data )		1927444	0					
ANR	1927766	Callee	Z_TYPE_P		1927444	0					
ANR	1927767	Identifier	Z_TYPE_P		1927444	0					
ANR	1927768	ArgumentList	data		1927444	1					
ANR	1927769	Argument	data		1927444	0					
ANR	1927770	Identifier	data		1927444	0					
ANR	1927771	Identifier	IS_STRING		1927444	1					
ANR	1927772	CompoundStatement		43:35:1213:1213	1927444	1					
ANR	1927773	ExpressionStatement	"ZVAL_STR ( & tmp , zval_get_string ( data ) )"	3026:3:95028:95065	1927444	0	True				
ANR	1927774	CallExpression	"ZVAL_STR ( & tmp , zval_get_string ( data ) )"		1927444	0					
ANR	1927775	Callee	ZVAL_STR		1927444	0					
ANR	1927776	Identifier	ZVAL_STR		1927444	0					
ANR	1927777	ArgumentList	& tmp		1927444	1					
ANR	1927778	Argument	& tmp		1927444	0					
ANR	1927779	UnaryOperationExpression	& tmp		1927444	0					
ANR	1927780	UnaryOperator	&		1927444	0					
ANR	1927781	Identifier	tmp		1927444	1					
ANR	1927782	Argument	zval_get_string ( data )		1927444	1					
ANR	1927783	CallExpression	zval_get_string ( data )		1927444	0					
ANR	1927784	Callee	zval_get_string		1927444	0					
ANR	1927785	Identifier	zval_get_string		1927444	0					
ANR	1927786	ArgumentList	data		1927444	1					
ANR	1927787	Argument	data		1927444	0					
ANR	1927788	Identifier	data		1927444	0					
ANR	1927789	ExpressionStatement	data = & tmp	3027:3:95070:95081	1927444	1	True				
ANR	1927790	AssignmentExpression	data = & tmp		1927444	0		=			
ANR	1927791	Identifier	data		1927444	0					
ANR	1927792	UnaryOperationExpression	& tmp		1927444	1					
ANR	1927793	UnaryOperator	&		1927444	0					
ANR	1927794	Identifier	tmp		1927444	1					
ANR	1927795	ExpressionStatement	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"	3029:2:95089:95139	1927444	4	True				
ANR	1927796	AssignmentExpression	"str = estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1927444	0		=			
ANR	1927797	Identifier	str		1927444	0					
ANR	1927798	CallExpression	"estrndup ( Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		1927444	1					
ANR	1927799	Callee	estrndup		1927444	0					
ANR	1927800	Identifier	estrndup		1927444	0					
ANR	1927801	ArgumentList	Z_STRVAL_P ( data )		1927444	1					
ANR	1927802	Argument	Z_STRVAL_P ( data )		1927444	0					
ANR	1927803	CallExpression	Z_STRVAL_P ( data )		1927444	0					
ANR	1927804	Callee	Z_STRVAL_P		1927444	0					
ANR	1927805	Identifier	Z_STRVAL_P		1927444	0					
ANR	1927806	ArgumentList	data		1927444	1					
ANR	1927807	Argument	data		1927444	0					
ANR	1927808	Identifier	data		1927444	0					
ANR	1927809	Argument	Z_STRLEN_P ( data )		1927444	1					
ANR	1927810	CallExpression	Z_STRLEN_P ( data )		1927444	0					
ANR	1927811	Callee	Z_STRLEN_P		1927444	0					
ANR	1927812	Identifier	Z_STRLEN_P		1927444	0					
ANR	1927813	ArgumentList	data		1927444	1					
ANR	1927814	Argument	data		1927444	0					
ANR	1927815	Identifier	data		1927444	0					
ANR	1927816	ExpressionStatement	whiteSpace_collapse ( BAD_CAST ( str ) )	3030:2:95143:95177	1927444	5	True				
ANR	1927817	CallExpression	whiteSpace_collapse ( BAD_CAST ( str ) )		1927444	0					
ANR	1927818	Callee	whiteSpace_collapse		1927444	0					
ANR	1927819	Identifier	whiteSpace_collapse		1927444	0					
ANR	1927820	ArgumentList	BAD_CAST ( str )		1927444	1					
ANR	1927821	Argument	BAD_CAST ( str )		1927444	0					
ANR	1927822	CallExpression	BAD_CAST ( str )		1927444	0					
ANR	1927823	Callee	BAD_CAST		1927444	0					
ANR	1927824	Identifier	BAD_CAST		1927444	0					
ANR	1927825	ArgumentList	str		1927444	1					
ANR	1927826	Argument	str		1927444	0					
ANR	1927827	Identifier	str		1927444	0					
ANR	1927828	ExpressionStatement	start = str	3031:2:95181:95192	1927444	6	True				
ANR	1927829	AssignmentExpression	start = str		1927444	0		=			
ANR	1927830	Identifier	start		1927444	0					
ANR	1927831	Identifier	str		1927444	1					
ANR	1927832	WhileStatement	while ( start != NULL && * start != '\\0' )		1927444	7					
ANR	1927833	Condition	start != NULL && * start != '\\0'	3032:9:95203:95233	1927444	0	True				
ANR	1927834	AndExpression	start != NULL && * start != '\\0'		1927444	0		&&			
ANR	1927835	EqualityExpression	start != NULL		1927444	0		!=			
ANR	1927836	Identifier	start		1927444	0					
ANR	1927837	Identifier	NULL		1927444	1					
ANR	1927838	EqualityExpression	* start != '\\0'		1927444	1		!=			
ANR	1927839	UnaryOperationExpression	* start		1927444	0					
ANR	1927840	UnaryOperator	*		1927444	0					
ANR	1927841	Identifier	start		1927444	1					
ANR	1927842	PrimaryExpression	'\\0'		1927444	1					
ANR	1927843	CompoundStatement		52:3:1452:1467	1927444	1					
ANR	1927844	IdentifierDeclStatement	xmlNodePtr dummy ;	3033:3:95241:95257	1927444	0	True				
ANR	1927845	IdentifierDecl	dummy		1927444	0					
ANR	1927846	IdentifierDeclType	xmlNodePtr		1927444	0					
ANR	1927847	Identifier	dummy		1927444	1					
ANR	1927848	IdentifierDeclStatement	zval dummy_zval ;	3034:3:95262:95277	1927444	1	True				
ANR	1927849	IdentifierDecl	dummy_zval		1927444	0					
ANR	1927850	IdentifierDeclType	zval		1927444	0					
ANR	1927851	Identifier	dummy_zval		1927444	1					
ANR	1927852	ExpressionStatement	"next = strchr ( start , ' ' )"	3036:3:95283:95307	1927444	2	True				
ANR	1927853	AssignmentExpression	"next = strchr ( start , ' ' )"		1927444	0		=			
ANR	1927854	Identifier	next		1927444	0					
ANR	1927855	CallExpression	"strchr ( start , ' ' )"		1927444	1					
ANR	1927856	Callee	strchr		1927444	0					
ANR	1927857	Identifier	strchr		1927444	0					
ANR	1927858	ArgumentList	start		1927444	1					
ANR	1927859	Argument	start		1927444	0					
ANR	1927860	Identifier	start		1927444	0					
ANR	1927861	Argument	' '		1927444	1					
ANR	1927862	PrimaryExpression	' '		1927444	0					
ANR	1927863	IfStatement	if ( next != NULL )		1927444	3					
ANR	1927864	Condition	next != NULL	3037:7:95316:95327	1927444	0	True				
ANR	1927865	EqualityExpression	next != NULL		1927444	0		!=			
ANR	1927866	Identifier	next		1927444	0					
ANR	1927867	Identifier	NULL		1927444	1					
ANR	1927868	CompoundStatement		55:21:1520:1520	1927444	1					
ANR	1927869	ExpressionStatement	* next = '\\0'	3038:5:95337:95349	1927444	0	True				
ANR	1927870	AssignmentExpression	* next = '\\0'		1927444	0		=			
ANR	1927871	UnaryOperationExpression	* next		1927444	0					
ANR	1927872	UnaryOperator	*		1927444	0					
ANR	1927873	Identifier	next		1927444	1					
ANR	1927874	PrimaryExpression	'\\0'		1927444	1					
ANR	1927875	ExpressionStatement	next ++	3039:5:95356:95362	1927444	1	True				
ANR	1927876	PostIncDecOperationExpression	next ++		1927444	0					
ANR	1927877	Identifier	next		1927444	0					
ANR	1927878	IncDec	++		1927444	1					
ANR	1927879	ExpressionStatement	"ZVAL_STRING ( & dummy_zval , start )"	3041:3:95372:95403	1927444	4	True				
ANR	1927880	CallExpression	"ZVAL_STRING ( & dummy_zval , start )"		1927444	0					
ANR	1927881	Callee	ZVAL_STRING		1927444	0					
ANR	1927882	Identifier	ZVAL_STRING		1927444	0					
ANR	1927883	ArgumentList	& dummy_zval		1927444	1					
ANR	1927884	Argument	& dummy_zval		1927444	0					
ANR	1927885	UnaryOperationExpression	& dummy_zval		1927444	0					
ANR	1927886	UnaryOperator	&		1927444	0					
ANR	1927887	Identifier	dummy_zval		1927444	1					
ANR	1927888	Argument	start		1927444	1					
ANR	1927889	Identifier	start		1927444	0					
ANR	1927890	ExpressionStatement	"dummy = master_to_xml ( list_enc , & dummy_zval , SOAP_LITERAL , ret )"	3042:3:95408:95471	1927444	5	True				
ANR	1927891	AssignmentExpression	"dummy = master_to_xml ( list_enc , & dummy_zval , SOAP_LITERAL , ret )"		1927444	0		=			
ANR	1927892	Identifier	dummy		1927444	0					
ANR	1927893	CallExpression	"master_to_xml ( list_enc , & dummy_zval , SOAP_LITERAL , ret )"		1927444	1					
ANR	1927894	Callee	master_to_xml		1927444	0					
ANR	1927895	Identifier	master_to_xml		1927444	0					
ANR	1927896	ArgumentList	list_enc		1927444	1					
ANR	1927897	Argument	list_enc		1927444	0					
ANR	1927898	Identifier	list_enc		1927444	0					
ANR	1927899	Argument	& dummy_zval		1927444	1					
ANR	1927900	UnaryOperationExpression	& dummy_zval		1927444	0					
ANR	1927901	UnaryOperator	&		1927444	0					
ANR	1927902	Identifier	dummy_zval		1927444	1					
ANR	1927903	Argument	SOAP_LITERAL		1927444	2					
ANR	1927904	Identifier	SOAP_LITERAL		1927444	0					
ANR	1927905	Argument	ret		1927444	3					
ANR	1927906	Identifier	ret		1927444	0					
ANR	1927907	ExpressionStatement	zval_ptr_dtor ( & dummy_zval )	3043:3:95476:95502	1927444	6	True				
ANR	1927908	CallExpression	zval_ptr_dtor ( & dummy_zval )		1927444	0					
ANR	1927909	Callee	zval_ptr_dtor		1927444	0					
ANR	1927910	Identifier	zval_ptr_dtor		1927444	0					
ANR	1927911	ArgumentList	& dummy_zval		1927444	1					
ANR	1927912	Argument	& dummy_zval		1927444	0					
ANR	1927913	UnaryOperationExpression	& dummy_zval		1927444	0					
ANR	1927914	UnaryOperator	&		1927444	0					
ANR	1927915	Identifier	dummy_zval		1927444	1					
ANR	1927916	IfStatement	if ( dummy && dummy -> children && dummy -> children -> content )		1927444	7					
ANR	1927917	Condition	dummy && dummy -> children && dummy -> children -> content	3044:7:95511:95562	1927444	0	True				
ANR	1927918	AndExpression	dummy && dummy -> children && dummy -> children -> content		1927444	0		&&			
ANR	1927919	Identifier	dummy		1927444	0					
ANR	1927920	AndExpression	dummy -> children && dummy -> children -> content		1927444	1		&&			
ANR	1927921	PtrMemberAccess	dummy -> children		1927444	0					
ANR	1927922	Identifier	dummy		1927444	0					
ANR	1927923	Identifier	children		1927444	1					
ANR	1927924	PtrMemberAccess	dummy -> children -> content		1927444	1					
ANR	1927925	PtrMemberAccess	dummy -> children		1927444	0					
ANR	1927926	Identifier	dummy		1927444	0					
ANR	1927927	Identifier	children		1927444	1					
ANR	1927928	Identifier	content		1927444	1					
ANR	1927929	CompoundStatement		62:61:1755:1755	1927444	1					
ANR	1927930	IfStatement	if ( list . s && ZSTR_LEN ( list . s ) != 0 )		1927444	0					
ANR	1927931	Condition	list . s && ZSTR_LEN ( list . s ) != 0	3045:8:95575:95605	1927444	0	True				
ANR	1927932	AndExpression	list . s && ZSTR_LEN ( list . s ) != 0		1927444	0		&&			
ANR	1927933	MemberAccess	list . s		1927444	0					
ANR	1927934	Identifier	list		1927444	0					
ANR	1927935	Identifier	s		1927444	1					
ANR	1927936	EqualityExpression	ZSTR_LEN ( list . s ) != 0		1927444	1		!=			
ANR	1927937	CallExpression	ZSTR_LEN ( list . s )		1927444	0					
ANR	1927938	Callee	ZSTR_LEN		1927444	0					
ANR	1927939	Identifier	ZSTR_LEN		1927444	0					
ANR	1927940	ArgumentList	list . s		1927444	1					
ANR	1927941	Argument	list . s		1927444	0					
ANR	1927942	MemberAccess	list . s		1927444	0					
ANR	1927943	Identifier	list		1927444	0					
ANR	1927944	Identifier	s		1927444	1					
ANR	1927945	PrimaryExpression	0		1927444	1					
ANR	1927946	CompoundStatement		63:41:1798:1798	1927444	1					
ANR	1927947	ExpressionStatement	"smart_str_appendc ( & list , ' ' )"	3046:5:95615:95644	1927444	0	True				
ANR	1927948	CallExpression	"smart_str_appendc ( & list , ' ' )"		1927444	0					
ANR	1927949	Callee	smart_str_appendc		1927444	0					
ANR	1927950	Identifier	smart_str_appendc		1927444	0					
ANR	1927951	ArgumentList	& list		1927444	1					
ANR	1927952	Argument	& list		1927444	0					
ANR	1927953	UnaryOperationExpression	& list		1927444	0					
ANR	1927954	UnaryOperator	&		1927444	0					
ANR	1927955	Identifier	list		1927444	1					
ANR	1927956	Argument	' '		1927444	1					
ANR	1927957	PrimaryExpression	' '		1927444	0					
ANR	1927958	ExpressionStatement	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"	3048:4:95656:95713	1927444	1	True				
ANR	1927959	CallExpression	"smart_str_appends ( & list , ( char * ) dummy -> children -> content )"		1927444	0					
ANR	1927960	Callee	smart_str_appends		1927444	0					
ANR	1927961	Identifier	smart_str_appends		1927444	0					
ANR	1927962	ArgumentList	& list		1927444	1					
ANR	1927963	Argument	& list		1927444	0					
ANR	1927964	UnaryOperationExpression	& list		1927444	0					
ANR	1927965	UnaryOperator	&		1927444	0					
ANR	1927966	Identifier	list		1927444	1					
ANR	1927967	Argument	( char * ) dummy -> children -> content		1927444	1					
ANR	1927968	CastExpression	( char * ) dummy -> children -> content		1927444	0					
ANR	1927969	CastTarget	char *		1927444	0					
ANR	1927970	PtrMemberAccess	dummy -> children -> content		1927444	1					
ANR	1927971	PtrMemberAccess	dummy -> children		1927444	0					
ANR	1927972	Identifier	dummy		1927444	0					
ANR	1927973	Identifier	children		1927444	1					
ANR	1927974	Identifier	content		1927444	1					
ANR	1927975	ElseStatement	else		1927444	0					
ANR	1927976	CompoundStatement		67:10:1915:1915	1927444	0					
ANR	1927977	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"	3050:4:95731:95792	1927444	0	True				
ANR	1927978	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Violation of encoding rules"" )"		1927444	0					
ANR	1927979	Callee	soap_error0		1927444	0					
ANR	1927980	Identifier	soap_error0		1927444	0					
ANR	1927981	ArgumentList	E_ERROR		1927444	1					
ANR	1927982	Argument	E_ERROR		1927444	0					
ANR	1927983	Identifier	E_ERROR		1927444	0					
ANR	1927984	Argument	"""Encoding: Violation of encoding rules"""		1927444	1					
ANR	1927985	PrimaryExpression	"""Encoding: Violation of encoding rules"""		1927444	0					
ANR	1927986	ExpressionStatement	xmlUnlinkNode ( dummy )	3052:3:95802:95822	1927444	8	True				
ANR	1927987	CallExpression	xmlUnlinkNode ( dummy )		1927444	0					
ANR	1927988	Callee	xmlUnlinkNode		1927444	0					
ANR	1927989	Identifier	xmlUnlinkNode		1927444	0					
ANR	1927990	ArgumentList	dummy		1927444	1					
ANR	1927991	Argument	dummy		1927444	0					
ANR	1927992	Identifier	dummy		1927444	0					
ANR	1927993	ExpressionStatement	xmlFreeNode ( dummy )	3053:3:95827:95845	1927444	9	True				
ANR	1927994	CallExpression	xmlFreeNode ( dummy )		1927444	0					
ANR	1927995	Callee	xmlFreeNode		1927444	0					
ANR	1927996	Identifier	xmlFreeNode		1927444	0					
ANR	1927997	ArgumentList	dummy		1927444	1					
ANR	1927998	Argument	dummy		1927444	0					
ANR	1927999	Identifier	dummy		1927444	0					
ANR	1928000	ExpressionStatement	start = next	3055:3:95851:95863	1927444	10	True				
ANR	1928001	AssignmentExpression	start = next		1927444	0		=			
ANR	1928002	Identifier	start		1927444	0					
ANR	1928003	Identifier	next		1927444	1					
ANR	1928004	ExpressionStatement	smart_str_0 ( & list )	3057:2:95871:95889	1927444	8	True				
ANR	1928005	CallExpression	smart_str_0 ( & list )		1927444	0					
ANR	1928006	Callee	smart_str_0		1927444	0					
ANR	1928007	Identifier	smart_str_0		1927444	0					
ANR	1928008	ArgumentList	& list		1927444	1					
ANR	1928009	Argument	& list		1927444	0					
ANR	1928010	UnaryOperationExpression	& list		1927444	0					
ANR	1928011	UnaryOperator	&		1927444	0					
ANR	1928012	Identifier	list		1927444	1					
ANR	1928013	ExpressionStatement	"xmlNodeSetContentLen ( ret , BAD_CAST ( ZSTR_VAL ( list . s ) ) , ZSTR_LEN ( list . s ) )"	3058:2:95893:95964	1927444	9	True				
ANR	1928014	CallExpression	"xmlNodeSetContentLen ( ret , BAD_CAST ( ZSTR_VAL ( list . s ) ) , ZSTR_LEN ( list . s ) )"		1927444	0					
ANR	1928015	Callee	xmlNodeSetContentLen		1927444	0					
ANR	1928016	Identifier	xmlNodeSetContentLen		1927444	0					
ANR	1928017	ArgumentList	ret		1927444	1					
ANR	1928018	Argument	ret		1927444	0					
ANR	1928019	Identifier	ret		1927444	0					
ANR	1928020	Argument	BAD_CAST ( ZSTR_VAL ( list . s ) )		1927444	1					
ANR	1928021	CallExpression	BAD_CAST ( ZSTR_VAL ( list . s ) )		1927444	0					
ANR	1928022	Callee	BAD_CAST		1927444	0					
ANR	1928023	Identifier	BAD_CAST		1927444	0					
ANR	1928024	ArgumentList	ZSTR_VAL ( list . s )		1927444	1					
ANR	1928025	Argument	ZSTR_VAL ( list . s )		1927444	0					
ANR	1928026	CallExpression	ZSTR_VAL ( list . s )		1927444	0					
ANR	1928027	Callee	ZSTR_VAL		1927444	0					
ANR	1928028	Identifier	ZSTR_VAL		1927444	0					
ANR	1928029	ArgumentList	list . s		1927444	1					
ANR	1928030	Argument	list . s		1927444	0					
ANR	1928031	MemberAccess	list . s		1927444	0					
ANR	1928032	Identifier	list		1927444	0					
ANR	1928033	Identifier	s		1927444	1					
ANR	1928034	Argument	ZSTR_LEN ( list . s )		1927444	2					
ANR	1928035	CallExpression	ZSTR_LEN ( list . s )		1927444	0					
ANR	1928036	Callee	ZSTR_LEN		1927444	0					
ANR	1928037	Identifier	ZSTR_LEN		1927444	0					
ANR	1928038	ArgumentList	list . s		1927444	1					
ANR	1928039	Argument	list . s		1927444	0					
ANR	1928040	MemberAccess	list . s		1927444	0					
ANR	1928041	Identifier	list		1927444	0					
ANR	1928042	Identifier	s		1927444	1					
ANR	1928043	ExpressionStatement	smart_str_free ( & list )	3059:2:95968:95989	1927444	10	True				
ANR	1928044	CallExpression	smart_str_free ( & list )		1927444	0					
ANR	1928045	Callee	smart_str_free		1927444	0					
ANR	1928046	Identifier	smart_str_free		1927444	0					
ANR	1928047	ArgumentList	& list		1927444	1					
ANR	1928048	Argument	& list		1927444	0					
ANR	1928049	UnaryOperationExpression	& list		1927444	0					
ANR	1928050	UnaryOperator	&		1927444	0					
ANR	1928051	Identifier	list		1927444	1					
ANR	1928052	ExpressionStatement	efree ( str )	3060:2:95993:96003	1927444	11	True				
ANR	1928053	CallExpression	efree ( str )		1927444	0					
ANR	1928054	Callee	efree		1927444	0					
ANR	1928055	Identifier	efree		1927444	0					
ANR	1928056	ArgumentList	str		1927444	1					
ANR	1928057	Argument	str		1927444	0					
ANR	1928058	Identifier	str		1927444	0					
ANR	1928059	IfStatement	if ( data == & tmp )		1927444	12					
ANR	1928060	Condition	data == & tmp	3061:6:96011:96022	1927444	0	True				
ANR	1928061	EqualityExpression	data == & tmp		1927444	0		==			
ANR	1928062	Identifier	data		1927444	0					
ANR	1928063	UnaryOperationExpression	& tmp		1927444	1					
ANR	1928064	UnaryOperator	&		1927444	0					
ANR	1928065	Identifier	tmp		1927444	1					
ANR	1928066	CompoundStatement		79:20:2215:2215	1927444	1					
ANR	1928067	ExpressionStatement	zval_dtor ( & tmp )	3061:21:96026:96041	1927444	0	True				
ANR	1928068	CallExpression	zval_dtor ( & tmp )		1927444	0					
ANR	1928069	Callee	zval_dtor		1927444	0					
ANR	1928070	Identifier	zval_dtor		1927444	0					
ANR	1928071	ArgumentList	& tmp		1927444	1					
ANR	1928072	Argument	& tmp		1927444	0					
ANR	1928073	UnaryOperationExpression	& tmp		1927444	0					
ANR	1928074	UnaryOperator	&		1927444	0					
ANR	1928075	Identifier	tmp		1927444	1					
ANR	1928076	ReturnStatement	return ret ;	3063:1:96048:96058	1927444	7	True				
ANR	1928077	Identifier	ret		1927444	0					
ANR	1928078	ReturnType	static xmlNodePtr		1927444	1					
ANR	1928079	Identifier	to_xml_list		1927444	2					
ANR	1928080	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent"		1927444	3					
ANR	1928081	Parameter	encodeTypePtr enc	2983:30:93748:93764	1927444	0	True				
ANR	1928082	ParameterType	encodeTypePtr		1927444	0					
ANR	1928083	Identifier	enc		1927444	1					
ANR	1928084	Parameter	zval * data	2983:49:93767:93776	1927444	1	True				
ANR	1928085	ParameterType	zval *		1927444	0					
ANR	1928086	Identifier	data		1927444	1					
ANR	1928087	Parameter	int style	2983:61:93779:93787	1927444	2	True				
ANR	1928088	ParameterType	int		1927444	0					
ANR	1928089	Identifier	style		1927444	1					
ANR	1928090	Parameter	xmlNodePtr parent	2983:72:93790:93806	1927444	3	True				
ANR	1928091	ParameterType	xmlNodePtr		1927444	0					
ANR	1928092	Identifier	parent		1927444	1					
ANR	1928093	CFGEntryNode	ENTRY		1927444		True				
ANR	1928094	CFGExitNode	EXIT		1927444		True				
ANR	1928095	CFGErrorNode	ERROR		1927444		True				
ANR	1928096	Symbol	list_enc		1927444						
ANR	1928097	Symbol	parent		1927444						
ANR	1928098	Symbol	type -> encode		1927444						
ANR	1928099	Symbol	data		1927444						
ANR	1928100	Symbol	dummy -> children -> content		1927444						
ANR	1928101	Symbol	* start		1927444						
ANR	1928102	Symbol	* dummy -> children		1927444						
ANR	1928103	Symbol	strchr		1927444						
ANR	1928104	Symbol	* next		1927444						
ANR	1928105	Symbol	type		1927444						
ANR	1928106	Symbol	ht		1927444						
ANR	1928107	Symbol	dummy		1927444						
ANR	1928108	Symbol	& list		1927444						
ANR	1928109	Symbol	tmp		1927444						
ANR	1928110	Symbol	& dummy_zval		1927444						
ANR	1928111	Symbol	IS_STRING		1927444						
ANR	1928112	Symbol	enc -> sdl_type		1927444						
ANR	1928113	Symbol	ret		1927444						
ANR	1928114	Symbol	NULL		1927444						
ANR	1928115	Symbol	* enc -> sdl_type		1927444						
ANR	1928116	Symbol	* dummy		1927444						
ANR	1928117	Symbol	list		1927444						
ANR	1928118	Symbol	* * enc		1927444						
ANR	1928119	Symbol	str		1927444						
ANR	1928120	Symbol	SOAP_LITERAL		1927444						
ANR	1928121	Symbol	style		1927444						
ANR	1928122	Symbol	& tmp		1927444						
ANR	1928123	Symbol	* enc		1927444						
ANR	1928124	Symbol	BAD_CAST		1927444						
ANR	1928125	Symbol	XSD_TYPEKIND_LIST		1927444						
ANR	1928126	Symbol	next		1927444						
ANR	1928127	Symbol	* * dummy		1927444						
ANR	1928128	Symbol	estrndup		1927444						
ANR	1928129	Symbol	dummy_zval		1927444						
ANR	1928130	Symbol	* type		1927444						
ANR	1928131	Symbol	IS_ARRAY		1927444						
ANR	1928132	Symbol	Z_STRLEN_P		1927444						
ANR	1928133	Symbol	enc		1927444						
ANR	1928134	Symbol	Z_ARRVAL_P		1927444						
ANR	1928135	Symbol	master_to_xml		1927444						
ANR	1928136	Symbol	list . s		1927444						
ANR	1928137	Symbol	start		1927444						
ANR	1928138	Symbol	zval_get_string		1927444						
ANR	1928139	Symbol	xmlNewNode		1927444						
ANR	1928140	Symbol	Z_TYPE_P		1927444						
ANR	1928141	Symbol	Z_STRVAL_P		1927444						
ANR	1928142	Symbol	dummy -> children		1927444						
ANR	1928143	Symbol	ZSTR_VAL		1927444						
ANR	1928144	Symbol	E_ERROR		1927444						
ANR	1928145	Symbol	enc -> sdl_type -> kind		1927444						
ANR	1928146	Symbol	ZSTR_LEN		1927444						
ANR	1928147	Symbol	enc -> sdl_type -> elements		1927444						
ANR	1928148	Function	to_xml_list1	3066:0:96063:96227							
ANR	1928149	FunctionDef	"to_xml_list1 (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent)"		1928148	0					
ANR	1928150	CompoundStatement		3066:92:96155:96227	1928148	0					
ANR	1928151	ReturnStatement	"return to_xml_list ( enc , data , style , parent ) ;"	3068:1:96183:96225	1928148	0	True				
ANR	1928152	CallExpression	"to_xml_list ( enc , data , style , parent )"		1928148	0					
ANR	1928153	Callee	to_xml_list		1928148	0					
ANR	1928154	Identifier	to_xml_list		1928148	0					
ANR	1928155	ArgumentList	enc		1928148	1					
ANR	1928156	Argument	enc		1928148	0					
ANR	1928157	Identifier	enc		1928148	0					
ANR	1928158	Argument	data		1928148	1					
ANR	1928159	Identifier	data		1928148	0					
ANR	1928160	Argument	style		1928148	2					
ANR	1928161	Identifier	style		1928148	0					
ANR	1928162	Argument	parent		1928148	3					
ANR	1928163	Identifier	parent		1928148	0					
ANR	1928164	ReturnType	static xmlNodePtr		1928148	1					
ANR	1928165	Identifier	to_xml_list1		1928148	2					
ANR	1928166	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent"		1928148	3					
ANR	1928167	Parameter	encodeTypePtr enc	3066:31:96094:96110	1928148	0	True				
ANR	1928168	ParameterType	encodeTypePtr		1928148	0					
ANR	1928169	Identifier	enc		1928148	1					
ANR	1928170	Parameter	zval * data	3066:50:96113:96122	1928148	1	True				
ANR	1928171	ParameterType	zval *		1928148	0					
ANR	1928172	Identifier	data		1928148	1					
ANR	1928173	Parameter	int style	3066:62:96125:96133	1928148	2	True				
ANR	1928174	ParameterType	int		1928148	0					
ANR	1928175	Identifier	style		1928148	1					
ANR	1928176	Parameter	xmlNodePtr parent	3066:73:96136:96152	1928148	3	True				
ANR	1928177	ParameterType	xmlNodePtr		1928148	0					
ANR	1928178	Identifier	parent		1928148	1					
ANR	1928179	CFGEntryNode	ENTRY		1928148		True				
ANR	1928180	CFGExitNode	EXIT		1928148		True				
ANR	1928181	Symbol	parent		1928148						
ANR	1928182	Symbol	to_xml_list		1928148						
ANR	1928183	Symbol	data		1928148						
ANR	1928184	Symbol	style		1928148						
ANR	1928185	Symbol	enc		1928148						
ANR	1928186	Function	to_zval_union	3071:0:96230:96355							
ANR	1928187	FunctionDef	"to_zval_union (zval * ret , encodeTypePtr enc , xmlNodePtr data)"		1928186	0					
ANR	1928188	CompoundStatement		3071:74:96304:96355	1928186	0					
ANR	1928189	ReturnStatement	"return to_zval_list ( ret , enc , data ) ;"	3073:1:96318:96353	1928186	0	True				
ANR	1928190	CallExpression	"to_zval_list ( ret , enc , data )"		1928186	0					
ANR	1928191	Callee	to_zval_list		1928186	0					
ANR	1928192	Identifier	to_zval_list		1928186	0					
ANR	1928193	ArgumentList	ret		1928186	1					
ANR	1928194	Argument	ret		1928186	0					
ANR	1928195	Identifier	ret		1928186	0					
ANR	1928196	Argument	enc		1928186	1					
ANR	1928197	Identifier	enc		1928186	0					
ANR	1928198	Argument	data		1928186	2					
ANR	1928199	Identifier	data		1928186	0					
ANR	1928200	ReturnType	static zval *		1928186	1					
ANR	1928201	Identifier	to_zval_union		1928186	2					
ANR	1928202	ParameterList	"zval * ret , encodeTypePtr enc , xmlNodePtr data"		1928186	3					
ANR	1928203	Parameter	zval * ret	3071:27:96257:96265	1928186	0	True				
ANR	1928204	ParameterType	zval *		1928186	0					
ANR	1928205	Identifier	ret		1928186	1					
ANR	1928206	Parameter	encodeTypePtr enc	3071:38:96268:96284	1928186	1	True				
ANR	1928207	ParameterType	encodeTypePtr		1928186	0					
ANR	1928208	Identifier	enc		1928186	1					
ANR	1928209	Parameter	xmlNodePtr data	3071:57:96287:96301	1928186	2	True				
ANR	1928210	ParameterType	xmlNodePtr		1928186	0					
ANR	1928211	Identifier	data		1928186	1					
ANR	1928212	CFGEntryNode	ENTRY		1928186		True				
ANR	1928213	CFGExitNode	EXIT		1928186		True				
ANR	1928214	Symbol	ret		1928186						
ANR	1928215	Symbol	data		1928186						
ANR	1928216	Symbol	to_zval_list		1928186						
ANR	1928217	Symbol	enc		1928186						
ANR	1928218	Function	to_xml_union	3076:0:96358:96508							
ANR	1928219	FunctionDef	"to_xml_union (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent)"		1928218	0					
ANR	1928220	CompoundStatement		3076:92:96450:96508	1928218	0					
ANR	1928221	ReturnStatement	"return to_xml_list ( enc , data , style , parent ) ;"	3078:1:96464:96506	1928218	0	True				
ANR	1928222	CallExpression	"to_xml_list ( enc , data , style , parent )"		1928218	0					
ANR	1928223	Callee	to_xml_list		1928218	0					
ANR	1928224	Identifier	to_xml_list		1928218	0					
ANR	1928225	ArgumentList	enc		1928218	1					
ANR	1928226	Argument	enc		1928218	0					
ANR	1928227	Identifier	enc		1928218	0					
ANR	1928228	Argument	data		1928218	1					
ANR	1928229	Identifier	data		1928218	0					
ANR	1928230	Argument	style		1928218	2					
ANR	1928231	Identifier	style		1928218	0					
ANR	1928232	Argument	parent		1928218	3					
ANR	1928233	Identifier	parent		1928218	0					
ANR	1928234	ReturnType	static xmlNodePtr		1928218	1					
ANR	1928235	Identifier	to_xml_union		1928218	2					
ANR	1928236	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent"		1928218	3					
ANR	1928237	Parameter	encodeTypePtr enc	3076:31:96389:96405	1928218	0	True				
ANR	1928238	ParameterType	encodeTypePtr		1928218	0					
ANR	1928239	Identifier	enc		1928218	1					
ANR	1928240	Parameter	zval * data	3076:50:96408:96417	1928218	1	True				
ANR	1928241	ParameterType	zval *		1928218	0					
ANR	1928242	Identifier	data		1928218	1					
ANR	1928243	Parameter	int style	3076:62:96420:96428	1928218	2	True				
ANR	1928244	ParameterType	int		1928218	0					
ANR	1928245	Identifier	style		1928218	1					
ANR	1928246	Parameter	xmlNodePtr parent	3076:73:96431:96447	1928218	3	True				
ANR	1928247	ParameterType	xmlNodePtr		1928218	0					
ANR	1928248	Identifier	parent		1928218	1					
ANR	1928249	CFGEntryNode	ENTRY		1928218		True				
ANR	1928250	CFGExitNode	EXIT		1928218		True				
ANR	1928251	Symbol	parent		1928218						
ANR	1928252	Symbol	to_xml_list		1928218						
ANR	1928253	Symbol	data		1928218						
ANR	1928254	Symbol	style		1928218						
ANR	1928255	Symbol	enc		1928218						
ANR	1928256	Function	to_zval_any	3081:0:96511:97302							
ANR	1928257	FunctionDef	"to_zval_any (zval * ret , encodeTypePtr type , xmlNodePtr data)"		1928256	0					
ANR	1928258	CompoundStatement		3082:0:96584:97302	1928256	0					
ANR	1928259	IdentifierDeclStatement	xmlBufferPtr buf ;	3083:1:96587:96603	1928256	0	True				
ANR	1928260	IdentifierDecl	buf		1928256	0					
ANR	1928261	IdentifierDeclType	xmlBufferPtr		1928256	0					
ANR	1928262	Identifier	buf		1928256	1					
ANR	1928263	IfStatement	if ( SOAP_GLOBAL ( sdl ) && SOAP_GLOBAL ( sdl ) -> elements && data -> name )		1928256	1					
ANR	1928264	Condition	SOAP_GLOBAL ( sdl ) && SOAP_GLOBAL ( sdl ) -> elements && data -> name	3085:5:96611:96670	1928256	0	True				
ANR	1928265	AndExpression	SOAP_GLOBAL ( sdl ) && SOAP_GLOBAL ( sdl ) -> elements && data -> name		1928256	0		&&			
ANR	1928266	CallExpression	SOAP_GLOBAL ( sdl )		1928256	0					
ANR	1928267	Callee	SOAP_GLOBAL		1928256	0					
ANR	1928268	Identifier	SOAP_GLOBAL		1928256	0					
ANR	1928269	ArgumentList	sdl		1928256	1					
ANR	1928270	Argument	sdl		1928256	0					
ANR	1928271	Identifier	sdl		1928256	0					
ANR	1928272	AndExpression	SOAP_GLOBAL ( sdl ) -> elements && data -> name		1928256	1		&&			
ANR	1928273	PtrMemberAccess	SOAP_GLOBAL ( sdl ) -> elements		1928256	0					
ANR	1928274	CallExpression	SOAP_GLOBAL ( sdl )		1928256	0					
ANR	1928275	Callee	SOAP_GLOBAL		1928256	0					
ANR	1928276	Identifier	SOAP_GLOBAL		1928256	0					
ANR	1928277	ArgumentList	sdl		1928256	1					
ANR	1928278	Argument	sdl		1928256	0					
ANR	1928279	Identifier	sdl		1928256	0					
ANR	1928280	Identifier	elements		1928256	1					
ANR	1928281	PtrMemberAccess	data -> name		1928256	1					
ANR	1928282	Identifier	data		1928256	0					
ANR	1928283	Identifier	name		1928256	1					
ANR	1928284	CompoundStatement		6:2:117:136	1928256	1					
ANR	1928285	IdentifierDeclStatement	smart_str nscat = { 0 } ;	3086:2:96677:96698	1928256	0	True				
ANR	1928286	IdentifierDecl	nscat = { 0 }		1928256	0					
ANR	1928287	IdentifierDeclType	smart_str		1928256	0					
ANR	1928288	Identifier	nscat		1928256	1					
ANR	1928289	AssignmentExpression	nscat = { 0 }		1928256	2		=			
ANR	1928290	Identifier	nscat		1928256	0					
ANR	1928291	InitializerList	0		1928256	1					
ANR	1928292	PrimaryExpression	0		1928256	0					
ANR	1928293	IdentifierDeclStatement	sdlTypePtr sdl_type ;	3087:2:96702:96721	1928256	1	True				
ANR	1928294	IdentifierDecl	sdl_type		1928256	0					
ANR	1928295	IdentifierDeclType	sdlTypePtr		1928256	0					
ANR	1928296	Identifier	sdl_type		1928256	1					
ANR	1928297	IfStatement	if ( data -> ns && data -> ns -> href )		1928256	2					
ANR	1928298	Condition	data -> ns && data -> ns -> href	3089:6:96730:96755	1928256	0	True				
ANR	1928299	AndExpression	data -> ns && data -> ns -> href		1928256	0		&&			
ANR	1928300	PtrMemberAccess	data -> ns		1928256	0					
ANR	1928301	Identifier	data		1928256	0					
ANR	1928302	Identifier	ns		1928256	1					
ANR	1928303	PtrMemberAccess	data -> ns -> href		1928256	1					
ANR	1928304	PtrMemberAccess	data -> ns		1928256	0					
ANR	1928305	Identifier	data		1928256	0					
ANR	1928306	Identifier	ns		1928256	1					
ANR	1928307	Identifier	href		1928256	1					
ANR	1928308	CompoundStatement		8:34:173:173	1928256	1					
ANR	1928309	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) data -> ns -> href )"	3090:3:96763:96811	1928256	0	True				
ANR	1928310	CallExpression	"smart_str_appends ( & nscat , ( char * ) data -> ns -> href )"		1928256	0					
ANR	1928311	Callee	smart_str_appends		1928256	0					
ANR	1928312	Identifier	smart_str_appends		1928256	0					
ANR	1928313	ArgumentList	& nscat		1928256	1					
ANR	1928314	Argument	& nscat		1928256	0					
ANR	1928315	UnaryOperationExpression	& nscat		1928256	0					
ANR	1928316	UnaryOperator	&		1928256	0					
ANR	1928317	Identifier	nscat		1928256	1					
ANR	1928318	Argument	( char * ) data -> ns -> href		1928256	1					
ANR	1928319	CastExpression	( char * ) data -> ns -> href		1928256	0					
ANR	1928320	CastTarget	char *		1928256	0					
ANR	1928321	PtrMemberAccess	data -> ns -> href		1928256	1					
ANR	1928322	PtrMemberAccess	data -> ns		1928256	0					
ANR	1928323	Identifier	data		1928256	0					
ANR	1928324	Identifier	ns		1928256	1					
ANR	1928325	Identifier	href		1928256	1					
ANR	1928326	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	3091:3:96816:96846	1928256	1	True				
ANR	1928327	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1928256	0					
ANR	1928328	Callee	smart_str_appendc		1928256	0					
ANR	1928329	Identifier	smart_str_appendc		1928256	0					
ANR	1928330	ArgumentList	& nscat		1928256	1					
ANR	1928331	Argument	& nscat		1928256	0					
ANR	1928332	UnaryOperationExpression	& nscat		1928256	0					
ANR	1928333	UnaryOperator	&		1928256	0					
ANR	1928334	Identifier	nscat		1928256	1					
ANR	1928335	Argument	':'		1928256	1					
ANR	1928336	PrimaryExpression	':'		1928256	0					
ANR	1928337	ExpressionStatement	"smart_str_appends ( & nscat , ( char * ) data -> name )"	3093:2:96854:96898	1928256	3	True				
ANR	1928338	CallExpression	"smart_str_appends ( & nscat , ( char * ) data -> name )"		1928256	0					
ANR	1928339	Callee	smart_str_appends		1928256	0					
ANR	1928340	Identifier	smart_str_appends		1928256	0					
ANR	1928341	ArgumentList	& nscat		1928256	1					
ANR	1928342	Argument	& nscat		1928256	0					
ANR	1928343	UnaryOperationExpression	& nscat		1928256	0					
ANR	1928344	UnaryOperator	&		1928256	0					
ANR	1928345	Identifier	nscat		1928256	1					
ANR	1928346	Argument	( char * ) data -> name		1928256	1					
ANR	1928347	CastExpression	( char * ) data -> name		1928256	0					
ANR	1928348	CastTarget	char *		1928256	0					
ANR	1928349	PtrMemberAccess	data -> name		1928256	1					
ANR	1928350	Identifier	data		1928256	0					
ANR	1928351	Identifier	name		1928256	1					
ANR	1928352	ExpressionStatement	smart_str_0 ( & nscat )	3094:2:96902:96921	1928256	4	True				
ANR	1928353	CallExpression	smart_str_0 ( & nscat )		1928256	0					
ANR	1928354	Callee	smart_str_0		1928256	0					
ANR	1928355	Identifier	smart_str_0		1928256	0					
ANR	1928356	ArgumentList	& nscat		1928256	1					
ANR	1928357	Argument	& nscat		1928256	0					
ANR	1928358	UnaryOperationExpression	& nscat		1928256	0					
ANR	1928359	UnaryOperator	&		1928256	0					
ANR	1928360	Identifier	nscat		1928256	1					
ANR	1928361	IfStatement	"if ( ( sdl_type = zend_hash_find_ptr ( SOAP_GLOBAL ( sdl ) -> elements , nscat . s ) ) != NULL && sdl_type -> encode )"		1928256	5					
ANR	1928362	Condition	"( sdl_type = zend_hash_find_ptr ( SOAP_GLOBAL ( sdl ) -> elements , nscat . s ) ) != NULL && sdl_type -> encode"	3096:6:96930:97031	1928256	0	True				
ANR	1928363	AndExpression	"( sdl_type = zend_hash_find_ptr ( SOAP_GLOBAL ( sdl ) -> elements , nscat . s ) ) != NULL && sdl_type -> encode"		1928256	0		&&			
ANR	1928364	EqualityExpression	"( sdl_type = zend_hash_find_ptr ( SOAP_GLOBAL ( sdl ) -> elements , nscat . s ) ) != NULL"		1928256	0		!=			
ANR	1928365	AssignmentExpression	"sdl_type = zend_hash_find_ptr ( SOAP_GLOBAL ( sdl ) -> elements , nscat . s )"		1928256	0		=			
ANR	1928366	Identifier	sdl_type		1928256	0					
ANR	1928367	CallExpression	"zend_hash_find_ptr ( SOAP_GLOBAL ( sdl ) -> elements , nscat . s )"		1928256	1					
ANR	1928368	Callee	zend_hash_find_ptr		1928256	0					
ANR	1928369	Identifier	zend_hash_find_ptr		1928256	0					
ANR	1928370	ArgumentList	SOAP_GLOBAL ( sdl ) -> elements		1928256	1					
ANR	1928371	Argument	SOAP_GLOBAL ( sdl ) -> elements		1928256	0					
ANR	1928372	PtrMemberAccess	SOAP_GLOBAL ( sdl ) -> elements		1928256	0					
ANR	1928373	CallExpression	SOAP_GLOBAL ( sdl )		1928256	0					
ANR	1928374	Callee	SOAP_GLOBAL		1928256	0					
ANR	1928375	Identifier	SOAP_GLOBAL		1928256	0					
ANR	1928376	ArgumentList	sdl		1928256	1					
ANR	1928377	Argument	sdl		1928256	0					
ANR	1928378	Identifier	sdl		1928256	0					
ANR	1928379	Identifier	elements		1928256	1					
ANR	1928380	Argument	nscat . s		1928256	1					
ANR	1928381	MemberAccess	nscat . s		1928256	0					
ANR	1928382	Identifier	nscat		1928256	0					
ANR	1928383	Identifier	s		1928256	1					
ANR	1928384	Identifier	NULL		1928256	1					
ANR	1928385	PtrMemberAccess	sdl_type -> encode		1928256	1					
ANR	1928386	Identifier	sdl_type		1928256	0					
ANR	1928387	Identifier	encode		1928256	1					
ANR	1928388	CompoundStatement		16:24:449:449	1928256	1					
ANR	1928389	ExpressionStatement	smart_str_free ( & nscat )	3098:3:97039:97061	1928256	0	True				
ANR	1928390	CallExpression	smart_str_free ( & nscat )		1928256	0					
ANR	1928391	Callee	smart_str_free		1928256	0					
ANR	1928392	Identifier	smart_str_free		1928256	0					
ANR	1928393	ArgumentList	& nscat		1928256	1					
ANR	1928394	Argument	& nscat		1928256	0					
ANR	1928395	UnaryOperationExpression	& nscat		1928256	0					
ANR	1928396	UnaryOperator	&		1928256	0					
ANR	1928397	Identifier	nscat		1928256	1					
ANR	1928398	ReturnStatement	"return master_to_zval_int ( ret , sdl_type -> encode , data ) ;"	3099:3:97066:97120	1928256	1	True				
ANR	1928399	CallExpression	"master_to_zval_int ( ret , sdl_type -> encode , data )"		1928256	0					
ANR	1928400	Callee	master_to_zval_int		1928256	0					
ANR	1928401	Identifier	master_to_zval_int		1928256	0					
ANR	1928402	ArgumentList	ret		1928256	1					
ANR	1928403	Argument	ret		1928256	0					
ANR	1928404	Identifier	ret		1928256	0					
ANR	1928405	Argument	sdl_type -> encode		1928256	1					
ANR	1928406	PtrMemberAccess	sdl_type -> encode		1928256	0					
ANR	1928407	Identifier	sdl_type		1928256	0					
ANR	1928408	Identifier	encode		1928256	1					
ANR	1928409	Argument	data		1928256	2					
ANR	1928410	Identifier	data		1928256	0					
ANR	1928411	ExpressionStatement	smart_str_free ( & nscat )	3101:2:97128:97150	1928256	6	True				
ANR	1928412	CallExpression	smart_str_free ( & nscat )		1928256	0					
ANR	1928413	Callee	smart_str_free		1928256	0					
ANR	1928414	Identifier	smart_str_free		1928256	0					
ANR	1928415	ArgumentList	& nscat		1928256	1					
ANR	1928416	Argument	& nscat		1928256	0					
ANR	1928417	UnaryOperationExpression	& nscat		1928256	0					
ANR	1928418	UnaryOperator	&		1928256	0					
ANR	1928419	Identifier	nscat		1928256	1					
ANR	1928420	ExpressionStatement	buf = xmlBufferCreate ( )	3104:1:97157:97180	1928256	2	True				
ANR	1928421	AssignmentExpression	buf = xmlBufferCreate ( )		1928256	0		=			
ANR	1928422	Identifier	buf		1928256	0					
ANR	1928423	CallExpression	xmlBufferCreate ( )		1928256	1					
ANR	1928424	Callee	xmlBufferCreate		1928256	0					
ANR	1928425	Identifier	xmlBufferCreate		1928256	0					
ANR	1928426	ArgumentList			1928256	1					
ANR	1928427	ExpressionStatement	"xmlNodeDump ( buf , NULL , data , 0 , 0 )"	3105:1:97183:97217	1928256	3	True				
ANR	1928428	CallExpression	"xmlNodeDump ( buf , NULL , data , 0 , 0 )"		1928256	0					
ANR	1928429	Callee	xmlNodeDump		1928256	0					
ANR	1928430	Identifier	xmlNodeDump		1928256	0					
ANR	1928431	ArgumentList	buf		1928256	1					
ANR	1928432	Argument	buf		1928256	0					
ANR	1928433	Identifier	buf		1928256	0					
ANR	1928434	Argument	NULL		1928256	1					
ANR	1928435	Identifier	NULL		1928256	0					
ANR	1928436	Argument	data		1928256	2					
ANR	1928437	Identifier	data		1928256	0					
ANR	1928438	Argument	0		1928256	3					
ANR	1928439	PrimaryExpression	0		1928256	0					
ANR	1928440	Argument	0		1928256	4					
ANR	1928441	PrimaryExpression	0		1928256	0					
ANR	1928442	ExpressionStatement	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( buf ) )"	3106:1:97220:97266	1928256	4	True				
ANR	1928443	CallExpression	"ZVAL_STRING ( ret , ( char * ) xmlBufferContent ( buf ) )"		1928256	0					
ANR	1928444	Callee	ZVAL_STRING		1928256	0					
ANR	1928445	Identifier	ZVAL_STRING		1928256	0					
ANR	1928446	ArgumentList	ret		1928256	1					
ANR	1928447	Argument	ret		1928256	0					
ANR	1928448	Identifier	ret		1928256	0					
ANR	1928449	Argument	( char * ) xmlBufferContent ( buf )		1928256	1					
ANR	1928450	CastExpression	( char * ) xmlBufferContent ( buf )		1928256	0					
ANR	1928451	CastTarget	char *		1928256	0					
ANR	1928452	CallExpression	xmlBufferContent ( buf )		1928256	1					
ANR	1928453	Callee	xmlBufferContent		1928256	0					
ANR	1928454	Identifier	xmlBufferContent		1928256	0					
ANR	1928455	ArgumentList	buf		1928256	1					
ANR	1928456	Argument	buf		1928256	0					
ANR	1928457	Identifier	buf		1928256	0					
ANR	1928458	ExpressionStatement	xmlBufferFree ( buf )	3107:1:97269:97287	1928256	5	True				
ANR	1928459	CallExpression	xmlBufferFree ( buf )		1928256	0					
ANR	1928460	Callee	xmlBufferFree		1928256	0					
ANR	1928461	Identifier	xmlBufferFree		1928256	0					
ANR	1928462	ArgumentList	buf		1928256	1					
ANR	1928463	Argument	buf		1928256	0					
ANR	1928464	Identifier	buf		1928256	0					
ANR	1928465	ReturnStatement	return ret ;	3108:1:97290:97300	1928256	6	True				
ANR	1928466	Identifier	ret		1928256	0					
ANR	1928467	ReturnType	static zval *		1928256	1					
ANR	1928468	Identifier	to_zval_any		1928256	2					
ANR	1928469	ParameterList	"zval * ret , encodeTypePtr type , xmlNodePtr data"		1928256	3					
ANR	1928470	Parameter	zval * ret	3081:25:96536:96544	1928256	0	True				
ANR	1928471	ParameterType	zval *		1928256	0					
ANR	1928472	Identifier	ret		1928256	1					
ANR	1928473	Parameter	encodeTypePtr type	3081:36:96547:96564	1928256	1	True				
ANR	1928474	ParameterType	encodeTypePtr		1928256	0					
ANR	1928475	Identifier	type		1928256	1					
ANR	1928476	Parameter	xmlNodePtr data	3081:56:96567:96581	1928256	2	True				
ANR	1928477	ParameterType	xmlNodePtr		1928256	0					
ANR	1928478	Identifier	data		1928256	1					
ANR	1928479	CFGEntryNode	ENTRY		1928256		True				
ANR	1928480	CFGExitNode	EXIT		1928256		True				
ANR	1928481	Symbol	* * data		1928256						
ANR	1928482	Symbol	xmlBufferCreate		1928256						
ANR	1928483	Symbol	data		1928256						
ANR	1928484	Symbol	* data -> ns		1928256						
ANR	1928485	Symbol	data -> name		1928256						
ANR	1928486	Symbol	data -> ns		1928256						
ANR	1928487	Symbol	type		1928256						
ANR	1928488	Symbol	* SOAP_GLOBAL		1928256						
ANR	1928489	Symbol	sdl_type -> encode		1928256						
ANR	1928490	Symbol	* sdl_type		1928256						
ANR	1928491	Symbol	master_to_zval_int		1928256						
ANR	1928492	Symbol	nscat . s		1928256						
ANR	1928493	Symbol	zend_hash_find_ptr		1928256						
ANR	1928494	Symbol	ret		1928256						
ANR	1928495	Symbol	NULL		1928256						
ANR	1928496	Symbol	data -> ns -> href		1928256						
ANR	1928497	Symbol	sdl_type		1928256						
ANR	1928498	Symbol	SOAP_GLOBAL		1928256						
ANR	1928499	Symbol	xmlBufferContent		1928256						
ANR	1928500	Symbol	buf		1928256						
ANR	1928501	Symbol	nscat		1928256						
ANR	1928502	Symbol	sdl		1928256						
ANR	1928503	Symbol	& nscat		1928256						
ANR	1928504	Symbol	* data		1928256						
ANR	1928505	Symbol	SOAP_GLOBAL ( sdl ) -> elements		1928256						
ANR	1928506	Function	to_xml_any	3111:0:97305:98319							
ANR	1928507	FunctionDef	"to_xml_any (encodeTypePtr type , zval * data , int style , xmlNodePtr parent)"		1928506	0					
ANR	1928508	CompoundStatement		3112:0:97396:98319	1928506	0					
ANR	1928509	IdentifierDeclStatement	xmlNodePtr ret = NULL ;	3113:1:97399:97420	1928506	0	True				
ANR	1928510	IdentifierDecl	ret = NULL		1928506	0					
ANR	1928511	IdentifierDeclType	xmlNodePtr		1928506	0					
ANR	1928512	Identifier	ret		1928506	1					
ANR	1928513	AssignmentExpression	ret = NULL		1928506	2		=			
ANR	1928514	Identifier	NULL		1928506	0					
ANR	1928515	Identifier	NULL		1928506	1					
ANR	1928516	IfStatement	if ( Z_TYPE_P ( data ) == IS_ARRAY )		1928506	1					
ANR	1928517	Condition	Z_TYPE_P ( data ) == IS_ARRAY	3115:5:97428:97453	1928506	0	True				
ANR	1928518	EqualityExpression	Z_TYPE_P ( data ) == IS_ARRAY		1928506	0		==			
ANR	1928519	CallExpression	Z_TYPE_P ( data )		1928506	0					
ANR	1928520	Callee	Z_TYPE_P		1928506	0					
ANR	1928521	Identifier	Z_TYPE_P		1928506	0					
ANR	1928522	ArgumentList	data		1928506	1					
ANR	1928523	Argument	data		1928506	0					
ANR	1928524	Identifier	data		1928506	0					
ANR	1928525	Identifier	IS_ARRAY		1928506	1					
ANR	1928526	CompoundStatement		7:2:121:138	1928506	1					
ANR	1928527	IdentifierDeclStatement	zval * el ;	3116:2:97460:97468	1928506	0	True				
ANR	1928528	IdentifierDecl	* el		1928506	0					
ANR	1928529	IdentifierDeclType	zval *		1928506	0					
ANR	1928530	Identifier	el		1928506	1					
ANR	1928531	IdentifierDeclStatement	encodePtr enc = get_conversion ( XSD_ANYXML ) ;	3117:2:97472:97514	1928506	1	True				
ANR	1928532	IdentifierDecl	enc = get_conversion ( XSD_ANYXML )		1928506	0					
ANR	1928533	IdentifierDeclType	encodePtr		1928506	0					
ANR	1928534	Identifier	enc		1928506	1					
ANR	1928535	AssignmentExpression	enc = get_conversion ( XSD_ANYXML )		1928506	2		=			
ANR	1928536	Identifier	enc		1928506	0					
ANR	1928537	CallExpression	get_conversion ( XSD_ANYXML )		1928506	1					
ANR	1928538	Callee	get_conversion		1928506	0					
ANR	1928539	Identifier	get_conversion		1928506	0					
ANR	1928540	ArgumentList	XSD_ANYXML		1928506	1					
ANR	1928541	Argument	XSD_ANYXML		1928506	0					
ANR	1928542	Identifier	XSD_ANYXML		1928506	0					
ANR	1928543	IdentifierDeclStatement	zend_string * name ;	3118:2:97518:97535	1928506	2	True				
ANR	1928544	IdentifierDecl	* name		1928506	0					
ANR	1928545	IdentifierDeclType	zend_string *		1928506	0					
ANR	1928546	Identifier	name		1928506	1					
ANR	1928547	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	3120:2:97540:97568	1928506	3	True				
ANR	1928548	Statement	(	3120:31:97569:97569	1928506	4	True				
ANR	1928549	Statement	Z_ARRVAL_P	3120:32:97570:97579	1928506	5	True				
ANR	1928550	Statement	(	3120:42:97580:97580	1928506	6	True				
ANR	1928551	Statement	data	3120:43:97581:97584	1928506	7	True				
ANR	1928552	Statement	)	3120:47:97585:97585	1928506	8	True				
ANR	1928553	Statement	","	3120:48:97586:97586	1928506	9	True				
ANR	1928554	Statement	name	3120:50:97588:97591	1928506	10	True				
ANR	1928555	Statement	","	3120:54:97592:97592	1928506	11	True				
ANR	1928556	Statement	el	3120:56:97594:97595	1928506	12	True				
ANR	1928557	Statement	)	3120:58:97596:97596	1928506	13	True				
ANR	1928558	CompoundStatement		9:60:201:201	1928506	14					
ANR	1928559	ExpressionStatement	"ret = master_to_xml ( enc , el , style , parent )"	3121:3:97603:97646	1928506	0	True				
ANR	1928560	AssignmentExpression	"ret = master_to_xml ( enc , el , style , parent )"		1928506	0		=			
ANR	1928561	Identifier	ret		1928506	0					
ANR	1928562	CallExpression	"master_to_xml ( enc , el , style , parent )"		1928506	1					
ANR	1928563	Callee	master_to_xml		1928506	0					
ANR	1928564	Identifier	master_to_xml		1928506	0					
ANR	1928565	ArgumentList	enc		1928506	1					
ANR	1928566	Argument	enc		1928506	0					
ANR	1928567	Identifier	enc		1928506	0					
ANR	1928568	Argument	el		1928506	1					
ANR	1928569	Identifier	el		1928506	0					
ANR	1928570	Argument	style		1928506	2					
ANR	1928571	Identifier	style		1928506	0					
ANR	1928572	Argument	parent		1928506	3					
ANR	1928573	Identifier	parent		1928506	0					
ANR	1928574	IfStatement	if ( ret && ret -> name != xmlStringTextNoenc )		1928506	1					
ANR	1928575	Condition	ret && ret -> name != xmlStringTextNoenc	3122:10:97658:97705	1928506	0	True				
ANR	1928576	AndExpression	ret && ret -> name != xmlStringTextNoenc		1928506	0		&&			
ANR	1928577	Identifier	ret		1928506	0					
ANR	1928578	EqualityExpression	ret -> name != xmlStringTextNoenc		1928506	1		!=			
ANR	1928579	PtrMemberAccess	ret -> name		1928506	0					
ANR	1928580	Identifier	ret		1928506	0					
ANR	1928581	Identifier	name		1928506	1					
ANR	1928582	Identifier	xmlStringTextNoenc		1928506	1					
ANR	1928583	CompoundStatement		12:43:311:311	1928506	1					
ANR	1928584	ExpressionStatement	"xmlNodeSetName ( ret , BAD_CAST ( ZSTR_VAL ( name ) ) )"	3124:4:97714:97759	1928506	0	True				
ANR	1928585	CallExpression	"xmlNodeSetName ( ret , BAD_CAST ( ZSTR_VAL ( name ) ) )"		1928506	0					
ANR	1928586	Callee	xmlNodeSetName		1928506	0					
ANR	1928587	Identifier	xmlNodeSetName		1928506	0					
ANR	1928588	ArgumentList	ret		1928506	1					
ANR	1928589	Argument	ret		1928506	0					
ANR	1928590	Identifier	ret		1928506	0					
ANR	1928591	Argument	BAD_CAST ( ZSTR_VAL ( name ) )		1928506	1					
ANR	1928592	CallExpression	BAD_CAST ( ZSTR_VAL ( name ) )		1928506	0					
ANR	1928593	Callee	BAD_CAST		1928506	0					
ANR	1928594	Identifier	BAD_CAST		1928506	0					
ANR	1928595	ArgumentList	ZSTR_VAL ( name )		1928506	1					
ANR	1928596	Argument	ZSTR_VAL ( name )		1928506	0					
ANR	1928597	CallExpression	ZSTR_VAL ( name )		1928506	0					
ANR	1928598	Callee	ZSTR_VAL		1928506	0					
ANR	1928599	Identifier	ZSTR_VAL		1928506	0					
ANR	1928600	ArgumentList	name		1928506	1					
ANR	1928601	Argument	name		1928506	0					
ANR	1928602	Identifier	name		1928506	0					
ANR	1928603	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3126:4:97773:97796	1928506	15	True				
ANR	1928604	CallExpression	ZEND_HASH_FOREACH_END ( )		1928506	0					
ANR	1928605	Callee	ZEND_HASH_FOREACH_END		1928506	0					
ANR	1928606	Identifier	ZEND_HASH_FOREACH_END		1928506	0					
ANR	1928607	ArgumentList			1928506	1					
ANR	1928608	ReturnStatement	return ret ;	3127:2:97800:97810	1928506	16	True				
ANR	1928609	Identifier	ret		1928506	0					
ANR	1928610	IfStatement	if ( Z_TYPE_P ( data ) == IS_STRING )		1928506	2					
ANR	1928611	Condition	Z_TYPE_P ( data ) == IS_STRING	3129:5:97820:97846	1928506	0	True				
ANR	1928612	EqualityExpression	Z_TYPE_P ( data ) == IS_STRING		1928506	0		==			
ANR	1928613	CallExpression	Z_TYPE_P ( data )		1928506	0					
ANR	1928614	Callee	Z_TYPE_P		1928506	0					
ANR	1928615	Identifier	Z_TYPE_P		1928506	0					
ANR	1928616	ArgumentList	data		1928506	1					
ANR	1928617	Argument	data		1928506	0					
ANR	1928618	Identifier	data		1928506	0					
ANR	1928619	Identifier	IS_STRING		1928506	1					
ANR	1928620	CompoundStatement		18:34:452:452	1928506	1					
ANR	1928621	ExpressionStatement	"ret = xmlNewTextLen ( BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"	3130:2:97853:97918	1928506	0	True				
ANR	1928622	AssignmentExpression	"ret = xmlNewTextLen ( BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"		1928506	0		=			
ANR	1928623	Identifier	ret		1928506	0					
ANR	1928624	CallExpression	"xmlNewTextLen ( BAD_CAST ( Z_STRVAL_P ( data ) ) , Z_STRLEN_P ( data ) )"		1928506	1					
ANR	1928625	Callee	xmlNewTextLen		1928506	0					
ANR	1928626	Identifier	xmlNewTextLen		1928506	0					
ANR	1928627	ArgumentList	BAD_CAST ( Z_STRVAL_P ( data ) )		1928506	1					
ANR	1928628	Argument	BAD_CAST ( Z_STRVAL_P ( data ) )		1928506	0					
ANR	1928629	CallExpression	BAD_CAST ( Z_STRVAL_P ( data ) )		1928506	0					
ANR	1928630	Callee	BAD_CAST		1928506	0					
ANR	1928631	Identifier	BAD_CAST		1928506	0					
ANR	1928632	ArgumentList	Z_STRVAL_P ( data )		1928506	1					
ANR	1928633	Argument	Z_STRVAL_P ( data )		1928506	0					
ANR	1928634	CallExpression	Z_STRVAL_P ( data )		1928506	0					
ANR	1928635	Callee	Z_STRVAL_P		1928506	0					
ANR	1928636	Identifier	Z_STRVAL_P		1928506	0					
ANR	1928637	ArgumentList	data		1928506	1					
ANR	1928638	Argument	data		1928506	0					
ANR	1928639	Identifier	data		1928506	0					
ANR	1928640	Argument	Z_STRLEN_P ( data )		1928506	1					
ANR	1928641	CallExpression	Z_STRLEN_P ( data )		1928506	0					
ANR	1928642	Callee	Z_STRLEN_P		1928506	0					
ANR	1928643	Identifier	Z_STRLEN_P		1928506	0					
ANR	1928644	ArgumentList	data		1928506	1					
ANR	1928645	Argument	data		1928506	0					
ANR	1928646	Identifier	data		1928506	0					
ANR	1928647	ElseStatement	else		1928506	0					
ANR	1928648	CompoundStatement		21:2:535:575	1928506	0					
ANR	1928649	IdentifierDeclStatement	zend_string * tmp = zval_get_string ( data ) ;	3132:2:97932:97972	1928506	0	True				
ANR	1928650	IdentifierDecl	* tmp = zval_get_string ( data )		1928506	0					
ANR	1928651	IdentifierDeclType	zend_string *		1928506	0					
ANR	1928652	Identifier	tmp		1928506	1					
ANR	1928653	AssignmentExpression	* tmp = zval_get_string ( data )		1928506	2		=			
ANR	1928654	Identifier	tmp		1928506	0					
ANR	1928655	CallExpression	zval_get_string ( data )		1928506	1					
ANR	1928656	Callee	zval_get_string		1928506	0					
ANR	1928657	Identifier	zval_get_string		1928506	0					
ANR	1928658	ArgumentList	data		1928506	1					
ANR	1928659	Argument	data		1928506	0					
ANR	1928660	Identifier	data		1928506	0					
ANR	1928661	ExpressionStatement	"ret = xmlNewTextLen ( BAD_CAST ( ZSTR_VAL ( tmp ) ) , ZSTR_LEN ( tmp ) )"	3133:2:97976:98035	1928506	1	True				
ANR	1928662	AssignmentExpression	"ret = xmlNewTextLen ( BAD_CAST ( ZSTR_VAL ( tmp ) ) , ZSTR_LEN ( tmp ) )"		1928506	0		=			
ANR	1928663	Identifier	ret		1928506	0					
ANR	1928664	CallExpression	"xmlNewTextLen ( BAD_CAST ( ZSTR_VAL ( tmp ) ) , ZSTR_LEN ( tmp ) )"		1928506	1					
ANR	1928665	Callee	xmlNewTextLen		1928506	0					
ANR	1928666	Identifier	xmlNewTextLen		1928506	0					
ANR	1928667	ArgumentList	BAD_CAST ( ZSTR_VAL ( tmp ) )		1928506	1					
ANR	1928668	Argument	BAD_CAST ( ZSTR_VAL ( tmp ) )		1928506	0					
ANR	1928669	CallExpression	BAD_CAST ( ZSTR_VAL ( tmp ) )		1928506	0					
ANR	1928670	Callee	BAD_CAST		1928506	0					
ANR	1928671	Identifier	BAD_CAST		1928506	0					
ANR	1928672	ArgumentList	ZSTR_VAL ( tmp )		1928506	1					
ANR	1928673	Argument	ZSTR_VAL ( tmp )		1928506	0					
ANR	1928674	CallExpression	ZSTR_VAL ( tmp )		1928506	0					
ANR	1928675	Callee	ZSTR_VAL		1928506	0					
ANR	1928676	Identifier	ZSTR_VAL		1928506	0					
ANR	1928677	ArgumentList	tmp		1928506	1					
ANR	1928678	Argument	tmp		1928506	0					
ANR	1928679	Identifier	tmp		1928506	0					
ANR	1928680	Argument	ZSTR_LEN ( tmp )		1928506	1					
ANR	1928681	CallExpression	ZSTR_LEN ( tmp )		1928506	0					
ANR	1928682	Callee	ZSTR_LEN		1928506	0					
ANR	1928683	Identifier	ZSTR_LEN		1928506	0					
ANR	1928684	ArgumentList	tmp		1928506	1					
ANR	1928685	Argument	tmp		1928506	0					
ANR	1928686	Identifier	tmp		1928506	0					
ANR	1928687	ExpressionStatement	zend_string_release ( tmp )	3134:2:98039:98063	1928506	2	True				
ANR	1928688	CallExpression	zend_string_release ( tmp )		1928506	0					
ANR	1928689	Callee	zend_string_release		1928506	0					
ANR	1928690	Identifier	zend_string_release		1928506	0					
ANR	1928691	ArgumentList	tmp		1928506	1					
ANR	1928692	Argument	tmp		1928506	0					
ANR	1928693	Identifier	tmp		1928506	0					
ANR	1928694	ExpressionStatement	ret -> name = xmlStringTextNoenc	3137:1:98070:98100	1928506	3	True				
ANR	1928695	AssignmentExpression	ret -> name = xmlStringTextNoenc		1928506	0		=			
ANR	1928696	PtrMemberAccess	ret -> name		1928506	0					
ANR	1928697	Identifier	ret		1928506	0					
ANR	1928698	Identifier	name		1928506	1					
ANR	1928699	Identifier	xmlStringTextNoenc		1928506	1					
ANR	1928700	ExpressionStatement	ret -> parent = parent	3138:1:98103:98123	1928506	4	True				
ANR	1928701	AssignmentExpression	ret -> parent = parent		1928506	0		=			
ANR	1928702	PtrMemberAccess	ret -> parent		1928506	0					
ANR	1928703	Identifier	ret		1928506	0					
ANR	1928704	Identifier	parent		1928506	1					
ANR	1928705	Identifier	parent		1928506	1					
ANR	1928706	ExpressionStatement	ret -> doc = parent -> doc	3139:1:98126:98148	1928506	5	True				
ANR	1928707	AssignmentExpression	ret -> doc = parent -> doc		1928506	0		=			
ANR	1928708	PtrMemberAccess	ret -> doc		1928506	0					
ANR	1928709	Identifier	ret		1928506	0					
ANR	1928710	Identifier	doc		1928506	1					
ANR	1928711	PtrMemberAccess	parent -> doc		1928506	1					
ANR	1928712	Identifier	parent		1928506	0					
ANR	1928713	Identifier	doc		1928506	1					
ANR	1928714	ExpressionStatement	ret -> prev = parent -> last	3140:1:98151:98175	1928506	6	True				
ANR	1928715	AssignmentExpression	ret -> prev = parent -> last		1928506	0		=			
ANR	1928716	PtrMemberAccess	ret -> prev		1928506	0					
ANR	1928717	Identifier	ret		1928506	0					
ANR	1928718	Identifier	prev		1928506	1					
ANR	1928719	PtrMemberAccess	parent -> last		1928506	1					
ANR	1928720	Identifier	parent		1928506	0					
ANR	1928721	Identifier	last		1928506	1					
ANR	1928722	ExpressionStatement	ret -> next = NULL	3141:1:98178:98194	1928506	7	True				
ANR	1928723	AssignmentExpression	ret -> next = NULL		1928506	0		=			
ANR	1928724	PtrMemberAccess	ret -> next		1928506	0					
ANR	1928725	Identifier	ret		1928506	0					
ANR	1928726	Identifier	next		1928506	1					
ANR	1928727	Identifier	NULL		1928506	1					
ANR	1928728	IfStatement	if ( parent -> last )		1928506	8					
ANR	1928729	Condition	parent -> last	3142:5:98201:98212	1928506	0	True				
ANR	1928730	PtrMemberAccess	parent -> last		1928506	0					
ANR	1928731	Identifier	parent		1928506	0					
ANR	1928732	Identifier	last		1928506	1					
ANR	1928733	CompoundStatement		31:19:818:818	1928506	1					
ANR	1928734	ExpressionStatement	parent -> last -> next = ret	3143:2:98219:98243	1928506	0	True				
ANR	1928735	AssignmentExpression	parent -> last -> next = ret		1928506	0		=			
ANR	1928736	PtrMemberAccess	parent -> last -> next		1928506	0					
ANR	1928737	PtrMemberAccess	parent -> last		1928506	0					
ANR	1928738	Identifier	parent		1928506	0					
ANR	1928739	Identifier	last		1928506	1					
ANR	1928740	Identifier	next		1928506	1					
ANR	1928741	Identifier	ret		1928506	1					
ANR	1928742	ElseStatement	else		1928506	0					
ANR	1928743	CompoundStatement		33:8:856:856	1928506	0					
ANR	1928744	ExpressionStatement	parent -> children = ret	3145:2:98257:98279	1928506	0	True				
ANR	1928745	AssignmentExpression	parent -> children = ret		1928506	0		=			
ANR	1928746	PtrMemberAccess	parent -> children		1928506	0					
ANR	1928747	Identifier	parent		1928506	0					
ANR	1928748	Identifier	children		1928506	1					
ANR	1928749	Identifier	ret		1928506	1					
ANR	1928750	ExpressionStatement	parent -> last = ret	3147:1:98285:98303	1928506	9	True				
ANR	1928751	AssignmentExpression	parent -> last = ret		1928506	0		=			
ANR	1928752	PtrMemberAccess	parent -> last		1928506	0					
ANR	1928753	Identifier	parent		1928506	0					
ANR	1928754	Identifier	last		1928506	1					
ANR	1928755	Identifier	ret		1928506	1					
ANR	1928756	ReturnStatement	return ret ;	3149:1:98307:98317	1928506	10	True				
ANR	1928757	Identifier	ret		1928506	0					
ANR	1928758	ReturnType	static xmlNodePtr		1928506	1					
ANR	1928759	Identifier	to_xml_any		1928506	2					
ANR	1928760	ParameterList	"encodeTypePtr type , zval * data , int style , xmlNodePtr parent"		1928506	3					
ANR	1928761	Parameter	encodeTypePtr type	3111:29:97334:97351	1928506	0	True				
ANR	1928762	ParameterType	encodeTypePtr		1928506	0					
ANR	1928763	Identifier	type		1928506	1					
ANR	1928764	Parameter	zval * data	3111:49:97354:97363	1928506	1	True				
ANR	1928765	ParameterType	zval *		1928506	0					
ANR	1928766	Identifier	data		1928506	1					
ANR	1928767	Parameter	int style	3111:61:97366:97374	1928506	2	True				
ANR	1928768	ParameterType	int		1928506	0					
ANR	1928769	Identifier	style		1928506	1					
ANR	1928770	Parameter	xmlNodePtr parent	3111:72:97377:97393	1928506	3	True				
ANR	1928771	ParameterType	xmlNodePtr		1928506	0					
ANR	1928772	Identifier	parent		1928506	1					
ANR	1928773	CFGEntryNode	ENTRY		1928506		True				
ANR	1928774	CFGExitNode	EXIT		1928506		True				
ANR	1928775	Symbol	parent		1928506						
ANR	1928776	Symbol	* parent		1928506						
ANR	1928777	Symbol	data		1928506						
ANR	1928778	Symbol	get_conversion		1928506						
ANR	1928779	Symbol	* ret		1928506						
ANR	1928780	Symbol	type		1928506						
ANR	1928781	Symbol	XSD_ANYXML		1928506						
ANR	1928782	Symbol	parent -> doc		1928506						
ANR	1928783	Symbol	parent -> children		1928506						
ANR	1928784	Symbol	xmlNewTextLen		1928506						
ANR	1928785	Symbol	IS_ARRAY		1928506						
ANR	1928786	Symbol	tmp		1928506						
ANR	1928787	Symbol	parent -> last -> next		1928506						
ANR	1928788	Symbol	Z_STRLEN_P		1928506						
ANR	1928789	Symbol	enc		1928506						
ANR	1928790	Symbol	IS_STRING		1928506						
ANR	1928791	Symbol	parent -> last		1928506						
ANR	1928792	Symbol	master_to_xml		1928506						
ANR	1928793	Symbol	ret		1928506						
ANR	1928794	Symbol	NULL		1928506						
ANR	1928795	Symbol	el		1928506						
ANR	1928796	Symbol	* * parent		1928506						
ANR	1928797	Symbol	zval_get_string		1928506						
ANR	1928798	Symbol	Z_TYPE_P		1928506						
ANR	1928799	Symbol	Z_STRVAL_P		1928506						
ANR	1928800	Symbol	ret -> name		1928506						
ANR	1928801	Symbol	ZSTR_VAL		1928506						
ANR	1928802	Symbol	ret -> doc		1928506						
ANR	1928803	Symbol	xmlStringTextNoenc		1928506						
ANR	1928804	Symbol	* parent -> last		1928506						
ANR	1928805	Symbol	ret -> prev		1928506						
ANR	1928806	Symbol	ret -> next		1928506						
ANR	1928807	Symbol	name		1928506						
ANR	1928808	Symbol	ZSTR_LEN		1928506						
ANR	1928809	Symbol	style		1928506						
ANR	1928810	Symbol	ret -> parent		1928506						
ANR	1928811	Symbol	BAD_CAST		1928506						
ANR	1928812	Function	sdl_guess_convert_zval	3152:0:98322:100676							
ANR	1928813	FunctionDef	"sdl_guess_convert_zval (zval * ret , encodeTypePtr enc , xmlNodePtr data)"		1928812	0					
ANR	1928814	CompoundStatement		3153:0:98398:100676	1928812	0					
ANR	1928815	IdentifierDeclStatement	sdlTypePtr type ;	3154:1:98401:98416	1928812	0	True				
ANR	1928816	IdentifierDecl	type		1928812	0					
ANR	1928817	IdentifierDeclType	sdlTypePtr		1928812	0					
ANR	1928818	Identifier	type		1928812	1					
ANR	1928819	ExpressionStatement	type = enc -> sdl_type	3156:1:98420:98440	1928812	1	True				
ANR	1928820	AssignmentExpression	type = enc -> sdl_type		1928812	0		=			
ANR	1928821	Identifier	type		1928812	0					
ANR	1928822	PtrMemberAccess	enc -> sdl_type		1928812	1					
ANR	1928823	Identifier	enc		1928812	0					
ANR	1928824	Identifier	sdl_type		1928812	1					
ANR	1928825	IfStatement	if ( type == NULL )		1928812	2					
ANR	1928826	Condition	type == NULL	3157:5:98447:98458	1928812	0	True				
ANR	1928827	EqualityExpression	type == NULL		1928812	0		==			
ANR	1928828	Identifier	type		1928812	0					
ANR	1928829	Identifier	NULL		1928812	1					
ANR	1928830	CompoundStatement		5:19:62:62	1928812	1					
ANR	1928831	ReturnStatement	"return guess_zval_convert ( ret , enc , data ) ;"	3158:2:98465:98506	1928812	0	True				
ANR	1928832	CallExpression	"guess_zval_convert ( ret , enc , data )"		1928812	0					
ANR	1928833	Callee	guess_zval_convert		1928812	0					
ANR	1928834	Identifier	guess_zval_convert		1928812	0					
ANR	1928835	ArgumentList	ret		1928812	1					
ANR	1928836	Argument	ret		1928812	0					
ANR	1928837	Identifier	ret		1928812	0					
ANR	1928838	Argument	enc		1928812	1					
ANR	1928839	Identifier	enc		1928812	0					
ANR	1928840	Argument	data		1928812	2					
ANR	1928841	Identifier	data		1928812	0					
ANR	1928842	SwitchStatement	switch ( type -> kind )		1928812	3					
ANR	1928843	Condition	type -> kind	3189:9:99888:99897	1928812	0	True				
ANR	1928844	PtrMemberAccess	type -> kind		1928812	0					
ANR	1928845	Identifier	type		1928812	0					
ANR	1928846	Identifier	kind		1928812	1					
ANR	1928847	CompoundStatement		37:21:1501:1501	1928812	1					
ANR	1928848	Label	case XSD_TYPEKIND_SIMPLE :	3190:2:99904:99928	1928812	0	True				
ANR	1928849	Identifier	XSD_TYPEKIND_SIMPLE		1928812	0					
ANR	1928850	IfStatement	if ( type -> encode && enc != & type -> encode -> details )		1928812	1					
ANR	1928851	Condition	type -> encode && enc != & type -> encode -> details	3191:7:99937:99981	1928812	0	True				
ANR	1928852	AndExpression	type -> encode && enc != & type -> encode -> details		1928812	0		&&			
ANR	1928853	PtrMemberAccess	type -> encode		1928812	0					
ANR	1928854	Identifier	type		1928812	0					
ANR	1928855	Identifier	encode		1928812	1					
ANR	1928856	EqualityExpression	enc != & type -> encode -> details		1928812	1		!=			
ANR	1928857	Identifier	enc		1928812	0					
ANR	1928858	UnaryOperationExpression	& type -> encode -> details		1928812	1					
ANR	1928859	UnaryOperator	&		1928812	0					
ANR	1928860	PtrMemberAccess	type -> encode -> details		1928812	1					
ANR	1928861	PtrMemberAccess	type -> encode		1928812	0					
ANR	1928862	Identifier	type		1928812	0					
ANR	1928863	Identifier	encode		1928812	1					
ANR	1928864	Identifier	details		1928812	1					
ANR	1928865	CompoundStatement		39:54:1585:1585	1928812	1					
ANR	1928866	ReturnStatement	"return master_to_zval_int ( ret , type -> encode , data ) ;"	3192:4:99990:100040	1928812	0	True				
ANR	1928867	CallExpression	"master_to_zval_int ( ret , type -> encode , data )"		1928812	0					
ANR	1928868	Callee	master_to_zval_int		1928812	0					
ANR	1928869	Identifier	master_to_zval_int		1928812	0					
ANR	1928870	ArgumentList	ret		1928812	1					
ANR	1928871	Argument	ret		1928812	0					
ANR	1928872	Identifier	ret		1928812	0					
ANR	1928873	Argument	type -> encode		1928812	1					
ANR	1928874	PtrMemberAccess	type -> encode		1928812	0					
ANR	1928875	Identifier	type		1928812	0					
ANR	1928876	Identifier	encode		1928812	1					
ANR	1928877	Argument	data		1928812	2					
ANR	1928878	Identifier	data		1928812	0					
ANR	1928879	ElseStatement	else		1928812	0					
ANR	1928880	CompoundStatement		41:10:1653:1653	1928812	0					
ANR	1928881	ReturnStatement	"return guess_zval_convert ( ret , enc , data ) ;"	3194:4:100058:100099	1928812	0	True				
ANR	1928882	CallExpression	"guess_zval_convert ( ret , enc , data )"		1928812	0					
ANR	1928883	Callee	guess_zval_convert		1928812	0					
ANR	1928884	Identifier	guess_zval_convert		1928812	0					
ANR	1928885	ArgumentList	ret		1928812	1					
ANR	1928886	Argument	ret		1928812	0					
ANR	1928887	Identifier	ret		1928812	0					
ANR	1928888	Argument	enc		1928812	1					
ANR	1928889	Identifier	enc		1928812	0					
ANR	1928890	Argument	data		1928812	2					
ANR	1928891	Identifier	data		1928812	0					
ANR	1928892	BreakStatement	break ;	3196:3:100109:100114	1928812	2	True				
ANR	1928893	Label	case XSD_TYPEKIND_LIST :	3197:2:100118:100140	1928812	3	True				
ANR	1928894	Identifier	XSD_TYPEKIND_LIST		1928812	0					
ANR	1928895	ReturnStatement	"return to_zval_list ( ret , enc , data ) ;"	3198:3:100145:100180	1928812	4	True				
ANR	1928896	CallExpression	"to_zval_list ( ret , enc , data )"		1928812	0					
ANR	1928897	Callee	to_zval_list		1928812	0					
ANR	1928898	Identifier	to_zval_list		1928812	0					
ANR	1928899	ArgumentList	ret		1928812	1					
ANR	1928900	Argument	ret		1928812	0					
ANR	1928901	Identifier	ret		1928812	0					
ANR	1928902	Argument	enc		1928812	1					
ANR	1928903	Identifier	enc		1928812	0					
ANR	1928904	Argument	data		1928812	2					
ANR	1928905	Identifier	data		1928812	0					
ANR	1928906	Label	case XSD_TYPEKIND_UNION :	3199:2:100184:100207	1928812	5	True				
ANR	1928907	Identifier	XSD_TYPEKIND_UNION		1928812	0					
ANR	1928908	ReturnStatement	"return to_zval_union ( ret , enc , data ) ;"	3200:3:100212:100248	1928812	6	True				
ANR	1928909	CallExpression	"to_zval_union ( ret , enc , data )"		1928812	0					
ANR	1928910	Callee	to_zval_union		1928812	0					
ANR	1928911	Identifier	to_zval_union		1928812	0					
ANR	1928912	ArgumentList	ret		1928812	1					
ANR	1928913	Argument	ret		1928812	0					
ANR	1928914	Identifier	ret		1928812	0					
ANR	1928915	Argument	enc		1928812	1					
ANR	1928916	Identifier	enc		1928812	0					
ANR	1928917	Argument	data		1928812	2					
ANR	1928918	Identifier	data		1928812	0					
ANR	1928919	Label	case XSD_TYPEKIND_COMPLEX :	3201:2:100252:100277	1928812	7	True				
ANR	1928920	Identifier	XSD_TYPEKIND_COMPLEX		1928812	0					
ANR	1928921	Label	case XSD_TYPEKIND_RESTRICTION :	3202:2:100281:100310	1928812	8	True				
ANR	1928922	Identifier	XSD_TYPEKIND_RESTRICTION		1928812	0					
ANR	1928923	Label	case XSD_TYPEKIND_EXTENSION :	3203:2:100314:100341	1928812	9	True				
ANR	1928924	Identifier	XSD_TYPEKIND_EXTENSION		1928812	0					
ANR	1928925	IfStatement	if ( type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY ) )		1928812	10					
ANR	1928926	Condition	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )	3204:7:100350:100468	1928812	0	True				
ANR	1928927	AndExpression	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )		1928812	0		&&			
ANR	1928928	PtrMemberAccess	type -> encode		1928812	0					
ANR	1928929	Identifier	type		1928812	0					
ANR	1928930	Identifier	encode		1928812	1					
ANR	1928931	OrExpression	type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY		1928812	1		||			
ANR	1928932	EqualityExpression	type -> encode -> details . type == IS_ARRAY		1928812	0		==			
ANR	1928933	MemberAccess	type -> encode -> details . type		1928812	0					
ANR	1928934	PtrMemberAccess	type -> encode -> details		1928812	0					
ANR	1928935	PtrMemberAccess	type -> encode		1928812	0					
ANR	1928936	Identifier	type		1928812	0					
ANR	1928937	Identifier	encode		1928812	1					
ANR	1928938	Identifier	details		1928812	1					
ANR	1928939	Identifier	type		1928812	1					
ANR	1928940	Identifier	IS_ARRAY		1928812	1					
ANR	1928941	EqualityExpression	type -> encode -> details . type == SOAP_ENC_ARRAY		1928812	1		==			
ANR	1928942	MemberAccess	type -> encode -> details . type		1928812	0					
ANR	1928943	PtrMemberAccess	type -> encode -> details		1928812	0					
ANR	1928944	PtrMemberAccess	type -> encode		1928812	0					
ANR	1928945	Identifier	type		1928812	0					
ANR	1928946	Identifier	encode		1928812	1					
ANR	1928947	Identifier	details		1928812	1					
ANR	1928948	Identifier	type		1928812	1					
ANR	1928949	Identifier	SOAP_ENC_ARRAY		1928812	1					
ANR	1928950	CompoundStatement		54:55:2072:2072	1928812	1					
ANR	1928951	ReturnStatement	"return to_zval_array ( ret , enc , data ) ;"	3207:4:100477:100513	1928812	0	True				
ANR	1928952	CallExpression	"to_zval_array ( ret , enc , data )"		1928812	0					
ANR	1928953	Callee	to_zval_array		1928812	0					
ANR	1928954	Identifier	to_zval_array		1928812	0					
ANR	1928955	ArgumentList	ret		1928812	1					
ANR	1928956	Argument	ret		1928812	0					
ANR	1928957	Identifier	ret		1928812	0					
ANR	1928958	Argument	enc		1928812	1					
ANR	1928959	Identifier	enc		1928812	0					
ANR	1928960	Argument	data		1928812	2					
ANR	1928961	Identifier	data		1928812	0					
ANR	1928962	ReturnStatement	"return to_zval_object ( ret , enc , data ) ;"	3209:3:100523:100560	1928812	11	True				
ANR	1928963	CallExpression	"to_zval_object ( ret , enc , data )"		1928812	0					
ANR	1928964	Callee	to_zval_object		1928812	0					
ANR	1928965	Identifier	to_zval_object		1928812	0					
ANR	1928966	ArgumentList	ret		1928812	1					
ANR	1928967	Argument	ret		1928812	0					
ANR	1928968	Identifier	ret		1928812	0					
ANR	1928969	Argument	enc		1928812	1					
ANR	1928970	Identifier	enc		1928812	0					
ANR	1928971	Argument	data		1928812	2					
ANR	1928972	Identifier	data		1928812	0					
ANR	1928973	Label	default :	3210:2:100564:100571	1928812	12	True				
ANR	1928974	Identifier	default		1928812	0					
ANR	1928975	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"	3211:4:100577:100625	1928812	13	True				
ANR	1928976	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"		1928812	0					
ANR	1928977	Callee	soap_error0		1928812	0					
ANR	1928978	Identifier	soap_error0		1928812	0					
ANR	1928979	ArgumentList	E_ERROR		1928812	1					
ANR	1928980	Argument	E_ERROR		1928812	0					
ANR	1928981	Identifier	E_ERROR		1928812	0					
ANR	1928982	Argument	"""Encoding: Internal Error"""		1928812	1					
ANR	1928983	PrimaryExpression	"""Encoding: Internal Error"""		1928812	0					
ANR	1928984	ReturnStatement	"return guess_zval_convert ( ret , enc , data ) ;"	3212:3:100630:100671	1928812	14	True				
ANR	1928985	CallExpression	"guess_zval_convert ( ret , enc , data )"		1928812	0					
ANR	1928986	Callee	guess_zval_convert		1928812	0					
ANR	1928987	Identifier	guess_zval_convert		1928812	0					
ANR	1928988	ArgumentList	ret		1928812	1					
ANR	1928989	Argument	ret		1928812	0					
ANR	1928990	Identifier	ret		1928812	0					
ANR	1928991	Argument	enc		1928812	1					
ANR	1928992	Identifier	enc		1928812	0					
ANR	1928993	Argument	data		1928812	2					
ANR	1928994	Identifier	data		1928812	0					
ANR	1928995	ReturnType	zval *		1928812	1					
ANR	1928996	Identifier	sdl_guess_convert_zval		1928812	2					
ANR	1928997	ParameterList	"zval * ret , encodeTypePtr enc , xmlNodePtr data"		1928812	3					
ANR	1928998	Parameter	zval * ret	3152:29:98351:98359	1928812	0	True				
ANR	1928999	ParameterType	zval *		1928812	0					
ANR	1929000	Identifier	ret		1928812	1					
ANR	1929001	Parameter	encodeTypePtr enc	3152:40:98362:98378	1928812	1	True				
ANR	1929002	ParameterType	encodeTypePtr		1928812	0					
ANR	1929003	Identifier	enc		1928812	1					
ANR	1929004	Parameter	xmlNodePtr data	3152:59:98381:98395	1928812	2	True				
ANR	1929005	ParameterType	xmlNodePtr		1928812	0					
ANR	1929006	Identifier	data		1928812	1					
ANR	1929007	CFGEntryNode	ENTRY		1928812		True				
ANR	1929008	CFGExitNode	EXIT		1928812		True				
ANR	1929009	Symbol	ret		1928812						
ANR	1929010	Symbol	NULL		1928812						
ANR	1929011	Symbol	guess_zval_convert		1928812						
ANR	1929012	Symbol	type -> encode		1928812						
ANR	1929013	Symbol	to_zval_object		1928812						
ANR	1929014	Symbol	data		1928812						
ANR	1929015	Symbol	type -> kind		1928812						
ANR	1929016	Symbol	type -> encode -> details		1928812						
ANR	1929017	Symbol	type		1928812						
ANR	1929018	Symbol	* type -> encode		1928812						
ANR	1929019	Symbol	to_zval_array		1928812						
ANR	1929020	Symbol	SOAP_ENC_ARRAY		1928812						
ANR	1929021	Symbol	E_ERROR		1928812						
ANR	1929022	Symbol	to_zval_list		1928812						
ANR	1929023	Symbol	* type		1928812						
ANR	1929024	Symbol	IS_ARRAY		1928812						
ANR	1929025	Symbol	to_zval_union		1928812						
ANR	1929026	Symbol	type -> encode -> details . type		1928812						
ANR	1929027	Symbol	master_to_zval_int		1928812						
ANR	1929028	Symbol	enc		1928812						
ANR	1929029	Symbol	* enc		1928812						
ANR	1929030	Symbol	* * type		1928812						
ANR	1929031	Symbol	enc -> sdl_type		1928812						
ANR	1929032	Symbol	& type -> encode -> details		1928812						
ANR	1929033	Function	sdl_guess_convert_xml	3216:0:100679:102877							
ANR	1929034	FunctionDef	"sdl_guess_convert_xml (encodeTypePtr enc , zval * data , int style , xmlNodePtr parent)"		1929033	0					
ANR	1929035	CompoundStatement		3217:0:100773:102877	1929033	0					
ANR	1929036	IdentifierDeclStatement	sdlTypePtr type ;	3218:1:100776:100791	1929033	0	True				
ANR	1929037	IdentifierDecl	type		1929033	0					
ANR	1929038	IdentifierDeclType	sdlTypePtr		1929033	0					
ANR	1929039	Identifier	type		1929033	1					
ANR	1929040	IdentifierDeclStatement	xmlNodePtr ret = NULL ;	3219:1:100794:100815	1929033	1	True				
ANR	1929041	IdentifierDecl	ret = NULL		1929033	0					
ANR	1929042	IdentifierDeclType	xmlNodePtr		1929033	0					
ANR	1929043	Identifier	ret		1929033	1					
ANR	1929044	AssignmentExpression	ret = NULL		1929033	2		=			
ANR	1929045	Identifier	NULL		1929033	0					
ANR	1929046	Identifier	NULL		1929033	1					
ANR	1929047	ExpressionStatement	type = enc -> sdl_type	3221:1:100819:100839	1929033	2	True				
ANR	1929048	AssignmentExpression	type = enc -> sdl_type		1929033	0		=			
ANR	1929049	Identifier	type		1929033	0					
ANR	1929050	PtrMemberAccess	enc -> sdl_type		1929033	1					
ANR	1929051	Identifier	enc		1929033	0					
ANR	1929052	Identifier	sdl_type		1929033	1					
ANR	1929053	IfStatement	if ( type == NULL )		1929033	3					
ANR	1929054	Condition	type == NULL	3223:5:100847:100858	1929033	0	True				
ANR	1929055	EqualityExpression	type == NULL		1929033	0		==			
ANR	1929056	Identifier	type		1929033	0					
ANR	1929057	Identifier	NULL		1929033	1					
ANR	1929058	CompoundStatement		7:19:87:87	1929033	1					
ANR	1929059	ExpressionStatement	"ret = guess_xml_convert ( enc , data , style , parent )"	3224:2:100865:100914	1929033	0	True				
ANR	1929060	AssignmentExpression	"ret = guess_xml_convert ( enc , data , style , parent )"		1929033	0		=			
ANR	1929061	Identifier	ret		1929033	0					
ANR	1929062	CallExpression	"guess_xml_convert ( enc , data , style , parent )"		1929033	1					
ANR	1929063	Callee	guess_xml_convert		1929033	0					
ANR	1929064	Identifier	guess_xml_convert		1929033	0					
ANR	1929065	ArgumentList	enc		1929033	1					
ANR	1929066	Argument	enc		1929033	0					
ANR	1929067	Identifier	enc		1929033	0					
ANR	1929068	Argument	data		1929033	1					
ANR	1929069	Identifier	data		1929033	0					
ANR	1929070	Argument	style		1929033	2					
ANR	1929071	Identifier	style		1929033	0					
ANR	1929072	Argument	parent		1929033	3					
ANR	1929073	Identifier	parent		1929033	0					
ANR	1929074	IfStatement	if ( style == SOAP_ENCODED )		1929033	1					
ANR	1929075	Condition	style == SOAP_ENCODED	3225:6:100922:100942	1929033	0	True				
ANR	1929076	EqualityExpression	style == SOAP_ENCODED		1929033	0		==			
ANR	1929077	Identifier	style		1929033	0					
ANR	1929078	Identifier	SOAP_ENCODED		1929033	1					
ANR	1929079	CompoundStatement		9:29:171:171	1929033	1					
ANR	1929080	ExpressionStatement	"set_ns_and_type ( ret , enc )"	3226:3:100950:100975	1929033	0	True				
ANR	1929081	CallExpression	"set_ns_and_type ( ret , enc )"		1929033	0					
ANR	1929082	Callee	set_ns_and_type		1929033	0					
ANR	1929083	Identifier	set_ns_and_type		1929033	0					
ANR	1929084	ArgumentList	ret		1929033	1					
ANR	1929085	Argument	ret		1929033	0					
ANR	1929086	Identifier	ret		1929033	0					
ANR	1929087	Argument	enc		1929033	1					
ANR	1929088	Identifier	enc		1929033	0					
ANR	1929089	ReturnStatement	return ret ;	3228:2:100983:100993	1929033	2	True				
ANR	1929090	Identifier	ret		1929033	0					
ANR	1929091	SwitchStatement	switch ( type -> kind )		1929033	4					
ANR	1929092	Condition	type -> kind	3253:8:101961:101970	1929033	0	True				
ANR	1929093	PtrMemberAccess	type -> kind		1929033	0					
ANR	1929094	Identifier	type		1929033	0					
ANR	1929095	Identifier	kind		1929033	1					
ANR	1929096	CompoundStatement		37:20:1199:1199	1929033	1					
ANR	1929097	Label	case XSD_TYPEKIND_SIMPLE :	3254:2:101977:102001	1929033	0	True				
ANR	1929098	Identifier	XSD_TYPEKIND_SIMPLE		1929033	0					
ANR	1929099	IfStatement	if ( type -> encode && enc != & type -> encode -> details )		1929033	1					
ANR	1929100	Condition	type -> encode && enc != & type -> encode -> details	3255:7:102010:102054	1929033	0	True				
ANR	1929101	AndExpression	type -> encode && enc != & type -> encode -> details		1929033	0		&&			
ANR	1929102	PtrMemberAccess	type -> encode		1929033	0					
ANR	1929103	Identifier	type		1929033	0					
ANR	1929104	Identifier	encode		1929033	1					
ANR	1929105	EqualityExpression	enc != & type -> encode -> details		1929033	1		!=			
ANR	1929106	Identifier	enc		1929033	0					
ANR	1929107	UnaryOperationExpression	& type -> encode -> details		1929033	1					
ANR	1929108	UnaryOperator	&		1929033	0					
ANR	1929109	PtrMemberAccess	type -> encode -> details		1929033	1					
ANR	1929110	PtrMemberAccess	type -> encode		1929033	0					
ANR	1929111	Identifier	type		1929033	0					
ANR	1929112	Identifier	encode		1929033	1					
ANR	1929113	Identifier	details		1929033	1					
ANR	1929114	CompoundStatement		39:54:1283:1283	1929033	1					
ANR	1929115	ExpressionStatement	"ret = master_to_xml ( type -> encode , data , style , parent )"	3256:4:102063:102117	1929033	0	True				
ANR	1929116	AssignmentExpression	"ret = master_to_xml ( type -> encode , data , style , parent )"		1929033	0		=			
ANR	1929117	Identifier	ret		1929033	0					
ANR	1929118	CallExpression	"master_to_xml ( type -> encode , data , style , parent )"		1929033	1					
ANR	1929119	Callee	master_to_xml		1929033	0					
ANR	1929120	Identifier	master_to_xml		1929033	0					
ANR	1929121	ArgumentList	type -> encode		1929033	1					
ANR	1929122	Argument	type -> encode		1929033	0					
ANR	1929123	PtrMemberAccess	type -> encode		1929033	0					
ANR	1929124	Identifier	type		1929033	0					
ANR	1929125	Identifier	encode		1929033	1					
ANR	1929126	Argument	data		1929033	1					
ANR	1929127	Identifier	data		1929033	0					
ANR	1929128	Argument	style		1929033	2					
ANR	1929129	Identifier	style		1929033	0					
ANR	1929130	Argument	parent		1929033	3					
ANR	1929131	Identifier	parent		1929033	0					
ANR	1929132	ElseStatement	else		1929033	0					
ANR	1929133	CompoundStatement		41:10:1355:1355	1929033	0					
ANR	1929134	ExpressionStatement	"ret = guess_xml_convert ( enc , data , style , parent )"	3258:4:102135:102184	1929033	0	True				
ANR	1929135	AssignmentExpression	"ret = guess_xml_convert ( enc , data , style , parent )"		1929033	0		=			
ANR	1929136	Identifier	ret		1929033	0					
ANR	1929137	CallExpression	"guess_xml_convert ( enc , data , style , parent )"		1929033	1					
ANR	1929138	Callee	guess_xml_convert		1929033	0					
ANR	1929139	Identifier	guess_xml_convert		1929033	0					
ANR	1929140	ArgumentList	enc		1929033	1					
ANR	1929141	Argument	enc		1929033	0					
ANR	1929142	Identifier	enc		1929033	0					
ANR	1929143	Argument	data		1929033	1					
ANR	1929144	Identifier	data		1929033	0					
ANR	1929145	Argument	style		1929033	2					
ANR	1929146	Identifier	style		1929033	0					
ANR	1929147	Argument	parent		1929033	3					
ANR	1929148	Identifier	parent		1929033	0					
ANR	1929149	BreakStatement	break ;	3260:3:102194:102199	1929033	2	True				
ANR	1929150	Label	case XSD_TYPEKIND_LIST :	3261:2:102203:102225	1929033	3	True				
ANR	1929151	Identifier	XSD_TYPEKIND_LIST		1929033	0					
ANR	1929152	ExpressionStatement	"ret = to_xml_list ( enc , data , style , parent )"	3262:3:102230:102273	1929033	4	True				
ANR	1929153	AssignmentExpression	"ret = to_xml_list ( enc , data , style , parent )"		1929033	0		=			
ANR	1929154	Identifier	ret		1929033	0					
ANR	1929155	CallExpression	"to_xml_list ( enc , data , style , parent )"		1929033	1					
ANR	1929156	Callee	to_xml_list		1929033	0					
ANR	1929157	Identifier	to_xml_list		1929033	0					
ANR	1929158	ArgumentList	enc		1929033	1					
ANR	1929159	Argument	enc		1929033	0					
ANR	1929160	Identifier	enc		1929033	0					
ANR	1929161	Argument	data		1929033	1					
ANR	1929162	Identifier	data		1929033	0					
ANR	1929163	Argument	style		1929033	2					
ANR	1929164	Identifier	style		1929033	0					
ANR	1929165	Argument	parent		1929033	3					
ANR	1929166	Identifier	parent		1929033	0					
ANR	1929167	BreakStatement	break ;	3263:3:102278:102283	1929033	5	True				
ANR	1929168	Label	case XSD_TYPEKIND_UNION :	3264:2:102287:102310	1929033	6	True				
ANR	1929169	Identifier	XSD_TYPEKIND_UNION		1929033	0					
ANR	1929170	ExpressionStatement	"ret = to_xml_union ( enc , data , style , parent )"	3265:3:102315:102359	1929033	7	True				
ANR	1929171	AssignmentExpression	"ret = to_xml_union ( enc , data , style , parent )"		1929033	0		=			
ANR	1929172	Identifier	ret		1929033	0					
ANR	1929173	CallExpression	"to_xml_union ( enc , data , style , parent )"		1929033	1					
ANR	1929174	Callee	to_xml_union		1929033	0					
ANR	1929175	Identifier	to_xml_union		1929033	0					
ANR	1929176	ArgumentList	enc		1929033	1					
ANR	1929177	Argument	enc		1929033	0					
ANR	1929178	Identifier	enc		1929033	0					
ANR	1929179	Argument	data		1929033	1					
ANR	1929180	Identifier	data		1929033	0					
ANR	1929181	Argument	style		1929033	2					
ANR	1929182	Identifier	style		1929033	0					
ANR	1929183	Argument	parent		1929033	3					
ANR	1929184	Identifier	parent		1929033	0					
ANR	1929185	BreakStatement	break ;	3266:3:102364:102369	1929033	8	True				
ANR	1929186	Label	case XSD_TYPEKIND_COMPLEX :	3267:2:102373:102398	1929033	9	True				
ANR	1929187	Identifier	XSD_TYPEKIND_COMPLEX		1929033	0					
ANR	1929188	Label	case XSD_TYPEKIND_RESTRICTION :	3268:2:102402:102431	1929033	10	True				
ANR	1929189	Identifier	XSD_TYPEKIND_RESTRICTION		1929033	0					
ANR	1929190	Label	case XSD_TYPEKIND_EXTENSION :	3269:2:102435:102462	1929033	11	True				
ANR	1929191	Identifier	XSD_TYPEKIND_EXTENSION		1929033	0					
ANR	1929192	IfStatement	if ( type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY ) )		1929033	12					
ANR	1929193	Condition	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )	3270:7:102471:102589	1929033	0	True				
ANR	1929194	AndExpression	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )		1929033	0		&&			
ANR	1929195	PtrMemberAccess	type -> encode		1929033	0					
ANR	1929196	Identifier	type		1929033	0					
ANR	1929197	Identifier	encode		1929033	1					
ANR	1929198	OrExpression	type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY		1929033	1		||			
ANR	1929199	EqualityExpression	type -> encode -> details . type == IS_ARRAY		1929033	0		==			
ANR	1929200	MemberAccess	type -> encode -> details . type		1929033	0					
ANR	1929201	PtrMemberAccess	type -> encode -> details		1929033	0					
ANR	1929202	PtrMemberAccess	type -> encode		1929033	0					
ANR	1929203	Identifier	type		1929033	0					
ANR	1929204	Identifier	encode		1929033	1					
ANR	1929205	Identifier	details		1929033	1					
ANR	1929206	Identifier	type		1929033	1					
ANR	1929207	Identifier	IS_ARRAY		1929033	1					
ANR	1929208	EqualityExpression	type -> encode -> details . type == SOAP_ENC_ARRAY		1929033	1		==			
ANR	1929209	MemberAccess	type -> encode -> details . type		1929033	0					
ANR	1929210	PtrMemberAccess	type -> encode -> details		1929033	0					
ANR	1929211	PtrMemberAccess	type -> encode		1929033	0					
ANR	1929212	Identifier	type		1929033	0					
ANR	1929213	Identifier	encode		1929033	1					
ANR	1929214	Identifier	details		1929033	1					
ANR	1929215	Identifier	type		1929033	1					
ANR	1929216	Identifier	SOAP_ENC_ARRAY		1929033	1					
ANR	1929217	CompoundStatement		56:55:1818:1818	1929033	1					
ANR	1929218	ReturnStatement	"return to_xml_array ( enc , data , style , parent ) ;"	3273:4:102598:102643	1929033	0	True				
ANR	1929219	CallExpression	"to_xml_array ( enc , data , style , parent )"		1929033	0					
ANR	1929220	Callee	to_xml_array		1929033	0					
ANR	1929221	Identifier	to_xml_array		1929033	0					
ANR	1929222	ArgumentList	enc		1929033	1					
ANR	1929223	Argument	enc		1929033	0					
ANR	1929224	Identifier	enc		1929033	0					
ANR	1929225	Argument	data		1929033	1					
ANR	1929226	Identifier	data		1929033	0					
ANR	1929227	Argument	style		1929033	2					
ANR	1929228	Identifier	style		1929033	0					
ANR	1929229	Argument	parent		1929033	3					
ANR	1929230	Identifier	parent		1929033	0					
ANR	1929231	ElseStatement	else		1929033	0					
ANR	1929232	CompoundStatement		58:10:1881:1881	1929033	0					
ANR	1929233	ReturnStatement	"return to_xml_object ( enc , data , style , parent ) ;"	3275:4:102661:102707	1929033	0	True				
ANR	1929234	CallExpression	"to_xml_object ( enc , data , style , parent )"		1929033	0					
ANR	1929235	Callee	to_xml_object		1929033	0					
ANR	1929236	Identifier	to_xml_object		1929033	0					
ANR	1929237	ArgumentList	enc		1929033	1					
ANR	1929238	Argument	enc		1929033	0					
ANR	1929239	Identifier	enc		1929033	0					
ANR	1929240	Argument	data		1929033	1					
ANR	1929241	Identifier	data		1929033	0					
ANR	1929242	Argument	style		1929033	2					
ANR	1929243	Identifier	style		1929033	0					
ANR	1929244	Argument	parent		1929033	3					
ANR	1929245	Identifier	parent		1929033	0					
ANR	1929246	BreakStatement	break ;	3277:3:102717:102722	1929033	13	True				
ANR	1929247	Label	default :	3278:2:102726:102733	1929033	14	True				
ANR	1929248	Identifier	default		1929033	0					
ANR	1929249	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"	3279:4:102739:102787	1929033	15	True				
ANR	1929250	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Internal Error"" )"		1929033	0					
ANR	1929251	Callee	soap_error0		1929033	0					
ANR	1929252	Identifier	soap_error0		1929033	0					
ANR	1929253	ArgumentList	E_ERROR		1929033	1					
ANR	1929254	Argument	E_ERROR		1929033	0					
ANR	1929255	Identifier	E_ERROR		1929033	0					
ANR	1929256	Argument	"""Encoding: Internal Error"""		1929033	1					
ANR	1929257	PrimaryExpression	"""Encoding: Internal Error"""		1929033	0					
ANR	1929258	BreakStatement	break ;	3280:3:102792:102797	1929033	16	True				
ANR	1929259	IfStatement	if ( style == SOAP_ENCODED )		1929033	5					
ANR	1929260	Condition	style == SOAP_ENCODED	3282:5:102807:102827	1929033	0	True				
ANR	1929261	EqualityExpression	style == SOAP_ENCODED		1929033	0		==			
ANR	1929262	Identifier	style		1929033	0					
ANR	1929263	Identifier	SOAP_ENCODED		1929033	1					
ANR	1929264	CompoundStatement		66:28:2056:2056	1929033	1					
ANR	1929265	ExpressionStatement	"set_ns_and_type ( ret , enc )"	3283:2:102834:102859	1929033	0	True				
ANR	1929266	CallExpression	"set_ns_and_type ( ret , enc )"		1929033	0					
ANR	1929267	Callee	set_ns_and_type		1929033	0					
ANR	1929268	Identifier	set_ns_and_type		1929033	0					
ANR	1929269	ArgumentList	ret		1929033	1					
ANR	1929270	Argument	ret		1929033	0					
ANR	1929271	Identifier	ret		1929033	0					
ANR	1929272	Argument	enc		1929033	1					
ANR	1929273	Identifier	enc		1929033	0					
ANR	1929274	ReturnStatement	return ret ;	3285:1:102865:102875	1929033	6	True				
ANR	1929275	Identifier	ret		1929033	0					
ANR	1929276	ReturnType	xmlNodePtr		1929033	1					
ANR	1929277	Identifier	sdl_guess_convert_xml		1929033	2					
ANR	1929278	ParameterList	"encodeTypePtr enc , zval * data , int style , xmlNodePtr parent"		1929033	3					
ANR	1929279	Parameter	encodeTypePtr enc	3216:33:100712:100728	1929033	0	True				
ANR	1929280	ParameterType	encodeTypePtr		1929033	0					
ANR	1929281	Identifier	enc		1929033	1					
ANR	1929282	Parameter	zval * data	3216:52:100731:100740	1929033	1	True				
ANR	1929283	ParameterType	zval *		1929033	0					
ANR	1929284	Identifier	data		1929033	1					
ANR	1929285	Parameter	int style	3216:64:100743:100751	1929033	2	True				
ANR	1929286	ParameterType	int		1929033	0					
ANR	1929287	Identifier	style		1929033	1					
ANR	1929288	Parameter	xmlNodePtr parent	3216:75:100754:100770	1929033	3	True				
ANR	1929289	ParameterType	xmlNodePtr		1929033	0					
ANR	1929290	Identifier	parent		1929033	1					
ANR	1929291	CFGEntryNode	ENTRY		1929033		True				
ANR	1929292	CFGExitNode	EXIT		1929033		True				
ANR	1929293	Symbol	parent		1929033						
ANR	1929294	Symbol	type -> encode		1929033						
ANR	1929295	Symbol	data		1929033						
ANR	1929296	Symbol	to_xml_array		1929033						
ANR	1929297	Symbol	type		1929033						
ANR	1929298	Symbol	SOAP_ENC_ARRAY		1929033						
ANR	1929299	Symbol	* type		1929033						
ANR	1929300	Symbol	IS_ARRAY		1929033						
ANR	1929301	Symbol	type -> encode -> details . type		1929033						
ANR	1929302	Symbol	enc		1929033						
ANR	1929303	Symbol	enc -> sdl_type		1929033						
ANR	1929304	Symbol	to_xml_union		1929033						
ANR	1929305	Symbol	master_to_xml		1929033						
ANR	1929306	Symbol	ret		1929033						
ANR	1929307	Symbol	to_xml_list		1929033						
ANR	1929308	Symbol	NULL		1929033						
ANR	1929309	Symbol	type -> kind		1929033						
ANR	1929310	Symbol	type -> encode -> details		1929033						
ANR	1929311	Symbol	to_xml_object		1929033						
ANR	1929312	Symbol	* type -> encode		1929033						
ANR	1929313	Symbol	E_ERROR		1929033						
ANR	1929314	Symbol	style		1929033						
ANR	1929315	Symbol	SOAP_ENCODED		1929033						
ANR	1929316	Symbol	* enc		1929033						
ANR	1929317	Symbol	* * type		1929033						
ANR	1929318	Symbol	guess_xml_convert		1929033						
ANR	1929319	Symbol	& type -> encode -> details		1929033						
ANR	1929320	Function	check_and_resolve_href	3288:0:102880:104344							
ANR	1929321	FunctionDef	check_and_resolve_href (xmlNodePtr data)		1929320	0					
ANR	1929322	CompoundStatement		3289:0:102938:104344	1929320	0					
ANR	1929323	IfStatement	if ( data && data -> properties )		1929320	0					
ANR	1929324	Condition	data && data -> properties	3290:5:102945:102968	1929320	0	True				
ANR	1929325	AndExpression	data && data -> properties		1929320	0		&&			
ANR	1929326	Identifier	data		1929320	0					
ANR	1929327	PtrMemberAccess	data -> properties		1929320	1					
ANR	1929328	Identifier	data		1929320	0					
ANR	1929329	Identifier	properties		1929320	1					
ANR	1929330	CompoundStatement		3:2:36:51	1929320	1					
ANR	1929331	IdentifierDeclStatement	xmlAttrPtr href ;	3291:2:102975:102990	1929320	0	True				
ANR	1929332	IdentifierDecl	href		1929320	0					
ANR	1929333	IdentifierDeclType	xmlAttrPtr		1929320	0					
ANR	1929334	Identifier	href		1929320	1					
ANR	1929335	ExpressionStatement	href = data -> properties	3293:2:102995:103018	1929320	1	True				
ANR	1929336	AssignmentExpression	href = data -> properties		1929320	0		=			
ANR	1929337	Identifier	href		1929320	0					
ANR	1929338	PtrMemberAccess	data -> properties		1929320	1					
ANR	1929339	Identifier	data		1929320	0					
ANR	1929340	Identifier	properties		1929320	1					
ANR	1929341	WhileStatement	while ( 1 )		1929320	2					
ANR	1929342	Condition	1	3294:9:103029:103029	1929320	0	True				
ANR	1929343	PrimaryExpression	1		1929320	0					
ANR	1929344	CompoundStatement		6:12:93:93	1929320	1					
ANR	1929345	ExpressionStatement	"href = get_attribute ( href , ""href"" )"	3295:3:103037:103071	1929320	0	True				
ANR	1929346	AssignmentExpression	"href = get_attribute ( href , ""href"" )"		1929320	0		=			
ANR	1929347	Identifier	href		1929320	0					
ANR	1929348	CallExpression	"get_attribute ( href , ""href"" )"		1929320	1					
ANR	1929349	Callee	get_attribute		1929320	0					
ANR	1929350	Identifier	get_attribute		1929320	0					
ANR	1929351	ArgumentList	href		1929320	1					
ANR	1929352	Argument	href		1929320	0					
ANR	1929353	Identifier	href		1929320	0					
ANR	1929354	Argument	"""href"""		1929320	1					
ANR	1929355	PrimaryExpression	"""href"""		1929320	0					
ANR	1929356	IfStatement	if ( href == NULL || href -> ns == NULL )		1929320	1					
ANR	1929357	Condition	href == NULL || href -> ns == NULL	3296:7:103080:103111	1929320	0	True				
ANR	1929358	OrExpression	href == NULL || href -> ns == NULL		1929320	0		||			
ANR	1929359	EqualityExpression	href == NULL		1929320	0		==			
ANR	1929360	Identifier	href		1929320	0					
ANR	1929361	Identifier	NULL		1929320	1					
ANR	1929362	EqualityExpression	href -> ns == NULL		1929320	1		==			
ANR	1929363	PtrMemberAccess	href -> ns		1929320	0					
ANR	1929364	Identifier	href		1929320	0					
ANR	1929365	Identifier	ns		1929320	1					
ANR	1929366	Identifier	NULL		1929320	1					
ANR	1929367	CompoundStatement		8:41:175:175	1929320	1					
ANR	1929368	BreakStatement	break ;	3296:42:103115:103120	1929320	0	True				
ANR	1929369	ExpressionStatement	href = href -> next	3297:3:103126:103143	1929320	2	True				
ANR	1929370	AssignmentExpression	href = href -> next		1929320	0		=			
ANR	1929371	Identifier	href		1929320	0					
ANR	1929372	PtrMemberAccess	href -> next		1929320	1					
ANR	1929373	Identifier	href		1929320	0					
ANR	1929374	Identifier	next		1929320	1					
ANR	1929375	IfStatement	if ( href )		1929320	3					
ANR	1929376	Condition	href	3299:6:103155:103158	1929320	0	True				
ANR	1929377	Identifier	href		1929320	0					
ANR	1929378	CompoundStatement		11:12:222:222	1929320	1					
ANR	1929379	IfStatement	if ( href -> children -> content [ 0 ] == '#' )		1929320	0					
ANR	1929380	Condition	href -> children -> content [ 0 ] == '#'	3301:7:103212:103244	1929320	0	True				
ANR	1929381	EqualityExpression	href -> children -> content [ 0 ] == '#'		1929320	0		==			
ANR	1929382	ArrayIndexing	href -> children -> content [ 0 ]		1929320	0					
ANR	1929383	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929384	PtrMemberAccess	href -> children		1929320	0					
ANR	1929385	Identifier	href		1929320	0					
ANR	1929386	Identifier	children		1929320	1					
ANR	1929387	Identifier	content		1929320	1					
ANR	1929388	PrimaryExpression	0		1929320	1					
ANR	1929389	PrimaryExpression	'#'		1929320	1					
ANR	1929390	CompoundStatement		14:4:314:433	1929320	1					
ANR	1929391	IdentifierDeclStatement	"xmlNodePtr ret = get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] ) ;"	3302:4:103253:103372	1929320	0	True				
ANR	1929392	IdentifierDecl	"ret = get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] )"		1929320	0					
ANR	1929393	IdentifierDeclType	xmlNodePtr		1929320	0					
ANR	1929394	Identifier	ret		1929320	1					
ANR	1929395	AssignmentExpression	"ret = get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] )"		1929320	2		=			
ANR	1929396	Identifier	ret		1929320	0					
ANR	1929397	CallExpression	"get_node_with_attribute_recursive ( data -> doc -> children , NULL , ""id"" , ( char * ) & href -> children -> content [ 1 ] )"		1929320	1					
ANR	1929398	Callee	get_node_with_attribute_recursive		1929320	0					
ANR	1929399	Identifier	get_node_with_attribute_recursive		1929320	0					
ANR	1929400	ArgumentList	data -> doc -> children		1929320	1					
ANR	1929401	Argument	data -> doc -> children		1929320	0					
ANR	1929402	PtrMemberAccess	data -> doc -> children		1929320	0					
ANR	1929403	PtrMemberAccess	data -> doc		1929320	0					
ANR	1929404	Identifier	data		1929320	0					
ANR	1929405	Identifier	doc		1929320	1					
ANR	1929406	Identifier	children		1929320	1					
ANR	1929407	Argument	NULL		1929320	1					
ANR	1929408	Identifier	NULL		1929320	0					
ANR	1929409	Argument	"""id"""		1929320	2					
ANR	1929410	PrimaryExpression	"""id"""		1929320	0					
ANR	1929411	Argument	( char * ) & href -> children -> content [ 1 ]		1929320	3					
ANR	1929412	CastExpression	( char * ) & href -> children -> content [ 1 ]		1929320	0					
ANR	1929413	CastTarget	char *		1929320	0					
ANR	1929414	UnaryOperationExpression	& href -> children -> content [ 1 ]		1929320	1					
ANR	1929415	UnaryOperator	&		1929320	0					
ANR	1929416	ArrayIndexing	href -> children -> content [ 1 ]		1929320	1					
ANR	1929417	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929418	PtrMemberAccess	href -> children		1929320	0					
ANR	1929419	Identifier	href		1929320	0					
ANR	1929420	Identifier	children		1929320	1					
ANR	1929421	Identifier	content		1929320	1					
ANR	1929422	PrimaryExpression	1		1929320	1					
ANR	1929423	IfStatement	if ( ! ret )		1929320	1					
ANR	1929424	Condition	! ret	3303:8:103382:103385	1929320	0	True				
ANR	1929425	UnaryOperationExpression	! ret		1929320	0					
ANR	1929426	UnaryOperator	!		1929320	0					
ANR	1929427	Identifier	ret		1929320	1					
ANR	1929428	CompoundStatement		15:14:449:449	1929320	1					
ANR	1929429	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"	3304:5:103395:103479	1929320	0	True				
ANR	1929430	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"		1929320	0					
ANR	1929431	Callee	soap_error1		1929320	0					
ANR	1929432	Identifier	soap_error1		1929320	0					
ANR	1929433	ArgumentList	E_ERROR		1929320	1					
ANR	1929434	Argument	E_ERROR		1929320	0					
ANR	1929435	Identifier	E_ERROR		1929320	0					
ANR	1929436	Argument	"""Encoding: Unresolved reference '%s'"""		1929320	1					
ANR	1929437	PrimaryExpression	"""Encoding: Unresolved reference '%s'"""		1929320	0					
ANR	1929438	Argument	href -> children -> content		1929320	2					
ANR	1929439	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929440	PtrMemberAccess	href -> children		1929320	0					
ANR	1929441	Identifier	href		1929320	0					
ANR	1929442	Identifier	children		1929320	1					
ANR	1929443	Identifier	content		1929320	1					
ANR	1929444	ReturnStatement	return ret ;	3306:4:103491:103501	1929320	2	True				
ANR	1929445	Identifier	ret		1929320	0					
ANR	1929446	ElseStatement	else		1929320	0					
ANR	1929447	CompoundStatement		19:10:574:574	1929320	0					
ANR	1929448	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: External reference '%s'"" , href -> children -> content )"	3309:4:103555:103637	1929320	0	True				
ANR	1929449	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: External reference '%s'"" , href -> children -> content )"		1929320	0					
ANR	1929450	Callee	soap_error1		1929320	0					
ANR	1929451	Identifier	soap_error1		1929320	0					
ANR	1929452	ArgumentList	E_ERROR		1929320	1					
ANR	1929453	Argument	E_ERROR		1929320	0					
ANR	1929454	Identifier	E_ERROR		1929320	0					
ANR	1929455	Argument	"""Encoding: External reference '%s'"""		1929320	1					
ANR	1929456	PrimaryExpression	"""Encoding: External reference '%s'"""		1929320	0					
ANR	1929457	Argument	href -> children -> content		1929320	2					
ANR	1929458	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929459	PtrMemberAccess	href -> children		1929320	0					
ANR	1929460	Identifier	href		1929320	0					
ANR	1929461	Identifier	children		1929320	1					
ANR	1929462	Identifier	content		1929320	1					
ANR	1929463	ExpressionStatement	"href = get_attribute_ex ( data -> properties , ""ref"" , SOAP_1_2_ENC_NAMESPACE )"	3313:2:103682:103754	1929320	4	True				
ANR	1929464	AssignmentExpression	"href = get_attribute_ex ( data -> properties , ""ref"" , SOAP_1_2_ENC_NAMESPACE )"		1929320	0		=			
ANR	1929465	Identifier	href		1929320	0					
ANR	1929466	CallExpression	"get_attribute_ex ( data -> properties , ""ref"" , SOAP_1_2_ENC_NAMESPACE )"		1929320	1					
ANR	1929467	Callee	get_attribute_ex		1929320	0					
ANR	1929468	Identifier	get_attribute_ex		1929320	0					
ANR	1929469	ArgumentList	data -> properties		1929320	1					
ANR	1929470	Argument	data -> properties		1929320	0					
ANR	1929471	PtrMemberAccess	data -> properties		1929320	0					
ANR	1929472	Identifier	data		1929320	0					
ANR	1929473	Identifier	properties		1929320	1					
ANR	1929474	Argument	"""ref"""		1929320	1					
ANR	1929475	PrimaryExpression	"""ref"""		1929320	0					
ANR	1929476	Argument	SOAP_1_2_ENC_NAMESPACE		1929320	2					
ANR	1929477	Identifier	SOAP_1_2_ENC_NAMESPACE		1929320	0					
ANR	1929478	IfStatement	if ( href )		1929320	5					
ANR	1929479	Condition	href	3314:6:103762:103765	1929320	0	True				
ANR	1929480	Identifier	href		1929320	0					
ANR	1929481	CompoundStatement		28:3:850:864	1929320	1					
ANR	1929482	IdentifierDeclStatement	xmlChar * id ;	3315:3:103773:103784	1929320	0	True				
ANR	1929483	IdentifierDecl	* id		1929320	0					
ANR	1929484	IdentifierDeclType	xmlChar *		1929320	0					
ANR	1929485	Identifier	id		1929320	1					
ANR	1929486	IdentifierDeclStatement	xmlNodePtr ret ;	3316:3:103789:103803	1929320	1	True				
ANR	1929487	IdentifierDecl	ret		1929320	0					
ANR	1929488	IdentifierDeclType	xmlNodePtr		1929320	0					
ANR	1929489	Identifier	ret		1929320	1					
ANR	1929490	IfStatement	if ( href -> children -> content [ 0 ] == '#' )		1929320	2					
ANR	1929491	Condition	href -> children -> content [ 0 ] == '#'	3318:7:103813:103845	1929320	0	True				
ANR	1929492	EqualityExpression	href -> children -> content [ 0 ] == '#'		1929320	0		==			
ANR	1929493	ArrayIndexing	href -> children -> content [ 0 ]		1929320	0					
ANR	1929494	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929495	PtrMemberAccess	href -> children		1929320	0					
ANR	1929496	Identifier	href		1929320	0					
ANR	1929497	Identifier	children		1929320	1					
ANR	1929498	Identifier	content		1929320	1					
ANR	1929499	PrimaryExpression	0		1929320	1					
ANR	1929500	PrimaryExpression	'#'		1929320	1					
ANR	1929501	CompoundStatement		30:42:909:909	1929320	1					
ANR	1929502	ExpressionStatement	id = href -> children -> content + 1	3319:4:103854:103884	1929320	0	True				
ANR	1929503	AssignmentExpression	id = href -> children -> content + 1		1929320	0		=			
ANR	1929504	Identifier	id		1929320	0					
ANR	1929505	AdditiveExpression	href -> children -> content + 1		1929320	1		+			
ANR	1929506	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929507	PtrMemberAccess	href -> children		1929320	0					
ANR	1929508	Identifier	href		1929320	0					
ANR	1929509	Identifier	children		1929320	1					
ANR	1929510	Identifier	content		1929320	1					
ANR	1929511	PrimaryExpression	1		1929320	1					
ANR	1929512	ElseStatement	else		1929320	0					
ANR	1929513	CompoundStatement		32:10:957:957	1929320	0					
ANR	1929514	ExpressionStatement	id = href -> children -> content	3321:4:103902:103930	1929320	0	True				
ANR	1929515	AssignmentExpression	id = href -> children -> content		1929320	0		=			
ANR	1929516	Identifier	id		1929320	0					
ANR	1929517	PtrMemberAccess	href -> children -> content		1929320	1					
ANR	1929518	PtrMemberAccess	href -> children		1929320	0					
ANR	1929519	Identifier	href		1929320	0					
ANR	1929520	Identifier	children		1929320	1					
ANR	1929521	Identifier	content		1929320	1					
ANR	1929522	ExpressionStatement	"ret = get_node_with_attribute_recursive_ex ( data -> doc -> children , NULL , NULL , ""id"" , ( char * ) id , SOAP_1_2_ENC_NAMESPACE )"	3323:3:103940:104056	1929320	3	True				
ANR	1929523	AssignmentExpression	"ret = get_node_with_attribute_recursive_ex ( data -> doc -> children , NULL , NULL , ""id"" , ( char * ) id , SOAP_1_2_ENC_NAMESPACE )"		1929320	0		=			
ANR	1929524	Identifier	ret		1929320	0					
ANR	1929525	CallExpression	"get_node_with_attribute_recursive_ex ( data -> doc -> children , NULL , NULL , ""id"" , ( char * ) id , SOAP_1_2_ENC_NAMESPACE )"		1929320	1					
ANR	1929526	Callee	get_node_with_attribute_recursive_ex		1929320	0					
ANR	1929527	Identifier	get_node_with_attribute_recursive_ex		1929320	0					
ANR	1929528	ArgumentList	data -> doc -> children		1929320	1					
ANR	1929529	Argument	data -> doc -> children		1929320	0					
ANR	1929530	PtrMemberAccess	data -> doc -> children		1929320	0					
ANR	1929531	PtrMemberAccess	data -> doc		1929320	0					
ANR	1929532	Identifier	data		1929320	0					
ANR	1929533	Identifier	doc		1929320	1					
ANR	1929534	Identifier	children		1929320	1					
ANR	1929535	Argument	NULL		1929320	1					
ANR	1929536	Identifier	NULL		1929320	0					
ANR	1929537	Argument	NULL		1929320	2					
ANR	1929538	Identifier	NULL		1929320	0					
ANR	1929539	Argument	"""id"""		1929320	3					
ANR	1929540	PrimaryExpression	"""id"""		1929320	0					
ANR	1929541	Argument	( char * ) id		1929320	4					
ANR	1929542	CastExpression	( char * ) id		1929320	0					
ANR	1929543	CastTarget	char *		1929320	0					
ANR	1929544	Identifier	id		1929320	1					
ANR	1929545	Argument	SOAP_1_2_ENC_NAMESPACE		1929320	5					
ANR	1929546	Identifier	SOAP_1_2_ENC_NAMESPACE		1929320	0					
ANR	1929547	IfStatement	if ( ! ret )		1929320	4					
ANR	1929548	Condition	! ret	3324:7:104065:104068	1929320	0	True				
ANR	1929549	UnaryOperationExpression	! ret		1929320	0					
ANR	1929550	UnaryOperator	!		1929320	0					
ANR	1929551	Identifier	ret		1929320	1					
ANR	1929552	CompoundStatement		36:13:1132:1132	1929320	1					
ANR	1929553	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"	3325:4:104077:104161	1929320	0	True				
ANR	1929554	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Unresolved reference '%s'"" , href -> children -> content )"		1929320	0					
ANR	1929555	Callee	soap_error1		1929320	0					
ANR	1929556	Identifier	soap_error1		1929320	0					
ANR	1929557	ArgumentList	E_ERROR		1929320	1					
ANR	1929558	Argument	E_ERROR		1929320	0					
ANR	1929559	Identifier	E_ERROR		1929320	0					
ANR	1929560	Argument	"""Encoding: Unresolved reference '%s'"""		1929320	1					
ANR	1929561	PrimaryExpression	"""Encoding: Unresolved reference '%s'"""		1929320	0					
ANR	1929562	Argument	href -> children -> content		1929320	2					
ANR	1929563	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929564	PtrMemberAccess	href -> children		1929320	0					
ANR	1929565	Identifier	href		1929320	0					
ANR	1929566	Identifier	children		1929320	1					
ANR	1929567	Identifier	content		1929320	1					
ANR	1929568	ElseStatement	else		1929320	0					
ANR	1929569	IfStatement	if ( ret == data )		1929320	0					
ANR	1929570	Condition	ret == data	3326:14:104177:104187	1929320	0	True				
ANR	1929571	EqualityExpression	ret == data		1929320	0		==			
ANR	1929572	Identifier	ret		1929320	0					
ANR	1929573	Identifier	data		1929320	1					
ANR	1929574	CompoundStatement		38:27:1251:1251	1929320	1					
ANR	1929575	ExpressionStatement	"soap_error1 ( E_ERROR , ""Encoding: Violation of id and ref information items '%s'"" , href -> children -> content )"	3327:4:104196:104301	1929320	0	True				
ANR	1929576	CallExpression	"soap_error1 ( E_ERROR , ""Encoding: Violation of id and ref information items '%s'"" , href -> children -> content )"		1929320	0					
ANR	1929577	Callee	soap_error1		1929320	0					
ANR	1929578	Identifier	soap_error1		1929320	0					
ANR	1929579	ArgumentList	E_ERROR		1929320	1					
ANR	1929580	Argument	E_ERROR		1929320	0					
ANR	1929581	Identifier	E_ERROR		1929320	0					
ANR	1929582	Argument	"""Encoding: Violation of id and ref information items '%s'"""		1929320	1					
ANR	1929583	PrimaryExpression	"""Encoding: Violation of id and ref information items '%s'"""		1929320	0					
ANR	1929584	Argument	href -> children -> content		1929320	2					
ANR	1929585	PtrMemberAccess	href -> children -> content		1929320	0					
ANR	1929586	PtrMemberAccess	href -> children		1929320	0					
ANR	1929587	Identifier	href		1929320	0					
ANR	1929588	Identifier	children		1929320	1					
ANR	1929589	Identifier	content		1929320	1					
ANR	1929590	ReturnStatement	return ret ;	3329:3:104311:104321	1929320	5	True				
ANR	1929591	Identifier	ret		1929320	0					
ANR	1929592	ReturnStatement	return data ;	3332:1:104331:104342	1929320	1	True				
ANR	1929593	Identifier	data		1929320	0					
ANR	1929594	ReturnType	static xmlNodePtr		1929320	1					
ANR	1929595	Identifier	check_and_resolve_href		1929320	2					
ANR	1929596	ParameterList	xmlNodePtr data		1929320	3					
ANR	1929597	Parameter	xmlNodePtr data	3288:41:102921:102935	1929320	0	True				
ANR	1929598	ParameterType	xmlNodePtr		1929320	0					
ANR	1929599	Identifier	data		1929320	1					
ANR	1929600	CFGEntryNode	ENTRY		1929320		True				
ANR	1929601	CFGExitNode	EXIT		1929320		True				
ANR	1929602	Symbol	* * data		1929320						
ANR	1929603	Symbol	data		1929320						
ANR	1929604	Symbol	get_attribute		1929320						
ANR	1929605	Symbol	data -> properties		1929320						
ANR	1929606	Symbol	href -> ns		1929320						
ANR	1929607	Symbol	* href -> children		1929320						
ANR	1929608	Symbol	* * href		1929320						
ANR	1929609	Symbol	href -> children		1929320						
ANR	1929610	Symbol	href		1929320						
ANR	1929611	Symbol	href -> children -> content		1929320						
ANR	1929612	Symbol	id		1929320						
ANR	1929613	Symbol	* href -> children -> content		1929320						
ANR	1929614	Symbol	* * href -> children		1929320						
ANR	1929615	Symbol	data -> doc -> children		1929320						
ANR	1929616	Symbol	ret		1929320						
ANR	1929617	Symbol	NULL		1929320						
ANR	1929618	Symbol	get_node_with_attribute_recursive_ex		1929320						
ANR	1929619	Symbol	get_node_with_attribute_recursive		1929320						
ANR	1929620	Symbol	href -> next		1929320						
ANR	1929621	Symbol	E_ERROR		1929320						
ANR	1929622	Symbol	* data -> doc		1929320						
ANR	1929623	Symbol	data -> doc		1929320						
ANR	1929624	Symbol	get_attribute_ex		1929320						
ANR	1929625	Symbol	SOAP_1_2_ENC_NAMESPACE		1929320						
ANR	1929626	Symbol	* data		1929320						
ANR	1929627	Symbol	* href		1929320						
ANR	1929628	Symbol	* * * href		1929320						
ANR	1929629	Function	set_ns_and_type	3335:0:104347:104467							
ANR	1929630	FunctionDef	"set_ns_and_type (xmlNodePtr node , encodeTypePtr type)"		1929629	0					
ANR	1929631	CompoundStatement		3336:0:104412:104467	1929629	0					
ANR	1929632	ExpressionStatement	"set_ns_and_type_ex ( node , type -> ns , type -> type_str )"	3337:1:104415:104465	1929629	0	True				
ANR	1929633	CallExpression	"set_ns_and_type_ex ( node , type -> ns , type -> type_str )"		1929629	0					
ANR	1929634	Callee	set_ns_and_type_ex		1929629	0					
ANR	1929635	Identifier	set_ns_and_type_ex		1929629	0					
ANR	1929636	ArgumentList	node		1929629	1					
ANR	1929637	Argument	node		1929629	0					
ANR	1929638	Identifier	node		1929629	0					
ANR	1929639	Argument	type -> ns		1929629	1					
ANR	1929640	PtrMemberAccess	type -> ns		1929629	0					
ANR	1929641	Identifier	type		1929629	0					
ANR	1929642	Identifier	ns		1929629	1					
ANR	1929643	Argument	type -> type_str		1929629	2					
ANR	1929644	PtrMemberAccess	type -> type_str		1929629	0					
ANR	1929645	Identifier	type		1929629	0					
ANR	1929646	Identifier	type_str		1929629	1					
ANR	1929647	ReturnType	static void		1929629	1					
ANR	1929648	Identifier	set_ns_and_type		1929629	2					
ANR	1929649	ParameterList	"xmlNodePtr node , encodeTypePtr type"		1929629	3					
ANR	1929650	Parameter	xmlNodePtr node	3335:28:104375:104389	1929629	0	True				
ANR	1929651	ParameterType	xmlNodePtr		1929629	0					
ANR	1929652	Identifier	node		1929629	1					
ANR	1929653	Parameter	encodeTypePtr type	3335:45:104392:104409	1929629	1	True				
ANR	1929654	ParameterType	encodeTypePtr		1929629	0					
ANR	1929655	Identifier	type		1929629	1					
ANR	1929656	CFGEntryNode	ENTRY		1929629		True				
ANR	1929657	CFGExitNode	EXIT		1929629		True				
ANR	1929658	Symbol	node		1929629						
ANR	1929659	Symbol	type -> ns		1929629						
ANR	1929660	Symbol	* type		1929629						
ANR	1929661	Symbol	type -> type_str		1929629						
ANR	1929662	Symbol	type		1929629						
ANR	1929663	Function	set_ns_and_type_ex	3340:0:104470:104674							
ANR	1929664	FunctionDef	"set_ns_and_type_ex (xmlNodePtr node , char * ns , char * type)"		1929663	0					
ANR	1929665	CompoundStatement		3341:0:104540:104674	1929663	0					
ANR	1929666	IdentifierDeclStatement	smart_str nstype = { 0 } ;	3342:1:104543:104565	1929663	0	True				
ANR	1929667	IdentifierDecl	nstype = { 0 }		1929663	0					
ANR	1929668	IdentifierDeclType	smart_str		1929663	0					
ANR	1929669	Identifier	nstype		1929663	1					
ANR	1929670	AssignmentExpression	nstype = { 0 }		1929663	2		=			
ANR	1929671	Identifier	nstype		1929663	0					
ANR	1929672	InitializerList	0		1929663	1					
ANR	1929673	PrimaryExpression	0		1929663	0					
ANR	1929674	ExpressionStatement	"get_type_str ( node , ns , type , & nstype )"	3343:1:104568:104605	1929663	1	True				
ANR	1929675	CallExpression	"get_type_str ( node , ns , type , & nstype )"		1929663	0					
ANR	1929676	Callee	get_type_str		1929663	0					
ANR	1929677	Identifier	get_type_str		1929663	0					
ANR	1929678	ArgumentList	node		1929663	1					
ANR	1929679	Argument	node		1929663	0					
ANR	1929680	Identifier	node		1929663	0					
ANR	1929681	Argument	ns		1929663	1					
ANR	1929682	Identifier	ns		1929663	0					
ANR	1929683	Argument	type		1929663	2					
ANR	1929684	Identifier	type		1929663	0					
ANR	1929685	Argument	& nstype		1929663	3					
ANR	1929686	UnaryOperationExpression	& nstype		1929663	0					
ANR	1929687	UnaryOperator	&		1929663	0					
ANR	1929688	Identifier	nstype		1929663	1					
ANR	1929689	ExpressionStatement	"set_xsi_type ( node , ZSTR_VAL ( nstype . s ) )"	3344:1:104608:104646	1929663	2	True				
ANR	1929690	CallExpression	"set_xsi_type ( node , ZSTR_VAL ( nstype . s ) )"		1929663	0					
ANR	1929691	Callee	set_xsi_type		1929663	0					
ANR	1929692	Identifier	set_xsi_type		1929663	0					
ANR	1929693	ArgumentList	node		1929663	1					
ANR	1929694	Argument	node		1929663	0					
ANR	1929695	Identifier	node		1929663	0					
ANR	1929696	Argument	ZSTR_VAL ( nstype . s )		1929663	1					
ANR	1929697	CallExpression	ZSTR_VAL ( nstype . s )		1929663	0					
ANR	1929698	Callee	ZSTR_VAL		1929663	0					
ANR	1929699	Identifier	ZSTR_VAL		1929663	0					
ANR	1929700	ArgumentList	nstype . s		1929663	1					
ANR	1929701	Argument	nstype . s		1929663	0					
ANR	1929702	MemberAccess	nstype . s		1929663	0					
ANR	1929703	Identifier	nstype		1929663	0					
ANR	1929704	Identifier	s		1929663	1					
ANR	1929705	ExpressionStatement	smart_str_free ( & nstype )	3345:1:104649:104672	1929663	3	True				
ANR	1929706	CallExpression	smart_str_free ( & nstype )		1929663	0					
ANR	1929707	Callee	smart_str_free		1929663	0					
ANR	1929708	Identifier	smart_str_free		1929663	0					
ANR	1929709	ArgumentList	& nstype		1929663	1					
ANR	1929710	Argument	& nstype		1929663	0					
ANR	1929711	UnaryOperationExpression	& nstype		1929663	0					
ANR	1929712	UnaryOperator	&		1929663	0					
ANR	1929713	Identifier	nstype		1929663	1					
ANR	1929714	ReturnType	static void		1929663	1					
ANR	1929715	Identifier	set_ns_and_type_ex		1929663	2					
ANR	1929716	ParameterList	"xmlNodePtr node , char * ns , char * type"		1929663	3					
ANR	1929717	Parameter	xmlNodePtr node	3340:31:104501:104515	1929663	0	True				
ANR	1929718	ParameterType	xmlNodePtr		1929663	0					
ANR	1929719	Identifier	node		1929663	1					
ANR	1929720	Parameter	char * ns	3340:48:104518:104525	1929663	1	True				
ANR	1929721	ParameterType	char *		1929663	0					
ANR	1929722	Identifier	ns		1929663	1					
ANR	1929723	Parameter	char * type	3340:58:104528:104537	1929663	2	True				
ANR	1929724	ParameterType	char *		1929663	0					
ANR	1929725	Identifier	type		1929663	1					
ANR	1929726	CFGEntryNode	ENTRY		1929663		True				
ANR	1929727	CFGExitNode	EXIT		1929663		True				
ANR	1929728	Symbol	node		1929663						
ANR	1929729	Symbol	nstype . s		1929663						
ANR	1929730	Symbol	ns		1929663						
ANR	1929731	Symbol	type		1929663						
ANR	1929732	Symbol	& nstype		1929663						
ANR	1929733	Symbol	nstype		1929663						
ANR	1929734	Symbol	ZSTR_VAL		1929663						
ANR	1929735	Function	xmlSearchNsPrefixByHref	3348:0:104677:105518							
ANR	1929736	FunctionDef	"xmlSearchNsPrefixByHref (xmlDocPtr doc , xmlNodePtr node , const xmlChar * href)"		1929735	0					
ANR	1929737	CompoundStatement		3349:0:104771:105518	1929735	0					
ANR	1929738	IdentifierDeclStatement	xmlNsPtr cur ;	3350:1:104774:104786	1929735	0	True				
ANR	1929739	IdentifierDecl	cur		1929735	0					
ANR	1929740	IdentifierDeclType	xmlNsPtr		1929735	0					
ANR	1929741	Identifier	cur		1929735	1					
ANR	1929742	IdentifierDeclStatement	xmlNodePtr orig = node ;	3351:1:104789:104811	1929735	1	True				
ANR	1929743	IdentifierDecl	orig = node		1929735	0					
ANR	1929744	IdentifierDeclType	xmlNodePtr		1929735	0					
ANR	1929745	Identifier	orig		1929735	1					
ANR	1929746	AssignmentExpression	orig = node		1929735	2		=			
ANR	1929747	Identifier	node		1929735	0					
ANR	1929748	Identifier	node		1929735	1					
ANR	1929749	WhileStatement	while ( node )		1929735	2					
ANR	1929750	Condition	node	3353:8:104822:104825	1929735	0	True				
ANR	1929751	Identifier	node		1929735	0					
ANR	1929752	CompoundStatement		5:14:56:56	1929735	1					
ANR	1929753	IfStatement	if ( node -> type == XML_ENTITY_REF_NODE || node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL )		1929735	0					
ANR	1929754	Condition	node -> type == XML_ENTITY_REF_NODE || node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL	3354:6:104836:104946	1929735	0	True				
ANR	1929755	OrExpression	node -> type == XML_ENTITY_REF_NODE || node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL		1929735	0		||			
ANR	1929756	EqualityExpression	node -> type == XML_ENTITY_REF_NODE		1929735	0		==			
ANR	1929757	PtrMemberAccess	node -> type		1929735	0					
ANR	1929758	Identifier	node		1929735	0					
ANR	1929759	Identifier	type		1929735	1					
ANR	1929760	Identifier	XML_ENTITY_REF_NODE		1929735	1					
ANR	1929761	OrExpression	node -> type == XML_ENTITY_NODE || node -> type == XML_ENTITY_DECL		1929735	1		||			
ANR	1929762	EqualityExpression	node -> type == XML_ENTITY_NODE		1929735	0		==			
ANR	1929763	PtrMemberAccess	node -> type		1929735	0					
ANR	1929764	Identifier	node		1929735	0					
ANR	1929765	Identifier	type		1929735	1					
ANR	1929766	Identifier	XML_ENTITY_NODE		1929735	1					
ANR	1929767	EqualityExpression	node -> type == XML_ENTITY_DECL		1929735	1		==			
ANR	1929768	PtrMemberAccess	node -> type		1929735	0					
ANR	1929769	Identifier	node		1929735	0					
ANR	1929770	Identifier	type		1929735	1					
ANR	1929771	Identifier	XML_ENTITY_DECL		1929735	1					
ANR	1929772	CompoundStatement		8:37:177:177	1929735	1					
ANR	1929773	ReturnStatement	return NULL ;	3357:3:104954:104965	1929735	0	True				
ANR	1929774	Identifier	NULL		1929735	0					
ANR	1929775	IfStatement	if ( node -> type == XML_ELEMENT_NODE )		1929735	1					
ANR	1929776	Condition	node -> type == XML_ELEMENT_NODE	3359:6:104977:105006	1929735	0	True				
ANR	1929777	EqualityExpression	node -> type == XML_ELEMENT_NODE		1929735	0		==			
ANR	1929778	PtrMemberAccess	node -> type		1929735	0					
ANR	1929779	Identifier	node		1929735	0					
ANR	1929780	Identifier	type		1929735	1					
ANR	1929781	Identifier	XML_ELEMENT_NODE		1929735	1					
ANR	1929782	CompoundStatement		11:38:237:237	1929735	1					
ANR	1929783	ExpressionStatement	cur = node -> nsDef	3360:3:105014:105031	1929735	0	True				
ANR	1929784	AssignmentExpression	cur = node -> nsDef		1929735	0		=			
ANR	1929785	Identifier	cur		1929735	0					
ANR	1929786	PtrMemberAccess	node -> nsDef		1929735	1					
ANR	1929787	Identifier	node		1929735	0					
ANR	1929788	Identifier	nsDef		1929735	1					
ANR	1929789	WhileStatement	while ( cur != NULL )		1929735	1					
ANR	1929790	Condition	cur != NULL	3361:10:105043:105053	1929735	0	True				
ANR	1929791	EqualityExpression	cur != NULL		1929735	0		!=			
ANR	1929792	Identifier	cur		1929735	0					
ANR	1929793	Identifier	NULL		1929735	1					
ANR	1929794	CompoundStatement		13:23:284:284	1929735	1					
ANR	1929795	IfStatement	"if ( cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href ) )"		1929735	0					
ANR	1929796	Condition	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"	3362:8:105066:105121	1929735	0	True				
ANR	1929797	AndExpression	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"		1929735	0		&&			
ANR	1929798	PtrMemberAccess	cur -> prefix		1929735	0					
ANR	1929799	Identifier	cur		1929735	0					
ANR	1929800	Identifier	prefix		1929735	1					
ANR	1929801	AndExpression	"cur -> href && xmlStrEqual ( cur -> href , href )"		1929735	1		&&			
ANR	1929802	PtrMemberAccess	cur -> href		1929735	0					
ANR	1929803	Identifier	cur		1929735	0					
ANR	1929804	Identifier	href		1929735	1					
ANR	1929805	CallExpression	"xmlStrEqual ( cur -> href , href )"		1929735	1					
ANR	1929806	Callee	xmlStrEqual		1929735	0					
ANR	1929807	Identifier	xmlStrEqual		1929735	0					
ANR	1929808	ArgumentList	cur -> href		1929735	1					
ANR	1929809	Argument	cur -> href		1929735	0					
ANR	1929810	PtrMemberAccess	cur -> href		1929735	0					
ANR	1929811	Identifier	cur		1929735	0					
ANR	1929812	Identifier	href		1929735	1					
ANR	1929813	Argument	href		1929735	1					
ANR	1929814	Identifier	href		1929735	0					
ANR	1929815	CompoundStatement		14:66:352:352	1929735	1					
ANR	1929816	IfStatement	"if ( xmlSearchNs ( doc , node , cur -> prefix ) == cur )"		1929735	0					
ANR	1929817	Condition	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"	3363:9:105135:105176	1929735	0	True				
ANR	1929818	EqualityExpression	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"		1929735	0		==			
ANR	1929819	CallExpression	"xmlSearchNs ( doc , node , cur -> prefix )"		1929735	0					
ANR	1929820	Callee	xmlSearchNs		1929735	0					
ANR	1929821	Identifier	xmlSearchNs		1929735	0					
ANR	1929822	ArgumentList	doc		1929735	1					
ANR	1929823	Argument	doc		1929735	0					
ANR	1929824	Identifier	doc		1929735	0					
ANR	1929825	Argument	node		1929735	1					
ANR	1929826	Identifier	node		1929735	0					
ANR	1929827	Argument	cur -> prefix		1929735	2					
ANR	1929828	PtrMemberAccess	cur -> prefix		1929735	0					
ANR	1929829	Identifier	cur		1929735	0					
ANR	1929830	Identifier	prefix		1929735	1					
ANR	1929831	Identifier	cur		1929735	1					
ANR	1929832	CompoundStatement		15:53:407:407	1929735	1					
ANR	1929833	ReturnStatement	return cur ;	3364:6:105187:105197	1929735	0	True				
ANR	1929834	Identifier	cur		1929735	0					
ANR	1929835	ExpressionStatement	cur = cur -> next	3367:4:105216:105231	1929735	1	True				
ANR	1929836	AssignmentExpression	cur = cur -> next		1929735	0		=			
ANR	1929837	Identifier	cur		1929735	0					
ANR	1929838	PtrMemberAccess	cur -> next		1929735	1					
ANR	1929839	Identifier	cur		1929735	0					
ANR	1929840	Identifier	next		1929735	1					
ANR	1929841	IfStatement	if ( orig != node )		1929735	2					
ANR	1929842	Condition	orig != node	3369:7:105245:105256	1929735	0	True				
ANR	1929843	EqualityExpression	orig != node		1929735	0		!=			
ANR	1929844	Identifier	orig		1929735	0					
ANR	1929845	Identifier	node		1929735	1					
ANR	1929846	CompoundStatement		21:21:487:487	1929735	1					
ANR	1929847	ExpressionStatement	cur = node -> ns	3370:4:105265:105279	1929735	0	True				
ANR	1929848	AssignmentExpression	cur = node -> ns		1929735	0		=			
ANR	1929849	Identifier	cur		1929735	0					
ANR	1929850	PtrMemberAccess	node -> ns		1929735	1					
ANR	1929851	Identifier	node		1929735	0					
ANR	1929852	Identifier	ns		1929735	1					
ANR	1929853	IfStatement	if ( cur != NULL )		1929735	1					
ANR	1929854	Condition	cur != NULL	3371:8:105289:105299	1929735	0	True				
ANR	1929855	EqualityExpression	cur != NULL		1929735	0		!=			
ANR	1929856	Identifier	cur		1929735	0					
ANR	1929857	Identifier	NULL		1929735	1					
ANR	1929858	CompoundStatement		23:21:530:530	1929735	1					
ANR	1929859	IfStatement	"if ( cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href ) )"		1929735	0					
ANR	1929860	Condition	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"	3372:9:105313:105368	1929735	0	True				
ANR	1929861	AndExpression	"cur -> prefix && cur -> href && xmlStrEqual ( cur -> href , href )"		1929735	0		&&			
ANR	1929862	PtrMemberAccess	cur -> prefix		1929735	0					
ANR	1929863	Identifier	cur		1929735	0					
ANR	1929864	Identifier	prefix		1929735	1					
ANR	1929865	AndExpression	"cur -> href && xmlStrEqual ( cur -> href , href )"		1929735	1		&&			
ANR	1929866	PtrMemberAccess	cur -> href		1929735	0					
ANR	1929867	Identifier	cur		1929735	0					
ANR	1929868	Identifier	href		1929735	1					
ANR	1929869	CallExpression	"xmlStrEqual ( cur -> href , href )"		1929735	1					
ANR	1929870	Callee	xmlStrEqual		1929735	0					
ANR	1929871	Identifier	xmlStrEqual		1929735	0					
ANR	1929872	ArgumentList	cur -> href		1929735	1					
ANR	1929873	Argument	cur -> href		1929735	0					
ANR	1929874	PtrMemberAccess	cur -> href		1929735	0					
ANR	1929875	Identifier	cur		1929735	0					
ANR	1929876	Identifier	href		1929735	1					
ANR	1929877	Argument	href		1929735	1					
ANR	1929878	Identifier	href		1929735	0					
ANR	1929879	CompoundStatement		24:67:599:599	1929735	1					
ANR	1929880	IfStatement	"if ( xmlSearchNs ( doc , node , cur -> prefix ) == cur )"		1929735	0					
ANR	1929881	Condition	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"	3373:10:105383:105424	1929735	0	True				
ANR	1929882	EqualityExpression	"xmlSearchNs ( doc , node , cur -> prefix ) == cur"		1929735	0		==			
ANR	1929883	CallExpression	"xmlSearchNs ( doc , node , cur -> prefix )"		1929735	0					
ANR	1929884	Callee	xmlSearchNs		1929735	0					
ANR	1929885	Identifier	xmlSearchNs		1929735	0					
ANR	1929886	ArgumentList	doc		1929735	1					
ANR	1929887	Argument	doc		1929735	0					
ANR	1929888	Identifier	doc		1929735	0					
ANR	1929889	Argument	node		1929735	1					
ANR	1929890	Identifier	node		1929735	0					
ANR	1929891	Argument	cur -> prefix		1929735	2					
ANR	1929892	PtrMemberAccess	cur -> prefix		1929735	0					
ANR	1929893	Identifier	cur		1929735	0					
ANR	1929894	Identifier	prefix		1929735	1					
ANR	1929895	Identifier	cur		1929735	1					
ANR	1929896	CompoundStatement		25:54:655:655	1929735	1					
ANR	1929897	ReturnStatement	return cur ;	3374:7:105436:105446	1929735	0	True				
ANR	1929898	Identifier	cur		1929735	0					
ANR	1929899	ExpressionStatement	node = node -> parent	3380:2:105480:105499	1929735	2	True				
ANR	1929900	AssignmentExpression	node = node -> parent		1929735	0		=			
ANR	1929901	Identifier	node		1929735	0					
ANR	1929902	PtrMemberAccess	node -> parent		1929735	1					
ANR	1929903	Identifier	node		1929735	0					
ANR	1929904	Identifier	parent		1929735	1					
ANR	1929905	ReturnStatement	return NULL ;	3382:1:105505:105516	1929735	3	True				
ANR	1929906	Identifier	NULL		1929735	0					
ANR	1929907	ReturnType	static xmlNsPtr		1929735	1					
ANR	1929908	Identifier	xmlSearchNsPrefixByHref		1929735	2					
ANR	1929909	ParameterList	"xmlDocPtr doc , xmlNodePtr node , const xmlChar * href"		1929735	3					
ANR	1929910	Parameter	xmlDocPtr doc	3348:40:104717:104729	1929735	0	True				
ANR	1929911	ParameterType	xmlDocPtr		1929735	0					
ANR	1929912	Identifier	doc		1929735	1					
ANR	1929913	Parameter	xmlNodePtr node	3348:55:104732:104746	1929735	1	True				
ANR	1929914	ParameterType	xmlNodePtr		1929735	0					
ANR	1929915	Identifier	node		1929735	1					
ANR	1929916	Parameter	const xmlChar * href	3348:72:104749:104768	1929735	2	True				
ANR	1929917	ParameterType	const xmlChar *		1929735	0					
ANR	1929918	Identifier	href		1929735	1					
ANR	1929919	CFGEntryNode	ENTRY		1929735		True				
ANR	1929920	CFGExitNode	EXIT		1929735		True				
ANR	1929921	Symbol	cur		1929735						
ANR	1929922	Symbol	node -> ns		1929735						
ANR	1929923	Symbol	XML_ELEMENT_NODE		1929735						
ANR	1929924	Symbol	NULL		1929735						
ANR	1929925	Symbol	cur -> href		1929735						
ANR	1929926	Symbol	node -> nsDef		1929735						
ANR	1929927	Symbol	xmlStrEqual		1929735						
ANR	1929928	Symbol	xmlSearchNs		1929735						
ANR	1929929	Symbol	cur -> prefix		1929735						
ANR	1929930	Symbol	node		1929735						
ANR	1929931	Symbol	orig		1929735						
ANR	1929932	Symbol	* cur		1929735						
ANR	1929933	Symbol	XML_ENTITY_DECL		1929735						
ANR	1929934	Symbol	node -> parent		1929735						
ANR	1929935	Symbol	doc		1929735						
ANR	1929936	Symbol	node -> type		1929735						
ANR	1929937	Symbol	XML_ENTITY_REF_NODE		1929735						
ANR	1929938	Symbol	* node		1929735						
ANR	1929939	Symbol	href		1929735						
ANR	1929940	Symbol	XML_ENTITY_NODE		1929735						
ANR	1929941	Symbol	cur -> next		1929735						
ANR	1929942	Function	encode_add_ns	3385:0:105521:106560							
ANR	1929943	FunctionDef	"encode_add_ns (xmlNodePtr node , const char * ns)"		1929942	0					
ANR	1929944	CompoundStatement		3386:0:105577:106560	1929942	0					
ANR	1929945	IdentifierDeclStatement	xmlNsPtr xmlns ;	3387:1:105580:105594	1929942	0	True				
ANR	1929946	IdentifierDecl	xmlns		1929942	0					
ANR	1929947	IdentifierDeclType	xmlNsPtr		1929942	0					
ANR	1929948	Identifier	xmlns		1929942	1					
ANR	1929949	IfStatement	if ( ns == NULL )		1929942	1					
ANR	1929950	Condition	ns == NULL	3389:5:105602:105611	1929942	0	True				
ANR	1929951	EqualityExpression	ns == NULL		1929942	0		==			
ANR	1929952	Identifier	ns		1929942	0					
ANR	1929953	Identifier	NULL		1929942	1					
ANR	1929954	CompoundStatement		4:17:36:36	1929942	1					
ANR	1929955	ReturnStatement	return NULL ;	3390:3:105619:105630	1929942	0	True				
ANR	1929956	Identifier	NULL		1929942	0					
ANR	1929957	ExpressionStatement	"xmlns = xmlSearchNsByHref ( node -> doc , node , BAD_CAST ( ns ) )"	3393:1:105637:105693	1929942	2	True				
ANR	1929958	AssignmentExpression	"xmlns = xmlSearchNsByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1929942	0		=			
ANR	1929959	Identifier	xmlns		1929942	0					
ANR	1929960	CallExpression	"xmlSearchNsByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1929942	1					
ANR	1929961	Callee	xmlSearchNsByHref		1929942	0					
ANR	1929962	Identifier	xmlSearchNsByHref		1929942	0					
ANR	1929963	ArgumentList	node -> doc		1929942	1					
ANR	1929964	Argument	node -> doc		1929942	0					
ANR	1929965	PtrMemberAccess	node -> doc		1929942	0					
ANR	1929966	Identifier	node		1929942	0					
ANR	1929967	Identifier	doc		1929942	1					
ANR	1929968	Argument	node		1929942	1					
ANR	1929969	Identifier	node		1929942	0					
ANR	1929970	Argument	BAD_CAST ( ns )		1929942	2					
ANR	1929971	CallExpression	BAD_CAST ( ns )		1929942	0					
ANR	1929972	Callee	BAD_CAST		1929942	0					
ANR	1929973	Identifier	BAD_CAST		1929942	0					
ANR	1929974	ArgumentList	ns		1929942	1					
ANR	1929975	Argument	ns		1929942	0					
ANR	1929976	Identifier	ns		1929942	0					
ANR	1929977	IfStatement	if ( xmlns != NULL && xmlns -> prefix == NULL )		1929942	3					
ANR	1929978	Condition	xmlns != NULL && xmlns -> prefix == NULL	3394:5:105700:105737	1929942	0	True				
ANR	1929979	AndExpression	xmlns != NULL && xmlns -> prefix == NULL		1929942	0		&&			
ANR	1929980	EqualityExpression	xmlns != NULL		1929942	0		!=			
ANR	1929981	Identifier	xmlns		1929942	0					
ANR	1929982	Identifier	NULL		1929942	1					
ANR	1929983	EqualityExpression	xmlns -> prefix == NULL		1929942	1		==			
ANR	1929984	PtrMemberAccess	xmlns -> prefix		1929942	0					
ANR	1929985	Identifier	xmlns		1929942	0					
ANR	1929986	Identifier	prefix		1929942	1					
ANR	1929987	Identifier	NULL		1929942	1					
ANR	1929988	CompoundStatement		9:45:162:162	1929942	1					
ANR	1929989	ExpressionStatement	"xmlns = xmlSearchNsPrefixByHref ( node -> doc , node , BAD_CAST ( ns ) )"	3395:2:105744:105806	1929942	0	True				
ANR	1929990	AssignmentExpression	"xmlns = xmlSearchNsPrefixByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1929942	0		=			
ANR	1929991	Identifier	xmlns		1929942	0					
ANR	1929992	CallExpression	"xmlSearchNsPrefixByHref ( node -> doc , node , BAD_CAST ( ns ) )"		1929942	1					
ANR	1929993	Callee	xmlSearchNsPrefixByHref		1929942	0					
ANR	1929994	Identifier	xmlSearchNsPrefixByHref		1929942	0					
ANR	1929995	ArgumentList	node -> doc		1929942	1					
ANR	1929996	Argument	node -> doc		1929942	0					
ANR	1929997	PtrMemberAccess	node -> doc		1929942	0					
ANR	1929998	Identifier	node		1929942	0					
ANR	1929999	Identifier	doc		1929942	1					
ANR	1930000	Argument	node		1929942	1					
ANR	1930001	Identifier	node		1929942	0					
ANR	1930002	Argument	BAD_CAST ( ns )		1929942	2					
ANR	1930003	CallExpression	BAD_CAST ( ns )		1929942	0					
ANR	1930004	Callee	BAD_CAST		1929942	0					
ANR	1930005	Identifier	BAD_CAST		1929942	0					
ANR	1930006	ArgumentList	ns		1929942	1					
ANR	1930007	Argument	ns		1929942	0					
ANR	1930008	Identifier	ns		1929942	0					
ANR	1930009	IfStatement	if ( xmlns == NULL )		1929942	4					
ANR	1930010	Condition	xmlns == NULL	3397:5:105816:105828	1929942	0	True				
ANR	1930011	EqualityExpression	xmlns == NULL		1929942	0		==			
ANR	1930012	Identifier	xmlns		1929942	0					
ANR	1930013	Identifier	NULL		1929942	1					
ANR	1930014	CompoundStatement		13:2:257:272	1929942	1					
ANR	1930015	IdentifierDeclStatement	xmlChar * prefix ;	3398:2:105835:105850	1929942	0	True				
ANR	1930016	IdentifierDecl	* prefix		1929942	0					
ANR	1930017	IdentifierDeclType	xmlChar *		1929942	0					
ANR	1930018	Identifier	prefix		1929942	1					
ANR	1930019	IfStatement	"if ( ( prefix = zend_hash_str_find_ptr ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) ) ) != NULL )"		1929942	1					
ANR	1930020	Condition	"( prefix = zend_hash_str_find_ptr ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) ) ) != NULL"	3400:6:105859:105946	1929942	0	True				
ANR	1930021	EqualityExpression	"( prefix = zend_hash_str_find_ptr ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) ) ) != NULL"		1929942	0		!=			
ANR	1930022	AssignmentExpression	"prefix = zend_hash_str_find_ptr ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) )"		1929942	0		=			
ANR	1930023	Identifier	prefix		1929942	0					
ANR	1930024	CallExpression	"zend_hash_str_find_ptr ( & SOAP_GLOBAL ( defEncNs ) , ( char * ) ns , strlen ( ns ) )"		1929942	1					
ANR	1930025	Callee	zend_hash_str_find_ptr		1929942	0					
ANR	1930026	Identifier	zend_hash_str_find_ptr		1929942	0					
ANR	1930027	ArgumentList	& SOAP_GLOBAL ( defEncNs )		1929942	1					
ANR	1930028	Argument	& SOAP_GLOBAL ( defEncNs )		1929942	0					
ANR	1930029	UnaryOperationExpression	& SOAP_GLOBAL ( defEncNs )		1929942	0					
ANR	1930030	UnaryOperator	&		1929942	0					
ANR	1930031	CallExpression	SOAP_GLOBAL ( defEncNs )		1929942	1					
ANR	1930032	Callee	SOAP_GLOBAL		1929942	0					
ANR	1930033	Identifier	SOAP_GLOBAL		1929942	0					
ANR	1930034	ArgumentList	defEncNs		1929942	1					
ANR	1930035	Argument	defEncNs		1929942	0					
ANR	1930036	Identifier	defEncNs		1929942	0					
ANR	1930037	Argument	( char * ) ns		1929942	1					
ANR	1930038	CastExpression	( char * ) ns		1929942	0					
ANR	1930039	CastTarget	char *		1929942	0					
ANR	1930040	Identifier	ns		1929942	1					
ANR	1930041	Argument	strlen ( ns )		1929942	2					
ANR	1930042	CallExpression	strlen ( ns )		1929942	0					
ANR	1930043	Callee	strlen		1929942	0					
ANR	1930044	Identifier	strlen		1929942	0					
ANR	1930045	ArgumentList	ns		1929942	1					
ANR	1930046	Argument	ns		1929942	0					
ANR	1930047	Identifier	ns		1929942	0					
ANR	1930048	Identifier	NULL		1929942	1					
ANR	1930049	CompoundStatement		15:96:371:371	1929942	1					
ANR	1930050	ExpressionStatement	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , prefix )"	3401:3:105954:106013	1929942	0	True				
ANR	1930051	AssignmentExpression	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , prefix )"		1929942	0		=			
ANR	1930052	Identifier	xmlns		1929942	0					
ANR	1930053	CallExpression	"xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , prefix )"		1929942	1					
ANR	1930054	Callee	xmlNewNs		1929942	0					
ANR	1930055	Identifier	xmlNewNs		1929942	0					
ANR	1930056	ArgumentList	node -> doc -> children		1929942	1					
ANR	1930057	Argument	node -> doc -> children		1929942	0					
ANR	1930058	PtrMemberAccess	node -> doc -> children		1929942	0					
ANR	1930059	PtrMemberAccess	node -> doc		1929942	0					
ANR	1930060	Identifier	node		1929942	0					
ANR	1930061	Identifier	doc		1929942	1					
ANR	1930062	Identifier	children		1929942	1					
ANR	1930063	Argument	BAD_CAST ( ns )		1929942	1					
ANR	1930064	CallExpression	BAD_CAST ( ns )		1929942	0					
ANR	1930065	Callee	BAD_CAST		1929942	0					
ANR	1930066	Identifier	BAD_CAST		1929942	0					
ANR	1930067	ArgumentList	ns		1929942	1					
ANR	1930068	Argument	ns		1929942	0					
ANR	1930069	Identifier	ns		1929942	0					
ANR	1930070	Argument	prefix		1929942	2					
ANR	1930071	Identifier	prefix		1929942	0					
ANR	1930072	ElseStatement	else		1929942	0					
ANR	1930073	CompoundStatement		19:3:478:514	1929942	0					
ANR	1930074	IdentifierDeclStatement	smart_str prefix = { 0 } ;	3403:3:106029:106051	1929942	0	True				
ANR	1930075	IdentifierDecl	prefix = { 0 }		1929942	0					
ANR	1930076	IdentifierDeclType	smart_str		1929942	0					
ANR	1930077	Identifier	prefix		1929942	1					
ANR	1930078	AssignmentExpression	prefix = { 0 }		1929942	2		=			
ANR	1930079	Identifier	prefix		1929942	0					
ANR	1930080	InitializerList	0		1929942	1					
ANR	1930081	PrimaryExpression	0		1929942	0					
ANR	1930082	IdentifierDeclStatement	int num = ++ SOAP_GLOBAL ( cur_uniq_ns ) ;	3404:3:106056:106092	1929942	1	True				
ANR	1930083	IdentifierDecl	num = ++ SOAP_GLOBAL ( cur_uniq_ns )		1929942	0					
ANR	1930084	IdentifierDeclType	int		1929942	0					
ANR	1930085	Identifier	num		1929942	1					
ANR	1930086	AssignmentExpression	num = ++ SOAP_GLOBAL ( cur_uniq_ns )		1929942	2		=			
ANR	1930087	Identifier	num		1929942	0					
ANR	1930088	UnaryExpression	++ SOAP_GLOBAL ( cur_uniq_ns )		1929942	1					
ANR	1930089	IncDec	++		1929942	0					
ANR	1930090	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1929942	1					
ANR	1930091	Callee	SOAP_GLOBAL		1929942	0					
ANR	1930092	Identifier	SOAP_GLOBAL		1929942	0					
ANR	1930093	ArgumentList	cur_uniq_ns		1929942	1					
ANR	1930094	Argument	cur_uniq_ns		1929942	0					
ANR	1930095	Identifier	cur_uniq_ns		1929942	0					
ANR	1930096	WhileStatement	while ( 1 )		1929942	2					
ANR	1930097	Condition	1	3406:10:106105:106105	1929942	0	True				
ANR	1930098	PrimaryExpression	1		1929942	0					
ANR	1930099	CompoundStatement		21:13:530:530	1929942	1					
ANR	1930100	ExpressionStatement	"smart_str_appendl ( & prefix , ""ns"" , 2 )"	3407:4:106114:106149	1929942	0	True				
ANR	1930101	CallExpression	"smart_str_appendl ( & prefix , ""ns"" , 2 )"		1929942	0					
ANR	1930102	Callee	smart_str_appendl		1929942	0					
ANR	1930103	Identifier	smart_str_appendl		1929942	0					
ANR	1930104	ArgumentList	& prefix		1929942	1					
ANR	1930105	Argument	& prefix		1929942	0					
ANR	1930106	UnaryOperationExpression	& prefix		1929942	0					
ANR	1930107	UnaryOperator	&		1929942	0					
ANR	1930108	Identifier	prefix		1929942	1					
ANR	1930109	Argument	"""ns"""		1929942	1					
ANR	1930110	PrimaryExpression	"""ns"""		1929942	0					
ANR	1930111	Argument	2		1929942	2					
ANR	1930112	PrimaryExpression	2		1929942	0					
ANR	1930113	ExpressionStatement	"smart_str_append_long ( & prefix , num )"	3408:4:106155:106190	1929942	1	True				
ANR	1930114	CallExpression	"smart_str_append_long ( & prefix , num )"		1929942	0					
ANR	1930115	Callee	smart_str_append_long		1929942	0					
ANR	1930116	Identifier	smart_str_append_long		1929942	0					
ANR	1930117	ArgumentList	& prefix		1929942	1					
ANR	1930118	Argument	& prefix		1929942	0					
ANR	1930119	UnaryOperationExpression	& prefix		1929942	0					
ANR	1930120	UnaryOperator	&		1929942	0					
ANR	1930121	Identifier	prefix		1929942	1					
ANR	1930122	Argument	num		1929942	1					
ANR	1930123	Identifier	num		1929942	0					
ANR	1930124	ExpressionStatement	smart_str_0 ( & prefix )	3409:4:106196:106216	1929942	2	True				
ANR	1930125	CallExpression	smart_str_0 ( & prefix )		1929942	0					
ANR	1930126	Callee	smart_str_0		1929942	0					
ANR	1930127	Identifier	smart_str_0		1929942	0					
ANR	1930128	ArgumentList	& prefix		1929942	1					
ANR	1930129	Argument	& prefix		1929942	0					
ANR	1930130	UnaryOperationExpression	& prefix		1929942	0					
ANR	1930131	UnaryOperator	&		1929942	0					
ANR	1930132	Identifier	prefix		1929942	1					
ANR	1930133	IfStatement	"if ( xmlSearchNs ( node -> doc , node , BAD_CAST ( ZSTR_VAL ( prefix . s ) ) ) == NULL )"		1929942	3					
ANR	1930134	Condition	"xmlSearchNs ( node -> doc , node , BAD_CAST ( ZSTR_VAL ( prefix . s ) ) ) == NULL"	3410:8:106226:106291	1929942	0	True				
ANR	1930135	EqualityExpression	"xmlSearchNs ( node -> doc , node , BAD_CAST ( ZSTR_VAL ( prefix . s ) ) ) == NULL"		1929942	0		==			
ANR	1930136	CallExpression	"xmlSearchNs ( node -> doc , node , BAD_CAST ( ZSTR_VAL ( prefix . s ) ) )"		1929942	0					
ANR	1930137	Callee	xmlSearchNs		1929942	0					
ANR	1930138	Identifier	xmlSearchNs		1929942	0					
ANR	1930139	ArgumentList	node -> doc		1929942	1					
ANR	1930140	Argument	node -> doc		1929942	0					
ANR	1930141	PtrMemberAccess	node -> doc		1929942	0					
ANR	1930142	Identifier	node		1929942	0					
ANR	1930143	Identifier	doc		1929942	1					
ANR	1930144	Argument	node		1929942	1					
ANR	1930145	Identifier	node		1929942	0					
ANR	1930146	Argument	BAD_CAST ( ZSTR_VAL ( prefix . s ) )		1929942	2					
ANR	1930147	CallExpression	BAD_CAST ( ZSTR_VAL ( prefix . s ) )		1929942	0					
ANR	1930148	Callee	BAD_CAST		1929942	0					
ANR	1930149	Identifier	BAD_CAST		1929942	0					
ANR	1930150	ArgumentList	ZSTR_VAL ( prefix . s )		1929942	1					
ANR	1930151	Argument	ZSTR_VAL ( prefix . s )		1929942	0					
ANR	1930152	CallExpression	ZSTR_VAL ( prefix . s )		1929942	0					
ANR	1930153	Callee	ZSTR_VAL		1929942	0					
ANR	1930154	Identifier	ZSTR_VAL		1929942	0					
ANR	1930155	ArgumentList	prefix . s		1929942	1					
ANR	1930156	Argument	prefix . s		1929942	0					
ANR	1930157	MemberAccess	prefix . s		1929942	0					
ANR	1930158	Identifier	prefix		1929942	0					
ANR	1930159	Identifier	s		1929942	1					
ANR	1930160	Identifier	NULL		1929942	1					
ANR	1930161	CompoundStatement		25:76:716:716	1929942	1					
ANR	1930162	BreakStatement	break ;	3411:5:106301:106306	1929942	0	True				
ANR	1930163	ExpressionStatement	smart_str_free ( & prefix )	3413:4:106318:106341	1929942	4	True				
ANR	1930164	CallExpression	smart_str_free ( & prefix )		1929942	0					
ANR	1930165	Callee	smart_str_free		1929942	0					
ANR	1930166	Identifier	smart_str_free		1929942	0					
ANR	1930167	ArgumentList	& prefix		1929942	1					
ANR	1930168	Argument	& prefix		1929942	0					
ANR	1930169	UnaryOperationExpression	& prefix		1929942	0					
ANR	1930170	UnaryOperator	&		1929942	0					
ANR	1930171	Identifier	prefix		1929942	1					
ANR	1930172	ExpressionStatement	prefix . s = NULL	3414:4:106347:106362	1929942	5	True				
ANR	1930173	AssignmentExpression	prefix . s = NULL		1929942	0		=			
ANR	1930174	MemberAccess	prefix . s		1929942	0					
ANR	1930175	Identifier	prefix		1929942	0					
ANR	1930176	Identifier	s		1929942	1					
ANR	1930177	Identifier	NULL		1929942	1					
ANR	1930178	ExpressionStatement	num = ++ SOAP_GLOBAL ( cur_uniq_ns )	3415:4:106368:106400	1929942	6	True				
ANR	1930179	AssignmentExpression	num = ++ SOAP_GLOBAL ( cur_uniq_ns )		1929942	0		=			
ANR	1930180	Identifier	num		1929942	0					
ANR	1930181	UnaryExpression	++ SOAP_GLOBAL ( cur_uniq_ns )		1929942	1					
ANR	1930182	IncDec	++		1929942	0					
ANR	1930183	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1929942	1					
ANR	1930184	Callee	SOAP_GLOBAL		1929942	0					
ANR	1930185	Identifier	SOAP_GLOBAL		1929942	0					
ANR	1930186	ArgumentList	cur_uniq_ns		1929942	1					
ANR	1930187	Argument	cur_uniq_ns		1929942	0					
ANR	1930188	Identifier	cur_uniq_ns		1929942	0					
ANR	1930189	ExpressionStatement	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , BAD_CAST ( prefix . s ? ZSTR_VAL ( prefix . s ) : """" ) )"	3418:3:106411:106508	1929942	3	True				
ANR	1930190	AssignmentExpression	"xmlns = xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , BAD_CAST ( prefix . s ? ZSTR_VAL ( prefix . s ) : """" ) )"		1929942	0		=			
ANR	1930191	Identifier	xmlns		1929942	0					
ANR	1930192	CallExpression	"xmlNewNs ( node -> doc -> children , BAD_CAST ( ns ) , BAD_CAST ( prefix . s ? ZSTR_VAL ( prefix . s ) : """" ) )"		1929942	1					
ANR	1930193	Callee	xmlNewNs		1929942	0					
ANR	1930194	Identifier	xmlNewNs		1929942	0					
ANR	1930195	ArgumentList	node -> doc -> children		1929942	1					
ANR	1930196	Argument	node -> doc -> children		1929942	0					
ANR	1930197	PtrMemberAccess	node -> doc -> children		1929942	0					
ANR	1930198	PtrMemberAccess	node -> doc		1929942	0					
ANR	1930199	Identifier	node		1929942	0					
ANR	1930200	Identifier	doc		1929942	1					
ANR	1930201	Identifier	children		1929942	1					
ANR	1930202	Argument	BAD_CAST ( ns )		1929942	1					
ANR	1930203	CallExpression	BAD_CAST ( ns )		1929942	0					
ANR	1930204	Callee	BAD_CAST		1929942	0					
ANR	1930205	Identifier	BAD_CAST		1929942	0					
ANR	1930206	ArgumentList	ns		1929942	1					
ANR	1930207	Argument	ns		1929942	0					
ANR	1930208	Identifier	ns		1929942	0					
ANR	1930209	Argument	"BAD_CAST ( prefix . s ? ZSTR_VAL ( prefix . s ) : """" )"		1929942	2					
ANR	1930210	CallExpression	"BAD_CAST ( prefix . s ? ZSTR_VAL ( prefix . s ) : """" )"		1929942	0					
ANR	1930211	Callee	BAD_CAST		1929942	0					
ANR	1930212	Identifier	BAD_CAST		1929942	0					
ANR	1930213	ArgumentList	"prefix . s ? ZSTR_VAL ( prefix . s ) : """""		1929942	1					
ANR	1930214	Argument	"prefix . s ? ZSTR_VAL ( prefix . s ) : """""		1929942	0					
ANR	1930215	ConditionalExpression	"prefix . s ? ZSTR_VAL ( prefix . s ) : """""		1929942	0					
ANR	1930216	Condition	prefix . s		1929942	0					
ANR	1930217	MemberAccess	prefix . s		1929942	0					
ANR	1930218	Identifier	prefix		1929942	0					
ANR	1930219	Identifier	s		1929942	1					
ANR	1930220	CallExpression	ZSTR_VAL ( prefix . s )		1929942	1					
ANR	1930221	Callee	ZSTR_VAL		1929942	0					
ANR	1930222	Identifier	ZSTR_VAL		1929942	0					
ANR	1930223	ArgumentList	prefix . s		1929942	1					
ANR	1930224	Argument	prefix . s		1929942	0					
ANR	1930225	MemberAccess	prefix . s		1929942	0					
ANR	1930226	Identifier	prefix		1929942	0					
ANR	1930227	Identifier	s		1929942	1					
ANR	1930228	PrimaryExpression	""""""		1929942	2					
ANR	1930229	ExpressionStatement	smart_str_free ( & prefix )	3419:3:106513:106536	1929942	4	True				
ANR	1930230	CallExpression	smart_str_free ( & prefix )		1929942	0					
ANR	1930231	Callee	smart_str_free		1929942	0					
ANR	1930232	Identifier	smart_str_free		1929942	0					
ANR	1930233	ArgumentList	& prefix		1929942	1					
ANR	1930234	Argument	& prefix		1929942	0					
ANR	1930235	UnaryOperationExpression	& prefix		1929942	0					
ANR	1930236	UnaryOperator	&		1929942	0					
ANR	1930237	Identifier	prefix		1929942	1					
ANR	1930238	ReturnStatement	return xmlns ;	3422:1:106546:106558	1929942	5	True				
ANR	1930239	Identifier	xmlns		1929942	0					
ANR	1930240	ReturnType	xmlNsPtr		1929942	1					
ANR	1930241	Identifier	encode_add_ns		1929942	2					
ANR	1930242	ParameterList	"xmlNodePtr node , const char * ns"		1929942	3					
ANR	1930243	Parameter	xmlNodePtr node	3385:23:105544:105558	1929942	0	True				
ANR	1930244	ParameterType	xmlNodePtr		1929942	0					
ANR	1930245	Identifier	node		1929942	1					
ANR	1930246	Parameter	const char * ns	3385:40:105561:105574	1929942	1	True				
ANR	1930247	ParameterType	const char *		1929942	0					
ANR	1930248	Identifier	ns		1929942	1					
ANR	1930249	CFGEntryNode	ENTRY		1929942		True				
ANR	1930250	CFGExitNode	EXIT		1929942		True				
ANR	1930251	Symbol	& prefix		1929942						
ANR	1930252	Symbol	ns		1929942						
ANR	1930253	Symbol	prefix		1929942						
ANR	1930254	Symbol	num		1929942						
ANR	1930255	Symbol	* xmlns		1929942						
ANR	1930256	Symbol	strlen		1929942						
ANR	1930257	Symbol	xmlns		1929942						
ANR	1930258	Symbol	zend_hash_str_find_ptr		1929942						
ANR	1930259	Symbol	* node		1929942						
ANR	1930260	Symbol	* node -> doc		1929942						
ANR	1930261	Symbol	node -> doc		1929942						
ANR	1930262	Symbol	NULL		1929942						
ANR	1930263	Symbol	xmlSearchNsPrefixByHref		1929942						
ANR	1930264	Symbol	defEncNs		1929942						
ANR	1930265	Symbol	xmlns -> prefix		1929942						
ANR	1930266	Symbol	SOAP_GLOBAL		1929942						
ANR	1930267	Symbol	xmlSearchNs		1929942						
ANR	1930268	Symbol	ZSTR_VAL		1929942						
ANR	1930269	Symbol	node		1929942						
ANR	1930270	Symbol	cur_uniq_ns		1929942						
ANR	1930271	Symbol	xmlSearchNsByHref		1929942						
ANR	1930272	Symbol	xmlNewNs		1929942						
ANR	1930273	Symbol	* * node		1929942						
ANR	1930274	Symbol	prefix . s		1929942						
ANR	1930275	Symbol	& SOAP_GLOBAL		1929942						
ANR	1930276	Symbol	BAD_CAST		1929942						
ANR	1930277	Symbol	node -> doc -> children		1929942						
ANR	1930278	Function	set_ns_prop	3425:0:106563:106716							
ANR	1930279	FunctionDef	"set_ns_prop (xmlNodePtr node , char * ns , char * name , char * val)"		1930278	0					
ANR	1930280	CompoundStatement		3426:0:106637:106716	1930278	0					
ANR	1930281	ExpressionStatement	"xmlSetNsProp ( node , encode_add_ns ( node , ns ) , BAD_CAST ( name ) , BAD_CAST ( val ) )"	3427:1:106640:106714	1930278	0	True				
ANR	1930282	CallExpression	"xmlSetNsProp ( node , encode_add_ns ( node , ns ) , BAD_CAST ( name ) , BAD_CAST ( val ) )"		1930278	0					
ANR	1930283	Callee	xmlSetNsProp		1930278	0					
ANR	1930284	Identifier	xmlSetNsProp		1930278	0					
ANR	1930285	ArgumentList	node		1930278	1					
ANR	1930286	Argument	node		1930278	0					
ANR	1930287	Identifier	node		1930278	0					
ANR	1930288	Argument	"encode_add_ns ( node , ns )"		1930278	1					
ANR	1930289	CallExpression	"encode_add_ns ( node , ns )"		1930278	0					
ANR	1930290	Callee	encode_add_ns		1930278	0					
ANR	1930291	Identifier	encode_add_ns		1930278	0					
ANR	1930292	ArgumentList	node		1930278	1					
ANR	1930293	Argument	node		1930278	0					
ANR	1930294	Identifier	node		1930278	0					
ANR	1930295	Argument	ns		1930278	1					
ANR	1930296	Identifier	ns		1930278	0					
ANR	1930297	Argument	BAD_CAST ( name )		1930278	2					
ANR	1930298	CallExpression	BAD_CAST ( name )		1930278	0					
ANR	1930299	Callee	BAD_CAST		1930278	0					
ANR	1930300	Identifier	BAD_CAST		1930278	0					
ANR	1930301	ArgumentList	name		1930278	1					
ANR	1930302	Argument	name		1930278	0					
ANR	1930303	Identifier	name		1930278	0					
ANR	1930304	Argument	BAD_CAST ( val )		1930278	3					
ANR	1930305	CallExpression	BAD_CAST ( val )		1930278	0					
ANR	1930306	Callee	BAD_CAST		1930278	0					
ANR	1930307	Identifier	BAD_CAST		1930278	0					
ANR	1930308	ArgumentList	val		1930278	1					
ANR	1930309	Argument	val		1930278	0					
ANR	1930310	Identifier	val		1930278	0					
ANR	1930311	ReturnType	static void		1930278	1					
ANR	1930312	Identifier	set_ns_prop		1930278	2					
ANR	1930313	ParameterList	"xmlNodePtr node , char * ns , char * name , char * val"		1930278	3					
ANR	1930314	Parameter	xmlNodePtr node	3425:24:106587:106601	1930278	0	True				
ANR	1930315	ParameterType	xmlNodePtr		1930278	0					
ANR	1930316	Identifier	node		1930278	1					
ANR	1930317	Parameter	char * ns	3425:41:106604:106611	1930278	1	True				
ANR	1930318	ParameterType	char *		1930278	0					
ANR	1930319	Identifier	ns		1930278	1					
ANR	1930320	Parameter	char * name	3425:51:106614:106623	1930278	2	True				
ANR	1930321	ParameterType	char *		1930278	0					
ANR	1930322	Identifier	name		1930278	1					
ANR	1930323	Parameter	char * val	3425:63:106626:106634	1930278	3	True				
ANR	1930324	ParameterType	char *		1930278	0					
ANR	1930325	Identifier	val		1930278	1					
ANR	1930326	CFGEntryNode	ENTRY		1930278		True				
ANR	1930327	CFGExitNode	EXIT		1930278		True				
ANR	1930328	Symbol	val		1930278						
ANR	1930329	Symbol	node		1930278						
ANR	1930330	Symbol	encode_add_ns		1930278						
ANR	1930331	Symbol	ns		1930278						
ANR	1930332	Symbol	name		1930278						
ANR	1930333	Symbol	BAD_CAST		1930278						
ANR	1930334	Function	set_xsi_nil	3430:0:106719:106812							
ANR	1930335	FunctionDef	set_xsi_nil (xmlNodePtr node)		1930334	0					
ANR	1930336	CompoundStatement		3431:0:106760:106812	1930334	0					
ANR	1930337	ExpressionStatement	"set_ns_prop ( node , XSI_NAMESPACE , ""nil"" , ""true"" )"	3432:1:106763:106810	1930334	0	True				
ANR	1930338	CallExpression	"set_ns_prop ( node , XSI_NAMESPACE , ""nil"" , ""true"" )"		1930334	0					
ANR	1930339	Callee	set_ns_prop		1930334	0					
ANR	1930340	Identifier	set_ns_prop		1930334	0					
ANR	1930341	ArgumentList	node		1930334	1					
ANR	1930342	Argument	node		1930334	0					
ANR	1930343	Identifier	node		1930334	0					
ANR	1930344	Argument	XSI_NAMESPACE		1930334	1					
ANR	1930345	Identifier	XSI_NAMESPACE		1930334	0					
ANR	1930346	Argument	"""nil"""		1930334	2					
ANR	1930347	PrimaryExpression	"""nil"""		1930334	0					
ANR	1930348	Argument	"""true"""		1930334	3					
ANR	1930349	PrimaryExpression	"""true"""		1930334	0					
ANR	1930350	ReturnType	static void		1930334	1					
ANR	1930351	Identifier	set_xsi_nil		1930334	2					
ANR	1930352	ParameterList	xmlNodePtr node		1930334	3					
ANR	1930353	Parameter	xmlNodePtr node	3430:24:106743:106757	1930334	0	True				
ANR	1930354	ParameterType	xmlNodePtr		1930334	0					
ANR	1930355	Identifier	node		1930334	1					
ANR	1930356	CFGEntryNode	ENTRY		1930334		True				
ANR	1930357	CFGExitNode	EXIT		1930334		True				
ANR	1930358	Symbol	node		1930334						
ANR	1930359	Symbol	XSI_NAMESPACE		1930334						
ANR	1930360	Function	set_xsi_type	3435:0:106815:106920							
ANR	1930361	FunctionDef	"set_xsi_type (xmlNodePtr node , char * type)"		1930360	0					
ANR	1930362	CompoundStatement		3436:0:106869:106920	1930360	0					
ANR	1930363	ExpressionStatement	"set_ns_prop ( node , XSI_NAMESPACE , ""type"" , type )"	3437:1:106872:106918	1930360	0	True				
ANR	1930364	CallExpression	"set_ns_prop ( node , XSI_NAMESPACE , ""type"" , type )"		1930360	0					
ANR	1930365	Callee	set_ns_prop		1930360	0					
ANR	1930366	Identifier	set_ns_prop		1930360	0					
ANR	1930367	ArgumentList	node		1930360	1					
ANR	1930368	Argument	node		1930360	0					
ANR	1930369	Identifier	node		1930360	0					
ANR	1930370	Argument	XSI_NAMESPACE		1930360	1					
ANR	1930371	Identifier	XSI_NAMESPACE		1930360	0					
ANR	1930372	Argument	"""type"""		1930360	2					
ANR	1930373	PrimaryExpression	"""type"""		1930360	0					
ANR	1930374	Argument	type		1930360	3					
ANR	1930375	Identifier	type		1930360	0					
ANR	1930376	ReturnType	static void		1930360	1					
ANR	1930377	Identifier	set_xsi_type		1930360	2					
ANR	1930378	ParameterList	"xmlNodePtr node , char * type"		1930360	3					
ANR	1930379	Parameter	xmlNodePtr node	3435:25:106840:106854	1930360	0	True				
ANR	1930380	ParameterType	xmlNodePtr		1930360	0					
ANR	1930381	Identifier	node		1930360	1					
ANR	1930382	Parameter	char * type	3435:42:106857:106866	1930360	1	True				
ANR	1930383	ParameterType	char *		1930360	0					
ANR	1930384	Identifier	type		1930360	1					
ANR	1930385	CFGEntryNode	ENTRY		1930360		True				
ANR	1930386	CFGExitNode	EXIT		1930360		True				
ANR	1930387	Symbol	node		1930360						
ANR	1930388	Symbol	type		1930360						
ANR	1930389	Symbol	XSI_NAMESPACE		1930360						
ANR	1930390	Function	encode_reset_ns	3440:0:106923:107206							
ANR	1930391	FunctionDef	encode_reset_ns ()		1930390	0					
ANR	1930392	CompoundStatement		3441:0:106946:107206	1930390	0					
ANR	1930393	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ns ) = 0	3442:1:106949:106977	1930390	0	True				
ANR	1930394	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ns ) = 0		1930390	0		=			
ANR	1930395	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1930390	0					
ANR	1930396	Callee	SOAP_GLOBAL		1930390	0					
ANR	1930397	Identifier	SOAP_GLOBAL		1930390	0					
ANR	1930398	ArgumentList	cur_uniq_ns		1930390	1					
ANR	1930399	Argument	cur_uniq_ns		1930390	0					
ANR	1930400	Identifier	cur_uniq_ns		1930390	0					
ANR	1930401	PrimaryExpression	0		1930390	1					
ANR	1930402	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) = 0	3443:1:106980:107009	1930390	1	True				
ANR	1930403	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ref ) = 0		1930390	0		=			
ANR	1930404	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1930390	0					
ANR	1930405	Callee	SOAP_GLOBAL		1930390	0					
ANR	1930406	Identifier	SOAP_GLOBAL		1930390	0					
ANR	1930407	ArgumentList	cur_uniq_ref		1930390	1					
ANR	1930408	Argument	cur_uniq_ref		1930390	0					
ANR	1930409	Identifier	cur_uniq_ref		1930390	0					
ANR	1930410	PrimaryExpression	0		1930390	1					
ANR	1930411	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1930390	2					
ANR	1930412	Condition	SOAP_GLOBAL ( ref_map )	3444:5:107016:107035	1930390	0	True				
ANR	1930413	CallExpression	SOAP_GLOBAL ( ref_map )		1930390	0					
ANR	1930414	Callee	SOAP_GLOBAL		1930390	0					
ANR	1930415	Identifier	SOAP_GLOBAL		1930390	0					
ANR	1930416	ArgumentList	ref_map		1930390	1					
ANR	1930417	Argument	ref_map		1930390	0					
ANR	1930418	Identifier	ref_map		1930390	0					
ANR	1930419	CompoundStatement		4:27:91:91	1930390	1					
ANR	1930420	ExpressionStatement	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )	3445:2:107042:107081	1930390	0	True				
ANR	1930421	CallExpression	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )		1930390	0					
ANR	1930422	Callee	zend_hash_destroy		1930390	0					
ANR	1930423	Identifier	zend_hash_destroy		1930390	0					
ANR	1930424	ArgumentList	SOAP_GLOBAL ( ref_map )		1930390	1					
ANR	1930425	Argument	SOAP_GLOBAL ( ref_map )		1930390	0					
ANR	1930426	CallExpression	SOAP_GLOBAL ( ref_map )		1930390	0					
ANR	1930427	Callee	SOAP_GLOBAL		1930390	0					
ANR	1930428	Identifier	SOAP_GLOBAL		1930390	0					
ANR	1930429	ArgumentList	ref_map		1930390	1					
ANR	1930430	Argument	ref_map		1930390	0					
ANR	1930431	Identifier	ref_map		1930390	0					
ANR	1930432	ElseStatement	else		1930390	0					
ANR	1930433	CompoundStatement		6:8:144:144	1930390	0					
ANR	1930434	ExpressionStatement	SOAP_GLOBAL ( ref_map ) = emalloc ( sizeof ( HashTable ) )	3447:2:107095:107144	1930390	0	True				
ANR	1930435	AssignmentExpression	SOAP_GLOBAL ( ref_map ) = emalloc ( sizeof ( HashTable ) )		1930390	0		=			
ANR	1930436	CallExpression	SOAP_GLOBAL ( ref_map )		1930390	0					
ANR	1930437	Callee	SOAP_GLOBAL		1930390	0					
ANR	1930438	Identifier	SOAP_GLOBAL		1930390	0					
ANR	1930439	ArgumentList	ref_map		1930390	1					
ANR	1930440	Argument	ref_map		1930390	0					
ANR	1930441	Identifier	ref_map		1930390	0					
ANR	1930442	CallExpression	emalloc ( sizeof ( HashTable ) )		1930390	1					
ANR	1930443	Callee	emalloc		1930390	0					
ANR	1930444	Identifier	emalloc		1930390	0					
ANR	1930445	ArgumentList	sizeof ( HashTable )		1930390	1					
ANR	1930446	Argument	sizeof ( HashTable )		1930390	0					
ANR	1930447	SizeofExpression	sizeof ( HashTable )		1930390	0					
ANR	1930448	Sizeof	sizeof		1930390	0					
ANR	1930449	SizeofOperand	HashTable		1930390	1					
ANR	1930450	ExpressionStatement	"zend_hash_init ( SOAP_GLOBAL ( ref_map ) , 0 , NULL , NULL , 0 )"	3449:1:107150:107204	1930390	3	True				
ANR	1930451	CallExpression	"zend_hash_init ( SOAP_GLOBAL ( ref_map ) , 0 , NULL , NULL , 0 )"		1930390	0					
ANR	1930452	Callee	zend_hash_init		1930390	0					
ANR	1930453	Identifier	zend_hash_init		1930390	0					
ANR	1930454	ArgumentList	SOAP_GLOBAL ( ref_map )		1930390	1					
ANR	1930455	Argument	SOAP_GLOBAL ( ref_map )		1930390	0					
ANR	1930456	CallExpression	SOAP_GLOBAL ( ref_map )		1930390	0					
ANR	1930457	Callee	SOAP_GLOBAL		1930390	0					
ANR	1930458	Identifier	SOAP_GLOBAL		1930390	0					
ANR	1930459	ArgumentList	ref_map		1930390	1					
ANR	1930460	Argument	ref_map		1930390	0					
ANR	1930461	Identifier	ref_map		1930390	0					
ANR	1930462	Argument	0		1930390	1					
ANR	1930463	PrimaryExpression	0		1930390	0					
ANR	1930464	Argument	NULL		1930390	2					
ANR	1930465	Identifier	NULL		1930390	0					
ANR	1930466	Argument	NULL		1930390	3					
ANR	1930467	Identifier	NULL		1930390	0					
ANR	1930468	Argument	0		1930390	4					
ANR	1930469	PrimaryExpression	0		1930390	0					
ANR	1930470	ReturnType	void		1930390	1					
ANR	1930471	Identifier	encode_reset_ns		1930390	2					
ANR	1930472	ParameterList			1930390	3					
ANR	1930473	CFGEntryNode	ENTRY		1930390		True				
ANR	1930474	CFGExitNode	EXIT		1930390		True				
ANR	1930475	Symbol	cur_uniq_ns		1930390						
ANR	1930476	Symbol	emalloc		1930390						
ANR	1930477	Symbol	NULL		1930390						
ANR	1930478	Symbol	ref_map		1930390						
ANR	1930479	Symbol	SOAP_GLOBAL		1930390						
ANR	1930480	Symbol	cur_uniq_ref		1930390						
ANR	1930481	Function	encode_finish	3452:0:107209:107432							
ANR	1930482	FunctionDef	encode_finish ()		1930481	0					
ANR	1930483	CompoundStatement		3453:0:107230:107432	1930481	0					
ANR	1930484	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ns ) = 0	3454:1:107233:107261	1930481	0	True				
ANR	1930485	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ns ) = 0		1930481	0		=			
ANR	1930486	CallExpression	SOAP_GLOBAL ( cur_uniq_ns )		1930481	0					
ANR	1930487	Callee	SOAP_GLOBAL		1930481	0					
ANR	1930488	Identifier	SOAP_GLOBAL		1930481	0					
ANR	1930489	ArgumentList	cur_uniq_ns		1930481	1					
ANR	1930490	Argument	cur_uniq_ns		1930481	0					
ANR	1930491	Identifier	cur_uniq_ns		1930481	0					
ANR	1930492	PrimaryExpression	0		1930481	1					
ANR	1930493	ExpressionStatement	SOAP_GLOBAL ( cur_uniq_ref ) = 0	3455:1:107264:107293	1930481	1	True				
ANR	1930494	AssignmentExpression	SOAP_GLOBAL ( cur_uniq_ref ) = 0		1930481	0		=			
ANR	1930495	CallExpression	SOAP_GLOBAL ( cur_uniq_ref )		1930481	0					
ANR	1930496	Callee	SOAP_GLOBAL		1930481	0					
ANR	1930497	Identifier	SOAP_GLOBAL		1930481	0					
ANR	1930498	ArgumentList	cur_uniq_ref		1930481	1					
ANR	1930499	Argument	cur_uniq_ref		1930481	0					
ANR	1930500	Identifier	cur_uniq_ref		1930481	0					
ANR	1930501	PrimaryExpression	0		1930481	1					
ANR	1930502	IfStatement	if ( SOAP_GLOBAL ( ref_map ) )		1930481	2					
ANR	1930503	Condition	SOAP_GLOBAL ( ref_map )	3456:5:107300:107319	1930481	0	True				
ANR	1930504	CallExpression	SOAP_GLOBAL ( ref_map )		1930481	0					
ANR	1930505	Callee	SOAP_GLOBAL		1930481	0					
ANR	1930506	Identifier	SOAP_GLOBAL		1930481	0					
ANR	1930507	ArgumentList	ref_map		1930481	1					
ANR	1930508	Argument	ref_map		1930481	0					
ANR	1930509	Identifier	ref_map		1930481	0					
ANR	1930510	CompoundStatement		4:27:91:91	1930481	1					
ANR	1930511	ExpressionStatement	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )	3457:2:107326:107365	1930481	0	True				
ANR	1930512	CallExpression	zend_hash_destroy ( SOAP_GLOBAL ( ref_map ) )		1930481	0					
ANR	1930513	Callee	zend_hash_destroy		1930481	0					
ANR	1930514	Identifier	zend_hash_destroy		1930481	0					
ANR	1930515	ArgumentList	SOAP_GLOBAL ( ref_map )		1930481	1					
ANR	1930516	Argument	SOAP_GLOBAL ( ref_map )		1930481	0					
ANR	1930517	CallExpression	SOAP_GLOBAL ( ref_map )		1930481	0					
ANR	1930518	Callee	SOAP_GLOBAL		1930481	0					
ANR	1930519	Identifier	SOAP_GLOBAL		1930481	0					
ANR	1930520	ArgumentList	ref_map		1930481	1					
ANR	1930521	Argument	ref_map		1930481	0					
ANR	1930522	Identifier	ref_map		1930481	0					
ANR	1930523	ExpressionStatement	efree ( SOAP_GLOBAL ( ref_map ) )	3458:2:107369:107396	1930481	1	True				
ANR	1930524	CallExpression	efree ( SOAP_GLOBAL ( ref_map ) )		1930481	0					
ANR	1930525	Callee	efree		1930481	0					
ANR	1930526	Identifier	efree		1930481	0					
ANR	1930527	ArgumentList	SOAP_GLOBAL ( ref_map )		1930481	1					
ANR	1930528	Argument	SOAP_GLOBAL ( ref_map )		1930481	0					
ANR	1930529	CallExpression	SOAP_GLOBAL ( ref_map )		1930481	0					
ANR	1930530	Callee	SOAP_GLOBAL		1930481	0					
ANR	1930531	Identifier	SOAP_GLOBAL		1930481	0					
ANR	1930532	ArgumentList	ref_map		1930481	1					
ANR	1930533	Argument	ref_map		1930481	0					
ANR	1930534	Identifier	ref_map		1930481	0					
ANR	1930535	ExpressionStatement	SOAP_GLOBAL ( ref_map ) = NULL	3459:2:107400:107427	1930481	2	True				
ANR	1930536	AssignmentExpression	SOAP_GLOBAL ( ref_map ) = NULL		1930481	0		=			
ANR	1930537	CallExpression	SOAP_GLOBAL ( ref_map )		1930481	0					
ANR	1930538	Callee	SOAP_GLOBAL		1930481	0					
ANR	1930539	Identifier	SOAP_GLOBAL		1930481	0					
ANR	1930540	ArgumentList	ref_map		1930481	1					
ANR	1930541	Argument	ref_map		1930481	0					
ANR	1930542	Identifier	ref_map		1930481	0					
ANR	1930543	Identifier	NULL		1930481	1					
ANR	1930544	ReturnType	void		1930481	1					
ANR	1930545	Identifier	encode_finish		1930481	2					
ANR	1930546	ParameterList			1930481	3					
ANR	1930547	CFGEntryNode	ENTRY		1930481		True				
ANR	1930548	CFGExitNode	EXIT		1930481		True				
ANR	1930549	Symbol	cur_uniq_ns		1930481						
ANR	1930550	Symbol	NULL		1930481						
ANR	1930551	Symbol	ref_map		1930481						
ANR	1930552	Symbol	SOAP_GLOBAL		1930481						
ANR	1930553	Symbol	cur_uniq_ref		1930481						
ANR	1930554	Function	get_conversion	3463:0:107435:107676							
ANR	1930555	FunctionDef	get_conversion (int encode)		1930554	0					
ANR	1930556	CompoundStatement		3464:0:107472:107676	1930554	0					
ANR	1930557	IdentifierDeclStatement	encodePtr enc ;	3465:1:107475:107488	1930554	0	True				
ANR	1930558	IdentifierDecl	enc		1930554	0					
ANR	1930559	IdentifierDeclType	encodePtr		1930554	0					
ANR	1930560	Identifier	enc		1930554	1					
ANR	1930561	IfStatement	"if ( ( enc = zend_hash_index_find_ptr ( & SOAP_GLOBAL ( defEncIndex ) , encode ) ) == NULL )"		1930554	1					
ANR	1930562	Condition	"( enc = zend_hash_index_find_ptr ( & SOAP_GLOBAL ( defEncIndex ) , encode ) ) == NULL"	3467:5:107496:107570	1930554	0	True				
ANR	1930563	EqualityExpression	"( enc = zend_hash_index_find_ptr ( & SOAP_GLOBAL ( defEncIndex ) , encode ) ) == NULL"		1930554	0		==			
ANR	1930564	AssignmentExpression	"enc = zend_hash_index_find_ptr ( & SOAP_GLOBAL ( defEncIndex ) , encode )"		1930554	0		=			
ANR	1930565	Identifier	enc		1930554	0					
ANR	1930566	CallExpression	"zend_hash_index_find_ptr ( & SOAP_GLOBAL ( defEncIndex ) , encode )"		1930554	1					
ANR	1930567	Callee	zend_hash_index_find_ptr		1930554	0					
ANR	1930568	Identifier	zend_hash_index_find_ptr		1930554	0					
ANR	1930569	ArgumentList	& SOAP_GLOBAL ( defEncIndex )		1930554	1					
ANR	1930570	Argument	& SOAP_GLOBAL ( defEncIndex )		1930554	0					
ANR	1930571	UnaryOperationExpression	& SOAP_GLOBAL ( defEncIndex )		1930554	0					
ANR	1930572	UnaryOperator	&		1930554	0					
ANR	1930573	CallExpression	SOAP_GLOBAL ( defEncIndex )		1930554	1					
ANR	1930574	Callee	SOAP_GLOBAL		1930554	0					
ANR	1930575	Identifier	SOAP_GLOBAL		1930554	0					
ANR	1930576	ArgumentList	defEncIndex		1930554	1					
ANR	1930577	Argument	defEncIndex		1930554	0					
ANR	1930578	Identifier	defEncIndex		1930554	0					
ANR	1930579	Argument	encode		1930554	1					
ANR	1930580	Identifier	encode		1930554	0					
ANR	1930581	Identifier	NULL		1930554	1					
ANR	1930582	CompoundStatement		4:82:100:100	1930554	1					
ANR	1930583	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: Cannot find encoding"" )"	3468:2:107577:107632	1930554	0	True				
ANR	1930584	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: Cannot find encoding"" )"		1930554	0					
ANR	1930585	Callee	soap_error0		1930554	0					
ANR	1930586	Identifier	soap_error0		1930554	0					
ANR	1930587	ArgumentList	E_ERROR		1930554	1					
ANR	1930588	Argument	E_ERROR		1930554	0					
ANR	1930589	Identifier	E_ERROR		1930554	0					
ANR	1930590	Argument	"""Encoding: Cannot find encoding"""		1930554	1					
ANR	1930591	PrimaryExpression	"""Encoding: Cannot find encoding"""		1930554	0					
ANR	1930592	ReturnStatement	return NULL ;	3469:2:107636:107647	1930554	1	True				
ANR	1930593	Identifier	NULL		1930554	0					
ANR	1930594	ElseStatement	else		1930554	0					
ANR	1930595	CompoundStatement		7:8:184:184	1930554	0					
ANR	1930596	ReturnStatement	return enc ;	3471:2:107661:107671	1930554	0	True				
ANR	1930597	Identifier	enc		1930554	0					
ANR	1930598	ReturnType	encodePtr		1930554	1					
ANR	1930599	Identifier	get_conversion		1930554	2					
ANR	1930600	ParameterList	int encode		1930554	3					
ANR	1930601	Parameter	int encode	3463:25:107460:107469	1930554	0	True				
ANR	1930602	ParameterType	int		1930554	0					
ANR	1930603	Identifier	encode		1930554	1					
ANR	1930604	CFGEntryNode	ENTRY		1930554		True				
ANR	1930605	CFGExitNode	EXIT		1930554		True				
ANR	1930606	Symbol	encode		1930554						
ANR	1930607	Symbol	NULL		1930554						
ANR	1930608	Symbol	E_ERROR		1930554						
ANR	1930609	Symbol	defEncIndex		1930554						
ANR	1930610	Symbol	zend_hash_index_find_ptr		1930554						
ANR	1930611	Symbol	enc		1930554						
ANR	1930612	Symbol	& SOAP_GLOBAL		1930554						
ANR	1930613	Function	is_map	3475:0:107679:107916							
ANR	1930614	FunctionDef	is_map (zval * array)		1930613	0					
ANR	1930615	CompoundStatement		3476:0:107710:107916	1930613	0					
ANR	1930616	IdentifierDeclStatement	zend_ulong index ;	3477:1:107713:107729	1930613	0	True				
ANR	1930617	IdentifierDecl	index		1930613	0					
ANR	1930618	IdentifierDeclType	zend_ulong		1930613	0					
ANR	1930619	Identifier	index		1930613	1					
ANR	1930620	IdentifierDeclStatement	zend_string * key ;	3478:1:107732:107748	1930613	1	True				
ANR	1930621	IdentifierDecl	* key		1930613	0					
ANR	1930622	IdentifierDeclType	zend_string *		1930613	0					
ANR	1930623	Identifier	key		1930613	1					
ANR	1930624	IdentifierDeclStatement	int i = 0 ;	3479:1:107751:107760	1930613	2	True				
ANR	1930625	IdentifierDecl	i = 0		1930613	0					
ANR	1930626	IdentifierDeclType	int		1930613	0					
ANR	1930627	Identifier	i		1930613	1					
ANR	1930628	AssignmentExpression	i = 0		1930613	2		=			
ANR	1930629	Identifier	i		1930613	0					
ANR	1930630	PrimaryExpression	0		1930613	1					
ANR	1930631	Statement	ZEND_HASH_FOREACH_KEY	3481:1:107764:107784	1930613	3	True				
ANR	1930632	Statement	(	3481:22:107785:107785	1930613	4	True				
ANR	1930633	Statement	Z_ARRVAL_P	3481:23:107786:107795	1930613	5	True				
ANR	1930634	Statement	(	3481:33:107796:107796	1930613	6	True				
ANR	1930635	Statement	array	3481:34:107797:107801	1930613	7	True				
ANR	1930636	Statement	)	3481:39:107802:107802	1930613	8	True				
ANR	1930637	Statement	","	3481:40:107803:107803	1930613	9	True				
ANR	1930638	Statement	index	3481:42:107805:107809	1930613	10	True				
ANR	1930639	Statement	","	3481:47:107810:107810	1930613	11	True				
ANR	1930640	Statement	key	3481:49:107812:107814	1930613	12	True				
ANR	1930641	Statement	)	3481:52:107815:107815	1930613	13	True				
ANR	1930642	CompoundStatement		6:54:106:106	1930613	14					
ANR	1930643	IfStatement	if ( key || index != i )		1930613	0					
ANR	1930644	Condition	key || index != i	3482:6:107825:107841	1930613	0	True				
ANR	1930645	OrExpression	key || index != i		1930613	0		||			
ANR	1930646	Identifier	key		1930613	0					
ANR	1930647	EqualityExpression	index != i		1930613	1		!=			
ANR	1930648	Identifier	index		1930613	0					
ANR	1930649	Identifier	i		1930613	1					
ANR	1930650	CompoundStatement		7:25:133:133	1930613	1					
ANR	1930651	ReturnStatement	return TRUE ;	3483:3:107849:107860	1930613	0	True				
ANR	1930652	Identifier	TRUE		1930613	0					
ANR	1930653	ExpressionStatement	i ++	3485:2:107868:107871	1930613	1	True				
ANR	1930654	PostIncDecOperationExpression	i ++		1930613	0					
ANR	1930655	Identifier	i		1930613	0					
ANR	1930656	IncDec	++		1930613	1					
ANR	1930657	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3486:3:107876:107899	1930613	15	True				
ANR	1930658	CallExpression	ZEND_HASH_FOREACH_END ( )		1930613	0					
ANR	1930659	Callee	ZEND_HASH_FOREACH_END		1930613	0					
ANR	1930660	Identifier	ZEND_HASH_FOREACH_END		1930613	0					
ANR	1930661	ArgumentList			1930613	1					
ANR	1930662	ReturnStatement	return FALSE ;	3487:1:107902:107914	1930613	16	True				
ANR	1930663	Identifier	FALSE		1930613	0					
ANR	1930664	ReturnType	static int		1930613	1					
ANR	1930665	Identifier	is_map		1930613	2					
ANR	1930666	ParameterList	zval * array		1930613	3					
ANR	1930667	Parameter	zval * array	3475:18:107697:107707	1930613	0	True				
ANR	1930668	ParameterType	zval *		1930613	0					
ANR	1930669	Identifier	array		1930613	1					
ANR	1930670	CFGEntryNode	ENTRY		1930613		True				
ANR	1930671	CFGExitNode	EXIT		1930613		True				
ANR	1930672	Symbol	array		1930613						
ANR	1930673	Symbol	index		1930613						
ANR	1930674	Symbol	i		1930613						
ANR	1930675	Symbol	TRUE		1930613						
ANR	1930676	Symbol	FALSE		1930613						
ANR	1930677	Symbol	key		1930613						
ANR	1930678	Function	get_array_type	3490:0:107919:110746							
ANR	1930679	FunctionDef	"get_array_type (xmlNodePtr node , zval * array , smart_str * type)"		1930678	0					
ANR	1930680	CompoundStatement		3491:0:107998:110746	1930678	0					
ANR	1930681	IdentifierDeclStatement	HashTable * ht ;	3492:1:108001:108014	1930678	0	True				
ANR	1930682	IdentifierDecl	* ht		1930678	0					
ANR	1930683	IdentifierDeclType	HashTable *		1930678	0					
ANR	1930684	Identifier	ht		1930678	1					
ANR	1930685	IdentifierDeclStatement	"int i , cur_type , prev_type , different ;"	3493:1:108017:108054	1930678	1	True				
ANR	1930686	IdentifierDecl	i		1930678	0					
ANR	1930687	IdentifierDeclType	int		1930678	0					
ANR	1930688	Identifier	i		1930678	1					
ANR	1930689	IdentifierDecl	cur_type		1930678	1					
ANR	1930690	IdentifierDeclType	int		1930678	0					
ANR	1930691	Identifier	cur_type		1930678	1					
ANR	1930692	IdentifierDecl	prev_type		1930678	2					
ANR	1930693	IdentifierDeclType	int		1930678	0					
ANR	1930694	Identifier	prev_type		1930678	1					
ANR	1930695	IdentifierDecl	different		1930678	3					
ANR	1930696	IdentifierDeclType	int		1930678	0					
ANR	1930697	Identifier	different		1930678	1					
ANR	1930698	IdentifierDeclStatement	zval * tmp ;	3494:1:108057:108066	1930678	2	True				
ANR	1930699	IdentifierDecl	* tmp		1930678	0					
ANR	1930700	IdentifierDeclType	zval *		1930678	0					
ANR	1930701	Identifier	tmp		1930678	1					
ANR	1930702	IdentifierDeclStatement	"char * prev_stype = NULL , * cur_stype = NULL , * prev_ns = NULL , * cur_ns = NULL ;"	3495:1:108069:108144	1930678	3	True				
ANR	1930703	IdentifierDecl	* prev_stype = NULL		1930678	0					
ANR	1930704	IdentifierDeclType	char *		1930678	0					
ANR	1930705	Identifier	prev_stype		1930678	1					
ANR	1930706	AssignmentExpression	* prev_stype = NULL		1930678	2		=			
ANR	1930707	Identifier	NULL		1930678	0					
ANR	1930708	Identifier	NULL		1930678	1					
ANR	1930709	IdentifierDecl	* cur_stype = NULL		1930678	1					
ANR	1930710	IdentifierDeclType	char *		1930678	0					
ANR	1930711	Identifier	cur_stype		1930678	1					
ANR	1930712	AssignmentExpression	* cur_stype = NULL		1930678	2		=			
ANR	1930713	Identifier	NULL		1930678	0					
ANR	1930714	Identifier	NULL		1930678	1					
ANR	1930715	IdentifierDecl	* prev_ns = NULL		1930678	2					
ANR	1930716	IdentifierDeclType	char *		1930678	0					
ANR	1930717	Identifier	prev_ns		1930678	1					
ANR	1930718	AssignmentExpression	* prev_ns = NULL		1930678	2		=			
ANR	1930719	Identifier	NULL		1930678	0					
ANR	1930720	Identifier	NULL		1930678	1					
ANR	1930721	IdentifierDecl	* cur_ns = NULL		1930678	3					
ANR	1930722	IdentifierDeclType	char *		1930678	0					
ANR	1930723	Identifier	cur_ns		1930678	1					
ANR	1930724	AssignmentExpression	* cur_ns = NULL		1930678	2		=			
ANR	1930725	Identifier	NULL		1930678	0					
ANR	1930726	Identifier	NULL		1930678	1					
ANR	1930727	IfStatement	if ( ! array || Z_TYPE_P ( array ) != IS_ARRAY )		1930678	4					
ANR	1930728	Condition	! array || Z_TYPE_P ( array ) != IS_ARRAY	3497:5:108152:108188	1930678	0	True				
ANR	1930729	OrExpression	! array || Z_TYPE_P ( array ) != IS_ARRAY		1930678	0		||			
ANR	1930730	UnaryOperationExpression	! array		1930678	0					
ANR	1930731	UnaryOperator	!		1930678	0					
ANR	1930732	Identifier	array		1930678	1					
ANR	1930733	EqualityExpression	Z_TYPE_P ( array ) != IS_ARRAY		1930678	1		!=			
ANR	1930734	CallExpression	Z_TYPE_P ( array )		1930678	0					
ANR	1930735	Callee	Z_TYPE_P		1930678	0					
ANR	1930736	Identifier	Z_TYPE_P		1930678	0					
ANR	1930737	ArgumentList	array		1930678	1					
ANR	1930738	Argument	array		1930678	0					
ANR	1930739	Identifier	array		1930678	0					
ANR	1930740	Identifier	IS_ARRAY		1930678	1					
ANR	1930741	CompoundStatement		7:44:192:192	1930678	1					
ANR	1930742	ExpressionStatement	"smart_str_appendl ( type , ""xsd:anyType"" , sizeof ( ""xsd:anyType"" ) - 1 )"	3498:2:108195:108258	1930678	0	True				
ANR	1930743	CallExpression	"smart_str_appendl ( type , ""xsd:anyType"" , sizeof ( ""xsd:anyType"" ) - 1 )"		1930678	0					
ANR	1930744	Callee	smart_str_appendl		1930678	0					
ANR	1930745	Identifier	smart_str_appendl		1930678	0					
ANR	1930746	ArgumentList	type		1930678	1					
ANR	1930747	Argument	type		1930678	0					
ANR	1930748	Identifier	type		1930678	0					
ANR	1930749	Argument	"""xsd:anyType"""		1930678	1					
ANR	1930750	PrimaryExpression	"""xsd:anyType"""		1930678	0					
ANR	1930751	Argument	"sizeof ( ""xsd:anyType"" ) - 1"		1930678	2					
ANR	1930752	AdditiveExpression	"sizeof ( ""xsd:anyType"" ) - 1"		1930678	0		-			
ANR	1930753	SizeofExpression	"sizeof ( ""xsd:anyType"" )"		1930678	0					
ANR	1930754	Sizeof	sizeof		1930678	0					
ANR	1930755	PrimaryExpression	"""xsd:anyType"""		1930678	1					
ANR	1930756	PrimaryExpression	1		1930678	1					
ANR	1930757	ReturnStatement	return get_conversion ( XSD_ANYTYPE ) ;	3499:2:108262:108296	1930678	1	True				
ANR	1930758	CallExpression	get_conversion ( XSD_ANYTYPE )		1930678	0					
ANR	1930759	Callee	get_conversion		1930678	0					
ANR	1930760	Identifier	get_conversion		1930678	0					
ANR	1930761	ArgumentList	XSD_ANYTYPE		1930678	1					
ANR	1930762	Argument	XSD_ANYTYPE		1930678	0					
ANR	1930763	Identifier	XSD_ANYTYPE		1930678	0					
ANR	1930764	ExpressionStatement	i = 0	3502:1:108303:108308	1930678	5	True				
ANR	1930765	AssignmentExpression	i = 0		1930678	0		=			
ANR	1930766	Identifier	i		1930678	0					
ANR	1930767	PrimaryExpression	0		1930678	1					
ANR	1930768	ExpressionStatement	different = FALSE	3503:1:108311:108328	1930678	6	True				
ANR	1930769	AssignmentExpression	different = FALSE		1930678	0		=			
ANR	1930770	Identifier	different		1930678	0					
ANR	1930771	Identifier	FALSE		1930678	1					
ANR	1930772	ExpressionStatement	cur_type = prev_type = 0	3504:1:108331:108355	1930678	7	True				
ANR	1930773	AssignmentExpression	cur_type = prev_type = 0		1930678	0		=			
ANR	1930774	Identifier	cur_type		1930678	0					
ANR	1930775	AssignmentExpression	prev_type = 0		1930678	1		=			
ANR	1930776	Identifier	prev_type		1930678	0					
ANR	1930777	PrimaryExpression	0		1930678	1					
ANR	1930778	ExpressionStatement	ht = Z_ARRVAL_P ( array )	3505:1:108358:108380	1930678	8	True				
ANR	1930779	AssignmentExpression	ht = Z_ARRVAL_P ( array )		1930678	0		=			
ANR	1930780	Identifier	ht		1930678	0					
ANR	1930781	CallExpression	Z_ARRVAL_P ( array )		1930678	1					
ANR	1930782	Callee	Z_ARRVAL_P		1930678	0					
ANR	1930783	Identifier	Z_ARRVAL_P		1930678	0					
ANR	1930784	ArgumentList	array		1930678	1					
ANR	1930785	Argument	array		1930678	0					
ANR	1930786	Identifier	array		1930678	0					
ANR	1930787	Statement	ZEND_HASH_FOREACH_VAL_IND	3507:1:108384:108408	1930678	9	True				
ANR	1930788	Statement	(	3507:26:108409:108409	1930678	10	True				
ANR	1930789	Statement	ht	3507:27:108410:108411	1930678	11	True				
ANR	1930790	Statement	","	3507:29:108412:108412	1930678	12	True				
ANR	1930791	Statement	tmp	3507:31:108414:108416	1930678	13	True				
ANR	1930792	Statement	)	3507:34:108417:108417	1930678	14	True				
ANR	1930793	CompoundStatement		17:36:420:420	1930678	15					
ANR	1930794	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_OBJECT && Z_OBJCE_P ( tmp ) == soap_var_class_entry )		1930678	0					
ANR	1930795	Condition	Z_TYPE_P ( tmp ) == IS_OBJECT && Z_OBJCE_P ( tmp ) == soap_var_class_entry	3508:6:108427:108500	1930678	0	True				
ANR	1930796	AndExpression	Z_TYPE_P ( tmp ) == IS_OBJECT && Z_OBJCE_P ( tmp ) == soap_var_class_entry		1930678	0		&&			
ANR	1930797	EqualityExpression	Z_TYPE_P ( tmp ) == IS_OBJECT		1930678	0		==			
ANR	1930798	CallExpression	Z_TYPE_P ( tmp )		1930678	0					
ANR	1930799	Callee	Z_TYPE_P		1930678	0					
ANR	1930800	Identifier	Z_TYPE_P		1930678	0					
ANR	1930801	ArgumentList	tmp		1930678	1					
ANR	1930802	Argument	tmp		1930678	0					
ANR	1930803	Identifier	tmp		1930678	0					
ANR	1930804	Identifier	IS_OBJECT		1930678	1					
ANR	1930805	EqualityExpression	Z_OBJCE_P ( tmp ) == soap_var_class_entry		1930678	1		==			
ANR	1930806	CallExpression	Z_OBJCE_P ( tmp )		1930678	0					
ANR	1930807	Callee	Z_OBJCE_P		1930678	0					
ANR	1930808	Identifier	Z_OBJCE_P		1930678	0					
ANR	1930809	ArgumentList	tmp		1930678	1					
ANR	1930810	Argument	tmp		1930678	0					
ANR	1930811	Identifier	tmp		1930678	0					
ANR	1930812	Identifier	soap_var_class_entry		1930678	1					
ANR	1930813	CompoundStatement		20:3:509:520	1930678	1					
ANR	1930814	IdentifierDeclStatement	zval * ztype ;	3510:3:108508:108519	1930678	0	True				
ANR	1930815	IdentifierDecl	* ztype		1930678	0					
ANR	1930816	IdentifierDeclType	zval *		1930678	0					
ANR	1930817	Identifier	ztype		1930678	1					
ANR	1930818	IfStatement	"if ( ( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL || Z_TYPE_P ( ztype ) != IS_LONG )"		1930678	1					
ANR	1930819	Condition	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL || Z_TYPE_P ( ztype ) != IS_LONG"	3512:7:108529:108653	1930678	0	True				
ANR	1930820	OrExpression	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL || Z_TYPE_P ( ztype ) != IS_LONG"		1930678	0		||			
ANR	1930821	EqualityExpression	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 ) ) == NULL"		1930678	0		==			
ANR	1930822	AssignmentExpression	"ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 )"		1930678	0		=			
ANR	1930823	Identifier	ztype		1930678	0					
ANR	1930824	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_type"" , sizeof ( ""enc_type"" ) - 1 )"		1930678	1					
ANR	1930825	Callee	zend_hash_str_find		1930678	0					
ANR	1930826	Identifier	zend_hash_str_find		1930678	0					
ANR	1930827	ArgumentList	Z_OBJPROP_P ( tmp )		1930678	1					
ANR	1930828	Argument	Z_OBJPROP_P ( tmp )		1930678	0					
ANR	1930829	CallExpression	Z_OBJPROP_P ( tmp )		1930678	0					
ANR	1930830	Callee	Z_OBJPROP_P		1930678	0					
ANR	1930831	Identifier	Z_OBJPROP_P		1930678	0					
ANR	1930832	ArgumentList	tmp		1930678	1					
ANR	1930833	Argument	tmp		1930678	0					
ANR	1930834	Identifier	tmp		1930678	0					
ANR	1930835	Argument	"""enc_type"""		1930678	1					
ANR	1930836	PrimaryExpression	"""enc_type"""		1930678	0					
ANR	1930837	Argument	"sizeof ( ""enc_type"" ) - 1"		1930678	2					
ANR	1930838	AdditiveExpression	"sizeof ( ""enc_type"" ) - 1"		1930678	0		-			
ANR	1930839	SizeofExpression	"sizeof ( ""enc_type"" )"		1930678	0					
ANR	1930840	Sizeof	sizeof		1930678	0					
ANR	1930841	PrimaryExpression	"""enc_type"""		1930678	1					
ANR	1930842	PrimaryExpression	1		1930678	1					
ANR	1930843	Identifier	NULL		1930678	1					
ANR	1930844	EqualityExpression	Z_TYPE_P ( ztype ) != IS_LONG		1930678	1		!=			
ANR	1930845	CallExpression	Z_TYPE_P ( ztype )		1930678	0					
ANR	1930846	Callee	Z_TYPE_P		1930678	0					
ANR	1930847	Identifier	Z_TYPE_P		1930678	0					
ANR	1930848	ArgumentList	ztype		1930678	1					
ANR	1930849	Argument	ztype		1930678	0					
ANR	1930850	Identifier	ztype		1930678	0					
ANR	1930851	Identifier	IS_LONG		1930678	1					
ANR	1930852	CompoundStatement		23:35:657:657	1930678	1					
ANR	1930853	ExpressionStatement	"soap_error0 ( E_ERROR , ""Encoding: SoapVar has no 'enc_type' property"" )"	3514:4:108662:108731	1930678	0	True				
ANR	1930854	CallExpression	"soap_error0 ( E_ERROR , ""Encoding: SoapVar has no 'enc_type' property"" )"		1930678	0					
ANR	1930855	Callee	soap_error0		1930678	0					
ANR	1930856	Identifier	soap_error0		1930678	0					
ANR	1930857	ArgumentList	E_ERROR		1930678	1					
ANR	1930858	Argument	E_ERROR		1930678	0					
ANR	1930859	Identifier	E_ERROR		1930678	0					
ANR	1930860	Argument	"""Encoding: SoapVar has no 'enc_type' property"""		1930678	1					
ANR	1930861	PrimaryExpression	"""Encoding: SoapVar has no 'enc_type' property"""		1930678	0					
ANR	1930862	ExpressionStatement	cur_type = Z_LVAL_P ( ztype )	3516:3:108741:108767	1930678	2	True				
ANR	1930863	AssignmentExpression	cur_type = Z_LVAL_P ( ztype )		1930678	0		=			
ANR	1930864	Identifier	cur_type		1930678	0					
ANR	1930865	CallExpression	Z_LVAL_P ( ztype )		1930678	1					
ANR	1930866	Callee	Z_LVAL_P		1930678	0					
ANR	1930867	Identifier	Z_LVAL_P		1930678	0					
ANR	1930868	ArgumentList	ztype		1930678	1					
ANR	1930869	Argument	ztype		1930678	0					
ANR	1930870	Identifier	ztype		1930678	0					
ANR	1930871	IfStatement	"if ( ( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( ztype ) == IS_STRING )"		1930678	3					
ANR	1930872	Condition	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( ztype ) == IS_STRING"	3518:7:108777:108905	1930678	0	True				
ANR	1930873	AndExpression	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL && Z_TYPE_P ( ztype ) == IS_STRING"		1930678	0		&&			
ANR	1930874	EqualityExpression	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 ) ) != NULL"		1930678	0		!=			
ANR	1930875	AssignmentExpression	"ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 )"		1930678	0		=			
ANR	1930876	Identifier	ztype		1930678	0					
ANR	1930877	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_stype"" , sizeof ( ""enc_stype"" ) - 1 )"		1930678	1					
ANR	1930878	Callee	zend_hash_str_find		1930678	0					
ANR	1930879	Identifier	zend_hash_str_find		1930678	0					
ANR	1930880	ArgumentList	Z_OBJPROP_P ( tmp )		1930678	1					
ANR	1930881	Argument	Z_OBJPROP_P ( tmp )		1930678	0					
ANR	1930882	CallExpression	Z_OBJPROP_P ( tmp )		1930678	0					
ANR	1930883	Callee	Z_OBJPROP_P		1930678	0					
ANR	1930884	Identifier	Z_OBJPROP_P		1930678	0					
ANR	1930885	ArgumentList	tmp		1930678	1					
ANR	1930886	Argument	tmp		1930678	0					
ANR	1930887	Identifier	tmp		1930678	0					
ANR	1930888	Argument	"""enc_stype"""		1930678	1					
ANR	1930889	PrimaryExpression	"""enc_stype"""		1930678	0					
ANR	1930890	Argument	"sizeof ( ""enc_stype"" ) - 1"		1930678	2					
ANR	1930891	AdditiveExpression	"sizeof ( ""enc_stype"" ) - 1"		1930678	0		-			
ANR	1930892	SizeofExpression	"sizeof ( ""enc_stype"" )"		1930678	0					
ANR	1930893	Sizeof	sizeof		1930678	0					
ANR	1930894	PrimaryExpression	"""enc_stype"""		1930678	1					
ANR	1930895	PrimaryExpression	1		1930678	1					
ANR	1930896	Identifier	NULL		1930678	1					
ANR	1930897	EqualityExpression	Z_TYPE_P ( ztype ) == IS_STRING		1930678	1		==			
ANR	1930898	CallExpression	Z_TYPE_P ( ztype )		1930678	0					
ANR	1930899	Callee	Z_TYPE_P		1930678	0					
ANR	1930900	Identifier	Z_TYPE_P		1930678	0					
ANR	1930901	ArgumentList	ztype		1930678	1					
ANR	1930902	Argument	ztype		1930678	0					
ANR	1930903	Identifier	ztype		1930678	0					
ANR	1930904	Identifier	IS_STRING		1930678	1					
ANR	1930905	CompoundStatement		29:37:909:909	1930678	1					
ANR	1930906	ExpressionStatement	cur_stype = Z_STRVAL_P ( ztype )	3520:4:108914:108943	1930678	0	True				
ANR	1930907	AssignmentExpression	cur_stype = Z_STRVAL_P ( ztype )		1930678	0		=			
ANR	1930908	Identifier	cur_stype		1930678	0					
ANR	1930909	CallExpression	Z_STRVAL_P ( ztype )		1930678	1					
ANR	1930910	Callee	Z_STRVAL_P		1930678	0					
ANR	1930911	Identifier	Z_STRVAL_P		1930678	0					
ANR	1930912	ArgumentList	ztype		1930678	1					
ANR	1930913	Argument	ztype		1930678	0					
ANR	1930914	Identifier	ztype		1930678	0					
ANR	1930915	ElseStatement	else		1930678	0					
ANR	1930916	CompoundStatement		31:10:956:956	1930678	0					
ANR	1930917	ExpressionStatement	cur_stype = NULL	3522:4:108961:108977	1930678	0	True				
ANR	1930918	AssignmentExpression	cur_stype = NULL		1930678	0		=			
ANR	1930919	Identifier	cur_stype		1930678	0					
ANR	1930920	Identifier	NULL		1930678	1					
ANR	1930921	IfStatement	"if ( ( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( ztype ) == IS_STRING )"		1930678	4					
ANR	1930922	Condition	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( ztype ) == IS_STRING"	3525:7:108992:109114	1930678	0	True				
ANR	1930923	AndExpression	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL && Z_TYPE_P ( ztype ) == IS_STRING"		1930678	0		&&			
ANR	1930924	EqualityExpression	"( ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 ) ) != NULL"		1930678	0		!=			
ANR	1930925	AssignmentExpression	"ztype = zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 )"		1930678	0		=			
ANR	1930926	Identifier	ztype		1930678	0					
ANR	1930927	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( tmp ) , ""enc_ns"" , sizeof ( ""enc_ns"" ) - 1 )"		1930678	1					
ANR	1930928	Callee	zend_hash_str_find		1930678	0					
ANR	1930929	Identifier	zend_hash_str_find		1930678	0					
ANR	1930930	ArgumentList	Z_OBJPROP_P ( tmp )		1930678	1					
ANR	1930931	Argument	Z_OBJPROP_P ( tmp )		1930678	0					
ANR	1930932	CallExpression	Z_OBJPROP_P ( tmp )		1930678	0					
ANR	1930933	Callee	Z_OBJPROP_P		1930678	0					
ANR	1930934	Identifier	Z_OBJPROP_P		1930678	0					
ANR	1930935	ArgumentList	tmp		1930678	1					
ANR	1930936	Argument	tmp		1930678	0					
ANR	1930937	Identifier	tmp		1930678	0					
ANR	1930938	Argument	"""enc_ns"""		1930678	1					
ANR	1930939	PrimaryExpression	"""enc_ns"""		1930678	0					
ANR	1930940	Argument	"sizeof ( ""enc_ns"" ) - 1"		1930678	2					
ANR	1930941	AdditiveExpression	"sizeof ( ""enc_ns"" ) - 1"		1930678	0		-			
ANR	1930942	SizeofExpression	"sizeof ( ""enc_ns"" )"		1930678	0					
ANR	1930943	Sizeof	sizeof		1930678	0					
ANR	1930944	PrimaryExpression	"""enc_ns"""		1930678	1					
ANR	1930945	PrimaryExpression	1		1930678	1					
ANR	1930946	Identifier	NULL		1930678	1					
ANR	1930947	EqualityExpression	Z_TYPE_P ( ztype ) == IS_STRING		1930678	1		==			
ANR	1930948	CallExpression	Z_TYPE_P ( ztype )		1930678	0					
ANR	1930949	Callee	Z_TYPE_P		1930678	0					
ANR	1930950	Identifier	Z_TYPE_P		1930678	0					
ANR	1930951	ArgumentList	ztype		1930678	1					
ANR	1930952	Argument	ztype		1930678	0					
ANR	1930953	Identifier	ztype		1930678	0					
ANR	1930954	Identifier	IS_STRING		1930678	1					
ANR	1930955	CompoundStatement		36:37:1118:1118	1930678	1					
ANR	1930956	ExpressionStatement	cur_ns = Z_STRVAL_P ( ztype )	3527:4:109123:109149	1930678	0	True				
ANR	1930957	AssignmentExpression	cur_ns = Z_STRVAL_P ( ztype )		1930678	0		=			
ANR	1930958	Identifier	cur_ns		1930678	0					
ANR	1930959	CallExpression	Z_STRVAL_P ( ztype )		1930678	1					
ANR	1930960	Callee	Z_STRVAL_P		1930678	0					
ANR	1930961	Identifier	Z_STRVAL_P		1930678	0					
ANR	1930962	ArgumentList	ztype		1930678	1					
ANR	1930963	Argument	ztype		1930678	0					
ANR	1930964	Identifier	ztype		1930678	0					
ANR	1930965	ElseStatement	else		1930678	0					
ANR	1930966	CompoundStatement		38:10:1162:1162	1930678	0					
ANR	1930967	ExpressionStatement	cur_ns = NULL	3529:4:109167:109180	1930678	0	True				
ANR	1930968	AssignmentExpression	cur_ns = NULL		1930678	0		=			
ANR	1930969	Identifier	cur_ns		1930678	0					
ANR	1930970	Identifier	NULL		1930678	1					
ANR	1930971	ElseStatement	else		1930678	0					
ANR	1930972	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_ARRAY && is_map ( tmp ) )		1930678	0					
ANR	1930973	Condition	Z_TYPE_P ( tmp ) == IS_ARRAY && is_map ( tmp )	3532:13:109201:109240	1930678	0	True				
ANR	1930974	AndExpression	Z_TYPE_P ( tmp ) == IS_ARRAY && is_map ( tmp )		1930678	0		&&			
ANR	1930975	EqualityExpression	Z_TYPE_P ( tmp ) == IS_ARRAY		1930678	0		==			
ANR	1930976	CallExpression	Z_TYPE_P ( tmp )		1930678	0					
ANR	1930977	Callee	Z_TYPE_P		1930678	0					
ANR	1930978	Identifier	Z_TYPE_P		1930678	0					
ANR	1930979	ArgumentList	tmp		1930678	1					
ANR	1930980	Argument	tmp		1930678	0					
ANR	1930981	Identifier	tmp		1930678	0					
ANR	1930982	Identifier	IS_ARRAY		1930678	1					
ANR	1930983	CallExpression	is_map ( tmp )		1930678	1					
ANR	1930984	Callee	is_map		1930678	0					
ANR	1930985	Identifier	is_map		1930678	0					
ANR	1930986	ArgumentList	tmp		1930678	1					
ANR	1930987	Argument	tmp		1930678	0					
ANR	1930988	Identifier	tmp		1930678	0					
ANR	1930989	CompoundStatement		42:55:1244:1244	1930678	1					
ANR	1930990	ExpressionStatement	cur_type = APACHE_MAP	3533:3:109248:109269	1930678	0	True				
ANR	1930991	AssignmentExpression	cur_type = APACHE_MAP		1930678	0		=			
ANR	1930992	Identifier	cur_type		1930678	0					
ANR	1930993	Identifier	APACHE_MAP		1930678	1					
ANR	1930994	ExpressionStatement	cur_stype = NULL	3534:3:109274:109290	1930678	1	True				
ANR	1930995	AssignmentExpression	cur_stype = NULL		1930678	0		=			
ANR	1930996	Identifier	cur_stype		1930678	0					
ANR	1930997	Identifier	NULL		1930678	1					
ANR	1930998	ExpressionStatement	cur_ns = NULL	3535:3:109295:109308	1930678	2	True				
ANR	1930999	AssignmentExpression	cur_ns = NULL		1930678	0		=			
ANR	1931000	Identifier	cur_ns		1930678	0					
ANR	1931001	Identifier	NULL		1930678	1					
ANR	1931002	ElseStatement	else		1930678	0					
ANR	1931003	CompoundStatement		46:9:1320:1320	1930678	0					
ANR	1931004	ExpressionStatement	cur_type = Z_TYPE_P ( tmp )	3537:3:109324:109348	1930678	0	True				
ANR	1931005	AssignmentExpression	cur_type = Z_TYPE_P ( tmp )		1930678	0		=			
ANR	1931006	Identifier	cur_type		1930678	0					
ANR	1931007	CallExpression	Z_TYPE_P ( tmp )		1930678	1					
ANR	1931008	Callee	Z_TYPE_P		1930678	0					
ANR	1931009	Identifier	Z_TYPE_P		1930678	0					
ANR	1931010	ArgumentList	tmp		1930678	1					
ANR	1931011	Argument	tmp		1930678	0					
ANR	1931012	Identifier	tmp		1930678	0					
ANR	1931013	ExpressionStatement	cur_stype = NULL	3538:3:109353:109369	1930678	1	True				
ANR	1931014	AssignmentExpression	cur_stype = NULL		1930678	0		=			
ANR	1931015	Identifier	cur_stype		1930678	0					
ANR	1931016	Identifier	NULL		1930678	1					
ANR	1931017	ExpressionStatement	cur_ns = NULL	3539:3:109374:109387	1930678	2	True				
ANR	1931018	AssignmentExpression	cur_ns = NULL		1930678	0		=			
ANR	1931019	Identifier	cur_ns		1930678	0					
ANR	1931020	Identifier	NULL		1930678	1					
ANR	1931021	IfStatement	if ( i > 0 )		1930678	1					
ANR	1931022	Condition	i > 0	3542:6:109400:109404	1930678	0	True				
ANR	1931023	RelationalExpression	i > 0		1930678	0		>			
ANR	1931024	Identifier	i		1930678	0					
ANR	1931025	PrimaryExpression	0		1930678	1					
ANR	1931026	CompoundStatement		52:13:1408:1408	1930678	1					
ANR	1931027	IfStatement	"if ( ( cur_type != prev_type ) || ( cur_stype != NULL && prev_stype != NULL && strcmp ( cur_stype , prev_stype ) != 0 ) || ( cur_stype == NULL && cur_stype != prev_stype ) || ( cur_ns != NULL && prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0 ) || ( cur_ns == NULL && cur_ns != prev_ns ) )"		1930678	0					
ANR	1931028	Condition	"( cur_type != prev_type ) || ( cur_stype != NULL && prev_stype != NULL && strcmp ( cur_stype , prev_stype ) != 0 ) || ( cur_stype == NULL && cur_stype != prev_stype ) || ( cur_ns != NULL && prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0 ) || ( cur_ns == NULL && cur_ns != prev_ns )"	3543:7:109416:109709	1930678	0	True				
ANR	1931029	OrExpression	"( cur_type != prev_type ) || ( cur_stype != NULL && prev_stype != NULL && strcmp ( cur_stype , prev_stype ) != 0 ) || ( cur_stype == NULL && cur_stype != prev_stype ) || ( cur_ns != NULL && prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0 ) || ( cur_ns == NULL && cur_ns != prev_ns )"		1930678	0		||			
ANR	1931030	EqualityExpression	cur_type != prev_type		1930678	0		!=			
ANR	1931031	Identifier	cur_type		1930678	0					
ANR	1931032	Identifier	prev_type		1930678	1					
ANR	1931033	OrExpression	"( cur_stype != NULL && prev_stype != NULL && strcmp ( cur_stype , prev_stype ) != 0 ) || ( cur_stype == NULL && cur_stype != prev_stype ) || ( cur_ns != NULL && prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0 ) || ( cur_ns == NULL && cur_ns != prev_ns )"		1930678	1		||			
ANR	1931034	AndExpression	"cur_stype != NULL && prev_stype != NULL && strcmp ( cur_stype , prev_stype ) != 0"		1930678	0		&&			
ANR	1931035	EqualityExpression	cur_stype != NULL		1930678	0		!=			
ANR	1931036	Identifier	cur_stype		1930678	0					
ANR	1931037	Identifier	NULL		1930678	1					
ANR	1931038	AndExpression	"prev_stype != NULL && strcmp ( cur_stype , prev_stype ) != 0"		1930678	1		&&			
ANR	1931039	EqualityExpression	prev_stype != NULL		1930678	0		!=			
ANR	1931040	Identifier	prev_stype		1930678	0					
ANR	1931041	Identifier	NULL		1930678	1					
ANR	1931042	EqualityExpression	"strcmp ( cur_stype , prev_stype ) != 0"		1930678	1		!=			
ANR	1931043	CallExpression	"strcmp ( cur_stype , prev_stype )"		1930678	0					
ANR	1931044	Callee	strcmp		1930678	0					
ANR	1931045	Identifier	strcmp		1930678	0					
ANR	1931046	ArgumentList	cur_stype		1930678	1					
ANR	1931047	Argument	cur_stype		1930678	0					
ANR	1931048	Identifier	cur_stype		1930678	0					
ANR	1931049	Argument	prev_stype		1930678	1					
ANR	1931050	Identifier	prev_stype		1930678	0					
ANR	1931051	PrimaryExpression	0		1930678	1					
ANR	1931052	OrExpression	"( cur_stype == NULL && cur_stype != prev_stype ) || ( cur_ns != NULL && prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0 ) || ( cur_ns == NULL && cur_ns != prev_ns )"		1930678	1		||			
ANR	1931053	AndExpression	cur_stype == NULL && cur_stype != prev_stype		1930678	0		&&			
ANR	1931054	EqualityExpression	cur_stype == NULL		1930678	0		==			
ANR	1931055	Identifier	cur_stype		1930678	0					
ANR	1931056	Identifier	NULL		1930678	1					
ANR	1931057	EqualityExpression	cur_stype != prev_stype		1930678	1		!=			
ANR	1931058	Identifier	cur_stype		1930678	0					
ANR	1931059	Identifier	prev_stype		1930678	1					
ANR	1931060	OrExpression	"( cur_ns != NULL && prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0 ) || ( cur_ns == NULL && cur_ns != prev_ns )"		1930678	1		||			
ANR	1931061	AndExpression	"cur_ns != NULL && prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0"		1930678	0		&&			
ANR	1931062	EqualityExpression	cur_ns != NULL		1930678	0		!=			
ANR	1931063	Identifier	cur_ns		1930678	0					
ANR	1931064	Identifier	NULL		1930678	1					
ANR	1931065	AndExpression	"prev_ns != NULL && strcmp ( cur_ns , prev_ns ) != 0"		1930678	1		&&			
ANR	1931066	EqualityExpression	prev_ns != NULL		1930678	0		!=			
ANR	1931067	Identifier	prev_ns		1930678	0					
ANR	1931068	Identifier	NULL		1930678	1					
ANR	1931069	EqualityExpression	"strcmp ( cur_ns , prev_ns ) != 0"		1930678	1		!=			
ANR	1931070	CallExpression	"strcmp ( cur_ns , prev_ns )"		1930678	0					
ANR	1931071	Callee	strcmp		1930678	0					
ANR	1931072	Identifier	strcmp		1930678	0					
ANR	1931073	ArgumentList	cur_ns		1930678	1					
ANR	1931074	Argument	cur_ns		1930678	0					
ANR	1931075	Identifier	cur_ns		1930678	0					
ANR	1931076	Argument	prev_ns		1930678	1					
ANR	1931077	Identifier	prev_ns		1930678	0					
ANR	1931078	PrimaryExpression	0		1930678	1					
ANR	1931079	AndExpression	cur_ns == NULL && cur_ns != prev_ns		1930678	1		&&			
ANR	1931080	EqualityExpression	cur_ns == NULL		1930678	0		==			
ANR	1931081	Identifier	cur_ns		1930678	0					
ANR	1931082	Identifier	NULL		1930678	1					
ANR	1931083	EqualityExpression	cur_ns != prev_ns		1930678	1		!=			
ANR	1931084	Identifier	cur_ns		1930678	0					
ANR	1931085	Identifier	prev_ns		1930678	1					
ANR	1931086	CompoundStatement		57:46:1713:1713	1930678	1					
ANR	1931087	ExpressionStatement	different = TRUE	3548:4:109718:109734	1930678	0	True				
ANR	1931088	AssignmentExpression	different = TRUE		1930678	0		=			
ANR	1931089	Identifier	different		1930678	0					
ANR	1931090	Identifier	TRUE		1930678	1					
ANR	1931091	BreakStatement	break ;	3549:4:109740:109745	1930678	1	True				
ANR	1931092	ExpressionStatement	prev_type = cur_type	3553:2:109759:109779	1930678	2	True				
ANR	1931093	AssignmentExpression	prev_type = cur_type		1930678	0		=			
ANR	1931094	Identifier	prev_type		1930678	0					
ANR	1931095	Identifier	cur_type		1930678	1					
ANR	1931096	ExpressionStatement	prev_stype = cur_stype	3554:2:109783:109805	1930678	3	True				
ANR	1931097	AssignmentExpression	prev_stype = cur_stype		1930678	0		=			
ANR	1931098	Identifier	prev_stype		1930678	0					
ANR	1931099	Identifier	cur_stype		1930678	1					
ANR	1931100	ExpressionStatement	prev_ns = cur_ns	3555:2:109809:109825	1930678	4	True				
ANR	1931101	AssignmentExpression	prev_ns = cur_ns		1930678	0		=			
ANR	1931102	Identifier	prev_ns		1930678	0					
ANR	1931103	Identifier	cur_ns		1930678	1					
ANR	1931104	ExpressionStatement	i ++	3556:2:109829:109832	1930678	5	True				
ANR	1931105	PostIncDecOperationExpression	i ++		1930678	0					
ANR	1931106	Identifier	i		1930678	0					
ANR	1931107	IncDec	++		1930678	1					
ANR	1931108	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3557:3:109837:109860	1930678	16	True				
ANR	1931109	CallExpression	ZEND_HASH_FOREACH_END ( )		1930678	0					
ANR	1931110	Callee	ZEND_HASH_FOREACH_END		1930678	0					
ANR	1931111	Identifier	ZEND_HASH_FOREACH_END		1930678	0					
ANR	1931112	ArgumentList			1930678	1					
ANR	1931113	IfStatement	if ( different || i == 0 )		1930678	17					
ANR	1931114	Condition	different || i == 0	3559:5:109868:109886	1930678	0	True				
ANR	1931115	OrExpression	different || i == 0		1930678	0		||			
ANR	1931116	Identifier	different		1930678	0					
ANR	1931117	EqualityExpression	i == 0		1930678	1		==			
ANR	1931118	Identifier	i		1930678	0					
ANR	1931119	PrimaryExpression	0		1930678	1					
ANR	1931120	CompoundStatement		69:26:1890:1890	1930678	1					
ANR	1931121	ExpressionStatement	"smart_str_appendl ( type , ""xsd:anyType"" , sizeof ( ""xsd:anyType"" ) - 1 )"	3560:2:109893:109956	1930678	0	True				
ANR	1931122	CallExpression	"smart_str_appendl ( type , ""xsd:anyType"" , sizeof ( ""xsd:anyType"" ) - 1 )"		1930678	0					
ANR	1931123	Callee	smart_str_appendl		1930678	0					
ANR	1931124	Identifier	smart_str_appendl		1930678	0					
ANR	1931125	ArgumentList	type		1930678	1					
ANR	1931126	Argument	type		1930678	0					
ANR	1931127	Identifier	type		1930678	0					
ANR	1931128	Argument	"""xsd:anyType"""		1930678	1					
ANR	1931129	PrimaryExpression	"""xsd:anyType"""		1930678	0					
ANR	1931130	Argument	"sizeof ( ""xsd:anyType"" ) - 1"		1930678	2					
ANR	1931131	AdditiveExpression	"sizeof ( ""xsd:anyType"" ) - 1"		1930678	0		-			
ANR	1931132	SizeofExpression	"sizeof ( ""xsd:anyType"" )"		1930678	0					
ANR	1931133	Sizeof	sizeof		1930678	0					
ANR	1931134	PrimaryExpression	"""xsd:anyType"""		1930678	1					
ANR	1931135	PrimaryExpression	1		1930678	1					
ANR	1931136	ReturnStatement	return get_conversion ( XSD_ANYTYPE ) ;	3561:2:109960:109994	1930678	1	True				
ANR	1931137	CallExpression	get_conversion ( XSD_ANYTYPE )		1930678	0					
ANR	1931138	Callee	get_conversion		1930678	0					
ANR	1931139	Identifier	get_conversion		1930678	0					
ANR	1931140	ArgumentList	XSD_ANYTYPE		1930678	1					
ANR	1931141	Argument	XSD_ANYTYPE		1930678	0					
ANR	1931142	Identifier	XSD_ANYTYPE		1930678	0					
ANR	1931143	ElseStatement	else		1930678	0					
ANR	1931144	CompoundStatement		73:2:2009:2022	1930678	0					
ANR	1931145	IdentifierDeclStatement	encodePtr enc ;	3563:2:110008:110021	1930678	0	True				
ANR	1931146	IdentifierDecl	enc		1930678	0					
ANR	1931147	IdentifierDeclType	encodePtr		1930678	0					
ANR	1931148	Identifier	enc		1930678	1					
ANR	1931149	IfStatement	if ( cur_stype != NULL )		1930678	1					
ANR	1931150	Condition	cur_stype != NULL	3565:6:110030:110046	1930678	0	True				
ANR	1931151	EqualityExpression	cur_stype != NULL		1930678	0		!=			
ANR	1931152	Identifier	cur_stype		1930678	0					
ANR	1931153	Identifier	NULL		1930678	1					
ANR	1931154	CompoundStatement		76:3:2055:2081	1930678	1					
ANR	1931155	IdentifierDeclStatement	smart_str array_type = { 0 } ;	3566:3:110054:110080	1930678	0	True				
ANR	1931156	IdentifierDecl	array_type = { 0 }		1930678	0					
ANR	1931157	IdentifierDeclType	smart_str		1930678	0					
ANR	1931158	Identifier	array_type		1930678	1					
ANR	1931159	AssignmentExpression	array_type = { 0 }		1930678	2		=			
ANR	1931160	Identifier	array_type		1930678	0					
ANR	1931161	InitializerList	0		1930678	1					
ANR	1931162	PrimaryExpression	0		1930678	0					
ANR	1931163	IfStatement	if ( cur_ns )		1930678	1					
ANR	1931164	Condition	cur_ns	3568:7:110090:110095	1930678	0	True				
ANR	1931165	Identifier	cur_ns		1930678	0					
ANR	1931166	CompoundStatement		79:4:2105:2146	1930678	1					
ANR	1931167	IdentifierDeclStatement	"xmlNsPtr ns = encode_add_ns ( node , cur_ns ) ;"	3569:4:110104:110145	1930678	0	True				
ANR	1931168	IdentifierDecl	"ns = encode_add_ns ( node , cur_ns )"		1930678	0					
ANR	1931169	IdentifierDeclType	xmlNsPtr		1930678	0					
ANR	1931170	Identifier	ns		1930678	1					
ANR	1931171	AssignmentExpression	"ns = encode_add_ns ( node , cur_ns )"		1930678	2		=			
ANR	1931172	Identifier	ns		1930678	0					
ANR	1931173	CallExpression	"encode_add_ns ( node , cur_ns )"		1930678	1					
ANR	1931174	Callee	encode_add_ns		1930678	0					
ANR	1931175	Identifier	encode_add_ns		1930678	0					
ANR	1931176	ArgumentList	node		1930678	1					
ANR	1931177	Argument	node		1930678	0					
ANR	1931178	Identifier	node		1930678	0					
ANR	1931179	Argument	cur_ns		1930678	1					
ANR	1931180	Identifier	cur_ns		1930678	0					
ANR	1931181	ExpressionStatement	"smart_str_appends ( type , ( char * ) ns -> prefix )"	3571:4:110152:110194	1930678	1	True				
ANR	1931182	CallExpression	"smart_str_appends ( type , ( char * ) ns -> prefix )"		1930678	0					
ANR	1931183	Callee	smart_str_appends		1930678	0					
ANR	1931184	Identifier	smart_str_appends		1930678	0					
ANR	1931185	ArgumentList	type		1930678	1					
ANR	1931186	Argument	type		1930678	0					
ANR	1931187	Identifier	type		1930678	0					
ANR	1931188	Argument	( char * ) ns -> prefix		1930678	1					
ANR	1931189	CastExpression	( char * ) ns -> prefix		1930678	0					
ANR	1931190	CastTarget	char *		1930678	0					
ANR	1931191	PtrMemberAccess	ns -> prefix		1930678	1					
ANR	1931192	Identifier	ns		1930678	0					
ANR	1931193	Identifier	prefix		1930678	1					
ANR	1931194	ExpressionStatement	"smart_str_appendc ( type , ':' )"	3572:4:110200:110228	1930678	2	True				
ANR	1931195	CallExpression	"smart_str_appendc ( type , ':' )"		1930678	0					
ANR	1931196	Callee	smart_str_appendc		1930678	0					
ANR	1931197	Identifier	smart_str_appendc		1930678	0					
ANR	1931198	ArgumentList	type		1930678	1					
ANR	1931199	Argument	type		1930678	0					
ANR	1931200	Identifier	type		1930678	0					
ANR	1931201	Argument	':'		1930678	1					
ANR	1931202	PrimaryExpression	':'		1930678	0					
ANR	1931203	ExpressionStatement	"smart_str_appends ( & array_type , cur_ns )"	3573:4:110234:110272	1930678	3	True				
ANR	1931204	CallExpression	"smart_str_appends ( & array_type , cur_ns )"		1930678	0					
ANR	1931205	Callee	smart_str_appends		1930678	0					
ANR	1931206	Identifier	smart_str_appends		1930678	0					
ANR	1931207	ArgumentList	& array_type		1930678	1					
ANR	1931208	Argument	& array_type		1930678	0					
ANR	1931209	UnaryOperationExpression	& array_type		1930678	0					
ANR	1931210	UnaryOperator	&		1930678	0					
ANR	1931211	Identifier	array_type		1930678	1					
ANR	1931212	Argument	cur_ns		1930678	1					
ANR	1931213	Identifier	cur_ns		1930678	0					
ANR	1931214	ExpressionStatement	"smart_str_appendc ( & array_type , ':' )"	3574:4:110278:110313	1930678	4	True				
ANR	1931215	CallExpression	"smart_str_appendc ( & array_type , ':' )"		1930678	0					
ANR	1931216	Callee	smart_str_appendc		1930678	0					
ANR	1931217	Identifier	smart_str_appendc		1930678	0					
ANR	1931218	ArgumentList	& array_type		1930678	1					
ANR	1931219	Argument	& array_type		1930678	0					
ANR	1931220	UnaryOperationExpression	& array_type		1930678	0					
ANR	1931221	UnaryOperator	&		1930678	0					
ANR	1931222	Identifier	array_type		1930678	1					
ANR	1931223	Argument	':'		1930678	1					
ANR	1931224	PrimaryExpression	':'		1930678	0					
ANR	1931225	ExpressionStatement	"smart_str_appends ( type , cur_stype )"	3576:3:110323:110357	1930678	2	True				
ANR	1931226	CallExpression	"smart_str_appends ( type , cur_stype )"		1930678	0					
ANR	1931227	Callee	smart_str_appends		1930678	0					
ANR	1931228	Identifier	smart_str_appends		1930678	0					
ANR	1931229	ArgumentList	type		1930678	1					
ANR	1931230	Argument	type		1930678	0					
ANR	1931231	Identifier	type		1930678	0					
ANR	1931232	Argument	cur_stype		1930678	1					
ANR	1931233	Identifier	cur_stype		1930678	0					
ANR	1931234	ExpressionStatement	smart_str_0 ( type )	3577:3:110362:110379	1930678	3	True				
ANR	1931235	CallExpression	smart_str_0 ( type )		1930678	0					
ANR	1931236	Callee	smart_str_0		1930678	0					
ANR	1931237	Identifier	smart_str_0		1930678	0					
ANR	1931238	ArgumentList	type		1930678	1					
ANR	1931239	Argument	type		1930678	0					
ANR	1931240	Identifier	type		1930678	0					
ANR	1931241	ExpressionStatement	"smart_str_appends ( & array_type , cur_stype )"	3578:3:110384:110425	1930678	4	True				
ANR	1931242	CallExpression	"smart_str_appends ( & array_type , cur_stype )"		1930678	0					
ANR	1931243	Callee	smart_str_appends		1930678	0					
ANR	1931244	Identifier	smart_str_appends		1930678	0					
ANR	1931245	ArgumentList	& array_type		1930678	1					
ANR	1931246	Argument	& array_type		1930678	0					
ANR	1931247	UnaryOperationExpression	& array_type		1930678	0					
ANR	1931248	UnaryOperator	&		1930678	0					
ANR	1931249	Identifier	array_type		1930678	1					
ANR	1931250	Argument	cur_stype		1930678	1					
ANR	1931251	Identifier	cur_stype		1930678	0					
ANR	1931252	ExpressionStatement	smart_str_0 ( & array_type )	3579:3:110430:110454	1930678	5	True				
ANR	1931253	CallExpression	smart_str_0 ( & array_type )		1930678	0					
ANR	1931254	Callee	smart_str_0		1930678	0					
ANR	1931255	Identifier	smart_str_0		1930678	0					
ANR	1931256	ArgumentList	& array_type		1930678	1					
ANR	1931257	Argument	& array_type		1930678	0					
ANR	1931258	UnaryOperationExpression	& array_type		1930678	0					
ANR	1931259	UnaryOperator	&		1930678	0					
ANR	1931260	Identifier	array_type		1930678	1					
ANR	1931261	ExpressionStatement	"enc = get_encoder_ex ( SOAP_GLOBAL ( sdl ) , ZSTR_VAL ( array_type . s ) , ZSTR_LEN ( array_type . s ) )"	3581:3:110460:110546	1930678	6	True				
ANR	1931262	AssignmentExpression	"enc = get_encoder_ex ( SOAP_GLOBAL ( sdl ) , ZSTR_VAL ( array_type . s ) , ZSTR_LEN ( array_type . s ) )"		1930678	0		=			
ANR	1931263	Identifier	enc		1930678	0					
ANR	1931264	CallExpression	"get_encoder_ex ( SOAP_GLOBAL ( sdl ) , ZSTR_VAL ( array_type . s ) , ZSTR_LEN ( array_type . s ) )"		1930678	1					
ANR	1931265	Callee	get_encoder_ex		1930678	0					
ANR	1931266	Identifier	get_encoder_ex		1930678	0					
ANR	1931267	ArgumentList	SOAP_GLOBAL ( sdl )		1930678	1					
ANR	1931268	Argument	SOAP_GLOBAL ( sdl )		1930678	0					
ANR	1931269	CallExpression	SOAP_GLOBAL ( sdl )		1930678	0					
ANR	1931270	Callee	SOAP_GLOBAL		1930678	0					
ANR	1931271	Identifier	SOAP_GLOBAL		1930678	0					
ANR	1931272	ArgumentList	sdl		1930678	1					
ANR	1931273	Argument	sdl		1930678	0					
ANR	1931274	Identifier	sdl		1930678	0					
ANR	1931275	Argument	ZSTR_VAL ( array_type . s )		1930678	1					
ANR	1931276	CallExpression	ZSTR_VAL ( array_type . s )		1930678	0					
ANR	1931277	Callee	ZSTR_VAL		1930678	0					
ANR	1931278	Identifier	ZSTR_VAL		1930678	0					
ANR	1931279	ArgumentList	array_type . s		1930678	1					
ANR	1931280	Argument	array_type . s		1930678	0					
ANR	1931281	MemberAccess	array_type . s		1930678	0					
ANR	1931282	Identifier	array_type		1930678	0					
ANR	1931283	Identifier	s		1930678	1					
ANR	1931284	Argument	ZSTR_LEN ( array_type . s )		1930678	2					
ANR	1931285	CallExpression	ZSTR_LEN ( array_type . s )		1930678	0					
ANR	1931286	Callee	ZSTR_LEN		1930678	0					
ANR	1931287	Identifier	ZSTR_LEN		1930678	0					
ANR	1931288	ArgumentList	array_type . s		1930678	1					
ANR	1931289	Argument	array_type . s		1930678	0					
ANR	1931290	MemberAccess	array_type . s		1930678	0					
ANR	1931291	Identifier	array_type		1930678	0					
ANR	1931292	Identifier	s		1930678	1					
ANR	1931293	ExpressionStatement	smart_str_free ( & array_type )	3582:3:110551:110578	1930678	7	True				
ANR	1931294	CallExpression	smart_str_free ( & array_type )		1930678	0					
ANR	1931295	Callee	smart_str_free		1930678	0					
ANR	1931296	Identifier	smart_str_free		1930678	0					
ANR	1931297	ArgumentList	& array_type		1930678	1					
ANR	1931298	Argument	& array_type		1930678	0					
ANR	1931299	UnaryOperationExpression	& array_type		1930678	0					
ANR	1931300	UnaryOperator	&		1930678	0					
ANR	1931301	Identifier	array_type		1930678	1					
ANR	1931302	ReturnStatement	return enc ;	3583:3:110583:110593	1930678	8	True				
ANR	1931303	Identifier	enc		1930678	0					
ANR	1931304	ElseStatement	else		1930678	0					
ANR	1931305	CompoundStatement		94:9:2605:2605	1930678	0					
ANR	1931306	ExpressionStatement	enc = get_conversion ( cur_type )	3585:3:110609:110639	1930678	0	True				
ANR	1931307	AssignmentExpression	enc = get_conversion ( cur_type )		1930678	0		=			
ANR	1931308	Identifier	enc		1930678	0					
ANR	1931309	CallExpression	get_conversion ( cur_type )		1930678	1					
ANR	1931310	Callee	get_conversion		1930678	0					
ANR	1931311	Identifier	get_conversion		1930678	0					
ANR	1931312	ArgumentList	cur_type		1930678	1					
ANR	1931313	Argument	cur_type		1930678	0					
ANR	1931314	Identifier	cur_type		1930678	0					
ANR	1931315	ExpressionStatement	"get_type_str ( node , enc -> details . ns , enc -> details . type_str , type )"	3586:3:110644:110708	1930678	1	True				
ANR	1931316	CallExpression	"get_type_str ( node , enc -> details . ns , enc -> details . type_str , type )"		1930678	0					
ANR	1931317	Callee	get_type_str		1930678	0					
ANR	1931318	Identifier	get_type_str		1930678	0					
ANR	1931319	ArgumentList	node		1930678	1					
ANR	1931320	Argument	node		1930678	0					
ANR	1931321	Identifier	node		1930678	0					
ANR	1931322	Argument	enc -> details . ns		1930678	1					
ANR	1931323	MemberAccess	enc -> details . ns		1930678	0					
ANR	1931324	PtrMemberAccess	enc -> details		1930678	0					
ANR	1931325	Identifier	enc		1930678	0					
ANR	1931326	Identifier	details		1930678	1					
ANR	1931327	Identifier	ns		1930678	1					
ANR	1931328	Argument	enc -> details . type_str		1930678	2					
ANR	1931329	MemberAccess	enc -> details . type_str		1930678	0					
ANR	1931330	PtrMemberAccess	enc -> details		1930678	0					
ANR	1931331	Identifier	enc		1930678	0					
ANR	1931332	Identifier	details		1930678	1					
ANR	1931333	Identifier	type_str		1930678	1					
ANR	1931334	Argument	type		1930678	3					
ANR	1931335	Identifier	type		1930678	0					
ANR	1931336	ReturnStatement	return enc ;	3587:3:110713:110723	1930678	2	True				
ANR	1931337	Identifier	enc		1930678	0					
ANR	1931338	ReturnStatement	return NULL ;	3590:1:110733:110744	1930678	18	True				
ANR	1931339	Identifier	NULL		1930678	0					
ANR	1931340	ReturnType	static encodePtr		1930678	1					
ANR	1931341	Identifier	get_array_type		1930678	2					
ANR	1931342	ParameterList	"xmlNodePtr node , zval * array , smart_str * type"		1930678	3					
ANR	1931343	Parameter	xmlNodePtr node	3490:32:107951:107965	1930678	0	True				
ANR	1931344	ParameterType	xmlNodePtr		1930678	0					
ANR	1931345	Identifier	node		1930678	1					
ANR	1931346	Parameter	zval * array	3490:49:107968:107978	1930678	1	True				
ANR	1931347	ParameterType	zval *		1930678	0					
ANR	1931348	Identifier	array		1930678	1					
ANR	1931349	Parameter	smart_str * type	3490:62:107981:107995	1930678	2	True				
ANR	1931350	ParameterType	smart_str *		1930678	0					
ANR	1931351	Identifier	type		1930678	1					
ANR	1931352	CFGEntryNode	ENTRY		1930678		True				
ANR	1931353	CFGExitNode	EXIT		1930678		True				
ANR	1931354	CFGErrorNode	ERROR		1930678		True				
ANR	1931355	Symbol	APACHE_MAP		1930678						
ANR	1931356	Symbol	get_conversion		1930678						
ANR	1931357	Symbol	type		1930678						
ANR	1931358	Symbol	ht		1930678						
ANR	1931359	Symbol	soap_var_class_entry		1930678						
ANR	1931360	Symbol	tmp		1930678						
ANR	1931361	Symbol	prev_stype		1930678						
ANR	1931362	Symbol	array_type . s		1930678						
ANR	1931363	Symbol	IS_STRING		1930678						
ANR	1931364	Symbol	different		1930678						
ANR	1931365	Symbol	cur_type		1930678						
ANR	1931366	Symbol	prev_type		1930678						
ANR	1931367	Symbol	strcmp		1930678						
ANR	1931368	Symbol	NULL		1930678						
ANR	1931369	Symbol	TRUE		1930678						
ANR	1931370	Symbol	& array_type		1930678						
ANR	1931371	Symbol	SOAP_GLOBAL		1930678						
ANR	1931372	Symbol	node		1930678						
ANR	1931373	Symbol	cur_ns		1930678						
ANR	1931374	Symbol	XSD_ANYTYPE		1930678						
ANR	1931375	Symbol	sdl		1930678						
ANR	1931376	Symbol	enc -> details . ns		1930678						
ANR	1931377	Symbol	* enc		1930678						
ANR	1931378	Symbol	get_encoder_ex		1930678						
ANR	1931379	Symbol	ns		1930678						
ANR	1931380	Symbol	enc -> details		1930678						
ANR	1931381	Symbol	enc -> details . type_str		1930678						
ANR	1931382	Symbol	zend_hash_str_find		1930678						
ANR	1931383	Symbol	array		1930678						
ANR	1931384	Symbol	IS_ARRAY		1930678						
ANR	1931385	Symbol	IS_LONG		1930678						
ANR	1931386	Symbol	Z_OBJCE_P		1930678						
ANR	1931387	Symbol	prev_ns		1930678						
ANR	1931388	Symbol	ztype		1930678						
ANR	1931389	Symbol	enc		1930678						
ANR	1931390	Symbol	array_type		1930678						
ANR	1931391	Symbol	Z_ARRVAL_P		1930678						
ANR	1931392	Symbol	cur_stype		1930678						
ANR	1931393	Symbol	encode_add_ns		1930678						
ANR	1931394	Symbol	* ns		1930678						
ANR	1931395	Symbol	i		1930678						
ANR	1931396	Symbol	is_map		1930678						
ANR	1931397	Symbol	Z_OBJPROP_P		1930678						
ANR	1931398	Symbol	Z_TYPE_P		1930678						
ANR	1931399	Symbol	Z_STRVAL_P		1930678						
ANR	1931400	Symbol	ns -> prefix		1930678						
ANR	1931401	Symbol	Z_LVAL_P		1930678						
ANR	1931402	Symbol	ZSTR_VAL		1930678						
ANR	1931403	Symbol	E_ERROR		1930678						
ANR	1931404	Symbol	ZSTR_LEN		1930678						
ANR	1931405	Symbol	FALSE		1930678						
ANR	1931406	Symbol	IS_OBJECT		1930678						
ANR	1931407	Function	get_type_str	3593:0:110749:111326							
ANR	1931408	FunctionDef	"get_type_str (xmlNodePtr node , const char * ns , const char * type , smart_str * ret)"		1931407	0					
ANR	1931409	CompoundStatement		3594:0:110841:111326	1931407	0					
ANR	1931410	IfStatement	if ( ns )		1931407	0					
ANR	1931411	Condition	ns	3596:5:110849:110850	1931407	0	True				
ANR	1931412	Identifier	ns		1931407	0					
ANR	1931413	CompoundStatement		4:2:15:29	1931407	1					
ANR	1931414	IdentifierDeclStatement	xmlNsPtr xmlns ;	3597:2:110857:110871	1931407	0	True				
ANR	1931415	IdentifierDecl	xmlns		1931407	0					
ANR	1931416	IdentifierDeclType	xmlNsPtr		1931407	0					
ANR	1931417	Identifier	xmlns		1931407	1					
ANR	1931418	IfStatement	"if ( SOAP_GLOBAL ( soap_version ) == SOAP_1_2 && strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0 )"		1931407	1					
ANR	1931419	Condition	"SOAP_GLOBAL ( soap_version ) == SOAP_1_2 && strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0"	3598:6:110879:110963	1931407	0	True				
ANR	1931420	AndExpression	"SOAP_GLOBAL ( soap_version ) == SOAP_1_2 && strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0"		1931407	0		&&			
ANR	1931421	EqualityExpression	SOAP_GLOBAL ( soap_version ) == SOAP_1_2		1931407	0		==			
ANR	1931422	CallExpression	SOAP_GLOBAL ( soap_version )		1931407	0					
ANR	1931423	Callee	SOAP_GLOBAL		1931407	0					
ANR	1931424	Identifier	SOAP_GLOBAL		1931407	0					
ANR	1931425	ArgumentList	soap_version		1931407	1					
ANR	1931426	Argument	soap_version		1931407	0					
ANR	1931427	Identifier	soap_version		1931407	0					
ANR	1931428	Identifier	SOAP_1_2		1931407	1					
ANR	1931429	EqualityExpression	"strcmp ( ns , SOAP_1_1_ENC_NAMESPACE ) == 0"		1931407	1		==			
ANR	1931430	CallExpression	"strcmp ( ns , SOAP_1_1_ENC_NAMESPACE )"		1931407	0					
ANR	1931431	Callee	strcmp		1931407	0					
ANR	1931432	Identifier	strcmp		1931407	0					
ANR	1931433	ArgumentList	ns		1931407	1					
ANR	1931434	Argument	ns		1931407	0					
ANR	1931435	Identifier	ns		1931407	0					
ANR	1931436	Argument	SOAP_1_1_ENC_NAMESPACE		1931407	1					
ANR	1931437	Identifier	SOAP_1_1_ENC_NAMESPACE		1931407	0					
ANR	1931438	PrimaryExpression	0		1931407	1					
ANR	1931439	CompoundStatement		6:46:124:124	1931407	1					
ANR	1931440	ExpressionStatement	ns = SOAP_1_2_ENC_NAMESPACE	3600:3:110971:110998	1931407	0	True				
ANR	1931441	AssignmentExpression	ns = SOAP_1_2_ENC_NAMESPACE		1931407	0		=			
ANR	1931442	Identifier	ns		1931407	0					
ANR	1931443	Identifier	SOAP_1_2_ENC_NAMESPACE		1931407	1					
ANR	1931444	ElseStatement	else		1931407	0					
ANR	1931445	IfStatement	"if ( SOAP_GLOBAL ( soap_version ) == SOAP_1_1 && strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0 )"		1931407	0					
ANR	1931446	Condition	"SOAP_GLOBAL ( soap_version ) == SOAP_1_1 && strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0"	3601:13:111013:111104	1931407	0	True				
ANR	1931447	AndExpression	"SOAP_GLOBAL ( soap_version ) == SOAP_1_1 && strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0"		1931407	0		&&			
ANR	1931448	EqualityExpression	SOAP_GLOBAL ( soap_version ) == SOAP_1_1		1931407	0		==			
ANR	1931449	CallExpression	SOAP_GLOBAL ( soap_version )		1931407	0					
ANR	1931450	Callee	SOAP_GLOBAL		1931407	0					
ANR	1931451	Identifier	SOAP_GLOBAL		1931407	0					
ANR	1931452	ArgumentList	soap_version		1931407	1					
ANR	1931453	Argument	soap_version		1931407	0					
ANR	1931454	Identifier	soap_version		1931407	0					
ANR	1931455	Identifier	SOAP_1_1		1931407	1					
ANR	1931456	EqualityExpression	"strcmp ( ns , SOAP_1_2_ENC_NAMESPACE ) == 0"		1931407	1		==			
ANR	1931457	CallExpression	"strcmp ( ns , SOAP_1_2_ENC_NAMESPACE )"		1931407	0					
ANR	1931458	Callee	strcmp		1931407	0					
ANR	1931459	Identifier	strcmp		1931407	0					
ANR	1931460	ArgumentList	ns		1931407	1					
ANR	1931461	Argument	ns		1931407	0					
ANR	1931462	Identifier	ns		1931407	0					
ANR	1931463	Argument	SOAP_1_2_ENC_NAMESPACE		1931407	1					
ANR	1931464	Identifier	SOAP_1_2_ENC_NAMESPACE		1931407	0					
ANR	1931465	PrimaryExpression	0		1931407	1					
ANR	1931466	CompoundStatement		9:53:265:265	1931407	1					
ANR	1931467	ExpressionStatement	ns = SOAP_1_1_ENC_NAMESPACE	3603:3:111112:111139	1931407	0	True				
ANR	1931468	AssignmentExpression	ns = SOAP_1_1_ENC_NAMESPACE		1931407	0		=			
ANR	1931469	Identifier	ns		1931407	0					
ANR	1931470	Identifier	SOAP_1_1_ENC_NAMESPACE		1931407	1					
ANR	1931471	ExpressionStatement	"xmlns = encode_add_ns ( node , ns )"	3605:2:111147:111178	1931407	2	True				
ANR	1931472	AssignmentExpression	"xmlns = encode_add_ns ( node , ns )"		1931407	0		=			
ANR	1931473	Identifier	xmlns		1931407	0					
ANR	1931474	CallExpression	"encode_add_ns ( node , ns )"		1931407	1					
ANR	1931475	Callee	encode_add_ns		1931407	0					
ANR	1931476	Identifier	encode_add_ns		1931407	0					
ANR	1931477	ArgumentList	node		1931407	1					
ANR	1931478	Argument	node		1931407	0					
ANR	1931479	Identifier	node		1931407	0					
ANR	1931480	Argument	ns		1931407	1					
ANR	1931481	Identifier	ns		1931407	0					
ANR	1931482	ExpressionStatement	"smart_str_appends ( ret , ( char * ) xmlns -> prefix )"	3606:2:111182:111226	1931407	3	True				
ANR	1931483	CallExpression	"smart_str_appends ( ret , ( char * ) xmlns -> prefix )"		1931407	0					
ANR	1931484	Callee	smart_str_appends		1931407	0					
ANR	1931485	Identifier	smart_str_appends		1931407	0					
ANR	1931486	ArgumentList	ret		1931407	1					
ANR	1931487	Argument	ret		1931407	0					
ANR	1931488	Identifier	ret		1931407	0					
ANR	1931489	Argument	( char * ) xmlns -> prefix		1931407	1					
ANR	1931490	CastExpression	( char * ) xmlns -> prefix		1931407	0					
ANR	1931491	CastTarget	char *		1931407	0					
ANR	1931492	PtrMemberAccess	xmlns -> prefix		1931407	1					
ANR	1931493	Identifier	xmlns		1931407	0					
ANR	1931494	Identifier	prefix		1931407	1					
ANR	1931495	ExpressionStatement	"smart_str_appendc ( ret , ':' )"	3607:2:111230:111257	1931407	4	True				
ANR	1931496	CallExpression	"smart_str_appendc ( ret , ':' )"		1931407	0					
ANR	1931497	Callee	smart_str_appendc		1931407	0					
ANR	1931498	Identifier	smart_str_appendc		1931407	0					
ANR	1931499	ArgumentList	ret		1931407	1					
ANR	1931500	Argument	ret		1931407	0					
ANR	1931501	Identifier	ret		1931407	0					
ANR	1931502	Argument	':'		1931407	1					
ANR	1931503	PrimaryExpression	':'		1931407	0					
ANR	1931504	ExpressionStatement	"smart_str_appendl ( ret , type , strlen ( type ) )"	3609:1:111263:111305	1931407	1	True				
ANR	1931505	CallExpression	"smart_str_appendl ( ret , type , strlen ( type ) )"		1931407	0					
ANR	1931506	Callee	smart_str_appendl		1931407	0					
ANR	1931507	Identifier	smart_str_appendl		1931407	0					
ANR	1931508	ArgumentList	ret		1931407	1					
ANR	1931509	Argument	ret		1931407	0					
ANR	1931510	Identifier	ret		1931407	0					
ANR	1931511	Argument	type		1931407	1					
ANR	1931512	Identifier	type		1931407	0					
ANR	1931513	Argument	strlen ( type )		1931407	2					
ANR	1931514	CallExpression	strlen ( type )		1931407	0					
ANR	1931515	Callee	strlen		1931407	0					
ANR	1931516	Identifier	strlen		1931407	0					
ANR	1931517	ArgumentList	type		1931407	1					
ANR	1931518	Argument	type		1931407	0					
ANR	1931519	Identifier	type		1931407	0					
ANR	1931520	ExpressionStatement	smart_str_0 ( ret )	3610:1:111308:111324	1931407	2	True				
ANR	1931521	CallExpression	smart_str_0 ( ret )		1931407	0					
ANR	1931522	Callee	smart_str_0		1931407	0					
ANR	1931523	Identifier	smart_str_0		1931407	0					
ANR	1931524	ArgumentList	ret		1931407	1					
ANR	1931525	Argument	ret		1931407	0					
ANR	1931526	Identifier	ret		1931407	0					
ANR	1931527	ReturnType	static void		1931407	1					
ANR	1931528	Identifier	get_type_str		1931407	2					
ANR	1931529	ParameterList	"xmlNodePtr node , const char * ns , const char * type , smart_str * ret"		1931407	3					
ANR	1931530	Parameter	xmlNodePtr node	3593:25:110774:110788	1931407	0	True				
ANR	1931531	ParameterType	xmlNodePtr		1931407	0					
ANR	1931532	Identifier	node		1931407	1					
ANR	1931533	Parameter	const char * ns	3593:42:110791:110804	1931407	1	True				
ANR	1931534	ParameterType	const char *		1931407	0					
ANR	1931535	Identifier	ns		1931407	1					
ANR	1931536	Parameter	const char * type	3593:58:110807:110822	1931407	2	True				
ANR	1931537	ParameterType	const char *		1931407	0					
ANR	1931538	Identifier	type		1931407	1					
ANR	1931539	Parameter	smart_str * ret	3593:76:110825:110838	1931407	3	True				
ANR	1931540	ParameterType	smart_str *		1931407	0					
ANR	1931541	Identifier	ret		1931407	1					
ANR	1931542	CFGEntryNode	ENTRY		1931407		True				
ANR	1931543	CFGExitNode	EXIT		1931407		True				
ANR	1931544	Symbol	ret		1931407						
ANR	1931545	Symbol	strcmp		1931407						
ANR	1931546	Symbol	SOAP_1_1		1931407						
ANR	1931547	Symbol	SOAP_1_1_ENC_NAMESPACE		1931407						
ANR	1931548	Symbol	encode_add_ns		1931407						
ANR	1931549	Symbol	ns		1931407						
ANR	1931550	Symbol	xmlns -> prefix		1931407						
ANR	1931551	Symbol	* xmlns		1931407						
ANR	1931552	Symbol	type		1931407						
ANR	1931553	Symbol	SOAP_GLOBAL		1931407						
ANR	1931554	Symbol	node		1931407						
ANR	1931555	Symbol	strlen		1931407						
ANR	1931556	Symbol	xmlns		1931407						
ANR	1931557	Symbol	SOAP_1_2_ENC_NAMESPACE		1931407						
ANR	1931558	Symbol	soap_version		1931407						
ANR	1931559	Symbol	SOAP_1_2		1931407						
ANR	1931560	Function	delete_mapping	3613:0:111329:111489							
ANR	1931561	FunctionDef	delete_mapping (void * data)		1931560	0					
ANR	1931562	CompoundStatement		3614:0:111368:111489	1931560	0					
ANR	1931563	IdentifierDeclStatement	soapMappingPtr map = ( soapMappingPtr ) data ;	3615:1:111371:111412	1931560	0	True				
ANR	1931564	IdentifierDecl	map = ( soapMappingPtr ) data		1931560	0					
ANR	1931565	IdentifierDeclType	soapMappingPtr		1931560	0					
ANR	1931566	Identifier	map		1931560	1					
ANR	1931567	AssignmentExpression	map = ( soapMappingPtr ) data		1931560	2		=			
ANR	1931568	Identifier	map		1931560	0					
ANR	1931569	CastExpression	( soapMappingPtr ) data		1931560	1					
ANR	1931570	CastTarget	soapMappingPtr		1931560	0					
ANR	1931571	Identifier	data		1931560	1					
ANR	1931572	ExpressionStatement	zval_ptr_dtor ( & map -> to_xml )	3617:1:111416:111443	1931560	1	True				
ANR	1931573	CallExpression	zval_ptr_dtor ( & map -> to_xml )		1931560	0					
ANR	1931574	Callee	zval_ptr_dtor		1931560	0					
ANR	1931575	Identifier	zval_ptr_dtor		1931560	0					
ANR	1931576	ArgumentList	& map -> to_xml		1931560	1					
ANR	1931577	Argument	& map -> to_xml		1931560	0					
ANR	1931578	UnaryOperationExpression	& map -> to_xml		1931560	0					
ANR	1931579	UnaryOperator	&		1931560	0					
ANR	1931580	PtrMemberAccess	map -> to_xml		1931560	1					
ANR	1931581	Identifier	map		1931560	0					
ANR	1931582	Identifier	to_xml		1931560	1					
ANR	1931583	ExpressionStatement	zval_ptr_dtor ( & map -> to_zval )	3618:1:111446:111474	1931560	2	True				
ANR	1931584	CallExpression	zval_ptr_dtor ( & map -> to_zval )		1931560	0					
ANR	1931585	Callee	zval_ptr_dtor		1931560	0					
ANR	1931586	Identifier	zval_ptr_dtor		1931560	0					
ANR	1931587	ArgumentList	& map -> to_zval		1931560	1					
ANR	1931588	Argument	& map -> to_zval		1931560	0					
ANR	1931589	UnaryOperationExpression	& map -> to_zval		1931560	0					
ANR	1931590	UnaryOperator	&		1931560	0					
ANR	1931591	PtrMemberAccess	map -> to_zval		1931560	1					
ANR	1931592	Identifier	map		1931560	0					
ANR	1931593	Identifier	to_zval		1931560	1					
ANR	1931594	ExpressionStatement	efree ( map )	3619:1:111477:111487	1931560	3	True				
ANR	1931595	CallExpression	efree ( map )		1931560	0					
ANR	1931596	Callee	efree		1931560	0					
ANR	1931597	Identifier	efree		1931560	0					
ANR	1931598	ArgumentList	map		1931560	1					
ANR	1931599	Argument	map		1931560	0					
ANR	1931600	Identifier	map		1931560	0					
ANR	1931601	ReturnType	static void		1931560	1					
ANR	1931602	Identifier	delete_mapping		1931560	2					
ANR	1931603	ParameterList	void * data		1931560	3					
ANR	1931604	Parameter	void * data	3613:27:111356:111365	1931560	0	True				
ANR	1931605	ParameterType	void *		1931560	0					
ANR	1931606	Identifier	data		1931560	1					
ANR	1931607	CFGEntryNode	ENTRY		1931560		True				
ANR	1931608	CFGExitNode	EXIT		1931560		True				
ANR	1931609	Symbol	& map -> to_zval		1931560						
ANR	1931610	Symbol	data		1931560						
ANR	1931611	Symbol	& map -> to_xml		1931560						
ANR	1931612	Symbol	map		1931560						
ANR	1931613	Function	delete_encoder	3622:0:111492:111733							
ANR	1931614	FunctionDef	delete_encoder (zval * zv)		1931613	0					
ANR	1931615	CompoundStatement		3623:0:111522:111733	1931613	0					
ANR	1931616	IdentifierDeclStatement	encodePtr t = Z_PTR_P ( zv ) ;	3624:1:111525:111550	1931613	0	True				
ANR	1931617	IdentifierDecl	t = Z_PTR_P ( zv )		1931613	0					
ANR	1931618	IdentifierDeclType	encodePtr		1931613	0					
ANR	1931619	Identifier	t		1931613	1					
ANR	1931620	AssignmentExpression	t = Z_PTR_P ( zv )		1931613	2		=			
ANR	1931621	Identifier	t		1931613	0					
ANR	1931622	CallExpression	Z_PTR_P ( zv )		1931613	1					
ANR	1931623	Callee	Z_PTR_P		1931613	0					
ANR	1931624	Identifier	Z_PTR_P		1931613	0					
ANR	1931625	ArgumentList	zv		1931613	1					
ANR	1931626	Argument	zv		1931613	0					
ANR	1931627	Identifier	zv		1931613	0					
ANR	1931628	IfStatement	if ( t -> details . ns )		1931613	1					
ANR	1931629	Condition	t -> details . ns	3625:5:111557:111569	1931613	0	True				
ANR	1931630	MemberAccess	t -> details . ns		1931613	0					
ANR	1931631	PtrMemberAccess	t -> details		1931613	0					
ANR	1931632	Identifier	t		1931613	0					
ANR	1931633	Identifier	details		1931613	1					
ANR	1931634	Identifier	ns		1931613	1					
ANR	1931635	CompoundStatement		3:20:49:49	1931613	1					
ANR	1931636	ExpressionStatement	efree ( t -> details . ns )	3626:2:111576:111596	1931613	0	True				
ANR	1931637	CallExpression	efree ( t -> details . ns )		1931613	0					
ANR	1931638	Callee	efree		1931613	0					
ANR	1931639	Identifier	efree		1931613	0					
ANR	1931640	ArgumentList	t -> details . ns		1931613	1					
ANR	1931641	Argument	t -> details . ns		1931613	0					
ANR	1931642	MemberAccess	t -> details . ns		1931613	0					
ANR	1931643	PtrMemberAccess	t -> details		1931613	0					
ANR	1931644	Identifier	t		1931613	0					
ANR	1931645	Identifier	details		1931613	1					
ANR	1931646	Identifier	ns		1931613	1					
ANR	1931647	IfStatement	if ( t -> details . type_str )		1931613	2					
ANR	1931648	Condition	t -> details . type_str	3628:5:111606:111624	1931613	0	True				
ANR	1931649	MemberAccess	t -> details . type_str		1931613	0					
ANR	1931650	PtrMemberAccess	t -> details		1931613	0					
ANR	1931651	Identifier	t		1931613	0					
ANR	1931652	Identifier	details		1931613	1					
ANR	1931653	Identifier	type_str		1931613	1					
ANR	1931654	CompoundStatement		6:26:104:104	1931613	1					
ANR	1931655	ExpressionStatement	efree ( t -> details . type_str )	3629:2:111631:111657	1931613	0	True				
ANR	1931656	CallExpression	efree ( t -> details . type_str )		1931613	0					
ANR	1931657	Callee	efree		1931613	0					
ANR	1931658	Identifier	efree		1931613	0					
ANR	1931659	ArgumentList	t -> details . type_str		1931613	1					
ANR	1931660	Argument	t -> details . type_str		1931613	0					
ANR	1931661	MemberAccess	t -> details . type_str		1931613	0					
ANR	1931662	PtrMemberAccess	t -> details		1931613	0					
ANR	1931663	Identifier	t		1931613	0					
ANR	1931664	Identifier	details		1931613	1					
ANR	1931665	Identifier	type_str		1931613	1					
ANR	1931666	IfStatement	if ( t -> details . map )		1931613	3					
ANR	1931667	Condition	t -> details . map	3631:5:111667:111680	1931613	0	True				
ANR	1931668	MemberAccess	t -> details . map		1931613	0					
ANR	1931669	PtrMemberAccess	t -> details		1931613	0					
ANR	1931670	Identifier	t		1931613	0					
ANR	1931671	Identifier	details		1931613	1					
ANR	1931672	Identifier	map		1931613	1					
ANR	1931673	CompoundStatement		9:21:160:160	1931613	1					
ANR	1931674	ExpressionStatement	delete_mapping ( t -> details . map )	3632:2:111687:111717	1931613	0	True				
ANR	1931675	CallExpression	delete_mapping ( t -> details . map )		1931613	0					
ANR	1931676	Callee	delete_mapping		1931613	0					
ANR	1931677	Identifier	delete_mapping		1931613	0					
ANR	1931678	ArgumentList	t -> details . map		1931613	1					
ANR	1931679	Argument	t -> details . map		1931613	0					
ANR	1931680	MemberAccess	t -> details . map		1931613	0					
ANR	1931681	PtrMemberAccess	t -> details		1931613	0					
ANR	1931682	Identifier	t		1931613	0					
ANR	1931683	Identifier	details		1931613	1					
ANR	1931684	Identifier	map		1931613	1					
ANR	1931685	ExpressionStatement	efree ( t )	3634:1:111723:111731	1931613	4	True				
ANR	1931686	CallExpression	efree ( t )		1931613	0					
ANR	1931687	Callee	efree		1931613	0					
ANR	1931688	Identifier	efree		1931613	0					
ANR	1931689	ArgumentList	t		1931613	1					
ANR	1931690	Argument	t		1931613	0					
ANR	1931691	Identifier	t		1931613	0					
ANR	1931692	ReturnType	void		1931613	1					
ANR	1931693	Identifier	delete_encoder		1931613	2					
ANR	1931694	ParameterList	zval * zv		1931613	3					
ANR	1931695	Parameter	zval * zv	3622:20:111512:111519	1931613	0	True				
ANR	1931696	ParameterType	zval *		1931613	0					
ANR	1931697	Identifier	zv		1931613	1					
ANR	1931698	CFGEntryNode	ENTRY		1931613		True				
ANR	1931699	CFGExitNode	EXIT		1931613		True				
ANR	1931700	Symbol	t -> details		1931613						
ANR	1931701	Symbol	Z_PTR_P		1931613						
ANR	1931702	Symbol	t		1931613						
ANR	1931703	Symbol	t -> details . map		1931613						
ANR	1931704	Symbol	t -> details . type_str		1931613						
ANR	1931705	Symbol	zv		1931613						
ANR	1931706	Symbol	t -> details . ns		1931613						
ANR	1931707	Symbol	* t		1931613						
ANR	1931708	Function	delete_encoder_persistent	3637:0:111736:112016							
ANR	1931709	FunctionDef	delete_encoder_persistent (zval * zv)		1931708	0					
ANR	1931710	CompoundStatement		3638:0:111777:112016	1931708	0					
ANR	1931711	IdentifierDeclStatement	encodePtr t = Z_PTR_P ( zv ) ;	3639:1:111780:111805	1931708	0	True				
ANR	1931712	IdentifierDecl	t = Z_PTR_P ( zv )		1931708	0					
ANR	1931713	IdentifierDeclType	encodePtr		1931708	0					
ANR	1931714	Identifier	t		1931708	1					
ANR	1931715	AssignmentExpression	t = Z_PTR_P ( zv )		1931708	2		=			
ANR	1931716	Identifier	t		1931708	0					
ANR	1931717	CallExpression	Z_PTR_P ( zv )		1931708	1					
ANR	1931718	Callee	Z_PTR_P		1931708	0					
ANR	1931719	Identifier	Z_PTR_P		1931708	0					
ANR	1931720	ArgumentList	zv		1931708	1					
ANR	1931721	Argument	zv		1931708	0					
ANR	1931722	Identifier	zv		1931708	0					
ANR	1931723	IfStatement	if ( t -> details . ns )		1931708	1					
ANR	1931724	Condition	t -> details . ns	3640:5:111812:111824	1931708	0	True				
ANR	1931725	MemberAccess	t -> details . ns		1931708	0					
ANR	1931726	PtrMemberAccess	t -> details		1931708	0					
ANR	1931727	Identifier	t		1931708	0					
ANR	1931728	Identifier	details		1931708	1					
ANR	1931729	Identifier	ns		1931708	1					
ANR	1931730	CompoundStatement		3:20:49:49	1931708	1					
ANR	1931731	ExpressionStatement	free ( t -> details . ns )	3641:2:111831:111850	1931708	0	True				
ANR	1931732	CallExpression	free ( t -> details . ns )		1931708	0					
ANR	1931733	Callee	free		1931708	0					
ANR	1931734	Identifier	free		1931708	0					
ANR	1931735	ArgumentList	t -> details . ns		1931708	1					
ANR	1931736	Argument	t -> details . ns		1931708	0					
ANR	1931737	MemberAccess	t -> details . ns		1931708	0					
ANR	1931738	PtrMemberAccess	t -> details		1931708	0					
ANR	1931739	Identifier	t		1931708	0					
ANR	1931740	Identifier	details		1931708	1					
ANR	1931741	Identifier	ns		1931708	1					
ANR	1931742	IfStatement	if ( t -> details . type_str )		1931708	2					
ANR	1931743	Condition	t -> details . type_str	3643:5:111860:111878	1931708	0	True				
ANR	1931744	MemberAccess	t -> details . type_str		1931708	0					
ANR	1931745	PtrMemberAccess	t -> details		1931708	0					
ANR	1931746	Identifier	t		1931708	0					
ANR	1931747	Identifier	details		1931708	1					
ANR	1931748	Identifier	type_str		1931708	1					
ANR	1931749	CompoundStatement		6:26:103:103	1931708	1					
ANR	1931750	ExpressionStatement	free ( t -> details . type_str )	3644:2:111885:111910	1931708	0	True				
ANR	1931751	CallExpression	free ( t -> details . type_str )		1931708	0					
ANR	1931752	Callee	free		1931708	0					
ANR	1931753	Identifier	free		1931708	0					
ANR	1931754	ArgumentList	t -> details . type_str		1931708	1					
ANR	1931755	Argument	t -> details . type_str		1931708	0					
ANR	1931756	MemberAccess	t -> details . type_str		1931708	0					
ANR	1931757	PtrMemberAccess	t -> details		1931708	0					
ANR	1931758	Identifier	t		1931708	0					
ANR	1931759	Identifier	details		1931708	1					
ANR	1931760	Identifier	type_str		1931708	1					
ANR	1931761	ExpressionStatement	assert ( t -> details . map == NULL )	3647:1:111974:112004	1931708	3	True				
ANR	1931762	CallExpression	assert ( t -> details . map == NULL )		1931708	0					
ANR	1931763	Callee	assert		1931708	0					
ANR	1931764	Identifier	assert		1931708	0					
ANR	1931765	ArgumentList	t -> details . map == NULL		1931708	1					
ANR	1931766	Argument	t -> details . map == NULL		1931708	0					
ANR	1931767	EqualityExpression	t -> details . map == NULL		1931708	0		==			
ANR	1931768	MemberAccess	t -> details . map		1931708	0					
ANR	1931769	PtrMemberAccess	t -> details		1931708	0					
ANR	1931770	Identifier	t		1931708	0					
ANR	1931771	Identifier	details		1931708	1					
ANR	1931772	Identifier	map		1931708	1					
ANR	1931773	Identifier	NULL		1931708	1					
ANR	1931774	ExpressionStatement	free ( t )	3648:1:112007:112014	1931708	4	True				
ANR	1931775	CallExpression	free ( t )		1931708	0					
ANR	1931776	Callee	free		1931708	0					
ANR	1931777	Identifier	free		1931708	0					
ANR	1931778	ArgumentList	t		1931708	1					
ANR	1931779	Argument	t		1931708	0					
ANR	1931780	Identifier	t		1931708	0					
ANR	1931781	ReturnType	void		1931708	1					
ANR	1931782	Identifier	delete_encoder_persistent		1931708	2					
ANR	1931783	ParameterList	zval * zv		1931708	3					
ANR	1931784	Parameter	zval * zv	3637:31:111767:111774	1931708	0	True				
ANR	1931785	ParameterType	zval *		1931708	0					
ANR	1931786	Identifier	zv		1931708	1					
ANR	1931787	CFGEntryNode	ENTRY		1931708		True				
ANR	1931788	CFGExitNode	EXIT		1931708		True				
ANR	1931789	Symbol	t -> details		1931708						
ANR	1931790	Symbol	Z_PTR_P		1931708						
ANR	1931791	Symbol	NULL		1931708						
ANR	1931792	Symbol	t		1931708						
ANR	1931793	Symbol	t -> details . map		1931708						
ANR	1931794	Symbol	t -> details . type_str		1931708						
ANR	1931795	Symbol	zv		1931708						
ANR	1931796	Symbol	t -> details . ns		1931708						
ANR	1931797	Symbol	* t		1931708						
