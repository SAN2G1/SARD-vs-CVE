command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	993292	File	data/converged/CVE-2015-8617_php-src/ext_intl_locale_locale_methods.c								
ANR	993293	DeclStmt									
ANR	993294	Decl							const int	const int	LOC_PREFERRED_GRANDFATHERED_LEN
ANR	993295	Function	getPreferredTag	124:0:3931:4385							
ANR	993296	FunctionDef	getPreferredTag (const char * gf_tag)		993295	0					
ANR	993297	CompoundStatement		125:0:3980:4385	993295	0					
ANR	993298	IdentifierDeclStatement	char * result = NULL ;	126:1:3983:4002	993295	0	True				
ANR	993299	IdentifierDecl	* result = NULL		993295	0					
ANR	993300	IdentifierDeclType	char *		993295	0					
ANR	993301	Identifier	result		993295	1					
ANR	993302	AssignmentExpression	* result = NULL		993295	2		=			
ANR	993303	Identifier	NULL		993295	0					
ANR	993304	Identifier	NULL		993295	1					
ANR	993305	IdentifierDeclStatement	int grOffset = 0 ;	127:1:4005:4021	993295	1	True				
ANR	993306	IdentifierDecl	grOffset = 0		993295	0					
ANR	993307	IdentifierDeclType	int		993295	0					
ANR	993308	Identifier	grOffset		993295	1					
ANR	993309	AssignmentExpression	grOffset = 0		993295	2		=			
ANR	993310	Identifier	grOffset		993295	0					
ANR	993311	PrimaryExpression	0		993295	1					
ANR	993312	ExpressionStatement	"grOffset = findOffset ( LOC_GRANDFATHERED , gf_tag )"	129:1:4025:4074	993295	2	True				
ANR	993313	AssignmentExpression	"grOffset = findOffset ( LOC_GRANDFATHERED , gf_tag )"		993295	0		=			
ANR	993314	Identifier	grOffset		993295	0					
ANR	993315	CallExpression	"findOffset ( LOC_GRANDFATHERED , gf_tag )"		993295	1					
ANR	993316	Callee	findOffset		993295	0					
ANR	993317	Identifier	findOffset		993295	0					
ANR	993318	ArgumentList	LOC_GRANDFATHERED		993295	1					
ANR	993319	Argument	LOC_GRANDFATHERED		993295	0					
ANR	993320	Identifier	LOC_GRANDFATHERED		993295	0					
ANR	993321	Argument	gf_tag		993295	1					
ANR	993322	Identifier	gf_tag		993295	0					
ANR	993323	IfStatement	if ( grOffset < 0 )		993295	3					
ANR	993324	Condition	grOffset < 0	130:4:4080:4091	993295	0	True				
ANR	993325	RelationalExpression	grOffset < 0		993295	0		<			
ANR	993326	Identifier	grOffset		993295	0					
ANR	993327	PrimaryExpression	0		993295	1					
ANR	993328	CompoundStatement		6:18:113:113	993295	1					
ANR	993329	ReturnStatement	return NULL ;	131:2:4098:4109	993295	0	True				
ANR	993330	Identifier	NULL		993295	0					
ANR	993331	IfStatement	if ( grOffset < LOC_PREFERRED_GRANDFATHERED_LEN )		993295	4					
ANR	993332	Condition	grOffset < LOC_PREFERRED_GRANDFATHERED_LEN	133:5:4119:4160	993295	0	True				
ANR	993333	RelationalExpression	grOffset < LOC_PREFERRED_GRANDFATHERED_LEN		993295	0		<			
ANR	993334	Identifier	grOffset		993295	0					
ANR	993335	Identifier	LOC_PREFERRED_GRANDFATHERED_LEN		993295	1					
ANR	993336	CompoundStatement		9:49:182:182	993295	1					
ANR	993337	ExpressionStatement	result = estrdup ( LOC_PREFERRED_GRANDFATHERED [ grOffset ] )	135:2:4196:4253	993295	0	True				
ANR	993338	AssignmentExpression	result = estrdup ( LOC_PREFERRED_GRANDFATHERED [ grOffset ] )		993295	0		=			
ANR	993339	Identifier	result		993295	0					
ANR	993340	CallExpression	estrdup ( LOC_PREFERRED_GRANDFATHERED [ grOffset ] )		993295	1					
ANR	993341	Callee	estrdup		993295	0					
ANR	993342	Identifier	estrdup		993295	0					
ANR	993343	ArgumentList	LOC_PREFERRED_GRANDFATHERED [ grOffset ]		993295	1					
ANR	993344	Argument	LOC_PREFERRED_GRANDFATHERED [ grOffset ]		993295	0					
ANR	993345	ArrayIndexing	LOC_PREFERRED_GRANDFATHERED [ grOffset ]		993295	0					
ANR	993346	Identifier	LOC_PREFERRED_GRANDFATHERED		993295	0					
ANR	993347	Identifier	grOffset		993295	1					
ANR	993348	ElseStatement	else		993295	0					
ANR	993349	CompoundStatement		12:8:282:282	993295	0					
ANR	993350	ExpressionStatement	result = estrdup ( LOC_GRANDFATHERED [ grOffset ] )	138:2:4317:4364	993295	0	True				
ANR	993351	AssignmentExpression	result = estrdup ( LOC_GRANDFATHERED [ grOffset ] )		993295	0		=			
ANR	993352	Identifier	result		993295	0					
ANR	993353	CallExpression	estrdup ( LOC_GRANDFATHERED [ grOffset ] )		993295	1					
ANR	993354	Callee	estrdup		993295	0					
ANR	993355	Identifier	estrdup		993295	0					
ANR	993356	ArgumentList	LOC_GRANDFATHERED [ grOffset ]		993295	1					
ANR	993357	Argument	LOC_GRANDFATHERED [ grOffset ]		993295	0					
ANR	993358	ArrayIndexing	LOC_GRANDFATHERED [ grOffset ]		993295	0					
ANR	993359	Identifier	LOC_GRANDFATHERED		993295	0					
ANR	993360	Identifier	grOffset		993295	1					
ANR	993361	ReturnStatement	return result ;	140:1:4370:4383	993295	5	True				
ANR	993362	Identifier	result		993295	0					
ANR	993363	ReturnType	static char *		993295	1					
ANR	993364	Identifier	getPreferredTag		993295	2					
ANR	993365	ParameterList	const char * gf_tag		993295	3					
ANR	993366	Parameter	const char * gf_tag	124:29:3960:3977	993295	0	True				
ANR	993367	ParameterType	const char *		993295	0					
ANR	993368	Identifier	gf_tag		993295	1					
ANR	993369	CFGEntryNode	ENTRY		993295		True				
ANR	993370	CFGExitNode	EXIT		993295		True				
ANR	993371	Symbol	result		993295						
ANR	993372	Symbol	* grOffset		993295						
ANR	993373	Symbol	NULL		993295						
ANR	993374	Symbol	* LOC_PREFERRED_GRANDFATHERED		993295						
ANR	993375	Symbol	grOffset		993295						
ANR	993376	Symbol	LOC_GRANDFATHERED		993295						
ANR	993377	Symbol	gf_tag		993295						
ANR	993378	Symbol	LOC_PREFERRED_GRANDFATHERED		993295						
ANR	993379	Symbol	estrdup		993295						
ANR	993380	Symbol	LOC_PREFERRED_GRANDFATHERED_LEN		993295						
ANR	993381	Symbol	findOffset		993295						
ANR	993382	Symbol	* LOC_GRANDFATHERED		993295						
ANR	993383	Function	getStrrtokenPos	148:0:4525:5014							
ANR	993384	FunctionDef	"getStrrtokenPos (char * str , int savedPos)"		993383	0					
ANR	993385	CompoundStatement		149:0:4577:5014	993383	0					
ANR	993386	IdentifierDeclStatement	int result = - 1 ;	150:1:4580:4594	993383	0	True				
ANR	993387	IdentifierDecl	result = - 1		993383	0					
ANR	993388	IdentifierDeclType	int		993383	0					
ANR	993389	Identifier	result		993383	1					
ANR	993390	AssignmentExpression	result = - 1		993383	2		=			
ANR	993391	Identifier	result		993383	0					
ANR	993392	UnaryOperationExpression	- 1		993383	1					
ANR	993393	UnaryOperator	-		993383	0					
ANR	993394	PrimaryExpression	1		993383	1					
ANR	993395	IdentifierDeclStatement	int i ;	151:1:4597:4602	993383	1	True				
ANR	993396	IdentifierDecl	i		993383	0					
ANR	993397	IdentifierDeclType	int		993383	0					
ANR	993398	Identifier	i		993383	1					
ANR	993399	ForStatement	for ( i = savedPos - 1 ; i >= 0 ; i -- )		993383	2					
ANR	993400	ForInit	i = savedPos - 1 ;	153:5:4610:4622	993383	0	True				
ANR	993401	AssignmentExpression	i = savedPos - 1		993383	0		=			
ANR	993402	Identifier	i		993383	0					
ANR	993403	AdditiveExpression	savedPos - 1		993383	1		-			
ANR	993404	Identifier	savedPos		993383	0					
ANR	993405	PrimaryExpression	1		993383	1					
ANR	993406	Condition	i >= 0	153:19:4624:4627	993383	1	True				
ANR	993407	RelationalExpression	i >= 0		993383	0		>=			
ANR	993408	Identifier	i		993383	0					
ANR	993409	PrimaryExpression	0		993383	1					
ANR	993410	PostIncDecOperationExpression	i --	153:25:4630:4632	993383	2	True				
ANR	993411	Identifier	i		993383	0					
ANR	993412	IncDec	--		993383	1					
ANR	993413	CompoundStatement		5:30:57:57	993383	3					
ANR	993414	IfStatement	if ( isIDSeparator ( * ( str + i ) ) )		993383	0					
ANR	993415	Condition	isIDSeparator ( * ( str + i ) )	154:5:4642:4664	993383	0	True				
ANR	993416	CallExpression	isIDSeparator ( * ( str + i ) )		993383	0					
ANR	993417	Callee	isIDSeparator		993383	0					
ANR	993418	Identifier	isIDSeparator		993383	0					
ANR	993419	ArgumentList	* ( str + i )		993383	1					
ANR	993420	Argument	* ( str + i )		993383	0					
ANR	993421	UnaryOperationExpression	* ( str + i )		993383	0					
ANR	993422	UnaryOperator	*		993383	0					
ANR	993423	AdditiveExpression	str + i		993383	1		+			
ANR	993424	Identifier	str		993383	0					
ANR	993425	Identifier	i		993383	1					
ANR	993426	CompoundStatement		6:30:89:89	993383	1					
ANR	993427	IfStatement	if ( i >= 2 && isIDSeparator ( * ( str + i - 2 ) ) )		993383	0					
ANR	993428	Condition	i >= 2 && isIDSeparator ( * ( str + i - 2 ) )	156:6:4721:4753	993383	0	True				
ANR	993429	AndExpression	i >= 2 && isIDSeparator ( * ( str + i - 2 ) )		993383	0		&&			
ANR	993430	RelationalExpression	i >= 2		993383	0		>=			
ANR	993431	Identifier	i		993383	0					
ANR	993432	PrimaryExpression	2		993383	1					
ANR	993433	CallExpression	isIDSeparator ( * ( str + i - 2 ) )		993383	1					
ANR	993434	Callee	isIDSeparator		993383	0					
ANR	993435	Identifier	isIDSeparator		993383	0					
ANR	993436	ArgumentList	* ( str + i - 2 )		993383	1					
ANR	993437	Argument	* ( str + i - 2 )		993383	0					
ANR	993438	UnaryOperationExpression	* ( str + i - 2 )		993383	0					
ANR	993439	UnaryOperator	*		993383	0					
ANR	993440	AdditiveExpression	str + i - 2		993383	1		+			
ANR	993441	Identifier	str		993383	0					
ANR	993442	AdditiveExpression	i - 2		993383	1		-			
ANR	993443	Identifier	i		993383	0					
ANR	993444	PrimaryExpression	2		993383	1					
ANR	993445	CompoundStatement		8:41:178:178	993383	1					
ANR	993446	ExpressionStatement	result = i - 2	158:4:4836:4848	993383	0	True				
ANR	993447	AssignmentExpression	result = i - 2		993383	0		=			
ANR	993448	Identifier	result		993383	0					
ANR	993449	AdditiveExpression	i - 2		993383	1		-			
ANR	993450	Identifier	i		993383	0					
ANR	993451	PrimaryExpression	2		993383	1					
ANR	993452	ElseStatement	else		993383	0					
ANR	993453	CompoundStatement		11:10:282:282	993383	0					
ANR	993454	ExpressionStatement	result = i	160:4:4866:4876	993383	0	True				
ANR	993455	AssignmentExpression	result = i		993383	0		=			
ANR	993456	Identifier	result		993383	0					
ANR	993457	Identifier	i		993383	1					
ANR	993458	BreakStatement	break ;	162:3:4886:4891	993383	1	True				
ANR	993459	IfStatement	if ( result < 1 )		993383	3					
ANR	993460	Condition	result < 1	165:4:4904:4913	993383	0	True				
ANR	993461	RelationalExpression	result < 1		993383	0		<			
ANR	993462	Identifier	result		993383	0					
ANR	993463	PrimaryExpression	1		993383	1					
ANR	993464	CompoundStatement		17:15:337:337	993383	1					
ANR	993465	ExpressionStatement	result = - 1	167:2:4983:4993	993383	0	True				
ANR	993466	AssignmentExpression	result = - 1		993383	0		=			
ANR	993467	Identifier	result		993383	0					
ANR	993468	UnaryOperationExpression	- 1		993383	1					
ANR	993469	UnaryOperator	-		993383	0					
ANR	993470	PrimaryExpression	1		993383	1					
ANR	993471	ReturnStatement	return result ;	169:1:4999:5012	993383	4	True				
ANR	993472	Identifier	result		993383	0					
ANR	993473	ReturnType	static int		993383	1					
ANR	993474	Identifier	getStrrtokenPos		993383	2					
ANR	993475	ParameterList	"char * str , int savedPos"		993383	3					
ANR	993476	Parameter	char * str	148:27:4552:4560	993383	0	True				
ANR	993477	ParameterType	char *		993383	0					
ANR	993478	Identifier	str		993383	1					
ANR	993479	Parameter	int savedPos	148:38:4563:4574	993383	1	True				
ANR	993480	ParameterType	int		993383	0					
ANR	993481	Identifier	savedPos		993383	1					
ANR	993482	CFGEntryNode	ENTRY		993383		True				
ANR	993483	CFGExitNode	EXIT		993383		True				
ANR	993484	Symbol	str		993383						
ANR	993485	Symbol	savedPos		993383						
ANR	993486	Symbol	result		993383						
ANR	993487	Symbol	* ( str + i )		993383						
ANR	993488	Symbol	* i		993383						
ANR	993489	Symbol	i		993383						
ANR	993490	Symbol	* str		993383						
ANR	993491	Symbol	* ( str + i - 2 )		993383						
ANR	993492	Symbol	isIDSeparator		993383						
ANR	993493	Function	getSingletonPos	178:0:5156:5699							
ANR	993494	FunctionDef	getSingletonPos (const char * str)		993493	0					
ANR	993495	CompoundStatement		179:0:5200:5699	993493	0					
ANR	993496	IdentifierDeclStatement	int result = - 1 ;	180:1:5203:5217	993493	0	True				
ANR	993497	IdentifierDecl	result = - 1		993493	0					
ANR	993498	IdentifierDeclType	int		993493	0					
ANR	993499	Identifier	result		993493	1					
ANR	993500	AssignmentExpression	result = - 1		993493	2		=			
ANR	993501	Identifier	result		993493	0					
ANR	993502	UnaryOperationExpression	- 1		993493	1					
ANR	993503	UnaryOperator	-		993493	0					
ANR	993504	PrimaryExpression	1		993493	1					
ANR	993505	IdentifierDeclStatement	int i = 0 ;	181:1:5220:5227	993493	1	True				
ANR	993506	IdentifierDecl	i = 0		993493	0					
ANR	993507	IdentifierDeclType	int		993493	0					
ANR	993508	Identifier	i		993493	1					
ANR	993509	AssignmentExpression	i = 0		993493	2		=			
ANR	993510	Identifier	i		993493	0					
ANR	993511	PrimaryExpression	0		993493	1					
ANR	993512	IdentifierDeclStatement	int len = 0 ;	182:1:5230:5241	993493	2	True				
ANR	993513	IdentifierDecl	len = 0		993493	0					
ANR	993514	IdentifierDeclType	int		993493	0					
ANR	993515	Identifier	len		993493	1					
ANR	993516	AssignmentExpression	len = 0		993493	2		=			
ANR	993517	Identifier	len		993493	0					
ANR	993518	PrimaryExpression	0		993493	1					
ANR	993519	IfStatement	if ( str && ( ( len = strlen ( str ) ) > 0 ) )		993493	3					
ANR	993520	Condition	str && ( ( len = strlen ( str ) ) > 0 )	184:5:5249:5276	993493	0	True				
ANR	993521	AndExpression	str && ( ( len = strlen ( str ) ) > 0 )		993493	0		&&			
ANR	993522	Identifier	str		993493	0					
ANR	993523	RelationalExpression	( len = strlen ( str ) ) > 0		993493	1		>			
ANR	993524	AssignmentExpression	len = strlen ( str )		993493	0		=			
ANR	993525	Identifier	len		993493	0					
ANR	993526	CallExpression	strlen ( str )		993493	1					
ANR	993527	Callee	strlen		993493	0					
ANR	993528	Identifier	strlen		993493	0					
ANR	993529	ArgumentList	str		993493	1					
ANR	993530	Argument	str		993493	0					
ANR	993531	Identifier	str		993493	0					
ANR	993532	PrimaryExpression	0		993493	1					
ANR	993533	CompoundStatement		6:35:78:78	993493	1					
ANR	993534	ForStatement	for ( i = 0 ; i < len ; i ++ )		993493	0					
ANR	993535	ForInit	i = 0 ;	185:7:5288:5291	993493	0	True				
ANR	993536	AssignmentExpression	i = 0		993493	0		=			
ANR	993537	Identifier	i		993493	0					
ANR	993538	PrimaryExpression	0		993493	1					
ANR	993539	Condition	i < len	185:12:5293:5297	993493	1	True				
ANR	993540	RelationalExpression	i < len		993493	0		<			
ANR	993541	Identifier	i		993493	0					
ANR	993542	Identifier	len		993493	1					
ANR	993543	PostIncDecOperationExpression	i ++	185:20:5301:5303	993493	2	True				
ANR	993544	Identifier	i		993493	0					
ANR	993545	IncDec	++		993493	1					
ANR	993546	CompoundStatement		7:24:104:104	993493	3					
ANR	993547	IfStatement	if ( isIDSeparator ( * ( str + i ) ) )		993493	0					
ANR	993548	Condition	isIDSeparator ( * ( str + i ) )	186:7:5314:5336	993493	0	True				
ANR	993549	CallExpression	isIDSeparator ( * ( str + i ) )		993493	0					
ANR	993550	Callee	isIDSeparator		993493	0					
ANR	993551	Identifier	isIDSeparator		993493	0					
ANR	993552	ArgumentList	* ( str + i )		993493	1					
ANR	993553	Argument	* ( str + i )		993493	0					
ANR	993554	UnaryOperationExpression	* ( str + i )		993493	0					
ANR	993555	UnaryOperator	*		993493	0					
ANR	993556	AdditiveExpression	str + i		993493	1		+			
ANR	993557	Identifier	str		993493	0					
ANR	993558	Identifier	i		993493	1					
ANR	993559	CompoundStatement		8:32:138:138	993493	1					
ANR	993560	IfStatement	if ( i == 1 )		993493	0					
ANR	993561	Condition	i == 1	187:8:5349:5352	993493	0	True				
ANR	993562	EqualityExpression	i == 1		993493	0		==			
ANR	993563	Identifier	i		993493	0					
ANR	993564	PrimaryExpression	1		993493	1					
ANR	993565	CompoundStatement		9:13:153:153	993493	1					
ANR	993566	ExpressionStatement	result = 0	189:5:5410:5419	993493	0	True				
ANR	993567	AssignmentExpression	result = 0		993493	0		=			
ANR	993568	Identifier	result		993493	0					
ANR	993569	PrimaryExpression	0		993493	1					
ANR	993570	BreakStatement	break ;	190:5:5426:5431	993493	1	True				
ANR	993571	ElseStatement	else		993493	0					
ANR	993572	CompoundStatement		13:11:243:243	993493	0					
ANR	993573	IfStatement	if ( isIDSeparator ( * ( str + i + 2 ) ) )		993493	0					
ANR	993574	Condition	isIDSeparator ( * ( str + i + 2 ) )	193:9:5503:5527	993493	0	True				
ANR	993575	CallExpression	isIDSeparator ( * ( str + i + 2 ) )		993493	0					
ANR	993576	Callee	isIDSeparator		993493	0					
ANR	993577	Identifier	isIDSeparator		993493	0					
ANR	993578	ArgumentList	* ( str + i + 2 )		993493	1					
ANR	993579	Argument	* ( str + i + 2 )		993493	0					
ANR	993580	UnaryOperationExpression	* ( str + i + 2 )		993493	0					
ANR	993581	UnaryOperator	*		993493	0					
ANR	993582	AdditiveExpression	str + i + 2		993493	1		+			
ANR	993583	Identifier	str		993493	0					
ANR	993584	AdditiveExpression	i + 2		993493	1		+			
ANR	993585	Identifier	i		993493	0					
ANR	993586	PrimaryExpression	2		993493	1					
ANR	993587	CompoundStatement		15:36:329:329	993493	1					
ANR	993588	ExpressionStatement	result = i + 1	195:6:5614:5626	993493	0	True				
ANR	993589	AssignmentExpression	result = i + 1		993493	0		=			
ANR	993590	Identifier	result		993493	0					
ANR	993591	AdditiveExpression	i + 1		993493	1		+			
ANR	993592	Identifier	i		993493	0					
ANR	993593	PrimaryExpression	1		993493	1					
ANR	993594	BreakStatement	break ;	196:6:5634:5639	993493	1	True				
ANR	993595	ReturnStatement	return result ;	203:1:5684:5697	993493	4	True				
ANR	993596	Identifier	result		993493	0					
ANR	993597	ReturnType	static int		993493	1					
ANR	993598	Identifier	getSingletonPos		993493	2					
ANR	993599	ParameterList	const char * str		993493	3					
ANR	993600	Parameter	const char * str	178:27:5183:5197	993493	0	True				
ANR	993601	ParameterType	const char *		993493	0					
ANR	993602	Identifier	str		993493	1					
ANR	993603	CFGEntryNode	ENTRY		993493		True				
ANR	993604	CFGExitNode	EXIT		993493		True				
ANR	993605	Symbol	str		993493						
ANR	993606	Symbol	result		993493						
ANR	993607	Symbol	strlen		993493						
ANR	993608	Symbol	* ( str + i )		993493						
ANR	993609	Symbol	* i		993493						
ANR	993610	Symbol	len		993493						
ANR	993611	Symbol	i		993493						
ANR	993612	Symbol	* ( str + i + 2 )		993493						
ANR	993613	Symbol	* str		993493						
ANR	993614	Symbol	isIDSeparator		993493						
ANR	993615	DeclStmt									
ANR	993616	Decl							zend_string	zend_string *	locale_name
ANR	993617	DeclStmt									
ANR	993618	Decl							zend_string	zend_string *	ini_name
ANR	993619	DeclStmt									
ANR	993620	Decl							char	char *	default_locale
ANR	993621	Function	get_icu_value_internal	259:0:7135:10206							
ANR	993622	FunctionDef	"get_icu_value_internal (const char * loc_name , char * tag_name , int * result , int fromParseLocale)"		993621	0					
ANR	993623	CompoundStatement		260:0:7253:10206	993621	0					
ANR	993624	IdentifierDeclStatement	zend_string * tag_value = NULL ;	261:1:7256:7285	993621	0	True				
ANR	993625	IdentifierDecl	* tag_value = NULL		993621	0					
ANR	993626	IdentifierDeclType	zend_string *		993621	0					
ANR	993627	Identifier	tag_value		993621	1					
ANR	993628	AssignmentExpression	* tag_value = NULL		993621	2		=			
ANR	993629	Identifier	NULL		993621	0					
ANR	993630	Identifier	NULL		993621	1					
ANR	993631	IdentifierDeclStatement	int32_t tag_value_len = 512 ;	262:1:7288:7322	993621	1	True				
ANR	993632	IdentifierDecl	tag_value_len = 512		993621	0					
ANR	993633	IdentifierDeclType	int32_t		993621	0					
ANR	993634	Identifier	tag_value_len		993621	1					
ANR	993635	AssignmentExpression	tag_value_len = 512		993621	2		=			
ANR	993636	Identifier	tag_value_len		993621	0					
ANR	993637	PrimaryExpression	512		993621	1					
ANR	993638	IdentifierDeclStatement	int singletonPos = 0 ;	264:1:7326:7350	993621	2	True				
ANR	993639	IdentifierDecl	singletonPos = 0		993621	0					
ANR	993640	IdentifierDeclType	int		993621	0					
ANR	993641	Identifier	singletonPos		993621	1					
ANR	993642	AssignmentExpression	singletonPos = 0		993621	2		=			
ANR	993643	Identifier	singletonPos		993621	0					
ANR	993644	PrimaryExpression	0		993621	1					
ANR	993645	IdentifierDeclStatement	char * mod_loc_name = NULL ;	265:1:7353:7385	993621	3	True				
ANR	993646	IdentifierDecl	* mod_loc_name = NULL		993621	0					
ANR	993647	IdentifierDeclType	char *		993621	0					
ANR	993648	Identifier	mod_loc_name		993621	1					
ANR	993649	AssignmentExpression	* mod_loc_name = NULL		993621	2		=			
ANR	993650	Identifier	NULL		993621	0					
ANR	993651	Identifier	NULL		993621	1					
ANR	993652	IdentifierDeclStatement	int grOffset = 0 ;	266:1:7388:7406	993621	4	True				
ANR	993653	IdentifierDecl	grOffset = 0		993621	0					
ANR	993654	IdentifierDeclType	int		993621	0					
ANR	993655	Identifier	grOffset		993621	1					
ANR	993656	AssignmentExpression	grOffset = 0		993621	2		=			
ANR	993657	Identifier	grOffset		993621	0					
ANR	993658	PrimaryExpression	0		993621	1					
ANR	993659	IdentifierDeclStatement	int32_t buflen = 512 ;	268:1:7410:7444	993621	5	True				
ANR	993660	IdentifierDecl	buflen = 512		993621	0					
ANR	993661	IdentifierDeclType	int32_t		993621	0					
ANR	993662	Identifier	buflen		993621	1					
ANR	993663	AssignmentExpression	buflen = 512		993621	2		=			
ANR	993664	Identifier	buflen		993621	0					
ANR	993665	PrimaryExpression	512		993621	1					
ANR	993666	IdentifierDeclStatement	UErrorCode status = U_ZERO_ERROR ;	269:1:7447:7490	993621	6	True				
ANR	993667	IdentifierDecl	status = U_ZERO_ERROR		993621	0					
ANR	993668	IdentifierDeclType	UErrorCode		993621	0					
ANR	993669	Identifier	status		993621	1					
ANR	993670	AssignmentExpression	status = U_ZERO_ERROR		993621	2		=			
ANR	993671	Identifier	U_ZERO_ERROR		993621	0					
ANR	993672	Identifier	U_ZERO_ERROR		993621	1					
ANR	993673	IfStatement	"if ( strcmp ( tag_name , LOC_CANONICALIZE_TAG ) != 0 )"		993621	7					
ANR	993674	Condition	"strcmp ( tag_name , LOC_CANONICALIZE_TAG ) != 0"	272:5:7499:7541	993621	0	True				
ANR	993675	EqualityExpression	"strcmp ( tag_name , LOC_CANONICALIZE_TAG ) != 0"		993621	0		!=			
ANR	993676	CallExpression	"strcmp ( tag_name , LOC_CANONICALIZE_TAG )"		993621	0					
ANR	993677	Callee	strcmp		993621	0					
ANR	993678	Identifier	strcmp		993621	0					
ANR	993679	ArgumentList	tag_name		993621	1					
ANR	993680	Argument	tag_name		993621	0					
ANR	993681	Identifier	tag_name		993621	0					
ANR	993682	Argument	LOC_CANONICALIZE_TAG		993621	1					
ANR	993683	Identifier	LOC_CANONICALIZE_TAG		993621	0					
ANR	993684	PrimaryExpression	0		993621	1					
ANR	993685	CompoundStatement		13:50:290:290	993621	1					
ANR	993686	ExpressionStatement	"grOffset = findOffset ( LOC_GRANDFATHERED , loc_name )"	274:2:7588:7642	993621	0	True				
ANR	993687	AssignmentExpression	"grOffset = findOffset ( LOC_GRANDFATHERED , loc_name )"		993621	0		=			
ANR	993688	Identifier	grOffset		993621	0					
ANR	993689	CallExpression	"findOffset ( LOC_GRANDFATHERED , loc_name )"		993621	1					
ANR	993690	Callee	findOffset		993621	0					
ANR	993691	Identifier	findOffset		993621	0					
ANR	993692	ArgumentList	LOC_GRANDFATHERED		993621	1					
ANR	993693	Argument	LOC_GRANDFATHERED		993621	0					
ANR	993694	Identifier	LOC_GRANDFATHERED		993621	0					
ANR	993695	Argument	loc_name		993621	1					
ANR	993696	Identifier	loc_name		993621	0					
ANR	993697	IfStatement	if ( grOffset >= 0 )		993621	1					
ANR	993698	Condition	grOffset >= 0	275:6:7650:7662	993621	0	True				
ANR	993699	RelationalExpression	grOffset >= 0		993621	0		>=			
ANR	993700	Identifier	grOffset		993621	0					
ANR	993701	PrimaryExpression	0		993621	1					
ANR	993702	CompoundStatement		16:21:411:411	993621	1					
ANR	993703	IfStatement	"if ( strcmp ( tag_name , LOC_LANG_TAG ) == 0 )"		993621	0					
ANR	993704	Condition	"strcmp ( tag_name , LOC_LANG_TAG ) == 0"	276:7:7674:7707	993621	0	True				
ANR	993705	EqualityExpression	"strcmp ( tag_name , LOC_LANG_TAG ) == 0"		993621	0		==			
ANR	993706	CallExpression	"strcmp ( tag_name , LOC_LANG_TAG )"		993621	0					
ANR	993707	Callee	strcmp		993621	0					
ANR	993708	Identifier	strcmp		993621	0					
ANR	993709	ArgumentList	tag_name		993621	1					
ANR	993710	Argument	tag_name		993621	0					
ANR	993711	Identifier	tag_name		993621	0					
ANR	993712	Argument	LOC_LANG_TAG		993621	1					
ANR	993713	Identifier	LOC_LANG_TAG		993621	0					
ANR	993714	PrimaryExpression	0		993621	1					
ANR	993715	CompoundStatement		17:43:456:456	993621	1					
ANR	993716	ReturnStatement	"return zend_string_init ( loc_name , strlen ( loc_name ) , 0 ) ;"	277:4:7716:7770	993621	0	True				
ANR	993717	CallExpression	"zend_string_init ( loc_name , strlen ( loc_name ) , 0 )"		993621	0					
ANR	993718	Callee	zend_string_init		993621	0					
ANR	993719	Identifier	zend_string_init		993621	0					
ANR	993720	ArgumentList	loc_name		993621	1					
ANR	993721	Argument	loc_name		993621	0					
ANR	993722	Identifier	loc_name		993621	0					
ANR	993723	Argument	strlen ( loc_name )		993621	1					
ANR	993724	CallExpression	strlen ( loc_name )		993621	0					
ANR	993725	Callee	strlen		993621	0					
ANR	993726	Identifier	strlen		993621	0					
ANR	993727	ArgumentList	loc_name		993621	1					
ANR	993728	Argument	loc_name		993621	0					
ANR	993729	Identifier	loc_name		993621	0					
ANR	993730	Argument	0		993621	2					
ANR	993731	PrimaryExpression	0		993621	0					
ANR	993732	ElseStatement	else		993621	0					
ANR	993733	CompoundStatement		19:10:528:528	993621	0					
ANR	993734	ReturnStatement	return NULL ;	280:4:7856:7867	993621	0	True				
ANR	993735	Identifier	NULL		993621	0					
ANR	993736	IfStatement	if ( fromParseLocale == 1 )		993621	2					
ANR	993737	Condition	fromParseLocale == 1	284:5:7884:7901	993621	0	True				
ANR	993738	EqualityExpression	fromParseLocale == 1		993621	0		==			
ANR	993739	Identifier	fromParseLocale		993621	0					
ANR	993740	PrimaryExpression	1		993621	1					
ANR	993741	CompoundStatement		25:25:650:650	993621	1					
ANR	993742	IfStatement	"if ( strcmp ( tag_name , LOC_LANG_TAG ) == 0 )"		993621	0					
ANR	993743	Condition	"strcmp ( tag_name , LOC_LANG_TAG ) == 0"	286:6:7938:7971	993621	0	True				
ANR	993744	EqualityExpression	"strcmp ( tag_name , LOC_LANG_TAG ) == 0"		993621	0		==			
ANR	993745	CallExpression	"strcmp ( tag_name , LOC_LANG_TAG )"		993621	0					
ANR	993746	Callee	strcmp		993621	0					
ANR	993747	Identifier	strcmp		993621	0					
ANR	993748	ArgumentList	tag_name		993621	1					
ANR	993749	Argument	tag_name		993621	0					
ANR	993750	Identifier	tag_name		993621	0					
ANR	993751	Argument	LOC_LANG_TAG		993621	1					
ANR	993752	Identifier	LOC_LANG_TAG		993621	0					
ANR	993753	PrimaryExpression	0		993621	1					
ANR	993754	CompoundStatement		27:42:720:720	993621	1					
ANR	993755	IfStatement	if ( strlen ( loc_name ) > 1 && ( isIDPrefix ( loc_name ) == 1 ) )		993621	0					
ANR	993756	Condition	strlen ( loc_name ) > 1 && ( isIDPrefix ( loc_name ) == 1 )	287:7:7983:8031	993621	0	True				
ANR	993757	AndExpression	strlen ( loc_name ) > 1 && ( isIDPrefix ( loc_name ) == 1 )		993621	0		&&			
ANR	993758	RelationalExpression	strlen ( loc_name ) > 1		993621	0		>			
ANR	993759	CallExpression	strlen ( loc_name )		993621	0					
ANR	993760	Callee	strlen		993621	0					
ANR	993761	Identifier	strlen		993621	0					
ANR	993762	ArgumentList	loc_name		993621	1					
ANR	993763	Argument	loc_name		993621	0					
ANR	993764	Identifier	loc_name		993621	0					
ANR	993765	PrimaryExpression	1		993621	1					
ANR	993766	EqualityExpression	isIDPrefix ( loc_name ) == 1		993621	1		==			
ANR	993767	CallExpression	isIDPrefix ( loc_name )		993621	0					
ANR	993768	Callee	isIDPrefix		993621	0					
ANR	993769	Identifier	isIDPrefix		993621	0					
ANR	993770	ArgumentList	loc_name		993621	1					
ANR	993771	Argument	loc_name		993621	0					
ANR	993772	Identifier	loc_name		993621	0					
ANR	993773	PrimaryExpression	1		993621	1					
ANR	993774	CompoundStatement		28:58:780:780	993621	1					
ANR	993775	ReturnStatement	"return zend_string_init ( loc_name , strlen ( loc_name ) , 0 ) ;"	288:4:8040:8094	993621	0	True				
ANR	993776	CallExpression	"zend_string_init ( loc_name , strlen ( loc_name ) , 0 )"		993621	0					
ANR	993777	Callee	zend_string_init		993621	0					
ANR	993778	Identifier	zend_string_init		993621	0					
ANR	993779	ArgumentList	loc_name		993621	1					
ANR	993780	Argument	loc_name		993621	0					
ANR	993781	Identifier	loc_name		993621	0					
ANR	993782	Argument	strlen ( loc_name )		993621	1					
ANR	993783	CallExpression	strlen ( loc_name )		993621	0					
ANR	993784	Callee	strlen		993621	0					
ANR	993785	Identifier	strlen		993621	0					
ANR	993786	ArgumentList	loc_name		993621	1					
ANR	993787	Argument	loc_name		993621	0					
ANR	993788	Identifier	loc_name		993621	0					
ANR	993789	Argument	0		993621	2					
ANR	993790	PrimaryExpression	0		993621	0					
ANR	993791	ExpressionStatement	singletonPos = getSingletonPos ( loc_name )	292:2:8108:8150	993621	1	True				
ANR	993792	AssignmentExpression	singletonPos = getSingletonPos ( loc_name )		993621	0		=			
ANR	993793	Identifier	singletonPos		993621	0					
ANR	993794	CallExpression	getSingletonPos ( loc_name )		993621	1					
ANR	993795	Callee	getSingletonPos		993621	0					
ANR	993796	Identifier	getSingletonPos		993621	0					
ANR	993797	ArgumentList	loc_name		993621	1					
ANR	993798	Argument	loc_name		993621	0					
ANR	993799	Identifier	loc_name		993621	0					
ANR	993800	IfStatement	if ( singletonPos == 0 )		993621	2					
ANR	993801	Condition	singletonPos == 0	293:6:8158:8174	993621	0	True				
ANR	993802	EqualityExpression	singletonPos == 0		993621	0		==			
ANR	993803	Identifier	singletonPos		993621	0					
ANR	993804	PrimaryExpression	0		993621	1					
ANR	993805	CompoundStatement		34:24:922:922	993621	1					
ANR	993806	ReturnStatement	return NULL ;	296:3:8290:8301	993621	0	True				
ANR	993807	Identifier	NULL		993621	0					
ANR	993808	ElseStatement	else		993621	0					
ANR	993809	IfStatement	if ( singletonPos > 0 )		993621	0					
ANR	993810	Condition	singletonPos > 0	297:13:8316:8331	993621	0	True				
ANR	993811	RelationalExpression	singletonPos > 0		993621	0		>			
ANR	993812	Identifier	singletonPos		993621	0					
ANR	993813	PrimaryExpression	0		993621	1					
ANR	993814	CompoundStatement		38:31:1080:1080	993621	1					
ANR	993815	ExpressionStatement	"mod_loc_name = estrndup ( loc_name , singletonPos - 1 )"	300:3:8446:8498	993621	0	True				
ANR	993816	AssignmentExpression	"mod_loc_name = estrndup ( loc_name , singletonPos - 1 )"		993621	0		=			
ANR	993817	Identifier	mod_loc_name		993621	0					
ANR	993818	CallExpression	"estrndup ( loc_name , singletonPos - 1 )"		993621	1					
ANR	993819	Callee	estrndup		993621	0					
ANR	993820	Identifier	estrndup		993621	0					
ANR	993821	ArgumentList	loc_name		993621	1					
ANR	993822	Argument	loc_name		993621	0					
ANR	993823	Identifier	loc_name		993621	0					
ANR	993824	Argument	singletonPos - 1		993621	1					
ANR	993825	AdditiveExpression	singletonPos - 1		993621	0		-			
ANR	993826	Identifier	singletonPos		993621	0					
ANR	993827	PrimaryExpression	1		993621	1					
ANR	993828	IfStatement	if ( mod_loc_name == NULL )		993621	8					
ANR	993829	Condition	mod_loc_name == NULL	306:5:8580:8599	993621	0	True				
ANR	993830	EqualityExpression	mod_loc_name == NULL		993621	0		==			
ANR	993831	Identifier	mod_loc_name		993621	0					
ANR	993832	Identifier	NULL		993621	1					
ANR	993833	CompoundStatement		47:26:1347:1347	993621	1					
ANR	993834	ExpressionStatement	mod_loc_name = estrdup ( loc_name )	307:2:8605:8638	993621	0	True				
ANR	993835	AssignmentExpression	mod_loc_name = estrdup ( loc_name )		993621	0		=			
ANR	993836	Identifier	mod_loc_name		993621	0					
ANR	993837	CallExpression	estrdup ( loc_name )		993621	1					
ANR	993838	Callee	estrdup		993621	0					
ANR	993839	Identifier	estrdup		993621	0					
ANR	993840	ArgumentList	loc_name		993621	1					
ANR	993841	Argument	loc_name		993621	0					
ANR	993842	Identifier	loc_name		993621	0					
ANR	993843	DoStatement	do		993621	9					
ANR	993844	CompoundStatement		52:3:1415:1415	993621	0					
ANR	993845	IfStatement	if ( tag_value )		993621	0					
ANR	993846	Condition	tag_value	312:6:8677:8685	993621	0	True				
ANR	993847	Identifier	tag_value		993621	0					
ANR	993848	CompoundStatement		53:17:1434:1434	993621	1					
ANR	993849	ExpressionStatement	"tag_value = zend_string_realloc ( tag_value , buflen , 0 )"	313:3:8693:8748	993621	0	True				
ANR	993850	AssignmentExpression	"tag_value = zend_string_realloc ( tag_value , buflen , 0 )"		993621	0		=			
ANR	993851	Identifier	tag_value		993621	0					
ANR	993852	CallExpression	"zend_string_realloc ( tag_value , buflen , 0 )"		993621	1					
ANR	993853	Callee	zend_string_realloc		993621	0					
ANR	993854	Identifier	zend_string_realloc		993621	0					
ANR	993855	ArgumentList	tag_value		993621	1					
ANR	993856	Argument	tag_value		993621	0					
ANR	993857	Identifier	tag_value		993621	0					
ANR	993858	Argument	buflen		993621	1					
ANR	993859	Identifier	buflen		993621	0					
ANR	993860	Argument	0		993621	2					
ANR	993861	PrimaryExpression	0		993621	0					
ANR	993862	ElseStatement	else		993621	0					
ANR	993863	CompoundStatement		55:9:1505:1505	993621	0					
ANR	993864	ExpressionStatement	"tag_value = zend_string_alloc ( buflen , 0 )"	315:3:8764:8805	993621	0	True				
ANR	993865	AssignmentExpression	"tag_value = zend_string_alloc ( buflen , 0 )"		993621	0		=			
ANR	993866	Identifier	tag_value		993621	0					
ANR	993867	CallExpression	"zend_string_alloc ( buflen , 0 )"		993621	1					
ANR	993868	Callee	zend_string_alloc		993621	0					
ANR	993869	Identifier	zend_string_alloc		993621	0					
ANR	993870	ArgumentList	buflen		993621	1					
ANR	993871	Argument	buflen		993621	0					
ANR	993872	Identifier	buflen		993621	0					
ANR	993873	Argument	0		993621	1					
ANR	993874	PrimaryExpression	0		993621	0					
ANR	993875	ExpressionStatement	tag_value_len = buflen	317:2:8813:8835	993621	1	True				
ANR	993876	AssignmentExpression	tag_value_len = buflen		993621	0		=			
ANR	993877	Identifier	tag_value_len		993621	0					
ANR	993878	Identifier	buflen		993621	1					
ANR	993879	IfStatement	"if ( strcmp ( tag_name , LOC_SCRIPT_TAG ) == 0 )"		993621	2					
ANR	993880	Condition	"strcmp ( tag_name , LOC_SCRIPT_TAG ) == 0"	319:6:8844:8879	993621	0	True				
ANR	993881	EqualityExpression	"strcmp ( tag_name , LOC_SCRIPT_TAG ) == 0"		993621	0		==			
ANR	993882	CallExpression	"strcmp ( tag_name , LOC_SCRIPT_TAG )"		993621	0					
ANR	993883	Callee	strcmp		993621	0					
ANR	993884	Identifier	strcmp		993621	0					
ANR	993885	ArgumentList	tag_name		993621	1					
ANR	993886	Argument	tag_name		993621	0					
ANR	993887	Identifier	tag_name		993621	0					
ANR	993888	Argument	LOC_SCRIPT_TAG		993621	1					
ANR	993889	Identifier	LOC_SCRIPT_TAG		993621	0					
ANR	993890	PrimaryExpression	0		993621	1					
ANR	993891	CompoundStatement		60:44:1628:1628	993621	1					
ANR	993892	ExpressionStatement	"buflen = uloc_getScript ( mod_loc_name , tag_value -> val , tag_value_len , & status )"	320:3:8887:8969	993621	0	True				
ANR	993893	AssignmentExpression	"buflen = uloc_getScript ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	0		=			
ANR	993894	Identifier	buflen		993621	0					
ANR	993895	CallExpression	"uloc_getScript ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	1					
ANR	993896	Callee	uloc_getScript		993621	0					
ANR	993897	Identifier	uloc_getScript		993621	0					
ANR	993898	ArgumentList	mod_loc_name		993621	1					
ANR	993899	Argument	mod_loc_name		993621	0					
ANR	993900	Identifier	mod_loc_name		993621	0					
ANR	993901	Argument	tag_value -> val		993621	1					
ANR	993902	PtrMemberAccess	tag_value -> val		993621	0					
ANR	993903	Identifier	tag_value		993621	0					
ANR	993904	Identifier	val		993621	1					
ANR	993905	Argument	tag_value_len		993621	2					
ANR	993906	Identifier	tag_value_len		993621	0					
ANR	993907	Argument	& status		993621	3					
ANR	993908	UnaryOperationExpression	& status		993621	0					
ANR	993909	UnaryOperator	&		993621	0					
ANR	993910	Identifier	status		993621	1					
ANR	993911	IfStatement	"if ( strcmp ( tag_name , LOC_LANG_TAG ) == 0 )"		993621	3					
ANR	993912	Condition	"strcmp ( tag_name , LOC_LANG_TAG ) == 0"	322:6:8981:9015	993621	0	True				
ANR	993913	EqualityExpression	"strcmp ( tag_name , LOC_LANG_TAG ) == 0"		993621	0		==			
ANR	993914	CallExpression	"strcmp ( tag_name , LOC_LANG_TAG )"		993621	0					
ANR	993915	Callee	strcmp		993621	0					
ANR	993916	Identifier	strcmp		993621	0					
ANR	993917	ArgumentList	tag_name		993621	1					
ANR	993918	Argument	tag_name		993621	0					
ANR	993919	Identifier	tag_name		993621	0					
ANR	993920	Argument	LOC_LANG_TAG		993621	1					
ANR	993921	Identifier	LOC_LANG_TAG		993621	0					
ANR	993922	PrimaryExpression	0		993621	1					
ANR	993923	CompoundStatement		63:43:1764:1764	993621	1					
ANR	993924	ExpressionStatement	"buflen = uloc_getLanguage ( mod_loc_name , tag_value -> val , tag_value_len , & status )"	323:3:9023:9107	993621	0	True				
ANR	993925	AssignmentExpression	"buflen = uloc_getLanguage ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	0		=			
ANR	993926	Identifier	buflen		993621	0					
ANR	993927	CallExpression	"uloc_getLanguage ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	1					
ANR	993928	Callee	uloc_getLanguage		993621	0					
ANR	993929	Identifier	uloc_getLanguage		993621	0					
ANR	993930	ArgumentList	mod_loc_name		993621	1					
ANR	993931	Argument	mod_loc_name		993621	0					
ANR	993932	Identifier	mod_loc_name		993621	0					
ANR	993933	Argument	tag_value -> val		993621	1					
ANR	993934	PtrMemberAccess	tag_value -> val		993621	0					
ANR	993935	Identifier	tag_value		993621	0					
ANR	993936	Identifier	val		993621	1					
ANR	993937	Argument	tag_value_len		993621	2					
ANR	993938	Identifier	tag_value_len		993621	0					
ANR	993939	Argument	& status		993621	3					
ANR	993940	UnaryOperationExpression	& status		993621	0					
ANR	993941	UnaryOperator	&		993621	0					
ANR	993942	Identifier	status		993621	1					
ANR	993943	IfStatement	"if ( strcmp ( tag_name , LOC_REGION_TAG ) == 0 )"		993621	4					
ANR	993944	Condition	"strcmp ( tag_name , LOC_REGION_TAG ) == 0"	325:6:9119:9154	993621	0	True				
ANR	993945	EqualityExpression	"strcmp ( tag_name , LOC_REGION_TAG ) == 0"		993621	0		==			
ANR	993946	CallExpression	"strcmp ( tag_name , LOC_REGION_TAG )"		993621	0					
ANR	993947	Callee	strcmp		993621	0					
ANR	993948	Identifier	strcmp		993621	0					
ANR	993949	ArgumentList	tag_name		993621	1					
ANR	993950	Argument	tag_name		993621	0					
ANR	993951	Identifier	tag_name		993621	0					
ANR	993952	Argument	LOC_REGION_TAG		993621	1					
ANR	993953	Identifier	LOC_REGION_TAG		993621	0					
ANR	993954	PrimaryExpression	0		993621	1					
ANR	993955	CompoundStatement		66:44:1903:1903	993621	1					
ANR	993956	ExpressionStatement	"buflen = uloc_getCountry ( mod_loc_name , tag_value -> val , tag_value_len , & status )"	326:3:9162:9245	993621	0	True				
ANR	993957	AssignmentExpression	"buflen = uloc_getCountry ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	0		=			
ANR	993958	Identifier	buflen		993621	0					
ANR	993959	CallExpression	"uloc_getCountry ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	1					
ANR	993960	Callee	uloc_getCountry		993621	0					
ANR	993961	Identifier	uloc_getCountry		993621	0					
ANR	993962	ArgumentList	mod_loc_name		993621	1					
ANR	993963	Argument	mod_loc_name		993621	0					
ANR	993964	Identifier	mod_loc_name		993621	0					
ANR	993965	Argument	tag_value -> val		993621	1					
ANR	993966	PtrMemberAccess	tag_value -> val		993621	0					
ANR	993967	Identifier	tag_value		993621	0					
ANR	993968	Identifier	val		993621	1					
ANR	993969	Argument	tag_value_len		993621	2					
ANR	993970	Identifier	tag_value_len		993621	0					
ANR	993971	Argument	& status		993621	3					
ANR	993972	UnaryOperationExpression	& status		993621	0					
ANR	993973	UnaryOperator	&		993621	0					
ANR	993974	Identifier	status		993621	1					
ANR	993975	IfStatement	"if ( strcmp ( tag_name , LOC_VARIANT_TAG ) == 0 )"		993621	5					
ANR	993976	Condition	"strcmp ( tag_name , LOC_VARIANT_TAG ) == 0"	328:6:9257:9293	993621	0	True				
ANR	993977	EqualityExpression	"strcmp ( tag_name , LOC_VARIANT_TAG ) == 0"		993621	0		==			
ANR	993978	CallExpression	"strcmp ( tag_name , LOC_VARIANT_TAG )"		993621	0					
ANR	993979	Callee	strcmp		993621	0					
ANR	993980	Identifier	strcmp		993621	0					
ANR	993981	ArgumentList	tag_name		993621	1					
ANR	993982	Argument	tag_name		993621	0					
ANR	993983	Identifier	tag_name		993621	0					
ANR	993984	Argument	LOC_VARIANT_TAG		993621	1					
ANR	993985	Identifier	LOC_VARIANT_TAG		993621	0					
ANR	993986	PrimaryExpression	0		993621	1					
ANR	993987	CompoundStatement		69:45:2042:2042	993621	1					
ANR	993988	ExpressionStatement	"buflen = uloc_getVariant ( mod_loc_name , tag_value -> val , tag_value_len , & status )"	329:3:9301:9384	993621	0	True				
ANR	993989	AssignmentExpression	"buflen = uloc_getVariant ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	0		=			
ANR	993990	Identifier	buflen		993621	0					
ANR	993991	CallExpression	"uloc_getVariant ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	1					
ANR	993992	Callee	uloc_getVariant		993621	0					
ANR	993993	Identifier	uloc_getVariant		993621	0					
ANR	993994	ArgumentList	mod_loc_name		993621	1					
ANR	993995	Argument	mod_loc_name		993621	0					
ANR	993996	Identifier	mod_loc_name		993621	0					
ANR	993997	Argument	tag_value -> val		993621	1					
ANR	993998	PtrMemberAccess	tag_value -> val		993621	0					
ANR	993999	Identifier	tag_value		993621	0					
ANR	994000	Identifier	val		993621	1					
ANR	994001	Argument	tag_value_len		993621	2					
ANR	994002	Identifier	tag_value_len		993621	0					
ANR	994003	Argument	& status		993621	3					
ANR	994004	UnaryOperationExpression	& status		993621	0					
ANR	994005	UnaryOperator	&		993621	0					
ANR	994006	Identifier	status		993621	1					
ANR	994007	IfStatement	"if ( strcmp ( tag_name , LOC_CANONICALIZE_TAG ) == 0 )"		993621	6					
ANR	994008	Condition	"strcmp ( tag_name , LOC_CANONICALIZE_TAG ) == 0"	331:6:9396:9437	993621	0	True				
ANR	994009	EqualityExpression	"strcmp ( tag_name , LOC_CANONICALIZE_TAG ) == 0"		993621	0		==			
ANR	994010	CallExpression	"strcmp ( tag_name , LOC_CANONICALIZE_TAG )"		993621	0					
ANR	994011	Callee	strcmp		993621	0					
ANR	994012	Identifier	strcmp		993621	0					
ANR	994013	ArgumentList	tag_name		993621	1					
ANR	994014	Argument	tag_name		993621	0					
ANR	994015	Identifier	tag_name		993621	0					
ANR	994016	Argument	LOC_CANONICALIZE_TAG		993621	1					
ANR	994017	Identifier	LOC_CANONICALIZE_TAG		993621	0					
ANR	994018	PrimaryExpression	0		993621	1					
ANR	994019	CompoundStatement		72:50:2186:2186	993621	1					
ANR	994020	ExpressionStatement	"buflen = uloc_canonicalize ( mod_loc_name , tag_value -> val , tag_value_len , & status )"	332:3:9445:9530	993621	0	True				
ANR	994021	AssignmentExpression	"buflen = uloc_canonicalize ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	0		=			
ANR	994022	Identifier	buflen		993621	0					
ANR	994023	CallExpression	"uloc_canonicalize ( mod_loc_name , tag_value -> val , tag_value_len , & status )"		993621	1					
ANR	994024	Callee	uloc_canonicalize		993621	0					
ANR	994025	Identifier	uloc_canonicalize		993621	0					
ANR	994026	ArgumentList	mod_loc_name		993621	1					
ANR	994027	Argument	mod_loc_name		993621	0					
ANR	994028	Identifier	mod_loc_name		993621	0					
ANR	994029	Argument	tag_value -> val		993621	1					
ANR	994030	PtrMemberAccess	tag_value -> val		993621	0					
ANR	994031	Identifier	tag_value		993621	0					
ANR	994032	Identifier	val		993621	1					
ANR	994033	Argument	tag_value_len		993621	2					
ANR	994034	Identifier	tag_value_len		993621	0					
ANR	994035	Argument	& status		993621	3					
ANR	994036	UnaryOperationExpression	& status		993621	0					
ANR	994037	UnaryOperator	&		993621	0					
ANR	994038	Identifier	status		993621	1					
ANR	994039	IfStatement	if ( U_FAILURE ( status ) )		993621	7					
ANR	994040	Condition	U_FAILURE ( status )	335:6:9543:9561	993621	0	True				
ANR	994041	CallExpression	U_FAILURE ( status )		993621	0					
ANR	994042	Callee	U_FAILURE		993621	0					
ANR	994043	Identifier	U_FAILURE		993621	0					
ANR	994044	ArgumentList	status		993621	1					
ANR	994045	Argument	status		993621	0					
ANR	994046	Identifier	status		993621	0					
ANR	994047	CompoundStatement		76:28:2311:2311	993621	1					
ANR	994048	IfStatement	if ( status == U_BUFFER_OVERFLOW_ERROR )		993621	0					
ANR	994049	Condition	status == U_BUFFER_OVERFLOW_ERROR	336:7:9574:9606	993621	0	True				
ANR	994050	EqualityExpression	status == U_BUFFER_OVERFLOW_ERROR		993621	0		==			
ANR	994051	Identifier	status		993621	0					
ANR	994052	Identifier	U_BUFFER_OVERFLOW_ERROR		993621	1					
ANR	994053	CompoundStatement		77:43:2356:2356	993621	1					
ANR	994054	ExpressionStatement	status = U_ZERO_ERROR	337:4:9616:9637	993621	0	True				
ANR	994055	AssignmentExpression	status = U_ZERO_ERROR		993621	0		=			
ANR	994056	Identifier	status		993621	0					
ANR	994057	Identifier	U_ZERO_ERROR		993621	1					
ANR	994058	ContinueStatement	continue ;	338:4:9643:9651	993621	1	True				
ANR	994059	ExpressionStatement	* result = 0	342:3:9695:9706	993621	1	True				
ANR	994060	AssignmentExpression	* result = 0		993621	0		=			
ANR	994061	UnaryOperationExpression	* result		993621	0					
ANR	994062	UnaryOperator	*		993621	0					
ANR	994063	Identifier	result		993621	1					
ANR	994064	PrimaryExpression	0		993621	1					
ANR	994065	IfStatement	if ( tag_value )		993621	2					
ANR	994066	Condition	tag_value	343:7:9715:9723	993621	0	True				
ANR	994067	Identifier	tag_value		993621	0					
ANR	994068	CompoundStatement		84:18:2472:2472	993621	1					
ANR	994069	ExpressionStatement	zend_string_release ( tag_value )	344:4:9732:9764	993621	0	True				
ANR	994070	CallExpression	zend_string_release ( tag_value )		993621	0					
ANR	994071	Callee	zend_string_release		993621	0					
ANR	994072	Identifier	zend_string_release		993621	0					
ANR	994073	ArgumentList	tag_value		993621	1					
ANR	994074	Argument	tag_value		993621	0					
ANR	994075	Identifier	tag_value		993621	0					
ANR	994076	IfStatement	if ( mod_loc_name )		993621	3					
ANR	994077	Condition	mod_loc_name	346:7:9778:9789	993621	0	True				
ANR	994078	Identifier	mod_loc_name		993621	0					
ANR	994079	CompoundStatement		87:21:2538:2538	993621	1					
ANR	994080	ExpressionStatement	efree ( mod_loc_name )	347:4:9798:9818	993621	0	True				
ANR	994081	CallExpression	efree ( mod_loc_name )		993621	0					
ANR	994082	Callee	efree		993621	0					
ANR	994083	Identifier	efree		993621	0					
ANR	994084	ArgumentList	mod_loc_name		993621	1					
ANR	994085	Argument	mod_loc_name		993621	0					
ANR	994086	Identifier	mod_loc_name		993621	0					
ANR	994087	ReturnStatement	return NULL ;	349:3:9828:9839	993621	4	True				
ANR	994088	Identifier	NULL		993621	0					
ANR	994089	Condition	buflen > tag_value_len	351:10:9855:9876	993621	1	True				
ANR	994090	RelationalExpression	buflen > tag_value_len		993621	0		>			
ANR	994091	Identifier	buflen		993621	0					
ANR	994092	Identifier	tag_value_len		993621	1					
ANR	994093	IfStatement	if ( buflen == 0 )		993621	10					
ANR	994094	Condition	buflen == 0	353:6:9888:9897	993621	0	True				
ANR	994095	EqualityExpression	buflen == 0		993621	0		==			
ANR	994096	Identifier	buflen		993621	0					
ANR	994097	PrimaryExpression	0		993621	1					
ANR	994098	CompoundStatement		94:18:2646:2646	993621	1					
ANR	994099	ExpressionStatement	* result = - 1	355:2:9927:9939	993621	0	True				
ANR	994100	AssignmentExpression	* result = - 1		993621	0		=			
ANR	994101	UnaryOperationExpression	* result		993621	0					
ANR	994102	UnaryOperator	*		993621	0					
ANR	994103	Identifier	result		993621	1					
ANR	994104	UnaryOperationExpression	- 1		993621	1					
ANR	994105	UnaryOperator	-		993621	0					
ANR	994106	PrimaryExpression	1		993621	1					
ANR	994107	IfStatement	if ( tag_value )		993621	1					
ANR	994108	Condition	tag_value	356:6:9947:9955	993621	0	True				
ANR	994109	Identifier	tag_value		993621	0					
ANR	994110	CompoundStatement		97:17:2704:2704	993621	1					
ANR	994111	ExpressionStatement	zend_string_release ( tag_value )	357:3:9963:9995	993621	0	True				
ANR	994112	CallExpression	zend_string_release ( tag_value )		993621	0					
ANR	994113	Callee	zend_string_release		993621	0					
ANR	994114	Identifier	zend_string_release		993621	0					
ANR	994115	ArgumentList	tag_value		993621	1					
ANR	994116	Argument	tag_value		993621	0					
ANR	994117	Identifier	tag_value		993621	0					
ANR	994118	IfStatement	if ( mod_loc_name )		993621	2					
ANR	994119	Condition	mod_loc_name	359:6:10007:10018	993621	0	True				
ANR	994120	Identifier	mod_loc_name		993621	0					
ANR	994121	CompoundStatement		100:20:2767:2767	993621	1					
ANR	994122	ExpressionStatement	efree ( mod_loc_name )	360:3:10026:10046	993621	0	True				
ANR	994123	CallExpression	efree ( mod_loc_name )		993621	0					
ANR	994124	Callee	efree		993621	0					
ANR	994125	Identifier	efree		993621	0					
ANR	994126	ArgumentList	mod_loc_name		993621	1					
ANR	994127	Argument	mod_loc_name		993621	0					
ANR	994128	Identifier	mod_loc_name		993621	0					
ANR	994129	ReturnStatement	return NULL ;	362:2:10054:10065	993621	3	True				
ANR	994130	Identifier	NULL		993621	0					
ANR	994131	ElseStatement	else		993621	0					
ANR	994132	CompoundStatement		104:8:2821:2821	993621	0					
ANR	994133	ExpressionStatement	* result = 1	364:2:10079:10090	993621	0	True				
ANR	994134	AssignmentExpression	* result = 1		993621	0		=			
ANR	994135	UnaryOperationExpression	* result		993621	0					
ANR	994136	UnaryOperator	*		993621	0					
ANR	994137	Identifier	result		993621	1					
ANR	994138	PrimaryExpression	1		993621	1					
ANR	994139	IfStatement	if ( mod_loc_name )		993621	11					
ANR	994140	Condition	mod_loc_name	367:5:10101:10112	993621	0	True				
ANR	994141	Identifier	mod_loc_name		993621	0					
ANR	994142	CompoundStatement		108:19:2861:2861	993621	1					
ANR	994143	ExpressionStatement	efree ( mod_loc_name )	368:2:10119:10139	993621	0	True				
ANR	994144	CallExpression	efree ( mod_loc_name )		993621	0					
ANR	994145	Callee	efree		993621	0					
ANR	994146	Identifier	efree		993621	0					
ANR	994147	ArgumentList	mod_loc_name		993621	1					
ANR	994148	Argument	mod_loc_name		993621	0					
ANR	994149	Identifier	mod_loc_name		993621	0					
ANR	994150	ExpressionStatement	tag_value -> len = strlen ( tag_value -> val )	371:1:10146:10185	993621	12	True				
ANR	994151	AssignmentExpression	tag_value -> len = strlen ( tag_value -> val )		993621	0		=			
ANR	994152	PtrMemberAccess	tag_value -> len		993621	0					
ANR	994153	Identifier	tag_value		993621	0					
ANR	994154	Identifier	len		993621	1					
ANR	994155	CallExpression	strlen ( tag_value -> val )		993621	1					
ANR	994156	Callee	strlen		993621	0					
ANR	994157	Identifier	strlen		993621	0					
ANR	994158	ArgumentList	tag_value -> val		993621	1					
ANR	994159	Argument	tag_value -> val		993621	0					
ANR	994160	PtrMemberAccess	tag_value -> val		993621	0					
ANR	994161	Identifier	tag_value		993621	0					
ANR	994162	Identifier	val		993621	1					
ANR	994163	ReturnStatement	return tag_value ;	372:1:10188:10204	993621	13	True				
ANR	994164	Identifier	tag_value		993621	0					
ANR	994165	ReturnType	static zend_string *		993621	1					
ANR	994166	Identifier	get_icu_value_internal		993621	2					
ANR	994167	ParameterList	"const char * loc_name , char * tag_name , int * result , int fromParseLocale"		993621	3					
ANR	994168	Parameter	const char * loc_name	259:44:7179:7198	993621	0	True				
ANR	994169	ParameterType	const char *		993621	0					
ANR	994170	Identifier	loc_name		993621	1					
ANR	994171	Parameter	char * tag_name	259:67:7202:7215	993621	1	True				
ANR	994172	ParameterType	char *		993621	0					
ANR	994173	Identifier	tag_name		993621	1					
ANR	994174	Parameter	int * result	259:83:7218:7228	993621	2	True				
ANR	994175	ParameterType	int *		993621	0					
ANR	994176	Identifier	result		993621	1					
ANR	994177	Parameter	int fromParseLocale	259:97:7232:7250	993621	3	True				
ANR	994178	ParameterType	int		993621	0					
ANR	994179	Identifier	fromParseLocale		993621	1					
ANR	994180	CFGEntryNode	ENTRY		993621		True				
ANR	994181	CFGExitNode	EXIT		993621		True				
ANR	994182	Symbol	fromParseLocale		993621						
ANR	994183	Symbol	LOC_LANG_TAG		993621						
ANR	994184	Symbol	isIDPrefix		993621						
ANR	994185	Symbol	tag_value -> val		993621						
ANR	994186	Symbol	LOC_VARIANT_TAG		993621						
ANR	994187	Symbol	getSingletonPos		993621						
ANR	994188	Symbol	uloc_canonicalize		993621						
ANR	994189	Symbol	uloc_getVariant		993621						
ANR	994190	Symbol	findOffset		993621						
ANR	994191	Symbol	zend_string_realloc		993621						
ANR	994192	Symbol	singletonPos		993621						
ANR	994193	Symbol	result		993621						
ANR	994194	Symbol	uloc_getLanguage		993621						
ANR	994195	Symbol	U_FAILURE		993621						
ANR	994196	Symbol	zend_string_init		993621						
ANR	994197	Symbol	strlen		993621						
ANR	994198	Symbol	estrndup		993621						
ANR	994199	Symbol	LOC_REGION_TAG		993621						
ANR	994200	Symbol	U_BUFFER_OVERFLOW_ERROR		993621						
ANR	994201	Symbol	mod_loc_name		993621						
ANR	994202	Symbol	* result		993621						
ANR	994203	Symbol	buflen		993621						
ANR	994204	Symbol	loc_name		993621						
ANR	994205	Symbol	LOC_CANONICALIZE_TAG		993621						
ANR	994206	Symbol	strcmp		993621						
ANR	994207	Symbol	U_ZERO_ERROR		993621						
ANR	994208	Symbol	zend_string_alloc		993621						
ANR	994209	Symbol	NULL		993621						
ANR	994210	Symbol	* tag_value		993621						
ANR	994211	Symbol	grOffset		993621						
ANR	994212	Symbol	tag_name		993621						
ANR	994213	Symbol	uloc_getCountry		993621						
ANR	994214	Symbol	& status		993621						
ANR	994215	Symbol	tag_value		993621						
ANR	994216	Symbol	uloc_getScript		993621						
ANR	994217	Symbol	tag_value_len		993621						
ANR	994218	Symbol	LOC_GRANDFATHERED		993621						
ANR	994219	Symbol	LOC_SCRIPT_TAG		993621						
ANR	994220	Symbol	estrdup		993621						
ANR	994221	Symbol	status		993621						
ANR	994222	Symbol	tag_value -> len		993621						
ANR	994223	DeclStmt									
ANR	994224	Decl							const char	const char *	loc_name
ANR	994225	DeclStmt									
ANR	994226	Decl							size_t	size_t	loc_name_len
ANR	994227	DeclStmt									
ANR	994228	Decl							zend_string	zend_string *	tag_value
ANR	994229	DeclStmt									
ANR	994230	Decl							char	char *	empty_result
ANR	994231	DeclStmt									
ANR	994232	Decl							int	int	result
ANR	994233	DeclStmt									
ANR	994234	Decl							char	char *	msg
ANR	994235	DeclStmt									
ANR	994236	Decl							UErrorCode	UErrorCode	status
ANR	994237	DeclStmt									
ANR	994238	Decl							const char	const char *	loc_name
ANR	994239	DeclStmt									
ANR	994240	Decl							size_t	size_t	loc_name_len
ANR	994241	DeclStmt									
ANR	994242	Decl							const char	const char *	disp_loc_name
ANR	994243	DeclStmt									
ANR	994244	Decl							size_t	size_t	disp_loc_name_len
ANR	994245	DeclStmt									
ANR	994246	Decl							int	int	free_loc_name
ANR	994247	DeclStmt									
ANR	994248	Decl							UChar	UChar *	disp_name
ANR	994249	DeclStmt									
ANR	994250	Decl							int32_t	int32_t	disp_name_len
ANR	994251	DeclStmt									
ANR	994252	Decl							char	char *	mod_loc_name
ANR	994253	DeclStmt									
ANR	994254	Decl							int32_t	int32_t	buflen
ANR	994255	DeclStmt									
ANR	994256	Decl							UErrorCode	UErrorCode	status
ANR	994257	DeclStmt									
ANR	994258	Decl							zend_string	zend_string *	u8str
ANR	994259	DeclStmt									
ANR	994260	Decl							char	char *	msg
ANR	994261	DeclStmt									
ANR	994262	Decl							int	int	grOffset
ANR	994263	DeclStmt									
ANR	994264	Decl							UEnumeration	UEnumeration *	e
ANR	994265	DeclStmt									
ANR	994266	Decl							UErrorCode	UErrorCode	status
ANR	994267	DeclStmt									
ANR	994268	Decl							const char	const char *	kw_key
ANR	994269	DeclStmt									
ANR	994270	Decl							int32_t	int32_t	kw_key_len
ANR	994271	DeclStmt									
ANR	994272	Decl							const char	const char *	loc_name
ANR	994273	DeclStmt									
ANR	994274	Decl							size_t	size_t	loc_name_len
ANR	994275	DeclStmt									
ANR	994276	Decl							zend_string	zend_string *	kw_value_str
ANR	994277	DeclStmt									
ANR	994278	Decl							int32_t	int32_t	kw_value_len
ANR	994279	Function	append_key_value	772:0:22213:22843							
ANR	994280	FunctionDef	"append_key_value (smart_str * loc_name , HashTable * hash_arr , char * key_name)"		994279	0					
ANR	994281	CompoundStatement		773:0:22299:22843	994279	0					
ANR	994282	IdentifierDeclStatement	zval * ele_value ;	774:1:22302:22317	994279	0	True				
ANR	994283	IdentifierDecl	* ele_value		994279	0					
ANR	994284	IdentifierDeclType	zval *		994279	0					
ANR	994285	Identifier	ele_value		994279	1					
ANR	994286	IfStatement	"if ( ( ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) ) ) != NULL )"		994279	1					
ANR	994287	Condition	"( ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) ) ) != NULL"	776:5:22325:22403	994279	0	True				
ANR	994288	EqualityExpression	"( ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) ) ) != NULL"		994279	0		!=			
ANR	994289	AssignmentExpression	"ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) )"		994279	0		=			
ANR	994290	Identifier	ele_value		994279	0					
ANR	994291	CallExpression	"zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) )"		994279	1					
ANR	994292	Callee	zend_hash_str_find		994279	0					
ANR	994293	Identifier	zend_hash_str_find		994279	0					
ANR	994294	ArgumentList	hash_arr		994279	1					
ANR	994295	Argument	hash_arr		994279	0					
ANR	994296	Identifier	hash_arr		994279	0					
ANR	994297	Argument	key_name		994279	1					
ANR	994298	Identifier	key_name		994279	0					
ANR	994299	Argument	strlen ( key_name )		994279	2					
ANR	994300	CallExpression	strlen ( key_name )		994279	0					
ANR	994301	Callee	strlen		994279	0					
ANR	994302	Identifier	strlen		994279	0					
ANR	994303	ArgumentList	key_name		994279	1					
ANR	994304	Argument	key_name		994279	0					
ANR	994305	Identifier	key_name		994279	0					
ANR	994306	Identifier	NULL		994279	1					
ANR	994307	CompoundStatement		4:87:107:107	994279	1					
ANR	994308	IfStatement	if ( Z_TYPE_P ( ele_value ) != IS_STRING )		994279	0					
ANR	994309	Condition	Z_TYPE_P ( ele_value ) != IS_STRING	777:5:22414:22444	994279	0	True				
ANR	994310	EqualityExpression	Z_TYPE_P ( ele_value ) != IS_STRING		994279	0		!=			
ANR	994311	CallExpression	Z_TYPE_P ( ele_value )		994279	0					
ANR	994312	Callee	Z_TYPE_P		994279	0					
ANR	994313	Identifier	Z_TYPE_P		994279	0					
ANR	994314	ArgumentList	ele_value		994279	1					
ANR	994315	Argument	ele_value		994279	0					
ANR	994316	Identifier	ele_value		994279	0					
ANR	994317	Identifier	IS_STRING		994279	1					
ANR	994318	CompoundStatement		5:38:147:147	994279	1					
ANR	994319	ReturnStatement	return FAILURE ;	779:3:22491:22505	994279	0	True				
ANR	994320	Identifier	FAILURE		994279	0					
ANR	994321	IfStatement	"if ( strcmp ( key_name , LOC_LANG_TAG ) != 0 && strcmp ( key_name , LOC_GRANDFATHERED_LANG_TAG ) != 0 )"		994279	1					
ANR	994322	Condition	"strcmp ( key_name , LOC_LANG_TAG ) != 0 && strcmp ( key_name , LOC_GRANDFATHERED_LANG_TAG ) != 0"	781:5:22516:22606	994279	0	True				
ANR	994323	AndExpression	"strcmp ( key_name , LOC_LANG_TAG ) != 0 && strcmp ( key_name , LOC_GRANDFATHERED_LANG_TAG ) != 0"		994279	0		&&			
ANR	994324	EqualityExpression	"strcmp ( key_name , LOC_LANG_TAG ) != 0"		994279	0		!=			
ANR	994325	CallExpression	"strcmp ( key_name , LOC_LANG_TAG )"		994279	0					
ANR	994326	Callee	strcmp		994279	0					
ANR	994327	Identifier	strcmp		994279	0					
ANR	994328	ArgumentList	key_name		994279	1					
ANR	994329	Argument	key_name		994279	0					
ANR	994330	Identifier	key_name		994279	0					
ANR	994331	Argument	LOC_LANG_TAG		994279	1					
ANR	994332	Identifier	LOC_LANG_TAG		994279	0					
ANR	994333	PrimaryExpression	0		994279	1					
ANR	994334	EqualityExpression	"strcmp ( key_name , LOC_GRANDFATHERED_LANG_TAG ) != 0"		994279	1		!=			
ANR	994335	CallExpression	"strcmp ( key_name , LOC_GRANDFATHERED_LANG_TAG )"		994279	0					
ANR	994336	Callee	strcmp		994279	0					
ANR	994337	Identifier	strcmp		994279	0					
ANR	994338	ArgumentList	key_name		994279	1					
ANR	994339	Argument	key_name		994279	0					
ANR	994340	Identifier	key_name		994279	0					
ANR	994341	Argument	LOC_GRANDFATHERED_LANG_TAG		994279	1					
ANR	994342	Identifier	LOC_GRANDFATHERED_LANG_TAG		994279	0					
ANR	994343	PrimaryExpression	0		994279	1					
ANR	994344	CompoundStatement		10:55:310:310	994279	1					
ANR	994345	ExpressionStatement	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"	784:3:22654:22714	994279	0	True				
ANR	994346	CallExpression	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"		994279	0					
ANR	994347	Callee	smart_str_appendl		994279	0					
ANR	994348	Identifier	smart_str_appendl		994279	0					
ANR	994349	ArgumentList	loc_name		994279	1					
ANR	994350	Argument	loc_name		994279	0					
ANR	994351	Identifier	loc_name		994279	0					
ANR	994352	Argument	SEPARATOR		994279	1					
ANR	994353	Identifier	SEPARATOR		994279	0					
ANR	994354	Argument	sizeof ( SEPARATOR ) - 1		994279	2					
ANR	994355	AdditiveExpression	sizeof ( SEPARATOR ) - 1		994279	0		-			
ANR	994356	SizeofExpression	sizeof ( SEPARATOR )		994279	0					
ANR	994357	Sizeof	sizeof		994279	0					
ANR	994358	SizeofOperand	SEPARATOR		994279	1					
ANR	994359	PrimaryExpression	1		994279	1					
ANR	994360	ExpressionStatement	"smart_str_appendl ( loc_name , Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"	786:2:22722:22796	994279	2	True				
ANR	994361	CallExpression	"smart_str_appendl ( loc_name , Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"		994279	0					
ANR	994362	Callee	smart_str_appendl		994279	0					
ANR	994363	Identifier	smart_str_appendl		994279	0					
ANR	994364	ArgumentList	loc_name		994279	1					
ANR	994365	Argument	loc_name		994279	0					
ANR	994366	Identifier	loc_name		994279	0					
ANR	994367	Argument	Z_STRVAL_P ( ele_value )		994279	1					
ANR	994368	CallExpression	Z_STRVAL_P ( ele_value )		994279	0					
ANR	994369	Callee	Z_STRVAL_P		994279	0					
ANR	994370	Identifier	Z_STRVAL_P		994279	0					
ANR	994371	ArgumentList	ele_value		994279	1					
ANR	994372	Argument	ele_value		994279	0					
ANR	994373	Identifier	ele_value		994279	0					
ANR	994374	Argument	Z_STRLEN_P ( ele_value )		994279	2					
ANR	994375	CallExpression	Z_STRLEN_P ( ele_value )		994279	0					
ANR	994376	Callee	Z_STRLEN_P		994279	0					
ANR	994377	Identifier	Z_STRLEN_P		994279	0					
ANR	994378	ArgumentList	ele_value		994279	1					
ANR	994379	Argument	ele_value		994279	0					
ANR	994380	Identifier	ele_value		994279	0					
ANR	994381	ReturnStatement	return SUCCESS ;	787:2:22800:22814	994279	3	True				
ANR	994382	Identifier	SUCCESS		994279	0					
ANR	994383	ReturnStatement	return LOC_NOT_FOUND ;	790:1:22821:22841	994279	2	True				
ANR	994384	Identifier	LOC_NOT_FOUND		994279	0					
ANR	994385	ReturnType	static int		994279	1					
ANR	994386	Identifier	append_key_value		994279	2					
ANR	994387	ParameterList	"smart_str * loc_name , HashTable * hash_arr , char * key_name"		994279	3					
ANR	994388	Parameter	smart_str * loc_name	772:28:22241:22259	994279	0	True				
ANR	994389	ParameterType	smart_str *		994279	0					
ANR	994390	Identifier	loc_name		994279	1					
ANR	994391	Parameter	HashTable * hash_arr	772:49:22262:22280	994279	1	True				
ANR	994392	ParameterType	HashTable *		994279	0					
ANR	994393	Identifier	hash_arr		994279	1					
ANR	994394	Parameter	char * key_name	772:70:22283:22296	994279	2	True				
ANR	994395	ParameterType	char *		994279	0					
ANR	994396	Identifier	key_name		994279	1					
ANR	994397	CFGEntryNode	ENTRY		994279		True				
ANR	994398	CFGExitNode	EXIT		994279		True				
ANR	994399	Symbol	strcmp		994279						
ANR	994400	Symbol	NULL		994279						
ANR	994401	Symbol	LOC_LANG_TAG		994279						
ANR	994402	Symbol	SUCCESS		994279						
ANR	994403	Symbol	SEPARATOR		994279						
ANR	994404	Symbol	LOC_NOT_FOUND		994279						
ANR	994405	Symbol	hash_arr		994279						
ANR	994406	Symbol	Z_TYPE_P		994279						
ANR	994407	Symbol	ele_value		994279						
ANR	994408	Symbol	FAILURE		994279						
ANR	994409	Symbol	Z_STRVAL_P		994279						
ANR	994410	Symbol	LOC_GRANDFATHERED_LANG_TAG		994279						
ANR	994411	Symbol	key_name		994279						
ANR	994412	Symbol	strlen		994279						
ANR	994413	Symbol	zend_hash_str_find		994279						
ANR	994414	Symbol	loc_name		994279						
ANR	994415	Symbol	Z_STRLEN_P		994279						
ANR	994416	Symbol	IS_STRING		994279						
ANR	994417	Function	add_prefix	797:0:22932:23188							
ANR	994418	FunctionDef	"add_prefix (smart_str * loc_name , char * key_name)"		994417	0					
ANR	994419	CompoundStatement		798:0:22992:23188	994417	0					
ANR	994420	IfStatement	"if ( strncmp ( key_name , LOC_PRIVATE_TAG , 7 ) == 0 )"		994417	0					
ANR	994421	Condition	"strncmp ( key_name , LOC_PRIVATE_TAG , 7 ) == 0"	799:5:22999:23042	994417	0	True				
ANR	994422	EqualityExpression	"strncmp ( key_name , LOC_PRIVATE_TAG , 7 ) == 0"		994417	0		==			
ANR	994423	CallExpression	"strncmp ( key_name , LOC_PRIVATE_TAG , 7 )"		994417	0					
ANR	994424	Callee	strncmp		994417	0					
ANR	994425	Identifier	strncmp		994417	0					
ANR	994426	ArgumentList	key_name		994417	1					
ANR	994427	Argument	key_name		994417	0					
ANR	994428	Identifier	key_name		994417	0					
ANR	994429	Argument	LOC_PRIVATE_TAG		994417	1					
ANR	994430	Identifier	LOC_PRIVATE_TAG		994417	0					
ANR	994431	Argument	7		994417	2					
ANR	994432	PrimaryExpression	7		994417	0					
ANR	994433	PrimaryExpression	0		994417	1					
ANR	994434	CompoundStatement		2:51:52:52	994417	1					
ANR	994435	ExpressionStatement	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"	800:2:23049:23109	994417	0	True				
ANR	994436	CallExpression	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"		994417	0					
ANR	994437	Callee	smart_str_appendl		994417	0					
ANR	994438	Identifier	smart_str_appendl		994417	0					
ANR	994439	ArgumentList	loc_name		994417	1					
ANR	994440	Argument	loc_name		994417	0					
ANR	994441	Identifier	loc_name		994417	0					
ANR	994442	Argument	SEPARATOR		994417	1					
ANR	994443	Identifier	SEPARATOR		994417	0					
ANR	994444	Argument	sizeof ( SEPARATOR ) - 1		994417	2					
ANR	994445	AdditiveExpression	sizeof ( SEPARATOR ) - 1		994417	0		-			
ANR	994446	SizeofExpression	sizeof ( SEPARATOR )		994417	0					
ANR	994447	Sizeof	sizeof		994417	0					
ANR	994448	SizeofOperand	SEPARATOR		994417	1					
ANR	994449	PrimaryExpression	1		994417	1					
ANR	994450	ExpressionStatement	"smart_str_appendl ( loc_name , PRIVATE_PREFIX , sizeof ( PRIVATE_PREFIX ) - 1 )"	801:2:23113:23183	994417	1	True				
ANR	994451	CallExpression	"smart_str_appendl ( loc_name , PRIVATE_PREFIX , sizeof ( PRIVATE_PREFIX ) - 1 )"		994417	0					
ANR	994452	Callee	smart_str_appendl		994417	0					
ANR	994453	Identifier	smart_str_appendl		994417	0					
ANR	994454	ArgumentList	loc_name		994417	1					
ANR	994455	Argument	loc_name		994417	0					
ANR	994456	Identifier	loc_name		994417	0					
ANR	994457	Argument	PRIVATE_PREFIX		994417	1					
ANR	994458	Identifier	PRIVATE_PREFIX		994417	0					
ANR	994459	Argument	sizeof ( PRIVATE_PREFIX ) - 1		994417	2					
ANR	994460	AdditiveExpression	sizeof ( PRIVATE_PREFIX ) - 1		994417	0		-			
ANR	994461	SizeofExpression	sizeof ( PRIVATE_PREFIX )		994417	0					
ANR	994462	Sizeof	sizeof		994417	0					
ANR	994463	SizeofOperand	PRIVATE_PREFIX		994417	1					
ANR	994464	PrimaryExpression	1		994417	1					
ANR	994465	ReturnType	static void		994417	1					
ANR	994466	Identifier	add_prefix		994417	2					
ANR	994467	ParameterList	"smart_str * loc_name , char * key_name"		994417	3					
ANR	994468	Parameter	smart_str * loc_name	797:23:22955:22973	994417	0	True				
ANR	994469	ParameterType	smart_str *		994417	0					
ANR	994470	Identifier	loc_name		994417	1					
ANR	994471	Parameter	char * key_name	797:44:22976:22989	994417	1	True				
ANR	994472	ParameterType	char *		994417	0					
ANR	994473	Identifier	key_name		994417	1					
ANR	994474	CFGEntryNode	ENTRY		994417		True				
ANR	994475	CFGExitNode	EXIT		994417		True				
ANR	994476	Symbol	key_name		994417						
ANR	994477	Symbol	strncmp		994417						
ANR	994478	Symbol	SEPARATOR		994417						
ANR	994479	Symbol	LOC_PRIVATE_TAG		994417						
ANR	994480	Symbol	PRIVATE_PREFIX		994417						
ANR	994481	Symbol	loc_name		994417						
ANR	994482	Function	append_multiple_key_values	813:0:23514:25615							
ANR	994483	FunctionDef	"append_multiple_key_values (smart_str * loc_name , HashTable * hash_arr , char * key_name)"		994482	0					
ANR	994484	CompoundStatement		814:0:23610:25615	994482	0					
ANR	994485	IdentifierDeclStatement	zval * ele_value ;	815:1:23613:23628	994482	0	True				
ANR	994486	IdentifierDecl	* ele_value		994482	0					
ANR	994487	IdentifierDeclType	zval *		994482	0					
ANR	994488	Identifier	ele_value		994482	1					
ANR	994489	IdentifierDeclStatement	int i = 0 ;	816:1:23631:23643	994482	1	True				
ANR	994490	IdentifierDecl	i = 0		994482	0					
ANR	994491	IdentifierDeclType	int		994482	0					
ANR	994492	Identifier	i		994482	1					
ANR	994493	AssignmentExpression	i = 0		994482	2		=			
ANR	994494	Identifier	i		994482	0					
ANR	994495	PrimaryExpression	0		994482	1					
ANR	994496	IdentifierDeclStatement	int isFirstSubtag = 0 ;	817:1:23646:23669	994482	2	True				
ANR	994497	IdentifierDecl	isFirstSubtag = 0		994482	0					
ANR	994498	IdentifierDeclType	int		994482	0					
ANR	994499	Identifier	isFirstSubtag		994482	1					
ANR	994500	AssignmentExpression	isFirstSubtag = 0		994482	2		=			
ANR	994501	Identifier	isFirstSubtag		994482	0					
ANR	994502	PrimaryExpression	0		994482	1					
ANR	994503	IdentifierDeclStatement	int max_value = 0 ;	818:1:23672:23691	994482	3	True				
ANR	994504	IdentifierDecl	max_value = 0		994482	0					
ANR	994505	IdentifierDeclType	int		994482	0					
ANR	994506	Identifier	max_value		994482	1					
ANR	994507	AssignmentExpression	max_value = 0		994482	2		=			
ANR	994508	Identifier	max_value		994482	0					
ANR	994509	PrimaryExpression	0		994482	1					
ANR	994510	IfStatement	"if ( ( ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) ) ) != NULL )"		994482	4					
ANR	994511	Condition	"( ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) ) ) != NULL"	821:5:23736:23816	994482	0	True				
ANR	994512	EqualityExpression	"( ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) ) ) != NULL"		994482	0		!=			
ANR	994513	AssignmentExpression	"ele_value = zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) )"		994482	0		=			
ANR	994514	Identifier	ele_value		994482	0					
ANR	994515	CallExpression	"zend_hash_str_find ( hash_arr , key_name , strlen ( key_name ) )"		994482	1					
ANR	994516	Callee	zend_hash_str_find		994482	0					
ANR	994517	Identifier	zend_hash_str_find		994482	0					
ANR	994518	ArgumentList	hash_arr		994482	1					
ANR	994519	Argument	hash_arr		994482	0					
ANR	994520	Identifier	hash_arr		994482	0					
ANR	994521	Argument	key_name		994482	1					
ANR	994522	Identifier	key_name		994482	0					
ANR	994523	Argument	strlen ( key_name )		994482	2					
ANR	994524	CallExpression	strlen ( key_name )		994482	0					
ANR	994525	Callee	strlen		994482	0					
ANR	994526	Identifier	strlen		994482	0					
ANR	994527	ArgumentList	key_name		994482	1					
ANR	994528	Argument	key_name		994482	0					
ANR	994529	Identifier	key_name		994482	0					
ANR	994530	Identifier	NULL		994482	1					
ANR	994531	CompoundStatement		8:88:208:208	994482	1					
ANR	994532	IfStatement	if ( Z_TYPE_P ( ele_value ) == IS_STRING )		994482	0					
ANR	994533	Condition	Z_TYPE_P ( ele_value ) == IS_STRING	822:6:23827:23858	994482	0	True				
ANR	994534	EqualityExpression	Z_TYPE_P ( ele_value ) == IS_STRING		994482	0		==			
ANR	994535	CallExpression	Z_TYPE_P ( ele_value )		994482	0					
ANR	994536	Callee	Z_TYPE_P		994482	0					
ANR	994537	Identifier	Z_TYPE_P		994482	0					
ANR	994538	ArgumentList	ele_value		994482	1					
ANR	994539	Argument	ele_value		994482	0					
ANR	994540	Identifier	ele_value		994482	0					
ANR	994541	Identifier	IS_STRING		994482	1					
ANR	994542	CompoundStatement		9:40:250:250	994482	1					
ANR	994543	ExpressionStatement	"add_prefix ( loc_name , key_name )"	823:3:23866:23898	994482	0	True				
ANR	994544	CallExpression	"add_prefix ( loc_name , key_name )"		994482	0					
ANR	994545	Callee	add_prefix		994482	0					
ANR	994546	Identifier	add_prefix		994482	0					
ANR	994547	ArgumentList	loc_name		994482	1					
ANR	994548	Argument	loc_name		994482	0					
ANR	994549	Identifier	loc_name		994482	0					
ANR	994550	Argument	key_name		994482	1					
ANR	994551	Identifier	key_name		994482	0					
ANR	994552	ExpressionStatement	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"	825:3:23904:23964	994482	1	True				
ANR	994553	CallExpression	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"		994482	0					
ANR	994554	Callee	smart_str_appendl		994482	0					
ANR	994555	Identifier	smart_str_appendl		994482	0					
ANR	994556	ArgumentList	loc_name		994482	1					
ANR	994557	Argument	loc_name		994482	0					
ANR	994558	Identifier	loc_name		994482	0					
ANR	994559	Argument	SEPARATOR		994482	1					
ANR	994560	Identifier	SEPARATOR		994482	0					
ANR	994561	Argument	sizeof ( SEPARATOR ) - 1		994482	2					
ANR	994562	AdditiveExpression	sizeof ( SEPARATOR ) - 1		994482	0		-			
ANR	994563	SizeofExpression	sizeof ( SEPARATOR )		994482	0					
ANR	994564	Sizeof	sizeof		994482	0					
ANR	994565	SizeofOperand	SEPARATOR		994482	1					
ANR	994566	PrimaryExpression	1		994482	1					
ANR	994567	ExpressionStatement	"smart_str_appendl ( loc_name , Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"	826:3:23969:24043	994482	2	True				
ANR	994568	CallExpression	"smart_str_appendl ( loc_name , Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"		994482	0					
ANR	994569	Callee	smart_str_appendl		994482	0					
ANR	994570	Identifier	smart_str_appendl		994482	0					
ANR	994571	ArgumentList	loc_name		994482	1					
ANR	994572	Argument	loc_name		994482	0					
ANR	994573	Identifier	loc_name		994482	0					
ANR	994574	Argument	Z_STRVAL_P ( ele_value )		994482	1					
ANR	994575	CallExpression	Z_STRVAL_P ( ele_value )		994482	0					
ANR	994576	Callee	Z_STRVAL_P		994482	0					
ANR	994577	Identifier	Z_STRVAL_P		994482	0					
ANR	994578	ArgumentList	ele_value		994482	1					
ANR	994579	Argument	ele_value		994482	0					
ANR	994580	Identifier	ele_value		994482	0					
ANR	994581	Argument	Z_STRLEN_P ( ele_value )		994482	2					
ANR	994582	CallExpression	Z_STRLEN_P ( ele_value )		994482	0					
ANR	994583	Callee	Z_STRLEN_P		994482	0					
ANR	994584	Identifier	Z_STRLEN_P		994482	0					
ANR	994585	ArgumentList	ele_value		994482	1					
ANR	994586	Argument	ele_value		994482	0					
ANR	994587	Identifier	ele_value		994482	0					
ANR	994588	ReturnStatement	return SUCCESS ;	827:3:24048:24062	994482	3	True				
ANR	994589	Identifier	SUCCESS		994482	0					
ANR	994590	ElseStatement	else		994482	0					
ANR	994591	IfStatement	if ( Z_TYPE_P ( ele_value ) == IS_ARRAY )		994482	0					
ANR	994592	Condition	Z_TYPE_P ( ele_value ) == IS_ARRAY	828:12:24076:24106	994482	0	True				
ANR	994593	EqualityExpression	Z_TYPE_P ( ele_value ) == IS_ARRAY		994482	0		==			
ANR	994594	CallExpression	Z_TYPE_P ( ele_value )		994482	0					
ANR	994595	Callee	Z_TYPE_P		994482	0					
ANR	994596	Identifier	Z_TYPE_P		994482	0					
ANR	994597	ArgumentList	ele_value		994482	1					
ANR	994598	Argument	ele_value		994482	0					
ANR	994599	Identifier	ele_value		994482	0					
ANR	994600	Identifier	IS_ARRAY		994482	1					
ANR	994601	CompoundStatement		17:3:547:557	994482	1					
ANR	994602	IdentifierDeclStatement	HashTable * arr = Z_ARRVAL_P ( ele_value ) ;	829:3:24115:24153	994482	0	True				
ANR	994603	IdentifierDecl	* arr = Z_ARRVAL_P ( ele_value )		994482	0					
ANR	994604	IdentifierDeclType	HashTable *		994482	0					
ANR	994605	Identifier	arr		994482	1					
ANR	994606	AssignmentExpression	* arr = Z_ARRVAL_P ( ele_value )		994482	2		=			
ANR	994607	Identifier	arr		994482	0					
ANR	994608	CallExpression	Z_ARRVAL_P ( ele_value )		994482	1					
ANR	994609	Callee	Z_ARRVAL_P		994482	0					
ANR	994610	Identifier	Z_ARRVAL_P		994482	0					
ANR	994611	ArgumentList	ele_value		994482	1					
ANR	994612	Argument	ele_value		994482	0					
ANR	994613	Identifier	ele_value		994482	0					
ANR	994614	IdentifierDeclStatement	zval * data ;	830:3:24158:24168	994482	1	True				
ANR	994615	IdentifierDecl	* data		994482	0					
ANR	994616	IdentifierDeclType	zval *		994482	0					
ANR	994617	Identifier	data		994482	1					
ANR	994618	Statement	ZEND_HASH_FOREACH_VAL	832:3:24174:24194	994482	2	True				
ANR	994619	Statement	(	832:24:24195:24195	994482	3	True				
ANR	994620	Statement	arr	832:25:24196:24198	994482	4	True				
ANR	994621	Statement	","	832:28:24199:24199	994482	5	True				
ANR	994622	Statement	data	832:30:24201:24204	994482	6	True				
ANR	994623	Statement	)	832:34:24205:24205	994482	7	True				
ANR	994624	CompoundStatement		19:36:596:596	994482	8					
ANR	994625	IfStatement	if ( Z_TYPE_P ( data ) != IS_STRING )		994482	0					
ANR	994626	Condition	Z_TYPE_P ( data ) != IS_STRING	833:7:24216:24242	994482	0	True				
ANR	994627	EqualityExpression	Z_TYPE_P ( data ) != IS_STRING		994482	0		!=			
ANR	994628	CallExpression	Z_TYPE_P ( data )		994482	0					
ANR	994629	Callee	Z_TYPE_P		994482	0					
ANR	994630	Identifier	Z_TYPE_P		994482	0					
ANR	994631	ArgumentList	data		994482	1					
ANR	994632	Argument	data		994482	0					
ANR	994633	Identifier	data		994482	0					
ANR	994634	Identifier	IS_STRING		994482	1					
ANR	994635	CompoundStatement		20:36:634:634	994482	1					
ANR	994636	ReturnStatement	return FAILURE ;	834:5:24252:24266	994482	0	True				
ANR	994637	Identifier	FAILURE		994482	0					
ANR	994638	IfStatement	if ( isFirstSubtag ++ == 0 )		994482	1					
ANR	994639	Condition	isFirstSubtag ++ == 0	836:8:24282:24301	994482	0	True				
ANR	994640	EqualityExpression	isFirstSubtag ++ == 0		994482	0		==			
ANR	994641	PostIncDecOperationExpression	isFirstSubtag ++		994482	0					
ANR	994642	Identifier	isFirstSubtag		994482	0					
ANR	994643	IncDec	++		994482	1					
ANR	994644	PrimaryExpression	0		994482	1					
ANR	994645	CompoundStatement		23:29:692:692	994482	1					
ANR	994646	ExpressionStatement	"add_prefix ( loc_name , key_name )"	837:5:24310:24341	994482	0	True				
ANR	994647	CallExpression	"add_prefix ( loc_name , key_name )"		994482	0					
ANR	994648	Callee	add_prefix		994482	0					
ANR	994649	Identifier	add_prefix		994482	0					
ANR	994650	ArgumentList	loc_name		994482	1					
ANR	994651	Argument	loc_name		994482	0					
ANR	994652	Identifier	loc_name		994482	0					
ANR	994653	Argument	key_name		994482	1					
ANR	994654	Identifier	key_name		994482	0					
ANR	994655	ExpressionStatement	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"	839:4:24353:24413	994482	2	True				
ANR	994656	CallExpression	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"		994482	0					
ANR	994657	Callee	smart_str_appendl		994482	0					
ANR	994658	Identifier	smart_str_appendl		994482	0					
ANR	994659	ArgumentList	loc_name		994482	1					
ANR	994660	Argument	loc_name		994482	0					
ANR	994661	Identifier	loc_name		994482	0					
ANR	994662	Argument	SEPARATOR		994482	1					
ANR	994663	Identifier	SEPARATOR		994482	0					
ANR	994664	Argument	sizeof ( SEPARATOR ) - 1		994482	2					
ANR	994665	AdditiveExpression	sizeof ( SEPARATOR ) - 1		994482	0		-			
ANR	994666	SizeofExpression	sizeof ( SEPARATOR )		994482	0					
ANR	994667	Sizeof	sizeof		994482	0					
ANR	994668	SizeofOperand	SEPARATOR		994482	1					
ANR	994669	PrimaryExpression	1		994482	1					
ANR	994670	ExpressionStatement	"smart_str_appendl ( loc_name , Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"	840:4:24419:24483	994482	3	True				
ANR	994671	CallExpression	"smart_str_appendl ( loc_name , Z_STRVAL_P ( data ) , Z_STRLEN_P ( data ) )"		994482	0					
ANR	994672	Callee	smart_str_appendl		994482	0					
ANR	994673	Identifier	smart_str_appendl		994482	0					
ANR	994674	ArgumentList	loc_name		994482	1					
ANR	994675	Argument	loc_name		994482	0					
ANR	994676	Identifier	loc_name		994482	0					
ANR	994677	Argument	Z_STRVAL_P ( data )		994482	1					
ANR	994678	CallExpression	Z_STRVAL_P ( data )		994482	0					
ANR	994679	Callee	Z_STRVAL_P		994482	0					
ANR	994680	Identifier	Z_STRVAL_P		994482	0					
ANR	994681	ArgumentList	data		994482	1					
ANR	994682	Argument	data		994482	0					
ANR	994683	Identifier	data		994482	0					
ANR	994684	Argument	Z_STRLEN_P ( data )		994482	2					
ANR	994685	CallExpression	Z_STRLEN_P ( data )		994482	0					
ANR	994686	Callee	Z_STRLEN_P		994482	0					
ANR	994687	Identifier	Z_STRLEN_P		994482	0					
ANR	994688	ArgumentList	data		994482	1					
ANR	994689	Argument	data		994482	0					
ANR	994690	Identifier	data		994482	0					
ANR	994691	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	841:5:24490:24513	994482	9	True				
ANR	994692	CallExpression	ZEND_HASH_FOREACH_END ( )		994482	0					
ANR	994693	Callee	ZEND_HASH_FOREACH_END		994482	0					
ANR	994694	Identifier	ZEND_HASH_FOREACH_END		994482	0					
ANR	994695	ArgumentList			994482	1					
ANR	994696	ReturnStatement	return SUCCESS ;	842:3:24518:24532	994482	10	True				
ANR	994697	Identifier	SUCCESS		994482	0					
ANR	994698	ElseStatement	else		994482	0					
ANR	994699	CompoundStatement		30:9:932:932	994482	0					
ANR	994700	ReturnStatement	return FAILURE ;	844:3:24548:24562	994482	0	True				
ANR	994701	Identifier	FAILURE		994482	0					
ANR	994702	ElseStatement	else		994482	0					
ANR	994703	CompoundStatement		34:2:969:990	994482	0					
ANR	994704	IdentifierDeclStatement	char cur_key_name [ 31 ] ;	847:2:24580:24601	994482	0	True				
ANR	994705	IdentifierDecl	cur_key_name [ 31 ]		994482	0					
ANR	994706	IdentifierDeclType	char [ 31 ]		994482	0					
ANR	994707	Identifier	cur_key_name		994482	1					
ANR	994708	PrimaryExpression	31		994482	2					
ANR	994709	IfStatement	"if ( strcmp ( key_name , LOC_VARIANT_TAG ) == 0 )"		994482	1					
ANR	994710	Condition	"strcmp ( key_name , LOC_VARIANT_TAG ) == 0"	849:6:24672:24709	994482	0	True				
ANR	994711	EqualityExpression	"strcmp ( key_name , LOC_VARIANT_TAG ) == 0"		994482	0		==			
ANR	994712	CallExpression	"strcmp ( key_name , LOC_VARIANT_TAG )"		994482	0					
ANR	994713	Callee	strcmp		994482	0					
ANR	994714	Identifier	strcmp		994482	0					
ANR	994715	ArgumentList	key_name		994482	1					
ANR	994716	Argument	key_name		994482	0					
ANR	994717	Identifier	key_name		994482	0					
ANR	994718	Argument	LOC_VARIANT_TAG		994482	1					
ANR	994719	Identifier	LOC_VARIANT_TAG		994482	0					
ANR	994720	PrimaryExpression	0		994482	1					
ANR	994721	CompoundStatement		36:46:1101:1101	994482	1					
ANR	994722	ExpressionStatement	max_value = MAX_NO_VARIANT	850:3:24717:24744	994482	0	True				
ANR	994723	AssignmentExpression	max_value = MAX_NO_VARIANT		994482	0		=			
ANR	994724	Identifier	max_value		994482	0					
ANR	994725	Identifier	MAX_NO_VARIANT		994482	1					
ANR	994726	IfStatement	"if ( strcmp ( key_name , LOC_EXTLANG_TAG ) == 0 )"		994482	2					
ANR	994727	Condition	"strcmp ( key_name , LOC_EXTLANG_TAG ) == 0"	852:6:24756:24793	994482	0	True				
ANR	994728	EqualityExpression	"strcmp ( key_name , LOC_EXTLANG_TAG ) == 0"		994482	0		==			
ANR	994729	CallExpression	"strcmp ( key_name , LOC_EXTLANG_TAG )"		994482	0					
ANR	994730	Callee	strcmp		994482	0					
ANR	994731	Identifier	strcmp		994482	0					
ANR	994732	ArgumentList	key_name		994482	1					
ANR	994733	Argument	key_name		994482	0					
ANR	994734	Identifier	key_name		994482	0					
ANR	994735	Argument	LOC_EXTLANG_TAG		994482	1					
ANR	994736	Identifier	LOC_EXTLANG_TAG		994482	0					
ANR	994737	PrimaryExpression	0		994482	1					
ANR	994738	CompoundStatement		39:46:1185:1185	994482	1					
ANR	994739	ExpressionStatement	max_value = MAX_NO_EXTLANG	853:3:24801:24828	994482	0	True				
ANR	994740	AssignmentExpression	max_value = MAX_NO_EXTLANG		994482	0		=			
ANR	994741	Identifier	max_value		994482	0					
ANR	994742	Identifier	MAX_NO_EXTLANG		994482	1					
ANR	994743	IfStatement	"if ( strcmp ( key_name , LOC_PRIVATE_TAG ) == 0 )"		994482	3					
ANR	994744	Condition	"strcmp ( key_name , LOC_PRIVATE_TAG ) == 0"	855:6:24840:24877	994482	0	True				
ANR	994745	EqualityExpression	"strcmp ( key_name , LOC_PRIVATE_TAG ) == 0"		994482	0		==			
ANR	994746	CallExpression	"strcmp ( key_name , LOC_PRIVATE_TAG )"		994482	0					
ANR	994747	Callee	strcmp		994482	0					
ANR	994748	Identifier	strcmp		994482	0					
ANR	994749	ArgumentList	key_name		994482	1					
ANR	994750	Argument	key_name		994482	0					
ANR	994751	Identifier	key_name		994482	0					
ANR	994752	Argument	LOC_PRIVATE_TAG		994482	1					
ANR	994753	Identifier	LOC_PRIVATE_TAG		994482	0					
ANR	994754	PrimaryExpression	0		994482	1					
ANR	994755	CompoundStatement		42:46:1269:1269	994482	1					
ANR	994756	ExpressionStatement	max_value = MAX_NO_PRIVATE	856:3:24885:24912	994482	0	True				
ANR	994757	AssignmentExpression	max_value = MAX_NO_PRIVATE		994482	0		=			
ANR	994758	Identifier	max_value		994482	0					
ANR	994759	Identifier	MAX_NO_PRIVATE		994482	1					
ANR	994760	ExpressionStatement	isFirstSubtag = 0	860:2:24985:25002	994482	4	True				
ANR	994761	AssignmentExpression	isFirstSubtag = 0		994482	0		=			
ANR	994762	Identifier	isFirstSubtag		994482	0					
ANR	994763	PrimaryExpression	0		994482	1					
ANR	994764	ForStatement	for ( i = 0 ; i < max_value ; i ++ )		994482	5					
ANR	994765	ForInit	i = 0 ;	861:7:25011:25015	994482	0	True				
ANR	994766	AssignmentExpression	i = 0		994482	0		=			
ANR	994767	Identifier	i		994482	0					
ANR	994768	PrimaryExpression	0		994482	1					
ANR	994769	Condition	i < max_value	861:13:25017:25028	994482	1	True				
ANR	994770	RelationalExpression	i < max_value		994482	0		<			
ANR	994771	Identifier	i		994482	0					
ANR	994772	Identifier	max_value		994482	1					
ANR	994773	PostIncDecOperationExpression	i ++	861:27:25031:25033	994482	2	True				
ANR	994774	Identifier	i		994482	0					
ANR	994775	IncDec	++		994482	1					
ANR	994776	CompoundStatement		48:32:1425:1425	994482	3					
ANR	994777	ExpressionStatement	"snprintf ( cur_key_name , 30 , ""%s%d"" , key_name , i )"	862:3:25041:25091	994482	0	True				
ANR	994778	CallExpression	"snprintf ( cur_key_name , 30 , ""%s%d"" , key_name , i )"		994482	0					
ANR	994779	Callee	snprintf		994482	0					
ANR	994780	Identifier	snprintf		994482	0					
ANR	994781	ArgumentList	cur_key_name		994482	1					
ANR	994782	Argument	cur_key_name		994482	0					
ANR	994783	Identifier	cur_key_name		994482	0					
ANR	994784	Argument	30		994482	1					
ANR	994785	PrimaryExpression	30		994482	0					
ANR	994786	Argument	"""%s%d"""		994482	2					
ANR	994787	PrimaryExpression	"""%s%d"""		994482	0					
ANR	994788	Argument	key_name		994482	3					
ANR	994789	Identifier	key_name		994482	0					
ANR	994790	Argument	i		994482	4					
ANR	994791	Identifier	i		994482	0					
ANR	994792	IfStatement	"if ( ( ele_value = zend_hash_str_find ( hash_arr , cur_key_name , strlen ( cur_key_name ) ) ) != NULL )"		994482	1					
ANR	994793	Condition	"( ele_value = zend_hash_str_find ( hash_arr , cur_key_name , strlen ( cur_key_name ) ) ) != NULL"	863:7:25100:25188	994482	0	True				
ANR	994794	EqualityExpression	"( ele_value = zend_hash_str_find ( hash_arr , cur_key_name , strlen ( cur_key_name ) ) ) != NULL"		994482	0		!=			
ANR	994795	AssignmentExpression	"ele_value = zend_hash_str_find ( hash_arr , cur_key_name , strlen ( cur_key_name ) )"		994482	0		=			
ANR	994796	Identifier	ele_value		994482	0					
ANR	994797	CallExpression	"zend_hash_str_find ( hash_arr , cur_key_name , strlen ( cur_key_name ) )"		994482	1					
ANR	994798	Callee	zend_hash_str_find		994482	0					
ANR	994799	Identifier	zend_hash_str_find		994482	0					
ANR	994800	ArgumentList	hash_arr		994482	1					
ANR	994801	Argument	hash_arr		994482	0					
ANR	994802	Identifier	hash_arr		994482	0					
ANR	994803	Argument	cur_key_name		994482	1					
ANR	994804	Identifier	cur_key_name		994482	0					
ANR	994805	Argument	strlen ( cur_key_name )		994482	2					
ANR	994806	CallExpression	strlen ( cur_key_name )		994482	0					
ANR	994807	Callee	strlen		994482	0					
ANR	994808	Identifier	strlen		994482	0					
ANR	994809	ArgumentList	cur_key_name		994482	1					
ANR	994810	Argument	cur_key_name		994482	0					
ANR	994811	Identifier	cur_key_name		994482	0					
ANR	994812	Identifier	NULL		994482	1					
ANR	994813	CompoundStatement		50:98:1580:1580	994482	1					
ANR	994814	IfStatement	if ( Z_TYPE_P ( ele_value ) != IS_STRING )		994482	0					
ANR	994815	Condition	Z_TYPE_P ( ele_value ) != IS_STRING	864:8:25201:25231	994482	0	True				
ANR	994816	EqualityExpression	Z_TYPE_P ( ele_value ) != IS_STRING		994482	0		!=			
ANR	994817	CallExpression	Z_TYPE_P ( ele_value )		994482	0					
ANR	994818	Callee	Z_TYPE_P		994482	0					
ANR	994819	Identifier	Z_TYPE_P		994482	0					
ANR	994820	ArgumentList	ele_value		994482	1					
ANR	994821	Argument	ele_value		994482	0					
ANR	994822	Identifier	ele_value		994482	0					
ANR	994823	Identifier	IS_STRING		994482	1					
ANR	994824	CompoundStatement		51:41:1623:1623	994482	1					
ANR	994825	ReturnStatement	return FAILURE ;	866:5:25276:25290	994482	0	True				
ANR	994826	Identifier	FAILURE		994482	0					
ANR	994827	IfStatement	if ( isFirstSubtag ++ == 0 )		994482	1					
ANR	994828	Condition	isFirstSubtag ++ == 0	869:8:25333:25352	994482	0	True				
ANR	994829	EqualityExpression	isFirstSubtag ++ == 0		994482	0		==			
ANR	994830	PostIncDecOperationExpression	isFirstSubtag ++		994482	0					
ANR	994831	Identifier	isFirstSubtag		994482	0					
ANR	994832	IncDec	++		994482	1					
ANR	994833	PrimaryExpression	0		994482	1					
ANR	994834	CompoundStatement		56:29:1743:1743	994482	1					
ANR	994835	ExpressionStatement	"add_prefix ( loc_name , cur_key_name )"	870:5:25361:25396	994482	0	True				
ANR	994836	CallExpression	"add_prefix ( loc_name , cur_key_name )"		994482	0					
ANR	994837	Callee	add_prefix		994482	0					
ANR	994838	Identifier	add_prefix		994482	0					
ANR	994839	ArgumentList	loc_name		994482	1					
ANR	994840	Argument	loc_name		994482	0					
ANR	994841	Identifier	loc_name		994482	0					
ANR	994842	Argument	cur_key_name		994482	1					
ANR	994843	Identifier	cur_key_name		994482	0					
ANR	994844	ExpressionStatement	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"	872:4:25408:25468	994482	2	True				
ANR	994845	CallExpression	"smart_str_appendl ( loc_name , SEPARATOR , sizeof ( SEPARATOR ) - 1 )"		994482	0					
ANR	994846	Callee	smart_str_appendl		994482	0					
ANR	994847	Identifier	smart_str_appendl		994482	0					
ANR	994848	ArgumentList	loc_name		994482	1					
ANR	994849	Argument	loc_name		994482	0					
ANR	994850	Identifier	loc_name		994482	0					
ANR	994851	Argument	SEPARATOR		994482	1					
ANR	994852	Identifier	SEPARATOR		994482	0					
ANR	994853	Argument	sizeof ( SEPARATOR ) - 1		994482	2					
ANR	994854	AdditiveExpression	sizeof ( SEPARATOR ) - 1		994482	0		-			
ANR	994855	SizeofExpression	sizeof ( SEPARATOR )		994482	0					
ANR	994856	Sizeof	sizeof		994482	0					
ANR	994857	SizeofOperand	SEPARATOR		994482	1					
ANR	994858	PrimaryExpression	1		994482	1					
ANR	994859	ExpressionStatement	"smart_str_appendl ( loc_name , Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"	873:4:25474:25548	994482	3	True				
ANR	994860	CallExpression	"smart_str_appendl ( loc_name , Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"		994482	0					
ANR	994861	Callee	smart_str_appendl		994482	0					
ANR	994862	Identifier	smart_str_appendl		994482	0					
ANR	994863	ArgumentList	loc_name		994482	1					
ANR	994864	Argument	loc_name		994482	0					
ANR	994865	Identifier	loc_name		994482	0					
ANR	994866	Argument	Z_STRVAL_P ( ele_value )		994482	1					
ANR	994867	CallExpression	Z_STRVAL_P ( ele_value )		994482	0					
ANR	994868	Callee	Z_STRVAL_P		994482	0					
ANR	994869	Identifier	Z_STRVAL_P		994482	0					
ANR	994870	ArgumentList	ele_value		994482	1					
ANR	994871	Argument	ele_value		994482	0					
ANR	994872	Identifier	ele_value		994482	0					
ANR	994873	Argument	Z_STRLEN_P ( ele_value )		994482	2					
ANR	994874	CallExpression	Z_STRLEN_P ( ele_value )		994482	0					
ANR	994875	Callee	Z_STRLEN_P		994482	0					
ANR	994876	Identifier	Z_STRLEN_P		994482	0					
ANR	994877	ArgumentList	ele_value		994482	1					
ANR	994878	Argument	ele_value		994482	0					
ANR	994879	Identifier	ele_value		994482	0					
ANR	994880	ReturnStatement	return SUCCESS ;	878:1:25599:25613	994482	5	True				
ANR	994881	Identifier	SUCCESS		994482	0					
ANR	994882	ReturnType	static int		994482	1					
ANR	994883	Identifier	append_multiple_key_values		994482	2					
ANR	994884	ParameterList	"smart_str * loc_name , HashTable * hash_arr , char * key_name"		994482	3					
ANR	994885	Parameter	smart_str * loc_name	813:38:23552:23570	994482	0	True				
ANR	994886	ParameterType	smart_str *		994482	0					
ANR	994887	Identifier	loc_name		994482	1					
ANR	994888	Parameter	HashTable * hash_arr	813:59:23573:23591	994482	1	True				
ANR	994889	ParameterType	HashTable *		994482	0					
ANR	994890	Identifier	hash_arr		994482	1					
ANR	994891	Parameter	char * key_name	813:80:23594:23607	994482	2	True				
ANR	994892	ParameterType	char *		994482	0					
ANR	994893	Identifier	key_name		994482	1					
ANR	994894	CFGEntryNode	ENTRY		994482		True				
ANR	994895	CFGExitNode	EXIT		994482		True				
ANR	994896	Symbol	LOC_VARIANT_TAG		994482						
ANR	994897	Symbol	data		994482						
ANR	994898	Symbol	MAX_NO_PRIVATE		994482						
ANR	994899	Symbol	isFirstSubtag		994482						
ANR	994900	Symbol	LOC_PRIVATE_TAG		994482						
ANR	994901	Symbol	ele_value		994482						
ANR	994902	Symbol	strlen		994482						
ANR	994903	Symbol	zend_hash_str_find		994482						
ANR	994904	Symbol	IS_ARRAY		994482						
ANR	994905	Symbol	loc_name		994482						
ANR	994906	Symbol	Z_STRLEN_P		994482						
ANR	994907	Symbol	IS_STRING		994482						
ANR	994908	Symbol	Z_ARRVAL_P		994482						
ANR	994909	Symbol	arr		994482						
ANR	994910	Symbol	strcmp		994482						
ANR	994911	Symbol	MAX_NO_VARIANT		994482						
ANR	994912	Symbol	NULL		994482						
ANR	994913	Symbol	SUCCESS		994482						
ANR	994914	Symbol	SEPARATOR		994482						
ANR	994915	Symbol	cur_key_name		994482						
ANR	994916	Symbol	i		994482						
ANR	994917	Symbol	hash_arr		994482						
ANR	994918	Symbol	LOC_EXTLANG_TAG		994482						
ANR	994919	Symbol	Z_TYPE_P		994482						
ANR	994920	Symbol	Z_STRVAL_P		994482						
ANR	994921	Symbol	FAILURE		994482						
ANR	994922	Symbol	key_name		994482						
ANR	994923	Symbol	max_value		994482						
ANR	994924	Symbol	MAX_NO_EXTLANG		994482						
ANR	994925	Function	handleAppendResult	887:0:25782:26073							
ANR	994926	FunctionDef	"handleAppendResult (int result , smart_str * loc_name)"		994925	0					
ANR	994927	CompoundStatement		888:0:25846:26073	994925	0					
ANR	994928	ExpressionStatement	intl_error_reset ( NULL )	889:1:25849:25873	994925	0	True				
ANR	994929	CallExpression	intl_error_reset ( NULL )		994925	0					
ANR	994930	Callee	intl_error_reset		994925	0					
ANR	994931	Identifier	intl_error_reset		994925	0					
ANR	994932	ArgumentList	NULL		994925	1					
ANR	994933	Argument	NULL		994925	0					
ANR	994934	Identifier	NULL		994925	0					
ANR	994935	IfStatement	if ( result == FAILURE )		994925	1					
ANR	994936	Condition	result == FAILURE	890:5:25880:25896	994925	0	True				
ANR	994937	EqualityExpression	result == FAILURE		994925	0		==			
ANR	994938	Identifier	result		994925	0					
ANR	994939	Identifier	FAILURE		994925	1					
ANR	994940	CompoundStatement		3:24:52:52	994925	1					
ANR	994941	ExpressionStatement	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""locale_compose: parameter array element is not a string"" , 0 )"	891:2:25903:26017	994925	0	True				
ANR	994942	CallExpression	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""locale_compose: parameter array element is not a string"" , 0 )"		994925	0					
ANR	994943	Callee	intl_error_set		994925	0					
ANR	994944	Identifier	intl_error_set		994925	0					
ANR	994945	ArgumentList	NULL		994925	1					
ANR	994946	Argument	NULL		994925	0					
ANR	994947	Identifier	NULL		994925	0					
ANR	994948	Argument	U_ILLEGAL_ARGUMENT_ERROR		994925	1					
ANR	994949	Identifier	U_ILLEGAL_ARGUMENT_ERROR		994925	0					
ANR	994950	Argument	"""locale_compose: parameter array element is not a string"""		994925	2					
ANR	994951	PrimaryExpression	"""locale_compose: parameter array element is not a string"""		994925	0					
ANR	994952	Argument	0		994925	3					
ANR	994953	PrimaryExpression	0		994925	0					
ANR	994954	ExpressionStatement	smart_str_free ( loc_name )	893:2:26021:26045	994925	1	True				
ANR	994955	CallExpression	smart_str_free ( loc_name )		994925	0					
ANR	994956	Callee	smart_str_free		994925	0					
ANR	994957	Identifier	smart_str_free		994925	0					
ANR	994958	ArgumentList	loc_name		994925	1					
ANR	994959	Argument	loc_name		994925	0					
ANR	994960	Identifier	loc_name		994925	0					
ANR	994961	ReturnStatement	return 0 ;	894:2:26049:26057	994925	2	True				
ANR	994962	PrimaryExpression	0		994925	0					
ANR	994963	ReturnStatement	return 1 ;	896:1:26063:26071	994925	2	True				
ANR	994964	PrimaryExpression	1		994925	0					
ANR	994965	ReturnType	static int		994925	1					
ANR	994966	Identifier	handleAppendResult		994925	2					
ANR	994967	ParameterList	"int result , smart_str * loc_name"		994925	3					
ANR	994968	Parameter	int result	887:31:25813:25822	994925	0	True				
ANR	994969	ParameterType	int		994925	0					
ANR	994970	Identifier	result		994925	1					
ANR	994971	Parameter	smart_str * loc_name	887:43:25825:25843	994925	1	True				
ANR	994972	ParameterType	smart_str *		994925	0					
ANR	994973	Identifier	loc_name		994925	1					
ANR	994974	CFGEntryNode	ENTRY		994925		True				
ANR	994975	CFGExitNode	EXIT		994925		True				
ANR	994976	Symbol	result		994925						
ANR	994977	Symbol	NULL		994925						
ANR	994978	Symbol	U_ILLEGAL_ARGUMENT_ERROR		994925						
ANR	994979	Symbol	loc_name		994925						
ANR	994980	Symbol	FAILURE		994925						
ANR	994981	DeclStmt									
ANR	994982	Decl							smart_str	smart_str	loc_name_s
ANR	994983	DeclStmt									
ANR	994984	Decl							smart_str	smart_str *	loc_name
ANR	994985	DeclStmt									
ANR	994986	Decl							zval	zval *	arr
ANR	994987	DeclStmt									
ANR	994988	Decl							HashTable	HashTable *	hash_arr
ANR	994989	DeclStmt									
ANR	994990	Decl							int	int	result
ANR	994991	Function	get_private_subtags	992:0:28507:29632							
ANR	994992	FunctionDef	get_private_subtags (const char * loc_name)		994991	0					
ANR	994993	CompoundStatement		993:0:28569:29632	994991	0					
ANR	994994	IdentifierDeclStatement	zend_string * result = NULL ;	994:1:28572:28597	994991	0	True				
ANR	994995	IdentifierDecl	* result = NULL		994991	0					
ANR	994996	IdentifierDeclType	zend_string *		994991	0					
ANR	994997	Identifier	result		994991	1					
ANR	994998	AssignmentExpression	* result = NULL		994991	2		=			
ANR	994999	Identifier	NULL		994991	0					
ANR	995000	Identifier	NULL		994991	1					
ANR	995001	IdentifierDeclStatement	int singletonPos = 0 ;	995:1:28600:28621	994991	1	True				
ANR	995002	IdentifierDecl	singletonPos = 0		994991	0					
ANR	995003	IdentifierDeclType	int		994991	0					
ANR	995004	Identifier	singletonPos		994991	1					
ANR	995005	AssignmentExpression	singletonPos = 0		994991	2		=			
ANR	995006	Identifier	singletonPos		994991	0					
ANR	995007	PrimaryExpression	0		994991	1					
ANR	995008	IdentifierDeclStatement	int len = 0 ;	996:1:28624:28635	994991	2	True				
ANR	995009	IdentifierDecl	len = 0		994991	0					
ANR	995010	IdentifierDeclType	int		994991	0					
ANR	995011	Identifier	len		994991	1					
ANR	995012	AssignmentExpression	len = 0		994991	2		=			
ANR	995013	Identifier	len		994991	0					
ANR	995014	PrimaryExpression	0		994991	1					
ANR	995015	IdentifierDeclStatement	const char * mod_loc_name = NULL ;	997:1:28638:28669	994991	3	True				
ANR	995016	IdentifierDecl	* mod_loc_name = NULL		994991	0					
ANR	995017	IdentifierDeclType	const char *		994991	0					
ANR	995018	Identifier	mod_loc_name		994991	1					
ANR	995019	AssignmentExpression	* mod_loc_name = NULL		994991	2		=			
ANR	995020	Identifier	NULL		994991	0					
ANR	995021	Identifier	NULL		994991	1					
ANR	995022	IfStatement	if ( loc_name && ( len = strlen ( loc_name ) > 0 ) )		994991	4					
ANR	995023	Condition	loc_name && ( len = strlen ( loc_name ) > 0 )	999:5:28677:28715	994991	0	True				
ANR	995024	AndExpression	loc_name && ( len = strlen ( loc_name ) > 0 )		994991	0		&&			
ANR	995025	Identifier	loc_name		994991	0					
ANR	995026	AssignmentExpression	len = strlen ( loc_name ) > 0		994991	1		=			
ANR	995027	Identifier	len		994991	0					
ANR	995028	RelationalExpression	strlen ( loc_name ) > 0		994991	1		>			
ANR	995029	CallExpression	strlen ( loc_name )		994991	0					
ANR	995030	Callee	strlen		994991	0					
ANR	995031	Identifier	strlen		994991	0					
ANR	995032	ArgumentList	loc_name		994991	1					
ANR	995033	Argument	loc_name		994991	0					
ANR	995034	Identifier	loc_name		994991	0					
ANR	995035	PrimaryExpression	0		994991	1					
ANR	995036	CompoundStatement		7:46:148:148	994991	1					
ANR	995037	ExpressionStatement	mod_loc_name = loc_name	1000:2:28722:28746	994991	0	True				
ANR	995038	AssignmentExpression	mod_loc_name = loc_name		994991	0		=			
ANR	995039	Identifier	mod_loc_name		994991	0					
ANR	995040	Identifier	loc_name		994991	1					
ANR	995041	ExpressionStatement	len = strlen ( mod_loc_name )	1001:2:28750:28778	994991	1	True				
ANR	995042	AssignmentExpression	len = strlen ( mod_loc_name )		994991	0		=			
ANR	995043	Identifier	len		994991	0					
ANR	995044	CallExpression	strlen ( mod_loc_name )		994991	1					
ANR	995045	Callee	strlen		994991	0					
ANR	995046	Identifier	strlen		994991	0					
ANR	995047	ArgumentList	mod_loc_name		994991	1					
ANR	995048	Argument	mod_loc_name		994991	0					
ANR	995049	Identifier	mod_loc_name		994991	0					
ANR	995050	WhileStatement	while ( ( singletonPos = getSingletonPos ( mod_loc_name ) ) != - 1 )		994991	2					
ANR	995051	Condition	( singletonPos = getSingletonPos ( mod_loc_name ) ) != - 1	1002:9:28789:28839	994991	0	True				
ANR	995052	EqualityExpression	( singletonPos = getSingletonPos ( mod_loc_name ) ) != - 1		994991	0		!=			
ANR	995053	AssignmentExpression	singletonPos = getSingletonPos ( mod_loc_name )		994991	0		=			
ANR	995054	Identifier	singletonPos		994991	0					
ANR	995055	CallExpression	getSingletonPos ( mod_loc_name )		994991	1					
ANR	995056	Callee	getSingletonPos		994991	0					
ANR	995057	Identifier	getSingletonPos		994991	0					
ANR	995058	ArgumentList	mod_loc_name		994991	1					
ANR	995059	Argument	mod_loc_name		994991	0					
ANR	995060	Identifier	mod_loc_name		994991	0					
ANR	995061	UnaryOperationExpression	- 1		994991	1					
ANR	995062	UnaryOperator	-		994991	0					
ANR	995063	PrimaryExpression	1		994991	1					
ANR	995064	CompoundStatement		10:61:271:271	994991	1					
ANR	995065	IfStatement	if ( singletonPos != - 1 )		994991	0					
ANR	995066	Condition	singletonPos != - 1	1004:7:28851:28866	994991	0	True				
ANR	995067	EqualityExpression	singletonPos != - 1		994991	0		!=			
ANR	995068	Identifier	singletonPos		994991	0					
ANR	995069	UnaryOperationExpression	- 1		994991	1					
ANR	995070	UnaryOperator	-		994991	0					
ANR	995071	PrimaryExpression	1		994991	1					
ANR	995072	CompoundStatement		12:24:298:298	994991	1					
ANR	995073	IfStatement	if ( ( * ( mod_loc_name + singletonPos ) == 'x' ) || ( * ( mod_loc_name + singletonPos ) == 'X' ) )		994991	0					
ANR	995074	Condition	( * ( mod_loc_name + singletonPos ) == 'x' ) || ( * ( mod_loc_name + singletonPos ) == 'X' )	1005:8:28878:28951	994991	0	True				
ANR	995075	OrExpression	( * ( mod_loc_name + singletonPos ) == 'x' ) || ( * ( mod_loc_name + singletonPos ) == 'X' )		994991	0		||			
ANR	995076	EqualityExpression	* ( mod_loc_name + singletonPos ) == 'x'		994991	0		==			
ANR	995077	UnaryOperationExpression	* ( mod_loc_name + singletonPos )		994991	0					
ANR	995078	UnaryOperator	*		994991	0					
ANR	995079	AdditiveExpression	mod_loc_name + singletonPos		994991	1		+			
ANR	995080	Identifier	mod_loc_name		994991	0					
ANR	995081	Identifier	singletonPos		994991	1					
ANR	995082	PrimaryExpression	'x'		994991	1					
ANR	995083	EqualityExpression	* ( mod_loc_name + singletonPos ) == 'X'		994991	1		==			
ANR	995084	UnaryOperationExpression	* ( mod_loc_name + singletonPos )		994991	0					
ANR	995085	UnaryOperator	*		994991	0					
ANR	995086	AdditiveExpression	mod_loc_name + singletonPos		994991	1		+			
ANR	995087	Identifier	mod_loc_name		994991	0					
ANR	995088	Identifier	singletonPos		994991	1					
ANR	995089	PrimaryExpression	'X'		994991	1					
ANR	995090	CompoundStatement		13:84:384:384	994991	1					
ANR	995091	IfStatement	if ( singletonPos + 2 == len )		994991	0					
ANR	995092	Condition	singletonPos + 2 == len	1007:9:29003:29026	994991	0	True				
ANR	995093	EqualityExpression	singletonPos + 2 == len		994991	0		==			
ANR	995094	AdditiveExpression	singletonPos + 2		994991	0		+			
ANR	995095	Identifier	singletonPos		994991	0					
ANR	995096	PrimaryExpression	2		994991	1					
ANR	995097	Identifier	len		994991	1					
ANR	995098	CompoundStatement		15:34:458:458	994991	1					
ANR	995099	ElseStatement	else		994991	0					
ANR	995100	CompoundStatement		18:9:528:528	994991	0					
ANR	995101	ExpressionStatement	"result = zend_string_init ( mod_loc_name + singletonPos + 2 , ( len - ( singletonPos + 2 ) ) , 0 )"	1012:6:29159:29248	994991	0	True				
ANR	995102	AssignmentExpression	"result = zend_string_init ( mod_loc_name + singletonPos + 2 , ( len - ( singletonPos + 2 ) ) , 0 )"		994991	0		=			
ANR	995103	Identifier	result		994991	0					
ANR	995104	CallExpression	"zend_string_init ( mod_loc_name + singletonPos + 2 , ( len - ( singletonPos + 2 ) ) , 0 )"		994991	1					
ANR	995105	Callee	zend_string_init		994991	0					
ANR	995106	Identifier	zend_string_init		994991	0					
ANR	995107	ArgumentList	mod_loc_name + singletonPos + 2		994991	1					
ANR	995108	Argument	mod_loc_name + singletonPos + 2		994991	0					
ANR	995109	AdditiveExpression	mod_loc_name + singletonPos + 2		994991	0		+			
ANR	995110	Identifier	mod_loc_name		994991	0					
ANR	995111	AdditiveExpression	singletonPos + 2		994991	1		+			
ANR	995112	Identifier	singletonPos		994991	0					
ANR	995113	PrimaryExpression	2		994991	1					
ANR	995114	Argument	len - ( singletonPos + 2 )		994991	1					
ANR	995115	AdditiveExpression	len - ( singletonPos + 2 )		994991	0		-			
ANR	995116	Identifier	len		994991	0					
ANR	995117	AdditiveExpression	singletonPos + 2		994991	1		+			
ANR	995118	Identifier	singletonPos		994991	0					
ANR	995119	PrimaryExpression	2		994991	1					
ANR	995120	Argument	0		994991	2					
ANR	995121	PrimaryExpression	0		994991	0					
ANR	995122	BreakStatement	break ;	1014:5:29262:29267	994991	1	True				
ANR	995123	ElseStatement	else		994991	0					
ANR	995124	CompoundStatement		24:8:713:713	994991	0					
ANR	995125	IfStatement	if ( singletonPos + 1 >= len )		994991	0					
ANR	995126	Condition	singletonPos + 1 >= len	1017:9:29294:29317	994991	0	True				
ANR	995127	RelationalExpression	singletonPos + 1 >= len		994991	0		>=			
ANR	995128	AdditiveExpression	singletonPos + 1		994991	0		+			
ANR	995129	Identifier	singletonPos		994991	0					
ANR	995130	PrimaryExpression	1		994991	1					
ANR	995131	Identifier	len		994991	1					
ANR	995132	CompoundStatement		25:34:749:749	994991	1					
ANR	995133	BreakStatement	break ;	1019:6:29350:29355	994991	0	True				
ANR	995134	ElseStatement	else		994991	0					
ANR	995135	CompoundStatement		28:12:799:799	994991	0					
ANR	995136	ExpressionStatement	mod_loc_name = mod_loc_name + singletonPos + 1	1022:6:29489:29534	994991	0	True				
ANR	995137	AssignmentExpression	mod_loc_name = mod_loc_name + singletonPos + 1		994991	0		=			
ANR	995138	Identifier	mod_loc_name		994991	0					
ANR	995139	AdditiveExpression	mod_loc_name + singletonPos + 1		994991	1		+			
ANR	995140	Identifier	mod_loc_name		994991	0					
ANR	995141	AdditiveExpression	singletonPos + 1		994991	1		+			
ANR	995142	Identifier	singletonPos		994991	0					
ANR	995143	PrimaryExpression	1		994991	1					
ANR	995144	ExpressionStatement	len = strlen ( mod_loc_name )	1023:6:29542:29568	994991	1	True				
ANR	995145	AssignmentExpression	len = strlen ( mod_loc_name )		994991	0		=			
ANR	995146	Identifier	len		994991	0					
ANR	995147	CallExpression	strlen ( mod_loc_name )		994991	1					
ANR	995148	Callee	strlen		994991	0					
ANR	995149	Identifier	strlen		994991	0					
ANR	995150	ArgumentList	mod_loc_name		994991	1					
ANR	995151	Argument	mod_loc_name		994991	0					
ANR	995152	Identifier	mod_loc_name		994991	0					
ANR	995153	ReturnStatement	return result ;	1031:1:29617:29630	994991	5	True				
ANR	995154	Identifier	result		994991	0					
ANR	995155	ReturnType	static zend_string *		994991	1					
ANR	995156	Identifier	get_private_subtags		994991	2					
ANR	995157	ParameterList	const char * loc_name		994991	3					
ANR	995158	Parameter	const char * loc_name	992:40:28547:28566	994991	0	True				
ANR	995159	ParameterType	const char *		994991	0					
ANR	995160	Identifier	loc_name		994991	1					
ANR	995161	CFGEntryNode	ENTRY		994991		True				
ANR	995162	CFGExitNode	EXIT		994991		True				
ANR	995163	Symbol	result		994991						
ANR	995164	Symbol	strlen		994991						
ANR	995165	Symbol	* ( mod_loc_name + singletonPos )		994991						
ANR	995166	Symbol	zend_string_init		994991						
ANR	995167	Symbol	NULL		994991						
ANR	995168	Symbol	len		994991						
ANR	995169	Symbol	* singletonPos		994991						
ANR	995170	Symbol	mod_loc_name		994991						
ANR	995171	Symbol	getSingletonPos		994991						
ANR	995172	Symbol	loc_name		994991						
ANR	995173	Symbol	* mod_loc_name		994991						
ANR	995174	Symbol	singletonPos		994991						
ANR	995175	Function	add_array_entry	1037:0:29681:31258							
ANR	995176	FunctionDef	"add_array_entry (const char * loc_name , zval * hash_arr , char * key_name)"		995175	0					
ANR	995177	CompoundStatement		1038:0:29762:31258	995175	0					
ANR	995178	IdentifierDeclStatement	zend_string * key_value = NULL ;	1039:1:29765:29797	995175	0	True				
ANR	995179	IdentifierDecl	* key_value = NULL		995175	0					
ANR	995180	IdentifierDeclType	zend_string *		995175	0					
ANR	995181	Identifier	key_value		995175	1					
ANR	995182	AssignmentExpression	* key_value = NULL		995175	2		=			
ANR	995183	Identifier	NULL		995175	0					
ANR	995184	Identifier	NULL		995175	1					
ANR	995185	IdentifierDeclStatement	char * cur_key_name = NULL ;	1040:1:29800:29827	995175	1	True				
ANR	995186	IdentifierDecl	* cur_key_name = NULL		995175	0					
ANR	995187	IdentifierDeclType	char *		995175	0					
ANR	995188	Identifier	cur_key_name		995175	1					
ANR	995189	AssignmentExpression	* cur_key_name = NULL		995175	2		=			
ANR	995190	Identifier	NULL		995175	0					
ANR	995191	Identifier	NULL		995175	1					
ANR	995192	IdentifierDeclStatement	char * token = NULL ;	1041:1:29830:29858	995175	2	True				
ANR	995193	IdentifierDecl	* token = NULL		995175	0					
ANR	995194	IdentifierDeclType	char *		995175	0					
ANR	995195	Identifier	token		995175	1					
ANR	995196	AssignmentExpression	* token = NULL		995175	2		=			
ANR	995197	Identifier	NULL		995175	0					
ANR	995198	Identifier	NULL		995175	1					
ANR	995199	IdentifierDeclStatement	char * last_ptr = NULL ;	1042:1:29861:29886	995175	3	True				
ANR	995200	IdentifierDecl	* last_ptr = NULL		995175	0					
ANR	995201	IdentifierDeclType	char *		995175	0					
ANR	995202	Identifier	last_ptr		995175	1					
ANR	995203	AssignmentExpression	* last_ptr = NULL		995175	2		=			
ANR	995204	Identifier	NULL		995175	0					
ANR	995205	Identifier	NULL		995175	1					
ANR	995206	IdentifierDeclStatement	int result = 0 ;	1044:1:29890:29905	995175	4	True				
ANR	995207	IdentifierDecl	result = 0		995175	0					
ANR	995208	IdentifierDeclType	int		995175	0					
ANR	995209	Identifier	result		995175	1					
ANR	995210	AssignmentExpression	result = 0		995175	2		=			
ANR	995211	Identifier	result		995175	0					
ANR	995212	PrimaryExpression	0		995175	1					
ANR	995213	IdentifierDeclStatement	int cur_result = 0 ;	1045:1:29908:29929	995175	5	True				
ANR	995214	IdentifierDecl	cur_result = 0		995175	0					
ANR	995215	IdentifierDeclType	int		995175	0					
ANR	995216	Identifier	cur_result		995175	1					
ANR	995217	AssignmentExpression	cur_result = 0		995175	2		=			
ANR	995218	Identifier	cur_result		995175	0					
ANR	995219	PrimaryExpression	0		995175	1					
ANR	995220	IdentifierDeclStatement	int cnt = 0 ;	1046:1:29932:29947	995175	6	True				
ANR	995221	IdentifierDecl	cnt = 0		995175	0					
ANR	995222	IdentifierDeclType	int		995175	0					
ANR	995223	Identifier	cnt		995175	1					
ANR	995224	AssignmentExpression	cnt = 0		995175	2		=			
ANR	995225	Identifier	cnt		995175	0					
ANR	995226	PrimaryExpression	0		995175	1					
ANR	995227	IfStatement	"if ( strcmp ( key_name , LOC_PRIVATE_TAG ) == 0 )"		995175	7					
ANR	995228	Condition	"strcmp ( key_name , LOC_PRIVATE_TAG ) == 0"	1049:5:29956:29992	995175	0	True				
ANR	995229	EqualityExpression	"strcmp ( key_name , LOC_PRIVATE_TAG ) == 0"		995175	0		==			
ANR	995230	CallExpression	"strcmp ( key_name , LOC_PRIVATE_TAG )"		995175	0					
ANR	995231	Callee	strcmp		995175	0					
ANR	995232	Identifier	strcmp		995175	0					
ANR	995233	ArgumentList	key_name		995175	1					
ANR	995234	Argument	key_name		995175	0					
ANR	995235	Identifier	key_name		995175	0					
ANR	995236	Argument	LOC_PRIVATE_TAG		995175	1					
ANR	995237	Identifier	LOC_PRIVATE_TAG		995175	0					
ANR	995238	PrimaryExpression	0		995175	1					
ANR	995239	CompoundStatement		12:44:232:232	995175	1					
ANR	995240	ExpressionStatement	key_value = get_private_subtags ( loc_name )	1050:2:29999:30042	995175	0	True				
ANR	995241	AssignmentExpression	key_value = get_private_subtags ( loc_name )		995175	0		=			
ANR	995242	Identifier	key_value		995175	0					
ANR	995243	CallExpression	get_private_subtags ( loc_name )		995175	1					
ANR	995244	Callee	get_private_subtags		995175	0					
ANR	995245	Identifier	get_private_subtags		995175	0					
ANR	995246	ArgumentList	loc_name		995175	1					
ANR	995247	Argument	loc_name		995175	0					
ANR	995248	Identifier	loc_name		995175	0					
ANR	995249	ExpressionStatement	result = 1	1051:2:30046:30056	995175	1	True				
ANR	995250	AssignmentExpression	result = 1		995175	0		=			
ANR	995251	Identifier	result		995175	0					
ANR	995252	PrimaryExpression	1		995175	1					
ANR	995253	ElseStatement	else		995175	0					
ANR	995254	CompoundStatement		15:8:303:303	995175	0					
ANR	995255	ExpressionStatement	"key_value = get_icu_value_internal ( loc_name , key_name , & result , 1 )"	1053:2:30070:30139	995175	0	True				
ANR	995256	AssignmentExpression	"key_value = get_icu_value_internal ( loc_name , key_name , & result , 1 )"		995175	0		=			
ANR	995257	Identifier	key_value		995175	0					
ANR	995258	CallExpression	"get_icu_value_internal ( loc_name , key_name , & result , 1 )"		995175	1					
ANR	995259	Callee	get_icu_value_internal		995175	0					
ANR	995260	Identifier	get_icu_value_internal		995175	0					
ANR	995261	ArgumentList	loc_name		995175	1					
ANR	995262	Argument	loc_name		995175	0					
ANR	995263	Identifier	loc_name		995175	0					
ANR	995264	Argument	key_name		995175	1					
ANR	995265	Identifier	key_name		995175	0					
ANR	995266	Argument	& result		995175	2					
ANR	995267	UnaryOperationExpression	& result		995175	0					
ANR	995268	UnaryOperator	&		995175	0					
ANR	995269	Identifier	result		995175	1					
ANR	995270	Argument	1		995175	3					
ANR	995271	PrimaryExpression	1		995175	0					
ANR	995272	IfStatement	"if ( ( strcmp ( key_name , LOC_PRIVATE_TAG ) == 0 ) || ( strcmp ( key_name , LOC_VARIANT_TAG ) == 0 ) )"		995175	8					
ANR	995273	Condition	"( strcmp ( key_name , LOC_PRIVATE_TAG ) == 0 ) || ( strcmp ( key_name , LOC_VARIANT_TAG ) == 0 )"	1055:5:30149:30233	995175	0	True				
ANR	995274	OrExpression	"( strcmp ( key_name , LOC_PRIVATE_TAG ) == 0 ) || ( strcmp ( key_name , LOC_VARIANT_TAG ) == 0 )"		995175	0		||			
ANR	995275	EqualityExpression	"strcmp ( key_name , LOC_PRIVATE_TAG ) == 0"		995175	0		==			
ANR	995276	CallExpression	"strcmp ( key_name , LOC_PRIVATE_TAG )"		995175	0					
ANR	995277	Callee	strcmp		995175	0					
ANR	995278	Identifier	strcmp		995175	0					
ANR	995279	ArgumentList	key_name		995175	1					
ANR	995280	Argument	key_name		995175	0					
ANR	995281	Identifier	key_name		995175	0					
ANR	995282	Argument	LOC_PRIVATE_TAG		995175	1					
ANR	995283	Identifier	LOC_PRIVATE_TAG		995175	0					
ANR	995284	PrimaryExpression	0		995175	1					
ANR	995285	EqualityExpression	"strcmp ( key_name , LOC_VARIANT_TAG ) == 0"		995175	1		==			
ANR	995286	CallExpression	"strcmp ( key_name , LOC_VARIANT_TAG )"		995175	0					
ANR	995287	Callee	strcmp		995175	0					
ANR	995288	Identifier	strcmp		995175	0					
ANR	995289	ArgumentList	key_name		995175	1					
ANR	995290	Argument	key_name		995175	0					
ANR	995291	Identifier	key_name		995175	0					
ANR	995292	Argument	LOC_VARIANT_TAG		995175	1					
ANR	995293	Identifier	LOC_VARIANT_TAG		995175	0					
ANR	995294	PrimaryExpression	0		995175	1					
ANR	995295	CompoundStatement		19:44:473:473	995175	1					
ANR	995296	IfStatement	if ( result > 0 && key_value )		995175	0					
ANR	995297	Condition	result > 0 && key_value	1057:6:30244:30266	995175	0	True				
ANR	995298	AndExpression	result > 0 && key_value		995175	0		&&			
ANR	995299	RelationalExpression	result > 0		995175	0		>			
ANR	995300	Identifier	result		995175	0					
ANR	995301	PrimaryExpression	0		995175	1					
ANR	995302	Identifier	key_value		995175	1					
ANR	995303	CompoundStatement		20:30:505:505	995175	1					
ANR	995304	ExpressionStatement	"token = php_strtok_r ( key_value -> val , DELIMITER , & last_ptr )"	1059:3:30310:30370	995175	0	True				
ANR	995305	AssignmentExpression	"token = php_strtok_r ( key_value -> val , DELIMITER , & last_ptr )"		995175	0		=			
ANR	995306	Identifier	token		995175	0					
ANR	995307	CallExpression	"php_strtok_r ( key_value -> val , DELIMITER , & last_ptr )"		995175	1					
ANR	995308	Callee	php_strtok_r		995175	0					
ANR	995309	Identifier	php_strtok_r		995175	0					
ANR	995310	ArgumentList	key_value -> val		995175	1					
ANR	995311	Argument	key_value -> val		995175	0					
ANR	995312	PtrMemberAccess	key_value -> val		995175	0					
ANR	995313	Identifier	key_value		995175	0					
ANR	995314	Identifier	val		995175	1					
ANR	995315	Argument	DELIMITER		995175	1					
ANR	995316	Identifier	DELIMITER		995175	0					
ANR	995317	Argument	& last_ptr		995175	2					
ANR	995318	UnaryOperationExpression	& last_ptr		995175	0					
ANR	995319	UnaryOperator	&		995175	0					
ANR	995320	Identifier	last_ptr		995175	1					
ANR	995321	IfStatement	if ( cur_key_name )		995175	1					
ANR	995322	Condition	cur_key_name	1060:7:30379:30390	995175	0	True				
ANR	995323	Identifier	cur_key_name		995175	0					
ANR	995324	CompoundStatement		23:21:630:630	995175	1					
ANR	995325	ExpressionStatement	efree ( cur_key_name )	1061:4:30399:30419	995175	0	True				
ANR	995326	CallExpression	efree ( cur_key_name )		995175	0					
ANR	995327	Callee	efree		995175	0					
ANR	995328	Identifier	efree		995175	0					
ANR	995329	ArgumentList	cur_key_name		995175	1					
ANR	995330	Argument	cur_key_name		995175	0					
ANR	995331	Identifier	cur_key_name		995175	0					
ANR	995332	ExpressionStatement	"cur_key_name = ( char * ) ecalloc ( 25 , 25 )"	1063:3:30429:30468	995175	2	True				
ANR	995333	AssignmentExpression	"cur_key_name = ( char * ) ecalloc ( 25 , 25 )"		995175	0		=			
ANR	995334	Identifier	cur_key_name		995175	0					
ANR	995335	CastExpression	"( char * ) ecalloc ( 25 , 25 )"		995175	1					
ANR	995336	CastTarget	char *		995175	0					
ANR	995337	CallExpression	"ecalloc ( 25 , 25 )"		995175	1					
ANR	995338	Callee	ecalloc		995175	0					
ANR	995339	Identifier	ecalloc		995175	0					
ANR	995340	ArgumentList	25		995175	1					
ANR	995341	Argument	25		995175	0					
ANR	995342	PrimaryExpression	25		995175	0					
ANR	995343	Argument	25		995175	1					
ANR	995344	PrimaryExpression	25		995175	0					
ANR	995345	ExpressionStatement	"sprintf ( cur_key_name , ""%s%d"" , key_name , cnt ++ )"	1064:3:30473:30522	995175	3	True				
ANR	995346	CallExpression	"sprintf ( cur_key_name , ""%s%d"" , key_name , cnt ++ )"		995175	0					
ANR	995347	Callee	sprintf		995175	0					
ANR	995348	Identifier	sprintf		995175	0					
ANR	995349	ArgumentList	cur_key_name		995175	1					
ANR	995350	Argument	cur_key_name		995175	0					
ANR	995351	Identifier	cur_key_name		995175	0					
ANR	995352	Argument	"""%s%d"""		995175	1					
ANR	995353	PrimaryExpression	"""%s%d"""		995175	0					
ANR	995354	Argument	key_name		995175	2					
ANR	995355	Identifier	key_name		995175	0					
ANR	995356	Argument	cnt ++		995175	3					
ANR	995357	PostIncDecOperationExpression	cnt ++		995175	0					
ANR	995358	Identifier	cnt		995175	0					
ANR	995359	IncDec	++		995175	1					
ANR	995360	ExpressionStatement	"add_assoc_string ( hash_arr , cur_key_name , token )"	1065:3:30527:30576	995175	4	True				
ANR	995361	CallExpression	"add_assoc_string ( hash_arr , cur_key_name , token )"		995175	0					
ANR	995362	Callee	add_assoc_string		995175	0					
ANR	995363	Identifier	add_assoc_string		995175	0					
ANR	995364	ArgumentList	hash_arr		995175	1					
ANR	995365	Argument	hash_arr		995175	0					
ANR	995366	Identifier	hash_arr		995175	0					
ANR	995367	Argument	cur_key_name		995175	1					
ANR	995368	Identifier	cur_key_name		995175	0					
ANR	995369	Argument	token		995175	2					
ANR	995370	Identifier	token		995175	0					
ANR	995371	WhileStatement	"while ( ( token = php_strtok_r ( NULL , DELIMITER , & last_ptr ) ) && ( strlen ( token ) > 1 ) )"		995175	5					
ANR	995372	Condition	"( token = php_strtok_r ( NULL , DELIMITER , & last_ptr ) ) && ( strlen ( token ) > 1 )"	1067:10:30654:30726	995175	0	True				
ANR	995373	AndExpression	"( token = php_strtok_r ( NULL , DELIMITER , & last_ptr ) ) && ( strlen ( token ) > 1 )"		995175	0		&&			
ANR	995374	AssignmentExpression	"token = php_strtok_r ( NULL , DELIMITER , & last_ptr )"		995175	0		=			
ANR	995375	Identifier	token		995175	0					
ANR	995376	CallExpression	"php_strtok_r ( NULL , DELIMITER , & last_ptr )"		995175	1					
ANR	995377	Callee	php_strtok_r		995175	0					
ANR	995378	Identifier	php_strtok_r		995175	0					
ANR	995379	ArgumentList	NULL		995175	1					
ANR	995380	Argument	NULL		995175	0					
ANR	995381	Identifier	NULL		995175	0					
ANR	995382	Argument	DELIMITER		995175	1					
ANR	995383	Identifier	DELIMITER		995175	0					
ANR	995384	Argument	& last_ptr		995175	2					
ANR	995385	UnaryOperationExpression	& last_ptr		995175	0					
ANR	995386	UnaryOperator	&		995175	0					
ANR	995387	Identifier	last_ptr		995175	1					
ANR	995388	RelationalExpression	strlen ( token ) > 1		995175	1		>			
ANR	995389	CallExpression	strlen ( token )		995175	0					
ANR	995390	Callee	strlen		995175	0					
ANR	995391	Identifier	strlen		995175	0					
ANR	995392	ArgumentList	token		995175	1					
ANR	995393	Argument	token		995175	0					
ANR	995394	Identifier	token		995175	0					
ANR	995395	PrimaryExpression	1		995175	1					
ANR	995396	CompoundStatement		30:85:966:966	995175	1					
ANR	995397	ExpressionStatement	"sprintf ( cur_key_name , ""%s%d"" , key_name , cnt ++ )"	1068:4:30735:30784	995175	0	True				
ANR	995398	CallExpression	"sprintf ( cur_key_name , ""%s%d"" , key_name , cnt ++ )"		995175	0					
ANR	995399	Callee	sprintf		995175	0					
ANR	995400	Identifier	sprintf		995175	0					
ANR	995401	ArgumentList	cur_key_name		995175	1					
ANR	995402	Argument	cur_key_name		995175	0					
ANR	995403	Identifier	cur_key_name		995175	0					
ANR	995404	Argument	"""%s%d"""		995175	1					
ANR	995405	PrimaryExpression	"""%s%d"""		995175	0					
ANR	995406	Argument	key_name		995175	2					
ANR	995407	Identifier	key_name		995175	0					
ANR	995408	Argument	cnt ++		995175	3					
ANR	995409	PostIncDecOperationExpression	cnt ++		995175	0					
ANR	995410	Identifier	cnt		995175	0					
ANR	995411	IncDec	++		995175	1					
ANR	995412	ExpressionStatement	"add_assoc_string ( hash_arr , cur_key_name , token )"	1069:4:30790:30839	995175	1	True				
ANR	995413	CallExpression	"add_assoc_string ( hash_arr , cur_key_name , token )"		995175	0					
ANR	995414	Callee	add_assoc_string		995175	0					
ANR	995415	Identifier	add_assoc_string		995175	0					
ANR	995416	ArgumentList	hash_arr		995175	1					
ANR	995417	Argument	hash_arr		995175	0					
ANR	995418	Identifier	hash_arr		995175	0					
ANR	995419	Argument	cur_key_name		995175	1					
ANR	995420	Identifier	cur_key_name		995175	0					
ANR	995421	Argument	token		995175	2					
ANR	995422	Identifier	token		995175	0					
ANR	995423	IfStatement	if ( key_value )		995175	1					
ANR	995424	Condition	key_value	1076:6:30916:30924	995175	0	True				
ANR	995425	Identifier	key_value		995175	0					
ANR	995426	CompoundStatement		39:17:1164:1164	995175	1					
ANR	995427	ExpressionStatement	zend_string_release ( key_value )	1077:3:30932:30962	995175	0	True				
ANR	995428	CallExpression	zend_string_release ( key_value )		995175	0					
ANR	995429	Callee	zend_string_release		995175	0					
ANR	995430	Identifier	zend_string_release		995175	0					
ANR	995431	ArgumentList	key_value		995175	1					
ANR	995432	Argument	key_value		995175	0					
ANR	995433	Identifier	key_value		995175	0					
ANR	995434	ElseStatement	else		995175	0					
ANR	995435	CompoundStatement		42:8:1213:1213	995175	0					
ANR	995436	IfStatement	if ( result == 1 )		995175	0					
ANR	995437	Condition	result == 1	1080:6:30984:30994	995175	0	True				
ANR	995438	EqualityExpression	result == 1		995175	0		==			
ANR	995439	Identifier	result		995175	0					
ANR	995440	PrimaryExpression	1		995175	1					
ANR	995441	CompoundStatement		43:19:1234:1234	995175	1					
ANR	995442	ExpressionStatement	"add_assoc_str ( hash_arr , key_name , key_value )"	1081:3:31002:31048	995175	0	True				
ANR	995443	CallExpression	"add_assoc_str ( hash_arr , key_name , key_value )"		995175	0					
ANR	995444	Callee	add_assoc_str		995175	0					
ANR	995445	Identifier	add_assoc_str		995175	0					
ANR	995446	ArgumentList	hash_arr		995175	1					
ANR	995447	Argument	hash_arr		995175	0					
ANR	995448	Identifier	hash_arr		995175	0					
ANR	995449	Argument	key_name		995175	1					
ANR	995450	Identifier	key_name		995175	0					
ANR	995451	Argument	key_value		995175	2					
ANR	995452	Identifier	key_value		995175	0					
ANR	995453	ExpressionStatement	cur_result = 1	1082:3:31053:31067	995175	1	True				
ANR	995454	AssignmentExpression	cur_result = 1		995175	0		=			
ANR	995455	Identifier	cur_result		995175	0					
ANR	995456	PrimaryExpression	1		995175	1					
ANR	995457	ElseStatement	else		995175	0					
ANR	995458	IfStatement	if ( key_value )		995175	0					
ANR	995459	Condition	key_value	1083:13:31082:31090	995175	0	True				
ANR	995460	Identifier	key_value		995175	0					
ANR	995461	CompoundStatement		46:24:1330:1330	995175	1					
ANR	995462	ExpressionStatement	zend_string_release ( key_value )	1084:3:31098:31128	995175	0	True				
ANR	995463	CallExpression	zend_string_release ( key_value )		995175	0					
ANR	995464	Callee	zend_string_release		995175	0					
ANR	995465	Identifier	zend_string_release		995175	0					
ANR	995466	ArgumentList	key_value		995175	1					
ANR	995467	Argument	key_value		995175	0					
ANR	995468	Identifier	key_value		995175	0					
ANR	995469	IfStatement	if ( cur_key_name )		995175	9					
ANR	995470	Condition	cur_key_name	1088:5:31143:31154	995175	0	True				
ANR	995471	Identifier	cur_key_name		995175	0					
ANR	995472	CompoundStatement		51:19:1394:1394	995175	1					
ANR	995473	ExpressionStatement	efree ( cur_key_name )	1089:2:31161:31181	995175	0	True				
ANR	995474	CallExpression	efree ( cur_key_name )		995175	0					
ANR	995475	Callee	efree		995175	0					
ANR	995476	Identifier	efree		995175	0					
ANR	995477	ArgumentList	cur_key_name		995175	1					
ANR	995478	Argument	cur_key_name		995175	0					
ANR	995479	Identifier	cur_key_name		995175	0					
ANR	995480	ReturnStatement	return cur_result ;	1092:1:31239:31256	995175	10	True				
ANR	995481	Identifier	cur_result		995175	0					
ANR	995482	ReturnType	static int		995175	1					
ANR	995483	Identifier	add_array_entry		995175	2					
ANR	995484	ParameterList	"const char * loc_name , zval * hash_arr , char * key_name"		995175	3					
ANR	995485	Parameter	const char * loc_name	1037:27:29708:29727	995175	0	True				
ANR	995486	ParameterType	const char *		995175	0					
ANR	995487	Identifier	loc_name		995175	1					
ANR	995488	Parameter	zval * hash_arr	1037:49:29730:29743	995175	1	True				
ANR	995489	ParameterType	zval *		995175	0					
ANR	995490	Identifier	hash_arr		995175	1					
ANR	995491	Parameter	char * key_name	1037:65:29746:29759	995175	2	True				
ANR	995492	ParameterType	char *		995175	0					
ANR	995493	Identifier	key_name		995175	1					
ANR	995494	CFGEntryNode	ENTRY		995175		True				
ANR	995495	CFGExitNode	EXIT		995175		True				
ANR	995496	Symbol	strcmp		995175						
ANR	995497	Symbol	NULL		995175						
ANR	995498	Symbol	LOC_VARIANT_TAG		995175						
ANR	995499	Symbol	& last_ptr		995175						
ANR	995500	Symbol	* key_value		995175						
ANR	995501	Symbol	cur_key_name		995175						
ANR	995502	Symbol	cnt		995175						
ANR	995503	Symbol	LOC_PRIVATE_TAG		995175						
ANR	995504	Symbol	hash_arr		995175						
ANR	995505	Symbol	key_value -> val		995175						
ANR	995506	Symbol	last_ptr		995175						
ANR	995507	Symbol	cur_result		995175						
ANR	995508	Symbol	DELIMITER		995175						
ANR	995509	Symbol	token		995175						
ANR	995510	Symbol	key_name		995175						
ANR	995511	Symbol	result		995175						
ANR	995512	Symbol	get_private_subtags		995175						
ANR	995513	Symbol	strlen		995175						
ANR	995514	Symbol	get_icu_value_internal		995175						
ANR	995515	Symbol	& result		995175						
ANR	995516	Symbol	php_strtok_r		995175						
ANR	995517	Symbol	ecalloc		995175						
ANR	995518	Symbol	loc_name		995175						
ANR	995519	Symbol	key_value		995175						
ANR	995520	DeclStmt									
ANR	995521	Decl							const char	const char *	loc_name
ANR	995522	DeclStmt									
ANR	995523	Decl							size_t	size_t	loc_name_len
ANR	995524	DeclStmt									
ANR	995525	Decl							int	int	grOffset
ANR	995526	DeclStmt									
ANR	995527	Decl							const char	const char *	loc_name
ANR	995528	DeclStmt									
ANR	995529	Decl							size_t	size_t	loc_name_len
ANR	995530	DeclStmt									
ANR	995531	Decl							int	int	result
ANR	995532	DeclStmt									
ANR	995533	Decl							char	char *	token
ANR	995534	DeclStmt									
ANR	995535	Decl							zend_string	zend_string *	variant
ANR	995536	DeclStmt									
ANR	995537	Decl							char	char *	saved_ptr
ANR	995538	Function	strToMatch	1202:0:34227:34710							
ANR	995539	FunctionDef	"strToMatch (const char * str , char * retstr)"		995538	0					
ANR	995540	CompoundStatement		1203:0:34280:34710	995538	0					
ANR	995541	IdentifierDeclStatement	char * anchor = NULL ;	1204:1:34283:34304	995538	0	True				
ANR	995542	IdentifierDecl	* anchor = NULL		995538	0					
ANR	995543	IdentifierDeclType	char *		995538	0					
ANR	995544	Identifier	anchor		995538	1					
ANR	995545	AssignmentExpression	* anchor = NULL		995538	2		=			
ANR	995546	Identifier	NULL		995538	0					
ANR	995547	Identifier	NULL		995538	1					
ANR	995548	IdentifierDeclStatement	const char * anchor1 = NULL ;	1205:1:34307:34334	995538	1	True				
ANR	995549	IdentifierDecl	* anchor1 = NULL		995538	0					
ANR	995550	IdentifierDeclType	const char *		995538	0					
ANR	995551	Identifier	anchor1		995538	1					
ANR	995552	AssignmentExpression	* anchor1 = NULL		995538	2		=			
ANR	995553	Identifier	NULL		995538	0					
ANR	995554	Identifier	NULL		995538	1					
ANR	995555	IdentifierDeclStatement	int result = 0 ;	1206:1:34337:34353	995538	2	True				
ANR	995556	IdentifierDecl	result = 0		995538	0					
ANR	995557	IdentifierDeclType	int		995538	0					
ANR	995558	Identifier	result		995538	1					
ANR	995559	AssignmentExpression	result = 0		995538	2		=			
ANR	995560	Identifier	result		995538	0					
ANR	995561	PrimaryExpression	0		995538	1					
ANR	995562	IfStatement	if ( ( ! str ) || str [ 0 ] == '\\0' )		995538	3					
ANR	995563	Condition	( ! str ) || str [ 0 ] == '\\0'	1208:8:34364:34387	995538	0	True				
ANR	995564	OrExpression	( ! str ) || str [ 0 ] == '\\0'		995538	0		||			
ANR	995565	UnaryOperationExpression	! str		995538	0					
ANR	995566	UnaryOperator	!		995538	0					
ANR	995567	Identifier	str		995538	1					
ANR	995568	EqualityExpression	str [ 0 ] == '\\0'		995538	1		==			
ANR	995569	ArrayIndexing	str [ 0 ]		995538	0					
ANR	995570	Identifier	str		995538	0					
ANR	995571	PrimaryExpression	0		995538	1					
ANR	995572	PrimaryExpression	'\\0'		995538	1					
ANR	995573	CompoundStatement		6:33:108:108	995538	1					
ANR	995574	ReturnStatement	return result ;	1209:8:34399:34412	995538	0	True				
ANR	995575	Identifier	result		995538	0					
ANR	995576	ElseStatement	else		995538	0					
ANR	995577	CompoundStatement		8:11:144:144	995538	0					
ANR	995578	ExpressionStatement	anchor = retstr	1211:1:34428:34443	995538	0	True				
ANR	995579	AssignmentExpression	anchor = retstr		995538	0		=			
ANR	995580	Identifier	anchor		995538	0					
ANR	995581	Identifier	retstr		995538	1					
ANR	995582	ExpressionStatement	anchor1 = str	1212:1:34446:34459	995538	1	True				
ANR	995583	AssignmentExpression	anchor1 = str		995538	0		=			
ANR	995584	Identifier	anchor1		995538	0					
ANR	995585	Identifier	str		995538	1					
ANR	995586	WhileStatement	while ( ( * str ) != '\\0' )		995538	2					
ANR	995587	Condition	( * str ) != '\\0'	1213:15:34476:34487	995538	0	True				
ANR	995588	EqualityExpression	( * str ) != '\\0'		995538	0		!=			
ANR	995589	UnaryOperationExpression	* str		995538	0					
ANR	995590	UnaryOperator	*		995538	0					
ANR	995591	Identifier	str		995538	1					
ANR	995592	PrimaryExpression	'\\0'		995538	1					
ANR	995593	CompoundStatement		11:29:209:209	995538	1					
ANR	995594	IfStatement	if ( * str == '-' )		995538	0					
ANR	995595	Condition	* str == '-'	1214:6:34498:34508	995538	0	True				
ANR	995596	EqualityExpression	* str == '-'		995538	0		==			
ANR	995597	UnaryOperationExpression	* str		995538	0					
ANR	995598	UnaryOperator	*		995538	0					
ANR	995599	Identifier	str		995538	1					
ANR	995600	PrimaryExpression	'-'		995538	1					
ANR	995601	CompoundStatement		12:19:230:230	995538	1					
ANR	995602	ExpressionStatement	* retstr = '_'	1215:3:34516:34530	995538	0	True				
ANR	995603	AssignmentExpression	* retstr = '_'		995538	0		=			
ANR	995604	UnaryOperationExpression	* retstr		995538	0					
ANR	995605	UnaryOperator	*		995538	0					
ANR	995606	Identifier	retstr		995538	1					
ANR	995607	PrimaryExpression	'_'		995538	1					
ANR	995608	ElseStatement	else		995538	0					
ANR	995609	CompoundStatement		14:9:260:260	995538	0					
ANR	995610	ExpressionStatement	* retstr = tolower ( * str )	1217:3:34546:34569	995538	0	True				
ANR	995611	AssignmentExpression	* retstr = tolower ( * str )		995538	0		=			
ANR	995612	UnaryOperationExpression	* retstr		995538	0					
ANR	995613	UnaryOperator	*		995538	0					
ANR	995614	Identifier	retstr		995538	1					
ANR	995615	CallExpression	tolower ( * str )		995538	1					
ANR	995616	Callee	tolower		995538	0					
ANR	995617	Identifier	tolower		995538	0					
ANR	995618	ArgumentList	* str		995538	1					
ANR	995619	Argument	* str		995538	0					
ANR	995620	UnaryOperationExpression	* str		995538	0					
ANR	995621	UnaryOperator	*		995538	0					
ANR	995622	Identifier	str		995538	1					
ANR	995623	ExpressionStatement	str ++	1219:12:34587:34592	995538	1	True				
ANR	995624	PostIncDecOperationExpression	str ++		995538	0					
ANR	995625	Identifier	str		995538	0					
ANR	995626	IncDec	++		995538	1					
ANR	995627	ExpressionStatement	retstr ++	1220:12:34606:34614	995538	2	True				
ANR	995628	PostIncDecOperationExpression	retstr ++		995538	0					
ANR	995629	Identifier	retstr		995538	0					
ANR	995630	IncDec	++		995538	1					
ANR	995631	ExpressionStatement	* retstr = '\\0'	1222:1:34620:34634	995538	3	True				
ANR	995632	AssignmentExpression	* retstr = '\\0'		995538	0		=			
ANR	995633	UnaryOperationExpression	* retstr		995538	0					
ANR	995634	UnaryOperator	*		995538	0					
ANR	995635	Identifier	retstr		995538	1					
ANR	995636	PrimaryExpression	'\\0'		995538	1					
ANR	995637	ExpressionStatement	retstr = anchor	1223:1:34637:34652	995538	4	True				
ANR	995638	AssignmentExpression	retstr = anchor		995538	0		=			
ANR	995639	Identifier	retstr		995538	0					
ANR	995640	Identifier	anchor		995538	1					
ANR	995641	ExpressionStatement	str = anchor1	1224:1:34655:34668	995538	5	True				
ANR	995642	AssignmentExpression	str = anchor1		995538	0		=			
ANR	995643	Identifier	str		995538	0					
ANR	995644	Identifier	anchor1		995538	1					
ANR	995645	ExpressionStatement	result = 1	1225:1:34671:34681	995538	6	True				
ANR	995646	AssignmentExpression	result = 1		995538	0		=			
ANR	995647	Identifier	result		995538	0					
ANR	995648	PrimaryExpression	1		995538	1					
ANR	995649	ReturnStatement	return ( result ) ;	1228:4:34694:34708	995538	4	True				
ANR	995650	Identifier	result		995538	0					
ANR	995651	ReturnType	static int		995538	1					
ANR	995652	Identifier	strToMatch		995538	2					
ANR	995653	ParameterList	"const char * str , char * retstr"		995538	3					
ANR	995654	Parameter	const char * str	1202:22:34249:34263	995538	0	True				
ANR	995655	ParameterType	const char *		995538	0					
ANR	995656	Identifier	str		995538	1					
ANR	995657	Parameter	char * retstr	1202:39:34266:34277	995538	1	True				
ANR	995658	ParameterType	char *		995538	0					
ANR	995659	Identifier	retstr		995538	1					
ANR	995660	CFGEntryNode	ENTRY		995538		True				
ANR	995661	CFGExitNode	EXIT		995538		True				
ANR	995662	Symbol	str		995538						
ANR	995663	Symbol	result		995538						
ANR	995664	Symbol	* retstr		995538						
ANR	995665	Symbol	NULL		995538						
ANR	995666	Symbol	tolower		995538						
ANR	995667	Symbol	anchor		995538						
ANR	995668	Symbol	anchor1		995538						
ANR	995669	Symbol	* str		995538						
ANR	995670	Symbol	retstr		995538						
ANR	995671	DeclStmt									
ANR	995672	Decl							char	char *	lang_tag
ANR	995673	DeclStmt									
ANR	995674	Decl							size_t	size_t	lang_tag_len
ANR	995675	DeclStmt									
ANR	995676	Decl							const char	const char *	loc_range
ANR	995677	DeclStmt									
ANR	995678	Decl							size_t	size_t	loc_range_len
ANR	995679	DeclStmt									
ANR	995680	Decl							int	int	result
ANR	995681	DeclStmt									
ANR	995682	Decl							char	char *	token
ANR	995683	DeclStmt									
ANR	995684	Decl							char	char *	chrcheck
ANR	995685	DeclStmt									
ANR	995686	Decl							zend_string	zend_string *	can_lang_tag
ANR	995687	DeclStmt									
ANR	995688	Decl							zend_string	zend_string *	can_loc_range
ANR	995689	DeclStmt									
ANR	995690	Decl							char	char *	cur_lang_tag
ANR	995691	DeclStmt									
ANR	995692	Decl							char	char *	cur_loc_range
ANR	995693	DeclStmt									
ANR	995694	Decl							zend_bool	zend_bool	boolCanonical
ANR	995695	DeclStmt									
ANR	995696	Decl							UErrorCode	UErrorCode	status
ANR	995697	Function	array_cleanup	1403:0:39156:39313							
ANR	995698	FunctionDef	"array_cleanup (char * arr [ ] , int arr_size)"		995697	0					
ANR	995699	CompoundStatement		1404:0:39211:39313	995697	0					
ANR	995700	IdentifierDeclStatement	int i = 0 ;	1405:1:39214:39221	995697	0	True				
ANR	995701	IdentifierDecl	i = 0		995697	0					
ANR	995702	IdentifierDeclType	int		995697	0					
ANR	995703	Identifier	i		995697	1					
ANR	995704	AssignmentExpression	i = 0		995697	2		=			
ANR	995705	Identifier	i		995697	0					
ANR	995706	PrimaryExpression	0		995697	1					
ANR	995707	ForStatement	for ( i = 0 ; i < arr_size ; i ++ )		995697	1					
ANR	995708	ForInit	i = 0 ;	1406:6:39229:39232	995697	0	True				
ANR	995709	AssignmentExpression	i = 0		995697	0		=			
ANR	995710	Identifier	i		995697	0					
ANR	995711	PrimaryExpression	0		995697	1					
ANR	995712	Condition	i < arr_size	1406:11:39234:39244	995697	1	True				
ANR	995713	RelationalExpression	i < arr_size		995697	0		<			
ANR	995714	Identifier	i		995697	0					
ANR	995715	Identifier	arr_size		995697	1					
ANR	995716	PostIncDecOperationExpression	i ++	1406:24:39247:39249	995697	2	True				
ANR	995717	Identifier	i		995697	0					
ANR	995718	IncDec	++		995697	1					
ANR	995719	CompoundStatement		3:29:40:40	995697	3					
ANR	995720	IfStatement	if ( arr [ i * 2 ] )		995697	0					
ANR	995721	Condition	arr [ i * 2 ]	1407:6:39260:39267	995697	0	True				
ANR	995722	ArrayIndexing	arr [ i * 2 ]		995697	0					
ANR	995723	Identifier	arr		995697	0					
ANR	995724	MultiplicativeExpression	i * 2		995697	1		*			
ANR	995725	Identifier	i		995697	0					
ANR	995726	PrimaryExpression	2		995697	1					
ANR	995727	CompoundStatement		4:16:58:58	995697	1					
ANR	995728	ExpressionStatement	efree ( arr [ i * 2 ] )	1408:3:39275:39291	995697	0	True				
ANR	995729	CallExpression	efree ( arr [ i * 2 ] )		995697	0					
ANR	995730	Callee	efree		995697	0					
ANR	995731	Identifier	efree		995697	0					
ANR	995732	ArgumentList	arr [ i * 2 ]		995697	1					
ANR	995733	Argument	arr [ i * 2 ]		995697	0					
ANR	995734	ArrayIndexing	arr [ i * 2 ]		995697	0					
ANR	995735	Identifier	arr		995697	0					
ANR	995736	MultiplicativeExpression	i * 2		995697	1		*			
ANR	995737	Identifier	i		995697	0					
ANR	995738	PrimaryExpression	2		995697	1					
ANR	995739	ExpressionStatement	efree ( arr )	1411:1:39301:39311	995697	2	True				
ANR	995740	CallExpression	efree ( arr )		995697	0					
ANR	995741	Callee	efree		995697	0					
ANR	995742	Identifier	efree		995697	0					
ANR	995743	ArgumentList	arr		995697	1					
ANR	995744	Argument	arr		995697	0					
ANR	995745	Identifier	arr		995697	0					
ANR	995746	ReturnType	static void		995697	1					
ANR	995747	Identifier	array_cleanup		995697	2					
ANR	995748	ParameterList	"char * arr [ ] , int arr_size"		995697	3					
ANR	995749	Parameter	char * arr [ ]	1403:27:39183:39193	995697	0	True				
ANR	995750	ParameterType	char * [ ]		995697	0					
ANR	995751	Identifier	arr		995697	1					
ANR	995752	Parameter	int arr_size	1403:41:39197:39208	995697	1	True				
ANR	995753	ParameterType	int		995697	0					
ANR	995754	Identifier	arr_size		995697	1					
ANR	995755	CFGEntryNode	ENTRY		995697		True				
ANR	995756	CFGExitNode	EXIT		995697		True				
ANR	995757	Symbol	arr		995697						
ANR	995758	Symbol	* i		995697						
ANR	995759	Symbol	* arr		995697						
ANR	995760	Symbol	i		995697						
ANR	995761	Symbol	arr_size		995697						
ANR	995762	Function	lookup_loc_range	1419:0:39489:42946							
ANR	995763	FunctionDef	"lookup_loc_range (const char * loc_range , HashTable * hash_arr , int canonicalize)"		995762	0					
ANR	995764	CompoundStatement		1420:0:39589:42946	995762	0					
ANR	995765	IdentifierDeclStatement	int i = 0 ;	1421:1:39592:39601	995762	0	True				
ANR	995766	IdentifierDecl	i = 0		995762	0					
ANR	995767	IdentifierDeclType	int		995762	0					
ANR	995768	Identifier	i		995762	1					
ANR	995769	AssignmentExpression	i = 0		995762	2		=			
ANR	995770	Identifier	i		995762	0					
ANR	995771	PrimaryExpression	0		995762	1					
ANR	995772	IdentifierDeclStatement	int cur_arr_len = 0 ;	1422:1:39604:39623	995762	1	True				
ANR	995773	IdentifierDecl	cur_arr_len = 0		995762	0					
ANR	995774	IdentifierDeclType	int		995762	0					
ANR	995775	Identifier	cur_arr_len		995762	1					
ANR	995776	AssignmentExpression	cur_arr_len = 0		995762	2		=			
ANR	995777	Identifier	cur_arr_len		995762	0					
ANR	995778	PrimaryExpression	0		995762	1					
ANR	995779	IdentifierDeclStatement	int result = 0 ;	1423:1:39626:39640	995762	2	True				
ANR	995780	IdentifierDecl	result = 0		995762	0					
ANR	995781	IdentifierDeclType	int		995762	0					
ANR	995782	Identifier	result		995762	1					
ANR	995783	AssignmentExpression	result = 0		995762	2		=			
ANR	995784	Identifier	result		995762	0					
ANR	995785	PrimaryExpression	0		995762	1					
ANR	995786	IdentifierDeclStatement	zend_string * lang_tag = NULL ;	1425:1:39644:39672	995762	3	True				
ANR	995787	IdentifierDecl	* lang_tag = NULL		995762	0					
ANR	995788	IdentifierDeclType	zend_string *		995762	0					
ANR	995789	Identifier	lang_tag		995762	1					
ANR	995790	AssignmentExpression	* lang_tag = NULL		995762	2		=			
ANR	995791	Identifier	NULL		995762	0					
ANR	995792	Identifier	NULL		995762	1					
ANR	995793	IdentifierDeclStatement	zval * ele_value = NULL ;	1426:1:39675:39697	995762	4	True				
ANR	995794	IdentifierDecl	* ele_value = NULL		995762	0					
ANR	995795	IdentifierDeclType	zval *		995762	0					
ANR	995796	Identifier	ele_value		995762	1					
ANR	995797	AssignmentExpression	* ele_value = NULL		995762	2		=			
ANR	995798	Identifier	NULL		995762	0					
ANR	995799	Identifier	NULL		995762	1					
ANR	995800	IdentifierDeclStatement	char * * cur_arr = NULL ;	1427:1:39700:39721	995762	5	True				
ANR	995801	IdentifierDecl	* * cur_arr = NULL		995762	0					
ANR	995802	IdentifierDeclType	char * *		995762	0					
ANR	995803	Identifier	cur_arr		995762	1					
ANR	995804	AssignmentExpression	* * cur_arr = NULL		995762	2		=			
ANR	995805	Identifier	NULL		995762	0					
ANR	995806	Identifier	NULL		995762	1					
ANR	995807	IdentifierDeclStatement	char * cur_loc_range = NULL ;	1429:1:39725:39751	995762	6	True				
ANR	995808	IdentifierDecl	* cur_loc_range = NULL		995762	0					
ANR	995809	IdentifierDeclType	char *		995762	0					
ANR	995810	Identifier	cur_loc_range		995762	1					
ANR	995811	AssignmentExpression	* cur_loc_range = NULL		995762	2		=			
ANR	995812	Identifier	NULL		995762	0					
ANR	995813	Identifier	NULL		995762	1					
ANR	995814	IdentifierDeclStatement	zend_string * can_loc_range = NULL ;	1430:1:39754:39787	995762	7	True				
ANR	995815	IdentifierDecl	* can_loc_range = NULL		995762	0					
ANR	995816	IdentifierDeclType	zend_string *		995762	0					
ANR	995817	Identifier	can_loc_range		995762	1					
ANR	995818	AssignmentExpression	* can_loc_range = NULL		995762	2		=			
ANR	995819	Identifier	NULL		995762	0					
ANR	995820	Identifier	NULL		995762	1					
ANR	995821	IdentifierDeclStatement	int saved_pos = 0 ;	1431:1:39790:39807	995762	8	True				
ANR	995822	IdentifierDecl	saved_pos = 0		995762	0					
ANR	995823	IdentifierDeclType	int		995762	0					
ANR	995824	Identifier	saved_pos		995762	1					
ANR	995825	AssignmentExpression	saved_pos = 0		995762	2		=			
ANR	995826	Identifier	saved_pos		995762	0					
ANR	995827	PrimaryExpression	0		995762	1					
ANR	995828	IdentifierDeclStatement	zend_string * return_value = NULL ;	1433:1:39811:39843	995762	9	True				
ANR	995829	IdentifierDecl	* return_value = NULL		995762	0					
ANR	995830	IdentifierDeclType	zend_string *		995762	0					
ANR	995831	Identifier	return_value		995762	1					
ANR	995832	AssignmentExpression	* return_value = NULL		995762	2		=			
ANR	995833	Identifier	NULL		995762	0					
ANR	995834	Identifier	NULL		995762	1					
ANR	995835	ExpressionStatement	"cur_arr = ecalloc ( zend_hash_num_elements ( hash_arr ) * 2 , sizeof ( char * ) )"	1435:1:39847:39916	995762	10	True				
ANR	995836	AssignmentExpression	"cur_arr = ecalloc ( zend_hash_num_elements ( hash_arr ) * 2 , sizeof ( char * ) )"		995762	0		=			
ANR	995837	Identifier	cur_arr		995762	0					
ANR	995838	CallExpression	"ecalloc ( zend_hash_num_elements ( hash_arr ) * 2 , sizeof ( char * ) )"		995762	1					
ANR	995839	Callee	ecalloc		995762	0					
ANR	995840	Identifier	ecalloc		995762	0					
ANR	995841	ArgumentList	zend_hash_num_elements ( hash_arr ) * 2		995762	1					
ANR	995842	Argument	zend_hash_num_elements ( hash_arr ) * 2		995762	0					
ANR	995843	MultiplicativeExpression	zend_hash_num_elements ( hash_arr ) * 2		995762	0		*			
ANR	995844	CallExpression	zend_hash_num_elements ( hash_arr )		995762	0					
ANR	995845	Callee	zend_hash_num_elements		995762	0					
ANR	995846	Identifier	zend_hash_num_elements		995762	0					
ANR	995847	ArgumentList	hash_arr		995762	1					
ANR	995848	Argument	hash_arr		995762	0					
ANR	995849	Identifier	hash_arr		995762	0					
ANR	995850	PrimaryExpression	2		995762	1					
ANR	995851	Argument	sizeof ( char * )		995762	1					
ANR	995852	SizeofExpression	sizeof ( char * )		995762	0					
ANR	995853	Sizeof	sizeof		995762	0					
ANR	995854	SizeofOperand	char *		995762	1					
ANR	995855	Statement	ZEND_HASH_FOREACH_VAL	1436:1:39919:39939	995762	11	True				
ANR	995856	Statement	(	1436:22:39940:39940	995762	12	True				
ANR	995857	Statement	hash_arr	1436:23:39941:39948	995762	13	True				
ANR	995858	Statement	","	1436:31:39949:39949	995762	14	True				
ANR	995859	Statement	ele_value	1436:33:39951:39959	995762	15	True				
ANR	995860	Statement	)	1436:42:39960:39960	995762	16	True				
ANR	995861	CompoundStatement		17:44:372:372	995762	17					
ANR	995862	IfStatement	if ( Z_TYPE_P ( ele_value ) != IS_STRING )		995762	0					
ANR	995863	Condition	Z_TYPE_P ( ele_value ) != IS_STRING	1438:5:40074:40104	995762	0	True				
ANR	995864	EqualityExpression	Z_TYPE_P ( ele_value ) != IS_STRING		995762	0		!=			
ANR	995865	CallExpression	Z_TYPE_P ( ele_value )		995762	0					
ANR	995866	Callee	Z_TYPE_P		995762	0					
ANR	995867	Identifier	Z_TYPE_P		995762	0					
ANR	995868	ArgumentList	ele_value		995762	1					
ANR	995869	Argument	ele_value		995762	0					
ANR	995870	Identifier	ele_value		995762	0					
ANR	995871	Identifier	IS_STRING		995762	1					
ANR	995872	CompoundStatement		19:38:517:517	995762	1					
ANR	995873	ExpressionStatement	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: locale array element is not a string"" , 0 )"	1440:3:40151:40258	995762	0	True				
ANR	995874	CallExpression	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: locale array element is not a string"" , 0 )"		995762	0					
ANR	995875	Callee	intl_error_set		995762	0					
ANR	995876	Identifier	intl_error_set		995762	0					
ANR	995877	ArgumentList	NULL		995762	1					
ANR	995878	Argument	NULL		995762	0					
ANR	995879	Identifier	NULL		995762	0					
ANR	995880	Argument	U_ILLEGAL_ARGUMENT_ERROR		995762	1					
ANR	995881	Identifier	U_ILLEGAL_ARGUMENT_ERROR		995762	0					
ANR	995882	Argument	"""lookup_loc_range: locale array element is not a string"""		995762	2					
ANR	995883	PrimaryExpression	"""lookup_loc_range: locale array element is not a string"""		995762	0					
ANR	995884	Argument	0		995762	3					
ANR	995885	PrimaryExpression	0		995762	0					
ANR	995886	ExpressionStatement	LOOKUP_CLEAN_RETURN ( NULL )	1441:3:40263:40288	995762	1	True				
ANR	995887	CallExpression	LOOKUP_CLEAN_RETURN ( NULL )		995762	0					
ANR	995888	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	995889	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	995890	ArgumentList	NULL		995762	1					
ANR	995891	Argument	NULL		995762	0					
ANR	995892	Identifier	NULL		995762	0					
ANR	995893	ExpressionStatement	"cur_arr [ cur_arr_len * 2 ] = estrndup ( Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"	1443:2:40296:40375	995762	1	True				
ANR	995894	AssignmentExpression	"cur_arr [ cur_arr_len * 2 ] = estrndup ( Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"		995762	0		=			
ANR	995895	ArrayIndexing	cur_arr [ cur_arr_len * 2 ]		995762	0					
ANR	995896	Identifier	cur_arr		995762	0					
ANR	995897	MultiplicativeExpression	cur_arr_len * 2		995762	1		*			
ANR	995898	Identifier	cur_arr_len		995762	0					
ANR	995899	PrimaryExpression	2		995762	1					
ANR	995900	CallExpression	"estrndup ( Z_STRVAL_P ( ele_value ) , Z_STRLEN_P ( ele_value ) )"		995762	1					
ANR	995901	Callee	estrndup		995762	0					
ANR	995902	Identifier	estrndup		995762	0					
ANR	995903	ArgumentList	Z_STRVAL_P ( ele_value )		995762	1					
ANR	995904	Argument	Z_STRVAL_P ( ele_value )		995762	0					
ANR	995905	CallExpression	Z_STRVAL_P ( ele_value )		995762	0					
ANR	995906	Callee	Z_STRVAL_P		995762	0					
ANR	995907	Identifier	Z_STRVAL_P		995762	0					
ANR	995908	ArgumentList	ele_value		995762	1					
ANR	995909	Argument	ele_value		995762	0					
ANR	995910	Identifier	ele_value		995762	0					
ANR	995911	Argument	Z_STRLEN_P ( ele_value )		995762	1					
ANR	995912	CallExpression	Z_STRLEN_P ( ele_value )		995762	0					
ANR	995913	Callee	Z_STRLEN_P		995762	0					
ANR	995914	Identifier	Z_STRLEN_P		995762	0					
ANR	995915	ArgumentList	ele_value		995762	1					
ANR	995916	Argument	ele_value		995762	0					
ANR	995917	Identifier	ele_value		995762	0					
ANR	995918	ExpressionStatement	"result = strToMatch ( Z_STRVAL_P ( ele_value ) , cur_arr [ cur_arr_len * 2 ] )"	1444:2:40379:40445	995762	2	True				
ANR	995919	AssignmentExpression	"result = strToMatch ( Z_STRVAL_P ( ele_value ) , cur_arr [ cur_arr_len * 2 ] )"		995762	0		=			
ANR	995920	Identifier	result		995762	0					
ANR	995921	CallExpression	"strToMatch ( Z_STRVAL_P ( ele_value ) , cur_arr [ cur_arr_len * 2 ] )"		995762	1					
ANR	995922	Callee	strToMatch		995762	0					
ANR	995923	Identifier	strToMatch		995762	0					
ANR	995924	ArgumentList	Z_STRVAL_P ( ele_value )		995762	1					
ANR	995925	Argument	Z_STRVAL_P ( ele_value )		995762	0					
ANR	995926	CallExpression	Z_STRVAL_P ( ele_value )		995762	0					
ANR	995927	Callee	Z_STRVAL_P		995762	0					
ANR	995928	Identifier	Z_STRVAL_P		995762	0					
ANR	995929	ArgumentList	ele_value		995762	1					
ANR	995930	Argument	ele_value		995762	0					
ANR	995931	Identifier	ele_value		995762	0					
ANR	995932	Argument	cur_arr [ cur_arr_len * 2 ]		995762	1					
ANR	995933	ArrayIndexing	cur_arr [ cur_arr_len * 2 ]		995762	0					
ANR	995934	Identifier	cur_arr		995762	0					
ANR	995935	MultiplicativeExpression	cur_arr_len * 2		995762	1		*			
ANR	995936	Identifier	cur_arr_len		995762	0					
ANR	995937	PrimaryExpression	2		995762	1					
ANR	995938	IfStatement	if ( result == 0 )		995762	3					
ANR	995939	Condition	result == 0	1445:5:40452:40462	995762	0	True				
ANR	995940	EqualityExpression	result == 0		995762	0		==			
ANR	995941	Identifier	result		995762	0					
ANR	995942	PrimaryExpression	0		995762	1					
ANR	995943	CompoundStatement		26:18:875:875	995762	1					
ANR	995944	ExpressionStatement	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"	1446:3:40470:40572	995762	0	True				
ANR	995945	CallExpression	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"		995762	0					
ANR	995946	Callee	intl_error_set		995762	0					
ANR	995947	Identifier	intl_error_set		995762	0					
ANR	995948	ArgumentList	NULL		995762	1					
ANR	995949	Argument	NULL		995762	0					
ANR	995950	Identifier	NULL		995762	0					
ANR	995951	Argument	U_ILLEGAL_ARGUMENT_ERROR		995762	1					
ANR	995952	Identifier	U_ILLEGAL_ARGUMENT_ERROR		995762	0					
ANR	995953	Argument	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	2					
ANR	995954	PrimaryExpression	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	0					
ANR	995955	Argument	0		995762	3					
ANR	995956	PrimaryExpression	0		995762	0					
ANR	995957	ExpressionStatement	LOOKUP_CLEAN_RETURN ( NULL )	1447:3:40577:40602	995762	1	True				
ANR	995958	CallExpression	LOOKUP_CLEAN_RETURN ( NULL )		995762	0					
ANR	995959	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	995960	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	995961	ArgumentList	NULL		995762	1					
ANR	995962	Argument	NULL		995762	0					
ANR	995963	Identifier	NULL		995762	0					
ANR	995964	ExpressionStatement	cur_arr [ cur_arr_len * 2 + 1 ] = Z_STRVAL_P ( ele_value )	1449:2:40610:40658	995762	4	True				
ANR	995965	AssignmentExpression	cur_arr [ cur_arr_len * 2 + 1 ] = Z_STRVAL_P ( ele_value )		995762	0		=			
ANR	995966	ArrayIndexing	cur_arr [ cur_arr_len * 2 + 1 ]		995762	0					
ANR	995967	Identifier	cur_arr		995762	0					
ANR	995968	AdditiveExpression	cur_arr_len * 2 + 1		995762	1		+			
ANR	995969	MultiplicativeExpression	cur_arr_len * 2		995762	0		*			
ANR	995970	Identifier	cur_arr_len		995762	0					
ANR	995971	PrimaryExpression	2		995762	1					
ANR	995972	PrimaryExpression	1		995762	1					
ANR	995973	CallExpression	Z_STRVAL_P ( ele_value )		995762	1					
ANR	995974	Callee	Z_STRVAL_P		995762	0					
ANR	995975	Identifier	Z_STRVAL_P		995762	0					
ANR	995976	ArgumentList	ele_value		995762	1					
ANR	995977	Argument	ele_value		995762	0					
ANR	995978	Identifier	ele_value		995762	0					
ANR	995979	ExpressionStatement	cur_arr_len ++	1450:2:40662:40676	995762	5	True				
ANR	995980	PostIncDecOperationExpression	cur_arr_len ++		995762	0					
ANR	995981	Identifier	cur_arr_len		995762	0					
ANR	995982	IncDec	++		995762	1					
ANR	995983	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1451:3:40681:40704	995762	18	True				
ANR	995984	CallExpression	ZEND_HASH_FOREACH_END ( )		995762	0					
ANR	995985	Callee	ZEND_HASH_FOREACH_END		995762	0					
ANR	995986	Identifier	ZEND_HASH_FOREACH_END		995762	0					
ANR	995987	ArgumentList			995762	1					
ANR	995988	IfStatement	if ( canonicalize )		995762	19					
ANR	995989	Condition	canonicalize	1454:4:40763:40774	995762	0	True				
ANR	995990	Identifier	canonicalize		995762	0					
ANR	995991	CompoundStatement		35:18:1187:1187	995762	1					
ANR	995992	ForStatement	for ( i = 0 ; i < cur_arr_len ; i ++ )		995762	0					
ANR	995993	ForInit	i = 0 ;	1455:6:40785:40788	995762	0	True				
ANR	995994	AssignmentExpression	i = 0		995762	0		=			
ANR	995995	Identifier	i		995762	0					
ANR	995996	PrimaryExpression	0		995762	1					
ANR	995997	Condition	i < cur_arr_len	1455:11:40790:40802	995762	1	True				
ANR	995998	RelationalExpression	i < cur_arr_len		995762	0		<			
ANR	995999	Identifier	i		995762	0					
ANR	996000	Identifier	cur_arr_len		995762	1					
ANR	996001	PostIncDecOperationExpression	i ++	1455:26:40805:40807	995762	2	True				
ANR	996002	Identifier	i		995762	0					
ANR	996003	IncDec	++		995762	1					
ANR	996004	CompoundStatement		36:31:1220:1220	995762	3					
ANR	996005	ExpressionStatement	"lang_tag = get_icu_value_internal ( cur_arr [ i * 2 ] , LOC_CANONICALIZE_TAG , & result , 0 )"	1456:3:40815:40896	995762	0	True				
ANR	996006	AssignmentExpression	"lang_tag = get_icu_value_internal ( cur_arr [ i * 2 ] , LOC_CANONICALIZE_TAG , & result , 0 )"		995762	0		=			
ANR	996007	Identifier	lang_tag		995762	0					
ANR	996008	CallExpression	"get_icu_value_internal ( cur_arr [ i * 2 ] , LOC_CANONICALIZE_TAG , & result , 0 )"		995762	1					
ANR	996009	Callee	get_icu_value_internal		995762	0					
ANR	996010	Identifier	get_icu_value_internal		995762	0					
ANR	996011	ArgumentList	cur_arr [ i * 2 ]		995762	1					
ANR	996012	Argument	cur_arr [ i * 2 ]		995762	0					
ANR	996013	ArrayIndexing	cur_arr [ i * 2 ]		995762	0					
ANR	996014	Identifier	cur_arr		995762	0					
ANR	996015	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996016	Identifier	i		995762	0					
ANR	996017	PrimaryExpression	2		995762	1					
ANR	996018	Argument	LOC_CANONICALIZE_TAG		995762	1					
ANR	996019	Identifier	LOC_CANONICALIZE_TAG		995762	0					
ANR	996020	Argument	& result		995762	2					
ANR	996021	UnaryOperationExpression	& result		995762	0					
ANR	996022	UnaryOperator	&		995762	0					
ANR	996023	Identifier	result		995762	1					
ANR	996024	Argument	0		995762	3					
ANR	996025	PrimaryExpression	0		995762	0					
ANR	996026	IfStatement	if ( result != 1 || lang_tag == NULL || ! lang_tag -> val [ 0 ] )		995762	1					
ANR	996027	Condition	result != 1 || lang_tag == NULL || ! lang_tag -> val [ 0 ]	1457:6:40904:40955	995762	0	True				
ANR	996028	OrExpression	result != 1 || lang_tag == NULL || ! lang_tag -> val [ 0 ]		995762	0		||			
ANR	996029	EqualityExpression	result != 1		995762	0		!=			
ANR	996030	Identifier	result		995762	0					
ANR	996031	PrimaryExpression	1		995762	1					
ANR	996032	OrExpression	lang_tag == NULL || ! lang_tag -> val [ 0 ]		995762	1		||			
ANR	996033	EqualityExpression	lang_tag == NULL		995762	0		==			
ANR	996034	Identifier	lang_tag		995762	0					
ANR	996035	Identifier	NULL		995762	1					
ANR	996036	UnaryOperationExpression	! lang_tag -> val [ 0 ]		995762	1					
ANR	996037	UnaryOperator	!		995762	0					
ANR	996038	ArrayIndexing	lang_tag -> val [ 0 ]		995762	1					
ANR	996039	PtrMemberAccess	lang_tag -> val		995762	0					
ANR	996040	Identifier	lang_tag		995762	0					
ANR	996041	Identifier	val		995762	1					
ANR	996042	PrimaryExpression	0		995762	1					
ANR	996043	CompoundStatement		38:60:1368:1368	995762	1					
ANR	996044	IfStatement	if ( lang_tag )		995762	0					
ANR	996045	Condition	lang_tag	1458:7:40967:40974	995762	0	True				
ANR	996046	Identifier	lang_tag		995762	0					
ANR	996047	CompoundStatement		39:17:1387:1387	995762	1					
ANR	996048	ExpressionStatement	zend_string_release ( lang_tag )	1459:5:40984:41013	995762	0	True				
ANR	996049	CallExpression	zend_string_release ( lang_tag )		995762	0					
ANR	996050	Callee	zend_string_release		995762	0					
ANR	996051	Identifier	zend_string_release		995762	0					
ANR	996052	ArgumentList	lang_tag		995762	1					
ANR	996053	Argument	lang_tag		995762	0					
ANR	996054	Identifier	lang_tag		995762	0					
ANR	996055	ExpressionStatement	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"	1461:4:41025:41128	995762	1	True				
ANR	996056	CallExpression	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"		995762	0					
ANR	996057	Callee	intl_error_set		995762	0					
ANR	996058	Identifier	intl_error_set		995762	0					
ANR	996059	ArgumentList	NULL		995762	1					
ANR	996060	Argument	NULL		995762	0					
ANR	996061	Identifier	NULL		995762	0					
ANR	996062	Argument	U_ILLEGAL_ARGUMENT_ERROR		995762	1					
ANR	996063	Identifier	U_ILLEGAL_ARGUMENT_ERROR		995762	0					
ANR	996064	Argument	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	2					
ANR	996065	PrimaryExpression	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	0					
ANR	996066	Argument	0		995762	3					
ANR	996067	PrimaryExpression	0		995762	0					
ANR	996068	ExpressionStatement	LOOKUP_CLEAN_RETURN ( NULL )	1462:4:41134:41159	995762	2	True				
ANR	996069	CallExpression	LOOKUP_CLEAN_RETURN ( NULL )		995762	0					
ANR	996070	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996071	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996072	ArgumentList	NULL		995762	1					
ANR	996073	Argument	NULL		995762	0					
ANR	996074	Identifier	NULL		995762	0					
ANR	996075	ExpressionStatement	"cur_arr [ i * 2 ] = erealloc ( cur_arr [ i * 2 ] , lang_tag -> len + 1 )"	1464:3:41169:41223	995762	2	True				
ANR	996076	AssignmentExpression	"cur_arr [ i * 2 ] = erealloc ( cur_arr [ i * 2 ] , lang_tag -> len + 1 )"		995762	0		=			
ANR	996077	ArrayIndexing	cur_arr [ i * 2 ]		995762	0					
ANR	996078	Identifier	cur_arr		995762	0					
ANR	996079	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996080	Identifier	i		995762	0					
ANR	996081	PrimaryExpression	2		995762	1					
ANR	996082	CallExpression	"erealloc ( cur_arr [ i * 2 ] , lang_tag -> len + 1 )"		995762	1					
ANR	996083	Callee	erealloc		995762	0					
ANR	996084	Identifier	erealloc		995762	0					
ANR	996085	ArgumentList	cur_arr [ i * 2 ]		995762	1					
ANR	996086	Argument	cur_arr [ i * 2 ]		995762	0					
ANR	996087	ArrayIndexing	cur_arr [ i * 2 ]		995762	0					
ANR	996088	Identifier	cur_arr		995762	0					
ANR	996089	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996090	Identifier	i		995762	0					
ANR	996091	PrimaryExpression	2		995762	1					
ANR	996092	Argument	lang_tag -> len + 1		995762	1					
ANR	996093	AdditiveExpression	lang_tag -> len + 1		995762	0		+			
ANR	996094	PtrMemberAccess	lang_tag -> len		995762	0					
ANR	996095	Identifier	lang_tag		995762	0					
ANR	996096	Identifier	len		995762	1					
ANR	996097	PrimaryExpression	1		995762	1					
ANR	996098	ExpressionStatement	"result = strToMatch ( lang_tag -> val , cur_arr [ i * 2 ] )"	1465:3:41228:41276	995762	3	True				
ANR	996099	AssignmentExpression	"result = strToMatch ( lang_tag -> val , cur_arr [ i * 2 ] )"		995762	0		=			
ANR	996100	Identifier	result		995762	0					
ANR	996101	CallExpression	"strToMatch ( lang_tag -> val , cur_arr [ i * 2 ] )"		995762	1					
ANR	996102	Callee	strToMatch		995762	0					
ANR	996103	Identifier	strToMatch		995762	0					
ANR	996104	ArgumentList	lang_tag -> val		995762	1					
ANR	996105	Argument	lang_tag -> val		995762	0					
ANR	996106	PtrMemberAccess	lang_tag -> val		995762	0					
ANR	996107	Identifier	lang_tag		995762	0					
ANR	996108	Identifier	val		995762	1					
ANR	996109	Argument	cur_arr [ i * 2 ]		995762	1					
ANR	996110	ArrayIndexing	cur_arr [ i * 2 ]		995762	0					
ANR	996111	Identifier	cur_arr		995762	0					
ANR	996112	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996113	Identifier	i		995762	0					
ANR	996114	PrimaryExpression	2		995762	1					
ANR	996115	ExpressionStatement	zend_string_release ( lang_tag )	1466:3:41281:41310	995762	4	True				
ANR	996116	CallExpression	zend_string_release ( lang_tag )		995762	0					
ANR	996117	Callee	zend_string_release		995762	0					
ANR	996118	Identifier	zend_string_release		995762	0					
ANR	996119	ArgumentList	lang_tag		995762	1					
ANR	996120	Argument	lang_tag		995762	0					
ANR	996121	Identifier	lang_tag		995762	0					
ANR	996122	IfStatement	if ( result == 0 )		995762	5					
ANR	996123	Condition	result == 0	1467:6:41318:41328	995762	0	True				
ANR	996124	EqualityExpression	result == 0		995762	0		==			
ANR	996125	Identifier	result		995762	0					
ANR	996126	PrimaryExpression	0		995762	1					
ANR	996127	CompoundStatement		48:19:1741:1741	995762	1					
ANR	996128	ExpressionStatement	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"	1468:4:41337:41440	995762	0	True				
ANR	996129	CallExpression	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"		995762	0					
ANR	996130	Callee	intl_error_set		995762	0					
ANR	996131	Identifier	intl_error_set		995762	0					
ANR	996132	ArgumentList	NULL		995762	1					
ANR	996133	Argument	NULL		995762	0					
ANR	996134	Identifier	NULL		995762	0					
ANR	996135	Argument	U_ILLEGAL_ARGUMENT_ERROR		995762	1					
ANR	996136	Identifier	U_ILLEGAL_ARGUMENT_ERROR		995762	0					
ANR	996137	Argument	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	2					
ANR	996138	PrimaryExpression	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	0					
ANR	996139	Argument	0		995762	3					
ANR	996140	PrimaryExpression	0		995762	0					
ANR	996141	ExpressionStatement	LOOKUP_CLEAN_RETURN ( NULL )	1469:4:41446:41471	995762	1	True				
ANR	996142	CallExpression	LOOKUP_CLEAN_RETURN ( NULL )		995762	0					
ANR	996143	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996144	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996145	ArgumentList	NULL		995762	1					
ANR	996146	Argument	NULL		995762	0					
ANR	996147	Identifier	NULL		995762	0					
ANR	996148	IfStatement	if ( canonicalize )		995762	20					
ANR	996149	Condition	canonicalize	1475:4:41491:41502	995762	0	True				
ANR	996150	Identifier	canonicalize		995762	0					
ANR	996151	CompoundStatement		56:18:1915:1915	995762	1					
ANR	996152	ExpressionStatement	"can_loc_range = get_icu_value_internal ( loc_range , LOC_CANONICALIZE_TAG , & result , 0 )"	1477:2:41544:41628	995762	0	True				
ANR	996153	AssignmentExpression	"can_loc_range = get_icu_value_internal ( loc_range , LOC_CANONICALIZE_TAG , & result , 0 )"		995762	0		=			
ANR	996154	Identifier	can_loc_range		995762	0					
ANR	996155	CallExpression	"get_icu_value_internal ( loc_range , LOC_CANONICALIZE_TAG , & result , 0 )"		995762	1					
ANR	996156	Callee	get_icu_value_internal		995762	0					
ANR	996157	Identifier	get_icu_value_internal		995762	0					
ANR	996158	ArgumentList	loc_range		995762	1					
ANR	996159	Argument	loc_range		995762	0					
ANR	996160	Identifier	loc_range		995762	0					
ANR	996161	Argument	LOC_CANONICALIZE_TAG		995762	1					
ANR	996162	Identifier	LOC_CANONICALIZE_TAG		995762	0					
ANR	996163	Argument	& result		995762	2					
ANR	996164	UnaryOperationExpression	& result		995762	0					
ANR	996165	UnaryOperator	&		995762	0					
ANR	996166	Identifier	result		995762	1					
ANR	996167	Argument	0		995762	3					
ANR	996168	PrimaryExpression	0		995762	0					
ANR	996169	IfStatement	if ( result != 1 || can_loc_range == NULL || ! can_loc_range -> val [ 0 ] )		995762	1					
ANR	996170	Condition	result != 1 || can_loc_range == NULL || ! can_loc_range -> val [ 0 ]	1478:6:41636:41697	995762	0	True				
ANR	996171	OrExpression	result != 1 || can_loc_range == NULL || ! can_loc_range -> val [ 0 ]		995762	0		||			
ANR	996172	EqualityExpression	result != 1		995762	0		!=			
ANR	996173	Identifier	result		995762	0					
ANR	996174	PrimaryExpression	1		995762	1					
ANR	996175	OrExpression	can_loc_range == NULL || ! can_loc_range -> val [ 0 ]		995762	1		||			
ANR	996176	EqualityExpression	can_loc_range == NULL		995762	0		==			
ANR	996177	Identifier	can_loc_range		995762	0					
ANR	996178	Identifier	NULL		995762	1					
ANR	996179	UnaryOperationExpression	! can_loc_range -> val [ 0 ]		995762	1					
ANR	996180	UnaryOperator	!		995762	0					
ANR	996181	ArrayIndexing	can_loc_range -> val [ 0 ]		995762	1					
ANR	996182	PtrMemberAccess	can_loc_range -> val		995762	0					
ANR	996183	Identifier	can_loc_range		995762	0					
ANR	996184	Identifier	val		995762	1					
ANR	996185	PrimaryExpression	0		995762	1					
ANR	996186	CompoundStatement		59:70:2110:2110	995762	1					
ANR	996187	ExpressionStatement	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize loc_range"" , 0 )"	1480:3:41720:41825	995762	0	True				
ANR	996188	CallExpression	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize loc_range"" , 0 )"		995762	0					
ANR	996189	Callee	intl_error_set		995762	0					
ANR	996190	Identifier	intl_error_set		995762	0					
ANR	996191	ArgumentList	NULL		995762	1					
ANR	996192	Argument	NULL		995762	0					
ANR	996193	Identifier	NULL		995762	0					
ANR	996194	Argument	U_ILLEGAL_ARGUMENT_ERROR		995762	1					
ANR	996195	Identifier	U_ILLEGAL_ARGUMENT_ERROR		995762	0					
ANR	996196	Argument	"""lookup_loc_range: unable to canonicalize loc_range"""		995762	2					
ANR	996197	PrimaryExpression	"""lookup_loc_range: unable to canonicalize loc_range"""		995762	0					
ANR	996198	Argument	0		995762	3					
ANR	996199	PrimaryExpression	0		995762	0					
ANR	996200	IfStatement	if ( can_loc_range )		995762	1					
ANR	996201	Condition	can_loc_range	1481:6:41833:41845	995762	0	True				
ANR	996202	Identifier	can_loc_range		995762	0					
ANR	996203	CompoundStatement		62:21:2258:2258	995762	1					
ANR	996204	ExpressionStatement	zend_string_release ( can_loc_range )	1482:4:41854:41888	995762	0	True				
ANR	996205	CallExpression	zend_string_release ( can_loc_range )		995762	0					
ANR	996206	Callee	zend_string_release		995762	0					
ANR	996207	Identifier	zend_string_release		995762	0					
ANR	996208	ArgumentList	can_loc_range		995762	1					
ANR	996209	Argument	can_loc_range		995762	0					
ANR	996210	Identifier	can_loc_range		995762	0					
ANR	996211	ExpressionStatement	LOOKUP_CLEAN_RETURN ( NULL )	1484:3:41898:41923	995762	2	True				
ANR	996212	CallExpression	LOOKUP_CLEAN_RETURN ( NULL )		995762	0					
ANR	996213	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996214	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996215	ArgumentList	NULL		995762	1					
ANR	996216	Argument	NULL		995762	0					
ANR	996217	Identifier	NULL		995762	0					
ANR	996218	ElseStatement	else		995762	0					
ANR	996219	CompoundStatement		66:9:2344:2344	995762	0					
ANR	996220	ExpressionStatement	loc_range = can_loc_range -> val	1486:3:41939:41969	995762	0	True				
ANR	996221	AssignmentExpression	loc_range = can_loc_range -> val		995762	0		=			
ANR	996222	Identifier	loc_range		995762	0					
ANR	996223	PtrMemberAccess	can_loc_range -> val		995762	1					
ANR	996224	Identifier	can_loc_range		995762	0					
ANR	996225	Identifier	val		995762	1					
ANR	996226	ExpressionStatement	"cur_loc_range = ecalloc ( 1 , strlen ( loc_range ) + 1 )"	1490:1:41980:42027	995762	21	True				
ANR	996227	AssignmentExpression	"cur_loc_range = ecalloc ( 1 , strlen ( loc_range ) + 1 )"		995762	0		=			
ANR	996228	Identifier	cur_loc_range		995762	0					
ANR	996229	CallExpression	"ecalloc ( 1 , strlen ( loc_range ) + 1 )"		995762	1					
ANR	996230	Callee	ecalloc		995762	0					
ANR	996231	Identifier	ecalloc		995762	0					
ANR	996232	ArgumentList	1		995762	1					
ANR	996233	Argument	1		995762	0					
ANR	996234	PrimaryExpression	1		995762	0					
ANR	996235	Argument	strlen ( loc_range ) + 1		995762	1					
ANR	996236	AdditiveExpression	strlen ( loc_range ) + 1		995762	0		+			
ANR	996237	CallExpression	strlen ( loc_range )		995762	0					
ANR	996238	Callee	strlen		995762	0					
ANR	996239	Identifier	strlen		995762	0					
ANR	996240	ArgumentList	loc_range		995762	1					
ANR	996241	Argument	loc_range		995762	0					
ANR	996242	Identifier	loc_range		995762	0					
ANR	996243	PrimaryExpression	1		995762	1					
ANR	996244	ExpressionStatement	"result = strToMatch ( loc_range , cur_loc_range )"	1492:1:42074:42119	995762	22	True				
ANR	996245	AssignmentExpression	"result = strToMatch ( loc_range , cur_loc_range )"		995762	0		=			
ANR	996246	Identifier	result		995762	0					
ANR	996247	CallExpression	"strToMatch ( loc_range , cur_loc_range )"		995762	1					
ANR	996248	Callee	strToMatch		995762	0					
ANR	996249	Identifier	strToMatch		995762	0					
ANR	996250	ArgumentList	loc_range		995762	1					
ANR	996251	Argument	loc_range		995762	0					
ANR	996252	Identifier	loc_range		995762	0					
ANR	996253	Argument	cur_loc_range		995762	1					
ANR	996254	Identifier	cur_loc_range		995762	0					
ANR	996255	IfStatement	if ( can_loc_range )		995762	23					
ANR	996256	Condition	can_loc_range	1493:4:42125:42137	995762	0	True				
ANR	996257	Identifier	can_loc_range		995762	0					
ANR	996258	CompoundStatement		74:19:2550:2550	995762	1					
ANR	996259	ExpressionStatement	zend_string_release ( can_loc_range )	1494:2:42144:42178	995762	0	True				
ANR	996260	CallExpression	zend_string_release ( can_loc_range )		995762	0					
ANR	996261	Callee	zend_string_release		995762	0					
ANR	996262	Identifier	zend_string_release		995762	0					
ANR	996263	ArgumentList	can_loc_range		995762	1					
ANR	996264	Argument	can_loc_range		995762	0					
ANR	996265	Identifier	can_loc_range		995762	0					
ANR	996266	IfStatement	if ( result == 0 )		995762	24					
ANR	996267	Condition	result == 0	1496:4:42187:42197	995762	0	True				
ANR	996268	EqualityExpression	result == 0		995762	0		==			
ANR	996269	Identifier	result		995762	0					
ANR	996270	PrimaryExpression	0		995762	1					
ANR	996271	CompoundStatement		77:17:2610:2610	995762	1					
ANR	996272	ExpressionStatement	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"	1497:2:42204:42307	995762	0	True				
ANR	996273	CallExpression	"intl_error_set ( NULL , U_ILLEGAL_ARGUMENT_ERROR , ""lookup_loc_range: unable to canonicalize lang_tag"" , 0 )"		995762	0					
ANR	996274	Callee	intl_error_set		995762	0					
ANR	996275	Identifier	intl_error_set		995762	0					
ANR	996276	ArgumentList	NULL		995762	1					
ANR	996277	Argument	NULL		995762	0					
ANR	996278	Identifier	NULL		995762	0					
ANR	996279	Argument	U_ILLEGAL_ARGUMENT_ERROR		995762	1					
ANR	996280	Identifier	U_ILLEGAL_ARGUMENT_ERROR		995762	0					
ANR	996281	Argument	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	2					
ANR	996282	PrimaryExpression	"""lookup_loc_range: unable to canonicalize lang_tag"""		995762	0					
ANR	996283	Argument	0		995762	3					
ANR	996284	PrimaryExpression	0		995762	0					
ANR	996285	ExpressionStatement	LOOKUP_CLEAN_RETURN ( NULL )	1498:2:42311:42336	995762	1	True				
ANR	996286	CallExpression	LOOKUP_CLEAN_RETURN ( NULL )		995762	0					
ANR	996287	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996288	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996289	ArgumentList	NULL		995762	1					
ANR	996290	Argument	NULL		995762	0					
ANR	996291	Identifier	NULL		995762	0					
ANR	996292	ExpressionStatement	saved_pos = strlen ( cur_loc_range )	1502:1:42380:42413	995762	25	True				
ANR	996293	AssignmentExpression	saved_pos = strlen ( cur_loc_range )		995762	0		=			
ANR	996294	Identifier	saved_pos		995762	0					
ANR	996295	CallExpression	strlen ( cur_loc_range )		995762	1					
ANR	996296	Callee	strlen		995762	0					
ANR	996297	Identifier	strlen		995762	0					
ANR	996298	ArgumentList	cur_loc_range		995762	1					
ANR	996299	Argument	cur_loc_range		995762	0					
ANR	996300	Identifier	cur_loc_range		995762	0					
ANR	996301	WhileStatement	while ( saved_pos > 0 )		995762	26					
ANR	996302	Condition	saved_pos > 0	1503:7:42422:42434	995762	0	True				
ANR	996303	RelationalExpression	saved_pos > 0		995762	0		>			
ANR	996304	Identifier	saved_pos		995762	0					
ANR	996305	PrimaryExpression	0		995762	1					
ANR	996306	CompoundStatement		84:22:2847:2847	995762	1					
ANR	996307	ForStatement	for ( i = 0 ; i < cur_arr_len ; i ++ )		995762	0					
ANR	996308	ForInit	i = 0 ;	1504:6:42445:42448	995762	0	True				
ANR	996309	AssignmentExpression	i = 0		995762	0		=			
ANR	996310	Identifier	i		995762	0					
ANR	996311	PrimaryExpression	0		995762	1					
ANR	996312	Condition	i < cur_arr_len	1504:11:42450:42463	995762	1	True				
ANR	996313	RelationalExpression	i < cur_arr_len		995762	0		<			
ANR	996314	Identifier	i		995762	0					
ANR	996315	Identifier	cur_arr_len		995762	1					
ANR	996316	PostIncDecOperationExpression	i ++	1504:27:42466:42468	995762	2	True				
ANR	996317	Identifier	i		995762	0					
ANR	996318	IncDec	++		995762	1					
ANR	996319	CompoundStatement		85:31:2880:2880	995762	3					
ANR	996320	IfStatement	"if ( cur_arr [ i * 2 ] != NULL && strlen ( cur_arr [ i * 2 ] ) == saved_pos && strncmp ( cur_loc_range , cur_arr [ i * 2 ] , saved_pos ) == 0 )"		995762	0					
ANR	996321	Condition	"cur_arr [ i * 2 ] != NULL && strlen ( cur_arr [ i * 2 ] ) == saved_pos && strncmp ( cur_loc_range , cur_arr [ i * 2 ] , saved_pos ) == 0"	1505:6:42478:42590	995762	0	True				
ANR	996322	AndExpression	"cur_arr [ i * 2 ] != NULL && strlen ( cur_arr [ i * 2 ] ) == saved_pos && strncmp ( cur_loc_range , cur_arr [ i * 2 ] , saved_pos ) == 0"		995762	0		&&			
ANR	996323	EqualityExpression	cur_arr [ i * 2 ] != NULL		995762	0		!=			
ANR	996324	ArrayIndexing	cur_arr [ i * 2 ]		995762	0					
ANR	996325	Identifier	cur_arr		995762	0					
ANR	996326	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996327	Identifier	i		995762	0					
ANR	996328	PrimaryExpression	2		995762	1					
ANR	996329	Identifier	NULL		995762	1					
ANR	996330	AndExpression	"strlen ( cur_arr [ i * 2 ] ) == saved_pos && strncmp ( cur_loc_range , cur_arr [ i * 2 ] , saved_pos ) == 0"		995762	1		&&			
ANR	996331	EqualityExpression	strlen ( cur_arr [ i * 2 ] ) == saved_pos		995762	0		==			
ANR	996332	CallExpression	strlen ( cur_arr [ i * 2 ] )		995762	0					
ANR	996333	Callee	strlen		995762	0					
ANR	996334	Identifier	strlen		995762	0					
ANR	996335	ArgumentList	cur_arr [ i * 2 ]		995762	1					
ANR	996336	Argument	cur_arr [ i * 2 ]		995762	0					
ANR	996337	ArrayIndexing	cur_arr [ i * 2 ]		995762	0					
ANR	996338	Identifier	cur_arr		995762	0					
ANR	996339	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996340	Identifier	i		995762	0					
ANR	996341	PrimaryExpression	2		995762	1					
ANR	996342	Identifier	saved_pos		995762	1					
ANR	996343	EqualityExpression	"strncmp ( cur_loc_range , cur_arr [ i * 2 ] , saved_pos ) == 0"		995762	1		==			
ANR	996344	CallExpression	"strncmp ( cur_loc_range , cur_arr [ i * 2 ] , saved_pos )"		995762	0					
ANR	996345	Callee	strncmp		995762	0					
ANR	996346	Identifier	strncmp		995762	0					
ANR	996347	ArgumentList	cur_loc_range		995762	1					
ANR	996348	Argument	cur_loc_range		995762	0					
ANR	996349	Identifier	cur_loc_range		995762	0					
ANR	996350	Argument	cur_arr [ i * 2 ]		995762	1					
ANR	996351	ArrayIndexing	cur_arr [ i * 2 ]		995762	0					
ANR	996352	Identifier	cur_arr		995762	0					
ANR	996353	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996354	Identifier	i		995762	0					
ANR	996355	PrimaryExpression	2		995762	1					
ANR	996356	Argument	saved_pos		995762	2					
ANR	996357	Identifier	saved_pos		995762	0					
ANR	996358	PrimaryExpression	0		995762	1					
ANR	996359	CompoundStatement		88:4:3031:3087	995762	1					
ANR	996360	IdentifierDeclStatement	char * str = canonicalize ? cur_arr [ i * 2 ] : cur_arr [ i * 2 + 1 ] ;	1507:4:42621:42677	995762	0	True				
ANR	996361	IdentifierDecl	* str = canonicalize ? cur_arr [ i * 2 ] : cur_arr [ i * 2 + 1 ]		995762	0					
ANR	996362	IdentifierDeclType	char *		995762	0					
ANR	996363	Identifier	str		995762	1					
ANR	996364	AssignmentExpression	* str = canonicalize ? cur_arr [ i * 2 ] : cur_arr [ i * 2 + 1 ]		995762	2		=			
ANR	996365	Identifier	str		995762	0					
ANR	996366	ConditionalExpression	canonicalize ? cur_arr [ i * 2 ] : cur_arr [ i * 2 + 1 ]		995762	1					
ANR	996367	Condition	canonicalize		995762	0					
ANR	996368	Identifier	canonicalize		995762	0					
ANR	996369	ArrayIndexing	cur_arr [ i * 2 ]		995762	1					
ANR	996370	Identifier	cur_arr		995762	0					
ANR	996371	MultiplicativeExpression	i * 2		995762	1		*			
ANR	996372	Identifier	i		995762	0					
ANR	996373	PrimaryExpression	2		995762	1					
ANR	996374	ArrayIndexing	cur_arr [ i * 2 + 1 ]		995762	2					
ANR	996375	Identifier	cur_arr		995762	0					
ANR	996376	AdditiveExpression	i * 2 + 1		995762	1		+			
ANR	996377	MultiplicativeExpression	i * 2		995762	0		*			
ANR	996378	Identifier	i		995762	0					
ANR	996379	PrimaryExpression	2		995762	1					
ANR	996380	PrimaryExpression	1		995762	1					
ANR	996381	ExpressionStatement	"return_value = zend_string_init ( str , strlen ( str ) , 0 )"	1508:4:42683:42735	995762	1	True				
ANR	996382	AssignmentExpression	"return_value = zend_string_init ( str , strlen ( str ) , 0 )"		995762	0		=			
ANR	996383	Identifier	return_value		995762	0					
ANR	996384	CallExpression	"zend_string_init ( str , strlen ( str ) , 0 )"		995762	1					
ANR	996385	Callee	zend_string_init		995762	0					
ANR	996386	Identifier	zend_string_init		995762	0					
ANR	996387	ArgumentList	str		995762	1					
ANR	996388	Argument	str		995762	0					
ANR	996389	Identifier	str		995762	0					
ANR	996390	Argument	strlen ( str )		995762	1					
ANR	996391	CallExpression	strlen ( str )		995762	0					
ANR	996392	Callee	strlen		995762	0					
ANR	996393	Identifier	strlen		995762	0					
ANR	996394	ArgumentList	str		995762	1					
ANR	996395	Argument	str		995762	0					
ANR	996396	Identifier	str		995762	0					
ANR	996397	Argument	0		995762	2					
ANR	996398	PrimaryExpression	0		995762	0					
ANR	996399	ExpressionStatement	efree ( cur_loc_range )	1509:4:42741:42761	995762	2	True				
ANR	996400	CallExpression	efree ( cur_loc_range )		995762	0					
ANR	996401	Callee	efree		995762	0					
ANR	996402	Identifier	efree		995762	0					
ANR	996403	ArgumentList	cur_loc_range		995762	1					
ANR	996404	Argument	cur_loc_range		995762	0					
ANR	996405	Identifier	cur_loc_range		995762	0					
ANR	996406	ExpressionStatement	LOOKUP_CLEAN_RETURN ( return_value )	1510:4:42767:42800	995762	3	True				
ANR	996407	CallExpression	LOOKUP_CLEAN_RETURN ( return_value )		995762	0					
ANR	996408	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996409	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996410	ArgumentList	return_value		995762	1					
ANR	996411	Argument	return_value		995762	0					
ANR	996412	Identifier	return_value		995762	0					
ANR	996413	ExpressionStatement	"saved_pos = getStrrtokenPos ( cur_loc_range , saved_pos )"	1513:2:42813:42866	995762	1	True				
ANR	996414	AssignmentExpression	"saved_pos = getStrrtokenPos ( cur_loc_range , saved_pos )"		995762	0		=			
ANR	996415	Identifier	saved_pos		995762	0					
ANR	996416	CallExpression	"getStrrtokenPos ( cur_loc_range , saved_pos )"		995762	1					
ANR	996417	Callee	getStrrtokenPos		995762	0					
ANR	996418	Identifier	getStrrtokenPos		995762	0					
ANR	996419	ArgumentList	cur_loc_range		995762	1					
ANR	996420	Argument	cur_loc_range		995762	0					
ANR	996421	Identifier	cur_loc_range		995762	0					
ANR	996422	Argument	saved_pos		995762	1					
ANR	996423	Identifier	saved_pos		995762	0					
ANR	996424	ExpressionStatement	efree ( cur_loc_range )	1517:1:42896:42916	995762	27	True				
ANR	996425	CallExpression	efree ( cur_loc_range )		995762	0					
ANR	996426	Callee	efree		995762	0					
ANR	996427	Identifier	efree		995762	0					
ANR	996428	ArgumentList	cur_loc_range		995762	1					
ANR	996429	Argument	cur_loc_range		995762	0					
ANR	996430	Identifier	cur_loc_range		995762	0					
ANR	996431	ExpressionStatement	LOOKUP_CLEAN_RETURN ( NULL )	1518:1:42919:42944	995762	28	True				
ANR	996432	CallExpression	LOOKUP_CLEAN_RETURN ( NULL )		995762	0					
ANR	996433	Callee	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996434	Identifier	LOOKUP_CLEAN_RETURN		995762	0					
ANR	996435	ArgumentList	NULL		995762	1					
ANR	996436	Argument	NULL		995762	0					
ANR	996437	Identifier	NULL		995762	0					
ANR	996438	ReturnType	static zend_string *		995762	1					
ANR	996439	Identifier	lookup_loc_range		995762	2					
ANR	996440	ParameterList	"const char * loc_range , HashTable * hash_arr , int canonicalize"		995762	3					
ANR	996441	Parameter	const char * loc_range	1419:37:39526:39546	995762	0	True				
ANR	996442	ParameterType	const char *		995762	0					
ANR	996443	Identifier	loc_range		995762	1					
ANR	996444	Parameter	HashTable * hash_arr	1419:60:39549:39567	995762	1	True				
ANR	996445	ParameterType	HashTable *		995762	0					
ANR	996446	Identifier	hash_arr		995762	1					
ANR	996447	Parameter	int canonicalize	1419:81:39570:39585	995762	2	True				
ANR	996448	ParameterType	int		995762	0					
ANR	996449	Identifier	canonicalize		995762	1					
ANR	996450	CFGEntryNode	ENTRY		995762		True				
ANR	996451	CFGExitNode	EXIT		995762		True				
ANR	996452	Symbol	lang_tag		995762						
ANR	996453	Symbol	cur_arr		995762						
ANR	996454	Symbol	* lang_tag -> val		995762						
ANR	996455	Symbol	return_value		995762						
ANR	996456	Symbol	lang_tag -> len		995762						
ANR	996457	Symbol	can_loc_range -> val		995762						
ANR	996458	Symbol	ele_value		995762						
ANR	996459	Symbol	* can_loc_range		995762						
ANR	996460	Symbol	* * can_loc_range		995762						
ANR	996461	Symbol	result		995762						
ANR	996462	Symbol	strlen		995762						
ANR	996463	Symbol	strncmp		995762						
ANR	996464	Symbol	zend_string_init		995762						
ANR	996465	Symbol	estrndup		995762						
ANR	996466	Symbol	can_loc_range		995762						
ANR	996467	Symbol	& result		995762						
ANR	996468	Symbol	ecalloc		995762						
ANR	996469	Symbol	Z_STRLEN_P		995762						
ANR	996470	Symbol	IS_STRING		995762						
ANR	996471	Symbol	* lang_tag		995762						
ANR	996472	Symbol	erealloc		995762						
ANR	996473	Symbol	canonicalize		995762						
ANR	996474	Symbol	LOC_CANONICALIZE_TAG		995762						
ANR	996475	Symbol	NULL		995762						
ANR	996476	Symbol	* can_loc_range -> val		995762						
ANR	996477	Symbol	loc_range		995762						
ANR	996478	Symbol	zend_hash_num_elements		995762						
ANR	996479	Symbol	U_ILLEGAL_ARGUMENT_ERROR		995762						
ANR	996480	Symbol	i		995762						
ANR	996481	Symbol	hash_arr		995762						
ANR	996482	Symbol	saved_pos		995762						
ANR	996483	Symbol	* * lang_tag		995762						
ANR	996484	Symbol	Z_TYPE_P		995762						
ANR	996485	Symbol	Z_STRVAL_P		995762						
ANR	996486	Symbol	* cur_arr		995762						
ANR	996487	Symbol	cur_loc_range		995762						
ANR	996488	Symbol	str		995762						
ANR	996489	Symbol	lang_tag -> val		995762						
ANR	996490	Symbol	getStrrtokenPos		995762						
ANR	996491	Symbol	get_icu_value_internal		995762						
ANR	996492	Symbol	* i		995762						
ANR	996493	Symbol	* cur_arr_len		995762						
ANR	996494	Symbol	cur_arr_len		995762						
ANR	996495	Symbol	strToMatch		995762						
ANR	996496	DeclStmt									
ANR	996497	Decl							zend_string	zend_string *	fallback_loc_str
ANR	996498	DeclStmt									
ANR	996499	Decl							const char	const char *	loc_range
ANR	996500	DeclStmt									
ANR	996501	Decl							size_t	size_t	loc_range_len
ANR	996502	DeclStmt									
ANR	996503	Decl							zval	zval *	arr
ANR	996504	DeclStmt									
ANR	996505	Decl							HashTable	HashTable *	hash_arr
ANR	996506	DeclStmt									
ANR	996507	Decl							zend_bool	zend_bool	boolCanonical
ANR	996508	DeclStmt									
ANR	996509	Decl							zend_string	zend_string *	result_str
ANR	996510	DeclStmt									
ANR	996511	Decl							UEnumeration	UEnumeration *	available
ANR	996512	DeclStmt									
ANR	996513	Decl							char	char *	http_accept
ANR	996514	DeclStmt									
ANR	996515	Decl							size_t	size_t	http_accept_len
ANR	996516	DeclStmt									
ANR	996517	Decl							UErrorCode	UErrorCode	status
ANR	996518	DeclStmt									
ANR	996519	Decl							int	int	len
ANR	996520	DeclStmt									
ANR	996521	Decl							char	char [ INTL_MAX_LOCALE_LEN + 1 ]	resultLocale
ANR	996522	DeclStmt									
ANR	996523	Decl							UAcceptResult	UAcceptResult	outResult
